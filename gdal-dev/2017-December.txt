From philippe.ghesquiere at airbus.com  Fri Dec  1 08:42:25 2017
From: philippe.ghesquiere at airbus.com (Bugbuster)
Date: Fri, 1 Dec 2017 09:42:25 -0700 (MST)
Subject: [gdal-dev] How to tell gdal_translate replace BLOCKA in a NITF to
 NITF conversion
Message-ID: <1512146545213-0.post@n6.nabble.com>

Dear all,

I would like to modify all geolocation information in a NITF image. The
original image (*MyOriginalNTIF.nsf*) is not corrrectly located.

I know a way to make sure /gdal_translate/ will ignore ALL geographic
information form original image. I just need to compute my new NITF image in
*two steps* :
1) convert originial NITF image into a plain TIF image :
/gdal_translate -of GTiff -co PROFILE=baseline MyOriginalNTIF.nsf
MyOriginalNTIF.tif/

2) convert the intermediate plain TIF image into NITF with my coputed
location information :
/gdal_translate -of NITF -a_srs epsg:4326 -gcp xxx -gcp yyy -gcp zzz -gcp
ttt -co TRE=BLOCKA='001000.....010.0' MyOriginalNTIF.tif
MyNewRelocatedNITF.nsf'/

This is not very efficient. I would like to do it in a *single step*.
However, the direct /gdal_translate/ from NITF to NITF does not work as I
expect it : the new BLOCKA is ignored and I always get the *original
BLOCKA*.

My question : is there a way to tell /gdal_translate/ (or NITF driver) to
consider the input image as a non-geolocated image ?

Thank you for your help
Philippe




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Fri Dec  1 10:01:00 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 01 Dec 2017 19:01:00 +0100
Subject: [gdal-dev] How to tell gdal_translate replace BLOCKA in a NITF
	to NITF conversion
In-Reply-To: <1512146545213-0.post@n6.nabble.com>
References: <1512146545213-0.post@n6.nabble.com>
Message-ID: <2491572.TeBnBadglv@even-i700>

On vendredi 1 décembre 2017 09:42:25 CET Bugbuster wrote:
> Dear all,
> 
> I would like to modify all geolocation information in a NITF image. The
> original image (*MyOriginalNTIF.nsf*) is not corrrectly located.
> 
> I know a way to make sure /gdal_translate/ will ignore ALL geographic
> information form original image. I just need to compute my new NITF image in
> *two steps* :
> 1) convert originial NITF image into a plain TIF image :
> /gdal_translate -of GTiff -co PROFILE=baseline MyOriginalNTIF.nsf
> MyOriginalNTIF.tif/
> 
> 2) convert the intermediate plain TIF image into NITF with my coputed
> location information :
> /gdal_translate -of NITF -a_srs epsg:4326 -gcp xxx -gcp yyy -gcp zzz -gcp
> ttt -co TRE=BLOCKA='001000.....010.0' MyOriginalNTIF.tif
> MyNewRelocatedNITF.nsf'/
> 
> This is not very efficient. I would like to do it in a *single step*.
> However, the direct /gdal_translate/ from NITF to NITF does not work as I
> expect it : the new BLOCKA is ignored and I always get the *original
> BLOCKA*.
> 
> My question : is there a way to tell /gdal_translate/ (or NITF driver) to
> consider the input image as a non-geolocated image ?

Philippe,

I can't think of a better workaround (you could possible just translate to VRT and remove the 
metadata in the VRT to make things faster, if size/speed is a concern). But I've just fixed that 
issue per:
https://trac.osgeo.org/gdal/changeset/40900

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171201/02f3ffa1/attachment.html>

From kkondo at jp.fujitsu.com  Sun Dec  3 21:45:44 2017
From: kkondo at jp.fujitsu.com (Kondou, Kentarou)
Date: Mon, 4 Dec 2017 05:45:44 +0000
Subject: [gdal-dev] gdal_version seems incorrect in
	gdal-2.2.3/swig/python/setup.py
Message-ID: <C9E2DF39-3362-4313-8633-94D6BDED33ED@jp.fujitsu.com>

Hello,

In gdal-2.2.3/swig/python/setup.py, gdal_version is observed to be defined not as 2.2.3 but as 2.2.2 as follows:

$ wget http://download.osgeo.org/gdal/2.2.3/gdal-2.2.3.tar.gz
$ grep -d skip -e "2\.2\." gdal-2.2.3/swig/python/*
gdal-2.2.3/swig/python/README.txt: * libgdal (2.2.3 or greater) and header files (gdal-devel)
gdal-2.2.3/swig/python/setup.py:gdal_version = '2.2.2'

Sincerely,
Kentaro Kondo

—————————————————————————————————
Kentaro Kondo



From philippe.ghesquiere at airbus.com  Sun Dec  3 23:58:03 2017
From: philippe.ghesquiere at airbus.com (Bugbuster)
Date: Mon, 4 Dec 2017 00:58:03 -0700 (MST)
Subject: [gdal-dev] How to tell gdal_translate replace BLOCKA in a NITF
 to NITF conversion
In-Reply-To: <2491572.TeBnBadglv@even-i700>
References: <1512146545213-0.post@n6.nabble.com> <2491572.TeBnBadglv@even-i700>
Message-ID: <1512374283252-0.post@n6.nabble.com>

Hi Even,

thanks a lot for your quick and efficient fix.

Philippe



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From obrlsoilau at gmail.com  Mon Dec  4 01:19:37 2017
From: obrlsoilau at gmail.com (obrl soil)
Date: Mon, 4 Dec 2017 19:19:37 +1000
Subject: [gdal-dev] openFileGDB driver - polygons with bezier curves not
	exporting correctly
Message-ID: <CALG31BWHGPuGHTJYuneU8yW6uhhEYtPrn799iJ85y+2hKvhd8A@mail.gmail.com>

Hi,

Cross-posting from
https://gis.stackexchange.com/questions/264026/gdal-and-openfilegdb-driver-polygons-with-bezier-curves-not-exporting-correctl

System: Win 7, OSgeo4W package 64 bit (current to 3/12/17), GDAL 2.2.3

I have been provided with a polygon layer in ESRI FileGDB format
(created in ArcMap v10.3 at least, maybe 10.4 or 10.4.1). The polygons
in the layer have been digitised using a mix of straight line segments
and bezier curves / true arcs, which I've verified in ArcMap by
looking at the geometry in edit mode.

GDAL > 2.2.0 should be able to read and export CURVE-type geometries
correctly (e.g. to GPKG, which can support those geometry types) but I
can't get the export to work; e.g.

    # OGR_SKIP just forces use of OpenFileGDB driver, but the
    # same thing happens with either:

    ogr2ogr --config OGR_SKIP FileGDB -f GPKG C:/DATA/output.gpkg
C:/DATA/input.gdb LAYERNAME

still converts all the curves to a million tiny straight line
segments. The output file size balloons to ~300MB (from an 8MB source
file), making the data almost impossible to use. Even plotting is
difficult, forget any further geometric ops. Trying to force the issue
with -nlt CURVEPOLYGON has had no effect. Opening the layer in QGIS
2.18.14 produces the same results, as does import to R with
sf::st_read (these two rely on GDAL 2.2.3 and 2.2.0 respectively to
access GDBs on my machine).

ogrinfo reports the geometry type for the layer as Multi Polygon, as
does QGIS - and even Arc itself reports them as 'Polygon' in its own
Layer Properties interface, but I don't think the Feature Class
definition distinguishes between different polygon types.

Is this a GDAL bug (eg driver mis-detecting geom type) or an Arc bug
(eg some kind of failure to metadata properly)?

The gdb in question is at
https://github.com/obrl-soil/bits-n-pieces/tree/master/curvepolys

thanks,
Lauren

From even.rouault at spatialys.com  Mon Dec  4 03:43:53 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 04 Dec 2017 12:43:53 +0100
Subject: [gdal-dev] gdal_version seems incorrect in
	gdal-2.2.3/swig/python/setup.py
In-Reply-To: <C9E2DF39-3362-4313-8633-94D6BDED33ED@jp.fujitsu.com>
References: <C9E2DF39-3362-4313-8633-94D6BDED33ED@jp.fujitsu.com>
Message-ID: <3952148.a7YKxxGOKV@even-i700>

On lundi 4 décembre 2017 05:45:44 CET Kondou, Kentarou wrote:
> Hello,
> 
> In gdal-2.2.3/swig/python/setup.py, gdal_version is observed to be 
defined
> not as 2.2.3 but as 2.2.2 as follows:

Yes I've noticed this just after the release. This is fixed in the 2.2 branch.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171204/1235ecd1/attachment.html>

From even.rouault at spatialys.com  Mon Dec  4 04:42:14 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 04 Dec 2017 13:42:14 +0100
Subject: [gdal-dev] openFileGDB driver - polygons with bezier curves not
	exporting correctly
In-Reply-To: <CALG31BWHGPuGHTJYuneU8yW6uhhEYtPrn799iJ85y+2hKvhd8A@mail.gmail.com>
References: <CALG31BWHGPuGHTJYuneU8yW6uhhEYtPrn799iJ85y+2hKvhd8A@mail.gmail.com>
Message-ID: <2708885.milLoO1lO1@even-i700>

> I have been provided with a polygon layer in ESRI FileGDB format
> (created in ArcMap v10.3 at least, maybe 10.4 or 10.4.1). The polygons
> in the layer have been digitised using a mix of straight line segments
> and bezier curves / true arcs, which I've verified in ArcMap by
> looking at the geometry in edit mode.
> 

Lauren,

Bezier curves have no equivalent representation in Single Feature modelling, so they are 
linearized as small straight segments. Up to now, 100 intermediate points were used, which 
in a case like your dataset was indeed excessive. I've tweaked the logic in trunk to be smarter 
(taking into account the angular difference between the start and end tangents, and the 
relative length of those tangents vs the direct distance), and now the resulting GPKG from 
the conversion is 9 MB, with after a quick visual check is nearly rendered the same as the 
previous brute force version

https://trac.osgeo.org/gdal/changeset/40941

Regarding layer geometry types, given that there will be a mix of MultiPolygon and 
MultiSurface (MultiSurface due to the polygons with circular portion), and that this cannot be 
anticipated before reading the layer content, you may want to either add "-nlt 
MULTISURFACE" (that will keep the circular portion as such), or "-nlt MULTIPOLYGON") (to 
linearize everything). On your sample dataset, the difference of size is neglectable: 9064448 
for the output of -nlt MYLTISURFACE vs 9080832 for the output of -nlt MULTIPOLYGON.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171204/c7c5e593/attachment.html>

From even.rouault at spatialys.com  Mon Dec  4 11:46:08 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 04 Dec 2017 20:46:08 +0100
Subject: [gdal-dev] GRIB driver updates / call for testing / TDLPACK
Message-ID: <1600416.aKiTFXnYtV@even-i700>

Hi,

I wanted to inform you that the GRIB driver has received significant updates lately in trunk :
* the underlying degrib and g2clib libraries used to do the GRIB1 & GRIB2 parsing have been 
updated to their latest upstream versions (*). Given that they are patched in GDAL for various 
reasons (virtual I/O capabilities, security fixes, other fixes), the update involved merging, and 
thus regressions might potentially have sliped in.
* various improvements on top of that:
   - faster gdalinfo on GRIB2 products on multiband datasets (no need to decompress the grid 
data of the band other than the first one)
   - avoid erroring out on unsupported product definition template
   - fix in the GRIB1 reader that should make it possible to read more products (those with 
NV,the number of vertical coordinate parameters, different from 0, which causes previously 
error messages like "GRIB1 GDS: Expect PV = 255 !=33")
* addition of GRIB2 write support

So I'd appreciate testing from users to confirm if products they managed to read with past 
versions are still readable with trunk.

I'm wondering if anyone relies on the support for the TDLPACK that apparently the degrib 
library supports. This isn't even documented in the
http://gdal.org/frmt_grib.html help page.  From what I can read in 
https://github.com/eengl/pytdlpack , it seems that TDLPACK is mostly an internal format of 
NOAA/NWS Meteorological Development Lab. Couldn't find any publicly available file in that 
format. If nobody uses this capability, I'd prefer we comment out all the parts related to 
TDLPack so as to reduce the vulnerability surface.

Even

(*) https://svn.osgeo.org/gdal/trunk/gdal/frmts/grib/degrib/README.TXT

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171204/3e2d7166/attachment-0001.html>

From schwehr at gmail.com  Mon Dec  4 12:32:08 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 4 Dec 2017 12:32:08 -0800
Subject: [gdal-dev] GRIB driver updates / call for testing / TDLPACK
In-Reply-To: <1600416.aKiTFXnYtV@even-i700>
References: <1600416.aKiTFXnYtV@even-i700>
Message-ID: <CACmBxysC=sn+t7Qi5C=GS0u6-MLyQRGdNP2sYk4buGgKwbY3Mg@mail.gmail.com>

I'm pretty much up to head in production and testing is doing fine.  But...
It's only been a couple hours.  If there is nothing from me in the next day
or two, I give it a +1.  Thanks for the hard work!

My first pass check with TDLPACK is that I know of nobody who uses it.

On Mon, Dec 4, 2017 at 11:46 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
>
>
> I wanted to inform you that the GRIB driver has received significant
> updates lately in trunk :
>
> * the underlying degrib and g2clib libraries used to do the GRIB1 & GRIB2
> parsing have been updated to their latest upstream versions (*). Given that
> they are patched in GDAL for various reasons (virtual I/O capabilities,
> security fixes, other fixes), the update involved merging, and thus
> regressions might potentially have sliped in.
>
> * various improvements on top of that:
>
> - faster gdalinfo on GRIB2 products on multiband datasets (no need to
> decompress the grid data of the band other than the first one)
>
> - avoid erroring out on unsupported product definition template
>
> - fix in the GRIB1 reader that should make it possible to read more
> products (those with NV,the number of vertical coordinate parameters,
> different from 0, which causes previously error messages like "GRIB1 GDS:
> Expect PV = 255 !=33")
>
> * addition of GRIB2 write support
>
>
>
> So I'd appreciate testing from users to confirm if products they managed
> to read with past versions are still readable with trunk.
>
>
>
> I'm wondering if anyone relies on the support for the TDLPACK that
> apparently the degrib library supports. This isn't even documented in the
>
> http://gdal.org/frmt_grib.html help page. From what I can read in
>
> https://github.com/eengl/pytdlpack , it seems that TDLPACK is mostly an
> internal format of NOAA/NWS Meteorological Development Lab. Couldn't find
> any publicly available file in that format. If nobody uses this capability,
> I'd prefer we comment out all the parts related to TDLPack so as to reduce
> the vulnerability surface.
>
>
>
> Even
>
>
>
> (*) https://svn.osgeo.org/gdal/trunk/gdal/frmts/grib/degrib/README.TXT
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171204/ab4381cc/attachment.html>

From obrlsoilau at gmail.com  Mon Dec  4 18:45:04 2017
From: obrlsoilau at gmail.com (obrl soil)
Date: Tue, 5 Dec 2017 12:45:04 +1000
Subject: [gdal-dev] openFileGDB driver - polygons with bezier curves not
 exporting correctly
In-Reply-To: <2708885.milLoO1lO1@even-i700>
References: <CALG31BWHGPuGHTJYuneU8yW6uhhEYtPrn799iJ85y+2hKvhd8A@mail.gmail.com>
 <2708885.milLoO1lO1@even-i700>
Message-ID: <CALG31BXHCR_B_P1uKud6X7uVYj73M_2J5fQ4J=oR5QFcunDgyg@mail.gmail.com>

Even, thanks so much for the rapid fix. I'll test it out once the
OSGeo4W gdal-dev version updates.

Regards
Lauren

On Mon, Dec 4, 2017 at 10:42 PM, Even Rouault
<even.rouault at spatialys.com> wrote:
>> I have been provided with a polygon layer in ESRI FileGDB format
>
>> (created in ArcMap v10.3 at least, maybe 10.4 or 10.4.1). The polygons
>
>> in the layer have been digitised using a mix of straight line segments
>
>> and bezier curves / true arcs, which I've verified in ArcMap by
>
>> looking at the geometry in edit mode.
>
>>
>
>
>
> Lauren,
>
>
>
> Bezier curves have no equivalent representation in Single Feature modelling,
> so they are linearized as small straight segments. Up to now, 100
> intermediate points were used, which in a case like your dataset was indeed
> excessive. I've tweaked the logic in trunk to be smarter (taking into
> account the angular difference between the start and end tangents, and the
> relative length of those tangents vs the direct distance), and now the
> resulting GPKG from the conversion is 9 MB, with after a quick visual check
> is nearly rendered the same as the previous brute force version
>
>
>
> https://trac.osgeo.org/gdal/changeset/40941
>
>
>
> Regarding layer geometry types, given that there will be a mix of
> MultiPolygon and MultiSurface (MultiSurface due to the polygons with
> circular portion), and that this cannot be anticipated before reading the
> layer content, you may want to either add "-nlt MULTISURFACE" (that will
> keep the circular portion as such), or "-nlt MULTIPOLYGON") (to linearize
> everything). On your sample dataset, the difference of size is neglectable:
> 9064448 for the output of -nlt MYLTISURFACE vs 9080832 for the output of
> -nlt MULTIPOLYGON.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com

From schwehr at gmail.com  Tue Dec  5 07:15:39 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 5 Dec 2017 07:15:39 -0800
Subject: [gdal-dev] GRIB driver updates / call for testing / TDLPACK
In-Reply-To: <CACmBxysC=sn+t7Qi5C=GS0u6-MLyQRGdNP2sYk4buGgKwbY3Mg@mail.gmail.com>
References: <1600416.aKiTFXnYtV@even-i700>
 <CACmBxysC=sn+t7Qi5C=GS0u6-MLyQRGdNP2sYk4buGgKwbY3Mg@mail.gmail.com>
Message-ID: <CACmBxyv-CQvn1y7+g1Wdo9fu5+W4TWw+9i4_u+-S+aqgf3NPwQ@mail.gmail.com>

I've found nothing that depends on TDLPACK

On Mon, Dec 4, 2017 at 12:32 PM, Kurt Schwehr <schwehr at gmail.com> wrote:

> I'm pretty much up to head in production and testing is doing fine.
> But... It's only been a couple hours.  If there is nothing from me in the
> next day or two, I give it a +1.  Thanks for the hard work!
>
> My first pass check with TDLPACK is that I know of nobody who uses it.
>
> On Mon, Dec 4, 2017 at 11:46 AM, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> Hi,
>>
>>
>>
>> I wanted to inform you that the GRIB driver has received significant
>> updates lately in trunk :
>>
>> * the underlying degrib and g2clib libraries used to do the GRIB1 & GRIB2
>> parsing have been updated to their latest upstream versions (*). Given that
>> they are patched in GDAL for various reasons (virtual I/O capabilities,
>> security fixes, other fixes), the update involved merging, and thus
>> regressions might potentially have sliped in.
>>
>> * various improvements on top of that:
>>
>> - faster gdalinfo on GRIB2 products on multiband datasets (no need to
>> decompress the grid data of the band other than the first one)
>>
>> - avoid erroring out on unsupported product definition template
>>
>> - fix in the GRIB1 reader that should make it possible to read more
>> products (those with NV,the number of vertical coordinate parameters,
>> different from 0, which causes previously error messages like "GRIB1 GDS:
>> Expect PV = 255 !=33")
>>
>> * addition of GRIB2 write support
>>
>>
>>
>> So I'd appreciate testing from users to confirm if products they managed
>> to read with past versions are still readable with trunk.
>>
>>
>>
>> I'm wondering if anyone relies on the support for the TDLPACK that
>> apparently the degrib library supports. This isn't even documented in the
>>
>> http://gdal.org/frmt_grib.html help page. From what I can read in
>>
>> https://github.com/eengl/pytdlpack , it seems that TDLPACK is mostly an
>> internal format of NOAA/NWS Meteorological Development Lab. Couldn't find
>> any publicly available file in that format. If nobody uses this capability,
>> I'd prefer we comment out all the parts related to TDLPack so as to reduce
>> the vulnerability surface.
>>
>>
>>
>> Even
>>
>>
>>
>> (*) https://svn.osgeo.org/gdal/trunk/gdal/frmts/grib/degrib/README.TXT
>>
>>
>>
>> --
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
>
> --
> --
> http://schwehr.org
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171205/f2201d5a/attachment.html>

From jungjw at google.com  Tue Dec  5 10:30:51 2017
From: jungjw at google.com (Jaewoong Jung)
Date: Tue, 5 Dec 2017 10:30:51 -0800
Subject: [gdal-dev] Alternative to seekgb in g2clib?
Message-ID: <CAMVQHGM-yhRLAGAD0T2=OJ6adS-MsgEd1tVLdSQKhiufP6UeRA@mail.gmail.com>

Hello,

Could you recommend an alternative way to scan and extract information from
grib2 files without using seekgb, which has been excluded from gdal
<https://trac.osgeo.org/gdal/changeset/40756/> recently?

I own a piece of code at Google that uses gdal g2clib to parse grib2 files.
It's really simple code that scans all grib messages in a file using seekgb
and extracts the core information my project is interested in.

The recent removal of seekgb broke the code. Though I could simply copy the
logic into my code, I wonder if there's an alternative way to achieve the
goal using a different function in the gdal library.

Cheers,
Jaewoong
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171205/dc379756/attachment-0001.html>

From even.rouault at spatialys.com  Tue Dec  5 12:14:25 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 05 Dec 2017 21:14:25 +0100
Subject: [gdal-dev] Alternative to seekgb in g2clib?
In-Reply-To: <CAMVQHGM-yhRLAGAD0T2=OJ6adS-MsgEd1tVLdSQKhiufP6UeRA@mail.gmail.com>
References: <CAMVQHGM-yhRLAGAD0T2=OJ6adS-MsgEd1tVLdSQKhiufP6UeRA@mail.gmail.com>
Message-ID: <6847268.KNO8W5qknb@even-i700>

Jaewoong,

I think copying the logic into your code is the best option. Ideally you 
shouldn't rely on GDAL implementation details that are not part of 
the GDAL API (in some builds those symbols might not even be 
exported)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171205/bc8cf280/attachment.html>

From jungjw at google.com  Tue Dec  5 12:23:21 2017
From: jungjw at google.com (Jaewoong Jung)
Date: Tue, 5 Dec 2017 12:23:21 -0800
Subject: [gdal-dev] Alternative to seekgb in g2clib?
In-Reply-To: <6847268.KNO8W5qknb@even-i700>
References: <CAMVQHGM-yhRLAGAD0T2=OJ6adS-MsgEd1tVLdSQKhiufP6UeRA@mail.gmail.com>
 <6847268.KNO8W5qknb@even-i700>
Message-ID: <CAMVQHGM4qiDJbhXAincbpUw9qZ4ipMXi4zq-aFJHvGtxLZNaKw@mail.gmail.com>

Thanks for the quick answer! I'll look into it.

Jaewoong

On Tue, Dec 5, 2017 at 12:14 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Jaewoong,
>
>
>
> I think copying the logic into your code is the best option. Ideally you
> shouldn't rely on GDAL implementation details that are not part of the GDAL
> API (in some builds those symbols might not even be exported)
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171205/265dfb94/attachment.html>

From louis-philippe.rousseaulambert2 at canada.ca  Wed Dec  6 04:47:15 2017
From: louis-philippe.rousseaulambert2 at canada.ca (Rousseau Lambert2, Louis-Philippe (EC))
Date: Wed, 6 Dec 2017 12:47:15 +0000
Subject: [gdal-dev] Merge many raster using maximum value where overlaps
References: <20171117200559.A181A6146652@lists.osgeo.org>
 <C8B63132-E8D3-4EFA-A880-6AF8E0473ADD@archeotec.ca>
 <3D0D72A5-C33F-408C-8B47-29A0CBD997FA@gmail.com>
 <1511256180934-0.post@n6.nabble.com> <1511256881339-0.post@n6.nabble.com>
Message-ID: <mailman.15.1512564443.21180.gdal-dev@lists.osgeo.org>

Thanks for the possible solution.

Unfortunately, I could not test using SAGA our NASA Ames Stereo Pipeline
toolkit. My script will have to be run on a operational environment in
which it is very difficult to have new tools installed.

Same thing for VRT pixel function. We don't have gdal 2.2 installed yet
(but it should be pretty soon) and will test this solution once I have
access to this version and let you know if it works for us!

For the moment the solution I have (different from the previous one and
way faster):

1- I reproject all my individual Geotiff with the same extent and
resolution and add a virtual value of 0 where I have no data.
2- Use a few iteration of gdal_calc (since we are limited to 26 files at
a time) to get the maximum value (now it ouputs all the extent of the
file because I populated it with 0 value and they all have the same extent).
3- Use a final gdal_calc to merge with the maximum value all the
previous gdal_calc reuslts.
4- Use gdal_translate to set 0 value pixels to no data (in my case, 0 is
really no data).

Thanks for your help!

Louis-Philippe R. Lambert

On 11/21/2017 09:34 AM, Rutger wrote:
> Sorry, i had the code embedded as raw text. It appears to be left out of my
> previous post, even though it worked in the preview.
>
> Here it is:
>
>   <VRTRasterBand dataType="Float32" band="1"
> subClass="VRTDerivedRasterBand">
>   
>   <PixelFunctionType>max</PixelFunctionType>
>   <PixelFunctionLanguage>Python</PixelFunctionLanguage>
>   <PixelFunctionCode>
>     </PixelFunctionCode>
>
>
> Regards,
> Rutger
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Louis-Philippe Rousseau Lambert, B.Sc.
Géomaticien / Geomatician
Section des Données, Performances et Standards
Data, Performance and Standards Section
Service Météorologique du Canada
Meteorological Service of Canada
Environnement et Changement Climatique Canada
Environment and Climate Change Canada
louis-philippe.rousseaulambert2 at canada.ca
(514) 421-5045


From even.rouault at spatialys.com  Fri Dec  8 08:42:52 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 08 Dec 2017 17:42:52 +0100
Subject: [gdal-dev] GDAL trunk is now open for/requires C++11
Message-ID: <5935903.j53KWLq8K9@even-i700>

Hi,

I've just committed in trunk the changes, initiated by Kurt, needed to enforce the C+
+11 build requirement
( https://trac.osgeo.org/gdal/wiki/rfc68_cplusplus11 )

Please have a close look at https://travis-ci.org/OSGeo/gdal/builds and https://
ci.appveyor.com/project/OSGeo/gdal when using new C++11 features.

I think it would be good if we could restrict ourselves for now to things that VS 2013 
can compile. See
https://msdn.microsoft.com/en-us/library/hh567368.aspx

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171208/dbb6e2c2/attachment.html>

From schwehr at gmail.com  Fri Dec  8 09:23:51 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 8 Dec 2017 09:23:51 -0800
Subject: [gdal-dev] GDAL trunk is now open for/requires C++11
In-Reply-To: <5935903.j53KWLq8K9@even-i700>
References: <5935903.j53KWLq8K9@even-i700>
Message-ID: <CACmBxyvE87wPtJqiD54exmt+ziQtQHinTkUCpv_CAPcQ64iagQ@mail.gmail.com>

Thanks Even for driving this to completion!

To follow up, the RFC's list of core changes are pretty limited:

- Change configure.ac to remove with_cpp11 flag, always use C++11, and fail
if AX_CXX_COMPILE_STDCXX_11 does not find C++11
- Remove @CXX11_SUPPORT@ in GDALmake.opt.in and anywhere else it occurs
- Remove continuous build targets that do not support C++11 from Travis-CI
and AppVeyor?
- Remove #if HAVE_CXX11 and leave only the C++11 code
- find . -name \*.h -o -name \*.cpp | xargs egrep 'HAVE_CXX11'
- CPL_STATIC_ASSERT -> static_assert
- NULL -> nullptr (Only for C++ code)
- CPL_OVERRIDE -> override and remove redundant virtual
- MAX or -max() -> std::numeric_limits<T>::lowest()

 It would be worthwhile to (even if only briefly) discuss the use each new
feature before starting to committing changes.  That will help us add to a
GDAL style guide over time.

On Fri, Dec 8, 2017 at 8:42 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
>
>
> I've just committed in trunk the changes, initiated by Kurt, needed to
> enforce the C++11 build requirement
>
> ( https://trac.osgeo.org/gdal/wiki/rfc68_cplusplus11 )
>
>
>
> Please have a close look at https://travis-ci.org/OSGeo/gdal/builds and
> https://ci.appveyor.com/project/OSGeo/gdal when using new C++11 features.
>
>
>
> I think it would be good if we could restrict ourselves for now to things
> that VS 2013 can compile. See
>
> https://msdn.microsoft.com/en-us/library/hh567368.aspx
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171208/5dc95b41/attachment.html>

From even.rouault at spatialys.com  Fri Dec  8 09:32:42 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 08 Dec 2017 18:32:42 +0100
Subject: [gdal-dev] GDAL trunk is now open for/requires C++11
In-Reply-To: <CACmBxyvE87wPtJqiD54exmt+ziQtQHinTkUCpv_CAPcQ64iagQ@mail.gmail.com>
References: <5935903.j53KWLq8K9@even-i700>
 <CACmBxyvE87wPtJqiD54exmt+ziQtQHinTkUCpv_CAPcQ64iagQ@mail.gmail.com>
Message-ID: <5114201.OyGbWdepSH@even-i700>

Just a few clarifications since people could misunderstand what I committed vs what the RFC 
proposed

> - NULL -> nullptr (Only for C++ code)

This change is not done yet. There's still the NULL_AS_NULLPTR hack macro that can do that, 
but it is not enabled by default. 

> - CPL_OVERRIDE -> override and remove redundant virtual

This isn't done yet either.

>  It would be worthwhile to (even if only briefly) discuss the use each new
> feature before starting to committing changes.  That will help us add to a
> GDAL style guide over time.

Agreed

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171208/add2f316/attachment.html>

From even.rouault at spatialys.com  Fri Dec  8 09:34:47 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 08 Dec 2017 18:34:47 +0100
Subject: [gdal-dev] GRIB driver updates / call for testing / TDLPACK
In-Reply-To: <CACmBxyv-CQvn1y7+g1Wdo9fu5+W4TWw+9i4_u+-S+aqgf3NPwQ@mail.gmail.com>
References: <1600416.aKiTFXnYtV@even-i700>
 <CACmBxysC=sn+t7Qi5C=GS0u6-MLyQRGdNP2sYk4buGgKwbY3Mg@mail.gmail.com>
 <CACmBxyv-CQvn1y7+g1Wdo9fu5+W4TWw+9i4_u+-S+aqgf3NPwQ@mail.gmail.com>
Message-ID: <3201757.zq2DGmRCY8@even-i700>

On mardi 5 décembre 2017 07:15:39 CET Kurt Schwehr 
wrote:
> I've found nothing that depends on TDLPACK

I've just committed the change to remove TDLPACK support 
from compilation

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171208/48063c62/attachment.html>

From schwehr at gmail.com  Fri Dec  8 13:33:11 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 8 Dec 2017 13:33:11 -0800
Subject: [gdal-dev] GRIB driver updates / call for testing / TDLPACK
In-Reply-To: <3201757.zq2DGmRCY8@even-i700>
References: <1600416.aKiTFXnYtV@even-i700>
 <CACmBxysC=sn+t7Qi5C=GS0u6-MLyQRGdNP2sYk4buGgKwbY3Mg@mail.gmail.com>
 <CACmBxyv-CQvn1y7+g1Wdo9fu5+W4TWw+9i4_u+-S+aqgf3NPwQ@mail.gmail.com>
 <3201757.zq2DGmRCY8@even-i700>
Message-ID: <CACmBxyvCXfwFL30-a1kGiJU8R4T5gDEw4BgdNsKLAvDzaF-72Q@mail.gmail.com>

What about metaprint?  Can the TDLP_MERCATOR, TDLP_POLAR, and TDLP_LAMBERT
go away?   And then I think that is the last use of tdlpack.h

On Fri, Dec 8, 2017 at 9:34 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On mardi 5 décembre 2017 07:15:39 CET Kurt Schwehr wrote:
>
> > I've found nothing that depends on TDLPACK
>
>
>
> I've just committed the change to remove TDLPACK support from compilation
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171208/978b537e/attachment.html>

From even.rouault at spatialys.com  Fri Dec  8 13:39:49 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 08 Dec 2017 22:39:49 +0100
Subject: [gdal-dev] GRIB driver updates / call for testing / TDLPACK
In-Reply-To: <CACmBxyvCXfwFL30-a1kGiJU8R4T5gDEw4BgdNsKLAvDzaF-72Q@mail.gmail.com>
References: <1600416.aKiTFXnYtV@even-i700> <3201757.zq2DGmRCY8@even-i700>
 <CACmBxyvCXfwFL30-a1kGiJU8R4T5gDEw4BgdNsKLAvDzaF-72Q@mail.gmail.com>
Message-ID: <2036836.1XZvJPLrCC@even-i700>

On vendredi 8 décembre 2017 13:33:11 CET Kurt Schwehr 
wrote:
> What about metaprint?  Can the TDLP_MERCATOR, 
TDLP_POLAR, and TDLP_LAMBERT
> go away?   And then I think that is the last use of tdlpack.h

The code in metaprint.cpp that uses TDLP_ was already 
commented out

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171208/4579f187/attachment.html>

From schwehr at gmail.com  Fri Dec  8 14:12:04 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 8 Dec 2017 14:12:04 -0800
Subject: [gdal-dev] GRIB driver updates / call for testing / TDLPACK
In-Reply-To: <2036836.1XZvJPLrCC@even-i700>
References: <1600416.aKiTFXnYtV@even-i700> <3201757.zq2DGmRCY8@even-i700>
 <CACmBxyvCXfwFL30-a1kGiJU8R4T5gDEw4BgdNsKLAvDzaF-72Q@mail.gmail.com>
 <2036836.1XZvJPLrCC@even-i700>
Message-ID: <CACmBxysPLRGTYbuOr0jVUBU6N6X71fxVXw4=MUwVs7SmrPa6cg@mail.gmail.com>

Ah, then just the #include "tdlpack.h" in metaprint needs to get
commentout, wrapped, or removed


On Fri, Dec 8, 2017 at 1:39 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On vendredi 8 décembre 2017 13:33:11 CET Kurt Schwehr wrote:
>
> > What about metaprint? Can the TDLP_MERCATOR, TDLP_POLAR, and TDLP_LAMBERT
>
> > go away? And then I think that is the last use of tdlpack.h
>
>
>
> The code in metaprint.cpp that uses TDLP_ was already commented out
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171208/990d83f1/attachment.html>

From nyall.dawson at gmail.com  Fri Dec  8 23:04:56 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sat, 9 Dec 2017 17:04:56 +1000
Subject: [gdal-dev] Shapefiles and z dimensions
Message-ID: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>

Hi all,

I'm trying to track down some odd behaviour in QGIS, and determine
whether this is a qgis bug, gdal bug, or shapefile limitation.

If I create a new shapefile layer using GDALDatasetCreateLayer, with a
geometry type of wkbPoint25D (actually any of the 25D) types, then the
resultant layer ALWAYS has an M dimension present as well (i.e.
ogrinfo reports PointZM type).

Is this expected behaviour for shapefiles?

Nyall

From ahuarte47 at yahoo.es  Sat Dec  9 00:31:26 2017
From: ahuarte47 at yahoo.es (A Huarte)
Date: Sat, 9 Dec 2017 08:31:26 +0000 (UTC)
Subject: [gdal-dev] Shapefiles and z dimensions
In-Reply-To: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
References: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
Message-ID: <757792342.2251738.1512808286891@mail.yahoo.com>

Hi, from ESRI shapefile specification: 
https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf

the header file always contains the Mmin and Mmax values (Page 4):

    "but these limits can contain "no data" values (see Numeric Types on page 2) for shapefiles      of measured shape types that contain no measures."
for geometries (Page 15):     "Shape Types inX,Y,Z SpaceShapes of this type have an optional coordinate M. Note that "no data"      value can bespecified as a value for M (see Numeric Types on page 2)."
    "PointZ - A PointZ consists of a triplet of double-precision coordinates in the order X, Y, Z plus ameasure."    ...
the coordinate M is always present, but it can contains a "no data" value to indicate if the geometry is a pure Z-type geometry or a ZM-type geometry.
I think you only can distinguish between both types reading the Mmin and Mmax values of the header file.


      De: Nyall Dawson <nyall.dawson at gmail.com>
 Para: gdal dev <gdal-dev at lists.osgeo.org> 
 Enviado: Sábado 9 de diciembre de 2017 8:05
 Asunto: [gdal-dev] Shapefiles and z dimensions
   
Hi all,

I'm trying to track down some odd behaviour in QGIS, and determine
whether this is a qgis bug, gdal bug, or shapefile limitation.

If I create a new shapefile layer using GDALDatasetCreateLayer, with a
geometry type of wkbPoint25D (actually any of the 25D) types, then the
resultant layer ALWAYS has an M dimension present as well (i.e.
ogrinfo reports PointZM type).

Is this expected behaviour for shapefiles?

Nyall
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

   
 
|  | Libre de virus. www.avg.com  |

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171209/b0e6dba8/attachment-0001.html>

From ari.jolma at gmail.com  Sat Dec  9 03:15:20 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 9 Dec 2017 22:15:20 +1100
Subject: [gdal-dev] Shapefiles and z dimensions
In-Reply-To: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
References: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
Message-ID: <4642e25f-d399-2e01-2c89-b35d08e3efc2@gmail.com>

Nyall Dawson kirjoitti 09.12.2017 klo 18:04:

> Hi all,
>
> I'm trying to track down some odd behaviour in QGIS, and determine
> whether this is a qgis bug, gdal bug, or shapefile limitation.
>
> If I create a new shapefile layer using GDALDatasetCreateLayer, with a
> geometry type of wkbPoint25D (actually any of the 25D) types, then the
> resultant layer ALWAYS has an M dimension present as well (i.e.
> ogrinfo reports PointZM type).
>
> Is this expected behaviour for shapefiles?

It is expected. Shapefiles are XY, XYM, or XYZM

https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf

Ari

>
> Nyall
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Sat Dec  9 06:58:01 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 09 Dec 2017 15:58:01 +0100
Subject: [gdal-dev] Shapefiles and z dimensions
In-Reply-To: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
References: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
Message-ID: <2026046.KWjqSkeq8S@even-i700>

Nyall,

As underlined by Alvaro and Ari, the format doesn't distinguish PointZ and PointZM in the 
header.
GDAL has a logic to look by default at the first geometry 
(ADJUST_GEOM_TYPE=FIRST_SHAPE open option) and see if it has a non nodata M value, if 
so it exposes PointZM, otherwise PointZ
But for an empty file, there's no way to really know the intent.

We could potentially use a trick if we really wanted to distinguish in the case of an empty 
layer. In the shape header, there's an array with min and max values of X, Y, Z and M. 
Currently we always write Mmin = Mmax = 0, whereas the shapefile specification

"""Mmin and Mmax can contain "no data" values (see Numeric Types on page 2) for shapefiles 
of measured shape types that contain no measures."""
An the nodata value is "Any floating point number smaller than –10e38"

So we could potentially use a nodata value for PointZ and another one for PointZM. 


But the issue with layer geometry type is more general than that. It is really dependant on 
the formats.
* For example in GeoPackage, the gpkg_geometry_columns which can be used to get the 
layer geometry type has columns:
- z: 0: z values prohibited; 1: z values mandatory; 2: z values optional
- m: 0:m values prohibited; 1: m values mandatory; 2: m values optional
* In PostGIS, when a table has a Z, M or ZM constraint, it must be strictly 
respected by each feature geometry (mandatory case of geopackage). This is in line with 
OGC Simple Feature Access - Part 2: SQL
* In shapefile, you have that PointZ / PointZM equivalence
As a result of those variations, the OGR abstraction is rather loose on the exact semantics of 
the geometry type. It is close to the the optional possibility of GeoPackage.

Even

> Hi all,
> 
> I'm trying to track down some odd behaviour in QGIS, and determine
> whether this is a qgis bug, gdal bug, or shapefile limitation.
> 
> If I create a new shapefile layer using GDALDatasetCreateLayer, with a
> geometry type of wkbPoint25D (actually any of the 25D) types, then the
> resultant layer ALWAYS has an M dimension present as well (i.e.
> ogrinfo reports PointZM type).
> 
> Is this expected behaviour for shapefiles?
> 
> Nyall
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171209/5bea8809/attachment.html>

From nyall.dawson at gmail.com  Sat Dec  9 15:22:21 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sun, 10 Dec 2017 09:22:21 +1000
Subject: [gdal-dev] Shapefiles and z dimensions
In-Reply-To: <2026046.KWjqSkeq8S@even-i700>
References: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
 <2026046.KWjqSkeq8S@even-i700>
Message-ID: <CAB28AsjArgJmoeXbqqsWyQUmyafEMbnuz-jtmv0Lau3xge1YHQ@mail.gmail.com>

On 10 December 2017 at 00:58, Even Rouault <even.rouault at spatialys.com> wrote:
> As underlined by Alvaro and Ari, the format doesn't distinguish PointZ and
> PointZM in the header.
>
> GDAL has a logic to look by default at the first geometry
> (ADJUST_GEOM_TYPE=FIRST_SHAPE open option) and see if it has a non nodata M
> value, if so it exposes PointZM, otherwise PointZ
>
> But for an empty file, there's no way to really know the intent.

Ok - thanks for the confirmation. I don't see this as a particular
important issue, given that requesting a layer with Z does result in a
layer which supports that, so I don't think there's any need to work
around this in GDAL.

On a related note... is there any tricks in the GDAL API which can be
used to "force" a geometry type for created tab files? E.g. if I
create a tab file, specifying Point geometry type, the initially empty
result layer has no fixed geometry type. This makes it unusable in
QGIS, since QGIS currently demands that layers have a single, fixed
geometry type. Is there any hack to avoid this and "lock in" a
geometry type when creating tab files?

Nyall

From even.rouault at spatialys.com  Sat Dec  9 15:49:22 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 10 Dec 2017 00:49:22 +0100
Subject: [gdal-dev] Shapefiles and z dimensions
In-Reply-To: <CAB28AsjArgJmoeXbqqsWyQUmyafEMbnuz-jtmv0Lau3xge1YHQ@mail.gmail.com>
References: <CAB28AshpLYBQghURABwtoVb3a6TkObch+wZUk5mV6_P2TecUiQ@mail.gmail.com>
 <2026046.KWjqSkeq8S@even-i700>
 <CAB28AsjArgJmoeXbqqsWyQUmyafEMbnuz-jtmv0Lau3xge1YHQ@mail.gmail.com>
Message-ID: <1516408.E4bCye1SUZ@even-i700>

> 
> On a related note... is there any tricks in the GDAL API which can be
> used to "force" a geometry type for created tab files? E.g. if I
> create a tab file, specifying Point geometry type, the initially empty
> result layer has no fixed geometry type. This makes it unusable in
> QGIS, since QGIS currently demands that layers have a single, fixed
> geometry type. Is there any hack to avoid this and "lock in" a
> geometry type when creating tab files?

MapInfo mif/tab are absolutely geometrically untyped. You can throw any type of 
geometry in a layer.
Perhaps a possibility for QGIS would be to pass an option to the QGIS OGR provider forcing 
the layer geometry type when it has just created a layer and wants to open it (that would 
assume the user would at least create one entity right away). Or create some side car file 
with that information.
Another possibility would be to use some spare bytes at the end of the .map header to add 
that info (and checking that mapinfo properly ignores it)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171210/8b292ced/attachment.html>

From even.rouault at spatialys.com  Sun Dec 10 05:52:24 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 10 Dec 2017 14:52:24 +0100
Subject: [gdal-dev] Mass-conversion from NULL to nullptr ready to land
Message-ID: <5445681.D2B9Z7MHDX@even-i700>

Hi,

With the assistance of clang-tidy (*) and a bit of manual editing, I've replaced most uses of 
NULL with nullptr in .cpp files, and got to the point where all our CI targets are happy with -
Wzero-as-null-pointer-constant, which warns about most uses of NULL or 0 or FALSE instead 
of nullptr.

Consequently, I've also removed the Travis-CI target that had a #define NULL nullptr hack, 
and enabled -Wzero-as-null-pointer-constant in configure when supported by the compiler 
(at least gcc >= 4.8 and clang >= 5.0).

There are still remaining occurences of NULL that could be replaced (in #ifdef branch not 
tested, in macros, in function calls that take variadic arguments, etc....) , but that can be done 
later.

As this is a rather painful exercice (1146 files changed) which is very fragile to concurrent 
changes, I'd like to drop this in trunk ASAP if there's no opposition.

The branch with the work is at (be warned, among the most boring ever):
https://github.com/OSGeo/gdal/compare/trunk...rouault:convert_to_nullptr

Even

(*) sed "s/NULL/nullptr/g" is not an option, as there is a significant number of occurences of 
NULL being in a string (think to SQL statements).
clang-tidy works great, but as it does a true parsing of the code, you need to pass it the same 
-D and -I switches as the compiler would take. I guess there would perhaps be a way of 
creating a CXX script that could be used as a fake compiler and would redirect to clang-tidy.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171210/32b7da82/attachment.html>

From mateusz at loskot.net  Sun Dec 10 06:24:03 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun, 10 Dec 2017 15:24:03 +0100
Subject: [gdal-dev] Mass-conversion from NULL to nullptr ready to land
In-Reply-To: <5445681.D2B9Z7MHDX@even-i700>
References: <5445681.D2B9Z7MHDX@even-i700>
Message-ID: <CABUeae8ZFn4GKFExOtpy5m+DZ7rTQbsDnUo3iNEi=A4BMY6-Tg@mail.gmail.com>

On 10 Dec 2017 14:52, "Even Rouault" <even.rouault at spatialys.com> wrote:




(*) sed "s/NULL/nullptr/g" is not an option, as there is a significant
number of occurences of NULL being in a string (think to SQL statements).

clang-tidy works great, but as it does a true parsing of the code, you need
to pass it the same -D and -I switches as the compiler would take. I guess
there would perhaps be a way of creating a CXX script that could be used as
a fake compiler and would redirect to clang-tidy.


Even, best results clang-tidy delivers if used with clang compile database
(JSON file). Its easy to generate one with CMake, but that's obviously not
an (convenient) option for GDAL.

Have you tried Bear instead?
https://github.com/rizsotto/Bear

It can intercept compile commands from any build system on Linux.

Mateusz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171210/482b7149/attachment.html>

From schwehr at gmail.com  Sun Dec 10 08:15:18 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 10 Dec 2017 08:15:18 -0800
Subject: [gdal-dev] Mass-conversion from NULL to nullptr ready to land
In-Reply-To: <CABUeae8ZFn4GKFExOtpy5m+DZ7rTQbsDnUo3iNEi=A4BMY6-Tg@mail.gmail.com>
References: <5445681.D2B9Z7MHDX@even-i700>
 <CABUeae8ZFn4GKFExOtpy5m+DZ7rTQbsDnUo3iNEi=A4BMY6-Tg@mail.gmail.com>
Message-ID: <CACmBxysOq_Ni7mcBKt0v-snONwehBk+259hPEg11EEnZgWriig@mail.gmail.com>

+1 for landing it

On Dec 10, 2017 6:24 AM, "Mateusz Loskot" <mateusz at loskot.net> wrote:

> On 10 Dec 2017 14:52, "Even Rouault" <even.rouault at spatialys.com> wrote:
>
>
>
>
> (*) sed "s/NULL/nullptr/g" is not an option, as there is a significant
> number of occurences of NULL being in a string (think to SQL statements).
>
> clang-tidy works great, but as it does a true parsing of the code, you
> need to pass it the same -D and -I switches as the compiler would take. I
> guess there would perhaps be a way of creating a CXX script that could be
> used as a fake compiler and would redirect to clang-tidy.
>
>
> Even, best results clang-tidy delivers if used with clang compile database
> (JSON file). Its easy to generate one with CMake, but that's obviously not
> an (convenient) option for GDAL.
>
> Have you tried Bear instead?
> https://github.com/rizsotto/Bear
>
> It can intercept compile commands from any build system on Linux.
>
> Mateusz
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171210/7f5b4786/attachment-0001.html>

From schwehr at gmail.com  Sun Dec 10 17:34:26 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 10 Dec 2017 19:34:26 -0600
Subject: [gdal-dev] Creating Cloud Optimized GeoTIFFs
In-Reply-To: <3762097.fEcczomedL@even-i700>
References: <CACkcqcUzFPHeZHfO3-d2f6aL4xaxMbTTd6LCf2b+2g_0A=7H8w@mail.gmail.com>
 <37364207.nlYVYg3d7h@even-i700>
 <CACmBxyt6jXDxqHsTddh7tgxzHPQ5UmGNXTx2Fkdr6ZJK1BtCsw@mail.gmail.com>
 <3762097.fEcczomedL@even-i700>
Message-ID: <CACmBxys3QFMqpjHAgf7m+G0A00O9eqVB2ivVXq19waiNwsgO-A@mail.gmail.com>

Thanks Even for the feedback.  There have be a few offline discussions
going on and Even added some notes to the document on Trac:

https://trac.osgeo.org/gdal/wiki/CloudOptimizedGeoTIFF?action=diff&version=11
<https://www.google.com/url?sa=D&q=https%3A%2F%2Ftrac.osgeo.org%2Fgdal%2Fwiki%2FCloudOptimizedGeoTIFF%3Faction%3Ddiff%26version%3D11>

This stems from me switching Earth Engine from LZW to DEFLATE when
exporting GeoTIFFs (and I added tiling).  We have a report from a user that
ENVI 5.4 (and 5.1) Classic can't read the resulting images but QGIS &
ArcGIS can.  I'm reverting exports back to LZW compression.

On Wed, Nov 15, 2017 at 6:02 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On mardi 14 novembre 2017 14:20:58 CET Kurt Schwehr wrote:
>
> > Hi Even,
>
> >
>
> > I have some follow up questions on Cloud Optimized GeoTIFFs:
>
>
>
> The main constraint of C.O.G is that all the IFD definitions are at the
> beginning of the file, to avoid seeking at various points in it. Other
> parameters are pretty much unspecified.
>
>
>
> >
>
> > * Is there a preferred/better INTERLEAVE if there is more than one band?
>
>
>
> Depends on access patterns. If as soon as you process one pixel you need
> to access the value for all bands, then INTERLEAVE=PIXEL is better, and it
> will result in smaller sizes of StripOffsets/TileOffsets and
> StripByteCount/TileByteCount arrays
>
>
>
> > * Is there a preferred tile blocksize? You have 512 in your examples. Are
>
> > there any major trade offs between using 128, 256, 512, or 1024 for x
> and y
>
> > block sizes?
>
>
>
> Too small blocksizes will result in larger ...Offsets and ...ByteCount
> arrays.
>
>
>
> > * Should tiles be square? Does it matter?
>
>
>
> No
>
>
>
> > * Is it better to skip tiling for small images? If so, at what threshold
>
> > do you think the switch should happen? 1024?
>
>
>
> I'm not sure if that has an importance. But it is not wise to have an
> image whose one dimension is larger than the corresponding block dimension
> (as blocks are not truncated)
>
>
>
> > * Is DEFLATE preferred for compression type over LZW for lossless
>
> > compression?
>
>
>
> Unspecified. DEFLATE is more CPU intensive, but if network times are the
> limiting factor, it is worth as more eficient
>
>
>
> > * If the writer isn't constrained by compute power, are there preferred
>
> > ZLEVEL and PREDICTOR values? Is there a time cost for decompressing
>
> > ZLEVEL=9 over 1?
>
>
>
> PREDICTOR has neglectable CPU inflence (just a add/diff on integer
> values), but will not always result in smaller file sizes. Depends on the
> dataset
>
>
>
> If I trust https://github.com/inikep/lzbench , the time cost for
> decompression for Deflate/Zlib doesn't seem to vary much with ZLEVEL. So
> the higher the better.
>
> I don't know for LZW.
>
>
>
> >
>
> > I'm a little confused by this code from validate_cloud_optimized_
> geotiff.py:
>
> >
>
> > if main_band.XSize >= 512 or main_band.YSize >= 512:
>
> > if check_tiled:
>
> > block_size = main_band.GetBlockSize()
>
> > if block_size[0] == main_band.XSize and block_size[0] > 1024:
>
> > errors += ["The file is greater than 512xH or Wx512," +
>
> > "but is not tiled"]
>
> >
>
> > Will the above correctly fail an image that is (say) 256x2048 if it is
> not
>
> > tiled?
>
>
>
> No, it will pass this test. Since in that case block_size[0] == xsize ==
> 256.
>
> But for such a narrow image, it should probably warn if it is not tiled,
> as the number of strips, if letting to default strip height, will be larger
> than really necessary.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171210/f625a13e/attachment.html>

From gabriel.vatin at kinaxia.fr  Mon Dec 11 02:35:06 2017
From: gabriel.vatin at kinaxia.fr (Gabriel Vatin)
Date: Mon, 11 Dec 2017 11:35:06 +0100
Subject: [gdal-dev] Getting max feature value with GDAL Python RasterizeLayer
Message-ID: <8a74df32-2882-f327-9972-455d14101a0d@kinaxia.fr>

Hi all,

I have some problems understand the way GDAL Rasterize works with Python 
bindings, and how to get max value or sum value when a grid cell 
contains multiple points to rasterize. I asked the question here :
https://gis.stackexchange.com/questions/263344/getting-max-feature-value-with-gdal-python-rasterizelayer

Do you know how to use such functions (sum, max, min...) instead of 
"burn" value ? Thanks a lot !

Gabriel

From even.rouault at spatialys.com  Mon Dec 11 11:09:22 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Dec 2017 20:09:22 +0100
Subject: [gdal-dev] Mass-conversion from NULL to nullptr ready to land
In-Reply-To: <5445681.D2B9Z7MHDX@even-i700>
References: <5445681.D2B9Z7MHDX@even-i700>
Message-ID: <2521048.Jx9GpyAFgr@even-i700>

> As this is a rather painful exercice (1146 files changed) which is very
> fragile to concurrent changes, I'd like to drop this in trunk ASAP if
> there's no opposition.
> 

I've just committed the changes (with more triggered by clang 5.0, which
catches more things)

Thanks Mateusz for the pointer to https://github.com/rizsotto/Bear . From a
quick try, this works. However, in case others want to make a try with it,
I got crashes of clang-tidy from Ubuntu 16.04 when making it work on the
json compile database, whereas in manual mode it worked. I solved that
by using binaries of clang 5.0 instead.

Recipee:
(clean or touch files you want to edit with clang-tidy)
bear make
clang-tidy -checks='-*,modernize-use-nullptr' -p=compile_commands.json -fix port/cpl_string.cpp

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171211/cfe70355/attachment.html>

From athomas at thinkspatial.com.au  Tue Dec 12 01:24:18 2017
From: athomas at thinkspatial.com.au (Alan Thomas)
Date: Tue, 12 Dec 2017 20:24:18 +1100
Subject: [gdal-dev] Use of std::unique_ptr and auto in new code
Message-ID: <CALhO07yWLkCVtn1XhZQ0gfeLdNWMiiG+Y3DMZj-ZvVHqMxN4Fg@mail.gmail.com>

Following up on Kurt's email:

> It would be worthwhile to (even if only briefly) discuss the use each
> new feature before starting to committing changes.

I would like to begin to use the following C++11 features in new code:

--

1. std::unique_ptr

Up until now, the DXF driver uses containers such as the following:

  std::vector<OGRDXFFeature *> apoMyList;

One has to remember to delete the elements of the container when they
are no longer required. This has led to many memory leak issues that
have been picked up by OSS-Fuzz, and makes programming generally
difficult and annoying. I'd like to start using the following instead:

  std::vector<std::unique_ptr<OGRDXFFeature>> apoMyList;

Hopefully this will help to reduce the incidence of memory leaks.

--

2. auto

I'd like to not have to write

  for( std::vector<std::unique_ptr<OGRFeature>>::iterator oIt =
       apoMyList.begin();

and simply write

  for( auto oIt = apoMyList.begin();

--

At this time I do not propose to migrate any code, but to use these
features only in newly-written and modified code for the time being.

Here is an example commit using these new features:

https://github.com/ThinkSpatial/gdal/commit/905d1690657de820d994eb95076b3fbea5f388bb

Alan

-- 
Alan Thomas
Software Developer
ThinkSpatial
http://www.thinkspatial.com.au

From even.rouault at spatialys.com  Tue Dec 12 02:06:17 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Dec 2017 11:06:17 +0100
Subject: [gdal-dev] Use of std::unique_ptr and auto in new code
In-Reply-To: <CALhO07yWLkCVtn1XhZQ0gfeLdNWMiiG+Y3DMZj-ZvVHqMxN4Fg@mail.gmail.com>
References: <CALhO07yWLkCVtn1XhZQ0gfeLdNWMiiG+Y3DMZj-ZvVHqMxN4Fg@mail.gmail.com>
Message-ID: <8600551.TjKyHUYn7P@even-i700>

> 1. std::unique_ptr
> 
[...]
> 
> Hopefully this will help to reduce the incidence of memory leaks.

+1, that's one of the benefits of C++11
> 
> --
> 
> 2. auto
> 
> I'd like to not have to write
> 
>   for( std::vector<std::unique_ptr<OGRFeature>>::iterator oIt =
>        apoMyList.begin();
> 
> and simply write
> 
>   for( auto oIt = apoMyList.begin();

+1. You could even use range based loop

for( auto& olt: apoMyList )

(or auto const& depending on what you want to do with it)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171212/30f84ac4/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Dec 12 12:55:13 2017
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Tue, 12 Dec 2017 20:55:13 +0000
Subject: [gdal-dev] Sub-optimal access to cloud optimized GeoTIFF
Message-ID: <1513112113384.37038@maanmittauslaitos.fi>

Hi,

This image http://193.166.24.122/gtk/mp_500000_7500000.tif should be prepared as adviced in https://trac.osgeo.org/gdal/wiki/CloudOptimizedGeoTIFF and the validation script agrees on that.

python c:\temp\validate_cloud_optimized_geotiff.py mp_500000_7500000.tif
Result:
mp_500000_7500000.tif is a valid cloud optimized GeoTIFF

However, it seems to me that gdal_translate is reading the whole GeoTIFF (from byte 0 to 3430936 ) once and then a little bit more (2850413 to 2984219). My command and debug info looks like this:

gdal_translate --config GDAL_DISABLE_READDIR_ON_OPEN YES --config CPL_VSIL_CURL_ALLOWED_EXTENSIONS .tif  -of GTiff -outsize 10% 10% /vsicurl/http://193.166.24.122/gtk/mp_500000_7500000.tif one_tif.tif --debug on
...
HTTP: libcurl/7.37.1 OpenSSL/1.0.1h zlib/1.2.3
VSICURL: GetFileSize(http://193.166.24.122/gtk/mp_500000_7500000.tif)=3430937  response_code=200
VSICURL: Downloading 0-16383 (http://193.166.24.122/gtk/mp_500000_7500000.tif)...
VSICURL: Got response_code=206
VSICURL: Downloading 16384-409599 (http://193.166.24.122/gtk/mp_500000_7500000.tif)...
VSICURL: Got response_code=206
GDAL: GDALOpen(/vsicurl/http://193.166.24.122/gtk/mp_500000_7500000.tif, this=000000000329B420) succ
eeds as GTiff.
Input file size is 10000, 10000
GTiff: ScanDirectories()
VSICURL: Downloading 409600-1196031 (http://193.166.24.122/gtk/mp_500000_7500000.tif)...
VSICURL: Got response_code=206
GTiff: Opened 5000x5000 overview.
VSICURL: Downloading 1196032-2768895 (http://193.166.24.122/gtk/mp_500000_7500000.tif)...
VSICURL: Got response_code=206
GTiff: Opened 2000x2000 overview.
GTiff: Opened 1000x1000 overview.
GTiff: Opened 500x500 overview.
GTiff: Opened 200x200 overview.
VSICURL: Downloading 2768896-3430936 (http://193.166.24.122/gtk/mp_500000_7500000.tif)...
VSICURL: Got response_code=206
GTiff: Opened 100x100 overview.
GDAL: QuietDelete(one_tif.tif) invoking Delete()
GDAL: GDALOpen(one_tif.tif, this=000000000329D090) succeeds as GTiff.
GDAL: GDALDefaultOverviews::OverviewScan()
GDAL: GDALClose(one_tif.tif, this=000000000329D090)
0GDAL: GDAL_CACHEMAX = 802 MB
GDAL: GDALDatasetCopyWholeRaster(): 1000*896 swaths, bInterleave=0
VSICURL: Downloading 2850413-2969284 (http://193.166.24.122/gtk/mp_500000_7500000.tif)...
VSICURL: Download completed
...10...20...30...40...50VSICURL: Downloading 2969285-2984219 (http://193.166.24.122/gtk/mp_500000_7
500000.tif)...
VSICURL: Download completed
...60...70...80...90...100 - done.
GDAL: GDALClose(one_tif.tif, this=000000000329D090)
GDAL: GDALClose(/vsicurl/http://193.166.24.122/gtk/mp_500000_7500000.tif, this=000000000329B420)

I wonder what is going on.

-Jukka Rahkonen-

From schwehr at gmail.com  Tue Dec 12 17:27:47 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 12 Dec 2017 19:27:47 -0600
Subject: [gdal-dev] Use of std::unique_ptr and auto in new code
In-Reply-To: <8600551.TjKyHUYn7P@even-i700>
References: <CALhO07yWLkCVtn1XhZQ0gfeLdNWMiiG+Y3DMZj-ZvVHqMxN4Fg@mail.gmail.com>
 <8600551.TjKyHUYn7P@even-i700>
Message-ID: <CACmBxystdMJXuR=qUTmrkLBF-KQ_FwVkx=T-0CoQL0Ow+UE-gQ@mail.gmail.com>

+1 on the range based for

+1 on std::unique_ptr, but ... I think GDAL should stick to these:

- Do not do "using std::unique_ptr;"
- Do not exposed std::unique_ptr to any public interfaces (for the time
being)

On Tue, Dec 12, 2017 at 4:06 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> > 1. std::unique_ptr
>
> >
>
> [...]
>
> >
>
> > Hopefully this will help to reduce the incidence of memory leaks.
>
>
>
> +1, that's one of the benefits of C++11
>
> >
>
> > --
>
> >
>
> > 2. auto
>
> >
>
> > I'd like to not have to write
>
> >
>
> > for( std::vector<std::unique_ptr<OGRFeature>>::iterator oIt =
>
> > apoMyList.begin();
>
> >
>
> > and simply write
>
> >
>
> > for( auto oIt = apoMyList.begin();
>
>
>
> +1. You could even use range based loop
>
>
>
> for( auto& olt: apoMyList )
>
>
>
> (or auto const& depending on what you want to do with it)
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171212/d11fbe26/attachment.html>

From even.rouault at spatialys.com  Wed Dec 13 02:07:19 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Dec 2017 11:07:19 +0100
Subject: [gdal-dev] Sub-optimal access to cloud optimized GeoTIFF
In-Reply-To: <1513112113384.37038@maanmittauslaitos.fi>
References: <1513112113384.37038@maanmittauslaitos.fi>
Message-ID: <2122816.zWPAiZP2Wi@even-i700>

Jukka,
> 
> This image http://193.166.24.122/gtk/mp_500000_7500000.tif should be
> prepared as adviced in
> https://trac.osgeo.org/gdal/wiki/CloudOptimizedGeoTIFF and the validation
> script agrees on that.
> 
> python c:\temp\validate_cloud_optimized_geotiff.py mp_500000_7500000.tif
> Result:
> mp_500000_7500000.tif is a valid cloud optimized GeoTIFF
> 
> However, it seems to me that gdal_translate is reading the whole GeoTIFF
> (from byte 0 to 3430936 ) once and then a little bit more (2850413 to
> 2984219). My command and debug info looks like this:
> 

The issue is that the file has a ColorMap and is of type UInt16. Consequently there are 65536 
entries * 3 values per entry * 2 bytes per value = 393 KO for a colormap. And as the colormap 
is put in each of the 7 resolution levels, that makes a total size for all the image file 
directories of 2.78 MB.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171213/9b874d5b/attachment.html>

From schwehr at gmail.com  Wed Dec 13 06:47:49 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 13 Dec 2017 08:47:49 -0600
Subject: [gdal-dev] Use of std::unique_ptr and auto in new code
In-Reply-To: <CACmBxystdMJXuR=qUTmrkLBF-KQ_FwVkx=T-0CoQL0Ow+UE-gQ@mail.gmail.com>
References: <CALhO07yWLkCVtn1XhZQ0gfeLdNWMiiG+Y3DMZj-ZvVHqMxN4Fg@mail.gmail.com>
 <8600551.TjKyHUYn7P@even-i700>
 <CACmBxystdMJXuR=qUTmrkLBF-KQ_FwVkx=T-0CoQL0Ow+UE-gQ@mail.gmail.com>
Message-ID: <CACmBxyvrB_1d1v6ENfQ2F7M0pWSW7-_MFk+6QD7HtrcQnS6O+A@mail.gmail.com>

Here is a range based for replacement of an iterator as a starter for
comments/discussion:

https://trac.osgeo.org/gdal/changeset/41019
<https://www.google.com/url?sa=D&q=https%3A%2F%2Ftrac.osgeo.org%2Fgdal%2Fchangeset%2F41019>

On Tue, Dec 12, 2017 at 7:27 PM, Kurt Schwehr <schwehr at gmail.com> wrote:

> +1 on the range based for
>
> +1 on std::unique_ptr, but ... I think GDAL should stick to these:
>
> - Do not do "using std::unique_ptr;"
> - Do not exposed std::unique_ptr to any public interfaces (for the time
> being)
>
> On Tue, Dec 12, 2017 at 4:06 AM, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> > 1. std::unique_ptr
>>
>> >
>>
>> [...]
>>
>> >
>>
>> > Hopefully this will help to reduce the incidence of memory leaks.
>>
>>
>>
>> +1, that's one of the benefits of C++11
>>
>> >
>>
>> > --
>>
>> >
>>
>> > 2. auto
>>
>> >
>>
>> > I'd like to not have to write
>>
>> >
>>
>> > for( std::vector<std::unique_ptr<OGRFeature>>::iterator oIt =
>>
>> > apoMyList.begin();
>>
>> >
>>
>> > and simply write
>>
>> >
>>
>> > for( auto oIt = apoMyList.begin();
>>
>>
>>
>> +1. You could even use range based loop
>>
>>
>>
>> for( auto& olt: apoMyList )
>>
>>
>>
>> (or auto const& depending on what you want to do with it)
>>
>>
>>
>> Even
>>
>>
>>
>> --
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
>
> --
> --
> http://schwehr.org
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171213/c20c09bc/attachment-0001.html>

From jiri.drbalek at gmail.com  Thu Dec 14 08:49:49 2017
From: jiri.drbalek at gmail.com (Jiri Drbalek)
Date: Thu, 14 Dec 2017 17:49:49 +0100
Subject: [gdal-dev] Race condition between forked processes with opened Tiff
	dataset on Linux
Message-ID: <CAC3MgJYoUyQLkmx9xNZbZmNPQXxHcpmFGy9E0vuQkACDqQ+LJg@mail.gmail.com>

Hello.

If a Linux process with opened Tiff dataset is forked, it is not possible
to read from the dataset concurrently in these forked processes, because
file offsets and other attributes of the opened Tiff file are shared
between those processes.

One solution would be to serialize calls to GDAL, but this obviously
completely destroy multiprocessing.

Another solution would be to open the dataset per each process, but this is
also not desirable. An opened Tiff allocates memory for list of tile or
strip offsets and sizes. These metadata can take hundreds of megabytes for
large Tiff files, not to mention opening more of them. Therefore forking
saves a lot of memory as these metadata are shared with parent process.

I've made a patch which optionally close the underlying Tiff file once a
dataset is opened. One can then fork safely, underlying file is lazily
opened again in each subprocess.

What do you think about this problem and proposed solutions? Is there some
more elegant solution?

Here are two variants of the patch:
https://github.com/mapycz/gdal/commit/2bc9227ab656ab7587a4fa7f6d9b6c
c1e4b761af
https://github.com/mapycz/gdal/commit/92823746743966459f3a2b3940e371
3bad31733a

Thank you for any help.

Jiri
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/af2e95c8/attachment.html>

From mj10777 at googlemail.com  Thu Dec 14 09:04:06 2017
From: mj10777 at googlemail.com (Mark Johnson)
Date: Thu, 14 Dec 2017 18:04:06 +0100
Subject: [gdal-dev] gdal make fails for python bindings - with ccache:
	invalid option -- 'p'
Message-ID: <CAEEbjBjAT=omN36gwYWkdjYWZ4z_AoNHgAueBpH9ub2ijYx9AQ@mail.gmail.com>

Since sometime since the end of August, the building of the swig portion
fails with a final message of

/usr/bin/ccache: invalid option -- 'p'

Before this point, after the message:

----------------------------------------------------------------------
The GDAL python package has been installed in
/home/mj10777/000_links/apps_local/gdal_git_master/lib/python3.4/site-packages
Please ensure to add
/home/mj10777/000_links/apps_local/gdal_git_master/lib/python3.4/site-packages
to your PYTHONPATH
----------------------------------------------------------------------

come the following message, which I assume is the true cause:

env
PYTHONPATH=/home/mj10777/000_links/apps_local/gdal_git_master/lib/python3.4/site-packages${PYTHONPATH:+:$PYTHONPATH}
\
/home/mj10777/000_links/apps_local/libQt592/bin/python3.4 setup.py install
--single-version-externally-managed --record=record.txt
--prefix=/home/mj10777/000_links/apps_local/gdal_git_master
WARNING: "CXX=/bin/bash
/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/libtool --mode=compile
--tag=CXX /usr/bin/g++ -std=c++11" was defined in the environment and
contains more than one word. Unsetting it since that is incompatible of
distutils

running install
running build
running build_py
running build_ext

then:

gcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall
-Wstrict-prototypes -fPIC -I../../port -I../../gcore -I../../alg
-I../../ogr/ -I../../ogr/ogrsf_frmts -I../../gnm -I../../apps
-I/home/mj10777/000_links/apps_local/libQt592/include/python3.4m
-I/home/mj10777/000_links/apps_local/libQt592/lib/python3.4/site-packages/numpy/core/include
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/include -c
gdal_python_cxx11_test.cpp -o gdal_python_cxx11_test.o
cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for
C/ObjC but not for C++
gdal_python_cxx11_test.cpp:3:2: error: #error "C++11 required"
 #error "C++11 required"

then after the message 'building 'osgeo._gdal' extension'

comes the 'ccache: invalid option -- 'p'' message and ends.
(ccache version 3.1.9)

I assume the 'WARNING: "CXX=/bin/bash' is the true cause, but really have
no idea how to resolve this.

I am using the same ./configure as always, and the error/warnings show only:

/bin/bash: ./config.rpath: No such file or directory
config.status: WARNING:  'GDALmake.opt.in' seems to ignore the
--datarootdir setting
configure: WARNING: --with-libxml2 and --with-fgdb are both available.
There might be some incompatibility between system libxml2 and the embedded
copy within libFileGDBAPI

which I assume is not the cause, since this only occurs durring the swig
portion.

When ' (cd swig; $(MAKE) install)' is commented out in the GNUmakefile
file, everything else runs and installs.

Mark Johnson, Berlin Germany
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/cdb070c1/attachment.html>

From even.rouault at spatialys.com  Thu Dec 14 09:34:22 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Dec 2017 18:34:22 +0100
Subject: [gdal-dev] gdal make fails for python bindings - with ccache:
	invalid option -- 'p'
In-Reply-To: <CAEEbjBjAT=omN36gwYWkdjYWZ4z_AoNHgAueBpH9ub2ijYx9AQ@mail.gmail.com>
References: <CAEEbjBjAT=omN36gwYWkdjYWZ4z_AoNHgAueBpH9ub2ijYx9AQ@mail.gmail.com>
Message-ID: <2432554.EKfCoBQeC1@even-i700>

Mark,

> gcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall
> -Wstrict-prototypes -fPIC -I../../port -I../../gcore -I../../alg
> -I../../ogr/ -I../../ogr/ogrsf_frmts -I../../gnm -I../../apps
> -I/home/mj10777/000_links/apps_local/libQt592/include/python3.4m
> -I/home/mj10777/000_links/apps_local/libQt592/lib/python3.4/site-packages/nu
> mpy/core/include
> -I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/include -c
> gdal_python_cxx11_test.cpp -o gdal_python_cxx11_test.o
> cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for
> C/ObjC but not for C++
> gdal_python_cxx11_test.cpp:3:2: error: #error "C++11 required"
>  #error "C++11 required"

This message itself is OK. It is emitted even in situations where the bindings build 
successfully. It is the probing mechanism to know if -std=c++11 needs to be added. I tried to 
hide it. Worked on my environement but was found to break on others.

> 
> then after the message 'building 'osgeo._gdal' extension'
> 
> comes the 'ccache: invalid option -- 'p'' message and ends.
> (ccache version 3.1.9)

Do you know where this ccache invokation comes from ? Both libtool and non-libtool regular 
builds work for me with the python bindings

In Travis-CI, we even have builds with:
CC="ccache clang" CXX="ccache clang" ./configure --prefix=/usr --without-libtool--with-
python
and they work fine

> 
> I assume the 'WARNING: "CXX=/bin/bash' is the true cause, but really have
> no idea how to resolve this.

The following comment at the beginning of swig/python/setup.py might be relevant

# If CXX is defined in the environment, it will be used to link the .so
# but distutils will be confused if it is made of several words like 'ccache g++'
# and it will try to use only the first word.
# See https://lists.osgeo.org/pipermail/gdal-dev/2016-July/044686.html
# Note: in general when doing "make", CXX will not be defined, unless it is defined as
# an environment variable, but in that case it is the value of GDALmake.opt that
# will be set, not the one from the environment that started "make" !
# If no CXX environment variable is defined, then the value of the CXX variable
# in GDALmake.opt will not be set as an environment variable

> 
> I am using the same ./configure as always, and the error/warnings show only:
> 
> /bin/bash: ./config.rpath: No such file or directory
> config.status: WARNING:  'GDALmake.opt.in' seems to ignore the
> --datarootdir setting
> configure: WARNING: --with-libxml2 and --with-fgdb are both available.
> There might be some incompatibility between system libxml2 and the embedded
> copy within libFileGDBAPI
> 
> which I assume is not the cause, since this only occurs durring the swig
> portion.

Yes, that warning is about something completely different

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/5185df0b/attachment-0001.html>

From schwehr at gmail.com  Thu Dec 14 09:35:35 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 14 Dec 2017 11:35:35 -0600
Subject: [gdal-dev] C++11: virtual and override
Message-ID: <CACmBxysC4V_pccWE6inDn_tv981mnXp2dohzOFF1wBw15jB+4w@mail.gmail.com>

About to start dropping virtual when there is override and convert
CPL_OVERRIDE to override

I tested the override on destructors that got me in trouble with MSVC older
compilers not to long ago and all CI runs pass.
https://trac.osgeo.org/gdal/changeset/41034

Example diff for the change in frmts/raw:

https://pastebin.com/uuMv6mWj

>From https://trac.osgeo.org/gdal/wiki/rfc68_cplusplus11:

    7. CPL_OVERRIDE -> override and remove redundant virtual

-kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/ffe9020b/attachment.html>

From mj10777 at googlemail.com  Thu Dec 14 09:58:11 2017
From: mj10777 at googlemail.com (Mark Johnson)
Date: Thu, 14 Dec 2017 18:58:11 +0100
Subject: [gdal-dev] gdal make fails for python bindings - with ccache:
 invalid option -- 'p'
Message-ID: <CAEEbjBigykNdBWuwpaa_v+zOQRJ0jy0y1ppAz4shV+ejV2JsWg@mail.gmail.com>

>> Do you know where this ccache invokation comes from ? Both libtool and
non-libtool regular builds work for me with the python bindings

echo $CC shows nothing.
echo $CXX shows '/usr/bin/ccache /usr/bin/c++'

At some point in the last year I added 'ccache' for use with QGis.

For ./configure there is:
export PYTHONHOME=/home/mj10777/000_links/apps_local/libQt592;
CXX="/usr/bin/g++" CFLAGS="-Wall" LDFLAGS="-s" ./configure  \
--prefix=/home/mj10777/000_links/apps_local/gdal_git_master \
... etc

but for make, the first value is active.

So this may be cause by either:
- not setting CXX with /usr/bin/ccache during ./configure
- or setting the same value during make that was used with ./configure

Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/a8a19f26/attachment.html>

From even.rouault at spatialys.com  Thu Dec 14 10:07:24 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Dec 2017 19:07:24 +0100
Subject: [gdal-dev] Race condition between forked processes with opened
	Tiff dataset on Linux
In-Reply-To: <CAC3MgJYoUyQLkmx9xNZbZmNPQXxHcpmFGy9E0vuQkACDqQ+LJg@mail.gmail.com>
References: <CAC3MgJYoUyQLkmx9xNZbZmNPQXxHcpmFGy9E0vuQkACDqQ+LJg@mail.gmail.com>
Message-ID: <4327187.sSu8ydukV5@even-i700>

Jiri,

I'm not sure to which extent we want to support the fork() situation, as there are perhaps 
situations where that wouldn't work for some reason, but as something experimental why 
not.

Regarding the way file closing is done in VSIUnixStdioHandle, I think that instead of relying 
on ferror(), fclose() should be just called and fp nullified, and you would test that in Seek(), 
Read(), Write() etc to know if you must reopen the file

Another option would be to put that reopening logic at the driver level, but your option is 
probably better if we wanted to extend that to other drivers.

Actually I'm thinking to yet another option where things would work even without an explicit 
config option. VSIUnixStdioHandle could keep the getpid() active at opening time, and check 
before each access if it has changed, in which case it would open a fresh handle (assuming 
the getpid() cost is neglectable. not completely sure of that for drivers that do 1 byte per 1 
byte read where the buffering logic of file streams avoids doing one system call each time... 
Looking at the manpage of getpid(), there used to be a time where glibc did a buffering of 
the getpid() result, but this was eventually removed because bug prone, so now a glibc 
getpid() translates into a system call)

In any case, we would definitely need an explicit test in autotest/cpp for that new capability

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/fde71b0d/attachment.html>

From mj10777 at googlemail.com  Thu Dec 14 12:30:28 2017
From: mj10777 at googlemail.com (Mark Johnson)
Date: Thu, 14 Dec 2017 21:30:28 +0100
Subject: [gdal-dev] gdal make fails for python bindings - with ccache:
 invalid option -- 'p'
Message-ID: <CAEEbjBgRNUSk_QtuUWed4TBQ0LXmX6gKUKNecdCXZF-99HMzUw@mail.gmail.com>

export CXX=/usr/bin/c++

make install

did not resolve this problem.

The WARNING, with ' --tag=CXX /usr/bin/g++ -std=c++11"' still turns up
during setup.py.


gcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall
-Wstrict-prototypes -fPIC -I../../port -I../../gcore -I../../alg
-I../../ogr/ -I../../ogr/ogrsf_frmts -I../../gnm -I../../apps
-I/home/mj10777/000_links/apps_local/libQt592/include/python3.4m
-I/home/mj10777/000_links/apps_local/libQt592/lib/python3.4/site-packages/numpy/core/include
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/include -c
gdal_python_cxx11_test.cpp -o gdal_python_cxx11_test.o -std=c++11
cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for
C/ObjC but not for C++
building 'osgeo._gdal' extension
gcc -pthread -Wno-unused-result -DNDEBUG -g -fwrapv -O3 -Wall
-Wstrict-prototypes -fPIC -I../../port -I../../gcore -I../../alg
-I../../ogr/ -I../../ogr/ogrsf_frmts -I../../gnm -I../../apps
-I/home/mj10777/000_links/apps_local/libQt592/include/python3.4m
-I/home/mj10777/000_links/apps_local/libQt592/lib/python3.4/site-packages/numpy/core/include
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/include -c
extensions/gdal_wrap.cpp -o
build/temp.linux-x86_64-3.4/extensions/gdal_wrap.o -std=c++11
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/port
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/gcore
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/alg
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/ogr
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/ogr/ogrsf_frmts
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/frmts/vrt
-I/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/apps

cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for
C/ObjC but not for C++

/usr/bin/ccache -pthread -shared
build/temp.linux-x86_64-3.4/extensions/gdal_wrap.o -L../../.libs -L../../
-L/home/mj10777/000_links/apps_local/libQt592/lib
-L/home/mj10777/000_links/gdal_dev/gdal.git/gdal/gdal/lib -lpython3.4m
-lgdal -o build/lib.linux-x86_64-3.4/osgeo/_gdal.cpython-34m.so

/usr/bin/ccache: invalid option -- 'p'

Mark
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/d12e1403/attachment.html>

From nyall.dawson at gmail.com  Thu Dec 14 13:57:08 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 15 Dec 2017 07:57:08 +1000
Subject: [gdal-dev] C++11: virtual and override
In-Reply-To: <CACmBxysC4V_pccWE6inDn_tv981mnXp2dohzOFF1wBw15jB+4w@mail.gmail.com>
References: <CACmBxysC4V_pccWE6inDn_tv981mnXp2dohzOFF1wBw15jB+4w@mail.gmail.com>
Message-ID: <CAB28AsjE_XYj3Mv2fBJ6m=Up2qhYWAJWCHOpNtdTk-2cPfWhWQ@mail.gmail.com>

On 15 December 2017 at 03:35, Kurt Schwehr <schwehr at gmail.com> wrote:
> About to start dropping virtual when there is override

What process are you using to drop the "virtual" keywords here? We've
got them all over QGIS, and I'd love to find an easy way to remove
them.

Nyall

From mateusz at loskot.net  Thu Dec 14 13:59:24 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 14 Dec 2017 22:59:24 +0100
Subject: [gdal-dev] C++11: virtual and override
In-Reply-To: <CAB28AsjE_XYj3Mv2fBJ6m=Up2qhYWAJWCHOpNtdTk-2cPfWhWQ@mail.gmail.com>
References: <CACmBxysC4V_pccWE6inDn_tv981mnXp2dohzOFF1wBw15jB+4w@mail.gmail.com>
 <CAB28AsjE_XYj3Mv2fBJ6m=Up2qhYWAJWCHOpNtdTk-2cPfWhWQ@mail.gmail.com>
Message-ID: <CABUeae9hZPMKaVWsddL3dBvPJ+TdG8bUzTGNmXPiG8HjVT8neA@mail.gmail.com>

On 14 December 2017 at 22:57, Nyall Dawson <nyall.dawson at gmail.com> wrote:
> On 15 December 2017 at 03:35, Kurt Schwehr <schwehr at gmail.com> wrote:
>> About to start dropping virtual when there is override
>
> What process are you using to drop the "virtual" keywords here? We've
> got them all over QGIS, and I'd love to find an easy way to remove
> them.

Refactoring with clang-tidy

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From schwehr at gmail.com  Thu Dec 14 14:04:06 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 14 Dec 2017 16:04:06 -0600
Subject: [gdal-dev] C++11: virtual and override
In-Reply-To: <CABUeae9hZPMKaVWsddL3dBvPJ+TdG8bUzTGNmXPiG8HjVT8neA@mail.gmail.com>
References: <CACmBxysC4V_pccWE6inDn_tv981mnXp2dohzOFF1wBw15jB+4w@mail.gmail.com>
 <CAB28AsjE_XYj3Mv2fBJ6m=Up2qhYWAJWCHOpNtdTk-2cPfWhWQ@mail.gmail.com>
 <CABUeae9hZPMKaVWsddL3dBvPJ+TdG8bUzTGNmXPiG8HjVT8neA@mail.gmail.com>
Message-ID: <CACmBxysiwPkiOhimehpqCNDO0Chsd_6xg3eYzrs2U5ssaCy_4g@mail.gmail.com>

I used emacs with find + xargs + grep :)

 clang-tidy also works well

On Dec 14, 2017 3:59 PM, "Mateusz Loskot" <mateusz at loskot.net> wrote:

> On 14 December 2017 at 22:57, Nyall Dawson <nyall.dawson at gmail.com> wrote:
> > On 15 December 2017 at 03:35, Kurt Schwehr <schwehr at gmail.com> wrote:
> >> About to start dropping virtual when there is override
> >
> > What process are you using to drop the "virtual" keywords here? We've
> > got them all over QGIS, and I'd love to find an easy way to remove
> > them.
>
> Refactoring with clang-tidy
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171214/d3b965fd/attachment.html>

From nyall.dawson at gmail.com  Thu Dec 14 14:04:15 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 15 Dec 2017 08:04:15 +1000
Subject: [gdal-dev] C++11: virtual and override
In-Reply-To: <CABUeae9hZPMKaVWsddL3dBvPJ+TdG8bUzTGNmXPiG8HjVT8neA@mail.gmail.com>
References: <CACmBxysC4V_pccWE6inDn_tv981mnXp2dohzOFF1wBw15jB+4w@mail.gmail.com>
 <CAB28AsjE_XYj3Mv2fBJ6m=Up2qhYWAJWCHOpNtdTk-2cPfWhWQ@mail.gmail.com>
 <CABUeae9hZPMKaVWsddL3dBvPJ+TdG8bUzTGNmXPiG8HjVT8neA@mail.gmail.com>
Message-ID: <CAB28AsgRn+STShA97bnGgCV6R2oqg+Mmj+WkugP5fSvLyO6Hkw@mail.gmail.com>

On 15 December 2017 at 07:59, Mateusz Loskot <mateusz at loskot.net> wrote:
> On 14 December 2017 at 22:57, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>> On 15 December 2017 at 03:35, Kurt Schwehr <schwehr at gmail.com> wrote:
>>> About to start dropping virtual when there is override
>>
>> What process are you using to drop the "virtual" keywords here? We've
>> got them all over QGIS, and I'd love to find an easy way to remove
>> them.
>
> Refactoring with clang-tidy

Ah - I see modernize-use-override does it now. Thanks!

Nyall

From ari.jolma at gmail.com  Thu Dec 14 23:54:49 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 15 Dec 2017 18:54:49 +1100
Subject: [gdal-dev] gdal.pc
Message-ID: <02b4d1d8-7c08-011a-6f22-e31f269159ed@gmail.com>

When gdal is built in the Strawberry Perl environment (which includes 
MinGW C/C++ compiler gcc) the subsequent use of libgdal in building 
other tools (the Perl bindings) is based on using gdal.pc and pkgconfig.

Also, in that environment the linking of gdal with the dependent tools 
requires explicit listing of the "dep-libs" - which are available 
through the gdal-config but not from gdal.pc.

In linux including the dep-libs in the g++ command is not needed.

I wonder what would be the correct way to fix the problem.

Ari



From schwehr at gmail.com  Fri Dec 15 06:53:48 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 15 Dec 2017 08:53:48 -0600
Subject: [gdal-dev] C++11: virtual and override
In-Reply-To: <CAB28AsgRn+STShA97bnGgCV6R2oqg+Mmj+WkugP5fSvLyO6Hkw@mail.gmail.com>
References: <CACmBxysC4V_pccWE6inDn_tv981mnXp2dohzOFF1wBw15jB+4w@mail.gmail.com>
 <CAB28AsjE_XYj3Mv2fBJ6m=Up2qhYWAJWCHOpNtdTk-2cPfWhWQ@mail.gmail.com>
 <CABUeae9hZPMKaVWsddL3dBvPJ+TdG8bUzTGNmXPiG8HjVT8neA@mail.gmail.com>
 <CAB28AsgRn+STShA97bnGgCV6R2oqg+Mmj+WkugP5fSvLyO6Hkw@mail.gmail.com>
Message-ID: <CACmBxyta=_KGDgnY0gPA-CEeSrEZ61Ewgs5EuDYAoNvMGufBFA@mail.gmail.com>

Demo with frmts/raw

https://trac.osgeo.org/gdal/changeset/41040
<https://www.google.com/url?sa=D&q=https%3A%2F%2Ftrac.osgeo.org%2Fgdal%2Fchangeset%2F41040>
https://trac.osgeo.org/gdal/changeset/41042
<https://www.google.com/url?sa=D&q=https%3A%2F%2Ftrac.osgeo.org%2Fgdal%2Fchangeset%2F41042>

On Thu, Dec 14, 2017 at 4:04 PM, Nyall Dawson <nyall.dawson at gmail.com>
wrote:

> On 15 December 2017 at 07:59, Mateusz Loskot <mateusz at loskot.net> wrote:
> > On 14 December 2017 at 22:57, Nyall Dawson <nyall.dawson at gmail.com>
> wrote:
> >> On 15 December 2017 at 03:35, Kurt Schwehr <schwehr at gmail.com> wrote:
> >>> About to start dropping virtual when there is override
> >>
> >> What process are you using to drop the "virtual" keywords here? We've
> >> got them all over QGIS, and I'd love to find an easy way to remove
> >> them.
> >
> > Refactoring with clang-tidy
>
> Ah - I see modernize-use-override does it now. Thanks!
>
> Nyall
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171215/a881758d/attachment-0001.html>

From even.rouault at spatialys.com  Fri Dec 15 07:22:53 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Dec 2017 16:22:53 +0100
Subject: [gdal-dev] [gdal-commits] r41044 - trunk/gdal/port
In-Reply-To: <20171215150423.62F73390137@trac.osgeo.org>
References: <20171215150423.62F73390137@trac.osgeo.org>
Message-ID: <4949137.1sF0OGmbH0@even-i700>

Kurt,

It doesn't look like constexpr is available in VS2013 (at least not in all sub-versions of it):
https://stackoverflow.com/questions/20264644/constexpr-not-compiling-in-vc2013

Personnally, I don't see it as a super needed feature that would justify dropping VS2013 
support. Especially in the below use cases where it doesn't bring anything more than const, 
except more characters to type/read. I'd bet any sane compiler in -O2 will compile the source 
to the same machine code in all those cases

Even

On vendredi 15 décembre 2017 07:04:23 CET you wrote:
> Author: goatbar
> Date: 2017-12-15 07:04:23 -0800 (Fri, 15 Dec 2017)
> New Revision: 41044
> 
> Modified:
>    trunk/gdal/port/cpl_conv.cpp
> Log:
> const -> constexpr for things known at compile time in cpl_conv.cpp
> 
> 
> 
> Modified: trunk/gdal/port/cpl_conv.cpp
> ===================================================================
> --- trunk/gdal/port/cpl_conv.cpp	2017-12-15 14:37:43 UTC (rev 41043)
> +++ trunk/gdal/port/cpl_conv.cpp	2017-12-15 15:04:23 UTC (rev 41044)
> @@ -340,8 +340,8 @@
>  /************************************************************************/
> 
>  // ASCII characters.
> -static const char knLF = 10;
> -static const char knCR = 13;
> +constexpr char knLF = 10;
> +constexpr char knCR = 13;
> 
>  /**
>   * Reads in at most one less than nBufferSize characters from the fp
> @@ -666,7 +666,7 @@
>  /*      the line.                                                       */
>  /* -------------------------------------------------------------------- */
>      char *pszRLBuffer = nullptr;
> -    const size_t nChunkSize = 40;
> +    constexpr size_t nChunkSize = 40;
>      char szChunk[nChunkSize] = {};
>      size_t nChunkBytesRead = 0;
>      int nBufLength = 0;
> @@ -1984,8 +1984,8 @@
>  /*                            CPLDMSToDec()                             */
>  /************************************************************************/
> 
> -static const char *sym = "NnEeSsWw";
> -static const double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
> +constexpr char sym[] = "NnEeSsWw";
> +constexpr double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
> 
>  /** CPLDMSToDec */
>  double CPLDMSToDec( const char *is )
> @@ -2605,7 +2605,7 @@
>  /* -------------------------------------------------------------------- */
>  /*      Prepare buffer.                                                 */
>  /* -------------------------------------------------------------------- */
> -    const size_t nBufferSize = 1024 * 1024;
> +    constexpr size_t nBufferSize = 1024 * 1024;
>      GByte *pabyBuffer = static_cast<GByte
> *>(VSI_MALLOC_VERBOSE(nBufferSize)); if( pabyBuffer == nullptr )
>      {
> 
> _______________________________________________
> gdal-commits mailing list
> gdal-commits at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-commits


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171215/c00233b5/attachment.html>

From schwehr at gmail.com  Fri Dec 15 13:49:32 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 15 Dec 2017 15:49:32 -0600
Subject: [gdal-dev] [gdal-commits] r41044 - trunk/gdal/port
In-Reply-To: <4949137.1sF0OGmbH0@even-i700>
References: <20171215150423.62F73390137@trac.osgeo.org>
 <4949137.1sF0OGmbH0@even-i700>
Message-ID: <CACmBxyvpKPzog1NM6oej-Nke+=tj1=Ku0XkkYw7nkq9JePS=0w@mail.gmail.com>

Ugh.  constexpr would be nice to get started on, but yes, many of the wins
come in more with C++14 and C++17.

https://ci.appveyor.com/project/OSGeo/gdal/build/1.0.4152/job/y7fusq8a4lopxpni

Environment: platform=x86, VSCOMNTOOLS=$(VS120COMNTOOLS), SDK=release-1800,
MSVC_VER=1800

cpl_error.cpp
c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : error C2144: syntax error :
'char' should be preceded by ';'
c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : error C4430: missing type
specifier - int assumed. Note: C++ does not support default-int
c:\projects\gdal\gdal\port\cpl_conv.cpp(344) : error C2144: syntax error :
'char' should be preceded by ';'
c:\projects\gdal\gdal\port\cpl_conv.cpp(344) : error C4430: missing type
specifier - int assumed. Note: C++ does not support default-int
c:\projects\gdal\gdal\port\cpl_conv.cpp(344) : error C2086: 'int constexpr'
: redefinition
        c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : see declaration of
'constexpr'
c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2146: syntax error :
missing ';' before identifier 'size_t'
c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2146: syntax error :
missing ';' before identifier 'nChunkSize'
c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2275: 'size_t' :
illegal use of this type as an expression
        c:\projects\gdal\gdal\port\predefined c++ types (compiler
internal)(19) : see declaration of 'size_t'
c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2065: 'nChunkSize' :
undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(670) : error C2065: 'nChunkSize' :
undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(682) : error C2065: 'nChunkSize' :
undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(691) : error C2065: 'nChunkSize' :
undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(702) : error C2065: 'nChunkSize' :
undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(702) : error C2660: 'VSIFReadL' :
function does not take 3 arguments
c:\projects\gdal\gdal\port\cpl_conv.cpp(709) : error C2065: 'nChunkSize' :
undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(760) : error C2065: 'nChunkSize' :
undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(1987) : error C2144: syntax error :
'char' should be preceded by ';'
c:\projects\gdal\gdal\port\cpl_conv.cpp(1987) : error C4430: missing type
specifier - int assumed. Note: C++ does not support default-int
c:\projects\gdal\gdal\port\cpl_conv.cpp(1987) : error C2086: 'int
constexpr' : redefinition
        c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : see declaration of
'constexpr'
c:\projects\gdal\gdal\port\cpl_conv.cpp(1988) : error C2144: syntax error :
'double' should be preceded by ';'
c:\projects\gdal\gdal\port\cpl_conv.cpp(1988) : error C4430: missing type
specifier - int assumed. Note: C++ does not support default-int
c:\projects\gdal\gdal\port\cpl_conv.cpp(1988) : error C2086: 'int
constexpr' : redefinition
        c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : see declaration of
'constexpr'
c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2146: syntax error :
missing ';' before identifier 'size_t'
c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2146: syntax error :
missing ';' before identifier 'nBufferSize'
c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2275: 'size_t' :
illegal use of this type as an expression
        c:\projects\gdal\gdal\port\predefined c++ types (compiler
internal)(19) : see declaration of 'size_t'
c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2065: 'nBufferSize'
: undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(2609) : error C2065: 'nBufferSize'
: undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(2624) : error C2065: 'nBufferSize'
: undeclared identifier
c:\projects\gdal\gdal\port\cpl_conv.cpp(2631) : error C2065: 'nBufferSize'
: undeclared identifier
cpl_string.cpp
cplstring.cpp


On Fri, Dec 15, 2017 at 9:22 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Kurt,
>
>
>
> It doesn't look like constexpr is available in VS2013 (at least not in all
> sub-versions of it):
>
> https://stackoverflow.com/questions/20264644/constexpr-
> not-compiling-in-vc2013
>
>
>
> Personnally, I don't see it as a super needed feature that would justify
> dropping VS2013 support. Especially in the below use cases where it doesn't
> bring anything more than const, except more characters to type/read. I'd
> bet any sane compiler in -O2 will compile the source to the same machine
> code in all those cases
>
>
>
> Even
>
>
>
> On vendredi 15 décembre 2017 07:04:23 CET you wrote:
>
> > Author: goatbar
>
> > Date: 2017-12-15 07:04:23 -0800 (Fri, 15 Dec 2017)
>
> > New Revision: 41044
>
> >
>
> > Modified:
>
> > trunk/gdal/port/cpl_conv.cpp
>
> > Log:
>
> > const -> constexpr for things known at compile time in cpl_conv.cpp
>
> >
>
> >
>
> >
>
> > Modified: trunk/gdal/port/cpl_conv.cpp
>
> > ===================================================================
>
> > --- trunk/gdal/port/cpl_conv.cpp 2017-12-15 14:37:43 UTC (rev 41043)
>
> > +++ trunk/gdal/port/cpl_conv.cpp 2017-12-15 15:04:23 UTC (rev 41044)
>
> > @@ -340,8 +340,8 @@
>
> > /***********************************************************
> *************/
>
> >
>
> > // ASCII characters.
>
> > -static const char knLF = 10;
>
> > -static const char knCR = 13;
>
> > +constexpr char knLF = 10;
>
> > +constexpr char knCR = 13;
>
> >
>
> > /**
>
> > * Reads in at most one less than nBufferSize characters from the fp
>
> > @@ -666,7 +666,7 @@
>
> > /* the line. */
>
> > /* --------------------------------------------------------------------
> */
>
> > char *pszRLBuffer = nullptr;
>
> > - const size_t nChunkSize = 40;
>
> > + constexpr size_t nChunkSize = 40;
>
> > char szChunk[nChunkSize] = {};
>
> > size_t nChunkBytesRead = 0;
>
> > int nBufLength = 0;
>
> > @@ -1984,8 +1984,8 @@
>
> > /* CPLDMSToDec() */
>
> > /***********************************************************
> *************/
>
> >
>
> > -static const char *sym = "NnEeSsWw";
>
> > -static const double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>
> > +constexpr char sym[] = "NnEeSsWw";
>
> > +constexpr double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>
> >
>
> > /** CPLDMSToDec */
>
> > double CPLDMSToDec( const char *is )
>
> > @@ -2605,7 +2605,7 @@
>
> > /* --------------------------------------------------------------------
> */
>
> > /* Prepare buffer. */
>
> > /* --------------------------------------------------------------------
> */
>
> > - const size_t nBufferSize = 1024 * 1024;
>
> > + constexpr size_t nBufferSize = 1024 * 1024;
>
> > GByte *pabyBuffer = static_cast<GByte
>
> > *>(VSI_MALLOC_VERBOSE(nBufferSize)); if( pabyBuffer == nullptr )
>
> > {
>
> >
>
> > _______________________________________________
>
> > gdal-commits mailing list
>
> > gdal-commits at lists.osgeo.org
>
> > https://lists.osgeo.org/mailman/listinfo/gdal-commits
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171215/41510862/attachment.html>

From schwehr at gmail.com  Fri Dec 15 14:14:28 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 15 Dec 2017 16:14:28 -0600
Subject: [gdal-dev] [gdal-commits] r41044 - trunk/gdal/port
In-Reply-To: <CACmBxyvpKPzog1NM6oej-Nke+=tj1=Ku0XkkYw7nkq9JePS=0w@mail.gmail.com>
References: <20171215150423.62F73390137@trac.osgeo.org>
 <4949137.1sF0OGmbH0@even-i700>
 <CACmBxyvpKPzog1NM6oej-Nke+=tj1=Ku0XkkYw7nkq9JePS=0w@mail.gmail.com>
Message-ID: <CACmBxyvKedUrQNtGt7yGmV4_2+_X24YErB=AhBioeuifgxD1eA@mail.gmail.com>

Reverted in https://trac.osgeo.org/gdal/changeset/41045

On Fri, Dec 15, 2017 at 3:49 PM, Kurt Schwehr <schwehr at gmail.com> wrote:

> Ugh.  constexpr would be nice to get started on, but yes, many of the wins
> come in more with C++14 and C++17.
>
> https://ci.appveyor.com/project/OSGeo/gdal/build/1.0.
> 4152/job/y7fusq8a4lopxpni
>
> Environment: platform=x86, VSCOMNTOOLS=$(VS120COMNTOOLS),
> SDK=release-1800, MSVC_VER=1800
>
> cpl_error.cpp
> c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : error C2144: syntax error
> : 'char' should be preceded by ';'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : error C4430: missing type
> specifier - int assumed. Note: C++ does not support default-int
> c:\projects\gdal\gdal\port\cpl_conv.cpp(344) : error C2144: syntax error
> : 'char' should be preceded by ';'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(344) : error C4430: missing type
> specifier - int assumed. Note: C++ does not support default-int
> c:\projects\gdal\gdal\port\cpl_conv.cpp(344) : error C2086: 'int
> constexpr' : redefinition
>         c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : see declaration of
> 'constexpr'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2146: syntax error
> : missing ';' before identifier 'size_t'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2146: syntax error
> : missing ';' before identifier 'nChunkSize'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2275: 'size_t' :
> illegal use of this type as an expression
>         c:\projects\gdal\gdal\port\predefined c++ types (compiler
> internal)(19) : see declaration of 'size_t'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(669) : error C2065: 'nChunkSize'
> : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(670) : error C2065: 'nChunkSize'
> : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(682) : error C2065: 'nChunkSize'
> : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(691) : error C2065: 'nChunkSize'
> : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(702) : error C2065: 'nChunkSize'
> : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(702) : error C2660: 'VSIFReadL' :
> function does not take 3 arguments
> c:\projects\gdal\gdal\port\cpl_conv.cpp(709) : error C2065: 'nChunkSize'
> : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(760) : error C2065: 'nChunkSize'
> : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(1987) : error C2144: syntax error
> : 'char' should be preceded by ';'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(1987) : error C4430: missing type
> specifier - int assumed. Note: C++ does not support default-int
> c:\projects\gdal\gdal\port\cpl_conv.cpp(1987) : error C2086: 'int
> constexpr' : redefinition
>         c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : see declaration of
> 'constexpr'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(1988) : error C2144: syntax error
> : 'double' should be preceded by ';'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(1988) : error C4430: missing type
> specifier - int assumed. Note: C++ does not support default-int
> c:\projects\gdal\gdal\port\cpl_conv.cpp(1988) : error C2086: 'int
> constexpr' : redefinition
>         c:\projects\gdal\gdal\port\cpl_conv.cpp(343) : see declaration of
> 'constexpr'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2146: syntax error
> : missing ';' before identifier 'size_t'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2146: syntax error
> : missing ';' before identifier 'nBufferSize'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2275: 'size_t' :
> illegal use of this type as an expression
>         c:\projects\gdal\gdal\port\predefined c++ types (compiler
> internal)(19) : see declaration of 'size_t'
> c:\projects\gdal\gdal\port\cpl_conv.cpp(2608) : error C2065:
> 'nBufferSize' : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(2609) : error C2065:
> 'nBufferSize' : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(2624) : error C2065:
> 'nBufferSize' : undeclared identifier
> c:\projects\gdal\gdal\port\cpl_conv.cpp(2631) : error C2065:
> 'nBufferSize' : undeclared identifier
> cpl_string.cpp
> cplstring.cpp
>
>
> On Fri, Dec 15, 2017 at 9:22 AM, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> Kurt,
>>
>>
>>
>> It doesn't look like constexpr is available in VS2013 (at least not in
>> all sub-versions of it):
>>
>> https://stackoverflow.com/questions/20264644/constexpr-not-
>> compiling-in-vc2013
>>
>>
>>
>> Personnally, I don't see it as a super needed feature that would justify
>> dropping VS2013 support. Especially in the below use cases where it doesn't
>> bring anything more than const, except more characters to type/read. I'd
>> bet any sane compiler in -O2 will compile the source to the same machine
>> code in all those cases
>>
>>
>>
>> Even
>>
>>
>>
>> On vendredi 15 décembre 2017 07:04:23 CET you wrote:
>>
>> > Author: goatbar
>>
>> > Date: 2017-12-15 07:04:23 -0800 (Fri, 15 Dec 2017)
>>
>> > New Revision: 41044
>>
>> >
>>
>> > Modified:
>>
>> > trunk/gdal/port/cpl_conv.cpp
>>
>> > Log:
>>
>> > const -> constexpr for things known at compile time in cpl_conv.cpp
>>
>> >
>>
>> >
>>
>> >
>>
>> > Modified: trunk/gdal/port/cpl_conv.cpp
>>
>> > ===================================================================
>>
>> > --- trunk/gdal/port/cpl_conv.cpp 2017-12-15 14:37:43 UTC (rev 41043)
>>
>> > +++ trunk/gdal/port/cpl_conv.cpp 2017-12-15 15:04:23 UTC (rev 41044)
>>
>> > @@ -340,8 +340,8 @@
>>
>> > /***********************************************************
>> *************/
>>
>> >
>>
>> > // ASCII characters.
>>
>> > -static const char knLF = 10;
>>
>> > -static const char knCR = 13;
>>
>> > +constexpr char knLF = 10;
>>
>> > +constexpr char knCR = 13;
>>
>> >
>>
>> > /**
>>
>> > * Reads in at most one less than nBufferSize characters from the fp
>>
>> > @@ -666,7 +666,7 @@
>>
>> > /* the line. */
>>
>> > /* --------------------------------------------------------------------
>> */
>>
>> > char *pszRLBuffer = nullptr;
>>
>> > - const size_t nChunkSize = 40;
>>
>> > + constexpr size_t nChunkSize = 40;
>>
>> > char szChunk[nChunkSize] = {};
>>
>> > size_t nChunkBytesRead = 0;
>>
>> > int nBufLength = 0;
>>
>> > @@ -1984,8 +1984,8 @@
>>
>> > /* CPLDMSToDec() */
>>
>> > /***********************************************************
>> *************/
>>
>> >
>>
>> > -static const char *sym = "NnEeSsWw";
>>
>> > -static const double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>>
>> > +constexpr char sym[] = "NnEeSsWw";
>>
>> > +constexpr double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>>
>> >
>>
>> > /** CPLDMSToDec */
>>
>> > double CPLDMSToDec( const char *is )
>>
>> > @@ -2605,7 +2605,7 @@
>>
>> > /* --------------------------------------------------------------------
>> */
>>
>> > /* Prepare buffer. */
>>
>> > /* --------------------------------------------------------------------
>> */
>>
>> > - const size_t nBufferSize = 1024 * 1024;
>>
>> > + constexpr size_t nBufferSize = 1024 * 1024;
>>
>> > GByte *pabyBuffer = static_cast<GByte
>>
>> > *>(VSI_MALLOC_VERBOSE(nBufferSize)); if( pabyBuffer == nullptr )
>>
>> > {
>>
>> >
>>
>> > _______________________________________________
>>
>> > gdal-commits mailing list
>>
>> > gdal-commits at lists.osgeo.org
>>
>> > https://lists.osgeo.org/mailman/listinfo/gdal-commits
>>
>>
>>
>>
>>
>> --
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>
>
>
> --
> --
> http://schwehr.org
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171215/cb9c0907/attachment-0001.html>

From schwehr at gmail.com  Fri Dec 15 15:14:04 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 15 Dec 2017 17:14:04 -0600
Subject: [gdal-dev] Adding k for const to RFC 8
Message-ID: <CACmBxyvSvjVZuGUfdTbK=0AVXVntC7OvmojWNGtvJnfv8z=zbg@mail.gmail.com>

I propose that we add 'k' for constant to
https://trac.osgeo.org/gdal/wiki/rfc8_devguide  It's a pretty common
convention.

Starter links:

https://stackoverflow.com/questions/5016622/where-does-the-k-prefix-for-constants-come-from
https://google.github.io/styleguide/cppguide.html#Constant_Names
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171215/2dbe91a3/attachment.html>

From andrew at aitchison.me.uk  Fri Dec 15 23:21:57 2017
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sat, 16 Dec 2017 07:21:57 +0000 (GMT)
Subject: [gdal-dev] constexpr - was Re: [gdal-commits] r41044 -
 trunk/gdal/port
In-Reply-To: <4949137.1sF0OGmbH0@even-i700>
References: <20171215150423.62F73390137@trac.osgeo.org>
 <4949137.1sF0OGmbH0@even-i700>
Message-ID: <alpine.LRH.2.21.1712160707500.8352@warden.aitchison.me.uk>

On Fri, 15 Dec 2017, Even Rouault wrote:

> Kurt,
>
> It doesn't look like constexpr is available in VS2013 (at least not in all sub-versions of it):
> https://stackoverflow.com/questions/20264644/constexpr-not-compiling-in-vc2013
>
> Personnally, I don't see it as a super needed feature that would justify dropping VS2013
> support. Especially in the below use cases where it doesn't bring anything more than const,
> except more characters to type/read. I'd bet any sane compiler in -O2 will compile the source
> to the same machine code in all those cases

As a C programmer, writing gdal device drivers is teaching me much about 
C++, but I'm finding it difficult to understand why I should need to care
whether a const is a constexpr.

Except in the rare case where I might want a value that cannot be initialised
at compile time, but my code must not change once it has been initialised,
I don't see the need to distinguish between the two and wish that a const
was a constexpr unless otherwise declared.

I worry that Kurt's improvements are turning C++ into a foreign language 
for me.

> On vendredi 15 décembre 2017 07:04:23 CET you wrote:
>> Author: goatbar
>> Date: 2017-12-15 07:04:23 -0800 (Fri, 15 Dec 2017)
>> New Revision: 41044
>>
>> Modified:
>>    trunk/gdal/port/cpl_conv.cpp
>> Log:
>> const -> constexpr for things known at compile time in cpl_conv.cpp
>>
>>
>> Modified: trunk/gdal/port/cpl_conv.cpp
>> ===================================================================
>> --- trunk/gdal/port/cpl_conv.cpp	2017-12-15 14:37:43 UTC (rev 41043)
>> +++ trunk/gdal/port/cpl_conv.cpp	2017-12-15 15:04:23 UTC (rev 41044)
>> @@ -340,8 +340,8 @@
>>  /************************************************************************/
>>
>>  // ASCII characters.
>> -static const char knLF = 10;
>> -static const char knCR = 13;
>> +constexpr char knLF = 10;
>> +constexpr char knCR = 13;
>>
>>  /**
>>   * Reads in at most one less than nBufferSize characters from the fp
>> @@ -666,7 +666,7 @@
>>  /*      the line.                                                       */
>>  /* -------------------------------------------------------------------- */
>>      char *pszRLBuffer = nullptr;
>> -    const size_t nChunkSize = 40;
>> +    constexpr size_t nChunkSize = 40;
>>      char szChunk[nChunkSize] = {};
>>      size_t nChunkBytesRead = 0;
>>      int nBufLength = 0;
>> @@ -1984,8 +1984,8 @@
>>  /*                            CPLDMSToDec()                             */
>>  /************************************************************************/
>>
>> -static const char *sym = "NnEeSsWw";
>> -static const double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>> +constexpr char sym[] = "NnEeSsWw";
>> +constexpr double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>>
>>  /** CPLDMSToDec */
>>  double CPLDMSToDec( const char *is )
>> @@ -2605,7 +2605,7 @@
>>  /* -------------------------------------------------------------------- */
>>  /*      Prepare buffer.                                                 */
>>  /* -------------------------------------------------------------------- */
>> -    const size_t nBufferSize = 1024 * 1024;
>> +    constexpr size_t nBufferSize = 1024 * 1024;
>>      GByte *pabyBuffer = static_cast<GByte
>> *>(VSI_MALLOC_VERBOSE(nBufferSize)); if( pabyBuffer == nullptr )
>>      {
>>
>> _______________________________________________
>> gdal-commits mailing list
>> gdal-commits at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-commits
>
>
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>

From andrew at aitchison.me.uk  Fri Dec 15 23:44:00 2017
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sat, 16 Dec 2017 07:44:00 +0000 (GMT)
Subject: [gdal-dev] Adding k for const to RFC 8
In-Reply-To: <CACmBxyvSvjVZuGUfdTbK=0AVXVntC7OvmojWNGtvJnfv8z=zbg@mail.gmail.com>
References: <CACmBxyvSvjVZuGUfdTbK=0AVXVntC7OvmojWNGtvJnfv8z=zbg@mail.gmail.com>
Message-ID: <alpine.LRH.2.21.1712160729470.8883@warden.aitchison.me.uk>

On Fri, 15 Dec 2017, Kurt Schwehr wrote:

> I propose that we add 'k' for constant to
> https://trac.osgeo.org/gdal/wiki/rfc8_devguide  It's a pretty common
> convention.

I'm happy to have that convention when reading,
but when writing code it will seem like an imposition.

> Starter links:
>
> https://stackoverflow.com/questions/5016622/where-does-the-k-prefix-for-constants-come-from
> https://google.github.io/styleguide/cppguide.html#Constant_Names

After reading the stackoverflow I'm less keen to add this.
Yes, this gives a slight hint to the human reader, but the compiler
will let me know if I try to change the value, so why do I need the
reminder throughout the code ?

I don't have a vote, but I think "-1".

Sorry,

-- 
Andrew C. Aitchison					Cambridge, UK
 			andrew at aitchison.me.uk



From andrew at aitchison.me.uk  Fri Dec 15 23:53:01 2017
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sat, 16 Dec 2017 07:53:01 +0000 (GMT)
Subject: [gdal-dev] Race condition between forked processes with opened
 Tiff dataset on Linux
In-Reply-To: <CAC3MgJYoUyQLkmx9xNZbZmNPQXxHcpmFGy9E0vuQkACDqQ+LJg@mail.gmail.com>
References: <CAC3MgJYoUyQLkmx9xNZbZmNPQXxHcpmFGy9E0vuQkACDqQ+LJg@mail.gmail.com>
Message-ID: <alpine.LRH.2.21.1712141854300.28915@warden.aitchison.me.uk>


On Thu, 14 Dec 2017, Jiri Drbalek wrote:

> Hello.
>
> If a Linux process with opened Tiff dataset is forked, it is not possible
> to read from the dataset concurrently in these forked processes, because
> file offsets and other attributes of the opened Tiff file are shared
> between those processes.

> I've made a patch which optionally close the underlying Tiff file once a
> dataset is opened. One can then fork safely, underlying file is lazily
> opened again in each subprocess.
>
> What do you think about this problem and proposed solutions? Is there some
> more elegant solution?

Can I assume that we are talking about opening for read and not for write ?

For writing, I was taught that multi-process programs should do all file 
writing in a dedicated thread.

-- 
Andrew C. Aitchison					Cambridge, UK
 			andrew at aitchison.me.uk

From jiri.drbalek at gmail.com  Sat Dec 16 01:04:56 2017
From: jiri.drbalek at gmail.com (Jiri Drbalek)
Date: Sat, 16 Dec 2017 10:04:56 +0100
Subject: [gdal-dev] Race condition between forked processes with opened
 Tiff dataset on Linux
In-Reply-To: <alpine.LRH.2.21.1712141854300.28915@warden.aitchison.me.uk>
References: <CAC3MgJYoUyQLkmx9xNZbZmNPQXxHcpmFGy9E0vuQkACDqQ+LJg@mail.gmail.com>
 <alpine.LRH.2.21.1712141854300.28915@warden.aitchison.me.uk>
Message-ID: <CAC3MgJZ4wFCjOYbPLj30L6MWkr_f3Nh3uRc8FCbV9V9gUJP=4A@mail.gmail.com>

> Can I assume that we are talking about opening for read and not for write ?

Yes, it's only for reading.

I've concluded eventually that I will try to use memory mapping.

Here is a post about memory mapping between Even and me I forgot to
resend to the mailing list:

> Dear Even,
>
> Thank you for your helpful answer.
>
> I forgot to mention that when I was testing the fork() situation with
> libtiff alone, it was working fine when the tiff file was memory
> mapped. Unfortunately, for some reason, GDAL doesn't support memory
> mapping of compressed tiffs. Libtiff can read them, at least those
> with deflate compression I've tested. What is the reason for that
> restriction?

mmap is platform specific, so there was a need for a more general
mechanism. And at the time the GeoTIFF driver was created, 32 bit
processes were still common but large files already existed, so even
on Linux, mmap wasn't really always usable. Another potential issue is
that the OS might not behave appropriately if you mmap() a file larger
than the available RAM and read it entirely. At least that was my
experience with some older kernels where the OS wouldn't unload cached
pages aggressively enough, making it irresponsive due to heavy cache
swapping.

Another option at the /vsi level I looked yesterday was the use of
pread() that takes both a file offset and size to read, and makes it
possible to use the same underlying file descriptor from multiple
threads/processes. But the caveat is that this translates directly as
a system call, bypassing file stream buffering.

> Should I try to enable mmaping of compressed tiffs?

That could be a solution worth investigating. Perhaps restricted to
64bit posix platforms, and with a configuration option, such as the
existing GTIFF_USE_MMAP that you'll see if you look at
frmts/gtiff/tifvsi.cpp. The name is a bit misleading since that's
currently only available for a pseudo-mmap emulation for /vsimem/
files, that was added per https://trac.osgeo.org/gdal/changeset/39555.
As you may wonder why this was done, the aim was to be able to test
the code paths in libtiff that are mmap() specific, when GDAL is
tortured by oss-fuzz.


Even

2017-12-16 8:53 GMT+01:00, Andrew C Aitchison <andrew at aitchison.me.uk>:
>
> On Thu, 14 Dec 2017, Jiri Drbalek wrote:
>
>> Hello.
>>
>> If a Linux process with opened Tiff dataset is forked, it is not possible
>> to read from the dataset concurrently in these forked processes, because
>> file offsets and other attributes of the opened Tiff file are shared
>> between those processes.
>
>> I've made a patch which optionally close the underlying Tiff file once a
>> dataset is opened. One can then fork safely, underlying file is lazily
>> opened again in each subprocess.
>>
>> What do you think about this problem and proposed solutions? Is there
>> some
>> more elegant solution?
>
> Can I assume that we are talking about opening for read and not for write ?
>
> For writing, I was taught that multi-process programs should do all file
> writing in a dedicated thread.
>
> --
> Andrew C. Aitchison					Cambridge, UK
>  			andrew at aitchison.me.uk
>

From schwehr at gmail.com  Sat Dec 16 06:33:45 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sat, 16 Dec 2017 08:33:45 -0600
Subject: [gdal-dev] constexpr - was Re: [gdal-commits] r41044 -
	trunk/gdal/port
In-Reply-To: <alpine.LRH.2.21.1712160707500.8352@warden.aitchison.me.uk>
References: <20171215150423.62F73390137@trac.osgeo.org>
 <4949137.1sF0OGmbH0@even-i700>
 <alpine.LRH.2.21.1712160707500.8352@warden.aitchison.me.uk>
Message-ID: <CACmBxyuSnbVNdBf5ojk8_a08L_bv5dok_-_Rf792QSZE7LNjgw@mail.gmail.com>

A few points... All my personal opinions.  Written on a phone, so sorry for
the bad writing

Writing happens once
Modifying happens occasionally
Debugging through and reading happen continuously throughout the community

GDAL is probably the largest source of oss fuzz bugs.  I think we should be
doing more, not less, to make the system more stable and debugable.

Each individual change might not seen like much, but they really add up.

There is a lot I have to keep in my head for gdal that I don't with other
code bases because the are using the current conventions that help with so
many issues and give common ground.

Well done C++ makes being large scale systems so much easier and
modernizing GDAL means the whole community will get more out of GDAL.

These points are especially true with the sprawling style of GDAL.

Things like consexpr are easy and set us up for lower maintenance costs in
the future with C++14, 17 and beyond.

On Dec 16, 2017 1:27 AM, "Andrew C Aitchison" <andrew at aitchison.me.uk>
wrote:

> On Fri, 15 Dec 2017, Even Rouault wrote:
>
> Kurt,
>>
>> It doesn't look like constexpr is available in VS2013 (at least not in
>> all sub-versions of it):
>> https://stackoverflow.com/questions/20264644/constexpr-not-
>> compiling-in-vc2013
>>
>> Personnally, I don't see it as a super needed feature that would justify
>> dropping VS2013
>> support. Especially in the below use cases where it doesn't bring
>> anything more than const,
>> except more characters to type/read. I'd bet any sane compiler in -O2
>> will compile the source
>> to the same machine code in all those cases
>>
>
> As a C programmer, writing gdal device drivers is teaching me much about
> C++, but I'm finding it difficult to understand why I should need to care
> whether a const is a constexpr.
>
> Except in the rare case where I might want a value that cannot be
> initialised
> at compile time, but my code must not change once it has been initialised,
> I don't see the need to distinguish between the two and wish that a const
> was a constexpr unless otherwise declared.
>
> I worry that Kurt's improvements are turning C++ into a foreign language
> for me.
>
> On vendredi 15 décembre 2017 07:04:23 CET you wrote:
>>
>>> Author: goatbar
>>> Date: 2017-12-15 07:04:23 -0800 (Fri, 15 Dec 2017)
>>> New Revision: 41044
>>>
>>> Modified:
>>>    trunk/gdal/port/cpl_conv.cpp
>>> Log:
>>> const -> constexpr for things known at compile time in cpl_conv.cpp
>>>
>>>
>>> Modified: trunk/gdal/port/cpl_conv.cpp
>>> ===================================================================
>>> --- trunk/gdal/port/cpl_conv.cpp        2017-12-15 14:37:43 UTC (rev
>>> 41043)
>>> +++ trunk/gdal/port/cpl_conv.cpp        2017-12-15 15:04:23 UTC (rev
>>> 41044)
>>> @@ -340,8 +340,8 @@
>>>  /**********************************************************
>>> **************/
>>>
>>>  // ASCII characters.
>>> -static const char knLF = 10;
>>> -static const char knCR = 13;
>>> +constexpr char knLF = 10;
>>> +constexpr char knCR = 13;
>>>
>>>  /**
>>>   * Reads in at most one less than nBufferSize characters from the fp
>>> @@ -666,7 +666,7 @@
>>>  /*      the line.
>>>  */
>>>  /* --------------------------------------------------------------------
>>> */
>>>      char *pszRLBuffer = nullptr;
>>> -    const size_t nChunkSize = 40;
>>> +    constexpr size_t nChunkSize = 40;
>>>      char szChunk[nChunkSize] = {};
>>>      size_t nChunkBytesRead = 0;
>>>      int nBufLength = 0;
>>> @@ -1984,8 +1984,8 @@
>>>  /*                            CPLDMSToDec()
>>>  */
>>>  /**********************************************************
>>> **************/
>>>
>>> -static const char *sym = "NnEeSsWw";
>>> -static const double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>>> +constexpr char sym[] = "NnEeSsWw";
>>> +constexpr double vm[] = { 1.0, 0.0166666666667, 0.00027777778 };
>>>
>>>  /** CPLDMSToDec */
>>>  double CPLDMSToDec( const char *is )
>>> @@ -2605,7 +2605,7 @@
>>>  /* --------------------------------------------------------------------
>>> */
>>>  /*      Prepare buffer.
>>>  */
>>>  /* --------------------------------------------------------------------
>>> */
>>> -    const size_t nBufferSize = 1024 * 1024;
>>> +    constexpr size_t nBufferSize = 1024 * 1024;
>>>      GByte *pabyBuffer = static_cast<GByte
>>> *>(VSI_MALLOC_VERBOSE(nBufferSize)); if( pabyBuffer == nullptr )
>>>      {
>>>
>>> _______________________________________________
>>> gdal-commits mailing list
>>> gdal-commits at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-commits
>>>
>>
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171216/e7a08741/attachment-0001.html>

From even.rouault at spatialys.com  Sat Dec 16 11:45:41 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Dec 2017 20:45:41 +0100
Subject: [gdal-dev] VS 2013 and list initialization
Message-ID: <1838034.6QRfzmjrO5@even-i700>

Hi,

While writing a new driver, I've experimented a bit with C++11 default non-static data
member initialization.

Unfortunately the following

class C
{
	double m_adfGeotransform[6]{0,1,0,0,0,1}; // breaks VS 2013
};

which works with conformant C+11 compilers breaks on VS 2013 with

error C2797: 
list initialization inside member initializer list or non-static data member initializer is not implemented

Similary, double m_adfGeotransform[6] = {0,1,0,0,0,1} also breaks.

This is discussed in
https://stackoverflow.com/questions/27741521/error-c2797-list-initialization-inside-member-initializer-list
https://blogs.msdn.microsoft.com/vcblog/2014/08/19/the-future-of-non-static-data-member-initialization/
The issue has been solved in VS2015

A workaround is to use std::array and non-static data member initialization with equal initializer and explicit type
in front of initialized values

class C 
{
	std::array<double,6> m_adfGeotransform = std::array<double,6>{{0,1,0,0,0,1}}; // OK VS 2013
};

(For the same reason as above, direct initialization
     std::array<double,6> m_adfGeotransform{{0,1,0,0,0,1}}; // breaks VS 2013
)

Given this and other issues found, we might revisit at some point supporting VS2013. Would
still be good to try to have it for GDAL 2.3, but we can perhaps drop it afterwards.


Even



-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171216/3568859e/attachment.html>

From even.rouault at spatialys.com  Sun Dec 17 06:19:17 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 17 Dec 2017 15:19:17 +0100
Subject: [gdal-dev] EPSG v9.2 upgrade
Message-ID: <4885868.PbkTNDzd4G@even-i700>

Hi,

I've updated to the EPSG v9.2 database.

The relevant tickets/commits are:
* libgeotiff: https://trac.osgeo.org/geotiff/changeset/2802
* GDAL: https://trac.osgeo.org/gdal/ticket/7125
* proj.4: https://github.com/OSGeo/proj.4/issues/711
* postgis: https://trac.osgeo.org/postgis/ticket/3944 (patch submitted)

Summary of changes since v9.0:
- change of TOWGS84 for Saint Pierre et Miquelon 1950
- 4 new Ferro based CS
- addition of various NAD83 realizations/versions as datums and geographic CS
- new Australian GDA2020 based PCS
- new NAD83 based PCS (Wisconsin, Oregon, others)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171217/7656bbe2/attachment.html>

From palmerjnz at gmail.com  Sun Dec 17 12:36:10 2017
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Mon, 18 Dec 2017 09:36:10 +1300
Subject: [gdal-dev] OGR GeoJSON output
Message-ID: <CAA5WJY=44ELsTzKpNBgLaDr0=oLb_Y69tWS0dNBubFh-EBBQbw@mail.gmail.com>

I have a table without a geometry field and would like to create a simple
JSON file containing property key-pairs values without the GeoJSON schema.
Is this possible with ogr2ogr?

Thanks,
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/7df35ed3/attachment.html>

From even.rouault at spatialys.com  Sun Dec 17 13:03:42 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 17 Dec 2017 22:03:42 +0100
Subject: [gdal-dev] OGR GeoJSON output
In-Reply-To: <CAA5WJY=44ELsTzKpNBgLaDr0=oLb_Y69tWS0dNBubFh-EBBQbw@mail.gmail.com>
References: <CAA5WJY=44ELsTzKpNBgLaDr0=oLb_Y69tWS0dNBubFh-EBBQbw@mail.gmail.com>
Message-ID: <1761436.i3zHVWNv41@even-i700>

On lundi 18 décembre 2017 09:36:10 CET Jeremy Palmer wrote:
> I have a table without a geometry field and would like to create a simple
> JSON file containing property key-pairs values without the GeoJSON schema.
> Is this possible with ogr2ogr?

Jeremy,

Given test.csv

id,val
1,100
2,200


$ ogr2ogr -f geojson /vsistdout/ test.csv -oo AUTODETECT_TYPE=YES  | jq  "[.features[].properties]"

[
  {
    "id": 1,
    "val": 100
  },
  {
    "id": 2,
    "val": 200
  }
]


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171217/4cd135eb/attachment.html>

From sean at mapbox.com  Sun Dec 17 13:58:27 2017
From: sean at mapbox.com (Sean Gillies)
Date: Sun, 17 Dec 2017 14:58:27 -0700
Subject: [gdal-dev] OGR GeoJSON output
In-Reply-To: <1761436.i3zHVWNv41@even-i700>
References: <CAA5WJY=44ELsTzKpNBgLaDr0=oLb_Y69tWS0dNBubFh-EBBQbw@mail.gmail.com>
 <1761436.i3zHVWNv41@even-i700>
Message-ID: <CADPhZXxdo9FYt8yp88=_jhJB8Oo93+BHTwjFTOEWfa7aLdTaMw@mail.gmail.com>

Even,

I found an example in the jq Cookbook of doing it with nothing other than
jq.


https://github.com/stedolan/jq/wiki/Cookbook#convert-a-csv-file-with-headers-to-json

The "sed for JSON" tagline is pretty accurate!

On Sun, Dec 17, 2017 at 2:03 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 18 décembre 2017 09:36:10 CET Jeremy Palmer wrote:
>
> > I have a table without a geometry field and would like to create a simple
>
> > JSON file containing property key-pairs values without the GeoJSON
> schema.
>
> > Is this possible with ogr2ogr?
>
>
>
> Jeremy,
>
>
>
> Given test.csv
>
>
>
> id,val
>
> 1,100
>
> 2,200
>
>
>
>
>
> $ ogr2ogr -f geojson /vsistdout/ test.csv -oo AUTODETECT_TYPE=YES | jq
> "[.features[].properties]"
>
>
>
> [
>
> {
>
> "id": 1,
>
> "val": 100
>
> },
>
> {
>
> "id": 2,
>
> "val": 200
>
> }
>
> ]
>
>
>
>
>
> Even
>
>
>
> --
>

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171217/d9e8207b/attachment.html>

From palmerjnz at gmail.com  Sun Dec 17 14:08:55 2017
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Mon, 18 Dec 2017 11:08:55 +1300
Subject: [gdal-dev] OGR GeoJSON output
In-Reply-To: <CADPhZXxdo9FYt8yp88=_jhJB8Oo93+BHTwjFTOEWfa7aLdTaMw@mail.gmail.com>
References: <CAA5WJY=44ELsTzKpNBgLaDr0=oLb_Y69tWS0dNBubFh-EBBQbw@mail.gmail.com>
 <1761436.i3zHVWNv41@even-i700>
 <CADPhZXxdo9FYt8yp88=_jhJB8Oo93+BHTwjFTOEWfa7aLdTaMw@mail.gmail.com>
Message-ID: <CAA5WJYnSfy=46CTo2rEX9XDwzZQwhMnHQau8kxqQxxoBiF68BQ@mail.gmail.com>

Thanks Both.

On Mon, Dec 18, 2017 at 10:58 AM, Sean Gillies <sean at mapbox.com> wrote:

> Even,
>
> I found an example in the jq Cookbook of doing it with nothing other than
> jq.
>
>   https://github.com/stedolan/jq/wiki/Cookbook#convert-a-
> csv-file-with-headers-to-json
>
> The "sed for JSON" tagline is pretty accurate!
>

 jq is definitely very cool. My workflow is a little more complex, than
reading a CSV file as I'm converting from from a WFS endpoint and doing a
transformation with SQL. e.g:

ogr2ogr -f GeoJSON /vsistdout WFS:"
https://data.linz.govt.nz/services;key=$API_KEY/wfs/layer-51572" -dialect
sqlite -sql "SELECT id, lease_name AS name,
ST_Y(ST_Transform(ST_Centroid(geometry), 4326)) || ', ' ||
ST_X(ST_Transform(ST_Centroid(geometry), 4326)) AS latlon FROM
\"data.linz.govt.nz:layer-51572\"" | jq "[.features[].properties]"

Cheers
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/ea78b0df/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Dec 18 02:53:51 2017
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Mon, 18 Dec 2017 10:53:51 +0000
Subject: [gdal-dev] Why gdal_rasterize fails with MBTiles output?
Message-ID: <3676aa4d6905433383bb4fc6f8ccbded@C119S212VM042.msvyvi.vaha.local>

Hi,

Captured from gis.stackexchange https://gis.stackexchange.com/questions/264899/create-mbtiles-from-geojson-in-raster-format

I made some test data in EPSG:3857 and while GeoTIFF output works fine with GDAL 2.3dev

gdal_rasterize -ot Byte  -burn 255 -burn 0 -burn 0 -ts 4950 4950
-of GTiff points_3857.json points_3857.tif -co tiled=yes
0...10...20...30...40...50...60...70...80...90...100 - done.

the same command with MBTiles outpur gives me the same error than in the question

gdal_rasterize -ot Byte  -burn 255 -burn 0 -burn 0 -ts 4950 4950
-of MBTiles points_3857.json points_3857.mbtiles
ERROR 6: Could not find an appropriate zoom level that matches raster pixel size

0...10...20...30...40...50...60...70...80...90...100 - done.
ERROR 6: IWriteBlock() not supported if georeferencing not set
ERROR 6: IWriteBlock() not supported if georeferencing not set
ERROR 6: IWriteBlock() not supported if georeferencing not set

So it seems that having geojson as input is not the issue, but having MBTiles as output.

-Jukka Rahkonen-


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/5b06b5d9/attachment-0001.html>

From even.rouault at spatialys.com  Mon Dec 18 03:12:25 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Dec 2017 12:12:25 +0100
Subject: [gdal-dev] Why gdal_rasterize fails with MBTiles output?
In-Reply-To: <3676aa4d6905433383bb4fc6f8ccbded@C119S212VM042.msvyvi.vaha.local>
References: <3676aa4d6905433383bb4fc6f8ccbded@C119S212VM042.msvyvi.vaha.local>
Message-ID: <1654139.5vbkQHPbd3@even-i700>

Jukka,

> 
> gdal_rasterize -ot Byte  -burn 255 -burn 0 -burn 0 -ts 4950 4950
> -of MBTiles points_3857.json points_3857.mbtiles
> ERROR 6: Could not find an appropriate zoom level that matches raster pixel
> size

The error message says it all, doesn't it ? MBTiles only accepts a single tiling scheme, with a 
pre-defined set of zoom levels / resolutions. By default, when gdal_rasterize will initialize the 
output raster, the chance that it fits to those constraints is extremely unlikely.

Now you may wonder why you can gdal_translate an arbitrary raster as MBTiles. This is 
because MBTiles (similarly to GeoPackage with a predefined tiling scheme) sheat in its 
CreateCopy() implementation to invoke the warping engine to reproject/resample to one of 
the compatible zoom level.

But gdal_rasterize use the Create() interface, so this isn't possible.

Obvious workaround: rasterize to TIF and translate to MBTiles.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/b410ff99/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Dec 18 03:47:23 2017
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Mon, 18 Dec 2017 11:47:23 +0000
Subject: [gdal-dev] Why gdal_rasterize fails with MBTiles output?
Message-ID: <75011dcf7af7447fa92a4d17955ce898@C119S212VM042.msvyvi.vaha.local>

Hi Even,

I agree that the first error message says it all and I guessed that the issue was in initializing the output to suit with the tile boundaries. I would also say that the documentation of MBTiles format is not so clear for users who have as little experience as I have, or less.

"The driver implements the Create() and IWriteBlock() methods, so that arbitrary writing of raster blocks is possible, enabling the direct use of MBTiles as the output dataset of utilities such as gdalwarp.

On creation, raster blocks can be written only if the geotransformation matrix has been set with SetGeoTransform() This is effectively needed to determine the zoom level of the full resolution dataset based on the pixel resolution, dataset and tile dimensions."

In this case also message ERROR 6: IWriteBlock() not supported if georeferencing not set
can make user to believe that there is something wrong with srs of input vectors.
-Jukka-

Lähettäjä: Even Rouault [mailto:even.rouault at spatialys.com]
Lähetetty: 18. joulukuuta 2017 13:12
Vastaanottaja: gdal-dev at lists.osgeo.org
Kopio: Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi>
Aihe: Re: [gdal-dev] Why gdal_rasterize fails with MBTiles output?


Jukka,



>

> gdal_rasterize -ot Byte -burn 255 -burn 0 -burn 0 -ts 4950 4950

> -of MBTiles points_3857.json points_3857.mbtiles

> ERROR 6: Could not find an appropriate zoom level that matches raster pixel

> size



The error message says it all, doesn't it ? MBTiles only accepts a single tiling scheme, with a pre-defined set of zoom levels / resolutions. By default, when gdal_rasterize will initialize the output raster, the chance that it fits to those constraints is extremely unlikely.



Now you may wonder why you can gdal_translate an arbitrary raster as MBTiles. This is because MBTiles (similarly to GeoPackage with a predefined tiling scheme) sheat in its CreateCopy() implementation to invoke the warping engine to reproject/resample to one of the compatible zoom level.



But gdal_rasterize use the Create() interface, so this isn't possible.



Obvious workaround: rasterize to TIF and translate to MBTiles.



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/5e4ef522/attachment.html>

From Jacob.Adams at cachecounty.org  Mon Dec 18 09:59:17 2017
From: Jacob.Adams at cachecounty.org (Jacob Adams)
Date: Mon, 18 Dec 2017 10:59:17 -0700
Subject: [gdal-dev] SetNoDataValue on in-memory datasets via python
Message-ID: <5A379F85020000AC0001712A@mail.cachecounty.org>

I think I've found a bug in the python bindings, but I want to run it by the list before I open a ticket to make sure I'm not missing anything (I'm assuming you'd rather I check it out on the list first rather than cluttering the ticket system with bugs that aren't actually bugs).

Environment: gdal 2.2.3, python 3.6, installed from conda-forge via Anaconda Navigator.

I'm creating an in-memory raster to pass to DEMProcessing() to create a hillshade like thus:

    mem_s_fh = gdal.GetDriverByName("MEM").Create('', temp_cols, temp_rows, 1, gdal.GDT_Float32)
    mem_s_fh.SetGeoTransform([0, cell_size, 0, 0, 0, cell_size])
    mem_s_fh.SetNoDataValue(s_nodata)
    s_band = mem_s_fh.GetRasterBand(1)
    s_band.WriteArray(in_array)

Which then bombs out on setting NoData with this error:

Traceback (most recent call last):
  File "i:\git\dem_smooth.py", line 299, in <module>
    smooth(smooth_dem, hs_dem, window_size, "hillshade", filter_f, t, n, v)
  File "i:\git\dem_smooth.py", line 232, in smooth
    new_data = hillshade(super_array)
  File "i:\git\dem_smooth.py", line 91, in hillshade
    mem_s_fh.SetNoDataValue(s_nodata)
  File "C:\Users\jadams\AppData\Local\conda\conda\envs\gdal\lib\site-packages\osgeo\gdal.py", line 1804, in <lambda>
    __getattr__ = lambda self, name: _swig_getattr(self, Dataset, name)
  File "C:\Users\jadams\AppData\Local\conda\conda\envs\gdal\lib\site-packages\osgeo\gdal.py", line 74, in _swig_getattr
    return _swig_getattr_nondynamic(self, class_type, name, 0)
  File "C:\Users\jadams\AppData\Local\conda\conda\envs\gdal\lib\site-packages\osgeo\gdal.py", line 69, in _swig_getattr_nondynamic
    return object.__getattr__(self, name)
AttributeError: type object 'object' has no attribute '__getattr__'

My searching turns up this ticket in Swig, but I have no idea if it's relevant or not: https://github.com/swig/swig/issues/588.

I've tried this under python 2.7 and 3.6 with the same result. Trying it under gdal 2.1.3 gives an "Attribute Error: 'Dataset' object has no attribute value 'SetNoDataValue'" error. s_nodata is set previously, and I've verified it holds the right value (when using SetNoDataValue on my GTiff output raster it works as expected). The MEM driver documentation says memory datasets should support nodata values, and the difference in error messages between 2.2.3 and 2.1.3 seems to indicate this has been implemented. The script runs fine if I comment out the SetNoDataValues() call.

Jake Adams
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/97b48f71/attachment-0001.html>

From even.rouault at spatialys.com  Mon Dec 18 10:04:49 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Dec 2017 19:04:49 +0100
Subject: [gdal-dev] SetNoDataValue on in-memory datasets via python
In-Reply-To: <5A379F85020000AC0001712A@mail.cachecounty.org>
References: <5A379F85020000AC0001712A@mail.cachecounty.org>
Message-ID: <1698575.zUnXod1NvL@even-i700>

Jake,

> 
>     mem_s_fh = gdal.GetDriverByName("MEM").Create('', temp_cols, temp_rows,
> 1, gdal.GDT_Float32) mem_s_fh.SetGeoTransform([0, cell_size, 0, 0, 0,
> cell_size])
>     mem_s_fh.SetNoDataValue(s_nodata)

SetNoDataValue() is a rasterband level method, not dataset.

So should be s_band.SetNoDataValue(s_nodata)

>     s_band = mem_s_fh.GetRasterBand(1)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/d2fa7710/attachment.html>

From Jacob.Adams at cachecounty.org  Mon Dec 18 10:18:07 2017
From: Jacob.Adams at cachecounty.org (Jacob Adams)
Date: Mon, 18 Dec 2017 11:18:07 -0700
Subject: [gdal-dev] SetNoDataValue on in-memory datasets via python
In-Reply-To: <1698575.zUnXod1NvL@even-i700>
References: <5A379F85020000AC0001712A@mail.cachecounty.org>
 <1698575.zUnXod1NvL@even-i700>
Message-ID: <5A37A3EF020000AC00017139@mail.cachecounty.org>

*facepalm*

Happy Monday, everyone. 

Jake
>>> Even Rouault <even.rouault at spatialys.com> 12/18/2017 11:04 AM >>>
Jake,
 
> 
> mem_s_fh = gdal.GetDriverByName("MEM").Create('', temp_cols, temp_rows,
> 1, gdal.GDT_Float32) mem_s_fh.SetGeoTransform([0, cell_size, 0, 0, 0,
> cell_size])
> mem_s_fh.SetNoDataValue(s_nodata)
 
SetNoDataValue() is a rasterband level method, not dataset.
 
So should be s_band.SetNoDataValue(s_nodata)
 
> s_band = mem_s_fh.GetRasterBand(1)
 
Even
 
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171218/21ce68ac/attachment.html>

From sebastic at xs4all.nl  Mon Dec 18 10:46:19 2017
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Mon, 18 Dec 2017 19:46:19 +0100
Subject: [gdal-dev] GDAL 2.2.3 planning
In-Reply-To: <1680715.4lzt5iEthT@even-i700>
References: <1680715.4lzt5iEthT@even-i700>
Message-ID: <e7a2533e-8883-9072-d8b2-fe192686a3ed@xs4all.nl>

On 11/01/2017 11:32 AM, Even Rouault wrote:
> I've add an exchange with Sebastiaan Couwenberg about a schedule that would 
> give GDAL 2.2.3 a chance to enter the next Ubuntu LTS 18.04. While the date 
> for the import freeze from Debian to Ubuntu is not know yet, based on the last 
> release cycle, it seems that a GDAL 2.2.3 released this month would have a 
> chance to make it (given other delays in Debian transitionning from 
> experimental to unstable)

The transition to GDAL 2.2.3 in Debian started yesterday, and it looks
like Ubuntu has already completed it. gdal (2.2.3+dfsg-1) &
libgdal-grass (2.2.3-1) and the rebuild reverse dependencies are
available in the release pocket for the upcoming bionic LTS.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From omerz1012 at gmail.com  Mon Dec 18 14:20:33 2017
From: omerz1012 at gmail.com (omerz)
Date: Mon, 18 Dec 2017 15:20:33 -0700 (MST)
Subject: [gdal-dev] gpkg file convrsion
Message-ID: <1513635633806-0.post@n6.nabble.com>

I have a gpkg thats populated exclusively by .jpeg files. I am attempting to
use the gdaladdo to add overviews into that gpkg. However, gdaladdo adds
some of them as .jpeg, and adds the rest as .png. I was wondering if there
is any way to configure gdaladdo so that it will only add the overviews as
.jpeg files.

The commands I run are:
gdal_translate -expand rgba myTiff.tif myGpkg.gpkg -co
TILING_SCHEME=InspireCRS84Quad -co ZOOM_LEVEL_STRATEGY=LOWER -co
TILE_FORMAT=JPEG

gdaladdo myGpkg.gpkg 2 4 8 16 32 64 128

Thanks in advance



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From thannyd at earthlink.net  Mon Dec 18 20:26:26 2017
From: thannyd at earthlink.net (Thanny)
Date: Mon, 18 Dec 2017 21:26:26 -0700 (MST)
Subject: [gdal-dev] ogr2ogr from MySQL to FileGDB not working correctly in
	2.x
Message-ID: <1513657586335-0.post@n6.nabble.com>

I hope this is the correct place to post about this.

There are several use cases I have for moving data into MySQL for
processing, then exporting back out to ESRI FileGDB, using the ogr2ogr
utility.

Long story short, if I use a GDAL 1.x install, I'm able to export from MySQL
to FileGDB without issue (at least mostly - the PROMOTE_TO_MULTI geometry
type doesn't work, though it previously did).  If I use a GDAL 2.x install,
the export works only for attribute data.  At the beginning of the export,
this error is printed:

ERROR 6: CreateGeomField() not supported by this layer.

I've reproduced this with both polygon and point layers.

As I said, I've used many different distributions, and all have this
problem.  Here's the FileGDB line from "ogrinfo --formats":

  FileGDB -vector- (rw+): ESRI FileGDB

Any ideas on what I can do to narrow down where the problem is?




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Tue Dec 19 04:17:36 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Dec 2017 13:17:36 +0100
Subject: [gdal-dev] ogr2ogr from MySQL to FileGDB not working correctly
	in 2.x
In-Reply-To: <1513657586335-0.post@n6.nabble.com>
References: <1513657586335-0.post@n6.nabble.com>
Message-ID: <1615611.hiU0cBT6iE@even-i700>

On lundi 18 décembre 2017 21:26:26 CET Thanny wrote:
> I hope this is the correct place to post about this.
> 
> There are several use cases I have for moving data into MySQL for
> processing, then exporting back out to ESRI FileGDB, using the ogr2ogr
> utility.
> 
> Long story short, if I use a GDAL 1.x install, I'm able to export from MySQL
> to FileGDB without issue (at least mostly - the PROMOTE_TO_MULTI geometry
> type doesn't work, though it previously did).  If I use a GDAL 2.x install,
> the export works only for attribute data.  At the beginning of the export,
> this error is printed:
> 
> ERROR 6: CreateGeomField() not supported by this layer.
> 
> I've reproduced this with both polygon and point layers.
> 
> As I said, I've used many different distributions, and all have this
> problem.  Here's the FileGDB line from "ogrinfo --formats":
> 
>   FileGDB -vector- (rw+): ESRI FileGDB
> 
> Any ideas on what I can do to narrow down where the problem is?
> 

Thanny,

I believe this issue has been fixed in GDAL 2.2.3 per

FileGDB driver:
 * remove erroneous ODsCCreateGeomFieldAfterCreateLayer capability declaration (https://
github.com/OSGeo/gdal/pull/247)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171219/f9dd9699/attachment.html>

From mateusz at loskot.net  Tue Dec 19 11:20:54 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 19 Dec 2017 20:20:54 +0100
Subject: [gdal-dev] [docs] PostGIS Raster
Message-ID: <CABUeae_y8ES3t=KqYbOYUVSeeXg6ehXoU7BVR-Xssv0ebx5c7A@mail.gmail.com>

Hi,

PostGIS Raster link on http://www.gdal.org/formats_list.html
leads to https://trac.osgeo.org/gdal/wiki/frmts_wtkraster.html

Any reason the doc is maintained as the wiki page
instead of in-source HTML page?

Can I move it?

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Tue Dec 19 11:46:07 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Dec 2017 20:46:07 +0100
Subject: [gdal-dev] [docs] PostGIS Raster
In-Reply-To: <CABUeae_y8ES3t=KqYbOYUVSeeXg6ehXoU7BVR-Xssv0ebx5c7A@mail.gmail.com>
References: <CABUeae_y8ES3t=KqYbOYUVSeeXg6ehXoU7BVR-Xssv0ebx5c7A@mail.gmail.com>
Message-ID: <1902855.kCu17DGM7e@even-i700>

On mardi 19 décembre 2017 20:20:54 CET Mateusz Loskot wrote:
> Hi,
> 
> PostGIS Raster link on http://www.gdal.org/formats_list.html
> leads to https://trac.osgeo.org/gdal/wiki/frmts_wtkraster.html
> 
> Any reason the doc is maintained as the wiki page
> instead of in-source HTML page?
> 
> Can I move it?

No opposition from me. I guess the content could be updated a bit as well, to remove 
some of the historic aspects of the development.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171219/722bf06c/attachment.html>

From mateusz at loskot.net  Tue Dec 19 14:09:09 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 19 Dec 2017 23:09:09 +0100
Subject: [gdal-dev] [docs] PostGIS Raster
In-Reply-To: <1902855.kCu17DGM7e@even-i700>
References: <CABUeae_y8ES3t=KqYbOYUVSeeXg6ehXoU7BVR-Xssv0ebx5c7A@mail.gmail.com>
 <1902855.kCu17DGM7e@even-i700>
Message-ID: <CABUeae8BCHcz_MA_+Y6TvMRtDt48yZA0KWt0Kf=bzw+-RjrArw@mail.gmail.com>

On 19 December 2017 at 20:46, Even Rouault <even.rouault at spatialys.com> wrote:
> On mardi 19 décembre 2017 20:20:54 CET Mateusz Loskot wrote:
>
>> PostGIS Raster link on http://www.gdal.org/formats_list.html
>> leads to https://trac.osgeo.org/gdal/wiki/frmts_wtkraster.html
>> Any reason the doc is maintained as the wiki page
>> instead of in-source HTML page?
>
>> Can I move it?
>
> No opposition from me. I guess the content could be updated a bit as well,
> to remove some of the historic aspects of the development.

I've made first stab at moving the doc
https://trac.osgeo.org/gdal/changeset/41080

I also documented currently undocumented option "column".

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From schwehr at gmail.com  Tue Dec 19 15:12:26 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 19 Dec 2017 15:12:26 -0800
Subject: [gdal-dev] VS 2013 and list initialization
In-Reply-To: <1838034.6QRfzmjrO5@even-i700>
References: <1838034.6QRfzmjrO5@even-i700>
Message-ID: <CACmBxytV+R2tZukes5sK7Xa+HDWT=q3PiKyc7eCGWpeXSdMr3g@mail.gmail.com>

+1 for dropping MSVC2013

With Even's warning, I still ran head long into the booby trap...

https://trac.osgeo.org/gdal/changeset/41076

And as I recently learned about C99 support, I just get more sad.

On Sat, Dec 16, 2017 at 11:45 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
>
>
> While writing a new driver, I've experimented a bit with C++11 default
> non-static data
>
> member initialization.
>
>
>
> Unfortunately the following
>
>
>
> class C
>
> {
>
> double m_adfGeotransform[6]{0,1,0,0,0,1}; // breaks VS 2013
>
> };
>
>
>
> which works with conformant C+11 compilers breaks on VS 2013 with
>
>
>
> error C2797:
>
> list initialization inside member initializer list or non-static data
> member initializer is not implemented
>
>
>
> Similary, double m_adfGeotransform[6] = {0,1,0,0,0,1} also breaks.
>
>
>
> This is discussed in
>
> https://stackoverflow.com/questions/27741521/error-
> c2797-list-initialization-inside-member-initializer-list
>
> https://blogs.msdn.microsoft.com/vcblog/2014/08/19/the-
> future-of-non-static-data-member-initialization/
>
> The issue has been solved in VS2015
>
>
>
> A workaround is to use std::array and non-static data member
> initialization with equal initializer and explicit type
>
> in front of initialized values
>
>
>
> class C
>
> {
>
> std::array<double,6> m_adfGeotransform = std::array<double,6>{{0,1,0,0,0,1}};
> // OK VS 2013
>
> };
>
>
>
> (For the same reason as above, direct initialization
>
> std::array<double,6> m_adfGeotransform{{0,1,0,0,0,1}}; // breaks VS 2013
>
> )
>
>
>
> Given this and other issues found, we might revisit at some point
> supporting VS2013. Would
>
> still be good to try to have it for GDAL 2.3, but we can perhaps drop it
> afterwards.
>
>
>
>
>
> Even
>
>
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171219/27f9283f/attachment.html>

From even.rouault at spatialys.com  Tue Dec 19 15:20:14 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2017 00:20:14 +0100
Subject: [gdal-dev] Poll: is Visual Studio 2013 support needed for GDAL 2.3 ?
Message-ID: <32210519.DfpE2tuRjK@even-i700>

Hi,

As you may have noticed from recent emails, support for C++11 in VS 2013 is only partial 
and kind a bit of a pain to deal with

I've created a poll to probe the community how much support for VS 2013 is seen as 
needed for GDAL 2.3

Please cast your vote (doesn't require any account, open to any user / developer / 
whatever party with at least some interest in GDAL ) at

http://www.easypolls.net/poll.html?p=5a399ccfe4b04ebe73ddb454

Voting opened until end of this week

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/cc1e14a2/attachment.html>

From schwehr at gmail.com  Tue Dec 19 16:01:40 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 19 Dec 2017 16:01:40 -0800
Subject: [gdal-dev] Poll: is Visual Studio 2013 support needed for GDAL
 2.3 ?
In-Reply-To: <32210519.DfpE2tuRjK@even-i700>
References: <32210519.DfpE2tuRjK@even-i700>
Message-ID: <CACmBxys4g95kpOBW7DsUKobUnwJDKxUOp2ye7Mi9wCfLf65arw@mail.gmail.com>

And if you have a need for MSVC 2013, it would be good to a note or two of
why you can't use MSVC 2015 or newer.  I don't remember seeing any
requirements for MSVC 2013 in the RFC 68 discussions and the RFC states
that MSVC 2015 would be the new minimum required version.

I just took a pass at updating the supported compiler list.  Please add
more tested configs.  I mostly just wanted to get statements about
supporting old platforms out of there.

https://trac.osgeo.org/gdal/wiki/SupportedCompilers

On Tue, Dec 19, 2017 at 3:20 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
>
>
> As you may have noticed from recent emails, support for C++11 in VS 2013
> is only partial and kind a bit of a pain to deal with
>
>
>
> I've created a poll to probe the community how much support for VS 2013 is
> seen as needed for GDAL 2.3
>
>
>
> Please cast your vote (doesn't require any account, open to any user /
> developer / whatever party with at least some interest in GDAL ) at
>
>
>
> http://www.easypolls.net/poll.html?p=5a399ccfe4b04ebe73ddb454
>
>
>
> Voting opened until end of this week
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171219/5da07c08/attachment-0001.html>

From jiri.drbalek at gmail.com  Wed Dec 20 03:27:29 2017
From: jiri.drbalek at gmail.com (Jiri Drbalek)
Date: Wed, 20 Dec 2017 12:27:29 +0100
Subject: [gdal-dev] Race condition between forked processes with opened
 Tiff dataset on Linux
In-Reply-To: <10228773.OULpghYcVM@even-i700>
References: <CAC3MgJYoUyQLkmx9xNZbZmNPQXxHcpmFGy9E0vuQkACDqQ+LJg@mail.gmail.com>
 <4327187.sSu8ydukV5@even-i700>
 <CAC3MgJbB=Nsq4V-UdgpJaU6Y9v_z82tnxFW3ruPniaRLKtZ7AA@mail.gmail.com>
 <10228773.OULpghYcVM@even-i700>
Message-ID: <CAC3MgJY0vOhZ5t-MdSBFZmKh-efY=HKrTJxPZV5kn4PTpUPOvQ@mail.gmail.com>

Even,

that was really helpful. Finally, I solved it without any need to modify
GDAL.

I do the mmap() myself in my application. Then I create VSILFILE out of the
mmapped block by VSIFileFromMemBuffer().

I can then GDALOpen() the /vsimem/ file and fork freely.

The GTIFF_USE_MMAP is a cherry on the cake.

I still have to evaluate performance impact, but it seems promising so far.

Thanks for the advice.

Jiri




2017-12-15 11:29 GMT+01:00 Even Rouault <even.rouault at spatialys.com>:

> On jeudi 14 décembre 2017 23:31:48 CET Jiri Drbalek wrote:
>
> > Dear Even,
>
> >
>
> > Thank you for your helpful answer.
>
> >
>
> > I forgot to mention that when I was testing the fork() situation with
>
> > libtiff alone, it was working fine when the tiff file was memory
>
> > mapped. Unfortunately, for some reason, GDAL doesn't support memory
>
> > mapping of compressed tiffs. Libtiff can read them, at least those
>
> > with deflate compression I've tested. What is the reason for that
>
> > restriction?
>
>
>
> mmap is platform specific, so there was a need for a more general
> mechanism. And at the time the GeoTIFF driver was created, 32 bit processes
> were still common but large files already existed, so even on Linux, mmap
> wasn't really always usable. Another potential issue is that the OS might
> not behave appropriately if you mmap() a file larger than the available RAM
> and read it entirely. At least that was my experience with some older
> kernels where the OS wouldn't unload cached pages aggressively enough,
> making it irresponsive due to heavy cache swapping.
>
>
>
> Another option at the /vsi level I looked yesterday was the use of pread()
> that takes both a file offset and size to read, and makes it possible to
> use the same underlying file descriptor from multiple threads/processes.
> But the caveat is that this translates directly as a system call, bypassing
> file stream buffering.
>
>
>
> > Should I try to enable mmaping of compressed tiffs?
>
>
>
> That could be a solution worth investigating. Perhaps restricted to 64bit
> posix platforms, and with a configuration option, such as the existing
> GTIFF_USE_MMAP that you'll see if you look at frmts/gtiff/tifvsi.cpp. The
> name is a bit misleading since that's currently only available for a
> pseudo-mmap emulation for /vsimem/ files, that was added per
> https://trac.osgeo.org/gdal/changeset/39555. As you may wonder why this
> was done, the aim was to be able to test the code paths in libtiff that are
> mmap() specific, when GDAL is tortured by oss-fuzz.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/5c108d57/attachment.html>

From schwehr at gmail.com  Wed Dec 20 05:43:00 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 20 Dec 2017 05:43:00 -0800
Subject: [gdal-dev] port/md5 cvs_MD5*
Message-ID: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>

Hi all,

Can we discuss cvs_MD5* from https://trac.osgeo.org/gdal/changeset/41086 ?

I very much appreciate the work that bishop is doing and I hate to slow
down a contributor

I am really worried about code like this going into GDAL, especially into
port/

But my worries are:

- this in no way conforms to other code in GDAL
- has the potential to collide with other code that imports this code
- it has a very awkward C style
- the commit message did not point to where it came from (at least it's not
hard to guess)
- the file naming is different than (most) of the rest of the directory
- and...

Yes, we have other libraries included, but it seems like a road we don't
want to go down

-kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/82c2d05e/attachment.html>

From bishop.dev at gmail.com  Wed Dec 20 06:06:35 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 20 Dec 2017 17:06:35 +0300
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
Message-ID: <543e04e1-96dc-f85d-a781-62aa7a41b4d3@gmail.com>

Hi Kurt.

The md5.cpp and md5.h were in frmst/wms driver folder. As I see from 
header this files are not initially from GDAL project.

I moved this files to port with minimum changes - only macros for 
suppress Doxygen parsing.

The motivation of this moving was:

1. md5 functions used in several drivers (WMS and WFS) and may be others 
in future.

2. need API function to get the same md5 hash as used in WMS for 
autotesting functionality.

3. downloading area of interest into the WMS file based cache by 
external programs. May be some other utilization.

I think ideally the OpenSSL MD5 functions must be using. But this will 
be one more dependency. Do we need it?


Best regards,
     Dmitry

20.12.2017 16:43, Kurt Schwehr пишет:
> Hi all,
>
> Can we discuss cvs_MD5* from https://trac.osgeo.org/gdal/changeset/41086 ?
>
> I very much appreciate the work that bishop is doing and I hate to slow
> down a contributor
>
> I am really worried about code like this going into GDAL, especially into
> port/
>
> But my worries are:
>
> - this in no way conforms to other code in GDAL
> - has the potential to collide with other code that imports this code
> - it has a very awkward C style
> - the commit message did not point to where it came from (at least it's not
> hard to guess)
> - the file naming is different than (most) of the rest of the directory
> - and...
>
> Yes, we have other libraries included, but it seems like a road we don't
> want to go down
>
> -kurt
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/44ba0498/attachment.html>

From schwehr at gmail.com  Wed Dec 20 06:19:20 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 20 Dec 2017 06:19:20 -0800
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <543e04e1-96dc-f85d-a781-62aa7a41b4d3@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <543e04e1-96dc-f85d-a781-62aa7a41b4d3@gmail.com>
Message-ID: <CACmBxyv0HM8zqcnixdVk7sY5k_+bZSRFhQ-HAb50Aimo2_R4aA@mail.gmail.com>

I have not looked in the wms code much, but my comment was not about adding
an external dependency. It is about code quality in the core of GDAL.

On Dec 20, 2017 6:07 AM, "Dmitry Baryshnikov" <bishop.dev at gmail.com> wrote:

> Hi Kurt.
>
> The md5.cpp and md5.h were in frmst/wms driver folder. As I see from
> header this files are not initially from GDAL project.
>
> I moved this files to port with minimum changes - only macros for suppress
> Doxygen parsing.
>
> The motivation of this moving was:
>
> 1. md5 functions used in several drivers (WMS and WFS) and may be others
> in future.
>
> 2. need API function to get the same md5 hash as used in WMS for
> autotesting functionality.
>
> 3. downloading area of interest into the WMS file based cache by external
> programs. May be some other utilization.
>
> I think ideally the OpenSSL MD5 functions must be using. But this will be
> one more dependency. Do we need it?
>
>
> Best regards,
>     Dmitry
>
> 20.12.2017 16:43, Kurt Schwehr пишет:
>
> Hi all,
>
> Can we discuss cvs_MD5* from https://trac.osgeo.org/gdal/changeset/41086 ?
>
> I very much appreciate the work that bishop is doing and I hate to slow
> down a contributor
>
> I am really worried about code like this going into GDAL, especially into
> port/
>
> But my worries are:
>
> - this in no way conforms to other code in GDAL
> - has the potential to collide with other code that imports this code
> - it has a very awkward C style
> - the commit message did not point to where it came from (at least it's not
> hard to guess)
> - the file naming is different than (most) of the rest of the directory
> - and...
>
> Yes, we have other libraries included, but it seems like a road we don't
> want to go down
>
> -kurt
>
>
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/aeb4cad0/attachment-0001.html>

From bishop.dev at gmail.com  Wed Dec 20 06:25:24 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 20 Dec 2017 17:25:24 +0300
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <CACmBxyv0HM8zqcnixdVk7sY5k_+bZSRFhQ-HAb50Aimo2_R4aA@mail.gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <543e04e1-96dc-f85d-a781-62aa7a41b4d3@gmail.com>
 <CACmBxyv0HM8zqcnixdVk7sY5k_+bZSRFhQ-HAb50Aimo2_R4aA@mail.gmail.com>
Message-ID: <5c5c7664-75a5-69d1-f837-9ea95ab3fd8c@gmail.com>

In fact it was part of core of GDAL but hidden in WMS driver folder. The 
same or similar is in:

1. ogr/ogrsf_frmts/generic

2. ogr/ogrsf_frmts/geojson

What solution can be suitable here (I mean md5 case)?


Best regards,
     Dmitry

20.12.2017 17:19, Kurt Schwehr пишет:
> I have not looked in the wms code much, but my comment was not about adding
> an external dependency. It is about code quality in the core of GDAL.
>
> On Dec 20, 2017 6:07 AM, "Dmitry Baryshnikov" <bishop.dev at gmail.com> wrote:
>
>> Hi Kurt.
>>
>> The md5.cpp and md5.h were in frmst/wms driver folder. As I see from
>> header this files are not initially from GDAL project.
>>
>> I moved this files to port with minimum changes - only macros for suppress
>> Doxygen parsing.
>>
>> The motivation of this moving was:
>>
>> 1. md5 functions used in several drivers (WMS and WFS) and may be others
>> in future.
>>
>> 2. need API function to get the same md5 hash as used in WMS for
>> autotesting functionality.
>>
>> 3. downloading area of interest into the WMS file based cache by external
>> programs. May be some other utilization.
>>
>> I think ideally the OpenSSL MD5 functions must be using. But this will be
>> one more dependency. Do we need it?
>>
>>
>> Best regards,
>>      Dmitry
>>
>> 20.12.2017 16:43, Kurt Schwehr пишет:
>>
>> Hi all,
>>
>> Can we discuss cvs_MD5* from https://trac.osgeo.org/gdal/changeset/41086 ?
>>
>> I very much appreciate the work that bishop is doing and I hate to slow
>> down a contributor
>>
>> I am really worried about code like this going into GDAL, especially into
>> port/
>>
>> But my worries are:
>>
>> - this in no way conforms to other code in GDAL
>> - has the potential to collide with other code that imports this code
>> - it has a very awkward C style
>> - the commit message did not point to where it came from (at least it's not
>> hard to guess)
>> - the file naming is different than (most) of the rest of the directory
>> - and...
>>
>> Yes, we have other libraries included, but it seems like a road we don't
>> want to go down
>>
>> -kurt
>>
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>


From schwehr at gmail.com  Wed Dec 20 06:39:37 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 20 Dec 2017 06:39:37 -0800
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <5c5c7664-75a5-69d1-f837-9ea95ab3fd8c@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <543e04e1-96dc-f85d-a781-62aa7a41b4d3@gmail.com>
 <CACmBxyv0HM8zqcnixdVk7sY5k_+bZSRFhQ-HAb50Aimo2_R4aA@mail.gmail.com>
 <5c5c7664-75a5-69d1-f837-9ea95ab3fd8c@gmail.com>
Message-ID: <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>

My personal opinion...

It was not in fact in the core of GDAL for all users.  My primary
environment does not include the WMS *driver*.  My take is that only the
memory and gtiff raster drivers are really required for GDAL (vector, I'm
not so sure).

What do you mean by the same or similar for generic and geojson?  And
because something isn't great elsewhere, that does not mean we want to
introduce more similar code that is hard to impossible to opt out of.

Dmitry's question about a reasonable solution is a good one (if you buy my
being seriously uncomfortable with cvs_MD5*).  Possibilities include:

- Make everything from md5.cpp and md5.h be internal to md5.cpp (aka static
or inline) and move CPLMD5String to md5.{cpp,h} at least keeping the
trouble localize
- Refactor md5 to be cleaner
- Reimplement md5 hashing for gdal
- Find some other code that is license compatible that is cleaner

And why are you exposing this to python?  Python has md5 hashing already
built in.

Can others please weigh in?

On Wed, Dec 20, 2017 at 6:25 AM, Dmitry Baryshnikov <bishop.dev at gmail.com>
wrote:

> In fact it was part of core of GDAL but hidden in WMS driver folder. The
> same or similar is in:
>
> 1. ogr/ogrsf_frmts/generic
>
> 2. ogr/ogrsf_frmts/geojson
>
> What solution can be suitable here (I mean md5 case)?
>
>
> Best regards,
>     Dmitry
>
> 20.12.2017 17:19, Kurt Schwehr пишет:
>
>> I have not looked in the wms code much, but my comment was not about
>> adding
>> an external dependency. It is about code quality in the core of GDAL.
>>
>> On Dec 20, 2017 6:07 AM, "Dmitry Baryshnikov" <bishop.dev at gmail.com>
>> wrote:
>>
>> Hi Kurt.
>>>
>>> The md5.cpp and md5.h were in frmst/wms driver folder. As I see from
>>> header this files are not initially from GDAL project.
>>>
>>> I moved this files to port with minimum changes - only macros for
>>> suppress
>>> Doxygen parsing.
>>>
>>> The motivation of this moving was:
>>>
>>> 1. md5 functions used in several drivers (WMS and WFS) and may be others
>>> in future.
>>>
>>> 2. need API function to get the same md5 hash as used in WMS for
>>> autotesting functionality.
>>>
>>> 3. downloading area of interest into the WMS file based cache by external
>>> programs. May be some other utilization.
>>>
>>> I think ideally the OpenSSL MD5 functions must be using. But this will be
>>> one more dependency. Do we need it?
>>>
>>>
>>> Best regards,
>>>      Dmitry
>>>
>>> 20.12.2017 16:43, Kurt Schwehr пишет:
>>>
>>> Hi all,
>>>
>>> Can we discuss cvs_MD5* from https://trac.osgeo.org/gdal/changeset/41086
>>> ?
>>>
>>> I very much appreciate the work that bishop is doing and I hate to slow
>>> down a contributor
>>>
>>> I am really worried about code like this going into GDAL, especially into
>>> port/
>>>
>>> But my worries are:
>>>
>>> - this in no way conforms to other code in GDAL
>>> - has the potential to collide with other code that imports this code
>>> - it has a very awkward C style
>>> - the commit message did not point to where it came from (at least it's
>>> not
>>> hard to guess)
>>> - the file naming is different than (most) of the rest of the directory
>>> - and...
>>>
>>> Yes, we have other libraries included, but it seems like a road we don't
>>> want to go down
>>>
>>> -kurt
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://
>>> lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>>
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/f8c3c282/attachment.html>

From jmckenna at gatewaygeomatics.com  Wed Dec 20 06:41:06 2017
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 20 Dec 2017 09:41:06 -0500
Subject: [gdal-dev] Poll: is Visual Studio 2013 support needed for GDAL
 2.3 ?
In-Reply-To: <CACmBxys4g95kpOBW7DsUKobUnwJDKxUOp2ye7Mi9wCfLf65arw@mail.gmail.com>
References: <32210519.DfpE2tuRjK@even-i700>
 <CACmBxys4g95kpOBW7DsUKobUnwJDKxUOp2ye7Mi9wCfLf65arw@mail.gmail.com>
Message-ID: <4b96f4c3-5430-f237-3109-29d4f95f7f24@gatewaygeomatics.com>

On 2017-12-19 7:01 PM, Kurt Schwehr wrote:
> 
> I just took a pass at updating the supported compiler list.  Please add 
> more tested configs.  I mostly just wanted to get statements about 
> supporting old platforms out of there.
> 
> https://trac.osgeo.org/gdal/wiki/SupportedCompilers
> 

Thanks for this page Kurt.  Can you also make sure that it is linked to 
from the main wiki opening page?  (so people can find it) 
https://trac.osgeo.org/gdal/wiki   Thanks,

-jeff




From schwehr at gmail.com  Wed Dec 20 06:44:03 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 20 Dec 2017 06:44:03 -0800
Subject: [gdal-dev] Poll: is Visual Studio 2013 support needed for GDAL
 2.3 ?
In-Reply-To: <4b96f4c3-5430-f237-3109-29d4f95f7f24@gatewaygeomatics.com>
References: <32210519.DfpE2tuRjK@even-i700>
 <CACmBxys4g95kpOBW7DsUKobUnwJDKxUOp2ye7Mi9wCfLf65arw@mail.gmail.com>
 <4b96f4c3-5430-f237-3109-29d4f95f7f24@gatewaygeomatics.com>
Message-ID: <CACmBxysxR8_DybEzxXs=Wx+L4OdNKPfQ607XL0czETpyBU7wrg@mail.gmail.com>

I'm hesitant to link that page in the main page.  It's not particularly
complete and this was the first update in years.

On Wed, Dec 20, 2017 at 6:41 AM, Jeff McKenna <jmckenna at gatewaygeomatics.com
> wrote:

> On 2017-12-19 7:01 PM, Kurt Schwehr wrote:
>
>>
>> I just took a pass at updating the supported compiler list.  Please add
>> more tested configs.  I mostly just wanted to get statements about
>> supporting old platforms out of there.
>>
>> https://trac.osgeo.org/gdal/wiki/SupportedCompilers
>>
>>
> Thanks for this page Kurt.  Can you also make sure that it is linked to
> from the main wiki opening page?  (so people can find it)
> https://trac.osgeo.org/gdal/wiki   Thanks,
>
> -jeff
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/0d0d0fe7/attachment.html>

From jmckenna at gatewaygeomatics.com  Wed Dec 20 06:45:07 2017
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 20 Dec 2017 09:45:07 -0500
Subject: [gdal-dev] Poll: is Visual Studio 2013 support needed for GDAL
 2.3 ?
In-Reply-To: <4b96f4c3-5430-f237-3109-29d4f95f7f24@gatewaygeomatics.com>
References: <32210519.DfpE2tuRjK@even-i700>
 <CACmBxys4g95kpOBW7DsUKobUnwJDKxUOp2ye7Mi9wCfLf65arw@mail.gmail.com>
 <4b96f4c3-5430-f237-3109-29d4f95f7f24@gatewaygeomatics.com>
Message-ID: <67edf2cf-6795-7753-e129-a9e8a59bde93@gatewaygeomatics.com>

On 2017-12-20 9:41 AM, Jeff McKenna wrote:
>> https://trac.osgeo.org/gdal/wiki/SupportedCompilers
>>
> 
> Thanks for this page Kurt.  Can you also make sure that it is linked to 
> from the main wiki opening page?  (so people can find it) 
> https://trac.osgeo.org/gdal/wiki   Thanks,
> 


ah I found it on BuildHints page.  Great!  Sorry for this noise.   -jeff


https://trac.osgeo.org/gdal/wiki/BuildHints






From even.rouault at spatialys.com  Wed Dec 20 06:53:52 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2017 15:53:52 +0100
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <5c5c7664-75a5-69d1-f837-9ea95ab3fd8c@gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
Message-ID: <2631685.HoGhOVUrLh@even-i700>

On mercredi 20 décembre 2017 06:39:37 CET Kurt Schwehr wrote:
> My personal opinion...
> 
> It was not in fact in the core of GDAL for all users.  My primary
> environment does not include the WMS *driver*.  My take is that only the
> memory and gtiff raster drivers are really required for GDAL (vector, I'm
> not so sure).
> 
> What do you mean by the same or similar for generic and geojson?  And
> because something isn't great elsewhere, that does not mean we want to
> introduce more similar code that is hard to impossible to opt out of.
> 
> Dmitry's question about a reasonable solution is a good one (if you buy my
> being seriously uncomfortable with cvs_MD5*).  Possibilities include:
> 
> - Make everything from md5.cpp and md5.h be internal to md5.cpp (aka static
> or inline) and move CPLMD5String to md5.{cpp,h} at least keeping the
> trouble localize
> - Refactor md5 to be cleaner
> - Reimplement md5 hashing for gdal
> - Find some other code that is license compatible that is cleaner
> 
> And why are you exposing this to python?  Python has md5 hashing already
> built in.
> 
> Can others please weigh in?

For consistency with the rest, I'd suggest:
- rename md5.* to cpl_md5.*
- rename cvs_MD5* to CPLMD5*
- include cpl_port.h in cpl_md5.h and remove the #if defined(CPL_BASE_H_INCLUDED) stuff. 
Currently if someone includes md5.h as the first header, cvs_uint32 will expand to a unsigned 
long, whereas the md5.cpp file has been compiled with GUInt32. Not good

Other follow-up cleanups can then be done by interested parties.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/27ca01d6/attachment-0001.html>

From bishop.dev at gmail.com  Wed Dec 20 07:10:32 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 20 Dec 2017 18:10:32 +0300
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <543e04e1-96dc-f85d-a781-62aa7a41b4d3@gmail.com>
 <CACmBxyv0HM8zqcnixdVk7sY5k_+bZSRFhQ-HAb50Aimo2_R4aA@mail.gmail.com>
 <5c5c7664-75a5-69d1-f837-9ea95ab3fd8c@gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
Message-ID: <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>

Will answer in letter body

20.12.2017 17:39, Kurt Schwehr пишет:
> My personal opinion...
>
> It was not in fact in the core of GDAL for all users.  My primary
> environment does not include the WMS *driver*.  My take is that only the
> memory and gtiff raster drivers are really required for GDAL (vector, I'm
> not so sure).
>
> What do you mean by the same or similar for generic and geojson?  And
> because something isn't great elsewhere, that does not mean we want to
> introduce more similar code that is hard to impossible to opt out of.
For example we have such method - char * OGRGeometry::exportToJson() const

In this method executed OGR_G_ExportToJson from 
ogr/ogrsf_frmts/geojson/ogrgeojsonwriter.cpp

So the core OGR using some code from GeoJSON driver.

The same way I can move md5 back to WMS and use it from port function 
CPLMD5String.

But I think ogr and gdal must use port (and port shouldn't depends on 
org or gcore, etc.),
also drivers can use ogr or gdal, but ogr and gdal shouldn't depends on 
some driver.

This is only my opinion.
>
> Dmitry's question about a reasonable solution is a good one (if you buy my
> being seriously uncomfortable with cvs_MD5*).  Possibilities include:
>
> - Make everything from md5.cpp and md5.h be internal to md5.cpp (aka static
> or inline) and move CPLMD5String to md5.{cpp,h} at least keeping the
> trouble localize
> - Refactor md5 to be cleaner
> - Reimplement md5 hashing for gdal
> - Find some other code that is license compatible that is cleaner
>
> And why are you exposing this to python?  Python has md5 hashing already
> built in.
I'm not sure that Python produce the same hash than cvs_MD5*.
Also I'm not sure what in future they will be the same.
Finally not only Python use CPLMD5String - any program utilizing API may 
need the hash formed the same way as WMS/WFS does.
>
> Can others please weigh in?
>
> On Wed, Dec 20, 2017 at 6:25 AM, Dmitry Baryshnikov <bishop.dev at gmail.com>
> wrote:
>
>> In fact it was part of core of GDAL but hidden in WMS driver folder. The
>> same or similar is in:
>>
>> 1. ogr/ogrsf_frmts/generic
>>
>> 2. ogr/ogrsf_frmts/geojson
>>
>> What solution can be suitable here (I mean md5 case)?
>>
>>
>> Best regards,
>>      Dmitry
>>
>> 20.12.2017 17:19, Kurt Schwehr пишет:
>>
>>> I have not looked in the wms code much, but my comment was not about
>>> adding
>>> an external dependency. It is about code quality in the core of GDAL.
>>>
>>> On Dec 20, 2017 6:07 AM, "Dmitry Baryshnikov" <bishop.dev at gmail.com>
>>> wrote:
>>>
>>> Hi Kurt.
>>>> The md5.cpp and md5.h were in frmst/wms driver folder. As I see from
>>>> header this files are not initially from GDAL project.
>>>>
>>>> I moved this files to port with minimum changes - only macros for
>>>> suppress
>>>> Doxygen parsing.
>>>>
>>>> The motivation of this moving was:
>>>>
>>>> 1. md5 functions used in several drivers (WMS and WFS) and may be others
>>>> in future.
>>>>
>>>> 2. need API function to get the same md5 hash as used in WMS for
>>>> autotesting functionality.
>>>>
>>>> 3. downloading area of interest into the WMS file based cache by external
>>>> programs. May be some other utilization.
>>>>
>>>> I think ideally the OpenSSL MD5 functions must be using. But this will be
>>>> one more dependency. Do we need it?
>>>>
>>>>
>>>> Best regards,
>>>>       Dmitry
>>>>
>>>> 20.12.2017 16:43, Kurt Schwehr пишет:
>>>>
>>>> Hi all,
>>>>
>>>> Can we discuss cvs_MD5* from https://trac.osgeo.org/gdal/changeset/41086
>>>> ?
>>>>
>>>> I very much appreciate the work that bishop is doing and I hate to slow
>>>> down a contributor
>>>>
>>>> I am really worried about code like this going into GDAL, especially into
>>>> port/
>>>>
>>>> But my worries are:
>>>>
>>>> - this in no way conforms to other code in GDAL
>>>> - has the potential to collide with other code that imports this code
>>>> - it has a very awkward C style
>>>> - the commit message did not point to where it came from (at least it's
>>>> not
>>>> hard to guess)
>>>> - the file naming is different than (most) of the rest of the directory
>>>> - and...
>>>>
>>>> Yes, we have other libraries included, but it seems like a road we don't
>>>> want to go down
>>>>
>>>> -kurt
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://
>>>> lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>
>>>>
>

Best regards,
     Dmitry


From even.rouault at spatialys.com  Wed Dec 20 07:35:18 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2017 16:35:18 +0100
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
Message-ID: <2535003.5Tk26laDqr@even-i700>

> > And why are you exposing this to python?  Python has md5 hashing 
already
> > built in.
> 
> I'm not sure that Python produce the same hash than cvs_MD5*.

I do hope they return the same thing. MD5 is a standardized algorithm:
https://tools.ietf.org/html/rfc1321

I'm not sure we really need to expose it our CPL MD5 through Python.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/6d0d99bb/attachment.html>

From bishop.dev at gmail.com  Wed Dec 20 07:46:14 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 20 Dec 2017 18:46:14 +0300
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <2535003.5Tk26laDqr@even-i700>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
Message-ID: <41b7cde2-e8f5-4fa1-8cef-8e0952a9af68@gmail.com>

Just the note that CPLMD5String not only for Python, but any other API 
clients: C/C++, Java, Perl, etc.

But, I agree, it can be easily removed.

Best regards,
     Dmitry

20.12.2017 18:35, Even Rouault пишет:
>>> And why are you exposing this to python?  Python has md5 hashing
> already
>>> built in.
>> I'm not sure that Python produce the same hash than cvs_MD5*.
> I do hope they return the same thing. MD5 is a standardized algorithm:
> https://tools.ietf.org/html/rfc1321
>
> I'm not sure we really need to expose it our CPL MD5 through Python.
>


From bishop.dev at gmail.com  Wed Dec 20 07:46:28 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 20 Dec 2017 18:46:28 +0300
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <2535003.5Tk26laDqr@even-i700>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
Message-ID: <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>

Just the note that CPLMD5String not only for Python, but any other API 
clients: C/C++, Java, Perl, etc.

But, I agree, it can be easily removed.

Best regards,
     Dmitry

20.12.2017 18:35, Even Rouault пишет:
>>> And why are you exposing this to python?  Python has md5 hashing
> already
>>> built in.
>> I'm not sure that Python produce the same hash than cvs_MD5*.
> I do hope they return the same thing. MD5 is a standardized algorithm:
> https://tools.ietf.org/html/rfc1321
>
> I'm not sure we really need to expose it our CPL MD5 through Python.
>


From mswope at gmail.com  Wed Dec 20 07:54:48 2017
From: mswope at gmail.com (Mike)
Date: Wed, 20 Dec 2017 08:54:48 -0700
Subject: [gdal-dev] Segfault when accessing vpf dqyarea
In-Reply-To: <CAKTSvBgcsKeZh+Oobw3SnEOa7c21V0KEAVQiY46mMnZV_GRN-w@mail.gmail.com>
References: <CAKTSvBgoOb5CZYYstB0WbX=xxATi8ryc9H66T9kJPa=seF5eRQ@mail.gmail.com>
 <CAKTSvBhNdMuoG3ev+Fp8xLPUWua4=8Gbj0Sq3aZGe5FMtPKbEg@mail.gmail.com>
 <CAKTSvBiENpd0pQYcg9VmZwWxgzWzVfv=FjB0gPqOjCPYRdzjuw@mail.gmail.com>
 <CAKTSvBgFFUsHFcmkhZyOpr4rcKBGrbGvWYA-UqCRPi4W_m23=g@mail.gmail.com>
 <CAKTSvBjCvxUqUSFbnCVSOYPcW_GQF3auUiSjQenHtEa6UDgcMA@mail.gmail.com>
 <CAKTSvBgCR7iOWpcSbF3yLkRWxotja_-g-ge2LQWjXR8n2cHLbA@mail.gmail.com>
 <CAKTSvBgp-ANDaQfz+CZ9RJDdCPErj4sM85eSH9SZJDpbXPWCzQ@mail.gmail.com>
 <CAKTSvBgru5TCr63D3w6Go-jerHey1t=L6xbmZDAOm_BqMUhbOw@mail.gmail.com>
 <CAKTSvBg3dOxAcenZXTru0xwfyiMEBYQVZ4PPaG2UJveMZ_Uo6g@mail.gmail.com>
 <CAKTSvBi0sz1giHMf3vOqmxkgBRMF=vEuQsk0YryLZGcOMhsgkQ@mail.gmail.com>
 <CAKTSvBjBMcZ9d6N9f6=v0Q8_4OFNHZ9GD4B+2vOLKDhE+mZqtw@mail.gmail.com>
 <CAKTSvBjM7w3fC-G6Z5tRpz4jpxjp4TCacZVFC1v8mEUhnqOtsg@mail.gmail.com>
 <CAKTSvBiO=Ox7CaJaQOZ-N5ESeh76Gg7Y-HAz_rr+D429wem2mA@mail.gmail.com>
 <CAKTSvBgCDrfmnexeOVjM8J2T6Kf9Cthhv_f3cGHXUS3W9WSOcw@mail.gmail.com>
 <CAKTSvBgcsKeZh+Oobw3SnEOa7c21V0KEAVQiY46mMnZV_GRN-w@mail.gmail.com>
Message-ID: <CAKTSvBj4F5-+9gr9hmoA6zqq0Mja1xrEfDT0-DXDxHqH01mN8A@mail.gmail.com>

So using Ubuntu 16.04, and Ubuntu gis-unstable ppa, which has gdal 2.2.2.

Sample data

https://dnc.nga.mil/DNC/library.php?c=C12

Direct link

https://dnc.nga.mil/DNCSiteContent/StaticFiles/data12/vpf/coa12f.zip

I can do an ogrinfo gltp:/vrf/path/DNC12/COA12F

and get all the layers. I can pick any layer to get further info on, except
dqyarea at dqy(*)_area, where it then segfaults. I'm unsure if this is a bug
or on how it was packaged.

Of note, gdal 2.2.0 (from qgis 2.18.9) on Windows reads dqyarea fine.

Any tips on how to read the layer?

-Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/63dae2ce/attachment.html>

From schwehr at gmail.com  Wed Dec 20 07:56:23 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 20 Dec 2017 07:56:23 -0800
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
 <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>
Message-ID: <CACmBxyvfkhNUo-qh8m7jUWXhb5JoKM_EVWxq-LWeXRm1N-Cstw@mail.gmail.com>

Dmitry,

Statements like this indicate a world of trouble:

> I'm not sure that Python produce the same hash than cvs_MD5*.
> Also I'm not sure what in future they will be the same.

If you remove the swig and python stuff, move the CPLMD5String to
cpl_md5.{cpp,h}, and follow Even's suggestions, I will be much happier with
the change.  A C++ test would be good too.  I'll be happy to do a quick fix
up of a few things that I see in the md5 code once it is to that point.  I
do think it is a good thing that there be md5 support in port along with
the existing sha{1,256} code.

I see what you are saying about the OGRGeometry::exportTo{json,kml,gml},
but that doesn't (to me) support your argument.  My personal opinion is
that GDAL would have been stronger if those had separate and not been a
part of OGRGeometry.

If there is a critical difference between CPLMD5String or a language and
use case where md5 support in that language from GDAL is really required,
you need to first document that issue.

On Wed, Dec 20, 2017 at 7:46 AM, Dmitry Baryshnikov <bishop.dev at gmail.com>
wrote:

> Just the note that CPLMD5String not only for Python, but any other API
> clients: C/C++, Java, Perl, etc.
>
> But, I agree, it can be easily removed.
>
> Best regards,
>     Dmitry
>
> 20.12.2017 18:35, Even Rouault пишет:
>
>> And why are you exposing this to python?  Python has md5 hashing
>>>>
>>> already
>>
>>> built in.
>>>>
>>> I'm not sure that Python produce the same hash than cvs_MD5*.
>>>
>> I do hope they return the same thing. MD5 is a standardized algorithm:
>> https://tools.ietf.org/html/rfc1321
>>
>> I'm not sure we really need to expose it our CPL MD5 through Python.
>>
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/721fdbaf/attachment-0001.html>

From even.rouault at spatialys.com  Wed Dec 20 09:07:58 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2017 18:07:58 +0100
Subject: [gdal-dev] Segfault when accessing vpf dqyarea
In-Reply-To: <CAKTSvBj4F5-+9gr9hmoA6zqq0Mja1xrEfDT0-DXDxHqH01mN8A@mail.gmail.com>
References: <CAKTSvBgoOb5CZYYstB0WbX=xxATi8ryc9H66T9kJPa=seF5eRQ@mail.gmail.com>
 <CAKTSvBgcsKeZh+Oobw3SnEOa7c21V0KEAVQiY46mMnZV_GRN-w@mail.gmail.com>
 <CAKTSvBj4F5-+9gr9hmoA6zqq0Mja1xrEfDT0-DXDxHqH01mN8A@mail.gmail.com>
Message-ID: <2547776.FsmoYttABW@even-i700>

Mike,

I could replicate. The issue is not in GDAL, but in the underlying ogdi library. 
Ubuntu 16.04 ships with ogdi 3.2.0-beta2. With final ogdi 3.2.0 (available in 
Ubuntu zesty), the crash no longer occurs.

Compiling ogdi from source for modern distributions is a bit of a pain. You 
could probably try building from the source  package of ogdi in ubuntu 16.04 
and substituting the ogdi-3.2.0.tar.gz toogdi-dfsg_3.2.0~beta2.orig.tar.gz

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/62182aaf/attachment.html>

From ari.jolma at gmail.com  Wed Dec 20 13:32:25 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 21 Dec 2017 08:32:25 +1100
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <CACmBxyvfkhNUo-qh8m7jUWXhb5JoKM_EVWxq-LWeXRm1N-Cstw@mail.gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
 <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>
 <CACmBxyvfkhNUo-qh8m7jUWXhb5JoKM_EVWxq-LWeXRm1N-Cstw@mail.gmail.com>
Message-ID: <aef867d1-d307-ce8f-32c8-1722698fa9cb@gmail.com>

My comments on this:

1) The MD5 function seems to be needed only(?) for the WMS cache and 
probably also WFS. To me that highlights the need for some integration 
work regarding caching in GDAL. I also implemented yet another caching 
code for the WCS (without MD5). Looking at my $HOME/.gdal I see also 
gmlas_xsd_cache and srs_cache.

2) This discussion thread also highlights the need to go towards more 
pull request style development at least for bigger changes.

Ari


Kurt Schwehr kirjoitti 21.12.2017 klo 02:56:
> Dmitry,
>
> Statements like this indicate a world of trouble:
>
> > I'm not sure that Python produce the same hash than cvs_MD5*.
> > Also I'm not sure what in future they will be the same.
>
> If you remove the swig and python stuff, move the CPLMD5String to 
> cpl_md5.{cpp,h}, and follow Even's suggestions, I will be much happier 
> with the change.  A C++ test would be good too.  I'll be happy to do a 
> quick fix up of a few things that I see in the md5 code once it is to 
> that point.  I do think it is a good thing that there be md5 support 
> in port along with the existing sha{1,256} code.
>
> I see what you are saying about 
> the OGRGeometry::exportTo{json,kml,gml}, but that doesn't (to me) 
> support your argument.  My personal opinion is that GDAL would have 
> been stronger if those had separate and not been a part of OGRGeometry.
>
> If there is a critical difference between CPLMD5String or a language 
> and use case where md5 support in that language from GDAL is really 
> required, you need to first document that issue.
>
> On Wed, Dec 20, 2017 at 7:46 AM, Dmitry Baryshnikov 
> <bishop.dev at gmail.com <mailto:bishop.dev at gmail.com>> wrote:
>
>     Just the note that CPLMD5String not only for Python, but any other
>     API clients: C/C++, Java, Perl, etc.
>
>     But, I agree, it can be easily removed.
>
>     Best regards,
>         Dmitry
>
>     20.12.2017 18 <tel:20.12.2017%2018>:35, Even Rouault пишет:
>
>                 And why are you exposing this to python?  Python has
>                 md5 hashing
>
>         already
>
>                 built in.
>
>             I'm not sure that Python produce the same hash than cvs_MD5*.
>
>         I do hope they return the same thing. MD5 is a standardized
>         algorithm:
>         https://tools.ietf.org/html/rfc1321
>         <https://tools.ietf.org/html/rfc1321>
>
>         I'm not sure we really need to expose it our CPL MD5 through
>         Python.
>
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
>
>
>
> -- 
> -- 
> http://schwehr.org
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/f4e8fee2/attachment.html>

From bishop.dev at gmail.com  Wed Dec 20 13:58:53 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Thu, 21 Dec 2017 00:58:53 +0300
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <aef867d1-d307-ce8f-32c8-1722698fa9cb@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
 <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>
 <CACmBxyvfkhNUo-qh8m7jUWXhb5JoKM_EVWxq-LWeXRm1N-Cstw@mail.gmail.com>
 <aef867d1-d307-ce8f-32c8-1722698fa9cb@gmail.com>
Message-ID: <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>

Hi Ari,

The pull request and discussion can be found here: 
https://github.com/OSGeo/gdal/pull/280

I cannot imagine that this improvements will affect something else. MD5 
used for cache paths initially, I only added some improvements for WMS 
cache size limits, expire time and split cache per dataset base (i.e. to 
delete cached files when dataset deletes).

What about your idea about common caching classes/functions - this is 
topic to discuss.

Best regards,
     Dmitry

21.12.2017 0:32, Ari Jolma пишет:
> My comments on this:
>
> 1) The MD5 function seems to be needed only(?) for the WMS cache and 
> probably also WFS. To me that highlights the need for some integration 
> work regarding caching in GDAL. I also implemented yet another caching 
> code for the WCS (without MD5). Looking at my $HOME/.gdal I see also 
> gmlas_xsd_cache and srs_cache.
>
> 2) This discussion thread also highlights the need to go towards more 
> pull request style development at least for bigger changes.
>
> Ari
>
>
> Kurt Schwehr kirjoitti 21.12.2017 klo 02:56:
>> Dmitry,
>>
>> Statements like this indicate a world of trouble:
>>
>> > I'm not sure that Python produce the same hash than cvs_MD5*.
>> > Also I'm not sure what in future they will be the same.
>>
>> If you remove the swig and python stuff, move the CPLMD5String to 
>> cpl_md5.{cpp,h}, and follow Even's suggestions, I will be much 
>> happier with the change.  A C++ test would be good too. I'll be happy 
>> to do a quick fix up of a few things that I see in the md5 code once 
>> it is to that point.  I do think it is a good thing that there be md5 
>> support in port along with the existing sha{1,256} code.
>>
>> I see what you are saying about 
>> the OGRGeometry::exportTo{json,kml,gml}, but that doesn't (to me) 
>> support your argument.  My personal opinion is that GDAL would have 
>> been stronger if those had separate and not been a part of OGRGeometry.
>>
>> If there is a critical difference between CPLMD5String or a language 
>> and use case where md5 support in that language from GDAL is really 
>> required, you need to first document that issue.
>>
>> On Wed, Dec 20, 2017 at 7:46 AM, Dmitry Baryshnikov 
>> <bishop.dev at gmail.com <mailto:bishop.dev at gmail.com>> wrote:
>>
>>     Just the note that CPLMD5String not only for Python, but any other
>>     API clients: C/C++, Java, Perl, etc.
>>
>>     But, I agree, it can be easily removed.
>>
>>     Best regards,
>>         Dmitry
>>
>>     20.12.2017 18 <tel:20.12.2017%2018>:35, Even Rouault пишет:
>>
>>                 And why are you exposing this to python?  Python has
>>                 md5 hashing
>>
>>         already
>>
>>                 built in.
>>
>>             I'm not sure that Python produce the same hash than 
>> cvs_MD5*.
>>
>>         I do hope they return the same thing. MD5 is a standardized
>>         algorithm:
>>         https://tools.ietf.org/html/rfc1321
>>         <https://tools.ietf.org/html/rfc1321>
>>
>>         I'm not sure we really need to expose it our CPL MD5 through
>>         Python.
>>
>>
>>     _______________________________________________
>>     gdal-dev mailing list
>>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>>
>>
>>
>>
>> -- 
>> -- 
>> http://schwehr.org
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/e541dc37/attachment.html>

From even.rouault at spatialys.com  Wed Dec 20 14:09:11 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2017 23:09:11 +0100
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <aef867d1-d307-ce8f-32c8-1722698fa9cb@gmail.com>
 <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>
Message-ID: <2163089.OqYU4hliJI@even-i700>

On jeudi 21 décembre 2017 00:58:53 CET Dmitry Baryshnikov wrote:
> Hi Ari,
> 
> The pull request and discussion can be found here:
> https://github.com/OSGeo/gdal/pull/280
> 
> I cannot imagine that this improvements will affect something else. MD5
> used for cache paths initially, I only added some improvements for WMS
> cache size limits, expire time and split cache per dataset base (i.e. to
> delete cached files when dataset deletes).
> 
> What about your idea about common caching classes/functions - this is
> topic to discuss.

Ah, and in a driver I'm going to commit in a few hours, I also have a (primitive) on-disk tile 
caching.

For in-memory caching, I found this useful class that implements a LRU cache:
https://github.com/rouault/gdal2/blob/idaho_driver/gdal/port/cpl_mem_cache.h

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/42c5357d/attachment-0001.html>

From ari.jolma at gmail.com  Wed Dec 20 15:01:01 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 21 Dec 2017 10:01:01 +1100
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
 <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>
 <CACmBxyvfkhNUo-qh8m7jUWXhb5JoKM_EVWxq-LWeXRm1N-Cstw@mail.gmail.com>
 <aef867d1-d307-ce8f-32c8-1722698fa9cb@gmail.com>
 <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>
Message-ID: <f6f9b006-e367-f66d-e01b-797ab550c066@gmail.com>

Dmitry Baryshnikov kirjoitti 21.12.2017 klo 08:58:

> Hi Ari,
>
> The pull request and discussion can be found here: 
> https://github.com/OSGeo/gdal/pull/280
>

Yes. Sorry. I didn't see that. Maybe Kurt also didn't see that - or the 
aspect of it that he brought up here. Maybe a place for some 
institutional improvements.

> I cannot imagine that this improvements will affect something else. 
> MD5 used for cache paths initially, I only added some improvements for 
> WMS cache size limits, expire time and split cache per dataset base 
> (i.e. to delete cached files when dataset deletes).
>
> What about your idea about common caching classes/functions - this is 
> topic to discuss.
>

I needed a simple URL -> a few files cache for the WCS. Not much code 
but probably other drivers need such functionality too. I didn't do good 
research although I knew WMS has similar needs. The code is not much but 
issues such as unique filenames and simultaneous access from 
threads/processes add complication.

Ari

>
> Best regards,
>      Dmitry
> 21.12.2017 0:32, Ari Jolma пишет:
>> My comments on this:
>>
>> 1) The MD5 function seems to be needed only(?) for the WMS cache and 
>> probably also WFS. To me that highlights the need for some 
>> integration work regarding caching in GDAL. I also implemented yet 
>> another caching code for the WCS (without MD5). Looking at my 
>> $HOME/.gdal I see also gmlas_xsd_cache and srs_cache.
>>
>> 2) This discussion thread also highlights the need to go towards more 
>> pull request style development at least for bigger changes.
>>
>> Ari
>>
>>
>> Kurt Schwehr kirjoitti 21.12.2017 klo 02:56:
>>> Dmitry,
>>>
>>> Statements like this indicate a world of trouble:
>>>
>>> > I'm not sure that Python produce the same hash than cvs_MD5*.
>>> > Also I'm not sure what in future they will be the same.
>>>
>>> If you remove the swig and python stuff, move the CPLMD5String to 
>>> cpl_md5.{cpp,h}, and follow Even's suggestions, I will be much 
>>> happier with the change.  A C++ test would be good too. I'll be 
>>> happy to do a quick fix up of a few things that I see in the md5 
>>> code once it is to that point.  I do think it is a good thing that 
>>> there be md5 support in port along with the existing sha{1,256} code.
>>>
>>> I see what you are saying about 
>>> the OGRGeometry::exportTo{json,kml,gml}, but that doesn't (to me) 
>>> support your argument.  My personal opinion is that GDAL would have 
>>> been stronger if those had separate and not been a part of OGRGeometry.
>>>
>>> If there is a critical difference between CPLMD5String or a language 
>>> and use case where md5 support in that language from GDAL is really 
>>> required, you need to first document that issue.
>>>
>>> On Wed, Dec 20, 2017 at 7:46 AM, Dmitry Baryshnikov 
>>> <bishop.dev at gmail.com <mailto:bishop.dev at gmail.com>> wrote:
>>>
>>>     Just the note that CPLMD5String not only for Python, but any other
>>>     API clients: C/C++, Java, Perl, etc.
>>>
>>>     But, I agree, it can be easily removed.
>>>
>>>     Best regards,
>>>         Dmitry
>>>
>>>     20.12.2017 18 <tel:20.12.2017%2018>:35, Even Rouault пишет:
>>>
>>>                 And why are you exposing this to python? Python has
>>>                 md5 hashing
>>>
>>>         already
>>>
>>>                 built in.
>>>
>>>             I'm not sure that Python produce the same hash than 
>>> cvs_MD5*.
>>>
>>>         I do hope they return the same thing. MD5 is a standardized
>>>         algorithm:
>>> https://tools.ietf.org/html/rfc1321
>>> <https://tools.ietf.org/html/rfc1321>
>>>
>>>         I'm not sure we really need to expose it our CPL MD5 through
>>>         Python.
>>>
>>>
>>>     _______________________________________________
>>>     gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>>>
>>>
>>>
>>>
>>> -- 
>>> -- 
>>> http://schwehr.org
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/c761703e/attachment.html>

From ari.jolma at gmail.com  Wed Dec 20 15:22:50 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 21 Dec 2017 10:22:50 +1100
Subject: [gdal-dev] FFI Interface (to Perl)
Message-ID: <faa96261-9a4c-7143-ec5d-bfbe50597739@gmail.com>

Folks,

I've been experimenting with the Perl module FFI::Platypus, to create a 
Perl interface to GDAL with its help(1) and it's progressing well. 
FFI::Platypus itself uses libffi, which is a portable interface library. 
That, and Alien::gdal, which is a Perl module to use GDAL in a system 
that has Perl, allow some significant simplifications and streamlining 
for the Perl bindings.

I can imagine those leading to the retirement of the Swig based Perl 
bindings at some point (like GDAL 3.0) and having only a single 
distribution of Perl GDAL bindings that does not live in GDAL source 
tree and is distributed through CPAN. In the meantime the Swig based 
bindings will live in GDAL source tree and a copy of that with a 
modified configuration system (that uses the Alien::gdal) in github(2) + 
CPAN.

I don't think I'm aiming at 100% similar API with the FFI interface than 
Geo::GDAL since in the latter has accumulated some undesirable things 
over the years. Anybody interested in the new API is welcome to collaborate.

Best regards,

Ari

(1) https://github.com/ajolma/Geo-GDAL-FFI

(2) https://github.com/ajolma/Geo-GDAL-2.02



From schwehr at gmail.com  Wed Dec 20 16:14:22 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 20 Dec 2017 16:14:22 -0800
Subject: [gdal-dev] FFI Interface (to Perl)
In-Reply-To: <CACmBxyt0o845ipSpVYmYi0BAi8W+sOQK=kJsebGjtBTD4FBJjg@mail.gmail.com>
References: <faa96261-9a4c-7143-ec5d-bfbe50597739@gmail.com>
 <CACmBxyt0o845ipSpVYmYi0BAi8W+sOQK=kJsebGjtBTD4FBJjg@mail.gmail.com>
Message-ID: <CACmBxyuwSTDPv2rKZTYB_Z__WX7_dsphW_GzLcZVEcbn7scWQQ@mail.gmail.com>

Cool!  Should be useful for other languages to see what is possible with
libffi

On Dec 20, 2017 3:23 PM, "Ari Jolma" <ari.jolma at gmail.com> wrote:

Folks,

I've been experimenting with the Perl module FFI::Platypus, to create a
Perl interface to GDAL with its help(1) and it's progressing well.
FFI::Platypus itself uses libffi, which is a portable interface library.
That, and Alien::gdal, which is a Perl module to use GDAL in a system that
has Perl, allow some significant simplifications and streamlining for the
Perl bindings.

I can imagine those leading to the retirement of the Swig based Perl
bindings at some point (like GDAL 3.0) and having only a single
distribution of Perl GDAL bindings that does not live in GDAL source tree
and is distributed through CPAN. In the meantime the Swig based bindings
will live in GDAL source tree and a copy of that with a modified
configuration system (that uses the Alien::gdal) in github(2) + CPAN.

I don't think I'm aiming at 100% similar API with the FFI interface than
Geo::GDAL since in the latter has accumulated some undesirable things over
the years. Anybody interested in the new API is welcome to collaborate.

Best regards,

Ari

(1) https://github.com/ajolma/Geo-GDAL-FFI

(2) https://github.com/ajolma/Geo-GDAL-2.02


_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/b262c334/attachment.html>

From sean at mapbox.com  Wed Dec 20 16:48:12 2017
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 20 Dec 2017 17:48:12 -0700
Subject: [gdal-dev] FFI Interface (to Perl)
In-Reply-To: <CACmBxyuwSTDPv2rKZTYB_Z__WX7_dsphW_GzLcZVEcbn7scWQQ@mail.gmail.com>
References: <faa96261-9a4c-7143-ec5d-bfbe50597739@gmail.com>
 <CACmBxyt0o845ipSpVYmYi0BAi8W+sOQK=kJsebGjtBTD4FBJjg@mail.gmail.com>
 <CACmBxyuwSTDPv2rKZTYB_Z__WX7_dsphW_GzLcZVEcbn7scWQQ@mail.gmail.com>
Message-ID: <CADPhZXwwEFTrCY1Ldt5VEyK3ZoKKtP-BJUv6AojeSR0PzFWMag@mail.gmail.com>

Ari,

This sounds great. I don't use Perl as much as I used to – unless you count
GNU Parallel, which I use about 320 hours a day – but I'll follow your
progress.

It seems to me that the idea of a common API across different scripting
languages isn't attractive to programmers like it once was. R and Node.js
interfaces for GDAL are being developed elsewhere, as are my Rasterio and
Fiona projects. As long as we're all attentive to the maintenance of the
core library the diversity is a good thing.

Shapely uses libffi to bind GEOS functions. The only reason I don't use
libffi (and Python's cffi module) for Rasterio and Fiona is that Cython
makes integration with Numpy so painless.


On Wed, Dec 20, 2017 at 5:14 PM, Kurt Schwehr <schwehr at gmail.com> wrote:

> Cool!  Should be useful for other languages to see what is possible with
> libffi
>
> On Dec 20, 2017 3:23 PM, "Ari Jolma" <ari.jolma at gmail.com> wrote:
>
> Folks,
>
> I've been experimenting with the Perl module FFI::Platypus, to create a
> Perl interface to GDAL with its help(1) and it's progressing well.
> FFI::Platypus itself uses libffi, which is a portable interface library.
> That, and Alien::gdal, which is a Perl module to use GDAL in a system that
> has Perl, allow some significant simplifications and streamlining for the
> Perl bindings.
>
> I can imagine those leading to the retirement of the Swig based Perl
> bindings at some point (like GDAL 3.0) and having only a single
> distribution of Perl GDAL bindings that does not live in GDAL source tree
> and is distributed through CPAN. In the meantime the Swig based bindings
> will live in GDAL source tree and a copy of that with a modified
> configuration system (that uses the Alien::gdal) in github(2) + CPAN.
>
> I don't think I'm aiming at 100% similar API with the FFI interface than
> Geo::GDAL since in the latter has accumulated some undesirable things over
> the years. Anybody interested in the new API is welcome to collaborate.
>
> Best regards,
>
> Ari
>
> (1) https://github.com/ajolma/Geo-GDAL-FFI
>
> (2) https://github.com/ajolma/Geo-GDAL-2.02
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171220/b103d445/attachment-0001.html>

From ari.jolma at gmail.com  Wed Dec 20 17:02:41 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 21 Dec 2017 12:02:41 +1100
Subject: [gdal-dev] FFI Interface (to Perl)
In-Reply-To: <CADPhZXwwEFTrCY1Ldt5VEyK3ZoKKtP-BJUv6AojeSR0PzFWMag@mail.gmail.com>
References: <faa96261-9a4c-7143-ec5d-bfbe50597739@gmail.com>
 <CACmBxyt0o845ipSpVYmYi0BAi8W+sOQK=kJsebGjtBTD4FBJjg@mail.gmail.com>
 <CACmBxyuwSTDPv2rKZTYB_Z__WX7_dsphW_GzLcZVEcbn7scWQQ@mail.gmail.com>
 <CADPhZXwwEFTrCY1Ldt5VEyK3ZoKKtP-BJUv6AojeSR0PzFWMag@mail.gmail.com>
Message-ID: <42754252-1e54-5d12-e91c-e1c0b3395480@gmail.com>

Sean Gillies kirjoitti 21.12.2017 klo 11:48:
> Ari,
>
> This sounds great. I don't use Perl as much as I used to – unless you 
> count GNU Parallel, which I use about 320 hours a day – but I'll 
> follow your progress.
>
> It seems to me that the idea of a common API across different 
> scripting languages isn't attractive to programmers like it once was. 
> R and Node.js interfaces for GDAL are being developed elsewhere, as 
> are my Rasterio and Fiona projects. As long as we're all attentive to 
> the maintenance of the core library the diversity is a good thing.

I'm more interested in mixing Perl with R for example (sending some 
things from Perl to be done in R) than having a common API. Every 
language has its traditions for API.

>
> Shapely uses libffi to bind GEOS functions. The only reason I don't 
> use libffi (and Python's cffi module) for Rasterio and Fiona is that 
> Cython makes integration with Numpy so painless.

So far I've not tried integration with PDL, which is for similar 
purposes than Numpy. We'll see how that goes eventually, it is anyway 
something I use for raster processing.

Ari

>
>
> On Wed, Dec 20, 2017 at 5:14 PM, Kurt Schwehr <schwehr at gmail.com 
> <mailto:schwehr at gmail.com>> wrote:
>
>     Cool!  Should be useful for other languages to see what is
>     possible with libffi
>
>     On Dec 20, 2017 3:23 PM, "Ari Jolma" <ari.jolma at gmail.com
>     <mailto:ari.jolma at gmail.com>> wrote:
>
>         Folks,
>
>         I've been experimenting with the Perl module FFI::Platypus, to
>         create a Perl interface to GDAL with its help(1) and it's
>         progressing well. FFI::Platypus itself uses libffi, which is a
>         portable interface library. That, and Alien::gdal, which is a
>         Perl module to use GDAL in a system that has Perl, allow some
>         significant simplifications and streamlining for the Perl
>         bindings.
>
>         I can imagine those leading to the retirement of the Swig
>         based Perl bindings at some point (like GDAL 3.0) and having
>         only a single distribution of Perl GDAL bindings that does not
>         live in GDAL source tree and is distributed through CPAN. In
>         the meantime the Swig based bindings will live in GDAL source
>         tree and a copy of that with a modified configuration system
>         (that uses the Alien::gdal) in github(2) + CPAN.
>
>         I don't think I'm aiming at 100% similar API with the FFI
>         interface than Geo::GDAL since in the latter has accumulated
>         some undesirable things over the years. Anybody interested in
>         the new API is welcome to collaborate.
>
>         Best regards,
>
>         Ari
>
>         (1) https://github.com/ajolma/Geo-GDAL-FFI
>         <https://github.com/ajolma/Geo-GDAL-FFI>
>
>         (2) https://github.com/ajolma/Geo-GDAL-2.02
>         <https://github.com/ajolma/Geo-GDAL-2.02>
>
>
>         _______________________________________________
>         gdal-dev mailing list
>         gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>         <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
>
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
>
>
>
> -- 
> Sean Gillies

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/d16d5e76/attachment.html>

From jluis at ualg.pt  Wed Dec 20 17:26:23 2017
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Thu, 21 Dec 2017 01:26:23 +0000
Subject: [gdal-dev] FFI Interface (to Perl)
In-Reply-To: <42754252-1e54-5d12-e91c-e1c0b3395480@gmail.com>
References: <faa96261-9a4c-7143-ec5d-bfbe50597739@gmail.com>
 <CACmBxyt0o845ipSpVYmYi0BAi8W+sOQK=kJsebGjtBTD4FBJjg@mail.gmail.com>
 <CACmBxyuwSTDPv2rKZTYB_Z__WX7_dsphW_GzLcZVEcbn7scWQQ@mail.gmail.com>
 <CADPhZXwwEFTrCY1Ldt5VEyK3ZoKKtP-BJUv6AojeSR0PzFWMag@mail.gmail.com>
 <42754252-1e54-5d12-e91c-e1c0b3395480@gmail.com>
Message-ID: <AM0PR0402MB3777B1E84DAA39A03378E8CDA60D0@AM0PR0402MB3777.eurprd04.prod.outlook.com>

You have also the Julia wrapper that needs no ffi lib to do the bindings

https://github.com/visr/GDAL.jl

From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Ari Jolma
Sent: Thursday, December 21, 2017 1:03 AM
To: Sean Gillies <sean at mapbox.com>; Kurt Schwehr <schwehr at gmail.com>
Cc: gdal dev <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] FFI Interface (to Perl)

Sean Gillies kirjoitti 21.12.2017 klo 11:48:

Ari,

This sounds great. I don't use Perl as much as I used to – unless you count GNU Parallel, which I use about 320 hours a day – but I'll follow your progress.

It seems to me that the idea of a common API across different scripting languages isn't attractive to programmers like it once was. R and Node.js interfaces for GDAL are being developed elsewhere, as are my Rasterio and Fiona projects. As long as we're all attentive to the maintenance of the core library the diversity is a good thing.

I'm more interested in mixing Perl with R for example (sending some things from Perl to be done in R) than having a common API. Every language has its traditions for API.



Shapely uses libffi to bind GEOS functions. The only reason I don't use libffi (and Python's cffi module) for Rasterio and Fiona is that Cython makes integration with Numpy so painless.

So far I've not tried integration with PDL, which is for similar purposes than Numpy. We'll see how that goes eventually, it is anyway something I use for raster processing.

Ari




On Wed, Dec 20, 2017 at 5:14 PM, Kurt Schwehr <schwehr at gmail.com<mailto:schwehr at gmail.com>> wrote:
Cool!  Should be useful for other languages to see what is possible with libffi

On Dec 20, 2017 3:23 PM, "Ari Jolma" <ari.jolma at gmail.com<mailto:ari.jolma at gmail.com>> wrote:
Folks,

I've been experimenting with the Perl module FFI::Platypus, to create a Perl interface to GDAL with its help(1) and it's progressing well. FFI::Platypus itself uses libffi, which is a portable interface library. That, and Alien::gdal, which is a Perl module to use GDAL in a system that has Perl, allow some significant simplifications and streamlining for the Perl bindings.

I can imagine those leading to the retirement of the Swig based Perl bindings at some point (like GDAL 3.0) and having only a single distribution of Perl GDAL bindings that does not live in GDAL source tree and is distributed through CPAN. In the meantime the Swig based bindings will live in GDAL source tree and a copy of that with a modified configuration system (that uses the Alien::gdal) in github(2) + CPAN.

I don't think I'm aiming at 100% similar API with the FFI interface than Geo::GDAL since in the latter has accumulated some undesirable things over the years. Anybody interested in the new API is welcome to collaborate.

Best regards,

Ari

(1) https://github.com/ajolma/Geo-GDAL-FFI

(2) https://github.com/ajolma/Geo-GDAL-2.02


_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev


_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev



--
Sean Gillies

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/ad707d79/attachment-0001.html>

From schwehr at gmail.com  Thu Dec 21 05:45:02 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 21 Dec 2017 05:45:02 -0800
Subject: [gdal-dev] Propose removing OGRRegisterAll(void); in ogrsf_frmts.h
Message-ID: <CACmBxyv3rBYXX=LFK3wRdm8cioGTLo=HLegR-2TRC-r4ZokBYw@mail.gmail.com>

In Even's https://trac.osgeo.org/gdal/changeset/41094:

Even handles the multiple definitions of OGRRegisterAll().  I propose that
we remove the one from ogrsf_frmts.h ( which was not my first thought ).  I
think the common cases are:

1) you just want all the drivers registered and don't care about individual
registers, so just use ogr_api.h.  You will likely need it anyway.

2) you are definiting a register function and don't care
about OGRRegisterAll so include ogrsf_frmts.h

3) you want a specific driver registered and don't care
about OGRRegisterAll so include ogrsf_frmts.h

Cases 2 and 3 likely will have to include ogr_api.h to do their work, but
maybe not in a rare case.

Why add extra in case 1?

Thoughts?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/ae3da19f/attachment.html>

From schwehr at gmail.com  Thu Dec 21 05:57:54 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 21 Dec 2017 05:57:54 -0800
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
 <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>
 <CACmBxyvfkhNUo-qh8m7jUWXhb5JoKM_EVWxq-LWeXRm1N-Cstw@mail.gmail.com>
 <aef867d1-d307-ce8f-32c8-1722698fa9cb@gmail.com>
 <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>
Message-ID: <CACmBxytK4zJoWHexAcrsQfDFjmXh0QUDNWuJzKKbS4JMEYapfg@mail.gmail.com>

Dmitry,

Thank you for doing https://trac.osgeo.org/gdal/changeset/41095

Sorry, I didn't know about the pull request.  I get spammed by github
notifications and have yet to figure out how make the 99.99% I don't care
about go away. :|

I think commits should always reference relevant issues and pull requests.
The commit message here https://trac.osgeo.org/gdal/changeset/41086 was not
particularly useful.  In reading that patch, I assumed that this was a code
brand new to GDAL.  I filter out the changes for drivers that I don't use
and the diffs never go through my repo (0.8M lines locally versus 1.8M in
svn).  The description for r41085 never mentions migrating code from wms to
port or the pr.


On Wed, Dec 20, 2017 at 1:58 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
wrote:

> Hi Ari,
>
> The pull request and discussion can be found here:
> https://github.com/OSGeo/gdal/pull/280
>
> I cannot imagine that this improvements will affect something else. MD5
> used for cache paths initially, I only added some improvements for WMS
> cache size limits, expire time and split cache per dataset base (i.e. to
> delete cached files when dataset deletes).
>
> What about your idea about common caching classes/functions - this is
> topic to discuss.
>
> Best regards,
>     Dmitry
>
> 21.12.2017 0:32, Ari Jolma пишет:
>
> My comments on this:
>
> 1) The MD5 function seems to be needed only(?) for the WMS cache and
> probably also WFS. To me that highlights the need for some integration work
> regarding caching in GDAL. I also implemented yet another caching code for
> the WCS (without MD5). Looking at my $HOME/.gdal I see also gmlas_xsd_cache
> and srs_cache.
>
> 2) This discussion thread also highlights the need to go towards more pull
> request style development at least for bigger changes.
>
> Ari
>
>
> Kurt Schwehr kirjoitti 21.12.2017 klo 02:56:
>
> Dmitry,
>
> Statements like this indicate a world of trouble:
>
> > I'm not sure that Python produce the same hash than cvs_MD5*.
> > Also I'm not sure what in future they will be the same.
>
> If you remove the swig and python stuff, move the CPLMD5String to
> cpl_md5.{cpp,h}, and follow Even's suggestions, I will be much happier with
> the change.  A C++ test would be good too.  I'll be happy to do a quick fix
> up of a few things that I see in the md5 code once it is to that point.  I
> do think it is a good thing that there be md5 support in port along with
> the existing sha{1,256} code.
>
> I see what you are saying about the OGRGeometry::exportTo{json,kml,gml},
> but that doesn't (to me) support your argument.  My personal opinion is
> that GDAL would have been stronger if those had separate and not been a
> part of OGRGeometry.
>
> If there is a critical difference between CPLMD5String or a language and
> use case where md5 support in that language from GDAL is really required,
> you need to first document that issue.
>
> On Wed, Dec 20, 2017 at 7:46 AM, Dmitry Baryshnikov <bishop.dev at gmail.com
> <mailto:bishop.dev at gmail.com> <bishop.dev at gmail.com>> wrote:
>
>     Just the note that CPLMD5String not only for Python, but any other
>     API clients: C/C++, Java, Perl, etc.
>
>     But, I agree, it can be easily removed.
>
>     Best regards,
>         Dmitry
>
>     20.12.2017 18 <tel:20.12.2017%2018> <20.12.2017%2018>:35, Even
> Rouault пишет:
>
>                 And why are you exposing this to python?  Python has
>                 md5 hashing
>
>         already
>
>                 built in.
>
>             I'm not sure that Python produce the same hash than cvs_MD5*.
>
>         I do hope they return the same thing. MD5 is a standardized
>         algorithm:
>         https://tools.ietf.org/html/rfc1321
>         <https://tools.ietf.org/html/rfc1321>
> <https://tools.ietf.org/html/rfc1321>
>
>         I'm not sure we really need to expose it our CPL MD5 through
>         Python.
>
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
> <gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
> <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
>
>
>
> --
> --
> http://schwehr.org
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/980ae3c1/attachment.html>

From even.rouault at spatialys.com  Thu Dec 21 06:08:30 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Dec 2017 15:08:30 +0100
Subject: [gdal-dev] Propose removing OGRRegisterAll(void);
	in ogrsf_frmts.h
In-Reply-To: <CACmBxyv3rBYXX=LFK3wRdm8cioGTLo=HLegR-2TRC-r4ZokBYw@mail.gmail.com>
References: <CACmBxyv3rBYXX=LFK3wRdm8cioGTLo=HLegR-2TRC-r4ZokBYw@mail.gmail.com>
Message-ID: <2807046.PYYjDm6Wz6@even-i700>

On jeudi 21 décembre 2017 05:45:02 CET Kurt Schwehr wrote:
> In Even's https://trac.osgeo.org/gdal/changeset/41094:
> 
> Even handles the multiple definitions of OGRRegisterAll().  I propose that
> we remove the one from ogrsf_frmts.h ( which was not my first thought ).  I
> think the common cases are:
> 
> 1) you just want all the drivers registered and don't care about individual
> registers, so just use ogr_api.h.  You will likely need it anyway.
> 
> 2) you are definiting a register function and don't care
> about OGRRegisterAll so include ogrsf_frmts.h
> 
> 3) you want a specific driver registered and don't care
> about OGRRegisterAll so include ogrsf_frmts.h
> 
> Cases 2 and 3 likely will have to include ogr_api.h to do their work, but
> maybe not in a rare case.
> 
> Why add extra in case 1?

People only using the C++ API might just need to include ogrsf_frmts.h currently.

But actually looking at inclusiong chain:

ogrsf_frmts.h includes gdal_priv.h
gdal_priv.h includes gdal.h
gdal.h includes ogr_api.h

So I've just committed the redefinition in ogrsf_frmts.h

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/28e3a061/attachment-0001.html>

From bishop.dev at gmail.com  Thu Dec 21 06:44:23 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Thu, 21 Dec 2017 17:44:23 +0300
Subject: [gdal-dev] port/md5 cvs_MD5*
In-Reply-To: <CACmBxytK4zJoWHexAcrsQfDFjmXh0QUDNWuJzKKbS4JMEYapfg@mail.gmail.com>
References: <CACmBxyuvNoSeX2u-11F2LPWa28xpVeQGZMa9e6FD=8vGk0UJbQ@mail.gmail.com>
 <CACmBxyvLO1avUfFAPdNiq1RhC+BDNAFqH+Y2QZGka+S7Vk3hpw@mail.gmail.com>
 <ff6354af-7bfd-e6fe-d9dc-2391d0e4573f@gmail.com>
 <2535003.5Tk26laDqr@even-i700>
 <86692a92-18b2-afbb-802f-7c59fbe38a35@gmail.com>
 <CACmBxyvfkhNUo-qh8m7jUWXhb5JoKM_EVWxq-LWeXRm1N-Cstw@mail.gmail.com>
 <aef867d1-d307-ce8f-32c8-1722698fa9cb@gmail.com>
 <ee601006-c604-07d0-5652-a1eb7ff2138f@gmail.com>
 <CACmBxytK4zJoWHexAcrsQfDFjmXh0QUDNWuJzKKbS4JMEYapfg@mail.gmail.com>
Message-ID: <f71d4c18-56e7-d7ff-26bc-7c5a9c4dea3a@gmail.com>

Hi Kurt,

In future I will try to write more detailed commit messages, and of 
course, will point to the osgeo/gdal pull request on github.

By the way this situation shows the one more reason to switch to github, 
as Even proposed.

Best regards,
     Dmitry

21.12.2017 16:57, Kurt Schwehr пишет:
> Dmitry,
>
> Thank you for doing https://trac.osgeo.org/gdal/changeset/41095
>
> Sorry, I didn't know about the pull request.  I get spammed by github
> notifications and have yet to figure out how make the 99.99% I don't care
> about go away. :|
>
> I think commits should always reference relevant issues and pull requests.
> The commit message here https://trac.osgeo.org/gdal/changeset/41086 was not
> particularly useful.  In reading that patch, I assumed that this was a code
> brand new to GDAL.  I filter out the changes for drivers that I don't use
> and the diffs never go through my repo (0.8M lines locally versus 1.8M in
> svn).  The description for r41085 never mentions migrating code from wms to
> port or the pr.
>
>
> On Wed, Dec 20, 2017 at 1:58 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
> wrote:
>
>> Hi Ari,
>>
>> The pull request and discussion can be found here:
>> https://github.com/OSGeo/gdal/pull/280
>>
>> I cannot imagine that this improvements will affect something else. MD5
>> used for cache paths initially, I only added some improvements for WMS
>> cache size limits, expire time and split cache per dataset base (i.e. to
>> delete cached files when dataset deletes).
>>
>> What about your idea about common caching classes/functions - this is
>> topic to discuss.
>>
>> Best regards,
>>      Dmitry
>>
>> 21.12.2017 0:32, Ari Jolma пишет:
>>
>> My comments on this:
>>
>> 1) The MD5 function seems to be needed only(?) for the WMS cache and
>> probably also WFS. To me that highlights the need for some integration work
>> regarding caching in GDAL. I also implemented yet another caching code for
>> the WCS (without MD5). Looking at my $HOME/.gdal I see also gmlas_xsd_cache
>> and srs_cache.
>>
>> 2) This discussion thread also highlights the need to go towards more pull
>> request style development at least for bigger changes.
>>
>> Ari
>>
>>
>> Kurt Schwehr kirjoitti 21.12.2017 klo 02:56:
>>
>> Dmitry,
>>
>> Statements like this indicate a world of trouble:
>>
>>> I'm not sure that Python produce the same hash than cvs_MD5*.
>>> Also I'm not sure what in future they will be the same.
>> If you remove the swig and python stuff, move the CPLMD5String to
>> cpl_md5.{cpp,h}, and follow Even's suggestions, I will be much happier with
>> the change.  A C++ test would be good too.  I'll be happy to do a quick fix
>> up of a few things that I see in the md5 code once it is to that point.  I
>> do think it is a good thing that there be md5 support in port along with
>> the existing sha{1,256} code.
>>
>> I see what you are saying about the OGRGeometry::exportTo{json,kml,gml},
>> but that doesn't (to me) support your argument.  My personal opinion is
>> that GDAL would have been stronger if those had separate and not been a
>> part of OGRGeometry.
>>
>> If there is a critical difference between CPLMD5String or a language and
>> use case where md5 support in that language from GDAL is really required,
>> you need to first document that issue.
>>
>> On Wed, Dec 20, 2017 at 7:46 AM, Dmitry Baryshnikov <bishop.dev at gmail.com
>> <mailto:bishop.dev at gmail.com> <bishop.dev at gmail.com>> wrote:
>>
>>      Just the note that CPLMD5String not only for Python, but any other
>>      API clients: C/C++, Java, Perl, etc.
>>
>>      But, I agree, it can be easily removed.
>>
>>      Best regards,
>>          Dmitry
>>
>>      20.12.2017 18 <tel:20.12.2017%2018> <20.12.2017%2018>:35, Even
>> Rouault пишет:
>>
>>                  And why are you exposing this to python?  Python has
>>                  md5 hashing
>>
>>          already
>>
>>                  built in.
>>
>>              I'm not sure that Python produce the same hash than cvs_MD5*.
>>
>>          I do hope they return the same thing. MD5 is a standardized
>>          algorithm:
>>          https://tools.ietf.org/html/rfc1321
>>          <https://tools.ietf.org/html/rfc1321>
>> <https://tools.ietf.org/html/rfc1321>
>>
>>          I'm not sure we really need to expose it our CPL MD5 through
>>          Python.
>>
>>
>>      _______________________________________________
>>      gdal-dev mailing list
>>      gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>> <gdal-dev at lists.osgeo.org>
>>      https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>      <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>> <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>>
>>
>>
>>
>> --
>> --
>> http://schwehr.org
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>


From schwehr at gmail.com  Thu Dec 21 11:32:36 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 21 Dec 2017 11:32:36 -0800
Subject: [gdal-dev] JsonObjUniquePtr
Message-ID: <CACmBxyuLJyHfQTw4sn5ihzzZgDfFFrytDKe5pXbL9n-K4Aw+cQ@mail.gmail.com>

Even,

In https://trac.osgeo.org/gdal/changeset/41106, you have:

    using JsonObjUniquePtr = std::unique_ptr< json_object,
JSonObjectReleaser>;

I suggest being consistent with naming and using JsonObject throughout.

-kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171221/1a5fc15e/attachment.html>

From even.rouault at spatialys.com  Fri Dec 22 08:48:23 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Dec 2017 17:48:23 +0100
Subject: [gdal-dev] Poll: is Visual Studio 2013 support needed for GDAL
	2.3 ?
In-Reply-To: <32210519.DfpE2tuRjK@even-i700>
References: <32210519.DfpE2tuRjK@even-i700>
Message-ID: <3687196.VTHlzf7Z8N@even-i700>

Hi,

OK so the results are 73 votes:
- 8% cannot use more recent than VS2013
- 55% are OK for VS2015 or later
- 37% don't care

So a large majority won't be affected by a requirement for VS2015 and later. Let's go for 
it, as it was mentionned in RFC 68 as underlined by Kurt.

I've replaced the VS2013 32bit AppVeyor target by a VS2017 32bit one (in addition to 
the existing VS2015 64bit)

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171222/28b2897e/attachment.html>

From mateusz at loskot.net  Fri Dec 22 13:08:32 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 22 Dec 2017 22:08:32 +0100
Subject: [gdal-dev] Poll: is Visual Studio 2013 support needed for GDAL
 2.3 ?
In-Reply-To: <3687196.VTHlzf7Z8N@even-i700>
References: <32210519.DfpE2tuRjK@even-i700> <3687196.VTHlzf7Z8N@even-i700>
Message-ID: <CABUeae9T-rTtjfMmH0gUCr3mkx6RfSAupn+3wVv+Z1WRpmVAuA@mail.gmail.com>

On 22 Dec 2017 17:48, "Even Rouault" <even.rouault at spatialys.com> wrote:

Hi,



OK so the results are 73 votes:

- 8% cannot use more recent than VS2013

- 55% are OK for VS2015 or later

- 37% don't care



So a large majority won't be affected by a requirement for VS2015 and
later. Let's go for it, as it was mentionned in RFC 68 as underlined by
Kurt.



Sweet. Thank you for the poll initiative and efforts.

Mat
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171222/02918eb0/attachment.html>

From foss4g at osgeo.org  Fri Dec 22 14:18:30 2017
From: foss4g at osgeo.org (OSGeo Code Sprint)
Date: Fri, 22 Dec 2017 23:18:30 +0100
Subject: [gdal-dev] OSGeo Code Sprint March 2018 in Bonn - join us and
 please register soon
Message-ID: <94a7dcab18b9a6f83b81ede94d841ea3@foss4g2016.org>

Dear developers,

OSGeo Code Sprint will come to Bonn (Germany) in March 2018 [1]. You are 
invited to join us.

When:

- Sun 2018-⁠⁠03-⁠⁠19 12:00 noon -⁠⁠ Sun 2018-⁠⁠03-⁠⁠25 12:00 noon

Where:

- Venue & Accommodation: BaseCamp Bonn (For more informations: 
http://www.basecamp-bonn.com/)

- Accomodation Booking System: 
http://www.bonn-region.de/events/fossgis.html

Interested? So read more about why & where & when...

The Open Source Geospatial Foundation (OSGeo) has a long tradition of 
organizing code sprints for developers of Open Source GIS software.

For several years the Open Source Geospatial Foundation (OSGeo) [1] has 
been organizing a yearly Code Sprint, a come-together of the "C Tribe" 
OSGeo projects - now we call it OSGeo Code Sprint. Leading developers of 
projects like GDAL, PostGIS, MapServer, QGIS, PDAL, and many more get 
together to discuss new ideas, hack, decide, tackle large geospatial 
problems & more & simply to have fun.

In 2018 the OSGeo Code Sprint will come again to Europe after Vienna 
(2014) [6] and Paris in (2016) [4]. This makes is possible to embed 
European developers and users.
The tradition started in 2011 with Toronto [11], then New York [10], 
Montreal [9], Island Wood [8] and Boston [7]. And went to Philadelphia 
in 2015 [5] and last year to Daytona Beach (2017) [3]. Find a list of 
code sprints at [12].

OSGeo Code Sprint 2018 in Bonn
------------------------------
This year the international code sprint of the OSGeo will take place 
from 19 to 25 March 2018 simultaneously with the FOSSGIS Conference 2018 
in Bonn. We offer a setting so that individual projects can meet for 
their code sprint.

The code sprint will take place at BaseCamp in Bonn. During the FOSS4G 
2016 in Bonn we have already organized a code sprint at this location, 
in which about 100 developers worked on the open source projects every 
day. (https://wiki.osgeo.org/wiki/FOSS4G_2016_Code_Sprint). It is a 
really awesome location. Codesprint and accommodations are combined in 
one hall and you will live in a caravan, bus or cabin.

Check out http://www.basecamp-bonn.com/ for details about the venue.

Acommodations
-------------
Working zones will be created for you in the breakfast area and 
hallways. Healthy and not-so-healthy catering of drinks and snacks will 
be provided by us. Participation in codesprint is free of charge. 
However, overnight stays will have to be reserved and paid for by 
yourself.

BaseCamp is an indoor campground and offers different caravans, night 
sleepers, Airstreams, a Trabant, Volkswagen transporter and other places 
to stay.

If you prefer to stay in a hotel - no problem. Bonnox Boardinghouse is 
close-by. And you also find many great hotels in Bonn.

Book your room soon
-------------------
As the accommodations are as well available to FOSSGIS 2018 participants 
we will make an effort to make advance booking possible for you a few 
days ahead, to ensure you have the opportunity to sleep on-site and wrap 
up the evenings jointly.
Therefore, please book your accomondation as soon as possible via the 
booking system http://www.bonn-region.de/events/fossgis.html


Register for the OSGeo Code Sprint
-------------------------------------
And don't forget to sign up in the OSGeo wiki at our OSGeo Code Spint 
2018 page:
  https://wiki.osgeo.org/wiki/OSGeo_Code_Sprint_2018

This is important for us, not only for the planning of snacks and 
drinks.


The OSGeo Code Sprint is open to all who wish to participate in one or 
more projects. There is always plenty to do – it’s not all about 
programming. Translation, documentation, feedback, discussions, testing 
– all this is also important for projects so everyone is cordially 
invited to attend the codesprint!

The Codesprint Organizing Team is looking forward to your coming!

Summarily:

When:

  Sun 2018-⁠⁠03-⁠⁠19 12:00 noon -⁠⁠ Sun 2018-⁠⁠03-⁠⁠25 12:00 noon

Where:

Venue & Accommodation: BaseCamp. (For more informations: 
http://www.basecamp-bonn.com/)

Accomodation Booking System: 
http://www.bonn-region.de/events/fossgis.html

Questions/⁠⁠Comments/⁠⁠Ideas

Questions?

If you have questions/comments/ideas please let us know.

Send an email to codesprint at osgeo.org. You are welcome!

See you in Bonn in march 2018!

The OSGeo Code Sprint 2018 Team

[1] https://wiki.osgeo.org/wiki/OSGeo_Code_Sprint_2018
[2] http://www.osgeo.org
[3] https://wiki.osgeo.org/wiki/Daytona_Beach_Code_Sprint_2017
[4] https://wiki.osgeo.org/wiki/Paris_Code_Sprint_2016
[5] https://wiki.osgeo.org/wiki/Philadelphia_Code_Sprint_2015
[6] https://wiki.osgeo.org/wiki/Vienna_Code_Sprint_2014
[7] http://wiki.osgeo.org/wiki/Boston_Code_Sprint_2013
[8] http://wiki.osgeo.org/wiki/IslandWood_Code_Sprint_2012
[9] http://wiki.osgeo.org/wiki/Montreal_Code_Sprint_2011
[10] http://wiki.osgeo.org/wiki/New_York_Code_Sprint_2010
[11] http://wiki.osgeo.org/wiki/Toronto_Code_Sprint_2009
[12] https://wiki.osgeo.org/wiki/Category:Code_Sprints
[13] Booking System http://www.bonn-region.de/events/fossgis.html



From torresa at avinc.com  Fri Dec 22 14:51:30 2017
From: torresa at avinc.com (Arnaldo Torres)
Date: Fri, 22 Dec 2017 22:51:30 +0000
Subject: [gdal-dev] Building GDAL from source for android under cygwin
Message-ID: <627b67abdaad469888b08b6c0c20fc59@svex02.avpclan.aerovironment.com>

Hi Petr Kitashov,

I am trying to follow the procedure that you described in http://lists.osgeo.org/pipermail/gdal-dev/2012-April/032485.html for building GDAL for Android, and to run it on an Android tablet. I am having a few problems understanding some of the steps, and I thought to try my luck to see if you still remember the details of this procedure. I am using the latest cygwin for x86 64-bits, with GDAL 2.2.3, on Windows 10. I am new to Android and a bit to Linux, so I hope that my questions are more than me just not digging deep enough to understand these steps (I apologize if that is the case), but I have been at it for a week now. Here are my questions:

a.       In Step 1 of the procedure, you recommend a file be created with the content  described so that g++ can understand Cygwin paths. Do you know what the name and extension of this file should be? I tried several extensions and names but "make" was never able to use Cygwin paths.

b.       On Step 2, you indicated that some text in the GDALMake.opt should be change. In particular, a line to be added with the following text: "CORRECT = correct_path". I assumed that the correct_path meant the path to the tool-chain bin folder in cygwin format. Please indicate if this is not correct?

c.       When I run the "make" command, I get a .libs folder on the GDAL source file's folder, which is the directory where I am running the make command in Cygwin. This folder contains libgdal.a, .la, .lai, and .libcmd files. No .so, or .so1, files were created. I am thinking that this may be a consequence of issue a. above. Does that sound correct?

d.       I am running on Windows 10 64-bit, there is no ldconfig executable in Cygwin sbin or the usr/sbin folders. The "make install" does not seem to complete correctly due to this. Any suggestion as to where to get ldconfig? I have not been able to find it yet.
Any help on these would be greatly appreciated. Thank you in advance!

Kind regards,

Arnaldo Torres
  Senior Software Engineer

AeroVironment Inc.
           Proceed with Certainty

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171222/6c274bcf/attachment.html>

From tobias.wendorff at tu-dortmund.de  Thu Dec 28 08:40:18 2017
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Thu, 28 Dec 2017 17:40:18 +0100
Subject: [gdal-dev] GPKG: CREATE TABLE AS not working as expected
Message-ID: <fd943dd3653f2c0729e3fdb7b4d2de4c.squirrel@webmail.tu-dortmund.de>

Hi there!

I'm trying to do this on latest ogr2ogr build:
ogrinfo -al -dialect sqlite -sql "CREATE TABLE sorted AS SELECT * FROM
mytable ORDER BY ST_GeoHash(ST_Transform(ST_Envelope(geom), 4326), 10)"
test.gpkg

The command runs without a problem, but the final table doesn't contain
any content in geometry column... Even a slimmed down example with
"CREATE TABLE test AS SELECT * FROM mytable;" doesn't work as expected.

Can someone give me a tip on how to get CREATE TABLE AS up and running?

Best regards,
Tobias


From even.rouault at spatialys.com  Thu Dec 28 09:41:04 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 28 Dec 2017 18:41:04 +0100
Subject: [gdal-dev] GPKG: CREATE TABLE AS not working as expected
In-Reply-To: <fd943dd3653f2c0729e3fdb7b4d2de4c.squirrel@webmail.tu-dortmund.de>
References: <fd943dd3653f2c0729e3fdb7b4d2de4c.squirrel@webmail.tu-dortmund.de>
Message-ID: <2458183.IpUvnL3xck@even-i700>

On jeudi 28 décembre 2017 17:40:18 CET Tobias Wendorff wrote:
> Hi there!
> 
> I'm trying to do this on latest ogr2ogr build:
> ogrinfo -al -dialect sqlite -sql "CREATE TABLE sorted AS SELECT * FROM
> mytable ORDER BY ST_GeoHash(ST_Transform(ST_Envelope(geom), 4326), 10)"
> test.gpkg
> 
> The command runs without a problem, but the final table doesn't contain
> any content in geometry column... Even a slimmed down example with
> "CREATE TABLE test AS SELECT * FROM mytable;" doesn't work as expected.
> 
> Can someone give me a tip on how to get CREATE TABLE AS up and running?

CREATE TABLE will bypass most driver-level logic that is needed for a spatial table to be 
properly recognized as such. You could fix that by manually registering the table in 
gpkg_contents and gpkg_geometry_columns table, but the most simple way of 
accomplishing what you want to do is:

ogr2ogr -update test.gpkg test.gpkg -sql "SELECT ..." -nln sorted

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171228/08fe19a4/attachment.html>

From tobias.wendorff at tu-dortmund.de  Thu Dec 28 09:53:11 2017
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Thu, 28 Dec 2017 18:53:11 +0100
Subject: [gdal-dev] GPKG: CREATE TABLE AS not working as expected
In-Reply-To: <2458183.IpUvnL3xck@even-i700>
References: <fd943dd3653f2c0729e3fdb7b4d2de4c.squirrel@webmail.tu-dortmund.de>
 <2458183.IpUvnL3xck@even-i700>
Message-ID: <f6f0d47d38aa648ae1118c2faf320893.squirrel@webmail.tu-dortmund.de>

Thanks for your answer.

Am Do, 28.12.2017, 18:41 schrieb Even Rouault:
>
> CREATE TABLE will bypass most driver-level logic that is needed for
> a spatial table to be properly recognized as such. You could fix that
> by manually registering the table in gpkg_contents and
> gpkg_geometry_columns table,

Ah okay. I already thought it wouldn't be as easy as PostGIS ;)

> but the most simple way of accomplishing what you want to do is:
> ogr2ogr -update test.gpkg test.gpkg -sql "SELECT ..." -nln sorted

I just tried it, but the target table has the same order as the
original table:

ogr2ogr -update test.gpkg test.gpkg -sql "SELECT * FROM mytable ORDER BY
ST_GeoHash(ST_Transform(ST_Envelope(geom), 4326), 10)" -nln sorted

This gives me the correct sorting:
ogrinfo -ro test.gpkg -sql "SELECT * FROM mytable ORDER BY
ST_GeoHash(ST_Transform(ST_Envelope(geom), 4326), 10)"


From jukka.rahkonen at maanmittauslaitos.fi  Thu Dec 28 14:50:39 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 28 Dec 2017 15:50:39 -0700 (MST)
Subject: [gdal-dev] GPKG: CREATE TABLE AS not working as expected
In-Reply-To: <f6f0d47d38aa648ae1118c2faf320893.squirrel@webmail.tu-dortmund.de>
References: <fd943dd3653f2c0729e3fdb7b4d2de4c.squirrel@webmail.tu-dortmund.de>
 <2458183.IpUvnL3xck@even-i700>
 <f6f0d47d38aa648ae1118c2faf320893.squirrel@webmail.tu-dortmund.de>
Message-ID: <1514501439774-0.post@n6.nabble.com>

Tobias Wendorff wrote
> I just tried it, but the target table has the same order as the
> original table:
> 
> ogr2ogr -update test.gpkg test.gpkg -sql "SELECT * FROM mytable ORDER BY
> ST_GeoHash(ST_Transform(ST_Envelope(geom), 4326), 10)" -nln sorted
> 
> This gives me the correct sorting:
> ogrinfo -ro test.gpkg -sql "SELECT * FROM mytable ORDER BY
> ST_GeoHash(ST_Transform(ST_Envelope(geom), 4326), 10)"

Hi, 

I would try with SQL that does not select the FID instead of "select *". See
preserve_fid in http://www.gdal.org/ogr2ogr.html. Not guaranteed to work.

-Jukka Rahkonen-





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From tobias.wendorff at tu-dortmund.de  Thu Dec 28 21:31:22 2017
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Fri, 29 Dec 2017 06:31:22 +0100
Subject: [gdal-dev] GPKG: CREATE TABLE AS not working as expected
In-Reply-To: <1514501439774-0.post@n6.nabble.com>
References: <fd943dd3653f2c0729e3fdb7b4d2de4c.squirrel@webmail.tu-dortmund.de>
 <2458183.IpUvnL3xck@even-i700>
 <f6f0d47d38aa648ae1118c2faf320893.squirrel@webmail.tu-dortmund.de>
 <1514501439774-0.post@n6.nabble.com>
Message-ID: <c3a9611cd965e8c64a19fe3698d391bb.squirrel@webmail.tu-dortmund.de>

Am Do, 28.12.2017, 23:50 schrieb jratike80:
> I would try with SQL that does not select the FID instead of "select *".
> See preserve_fid in http://www.gdal.org/ogr2ogr.html. Not guaranteed
> to work.

The other way did it: adding "-unsetFid" seems to loosen up the order
to FID and creates a new one based on the new sorting.

Now my GPKG is spatially clustered. Thanks for leading me to this :)




From ijturton at gmail.com  Fri Dec 29 03:53:37 2017
From: ijturton at gmail.com (Ian Turton)
Date: Fri, 29 Dec 2017 11:53:37 +0000
Subject: [gdal-dev] GPKG: CREATE TABLE AS not working as expected
In-Reply-To: <c3a9611cd965e8c64a19fe3698d391bb.squirrel@webmail.tu-dortmund.de>
References: <fd943dd3653f2c0729e3fdb7b4d2de4c.squirrel@webmail.tu-dortmund.de>
 <2458183.IpUvnL3xck@even-i700>
 <f6f0d47d38aa648ae1118c2faf320893.squirrel@webmail.tu-dortmund.de>
 <1514501439774-0.post@n6.nabble.com>
 <c3a9611cd965e8c64a19fe3698d391bb.squirrel@webmail.tu-dortmund.de>
Message-ID: <CA+=cGJk3SNU1qRP14uKy_q5hjtu9HjLMUdOhe1dLpest2eUBJA@mail.gmail.com>

Can someone add this to the documentation page?

Ian

On 29 December 2017 at 05:31, Tobias Wendorff <
tobias.wendorff at tu-dortmund.de> wrote:

> Am Do, 28.12.2017, 23:50 schrieb jratike80:
> > I would try with SQL that does not select the FID instead of "select *".
> > See preserve_fid in http://www.gdal.org/ogr2ogr.html. Not guaranteed
> > to work.
>
> The other way did it: adding "-unsetFid" seems to loosen up the order
> to FID and creates a new one based on the new sorting.
>
> Now my GPKG is spatially clustered. Thanks for leading me to this :)
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
Ian Turton
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171229/acc29809/attachment.html>

From tmkantol at gmail.com  Fri Dec 29 05:11:16 2017
From: tmkantol at gmail.com (=?UTF-8?Q?M=C3=B6kinMuori?=)
Date: Fri, 29 Dec 2017 06:11:16 -0700 (MST)
Subject: [gdal-dev] gdal_translate ERROR 4 - "does not exist in the file
 system, and is not recognised as a supported dataset name."
Message-ID: <1514553076913-0.post@n6.nabble.com>

I am trying to create a gdal_wmts.xml following the instructions from
http://mapserver.org/ar/mapcache/sources.html

Execution of the following command ends up in the error below. What's wrong?
I've tried with single quotation marks instead of double etc. but no use...

gdal_translate "WMTS:https://my_wmts_url_is_here,layer=layer_name"
gdal_wmts.xml -of WMTS --config GDAL_HTTP_AUTH BASIC --config
GDAL_HTTP_USERPWD "<user_name:passwd>"

ERROR 4: `WMTS:https://karttakuva.maanmittauslaitos.fi,layer=selkokartta'
does not exist in the file system,
and is not recognised as a supported dataset name.

GDALOpen failed - 4
`WMTS:https://my_wmts_url_is_here,layer=layer_name' does not exist in the
file system,
and is not recognised as a supported dataset name.



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Fri Dec 29 12:06:25 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Fri, 29 Dec 2017 13:06:25 -0700 (MST)
Subject: [gdal-dev] gdal_translate ERROR 4 - "does not exist in the file
 system, and is not recognised as a supported dataset name."
In-Reply-To: <1514553076913-0.post@n6.nabble.com>
References: <1514553076913-0.post@n6.nabble.com>
Message-ID: <1514577985152-0.post@n6.nabble.com>

MökinMuori wrote
> I am trying to create a gdal_wmts.xml following the instructions from
> http://mapserver.org/ar/mapcache/sources.html
> 
> Execution of the following command ends up in the error below. What's
> wrong?
> I've tried with single quotation marks instead of double etc. but no
> use...
> 
> gdal_translate "WMTS:https://my_wmts_url_is_here,layer=layer_name"
> gdal_wmts.xml -of WMTS --config GDAL_HTTP_AUTH BASIC --config
> GDAL_HTTP_USERPWD "
> <user_name:passwd>
> "
> 
> ERROR 4: `WMTS:https://my_wmts_url_is_here,layer=layer_name'
> does not exist in the file system,
> and is not recognised as a supported dataset name.
> 
> GDALOpen failed - 4
> `WMTS:https://my_wmts_url_is_here,layer=layer_name' does not exist in the
> file system,
> and is not recognised as a supported dataset name.


Works for me with GDAL 2.3.0dev, released 2017/99/99 from gisinternals.com.

gdal_translate
"WMTS:https://karttakuva.maanmittauslaitos.fi/maasto/wmts/1.0.0/WMTSCapabilities.xml,layer=korkeusmalli_vinovalo"
gdal_wmts.xml -of WMTS --config GDAL_HTTP_AUTH BASIC --config
GDAL_HTTP_USERPWD "user:password"

Result:
Input file size is 8388608, 8388608

The XML file that gets created:

<GDAL_WMTS>
 
<GetCapabilitiesUrl>https://karttakuva.maanmittauslaitos.fi/maasto/wmts/1.0.0/WMTSCapabilities.xml</GetCapabilitiesUrl>
  <Layer>korkeusmalli_vinovalo</Layer>
  
  <TileMatrixSet>ETRS-TM35FIN</TileMatrixSet>
  <DataWindow>
    <UpperLeftX>-548576</UpperLeftX>
    <UpperLeftY>8388608</UpperLeftY>
    <LowerRightX>1548576</LowerRightX>
    <LowerRightY>6291456</LowerRightY>
  </DataWindow>
  <BandsCount>4</BandsCount>
  <Cache />
  <UnsafeSSL>true</UnsafeSSL>
  <ZeroBlockHttpCodes>204,404</ZeroBlockHttpCodes>
  <ZeroBlockOnServerException>true</ZeroBlockOnServerException>
</GDAL_WMTS>

Before using that file for your needs you can add basic auth to the XML as
  <UserPwd>user:password</UserPwd>

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From gilpeleg87 at gmail.com  Sun Dec 31 13:20:42 2017
From: gilpeleg87 at gmail.com (Gil Peleg)
Date: Sun, 31 Dec 2017 23:20:42 +0200
Subject: [gdal-dev] Fwd: Define compression with gdaladdo
In-Reply-To: <CAKQnq3z7MxUktnCy3Y5HTvwndu-CDXGutPt=WDui-v3tYTkrag@mail.gmail.com>
References: <CAKQnq3z7MxUktnCy3Y5HTvwndu-CDXGutPt=WDui-v3tYTkrag@mail.gmail.com>
Message-ID: <CAKQnq3xXjJN+m_OqYWpRcqBHXdwuB8GhsQDzbqFpjh3OhLS4WA@mail.gmail.com>

Hello,

I am trying to convert a tif file to GeoPackage and build it's levels with
the output format of the entire geopackage being either PNG or JPEG.

Using gdal_translate I am able to translate the tif to GeoPackage, and
adding the TILE_FORMAT -co  option sets the compression of the entire
output to either PNG or JPEG as I requested, this works really well.

The problem starts when using gdaladdo to build the levels, the new levels
are created with partial PNG and partial JPEG (I assume it has something to
do with the borders), and I can't find the option to override it, I tried
the COMPRESS_OVERVIEW parameter but it seems to be valid only in tif.

Is there any solution to this?

Thanks!!
Gil

<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail&utm_term=icon>
Virus-free.
www.avast.com
<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail&utm_term=link>
<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171231/c1f37b41/attachment.html>

