From even.rouault at spatialys.com  Mon Jan  1 02:15:44 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 01 Jan 2018 11:15:44 +0100
Subject: [gdal-dev] Fwd: Define compression with gdaladdo
In-Reply-To: <CAKQnq3xXjJN+m_OqYWpRcqBHXdwuB8GhsQDzbqFpjh3OhLS4WA@mail.gmail.com>
References: <CAKQnq3z7MxUktnCy3Y5HTvwndu-CDXGutPt=WDui-v3tYTkrag@mail.gmail.com>
 <CAKQnq3xXjJN+m_OqYWpRcqBHXdwuB8GhsQDzbqFpjh3OhLS4WA@mail.gmail.com>
Message-ID: <10308365.CAlIcAeRIk@even-i700>

On dimanche 31 dÃ©cembre 2017 23:20:42 CET Gil Peleg wrote:
> Hello,
> 
> I am trying to convert a tif file to GeoPackage and build it's levels with
> the output format of the entire geopackage being either PNG or JPEG.
> 
> Using gdal_translate I am able to translate the tif to GeoPackage, and
> adding the TILE_FORMAT -co  option sets the compression of the entire
> output to either PNG or JPEG as I requested, this works really well.
> 
> The problem starts when using gdaladdo to build the levels, the new levels
> are created with partial PNG and partial JPEG (I assume it has something to
> do with the borders), and I can't find the option to override it, I tried
> the COMPRESS_OVERVIEW parameter but it seems to be valid only in tif.

You can use

gdaladdo -oo TILE_FORMAT=xxxx

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180101/f59462ca/attachment.html>

From athomas at thinkspatial.com.au  Mon Jan  1 17:50:08 2018
From: athomas at thinkspatial.com.au (Alan Thomas)
Date: Tue, 2 Jan 2018 12:50:08 +1100
Subject: [gdal-dev] Proposed updates to the GDAL feature style spec
Message-ID: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>

Hello all,

In updating the PDF vector feature writer, it became apparent that
there are some deficiencies in the GDAL feature style specification
document (http://www.gdal.org/ogr_feature_style.html). I thought this
would be a good opportunity to update the document in other ways as
well.

See the diff of the proposed changes:
https://github.com/ThinkSpatial/gdal/commit/dc212edfa9872779c94d4534bdfeecb4cfbf3aff#diff-8bfbe5b06a25ed97077e344069647884

I've made a large number of editorial and non-substantive changes to
make the spec easier to read. The proposed substantive changes are:

--

1. Remove the "DRAFT" notice at the top.

Rationale: The spec has seen few updates in the last 10 years, so it
seems unnecessary to call it a draft.

2. Remove some unnecessary prognostications about things that may be
added in future versions of the specification, like predefined color
names, more brush patterns, or the "gp" parameter for pens.

Rationale: The document is no longer a discussion paper but an
actively used specification. The string "gp" does not appear anywhere
in GDAL code.

3. Remove information that contradicts reality, such as "A dataset can
have a default style that applies to all features" (there is no such
capability) and the statement that OGRFeature::GetStyleString()
handles style table lookups (it does not).

4. Replace the wording "An empty style string means that the feature
directly inherits its style
from the layer it is in" with "An empty style string means that the
feature's style is unspecified".

Rationale: OGR layers do not have a style. Even if they did, the spec
doesn't say what would happen if the layer also lacked a style.

5. Clarify the usage of BRUSH fc and bc; change the definition of
ogr-brush-1 to mean a solid fill in the selected background color;
change the suggested default for BRUSH bc to transparent (#FFFFFF00).

Rationale: The spec is not explicit on how fc and bc are meant to
work. A true null brush seems unnecessary, as the BRUSH() style tool
can simply be omitted. If a null brush really is required, ogr-brush-1
will continue to act as a null brush by default, assuming software
uses a fully transparent color as a default for bc.

6. Explain more clearly what was intended by the SYMBOL o (outline
color) parameter.

7. Provide notes explaining the subtleties of font size and text anchor values.

Rationale: See <https://trac.osgeo.org/gdal/ticket/7185#comment:2>.
This is option 1, "Admit defeat", but leaving the door open to dealing
with the problem properly at a later date if necessary.

8. Clarify that backslash characters must be escaped in text values.

Rationale: Without this, it is impossible to indicate a text string
that ends with a backslash.

9. Clarify that a 0 or 1 value is expected after Boolean parameters
(bo, it, un, st).

Rationale: Contradictory usage in existing drivers (MITAB) vs
OGRStyleTool class.

10. Fix incorrect text stretch example (a stretch of 150 is 150% of
the usual width, not 150% wider).

11. Update sections 2.7 and 3 to match reality.

--

Please speak up if you have concerns about these changes, or if you
have suggestions for additional changes that could be made at the same
time.

Alan

-- 
Alan Thomas
Software Developer
ThinkSpatial
http://www.thinkspatial.com.au

From even.rouault at spatialys.com  Tue Jan  2 02:47:33 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 02 Jan 2018 11:47:33 +0100
Subject: [gdal-dev] Proposed updates to the GDAL feature style spec
In-Reply-To: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
Message-ID: <2061866.rixNzYiCjp@even-i700>

Alan,

Thanks a lot for this refresh ! I've just a single remark

> 5. [...] change the definition of
> ogr-brush-1 to mean a solid fill in the selected background color;
> change the suggested default for BRUSH bc to transparent (#FFFFFF00).
> 
> Rationale: The spec is not explicit on how fc and bc are meant to
> work. A true null brush seems unnecessary, as the BRUSH() style tool
> can simply be omitted. If a null brush really is required, ogr-brush-1
> will continue to act as a null brush by default, assuming software
> uses a fully transparent color as a default for bc.

I'd suggest that we add a rule so as to keep the current semantics: if ogr-brush-1 is used, then 
bc must be omitted (or set to a color with alpha=0). It would be confusing to have the 
possibility to have 2 ways to express a solid fill with either ogr-brush-0 + fc or ogr-brush-1 + 
bc. So people wanting a solid fill should use ogr-brush-0 (or don't specify it)

For example MapServer (likely the most comprehensive user of OGR feature style) has a 
hard-coded behaviour when encountering ogr-brush-1 where it completely ignores bc:
https://github.com/mapserver/mapserver/blob/branch-7-0/mapogr.cpp#L5132

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180102/386c3fe0/attachment.html>

From schwehr at gmail.com  Tue Jan  2 11:34:45 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 2 Jan 2018 11:34:45 -0800
Subject: [gdal-dev] r41166 broke the android build by using
	std::to_string
In-Reply-To: <CACmBxyvpJDqhd9TF0KuBqF_R7K2gdb5MGWB2TzZyrQ4AKC=iqw@mail.gmail.com>
References: <CACmBxyvpJDqhd9TF0KuBqF_R7K2gdb5MGWB2TzZyrQ4AKC=iqw@mail.gmail.com>
Message-ID: <CACmBxys4Ue9cjVpLp+zg+-9cJBuG=HKOqmv_Hzvnrj8=a-LJ8Q@mail.gmail.com>

+gdal-dev (oops!)

On Tue, Jan 2, 2018 at 11:34 AM, Kurt Schwehr <schwehr at gmail.com> wrote:

> Alan,
>
> https://trac.osgeo.org/gdal/changeset/41166 broke the android build.  e.g.
>
> https://travis-ci.org/OSGeo/gdal/jobs/324249526
>
> I tried upgrading the android build to r16b and fixed up the includes, but
> no luck.  Either the android build needs to switch from gcc to clang (which
> may fix the build) or you need to replace std::to_string with something
> else.  I'd vote for switching to clang, but I'm not up for doing that right
> now.
>
> My attempts to fix:
>
> https://trac.osgeo.org/gdal/changeset/41168
> https://trac.osgeo.org/gdal/changeset/41169
>
> -kurt
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180102/a0050739/attachment.html>

From cstutts at ara.com  Tue Jan  2 11:36:21 2018
From: cstutts at ara.com (CStutts)
Date: Tue, 2 Jan 2018 12:36:21 -0700 (MST)
Subject: [gdal-dev] gdalwarp Duplicated Pixels
Message-ID: <1514921781160-0.post@n6.nabble.com>

I'm trying to account for building parallax differences between images
collected at different viewing angles. When I use a DSM created from VRICON
data as my DEM source, I notice that building roof pixels are properly
shifted to the correct location; however, they're also left in their
original un-shifted positions. I believe this is due to these pixels
projecting to multiple locations (a higher location on a building, and a
lower location on the ground) based on the viewing angle.  If a pixel
projects to multiple locations, is there a way to have gdalwarp write a
no-data value at all locations except the highest (i.e. the unobscured
location)? Below is how I'm calling gdalwarp.gdalwarp -to RPC_DEM=vriconfile
-co COMPRESS=LZW -co INTERLEAVE=BAND -co TILED=YES -co BIGTIFF=YES -rpc -et
0 -overwrite -wo WRITE_FLUSH=YES -wo OPTIMIZE_SIZE=YES -multi -r near
-dstnodata 0 -wm 1024 -of GTIFF -t_srs EPSG:4326 infile outfile
<http://osgeo-org.1560.x6.nabble.com/file/t382357/Picture1.png> Thanks,Craig



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180102/742a0111/attachment.html>

From SGONG at mdacorporation.com  Tue Jan  2 13:02:37 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Tue, 2 Jan 2018 21:02:37 +0000
Subject: [gdal-dev] Sentinel-1 manifest.safe georeferencing wrong
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FFAD668@exbermd02.ds.mda.ca>

Hi list,



I see that there is a driver for Sentinel-1 manifest.safe and I tested it against the tough case of the SLC (complex).

These products consists of three HH-HV dual-pol images, they only overlap at the edges (see screen shot, when I load the *.tiff one by one in OpenEV viewer)



However when I load the manifest.safe, GDAL recognizes that it is Sentinel-1 but its georeferencing is wrong. Three images are overlapped almost 100%.

When I run the 'gdalinfo' the GCPs are only taken from the 3rd image (s1a-iw3-slc-vh-########-003.tiff).



Any ideas?



Also the new RCM is going to have the 'manifest.safe' file too. There could be a conflict, if file name 'manifest.safe' is used to identify the sensors.


Thanks,
Shawn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180102/10a54711/attachment.html>

From athomas at thinkspatial.com.au  Tue Jan  2 19:07:46 2018
From: athomas at thinkspatial.com.au (Alan Thomas)
Date: Wed, 3 Jan 2018 14:07:46 +1100
Subject: [gdal-dev] r41166 broke the android build by using
	std::to_string
In-Reply-To: <CACmBxys4Ue9cjVpLp+zg+-9cJBuG=HKOqmv_Hzvnrj8=a-LJ8Q@mail.gmail.com>
References: <CACmBxyvpJDqhd9TF0KuBqF_R7K2gdb5MGWB2TzZyrQ4AKC=iqw@mail.gmail.com>
 <CACmBxys4Ue9cjVpLp+zg+-9cJBuG=HKOqmv_Hzvnrj8=a-LJ8Q@mail.gmail.com>
Message-ID: <CALhO07xc2weG_DdXHtcbROLopo6Fo+LJCW4JbEWZP7bBo6Nuig@mail.gmail.com>

Sorry about this! I knew it was only a matter of time before I would
break the build.

In r41170 I have got rid of std::to_string for now. It's easy enough
to replace it with CPLString().Printf(...).

Alan

On 3 January 2018 at 06:34, Kurt Schwehr <schwehr at gmail.com> wrote:
> +gdal-dev (oops!)
>
> On Tue, Jan 2, 2018 at 11:34 AM, Kurt Schwehr <schwehr at gmail.com> wrote:
>>
>> Alan,
>>
>> https://trac.osgeo.org/gdal/changeset/41166 broke the android build.  e.g.
>>
>> https://travis-ci.org/OSGeo/gdal/jobs/324249526
>>
>> I tried upgrading the android build to r16b and fixed up the includes, but
>> no luck.  Either the android build needs to switch from gcc to clang (which
>> may fix the build) or you need to replace std::to_string with something
>> else.  I'd vote for switching to clang, but I'm not up for doing that right
>> now.
>>
>> My attempts to fix:
>>
>> https://trac.osgeo.org/gdal/changeset/41168
>> https://trac.osgeo.org/gdal/changeset/41169
>>
>> -kurt
>
>
>
>
> --
> --
> http://schwehr.org



-- 
Alan Thomas
Software Developer
ThinkSpatial
http://www.thinkspatial.com.au

From athomas at thinkspatial.com.au  Tue Jan  2 21:52:55 2018
From: athomas at thinkspatial.com.au (Alan Thomas)
Date: Wed, 3 Jan 2018 16:52:55 +1100
Subject: [gdal-dev] Proposed updates to the GDAL feature style spec
In-Reply-To: <2061866.rixNzYiCjp@even-i700>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
Message-ID: <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>

Thanks for the feedback, Even. If there is no other feedback in the
next few days I will merge the change, as well as an extra code fix to
implement change 8.

On 2 January 2018 at 21:47, Even Rouault <even.rouault at spatialys.com> wrote:
>> 5. [...] change the definition of
>> ogr-brush-1 to mean a solid fill in the selected background color;
>> change the suggested default for BRUSH bc to transparent
>> (#FFFFFF00).
>
> I'd suggest that we add a rule so as to keep the current semantics: if
> ogr-brush-1 is used, then bc must be omitted (or set to a color with
> alpha=0). It would be confusing to have the possibility to have 2 ways to
> express a solid fill with either ogr-brush-0 + fc or ogr-brush-1 + bc. So
> people wanting a solid fill should use ogr-brush-0 (or don't specify it)
>

I expected that this might be a problematic change. I'm happy to leave
ogr-brush-1 alone. If existing code is already special-casing
ogr-brush-1, then keeping the spec the way it is would be less
confusing.

Therefore line 492 will say "null brush (transparent - no fill,
irrespective of fc or bc values)".

Alan

-- 
Alan Thomas
Software Developer
ThinkSpatial
http://www.thinkspatial.com.au

From warmerdam at pobox.com  Tue Jan  2 23:13:28 2018
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 3 Jan 2018 02:13:28 -0500
Subject: [gdal-dev] Proposed updates to the GDAL feature style spec
In-Reply-To: <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
Message-ID: <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>

Alan,

I'm also supportive of your change while not having a strong opinion
on the ogr-brush-1 issue.  Thanks for showing some love to feature
styles *including* the specification.

Best regards,
Frank


On Wed, Jan 3, 2018 at 12:52 AM, Alan Thomas
<athomas at thinkspatial.com.au> wrote:
> Thanks for the feedback, Even. If there is no other feedback in the
> next few days I will merge the change, as well as an extra code fix to
> implement change 8.
>
> On 2 January 2018 at 21:47, Even Rouault <even.rouault at spatialys.com> wrote:
>>> 5. [...] change the definition of
>>> ogr-brush-1 to mean a solid fill in the selected background color;
>>> change the suggested default for BRUSH bc to transparent
>>> (#FFFFFF00).
>>
>> I'd suggest that we add a rule so as to keep the current semantics: if
>> ogr-brush-1 is used, then bc must be omitted (or set to a color with
>> alpha=0). It would be confusing to have the possibility to have 2 ways to
>> express a solid fill with either ogr-brush-0 + fc or ogr-brush-1 + bc. So
>> people wanting a solid fill should use ogr-brush-0 (or don't specify it)
>>
>
> I expected that this might be a problematic change. I'm happy to leave
> ogr-brush-1 alone. If existing code is already special-casing
> ogr-brush-1, then keeping the spec the way it is would be less
> confusing.
>
> Therefore line 492 will say "null brush (transparent - no fill,
> irrespective of fc or bc values)".
>
> Alan
>
> --
> Alan Thomas
> Software Developer
> ThinkSpatial
> http://www.thinkspatial.com.au
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows |
and watch the world go round - Rush    | Geospatial Software Developer

From even.rouault at spatialys.com  Wed Jan  3 01:38:40 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 03 Jan 2018 10:38:40 +0100
Subject: [gdal-dev] r41166 broke the android build by using
	std::to_string
In-Reply-To: <CALhO07xc2weG_DdXHtcbROLopo6Fo+LJCW4JbEWZP7bBo6Nuig@mail.gmail.com>
References: <CACmBxyvpJDqhd9TF0KuBqF_R7K2gdb5MGWB2TzZyrQ4AKC=iqw@mail.gmail.com>
 <CACmBxys4Ue9cjVpLp+zg+-9cJBuG=HKOqmv_Hzvnrj8=a-LJ8Q@mail.gmail.com>
 <CALhO07xc2weG_DdXHtcbROLopo6Fo+LJCW4JbEWZP7bBo6Nuig@mail.gmail.com>
Message-ID: <7772680.zZpSdCWhlf@even-i700>

On mercredi 3 janvier 2018 14:07:46 CET Alan Thomas wrote:
> Sorry about this! I knew it was only a matter of time before I would
> break the build.
> 
> In r41170 I have got rid of std::to_string for now. It's easy enough
> to replace it with CPLString().Printf(...).

I had already encountered this issue with the CAD driver. Switching to clang itself alone 
doesn't fix the issue, as libstdc++ was still used. It appears from https://
stackoverflow.com/questions/17950814/how-to-use-stdstoul-and-stdstoull-in-android/
18124627#18124627 that std::to_string() cannot be used with gnu libstdc++. I've thus 
changed the toolchain to use --stl=libc++, and that worked:
https://trac.osgeo.org/gdal/changeset/41173

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180103/f654b509/attachment.html>

From bishop.dev at gmail.com  Wed Jan  3 11:04:26 2018
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 3 Jan 2018 22:04:26 +0300
Subject: [gdal-dev]  CPLJSONDocument
In-Reply-To: <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
Message-ID: <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>

Hi everybody,

Happy new year and lot of success in 2018!

I would like to discuss my pull request 
https://github.com/OSGeo/gdal/pull/282

I created a thin wrapper around the json-c library which wide using in GDAL.

This is C++ interface which hides C memory management and provides nice 
API. The web or disk json documents reading chunk by chunk with progress 
indication also added.

In future, the json-c can be easily switch to something other without 
breaking the existing code.

The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be 
found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.

Is this ready to merge into the trunk? Any objections?

Best regards,
     Dmitry



From palmerjnz at gmail.com  Wed Jan  3 20:42:30 2018
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Thu, 4 Jan 2018 17:42:30 +1300
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
Message-ID: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>

I'm trying to compile ECW support for GDAL using the older 3.3 SDK for
MacOSX 10.13. I downloaded the source for libecwj2-3.3-2006-09-06.zip and
applied the cumulative patch : â
https://trac.osgeo.org/gdal/attachment/wiki/ECW/libecwj2-3.3.patch. I then
ran the following standard build commands:

./configure
make

But I get the following error:

/Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSDefs.h:430:28:
error: static declaration of 'wcsdup' follows non-static declaration
static NCS_INLINE wchar_t *wcsdup(const wchar_t *s1)
                           ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/wchar.h:199:10:
note: previous declaration is
      here
wchar_t *wcsdup(const wchar_t *) __OSX_AVAILABLE_STARTING(__MAC_10_7,
__IPHONE_4_3);
         ^
In file included from ../C/NCSEcw/NCSJP2/NCSJP2.cpp:24:
In file included from
/Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSEcw.h:73:
In file included from
/Users/jpalmer/Documents/Development/libecwj2/Source/include/ECW.h:137:
In file included from
/Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSUtil.h:86:
In file included from
/Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSPrefs.h:131:

Does anyone have any experience building on MacOSX, or have a handy patch
that fixes this?

Thanks :)
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/0486665a/attachment.html>

From SGONG at mdacorporation.com  Thu Jan  4 02:53:16 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Thu, 4 Jan 2018 10:53:16 +0000
Subject: [gdal-dev] Sentinel-1 manifest.safe georeferencing wrong
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC3FFAD668@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFAD668@exbermd02.ds.mda.ca>
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FFAD6E0@exbermd02.ds.mda.ca>

Attached is the three SLC images overlap only at the edges, when I load the *.tiff one-by-one in OpenEV viewer

Thanks,
Shawn
________________________________
From: Gong, Shawn
Sent: January-02-18 4:02 PM
To: gdal-dev at lists.osgeo.org
Subject: Sentinel-1 manifest.safe georeferencing wrong


Hi list,



I see that there is a driver for Sentinel-1 manifest.safe and I tested it against the tough case of the SLC (complex).

These products consists of three HH-HV dual-pol images, they only overlap at the edges (see screen shot, when I load the *.tiff one by one in OpenEV viewer)



However when I load the manifest.safe, GDAL recognizes that it is Sentinel-1 but its georeferencing is wrong. Three images are overlapped almost 100%.

When I run the 'gdalinfo' the GCPs are only taken from the 3rd image (s1a-iw3-slc-vh-########-003.tiff).



Any ideas?



Also the new RCM is going to have the 'manifest.safe' file too. There could be a conflict, if file name 'manifest.safe' is used to identify the sensors.


Thanks,
Shawn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/a00810bb/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: s1a.PNG
Type: image/png
Size: 53704 bytes
Desc: s1a.PNG
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/a00810bb/attachment-0001.png>

From SGONG at mdacorporation.com  Thu Jan  4 02:57:29 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Thu, 4 Jan 2018 10:57:29 +0000
Subject: [gdal-dev] Sentinel-1 SLC manifest.safe georeferencing wrong
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FFAD6EF@exbermd02.ds.mda.ca>

Hi list,



I see that there is a GDAL driver for Sentinel-1 'manifest.safe' and I tested it against the tough case of the SLC (complex).

These products consists of three HH-HV dual-pol images.  They only overlap at the edges, when I load the *.tiff one by one in OpenEV viewer (see attached screen shot)



However when I load the 'manifest.safe', GDAL recognizes that it is Sentinel-1 but its georeferencing is wrong. Three images are overlapped almost 100%.  When I run gdalinfo, the shown GCPs are only from the 3rd image (s1a-iw3-slc-vh-########-003.tiff).



Any ideas?



Also the new RCM is going to have the 'manifest.safe' file too. There could be a conflict, if file name 'manifest.safe' is used to identify the sensors.



Thanks,
Shawn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/f8861683/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: s1a.PNG
Type: image/png
Size: 53704 bytes
Desc: s1a.PNG
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/f8861683/attachment-0001.png>

From robertofig85 at gmail.com  Thu Jan  4 03:49:22 2018
From: robertofig85 at gmail.com (Roberto Ribeiro)
Date: Thu, 4 Jan 2018 09:49:22 -0200
Subject: [gdal-dev] Disk space problems when creating in-mem VRT
Message-ID: <CANTZQ+yzBfRWToSSzE81j=_gxYhFBbSWnNKAiCBjB2hVBF+vog@mail.gmail.com>

I'm trying to warp a pretty big raster (120601 x 162961) into a reprojected
VRT. I can do that just fine when writing the VRT to disk, it finishes
processing in about 15 seconds and generates a meager 3KB file.

However, when trying to do the same with an in-memory VRT, it accuses
unavailability of disk space:

>>> gdal.WarpOptions(format = 'VRT', dstSRS = 'EPSG:4674')
>>> vrt = gdal.Warp('/vsimem/dem_4674.vrt', '/vsimem/dem_31837')
ERROR 3: Free disk space available is 68643950592 bytes, whereas
84446749816 are at least necessary. You can disable this check by defining
the CHECK_DISK_FREE_SPACE configuration option to FALSE.

I'm finding this advice of flagging check_disk_free_space to false a bit
sketchy, so I'm reluctant to try it just like that. Is it really a problem
of disk space? I have 1.3TB of free space, and moreover, why would an
in-memory processing even require writing anything to disk? Is this related
to virtual memory? And if so, why does this behaviour not present itself
when writing the VRT to disk?

Specs:
GDAL 2.2.1 64-bits, python 2.7.13 64-bits, Windows 10 64-bits
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/53aebfa0/attachment.html>

From even.rouault at spatialys.com  Thu Jan  4 05:01:11 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 04 Jan 2018 14:01:11 +0100
Subject: [gdal-dev] Disk space problems when creating in-mem VRT
In-Reply-To: <CANTZQ+yzBfRWToSSzE81j=_gxYhFBbSWnNKAiCBjB2hVBF+vog@mail.gmail.com>
References: <CANTZQ+yzBfRWToSSzE81j=_gxYhFBbSWnNKAiCBjB2hVBF+vog@mail.gmail.com>
Message-ID: <2039977.5NJm5dFban@even-i700>

On jeudi 4 janvier 2018 09:49:22 CET Roberto Ribeiro wrote:
> I'm trying to warp a pretty big raster (120601 x 162961) into a reprojected
> VRT. I can do that just fine when writing the VRT to disk, it finishes
> processing in about 15 seconds and generates a meager 3KB file.
> 
> However, when trying to do the same with an in-memory VRT, it accuses
> 
> unavailability of disk space:
> >>> gdal.WarpOptions(format = 'VRT', dstSRS = 'EPSG:4674')
> >>> vrt = gdal.Warp('/vsimem/dem_4674.vrt', '/vsimem/dem_31837')

You don't use the options you defined. Try instead:

vrt = gdal.Warp('/vsimem/dem_4674.vrt', '/vsimem/dem_31837',
                          format = 'VRT', dstSRS = 'EPSG:4674')

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/08b79748/attachment.html>

From kassies at gmail.com  Thu Jan  4 08:18:59 2018
From: kassies at gmail.com (Rutger)
Date: Thu, 4 Jan 2018 09:18:59 -0700 (MST)
Subject: [gdal-dev] Prevent extrapolating with ReadAsArray when resampling
Message-ID: <1515082739927-0.post@n6.nabble.com>

Dear list,

I regularly use (and enjoy!) the resampling option when using the
ReadAsArray method of a Dataset. However, i noticed that in the case of
nodata values in the raster, the method extrapolates "into" those nodata
values. This is not always desirable in my case, especially when using any
resampling algorithms other than Bilinear or Nearest, since these can
overshoot significantly.

This made me wondering if there is a way to prevent this extrapolation? One
thing i noticed it that when the nodata value is non-numerical, like NaN,
there is a lot less extrapolation (eg more nodata values returned). That
could be used a workaround, but it not convenient to map numerical nodata to
NaN values before reading the input. 

In the process of exploring the behavior, i also encountered some issues
(perhaps a bug?) when using Lanczos in combination with certain datasets and
certain output grids. This happened especially when the output size is an
uneven factor of the input size, like (buf_xsize=xsize*3, buf_ysize=ysize*3)
or (buf_xsize=xs*5, buf_ysize=ys*5) etc.

Here is a notebook showing what i did with a linearly increasing grid:
https://gist.github.com/RutgerK/30fbd03d9b2ab79861eedfbb95064732

And a random grid:
https://gist.github.com/RutgerK/bdbd6c124224cf49961082e1620ce604

Regards,
Rutger





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jdaniel at etresoft.com  Thu Jan  4 08:27:41 2018
From: jdaniel at etresoft.com (John Daniel)
Date: Thu, 4 Jan 2018 16:27:41 +0000
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
In-Reply-To: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>
References: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>
Message-ID: <A7C48776-62E8-4987-9CCC-BDB2153729C5@etresoft.com>

Sorry if this is a dupe. I tend to screw up my From: address when responding to the list...

Hello Jeremy,
I do have a handy patch for this library. I will send it to you in a private e-mail. It isnât a small patch so I donât think I should put it on the mailing list.

I just tested it on High Sierra and it seems to build correctly. I just built the library. I didnât try to use it or link it with GDAL. That brings me to my next question. Why do you want this old thing? It is hard to build, has questionable licensing, and there are better alternatives available. If you just need JPEG-2000 support, I would recommend the OpenJPEG project.

I have a set of Mac-specific build scripts at: (https://github.com/etresoft/OS-GIS). I havenât run them for a while, but I will soon be getting back into this project. ECW is not included in this project.

John Daniel
Etresoft, Inc.

On Jan 3, 2018, at 11:42 PM, Jeremy Palmer <palmerjnz at gmail.com<mailto:palmerjnz at gmail.com>> wrote:

I'm trying to compile ECW support for GDAL using the older 3.3 SDK for MacOSX 10.13. I downloaded the source for libecwj2-3.3-2006-09-06.zip and applied the cumulative patch : âhttps://trac.osgeo.org/gdal/attachment/wiki/ECW/libecwj2-3.3.patch. I then ran the following standard build commands:

./configure
make

But I get the following error:

/Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSDefs.h:430:28: error: static declaration of 'wcsdup' follows non-static declaration
static NCS_INLINE wchar_t *wcsdup(const wchar_t *s1)
                           ^
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/wchar.h:199:10: note: previous declaration is
      here
wchar_t *wcsdup(const wchar_t *) __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);
         ^
In file included from ../C/NCSEcw/NCSJP2/NCSJP2.cpp:24:
In file included from /Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSEcw.h:73:
In file included from /Users/jpalmer/Documents/Development/libecwj2/Source/include/ECW.h:137:
In file included from /Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSUtil.h:86:
In file included from /Users/jpalmer/Documents/Development/libecwj2/Source/include/NCSPrefs.h:131:

Does anyone have any experience building on MacOSX, or have a handy patch that fixes this?

Thanks :)
Jeremy

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev



John Daniel
Etresoft, Inc.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180104/80e8a0a0/attachment-0001.html>

From palmerjnz at gmail.com  Thu Jan  4 21:32:07 2018
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Fri, 5 Jan 2018 18:32:07 +1300
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
In-Reply-To: <24113977-6BB1-4F65-A20C-FD9D001D998E@me.com>
References: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>
 <24113977-6BB1-4F65-A20C-FD9D001D998E@me.com>
Message-ID: <CAA5WJY=svh=neANY6e3DioaL42x9hHe66Ce-5W=PJGyoNiuz9Q@mail.gmail.com>

Hi John,

On Fri, Jan 5, 2018 at 5:22 AM, John Daniel <etresoft at me.com> wrote:

> Hello Jeremy,
> I do have a handy patch for this library. I will send it to you in a
> private e-mail. It isnât a small patch so I donât think I should put it on
> the mailing list.
>

Thanks so much for the patch. For reference I have placed the patch here:
https://gist.github.com/palmerj/54fa389c4e60fa7b9f1d5ceea7ac3359


>
> I just tested it on High Sierra and it seems to build correctly. I just
> built the library. I didnât try to use it or link it with GDAL. That brings
> me to my next question. Why do you want this old thing? It is hard to
> build, has questionable licensing, and there are better alternatives
> available. If you just need JPEG-2000 support, I would recommend the
> OpenJPEG project.
>

We have a need to read and write ECW files for a few small dev tasks. If it
was a read only task then I would use the newer version of the read only
ECW libs. I agree that open source JPEG-2000 options are becoming much
better, and would rather not touch the ECW format. In time I think we can
move to this.

Cheers,
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/b12aa8d2/attachment.html>

From patrick.valsecchi at camptocamp.com  Thu Jan  4 23:24:16 2018
From: patrick.valsecchi at camptocamp.com (Patrick Valsecchi)
Date: Fri, 5 Jan 2018 08:24:16 +0100
Subject: [gdal-dev] /vsicurl caching behavior
Message-ID: <CAKOK4jhHbM=havEXJ7oqgBc7JU-nDWOJM4u89QVeB2L6Mkdvvg@mail.gmail.com>

Hi,

I've been looking at the performance of GDAL in the context of MapServer
and QGIS accessing GeoTiff on a HTTP server (S3, mostly).

Doing that, I had a good look at the cpl_vsil_curl.cpp file and the
surroundings and that raised a few questions/concerns:

1) There are a lot of knobs that can be used to tune the thing that are not
documented. For example CPL_VSIL_CURL_USE_CACHE. Is it on purpose?

2) The implementation of Add/GetRegionToCacheDisk is quite crude. Scanning
the file sequentially to find the region is not very efficient, I guess.
Are there any plan to improve that? Maybe a bit less crude with splitting
the file in two: one that contains the index (hash+offset+size) and the
other one the content. That way, the scanning of the index will be faster
(contiguous in the disk and in cache). But that requires the usage of flock
and its equivalent in other OSes.

3) The implementation of GetRegionFromCacheDisk has some efficiency
problems. If the region is found, it calls AddRegion which in turn will
call AddRegionToCacheDisk just to re-scan the file; where it will find the
one GetRegionFromCacheDisk just searched and not add it one more time. So
we scan sequentially the file twice.

4) There is no limit to the gdal_vsicurl_cache.bin file size. This makes
this caching not very usable: risk of running out of disk, increasing
slowness, no refresh of the data after some time.

5) There is no way to specify the location of gdal_vsicurl_cache.bin unless
one does a chdir before calling GDAL.

6) If VSI_CACHE is enabled the data is cached twice in memory (papsRegions
and VSICachedFile). Is it wanted?

7) If the file's content is modified, it's the total mess. We'll end up
having portions of the file having the old data while the rest has the new
data. I'm quite sure the GeoTiff we end up with won't be very valid.

8) In the case discussed in 7), CPL_VSIL_CURL_NON_CACHED will just purge
the data from 1 the 3 caches: papsRegions. The vsil_cache and the disk will
still cache the content.

Apart from that, I'm very impressed by the performance GDAL can get when
accessing the data through HTTP and how easy it is to understand the code.
Kudos!

What do you guys think?

Thanks and CU
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/7b1362b2/attachment.html>

From even.rouault at spatialys.com  Fri Jan  5 03:21:12 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 05 Jan 2018 12:21:12 +0100
Subject: [gdal-dev] /vsicurl caching behavior
In-Reply-To: <CAKOK4jhHbM=havEXJ7oqgBc7JU-nDWOJM4u89QVeB2L6Mkdvvg@mail.gmail.com>
References: <CAKOK4jhHbM=havEXJ7oqgBc7JU-nDWOJM4u89QVeB2L6Mkdvvg@mail.gmail.com>
Message-ID: <60609642.FKaK7D3vqr@even-i700>

Hi,

> 1) There are a lot of knobs that can be used to tune the thing that are not
> documented. For example CPL_VSIL_CURL_USE_CACHE. Is it on purpose?

Yes, the disk cache is an experiment that isn't used anywhere (from what I know) and likely 
not in a finished state as you noticed in your below points which are all valid and should be 
addressed if someone wanted to make it production ready.

> 
> 6) If VSI_CACHE is enabled the data is cached twice in memory (papsRegions
> and VSICachedFile). Is it wanted?

The scope of the caches are not the same. papsRegions is a global cache shared by all /
vsicurl/ handles, and persistant (in memory) on their closing (so that if the same filename is 
closed and re-opened in sequence, already read parts can be reused), whereas VSICachedFile 
is associated with a single file handle.
I guess there could be some optimizations to avoid those duplications, but that could 
complicate substantially the code which is already non trivial.

> 
> 7) If the file's content is modified, it's the total mess. We'll end up
> having portions of the file having the old data while the rest has the new
> data. I'm quite sure the GeoTiff we end up with won't be very valid.

Indeed. But the mess would also happen with no caching mechanism if a file is modified while 
being read. Even for a local file, GDAL using glibc FILE buffering API, so even if you modify 
some portions of a GeoTIFF that haven't been read yet, but you already read closing regions, 
there's a chance, you'll read old data in part.

> 
> 8) In the case discussed in 7), CPL_VSIL_CURL_NON_CACHED will just purge
> the data from 1 the 3 caches: papsRegions. The vsil_cache and the disk will
> still cache the content.

CPL_VSIL_CURL_NON_CACHED avoids the content of a file to be preserved in the 
papsRegion cache when a file handle is closed and re-opened. And VSICachedFile is only valid 
during the lifetime of the file handle. So I don't think there's an issue there. Perhaps the 
naming CPL_VSIL_CURL_NON_CACHED is a bit misleading: there's always some cache 
(otherwise /vsicurl performance would be just too horrible), it is just that it doesn't survive 
file closing.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/712d3da0/attachment.html>

From patrick.valsecchi at camptocamp.com  Fri Jan  5 04:42:06 2018
From: patrick.valsecchi at camptocamp.com (Patrick Valsecchi)
Date: Fri, 5 Jan 2018 13:42:06 +0100
Subject: [gdal-dev] /vsicurl caching behavior
In-Reply-To: <60609642.FKaK7D3vqr@even-i700>
References: <CAKOK4jhHbM=havEXJ7oqgBc7JU-nDWOJM4u89QVeB2L6Mkdvvg@mail.gmail.com>
 <60609642.FKaK7D3vqr@even-i700>
Message-ID: <CAKOK4jgmq-g253XcNu-ZvhLcR4OC4cQDRb_gYmANny3064hRHg@mail.gmail.com>

Hi Even,

Long time no see!

On Fri, Jan 5, 2018 at 12:21 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> > 8) In the case discussed in 7), CPL_VSIL_CURL_NON_CACHED will just purge
>
> > the data from 1 the 3 caches: papsRegions. The vsil_cache and the disk
> will
>
> > still cache the content.
>
>
>
> CPL_VSIL_CURL_NON_CACHED avoids the content of a file to be preserved in
> the papsRegion cache when a file handle is closed and re-opened. And
> VSICachedFile is only valid during the lifetime of the file handle. So I
> don't think there's an issue there. Perhaps the naming
> CPL_VSIL_CURL_NON_CACHED is a bit misleading: there's always some cache
> (otherwise /vsicurl performance would be just too horrible), it is just
> that it doesn't survive file closing.
>
>
OK, I understand now the VSICachedFile lifecycle and it makes sense. But
then the disk cache should not be used at all for files in
the CPL_VSIL_CURL_NON_CACHED variable.

I'll try to find some happy hacking time (or client funding, ideally) to
improve the disk caching. What is the official GDAL procedure for PRs? I
see a few in the github repo, but the doc says the source is located in SVN.

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/8a560389/attachment-0001.html>

From even.rouault at spatialys.com  Fri Jan  5 04:59:49 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 05 Jan 2018 13:59:49 +0100
Subject: [gdal-dev] /vsicurl caching behavior
In-Reply-To: <CAKOK4jgmq-g253XcNu-ZvhLcR4OC4cQDRb_gYmANny3064hRHg@mail.gmail.com>
References: <CAKOK4jhHbM=havEXJ7oqgBc7JU-nDWOJM4u89QVeB2L6Mkdvvg@mail.gmail.com>
 <60609642.FKaK7D3vqr@even-i700>
 <CAKOK4jgmq-g253XcNu-ZvhLcR4OC4cQDRb_gYmANny3064hRHg@mail.gmail.com>
Message-ID: <2435626.k25fYrlKF8@even-i700>

> OK, I understand now the VSICachedFile lifecycle and it makes sense. But
> then the disk cache should not be used at all for files in
> the CPL_VSIL_CURL_NON_CACHED variable.

Indeed. The cache disk code hasn't been touched/tested in years, and 
CPL_VSIL_CURL_NON_CACHED was added afterwards.

> 
> I'll try to find some happy hacking time (or client funding, ideally) to
> improve the disk caching. What is the official GDAL procedure for PRs? I
> see a few in the github repo, but the doc says the source is located in SVN.

The master is still in SVN (we will likely switch to full github workflow at some point) but 
contributions being sent as pull request against the github mirror make it easier for the 
person reviewing & merging them.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/541fb06b/attachment.html>

From even.rouault at spatialys.com  Fri Jan  5 05:12:02 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 05 Jan 2018 14:12:02 +0100
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
In-Reply-To: <CAA5WJY=svh=neANY6e3DioaL42x9hHe66Ce-5W=PJGyoNiuz9Q@mail.gmail.com>
References: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>
 <24113977-6BB1-4F65-A20C-FD9D001D998E@me.com>
 <CAA5WJY=svh=neANY6e3DioaL42x9hHe66Ce-5W=PJGyoNiuz9Q@mail.gmail.com>
Message-ID: <1869550.aosVX5fkT6@even-i700>

Hi Jeremy,

> https://gist.github.com/palmerj/54fa389c4e60fa7b9f1d5ceea7ac3359

Note that https://trac.osgeo.org/gdal/wiki/ECW references
https://trac.osgeo.org/gdal/attachment/wiki/ECW/libecwj2-3.3.patch which is the 
cumlated patch of a number of patches that have been collected over the years (for 
Linux builds)

I see that your gist has some of the fixes of libecwj2-3.3.patch, and a lot more (but 
some are not so obvious without digging more in the code)

This ECW situation is such a mess. Sigh

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/7d2d5864/attachment.html>

From even.rouault at spatialys.com  Fri Jan  5 05:48:54 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 05 Jan 2018 14:48:54 +0100
Subject: [gdal-dev] Prevent extrapolating with ReadAsArray when
	resampling
In-Reply-To: <1515082739927-0.post@n6.nabble.com>
References: <1515082739927-0.post@n6.nabble.com>
Message-ID: <116554371.A1Bp1XppNd@even-i700>

Rutger,

ReadAsArray() / IRasterIO() with non-nearest resampling use the interpolation code of 
overview building (except for Lanczos where it uses the warping code), which was of course 
targetted at downsampling rather than upsampling. Nodata is taken into account when 
mixing together source pixels for a target pixel (those pixels are assigned a zero weight in 
convolution computations), but it seems that we should likely skip entirely a target pixel if 
the center source pixel corresponding to it is nodata, so that nodata areas do not fade 
away (which is done in the warping code). What surprises me is that you get different 
results depending on the nodata value (I could also see that)

Regarding Lanczos, might be a bug specific to it indeed. Didn't look.

Perhaps file this as a ticket about this.

Even

> Dear list,
> 
> I regularly use (and enjoy!) the resampling option when using the
> ReadAsArray method of a Dataset. However, i noticed that in the case of
> nodata values in the raster, the method extrapolates "into" those nodata
> values. This is not always desirable in my case, especially when using any
> resampling algorithms other than Bilinear or Nearest, since these can
> overshoot significantly.
> 
> This made me wondering if there is a way to prevent this extrapolation? One
> thing i noticed it that when the nodata value is non-numerical, like NaN,
> there is a lot less extrapolation (eg more nodata values returned). That
> could be used a workaround, but it not convenient to map numerical nodata to
> NaN values before reading the input.
> 
> In the process of exploring the behavior, i also encountered some issues
> (perhaps a bug?) when using Lanczos in combination with certain datasets and
> certain output grids. This happened especially when the output size is an
> uneven factor of the input size, like (buf_xsize=xsize*3,
> buf_ysize=ysize*3) or (buf_xsize=xs*5, buf_ysize=ys*5) etc.
> 
> Here is a notebook showing what i did with a linearly increasing grid:
> https://gist.github.com/RutgerK/30fbd03d9b2ab79861eedfbb95064732
> 
> And a random grid:
> https://gist.github.com/RutgerK/bdbd6c124224cf49961082e1620ce604
> 
> Regards,
> Rutger
> 
> 
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/d2886b36/attachment.html>

From even.rouault at spatialys.com  Fri Jan  5 06:13:50 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 05 Jan 2018 15:13:50 +0100
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
Message-ID: <2483398.HQNLijoNCD@even-i700>

Dmitry,

> Is this ready to merge into the trunk? Any objections?

I did some review of your code. If nobody has extra remarks in the 
next days, just merge it.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/87506598/attachment-0001.html>

From sean at mapbox.com  Fri Jan  5 07:44:36 2018
From: sean at mapbox.com (Sean Gillies)
Date: Fri, 5 Jan 2018 08:44:36 -0700
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
Message-ID: <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>

Hi Dmitry,

I scanned the PR and it seems reasonable to me. I'm barely a C++ programmer
at all and it's clear to me, more clear than before. That said, I'm not a
fan of wrapping things that could be replaced. Have you looked into whether
a more performant C++ JSON library could be used? I haven't run the
benchmarks, but json-c compares pretty poorly to others in
https://github.com/miloyip/nativejson-benchmark.


On Wed, Jan 3, 2018 at 12:04 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
wrote:

> Hi everybody,
>
> Happy new year and lot of success in 2018!
>
> I would like to discuss my pull request https://github.com/OSGeo/gdal/
> pull/282
>
> I created a thin wrapper around the json-c library which wide using in
> GDAL.
>
> This is C++ interface which hides C memory management and provides nice
> API. The web or disk json documents reading chunk by chunk with progress
> indication also added.
>
> In future, the json-c can be easily switch to something other without
> breaking the existing code.
>
> The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be
> found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.
>
> Is this ready to merge into the trunk? Any objections?
>
> Best regards,
>     Dmitry
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/4087bbe8/attachment.html>

From schwehr at gmail.com  Fri Jan  5 07:54:18 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 5 Jan 2018 07:54:18 -0800
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
Message-ID: <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>

+1 for wrapping the old C code in some cleaner abstractions!

But +10 for switching to a from the ground up C++ JSON library unless there
are clear reasons for a core C library (I don't think there are)

If we are talking about this kind of code, there are several things that
have bugged me in general about GDAL for a long time.

* Passing char *psz yada all over the place in pure C++ code.  A const
std::string is usually not a noticeable expense and is a lot safer
* CPLString when std::string will do just fine.  And we can write free
functions to operate on strings.  I'm generally bothered by subclassing of
std::string as CPLString.  After reading large amounts of C++ code, I think
it adds more confusion than it ever helps over having clean free
functions.  Interop and analysis with CPLString's is no fun.

https://stackoverflow.com/questions/6006860/why-should-one-not-derive-from-c-std-string-class

-kurt

On Fri, Jan 5, 2018 at 7:44 AM, Sean Gillies <sean at mapbox.com> wrote:

> Hi Dmitry,
>
> I scanned the PR and it seems reasonable to me. I'm barely a C++
> programmer at all and it's clear to me, more clear than before. That said,
> I'm not a fan of wrapping things that could be replaced. Have you looked
> into whether a more performant C++ JSON library could be used? I haven't
> run the benchmarks, but json-c compares pretty poorly to others in
> https://github.com/miloyip/nativejson-benchmark.
>
>
> On Wed, Jan 3, 2018 at 12:04 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
> wrote:
>
>> Hi everybody,
>>
>> Happy new year and lot of success in 2018!
>>
>> I would like to discuss my pull request https://github.com/OSGeo/gdal/
>> pull/282
>>
>> I created a thin wrapper around the json-c library which wide using in
>> GDAL.
>>
>> This is C++ interface which hides C memory management and provides nice
>> API. The web or disk json documents reading chunk by chunk with progress
>> indication also added.
>>
>> In future, the json-c can be easily switch to something other without
>> breaking the existing code.
>>
>> The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be
>> found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.
>>
>> Is this ready to merge into the trunk? Any objections?
>>
>> Best regards,
>>     Dmitry
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
> --
> Sean Gillies
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/3dadbae0/attachment.html>

From schwehr at gmail.com  Fri Jan  5 08:05:25 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 5 Jan 2018 08:05:25 -0800
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
Message-ID: <CACmBxyu3bOwdsESn+Nsdwcn8Gp7kgGpkEAnfg17wEadYAVgC=Q@mail.gmail.com>

I think the more important factors than speed for a C++ lib are: security,
stability, maintainability, and memory usage (low stack usage and
constrainable heap).

I really don't want to have us go through yet more piles of fuzzer bugs for
a library we depend on.  It would be nice to have that already done well by
the lib.

On Fri, Jan 5, 2018 at 7:54 AM, Kurt Schwehr <schwehr at gmail.com> wrote:

> +1 for wrapping the old C code in some cleaner abstractions!
>
> But +10 for switching to a from the ground up C++ JSON library unless
> there are clear reasons for a core C library (I don't think there are)
>
> If we are talking about this kind of code, there are several things that
> have bugged me in general about GDAL for a long time.
>
> * Passing char *psz yada all over the place in pure C++ code.  A const
> std::string is usually not a noticeable expense and is a lot safer
> * CPLString when std::string will do just fine.  And we can write free
> functions to operate on strings.  I'm generally bothered by subclassing of
> std::string as CPLString.  After reading large amounts of C++ code, I think
> it adds more confusion than it ever helps over having clean free
> functions.  Interop and analysis with CPLString's is no fun.
>   https://stackoverflow.com/questions/6006860/why-should-
> one-not-derive-from-c-std-string-class
>
> -kurt
>
> On Fri, Jan 5, 2018 at 7:44 AM, Sean Gillies <sean at mapbox.com> wrote:
>
>> Hi Dmitry,
>>
>> I scanned the PR and it seems reasonable to me. I'm barely a C++
>> programmer at all and it's clear to me, more clear than before. That said,
>> I'm not a fan of wrapping things that could be replaced. Have you looked
>> into whether a more performant C++ JSON library could be used? I haven't
>> run the benchmarks, but json-c compares pretty poorly to others in
>> https://github.com/miloyip/nativejson-benchmark.
>>
>>
>> On Wed, Jan 3, 2018 at 12:04 PM, Dmitry Baryshnikov <bishop.dev at gmail.com
>> > wrote:
>>
>>> Hi everybody,
>>>
>>> Happy new year and lot of success in 2018!
>>>
>>> I would like to discuss my pull request https://github.com/OSGeo/gdal/
>>> pull/282
>>>
>>> I created a thin wrapper around the json-c library which wide using in
>>> GDAL.
>>>
>>> This is C++ interface which hides C memory management and provides nice
>>> API. The web or disk json documents reading chunk by chunk with progress
>>> indication also added.
>>>
>>> In future, the json-c can be easily switch to something other without
>>> breaking the existing code.
>>>
>>> The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be
>>> found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.
>>>
>>> Is this ready to merge into the trunk? Any objections?
>>>
>>> Best regards,
>>>     Dmitry
>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/053d45b6/attachment.html>

From matt.gregory at oregonstate.edu  Fri Jan  5 09:51:26 2018
From: matt.gregory at oregonstate.edu (Gregory, Matthew)
Date: Fri, 5 Jan 2018 17:51:26 +0000
Subject: [gdal-dev] python 2.7 bindings with trunk (2.3)
Message-ID: <7C48E40C135D314BA03D6471A6E3897801153D99DC@EX1.oregonstate.edu>

Hi all,

I'm sure to show my ignorance here, but I've been periodically building both the 2.2 and trunk branches on Windows using MSVC for Python 2.7 (as I think the compiler version needs to match how Python itself was built [MSC v.1500 32 bit (Intel)]).  With the recent update in trunk requiring C++11, MSVC for Python 2.7 now errors out:

  c:\foss4g\gdal_trunk\gdal\port\cpl_port.h(187) : fatal error C1189:
    #error :  Must have C++11 or newer.

Is there a way to compile the GDAL python bindings with still using MSVC for Python 2.7 -or- if I update to MSVC 14, can I still build bindings that will work with 2.7?

Sorry if I've missed discussion around this topic.  I reviewed RFC 68, but didn't see any reference to this issue.

thanks, matt

From even.rouault at spatialys.com  Fri Jan  5 10:37:57 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 05 Jan 2018 19:37:57 +0100
Subject: [gdal-dev] python 2.7 bindings with trunk (2.3)
In-Reply-To: <7C48E40C135D314BA03D6471A6E3897801153D99DC@EX1.oregonstate.edu>
References: <7C48E40C135D314BA03D6471A6E3897801153D99DC@EX1.oregonstate.edu>
Message-ID: <1618919.Vy27yd4zoL@even-i700>

On vendredi 5 janvier 2018 17:51:26 CET Gregory, Matthew wrote:
> Hi all,
> 
> I'm sure to show my ignorance here, but I've been periodically building both
> the 2.2 and trunk branches on Windows using MSVC for Python 2.7 (as I think
> the compiler version needs to match how Python itself was built [MSC v.1500
> 32 bit (Intel)]).  With the recent update in trunk requiring C++11, MSVC
> for Python 2.7 now errors out:
> 
>   c:\foss4g\gdal_trunk\gdal\port\cpl_port.h(187) : fatal error C1189:
>     #error :  Must have C++11 or newer.
> 
> Is there a way to compile the GDAL python bindings with still using MSVC for
> Python 2.7 -or- if I update to MSVC 14, can I still build bindings that
> will work with 2.7?

Define
 SET DISTUTILS_USE_SDK=1
 SET MSSdk=1

so that the active MSVC version is used when building the Python bindings. This is what is 
used in gisinternals builds & appveyor builds

We should likely document that somewhere appropriate. Perhaps in
https://trac.osgeo.org/gdal/wiki/BuildingOnWindows

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/2eba2f6d/attachment.html>

From jdaniel at etresoft.com  Fri Jan  5 10:45:47 2018
From: jdaniel at etresoft.com (John Daniel)
Date: Fri, 5 Jan 2018 18:45:47 +0000
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
In-Reply-To: <1869550.aosVX5fkT6@even-i700>
References: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>
 <24113977-6BB1-4F65-A20C-FD9D001D998E@me.com>
 <CAA5WJY=svh=neANY6e3DioaL42x9hHe66Ce-5W=PJGyoNiuz9Q@mail.gmail.com>
 <1869550.aosVX5fkT6@even-i700>
Message-ID: <97D40045-4130-40C1-92B7-A7D9AA16C840@etresoft.com>

As I explained to Jeremy in an e-mail, I made those changes years ago. I donât remember the exact details. I do know that those are all specific to OS X, and specifically to OS X and the Xcode toolchain circa 2011 (maybe?). Things are much different today. I must have needed those changes to make it work on the Mac. I did use this code to process a fair amount of JPEG2000-encoded NITF data. It seemed to work fine at the time.

However, I never applied these changes to any production Linux builds. They were only for the Mac and I only used the Mac for development. I would not recommend using this patch for any real data.

As soon as OpenJPEG became viable, I switched to that. Plus that ECW code has questionable licensing - real mess. Unfortunately, Jeremy has actual ECW files. I never had any of those.

However, you could use this patch to get a functional GDAL build with ECW and run tests. Then try to back out some of the more mysterious changes. That is always easier to do when you have it running and testable.

John Daniel
Etresoft, Inc.

On Jan 5, 2018, at 8:12 AM, Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> wrote:

Hi Jeremy,



> https://gist.github.com/palmerj/54fa389c4e60fa7b9f1d5ceea7ac3359



Note that https://trac.osgeo.org/gdal/wiki/ECW references
https://trac.osgeo.org/gdal/attachment/wiki/ECW/libecwj2-3.3.patch which is the cumlated patch of a number of patches that have been collected over the years (for Linux builds)



I see that your gist has some of the fixes of libecwj2-3.3.patch, and a lot more (but some are not so obvious without digging more in the code)



This ECW situation is such a mess. Sigh



Even



--
Spatialys - Geospatial professional services
http://www.spatialys.com<http://www.spatialys.com/>
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/93c78b34/attachment-0001.html>

From palmerjnz at gmail.com  Fri Jan  5 11:57:38 2018
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Sat, 6 Jan 2018 08:57:38 +1300
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
In-Reply-To: <1869550.aosVX5fkT6@even-i700>
References: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>
 <24113977-6BB1-4F65-A20C-FD9D001D998E@me.com>
 <CAA5WJY=svh=neANY6e3DioaL42x9hHe66Ce-5W=PJGyoNiuz9Q@mail.gmail.com>
 <1869550.aosVX5fkT6@even-i700>
Message-ID: <CAA5WJY=AP4qHarKBVD-_CoJFWnZcbp3Jdedajyn7ixSnk1sfcg@mail.gmail.com>

Hi Even,

Happy New Year :)

On Sat, Jan 6, 2018 at 2:12 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Jeremy,
>
>
>
> I see that your gist has some of the fixes of libecwj2-3.3.patch, and a
> lot more (but some are not so obvious without digging more in the code)
>

I now have an internal git repo with both the libecwj2-3.3.patch and a
selection of the MacOSX fixes provided by John. Once I have done further
real world testing I can provide a new accumulative patch.

Also do you think
https://trac.osgeo.org/gdal/browser/branches/2.2/autotest/gdrivers/ecw.py
is setup to test the 3.3 SDK nicely? If so I can verify the patch on LINUX
and MacOSX with that.

Cheers
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180106/65f45200/attachment.html>

From bishop.dev at gmail.com  Fri Jan  5 12:19:05 2018
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Fri, 5 Jan 2018 23:19:05 +0300
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <CACmBxyu3bOwdsESn+Nsdwcn8Gp7kgGpkEAnfg17wEadYAVgC=Q@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
 <CACmBxyu3bOwdsESn+Nsdwcn8Gp7kgGpkEAnfg17wEadYAVgC=Q@mail.gmail.com>
Message-ID: <80e7c111-8cc3-36d5-5536-b6d8588cfdf4@gmail.com>

Hi Sean,

First of all I agreed with Kurt. Json-c is GDAL internal library and had 
inspected by fuzzer.

Also json-c widely used in GDAL:

gdal/gcore
gdal/ogr/ogrsf_frmts/carto
gdal/ogr/ogrsf_frmts/amigocloud
gdal/ogr/ogrsf_frmts/cloudant
gdal/ogr/ogrsf_frmts/plscenes
gdal/ogr/ogrsf_frmts/geojson
gdal/ogr/ogrsf_frmts/gmlas
gdal/ogr/ogrsf_frmts/elastic
gdal/ogr/ogrsf_frmts/couchdb
gdal/ogr
gdal/frmts/rda
gdal/frmts/arg
gdal/frmts/mbtiles
gdal/frmts/plmosaic
gdal/frmts/pds

It's big work to replace json-c in all code smoothly.

Best regards,
     Dmitry

05.01.2018 19:05, Kurt Schwehr Ð¿Ð¸ÑÐµÑ:
> I think the more important factors than speed for a C++ lib are: security,
> stability, maintainability, and memory usage (low stack usage and
> constrainable heap).
>
> I really don't want to have us go through yet more piles of fuzzer bugs for
> a library we depend on.  It would be nice to have that already done well by
> the lib.
>
> On Fri, Jan 5, 2018 at 7:54 AM, Kurt Schwehr <schwehr at gmail.com> wrote:
>
>> +1 for wrapping the old C code in some cleaner abstractions!
>>
>> But +10 for switching to a from the ground up C++ JSON library unless
>> there are clear reasons for a core C library (I don't think there are)
>>
>> If we are talking about this kind of code, there are several things that
>> have bugged me in general about GDAL for a long time.
>>
>> * Passing char *psz yada all over the place in pure C++ code.  A const
>> std::string is usually not a noticeable expense and is a lot safer
>> * CPLString when std::string will do just fine.  And we can write free
>> functions to operate on strings.  I'm generally bothered by subclassing of
>> std::string as CPLString.  After reading large amounts of C++ code, I think
>> it adds more confusion than it ever helps over having clean free
>> functions.  Interop and analysis with CPLString's is no fun.
>>    https://stackoverflow.com/questions/6006860/why-should-
>> one-not-derive-from-c-std-string-class
>>
>> -kurt
>>
>> On Fri, Jan 5, 2018 at 7:44 AM, Sean Gillies <sean at mapbox.com> wrote:
>>
>>> Hi Dmitry,
>>>
>>> I scanned the PR and it seems reasonable to me. I'm barely a C++
>>> programmer at all and it's clear to me, more clear than before. That said,
>>> I'm not a fan of wrapping things that could be replaced. Have you looked
>>> into whether a more performant C++ JSON library could be used? I haven't
>>> run the benchmarks, but json-c compares pretty poorly to others in
>>> https://github.com/miloyip/nativejson-benchmark.
>>>
>>>
>>> On Wed, Jan 3, 2018 at 12:04 PM, Dmitry Baryshnikov <bishop.dev at gmail.com
>>>> wrote:
>>>> Hi everybody,
>>>>
>>>> Happy new year and lot of success in 2018!
>>>>
>>>> I would like to discuss my pull request https://github.com/OSGeo/gdal/
>>>> pull/282
>>>>
>>>> I created a thin wrapper around the json-c library which wide using in
>>>> GDAL.
>>>>
>>>> This is C++ interface which hides C memory management and provides nice
>>>> API. The web or disk json documents reading chunk by chunk with progress
>>>> indication also added.
>>>>
>>>> In future, the json-c can be easily switch to something other without
>>>> breaking the existing code.
>>>>
>>>> The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be
>>>> found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.
>>>>
>>>> Is this ready to merge into the trunk? Any objections?
>>>>
>>>> Best regards,
>>>>      Dmitry
>>>>
>>>>


From bishop.dev at gmail.com  Fri Jan  5 12:26:07 2018
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Fri, 5 Jan 2018 23:26:07 +0300
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
Message-ID: <3120833e-0b5e-46b3-5df2-9dc828db5919@gmail.com>

Hi Kurt,

Can you explain what should be done in PR?

Do you mean to replace all const char* to?

1. const char* -> const CPLString &

    const char *GetString(const char *pszName, const char *pszDefault =
    "") const; ->

    CPLString GetString(const CPLString &soName, const CPLString
    &soDefault = "") const;

or

2. const char* -> const std::string &

    const char *GetString(const char *pszName, const char *pszDefault =
    "") const; ->

    std::string GetString(const std::string &soName, const std::string
    &soDefault = "") const;

or?

Best regards,
     Dmitry

05.01.2018 18:54, Kurt Schwehr Ð¿Ð¸ÑÐµÑ:
> +1 for wrapping the old C code in some cleaner abstractions!
>
> But +10 for switching to a from the ground up C++ JSON library unless there
> are clear reasons for a core C library (I don't think there are)
>
> If we are talking about this kind of code, there are several things that
> have bugged me in general about GDAL for a long time.
>
> * Passing char *psz yada all over the place in pure C++ code.  A const
> std::string is usually not a noticeable expense and is a lot safer
> * CPLString when std::string will do just fine.  And we can write free
> functions to operate on strings.  I'm generally bothered by subclassing of
> std::string as CPLString.  After reading large amounts of C++ code, I think
> it adds more confusion than it ever helps over having clean free
> functions.  Interop and analysis with CPLString's is no fun.
>
> https://stackoverflow.com/questions/6006860/why-should-one-not-derive-from-c-std-string-class
>
> -kurt
>
> On Fri, Jan 5, 2018 at 7:44 AM, Sean Gillies <sean at mapbox.com> wrote:
>
>> Hi Dmitry,
>>
>> I scanned the PR and it seems reasonable to me. I'm barely a C++
>> programmer at all and it's clear to me, more clear than before. That said,
>> I'm not a fan of wrapping things that could be replaced. Have you looked
>> into whether a more performant C++ JSON library could be used? I haven't
>> run the benchmarks, but json-c compares pretty poorly to others in
>> https://github.com/miloyip/nativejson-benchmark.
>>
>>
>> On Wed, Jan 3, 2018 at 12:04 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
>> wrote:
>>
>>> Hi everybody,
>>>
>>> Happy new year and lot of success in 2018!
>>>
>>> I would like to discuss my pull request https://github.com/OSGeo/gdal/
>>> pull/282
>>>
>>> I created a thin wrapper around the json-c library which wide using in
>>> GDAL.
>>>
>>> This is C++ interface which hides C memory management and provides nice
>>> API. The web or disk json documents reading chunk by chunk with progress
>>> indication also added.
>>>
>>> In future, the json-c can be easily switch to something other without
>>> breaking the existing code.
>>>
>>> The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be
>>> found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.
>>>
>>> Is this ready to merge into the trunk? Any objections?
>>>
>>> Best regards,
>>>      Dmitry
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>> --
>> Sean Gillies
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/aad2b3fc/attachment.html>

From schwehr at gmail.com  Fri Jan  5 12:43:25 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 5 Jan 2018 12:43:25 -0800
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <3120833e-0b5e-46b3-5df2-9dc828db5919@gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
 <3120833e-0b5e-46b3-5df2-9dc828db5919@gmail.com>
Message-ID: <CACmBxyv_Ffmu2NbFxHvRfXWyNbHU1Zgb+W8BHOsNSsMzMZ413g@mail.gmail.com>

My preference (and not speaking for the gdal community) for C++ classes
would be:

1. replace const char * -> const std::string &
2. replace CPLString -> std::string

std::string GetString(const std::string &soName, const std::string
&soDefault = "") const;

This is where it would be good to get input from others.

I base the above on maximizing safety while trying to let the compiler do
its best job at optimizing.  Then in about 2022, we can see about
std::string_view :(

On Fri, Jan 5, 2018 at 12:26 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
wrote:

> Hi Kurt,
>
> Can you explain what should be done in PR?
>
> Do you mean to replace all const char* to?
>
> 1. const char* -> const CPLString &
>
> const char *GetString(const char *pszName, const char *pszDefault = "")
> const; ->
>
> CPLString GetString(const CPLString &soName, const CPLString &soDefault =
> "") const;
>
> or
>
> 2. const char* -> const std::string &
>
> const char *GetString(const char *pszName, const char *pszDefault = "")
> const; ->
>
> std::string GetString(const std::string &soName, const std::string
> &soDefault = "") const;
>
> or?
>
> Best regards,
>     Dmitry
>
> 05.01.2018 18:54, Kurt Schwehr Ð¿Ð¸ÑÐµÑ:
>
> +1 for wrapping the old C code in some cleaner abstractions!
>
> But +10 for switching to a from the ground up C++ JSON library unless there
> are clear reasons for a core C library (I don't think there are)
>
> If we are talking about this kind of code, there are several things that
> have bugged me in general about GDAL for a long time.
>
> * Passing char *psz yada all over the place in pure C++ code.  A const
> std::string is usually not a noticeable expense and is a lot safer
> * CPLString when std::string will do just fine.  And we can write free
> functions to operate on strings.  I'm generally bothered by subclassing of
> std::string as CPLString.  After reading large amounts of C++ code, I think
> it adds more confusion than it ever helps over having clean free
> functions.  Interop and analysis with CPLString's is no fun.
> https://stackoverflow.com/questions/6006860/why-should-one-not-derive-from-c-std-string-class
>
> -kurt
>
> On Fri, Jan 5, 2018 at 7:44 AM, Sean Gillies <sean at mapbox.com> <sean at mapbox.com> wrote:
>
>
> Hi Dmitry,
>
> I scanned the PR and it seems reasonable to me. I'm barely a C++
> programmer at all and it's clear to me, more clear than before. That said,
> I'm not a fan of wrapping things that could be replaced. Have you looked
> into whether a more performant C++ JSON library could be used? I haven't
> run the benchmarks, but json-c compares pretty poorly to others inhttps://github.com/miloyip/nativejson-benchmark.
>
>
> On Wed, Jan 3, 2018 at 12:04 PM, Dmitry Baryshnikov <bishop.dev at gmail.com> <bishop.dev at gmail.com>
> wrote:
>
>
> Hi everybody,
>
> Happy new year and lot of success in 2018!
>
> I would like to discuss my pull request https://github.com/OSGeo/gdal/
> pull/282
>
> I created a thin wrapper around the json-c library which wide using in
> GDAL.
>
> This is C++ interface which hides C memory management and provides nice
> API. The web or disk json documents reading chunk by chunk with progress
> indication also added.
>
> In future, the json-c can be easily switch to something other without
> breaking the existing code.
>
> The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be
> found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.
>
> Is this ready to merge into the trunk? Any objections?
>
> Best regards,
>     Dmitry
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
> --
> Sean Gillies
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/ea692007/attachment-0001.html>

From mateusz at loskot.net  Fri Jan  5 13:15:58 2018
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 5 Jan 2018 22:15:58 +0100
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <CACmBxyv_Ffmu2NbFxHvRfXWyNbHU1Zgb+W8BHOsNSsMzMZ413g@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
 <3120833e-0b5e-46b3-5df2-9dc828db5919@gmail.com>
 <CACmBxyv_Ffmu2NbFxHvRfXWyNbHU1Zgb+W8BHOsNSsMzMZ413g@mail.gmail.com>
Message-ID: <CABUeae8227ksYFLu3WNOKUEZO03XZjNVkBiVR2onVdU-7QXRcg@mail.gmail.com>

On 5 January 2018 at 21:43, Kurt Schwehr <schwehr at gmail.com> wrote:
> My preference (and not speaking for the gdal community) for C++ classes
> would be:
>
> 1. replace const char * -> const std::string &
> 2. replace CPLString -> std::string

+1

> Then in about 2022, we can see about std::string_view :(

+1

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Fri Jan  5 14:21:18 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 05 Jan 2018 23:21:18 +0100
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
In-Reply-To: <CAA5WJY=AP4qHarKBVD-_CoJFWnZcbp3Jdedajyn7ixSnk1sfcg@mail.gmail.com>
References: <CAA5WJYn3ngsyQi7kRRwtqUJ_YVW3aOAYUpj-XmXa=zPxSGpVmA@mail.gmail.com>
 <1869550.aosVX5fkT6@even-i700>
 <CAA5WJY=AP4qHarKBVD-_CoJFWnZcbp3Jdedajyn7ixSnk1sfcg@mail.gmail.com>
Message-ID: <2503906.EMCVMmyu2V@even-i700>

> Also do you think
> https://trac.osgeo.org/gdal/browser/branches/2.2/autotest/gdrivers/ecw.py
> is setup to test the 3.3 SDK nicely? If so I can verify the patch on LINUX
> and MacOSX with that.

The tests pass fine (*) for me on Linux with ECW SDK 3.3 + libecwj2-3.3.patch. No idea on Mac

(*) some are skipped since testing features / fixes of later SDK versions

Here's the output I get:

$ python ecw.py
  TEST: ecw_init ... success
  TEST: ecw_1 ... success
  TEST: ecw_2 ... success
  TEST: ecw_3 ... success
  TEST: ecw_4 ... success
  TEST: ecw_5 ... success
  TEST: ecw_6 ... success
  TEST: ecw_7 ... Warning 6: NITF only supports WGS84 geographic and UTM projections.

success
  TEST: ecw_8 ... success
  TEST: ecw_9 ... success
  TEST: ecw_10 ... success
  TEST: ecw_11 ... success
  TEST: ecw_12 ... success
  TEST: ecw_13 ... success
  TEST: ecw_14 ... success
  TEST: ecw_15 ... success
  TEST: ecw_16 ... success
  TEST: ecw_17 ... Diff at pixel (0, 0) : -5.000000
Diff at pixel (1, 0) : 1.000000
Diff at pixel (2, 0) : -2.000000
Diff at pixel (3, 0) : -1.000000
Diff at pixel (4, 0) : -3.000000
Diff at pixel (5, 0) : -3.000000
Diff at pixel (6, 0) : -1.000000
Diff at pixel (9, 0) : 2.000000
Diff at pixel (10, 0) : -3.000000
Diff at pixel (13, 7) : -6.000000
Max diff : 6
Number of diffs : 302
success
  TEST: ecw_18 ... success
  TEST: ecw_19 ... success
  TEST: ecw_20 ... success
  TEST: ecw_21 ... success
  TEST: ecw_22 ... success
  TEST: ecw_23 ... success
  TEST: ecw_24 ... success
  TEST: ecw_25 ... success
  TEST: ecw_26 ... success
  TEST: ecw_27 ... success
  TEST: ecw_28 ... success
  TEST: ecw_29 ... success
  TEST: ecw_30 ... success
  TEST: ecw_31 ... skip
  TEST: ecw_32 ... success
  TEST: ecw_33 ... success
  TEST: ecw_33_bis ... success
  TEST: ecw_34 ... skip
  TEST: ecw_35 ... success
  TEST: ecw_36 ... skip
  TEST: ecw_37 ... skip
  TEST: ecw_38 ... skip
  TEST: ecw_39 ... skip
  TEST: ecw_40 ... ERROR 1: An error has occurred: Error 86 "File is invalid or corrupt"  file "" 
line 0
ERROR 1: Cannot open data/stefan_full_rgba_ecwv3_meta.ecw which looks like a ECW 
format v3 file, that requires ECW SDK 5.0 or later
skip
  TEST: ecw_41 ... skip
  TEST: ecw_42 ... skip
  TEST: ecw_43 ... success
  TEST: ecw_44 ... skip
  TEST: ecw_45 ... success
  TEST: ecw_46 ... success
  TEST: ecw_47 ... skip
  TEST: ecw_48 ... success
  TEST: ecw_49 ... success
  TEST: ecw_online_1 ... success
  TEST: ecw_online_2 ... success
  TEST: ecw_online_4 ... As GDAL_DOWNLOAD_TEST_DATA environment variable is not 
defined, some tests relying on data to downloaded from the Web will be skipped
skip
  TEST: ecw_online_5 ... success
  TEST: ecw_online_6 ... success
  TEST: ecw_online_7 ... success
  TEST: ecw_cleanup ... success

Test Script: ecw
Succeeded: 46
Failed:    0 (0 blew exceptions)
Skipped:   12
Expected fail:0
Duration:  13.19s
As GDAL_DOWNLOAD_TEST_DATA environment variable is not defined, 1 tests relying on 
data to downloaded from the Web have been skipped



-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180105/86892c6a/attachment.html>

From matt.gregory at oregonstate.edu  Fri Jan  5 15:14:16 2018
From: matt.gregory at oregonstate.edu (Gregory, Matthew)
Date: Fri, 5 Jan 2018 23:14:16 +0000
Subject: [gdal-dev] python 2.7 bindings with trunk (2.3)
In-Reply-To: <1618919.Vy27yd4zoL@even-i700>
References: <7C48E40C135D314BA03D6471A6E3897801153D99DC@EX1.oregonstate.edu>
 <1618919.Vy27yd4zoL@even-i700>
Message-ID: <7C48E40C135D314BA03D6471A6E3897801153DA575@EX1.oregonstate.edu>

Thanks Even,

Even Rouault wrote:
> Define
> SET DISTUTILS_USE_SDK=1
> SET MSSdk=1
>  
> so that the active MSVC version is used when building the Python
> bindings. This is what is used in gisinternals builds & appveyor builds

That worked for me (although I would have never found it, so I appreciate your help).  I've put these two lines in gdal/swig/makefile.vc, e.g.

--- a/gdal/swig/makefile.vc
+++ b/gdal/swig/makefile.vc
@@ -20,6 +20,8 @@ python: gdalvars
         $(SWIG) -c++ -python -modern -new_repr -I../include/python -I../include/python/docs -o extensions/ogr_wrap.cpp -outdir osgeo ..\include\ogr.i
         $(SWIG) -c++ -python -modern -new_repr -I../include/python -I../include/python/docs -o extensions/gnm_wrap.cpp -outdir osgeo ..\include\gnm.i
         $(SWIG) -c++ -python -modern -new_repr -I../include/python -I../include/python/docs -o extensions/gdal_array_wrap.cpp -outdir osgeo ..\include\gdal_array.i
+        set DISTUTILS_USE_SDK=1
+        set MSSdk=1
         $(PYDIR)\python.exe setup.py build
 	cd ..

Is this a solution that would work across all branches and compilers?

thanks, matt

From denadai at fbk.eu  Fri Jan  5 16:14:04 2018
From: denadai at fbk.eu (Marco De Nadai)
Date: Sat, 6 Jan 2018 01:14:04 +0100
Subject: [gdal-dev] gdal_translate precision error
Message-ID: <CADs_D=m6ztv_Fm4GoQxy0h_ttSgsrQdC-4qscuPbe-L9UkwdEw@mail.gmail.com>

Dear gdal community,
I'm a new user of gdal and I recently had a problem with precision. I tried
to translate a big GeoTIFF to a smaller one, specifying the extent of the
window in this way:

gdal_translate -projwin_srs EPSG:4326 -epo -strict -a_nodata 0 -projwin
9.500000 46.000000 10.000000 45.500000 -of GTiff -co COMPRESS=LZW
2015_e009_n46_e010_n45.tif try.tif

Now try.tif has extent:

8.9996489996399998,44.9992232790750890 :
10.0006417207349152,46.0002160001700062


Is this normal? Because it's a pretty big error for me.


Then, you can see this error in the map https://imgur.com/a/CNx7U. The
white color is the original (source) GeoTIFF in background. The black color
is try.tif and the vertical line is the extent I specified in the command.


Can you help me?

Thanks



-- 
*Marco De Nadai*
*Ph.D. student at Fondazione Bruno Kessler (FBK) - *
*MobS Unit*
*University of Trento*
Via Sommarive, 18 - Povo
38123 Trento (TN) - Italy

E-mail: denadai at fbk.eu
LinkedIn: https://it.linkedin.com/in/marcodenadai

Latest research paper: The Death and Life of Great Italian Cities: A Mobile
Phone Data Perspective
<https://www.technologyreview.com/s/601107/data-mining-reveals-the-four-urban-conditions-that-create-vibrant-city-life/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180106/eb7e3aa4/attachment-0001.html>

From even.rouault at spatialys.com  Fri Jan  5 17:41:20 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 06 Jan 2018 02:41:20 +0100
Subject: [gdal-dev] python 2.7 bindings with trunk (2.3)
In-Reply-To: <7C48E40C135D314BA03D6471A6E3897801153DA575@EX1.oregonstate.edu>
References: <7C48E40C135D314BA03D6471A6E3897801153D99DC@EX1.oregonstate.edu>
 <1618919.Vy27yd4zoL@even-i700>
 <7C48E40C135D314BA03D6471A6E3897801153DA575@EX1.oregonstate.edu>
Message-ID: <3033997.9eGsSNIzi2@even-i700>

> That worked for me (although I would have never found it, so I appreciate
> your help).  I've put these two lines in gdal/swig/makefile.vc, e.g.
> 
> --- a/gdal/swig/makefile.vc
> +++ b/gdal/swig/makefile.vc
> @@ -20,6 +20,8 @@ python: gdalvars
>          $(SWIG) -c++ -python -modern -new_repr -I../include/python
> -I../include/python/docs -o extensions/ogr_wrap.cpp -outdir osgeo
> ..\include\ogr.i $(SWIG) -c++ -python -modern -new_repr -I../include/python
> -I../include/python/docs -o extensions/gnm_wrap.cpp -outdir osgeo
> ..\include\gnm.i $(SWIG) -c++ -python -modern -new_repr -I../include/python
> -I../include/python/docs -o extensions/gdal_array_wrap.cpp -outdir osgeo
> ..\include\gdal_array.i
> +        set DISTUTILS_USE_SDK=1
> +        set MSSdk=1
>          $(PYDIR)\python.exe setup.py build
>  	cd ..
> 
> Is this a solution that would work across all branches and compilers?

Would indeed be a better solution that a documentation hint. CC'ing Tamas Szekeres if he 
sees any issue with that approach (since I stole the trick from his gisinternals build recipees)

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180106/d299a515/attachment.html>

From andrew at aitchison.me.uk  Sat Jan  6 03:58:13 2018
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sat, 6 Jan 2018 11:58:13 +0000 (GMT)
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
Message-ID: <alpine.LRH.2.21.1801051717290.24161@warden.aitchison.me.uk>

On Fri, 5 Jan 2018, Kurt Schwehr wrote:

> * Passing char *psz yada all over the place in pure C++ code.  A const
> std::string is usually not a noticeable expense and is a lot safer
> * CPLString when std::string will do just fine.  And we can write free
> functions to operate on strings.  I'm generally bothered by subclassing of
> std::string as CPLString.  After reading large amounts of C++ code, I think
> it adds more confusion than it ever helps over having clean free
> functions.  Interop and analysis with CPLString's is no fun.
>
> https://stackoverflow.com/questions/6006860/why-should-one-not-derive-from-c-std-string-class

Can you point me to some good examples of good pure C++ code in GDAL
- ideally driver code ? The driver tutorial
   http://www.gdal.org/gdal_drivertut.html
is full of pszFilename and other psz variables.

When I taught myself C++ in 1992 std::string did not exist,
and my gdal work is my only C++ practice since 1993.
In my exploration of gdal code I have seen very little use of std::string
and plenty of CPLString; it would be a great help to have good examples to 
copy.

-- 
Andrew C. Aitchison					Cambridge, UK
 			andrew at aitchison.me.uk



From schwehr at gmail.com  Sat Jan  6 07:47:14 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sat, 6 Jan 2018 07:47:14 -0800
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <alpine.LRH.2.21.1801051717290.24161@warden.aitchison.me.uk>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
 <alpine.LRH.2.21.1801051717290.24161@warden.aitchison.me.uk>
Message-ID: <CACmBxyu9LxSkb4bJzz_L7-6JPfep9N6atRJN6vAhEo+wKS_rGg@mail.gmail.com>

Andrew,

My take:

GDAL is a not a place to look for good modern C++ code.  And there is a of
old style C++ baked into the APIs, so drivers are particularly tough.

You can look for use of unique_ptr for some code that is heading in that
direction.

The other general problem with C++ code in GDAL is that it wasn't designed
with C++ testing in mind.  I've broken headers out of some of the drivers
so I can skip past the GDALOpen/Identify interfaces and test inside the
member functions.

You can look through
https://github.com/schwehr/gdal-autotest2/tree/master/cpp but most of that
code is pretty different as it is mostly tests.

GEOS is starting to modernize so you can look some there, but also isn't
particularly strong C++11 (yet)

A good place to start is with project style guides.  There are many around
with different takes.  The one I work to is:

https://google.github.io/styleguide/cppguide.html



On Sat, Jan 6, 2018 at 3:58 AM, Andrew C Aitchison <andrew at aitchison.me.uk>
wrote:

> On Fri, 5 Jan 2018, Kurt Schwehr wrote:
>
> * Passing char *psz yada all over the place in pure C++ code.  A const
>> std::string is usually not a noticeable expense and is a lot safer
>> * CPLString when std::string will do just fine.  And we can write free
>> functions to operate on strings.  I'm generally bothered by subclassing of
>> std::string as CPLString.  After reading large amounts of C++ code, I
>> think
>> it adds more confusion than it ever helps over having clean free
>> functions.  Interop and analysis with CPLString's is no fun.
>>
>> https://stackoverflow.com/questions/6006860/why-should-one-
>> not-derive-from-c-std-string-class
>>
>
> Can you point me to some good examples of good pure C++ code in GDAL
> - ideally driver code ? The driver tutorial
>   http://www.gdal.org/gdal_drivertut.html
> is full of pszFilename and other psz variables.
>
> When I taught myself C++ in 1992 std::string did not exist,
> and my gdal work is my only C++ practice since 1993.
> In my exploration of gdal code I have seen very little use of std::string
> and plenty of CPLString; it would be a great help to have good examples to
> copy.
>
> --
> Andrew C. Aitchison                                     Cambridge, UK
>                         andrew at aitchison.me.uk
>
>
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180106/58e15583/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan  8 06:05:15 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Mon, 8 Jan 2018 07:05:15 -0700 (MST)
Subject: [gdal-dev] gdal_translate precision error
In-Reply-To: <CADs_D=m6ztv_Fm4GoQxy0h_ttSgsrQdC-4qscuPbe-L9UkwdEw@mail.gmail.com>
References: <CADs_D=m6ztv_Fm4GoQxy0h_ttSgsrQdC-4qscuPbe-L9UkwdEw@mail.gmail.com>
Message-ID: <1515420315878-0.post@n6.nabble.com>

Marco De Nadai wrote
> Dear gdal community,
> I'm a new user of gdal and I recently had a problem with precision. I
> tried
> to translate a big GeoTIFF to a smaller one, specifying the extent of the
> window in this way:

Hi,

It seems that you asked the same question in
https://gis.stackexchange.com/questions/267112/gdal-translate-numeric-accuracy-so-bad-80-meters-why
and you were asked to give more details about your source data. I consider
that it was a good suggestion.

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From diregola at gmail.com  Mon Jan  8 06:18:51 2018
From: diregola at gmail.com (Margherita Di Leo)
Date: Mon, 8 Jan 2018 15:18:51 +0100
Subject: [gdal-dev] Fwd: Call for mentors for Google Summer of Code 2018
In-Reply-To: <CABa=8Qrd5wtm3sN4giaPsGPjGnzcCf-7ao7PvFV+FgMALpvcvg@mail.gmail.com>
References: <CABa=8Qrd5wtm3sN4giaPsGPjGnzcCf-7ao7PvFV+FgMALpvcvg@mail.gmail.com>
Message-ID: <CABa=8Qp0OQmdc3mY-3cARSOzwAG0Hpa49jHMzAtDsQ6rqVeSZg@mail.gmail.com>

FYI


---------- Forwarded message ----------
From: Margherita Di Leo <diregola at gmail.com>
Date: Mon, Jan 8, 2018 at 12:13 PM
Subject: Call for mentors for Google Summer of Code 2018
To: OSGeo Discussions <discuss at lists.osgeo.org>
Cc: "gsoc-adminosgeo.org" <gsoc-admin at osgeo.org>


Dear members of the community,

while we're still very busy in Google Code-in, which is, by the way, a big
success so far, it's already time to apply for Google Summer of Code 2018!
In fact, the admins team is making shifts to cope with all these energetic
pre-school students and meanwhile preparing the application for next GSoC..

*We need you!*

At this time of the year, software communities should brush up their list
of ideas, create a new ideas page and send the URL to us admins at  <
gsoc-admin at osgeo.org>. We need to receive your URLs by *Jan 20*.  If you
are willing to act as a mentor, fill in this form: https://goo.gl/forms/
jMvPl7ns2NG1BL6Q2

Please, forward this email to your developer mailing list.

Here [1] is the timeline.

Looking forward to another great GSoC edition!
Let's keep fingers crossed for our application!

Cheers

-The GSoC / GCI admins team


[1] https://developers.google.com/open-source/gsoc/timeline

-- 
Margherita Di Leo



-- 
Margherita Di Leo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180108/330169a5/attachment.html>

From schwehr at gmail.com  Mon Jan  8 09:08:44 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 8 Jan 2018 09:08:44 -0800
Subject: [gdal-dev] Why is CSLUniquePtr internal?
Message-ID: <CACmBxyu_tyq148hgwX2C7cAzy-2fs3aUfxp56F+u+7S-MRM-2Q@mail.gmail.com>

Even,

In https://trac.osgeo.org/gdal/changeset/41104, you put CSLUniquePtr
behind GDAL_COMPILATION.  Can you explain why?  I would like to use it in
some of my code rather than the usual MakeCleanup with CPLDestroy that I
usually do.

Thanks,
-kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180108/0fcbd476/attachment.html>

From even.rouault at spatialys.com  Mon Jan  8 09:15:13 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 08 Jan 2018 18:15:13 +0100
Subject: [gdal-dev] Why is CSLUniquePtr internal?
In-Reply-To: <CACmBxyu_tyq148hgwX2C7cAzy-2fs3aUfxp56F+u+7S-MRM-2Q@mail.gmail.com>
References: <CACmBxyu_tyq148hgwX2C7cAzy-2fs3aUfxp56F+u+7S-MRM-2Q@mail.gmail.com>
Message-ID: <5088933.zayD4y1mzy@even-i700>

On lundi 8 janvier 2018 09:08:44 CET Kurt Schwehr wrote:
> Even,
> 
> In https://trac.osgeo.org/gdal/changeset/41104, you put CSLUniquePtr
> behind GDAL_COMPILATION.  Can you explain why?  I would like to use it in
> some of my code rather than the usual MakeCleanup with CPLDestroy that I
> usually do.

I didn't really feel that needed to be part of the API. I don't have a strong opinion 
on this though

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180108/ad78c35a/attachment.html>

From schwehr at gmail.com  Mon Jan  8 09:24:31 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 8 Jan 2018 09:24:31 -0800
Subject: [gdal-dev] Why is CSLUniquePtr internal?
In-Reply-To: <5088933.zayD4y1mzy@even-i700>
References: <CACmBxyu_tyq148hgwX2C7cAzy-2fs3aUfxp56F+u+7S-MRM-2Q@mail.gmail.com>
 <5088933.zayD4y1mzy@even-i700>
Message-ID: <CACmBxyv7M8Me11JQtxWSbiN-P7f=i5hJ6=SR1oY5N+-r73n+1w@mail.gmail.com>

Since the C style string lists get exposed so often in the API, I am
strongly in favor of exposing it and encouraging its use.

I am of the opinion that modern C++ code should rarely use bare
malloc/free/new/delete and variants of those (doubly strong for the delete
side) .

Anyone have a reason to not expose it?

On Mon, Jan 8, 2018 at 9:15 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 8 janvier 2018 09:08:44 CET Kurt Schwehr wrote:
>
> > Even,
>
> >
>
> > In https://trac.osgeo.org/gdal/changeset/41104, you put CSLUniquePtr
>
> > behind GDAL_COMPILATION. Can you explain why? I would like to use it in
>
> > some of my code rather than the usual MakeCleanup with CPLDestroy that I
>
> > usually do.
>
>
>
> I didn't really feel that needed to be part of the API. I don't have a
> strong opinion on this though
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180108/48d71895/attachment.html>

From bishop.dev at gmail.com  Tue Jan  9 00:10:12 2018
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Tue, 9 Jan 2018 11:10:12 +0300
Subject: [gdal-dev] CPLJSONDocument
In-Reply-To: <CACmBxyv_Ffmu2NbFxHvRfXWyNbHU1Zgb+W8BHOsNSsMzMZ413g@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
 <2061866.rixNzYiCjp@even-i700>
 <CALhO07yruYbRJhJTXKrA8dhFTdCRok2JtkEoo6KHC7Wp0hg=1w@mail.gmail.com>
 <CA+YzLBeTLnyz8bcB=fzdNRBRxr3RgnKVYL7DM09PKqZ=t=jcTA@mail.gmail.com>
 <8bebca2b-67d1-0886-d826-abceb61a5d44@gmail.com>
 <CADPhZXyvC9G-ptD8eYcrfFfDX=RvRWGHO=tH3KjMya4U801=fg@mail.gmail.com>
 <CACmBxytuR-4n-gzQw7RLT3OaAkfTakb2bdvQ0i1KP9diPBsNsA@mail.gmail.com>
 <3120833e-0b5e-46b3-5df2-9dc828db5919@gmail.com>
 <CACmBxyv_Ffmu2NbFxHvRfXWyNbHU1Zgb+W8BHOsNSsMzMZ413g@mail.gmail.com>
Message-ID: <99995613-1c50-ae80-d264-7ba041c245b1@gmail.com>

Hi,

I changed CPLJSONObject/CPLJSONArrayÂ  methods string parameters to 
std::string and merged last trunk changes.

Still leave 3 methods with const char* to simplify code because 
according to standard conversion sequence, methods with input (const 
char*, const char*) parameters executes method with signature 
(std:;string&, bool):

    Add("key", "value") --> Add(std::string osName, bool bValue)
    Set("key", "value") --> Set(std::string osName, bool bValue)

See notes in pull request 
(https://github.com/OSGeo/gdal/pull/282#issuecomment-355766795).
I'm ready to merge current pull request into the trunk.

Best regards,
     Dmitry

05.01.2018 23:43, Kurt Schwehr Ð¿Ð¸ÑÐµÑ:
> My preference (and not speaking for the gdal community) for C++ classes
> would be:
>
> 1. replace const char * -> const std::string &
> 2. replace CPLString -> std::string
>
> std::string GetString(const std::string &soName, const std::string
> &soDefault = "") const;
>
> This is where it would be good to get input from others.
>
> I base the above on maximizing safety while trying to let the compiler do
> its best job at optimizing.  Then in about 2022, we can see about
> std::string_view :(
>
> On Fri, Jan 5, 2018 at 12:26 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
> wrote:
>
>> Hi Kurt,
>>
>> Can you explain what should be done in PR?
>>
>> Do you mean to replace all const char* to?
>>
>> 1. const char* -> const CPLString &
>>
>> const char *GetString(const char *pszName, const char *pszDefault = "")
>> const; ->
>>
>> CPLString GetString(const CPLString &soName, const CPLString &soDefault =
>> "") const;
>>
>> or
>>
>> 2. const char* -> const std::string &
>>
>> const char *GetString(const char *pszName, const char *pszDefault = "")
>> const; ->
>>
>> std::string GetString(const std::string &soName, const std::string
>> &soDefault = "") const;
>>
>> or?
>>
>> Best regards,
>>      Dmitry
>>
>> 05.01.2018 18:54, Kurt Schwehr Ð¿Ð¸ÑÐµÑ:
>>
>> +1 for wrapping the old C code in some cleaner abstractions!
>>
>> But +10 for switching to a from the ground up C++ JSON library unless there
>> are clear reasons for a core C library (I don't think there are)
>>
>> If we are talking about this kind of code, there are several things that
>> have bugged me in general about GDAL for a long time.
>>
>> * Passing char *psz yada all over the place in pure C++ code.  A const
>> std::string is usually not a noticeable expense and is a lot safer
>> * CPLString when std::string will do just fine.  And we can write free
>> functions to operate on strings.  I'm generally bothered by subclassing of
>> std::string as CPLString.  After reading large amounts of C++ code, I think
>> it adds more confusion than it ever helps over having clean free
>> functions.  Interop and analysis with CPLString's is no fun.
>> https://stackoverflow.com/questions/6006860/why-should-one-not-derive-from-c-std-string-class
>>
>> -kurt
>>
>> On Fri, Jan 5, 2018 at 7:44 AM, Sean Gillies <sean at mapbox.com> <sean at mapbox.com> wrote:
>>
>>
>> Hi Dmitry,
>>
>> I scanned the PR and it seems reasonable to me. I'm barely a C++
>> programmer at all and it's clear to me, more clear than before. That said,
>> I'm not a fan of wrapping things that could be replaced. Have you looked
>> into whether a more performant C++ JSON library could be used? I haven't
>> run the benchmarks, but json-c compares pretty poorly to others inhttps://github.com/miloyip/nativejson-benchmark.
>>
>>
>> On Wed, Jan 3, 2018 at 12:04 PM, Dmitry Baryshnikov <bishop.dev at gmail.com> <bishop.dev at gmail.com>
>> wrote:
>>
>>
>> Hi everybody,
>>
>> Happy new year and lot of success in 2018!
>>
>> I would like to discuss my pull request https://github.com/OSGeo/gdal/
>> pull/282
>>
>> I created a thin wrapper around the json-c library which wide using in
>> GDAL.
>>
>> This is C++ interface which hides C memory management and provides nice
>> API. The web or disk json documents reading chunk by chunk with progress
>> indication also added.
>>
>> In future, the json-c can be easily switch to something other without
>> breaking the existing code.
>>
>> The CPLJSONDocument/CPLJSONObject/CPLJSONArray usage examples can be
>> found in frmts/pds driver and c++ unit test in autotest/cpp/test_cpl.cpp.
>>
>> Is this ready to merge into the trunk? Any objections?
>>
>> Best regards,
>>      Dmitry
>>
>>
>> _______________________________________________
>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>>
>> --
>> Sean Gillies
>>
>> _______________________________________________
>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180109/ba71b665/attachment.html>

From diregola at gmail.com  Tue Jan  9 07:02:16 2018
From: diregola at gmail.com (Margherita Di Leo)
Date: Tue, 9 Jan 2018 16:02:16 +0100
Subject: [gdal-dev] Fwd: [Action required] Please prepare the ideas page for
	GSoC 2018
In-Reply-To: <CABa=8Qru5ScnL-7XF0nubkHy7HyS7YJqQQZr7TANrCOrkWfDMA@mail.gmail.com>
References: <CABa=8Qru5ScnL-7XF0nubkHy7HyS7YJqQQZr7TANrCOrkWfDMA@mail.gmail.com>
Message-ID: <CABa=8QrUhJydHZtJ1DBBPSwd8sQVWm78dPZFa+CquNdoyb4ENw@mail.gmail.com>

---------- Forwarded message ----------
From: Margherita Di Leo <diregola at gmail.com>
Date: Tue, Jan 9, 2018 at 3:57 PM
Subject: [Action required] Please prepare the ideas page for GSoC 2018
To: OSGeo Discussions <discuss at lists.osgeo.org>, OSGeo-SoC <
soc at lists.osgeo.org>
Cc: "gsoc-adminosgeo.org" <gsoc-admin at osgeo.org>


Dear members of the Community,

this is a reminder that to participate in GSoC also this year we need you
to send us (admins:  <gsoc-admin at osgeo.org>) the URL for your project's
ideas page.

Every idea should indicate a title, a description, 2 mentors and a test for
the students to submit to your evaluation. The test aims at evaluating if
the student is capable for the project, so please design the test having in
mind the skills required to complete the project.

Time is short, we need to collect all URLs by Jan 20.

Thanks and please forward to your project community.

Cheers,

-- 
Margherita Di Leo



-- 
Margherita Di Leo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180109/2b5690b5/attachment.html>

From athomas at thinkspatial.com.au  Wed Jan 10 01:17:53 2018
From: athomas at thinkspatial.com.au (Alan Thomas)
Date: Wed, 10 Jan 2018 20:17:53 +1100
Subject: [gdal-dev] Proposed updates to the GDAL feature style spec
In-Reply-To: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
References: <CALhO07wk93kutU-eONToitf1oQSFkL+zjLWQhZceE0-EqSHb1Q@mail.gmail.com>
Message-ID: <CALhO07y8HYLLvijRRtmESBuqVoT=NDmLqt9+mKq9sUi5zDQuzg@mail.gmail.com>

I have made the update in https://trac.osgeo.org/gdal/changeset/41230,
with corrections in https://trac.osgeo.org/gdal/changeset/41235.

You can view the refreshed spec at http://www.gdal.org/ogr_feature_style.html

Alan


-- 
Alan Thomas
Software Developer
ThinkSpatial
http://www.thinkspatial.com.au

From SGONG at mdacorporation.com  Fri Jan 12 13:22:05 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Fri, 12 Jan 2018 21:22:05 +0000
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>

Hi list,



I am using gdal 2.2.3



I tried to open a SPOT7 tiled (DIM_SPOT7_P_201511221101122_SEN_1.XML)

It displays all the tiled TIF, but has no lat/lon georeferencing


'gdalinfo' output is shown below. As you can see, corner coordinates are wrong


Thanks,
Shawn





Driver: DIMAP/SPOT DIMAP
Files: V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A/DIM_SPOT7_P_201511221101122_SEN_1.XML
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R1C1.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R1C2.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R1C3.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R1C4.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R2C1.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R2C2.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R2C3.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R2C4.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R3C1.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R3C2.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R3C3.TIF
       V:/orderdesk/ImageData/EO-IR/SPOT-7/Gibraltar_20151122/SPOT7_SONGEOQU000673_CONW1786_15_C019_COLN_01/DS_SPOT7_201511221101122_LM1_LM1_LM1_LM1_W006N36_01709/PROD_SPOT7_001/VOL_SPOT7_001_A/IMG_SPOT7_P_001_A\IMG_SPOT7_P_201511221101122_SEN_1_R3C4.TIF
Size is 38609, 34521
Coordinate System is:
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0,
        AUTHORITY["EPSG","8901"]],
    UNIT["degree",0.0174532925199433,
        AUTHORITY["EPSG","9122"]],
    AXIS["Latitude",NORTH],
    AXIS["Longitude",EAST],
    AUTHORITY["EPSG","4326"]]
Origin = (0.500000000000000,-0.500000000000000)
Pixel Size = (1.000000000000000,-1.000000000000000)
Metadata:
  BAND_MODE=PMS
  CLOUDCOVER_MEASURE_DESC=Region of interest mask
  CLOUDCOVER_MEASURE_NAME=Area_Of_Interest (ROI)
  CLOUDCOVER_MEASURE_TYPE=AUTOMATIC
  CLOUDCOVER_QUALITY_TABLES=SPOT
  DATASET_DELIVERY_TYPE=NETWORK
  DATASET_JOB_ID=_1
  DATASET_PRODUCER_ADDRESS=3528 30th Street North - Lethbridge, Alberta, T1H 6Z4 - Canada
  DATASET_PRODUCER_CONTACT=geomatics-sales at blackbridge.com<mailto:DATASET_PRODUCER_CONTACT=geomatics-sales at blackbridge.com>
  DATASET_PRODUCER_NAME=BLACKBRIDGE
  DATASET_PRODUCTION_DATE=2015-11-23T15:34:50.00Z
  DATASET_PRODUCT_INFO=SPOT
  DATASET_PRODUCT_TYPE=NA
  EPHEMERIS_ACQUISITION_ORBIT_DIRECTION=DESCENDING
  EPHEMERIS_ACQUISITION_ORBIT_NUMBER=337
  EPHEMERIS_NADIR_LAT=3.5841471033656489e+01
  EPHEMERIS_NADIR_LON=-9.6603113089445003e+00
  FACILITY_PROCESSING_CENTER=DRS
  FACILITY_SOFTWARE=IMF
  GEOMETRIC_ATTITUDES_USED=CORRECTED
  GEOMETRIC_EPHEMERIS_USED=CORRECTED
  GEOMETRIC_GEOMETRIC_PROCESSING=SENSOR
  GEOMETRIC_GROUND_SETTING=false
  GEOMETRIC_VERTICAL_SETTING=false
  IMAGING_DATE=2015-11-22
  IMAGING_TIME=11:01:12.2
  INSTRUMENT=SPOT
  INSTRUMENT_INDEX=7
  MISSION=SPOT
  MISSION_INDEX=7
  PROCESSING_LEVEL=SENSOR
  SPECTRAL_PROCESSING=P
RPC Metadata:
  HEIGHT_OFF=500.0
  HEIGHT_SCALE=500.0
  LAT_OFF=35.96632841
  LAT_SCALE=0.2793112
  LINE_DEN_COEFF= 1.0 2.149276760347684E-9 1.569864535554534E-9 -6.799732669177335E-11 -2.063917290551663E-7 5.291400672838851E-9 1.432198537731846E-9 5.698023429559451E-8 1.243822107313303E-7 -1.746418509117009E-10 -1.211904533802339E-10 -9.594566877849384E-10 -1.153369247642528E-12 3.538444270702224E-12 4.26347748636693E-9 4.343177181508928E-11 -6.035064920118659E-13 -1.126656950292592E-10 -7.029943511502941E-11 -9.566624067684285E-15
  LINE_NUM_COEFF= -0.0008011100540330391 0.005988756004666219 -1.006161910808713 -0.0001946180694095778 0.004209356753965839 1.376467517721126E-6 -9.388041150152281E-5 -0.002959160704855288 -0.000511151213931275 -2.885880985718603E-9 7.799077595883695E-7 1.236427847032796E-5 -1.358712986112905E-5 9.051632381182954E-11 -6.633326541832766E-6 1.706507335077583E-5 -1.297679767621225E-9 -2.800346545413087E-7 -3.495296701543981E-7 1.385508338188105E-14
  LINE_OFF=17259.5
  LINE_SCALE=17260.5
  LONG_OFF=-5.63052114
  LONG_SCALE=0.4458457
  SAMP_DEN_COEFF= 1.0 3.207984712337676E-6 4.196037094848774E-6 -4.117329040282173E-7 -6.496285026700729E-5 4.343585754378016E-6 9.27816103703259E-7 -1.246957365439359E-7 2.61261124305228E-5 -1.795307168770061E-7 -2.808631514894751E-9 5.32730707463941E-8 -9.012108018019151E-8 5.908218260933527E-10 2.164174918962015E-7 2.391906457543966E-8 -3.789701945295544E-10 -1.665330721225451E-8 2.594007104159963E-9 -1.350581587293522E-11
  SAMP_NUM_COEFF= 0.02938345788435526 1.013293511852162 0.0001297969387494999 0.007386961987047776 0.006394394524917459 0.000441641845902842 -8.135653014705589E-5 -0.02764884022515586 -0.0009560845024015708 3.947277505815974E-6 1.587110675331964E-5 0.0005808032904850307 -4.120894910451828E-5 -2.630199991025371E-8 0.000132036531961926 4.231628156443142E-5 -5.489149163038843E-9 -2.512285999363316E-5 -1.546263812538901E-6 8.32678541840813E-10
  SAMP_OFF=19303.5
  SAMP_SCALE=19304.5
Corner Coordinates:
Upper Left  (   0.5000000,  -0.5000000) (  0d30' 0.00"E,  0d30' 0.00"S)
Lower Left  (       0.500,  -34521.500) (  0d30' 0.00"E,Invalid angle)
Upper Right (   38609.500,      -0.500) (Invalid angle,  0d30' 0.00"S)
Lower Right (   38609.500,  -34521.500) (Invalid angle,Invalid angle)
Center      (   19305.000,  -17261.000) (Invalid angle,Invalid angle)
Band 1 Block=128x128 Type=UInt16, ColorInterp=Undefined


This electronic correspondence, including any attachments, is intended solely for the use of the intended recipient(s) and may contain legally privileged, proprietary and/or confidential information. If you are not the intended recipient, please immediately notify the sender by reply e-mail and permanently delete all copies of this electronic correspondence and associated attachments. Any use, disclosure, dissemination, distribution or copying of this electronic correspondence and any attachments for any purposes that have not been specifically authorized by the sender is strictly prohibited.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180112/bebd72a0/attachment.html>

From rasikachinchwade31 at gmail.com  Sat Jan 13 00:32:50 2018
From: rasikachinchwade31 at gmail.com (Rasika Chinchwade)
Date: Sat, 13 Jan 2018 14:02:50 +0530
Subject: [gdal-dev] help
Message-ID: <CA+tneBQ6GKmEUHN=oy9zQg3pf2CH+YWPTn29ckC4pPmdKKPV1Q@mail.gmail.com>

hello all,
Why I am getting this error while performing same operation on same dataset
given on link

https://gis.stackexchange.com/questions/253884/projecting-insat3d-l1b-data-from-hdf5-to-geotiff

ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: Reprojection failed, err = -20, further errors will be suppressed
on the transform object.
0...10...20...30...40...50...60...70...80...90...100 - done.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180113/480d9f85/attachment.html>

From even.rouault at spatialys.com  Sat Jan 13 07:15:55 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 13 Jan 2018 16:15:55 +0100
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>
Message-ID: <2805257.IuXUUOmlMO@even-i700>

Shawn,

the driver shouldn't likely report the geotransform in that case, but just the 
RPC. You can try to warp it with gdalwarp -rpc

I've blindly pushed a untested fix in trunk so that the geotransform is not 
reported in your case:
https://trac.osgeo.org/gdal/changeset/41264


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180113/334e9bc4/attachment-0001.html>

From even.rouault at spatialys.com  Sat Jan 13 07:53:14 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 13 Jan 2018 16:53:14 +0100
Subject: [gdal-dev] help
In-Reply-To: <CA+tneBQ6GKmEUHN=oy9zQg3pf2CH+YWPTn29ckC4pPmdKKPV1Q@mail.gmail.com>
References: <CA+tneBQ6GKmEUHN=oy9zQg3pf2CH+YWPTn29ckC4pPmdKKPV1Q@mail.gmail.com>
Message-ID: <1577405.FzMOWAEF8X@even-i700>

On samedi 13 janvier 2018 14:02:50 CET Rasika Chinchwade 
wrote:
> hello all,
> Why I am getting this error while performing same operation on 
same dataset
> given on link

Providing an actual link to a dataset could be helpful

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180113/1aff4fd6/attachment.html>

From woodbri at swoodbridge.com  Sat Jan 13 09:01:19 2018
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Sat, 13 Jan 2018 12:01:19 -0500
Subject: [gdal-dev] First attempt to use raster - need help
Message-ID: <7a3d324f-0d7a-fa77-a82f-4e6d0a68ebcd@swoodbridge.com>

Hi all,

I'm trying to use the raster functions for the first time. I have a 
simple black and white image with some polygons drawn on it. and I want 
to extract the polygons as geometry.

$ gdalinfo -hist 12322240_lines.png
Driver: PNG/Portable Network Graphics
Files: 12322240_lines.png
 Â Â Â Â Â Â  12322240_lines.png.aux.xml
Size is 600, 800
Coordinate System is `'
Corner Coordinates:
Upper LeftÂ  (Â Â Â  0.0,Â Â Â  0.0)
Lower LeftÂ  (Â Â Â  0.0,Â  800.0)
Upper Right (Â  600.0,Â Â Â  0.0)
Lower Right (Â  600.0,Â  800.0)
CenterÂ Â Â Â Â  (Â  300.0,Â  400.0)
Band 1 Block=600x1 Type=Byte, ColorInterp=Gray
 Â  256 buckets from -0.5 to 255.5:
 Â  474137 5863 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0
 Â  Image Structure Metadata:
 Â Â Â  NBITS=1

the background is the 474137bucket and the line work is the 5863 bucket.

$ raster2pgsql -t auto -P -c -f img -F -n file -I -M *.png | 
/usr/lib/postgresql/9.5/bin/psql -U postgres -h localhost -p 5435 
test_sketch

I'm loading 2 PNG images in this example, about ultimately I will have 
100-1000s of images to process and extract the line work.

SELECT (md).*, (bmd).*
 Â FROM (SELECT ST_Metadata(img) AS md,
 Â Â Â Â Â Â Â Â Â Â Â Â Â  ST_BandMetadata(img) AS bmd
 Â Â Â Â Â Â  FROM "12322240_lines" LIMIT 1
 Â Â Â Â Â  ) foo;

-- 0;0;30;32;1;-1;0;0;0;1;"8BUI";;f;""

select rid, val, st_astext(geom) as wkt
from (
select rid, dp.*
from "12322240_lines", lateral st_dumpaspolygons(img, 1, true) as dp
) as foo;

This generates 1349 rows. So it appears to be processing these an a tile 
by tile basis not on the whole image. How do I get the polygons that are 
represented by the sketch. Assuming that the sketch lines are 1 or 2 
pixels wide, I presume that I would get the polygon around those pixels. 
Do I need to then skeletonize that to get the original lines?

select * from "12322240_lines";

generates 100 rows.


Any thoughts on how to best approach this would be appreciated.

Thanks,

 Â  -Steve


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From rasikachinchwade31 at gmail.com  Sat Jan 13 10:35:26 2018
From: rasikachinchwade31 at gmail.com (Rasika Chinchwade)
Date: Sun, 14 Jan 2018 00:05:26 +0530
Subject: [gdal-dev] help
In-Reply-To: <1577405.FzMOWAEF8X@even-i700>
References: <CA+tneBQ6GKmEUHN=oy9zQg3pf2CH+YWPTn29ckC4pPmdKKPV1Q@mail.gmail.com>
 <1577405.FzMOWAEF8X@even-i700>
Message-ID: <CA+tneBReoVE8Q=6HE8atX+JG8SaspCPRUkErY4UjSoSyN6KNUA@mail.gmail.com>

I have used STD dataset of INSAT-3D
https://www.mosdac.gov.in/catalog?field_satellitenode_nid=69
you can download the datset from www.mosdac.gov.in
HEM daily ,LST product. product of INSAT3D .This all are in disc shape.
I am trying to convert the .h5 dataset to GeoTiff format using gdal.
This products are giving me lat,lon in 2D array which are unevenly spaced
and also having scaling factor of 0.01

GDALINFO:
  gdal version is 2.2.1 released on 2017-06-03



regards,
Rasika Chinchwade,
MSc Geoinformatics,
Savitribai Phule Pune University,
Pune India ,411007



On Sat, Jan 13, 2018 at 9:23 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On samedi 13 janvier 2018 14:02:50 CET Rasika Chinchwade wrote:
>
> > hello all,
>
> > Why I am getting this error while performing same operation on same
> dataset
>
> > given on link
>
>
>
> Providing an actual link to a dataset could be helpful
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180114/2e3089fe/attachment.html>

From SGONG at mdacorporation.com  Mon Jan 15 12:51:44 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Mon, 15 Jan 2018 20:51:44 +0000
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
In-Reply-To: <2805257.IuXUUOmlMO@even-i700>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>,
 <2805257.IuXUUOmlMO@even-i700>
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FFB6AED@exbermd02.ds.mda.ca>

Hi Even,



I rebuilt GDAL with your code change in DIMAP driver. And it didn't work: gdalinfo returns the same output.



I then ran "gdalwarp -rpc -to RPC_HEIGHT=0 c:/DIM_SPOT7_P_201511221101122_SEN_1.XML c:/test.tif

gdalwarp worked.



That being said, I still would like to see the DIMAP driver updated so that I don't have to run gdalwarp. So I can simply drag and drop the *.XML onto OpenEV viewer.


Thanks,
Shawn
________________________________
From: Even Rouault [even.rouault at spatialys.com]
Sent: January-13-18 10:15 AM
To: gdal-dev at lists.osgeo.org
Cc: Gong, Shawn
Subject: Re: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon


Shawn,



the driver shouldn't likely report the geotransform in that case, but just the RPC. You can try to warp it with gdalwarp -rpc



I've blindly pushed a untested fix in trunk so that the geotransform is not reported in your case:

https://trac.osgeo.org/gdal/changeset/41264





Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180115/f5f99a2d/attachment.html>

From even.rouault at spatialys.com  Mon Jan 15 12:58:52 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 15 Jan 2018 21:58:52 +0100
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC3FFB6AED@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>
 <2805257.IuXUUOmlMO@even-i700>
 <7DCBC135929FF74E8A5488B1814AC6BC3FFB6AED@exbermd02.ds.mda.ca>
Message-ID: <2559881.ZcXFGEWL3U@even-i700>

On lundi 15 janvier 2018 20:51:44 CET Gong, Shawn wrote:
> Hi Even,
> 
> 
> 
> I rebuilt GDAL with your code change in DIMAP driver. And it didn't work:
> gdalinfo returns the same output.

Untested code rarely works at the first attempt, so not surprised :-)

> 
> That being said, I still would like to see the DIMAP driver updated so that
> I don't have to run gdalwarp. So I can simply drag and drop the *.XML onto
> OpenEV viewer.

Access to the datasset would be needed

> 
> 
> Thanks,
> Shawn
> ________________________________
> From: Even Rouault [even.rouault at spatialys.com]
> Sent: January-13-18 10:15 AM
> To: gdal-dev at lists.osgeo.org
> Cc: Gong, Shawn
> Subject: Re: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
> 
> 
> Shawn,
> 
> 
> 
> the driver shouldn't likely report the geotransform in that case, but just
> the RPC. You can try to warp it with gdalwarp -rpc
> 
> 
> 
> I've blindly pushed a untested fix in trunk so that the geotransform is not
> reported in your case:
> 
> https://trac.osgeo.org/gdal/changeset/41264
> 
> 
> 
> 
> 
> Even
> 
> 
> 
> --
> 
> Spatialys - Geospatial professional services
> 
> http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180115/437bd013/attachment.html>

From SGONG at mdacorporation.com  Mon Jan 15 13:03:28 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Mon, 15 Jan 2018 21:03:28 +0000
Subject: [gdal-dev] Sentinel-1 SLC georeferencing
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FFB6AFC@exbermd02.ds.mda.ca>

Hi list,



I am using gdal 2.2.3.  I see that there is a GDAL driver for Sentinel-1 'manifest.safe' and I tested it against the tough case of the SLC (complex).

These SLC products consists of three HH-HV dual-pol images.  They only overlap ~2 to 3% at the edges. When I load the *.tiff one-by-one in OpenEV viewer.

However when I load the 'manifest.safe' in OpenEV viewer, GDAL georeferencing is wrong. Three GTiff images are overlapped almost 100%.  When I run 'gdalinfo manifest.safe', the results only show GCPs from the 3rd image (s1a-iw3-slc-vh-########-003.tiff).



When the Sentinel-1 was developed, were SLC cases tested?



Also the new RCM is going to use the 'manifest.safe' file too. There could be a conflict, if file name 'manifest.safe' is used to identify the sensors.



Thanks,
Shawn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180115/e8769c21/attachment.html>

From SGONG at mdacorporation.com  Mon Jan 15 13:05:59 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Mon, 15 Jan 2018 21:05:59 +0000
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
In-Reply-To: <2559881.ZcXFGEWL3U@even-i700>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>
 <2805257.IuXUUOmlMO@even-i700>
 <7DCBC135929FF74E8A5488B1814AC6BC3FFB6AED@exbermd02.ds.mda.ca>,
 <2559881.ZcXFGEWL3U@even-i700>
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FFB6B09@exbermd02.ds.mda.ca>

The SPOT7 datasets are more than 2GB. Is theer a way to ftp upload to gdal dev?




Thanks,
Shawn
________________________________
From: Even Rouault [even.rouault at spatialys.com]
Sent: January-15-18 3:58 PM
To: Gong, Shawn
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon


On lundi 15 janvier 2018 20:51:44 CET Gong, Shawn wrote:

> Hi Even,

>

>

>

> I rebuilt GDAL with your code change in DIMAP driver. And it didn't work:

> gdalinfo returns the same output.



Untested code rarely works at the first attempt, so not surprised :-)



>

> That being said, I still would like to see the DIMAP driver updated so that

> I don't have to run gdalwarp. So I can simply drag and drop the *.XML onto

> OpenEV viewer.



Access to the datasset would be needed



>

>

> Thanks,

> Shawn

> ________________________________

> From: Even Rouault [even.rouault at spatialys.com]

> Sent: January-13-18 10:15 AM

> To: gdal-dev at lists.osgeo.org

> Cc: Gong, Shawn

> Subject: Re: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon

>

>

> Shawn,

>

>

>

> the driver shouldn't likely report the geotransform in that case, but just

> the RPC. You can try to warp it with gdalwarp -rpc

>

>

>

> I've blindly pushed a untested fix in trunk so that the geotransform is not

> reported in your case:

>

> https://trac.osgeo.org/gdal/changeset/41264

>

>

>

>

>

> Even

>

>

>

> --

>

> Spatialys - Geospatial professional services

>

> http://www.spatialys.com





--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180115/d0b8f777/attachment-0001.html>

From mikeucfl at gmail.com  Mon Jan 15 13:46:09 2018
From: mikeucfl at gmail.com (mikeucfl)
Date: Mon, 15 Jan 2018 14:46:09 -0700 (MST)
Subject: [gdal-dev] Resulting geometry from OGRGeometry::difference somehow
 got simplified
Message-ID: <1516052769004-0.post@n6.nabble.com>

I need some help trying to make sense of an issue I'm running into using
OGRGeometry::difference. I have some pretty large geometries (spans across
multiple longitude/latitude values) in which I am utilizing the difference
operation in OGRGeometry to cut holes in and get the resulting geometry.
This has worked for some time, but one of my datasets returns a result that
looks as if the geometry got heavily simplified. I'm not a great artist but
here's a drawn example of what I'm talking about: 
<http://osgeo-org.1560.x6.nabble.com/file/t381880/5U0bWIg.png> 
(the black is what the resulting geometry should look like, and the red is
what it actually looks like).

I've done testing by trying to reduce the size and or number of interior
rings for the geometry that is being used in the difference operation, which
seems to work but I'm not 100% convinced that those variables are the issue.
Does anyone know of any limitations with geometry sizes, interior ring
sizes, or possibly vert counts with GDAL/GEOS? Or any other ideas as to what
my issue could be? My software is written in c++ using Visual Studio 2015
(x64) and I'm linking to GDAL v2.1.3 with GEOS 3.5.0 (have also tried GDAL
2.0.1 with same results). Thanks.



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From mikeucfl at gmail.com  Mon Jan 15 15:49:57 2018
From: mikeucfl at gmail.com (mikeucfl)
Date: Mon, 15 Jan 2018 16:49:57 -0700 (MST)
Subject: [gdal-dev] Resulting geometry from OGRGeometry::difference
 somehow got simplified
In-Reply-To: <1516052769004-0.post@n6.nabble.com>
References: <1516052769004-0.post@n6.nabble.com>
Message-ID: <1516060197261-0.post@n6.nabble.com>

Just to add some more information.. upon some further inspection it seems all
the values are snapped to a grid. All my geometry is in a WGS84 (EPSG:4326)
projection, and the values are snapped to a 0.01 lat/long grid. I don't do
anything to set a tolerance or anything for these values, or see where I
could set these from the GDAL layer (as the driver I'm using wraps most of
the functionality for the FGDB database using the ESRI FileGDB driver)



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From davide.demarchi at yahoo.it  Mon Jan 15 23:25:34 2018
From: davide.demarchi at yahoo.it (Davide De Marchi)
Date: Tue, 16 Jan 2018 07:25:34 +0000 (UTC)
Subject: [gdal-dev] Help: No coordinate conversion using
 OGRSpatialReference/OGRCoordinateTransformation in version 2.2.3
In-Reply-To: <1798741174.5615133.1516019694087@mail.yahoo.com>
References: <1798741174.5615133.1516019694087.ref@mail.yahoo.com>
 <1798741174.5615133.1516019694087@mail.yahoo.com>
Message-ID: <1292159177.6586681.1516087534471@mail.yahoo.com>




 Dear GDAL list,
I'm having problems using the standard way to convert coordinate points from a source to a target SRS. After updating to version 2.2.3, code that always worked started to leave the input coordinate unchanged, without giving any error or warning.This is the code I use:
bool ConvertPoint(int InputEPSG, int OutputEPSG, double *x, double *y){Â bool res = false;
Â OGRSpatialReference oSourceSRS, oTargetSRS;Â OGRCoordinateTransformation *poCT;Â  Â Â Â if( oSourceSRS.importFromEPSG(InputEPSG)Â  != OGRERR_NONE ) printf("OGRSpatialReference failed to importFromEPSG %d.\n",InputEPSG);Â Â if( oTargetSRS.importFromEPSG(OutputEPSG) != OGRERR_NONE ) printf("OGRSpatialReference failed to importFromEPSG %d.\n",OutputEPSG);Â 
Â poCT = OGRCreateCoordinateTransformation(&oSourceSRS, &oTargetSRS);Â if( !poCT )Â  Â {Â  Â  printf("OGRCreateCoordinateTransformation failed.\n");Â  Â  return false;Â  Â }
Â double z = 0.0;
Â if( !poCT->Transform(1,x,y,&z) ) printf("Transformation failed.\n");Â else res = true;
Â delete poCT;Â return res;}
If I call, for instance:
double x = 12.5;double y = 43.0;ConvertPoint(4326, 32633, &x, &y);
x and y remain unchanged and no error or warning is printed.
I tried to change the function by looking at the code of gdaltransform app:
bool ConvertPoint(int InputEPSG, int OutputEPSG, double *x, double *y){Â bool res = false;
Â GDALTransformerFunc pfnTransformer = nullptr;Â voidÂ  Â  Â  Â  Â  Â  Â  Â *hTransformArg;Â intÂ  Â  Â  Â  Â  Â  Â  Â  Â bInverse = FALSE;Â charÂ  Â  Â  Â  Â  Â  Â  **papszTOÂ  = nullptr;
Â char fromBuffer[100], toBuffer[100];Â sprintf(fromBuffer,"EPSG:%d",InputEPSG);Â sprintf(toBuffer,Â  "EPSG:%d",OutputEPSG);
Â char *pszFROM = SanitizeSRS(fromBuffer);Â papszTO = CSLSetNameValue(papszTO, "SRC_SRS", pszFROM);Â CPLFree(pszFROM);
Â char *pszTO = SanitizeSRS(toBuffer);Â papszTO = CSLSetNameValue(papszTO, "DST_SRS", pszTO);Â CPLFree(pszTO);
Â pfnTransformer = GDALGenImgProjTransform;Â hTransformArg = GDALCreateGenImgProjTransformer2(nullptr, nullptr, papszTO);Â CSLDestroy(papszTO);Â if( hTransformArg == nullptr )Â  Â {Â  Â  printf("GDALCreateGenImgProjTransformer2 failed.\n");Â  Â  return false;Â  Â }
Â double z = 0.0;
Â int bSuccess = TRUE;Â if( pfnTransformer(hTransformArg, bInverse, 1, x, y, &z, &bSuccess ) && bSuccess ) res = true;Â else printf("Transformation failed.\n");
Â GDALDestroyGenImgProjTransformer(hTransformArg);
Â return res;}
In this case everything works well and the coordinates are transformed.
What I'm doing wrong in my first original function?Any hints?
Thank you!
Davide De Marchi (JRC European Commission)

   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180116/ad881b21/attachment.html>

From rasikachinchwade31 at gmail.com  Mon Jan 15 23:51:56 2018
From: rasikachinchwade31 at gmail.com (Rasika Chinchwade)
Date: Tue, 16 Jan 2018 13:21:56 +0530
Subject: [gdal-dev] GDALWARP Error
Message-ID: <CA+tneBS4EVTnzH_3uf24PoNPUonNB2YkX9ns5hf+kH2V1UBtXA@mail.gmail.com>

Please guide me so that I will not stuck at this problem.


I have used STD dataset of INSAT-3D
https://www.mosdac.gov.in/catalog?field_satellitenode_nid=69
you can download the datset from www.mosdac.gov.in
HEM daily ,LST product. product of INSAT3D .This all are in disc shape.
I am trying to convert the .h5 dataset to GeoTiff format using gdal.
This products are giving me lat,lon in 2D array which are unevenly spaced
and also having scaling factor of 0.01

GDALINFO:
  gdal version is 2.2.1 released on 2017-06-03

Why I am getting this error while performing same operation on same dataset
given on link

https://gis.stackexchange.com/questions/253884/projecting-
insat3d-l1b-data-from-hdf5-to-geotiff

ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: tolerance condition error
ERROR 1: Reprojection failed, err = -20, further errors will be suppressed
on the transform object.
0...10...20...30...40...50...60...70...80...90...100 - done.


>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180116/64be0e0c/attachment-0001.html>

From denadai at fbk.eu  Tue Jan 16 01:51:24 2018
From: denadai at fbk.eu (Marco De Nadai)
Date: Tue, 16 Jan 2018 10:51:24 +0100
Subject: [gdal-dev] gdal_translate precision error
In-Reply-To: <1515420315878-0.post@n6.nabble.com>
References: <CADs_D=m6ztv_Fm4GoQxy0h_ttSgsrQdC-4qscuPbe-L9UkwdEw@mail.gmail.com>
 <1515420315878-0.post@n6.nabble.com>
Message-ID: <CADs_D=mDWz9riMLuXZth0yvxSLj2uQBssEa-vZ1Xyn3bOQRYpg@mail.gmail.com>

Thanks. It seems it was a pixel-alignment error. I solved by passing
coordinates aligned to pixels to gdal_translate

On Mon, Jan 8, 2018 at 3:05 PM, jratike80 <
jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Marco De Nadai wrote
> > Dear gdal community,
> > I'm a new user of gdal and I recently had a problem with precision. I
> > tried
> > to translate a big GeoTIFF to a smaller one, specifying the extent of the
> > window in this way:
>
> Hi,
>
> It seems that you asked the same question in
> https://gis.stackexchange.com/questions/267112/gdal-
> translate-numeric-accuracy-so-bad-80-meters-why
> and you were asked to give more details about your source data. I consider
> that it was a good suggestion.
>
> -Jukka Rahkonen-
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
*Marco De Nadai*
*Ph.D. student at Fondazione Bruno Kessler (FBK) - *
*MobS Unit*
*University of Trento*
Via Sommarive, 18 - Povo
38123 Trento (TN) - Italy

E-mail: denadai at fbk.eu
LinkedIn: https://it.linkedin.com/in/marcodenadai

Latest research paper: The Death and Life of Great Italian Cities: A Mobile
Phone Data Perspective
<https://www.technologyreview.com/s/601107/data-mining-reveals-the-four-urban-conditions-that-create-vibrant-city-life/>

-- 
--
Le informazioni contenute nella presente comunicazione sono di natura privata 
e come tali sono da considerarsi riservate ed indirizzate esclusivamente ai 
destinatari indicati e per le finalitÃ  strettamente legate al relativo 
contenuto. Se avete ricevuto questo messaggio per errore, vi preghiamo di 
eliminarlo e di inviare una comunicazione allâindirizzo e-mail del mittente.
--
The information transmitted is intended only for the person or entity to 
which it is addressed and may contain confidential and/or privileged 
material. If you received this in error, please contact the sender and 
delete the material.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180116/79e18419/attachment.html>

From vincent.mora at oslandia.com  Tue Jan 16 04:06:58 2018
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Tue, 16 Jan 2018 13:06:58 +0100
Subject: [gdal-dev] First attempt to use raster - need help
In-Reply-To: <7a3d324f-0d7a-fa77-a82f-4e6d0a68ebcd@swoodbridge.com>
References: <7a3d324f-0d7a-fa77-a82f-4e6d0a68ebcd@swoodbridge.com>
Message-ID: <10161d65-9464-08cb-7940-5005d54308c9@oslandia.com>

Hi Steve,

I think I'd try to first transform rasters linework into vector linework
with gdal_contour (1 level) then import the shapefile into postgis.

I'd try to snap to grid, remove duplicated points, collect and unary
union, and lastly simplify and polygonize.

If you have sfcgal installed, you can also try to polygonize the vector
linework (polygons need to be closes, by easily achieved by adding a 1
pixel background-colored border to the starting image) and use
straight-skeleton or approx medial axis on that.

Good luck,

V.



Le 13/01/2018 Ã  18:01, Stephen Woodbridge a Ã©critÂ :
> Hi all,
>
> I'm trying to use the raster functions for the first time. I have a
> simple black and white image with some polygons drawn on it. and I
> want to extract the polygons as geometry.
>
> $ gdalinfo -hist 12322240_lines.png
> Driver: PNG/Portable Network Graphics
> Files: 12322240_lines.png
> Â Â Â Â Â Â  12322240_lines.png.aux.xml
> Size is 600, 800
> Coordinate System is `'
> Corner Coordinates:
> Upper LeftÂ  (Â Â Â  0.0,Â Â Â  0.0)
> Lower LeftÂ  (Â Â Â  0.0,Â  800.0)
> Upper Right (Â  600.0,Â Â Â  0.0)
> Lower Right (Â  600.0,Â  800.0)
> CenterÂ Â Â Â Â  (Â  300.0,Â  400.0)
> Band 1 Block=600x1 Type=Byte, ColorInterp=Gray
> Â  256 buckets from -0.5 to 255.5:
> Â  474137 5863 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
> Â  Image Structure Metadata:
> Â Â Â  NBITS=1
>
> the background is the 474137bucket and the line work is the 5863 bucket.
>
> $ raster2pgsql -t auto -P -c -f img -F -n file -I -M *.png |
> /usr/lib/postgresql/9.5/bin/psql -U postgres -h localhost -p 5435
> test_sketch
>
> I'm loading 2 PNG images in this example, about ultimately I will have
> 100-1000s of images to process and extract the line work.
>
> SELECT (md).*, (bmd).*
> Â FROM (SELECT ST_Metadata(img) AS md,
> Â Â Â Â Â Â Â Â Â Â Â Â Â  ST_BandMetadata(img) AS bmd
> Â Â Â Â Â Â  FROM "12322240_lines" LIMIT 1
> Â Â Â Â Â  ) foo;
>
> -- 0;0;30;32;1;-1;0;0;0;1;"8BUI";;f;""
>
> select rid, val, st_astext(geom) as wkt
> from (
> select rid, dp.*
> from "12322240_lines", lateral st_dumpaspolygons(img, 1, true) as dp
> ) as foo;
>
> This generates 1349 rows. So it appears to be processing these an a
> tile by tile basis not on the whole image. How do I get the polygons
> that are represented by the sketch. Assuming that the sketch lines are
> 1 or 2 pixels wide, I presume that I would get the polygon around
> those pixels. Do I need to then skeletonize that to get the original
> lines?
>
> select * from "12322240_lines";
>
> generates 100 rows.
>
>
> Any thoughts on how to best approach this would be appreciated.
>
> Thanks,
>
> Â  -Steve
>
>
> ---
> This email has been checked for viruses by Avast antivirus software.
> https://www.avast.com/antivirus
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



From jukka.rahkonen at maanmittauslaitos.fi  Tue Jan 16 05:01:39 2018
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Tue, 16 Jan 2018 13:01:39 +0000
Subject: [gdal-dev] Cloud Optimized Vectors?
Message-ID: <c65912033ef146b1b1fe1e62fd5d3656@C119S212VM042.msvyvi.vaha.local>

Hi,

Cloud optimised tiffs hosted on a HTTP file server work pretty well without a need to set up a special tile/WMS/WCS server
https://trac.osgeo.org/gdal/wiki/CloudOptimizedGeoTIFF

That made me think that how would a Cloud Optimized vector format look like? Obviously it should offer fast access to spatial index which delivers offsets to data records of perhaps spatially organized chunks of data. Or is there already some format that suits relatively well for BBOX based queries over HTTP?

-Jukka Rahkonen-

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180116/81cc3f1c/attachment.html>

From rasikachinchwade31 at gmail.com  Tue Jan 16 05:24:27 2018
From: rasikachinchwade31 at gmail.com (Rasika Chinchwade)
Date: Tue, 16 Jan 2018 18:54:27 +0530
Subject: [gdal-dev] GDALWARP Error
In-Reply-To: <CA+tneBS4EVTnzH_3uf24PoNPUonNB2YkX9ns5hf+kH2V1UBtXA@mail.gmail.com>
References: <CA+tneBS4EVTnzH_3uf24PoNPUonNB2YkX9ns5hf+kH2V1UBtXA@mail.gmail.com>
Message-ID: <CA+tneBRqN5s2jJ41ye7AO6JYn7WLtCmKrNjL=qVv_ZKjxftVXQ@mail.gmail.com>

Please find attachment of files

â
 3DIMG_01JAN2018_0000_L3B_HEM_DLY.h5
<https://drive.google.com/file/d/1ToPqBu4Gnw4DfXZCMkBBO675mfP_R6I3/view?usp=drive_web>
ââ
 3DIMG_01JAN2018_0130_L2B_LST.h5
<https://drive.google.com/file/d/1QmvrYxhIpI2ks-OsSlBpuDpO7eLbQPjF/view?usp=drive_web>
â

On Tue, Jan 16, 2018 at 1:21 PM, Rasika Chinchwade <
rasikachinchwade31 at gmail.com> wrote:

> Please guide me so that I will not stuck at this problem.
>
>
> I have used STD dataset of INSAT-3D
> https://www.mosdac.gov.in/catalog?field_satellitenode_nid=69
> you can download the datset from www.mosdac.gov.in
> HEM daily ,LST product. product of INSAT3D .This all are in disc shape.
> I am trying to convert the .h5 dataset to GeoTiff format using gdal.
> This products are giving me lat,lon in 2D array which are unevenly spaced
> and also having scaling factor of 0.01
>
> GDALINFO:
>   gdal version is 2.2.1 released on 2017-06-03
>
> Why I am getting this error while performing same operation on same
> dataset given on link
>
> https://gis.stackexchange.com/questions/253884/projecting-in
> sat3d-l1b-data-from-hdf5-to-geotiff
>
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: tolerance condition error
> ERROR 1: Reprojection failed, err = -20, further errors will be suppressed
> on the transform object.
> 0...10...20...30...40...50...60...70...80...90...100 - done.
>
>
>>
>>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180116/8e5b23be/attachment-0001.html>

From andre+joost at nurfuerspam.de  Tue Jan 16 06:30:34 2018
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Tue, 16 Jan 2018 15:30:34 +0100
Subject: [gdal-dev] GDALWARP Error
In-Reply-To: <CA+tneBRqN5s2jJ41ye7AO6JYn7WLtCmKrNjL=qVv_ZKjxftVXQ@mail.gmail.com>
References: <CA+tneBS4EVTnzH_3uf24PoNPUonNB2YkX9ns5hf+kH2V1UBtXA@mail.gmail.com>
 <CA+tneBRqN5s2jJ41ye7AO6JYn7WLtCmKrNjL=qVv_ZKjxftVXQ@mail.gmail.com>
Message-ID: <p3l2f1$u6n$1@blaine.gmane.org>

Am 16.01.18 um 14:24 schrieb Rasika Chinchwade:
> Please find attachment of files
>
> â
>   3DIMG_01JAN2018_0000_L3B_HEM_DLY.h5
> <https://drive.google.com/file/d/1ToPqBu4Gnw4DfXZCMkBBO675mfP_R6I3/view?usp=drive_web>
> ââ
>   3DIMG_01JAN2018_0130_L2B_LST.h5
> <https://drive.google.com/file/d/1QmvrYxhIpI2ks-OsSlBpuDpO7eLbQPjF/view?usp=drive_web>
> â
>

It works for me with the last 4 commands given in 
https://gis.stackexchange.com/questions/253884/projecting-insat3d-l1b-data-from-hdf5-to-geotiff

Note that you have to edit the mir.vrt file with the Geolocation section 
in the answer to 
https://gis.stackexchange.com/questions/154339/unable-to-warp-hdf5-files:

<metadata domain="GEOLOCATION">
      <mdi key="X_DATASET">lon.vrt</mdi>
      <mdi key="X_BAND">1</mdi>
      <mdi key="Y_DATASET">lat.vrt</mdi>
      <mdi key="Y_BAND">1</mdi>
      <mdi key="PIXEL_OFFSET">0</mdi>
      <mdi key="LINE_OFFSET">0</mdi>
      <mdi key="PIXEL_STEP">1</mdi>
      <mdi key="LINE_STEP">1</mdi>
    </metadata>

I removed the GCP section of the mir.vrt file, and there is no error 
message anymore.

HTH,
Andre Joost



From mikeucfl at gmail.com  Tue Jan 16 11:44:34 2018
From: mikeucfl at gmail.com (mikeucfl)
Date: Tue, 16 Jan 2018 12:44:34 -0700 (MST)
Subject: [gdal-dev] Resulting geometry from OGRGeometry::difference
 somehow got simplified
In-Reply-To: <1516060197261-0.post@n6.nabble.com>
References: <1516052769004-0.post@n6.nabble.com>
 <1516060197261-0.post@n6.nabble.com>
Message-ID: <1516131874684-0.post@n6.nabble.com>

Got permission to show the actual data: 
<http://osgeo-org.1560.x6.nabble.com/file/t381880/RUklfeY.png>  (left side
is what the data should look like, red is what the data looks like after
calling the difference operation).



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From rasikachinchwade31 at gmail.com  Tue Jan 16 23:28:19 2018
From: rasikachinchwade31 at gmail.com (Rasika Chinchwade)
Date: Wed, 17 Jan 2018 12:58:19 +0530
Subject: [gdal-dev] gdal-dev Digest, Vol 164, Issue 23
In-Reply-To: <mailman.13.1516132802.29020.gdal-dev@lists.osgeo.org>
References: <mailman.13.1516132802.29020.gdal-dev@lists.osgeo.org>
Message-ID: <CA+tneBTdBN3_BgqwOM1u=15dOy-eoKua-1OTPvvXiNd6M7JH2w@mail.gmail.com>

Thank you sir for your reply.Still I am not getting the problem.I followed
the steps suggested. Though it is not giving error but also not converting
the file into proper projection system,after observing the parameters of
output tiff file its
protection system is Arbitrary(pixel based)
resloution is 0.12x0.12 Degrees
Datum:unkown
UL map:0.843,81.042

Instead of this I want projection system Geographic Lat/long
pixel size: 0.04x0.04 degrees as this datasets having 4km resloution
Datum:WGS-1984

Kindly tell me how I can do this.

thank you

On Wed, Jan 17, 2018 at 1:30 AM, <gdal-dev-request at lists.osgeo.org> wrote:

> Send gdal-dev mailing list submissions to
>         gdal-dev at lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
> or, via email, send a message with subject or body 'help' to
>         gdal-dev-request at lists.osgeo.org
>
> You can reach the person managing the list at
>         gdal-dev-owner at lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of gdal-dev digest..."
>
>
> Today's Topics:
>
>    1. Re: GDALWARP Error (Andre Joost)
>    2. Re: Resulting geometry from OGRGeometry::difference somehow
>       got simplified (mikeucfl)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 16 Jan 2018 15:30:34 +0100
> From: Andre Joost <andre+joost at nurfuerspam.de>
> To: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] GDALWARP Error
> Message-ID: <p3l2f1$u6n$1 at blaine.gmane.org>
> Content-Type: text/plain; charset=utf-8; format=flowed
>
> Am 16.01.18 um 14:24 schrieb Rasika Chinchwade:
> > Please find attachment of files
> >
> > â
> >   3DIMG_01JAN2018_0000_L3B_HEM_DLY.h5
> > <https://drive.google.com/file/d/1ToPqBu4Gnw4DfXZCMkBBO675mfP_
> R6I3/view?usp=drive_web>
> > ââ
> >   3DIMG_01JAN2018_0130_L2B_LST.h5
> > <https://drive.google.com/file/d/1QmvrYxhIpI2ks-
> OsSlBpuDpO7eLbQPjF/view?usp=drive_web>
> > â
> >
>
> It works for me with the last 4 commands given in
> https://gis.stackexchange.com/questions/253884/projecting-
> insat3d-l1b-data-from-hdf5-to-geotiff
>
> Note that you have to edit the mir.vrt file with the Geolocation section
> in the answer to
> https://gis.stackexchange.com/questions/154339/unable-to-warp-hdf5-files:
>
> <metadata domain="GEOLOCATION">
>       <mdi key="X_DATASET">lon.vrt</mdi>
>       <mdi key="X_BAND">1</mdi>
>       <mdi key="Y_DATASET">lat.vrt</mdi>
>       <mdi key="Y_BAND">1</mdi>
>       <mdi key="PIXEL_OFFSET">0</mdi>
>       <mdi key="LINE_OFFSET">0</mdi>
>       <mdi key="PIXEL_STEP">1</mdi>
>       <mdi key="LINE_STEP">1</mdi>
>     </metadata>
>
> I removed the GCP section of the mir.vrt file, and there is no error
> message anymore.
>
> HTH,
> Andre Joost
>
>
>
>
> ------------------------------
>
> Message: 2
> Date: Tue, 16 Jan 2018 12:44:34 -0700 (MST)
> From: mikeucfl <mikeucfl at gmail.com>
> To: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] Resulting geometry from
>         OGRGeometry::difference somehow got simplified
> Message-ID: <1516131874684-0.post at n6.nabble.com>
> Content-Type: text/plain; charset=us-ascii
>
> Got permission to show the actual data:
> <http://osgeo-org.1560.x6.nabble.com/file/t381880/RUklfeY.png>  (left side
> is what the data should look like, red is what the data looks like after
> calling the difference operation).
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>
>
> ------------------------------
>
> Subject: Digest Footer
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> ------------------------------
>
> End of gdal-dev Digest, Vol 164, Issue 23
> *****************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180117/2ab0bd48/attachment.html>

From lauri.kajan at gmail.com  Wed Jan 17 00:42:46 2018
From: lauri.kajan at gmail.com (Lauri Kajan)
Date: Wed, 17 Jan 2018 10:42:46 +0200
Subject: [gdal-dev] Opening a folder of shape files with different encoding
	as a data set
Message-ID: <CAKWoFMKcMiX0BibN5+42meRPQN9M9zNpzDeFdH4DZ0rY1fV8mw@mail.gmail.com>

Hi all,

Is it possible to define shape file encoding per layer when reading a
folder/zip as a data set?

My current code reads a zip file containing shape files as a data set and
then iterates containing layers. The problem I have is that the data
provider changed their release so that shape files in zip may use different
encoding.

Do I have any other solutions than opening each shape file separately?



Thanks,

-Lauri
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180117/e381cbd4/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jan 17 02:00:09 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 17 Jan 2018 03:00:09 -0700 (MST)
Subject: [gdal-dev] Opening a folder of shape files with different
 encoding as a data set
In-Reply-To: <CAKWoFMKcMiX0BibN5+42meRPQN9M9zNpzDeFdH4DZ0rY1fV8mw@mail.gmail.com>
References: <CAKWoFMKcMiX0BibN5+42meRPQN9M9zNpzDeFdH4DZ0rY1fV8mw@mail.gmail.com>
Message-ID: <1516183209733-0.post@n6.nabble.com>

Lauri Kajan wrote
> Hi all,
> 
> Is it possible to define shape file encoding per layer when reading a
> folder/zip as a data set?
> 
> My current code reads a zip file containing shape files as a data set and
> then iterates containing layers. The problem I have is that the data
> provider changed their release so that shape files in zip may use
> different
> encoding.
> 
> Do I have any other solutions than opening each shape file separately?
> 
> 
> 
> Thanks,
> 
> -Lauri

Hi,

I would have a try with OGR virtual format http://www.gdal.org/drv_vrt.html.
Include OpenOptions element on each layer and use the ENCODING OpenOption
http://www.gdal.org/drv_shapefile.html.

-Jukka Rahkonen-




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Thu Jan 18 06:07:33 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 18 Jan 2018 15:07:33 +0100
Subject: [gdal-dev] Cloud Optimized Vectors?
In-Reply-To: <c65912033ef146b1b1fe1e62fd5d3656@C119S212VM042.msvyvi.vaha.local>
References: <c65912033ef146b1b1fe1e62fd5d3656@C119S212VM042.msvyvi.vaha.local>
Message-ID: <1920225.NXQVBVWVAF@even-i700>

On mardi 16 janvier 2018 13:01:39 CET Rahkonen Jukka (MML) wrote:
> Hi,
> 
> Cloud optimised tiffs hosted on a HTTP file server work pretty well without
> a need to set up a special tile/WMS/WCS server
> https://trac.osgeo.org/gdal/wiki/CloudOptimizedGeoTIFF
> 
> That made me think that how would a Cloud Optimized vector format look like?
> Obviously it should offer fast access to spatial index which delivers
> offsets to data records of perhaps spatially organized chunks of data. Or
> is there already some format that suits relatively well for BBOX based
> queries over HTTP?

I guess shapefiles with qix should not be too bad.
GeoPackage could probably do too
For display purposes, MapBox Vector Tiles as Z/X/Y hiearchy of files should also work. By the 
way, I'm currently developing the read side of a OGR MVT driver.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180118/6597aa4e/attachment.html>

From even.rouault at spatialys.com  Thu Jan 18 06:44:32 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 18 Jan 2018 15:44:32 +0100
Subject: [gdal-dev] Resulting geometry from OGRGeometry::difference
	somehow got simplified
In-Reply-To: <1516060197261-0.post@n6.nabble.com>
References: <1516052769004-0.post@n6.nabble.com>
 <1516060197261-0.post@n6.nabble.com>
Message-ID: <1665900.x00BRY7lc1@even-i700>

On lundi 15 janvier 2018 16:49:57 CET mikeucfl wrote:
> Just to add some more information.. upon some further inspection it seems
> all the values are snapped to a grid. All my geometry is in a WGS84
> (EPSG:4326) projection, and the values are snapped to a 0.01 lat/long grid.
> I don't do anything to set a tolerance or anything for these values, or see
> where I could set these from the GDAL layer (as the driver I'm using wraps
> most of the functionality for the FGDB database using the ESRI FileGDB
> driver)

The FileGDB format using integer storage with a precision for coordinates. Perhaps this 
is a missconfiguration of this precision when you have created your FGDB database ?
I guess you would have the same issue if you just read or ogr2ogr the source layer 
without doing any processing on it.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180118/283eda9c/attachment.html>

From even.rouault at spatialys.com  Thu Jan 18 11:42:24 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 18 Jan 2018 20:42:24 +0100
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC3FFB6B09@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>
 <2559881.ZcXFGEWL3U@even-i700>
 <7DCBC135929FF74E8A5488B1814AC6BC3FFB6B09@exbermd02.ds.mda.ca>
Message-ID: <1710855.6NGuWWzcQj@even-i700>

On lundi 15 janvier 2018 21:05:59 CET Gong, Shawn wrote:
> The SPOT7 datasets are more than 2GB. 

I've pushed another fix tested against the test dataset you 
provided to me.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180118/8ab747e4/attachment.html>

From mikeucfl at gmail.com  Thu Jan 18 20:39:28 2018
From: mikeucfl at gmail.com (mikeucfl)
Date: Thu, 18 Jan 2018 21:39:28 -0700 (MST)
Subject: [gdal-dev] Resulting geometry from OGRGeometry::difference
 somehow got simplified
In-Reply-To: <1665900.x00BRY7lc1@even-i700>
References: <1516052769004-0.post@n6.nabble.com>
 <1516060197261-0.post@n6.nabble.com> <1665900.x00BRY7lc1@even-i700>
Message-ID: <1516336768660-0.post@n6.nabble.com>

So the geometry before using the difference operation looks good (geodetic
values go up to 8-9 decimal places), and then the resulting geometry is
truncated to two (this is before placing in any file geodatabase) as well. I
have checked the source feature classes and verified that the precision is
set to 0.00000001, so looks good to me there.

One odd thing I noticed too is I output the two problematic geometries to a
new file geodatabase so I could iterate on the problem quicker, but when I
did that it tells me one of the geometries is invalid and the resulting
difference geometry is NULL. I had to do a geometry->buffer(0.0) to repair
it, and got valid geometry coming out.. but when I run it from the original
source all the geometries say they're valid and even forcing a buffer(0.0)
doesn't seem to fix it.

Really odd problem, not sure what's going on.. especially since my small
test case doesn't seem to re-create what the large dataset does. I'm
wondering if writing the geometry out is not the exact same as it was in
memory and possibly modifying the values? That would make some sense as to
why I see different results.. but again, kinda lost on what's going on.



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From norman.barker at gmail.com  Fri Jan 19 18:07:13 2018
From: norman.barker at gmail.com (Norman Barker)
Date: Fri, 19 Jan 2018 18:07:13 -0800
Subject: [gdal-dev] cog samples
Message-ID: <CAN_Dn-GEayXYGruJP+pKGLA73oAtQKnpebGxf5RwaZqmJX6zHg@mail.gmail.com>

Hi,

is the original sentinel product described here -
https://trac.osgeo.org/gdal/wiki/CloudOptimizedGeoTIFF

available for download anywhere?

I would like to run some tests with the same dataset. I am able to get the
output tiffs (thanks Even for hosting these) but not the original input.

Thanks,

Norman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180119/05c6d89b/attachment.html>

From lukepinnerau at gmail.com  Fri Jan 19 22:01:50 2018
From: lukepinnerau at gmail.com (Luke)
Date: Fri, 19 Jan 2018 23:01:50 -0700 (MST)
Subject: [gdal-dev] cog samples
In-Reply-To: <CAN_Dn-GEayXYGruJP+pKGLA73oAtQKnpebGxf5RwaZqmJX6zHg@mail.gmail.com>
References: <CAN_Dn-GEayXYGruJP+pKGLA73oAtQKnpebGxf5RwaZqmJX6zHg@mail.gmail.com>
Message-ID: <1516428110102-0.post@n6.nabble.com>

Possibly from
http://sentinel-s2-l1c.s3-website.eu-central-1.amazonaws.com/#products/2017/1/2/S2A_MSIL1C_20170102T111442_N0204_R137_T30TXT_20170102T111441/



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From ramotswa at gmail.com  Sat Jan 20 04:04:42 2018
From: ramotswa at gmail.com (Tobias Reinicke)
Date: Sat, 20 Jan 2018 12:04:42 +0000
Subject: [gdal-dev] Compile gdal with expat support on AWS Linux
Message-ID: <CAPitpCZUjSqFMbW52bE8v7yGikFHSQvbCav0Y+iNRwuiUL+tmA@mail.gmail.com>

Hello,

I've been trying to get gdal compiled to be able to read GML files - but I
keep on getting expat / Xerces errors.
I am working on an AWS AMI that matches the AWS Lambda environment (as I'm
trying to get this working in Lambda really).(AMI:
amzn-ami-hvm-2017.03.1.20170812-x86_64-gp2 / amiId: ami-ebd02392)

I'm following these steps;

wget
http://sourceforge.net/projects/expat/files/expat/2.1.0/expat-2.1.0.tar.gz
tar -xzf expat-2.1.0.tar.gz
cd expat-2.1.0/
./configure --prefix=/tmp
make
make install

wget http://download.osgeo.org/gdal/2.2.3/gdal-2.2.3.tar.gz
tar xzf gdal-2.2.3.tar.gz
cd gdal-2.2.3
./configure --without-ld-shared --disable-shared --enable-static
--with-curl --prefix /tmp/gdal --with-expat=/tmp/
make
make install

In the gdal ./configure step I am getting the output;

checking for Expat XML Parser headers in /tmp//include... found
checking for Expat XML Parser... yes
checking if Expat XML Parser version is >= 1.95.0... yes

and later
Expat support:             yes

I then run make + make install, and to test I just do;
./gdal-2.2.3/apps/ogrinfo mygmlfile
which gives me the error;

ERROR 1: Unable to create Xerces C++ or Expat based GML reader, Xerces or
Expat support not configured into GDAL/OGR.
ERROR 1: File data/tmpX9fQKT/HP6000 appears to be GML but the GML reader
can't
be instantiated, likely because Xerces or Expat support was
not configured in.
FAILURE:
Unable to open datasource `data/tmpX9fQKT/HP6000' with the following
drivers.


Does anybody have an idea what I might be doing wrong? Any tips greatly
received.

Toby
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180120/0a761746/attachment.html>

From even.rouault at spatialys.com  Sat Jan 20 04:08:49 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 20 Jan 2018 13:08:49 +0100
Subject: [gdal-dev] Compile gdal with expat support on AWS Linux
In-Reply-To: <CAPitpCZUjSqFMbW52bE8v7yGikFHSQvbCav0Y+iNRwuiUL+tmA@mail.gmail.com>
References: <CAPitpCZUjSqFMbW52bE8v7yGikFHSQvbCav0Y+iNRwuiUL+tmA@mail.gmail.com>
Message-ID: <2837791.fsCikqf4uZ@even-i700>

On samedi 20 janvier 2018 12:04:42 CET Tobias Reinicke wrote:
> Hello,
> 
> I've been trying to get gdal compiled to be able to read GML files - but I
> keep on getting expat / Xerces errors.
> I am working on an AWS AMI that matches the AWS Lambda environment (as I'm
> trying to get this working in Lambda really).(AMI:
> amzn-ami-hvm-2017.03.1.20170812-x86_64-gp2 / amiId: ami-ebd02392)

Tobias,

If you did a first GDAL build without expat support, and then ran ./configure and make 
again, some files have not been recompiled, so do a "make clean" and build again.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180120/25ecac53/attachment.html>

From ramotswa at gmail.com  Sat Jan 20 04:23:17 2018
From: ramotswa at gmail.com (Tobias Reinicke)
Date: Sat, 20 Jan 2018 12:23:17 +0000
Subject: [gdal-dev] Compile gdal with expat support on AWS Linux
In-Reply-To: <2837791.fsCikqf4uZ@even-i700>
References: <CAPitpCZUjSqFMbW52bE8v7yGikFHSQvbCav0Y+iNRwuiUL+tmA@mail.gmail.com>
 <2837791.fsCikqf4uZ@even-i700>
Message-ID: <CAPitpCaBj0Oq5Mae7o0P3LnC1qCkyL+8G=dEL-gMJRA5hG3X0w@mail.gmail.com>

Yes that was it. Many thanks.
Toby

On 20 January 2018 at 12:08, Even Rouault <even.rouault at spatialys.com>
wrote:

> On samedi 20 janvier 2018 12:04:42 CET Tobias Reinicke wrote:
>
> > Hello,
>
> >
>
> > I've been trying to get gdal compiled to be able to read GML files - but
> I
>
> > keep on getting expat / Xerces errors.
>
> > I am working on an AWS AMI that matches the AWS Lambda environment (as
> I'm
>
> > trying to get this working in Lambda really).(AMI:
>
> > amzn-ami-hvm-2017.03.1.20170812-x86_64-gp2 / amiId: ami-ebd02392)
>
>
>
> Tobias,
>
>
>
> If you did a first GDAL build without expat support, and then ran
> ./configure and make again, some files have not been recompiled, so do a
> "make clean" and build again.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180120/2f0ee994/attachment.html>

From lukepinnerau at gmail.com  Sat Jan 20 13:06:05 2018
From: lukepinnerau at gmail.com (Luke)
Date: Sat, 20 Jan 2018 14:06:05 -0700 (MST)
Subject: [gdal-dev] cog samples
In-Reply-To: <1516428110102-0.post@n6.nabble.com>
References: <CAN_Dn-GEayXYGruJP+pKGLA73oAtQKnpebGxf5RwaZqmJX6zHg@mail.gmail.com>
 <1516428110102-0.post@n6.nabble.com>
Message-ID: <1516482365859-0.post@n6.nabble.com>

Sorry, that should be
http://sentinel-s2-l1c.s3-website.eu-central-1.amazonaws.com/#tiles/30/T/XT/2017/1/2/0/



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From palmerjnz at gmail.com  Sun Jan 21 22:27:48 2018
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Mon, 22 Jan 2018 19:27:48 +1300
Subject: [gdal-dev] Compiling ECW 3.3 on MacOSX
Message-ID: <CAA5WJYk8TxFfK2wFxLD0idiKi=aGUxVnfUxqwdPCoqQvm3SXyQ@mail.gmail.com>

Hi All

On Sat, Jan 6, 2018 at 11:21 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> > Also do you think
>
> > https://trac.osgeo.org/gdal/browser/branches/2.2/autotest/
> gdrivers/ecw.py
>
> > is setup to test the 3.3 SDK nicely? If so I can verify the patch on
> LINUX
>
> > and MacOSX with that.
>
>
>
> The tests pass fine (*) for me on Linux with ECW SDK 3.3 +
> libecwj2-3.3.patch. No idea on Mac
>
>
>

I finally got around to doing testing on MacOSX. Using the MacOSX patches
from John and the libecwj2-3.3.patch I was able to compile and successfully
test the ECW driver with GDAL 2.2.3 on MacOSX 10.13.2. Test results below:

python ecw.py
  TEST: ecw_init ... success
  TEST: ecw_1 ... success
  TEST: ecw_2 ... success
  TEST: ecw_3 ... success
  TEST: ecw_4 ... success
  TEST: ecw_5 ... success
  TEST: ecw_6 ... success
  TEST: ecw_7 ... Warning 6: NITF only supports WGS84 geographic and UTM
projections.

success
  TEST: ecw_8 ... success
  TEST: ecw_9 ... success
  TEST: ecw_10 ... success
  TEST: ecw_11 ... success
  TEST: ecw_12 ... success
  TEST: ecw_13 ... success
  TEST: ecw_14 ... success
  TEST: ecw_15 ... success
  TEST: ecw_16 ... success
  TEST: ecw_17 ... Diff at pixel (0, 0) : -5.000000
Diff at pixel (1, 0) : 1.000000
Diff at pixel (2, 0) : -2.000000
Diff at pixel (3, 0) : -1.000000
Diff at pixel (4, 0) : -3.000000
Diff at pixel (5, 0) : -3.000000
Diff at pixel (6, 0) : -1.000000
Diff at pixel (9, 0) : 2.000000
Diff at pixel (10, 0) : -3.000000
Diff at pixel (13, 7) : -6.000000
Max diff : 6
Number of diffs : 302
success
  TEST: ecw_18 ... success
  TEST: ecw_19 ... success
  TEST: ecw_20 ... success
  TEST: ecw_21 ... success
  TEST: ecw_22 ... success
  TEST: ecw_23 ... success
  TEST: ecw_24 ... success
  TEST: ecw_25 ... success
  TEST: ecw_26 ... success
  TEST: ecw_27 ... success
  TEST: ecw_28 ... success
  TEST: ecw_29 ... success
  TEST: ecw_30 ... success
  TEST: ecw_31 ... skip
  TEST: ecw_32 ... success
  TEST: ecw_33 ... success
  TEST: ecw_33_bis ... success
  TEST: ecw_34 ... skip
  TEST: ecw_35 ... success
  TEST: ecw_36 ... skip
  TEST: ecw_37 ... skip
  TEST: ecw_38 ... skip
  TEST: ecw_39 ... skip
  TEST: ecw_40 ... ERROR 1: An error has occurred: Error 86 "File is
invalid or corrupt"  file "" line 0
ERROR 1: Cannot open data/stefan_full_rgba_ecwv3_meta.ecw which looks like
a ECW format v3 file, that requires ECW SDK 5.0 or later
skip
  TEST: ecw_41 ... skip
  TEST: ecw_42 ... skip
  TEST: ecw_43 ... success
  TEST: ecw_44 ... skip
  TEST: ecw_45 ... success
  TEST: ecw_46 ... success
  TEST: ecw_47 ... skip
  TEST: ecw_48 ... success
  TEST: ecw_49 ... success
  TEST: ecw_online_1 ... As GDAL_DOWNLOAD_TEST_DATA environment variable is
not defined, some tests relying on data to downloaded from the Web will be
skipped
skip
  TEST: ecw_online_2 ... skip
  TEST: ecw_online_4 ... skip
  TEST: ecw_online_5 ... skip
  TEST: ecw_online_6 ... success
  TEST: ecw_online_7 ... skip
  TEST: ecw_cleanup ... success

Test Script: ecw
Succeeded: 42
Failed:    0 (0 blew exceptions)
Skipped:   16
Expected fail:0
Duration:  12.09s
As GDAL_DOWNLOAD_TEST_DATA environment variable is not defined, 5 tests
relying on data to downloaded from the Web have been skipped

The combined patch is here:
https://gist.github.com/palmerj/6035fa41b3c30ab573c12741012ab011

Note I've also successfully built and tested the combined patch on Ubuntu
14.04 and 16.06 with GDAL 1.11 and GDAL 2.2.3 :)

Cheers
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180122/bec6c6cb/attachment.html>

From ao at t-kartor.se  Mon Jan 22 03:35:22 2018
From: ao at t-kartor.se (Andreas Oxenstierna)
Date: Mon, 22 Jan 2018 12:35:22 +0100
Subject: [gdal-dev] Get position of highest pixel value
Message-ID: <b74a190a-ed30-cfa8-403a-921aed185949@t-kartor.se>

Is there any GDAL tool to get the position of a given (eg. highest) 
pixel value in a given area?

I.e. the reverse of gdallocationinfo

xyz-file analysing is hardly an option as the input is a 80 Gb Imagine file


-- 
Best Regards

Andreas Oxenstierna
T-Kartor Geospatial AB
mobile: +46 733 206831
mailto: ao at t-kartor.se
http://www.t-kartor.com


From a.hagen-zanker at surrey.ac.uk  Mon Jan 22 07:31:17 2018
From: a.hagen-zanker at surrey.ac.uk (a.hagen-zanker at surrey.ac.uk)
Date: Mon, 22 Jan 2018 15:31:17 +0000
Subject: [gdal-dev] Map Algebra revisited
Message-ID: <DB5PR0601MB1926EE7C7D873C4910181857F2EC0@DB5PR0601MB1926.eurprd06.prod.outlook.com>

Dear all, 

I would like to re-open an older discussion. At several points in the last year there has been a discussion of raster algebra / map algebra functionality on this list. There still is an associated RFC by Ari Jolma (https://trac.osgeo.org/gdal/wiki/rfc62_raster_algebra).

The reason to re-open the discussion is that I have recently submitted a C++ library  called Blink Raster to OSGeo to be considered as a Community project. The project is hosted on Github (https://github.com/ahhz/raster ). Note that there is already quite some documentation, including main concepts, functions and examples. 

Blink Raster meets the requirements specified in RFC62:

>  "The implementation should be data type aware. This may mean code written with templates. "
The main expected  use of the library is where the user knows the datatype, and specifies it in a template.

 > "The implementation should be parallel processing friendly. "
The  implementation uses expression templates to specify operations on rasters that are lazily evaluated. The interface facilitates evaluating the expression templates only for subrasters. It is therefore a solution that should works well with the split-and-merge approach to parallel processing.

> " The implementation should allow a relatively easy to use C++ / C API. This may mean interface, which does not use templates. "
The interface with templates is pretty simple. However, at a performance cost, it is also possible to apply map algebra operations without specifying the data type.

> "The implementation should allow arbitrary functions on cell values. I.e., be extensible by the user."
The implementation allows arbitrary functions on cell values
 
> "The implementation should allow focal methods. I.e., methods, where the value of a cell depends on its neighborhood." 
The implementation offers square and circular moving window methods for neighbourhoods of pixels and edges (adjacent pixel pairs). This is also extendable by the user and it is relatively straightforward to write your own statistic to be applied in a moving window. This was my original motivation for this library: to be able to easily write efficient moving window based indicators of landscape patterns.

With apologies for re-opening a discussion that is only sideways related to GDAL as well as the self-promotion. Since in the end this is about a C++ geo-data abstraction library, I felt it was appropriate. 

I would appreciate any feedback and ideas for the library. I would also be interested to hear if you think this library addresses a GDAL need. 

With kind regards, Alex

--
Alex Hagen-Zanker


From alexhighviz at hotmail.com  Mon Jan 22 07:40:37 2018
From: alexhighviz at hotmail.com (Alex HighViz)
Date: Mon, 22 Jan 2018 15:40:37 +0000
Subject: [gdal-dev] Map Algebra revisited
Message-ID: <HE1PR05MB1419062DD245C7E95978A255B4EC0@HE1PR05MB1419.eurprd05.prod.outlook.com>

Dear all,



I would like to re-open an older discussion. At several points in the last year there has been a discussion of raster algebra / map algebra functionality on this list. There still is an associated RFC by Ari Jolma (https://trac.osgeo.org/gdal/wiki/rfc62_raster_algebra).



The reason to re-open the discussion is that I have recently submitted a C++ library  called Blink Raster to OSGeo to be considered as a Community project. The project is hosted on Github (https://github.com/ahhz/raster ). Note that there is already quite some documentation, including main concepts, functions and examples.



Blink Raster meets the requirements specified in RFC62:



>  "The implementation should be data type aware. This may mean code written with templates. "

The main expected  use of the library is where the user knows the datatype, and specifies it in a template.



> "The implementation should be parallel processing friendly. "

The  implementation uses expression templates to specify operations on rasters that are lazily evaluated. The interface facilitates evaluating the expression templates only for subrasters. It is therefore a solution that should works well with the split-and-merge approach to parallel processing.



> " The implementation should allow a relatively easy to use C++ / C API. This may mean interface, which does not use templates. "

The interface with templates is pretty simple. However, at a performance cost, it is also possible to apply map algebra operations without specifying the data type.



> "The implementation should allow arbitrary functions on cell values. I.e., be extensible by the user."

The implementation allows arbitrary functions on cell values

> "The implementation should allow focal methods. I.e., methods, where the value of a cell depends on its neighborhood."

The implementation offers square and circular moving window methods for neighbourhoods of pixels and edges (adjacent pixel pairs). This is also extendable by the user and it is relatively straightforward to write your own statistic to be applied in a moving window. This was my original motivation for this library: to be able to easily write efficient moving window based indicators of landscape patterns.



With apologies for re-opening a discussion that is only sideways related to GDAL as well as the self-promotion. Since in the end this is about a C++ geo-data abstraction library, I felt it was appropriate.



I would appreciate any feedback and ideas for the library. I would also be interested to hear if you think this library addresses a GDAL need.



With kind regards, Alex



p.s. I had to resend this email from a second email address, due to the following:  https://trac.osgeo.org/osgeo/ticket/2087



--

Alex Hagen-Zanker



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180122/5ec11f19/attachment-0001.html>

From even.rouault at spatialys.com  Mon Jan 22 14:40:55 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 22 Jan 2018 23:40:55 +0100
Subject: [gdal-dev] Vector Tiles in OGR
In-Reply-To: <CAFcOn2_FJ02nGBeBcpkv2BwOPwrafK30hq4zfE_6Jb4rx1K0zQ@mail.gmail.com>
References: <CAH-RUCSWA55kmEW6=tH0=xb7qUFm9R4oJ6iBSxdeSrnetyRM0g@mail.gmail.com>
 <661A1F30-F0B6-4514-92A1-B9782D109958@gmail.com>
 <CAFcOn2_FJ02nGBeBcpkv2BwOPwrafK30hq4zfE_6Jb4rx1K0zQ@mail.gmail.com>
Message-ID: <1521484.TDs4EaFJB7@even-i700>

Hi,

> P.S. @Even: Any news on a GDAL/OGR MVT reader?

Yes, a new OGR MVT reader has just been committed in GDAL trunk:
http://gdal.org/drv_mvt.html

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180122/b59e9776/attachment.html>

From ari.jolma at gmail.com  Tue Jan 23 00:24:55 2018
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 23 Jan 2018 10:24:55 +0200
Subject: [gdal-dev] Map Algebra revisited
In-Reply-To: <HE1PR05MB1419062DD245C7E95978A255B4EC0@HE1PR05MB1419.eurprd05.prod.outlook.com>
References: <HE1PR05MB1419062DD245C7E95978A255B4EC0@HE1PR05MB1419.eurprd05.prod.outlook.com>
Message-ID: <266e859a-d578-b3f9-cdf6-8b2fadabdb69@gmail.com>

Alex,

Thanks for the information. I wrote the RFC and I wrote the C++ add-on 
that's linked to the RFC. However, in the end I run out of time with 
that code. Later also Mario Roy took up the challenge of multiprocessing 
raster operations with Perl GDAL and got good results(1).

Perhaps the appropriate thing would be to start a GDAL raster 
processing/algebra page on the GDAL Wiki and write there about 
solutions. The RFC should direct to that page.

Best,

Ari

1) https://gist.github.com/marioroy


Alex HighViz kirjoitti 22.01.2018 klo 17:40:
>
> Dear all,
>
> I would like to re-open an older discussion. At several points in the 
> last year there has been a discussion of raster algebra / map algebra 
> functionality on this list. There still is an associated RFC by Ari 
> Jolma (https://trac.osgeo.org/gdal/wiki/rfc62_raster_algebra).
>
> The reason to re-open the discussion is that I have recently submitted 
> a C++ libraryÂ  called Blink Raster to OSGeo to be considered as a 
> Community project. The project is hosted on Github 
> (https://github.com/ahhz/raster ). Note that there is already quite 
> some documentation, including main concepts, functions and examples.
>
> Blink Raster meets the requirements specified in RFC62:
>
> >Â  "The implementation should be data type aware. This may mean code 
> written with templates. "
>
> The main expectedÂ  use of the library is where the user knows the 
> datatype, and specifies it in a template.
>
> > "The implementation should be parallel processing friendly. "
>
> TheÂ  implementation uses expression templates to specify operations on 
> rasters that are lazily evaluated. The interface facilitates 
> evaluating the expression templates only for subrasters. It is 
> therefore a solution that should works well with the split-and-merge 
> approach to parallel processing.
>
> > " The implementation should allow a relatively easy to use C++ / C 
> API. This may mean interface, which does not use templates. "
>
> The interface with templates is pretty simple. However, at a 
> performance cost, it is also possible to apply map algebra operations 
> without specifying the data type.
>
> > "The implementation should allow arbitrary functions on cell values. 
> I.e., be extensible by the user."
>
> The implementation allows arbitrary functions on cell values
>
> > "The implementation should allow focal methods. I.e., methods, where 
> the value of a cell depends on its neighborhood."
>
> The implementation offers square and circular moving window methods 
> for neighbourhoods of pixels and edges (adjacent pixel pairs). This is 
> also extendable by the user and it is relatively straightforward to 
> write your own statistic to be applied in a moving window. This was my 
> original motivation for this library: to be able to easily write 
> efficient moving window based indicators of landscape patterns.
>
> With apologies for re-opening a discussion that is only sideways 
> related to GDAL as well as the self-promotion. Since in the end this 
> is about a C++ geo-data abstraction library, I felt it was appropriate.
>
> I would appreciate any feedback and ideas for the library. I would 
> also be interested to hear if you think this library addresses a GDAL 
> need.
>
> With kind regards, Alex
>
> p.s. I had to resend this email from a second email address, due to 
> the following: https://trac.osgeo.org/osgeo/ticket/2087
>
> --
>
> Alex Hagen-Zanker
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180123/c15dc6dc/attachment.html>

From alexhighviz at hotmail.com  Tue Jan 23 03:23:14 2018
From: alexhighviz at hotmail.com (Alex HighViz)
Date: Tue, 23 Jan 2018 11:23:14 +0000
Subject: [gdal-dev] Map Algebra revisited
In-Reply-To: <266e859a-d578-b3f9-cdf6-8b2fadabdb69@gmail.com>
References: <HE1PR05MB1419062DD245C7E95978A255B4EC0@HE1PR05MB1419.eurprd05.prod.outlook.com>
 <266e859a-d578-b3f9-cdf6-8b2fadabdb69@gmail.com>
Message-ID: <HE1PR05MB14196557D5A166951BBFC5AAB4E30@HE1PR05MB1419.eurprd05.prod.outlook.com>

Hi Ari,

Even if the development of the code for RFC62 has turned out to be more complex than initially envisioned, I think it remains a good diagnosis of functionality that is missing in GDAL. The use of multiprocessing in  Perl is very interesting, however I don't think it addresses the issues you originally raised in RFC62. If only, because it is not C++.

I think there is scope for a more abstract interface on top of GDALRasterBand that makes it easier to write algorithms on raster data in C++. It would benefit users of GDAL (I suppose especially research oriented users). It might also benefit GDAL itself, because the issues of data access and algorithm can be better separated. For instance, the implementation of the Euclidean distance transform in gdalproximity.cpp or the raster statistics computation in gdalrasterband.cpp could both benefit from such conceptual tidying up. Having a clearer separation of data access and algorithm might even illuminate the path towards parallel processing for those and other tasks.

Kind regards, Alex
--
Alex Hagen-Zanker
Blink Raster: https://github.com/ahhz/raster


From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Ari Jolma
Sent: 23 January 2018 08:25
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Map Algebra revisited


Alex,

Thanks for the information. I wrote the RFC and I wrote the C++ add-on that's linked to the RFC. However, in the end I run out of time with that code. Later also Mario Roy took up the challenge of multiprocessing raster operations with Perl GDAL and got good results(1).

Perhaps the appropriate thing would be to start a GDAL raster processing/algebra page on the GDAL Wiki and write there about solutions. The RFC should direct to that page.

Best,

Ari

1) https://gist.github.com/marioroy

Alex HighViz kirjoitti 22.01.2018 klo 17:40:

Dear all,



I would like to re-open an older discussion. At several points in the last year there has been a discussion of raster algebra / map algebra functionality on this list. There still is an associated RFC by Ari Jolma (https://trac.osgeo.org/gdal/wiki/rfc62_raster_algebra).



The reason to re-open the discussion is that I have recently submitted a C++ library  called Blink Raster to OSGeo to be considered as a Community project. The project is hosted on Github (https://github.com/ahhz/raster ). Note that there is already quite some documentation, including main concepts, functions and examples.



Blink Raster meets the requirements specified in RFC62:



>  "The implementation should be data type aware. This may mean code written with templates. "

The main expected  use of the library is where the user knows the datatype, and specifies it in a template.



> "The implementation should be parallel processing friendly. "

The  implementation uses expression templates to specify operations on rasters that are lazily evaluated. The interface facilitates evaluating the expression templates only for subrasters. It is therefore a solution that should works well with the split-and-merge approach to parallel processing.



> " The implementation should allow a relatively easy to use C++ / C API. This may mean interface, which does not use templates. "

The interface with templates is pretty simple. However, at a performance cost, it is also possible to apply map algebra operations without specifying the data type.



> "The implementation should allow arbitrary functions on cell values. I.e., be extensible by the user."

The implementation allows arbitrary functions on cell values

> "The implementation should allow focal methods. I.e., methods, where the value of a cell depends on its neighborhood."

The implementation offers square and circular moving window methods for neighbourhoods of pixels and edges (adjacent pixel pairs). This is also extendable by the user and it is relatively straightforward to write your own statistic to be applied in a moving window. This was my original motivation for this library: to be able to easily write efficient moving window based indicators of landscape patterns.



With apologies for re-opening a discussion that is only sideways related to GDAL as well as the self-promotion. Since in the end this is about a C++ geo-data abstraction library, I felt it was appropriate.



I would appreciate any feedback and ideas for the library. I would also be interested to hear if you think this library addresses a GDAL need.



With kind regards, Alex



p.s. I had to resend this email from a second email address, due to the following:  https://trac.osgeo.org/osgeo/ticket/2087



--

Alex Hagen-Zanker







_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180123/41909e5c/attachment-0001.html>

From even.rouault at spatialys.com  Tue Jan 23 04:29:41 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 Jan 2018 13:29:41 +0100
Subject: [gdal-dev] Vector Tiles in OGR
In-Reply-To: <4E6F5CD7-ACD2-41D3-80E0-32AE44606B84@carto.com>
References: <CAH-RUCSWA55kmEW6=tH0=xb7qUFm9R4oJ6iBSxdeSrnetyRM0g@mail.gmail.com>
 <1521484.TDs4EaFJB7@even-i700>
 <4E6F5CD7-ACD2-41D3-80E0-32AE44606B84@carto.com>
Message-ID: <3396393.dFk3HWdx8l@even-i700>

On mardi 23 janvier 2018 13:10:30 CET Jaak Laineste wrote:
> Hey,
> 
> I read the drv doc, it was not completely clear how OGR handles exactly
> multi-resolution specifics; as OGR data model does not really âsupportâ
> multi-resolution vector in data model level AFAIK.

Indeed, there's no particular handling of multi-resolution in the MVT driver. Meaning it is the 
responsibility of the user to open the zoom level it is interested in.

( For the MBTiles driver, I've added a ZOOM_LEVEL_AUTO=YES open option:
"""Whether to auto-select the zoom level for vector layers according to the spatial filter 
extent. Only for display purpose. Defaults to NO""")

> 
> I guess it works in this way:
> a) if you set Z= option, e.g. Z=10, then it takes data for zoom 10.

No, X, Y, Z open options are only useful if you point to a single .pbf / .mvt file whose path + 
name doesn't contain any hint on the tile coordinate.

To point to a tileset at a particular zoom level, you need to open "directory/{zlevel}"

> b) in other cases it extracts data for all zooms, which means with typical
> multi-zoom/resolution tileset you end up with up to N (=number of zoom
> levels) geometries per object. If geometries would have generated field for
> tile address (xyz) then consumer can decide which copy to be used,
> otherwise it may become quite unusable mess.

No, only one zoom level is opened. See above

> 
> p.s. there is no geometry merging across tiles, right?

Yep, that's what i meant with
"""Note: When opening a zoom level of a tileset, the driver will make no effort of stiching 
together geometries for features that overlap several tiles."""

> I imagine this to be
> useful either based on coordinate connections, and/or unique object id
> field.

Geometry merging could potentially be done, but it was left aside for now, because it can 
involve huge processing time. Imagine in the worst case, you have a single polygon covering 
the whole world at zoom level 15: to read it, you will need to merge the 2^30 tiles ...
So geometry merging should probably be an option not enabled by default, and used 
together with reasonable spatial filter.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180123/84388037/attachment.html>

From landa.martin at gmail.com  Tue Jan 23 04:36:44 2018
From: landa.martin at gmail.com (Martin Landa)
Date: Tue, 23 Jan 2018 13:36:44 +0100
Subject: [gdal-dev] compulation error in trunk
Message-ID: <CA+Ei1Of3sESJXuiXREHZfdg1aD=dmK-N1f2Dc-fWms+x0+S47Q@mail.gmail.com>

Hi,

I have problem compiling GDAL trunk on my Debian unstable machine:

gdalwarpkernel_opencl.cpp: In function '_cl_kernel*
get_kernel(oclWarper*, char, double, double, double, double, int, int,
int, int, cl_int*)':
gdalwarpkernel_opencl.cpp:1278:30: error: 'numeric_limits' is not a
member of 'std'
             dstMinVal = std::numeric_limits<float>::lowest();

gcc --version
gcc (Debian 7.2.0-19) 7.2.0

ocl-icd-libopencl1/unstable,testing,now 2.2.12-1 amd64 [installed]

In my case helped adding <limits> header into
gdalwarpkernel_opencl.cpp. Should I fill a bug report? Ma

-- 
Martin Landa
http://geo.fsv.cvut.cz/gwiki/Landa
http://gismentors.cz/mentors/landa

From even.rouault at spatialys.com  Tue Jan 23 04:40:17 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 23 Jan 2018 13:40:17 +0100
Subject: [gdal-dev] compulation error in trunk
In-Reply-To: <CA+Ei1Of3sESJXuiXREHZfdg1aD=dmK-N1f2Dc-fWms+x0+S47Q@mail.gmail.com>
References: <CA+Ei1Of3sESJXuiXREHZfdg1aD=dmK-N1f2Dc-fWms+x0+S47Q@mail.gmail.com>
Message-ID: <2115716.Mpq0c27zAN@even-i700>

On mardi 23 janvier 2018 13:36:44 CET Martin Landa wrote:
> Hi,
> 
> I have problem compiling GDAL trunk on my Debian unstable machine:
> 
> gdalwarpkernel_opencl.cpp: In function '_cl_kernel*
> get_kernel(oclWarper*, char, double, double, double, double, int, int,
> int, int, cl_int*)':
> gdalwarpkernel_opencl.cpp:1278:30: error: 'numeric_limits' is not a
> member of 'std'
>              dstMinVal = std::numeric_limits<float>::lowest();
> 
> gcc --version
> gcc (Debian 7.2.0-19) 7.2.0
> 
> ocl-icd-libopencl1/unstable,testing,now 2.2.12-1 amd64 [installed]
> 
> In my case helped adding <limits> header into
> gdalwarpkernel_opencl.cpp. Should I fill a bug report? Ma

Martin,

I just committed this fix

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180123/df3500bf/attachment.html>

From landa.martin at gmail.com  Tue Jan 23 06:34:39 2018
From: landa.martin at gmail.com (Martin Landa)
Date: Tue, 23 Jan 2018 15:34:39 +0100
Subject: [gdal-dev] compulation error in trunk
In-Reply-To: <2115716.Mpq0c27zAN@even-i700>
References: <CA+Ei1Of3sESJXuiXREHZfdg1aD=dmK-N1f2Dc-fWms+x0+S47Q@mail.gmail.com>
 <2115716.Mpq0c27zAN@even-i700>
Message-ID: <CA+Ei1OdM04_zZnd_soa2iS9bGxUOZ9ttKf5WObDJq+3T=akg-A@mail.gmail.com>

2018-01-23 13:40 GMT+01:00 Even Rouault <even.rouault at spatialys.com>:
> I just committed this fix

thanks, Ma

-- 
Martin Landa
http://geo.fsv.cvut.cz/gwiki/Landa
http://gismentors.cz/mentors/landa

From paulopires16 at gmail.com  Tue Jan 23 10:46:17 2018
From: paulopires16 at gmail.com (Paulo Pires)
Date: Tue, 23 Jan 2018 11:46:17 -0700 (MST)
Subject: [gdal-dev] RGB to PALETTE conversion
Message-ID: <1516733177105-0.post@n6.nabble.com>

Hello,

I'm trying to convert RGB image to PALETTE image with PIL:

/img = Image.open(tiffile)
img = img1convert("P", palette=Image.ADAPTIVE, colors=256)
img.save(newtiffile+"_index.tif")     
img.close()/

...but, for example, the white color is 245, not 255 :(

And from CMYK to PALETTE? Is it possible? gdal option, please...

Thanks




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From gdal at zeidlers.de  Wed Jan 24 06:06:04 2018
From: gdal at zeidlers.de (Julian Zeidler)
Date: Wed, 24 Jan 2018 15:06:04 +0100
Subject: [gdal-dev] Rotate UTM-Grid
Message-ID: <0241fe86-c3a8-d39c-58c5-4cd14d2ba69d@zeidlers.de>

Dear all,

I have the challenge that i have to allign a UTM-GRID with a pysical 
experiment.

The model is rotated by 5 degrees compared to the UTM-Grid (EPSG:25833), 
so that N is at 355Â°

I have to rasterize multiple Vectors to a 1m resolution rotated-raster, 
so that they can be pysicaly built and the results of a modell run 
directly compared to the measured physical model.

Is there any way to define such a custom rotated Projection so that i 
could use it with gdalwarp and other tools?

I am happy for any insights.

Best regards

Julian Zeidler







From matt.gregory at oregonstate.edu  Wed Jan 24 11:10:13 2018
From: matt.gregory at oregonstate.edu (Gregory, Matthew)
Date: Wed, 24 Jan 2018 19:10:13 +0000
Subject: [gdal-dev] AIG field types erroneously classified as GFT_String
Message-ID: <7C48E40C135D314BA03D6471A6E3897801153F8A52@EX1.oregonstate.edu>

Hi all,

I came across what I think is a bug on reading in VAT tables using the AIG driver.  I have a raster attribute table that has fixed numeric types for some items and when using the GetTypeOfCol method (in Python), I'm getting back GFT_String (2) values.  I think I can trace it to lines 463-480 in aigdataset.cpp.  As it's looping through the fields, the type is set to GFT_String by default and only AVC_FT_BININT and AVC_FT_BINFLOAT are checked to possibly change type.  It seems like there should also be these checks/conversions:

  AVC_FT_DATE -> GFT_Date(?)
  AVC_FT_FIXINT -> GFT_Integer
  AVC_FT_FIXNUM -> GFT_Real

I could be missing the reasoning of why these types shouldn't crosswalk to the suggested GFT_* values, so I haven't submitted as a bug.

thanks, matt
 


From even.rouault at spatialys.com  Wed Jan 24 13:27:44 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 24 Jan 2018 22:27:44 +0100
Subject: [gdal-dev] AIG field types erroneously classified as GFT_String
In-Reply-To: <7C48E40C135D314BA03D6471A6E3897801153F8A52@EX1.oregonstate.edu>
References: <7C48E40C135D314BA03D6471A6E3897801153F8A52@EX1.oregonstate.edu>
Message-ID: <2312025.FtTenAP7uB@even-i700>

On mercredi 24 janvier 2018 19:10:13 CET Gregory, Matthew wrote:
> Hi all,
> 
> I came across what I think is a bug on reading in VAT tables using the AIG
> driver.  I have a raster attribute table that has fixed numeric types for
> some items and when using the GetTypeOfCol method (in Python), I'm getting
> back GFT_String (2) values.  I think I can trace it to lines 463-480 in
> aigdataset.cpp.  As it's looping through the fields, the type is set to
> GFT_String by default and only AVC_FT_BININT and AVC_FT_BINFLOAT are
> checked to possibly change type.  It seems like there should also be these
> checks/conversions:
> 
>   AVC_FT_DATE -> GFT_Date(?)
>   AVC_FT_FIXINT -> GFT_Integer
>   AVC_FT_FIXNUM -> GFT_Real
> 
> I could be missing the reasoning of why these types shouldn't crosswalk to
> the suggested GFT_* values, so I haven't submitted as a bug.

If you can submit a patch implemting the missing mappins, as well as some testing data, that 
would be welcome

Best regards,

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180124/f88d4857/attachment.html>

From even.rouault at spatialys.com  Wed Jan 24 13:33:37 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 24 Jan 2018 22:33:37 +0100
Subject: [gdal-dev] Rotate UTM-Grid
In-Reply-To: <0241fe86-c3a8-d39c-58c5-4cd14d2ba69d@zeidlers.de>
References: <0241fe86-c3a8-d39c-58c5-4cd14d2ba69d@zeidlers.de>
Message-ID: <3216927.sFMPKlB0ta@even-i700>

On mercredi 24 janvier 2018 15:06:04 CET Julian Zeidler wrote:
> Dear all,
> 
> I have the challenge that i have to allign a UTM-GRID with a pysical
> experiment.
> 
> The model is rotated by 5 degrees compared to the UTM-Grid (EPSG:25833),
> so that N is at 355Â°
> 
> I have to rasterize multiple Vectors to a 1m resolution rotated-raster,
> so that they can be pysicaly built and the results of a modell run
> directly compared to the measured physical model.
> 
> Is there any way to define such a custom rotated Projection so that i
> could use it with gdalwarp and other tools?

This can be done with gdalwarp but requires a preliminary step when you create
an initial blank target raster with the right dimensions, and attach a geotransform that has
rotation terms and a CRS. Then you can use it as the output of gdalwarp in update
mode.

For example with the GDAL Python API;

from osgeo import gdal
from osgeo import osr
ds = gdal.GetDriverByName('GTiff').Create('out.tif', width, height, band_count)
ds.SetGeoTransform(gt) # where gt is an array of 6 values with the top left pixel coordinate, resolution and rotation terms.
#See "Affine GeoTransform" in http://gdal.org/gdal_datamodel.html
srs = osr.SpatialReference()
srs.ImportFromEPSG(25833)
ds.SetProjection(srs)
ds = None

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180124/9a622764/attachment.html>

From landa.martin at gmail.com  Wed Jan 24 14:21:39 2018
From: landa.martin at gmail.com (Martin Landa)
Date: Wed, 24 Jan 2018 23:21:39 +0100
Subject: [gdal-dev] assigning output srs for GML fails
Message-ID: <CA+Ei1Of44AZjPOYZ1pAw13iVZkGwjLWRkN=URWUz=aq_BD9kKg@mail.gmail.com>

Hi,

I was experimenting with OSM OverpassAPI and afterwards fighting with
-a_srs option of ogr2ogr utility:

Esri Shapefile works:

$ ogr2ogr -f GML jena-boundary.gml -a_srs EPSG:4326 \
/vsicurl_streaming/"http://overpass-api.de/api/interpreter?data=%28relation\
%5B%22boundary%22%3D%22administrative%22%5D%5B%22admin%5Flevel%22%3D%226%22%5D%5B%22\
name%22%3D%22Jena%22%5D%3B%29%3B%28%2E%5F%3B%3E%3B%29%3Bout%3B%0A" multipolygons

$ ogrinfo jena-boundary.shp jena-boundary -so
...
Layer SRS WKT:
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0,
        AUTHORITY["EPSG","8901"]],
    UNIT["degree",0.0174532925199433,
        AUTHORITY["EPSG","9122"]],
    AUTHORITY["EPSG","4326"]]

while GML doesn't

$ ogr2ogr -f GML jena-boundary.gml -a_srs EPSG:4326
/vsicurl_streaming/"http://overpass-api.de/api/interpreter?data=%28relation\
%5B%22boundary%22%3D%22administrative%22%5D%5B%22admin%5Flevel%22%3D%226%22%5D%5B%22\
name%22%3D%22Jena%22%5D%3B%29%3B%28%2E%5F%3B%3E%3B%29%3Bout%3B%0A" multipolygons

$ ogrinfo jena-boundary.gml multipolygons -so
...
Layer SRS WKT:
(unknown)

Any idea what I am doing wrong? Using GDAL trunk. Thanks in advance, Ma

-- 
Martin Landa
http://geo.fsv.cvut.cz/gwiki/Landa
http://gismentors.cz/mentors/landa

From matt.gregory at oregonstate.edu  Wed Jan 24 16:38:48 2018
From: matt.gregory at oregonstate.edu (Gregory, Matthew)
Date: Thu, 25 Jan 2018 00:38:48 +0000
Subject: [gdal-dev] AIG field types erroneously classified as GFT_String
In-Reply-To: <2312025.FtTenAP7uB@even-i700>
References: <7C48E40C135D314BA03D6471A6E3897801153F8A52@EX1.oregonstate.edu>
 <2312025.FtTenAP7uB@even-i700>
Message-ID: <7C48E40C135D314BA03D6471A6E3897801153F91A9@EX1.oregonstate.edu>

Hi Even,

Even wrote:
> If you can submit a patch implemting the missing mappins, as well
> as some testing data, that would be welcome

I've opened a ticket on this (https://trac.osgeo.org/gdal/ticket/7211) as I don't think it's as simple as I first thought.  I'd be happy to continue working on this, but might do more harm than good ...

My main use case is creating a new raster from an item in a RAT and I'm verifying that the type is allowable before proceeding.  I had hoped to use the GFT type to determine this.

thanks, matt

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jan 25 00:12:27 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 25 Jan 2018 01:12:27 -0700 (MST)
Subject: [gdal-dev] assigning output srs for GML fails
In-Reply-To: <CA+Ei1Of44AZjPOYZ1pAw13iVZkGwjLWRkN=URWUz=aq_BD9kKg@mail.gmail.com>
References: <CA+Ei1Of44AZjPOYZ1pAw13iVZkGwjLWRkN=URWUz=aq_BD9kKg@mail.gmail.com>
Message-ID: <1516867947527-0.post@n6.nabble.com>

Martin Landa wrote
> $ ogrinfo jena-boundary.gml multipolygons -so
> ...
> Layer SRS WKT:
> (unknown)
> 
> Any idea what I am doing wrong? Using GDAL trunk. Thanks in advance, Ma

Hi,

By having a look at the data there is only one multipolygon which is
correctly written in EPSG:4326

<ogr:geometryProperty><gml:MultiPolygon srsName="EPSG:4326">

Documentation http://www.gdal.org/drv_gml.html claims that
"Since OGR 1.8.0, the GML driver has coordinate system support. This is only
reported when all the geometries of a layer have a srsName attribute, whose
value is the same for all geometries."

I wonder if reporting does not happen when there is only one geometry but
your GML data are anyway correct.

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From cmwebjunk at gmail.com  Thu Jan 25 09:34:45 2018
From: cmwebjunk at gmail.com (cm00)
Date: Thu, 25 Jan 2018 10:34:45 -0700 (MST)
Subject: [gdal-dev] Can I resume gdal_retile?
In-Reply-To: <201311111802.12903.even.rouault@mines-paris.org>
References: <1384187875321-5088569.post@n6.nabble.com>
 <201311111802.12903.even.rouault@mines-paris.org>
Message-ID: <1516901685263-0.post@n6.nabble.com>

Pardon me for replying to an old thread, but I have the need to resume a
gdal_retile session as well. I have tried the script attached in this
thread, but the check for existence takes about as much time as the actual
tile re-creation on my system.

Is it possible to speed this script up a bit by moving the code to check for
tile (pre)existence to the beginning of the createTile and creatPyramidTile
function definitions???



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Fri Jan 26 04:03:05 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Fri, 26 Jan 2018 05:03:05 -0700 (MST)
Subject: [gdal-dev] assigning output srs for GML fails
In-Reply-To: <1516867947527-0.post@n6.nabble.com>
References: <CA+Ei1Of44AZjPOYZ1pAw13iVZkGwjLWRkN=URWUz=aq_BD9kKg@mail.gmail.com>
 <1516867947527-0.post@n6.nabble.com>
Message-ID: <1516968185133-0.post@n6.nabble.com>

Hi,

I came back to this problem. With your command ogr2ogr is also creating the
.xsd schema file and this case this part of GML driver manual page
http://www.gdal.org/drv_gml.html applies:

FORCE_SRS_DETECTION=YES/NO: (GDAL >=2.0) Force a full scan to detect the SRS
of layers. This option may be needed in the case where the .gml file is
accompanied with a .xsd. Normally in that situation, OGR would not detect
the SRS, because this requires to do a full scan of the file. Defaults to NO

Repeat your command with this open option and ogrinfo reports the SRS:

ogrinfo -so -al jena-boundary.gml -oo FORCE_SRS_DETECTION=YES

Another option is to delete the jena-boundary.xsd file which also forces
GDAL to scan the whole GML file and to detect the SRS by the same. Third
option is to disable the creation of .xsd file by adding -dsco XSISCHEMA=OFF
into your original ogr2ogr command.

-Jukka Rahkonen-




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From landa.martin at gmail.com  Fri Jan 26 08:33:48 2018
From: landa.martin at gmail.com (Martin Landa)
Date: Fri, 26 Jan 2018 17:33:48 +0100
Subject: [gdal-dev] assigning output srs for GML fails
In-Reply-To: <1516968185133-0.post@n6.nabble.com>
References: <CA+Ei1Of44AZjPOYZ1pAw13iVZkGwjLWRkN=URWUz=aq_BD9kKg@mail.gmail.com>
 <1516867947527-0.post@n6.nabble.com> <1516968185133-0.post@n6.nabble.com>
Message-ID: <CA+Ei1OfSJt4JCKU6auDcS1wr1c6CNW1DtyDiJORtLtw2+g526Q@mail.gmail.com>

Hi,

2018-01-26 13:03 GMT+01:00 jratike80 <jukka.rahkonen at maanmittauslaitos.fi>:

[...]

thanks for your time and explanation.

> Repeat your command with this open option and ogrinfo reports the SRS:
>
> ogrinfo -so -al jena-boundary.gml -oo FORCE_SRS_DETECTION=YES

Works, Martin

-- 
Martin Landa
http://geo.fsv.cvut.cz/gwiki/Landa
http://gismentors.cz/mentors/landa

From jpolo at mail.usf.edu  Sun Jan 28 16:04:56 2018
From: jpolo at mail.usf.edu (john polo)
Date: Sun, 28 Jan 2018 16:04:56 -0800
Subject: [gdal-dev] ogrInfo error - Entry Point Not Found
Message-ID: <e5570855-d57d-d82c-6689-135ebb71ef74@mail.usf.edu>

Hi,

I am attempting to use ogrInfo to get information about a geodatabase. I 
am using Windows 7 64bit. I have GDALÂ  installed with QGIS. The QGIS is 
2.18.3, but I can't find how to tell the version of GDAL that's 
installed. I don't know much about working with a lot of the OSGeo4W64 
software, especially when it comes to software libraries, please bear 
with me if I do not provide the necessary information.

I looked up how to read the geodatabase with PostgreSQL. It seems I need 
to first use ogrInfo to read what's in the geodatabase and then maybe 
get PostGIS involved. This will probably lead to another question on 
another list. :) Anyway, on the Windows command prompt, I used

ogrInfo C:\directories\geodatabase.gdb

and I get this error:

"ogrinfo.exe - Entry Point Not Found

The procedure entry point SSL_COMP_free_compression_methods could not be 
located in the dynamic link library SSLEAY32.dll

"

When I searched for "SSL_COMP_free_compression_methods", several of the 
results included references to OpenSSL. Like this one:
https://www.openssl.org/docs/manmaster/man3/SSL_COMP_add_compression_method.html

I am unsure if the problem exists in OpenSSL or in GDAL/ogrInfo. I would 
appreciate someone explaining how I can address the problem so that I 
can use ogrInfo.

John


From andre+joost at nurfuerspam.de  Mon Jan 29 01:05:19 2018
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Mon, 29 Jan 2018 10:05:19 +0100
Subject: [gdal-dev] ogrInfo error - Entry Point Not Found
In-Reply-To: <e5570855-d57d-d82c-6689-135ebb71ef74@mail.usf.edu>
References: <e5570855-d57d-d82c-6689-135ebb71ef74@mail.usf.edu>
Message-ID: <p4mo3o$viv$1@blaine.gmane.org>

Am 29.01.18 um 01:04 schrieb john polo:
> Hi,
>
> I am attempting to use ogrInfo to get information about a geodatabase. I
> am using Windows 7 64bit. I have GDAL  installed with QGIS. The QGIS is
> 2.18.3, but I can't find how to tell the version of GDAL that's
> installed. I don't know much about working with a lot of the OSGeo4W64
> software, especially when it comes to software libraries, please bear
> with me if I do not provide the necessary information.
>
> I looked up how to read the geodatabase with PostgreSQL. It seems I need
> to first use ogrInfo to read what's in the geodatabase and then maybe
> get PostGIS involved. This will probably lead to another question on
> another list. :) Anyway, on the Windows command prompt, I used
>
> ogrInfo C:\directories\geodatabase.gdb
>
> and I get this error:
>
> "ogrinfo.exe - Entry Point Not Found
>
> The procedure entry point SSL_COMP_free_compression_methods could not be
> located in the dynamic link library SSLEAY32.dll
>

Most probably you have an outdated version of SSLEAY32.dll, or different 
versions in different places.

HTH,
Andre Joost



From sfkeller at gmail.com  Mon Jan 29 01:21:04 2018
From: sfkeller at gmail.com (Stefan Keller)
Date: Mon, 29 Jan 2018 10:21:04 +0100
Subject: [gdal-dev] Vector Tiles in OGR
In-Reply-To: <3396393.dFk3HWdx8l@even-i700>
References: <CAH-RUCSWA55kmEW6=tH0=xb7qUFm9R4oJ6iBSxdeSrnetyRM0g@mail.gmail.com>
 <1521484.TDs4EaFJB7@even-i700>
 <4E6F5CD7-ACD2-41D3-80E0-32AE44606B84@carto.com>
 <3396393.dFk3HWdx8l@even-i700>
Message-ID: <CAFcOn294Pvkx8Zh-om-AF-F+TiOVLgWQcoaRWuzVcw2zTR5rWg@mail.gmail.com>

Hi Even

Great news about this MVT reader!

The docs [1] says:
> The MVT driver only uses the "json" key to retrieve the layer names, their fields and the geometry type, and the "bounds" key for the layer extent.

I just wanted to point you to the spec. discussion of MBTiles and
TileJSON metadata [2] and I hope the SW keeps aligned with it.

> If this file cannot be found, the layer schema is established by scanning the features of the tile(s).

Q1: So the reader scans all tiles on the one given zoom level and
generates an internal metadata structure for that zoom level?
Q2: Option JSON_FIELD=YES says "put all attributes as a serialized
JSon dictionary"; Can a metadata.json file also be written to disk in
case it was generated?
Q3: Is this metadata.json accessible from an GDAL/OGR Python binding?
Q4: Ultimately I'd like to get a metadata.json (TileJSON compatible)
from the above mentioned MVT input for all zoom levels (at least for
the json key): How could I achieve this?

:Stefan


[1] http://gdal.org/drv_mvt.html#metadata_json
[2] https://github.com/mapbox/tilejson-spec/issues/14#issuecomment-361065531

2018-01-23 13:29 GMT+01:00 Even Rouault <even.rouault at spatialys.com>:
> On mardi 23 janvier 2018 13:10:30 CET Jaak Laineste wrote:
>
>> Hey,
>
>>
>
>> I read the drv doc, it was not completely clear how OGR handles exactly
>
>> multi-resolution specifics; as OGR data model does not really âsupportâ
>
>> multi-resolution vector in data model level AFAIK.
>
>
>
> Indeed, there's no particular handling of multi-resolution in the MVT
> driver. Meaning it is the responsibility of the user to open the zoom level
> it is interested in.
>
>
>
> ( For the MBTiles driver, I've added a ZOOM_LEVEL_AUTO=YES open option:
>
> """Whether to auto-select the zoom level for vector layers according to the
> spatial filter extent. Only for display purpose. Defaults to NO""")
>
>
>
>>
>
>> I guess it works in this way:
>
>> a) if you set Z= option, e.g. Z=10, then it takes data for zoom 10.
>
>
>
> No, X, Y, Z open options are only useful if you point to a single .pbf /
> .mvt file whose path + name doesn't contain any hint on the tile coordinate.
>
>
>
> To point to a tileset at a particular zoom level, you need to open
> "directory/{zlevel}"
>
>
>
>> b) in other cases it extracts data for all zooms, which means with typical
>
>> multi-zoom/resolution tileset you end up with up to N (=number of zoom
>
>> levels) geometries per object. If geometries would have generated field
>> for
>
>> tile address (xyz) then consumer can decide which copy to be used,
>
>> otherwise it may become quite unusable mess.
>
>
>
> No, only one zoom level is opened. See above
>
>
>
>>
>
>> p.s. there is no geometry merging across tiles, right?
>
>
>
> Yep, that's what i meant with
>
> """Note: When opening a zoom level of a tileset, the driver will make no
> effort of stiching together geometries for features that overlap several
> tiles."""
>
>
>
>> I imagine this to be
>
>> useful either based on coordinate connections, and/or unique object id
>
>> field.
>
>
>
> Geometry merging could potentially be done, but it was left aside for now,
> because it can involve huge processing time. Imagine in the worst case, you
> have a single polygon covering the whole world at zoom level 15: to read it,
> you will need to merge the 2^30 tiles ...
>
> So geometry merging should probably be an option not enabled by default, and
> used together with reasonable spatial filter.
>
>
>
> Even
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com

From gdal at zeidlers.de  Mon Jan 29 02:07:56 2018
From: gdal at zeidlers.de (Julian Zeidler)
Date: Mon, 29 Jan 2018 11:07:56 +0100
Subject: [gdal-dev] Rotate UTM-Grid
In-Reply-To: <3216927.sFMPKlB0ta@even-i700>
References: <0241fe86-c3a8-d39c-58c5-4cd14d2ba69d@zeidlers.de>
 <3216927.sFMPKlB0ta@even-i700>
Message-ID: <91c7c77e-8bbb-ceba-3cf4-8a3bdfa2674e@zeidlers.de>

Hi Even,

Thank you for a terrific answer, as always. Worked like a charm
For others who might face the same Problem here the working python code 
for arbitrary rotation values:

from osgeo import gdal
from osgeo import osr
import math

Pixsize=1Â  #in units of coordinate system normaly meters
xsize=425 #size in pixel
ysize=335
epsgcode=25833
rotateAngle=5 #angle in degrees
ulx=385984.495969
uly=5818972.084099
filename='out.tif'
###### End config#######

dxx=math.cos(math.radians(rotateAngle))*Psize
dxy=-math.sin(math.radians(rotateAngle))*Psize

dyx=dxy
dyy=-dxx

gt=[ulx,dxx, dxy, uly,dyx,dyy]


ds = gdal.GetDriverByName('GTiff').Create(filename, 
xsize,ysize,1,gdal.GDT_Int32)


ds.SetGeoTransform(gt)
srs = osr.SpatialReference()
srs.ImportFromEPSG(epsgcode)
ds.SetProjection(srs.ExportToWkt())
#delete and clean
ds = None


Best
Julian Zeidler


Am 24.01.2018 um 22:33 schrieb Even Rouault:
>
> On mercredi 24 janvier 2018 15:06:04 CET Julian Zeidler wrote:
>
> > Dear all,
>
> >
>
> > I have the challenge that i have to allign a UTM-GRID with a pysical
>
> > experiment.
>
> >
>
> > The model is rotated by 5 degrees compared to the UTM-Grid (EPSG:25833),
>
> > so that N is at 355Â°
>
> >
>
> > I have to rasterize multiple Vectors to a 1m resolution rotated-raster,
>
> > so that they can be pysicaly built and the results of a modell run
>
> > directly compared to the measured physical model.
>
> >
>
> > Is there any way to define such a custom rotated Projection so that i
>
> > could use it with gdalwarp and other tools?
>
> This can be done with gdalwarp but requires a preliminary step when 
> you create
>
> an initial blank target raster with the right dimensions, and attach a 
> geotransform that has
>
> rotation terms and a CRS. Then you can use it as the output of 
> gdalwarp in update
>
> mode.
>
> For example with the GDAL Python API;
>
> from osgeo import gdal
>
> from osgeo import osr
>
> ds = gdal.GetDriverByName('GTiff').Create('out.tif', width, height, 
> band_count)
>
> ds.SetGeoTransform(gt) # where gt is an array of 6 values with the top 
> left pixel coordinate, resolution and rotation terms.
>
> #See "Affine GeoTransform" in http://gdal.org/gdal_datamodel.html
>
> srs = osr.SpatialReference()
>
> srs.ImportFromEPSG(25833)
>
> ds.SetProjection(srs)
>
> ds = None
>
> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180129/b5124cb3/attachment.html>

From even.rouault at spatialys.com  Mon Jan 29 05:51:45 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 29 Jan 2018 14:51:45 +0100
Subject: [gdal-dev] Vector Tiles in OGR
In-Reply-To: <CAFcOn294Pvkx8Zh-om-AF-F+TiOVLgWQcoaRWuzVcw2zTR5rWg@mail.gmail.com>
References: <CAH-RUCSWA55kmEW6=tH0=xb7qUFm9R4oJ6iBSxdeSrnetyRM0g@mail.gmail.com>
 <3396393.dFk3HWdx8l@even-i700>
 <CAFcOn294Pvkx8Zh-om-AF-F+TiOVLgWQcoaRWuzVcw2zTR5rWg@mail.gmail.com>
Message-ID: <3043081.SBPXVk7JXF@even-i700>

On lundi 29 janvier 2018 10:21:04 CET Stefan Keller wrote:
> Hi Even
> 
> Great news about this MVT reader!
> 
> The docs [1] says:
> > The MVT driver only uses the "json" key to retrieve the layer names, their
> > fields and the geometry type, and the "bounds" key for the layer extent.
> I just wanted to point you to the spec. discussion of MBTiles and
> TileJSON metadata [2] and I hope the SW keeps aligned with it.

Yeah, I didn't really found a specification for those. Just my experiments with various MBTiles 
/ directory of tiles found in the wild, and those I produced with tippecanoe.

> 
> > If this file cannot be found, the layer schema is established by scanning
> > the features of the tile(s).
> Q1: So the reader scans all tiles on the one given zoom level and
> generates an internal metadata structure for that zoom level?

Yes. Potentially with a limitation on the number of tiles to explore with the 
TILE_COUNT_TO_ESTABLISH_FEATURE_DEFN open option

> Q2: Option JSON_FIELD=YES says "put all attributes as a serialized
> JSon dictionary"; Can a metadata.json file also be written to disk in
> case it was generated?

Not sure to understand your question. If you use JSON_FIELD=YES, it means that the driver 
will not try to establish a full schema that fit for all features, but just put the key/value pair it 
finds for each feature in a JSon dictionnary. So there's no metadata.json to write.

> Q3: Is this metadata.json accessible from an GDAL/OGR Python binding?

The open option you mean ? Yes:
https://github.com/OSGeo/gdal/blob/trunk/autotest/ogr/ogr_mvt.py#L69

> Q4: Ultimately I'd like to get a metadata.json (TileJSON compatible)
> from the above mentioned MVT input for all zoom levels (at least for
> the json key): How could I achieve this?

Manually. By iterating on the OGR layer feature definition. Are there use cases where 
metadata.json is missing ?


Note: I'm going to work on the write side of the drivers in the coming weeks.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180129/084e4a8e/attachment-0001.html>

From jmckenna at gatewaygeomatics.com  Mon Jan 29 06:39:54 2018
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Mon, 29 Jan 2018 10:39:54 -0400
Subject: [gdal-dev] ogrInfo error - Entry Point Not Found
In-Reply-To: <e5570855-d57d-d82c-6689-135ebb71ef74@mail.usf.edu>
References: <e5570855-d57d-d82c-6689-135ebb71ef74@mail.usf.edu>
Message-ID: <23f050bc-740c-10fe-32e0-e4fd335a4951@gatewaygeomatics.com>

Hi John,

I see this quite often with MS4W installations.  For testing, you might 
want to temporarily rename your C:/Program Files/PostgreSQL/ folder to 
something like PostgreSQL-test and then open a new Command Prompt window 
and re-run:   ogrinfo


-jeff


-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/




On 2018-01-28 8:04 PM, john polo wrote:
> Hi,
> 
> I am attempting to use ogrInfo to get information about a geodatabase. I 
> am using Windows 7 64bit. I have GDALÂ  installed with QGIS. The QGIS is 
> 2.18.3, but I can't find how to tell the version of GDAL that's 
> installed. I don't know much about working with a lot of the OSGeo4W64 
> software, especially when it comes to software libraries, please bear 
> with me if I do not provide the necessary information.
> 
> I looked up how to read the geodatabase with PostgreSQL. It seems I need 
> to first use ogrInfo to read what's in the geodatabase and then maybe 
> get PostGIS involved. This will probably lead to another question on 
> another list. :) Anyway, on the Windows command prompt, I used
> 
> ogrInfo C:\directories\geodatabase.gdb
> 
> and I get this error:
> 
> "ogrinfo.exe - Entry Point Not Found
> 
> The procedure entry point SSL_COMP_free_compression_methods could not be 
> located in the dynamic link library SSLEAY32.dll
> 
> "
> 
> When I searched for "SSL_COMP_free_compression_methods", several of the 
> results included references to OpenSSL. Like this one:
> https://www.openssl.org/docs/manmaster/man3/SSL_COMP_add_compression_method.html 
> 
> 
> I am unsure if the problem exists in OpenSSL or in GDAL/ogrInfo. I would 
> appreciate someone explaining how I can address the problem so that I 
> can use ogrInfo.
> 
> John
> 

From sfkeller at gmail.com  Mon Jan 29 07:21:13 2018
From: sfkeller at gmail.com (Stefan Keller)
Date: Mon, 29 Jan 2018 16:21:13 +0100
Subject: [gdal-dev] Vector Tiles in OGR
In-Reply-To: <3043081.SBPXVk7JXF@even-i700>
References: <CAH-RUCSWA55kmEW6=tH0=xb7qUFm9R4oJ6iBSxdeSrnetyRM0g@mail.gmail.com>
 <3396393.dFk3HWdx8l@even-i700>
 <CAFcOn294Pvkx8Zh-om-AF-F+TiOVLgWQcoaRWuzVcw2zTR5rWg@mail.gmail.com>
 <3043081.SBPXVk7JXF@even-i700>
Message-ID: <CAFcOn28Vkz_LBYwJXdXgprXAFOn8DfAqhPVfX4zatyep+gAffQ@mail.gmail.com>

2018-01-29 14:51 GMT+01:00 Even Rouault <even.rouault at spatialys.com>:

> Yeah, I didn't really found a specification for those. Just my experiments
> with various MBTiles / directory of tiles found in the wild, and those I
> produced with tippecanoe.

OGR has quite some impact and the announced availability of an MVT
reader and writer should be another motivation to update the MBTiles
and TileJSON spec. for MVT specs. as I suggested here [1]
(sorry Blake for pushing; don't take it personally. I'm really
frustrated by Mapbox not to update them since years :-().

>> Q3: Is this metadata.json accessible from an GDAL/OGR Python binding?
> The open option you mean ? Yes:
> ...
>> Q4: Ultimately I'd like to get a metadata.json (TileJSON compatible)
>> from the above mentioned MVT input for all zoom levels (at least for
>> the json key): How could I achieve this?
>
> Manually. By iterating on the OGR layer feature definition.

Do you suggest to simply use the MVT reader and the current OGR (or
Fiona) YPI in order to generate a single metadata.json file for all
zoom levels?

> Are there use cases where metadata.json is missing ?

Yes: A GeoServer-Extension, tilemaker, t-rex and ArcGIS-Pro can write
MVT compatible vector tiles to a directory (they say).
All these are working with JS lib like Leaflet just by assigning a
connection URL in the form {z}/{x}/{y}.pbf.

Now there are SW which need some metadata like layer names, their
fields, the geometry type, and the layer extent (see [1] for some
related issues):
Your OGR MVT reader?, t-rex tileserver, maptiler, my Vector Tiles
Reader QGIS plugin and even mbview and Mapbox Studio itself.

@Blake/Petr: I assume mbutil does not generate metadata.json in case
it does not exist?

:Stefan

[1] https://github.com/mapbox/tilejson-spec/issues/14#issuecomment-361065531




2018-01-29 14:51 GMT+01:00 Even Rouault <even.rouault at spatialys.com>:
> On lundi 29 janvier 2018 10:21:04 CET Stefan Keller wrote:
>
>> Hi Even
>
>>
>
>> Great news about this MVT reader!
>
>>
>
>> The docs [1] says:
>
>> > The MVT driver only uses the "json" key to retrieve the layer names,
>> > their
>
>> > fields and the geometry type, and the "bounds" key for the layer extent.
>
>> I just wanted to point you to the spec. discussion of MBTiles and
>
>> TileJSON metadata [2] and I hope the SW keeps aligned with it.
>
>
>
> Yeah, I didn't really found a specification for those. Just my experiments
> with various MBTiles / directory of tiles found in the wild, and those I
> produced with tippecanoe.
>
>
>
>>
>
>> > If this file cannot be found, the layer schema is established by
>> > scanning
>
>> > the features of the tile(s).
>
>> Q1: So the reader scans all tiles on the one given zoom level and
>
>> generates an internal metadata structure for that zoom level?
>
>
>
> Yes. Potentially with a limitation on the number of tiles to explore with
> the TILE_COUNT_TO_ESTABLISH_FEATURE_DEFN open option
>
>
>
>> Q2: Option JSON_FIELD=YES says "put all attributes as a serialized
>
>> JSon dictionary"; Can a metadata.json file also be written to disk in
>
>> case it was generated?
>
>
>
> Not sure to understand your question. If you use JSON_FIELD=YES, it means
> that the driver will not try to establish a full schema that fit for all
> features, but just put the key/value pair it finds for each feature in a
> JSon dictionnary. So there's no metadata.json to write.
>
>
>
>> Q3: Is this metadata.json accessible from an GDAL/OGR Python binding?
>
>
>
> The open option you mean ? Yes:
>
> https://github.com/OSGeo/gdal/blob/trunk/autotest/ogr/ogr_mvt.py#L69
>
>
>
>> Q4: Ultimately I'd like to get a metadata.json (TileJSON compatible)
>
>> from the above mentioned MVT input for all zoom levels (at least for
>
>> the json key): How could I achieve this?
>
>
>
> Manually. By iterating on the OGR layer feature definition. Are there use
> cases where metadata.json is missing ?
>
>
>
>
>
> Note: I'm going to work on the write side of the drivers in the coming
> weeks.
>
>
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com

From SGONG at mdacorporation.com  Tue Jan 30 08:00:25 2018
From: SGONG at mdacorporation.com (Gong, Shawn)
Date: Tue, 30 Jan 2018 16:00:25 +0000
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
In-Reply-To: <1710855.6NGuWWzcQj@even-i700>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>
 <2559881.ZcXFGEWL3U@even-i700>
 <7DCBC135929FF74E8A5488B1814AC6BC3FFB6B09@exbermd02.ds.mda.ca>,
 <1710855.6NGuWWzcQj@even-i700>
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC49D23FBD@exbermd02.ds.mda.ca>

Hi Even,



Your fix did remove the wrong georeferencing info. Thank you!

But I still need to run 'gdalwarp -rpc' to apply the georeferencing. It would be great if the GDAL driver can perform this extra step.




Thanks,
Shawn
________________________________
From: Even Rouault [even.rouault at spatialys.com]
Sent: January-18-18 2:42 PM
To: Gong, Shawn
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon


On lundi 15 janvier 2018 21:05:59 CET Gong, Shawn wrote:

> The SPOT7 datasets are more than 2GB.



I've pushed another fix tested against the test dataset you provided to me.



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180130/de852050/attachment.html>

From even.rouault at spatialys.com  Tue Jan 30 08:28:06 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 30 Jan 2018 17:28:06 +0100
Subject: [gdal-dev] SPOT7 DIMAP driver for tiled datasets has no lat/lon
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC49D23FBD@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FFB5A6E@exbermd02.ds.mda.ca>
 <1710855.6NGuWWzcQj@even-i700>
 <7DCBC135929FF74E8A5488B1814AC6BC49D23FBD@exbermd02.ds.mda.ca>
Message-ID: <2608808.ieybXTCJ3y@even-i700>

On mardi 30 janvier 2018 16:00:25 CET Gong, Shawn wrote:
> Hi Even,
> 
> 
> 
> Your fix did remove the wrong georeferencing info. Thank you!
> 
> But I still need to run 'gdalwarp -rpc' to apply the georeferencing. It
> would be great if the GDAL driver can perform this extra step.

This is not in the philsophy of GDAL drivers to apply such non-trivial processing steps. 
They try to expose the data & metadata as close as possible to the original values. And 
RPC warping is non-trivial since to get the optimum results you need to provide a DEM.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180130/63ef69d2/attachment.html>

From karl.zinglersen at gmail.com  Tue Jan 30 11:09:52 2018
From: karl.zinglersen at gmail.com (Karl Zinglersen)
Date: Tue, 30 Jan 2018 16:09:52 -0300
Subject: [gdal-dev] Point density gdal_rasterize -add switch
Message-ID: <CAGjWj4cm1s55k8MpDLCQ-yX297Kp8BR_cCfy9AVv4GPRv4FO=w@mail.gmail.com>

I think of create a discrete raster from points burning the number of
points of each cell into the band value. In the manual at
http://www.gdal.org/gdal_rasterize.html I figure out, that the -add switch
could be the solution. But no value has to be set unlike -burn or -a
switches.

What is the syntax for the -add switch.

Burn works:
gdal_rasterize.exe -burn 1 -tr 20 20 -l points c:/Temp/points.shp
c:/Temp/out.tif

Add doesn't
gdal_rasterize.exe -add -tr 20 20 -l points c:/Temp/points.shp
c:/Temp/out.tif

ERROR 6: One and only one of -3d, -burn or -a is required.
(-add not mentioned)

I don't think, I fully understand the manual:

Instead of burning a new value, this adds the new value to the existing
raster. Suitable for heatmaps for instance.
Installed gdal through QGIS incl. gdal_dev, both tried.

Can you give me a hint to use -add properly?

Alternatives tried:
- We have used kernel density in QGIS w. GRASS, but we think it
interpolates / searches too far.
- Points in polygon, but is too heavy for the area (Greenland EEZ).

Next step is to do raster density of lines, eventually through
gdal_rasterize or other non-interpolating / non-searching algorithm.

Karl

-- 
Karl Brix Zinglersen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180130/c57a44a0/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Jan 30 12:16:48 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Tue, 30 Jan 2018 13:16:48 -0700 (MST)
Subject: [gdal-dev] Point density gdal_rasterize -add switch
In-Reply-To: <CAGjWj4cm1s55k8MpDLCQ-yX297Kp8BR_cCfy9AVv4GPRv4FO=w@mail.gmail.com>
References: <CAGjWj4cm1s55k8MpDLCQ-yX297Kp8BR_cCfy9AVv4GPRv4FO=w@mail.gmail.com>
Message-ID: <1517343408429-0.post@n6.nabble.com>

> Burn works:
> gdal_rasterize.exe -burn 1 -tr 20 20 -l points c:/Temp/points.shp
> c:/Temp/out.tif

> Add doesn't
> gdal_rasterize.exe -add -tr 20 20 -l points c:/Temp/points.shp
> c:/Temp/out.tif

Hi,

I have never used the -add option but I would try it as 

gdal_rasterize.exe -burn 1 -add -tr 20 20 -l points c:/Temp/points.shp
c:/Temp/out.tif

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jpolo at mail.usf.edu  Tue Jan 30 12:45:31 2018
From: jpolo at mail.usf.edu (john polo)
Date: Tue, 30 Jan 2018 12:45:31 -0800
Subject: [gdal-dev] ogrInfo error - Entry Point Not Found
In-Reply-To: <23f050bc-740c-10fe-32e0-e4fd335a4951@gatewaygeomatics.com>
References: <e5570855-d57d-d82c-6689-135ebb71ef74@mail.usf.edu>
 <23f050bc-740c-10fe-32e0-e4fd335a4951@gatewaygeomatics.com>
Message-ID: <f76c8ddd-5cb1-0e2a-6008-fbcfc8dbb8cd@mail.usf.edu>

On 1/29/2018 6:39 AM, Jeff McKenna wrote:
> Hi John,
>
> I see this quite often with MS4W installations.Â  For testing, you 
> might want to temporarily rename your C:/Program Files/PostgreSQL/ 
> folder to something like PostgreSQL-test and then open a new Command 
> Prompt window and re-run:Â Â  ogrinfo
>
>
> -jeff

Jeff,

Thanks for suggestion. I did as you instructed and then Windows just 
complained that ogrInfo is not a recognized command, program, or batch 
file.

Andre Joost suggests that I have multiple versions of SSLEAY32.dll and I 
searched to confirm this and it seems I do. Several applications on my 
computer have this library and the instances have different sizes.

I'm not sure if this is the "right" way to deal with the problem, but my 
solution was to use ogrInfo like this:

[on Windows command prompt]

C:\OSGeo4W64\bin\ogrInfo D:\<directory>\geodatabase.gdb

and I get back some results. Thank you, Jeff and Andre, for the replies.


-- 
Enlightenment is ego's ultimate disappointment.
-Chogyam Trungpa


From chris.marsh at usask.ca  Tue Jan 30 15:01:38 2018
From: chris.marsh at usask.ca (Chris Marsh)
Date: Tue, 30 Jan 2018 17:01:38 -0600
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
In-Reply-To: <CAFgDerEyPuTuP8ZiEjehw3kZZ46Eo+TTbMGKHdSnO1oLMjKi6A@mail.gmail.com>
References: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
 <2594475.UVvFWGEU6N@even-i700>
 <CAFgDerEp+A9K4xJjJ14=A+QgvdtsZwXEsb132d4UU+KPhJwWZQ@mail.gmail.com>
 <3822135.iOQBfPJlNC@even-i700>
 <CAFgDerGdabK3Jkq+50Ex-zEujUrmQxuPTD6R_SaPBjrYmXNvzw@mail.gmail.com>
 <CAFgDerEyPuTuP8ZiEjehw3kZZ46Eo+TTbMGKHdSnO1oLMjKi6A@mail.gmail.com>
Message-ID: <CAFgDerHLZ2nZuP5TuH+cF9DEJnM79Zj_8F7sqOZ25mPOyQEr9A@mail.gmail.com>

To close the loop on this, it was a name conflict with the proj4 that is in
VTK
Details here:
http://vtk.1045678.n5.nabble.com/Don-t-build-vtkproj4-tp5746073p5746269.html

Thanks everyone for their help
Cheers
Chris


On 28 October 2017 at 11:26, Chris Marsh <chris.marsh at usask.ca> wrote:

> Hi all,
>
> I posted this to the proj4 mailing list and they seem pretty convinced
> this is a GDAL problem.
>
> I have tried the September gdal 2.2.2 build as well as the latest GDAL git
> build, and finally have them building thanks to Even's help.
>
> However, now GDAL just segfaults within the pj_init_ctx. As a reminder,
> it's something odd about this env as this work works flawlessly on multiple
> computers.
>
> Would appreciate any help,
>
> Cheers
> Chris
>
> [debug]: Reading forcing file data
> src/tcmalloc.cc:284] Attempt to free invalid pointer 0x2aaaafa4df20
>
> Thread 1 received signal SIGABRT, Aborted.
> 0x00002aaac4900214 in raise () from /cvmfs/soft.computecanada.ca/
> nix/var/nix/profiles/16.09/lib/libc.so.6
> (gdb) bt
> #0  0x00002aaac4900214 in raise () from /cvmfs/soft.computecanada.ca/
> nix/var/nix/profiles/16.09/lib/libc.so.6
> #1  0x00002aaac490167a in abort () from /cvmfs/soft.computecanada.ca/
> nix/var/nix/profiles/16.09/lib/libc.so.6
> #2  0x00002aaab5bd5748 in tcmalloc::Log (mode=mode at entry=tcmalloc::kCrash,
> filename=filename at entry=0x2aaab5bea66e "src/tcmalloc.cc", line=line at entry=284,
> a=..., b=..., c=..., d=...) at src/internal_logging.cc:118
> #3  0x00002aaab5bca14f in (anonymous namespace)::InvalidFree
> (ptr=<optimized out>) at src/tcmalloc.cc:284
> #4  0x00002aaab5fe7dde in pj_dealloc (ptr=<optimized out>) at
> pj_malloc.c:129
> #5  0x00002aaab5fe7ed1 in pj_default_destructor (P=P at entry=0x13c2b40,
> errlev=errlev at entry=-7) at pj_malloc.c:198
> #6  0x00002aaab5fe7234 in pj_init_ctx (ctx=ctx at entry=0x2aaab6219b20
> <default_context>, argc=<optimized out>, argv=argv at entry=0x7fffffff7a50)
> at pj_init.c:672
> #7  0x00002aaab5fe7615 in pj_init_plus_ctx (ctx=0x2aaab6219b20
> <default_context>, definition=0x24863340 "+proj=aea +lat_1=20 +lat_2=60
> +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m
> +no_defs ")
>     at pj_init.c:411
> #8  0x00002aaab4a71dc8 in OCTProj4NormalizeInternal(char const*) () from
> /home/cmarsh/CHM/build-release/lib/gdal/lib/libgdal.so.20
> #9  0x00002aaab4a71ee6 in OCTProj4Normalize () from /home/cmarsh/CHM/build-
> release/lib/gdal/lib/libgdal.so.20
> #10 0x00002aaab4a530ec in OGRSpatialReference::importFromProj4(char
> const*) () from /home/cmarsh/CHM/build-release/lib/gdal/lib/libgdal.so.20
> #11 0x0000000000520a61 in core::config_forcing (this=this at entry=0x7fffffffab50,
> value=...) at /home/cmarsh/CHM/src/core.cpp:311
> #12 0x0000000000527041 in core::init (this=this at entry=0x7fffffffab50,
> argc=argc at entry=3, argv=argv at entry=0x7fffffffafe8) at
> /home/cmarsh/CHM/src/core.cpp:1119
> #13 0x00000000004f502f in main (argc=3, argv=0x7fffffffafe8) at
> /home/cmarsh/CHM/src/main.cpp:17
>
>
> Chris Marsh
> PhD Candidate
> chrismarsh.ca
>
> 121 Research Drive
> University of Saskatchewan
>
> On 19 October 2017 at 13:41, Chris Marsh <chris.marsh at usask.ca> wrote:
>
>> echo 2 49 |  /build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
>> -t_srs "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0
>> +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" --debug on
>> OGRCT: PROJ >= 4.8.0 features enabled
>> OGRCT: Using locale-safe proj version
>> OGRCT: Source: +proj=longlat +datum=WGS84 +no_defs
>> OGRCT: Target: +proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0
>> +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
>> OGRCT: Source: +proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0
>> +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
>> OGRCT: Target: +proj=longlat +datum=WGS84 +no_defs
>> 5634252.86902731 4265258.45946341 0
>>
>>
>>
>> On 19 October 2017 at 13:34, Even Rouault <even.rouault at spatialys.com>
>> wrote:
>>
>>> On jeudi 19 octobre 2017 13:19:52 CEST Chris Marsh wrote:
>>> > Hi,
>>> >
>>> > I build GDAL by specifying --with-static-proj4  on the configure
>>> command
>>> > line. This does not seem to have resolved the problem.
>>> >
>>> > echo 2 49 | build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
>>> >
>>> > > -t_srs EPSG:32632
>>> > > -11818.9526229417 5451106.95020125 0
>>> >
>>>
>>> OK, so GDAL and proj.4 have some minimum level of functionnality
>>>
>>> And what about
>>>
>>> echo 2 49 |  gdaltransform -s_srs EPSG:4326 -t_srs "+proj=aea +lat_1=20
>>> +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80
>>> +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" --debug on
>>>
>>>
>>>
>>> --
>>> Spatialys - Geospatial professional services
>>> http://www.spatialys.com
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180130/6f6787d1/attachment.html>

From mr.samfranklin at gmail.com  Wed Jan 31 03:50:36 2018
From: mr.samfranklin at gmail.com (Sam Franklin)
Date: Wed, 31 Jan 2018 11:50:36 +0000
Subject: [gdal-dev] symbol lookup error in libgdal.so.20 on conda through
 windows subsystem for linux
Message-ID: <CAPYJVm3Xxr06Se_5ad7jM4wu3vLyzgqvw72=8riMQzjb=VbK8A@mail.gmail.com>

Hey List. Sorry to disturb. I came across this symbol error when trying to
use several gdal binaries within a conda environment on the Windows 10
Subsystem for Linux. Looks like possible linking error which I can't seem
to resolve.

### The error

$ gdalinfo
gdalinfo: symbol lookup error:
/home/sam/anaconda2/envs/py36/bin/../lib/libgdal.so.20:
undefined symbol: _ZN11xercesc_3_211InputSource11setEncodingEPKt

$ gdal_translate --version
gdal_translate: symbol lookup error:
/home/sam/anaconda2/envs/py36/bin/../lib/libgdal.so.20: undefined symbol:
_ZN11xercesc_3_211InputSource11setEncodingEPKt

### my environment

I set up a clean conda python 3.6 environment with:
$ conda create --name py36 python=3.6
$ conda install -c conda-forge gdal

$ conda list
gdal                      2.2.3                    py36_0    conda-forge
libgdal                   2.2.3                         3    conda-forge

$ conda info
active environment : py36
conda version : 4.4.7
platform : linux-64

## Other useful info:
$ gdal-config --libs
-L/home/sam/anaconda2/envs/py36/lib -lgdal

$ gdal-config --cflags
-I/home/sam/anaconda2/envs/py36/include

I got round this by simply running conda on windows 10 which does not
encounter the above symbol error.

Thought I'd let the list know and if anyone had any ideas on how to resolve?

Thanks in advance.

---
Sam Franklin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180131/b3584cf3/attachment-0001.html>

From sean at mapbox.com  Wed Jan 31 08:23:59 2018
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 31 Jan 2018 09:23:59 -0700
Subject: [gdal-dev] symbol lookup error in libgdal.so.20 on conda
 through windows subsystem for linux
In-Reply-To: <CAPYJVm3Xxr06Se_5ad7jM4wu3vLyzgqvw72=8riMQzjb=VbK8A@mail.gmail.com>
References: <CAPYJVm3Xxr06Se_5ad7jM4wu3vLyzgqvw72=8riMQzjb=VbK8A@mail.gmail.com>
Message-ID: <CADPhZXx_C_rzSyGp40We6QeyrMQCBu2u929j-8F=JSm4v5KbPw@mail.gmail.com>

Hi Sam,

I don't know how to resolve the issue. There may be some clues in the
conda-forge GDAL tracker:
https://github.com/conda-forge/gdal-feedstock/issues and it would be worth
making a new issue there if it isn't a known and fixed bug. The conda-forge
team is quick to patch and update their packages.

On Wed, Jan 31, 2018 at 4:50 AM, Sam Franklin <mr.samfranklin at gmail.com>
wrote:

> Hey List. Sorry to disturb. I came across this symbol error when trying to
> use several gdal binaries within a conda environment on the Windows 10
> Subsystem for Linux. Looks like possible linking error which I can't seem
> to resolve.
>
> ### The error
>
> $ gdalinfo
> gdalinfo: symbol lookup error: /home/sam/anaconda2/envs/py36/bin/../lib/libgdal.so.20:
> undefined symbol: _ZN11xercesc_3_211InputSource11setEncodingEPKt
>
> $ gdal_translate --version
> gdal_translate: symbol lookup error: /home/sam/anaconda2/envs/py36/bin/../lib/libgdal.so.20:
> undefined symbol: _ZN11xercesc_3_211InputSource11setEncodingEPKt
>
> ### my environment
>
> I set up a clean conda python 3.6 environment with:
> $ conda create --name py36 python=3.6
> $ conda install -c conda-forge gdal
>
> $ conda list
> gdal                      2.2.3                    py36_0    conda-forge
> libgdal                   2.2.3                         3    conda-forge
>
> $ conda info
> active environment : py36
> conda version : 4.4.7
> platform : linux-64
>
> ## Other useful info:
> $ gdal-config --libs
> -L/home/sam/anaconda2/envs/py36/lib -lgdal
>
> $ gdal-config --cflags
> -I/home/sam/anaconda2/envs/py36/include
>
> I got round this by simply running conda on windows 10 which does not
> encounter the above symbol error.
>
> Thought I'd let the list know and if anyone had any ideas on how to
> resolve?
>
> Thanks in advance.
>
> ---
> Sam Franklin
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180131/aff5ac0f/attachment.html>

From mr.samfranklin at gmail.com  Wed Jan 31 08:56:56 2018
From: mr.samfranklin at gmail.com (Sam Franklin)
Date: Wed, 31 Jan 2018 16:56:56 +0000
Subject: [gdal-dev] symbol lookup error in libgdal.so.20 on conda
 through windows subsystem for linux
In-Reply-To: <CADPhZXx_C_rzSyGp40We6QeyrMQCBu2u929j-8F=JSm4v5KbPw@mail.gmail.com>
References: <CAPYJVm3Xxr06Se_5ad7jM4wu3vLyzgqvw72=8riMQzjb=VbK8A@mail.gmail.com>
 <CADPhZXx_C_rzSyGp40We6QeyrMQCBu2u929j-8F=JSm4v5KbPw@mail.gmail.com>
Message-ID: <CAPYJVm046rk5NsJ_Wjp1TLmJrPu0EC7K0vbm9oK6sqyO8uZeNw@mail.gmail.com>

Hey Sean. Okay many thanks. Will take it up with the conda-forge people. as
you suggest. Thanks, S

---
Sam Franklin

On 31 January 2018 at 16:23, Sean Gillies <sean at mapbox.com> wrote:

> Hi Sam,
>
> I don't know how to resolve the issue. There may be some clues in the
> conda-forge GDAL tracker: https://github.com/conda-
> forge/gdal-feedstock/issues and it would be worth making a new issue
> there if it isn't a known and fixed bug. The conda-forge team is quick to
> patch and update their packages.
>
> On Wed, Jan 31, 2018 at 4:50 AM, Sam Franklin <mr.samfranklin at gmail.com>
> wrote:
>
>> Hey List. Sorry to disturb. I came across this symbol error when trying
>> to use several gdal binaries within a conda environment on the Windows 10
>> Subsystem for Linux. Looks like possible linking error which I can't seem
>> to resolve.
>>
>> ### The error
>>
>> $ gdalinfo
>> gdalinfo: symbol lookup error: /home/sam/anaconda2/envs/py36/bin/../lib/libgdal.so.20:
>> undefined symbol: _ZN11xercesc_3_211InputSource11setEncodingEPKt
>>
>> $ gdal_translate --version
>> gdal_translate: symbol lookup error: /home/sam/anaconda2/envs/py36/bin/../lib/libgdal.so.20:
>> undefined symbol: _ZN11xercesc_3_211InputSource11setEncodingEPKt
>>
>> ### my environment
>>
>> I set up a clean conda python 3.6 environment with:
>> $ conda create --name py36 python=3.6
>> $ conda install -c conda-forge gdal
>>
>> $ conda list
>> gdal                      2.2.3                    py36_0    conda-forge
>> libgdal                   2.2.3                         3    conda-forge
>>
>> $ conda info
>> active environment : py36
>> conda version : 4.4.7
>> platform : linux-64
>>
>> ## Other useful info:
>> $ gdal-config --libs
>> -L/home/sam/anaconda2/envs/py36/lib -lgdal
>>
>> $ gdal-config --cflags
>> -I/home/sam/anaconda2/envs/py36/include
>>
>> I got round this by simply running conda on windows 10 which does not
>> encounter the above symbol error.
>>
>> Thought I'd let the list know and if anyone had any ideas on how to
>> resolve?
>>
>> Thanks in advance.
>>
>> ---
>> Sam Franklin
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
>
> --
> Sean Gillies
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180131/7e6c8744/attachment.html>

