From rykovd at gmail.com  Sun Sep  2 07:43:51 2018
From: rykovd at gmail.com (Denis Rykov)
Date: Sun, 2 Sep 2018 21:43:51 +0700
Subject: [gdal-dev] Create dummy internal mask
Message-ID: <CAJbvKNpBpuujYEEBStA_9jgU7jrLZ8f01Ck3O_B_8SbdMucOfw@mail.gmail.com>

Hi,

I need to add dummy internal mask to 1-band GeoTIFF for further processing.
The drawback of the following approach is that it mask legitimate 0 pixels:

gdal_translate --config GDAL_TIFF_INTERNAL_MASK YES -mask 1 nomask.tif
> mask.tif


The workaround to come over this issue looks like:

gdal_calc.py -A nomask.tif --calc="1" --outfile=calc_mask.tif
> gdalbuildvrt -separate result.vrt nomask.tif calc_mask.tif
> gdal_translate --config GDAL_TIFF_INTERNAL_MASK YES -b 1 -mask 2
> result.vrt mask.tif


Is there an easier way to do the same?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180902/d5d5fd31/attachment.html>

From imanflow at gmail.com  Mon Sep  3 06:07:45 2018
From: imanflow at gmail.com (Imanol)
Date: Mon, 3 Sep 2018 15:07:45 +0200
Subject: [gdal-dev] Fwd: Missing _gdal_array.py,
	fail to import in Ubuntu 18.04
In-Reply-To: <CADvX2NP5WGKOCdnP+n5BiYL932qtLBsz+ZH5AF0p3k1xPf49=g@mail.gmail.com>
References: <CADvX2NP5WGKOCdnP+n5BiYL932qtLBsz+ZH5AF0p3k1xPf49=g@mail.gmail.com>
Message-ID: <CADvX2NMChw78PtcT6=qZjPG6dM8z9t4ALMX6k0nYFpbXR4p_vg@mail.gmail.com>

Dear all,

I have been struggling with these for some days. Usually I always build
from source GDAL, it tends to give me better results than install packages.

But this time no, I have tried with `./configure', `./configure
--with-python' and `./configure --with-python=python3.6'. It seems to
compile and work, until I do `ReadAsArray()`, when it complains about the
missing `_gdal_array.py`. I tried to compile also numpy from source.

I don't write only to ask for a solution, but also to try to understand
what is this file since I can't find much info about it online.
`gdal_array,py` exists, but don't know what the missing one contains.

Thank you
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180903/9219ee73/attachment.html>

From even.rouault at spatialys.com  Mon Sep  3 06:17:25 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 03 Sep 2018 15:17:25 +0200
Subject: [gdal-dev] Fwd: Missing _gdal_array.py,
	fail to import in Ubuntu 18.04
In-Reply-To: <CADvX2NMChw78PtcT6=qZjPG6dM8z9t4ALMX6k0nYFpbXR4p_vg@mail.gmail.com>
References: <CADvX2NP5WGKOCdnP+n5BiYL932qtLBsz+ZH5AF0p3k1xPf49=g@mail.gmail.com>
 <CADvX2NMChw78PtcT6=qZjPG6dM8z9t4ALMX6k0nYFpbXR4p_vg@mail.gmail.com>
Message-ID: <5030717.PM0bF5BLUI@even-i700>

Imanol,

it is likely you need also to install the python-numpy package. The 
gdal_array.py extension used by ReadAsArray() is only built if numpy is 
available when the bindings are built.

Even

> Dear all,
> 
> I have been struggling with these for some days. Usually I always build
> from source GDAL, it tends to give me better results than install packages.
> 
> But this time no, I have tried with `./configure', `./configure
> --with-python' and `./configure --with-python=python3.6'. It seems to
> compile and work, until I do `ReadAsArray()`, when it complains about the
> missing `_gdal_array.py`. I tried to compile also numpy from source.
> 
> I don't write only to ask for a solution, but also to try to understand
> what is this file since I can't find much info about it online.
> `gdal_array,py` exists, but don't know what the missing one contains.
> 
> Thank you


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Sep  3 06:22:25 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 03 Sep 2018 15:22:25 +0200
Subject: [gdal-dev] Suggestion to create drivers for a new raster format
In-Reply-To: <8A9F96D4-9770-4CE1-8371-F7BAF8294675@archeotec.ca>
References: <8A9F96D4-9770-4CE1-8371-F7BAF8294675@archeotec.ca>
Message-ID: <1720997.eEIWn6AgfM@even-i700>

On vendredi 31 août 2018 09:45:02 CEST Nicolas Cadieux wrote:
> Hi,
> 
> How do we proceed if we want GDAL team to create drivers for a new raster
> format?

Nicolas,

GDAL being open source software, the GDAL team is basically anyone willing to 
tackle on this task. You, a coworker, etc... Generally the quickest is to 
start from an existing driver whose format is the closest as the one you want 
to add support for and adapt.
There's also https://gdal.org/gdal_drivertut.html which gives a number of 
hints

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Sep  3 06:49:20 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 03 Sep 2018 15:49:20 +0200
Subject: [gdal-dev] Fwd: Missing _gdal_array.py,
	fail to import in Ubuntu 18.04
In-Reply-To: <CADvX2NOVnTg1FxJCGOV2qePL6X=i1i68NzZ31zxMmSwDr8VXHw@mail.gmail.com>
References: <CADvX2NP5WGKOCdnP+n5BiYL932qtLBsz+ZH5AF0p3k1xPf49=g@mail.gmail.com>
 <5030717.PM0bF5BLUI@even-i700>
 <CADvX2NOVnTg1FxJCGOV2qePL6X=i1i68NzZ31zxMmSwDr8VXHw@mail.gmail.com>
Message-ID: <1594852.aJ2SoN1Oga@even-i700>

(please keep the list cc'ed in your replies)

There's no such file as _gdal_array.py. But there should be a file named like 
_gdal_array.cpython-36m-x86_64-linux-gnu.so with the native code of the 
binding corresponding to gdal_array.py
Perhaps try make clean before rebuilding

> Hello Even,
> 
> It has been always installed, from pip3, I also tried to build it from
> source.. and still no success. What _gdal_array.py contains that
> gdal_array.py does not? Is it possible to just copy that file from someone
> who has it?
> 
> Imanol
> 
> 
> El lun., 3 sept. 2018 a las 15:17, Even Rouault
> (<even.rouault at spatialys.com>)
> escribió:
> > Imanol,
> > 
> > it is likely you need also to install the python-numpy package. The
> > gdal_array.py extension used by ReadAsArray() is only built if numpy is
> > available when the bindings are built.
> > 
> > Even
> > 
> > > Dear all,
> > > 
> > > I have been struggling with these for some days. Usually I always build
> > > from source GDAL, it tends to give me better results than install
> > 
> > packages.
> > 
> > > But this time no, I have tried with `./configure', `./configure
> > > --with-python' and `./configure --with-python=python3.6'. It seems to
> > > compile and work, until I do `ReadAsArray()`, when it complains about
> > > the
> > > missing `_gdal_array.py`. I tried to compile also numpy from source.
> > > 
> > > I don't write only to ask for a solution, but also to try to understand
> > > what is this file since I can't find much info about it online.
> > > `gdal_array,py` exists, but don't know what the missing one contains.
> > > 
> > > Thank you
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From imanflow at gmail.com  Mon Sep  3 07:47:26 2018
From: imanflow at gmail.com (Imanol)
Date: Mon, 3 Sep 2018 16:47:26 +0200
Subject: [gdal-dev] Fwd: Missing _gdal_array.py,
	fail to import in Ubuntu 18.04
In-Reply-To: <1594852.aJ2SoN1Oga@even-i700>
References: <CADvX2NP5WGKOCdnP+n5BiYL932qtLBsz+ZH5AF0p3k1xPf49=g@mail.gmail.com>
 <5030717.PM0bF5BLUI@even-i700>
 <CADvX2NOVnTg1FxJCGOV2qePL6X=i1i68NzZ31zxMmSwDr8VXHw@mail.gmail.com>
 <1594852.aJ2SoN1Oga@even-i700>
Message-ID: <CADvX2NNRomDPuab1xnHgz3op7k+9Od8+NM_Zx7k7wvD+x=1XGQ@mail.gmail.com>

Hey,

Actually that one is missing. I have { _gdal, _gnm, _gdalconst, _ogr,
_osr}.cpython-36m-x86-linux-gnu.so but no _
gdal_array.cpython-36m-x86-linux-gnu.so.

If there is no _gdal_array.py, why gdal_array.py tries to import it?
How can be missing _gdal_array.cpython-36m-x86-linux-gnu.so if numpy is
installed?

Well, I deleted the folder osgeo, i did make clean and compiled again, but
now i get this error:
ERROR 1: NUMPY driver was compiled against GDAL 2.2, but the current
library version is 2.3

It's getting worse.



El lun., 3 sept. 2018 a las 15:49, Even Rouault (<even.rouault at spatialys.com>)
escribió:

> (please keep the list cc'ed in your replies)
>
> There's no such file as _gdal_array.py. But there should be a file named
> like
> _gdal_array.cpython-36m-x86_64-linux-gnu.so with the native code of the
> binding corresponding to gdal_array.py
> Perhaps try make clean before rebuilding
>
> > Hello Even,
> >
> > It has been always installed, from pip3, I also tried to build it from
> > source.. and still no success. What _gdal_array.py contains that
> > gdal_array.py does not? Is it possible to just copy that file from
> someone
> > who has it?
> >
> > Imanol
> >
> >
> > El lun., 3 sept. 2018 a las 15:17, Even Rouault
> > (<even.rouault at spatialys.com>)
> > escribió:
> > > Imanol,
> > >
> > > it is likely you need also to install the python-numpy package. The
> > > gdal_array.py extension used by ReadAsArray() is only built if numpy is
> > > available when the bindings are built.
> > >
> > > Even
> > >
> > > > Dear all,
> > > >
> > > > I have been struggling with these for some days. Usually I always
> build
> > > > from source GDAL, it tends to give me better results than install
> > >
> > > packages.
> > >
> > > > But this time no, I have tried with `./configure', `./configure
> > > > --with-python' and `./configure --with-python=python3.6'. It seems to
> > > > compile and work, until I do `ReadAsArray()`, when it complains about
> > > > the
> > > > missing `_gdal_array.py`. I tried to compile also numpy from source.
> > > >
> > > > I don't write only to ask for a solution, but also to try to
> understand
> > > > what is this file since I can't find much info about it online.
> > > > `gdal_array,py` exists, but don't know what the missing one contains.
> > > >
> > > > Thank you
> > >
> > > --
> > > Spatialys - Geospatial professional services
> > > http://www.spatialys.com
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180903/0548a13c/attachment.html>

From even.rouault at spatialys.com  Mon Sep  3 11:09:42 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 03 Sep 2018 20:09:42 +0200
Subject: [gdal-dev] Create dummy internal mask
In-Reply-To: <CAJbvKNpBpuujYEEBStA_9jgU7jrLZ8f01Ck3O_B_8SbdMucOfw@mail.gmail.com>
References: <CAJbvKNpBpuujYEEBStA_9jgU7jrLZ8f01Ck3O_B_8SbdMucOfw@mail.gmail.com>
Message-ID: <1677359.nHEIeknKnc@even-i700>

On dimanche 2 septembre 2018 21:43:51 CEST Denis Rykov wrote:
> Hi,
> 
> I need to add dummy internal mask to 1-band GeoTIFF for further processing.
> The drawback of the following approach is that it mask legitimate 0 pixels:
> 
> gdal_translate --config GDAL_TIFF_INTERNAL_MASK YES -mask 1 nomask.tif
> 
> > mask.tif
> 
> The workaround to come over this issue looks like:
> 
> gdal_calc.py -A nomask.tif --calc="1" --outfile=calc_mask.tif
> 
> > gdalbuildvrt -separate result.vrt nomask.tif calc_mask.tif
> > gdal_translate --config GDAL_TIFF_INTERNAL_MASK YES -b 1 -mask 2
> > result.vrt mask.tif
> 
> Is there an easier way to do the same?

Not necessarily shorter, but less convoluted way that should be faster on 
large datasets:

$ python

from osgeo import gdal
ds = gdal.Open('my.tif', gdal.GA_Update)
gdal.SetConfigOption('GDAL_TIFF_INTERNAL_MASK', 'YES')
ds.CreateMaskBand(gdal.GMF_PER_DATASET)
band = ds.GetRasterBand(1).GetMaskBand()
band.Fill(255)


Other possibility, assuming that there is a pixel value that never appears in 
the band:

nearblack -color VALUE_THAT_DOES_NOT_APPEAR -near 0 -nb 0 -setmask \
	-o out.tif in.tif --config GDAL_TIFF_INTERNAL_MASK YES

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gilpeleg at live.com  Tue Sep  4 14:26:05 2018
From: gilpeleg at live.com (Gil)
Date: Tue, 4 Sep 2018 21:26:05 +0000
Subject: [gdal-dev] gdal_translate doesn't create GeoPackage's metadata
Message-ID: <AM0PR0402MB3489A02DB67FAEC73A1DE7F4BA030@AM0PR0402MB3489.eurprd04.prod.outlook.com>

Hey all,

I got two questions:
1) I have a question about something I believe is a bug, I recently upgraded from 2.0.2 to 2.3.1, when using gdal_translate to convert a GeoTiff to GeoPackage it doesn't create the GeoPackage's metadata tables (gpkg_metadata/gpkg_metadata_reference).

If I create without the tiling scheme, like this, it works just fine, it creates the tables with data in them:
gdal_translate.exe -of GPKG a.tif b.gpkg

When specifying the tiling scheme, it doesn't create the tables (tried GoogleCRS84Quad / InspireCRS84Quad):
gdal_translate.exe -co TILING_SCHEME=GoogleCRS84Quad -of GPKG a.tif b.gpkg

When specifying like the above and setting CREATE_METADATA_TABLES to YES, it creates the tables but they are empty:
gdal_translate.exe -co TILING_SCHEME=GoogleCRS84Quad -of GPKG a.tif b.gpkg  --config CREATE_METADATA_TABLES YES

I don't assume this is the wanted behavior, in 2.0.2 it worked fine.

2) I have another question relating to GoogleCRS84Quad, I know this may not be the best place to ask this and you may ignore this if you wish, I am trying to make sure I understand the specs correctly, as far as I understand level 0 has 1 tile that covers the world. Is there any alternate definition that says otherwise? In http://docs.opengeospatial.org/is/13-082r2/13-082r2.html which is a later dated document than the one in GDAL specs, it says that the level -1 has one tile and 0 has two tiles, I may just be mixing two different definitions, which I assume I am, but I was hoping if someone could clarify.

Thank you!
Gil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180904/7157f9f7/attachment.html>

From avrahami.ben at gmail.com  Wed Sep  5 00:45:32 2018
From: avrahami.ben at gmail.com (Ben Avrahami)
Date: Wed, 5 Sep 2018 10:45:32 +0300
Subject: [gdal-dev] Working with GeoPackage using python API
Message-ID: <CALFWR8F-T3EC76vkoivi+9YYG8-qAs5i4yjip2Ff6Uaar+oyCg@mail.gmail.com>

Hello, I'm trying to use GDAL python API to work with geopackage files, and
I ran into some trouble

First off, when creating a geopackage raster, the created raster is always
4-bands. After running this code:

import ogr, osr, gdal
import numpy as np

dst_path = 'out.gpkg'
srs = osr.SpatialReference()
srs.ImportFromEPSG(4326)
options = ()
driver = gdal.GetDriverByName('GPKG')
dst_ds = driver.Create(dst_path, 19, 10, 1, options=options)
dst_ds.SetGeoTransform((30, 0.01, 0.0, 30, 0.0, -0.01))
dst_ds.SetProjection(srs.ExportToWkt())
band = dst_ds.GetRasterBand(1)
array = np.array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1],
[1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1],
[1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1],
[1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1],
[1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])
band.WriteArray(array)
band.FlushCache()
assert dst_ds.RasterCount == 1
del dst_ds


I get a 4-band raster (weirdly enough, with all RGB bands set to the
set value, and the ALPHA set 255)


Second, the API has no mention as to how to work with the geopackage
to save/load multiple raster layers and vector layers simultaneously.

All my attempts at creating a geopackage file with both a raster layer
and a vector layer have failed, either with the vector layer not
appearing or standard errors.


Any help at all would be appreciated, thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180905/21298c43/attachment.html>

From even.rouault at spatialys.com  Wed Sep  5 00:53:45 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 05 Sep 2018 09:53:45 +0200
Subject: [gdal-dev] gdal_translate doesn't create GeoPackage's metadata
In-Reply-To: <AM0PR0402MB3489A02DB67FAEC73A1DE7F4BA030@AM0PR0402MB3489.eurprd04.prod.outlook.com>
References: <AM0PR0402MB3489A02DB67FAEC73A1DE7F4BA030@AM0PR0402MB3489.eurprd04.prod.outlook.com>
Message-ID: <9628360.fKSoH4TbdD@even-i700>

Gil,

> 
> I got two questions:
> 1) I have a question about something I believe is a bug, I recently upgraded
> from 2.0.2 to 2.3.1, when using gdal_translate to convert a GeoTiff to
> GeoPackage it doesn't create the GeoPackage's metadata tables
> (gpkg_metadata/gpkg_metadata_reference).
 
> If I create without the tiling scheme, like this, it works just fine, it
> creates the tables with data in them:
 gdal_translate.exe -of GPKG a.tif
> b.gpkg
> 
> When specifying the tiling scheme, it doesn't create the tables (tried
> GoogleCRS84Quad / InspireCRS84Quad):
 gdal_translate.exe -co
> TILING_SCHEME=GoogleCRS84Quad -of GPKG a.tif b.gpkg 
> When specifying like the above and setting CREATE_METADATA_TABLES to YES, it
> creates the tables but they are empty:
 gdal_translate.exe -co
> TILING_SCHEME=GoogleCRS84Quad -of GPKG a.tif b.gpkg  --config
> CREATE_METADATA_TABLES YES 
> I don't assume this is the wanted behavior, in 2.0.2 it worked fine.

>From my testing, it didn't work fine in 2.0.2 either: it just created empty 
tables. I've just fixed that issue in GDAL master and backported to 2.3 
branch.

> 
> 2) I have another question relating to GoogleCRS84Quad, I know this may not
> be the best place to ask this and you may ignore this if you wish, I am
> trying to make sure I understand the specs correctly, as far as I
> understand level 0 has 1 tile that covers the world. Is there any alternate
> definition that says otherwise? In
> http://docs.opengeospatial.org/is/13-082r2/13-082r2.html which is a later
> dated document than the one in GDAL specs, it says that the level -1 has
> one tile and 0 has two tiles, I may just be mixing two different
> definitions, which I assume I am, but I was hoping if someone could
> clarify.

Interesting. I've added that "clarification" to the driver doc:

+NOTE: <a href="http://docs.opengeospatial.org/is/
13-082r2/13-082r2.html#30">OGC WMTS Simple Profile 13-082r2</a>
+changed the definition of GoogleCRS84Quad (so not implemented by the driver).
+The new definition includes a -1 level (that cannot be modeled in GeoPackage 
given
+constraints on zoom_level being positive or 0), with a single tile at origin 
-180,90
+and whose bottom 128 lines are empty. Levels 0 or greater are identical to 
the
+InspireCRS84Quad tiling scheme. So for practical purposes, InspireCRS84Quad 
in
+GeoPackage is conformant to the new GoogleCRS84Quad definition.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Sep  5 01:01:24 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 05 Sep 2018 10:01:24 +0200
Subject: [gdal-dev] Working with GeoPackage using python API
In-Reply-To: <CALFWR8F-T3EC76vkoivi+9YYG8-qAs5i4yjip2Ff6Uaar+oyCg@mail.gmail.com>
References: <CALFWR8F-T3EC76vkoivi+9YYG8-qAs5i4yjip2Ff6Uaar+oyCg@mail.gmail.com>
Message-ID: <5064029.BGQ1ZMBxr3@even-i700>

Ben,

> Hello, I'm trying to use GDAL python API to work with geopackage files, and
> I ran into some trouble
> 
> First off, when creating a geopackage raster, the created raster is always
> 4-bands.

There is no concept of bands in GeoPackage. The raster code for visualization 
(the tile gridded coverage data extension, triggered if you create a non-Byte 
dataset, is more for analytics but limited to 1-band coverages). So you could 
have a mix of tiles with just one band (and a color table), RGB, RGBA, etc. 
The driver goes on the safe side on reading and always expose a RGBA dataset.

> Second, the API has no mention as to how to work with the geopackage
> to save/load multiple raster layers and vector layers simultaneously.
> 

Multiple raster layers can be added by using the APPEND_SUBDATASET=YES 
creation option. See
https://github.com/OSGeo/gdal/blob/master/autotest/gdrivers/gpkg.py#L1254

For multiple vector layers, this is just a matter of calling CreateLayer() as 
many times as needed, as for all other vector drivers

https://github.com/OSGeo/gdal/blob/master/autotest/gdrivers/gpkg.py#L3685 for 
examples adds a vector layer to a dataset with a pre-existing raster layer.
(You don't need to play with CREATE_GEOMETRY_COLUMNS or the ExecuteSQL(). 
Those are just for the purpose of testing the correct behaviour of the driver)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From idan at miara.com  Wed Sep  5 09:44:27 2018
From: idan at miara.com (Idan Miara)
Date: Wed, 5 Sep 2018 19:44:27 +0300
Subject: [gdal-dev] WMS-C gdal xml file
Message-ID: <CAEDrt3_a1U9Vgx1yhaK_FradXLfYtYhTEChfEtsuKctfvc=-Eg@mail.gmail.com>

Hi,

I'm trying to load the layer 'terrain' from the following WMS-C server:
https://tiles.maps.eox.at/wms?service=wms&request=getcapabilities
via gdal with the attached XML file.
I get just a black image.
Any ideas?

Thanks,
Idan.

<GDAL_WMS>
<Service name="WMS">
<Version>1.1.1</Version>
<ServerUrl>https://tiles.maps.eox.at/wms?</ServerUrl>
<Layers>terrain</Layers>
</Service>
<DataWindow>
<UpperLeftX>-180.0</UpperLeftX>
<UpperLeftY>90.0</UpperLeftY>
<LowerRightX>180.0</LowerRightX>
<LowerRightY>-90.0</LowerRightY>
<TileLevel>17</TileLevel>
<TileCountX>2</TileCountX>
<TileCountY>1</TileCountY>
</DataWindow>
<Projection>EPSG:4326</Projection>
<BlockSizeX>256</BlockSizeX>
<BlockSizeY>256</BlockSizeY>
<BandsCount>1</BandsCount>
</GDAL_WMS>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180905/6d65589d/attachment-0001.html>

From doug_newcomb at fws.gov  Wed Sep  5 13:48:52 2018
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Wed, 5 Sep 2018 16:48:52 -0400
Subject: [gdal-dev] Maximum size of Raster and vector layers in geopackage
	database
Message-ID: <CALQGVr2BgWbxyrbHwBzHWb7PUBL-9u_pg4ahF+a916Nti7n-WA@mail.gmail.com>

Hi Folks,
I was in a meeting today and the question came up:
What is the maximum size of a vector data layer in a geopackage database? a
raster layer?
I did not see the answer in the few minutes of searching the internet, so
thought I would ask here.

Doug



-- 
Doug Newcomb - Cartographer
USFWS
551F Pylon Dr
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov
---------------------------------------------------------------------------------------------------------

*NOTE: This email correspondence and any attachments to and from this
sender is subject to the Freedom of Information Act (FOIA) and may be
disclosed to third parties.*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180905/6c750fe9/attachment.html>

From even.rouault at spatialys.com  Thu Sep  6 00:11:35 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Sep 2018 09:11:35 +0200
Subject: [gdal-dev] Maximum size of Raster and vector layers in
	geopackage database
In-Reply-To: <CALQGVr2BgWbxyrbHwBzHWb7PUBL-9u_pg4ahF+a916Nti7n-WA@mail.gmail.com>
References: <CALQGVr2BgWbxyrbHwBzHWb7PUBL-9u_pg4ahF+a916Nti7n-WA@mail.gmail.com>
Message-ID: <2877648.yUA8bRykr6@even-i700>

On mercredi 5 septembre 2018 16:48:52 CEST Newcomb, Doug wrote:
> Hi Folks,
> I was in a meeting today and the question came up:
> What is the maximum size of a vector data layer in a geopackage database? a
> raster layer?

No limits other than the ones of the SQLite format

Quoting http://www.geopackage.org/spec/
"""
The maximum size of a GeoPackage file is about 140TB [K4a]. In practice a 
lower size limit MAY be imposed by the filesystem to which the file is 
written. Many mobile devices require external memory cards to be formatted 
using the FAT32 file system which imposes a maximum size limit of 4GB.
"""

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Thu Sep  6 00:20:46 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 6 Sep 2018 00:20:46 -0700 (MST)
Subject: [gdal-dev] Maximum size of Raster and vector layers in
 geopackage database
In-Reply-To: <CALQGVr2BgWbxyrbHwBzHWb7PUBL-9u_pg4ahF+a916Nti7n-WA@mail.gmail.com>
References: <CALQGVr2BgWbxyrbHwBzHWb7PUBL-9u_pg4ahF+a916Nti7n-WA@mail.gmail.com>
Message-ID: <1536218446790-0.post@n6.nabble.com>

Doug Newcomb-2 wrote
> Hi Folks,
> I was in a meeting today and the question came up:
> What is the maximum size of a vector data layer in a geopackage database?
> a
> raster layer?
> I did not see the answer in the few minutes of searching the internet, so
> thought I would ask here.
> 
> Doug

Hi,

The limitations of SQLite itself apply https://www.sqlite.org/limits.html so
you can't go over 140 terabytes.

Practical limits depend on how you use GeoPackage. Some operations like
VACUUM or, perhaps surprisingly, renaming a column of a table require
re-writing of the whole database which is slow.  If you insert and delete
data and tables frequently it is good to vacuum it every now and then and
keep the database rather small, let's say under 10 GB. If the usage is
mostly read-only then I think that how you are going to deliver data for the
users sets the limits, not the format.  Even 10 GB can be rather expensive
for mobile users.

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From a.furieri at lqt.it  Thu Sep  6 00:27:37 2018
From: a.furieri at lqt.it (a.furieri at lqt.it)
Date: Thu, 06 Sep 2018 09:27:37 +0200
Subject: [gdal-dev] Maximum size of Raster and vector layers in
 geopackage database
In-Reply-To: <2877648.yUA8bRykr6@even-i700>
References: <CALQGVr2BgWbxyrbHwBzHWb7PUBL-9u_pg4ahF+a916Nti7n-WA@mail.gmail.com>
 <2877648.yUA8bRykr6@even-i700>
Message-ID: <2a5417f4ccc9603b0afaf34cdfa6608d@lqt.it>

On Thu, 06 Sep 2018 09:11:35 +0200, Even Rouault wrote:
> On mercredi 5 septembre 2018 16:48:52 CEST Newcomb, Doug wrote:
>> Hi Folks,
>> I was in a meeting today and the question came up:
>> What is the maximum size of a vector data layer in a geopackage 
>> database? a
>> raster layer?
>
> No limits other than the ones of the SQLite format
>
> Quoting http://www.geopackage.org/spec/
> """
> The maximum size of a GeoPackage file is about 140TB [K4a]. In 
> practice a
> lower size limit MAY be imposed by the filesystem to which the file 
> is
> written. Many mobile devices require external memory cards to be 
> formatted
> using the FAT32 file system which imposes a maximum size limit of 
> 4GB.
> """
>

Just for the sake of curiosity, during last years a testing session
based on SpatiaLite and RasterLite (same identical SQLite architecture
as in GeoPackage) produced an impressive 320 GB db-file, and anything
worked as expected.
We then stopped any further testing just because we had completely
exhausted any available disk storage.

bye Sandro

From even.rouault at spatialys.com  Thu Sep  6 01:44:32 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Sep 2018 10:44:32 +0200
Subject: [gdal-dev] GDAL 2.3.2 planning
Message-ID: <3093837.CUcIe5oYXQ@even-i700>

Hi

I'll cut a GDAL 2.3.2 RC1 likely on Friday Sept 21st

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From doug_newcomb at fws.gov  Thu Sep  6 05:19:14 2018
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Thu, 6 Sep 2018 08:19:14 -0400
Subject: [gdal-dev] [EXTERNAL] Re: Maximum size of Raster and vector
 layers in geopackage database
In-Reply-To: <2a5417f4ccc9603b0afaf34cdfa6608d@lqt.it>
References: <CALQGVr2BgWbxyrbHwBzHWb7PUBL-9u_pg4ahF+a916Nti7n-WA@mail.gmail.com>
 <2877648.yUA8bRykr6@even-i700> <2a5417f4ccc9603b0afaf34cdfa6608d@lqt.it>
Message-ID: <CALQGVr1gaAg3YqCK3O3hJ=TGHx6ROneTDCThDinXNPcSawtKuA@mail.gmail.com>

Thank you for all of the responses!

Doug

On Thu, Sep 6, 2018 at 3:35 AM <a.furieri at lqt.it> wrote:

> On Thu, 06 Sep 2018 09:11:35 +0200, Even Rouault wrote:
> > On mercredi 5 septembre 2018 16:48:52 CEST Newcomb, Doug wrote:
> >> Hi Folks,
> >> I was in a meeting today and the question came up:
> >> What is the maximum size of a vector data layer in a geopackage
> >> database? a
> >> raster layer?
> >
> > No limits other than the ones of the SQLite format
> >
> > Quoting http://www.geopackage.org/spec/
> > """
> > The maximum size of a GeoPackage file is about 140TB [K4a]. In
> > practice a
> > lower size limit MAY be imposed by the filesystem to which the file
> > is
> > written. Many mobile devices require external memory cards to be
> > formatted
> > using the FAT32 file system which imposes a maximum size limit of
> > 4GB.
> > """
> >
>
> Just for the sake of curiosity, during last years a testing session
> based on SpatiaLite and RasterLite (same identical SQLite architecture
> as in GeoPackage) produced an impressive 320 GB db-file, and anything
> worked as expected.
> We then stopped any further testing just because we had completely
> exhausted any available disk storage.
>
> bye Sandro
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Doug Newcomb - Cartographer
USFWS
551F Pylon Dr
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov
---------------------------------------------------------------------------------------------------------

*NOTE: This email correspondence and any attachments to and from this
sender is subject to the Freedom of Information Act (FOIA) and may be
disclosed to third parties.*​
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180906/ecaa59b9/attachment.html>

From Odd-Ragnar.Lydersen at powel.no  Fri Sep  7 02:57:13 2018
From: Odd-Ragnar.Lydersen at powel.no (Odd Ragnar Lydersen)
Date: Fri, 7 Sep 2018 09:57:13 +0000
Subject: [gdal-dev] C++ API for WCS: GetCapabilities and the new cache
Message-ID: <4a2ded7bc85a4693910d738edc2c1211@ITTRHEX001.powelasa.powel.com>


Hi, I'm struggling to understand the new setup for WCS.

In the documentation it says:
- If the URL does not contain a coverage name, the driver attempts to fetch the capabilities document from the server, parse it, and show the resulting metadata to the user.

How is this  done using the C++ API?
- I would like to get the result from GetCapabilities listed, so that I can parse the result to establish what the coverage names are, for a given wcs.

Also from the documentation:
- Note that when the "WCS:<URL>" syntax for dataset name is used, the contents of the service description file is meant to be modified by using options

Are these options set by calling the GDALOpen function like, GDALOpen("wcs: UserPwd=myPwd; HttpAuth=BASIC; ...",  GA_ReadOnly)?

>Odd-Ragnar<


From ari.jolma at gmail.com  Fri Sep  7 04:19:37 2018
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 7 Sep 2018 14:19:37 +0300
Subject: [gdal-dev] C++ API for WCS: GetCapabilities and the new cache
In-Reply-To: <4a2ded7bc85a4693910d738edc2c1211@ITTRHEX001.powelasa.powel.com>
References: <4a2ded7bc85a4693910d738edc2c1211@ITTRHEX001.powelasa.powel.com>
Message-ID: <66b752e1-6607-465e-bdc8-5acfe5f9bd6b@gmail.com>

Odd Ragnar Lydersen kirjoitti 07.09.2018 klo 12:57:

> Hi, I'm struggling to understand the new setup for WCS.
>
> In the documentation it says:
> - If the URL does not contain a coverage name, the driver attempts to fetch the capabilities document from the server, parse it, and show the resulting metadata to the user.
>
> How is this  done using the C++ API?

The "show the resulting metadata to the user" is assuming gdalinfo. If 
you do for instance

gdalinfo 
WCS:https://beta-karttakuva.maanmittauslaitos.fi/wcs/service/ows?version=2.0.1

,i.e., opening that URL with the WCS driver, the driver downloads the 
capabilities XML into the cache (probably $HOME/.gdal/wcs_cache/), 
parses it, and creates - into the cache - a PAMDataset metadata file. 
The latter contains the coverages as subdatasets for example.

This is the same as calling GDALOpenEx with the URL. GDALOpenEx gives 
you a GDALDataset object.

> - I would like to get the result from GetCapabilities listed, so that I can parse the result to establish what the coverage names are, for a given wcs.

The capabilities XML is in the cache but the driver has the code to 
parse it and it has parsed it.

>
> Also from the documentation:
> - Note that when the "WCS:<URL>" syntax for dataset name is used, the contents of the service description file is meant to be modified by using options
>
> Are these options set by calling the GDALOpen function like, GDALOpen("wcs: UserPwd=myPwd; HttpAuth=BASIC; ...",  GA_ReadOnly)?

The options are in the OpenOptions parameter in GDALOpenEx.

Best,

Ari

>
>> Odd-Ragnar<
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From Victor.Poughon at cnes.fr  Fri Sep  7 06:10:20 2018
From: Victor.Poughon at cnes.fr (Poughon Victor)
Date: Fri, 7 Sep 2018 13:10:20 +0000
Subject: [gdal-dev] Reading remote jp2k files
In-Reply-To: <1709869.hQjZ6NzhqS@even-i700>
References: <CAGYeuZnRxN1AQSsGFndv9_4zqwhP-iDew+3nvyXvFxZOOpQXdQ@mail.gmail.com>
 <1709869.hQjZ6NzhqS@even-i700>
Message-ID: <3E55146A6A81B44A9CB69CAB65908CEA5A2F363A@TW-MBX-P01.cnesnet.ad.cnes.fr>

Hi Even,

> For windowed reads, you need to prefix with /vsicurl/, but I don't guarantee
> the efficiency of this with JPEG2000 in general, and with JP2OpenJPEG in
> particular.

I'm a jp2000 noob but do you know if windowed reads of remote jp2 data could be optimized in some way? I am curious if we could see a "cloud optimized jpeg2000" someday?




Victor Poughon

> -----Message d'origine-----
> De : gdal-dev <gdal-dev-bounces at lists.osgeo.org> De la part de Even Rouault
> Envoyé : mercredi 25 juillet 2018 18:00
> À : gdal-dev at lists.osgeo.org
> Objet : Re: [gdal-dev] Reading remote jp2k files
> 
> Matt,
> 
> >
> > I'm having trouble reading JP2K files remotely. I originally ran into
> > this problem when trying to use remote Sentinel-2 files as input to
> > the GDAL Warp API in C++. It works when I use a local version of the file.
> >
> > I'm not sure if this is supported behavior, I thought it was, but to
> > test I tried gdal_translate on a remote file, and one with the local file.
> >
> > $ gdal_translate
> > https://sentinel-s2-l1c.s3.amazonaws.com/tiles/32/T/QR/2018/1/21/0/B04
> > .jp2
> > sentinel-test-remote.tif -f GTiff
> > $ gdal_translate B03.jp2 sentinel-test-local.tif -f GTiff
> >
> > The local file works fine, but when using the remote file
> > gdal_translate just crashes with no error message.
> 
> A process crash ? Can you get a stack trace / valgrind output ?
> 
> I tried, and it failed in a regular way, since when you use http:// the HTTP driver triggers. This
> driver downloads the whole file in memory before passing it to the real driver, and it deleted the
> temp file, whereas the JP2OpenJPEG driver needs to be able to re-open it. Just fixed that issue
> 
> >
> > I'm using GDAL 2.3.1 with openjpeg 2.3, I'm using a docker image
> > developmentseed/geolambda:1.0.0 and you can see the Dockerfile here:
> >
> > https://github.com/developmentseed/geolambda/blob/master/Dockerfile
> >
> > Is this supported behavior, should I be able to read these files remotely,
> > and do windowed reads on them?
> 
> For windowed reads, you need to prefix with /vsicurl/, but I don't guarantee
> the efficiency of this with JPEG2000 in general, and with JP2OpenJPEG in
> particular.
> 
> Even
> 
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From even.rouault at spatialys.com  Fri Sep  7 06:39:49 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 07 Sep 2018 15:39:49 +0200
Subject: [gdal-dev] Reading remote jp2k files
In-Reply-To: <3E55146A6A81B44A9CB69CAB65908CEA5A2F363A@TW-MBX-P01.cnesnet.ad.cnes.fr>
References: <CAGYeuZnRxN1AQSsGFndv9_4zqwhP-iDew+3nvyXvFxZOOpQXdQ@mail.gmail.com>
 <1709869.hQjZ6NzhqS@even-i700>
 <3E55146A6A81B44A9CB69CAB65908CEA5A2F363A@TW-MBX-P01.cnesnet.ad.cnes.fr>
Message-ID: <1694356.n8OcXUKTk1@even-i700>

Victor,

> 
> I'm a jp2000 noob but do you know if windowed reads of remote jp2 data could
> be optimized in some way? I am curious if we could see a "cloud optimized
> jpeg2000" someday?

There is the JPIP protocol that was designed for efficient streaming, but it 
requires a dedicated server and client.

For a pure HTTP file-serving solution, there are different aspects
* For non-tiled JPEG2000, coefficients are spread a bit over the whole file, 
so you may have to seek a lot to get them. I guess some progression orders 
might be more favorable (namely PCRL: Position-component-resolution level-
layer) if you want to have efficient subwindowing, but that should be tested.
* For tiled JPEG2000, the above issue becomes less relevant, but the main 
issue is to be able to efficiently locate a tile in the file. For that, the 
optional TLM packet marker should be written in the JPEG2000 file

Those were theoretical concerns. Now on the practical side, some 
implementations might be better than others in making an efficient use of file 
optimizations. For non-tiled JPEG2000, OpenJPEG currently requires ingesting 
the whole codestream in memory (even if since openjpeg 2.3 only a subpart of 
it will be decompressed for windowed reads). And for tiled JPEG2000, it 
ignores the TLM marker and browse through the tilepart headers to identify the 
tiles. So work would be needed to improve that. From recollection, Kakadu does 
a good job in those areas.

An alternative might be to store JPEG2000 blobs as the payload of a tiled 
GeoTIFF. There are some software editors that do that, apparently in slightly 
different ways (they might not always put a completely valid JPEG2000 
codestream, not sure)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From haevitetty at gmail.com  Fri Sep  7 08:31:41 2018
From: haevitetty at gmail.com (Thomas Horner)
Date: Fri, 7 Sep 2018 09:31:41 -0600
Subject: [gdal-dev] GDAL processing of GRIB2 raster prints hundreds of
	unsuppressable warnings
Message-ID: <CAOvtYK-ak3NwudTq+6QJmNn+BiY+cOmi-uO20KRNN_Mx+gidGg@mail.gmail.com>

Hello,

I am processing some GRIB2 raster files from NCEP (weather model stuff). An
example file would be:
http://nomads.ncep.noaa.gov/pub/data/nccf/com/hiresw/prod/href.20180907/ensprod/href.t00z.conus.mean.f06.grib2

When I use various GDAL tools to process the file it prints this line for
each of the dozens of bands in the raster:

Warning: Master table version == 0, was experimental
I don't have a copy, and don't know where to get oneUse meta data at
your own risk

Ok, that warning is fine -- but it's a major problem when I process the
file with raster2pgsql as it dumps that message dozens of times into the
SQL, which causes an error when I attempt to load it into the db.
Using gdalwarp
-q or gdal_translate -q still prints the message hundreds of times despite
being in quiet mode which makes my log files nearly unreadable as I am
processing hundreds of these GRIB files.

The piece of GDAL code responsible for this is:
https://github.com/OSGeo/gdal/blob/master/gdal/frmts/grib/degrib/degrib/metaparse.cpp

I assume NOAA/NCEP will not be fixing their GRIB files any time soon (they
are a very understaffed federal agency) so what can I do on my end to
suppress these warnings?  Can this message be fixed or able to be
suppressed?

At best, this is annoying and slow -- at worst, it creates significantly
extra overhead in my processing chain to keep this from breaking my output
datasets.

thomas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180907/f90df80f/attachment-0001.html>

From even.rouault at spatialys.com  Fri Sep  7 10:32:36 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 07 Sep 2018 19:32:36 +0200
Subject: [gdal-dev] GDAL processing of GRIB2 raster prints hundreds of
	unsuppressable warnings
In-Reply-To: <CAOvtYK-ak3NwudTq+6QJmNn+BiY+cOmi-uO20KRNN_Mx+gidGg@mail.gmail.com>
References: <CAOvtYK-ak3NwudTq+6QJmNn+BiY+cOmi-uO20KRNN_Mx+gidGg@mail.gmail.com>
Message-ID: <1679658.tIlf4WPPsh@even-i700>

On vendredi 7 septembre 2018 09:31:41 CEST Thomas Horner wrote:
> Hello,
> 
> I am processing some GRIB2 raster files from NCEP (weather model stuff). An
> example file would be:
> http://nomads.ncep.noaa.gov/pub/data/nccf/com/hiresw/prod/href.20180907/ensp
> rod/href.t00z.conus.mean.f06.grib2
> 
> When I use various GDAL tools to process the file it prints this line for
> each of the dozens of bands in the raster:
> 
> Warning: Master table version == 0, was experimental
> I don't have a copy, and don't know where to get oneUse meta data at
> your own risk
> 

I've pushed a fix in master and branch/2.3 to turn this printf() into a silent 
CPLDebug() message.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at aitchison.me.uk  Fri Sep  7 10:56:05 2018
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 7 Sep 2018 18:56:05 +0100 (BST)
Subject: [gdal-dev] GDAL processing of GRIB2 raster prints hundreds of
 unsuppressable warnings
In-Reply-To: <CAOvtYK-ak3NwudTq+6QJmNn+BiY+cOmi-uO20KRNN_Mx+gidGg@mail.gmail.com>
References: <CAOvtYK-ak3NwudTq+6QJmNn+BiY+cOmi-uO20KRNN_Mx+gidGg@mail.gmail.com>
Message-ID: <alpine.LRH.2.21.1809071718500.4136@warden.aitchison.me.uk>

On Fri, 7 Sep 2018, Thomas Horner wrote:

> Hello,
>
> I am processing some GRIB2 raster files from NCEP (weather model stuff). An
> example file would be:
> http://nomads.ncep.noaa.gov/pub/data/nccf/com/hiresw/prod/href.20180907/ensprod/href.t00z.conus.mean.f06.grib2
>
> When I use various GDAL tools to process the file it prints this line for
> each of the dozens of bands in the raster:
>
> Warning: Master table version == 0, was experimental
> I don't have a copy, and don't know where to get oneUse meta data at
> your own risk
>
> Ok, that warning is fine -- but it's a major problem when I process the
> file with raster2pgsql as it dumps that message dozens of times into the
> SQL, which causes an error when I attempt to load it into the db.
> Using gdalwarp
> -q or gdal_translate -q still prints the message hundreds of times despite
> being in quiet mode which makes my log files nearly unreadable as I am
> processing hundreds of these GRIB files.
>
> The piece of GDAL code responsible for this is:
> https://github.com/OSGeo/gdal/blob/master/gdal/frmts/grib/degrib/degrib/metaparse.cpp
>
> I assume NOAA/NCEP will not be fixing their GRIB files any time soon (they
> are a very understaffed federal agency) so what can I do on my end to
> suppress these warnings?  Can this message be fixed or able to be
> suppressed?

I don't know whether that code is resynced with anyone outside gdal,
in which case this suggestion might be a problem ...

I would replace the printf() calls with calls to CPLDebug(), as used in 
degrib1.cpp in the same folder (you need to add an extra argument - 
probably "GRIB").
That way the messages would be suppressed, unless CPL_DEBUG is set appropriately,
and when enabled will appear in the appropriate place in gui applications 
like qgis.

I'd also be tempted to have a counter to control how often the 
message is seen (perhaps every time the counter is a power of two).

> At best, this is annoying and slow -- at worst, it creates significantly
> extra overhead in my processing chain to keep this from breaking my output
> datasets.

-- 
Andrew C. Aitchison					Cambridge, UK
 			andrew at aitchison.me.uk

From sean at mapbox.com  Fri Sep  7 12:33:02 2018
From: sean at mapbox.com (Sean Gillies)
Date: Fri, 7 Sep 2018 13:33:02 -0600
Subject: [gdal-dev] Streamlining GDAL CI builds?
Message-ID: <CADPhZXxNFwdWFUiAuFrFPV_SNgwDLky0pTR6BKDS=EAyCg7B+w@mail.gmail.com>

Hi all,

I'd love to help speed up the GDAL CI builds. I think that between removing
or streamlining some targets and getting more resources on Travis and
AppVeyor, we could possibly get green lights on pull requests in 25 minutes.

I'm not familiar with the Clang static analyzer. Are there any constraints
to how finely its work can be split into parts? If these are the longest
running jobs, can they be split so that they are not the longest running
jobs?

Ubuntu precise is past EOL. Can the relatively slow builds running on
Ubuntu precise instances be deleted?

I'm mostly ignorant when it comes to Windows – would caching the OBJDIR
for  builds on AppVeyor help? Could it reduce build time by half like
ccache does for builds on Linux and OSX?

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180907/f07ca170/attachment.html>

From even.rouault at spatialys.com  Fri Sep  7 13:16:57 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 07 Sep 2018 22:16:57 +0200
Subject: [gdal-dev] Streamlining GDAL CI builds?
In-Reply-To: <CADPhZXxNFwdWFUiAuFrFPV_SNgwDLky0pTR6BKDS=EAyCg7B+w@mail.gmail.com>
References: <CADPhZXxNFwdWFUiAuFrFPV_SNgwDLky0pTR6BKDS=EAyCg7B+w@mail.gmail.com>
Message-ID: <1619898.0I6yHyMHqv@even-i700>

Hi Sean,

> I'd love to help speed up the GDAL CI builds.> I think that between removing
> or streamlining some targets and getting more resources on Travis and
> AppVeyor, we could possibly get green lights on pull requests in 25 minutes.

Would be good, but probably hard to get to that point with the same coverage. 
They are subtle differences in all those configs.

The slowness of ubuntu_1604 is mostly due to running scripts/cppcheck.sh (that 
one could potentially be parallelized)

> 
> I'm not familiar with the Clang static analyzer. Are there any constraints
> to how finely its work can be split into parts? If these are the longest
> running jobs, can they be split so that they are not the longest running
> jobs?

Each file is analyzed separately, so could be split as much as wanted, but 
that might require adding subtargets in makefiles to group subdirectories of 
frmts or ogr/ogrsf_frmts. See ci/travis/csa_part_1/install.sh and ci/travis/
csa_part_2/install.sh for the current splitting

> 
> Ubuntu precise is past EOL. Can the relatively slow builds running on
> Ubuntu precise instances be deleted?

The 2 configs that still rely on precise could probably be upgraded to trusty. 
They are not really testing precise, more an historical artifact. But with my 
experience with maintaining the CI stuff, hell is in the details...
The big_endian one uses a cross-compiler and must not depend that much on 
precise since it doesn't rely on third-party libraries
The gcc52_stdcpp14_sanitize uses a custom gcc (with newer toolchains, the 
sanitizer option would be available), but uses all the libs available on 
precise, so I can anticipate that some updates will be needed. The slowness is 
due to running the test suite under the sanitize

> 
> I'm mostly ignorant when it comes to Windows – would caching the OBJDIR
> for  builds on AppVeyor help?

My fear would be that the makefile.vc do not capture well header dependencies, 
and thus if a .h is changed only, the cpp files that use it are not properly 
recompiled.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From norman.barker at gmail.com  Tue Sep 11 08:00:55 2018
From: norman.barker at gmail.com (Norman Barker)
Date: Tue, 11 Sep 2018 10:00:55 -0500
Subject: [gdal-dev] Reading remote jp2k files
In-Reply-To: <1694356.n8OcXUKTk1@even-i700>
References: <CAGYeuZnRxN1AQSsGFndv9_4zqwhP-iDew+3nvyXvFxZOOpQXdQ@mail.gmail.com>
 <1709869.hQjZ6NzhqS@even-i700>
 <3E55146A6A81B44A9CB69CAB65908CEA5A2F363A@TW-MBX-P01.cnesnet.ad.cnes.fr>
 <1694356.n8OcXUKTk1@even-i700>
Message-ID: <CAN_Dn-EuMQCGAh-yTjE=T+X8uk-M5pcwiXa3doHkbhg1NtbS2w@mail.gmail.com>

Victor, Even

Depande and Zeng did propose a HTTP JPEG2000 solution which is documented
by Taubman here -
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.2758&rep=rep1&type=pdf


Precincts and Tiles are different approaches for data access within J2K,
and defining a J2K profile (and an encoder that supports it) for grouping
packets that contribute to a particular precinct closely together in the
file would improve J2K access over HTTP byte-range requests even more than
tile access.

I don't necessarily agree that you need index tables to do this within a
file, but they wouldn't hurt imo, I have written a commercial JPIP server
in the past. For Cloud Optimized Wavelets to work we need J2K
encoder/decoders that are designed for this use case and that is
non-trivial.

Norman




On Fri, Sep 7, 2018 at 8:40 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Victor,
>
> >
> > I'm a jp2000 noob but do you know if windowed reads of remote jp2 data
> could
> > be optimized in some way? I am curious if we could see a "cloud optimized
> > jpeg2000" someday?
>
> There is the JPIP protocol that was designed for efficient streaming, but
> it
> requires a dedicated server and client.
>
> For a pure HTTP file-serving solution, there are different aspects
> * For non-tiled JPEG2000, coefficients are spread a bit over the whole
> file,
> so you may have to seek a lot to get them. I guess some progression orders
> might be more favorable (namely PCRL: Position-component-resolution level-
> layer) if you want to have efficient subwindowing, but that should be
> tested.
> * For tiled JPEG2000, the above issue becomes less relevant, but the main
> issue is to be able to efficiently locate a tile in the file. For that,
> the
> optional TLM packet marker should be written in the JPEG2000 file
>
> Those were theoretical concerns. Now on the practical side, some
> implementations might be better than others in making an efficient use of
> file
> optimizations. For non-tiled JPEG2000, OpenJPEG currently requires
> ingesting
> the whole codestream in memory (even if since openjpeg 2.3 only a subpart
> of
> it will be decompressed for windowed reads). And for tiled JPEG2000, it
> ignores the TLM marker and browse through the tilepart headers to identify
> the
> tiles. So work would be needed to improve that. From recollection, Kakadu
> does
> a good job in those areas.
>
> An alternative might be to store JPEG2000 blobs as the payload of a tiled
> GeoTIFF. There are some software editors that do that, apparently in
> slightly
> different ways (they might not always put a completely valid JPEG2000
> codestream, not sure)
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180911/f086fe57/attachment.html>

From kristofer.krus at liu.se  Wed Sep 12 01:48:34 2018
From: kristofer.krus at liu.se (krikr42)
Date: Wed, 12 Sep 2018 01:48:34 -0700 (MST)
Subject: [gdal-dev] How to read all metadata from GeoTIFF file?
Message-ID: <1536742114886-0.post@n6.nabble.com>

Hi,

I have two tiff images, of which the first one is a GeoTIFF image and the
second is a tiff image created from the first one by opening it with pyvips
in Python, modifying it (blurring it) and saving it as a new file (so I
don't know whether the second image counts as a GeoTIFF file). However, the
second image lacks a lot of metadata that exists in the first image which I
need, such as the coordinate system and corner coordinates.

How can I read this metadata from the first file with GDAL (in Python,
although I guess the C++ API is pretty similar)? I have already tried
loading the file as a GDAL dataset using  gdal.Open
<https://gdal.org/python/osgeo.gdal-module.html>   and reading the data with
the  GetMetadata
<https://www.gdal.org/classGDALMajorObject.html#a8ce3bf5795bbebfe9bc643e2152bb360>  
method, and I have looked in the  domains
<https://www.gdal.org/gdal_datamodel.html>   'SUBDATASETS',
'IMAGE_STRUCTURE', 'RPC', 'IMAGERY' as well as the default domain, but none
of those contain the information about the coordinate system or the
coordinates. There are supposedly also xml: domains, and I'm wondering
whether the data I'm looking for may be under an xml domain, but I don't
know what the name of that domain would be, and I can't find any way to list
available domains (is there any? Because that would be great).

So, how can I read the metadata specifying the coordinate system and corner
coordinates from the first file and write it to the other? If I can read it
with GetMetadata, I suppose I will also be able to write it with 
SetMetadata
<https://www.gdal.org/classGDALMajorObject.html#a61ab7226d95b20e3e1f42461a1f62906>  
(I was able to do that for the domains listed above).

I have also tried to transfer the information by reading it with the command
line tool gdalinfo and writing it with gdal_translate, but that fails as 1)
I don't know how to write all the relevant metadata with gdal_translate and
2) the metadata that I try to write isn't successfully written as the
coordinate system information – which looks to be JSON-formatted – ends up
with a different JSON-tag in the root element and with some elements
missing.

Regards

Kristofer



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From traviskirstine at gmail.com  Wed Sep 12 07:27:20 2018
From: traviskirstine at gmail.com (Travis Kirstine)
Date: Wed, 12 Sep 2018 10:27:20 -0400
Subject: [gdal-dev] How to read all metadata from GeoTIFF file?
In-Reply-To: <1536742114886-0.post@n6.nabble.com>
References: <1536742114886-0.post@n6.nabble.com>
Message-ID: <CALtm4h2N8o3i3wM_S+bnjL6NbjKqROShu6rD2E9AD9DeZ2cp+g@mail.gmail.com>

Kristofer,

Could you use the gdal createcopy method first to create the 'second' image
before opening it with pyvips


fileformat = "GTiff"
driver = gdal.GetDriverByName(fileformat)
src_ds = gdal.Open(src_filename)
dst_ds = driver.CreateCopy(dst_filename, src_ds, strict=0)
# Once we're done, close properly the dataset
dst_ds = None
src_ds = None

Regards


On Wed, 12 Sep 2018 at 04:48, krikr42 <kristofer.krus at liu.se> wrote:

> Hi,
>
> I have two tiff images, of which the first one is a GeoTIFF image and the
> second is a tiff image created from the first one by opening it with pyvips
> in Python, modifying it (blurring it) and saving it as a new file (so I
> don't know whether the second image counts as a GeoTIFF file). However, the
> second image lacks a lot of metadata that exists in the first image which I
> need, such as the coordinate system and corner coordinates.
>
> How can I read this metadata from the first file with GDAL (in Python,
> although I guess the C++ API is pretty similar)? I have already tried
> loading the file as a GDAL dataset using  gdal.Open
> <https://gdal.org/python/osgeo.gdal-module.html>   and reading the data
> with
> the  GetMetadata
> <
> https://www.gdal.org/classGDALMajorObject.html#a8ce3bf5795bbebfe9bc643e2152bb360>
>
> method, and I have looked in the  domains
> <https://www.gdal.org/gdal_datamodel.html>   'SUBDATASETS',
> 'IMAGE_STRUCTURE', 'RPC', 'IMAGERY' as well as the default domain, but none
> of those contain the information about the coordinate system or the
> coordinates. There are supposedly also xml: domains, and I'm wondering
> whether the data I'm looking for may be under an xml domain, but I don't
> know what the name of that domain would be, and I can't find any way to
> list
> available domains (is there any? Because that would be great).
>
> So, how can I read the metadata specifying the coordinate system and corner
> coordinates from the first file and write it to the other? If I can read it
> with GetMetadata, I suppose I will also be able to write it with
> SetMetadata
> <
> https://www.gdal.org/classGDALMajorObject.html#a61ab7226d95b20e3e1f42461a1f62906>
>
> (I was able to do that for the domains listed above).
>
> I have also tried to transfer the information by reading it with the
> command
> line tool gdalinfo and writing it with gdal_translate, but that fails as 1)
> I don't know how to write all the relevant metadata with gdal_translate and
> 2) the metadata that I try to write isn't successfully written as the
> coordinate system information – which looks to be JSON-formatted – ends up
> with a different JSON-tag in the root element and with some elements
> missing.
>
> Regards
>
> Kristofer
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180912/f8fddfa7/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Thu Sep 13 01:00:00 2018
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Thu, 13 Sep 2018 08:00:00 +0000
Subject: [gdal-dev] Meaning of First pass in reading GeoJSON
Message-ID: <9331009358a14b7d8fd25e859d051158@C119S212VM042.msvyvi.vaha.local>

Hi,

What does GDAL do when it reads the whole GeoJSON file as "GeoJSON: First pass"? Could it make the total process faster if user could give the same information that is gathered with the First pass somehow directly, or is that step needed in any case?

Microsoft has an excellent GeoJSON dataset with 145 million building footprints for benchmarking at https://github.com/Microsoft/USBuildingFootprints under ODbL license (so there is at least one other user than OpenStreetMap for this license).

-Jukka Rahkonen-


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180913/9bc863a4/attachment.html>

From even.rouault at spatialys.com  Thu Sep 13 01:28:27 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 13 Sep 2018 10:28:27 +0200
Subject: [gdal-dev] Meaning of First pass in reading GeoJSON
In-Reply-To: <9331009358a14b7d8fd25e859d051158@C119S212VM042.msvyvi.vaha.local>
References: <9331009358a14b7d8fd25e859d051158@C119S212VM042.msvyvi.vaha.local>
Message-ID: <9755974.oSFqu4KyRm@even-i700>

On jeudi 13 septembre 2018 08:00:00 CEST Rahkonen Jukka (MML) wrote:
> Hi,
> 
> What does GDAL do when it reads the whole GeoJSON file as "GeoJSON: First
> pass"? Could it make the total process faster if user could give the same
> information that is gathered with the First pass somehow directly, or is
> that step needed in any case?

The first pass does a full scan of the file to mostly detect the attribute 
schema and the layer geometry type.
In theory it could be omitted if the user had a way to provide that 
information, but that would mean a new format & code for that...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Thu Sep 13 02:09:32 2018
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Thu, 13 Sep 2018 09:09:32 +0000
Subject: [gdal-dev] Meaning of First pass in reading GeoJSON
Message-ID: <fb83b74c48194c5292fb70cc5f5d0057@C119S212VM042.msvyvi.vaha.local>

Even Rouault wrote:
 
On jeudi 13 septembre 2018 08:00:00 CEST Rahkonen Jukka (MML) wrote:
>> Hi,
>> 
>> What does GDAL do when it reads the whole GeoJSON file as "GeoJSON: 
>> First pass"? Could it make the total process faster if user could give 
>> the same information that is gathered with the First pass somehow 
>> directly, or is that step needed in any case?

> The first pass does a full scan of the file to mostly detect the attribute schema and the layer geometry >type.
> In theory it could be omitted if the user had a way to provide that information, but that would mean a new format & code for that...

>Even

That certain dataset contains just geometries but no attributes. I do not know if geometries are all polygons of if multipolygons can also appear. However, I hoped that by setting the environment variable 
ATTRIBUTES_SKIP=YES and defining -nlt PROMOTE_TO_MULTI I could make GDAL to skip the first pass. I think that in this special case there is already a way to provide both the the schema and geometry type. I can also see that GDAL did read the ATTRIBUTES_SKIP setting correctly.

GeoJSON: Skip all attributes.
GeoJSON: First pass: 4136960 bytes read
...

-Jukka-

From jukka.rahkonen at maanmittauslaitos.fi  Thu Sep 13 02:40:40 2018
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Thu, 13 Sep 2018 09:40:40 +0000
Subject: [gdal-dev] Meaning of First pass in reading GeoJSON
Message-ID: <4998cb2c0faa4928b1f0f8e5484fb689@C119S212VM042.msvyvi.vaha.local>

Rahkonen Jukka (MML) wrote:

> That certain dataset contains just geometries but no attributes. I do not know if geometries are all 
> polygons of if multipolygons can also appear. However, I hoped that by setting the environment
> variable ATTRIBUTES_SKIP=YES and defining -nlt PROMOTE_TO_MULTI I could make GDAL to skip the
> first pass. I think that in this special case there is already a way to provide both the the schema and
> geometry type. I can also see that GDAL did read the ATTRIBUTES_SKIP setting correctly.

> GeoJSON: Skip all attributes.
> GeoJSON: First pass: 4136960 bytes read

I forgot to mention that another existing option that user has for defining the schema and geometrytype is to write data into existing target by using ogrinfo with -append but without -addfields.

-Jukka-

From dalia at lmi.is  Thu Sep 13 07:51:15 2018
From: dalia at lmi.is (Dalia Prizginiene)
Date: Thu, 13 Sep 2018 14:51:15 +0000
Subject: [gdal-dev] gdalwarp together with proj5 pipelines
Message-ID: <VI1PR0902MB2047B79B779187720AF985CFC71A0@VI1PR0902MB2047.eurprd09.prod.outlook.com>

Hello,

Is it possible to use gdalwarp together with pipelines "+proj=pipeline +step  +inv  +proj=lcc  +lat_1=64...

to transform the raster into different datum?


In here http://osgeo-org.1560.x6.nabble.com/gdal-dev-proj-5-support-added-in-trunk-td5358899.html it is said that "-ct" it could be used. But at the moment this option does not work.


Maybe there is another option how to use gdalwarp together with pipelines of proj5?


Dalia

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180913/e2fd46d6/attachment.html>

From even.rouault at spatialys.com  Thu Sep 13 08:00:02 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 13 Sep 2018 17:00:02 +0200
Subject: [gdal-dev] gdalwarp together with proj5 pipelines
In-Reply-To: <VI1PR0902MB2047B79B779187720AF985CFC71A0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
References: <VI1PR0902MB2047B79B779187720AF985CFC71A0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
Message-ID: <3434497.icWRYCmyry@even-i700>

Dalia,

No, this is not yet possible. This is in my todo-list as part of my ongoing 
work in PROJ, GDAL, libgeotiff to support WKT2, PROJ5 new features.

For now, you have to use -s_srs / -t_srs with projections method supported by 
PROJ

Even

> Hello,
> 
> Is it possible to use gdalwarp together with pipelines "+proj=pipeline +step
>  +inv  +proj=lcc  +lat_1=64...
> 
> to transform the raster into different datum?
> 
> 
> In here
> http://osgeo-org.1560.x6.nabble.com/gdal-dev-proj-5-support-added-in-trunk-> td5358899.html it is said that "-ct" it could be used. But at the moment
> this option does not work.
> 
> 
> Maybe there is another option how to use gdalwarp together with pipelines of
> proj5?
> 
> 
> Dalia


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From finn at arildsen.com  Thu Sep 13 08:32:27 2018
From: finn at arildsen.com (FA)
Date: Thu, 13 Sep 2018 08:32:27 -0700 (MST)
Subject: [gdal-dev] Exception in GDALAllRegister()
Message-ID: <1536852747862-0.post@n6.nabble.com>

I have built GDAL.lib as a static library for Win32 using Visual C++ 2017. 
The library uses std-lib Tools\MSVC\14.15.26726 

Using an "empty" test application, I experience a crash in GDALAllRegister,
more precisely a NULL pointer dereferencing in xtree when    
GDALAddDerivedBandPixelFunc("real", RealPixelFunc) executes
osMapPixelFunction[pszFuncName] = pfnNewFunction;

	template<class _Other>
		_Nodeptr _Lbound(const _Other& _Keyval) const
		{	// find leftmost node not less than _Keyval
		_Nodeptr _Wherenode = this->_Get_data()._Myhead;	// end() if search fails
>>>		_Nodeptr _Pnode = _Wherenode->_Parent;

because _Wherenode is NULL.

Does anyone know if this could be due to an incompatibility between GDAL and
the VC version of the std-lib?




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Thu Sep 13 09:19:00 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 13 Sep 2018 18:19:00 +0200
Subject: [gdal-dev] Exception in GDALAllRegister()
In-Reply-To: <1536852747862-0.post@n6.nabble.com>
References: <1536852747862-0.post@n6.nabble.com>
Message-ID: <6434384.qxc3TLurav@even-i700>

On jeudi 13 septembre 2018 08:32:27 CEST FA wrote:
> I have built GDAL.lib as a static library for Win32 using Visual C++ 2017.
> The library uses std-lib Tools\MSVC\14.15.26726
> 
> Using an "empty" test application, I experience a crash in GDALAllRegister,
> more precisely a NULL pointer dereferencing in xtree when
> GDALAddDerivedBandPixelFunc("real", RealPixelFunc) executes
> osMapPixelFunction[pszFuncName] = pfnNewFunction;
> 
> 	template<class _Other>
> 		_Nodeptr _Lbound(const _Other& _Keyval) const
> 		{	// find leftmost node not less than _Keyval
> 		_Nodeptr _Wherenode = this->_Get_data()._Myhead;	// end() if search 
fails
> 
> >>>		_Nodeptr _Pnode = _Wherenode->_Parent;
> 
> because _Wherenode is NULL.
> 
> Does anyone know if this could be due to an incompatibility between GDAL and
> the VC version of the std-lib?

This might perhaps be due to incompatible runtime options used to compile GDAL 
and your application. Particularly if you compiled GDAL 2.2 or earlier in 
debug mode where it used /MD by default and not /MDd (this has changed 
starting with GDAL 2.3)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From markus.metz.giswork at gmail.com  Thu Sep 13 13:15:41 2018
From: markus.metz.giswork at gmail.com (Markus Metz)
Date: Thu, 13 Sep 2018 22:15:41 +0200
Subject: [gdal-dev] gdalwarp together with proj5 pipelines
In-Reply-To: <VI1PR0902MB2047B79B779187720AF985CFC71A0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
References: <VI1PR0902MB2047B79B779187720AF985CFC71A0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
Message-ID: <CAG+h=FGEqsXC=MhzsGHjvnAcEUoXDkrrbnSW4i4WC+n0d3kO2A@mail.gmail.com>

On Thu, Sep 13, 2018 at 4:52 PM Dalia Prizginiene <dalia at lmi.is> wrote:
>
> Hello,
>
> Is it possible to use gdalwarp together with pipelines "+proj=pipeline
+step  +inv  +proj=lcc  +lat_1=64...
>
> to transform the raster into different datum?
>
>
> In here
http://osgeo-org.1560.x6.nabble.com/gdal-dev-proj-5-support-added-in-trunk-td5358899.html
it is said that "-ct" it could be used. But at the moment this option does
not work.
>
>
> Maybe there is another option how to use gdalwarp together with pipelines
of proj5?

Custom proj5-style pipelines are supported in GRASS 7.6, not yet released.
GRASS uses GDAL + PROJ for reprojection, and any testing on this new
feature would help those projects.

In GRASS 7.6, you can define custom proj5-pipelines with r.proj pipeline=...

Markus M
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180913/ea7829a5/attachment.html>

From Jon.Morris at jbarisk.com  Fri Sep 14 01:43:13 2018
From: Jon.Morris at jbarisk.com (Jon Morris)
Date: Fri, 14 Sep 2018 08:43:13 +0000
Subject: [gdal-dev] How to read all metadata from GeoTIFF file?
In-Reply-To: <1536742114886-0.post@n6.nabble.com>
References: <1536742114886-0.post@n6.nabble.com>
Message-ID: <LO1P123MB1188D354D5F3CAFEA8C215E682190@LO1P123MB1188.GBRP123.PROD.OUTLOOK.COM>

Hi Kristofer,

We have a function to transfer the tags manually, but most of the information is in the domain without a name - you have to call ds.GetMetadata(''). It goes something like this. For the bands, we're only copying some items, but you could take out the for loop and copy them all.


BASE_METADATA_DOMAIN = ''
IMAGE_METADATA_DOMAIN = 'IMAGE_STRUCTURE'


def set_tags_for_domain(src, dst, domain):
    src_tags = src.GetMetadata(domain)
    dst_tags = dst.GetMetadata(domain)
    dst_tags.update(src_tags)
    dst.SetMetadata(dst_tags, domain)


def transfer_tags(src, dst, band_order=None, dest_band=None):
    """Transfer metadata tags from one dataset to another."""
set_tags_for_domain(src, dst, BASE_METADATA_DOMAIN)
set_tags_for_domain(src, dst, IMAGE_METADATA_DOMAIN)

bands = band_order or range(1, dst.RasterCount + 1)
for i, band in enumerate(bands):
bnd_tags = src.GetRasterBand(band).GetMetadata(BASE_METADATA_DOMAIN)
dst_bnd = dst.GetRasterBand(dest_band or i + 1)

# copy selected items
for mditem in ("RETURN_PERIOD", "UNITS", "SCALE"):
if mditem in bnd_tags:
dst_bnd.SetMetadataItem(mditem, bnd_tags[mditem])


Regards,

Jon


-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of krikr42
Sent: 12 September 2018 09:49
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] How to read all metadata from GeoTIFF file?

Hi,

I have two tiff images, of which the first one is a GeoTIFF image and the second is a tiff image created from the first one by opening it with pyvips in Python, modifying it (blurring it) and saving it as a new file (so I don't know whether the second image counts as a GeoTIFF file). However, the second image lacks a lot of metadata that exists in the first image which I need, such as the coordinate system and corner coordinates.

How can I read this metadata from the first file with GDAL (in Python, although I guess the C++ API is pretty similar)? I have already tried loading the file as a GDAL dataset using  gdal.Open
<https://gdal.org/python/osgeo.gdal-module.html>   and reading the data with
the  GetMetadata
<https://www.gdal.org/classGDALMajorObject.html#a8ce3bf5795bbebfe9bc643e2152bb360>
method, and I have looked in the  domains
<https://www.gdal.org/gdal_datamodel.html>   'SUBDATASETS',
'IMAGE_STRUCTURE', 'RPC', 'IMAGERY' as well as the default domain, but none of those contain the information about the coordinate system or the coordinates. There are supposedly also xml: domains, and I'm wondering whether the data I'm looking for may be under an xml domain, but I don't know what the name of that domain would be, and I can't find any way to list available domains (is there any? Because that would be great).

So, how can I read the metadata specifying the coordinate system and corner coordinates from the first file and write it to the other? If I can read it with GetMetadata, I suppose I will also be able to write it with SetMetadata <https://www.gdal.org/classGDALMajorObject.html#a61ab7226d95b20e3e1f42461a1f62906>
(I was able to do that for the domains listed above).

I have also tried to transfer the information by reading it with the command line tool gdalinfo and writing it with gdal_translate, but that fails as 1) I don't know how to write all the relevant metadata with gdal_translate and
2) the metadata that I try to write isn't successfully written as the coordinate system information – which looks to be JSON-formatted – ends up with a different JSON-tag in the root element and with some elements missing.

Regards

Kristofer



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png] <https://www.linkedin.com/in/jon-morris-a2897b4/>  [Follow us on Twitter] <https://twitter.com/jbarisk>

From chiara.marmo at u-psud.fr  Fri Sep 14 02:09:17 2018
From: chiara.marmo at u-psud.fr (Chiara Marmo)
Date: Fri, 14 Sep 2018 09:09:17 +0000 (GMT)
Subject: [gdal-dev] Python GDAL ImportError: ... undefined symbol:
	CPLGetErrorCounter
In-Reply-To: <1697520889.1066774.1536914489925.JavaMail.zimbra@u-psud.fr>
Message-ID: <135460344.1108165.1536916157040.JavaMail.zimbra@u-psud.fr>

Hello,

I'm on Fedora28
I'm working on a custom version of GDAL (only fitsdataset.cpp is modified), up to date with the last upstream version from github.

I need to test python bindings: so I've followed the instructions here[1] in order to have them linked with my gdal version.
The build process went fine.
But when I try to import gdal in my local jupyter notebook the following error is thrown

from osgeo import gdal

---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
<ipython-input-2-8a0c40533a07> in <module>()
     10 
     11 from astropy.io import fits
---> 12 from osgeo import gdal

/usr/local/lib64/python3.6/site-packages/GDAL-2.3.0-py3.6-linux-x86_64.egg/osgeo/__init__.py in <module>()
     19                 fp.close()
     20             return _mod
---> 21     _gdal = swig_import_helper()
     22     del swig_import_helper
     23 else:

/usr/local/lib64/python3.6/site-packages/GDAL-2.3.0-py3.6-linux-x86_64.egg/osgeo/__init__.py in swig_import_helper()
     15         if fp is not None:
     16             try:
---> 17                 _mod = imp.load_module('_gdal', fp, pathname, description)
     18             finally:
     19                 fp.close()

/usr/lib64/python3.6/imp.py in load_module(name, file, filename, details)
    241                 return load_dynamic(name, filename, opened_file)
    242         else:
--> 243             return load_dynamic(name, filename, file)
    244     elif type_ == PKG_DIRECTORY:
    245         return load_package(name, filename)

/usr/lib64/python3.6/imp.py in load_dynamic(name, path, file)
    341         spec = importlib.machinery.ModuleSpec(
    342             name=name, loader=loader, origin=path)
--> 343         return _load(spec)
    344 
    345 else:

ImportError: /usr/local/lib64/python3.6/site-packages/GDAL-2.3.0-py3.6-linux-x86_64.egg/osgeo/_gdal.cpython-36m-x86_64-linux-gnu.so: undefined symbol: CPLGetErrorCounter




Am I doing something wrong?

BTW, I know it's a detail, but maybe in [1] it could worth to add that bindings for python3 are built with the command "python3 setup.py build" ... I always forget it... :(

Thanks for listening,
Best

Chiara 


[1] https://trac.osgeo.org/gdal/wiki/BuildingOnUnix


-- 
Chiara Marmo
Ingénieur de Recherche GEOPS - Paris Sud-11
Bât 509
Tel: +33 (0)1 69 15 49 03 

From gdal at stripfamily.net  Fri Sep 14 06:28:21 2018
From: gdal at stripfamily.net (David Strip)
Date: Fri, 14 Sep 2018 07:28:21 -0600
Subject: [gdal-dev] How to read all metadata from GeoTIFF file?
In-Reply-To: <LO1P123MB1188D354D5F3CAFEA8C215E682190@LO1P123MB1188.GBRP123.PROD.OUTLOOK.COM>
References: <1536742114886-0.post@n6.nabble.com>
 <LO1P123MB1188D354D5F3CAFEA8C215E682190@LO1P123MB1188.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <9291e544-9883-f734-193c-169ffac39775@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180914/b90f1710/attachment.html>

From even.rouault at spatialys.com  Fri Sep 14 07:43:25 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Sep 2018 16:43:25 +0200
Subject: [gdal-dev] How to read all metadata from GeoTIFF file?
In-Reply-To: <1536742114886-0.post@n6.nabble.com>
References: <1536742114886-0.post@n6.nabble.com>
Message-ID: <6151771.79XuzMm9qN@even-i700>

On mercredi 12 septembre 2018 01:48:34 CEST krikr42 wrote:
> Hi,
> 
> I have two tiff images, of which the first one is a GeoTIFF image and the
> second is a tiff image created from the first one by opening it with pyvips
> in Python, modifying it (blurring it) and saving it as a new file (so I
> don't know whether the second image counts as a GeoTIFF file). However, the
> second image lacks a lot of metadata that exists in the first image which I
> need, such as the coordinate system and corner coordinates.
> 
> How can I read this metadata from the first file with GDAL (in Python,
> although I guess the C++ API is pretty similar)? I have already tried
> loading the file as a GDAL dataset using  gdal.Open
> <https://gdal.org/python/osgeo.gdal-module.html>   and reading the data with
> the  GetMetadata
> <https://www.gdal.org/classGDALMajorObject.html#a8ce3bf5795bbebfe9bc643e2152
> bb360> method, and I have looked in the  domains
> <https://www.gdal.org/gdal_datamodel.html>   'SUBDATASETS',
> 'IMAGE_STRUCTURE', 'RPC', 'IMAGERY' as well as the default domain, but none
> of those contain the information about the coordinate system or the
> coordinates. There are supposedly also xml: domains, and I'm wondering
> whether the data I'm looking for may be under an xml domain, but I don't
> know what the name of that domain would be, and I can't find any way to list
> available domains (is there any? Because that would be great).
> 
> So, how can I read the metadata specifying the coordinate system and corner
> coordinates from the first file and write it to the other? If I can read it
> with GetMetadata, I suppose I will also be able to write it with
> SetMetadata
> <https://www.gdal.org/classGDALMajorObject.html#a61ab7226d95b20e3e1f42461a1f
> 62906> (I was able to do that for the domains listed above).
> 
> I have also tried to transfer the information by reading it with the command
> line tool gdalinfo and writing it with gdal_translate, but that fails as 1)
> I don't know how to write all the relevant metadata with gdal_translate and
> 2) the metadata that I try to write isn't successfully written as the
> coordinate system information – which looks to be JSON-formatted – ends up
> with a different JSON-tag in the root element and with some elements
> missing.

You need to use SetGeoTransform() / GetGeoTransform() and SetProjection() / 
GetProjectionRef() to transfer georeferencing information.
Overall presentation at https://gdal.org/gdal_datamodel.html


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Sep 14 07:44:47 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Sep 2018 16:44:47 +0200
Subject: [gdal-dev] Python GDAL ImportError: ... undefined symbol:
	CPLGetErrorCounter
In-Reply-To: <135460344.1108165.1536916157040.JavaMail.zimbra@u-psud.fr>
References: <135460344.1108165.1536916157040.JavaMail.zimbra@u-psud.fr>
Message-ID: <1908532.ycHrGNBi67@even-i700>

On vendredi 14 septembre 2018 09:09:17 CEST Chiara Marmo wrote:
> Hello,
> 
> I'm on Fedora28
> I'm working on a custom version of GDAL (only fitsdataset.cpp is modified),
> up to date with the last upstream version from github.
> 
> I need to test python bindings: so I've followed the instructions here[1] in
> order to have them linked with my gdal version. The build process went
> fine.
> But when I try to import gdal in my local jupyter notebook the following
> error is thrown
> 
> from osgeo import gdal
> 
> ---------------------------------------------------------------------------
> ImportError                               Traceback (most recent call last)
> <ipython-input-2-8a0c40533a07> in <module>()
>      10
>      11 from astropy.io import fits
> ---> 12 from osgeo import gdal
> 
> /usr/local/lib64/python3.6/site-packages/GDAL-2.3.0-py3.6-linux-x86_64.egg/o
> sgeo/__init__.py in <module>() 19                 fp.close()
>      20             return _mod
> ---> 21     _gdal = swig_import_helper()
>      22     del swig_import_helper
>      23 else:
> 
> /usr/local/lib64/python3.6/site-packages/GDAL-2.3.0-py3.6-linux-x86_64.egg/o
> sgeo/__init__.py in swig_import_helper() 15         if fp is not None:
>      16             try:
> ---> 17                 _mod = imp.load_module('_gdal', fp, pathname,
> description) 18             finally:
>      19                 fp.close()
> 
> /usr/lib64/python3.6/imp.py in load_module(name, file, filename, details)
>     241                 return load_dynamic(name, filename, opened_file)
>     242         else:
> --> 243             return load_dynamic(name, filename, file)
>     244     elif type_ == PKG_DIRECTORY:
>     245         return load_package(name, filename)
> 
> /usr/lib64/python3.6/imp.py in load_dynamic(name, path, file)
>     341         spec = importlib.machinery.ModuleSpec(
>     342             name=name, loader=loader, origin=path)
> --> 343         return _load(spec)
>     344
>     345 else:
> 
> ImportError:
> /usr/local/lib64/python3.6/site-packages/GDAL-2.3.0-py3.6-linux-x86_64.egg/
> osgeo/_gdal.cpython-36m-x86_64-linux-gnu.so: undefined symbol:
> CPLGetErrorCounter

Sounds like either you lack the libgdal.so in your library search path, or it 
is an older version of it. You can tune that with LD_LIBRARY_PATH for example


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From finn at arildsen.com  Fri Sep 14 07:56:24 2018
From: finn at arildsen.com (FA)
Date: Fri, 14 Sep 2018 07:56:24 -0700 (MST)
Subject: [gdal-dev] Exception in GDALAllRegister()
In-Reply-To: <6434384.qxc3TLurav@even-i700>
References: <1536852747862-0.post@n6.nabble.com> <6434384.qxc3TLurav@even-i700>
Message-ID: <1536936984362-0.post@n6.nabble.com>

Hi Even,
Thanks for your kind response and information.

I'm sorry, I should have clarified that I'm using GDAL ver. 2.3.1.  I have
used /MTd both in the test app and in nmake.opt when compiling GDAL.
Changing both to /MDd doesn't seem to make a difference - the same fatal
exception occurs.

The call stack looks like this:

>	GDALTEST.exe!std::_Tree<std::_Tmap_traits&lt;CPLStringT&lt;void>,enum
CPLErr (__cdecl*)(void * *,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int),std::less<CPLStringT&lt;void>
>,std::allocator<std::pair&lt;CPLStringT&lt;void> const ,enum CPLErr
(__cdecl*)(void * *,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int)> >,0> >::_Lbound<CPLStringT&lt;void> >(const
CPLStringT<void> & _Keyval) Line 2046	C++
 	GDALTEST.exe!std::_Tree<std::_Tmap_traits&lt;CPLStringT&lt;void>,enum
CPLErr (__cdecl*)(void * *,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int),std::less<CPLStringT&lt;void>
>,std::allocator<std::pair&lt;CPLStringT&lt;void> const ,enum CPLErr
(__cdecl*)(void * *,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int)> >,0> >::lower_bound(const CPLStringT<void> & _Keyval)
Line 1481	C++
 	GDALTEST.exe!std::map<CPLStringT&lt;void>,enum CPLErr (__cdecl*)(void *
*,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int),std::less<CPLStringT&lt;void>
>,std::allocator<std::pair&lt;CPLStringT&lt;void> const ,enum CPLErr
(__cdecl*)(void * *,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int)> > >::_Try_emplace<CPLStringT&lt;void>
>(CPLStringT<void> && _Keyval) Line 228	C++
 	GDALTEST.exe!std::map<CPLStringT&lt;void>,enum CPLErr (__cdecl*)(void *
*,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int),std::less<CPLStringT&lt;void>
>,std::allocator<std::pair&lt;CPLStringT&lt;void> const ,enum CPLErr
(__cdecl*)(void * *,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int)> > >::try_emplace<>(CPLStringT<void> && _Keyval) Line
263	C++
 	GDALTEST.exe!std::map<CPLStringT&lt;void>,enum CPLErr (__cdecl*)(void *
*,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int),std::less<CPLStringT&lt;void>
>,std::allocator<std::pair&lt;CPLStringT&lt;void> const ,enum CPLErr
(__cdecl*)(void * *,int,void *,int,int,enum GDALDataType,enum
GDALDataType,int,int)> > >::operator[](CPLStringT<void> && _Keyval) Line 199
C++
 	GDALTEST.exe!GDALAddDerivedBandPixelFunc(const char * pszFuncName,
CPLErr(*)(void * *, int, void *, int, int, GDALDataType, GDALDataType, int,
int) pfnNewFunction) Line 1029	C++
 	GDALTEST.exe!GDALRegisterDefaultPixelFunc() Line 921	C++
 	GDALTEST.exe!GDALRegister_VRT() Line 379	C++
 	GDALTEST.exe!GDALAllRegister() Line 70	C++

I wonder if this rings a bell with you?

Thanks in advance.




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From dmck at interactive.co.uk  Fri Sep 14 08:25:27 2018
From: dmck at interactive.co.uk (David McKelvie)
Date: Fri, 14 Sep 2018 16:25:27 +0100
Subject: [gdal-dev] ogr2ogr - id field in database table is not being
	written to geojson file
Message-ID: <87bm90je3c.fsf@interactive.co.uk>


Hi;

I have a question about ogr2ogr output from a postgres database to geojson.

One of the fields in my table, ie the primary key called 'id' is not being
output to the json file. I wonder if this is a bug or a 'feature'.

Can anybody clarify this?

The database table is:
-------------------------------
\d areas
              Table "public.areas"
      Column       |            Type             
-------------------+-----------------------------
 id                | integer                     
 type              | character varying(31)       
 name              | character varying(255)      
 created           | timestamp without time zone 
 last_modified     | timestamp without time zone 
 location          | geometry(Geometry,27700)    
 is_deleted        | boolean                     
 ons_code          | character varying(9)        
 extended_location | geometry(Geometry,27700)    
 uprn              | character varying(12)       
 info              | text                        
 name_vector       | tsvector                    
--------------------------

The command run was:
----------------------
ogr2ogr -f "GeoJSON" \
-lco "COORDINATE_PRECISION=2" \
/tmp/divisions.json \
"PG:dbname=capetown" areas
----------------------

The output file /tmp/divisions.json
had entries with properties like:
--------------------------------------
properties": { 
   "type": "division", 
   "name": "Divn  01", 
   "created": "2018\/09\/14 12:19:41", 
   "last_modified": "2018\/09\/14 12:19:41", 
   "is_deleted": 0, 
   "ons_code": null, 
   "uprn": null, 
   "info": null, 
   "name_vector": "'01':2 'divn':1" 
}
---------------------------------------

So all the database table fields EXCEPT for
the geometry fields and 'id' which is defined as
    id | integer | not null default nextval('areas_id_seq'::regclass)
and is the primary key for the table.

https://www.gdal.org/drv_geojson.html does not mention anything special about
'id' or primary key fields.

I am using ogr2ogr on Ubuntu Linux from the gdal-bin package . version 1.11.3+dfsg-3build2

David McKelvie


From even.rouault at spatialys.com  Fri Sep 14 08:51:12 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Sep 2018 17:51:12 +0200
Subject: [gdal-dev] ogr2ogr - id field in database table is not being
	written to geojson file
In-Reply-To: <87bm90je3c.fsf@interactive.co.uk>
References: <87bm90je3c.fsf@interactive.co.uk>
Message-ID: <2252182.Ksypj88uSi@even-i700>

On vendredi 14 septembre 2018 16:25:27 CEST David McKelvie wrote:
> Hi;
> 
> I have a question about ogr2ogr output from a postgres database to geojson.
> 
> One of the fields in my table, ie the primary key called 'id' is not being
> output to the json file. I wonder if this is a bug or a 'feature'.
> 
> Can anybody clarify this?
> 
> The database table is:
> -------------------------------
> \d areas
>               Table "public.areas"
>       Column       |            Type
> -------------------+-----------------------------
>  id                | integer
>  type              | character varying(31)
>  name              | character varying(255)
>  created           | timestamp without time zone
>  last_modified     | timestamp without time zone
>  location          | geometry(Geometry,27700)
>  is_deleted        | boolean
>  ons_code          | character varying(9)
>  extended_location | geometry(Geometry,27700)
>  uprn              | character varying(12)
>  info              | text
>  name_vector       | tsvector
> --------------------------
> 
> The command run was:
> ----------------------
> ogr2ogr -f "GeoJSON" \
> -lco "COORDINATE_PRECISION=2" \
> /tmp/divisions.json \
> "PG:dbname=capetown" areas
> ----------------------
> 
> The output file /tmp/divisions.json
> had entries with properties like:
> --------------------------------------
> properties": {
>    "type": "division",
>    "name": "Divn  01",
>    "created": "2018\/09\/14 12:19:41",
>    "last_modified": "2018\/09\/14 12:19:41",
>    "is_deleted": 0,
>    "ons_code": null,
>    "uprn": null,
>    "info": null,
>    "name_vector": "'01':2 'divn':1"
> }
> ---------------------------------------
> 
> So all the database table fields EXCEPT for
> the geometry fields and 'id' which is defined as
>     id | integer | not null default nextval('areas_id_seq'::regclass)
> and is the primary key for the table.
> 
> https://www.gdal.org/drv_geojson.html does not mention anything special
> about 'id' or primary key fields.
> 
> I am using ogr2ogr on Ubuntu Linux from the gdal-bin package . version
> 1.11.3+dfsg-3build2


There's a specific processing for the 'id' field indeed. It is written at the 
'id' JSon member, at the same level of 'properties'. And thus on reading, it 
is exposed in the OGR Feature ID, not as an attribute.
Note: There have been some variations in recent GDAL versions about this 
behaviour (particularly if the id field is string)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From chiara.marmo at u-psud.fr  Fri Sep 14 08:57:11 2018
From: chiara.marmo at u-psud.fr (Chiara Marmo)
Date: Fri, 14 Sep 2018 15:57:11 +0000 (GMT)
Subject: [gdal-dev] Python GDAL ImportError: ... undefined symbol:
 CPLGetErrorCounter
In-Reply-To: <538057428.1541835.1536939805980.JavaMail.zimbra@u-psud.fr>
References: <135460344.1108165.1536916157040.JavaMail.zimbra@u-psud.fr>
 <1908532.ycHrGNBi67@even-i700>
 <538057428.1541835.1536939805980.JavaMail.zimbra@u-psud.fr>
Message-ID: <1676451083.1548915.1536940631344.JavaMail.zimbra@u-psud.fr>


> 
> Sounds like either you lack the libgdal.so in your library search path, or it
> is an older version of it. You can tune that with LD_LIBRARY_PATH for example
> 

Right, but no matter I define LD_LIBRARY_PATH jupyter always look in /usr/lib64 (on Fedora).
So I've solved the issue linking my version in /usr/lib64 ... not clean but effective .. :)

Thanks!
Chiara

-- 
Chiara Marmo
Ingénieur de Recherche GEOPS - Paris Sud-11
Bât 509
Tel: +33 (0)1 69 15 49 03 

From dmck at interactive.co.uk  Fri Sep 14 09:26:47 2018
From: dmck at interactive.co.uk (David McKelvie)
Date: Fri, 14 Sep 2018 17:26:47 +0100
Subject: [gdal-dev] ogr2ogr - id field in database table is not being
	written to geojson file
In-Reply-To: <2252182.Ksypj88uSi@even-i700> (message from Even Rouault on Fri,
 14 Sep 2018 17:51:12 +0200)
Message-ID: <878t44jb94.fsf@interactive.co.uk>


Thanks Even;

>> There's a specific processing for the 'id' field indeed. It is written at the 
>> 'id' JSon member, at the same level of 'properties'. And thus on reading, it 
>> is exposed in the OGR Feature ID, not as an attribute.

Im not getting the id field at all. Each feature just has 'type', 'properties'
and 'geometry' fields.

-------------------------------------
"features": [
{ "type": "Feature",
  "properties": { "type": "division", "name": "Divn  01", ... },
  "geometry": { "type": "Polygon", "coordinates": [ [ [ -38056.0, -3762079.68 ], ... ] ] } },
{ "type": "Feature", "properties": { "type": "division", "name": "Divn  02",... },
   "geometry": { "type": "Polygon", "coordinates": [ [ [-36255.78, -3757480.03 ], ... } },
--------------------------------------

>> Note: There have been some variations in recent GDAL versions about this 
>> behaviour (particularly if the id field is string)

So maybe Ive got a version that just drops the 'id' field.

I think the www.gdal.org/drv_geojson.html page should be updated to say
something about this.

I have a work around where I use
 -sql 'select location,id,name from areas'
in the ogr2ogr call, and that does add 'id' to the properties.

David

From Tim.Harris at digitalglobe.com  Fri Sep 14 11:45:56 2018
From: Tim.Harris at digitalglobe.com (Harris, Tim)
Date: Fri, 14 Sep 2018 18:45:56 +0000
Subject: [gdal-dev] FileGDB and vsimem
Message-ID: <2695eb0c7c3a40c5b27ddf769ba6eaf3@PW00INFMAI022.ent.ad.dg.local>

Is there any way to write a geodatabase to a vsimem path, or is that something ESRI would have to change in their SDK? It looks like it just writes to the filesystem under a /vsimem directory at the moment...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180914/ec033edd/attachment-0001.html>

From even.rouault at spatialys.com  Fri Sep 14 12:02:19 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Sep 2018 21:02:19 +0200
Subject: [gdal-dev] FileGDB and vsimem
In-Reply-To: <2695eb0c7c3a40c5b27ddf769ba6eaf3@PW00INFMAI022.ent.ad.dg.local>
References: <2695eb0c7c3a40c5b27ddf769ba6eaf3@PW00INFMAI022.ent.ad.dg.local>
Message-ID: <53029506.0n0SoVr4Wh@even-i700>

Tim,

You guessed right.

> Is there any way to write a geodatabase to a vsimem path, 

No

> or is that
> something ESRI would have to change in their SDK? 

Yes. There is no customizable file abstraction layer in the SDK.


On Linux, you could probably use a tmpfs mount as a workaround.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From tsvibar at gmail.com  Sat Sep 15 05:28:30 2018
From: tsvibar at gmail.com (Micha Silver)
Date: Sat, 15 Sep 2018 15:28:30 +0300
Subject: [gdal-dev] Issue #2068 on Mint 19
Message-ID: <aa51332e-e33d-9c08-c991-2be1bc951edb@gmail.com>

(cross posting since this question touches several different applications)

THis reported issue:
http://osgeo-org.1560.x6.nabble.com/2068-Error-caused-by-libgdal-grass-version-in-Bionic-td5367179.html

is causing problems for me also in the R package "MODIS".

AFAIK, you don't necessarily need the ubuntugis repo in bionic distros. 
The regular ubuntu repos have pretty recent versions. On my Mint systems 
I get GRASS 7.4.0, and gdal 2.2.3.  But every invocation of gdal 
commands begins with:
micha at TP480:~$ gdalinfo --version
ERROR 1: libgrass_dgl.7.4.0.so: cannot open shared object file: No such 
file or directory
ERROR 1: libgrass_dgl.7.4.0.so: cannot open shared object file: No such 
file or directory
ERROR 1: libgrass_vector.7.4.0.so: cannot open shared object file: No 
such file or directory
ERROR 1: libgrass_vector.7.4.0.so: cannot open shared object file: No 
such file or directory
GDAL 2.2.3, released 2017/11/20

And these errors are appearing also in R with the MODIS package.

What are the implications of adding the ubuntugis-unstable repo to solve 
this?

Thanks

-- 
Micha Silver
Ben Gurion Univ.
Sde Boker, Remote Sensing Lab
cell: +972-523-665918


From sebastic at xs4all.nl  Sat Sep 15 06:43:32 2018
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Sat, 15 Sep 2018 15:43:32 +0200
Subject: [gdal-dev] Issue #2068 on Mint 19
In-Reply-To: <aa51332e-e33d-9c08-c991-2be1bc951edb@gmail.com>
References: <aa51332e-e33d-9c08-c991-2be1bc951edb@gmail.com>
Message-ID: <0d4083d9-0bcb-aeac-7fb1-22789c6bb547@xs4all.nl>

On 9/15/18 2:28 PM, Micha Silver wrote:
> AFAIK, you don't necessarily need the ubuntugis repo in bionic distros.
> The regular ubuntu repos have pretty recent versions. On my Mint systems
> I get GRASS 7.4.0, and gdal 2.2.3.  But every invocation of gdal
> commands begins with:
> micha at TP480:~$ gdalinfo --version
> ERROR 1: libgrass_dgl.7.4.0.so: cannot open shared object file: No such
> file or directory
> ERROR 1: libgrass_dgl.7.4.0.so: cannot open shared object file: No such
> file or directory
> ERROR 1: libgrass_vector.7.4.0.so: cannot open shared object file: No
> such file or directory
> ERROR 1: libgrass_vector.7.4.0.so: cannot open shared object file: No
> such file or directory
> GDAL 2.2.3, released 2017/11/20

That's a known issue on Ubuntu based systems which build with
--as-needed by default. A fix was added in libgdal-grass (2.3.0-2)
triggered by https://trac.osgeo.org/osgeolive/ticket/2068.

This fix is also available in libgdal-grass (2.2.3-3~bionic0) in the
OSGeoLive PPA, but not in the ubuntugis-unstable PPA (any more). It's
possible that a later rebuild of the libgdal-grass package reverted the fix.

> And these errors are appearing also in R with the MODIS package.
> 
> What are the implications of adding the ubuntugis-unstable repo to solve
> this?

The libgdal-grass package in the UbuntuGIS PPA needs to be fixed. The
older package from bionic most likely also doesn't have this fix.

Kind Regards,

Bas

From michael.smith.erdc at gmail.com  Sat Sep 15 11:36:25 2018
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Sat, 15 Sep 2018 14:36:25 -0400
Subject: [gdal-dev] showing vertical datum in wgs84 or its variants
Message-ID: <B1855488-BF6F-4FCC-B584-03C698596AE8@gmail.com>

All,

If I have a DEM with a vertical datum that is not wgs84, it shows properly in gdal. For example, 

COMPD_CS["WGS 84 / UTM zone 51N + EGM2008 geoid height",
    PROJCS["WGS 84 / UTM zone 51N",
        GEOGCS["WGS 84",
            DATUM["WGS_1984",
                SPHEROID["WGS 84",6378137,298.257223563,
                    AUTHORITY["EPSG","7030"]],
                AUTHORITY["EPSG","6326"]],
            PRIMEM["Greenwich",0,
                AUTHORITY["EPSG","8901"]],
            UNIT["degree",0.0174532925199433,
                AUTHORITY["EPSG","9122"]],
            AUTHORITY["EPSG","4326"]],
        PROJECTION["Transverse_Mercator"],
        PARAMETER["latitude_of_origin",0],
        PARAMETER["central_meridian",123],
        PARAMETER["scale_factor",0.9996],
        PARAMETER["false_easting",500000],
        PARAMETER["false_northing",0],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AXIS["Easting",EAST],
        AXIS["Northing",NORTH],
        AUTHORITY["EPSG","32651"]],
    VERT_CS["EGM2008 geoid height",
        VERT_DATUM["EGM2008 geoid",2005,
            EXTENSION["PROJ4_GRIDS","egm08_25.gtx"],
            AUTHORITY["EPSG","1027"]],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AXIS["Up",UP],
        AUTHORITY["EPSG","3855"]]]

If I then project this to WGS84 vertical, it does display as a vrt.

gdalwarp -of vrt -t_srs epsg:32651+7662 myfile.tif myfile_wgs.vrt

Coordinate System is:
COMPD_CS["WGS 84 / UTM zone 51N + WGS 84 (G1674)",
    PROJCS["WGS 84 / UTM zone 51N",
        GEOGCS["WGS 84",
            DATUM["WGS_1984",
                SPHEROID["WGS 84",6378137,298.257223563,
                    AUTHORITY["EPSG","7030"]],
                AUTHORITY["EPSG","6326"]],
            PRIMEM["Greenwich",0,
                AUTHORITY["EPSG","8901"]],
            UNIT["degree",0.0174532925199433,
                AUTHORITY["EPSG","9122"]],
            AUTHORITY["EPSG","4326"]],
        PROJECTION["Transverse_Mercator"],
        PARAMETER["latitude_of_origin",0],
        PARAMETER["central_meridian",123],
        PARAMETER["scale_factor",0.9996],
        PARAMETER["false_easting",500000],
        PARAMETER["false_northing",0],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AXIS["Easting",EAST],
        AXIS["Northing",NORTH],
        AUTHORITY["EPSG","32651"]],
    GEOCCS["WGS 84 (G1674)",
        DATUM["World_Geodetic_System_1984_G1674",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","1155"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AXIS["Geocentric X",OTHER],
        AXIS["Geocentric Y",OTHER],
        AXIS["Geocentric Z",NORTH],
        AUTHORITY["EPSG","7662"]]]

(and the z values do get properly projected). But when I convert from vrt to geotiff, 

gdal_translate -of gtiff myfile_wgs.vrt myfile_wgs.tif﻿

It no longer shows the compd_cs

PROJCS["WGS 84 / UTM zone 51N",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.0174532925199433,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4326"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",123],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AXIS["Easting",EAST],
    AXIS["Northing",NORTH],
    AUTHORITY["EPSG","32651"]]

I do have the environmental variable set to always show a compd_cs, GTIFF_REPORT_COMPD_CS=TRUE

Is this a special wgs simplification that gdal does on the vertical datum?


-- 
Michael Smith

Remote Sensing/GIS Center
US Army Corps of Engineers




From tsvibar at gmail.com  Sat Sep 15 13:16:07 2018
From: tsvibar at gmail.com (Micha Silver)
Date: Sat, 15 Sep 2018 23:16:07 +0300
Subject: [gdal-dev] Issue #2068 on Mint 19
In-Reply-To: <0d4083d9-0bcb-aeac-7fb1-22789c6bb547@xs4all.nl>
References: <aa51332e-e33d-9c08-c991-2be1bc951edb@gmail.com>
 <0d4083d9-0bcb-aeac-7fb1-22789c6bb547@xs4all.nl>
Message-ID: <9ff98904-c90f-14c6-ecc4-90f6c871a88e@gmail.com>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180915/e6be8da4/attachment.html>

From even.rouault at spatialys.com  Sat Sep 15 14:32:59 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 15 Sep 2018 23:32:59 +0200
Subject: [gdal-dev] showing vertical datum in wgs84 or its variants
In-Reply-To: <B1855488-BF6F-4FCC-B584-03C698596AE8@gmail.com>
References: <B1855488-BF6F-4FCC-B584-03C698596AE8@gmail.com>
Message-ID: <1942921.noP2B8Pute@even-i700>

Michael,

> Coordinate System is:
> COMPD_CS["WGS 84 / UTM zone 51N + WGS 84 (G1674)",
>     PROJCS["WGS 84 / UTM zone 51N",
>         GEOGCS["WGS 84",
>             DATUM["WGS_1984",
>                 SPHEROID["WGS 84",6378137,298.257223563,
>                     AUTHORITY["EPSG","7030"]],
>                 AUTHORITY["EPSG","6326"]],
>             PRIMEM["Greenwich",0,
>                 AUTHORITY["EPSG","8901"]],
>             UNIT["degree",0.0174532925199433,
>                 AUTHORITY["EPSG","9122"]],
>             AUTHORITY["EPSG","4326"]],
>         PROJECTION["Transverse_Mercator"],
>         PARAMETER["latitude_of_origin",0],
>         PARAMETER["central_meridian",123],
>         PARAMETER["scale_factor",0.9996],
>         PARAMETER["false_easting",500000],
>         PARAMETER["false_northing",0],
>         UNIT["metre",1,
>             AUTHORITY["EPSG","9001"]],
>         AXIS["Easting",EAST],
>         AXIS["Northing",NORTH],
>         AUTHORITY["EPSG","32651"]],
>     GEOCCS["WGS 84 (G1674)",
>         DATUM["World_Geodetic_System_1984_G1674",
>             SPHEROID["WGS 84",6378137,298.257223563,
>                 AUTHORITY["EPSG","7030"]],
>             AUTHORITY["EPSG","1155"]],
>         PRIMEM["Greenwich",0,
>             AUTHORITY["EPSG","8901"]],
>         UNIT["metre",1,
>             AUTHORITY["EPSG","9001"]],
>         AXIS["Geocentric X",OTHER],
>         AXIS["Geocentric Y",OTHER],
>         AXIS["Geocentric Z",NORTH],
>         AUTHORITY["EPSG","7662"]]]
> 
> (and the z values do get properly projected). But when I convert from vrt to
> geotiff,

EPSG:32651+7662 is an invalid CRS. The vertical part should be a vertical
CRS, and not a Geocentric CRS as here.
GDAL / VRT is forgiving, but there's no way to encode this in GeoTIFF.

There's no way in WKT 1 to model a ProjectedCRS with a ellipsoidal height
(WKT 2:2018 will allow it with the concept of Projected 3D CRS),
so using plain EPSG:32651 is your best option here.

~~~~~

Actually I lied... There would be a way, but it is definitely not recommended.
The historical GeoTIFF spec allows for "ellipsoid Vertical CS"
( http://geotiff.maptools.org/spec/geotiff6.html#6.3.4 ), but ISO 19111 does
not allow this, and this will be likely no longer available as it in a future
revision of the GeoTIFF spec.

So if using listgeo to dump the TIFF you want to fix, and you insert the following in the
Keyed_Information section of the listgeo dump

      GTCitationGeoKey (Ascii,45): "WGS 84 / UTM zone 31N + WGS84 ellipsoid height"
      VerticalCSTypeGeoKey (Short,1): VertCS_WGS_84_ellipsoid
      VerticalUnitsGeoKey (Short,1): Linear_Meter

and then using geotifcp -g to forge a new GeoTIFF file, you will get

COMPD_CS["WGS 84 / UTM zone 31N + WGS 84 ellipsoid height",
    PROJCS["WGS 84 / UTM zone 51N",
        GEOGCS["WGS 84",
            DATUM["WGS_1984",
                SPHEROID["WGS 84",6378137,298.257223563,
                    AUTHORITY["EPSG","7030"]],
                AUTHORITY["EPSG","6326"]],
            PRIMEM["Greenwich",0,
                AUTHORITY["EPSG","8901"]],
            UNIT["degree",0.0174532925199433,
                AUTHORITY["EPSG","9122"]],
            AUTHORITY["EPSG","4326"]],
        PROJECTION["Transverse_Mercator"],
        PARAMETER["latitude_of_origin",0],
        PARAMETER["central_meridian",123],
        PARAMETER["scale_factor",0.9996],
        PARAMETER["false_easting",500000],
        PARAMETER["false_northing",0],
        UNIT["metre",1,
            AUTHORITY["EPSG","9001"]],
        AXIS["Easting",EAST],
        AXIS["Northing",NORTH],
        AUTHORITY["EPSG","32651"]],
    VERT_CS["unknown",
        VERT_DATUM["Not specified (based on WGS 84 ellipsoid)",2002,
            AUTHORITY["EPSG","6030"]],
        UNIT["metre",1.0,
            AUTHORITY["EPSG","9001"]],
        AXIS["Up",UP]]]

But this would be considered as invalid as well by today's standards.
(EPSG:6030 is not a vertical datum, but a geodetic datum)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gcpp.kalxas at gmail.com  Sun Sep 16 08:23:37 2018
From: gcpp.kalxas at gmail.com (Angelos Tzotsos)
Date: Sun, 16 Sep 2018 18:23:37 +0300
Subject: [gdal-dev] [OSGeoLive]  Issue #2068 on Mint 19
In-Reply-To: <0d4083d9-0bcb-aeac-7fb1-22789c6bb547@xs4all.nl>
References: <aa51332e-e33d-9c08-c991-2be1bc951edb@gmail.com>
 <0d4083d9-0bcb-aeac-7fb1-22789c6bb547@xs4all.nl>
Message-ID: <CALWPtRKvJbw6o7BAfwuBn4_LFZTqnoLn2mMSLWpg80KEZ4S8Aw@mail.gmail.com>

I thought we had fixed this issue some months ago...
Will look further into this.

Cheers,
Angelos

On Sat, Sep 15, 2018 at 4:43 PM Sebastiaan Couwenberg <sebastic at xs4all.nl>
wrote:

> On 9/15/18 2:28 PM, Micha Silver wrote:
> > AFAIK, you don't necessarily need the ubuntugis repo in bionic distros.
> > The regular ubuntu repos have pretty recent versions. On my Mint systems
> > I get GRASS 7.4.0, and gdal 2.2.3.  But every invocation of gdal
> > commands begins with:
> > micha at TP480:~$ gdalinfo --version
> > ERROR 1: libgrass_dgl.7.4.0.so: cannot open shared object file: No such
> > file or directory
> > ERROR 1: libgrass_dgl.7.4.0.so: cannot open shared object file: No such
> > file or directory
> > ERROR 1: libgrass_vector.7.4.0.so: cannot open shared object file: No
> > such file or directory
> > ERROR 1: libgrass_vector.7.4.0.so: cannot open shared object file: No
> > such file or directory
> > GDAL 2.2.3, released 2017/11/20
>
> That's a known issue on Ubuntu based systems which build with
> --as-needed by default. A fix was added in libgdal-grass (2.3.0-2)
> triggered by https://trac.osgeo.org/osgeolive/ticket/2068.
>
> This fix is also available in libgdal-grass (2.2.3-3~bionic0) in the
> OSGeoLive PPA, but not in the ubuntugis-unstable PPA (any more). It's
> possible that a later rebuild of the libgdal-grass package reverted the
> fix.
>
> > And these errors are appearing also in R with the MODIS package.
> >
> > What are the implications of adding the ubuntugis-unstable repo to solve
> > this?
>
> The libgdal-grass package in the UbuntuGIS PPA needs to be fixed. The
> older package from bionic most likely also doesn't have this fix.
>
> Kind Regards,
>
> Bas
> _______________________________________________
> osgeolive mailing list
> osgeolive at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/osgeolive
>


-- 
Angelos Tzotsos, PhD
OSGeo Charter Member
http://users.ntua.gr/tzotsos
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180916/61e1afbf/attachment.html>

From even.rouault at spatialys.com  Mon Sep 17 00:33:09 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 17 Sep 2018 09:33:09 +0200
Subject: [gdal-dev] Invalid GeoPackage
	'gpkg_metadata_reference_column_name_update' trigger
Message-ID: <14264222.gmgflfZZtm@even-i700>

Hi,

Testing the fresh new SQLite 3.25.0 on our GeoPacakge related autotests,
I discovered two issues:

* a bug in SQLite 3.25.0 itself which is triggered when renaming a table/layer,
and prevents the renaming to complete. The SQLite author has already fixed that per
https://www.sqlite.org/src/info/05a9d129254e01a5 and so this will
be available in the next SQLite version

* a bug in the definition of the 'gpkg_metadata_reference_column_name_update'
trigger as written in the current GeoPacakge spec. Raised as
https://github.com/opengeospatial/geopackage/pull/463 . This invalid definition
will cause next SQLite versions to refuse renaming tables when this trigger is
present (it is only installed by GDAL if metadata is written in the GeoPackage)
I've committed a fix in GDAL master and 2.3 branch to use the corrected trigger
definition when creating new GeoPackage DBs.
For existing GeoPackage DBs (this should mostly affect databases with raster),
you can use (verified to work with GDAL 2.2 and later) the following script to fix them:
https://raw.githubusercontent.com/OSGeo/gdal/master/gdal/swig/python/samples/fix_gpkg.py

python fix_gpkg.py my.gpkg
or
python fix_gpkg.py *.gpkg

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From David.Brito at bentley.com  Tue Sep 18 08:09:43 2018
From: David.Brito at bentley.com (David Brito)
Date: Tue, 18 Sep 2018 15:09:43 +0000
Subject: [gdal-dev] OpenSSL versions in GDAL releases
Message-ID: <BL0PR02MB56682BD7A1A27FBEA73EF5C5EA1D0@BL0PR02MB5668.namprd02.prod.outlook.com>

Hi all,


I tried to get the latest GDAL and found that latest stable version is 2.3.1:
https://trac.osgeo.org/gdal/wiki

Found for instance the binaries here:
http://www.gisinternals.com/release.php


The OpenSSL versions used in this release (1.0.1h) seem to be outdated because of heartbleed security issue.
libeay32.dll
ssleay32.dll

It is suggested that all uses upgrade to version 1.1.0c:
https://www.openssl.org/news/secadv/20161110.txt

Am I looking at it correctly?
If no, please let me know where should look for them.
If yes, are there plans to update the openSSL version in upcoming releases?



Thanks,
David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180918/747d8aea/attachment.html>

From even.rouault at spatialys.com  Tue Sep 18 08:18:39 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Sep 2018 17:18:39 +0200
Subject: [gdal-dev] OpenSSL versions in GDAL releases
In-Reply-To: <BL0PR02MB56682BD7A1A27FBEA73EF5C5EA1D0@BL0PR02MB5668.namprd02.prod.outlook.com>
References: <BL0PR02MB56682BD7A1A27FBEA73EF5C5EA1D0@BL0PR02MB5668.namprd02.prod.outlook.com>
Message-ID: <2508060.ezL37Ffceh@even-i700>

On mardi 18 septembre 2018 15:09:43 CEST David Brito wrote:
> Hi all,
> 
> 
> I tried to get the latest GDAL and found that latest stable version is
> 2.3.1: https://trac.osgeo.org/gdal/wiki
> 
> Found for instance the binaries here:
> http://www.gisinternals.com/release.php
> 
> 
> The OpenSSL versions used in this release (1.0.1h) seem to be outdated
> because of heartbleed security issue. libeay32.dll
> ssleay32.dll
> 
> It is suggested that all uses upgrade to version 1.1.0c:
> https://www.openssl.org/news/secadv/20161110.txt
> 
> Am I looking at it correctly?
> If no, please let me know where should look for them.
> If yes, are there plans to update the openSSL version in upcoming releases?

That's an issue specific to the GISInternals builds, so should be reported to:
https://github.com/gisinternals/buildsystem/issues

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From markus.metz.giswork at gmail.com  Tue Sep 18 12:27:03 2018
From: markus.metz.giswork at gmail.com (Markus Metz)
Date: Tue, 18 Sep 2018 21:27:03 +0200
Subject: [gdal-dev] gdalwarp together with proj5 pipelines
In-Reply-To: <VI1PR0902MB204746E05C066B977FC285A2C71D0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
References: <VI1PR0902MB2047B79B779187720AF985CFC71A0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
 <CAG+h=FGEqsXC=MhzsGHjvnAcEUoXDkrrbnSW4i4WC+n0d3kO2A@mail.gmail.com>
 <VI1PR0902MB204746E05C066B977FC285A2C71D0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
Message-ID: <CAG+h=FGYovYaZzWkd2RyxdVnOgx5sPB_B3QQuONe9rvVNVVjVA@mail.gmail.com>

On Tue, Sep 18, 2018 at 4:25 PM Dalia Prizginiene <dalia at lmi.is> wrote:
>
> Hello,
>
> Thank you for your reply, but that to be sure: does it mean that gdalwarp
at the moment does not allow also horizontal grid shift like
"+proj=hgridshift +grids=ISN93_16.gsb" or "+proj=latlong
 +nadgrid=xxxx.gsb" ?

the GDAL developers will be able to answer your question. As Even wrote,

"For now, you have to use -s_srs / -t_srs with projections method supported
by PROJ"

the above definitions could work as part of a -s_srs / -t_srs definition.

I was to referring to "+proj=pipeline ..." which is supported in GRASS GIS
7.6 if compiled with PROJ 5.x

Best regards,

Markus M

>
>
>
> Best regards
>
> Dalia
>
>
> ________________________________
> From: Markus Metz <markus.metz.giswork at gmail.com>
> Sent: Thursday, September 13, 2018 8:15:41 PM
> To: Dalia Prizginiene
> Cc: gdal-dev
> Subject: Re: [gdal-dev] gdalwarp together with proj5 pipelines
>
>
>
> On Thu, Sep 13, 2018 at 4:52 PM Dalia Prizginiene <dalia at lmi.is> wrote:
> >
> > Hello,
> >
> > Is it possible to use gdalwarp together with pipelines "+proj=pipeline
+step  +inv  +proj=lcc  +lat_1=64...
> >
> > to transform the raster into different datum?
> >
> >
> > In here
http://osgeo-org.1560.x6.nabble.com/gdal-dev-proj-5-support-added-in-trunk-td5358899.html
it is said that "-ct" it could be used. But at the moment this option does
not work.
> >
> >
> > Maybe there is another option how to use gdalwarp together with
pipelines of proj5?
>
> Custom proj5-style pipelines are supported in GRASS 7.6, not yet
released. GRASS uses GDAL + PROJ for reprojection, and any testing on this
new feature would help those projects.
>
> In GRASS 7.6, you can define custom proj5-pipelines with r.proj
pipeline=...
>
> Markus M
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180918/04d4693c/attachment.html>

From even.rouault at spatialys.com  Tue Sep 18 12:51:23 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Sep 2018 21:51:23 +0200
Subject: [gdal-dev] gdalwarp together with proj5 pipelines
In-Reply-To: <CAG+h=FGYovYaZzWkd2RyxdVnOgx5sPB_B3QQuONe9rvVNVVjVA@mail.gmail.com>
References: <VI1PR0902MB2047B79B779187720AF985CFC71A0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
 <VI1PR0902MB204746E05C066B977FC285A2C71D0@VI1PR0902MB2047.eurprd09.prod.outlook.com>
 <CAG+h=FGYovYaZzWkd2RyxdVnOgx5sPB_B3QQuONe9rvVNVVjVA@mail.gmail.com>
Message-ID: <1805909.LPFjB4SKLh@even-i700>

On mardi 18 septembre 2018 21:27:03 CEST Markus Metz wrote:
> On Tue, Sep 18, 2018 at 4:25 PM Dalia Prizginiene <dalia at lmi.is> wrote:
> > Hello,
> > 
> > Thank you for your reply, but that to be sure: does it mean that gdalwarp
> 
> at the moment does not allow also horizontal grid shift like
> "+proj=hgridshift +grids=ISN93_16.gsb" or "+proj=latlong
>  +nadgrid=xxxx.gsb" ?

You cannot use proj=hgridshift, but you can use 
"+proj=latlong +ellps=... +nadgrids=xxxx.gsb"

Note: this is nadgrids with a final s

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Tue Sep 18 22:06:59 2018
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 19 Sep 2018 05:06:59 +0000
Subject: [gdal-dev] Warping into gpkg PseudoTMS_GlobalMercator fails
Message-ID: <10a363b573944178ace56cb7b7f306e6@C119S212VM042.msvyvi.vaha.local>

Hi,

I wonder if there is some issue in gdalwarp and how it is using the GPKG raster driver with a predefined tiling scheme. Feels like gdalwarp does not use any ZOOM_LEVEL_STRATEGY, if not one called "strict".

gdalwarp -of gpkg -t_srs epsg:3857 -co tiling_scheme=PseudoTMS_GlobalMercator -co zoom_level_strategy=lower sfdem.tif 3857.gpkg
Creating output file that is 640P x 488L.
ERROR 6: Could not find an appropriate zoom level of PseudoTMS_GlobalMercator tiling scheme that matches raster pixel size
ERROR 1: Raster table 3857 not correctly initialized due to missing call to SetGeoTransform()

A workaround is to warp  into TIFF and run gdal_translate afterwards
gdal_translate -of gpkg -co tiling_scheme=PseudoTMS_GlobalMercator 3857.tif 3857.gpkg


-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180919/b8d5051d/attachment.html>

From even.rouault at spatialys.com  Tue Sep 18 23:45:05 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Sep 2018 08:45:05 +0200
Subject: [gdal-dev] Warping into gpkg PseudoTMS_GlobalMercator fails
In-Reply-To: <10a363b573944178ace56cb7b7f306e6@C119S212VM042.msvyvi.vaha.local>
References: <10a363b573944178ace56cb7b7f306e6@C119S212VM042.msvyvi.vaha.local>
Message-ID: <3936370.K9fMk9aMpq@even-i700>

On mercredi 19 septembre 2018 05:06:59 CEST Rahkonen Jukka (MML) wrote:
> Hi,
> 
> I wonder if there is some issue in gdalwarp and how it is using the GPKG
> raster driver with a predefined tiling scheme. Feels like gdalwarp does not
> use any ZOOM_LEVEL_STRATEGY, if not one called "strict".
> 
> gdalwarp -of gpkg -t_srs epsg:3857 -co
> tiling_scheme=PseudoTMS_GlobalMercator -co zoom_level_strategy=lower
> sfdem.tif 3857.gpkg Creating output file that is 640P x 488L.
> ERROR 6: Could not find an appropriate zoom level of
> PseudoTMS_GlobalMercator tiling scheme that matches raster pixel size ERROR
> 1: Raster table 3857 not correctly initialized due to missing call to
> SetGeoTransform()

If you want to use gdalwarp with a predefined tiling scheme, you need to 
specify -tr so that it matches exactly one of the resolution of the tile 
matrix set (or equivalently a combination of -ts + -te that yields such -tr 
value)

> 
> A workaround is to warp  into TIFF and run gdal_translate afterwards
> gdal_translate -of gpkg -co tiling_scheme=PseudoTMS_GlobalMercator 3857.tif
> 3857.gpkg

That's definitely the recomended way. The CreateCopy() method then internally 
kind of sets-up gdalwarp with an appropriate resolution value.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Wed Sep 19 00:55:51 2018
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 19 Sep 2018 07:55:51 +0000
Subject: [gdal-dev] Warping into gpkg PseudoTMS_GlobalMercator fails
Message-ID: <934cbc88c5e44f69ab19c41e8fe024b4@C119S212VM042.msvyvi.vaha.local>

Even Rouault wrote
> On mercredi 19 septembre 2018 05:06:59 CEST Rahkonen Jukka (MML) wrote:


>> A workaround is to warp  into TIFF and run gdal_translate afterwards
>> gdal_translate -of gpkg -co tiling_scheme=PseudoTMS_GlobalMercator 3857.tif
>> 3857.gpkg

> That's definitely the recomended way. The CreateCopy() method then internally 
> kind of sets-up gdalwarp with an appropriate resolution value.

I believe that you meant "sets-up gdal_translate with an appropriate resolution value" because
the previous gdalwarp command is totally unaware about what will happen next:

gdalwarp -of gtiff -t_srs epsg:3857 sfdem.tif 3857.tif

-Jukka-

From even.rouault at spatialys.com  Wed Sep 19 01:06:07 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Sep 2018 10:06:07 +0200
Subject: [gdal-dev] Warping into gpkg PseudoTMS_GlobalMercator fails
In-Reply-To: <934cbc88c5e44f69ab19c41e8fe024b4@C119S212VM042.msvyvi.vaha.local>
References: <934cbc88c5e44f69ab19c41e8fe024b4@C119S212VM042.msvyvi.vaha.local>
Message-ID: <1970570.sRe9DW9cM3@even-i700>

On mercredi 19 septembre 2018 07:55:51 CEST Rahkonen Jukka (MML) wrote:
> Even Rouault wrote
> 
> > On mercredi 19 septembre 2018 05:06:59 CEST Rahkonen Jukka (MML) wrote:
> >> A workaround is to warp  into TIFF and run gdal_translate afterwards
> >> gdal_translate -of gpkg -co tiling_scheme=PseudoTMS_GlobalMercator
> >> 3857.tif
> >> 3857.gpkg
> > 
> > That's definitely the recomended way. The CreateCopy() method then
> > internally kind of sets-up gdalwarp with an appropriate resolution value.
> 
> I believe that you meant "sets-up gdal_translate with an appropriate
> resolution value" 

No I really meant that gdal_translate / CreateCopy() with
tiling_scheme=PseudoTMS_GlobalMercator internally uses the same warp API as gdalwarp.
See:
https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrsf_frmts/gpkg/ogrgeopackagedatasource.cpp#L4610
(lines above actually determine the target extent and resolution)

> because the previous gdalwarp command is totally unaware
> about what will happen next:
> > 
> gdalwarp -of gtiff -t_srs epsg:3857 sfdem.tif 3857.tif

Yes, gdalwarp itself is completely unaware of the constraints of
tiling_scheme=PseudoTMS_GlobalMercator, this is why if you want to use it directly,
it is tricky. The CreateCopy() way can take care of setting it up
appropriately


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From stanley.glidden at unh.edu  Wed Sep 19 14:15:03 2018
From: stanley.glidden at unh.edu (Stanley Glidden)
Date: Wed, 19 Sep 2018 17:15:03 -0400
Subject: [gdal-dev] Fwd: Accessing files on password protected OpeNDAP Hyrax
	servers
In-Reply-To: <6dce4efe-bd41-1a12-9426-9ed391f82c2d@unh.edu>
References: <6dce4efe-bd41-1a12-9426-9ed391f82c2d@unh.edu>
Message-ID: <7366ab78-6161-8262-2af1-cf6ff2974975@unh.edu>

Hi,

Should gdal (using the dods driver) be able to read data from password protected servers running
OPeNDAP Hyrax? The server I am trying to access is using the Earthdata Login system.

I followed the steps outlined for LDAP access, to create a .netrc and
.dodsrc file:

https://opendap.github.io/hyrax_guide/Master_Hyrax_Guide.html#_authentication_for_dap_clients.


As shown below gdalinfo is denied access, but ncdump is not.

I am able to access opendap servers that are not password protected.

>gdalinfo 
https://goldsmr4.gesdisc.eosdis.nasa.gov:443/opendap/MERRA2/M2I1NXASM.5.12.4/1980/01/MERRA2_100.inst1_2d_asm_Nx.19800101.nc4
ERROR 1: An error occurred while creating a virtual connection to the
DAP server:
Error while reading the URL:
https://goldsmr4.gesdisc.eosdis.nasa.gov:443/opendap/MERRA2/M2I1NXASM.5.12.4/1980/01/MERRA2_100.inst1_2d_asm_Nx.19800101.nc4.ver.
The OPeNDAP server returned the following message:
Unauthorized: Contact the server administrator.
gdalinfo failed - unable to open
'https://goldsmr4.gesdisc.eosdis.nasa.gov:443/opendap/MERRA2/M2I1NXASM.5.12.4/1980/01/MERRA2_100.inst1_2d_asm_Nx.19800101.nc4'.


ncdump
https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2T1NXSLV.5.12.4/1996/07/MERRA2_200.tavg1_2d_slv_Nx.19960708.nc4?lat
netcdf MERRA2_200.tavg1_2d_slv_Nx.19960708 {
dimensions:
         lat = 361 ;
variables:
...........


From stanley.glidden at unh.edu  Wed Sep 19 13:54:19 2018
From: stanley.glidden at unh.edu (Stanley Glidden)
Date: Wed, 19 Sep 2018 16:54:19 -0400
Subject: [gdal-dev] Accessing files on password protected OpeNDAP Hyrax
	servers
Message-ID: <6dce4efe-bd41-1a12-9426-9ed391f82c2d@unh.edu>

Hi,

Should gdal (using the dods driver) be able to read data from password 
protected servers running
OPeNDAP Hyrax? The server I am trying to access is using the Earthdata 
Login system.

I followed the steps outlined for LDAP access, to create a .netrc and
.dodsrc file:

https://opendap.github.io/hyrax_guide/Master_Hyrax_Guide.html#_authentication_for_dap_clients. 


As shown below gdalinfo is denied access, but ncdump is not.

I am able to access opendap servers that are not password protected.

 >gdalinfo 
https://goldsmr4.gesdisc.eosdis.nasa.gov:443/opendap/MERRA2/M2I1NXASM.5.12.4/1980/01/MERRA2_100.inst1_2d_asm_Nx.19800101.nc4
ERROR 1: An error occurred while creating a virtual connection to the 
DAP server:
Error while reading the URL: 
https://goldsmr4.gesdisc.eosdis.nasa.gov:443/opendap/MERRA2/M2I1NXASM.5.12.4/1980/01/MERRA2_100.inst1_2d_asm_Nx.19800101.nc4.ver.
The OPeNDAP server returned the following message:
Unauthorized: Contact the server administrator.
gdalinfo failed - unable to open 
'https://goldsmr4.gesdisc.eosdis.nasa.gov:443/opendap/MERRA2/M2I1NXASM.5.12.4/1980/01/MERRA2_100.inst1_2d_asm_Nx.19800101.nc4'.


ncdump 
https://goldsmr4.gesdisc.eosdis.nasa.gov/opendap/MERRA2/M2T1NXSLV.5.12.4/1996/07/MERRA2_200.tavg1_2d_slv_Nx.19960708.nc4?lat
netcdf MERRA2_200.tavg1_2d_slv_Nx.19960708 {
dimensions:
         lat = 361 ;
variables:
...........


From dalia at lmi.is  Thu Sep 20 06:12:47 2018
From: dalia at lmi.is (Dalia Prizginiene)
Date: Thu, 20 Sep 2018 13:12:47 +0000
Subject: [gdal-dev] gdalwarp  +proj=pipeline
Message-ID: <VI1PR0902MB204749FD54CA0B8A4AE7E33FC7130@VI1PR0902MB2047.eurprd09.prod.outlook.com>

Hello,
I am running PROJ 5.1.0 and I want to use +proj=pipeline together with gdalwarp, is there a such possibility?



Með kveðju/ Best regards
Dalia

--------------
Dalia Prizginiene
Landmælingar Íslands /  National Land Survey of Iceland
Mælingaverkfræðingur / GNSS Processing
Stillholt 16 - 18, 300 Akranes, +354 430 9006
www.lmi.is<http://www.lmi.is/> / Facebook<https://www.facebook.com/landmaelingar.islands?fref=ts> / Um meðferð tölvupósts / Disclaimer<http://www.lmi.is/landmaelingar-islands/medferd-tolvuposts/>

Hugið að umhverfinu áður en prentað er
Please consider the environment before printing

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180920/2688fa41/attachment.html>

From kristofer.krus at liu.se  Thu Sep 20 08:51:47 2018
From: kristofer.krus at liu.se (krikr42)
Date: Thu, 20 Sep 2018 08:51:47 -0700 (MST)
Subject: [gdal-dev] How to read all metadata from GeoTIFF file?
In-Reply-To: <6151771.79XuzMm9qN@even-i700>
References: <1536742114886-0.post@n6.nabble.com> <6151771.79XuzMm9qN@even-i700>
Message-ID: <1537458707339-0.post@n6.nabble.com>

Hi everybody,

Thanks for your replies! The method that worked in the end was to use an
external tool called  geotifcp <http://geotiff.maptools.org/geotifcp.html>  
(as David Strip-2 wrote). For some reason, all methods I tried that involved
GDAL only copied parts of the metadata.
Travis Kirstine wrote
> Could you use the gdal createcopy method first to create the 'second'
> image before opening it with pyvips

Why should I copy the dataset that way when I can just copy the file
directly on the file system? The problem is that pyvips doesn't recognize
the GeoTIFF-specific metadata, so the metadata is lost anyway when I open it
in pyvips to edit it.
Jon Morris wrote
> We have a function to transfer the tags manually, but most of the
> information is in the domain without a name - you have to call
> ds.GetMetadata(''). It goes something like this. For the bands, we're only
> copying some items, but you could take out the for loop and copy them all. 

Yes – the domain with an empty name is the default domain, which I also
include in the domains I looped over to fetch the metadata from. It did
contain some of the metadata I wanted to copy, but not any of the metadata
related to the coordinate system and location of the image within that
coordinate system.
Jon Morris wrote
> bnd_tags = src.GetRasterBand(band).GetMetadata(BASE_METADATA_DOMAIN)

I didn't know that raster bands could also contain metadata! Anyway, the
raster bands in my GeoTIFF image don't contain any metadata, that is, they
don't have any entries in any of the existing metadata domains, at least not
for the non-XML domains.

Speaking of which, I'm still wondering how to list available domains,
including XML domains, because there may be some XML domains in the GeoTIFF
file that I'm not aware know of, and the metadata I need to copy could exist
in those. How do you do that?
David Strip-2 wrote
> If you're willing to use command line tools, there is a pair of tools that
> ship with libgeotiff for extracting metadata from a geotiff and importing
> into a tiff to make it a geotiff.    Given a GeoTIFF file named
> original.tif, and a modified file (modified.tif) without the GeoTIFF tags,
> but still the same size and region:
> &nbsp;&nbsp;&nbsp;&nbsp;listgeo -no_norm original.tif &gt; original.geo
> &nbsp;&nbsp;&nbsp;&nbsp;geotifcp -g original.geo modified.tif
> modified_geotiff.tif

That's exactly what I found was working too!
Even Rouault-2 wrote
> You need to use SetGeoTransform() / GetGeoTransform() and SetProjection()
> /GetProjectionRef() to transfer georeferencing information.Overall
> presentation at 
> https://gdal.org/gdal_datamodel.html
> <https://gdal.org/gdal_datamodel.html>  
I did that, and that did transfer some of the metadata related to the
coordinate system and location of the image within that coordinate system,
but not all of it. Together with GetMetadata() and SetMetadata(), it seems
to have copied the same metadata as when I used the command line tools
gdalinfo and gdal_translate.

Regards

Kristofer



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180920/8bb68b86/attachment.html>

From even.rouault at spatialys.com  Fri Sep 21 02:20:50 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 21 Sep 2018 11:20:50 +0200
Subject: [gdal-dev] GDAL 2.3.2 rc1 available
Message-ID: <1681377.dO6l67zNPR@even-i700>

Hi,

I've issued a release candidate for GDAL 2.3.2. This adds 65 bug fixes on top 
of 2.3.1. The C and C++ API and ABI are unchanged.

The source is available at:

    http://download.osgeo.org/gdal/2.3.2/gdal-2.3.2rc1.tar.xz
    http://download.osgeo.org/gdal/2.3.2/gdal-2.3.2rc1.tar.gz
    http://download.osgeo.org/gdal/2.3.2/gdal232rc1.zip

A snapshot of the Python autotest suite can be downloaded from:

    http://download.osgeo.org/gdal/2.3.2/gdalautotest-2.3.2rc1.tar.gz
    http://download.osgeo.org/gdal/2.3.2/gdalautotest-2.3.2rc1.zip

GDAL-GRASS plugin (unchanged since 2.3.1):

    http://download.osgeo.org/gdal/2.3.2/gdal-grass-2.3.2.tar.gz

NEWS page:

   https://trac.osgeo.org/gdal/wiki/Release/2.3.2-News

I'll call for a vote to promote it to final at the beginning of next week if 
nothing serious is reported before.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From saarko at alaska.edu  Mon Sep 24 15:49:02 2018
From: saarko at alaska.edu (Scott Arko)
Date: Mon, 24 Sep 2018 14:49:02 -0800
Subject: [gdal-dev] Fwd: Post for gdal-dev
In-Reply-To: <CAAU4_8p2_u=s2Kgd0O0afJSA7ojcsLedgVmkk0iE9_k7h6L_Tg@mail.gmail.com>
References: <CAAU4_8p2_u=s2Kgd0O0afJSA7ojcsLedgVmkk0iE9_k7h6L_Tg@mail.gmail.com>
Message-ID: <CAFCnYQPi73QDuRh=_LGeW3McoEKFKP+2e=upy9zqSMkKw6-_vg@mail.gmail.com>

Hello GDAL Devs,

We are trying to use /vsicurl to allow users to access data in our
datapool.  However, we are having a problem that I'm hoping one of you may
know the answer to.  Below is a summary from a developer on the team.


Is there a way to make vsicurl persist cookies across redirects?

I'm trying to use vsicurl to interact with a URL behind OAuth
authentication.  The OAuth behavior involves redirects, cookies, and .netrc
credentials.  This curl command will successfully download the file
(assumes credentials are in a .netrc file):

curl --remote-name --location --netrc --cookie-jar ""
https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip


But an equivalent vsicurl command fails:

gdalinfo --config CPL_CURL_VERBOSE YES --config CPL_VSIL_CURL_USE_HEAD NO
"/vsizip/vsicurl/
https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
"


I'm effectively missing the --cookie-jar behavior.  In the attached output,
curl receives a session cookie on line 167, and forwards it with the
subsequent redirect on line 182 as desired.  vsicurl receives the same
cookie on line 96, but does not forward it with the subsequent redirect on
line 106.  This leads to an infinite redirect loop, and vsicurl eventually
fails with a "Maximum (10) redirects followed" error.


-- 
Scott Arko
Alaska Satellite Facility Deputy Director
University of Alaska Fairbanks

903 Koyukuk Drive
Fairbanks, AK 99775
Phone: (907) 474 - 5570
email:  saarko at alaska.edu
http://www.asf.alaska.edu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180924/f4e658da/attachment-0001.html>
-------------- next part --------------
$ curl --verbose --remote-name --location --netrc --cookie-jar "" https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 35.169.212.126...
* TCP_NODELAY set
* Connected to grfn.asf.alaska.edu (35.169.212.126) port 443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH
* successfully set certificate verify locations:
*   CAfile: /etc/pki/tls/certs/ca-bundle.crt
  CApath: none
* TLSv1.2 (OUT), TLS header, Certificate Status (22):
} [5 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.2 (IN), TLS handshake, Server hello (2):
{ [98 bytes data]
* TLSv1.2 (IN), TLS handshake, Certificate (11):
{ [5720 bytes data]
* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
{ [333 bytes data]
* TLSv1.2 (IN), TLS handshake, Server finished (14):
{ [4 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
} [70 bytes data]
* TLSv1.2 (OUT), TLS change cipher, Client hello (1):
} [1 bytes data]
* TLSv1.2 (OUT), TLS handshake, Finished (20):
} [16 bytes data]
* TLSv1.2 (IN), TLS change cipher, Client hello (1):
{ [1 bytes data]
* TLSv1.2 (IN), TLS handshake, Finished (20):
{ [16 bytes data]
* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
* ALPN, server accepted to use h2
* Server certificate:
*  subject: C=US; postalCode=99775; ST=AK; L=Fairbanks; street=910 Yukon Drive; O=University of Alaska System; OU=Alaska Satellite Facility; CN=*.asf.alaska.edu
*  start date: Apr 25 00:00:00 2018 GMT
*  expire date: Apr 25 23:59:59 2019 GMT
*  subjectAltName: host "grfn.asf.alaska.edu" matched cert's "*.asf.alaska.edu"
*  issuer: C=US; ST=MI; L=Ann Arbor; O=Internet2; OU=InCommon; CN=InCommon RSA Server CA
*  SSL certificate verify ok.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
} [5 bytes data]
* Using Stream ID: 1 (easy handle 0x178de60)
} [5 bytes data]
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/2
> Host: grfn.asf.alaska.edu
> User-Agent: curl/7.55.1
> Accept: */*
>
{ [5 bytes data]
* Connection state changed (MAX_CONCURRENT_STREAMS updated)!
} [5 bytes data]
< HTTP/2 302
< date: Mon, 24 Sep 2018 22:13:31 GMT
< content-type: text/html; charset=iso-8859-1
< content-length: 551
< location: https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
< server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
<
* Ignoring the response-body
{ [551 bytes data]
100   551  100   551    0     0    551      0  0:00:01 --:--:--  0:00:01  3826
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
*   Trying 198.118.243.33...
* TCP_NODELAY set
* Connected to urs.earthdata.nasa.gov (198.118.243.33) port 443 (#1)
* ALPN, offering h2
* ALPN, offering http/1.1
* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH
* successfully set certificate verify locations:
*   CAfile: /etc/pki/tls/certs/ca-bundle.crt
  CApath: none
* TLSv1.2 (OUT), TLS header, Certificate Status (22):
} [5 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.2 (IN), TLS handshake, Server hello (2):
{ [87 bytes data]
* TLSv1.2 (IN), TLS handshake, Certificate (11):
{ [4621 bytes data]
* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
{ [333 bytes data]
* TLSv1.2 (IN), TLS handshake, Server finished (14):
{ [4 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
} [70 bytes data]
* TLSv1.2 (OUT), TLS change cipher, Client hello (1):
} [1 bytes data]
* TLSv1.2 (OUT), TLS handshake, Finished (20):
} [16 bytes data]
* TLSv1.2 (IN), TLS change cipher, Client hello (1):
{ [1 bytes data]
* TLSv1.2 (IN), TLS handshake, Finished (20):
{ [16 bytes data]
* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
* ALPN, server did not agree to a protocol
* Server certificate:
*  subject: C=US; ST=Maryland; L=Greenbelt; jurisdictionC=US; O=NASA (National Aeronautics and Space Administration); businessCategory=Government Entity; serialNumber=1958-07-29; CN=urs.earthdata.nasa.gov
*  start date: Sep 12 12:29:03 2017 GMT
*  expire date: Sep 12 12:59:01 2019 GMT
*  subjectAltName: host "urs.earthdata.nasa.gov" matched cert's "urs.earthdata.nasa.gov"
*  issuer: C=US; O=Entrust, Inc.; OU=See www.entrust.net/legal-terms; OU=(c) 2014 Entrust, Inc. - for authorized use only; CN=Entrust Certification Authority - L1M
*  SSL certificate verify ok.
* Server auth using Basic with user 'asjohnston'
} [5 bytes data]
> GET /oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/1.1
> Host: urs.earthdata.nasa.gov
> Authorization: Basic ********************************************
> User-Agent: curl/7.55.1
> Accept: */*
>
{ [5 bytes data]
< HTTP/1.1 302 Found
< Server: nginx/1.10.2
< Date: Mon, 24 Sep 2018 22:13:32 GMT
< Content-Type: text/html; charset=utf-8
< Transfer-Encoding: chunked
< Connection: keep-alive
< X-Frame-Options: SAMEORIGIN
< X-XSS-Protection: 1; mode=block
< X-Content-Type-Options: nosniff
< Access-Control-Allow-Origin: null
< Access-Control-Allow-Credentials: true
< Access-Control-Allow-Methods: GET, POST
< Access-Control-Expose-Headers: true
< Location: https://grfn.asf.alaska.edu/door/oauth?code=01d3cdf63e1d50b3ed30d1537455ad28c53e5c69dfbfd5734758328e5dcdd2e3&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
< Cache-Control: no-cache
* Added cookie urs_user_already_logged="yes" for domain earthdata.nasa.gov, path /, expire 1537913612
< Set-Cookie: urs_user_already_logged=yes; domain=earthdata.nasa.gov; path=/; expires=Tue, 25 Sep 2018 22:13:32 GMT
* Added cookie _urs-gui_session="djEyNzFRVW9ha0VqVUhCV1hkakJUUlB0L2hDUXhaTHUzdmRlUU5KSGh1YklXMWkvMFNQNENySXorOWV1aU5Bak4vanZFN3lFb3dneDlJZkxrWGRRZk5BUUdxYUIyZkxudUpRcXR5WkIxTlFtUnpUVzRSZWN5MDJsWXlmNlBPU3F3cjhFRTJjTW5MSlRzaVZXWk9kMWVXd0hMK0lEcllPM1ZNWVR0VjZzQkQwPS0tNW1IaFFKM2hwTlJJcGxMRCtoQ20rUT09--1bb5fd391448b23ce39d72f23e9b3bc43b8777b0" for domain urs.earthdata.nasa.gov, path /, expire 1537913612
< Set-Cookie: _urs-gui_session=djEyNzFRVW9ha0VqVUhCV1hkakJUUlB0L2hDUXhaTHUzdmRlUU5KSGh1YklXMWkvMFNQNENySXorOWV1aU5Bak4vanZFN3lFb3dneDlJZkxrWGRRZk5BUUdxYUIyZkxudUpRcXR5WkIxTlFtUnpUVzRSZWN5MDJsWXlmNlBPU3F3cjhFRTJjTW5MSlRzaVZXWk9kMWVXd0hMK0lEcllPM1ZNWVR0VjZzQkQwPS0tNW1IaFFKM2hwTlJJcGxMRCtoQ20rUT09--1bb5fd391448b23ce39d72f23e9b3bc43b8777b0; path=/; expires=Tue, 25 Sep 2018 22:13:32 GMT; HttpOnly
< X-Request-Id: c37a5726-95a6-4ca4-9a68-a7bf76fcae51
< X-Runtime: 0.140991
< Strict-Transport-Security: max-age=31536000
<
* Ignoring the response-body
{ [363 bytes data]
100   356    0   356    0     0    356      0 --:--:-- --:--:-- --:--:--     0
* Connection #1 to host urs.earthdata.nasa.gov left intact
* Issue another request to this URL: 'https://grfn.asf.alaska.edu/door/oauth?code=01d3cdf63e1d50b3ed30d1537455ad28c53e5c69dfbfd5734758328e5dcdd2e3&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x1772e30 [can multiplex]
* Re-using existing connection! (#0) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (35.169.212.126) port 443 (#0)
* Using Stream ID: 3 (easy handle 0x178de60)
} [5 bytes data]
> GET /door/oauth?code=01d3cdf63e1d50b3ed30d1537455ad28c53e5c69dfbfd5734758328e5dcdd2e3&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/2
> Host: grfn.asf.alaska.edu
> User-Agent: curl/7.55.1
> Accept: */*
>
{ [5 bytes data]
< HTTP/2 302
< date: Mon, 24 Sep 2018 22:13:32 GMT
< content-type: text/html; charset=iso-8859-1
< content-length: 312
< location: http://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
< server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
* Added cookie GRFNDoor="ba169b82-2872-4199-8249-8fd529335b82" for domain grfn.asf.alaska.edu, path /, expire 0
< set-cookie: GRFNDoor=ba169b82-2872-4199-8249-8fd529335b82; Path=/
<
* Ignoring the response-body
{ [312 bytes data]
100   312  100   312    0     0    312      0  0:00:01 --:--:--  0:00:01   312
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'http://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
*   Trying 34.203.94.240...
* TCP_NODELAY set
* Connected to grfn.asf.alaska.edu (34.203.94.240) port 80 (#2)
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/1.1
> Host: grfn.asf.alaska.edu
> User-Agent: curl/7.55.1
> Accept: */*
> Cookie: GRFNDoor=ba169b82-2872-4199-8249-8fd529335b82
>
< HTTP/1.1 301 Moved Permanently
< Date: Mon, 24 Sep 2018 22:13:32 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 337
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Location: https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
<
* Ignoring the response-body
{ [337 bytes data]
100   337  100   337    0     0    337      0  0:00:01  0:00:01 --:--:--   337
* Connection #2 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x1772e30 [can multiplex]
* Re-using existing connection! (#0) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (35.169.212.126) port 443 (#0)
* Using Stream ID: 5 (easy handle 0x178de60)
} [5 bytes data]
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/2
> Host: grfn.asf.alaska.edu
> User-Agent: curl/7.55.1
> Accept: */*
> Cookie: GRFNDoor=ba169b82-2872-4199-8249-8fd529335b82
>
{ [5 bytes data]
< HTTP/2 302
< date: Mon, 24 Sep 2018 22:13:33 GMT
< content-type: text/html; charset=utf-8
< content-length: 2435
< location: https://gsfc-ngap-asf-grfn-private-prod.s3.amazonaws.com/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip?AWSAccessKeyId=ASIAV5PGEDVWQYUGWJGS&Expires=1537827228&x-amz-security-token=FQoGZXIvYXdzEDMaDLnS7iHpMhor1S3LyyKiBKU9f%2FdBchtWDUq0YzLxE3V6lQpcNNYvlI0dQXJiDD485Cf1ogF0hwinItfOb%2BxarLu7KHn0a%2BYgRLwKqIw%2Fx4iT6hiW10FmIPSar7QUTEQyOHGq9DJr%2BDWUzYwLoRFae8ojwr141oGF5kQhmGejoeGlATT4aC6KI6VdH7b%2FL34Z0vFxGLtFyeZeH8IhU36jGmi8Ef8XpPQNp3Im4nvq8Np7J8BVVwnpUceVdHOytrPrsNhCEWdnAhwooPyMGTKt2bSERQRhAiMslWQqV6cUgTfeZIH61odOBzdz6rhdKHZOgiDqSHkptScu5fO1XvVno3rqY0WjQvL4vTtDtFjGhPCtCkfgodfDuMdFITCa2UpinUVh6LFdv1F%2BUx64UELal4w%2Fe17uNRbOQ65WeSQIUaXKh7%2F50PEKrLJfpPOzUtDIa%2BcYdmLOzvdBbFUjsPjFB2YKrHJ5kh0P%2FxWCJNd9bSdHdpu7uNitgv8nKk%2B9AAUMTy5PdL5RWuxapVPhv58QDRZHUAMu10DbP7ucJrRaNbD5%2BTN%2Bd5elMuL3SZewcQYx97rWXgY9mX8lqpJoANzxCmYuL67545SLpmNPw5kfDTXUMHYKL3XIHm6HYECKZ5o7Zk5r5RDzv0NOpugl8Fk9fsYTA%2B7e9bicLub3Wu4S%2FRxV7aRc85C6fdaJiSKOLtlnIHZdYrcJcK5CDLF%2Bt9nnXxWBWzRo%2Bk3KYBQ0XmADBUBjgyifs6TdBQ%3D%3D&Signature=M43caFk%2Fp381Wkfevkee0bgGRVU%3D&userid=asjohnston
< server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
<
* Ignoring the response-body
{ [2435 bytes data]
100  2435  100  2435    0     0   2435      0  0:00:01  0:00:01 --:--:--     0
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://gsfc-ngap-asf-grfn-private-prod.s3.amazonaws.com/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip?AWSAccessKeyId=ASIAV5PGEDVWQYUGWJGS&Expires=1537827228&x-amz-security-token=FQoGZXIvYXdzEDMaDLnS7iHpMhor1S3LyyKiBKU9f%2FdBchtWDUq0YzLxE3V6lQpcNNYvlI0dQXJiDD485Cf1ogF0hwinItfOb%2BxarLu7KHn0a%2BYgRLwKqIw%2Fx4iT6hiW10FmIPSar7QUTEQyOHGq9DJr%2BDWUzYwLoRFae8ojwr141oGF5kQhmGejoeGlATT4aC6KI6VdH7b%2FL34Z0vFxGLtFyeZeH8IhU36jGmi8Ef8XpPQNp3Im4nvq8Np7J8BVVwnpUceVdHOytrPrsNhCEWdnAhwooPyMGTKt2bSERQRhAiMslWQqV6cUgTfeZIH61odOBzdz6rhdKHZOgiDqSHkptScu5fO1XvVno3rqY0WjQvL4vTtDtFjGhPCtCkfgodfDuMdFITCa2UpinUVh6LFdv1F%2BUx64UELal4w%2Fe17uNRbOQ65WeSQIUaXKh7%2F50PEKrLJfpPOzUtDIa%2BcYdmLOzvdBbFUjsPjFB2YKrHJ5kh0P%2FxWCJNd9bSdHdpu7uNitgv8nKk%2B9AAUMTy5PdL5RWuxapVPhv58QDRZHUAMu10DbP7ucJrRaNbD5%2BTN%2Bd5elMuL3SZewcQYx97rWXgY9mX8lqpJoANzxCmYuL67545SLpmNPw5kfDTXUMHYKL3XIHm6HYECKZ5o7Zk5r5RDzv0NOpugl8Fk9fsYTA%2B7e9bicLub3Wu4S%2FRxV7aRc85C6fdaJiSKOLtlnIHZdYrcJcK5CDLF%2Bt9nnXxWBWzRo%2Bk3KYBQ0XmADBUBjgyifs6TdBQ%3D%3D&Signature=M43caFk%2Fp381Wkfevkee0bgGRVU%3D&userid=asjohnston'
* Couldn't find host gsfc-ngap-asf-grfn-private-prod.s3.amazonaws.com in the .netrc file; using defaults
*   Trying 52.216.86.83...
* TCP_NODELAY set
* Connected to gsfc-ngap-asf-grfn-private-prod.s3.amazonaws.com (52.216.86.83) port 443 (#3)
* ALPN, offering h2
* ALPN, offering http/1.1
* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH
* successfully set certificate verify locations:
*   CAfile: /etc/pki/tls/certs/ca-bundle.crt
  CApath: none
* TLSv1.2 (OUT), TLS header, Certificate Status (22):
} [5 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.2 (IN), TLS handshake, Server hello (2):
{ [87 bytes data]
* TLSv1.2 (IN), TLS handshake, Certificate (11):
{ [2514 bytes data]
* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
{ [333 bytes data]
* TLSv1.2 (IN), TLS handshake, Server finished (14):
{ [4 bytes data]
* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
} [70 bytes data]
* TLSv1.2 (OUT), TLS change cipher, Client hello (1):
} [1 bytes data]
* TLSv1.2 (OUT), TLS handshake, Finished (20):
} [16 bytes data]
* TLSv1.2 (IN), TLS change cipher, Client hello (1):
{ [1 bytes data]
* TLSv1.2 (IN), TLS handshake, Finished (20):
{ [16 bytes data]
* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
* ALPN, server did not agree to a protocol
* Server certificate:
*  subject: C=US; ST=Washington; L=Seattle; O=Amazon.com Inc.; CN=*.s3.amazonaws.com
*  start date: Sep 22 00:00:00 2017 GMT
*  expire date: Jan  3 12:00:00 2019 GMT
*  subjectAltName: host "gsfc-ngap-asf-grfn-private-prod.s3.amazonaws.com" matched cert's "*.s3.amazonaws.com"
*  issuer: C=US; O=DigiCert Inc; OU=www.digicert.com; CN=DigiCert Baltimore CA-2 G2
*  SSL certificate verify ok.
} [5 bytes data]
> GET /S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip?AWSAccessKeyId=ASIAV5PGEDVWQYUGWJGS&Expires=1537827228&x-amz-security-token=FQoGZXIvYXdzEDMaDLnS7iHpMhor1S3LyyKiBKU9f%2FdBchtWDUq0YzLxE3V6lQpcNNYvlI0dQXJiDD485Cf1ogF0hwinItfOb%2BxarLu7KHn0a%2BYgRLwKqIw%2Fx4iT6hiW10FmIPSar7QUTEQyOHGq9DJr%2BDWUzYwLoRFae8ojwr141oGF5kQhmGejoeGlATT4aC6KI6VdH7b%2FL34Z0vFxGLtFyeZeH8IhU36jGmi8Ef8XpPQNp3Im4nvq8Np7J8BVVwnpUceVdHOytrPrsNhCEWdnAhwooPyMGTKt2bSERQRhAiMslWQqV6cUgTfeZIH61odOBzdz6rhdKHZOgiDqSHkptScu5fO1XvVno3rqY0WjQvL4vTtDtFjGhPCtCkfgodfDuMdFITCa2UpinUVh6LFdv1F%2BUx64UELal4w%2Fe17uNRbOQ65WeSQIUaXKh7%2F50PEKrLJfpPOzUtDIa%2BcYdmLOzvdBbFUjsPjFB2YKrHJ5kh0P%2FxWCJNd9bSdHdpu7uNitgv8nKk%2B9AAUMTy5PdL5RWuxapVPhv58QDRZHUAMu10DbP7ucJrRaNbD5%2BTN%2Bd5elMuL3SZewcQYx97rWXgY9mX8lqpJoANzxCmYuL67545SLpmNPw5kfDTXUMHYKL3XIHm6HYECKZ5o7Zk5r5RDzv0NOpugl8Fk9fsYTA%2B7e9bicLub3Wu4S%2FRxV7aRc85C6fdaJiSKOLtlnIHZdYrcJcK5CDLF%2Bt9nnXxWBWzRo%2Bk3KYBQ0XmADBUBjgyifs6TdBQ%3D%3D&Signature=M43caFk%2Fp381Wkfevkee0bgGRVU%3D&userid=asjohnston HTTP/1.1
> Host: gsfc-ngap-asf-grfn-private-prod.s3.amazonaws.com
> User-Agent: curl/7.55.1
> Accept: */*
>
{ [5 bytes data]
< HTTP/1.1 200 OK
< x-amz-id-2: ubW6hUXtkY8A1+abtzglWomJHZ+oGx50gs9TqcfUO4ZrxjBtJ87p09Sq5IhHCIPB0xesy4VTwCw=
< x-amz-request-id: 436A4AC682C1E286
< Date: Mon, 24 Sep 2018 22:13:34 GMT
< Last-Modified: Mon, 24 Sep 2018 18:29:39 GMT
< ETag: "190bf52e5c82147e454335b326d4f1f4-7"
< Accept-Ranges: bytes
< Content-Type: application/zip
< Content-Length: 431359485
< Server: AmazonS3
<
{ [5 bytes data]
100  411M  100  411M    0     0  68.5M      0  0:00:06  0:00:06 --:--:-- 87.7M
* Connection #3 to host gsfc-ngap-asf-grfn-private-prod.s3.amazonaws.com left intact
* WARNING: failed to save cookies in
-------------- next part --------------
$ gdalinfo --config CPL_CURL_VERBOSE YES --config CPL_VSIL_CURL_USE_HEAD NO "/vsizip/vsicurl/https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip"
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
*   Trying 34.203.94.240...
* TCP_NODELAY set
* Connected to grfn.asf.alaska.edu (34.203.94.240) port 443 (#0)
* ALPN, offering http/1.1
* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH
* successfully set certificate verify locations:
*   CAfile: /etc/pki/tls/certs/ca-bundle.crt
  CApath: none
* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
* ALPN, server accepted to use http/1.1
* Server certificate:
*  subject: C=US; postalCode=99775; ST=AK; L=Fairbanks; street=910 Yukon Drive; O=University of Alaska System; OU=Alaska Satellite Facility; CN=*.asf.alaska.edu
*  start date: Apr 25 00:00:00 2018 GMT
*  expire date: Apr 25 23:59:59 2019 GMT
*  subjectAltName: host "grfn.asf.alaska.edu" matched cert's "*.asf.alaska.edu"
*  issuer: C=US; ST=MI; L=Ann Arbor; O=Internet2; OU=InCommon; CN=InCommon RSA Server CA
*  SSL certificate verify ok.
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 302 Found
< Date: Mon, 24 Sep 2018 22:14:48 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 551
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Location: https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
<
* Ignoring the response-body
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
*   Trying 198.118.243.33...
* TCP_NODELAY set
* Connected to urs.earthdata.nasa.gov (198.118.243.33) port 443 (#1)
* ALPN, offering http/1.1
* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH
* successfully set certificate verify locations:
*   CAfile: /etc/pki/tls/certs/ca-bundle.crt
  CApath: none
* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
* ALPN, server did not agree to a protocol
* Server certificate:
*  subject: C=US; ST=Maryland; L=Greenbelt; jurisdictionC=US; O=NASA (National Aeronautics and Space Administration); businessCategory=Government Entity; serialNumber=1958-07-29; CN=urs.earthdata.nasa.gov
*  start date: Sep 12 12:29:03 2017 GMT
*  expire date: Sep 12 12:59:01 2019 GMT
*  subjectAltName: host "urs.earthdata.nasa.gov" matched cert's "urs.earthdata.nasa.gov"
*  issuer: C=US; O=Entrust, Inc.; OU=See www.entrust.net/legal-terms; OU=(c) 2014 Entrust, Inc. - for authorized use only; CN=Entrust Certification Authority - L1M
*  SSL certificate verify ok.
* Server auth using Basic with user 'asjohnston'
> GET /oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/1.1
Host: urs.earthdata.nasa.gov
Authorization: Basic ********************************************
Accept: */*

< HTTP/1.1 302 Found
< Server: nginx/1.10.2
< Date: Mon, 24 Sep 2018 22:14:48 GMT
< Content-Type: text/html; charset=utf-8
< Transfer-Encoding: chunked
< Connection: keep-alive
< X-Frame-Options: SAMEORIGIN
< X-XSS-Protection: 1; mode=block
< X-Content-Type-Options: nosniff
< Access-Control-Allow-Origin: null
< Access-Control-Allow-Credentials: true
< Access-Control-Allow-Methods: GET, POST
< Access-Control-Expose-Headers: true
< Location: https://grfn.asf.alaska.edu/door/oauth?code=ed859c566e4a840188f0d0e0d5c56e8d393518afb5afc80054a5058bdeede42f&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
< Cache-Control: no-cache
< Set-Cookie: urs_user_already_logged=yes; domain=earthdata.nasa.gov; path=/; expires=Tue, 25 Sep 2018 22:14:48 GMT
< Set-Cookie: _urs-gui_session=U2hoWnJhRitIMXhnSEk5MXZqSFVhUHJCaGJLWGN5dk9INlhSZkkrTllKRHFBOHVTbU1mbUxuTUZMU2JTc1N6R0JJTHZ0ek5lK3NXVEZyVVZFcXZzNzl2dEJaZTVZZlMvMlRVMzhLQVNZMkdRQThlZmNHVkdPbmtOMW5Bb3JsdmkvdEpFeXpCRktHbXlIZHUwMW5XOVhUOHQzb3dhNUJjYXB6eWFLUW1KTm5ZPS0tVlV0dmhwSzJHQXZnSUd0WUI5NE5NZz09--26ad2d27d0299a00c73817b1694348f29d511600; path=/; expires=Tue, 25 Sep 2018 22:14:48 GMT; HttpOnly
< X-Request-Id: 80c96dd7-1757-4b9e-a065-97828e9f9ad5
< X-Runtime: 0.179878
< Strict-Transport-Security: max-age=31536000
<
* Ignoring the response-body
* Connection #1 to host urs.earthdata.nasa.gov left intact
* Issue another request to this URL: 'https://grfn.asf.alaska.edu/door/oauth?code=ed859c566e4a840188f0d0e0d5c56e8d393518afb5afc80054a5058bdeede42f&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x22b6bd0 [can pipeline]
* Re-using existing connection! (#0) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (34.203.94.240) port 443 (#0)
> GET /door/oauth?code=ed859c566e4a840188f0d0e0d5c56e8d393518afb5afc80054a5058bdeede42f&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 302 Found
< Date: Mon, 24 Sep 2018 22:14:49 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 312
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Set-Cookie: GRFNDoor=6db6a08e-facd-4b62-a556-4354b670e81b; Path=/
< Location: http://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
<
* Ignoring the response-body
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'http://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
*   Trying 35.169.212.126...
* TCP_NODELAY set
* Connected to grfn.asf.alaska.edu (35.169.212.126) port 80 (#2)
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 301 Moved Permanently
< Date: Mon, 24 Sep 2018 22:14:49 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 337
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Location: https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
<
* Ignoring the response-body
* Connection #2 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x22b6bd0 [can pipeline]
* Re-using existing connection! (#0) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (34.203.94.240) port 443 (#0)
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 302 Found
< Date: Mon, 24 Sep 2018 22:14:49 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 551
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Location: https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
<
* Ignoring the response-body
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
* Found bundle for host urs.earthdata.nasa.gov: 0x23f3110 [can pipeline]
* Re-using existing connection! (#1) with host urs.earthdata.nasa.gov
* Connected to urs.earthdata.nasa.gov (198.118.243.33) port 443 (#1)
* Server auth using Basic with user 'asjohnston'
> GET /oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/1.1
Host: urs.earthdata.nasa.gov
Authorization: Basic ********************************************
Accept: */*

< HTTP/1.1 302 Found
< Server: nginx/1.10.2
< Date: Mon, 24 Sep 2018 22:14:49 GMT
< Content-Type: text/html; charset=utf-8
< Transfer-Encoding: chunked
< Connection: keep-alive
< X-Frame-Options: SAMEORIGIN
< X-XSS-Protection: 1; mode=block
< X-Content-Type-Options: nosniff
< Access-Control-Allow-Origin: null
< Access-Control-Allow-Credentials: true
< Access-Control-Allow-Methods: GET, POST
< Access-Control-Expose-Headers: true
< Location: https://grfn.asf.alaska.edu/door/oauth?code=7afe6ad7bacd07f41b88846c7da343f0bc2ae4fc6919798e64d8432f9fdb74f9&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
< Cache-Control: no-cache
< Set-Cookie: urs_user_already_logged=yes; domain=earthdata.nasa.gov; path=/; expires=Tue, 25 Sep 2018 22:14:49 GMT
< Set-Cookie: _urs-gui_session=VVhoYlZHODVsVUZtbllCKzA0RFpyYjQweExRaU5va0ZGbHBhRTNpajhqWVV2UEhBOGxmWC8zTDBVaHhWUmlnSkd0T2cxNll4RXNpekxKSzBrYyszYmNpVU43dDBDcG5VbysvU3RBMmlEdWIrOWhzQmNnOXpacmFTaHVHZUlJc0pMcWdtRDhNRlBneHdXTjFJby95ZzlYdnZmdURJbG93MDJHM1EwL3UyNkFjPS0tU1VraEpoazkwQWdGSXVYbHh3d1EvQT09--6278ff15b1ea23a876b1eeff4404329b381aef22; path=/; expires=Tue, 25 Sep 2018 22:14:49 GMT; HttpOnly
< X-Request-Id: 8b35f84f-dc8e-458e-b1b1-059b25fc6783
< X-Runtime: 0.254830
< Strict-Transport-Security: max-age=31536000
<
* Ignoring the response-body
* Connection #1 to host urs.earthdata.nasa.gov left intact
* Issue another request to this URL: 'https://grfn.asf.alaska.edu/door/oauth?code=7afe6ad7bacd07f41b88846c7da343f0bc2ae4fc6919798e64d8432f9fdb74f9&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x22b6bd0 [can pipeline]
* Re-using existing connection! (#0) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (34.203.94.240) port 443 (#0)
> GET /door/oauth?code=7afe6ad7bacd07f41b88846c7da343f0bc2ae4fc6919798e64d8432f9fdb74f9&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 302 Found
< Date: Mon, 24 Sep 2018 22:14:49 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 312
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Set-Cookie: GRFNDoor=1c8cb502-de20-48fb-99ec-dac6647235a9; Path=/
< Location: http://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
<
* Ignoring the response-body
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'http://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x24f37b0 [can pipeline]
* Re-using existing connection! (#2) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (35.169.212.126) port 80 (#2)
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 301 Moved Permanently
< Date: Mon, 24 Sep 2018 22:14:49 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 337
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Location: https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
<
* Ignoring the response-body
* Connection #2 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x22b6bd0 [can pipeline]
* Re-using existing connection! (#0) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (34.203.94.240) port 443 (#0)
> GET /door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 302 Found
< Date: Mon, 24 Sep 2018 22:14:49 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 551
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Location: https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
<
* Ignoring the response-body
* Connection #0 to host grfn.asf.alaska.edu left intact
* Issue another request to this URL: 'https://urs.earthdata.nasa.gov/oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
* Found bundle for host urs.earthdata.nasa.gov: 0x23f3110 [can pipeline]
* Re-using existing connection! (#1) with host urs.earthdata.nasa.gov
* Connected to urs.earthdata.nasa.gov (198.118.243.33) port 443 (#1)
* Server auth using Basic with user 'asjohnston'
> GET /oauth/authorize?app_type=401&client_id=iwntGSgHy9yoog7Mjag0dQ&response_type=code&redirect_uri=https%3A%2F%2Fgrfn.asf.alaska.edu%2Fdoor%2Foauth&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/1.1
Host: urs.earthdata.nasa.gov
Authorization: Basic ********************************************
Accept: */*

< HTTP/1.1 302 Found
< Server: nginx/1.10.2
< Date: Mon, 24 Sep 2018 22:14:50 GMT
< Content-Type: text/html; charset=utf-8
< Transfer-Encoding: chunked
< Connection: keep-alive
< X-Frame-Options: SAMEORIGIN
< X-XSS-Protection: 1; mode=block
< X-Content-Type-Options: nosniff
< Access-Control-Allow-Origin: null
< Access-Control-Allow-Credentials: true
< Access-Control-Allow-Methods: GET, POST
< Access-Control-Expose-Headers: true
< Location: https://grfn.asf.alaska.edu/door/oauth?code=4a6fcae8bfa8a2f82c3650964d368c009880cec58a5825bff5325e26b8489d13&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA
< Cache-Control: no-cache
< Set-Cookie: urs_user_already_logged=yes; domain=earthdata.nasa.gov; path=/; expires=Tue, 25 Sep 2018 22:14:50 GMT
< Set-Cookie: _urs-gui_session=cStzSHM5QmpvLzg2RS8rSnM4ZkpaMmVQdVY2NjQzV1VnU1o4djNIczNTQWVhS3ZiRks2K1F6ZytYaG43a1RMcHMzVEFaQjN1TE5iRXA1dGFLeDNhWC82ZUM1TnNNNXpWNVl3dWdjTUQ3b3VtSmlIZE5LTWhXMTJuWVBDaXFNT005MWtFVzQxR3U4M0VJWGNEeWFyTk5pbVZ5YllpQlVDNFNuTFI5YVRrajBZPS0tY1BuRU9SNllZN2E0TUV4SXlROTlOUT09--f440650bd6885b12ebce5ffee4b60b5b1003e307; path=/; expires=Tue, 25 Sep 2018 22:14:50 GMT; HttpOnly
< X-Request-Id: f5be8a9f-9863-48e4-8ff2-974c62997b1e
< X-Runtime: 0.167661
< Strict-Transport-Security: max-age=31536000
<
* Ignoring the response-body
* Connection #1 to host urs.earthdata.nasa.gov left intact
* Issue another request to this URL: 'https://grfn.asf.alaska.edu/door/oauth?code=4a6fcae8bfa8a2f82c3650964d368c009880cec58a5825bff5325e26b8489d13&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA'
* Couldn't find host grfn.asf.alaska.edu in the .netrc file; using defaults
* Found bundle for host grfn.asf.alaska.edu: 0x22b6bd0 [can pipeline]
* Re-using existing connection! (#0) with host grfn.asf.alaska.edu
* Connected to grfn.asf.alaska.edu (34.203.94.240) port 443 (#0)
> GET /door/oauth?code=4a6fcae8bfa8a2f82c3650964d368c009880cec58a5825bff5325e26b8489d13&state=aHR0cDovL2dyZm4uYXNmLmFsYXNrYS5lZHUvZG9vci9kb3dubG9hZC9TMS1JRkdfUk1fTTFTMl9UTjE0M18yMDE4MDkyNFQxMjI3MDEtMjAxODA5MThUMTIyNTQxX3MxLXJlc29yYi02ODZmLXYxLjIuMS1zdGFuZGFyZC56aXA HTTP/1.1
Host: grfn.asf.alaska.edu
Accept: */*

< HTTP/1.1 302 Found
< Date: Mon, 24 Sep 2018 22:14:50 GMT
< Content-Type: text/html; charset=iso-8859-1
< Content-Length: 312
< Connection: keep-alive
< Server: Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2g mod_wsgi/4.3.0 Python/2.7.12
< Set-Cookie: GRFNDoor=1807636b-3f69-4333-a108-ae4e76da1f2a; Path=/
< Location: http://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip
<
* Ignoring the response-body
* Connection #0 to host grfn.asf.alaska.edu left intact
* Maximum (10) redirects followed
ERROR 4: `/vsizip/vsicurl/https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip' does not exist in the file system,
and is not recognised as a supported dataset name.

gdalinfo failed - unable to open '/vsizip/vsicurl/https://grfn.asf.alaska.edu/door/download/S1-IFG_RM_M1S2_TN143_20180924T122701-20180918T122541_s1-resorb-686f-v1.2.1-standard.zip'.

From mauge.philippe at free.fr  Tue Sep 25 09:59:54 2018
From: mauge.philippe at free.fr (mauge.philippe at free.fr)
Date: Tue, 25 Sep 2018 18:59:54 +0200
Subject: [gdal-dev] problem with a geotiff
Message-ID: <75D9767836F84E97B87D888175D706D9@philHP>

Please, I'd like to submit you an isssue about a geotiff file.
Go to the web site http://www.digitalglobe.com/resources/product-samples/tripoli-lybya
Choose to download the second file: System-Ready (1B), 50 cm
Unzip it and try to load the file 16MAR08101212-P1BS-055675519010_01_P001.TIF in GDAL
I can't load it in GDAL because no projection is returned by the fonction GetProjectionRef()
It can be loaded only if you create manually a .prj and a .tfw file.
The file is OK because it is correctly loaded in Global Mapper.
Usually I can load geotiff files in GDAL, but this file won't.
Can you try to load it and may be tell me what's wrong with it ?

Best regards
Philippe

---
L'absence de virus dans ce courrier électronique a été vérifiée par le logiciel antivirus Avast.
https://www.avast.com/antivirus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180925/2f2fe2e9/attachment.html>

From even.rouault at spatialys.com  Tue Sep 25 10:23:18 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Sep 2018 19:23:18 +0200
Subject: [gdal-dev] Fwd: Post for gdal-dev
In-Reply-To: <CAFCnYQPi73QDuRh=_LGeW3McoEKFKP+2e=upy9zqSMkKw6-_vg@mail.gmail.com>
References: <CAAU4_8p2_u=s2Kgd0O0afJSA7ojcsLedgVmkk0iE9_k7h6L_Tg@mail.gmail.com>
 <CAFCnYQPi73QDuRh=_LGeW3McoEKFKP+2e=upy9zqSMkKw6-_vg@mail.gmail.com>
Message-ID: <2008464.3sA1k3F50I@even-i700>

Scott,

> 
> We are trying to use /vsicurl to allow users to access data in our
> datapool.  However, we are having a problem that I'm hoping one of you may
> know the answer to.  Below is a summary from a developer on the team.
> 
> 
> Is there a way to make vsicurl persist cookies across redirects?

No, this isn't implemented currently. Feel free to submit an enhancemnet 
request at https://github.com/OSGeo/gdal/issues/new

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From junt0015 at umn.edu  Tue Sep 25 10:22:09 2018
From: junt0015 at umn.edu (Thomas Juntunen)
Date: Tue, 25 Sep 2018 12:22:09 -0500
Subject: [gdal-dev] problem with a geotiff
In-Reply-To: <75D9767836F84E97B87D888175D706D9@philHP>
References: <75D9767836F84E97B87D888175D706D9@philHP>
Message-ID: <CAF028HV_Rdj1baJ5ZY5A9H9j8m6ZiQ60XMCuF0skv4H=F7+M4A@mail.gmail.com>

Hi Philippe,

It works for me:
>>> from osgeo import gdal
>>> gdal.VersionInfo()
'2020100'
>>> ds = gdal.Open(r"E:\16MAR08101212-M1BS-055675519010_01_P001.TIF")
>>> ds
<osgeo.gdal.Dataset; proxy of <Swig Object of type 'GDALDatasetShadow *' at
0x00000000010A6CC0> >
>>> ds.GetProjectionRef()
'GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0],UNIT["degree",0.0174532925199433],AUTHORITY["EPSG","4326"]]'

>From gdalinfo:
E:\>gdalinfo E:\16MAR08101212-M1BS-055675519010_01_P001.TIF
Driver: GTiff/GeoTIFF
Files: E:\16MAR08101212-M1BS-055675519010_01_P001.TIF
Size is 6616, 6903
Coordinate System is `'
GCP Projection =
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0],
    UNIT["degree",0.0174532925199433],
    AUTHORITY["EPSG","4326"]]
GCP[  0]: Id=1, Info=
          (0.5,0.5) -> (13.1567807900763,32.9252312619272,0)
GCP[  1]: Id=2, Info=
          (6615.5,0.5) -> (13.2984103237501,32.9244584648933,0)
GCP[  2]: Id=3, Info=
          (6615.5,6902.5) -> (13.2983785314726,32.7993021397123,0)
GCP[  3]: Id=4, Info=
          (0.5,6902.5) -> (13.1568844718844,32.8000571640568,0)
Metadata:
  AREA_OR_POINT=Area
  TIFFTAG_COPYRIGHT=(C) COPYRIGHT 2016 DigitalGlobe, Inc., Longmont CO USA
80503
  TIFFTAG_DATETIME=2016:09:02 06:26:36
  TIFFTAG_IMAGEDESCRIPTION={
  bandList =
  [
    2;
    3;
    4;
    5;
  ]
}
  TIFFTAG_MAXSAMPLEVALUE=2047
  TIFFTAG_MINSAMPLEVALUE=1
Image Structure Metadata:
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0, 6903.0)
Upper Right ( 6616.0,    0.0)
Lower Right ( 6616.0, 6903.0)
Center      ( 3308.0, 3451.5)
Band 1 Block=6616x79 Type=UInt16, ColorInterp=Red
Band 2 Block=6616x79 Type=UInt16, ColorInterp=Green
Band 3 Block=6616x79 Type=UInt16, ColorInterp=Blue
Band 4 Block=6616x79 Type=UInt16, ColorInterp=Undefined

On Tue, Sep 25, 2018 at 11:59 AM, <mauge.philippe at free.fr> wrote:

> Please, I'd like to submit you an isssue about a geotiff file.
> Go to the web site http://www.digitalglobe.com/resources/product-samples/
> tripoli-lybya
> Choose to download the second file: System-Ready (1B), 50 cm
> Unzip it and try to load the file 16MAR08101212-P1BS-055675519010_01_P001.TIF
> in GDAL
> I can't load it in GDAL because no projection is returned by the fonction
> GetProjectionRef()
> It can be loaded only if you create manually a .prj and a .tfw file.
> The file is OK because it is correctly loaded in Global Mapper.
> Usually I can load geotiff files in GDAL, but this file won't.
> Can you try to load it and may be tell me what's wrong with it ?
>
> Best regards
> Philippe
>
>
> <https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=emailclient> Garanti
> sans virus. www.avast.com
> <https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=emailclient>
> <#m_117792916060688249_DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
*The right coordinate system can turn an impossible problem into two really
hard problems. -- Charlie Pellerin*

Thomas Juntunen
GIS Specialist
Polar Geospatial Center
R280 Learning and Environmental Science
1954 Buford Ave
University of Minnesota
St. Paul, MN 55108
612-626-0505
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180925/ad28f4bb/attachment.html>

From even.rouault at spatialys.com  Tue Sep 25 10:29:15 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Sep 2018 19:29:15 +0200
Subject: [gdal-dev] problem with a geotiff
In-Reply-To: <75D9767836F84E97B87D888175D706D9@philHP>
References: <75D9767836F84E97B87D888175D706D9@philHP>
Message-ID: <4114232.UiIXXOYGpX@even-i700>

On mardi 25 septembre 2018 18:59:54 CEST mauge.philippe at free.fr wrote:
> Please, I'd like to submit you an isssue about a geotiff file.
> Go to the web site
> http://www.digitalglobe.com/resources/product-samples/tripoli-lybya Choose
> to download the second file: System-Ready (1B), 50 cm
> Unzip it and try to load the file
> 16MAR08101212-P1BS-055675519010_01_P001.TIF in GDAL I can't load it in GDAL
> because no projection is returned by the fonction GetProjectionRef() It can
> be loaded only if you create manually a .prj and a .tfw file. The file is
> OK because it is correctly loaded in Global Mapper.
> Usually I can load geotiff files in GDAL, but this file won't.
> Can you try to load it and may be tell me what's wrong with it ?

gdalinfo on the file shows:

Size is 26402, 27612
Coordinate System is `'
GCP Projection = 
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0],
    UNIT["degree",0.0174532925199433],
    AUTHORITY["EPSG","4326"]]
GCP[  0]: Id=1, Info=
          (0.5,0.5) -> (13.156950428616,32.925237256345,0)
GCP[  1]: Id=2, Info=
          (26401.5,0.5) -> (13.298264195371,32.9244661660205,0)
GCP[  2]: Id=3, Info=
          (26401.5,27611.5) -> (13.2982326391638,32.799296089494,0)
GCP[  3]: Id=4, Info=
          (0.5,27611.5) -> (13.157053933887,32.80004957666,0)
Metadata:
  AREA_OR_POINT=Area
  METADATATYPE=DG
  TIFFTAG_COPYRIGHT=(C) COPYRIGHT 2016 DigitalGlobe, Inc., Longmont CO USA 
80503
  TIFFTAG_DATETIME=2016:09:02 06:26:33
  TIFFTAG_IMAGEDESCRIPTION={
  bandList = 
  [
    1;
  ]
}
  TIFFTAG_MAXSAMPLEVALUE=2047
  TIFFTAG_MINSAMPLEVALUE=1
Image Structure Metadata:
  INTERLEAVE=BAND
RPC Metadata:
  HEIGHT_OFF=66
  HEIGHT_SCALE=501
  LAT_OFF=32.8622
  LAT_SCALE=0.0635
  LINE_DEN_COEFF=+1.000000E+00 -4.312485E-05 +9.397242E-04 +3.402903E-05 
+4.831666E-06 +2.711997E-07 -4.030012E-06 -4.962579E-05 +1.425424E-04 
-6.533418E-05 -6.474837E-08 +1.547331E-08 +4.154660E-06 +0.000000E+00 
+4.571326E-07 -2.748659E-04 -5.347683E-08 +0.000000E+00 +5.476937E-06 
+0.000000E+00
  LINE_NUM_COEFF=+1.218335E-03 -6.112947E-03 -1.014484E+00 +7.225448E-03 
-4.622733E-05 +5.629116E-07 +4.233303E-05 -3.719319E-04 -3.608017E-04 
-8.698413E-07 -3.881640E-07 +2.884197E-07 +6.565544E-06 +3.993115E-07 
+4.949166E-05 +2.241984E-04 +6.628490E-05 -3.381833E-07 -2.958911E-06 
-4.712746E-07
  LINE_OFF=13805
  LINE_SCALE=13806
  LONG_OFF=13.2276
  LONG_SCALE=0.0710
  SAMP_DEN_COEFF=+1.000000E+00 -1.207666E-04 +2.303233E-04 -4.443465E-04 
-1.449359E-05 +5.345952E-07 -5.601849E-07 +1.428815E-06 +3.414761E-06 
-2.187619E-06 -2.923988E-08 -1.931437E-08 -2.493269E-08 +0.000000E+00 
+3.951025E-08 -8.725792E-08 +0.000000E+00 +0.000000E+00 +1.117937E-08 
+0.000000E+00
  SAMP_NUM_COEFF=+9.636456E-04 +1.005342E+00 +3.651704E-04 +4.863650E-03 
-2.278309E-04 +4.374349E-04 -2.253067E-04 -8.455434E-04 -5.161798E-04 
+3.445108E-06 +9.375961E-08 -3.540851E-06 -5.042296E-06 -1.878383E-06 
+2.016642E-05 +9.306878E-05 -5.979850E-08 -8.470211E-07 -1.672072E-06 
+0.000000E+00
  SAMP_OFF=13200
  SAMP_SCALE=13201

so the file isn't orthorectified, which explains that GetProjectionRef() 
returns an empty string.

But it contains ground control points (GCPs). You can get the GCP projection 
with GetGCPProjection(). You can compute an approximate geotransform from the 
GCPs with GDALGCPsToGeoTransform(), fed with GDALGetGCPCount() and 
GDALGetGCPs().

Another option is to use the RPC with gdalwarp -rpc (possibly with a DEM with 
-to RPC_DEM=) to orthorectify the file.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Tue Sep 25 10:46:04 2018
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Tue, 25 Sep 2018 14:46:04 -0300
Subject: [gdal-dev] GDAL 2.3.2 rc1 available
In-Reply-To: <1681377.dO6l67zNPR@even-i700>
References: <1681377.dO6l67zNPR@even-i700>
Message-ID: <b102145d-ba00-afb4-4f42-528b8f084432@gatewaygeomatics.com>

Hi Even,

No issues here with rc1 on VisualStudio 2017.

-jeff



On 2018-09-21 6:20 AM, Even Rouault wrote:
> Hi,
> 
> I've issued a release candidate for GDAL 2.3.2. This adds 65 bug fixes on top
> of 2.3.1. The C and C++ API and ABI are unchanged.
> 
> The source is available at:
> 
>      http://download.osgeo.org/gdal/2.3.2/gdal-2.3.2rc1.tar.xz
>      http://download.osgeo.org/gdal/2.3.2/gdal-2.3.2rc1.tar.gz
>      http://download.osgeo.org/gdal/2.3.2/gdal232rc1.zip
> 
> A snapshot of the Python autotest suite can be downloaded from:
> 
>      http://download.osgeo.org/gdal/2.3.2/gdalautotest-2.3.2rc1.tar.gz
>      http://download.osgeo.org/gdal/2.3.2/gdalautotest-2.3.2rc1.zip
> 
> GDAL-GRASS plugin (unchanged since 2.3.1):
> 
>      http://download.osgeo.org/gdal/2.3.2/gdal-grass-2.3.2.tar.gz
> 
> NEWS page:
> 
>     https://trac.osgeo.org/gdal/wiki/Release/2.3.2-News
> 
> I'll call for a vote to promote it to final at the beginning of next week if
> nothing serious is reported before.
> 
> Even
> 


-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/

From even.rouault at spatialys.com  Wed Sep 26 00:13:30 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 26 Sep 2018 09:13:30 +0200
Subject: [gdal-dev] Motion: Promote GDAL 2.3.2 rc1 for release
Message-ID: <8521021.6Cfv83ss8a@even-i700>

Hi,

Motion: GDAL/OGR 2.3.2 rc1 is promoted to be the official 2.3.2 final release.

-------

My vote: +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From julien.cabieces at oslandia.com  Wed Sep 26 00:30:53 2018
From: julien.cabieces at oslandia.com (Julien Cabieces)
Date: Wed, 26 Sep 2018 09:30:53 +0200
Subject: [gdal-dev] Gdal contour number of contour with -p
Message-ID: <3406bd25-59ab-2fcc-dc3b-e7ac178f9099@oslandia.com>

Hi,

I notice that executing gdal_contour has different number of contour
with or without -p option.

gdal_contour  -b 1 -a level -fl 1 -f GPKG NETCDF:"/tmp/myfile.nc":MYVAR
/tmp/outfile.gpkg

This generates one contour line.

gdal_contour  -p -b 1 -a level -fl 1 -f GPKG
NETCDF:"/tmp/myfile.nc":MYVAR /tmp/outfile.gpkg

This generates two contour polygons, one where all values are greater
than 1 and other one where all values are lesser than 1.

I was wondering if it wouldn't be better to generate only one polygon
contour where all values are greater than 1, in order to keep the same
contour number with or without the option.

Regards,

Julien


-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 2489 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180926/a8840542/attachment.key>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Sep 26 01:22:35 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 26 Sep 2018 01:22:35 -0700 (MST)
Subject: [gdal-dev] Motion: Promote GDAL 2.3.2 rc1 for release
In-Reply-To: <8521021.6Cfv83ss8a@even-i700>
References: <8521021.6Cfv83ss8a@even-i700>
Message-ID: <1537950155724-0.post@n6.nabble.com>

Even Rouault-2 wrote
> Hi,
> 
> Motion: GDAL/OGR 2.3.2 rc1 is promoted to be the official 2.3.2 final
> release.
> 
> -------
> 
> My vote: +1
> 
> Even

+1

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jmckenna at gatewaygeomatics.com  Wed Sep 26 05:36:38 2018
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 26 Sep 2018 09:36:38 -0300
Subject: [gdal-dev] Motion: Promote GDAL 2.3.2 rc1 for release
In-Reply-To: <8521021.6Cfv83ss8a@even-i700>
References: <8521021.6Cfv83ss8a@even-i700>
Message-ID: <3aa5218a-9599-b68f-5d54-9d80d6e79742@gatewaygeomatics.com>

On 2018-09-26 4:13 AM, Even Rouault wrote:
> Hi,
> 
> Motion: GDAL/OGR 2.3.2 rc1 is promoted to be the official 2.3.2 final release.
> 


+1  jeff






From howard at hobu.co  Wed Sep 26 10:52:25 2018
From: howard at hobu.co (Howard Butler)
Date: Wed, 26 Sep 2018 12:52:25 -0500
Subject: [gdal-dev] Motion: Promote GDAL 2.3.2 rc1 for release
In-Reply-To: <3aa5218a-9599-b68f-5d54-9d80d6e79742@gatewaygeomatics.com>
References: <8521021.6Cfv83ss8a@even-i700>
 <3aa5218a-9599-b68f-5d54-9d80d6e79742@gatewaygeomatics.com>
Message-ID: <eac4668a-d7e4-f1a9-3bca-ff3f3697a2e1@hobu.co>



On 9/26/18 7:36 AM, Jeff McKenna wrote:
> On 2018-09-26 4:13 AM, Even Rouault wrote:
>> Hi,
>>
>> Motion: GDAL/OGR 2.3.2 rc1 is promoted to be the official 2.3.2 final
>> release.
>>
>
>
> +1  jeff

+1 Howard

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180926/4c7969d6/attachment.sig>

From dmorissette at mapgears.com  Wed Sep 26 11:10:32 2018
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Wed, 26 Sep 2018 14:10:32 -0400
Subject: [gdal-dev] Motion: Promote GDAL 2.3.2 rc1 for release
In-Reply-To: <8521021.6Cfv83ss8a@even-i700>
References: <8521021.6Cfv83ss8a@even-i700>
Message-ID: <23a02ef4-a649-f0d3-6cc0-0e8d0cc3e287@mapgears.com>

+1

Daniel



On 2018-09-26 3:13 AM, Even Rouault wrote:
> Hi,
> 
> Motion: GDAL/OGR 2.3.2 rc1 is promoted to be the official 2.3.2 final release.
> 
> -------
> 
> My vote: +1
> 
> Even
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From even.rouault at spatialys.com  Fri Sep 28 06:02:42 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Sep 2018 15:02:42 +0200
Subject: [gdal-dev] Motion: Promote GDAL 2.3.2 rc1 for release
In-Reply-To: <8521021.6Cfv83ss8a@even-i700>
References: <8521021.6Cfv83ss8a@even-i700>
Message-ID: <8368164.XKc7pgYp0h@even-i700>

On mercredi 26 septembre 2018 09:13:30 CEST Even Rouault wrote:
> Hi,
> 
> Motion: GDAL/OGR 2.3.2 rc1 is promoted to be the official 2.3.2 final
> release.
> 
> -------
> 
> My vote: +1

I declare this motion passed with +1 from PSC members JukkaR, HowardB, DanielM 
and myself, as well as Jeff McKenna.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Sep 28 06:31:06 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Sep 2018 15:31:06 +0200
Subject: [gdal-dev] GDAL/OGR 2.3.2 is released
Message-ID: <1662624.e36ZKfH7qE@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 2.3.2 bug fix version. This adds 65 bug fixes on top 
of 2.3.1. The C and C++ API and ABI are unchanged.

Consult the release notes for the list of issues addressed :
  https://trac.osgeo.org/gdal/wiki/Release/2.3.2-News

The sources are available at:

    http://download.osgeo.org/gdal/2.3.2/gdal-2.3.2.tar.xz
    http://download.osgeo.org/gdal/2.3.2/gdal-2.3.2.tar.gz
    http://download.osgeo.org/gdal/2.3.2/gdal232.zip
    http://download.osgeo.org/gdal/2.3.2/gdal-grass-2.3.2.tar.gz

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Sep 28 08:50:41 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Sep 2018 17:50:41 +0200
Subject: [gdal-dev] Gdal contour number of contour with -p
In-Reply-To: <3406bd25-59ab-2fcc-dc3b-e7ac178f9099@oslandia.com>
References: <3406bd25-59ab-2fcc-dc3b-e7ac178f9099@oslandia.com>
Message-ID: <1891389.v8V0WXMYR4@even-i700>

On mercredi 26 septembre 2018 09:30:53 CEST Julien Cabieces wrote:
> Hi,
> 
> I notice that executing gdal_contour has different number of contour
> with or without -p option.
> 
> gdal_contour  -b 1 -a level -fl 1 -f GPKG NETCDF:"/tmp/myfile.nc":MYVAR
> /tmp/outfile.gpkg
> 
> This generates one contour line.
> 
> gdal_contour  -p -b 1 -a level -fl 1 -f GPKG
> NETCDF:"/tmp/myfile.nc":MYVAR /tmp/outfile.gpkg
> 
> This generates two contour polygons, one where all values are greater
> than 1 and other one where all values are lesser than 1.
> 
> I was wondering if it wouldn't be better to generate only one polygon
> contour where all values are greater than 1, in order to keep the same
> contour number with or without the option.

This is the classical problems of intervals and sticks :-)
Polygons are intervals, and lines are sticks, so I don't find it odd that you 
don't get the same number of objects. Having the union of polygons to fill the 
raster extent seems to me to be a desirable property.

Side question: I was wondering if the exterior polygon a hole at the place 
where the interior polygon is ? ie are polygons properly disjoint ?

The question is more on the semantics of the attributes created for polygons. 
For clarity, we should probably have two attributes, one with the minimum 
value and one with the maximum one. That would make sense especially when used 
the -fl options with irregular levels. So perhaps a -a_min and -a_max could be 
useful for polygons.
Or if we have a single value, we should precisely define if it is the minimum 
or the maximum value.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gunnarblom at mail.com  Sat Sep 29 13:28:12 2018
From: gunnarblom at mail.com (Gunnar Blom)
Date: Sat, 29 Sep 2018 22:28:12 +0200
Subject: [gdal-dev] Duplicate symbol (_gdal_TIFFInitJPEG)
Message-ID: <trinity-7b06f083-e0e5-4886-825a-3797a4bc6deb-1538252892520@3c-app-mailcom-lxa06>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180929/dfc09d9f/attachment.html>

From even.rouault at spatialys.com  Sat Sep 29 14:05:39 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 29 Sep 2018 23:05:39 +0200
Subject: [gdal-dev] Duplicate symbol (_gdal_TIFFInitJPEG)
In-Reply-To: <trinity-7b06f083-e0e5-4886-825a-3797a4bc6deb-1538252892520@3c-app-mailcom-lxa06>
References: <trinity-7b06f083-e0e5-4886-825a-3797a4bc6deb-1538252892520@3c-app-mailcom-lxa06>
Message-ID: <14943224.FJxcmtOTDR@even-i700>

Hi,

I don't have a Mac. I tried to repliate on Linux wihtout success, but there 
are a number of configurations possible...

Can you give the ./configure command line you used and the output of the ./
configure ?

As a workaround you can try removing --with-rename-internal-libtiff-symbols 
and/or adding --without-jpeg12 since the combinations of two is involved in 
the issue (although having internal libtiff + rename libtiff symbols + JPEG12 
in TIFF works fine for me)

If you made several builds with different ./configure options, make sure to 
clean between each. Just in case...

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gunnarblom at mail.com  Sun Sep 30 01:29:44 2018
From: gunnarblom at mail.com (Gunnar Blom)
Date: Sun, 30 Sep 2018 10:29:44 +0200
Subject: [gdal-dev] Duplicate symbol (_gdal_TIFFInitJPEG)
In-Reply-To: <14943224.FJxcmtOTDR@even-i700>
References: <trinity-7b06f083-e0e5-4886-825a-3797a4bc6deb-1538252892520@3c-app-mailcom-lxa06>
 <14943224.FJxcmtOTDR@even-i700>
Message-ID: <trinity-0f6a090a-979d-426f-a8c9-68b547383355-1538296184113@3c-app-mailcom-lxa13>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20180930/9bd35e27/attachment-0001.html>

