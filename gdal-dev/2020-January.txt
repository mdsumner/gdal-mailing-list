From lars.schylberg at blixtmail.se  Thu Jan  2 16:42:52 2020
From: lars.schylberg at blixtmail.se (lars.schylberg at blixtmail.se)
Date: Fri, 03 Jan 2020 00:42:52 +0000
Subject: [gdal-dev] How to convert png color to png/tiff black and white
In-Reply-To: <VI1P193MB0509DBE334047D264B28721DB6240@VI1P193MB0509.EURP193.PROD.OUTLOOK.COM>
References: <VI1P193MB0509DBE334047D264B28721DB6240@VI1P193MB0509.EURP193.PROD.OUTLOOK.COM>
Message-ID: <b5f350bb31dff80d124a56f2442b32be@blixtmail.se>

Hi,

There is one way to solve this with gdal_calc. I have had some time off during the holidays,
but kept thinking about your question and thought it was a fun problem.
Actually I have solved some other problems with tif palette images and gdal_calc lately. So I put together one solution that
I think will work in your case. I am assuming that You are using linux and have some knowledge in bash scripting.

First we have to create a reclass rule for gdal_calc, We do that with with running gdalinfo. 
Strip the info to only keep the color table with sed.
Then dynamically create the rule with awk, based on your rgb values (turn palette values into either 0 or 1).
Finally strip the last "+" from the rule (the last sed command)

Then run gdal_calc with your relclass rule

gdal_calc produces a grey scale image, but:

We then turn the image into a virtual raster file (VRT)
We create a new color table and insert it into the vrt file with sed.
Change the vrt file to be a palette image again with sed.
Finally we can turn the vrt image into a tif image again.

If this works you could loop over all your images and process all in the same way.
Just do a bash function with the steps and loop over your input files.

The whole idea of the process is outlined in a gist I just uploaded.
I just tested the first part with the rule myself, but the other stuff I used before
so it should work.

https://gist.github.com/LarsSchy/c1be96fa03f7dc11df4247be033e2705 (https://gist.github.com/LarsSchy/c1be96fa03f7dc11df4247be033e2705)

I hope this helps You. 

Have fun / Lars Schylberg

29 december 2019 kl. 16:47, "LE LAMER Romain" <rlelamer at hotmail.fr (mailto:rlelamer at hotmail.fr?to=%22LE%20LAMER%20Romain%22%20<rlelamer at hotmail.fr>)> skrev:
Hi, 
I need to convert 524 288 color png tiles to black and white png. 
=> The lands always have the 2 colors RGB (RGBA?) 59,89,95,255 and / or 60,89,96,255. 
=> The sea always has the colors RGB 109,178,200,255 / 138,193,212,255 and 161,205,220,255. 
Some tiles contain only land, others only sea and still others contain land and at least 1 color of the sea ... 
I use gdal_translate to georeference and assign a projection to each tile (via script) with the following command (and it works perfectly): 
gdal_translate -a_srs EPSG: 4326 -a_ullr <ulx> <uly> <lrx> <lry> input.png output.tiff 
I have read and reread, in every way, the gdal_translate help with the args -b and -mask and I don't understand how to use it ... 
I need all the sea colors to always be Black and all the lands colors to be White. 
(I polygonize each tile afterwards) 
How can I do this via gdal_translate or other gdal program? 
Thanks for your help 
PS: 
What gdalinfo gives me for a random tile (original png) 
 gdalinfo map_11_0_309.png  Driver: PNG/Portable Network Graphics Files: map_11_0_309.png Size is 256, 256 Coordinate System is `' Corner Coordinates: Upper Left ( 0.0, 0.0) Lower Left ( 0.0, 256.0) Upper Right ( 256.0, 0.0) Lower Right ( 256.0, 256.0) Center ( 128.0, 128.0) Band 1 Block=256x1 Type=Byte, ColorInterp=Palette Image Structure Metadata: NBITS=2 Color Table (RGB with 4 entries) 0: 60,89,96,255 1: 109,178,200,255 2: 138,193,212,255 3: 161,205,220,255
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200103/9e4692db/attachment.html>

From jluis at ualg.pt  Fri Jan  3 09:27:19 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Fri, 3 Jan 2020 17:27:19 +0000
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
Message-ID: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>

Hi Even,

New Year, new mysteries. I'm having quite strange slow times in computing the min/max of netCDF files.

In GMT we can read files via GDAL by appending =gd to the file name. So both of these do a similar job
grdinfo grav_29_img.nc=gd
and
gdalinfo grav_29_img.nc -mm

and it takes around 28 sec in a new laptop running Windows and master GDAL. However in WSL, same laptop but GDAL 2.2.3, they take about 5:30 MINUTES to run. On a OSX it takes about 3:30 minutes (not me who run this, and a GDAL 3.0.3 MacPorts)

On Windows for files of similar size it run faster when data is of type float (the grid in this example is a short int).

Now, perhaps the weirdest thing is that if I run the GMT command via our Julia wrapper it only takes ~8 sec, whilst the same command via the Matlab wrapper took 1:18 min

The ~8 sec time is close to what I get with a pure GMT (i.e. not using GDAL to read the nc file  (grdinfo grav_29_img.nc -M))

>From the GMT side all happens in the call

        GDALComputeRasterMinMax(hBand, false, adfMinMax);

And I guess that the same holds from the pure GDAL call.

If you want to test with the grid used in these testings, it's here
ftp://ftp.soest.hawaii.edu<ftp://ftp.soest.hawaii.edu.pwessel>/pwessel/grav_29_img.nc<http://grav_29_img.nc>

Happy new year

Joaquim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200103/9a2f454f/attachment.html>

From jmckenna at gatewaygeomatics.com  Fri Jan  3 10:02:18 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 3 Jan 2020 14:02:18 -0400
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
Message-ID: <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>

Hi Joaquim,

I have tested your file on Windows 10 here, with the command:

    gdalinfo grav_29_img.nc -mm

which takes about 5 seconds to execute fully.  I am using MS4W 4.0.2 
(GDAL 2.4.3 , NetCDF 4.7.3 )

I haven't tested using your wrappers though, so imagine that my feedback 
is not very useful.

PS. but thanks for sharing the larger grid file, which is useful for 
testing.

Wishing you a prosperous 2020.

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/



On 2020-01-03 1:27 PM, Joaquim Manuel Freire Luís wrote:
> Hi Even,
> 
> New Year, new mysteries. I’m having quite strange slow times in 
> computing the min/max of netCDF files.
> 
> In GMT we can read files via GDAL by appending =gd to the file name. So 
> both of these do a similar job
> 
> grdinfo grav_29_img.nc=gd
> 
> and
> 
> gdalinfo grav_29_img.nc -mm
> 
> and it takes around 28 sec in a new laptop running Windows and master 
> GDAL. However in WSL, same laptop but GDAL 2.2.3, they take about 5:30 
> MINUTES to run. On a OSX it takes about 3:30 minutes (not me who run 
> this, and a GDAL 3.0.3 MacPorts)
> 
> On Windows for files of similar size it run faster when data is of type 
> float (the grid in this example is a short int).
> 
> Now, perhaps the weirdest thing is that if I run the GMT command via our 
> Julia wrapper it only takes ~8 sec, whilst the same command via the 
> Matlab wrapper took 1:18 min
> 
> The ~8 sec time is close to what I get with a pure GMT (i.e. not using 
> GDAL to read the nc file  (grdinfo grav_29_img.nc -M))
> 
>  From the GMT side all happens in the call
> 
>          GDALComputeRasterMinMax(hBand, false, adfMinMax);
> 
> And I guess that the same holds from the pure GDAL call.
> 
> If you want to test with the grid used in these testings, it’s here
> 
> ftp://ftp.soest.hawaii.edu 
> <ftp://ftp.soest.hawaii.edu.pwessel>/pwessel/grav_29_img.nc 
> <http://grav_29_img.nc>
> 
> Happy new year
> 
> Joaquim
> 
> 

From jluis at ualg.pt  Fri Jan  3 10:26:23 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Fri, 3 Jan 2020 18:26:23 +0000
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>
Message-ID: <DB8PR04MB6697D0D0716C1A0718DFFF60A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>

Hi Jeff,

Thanks for testing this. Sure it's useful. It also reminded me that I have a OSGeo4W with GDAL 2.4.1 but don't know which netCDF version, and using it took ... over 6 minutes.
My Windows netCDF lib is a bit old by now (I build it from source). It might be it.


Hi Joaquim,

I have tested your file on Windows 10 here, with the command:

    gdalinfo grav_29_img.nc -mm

which takes about 5 seconds to execute fully.  I am using MS4W 4.0.2 (GDAL 2.4.3 , NetCDF 4.7.3 )

I haven't tested using your wrappers though, so imagine that my feedback is not very useful.

PS. but thanks for sharing the larger grid file, which is useful for testing.

Wishing you a prosperous 2020.

-jeff



--
Jeff McKenna
MapServer Consulting and Training Services https://gatewaygeomatics.com/



On 2020-01-03 1:27 PM, Joaquim Manuel Freire Luís wrote:
> Hi Even,
> 
> New Year, new mysteries. I’m having quite strange slow times in 
> computing the min/max of netCDF files.
> 
> In GMT we can read files via GDAL by appending =gd to the file name. So 
> both of these do a similar job
> 
> grdinfo grav_29_img.nc=gd
> 
> and
> 
> gdalinfo grav_29_img.nc -mm
> 
> and it takes around 28 sec in a new laptop running Windows and master 
> GDAL. However in WSL, same laptop but GDAL 2.2.3, they take about 5:30 
> MINUTES to run. On a OSX it takes about 3:30 minutes (not me who run 
> this, and a GDAL 3.0.3 MacPorts)
> 
> On Windows for files of similar size it run faster when data is of type 
> float (the grid in this example is a short int).
> 
> Now, perhaps the weirdest thing is that if I run the GMT command via our 
> Julia wrapper it only takes ~8 sec, whilst the same command via the 
> Matlab wrapper took 1:18 min
> 
> The ~8 sec time is close to what I get with a pure GMT (i.e. not using 
> GDAL to read the nc file  (grdinfo grav_29_img.nc -M))
> 
>  From the GMT side all happens in the call
> 
>          GDALComputeRasterMinMax(hBand, false, adfMinMax);
> 
> And I guess that the same holds from the pure GDAL call.
> 
> If you want to test with the grid used in these testings, it’s here
> 
> ftp://ftp.soest.hawaii.edu 
> <ftp://ftp.soest.hawaii.edu.pwessel>/pwessel/grav_29_img.nc 
> <http://grav_29_img.nc>
> 
> Happy new year
> 
> Joaquim
> 
> 
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From jluis at ualg.pt  Fri Jan  3 11:37:30 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Fri, 3 Jan 2020 19:37:30 +0000
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <DB8PR04MB6697D0D0716C1A0718DFFF60A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>
 <DB8PR04MB6697D0D0716C1A0718DFFF60A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
Message-ID: <DB8PR04MB66970CC63CAD8FEC6C156ECAA6230@DB8PR04MB6697.eurprd04.prod.outlook.com>

Nope, rebuilt netCDF but same timings.


-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Joaquim Manuel Freire Luís
Sent: Friday, January 3, 2020 6:26 PM
To: Jeff McKenna <jmckenna at gatewaygeomatics.com>; gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids

Hi Jeff,

Thanks for testing this. Sure it's useful. It also reminded me that I have a OSGeo4W with GDAL 2.4.1 but don't know which netCDF version, and using it took ... over 6 minutes.
My Windows netCDF lib is a bit old by now (I build it from source). It might be it.


Hi Joaquim,

I have tested your file on Windows 10 here, with the command:

    gdalinfo grav_29_img.nc -mm

which takes about 5 seconds to execute fully.  I am using MS4W 4.0.2 (GDAL 2.4.3 , NetCDF 4.7.3 )

I haven't tested using your wrappers though, so imagine that my feedback is not very useful.

PS. but thanks for sharing the larger grid file, which is useful for testing.

Wishing you a prosperous 2020.

-jeff



--
Jeff McKenna
MapServer Consulting and Training Services https://gatewaygeomatics.com/



On 2020-01-03 1:27 PM, Joaquim Manuel Freire Luís wrote:
> Hi Even,
> 
> New Year, new mysteries. I’m having quite strange slow times in 
> computing the min/max of netCDF files.
> 
> In GMT we can read files via GDAL by appending =gd to the file name. 
> So both of these do a similar job
> 
> grdinfo grav_29_img.nc=gd
> 
> and
> 
> gdalinfo grav_29_img.nc -mm
> 
> and it takes around 28 sec in a new laptop running Windows and master 
> GDAL. However in WSL, same laptop but GDAL 2.2.3, they take about 5:30 
> MINUTES to run. On a OSX it takes about 3:30 minutes (not me who run 
> this, and a GDAL 3.0.3 MacPorts)
> 
> On Windows for files of similar size it run faster when data is of 
> type float (the grid in this example is a short int).
> 
> Now, perhaps the weirdest thing is that if I run the GMT command via 
> our Julia wrapper it only takes ~8 sec, whilst the same command via 
> the Matlab wrapper took 1:18 min
> 
> The ~8 sec time is close to what I get with a pure GMT (i.e. not using 
> GDAL to read the nc file  (grdinfo grav_29_img.nc -M))
> 
>  From the GMT side all happens in the call
> 
>          GDALComputeRasterMinMax(hBand, false, adfMinMax);
> 
> And I guess that the same holds from the pure GDAL call.
> 
> If you want to test with the grid used in these testings, it’s here
> 
> ftp://ftp.soest.hawaii.edu
> <ftp://ftp.soest.hawaii.edu.pwessel>/pwessel/grav_29_img.nc
> <http://grav_29_img.nc>
> 
> Happy new year
> 
> Joaquim
> 
> 
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From even.rouault at spatialys.com  Fri Jan  3 11:52:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 Jan 2020 20:52:07 +0100
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>
Message-ID: <1871108.Grfc1uBbav@even-i700>

On vendredi 3 janvier 2020 14:02:18 CET Jeff McKenna wrote:
> Hi Joaquim,
> 
> I have tested your file on Windows 10 here, with the command:
> 
>     gdalinfo grav_29_img.nc -mm
> 
> which takes about 5 seconds to execute fully.  I am using MS4W 4.0.2
> (GDAL 2.4.3 , NetCDF 4.7.3 )

Jeff,

Do you build netCDF with a custom value of the CHUNK_CACHE_SIZE / chunk-cache-
size setting ?

With the default (4 MB), runtime on my machine is about 7 minutes. But if I 
use --with-chunk-cache-size=67108864 as in
https://trac.osgeo.org/gdal/ticket/5291#comment:26 , then it goes down to
9 sec.

So this is a quite old known issue with the netCDF driver with HDF5 chunking & 
compression. Due to the netCDF driver exposing rasters with a north origin, 
and netCDF Y origin being at south, there's a mismatch between GDAL blocks and 
netCDF chunks. So for the sake of simplicity, the netCDF driver exposes one 
single line as the GDAL block size. It could/should be improved to make a 
better use of netCDF chunks, so as not being too much dependent of the quite 
pessimistic default of the netCDF chunk_cache_size.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Fri Jan  3 12:03:47 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 3 Jan 2020 16:03:47 -0400
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <1871108.Grfc1uBbav@even-i700>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>
 <1871108.Grfc1uBbav@even-i700>
Message-ID: <340ac0fd-8995-8948-2b43-4fc90634dc46@gatewaygeomatics.com>

On 2020-01-03 3:52 PM, Even Rouault wrote:
> 
> Do you build netCDF with a custom value of the CHUNK_CACHE_SIZE / chunk-cache-
> size setting ?
> 
> With the default (4 MB), runtime on my machine is about 7 minutes. But if I
> use --with-chunk-cache-size=67108864 as in
> https://trac.osgeo.org/gdal/ticket/5291#comment:26 , then it goes down to
> 9 sec.
> 
> So this is a quite old known issue with the netCDF driver with HDF5 chunking &
> compression. Due to the netCDF driver exposing rasters with a north origin,
> and netCDF Y origin being at south, there's a mismatch between GDAL blocks and
> netCDF chunks. So for the sake of simplicity, the netCDF driver exposes one
> single line as the GDAL block size. It could/should be improved to make a
> better use of netCDF chunks, so as not being too much dependent of the quite
> pessimistic default of the netCDF chunk_cache_size.
> 

Hi Even,

No I don't set CHUNK_CACHE_SIZE during compile at all.  I do however set 
USE_HDF5=OFF

(I believe I set that because of that same chunking issue which we 
discussed here before)

-jeff





-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/

From jluis at ualg.pt  Fri Jan  3 12:24:31 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Fri, 3 Jan 2020 20:24:31 +0000
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <340ac0fd-8995-8948-2b43-4fc90634dc46@gatewaygeomatics.com>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <d6d75b0c-5ed3-5868-86a5-62fe0a3040c9@gatewaygeomatics.com>
 <1871108.Grfc1uBbav@even-i700>
 <340ac0fd-8995-8948-2b43-4fc90634dc46@gatewaygeomatics.com>
Message-ID: <DB8PR04MB6697C08A745504A6E98526D1A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>

But I do use

		-DCHUNK_CACHE_SIZE=67108864 ^
		-DDEFAULT_CHUNK_SIZE=67108864

And get ~6 sec with a GMT release build (before it was a debug build) but still ~27 sec with gdalinfo. All VS2019 builds

-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Jeff McKenna
Sent: Friday, January 3, 2020 8:04 PM
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids

On 2020-01-03 3:52 PM, Even Rouault wrote:
> 
> Do you build netCDF with a custom value of the CHUNK_CACHE_SIZE / 
> chunk-cache- size setting ?
> 
> With the default (4 MB), runtime on my machine is about 7 minutes. But 
> if I use --with-chunk-cache-size=67108864 as in
> https://trac.osgeo.org/gdal/ticket/5291#comment:26 , then it goes down 
> to
> 9 sec.
> 
> So this is a quite old known issue with the netCDF driver with HDF5 
> chunking & compression. Due to the netCDF driver exposing rasters with 
> a north origin, and netCDF Y origin being at south, there's a mismatch 
> between GDAL blocks and netCDF chunks. So for the sake of simplicity, 
> the netCDF driver exposes one single line as the GDAL block size. It 
> could/should be improved to make a better use of netCDF chunks, so as 
> not being too much dependent of the quite pessimistic default of the netCDF chunk_cache_size.
> 

Hi Even,

No I don't set CHUNK_CACHE_SIZE during compile at all.  I do however set USE_HDF5=OFF

(I believe I set that because of that same chunking issue which we discussed here before)

-jeff





--
Jeff McKenna
MapServer Consulting and Training Services https://gatewaygeomatics.com/ _______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From even.rouault at spatialys.com  Fri Jan  3 12:25:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 03 Jan 2020 21:25:16 +0100
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <340ac0fd-8995-8948-2b43-4fc90634dc46@gatewaygeomatics.com>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <1871108.Grfc1uBbav@even-i700>
 <340ac0fd-8995-8948-2b43-4fc90634dc46@gatewaygeomatics.com>
Message-ID: <2124801.iBMNbYYHc0@even-i700>

On vendredi 3 janvier 2020 16:03:47 CET Jeff McKenna wrote:
> On 2020-01-03 3:52 PM, Even Rouault wrote:
> > Do you build netCDF with a custom value of the CHUNK_CACHE_SIZE /
> > chunk-cache- size setting ?
> > 
> > With the default (4 MB), runtime on my machine is about 7 minutes. But if
> > I
> > use --with-chunk-cache-size=67108864 as in
> > https://trac.osgeo.org/gdal/ticket/5291#comment:26 , then it goes down to
> > 9 sec.
> > 
> > So this is a quite old known issue with the netCDF driver with HDF5
> > chunking & compression. Due to the netCDF driver exposing rasters with a
> > north origin, and netCDF Y origin being at south, there's a mismatch
> > between GDAL blocks and netCDF chunks. So for the sake of simplicity, the
> > netCDF driver exposes one single line as the GDAL block size. It
> > could/should be improved to make a better use of netCDF chunks, so as not
> > being too much dependent of the quite pessimistic default of the netCDF
> > chunk_cache_size.
> 
> Hi Even,
> 
> No I don't set CHUNK_CACHE_SIZE during compile at all.  I do however set
> USE_HDF5=OFF

Ah, that explains it all then. The file is thus opened by the HDF5 driver, not 
the netCDF one. And I also do get the 5 sec when forcing the HDF5 driver. But 
you loose the whole netCDF specific logic, and in particular georeferencing.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From rlelamer at hotmail.fr  Sat Jan  4 03:49:42 2020
From: rlelamer at hotmail.fr (LE LAMER Romain)
Date: Sat, 4 Jan 2020 11:49:42 +0000
Subject: [gdal-dev] ogr2ogr -f KML parameters
Message-ID: <VI1P193MB0509006D45FC64FC6C0DBC33B6220@VI1P193MB0509.EURP193.PROD.OUTLOOK.COM>

Hi,
During a kml export, from a shp, I have many tags that do not interest me and that I would like to delete.
I cannot find the information if it is possible via a parameter in the ogr2org program.

ogr2ogr -f KML output.kml input.shp

Ex:
<?xml version="1.0" encoding="utf-8" ?>
<kml xmlns="http://www.opengis.net/kml/2.2">
<Document id="root_doc">
<Schema name="gbl_0_0" id="gbl_0_0">
<SimpleField name="DN" type="int"></SimpleField>
</Schema>
<Folder><name>gbl_0_0</name>
  <Placemark>
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style>
<ExtendedData><SchemaData schemaUrl="#gbl_0_0">
<SimpleData name="DN">0</SimpleData>
</SchemaData></ExtendedData>
      <LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString>
  </Placemark>
  <Placemark>
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style>
<ExtendedData><SchemaData schemaUrl="#gbl_0_0">
<SimpleData name="DN">0</SimpleData>
</SchemaData></ExtendedData>
      <LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString>
  </Placemark>
  <Placemark>
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style>
<ExtendedData><SchemaData schemaUrl="#gbl_0_0">
<SimpleData name="DN">0</SimpleData>
</SchemaData></ExtendedData>
      <LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString>
  </Placemark>
</Folder>
</Document></kml>

1 - I don't know why I have the triplicate entries ... Surely my input.shp from QGIS, I must be doing something wrong, but I can correct this via this (which was given to me):

gawk 'BEGIN{PROCINFO["sorted_in"]="@val_num_asc"}/LineString/{A[$0]=NR;next}{A[NR ":" $0]=NR}END{for (i in A) { sub(/^[0-9]+:/,"",i); print i }}' input.kml | gsed '/<Placemark>/{:bc;N;s/\/Placemark>/&/;tcc;bbc;:cc;/LineString/!d;}’ >input_simp.kml

which gives me :
<?xml version="1.0" encoding="utf-8" ?>
<kml xmlns="http://www.opengis.net/kml/2.2">
<Document id="root_doc">
<Schema name="gbl_0_0" id="gbl_0_0">
<SimpleField name="DN" type="int"></SimpleField>
</Schema>
<Folder><name>gbl_0_0</name>
  <Placemark>
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style>
<ExtendedData><SchemaData schemaUrl="#gbl_0_0">
<SimpleData name="DN">0</SimpleData>
</SchemaData></ExtendedData>
      <LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString>
  </Placemark>
</Folder>
</Document></kml>

2 - And we arrive at what is the object of my question, which is to know if via a parameter of ogr2ogr it is possible that it does not write these lines
<Schema name="gbl_0_0" id="gbl_0_0">
<SimpleField name="DN" type="int"></SimpleField>
</Schema>

and

<ExtendedData><SchemaData schemaUrl="#gbl_0_0">
<SimpleData name="DN">0</SimpleData>
</SchemaData></ExtendedData>

which would give me a kml like this
<?xml version="1.0" encoding="utf-8" ?>
<kml xmlns="http://www.opengis.net/kml/2.2">
<Document id="root_doc">
<Folder><name>gbl_0_0</name>
  <Placemark>
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style>
      <LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString>
  </Placemark>
</Folder>
</Document></kml>

I know it is possible to do it via sed but if I can do without this step it would be a plus

Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/0a8492c2/attachment-0001.html>

From rlelamer at hotmail.fr  Sat Jan  4 04:17:38 2020
From: rlelamer at hotmail.fr (LE LAMER Romain)
Date: Sat, 4 Jan 2020 12:17:38 +0000
Subject: [gdal-dev] How to convert png color to png/tiff black and white
In-Reply-To: <b5f350bb31dff80d124a56f2442b32be@blixtmail.se>
References: <VI1P193MB0509DBE334047D264B28721DB6240@VI1P193MB0509.EURP193.PROD.OUTLOOK.COM>
 <b5f350bb31dff80d124a56f2442b32be@blixtmail.se>
Message-ID: <VI1P193MB050931A1A8DF3491F347F4A8B6220@VI1P193MB0509.EURP193.PROD.OUTLOOK.COM>

Hi,

Sorry to answer that now I have not had the notification ... (it was in my spam)

I used software to binarize my png which allowed me to carry out my project until the end.

But I like the idea of being able to process this via a script.
I have a script_list.sh which contains a script_file.sh for each tile which allows me to automate the tasks for the 512 tiles.
I will test your solution and incorporate it as soon as I have time (I want to finalize the last things I have left before) and I will keep you posted.

I'm on mac but I installed gawk and gsed (awk and sed are different on macOS)

Thanks again for the code on github ;)

Le 3 janv. 2020 à 01:42, lars.schylberg at blixtmail.se<mailto:lars.schylberg at blixtmail.se> a écrit :

Hi,

There is one way to solve this with gdal_calc. I have had some time off during the holidays,
but kept thinking about your question and thought it was a fun problem.
Actually I have solved some other problems with tif palette images and gdal_calc lately. So I put together one solution that
I think will work in your case. I am assuming that You are using linux and have some knowledge in bash scripting.

First we have to create a reclass rule for gdal_calc, We do that with with running gdalinfo.
Strip the info to only keep the color table with sed.
Then dynamically create the rule with awk, based on your rgb values (turn palette values into either 0 or 1).
Finally strip the last "+" from the rule (the last sed command)

Then run gdal_calc with your relclass rule

gdal_calc produces a grey scale image, but:

We then turn the image into a virtual raster file (VRT)
We create a new color table and insert it into the vrt file with sed.
Change the vrt file to be a palette image again with sed.
Finally we can turn the vrt image into a tif image again.

If this works you could loop over all your images and process all in the same way.
Just do a bash function with the steps and loop over your input files.

The whole idea of the process is outlined in a gist I just uploaded.
I just tested the first part with the rule myself, but the other stuff I used before
so it should work.

https://gist.github.com/LarsSchy/c1be96fa03f7dc11df4247be033e2705

I hope this helps You.

Have fun / Lars Schylberg

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/7f01d394/attachment.html>

From lars.schylberg at blixtmail.se  Sat Jan  4 04:52:58 2020
From: lars.schylberg at blixtmail.se (lars.schylberg at blixtmail.se)
Date: Sat, 04 Jan 2020 12:52:58 +0000
Subject: [gdal-dev] ogr2ogr -f KML parameters
In-Reply-To: <VI1P193MB0509006D45FC64FC6C0DBC33B6220@VI1P193MB0509.EURP193.PROD.OUTLOOK.COM>
References: <VI1P193MB0509006D45FC64FC6C0DBC33B6220@VI1P193MB0509.EURP193.PROD.OUTLOOK.COM>
Message-ID: <7e83d37b87114e5b86d5bb11f060c201@blixtmail.se>

I would use ogr sql syntax to select whatever you would like to keep. Experiment first with ogrinfo. Then do it with ogr2ogr. /Lars S.
4 januari 2020 kl. 12:50, "LE LAMER Romain" <rlelamer at hotmail.fr (mailto:rlelamer at hotmail.fr?to=%22LE%20LAMER%20Romain%22%20<rlelamer at hotmail.fr>)> skrev:
Hi,
During a kml export, from a shp, I have many tags that do not interest me and that I would like to delete. 
I cannot find the information if it is possible via a parameter in the ogr2org program.  
ogr2ogr -f KML output.kml input.shp 
Ex: 
<?xml version="1.0" encoding="utf-8" ?> 
<kml xmlns="http://www.opengis.net/kml/2.2 (http://www.opengis.net/kml/2.2)"> 
<Document id="root_doc"> 
<Schema name="gbl_0_0" id="gbl_0_0"> 
<SimpleField name="DN" type="int"></SimpleField> 
</Schema> 
<Folder><name>gbl_0_0</name> 
<Placemark> 
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style> 
<ExtendedData><SchemaData schemaUrl="#gbl_0_0"> 
<SimpleData name="DN">0</SimpleData> 
</SchemaData></ExtendedData> 
<LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString> 
</Placemark> 
<Placemark> 
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style> 
<ExtendedData><SchemaData schemaUrl="#gbl_0_0"> 
<SimpleData name="DN">0</SimpleData> 
</SchemaData></ExtendedData> 
<LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString> 
</Placemark> 
<Placemark> 
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style> 
<ExtendedData><SchemaData schemaUrl="#gbl_0_0"> 
<SimpleData name="DN">0</SimpleData> 
</SchemaData></ExtendedData> 
<LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString> 
</Placemark> 
</Folder> 
</Document></kml>  
1 - I don't know why I have the triplicate entries ... Surely my input.shp from QGIS, I must be doing something wrong, but I can correct this via this (which was given to me): 
gawk 'BEGIN{PROCINFO["sorted_in"]="@val_num_asc"}/LineString/{A[$0]=NR;next}{A[NR ":" $0]=NR}END{for (i in A) { sub(/^[0-9]+:/,"",i); print i }}' input.kml | gsed '/<Placemark>/{:bc;N;s//Placemark>/&/;tcc;bbc;:cc;/LineString/!d;}’ >input_simp.kml 
which gives me : 
<?xml version="1.0" encoding="utf-8" ?> 
<kml xmlns="http://www.opengis.net/kml/2.2 (http://www.opengis.net/kml/2.2)"> 
<Document id="root_doc"> 
<Schema name="gbl_0_0" id="gbl_0_0"> 
<SimpleField name="DN" type="int"></SimpleField> 
</Schema> 
<Folder><name>gbl_0_0</name> 
<Placemark> 
<Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style> 
<ExtendedData><SchemaData schemaUrl="#gbl_0_0"> 
<SimpleData name="DN">0</SimpleData> 
</SchemaData></ExtendedData> 
<LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString> 
</Placemark> 
</Folder> 
</Document></kml>  
 2 - And we arrive at what is the object of my question, which is to know if via a parameter of ogr2ogr it is possible that it does not write these lines 
<Schema name="gbl_0_0" id="gbl_0_0"> 
<SimpleField name="DN" type="int"></SimpleField> 
</Schema>  
and 
<ExtendedData><SchemaData schemaUrl="#gbl_0_0"> 
<SimpleData name="DN">0</SimpleData> 
</SchemaData></ExtendedData>  
which would give me a kml like this 
 <?xml version="1.0" encoding="utf-8" ?> <kml xmlns="http://www.opengis.net/kml/2.2 (http://www.opengis.net/kml/2.2)"> <Document id="root_doc"> <Folder><name>gbl_0_0</name> <Placemark> <Style><LineStyle><color>ff0000ff</color></LineStyle><PolyStyle><fill>0</fill></PolyStyle></Style> <LineString><coordinates>-180,90 -168.75,90.0 -168.75,78.75 -180.0,78.75 -180,90</coordinates></LineString> </Placemark> </Folder> </Document></kml>  
I know it is possible to do it via sed but if I can do without this step it would be a plus  
Thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/8957e07a/attachment.html>

From pedrongvenancio at gmail.com  Sat Jan  4 07:06:29 2020
From: pedrongvenancio at gmail.com (=?UTF-8?Q?Pedro_Ven=C3=A2ncio?=)
Date: Sat, 4 Jan 2020 15:06:29 +0000
Subject: [gdal-dev] Problem with newer GDAL versions reading remote atom
	service
Message-ID: <CAMCJChsRUXFgGu1Kbde-tGNLATrBrSLrxqWEfL37fDtgLdkwQA@mail.gmail.com>

Hi,

There is something wrong when reading remote Atom services with newer GDAL
versions.

For instance, this Atom service:
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml

*Windows - OSGeo4W - GDAL 3.0.2:*

C:\>gdalinfo --version
GDAL 3.0.2, released 2019/10/28

C:\>ogrinfo -ro
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml
georss
ERROR 1: JSON parsing error: unexpected character (at offset 0)
ERROR 1: JSON parsing error: unexpected character (at offset 0)
ERROR 1: JSON parsing error: unexpected character (at offset 0)
ERROR 1: JSON parsing error: unexpected character (at offset 1)
ERROR 1: JSON parsing error: continue (at offset 2)
(...)
ERROR 1: JSON parsing error: unexpected character (at offset 2)
ERROR 1: JSON parsing error: unexpected character (at offset 2)
ERROR 1: JSON parsing error: unexpected character (at offset 2)
ERROR 1: JSON parsing error: unexpected character (at offset 1)
ERROR 1: JSON parsing error: unexpected character (at offset 0)
INFO: Open of `
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml'
      using driver `GeoJSONSeq' successful.
FAILURE: Couldn't fetch requested layer georss!



*Linux - GDAL 2.4.2:*

pedro at HP-OMEN:~$ gdalinfo --version
GDAL 2.4.2, released 2019/06/28

pedro at HP-OMEN:~$ ogrinfo -ro
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml
georss
ERROR 1: JSON parsing error: unexpected character (at offset 0)
ERROR 1: JSON parsing error: unexpected character (at offset 0)
ERROR 1: JSON parsing error: unexpected character (at offset 0)
ERROR 1: JSON parsing error: unexpected character (at offset 1)
ERROR 1: JSON parsing error: continue (at offset 2)
(...)
ERROR 1: JSON parsing error: unexpected character (at offset 2)
ERROR 1: JSON parsing error: unexpected character (at offset 1)
ERROR 1: JSON parsing error: unexpected character (at offset 0)
INFO: Open of `
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml'
      using driver `GeoJSONSeq' successful.
FAILURE: Couldn't fetch requested layer georss!


It seems that GDAL is trying to use a wrong driver, GeoJSONSeq instead of
GeoRSS.

This does not happen in GDAL 2.2.2.

*Linux - GDAL 2.2.2*

pedro at omen ~ $ gdalinfo --version
GDAL 2.2.2, released 2017/09/15

pedro at omen ~ $ ogrinfo -ro
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml
georss
INFO: Open of `
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml'
      using driver `GeoRSS' successful.

Layer name: georss
Geometry: Unknown (any)
Feature Count: 23
Layer SRS WKT:
(unknown)
title: String (0.0)
link_rel: String (0.0)
link_href: String (0.0)
link_type: String (0.0)
link_hreflang: String (0.0)
link_title: String (0.0)
id: String (0.0)
updated: DateTime (0.0)
category_term: String (0.0)
category_label: String (0.0)
OGRFeature(georss):0
  title (String) = COS2018v1.0 - PT11A_Area_Metropolitana_Porto
  link_rel (String) = alternate
  link_href (String) =
http://mapas.dgterritorio.pt/DGT-ATOM-download/COS_Final/COS2018v1.0-NUT3/COS2018-V1-PT11A_Area_Metropolitana_Porto.zip
  link_type (String) = application/x-shapefile
  link_hreflang (String) = pt
  link_title (String) = COS2018v1.0 - PT11A_Area_Metropolitana_Porto
  id (String) = urn:uuid:1e44b3bb-299a-4f73-a736-e4868d74df90
  updated (DateTime) = 2019/12/27 11:45:03+00
  category_term (String) = http://www.opengis.net/def/crs/EPSG/0/3763
  category_label (String) = ETRS89/PT-TM06

OGRFeature(georss):1
  title (String) = COS2018v1.0 - PT11B_Alto_Tamega
  link_rel (String) = alternate
  link_href (String) =
http://mapas.dgterritorio.pt/DGT-ATOM-download/COS_Final/COS2018v1.0-NUT3/COS2018-V1-PT11B_Alto_Tamega.zip
  link_type (String) = application/x-shapefile
  link_hreflang (String) = pt
  link_title (String) = COS2018v1.0 - PT11B_Alto_Tamega
  id (String) = urn:uuid:4a2a4849-0585-4167-8285-c434c827b03f
  updated (DateTime) = 2019/12/27 11:45:03+00
  category_term (String) = http://www.opengis.net/def/crs/EPSG/0/3763
  category_label (String) = ETRS89/PT-TM06

OGRFeature(georss):2
  title (String) = COS2018v1.0 - PT11C_Tamega_e_Sousa
  link_rel (String) = alternate
  link_href (String) =
http://mapas.dgterritorio.pt/DGT-ATOM-download/COS_Final/COS2018v1.0-NUT3/COS2018-V1-PT11C_Tamega_e_Sousa.zip
  link_type (String) = application/x-shapefile
  link_hreflang (String) = pt


However, if the XML file is already downloaded and read locally from GDAL,
it works as expected in newer versions:

pedro at HP-OMEN:~$ gdalinfo --version
GDAL 2.4.2, released 2019/06/28

pedro at HP-OMEN:~$ wget
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml

--2020-01-04 14:49:24--
http://mapas.dgterritorio.pt/inspire/atom/CDG_COS2018v1_Continente_Atom.xml
Resolving mapas.dgterritorio.pt (mapas.dgterritorio.pt)... 193.137.94.66
Connecting to mapas.dgterritorio.pt
(mapas.dgterritorio.pt)|193.137.94.66|:80...
connected.
HTTP request sent, awaiting response... 200 OK
Length: 17211 (17K) [application/xml]
Saving to: ‘CDG_COS2018v1_Continente_Atom.xml’
CDG_COS2018v1_Continente_Atom
100%[=================================================>]  16.81K  --.-KB/s
   in 0.02s
2020-01-04 14:49:24 (752 KB/s) - ‘CDG_COS2018v1_Continente_Atom.xml’ saved
[17211/17211]


pedro at HP-OMEN:~$ ogrinfo -ro CDG_COS2018v1_Continente_Atom.xml georss
INFO: Open of `CDG_COS2018v1_Continente_Atom.xml'
      using driver `GeoRSS' successful.

Layer name: georss
Geometry: Unknown (any)
Feature Count: 23
Layer SRS WKT:
(unknown)
title: String (0.0)
link_rel: String (0.0)
link_href: String (0.0)
link_type: String (0.0)
link_hreflang: String (0.0)
link_title: String (0.0)
id: String (0.0)
updated: DateTime (0.0)
category_term: String (0.0)
category_label: String (0.0)
OGRFeature(georss):0
  title (String) = COS2018v1.0 - PT11A_Area_Metropolitana_Porto
  link_rel (String) = alternate
  link_href (String) =
http://mapas.dgterritorio.pt/DGT-ATOM-download/COS_Final/COS2018v1.0-NUT3/COS2018-V1-PT11A_Area_Metropolitana_Porto.zip
  link_type (String) = application/x-shapefile
  link_hreflang (String) = pt
  link_title (String) = COS2018v1.0 - PT11A_Area_Metropolitana_Porto
  id (String) = urn:uuid:1e44b3bb-299a-4f73-a736-e4868d74df90
  updated (DateTime) = 2019/12/27 11:45:03+00
  category_term (String) = http://www.opengis.net/def/crs/EPSG/0/3763
  category_label (String) = ETRS89/PT-TM06

OGRFeature(georss):1
  title (String) = COS2018v1.0 - PT11B_Alto_Tamega
  link_rel (String) = alternate
  link_href (String) =
http://mapas.dgterritorio.pt/DGT-ATOM-download/COS_Final/COS2018v1.0-NUT3/COS2018-V1-PT11B_Alto_Tamega.zip
  link_type (String) = application/x-shapefile
  link_hreflang (String) = pt
  link_title (String) = COS2018v1.0 - PT11B_Alto_Tamega
  id (String) = urn:uuid:4a2a4849-0585-4167-8285-c434c827b03f
  updated (DateTime) = 2019/12/27 11:45:03+00
  category_term (String) = http://www.opengis.net/def/crs/EPSG/0/3763
  category_label (String) = ETRS89/PT-TM06

OGRFeature(georss):2
  title (String) = COS2018v1.0 - PT11C_Tamega_e_Sousa
  link_rel (String) = alternate
(...)


What can be causing this behavior?

Thank you very much!

Best regards,
Pedro Venâncio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/0c221aa2/attachment-0001.html>

From even.rouault at spatialys.com  Sat Jan  4 10:07:14 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 04 Jan 2020 19:07:14 +0100
Subject: [gdal-dev] Problem with newer GDAL versions reading remote atom
	service
In-Reply-To: <CAMCJChsRUXFgGu1Kbde-tGNLATrBrSLrxqWEfL37fDtgLdkwQA@mail.gmail.com>
References: <CAMCJChsRUXFgGu1Kbde-tGNLATrBrSLrxqWEfL37fDtgLdkwQA@mail.gmail.com>
Message-ID: <4619531.Hau12fgKD4@even-i700>

Pedro,

> There is something wrong when reading remote Atom services with newer GDAL
> versions.

I've commited fixes in master, 3.0 and 2.4 for that issue.

You can workaround it by prefixing the http:// URL with /vsicurl/

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bojan.bizjak at mastersoft.net  Sat Jan  4 10:25:07 2020
From: bojan.bizjak at mastersoft.net (Bojan Bizjak)
Date: Sat, 4 Jan 2020 19:25:07 +0100
Subject: [gdal-dev] ogr2ogr - Export DXF file with attribute data
Message-ID: <c6889878a937b03556d7a4d9680e7515@mail.gmail.com>

Hi All,



Is there a possibility to export DXF postgresql/postgis table using SQL with
attribute data.

If so, where can I find an example?



Best regards,



Bojan Bizjak
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/df972de0/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 4898 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/df972de0/attachment-0002.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 14704 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/df972de0/attachment-0003.png>

From ott.cavalcanti at gmail.com  Sat Jan  4 13:20:00 2020
From: ott.cavalcanti at gmail.com (Ottavio Cavalcanti)
Date: Sat, 4 Jan 2020 22:20:00 +0100
Subject: [gdal-dev] Mailing list remove
Message-ID: <CAANdT90_k7udb9buEov+gBtrbbbPc=+uDYKgrsFJ3PKws0oFfQ@mail.gmail.com>

Hello,

Can you remove this email address from your list?

Thank you

Have a great weekend

Ottavio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200104/aaad1ee6/attachment.html>

From pedrongvenancio at gmail.com  Sat Jan  4 16:08:35 2020
From: pedrongvenancio at gmail.com (=?UTF-8?Q?Pedro_Ven=C3=A2ncio?=)
Date: Sun, 5 Jan 2020 00:08:35 +0000
Subject: [gdal-dev] Problem with newer GDAL versions reading remote atom
	service
In-Reply-To: <4619531.Hau12fgKD4@even-i700>
References: <CAMCJChsRUXFgGu1Kbde-tGNLATrBrSLrxqWEfL37fDtgLdkwQA@mail.gmail.com>
 <4619531.Hau12fgKD4@even-i700>
Message-ID: <CAMCJChvWSE0-cQZgG3wnSqEE2BOoNjyVyZ1Qsr8G=7SfVkHCVQ@mail.gmail.com>

Wow, faster was impossible!

Thank you very much Even!

Best regards,
Pedro


A sábado, 4/01/2020, 18:07, Even Rouault <even.rouault at spatialys.com>
escreveu:

> Pedro,
>
> > There is something wrong when reading remote Atom services with newer
> GDAL
> > versions.
>
> I've commited fixes in master, 3.0 and 2.4 for that issue.
>
> You can workaround it by prefixing the http:// URL with /vsicurl/
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200105/3778c75b/attachment.html>

From even.rouault at spatialys.com  Sun Jan  5 12:34:17 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 05 Jan 2020 21:34:17 +0100
Subject: [gdal-dev] GDAL 3.0.3 RC soon
Message-ID: <3144784.3UpoD2ZbvF@even-i700>

Hi,

I'm planning to issue a release candidate for GDAL 3.0.3 this wednesday, so 
take that warning as your last chance to have any needed bugfixes included in 
it.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From idan at miara.com  Mon Jan  6 08:25:28 2020
From: idan at miara.com (Idan Miara)
Date: Mon, 6 Jan 2020 18:25:28 +0200
Subject: [gdal-dev] gdal in a web service?
Message-ID: <CAEDrt3-LK9GmoytazN_Tk8F6CCLhTu8rept5qAeQO+EOU2dn1g@mail.gmail.com>

Hi,

Do you know any open source web service that uses GDAL?
I need a web service that, for instance, loads a raster to memory, does
some gdal processing (i.e. cropping, warping, dem-coloring etc) and returns
the raster to the client to be displayed on cesium, mapbox, etc.
Before I start development I wanted to know if someone has already done
something similar.

Kind regards,
Idan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200106/f972af0b/attachment.html>

From bradh at frogmouth.net  Mon Jan  6 22:27:28 2020
From: bradh at frogmouth.net (Brad Hards)
Date: Tue, 7 Jan 2020 17:27:28 +1100
Subject: [gdal-dev] gdal in a web service?
In-Reply-To: <CAEDrt3-LK9GmoytazN_Tk8F6CCLhTu8rept5qAeQO+EOU2dn1g@mail.gmail.com>
References: <CAEDrt3-LK9GmoytazN_Tk8F6CCLhTu8rept5qAeQO+EOU2dn1g@mail.gmail.com>
Message-ID: <010e01d5c523$88d008c0$9a701a40$@frogmouth.net>

Lots of WPS implementations can use GDAL – it depends on how much you’re expecting though.

 

Perhaps pyWPS (https://pywps.readthedocs.io/en/master/wps.html) or GeoServer are worth a look, depending on what languages you are familiar with.

 

Brad

 

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Idan Miara
Sent: Tuesday, 7 January 2020 3:25 AM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] gdal in a web service?

 

Hi,

 

Do you know any open source web service that uses GDAL?

I need a web service that, for instance, loads a raster to memory, does some gdal processing (i.e. cropping, warping, dem-coloring etc) and returns the raster to the client to be displayed on cesium, mapbox, etc.

Before I start development I wanted to know if someone has already done something similar.

 

Kind regards,

Idan

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200107/8187c37a/attachment.html>

From piklas at gmail.com  Mon Jan  6 23:40:10 2020
From: piklas at gmail.com (Nicolas B.)
Date: Tue, 7 Jan 2020 08:40:10 +0100
Subject: [gdal-dev] gdal in a web service?
In-Reply-To: <010e01d5c523$88d008c0$9a701a40$@frogmouth.net>
References: <CAEDrt3-LK9GmoytazN_Tk8F6CCLhTu8rept5qAeQO+EOU2dn1g@mail.gmail.com>
 <010e01d5c523$88d008c0$9a701a40$@frogmouth.net>
Message-ID: <CAOer1xByCsDdk-iAjQdb-2KgQzze7G1PCE++wZKTfRfKvL_SjA@mail.gmail.com>

ZOO-Project also implements numerous GDAL tools as scalable WPS, please see:
http://zoo-project.org/trac/browser/trunk/zoo-project/zoo-services/gdal

Nick

Le mar. 7 janv. 2020 à 08:13, Brad Hards <bradh at frogmouth.net> a écrit :

> Lots of WPS implementations can use GDAL – it depends on how much you’re
> expecting though.
>
>
>
> Perhaps pyWPS (https://pywps.readthedocs.io/en/master/wps.html) or
> GeoServer are worth a look, depending on what languages you are familiar
> with.
>
>
>
> Brad
>
>
>
> *From:* gdal-dev <gdal-dev-bounces at lists.osgeo.org> *On Behalf Of *Idan
> Miara
> *Sent:* Tuesday, 7 January 2020 3:25 AM
> *To:* gdal-dev at lists.osgeo.org
> *Subject:* [gdal-dev] gdal in a web service?
>
>
>
> Hi,
>
>
>
> Do you know any open source web service that uses GDAL?
>
> I need a web service that, for instance, loads a raster to memory, does
> some gdal processing (i.e. cropping, warping, dem-coloring etc) and returns
> the raster to the client to be displayed on cesium, mapbox, etc.
>
> Before I start development I wanted to know if someone has already done
> something similar.
>
>
>
> Kind regards,
>
> Idan
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200107/c43c6faa/attachment.html>

From ravitejakrishna.w at zohocorp.com  Mon Jan  6 23:43:10 2020
From: ravitejakrishna.w at zohocorp.com (Wuyyuru Ravi Teja Krishna)
Date: Tue, 07 Jan 2020 13:13:10 +0530
Subject: [gdal-dev] invalid coordinates error availability
Message-ID: <16f7ef51c02.c8a33a6118893.8123293921376208140@zohocorp.com>

Hello, 

I am trying to convert a geojson file to csv file. but that coordinates were tampered i.e 32.76543 is changed as 2333432.76543 which is not a valid coordinate for a single map case (it was valid if assuming as infinite maps in series). Is there a way that ogr2ogr conversion util will throw an error for such cases that data is invalid. It would be of great help if such error throwing is possible.

Thanks in advance
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200107/51b68f9a/attachment.html>

From neteler at osgeo.org  Tue Jan  7 01:51:35 2020
From: neteler at osgeo.org (Markus Neteler)
Date: Tue, 7 Jan 2020 10:51:35 +0100
Subject: [gdal-dev] gdal in a web service?
In-Reply-To: <CAEDrt3-LK9GmoytazN_Tk8F6CCLhTu8rept5qAeQO+EOU2dn1g@mail.gmail.com>
References: <CAEDrt3-LK9GmoytazN_Tk8F6CCLhTu8rept5qAeQO+EOU2dn1g@mail.gmail.com>
Message-ID: <CALFmHhtSYykoUH538Bb9arUOjukaOVjktgAdnOxKm8sigS9SVg@mail.gmail.com>

Hi,

actinia, an OSGeo community project, offers REST support (mainly GRASS
GIS based + ESA SNAP) and could do GDAL-only related jobs as well:
https://github.com/mundialis/actinia_core

Markus

On Mon, Jan 6, 2020 at 5:26 PM Idan Miara <idan at miara.com> wrote:
>
> Hi,
>
> Do you know any open source web service that uses GDAL?
> I need a web service that, for instance, loads a raster to memory, does some gdal processing (i.e. cropping, warping, dem-coloring etc) and returns the raster to the client to be displayed on cesium, mapbox, etc.
> Before I start development I wanted to know if someone has already done something similar.
>
> Kind regards,
> Idan
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Markus Neteler, PhD
https://www.mundialis.de - free data with free software
https://grass.osgeo.org
https://courses.neteler.org/blog

From even.rouault at spatialys.com  Tue Jan  7 11:08:45 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jan 2020 20:08:45 +0100
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
Message-ID: <2342869.xbTq2brUCa@even-i700>

On vendredi 3 janvier 2020 17:27:19 CET Joaquim Manuel Freire Luís wrote:
> Hi Even,
> 
> New Year, new mysteries. I'm having quite strange slow times in computing
> the min/max of netCDF files.

https://github.com/OSGeo/gdal/pull/2155 will fix such performance issues 
(independently of whether libnetcdf has been built with particular chunk cache 
settings)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kgj2 at cornell.edu  Tue Jan  7 13:13:40 2020
From: kgj2 at cornell.edu (Keith Jenkins)
Date: Tue, 7 Jan 2020 16:13:40 -0500
Subject: [gdal-dev] skipping date type detection of GeoJSON properties
Message-ID: <CAK6C=sGTQi-tvZ8K-7_trqcacca1wOABND-2SAY_juBHVoS-vw@mail.gmail.com>

Hi,

Is there anyway to skip OGR's automatic detection of date types?  When
using ogr2ogr, I'd like to avoid the inadvertent modification of
certain date-like strings.  For example, if I have this GeoJSON...

{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {
        "identifier": "3000-02-31",
        "name":"a"
      },
      "geometry": { "type": "Point", "coordinates": [ 1, 1 ] }
    },
    {
      "type": "Feature",
      "properties": {
        "identifier": "2000-01-01",
        "name":"b"
      },
      "geometry": { "type": "Point", "coordinates": [ 2, 1 ] }
    }
  ]
}

... ogr2ogr converts the identifiers to "3000\/02\/31" and "2000\/01\/01".

Is there any way to preserve the original formatting of these strings?

Many thanks,
Keith

From nebyuesayas at gmail.com  Tue Jan  7 13:25:01 2020
From: nebyuesayas at gmail.com (esayas lemma)
Date: Wed, 08 Jan 2020 00:25:01 +0300
Subject: [gdal-dev] gdal-dev Digest, Vol 188, Issue 8
References: <mailman.9.1578427201.24222.gdal-dev@lists.osgeo.org>
Message-ID: <-ha0mlf-1dasm4-owyboz-jze2n9qdhhih-efm7frjgml65-qr9skokry1rf5czs3afynjk6vonwzu-w2btj93p4jy2dwdw1wtcurueh9pw-kmcmo5-aynwpr4l7m1-pe32yzwfn70kkh7xg43hqf65.1578432301846@email.android.com>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200108/cb286008/attachment.html>

From even.rouault at spatialys.com  Tue Jan  7 13:35:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jan 2020 22:35:21 +0100
Subject: [gdal-dev] skipping date type detection of GeoJSON properties
In-Reply-To: <CAK6C=sGTQi-tvZ8K-7_trqcacca1wOABND-2SAY_juBHVoS-vw@mail.gmail.com>
References: <CAK6C=sGTQi-tvZ8K-7_trqcacca1wOABND-2SAY_juBHVoS-vw@mail.gmail.com>
Message-ID: <1619813.MZc8OxPkJI@even-i700>

> ... ogr2ogr converts the identifiers to "3000\/02\/31" and "2000\/01\/01".
> 
> Is there any way to preserve the original formatting of these strings?

I've just added a DATE_AS_STRING=YEs open option for such situations:
https://github.com/OSGeo/gdal/commit/3a7914cee018d5b65dc1639368edbd8faac2543d

Backported for 3.0.3

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From benjamin.deschamps at canada.ca  Tue Jan  7 13:41:35 2020
From: benjamin.deschamps at canada.ca (Deschamps, Benjamin (EC))
Date: Tue, 7 Jan 2020 21:41:35 +0000
Subject: [gdal-dev] Possible bug in gdal.TransformPoint() gdal 3.0.1
Message-ID: <4a898864fe8447138a628a0930cd455b@PELEPCDEXC020.birch.int.bell.ca>

Hi gdal-dev list,

Not sure if this is a bug so posting here first...

I am having to reverse X and Y coordinates in a coordinate transformations (in at least 3 different dst_crs) otherwise I am getting -inf values. Python bindings with GDAL 3.0.1, Python 3.7.2 64-bit on Windows 10.

For a point near the dateline in the Arctic at (175W, 80N):

from osgeo import osr
in_crs = osr.SpatialReference()
in_crs.ImportFromEPSG(4326)
out_crs = osr.SpatialReference()
out_crs.ImportFromEPSG(3347)
transformation = osr.CoordinateTransformation(in_crs, out_crs)
print(transformation.TransformPoint(-175, 80, 0)) # lon, lat
print(transformation.TransformPoint(80, -175, 0))  # lat, lon

Gives :

(inf, inf, inf)
(4983944.437216174, 5754720.297247784, 0.0) # correct

https://epsg.io/transform#s_srs=4326&t_srs=3347&x=-175.0000000&y=80.0000000

Regards,

Benjamin Deschamps
Environment and Climate Change Canada / Government of Canada
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200107/2e217bf2/attachment.html>

From even.rouault at spatialys.com  Tue Jan  7 13:56:57 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jan 2020 22:56:57 +0100
Subject: [gdal-dev] Possible bug in gdal.TransformPoint() gdal 3.0.1
In-Reply-To: <4a898864fe8447138a628a0930cd455b@PELEPCDEXC020.birch.int.bell.ca>
References: <4a898864fe8447138a628a0930cd455b@PELEPCDEXC020.birch.int.bell.ca>
Message-ID: <2636529.S47qh8dTlr@even-i700>

Benjamin,

> Not sure if this is a bug so posting here first...

This is an intented change of behaviour of GDAL 3. See
https://github.com/OSGeo/gdal/blob/release/3.0/gdal/MIGRATION_GUIDE.TXT#L10

> from osgeo import osr
> in_crs = osr.SpatialReference()
> in_crs.ImportFromEPSG(4326)

If you want to keep long lat ordering, add

in_crs.SetAxisMappingStrategy(ogr.OAMS_TRADITIONAL_GIS_ORDER)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Jan  8 05:07:36 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 Jan 2020 14:07:36 +0100
Subject: [gdal-dev] Motions: approve GDAL 3.0.3 RC1 and 2.4.4 RC1
Message-ID: <6865138.vdBbelk7q9@even-i700>

Hi,

Both announcement of availability of release candidates and motions to adopt 
them.

MOT1: Adopt GDAL 3.0.3 RC1 as final 3.0.3 release

+1 Even

MOT2: Adopt GDAL 2.4.4 RC1 as final 2.4.4 release

+1 Even

~~~~~

3.0.3 RC1:

Peek up an archive among the following ones (by ascending size):
  http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.xz
  http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.gz
  http://download.osgeo.org/gdal/3.0.3/gdal303rc1.zip

A snapshot of the gdalautotest suite is also available :

  http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.tar.gz
  http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.zip

GDAL-GRASS plugin (unmodified):

  http://download.osgeo.org/gdal/3.0.3/gdal-grass-3.0.3.tar.gz

The NEWS file is here :

  https://github.com/OSGeo/gdal/blob/v3.0.3RC1/gdal/NEWS

~~~~~

2.4.4 RC1:

Peek up an archive among the following ones (by ascending size):

  http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.xz
  http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.gz
  http://download.osgeo.org/gdal/2.4.4/gdal244rc1.zip

A snapshot of the gdalautotest suite is also available :

  http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.tar.gz
  http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.zip

GDAL-GRASS plugin (unmodified):

  http://download.osgeo.org/gdal/2.4.4/gdal-grass-2.4.4.tar.gz

The NEWS file is here :

  https://github.com/OSGeo/gdal/blob/v2.4.4RC1/gdal/NEWS


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kgj2 at cornell.edu  Wed Jan  8 05:24:45 2020
From: kgj2 at cornell.edu (Keith Jenkins)
Date: Wed, 8 Jan 2020 08:24:45 -0500
Subject: [gdal-dev] skipping date type detection of GeoJSON properties
In-Reply-To: <1619813.MZc8OxPkJI@even-i700>
References: <CAK6C=sGTQi-tvZ8K-7_trqcacca1wOABND-2SAY_juBHVoS-vw@mail.gmail.com>
 <1619813.MZc8OxPkJI@even-i700>
Message-ID: <CAK6C=sG5nOH_RepsDVjA_8x8Lu6Z+j8zrg9sV1rVTqFrqT9nzw@mail.gmail.com>

Wow, that was fast!  This looks great.

Many thanks,
Keith

On Tue, Jan 7, 2020 at 4:35 PM Even Rouault <even.rouault at spatialys.com> wrote:
>
> > ... ogr2ogr converts the identifiers to "3000\/02\/31" and "2000\/01\/01".
> >
> > Is there any way to preserve the original formatting of these strings?
>
> I've just added a DATE_AS_STRING=YEs open option for such situations:
> https://github.com/OSGeo/gdal/commit/3a7914cee018d5b65dc1639368edbd8faac2543d
>
> Backported for 3.0.3
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From kgj2 at cornell.edu  Wed Jan  8 06:39:43 2020
From: kgj2 at cornell.edu (Keith Jenkins)
Date: Wed, 8 Jan 2020 09:39:43 -0500
Subject: [gdal-dev] skipping date type detection of GeoJSON properties
In-Reply-To: <CAK6C=sG5nOH_RepsDVjA_8x8Lu6Z+j8zrg9sV1rVTqFrqT9nzw@mail.gmail.com>
References: <CAK6C=sGTQi-tvZ8K-7_trqcacca1wOABND-2SAY_juBHVoS-vw@mail.gmail.com>
 <1619813.MZc8OxPkJI@even-i700>
 <CAK6C=sG5nOH_RepsDVjA_8x8Lu6Z+j8zrg9sV1rVTqFrqT9nzw@mail.gmail.com>
Message-ID: <CAK6C=sEd+mA-eKdEGTGn2PWABNWKgg_5gdK-rTLvxu2zZmuGrQ@mail.gmail.com>

> > I've just added a DATE_AS_STRING=YEs open option for such situations:
> > https://github.com/OSGeo/gdal/commit/3a7914cee018d5b65dc1639368edbd8faac2543d

After further thought, I'm wondering about the name of the new option.

This is just about reading GeoJSON, right? If so, then I think a name
like PARSE_DATELIKE_FIELDS or DETECT_DATES would make more sense to
the user.

If I understand correctly, when converting to GeoJSON from other
formats, any date types will always be written as strings, regardless
of this option. The name "DATE_AS_STRING" makes it sound like the
option controls how the output is written.

Keith

From jluis at ualg.pt  Wed Jan  8 06:41:42 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Wed, 8 Jan 2020 14:41:42 +0000
Subject: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids
In-Reply-To: <2342869.xbTq2brUCa@even-i700>
References: <DB8PR04MB669713BCB3BF14FF6D969868A6230@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <2342869.xbTq2brUCa@even-i700>
Message-ID: <DB8PR04MB669765ACF73B609562D5E354A63E0@DB8PR04MB6697.eurprd04.prod.outlook.com>

Perfect. 6 sec now to read that file

1st thanks of 2020

Joaquim

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: Tuesday, January 7, 2020 7:09 PM
To: gdal-dev at lists.osgeo.org
Cc: Joaquim Manuel Freire Luís <jluis at ualg.pt>; Paul Wessel <pwessel at hawaii.edu>
Subject: Re: [gdal-dev] Slow GDALComputeRasterMinMax on nc grids

On vendredi 3 janvier 2020 17:27:19 CET Joaquim Manuel Freire Luís wrote:
> Hi Even,
> 
> New Year, new mysteries. I'm having quite strange slow times in 
> computing the min/max of netCDF files.

https://github.com/OSGeo/gdal/pull/2155 will fix such performance issues (independently of whether libnetcdf has been built with particular chunk cache
settings)

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jan  8 09:21:29 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 8 Jan 2020 17:21:29 +0000
Subject: [gdal-dev] Faster gdalinfo from COG
Message-ID: <9c26590cb07e4c598f3719cae9ac82db@C119S212VM042.msvyvi.vaha.local>

Hi,

Cloud optimized GeoTIFF is rather fast for almost anything else but not for checking what it is with gdalinfo. I wonder if we could have some "summary only" mode in gdalinfo that reads just what is known to be fast to read from the image metadata. What gdalinfo is actually doing when it spends five minutes before it prints info about http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif? For me it seems that the whole report could be generated from either the baseline tiff tags or from the GeoTIFF and GDAL tags, even statistics which I added with gdal_edit.

-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200108/661784f3/attachment.html>

From vincent.sarago at gmail.com  Wed Jan  8 09:27:56 2020
From: vincent.sarago at gmail.com (Vincent Sarago)
Date: Wed, 8 Jan 2020 12:27:56 -0500
Subject: [gdal-dev] Faster gdalinfo from COG
In-Reply-To: <9c26590cb07e4c598f3719cae9ac82db@C119S212VM042.msvyvi.vaha.local>
References: <9c26590cb07e4c598f3719cae9ac82db@C119S212VM042.msvyvi.vaha.local>
Message-ID: <56538ACB-BFFD-450F-986A-4A2EE33132E0@gmail.com>

Hi Jukka,
The time you are seeing is related to your configuration and not specifically to the file itself. 

If you set `GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR` in your env, you’ll see that gdalinfo will be much faster. 

```
$ time GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR gdalinfo /vsicurl/http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif
...
GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR gdalinfo   0.05s user 0.04s system 6% cpu 1.341 total
```

```
$ time GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR gdalinfo /vsicurl/http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif <http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif>
...
gdalinfo /vsicurl/http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif  0.12s user 0.23s system 2% cpu 11.719 total
```

Vincent

> Le 8 janv. 2020 à 12:21, Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi> a écrit :
> 
> Hi,
>  
> Cloud optimized GeoTIFF is rather fast for almost anything else but not for checking what it is with gdalinfo. I wonder if we could have some “summary only” mode in gdalinfo that reads just what is known to be fast to read from the image metadata. What gdalinfo is actually doing when it spends five minutes before it prints info about http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif <http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif>? For me it seems that the whole report could be generated from either the baseline tiff tags or from the GeoTIFF and GDAL tags, even statistics which I added with gdal_edit.
>  
> -Jukka Rahkonen-
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200108/6aa25611/attachment-0001.html>

From even.rouault at spatialys.com  Wed Jan  8 09:43:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 Jan 2020 18:43:30 +0100
Subject: [gdal-dev] Faster gdalinfo from COG
In-Reply-To: <56538ACB-BFFD-450F-986A-4A2EE33132E0@gmail.com>
References: <9c26590cb07e4c598f3719cae9ac82db@C119S212VM042.msvyvi.vaha.local>
 <56538ACB-BFFD-450F-986A-4A2EE33132E0@gmail.com>
Message-ID: <10843533.FGnfUmPmNU@even-i700>

On mercredi 8 janvier 2020 12:27:56 CET Vincent Sarago wrote:
> Hi Jukka,
> The time you are seeing is related to your configuration and not
> specifically to the file itself.
> 
> If you set `GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR` in your env, you’ll see
> that gdalinfo will be much faster.

The file is also not entirely cloud optimized

$ GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR python swig/python/samples/
validate_cloud_optimized_geotiff.py  /vsicurl/http://latuviitta.kapsi.fi/data/
jarvi_dem/saimaa_dem.tif 
/vsicurl/http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif is NOT a 
valid cloud optimized GeoTIFF.
The following errors were found:
 - The offset of the main IFD should be 192. It is 223880848 instead
 - The offset of the IFD for overview of index 0 is 586, whereas it should be 
greater than the one of the main image, which is at byte 223880848

How did you generate it ? What surprises me is that it contains the 'ghost' 
area typical of GDAL master COG driver, so the fact that the IFD header is not 
at the beginning of the file is unexpected.
Would you have edited the file (like adding statistics) after using 
gdal_translate -of COG ?

After reprocessing it with
gdal_translate saimaa_dem.tif out.tif -of COG -co COMPRESS=DEFLATE
I get a 'conformant' COG file

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jan  8 09:55:35 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 8 Jan 2020 17:55:35 +0000
Subject: [gdal-dev] Faster gdalinfo from COG
Message-ID: <86d267ec40164ac887c1679dcdf5d847@C119S212VM042.msvyvi.vaha.local>

Hi,

The real issue appears to be in my usage of direct http url instead of using vsicurl in between.

This takes a few seconds for me on Windows with GDAL 3.1.0dev
gdalinfo /vsicurl/http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif
but this takes more than five minutes
gdalinfo http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif

I believe that I used http url directly after reading some QGIS tutorial that suggested that /vsicurl/ is no more needed.

You are right about how I created the file. I used the GDAL 3.1.0dev COG driver and tried to enhance it by computing the statistics with gdal_edit. 

-Jukka-



-----Alkuperäinen viesti-----
Lähettäjä: Even Rouault <even.rouault at spatialys.com> 
Lähetetty: keskiviikko 8. tammikuuta 2020 19.44
Vastaanottaja: gdal-dev at lists.osgeo.org
Kopio: Vincent Sarago <vincent.sarago at gmail.com>; Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi>
Aihe: Re: [gdal-dev] Faster gdalinfo from COG

On mercredi 8 janvier 2020 12:27:56 CET Vincent Sarago wrote:
> Hi Jukka,
> The time you are seeing is related to your configuration and not 
> specifically to the file itself.
> 
> If you set `GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR` in your env, 
> you’ll see that gdalinfo will be much faster.

The file is also not entirely cloud optimized

$ GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR python swig/python/samples/ validate_cloud_optimized_geotiff.py  /vsicurl/http://latuviitta.kapsi.fi/data/
jarvi_dem/saimaa_dem.tif
/vsicurl/http://latuviitta.kapsi.fi/data/jarvi_dem/saimaa_dem.tif is NOT a valid cloud optimized GeoTIFF.
The following errors were found:
 - The offset of the main IFD should be 192. It is 223880848 instead
 - The offset of the IFD for overview of index 0 is 586, whereas it should be greater than the one of the main image, which is at byte 223880848

How did you generate it ? What surprises me is that it contains the 'ghost' 
area typical of GDAL master COG driver, so the fact that the IFD header is not at the beginning of the file is unexpected.
Would you have edited the file (like adding statistics) after using gdal_translate -of COG ?

After reprocessing it with
gdal_translate saimaa_dem.tif out.tif -of COG -co COMPRESS=DEFLATE I get a 'conformant' COG file

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com

From benjamin.deschamps at canada.ca  Wed Jan  8 10:28:04 2020
From: benjamin.deschamps at canada.ca (Deschamps, Benjamin (EC))
Date: Wed, 8 Jan 2020 18:28:04 +0000
Subject: [gdal-dev] Possible bug in gdal.TransformPoint() gdal 3.0.1
In-Reply-To: <2636529.S47qh8dTlr@even-i700>
References: <4a898864fe8447138a628a0930cd455b@PELEPCDEXC020.birch.int.bell.ca>
 <2636529.S47qh8dTlr@even-i700>
Message-ID: <mailman.28.1578508093.17181.gdal-dev@lists.osgeo.org>

Thanks (as always!) Even for the quick response and good resources.

For posterity, that is osr, not ogr:
in_crs.SetAxisMappingStrategy(osr.OAMS_TRADITIONAL_GIS_ORDER)

It also seems to impacts CRSs imported from WKT and PROJ4, not just from EPSG as indicated in the release note.

Benjamin

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: January 7, 2020 16:57
To: gdal-dev at lists.osgeo.org
Cc: Deschamps, Benjamin (EC) <benjamin.deschamps at canada.ca>
Subject: Re: [gdal-dev] Possible bug in gdal.TransformPoint() gdal 3.0.1

Benjamin,

> Not sure if this is a bug so posting here first...

This is an intented change of behaviour of GDAL 3. See
https://github.com/OSGeo/gdal/blob/release/3.0/gdal/MIGRATION_GUIDE.TXT#L10

> from osgeo import osr
> in_crs = osr.SpatialReference()
> in_crs.ImportFromEPSG(4326)

If you want to keep long lat ordering, add

in_crs.SetAxisMappingStrategy(ogr.OAMS_TRADITIONAL_GIS_ORDER)

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Wed Jan  8 10:41:43 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 8 Jan 2020 14:41:43 -0400
Subject: [gdal-dev] Motions: approve GDAL 3.0.3 RC1 and 2.4.4 RC1
In-Reply-To: <6865138.vdBbelk7q9@even-i700>
References: <6865138.vdBbelk7q9@even-i700>
Message-ID: <4474a0d6-f60c-132e-4a16-96598d2ff14a@gatewaygeomatics.com>

Tested 2.4.4 RC1 here with VisualStudio 2017, works well.

+1  jeff




On 2020-01-08 9:07 AM, Even Rouault wrote:
> Hi,
> 
> Both announcement of availability of release candidates and motions to adopt
> them.
> 
> MOT1: Adopt GDAL 3.0.3 RC1 as final 3.0.3 release
> 
> +1 Even
> 
> MOT2: Adopt GDAL 2.4.4 RC1 as final 2.4.4 release
> 
> +1 Even
> 
> ~~~~~
> 
> 3.0.3 RC1:
> 
> Peek up an archive among the following ones (by ascending size):
>    http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.xz
>    http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.gz
>    http://download.osgeo.org/gdal/3.0.3/gdal303rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>    http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.tar.gz
>    http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.zip
> 
> GDAL-GRASS plugin (unmodified):
> 
>    http://download.osgeo.org/gdal/3.0.3/gdal-grass-3.0.3.tar.gz
> 
> The NEWS file is here :
> 
>    https://github.com/OSGeo/gdal/blob/v3.0.3RC1/gdal/NEWS
> 
> ~~~~~
> 
> 2.4.4 RC1:
> 
> Peek up an archive among the following ones (by ascending size):
> 
>    http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.xz
>    http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.gz
>    http://download.osgeo.org/gdal/2.4.4/gdal244rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>    http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.tar.gz
>    http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.zip
> 
> GDAL-GRASS plugin (unmodified):
> 
>    http://download.osgeo.org/gdal/2.4.4/gdal-grass-2.4.4.tar.gz
> 
> The NEWS file is here :
> 
>    https://github.com/OSGeo/gdal/blob/v2.4.4RC1/gdal/NEWS
> 
> 


-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jan  8 10:50:40 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 8 Jan 2020 11:50:40 -0700 (MST)
Subject: [gdal-dev] Motions: approve GDAL 3.0.3 RC1 and 2.4.4 RC1
In-Reply-To: <6865138.vdBbelk7q9@even-i700>
References: <6865138.vdBbelk7q9@even-i700>
Message-ID: <1578509440868-0.post@n6.nabble.com>

+1 for both

-Jukka Rahkonen-


Even Rouault-2 wrote
> Hi,
> 
> Both announcement of availability of release candidates and motions to
> adopt 
> them.
> 
> MOT1: Adopt GDAL 3.0.3 RC1 as final 3.0.3 release
> 
> +1 Even
> 
> MOT2: Adopt GDAL 2.4.4 RC1 as final 2.4.4 release
> 
> +1 Even
> 
> ~~~~~
> 
> 3.0.3 RC1:
> 
> Peek up an archive among the following ones (by ascending size):
>   http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.xz
>   http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.3/gdal303rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>   http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.zip
> 
> GDAL-GRASS plugin (unmodified):
> 
>   http://download.osgeo.org/gdal/3.0.3/gdal-grass-3.0.3.tar.gz
> 
> The NEWS file is here :
> 
>   https://github.com/OSGeo/gdal/blob/v3.0.3RC1/gdal/NEWS
> 
> ~~~~~
> 
> 2.4.4 RC1:
> 
> Peek up an archive among the following ones (by ascending size):
> 
>   http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.xz
>   http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.gz
>   http://download.osgeo.org/gdal/2.4.4/gdal244rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>   http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.tar.gz
>   http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.zip
> 
> GDAL-GRASS plugin (unmodified):
> 
>   http://download.osgeo.org/gdal/2.4.4/gdal-grass-2.4.4.tar.gz
> 
> The NEWS file is here :
> 
>   https://github.com/OSGeo/gdal/blob/v2.4.4RC1/gdal/NEWS
> 
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From mateusz at loskot.net  Wed Jan  8 10:59:59 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 8 Jan 2020 19:59:59 +0100
Subject: [gdal-dev] Motions: approve GDAL 3.0.3 RC1 and 2.4.4 RC1
In-Reply-To: <6865138.vdBbelk7q9@even-i700>
References: <6865138.vdBbelk7q9@even-i700>
Message-ID: <CABUeae9k_1sB1N8VAuVpiUW0YP7=xpste5vC4rTodX-OY4TDzQ@mail.gmail.com>

+1 for both

Thank you Even!

On Wed, 8 Jan 2020 at 14:07, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> Both announcement of availability of release candidates and motions to adopt
> them.
>
> MOT1: Adopt GDAL 3.0.3 RC1 as final 3.0.3 release
>
> +1 Even
>
> MOT2: Adopt GDAL 2.4.4 RC1 as final 2.4.4 release
>
> +1 Even
>
> ~~~~~
>
> 3.0.3 RC1:
>
> Peek up an archive among the following ones (by ascending size):
>   http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.xz
>   http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.3/gdal303rc1.zip
>
> A snapshot of the gdalautotest suite is also available :
>
>   http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.3/gdalautotest-3.0.3rc1.zip
>
> GDAL-GRASS plugin (unmodified):
>
>   http://download.osgeo.org/gdal/3.0.3/gdal-grass-3.0.3.tar.gz
>
> The NEWS file is here :
>
>   https://github.com/OSGeo/gdal/blob/v3.0.3RC1/gdal/NEWS
>
> ~~~~~
>
> 2.4.4 RC1:
>
> Peek up an archive among the following ones (by ascending size):
>
>   http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.xz
>   http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4rc1.tar.gz
>   http://download.osgeo.org/gdal/2.4.4/gdal244rc1.zip
>
> A snapshot of the gdalautotest suite is also available :
>
>   http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.tar.gz
>   http://download.osgeo.org/gdal/2.4.4/gdalautotest-2.4.4rc1.zip
>
> GDAL-GRASS plugin (unmodified):
>
>   http://download.osgeo.org/gdal/2.4.4/gdal-grass-2.4.4.tar.gz
>
> The NEWS file is here :
>
>   https://github.com/OSGeo/gdal/blob/v2.4.4RC1/gdal/NEWS
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Wed Jan  8 11:10:04 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 Jan 2020 20:10:04 +0100
Subject: [gdal-dev] Faster gdalinfo from COG
In-Reply-To: <86d267ec40164ac887c1679dcdf5d847@C119S212VM042.msvyvi.vaha.local>
References: <86d267ec40164ac887c1679dcdf5d847@C119S212VM042.msvyvi.vaha.local>
Message-ID: <3383255.PngteZr786@even-i700>

> I believe that I used http url directly after reading some QGIS tutorial
> that suggested that /vsicurl/ is no more needed.

Depends on use cases. If you need to process the whole file and that it can 
fit in RAM, then direct http[s:]// without /vsicurl might be slightly faster.
 
> You are right about how I created the file. I used the GDAL 3.1.0dev COG
> driver and tried to enhance it by computing the statistics with gdal_edit.

OK, I've just pushed a change to emit a warning in such situation

$ python swig/python/scripts/gdal_edit.py -stats byte_cog.tif
Warning 1: The IFD has been rewritten at the end of the file, which breaks COG 
layout.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Thu Jan  9 05:19:52 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 09 Jan 2020 14:19:52 +0100
Subject: [gdal-dev] Fwd: Re: [Projects] OSGeo Budget 2020
In-Reply-To: <2167492.BTN8mzmtpH@even-i700>
References: <2167492.BTN8mzmtpH@even-i700>
Message-ID: <1645938.Gru38bdIqE@even-i700>

Hi,

no feedback on this ? If not, I'll motion shortly that we request the default 
2000 USD budget with a presumed use of supporting attendance at code sprints & 
conferences.

Even

> Hi,
> 
> I had apparently missed the initial email for this request to ask for a 2020
> budget. Do we have specific needs ?
> 
> After short discussion with the OSGeo treasurer, it appears that the cost
> for the extended Travis-CI support that were covered through GDAL budget in
> 2018 and 2019 will go to a general OSGeo budget line in 2020
> (infrastructure or so), as they are shared with other projects like PROJ.
> 
> Even
> 
> ----------  Forwarded Message  ----------
> 
> Subject: Re: [Projects] OSGeo Budget 2020
> Date: lundi 23 décembre 2019, 20:35:20 CET
> From: Angelos Tzotsos <gcpp.kalxas at gmail.com>
> To: projects at lists.osgeo.org
> CC: OSGeo Discussions <discuss at lists.osgeo.org>, OSGeo Board
> <board at lists.osgeo.org>
> 
> Hi all,
> 
> Please submit your budget requests by Dec 30th so we can start drafting
> the 2020 budget.
> 
> Happy holidays,
> Angelos
> 
> On 12/9/19 9:38 PM, Angelos Tzotsos wrote:
> > Dear OSGeo project members and committees,
> > 
> > Over the previous years, OSGeo has been proud to support a growing
> > number of project events, such as code sprints, developer meetings,
> > and user conferences.
> > 
> > OSGeo is reaching out to all committees, including project steering
> > committees, to help plan our budget for 2020.
> > 
> > As in last year, the board is discussing about assigning a starting
> > budget of 2000$ to all graduated projects who have reported to the
> > board the last 12 months (e.g. during the AGM or directly to a board
> > meeting).
> > 
> > For projects with more of a plan (to pursue a specific goal) projects
> > are welcome to send a more detailed request for approval (see detailed
> > budget requests from 2019 e.g.
> > https://wiki.osgeo.org/wiki/GvSIG_Budget_2019)
> > 
> > A good idea is to focus on OSGeo participation, for example attending
> > the AGM or OSGeo code sprint. Also keep in mind OSGeo goals as an
> > organization, (e.g. interoperability goal: CITE compliance or
> > participation developing new standards)
> > 
> > We would like to ask you to help us with budget proposals to assist
> > your project. This will help us set aside a realistic amount of funding.
> > 
> > Please add your project info to the budget draft at:
> > 
> > https://wiki.osgeo.org/wiki/OSGeo_Budget_2020
> > 
> > ideally by Dec 30 ahead of our next board meeting.
> > 
> > When making a budget request please keep in mind the vision and goals
> > of our foundation, along with any obligations you wish to meet.
> > 
> > Thank you.
> > 
> > On behalf of the OSGeo Board,
> > 
> > Angelos


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew.bell.ia at gmail.com  Thu Jan  9 10:48:09 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 9 Jan 2020 13:48:09 -0500
Subject: [gdal-dev] Test Failure Question
Message-ID: <CACJ51z0iLiFkZACyuyDX-4-cOpF-it0+_jp0FuZMHA93yM88Eg@mail.gmail.com>

Hi,

I'm getting an abort when I run autotest on OSX:

gcore/tiff_ovr.py
..................FFFF................................................................Fatal
Python error: Aborted

Current thread 0x00007fff9465d380 (most recent call first):
  File "/Users/acbell/gdal/autotest/gcore/tiff_ovr.py", line 1364 in
test_tiff_ovr_43
  File
"/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/_pytest/python.py",
line 166 in pytest_pyfunc_call
  File
"/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/pluggy/callers.py",
line 187 in _multicall
  File
"/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/pluggy/manager.py",
line 84 in <lambda>
  File
"/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/pluggy/manager.py",
line 93 in _hookexec
...

Line 1364 is:

ds = gdaltest.tiff_drv.Create('tmp/ovr43.tif', 16, 16, 1, gdal.GDT_UInt16)

Any ideas what might be going on or what I might look for to fix?

Thanks,

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200109/f4ab0afd/attachment.html>

From sean at mapbox.com  Thu Jan  9 11:14:57 2020
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 9 Jan 2020 12:14:57 -0700
Subject: [gdal-dev] Test Failure Question
In-Reply-To: <CACJ51z0iLiFkZACyuyDX-4-cOpF-it0+_jp0FuZMHA93yM88Eg@mail.gmail.com>
References: <CACJ51z0iLiFkZACyuyDX-4-cOpF-it0+_jp0FuZMHA93yM88Eg@mail.gmail.com>
Message-ID: <CADPhZXxRNC-Ww7cvhUeazteuwQp95RwHeHJ5bWs4YEXsgpUPCA@mail.gmail.com>

Hi Andrew,

Running the test under lldb will give you some leads. Within your activated
environment, so that "python" is the correct one:

$ lldb python
(lldb) run -m pytest /Users/acbell/gdal/autotest/gcore/tiff_ovr.py



On Thu, Jan 9, 2020 at 11:48 AM Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

> Hi,
>
> I'm getting an abort when I run autotest on OSX:
>
> gcore/tiff_ovr.py
> ..................FFFF................................................................Fatal
> Python error: Aborted
>
> Current thread 0x00007fff9465d380 (most recent call first):
>   File "/Users/acbell/gdal/autotest/gcore/tiff_ovr.py", line 1364 in
> test_tiff_ovr_43
>   File
> "/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/_pytest/python.py",
> line 166 in pytest_pyfunc_call
>   File
> "/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/pluggy/callers.py",
> line 187 in _multicall
>   File
> "/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/pluggy/manager.py",
> line 84 in <lambda>
>   File
> "/Users/acbell/miniconda3/envs/gdaldev/lib/python3.8/site-packages/pluggy/manager.py",
> line 93 in _hookexec
> ...
>
> Line 1364 is:
>
> ds = gdaltest.tiff_drv.Create('tmp/ovr43.tif', 16, 16, 1, gdal.GDT_UInt16)
>
> Any ideas what might be going on or what I might look for to fix?
>
> Thanks,
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200109/173b5b0d/attachment.html>

From even.rouault at spatialys.com  Thu Jan  9 12:18:18 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 09 Jan 2020 21:18:18 +0100
Subject: [gdal-dev] Test Failure Question
In-Reply-To: <CACJ51z0iLiFkZACyuyDX-4-cOpF-it0+_jp0FuZMHA93yM88Eg@mail.gmail.com>
References: <CACJ51z0iLiFkZACyuyDX-4-cOpF-it0+_jp0FuZMHA93yM88Eg@mail.gmail.com>
Message-ID: <10626491.FjJNOIdpAY@even-i700>

Andrew,

> Any ideas what might be going on or what I might look for to fix?

Did you build GDAL yourself ? Check if you built against internal libtiff or 
not ? If you built against internal libtiff, make sure to use
--with-rename-internal-libtiff-symbols to avoid any potential symbol clash 
with an external libtiff that might be indirectly linked. Similarly for 
libgeotiff

Otherwise Valgrind is one of my best friends in such situations

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew.bell.ia at gmail.com  Thu Jan  9 12:42:54 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 9 Jan 2020 15:42:54 -0500
Subject: [gdal-dev] Test Failure Question
In-Reply-To: <10626491.FjJNOIdpAY@even-i700>
References: <CACJ51z0iLiFkZACyuyDX-4-cOpF-it0+_jp0FuZMHA93yM88Eg@mail.gmail.com>
 <10626491.FjJNOIdpAY@even-i700>
Message-ID: <CACJ51z07TCxdru8Uw9Vao7gM_hyGAzkNFgNTL4W=hR6oABrqDw@mail.gmail.com>

On Thu, Jan 9, 2020 at 3:18 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Andrew,
>
> > Any ideas what might be going on or what I might look for to fix?
>
> Did you build GDAL yourself ? Check if you built against internal libtiff
> or
> not ? If you built against internal libtiff, make sure to use
> --with-rename-internal-libtiff-symbols


I didn't set any special options in configure when I built.  What happens
in this case?  I don't see libtiff in the set of libraries to be linked.
Is it dlopen'ed?

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200109/8b15d6ba/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Jan 10 00:05:54 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Fri, 10 Jan 2020 08:05:54 +0000
Subject: [gdal-dev] Why COG does not support predictor=3?
Message-ID: <2ed81682b7734704ab7d15181eae8714@C119S212VM042.msvyvi.vaha.local>

Hi,

The cloud optimized GeoTIFF generator has a creation option PREDICTOR=YES that is Boolean. Tiffinfo reveals that it means that predictor=2 is used "Predictor: horizontal differencing 2 (0x2)". However, for floating point images predictor=3 could give much better compression. In a quick test with regular GeoTIFFs the difference between predictor=2 and predictor=3 was 218 kB vs. 148 kB. The difference when using no predictor at all vs. predictor=2 was much less, only 227 kB vs. 218 kB.  Is there some special reason for dropping the predictor=3 support from COG?

-Jukka Rahkonen-


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200110/a1bb90e6/attachment.html>

From f_trastour at hotmail.com  Fri Jan 10 01:58:48 2020
From: f_trastour at hotmail.com (=?iso-8859-1?Q?Fr=E9d=E9ric_Trastour?=)
Date: Fri, 10 Jan 2020 09:58:48 +0000
Subject: [gdal-dev] XLS file can't be opened with gdal 3
Message-ID: <AM6PR10MB221650A96339836DF58F75A4FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>

Hi all,
porting an application from gdal 2.2 to gdal 3.0, I'm facing a regression problem with an XLS file.
It works fine with the older version but can't be read with the new new one.

Here are the details : https://pastebin.com/QxWqDG4y.
I'm wondering there is any known possible regression in this driver ?
Best regards,
Fred.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200110/2fd54122/attachment.html>

From f_trastour at hotmail.com  Fri Jan 10 02:21:52 2020
From: f_trastour at hotmail.com (=?Windows-1252?Q?Fr=E9d=E9ric_Trastour?=)
Date: Fri, 10 Jan 2020 10:21:52 +0000
Subject: [gdal-dev] =?windows-1252?q?RE=A0=3A__XLS_file_can=27t_be_opened_?=
	=?windows-1252?q?with_gdal_3?=
In-Reply-To: <218dbf2f8c674155403e27e210846147.squirrel@webmail.tu-dortmund.de>
References: <AM6PR10MB221650A96339836DF58F75A4FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>,
 <218dbf2f8c674155403e27e210846147.squirrel@webmail.tu-dortmund.de>
Message-ID: <AM6PR10MB22161644A9FC402980BA1336FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>

Hi Tobias,

Yes, gdal is linked against FreeXL 1.0.5 – and reports support for XLS.

Note that some other XLS files can be used without problem.
This one, which is included in out test suite doesn’t.

BR,
Fred.

Provenance : Courrier<https://go.microsoft.com/fwlink/?LinkId=550986> pour Windows 10

________________________________
De : Tobias Wendorff <tobias.wendorff at tu-dortmund.de>
Envoyé : Friday, January 10, 2020 11:17:56 AM
À : "Frédéric Trastour" <f_trastour at hotmail.com>
Cc : gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Objet : Re: [gdal-dev] XLS file can't be opened with gdal 3

Hey,

Am Fr, 10.01.2020, 10:58 schrieb Frédéric Trastour:
>
> It works fine with the older version but can't be read with the new new
> one.

XLS support is based on FreeXL

Did you link it against it and installed the library?

Best regards,
Tobias

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200110/2c4e1e26/attachment.html>

From tobias.wendorff at tu-dortmund.de  Fri Jan 10 02:17:56 2020
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Fri, 10 Jan 2020 11:17:56 +0100
Subject: [gdal-dev] XLS file can't be opened with gdal 3
In-Reply-To: <AM6PR10MB221650A96339836DF58F75A4FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>
References: <AM6PR10MB221650A96339836DF58F75A4FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>
Message-ID: <218dbf2f8c674155403e27e210846147.squirrel@webmail.tu-dortmund.de>

Hey,

Am Fr, 10.01.2020, 10:58 schrieb Frédéric Trastour:
>
> It works fine with the older version but can't be read with the new new
> one.

XLS support is based on FreeXL

Did you link it against it and installed the library?

Best regards,
Tobias


From evert.etienne at sitemark.com  Fri Jan 10 04:31:45 2020
From: evert.etienne at sitemark.com (Evert Etienne (SITEMARK))
Date: Fri, 10 Jan 2020 12:31:45 +0000
Subject: [gdal-dev] GDAL python bindings memory usage
In-Reply-To: <6660112.JM74GmeJTS@even-i700>
References: <EB31B19E-1886-4CFB-9290-C081B5E785DE@sitemark.com>
 <alpine.DEB.2.21.99999.351.1912271853400.13078@warden.aitchison.me.uk>
 <4870c08f-9227-45c7-a82a-9f9e55189621@email.android.com>
 <6660112.JM74GmeJTS@even-i700>
Message-ID: <E1BB653D-B55E-41AD-BE3D-B32F005E39DF@sitemark.com>

I actually have no idea what the extra code in your examples is doing, can you explain?

For the behavior: it is the same as psutil (makes sense since memory_profiler uses psutil by default). You can see it reach max cache by logging psutil values in the Translate callback. I also saw the same behavior by looking at the memory usage using top.

Is there another way you know that works that I can try to see if I can replicate the memory usage values?

Thank you

> On 27 Dec 2019, at 21:45, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> I question the reliability of memory_profiler
> 
> See
> 
> Line #    Mem usage    Increment   Line Contents
> ================================================
>    27  112.125 MiB  112.125 MiB   @profile
>    28                             def test2():
>    29  112.676 MiB    0.551 MiB       gdal.SetCacheMax(1000 * 1024 * 1024)
>    30 1101.855 MiB  989.180 MiB       gdal.Translate('/tmp/out.tif', 'byte.tif', options = '-co TILED=YES -outsize 100000 10000')
>    31 1101.855 MiB    0.000 MiB       dummy = 1
> 
> vs
> 
> Line #    Mem usage    Increment   Line Contents
> ================================================
>    28  109.336 MiB  109.336 MiB   @profile
>    29                             def test2():
>    30  109.336 MiB    0.000 MiB       gdal.SetCacheMax(1000 * 1024 * 1024)
>    31 1098.309 MiB  988.973 MiB       gdal.Translate('/tmp/out.tif', 'byte.tif', options = '-co TILED=YES -outsize 100000 10000')
>    32 1098.309 MiB    0.000 MiB       h = ctypes.cdll.LoadLibrary(None)
>    33 1098.309 MiB    0.000 MiB       h.malloc.argtypes = [ctypes.c_size_t]
>    34 1098.309 MiB    0.000 MiB       h.malloc.restype = ctypes.c_void_p
>    35 1098.309 MiB    0.000 MiB       h.free.argtypes = [ctypes.c_void_p]
>    36 1098.309 MiB    0.000 MiB       h.free.restype = None
>    37 1098.309 MiB    0.000 MiB       size = 1024 * 1024
>    38 1098.309 MiB    0.000 MiB       x = h.malloc(size)
>    39  117.422 MiB    0.000 MiB       h.free(x)
>    40  117.422 MiB    0.000 MiB       dummy = 1
> 
> vs
> 
> Line #    Mem usage    Increment   Line Contents
> ================================================
>    28  111.305 MiB  111.305 MiB   @profile
>    29                             def test2():
>    30  111.852 MiB    0.547 MiB       gdal.SetCacheMax(1000 * 1024 * 1024)
>    31  188.504 MiB   76.652 MiB       gdal.Translate('/tmp/out.tif', 'byte.tif', options = '-co TILED=YES -outsize 100000 10000')
>    32  188.504 MiB    0.000 MiB       h = ctypes.cdll.LoadLibrary(None)
>    33  188.504 MiB    0.000 MiB       h.free.argtypes = [ctypes.c_void_p]
>    34  188.504 MiB    0.000 MiB       h.free.restype = None
>    35  188.504 MiB    0.000 MiB       h.free(None)
>    36  188.504 MiB    0.000 MiB       dummy = 1
> 
> vs
> 
> Line #    Mem usage    Increment   Line Contents
> ================================================
>    28  112.164 MiB  112.164 MiB   @profile
>    29                             def test2():
>    30  112.164 MiB    0.000 MiB       gdal.SetCacheMax(1000 * 1024 * 1024)
>    31  112.770 MiB    0.605 MiB       h = ctypes.cdll.LoadLibrary(None)
>    32  112.770 MiB    0.000 MiB       h.free.argtypes = [ctypes.c_void_p]
>    33  112.770 MiB    0.000 MiB       h.free.restype = None
>    34 1101.918 MiB  989.148 MiB       gdal.Translate('/tmp/out.tif', 'byte.tif', options = '-co TILED=YES -outsize 100000 10000')
>    35 1101.918 MiB    0.000 MiB       h.free(None)
>    36 1101.918 MiB    0.000 MiB       dummy = 1
> 
> That doesn't make much sense to me.
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.spatialys.com&amp;data=01%7C01%7Cevert.etienne%40sitemark.com%7C39f1fc8e39b14a21169d08d78b0da8ab%7Cfc89adff07ac47008853b7b7e906068e%7C0&amp;sdata=Mg1ztmCAuQnlKkFq3Ny00bE%2BfmzljlV0cWVRrYyU8PQ%3D&amp;reserved=0


From even.rouault at spatialys.com  Fri Jan 10 05:45:53 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 10 Jan 2020 14:45:53 +0100
Subject: [gdal-dev] Why COG does not support predictor=3?
In-Reply-To: <2ed81682b7734704ab7d15181eae8714@C119S212VM042.msvyvi.vaha.local>
References: <2ed81682b7734704ab7d15181eae8714@C119S212VM042.msvyvi.vaha.local>
Message-ID: <4230427.OEiyGJM2Gc@even-i700>

Jukka,

> The cloud optimized GeoTIFF generator has a creation option PREDICTOR=YES
> that is Boolean. Tiffinfo reveals that it means that predictor=2 is used
> "Predictor: horizontal differencing 2 (0x2)". However, for floating point
> images predictor=3 could give much better compression. In a quick test with
> regular GeoTIFFs the difference between predictor=2 and predictor=3 was 218
> kB vs. 148 kB. The difference when using no predictor at all vs.
> predictor=2 was much less, only 227 kB vs. 218 kB.  Is there some special
> reason for dropping the predictor=3 support from COG?

Adressed by
https://github.com/OSGeo/gdal/commit/0c520d04d17669499cbbfc3c2d87258144263947

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Jan 10 05:57:44 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 10 Jan 2020 14:57:44 +0100
Subject: [gdal-dev] XLS file can't be opened with gdal 3
In-Reply-To: <AM6PR10MB22161644A9FC402980BA1336FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>
References: <AM6PR10MB221650A96339836DF58F75A4FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>
 <218dbf2f8c674155403e27e210846147.squirrel@webmail.tu-dortmund.de>
 <AM6PR10MB22161644A9FC402980BA1336FE380@AM6PR10MB2216.EURPRD10.PROD.OUTLOOK.COM>
Message-ID: <3627900.NNaoUNhOr5@even-i700>

On vendredi 10 janvier 2020 10:21:52 CET Frédéric Trastour wrote:
> Hi Tobias,
> 
> Yes, gdal is linked against FreeXL 1.0.5 – and reports support for XLS.
> 
> Note that some other XLS files can be used without problem.
> This one, which is included in out test suite doesn’t.

Same FreeXL version in your 2 GDAL builds ?
Looking quickly at the diff on the GDAL side in the ogr/ogrsf_frmts/xls, the 
changes seem to be purely cosmetic.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Jan 10 09:43:04 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 10 Jan 2020 18:43:04 +0100
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
Message-ID: <2106331.9e0NLLMddd@even-i700>

Hi,

Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020

~~~~~

+1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Fri Jan 10 09:43:28 2020
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 10 Jan 2020 09:43:28 -0800
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
In-Reply-To: <2106331.9e0NLLMddd@even-i700>
References: <2106331.9e0NLLMddd@even-i700>
Message-ID: <CACmBxyvNyjF7QZ7oBpupY_kuY9GaS81Lt3Et39DyXHLyFMNuqw@mail.gmail.com>

+1 KurtS

On Fri, Jan 10, 2020 at 9:43 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020
>
> ~~~~~
>
> +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200110/26a6a895/attachment.html>

From mateusz at loskot.net  Fri Jan 10 09:46:24 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 10 Jan 2020 18:46:24 +0100
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
In-Reply-To: <2106331.9e0NLLMddd@even-i700>
References: <2106331.9e0NLLMddd@even-i700>
Message-ID: <CABUeae8RWEpu4yRVooo4awdQWK+zHjScG+19+Ti4BnCW0VRirw@mail.gmail.com>

+1

Mateusz

On Fri, 10 Jan 2020 at 18:43, Even Rouault <even.rouault at spatialys.com> wrote:
> Hi,
>
> Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020
>
> ~~~~~
>
> +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Mateusz Loskot, http://mateusz.loskot.net

From dmorissette at mapgears.com  Fri Jan 10 10:11:19 2020
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Fri, 10 Jan 2020 13:11:19 -0500
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
In-Reply-To: <CACmBxyvNyjF7QZ7oBpupY_kuY9GaS81Lt3Et39DyXHLyFMNuqw@mail.gmail.com>
References: <2106331.9e0NLLMddd@even-i700>
 <CACmBxyvNyjF7QZ7oBpupY_kuY9GaS81Lt3Et39DyXHLyFMNuqw@mail.gmail.com>
Message-ID: <c7d01425-35db-75b3-68c6-3e8ad33b3ede@mapgears.com>

+1

Daniel

On 2020-01-10 12:43, Kurt Schwehr wrote:
> +1 KurtS
> 
> On Fri, Jan 10, 2020 at 9:43 AM Even Rouault <even.rouault at spatialys.com 
> <mailto:even.rouault at spatialys.com>> wrote:
> 
>     Hi,
> 
>     Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020
> 
>     ~~~~~
> 
>     +1
> 
>     Even
> 
>     -- 
>     Spatialys - Geospatial professional services
>     http://www.spatialys.com
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From norman.barker at gmail.com  Fri Jan 10 11:03:17 2020
From: norman.barker at gmail.com (Norman Barker)
Date: Fri, 10 Jan 2020 13:03:17 -0600
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
In-Reply-To: <2106331.9e0NLLMddd@even-i700>
References: <2106331.9e0NLLMddd@even-i700>
Message-ID: <CAN_Dn-Esb9JeFToAjCLNt0WkeK37O02gh=xoV2wKM2G=uWBUeA@mail.gmail.com>

+1 normanb

On Fri, Jan 10, 2020 at 11:43 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020
>
> ~~~~~
>
> +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200110/5ced2a9a/attachment-0001.html>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Jan 10 13:21:19 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Fri, 10 Jan 2020 14:21:19 -0700 (MST)
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
In-Reply-To: <2106331.9e0NLLMddd@even-i700>
References: <2106331.9e0NLLMddd@even-i700>
Message-ID: <1578691279686-0.post@n6.nabble.com>

+1

-Jukka Rahkonen-


Even Rouault-2 wrote
> Hi,
> 
> Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020
> 
> ~~~~~
> 
> +1
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From szekerest at gmail.com  Fri Jan 10 14:00:01 2020
From: szekerest at gmail.com (Tamas Szekeres)
Date: Fri, 10 Jan 2020 23:00:01 +0100
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
In-Reply-To: <2106331.9e0NLLMddd@even-i700>
References: <2106331.9e0NLLMddd@even-i700>
Message-ID: <CACALY+QiZrxtXLNn0qFQMn7iR-4JKo1a8Hn7EeDDt_S_GOxAqw@mail.gmail.com>

+1

Tamas

Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2020. jan.
10., P, 18:43):

> Hi,
>
> Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020
>
> ~~~~~
>
> +1
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200110/7ddb5dc4/attachment.html>

From vincenzofiozzo at yahoo.it  Sat Jan 11 01:28:08 2020
From: vincenzofiozzo at yahoo.it (Vincenzo Fiozzo)
Date: Sat, 11 Jan 2020 09:28:08 +0000 (UTC)
Subject: [gdal-dev] gdaldataset not created
References: <563201257.16230312.1578734888892.ref@mail.yahoo.com>
Message-ID: <563201257.16230312.1578734888892@mail.yahoo.com>

Hi, 

I'm writing to you to get more information about a problem of mine that I think stems from GDAL. I am comparing some types of segmentation through the RSGISLIB library between satellite and drone images. On satellite images I had no problems, while on drone images I get an error message that I think is coming from GDAL, here:

Traceback (most recent call last):
segutils.runShepherdSegmentation(image,image_clump,img_mean,gdalformat='GTiff',numClusters=100,minPxls=50,distThres=50,sampling=100,kmMaxIter=50)
      File "/home/ubuntu/anaconda3/envs/osgeo-env-v1/lib/python3.7/site-packages/rsgislib/segmentation/segutils.py", line 191, in runShepherdSegmentation
        rsgislib.segmentation.relabelClumps(elimClumpsFile, outputClumps, gdalformat, processInMem)
    _segmentation.error: Could not create GDALDataset.
I understand that this question should be about the RSGISLIB team but they could not support me, I would like to dig deeper to solve my problem. I didn't find any useful information for "error: Could not create GDALDataset", I hope you can help me, if you need more information about the images let me know. 

Waiting for your answer I wish you a good rest of the day. 

Greetings
Vincenzo
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200111/a4c4d43e/attachment.html>

From even.rouault at spatialys.com  Sat Jan 11 02:45:33 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 11 Jan 2020 11:45:33 +0100
Subject: [gdal-dev] gdaldataset not created
In-Reply-To: <563201257.16230312.1578734888892@mail.yahoo.com>
References: <563201257.16230312.1578734888892.ref@mail.yahoo.com>
 <563201257.16230312.1578734888892@mail.yahoo.com>
Message-ID: <225566072.VPqkKQLvVp@even-i700>

> I would like to dig deeper to solve my problem. I
> didn't find any useful information for "error: Could not create
> GDALDataset", I hope you can help me, if you need more information about
> the images let me know.

$ hg clone https://bitbucket.org/petebunting/rsgislib rsgislib-code

$ grep -r "Could not create GDALDataset"  rsgislib-code
rsgislib-code/src/img/RSGISImageUtils.cpp:            std::string message = std::string("Could not create GDALDataset.");
rsgislib-code/src/img/RSGISImageUtils.cpp:            std::string message = std::string("Could not create GDALDataset.");
rsgislib-code/src/img/RSGISImageUtils.cpp:                std::string message = std::string("Could not create GDALDataset.");
rsgislib-code/src/img/RSGISImageUtils.cpp:                std::string message = std::string("Could not create GDALDataset.");
rsgislib-code/src/img/RSGISImageUtils.cpp:                std::string message = std::string("Could not create GDALDataset.");

On quick look in the source, the error comes after GDALDriver::Create() returns an error.
So one of the input argument provided is certainly wrong (dimension, number of bands, data type...).
You'll have to add debug traces. Or perhaps look before also if GDAL has not emitted an error
message on stderr as from what I can see rgislib doesn't seem to install a custom error handler
that would capture them.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jan 13 04:49:51 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 13:49:51 +0100
Subject: [gdal-dev] Motions: approve GDAL 3.0.3 RC1 and 2.4.4 RC1
In-Reply-To: <6865138.vdBbelk7q9@even-i700>
References: <6865138.vdBbelk7q9@even-i700>
Message-ID: <4875165.UlZ04CqgWV@even-i700>

On mercredi 8 janvier 2020 14:07:36 CET Even Rouault wrote:
> Hi,
> 
> Both announcement of availability of release candidates and motions to adopt
> them.
> 
> MOT1: Adopt GDAL 3.0.3 RC1 as final 3.0.3 release
> 
> +1 Even
> 
> MOT2: Adopt GDAL 2.4.4 RC1 as final 2.4.4 release
> 
> +1 Even
> 

I declare those motions passed with +1 from PSC members JukkaR, MateuszL and 
myself

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jan 13 05:39:45 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 14:39:45 +0100
Subject: [gdal-dev] GDAL/OGR 2.4.4 is released
Message-ID: <1907058.8WFfV6q1EP@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 2.4.4 bug fix version. This adds 36 bug fixes on top 
of 2.4.3.

Consult the release notes for the list of issues addressed :
  https://github.com/OSGeo/gdal/blob/v2.4.4/gdal/NEWS

The sources are available at:

    http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4.tar.xz
    http://download.osgeo.org/gdal/2.4.4/gdal-2.4.4.tar.gz
    http://download.osgeo.org/gdal/2.4.4/gdal244.zip
    http://download.osgeo.org/gdal/2.4.4/gdal-grass-2.4.4.tar.gz

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jan 13 05:39:49 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jan 2020 14:39:49 +0100
Subject: [gdal-dev] GDAL/OGR 3.0.3 is released
Message-ID: <2025442.Go6Smc6YG1@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 3.0.3 bug fix version. This adds 58 bug fixes on top 
of 3.0.2.

Consult the release notes for the list of issues addressed :
  https://github.com/OSGeo/gdal/blob/v3.0.3/gdal/NEWS

Note in particular the changes regarding how SRS methods deal with TOWGS84:
  https://github.com/OSGeo/gdal/blob/v3.0.3/gdal/NEWS#L82

The sources are available at:

    http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3.tar.xz
    http://download.osgeo.org/gdal/3.0.3/gdal-3.0.3.tar.gz
    http://download.osgeo.org/gdal/3.0.3/gdal303.zip
    http://download.osgeo.org/gdal/3.0.3/gdal-grass-3.0.3.tar.gz

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mulcahy.brianp at gmail.com  Mon Jan 13 11:22:09 2020
From: mulcahy.brianp at gmail.com (Brian)
Date: Mon, 13 Jan 2020 14:22:09 -0500
Subject: [gdal-dev] Recommended process for running a intersect test between
 a raster and a simple vector
Message-ID: <CANoBQeZAGruuDp_5ZuhamSaes5nar7BzU0C5QuMdav-mfF+QNQ@mail.gmail.com>

So I am not sure if this is the right place or not. Feel free to remove if
it is not.

The problem:  I am needing to see if an extent (vector polygon, 4 vertices)
has any interaction with a raster stored in the cog format.

I thought about using raster_polygonize and running a intersect but that is
going to be way too slow and I don't need the detail at which the raster is
stored in.
So I was thinking of some alternatives.
Is there anyway to output just the polygon of the raster at a certain
overview level?
Is there any way to run intersects on a raster without converting it?
I know I can retrieve the extent of the raster and quickly determine if an
extent has any interaction with that raster extent. I also know that I can
send points(x,y) and retrieve the value of the raster at that point is
there any way to manipulate /game this? Maybe sending the extent as
individual points with added points in between the vertices and just
running multiple value at location operations? For my need, some false
positives would be acceptable. If it helps raster data is of rivers and
inundations.

Has anyone else come up with some type of process for this?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200113/fa53a99e/attachment.html>

From ravitejakrishna.w at zohocorp.com  Mon Jan 13 23:28:57 2020
From: ravitejakrishna.w at zohocorp.com (Wuyyuru Ravi Teja Krishna)
Date: Tue, 14 Jan 2020 12:58:57 +0530
Subject: [gdal-dev] invalid data in spatial file
Message-ID: <16fa2f49bff.c44fcbf221301.5698686426875913271@zohocorp.com>

Hello, 

I am trying to convert a geojson file to csv file. but that coordinates were tampered i.e 32.76543 is changed as 2333432.76543. Is there a way that ogr2ogr conversion util will throw an error for such cases that data is invalid. It would be of great help if such error throwing is possible.

Thanks in advance
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200114/b3fd9b2f/attachment.html>

From me at erik.nz  Tue Jan 14 03:04:17 2020
From: me at erik.nz (Erik Escoffier)
Date: Tue, 14 Jan 2020 12:04:17 +0100
Subject: [gdal-dev] gdal2tiles -x/--exclude option
Message-ID: <etPan.5e1da040.3d5c3942.1027@erik.nz>

Hi there,

I’m trying to use gdal2tiles to produce a raster tileset made of a bunch of geotiffs ‘scattered’ around the world. In that scenario, by default, gdal2tiles will produce a huge amount of unnecessary empty tiles.
I’m probably missing something very obvious, but I can’t seem to be able to use the -x/—exclude option that is mentioned in that merged PR from July 2018:
https://github.com/OSGeo/gdal/pull/729

I’m currently using version 0.1.6 of the gdal2tiles package on pip. 
(sorry in advance if overlooking something, I’m very much not familiar with the Python ecosystem)

Thank you :)
Erik

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200114/2589bb94/attachment.html>

From jerome.more at hotmail.fr  Tue Jan 14 14:23:08 2020
From: jerome.more at hotmail.fr (Jerome More)
Date: Tue, 14 Jan 2020 22:23:08 +0000
Subject: [gdal-dev] How to read an image of any data type
Message-ID: <DB7PR07MB445793CD1FE5CAE85F5D10289B340@DB7PR07MB4457.eurprd07.prod.outlook.com>

Hello to all gdal community members,

I had a very basic question, but I couldn't find a proper answer anywhere in the forums or mailing lists, even on the official tutorials like:
https://gdal.org/tutorials/raster_api_tut.html

So my simple question is how to handle properly a "generic" data type (i.e. known only at runtime) when reading a raster dataset from an image.

So far I could use properly GetRasterDataType / RasterIO to read my data, but I always have to specify in my code the actual data type (ex uint16_t).

The best workaround that I could find is, first read the dataset as "raw" binary data (i.e. type=uint8_t) then "interpret" it to the proper actual type (ex uint16_t).
But this is still a heavy solution and moreover during the data interpretation I could not avoid a copy of the complete dataset !
Even my attemps to use templates did not help much because they only apply to functions (not variables or members) and don't really solve the problem.

So to sum up I would like to:
1) open an image (e.g. a tiff image with 1 single band) WITHOUT knowing its data type beforehand
2) store the raster dataset in a variable of any kind, WITHOUT making copy or type cast (I mean involving math operations ) !
3) easily find and print some values (ex: image[0;0])

I will appreciate any answer on this subject !
Thank you all.

Jérôme Moré.
PS: I included my current code in a separate file.



Envoyé à partir d’Outlook<http://aka.ms/weboutlook>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200114/28139705/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gdal_mwe.cpp
Type: text/x-c++src
Size: 3723 bytes
Desc: gdal_mwe.cpp
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200114/28139705/attachment.cpp>

From elmirgeo at protonmail.com  Tue Jan 14 15:48:27 2020
From: elmirgeo at protonmail.com (elmir)
Date: Tue, 14 Jan 2020 23:48:27 +0000
Subject: [gdal-dev] gdalwarp, by reading .RPB file
Message-ID: <XeJo1g9x-a-LrUz9dPA_bvdML4mDNRuR8UG3jDEwPl_71opZmKUermzOG89Kxcv_zq5XCnPEAGe32g-PgEx7IaxupvlgdEXOMHZrIY12YEU=@protonmail.com>

Hello GDAL Developer,

I was trying to orthorectify World View 4 raster image using the gdalwarp.
I used '-rpc' with the input of DEM file.
However, I am wondering whether this method of orthorectification is making use of the ".RBP" file data available with the World View image OR is it just warping with the input DEM file without reading the ".RPB" file contents?
How can I make it read the ".RPB" file during gdalwarp/orthorectification?

Thank you for your support.

Best
Elmir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200114/784877e8/attachment.html>

From patrick.mckendree.young at gmail.com  Tue Jan 14 19:09:05 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Tue, 14 Jan 2020 20:09:05 -0700
Subject: [gdal-dev] Recommended process for running a intersect test
 between a raster and a simple vector
In-Reply-To: <CANoBQeZAGruuDp_5ZuhamSaes5nar7BzU0C5QuMdav-mfF+QNQ@mail.gmail.com>
References: <CANoBQeZAGruuDp_5ZuhamSaes5nar7BzU0C5QuMdav-mfF+QNQ@mail.gmail.com>
Message-ID: <CADXYQQ66ossf8OA7JwezEG1+V+pk1my_GfL1TS-tCveKDmVrjw@mail.gmail.com>

One trick I like regarding accessing overview levels is to use the open
option to snag a handle direct to the overview level (see Even's post
http://erouault.blogspot.com/2014/10/warping-overviews-and-warped-overviews.html);
then you can run polygonize against a much smaller dataset.  If it's a COG
presumably it has internal overviews.

On Mon, Jan 13, 2020 at 12:22 PM Brian <mulcahy.brianp at gmail.com> wrote:

> So I am not sure if this is the right place or not. Feel free to remove if
> it is not.
>
> The problem:  I am needing to see if an extent (vector polygon, 4
> vertices) has any interaction with a raster stored in the cog format.
>
> I thought about using raster_polygonize and running a intersect but that
> is going to be way too slow and I don't need the detail at which the raster
> is stored in.
> So I was thinking of some alternatives.
> Is there anyway to output just the polygon of the raster at a certain
> overview level?
> Is there any way to run intersects on a raster without converting it?
> I know I can retrieve the extent of the raster and quickly determine if an
> extent has any interaction with that raster extent. I also know that I can
> send points(x,y) and retrieve the value of the raster at that point is
> there any way to manipulate /game this? Maybe sending the extent as
> individual points with added points in between the vertices and just
> running multiple value at location operations? For my need, some false
> positives would be acceptable. If it helps raster data is of rivers and
> inundations.
>
> Has anyone else come up with some type of process for this?
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200114/3bd377a8/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jan 15 04:01:40 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 15 Jan 2020 05:01:40 -0700 (MST)
Subject: [gdal-dev] Recommended process for running a intersect test
 between a raster and a simple vector
In-Reply-To: <CADXYQQ66ossf8OA7JwezEG1+V+pk1my_GfL1TS-tCveKDmVrjw@mail.gmail.com>
References: <CANoBQeZAGruuDp_5ZuhamSaes5nar7BzU0C5QuMdav-mfF+QNQ@mail.gmail.com>
 <CADXYQQ66ossf8OA7JwezEG1+V+pk1my_GfL1TS-tCveKDmVrjw@mail.gmail.com>
Message-ID: <1579089700290-0.post@n6.nabble.com>

And if you are lucky the image has an alpha band that is light to polygonize.
A reserved tiff tag for saving the image footprint as WKT or json could be
nice but then I guess that GDALPamDataset should be extented to support one
more method for nodata. 

-Jukka Rahkonen-  


Patrick Young wrote
> One trick I like regarding accessing overview levels is to use the open
> option to snag a handle direct to the overview level (see Even's post
> http://erouault.blogspot.com/2014/10/warping-overviews-and-warped-overviews.html);
> then you can run polygonize against a much smaller dataset.  If it's a COG
> presumably it has internal overviews.





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Wed Jan 15 04:13:22 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 15 Jan 2020 13:13:22 +0100
Subject: [gdal-dev] Motion: request 2000 USD from OSGeo for GDAL
In-Reply-To: <2106331.9e0NLLMddd@even-i700>
References: <2106331.9e0NLLMddd@even-i700>
Message-ID: <3283601.u4zFRSFEAn@even-i700>

On vendredi 10 janvier 2020 18:43:04 CET Even Rouault wrote:
> Hi,
> 
> Motion: the GDAL project requests to OSGeo a 2000 USD budget for 2020
> 

I declare this motion passed with +1 from PSC members KurtS, DanielM, 
MateuszL, NormanB, TamasS and me.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at aitchison.me.uk  Wed Jan 15 04:45:55 2020
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Wed, 15 Jan 2020 12:45:55 +0000 (GMT)
Subject: [gdal-dev] Recommended process for running a intersect test
 between a raster and a simple vector
In-Reply-To: <CANoBQeZAGruuDp_5ZuhamSaes5nar7BzU0C5QuMdav-mfF+QNQ@mail.gmail.com>
References: <CANoBQeZAGruuDp_5ZuhamSaes5nar7BzU0C5QuMdav-mfF+QNQ@mail.gmail.com>
Message-ID: <alpine.DEB.2.21.99999.351.2001151245190.17702@warden.aitchison.me.uk>

On Mon, 13 Jan 2020, Brian wrote:

> So I am not sure if this is the right place or not. Feel free to remove if
> it is not.
>
> The problem:  I am needing to see if an extent (vector polygon, 4 vertices)
> has any interaction with a raster stored in the cog format.
>
> I thought about using raster_polygonize and running a intersect but that is
> going to be way too slow and I don't need the detail at which the raster is
> stored in.
> So I was thinking of some alternatives.
> Is there anyway to output just the polygon of the raster at a certain
> overview level?
> Is there any way to run intersects on a raster without converting it?

If the data set has tiles or the driver otherwise knows where it has data
and nodata and supports it, the IGetDataCoverageStatus virtual method
    https://trac.osgeo.org/gdal/wiki/rfc63_sparse_datasets_improvements
may be useful. It takes as input a window of interest and returns whether
it is made of data, empty blocks or a mix of them.

> I know I can retrieve the extent of the raster and quickly determine if an
> extent has any interaction with that raster extent. I also know that I can
> send points(x,y) and retrieve the value of the raster at that point is
> there any way to manipulate /game this? Maybe sending the extent as
> individual points with added points in between the vertices and just
> running multiple value at location operations? For my need, some false
> positives would be acceptable. If it helps raster data is of rivers and
> inundations.

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From even.rouault at spatialys.com  Wed Jan 15 05:20:40 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 15 Jan 2020 14:20:40 +0100
Subject: [gdal-dev] gdalwarp, by reading .RPB file
In-Reply-To: <XeJo1g9x-a-LrUz9dPA_bvdML4mDNRuR8UG3jDEwPl_71opZmKUermzOG89Kxcv_zq5XCnPEAGe32g-PgEx7IaxupvlgdEXOMHZrIY12YEU=@protonmail.com>
References: <XeJo1g9x-a-LrUz9dPA_bvdML4mDNRuR8UG3jDEwPl_71opZmKUermzOG89Kxcv_zq5XCnPEAGe32g-PgEx7IaxupvlgdEXOMHZrIY12YEU=@protonmail.com>
Message-ID: <3250112.kbtldWb6tQ@even-i700>

Elmir,

> I was trying to orthorectify World View 4 raster image using the gdalwarp.
> I used '-rpc' with the input of DEM file.
> However, I am wondering whether this method of orthorectification is making
> use of the ".RBP" file data available with the World View image OR is it
> just warping with the input DEM file without reading the ".RPB" file
> contents? How can I make it read the ".RPB" file during
> gdalwarp/orthorectification?

When you use -rpc, if there is no RPC information available, an error would be 
emitted.
"""ERROR 1: Unable to compute a RPC based transformation between pixel/line 
and georeferenced coordinates for ....."""

So as you don't get one, you can assume the .RPB is used.

You can also look at the output of gdalinfo on your input image, and you 
should show a "RPC Metadata" section

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From patrick.mckendree.young at gmail.com  Wed Jan 15 14:12:30 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Wed, 15 Jan 2020 15:12:30 -0700
Subject: [gdal-dev] gdalwarp, by reading .RPB file
In-Reply-To: <EAnFYp5pXes6oshJjcYeVwvPWnlzpzZyNewXKXLPRT07T_yTaPJTKyfMeYC4HCAwP_5vapz-vFeFvc_5pkdeSWJtwxuom4k0veaDo4ryO6A=@protonmail.com>
References: <XeJo1g9x-a-LrUz9dPA_bvdML4mDNRuR8UG3jDEwPl_71opZmKUermzOG89Kxcv_zq5XCnPEAGe32g-PgEx7IaxupvlgdEXOMHZrIY12YEU=@protonmail.com>
 <CADXYQQ4m9GuCZwgoVmt03Nw=4N8JQ2rX1raZGPbLm9Zp6HzJ9w@mail.gmail.com>
 <EAnFYp5pXes6oshJjcYeVwvPWnlzpzZyNewXKXLPRT07T_yTaPJTKyfMeYC4HCAwP_5vapz-vFeFvc_5pkdeSWJtwxuom4k0veaDo4ryO6A=@protonmail.com>
Message-ID: <CADXYQQ6+vLiET4C1BUfkXsXBD-nsL0PRv_dd6u7AqvODpoRfDw@mail.gmail.com>

Hi Elmir,

RPCs are just an approximation to the underlying camera model via rational
polynomials; so just a pair of functions that go from XYZ world coordinates
to line/sample in the image.  To make an orthophoto, you first figure out
where the orthophoto is located on the earth, and at each projected xy
coordinate, you look up your height at that coordinate in the DEM and
project back to image space using the camera model (RPCs in this case).

GDAL can do this for you, as you know.  You can feed GDAL DEM to use via
the RPC_DEM option to gdalwarp; you can find some examples at
http://fwarmerdam.blogspot.com/2013/09/exploring-rpcs.html .

One thing that is easy to forget about is handling the verical datum
correctly.  Often times, DEM heights are relative to the geoid, but you
usually need the heights relative to the ellipsoid when you make your
orthophoto.  GDAL can do the conversion for you if you specify the vertical
datum right, although I usually mess it up!

Hope that helps,
Patrick

On Wed, Jan 15, 2020 at 1:49 PM elmir <elmirgeo at protonmail.com> wrote:

> Hi Patrick,
> Thank you very much for your idea. So, it is using the RPC.
> Could you little explain me what the RPC does with DEM to orthorectify the
> image?
> Thanks a lot.
> Elmir
>
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
> On Wednesday, January 15, 2020 11:13 AM, Patrick Young <
> patrick.mckendree.young at gmail.com> wrote:
>
> Hi Elmir,
>
> When you run gdalinfo against the tif, it should report what files it's
> using to generate the summary info, including rpcs.  I believe gdal
> actually checks for rpcs in a few places, the XML file, maybe the IMD file,
> and also the RPB file.
>
> You can figure it out by moving these auxiliary files elsewhere and
> rerunning gdalinfo, seeing what changes.
>
> Hope that helps!
> Patrick
>
>
> On Tue, Jan 14, 2020, 4:55 PM elmir <elmirgeo at protonmail.com> wrote:
>
>> Hello GDAL Developer,
>>
>> I was trying to orthorectify World View 4 raster image using the gdalwarp.
>> I used '-rpc' with the input of DEM file.
>> However, I am wondering whether this method of orthorectification is
>> making use of the ".RBP" file data available with the World View image OR
>> is it just warping with the input DEM file without reading the ".RPB" file
>> contents?
>> How can I make it read the ".RPB" file during gdalwarp/orthorectification?
>>
>> Thank you for your support.
>>
>> Best
>> Elmir
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200115/0d454e47/attachment.html>

From dmck at interactive.co.uk  Wed Jan 15 15:35:59 2020
From: dmck at interactive.co.uk (David McKelvie)
Date: Wed, 15 Jan 2020 23:35:59 +0000
Subject: [gdal-dev] gdal support for Postgres 12?
Message-ID: <87lfq8nvhc.fsf@interactive.co.uk>


Can anyone tell me what version of gdal introduced support for Postgres 12?

Trying with my current version to read a shapefile into a Postgresql version
12.1 database as in

ogr2ogr -nlt POLYGON -f "PostgreSQL" -a_srs EPSG:27700 \
"PG:dbname=DDD user=UUU" \
t/data/shapefiles/sample_areas/sample_areas.shp

Gives us the error

ERROR 1: ERROR:  column s.consrc does not exist
LINE 1: ...nrelid = c.oid AND a.attnum = ANY (s.conkey) AND (s.consrc L...
                                                             ^
HINT:  Perhaps you meant to reference the column "s.conkey" or the column "s.conbin".

The current version was compiled for us to provide support for ECW and MrSid
formats so I dont know the exact details, but the rpm contains
  lib/libgdal.so.20.5.1

Thanks

David McKelvie

From even.rouault at spatialys.com  Wed Jan 15 16:03:24 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jan 2020 01:03:24 +0100
Subject: [gdal-dev] gdal support for Postgres 12?
In-Reply-To: <87lfq8nvhc.fsf@interactive.co.uk>
References: <87lfq8nvhc.fsf@interactive.co.uk>
Message-ID: <2789540.3XEPWSQWBu@even-i700>

David,

> Can anyone tell me what version of gdal introduced support for Postgres 12?

2.4.3 and 3.0.2

> The current version was compiled for us to provide support for ECW and MrSid
> formats so I dont know the exact details

"gdalinfo --version" should tell you

Eveb

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Jan 15 16:14:36 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jan 2020 01:14:36 +0100
Subject: [gdal-dev] invalid data in spatial file
In-Reply-To: <16fa2f49bff.c44fcbf221301.5698686426875913271@zohocorp.com>
References: <16fa2f49bff.c44fcbf221301.5698686426875913271@zohocorp.com>
Message-ID: <2086616.vxlBOjNFyB@even-i700>

Hello,

> I am trying to convert a geojson file to csv file. but that coordinates were
> tampered i.e 32.76543 is changed as 2333432.76543. Is there a way that
> ogr2ogr conversion util will throw an error for such cases that data is
> invalid. It would be of great help if such error throwing is possible.

You should provide a sample csv file and the exact ogr2ogr command line to 
reproduce the issue

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ravitejakrishna.w at zohocorp.com  Wed Jan 15 22:29:30 2020
From: ravitejakrishna.w at zohocorp.com (Wuyyuru Ravi Teja Krishna)
Date: Thu, 16 Jan 2020 11:59:30 +0530
Subject: [gdal-dev] invalid data in spatial file
In-Reply-To: <2086616.vxlBOjNFyB@even-i700>
References: <16fa2f49bff.c44fcbf221301.5698686426875913271@zohocorp.com>
 <2086616.vxlBOjNFyB@even-i700>
Message-ID: <16fad0ae8a6.b8ac64e138327.1201161463932190725@zohocorp.com>

Hello,

The geojson file before conversion and csv file after conversion are attached below.


the ogr2ogr command line used is 

java -cp :gdal.jar -Djava.library.path=libs/ ogr2ogr "-f" "CSV" "-t_srs" "CRS:84" gdaltampered.csv gdaltampered.geojson "-lco" "GEOMETRY=AS_WKT"


thanks.



---- On Thu, 16 Jan 2020 05:44:36 +0530 Even Rouault <even.rouault at spatialys.com> wrote ----


Hello, 
 
> I am trying to convert a geojson file to csv file. but that coordinates were 
> tampered i.e 32.76543 is changed as 2333432.76543. Is there a way that 
> ogr2ogr conversion util will throw an error for such cases that data is 
> invalid. It would be of great help if such error throwing is possible. 
 
You should provide a sample csv file and the exact ogr2ogr command line to 
reproduce the issue 
 
Even 
 
-- 
Spatialys - Geospatial professional services 
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200116/b892980c/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gdaltampered.csv
Type: application/octet-stream
Size: 172 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200116/b892980c/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gdaltampered.geojson
Type: application/octet-stream
Size: 506 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200116/b892980c/attachment-0001.obj>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jan 15 22:43:27 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 15 Jan 2020 23:43:27 -0700 (MST)
Subject: [gdal-dev] invalid data in spatial file
In-Reply-To: <16fad0ae8a6.b8ac64e138327.1201161463932190725@zohocorp.com>
References: <16fa2f49bff.c44fcbf221301.5698686426875913271@zohocorp.com>
 <2086616.vxlBOjNFyB@even-i700>
 <16fad0ae8a6.b8ac64e138327.1201161463932190725@zohocorp.com>
Message-ID: <1579157007037-0.post@n6.nabble.com>

Hi,

Your GeoJSON does not tell in what coordinate reference system the
geometries are:

{ "type": "Feature", "properties": { "scalerank": 2, "featurecla":
"waterfall", "name": "Niagara Falls"}, "geometry": { "type": "Point",
"coordinates": [ -643212.061818000385017, 5765.686896063275327 ] } }

Do you know the correct CRS of the source data? If you know you must tell it
to GDAL with parameter -s_srs EPSG:xxxx.

-Jukka Rahkonen-


Ravi Teja Krishna Wuyyuru wrote
> Hello,
> 
> The geojson file before conversion and csv file after conversion are
> attached below.
> 
> 
> the ogr2ogr command line used is 
> 
> java -cp :gdal.jar -Djava.library.path=libs/ ogr2ogr "-f" "CSV" "-t_srs"
> "CRS:84" gdaltampered.csv gdaltampered.geojson "-lco" "GEOMETRY=AS_WKT"
> 
> 
> thanks.
> 
> 
> 
> ---- On Thu, 16 Jan 2020 05:44:36 +0530 Even Rouault &lt;

> even.rouault@

> &gt; wrote ----
> 
> 
> Hello, 
>  
>> I am trying to convert a geojson file to csv file. but that coordinates
>> were 
>> tampered i.e 32.76543 is changed as 2333432.76543. Is there a way that 
>> ogr2ogr conversion util will throw an error for such cases that data is 
>> invalid. It would be of great help if such error throwing is possible. 
>  
> You should provide a sample csv file and the exact ogr2ogr command line to 
> reproduce the issue 
>  
> Even 
>  
> -- 
> Spatialys - Geospatial professional services 
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> gdaltampered.csv (175 bytes)
> &lt;http://osgeo-org.1560.x6.nabble.com/attachment/5427475/0/gdaltampered.csv&gt;
> gdaltampered.geojson (514 bytes)
> &lt;http://osgeo-org.1560.x6.nabble.com/attachment/5427475/1/gdaltampered.geojson&gt;





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From dmck at interactive.co.uk  Thu Jan 16 04:46:49 2020
From: dmck at interactive.co.uk (David McKelvie)
Date: Thu, 16 Jan 2020 12:46:49 +0000
Subject: [gdal-dev] gdal support for Postgres 12?
In-Reply-To: <2789540.3XEPWSQWBu@even-i700> (message from Even Rouault on Thu,
 16 Jan 2020 01:03:24 +0100)
Message-ID: <87v9pbfu12.fsf@interactive.co.uk>


Thank you, much appreciated.

David

From even.rouault at spatialys.com  Thu Jan 16 08:35:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jan 2020 17:35:16 +0100
Subject: [gdal-dev] invalid data in spatial file
In-Reply-To: <16fad0ae8a6.b8ac64e138327.1201161463932190725@zohocorp.com>
References: <16fa2f49bff.c44fcbf221301.5698686426875913271@zohocorp.com>
 <2086616.vxlBOjNFyB@even-i700>
 <16fad0ae8a6.b8ac64e138327.1201161463932190725@zohocorp.com>
Message-ID: <1798661.teFpcjktSk@even-i700>

On jeudi 16 janvier 2020 11:59:30 CET Wuyyuru Ravi Teja Krishna wrote:
> Hello,
> 
> The geojson file before conversion and csv file after conversion are
> attached below.
> 
> 
> the ogr2ogr command line used is 
> 
> java -cp :gdal.jar -Djava.library.path=libs/ ogr2ogr "-f" "CSV" "-t_srs"
> "CRS:84" gdaltampered.csv gdaltampered.geojson "-lco" "GEOMETRY=AS_WKT"
> 

I don't reproduce the problem with recent versions of GDAL (2.4 and above)

Your original file is:

{
"type": "FeatureCollection",
"name": "ne_110m_geography_regions_points",
"features": [
{ "type": "Feature", "properties": { "scalerank": 2, "featurecla": 
"waterfall", "name": "Niagara Falls"}, "geometry": { "type": "Point", 
"coordinates": [ -643212.061818000385017, 5765.686896063275327 ] } },
{ "type": "Feature", "properties": { "scalerank": 2, "featurecla": 
"waterfall", "name": "Iguazu Falls"}, "geometry": { "type": "Point", 
"coordinates": [ -52344.582997199603767, -25433.568291925005923 ] } }
]
}

The output:

WKT,scalerank,featurecla,name
"POINT (-643212.061818 5765.68689606328)","2",waterfall,Niagara Falls
"POINT (-52344.5829971996 -25433.568291925)","2",waterfall,Iguazu Falls


Note: it is quite risky to have a GeoJSON file using obviously non-WGS84 
coordinates without specifying in it the CRS in which they are encoding. This 
can confuse a lot of tools using GeoJSON.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sfkeller at gmail.com  Thu Jan 16 11:32:34 2020
From: sfkeller at gmail.com (Stefan Keller)
Date: Thu, 16 Jan 2020 20:32:34 +0100
Subject: [gdal-dev] ASCII Gridded XYZ and "Hectare Raster" data (STATPOP
 and STATENT)
In-Reply-To: <1951928.GZuxpYx1Nc@even-i700>
References: <CAFcOn2-C4xsyOGvFRi07sBnD9xGWn_rvKSWmMH+SW_uOQzqjMg@mail.gmail.com>
 <CAFcOn2_Jm_Oviq=MRhWPMgnhn+3fVY_TBuErX+=BcqQcfk02LA@mail.gmail.com>
 <CAFcOn28QFW_7Fp35SCDX52Aps7NN8WEfX+96O+CtYdhazADtrQ@mail.gmail.com>
 <1951928.GZuxpYx1Nc@even-i700>
Message-ID: <CAFcOn29FYz2RxN_7YPctTEhiFN--rudtrK8J1qWm33VS1K9CEA@mail.gmail.com>

Bonsoir Even,

Just being curious.
> On jeudi 25 avril 2019 00:26:35 CEST Stefan Keller wrote:
> > By guessing the "-outsize 65 75" (no. of X and Y lines) I finally got
> > a result which contained a pixel size of 100, -100 meters plus
> > sensible values:
> >
> > # gdal_grid -ot UInt16 -of GTiff -zfield "C3" -a
> > nearest:radius1=71:radius2=71 -outsize 65 75 in.gpkg out.tif
> >
> > => But, I'm still looking for a hint to set pixel sizes without
> > guessing or calculating the "outsize" from the extents of the input
> > file.

Then Do., 25. Apr. 2019 01:04 Uhr Even Rouault answered:
> This is left as an exercice to the contributor to implement a -tr option
> similar to gdalwarp / gdal_translate.

Is this still an open "feature request"?
And if yes, how much time would you "guesstimate" to implement this
-tr option for some developer who does this first time?
=> hours, days, or weeks?

:Stefan

Am Do., 25. Apr. 2019 um 01:04 Uhr schrieb Even Rouault
<even.rouault at spatialys.com>:
>
> On jeudi 25 avril 2019 00:26:35 CEST Stefan Keller wrote:
> > Hi,
> >
> > Am 22. Apr. 2019 23:49 wrote regarding gdal_grid:
> > > Is there a solution for just setting output pixel size in map units
> >
> > By guessing the "-outsize 65 75" (no. of X and Y lines) I finally got
> > a result which contained a pixel size of 100, -100 meters plus
> > sensible values:
> >
> > # gdal_grid -ot UInt16 -of GTiff -zfield "C3" -a
> > nearest:radius1=71:radius2=71 -outsize 65 75 in.gpkg out.tif
> >
> > => But, I'm still looking for a hint to set pixel sizes without
> > guessing or calculating the "outsize" from the extents of the input
> > file.
>
> This is left as an exercice to the contributor to implement a -tr option
> similar to gdalwarp / gdal_translate.
>
> >
> > Then, I observed another problem: One obviously has no choice in
> > gdal_grid than to choose an interpolation method. As one can see from
> > the command above, I've chosen "nearest neighbour" as interpolation
> > method (option "-a nearest:radius1=71:radius2=71").
>
> Why 71 ? If you're grid size is 100 meters, then less than 50 meters would be
> a good radius
> You would also need to grow the raster extent by a half-pixel size, so that
> the middle of each raster point matches exactly an exact x,y coordinate of
> your CSV (GDAL convention for georeferencing is the coordinate of the top-left
> corner of a pixel area, not its center)
> By default, gdal_grid takes the extent of the vector file to set it as the
> extent of the raster file, and doesn't do this half-pixel extension, which is
> the likely cause for the effect you observed.
>
> Example:
>
> given grid.csv with
>
> x,y,z
> 100,500,1
> 300,500,3
> 100,600,4
> 200,600,5
> 300,600,6
>
> # note the missing value at 200,500
>
> $ ogr2ogr grid.gpkg grid.csv -oo X_POSSIBLE_NAMES=x -oo Y_POSSIBLE_NAMES=y
>
> # Note the extra small radius since the center of a raster grid matches a
> # input vector point, or none
> $ gdal_grid -a nearest:radius1=1:radius2=1:nodata=-99  grid.gpkg  grid.tif \
>                 -txe 50 350 -tye 650 450 -outsize 3 2 -zfield z
>
> $ gdal_translate grid.tif /vsistdout/ -of aaigrid
> ncols        3
> nrows        2
> xllcorner    50.000000000000
> yllcorner    450.000000000000
> cellsize     100.000000000000
> NODATA_value  -99
>  4.0 5 6
>  1 -99 3
>
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From even.rouault at spatialys.com  Thu Jan 16 12:30:12 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jan 2020 21:30:12 +0100
Subject: [gdal-dev] ASCII Gridded XYZ and "Hectare Raster" data (STATPOP
	and STATENT)
In-Reply-To: <CAFcOn29FYz2RxN_7YPctTEhiFN--rudtrK8J1qWm33VS1K9CEA@mail.gmail.com>
References: <CAFcOn2-C4xsyOGvFRi07sBnD9xGWn_rvKSWmMH+SW_uOQzqjMg@mail.gmail.com>
 <1951928.GZuxpYx1Nc@even-i700>
 <CAFcOn29FYz2RxN_7YPctTEhiFN--rudtrK8J1qWm33VS1K9CEA@mail.gmail.com>
Message-ID: <2065180.B3o2EgiKTi@even-i700>

> Is this still an open "feature request"?

Yes

> And if yes, how much time would you "guesstimate" to implement this
> -tr option for some developer who does this first time?
> => hours, days, or weeks?

I'm probably one of the least placed person to evaluate the load for a first-
time contributor :-). I don't think there's a lot of code to add, there's some 
bits to move. I'd say perhaps 2 days of total load, including code changes, 
autotest & doc additions and addressing code review. Assuming familiarity with 
C++ and Python.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sfkeller at gmail.com  Thu Jan 16 13:12:48 2020
From: sfkeller at gmail.com (Stefan Keller)
Date: Thu, 16 Jan 2020 22:12:48 +0100
Subject: [gdal-dev] ASCII Gridded XYZ and "Hectare Raster" data (STATPOP
 and STATENT)
In-Reply-To: <2065180.B3o2EgiKTi@even-i700>
References: <CAFcOn2-C4xsyOGvFRi07sBnD9xGWn_rvKSWmMH+SW_uOQzqjMg@mail.gmail.com>
 <1951928.GZuxpYx1Nc@even-i700>
 <CAFcOn29FYz2RxN_7YPctTEhiFN--rudtrK8J1qWm33VS1K9CEA@mail.gmail.com>
 <2065180.B3o2EgiKTi@even-i700>
Message-ID: <CAFcOn28Gpa7eFR=WfDQ1Q=u5DEAn6akrQ4pdvKKLBUmgdXxHGA@mail.gmail.com>

Thanks! That confirms my guess.
:Stefan

Am Do., 16. Jan. 2020 um 21:30 Uhr schrieb Even Rouault
<even.rouault at spatialys.com>:
>
> > Is this still an open "feature request"?
>
> Yes
>
> > And if yes, how much time would you "guesstimate" to implement this
> > -tr option for some developer who does this first time?
> > => hours, days, or weeks?
>
> I'm probably one of the least placed person to evaluate the load for a first-
> time contributor :-). I don't think there's a lot of code to add, there's some
> bits to move. I'd say perhaps 2 days of total load, including code changes,
> autotest & doc additions and addressing code review. Assuming familiarity with
> C++ and Python.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From even.rouault at spatialys.com  Fri Jan 17 06:45:49 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 17 Jan 2020 15:45:49 +0100
Subject: [gdal-dev] Fwd: CF-conventions
Message-ID: <2139797.jXyBh67mWN@even-i700>

Hi,

If anybody has opinions about a change in the netCDF CF Convention regarding 
the geostationary projection, see below.

Even

----------  Forwarded Message  ----------

Subject: CF-conventions
Date: vendredi 17 janvier 2020, 12:01:51 CET
From: João Macedo <magau.macedo at gmail.com>
To: even.rouault at spatialys.com

Hi Evan,

I'v seen that you are the maintainer of the GDAL library.
Thus, I'd like to envite you to express your opinion, if possible, about an
issue that has been opened in the cf-conventions repository (
https://github.com/cf-convention/cf-conventions/issues/230).
Just to be clear, I'm not representing any institution but I've been
producing/processing netcdf files for a while...
The reason I'm getting in contact, is because I'm not clear about the
impacts of this change form your side.
Since this seems to be a change in the CF standard that will be used only
for the "geostationary" projection, I'm afraid it will increase the number
of exceptions in your code and all the libraries that support this
projection...
Iven if you don't want to participate in the discussion it is good that you
be aware of this.

Thanks in advance,
Best Regards,

João Macedo

-----------------------------------------
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at aitchison.me.uk  Sun Jan 19 11:50:54 2020
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sun, 19 Jan 2020 19:50:54 +0000 (GMT)
Subject: [gdal-dev] illegal axis orientation combination with GDAL v2.4.4
Message-ID: <alpine.DEB.2.21.99999.351.2001191349570.23727@warden.aitchison.me.uk>


GDAL 2.4.4 crashes for me after reporting several
 	"ERROR 1: illegal axis orientation combination" 
errors with GeoTIFF files from the test suite that succeed with 2.4.3, 
3.0.2 and 3.0.3.

I haven't managed to find this error string in the source.

Any idea what I'm doing wrong in my build ?
My configure is
 	make distclean
 	./configure  --prefix=/usr/local/gdal2.4.4 --with-poppler
 	make ; make install

# uname -a
Linux warden 5.3.0-26-generic #28-Ubuntu SMP Wed Dec 18 05:37:46 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
#
# export CPL_DEBUG=on
# gdalinfo --version
GNM: GNMRegisterAllInternal
GNM: RegisterGNMFile
GNM: RegisterGNMdatabase
GDAL 2.4.4, released 2020/01/08
#
# gdalinfo ./gdalautotest-2.4.4/gdrivers/data/utm.tif
GNM: GNMRegisterAllInternal
GNM: RegisterGNMFile
GNM: RegisterGNMdatabase
GDAL: GDALOpen(./gdalautotest-2.4.4/gdrivers/data/utm.tif, this=0x55fbe1b3f4a0) succeeds as GTiff.
Driver: GTiff/GeoTIFF
GDAL: GDALDefaultOverviews::OverviewScan()
Files: ./gdalautotest-2.4.4/gdrivers/data/utm.tif
Size is 512, 512
Coordinate System is:
PROJCS["NAD27 / UTM zone 11N",
     GEOGCS["NAD27",
         DATUM["North_American_Datum_1927",
             SPHEROID["Clarke 1866",6378206.4,294.9786982138982,
                 AUTHORITY["EPSG","7008"]],
             AUTHORITY["EPSG","6267"]],
         PRIMEM["Greenwich",0,
             AUTHORITY["EPSG","8901"]],
         UNIT["degree",0.0174532925199433,
             AUTHORITY["EPSG","9122"]],
         AUTHORITY["EPSG","4267"]],
     PROJECTION["Transverse_Mercator"],
     PARAMETER["latitude_of_origin",0],
     PARAMETER["central_meridian",-117],
     PARAMETER["scale_factor",0.9996],
     PARAMETER["false_easting",500000],
     PARAMETER["false_northing",0],
     UNIT["metre",1,
         AUTHORITY["EPSG","9001"]],
     AXIS["Easting",EAST],
     AXIS["Northing",NORTH],
     AUTHORITY["EPSG","26711"]]
Origin = (440720.000000000000000,3751320.000000000000000)
Pixel Size = (60.000000000000000,-60.000000000000000)
Metadata:
   AREA_OR_POINT=Area
Image Structure Metadata:
   INTERLEAVE=BAND
OGRCT: PROJ >= 4.8.0 features enabled
OGRCT: Source: +proj=utm +zone=11 +datum=NAD27 +units=m +no_defs
OGRCT: Target: +proj=longlat +datum=NAD27 +no_defs
Corner Coordinates:
ERROR 1: illegal axis orientation combination
Upper Left  (  440720.000, 3751320.000)
ERROR 1: illegal axis orientation combination
Lower Left  (  440720.000, 3720600.000)
ERROR 1: illegal axis orientation combination
Upper Right (  471440.000, 3751320.000)
ERROR 1: illegal axis orientation combination
Lower Right (  471440.000, 3720600.000)
ERROR 1: illegal axis orientation combination
Center      (  456080.000, 3735960.000)
Segmentation fault (core dumped)

# gdb /usr/local/gdal2.4.4/bin/gdalinfo core
GNU gdb (Ubuntu 8.3-0ubuntu1) 8.3
Copyright (C) 2019 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later 
<http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
     <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /usr/local/gdal2.4.4/bin/gdalinfo...
[New LWP 26783]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `gdalinfo ./gdalautotest-2.4.4/gdrivers/data/utm.tif'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x00007f854154e17d in pj_free () from /usr/local/lib/libproj.so
(gdb) where
#0  0x00007f854154e17d in pj_free () from /usr/local/lib/libproj.so
#1  0x00007f854753fe34 in OGRProj4CT::~OGRProj4CT (this=0x55cccd6176f0,
     __in_chrg=<optimised out>) at ogrct.cpp:591
#2  0x00007f854753ff6d in OGRProj4CT::~OGRProj4CT (this=0x55cccd6176f0,
     __in_chrg=<optimised out>) at ogrct.cpp:572
#3  0x00007f8547621de2 in GDALInfo (hDataset=0x55cccd60f4a0, psOptions=0x55cccd60bfd0)
     at gdalinfo_lib.cpp:703
#4  0x000055cccbcfb54e in main (argc=<optimised out>, argv=<optimised out>)
     at gdalinfo_bin.cpp:213

(though the errors printing the "Corner Coordinates" idicate that the 
location of the crash is not the real problem.)



From even.rouault at spatialys.com  Sun Jan 19 12:14:23 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 19 Jan 2020 21:14:23 +0100
Subject: [gdal-dev] illegal axis orientation combination with GDAL v2.4.4
In-Reply-To: <alpine.DEB.2.21.99999.351.2001191349570.23727@warden.aitchison.me.uk>
References: <alpine.DEB.2.21.99999.351.2001191349570.23727@warden.aitchison.me.uk>
Message-ID: <2180881.Pzpyyi2ozv@even-i700>

On dimanche 19 janvier 2020 19:50:54 CET Andrew C Aitchison wrote:
> GDAL 2.4.4 crashes for me after reporting several
>  	"ERROR 1: illegal axis orientation combination"
> errors with GeoTIFF files from the test suite that succeed with 2.4.3,
> 3.0.2 and 3.0.3.
> 
> I haven't managed to find this error string in the source.
> 
> Any idea what I'm doing wrong in my build ?

Your build is likely linking against different version of libproj
as in a similar case:
http://osgeo-org.1560.x6.nabble.com/gdal-dev-illegal-axis-orientation-combination-when-re-projecting-td5334476.html

check with "ldd .libs/libgdal.so | grep proj"

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at aitchison.me.uk  Sun Jan 19 14:10:14 2020
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sun, 19 Jan 2020 22:10:14 +0000 (GMT)
Subject: [gdal-dev] illegal axis orientation combination with GDAL v2.4.4
In-Reply-To: <2180881.Pzpyyi2ozv@even-i700>
References: <alpine.DEB.2.21.99999.351.2001191349570.23727@warden.aitchison.me.uk>
 <2180881.Pzpyyi2ozv@even-i700>
Message-ID: <alpine.DEB.2.22.394.2001192208500.23190@warden.aitchison.me.uk>

On Sun, 19 Jan 2020, Even Rouault wrote:

> On dimanche 19 janvier 2020 19:50:54 CET Andrew C Aitchison wrote:
>> GDAL 2.4.4 crashes for me after reporting several
>>  	"ERROR 1: illegal axis orientation combination"
>> errors with GeoTIFF files from the test suite that succeed with 2.4.3,
>> 3.0.2 and 3.0.3.
>>
>> I haven't managed to find this error string in the source.
>>
>> Any idea what I'm doing wrong in my build ?
>
> Your build is likely linking against different version of libproj
> as in a similar case:
> http://osgeo-org.1560.x6.nabble.com/gdal-dev-illegal-axis-orientation-combination-when-re-projecting-td5334476.html
>
> check with "ldd .libs/libgdal.so | grep proj"

That was indeed the problem.
Adding  --with-proj=yes to get the config line:
 	./configure  --prefix=/usr/local/gdal2.4.4 --with-poppler --with-proj=yes
did the trick.

Thanks.


From mbu at teleplan.no  Tue Jan 21 04:18:31 2020
From: mbu at teleplan.no (Matsamentet)
Date: Tue, 21 Jan 2020 05:18:31 -0700 (MST)
Subject: [gdal-dev] Making OGR raise exceptions in Python
Message-ID: <1579609111156-0.post@n6.nabble.com>

Hi!

I'm developing a Python script which uses both gdal and ogr. Since
exceptions are not raised by default, I have added to my script

*gdal.UseExceptions() 
ogr.UseExceptions()*

*raster_ds = gdal.Open('c:/nonexistant.tif')* raises an exception as
expected.  
*vector_ds = ogr.Open('c:/nonexistant.shp')* on the other hand, quietly
returns nothing with no exception raised. It also tried other methods of ogr
like GetDriver, 

Is this the intended behaviour, and if so, is there another way to make ogr
raise exceptions?

I'm using GDAL 3.0.2 and Python 3.7.6



Thanks!

Mats Budalen



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From Mikael.Rittri at carmenta.com  Tue Jan 21 06:28:00 2020
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Tue, 21 Jan 2020 14:28:00 +0000
Subject: [gdal-dev] Tiff file with CMYK colors that appears much worse with
 GDAL than in Windows Photo Viewer
Message-ID: <26b2c470a6e046289e36580e6a2853d9@carmenta.com>

Hello, list. I need some advice. 

We have a customer with some Tiff files with CMYK colors. It is a rasterized vector
map, not an orthophoto, so the assigned colors are somewhat arbitrary, of course. 

The file colors look pleasant enough when opened with Windows Photo Viewer, and 
these are the correct colors according to the customer. When I open them with QGIS 
or Carmenta Engine, I get worse colors (but identical in QGIS and Carmenta Engine).
Another GIS program I tried displays even worse colors. 

The bad colors appear lighter and more saturated, almost fluorescent, and some hues 
are clearly different. For example, the original has fairly dark, blue (and slightly green) 
texts in water, while the water areas are a very light blue. In QGIS and Carmenta Engine, 
the texts in water become saturated cyan and the water areas become a nearly white 
cyan. The third GIS program I tried shows the same saturated cyan for texts in water 
but an almost-saturated cyan for water areas, which gives very bad contrast.

I understand that to convert from CMYK to RGB one needs to know the CMYK color 
profile (and the RGB color profile too, I guess). 

Window Properties says that the these Tiff files have "Color Representation: Uncalibrated". 

gdalinfo says, among other things, that 

  TIFFTAG_SOFTWARE=Adobe Photoshop CC (Windows)
  SOURCE_COLOR_SPACE=CMYK

and that the bands are Red/Green/Blue/Alpha. But I guess these band colors mean
after automatic color conversion to RGB, since gdalinfo with "GTIFF_RAW:" prefixed 
to the file name says that bands are Cyan/Magenta/Yellow/Black. 

tiffinfo gives, among other things, a long XML text, x:xmpmeta, but the only color 
information I could find in it was 

    <photoshop:ColorMode>4</photoshop:ColorMode>

Finally, I noticed a section about "Color Profile Metadata" at https://gdal.org/drivers/raster/gtiff.html, 
but I didn't understand how to use it. 

I guess my first question should be: how one would make the GDAL API respect the 
Color Profile Metadata in our tiff files? It seems the default setting does not respect some 
embedded CMYK profile that at least Windows Photo Viewer can find? Or is the problem 
that Windows Photo Viewer can pick up enough information from the XML line about 
photoshop:ColorMode = 4, while GDAL cannot find the CMYK profile from this kind of format? 

My understanding of color spaces is perhaps only halfway along https://xkcd.com/1882,
so I probably need some pretty basic hints on where to learn more! 

Regards, 

Mikael Rittri
Carmenta Geospatial Technologies
www.carmenta.com



From mulcahy.brianp at gmail.com  Tue Jan 21 07:15:55 2020
From: mulcahy.brianp at gmail.com (Brian)
Date: Tue, 21 Jan 2020 10:15:55 -0500
Subject: [gdal-dev] Reprojection issue that works in GDAL 2.4.0 but not 3.0+
Message-ID: <CANoBQeYivFz+8Hnje48UDkiB8BVA7Bc3mXuK_BGBoEGYV0THvw@mail.gmail.com>

I am trying to go from (this is the .prj from an ESRI shapefile)
PROJCS["USA_Contiguous_Albers_Equal_Area_Conic_USGS_version",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Albers"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",-96.0],PARAMETER["Standard_Parallel_1",29.5],PARAMETER["Standard_Parallel_2",45.5],PARAMETER["Latitude_Of_Origin",23.0],UNIT["Foot_US",0.3048006096012192]]

to EPSG:4326

I have a version of GDAL that is 2.4.0 with PROJ version 6.0.0 and it
re-projects just fine. When trying to re-project in 3.0+ it'll put a shape
that should be in Arkansas to somewhere in NorthEast Canada. I tried GDAL
3.0 with the latest PROJ as well as forcing it to 6.1.0 and 6.0.0 but still
it did not work.
Something strange did happen when I changed to proj 6.0.0 with GDAL v3.0+
I received this error:
" ERROR 1: Failed to reproject feature 0 (geometry probably out of source
or destination SRS).
  ERROR 1: Terminating translation prematurely after failed"

but that goes away after updated proj 6.1.0 and to 6.3.0

https://imgur.com/a/zyh9Mpg

In the above link orange is GDAL 3.0
teal/blue is GDAL 2.4.0.
Changing PROJ version had no effect.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200121/5ca0d909/attachment.html>

From even.rouault at spatialys.com  Tue Jan 21 08:09:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 21 Jan 2020 17:09:07 +0100
Subject: [gdal-dev] Reprojection issue that works in GDAL 2.4.0 but not
	3.0+
In-Reply-To: <CANoBQeYivFz+8Hnje48UDkiB8BVA7Bc3mXuK_BGBoEGYV0THvw@mail.gmail.com>
References: <CANoBQeYivFz+8Hnje48UDkiB8BVA7Bc3mXuK_BGBoEGYV0THvw@mail.gmail.com>
Message-ID: <5013069.EY4BNX7byF@even-i700>

Brian,

> I am trying to go from (this is the .prj from an ESRI shapefile)
> PROJCS["USA_Contiguous_Albers_Equal_Area_Conic_USGS_version",GEOGCS["GCS_Nor
> th_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.
> 0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]]
> ,PROJECTION["Albers"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northi
> ng",0.0],PARAMETER["Central_Meridian",-96.0],PARAMETER["Standard_Parallel_1"
> ,29.5],PARAMETER["Standard_Parallel_2",45.5],PARAMETER["Latitude_Of_Origin",
> 23.0],UNIT["Foot_US",0.3048006096012192]]
> 
> to EPSG:4326

Can you share the shapefile, and the command line you use ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Jan 21 09:24:08 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 21 Jan 2020 18:24:08 +0100
Subject: [gdal-dev] Reprojection issue that works in GDAL 2.4.0 but not
	3.0+
In-Reply-To: <5013069.EY4BNX7byF@even-i700>
References: <CANoBQeYivFz+8Hnje48UDkiB8BVA7Bc3mXuK_BGBoEGYV0THvw@mail.gmail.com>
 <5013069.EY4BNX7byF@even-i700>
Message-ID: <1605025.GgqiZ2At9k@even-i700>

On mardi 21 janvier 2020 17:09:07 CET Even Rouault wrote:
> Brian,
> 
> > I am trying to go from (this is the .prj from an ESRI shapefile)
> > PROJCS["USA_Contiguous_Albers_Equal_Area_Conic_USGS_version",GEOGCS["GCS_N
> > or
> > th_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",63781
> > 37.
> > 0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.017453292519943
> > 3]]
> > ,PROJECTION["Albers"],PARAMETER["False_Easting",0.0],PARAMETER["False_Nor
> > thi
> > ng",0.0],PARAMETER["Central_Meridian",-96.0],PARAMETER["Standard_Parallel
> > _1"
> > ,29.5],PARAMETER["Standard_Parallel_2",45.5],PARAMETER["Latitude_Of_Origi
> > n", 23.0],UNIT["Foot_US",0.3048006096012192]]
> > 
> > to EPSG:4326
> 
> Can you share the shapefile, and the command line you use ?

OK, so with the test data you provided to me, I've determined that this is an 
issue in PROJ. Fix submitted per	https://github.com/OSGeo/PROJ/pull/1863

The issue was due to a misidentification to ESRI:102039 which has the same 
name and projection parameters, except that ESRI:102039 uses metre as the 
linear unit, and not foot_us...

As a workaround, you can edit the .prj to modify the PROJCS name to be
"USA_Contiguous_Albers_Equal_Area_Conic_USGS_version_footus"
(addition of "_footus" at the end. Anything would do)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lars.schylberg at blixtmail.se  Tue Jan 21 09:45:04 2020
From: lars.schylberg at blixtmail.se (Lars Schylberg)
Date: Tue, 21 Jan 2020 18:45:04 +0100
Subject: [gdal-dev] Tiff file with CMYK colors that appears much worse
 with GDAL than in Windows Photo Viewer
In-Reply-To: <26b2c470a6e046289e36580e6a2853d9@carmenta.com>
References: <26b2c470a6e046289e36580e6a2853d9@carmenta.com>
Message-ID: <7d389289-7af7-b4f2-0053-2cc28cfd41be@blixtmail.se>

Hi,

When I have more advanced needs in tiff-processing I usally use 
ImageMagick "convert" command.

It has more options to do advanced things with images.

Convert will complain that it doesn't understand the geotiff tags, but 
that is something You could ignore, it is just warnings.

Use the the tifflib utilities to reapply the the geo information to the 
tif-file when You are done.

     listgeo -no_norm original.tif > original.geo

     geotifcp -g original.geo modified.tif modified_geotiff.tif

The ImageMagick identify command could also be a useful tool.

Hope this will help You in the right direction

/Lars Schylberg, Saab


Den 2020-01-21 kl. 15:28, skrev Mikael Rittri:
> Hello, list. I need some advice.
>
> We have a customer with some Tiff files with CMYK colors. It is a rasterized vector
> map, not an orthophoto, so the assigned colors are somewhat arbitrary, of course.
>
> The file colors look pleasant enough when opened with Windows Photo Viewer, and
> these are the correct colors according to the customer. When I open them with QGIS
> or Carmenta Engine, I get worse colors (but identical in QGIS and Carmenta Engine).
> Another GIS program I tried displays even worse colors.
>
> The bad colors appear lighter and more saturated, almost fluorescent, and some hues
> are clearly different. For example, the original has fairly dark, blue (and slightly green)
> texts in water, while the water areas are a very light blue. In QGIS and Carmenta Engine,
> the texts in water become saturated cyan and the water areas become a nearly white
> cyan. The third GIS program I tried shows the same saturated cyan for texts in water
> but an almost-saturated cyan for water areas, which gives very bad contrast.
>
> I understand that to convert from CMYK to RGB one needs to know the CMYK color
> profile (and the RGB color profile too, I guess).
>
> Window Properties says that the these Tiff files have "Color Representation: Uncalibrated".
>
> gdalinfo says, among other things, that
>
>    TIFFTAG_SOFTWARE=Adobe Photoshop CC (Windows)
>    SOURCE_COLOR_SPACE=CMYK
>
> and that the bands are Red/Green/Blue/Alpha. But I guess these band colors mean
> after automatic color conversion to RGB, since gdalinfo with "GTIFF_RAW:" prefixed
> to the file name says that bands are Cyan/Magenta/Yellow/Black.
>
> tiffinfo gives, among other things, a long XML text, x:xmpmeta, but the only color
> information I could find in it was
>
>      <photoshop:ColorMode>4</photoshop:ColorMode>
>
> Finally, I noticed a section about "Color Profile Metadata" at https://gdal.org/drivers/raster/gtiff.html,
> but I didn't understand how to use it.
>
> I guess my first question should be: how one would make the GDAL API respect the
> Color Profile Metadata in our tiff files? It seems the default setting does not respect some
> embedded CMYK profile that at least Windows Photo Viewer can find? Or is the problem
> that Windows Photo Viewer can pick up enough information from the XML line about
> photoshop:ColorMode = 4, while GDAL cannot find the CMYK profile from this kind of format?
>
> My understanding of color spaces is perhaps only halfway along https://xkcd.com/1882,
> so I probably need some pretty basic hints on where to learn more!
>
> Regards,
>
> Mikael Rittri
> Carmenta Geospatial Technologies
> www.carmenta.com
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From lucascaixeta.gt4w at gmail.com  Tue Jan 21 12:29:10 2020
From: lucascaixeta.gt4w at gmail.com (Lucas Caixeta Lucas GT4W)
Date: Tue, 21 Jan 2020 18:29:10 -0200
Subject: [gdal-dev]  How to convert GeoJson to EsriJson
Message-ID: <CAGp3XRya2rzGvFZ70K1uSkoqHxq_wsYWqb2U-QqS6uxnj4d0Mw@mail.gmail.com>

Hi, good evening!
I'm new on the use ofo org2org, trying to learn the library. I couldn't
find any info about it on google so I decide to ask it here.

I'm trying to convert a shape file into a esri json. I was able to convert
the shapefile to geojson, but was not able to convert the same file to
esrijson.

I tried to convert geojson to esrijson either but got an error
this message, ESRIJSON driver does not support data source creation.

------
$ ogr2ogr -f ESRIJSON  file_output.json cities.json
ERROR 1: ESRIJSON driver does not support data source creation.
------

I'm using GDAL 2.4.2, released 2019/06/28.
I know it seens a sily question, but any help wold be very welcome.
Thak you for all the attention.

-- 


*LUCAS CAIXETA SIMÃO*
Analista de Sistemas

*www.gt4w.com.br <http://www.gt4w.com.br/>*Fone/Fax: (35) 3822-8259
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200121/b71eb571/attachment.html>

From mateusz at loskot.net  Tue Jan 21 12:38:18 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 21 Jan 2020 21:38:18 +0100
Subject: [gdal-dev] How to convert GeoJson to EsriJson
In-Reply-To: <CAGp3XRya2rzGvFZ70K1uSkoqHxq_wsYWqb2U-QqS6uxnj4d0Mw@mail.gmail.com>
References: <CAGp3XRya2rzGvFZ70K1uSkoqHxq_wsYWqb2U-QqS6uxnj4d0Mw@mail.gmail.com>
Message-ID: <CABUeae-=0HoPj4T4D+LS-Vs=ZV9=v8Qpi30omsDVHObJGj216A@mail.gmail.com>

On Tue, 21 Jan 2020 at 21:29, Lucas Caixeta Lucas GT4W <
lucascaixeta.gt4w at gmail.com> wrote:

>
> I tried to convert geojson to esrijson either but got an error
> this message, ESRIJSON driver does not support data source creation.
>
> ------
> $ ogr2ogr -f ESRIJSON  file_output.json cities.json
> ERROR 1: ESRIJSON driver does not support data source creation.
>

I'd say, the error is clear.

Additionally, https://gdal.org/drivers/vector/esrijson.html says
"This driver can read the JSON output of Feature Service..."
and nowhere says read/write.

TL;TR: ESRIJSON can only read, AFAIK.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200121/ffb39133/attachment.html>

From lucascaixeta.gt4w at gmail.com  Tue Jan 21 12:44:18 2020
From: lucascaixeta.gt4w at gmail.com (Lucas Caixeta Lucas GT4W)
Date: Tue, 21 Jan 2020 18:44:18 -0200
Subject: [gdal-dev] How to convert GeoJson to EsriJson
In-Reply-To: <CABUeae-=0HoPj4T4D+LS-Vs=ZV9=v8Qpi30omsDVHObJGj216A@mail.gmail.com>
References: <CAGp3XRya2rzGvFZ70K1uSkoqHxq_wsYWqb2U-QqS6uxnj4d0Mw@mail.gmail.com>
 <CABUeae-=0HoPj4T4D+LS-Vs=ZV9=v8Qpi30omsDVHObJGj216A@mail.gmail.com>
Message-ID: <CAGp3XRyV_E1b619pKVjBbPdViJ57maFpioYTYRYi2sjOEuFJFw@mail.gmail.com>

Thank you Mateus!! you asnwer was very enlightening.

So, problaby it is not possible to do this parse right? is there a way to
get a esri type geojson?

Best regards.

Mateusz Loskot <mateusz at loskot.net> escreveu no dia terça, 21/01/2020 à(s)
18:37:

> On Tue, 21 Jan 2020 at 21:29, Lucas Caixeta Lucas GT4W <
> lucascaixeta.gt4w at gmail.com> wrote:
>
>>
>> I tried to convert geojson to esrijson either but got an error
>> this message, ESRIJSON driver does not support data source creation.
>>
>> ------
>> $ ogr2ogr -f ESRIJSON  file_output.json cities.json
>> ERROR 1: ESRIJSON driver does not support data source creation.
>>
>
> I'd say, the error is clear.
>
> Additionally, https://gdal.org/drivers/vector/esrijson.html says
> "This driver can read the JSON output of Feature Service..."
> and nowhere says read/write.
>
> TL;TR: ESRIJSON can only read, AFAIK.
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 


*LUCAS CAIXETA SIMÃO*
Analista de Sistemas

*www.gt4w.com.br <http://www.gt4w.com.br/>*Fone/Fax: (35) 3822-8259
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200121/06ff7326/attachment.html>

From mateusz at loskot.net  Tue Jan 21 13:11:27 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 21 Jan 2020 22:11:27 +0100
Subject: [gdal-dev] How to convert GeoJson to EsriJson
In-Reply-To: <CAGp3XRyV_E1b619pKVjBbPdViJ57maFpioYTYRYi2sjOEuFJFw@mail.gmail.com>
References: <CAGp3XRya2rzGvFZ70K1uSkoqHxq_wsYWqb2U-QqS6uxnj4d0Mw@mail.gmail.com>
 <CABUeae-=0HoPj4T4D+LS-Vs=ZV9=v8Qpi30omsDVHObJGj216A@mail.gmail.com>
 <CAGp3XRyV_E1b619pKVjBbPdViJ57maFpioYTYRYi2sjOEuFJFw@mail.gmail.com>
Message-ID: <CABUeae-uZmbSfdaFFvunViHCKfjXsCXxQtOV=L3wY4z=EH_yGQ@mail.gmail.com>

Well, the driver says no and I'm not aware of any workarounds to make it
say yes or make GeoJSON driver output yhr ESRIJSON.

GDAL 2.3 extracted read-only ESRIJSON driver from read-write GeoJSON
driver.

Mateusz Loskot, mateusz at loskot.net
(Sent from mobile, may suffer from top-posting)

On Tue, 21 Jan 2020, 21:44 Lucas Caixeta Lucas GT4W, <
lucascaixeta.gt4w at gmail.com> wrote:

> Thank you Mateus!! you asnwer was very enlightening.
>
> So, problaby it is not possible to do this parse right? is there a way to
> get a esri type geojson?
>
> Best regards.
>
> Mateusz Loskot <mateusz at loskot.net> escreveu no dia terça, 21/01/2020
> à(s) 18:37:
>
>> On Tue, 21 Jan 2020 at 21:29, Lucas Caixeta Lucas GT4W <
>> lucascaixeta.gt4w at gmail.com> wrote:
>>
>>>
>>> I tried to convert geojson to esrijson either but got an error
>>> this message, ESRIJSON driver does not support data source creation.
>>>
>>> ------
>>> $ ogr2ogr -f ESRIJSON  file_output.json cities.json
>>> ERROR 1: ESRIJSON driver does not support data source creation.
>>>
>>
>> I'd say, the error is clear.
>>
>> Additionally, https://gdal.org/drivers/vector/esrijson.html says
>> "This driver can read the JSON output of Feature Service..."
>> and nowhere says read/write.
>>
>> TL;TR: ESRIJSON can only read, AFAIK.
>>
>> Best regards,
>> --
>> Mateusz Loskot, http://mateusz.loskot.net
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
>
>
> *LUCAS CAIXETA SIMÃO*
> Analista de Sistemas
>
> *www.gt4w.com.br <http://www.gt4w.com.br/>*Fone/Fax: (35) 3822-8259
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200121/89c2a62b/attachment.html>

From szekerest at gmail.com  Wed Jan 22 04:49:06 2020
From: szekerest at gmail.com (Tamas Szekeres)
Date: Wed, 22 Jan 2020 13:49:06 +0100
Subject: [gdal-dev] GDAL and proj dll name.
Message-ID: <CACALY+SnxD1MU13GyOZrVqU5jjU75RYzhUb=pyZ1YydYQOGoBw@mail.gmail.com>

Hi,

As far as I see the current cmake builds of proj4/proj6 includes the proj
version number into the dll names like *proj_4_9.dll* for a Windows build.

However the GDAL build (like for
https://github.com/OSGeo/gdal/blob/v2.4.4/gdal/ogr/ogrct.cpp) still using
the default proj.dll name which cannot be configured in the opt file.

It is true that if we set the PROJSO config option properly the problem
disappears, something like:

Gdal.SetConfigOption("PROJSO", "proj_4_9.dll");

But that could also be avoided if there was a compile time setting to
specify the proj dll name. Does it make sense to establish a compile time
option for this purpose?

Thanks,

Tamas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200122/6f50a032/attachment-0001.html>

From even.rouault at spatialys.com  Wed Jan 22 06:01:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 22 Jan 2020 15:01:32 +0100
Subject: [gdal-dev] GDAL and proj dll name.
In-Reply-To: <CACALY+SnxD1MU13GyOZrVqU5jjU75RYzhUb=pyZ1YydYQOGoBw@mail.gmail.com>
References: <CACALY+SnxD1MU13GyOZrVqU5jjU75RYzhUb=pyZ1YydYQOGoBw@mail.gmail.com>
Message-ID: <54486735.a1Uk6bjfgb@even-i700>

Hi Tamas,

> However the GDAL build (like for
> https://github.com/OSGeo/gdal/blob/v2.4.4/gdal/ogr/ogrct.cpp) still using
> the default proj.dll name which cannot be configured in the opt file.

It can. You need to define -DPROJ_STATIC for that. -DPROJ_STATIC is a bit 
confusing. It didn't mean a static build, but something that was linked at 
build time (either a static or dynamic lib), to be opposed at being loaded at 
runtime with LoadLibrary(). That's what you want to use.

# PROJ stuff
# Uncomment the following lines to link PROJ library statically. Otherwise
# it will be linked dynamically during runtime.
# To use the new API of proj5 or later, use
#PROJ_FLAGS = -DPROJ_STATIC -DPROJ_VERSION=5
# for proj 4.x:
#PROJ_FLAGS = -DPROJ_STATIC -DPROJ_VERSION=4

#PROJ_INCLUDE = -Id:\projects\proj.4\src
#PROJ_LIBRARY = d:\projects\proj.4\src\proj_i.lib

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From eacosta at uesc.br  Wed Jan 22 06:21:25 2020
From: eacosta at uesc.br (Eduardo Almeida Costa)
Date: Wed, 22 Jan 2020 11:21:25 -0300
Subject: [gdal-dev] How to indicate different location for specific libs ?
	RGDAL
Message-ID: <CADRvnO3n0hKB0o0Xz2cjydF21CypcGbnbgR7TnJTj6o45-rx3A@mail.gmail.com>

How to indicate different location for specific libs for rgdal?
I have libgif.so.4 in a different location.

/usr/bin/ld: warning: libgif.so.4, needed by
/home/helder.almeida/local/gnu/gdal/3.0.3/lib/libgdal.so, not found (try
using -rpath or -rpath-link)

I tried:
PKG_CPPFLAGS="-I/home/helder.almeida/local/gnu/giflib/5.2.1/include
-DACCEPT_USE_OF_DEPRECATED_PROJ_API_H"
PKG_LIBS="-L/home/helder.almeida/local/gnu/giflib/5.2.1/lib -lgdal"
./configure

and I tried the LD_LIBRARY_PATH variable, but with no success.

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200122/3d64eee2/attachment.html>

From szekerest at gmail.com  Wed Jan 22 07:48:39 2020
From: szekerest at gmail.com (Tamas Szekeres)
Date: Wed, 22 Jan 2020 16:48:39 +0100
Subject: [gdal-dev] GDAL and proj dll name.
In-Reply-To: <54486735.a1Uk6bjfgb@even-i700>
References: <CACALY+SnxD1MU13GyOZrVqU5jjU75RYzhUb=pyZ1YydYQOGoBw@mail.gmail.com>
 <54486735.a1Uk6bjfgb@even-i700>
Message-ID: <CACALY+RmNHdJmvTvkHw7tWATU9v-8vNnYfR+3+4mAufjYaU9Dw@mail.gmail.com>

Hi Even,

Thank you, I've not considered to modify the linking behavior of proj.dll
at this stage, but as far as it solves the problem I'm fine with it.

Best regards,

Tamas


Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2020. jan.
22., Sze, 15:01):

> Hi Tamas,
>
> > However the GDAL build (like for
> > https://github.com/OSGeo/gdal/blob/v2.4.4/gdal/ogr/ogrct.cpp) still
> using
> > the default proj.dll name which cannot be configured in the opt file.
>
> It can. You need to define -DPROJ_STATIC for that. -DPROJ_STATIC is a bit
> confusing. It didn't mean a static build, but something that was linked at
> build time (either a static or dynamic lib), to be opposed at being loaded
> at
> runtime with LoadLibrary(). That's what you want to use.
>
> # PROJ stuff
> # Uncomment the following lines to link PROJ library statically. Otherwise
> # it will be linked dynamically during runtime.
> # To use the new API of proj5 or later, use
> #PROJ_FLAGS = -DPROJ_STATIC -DPROJ_VERSION=5
> # for proj 4.x:
> #PROJ_FLAGS = -DPROJ_STATIC -DPROJ_VERSION=4
>
> #PROJ_INCLUDE = -Id:\projects\proj.4\src
> #PROJ_LIBRARY = d:\projects\proj.4\src\proj_i.lib
>
> Even
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200122/3dd2ef0d/attachment.html>

From jluis at ualg.pt  Wed Jan 22 11:40:01 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Wed, 22 Jan 2020 19:40:01 +0000
Subject: [gdal-dev] GDAL and proj dll name.
In-Reply-To: <CACALY+RmNHdJmvTvkHw7tWATU9v-8vNnYfR+3+4mAufjYaU9Dw@mail.gmail.com>
References: <CACALY+SnxD1MU13GyOZrVqU5jjU75RYzhUb=pyZ1YydYQOGoBw@mail.gmail.com>
 <54486735.a1Uk6bjfgb@even-i700>
 <CACALY+RmNHdJmvTvkHw7tWATU9v-8vNnYfR+3+4mAufjYaU9Dw@mail.gmail.com>
Message-ID: <DB8PR04MB6697F8015383D68FF9BFED4AA60C0@DB8PR04MB6697.eurprd04.prod.outlook.com>

FYI, this is what I do with my build. Since I want to control the DLL name I’ve added  this lines to  src\ lib_proj.cmake

# If a renaming of the proj dll has been set in ConfigUser.cmake
if (WIN32 AND PROJ4_DLL_RENAME)
set_target_properties(${PROJ_CORE_TARGET} PROPERTIES RUNTIME_OUTPUT_NAME ${PROJ4_DLL_RENAME})
endif (WIN32 AND PROJ4_DLL_RENAME)

and in a ConfigUser.cmake file (included in the main CMakeLists.txt file) I have

set (PROJ4_DLL_RENAME proj_w${BITAGE})

where BITAGE is either 32 or 64.

If there is interest for such a solution I could make a PR for it


Joaquim


From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Tamas Szekeres
Sent: Wednesday, January 22, 2020 3:49 PM
To: Even Rouault <even.rouault at spatialys.com>
Cc: gdal-dev <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] GDAL and proj dll name.

Hi Even,

Thank you, I've not considered to modify the linking behavior of proj.dll at this stage, but as far as it solves the problem I'm fine with it.

Best regards,

Tamas


Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> ezt írta (időpont: 2020. jan. 22., Sze, 15:01):
Hi Tamas,

> However the GDAL build (like for
> https://github.com/OSGeo/gdal/blob/v2.4.4/gdal/ogr/ogrct.cpp) still using
> the default proj.dll name which cannot be configured in the opt file.

It can. You need to define -DPROJ_STATIC for that. -DPROJ_STATIC is a bit
confusing. It didn't mean a static build, but something that was linked at
build time (either a static or dynamic lib), to be opposed at being loaded at
runtime with LoadLibrary(). That's what you want to use.

# PROJ stuff
# Uncomment the following lines to link PROJ library statically. Otherwise
# it will be linked dynamically during runtime.
# To use the new API of proj5 or later, use
#PROJ_FLAGS = -DPROJ_STATIC -DPROJ_VERSION=5
# for proj 4.x:
#PROJ_FLAGS = -DPROJ_STATIC -DPROJ_VERSION=4

#PROJ_INCLUDE = -Id:\projects\proj.4\src
#PROJ_LIBRARY = d:\projects\proj.4\src\proj_i.lib

Even


--
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200122/bd36eddc/attachment-0001.html>

From twinbirds at protonmail.com  Wed Jan 22 23:07:47 2020
From: twinbirds at protonmail.com (Simon)
Date: Thu, 23 Jan 2020 07:07:47 +0000
Subject: [gdal-dev] Speeding up gdalwarp process
Message-ID: <Egldj03NAmYYQE4xyKlB-_M0qz8WcZtuaInyUk0755VXTG2cKlSbsaGaHe8P5E-_UaZDz717_0mwZhik5FUjSccY6IPbK7BktKcoUCc0Ms0=@protonmail.com>

Hi gdal-devs,
I have a question, if there is some way to use gdalwarp in a clustering system (e.g., Sparks) or with GPU to speed up the process? My task involves re-projection and re-sampling of hundreds of high-resolution images. Any ideas to make use of Sparks or GPU is welcomed. Thank you.
Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/408d4953/attachment.html>

From geiger.david68210 at gmail.com  Thu Jan 23 02:38:10 2020
From: geiger.david68210 at gmail.com (David GEIGER)
Date: Thu, 23 Jan 2020 11:38:10 +0100
Subject: [gdal-dev] gdalinfo not working on Mageia
Message-ID: <CABd+5_ib3Q+uMNJQSmTF6=ve_rtNw1pzTVSRjnFiWJ7VfiyDvA@mail.gmail.com>

Hi,

On Mageia we have an issue with gdalinfo (and some others scripts), during
build it creates a bash script instead of a real binary, I checked what is
going wrong but without success:

$ gdalinfo --version
/usr/bin/gdalinfo: error: '/usr/bin/.libs/gdalinfo' does not exist

Mageia7 and Mageia Cauldron
gdal 2.4.3

https://bugs.mageia.org/show_bug.cgi?id=25809#c3

Here our spec file:

http://svnweb.mageia.org/packages/cauldron/gdal/current/SPECS/gdal.spec?revision=1478884&view=markup



Regards,

David
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/752dc391/attachment.html>

From Mats.Hogstrom at slu.se  Thu Jan 23 03:51:16 2020
From: Mats.Hogstrom at slu.se (=?iso-8859-1?Q?Mats_H=F6gstr=F6m?=)
Date: Thu, 23 Jan 2020 11:51:16 +0000
Subject: [gdal-dev] "gdaladdo: tif_dirwrite.c:2449:
 TIFFWriteDirectoryTagData: Assertion `datalength<0x80000000UL' failed."
Message-ID: <1579780264231.5337@slu.se>

Hi,

I'm trying to build overviews on a large vrt file, but I'm getting the following error message
"gdaladdo: tif_dirwrite.c:2449: TIFFWriteDirectoryTagData: Assertion `datalength<0x80000000UL' failed."

Operating system ubuntu server 18.04
256 Gb memory
GDAL version 2.4

This is what I do:
- create a text file with all the file names
- gdalbuildvrt mosaic.vrt --optfile <mytextfile>
- gdaladdo -q -ro --config COMPRESS_OVERVIEW JPEG --config PHOTOMETRIC_OVERVIEW RGB --config INTERLEAVE_OVERVIEW PIXEL --config BIGTIFF_OVERVIEW YES mosaic.vrt 2

The vrt file references about 15000 4-band tiffs with 16 cm resolution.
gdalinfo mosaic.vrt
Driver: VRT/Virtual Raster
Files: /mnt/data/lm/orto4band016/raster/epsg3006/2019/delivery/ortofoto/mosaic.vrt
       /mnt/data/lm/orto4band016/raster/epsg3006/2019/delivery/ortofoto/70_4/700_47_0075_2019.tif
|
|
|
       /mnt/data/lm/orto4band016/raster/epsg3006/2019/delivery/ortofoto/72_8/728_80_0050_2019.tif
Size is 3812500, 8203125
Coordinate System is:
PROJCS["SWEREF99 TM",
    GEOGCS["SWEREF99",
        DATUM["SWEREF99",
            SPHEROID["GRS 1980",6378137,298.257222101,
                AUTHORITY["EPSG","7019"]],
            TOWGS84[0,0,0,0,0,0,0],
            AUTHORITY["EPSG","6619"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.0174532925199433,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4619"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",15],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AUTHORITY["EPSG","3006"]]
Origin = (312500.000000000000000,7540000.000000000000000)
Pixel Size = (0.160000000000006,-0.160000000000006)
Corner Coordinates:
Upper Left  (  312500.000, 7540000.000) ( 10d31'41.87"E, 67d54'48.45"N)
Lower Left  (  312500.000, 6227500.000) ( 11d58'51.51"E, 56d 9'20.09"N)
Upper Right (  922500.000, 7540000.000) ( 24d59'59.48"E, 67d40' 2.67"N)
Lower Right (  922500.000, 6227500.000) ( 21d46'52.71"E, 56d 0'21.07"N)
Center      (  617500.000, 6883750.000) ( 17d14'55.13"E, 62d 4' 3.41"N)
Band 1 Block=128x128 Type=Byte, ColorInterp=Red
  NoData Value=0
Band 2 Block=128x128 Type=Byte, ColorInterp=Green
  NoData Value=0
Band 3 Block=128x128 Type=Byte, ColorInterp=Blue
  NoData Value=0
Band 4 Block=128x128 Type=Byte, ColorInterp=Undefined
  NoData Value=0

Any ideas why this happens?

Best regards
/mats
---
När du skickar e-post till SLU så innebär detta att SLU behandlar dina personuppgifter. För att läsa mer om hur detta går till, klicka här <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>

From even.rouault at spatialys.com  Thu Jan 23 05:21:19 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 23 Jan 2020 14:21:19 +0100
Subject: [gdal-dev] "gdaladdo: tif_dirwrite.c:2449:
	TIFFWriteDirectoryTagData: Assertion
	`datalength<0x80000000UL' failed."
In-Reply-To: <1579780264231.5337@slu.se>
References: <1579780264231.5337@slu.se>
Message-ID: <2060617.xtCDkiXpZv@even-i700>

Mats,

> I'm trying to build overviews on a large vrt file, but I'm getting the > 
following error message
>"gdaladdo: tif_dirwrite.c:2449: TIFFWriteDirectoryTagData: Assertion > 
`datalength<0x80000000UL' failed."

Ouch, you hit a bug in libtiff. What you are trying to create is an absolutely 
large BigTIFF file.

Given 128x128 tiles and your raster dimensions, the size of each of the 
TileByteCount/TileOffset TIFF array would be

(3812500 / 128.) * (8203125 / 128.) * sizeof(double) = 15.2 GB !

For tag data, libtiff has a limitation to 2 GB (this is a - reasonable - 
implementation limitation, the format itself could allow to 2^63). Ideally, it 
should have rejected from the start this attempt instead of crashing. You may 
want to file a ticket about that.

You can add --config GDAL_TIFF_OVR_BLOCKSIZE 1024 (or a larger value) to 
increase the size of overview tiles, and thus reduce the size of each array to 
a more reasonable ~ 230 MB.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jan 23 05:27:56 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 23 Jan 2020 06:27:56 -0700 (MST)
Subject: [gdal-dev] "gdaladdo: tif_dirwrite.c:2449:
 TIFFWriteDirectoryTagData: Assertion `datalength<0x80000000UL' failed."
In-Reply-To: <1579780264231.5337@slu.se>
References: <1579780264231.5337@slu.se>
Message-ID: <1579786076601-0.post@n6.nabble.com>

Hi,

Do I estimate right that you have about 125 terabytes image data as
uncompressed , and the first level overview would make about 32 terabytes?
As JPEG compressed it would still make about 3 terabyte .ovr file. That is
not too much for BigTIFF that has a size limit at 18000 petabytes, but it
may still be unpractical.

I would rather split the source data into a bit smaller VRT mosaics with
size around 100x100 km and start creating overviews for those. Or create a
few first levels of overviews for the source tiffs and then materialize
100x100 km areas into geotiffs havin pixel size of 16 meters with
gdal_translate. Or something else, but 3 TB overview file would not be my
first goal. Of course it can be the best alternative for your exact use
case.

-Jukka Rahkonen-


mapmonster wrote
> Hi,
> 
> I'm trying to build overviews on a large vrt file, but I'm getting the
> following error message
> "gdaladdo: tif_dirwrite.c:2449: TIFFWriteDirectoryTagData: Assertion
> `datalength<0x80000000UL' failed."
> 
> Size is 3812500, 8203125





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From Daniel.Evans at jbarisk.com  Thu Jan 23 05:44:19 2020
From: Daniel.Evans at jbarisk.com (Daniel Evans)
Date: Thu, 23 Jan 2020 13:44:19 +0000
Subject: [gdal-dev] Querying many raster pixels efficiently from Python
Message-ID: <LNXP123MB2075800B821C5BB6F9BC517A950F0@LNXP123MB2075.GBRP123.PROD.OUTLOOK.COM>

Hi,

I have a large (global, 30m resolution, 50GB+) GeoTIFF dataset, from which I need to read many (millions) of pixel values at given input coordinates. I've got reasonable performance out of the code, about a million queries over five minutes, but:


  1.  There are actually twelve separate datasets of this size to query, not just one, so it takes approximately an hour.
  2.  This is by far the slowest portion of the program, and the users demand speed!
  3.  The users would also like to move towards higher resolution datasets, which we see run about 5x slower.
  4.  When querying the data on a particular piece of network storage mounted as part of the local filesystem, we see a slowdown approaching two orders of magnitude - bulk file copies off the network storage are reasonable, but each IO request shows a significant overhead (up to a second), and GDAL is sending one for each coordinate queried.

The implementation is in Python, directly calling down to GDAL. The short, long-running snippet of code which performs the actual queries the dataset, having converted real-world coordinates to pixels, is:

value_arrays = (
            raster_ds.ReadAsArray(
                        xoff=coord[0] - buffer_size,
                        yoff=coord[1] - buffer_size,
                        xsize=npix,
                        ysize=npix
            ) for coord in offsets
)

There are a few things that are probably worth noting:

  1.  It is not necessarily a single pixel that is being read - for each coordinate, the program may be asked to get all pixel values within a given radius (typically a couple of pixels), and use some function to summarise these into a single value (mean, median, ...). GDAL currently returns a numpy array for each query, which is passed to the user-specified function after the snippet above.
  2.  The dataset is made up of 2048x2048 LZW-Compressed tiles containing floating point data (essentially conforming to COG, but with no overviews), grouped together in a VRT (performance is identical with plain GeoTIFFs, though).

Multiprocessing has not been found to help - we actually lose throughput as the disk read head is moving back and forth constantly. Better hardware (especially SSDs) is known to help, but no one wants to pay for that.

We see no particular performance difference from setting GDAL_DISABLE_READDIR_ON_OPEN=TRUE, and GDAL_CACHEMAX is left at the default 5% (64GB+ RAM available).



Does the Python interface to GDAL provide a way to supply a large number of offsets and get blocks of pixels back, avoiding the need to come back up to Python after each query? (I suspect not)
Is there some way to optimise GDAL so that queries of files on the mounted network storage are more efficient?



Dr. Daniel Evans
Software Developer

Skype<sip:daniel.evans at jbarisk.com>


T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png]  [Follow us on Twitter] <https://twitter.com/jbarisk>
Our postal address and registered office is JBA Risk Management Limited, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire BD23 3FD.

Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire, BD23 3FD, Telephone: +441756799919


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/5546dfd4/attachment-0001.html>

From edzer.pebesma at uni-muenster.de  Thu Jan 23 06:53:46 2020
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 23 Jan 2020 15:53:46 +0100
Subject: [gdal-dev] OGRCreateCoordinateTransformation problem on GDAL 3.0.3
 and PROJ 6.3.0
Message-ID: <18f4178c-72d1-556c-4390-0b569d6bf082@uni-muenster.de>

The combination of GDAL 3.0.3 and PROJ 6.3.0 arriving on debian
platforms is causing some havoc for some spatial R packages. I could
bring one particular problem back to the following C++ program:

#include <stdio.h>
#include "ogrsf_frmts.h"
#include <ogr_spatialref.h>

int main() {

   OGRSpatialReference *aSRS = new OGRSpatialReference;
   OGRSpatialReference *bSRS = new OGRSpatialReference;

   char *pszSRS = NULL, *wkta = NULL, *wktb = NULL;

   aSRS->importFromProj4("+init=epsg:4326");
   aSRS->exportToPrettyWkt(&wkta);
   aSRS->importFromWkt((const char *) wkta);

   bSRS->importFromProj4("+init=epsg:3857");
   bSRS->exportToPrettyWkt(&wktb);
   bSRS->importFromWkt((const char *) wktb);

   OGRCoordinateTransformation *ct =
OGRCreateCoordinateTransformation(aSRS, bSRS);
   if (ct == NULL) {
	printf("ct NULL\n");
	exit(1);
   }
   exit(0);
}

which outputs:

Warning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS
with a non-EPSG compliant axis order.
ERROR 1: PROJ: proj_create_operations: At least one of the operation
lacks a source and/or target CRS
ERROR 6: Cannot find coordinate operations from `GEOGCRS["WGS
84",DATUM["World Geodetic System 1984",ELLIPSOID["WGS
84",6378137,298.257223563,LENGTHUNIT["metre",1]],ID["EPSG",6326]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8901]],CS[ellipsoidal,2],AXIS["longitude",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433,ID["EPSG",9122]]],AXIS["latitude",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433,ID["EPSG",9122]]]]'
to `PROJCRS["WGS 84 / Pseudo-Mercator",BASEGEOGCRS["WGS 84",DATUM["World
Geodetic System 1984",ELLIPSOID["WGS
84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],ID["EPSG",4326]],CONVERSION["unnamed",METHOD["Popular
Visualisation Pseudo Mercator",ID["EPSG",1024]],PARAMETER["Latitude of
natural
origin",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8801]],PARAMETER["Longitude
of natural
origin",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8802]],PARAMETER["False
easting",0,LENGTHUNIT["metre",1],ID["EPSG",8806]],PARAMETER["False
northing",0,LENGTHUNIT["metre",1],ID["EPSG",8807]]],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
ct NULL

What am I doing wrong?
-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 3110 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/f49841fd/attachment.key>

From sean at mapbox.com  Thu Jan 23 08:29:04 2020
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 23 Jan 2020 09:29:04 -0700
Subject: [gdal-dev] OGRCreateCoordinateTransformation problem on GDAL
 3.0.3 and PROJ 6.3.0
In-Reply-To: <18f4178c-72d1-556c-4390-0b569d6bf082@uni-muenster.de>
References: <18f4178c-72d1-556c-4390-0b569d6bf082@uni-muenster.de>
Message-ID: <CADPhZXy6seSCdFUozexC6daFDDLRxKmVhRoBka-m7aX7pjsAZw@mail.gmail.com>

Hi,

On Thu, Jan 23, 2020 at 8:01 AM Edzer Pebesma <edzer.pebesma at uni-muenster.de>
wrote:

> The combination of GDAL 3.0.3 and PROJ 6.3.0 arriving on debian
> platforms is causing some havoc for some spatial R packages. I could
> bring one particular problem back to the following C++ program:
>
> #include <stdio.h>
> #include "ogrsf_frmts.h"
> #include <ogr_spatialref.h>
>
> int main() {
>
>    OGRSpatialReference *aSRS = new OGRSpatialReference;
>    OGRSpatialReference *bSRS = new OGRSpatialReference;
>
>    char *pszSRS = NULL, *wkta = NULL, *wktb = NULL;
>
>    aSRS->importFromProj4("+init=epsg:4326");
>    aSRS->exportToPrettyWkt(&wkta);
>    aSRS->importFromWkt((const char *) wkta);
>
>    bSRS->importFromProj4("+init=epsg:3857");
>    bSRS->exportToPrettyWkt(&wktb);
>    bSRS->importFromWkt((const char *) wktb);
>
>    OGRCoordinateTransformation *ct =
> OGRCreateCoordinateTransformation(aSRS, bSRS);
>    if (ct == NULL) {
>         printf("ct NULL\n");
>         exit(1);
>    }
>    exit(0);
> }
>
> which outputs:
>
> Warning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS
> with a non-EPSG compliant axis order.
> ERROR 1: PROJ: proj_create_operations: At least one of the operation
> lacks a source and/or target CRS
> ERROR 6: Cannot find coordinate operations from `GEOGCRS["WGS
> 84",DATUM["World Geodetic System 1984",ELLIPSOID["WGS
>
> 84",6378137,298.257223563,LENGTHUNIT["metre",1]],ID["EPSG",6326]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8901]],CS[ellipsoidal,2],AXIS["longitude",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433,ID["EPSG",9122]]],AXIS["latitude",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433,ID["EPSG",9122]]]]'
> to `PROJCRS["WGS 84 / Pseudo-Mercator",BASEGEOGCRS["WGS 84",DATUM["World
> Geodetic System 1984",ELLIPSOID["WGS
>
> 84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],ID["EPSG",4326]],CONVERSION["unnamed",METHOD["Popular
> Visualisation Pseudo Mercator",ID["EPSG",1024]],PARAMETER["Latitude of
> natural
>
> origin",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8801]],PARAMETER["Longitude
> of natural
>
> origin",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8802]],PARAMETER["False
> easting",0,LENGTHUNIT["metre",1],ID["EPSG",8806]],PARAMETER["False
>
> northing",0,LENGTHUNIT["metre",1],ID["EPSG",8807]]],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
> ct NULL
>
> What am I doing wrong?


If you pass "EPSG:4326" to importFromProj4 instead of "+init=epsg:4326"
(and likewise for EPSG:3857) the deprecated syntax warning won't be
printed. I expect that the error would be cleared up too, at least that is
my experience with the latest in these libraries.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/04cb1ed3/attachment.html>

From wilcok36 at hotmail.com  Thu Jan 23 08:36:48 2020
From: wilcok36 at hotmail.com (Wilco K)
Date: Thu, 23 Jan 2020 16:36:48 +0000
Subject: [gdal-dev] OPeNDAP support with libdap
Message-ID: <AM6PR03MB5992DA43A36276114AA6F90CDF0F0@AM6PR03MB5992.eurprd03.prod.outlook.com>

LS,

which GDAL version includes the DODS driver (libdap)?
We need to query the NOAA GrADS Data Server for GFS data with c#.

Kind regards

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/954754c4/attachment.html>

From edzer.pebesma at uni-muenster.de  Thu Jan 23 08:40:04 2020
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 23 Jan 2020 17:40:04 +0100
Subject: [gdal-dev] OGRCreateCoordinateTransformation problem on GDAL
 3.0.3 and PROJ 6.3.0
In-Reply-To: <CADPhZXy6seSCdFUozexC6daFDDLRxKmVhRoBka-m7aX7pjsAZw@mail.gmail.com>
References: <18f4178c-72d1-556c-4390-0b569d6bf082@uni-muenster.de>
 <CADPhZXy6seSCdFUozexC6daFDDLRxKmVhRoBka-m7aX7pjsAZw@mail.gmail.com>
Message-ID: <5e4d2e79-5a8f-4bd6-a754-d2c2986875fc@uni-muenster.de>



On 1/23/20 5:29 PM, Sean Gillies wrote:
> Hi,
> 
> On Thu, Jan 23, 2020 at 8:01 AM Edzer Pebesma
> <edzer.pebesma at uni-muenster.de <mailto:edzer.pebesma at uni-muenster.de>>
> wrote:
> 
>     The combination of GDAL 3.0.3 and PROJ 6.3.0 arriving on debian
>     platforms is causing some havoc for some spatial R packages. I could
>     bring one particular problem back to the following C++ program:
> 
>     #include <stdio.h>
>     #include "ogrsf_frmts.h"
>     #include <ogr_spatialref.h>
> 
>     int main() {
> 
>        OGRSpatialReference *aSRS = new OGRSpatialReference;
>        OGRSpatialReference *bSRS = new OGRSpatialReference;
> 
>        char *pszSRS = NULL, *wkta = NULL, *wktb = NULL;
> 
>        aSRS->importFromProj4("+init=epsg:4326");
>        aSRS->exportToPrettyWkt(&wkta);
>        aSRS->importFromWkt((const char *) wkta);
> 
>        bSRS->importFromProj4("+init=epsg:3857");
>        bSRS->exportToPrettyWkt(&wktb);
>        bSRS->importFromWkt((const char *) wktb);
> 
>        OGRCoordinateTransformation *ct =
>     OGRCreateCoordinateTransformation(aSRS, bSRS);
>        if (ct == NULL) {
>             printf("ct NULL\n");
>             exit(1);
>        }
>        exit(0);
>     }
> 
>     which outputs:
> 
>     Warning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS
>     with a non-EPSG compliant axis order.
>     ERROR 1: PROJ: proj_create_operations: At least one of the operation
>     lacks a source and/or target CRS
>     ERROR 6: Cannot find coordinate operations from `GEOGCRS["WGS
>     84",DATUM["World Geodetic System 1984",ELLIPSOID["WGS
>     84",6378137,298.257223563,LENGTHUNIT["metre",1]],ID["EPSG",6326]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8901]],CS[ellipsoidal,2],AXIS["longitude",east,ORDER[1],ANGLEUNIT["degree",0.0174532925199433,ID["EPSG",9122]]],AXIS["latitude",north,ORDER[2],ANGLEUNIT["degree",0.0174532925199433,ID["EPSG",9122]]]]'
>     to `PROJCRS["WGS 84 / Pseudo-Mercator",BASEGEOGCRS["WGS 84",DATUM["World
>     Geodetic System 1984",ELLIPSOID["WGS
>     84",6378137,298.257223563,LENGTHUNIT["metre",1]]],PRIMEM["Greenwich",0,ANGLEUNIT["degree",0.0174532925199433]],ID["EPSG",4326]],CONVERSION["unnamed",METHOD["Popular
>     Visualisation Pseudo Mercator",ID["EPSG",1024]],PARAMETER["Latitude of
>     natural
>     origin",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8801]],PARAMETER["Longitude
>     of natural
>     origin",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8802]],PARAMETER["False
>     easting",0,LENGTHUNIT["metre",1],ID["EPSG",8806]],PARAMETER["False
>     northing",0,LENGTHUNIT["metre",1],ID["EPSG",8807]]],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
>     ct NULL
> 
>     What am I doing wrong?
> 
> 
> If you pass "EPSG:4326" to importFromProj4 instead of "+init=epsg:4326"
> (and likewise for EPSG:3857) the deprecated syntax warning won't be
> printed. I expect that the error would be cleared up too, at least that
> is my experience with the latest in these libraries.

Thanks! Yes, with SRS->importFromUserInput("EPSG:3857"); etc this works
fine; I'm OK with the warning, I just don't see how the subsequent error
relates to syntax that is deprecated.

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 3110 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/0d346557/attachment-0001.key>

From even.rouault at spatialys.com  Thu Jan 23 08:58:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 23 Jan 2020 17:58:21 +0100
Subject: [gdal-dev] OGRCreateCoordinateTransformation problem on GDAL
	3.0.3 and PROJ 6.3.0
In-Reply-To: <5e4d2e79-5a8f-4bd6-a754-d2c2986875fc@uni-muenster.de>
References: <18f4178c-72d1-556c-4390-0b569d6bf082@uni-muenster.de>
 <CADPhZXy6seSCdFUozexC6daFDDLRxKmVhRoBka-m7aX7pjsAZw@mail.gmail.com>
 <5e4d2e79-5a8f-4bd6-a754-d2c2986875fc@uni-muenster.de>
Message-ID: <143632326.cX8LQqjm96@even-i700>

> Thanks! Yes, with SRS->importFromUserInput("EPSG:3857"); etc this works
> fine; I'm OK with the warning, I just don't see how the subsequent error
> relates to syntax that is deprecated.

I'm looking at this, but haven't yet an explanation. This is very subtle,
and seems to be linked specifically to EPSG:3857

I've modified your reproducer as the following:

int main() {

   OGRSpatialReference *aSRS = new OGRSpatialReference;

   aSRS->importFromWkt("GEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]],ID[\"EPSG\",6326]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]],CS[ellipsoidal,2],AXIS[\"longitude\",east,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],AXIS[\"latitude\",north,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]]]");

   OGRSpatialReference *bSRS = new OGRSpatialReference;
#ifdef WORKING
   OGRSpatialReference srs;
   srs.importFromProj4("+init=epsg:3857");
   char* wktb = NULL;
   srs.exportToPrettyWkt(&wktb);
#else
   bSRS->importFromProj4("+init=epsg:3857");
   const char* wktb = "PROJCRS[\"WGS 84 / Pseudo-Mercator\",BASEGEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"unnamed\",METHOD[\"Popular Visualisation Pseudo Mercator\",ID[\"EPSG\",1024]],PARAMETER[\"Latitude of natural origin\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]";
#endif
   bSRS->importFromWkt((const char *) wktb);

   OGRCoordinateTransformation *ct =
OGRCreateCoordinateTransformation(aSRS, bSRS);
   if (ct == NULL) {
        printf("ct NULL\n");
        exit(1);
   }
   exit(0);
}

So the error is linked to having importFromProj4() and then importFromWkt()
This doesn't make sense as the later should cancel the former, so there's some
side effect of importFromProj4() that has later consequences.
If you define WORKING, which will do the importFromProj4() + exportToPrettyWkt() 
in a temporary object, and import the resulting WKT in the final bSRS, then
it works. Doesn't make sense either but could be a workaround

But Sean's advice is definitely the way forward . Use importFromEPSG(XXXX) or
SetFromUserInput("EPSG:XXXX")
And SetAxisMappingStrategy(OAMS_TRADITIONAL_GIS_ORDER) if you don't
want EPSG compliant axis definitions.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From edzer.pebesma at uni-muenster.de  Thu Jan 23 09:35:40 2020
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 23 Jan 2020 18:35:40 +0100
Subject: [gdal-dev] OGRCreateCoordinateTransformation problem on GDAL
 3.0.3 and PROJ 6.3.0
In-Reply-To: <143632326.cX8LQqjm96@even-i700>
References: <18f4178c-72d1-556c-4390-0b569d6bf082@uni-muenster.de>
 <CADPhZXy6seSCdFUozexC6daFDDLRxKmVhRoBka-m7aX7pjsAZw@mail.gmail.com>
 <5e4d2e79-5a8f-4bd6-a754-d2c2986875fc@uni-muenster.de>
 <143632326.cX8LQqjm96@even-i700>
Message-ID: <9078d446-3c0b-856f-ff66-a2fd40cfbc51@uni-muenster.de>



On 1/23/20 5:58 PM, Even Rouault wrote:
>> Thanks! Yes, with SRS->importFromUserInput("EPSG:3857"); etc this works
>> fine; I'm OK with the warning, I just don't see how the subsequent error
>> relates to syntax that is deprecated.
> 
> I'm looking at this, but haven't yet an explanation. This is very subtle,
> and seems to be linked specifically to EPSG:3857

I don't think so: I see the same problem if I use +init=epsg:28992
rather than +init=epsg:3875.

Your advice of improving this C++ program is well meant, but fixing this
C++ program is not my problem, the problem is how we use GDAL's SRS
interface in R packages. I saw the error occuring at pretty random
occasions, but always errors _after_ one or more +init=epsg:xxxx strings
had been used to initialize an SRS.

> 
> I've modified your reproducer as the following:
> 
> int main() {
> 
>    OGRSpatialReference *aSRS = new OGRSpatialReference;
> 
>    aSRS->importFromWkt("GEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]],ID[\"EPSG\",6326]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8901]],CS[ellipsoidal,2],AXIS[\"longitude\",east,ORDER[1],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]],AXIS[\"latitude\",north,ORDER[2],ANGLEUNIT[\"degree\",0.0174532925199433,ID[\"EPSG\",9122]]]]");
> 
>    OGRSpatialReference *bSRS = new OGRSpatialReference;
> #ifdef WORKING
>    OGRSpatialReference srs;
>    srs.importFromProj4("+init=epsg:3857");
>    char* wktb = NULL;
>    srs.exportToPrettyWkt(&wktb);
> #else
>    bSRS->importFromProj4("+init=epsg:3857");
>    const char* wktb = "PROJCRS[\"WGS 84 / Pseudo-Mercator\",BASEGEOGCRS[\"WGS 84\",DATUM[\"World Geodetic System 1984\",ELLIPSOID[\"WGS 84\",6378137,298.257223563,LENGTHUNIT[\"metre\",1]]],PRIMEM[\"Greenwich\",0,ANGLEUNIT[\"degree\",0.0174532925199433]],ID[\"EPSG\",4326]],CONVERSION[\"unnamed\",METHOD[\"Popular Visualisation Pseudo Mercator\",ID[\"EPSG\",1024]],PARAMETER[\"Latitude of natural origin\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8801]],PARAMETER[\"Longitude of natural origin\",0,ANGLEUNIT[\"degree\",0.0174532925199433],ID[\"EPSG\",8802]],PARAMETER[\"False easting\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8806]],PARAMETER[\"False northing\",0,LENGTHUNIT[\"metre\",1],ID[\"EPSG\",8807]]],CS[Cartesian,2],AXIS[\"(E)\",east,ORDER[1],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]],AXIS[\"(N)\",north,ORDER[2],LENGTHUNIT[\"metre\",1,ID[\"EPSG\",9001]]]]";
> #endif
>    bSRS->importFromWkt((const char *) wktb);
> 
>    OGRCoordinateTransformation *ct =
> OGRCreateCoordinateTransformation(aSRS, bSRS);
>    if (ct == NULL) {
>         printf("ct NULL\n");
>         exit(1);
>    }
>    exit(0);
> }
> 
> So the error is linked to having importFromProj4() and then importFromWkt()
> This doesn't make sense as the later should cancel the former, so there's some
> side effect of importFromProj4() that has later consequences.
> If you define WORKING, which will do the importFromProj4() + exportToPrettyWkt() 
> in a temporary object, and import the resulting WKT in the final bSRS, then
> it works. Doesn't make sense either but could be a workaround
> 
> But Sean's advice is definitely the way forward . Use importFromEPSG(XXXX) or
> SetFromUserInput("EPSG:XXXX")
> And SetAxisMappingStrategy(OAMS_TRADITIONAL_GIS_ORDER) if you don't
> want EPSG compliant axis definitions.
> 
> Even
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pEpkey.asc
Type: application/pgp-keys
Size: 3110 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/1f133c4f/attachment.key>

From even.rouault at spatialys.com  Thu Jan 23 09:43:24 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 23 Jan 2020 18:43:24 +0100
Subject: [gdal-dev] OGRCreateCoordinateTransformation problem on GDAL
	3.0.3 and PROJ 6.3.0
In-Reply-To: <9078d446-3c0b-856f-ff66-a2fd40cfbc51@uni-muenster.de>
References: <18f4178c-72d1-556c-4390-0b569d6bf082@uni-muenster.de>
 <143632326.cX8LQqjm96@even-i700>
 <9078d446-3c0b-856f-ff66-a2fd40cfbc51@uni-muenster.de>
Message-ID: <7396512.jYUACzATW9@even-i700>

On jeudi 23 janvier 2020 18:35:40 CET Edzer Pebesma wrote:
> On 1/23/20 5:58 PM, Even Rouault wrote:
> >> Thanks! Yes, with SRS->importFromUserInput("EPSG:3857"); etc this works
> >> fine; I'm OK with the warning, I just don't see how the subsequent error
> >> relates to syntax that is deprecated.
> > 
> > I'm looking at this, but haven't yet an explanation. This is very subtle,
> > and seems to be linked specifically to EPSG:3857

OK, memory helping, I finally identified the root cause. This is a bug in 
PROJ. Fix submitted per https://github.com/OSGeo/PROJ/pull/1873

While being deterministic, it indeed looks like random in practice. I'm not 
even sure the workaround I proposed would work reliably in all situations with 
calls to GDAL/PROJ that would have been attempted before (due to caching of 
objects inside PROJ context). So either wait for a version with
https://github.com/OSGeo/PROJ/pull/1873 applied, or migrate away from use of 
the deprecated +init=epsg:XXXX syntax

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew.bell.ia at gmail.com  Thu Jan 23 09:49:38 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 23 Jan 2020 12:49:38 -0500
Subject: [gdal-dev] OGR ExecuteSQL
Message-ID: <CACJ51z0Ft2EA+7y_6CcRK=1=m64zcD58o3ueR=X=4miMA=i5Fw@mail.gmail.com>

Hi,

This function returns a pointer to a layer.  Does the dataset retain
ownership of the layer, or does the user need to make sure that the layer
gets deleted?

Thanks,

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/ca2b2af4/attachment.html>

From even.rouault at spatialys.com  Thu Jan 23 10:03:26 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 23 Jan 2020 19:03:26 +0100
Subject: [gdal-dev] OGR ExecuteSQL
In-Reply-To: <CACJ51z0Ft2EA+7y_6CcRK=1=m64zcD58o3ueR=X=4miMA=i5Fw@mail.gmail.com>
References: <CACJ51z0Ft2EA+7y_6CcRK=1=m64zcD58o3ueR=X=4miMA=i5Fw@mail.gmail.com>
Message-ID: <9647205.E4GgfX55ao@even-i700>

On jeudi 23 janvier 2020 12:49:38 CET Andrew Bell wrote:
> Hi,
> 
> This function returns a pointer to a layer.  Does the dataset retain
> ownership of the layer, or does the user need to make sure that the layer
> gets deleted?
> 

https://gdal.org/api/gdaldataset_cpp.html#_CPPv4N11GDALDataset10ExecuteSQLEPKcP11OGRGeometryPKc

"""
Return
    an OGRLayer containing the results of the query. Deallocate with ReleaseResultSet().
"""

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew.bell.ia at gmail.com  Thu Jan 23 10:04:26 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 23 Jan 2020 13:04:26 -0500
Subject: [gdal-dev] OGR ExecuteSQL
In-Reply-To: <9647205.E4GgfX55ao@even-i700>
References: <CACJ51z0Ft2EA+7y_6CcRK=1=m64zcD58o3ueR=X=4miMA=i5Fw@mail.gmail.com>
 <9647205.E4GgfX55ao@even-i700>
Message-ID: <CACJ51z2JeaGQUeGk3H7UGtkxGkVu-W_+=g454WrSf4P17cQcfA@mail.gmail.com>

Thanks.  Just located it in the documentation.  Google was not my friend in
this case.

Sorry to bother,

On Thu, Jan 23, 2020 at 1:03 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 23 janvier 2020 12:49:38 CET Andrew Bell wrote:
> > Hi,
> >
> > This function returns a pointer to a layer.  Does the dataset retain
> > ownership of the layer, or does the user need to make sure that the layer
> > gets deleted?
> >
>
>
> https://gdal.org/api/gdaldataset_cpp.html#_CPPv4N11GDALDataset10ExecuteSQLEPKcP11OGRGeometryPKc
>
> """
> Return
>     an OGRLayer containing the results of the query. Deallocate with
> ReleaseResultSet().
> """
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/66f665eb/attachment.html>

From mateusz at loskot.net  Thu Jan 23 10:21:11 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 23 Jan 2020 18:21:11 +0000
Subject: [gdal-dev] OGR ExecuteSQL
In-Reply-To: <CACJ51z2JeaGQUeGk3H7UGtkxGkVu-W_+=g454WrSf4P17cQcfA@mail.gmail.com>
References: <CACJ51z0Ft2EA+7y_6CcRK=1=m64zcD58o3ueR=X=4miMA=i5Fw@mail.gmail.com>
 <9647205.E4GgfX55ao@even-i700>
 <CACJ51z2JeaGQUeGk3H7UGtkxGkVu-W_+=g454WrSf4P17cQcfA@mail.gmail.com>
Message-ID: <CABUeae8+mqJapkycTo3q7QyaaNeuA=NT-z9ZVUdLFyQJEM3akg@mail.gmail.com>

The new docs are searchable

https://gdal.org/search.html?q=ExecuteSQL


Mateusz Loskot, mateusz at loskot.net
(Sent from mobile, may suffer from top-posting)

On Thu, 23 Jan 2020, 18:04 Andrew Bell, <andrew.bell.ia at gmail.com> wrote:

>
> Thanks.  Just located it in the documentation.  Google was not my friend
> in this case.
>
> Sorry to bother,
>
> On Thu, Jan 23, 2020 at 1:03 PM Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> On jeudi 23 janvier 2020 12:49:38 CET Andrew Bell wrote:
>> > Hi,
>> >
>> > This function returns a pointer to a layer.  Does the dataset retain
>> > ownership of the layer, or does the user need to make sure that the
>> layer
>> > gets deleted?
>> >
>>
>>
>> https://gdal.org/api/gdaldataset_cpp.html#_CPPv4N11GDALDataset10ExecuteSQLEPKcP11OGRGeometryPKc
>>
>> """
>> Return
>>     an OGRLayer containing the results of the query. Deallocate with
>> ReleaseResultSet().
>> """
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/6c485509/attachment-0001.html>

From mulcahy.brianp at gmail.com  Thu Jan 23 10:26:01 2020
From: mulcahy.brianp at gmail.com (Brian)
Date: Thu, 23 Jan 2020 13:26:01 -0500
Subject: [gdal-dev] New Warnings from GTIFF output
Message-ID: <CANoBQeaZFvdK+kFAZUUmuZnN_i3neffx0+mmeik4RFCjYn1moA@mail.gmail.com>

Currently using the master and received these warnings when running
gdal_translate

"Warning 1: TIFFReadDirectory:Invalid data type for tag TileByteCounts
Warning 1: TIFFReadDirectory:Invalid data type for tag TileOffsets"

The exact command was
gdal_translate -stats raster_trans.tif raster_cog.tif -co TILED=YES -co
BLOCKXSIZE=256 -co BLOCKYSIZE=256 -co NUM_THREADS=ALL_CPUS -co
BIGTIFF=IF_SAFER -co COMPRESS=DEFLATE -co COPY_SRC_OVERVIEWS=YES --config
GDAL_TIFF_OVR_BLOCKSIZE 256

Is there anyway to suppress warnings and only return errors?
These warnings did not show up in 2.4.0 and 3.1.0 (is that equal to 3.0.1)?
I can try to send the raw data used if needed.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/8edfd49c/attachment.html>

From even.rouault at spatialys.com  Thu Jan 23 10:35:11 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 23 Jan 2020 19:35:11 +0100
Subject: [gdal-dev] New Warnings from GTIFF output
In-Reply-To: <CANoBQeaZFvdK+kFAZUUmuZnN_i3neffx0+mmeik4RFCjYn1moA@mail.gmail.com>
References: <CANoBQeaZFvdK+kFAZUUmuZnN_i3neffx0+mmeik4RFCjYn1moA@mail.gmail.com>
Message-ID: <4330668.y0PiFl2Yvl@even-i700>

On jeudi 23 janvier 2020 13:26:01 CET Brian wrote:
> Currently using the master and received these warnings when running
> gdal_translate
> 
> "Warning 1: TIFFReadDirectory:Invalid data type for tag TileByteCounts
> Warning 1: TIFFReadDirectory:Invalid data type for tag TileOffsets"
> 
> The exact command was
> gdal_translate -stats raster_trans.tif raster_cog.tif -co TILED=YES -co
> BLOCKXSIZE=256 -co BLOCKYSIZE=256 -co NUM_THREADS=ALL_CPUS -co
> BIGTIFF=IF_SAFER -co COMPRESS=DEFLATE -co COPY_SRC_OVERVIEWS=YES --config
> GDAL_TIFF_OVR_BLOCKSIZE 256
> 
> Is there anyway to suppress warnings and only return errors?

Not that I can think of, at least not without writing a custom error handler.

This warning is a consequence of

commit 5acc54b38bf9bcd45ae8c475f19eb4b8d44ce0bf
Author: Even Rouault <even.rouault at spatialys.com>
Date:   Sun Jan 12 14:54:40 2020 +0100

    Internal libtiff: _TIFFPartialReadStripArray: add support for non-
conformant SLONG8 data type (fixes #2165)

Such files are non conformant and could be rejected by other software (and for 
GDAL versions >= 3.0 using internal libtiff or libtiff 4.1.0 and before that 
fix, that file couldn't be read at all), so this warning is legit and should 
be taken seriously.

> These warnings did not show up in 2.4.0 and 3.1.0 (is that equal to 3.0.1)?

3.1.0 is not yet released and is the master version, different of 3.0.1

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Thu Jan 23 11:42:44 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 23 Jan 2020 20:42:44 +0100
Subject: [gdal-dev] New Warnings from GTIFF output
In-Reply-To: <CANoBQeZd8aNTS8i9xzHXWBU3h4AkyPzu99Hf0ShVZQArF8x+mA@mail.gmail.com>
References: <CANoBQeaZFvdK+kFAZUUmuZnN_i3neffx0+mmeik4RFCjYn1moA@mail.gmail.com>
 <4330668.y0PiFl2Yvl@even-i700>
 <CANoBQeZd8aNTS8i9xzHXWBU3h4AkyPzu99Hf0ShVZQArF8x+mA@mail.gmail.com>
Message-ID: <3382724.iHdcCin1FW@even-i700>

On jeudi 23 janvier 2020 14:10:03 CET Brian wrote:
> Strange because the files were created by GDAL I created the COG using
> these steps ( original file is too large it is an georaster export). Do you
> see anything that would introduce the corrupt data? What can be done to fix
> it? I attached each file

(Re-adding the list for concluding this thread)

Thanks for the reproducer. The warning was indeed not legit in that situation. 
Just fixed in internal libtiff of GDAL master & libtiff gitlab master

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From szekerest at gmail.com  Thu Jan 23 12:19:56 2020
From: szekerest at gmail.com (Tamas Szekeres)
Date: Thu, 23 Jan 2020 21:19:56 +0100
Subject: [gdal-dev] OGR FileGDB driver: 'OBJECTID' not recognised as an
 available field
In-Reply-To: <CACALY+RKVk-i-ZLW_xAV+7e3sC3kBej5eJPhTQwWVEVWsFxSKw@mail.gmail.com>
References: <CACALY+QtxuX+H_vWsoDbt-sDrPJg6HL7L=OuUpH+mf-uOZmbyg@mail.gmail.com>
 <3514507.CYR4maEha1@even-i700>
 <CACALY+RKVk-i-ZLW_xAV+7e3sC3kBej5eJPhTQwWVEVWsFxSKw@mail.gmail.com>
Message-ID: <CACALY+STFFvUMAw+ArqUG6PaaMe5e-u=axdkB5dtDF1NPAeRvw@mail.gmail.com>

Hi,

I've already reported an issue a while back related to the OGRSQL dialect
along with the FDGB driver, when the where clause contains expression for
the FID column. I'm still experiencing the problem in GDAL master, where
the following query doesn't seem to apply the specified filter:

*ogrinfo "mydata.gdb" -dialect OGRSQL -sql "select * from tablename where
FID=..."*

but this one (without dialect) returns the correct result:

* ogrinfo "mydata.gdb" -sql "select * from tablename where FID=..."  *

I'm a bit uncertain about whether it should be fixed in the generic SQL
layer or the FGDB layer (which doesn't expose OBJECTID in the layer defn.),
since the FGDB layer reports the name "OBJECTID" in GetFIDColumn, therefore
the gen SQL layer could automatically consider it in the layer definition
when processing the attribute filter. When adding the OBJECTID to the query
it fixes the problem, but that seems to be a bit awkward:

*ogrinfo "mydata.gdb" -dialect OGRSQL -sql "select *, OBJECTID from
tablename where FID=..." *

Any ideas in this topic would be helpful?

Best regards,

Tamas


Tamas Szekeres <szekerest at gmail.com> ezt írta (időpont: 2019. szept. 5.,
Cs, 22:51):

> Hi,
>
> I'm not sure if bForwardWhereToSourceLayer should not be set in this case,
> since the special field FID in pszWHEREIn has already been replaced.
> Or the OpenFileGDB driver should indeed expose OBJECTID as a column
> according to #4253
>
> Best regards,
>
> Tamas
>
>
>  Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2019.
> szept. 5., Cs, 13:13):
>
>> On mercredi 4 septembre 2019 22:13:40 CEST Tamas Szekeres wrote:
>> > Hi,
>> >
>> > It looks like  the sql queries with -dialect "OGRSQL" doesn't seem to
>> work
>> > as expected. When I specify the FID in the where clause, it doesn't
>> filter
>> > anything. The same query is also described as a solution in the
>> following
>> > ticket https://trac.osgeo.org/gdal/ticket/4253 but I doubt if that
>> works at
>> > all.
>> >
>> > The code causing this problem is fairly generic (ogr_gensql.cpp)
>> >
>> > if( psSelectInfo->where_expr && pszDialect != nullptr &&
>> >             EQUAL(pszDialect, "OGRSQL") )
>> >         {
>> >             int nMinIndexForSpecialField =
>> > poSrcLayer->GetLayerDefn()->GetFieldCount();
>> >             bForwardWhereToSourceLayer =
>> > !OGRGenSQLResultsLayerHasSpecialField
>> >                             (psSelectInfo->where_expr,
>> > nMinIndexForSpecialField);
>> >         }
>> >         if (bForwardWhereToSourceLayer)
>> >             pszWHERE = CPLStrdup(pszWHEREIn);
>> >         else
>> >             pszWHERE = nullptr;
>> >
>> > In the "where" expression, the FID field is thanslated to OBJECTID and
>> it
>> > is now treated as a special field, therefore the "where" expression is
>> not
>> > being passed to the driver.
>> >
>> > I'm also unsure if that is a correct action to omit passing "where" to
>> the
>> > layer instead of providing an error message.
>>
>> Actually the where isn't completely discarded. It is set on the
>> OGRGenSQLResultsLayer per
>>
>>     if( !bForwardWhereToSourceLayer )
>>         OGRGenSQLResultsLayer::SetAttributeFilter( pszWHEREIn );
>>
>> around line 492
>>
>> The issue is that the GenSQL layer has no FID column set, and thus this
>> filter
>> fails. One could potentially set the FID Column name on it from the
>> source
>> layer, but that wouldn't be really appropriate in the case of JOIN. That
>> said
>> I see a poDstFeat->SetFID( poSrcFeat->GetFID() ); at line 1332 of
>> TranslateFeature(), so...
>>
>> (there might have been other fixes since #4253 that have made this case
>> broken)
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/acbf80db/attachment.html>

From stephenwoodbridge37 at gmail.com  Thu Jan 23 17:20:16 2020
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Thu, 23 Jan 2020 20:20:16 -0500
Subject: [gdal-dev] Having a problem getting VRT ComplexSource to Scale
Message-ID: <2a07e09b-c313-7e0c-7e6a-0758d428ce00@gmail.com>

Hi all,

I'm having trouble getting my VRT file to scale the source data into my 
ColorTable.
I've been looking at this https://gdal.org/drivers/raster/vrt.html

The source GeoTiff has:

Band 1 Block=4500x1 Type=Float32, ColorInterp=Gray
   Minimum=1.082, Maximum=46.322, Mean=34.181, StdDev=2.049
   NoData Value=-30000
   Overviews: 2250x2126, 1125x1063, 563x532, 282x266, 141x133, 71x67
   Metadata:
     STATISTICS_MAXIMUM=46.321998596191
     STATISTICS_MEAN=34.181107349018
     STATISTICS_MINIMUM=1.0819988250732
     STATISTICS_STDDEV=2.0492649377546

My goal is to scale the source 0-50 into 10-240 in the ColorTable.


The VRT looks like:

<VRTDataset rasterXSize="4500" rasterYSize="4251">
   <GeoTransform> -180.0 ,0.08 , 0 , 90.0 , 0 , -0.04 </GeoTransform>
   <Metadata>
   </Metadata>
   <VRTRasterBand dataType="Byte" band="1">
     <ColorInterp>Palette</ColorInterp>
     <ColorTable>
       <Entry c1="0" c2="0" c3="0" c4="255"/>
       <Entry c1="0" c2="0" c3="255" c4="255"/>
...
       <Entry c1="255" c2="255" c3="255" c4="255"/>
     </ColorTable>
     <ComplexSource>
       <SourceFilename 
relativeToVRT="1">HYCOM_tomorrow_salinity_0.tif</SourceFilename>
       <SourceBand>1</SourceBand>
       <ScaleOffset>0</ScaleOffset>
       <ScaleRatio>1</ScaleRatio>
       <NODATA>0</NODATA>
       <SrcRect xOff="0" yOff="0" xSize="4500" ySize="4251"/>
       <DstRect xOff="0" yOff="0" xSize="4500" ySize="4251"/>
     </ComplexSource>
   </VRTRasterBand>
</VRTDataset>

50 - 0 = 50
240 - 10 = 230
230 / 50 = 4.6 = ScaleRatio
10 = ScaleRatio

I've tried a lot of other value trying to play with the scaling.

I also tried using:

<Exponent>0</Exponent>

<SrcMin>0</SrcMin>
<SrcMax>50</SrcMax>
<DstMin>10</DstMin>
<DstMax>240</DstMax> but that doesn't appear to work either. Using: GDAL 2.2.3, 
released 2017/11/20 on Unbuntu 18.04 My conclusion is that I'm not 
understanding the meaning of these fields or these are meant for 
something other than my goal. Any help would be appreciated. Thanks, -Steve


From twinbirds at protonmail.com  Thu Jan 23 17:30:55 2020
From: twinbirds at protonmail.com (Simon)
Date: Fri, 24 Jan 2020 01:30:55 +0000
Subject: [gdal-dev] Speeding up gdalwarp process
Message-ID: <JYiZRVHXDbmGu5swnZdDjnDW4Jo4UrgntI4mjBDd8ohkGITjetTV8vc1VjTAAsOTiR2_AMvQ_Lf4U8fiB28rByzXk_7CKo2YXtHoILE2_JY=@protonmail.com>

> Hi gdal-devs,
> I have a question, if there is some way to use gdalwarp in a clustering system (e.g., Sparks) or with GPU to speed up the process? My task involves re-projection and re-sampling of hundreds of high-resolution images. Any ideas to make use of Sparks or GPU is welcomed. Thank you.
> Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200124/f7a6eec7/attachment.html>

From patrick.mckendree.young at gmail.com  Thu Jan 23 18:58:24 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Thu, 23 Jan 2020 19:58:24 -0700
Subject: [gdal-dev] Querying many raster pixels efficiently from Python
In-Reply-To: <LNXP123MB2075800B821C5BB6F9BC517A950F0@LNXP123MB2075.GBRP123.PROD.OUTLOOK.COM>
References: <LNXP123MB2075800B821C5BB6F9BC517A950F0@LNXP123MB2075.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <CADXYQQ4ttwhCdGD9m5EcOP247zN9yxSjs2vuNDYaAzgWi7bN1g@mail.gmail.com>

Putting something like mapserver/mapcache in front of your requests might
work, if I understand correctly.  We serve COGs out of s3 via WMS like this
and the performance is pretty nice.

See

https://github.com/pedros007/mapserver-docker

for some discussion on such a setup.

Best,
Patrick


On Thu, Jan 23, 2020, 6:44 AM Daniel Evans <Daniel.Evans at jbarisk.com> wrote:

> Hi,
>
>
>
> I have a large (global, 30m resolution, 50GB+) GeoTIFF dataset, from which
> I need to read many (millions) of pixel values at given input coordinates.
> I’ve got reasonable performance out of the code, about a million queries
> over five minutes, but:
>
>
>
>    1. There are actually twelve separate datasets of this size to query,
>    not just one, so it takes approximately an hour.
>    2. This is by far the slowest portion of the program, and the users
>    demand speed!
>    3. The users would also like to move towards higher resolution
>    datasets, which we see run about 5x slower.
>    4. When querying the data on a particular piece of network storage
>    mounted as part of the local filesystem, we see a slowdown approaching two
>    orders of magnitude – bulk file copies off the network storage are
>    reasonable, but each IO request shows a significant overhead (up to a
>    second), and GDAL is sending one for each coordinate queried.
>
>
>
> The implementation is in Python, directly calling down to GDAL. The short,
> long-running snippet of code which performs the actual queries the dataset,
> having converted real-world coordinates to pixels, is:
>
>
>
> value_arrays = (
>
>             raster_ds.ReadAsArray(
>
>                         xoff=coord[0] - buffer_size,
>
>                         yoff=coord[1] - buffer_size,
>
>                         xsize=npix,
>
>                         ysize=npix
>
>             ) for coord in offsets
>
> )
>
>
>
> There are a few things that are probably worth noting:
>
>    1. It is not necessarily a single pixel that is being read – for each
>    coordinate, the program may be asked to get all pixel values within a given
>    radius (typically a couple of pixels), and use some function to summarise
>    these into a single value (mean, median, …). GDAL currently returns a numpy
>    array for each query, which is passed to the user-specified function after
>    the snippet above.
>    2. The dataset is made up of 2048x2048 LZW-Compressed tiles containing
>    floating point data (essentially conforming to COG, but with no overviews),
>    grouped together in a VRT (performance is identical with plain GeoTIFFs,
>    though).
>
>
>
> Multiprocessing has not been found to help - we actually lose throughput
> as the disk read head is moving back and forth constantly. Better hardware
> (especially SSDs) is known to help, but no one wants to pay for that.
>
>
>
> We see no particular performance difference from setting
> GDAL_DISABLE_READDIR_ON_OPEN=TRUE, and GDAL_CACHEMAX is left at the default
> 5% (64GB+ RAM available).
>
>
>
>
>
>
>
> Does the Python interface to GDAL provide a way to supply a large number
> of offsets and get blocks of pixels back, avoiding the need to come back up
> to Python after each query? (I suspect not)
>
> Is there some way to optimise GDAL so that queries of files on the mounted
> network storage are more efficient?
>
>
>
>
>
>
>
> *Dr. Daniel Evans*
>
> Software Developer
>
>
>
> *Skype*
>
>
>
> *T* +44 (0) 1756 799919
> www.jbarisk.com
>
> [image: Visit our website] <http://www.jbarisk.com>  [image: Follow us on
> Twitter] <https://twitter.com/jbarisk>
>
> Our postal address and registered office is JBA Risk Management Limited,
> 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire BD23
> 3FD.
>
> *Find out more about us here: www.jbarisk.com <http://www.jbarisk.com/>
> and **follow us on Twitter @JBARisk <http://twitter.com/JBARisk> and
> LinkedIn
> <https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>
> *
>
> The JBA Group supports the JBA Trust.
>
> All JBA Risk Management's email messages contain confidential information
> and are intended only for the individual(s) named. If you are not the named
> addressee you should not disseminate, distribute or copy this e-mail.
> Please notify the sender immediately by email if you have received this
> email by mistake and delete this email from your system.
>
>
> JBA Risk Management Limited is registered in England, company number
> 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North
> Yorkshire, BD23 3FD, Telephone: +441756799919
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200123/e41b547c/attachment-0001.html>

From stephenwoodbridge37 at gmail.com  Thu Jan 23 19:51:16 2020
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Thu, 23 Jan 2020 22:51:16 -0500
Subject: [gdal-dev] Solved: Re: Having a problem getting VRT ComplexSource
	to Scale
In-Reply-To: <2a07e09b-c313-7e0c-7e6a-0758d428ce00@gmail.com>
References: <2a07e09b-c313-7e0c-7e6a-0758d428ce00@gmail.com>
Message-ID: <c7fb04ad-10eb-627a-dbbc-098baee44ebe@gmail.com>

Never mind! I just checked the histogram and the data is getting scaled, 
I forgot that I was also scaling it in my mapfile so the results  where 
getting masked.

-Steve

On 1/23/2020 8:20 PM, Stephen Woodbridge wrote:
> Hi all,
>
> I'm having trouble getting my VRT file to scale the source data into 
> my ColorTable.
> I've been looking at this https://gdal.org/drivers/raster/vrt.html
>
> The source GeoTiff has:
>
> Band 1 Block=4500x1 Type=Float32, ColorInterp=Gray
>   Minimum=1.082, Maximum=46.322, Mean=34.181, StdDev=2.049
>   NoData Value=-30000
>   Overviews: 2250x2126, 1125x1063, 563x532, 282x266, 141x133, 71x67
>   Metadata:
>     STATISTICS_MAXIMUM=46.321998596191
>     STATISTICS_MEAN=34.181107349018
>     STATISTICS_MINIMUM=1.0819988250732
>     STATISTICS_STDDEV=2.0492649377546
>
> My goal is to scale the source 0-50 into 10-240 in the ColorTable.
>
>
> The VRT looks like:
>
> <VRTDataset rasterXSize="4500" rasterYSize="4251">
>   <GeoTransform> -180.0 ,0.08 , 0 , 90.0 , 0 , -0.04 </GeoTransform>
>   <Metadata>
>   </Metadata>
>   <VRTRasterBand dataType="Byte" band="1">
>     <ColorInterp>Palette</ColorInterp>
>     <ColorTable>
>       <Entry c1="0" c2="0" c3="0" c4="255"/>
>       <Entry c1="0" c2="0" c3="255" c4="255"/>
> ...
>       <Entry c1="255" c2="255" c3="255" c4="255"/>
>     </ColorTable>
>     <ComplexSource>
>       <SourceFilename 
> relativeToVRT="1">HYCOM_tomorrow_salinity_0.tif</SourceFilename>
>       <SourceBand>1</SourceBand>
>       <ScaleOffset>0</ScaleOffset>
>       <ScaleRatio>1</ScaleRatio>
>       <NODATA>0</NODATA>
>       <SrcRect xOff="0" yOff="0" xSize="4500" ySize="4251"/>
>       <DstRect xOff="0" yOff="0" xSize="4500" ySize="4251"/>
>     </ComplexSource>
>   </VRTRasterBand>
> </VRTDataset>
>
> 50 - 0 = 50
> 240 - 10 = 230
> 230 / 50 = 4.6 = ScaleRatio
> 10 = ScaleRatio
>
> I've tried a lot of other value trying to play with the scaling.
>
> I also tried using:
>
> <Exponent>0</Exponent>
>
> <SrcMin>0</SrcMin>
> <SrcMax>50</SrcMax>
> <DstMin>10</DstMin>
> <DstMax>240</DstMax> but that doesn't appear to work either. Using: 
> GDAL 2.2.3, released 2017/11/20 on Unbuntu 18.04 My conclusion is that 
> I'm not understanding the meaning of these fields or these are meant 
> for something other than my goal. Any help would be appreciated. 
> Thanks, -Steve
>


From lars.schylberg at blixtmail.se  Fri Jan 24 04:42:22 2020
From: lars.schylberg at blixtmail.se (lars.schylberg at blixtmail.se)
Date: Fri, 24 Jan 2020 12:42:22 +0000
Subject: [gdal-dev] Speeding up gdalwarp process
In-Reply-To: <JYiZRVHXDbmGu5swnZdDjnDW4Jo4UrgntI4mjBDd8ohkGITjetTV8vc1VjTAAsOTiR2_AMvQ_Lf4U8fiB28rByzXk_7CKo2YXtHoILE2_JY=@protonmail.com>
References: <JYiZRVHXDbmGu5swnZdDjnDW4Jo4UrgntI4mjBDd8ohkGITjetTV8vc1VjTAAsOTiR2_AMvQ_Lf4U8fiB28rByzXk_7CKo2YXtHoILE2_JY=@protonmail.com>
Message-ID: <d7ca48b71a8085879779e007d8c703b9@blixtmail.se>

I have used gnu parallel with good results. A description can be found here:

https://gis.stackexchange.com/questions/217814/full-utilization-of-cpu-cores-with-gdalwarp (https://gis.stackexchange.com/questions/217814/full-utilization-of-cpu-cores-with-gdalwarp)
/Lars Schylberg

24 januari 2020 kl. 02:31, "Simon" <twinbirds at protonmail.com (mailto:twinbirds at protonmail.com?to=%22Simon%22%20<twinbirds at protonmail.com>)> skrev:
Hi gdal-devs, 
I have a question, if there is some way to use gdalwarp in a clustering system (e.g., Sparks) or with GPU to speed up the process? My task involves re-projection and re-sampling of hundreds of high-resolution images. Any ideas to make use of Sparks or GPU is welcomed. Thank you. 
Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200124/fdf4ba69/attachment.html>

From rdmailings at duif.net  Fri Jan 24 06:38:51 2020
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Fri, 24 Jan 2020 15:38:51 +0100
Subject: [gdal-dev] Geopackages and Datetime fields
Message-ID: <c3f72448-a544-e977-6754-c73a2e25843b@duif.net>

Hi Devs / Geopackage masters,

Sorry for this long email, but I have some Geopackage/Datetime questions
of which I hope people here have some knowledge and find some time to
read this...

I'm experimenting with writing time-based model results into
geopackages, and make those results (1 run = 1 geopackage) automatically
available as WMS-t.

-1- First thing I wonder is how gdal/mapserver is handling geopackages
in a multi-threaded environment: if more web=clients are making a lot of
requests, is gdal/mapserver able to open the geopackage in parallel?
Reason I ask is because of the '-shm' and '-wal' files.

-2- Seconds Question is about Datetime handling.
Reading [0] I understand that SQLite (and so gpkg) does not have a
native store format for date/times. And there is something called
'affinity' which determines IF something is stored as integer, float or
string.

I wonder how Mapserver/GDAL is handling filters with datetimes. Trying
to setup mapserver with a geopackage with datetimes as ISO-strings all
worked. But doing the same with a datetime column holding
'unixepoch'-integers was NOT working.
Should this work? Or is filtering only working with ISO datetime strings?

-3- I tried both Mapserver and Geoserver (I know, not gdal...). But
Geoserver is not 'seeing' the datetimes as... well datetimes, but as
strings.
Created an issue for this [1], and wondered how GDAL or other software
was handling this.
In my issue [1] Jukka proposed to use a query like:
 SELECT sql FROM sqlite_master
 WHERE type = 'table' AND name = 'tablename'
which then gives you the sql to create the table WITH the types in it.
BUT this is not working for 'views' based on that table (my use case...)

Then I found in GDAL sources [2] the following:
 PRAGMA table_info('tablename')
which works BOTH for tables AND views !
Question here: would that be the best route to take to make Geotools-lib
more datetime-aware?
Looking in the sqlite descriptions about pragma's [3] it is not very
safe, but ... hey, if GDAL is using it... :-)

Thanks for anybody willing to shed some light in this.

Regards,

Richard Duivenvoorde


[0] https://www.sqlite.org/datatype3.html
[1] https://osgeo-org.atlassian.net/browse/GEOS-9392
[2]
https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrsf_frmts/sqlite/ogrsqlitetablelayer.cpp#L525
[3] https://www.sqlite.org/pragma.html

From even.rouault at spatialys.com  Fri Jan 24 07:01:47 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 Jan 2020 16:01:47 +0100
Subject: [gdal-dev] Geopackages and Datetime fields
In-Reply-To: <c3f72448-a544-e977-6754-c73a2e25843b@duif.net>
References: <c3f72448-a544-e977-6754-c73a2e25843b@duif.net>
Message-ID: <23594533.LG28ePb4yI@even-i700>

Richard,

> I'm experimenting with writing time-based model results into
> geopackages, and make those results (1 run = 1 geopackage) automatically
> available as WMS-t.
> 
> -1- First thing I wonder is how gdal/mapserver is handling geopackages
> in a multi-threaded environment: if more web=clients are making a lot of
> requests, is gdal/mapserver able to open the geopackage in parallel?
> Reason I ask is because of the '-shm' and '-wal' files.

As long as you don't write at the same time as you read, then no need to 
enable WAL mode. Concurrent reads on SQLite databases work out of the box.
This is the SHARED locking mode of
https://www.sqlite.org/lockingv3.html

> 
> -2- Seconds Question is about Datetime handling.
> Reading [0] I understand that SQLite (and so gpkg) does not have a
> native store format for date/times.

True for plain SQLite, but GPKG specifies a DATETIME time:

See Table 1 at http://www.geopackage.org/spec121/#_sqlite_container
"""
DATETIME
ISO-8601 date/time string in the form YYYY-MM-DDTHH:MM:SS.SSSZ with T 
separator character and Z suffix for coordinated universal time (UTC) encoded 
in either UTF-8 or UTF-16. See TEXT. Stored as SQLite TEXT.
"""

GDAL implements that. If putting other type of content in such columns, GDAL 
master since a couple days will warn about it. Previous versions would just 
create a unset field.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mariusjigmond at hotmail.com  Fri Jan 24 16:04:42 2020
From: mariusjigmond at hotmail.com (Marius Jigmond)
Date: Sat, 25 Jan 2020 00:04:42 +0000
Subject: [gdal-dev] Speeding up gdalwarp process
In-Reply-To: <JYiZRVHXDbmGu5swnZdDjnDW4Jo4UrgntI4mjBDd8ohkGITjetTV8vc1VjTAAsOTiR2_AMvQ_Lf4U8fiB28rByzXk_7CKo2YXtHoILE2_JY=@protonmail.com>
References: <JYiZRVHXDbmGu5swnZdDjnDW4Jo4UrgntI4mjBDd8ohkGITjetTV8vc1VjTAAsOTiR2_AMvQ_Lf4U8fiB28rByzXk_7CKo2YXtHoILE2_JY=@protonmail.com>
Message-ID: <CY4PR22MB0183D564A4DFBD5474B4C3E6B20E0@CY4PR22MB0183.namprd22.prod.outlook.com>

We've been using Geotrellis (https://geotrellis.io/) for Spark jobs.

-marius
________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Simon <twinbirds at protonmail.com>
Sent: Thursday, January 23, 2020 6:30 PM
To: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] Speeding up gdalwarp process

Hi gdal-devs,
I have a question, if there is some way to use gdalwarp in a clustering system (e.g., Sparks) or with GPU to speed up the process? My task involves re-projection and re-sampling of hundreds of high-resolution images. Any ideas to make use of Sparks or GPU is welcomed. Thank you.
Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200125/ff460ff2/attachment.html>

From gr.pomadchin at gmail.com  Fri Jan 24 16:43:53 2020
From: gr.pomadchin at gmail.com (Grigory Pomadchin)
Date: Fri, 24 Jan 2020 19:43:53 -0500
Subject: [gdal-dev] Speeding up gdalwarp process
In-Reply-To: <CY4PR22MB0183D564A4DFBD5474B4C3E6B20E0@CY4PR22MB0183.namprd22.prod.outlook.com>
References: <JYiZRVHXDbmGu5swnZdDjnDW4Jo4UrgntI4mjBDd8ohkGITjetTV8vc1VjTAAsOTiR2_AMvQ_Lf4U8fiB28rByzXk_7CKo2YXtHoILE2_JY=@protonmail.com>
 <CY4PR22MB0183D564A4DFBD5474B4C3E6B20E0@CY4PR22MB0183.namprd22.prod.outlook.com>
Message-ID: <CANMg_16e-CBH3pdhBUbsU88+63kased08rt1-0huaC4zQWmLVg@mail.gmail.com>

Hey Simon,

We had a successful enough experience with working with GDAL & Spark.

Initially there was a try to use GDAL JNI bindings for these purposes, but
it turned out that GDAL, and especially WARP (using its VRT driver), is not
completely thread safe.

You can have a look into an alternative version of JNI bindings (very
limited and covering warp only)
https://github.com/geotrellis/gdal-warp-bindings

However, even though bindings are thread safe, it was achieved by dataset
locks. Usage of GDAL in a highly multithreaded environment can still be
challenging in terms of a desired performance.

To resolve your need in Spark you can in general try GeoTrellis (and there
is a GDAL support to perform all warp steps).

On Fri, Jan 24, 2020 at 7:04 PM Marius Jigmond <mariusjigmond at hotmail.com>
wrote:

> We've been using Geotrellis (https://geotrellis.io/) for Spark jobs.
>
> -marius
> ------------------------------
> *From:* gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Simon <
> twinbirds at protonmail.com>
> *Sent:* Thursday, January 23, 2020 6:30 PM
> *To:* gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
> *Subject:* [gdal-dev] Speeding up gdalwarp process
>
>
> Hi gdal-devs,
> I have a question, if there is some way to use gdalwarp in a clustering
> system (e.g., Sparks) or with GPU to speed up the process? My task involves
> re-projection and re-sampling of hundreds of high-resolution images. Any
> ideas to make use of Sparks or GPU is welcomed. Thank you.
> Simon
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Grigory Pomadchin
LinkedIn: http://www.linkedin.com/in/grpomadchin
<https://vk.com/away.php?to=http%3A%2F%2Fwww.linkedin.com%2Fin%2Fgrpomadchin&cc_key=>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200124/55ab2d06/attachment.html>

From even.rouault at spatialys.com  Sat Jan 25 09:52:14 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 25 Jan 2020 18:52:14 +0100
Subject: [gdal-dev] Refreshing GDAL's logo
Message-ID: <4816617.FNJc4Uo8ek@even-i700>

Hi,

A number of people have expressed a wish to refresh GDAL's logo and have 
already submitted ideas in https://github.com/OSGeo/gdal/issues/2117

In order to make the topic advance in a positive way, I suggest the following 
guidelines for an informal contest starting now:
- Propositions must be added to the above ticket until February 8 any time 
zone. In the spirit of "release early release often", it is suggested that 
people don't wait until the deadline so as to benefit from community feedback 
and potentially improve their proposals.
- Each proposition must be clearly associated with a "${person_name}_$
{unique_id}" identifier so we can unambiguously reference propositions.
- A same person can issue any number of propositions.
- Community members are invited to express their preferences in the ticket.
- PSC will have final word on adopting a proposition or keeping the current 
logo if no clear concensus emerges. I hope other PSC members have better 
visual judgment than me to evaluate propositions ;-)
- The selected proposition will have to be ultimately released as SVG readable 
by FOSS tools. With a color & back-white version
- The selected proposition will have to be ultimately licensed under CC0 / 
Public domain for the sake of simplicity of use. For due credit, the author 
will be more than welcome to indicate its authorship, typically in rdf 
metadata, as was done for the PROJ logo (*)
- Perhaps I've forgotten rules that will be added later. Hence the informal 
contest :-)

Happy sketching,

Even

(*) https://raw.githubusercontent.com/OSGeo/PROJ/master/media/logo.svg

PS: I would have appreciated if someone else from the community had taken the 
lead on writing this email, as suggested in the ticket. Don't be shy.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From norman.barker at gmail.com  Sat Jan 25 10:17:35 2020
From: norman.barker at gmail.com (Norman Barker)
Date: Sat, 25 Jan 2020 12:17:35 -0600
Subject: [gdal-dev] TileDB multi-attribute, subdataset support
Message-ID: <CAN_Dn-HWOF2tUp1v2A-8rs=szkNg7vDNDjjBqrDVAB9HwWF7vQ@mail.gmail.com>

Hi,

TL;DR; I would like to remove part of the API (creation and open options)
from the TileDB driver and move it to the GDAL multi-dimensional API.

The TileDB GDAL driver (new in 3.0) supports multiple attributes per pixel
value and also a version of copying netCDF and HDF files within the
standard SUBDATASET model. It seems this is better suited to the
multi-dimensional API within GDAL
https://gdal.org/user/multidim_raster_data_model.html

I didn't document these additional pixel attribute options in
https://gdal.org/drivers/raster/tiledb.html#creation-options and you would
only really know about them if you looked at the tests -
https://github.com/OSGeo/gdal/blob/master/autotest/gdrivers/tiledb_write.py#L113

Any objections if I remove this functionality and support for SUBDATASETS
and move it to the multi-dimensional API? It makes this driver easier to
maintain and use.

Norman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200125/b945a326/attachment.html>

From neteler at osgeo.org  Sun Jan 26 13:30:37 2020
From: neteler at osgeo.org (Markus Neteler)
Date: Sun, 26 Jan 2020 22:30:37 +0100
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but geotransform
	not established
Message-ID: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>

Hi,

Likely I am overlooking something but I don't see why this fails:

I try to properly read some of these

Cartes topographiques 1:50000 du Nord de la Tunisie de 1943
https://www.sigterritoires.fr/index.php/cartes-topographiques-150000-du-nord-de-la-tunisie-de-1943/

Example:
wget http://www.nasca.ovh/downloads/tunisie/feuille20.zip

unzip feuille20.zip
# content:
txu-pclmaps-oclc-6540922-tunis-20.jgwx
txu-pclmaps-oclc-6540922-tunis-20.jpg
txu-pclmaps-oclc-6540922-tunis-20.jpg.aux.xml

gdalinfo txu-pclmaps-oclc-6540922-tunis-20.jpg
Driver: JPEG/JPEG JFIF
Files: txu-pclmaps-oclc-6540922-tunis-20.jpg
       txu-pclmaps-oclc-6540922-tunis-20.jpg.aux.xml
Size is 5735, 3964
Coordinate System is:
PROJCS["NW Africa Grid",
    GEOGCS["GCS_NTF",
        DATUM["Nouvelle_Triangulation_Francaise",
            SPHEROID["Clarke_1880_IGN",6378249.2,293.4660212936265]],
        PRIMEM["Greenwich",0.0],
        UNIT["Degree",0.0174532925199433]],
    PROJECTION["Lambert_Conformal_Conic_1SP"],
    PARAMETER["False_Easting",1000000.0],
    PARAMETER["False_Northing",500000.0],
    PARAMETER["Central_Meridian",0.0],
    PARAMETER["Scale_Factor",0.9994],
    PARAMETER["Latitude_Of_Origin",34.0],
    UNIT["Meter",1.0]]
Metadata:
  EXIF_BitsPerSample=8 8 8
  EXIF_ColorSpace=65535
  EXIF_Compression=1
  EXIF_DateTime=2014:10:08 15:15:15
  EXIF_ExifVersion=0221
  EXIF_Make=i2s Digibook Scanner
  EXIF_Model=Suprascan A0 14000 RGB
  EXIF_Orientation=1
  EXIF_PhotometricInterpretation=2
  EXIF_PixelXDimension=5735
  EXIF_PixelYDimension=3964
  EXIF_PlanarConfiguration=1
  EXIF_ResolutionUnit=2
  EXIF_SamplesPerPixel=3
  EXIF_Software=Adobe Photoshop CS5 Macintosh
  EXIF_XResolution=(300)
  EXIF_YResolution=(300)
Image Structure Metadata:
  COMPRESSION=JPEG
  INTERLEAVE=PIXEL
  SOURCE_COLOR_SPACE=YCbCr
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0, 3964.0)
Upper Right ( 5735.0,    0.0)
Lower Right ( 5735.0, 3964.0)
Center      ( 2867.5, 1982.0)
Band 1 Block=5735x1 Type=Byte, ColorInterp=Red
  Overviews: 2868x1982, 1434x991, 717x496, 160x111
  Image Structure Metadata:
    COMPRESSION=JPEG
Band 2 Block=5735x1 Type=Byte, ColorInterp=Green
  Overviews: 2868x1982, 1434x991, 717x496, 160x111
  Image Structure Metadata:
    COMPRESSION=JPEG
Band 3 Block=5735x1 Type=Byte, ColorInterp=Blue
  Overviews: 2868x1982, 1434x991, 717x496, 160x111
  Image Structure Metadata:
    COMPRESSION=JPEG

--> Corner Coordinates: not recognized properly.


Using the graphical GPC tool of GRASS GIS
(https://grass.osgeo.org/grass78/manuals/wxGUI.gcp.html)
and exporting the map to GeoTIFF + gdal_translate to JPG with World
file I obtained a quite similar result with working geotransform:

gdalinfo testmap_in_grass_gis.jpg
Driver: JPEG/JPEG JFIF
Files: testmap_in_grass_gis.jpg
       testmap_in_grass_gis.jpg.aux.xml
       testmap_in_grass_gis.wld
Size is 5821, 4104
Coordinate System is:
PROJCS["NW Africa Grid",
    GEOGCS["clark80IGN",
        DATUM["Nouvelle_Triangulation_Francaise",
            SPHEROID["Clarke_1880_IGN_France",6378249.2,293.466021294,
                AUTHORITY["EPSG","7011"]],
            AUTHORITY["EPSG","6275"]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433]],
    PROJECTION["Lambert_Conformal_Conic_1SP"],
    PARAMETER["latitude_of_origin",34],
    PARAMETER["central_meridian",0],
    PARAMETER["scale_factor",0.9994],
    PARAMETER["false_easting",1000000],
    PARAMETER["false_northing",500000],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]]]
Origin = (1878254.000000000000000,862484.000000000000000)
Pixel Size = (7.000000000000000,-7.000000000000000)
Metadata:
  AREA_OR_POINT=Area
  TIFFTAG_SOFTWARE=GRASS GIS 7.8.3dev with GDAL 2.3.2
Image Structure Metadata:
  COMPRESSION=JPEG
  INTERLEAVE=PIXEL
  SOURCE_COLOR_SPACE=YCbCr
Corner Coordinates:
Upper Left  ( 1878254.000,  862484.000) (  9d51'36.99"E, 36d53'11.62"N)
Lower Left  ( 1878254.000,  833756.000) (  9d49'45.94"E, 36d37'44.47"N)
Upper Right ( 1919001.000,  862484.000) ( 10d18'53.03"E, 36d51' 1.77"N)
Lower Right ( 1919001.000,  833756.000) ( 10d16'56.93"E, 36d35'34.99"N)
Center      ( 1898627.500,  848120.000) ( 10d 4'18.31"E, 36d44'23.98"N)
Band 1 Block=5821x1 Type=Byte, ColorInterp=Red
  NoData Value=255
  Overviews: 2911x2052, 1456x1026, 728x513
  Image Structure Metadata:
    COMPRESSION=JPEG
Band 2 Block=5821x1 Type=Byte, ColorInterp=Green
  NoData Value=255
  Overviews: 2911x2052, 1456x1026, 728x513
  Image Structure Metadata:
    COMPRESSION=JPEG
Band 3 Block=5821x1 Type=Byte, ColorInterp=Blue
  NoData Value=255
  Overviews: 2911x2052, 1456x1026, 728x513
  Image Structure Metadata:
    COMPRESSION=JPEG

I am using
GDAL 2.3.2, released 2018/09/21
on Fedora 31.

Now, why is the original file not properly recognized?

Thanks for a hint,
Markus

From andrew at aitchison.me.uk  Sun Jan 26 13:58:32 2020
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sun, 26 Jan 2020 21:58:32 +0000 (GMT)
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but
 geotransform not established
In-Reply-To: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
References: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
Message-ID: <alpine.DEB.2.22.394.2001262145340.29834@warden.aitchison.me.uk>


On Sun, 26 Jan 2020, Markus Neteler wrote:

> Hi,
>
> Likely I am overlooking something but I don't see why this fails:
>
> I try to properly read some of these
>
> Cartes topographiques 1:50000 du Nord de la Tunisie de 1943
> https://www.sigterritoires.fr/index.php/cartes-topographiques-150000-du-nord-de-la-tunisie-de-1943/

That page includes a message:
     Attention! L'extension du fichier world est .jgwx: si vous utilisez
     un autre logiciel qu'ArcGis, changez l'extension en .jgw

Does that help ?

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From neteler at osgeo.org  Sun Jan 26 14:17:22 2020
From: neteler at osgeo.org (Markus Neteler)
Date: Sun, 26 Jan 2020 23:17:22 +0100
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but
 geotransform not established
In-Reply-To: <alpine.DEB.2.22.394.2001262145340.29834@warden.aitchison.me.uk>
References: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
 <alpine.DEB.2.22.394.2001262145340.29834@warden.aitchison.me.uk>
Message-ID: <CALFmHht2sQDRC_7=KNVFA0biNwd30MSVpbWtNKq+dEsftKT47Q@mail.gmail.com>

On Sun, Jan 26, 2020 at 11:04 PM Andrew C Aitchison
<andrew at aitchison.me.uk> wrote:
> On Sun, 26 Jan 2020, Markus Neteler wrote:
>
> > Hi,
> >
> > Likely I am overlooking something but I don't see why this fails:
> >
> > I try to properly read some of these
> >
> > Cartes topographiques 1:50000 du Nord de la Tunisie de 1943
> > https://www.sigterritoires.fr/index.php/cartes-topographiques-150000-du-nord-de-la-tunisie-de-1943/
>
> That page includes a message:
>      Attention! L'extension du fichier world est .jgwx: si vous utilisez
>      un autre logiciel qu'ArcGis, changez l'extension en .jgw
>
> Does that help ?

Magic! I must have overlooked the hint, sorry.

Indeed, the manual page states:
https://gdal.org/drivers/raster/jpeg.html
"... ESRI world file exists with the .jgw, .jpgw/.jpegw or .wld suffixes..."

which is clearly not .jgwx.
Wish: Unless there is no obstacle, perhaps .jgwx could be allowed as
well (not sure what the "x" stands for here)?

Thanks for your quick response,

Markus

From even.rouault at spatialys.com  Sun Jan 26 16:45:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jan 2020 01:45:07 +0100
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but
	geotransform not established
In-Reply-To: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
References: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
Message-ID: <8831328.ZY2zTpJ0OJ@even-i700>

Hi Markus,

I've found some doc about this .jgwx in
http://resources.arcgis.com/en/help/main/10.1/index.html#//009t00000028000000
So this is a ESRI specific thing
"""Starting at ArcGIS 9.2 SP2, if the transformation cannot be expressed as a 
world file, the Update Georeferencing command on the Georeferencing toolbar 
writes the transformation into the .aux.xml file and also writes an 
approximate affine transformation into a text file or a world file with an x 
on the end of the extension name. [...]. Keep in mind that this is not an 
exact transformation; it is only an approximation."""

So it might not be always relevant to report the content of the .jgwx as a 
geotransform. Or if we did, we should probably add some metadata like 
APPROXIMATE_GEOTRANSFORM=YES

> Using the graphical GPC tool of GRASS GIS
> (https://grass.osgeo.org/grass78/manuals/wxGUI.gcp.html)
> and exporting the map to GeoTIFF + gdal_translate to JPG with World
> file I obtained a quite similar result with working geotransform:

How does this tool manage to create a geotransform frmo this file ? The 
.aux.xml file does contain a GeodataXform ESRI specific element. GDAL just 
extract this in the xml:ESRI metadata domain, but doesn't do further use of 
this. Here it could potentially report the GCPs in it as GDAL GCPs. I've 
grepped in GRASS source code to see if it has specific code to extract GCPs 
from GeodataXform, but I can't find anything. So this is quite mysterious to 
me.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From twinbirds at protonmail.com  Mon Jan 27 02:03:13 2020
From: twinbirds at protonmail.com (Simon)
Date: Mon, 27 Jan 2020 10:03:13 +0000
Subject: [gdal-dev] mosaicking is very slow
Message-ID: <kgoon5O2TgxTZOz3wdGO69xJMfVWt0WgOrLzuHJoZzDI16eIbemUlfSb2yfKicEFAYlAjGgkUIbrncyUh36ehA6DeQ10zOpEHuj-jbryw_g=@protonmail.com>

Hello everyone,

I am stiching aroung 100 geotiff images each of around 4gb. However, translating the vrt file into geotiff is going on for days.
gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co COMPRESS=LZW -co BIGTIFF=YES infile.vrt outfile.tif

How can I speed up it?
Thank you.
Simon
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200127/fba9f7d7/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan 27 02:48:32 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Mon, 27 Jan 2020 03:48:32 -0700 (MST)
Subject: [gdal-dev] mosaicking is very slow
In-Reply-To: <kgoon5O2TgxTZOz3wdGO69xJMfVWt0WgOrLzuHJoZzDI16eIbemUlfSb2yfKicEFAYlAjGgkUIbrncyUh36ehA6DeQ10zOpEHuj-jbryw_g=@protonmail.com>
References: <kgoon5O2TgxTZOz3wdGO69xJMfVWt0WgOrLzuHJoZzDI16eIbemUlfSb2yfKicEFAYlAjGgkUIbrncyUh36ehA6DeQ10zOpEHuj-jbryw_g=@protonmail.com>
Message-ID: <1580122112005-0.post@n6.nabble.com>

Hi,

I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I would
check if the source images are tiled. If they are not it could be worth an
extra step to make tiled copies.

-Jukka Rahkonen-


Simon-4 wrote
> Hello everyone,
> 
> I am stiching aroung 100 geotiff images each of around 4gb. However,
> translating the vrt file into geotiff is going on for days.
> gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co COMPRESS=LZW -co
> BIGTIFF=YES infile.vrt outfile.tif
> 
> How can I speed up it?
> Thank you.
> Simon
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From twinbirds at protonmail.com  Mon Jan 27 03:17:38 2020
From: twinbirds at protonmail.com (Simon)
Date: Mon, 27 Jan 2020 11:17:38 +0000
Subject: [gdal-dev] mosaicking is very slow
In-Reply-To: <1580122112005-0.post@n6.nabble.com>
References: <kgoon5O2TgxTZOz3wdGO69xJMfVWt0WgOrLzuHJoZzDI16eIbemUlfSb2yfKicEFAYlAjGgkUIbrncyUh36ehA6DeQ10zOpEHuj-jbryw_g=@protonmail.com>
 <1580122112005-0.post@n6.nabble.com>
Message-ID: <dtfubpMC4TeHMg9adM_8eDQ3_FDHJ7BFobNSAzZLNoOreSyEIFoq-NSqCV83UFnyl3cdEMEdEx_ynF4QvxuT67EXlNDmzDL2fliheSU2pcQ=@protonmail.com>

Hi,
Thanks for your answer. The source images are not tiled. So, how can I tile them? Is not it additional load? I will try removing these ones:
--config GDAL_CACHEMAX 8000
-co TILED=YES

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Monday, January 27, 2020 7:48 PM, jratike80 <jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Hi,
>
> I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I would
> check if the source images are tiled. If they are not it could be worth an
> extra step to make tiled copies.
>
> -Jukka Rahkonen-
>
> Simon-4 wrote
>
> > Hello everyone,
> > I am stiching aroung 100 geotiff images each of around 4gb. However,
> > translating the vrt file into geotiff is going on for days.
> > gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co COMPRESS=LZW -co
> > BIGTIFF=YES infile.vrt outfile.tif
> > How can I speed up it?
> > Thank you.
> > Simon
> >
> > gdal-dev mailing list
>
> > gdal-dev at .osgeo
>
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
>
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan 27 04:04:33 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Mon, 27 Jan 2020 12:04:33 +0000
Subject: [gdal-dev] mosaicking is very slow
Message-ID: <8d3cce5247c74683a85055aba16be9df@C119S212VM042.msvyvi.vaha.local>

Hi,

If your source images are 4 GB then their size is at least 40000 by 40000 pixels, or more if they are compressed. If gdalwarp now needs 256*256 pixels worth of source data, from a striped image it must read 256*40000 (rows*pixels per row), while from tiled source it can read just from 1 to 4 tiles, 256*256 each.

Pre-processing is additional load but if you pay 10 units extra for tiling and then save 100 units in warping you are still a winner.
 
Make copies as
gdal_translate -of GTiff -co tiled=yes -co compress=LZW input1.tif copy1.tif

Then create a new VRT file. Absolutely do not remove -co tiled=yes from the gdalwarp command or you'll demand GDAL to write at least 400000 pixels wide stripes.

-Jukka Rahkonen-


-----Alkuperäinen viesti-----
Lähettäjä: Simon <twinbirds at protonmail.com> 
Lähetetty: maanantai 27. tammikuuta 2020 13.18
Vastaanottaja: Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi>
Kopio: gdal-dev at lists.osgeo.org
Aihe: Re: [gdal-dev] mosaicking is very slow

Hi,
Thanks for your answer. The source images are not tiled. So, how can I tile them? Is not it additional load? I will try removing these ones:
--config GDAL_CACHEMAX 8000
-co TILED=YES

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Monday, January 27, 2020 7:48 PM, jratike80 <jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Hi,
>
> I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I 
> would check if the source images are tiled. If they are not it could 
> be worth an extra step to make tiled copies.
>
> -Jukka Rahkonen-
>
> Simon-4 wrote
>
> > Hello everyone,
> > I am stiching aroung 100 geotiff images each of around 4gb. However, 
> > translating the vrt file into geotiff is going on for days.
> > gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co 
> > COMPRESS=LZW -co BIGTIFF=YES infile.vrt outfile.tif How can I speed 
> > up it?
> > Thank you.
> > Simon
> >
> > gdal-dev mailing list
>
> > gdal-dev at .osgeo
>
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
>
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan 27 04:24:20 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Mon, 27 Jan 2020 12:24:20 +0000
Subject: [gdal-dev] Why GTModelTypeGeoKey in EPSG:3857 GeoTIFF is
	User-Defined?
Message-ID: <6112a38e51f8415ea87c207509c09eb8@C119S212VM042.msvyvi.vaha.local>

Hi,

See more details from this Geoserver issue https://osgeo-org.atlassian.net/browse/GEOS-9475.
The core is that when GDAL writes a GeoTIFF in EPSG:3857 is sets this tag:
GTModelTypeGeoKey (Short,1): User-Defined

Geoserver is awaiting GTModelTypeGeoKey (Short,1): ModelTypeProjected

Is there something specific in EPSG:3857 that makes it into User-Defined, or what happens?
I used GDAL 3.1.0dev for testing, with command
gdal_translate -a_srs epsg:3857 test.tif 3857.tif

-Jukka Rahkonen-

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200127/657da5a0/attachment.html>

From elmirgeo at protonmail.com  Mon Jan 27 05:11:52 2020
From: elmirgeo at protonmail.com (elmir)
Date: Mon, 27 Jan 2020 13:11:52 +0000
Subject: [gdal-dev] mosaicking is very slow
In-Reply-To: <8d3cce5247c74683a85055aba16be9df@C119S212VM042.msvyvi.vaha.local>
References: <8d3cce5247c74683a85055aba16be9df@C119S212VM042.msvyvi.vaha.local>
Message-ID: <u16DwgOcFXNzocYpmzDAlijizH-qh2fPb0bAYtofcPFoUG40_xUM7MlHB8RBwix547vrOrLpbjlyYQ9ZUhea_eKEkk7Z0XX4mwj2RuUJkvI=@protonmail.com>

hi, thanks for nicely explaining. Can i change size of tile, 256*256; for speeding up?

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Monday, January 27, 2020 9:04 PM, Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Hi,
>
> If your source images are 4 GB then their size is at least 40000 by 40000 pixels, or more if they are compressed. If gdalwarp now needs 256256 pixels worth of source data, from a striped image it must read 25640000 (rowspixels per row), while from tiled source it can read just from 1 to 4 tiles, 256256 each.
>
> Pre-processing is additional load but if you pay 10 units extra for tiling and then save 100 units in warping you are still a winner.
>
> Make copies as
> gdal_translate -of GTiff -co tiled=yes -co compress=LZW input1.tif copy1.tif
>
> Then create a new VRT file. Absolutely do not remove -co tiled=yes from the gdalwarp command or you'll demand GDAL to write at least 400000 pixels wide stripes.
>
> -Jukka Rahkonen-
>
> -----Alkuperäinen viesti-----
> Lähettäjä: Simon twinbirds at protonmail.com
> Lähetetty: maanantai 27. tammikuuta 2020 13.18
> Vastaanottaja: Rahkonen Jukka (MML) jukka.rahkonen at maanmittauslaitos.fi
> Kopio: gdal-dev at lists.osgeo.org
> Aihe: Re: [gdal-dev] mosaicking is very slow
>
> Hi,
> Thanks for your answer. The source images are not tiled. So, how can I tile them? Is not it additional load? I will try removing these ones:
> --config GDAL_CACHEMAX 8000
> -co TILED=YES
>
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
> On Monday, January 27, 2020 7:48 PM, jratike80 jukka.rahkonen at maanmittauslaitos.fi wrote:
>
> > Hi,
> > I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I
> > would check if the source images are tiled. If they are not it could
> > be worth an extra step to make tiled copies.
> > -Jukka Rahkonen-
> > Simon-4 wrote
> >
> > > Hello everyone,
> > > I am stiching aroung 100 geotiff images each of around 4gb. However,
> > > translating the vrt file into geotiff is going on for days.
> > > gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co
> > > COMPRESS=LZW -co BIGTIFF=YES infile.vrt outfile.tif How can I speed
> > > up it?
> > > Thank you.
> > > Simon
> > > gdal-dev mailing list
> >
> > > gdal-dev at .osgeo
> >
> > > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >
> > --
> > Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



From twinbirds at protonmail.com  Mon Jan 27 05:20:34 2020
From: twinbirds at protonmail.com (Simon)
Date: Mon, 27 Jan 2020 13:20:34 +0000
Subject: [gdal-dev] mosaicking is very slow
In-Reply-To: <8d3cce5247c74683a85055aba16be9df@C119S212VM042.msvyvi.vaha.local>
References: <8d3cce5247c74683a85055aba16be9df@C119S212VM042.msvyvi.vaha.local>
Message-ID: <oIYg8WoJ6kcCIaEIoQpF87R07nZ4QdFouqd1bRN8xHN9-gliD0Qbr-ZX8Wszs3WKI9TuBWO6vTVHRaEEXzJR9VC2XTSJeh6uJ9Ad7Vu7_40=@protonmail.com>

Hi,
Okay, thank you.
By the way, while making copy of gtiffs, is not it good idea to increase GDAL_CACHEMAX?
Simon


‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Monday, January 27, 2020 9:04 PM, Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Hi,
>
> If your source images are 4 GB then their size is at least 40000 by 40000 pixels, or more if they are compressed. If gdalwarp now needs 256256 pixels worth of source data, from a striped image it must read 25640000 (rowspixels per row), while from tiled source it can read just from 1 to 4 tiles, 256256 each.
>
> Pre-processing is additional load but if you pay 10 units extra for tiling and then save 100 units in warping you are still a winner.
>
> Make copies as
> gdal_translate -of GTiff -co tiled=yes -co compress=LZW input1.tif copy1.tif
>
> Then create a new VRT file. Absolutely do not remove -co tiled=yes from the gdalwarp command or you'll demand GDAL to write at least 400000 pixels wide stripes.
>
> -Jukka Rahkonen-
>
> -----Alkuperäinen viesti-----
> Lähettäjä: Simon twinbirds at protonmail.com
> Lähetetty: maanantai 27. tammikuuta 2020 13.18
> Vastaanottaja: Rahkonen Jukka (MML) jukka.rahkonen at maanmittauslaitos.fi
> Kopio: gdal-dev at lists.osgeo.org
> Aihe: Re: [gdal-dev] mosaicking is very slow
>
> Hi,
> Thanks for your answer. The source images are not tiled. So, how can I tile them? Is not it additional load? I will try removing these ones:
> --config GDAL_CACHEMAX 8000
> -co TILED=YES
>
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
> On Monday, January 27, 2020 7:48 PM, jratike80 jukka.rahkonen at maanmittauslaitos.fi wrote:
>
> > Hi,
> > I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I
> > would check if the source images are tiled. If they are not it could
> > be worth an extra step to make tiled copies.
> > -Jukka Rahkonen-
> > Simon-4 wrote
> >
> > > Hello everyone,
> > > I am stiching aroung 100 geotiff images each of around 4gb. However,
> > > translating the vrt file into geotiff is going on for days.
> > > gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co
> > > COMPRESS=LZW -co BIGTIFF=YES infile.vrt outfile.tif How can I speed
> > > up it?
> > > Thank you.
> > > Simon
> > > gdal-dev mailing list
> >
> > > gdal-dev at .osgeo
> >
> > > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >
> > --
> > Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev



From even.rouault at spatialys.com  Mon Jan 27 05:42:29 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jan 2020 14:42:29 +0100
Subject: [gdal-dev] Why GTModelTypeGeoKey in EPSG:3857 GeoTIFF is
	User-Defined?
In-Reply-To: <6112a38e51f8415ea87c207509c09eb8@C119S212VM042.msvyvi.vaha.local>
References: <6112a38e51f8415ea87c207509c09eb8@C119S212VM042.msvyvi.vaha.local>
Message-ID: <9522903.Ro3g835Ro4@even-i700>

Hi Jukka,

Thanks for raising this. This is a unfortunate regression of GDAL 3.0 due to 
RFC 73 / PROJ 6 integration. It decided to use the GEOTIFF_KEYS_FLAVOR=ESRI_PE 
code path whereas it shouldn't have too. I've just fixed this in master and 
3.0 branches so that it writes the way it did in 2.4.

In the mean time, this can be worked around by adding
--config GTIFF_ESRI_CITATION NO

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan 27 06:41:49 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Mon, 27 Jan 2020 14:41:49 +0000
Subject: [gdal-dev] mosaicking is very slow
Message-ID: <fca2187d0ada4d0d879aaf78791afdb7@C119S212VM042.msvyvi.vaha.local>

Hi,

Yes, you can change the tile size. It is documented in https://gdal.org/drivers/raster/gtiff.html, BLOCKXSIZE and BLOCKYSIZE. Make a controlled test and measure timings. Optimizing one thing may lead to something suboptimal in another place and what is optimal for me does not need to be optimal for you because of different source data and hardware.

-Jukka Rahkonen-
 
-----Alkuperäinen viesti-----
Lähettäjä: elmir <elmirgeo at protonmail.com> 
Lähetetty: maanantai 27. tammikuuta 2020 15.12
Vastaanottaja: Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi>
Kopio: Simon <twinbirds at protonmail.com>; gdal-dev at lists.osgeo.org
Aihe: Re: [gdal-dev] mosaicking is very slow

hi, thanks for nicely explaining. Can i change size of tile, 256*256; for speeding up?

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Monday, January 27, 2020 9:04 PM, Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Hi,
>
> If your source images are 4 GB then their size is at least 40000 by 40000 pixels, or more if they are compressed. If gdalwarp now needs 256256 pixels worth of source data, from a striped image it must read 25640000 (rowspixels per row), while from tiled source it can read just from 1 to 4 tiles, 256256 each.
>
> Pre-processing is additional load but if you pay 10 units extra for tiling and then save 100 units in warping you are still a winner.
>
> Make copies as
> gdal_translate -of GTiff -co tiled=yes -co compress=LZW input1.tif 
> copy1.tif
>
> Then create a new VRT file. Absolutely do not remove -co tiled=yes from the gdalwarp command or you'll demand GDAL to write at least 400000 pixels wide stripes.
>
> -Jukka Rahkonen-
>
> -----Alkuperäinen viesti-----
> Lähettäjä: Simon twinbirds at protonmail.com
> Lähetetty: maanantai 27. tammikuuta 2020 13.18
> Vastaanottaja: Rahkonen Jukka (MML) 
> jukka.rahkonen at maanmittauslaitos.fi
> Kopio: gdal-dev at lists.osgeo.org
> Aihe: Re: [gdal-dev] mosaicking is very slow
>
> Hi,
> Thanks for your answer. The source images are not tiled. So, how can I tile them? Is not it additional load? I will try removing these ones:
> --config GDAL_CACHEMAX 8000
> -co TILED=YES
>
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
> On Monday, January 27, 2020 7:48 PM, jratike80 jukka.rahkonen at maanmittauslaitos.fi wrote:
>
> > Hi,
> > I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I 
> > would check if the source images are tiled. If they are not it could 
> > be worth an extra step to make tiled copies.
> > -Jukka Rahkonen-
> > Simon-4 wrote
> >
> > > Hello everyone,
> > > I am stiching aroung 100 geotiff images each of around 4gb. 
> > > However, translating the vrt file into geotiff is going on for days.
> > > gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co 
> > > COMPRESS=LZW -co BIGTIFF=YES infile.vrt outfile.tif How can I 
> > > speed up it?
> > > Thank you.
> > > Simon
> > > gdal-dev mailing list
> >
> > > gdal-dev at .osgeo
> >
> > > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >
> > --
> > Sent from: 
> > http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan 27 07:16:32 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Mon, 27 Jan 2020 15:16:32 +0000
Subject: [gdal-dev] mosaicking is very slow
Message-ID: <0f85f769b92542c7b8b83aad3669c955@C119S212VM042.msvyvi.vaha.local>

Hi,

You can read considerations about memory from 

https://trac.osgeo.org/gdal/wiki/UserDocs/GdalWarp#WillincreasingRAMincreasethespeedofgdalwarp

My guess it that increasing CACHEMAX might help a bit in this use case because it feels similar to the example that is used in the user doc "This could occur, for instance, in a scanline oriented input file which is processed in multiple chunks (horizontally) by gdalwarp". But no documentation is as accurate as a good test. Take a stop watch and measure timings with different settings and you will know how your system reacts.

Unfortunately it is easy to test and optimize things which are not relevant, for example to test only different memory settings if the real issue happens to be in the source data that requires unnecessarily much memory. But fortunately it is also easy to run another set of tests with tiled source images and compare the results.
 
-Jukka Rahkonen-


-----Alkuperäinen viesti-----
Lähettäjä: Simon <twinbirds at protonmail.com> 
Lähetetty: maanantai 27. tammikuuta 2020 15.21
Vastaanottaja: Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi>
Kopio: gdal-dev at lists.osgeo.org
Aihe: Re: [gdal-dev] mosaicking is very slow

Hi,
Okay, thank you.
By the way, while making copy of gtiffs, is not it good idea to increase GDAL_CACHEMAX?
Simon


‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Monday, January 27, 2020 9:04 PM, Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Hi,
>
> If your source images are 4 GB then their size is at least 40000 by 40000 pixels, or more if they are compressed. If gdalwarp now needs 256256 pixels worth of source data, from a striped image it must read 25640000 (rowspixels per row), while from tiled source it can read just from 1 to 4 tiles, 256256 each.
>
> Pre-processing is additional load but if you pay 10 units extra for tiling and then save 100 units in warping you are still a winner.
>
> Make copies as
> gdal_translate -of GTiff -co tiled=yes -co compress=LZW input1.tif 
> copy1.tif
>
> Then create a new VRT file. Absolutely do not remove -co tiled=yes from the gdalwarp command or you'll demand GDAL to write at least 400000 pixels wide stripes.
>
> -Jukka Rahkonen-
>
> -----Alkuperäinen viesti-----
> Lähettäjä: Simon twinbirds at protonmail.com
> Lähetetty: maanantai 27. tammikuuta 2020 13.18
> Vastaanottaja: Rahkonen Jukka (MML) 
> jukka.rahkonen at maanmittauslaitos.fi
> Kopio: gdal-dev at lists.osgeo.org
> Aihe: Re: [gdal-dev] mosaicking is very slow
>
> Hi,
> Thanks for your answer. The source images are not tiled. So, how can I tile them? Is not it additional load? I will try removing these ones:
> --config GDAL_CACHEMAX 8000
> -co TILED=YES
>
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
> On Monday, January 27, 2020 7:48 PM, jratike80 jukka.rahkonen at maanmittauslaitos.fi wrote:
>
> > Hi,
> > I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I 
> > would check if the source images are tiled. If they are not it could 
> > be worth an extra step to make tiled copies.
> > -Jukka Rahkonen-
> > Simon-4 wrote
> >
> > > Hello everyone,
> > > I am stiching aroung 100 geotiff images each of around 4gb. 
> > > However, translating the vrt file into geotiff is going on for days.
> > > gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co 
> > > COMPRESS=LZW -co BIGTIFF=YES infile.vrt outfile.tif How can I 
> > > speed up it?
> > > Thank you.
> > > Simon
> > > gdal-dev mailing list
> >
> > > gdal-dev at .osgeo
> >
> > > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >
> > --
> > Sent from: 
> > http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev



From mulcahy.brianp at gmail.com  Mon Jan 27 12:40:24 2020
From: mulcahy.brianp at gmail.com (Brian)
Date: Mon, 27 Jan 2020 15:40:24 -0500
Subject: [gdal-dev] Recommended process for running a intersect test
 between a raster and a simple vector
In-Reply-To: <CADXYQQ66ossf8OA7JwezEG1+V+pk1my_GfL1TS-tCveKDmVrjw@mail.gmail.com>
References: <CANoBQeZAGruuDp_5ZuhamSaes5nar7BzU0C5QuMdav-mfF+QNQ@mail.gmail.com>
 <CADXYQQ66ossf8OA7JwezEG1+V+pk1my_GfL1TS-tCveKDmVrjw@mail.gmail.com>
Message-ID: <CANoBQebGi=oW2h+hQmLtcGS+iWLH3wgvpiF56QGXZjnW57dy0w@mail.gmail.com>

So If I have  X,Y, Z numbers how do I select just that tile like mapserver
does?

On Tue, Jan 14, 2020 at 10:09 PM Patrick Young <
patrick.mckendree.young at gmail.com> wrote:

> One trick I like regarding accessing overview levels is to use the open
> option to snag a handle direct to the overview level (see Even's post
> http://erouault.blogspot.com/2014/10/warping-overviews-and-warped-overviews.html);
> then you can run polygonize against a much smaller dataset.  If it's a COG
> presumably it has internal overviews.
>
> On Mon, Jan 13, 2020 at 12:22 PM Brian <mulcahy.brianp at gmail.com> wrote:
>
>> So I am not sure if this is the right place or not. Feel free to remove
>> if it is not.
>>
>> The problem:  I am needing to see if an extent (vector polygon, 4
>> vertices) has any interaction with a raster stored in the cog format.
>>
>> I thought about using raster_polygonize and running a intersect but that
>> is going to be way too slow and I don't need the detail at which the raster
>> is stored in.
>> So I was thinking of some alternatives.
>> Is there anyway to output just the polygon of the raster at a certain
>> overview level?
>> Is there any way to run intersects on a raster without converting it?
>> I know I can retrieve the extent of the raster and quickly determine if
>> an extent has any interaction with that raster extent. I also know that I
>> can send points(x,y) and retrieve the value of the raster at that point is
>> there any way to manipulate /game this? Maybe sending the extent as
>> individual points with added points in between the vertices and just
>> running multiple value at location operations? For my need, some false
>> positives would be acceptable. If it helps raster data is of rivers and
>> inundations.
>>
>> Has anyone else come up with some type of process for this?
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200127/9154a78e/attachment.html>

From wilcok36 at hotmail.com  Mon Jan 27 12:54:51 2020
From: wilcok36 at hotmail.com (Wilco K)
Date: Mon, 27 Jan 2020 20:54:51 +0000
Subject: [gdal-dev] OPeNDAP support with libdap
In-Reply-To: <AM6PR03MB5992DA43A36276114AA6F90CDF0F0@AM6PR03MB5992.eurprd03.prod.outlook.com>
References: <AM6PR03MB5992DA43A36276114AA6F90CDF0F0@AM6PR03MB5992.eurprd03.prod.outlook.com>
Message-ID: <AM6PR03MB5992A147BA0B799611CC14BBDF0B0@AM6PR03MB5992.eurprd03.prod.outlook.com>

Any suggestions?

________________________________
Van: Wilco K
Verzonden: donderdag 23 januari 2020 17:36
Aan: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Onderwerp: OPeNDAP support with libdap

LS,

which GDAL version includes the DODS driver (libdap)?
We need to query the NOAA GrADS Data Server for GFS data with c#.

Kind regards

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200127/7b57649e/attachment.html>

From laurent.celati at gmail.com  Mon Jan 27 13:09:35 2020
From: laurent.celati at gmail.com (celati Laurent)
Date: Mon, 27 Jan 2020 22:09:35 +0100
Subject: [gdal-dev] OPeNDAP support with libdap
In-Reply-To: <AM6PR03MB5992A147BA0B799611CC14BBDF0B0@AM6PR03MB5992.eurprd03.prod.outlook.com>
References: <AM6PR03MB5992DA43A36276114AA6F90CDF0F0@AM6PR03MB5992.eurprd03.prod.outlook.com>
 <AM6PR03MB5992A147BA0B799611CC14BBDF0B0@AM6PR03MB5992.eurprd03.prod.outlook.com>
Message-ID: <CAHByMH3fzD32x6JU3eCE=nuTEE84UCMVUX_hcwUvo0hN6NjcfQ@mail.gmail.com>

Good evening,

Could you unsubscribe me from the list please?

Thanks a lot.

Le lun. 27 janv. 2020 à 21:55, Wilco K <wilcok36 at hotmail.com> a écrit :

> Any suggestions?
>
> ------------------------------
> *Van:* Wilco K
> *Verzonden:* donderdag 23 januari 2020 17:36
> *Aan:* gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
> *Onderwerp:* OPeNDAP support with libdap
>
> LS,
>
> which GDAL version includes the DODS driver (libdap)?
> We need to query the NOAA GrADS Data Server for GFS data with c#.
>
> Kind regards
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200127/b13288ad/attachment.html>

From even.rouault at spatialys.com  Mon Jan 27 13:14:17 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jan 2020 22:14:17 +0100
Subject: [gdal-dev] OPeNDAP support with libdap
In-Reply-To: <AM6PR03MB5992A147BA0B799611CC14BBDF0B0@AM6PR03MB5992.eurprd03.prod.outlook.com>
References: <AM6PR03MB5992DA43A36276114AA6F90CDF0F0@AM6PR03MB5992.eurprd03.prod.outlook.com>
 <AM6PR03MB5992A147BA0B799611CC14BBDF0B0@AM6PR03MB5992.eurprd03.prod.outlook.com>
Message-ID: <2376645.aCN7WU2L5F@even-i700>

> which GDAL version includes the DODS driver (libdap)?
> We need to query the NOAA GrADS Data Server for GFS data with c#.

Debian/Ubuntu builds or the Docker "osgeo/gdal" (ubuntu-full) image at
https://github.com/OSGeo/gdal/tree/master/gdal/docker have the DODS driver 
built. But you'll have to build yourself the C# bindings.
As you mention C#, perhaps you want Windows builds, so you'll likely have to 
build everything from source. I haven't in mind Windows GDAL builds with 
libdap support.

I'd note that I'm not sure how functional the DODS driver is. It must not be 
very commonly used.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jan 27 13:28:04 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jan 2020 22:28:04 +0100
Subject: [gdal-dev] OPeNDAP support with libdap
In-Reply-To: <CAHByMH3fzD32x6JU3eCE=nuTEE84UCMVUX_hcwUvo0hN6NjcfQ@mail.gmail.com>
References: <AM6PR03MB5992DA43A36276114AA6F90CDF0F0@AM6PR03MB5992.eurprd03.prod.outlook.com>
 <AM6PR03MB5992A147BA0B799611CC14BBDF0B0@AM6PR03MB5992.eurprd03.prod.outlook.com>
 <CAHByMH3fzD32x6JU3eCE=nuTEE84UCMVUX_hcwUvo0hN6NjcfQ@mail.gmail.com>
Message-ID: <5306584.O85XZKB6ct@even-i700>

On lundi 27 janvier 2020 22:09:35 CET celati Laurent wrote:
> Good evening,
> 
> Could you unsubscribe me from the list please?

You can do it yourself. See the bottom-most text entry at
https://lists.osgeo.org/mailman/listinfo/gdal-dev

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From neteler at osgeo.org  Mon Jan 27 23:18:40 2020
From: neteler at osgeo.org (Markus Neteler)
Date: Tue, 28 Jan 2020 08:18:40 +0100
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but
 geotransform not established
In-Reply-To: <8831328.ZY2zTpJ0OJ@even-i700>
References: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
 <8831328.ZY2zTpJ0OJ@even-i700>
Message-ID: <CALFmHhujg29UDDzwN71WBfqazrkMW4gZUe03Q9SDzEsOcXxDHQ@mail.gmail.com>

Hi Even,

On Mon, Jan 27, 2020 at 1:45 AM Even Rouault <even.rouault at spatialys.com> wrote:
> Hi Markus,
>
> I've found some doc about this .jgwx in
> http://resources.arcgis.com/en/help/main/10.1/index.html#//009t00000028000000
> So this is a ESRI specific thing
> """Starting at ArcGIS 9.2 SP2, if the transformation cannot be expressed as a
> world file, the Update Georeferencing command on the Georeferencing toolbar
> writes the transformation into the .aux.xml file and also writes an
> approximate affine transformation into a text file or a world file with an x
> on the end of the extension name. [...]. Keep in mind that this is not an
> exact transformation; it is only an approximation."""
>
> So it might not be always relevant to report the content of the .jgwx as a
> geotransform. Or if we did, we should probably add some metadata like
> APPROXIMATE_GEOTRANSFORM=YES

I see, thanks for investigating.

> > Using the graphical GPC tool of GRASS GIS
> > (https://grass.osgeo.org/grass78/manuals/wxGUI.gcp.html)
> > and exporting the map to GeoTIFF + gdal_translate to JPG with World
> > file I obtained a quite similar result with working geotransform:
>
> How does this tool manage to create a geotransform frmo this file ?

What it does is that it writes a POINTS file which is specific to
https://grass.osgeo.org/grass78/manuals/i.rectify.html

> The .aux.xml file does contain a GeodataXform ESRI specific element. GDAL just
> extract this in the xml:ESRI metadata domain, but doesn't do further use of
> this. Here it could potentially report the GCPs in it as GDAL GCPs. I've
> grepped in GRASS source code to see if it has specific code to extract GCPs
> from GeodataXform, but I can't find anything. So this is quite mysterious to
> me.

Sorry for the misunderstanding: I used to GRASS GIS' g.gui.gcp to
generate GPCs from scratch, interactively.
This graphical tool let's you assign X,Y to E,N, then it uses
i.rectify (https://grass.osgeo.org/grass78/manuals/i.rectify.html) to
georectify all images in the source imagery group.
Eventually I exported to file using r.out.gdal.

Best,
Markus

From ao at t-kartor.se  Tue Jan 28 00:07:54 2020
From: ao at t-kartor.se (Andreas Oxenstierna)
Date: Tue, 28 Jan 2020 09:07:54 +0100
Subject: [gdal-dev] mosaicking is very slow
In-Reply-To: <0f85f769b92542c7b8b83aad3669c955@C119S212VM042.msvyvi.vaha.local>
References: <0f85f769b92542c7b8b83aad3669c955@C119S212VM042.msvyvi.vaha.local>
Message-ID: <1dcfd7ae-ed6e-f436-c3f0-f6342797509e@t-kartor.se>

and always remember as stated in the doc-link: "Disks are the slowest 
part of the process."
As fast I/O and file system as technically possible ... e.g. do not use 
your laptop

> Hi,
>
> You can read considerations about memory from
>
> https://trac.osgeo.org/gdal/wiki/UserDocs/GdalWarp#WillincreasingRAMincreasethespeedofgdalwarp
>
> My guess it that increasing CACHEMAX might help a bit in this use case because it feels similar to the example that is used in the user doc "This could occur, for instance, in a scanline oriented input file which is processed in multiple chunks (horizontally) by gdalwarp". But no documentation is as accurate as a good test. Take a stop watch and measure timings with different settings and you will know how your system reacts.
>
> Unfortunately it is easy to test and optimize things which are not relevant, for example to test only different memory settings if the real issue happens to be in the source data that requires unnecessarily much memory. But fortunately it is also easy to run another set of tests with tiled source images and compare the results.
>   
> -Jukka Rahkonen-
>
>
> -----Alkuperäinen viesti-----
> Lähettäjä: Simon <twinbirds at protonmail.com>
> Lähetetty: maanantai 27. tammikuuta 2020 15.21
> Vastaanottaja: Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi>
> Kopio: gdal-dev at lists.osgeo.org
> Aihe: Re: [gdal-dev] mosaicking is very slow
>
> Hi,
> Okay, thank you.
> By the way, while making copy of gtiffs, is not it good idea to increase GDAL_CACHEMAX?
> Simon
>
>
> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
> On Monday, January 27, 2020 9:04 PM, Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi> wrote:
>
>> Hi,
>>
>> If your source images are 4 GB then their size is at least 40000 by 40000 pixels, or more if they are compressed. If gdalwarp now needs 256256 pixels worth of source data, from a striped image it must read 25640000 (rowspixels per row), while from tiled source it can read just from 1 to 4 tiles, 256256 each.
>>
>> Pre-processing is additional load but if you pay 10 units extra for tiling and then save 100 units in warping you are still a winner.
>>
>> Make copies as
>> gdal_translate -of GTiff -co tiled=yes -co compress=LZW input1.tif
>> copy1.tif
>>
>> Then create a new VRT file. Absolutely do not remove -co tiled=yes from the gdalwarp command or you'll demand GDAL to write at least 400000 pixels wide stripes.
>>
>> -Jukka Rahkonen-
>>
>> -----Alkuperäinen viesti-----
>> Lähettäjä: Simon twinbirds at protonmail.com
>> Lähetetty: maanantai 27. tammikuuta 2020 13.18
>> Vastaanottaja: Rahkonen Jukka (MML)
>> jukka.rahkonen at maanmittauslaitos.fi
>> Kopio: gdal-dev at lists.osgeo.org
>> Aihe: Re: [gdal-dev] mosaicking is very slow
>>
>> Hi,
>> Thanks for your answer. The source images are not tiled. So, how can I tile them? Is not it additional load? I will try removing these ones:
>> --config GDAL_CACHEMAX 8000
>> -co TILED=YES
>>
>> ‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
>> On Monday, January 27, 2020 7:48 PM, jratike80 jukka.rahkonen at maanmittauslaitos.fi wrote:
>>
>>> Hi,
>>> I would suggest to remove --config GDAL_CACHEMAX 8000 first. Then I
>>> would check if the source images are tiled. If they are not it could
>>> be worth an extra step to make tiled copies.
>>> -Jukka Rahkonen-
>>> Simon-4 wrote
>>>
>>>> Hello everyone,
>>>> I am stiching aroung 100 geotiff images each of around 4gb.
>>>> However, translating the vrt file into geotiff is going on for days.
>>>> gtranslate --config GDAL_CACHEMAX 8000 -co TILED=YES -co
>>>> COMPRESS=LZW -co BIGTIFF=YES infile.vrt outfile.tif How can I
>>>> speed up it?
>>>> Thank you.
>>>> Simon
>>>> gdal-dev mailing list
>>>> gdal-dev at .osgeo
>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> --
>>> Sent from:
>>> http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Hälsningar

Andreas Oxenstierna
T-Kartor Geospatial AB
Olof Mohlins väg 12 Kristianstad
mobile: +46 733 206831
mailto: ao at t-kartor.se
http://www.t-kartor.com


From even.rouault at spatialys.com  Tue Jan 28 02:48:42 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 11:48:42 +0100
Subject: [gdal-dev] Motion: approve GDAL 3.0.4 RC1
Message-ID: <6453863.Qf0eoXOSrJ@even-i700>

Hi,

The bug raised yesterday regarding the odd formulation of EPSG:3857 exported 
GeoTIFF files is quite annoying regarding interoperability, and we'd
better stop generation of such odd files ASAP. Hence this release without 
prior notice.

Both announcement of availability of release candidate and motion to adopt it

Adopt GDAL 3.0.4 RC1 as final 3.0.4 release

+1 Even

~~~~~

3.0.4 RC1:

Peek up an archive among the following ones (by ascending size):
  http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.xz
  http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.gz
  http://download.osgeo.org/gdal/3.0.4/gdal304rc1.zip

A snapshot of the gdalautotest suite is also available :

  http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.tar.gz
  http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.zip

GDAL-GRASS plugin (unmodified):

  http://download.osgeo.org/gdal/3.0.4/gdal-grass-3.0.4.tar.gz

The NEWS file is here :

  https://github.com/OSGeo/gdal/blob/v3.0.4RC1/gdal/NEWS

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Tue Jan 28 02:59:23 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 28 Jan 2020 11:59:23 +0100
Subject: [gdal-dev] Motion: approve GDAL 3.0.4 RC1
In-Reply-To: <6453863.Qf0eoXOSrJ@even-i700>
References: <6453863.Qf0eoXOSrJ@even-i700>
Message-ID: <CABUeae9CB47ecN0Y1erGEkW1nD_tCLsVemk7-ZYScnBv8cie_w@mail.gmail.com>

+1

Good idea, thank you!
Mateusz

On Tue, 28 Jan 2020 at 11:48, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> The bug raised yesterday regarding the odd formulation of EPSG:3857 exported
> GeoTIFF files is quite annoying regarding interoperability, and we'd
> better stop generation of such odd files ASAP. Hence this release without
> prior notice.
>
> Both announcement of availability of release candidate and motion to adopt it
>
> Adopt GDAL 3.0.4 RC1 as final 3.0.4 release
>
> +1 Even
>
> ~~~~~
>
> 3.0.4 RC1:
>
> Peek up an archive among the following ones (by ascending size):
>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.xz
>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.4/gdal304rc1.zip
>
> A snapshot of the gdalautotest suite is also available :
>
>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.zip
>
> GDAL-GRASS plugin (unmodified):
>
>   http://download.osgeo.org/gdal/3.0.4/gdal-grass-3.0.4.tar.gz
>
> The NEWS file is here :
>
>   https://github.com/OSGeo/gdal/blob/v3.0.4RC1/gdal/NEWS
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Tue Jan 28 03:33:43 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 12:33:43 +0100
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but
	geotransform not established
In-Reply-To: <CALFmHhujg29UDDzwN71WBfqazrkMW4gZUe03Q9SDzEsOcXxDHQ@mail.gmail.com>
References: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
 <8831328.ZY2zTpJ0OJ@even-i700>
 <CALFmHhujg29UDDzwN71WBfqazrkMW4gZUe03Q9SDzEsOcXxDHQ@mail.gmail.com>
Message-ID: <14501383.rRvpGnRoDu@even-i700>

Markus,

> Sorry for the misunderstanding: I used to GRASS GIS' g.gui.gcp to
> generate GPCs from scratch, interactively.

Makes more sense :-)

I've just added in GDAL master support for extracting the GCPs from the ESRI 
GeodataXform object of .aux.xml files

$ gdalinfo txu-pclmaps-oclc-6540922-tunis-20.jpg
[...]
GCP Projection = 
PROJCRS["NW Africa Grid",
[...]
Data axis to CRS axis mapping: 1,2
GCP[  0]: Id=, Info=
          (381.276620627847,524.9132323456) -> (1881000,858000,0)
GCP[  1]: Id=, Info=
          (4748.87345734052,3173.95623746933) -> (1912000,840000,0)
GCP[  2]: Id=, Info=
          (4781.59200262719,475.147738026018) -> (1912000,859000,0)
GCP[  3]: Id=, Info=
          (353.683965895426,3227.29350218835) -> (1881000,839000,0)
[...]

And confirmed that

gdalwarp txu-pclmaps-oclc-6540922-tunis-20.jpg out.tif -overwrite

produces a geotransform consistent with the one of the .jgwx file.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Daniel.Evans at jbarisk.com  Tue Jan 28 03:49:01 2020
From: Daniel.Evans at jbarisk.com (Daniel Evans)
Date: Tue, 28 Jan 2020 11:49:01 +0000
Subject: [gdal-dev] GDAL_FORCE_CACHING - alters results?
Message-ID: <LO2P123MB2077D81FD048B95FD1E1557B950A0@LO2P123MB2077.GBRP123.PROD.OUTLOOK.COM>

Hi all,

I've recently tried enabling the GDAL_FORCE_CACHING option, and found it gives some significant improvements to TIFF/VRT read speeds.

However, using GDAL 2.3.0, I've now found that when reading large VRTs, I can sometimes get subtly different values - up to about 1% summed difference across a 1000x1000 or so area. Is there a known issue in GDAL_FORCE_CACHING in this older version of GDAL, or alternatively have I misunderstood the use of this option and is this expected behaviour?

Regards,
Daniel

T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png]  [Follow us on Twitter] <https://twitter.com/jbarisk>
Our postal address and registered office is JBA Risk Management Limited, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire BD23 3FD.

Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire, BD23 3FD, Telephone: +441756799919


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200128/8391dd58/attachment-0001.html>

From even.rouault at spatialys.com  Tue Jan 28 04:02:59 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 13:02:59 +0100
Subject: [gdal-dev] GDAL_FORCE_CACHING - alters results?
In-Reply-To: <LO2P123MB2077D81FD048B95FD1E1557B950A0@LO2P123MB2077.GBRP123.PROD.OUTLOOK.COM>
References: <LO2P123MB2077D81FD048B95FD1E1557B950A0@LO2P123MB2077.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <1677987.TrFM8TNgDe@even-i700>

On mardi 28 janvier 2020 11:49:01 CET Daniel Evans wrote:
> Hi all,
> 
> I've recently tried enabling the GDAL_FORCE_CACHING option, and found it
> gives some significant improvements to TIFF/VRT read speeds.
> 
> However, using GDAL 2.3.0, I've now found that when reading large VRTs, I
> can sometimes get subtly different values - up to about 1% summed
> difference across a 1000x1000 or so area. Is there a known issue in
> GDAL_FORCE_CACHING in this older version of GDAL, or alternatively have I
> misunderstood the use of this option and is this expected behaviour?

GDAL_FORCE_CACHING will force I/O requests to happen exactly on VRT block 
boundaries.
So what you observe is slight inconsistencies in results depending on the 
window passed to the VRT driver.

I see that 2.4.0 had a potentially related fix
"""VRT: fix source window computation that caused sub-pixel shift with non-
nearest resampling"""

But if you use a warped VRT, then what you observe is somewhat expected. 
gdalwarp due to approximations in some computations doesn't lead to 
"consistent" results if you change the output window.
See
https://lists.osgeo.org/pipermail/gdal-dev/2019-November/051177.html

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Daniel.Evans at jbarisk.com  Tue Jan 28 04:16:46 2020
From: Daniel.Evans at jbarisk.com (Daniel Evans)
Date: Tue, 28 Jan 2020 12:16:46 +0000
Subject: [gdal-dev] GDAL_FORCE_CACHING - alters results?
In-Reply-To: <1677987.TrFM8TNgDe@even-i700>
References: <LO2P123MB2077D81FD048B95FD1E1557B950A0@LO2P123MB2077.GBRP123.PROD.OUTLOOK.COM>
 <1677987.TrFM8TNgDe@even-i700>
Message-ID: <LO2P123MB20778B80BF7183FA7CC769A9950A0@LO2P123MB2077.GBRP123.PROD.OUTLOOK.COM>

Hi Evan,

That change in 2.4.0 looks like it's the answer. Looking at the returned data in detail, there is indeed a column of pixels which is duplicated (sampled twice) with the option set, and is replaced by an extra column on the right hand side without it set.

Thanks!

Daniel

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com>
Sent: 28 January 2020 12:03
To: gdal-dev at lists.osgeo.org
Cc: Daniel Evans <Daniel.Evans at jbarisk.com>
Subject: Re: [gdal-dev] GDAL_FORCE_CACHING - alters results?

On mardi 28 janvier 2020 11:49:01 CET Daniel Evans wrote:
> Hi all,
>
> I've recently tried enabling the GDAL_FORCE_CACHING option, and found
> it gives some significant improvements to TIFF/VRT read speeds.
>
> However, using GDAL 2.3.0, I've now found that when reading large
> VRTs, I can sometimes get subtly different values - up to about 1%
> summed difference across a 1000x1000 or so area. Is there a known
> issue in GDAL_FORCE_CACHING in this older version of GDAL, or
> alternatively have I misunderstood the use of this option and is this expected behaviour?

GDAL_FORCE_CACHING will force I/O requests to happen exactly on VRT block boundaries.
So what you observe is slight inconsistencies in results depending on the window passed to the VRT driver.

I see that 2.4.0 had a potentially related fix
"""VRT: fix source window computation that caused sub-pixel shift with non- nearest resampling"""

But if you use a warped VRT, then what you observe is somewhat expected.
gdalwarp due to approximations in some computations doesn't lead to "consistent" results if you change the output window.
See
https://lists.osgeo.org/pipermail/gdal-dev/2019-November/051177.html

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com
T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png] <>  [Follow us on Twitter] <https://twitter.com/jbarisk>
Our postal address and registered office is JBA Risk Management Limited, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire BD23 3FD.
Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire, BD23 3FD, Telephone: +441756799919



From jluis at ualg.pt  Tue Jan 28 04:26:34 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Tue, 28 Jan 2020 12:26:34 +0000
Subject: [gdal-dev] Experiments with the gdal_grid C API
Message-ID: <DB8PR04MB6697F2D6C44DEF1643DD3086A60A0@DB8PR04MB6697.eurprd04.prod.outlook.com>

Hi Even,

I'm playing with the C API for the GDAL programs inside GMT. More specifically with the gdal_grid C API. All in all I managed to make it work but there are some issues.
The main problem is that apparently the API was not thought to keep the result in memory.

What ended up doing was this

               hDstDS = GDALGrid("NUL", hSrcDS, psOptions, &bUsageError);
...
               if ((tmp = calloc((size_t)nYSize * (size_t)nXSize, nPixelSize)) == NULL) {
                              GMT_Report (GMT->parent, GMT_MSG_NORMAL, "gdalread: failure to allocate enough memory\n");
                              GDALDestroyDriverManager();
                              return -1;
               }

               if ((gdal_code = GDALRasterIO(hBand, GF_Read, 0, 0, nXSize, nYSize, tmp,
                               nXSize, nYSize, GDALGetRasterDataType(hBand), 0, 0)) != CE_None) {
                              GMT_Report (GMT->parent, GMT_MSG_NORMAL, "GDALRasterIO failed to open band [err = %d]\n", gdal_code);
               }

-Note that I'm using "NUL" for the output file name because that was the only way I found to prevent saving the file in disk (remember, I want to have it memory).

-The second thing not shown above is that I had to use "-ot GTiff" in the psOptions. Using "-ot Memory" lead to errors.

-Although using "NUL" works, GDAL prints these error messages when at the end I close the DS (GDALClose(hSrcDS);)
               ERROR 1: TIFFScanlineSize64:Computed scanline size is zero
               ERROR 1: TIFFWriteEncodedStrip:Must set "ImageWidth" before writing data
               ERROR 1: FillEmptyTiles() failed because panByteCounts == NULL

-Last thing. I was forced to make a copy of the array in order to extract the grid  from the hDstDS handle via GDALRasterIO().

Ok, so my questions are. Is there a better way to do this? Could we, by some mean, send in a pre-allocated array and owned by the external program to the API so the duplication step could be avoided?

Thanks

Joaquim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200128/9699b5c5/attachment.html>

From even.rouault at spatialys.com  Tue Jan 28 04:43:17 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 13:43:17 +0100
Subject: [gdal-dev] Experiments with the gdal_grid C API
In-Reply-To: <DB8PR04MB6697F2D6C44DEF1643DD3086A60A0@DB8PR04MB6697.eurprd04.prod.outlook.com>
References: <DB8PR04MB6697F2D6C44DEF1643DD3086A60A0@DB8PR04MB6697.eurprd04.prod.outlook.com>
Message-ID: <3344868.Ei5kYvXxoe@even-i700>

Joaquim,

> -Note that I'm using "NUL" for the output file name because that was the
> only way I found to prevent saving the file in disk (remember, I want to
> have it memory).

That's bound to fail. NUL or /dev/null are files that can't be re-read, and as 
you call GDALRasterIO(), you do intend to re-read them. And even if you don't 
re-read them, I don't think the GTiff driver will be happy writing such files.
This probably sort of works for you because the content is kept in the GDAL 
block cache, so you re-read from it, rather than the file itself. With a 
larger dataset or smaller GDAL_CACHEMAX value, that wouldn't work

> -The second thing not shown above is that I had to use "-ot GTiff" in the
> psOptions. Using "-ot Memory" lead to errors.

Should be -of MEM. That's tested in autotest/utilities/test_gdal_grid_lib.py

An alternative is to use a /vsimem/temp.tif with the GTiff driver (but you 
need to VSIUnlink() the file once done to avoid mem leaks). But the MEM driver 
should do it.

> Ok, so my questions are. Is there a better way to do this? Could we, by some
> mean, send in a pre-allocated array and owned by the external program to
> the API so the duplication step could be avoided?

The gdal grid API doesn't support updating an existing dataset. If it had, 
then you could have created a MEM dataset based on your own array.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From neteler at osgeo.org  Tue Jan 28 04:56:30 2020
From: neteler at osgeo.org (Markus Neteler)
Date: Tue, 28 Jan 2020 13:56:30 +0100
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but
 geotransform not established
In-Reply-To: <14501383.rRvpGnRoDu@even-i700>
References: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
 <8831328.ZY2zTpJ0OJ@even-i700>
 <CALFmHhujg29UDDzwN71WBfqazrkMW4gZUe03Q9SDzEsOcXxDHQ@mail.gmail.com>
 <14501383.rRvpGnRoDu@even-i700>
Message-ID: <CALFmHhtSHRcdKbOhtFF4Dd6RrFTRw_aADQRMs8Ac+F2rOs3-tw@mail.gmail.com>

Hi Even,

On Tue, Jan 28, 2020 at 12:33 PM Even Rouault
<even.rouault at spatialys.com> wrote:
....
> I've just added in GDAL master support for extracting the GCPs from the ESRI
> GeodataXform object of .aux.xml files
>
> $ gdalinfo txu-pclmaps-oclc-6540922-tunis-20.jpg
> [...]
> GCP Projection =
> PROJCRS["NW Africa Grid",
> [...]
> Data axis to CRS axis mapping: 1,2
> GCP[  0]: Id=, Info=
>           (381.276620627847,524.9132323456) -> (1881000,858000,0)
> GCP[  1]: Id=, Info=
>           (4748.87345734052,3173.95623746933) -> (1912000,840000,0)
> GCP[  2]: Id=, Info=
>           (4781.59200262719,475.147738026018) -> (1912000,859000,0)
> GCP[  3]: Id=, Info=
>           (353.683965895426,3227.29350218835) -> (1881000,839000,0)
> [...]
>
> And confirmed that
>
> gdalwarp txu-pclmaps-oclc-6540922-tunis-20.jpg out.tif -overwrite
>
> produces a geotransform consistent with the one of the .jgwx file.

How cool, thanks!

Do you see a chance to push
https://github.com/OSGeo/gdal/commit/66ea9bfa6e0e4ba27b0ae8ce7c75f3d5ad11da63

also to the 2.x branch?

Markus

From even.rouault at spatialys.com  Tue Jan 28 05:08:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 14:08:21 +0100
Subject: [gdal-dev] JPEG file with ESRI world file .jpgw but
	geotransform not established
In-Reply-To: <CALFmHhtSHRcdKbOhtFF4Dd6RrFTRw_aADQRMs8Ac+F2rOs3-tw@mail.gmail.com>
References: <CALFmHhty4PmE+XGN1s-M3t9y0M_r5n+N03Cw8SdCX9B79a8jvg@mail.gmail.com>
 <14501383.rRvpGnRoDu@even-i700>
 <CALFmHhtSHRcdKbOhtFF4Dd6RrFTRw_aADQRMs8Ac+F2rOs3-tw@mail.gmail.com>
Message-ID: <2369627.LUEgRaF635@even-i700>

> Do you see a chance to push
> https://github.com/OSGeo/gdal/commit/66ea9bfa6e0e4ba27b0ae8ce7c75f3d5ad11da6
> 3
> 
> also to the 2.x branch?

Probably not. This is a new feature, so the general rule is master only. And 
I'm not even sure we'll release a new 2.4 point release. Personnaly, I don't 
really have a lot of incentive to do so.

And another reason is I just discovered that the above commit broke a 
behaviour of the GTiff driver, that had some support for those ESRI GCPs, but 
with a tiny difference since it takes into account the TIFF Resolution tags. 
Now fixed (my bad for not having gone through a PR first!)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jluis at ualg.pt  Tue Jan 28 06:05:52 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Tue, 28 Jan 2020 14:05:52 +0000
Subject: [gdal-dev] Experiments with the gdal_grid C API
In-Reply-To: <3344868.Ei5kYvXxoe@even-i700>
References: <DB8PR04MB6697F2D6C44DEF1643DD3086A60A0@DB8PR04MB6697.eurprd04.prod.outlook.com>
 <3344868.Ei5kYvXxoe@even-i700>
Message-ID: <DB8PR04MB6697A0871AAE272F947FF13AA60A0@DB8PR04MB6697.eurprd04.prod.outlook.com>



>> Should be -of MEM. That's tested in autotest/utilities/test_gdal_grid_lib.py

> An alternative is to use a /vsimem/temp.tif with the GTiff driver (but you need to VSIUnlink() > the file once done to avoid mem leaks). But the MEM driver should do it.

Cool, with -of MEM and still using "NUL" I was able to create a ~480 Mb compressed nc file so I interpret this as:

"It worked and it didn't get the grid from GDAL block cache"

> The gdal grid API doesn't support updating an existing dataset. If it had, then you could have > created a MEM dataset based on your own array.

That was one of my first thoughts but could find a way to send in MEM dataset. Maybe some day?

Thanks, I have something usable now.

Joaquim

From jukka.rahkonen at maanmittauslaitos.fi  Tue Jan 28 06:42:11 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Tue, 28 Jan 2020 07:42:11 -0700 (MST)
Subject: [gdal-dev] Motion: approve GDAL 3.0.4 RC1
In-Reply-To: <6453863.Qf0eoXOSrJ@even-i700>
References: <6453863.Qf0eoXOSrJ@even-i700>
Message-ID: <1580222531493-0.post@n6.nabble.com>

+1

-Jukka-


Even Rouault-2 wrote
> Hi,
> 
> The bug raised yesterday regarding the odd formulation of EPSG:3857
> exported 
> GeoTIFF files is quite annoying regarding interoperability, and we'd
> better stop generation of such odd files ASAP. Hence this release without 
> prior notice.
> 
> Both announcement of availability of release candidate and motion to adopt
> it
> 
> Adopt GDAL 3.0.4 RC1 as final 3.0.4 release
> 
> +1 Even
> 
> ~~~~~
> 
> 3.0.4 RC1:
> 
> Peek up an archive among the following ones (by ascending size):
>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.xz
>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.4/gdal304rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.tar.gz
>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.zip
> 
> GDAL-GRASS plugin (unmodified):
> 
>   http://download.osgeo.org/gdal/3.0.4/gdal-grass-3.0.4.tar.gz
> 
> The NEWS file is here :
> 
>   https://github.com/OSGeo/gdal/blob/v3.0.4RC1/gdal/NEWS
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From dmorissette at mapgears.com  Tue Jan 28 06:52:09 2020
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Tue, 28 Jan 2020 09:52:09 -0500
Subject: [gdal-dev] Motion: approve GDAL 3.0.4 RC1
In-Reply-To: <6453863.Qf0eoXOSrJ@even-i700>
References: <6453863.Qf0eoXOSrJ@even-i700>
Message-ID: <72ccc248-dd8d-57fa-6ff3-5c458f5368b2@mapgears.com>

+1

Daniel


On 2020-01-28 05:48, Even Rouault wrote:
> Hi,
> 
> The bug raised yesterday regarding the odd formulation of EPSG:3857 exported
> GeoTIFF files is quite annoying regarding interoperability, and we'd
> better stop generation of such odd files ASAP. Hence this release without
> prior notice.
> 
> Both announcement of availability of release candidate and motion to adopt it
> 
> Adopt GDAL 3.0.4 RC1 as final 3.0.4 release
> 
> +1 Even
> 
> ~~~~~
> 
> 3.0.4 RC1:
> 
> Peek up an archive among the following ones (by ascending size):
>    http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.xz
>    http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.gz
>    http://download.osgeo.org/gdal/3.0.4/gdal304rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>    http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.tar.gz
>    http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.zip
> 
> GDAL-GRASS plugin (unmodified):
> 
>    http://download.osgeo.org/gdal/3.0.4/gdal-grass-3.0.4.tar.gz
> 
> The NEWS file is here :
> 
>    https://github.com/OSGeo/gdal/blob/v3.0.4RC1/gdal/NEWS
> 
> Even
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From gdisk.mike at gmail.com  Tue Jan 28 07:54:30 2020
From: gdisk.mike at gmail.com (mike Null)
Date: Tue, 28 Jan 2020 08:54:30 -0700
Subject: [gdal-dev] Transform produces different results from 2.2.4 and
	3.0.2 or 3.0.3
Message-ID: <CAKTgSofUAnMB1pnqrkUtNrQ3T1uL7MmYEF8Td94qw3FmiWtiHw@mail.gmail.com>

So, I'm finding a difference between results....


def epsg_test():

    import ogr

    import osr

    wgs84_osr = osr.SpatialReference()

    wgs84_osr.ImportFromEPSG(4326)

    utm17_osr = osr.SpatialReference()

    utm17_osr.ImportFromEPSG(32617)

    transform = osr.CoordinateTransformation(wgs84_osr, utm17_osr)

    inputwkt = 'Point (-81.5 30.5)'

    ingeom = ogr.CreateGeometryFromWkt(inputwkt,wgs84_osr)

    print(ingeom.ExportToWkt())

    ingeom.Transform(transform)

    print(ingeom.ExportToWkt())



gdal 3.0.3, proj 6.3.0, with python 3.7 (also seen on 3.0.2, proj 6.2.1)

POINT (-81.5 30.5)

POINT (1385293.10269892 -10347979.9101242)



gdal 2.2.4, proj 4.9.3, with python 2.7

POINT (-81.5 30.5)

POINT (452019.438629914 3374297.77348828)


Gdal/proj was installed via qgis standalone installer.

I do believe the python2/gdal2 result is correct, or at least it agreed
with the project tool on esri and epsg.io.

epsg.io/transform#s_srs=4326&t_srs=32617&x=-81.5&y=30.5

Anyways I desire to use python 3 and gdal 3.

What might I need to do to get it working correctly? I know there was a lot
of changes with gdalbarn/proj.

-Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200128/c00a0c34/attachment.html>

From even.rouault at spatialys.com  Tue Jan 28 08:12:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 17:12:07 +0100
Subject: [gdal-dev] Transform produces different results from 2.2.4 and
	3.0.2 or 3.0.3
In-Reply-To: <CAKTgSofUAnMB1pnqrkUtNrQ3T1uL7MmYEF8Td94qw3FmiWtiHw@mail.gmail.com>
References: <CAKTgSofUAnMB1pnqrkUtNrQ3T1uL7MmYEF8Td94qw3FmiWtiHw@mail.gmail.com>
Message-ID: <8499882.cHMdBHZf5W@even-i700>

> What might I need to do to get it working correctly? I know there was a lot
> of changes with gdalbarn/proj.

Indeed. See
https://lists.osgeo.org/pipermail/gdal-dev/2020-January/051425.html

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nicolas.cadieux at archeotec.ca  Tue Jan 28 09:12:46 2020
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Tue, 28 Jan 2020 12:12:46 -0500
Subject: [gdal-dev] Coordinate space to pixel space with image rotation in
	python
Message-ID: <9463e0c1-6e31-f215-dfc2-1ed8ee6d9839@archeotec.ca>

Hi,

It's easy to go from coordinate space to pixel space in python using 
something like.

pixel_x  =  int(-124114.3  -  geo_transform[0])/geo_transform[1])

What is the trick when there is an image rotation?  Also, as a second 
very beginner question, what is the difference between geo_transform[2] 
and geo_transform[4]?

Thanks in advance!

Nicolas Cadieux

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200128/218969d5/attachment-0001.html>

From even.rouault at spatialys.com  Tue Jan 28 09:30:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jan 2020 18:30:32 +0100
Subject: [gdal-dev] Coordinate space to pixel space with image rotation
	in python
In-Reply-To: <9463e0c1-6e31-f215-dfc2-1ed8ee6d9839@archeotec.ca>
References: <9463e0c1-6e31-f215-dfc2-1ed8ee6d9839@archeotec.ca>
Message-ID: <1619812.2vAKuPPrqJ@even-i700>

Nicolas,

> It's easy to go from coordinate space to pixel space in python using
> something like.
> 
> pixel_x  =  int(-124114.3  -  geo_transform[0])/geo_transform[1])
> 
> What is the trick when there is an image rotation? 

Compute the inverse geotransform with
https://gdal.org/api/raster_c_api.html?highlight=invgeotransform#_CPPv419GDALInvGeoTransformPdPd

(gdal.InvGeoTransform(gt) in Python )

And then use the coordinates in coordinate space as the input for this inverse geotransform

column = inv_gt[0] + X * inv_gt[1] + Y * inv_gt[2]
row    = inv_gt[3] + X * inv_gt[4] + Y * inv_gt[5]


> Also, as a second
> very beginner question, what is the difference between geo_transform[2]
> and geo_transform[4]?

There are defined by the relationships at
https://gdal.org/user/raster_data_model.html#affine-geotransform

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Tue Jan 28 12:18:52 2020
From: howard at hobu.co (Howard Butler)
Date: Tue, 28 Jan 2020 14:18:52 -0600
Subject: [gdal-dev] Motion: approve GDAL 3.0.4 RC1
In-Reply-To: <72ccc248-dd8d-57fa-6ff3-5c458f5368b2@mapgears.com>
References: <6453863.Qf0eoXOSrJ@even-i700>
 <72ccc248-dd8d-57fa-6ff3-5c458f5368b2@mapgears.com>
Message-ID: <DB363956-6E28-4204-9317-D0B9D4D3D4A8@hobu.co>

+1 

Howard

> On Jan 28, 2020, at 8:52 AM, Daniel Morissette <dmorissette at mapgears.com> wrote:
> 
> +1
> 
> Daniel
> 
> 
> On 2020-01-28 05:48, Even Rouault wrote:
>> Hi,
>> The bug raised yesterday regarding the odd formulation of EPSG:3857 exported
>> GeoTIFF files is quite annoying regarding interoperability, and we'd
>> better stop generation of such odd files ASAP. Hence this release without
>> prior notice.
>> Both announcement of availability of release candidate and motion to adopt it
>> Adopt GDAL 3.0.4 RC1 as final 3.0.4 release
>> +1 Even
>> ~~~~~
>> 3.0.4 RC1:
>> Peek up an archive among the following ones (by ascending size):
>>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.xz
>>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.gz
>>   http://download.osgeo.org/gdal/3.0.4/gdal304rc1.zip
>> A snapshot of the gdalautotest suite is also available :
>>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.tar.gz
>>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.zip
>> GDAL-GRASS plugin (unmodified):
>>   http://download.osgeo.org/gdal/3.0.4/gdal-grass-3.0.4.tar.gz
>> The NEWS file is here :
>>   https://github.com/OSGeo/gdal/blob/v3.0.4RC1/gdal/NEWS
>> Even
> 
> 
> -- 
> Daniel Morissette
> Mapgears Inc
> T: +1 418-696-5056 #201
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From norman.barker at gmail.com  Tue Jan 28 13:08:40 2020
From: norman.barker at gmail.com (Norman Barker)
Date: Tue, 28 Jan 2020 15:08:40 -0600
Subject: [gdal-dev] Motion: approve GDAL 3.0.4 RC1
In-Reply-To: <DB363956-6E28-4204-9317-D0B9D4D3D4A8@hobu.co>
References: <6453863.Qf0eoXOSrJ@even-i700>
 <72ccc248-dd8d-57fa-6ff3-5c458f5368b2@mapgears.com>
 <DB363956-6E28-4204-9317-D0B9D4D3D4A8@hobu.co>
Message-ID: <CAN_Dn-FfdHQdsZotZbzOG2pbiqvZ6NZYvwO+F9Rg+S2TU6WdSA@mail.gmail.com>

+1

On Tue, Jan 28, 2020 at 2:19 PM Howard Butler <howard at hobu.co> wrote:

> +1
>
> Howard
>
> > On Jan 28, 2020, at 8:52 AM, Daniel Morissette <dmorissette at mapgears.com>
> wrote:
> >
> > +1
> >
> > Daniel
> >
> >
> > On 2020-01-28 05:48, Even Rouault wrote:
> >> Hi,
> >> The bug raised yesterday regarding the odd formulation of EPSG:3857
> exported
> >> GeoTIFF files is quite annoying regarding interoperability, and we'd
> >> better stop generation of such odd files ASAP. Hence this release
> without
> >> prior notice.
> >> Both announcement of availability of release candidate and motion to
> adopt it
> >> Adopt GDAL 3.0.4 RC1 as final 3.0.4 release
> >> +1 Even
> >> ~~~~~
> >> 3.0.4 RC1:
> >> Peek up an archive among the following ones (by ascending size):
> >>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.xz
> >>   http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4rc1.tar.gz
> >>   http://download.osgeo.org/gdal/3.0.4/gdal304rc1.zip
> >> A snapshot of the gdalautotest suite is also available :
> >>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.tar.gz
> >>   http://download.osgeo.org/gdal/3.0.4/gdalautotest-3.0.4rc1.zip
> >> GDAL-GRASS plugin (unmodified):
> >>   http://download.osgeo.org/gdal/3.0.4/gdal-grass-3.0.4.tar.gz
> >> The NEWS file is here :
> >>   https://github.com/OSGeo/gdal/blob/v3.0.4RC1/gdal/NEWS
> >> Even
> >
> >
> > --
> > Daniel Morissette
> > Mapgears Inc
> > T: +1 418-696-5056 #201
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200128/80313426/attachment.html>

From carsten.lockenkoetter at gon.de  Tue Jan 28 23:30:17 2020
From: carsten.lockenkoetter at gon.de (=?utf-8?B?Q2Fyc3RlbiBMb2NrZW5rw7Z0dGVy?=)
Date: Wed, 29 Jan 2020 07:30:17 +0000
Subject: [gdal-dev] Transform produces different results from 2.2.4
	and	3.0.2 or 3.0.3
In-Reply-To: <8499882.cHMdBHZf5W@even-i700>
References: <CAKTgSofUAnMB1pnqrkUtNrQ3T1uL7MmYEF8Td94qw3FmiWtiHw@mail.gmail.com>
 <8499882.cHMdBHZf5W@even-i700>
Message-ID: <AM0PR09MB294810E7B9F78576B69FACEA97050@AM0PR09MB2948.eurprd09.prod.outlook.com>

I ran into the same problem a while back.
My solution was to change the AxisMapStrategy to OAMS_TRADITION_GIS_ORDER.

You can read more about this here:
https://gdal.org/tutorials/osr_api_tut.html

My code in C#:

            var source = new SpatialReference("");
            var destination = new SpatialReference("");
            Geometry ogrGeom = null;
            CoordinateTransformation transform = null;

	//set spatialrefrence for source and destinaton epsg
                source.ImportFromEPSG(sourceEPSG);
                destination.ImportFromEPSG(destEPSG);
                    
	  source.SetAxisMappingStrategy(AxisMappingStrategy.OAMS_TRADITIONAL_GIS_ORDER);
                 destination.SetAxisMappingStrategy(AxisMappingStrategy.OAMS_TRADITIONAL_GIS_ORDER);

                //create coordinate transformation with source and destination spatialreference
                transform = new CoordinateTransformation(source, destination);

                //create a gdal geometry object from Wkt and transform it
                ogrGeom = Geometry.CreateFromWkt(geom.Value);

                ogrGeom.Transform(transform);
                //export transformed geometry
                ogrGeom.ExportToWkt(out string outGeom);

-------------------------------------------------------------------------------------------------

-----Ursprüngliche Nachricht-----
Von: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Im Auftrag von Even Rouault
Gesendet: Dienstag, 28. Januar 2020 17:12
An: gdal-dev at lists.osgeo.org
Betreff: Re: [gdal-dev] Transform produces different results from 2.2.4 and 3.0.2 or 3.0.3

> What might I need to do to get it working correctly? I know there was 
> a lot of changes with gdalbarn/proj.

Indeed. See
https://lists.osgeo.org/pipermail/gdal-dev/2020-January/051425.html

--
Spatialys - Geospatial professional services http://www.spatialys.com _______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From gdisk.mike at gmail.com  Wed Jan 29 04:11:10 2020
From: gdisk.mike at gmail.com (mike Null)
Date: Wed, 29 Jan 2020 05:11:10 -0700
Subject: [gdal-dev] Transform produces different results from 2.2.4 and
 3.0.2 or 3.0.3
In-Reply-To: <AM0PR09MB294810E7B9F78576B69FACEA97050@AM0PR09MB2948.eurprd09.prod.outlook.com>
References: <CAKTgSofUAnMB1pnqrkUtNrQ3T1uL7MmYEF8Td94qw3FmiWtiHw@mail.gmail.com>
 <8499882.cHMdBHZf5W@even-i700>
 <AM0PR09MB294810E7B9F78576B69FACEA97050@AM0PR09MB2948.eurprd09.prod.outlook.com>
Message-ID: <CAKTgSof2nk=7zhMVS=4BN0pxbV+6KWrvFb9HLe_9Y5zAMVa4MQ@mail.gmail.com>

Even, Carsten, thanks.

Indeed I looked through what Even sent, and it worked. I did very much the
same thing as the C# example you just posted.

However it got me thinking. Will I need to do this in the future? Or are
there plans for coordinate transformation to use the new axis ordering
system?

Anyways, thanks again.

Mike



On Wed, Jan 29, 2020, 00:30 Carsten Lockenkötter <
carsten.lockenkoetter at gon.de> wrote:

> I ran into the same problem a while back.
> My solution was to change the AxisMapStrategy to OAMS_TRADITION_GIS_ORDER.
>
> You can read more about this here:
> https://gdal.org/tutorials/osr_api_tut.html
>
> My code in C#:
>
>             var source = new SpatialReference("");
>             var destination = new SpatialReference("");
>             Geometry ogrGeom = null;
>             CoordinateTransformation transform = null;
>
>         //set spatialrefrence for source and destinaton epsg
>                 source.ImportFromEPSG(sourceEPSG);
>                 destination.ImportFromEPSG(destEPSG);
>
>
> source.SetAxisMappingStrategy(AxisMappingStrategy.OAMS_TRADITIONAL_GIS_ORDER);
>
>  destination.SetAxisMappingStrategy(AxisMappingStrategy.OAMS_TRADITIONAL_GIS_ORDER);
>
>                 //create coordinate transformation with source and
> destination spatialreference
>                 transform = new CoordinateTransformation(source,
> destination);
>
>                 //create a gdal geometry object from Wkt and transform it
>                 ogrGeom = Geometry.CreateFromWkt(geom.Value);
>
>                 ogrGeom.Transform(transform);
>                 //export transformed geometry
>                 ogrGeom.ExportToWkt(out string outGeom);
>
>
> -------------------------------------------------------------------------------------------------
>
> -----Ursprüngliche Nachricht-----
> Von: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Im Auftrag von Even
> Rouault
> Gesendet: Dienstag, 28. Januar 2020 17:12
> An: gdal-dev at lists.osgeo.org
> Betreff: Re: [gdal-dev] Transform produces different results from 2.2.4
> and 3.0.2 or 3.0.3
>
> > What might I need to do to get it working correctly? I know there was
> > a lot of changes with gdalbarn/proj.
>
> Indeed. See
> https://lists.osgeo.org/pipermail/gdal-dev/2020-January/051425.html
>
> --
> Spatialys - Geospatial professional services http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200129/7ee0dd71/attachment-0001.html>

From even.rouault at spatialys.com  Wed Jan 29 04:58:15 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 29 Jan 2020 13:58:15 +0100
Subject: [gdal-dev] Transform produces different results from 2.2.4 and
	3.0.2 or 3.0.3
In-Reply-To: <CAKTgSof2nk=7zhMVS=4BN0pxbV+6KWrvFb9HLe_9Y5zAMVa4MQ@mail.gmail.com>
References: <CAKTgSofUAnMB1pnqrkUtNrQ3T1uL7MmYEF8Td94qw3FmiWtiHw@mail.gmail.com>
 <AM0PR09MB294810E7B9F78576B69FACEA97050@AM0PR09MB2948.eurprd09.prod.outlook.com>
 <CAKTgSof2nk=7zhMVS=4BN0pxbV+6KWrvFb9HLe_9Y5zAMVa4MQ@mail.gmail.com>
Message-ID: <14912548.gkoiTpMakj@even-i700>

On mercredi 29 janvier 2020 05:11:10 CET mike Null wrote:
> Even, Carsten, thanks.
> 
> Indeed I looked through what Even sent, and it worked. I did very much the
> same thing as the C# example you just posted.
> 
> However it got me thinking. Will I need to do this in the future? Or are
> there plans for coordinate transformation to use the new axis ordering
> system?

It is up to you to decide if within your application you want to stick with 
the not-so-well-defined 'traditional GIS order', or want to embrace natively 
the axis order of the CRS you manipulate.

GDAL internally uses a mixed position regarding this. All the raster side uses 
the OAMS_TRADITION_GIS_ORDER strategy. The vector side mostly defaults to it 
too, except a few places like the GML driver if you specify the
INVERT_AXIS_ORDER_IF_LAT_LONG=NO open option

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Mikael.Rittri at carmenta.com  Wed Jan 29 06:00:11 2020
From: Mikael.Rittri at carmenta.com (Mikael Rittri)
Date: Wed, 29 Jan 2020 14:00:11 +0000
Subject: [gdal-dev] Tiff file with CMYK colors that appears much worse
 with GDAL than in Windows Photo Viewer
In-Reply-To: <7d389289-7af7-b4f2-0053-2cc28cfd41be@blixtmail.se>
References: <26b2c470a6e046289e36580e6a2853d9@carmenta.com>
 <7d389289-7af7-b4f2-0053-2cc28cfd41be@blixtmail.se>
Message-ID: <ad63d7e62dad4975879c7a63ef63154d@carmenta.com>

Thanks for the advice about ImageMagick, Lars. 

I found it hard to learn to use ImageMagick, though. But a co-worker suggested Krita which was easier to use, and it could convert my CMYK file to RGB in a nice way. 

I now believe my CMYK file lacks a CMYK color profile, so I suppose GDAL and other software cannot be blamed for bad results when they have to guess a CMYK profile for rendering on a screen. Maybe Windows Photo Viewer was just lucky that its default CMYK profile happens to work well with this particular image. At least I have learned that color management is even more horribly complex than I thought, and that CMYK profiles are very printer-specific so that CMYK should be avoided for general image storage.

Some of the gory details (if anyone else has a similar problem and is curious): the ImageMagick viewer, IMDisplay, also shows the file in the bad colors (too bright and saturated and cyan-ish). 
The command
        magick identify -verbose filename.tif
said (among a lot of other things):

    Colorspace: CMYK
    Type: ColorSeparation
    Rendering intent: Perceptual
    Gamma: 0.454545
    Chromaticity:
        red primary: (0.64,0.33)
        green primary: (0.3,0.6)
        blue primary: (0.15,0.06)
        white point: (0.3127,0.329)
    Matte color: grey74
    Background color: white
    Border color: srgb(223,223,223)
    Transparent color: none

I don't understand what the Chromaticity numbers mean: if they define the CMYK profile in some way, it is strange that IMDisplay showed the colors badly. (And the Chromaticity values do not appear in the output from gdalinfo.)

Krita displayed the image in a nice way at the first attempt. Krita's Image -> Properties dialog said

    Model: CMYK/Alpha
    Depth: 8-bit integer/channel
    Profile: Chemical proof (Default)

So I suppose both Krita and Windows Photo Viewer uses "Chemical proof" as the default CMYK profile, and it just happens to work well for this file. There is a dropdown list of CMYK profiles in Krita, but it contains only "Chemical proof" and "Agfa : Swop Standard", so if you need some other CMYK profile, it seems you have to load it from an .icc or .icm file (if you have such a file).

Cheers,  
    
Mikael Rittri
Carmenta Geospatial Technologies
www.carmenta.com

-----Original Message-----
From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Lars Schylberg
Sent: den 21 januari 2020 18:45
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Tiff file with CMYK colors that appears much worse with GDAL than in Windows Photo Viewer

Hi,

When I have more advanced needs in tiff-processing I usally use ImageMagick "convert" command.

It has more options to do advanced things with images.

Convert will complain that it doesn't understand the geotiff tags, but that is something You could ignore, it is just warnings.

Use the the tifflib utilities to reapply the the geo information to the tif-file when You are done.

     listgeo -no_norm original.tif > original.geo

     geotifcp -g original.geo modified.tif modified_geotiff.tif

The ImageMagick identify command could also be a useful tool.

Hope this will help You in the right direction

/Lars Schylberg, Saab


Den 2020-01-21 kl. 15:28, skrev Mikael Rittri:
> Hello, list. I need some advice.
>
> We have a customer with some Tiff files with CMYK colors. It is a 
> rasterized vector map, not an orthophoto, so the assigned colors are somewhat arbitrary, of course.
>
> The file colors look pleasant enough when opened with Windows Photo 
> Viewer, and these are the correct colors according to the customer. 
> When I open them with QGIS or Carmenta Engine, I get worse colors (but identical in QGIS and Carmenta Engine).
> Another GIS program I tried displays even worse colors.
>
> The bad colors appear lighter and more saturated, almost fluorescent, 
> and some hues are clearly different. For example, the original has 
> fairly dark, blue (and slightly green) texts in water, while the water 
> areas are a very light blue. In QGIS and Carmenta Engine, the texts in 
> water become saturated cyan and the water areas become a nearly white 
> cyan. The third GIS program I tried shows the same saturated cyan for texts in water but an almost-saturated cyan for water areas, which gives very bad contrast.
>
> I understand that to convert from CMYK to RGB one needs to know the 
> CMYK color profile (and the RGB color profile too, I guess).
>
> Window Properties says that the these Tiff files have "Color Representation: Uncalibrated".
>
> gdalinfo says, among other things, that
>
>    TIFFTAG_SOFTWARE=Adobe Photoshop CC (Windows)
>    SOURCE_COLOR_SPACE=CMYK
>
> and that the bands are Red/Green/Blue/Alpha. But I guess these band 
> colors mean after automatic color conversion to RGB, since gdalinfo 
> with "GTIFF_RAW:" prefixed to the file name says that bands are Cyan/Magenta/Yellow/Black.
>
> tiffinfo gives, among other things, a long XML text, x:xmpmeta, but 
> the only color information I could find in it was
>
>      <photoshop:ColorMode>4</photoshop:ColorMode>
>
> Finally, I noticed a section about "Color Profile Metadata" at 
> https://gdal.org/drivers/raster/gtiff.html,
> but I didn't understand how to use it.
>
> I guess my first question should be: how one would make the GDAL API 
> respect the Color Profile Metadata in our tiff files? It seems the 
> default setting does not respect some embedded CMYK profile that at 
> least Windows Photo Viewer can find? Or is the problem that Windows 
> Photo Viewer can pick up enough information from the XML line about photoshop:ColorMode = 4, while GDAL cannot find the CMYK profile from this kind of format?
>
> My understanding of color spaces is perhaps only halfway along 
> https://xkcd.com/1882, so I probably need some pretty basic hints on where to learn more!
>
> Regards,
>
> Mikael Rittri
> Carmenta Geospatial Technologies
> www.carmenta.com
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From carlo.tomassone at libero.it  Wed Jan 29 09:07:22 2020
From: carlo.tomassone at libero.it (Carlo Tomassone)
Date: Wed, 29 Jan 2020 18:07:22 +0100
Subject: [gdal-dev] wrong coordinates
Message-ID: <20200129180722.0c276d56@libero.it>

Hi,

I am trying to put a Jpeg file (CS_092080.jpg) into mbtiles.

The calibration file (CS_092080.jgw) is:

1.0583773087071240105540897097625
0.00000000000000
0.00000000000000
-1.0583773087071240105540897097625
416029.78852901183000
5066179.81579051070000

I run
gdal_translate  -co "TILE_FORMAT=JPEG" CS_092080.jpg CS.mbtiles
and then with sqlite3 command

select * from metadata

the bounds are
bounds=3.7372544230636735,41.3259714013409365,3.79491118804780436,41.3639972970896324
but they should be
7.9215,45.693348,8.003923,45.74484

Any clue?

Thanks, Carlo

From even.rouault at spatialys.com  Wed Jan 29 15:28:26 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jan 2020 00:28:26 +0100
Subject: [gdal-dev] Stale bot setup for pull requests
Message-ID: <3222649.g1NJ7Jshat@even-i700>

Hi,

I've setup the Stale bot for GitHub, only on pull requests for now.

Configuration at:
https://github.com/OSGeo/gdal/blob/master/.github/stale.yml

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From manisandro at gmail.com  Thu Jan 30 01:53:06 2020
From: manisandro at gmail.com (Sandro Mani)
Date: Thu, 30 Jan 2020 10:53:06 +0100
Subject: [gdal-dev] Blending mode when composing images in a VRT
Message-ID: <0b8ead98-21e6-ddad-99fd-5460da33ac82@gmail.com>

Hi

Take the following [1] VRT which composes two images of semitransparent 
polygons on transparent background. Loading this into QGIS, it looks the 
images are not blended together, i.e. in overlapping areas the ARGB 
pixel values of the last image listed in a VRTRasterBand are the ones 
which end up being rendered, see [2]. I haven't found anything regarding 
blending modes in VRT datasets. Is there currently any way to have the 
images blended together?

Thanks
Sandro

[1] https://smani.fedorapeople.org/tmp/vrttest.zip
[2] https://smani.fedorapeople.org/tmp/vrt.png


From cpaulik at vandersat.com  Thu Jan 30 02:15:35 2020
From: cpaulik at vandersat.com (Christoph Paulik)
Date: Thu, 30 Jan 2020 11:15:35 +0100
Subject: [gdal-dev] Python Wheels for gdal
Message-ID: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>

Hi,

Has anybody ever tried to build Python wheels for gdal?

I'm thinking about it but am not sure if it would even be possible with all
the dependencies that gdal has to make a `pip install gdal` work without
problems.

Christoph

-- 
*Christoph Paulik* // Head of Infrastructure
VanderSat // Satellite observed water data. Globally. Daily.
Wilhelminastraat 43a, 2011 VK, Haarlem (NL), The Netherlands
<https://maps.google.com/?q=Wilhelminastraat+43a,+2011+VK,+Haarlem+(NL),+The+Netherlands&entry=gmail&source=g>
*M*  +31 6 18271928 *W*  www.vandersat.com

--------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200130/08186e6f/attachment.html>

From even.rouault at spatialys.com  Thu Jan 30 03:55:08 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jan 2020 12:55:08 +0100
Subject: [gdal-dev] Blending mode when composing images in a VRT
In-Reply-To: <0b8ead98-21e6-ddad-99fd-5460da33ac82@gmail.com>
References: <0b8ead98-21e6-ddad-99fd-5460da33ac82@gmail.com>
Message-ID: <8321850.8iFoxAAqWP@even-i700>

Hi Sandro,

> Is there currently any way to have the images blended together?

No, this is waiting for someone implementing it I guess.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Thu Jan 30 03:59:45 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jan 2020 12:59:45 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
Message-ID: <3722587.5EXFenC4x2@even-i700>

On jeudi 30 janvier 2020 11:15:35 CET Christoph Paulik wrote:
> Hi,
> 
> Has anybody ever tried to build Python wheels for gdal?

https://github.com/rasterio/rasterio-wheels could serve as a starting point

There's also https://www.lfd.uci.edu/~gohlke/pythonlibs/ for Windows

> I'm thinking about it but am not sure if it would even be possible with all
> the dependencies that gdal has to make a `pip install gdal` work without
> problems.

You clearly have to decide which GDAL dependencies you bundle or not...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cpaulik at vandersat.com  Thu Jan 30 04:09:03 2020
From: cpaulik at vandersat.com (Christoph Paulik)
Date: Thu, 30 Jan 2020 13:09:03 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <3722587.5EXFenC4x2@even-i700>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
Message-ID: <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>

Thanks for the hints Even. I could have thought about rasterio myself since
I've used their wheels in the past.

Are you open to a merge request for setting this up for the official gdal
python packages?

Christoph

On Thu, 30 Jan 2020 at 12:59, Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 30 janvier 2020 11:15:35 CET Christoph Paulik wrote:
> > Hi,
> >
> > Has anybody ever tried to build Python wheels for gdal?
>
> https://github.com/rasterio/rasterio-wheels could serve as a starting
> point
>
> There's also https://www.lfd.uci.edu/~gohlke/pythonlibs/ for Windows
>
> > I'm thinking about it but am not sure if it would even be possible with
> all
> > the dependencies that gdal has to make a `pip install gdal` work without
> > problems.
>
> You clearly have to decide which GDAL dependencies you bundle or not...
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
*Christoph Paulik* // Head of Infrastructure
VanderSat // Satellite observed water data. Globally. Daily.
Wilhelminastraat 43a, 2011 VK, Haarlem (NL), The Netherlands
<https://maps.google.com/?q=Wilhelminastraat+43a,+2011+VK,+Haarlem+(NL),+The+Netherlands&entry=gmail&source=g>
*M*  +31 6 18271928 *W*  www.vandersat.com

--------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200130/f0d5785c/attachment.html>

From even.rouault at spatialys.com  Thu Jan 30 04:32:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jan 2020 13:32:21 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
 <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
Message-ID: <2469536.6nXhLxjVX8@even-i700>

On jeudi 30 janvier 2020 13:09:03 CET Christoph Paulik wrote:
> Thanks for the hints Even. I could have thought about rasterio myself since
> I've used their wheels in the past.
> 
> Are you open to a merge request for setting this up for the official gdal
> python packages?

It would certainly be handly for a number of people. It probably needs a bit a 
discussion about the plan before going to implementation.

To be honest, I'm not that familiar with Python wheels mechanisms.

I guess there are 2 valid use cases:
- people having the GDAL native lib (possibly they would have build 
themselves), and wanting to just install the Python bindings using this native 
lib. Use case currently covered
- people having nothing, and wanting to use the wheels

We would want to have both use cases possible. GDAL docs would have to be 
enhanced.

I'm not sure where we draw the line for GDAL dependencies bundled in the 
wheel. I think a criterion could be only FOSS dependencies, and with 
permissive licensing (non GPL typically) in the spirit of the base GDAL X/MIT 
license ?

What would be the process to create the wheels ? Probably the GDAL release 
procedure (HOWTO-RELEASE) would need extra steps.

If doable, sharing the effort, or having a common base at least, with rasterio 
would be appealing. Sean may have opinions regarding this.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From manisandro at gmail.com  Thu Jan 30 04:45:14 2020
From: manisandro at gmail.com (Sandro Mani)
Date: Thu, 30 Jan 2020 13:45:14 +0100
Subject: [gdal-dev] Blending mode when composing images in a VRT
In-Reply-To: <8321850.8iFoxAAqWP@even-i700>
References: <0b8ead98-21e6-ddad-99fd-5460da33ac82@gmail.com>
 <8321850.8iFoxAAqWP@even-i700>
Message-ID: <283603f6-887c-f851-5aad-1c4ec1ffcb8c@gmail.com>

Hi Even,

Thanks for the reply.

Sandro

On 30.01.20 12:55, Even Rouault wrote:
> Hi Sandro,
>
>> Is there currently any way to have the images blended together?
> No, this is waiting for someone implementing it I guess.
>
> Even
>

From even.rouault at spatialys.com  Thu Jan 30 05:13:14 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jan 2020 14:13:14 +0100
Subject: [gdal-dev] Motion: approve GDAL 3.0.4 RC1
In-Reply-To: <6453863.Qf0eoXOSrJ@even-i700>
References: <6453863.Qf0eoXOSrJ@even-i700>
Message-ID: <2362824.UBdbIpubdH@even-i700>

Hi,

> Adopt GDAL 3.0.4 RC1 as final 3.0.4 release
> 

I declare this motion passed with +1 from PSC members MateuszL, JukkaR, 
DanielM, HowardB, NormanB and me

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cpaulik at vandersat.com  Thu Jan 30 05:13:48 2020
From: cpaulik at vandersat.com (Christoph Paulik)
Date: Thu, 30 Jan 2020 14:13:48 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <2469536.6nXhLxjVX8@even-i700>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
 <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
Message-ID: <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>

On Thu, 30 Jan 2020 at 13:32, Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 30 janvier 2020 13:09:03 CET Christoph Paulik wrote:
> > Thanks for the hints Even. I could have thought about rasterio myself
> since
> > I've used their wheels in the past.
> >
> > Are you open to a merge request for setting this up for the official gdal
> > python packages?
>
> It would certainly be handly for a number of people. It probably needs a
> bit a
> discussion about the plan before going to implementation.
>
> To be honest, I'm not that familiar with Python wheels mechanisms.
>
> I guess there are 2 valid use cases:
> - people having the GDAL native lib (possibly they would have build
> themselves), and wanting to just install the Python bindings using this
> native
> lib. Use case currently covered
> - people having nothing, and wanting to use the wheels
>

I think there are both valid use cases.
But it might be best to make usage easy for beginners.
If somebody can compile gdal themselves they are probably not having issues
building the Python bindings. But I'm happy to hear if this is used very
often.

Maybe having libgdal and gdal as separate wheels could make sense if no one
solution can be found?


>
> We would want to have both use cases possible. GDAL docs would have to be
> enhanced.
>
> I'm not sure where we draw the line for GDAL dependencies bundled in the
> wheel. I think a criterion could be only FOSS dependencies, and with
> permissive licensing (non GPL typically) in the spirit of the base GDAL
> X/MIT
> license ?
>

I have no overview over the licenses of the dependencies.
Is there an overview available?
Would limiting ourselves to permissive FOSS licences remove any important
features?


>
> What would be the process to create the wheels ? Probably the GDAL release
> procedure (HOWTO-RELEASE) would need extra steps.
>

I would have thought about integrating that into CI.


>
> If doable, sharing the effort, or having a common base at least, with
> rasterio
> would be appealing. Sean may have opinions regarding this.
>
That would definitely be helpful.

Christoph

>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
*Christoph Paulik* // Head of Infrastructure
VanderSat // Satellite observed water data. Globally. Daily.
Wilhelminastraat 43a, 2011 VK, Haarlem (NL), The Netherlands
<https://maps.google.com/?q=Wilhelminastraat+43a,+2011+VK,+Haarlem+(NL),+The+Netherlands&entry=gmail&source=g>
*M*  +31 6 18271928 *W*  www.vandersat.com

--------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200130/50908828/attachment.html>

From even.rouault at spatialys.com  Thu Jan 30 05:41:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jan 2020 14:41:07 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
Message-ID: <2420534.S0o4jUKHCm@even-i700>

> Maybe having libgdal and gdal as separate wheels could make sense if no one
> solution can be found?

I see in
https://pip.pypa.io/en/stable/reference/pip_install/#install-no-binary
a --no-binary switch that is apparently to not install wheels. So probably a 
single pip package could be use for both use cases. Comments for people 
experienced with that welcome.

> I have no overview over the licenses of the dependencies.
> Is there an overview available?

An easy way is to start at
https://packages.debian.org/sid/libgdal26
And clicking on each of the listed dependency to display its license 
information (in the right part)

> Would limiting ourselves to permissive FOSS licences remove any important
> features?

The main GPL dependency I think of is the Poppler one, used for the PDF 
driver.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Thu Jan 30 05:45:00 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jan 2020 14:45:00 +0100
Subject: [gdal-dev] GDAL/OGR 3.0.4 is released
Message-ID: <2872257.1xccfq6sAb@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 3.0.4 bug fix version. This adds 11 bug fixes on top 
of 3.0.3.

Consult the release notes for the list of issues addressed :
  https://github.com/OSGeo/gdal/blob/v3.0.4/gdal/NEWS

In particular, upgrading to this release is strongly recommended for people
creating GeoTIFF files in EPSG:3857 / WebMercator projection, and who used
previous 3.0.x releases.

The sources are available at:

    http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4.tar.xz
    http://download.osgeo.org/gdal/3.0.4/gdal-3.0.4.tar.gz
    http://download.osgeo.org/gdal/3.0.4/gdal304.zip
    http://download.osgeo.org/gdal/3.0.4/gdal-grass-3.0.4.tar.gz

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From robert.coup at koordinates.com  Thu Jan 30 06:33:02 2020
From: robert.coup at koordinates.com (Robert Coup)
Date: Thu, 30 Jan 2020 14:33:02 +0000
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <2420534.S0o4jUKHCm@even-i700>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
Message-ID: <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>

Hi Christoph,

For what it's worth, I'm doing some very minimal GDAL builds at the moment
with Python bindings. The problem you'll very quickly run into is that GDAL
has an enormous set of dependencies. This is what the default Homebrew gdal
package depends on in macOS: cfitsio, epsilon, expat, freexl, geos, giflib,
hdf5, jasper, jpeg, json-c, libdap, libgeotiff, libpng, libpq,
libspatialite, libtiff, libxml2, netcdf, numpy, pcre, poppler, proj,
python, sqlite, unixodbc, webp, xerces-c, xz, zstd. Debian's list is even
longer.

And each of those mostly have yet more dependencies... and if things are
missed then issues arrive where one dependency is talking to one version of
a library, and another dependency is talking to another. With usual
difficult to debug hilarity ensuing.

Sean has done a pile of this work already with respect to the GDAL wheels
for RasterIO & Fiona, and Christoph Gohlke has done the same for the
windows GDAL wheels Even linked to. They're both fairly minimal sets of
drivers though. I'd definitely suggest building on their work if you want
to make a start.

Good luck!

Rob :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200130/04e58b9d/attachment.html>

From sean at mapbox.com  Thu Jan 30 08:03:11 2020
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 30 Jan 2020 09:03:11 -0700
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
Message-ID: <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>

Hi,

On Thu, Jan 30, 2020 at 7:33 AM Robert Coup <robert.coup at koordinates.com>
wrote:

> Hi Christoph,
>
> For what it's worth, I'm doing some very minimal GDAL builds at the moment
> with Python bindings. The problem you'll very quickly run into is that GDAL
> has an enormous set of dependencies. This is what the default Homebrew gdal
> package depends on in macOS: cfitsio, epsilon, expat, freexl, geos, giflib,
> hdf5, jasper, jpeg, json-c, libdap, libgeotiff, libpng, libpq,
> libspatialite, libtiff, libxml2, netcdf, numpy, pcre, poppler, proj,
> python, sqlite, unixodbc, webp, xerces-c, xz, zstd. Debian's list is even
> longer.
>
> And each of those mostly have yet more dependencies... and if things are
> missed then issues arrive where one dependency is talking to one version of
> a library, and another dependency is talking to another. With usual
> difficult to debug hilarity ensuing.
>
> Sean has done a pile of this work already with respect to the GDAL wheels
> for RasterIO & Fiona, and Christoph Gohlke has done the same for the
> windows GDAL wheels Even linked to. They're both fairly minimal sets of
> drivers though. I'd definitely suggest building on their work if you want
> to make a start.
>
> Good luck!
>
> Rob :)
>

The dependency issues that Rob mentions are real, and there's yet another
level of DLL Hell that you can get into with Python extension modules. The
late-loading of shared libraries and possibilities for loading conflicting
versions are problems that 99% of users don't anticipate and don't know how
to begin to debug. With a compiled program, you have to go out of your way
to link and load different versions of, for example, libhdf5 within that
one program. With Python, on the other hand, it's very easy to do so by
accident. All you need is "import rasterio; import h5py" et voila, trouble
that only 10 people on the internet know how to debug.

I'm semi-sympathetic to the GDAL wheel cause and you are welcome to borrow
from rasterio-wheels (all the hard work was done by Matthew Brett, the
creator of multibuild), but I'm not going to actively help. Partly because
I want people to use Rasterio instead, and wheels are a competitive
advantage, and partly because more versions of GDAL on PyPI will mean more
conflicts and more confused users.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200130/7874d3a8/attachment-0001.html>

From mateusz at loskot.net  Thu Jan 30 08:28:10 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 30 Jan 2020 17:28:10 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
 <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>
Message-ID: <CABUeae8MNcTHimE8+RyuaTNRdVET7-1buT0-m8Jc7fKK485UkQ@mail.gmail.com>

On Thu, 30 Jan 2020 at 17:03, Sean Gillies <sean at mapbox.com> wrote:
>
> more versions of GDAL on PyPI will mean more conflicts and more confused users.

And, any related PR accepted to GDAL will eventually mean the
maintenance burden shifted to Even and the very few others.

IMO, such or any packaging initiative should live outside GDAL,
Everyone can request https://github.com/OSGeo/gdal-python-wheel and
keep the work done.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jan 30 09:03:01 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 30 Jan 2020 10:03:01 -0700 (MST)
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CABUeae8MNcTHimE8+RyuaTNRdVET7-1buT0-m8Jc7fKK485UkQ@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
 <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
 <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>
 <CABUeae8MNcTHimE8+RyuaTNRdVET7-1buT0-m8Jc7fKK485UkQ@mail.gmail.com>
Message-ID: <1580403781623-0.post@n6.nabble.com>

Sorry if this is a stupid question, but would GDAL wheels serve some similar
purpose than what gdal in conda-forge is serving
https://anaconda.org/conda-forge/gdal/files? Or something better?

-Jukka Rahkonen-


Mateusz Loskot wrote
> On Thu, 30 Jan 2020 at 17:03, Sean Gillies &lt;

> sean@

> &gt; wrote:
>>
>> more versions of GDAL on PyPI will mean more conflicts and more confused
>> users.
> 
> And, any related PR accepted to GDAL will eventually mean the
> maintenance burden shifted to Even and the very few others.
> 
> IMO, such or any packaging initiative should live outside GDAL,
> Everyone can request https://github.com/OSGeo/gdal-python-wheel and
> keep the work done.
> 
> Best regards,
> -- 
> Mateusz Loskot, http://mateusz.loskot.net
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From mateusz at loskot.net  Thu Jan 30 09:41:36 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 30 Jan 2020 18:41:36 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <1580403781623-0.post@n6.nabble.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
 <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
 <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>
 <CABUeae8MNcTHimE8+RyuaTNRdVET7-1buT0-m8Jc7fKK485UkQ@mail.gmail.com>
 <1580403781623-0.post@n6.nabble.com>
Message-ID: <CABUeae9uNP-d_2DOfUqpyPXBSE30ScHa-LYKjK1+rP-cSm0akg@mail.gmail.com>

On Thu, 30 Jan 2020 at 18:03, jratike80
<jukka.rahkonen at maanmittauslaitos.fi> wrote:
>
> Sorry if this is a stupid question, but would GDAL wheels serve some similar
> purpose than what gdal in conda-forge is serving
> https://anaconda.org/conda-forge/gdal/files?

https://www.anaconda.com/understanding-conda-and-pip/

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From cpaulik at vandersat.com  Fri Jan 31 01:57:52 2020
From: cpaulik at vandersat.com (Christoph Paulik)
Date: Fri, 31 Jan 2020 10:57:52 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CABUeae9uNP-d_2DOfUqpyPXBSE30ScHa-LYKjK1+rP-cSm0akg@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
 <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
 <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>
 <CABUeae8MNcTHimE8+RyuaTNRdVET7-1buT0-m8Jc7fKK485UkQ@mail.gmail.com>
 <1580403781623-0.post@n6.nabble.com>
 <CABUeae9uNP-d_2DOfUqpyPXBSE30ScHa-LYKjK1+rP-cSm0akg@mail.gmail.com>
Message-ID: <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>

Thank you all for the input.

My initial motivation was that I would like `pip install gdal` to just
work.

I like and use conda-forge daily but in my opinion the whole Python
packaging system is broken.

There are packages you can install with conda but not with pip and the
other way around.
So you always need to mix and match which leads to another set of problems.

Especially if you have your own Python package that depends on gdal.
You need to put it on conda-forge or your own channel which can be a long
process and extra work for every release
so that the installation works reasonably well for your users.

I guess that it is unrealistic to fix any of that, so let's get back on
topic.

I'll probably try to see if I can get a working wheel using the work that
was already done as a basis.
If I have any news to share I'll let you know. But you might never hear
from me again on this topic.

Christoph


On Thu, 30 Jan 2020 at 18:40, Mateusz Loskot <mateusz at loskot.net> wrote:

> On Thu, 30 Jan 2020 at 18:03, jratike80
> <jukka.rahkonen at maanmittauslaitos.fi> wrote:
> >
> > Sorry if this is a stupid question, but would GDAL wheels serve some
> similar
> > purpose than what gdal in conda-forge is serving
> > https://anaconda.org/conda-forge/gdal/files?
>
> https://www.anaconda.com/understanding-conda-and-pip/
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
*Christoph Paulik* // Head of Infrastructure
VanderSat // Satellite observed water data. Globally. Daily.
Wilhelminastraat 43a, 2011 VK, Haarlem (NL), The Netherlands
<https://maps.google.com/?q=Wilhelminastraat+43a,+2011+VK,+Haarlem+(NL),+The+Netherlands&entry=gmail&source=g>
*M*  +31 6 18271928 *W*  www.vandersat.com

--------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200131/5f1d85e8/attachment.html>

From patrick.mckendree.young at gmail.com  Fri Jan 31 06:05:38 2020
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Fri, 31 Jan 2020 07:05:38 -0700
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
 <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
 <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>
 <CABUeae8MNcTHimE8+RyuaTNRdVET7-1buT0-m8Jc7fKK485UkQ@mail.gmail.com>
 <1580403781623-0.post@n6.nabble.com>
 <CABUeae9uNP-d_2DOfUqpyPXBSE30ScHa-LYKjK1+rP-cSm0akg@mail.gmail.com>
 <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
Message-ID: <CADXYQQ6dJZZ-8U2b_hXeV1ycyQQKUfOQWvmgC6wrx4ackxjeMA@mail.gmail.com>

Here is how I build them for Linux, taken from Sean's work on rasterio.

https://github.com/youngpm/gdalmanylinux




On Fri, Jan 31, 2020, 2:58 AM Christoph Paulik <cpaulik at vandersat.com>
wrote:

> Thank you all for the input.
>
> My initial motivation was that I would like `pip install gdal` to just
> work.
>
> I like and use conda-forge daily but in my opinion the whole Python
> packaging system is broken.
>
> There are packages you can install with conda but not with pip and the
> other way around.
> So you always need to mix and match which leads to another set of problems.
>
> Especially if you have your own Python package that depends on gdal.
> You need to put it on conda-forge or your own channel which can be a long
> process and extra work for every release
> so that the installation works reasonably well for your users.
>
> I guess that it is unrealistic to fix any of that, so let's get back on
> topic.
>
> I'll probably try to see if I can get a working wheel using the work that
> was already done as a basis.
> If I have any news to share I'll let you know. But you might never hear
> from me again on this topic.
>
> Christoph
>
>
> On Thu, 30 Jan 2020 at 18:40, Mateusz Loskot <mateusz at loskot.net> wrote:
>
>> On Thu, 30 Jan 2020 at 18:03, jratike80
>> <jukka.rahkonen at maanmittauslaitos.fi> wrote:
>> >
>> > Sorry if this is a stupid question, but would GDAL wheels serve some
>> similar
>> > purpose than what gdal in conda-forge is serving
>> > https://anaconda.org/conda-forge/gdal/files?
>>
>> https://www.anaconda.com/understanding-conda-and-pip/
>>
>> Best regards,
>> --
>> Mateusz Loskot, http://mateusz.loskot.net
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
> *Christoph Paulik* // Head of Infrastructure
> VanderSat // Satellite observed water data. Globally. Daily.
> Wilhelminastraat 43a, 2011 VK, Haarlem (NL), The Netherlands
> <https://maps.google.com/?q=Wilhelminastraat+43a,+2011+VK,+Haarlem+(NL),+The+Netherlands&entry=gmail&source=g>
> *M*  +31 6 18271928 *W*  www.vandersat.com
>
>
> --------------------------------------------------------------------------------------
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200131/d48801c6/attachment.html>

From mateusz at loskot.net  Fri Jan 31 06:14:39 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 31 Jan 2020 15:14:39 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <3722587.5EXFenC4x2@even-i700>
 <CAHtCBnhG8nOy9evbWN+WH_LJSdafucYVFOp4mMBkOSoQnWmYxg@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
 <CADPhZXycv9cuTFihdFOgz5aSNCc_+Pwh-dV0bU_gu41bkeNSSg@mail.gmail.com>
 <CABUeae8MNcTHimE8+RyuaTNRdVET7-1buT0-m8Jc7fKK485UkQ@mail.gmail.com>
 <1580403781623-0.post@n6.nabble.com>
 <CABUeae9uNP-d_2DOfUqpyPXBSE30ScHa-LYKjK1+rP-cSm0akg@mail.gmail.com>
 <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
Message-ID: <CABUeae_kbx7ujHSc8wSBkwTL8b9fN8F3Q1=15kgVGt6CiaMZ3A@mail.gmail.com>

On Fri, 31 Jan 2020 at 10:58, Christoph Paulik <cpaulik at vandersat.com> wrote:
>
> My initial motivation was that I would like `pip install gdal` to just work.

I do share your view.
The pip install is always the canonical Pythonic way for me and
I'd be very happy myself to be able to install GDAL that way.

> I guess that it is unrealistic to fix any of that, so let's get back on topic.

My point is that, IMO, such initiative is best to be run as a project
independent from GDAL development, outside GDAL repository,
for practical reasons.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From jluis at ualg.pt  Fri Jan 31 06:30:31 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Fri, 31 Jan 2020 14:30:31 +0000
Subject: [gdal-dev] How to create a Memory Vector dataset?
Message-ID: <DB8PR04MB6697C5AA69837D394FA48B24A6070@DB8PR04MB6697.eurprd04.prod.outlook.com>



I found this

https://gdal.org/drivers/vector/memory.html

but it refers to CreateDataSource() to the job and I can't find anything about this function that is not python related (old code?).
Is there an example somewhere of creating a Memory (not MEM?) vector dataset that I could use to learn more on this?

Thanks

Joaquim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200131/550885c8/attachment-0001.html>

From even.rouault at spatialys.com  Fri Jan 31 06:48:43 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 31 Jan 2020 15:48:43 +0100
Subject: [gdal-dev] How to create a Memory Vector dataset?
In-Reply-To: <DB8PR04MB6697C5AA69837D394FA48B24A6070@DB8PR04MB6697.eurprd04.prod.outlook.com>
References: <DB8PR04MB6697C5AA69837D394FA48B24A6070@DB8PR04MB6697.eurprd04.prod.outlook.com>
Message-ID: <1974708.SS0o9F72QL@even-i700>

On vendredi 31 janvier 2020 14:30:31 CET Joaquim Manuel Freire Luís wrote:
> I found this
> 
> https://gdal.org/drivers/vector/memory.html
> 
> but it refers to CreateDataSource() to the job and I can't find anything
> about this function that is not python related (old code?). 

CreateDataSource() is the GDAL 1.x "old" vector API, before the GDAL 2 unification.
But should still be functional

The Search textbox (top left) brings some reasults:

https://gdal.org/search.html?q=CreateDataSource&check_keywords=yes&area=default

> Is there an
> example somewhere of creating a Memory (not MEM?) vector dataset that I
> could use to learn more on this?

https://gdal.org/tutorials/vector_api_tut.html#writing-to-ogr should work with MEM too.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Jan 31 06:53:24 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 31 Jan 2020 15:53:24 +0100
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CABUeae_kbx7ujHSc8wSBkwTL8b9fN8F3Q1=15kgVGt6CiaMZ3A@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
 <CABUeae_kbx7ujHSc8wSBkwTL8b9fN8F3Q1=15kgVGt6CiaMZ3A@mail.gmail.com>
Message-ID: <2004643.y9WdgZ42uR@even-i700>

On vendredi 31 janvier 2020 15:14:39 CET Mateusz Loskot wrote:
> On Fri, 31 Jan 2020 at 10:58, Christoph Paulik <cpaulik at vandersat.com> 
wrote:
> > My initial motivation was that I would like `pip install gdal` to just
> > work.
> I do share your view.
> The pip install is always the canonical Pythonic way for me and
> I'd be very happy myself to be able to install GDAL that way.
> 
> > I guess that it is unrealistic to fix any of that, so let's get back on
> > topic.
> My point is that, IMO, such initiative is best to be run as a project
> independent from GDAL development, outside GDAL repository,
> for practical reasons.

Except that if we wanted "pip install gdal" to include wheels, that should be 
done as part of the gdal Pyython package that is managed in swig/python of 
GDAL repository. Something outside should use another package name

<brainstorming>
Thinking about Sean's very valid point about wheels and symbol clashes when 
loading different version of the same library (or perhaps even the same 
version twice), I'm wondering if using symbol versioning, at least on Linux, 
wouldn't solve this. Imagine that you'd recompile GDAL and all its 
dependencies such that all exported symbols (functions & global variables), 
with some "gdal_wheel" marker, then those libraries would be effectively 
private to the Python package. I know that at some past point (GDAL 1.8 I 
think), Debian packaged GDAL with versionned symbols (from a distribution 
point of view, versionned symbols aren't necessarily that great from what I 
read, but for the use case we discuss here, that could perhaps be an option). 

Hopefully, there would be some existing tools to automate this. At linking 
time. Or perhaps as a post processing stage, messing directly with the ELF 
format.

I could imagine thought that symbol renaming/versionning wouldn't fly very 
well with dlopen()/dlsym() use that libraries could make. But I don't think 
this is extensive used in the GDAL use case. On top of my head, a few cases 
might be:
* typically the old way GDAL loaded PROJ4. But no longer an issue with GDAL 3, 
or can be avoided with GDAL 2.x as well when building with --with-
[static-]proj[4])
* the OGDI library loading its plugin. But OGDI is sufficiently a odd beast 
that we don't need/want this in a general purpose wheel.
</brainstorming>

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jason.roberts at duke.edu  Fri Jan 31 07:27:56 2020
From: jason.roberts at duke.edu (Jason Roberts)
Date: Fri, 31 Jan 2020 15:27:56 +0000
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <2004643.y9WdgZ42uR@even-i700>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
 <CABUeae_kbx7ujHSc8wSBkwTL8b9fN8F3Q1=15kgVGt6CiaMZ3A@mail.gmail.com>
 <2004643.y9WdgZ42uR@even-i700>
Message-ID: <MN2PR05MB7087F1BA93B53B1B82407C8C87070@MN2PR05MB7087.namprd05.prod.outlook.com>

As a 15-year user of GDAL's Python bindings and a long time lurker on this list, I just wanted to thank all of you who are contemplating the Python packaging problem (and thank you for GDAL in general). I maintain a small package of Python-based utilities used by marine ecologists, mainly in an academic research setting, usually accessed from ArcGIS though GUI wrappers. Installation is one of the biggest obstacles for these users. Anything you do to further improve it (e.g. pip install gdal) would be very much appreciated.

I also wanted to beg that you include Windows in your contemplations. On Windows, there is the classic "DLL Hell" problem similar to the symbol clashing problem you've been discussing for Linux. You guys are probably more familiar with it than me at this point, but the basic issue used to be that on Windows, a given process could only have one DLL with a given file name loaded. Because GDAL dynamically links to so many libraries, it can be a problem to access it from complicated programs, such as ArcGIS (which has its own private copy of GDAL), or in concert with other libraries that might have common dependencies (e.g. on netCDF, JPEG, etc.), at least when all of the DLLs have the same names. Anyway, this stuff seems somewhat tangential to the Python packaging problem, but any improvements you can make in to this stuff is also very appreciated.

Thanks again and all the best,

Jason

> -----Original Message-----
> From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even
> Rouault
> Sent: Friday, January 31, 2020 9:53 AM
> To: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] Python Wheels for gdal
> 
> On vendredi 31 janvier 2020 15:14:39 CET Mateusz Loskot wrote:
> > On Fri, 31 Jan 2020 at 10:58, Christoph Paulik <cpaulik at vandersat.com>
> wrote:
> > > My initial motivation was that I would like `pip install gdal` to
> > > just work.
> > I do share your view.
> > The pip install is always the canonical Pythonic way for me and I'd be
> > very happy myself to be able to install GDAL that way.
> >
> > > I guess that it is unrealistic to fix any of that, so let's get back
> > > on topic.
> > My point is that, IMO, such initiative is best to be run as a project
> > independent from GDAL development, outside GDAL repository, for
> > practical reasons.
> 
> Except that if we wanted "pip install gdal" to include wheels, that should
> be done as part of the gdal Pyython package that is managed in swig/python
> of GDAL repository. Something outside should use another package name
> 
> <brainstorming>
> Thinking about Sean's very valid point about wheels and symbol clashes
> when loading different version of the same library (or perhaps even the
> same version twice), I'm wondering if using symbol versioning, at least on
> Linux, wouldn't solve this. Imagine that you'd recompile GDAL and all its
> dependencies such that all exported symbols (functions & global
> variables), with some "gdal_wheel" marker, then those libraries would be
> effectively private to the Python package. I know that at some past point
> (GDAL 1.8 I think), Debian packaged GDAL with versionned symbols (from a
> distribution point of view, versionned symbols aren't necessarily that
> great from what I read, but for the use case we discuss here, that could
> perhaps be an option).
> 
> Hopefully, there would be some existing tools to automate this. At linking
> time. Or perhaps as a post processing stage, messing directly with the ELF
> format.
> 
> I could imagine thought that symbol renaming/versionning wouldn't fly very
> well with dlopen()/dlsym() use that libraries could make. But I don't
> think this is extensive used in the GDAL use case. On top of my head, a
> few cases might be:
> * typically the old way GDAL loaded PROJ4. But no longer an issue with
> GDAL 3, or can be avoided with GDAL 2.x as well when building with --with-
> [static-]proj[4])
> * the OGDI library loading its plugin. But OGDI is sufficiently a odd
> beast that we don't need/want this in a general purpose wheel.
> </brainstorming>
> 
> Even
> 
> --
> Spatialys - Geospatial professional services
> https://urldefense.proofpoint.com/v2/url?u=http-
> 3A__www.spatialys.com&d=DwIGaQ&c=imBPVzF25OnBgGmVOlcsiEgHoG1i6YHLR0Sj_gZ4a
> dc&r=cJfJ4ejc1xbg_qb47Pg1OoRq1GfFGvWbDD2PT7-
> fBKk&m=aoKWdL0rF70E3ttLt_aZ96nhL_Cdj1rsNXRsMBVM_9M&s=7T6raBfaPIXagvEPCCZDh
> nZMGlqHNWWjv1rdKxYLKEw&e=
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://urldefense.proofpoint.com/v2/url?u=https-
> 3A__lists.osgeo.org_mailman_listinfo_gdal-
> 2Ddev&d=DwIGaQ&c=imBPVzF25OnBgGmVOlcsiEgHoG1i6YHLR0Sj_gZ4adc&r=cJfJ4ejc1xb
> g_qb47Pg1OoRq1GfFGvWbDD2PT7-
> fBKk&m=aoKWdL0rF70E3ttLt_aZ96nhL_Cdj1rsNXRsMBVM_9M&s=Hgl9GE67s6g8AcPh3VnFC
> QzQkhgnjRBdszdhn338ddM&e=

From jluis at ualg.pt  Fri Jan 31 07:58:37 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Fri, 31 Jan 2020 15:58:37 +0000
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <MN2PR05MB7087F1BA93B53B1B82407C8C87070@MN2PR05MB7087.namprd05.prod.outlook.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
 <CABUeae_kbx7ujHSc8wSBkwTL8b9fN8F3Q1=15kgVGt6CiaMZ3A@mail.gmail.com>
 <2004643.y9WdgZ42uR@even-i700>
 <MN2PR05MB7087F1BA93B53B1B82407C8C87070@MN2PR05MB7087.namprd05.prod.outlook.com>
Message-ID: <DB8PR04MB6697FFA7CBED96D5B53B7627A6070@DB8PR04MB6697.eurprd04.prod.outlook.com>

Jason,

From your description you may be interested to try the GDAL that is shipped with the GMT installer. I haven't touched on the symbol names ofc but either the GDAL dll and all of its dependencies have different names (suffixed with a "_w64"), which avoids the name clashing that you refer to.
The problem is that I don't build the Python wrapper. 

Joaquim

-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Jason Roberts
Sent: Friday, January 31, 2020 3:28 PM
To: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Python Wheels for gdal

As a 15-year user of GDAL's Python bindings and a long time lurker on this list, I just wanted to thank all of you who are contemplating the Python packaging problem (and thank you for GDAL in general). I maintain a small package of Python-based utilities used by marine ecologists, mainly in an academic research setting, usually accessed from ArcGIS though GUI wrappers. Installation is one of the biggest obstacles for these users. Anything you do to further improve it (e.g. pip install gdal) would be very much appreciated.

I also wanted to beg that you include Windows in your contemplations. On Windows, there is the classic "DLL Hell" problem similar to the symbol clashing problem you've been discussing for Linux. You guys are probably more familiar with it than me at this point, but the basic issue used to be that on Windows, a given process could only have one DLL with a given file name loaded. Because GDAL dynamically links to so many libraries, it can be a problem to access it from complicated programs, such as ArcGIS (which has its own private copy of GDAL), or in concert with other libraries that might have common dependencies (e.g. on netCDF, JPEG, etc.), at least when all of the DLLs have the same names. Anyway, this stuff seems somewhat tangential to the Python packaging problem, but any improvements you can make in to this stuff is also very appreciated.

Thanks again and all the best,

Jason

> -----Original Message-----
> From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even 
> Rouault
> Sent: Friday, January 31, 2020 9:53 AM
> To: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] Python Wheels for gdal
> 
> On vendredi 31 janvier 2020 15:14:39 CET Mateusz Loskot wrote:
> > On Fri, 31 Jan 2020 at 10:58, Christoph Paulik 
> > <cpaulik at vandersat.com>
> wrote:
> > > My initial motivation was that I would like `pip install gdal` to 
> > > just work.
> > I do share your view.
> > The pip install is always the canonical Pythonic way for me and I'd 
> > be very happy myself to be able to install GDAL that way.
> >
> > > I guess that it is unrealistic to fix any of that, so let's get 
> > > back on topic.
> > My point is that, IMO, such initiative is best to be run as a 
> > project independent from GDAL development, outside GDAL repository, 
> > for practical reasons.
> 
> Except that if we wanted "pip install gdal" to include wheels, that 
> should be done as part of the gdal Pyython package that is managed in 
> swig/python of GDAL repository. Something outside should use another 
> package name
> 
> <brainstorming>
> Thinking about Sean's very valid point about wheels and symbol clashes 
> when loading different version of the same library (or perhaps even 
> the same version twice), I'm wondering if using symbol versioning, at 
> least on Linux, wouldn't solve this. Imagine that you'd recompile GDAL 
> and all its dependencies such that all exported symbols (functions & 
> global variables), with some "gdal_wheel" marker, then those libraries 
> would be effectively private to the Python package. I know that at 
> some past point (GDAL 1.8 I think), Debian packaged GDAL with 
> versionned symbols (from a distribution point of view, versionned 
> symbols aren't necessarily that great from what I read, but for the 
> use case we discuss here, that could perhaps be an option).
> 
> Hopefully, there would be some existing tools to automate this. At 
> linking time. Or perhaps as a post processing stage, messing directly 
> with the ELF format.
> 
> I could imagine thought that symbol renaming/versionning wouldn't fly 
> very well with dlopen()/dlsym() use that libraries could make. But I 
> don't think this is extensive used in the GDAL use case. On top of my 
> head, a few cases might be:
> * typically the old way GDAL loaded PROJ4. But no longer an issue with 
> GDAL 3, or can be avoided with GDAL 2.x as well when building with 
> --with-
> [static-]proj[4])
> * the OGDI library loading its plugin. But OGDI is sufficiently a odd 
> beast that we don't need/want this in a general purpose wheel.
> </brainstorming>
> 
> Even
> 
> --
> Spatialys - Geospatial professional services
> https://urldefense.proofpoint.com/v2/url?u=http-
> 3A__www.spatialys.com&d=DwIGaQ&c=imBPVzF25OnBgGmVOlcsiEgHoG1i6YHLR0Sj_
> gZ4a
> dc&r=cJfJ4ejc1xbg_qb47Pg1OoRq1GfFGvWbDD2PT7-
> fBKk&m=aoKWdL0rF70E3ttLt_aZ96nhL_Cdj1rsNXRsMBVM_9M&s=7T6raBfaPIXagvEPC
> CZDh
> nZMGlqHNWWjv1rdKxYLKEw&e=
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://urldefense.proofpoint.com/v2/url?u=https-
> 3A__lists.osgeo.org_mailman_listinfo_gdal-
> 2Ddev&d=DwIGaQ&c=imBPVzF25OnBgGmVOlcsiEgHoG1i6YHLR0Sj_gZ4adc&r=cJfJ4ej
> c1xb
> g_qb47Pg1OoRq1GfFGvWbDD2PT7-
> fBKk&m=aoKWdL0rF70E3ttLt_aZ96nhL_Cdj1rsNXRsMBVM_9M&s=Hgl9GE67s6g8AcPh3
> VnFC
> QzQkhgnjRBdszdhn338ddM&e=
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From nik at nikosalexandris.net  Fri Jan 31 08:00:57 2020
From: nik at nikosalexandris.net (Nikos Alexandris)
Date: Fri, 31 Jan 2020 17:00:57 +0100
Subject: [gdal-dev] "Tolerance condition error" while reprojecting
	MSG/SEVIRI products
Message-ID: <20200131160057.lnipip76s7h5geqi@imap.dreamhost.com>

Dears,

I finally got a working `gdalwarp` one-lines for MSG/SEVIRI products.
For example,

```
gdalwarp \
  -ot Float32 \
  -s_srs "+proj=geos +h=35785831 +a=6378169 +b=6356583.8 +no_defs" \
  -t_srs EPSG:4326 \
  -r near \
  -of GTiff \
  HDF5_LSASAF_MSG_LST_MSG-Disk_201906302300.tif \
  HDF5_LSASAF_MSG_LST_MSG-Disk_201906302300_wgs84.tif
```

However, while `gdalwarp` processes the GeoTIFF file, it issues many
lines of the following error:
```
ERROR 1: tolerance condition error
..
ERROR 1: tolerance condition error
ERROR 1: Reprojection failed, err = -20, further errors will be suppressed on the transform object.
..
ERROR 1: Reprojection failed, err = -20, further errors will be suppressed on the transform object.
Creating output file that is 3879P x 3537L.
Processing input file HDF5_LSASAF_MSG_LST_MSG-Disk_201906302300.tif.
0...10...20...30...40...50...60...70...80...90...100 - done.
```

How important is this error? Thank you.

From even.rouault at spatialys.com  Fri Jan 31 08:18:14 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 31 Jan 2020 17:18:14 +0100
Subject: [gdal-dev] "Tolerance condition error" while reprojecting
	MSG/SEVIRI products
In-Reply-To: <20200131160057.lnipip76s7h5geqi@imap.dreamhost.com>
References: <20200131160057.lnipip76s7h5geqi@imap.dreamhost.com>
Message-ID: <2122648.cMicldVxrV@even-i700>

> How important is this error? Thank you.

Probably not that much. It is due to failure when trying to reproject pixels 
not corresponding to a location on Earth.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cgohlke at uci.edu  Fri Jan 31 10:56:33 2020
From: cgohlke at uci.edu (Christoph Gohlke)
Date: Fri, 31 Jan 2020 10:56:33 -0800
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <2469536.6nXhLxjVX8@even-i700>
 <CAHtCBnh1oO0+jYqjKwYU2tJZkghhxVY7OT-_Y389yuYdUGPK4g@mail.gmail.com>
 <2420534.S0o4jUKHCm@even-i700>
 <CAFLLRpJKU1nO+uXHaFyA=HFMJGkFX-C0CRQwraEyLP-CrGDbhA@mail.gmail.com>
Message-ID: <a0030f70-066a-de3a-c783-a65291f56f35@uci.edu>



On 1/30/2020 6:33 AM, Robert Coup wrote:
> Hi Christoph,
> 
> For what it's worth, I'm doing some very minimal GDAL builds at the 
> moment with Python bindings. The problem you'll very quickly run into is 
> that GDAL has an enormous set of dependencies. This is what the default 
> Homebrew gdal package depends on in macOS: cfitsio, epsilon, expat, 
> freexl, geos, giflib, hdf5, jasper, jpeg, json-c, libdap, libgeotiff, 
> libpng, libpq, libspatialite, libtiff, libxml2, netcdf, numpy, pcre, 
> poppler, proj, python, sqlite, unixodbc, webp, xerces-c, xz, zstd. 
> Debian's list is even longer.
> 
> And each of those mostly have yet more dependencies... and if things are 
> missed then issues arrive where one dependency is talking to one version 
> of a library, and another dependency is talking to another. With usual 
> difficult to debug hilarity ensuing.
> 
> Sean has done a pile of this work already with respect to the GDAL 
> wheels for RasterIO & Fiona, and Christoph Gohlke has done the same for 
> the windows GDAL wheels Even linked to. They're both fairly minimal sets 
> of drivers though. I'd definitely suggest building on their work if you 
> want to make a start.
> 
> Good luck!
> 
> Rob :)
> 

Hello,

I am curious by what standard do the binaries at 
<https://www.lfd.uci.edu/~gohlke/pythonlibs/#gdal> have a "fairly 
minimal sets of drivers"?

Iterating over ogr.GetDriver() for the 3.0.4 binaries returns:

ARCGEN, AVCBin, AVCE00, AeronavFAA, AmigoCloud, BNA, CAD, CSV, CSW, 
Carto, Cloudant, CouchDB, DB2ODBC, DGN, DXF, EDIGEO, EEDA, ESRI 
Shapefile, ESRIJSON, ElasticSearch, GFT, GML, GPKG, GPSBabel, 
GPSTrackMaker, GPX, GeoJSON, GeoJSONSeq, GeoRSS, Geoconcept, Geomedia, 
HTF, HTTP, Idrisi, JML, JP2OpenJPEG, JPEG2000, KML, LIBKML, MBTiles, 
MSSQLSpatial, MVT, MapInfo File, Memory, NGW, ODBC, ODS, OGR_GMT, 
OGR_PDS, OGR_SDTS, OGR_VRT, OSM, OpenAir, OpenFileGDB, PCIDSK, PDF, 
PDS4, PGDUMP, PGeo, PLSCENES, PostgreSQL, REC, S57, SEGUKOOA, SEGY, 
SQLite, SUA, SVG, SXF, Selafin, TIGER, TopoJSON, UK .NTF, VDV, VFK, 
WAsP, WFS, WFS3, Walk, XLS, XLSX, XPlane, netCDF

Some drivers (e.g. JPEG LS) and features (12-bit JPEG in TIFF) are 
disabled because of library conflict, build, or stability issues.

Excluding drivers depending on GPL (e.g. Poppler, MySQL) or proprietary 
licensed libraries, what commonly used drivers are missing?

Everything except for the LGPLed GEOS library is statically linked. The 
wheels include the GDAL tools, link library, and include files.

I am not working in the geo/GIS field and am not using GDAL regularly, 
so I might be missing something.

I sent my nmake.opt and patch to the to swig/python package to Christoph 
Paulik.

Christoph

From sean at mapbox.com  Fri Jan 31 11:57:14 2020
From: sean at mapbox.com (Sean Gillies)
Date: Fri, 31 Jan 2020 12:57:14 -0700
Subject: [gdal-dev] Python Wheels for gdal
In-Reply-To: <2004643.y9WdgZ42uR@even-i700>
References: <CAHtCBniKAStXMsA8gg=QoyYeGRdgT19_QGrCpDS2RwhNaGRX6Q@mail.gmail.com>
 <CAHtCBnhEYckTsW1jOdWpq9mimXV8Fva7acerRTqq+iWoSopEQQ@mail.gmail.com>
 <CABUeae_kbx7ujHSc8wSBkwTL8b9fN8F3Q1=15kgVGt6CiaMZ3A@mail.gmail.com>
 <2004643.y9WdgZ42uR@even-i700>
Message-ID: <CADPhZXx5+tPznCqLOnTkJv1Nx8tMT9H=n+4dEs3BCUTX+bwGkg@mail.gmail.com>

Hi Even,

On Fri, Jan 31, 2020 at 7:53 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> On vendredi 31 janvier 2020 15:14:39 CET Mateusz Loskot wrote:
> > On Fri, 31 Jan 2020 at 10:58, Christoph Paulik <cpaulik at vandersat.com>
> wrote:
> > > My initial motivation was that I would like `pip install gdal` to just
> > > work.
> > I do share your view.
> > The pip install is always the canonical Pythonic way for me and
> > I'd be very happy myself to be able to install GDAL that way.
> >
> > > I guess that it is unrealistic to fix any of that, so let's get back on
> > > topic.
> > My point is that, IMO, such initiative is best to be run as a project
> > independent from GDAL development, outside GDAL repository,
> > for practical reasons.
>
> Except that if we wanted "pip install gdal" to include wheels, that should
> be
> done as part of the gdal Pyython package that is managed in swig/python of
> GDAL repository. Something outside should use another package name
>

Speaking of package name, "gdal" and "ogr" are modules of an "osgeo"
package. Maybe it should be "pip install osgeo"? Doesn't need to be, of
course, but it's nice when distribution and package names match.


> <brainstorming>
> Thinking about Sean's very valid point about wheels and symbol clashes
> when
> loading different version of the same library (or perhaps even the same
> version twice), I'm wondering if using symbol versioning, at least on
> Linux,
> wouldn't solve this. Imagine that you'd recompile GDAL and all its
> dependencies such that all exported symbols (functions & global
> variables),
> with some "gdal_wheel" marker, then those libraries would be effectively
> private to the Python package. I know that at some past point (GDAL 1.8 I
> think), Debian packaged GDAL with versionned symbols (from a distribution
> point of view, versionned symbols aren't necessarily that great from what
> I
> read, but for the use case we discuss here, that could perhaps be an
> option).
>
> Hopefully, there would be some existing tools to automate this. At linking
> time. Or perhaps as a post processing stage, messing directly with the ELF
> format.
>

There are existing tools. Multibuild uses https://github.com/pypa/auditwheel.
It says in the project README that the result is "like static linking", but
as I've found between rasterio and h5py wheels (which both have been
through auditwheel), it's not proof against conflicts.

https://github.com/matthew-brett/delocate is the OS X analog of auditwheel.


> I could imagine thought that symbol renaming/versionning wouldn't fly very
> well with dlopen()/dlsym() use that libraries could make. But I don't
> think
> this is extensive used in the GDAL use case. On top of my head, a few
> cases
> might be:
> * typically the old way GDAL loaded PROJ4. But no longer an issue with
> GDAL 3,
> or can be avoided with GDAL 2.x as well when building with --with-
> [static-]proj[4])
> * the OGDI library loading its plugin. But OGDI is sufficiently a odd
> beast
> that we don't need/want this in a general purpose wheel.
> </brainstorming>
>
> Even
>

Even though I'm not a user of GDAL's python bindings, it's clear that my
project is going to benefit from having your Linux expertise focussed on
the problem of getting GDAL and its dependencies to Python users, and I'm
grateful for that.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200131/6a507588/attachment.html>

From chris.marsh at usask.ca  Fri Jan 31 20:07:16 2020
From: chris.marsh at usask.ca (Marsh, Chris)
Date: Sat, 1 Feb 2020 04:07:16 +0000
Subject: [gdal-dev] NetCDF and EASE-2
Message-ID: <CAFgDerFz_yZ3ET-crP7o-J3OAkShYviL4FPsjO_f9YJY4RDL7w@mail.gmail.com>

Hi,
I'm trying to pull some data out of a netcdf and convert it to a geotiff. The data are the snowdepths from this paper

https://www.nature.com/articles/s41467-019-12566-y

with one of the data files here for testing:
https://drive.google.com/open?id=1qZBYJ4UEbYYHXpSV4gyFBkZYdYKtZGTR


The data ends up weirdly projected when using gdal_transform. I've tried the method outlined here
https://gis.stackexchange.com/questions/249841/parameters-of-projection-for-smap-data#comment392952_249841

but that ended up with an incorrect messy output. My attempt was
gdal_translate -a_ullr -17367530.45 7314540.11 17367530.45 -7314540.11 -a_srs "+proj=cea +lon_0=0 +lat_ts=30 +ellps=WGS84 +units=m" -a_nodata -9999 NETCDF:"SD_20160901.nc":snd_upd  out.tif

However I'm not even sure if that ullr is right, or how I would confirm

I was wondering if anyone had a suggestion on how to proceed.

Meta data from the nc is given here:

Spatial sampling:       1 km global cylindrical 1-km Equal-Area Scalable Earth version 2 (EASE-2)
Dimensions:             4500 (rows) x 34703 (columns)
Domain:                 Mountain ranges (Global Mountain Biodiversity Assessment (GMBA) inventory) from 20°N to 90°N in latitude
No data value:          -9999

Many thanks,

Cheers
Chris

Chris Marsh, PhD
University of Saskatchewan
chrismarsh.ca<http://chrismarsh.ca/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200201/0cf9b9cc/attachment.html>

