From bontepaarden at gmail.com  Sat Jul  1 10:16:48 2017
From: bontepaarden at gmail.com (Paul Meems)
Date: Sat, 1 Jul 2017 19:16:48 +0200
Subject: [gdal-dev] VRT file with cutline behaves strangely with tiff with
	overviews
Message-ID: <CAHNf2YQ_P78mricf+jUgDcUG2OY-2NSa_MdMs9RNHZ+Unz7fjg@mail.gmail.com>

I'm using GDAL v2.1.3

I have a tiff file with this info:
Driver: GTiff/GeoTIFF
Files: Chlorofyl-index.tif
       Chlorofyl-index.tif.aux.xml
Size is 5140, 6065
Coordinate System is:
PROJCS["WGS 84 / UTM zone 32N",
    GEOGCS["WGS 84",
        DATUM["WGS_1984",
            SPHEROID["WGS 84",6378137,298.257223563,
                AUTHORITY["EPSG","7030"]],
            AUTHORITY["EPSG","6326"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.0174532925199433,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4326"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",9],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AXIS["Easting",EAST],
    AXIS["Northing",NORTH],
    AUTHORITY["EPSG","32632"]]
Origin = (360810.191610000040000,5860662.620930000200000)
Pixel Size = (0.125010000000000,-0.125010000000000)
Metadata:
  AREA_OR_POINT=Area
Image Structure Metadata:
  COMPRESSION=LZW
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  (  360810.192, 5860662.621) (  6d55'54.04"E, 52d52'39.50"N)
Lower Left  (  360810.192, 5859904.435) (  6d55'55.21"E, 52d52'14.98"N)
Upper Right (  361452.743, 5860662.621) (  6d56'28.39"E, 52d52'40.10"N)
Lower Right (  361452.743, 5859904.435) (  6d56'29.55"E, 52d52'15.58"N)
Center      (  361131.467, 5860283.528) (  6d56'11.80"E, 52d52'27.54"N)
Band 1 Block=256x256 Type=Float32, ColorInterp=Gray
  Min=-0.177 Max=33.644
  Minimum=-0.177, Maximum=33.644, Mean=18.605, StdDev=7.894
  NoData Value=-10000
  Metadata:
    STATISTICS_MAXIMUM=33.644180297852
    STATISTICS_MEAN=18.604999564386
    STATISTICS_MINIMUM=-0.17713606357574
    STATISTICS_STDDEV=7.8939827089249

I cut this file with a border shapefile and save it to a VRT file using
this command:
gdalwarp -of VRT -cutline border.shp -crop_to_cutline -dstnodata 0
-overwrite Chlorofyl-index.tif Chlorofyl-index-clipped.vrt

I open this vrt-file in MapWindow5 and in QGis and it looks as expected.

I now add external overviews to the tiff file using:
gdaladdo -ro -r nearest Chlorofyl-index.tif 2 4 8 16

I reopen the vrt file and both MapWindow5 as QGis show a complete different
part of the tiff.
In QGis it is much smaller and outside the original border and with MW5 it
is bigger and less high than the border. Either way they are wrong.

When I delete the .ovr file and reopen the vrt-file all is well again.
I already tried running my GDALWarp command after creating the overviews
but that doesn't matter.

Creating a tiff-file instead of a vrt-file results in a correct result.

Is this a known and expected behavior of the VRT-format?
I really want to keep using the vrt-file since it is only 700kb instead of
the tiff-file which is 63MB and I will be doing more calculations later on,
which also result in new files.

If needed I can send my input files.

Thanks,

Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170701/3d3689af/attachment.html>

From even.rouault at spatialys.com  Sat Jul  1 11:32:18 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 01 Jul 2017 20:32:18 +0200
Subject: [gdal-dev] VRT file with cutline behaves strangely with tiff
	with overviews
In-Reply-To: <CAHNf2YQ_P78mricf+jUgDcUG2OY-2NSa_MdMs9RNHZ+Unz7fjg@mail.gmail.com>
References: <CAHNf2YQ_P78mricf+jUgDcUG2OY-2NSa_MdMs9RNHZ+Unz7fjg@mail.gmail.com>
Message-ID: <3660161.kLtnm3nRvs@even-i700>

> Is this a known and expected behavior of the VRT-format?
> I really want to keep using the vrt-file since it is only 700kb instead of
> the tiff-file which is 63MB and I will be doing more calculations later on,
> which also result in new files.
> 
> If needed I can send my input files.

Please open a ticket about that, with the links to the files to reproduce.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170701/305fab52/attachment.html>

From andrew at aitchison.me.uk  Sun Jul  2 13:07:57 2017
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sun, 2 Jul 2017 21:07:57 +0100 (BST)
Subject: [gdal-dev] Is 2.1.4 supposed to require C++11 ?
In-Reply-To: <11024948.OQmd95KDIC@even-i700>
References: <11024948.OQmd95KDIC@even-i700>
Message-ID: <alpine.LRH.2.20.1707021208510.31266@warden.aitchison.me.uk>


On Fri, 30 Jun 2017, Even Rouault wrote:

> On behalf of the GDAL/OGR development team, I am pleased to announce the release of the
> GDAL/OGR 2.2.1 and 2.1.4 bug fix versions.

Sorry I didn't catch this before you made the release.

I have no problem with 2.2.1, but 2.1.4 (and the RC) fails to build
for me on Scientific Linux 6.9 (should be same as RHEL6 or Centos 6)
jasper version 1.900.1-21.el6_9
and g++ version g++ (GCC) 4.9.2 20150212 (Red Hat 4.9.2-6)



libtool: compile:  g++ -c -I/home/werdna/gdal2.1.4/gdal-2.1.4/port
 	-I/home/werdna/gdal2.1.4/gdal-2.1.4/gcore
     -I/home/werdna/gdal2.1.4/gdal-2.1.4/alg
     -I/home/werdna/gdal2.1.4/gdal-2.1.4/ogr
     -I/home/werdna/gdal2.1.4/gdal-2.1.4/ogr/ogrsf_frmts
     -I/home/werdna/gdal2.1.4/gdal-2.1.4/gnm
     -I/home/werdna/gdal2.1.4/gdal-2.1.4/apps -DOGR_ENABLED
     -I/home/werdna/gdal2.1.4/gdal-2.1.4/port -I/usr/include
     -I/usr/include/cfitsio -DGDAL_COMPILATION -Idegrib18/degrib -DHAVE_JASPER
     -g -O2 -Wall -Wextra -Winit-self -Wunused-parameter -Wformat
     -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow
     -Werror=vla -Wmissing-declarations -Wnon-virtual-dtor -Woverloaded-virtual
     -fno-operator-names degrib18/g2clib-1.0.4/dec_jpeg2000.cpp  -fPIC -DPIC -o
     ../o/.libs/dec_jpeg2000.o
In file included from /usr/include/jasper/jasper.h:77:0,
                  from degrib18/g2clib-1.0.4/dec_jpeg2000.cpp:18:
/usr/include/jasper/jas_math.h: In function 'bool 
jas_safe_size_mul(size_t, size_t, size_t*)':
/usr/include/jasper/jas_math.h:143:15: error: 'SIZE_MAX' was not declared 
in this scope
   if (x && y > SIZE_MAX / x) {
                ^
/usr/include/jasper/jas_math.h: In function 'bool 
jas_safe_size_add(size_t, size_t, size_t*)':
/usr/include/jasper/jas_math.h:170:10: error: 'SIZE_MAX' was not declared 
in this scope
   if (y > SIZE_MAX - x) {
           ^
make[2]: *** [../o/dec_jpeg2000.lo] Error 1
make[2]: Leaving directory `/home/werdna/gdal2.1.4/gdal-2.1.4/frmts/grib'
make[1]: *** [grib-install-obj] Error 2
make[1]: Leaving directory `/home/werdna/gdal2.1.4/gdal-2.1.4/frmts'
make: *** [frmts-target] Error 2

-------------------------
There are similar problems with jpeg2000/jpeg2000dataset.cpp and
jpeg2000_vsil_io.cpp (which also include jasper.h).

However, if I add -std=gnu++11 or -std=c++11 to the compile line for
these files, then they compile without warning or error.  The
whole gdal build and install then completes.

-std=gnu++03 and -std=c++03 do not resolve the error, so I wonder
whether we have accidentally added a dependancy for C++13 in 2.1.4 ?

Thanks,

-- 
Andrew C Aitchison			Cambridge, UK

From even.rouault at spatialys.com  Sun Jul  2 14:09:14 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 02 Jul 2017 23:09:14 +0200
Subject: [gdal-dev] Is 2.1.4 supposed to require C++11 ?
In-Reply-To: <alpine.LRH.2.20.1707021208510.31266@warden.aitchison.me.uk>
References: <11024948.OQmd95KDIC@even-i700>
 <alpine.LRH.2.20.1707021208510.31266@warden.aitchison.me.uk>
Message-ID: <10560772.p9p1IEqufF@even-i700>

> However, if I add -std=gnu++11 or -std=c++11 to the compile line for
> these files, then they compile without warning or error.  The
> whole gdal build and install then completes.
> 
> -std=gnu++03 and -std=c++03 do not resolve the error, so I wonder
> whether we have accidentally added a dependancy for C++13 in 2.1.4 ?

This is more subtle than that. I guess this is due to a security update of Jasper itself that 
brings use of SIZE_MAX in Jasper include files. However in RHEL 6, SIZE_MAX from stdint.h is 
only defined if __cplusplus is not defined. But I guess that in C++11 mode SIZE_MAX is 
defined as mandated by C++11...

Anyway this is now fixed per
https://trac.osgeo.org/gdal/ticket/6951

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170702/41057e43/attachment.html>

From even.rouault at spatialys.com  Sun Jul  2 14:19:37 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 02 Jul 2017 23:19:37 +0200
Subject: [gdal-dev] Is 2.1.4 supposed to require C++11 ?
In-Reply-To: <10560772.p9p1IEqufF@even-i700>
References: <11024948.OQmd95KDIC@even-i700>
 <alpine.LRH.2.20.1707021208510.31266@warden.aitchison.me.uk>
 <10560772.p9p1IEqufF@even-i700>
Message-ID: <5837028.PoiLCZ5MoS@even-i700>

On dimanche 2 juillet 2017 23:09:14 CEST Even Rouault wrote:
> > However, if I add -std=gnu++11 or -std=c++11 to the compile line for
> > these files, then they compile without warning or error.  The
> > whole gdal build and install then completes.
> > 
> > -std=gnu++03 and -std=c++03 do not resolve the error, so I wonder
> > whether we have accidentally added a dependancy for C++13 in 2.1.4 ?
> 
> This is more subtle than that. I guess this is due to a security update of
> Jasper itself that brings use of SIZE_MAX in Jasper include files. However
> in RHEL 6, SIZE_MAX from stdint.h is only defined if __cplusplus is not
> defined. But I guess that in C++11 mode SIZE_MAX is defined as mandated by
> C++11...
> 
> Anyway this is now fixed per
> https://trac.osgeo.org/gdal/ticket/6951

Forgot to mention that our Travis-CI configurations are all Ubuntu-based. Someone wanting 
primer RHEL/CentOS/Scientific Linux support could contribute a new configuration using a 
CentOS-based Docker image in a Travis-CI Ubuntu Trusty host.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170702/f80f4035/attachment.html>

From even.rouault at spatialys.com  Tue Jul  4 15:05:51 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 05 Jul 2017 00:05:51 +0200
Subject: [gdal-dev] /vsis3/ credential related improvements
Message-ID: <6550044.s0hUha4fhz@even-i700>

Hi,

for those using /vsis3/ I've just committed a few improvements regarding how credentials are 
handled.

Best is to quote the updated documentation:
""""
The AWS_SECRET_ACCESS_KEY and AWS_ACCESS_KEY_ID configuration options *must*
be set.  The AWS_SESSION_TOKEN configuration option must be set when
temporary credentials are used.  The AWS_REGION (or AWS_DEFAULT_REGION
starting with GDAL 2.3) configuration option may be
 set to one of the supported regions and defaults to 'us-east-1'.
 
Starting with GDAL 2.3, alternate ways of providing credentials similar to
what the "aws" command line utility or Boto3 support can be used. If the
above mentionned environment variables are not provided, the
~/.aws/credentials or %UserProfile%/.aws/credentials file will be read. The profile may be 
specified with the AWS_PROFILE environment variable (the default profile is "default")
The ~/.aws/config or %UserProfile%/.aws/config file may also be used to
retrieve credentials and the AWS region.
If none of the above method succeeds, instance profile credentials will be
retrieved when GDAL is used on EC2 instances.
"""

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170705/b256294c/attachment.html>

From bontepaarden at gmail.com  Tue Jul  4 23:42:02 2017
From: bontepaarden at gmail.com (Paul Meems)
Date: Wed, 5 Jul 2017 08:42:02 +0200
Subject: [gdal-dev] VRT file with cutline behaves strangely with tiff
	with overviews
In-Reply-To: <3660161.kLtnm3nRvs@even-i700>
References: <CAHNf2YQ_P78mricf+jUgDcUG2OY-2NSa_MdMs9RNHZ+Unz7fjg@mail.gmail.com>
 <3660161.kLtnm3nRvs@even-i700>
Message-ID: <CAHNf2YT92fqiu0LPitDe_Xi1zaoUa9Lg3bVHAimvBUReaaAikg@mail.gmail.com>

I've created a ticket: https://trac.osgeo.org/gdal/ticket/6954 and added
some sample data to reproduce.

Thanks,

Paul

2017-07-01 20:32 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

>
>
> > Is this a known and expected behavior of the VRT-format?
>
> > I really want to keep using the vrt-file since it is only 700kb instead
> of
>
> > the tiff-file which is 63MB and I will be doing more calculations later
> on,
>
> > which also result in new files.
>
> >
>
> > If needed I can send my input files.
>
>
>
> Please open a ticket about that, with the links to the files to reproduce.
>
>
>
> Even
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170705/52bb7f47/attachment.html>

From Liam.Candy at angloamerican.com  Wed Jul  5 02:13:14 2017
From: Liam.Candy at angloamerican.com (Candy, Liam)
Date: Wed, 5 Jul 2017 09:13:14 +0000
Subject: [gdal-dev] GDAL Linux build / linking issue with ECW support
Message-ID: <E03E21B6-562F-4C58-8618-A5A1F8012335@angloamerican.com>

Hi,

I’m trying to build GDAL 2.2.1 with ECW (5.3) support. I’m having the linking issues that are documented on the wiki (https://trac.osgeo.org/gdal/wiki/ECW). I have tried the work around with the CXXFLAGS="-D_GLIBCXX_USE_CXX11_ABI=0" but without success, the issue persists (I’ve made sure the configure script is updating the CXXFLAGS in the make file - it is). Has anyone had a similar issue – and ideally a resolution ?

For reference, I’m on Ubuntu 17.04, gcc 6.3, GDAL 2.2.1, ERDAS ECW 5.3.0.

Best regards,
Liam.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170705/a0b1b126/attachment.html>

From even.rouault at spatialys.com  Wed Jul  5 02:53:45 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 05 Jul 2017 11:53:45 +0200
Subject: [gdal-dev] GDAL Linux build / linking issue with ECW support
In-Reply-To: <E03E21B6-562F-4C58-8618-A5A1F8012335@angloamerican.com>
References: <E03E21B6-562F-4C58-8618-A5A1F8012335@angloamerican.com>
Message-ID: <38445561.zThSYaqljz@even-i700>

On mercredi 5 juillet 2017 09:13:14 CEST Candy, Liam wrote:
> Hi,
> 
> I’m trying to build GDAL 2.2.1 with ECW (5.3) support. I’m having the
> linking issues that are documented on the wiki
> (https://trac.osgeo.org/gdal/wiki/ECW). I have tried the work around with
> the CXXFLAGS="-D_GLIBCXX_USE_CXX11_ABI=0" but without success, the issue
> persists (I’ve made sure the configure script is updating the CXXFLAGS in
> the make file - it is). Has anyone had a similar issue – and ideally a
> resolution ?
 
> For reference, I’m on Ubuntu 17.04, gcc 6.3, GDAL 2.2.1, ERDAS ECW 5.3.0.
> 

Did you make sure to "make clean" between each of your attempts ?

On Ubuntu 16.04 with GCC 5.4, the following works (I have to explictly disable a few C++ libs from the system, since they have been built the CXX11 ABI)
CXXFLAGS="-D_GLIBCXX_USE_CXX11_ABI=0" ./configure  --with-ecw=$HOME/hexagon/ERDAS-ECW_JPEG_2000_SDK-5.3.0 --without-libkml --without-armadillo  --without-cryptopp

I've also tried with GCC 7.1, so I guess that should also work with gcc 6.3

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170705/cc97adf1/attachment-0001.html>

From philippe.ghesquiere at airbus.com  Thu Jul  6 01:22:41 2017
From: philippe.ghesquiere at airbus.com (Bugbuster)
Date: Thu, 6 Jul 2017 01:22:41 -0700 (MST)
Subject: [gdal-dev] Use Kakadu "apps library" (#4116)
Message-ID: <1499329361908-5326857.post@n6.nabble.com>

Dear all,

A few days ago, I have updated a rather old ticket ( #4116
<https://trac.osgeo.org/gdal/ticket/4116>  , 6 years old).
I was just wondering if this update had been noticed, since I didn't want to
open a new ticket.

Thanks 
Philippe



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Use-Kakadu-apps-library-4116-tp5326857.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Thu Jul  6 01:37:32 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Jul 2017 10:37:32 +0200
Subject: [gdal-dev] Use Kakadu "apps library" (#4116)
In-Reply-To: <1499329361908-5326857.post@n6.nabble.com>
References: <1499329361908-5326857.post@n6.nabble.com>
Message-ID: <7352952.afpq0cLoti@even-i700>

Hi Philippe,

> 
> A few days ago, I have updated a rather old ticket ( #4116
> <https://trac.osgeo.org/gdal/ticket/4116>  , 6 years old).
> I was just wondering if this update had been noticed, since I didn't want to
> open a new ticket.

Not sure I noticed it, but I see
https://trac.osgeo.org/gdal/ticket/6940 and the attached patch. It looks like #6940
is the cumulative patch for #4116 + building as a plugin, right ?

It seems your patch might break people using older Kakadu versions ?
Do you know what is the minimum one for which your patch can work ?
At least for documentation purposes (in which case, could you update the
nmake.opt line "# Uncomment and adjust paths if you have Kakadu 6.0 or newer
with the appropriate version)

Are people using Kakadu on Windows OK with that change ? If so, I'll (blindly, because of the
Windows + Kakadu combo) apply the patch of #6940 in trunk.

Ah, actually one thing to fix in
https://trac.osgeo.org/gdal/attachment/ticket/6940/gdal_kakadu_as_a_dynamic_plugin.patch
is to comment with # the KAK related lines. Otherwise this will break compilation for
default builds not using Kakadu. Would you mind updating it ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170706/5f303ca7/attachment.html>

From philippe.ghesquiere at airbus.com  Thu Jul  6 02:02:33 2017
From: philippe.ghesquiere at airbus.com (Bugbuster)
Date: Thu, 6 Jul 2017 02:02:33 -0700 (MST)
Subject: [gdal-dev] Use Kakadu "apps library" (#4116)
In-Reply-To: <7352952.afpq0cLoti@even-i700>
References: <1499329361908-5326857.post@n6.nabble.com>
 <7352952.afpq0cLoti@even-i700>
Message-ID: <1499331753304-5326865.post@n6.nabble.com>

Dear Even,

Thanks so much for your express answer.

I believe one may take #4116 and #6940 independently. But it might indeed be
better to get both patches.

I am not 100% sure which Kakadu version is OK to apply  #4116. At least, it
works for *Kakadu V7.9.1*.
Thus, I will update the patch to mention this version for the dynamic plugin
option.
Philippe



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Use-Kakadu-apps-library-4116-tp5326857p5326865.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From philippe.ghesquiere at airbus.com  Thu Jul  6 02:05:37 2017
From: philippe.ghesquiere at airbus.com (Bugbuster)
Date: Thu, 6 Jul 2017 02:05:37 -0700 (MST)
Subject: [gdal-dev] Use Kakadu "apps library" (#4116)
In-Reply-To: <1499331753304-5326865.post@n6.nabble.com>
References: <1499329361908-5326857.post@n6.nabble.com>
 <7352952.afpq0cLoti@even-i700> <1499331753304-5326865.post@n6.nabble.com>
Message-ID: <1499331937502-5326867.post@n6.nabble.com>

Sorry, I forgot tomention that I work under Windows.
So, yes the patch also applies to Windows environment.

Philippe



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Use-Kakadu-apps-library-4116-tp5326857p5326867.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Thu Jul  6 13:07:40 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Jul 2017 22:07:40 +0200
Subject: [gdal-dev] Use Kakadu "apps library" (#4116)
In-Reply-To: <7352952.afpq0cLoti@even-i700>
References: <1499329361908-5326857.post@n6.nabble.com>
 <7352952.afpq0cLoti@even-i700>
Message-ID: <2638393.Btz2kedf0q@even-i700>

On jeudi 6 juillet 2017 10:37:32 CEST Even Rouault wrote:
> Hi Philippe,
> 
> > A few days ago, I have updated a rather old ticket ( #4116
> > <https://trac.osgeo.org/gdal/ticket/4116>  , 6 years old).
> > I was just wondering if this update had been noticed, since I didn't want
> > to open a new ticket.
> 
> Not sure I noticed it, but I see
> https://trac.osgeo.org/gdal/ticket/6940 and the attached patch. It looks
> like #6940 is the cumulative patch for #4116 + building as a plugin, right
> ?
> 
> It seems your patch might break people using older Kakadu versions ?
> Do you know what is the minimum one for which your patch can work ?
> At least for documentation purposes (in which case, could you update the
> nmake.opt line "# Uncomment and adjust paths if you have Kakadu 6.0 or newer
> with the appropriate version)
> 
> Are people using Kakadu on Windows OK with that change ? If so, I'll
> (blindly, because of the Windows + Kakadu combo) apply the patch of #6940
> in trunk.
> 
> Ah, actually one thing to fix in
> https://trac.osgeo.org/gdal/attachment/ticket/6940/gdal_kakadu_as_a_dynamic_
> plugin.patch is to comment with # the KAK related lines. Otherwise this will
> break compilation for default builds not using Kakadu. Would you mind
> updating it ?

I've committed the updated version of the patch (which keeps a way of building the driver 
with the old way for older Kakadu)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170706/e4fd80c3/attachment.html>

From gane.prog at gmail.com  Mon Jul 10 09:11:16 2017
From: gane.prog at gmail.com (Gane R)
Date: Mon, 10 Jul 2017 21:41:16 +0530
Subject: [gdal-dev] Build GDAL with PDFium
Message-ID: <CALMrLdCRkPhKfeEJ6-DY31hxqUWcvatZR7Aixks0ydSNSf+Seg@mail.gmail.com>

Hi all,

I tried to Build GDAL with PDFium on linux, I succeeded it.
 I faced the following issue
F .text._ZN13CFDF_Document12CreateNewDocEv       00000000000000ac .hidden
CFDF_Document::CreateNewDoc() *got that fixed by changing standalone.gypi
removing -fvisibility=hidden*.

As an next step *I tried to Build GDAL with PDFium for android(cross
compile)* I succeed it.

But when I try to* load the GDAL's shared library libgdal.so.20 which is
dependent for my shared lib libread.so. *

I see unsatisfied link error unable to load symbols in libgdal.so.20
U _ZN13CFDF_Document12CreateNewDocEv
U _ZN13CPDF_Document15AddStandardFontEPKcP17CPDF_FontEncoding

But I see
00000000 T _ZN13CPDF_Document15AddStandardFontEPKcP17CPDF_FontEncoding
00000000 T _ZN13CPDF_Document12CreateNewDocEv
in
pdfium/out/Release/obj.target/fpdfapi/core/src/fpdfapi/fpdf_edit/fpdf_edit_doc.o
(also in libfpdfapi.a)

any suggestions on this issue or any one has worked on this will of great
help.

Gane R
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170710/d9fec727/attachment.html>

From emmanuel.sambale at gmail.com  Tue Jul 11 22:03:04 2017
From: emmanuel.sambale at gmail.com (maning sambale)
Date: Wed, 12 Jul 2017 10:33:04 +0530
Subject: [gdal-dev] Processing line-delimited GeoJSON with ogr2ogr
Message-ID: <CAPzumuEL__eRswCYjjadhNbsc67dycnKnJL6iocFaih6RkKLkQ@mail.gmail.com>

Hi,

I'm trying to process line-delimited geojson with ogr2ogr.  Using gdal
2.1, I don't think it can do it.
So I had to convert it to a feature collection before processing with
ogr2ogr.  Any other ways to process line-delimited data?

-- 
cheers,
maning
------------------------------------------------------
"Freedom is still the most radical idea of all" -N.Branden
https://epsg4253.wordpress.com/
http://twitter.com/maningsambale
------------------------------------------------------

From sean at mapbox.com  Wed Jul 12 00:05:49 2017
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 12 Jul 2017 09:05:49 +0200
Subject: [gdal-dev] Processing line-delimited GeoJSON with ogr2ogr
In-Reply-To: <CAPzumuEL__eRswCYjjadhNbsc67dycnKnJL6iocFaih6RkKLkQ@mail.gmail.com>
References: <CAPzumuEL__eRswCYjjadhNbsc67dycnKnJL6iocFaih6RkKLkQ@mail.gmail.com>
Message-ID: <CADPhZXw-EJFsFzZD9hCi-NfDaB8UT=vnZJQNygBHQHQre=Jtzw@mail.gmail.com>

Hi Maning,

There was a 2016 summer of code proposal to implement GeoJSON text
sequences but it didn't pan out. The Fiona package (for Python) is the only
thing in the GDAL ecosystem that does this right now, as far as I know.

See https://toblerity.org/fiona/cli.html#load and disregard the outdated
bit about --x-json-seq. The fio-load command reads GeoJSON sequences (with
or without the standard RS delimiter) and loads them into an OGR layer.

Hope this helps,

On Wed, Jul 12, 2017 at 7:03 AM, maning sambale <emmanuel.sambale at gmail.com>
wrote:

> Hi,
>
> I'm trying to process line-delimited geojson with ogr2ogr.  Using gdal
> 2.1, I don't think it can do it.
> So I had to convert it to a feature collection before processing with
> ogr2ogr.  Any other ways to process line-delimited data?
>
> --
> cheers,
> maning
> ------------------------------------------------------
> "Freedom is still the most radical idea of all" -N.Branden
> https://epsg4253.wordpress.com/
> http://twitter.com/maningsambale
> ------------------------------------------------------
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170712/cdd1243c/attachment.html>

From johan.vandewauw at gmail.com  Wed Jul 12 07:18:18 2017
From: johan.vandewauw at gmail.com (Johan Van de Wauw)
Date: Wed, 12 Jul 2017 16:18:18 +0200
Subject: [gdal-dev] New saga grid zipped format
Message-ID: <CAJOp35mQJN2oBDwnQDUt8zH7zU53Zd3FK=oMUz=QnCa_Zi9Bxg@mail.gmail.com>

Hi all,

Saga GIS introduced a new file format .sg-grd-z [1] which actually is
a zipfile containing the normal files encountered in saga gis (*.sgrd
; *.sdat; and optionally *.mgrd ).

In fact, if you rename the .sg-grd-z file you can already open it using vsizip
eg
cp Landgebruik_def_watem.sg-grd-z Landgebruik_def_watem.zip
gdalinfo /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat
Driver: SAGA/SAGA GIS Binary Grid (.sdat)
Files: /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat
       /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat.aux.xml
       /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sgrd
       /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.prj
Size is 49400, 24000
Coordinate System is `'
Origin = (17000.000000000000000,249995.000000000000000)
Pixel Size = (5.000000000000000,-5.000000000000000)
Corner Coordinates:
Upper Left  (   17000.000,  249995.000)
Lower Left  (   17000.000,  129995.000)
Upper Right (  264000.000,  249995.000)
Lower Right (  264000.000,  129995.000)
Center      (  140500.000,  189995.000)
Band 1 Block=49400x1 Type=Int16, ColorInterp=Undefined
  NoData Value=-32767


I'm willing to get my hands dirty to add support for this format in
gdal (either developing/testing/...), but I wonder if there are any
similar formats where I can find inspiration.

Kind Regards,
Johan

[1] https://sourceforge.net/p/saga-gis/mailman/message/35918456/

From bishop.dev at gmail.com  Wed Jul 12 07:24:44 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 12 Jul 2017 17:24:44 +0300
Subject: [gdal-dev] New saga grid zipped format
In-Reply-To: <CAJOp35mQJN2oBDwnQDUt8zH7zU53Zd3FK=oMUz=QnCa_Zi9Bxg@mail.gmail.com>
References: <CAJOp35mQJN2oBDwnQDUt8zH7zU53Zd3FK=oMUz=QnCa_Zi9Bxg@mail.gmail.com>
Message-ID: <e7be0f61-0c1e-dbd5-4831-0a8354c74634@gmail.com>

Hi Johan,

Just use CPL_VSIL_ZIP_ALLOWED_EXTENSIONS to add new extension and enjoy.

CPLSetConfigOption(CPL_VSIL_ZIP_ALLOWED_EXTENSIONS, "sg-grd-z");

Or in ogrinfo use option -config CPL_VSIL_ZIP_ALLOWED_EXTENSIONS sg-grd-z

Best regards,
     Dmitry

12.07.17 17:18, Johan Van de Wauw пишет:
> Hi all,
>
> Saga GIS introduced a new file format .sg-grd-z [1] which actually is
> a zipfile containing the normal files encountered in saga gis (*.sgrd
> ; *.sdat; and optionally *.mgrd ).
>
> In fact, if you rename the .sg-grd-z file you can already open it using vsizip
> eg
> cp Landgebruik_def_watem.sg-grd-z Landgebruik_def_watem.zip
> gdalinfo /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat
> Driver: SAGA/SAGA GIS Binary Grid (.sdat)
> Files: /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat
>         /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat.aux.xml
>         /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sgrd
>         /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.prj
> Size is 49400, 24000
> Coordinate System is `'
> Origin = (17000.000000000000000,249995.000000000000000)
> Pixel Size = (5.000000000000000,-5.000000000000000)
> Corner Coordinates:
> Upper Left  (   17000.000,  249995.000)
> Lower Left  (   17000.000,  129995.000)
> Upper Right (  264000.000,  249995.000)
> Lower Right (  264000.000,  129995.000)
> Center      (  140500.000,  189995.000)
> Band 1 Block=49400x1 Type=Int16, ColorInterp=Undefined
>    NoData Value=-32767
>
>
> I'm willing to get my hands dirty to add support for this format in
> gdal (either developing/testing/...), but I wonder if there are any
> similar formats where I can find inspiration.
>
> Kind Regards,
> Johan
>
> [1] https://sourceforge.net/p/saga-gis/mailman/message/35918456/
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From guillaume.pasero at c-s.fr  Wed Jul 12 07:58:38 2017
From: guillaume.pasero at c-s.fr (Guillaume Pasero)
Date: Wed, 12 Jul 2017 16:58:38 +0200
Subject: [gdal-dev] ENVI Rotation Bug Fix
In-Reply-To: <CACmBxyvPHvjVRtC7S4-_dKQYDW9gAeg5z8i6OGirTYXevqkE8w@mail.gmail.com>
References: <a618291a-3dfc-d22f-2348-10d098058cfd@oregonstate.edu>
 <CAJjdW1yksCJoCKT3JZZYTL2U8-scP8ZtQsFAmRcwjqRAPsWSyA@mail.gmail.com>
 <CACmBxyuHm1AmAO5E9E4iVgYbP-cRfBJvxXf6aSjGKwYhkgr8cw@mail.gmail.com>
 <2124872.PYPb0Hzceu@even-i700>
 <CACmBxyvPHvjVRtC7S4-_dKQYDW9gAeg5z8i6OGirTYXevqkE8w@mail.gmail.com>
Message-ID: <56e58b2e-bed8-0169-d241-bf2c86797b28@c-s.fr>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170712/ddd2da8a/attachment.html>

From even.rouault at spatialys.com  Wed Jul 12 10:06:38 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 12 Jul 2017 19:06:38 +0200
Subject: [gdal-dev] New saga grid zipped format
In-Reply-To: <e7be0f61-0c1e-dbd5-4831-0a8354c74634@gmail.com>
References: <CAJOp35mQJN2oBDwnQDUt8zH7zU53Zd3FK=oMUz=QnCa_Zi9Bxg@mail.gmail.com>
 <e7be0f61-0c1e-dbd5-4831-0a8354c74634@gmail.com>
Message-ID: <8476729.AYdD2MXd1Q@even-i700>

On mercredi 12 juillet 2017 17:24:44 CEST Dmitry Baryshnikov wrote:
> Hi Johan,
> 
> Just use CPL_VSIL_ZIP_ALLOWED_EXTENSIONS to add new extension and enjoy.
> 
> CPLSetConfigOption(CPL_VSIL_ZIP_ALLOWED_EXTENSIONS, "sg-grd-z");
> 
> Or in ogrinfo use option -config CPL_VSIL_ZIP_ALLOWED_EXTENSIONS sg-grd-z
> 

Johan,

since GDAL 2.2, /vsizip/ can handle any zip file with non standard extension with the 
following syntax

/vsizip/{/path/to/the/archive}/path/inside/the/archive

(the { } pair must be used to surround the zip filename)

So you'd basically just need to add a few lines to the existing SAGA driver to recognize files 
with sg-grd-z extension, and in that case (and when non explicitly prefixed by /vsizip/ add the 
/vsizip/ prefix , and the .sdat file (you can use VSIReadDir() on the /vsizip/ file to get the 
contents)

You can have a look at the SRTMHGT driver that has some similarity, since it allows to open 
.hgt.zip files directly

Even


> Best regards,
>      Dmitry
> 
> 12.07.17 17:18, Johan Van de Wauw пишет:
> > Hi all,
> > 
> > Saga GIS introduced a new file format .sg-grd-z [1] which actually is
> > a zipfile containing the normal files encountered in saga gis (*.sgrd
> > ; *.sdat; and optionally *.mgrd ).
> > 
> > In fact, if you rename the .sg-grd-z file you can already open it using
> > vsizip eg
> > cp Landgebruik_def_watem.sg-grd-z Landgebruik_def_watem.zip
> > gdalinfo /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat
> > Driver: SAGA/SAGA GIS Binary Grid (.sdat)
> > Files: /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat
> > 
> >         /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sdat.aux.x
> >         ml
> >         /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.sgrd
> >         /vsizip/Landgebruik_def_watem.zip/Landgebruik_def_watem.prj
> > 
> > Size is 49400, 24000
> > Coordinate System is `'
> > Origin = (17000.000000000000000,249995.000000000000000)
> > Pixel Size = (5.000000000000000,-5.000000000000000)
> > Corner Coordinates:
> > Upper Left  (   17000.000,  249995.000)
> > Lower Left  (   17000.000,  129995.000)
> > Upper Right (  264000.000,  249995.000)
> > Lower Right (  264000.000,  129995.000)
> > Center      (  140500.000,  189995.000)
> > Band 1 Block=49400x1 Type=Int16, ColorInterp=Undefined
> > 
> >    NoData Value=-32767
> > 
> > I'm willing to get my hands dirty to add support for this format in
> > gdal (either developing/testing/...), but I wonder if there are any
> > similar formats where I can find inspiration.
> > 
> > Kind Regards,
> > Johan
> > 
> > [1] https://sourceforge.net/p/saga-gis/mailman/message/35918456/
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170712/a01c193c/attachment-0001.html>

From Tim.Harris at digitalglobe.com  Wed Jul 12 14:31:19 2017
From: Tim.Harris at digitalglobe.com (Tim Harris)
Date: Wed, 12 Jul 2017 21:31:19 +0000
Subject: [gdal-dev] OSM driver won't generate feature for relation
Message-ID: <22b96587c79348aca4c667db78e5ff5c@PW00INFMAI022.ent.ad.dg.local>

I'm trying to extract water vectors from OSM using my own local Overpass API server and OGR. It works for the most part, but there are some water features missing in my output. One particularly large omission is Lake Huron.

I put an example OSM file here: https://s3.amazonaws.com/gdal-osm-data/lake_huron.osm

I can see a <relation> in the file that corresponds to Lake Huron, it's the last element near the end of the file, <relation id="1205151">. It's got 12797 <member> elements that reference the 12797 <way> elements in the file (I think).

I've been looking at http://www.gdal.org/drv_osm.html and saw a few tips, like setting OGR_INTERLEAVED_READING to YES and using the example do/while loop. Here's my Python translation:

import gdal
import ogr
import geojson
gdal.SetConfigOption("OGR_INTERLEAVED_READING", "YES")
ds = ogr.Open("test_water.osm")
feats = []
nonempty = True
while nonempty:
    nonempty = False
    for i in range(0, ds.GetLayerCount()):
        layer = ds.GetLayerByIndex(i)
        feat = layer.GetNextFeature()
        while feat is not None:
            feats.append(feat)
            nonempty = True
            feat = layer.GetNextFeature()
with open("output.geojson", "w") as fobj:
    fc = geojson.FeatureCollection(features=[geojson.loads(feat.ExportToJson()) for feat in feats])
    geojson.dump(fc, fobj)

When I load output.geojson into QGIS and look at the line strings and polygons, I don't see a multipolygon for Lake Huron. I do see the outline as a bunch of line strings, but no polygon. I get a similar result if I load the OSM file into QGIS directly... no lake polygon. Just a few random smaller polygons around the perimiter. It seems like OGR just isn't producing a feature for that last relation.

I've tried messing around with osmconf.ini, including using the one from the QGIS plugin "QuickOSM". My most recent version of that file is here: https://s3.amazonaws.com/gdal-osm-data/osmconf.ini

Is there some setting I'm missing in osmconf.ini that would result in a multipolygon for the lake? The relation is there and it has a "type" tag set to "multipolygon".

This electronic communication and any attachments may contain confidential and proprietary information of DigitalGlobe, Inc. If you are not the intended recipient, or an agent or employee responsible for delivering this communication to the intended recipient, or if you have received this communication in error, please do not print, copy, retransmit, disseminate or otherwise use the information. Please indicate to the sender that you have received this communication in error, and delete the copy you received.

DigitalGlobe reserves the right to monitor any electronic communication sent or received by its employees, agents or representatives.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170712/270b7128/attachment.html>

From Tim.Harris at digitalglobe.com  Wed Jul 12 14:50:56 2017
From: Tim.Harris at digitalglobe.com (Tim Harris)
Date: Wed, 12 Jul 2017 21:50:56 +0000
Subject: [gdal-dev] OSM driver won't generate feature for relation
Message-ID: <4c1d85e0455c4f8db6cef99263416cf8@PW00INFMAI022.ent.ad.dg.local>

I also forgot to mention that I see 1000 instances of this error... I'm not sure if it's related.

ERROR 1: String buffer too small

I tried setting CPL_DEBUG to "OSM" and didn't see obvious errors. The output looks like this:

OSM: OGR_INTERLEAVED_READING = 1
OSM: For layer points, new max size is 128
OSM: Ways processed : 10000
ERROR 1: String buffer too small
ERROR 1: String buffer too small
...
ERROR 1: String buffer too small
More than 1000 errors or warnings have been reported. No more will be reported from now.
OSM: For layer lines, new max size is 128
OSM: For layer lines, new max size is 320
OSM: For layer lines, new max size is 608
OSM: For layer lines, new max size is 1040
OSM: For layer lines, new max size is 1688
OSM: For layer lines, new max size is 2660
OSM: For layer lines, new max size is 4118
OSM: For layer lines, new max size is 6305
OSM: For layer lines, new max size is 9585
OSM: For layer lines, new max size is 14505
OSM: For layer other_relations, new max size is 128
OSM: Remaining standalone polygons
OSM: For layer multipolygons, new max size is 128
OSM: For layer multipolygons, new max size is 320
OSM: For layer multipolygons, new max size is 608
OSM: Switching to 'lines' as they are no more feature in 'points'
OSM: Switching to 'multipolygons' as they are no more feature in 'lines'
OSM: Switching to 'other_relations' as they are no more feature in 'multipolygons'


From: Tim Harris
Sent: Wednesday, July 12, 2017 3:31 PM
To: 'gdal-dev at lists.osgeo.org'
Subject: OSM driver won't generate feature for relation

I'm trying to extract water vectors from OSM using my own local Overpass API server and OGR. It works for the most part, but there are some water features missing in my output. One particularly large omission is Lake Huron.

I put an example OSM file here: https://s3.amazonaws.com/gdal-osm-data/lake_huron.osm

I can see a <relation> in the file that corresponds to Lake Huron, it's the last element near the end of the file, <relation id="1205151">. It's got 12797 <member> elements that reference the 12797 <way> elements in the file (I think).

I've been looking at http://www.gdal.org/drv_osm.html and saw a few tips, like setting OGR_INTERLEAVED_READING to YES and using the example do/while loop. Here's my Python translation:

import gdal
import ogr
import geojson
gdal.SetConfigOption("OGR_INTERLEAVED_READING", "YES")
ds = ogr.Open("test_water.osm")
feats = []
nonempty = True
while nonempty:
    nonempty = False
    for i in range(0, ds.GetLayerCount()):
        layer = ds.GetLayerByIndex(i)
        feat = layer.GetNextFeature()
        while feat is not None:
            feats.append(feat)
            nonempty = True
            feat = layer.GetNextFeature()
with open("output.geojson", "w") as fobj:
    fc = geojson.FeatureCollection(features=[geojson.loads(feat.ExportToJson()) for feat in feats])
    geojson.dump(fc, fobj)

When I load output.geojson into QGIS and look at the line strings and polygons, I don't see a multipolygon for Lake Huron. I do see the outline as a bunch of line strings, but no polygon. I get a similar result if I load the OSM file into QGIS directly... no lake polygon. Just a few random smaller polygons around the perimiter. It seems like OGR just isn't producing a feature for that last relation.

I've tried messing around with osmconf.ini, including using the one from the QGIS plugin "QuickOSM". My most recent version of that file is here: https://s3.amazonaws.com/gdal-osm-data/osmconf.ini

Is there some setting I'm missing in osmconf.ini that would result in a multipolygon for the lake? The relation is there and it has a "type" tag set to "multipolygon".
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170712/61e4f55a/attachment-0001.html>

From even.rouault at spatialys.com  Thu Jul 13 03:20:37 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 13 Jul 2017 12:20:37 +0200
Subject: [gdal-dev] OSM driver won't generate feature for relation
In-Reply-To: <4c1d85e0455c4f8db6cef99263416cf8@PW00INFMAI022.ent.ad.dg.local>
References: <4c1d85e0455c4f8db6cef99263416cf8@PW00INFMAI022.ent.ad.dg.local>
Message-ID: <3082797.VCrl0oBxxk@even-i700>

On mercredi 12 juillet 2017 21:50:56 CEST Tim Harris wrote:
> I also forgot to mention that I see 1000 instances of this error... I'm not
> sure if it's related.
> 
> ERROR 1: String buffer too small

Tim,

Yes, that was the issue. Fixed per https://trac.osgeo.org/gdal/ticket/6964

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170713/e886b788/attachment.html>

From jmckenna at gatewaygeomatics.com  Thu Jul 13 10:57:09 2017
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 13 Jul 2017 14:57:09 -0300
Subject: [gdal-dev] MS4W version 3.2.2 available
In-Reply-To: <742b461d-34d0-8eb1-7be9-e92bc2230196@gatewaygeomatics.com>
References: <742b461d-34d0-8eb1-7be9-e92bc2230196@gatewaygeomatics.com>
Message-ID: <d69c4987-7ba7-73e0-47a5-3a65ce1aa490@gatewaygeomatics.com>

Hi all, see below for news of today's MS4W release, containing GDAL 
2.2.1 for Windows users, and many upgrades to its libraries.  Thanks to 
Even and the whole GDAL team.  -jeff




-------- Forwarded Message --------

Hello everyone,

MS4W version 3.2.2 is now available at http://www.ms4w.com  This 
contains security releases of Apache, PHP, and upgrades to the MapServer 
7.0.6 & GDAL 2.2.1 releases.  Several changes were also made to 
libraries for performance improvements (such as libjpeg-turbo and 
SQLite).  Several packages were upgraded for the installer including 
GeoMOOSE 3.0.0-beta (new backend engine, give it a try!), Mapbender 
3.0.6.1 (now super fast), OpenLayers 4.2.0 (when you goto the OpenLayers 
examples page and search for "mapserver" you can find a local MS4W 
example).  This a substantial MS4W release.  Here is the full list of 
changes:

    - upgraded MapServer and MapScript (CSharp, Java, Python, PHP) to 7.0.6
    - upgraded GDAL to 2.2.1 (trac ticket 111)
    - upgraded PHP to 5.6.31 (trac ticket 122)
    - upgraded Apache to 2.4.27 (trac ticket 119)
    - enabled OPcache PHP extension for Mapbender performance (trac 
ticket 63)
    - built MapServer with support for Z geometry values (trac ticket 120)
    - updated cURL certificates bundle
    - rebuilt mod_fcgid
    - rebuilt Apache H264 Streaming Module
    - rebuilt MapCache
    - rebuilt TinyOWS
    - changed JPEG library to libjpeg-turbo (trac ticket 121)
    - upgraded libPNG support to 1.6.29
    - upgraded libTIFF support to 4.0.8 (trac ticket 114)
    - upgraded GeoTIFF support to SVN-trunk-20170623
    - rebuilt HDF4 support
    - upgraded HDF5 support to 1.10.1
    - upgraded PostgreSQL support to 9.6.3
    - upgraded MySQL support to 5.7.18
    - upgraded SQLite support to 3.19.3 (trac ticket 107)
    - rebuilt SpatiaLite support
    - upgraded OpenSSL support to 1.0.2l (trac ticket 116)
    - upgraded cURL support to 7.54.1
    - added curl.exe utility into /tools
    - rebuilt NetCDF support
    - upgraded Freetype support to 2.8
    - upgraded Cairo support to 1.14.10
    - rebuilt Poppler support
    - upgraded to Esri File Geodatabase 1.5 API support (trac ticket 109)
    - upgraded to Oracle SDK 12.2.0.1.0
    - upgraded PCRE support to 8.40
    - upgraded HarfBuzz support to 1.4.6
    - rebuilt libSVG support
    - rebuilt libSVG-Cairo support
    - upgraded Shapelib support to 1.4.0 (trac ticket 72)
    - rebuilt shp2tile utility
    - renamed Apache access and error log files

Please note that (if you are using the .zip) your server must have the 
C++ Redistributable installed on it beforehand: execute the local file 
/ms4w/tmp/vcredist_x86.exe

Please don't be afraid to also provide feedback and requests through the 
MS4W tracker (so the comments and requests are not lost or forgotten): 
http://www.ms4w.com/trac/

Thank you all for sharing your spatial information with MS4W.

And happy MapServing!


-jeff

-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/




From wxprofessor at gmail.com  Fri Jul 14 06:56:18 2017
From: wxprofessor at gmail.com (Patrick L. Francis)
Date: Fri, 14 Jul 2017 13:56:18 +0000
Subject: [gdal-dev] stere
Message-ID: <em04dc7225-400a-471d-ba7f-95b7b30bd4aa@xps>


Hello! I have been banging my head against the wall trying to use the 
polar stereographic projection, and am hoping one of you that is smarter 
than me, which would likely be all of you can help!  lol

this projection:
http://www.nco.ncep.noaa.gov/pmb/docs/on388/tableb.html#GRID202

when applied via gdal_translate and converted to mercator, results in.. 
how to describe? well here is a screenshot if you are interested
http://www.blindleper.com/files/gdal/gdal_warp_merc.jpg

and here is what the original looks like before the projection is 
assigned and warped (I know the merc warp is good, because I use it on 
many other things.. I've just never tried polar stereographic before):
http://www.blindleper.com/files/gdal/original.jpg

so clearly i'm doing something wrong... I've tried varations of lat_ts 
like this:
#cs2cs +proj=latlong +datum=WGS84 +to +proj=stere +lat_ts=37 
+ellps=WGS84 +lat_0=90 +lon_0=-105 +k=1 +x_0=0 +y_0=0 +datum=WGS84 
+units=m +no_defs
#cs2cs +proj=latlong +datum=WGS84 +to +proj=stere +lat_ts=7.838 
+ellps=WGS84 +lat_0=90 +lon_0=-105 +k=1 +x_0=0 +y_0=0 +datum=WGS84 
+units=m +no_defs

because i'm not sure what "La1	7.838N" and such mean on that projection 
above...

Anyway, I hope someone can help lead me away from the dark side and into 
the light... this is driving me bonkers!

cheers,

--BlindLeper




..
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/4097f153/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 849 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/4097f153/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 919 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/4097f153/attachment-0001.png>

From lists at mcbsystems.us  Fri Jul 14 09:43:05 2017
From: lists at mcbsystems.us (Brian McCormick)
Date: Fri, 14 Jul 2017 11:43:05 -0500
Subject: [gdal-dev] stere
In-Reply-To: <em04dc7225-400a-471d-ba7f-95b7b30bd4aa@xps>
References: <em04dc7225-400a-471d-ba7f-95b7b30bd4aa@xps>
Message-ID: <CAD0yCM2avQY8CFLKTnqLNHtY=0CnsNYKpD3ihSJexba9nvLddA@mail.gmail.com>

I work with NWS grids a lot for nexrad data. They are in a 1/40 lfm grid.
Your data looks like it might be an a 1/1 LFM grid. Here is the WKT I would
use for a 1/1 LFM grid. Each cell is 190.5 km.

PROJCS["1/1.0 LFM",GEOGCS["NOT SPECIFIED",DATUM["SPHERE",
SPHEROID["SPHERE",6371200.0,0.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.
0174532925199433]],PROJECTION["Stereographic_North_Pole"],
PARAMETER["False_Easting",11.0],PARAMETER["False_Northing",
41.0],PARAMETER["Central_Meridian",-105.0],PARAMETER["
Standard_Parallel_1",60.0],PARAMETER["Scale_Factor",1],UNIT["190500.0
meters",190500.0]]

A 1/40 lfm grid projection that the NWS uses for the radar looks like so.
The other one above is a wild guess based on the fact that it has a grid
size of 190.5km I am thinking it is their LFM.

PROJCS["1/40.0 LFM",GEOGCS["NOT SPECIFIED",DATUM["SPHERE",
SPHEROID["SPHERE",6371200.0,0.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.
0174532925199433]],PROJECTION["Stereographic_North_Pole"],
PARAMETER["False_Easting",401.0],PARAMETER["False_Northing",
1601.0],PARAMETER["Central_Meridian",-105.0],PARAMETER["
Standard_Parallel_1",60.0],PARAMETER["Scale_Factor",1],UNIT["4762.5
meters",4762.5]]

Good luck!

On Fri, Jul 14, 2017 at 8:56 AM, Patrick L. Francis <wxprofessor at gmail.com>
wrote:

>
> Hello! I have been banging my head against the wall trying to use the
> polar stereographic projection, and am hoping one of you that is smarter
> than me, which would likely be all of you can help! [image: :-)] lol
>
> this projection:
> http://www.nco.ncep.noaa.gov/pmb/docs/on388/tableb.html#GRID202
>
> when applied via gdal_translate and converted to mercator, results in..
> how to describe? well here is a screenshot if you are interested
> http://www.blindleper.com/files/gdal/gdal_warp_merc.jpg
>
> and here is what the original looks like before the projection is assigned
> and warped (I know the merc warp is good, because I use it on many other
> things.. I've just never tried polar stereographic before):
> http://www.blindleper.com/files/gdal/original.jpg
>
> so clearly i'm doing something wrong... I've tried varations of lat_ts
> like this:
> #cs2cs +proj=latlong +datum=WGS84 +to +proj=stere +lat_ts=37 +ellps=WGS84
> +lat_0=90 +lon_0=-105 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs
> #cs2cs +proj=latlong +datum=WGS84 +to +proj=stere +lat_ts=7.838
> +ellps=WGS84 +lat_0=90 +lon_0=-105 +k=1 +x_0=0 +y_0=0 +datum=WGS84 +units=m
> +no_defs
>
> because i'm not sure what "La1 7.838N" and such mean on that projection
> above...
>
> Anyway, I hope someone can help lead me away from the dark side and into
> the light... this is driving me bonkers!  [image: *ALIEN*]
>
> cheers,
>
> --BlindLeper
>
>
>
>
> ..
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/e6cfff4f/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 849 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/e6cfff4f/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 919 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/e6cfff4f/attachment-0001.png>

From wxprofessor at gmail.com  Fri Jul 14 10:06:08 2017
From: wxprofessor at gmail.com (Patrick L. Francis)
Date: Fri, 14 Jul 2017 17:06:08 +0000
Subject: [gdal-dev] stere
In-Reply-To: <CAD0yCM2avQY8CFLKTnqLNHtY=0CnsNYKpD3ihSJexba9nvLddA@mail.gmail.com>
References: <em04dc7225-400a-471d-ba7f-95b7b30bd4aa@xps>
 <CAD0yCM2avQY8CFLKTnqLNHtY=0CnsNYKpD3ihSJexba9nvLddA@mail.gmail.com>
Message-ID: <em50f42b67-71d4-47c0-a891-337309c6e984@xps>


>I work with NWS grids a lot for nexrad data. They are in a 1/40 lfm 
>grid. Your data looks like it might be an a 1/1 LFM grid. Here is the 
>WKT I would use for a 1/1 LFM grid. Each cell is 190.5 km.

thank you for replying brian....  the output using those specs ended up 
looking like:
http://www.blindleper.com/files/gdal/brian_mccormick_try.jpg

from: +proj=stere +lat_0=90 +lat_ts=60 +lon_0=-105 +k=1 +x_0=0 +y_0=0 
+a=190500.0  +b=190500.0 +units=m +no_defs

it's really amazing how changes look similar.. you can see where florida 
is on the image compared to google earth... there's got to be something 
really obvious i'm missing... wish I understood this stuff better..

thanks for trying


--

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/15140695/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 849 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/15140695/attachment-0003.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 919 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/15140695/attachment-0004.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: image/png
Size: 1202 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170714/15140695/attachment-0005.png>

From andre+joost at nurfuerspam.de  Fri Jul 14 12:04:28 2017
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Fri, 14 Jul 2017 21:04:28 +0200
Subject: [gdal-dev] stere
In-Reply-To: <em50f42b67-71d4-47c0-a891-337309c6e984@xps>
References: <em04dc7225-400a-471d-ba7f-95b7b30bd4aa@xps>
 <CAD0yCM2avQY8CFLKTnqLNHtY=0CnsNYKpD3ihSJexba9nvLddA@mail.gmail.com>
 <em50f42b67-71d4-47c0-a891-337309c6e984@xps>
Message-ID: <okb4kv$nsg$1@blaine.gmane.org>

Am 14.07.2017 um 19:06 schrieb Patrick L. Francis:
>
>> I work with NWS grids a lot for nexrad data. They are in a 1/40 lfm
>> grid. Your data looks like it might be an a 1/1 LFM grid. Here is the
>> WKT I would use for a 1/1 LFM grid. Each cell is 190.5 km.
>
> thank you for replying brian....  the output using those specs ended up
> looking like:
> http://www.blindleper.com/files/gdal/brian_mccormick_try.jpg
>
> from: +proj=stere +lat_0=90 +lat_ts=60 +lon_0=-105 +k=1 +x_0=0 +y_0=0
> +a=190500.0  +b=190500.0 +units=m +no_defs
>

a and b are the parameters for the ellipsoid, which seem totally wrong 
now. Brian suggested a scale factor, which would be +to_meter instead of 
+units=m.

If you run gdalsrsinfo on a text file with brian's WKT, it reports:

PROJ.4 : '+proj=stere +lat_0=90 +lat_ts=60 +lon_0=-105 +k=1 +x_0=2095500 
+y_0=7810500 +a=6371200 +b=6371200 +to_meter=190500 +no_defs '

HTH,
André Joost



From kmccarty at gmail.com  Tue Jul 18 12:27:51 2017
From: kmccarty at gmail.com (Kevin B. McCarty)
Date: Tue, 18 Jul 2017 12:27:51 -0700
Subject: [gdal-dev] Errors in geotransform computation from ENVI rotated
	header?
Message-ID: <CAG81GTXxLBpjtTuOq0EeRQ7m6EOmadi7j5V1++P6Sh3bDFg3hA@mail.gmail.com>

Hi,

We are upgrading to GDAL 2.2.1 where I work.  While we greatly
appreciate the effort to start supporting the "rotation=xxx" syntax in
the "map_info" field of an ENVI header, it appears to me that there
are some inconsistencies with the computation of the GDAL GeoTransform
matrix from rotated ENVI headers.

Here is the current implementation in frmts/raw/envidataset.cpp in
ENVIDataset::ProcessMapinfo() (copied from github, commit
ddbf6d39aa4b005a77ca4f27c2d61a3214f336f8) which I paste for reference:

  // Capture geotransform.
  const double xReference = CPLAtof(papszFields[1]);
  const double yReference = CPLAtof(papszFields[2]);
  const double pixelEasting = CPLAtof(papszFields[3]);
  const double pixelNorthing = CPLAtof(papszFields[4]);
  const double xPixelSize = CPLAtof(papszFields[5]);
  const double yPixelSize = CPLAtof(papszFields[6]);

  adfGeoTransform[0] = pixelEasting - (xReference - 1) * xPixelSize;
  adfGeoTransform[1] = cos(dfRotation) * xPixelSize;
  adfGeoTransform[2] = -sin(dfRotation) * xPixelSize;
  adfGeoTransform[3] = pixelNorthing + (yReference - 1) * yPixelSize;
  adfGeoTransform[4] = -sin(dfRotation) * yPixelSize;
  adfGeoTransform[5] = -cos(dfRotation) * yPixelSize;

[My apologies in advance for any obnoxious breakage that gmail applies
to the formatting of this snippet.]

The element [4] of adfGeoTransform is equivalent in semantics to the
second line [that is, zero-based line 1] of a world file (to
illustrate this I point for instance at the implementation of
GDALLoadWorldFile() in gcore/gdal_misc.cpp).  Per Wikipedia:

  https://en.wikipedia.org/wiki/World_file

... "A better description of the A, D, B and E parameters are: [...]
Line 2: D: y-component of the pixel *width* (y-skew)"  [emphasis
mine].

So it seems to me that the line setting adfGeoTransform[4] above
should instead read:

  adfGeoTransform[4] = -sin(dfRotation) * xPixelSize; // NOTE
yPixelSize --> xPixelSize

Similarly, in the computation of element [2], which is semantically
equivalent to the third line [that is, zero-based line 2] of a world
file: as Wikipedia puts it, the "x-component of the pixel *height*"
[emphasis mine]; xPixelSize should be replaced by yPixelSize.

The error is apparent in practice only when xPixelSize != yPixelSize,
of course; which is presumably why this wasn't noticed earlier.


An additional issue is that I think elements [0] and [3] (the
world-coordinate X,Y position of the pixel-space origin) of the
transform are not being computed correctly when rotation != 0.  For
instance, the world X origin (element [0]) should first of all take
into account that the xPixelSize is partly in the world Y direction
(so its extent in the world X direction must be reduced by the
appropriate angular factor); second, it should take into account that
the yPixelSize contributes to some extent in the world X direction.

To summarize all in one place, I think that the correct computations
would look like this:

  adfGeoTransform[1] = cos(dfRotation) * xPixelSize;
  adfGeoTransform[2] = -sin(dfRotation) * yPixelSize;
  adfGeoTransform[4] = -sin(dfRotation) * xPixelSize;
  adfGeoTransform[5] = -cos(dfRotation) * yPixelSize;

  adfGeoTransform[0] = pixelEasting - (xReference - 1) * adfGeoTransform[1]
                                                           -
(yReference - 1) * adfGeoTransform[2];
  adfGeoTransform[3] = pixelNorthing - (xReference - 1) * adfGeoTransform[4]
                                                            -
(yReference - 1) * adfGeoTransform[5];

[again, apologies in advance for however Gmail may have messed this
up; fortunately C++ is mostly whitespace-insensitive]

Note that for element [3], the + sign on (yReference - 1) * yPixelSize
changes to a - sign on (yReference - 1) * adfGeoTransform[5] ... this
follows since in the zero-rotation case, yPixelSize being positive
implies adfGeoTransform[5] is negative.


It is possible that there are similar reciprocal errors in the code in
ENVIDataset::WriteProjectionInfo() to write out an ENVI dataset header
given a rotated GeoTransform ... I have not looked into that code
since we don't use it here.

Best regards, and many thanks for your work,

-- 
Kevin B. McCarty
<kmccarty at gmail.com>

From even.rouault at spatialys.com  Tue Jul 18 13:28:38 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Jul 2017 22:28:38 +0200
Subject: [gdal-dev] Errors in geotransform computation from ENVI rotated
	header?
In-Reply-To: <CAG81GTXxLBpjtTuOq0EeRQ7m6EOmadi7j5V1++P6Sh3bDFg3hA@mail.gmail.com>
References: <CAG81GTXxLBpjtTuOq0EeRQ7m6EOmadi7j5V1++P6Sh3bDFg3hA@mail.gmail.com>
Message-ID: <6642400.nCPqCJ8bVh@even-i700>

On mardi 18 juillet 2017 12:27:51 CEST Kevin B. McCarty wrote:
> Hi,
> 
> We are upgrading to GDAL 2.2.1 where I work.  While we greatly
> appreciate the effort to start supporting the "rotation=xxx" syntax in
> the "map_info" field of an ENVI header, it appears to me that there
> are some inconsistencies with the computation of the GDAL GeoTransform
> matrix from rotated ENVI headers.
> 
> Here is the current implementation in frmts/raw/envidataset.cpp in
> ENVIDataset::ProcessMapinfo() (copied from github, commit
> ddbf6d39aa4b005a77ca4f27c2d61a3214f336f8) which I paste for reference:
> 
>   // Capture geotransform.
>   const double xReference = CPLAtof(papszFields[1]);
>   const double yReference = CPLAtof(papszFields[2]);
>   const double pixelEasting = CPLAtof(papszFields[3]);
>   const double pixelNorthing = CPLAtof(papszFields[4]);
>   const double xPixelSize = CPLAtof(papszFields[5]);
>   const double yPixelSize = CPLAtof(papszFields[6]);
> 
>   adfGeoTransform[0] = pixelEasting - (xReference - 1) * xPixelSize;
>   adfGeoTransform[1] = cos(dfRotation) * xPixelSize;
>   adfGeoTransform[2] = -sin(dfRotation) * xPixelSize;
>   adfGeoTransform[3] = pixelNorthing + (yReference - 1) * yPixelSize;
>   adfGeoTransform[4] = -sin(dfRotation) * yPixelSize;
>   adfGeoTransform[5] = -cos(dfRotation) * yPixelSize;
> 
> [My apologies in advance for any obnoxious breakage that gmail applies
> to the formatting of this snippet.]
> 
> The element [4] of adfGeoTransform is equivalent in semantics to the
> second line [that is, zero-based line 1] of a world file (to
> illustrate this I point for instance at the implementation of
> GDALLoadWorldFile() in gcore/gdal_misc.cpp).  Per Wikipedia:
> 
>   https://en.wikipedia.org/wiki/World_file
> 
> ... "A better description of the A, D, B and E parameters are: [...]
> Line 2: D: y-component of the pixel *width* (y-skew)"  [emphasis
> mine].
> 
> So it seems to me that the line setting adfGeoTransform[4] above
> should instead read:
> 
>   adfGeoTransform[4] = -sin(dfRotation) * xPixelSize; // NOTE
> yPixelSize --> xPixelSize
> 
> Similarly, in the computation of element [2], which is semantically
> equivalent to the third line [that is, zero-based line 2] of a world
> file: as Wikipedia puts it, the "x-component of the pixel *height*"
> [emphasis mine]; xPixelSize should be replaced by yPixelSize.
> 
> The error is apparent in practice only when xPixelSize != yPixelSize,
> of course; which is presumably why this wasn't noticed earlier.
> 
> 
> An additional issue is that I think elements [0] and [3] (the
> world-coordinate X,Y position of the pixel-space origin) of the
> transform are not being computed correctly when rotation != 0.  For
> instance, the world X origin (element [0]) should first of all take
> into account that the xPixelSize is partly in the world Y direction
> (so its extent in the world X direction must be reduced by the
> appropriate angular factor); second, it should take into account that
> the yPixelSize contributes to some extent in the world X direction.
> 
> To summarize all in one place, I think that the correct computations
> would look like this:
> 
>   adfGeoTransform[1] = cos(dfRotation) * xPixelSize;
>   adfGeoTransform[2] = -sin(dfRotation) * yPixelSize;
>   adfGeoTransform[4] = -sin(dfRotation) * xPixelSize;
>   adfGeoTransform[5] = -cos(dfRotation) * yPixelSize;
> 
>   adfGeoTransform[0] = pixelEasting - (xReference - 1) * adfGeoTransform[1]
>                                                            -
> (yReference - 1) * adfGeoTransform[2];
>   adfGeoTransform[3] = pixelNorthing - (xReference - 1) * adfGeoTransform[4]
> -
> (yReference - 1) * adfGeoTransform[5];
> 
> [again, apologies in advance for however Gmail may have messed this
> up; fortunately C++ is mostly whitespace-insensitive]
> 
> Note that for element [3], the + sign on (yReference - 1) * yPixelSize
> changes to a - sign on (yReference - 1) * adfGeoTransform[5] ... this
> follows since in the zero-rotation case, yPixelSize being positive
> implies adfGeoTransform[5] is negative.
> 
> 
> It is possible that there are similar reciprocal errors in the code in
> ENVIDataset::WriteProjectionInfo() to write out an ENVI dataset header
> given a rotated GeoTransform ... I have not looked into that code
> since we don't use it here.
> 
> Best regards, and many thanks for your work,

Kevin,

Guillaume Pasero also sent an email a few days ago about issues regarding this:
https://lists.osgeo.org/pipermail/gdal-dev/2017-July/046860.html
so it looks like we have a confirmed issue here

Did you check that the georeferencing in a GDAL based software (QGIS for example, or 
maybe by just running gdalwarp to get a north-up oriented output image) with your above 
proposed fix is consistant with the one you get in ENVI software ?

I've just left a message to the original author of ENVI rotation read support in:
https://github.com/OSGeo/gdal/pull/197#issuecomment-316185610

The writing side is very much likely affected since the formulas were deduced by reversing 
the ones of the read side.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170718/ec647654/attachment-0001.html>

From kmccarty at gmail.com  Tue Jul 18 14:45:31 2017
From: kmccarty at gmail.com (Kevin B. McCarty)
Date: Tue, 18 Jul 2017 14:45:31 -0700
Subject: [gdal-dev] Errors in geotransform computation from ENVI rotated
	header?
In-Reply-To: <6642400.nCPqCJ8bVh@even-i700>
References: <CAG81GTXxLBpjtTuOq0EeRQ7m6EOmadi7j5V1++P6Sh3bDFg3hA@mail.gmail.com>
 <6642400.nCPqCJ8bVh@even-i700>
Message-ID: <CAG81GTWo6RYsnj-GzR9CHHEFyvFsjzQkhGUU+=3PNsTNK99BvA@mail.gmail.com>

Hi Even,

On Tue, Jul 18, 2017 at 1:28 PM, Even Rouault
<even.rouault at spatialys.com> wrote:

> Did you check that the georeferencing in a GDAL based software (QGIS for
> example, or maybe by just running gdalwarp to get a north-up oriented output
> image) with your above proposed fix is consistant with the one you get in
> ENVI software ?

I've created a pretty artificial .hdr file that exhibits rotation
together with xpixelsize != ypixelsize.  Here it is: (cut-and-paste it
somewhere and name it to dum.hdr)

ENVI
samples = 10
lines   = 20
bands   = 1
header offset = 0
file type  = ENVI Standard
data type  = 1
interleave = bsq
byte order = 0
map info = { UTM, 1, 1, 200, 200, 25, 12.5,
             30, North, WGS-84, units=Meters, rotation=45 }

Note that the local X size (sample count) is 10 pixels and local Y
size (line count) is 20 pixels; but since the local X pixel width is
twice the local Y pixel width, the image in world coordinates should
be a square of 250 meters on each side, rotated 45 degrees from due
north about its upper left (in pixel-space) corner.

You can create an accompanying .bsq file for this .hdr file with the
following Unix command, or via any other mechanism that creates a file
having at least 200 bytes (exact contents don't matter):

  dd if=/dev/zero of=./dum.bsq bs=200 count=1


Here is what gdal 2.2.1 gdalinfo reports for the corners of dum.bsq
[that I claim is erroneous]:

Upper Left  (     200.000,     200.000) (  7d29'13.03"W,  0d 0' 6.49"N)
Lower Left  (     553.553,      23.223) (  7d29' 1.62"W,  0d 0' 0.75"N)
Upper Right (     376.777,     288.388) (  7d29' 7.33"W,  0d 0' 9.36"N)
Lower Right (     730.330,     111.612) (  7d28'55.92"W,  0d 0' 3.62"N)
Center      (     465.165,     155.806) (  7d29' 4.48"W,  0d 0' 5.06"N)


Here is what it reports for the same input after my suggested fix for
the transform matrix calculation:

Upper Left  (     200.000,     200.000) (  7d29'13.03"W,  0d 0' 6.49"N)
Lower Left  (     376.777,      23.223) (  7d29' 7.33"W,  0d 0' 0.75"N)
Upper Right (     376.777,     376.777) (  7d29' 7.33"W,  0d 0'12.23"N)
Lower Right (     553.553,     200.000) (  7d29' 1.62"W,  0d 0' 6.49"N)
Center      (     376.777,     200.000) (  7d29' 7.33"W,  0d 0' 6.49"N)


If you view these two sets of five world coordinates each in your
favorite map program, you can see that the former coordinates make the
corners and center of a long thin parallelogram, whereas the latter
coordinates form a 45-degree rotated square as expected.  And for the
latter set of coordinates, the difference between min and max X
coordinates, and between min and max Y coordinates, is sqrt(2) * 250
as expected.

I've also tried some tests with our own (proprietary) software using
each of the vanilla GDAL 2.2.1 .so file, and the version with my fix,
in turn.

I've not tried as hard to verify my suggested fixes to computation of
adfGeoTransform elements [0] and [3], since they are smaller in effect
and only apply to files that are both rotated and in which the
reference X and/or Y pixels are other than one, which are probably
rare.  But it seems clear to me that some change to elements [0] and
[3] of this sort is needed in that (obscure) case.


> I've just left a message to the original author of ENVI rotation read
> support in:
>
> https://github.com/OSGeo/gdal/pull/197#issuecomment-316185610

OK, thank you!


> The writing side is very much likely affected since the formulas were
> deduced by reversing the ones of the read side.
>
> Even

I was afraid of that.  Thanks again.

-- 
Kevin B. McCarty
<kmccarty at gmail.com>

From even.rouault at spatialys.com  Tue Jul 18 15:03:21 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Jul 2017 00:03:21 +0200
Subject: [gdal-dev] Errors in geotransform computation from ENVI rotated
	header?
In-Reply-To: <CAG81GTWo6RYsnj-GzR9CHHEFyvFsjzQkhGUU+=3PNsTNK99BvA@mail.gmail.com>
References: <CAG81GTXxLBpjtTuOq0EeRQ7m6EOmadi7j5V1++P6Sh3bDFg3hA@mail.gmail.com>
 <6642400.nCPqCJ8bVh@even-i700>
 <CAG81GTWo6RYsnj-GzR9CHHEFyvFsjzQkhGUU+=3PNsTNK99BvA@mail.gmail.com>
Message-ID: <2347818.ODFknMN6pO@even-i700>

On mardi 18 juillet 2017 14:45:31 CEST Kevin B. McCarty wrote:
> Hi Even,
> 
> On Tue, Jul 18, 2017 at 1:28 PM, Even Rouault
> 
> <even.rouault at spatialys.com> wrote:
> > Did you check that the georeferencing in a GDAL based software (QGIS for
> > example, or maybe by just running gdalwarp to get a north-up oriented
> > output image) with your above proposed fix is consistant with the one you
> > get in ENVI software ?
> 
> I've created a pretty artificial .hdr file that exhibits rotation
> together with xpixelsize != ypixelsize.  Here it is: (cut-and-paste it
> somewhere and name it to dum.hdr)
> 
> ENVI
> samples = 10
> lines   = 20
> bands   = 1
> header offset = 0
> file type  = ENVI Standard
> data type  = 1
> interleave = bsq
> byte order = 0
> map info = { UTM, 1, 1, 200, 200, 25, 12.5,
>              30, North, WGS-84, units=Meters, rotation=45 }
> 
> Note that the local X size (sample count) is 10 pixels and local Y
> size (line count) is 20 pixels; but since the local X pixel width is
> twice the local Y pixel width, the image in world coordinates should
> be a square of 250 meters on each side, rotated 45 degrees from due
> north about its upper left (in pixel-space) corner.
> 
> You can create an accompanying .bsq file for this .hdr file with the
> following Unix command, or via any other mechanism that creates a file
> having at least 200 bytes (exact contents don't matter):
> 
>   dd if=/dev/zero of=./dum.bsq bs=200 count=1
> 
> 
> Here is what gdal 2.2.1 gdalinfo reports for the corners of dum.bsq
> [that I claim is erroneous]:
> 
> Upper Left  (     200.000,     200.000) (  7d29'13.03"W,  0d 0' 6.49"N)
> Lower Left  (     553.553,      23.223) (  7d29' 1.62"W,  0d 0' 0.75"N)
> Upper Right (     376.777,     288.388) (  7d29' 7.33"W,  0d 0' 9.36"N)
> Lower Right (     730.330,     111.612) (  7d28'55.92"W,  0d 0' 3.62"N)
> Center      (     465.165,     155.806) (  7d29' 4.48"W,  0d 0' 5.06"N)
> 
> 
> Here is what it reports for the same input after my suggested fix for
> the transform matrix calculation:
> 
> Upper Left  (     200.000,     200.000) (  7d29'13.03"W,  0d 0' 6.49"N)
> Lower Left  (     376.777,      23.223) (  7d29' 7.33"W,  0d 0' 0.75"N)
> Upper Right (     376.777,     376.777) (  7d29' 7.33"W,  0d 0'12.23"N)
> Lower Right (     553.553,     200.000) (  7d29' 1.62"W,  0d 0' 6.49"N)
> Center      (     376.777,     200.000) (  7d29' 7.33"W,  0d 0' 6.49"N)
> 
> 
> If you view these two sets of five world coordinates each in your
> favorite map program, you can see that the former coordinates make the
> corners and center of a long thin parallelogram, whereas the latter
> coordinates form a 45-degree rotated square as expected.  And for the
> latter set of coordinates, the difference between min and max X
> coordinates, and between min and max Y coordinates, is sqrt(2) * 250
> as expected.
> 
> I've also tried some tests with our own (proprietary) software using
> each of the vanilla GDAL 2.2.1 .so file, and the version with my fix,
> in turn.
> 
> I've not tried as hard to verify my suggested fixes to computation of
> adfGeoTransform elements [0] and [3], since they are smaller in effect
> and only apply to files that are both rotated and in which the
> reference X and/or Y pixels are other than one, which are probably
> rare.  But it seems clear to me that some change to elements [0] and
> [3] of this sort is needed in that (obscure) case.
> 
> > I've just left a message to the original author of ENVI rotation read
> > support in:
> > 
> > https://github.com/OSGeo/gdal/pull/197#issuecomment-316185610
> 
> OK, thank you!

If we don't get feedback from him, please create a ticket about the issue with your changes, 
or a pull request at your convenience. Fixes in the writing side would be appreciated too. I 
guess the envi_15() test in autotest/gdrivers/envi.py will probably need some adaptations.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170719/82cd7702/attachment.html>

From ari.jolma at gmail.com  Wed Jul 19 01:07:30 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Wed, 19 Jul 2017 11:07:30 +0300
Subject: [gdal-dev] Compute raster from other rasters using a Bayesian
	Network
Message-ID: <482877b9-053e-ecd7-0151-ab1243731826@gmail.com>

Hi,

Just a brief note that I'm working on an extension to GDAL, which allows 
one to compute a raster from other rasters using a Bayesian Network - 
cell by cell. To see why would one do that, see for example

https://www.researchgate.net/publication/240682865_Bayesian_Network_Integration_with_GIS

Such an extension is very simple, just go through all the cells of the 
rasters, feed the data to the network, propagate the information, and 
read the wished output from the network into the output raster.

I'm using the Perl bindings to GDAL, Hugin software, and a perl bindings 
to Hugin. The extension is also a Perl module and the initial version at 
https://github.com/ajolma/Geo-GDAL-Bayes-Hugin is a working 
proof-of-concept.

Hugin is proprietary software, so it is a bit of a problem - for example 
creating web-based tools using it requires expensive licenses. I first 
tried with dlib C++ library but ran into C++ related problems - I left a 
question at their sourceforge discussion forum. There are other (free) 
BN software but I have not yet tried those. If anyone has experiece for 
example with linking SMILE to GDAL I'd be interested to hear.

Best regards,

Ari



From guillaume.pasero at c-s.fr  Wed Jul 19 03:28:00 2017
From: guillaume.pasero at c-s.fr (Guillaume Pasero)
Date: Wed, 19 Jul 2017 12:28:00 +0200
Subject: [gdal-dev] Errors in geotransform computation from ENVI rotated
 header?
In-Reply-To: <2347818.ODFknMN6pO@even-i700>
References: <CAG81GTXxLBpjtTuOq0EeRQ7m6EOmadi7j5V1++P6Sh3bDFg3hA@mail.gmail.com>
 <6642400.nCPqCJ8bVh@even-i700>
 <CAG81GTWo6RYsnj-GzR9CHHEFyvFsjzQkhGUU+=3PNsTNK99BvA@mail.gmail.com>
 <2347818.ODFknMN6pO@even-i700>
Message-ID: <e20e9815-0271-41f1-fa3f-095f4faa28d8@c-s.fr>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170719/bf732535/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: logo_cs.png
Type: image/png
Size: 19066 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170719/bf732535/attachment-0001.png>

From kmccarty at gmail.com  Wed Jul 19 11:00:48 2017
From: kmccarty at gmail.com (Kevin B. McCarty)
Date: Wed, 19 Jul 2017 11:00:48 -0700
Subject: [gdal-dev] Errors in geotransform computation from ENVI rotated
	header?
In-Reply-To: <e20e9815-0271-41f1-fa3f-095f4faa28d8@c-s.fr>
References: <CAG81GTXxLBpjtTuOq0EeRQ7m6EOmadi7j5V1++P6Sh3bDFg3hA@mail.gmail.com>
 <6642400.nCPqCJ8bVh@even-i700>
 <CAG81GTWo6RYsnj-GzR9CHHEFyvFsjzQkhGUU+=3PNsTNK99BvA@mail.gmail.com>
 <2347818.ODFknMN6pO@even-i700> <e20e9815-0271-41f1-fa3f-095f4faa28d8@c-s.fr>
Message-ID: <CAG81GTV1SEdwne9bfkh0RZOXDp_biFuqRfF2WqhhBmYoy84PLg@mail.gmail.com>

Hi Guillaume,

On Wed, Jul 19, 2017 at 3:28 AM, Guillaume Pasero
<guillaume.pasero at c-s.fr> wrote:
>
> Hi,
>
> I think my issue is not strictly related. The problem I had was about the way the rotation angle is computed in WriteProjectionInfo() when the determinant of the geotransform is positive.
>
> Let's call det(GT) the determinant of the 2x2 sub-matrix of GT, without origin terms. In a standard case : GT[1] > 0 and GT[5] < 0 (Y axis downwards) and we have a negative determinant. Even when there is a rotation, it doesn't change the sign of the determinant and the formula to compute the rotation angle is good. However, when the determinant is positive (like when both spacing are positive), then the computation of the rotation angle has to be changed.

Yes, that makes sense to me.

It seems to me that when the matrix determinant is positive (and the
geotransform is not the default no-translation identity), the correct
thing to do from a mathematical standpoint is to force exactly one of
the output x-pixel or y-pixel sizes to be negative in order to
compensate.  This is the only way I can see that the geotransform
could be made to still have a positive determinant at the time of a
later read of that same file.

I guess it should be the y-pixel size, since folks are already used to
that being negative (in the reverse, more usual situation of a
negative-determinant matrix) in e.g. world files.  From a practical
standpoint, though, I have no idea how many applications out there
would both allow, and correctly interpret, an ENVI header with a
negative y-pixel size.

With respect to my suggested corrections for the ProcessMapinfo()
function at read time, I believe that the corresponding fix to the
WriteProjectionInfo() function is simple in the usual case of a
negative matrix determinant: it is just to swap the use of the [2] and
[4] elements of adfGeoTransform[] everywhere that either is used in
that function in the computation of variables dfPixelXSize,
dfPixelYSize, dfRotation1 and dfRotation2.

I would have to think a little more about what the right calculation
should be in the case of a positive matrix determinant.  If Taylor
Brown doesn't respond to this thread within a few days, I'll try to
put together a patch myself that incorporates all of this.

-- 
Kevin B. McCarty
<kmccarty at gmail.com>

From browtayl at oregonstate.edu  Wed Jul 19 12:50:06 2017
From: browtayl at oregonstate.edu (Taylor Alexander Brown)
Date: Wed, 19 Jul 2017 12:50:06 -0700
Subject: [gdal-dev] Errors in geotransform computation from ENVI rotated
 header?
In-Reply-To: <CAG81GTV1SEdwne9bfkh0RZOXDp_biFuqRfF2WqhhBmYoy84PLg@mail.gmail.com>
References: <CAG81GTV1SEdwne9bfkh0RZOXDp_biFuqRfF2WqhhBmYoy84PLg@mail.gmail.com>
Message-ID: <63fa3cd3-9eb1-f04e-b594-7b7d1ee7c01d@oregonstate.edu>

Greetings,

Kevin makes a well-reasoned argument that my initial patch was not general enough. It is true that in my application the x,y pixel sizes were equal so I did not detect the bug.

I am a geospatial novice and I derived my formulae from a response to a question I posted on the GIS StackExchange [1]. The development of the patch with write support was coordinated on the GDAL mailing list [2] and GitHub [3].

Fully general support for rotation would be desirable. Test cases for x=y, x!=y would help verify correctness.

I agree that the given semantics for world files implies that xPixelSize and yPixelSize should be swapped in adfGeoTransform[2] and adfGeoTransform[4]. And although I have not fully digested the mathematics, I also agree that it makes sens to scale the x and y directions as suggested for adfGeoTransform[0] and adfGeoTransform[3].

I concur that the negative determinant issue seems to be not strictly related to the initial rotation support. However it would make sense to address both rotation issues in the same patch. Rather than forcing a pixel size to be negative and generating possibly incompatible ENVI headers, would it make sense to handle the cases det(GT)>0, det(GT)<=0 separately and retransform if necessary?

In summary, although I would be happy to revise my patch as time allows, it sounds like Kevin's made a very good case and would be able to push something more quickly, so go for it! It would be nice to have some example GIS files exhibiting these properties to get a visual intuition for these transformations.

Thanks for uncovering the issue and helping me learn more about the algebra of geospatial transformations.


Taylor Alexander Brown


[1] https://gis.stackexchange.com/questions/229952/rotate-envi-hyperspectral-imagery-with-gdal
[2] https://lists.osgeo.org/pipermail/gdal-dev/2017-February/046127.html
[3] https://github.com/OSGeo/gdal/pull/197

From sfkeller at gmail.com  Fri Jul 21 03:42:04 2017
From: sfkeller at gmail.com (Stefan Keller)
Date: Fri, 21 Jul 2017 12:42:04 +0200
Subject: [gdal-dev] How to convert a local GeoTIFF to a tile set with
	minimal WMTSCapabilities.xml?
In-Reply-To: <CAFcOn297eu8Dht6dC4E0b=VNRQNDnGFk2jcrrupr6WRc04mK2g@mail.gmail.com>
References: <CAFcOn297eu8Dht6dC4E0b=VNRQNDnGFk2jcrrupr6WRc04mK2g@mail.gmail.com>
Message-ID: <CAFcOn2-KU5n3XMvOeWUQFnavrnV--BnTAZz7+cs6u1yffEr4pQ@mail.gmail.com>

Hi,

Update: I found not much so far regarding creation of WMTSCapabilities.xml...

There exists this free web tool http://wmts.maptiler.com/ which can
generate an XML given an URL.

Then it seems that UMN MapServer can also generate this XML given a
WMTS is configured with it's Mapfile.

That's it!

I'm still open for feedback on this tedious task which for sure could
be automated.
IMHO it would be a great extension especially to gdal2tiles.

:Stefan


2017-06-07 17:36 GMT+02:00 Stefan Keller <sfkeller at gmail.com>:
> Sorry for this question since I know GDAL. But it seems I'm missing
> something here:
>
> I'd like to do the following:
> A. Given a local GeoTIFF, create WMTS compatible tile set (of single
> zoom level 18 or a range)
> % python gdal2tiles.py -z 18 infile.tif outdir
> B. Then I'd like to test this locally
> % gdalinfo WMTSCapabilities.xml
> C. or - if needed - I copy WMTSCapabilities.xml to a web space (say
> https://www.myweb.org/wmts/1.0.0/WMTSCapabilities.xml) with the
> unpacked tile set - and test it there.
>
> Step A works but produces no WMTSCapabilities.xml (stub), only
> tilemapresource.xml which obviously is not same as
> WMTSCapabilities.xml.
>
> 1. How can I generate such a WMTSCapabilities.xml?
> 2. What is the "minimal viable" XML, given I want/have to create
> WMTSCapabilities.xml by hand?
>
> :Stefan

From julien.michel at cnes.fr  Fri Jul 21 04:49:02 2017
From: julien.michel at cnes.fr (Julien Michel)
Date: Fri, 21 Jul 2017 13:49:02 +0200
Subject: [gdal-dev] Downsampling with gdal_translate and overviews
Message-ID: <cbad1970-8051-e08c-65b5-792bbed358cd@cnes.fr>

Hi all,

Yesterday I experienced a strange issue while downsampling image with 
gdal_translate -tr option (-filter is average). I was downsampling data 
before feeding them into a stereo reconstruction processing chain, and 
the output DSM had a clear and straight cutline in the middle of the 
image, as if the whole south part of the image was several meters lower 
than the north part. I compared the downsampled images with an in-house 
downsampling tool, and found indeed that whole rectangular portions of 
the gdal_translate output were a bit shifted (maybe less than a pixel, 
but that counts when doing stereo reconstruction). At one point I 
started suspecting my .ovr files, and indeed removing them made the 
problem disappear (I was subsampling by 10, whereas overviews have been 
generated with the classical 2 4 8 16 32 ... progression). So here are 
my questions :

- Is gdal_translate using the nearest overview level as a start for 
resampling ?

- Is there a way to prevent that (other than removing the ovr file) ?

- Is it expected than the resampling yields artifacts when ovr files are 
present ?

Thanks a lot for your help,

Regards,

Julien

-- 
Julien MICHEL
CNES - DSO/SI/2A


From jukka.rahkonen at maanmittauslaitos.fi  Fri Jul 21 05:30:11 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Fri, 21 Jul 2017 05:30:11 -0700 (MST)
Subject: [gdal-dev] Downsampling with gdal_translate and overviews
In-Reply-To: <cbad1970-8051-e08c-65b5-792bbed358cd@cnes.fr>
References: <cbad1970-8051-e08c-65b5-792bbed358cd@cnes.fr>
Message-ID: <1500640211615-5328649.post@n6.nabble.com>

Julien Michel-2 wrote
> Hi all,
> 
> ...
> So here are 
> my questions :
> 
> - Is gdal_translate using the nearest overview level as a start for 
> resampling ?
> 
> - Is there a way to prevent that (other than removing the ovr file) ?
> 
> - Is it expected than the resampling yields artifacts when ovr files are 
> present ?
> 
> Thanks a lot for your help,
> 
> Regards,
> 
> Julien
> 
> -- 
> Julien MICHEL
> CNES - DSO/SI/2A


Hi,

There are some answers to your question in the gdalwarp documentation
http://www.gdal.org/gdalwarp.html.

-ovr level|AUTO|AUTO-n|NONE>:
    (GDAL >= 2.0) To specify which overview level of source files must be
used. The default choice, AUTO, will select the overview level whose
resolution is the closest to the target resolution. Specify an integer value
(0-based, i.e. 0=1st overview level) to select a particular level. Specify
AUTO-n where n is an integer greater or equal to 1, to select an overview
level below the AUTO one. Or specify NONE to force the base resolution to be
used (can be useful if overviews have been generated with a low quality
resampling method, and the warping is done using a higher quality resampling
method). 

It is also possible that a solution/workaround for your problem could be to
use gdalwarp instead of gdal_translate.

-Jukka Rahkonen-



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Downsampling-with-gdal-translate-and-overviews-tp5328648p5328649.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Fri Jul 21 13:28:25 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 21 Jul 2017 22:28:25 +0200
Subject: [gdal-dev] Downsampling with gdal_translate and overviews
In-Reply-To: <cbad1970-8051-e08c-65b5-792bbed358cd@cnes.fr>
References: <cbad1970-8051-e08c-65b5-792bbed358cd@cnes.fr>
Message-ID: <2226632.veHlDt4iM6@even-i700>

Hi Julien,

> 
> Yesterday I experienced a strange issue while downsampling image with
> gdal_translate -tr option (-filter is average). I was downsampling data
> before feeding them into a stereo reconstruction processing chain, and
> the output DSM had a clear and straight cutline in the middle of the
> image, as if the whole south part of the image was several meters lower
> than the north part. I compared the downsampled images with an in-house
> downsampling tool, and found indeed that whole rectangular portions of
> the gdal_translate output were a bit shifted (maybe less than a pixel,
> but that counts when doing stereo reconstruction). At one point I
> started suspecting my .ovr files, and indeed removing them made the
> problem disappear (I was subsampling by 10, whereas overviews have been
> generated with the classical 2 4 8 16 32 ... progression). So here are
> my questions :
> 
> - Is gdal_translate using the nearest overview level as a start for
> resampling ?

Yes. Well, "yes essentially" I should say if I'm pedantic: there's some subtely in the 
GDALBandGetBestOverviewLevel2() function in gcore/rasterio.cpp, line 3044 (a candiate 
overview level is accepted even if its resolution is lower up to 20% of the desired resolution, 
but I'm pretty sure that's subtelty is unrelated to your issue)

> 
> - Is there a way to prevent that (other than removing the ovr file) ?

I second Jukka's suggestion to try with gdalwarp. Will be somewhat slower, but you'll likely 
not get those artifacts, given that gdalwarp and gdal_translate works completely 
differently regarding how they process chunks of pixels.

If your whole image fits into RAM, you might also go on using gdal_translate, and set the 
GDAL_SWATH_SIZE environment variable to at least the uncompressed size of the image 
(value in bytes). This impacts the size of the rectangles used in 
GDALDatasetCopyWholeRaster(), which might relate with the artifacts you observe. No 
guarantee though.

> 
> - Is it expected than the resampling yields artifacts when ovr files are
> present ?

No, this is definitely not the expected behaviour. Definitely worth a ticket with ideally an 
easy way to reproduce

I somehow suspect that at some place (likely in rasterio.cpp or in vrtsources.cpp / 
vrtsourcedrasterband.cpp), although I couldn't find an obvious candidate by skimming 
quickly through them, the GDALRasterIOExtraArg argument of IRasterIO() and similar 
methods lacks a proper source window expressed as floating point coordinates, and use 
instead the base integer coordinates. Or something more subtle.

I can't really make sense why this is specific to overviews though. Are you sure the overviews 
don't already have those artifacts ? (you can extract them without any resampling with 
gdal_translate -oo OVERVIEW_LEVEL=x for example) In which case the culprit would be 
GDALRegenerateOverviews() / GDALRegenerateOverviewsMultiBand()

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170721/b6082655/attachment.html>

From mike.pfaffenberger at gmail.com  Sun Jul 23 13:32:50 2017
From: mike.pfaffenberger at gmail.com (Mike Pfaffenberger)
Date: Sun, 23 Jul 2017 16:32:50 -0400
Subject: [gdal-dev] VSIS3 on digital globe multiview-stereo (NITF)
Message-ID: <CAOVGDXmVKnr595cWpTLYQd02X_49ur2FqJsBq_OFq5=nhFB2Mw@mail.gmail.com>

Hi all,

I'm having an issue with VSIS3 on the Digital Globe multiview-stereo
imagery collection.

Here is an example command I'm running --
gdal_translate -srcwin 000 000 1000 1000 /vsis3/glitch253/test2.ntf
from_s3.nitf

So I'm simply cropping out an upper left 1000x1000 window. When I've done
this previously on data such as Landsat, this command would run very fast,
and only appear to download the necessary data.

The problem I'm having is that on this Digital Globe data, the command runs
very slowly and appears to download the entire image.

Is there a workaround for this?

By the way I'm using GDAL 2.3.0dev on trunk compiled today.

Thanks in advance!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170723/906b49a2/attachment.html>

From even.rouault at spatialys.com  Mon Jul 24 00:59:58 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 24 Jul 2017 09:59:58 +0200
Subject: [gdal-dev] VSIS3 on digital globe multiview-stereo (NITF)
In-Reply-To: <CAOVGDXmVKnr595cWpTLYQd02X_49ur2FqJsBq_OFq5=nhFB2Mw@mail.gmail.com>
References: <CAOVGDXmVKnr595cWpTLYQd02X_49ur2FqJsBq_OFq5=nhFB2Mw@mail.gmail.com>
Message-ID: <2308498.iXxxTG3XFH@even-i700>

Mike,

> 
> I'm having an issue with VSIS3 on the Digital Globe multiview-stereo
> imagery collection.
> 
> Here is an example command I'm running --
> gdal_translate -srcwin 000 000 1000 1000 /vsis3/glitch253/test2.ntf
> from_s3.nitf
> 
> So I'm simply cropping out an upper left 1000x1000 window. When I've done
> this previously on data such as Landsat, this command would run very fast,
> and only appear to download the necessary data.
> 
> The problem I'm having is that on this Digital Globe data, the command runs
> very slowly and appears to download the entire image.
> 
> Is there a workaround for this?

I'm not sure if there's something to do on the GDAL side. This might strongly depend on the 
pixel layout of the source NITF file. Could you show the output of "gdalinfo /vsis3/glitch253/
test2.ntf" ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/1dc9bca0/attachment.html>

From mike.pfaffenberger at gmail.com  Mon Jul 24 07:55:16 2017
From: mike.pfaffenberger at gmail.com (Mike Pfaffenberger)
Date: Mon, 24 Jul 2017 10:55:16 -0400
Subject: [gdal-dev] GDAL, vsis3 and vsisubfile
In-Reply-To: <1565104.I9K2dPlFCs@even-i700>
References: <CAOVGDXnGOLdkOshPQqDb6pS32WCvm4qxB5_-MrLy56U6YPL-cA@mail.gmail.com>
 <1565104.I9K2dPlFCs@even-i700>
Message-ID: <CAOVGDX=hnqhgnO4oi0S4XD_NL4+Xq_ShoQvPjnpLb26We_7iBQ@mail.gmail.com>

I turned on some debug options that shed some light on to what's going on.
It appears that the NITF driver must internally open a JPEG 2000 Driver on
a virtual subfile. In my case, that virtual subfile starts at offset 4038
and continues to the end of the file, offset 901949970.

While this is a nice way of providing a JPEG2000 decompression routine to
the NITF driver, when accessing a remote dataset, it causes the entire file
to be downloaded even when reading a small window.

I used gdal_translate locally on my NITF file and turned it into a JP2
file, then I uploaded this file to S3 and ran my gdal_translate -srcwin 000
000 1000 1000 /vsis3/mybucket/jp2file.JP2 local_file.tiff and it ran
instantly. Is there a way to completely bypass using the NITF driver and
simply open the NITF file with the JP2 driver wrapped up with vsis3?

Thank you very much for your time. Also thank you for writing the vsicurl
and vsis3 code -- it's been very useful!

On Mon, Jul 24, 2017 at 10:41 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On dimanche 23 juillet 2017 23:09:05 CEST you wrote:
>
> > Hi Even,
>
> >
>
> > I posted in the gdal-dev mailing list about reading sub-windows out of
> NITF
>
> > files in S3. I turned on some debug options that shed some light on to
>
> > what's going on. It appears that the NITF driver must internally open a
>
> > JPEG 2000 Driver on a virtual subfile. In my case, that virtual subfile
>
> > starts at offset 4038 and continues to the end of the file, offset
>
> > 901949970.
>
> >
>
> > While this is a nice way of providing a JPEG2000 decompression routine to
>
> > the NITF driver, when accessing a remote dataset, it causes the entire
> file
>
> > to be downloaded even when reading a small window.
>
> >
>
> > I used gdal_translate locally on my NITF file and turned it into a JP2
>
> > file, then I uploaded this file to S3 and ran my gdal_translate -srcwin
> 000
>
> > 000 1000 1000 /vsis3/mybucket/jp2file.JP2 local_file.tiff and it ran
>
> > instantly. Is there a way to completely bypass using the NITF driver and
>
> > simply open the NITF file with the JP2 driver wrapped up with vsis3?
>
> >
>
> > Thank you very much for your time. Also thank you for writing the vsicurl
>
> > and vsis3 code -- it's been very useful!
>
>
>
> Do you mind reposting your above findings to the gdal-dev thread so we can
> continue the exchange there ?
>
>
>
> Even
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/7147e892/attachment.html>

From mike.pfaffenberger at gmail.com  Mon Jul 24 08:15:41 2017
From: mike.pfaffenberger at gmail.com (Mike Pfaffenberger)
Date: Mon, 24 Jul 2017 11:15:41 -0400
Subject: [gdal-dev] VSIS3 on digital globe multiview-stereo (NITF)
In-Reply-To: <2308498.iXxxTG3XFH@even-i700>
References: <CAOVGDXmVKnr595cWpTLYQd02X_49ur2FqJsBq_OFq5=nhFB2Mw@mail.gmail.com>
 <2308498.iXxxTG3XFH@even-i700>
Message-ID: <CAOVGDX=2fFDGPsoRYKzhFr3yZfhnCpe7Sa05mMRPWGS2O2dAew@mail.gmail.com>

Here's the gdalinfo output:

gdalinfo /vsis3/glitch253/test2.ntf
Driver: NITF/National Imagery Transmission Format
Files: /vsis3/glitch253/test2.ntf
Size is 43008, 44032
Coordinate System is `'
GCP Projection =
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0,
        AUTHORITY["EPSG","8901"]],
    UNIT["degree",0.0174532925199433,
        AUTHORITY["EPSG","9122"]],
    AUTHORITY["EPSG","4326"]]
GCP[  0]: Id=UpperLeft, Info=
          (0.5,0.5) -> (-58.5325,-34.5383333333333,0)
GCP[  1]: Id=UpperRight, Info=
          (43007.5,0.5) -> (-58.6852777777778,-34.5422222222222,0)
GCP[  2]: Id=LowerRight, Info=
          (43007.5,44031.5) -> (-58.685,-34.4083333333333,0)
GCP[  3]: Id=LowerLeft, Info=
          (0.5,44031.5) -> (-58.5327777777778,-34.4044444444444,0)
Metadata:
  NITF_ABPP=11
  NITF_CCS_COLUMN=0
  NITF_CCS_ROW=0
  NITF_CLEVEL=06
  NITF_CSDIDA_DAY=15
  NITF_CSDIDA_MONTH=MAR
  NITF_CSDIDA_OPERATION=000
  NITF_CSDIDA_PASS=10
  NITF_CSDIDA_PLATFORM_CODE=WV
  NITF_CSDIDA_PROCESS_TIME=20151202180732
  NITF_CSDIDA_PRODUCT_ID=P1
  NITF_CSDIDA_RESERVED_0=0000
  NITF_CSDIDA_RESERVED_1=00
  NITF_CSDIDA_RESERVED_2=01
  NITF_CSDIDA_RESERVED_3=N
  NITF_CSDIDA_RESERVED_4=N
  NITF_CSDIDA_SENSOR_ID=AA
  NITF_CSDIDA_SOFTWARE_VERSION_NUMBER=4.45.6.1
  NITF_CSDIDA_TIME=20150315140133
  NITF_CSDIDA_VEHICLE_ID=03
  NITF_CSDIDA_YEAR=2015
  NITF_CSEXRA_ALONG_SCAN_GSD=013.5
  NITF_CSEXRA_ANGLE_TO_NORTH=270.000
  NITF_CSEXRA_AZ_OF_OBLIQUITY=198.341
  NITF_CSEXRA_A_S_VERT_GSD=N/A
  NITF_CSEXRA_CIRCL_ERR=016
  NITF_CSEXRA_CROSS_SCAN_GSD=013.0
  NITF_CSEXRA_C_S_VERT_GSD=N/A
  NITF_CSEXRA_DYNAMIC_RANGE=01945
  NITF_CSEXRA_GEO_MEAN_GSD=013.3
  NITF_CSEXRA_GEO_MEAN_VERT_GSD=N/A
  NITF_CSEXRA_GRD_COVER=9
  NITF_CSEXRA_GSD_BETA_ANGLE=091.8
  NITF_CSEXRA_LINEAR_ERR=016
  NITF_CSEXRA_MAX_GSD=013.3
  NITF_CSEXRA_NUM_LINES=0044032
  NITF_CSEXRA_NUM_SAMPLES=43008
  NITF_CSEXRA_OBLIQUITY_ANGLE=16.568
  NITF_CSEXRA_PREDICTED_NIIRS=5.6
  NITF_CSEXRA_SENSOR=PAN
  NITF_CSEXRA_SNOW_DEPTH_CAT=9
  NITF_CSEXRA_SUN_AZIMUTH=048.094
  NITF_CSEXRA_SUN_ELEVATION=+47.090
  NITF_CSEXRA_TIME_FIRST_LINE_IMAGE=50493.612175
  NITF_CSEXRA_TIME_IMAGE_DURATION=-0002.160750
  NITF_ENCRYP=0
  NITF_FBKGC=126,126,126
  NITF_FDT=20151203163736
  NITF_FHDR=NITF02.10
  NITF_FSCATP=
  NITF_FSCAUT=
  NITF_FSCLAS=U
  NITF_FSCLSY=US
  NITF_FSCLTX=
  NITF_FSCODE=
  NITF_FSCOP=00000
  NITF_FSCPYS=00000
  NITF_FSCRSN=
  NITF_FSCTLH=0
  NITF_FSCTLN=
  NITF_FSDCDT=
  NITF_FSDCTP=
  NITF_FSDCXM=
  NITF_FSDG=
  NITF_FSDGDT=
  NITF_FSREL=
  NITF_FSSRDT=

NITF_FTITLE=15MAR15WV031000015MAR15140133-P1BS-500497284070_01_P001
AAE 0AAAAABPABQ0
  NITF_IALVL=0
  NITF_IC=C8
  NITF_ICAT=VIS
  NITF_ICORDS=G
  NITF_IDATIM=20150315140133
  NITF_IDLVL=1
  NITF_IGEOLO=343218S0583157W343232S0584107W342430S0584106W342416S0583158W
  NITF_IID1=P109BED300
  NITF_IID2=15MAR15WV031000015MAR15140133-P1BS-500497284070_01_P001
AAE 0AAAAABPABQ0
  NITF_ILOC_COLUMN=0
  NITF_ILOC_ROW=0
  NITF_IMAG=1.0
  NITF_IMAGE_COMMENTS=The imagery and metadata data on this media is the
property of                  DigitalGlobe and is licensed for use only. All
use must be in                   accordance with the terms of the license
that accompanies the media.            If the license is purchased under
contract NMA 301 99 D003, use is              in accordance with the
license therein
  NITF_IMODE=B
  NITF_IREP=MONO
  NITF_ISCATP=
  NITF_ISCAUT=
  NITF_ISCLAS=U
  NITF_ISCLSY=US
  NITF_ISCLTX=
  NITF_ISCODE=
  NITF_ISCRSN=
  NITF_ISCTLH=0
  NITF_ISCTLN=
  NITF_ISDCDT=
  NITF_ISDCTP=
  NITF_ISDCXM=
  NITF_ISDG=
  NITF_ISDGDT=
  NITF_ISORCE=DigitalGlobe
  NITF_ISREL=
  NITF_ISSRDT=
  NITF_ONAME=
  NITF_OPHONE=
  NITF_OSTAID=NDL-W
  NITF_PIAIMC_CAMSPECS=
  NITF_PIAIMC_CLOUDCVR=000
  NITF_PIAIMC_COMGEN=00
  NITF_PIAIMC_ESD=Y
  NITF_PIAIMC_GENERATION=1
  NITF_PIAIMC_IDATUM=WGE
  NITF_PIAIMC_IELLIP=
  NITF_PIAIMC_IPROJ=
  NITF_PIAIMC_MEANGSD=00013.3
  NITF_PIAIMC_OTHERCOND=
  NITF_PIAIMC_PIAMSNNUM=
  NITF_PIAIMC_PREPROC=1R
  NITF_PIAIMC_PROJID=
  NITF_PIAIMC_SATTRACK=00000000
  NITF_PIAIMC_SENSMODE=PUSHBROOM
  NITF_PIAIMC_SENSNAME=WV03
  NITF_PIAIMC_SOURCE=VNIR: 1040010009BED300
  NITF_PIAIMC_SRP=Y
  NITF_PIAIMC_SUBQUAL=
  NITF_PJUST=R
  NITF_PVTYPE=INT
  NITF_STDIDC_ACQUISITION_DATE=20150315140133
  NITF_STDIDC_COUNTRY=AR
  NITF_STDIDC_END_COLUMN=042
  NITF_STDIDC_END_ROW=00043
  NITF_STDIDC_END_SEGMENT=AA
  NITF_STDIDC_LOCATION=3432S05837W
  NITF_STDIDC_MISSION=WV03
  NITF_STDIDC_OP_NUM=000
  NITF_STDIDC_PASS=10
  NITF_STDIDC_REPLAY_REGEN=000
  NITF_STDIDC_REPRO_NUM=00
  NITF_STDIDC_START_COLUMN=001
  NITF_STDIDC_START_ROW=00001
  NITF_STDIDC_START_SEGMENT=AA
  NITF_STDIDC_WAC=
  NITF_STYPE=BF01
  NITF_TGTID=
  NITF_USE00A_ANGLE_TO_NORTH=270
  NITF_USE00A_DYNAMIC_RANGE=02046
  NITF_USE00A_MAX_LP_SEG=043216
  NITF_USE00A_MEAN_GSD=013.3
  NITF_USE00A_N_REF=00
  NITF_USE00A_N_SEG=001
  NITF_USE00A_OBL_ANG=16.57
  NITF_USE00A_REV_NUM=03174
  NITF_USE00A_ROLL_ANG=-05.54
  NITF_USE00A_SUN_AZ=048.1
  NITF_USE00A_SUN_EL=+47.1
Image Structure Metadata:
  COMPRESSION=JPEG2000
Subdatasets:
  SUBDATASET_1_NAME=NITF_IM:0:/vsis3/glitch253/test2.ntf
  SUBDATASET_1_DESC=Image 1 of /vsis3/glitch253/test2.ntf
  SUBDATASET_2_NAME=NITF_IM:1:/vsis3/glitch253/test2.ntf
  SUBDATASET_2_DESC=Image 2 of /vsis3/glitch253/test2.ntf
RPC Metadata:
  HEIGHT_OFF=30
  HEIGHT_SCALE=502
  LAT_OFF=-34.4734
  LAT_SCALE=0.0703
  LINE_DEN_COEFF=1 -7.820395e-05 -2.669502e-05 -8.850493e-06 1.414223e-05
-1.548651e-07 -1.060036e-05 4.346602e-05 -0.0001314038 5.799668e-05
2.949456e-07 0 7.908338000000001e-06 0 9.118064000000001e-08 -3.922194e-05
-1.72329e-08 0 -2.018329e-06 0
  LINE_NUM_COEFF=0.0002958248 -0.02963833 1.049996 0.02072787 6.667386e-05
1.687254e-06 2.64655e-06 -0.0005267895 -0.0002565297 -1.435182e-06
-6.953109e-07 -1.344296e-06 -9.874576e-06 -1.732024e-06 4.611917e-05
0.0002160089 6.110935e-05 9.296905e-07 7.265858e-06 1.203192e-06
  LINE_OFF=21607
  LINE_SCALE=21608
  LONG_OFF=-58.6088
  LONG_SCALE=0.077
  MAX_LAT=-34.43825
  MAX_LONG=-58.5703
  MIN_LAT=-34.50855
  MIN_LONG=-58.6473
  SAMP_DEN_COEFF=1 -1.469918e-05 -0.0006828607 -0.0004498713 -2.440384e-05
1.574905e-07 -6.752665e-07 2.77071e-06 -8.888868e-06 -1.083016e-06
-3.791422e-08 0 -4.670506e-07 0 7.583037e-08 -1.150001e-06 0 0
-4.552579e-08 0
  SAMP_NUM_COEFF=-0.00126101 -1.009822 -3.573786e-05 -0.007359501
-0.0006781537 -0.0004362946 0.0001916278 0.001249532 -0.0006199303
1.366175e-06 -7.346167e-07 3.531102e-06 -5.858416e-06 7.633005e-07
-5.325952e-06 0.0002869756 4.350662e-07 7.059197e-07 1.735672e-05
1.023288e-08
  SAMP_OFF=21249
  SAMP_SCALE=21250
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,44032.0)
Upper Right (43008.0,    0.0)
Lower Right (43008.0,44032.0)
Center      (21504.0,22016.0)
Band 1 Block=1024x1024 Type=UInt16, ColorInterp=Gray
  Overviews: 21504x22016, 10752x11008, 5376x5504, 2688x2752, 1344x1376
  Overviews: arbitrary
  Image Structure Metadata:
    COMPRESSION=JPEG2000
    NBITS=11


On Mon, Jul 24, 2017 at 3:59 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Mike,
>
>
>
> >
>
> > I'm having an issue with VSIS3 on the Digital Globe multiview-stereo
>
> > imagery collection.
>
> >
>
> > Here is an example command I'm running --
>
> > gdal_translate -srcwin 000 000 1000 1000 /vsis3/glitch253/test2.ntf
>
> > from_s3.nitf
>
> >
>
> > So I'm simply cropping out an upper left 1000x1000 window. When I've done
>
> > this previously on data such as Landsat, this command would run very
> fast,
>
> > and only appear to download the necessary data.
>
> >
>
> > The problem I'm having is that on this Digital Globe data, the command
> runs
>
> > very slowly and appears to download the entire image.
>
> >
>
> > Is there a workaround for this?
>
>
>
> I'm not sure if there's something to do on the GDAL side. This might
> strongly depend on the pixel layout of the source NITF file. Could you show
> the output of "gdalinfo /vsis3/glitch253/test2.ntf" ?
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/73a1397f/attachment-0001.html>

From even.rouault at spatialys.com  Mon Jul 24 08:21:19 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 24 Jul 2017 17:21:19 +0200
Subject: [gdal-dev] GDAL, vsis3 and vsisubfile
In-Reply-To: <CAOVGDX=hnqhgnO4oi0S4XD_NL4+Xq_ShoQvPjnpLb26We_7iBQ@mail.gmail.com>
References: <CAOVGDXnGOLdkOshPQqDb6pS32WCvm4qxB5_-MrLy56U6YPL-cA@mail.gmail.com>
 <1565104.I9K2dPlFCs@even-i700>
 <CAOVGDX=hnqhgnO4oi0S4XD_NL4+Xq_ShoQvPjnpLb26We_7iBQ@mail.gmail.com>
Message-ID: <12110640.SgVFFN3ugM@even-i700>

Mike,

(note to other readers: this is the continuation of the thread
[gdal-dev] VSIS3 on digital globe multiview-stereo (NITF) )

> I turned on some debug options that shed some light on to what's going on.
> It appears that the NITF driver must internally open a JPEG 2000 Driver on
> a virtual subfile. In my case, that virtual subfile starts at offset 4038
> and continues to the end of the file, offset 901949970.
> 
> While this is a nice way of providing a JPEG2000 decompression routine to
> the NITF driver, when accessing a remote dataset, it causes the entire file
> to be downloaded even when reading a small window.
> 
> I used gdal_translate locally on my NITF file and turned it into a JP2
> file, then I uploaded this file to S3 and ran my gdal_translate -srcwin 000
> 000 1000 1000 /vsis3/mybucket/jp2file.JP2 local_file.tiff and it ran
> instantly. Is there a way to completely bypass using the NITF driver and
> simply open the NITF file with the JP2 driver wrapped up with vsis3?

Yes, you should be able to open the following filename, but this is actually what the NITF 
driver does :
/vsisubfile/4038_901949970,/vsis3/glitch253/test2.ntf  (you may need to adjust the second 
value '901949970' to be 901949970-4038, since it is supposed to be a lenght and not an 
offset)
This shoud be recognized by one of the JPEG2000 drivers, and you should likely get the same 
performance characteristics as using it through the NITF driver (or the NITF driver does 
something that requires reading the whole file, but I don't think so)

My hypothesis is that the root cause of the performance issue comes is the progression order 
of the JPEG2000 codestream of this NITF file, that causes most of the file to be read through. 
Likely only X % of bytes are really read, but as they are scattered throughout the whole file, 
given the chunk by chunk downloading logic of /vsis3, you end up reading the whole file in 
practice.
For example I'd expect LRCP (Layer-Resolution-Component-Precincts), RLCP and RPCL to 
cause issues. Whereas PCRL and CPRL should perform better for windowed requests.

http://www.gwg.nga.mil/ntb/baseline/docs/bpj2k01/ISOJ2K_profile.pdf recommands using 
LRCP with 19-20 quality layers, so that would indeed cause a lot of seeking through the file. 
You can check the progression order in the output of the following (check for 
"SGcod_Progress")

python dump_jp2.py /vsisubfile/4038_901949970,/vsis3/glitch253/test2.ntf

where dump_jp2.py is
https://svn.osgeo.org/gdal/trunk/gdal/swig/python/samples/dump_jp2.py

It is likely that your translating into JP2 turn the original codestream into one with a 
progression order that is more seeking friendly (the default progression order may be 
different depending on drivers)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/07b90598/attachment.html>

From randre at gmail.com  Mon Jul 24 08:43:02 2017
From: randre at gmail.com (=?UTF-8?B?Um9nZXIgQW5kcsOp?=)
Date: Mon, 24 Jul 2017 08:43:02 -0700
Subject: [gdal-dev] Python feature.SetField() fails with unicode strings
Message-ID: <CAOL+ROG8fandm-8L3pHMfiXP412Dr4PzLMEAYp5U6ZdnsmkwmA@mail.gmail.com>

Good morning,

I've been working on a simple script to load GeoJSON into PostGIS.  I'm
encountering an error that has me scratching my head, it seems that unicode
strings cannot be used with the feature.SetField() function in Python.  Is
that really true?

I've tested this by re-writing the variable inline from my test record and
can confirm that when it is type <str> it works, and when it is type
<unicode> it fails with the following error.

 *NotImplementedError: Wrong number of arguments for overloaded function
'Feature_SetField'.*

I foind an old ticket that talks about this,
https://trac.osgeo.org/gdal/ticket/4608, but I'm not having any luck
getting this to work.

My GDAL version info is GDAL 1.11.0, released 2014/04/16.

To reiterate, I'm simply parsing a field from a UTF-8 encoded JSON record
and trying to push it into PostGIS.

Thank you for your time.

Roger
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/b076c1c6/attachment.html>

From even.rouault at spatialys.com  Mon Jul 24 08:46:50 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 24 Jul 2017 17:46:50 +0200
Subject: [gdal-dev] Python feature.SetField() fails with unicode strings
In-Reply-To: <CAOL+ROG8fandm-8L3pHMfiXP412Dr4PzLMEAYp5U6ZdnsmkwmA@mail.gmail.com>
References: <CAOL+ROG8fandm-8L3pHMfiXP412Dr4PzLMEAYp5U6ZdnsmkwmA@mail.gmail.com>
Message-ID: <2243357.U7yngKvUtb@even-i700>

On lundi 24 juillet 2017 08:43:02 CEST Roger André wrote:
> Good morning,
> 
> I've been working on a simple script to load GeoJSON into PostGIS.  I'm
> encountering an error that has me scratching my head, it seems that unicode
> strings cannot be used with the feature.SetField() function in Python.  Is
> that really true?
> 
> I've tested this by re-writing the variable inline from my test record and
> can confirm that when it is type <str> it works, and when it is type
> <unicode> it fails with the following error.
> 
>  *NotImplementedError: Wrong number of arguments for overloaded function
> 'Feature_SetField'.*
> 
> I foind an old ticket that talks about this,
> https://trac.osgeo.org/gdal/ticket/4608, but I'm not having any luck
> getting this to work.

This ticket was fixed in GDAL 2.0. There might have been other fixes since. So basically you 
should try upgrading. Or as a workaround use your_string.encode('utf-8') to transform from 
Unicode to UTF-8 encoded string.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/bb850255/attachment.html>

From randre at gmail.com  Mon Jul 24 11:36:30 2017
From: randre at gmail.com (=?UTF-8?B?Um9nZXIgQW5kcsOp?=)
Date: Mon, 24 Jul 2017 11:36:30 -0700
Subject: [gdal-dev] Python feature.SetField() fails with unicode strings
In-Reply-To: <2243357.U7yngKvUtb@even-i700>
References: <CAOL+ROG8fandm-8L3pHMfiXP412Dr4PzLMEAYp5U6ZdnsmkwmA@mail.gmail.com>
 <2243357.U7yngKvUtb@even-i700>
Message-ID: <CAOL+ROGn+Xu=EV8fySTL6A2nAicm6OhVFhyn=5euJpczgJdZoA@mail.gmail.com>

Hi Even,

Thank you for this information.  I'll see about getting the latest version
of GDAL installed on my system.  I tried using the string.encode('utf-8')
workaround and continue to get the same error.

Roger

On Mon, Jul 24, 2017 at 8:46 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 24 juillet 2017 08:43:02 CEST Roger André wrote:
>
> > Good morning,
>
> >
>
> > I've been working on a simple script to load GeoJSON into PostGIS. I'm
>
> > encountering an error that has me scratching my head, it seems that
> unicode
>
> > strings cannot be used with the feature.SetField() function in Python. Is
>
> > that really true?
>
> >
>
> > I've tested this by re-writing the variable inline from my test record
> and
>
> > can confirm that when it is type <str> it works, and when it is type
>
> > <unicode> it fails with the following error.
>
> >
>
> > *NotImplementedError: Wrong number of arguments for overloaded function
>
> > 'Feature_SetField'.*
>
> >
>
> > I foind an old ticket that talks about this,
>
> > https://trac.osgeo.org/gdal/ticket/4608, but I'm not having any luck
>
> > getting this to work.
>
>
>
> This ticket was fixed in GDAL 2.0. There might have been other fixes
> since. So basically you should try upgrading. Or as a workaround use
> your_string.encode('utf-8') to transform from Unicode to UTF-8 encoded
> string.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/1d693d3f/attachment-0001.html>

From mike.pfaffenberger at gmail.com  Mon Jul 24 19:41:05 2017
From: mike.pfaffenberger at gmail.com (Mike Pfaffenberger)
Date: Mon, 24 Jul 2017 22:41:05 -0400
Subject: [gdal-dev] GDAL, vsis3 and vsisubfile
In-Reply-To: <12110640.SgVFFN3ugM@even-i700>
References: <CAOVGDXnGOLdkOshPQqDb6pS32WCvm4qxB5_-MrLy56U6YPL-cA@mail.gmail.com>
 <1565104.I9K2dPlFCs@even-i700>
 <CAOVGDX=hnqhgnO4oi0S4XD_NL4+Xq_ShoQvPjnpLb26We_7iBQ@mail.gmail.com>
 <12110640.SgVFFN3ugM@even-i700>
Message-ID: <CAOVGDXkuPY3QXxiKdW-088QH5EQd+bpRrdphf3dBiMDQdBfVVA@mail.gmail.com>

Hi Even,

I ran the script you linked, and your hypothesis is absolutely correct.

<JP2KCodeStream filename="/vsisubfile/4038_901949970,/vsis3/glitch253/
test2.ntf">
.
.
.
<Field name="SGcod_Progress" type="uint8" description="RLCP">1</Field>
<Field name="SGcod_NumLayers" type="uint16">19</Field>

I also added a quick printf in the vsi subfile read function which prints
the nSize and nCount variables. Running the python script you linked me
triggered the vsi subfile read function 75,868 times, mostly with small
sizes, and nCount=1.

Doing the same thing on my gdal_translate -srcwin 000 000 1000 1000
triggered vsi subfile read 9,024 times, almost all with nSize=1 and
nCount=1024. If the vsisubfile object is wrapping a vsis3 dataset, then
does each vsi subfile read turn into an HTTP request? That would certainly
explain the extremely long time to crop my window.

Just out of curiosity I ran the python script you linked on my JP2 file
(same image as the NITF, I just ran gdal_translate on it).

This one appears to have the codestream progression order LRCP with only
one layer...?:
 <Field name="SGcod_Progress" type="uint8" description="LRCP">0</Field>
 <Field name="SGcod_NumLayers" type="uint16">1</Field>

I'm guessing the fact that my JP2 file only has one layer is the reason
vsis3 works well with it, regardless of it being LRCP (not optimal for
windowed reads).

Anyway, thanks. I learned some more about JPEG2K here. Unfortunately I
think I'm pretty out of luck on the prospect of doing remote windowed reads
quickly on this data. However, I'm very open to suggestions if anyone has
any ideas on how it might work.

Cheers.

On Mon, Jul 24, 2017 at 11:21 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Mike,
>
>
>
> (note to other readers: this is the continuation of the thread
>
> [gdal-dev] VSIS3 on digital globe multiview-stereo (NITF) )
>
>
>
> > I turned on some debug options that shed some light on to what's going
> on.
>
> > It appears that the NITF driver must internally open a JPEG 2000 Driver
> on
>
> > a virtual subfile. In my case, that virtual subfile starts at offset 4038
>
> > and continues to the end of the file, offset 901949970.
>
> >
>
> > While this is a nice way of providing a JPEG2000 decompression routine to
>
> > the NITF driver, when accessing a remote dataset, it causes the entire
> file
>
> > to be downloaded even when reading a small window.
>
> >
>
> > I used gdal_translate locally on my NITF file and turned it into a JP2
>
> > file, then I uploaded this file to S3 and ran my gdal_translate -srcwin
> 000
>
> > 000 1000 1000 /vsis3/mybucket/jp2file.JP2 local_file.tiff and it ran
>
> > instantly. Is there a way to completely bypass using the NITF driver and
>
> > simply open the NITF file with the JP2 driver wrapped up with vsis3?
>
>
>
> Yes, you should be able to open the following filename, but this is
> actually what the NITF driver does :
>
> /vsisubfile/4038_901949970,/vsis3/glitch253/test2.ntf (you may need to
> adjust the second value '901949970' to be 901949970-4038, since it is
> supposed to be a lenght and not an offset)
>
> This shoud be recognized by one of the JPEG2000 drivers, and you should
> likely get the same performance characteristics as using it through the
> NITF driver (or the NITF driver does something that requires reading the
> whole file, but I don't think so)
>
>
>
> My hypothesis is that the root cause of the performance issue comes is the
> progression order of the JPEG2000 codestream of this NITF file, that causes
> most of the file to be read through. Likely only X % of bytes are really
> read, but as they are scattered throughout the whole file, given the chunk
> by chunk downloading logic of /vsis3, you end up reading the whole file in
> practice.
>
> For example I'd expect LRCP (Layer-Resolution-Component-Precincts), RLCP
> and RPCL to cause issues. Whereas PCRL and CPRL should perform better for
> windowed requests.
>
>
>
> http://www.gwg.nga.mil/ntb/baseline/docs/bpj2k01/ISOJ2K_profile.pdf
> recommands using LRCP with 19-20 quality layers, so that would indeed cause
> a lot of seeking through the file. You can check the progression order in
> the output of the following (check for "SGcod_Progress")
>
>
>
> python dump_jp2.py /vsisubfile/4038_901949970,/vsis3/glitch253/test2.ntf
>
>
>
> where dump_jp2.py is
>
> https://svn.osgeo.org/gdal/trunk/gdal/swig/python/samples/dump_jp2.py
>
>
>
> It is likely that your translating into JP2 turn the original codestream
> into one with a progression order that is more seeking friendly (the
> default progression order may be different depending on drivers)
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170724/ad57b35f/attachment.html>

From even.rouault at spatialys.com  Tue Jul 25 01:19:56 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jul 2017 10:19:56 +0200
Subject: [gdal-dev] GDAL, vsis3 and vsisubfile
In-Reply-To: <CAOVGDXkuPY3QXxiKdW-088QH5EQd+bpRrdphf3dBiMDQdBfVVA@mail.gmail.com>
References: <CAOVGDXnGOLdkOshPQqDb6pS32WCvm4qxB5_-MrLy56U6YPL-cA@mail.gmail.com>
 <12110640.SgVFFN3ugM@even-i700>
 <CAOVGDXkuPY3QXxiKdW-088QH5EQd+bpRrdphf3dBiMDQdBfVVA@mail.gmail.com>
Message-ID: <3146636.p838Mlu65n@even-i700>

On lundi 24 juillet 2017 22:41:05 CEST Mike Pfaffenberger wrote:
> Hi Even,
> 
> I ran the script you linked, and your hypothesis is absolutely correct.
> 
> <JP2KCodeStream filename="/vsisubfile/4038_901949970,/vsis3/glitch253/
> test2.ntf">
> .
> .
> .
> <Field name="SGcod_Progress" type="uint8" description="RLCP">1</Field>
> <Field name="SGcod_NumLayers" type="uint16">19</Field>
> 
> I also added a quick printf in the vsi subfile read function which prints
> the nSize and nCount variables. Running the python script you linked me
> triggered the vsi subfile read function 75,868 times, mostly with small
> sizes, and nCount=1.
> 
> Doing the same thing on my gdal_translate -srcwin 000 000 1000 1000
> triggered vsi subfile read 9,024 times, almost all with nSize=1 and
> nCount=1024. If the vsisubfile object is wrapping a vsis3 dataset, then
> does each vsi subfile read turn into an HTTP request? 

Not exactly. /vsis3/ reads by chunks of a minimum 16 KB (with a logic to grow this chunk size 
when it realizes that the chunks are consecutive), and with a cache, to avoid issuing too many 
small HTTP range requests. The issue with the original NITF file are that those small sizes 
must be scattered through the whole file, causing a lot of 16 KB chunks to be read. I doubt 
that reducing the chunk size would really help with performance because the bottleneck 
must be more the latency of each HTTP request than the amount of bytes transfered.

That said it is not difficult to try. You can edit the port/cpl_vsil_curl.cpp file and modify the 
value of the DOWNLOAD_CHUNK_SIZE constant to be something smaller than the current 
16384 (e.g try 1024)

LRCP with many quality layers is ideal when you want to be able to do a progressive 
rendering of the whole image. Remember the old times of super slow Internet where your 
browser would display a progressive JPEG or PNG with growing quality.

> That would certainly
> explain the extremely long time to crop my window.
> 
> Just out of curiosity I ran the python script you linked on my JP2 file
> (same image as the NITF, I just ran gdal_translate on it).
> 
> This one appears to have the codestream progression order LRCP with only
> one layer...?:
>  <Field name="SGcod_Progress" type="uint8" description="LRCP">0</Field>
>  <Field name="SGcod_NumLayers" type="uint16">1</Field>
> 
> I'm guessing the fact that my JP2 file only has one layer is the reason
> vsis3 works well with it, regardless of it being LRCP (not optimal for
> windowed reads).

When one of the L, R, C, P "dimension" is of size 1, it doesn't really count. So with one single 
quality layer, this is in fact a RCP layout, which means that resolution level are scattered 
through the files. It is still not the ideal layout fro windowed reads at full resolution (unless 
there's just one resolution level. You can check it with the value of 
<SPcod_NumDecompositions>)

> 
> Anyway, thanks. I learned some more about JPEG2K here. Unfortunately I
> think I'm pretty out of luck on the prospect of doing remote windowed reads
> quickly on this data.

Yes, I don' think it is really possible to improve that with those datasets unmodified.

I l believe that there are some JPEG2000 toolkits that can change the progression order of an 
existing JPEG2000 file without adding new loss (even if it uses lossy compression).

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/29be4a0b/attachment-0001.html>

From gregory.bataille at gmail.com  Tue Jul 25 02:00:36 2017
From: gregory.bataille at gmail.com (=?UTF-8?Q?Gr=C3=A9gory_Bataille?=)
Date: Tue, 25 Jul 2017 11:00:36 +0200
Subject: [gdal-dev] Bus error on gdal.Open
Message-ID: <CACVcCzoEdCEZsOCZxJWJyQfHZ9rkgHDgtFxJm=HGOPQzEQFs8A@mail.gmail.com>

Hi everyone,

I have the strangest issue and I don't know how to address it.
I'm running on a *mac*. I have *gdal 2.2.0* installed on the system.
I have a python 3.5.2 *virtualenv* (same behavior in 3.6.1)
inside I have a number of libraries, including django and the *GDAL
bindings*.

If from this virtualenv I open a *ipython* console and try to gdal.Open a
TIFF, *all works well*.
If I open a *django console* (django manage.py shell) in this virtualenv
and try to perform the same operation, I get

> TIFFReadDirectory: Warning, Unknown field with tag 42112 (0xa480)
> encountered.
> TIFFReadDirectory: Warning, Unknown field with tag 42113 (0xa481)
> encountered.
> [1]    15947 bus error  python manage.py shell


This happens also if I go through the django.contrib.gis.gdal module that
django embarks (that is a subpart, old? of gdal bindings)

This *does not* seem to *happen on my production Linux* install.

I have no idea how to investigate this. I don't know what django could do
at startup that could have this kind of adverse effect.
(if there are django knowledgeable people, I get the same error when
launching the code through celery)

According to the django code, launching a django shell should basically be
equivalent to launching a ipython
https://github.com/django/django/blob/master/django/core/management/commands/shell.py

Any idea what I can try to do?

Thanks

---
Gregory Bataille
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/03763924/attachment.html>

From even.rouault at spatialys.com  Tue Jul 25 02:37:13 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jul 2017 11:37:13 +0200
Subject: [gdal-dev] Bus error on gdal.Open
In-Reply-To: <CACVcCzoEdCEZsOCZxJWJyQfHZ9rkgHDgtFxJm=HGOPQzEQFs8A@mail.gmail.com>
References: <CACVcCzoEdCEZsOCZxJWJyQfHZ9rkgHDgtFxJm=HGOPQzEQFs8A@mail.gmail.com>
Message-ID: <2319281.tmSXG7FT06@even-i700>

On mardi 25 juillet 2017 11:00:36 CEST Grégory Bataille wrote:
> Hi everyone,
> 
> I have the strangest issue and I don't know how to address it.
> I'm running on a *mac*. I have *gdal 2.2.0* installed on the system.
> I have a python 3.5.2 *virtualenv* (same behavior in 3.6.1)
> inside I have a number of libraries, including django and the *GDAL
> bindings*.
> 
> If from this virtualenv I open a *ipython* console and try to gdal.Open a
> TIFF, *all works well*.
> If I open a *django console* (django manage.py shell) in this virtualenv
> and try to perform the same operation, I get
> 
> > TIFFReadDirectory: Warning, Unknown field with tag 42112 (0xa480)
> > encountered.
> > TIFFReadDirectory: Warning, Unknown field with tag 42113 (0xa481)
> > encountered.

This is weird. Those are the TIFFTAG_GDAL_METADATA and TIFFTAG_GDAL_NODATA tags 
that are defined by the GDAL GTiff driver. So if you open something with GDALOpen() that 
shouldn't happen normally

I'm wondering if in your whole system you don't have several libtiff versions mixed together. 
How is your GDAL configured ? If it uses internal libtiff and libgeotiff, make sure to ./
configure --with-rename-internal-libtiff-symbols and --with-rename-internal-libgeotiff-
symbols so that the internal libtiff and libgeotiff in GDAL do not collide with other.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/0c1f43a3/attachment.html>

From gregory.bataille at gmail.com  Tue Jul 25 03:17:14 2017
From: gregory.bataille at gmail.com (=?UTF-8?Q?Gr=C3=A9gory_Bataille?=)
Date: Tue, 25 Jul 2017 12:17:14 +0200
Subject: [gdal-dev] Bus error on gdal.Open
In-Reply-To: <2319281.tmSXG7FT06@even-i700>
References: <CACVcCzoEdCEZsOCZxJWJyQfHZ9rkgHDgtFxJm=HGOPQzEQFs8A@mail.gmail.com>
 <2319281.tmSXG7FT06@even-i700>
Message-ID: <CACVcCzqWv9NjppJx6N_yXO8yT0Rq4CK67t_jSBRFXp=gr41sJA@mail.gmail.com>

that's the part where I'm not sure. For simplicity sake, I'm sourcing the
GDAL install from osgeo4mac
https://github.com/OSGeo/homebrew-osgeo4mac

It's super practical. And since I'm not big on C compiling (and setup of
compilation), that's helpful. But then I don't know what it does.

Also, those 2 lines are warning. I don't know if they are the one causing
the bus error and the subsequent crash of the console.

But you are right that I seem to have several libtiff
4.0.8
4.0.7_3
4.0.7_2
4.0.7_1
4.0.7

I tried to remove gdal, and the python bindings and reinstall from scratch
again, but same result.

What I really can't understand is that ipython and ipython launched through
django, in the same virtualenv, give different results


---
Gregory Bataille

On Tue, Jul 25, 2017 at 11:37 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On mardi 25 juillet 2017 11:00:36 CEST Grégory Bataille wrote:
>
> > Hi everyone,
>
> >
>
> > I have the strangest issue and I don't know how to address it.
>
> > I'm running on a *mac*. I have *gdal 2.2.0* installed on the system.
>
> > I have a python 3.5.2 *virtualenv* (same behavior in 3.6.1)
>
> > inside I have a number of libraries, including django and the *GDAL
>
> > bindings*.
>
> >
>
> > If from this virtualenv I open a *ipython* console and try to gdal.Open a
>
> > TIFF, *all works well*.
>
> > If I open a *django console* (django manage.py shell) in this virtualenv
>
> > and try to perform the same operation, I get
>
> >
>
> > > TIFFReadDirectory: Warning, Unknown field with tag 42112 (0xa480)
>
> > > encountered.
>
> > > TIFFReadDirectory: Warning, Unknown field with tag 42113 (0xa481)
>
> > > encountered.
>
>
>
> This is weird. Those are the TIFFTAG_GDAL_METADATA and TIFFTAG_GDAL_NODATA
> tags that are defined by the GDAL GTiff driver. So if you open something
> with GDALOpen() that shouldn't happen normally
>
>
>
> I'm wondering if in your whole system you don't have several libtiff
> versions mixed together. How is your GDAL configured ? If it uses internal
> libtiff and libgeotiff, make sure to ./configure --with-rename-internal-libtiff-symbols
> and --with-rename-internal-libgeotiff-symbols so that the internal
> libtiff and libgeotiff in GDAL do not collide with other.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/b7d5fe6a/attachment.html>

From daniele.romagnoli at geo-solutions.it  Tue Jul 25 06:33:50 2017
From: daniele.romagnoli at geo-solutions.it (Daniele Romagnoli)
Date: Tue, 25 Jul 2017 15:33:50 +0200
Subject: [gdal-dev] Is Internal JPEG compression allowed on RGBA GeoTIFF?
Message-ID: <CAJaHrDzqHXHuxcXXi=1R5F685xki808R-oa6UaJXG9n8XrpUQg@mail.gmail.com>

Dear all,
I was always thinking that JPEG doesn't support transparency so that it
would not be possible to convert a 4 bands GeoTIFF using JPEG compression
(without using internal binary mask).

However, I just did a gdal_translate -ot byte -scale -CO COMPRESS=JPEG
4bands.tif rgba_jpeg.tif and it "worked".

The gdalinfo output on the new file reports 4 bands dataset with
Gray,Green,Blue,Alpha colors.

Does the TIFF specification allows that?
I still have to read it again to check if/how alpha and JPEG compression
are related, but I'm wondering if you have any feedback on this topic in
order to understand if a "standard" GeoTIFF reader should be able to deal
with that or not and how to deal with the Alpha band (which at this point
would be a Lossy band, containing artifacts).

Feedbacks are welcome.
Regards,
Daniele










-- 
Regards,
Daniele Romagnoli
==
GeoServer Professional Services from the experts! Visit http://goo.gl/it488V
for more information.
==

Ing. Daniele Romagnoli
Senior Software Engineer

GeoSolutions S.A.S.
Via di Montramito 3/A
55054  Massarosa (LU)
Italy
phone: +39 0584 962313
fax:      +39 0584 1660272

http://www.geo-solutions.it
http://twitter.com/geosolutions_it

-------------------------------------------------------
AVVERTENZE AI SENSI DEL D.Lgs. 196/2003
Le informazioni contenute in questo messaggio di posta elettronica e/o
nel/i file/s allegato/i sono da considerarsi strettamente riservate. Il
loro utilizzo è consentito esclusivamente al destinatario del messaggio,
per le finalità indicate nel messaggio stesso. Qualora riceviate questo
messaggio senza esserne il destinatario, Vi preghiamo cortesemente di
darcene notizia via e-mail e di procedere alla distruzione del messaggio
stesso, cancellandolo dal Vostro sistema. Conservare il messaggio stesso,
divulgarlo anche in parte, distribuirlo ad altri soggetti, copiarlo, od
utilizzarlo per finalità diverse, costituisce comportamento contrario ai
principi dettati dal D.Lgs. 196/2003.

The information in this message and/or attachments, is intended solely for
the attention and use of the named addressee(s) and may be confidential or
proprietary in nature or covered by the provisions of privacy act
(Legislative Decree June, 30 2003, no.196 - Italy's New Data Protection
Code).Any use not in accord with its purpose, any disclosure, reproduction,
copying, distribution, or either dissemination, either whole or partial, is
strictly forbidden except previous formal approval of the named
addressee(s). If you are not the intended recipient, please contact
immediately the sender by telephone, fax or e-mail and delete the
information in this message that has been received in error. The sender
does not give any warranty or accept liability as the content, accuracy or
completeness of sent messages and accepts no responsibility  for changes
made after they were sent or for other risks which arise as a result of
e-mail transmission, viruses, etc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/112cee76/attachment-0001.html>

From Tim.Harris at digitalglobe.com  Tue Jul 25 09:36:17 2017
From: Tim.Harris at digitalglobe.com (Tim Harris)
Date: Tue, 25 Jul 2017 16:36:17 +0000
Subject: [gdal-dev] OSM conversion failure
Message-ID: <47da1bd990854713b4c8cd4e77235ed0@PW00INFMAI022.ent.ad.dg.local>

I placed a small test file here: https://s3.amazonaws.com/osm-test-data/test.pbf

With the latest trunk, when I run this command:

ogr2ogr test.shp test.pbf multipolygons

The result shapefile I get appears to be empty. I've also tried with release 2.1.2 and that result shapefile is not empty. So it seems like some recent change may have broken the OSM driver.

This electronic communication and any attachments may contain confidential and proprietary information of DigitalGlobe, Inc. If you are not the intended recipient, or an agent or employee responsible for delivering this communication to the intended recipient, or if you have received this communication in error, please do not print, copy, retransmit, disseminate or otherwise use the information. Please indicate to the sender that you have received this communication in error, and delete the copy you received.

DigitalGlobe reserves the right to monitor any electronic communication sent or received by its employees, agents or representatives.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/67a30981/attachment.html>

From Tim.Harris at digitalglobe.com  Tue Jul 25 10:16:16 2017
From: Tim.Harris at digitalglobe.com (Tim Harris)
Date: Tue, 25 Jul 2017 17:16:16 +0000
Subject: [gdal-dev] OSM conversion failure
In-Reply-To: <47da1bd990854713b4c8cd4e77235ed0@PW00INFMAI022.ent.ad.dg.local>
References: <47da1bd990854713b4c8cd4e77235ed0@PW00INFMAI022.ent.ad.dg.local>
Message-ID: <8e1e39a42806428eb2be057e6d425040@PW00INFMAI022.ent.ad.dg.local>

By the way, it looks like this works fine with an XML .osm file, just not the binary .pbf.

From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Tim Harris
Sent: Tuesday, July 25, 2017 10:36 AM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] OSM conversion failure

I placed a small test file here: https://s3.amazonaws.com/osm-test-data/test.pbf

With the latest trunk, when I run this command:

ogr2ogr test.shp test.pbf multipolygons

The result shapefile I get appears to be empty. I've also tried with release 2.1.2 and that result shapefile is not empty. So it seems like some recent change may have broken the OSM driver.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/b9d886fb/attachment-0001.html>

From even.rouault at spatialys.com  Tue Jul 25 10:53:58 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jul 2017 19:53:58 +0200
Subject: [gdal-dev] Is Internal JPEG compression allowed on RGBA GeoTIFF?
In-Reply-To: <CAJaHrDzqHXHuxcXXi=1R5F685xki808R-oa6UaJXG9n8XrpUQg@mail.gmail.com>
References: <CAJaHrDzqHXHuxcXXi=1R5F685xki808R-oa6UaJXG9n8XrpUQg@mail.gmail.com>
Message-ID: <23459736.GkihrRk4mp@even-i700>

Daniele,

> Dear all,
> I was always thinking that JPEG doesn't support transparency so that it
> would not be possible to convert a 4 bands GeoTIFF using JPEG compression
> (without using internal binary mask).
> 
> However, I just did a gdal_translate -ot byte -scale -CO COMPRESS=JPEG
> 4bands.tif rgba_jpeg.tif and it "worked".
> 
> The gdalinfo output on the new file reports 4 bands dataset with
> Gray,Green,Blue,Alpha colors.

I guess you have a .aux.xml file with color interpreation in them. To get a proper RGBA file, 
add -co PHOTOMETRIC=RGB

> 
> Does the TIFF specification allows that?

I didn't find anything in the TechNote 2, which defines JPEG in TIFF compression, that would 
restrict using RGBA
ftp://ftp.sgi.com/graphics/tiff/TTN2.draft.txt

Using imagemagick or gimp seems to show they can decode JPEG-compressed RGBA files 
correctly, but I've no idea how interaporable it is outside of libtiff-based decoders (which 
they are)

> I still have to read it again to check if/how alpha and JPEG compression
> are related, but I'm wondering if you have any feedback on this topic in
> order to understand if a "standard" GeoTIFF reader should be able to deal
> with that or not and how to deal with the Alpha band (which at this point
> would be a Lossy band, containing artifacts).

Yes, the alpha band will be lossily compressed. I guess it would be possible to tweak the 
encoder to use a very conservative quantization table for the alpha component so as to limit 
the loss on this channel (not implemented right now in GDAL)

Basically, you are limited by the combined limitations of TIFF and JPEG spec

So for a pixel-interleaved TIFF (the default with GDAL), up to 4 components (since the JPEG 
spec limits to 4 components per JPEG "scan", and libtiff only knows to drive libjpeg to 
generate a single scan), which could be RGBA or CMYK depending on the 
PhotometricInterpreation and ExtraSamples tag values.

For a band-interleave TIFF ( -co INTERLEAVE=BAND), you can have an arbitrary number of 
bands.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/15c8a720/attachment.html>

From even.rouault at spatialys.com  Tue Jul 25 12:03:54 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jul 2017 21:03:54 +0200
Subject: [gdal-dev] OSM conversion failure
In-Reply-To: <47da1bd990854713b4c8cd4e77235ed0@PW00INFMAI022.ent.ad.dg.local>
References: <47da1bd990854713b4c8cd4e77235ed0@PW00INFMAI022.ent.ad.dg.local>
Message-ID: <1596582.Rke5VC6uEr@even-i700>

On mardi 25 juillet 2017 16:36:17 CEST Tim Harris wrote:
> I placed a small test file here:
> https://s3.amazonaws.com/osm-test-data/test.pbf
> 
> With the latest trunk, when I run this command:
> 
> ogr2ogr test.shp test.pbf multipolygons
> 
> The result shapefile I get appears to be empty. I've also tried with release
> 2.1.2 and that result shapefile is not empty. So it seems like some recent
> change may have broken the OSM driver.

Indeed. Thanks for the report. Fixed by r39666 + r39667

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/c39c330e/attachment.html>

From cgodkin at gmail.com  Tue Jul 25 12:14:10 2017
From: cgodkin at gmail.com (Carl Godkin)
Date: Tue, 25 Jul 2017 12:14:10 -0700
Subject: [gdal-dev] Grids in OpenFileGDB databases?
Message-ID: <CAE=8kmmuCKLexsDzk7K9VwWSQEsGBzREyt0iq0HS2MXdcyypOw@mail.gmail.com>

Hi,

I just came across a GDB that contains two "MultiPolygon" layers plus about
ten more layers that are apparently grids.

Does OpenFileGDB provide any access to these layers?  I'm using GDAL 2.2.1.

I think the GDB has grids because I can see them in ArcGIS Explorer, but
"ogrinfo --ro GIS.gdb" does not list them.

(In case anyone is interested, the data is from here:

https://itportal.decc.gov.uk/web_files/gis/Round30Data/Getech/UKCS_Multi_Sat_Gravity_Data.zip

and is referenced from here:

http://data-ogauthority.opendata.arcgis.com/datasets

Both the ESRI and GIS sub-directories contain .gdb sub-directories.  The
ESRI sub-directory GDB apparently contains only grids; the GDB in the GIS
sub-directory has two MultiPolygon layers and about ten grids.)

Thanks for any suggestions,

carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/97e527f0/attachment.html>

From even.rouault at spatialys.com  Tue Jul 25 12:33:01 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 25 Jul 2017 21:33:01 +0200
Subject: [gdal-dev] Grids in OpenFileGDB databases?
In-Reply-To: <CAE=8kmmuCKLexsDzk7K9VwWSQEsGBzREyt0iq0HS2MXdcyypOw@mail.gmail.com>
References: <CAE=8kmmuCKLexsDzk7K9VwWSQEsGBzREyt0iq0HS2MXdcyypOw@mail.gmail.com>
Message-ID: <3082372.YEgankZFs6@even-i700>

Carl,

there have been a few successful efforts last year to prototype decyphering of rasters
in .gdb, so it is now a matter of creating a proper GDAL driver from those findings. Sponsors
could be welcome.

Looking at the dataset you point too, it seems that the grids are provided as XYZ in the
ASCII directory

You can get the contents of each .gdb with:

ogrinfo -ro  -al UKCS_Multi_Sat_Gravity_Data/ESRI/ESRI_Grids.gdb/a00000004.gdbtable
ogrinfo  -ro -al UKCS_Multi_Sat_Gravity_Data/GIS/GIS.gdb/a00000004.gdbtable

Grids are the features with "Definition (String) = <DERasterDataset..."

Even

> Hi,
> 
> I just came across a GDB that contains two "MultiPolygon" layers plus about
> ten more layers that are apparently grids.
> 
> Does OpenFileGDB provide any access to these layers?  I'm using GDAL 2.2.1.
> 
> I think the GDB has grids because I can see them in ArcGIS Explorer, but
> "ogrinfo --ro GIS.gdb" does not list them.
> 
> (In case anyone is interested, the data is from here:
> 
> https://itportal.decc.gov.uk/web_files/gis/Round30Data/Getech/UKCS_Multi_Sat
> _Gravity_Data.zip
> 
> and is referenced from here:
> 
> http://data-ogauthority.opendata.arcgis.com/datasets
> 
> Both the ESRI and GIS sub-directories contain .gdb sub-directories.  The
> ESRI sub-directory GDB apparently contains only grids; the GDB in the GIS
> sub-directory has two MultiPolygon layers and about ten grids.)
> 
> Thanks for any suggestions,
> 
> carl


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170725/72d252c4/attachment.html>

From even.rouault at spatialys.com  Fri Jul 28 08:38:38 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Jul 2017 17:38:38 +0200
Subject: [gdal-dev] Fwd: [Projects] please create a new project flyer for
	your project with the new branding till FOSS4G Boston
Message-ID: <4153646.znehyYAMKA@even-i700>

Hi,

Is someone interested in creating a flyer for GDAL ? See below

Even

----------  Forwarded Message  ----------

Subject: [Projects] please create a new project flyer for your project with the new branding 
till FOSS4G Boston
Date: vendredi 28 juillet 2017, 00:36:03 CEST
From: Astrid Emde (OSGeo) <astrid_emde at osgeo.org>
To: projects at lists.osgeo.org

Hello OSGeo projects,

it is not a long time till FOSS4G Boston where we will have an OSGeo 
booth with the new OSGeo logo and new flyers for the projects.

This is why we need your help! Please create a new project flyer for 
your OSGeo project with the new branding. We try to arrange it that the 
flyer will be handed out at OSGeo booth in Boston from August 14-19, 
2017 (http://2017.foss4g.org/)


The current flyer are out of date. You find them here as a template.
https://trac.osgeo.org/osgeo/browser/marketing/flyer/project_brochure_pdfs
https://trac.osgeo.org/osgeo/browser/marketing/flyer/

You also could take information from OSGeo-Live to setup your new flyer.
https://live.osgeo.org/en/overview/overview.html

You find the new branding material at:
https://github.com/OSGeo/osgeo/tree/master/marketing

Have a look at the GeoforAll flyer or OSGeo-Live flyer. You can see how 
a flyer could look like
https://github.com/OSGeo/osgeo/blob/master/marketing/print/geoforall_a4.pdf
https://github.com/lucadelu/osgeo/blob/osgeolive/marketing/print/osgeolive_names_a4.svg

The best way is to fork the repository on GutHub and make a pull request 
with your new flyer at the end.

These are the steps for you:

1. How to set up the fonts (on linux create the folder 
$HOME/.local/share/fonts and copy the 4 .ttf there)
* Download  from 
https://github.com/OSGeo/osgeo/tree/master/marketing/branding/fonts


2. Take the svg template and modify it with the content of your project
https://github.com/OSGeo/osgeo/blob/master/marketing/print/osgeo_a4.svg
You can modify the svg either with a texteditor or f.e. inkscape.

3. In the end you can create a pull request to the osgeo repository

We try to organize it so the flyer will be printed and present at the 
OSGeo booth

Thanks for your help.

If you have questions. Please ask on the list or contact me or Luca 
http://wiki.osgeo.org/wiki/User:Lucadelu

PS: Luca finished the OSGeo-Live flyer and wants to work on the 
Zoo-Project and MapServer flyer too.

Astrid


-- 
Astrid Emde
Charter Member
Open Source Geospatial Foundation
http://wiki.osgeo.org/wiki/User:Astrid_Emde
_______________________________________________
Projects mailing list
Projects at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/projects

-----------------------------------------
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170728/cfd7e704/attachment.html>

From paulopires16 at gmail.com  Sat Jul 29 14:25:09 2017
From: paulopires16 at gmail.com (Paulo Pires)
Date: Sat, 29 Jul 2017 14:25:09 -0700 (MST)
Subject: [gdal-dev] Convert 3 band RGB image to 1 band indexed color image
Message-ID: <1501363509542-5329771.post@n6.nabble.com>

Hello

Is it possible to convert 3 band RGB image to 1 band indexed color image
with gdal command line?

Thanks



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Convert-3-band-RGB-image-to-1-band-indexed-color-image-tp5329771.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From warmerdam at pobox.com  Sat Jul 29 19:00:21 2017
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sat, 29 Jul 2017 19:00:21 -0700
Subject: [gdal-dev] A modified version of your get_soundg.py
In-Reply-To: <1494005865.375402.1501339591596@email.1and1.com>
References: <1494005865.375402.1501339591596@email.1and1.com>
Message-ID: <CA+YzLBcQ9tzqRt39nPC60R__9vwfqpDYb_DAGye3sVor2SGsdA@mail.gmail.com>

Dave,

Thanks for the notice.  I am not updating the upstream get_soundg.py
but I've taken the liberty of cc:ing this reply to the gdal-dev
mailing list so more potentially interested folks will be aware of
your changes, and your blog post:

http://micuisine.com/code-projects/?page_id=10

I was particularly amused by change entry "Changed feat2 to feat1 to
prevent searching for unused feat1.".  Indeed looking back at the code
there must have been some history behind my use of feat2 that was lost
and now is just confusing.

Best regards,
Frank


On Sat, Jul 29, 2017 at 7:46 AM, Dave Liske <dave at micuisine.com> wrote:
> Mr. Warmerdam,
>
> In recently looking for a method to split the depth values from NOAA S-57
> files for a personal art project, I came across your 2003 get_soundg.py file
> for accomplishing the task via Python. In running your file with
> us3fl28m.000 I found that it did, in fact, accomplish what I was trying to
> do. But it also generated a number of errors, the reasons of which are not
> clear as it likely didn't generate those same errors in 2003 when you
> originally released the script.
>
> Sir I know this is out-of-the-blue but I wanted you to know that, with some
> changes to correct current errors, your 2003 code still does what you
> intended. I then took it a few more steps to hopefully make it more useful
> for some as well.
>
> I've made the following changes, saving the new version as
> s57_kml_extract_soundg.py:
>
> * Added error handling if SOUNDG layer or source S-57 file is not found.
> * Deleted second usage argument: Added code to create target file in same
> directory as source S-57 file.
> * Added new second usage argument: Select soundings as provided as 'metre',
> or calculate new sounding values as 'feet'
> * Target File Type: Changed to KML. Errors are subsequently handled
> correctly, i.e. the errors are suppressed while the FFPT_RIND and LNAM_REFS
> fields are also not included in the resulting KML file.
> * Added "_metre" or "_feet" to the new filename based on second usage
> argument
> * Added WGS84 CSR to the target KML file.
> * Changed created layer name from 'out' to 'KML_SOUNDG'. When imported into
> QGIS the resulting layer is displayed as <kmlfile>_KML_SOUNDG_Point in the
> Browser Panel.
> * Changed target field 'ELEV' to 'DEPTH', which is accurate for soundings.
> * Changed precision for 'DEPTH' field from 4 to 0 to reflect chart usage.
> * Added target fields 'LAT' and 'LONG' for xcoord and ycoord.
> * Changed feat2 to feat1 to prevent searching for unused feat1.
> * Added completion messages.
>
> I've posted the new code at http://micuisine.com/code-projects/?page_id=10
> along with further descriptions, as well as a link to a ZIP file containing
> s57_kml_extract_soundg.py.
>
> I hope this email finds you well, and that these updates are useful and not
> offensive in some manner. Please feel free to contact me with any comments
> or questions about this updated work.
>
> Sincerely,
> Dave Liske
> Luna Pier, Michigan



-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows |
and watch the world go round - Rush    | Geospatial Software Developer

From paulopires16 at gmail.com  Sun Jul 30 15:01:43 2017
From: paulopires16 at gmail.com (Paulo Pires)
Date: Sun, 30 Jul 2017 15:01:43 -0700 (MST)
Subject: [gdal-dev] Convert 3 band RGB image to 1 band indexed color
	image
In-Reply-To: <1501363509542-5329771.post@n6.nabble.com>
References: <1501363509542-5329771.post@n6.nabble.com>
Message-ID: <1501452103458-5329819.post@n6.nabble.com>

Found ;)

gdal_translate -of VRT tif vrt

Then rgb2pct.py

Thanks





--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Convert-3-band-RGB-image-to-1-band-indexed-color-image-tp5329771p5329819.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From johan.de.braak at eleaf.com  Mon Jul 31 07:31:05 2017
From: johan.de.braak at eleaf.com (Johan de Braak)
Date: Mon, 31 Jul 2017 07:31:05 -0700 (MST)
Subject: [gdal-dev] Rasterize Inmem vector
Message-ID: <1501511465306-5329885.post@n6.nabble.com>

Hi all,

How would I rasterize an in memory vector? I have tried this:
    
    assert isinstance(inmemds, ogr.DataSource), 'inmemds is not a ogr
DataSource' #assert not triggered
    
    rastoptions = gdal.RasterizeOptions(outputType=gdal.GDT_Byte,
burnValues=1, xRes=100, yRes=100)
    
    ds = gdal.Rasterize('/vsimem/tmp_{}'.format(uuid4().hex), inmemds,
options=rastoptions)


gives:

    TypeError: in method 'wrapper_GDALRasterizeDestName', argument 2 of type
'GDALDatasetShadow *'

The docstring of gdal.Rasterize says the following: 

    Arguments are :
      destNameOrDestDS --- Output dataset name or object
      srcDS --- a Dataset object or a filename

So srcDS can be a Dataset, right? As I missing something?

Regards,

Johan




--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Rasterize-Inmem-vector-tp5329885.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Mon Jul 31 07:42:22 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 31 Jul 2017 16:42:22 +0200
Subject: [gdal-dev] Rasterize Inmem vector
In-Reply-To: <1501511465306-5329885.post@n6.nabble.com>
References: <1501511465306-5329885.post@n6.nabble.com>
Message-ID: <2424423.M8acssWy0v@even-i700>

On lundi 31 juillet 2017 07:31:05 CEST Johan de Braak wrote:
> Hi all,
> 
> How would I rasterize an in memory vector? I have tried this:
> 
>     assert isinstance(inmemds, ogr.DataSource), 'inmemds is not a ogr
> DataSource' #assert not triggered
> 
>     rastoptions = gdal.RasterizeOptions(outputType=gdal.GDT_Byte,
> burnValues=1, xRes=100, yRes=100)
> 
>     ds = gdal.Rasterize('/vsimem/tmp_{}'.format(uuid4().hex), inmemds,
> options=rastoptions)
> 
> 
> gives:
> 
>     TypeError: in method 'wrapper_GDALRasterizeDestName', argument 2 of type
> 'GDALDatasetShadow *'
> 
> The docstring of gdal.Rasterize says the following:
> 
>     Arguments are :
>       destNameOrDestDS --- Output dataset name or object
>       srcDS --- a Dataset object or a filename
> 
> So srcDS can be a Dataset, right? As I missing something?

Yes, srcDS must be a gdal.Dataset, not a ogr.DataSource

so use gdal.GetDriverByName("Memory").Create("", 0, 0, 0, gdal.GDT_Unknown) to create it

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20170731/0a93b2cc/attachment.html>

From aborruso at gmail.com  Mon Jul 31 10:37:41 2017
From: aborruso at gmail.com (aborruso)
Date: Mon, 31 Jul 2017 10:37:41 -0700 (MST)
Subject: [gdal-dev] CSV to GeoRSS: problem with pubDate field
Message-ID: <1501522661460-5329925.post@n6.nabble.com>

Hi,
I'm using GDAL 2.3.0dev to convert a CSV to GeoRSS, but I'm not able to set
properly pubDate field.

My test input CSV is (tab separated):

title	description	guid	link	pubDate
titolo	des	http://www.tin.it/1	http://www.tin.it/1	Wed, 11 Jul 2007 15:39:21
GMT

I run:

ogr2ogr  -f GeoRSS  georss.xml source.csv source

And I have "ERROR 1: Wrong field type for pubDate" error and this XML
output:

<?xml version="1.0"?>
<rss version="2.0" xmlns:georss="http://www.georss.org/georss">
  <channel>
    <title>title</title>
    <description>channel_description</description>
    <link>channel_link</link>
    <item>
      <title>titolo</title>
      <description>des</description>
      <guid>http://www.tin.it/1</guid>
      <link>http://www.tin.it/1</link>
    </item>
  </channel>
</rss>

It's almost perfect, but without pubDate. How to set it in my source CSV?

Thank you,

Andrea





--
View this message in context: http://osgeo-org.1560.x6.nabble.com/CSV-to-GeoRSS-problem-with-pubDate-field-tp5329925.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

