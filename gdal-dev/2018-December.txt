From gdal at geoworld.de  Sat Dec  1 13:06:53 2018
From: gdal at geoworld.de (Nicol Hermann)
Date: Sat, 01 Dec 2018 22:06:53 +0100
Subject: [gdal-dev] PHP swig bindings
Message-ID: <cd9df57ce0648ed902f0c2fa6f3a5e3e32d02e98.camel@geoworld.de>

Hello,

what is the current status of the PHP swig bindings?
The ticket 
http://trac.osgeo.org/gdal/ticket/3984
is open since 8 years.
I have applied patch 'gdal_swig_php_v4.patch' to version 2.3.2 but the
patch failed to apply to all files and subsequently the build failed as
well.

Is this binding still supported?
Thanks for any help to get this up and running.

Nicol


From even.rouault at spatialys.com  Sat Dec  1 13:57:36 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 01 Dec 2018 22:57:36 +0100
Subject: [gdal-dev] PHP swig bindings
In-Reply-To: <cd9df57ce0648ed902f0c2fa6f3a5e3e32d02e98.camel@geoworld.de>
References: <cd9df57ce0648ed902f0c2fa6f3a5e3e32d02e98.camel@geoworld.de>
Message-ID: <2343657.pErHc5tcsB@even-i700>

On samedi 1 décembre 2018 22:06:53 CET Nicol Hermann wrote:
> Hello,
> 
> what is the current status of the PHP swig bindings?

Abandonned. They have been completely removed from the source tree in the 
current development cycle (future GDAL 2.4.0)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From craig.destigter at koordinates.com  Mon Dec  3 15:48:47 2018
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Tue, 4 Dec 2018 12:48:47 +1300
Subject: [gdal-dev] Call for discussion on RFC 72: Update autotest suite to
	use pytest
Message-ID: <CAF1M8pdGn0SZEr-7yNbbE7qOgjyO4BD=6EOKPs_0nGh4dB4Oqg@mail.gmail.com>

Hi,

This is a call for discussion on RFC 72: Update autotest suite to use pytest

https://trac.osgeo.org/gdal/wiki/rfc72_pytest

Summary:

The document proposes and describes conversion of the existing Python
autotest suite to use the ​pytest framework.

Using pytest provides significant productivity gains for writing, reading
and debugging python tests, compared with the current home-grown approach.

--

Please submit feedback soon, as we'd like to have this merged in time for
the imminent GDAL 2.4.0 RC if possible.

Thanks
Craig de Stigter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181204/0b106c94/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Dec  3 23:41:47 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Tue, 4 Dec 2018 00:41:47 -0700 (MST)
Subject: [gdal-dev] Early GDAL 2.4.0 release ?
In-Reply-To: <3480702.ZBnXc4afsm@even-i700>
References: <3480702.ZBnXc4afsm@even-i700>
Message-ID: <1543909307869-0.post@n6.nabble.com>

+1

-Jukka Rahkonen-


Even Rouault-2 wrote
> Hi,
> 
> I've been considering an early GDAL 2.4.0 release for the end of this year 
> instead of the traditionnal mid-April / May target.





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From chiara.marmo at u-psud.fr  Tue Dec  4 01:01:42 2018
From: chiara.marmo at u-psud.fr (Chiara Marmo)
Date: Tue, 4 Dec 2018 09:01:42 +0000 (GMT)
Subject: [gdal-dev] FITS driver for GDAL
In-Reply-To: <1356109020.36374536.1543912873936.JavaMail.zimbra@u-psud.fr>
Message-ID: <83970051.36406984.1543914102574.JavaMail.zimbra@u-psud.fr>

Dear list,

thanks to European funding (EUROPLANET H2020 [1]) I've implemented FITS World Coordinate System [2] in the GDAL FITS driver.

The code is available here [3]

It implements
- FITS standard y pixel coordinate direction (pixel 1 at bottom left)
- FITS Unsigned Integer support
- BZERO BSCALE implementation in GDAL get/setOffset() and get/setScale() model
- NODATA translation as BLANK keyword (only for integers... this is a FITS definition)
- Translation of FITS WCS in GDAL georef

The code is usable at this stage, but before opening a pull request I rather to have more use cases and testing

Instructions for compilation against CFITSIO (mandatory) are available on the official GDAL Trac pages [4] and on the europlanet Vespa wiki [5]
(Windows is still missing... someone can help me on that?)

So, if you like FITS and always dreamed of process it with GDAL, please, take a look to the code and feel free to open issues on the github repo if something is'nt working as expected.

Thanks for listening,

Best,
Chiara

[1] http://www.europlanet-2020-ri.eu/
[2] https://fits.gsfc.nasa.gov/fits_wcs.html
[3] https://github.com/epn-vespa/gdal
[4] https://trac.osgeo.org/gdal/wiki/FITS
[5] https://voparis-confluence.obspm.fr/display/VES/GDAL+with+FITS

-- 
Chiara Marmo
Ingénieur de Recherche GEOPS - Paris Sud-11
Bât 509
Tel: +33 (0)1 69 15 49 03 

From even.rouault at spatialys.com  Tue Dec  4 03:32:23 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 04 Dec 2018 12:32:23 +0100
Subject: [gdal-dev] Call for discussion on RFC 72: Update autotest suite
	to use pytest
In-Reply-To: <CAF1M8pdGn0SZEr-7yNbbE7qOgjyO4BD=6EOKPs_0nGh4dB4Oqg@mail.gmail.com>
References: <CAF1M8pdGn0SZEr-7yNbbE7qOgjyO4BD=6EOKPs_0nGh4dB4Oqg@mail.gmail.com>
Message-ID: <32853962.WAzOPb77ca@even-i700>

On mardi 4 décembre 2018 12:48:47 CET Craig de Stigter wrote:
> Hi,
> 
> This is a call for discussion on RFC 72: Update autotest suite to use pytest
> 
> https://trac.osgeo.org/gdal/wiki/rfc72_pytest

Craig,

That looks good to me. Thanks for having tackled this.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Tue Dec  4 09:52:15 2018
From: sean at mapbox.com (Sean Gillies)
Date: Tue, 4 Dec 2018 10:52:15 -0700
Subject: [gdal-dev] Call for discussion on RFC 72: Update autotest suite
 to use pytest
In-Reply-To: <CAF1M8pdGn0SZEr-7yNbbE7qOgjyO4BD=6EOKPs_0nGh4dB4Oqg@mail.gmail.com>
References: <CAF1M8pdGn0SZEr-7yNbbE7qOgjyO4BD=6EOKPs_0nGh4dB4Oqg@mail.gmail.com>
Message-ID: <CADPhZXz5wB0V_v0uqW2VcLWeJX7fEOE9-OqWP2o0qQowETJS0g@mail.gmail.com>

Craig,

Thanks for doing this huge lift. Not all heroes wear capes!

I'm still concerned about using the SWIG bindings to test the C API because
subtle defects in the wrappers could hide deeper bugs and wish there were
more direct tests, but RFC 72 is a big improvement.

I use pytest in most of my projects and like how it reduces the friction
for writing tests. It uses a lot of magic, which some Python developers
don't like, and so it isn't necessarily *the way* to test in Python. I
think there is a small risk that the hard to understand patterns of the
home-grown approach could be replaced by hard to understand fixtures in a
pytest approach. The example shown in the RFC, for example: is making a
fixture for every gdal-bin program or adding checker fixtures that make
multiple asserts patterns that will help or hurt long term? I'm not super
concerned, just want to point out that pytest isn't a panacea and doesn't
default to the golden path of testing.

Thanks again!

On Mon, Dec 3, 2018 at 4:49 PM Craig de Stigter <
craig.destigter at koordinates.com> wrote:

> Hi,
>
> This is a call for discussion on RFC 72: Update autotest suite to use
> pytest
>
> https://trac.osgeo.org/gdal/wiki/rfc72_pytest
>
> Summary:
>
> The document proposes and describes conversion of the existing Python
> autotest suite to use the ​pytest framework.
>
> Using pytest provides significant productivity gains for writing, reading
> and debugging python tests, compared with the current home-grown approach.
>
> --
>
> Please submit feedback soon, as we'd like to have this merged in time for
> the imminent GDAL 2.4.0 RC if possible.
>
> Thanks
> Craig de Stigter
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181204/26626051/attachment.html>

From craig.destigter at koordinates.com  Tue Dec  4 13:45:58 2018
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Wed, 5 Dec 2018 10:45:58 +1300
Subject: [gdal-dev] Call for discussion on RFC 72: Update autotest suite
 to use pytest
In-Reply-To: <CADPhZXz5wB0V_v0uqW2VcLWeJX7fEOE9-OqWP2o0qQowETJS0g@mail.gmail.com>
References: <CAF1M8pdGn0SZEr-7yNbbE7qOgjyO4BD=6EOKPs_0nGh4dB4Oqg@mail.gmail.com>
 <CADPhZXz5wB0V_v0uqW2VcLWeJX7fEOE9-OqWP2o0qQowETJS0g@mail.gmail.com>
Message-ID: <CAF1M8peOs5PZUJK9KD0AqeSS=Si9ohoE0LiFJT3aM6qATN3Hgg@mail.gmail.com>

Thanks Sean & Even

> I'm still concerned about using the SWIG bindings to test the C API

Fair enough, though as you noted, this is a bit tangential; RFC72 doesn't
make any changes to this situation, it's merely a refactor of the Python
tests.

> It uses a lot of magic, which some Python developers don't like, and so
it isn't necessarily *the way* to test in Python

That's true. Some people don't like Django for the same reason; a lot of
its internals are full of metaclasses and descriptors. SQLAlchemy is in the
same boat. Magic can be difficult to grok, and difficult to maintain.
However I think in all three cases they've acquired a significant user base
for the simple reason that the internal magic enables a really clean,
simple and effective interface.

I don't know if I'd want to *develop* pytest; I've seen some of the code
and I think it would take me a long time to understand it well enough to
work on it. But I do think the interface it presents is really excellent.

> The example shown in the RFC, for example: is making a fixture for every
gdal-bin program or adding checker fixtures that make multiple asserts
patterns that will help or hurt long term

Note that the example given in the RFC is just one possible future. I'd
hope those questions would be answered in pull requests as they happen. For
instance, the `require_files` fixture in the example doesn't exist yet. I'm
not committed to making those particular changes if there's opposition to
them.

That said, the advantages of a `require_files` fixture at least seem
reasonably clear to me: it would make the requirements of each test more
explicit and reduce boilerplate. I think this would also allow us to run
tests in parallel without them interfering with each other. The fixture
would put just the required files in a temp directory for each test, and
remove it afterwards. Being able to parallelise the tests would be a huge
win.

For what's actually implemented in the phase 1 pull request, see the
conftest.py
<https://github.com/craigds/gdal/blob/pytestify/autotest/conftest.py> file.
There's not much there beyond what's required for compatibility with the
old test runner. Notably, there's a
`@pytest.mark.require_driver(drivername)` marker, which I've applied to
some of the tests I had to change manually.

Cheers
Craig

On Wed, 5 Dec 2018 at 06:52 Sean Gillies <sean at mapbox.com> wrote:

> Craig,
>
> Thanks for doing this huge lift. Not all heroes wear capes!
>
> I'm still concerned about using the SWIG bindings to test the C API
> because subtle defects in the wrappers could hide deeper bugs and wish
> there were more direct tests, but RFC 72 is a big improvement.
>
> I use pytest in most of my projects and like how it reduces the friction
> for writing tests. It uses a lot of magic, which some Python developers
> don't like, and so it isn't necessarily *the way* to test in Python. I
> think there is a small risk that the hard to understand patterns of the
> home-grown approach could be replaced by hard to understand fixtures in a
> pytest approach. The example shown in the RFC, for example: is making a
> fixture for every gdal-bin program or adding checker fixtures that make
> multiple asserts patterns that will help or hurt long term? I'm not super
> concerned, just want to point out that pytest isn't a panacea and doesn't
> default to the golden path of testing.
>
> Thanks again!
>
> On Mon, Dec 3, 2018 at 4:49 PM Craig de Stigter <
> craig.destigter at koordinates.com> wrote:
>
>> Hi,
>>
>> This is a call for discussion on RFC 72: Update autotest suite to use
>> pytest
>>
>> https://trac.osgeo.org/gdal/wiki/rfc72_pytest
>>
>> Summary:
>>
>> The document proposes and describes conversion of the existing Python
>> autotest suite to use the ​pytest framework.
>>
>> Using pytest provides significant productivity gains for writing, reading
>> and debugging python tests, compared with the current home-grown approach.
>>
>> --
>>
>> Please submit feedback soon, as we'd like to have this merged in time for
>> the imminent GDAL 2.4.0 RC if possible.
>>
>> Thanks
>> Craig de Stigter
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
> Sean Gillies
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181205/266a2ee3/attachment.html>

From jdcasta at umich.edu  Tue Dec  4 14:16:53 2018
From: jdcasta at umich.edu (Jeremy Castagno)
Date: Tue, 4 Dec 2018 17:16:53 -0500
Subject: [gdal-dev] Parallelizing Rasterization of Polygons
Message-ID: <CAOa27_m+51WN7+KYhno-ZNUfS6a_dixdmSh8tYEHQxrKFjwVKg@mail.gmail.com>

All,

This is the first time I have used a mailing list so I'm not sure how this
will work out. I was trying to parallelize the rasterization of polygons
with the method GDALRasterizeGeometries
<https://github.com/OSGeo/gdal/blob/master/gdal/alg/gdalrasterize.cpp#L630>.
I was using an in memory raster that pointed to a data buffer and sent this
to GDALRasterGeometries with all appropriate arguments. Everything worked
fine and as expected when running with only 1 thread.  However, when moving
to multiple threads I noticed that only 1 of the processors seemed to have
any affect on the rasterization (meaning only the top half of the image was
raterized and the rest was black.  Upon further inspection of the source
code I think I found the culprit here
<https://github.com/OSGeo/gdal/blob/master/gdal/alg/gdalrasterize.cpp#L772>.

The rasterization does not **directly** occur on the memory buffer from my
passed data set. A chunk of memory is allocated dynamically and
rasterizaton occurs on that memory. After rasterization this chunk of
memory is then written to memory dataset I passed in

So using GDALRasterizeGeometries
<https://github.com/OSGeo/gdal/blob/master/gdal/alg/gdalrasterize.cpp#L630>
will
not work. However upon further inspection I notice a really great *static*
void function that it uses: gv_rasterize_one_shape
<https://github.com/OSGeo/gdal/blob/master/gdal/alg/gdalrasterize.cpp#L806>.
Upon further inspection it looks like it truly does just operate on the raw
memory buffer for rasterization.  It of course calls alot of static
functions through the process.

So the hope is that I can just loop through my geometries myself and call
gv_rasterize_one_shape. Yes I understand that GDALRasterizeGeometries
<https://github.com/OSGeo/gdal/blob/master/gdal/alg/gdalrasterize.cpp#L630> is
doing an optimization of chunking and that I will have to do that myself
when looping through geometries. However.... I see no
gv_rasterize_one_shape function in ANY *header* files. I think it is
somehow private or maybe unexposed and I can't really access it.

I am not much of a c++ programmer but I tried to trick the compiler by
adding the function declaration in a header myself. However it complains
that the symbol can't be found when compiling. Pretty normal makefile that
does this: -L/usr/lib -lgdal

I ran the following shell commands:
objdump -t /usr/lib/libgdal.so ---- but no symbols were found
Its like the symbols have been stripped out of the shared library. Which
I'm really confused because I figured you need the symbnols for
linking...Like I said I'm no C++ expert.
 I tried /usr/lib/libgdal.a and the symbols are there but I dont think I
want to static link.

Anyways I guess I'm just wondering if there is any way for me to access
gv_rasterize_one_shape
<https://github.com/OSGeo/gdal/blob/master/gdal/alg/gdalrasterize.cpp#L806>.

Thanks for your help and this great library!

Jeremy Castagno
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181204/382755da/attachment.html>

From dshean at gmail.com  Wed Dec  5 00:18:17 2018
From: dshean at gmail.com (David Shean)
Date: Wed, 5 Dec 2018 00:18:17 -0800
Subject: [gdal-dev] vrt warping precision issues and tile offsets
Message-ID: <D9665803-30E5-4FBC-8C78-4B078EC0BB05@gmail.com>

Hi list,
I am seeing some sub-pixel inter-tile offsets in the output of warped vrt products.  I am a big fan of vrt and use regularly, but this is the first time that I’ve noticed this issue.  I am hoping that there is a simple workaround.

I’ve isolated a simple test case from a larger project.  I’m running GDAL 2.2.4.

Test case includes:
-A single “source” DEM with UTM 43N projection (EPSG:32643), 30 m grid
-A set of 4 adjacent “reference” DEM tiles in a regional Albers equal-area projection ('+proj=aea +lat_1=25 +lat_2=47 +lat_0=36 +lon_0=85 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs ‘), also 30 m grid

I need to compute elevation difference between the source and reference.  The source DEM extent spans tile boundaries of the reference DEM.

I build a vrt <https://drive.google.com/file/d/1AsXk5KFF-tQNaFfWZsAQLz0wQW_lsoOA/view?usp=sharing> of the reference tiles:
gdalbuildvrt -r cubic ref.vrt tile1.tif tile2.tif tile3.tif tile4.tif

For comparison, I create a mosaic of the reference tiles using gdalwarp:
gdal_opt='-co COMPRESS=LZW -co TILED=YES -co BIGTIFF=IF_SAFER'
gdalwarp $gdal_opt -r cubic -et 0  tile1.tif tile2.tif tile3.tif tile4.tif ref.tif

I then resample both ref.vrt and ref.tif to match the resolution/extent/srs of the original source DEM and compute an elevation difference.  In practice, this is done on-the-fly using https://github.com/dshean/demcoreg/blob/master/demcoreg/compute_diff.py <https://github.com/dshean/demcoreg/blob/master/demcoreg/compute_diff.py>.  For the purposes of illustration, and to ensure that these external tools are not the issue, I use gdalwarp for this resampling step:
src_extent='261016.895 3813317.750 335896.895 3885107.750'
gdalwarp $gdal_opt -r cubic -et 0 -tr 30 30  -t_srs EPSG:32643 -te $src_extent ref.tif reftif_warp.tif
gdalwarp $gdal_opt -r cubic -et 0 -tr 30 30  -t_srs EPSG:32643 -te $src_extent ref.vrt refvrt_warp.tif

The (reftif_warp.tif minus source) DEM difference map <https://drive.google.com/file/d/1VoB06LMArRmPKYxVyNkk5AHWhbNf69Kn/view?usp=sharing> looks as expected, and is consistent with the output that I obtain computing difference maps between the source DEM and each individual reference tile.

The (refvrt_warp.tif minus source) DEM difference map <https://drive.google.com/file/d/1PZmSTng8yQdC-1D0EBAVFdsTjMiQWL7C/view?usp=sharing> shows evidence of subtle horizontal shifts in the reference tiles, which introduces spatially variable vertical error in the resulting elevation differences.  I ran an image correlator on the outputs, and indeed, I see sub-pixel shifts <https://drive.google.com/file/d/1vzoUfiF9fPKO-AmzmIYOFwVNl8Y8Kom1/view?usp=sharing> between the original tiles with variable direction/magnitude (up to ~0.3 px).  The original tile boundaries are easy to identify.  

After various tests, I’ve concluded that warping the vrt is the problem.  Is this a known issue?  Is there something equivalent to -et 0 for gdalbuildvrt?  The vrt DstRect offsets are suspicious and the output vrt dimensions don’t match the sum of input tile dimensions.  Using -tap during gdalbuildvrt doesn’t help.  Maybe an issue related to my aea projection?  

Also, does the -r cubic option for gdalbuildvrt matter if I specify a different resampling algorithm during a later warp operation?  

Sample data are here: https://drive.google.com/drive/folders/15hNlUoUkCeYbgZCyfMzymmCP1__4wVgO?usp=sharing <https://drive.google.com/drive/folders/15hNlUoUkCeYbgZCyfMzymmCP1__4wVgO?usp=sharing>

Thanks for any suggestions.
-David

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181205/928c4dc7/attachment-0001.html>

From even.rouault at spatialys.com  Wed Dec  5 10:08:07 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 05 Dec 2018 19:08:07 +0100
Subject: [gdal-dev] vrt warping precision issues and tile offsets
In-Reply-To: <D9665803-30E5-4FBC-8C78-4B078EC0BB05@gmail.com>
References: <D9665803-30E5-4FBC-8C78-4B078EC0BB05@gmail.com>
Message-ID: <2265197.2HbcGtasj6@even-i700>

David,

Ah, shouldn't have looked at this, as with all sub-pixel issues, it took me 
hours to figure it out, but the good news is I managed to fix it:
https://github.com/OSGeo/gdal/pull/1132

> 
> I build a vrt
> <https://drive.google.com/file/d/1AsXk5KFF-tQNaFfWZsAQLz0wQW_lsoOA/view?usp
> =sharing> of the reference tiles: gdalbuildvrt -r cubic ref.vrt tile1.tif
> tile2.tif tile3.tif tile4.tif
> 
> For comparison, I create a mosaic of the reference tiles using gdalwarp:
> gdal_opt='-co COMPRESS=LZW -co TILED=YES -co BIGTIFF=IF_SAFER'
> gdalwarp $gdal_opt -r cubic -et 0  tile1.tif tile2.tif tile3.tif tile4.tif
> ref.tif

At that stage, you could have just compared ref.vrt and ref.tif, and you would 
have already seen that, except the top-left tile, there were shift in the 
areas covered by the 3 other ones (the issue was somehow subtle, in that, it 
occured only if doing RasterIO requests that go beyond the tile extent, as 
done with gdal_translate/gdalwarp when operating on the whole raster, but if 
you picked up only a single pixel, or smaller subwindows, the result was 
correct)

You can use gdal_calc -A x.tif -B y.tif --outfile=diff.tif --calc "A-B"
to compute differences.

The issue was indeed in reading the VRT (indepedantly of the later warping you 
did it). With my fix, ref.vrt and ref.tif are now identical except a few 
pixels at tile boundaries and raster edges due to subtle difference in how VRT 
compositing and warp compositing deal with edge effects, but there is no 
longer a systematic offset.

> Is there something equivalent to -et 0 for gdalbuildvrt?  

Nope, modulo bugs, VRT reading is supposed to be 'perfect'

> The vrt DstRect offsets are suspicious and the output vrt
> dimensions don’t match the sum of input tile dimensions. 

That's expected with your data. If you look at the georeferencing of your 
tiles, they have the same resolution, but the shift between their origin is 
not a multiple of the resolution, and they have a few pixels overlap, so it is 
expected that gdalbuildvrt keeps that overlap and there are non-integer 
coordinates (hence the need for -r cubic with gdalbuildvrt. Otherwise if you 
had perfect mosaicing, it would be useless)

> Also, does the -r cubic option for gdalbuildvrt matter if I specify a
> different resampling algorithm during a later warp operation?

Yes, the -r cubic in gdalbuildvrt matters, and is independant of the 
resampling algorithm of a later warp operation. When you cubic-warp a cubic-
VRT, you have in fact two cubic interpolations occuring.

I would not that in your workflow (not sure to have completely understood it), 
you could directly do gdalwarp of your 4 ref tiles and reproject in the same 
step: this would avoid those two cubic interpolation stages that introduce 
some loss.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From craig.destigter at koordinates.com  Wed Dec  5 14:40:49 2018
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Thu, 6 Dec 2018 11:40:49 +1300
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
Message-ID: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>

Hi

I appreciate your comments on the pytest proposal and all the support to
help get it this far. Given no actionable improvements have been suggested,
and the feedback thus far seems encouraging...

I move to adopt RFC 72: Run tests with pytest.

https://trac.osgeo.org/gdal/wiki/rfc72_pytest


Cheers
Craig de Stigter
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181206/a4cfffe8/attachment.html>

From dshean at gmail.com  Wed Dec  5 15:00:24 2018
From: dshean at gmail.com (David Shean)
Date: Wed, 5 Dec 2018 15:00:24 -0800
Subject: [gdal-dev] vrt warping precision issues and tile offsets
In-Reply-To: <2265197.2HbcGtasj6@even-i700>
References: <D9665803-30E5-4FBC-8C78-4B078EC0BB05@gmail.com>
 <2265197.2HbcGtasj6@even-i700>
Message-ID: <9684D67B-CE98-4C68-BE5F-606A820C2D64@gmail.com>

Hi Even,
Many thanks for looking into this and pushing a fix so quickly.  Some follow up responses inline.
D

> On Dec 5, 2018, at 10:08 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> David,
> 
> Ah, shouldn't have looked at this, as with all sub-pixel issues, it took me 
> hours to figure it out, but the good news is I managed to fix it:
> https://github.com/OSGeo/gdal/pull/1132

Ha.  I hear you.  Things get messy down there, and I’ve spent too many hours working with sub-pixel issues.  Fortunately, most of the time GDAL performs as expected.

> 
>> 
>> I build a vrt
>> <https://drive.google.com/file/d/1AsXk5KFF-tQNaFfWZsAQLz0wQW_lsoOA/view?usp
>> =sharing> of the reference tiles: gdalbuildvrt -r cubic ref.vrt tile1.tif
>> tile2.tif tile3.tif tile4.tif
>> 
>> For comparison, I create a mosaic of the reference tiles using gdalwarp:
>> gdal_opt='-co COMPRESS=LZW -co TILED=YES -co BIGTIFF=IF_SAFER'
>> gdalwarp $gdal_opt -r cubic -et 0  tile1.tif tile2.tif tile3.tif tile4.tif
>> ref.tif
> 
> At that stage, you could have just compared ref.vrt and ref.tif, and you would 
> have already seen that, except the top-left tile, there were shift in the 
> areas covered by the 3 other ones (the issue was somehow subtle, in that, it 
> occured only if doing RasterIO requests that go beyond the tile extent, as 
> done with gdal_translate/gdalwarp when operating on the whole raster, but if 
> you picked up only a single pixel, or smaller subwindows, the result was 
> correct)

Ah, yes.  That would have been simpler.  I incorrectly attributed to the second warp.

Your finding on subwindow requests within a single tile is consistent with what I’ve observed for other output (and why this issue went unnoticed for so long).

> 
> You can use gdal_calc -A x.tif -B y.tif --outfile=diff.tif --calc "A-B"
> to compute differences.

Yep. But I do enough raster calculations on sources with different dimensions that I don’t want to think about preparing new files with identical extent/res/srs to feed to gdal_calc.  

That compute_diff.py utility handles all of this on the fly with convenience options (intersection extent, mean resolution, etc) using MEM datasets and the underlying gdal.ReprojectImage functionality wrapped in the pygeotools/lib/warplib.py module.  Probably cleaner ways to do this MEM ds “matching” with latest rasterio functionality.

> 
> The issue was indeed in reading the VRT (indepedantly of the later warping you 
> did it). With my fix, ref.vrt and ref.tif are now identical except a few 
> pixels at tile boundaries and raster edges due to subtle difference in how VRT 
> compositing and warp compositing deal with edge effects, but there is no 
> longer a systematic offset.

OK, I will test and check for any new edge artifacts.

> 
>> Is there something equivalent to -et 0 for gdalbuildvrt?  
> 
> Nope, modulo bugs, VRT reading is supposed to be ‘perfect'

:) Glad to hear it.

> 
>> The vrt DstRect offsets are suspicious and the output vrt
>> dimensions don’t match the sum of input tile dimensions. 
> 
> That's expected with your data. If you look at the georeferencing of your 
> tiles, they have the same resolution, but the shift between their origin is 
> not a multiple of the resolution, and they have a few pixels overlap, so it is 
> expected that gdalbuildvrt keeps that overlap and there are non-integer 
> coordinates (hence the need for -r cubic with gdalbuildvrt. Otherwise if you 
> had perfect mosaicing, it would be useless)

I'm glad that my imperfect tiles helped reveal an underlying bug in vrt generation :).

OK.  These tiles are generated independently.  I precompute all tile extents: https://github.com/dshean/gmbtools/blob/master/gmbtools/dem_mosaic_validtiles.py#L144
then make separate calls to the Ames Stereo Pipeline dem_mosaic utility in parallel.  It’s a little clunky, but efficient for the available resources.

The origin, extent and dimensions of all tiles should be systematic at this point, always multiples of resolution.  For example:

dem_mosaic -o hma_mos_30m-tile-389-median.tif --tr 30.0 --t_projwin -1204970.0 -38010.0 -1104970.0 61990.0 …

Produces output tile with extent: -1204985.0 -38045.0 -1104935.0 62005.0

So looks like dem_mosaic is padding the tile, apparently nonuniformly.  Will look into this, thanks for the heads up.  

dem_mosaic also recomputes output tile extent based on valid data in input rasters, trimming nodata where appropriate, which can lead to non-systematic origin and tile dimensions.  While the vrt should account for this, it’s probably a better idea to create more “perfect” tiles, even if we have to store a bunch of compressed nodata pixels.  

> 
>> Also, does the -r cubic option for gdalbuildvrt matter if I specify a
>> different resampling algorithm during a later warp operation?
> 
> Yes, the -r cubic in gdalbuildvrt matters, and is independant of the 
> resampling algorithm of a later warp operation. When you cubic-warp a cubic-
> VRT, you have in fact two cubic interpolations occuring.
> 
> I would not that in your workflow (not sure to have completely understood it), 
> you could directly do gdalwarp of your 4 ref tiles and reproject in the same 
> step: this would avoid those two cubic interpolation stages that introduce 
> some loss.

OK, this is good to know.  I agree it would be nice to limit to one resampling step, but not sure it will work for my needs.

If I understand correctly, I need the -r cubic in gdalbuildvrt to handle my imperfect tiles. 

My workflow requires that I create multiple vrts from large tiled datasets, each with different resolution, extent, srs.  I then need to extract the same projected extent from each vrt, with on-the-fly resampling to a common grid for subsequent analysis.  So I believe a second cubic warp is also required.

I was kind of hoping that GDAL might be able to recognize this and only perform a single warp under the hood, but I realize that is not trivial.

Thanks again for investigating, fixing and providing useful feedback.

> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From even.rouault at spatialys.com  Wed Dec  5 15:05:40 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Dec 2018 00:05:40 +0100
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
Message-ID: <29697825.AglevBtY4S@even-i700>

On jeudi 6 décembre 2018 11:40:49 CET Craig de Stigter wrote:
> Hi
> 
> I appreciate your comments on the pytest proposal and all the support to
> help get it this far. Given no actionable improvements have been suggested,
> and the feedback thus far seems encouraging...
> 
> I move to adopt RFC 72: Run tests with pytest.
> 
> https://trac.osgeo.org/gdal/wiki/rfc72_pytest

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sanfilippopablo at gmail.com  Thu Dec  6 08:59:07 2018
From: sanfilippopablo at gmail.com (Pablo Sanfilippo)
Date: Thu, 6 Dec 2018 13:59:07 -0300
Subject: [gdal-dev] Is writing/reading a VRTs an atomic operation?
Message-ID: <CAKYLMGacpCGX+85X1fULrE_PrRbyzEdbbbqddrryph2A-TiM2g@mail.gmail.com>

Hello!

I'm building an application in which I will have multiple concurrent
process reading and writing to a VRT file. The writers are just multiple
instances of the same process that create a .vrt off a list of tiffs in a
folder. The writer process implement file locking, so I'm sure no two
processes will try to write the .vrt at the same time. But the readers
(which are gdal_translate calls that use the .vrt as input) don't lock the
.vrt so they can be ran at the same time. I can see a race condition
happening if gdalbuildvrt overwrites the file when some gdal_translate is
opening it. So, if I'm understanding this correctly, the question boils
down to: Is the read call that gdal_translate makes when reading a vrt file
atomic? And is the write call that gdalbuildvrt makes when writing the file
atomic?

Hope this makes sense.

Pablo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181206/d6d6764e/attachment.html>

From even.rouault at spatialys.com  Thu Dec  6 09:25:09 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 06 Dec 2018 18:25:09 +0100
Subject: [gdal-dev] Is writing/reading a VRTs an atomic operation?
In-Reply-To: <CAKYLMGacpCGX+85X1fULrE_PrRbyzEdbbbqddrryph2A-TiM2g@mail.gmail.com>
References: <CAKYLMGacpCGX+85X1fULrE_PrRbyzEdbbbqddrryph2A-TiM2g@mail.gmail.com>
Message-ID: <1814753.bAuFR9uAxL@even-i700>

On jeudi 6 décembre 2018 13:59:07 CET Pablo Sanfilippo wrote:
> Hello!
> 
> I'm building an application in which I will have multiple concurrent
> process reading and writing to a VRT file. The writers are just multiple
> instances of the same process that create a .vrt off a list of tiffs in a
> folder. The writer process implement file locking, so I'm sure no two
> processes will try to write the .vrt at the same time. But the readers
> (which are gdal_translate calls that use the .vrt as input) don't lock the
> .vrt so they can be ran at the same time. I can see a race condition
> happening if gdalbuildvrt overwrites the file when some gdal_translate is
> opening it. So, if I'm understanding this correctly, the question boils
> down to: Is the read call that gdal_translate makes when reading a vrt file
> atomic? And is the write call that gdalbuildvrt makes when writing the file
> atomic?

Much likely not. At least there's no effort in the code to make read/write 
atomic.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sanfilippopablo at gmail.com  Thu Dec  6 09:46:18 2018
From: sanfilippopablo at gmail.com (Pablo Sanfilippo)
Date: Thu, 6 Dec 2018 14:46:18 -0300
Subject: [gdal-dev] Is writing/reading a VRTs an atomic operation?
In-Reply-To: <1814753.bAuFR9uAxL@even-i700>
References: <CAKYLMGacpCGX+85X1fULrE_PrRbyzEdbbbqddrryph2A-TiM2g@mail.gmail.com>
 <1814753.bAuFR9uAxL@even-i700>
Message-ID: <CAKYLMGYuC4CPWxKhs9cCsO_9KgV-q3f95M2qQddbkvX1LX5ssQ@mail.gmail.com>

Thanks!

On Thu, Dec 6, 2018 at 2:25 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 6 décembre 2018 13:59:07 CET Pablo Sanfilippo wrote:
> > Hello!
> >
> > I'm building an application in which I will have multiple concurrent
> > process reading and writing to a VRT file. The writers are just multiple
> > instances of the same process that create a .vrt off a list of tiffs in a
> > folder. The writer process implement file locking, so I'm sure no two
> > processes will try to write the .vrt at the same time. But the readers
> > (which are gdal_translate calls that use the .vrt as input) don't lock
> the
> > .vrt so they can be ran at the same time. I can see a race condition
> > happening if gdalbuildvrt overwrites the file when some gdal_translate is
> > opening it. So, if I'm understanding this correctly, the question boils
> > down to: Is the read call that gdal_translate makes when reading a vrt
> file
> > atomic? And is the write call that gdalbuildvrt makes when writing the
> file
> > atomic?
>
> Much likely not. At least there's no effort in the code to make read/write
> atomic.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181206/6528ba76/attachment.html>

From mofoyoda at gmail.com  Fri Dec  7 02:28:48 2018
From: mofoyoda at gmail.com (Nikolai Bezdna)
Date: Fri, 7 Dec 2018 13:28:48 +0300
Subject: [gdal-dev] Can't set clipsrc for gdal_grid utility
Message-ID: <48F90C1B-884F-42F6-9F5C-85832B17DB50@gmail.com>

I’m getting strange errors when using gdal_grid with clipsrc parameter:

When setting options like this:

-clipsrc "PG:dbname='postgres' host='dev.urbica.co' port='35488' user='postgres' password='postgres'" \
-clipsrcsql 'SELECT id, geom AS geometry FROM osm.city_boundary AS o' 

I get 

ERROR 1: Unable to open secondary datasource `osm' required by JOIN.
ERROR 1: Failed to identify source layer from datasource.
ERROR 1: Cannot load source clip geometry.


When trying to use a shapefile or geojson instead of DB table like this:

-clipsrc bnd.shp
OR 
-clipsrc bnd.geojson

I get
ERROR 4: `bnd.shp' not recognized as a supported file format.
ERROR 1: Cannot load source clip geometry.

I've checked my files with ogrinfo and QGIS - they're valid and contain one feature with multipolygon geometry:

INFO: Open of `bnd.geojson'
      using driver `GeoJSON' successful.
1: bnd (Multi Polygon)

How do I set clipping for gdal_grid output?


From even.rouault at spatialys.com  Fri Dec  7 03:04:41 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 07 Dec 2018 12:04:41 +0100
Subject: [gdal-dev] Can't set clipsrc for gdal_grid utility
In-Reply-To: <48F90C1B-884F-42F6-9F5C-85832B17DB50@gmail.com>
References: <48F90C1B-884F-42F6-9F5C-85832B17DB50@gmail.com>
Message-ID: <1618097.4M4rH0pKAO@even-i700>

Nikolai,

Investigating, I've discovered that -clipsrc from a vector datasource has been 
broken in gdal_grid since at least GDAL 2.1
I've just pushed a fix in master and 2.3 branch
As a workaround, you may specify the geometry as WKT. If it is too big you can 
put all the arguments (or some of them) in a text file, and use "gdal_grid --
optfile the_text_file.txt", and this will expand the content of 
the_text_file.txt as command line options.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Dec  7 03:15:07 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 07 Dec 2018 12:15:07 +0100
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
Message-ID: <12766362.iVCG5TXXR2@even-i700>

PSC members,

gentle reminder to cast your vote on this.

Thanks,

Even

> Hi
> 
> I appreciate your comments on the pytest proposal and all the support to
> help get it this far. Given no actionable improvements have been suggested,
> and the feedback thus far seems encouraging...
> 
> I move to adopt RFC 72: Run tests with pytest.
> 
> https://trac.osgeo.org/gdal/wiki/rfc72_pytest
> 
> 
> Cheers
> Craig de Stigter


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From dmorissette at mapgears.com  Fri Dec  7 07:09:09 2018
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Fri, 7 Dec 2018 10:09:09 -0500
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <12766362.iVCG5TXXR2@even-i700>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700>
Message-ID: <900a1d63-a862-4c4f-a53f-4ca8aa126da8@mapgears.com>

+1

Daniel


On 2018-12-07 6:15 a.m., Even Rouault wrote:
> PSC members,
> 
> gentle reminder to cast your vote on this.
> 
> Thanks,
> 
> Even
> 
>> Hi
>>
>> I appreciate your comments on the pytest proposal and all the support to
>> help get it this far. Given no actionable improvements have been suggested,
>> and the feedback thus far seems encouraging...
>>
>> I move to adopt RFC 72: Run tests with pytest.
>>
>> https://trac.osgeo.org/gdal/wiki/rfc72_pytest
>>
>>
>> Cheers
>> Craig de Stigter
> 
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From patrick.mckendree.young at gmail.com  Fri Dec  7 11:40:27 2018
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Fri, 7 Dec 2018 12:40:27 -0700
Subject: [gdal-dev] Construct a VRT such that is sees IMD, RPB, XML files?
Message-ID: <CADXYQQ49hiZpT2W0r0VXESEizn-ejnizz5Q856EccfTHBQMqmQ@mail.gmail.com>

Hi all,

I'm got some code that builds a VRT out of a bunch of image tiles.  These
tiles were originally chipped out of a DigitalGlobe 1B GeoTIFF that came
with extra metadata, specifically gdalinfo reports that its finding a .IMD,
.RPB, and .XML files along with the TIF itself, and gives me a nice summary
of the RPCs among other things.

My goal is to get the same behavior (e.g. recognize the RPCs) when I run
gdalinfo on the VRT.  Is there a field to add to the xml that composes the
VRT to get the driver to notice this?  My VRT is named with the same prefix
as all the metadata files, just like the original GeoTIFF, so it has me
thinking that the GeoTIFF driver is special in looking for these sidecars.
If I translate the VRT to a GeoTIFF with the same prefix, everything looks
good.

Thanks for any insights!
Patrick
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181207/9e8bb06b/attachment.html>

From Edward.Trochim at RadiantSolutions.com  Fri Dec  7 12:43:04 2018
From: Edward.Trochim at RadiantSolutions.com (Trochim, Edward)
Date: Fri, 7 Dec 2018 20:43:04 +0000
Subject: [gdal-dev] Reading Sentinel-2 Data in AWS
Message-ID: <CY1PR19MB0377D3C2CC933F3079B4B8B0F3AA0@CY1PR19MB0377.namprd19.prod.outlook.com>

Hi Everyone,

I am using gdal 2.3.2 to access Sentinel-2 data on the AWS Open Data Registry (https://registry.opendata.aws/sentinel-2/). I am using a version of GDAL I built myself in an Amazon Linux docker image with the intention of eventually running it on AWS Lambda.

I am trying to use gdal's built-in support for Sentinel-2 (https://www.gdal.org/frmt_sentinel2.html)  to easily read all the band data with vsis3 (https://www.gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsis3). However, when I do so I get this error:

# gdalinfo /vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml --config AWS_REQUEST_PAYER requester
ERROR 4: `/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml' not recognized as a supported file format.
gdalinfo failed - unable to open '/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml'.

After taking a look at the Sentinel2 driver source code I saw that I needed to prepend SENTINEL2_L2A: to the path. With that I got a different error:
# gdalinfo SENTINEL2_L2A:/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml --config AWS_REQUEST_PAYER requester
ERROR 1: Invalid syntax for SENTINEL2_L2A:
gdalinfo failed - unable to open 'SENTINEL2_L2A:/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml'.

After some investigation I found this pull request (https://github.com/OSGeo/gdal/pull/1069) which seems to add support for the data that I'm trying to access. However, after rebuilding off the master branch in github I'm still getting the same errors.

Accessing the band files individually seems to work correctly:
# gdalinfo /vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/R10m/B02.jp2 --config AWS_REQUEST_PAYER requester
Driver: JP2OpenJPEG/JPEG-2000 driver based on OpenJPEG library
Files: /vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/R10m/B02.jp2
Size is 10980, 10980
Coordinate System is:
PROJCS["WGS 84 / UTM zone 23S",
...

Does anyone know what I'm doing wrong?

In case it is helpful here is the output of gdalinfo -formats
Supported Formats:
  VRT -raster- (rw+v): Virtual Raster
  DERIVED -raster- (ro): Derived datasets using VRT pixel functions
  GTiff -raster- (rw+vs): GeoTIFF
  NITF -raster- (rw+vs): National Imagery Transmission Format
  RPFTOC -raster- (rovs): Raster Product Format TOC format
  ECRGTOC -raster- (rovs): ECRG TOC format
  HFA -raster- (rw+v): Erdas Imagine Images (.img)
  SAR_CEOS -raster- (rov): CEOS SAR Image
  CEOS -raster- (rov): CEOS Image
  JAXAPALSAR -raster- (rov): JAXA PALSAR Product Reader (Level 1.1/1.5)
  GFF -raster- (rov): Ground-based SAR Applications Testbed File Format (.gff)
  ELAS -raster- (rw+v): ELAS
  AIG -raster- (rov): Arc/Info Binary Grid
  AAIGrid -raster- (rwv): Arc/Info ASCII Grid
  GRASSASCIIGrid -raster- (rov): GRASS ASCII Grid
  SDTS -raster- (rov): SDTS Raster
  DTED -raster- (rwv): DTED Elevation Raster
  PNG -raster- (rwv): Portable Network Graphics
  JPEG -raster- (rwv): JPEG JFIF
  MEM -raster- (rw+): In Memory Raster
  JDEM -raster- (rov): Japanese DEM (.mem)
  GIF -raster- (rwv): Graphics Interchange Format (.gif)
  BIGGIF -raster- (rov): Graphics Interchange Format (.gif)
  ESAT -raster- (rov): Envisat Image Format
  BSB -raster- (rov): Maptech BSB Nautical Charts
  XPM -raster- (rwv): X11 PixMap Format
  BMP -raster- (rw+v): MS Windows Device Independent Bitmap
  DIMAP -raster- (rov): SPOT DIMAP
  AirSAR -raster- (rov): AirSAR Polarimetric Image
  RS2 -raster- (rovs): RadarSat 2 XML Product
  SAFE -raster- (rov): Sentinel-1 SAR SAFE Product
  PCIDSK -raster,vector- (rw+v): PCIDSK Database File
  PCRaster -raster- (rw+): PCRaster Raster File
  ILWIS -raster- (rw+v): ILWIS Raster Map
  SGI -raster- (rw+v): SGI Image File Format 1.0
  SRTMHGT -raster- (rwv): SRTMHGT File Format
  Leveller -raster- (rw+v): Leveller heightfield
  Terragen -raster- (rw+v): Terragen heightfield
  ISIS3 -raster- (rw+v): USGS Astrogeology ISIS cube (Version 3)
  ISIS2 -raster- (rw+v): USGS Astrogeology ISIS cube (Version 2)
  PDS -raster- (rov): NASA Planetary Data System
  PDS4 -raster- (rw+vs): NASA Planetary Data System 4
  VICAR -raster- (rov): MIPL VICAR file
  TIL -raster- (rov): EarthWatch .TIL
  ERS -raster- (rw+v): ERMapper .ers Labelled
  JP2OpenJPEG -raster,vector- (rwv): JPEG-2000 driver based on OpenJPEG library
  L1B -raster- (rovs): NOAA Polar Orbiter Level 1b Data Set
  FIT -raster- (rwv): FIT Image
  GRIB -raster- (rwv): GRIdded Binary (.grb, .grb2)
  RMF -raster- (rw+v): Raster Matrix Format
  WCS -raster- (rovs): OGC Web Coverage Service
  WMS -raster- (rwvs): OGC Web Map Service
  MSGN -raster- (rov): EUMETSAT Archive native (.nat)
  RST -raster- (rw+v): Idrisi Raster A.1
  INGR -raster- (rw+v): Intergraph Raster
  GSAG -raster- (rwv): Golden Software ASCII Grid (.grd)
  GSBG -raster- (rw+v): Golden Software Binary Grid (.grd)
  GS7BG -raster- (rw+v): Golden Software 7 Binary Grid (.grd)
  COSAR -raster- (rov): COSAR Annotated Binary Matrix (TerraSAR-X)
  TSX -raster- (rov): TerraSAR-X Product
  COASP -raster- (ro): DRDC COASP SAR Processor Raster
  R -raster- (rwv): R Object Data Store
  MAP -raster- (rov): OziExplorer .MAP
  KMLSUPEROVERLAY -raster- (rwv): Kml Super Overlay
  PDF -raster,vector- (w+): Geospatial PDF
  PLMOSAIC -raster- (ro): Planet Labs Mosaics API
  CALS -raster- (rwv): CALS (Type 1)
  WMTS -raster- (rwv): OGC Web Map Tile Service
  SENTINEL2 -raster- (rovs): Sentinel 2
  MRF -raster- (rw+v): Meta Raster Format
  PNM -raster- (rw+v): Portable Pixmap Format (netpbm)
  DOQ1 -raster- (rov): USGS DOQ (Old Style)
  DOQ2 -raster- (rov): USGS DOQ (New Style)
  PAux -raster- (rw+v): PCI .aux Labelled
  MFF -raster- (rw+v): Vexcel MFF Raster
  MFF2 -raster- (rw+): Vexcel MFF2 (HKV) Raster
  FujiBAS -raster- (rov): Fuji BAS Scanner Image
  GSC -raster- (rov): GSC Geogrid
  FAST -raster- (rov): EOSAT FAST Format
  BT -raster- (rw+v): VTP .bt (Binary Terrain) 1.3 Format
  LAN -raster- (rw+v): Erdas .LAN/.GIS
  CPG -raster- (rov): Convair PolGASP
  IDA -raster- (rw+v): Image Data and Analysis
  NDF -raster- (rov): NLAPS Data Format
  EIR -raster- (rov): Erdas Imagine Raw
  DIPEx -raster- (rov): DIPEx
  LCP -raster- (rwv): FARSITE v.4 Landscape File (.lcp)
  GTX -raster- (rw+v): NOAA Vertical Datum .GTX
  LOSLAS -raster- (rov): NADCON .los/.las Datum Grid Shift
  NTv1 -raster- (rov): NTv1 Datum Grid Shift
  NTv2 -raster- (rw+vs): NTv2 Datum Grid Shift
  CTable2 -raster- (rw+v): CTable2 Datum Grid Shift
  ACE2 -raster- (rov): ACE2
  SNODAS -raster- (rov): Snow Data Assimilation System
  KRO -raster- (rw+v): KOLOR Raw
  ROI_PAC -raster- (rw+v): ROI_PAC raster
  RRASTER -raster- (rw+v): R Raster
  BYN -raster- (rw+v): Natural Resources Canada's Geoid
  ARG -raster- (rwv): Azavea Raster Grid format
  RIK -raster- (rov): Swedish Grid RIK (.rik)
  USGSDEM -raster- (rwv): USGS Optional ASCII DEM (and CDED)
  GXF -raster- (rov): GeoSoft Grid Exchange Format
  NWT_GRD -raster- (rw+v): Northwood Numeric Grid Format .grd/.tab
  NWT_GRC -raster- (rov): Northwood Classified Grid Format .grc/.tab
  ADRG -raster- (rw+vs): ARC Digitized Raster Graphics
  SRP -raster- (rovs): Standard Raster Product (ASRP/USRP)
  BLX -raster- (rwv): Magellan topo (.blx)
  SAGA -raster- (rw+v): SAGA GIS Binary Grid (.sdat, .sg-grd-z)
  XYZ -raster- (rwv): ASCII Gridded XYZ
  HF2 -raster- (rwv): HF2/HFZ heightfield raster
  OZI -raster- (rov): OziExplorer Image File
  CTG -raster- (rov): USGS LULC Composite Theme Grid
  E00GRID -raster- (rov): Arc/Info Export E00 GRID
  ZMap -raster- (rwv): ZMap Plus Grid
  NGSGEOID -raster- (rov): NOAA NGS Geoid Height Grids
  IRIS -raster- (rov): IRIS data (.PPI, .CAPPi etc)
  PRF -raster- (rov): Racurs PHOTOMOD PRF
  RDA -raster- (ro): DigitalGlobe Raster Data Access driver
  EEDAI -raster- (ros): Earth Engine Data API Image
  SIGDEM -raster- (rwv): Scaled Integer Gridded DEM .sigdem
  IGNFHeightASCIIGrid -raster- (rov): IGN France height correction ASCII Grid
  CAD -raster,vector- (rovs): AutoCAD Driver
  PLSCENES -raster,vector- (ro): Planet Labs Scenes API
  GenBin -raster- (rov): Generic Binary (.hdr Labelled)
  ENVI -raster- (rw+v): ENVI .hdr Labelled
  EHdr -raster- (rw+v): ESRI .hdr Labelled
  ISCE -raster- (rw+v): ISCE raster
 HTTP -raster,vector- (ro): HTTP Fetching Wrapper

This electronic communication and any attachments may contain confidential and proprietary information of Radiant Solutions, Inc. If you are not the intended recipient, or an agent or employee responsible for delivering this communication to the intended recipient, or if you have received this communication in error, please do not print, copy, retransmit, disseminate or otherwise use the information. Please indicate to the sender that you have received this communication in error, and delete the copy you received.

Radiant Solutions reserves the right to monitor any electronic communication sent or received by its employees, agents or representatives.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181207/8bb31dda/attachment-0001.html>

From dustymugs at gmail.com  Fri Dec  7 13:02:09 2018
From: dustymugs at gmail.com (Bborie Park)
Date: Fri, 7 Dec 2018 13:02:09 -0800
Subject: [gdal-dev] Reading Sentinel-2 Data in AWS
In-Reply-To: <CY1PR19MB0377D3C2CC933F3079B4B8B0F3AA0@CY1PR19MB0377.namprd19.prod.outlook.com>
References: <CY1PR19MB0377D3C2CC933F3079B4B8B0F3AA0@CY1PR19MB0377.namprd19.prod.outlook.com>
Message-ID: <CAKVfRvGwg5U1SV7Z_F8UrHgc37_kEjUL2VjRz4-OX5jEFvwFZw@mail.gmail.com>

You may want to look at Google's store of Sentinel-2 as Google faithfully
follows the SAFE format, which looks to be what's expected in the Sentinel2
driver.

The data stored in AWS has been post-processed for SentinelHub so is not
SAFE format.

-bborie

On Fri, Dec 7, 2018 at 12:43 PM Trochim, Edward <
Edward.Trochim at radiantsolutions.com> wrote:

> Hi Everyone,
>
>
>
> I am using gdal 2.3.2 to access Sentinel-2 data on the AWS Open Data
> Registry (https://registry.opendata.aws/sentinel-2/). I am using a
> version of GDAL I built myself in an Amazon Linux docker image with the
> intention of eventually running it on AWS Lambda.
>
>
>
> I am trying to use gdal’s built-in support for Sentinel-2 (
> https://www.gdal.org/frmt_sentinel2.html)  to easily read all the band
> data with vsis3 (
> https://www.gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsis3).
> However, when I do so I get this error:
>
>
>
> # gdalinfo /vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml
> --config AWS_REQUEST_PAYER requester
>
> ERROR 4: `/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml'
> not recognized as a supported file format.
>
> gdalinfo failed - unable to open
> '/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml'.
>
>
>
> After taking a look at the Sentinel2 driver source code I saw that I
> needed to prepend SENTINEL2_L2A: to the path. With that I got a different
> error:
>
> # gdalinfo
> SENTINEL2_L2A:/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml
> --config AWS_REQUEST_PAYER requester
>
> ERROR 1: Invalid syntax for SENTINEL2_L2A:
>
> gdalinfo failed - unable to open
> 'SENTINEL2_L2A:/vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/metadata.xml'.
>
>
>
> After some investigation I found this pull request (
> https://github.com/OSGeo/gdal/pull/1069) which seems to add support for
> the data that I’m trying to access. However, after rebuilding off the
> master branch in github I’m still getting the same errors.
>
>
>
> Accessing the band files individually seems to work correctly:
>
> # gdalinfo /vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/R10m/B02.jp2
> --config AWS_REQUEST_PAYER requester
>
> Driver: JP2OpenJPEG/JPEG-2000 driver based on OpenJPEG library
>
> Files: /vsis3/sentinel-s2-l2a/tiles/23/L/MD/2016/10/27/0/R10m/B02.jp2
>
> Size is 10980, 10980
>
> Coordinate System is:
>
> PROJCS["WGS 84 / UTM zone 23S",
>
> …
>
>
>
> Does anyone know what I’m doing wrong?
>
>
>
> In case it is helpful here is the output of gdalinfo –formats
>
> Supported Formats:
>
>   VRT -raster- (rw+v): Virtual Raster
>
>   DERIVED -raster- (ro): Derived datasets using VRT pixel functions
>
>   GTiff -raster- (rw+vs): GeoTIFF
>
>   NITF -raster- (rw+vs): National Imagery Transmission Format
>
>   RPFTOC -raster- (rovs): Raster Product Format TOC format
>
>   ECRGTOC -raster- (rovs): ECRG TOC format
>
>   HFA -raster- (rw+v): Erdas Imagine Images (.img)
>
>   SAR_CEOS -raster- (rov): CEOS SAR Image
>
>   CEOS -raster- (rov): CEOS Image
>
>   JAXAPALSAR -raster- (rov): JAXA PALSAR Product Reader (Level 1.1/1.5)
>
>   GFF -raster- (rov): Ground-based SAR Applications Testbed File Format
> (.gff)
>
>   ELAS -raster- (rw+v): ELAS
>
>   AIG -raster- (rov): Arc/Info Binary Grid
>
>   AAIGrid -raster- (rwv): Arc/Info ASCII Grid
>
>   GRASSASCIIGrid -raster- (rov): GRASS ASCII Grid
>
>   SDTS -raster- (rov): SDTS Raster
>
>   DTED -raster- (rwv): DTED Elevation Raster
>
>   PNG -raster- (rwv): Portable Network Graphics
>
>   JPEG -raster- (rwv): JPEG JFIF
>
>   MEM -raster- (rw+): In Memory Raster
>
>   JDEM -raster- (rov): Japanese DEM (.mem)
>
>   GIF -raster- (rwv): Graphics Interchange Format (.gif)
>
>   BIGGIF -raster- (rov): Graphics Interchange Format (.gif)
>
>   ESAT -raster- (rov): Envisat Image Format
>
>   BSB -raster- (rov): Maptech BSB Nautical Charts
>
>   XPM -raster- (rwv): X11 PixMap Format
>
>   BMP -raster- (rw+v): MS Windows Device Independent Bitmap
>
>   DIMAP -raster- (rov): SPOT DIMAP
>
>   AirSAR -raster- (rov): AirSAR Polarimetric Image
>
>   RS2 -raster- (rovs): RadarSat 2 XML Product
>
>   SAFE -raster- (rov): Sentinel-1 SAR SAFE Product
>
>   PCIDSK -raster,vector- (rw+v): PCIDSK Database File
>
>   PCRaster -raster- (rw+): PCRaster Raster File
>
>   ILWIS -raster- (rw+v): ILWIS Raster Map
>
>   SGI -raster- (rw+v): SGI Image File Format 1.0
>
>   SRTMHGT -raster- (rwv): SRTMHGT File Format
>
>   Leveller -raster- (rw+v): Leveller heightfield
>
>   Terragen -raster- (rw+v): Terragen heightfield
>
>   ISIS3 -raster- (rw+v): USGS Astrogeology ISIS cube (Version 3)
>
>   ISIS2 -raster- (rw+v): USGS Astrogeology ISIS cube (Version 2)
>
>   PDS -raster- (rov): NASA Planetary Data System
>
>   PDS4 -raster- (rw+vs): NASA Planetary Data System 4
>
>   VICAR -raster- (rov): MIPL VICAR file
>
>   TIL -raster- (rov): EarthWatch .TIL
>
>   ERS -raster- (rw+v): ERMapper .ers Labelled
>
>   JP2OpenJPEG -raster,vector- (rwv): JPEG-2000 driver based on OpenJPEG
> library
>
>   L1B -raster- (rovs): NOAA Polar Orbiter Level 1b Data Set
>
>   FIT -raster- (rwv): FIT Image
>
>   GRIB -raster- (rwv): GRIdded Binary (.grb, .grb2)
>
>   RMF -raster- (rw+v): Raster Matrix Format
>
>   WCS -raster- (rovs): OGC Web Coverage Service
>
>   WMS -raster- (rwvs): OGC Web Map Service
>
>   MSGN -raster- (rov): EUMETSAT Archive native (.nat)
>
>   RST -raster- (rw+v): Idrisi Raster A.1
>
>   INGR -raster- (rw+v): Intergraph Raster
>
>   GSAG -raster- (rwv): Golden Software ASCII Grid (.grd)
>
>   GSBG -raster- (rw+v): Golden Software Binary Grid (.grd)
>
>   GS7BG -raster- (rw+v): Golden Software 7 Binary Grid (.grd)
>
>   COSAR -raster- (rov): COSAR Annotated Binary Matrix (TerraSAR-X)
>
>   TSX -raster- (rov): TerraSAR-X Product
>
>   COASP -raster- (ro): DRDC COASP SAR Processor Raster
>
>   R -raster- (rwv): R Object Data Store
>
>   MAP -raster- (rov): OziExplorer .MAP
>
>   KMLSUPEROVERLAY -raster- (rwv): Kml Super Overlay
>
>   PDF -raster,vector- (w+): Geospatial PDF
>
>   PLMOSAIC -raster- (ro): Planet Labs Mosaics API
>
>   CALS -raster- (rwv): CALS (Type 1)
>
>   WMTS -raster- (rwv): OGC Web Map Tile Service
>
>   SENTINEL2 -raster- (rovs): Sentinel 2
>
>   MRF -raster- (rw+v): Meta Raster Format
>
>   PNM -raster- (rw+v): Portable Pixmap Format (netpbm)
>
>   DOQ1 -raster- (rov): USGS DOQ (Old Style)
>
>   DOQ2 -raster- (rov): USGS DOQ (New Style)
>
>   PAux -raster- (rw+v): PCI .aux Labelled
>
>   MFF -raster- (rw+v): Vexcel MFF Raster
>
>   MFF2 -raster- (rw+): Vexcel MFF2 (HKV) Raster
>
>   FujiBAS -raster- (rov): Fuji BAS Scanner Image
>
>   GSC -raster- (rov): GSC Geogrid
>
>   FAST -raster- (rov): EOSAT FAST Format
>
>   BT -raster- (rw+v): VTP .bt (Binary Terrain) 1.3 Format
>
>   LAN -raster- (rw+v): Erdas .LAN/.GIS
>
>   CPG -raster- (rov): Convair PolGASP
>
>   IDA -raster- (rw+v): Image Data and Analysis
>
>   NDF -raster- (rov): NLAPS Data Format
>
>   EIR -raster- (rov): Erdas Imagine Raw
>
>   DIPEx -raster- (rov): DIPEx
>
>   LCP -raster- (rwv): FARSITE v.4 Landscape File (.lcp)
>
>   GTX -raster- (rw+v): NOAA Vertical Datum .GTX
>
>   LOSLAS -raster- (rov): NADCON .los/.las Datum Grid Shift
>
>   NTv1 -raster- (rov): NTv1 Datum Grid Shift
>
>   NTv2 -raster- (rw+vs): NTv2 Datum Grid Shift
>
>   CTable2 -raster- (rw+v): CTable2 Datum Grid Shift
>
>   ACE2 -raster- (rov): ACE2
>
>   SNODAS -raster- (rov): Snow Data Assimilation System
>
>   KRO -raster- (rw+v): KOLOR Raw
>
>   ROI_PAC -raster- (rw+v): ROI_PAC raster
>
>   RRASTER -raster- (rw+v): R Raster
>
>   BYN -raster- (rw+v): Natural Resources Canada's Geoid
>
>   ARG -raster- (rwv): Azavea Raster Grid format
>
>   RIK -raster- (rov): Swedish Grid RIK (.rik)
>
>   USGSDEM -raster- (rwv): USGS Optional ASCII DEM (and CDED)
>
>   GXF -raster- (rov): GeoSoft Grid Exchange Format
>
>   NWT_GRD -raster- (rw+v): Northwood Numeric Grid Format .grd/.tab
>
>   NWT_GRC -raster- (rov): Northwood Classified Grid Format .grc/.tab
>
>   ADRG -raster- (rw+vs): ARC Digitized Raster Graphics
>
>   SRP -raster- (rovs): Standard Raster Product (ASRP/USRP)
>
>   BLX -raster- (rwv): Magellan topo (.blx)
>
>   SAGA -raster- (rw+v): SAGA GIS Binary Grid (.sdat, .sg-grd-z)
>
>   XYZ -raster- (rwv): ASCII Gridded XYZ
>
>   HF2 -raster- (rwv): HF2/HFZ heightfield raster
>
>   OZI -raster- (rov): OziExplorer Image File
>
>   CTG -raster- (rov): USGS LULC Composite Theme Grid
>
>   E00GRID -raster- (rov): Arc/Info Export E00 GRID
>
>   ZMap -raster- (rwv): ZMap Plus Grid
>
>   NGSGEOID -raster- (rov): NOAA NGS Geoid Height Grids
>
>   IRIS -raster- (rov): IRIS data (.PPI, .CAPPi etc)
>
>   PRF -raster- (rov): Racurs PHOTOMOD PRF
>
>   RDA -raster- (ro): DigitalGlobe Raster Data Access driver
>
>   EEDAI -raster- (ros): Earth Engine Data API Image
>
>   SIGDEM -raster- (rwv): Scaled Integer Gridded DEM .sigdem
>
>   IGNFHeightASCIIGrid -raster- (rov): IGN France height correction ASCII
> Grid
>
>   CAD -raster,vector- (rovs): AutoCAD Driver
>
>   PLSCENES -raster,vector- (ro): Planet Labs Scenes API
>
>   GenBin -raster- (rov): Generic Binary (.hdr Labelled)
>
>   ENVI -raster- (rw+v): ENVI .hdr Labelled
>
>   EHdr -raster- (rw+v): ESRI .hdr Labelled
>
>   ISCE -raster- (rw+v): ISCE raster
>
>  HTTP -raster,vector- (ro): HTTP Fetching Wrapper
>
> This electronic communication and any attachments may contain confidential
> and proprietary information of Radiant Solutions, Inc. If you are not the
> intended recipient, or an agent or employee responsible for delivering this
> communication to the intended recipient, or if you have received this
> communication in error, please do not print, copy, retransmit, disseminate
> or otherwise use the information. Please indicate to the sender that you
> have received this communication in error, and delete the copy you
> received.
>
> Radiant Solutions reserves the right to monitor any electronic
> communication sent or received by its employees, agents or representatives.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181207/8383089e/attachment-0001.html>

From patrick.mckendree.young at gmail.com  Fri Dec  7 13:03:03 2018
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Fri, 7 Dec 2018 14:03:03 -0700
Subject: [gdal-dev] Construct a VRT such that is sees IMD, RPB,
	XML files?
In-Reply-To: <CADXYQQ49hiZpT2W0r0VXESEizn-ejnizz5Q856EccfTHBQMqmQ@mail.gmail.com>
References: <CADXYQQ49hiZpT2W0r0VXESEizn-ejnizz5Q856EccfTHBQMqmQ@mail.gmail.com>
Message-ID: <CADXYQQ5oZb0Vdu=F7TTytv7a10rt_Sx14QFVNYi7T5H6xiL7sw@mail.gmail.com>

Well I used gdal_translate to make a VRT directly from the original TIF and
it revealed the answer; Metadata!

<Metadata domain="RPC">
    <MDI key="HEIGHT_OFF">226</MDI>
    <MDI key="HEIGHT_SCALE">501</MDI>
    ...and so on...
  </Metadata>



On Fri, Dec 7, 2018 at 12:40 PM Patrick Young <
patrick.mckendree.young at gmail.com> wrote:

> Hi all,
>
> I'm got some code that builds a VRT out of a bunch of image tiles.  These
> tiles were originally chipped out of a DigitalGlobe 1B GeoTIFF that came
> with extra metadata, specifically gdalinfo reports that its finding a .IMD,
> .RPB, and .XML files along with the TIF itself, and gives me a nice summary
> of the RPCs among other things.
>
> My goal is to get the same behavior (e.g. recognize the RPCs) when I run
> gdalinfo on the VRT.  Is there a field to add to the xml that composes the
> VRT to get the driver to notice this?  My VRT is named with the same prefix
> as all the metadata files, just like the original GeoTIFF, so it has me
> thinking that the GeoTIFF driver is special in looking for these sidecars.
> If I translate the VRT to a GeoTIFF with the same prefix, everything looks
> good.
>
> Thanks for any insights!
> Patrick
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181207/9b4f5fe1/attachment.html>

From even.rouault at spatialys.com  Fri Dec  7 13:11:01 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 07 Dec 2018 22:11:01 +0100
Subject: [gdal-dev] Reading Sentinel-2 Data in AWS
In-Reply-To: <CAKVfRvGwg5U1SV7Z_F8UrHgc37_kEjUL2VjRz4-OX5jEFvwFZw@mail.gmail.com>
References: <CY1PR19MB0377D3C2CC933F3079B4B8B0F3AA0@CY1PR19MB0377.namprd19.prod.outlook.com>
 <CAKVfRvGwg5U1SV7Z_F8UrHgc37_kEjUL2VjRz4-OX5jEFvwFZw@mail.gmail.com>
Message-ID: <3390974.0LtKgLXWhK@even-i700>

On vendredi 7 décembre 2018 13:02:09 CET Bborie Park wrote:
> You may want to look at Google's store of Sentinel-2 as Google faithfully
> follows the SAFE format, which looks to be what's expected in the Sentinel2
> driver.
> 
> The data stored in AWS has been post-processed for SentinelHub so is not
> SAFE format.

Another important note is that while /vsis3/ and openjpeg or jp2kak
technically work, they cause a huge number of GET request to be issued,
and as AWS_REQUEST_PAYER=requester, you may end up with a significant bill
if you do mass processing.

If you read whole .jp2 files, you'd better download locally them in
a single GET request.

See 
https://medium.com/@_VincentS_/do-you-really-want-people-using-your-data-ec94cd94dc3f

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jonathan-lists at lightpear.com  Sat Dec  8 14:42:49 2018
From: jonathan-lists at lightpear.com (Jonathan Moules)
Date: Sat, 8 Dec 2018 22:42:49 +0000
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
Message-ID: <5e5a73ff-ff64-a864-6399-a00d1aee8f05@lightpear.com>

Hi,

PyTest is a great test-suite.

If I may make one suggestion as someone who has used it for a while - 
it's worth spending a little thought on coming up with a scheme for 
test-ids. Especially if you're going to use parameterisation.

Otherwise PyTest comes up with names that may be accurate (they're a 
concatenation of the parameters), but are relatively meaningless. For 
example "gdaladdo--100", "gdaladdo-foo", etc, as compared to more useful 
ids like "gdaladdo-too-low-input", "gdaladdo-bad-string-input" which 
tell you immediately what the test is actually meant to be testing.

There's a hook called pytest_make_parametrize_id which allows you to 
create your own ids (I find the built-in methods of id generation either 
cumbersome, or bit-rot prone).

I'm suggesting it now because it's more helpful if you do it from the start.

Cheers,

Jonathan



On 2018-12-05 22:40, Craig de Stigter wrote:
> Hi
>
> I appreciate your comments on the pytest proposal and all the support 
> to help get it this far. Given no actionable improvements have been 
> suggested, and the feedback thus far seems encouraging...
>
> I move to adopt RFC 72: Run tests with pytest.
>
> https://trac.osgeo.org/gdal/wiki/rfc72_pytest
>
>
> Cheers
> Craig de Stigter
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181208/f1759c7b/attachment.html>

From nicolas.cadieux at archeotec.ca  Sun Dec  9 08:42:27 2018
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Sun, 9 Dec 2018 11:42:27 -0500
Subject: [gdal-dev] Lost in decimals... geotransform in python 2.7
Message-ID: <fe228b4e-45ac-efb1-d2ba-3127483cf52a@archeotec.ca>

Hi,

I am trying to get the four corners of a raster the size of Canada (very 
big therefore decimals count).  If I get the geotransform, I get:

geotransform: (-132.00041666666667, 0.0008333333333333334, 0.0, 
53.000416666666666, 0.0, -0.0008333333333333334)
In Python 2.7:
print (geotransform[0]) ->               -132.000416667
print float(geotransform[0]) ->       -132.000416667
print str(geotransform[0]) ->           -132.000416667
print Decimal(geotransform[0]) -> 
-132.000416666666666287710540927946567535400390625
In Qgis3x (on Windows64), I get:    -132.0004166666666663 in the layer 
properties.
Qgis looks like the end result of:
getcontext().prec = 19
print Decimal(geotransform[0])/Decimal(1)

Must I use "Decimals" to deal with the geotransform output? Using float 
will truncate the decimal place and I may end up with an extra pixel row 
or column because of the size of the raster. So what is the proper way 
to work with this?

Thanks
Nicolas

From even.rouault at spatialys.com  Sun Dec  9 09:27:47 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 09 Dec 2018 18:27:47 +0100
Subject: [gdal-dev] Lost in decimals... geotransform in python 2.7
In-Reply-To: <fe228b4e-45ac-efb1-d2ba-3127483cf52a@archeotec.ca>
References: <fe228b4e-45ac-efb1-d2ba-3127483cf52a@archeotec.ca>
Message-ID: <7765219.S2GaqJD4Ng@even-i700>

On dimanche 9 décembre 2018 11:42:27 CET Nicolas Cadieux wrote:
> Hi,
> 
> I am trying to get the four corners of a raster the size of Canada (very
> big therefore decimals count).  If I get the geotransform, I get:
> 
> geotransform: (-132.00041666666667, 0.0008333333333333334, 0.0,
> 53.000416666666666, 0.0, -0.0008333333333333334)
> In Python 2.7:
> print (geotransform[0]) ->               -132.000416667
> print float(geotransform[0]) ->       -132.000416667
> print str(geotransform[0]) ->           -132.000416667
> print Decimal(geotransform[0]) ->
> -132.000416666666666287710540927946567535400390625
> In Qgis3x (on Windows64), I get:    -132.0004166666666663 in the layer
> properties.
> Qgis looks like the end result of:
> getcontext().prec = 19
> print Decimal(geotransform[0])/Decimal(1)
> 
> Must I use "Decimals" to deal with the geotransform output? Using float
> will truncate the decimal place and I may end up with an extra pixel row
> or column because of the size of the raster. So what is the proper way
> to work with this?

Nicolas,

Using float is perfectly fine. Internally GDAL stores the geotransform 
components as IEEE-754 64bit numbers, and Python float is able to deal with 
that (it uses this representation internally on platforms you care about). It 
is just that the formatting functions (str, etc.) you use to convert the 
number to string truncate the number of decimals. If you use repr() instead 
you'll have more decimals

>>> repr(-132.00041666666667)
'-132.00041666666667'

Anyway, when dealing with floating point numbers, independently of their 
decimal representation, you must be aware that they don't necessarily capture 
perfectly the "real" number ( here -(132 + 0.5 / 1200) would be the exact 
number ), so you must be ready to add appropriate rounding in computations 
wherever needed.

Use string representation only as late as possible, or use 19 decimal 
significant figures ('%.19g' C formatting) to keep the original precision of a 
IEEE-754 64bit number.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bjorn.harrtell at gmail.com  Sun Dec  9 11:36:19 2018
From: bjorn.harrtell at gmail.com (=?UTF-8?Q?Bj=C3=B6rn_Harrtell?=)
Date: Sun, 9 Dec 2018 20:36:19 +0100
Subject: [gdal-dev] FlatGeobuf;
	proposal for a new performance oriented vector file format
Message-ID: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>

Hi GDAL/OGR folks,

In my spare time I've been working on a vector file format called
FlatGeobuf (tentatively). The main reason, besides curiosity and learning,
I'm putting time into it is that I think shapefile still rules the
read/query static data performance game, which is kind of sad, and probably
one of the reasons it is still so widely popular. Also, the main competitor
(GeoPackage) isn't suitable for streaming access (AFAIK) which shapefiles
also handles surprisingly (?) well.

By using a performance focused write once binary encoding (flatbuffers),
schema constraint and focusing on read/query performance by clustering on
an optimal spatial index (Packed Hilbert R-Tree) I hope to be able to beat
shapefile performance and at the same time be optimal for streaming/cloud
access.

I think I'm starting to get somewhere, more details and source is at
https://github.com/bjornharrtell/flatgeobuf and I have an early proof of
concept driver implementation at
https://github.com/bjornharrtell/gdal/tree/flatgeobuf and results are
already quite promising - it can do roundtrip read/write and is already
quite a bit faster than shapefile. I also have implemented naive read only
QGIS provider for experimental purposes.

Basically I'm fishing for interest in this effort, hoping that others will
see potential in it even if it's "yet another format" and far from
final/stable yet. Any feedback is welcome. As I see it, GDAL is a good
place for a format specification and reference implementation to incubate.

Some additional food for thought that I've had during the experimentation:

1. The main in memory representations of geometry/coordinates seem to be
either separate arrays per dimension (GDAL (partially?) and QGIS) or a
single array with dimension as stride. I've chosen the latter as of yet but
I'm still a bit undecided. There is of course a substantial involved in
transforming between the two representations so the situation with two
competing models is a bit unfortunate. I'm also not sure about which of
these models are objectively "better" than the other?

2. One could get better space efficiency with protobuf instead of
flatbuffers, but it has a performance cost. I have not gone far into
investigating how much though and one could even reason about supporting
both these encodings in a single format specification but it's taking it a
bit far I think.

3. Is there a reason to support different packing strategies for the R-Tree
or is Packed Hilbert a good compromise (besides it being beautifully simple
to implement)?

4. FlatGeobuf is perhaps a too technical name, not catchy enough and has a
bad/boring abbreviation. Other candidates I've considered are OpenGeoFile,
OpenVectorFile or OpenSpatialFile but I'm undecided. Any ideas? :)

Regards,

Björn Harrtell
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181209/b36dd200/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Sun Dec  9 12:59:29 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Sun, 9 Dec 2018 13:59:29 -0700 (MST)
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <12766362.iVCG5TXXR2@even-i700>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700>
Message-ID: <1544389169983-0.post@n6.nabble.com>

+0

-Jukka Rahkonen-


Even Rouault-2 wrote
> PSC members,
> 
> gentle reminder to cast your vote on this.
> 
> Thanks,
> 
> Even





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From craig.destigter at koordinates.com  Sun Dec  9 19:04:57 2018
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Mon, 10 Dec 2018 16:04:57 +1300
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <1544389169983-0.post@n6.nabble.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700> <1544389169983-0.post@n6.nabble.com>
Message-ID: <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>

Jonathan

> it's worth spending a little thought on coming up with a scheme for
test-ids.

I've been through the list of parametrized tests and tweaked the `ids`
kwargs to make them a little more helpful at first glance:
https://github.com/OSGeo/gdal/pull/963/commits/8db599e7bc08b7dc73d81591898ed0f5f4243a58

I didn't see any way to use `pytest_make_parametrize_id` really; IDs
rightly vary enough between tests that I can't see that hook being very
useful here.

Cheers
Craig de Stigter

On Mon, 10 Dec 2018 at 09:59 jratike80 <jukka.rahkonen at maanmittauslaitos.fi>
wrote:

> +0
>
> -Jukka Rahkonen-
>
>
> Even Rouault-2 wrote
> > PSC members,
> >
> > gentle reminder to cast your vote on this.
> >
> > Thanks,
> >
> > Even
>
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/23ec80fb/attachment.html>

From schwehr at gmail.com  Sun Dec  9 19:48:12 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 9 Dec 2018 19:48:12 -0800
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700> <1544389169983-0.post@n6.nabble.com>
 <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
Message-ID: <CACmBxytB7Vr35y4V-OFisYc3MyTLdGCap9M1ipekGojfBN15wQ@mail.gmail.com>

I haven't had a chance to read the RFC yet, so I can't yet vote.  However,
a huge thank you to Craig and everyone else who put in effort to make this
happen!

On Sun, Dec 9, 2018 at 7:05 PM Craig de Stigter <
craig.destigter at koordinates.com> wrote:

> Jonathan
>
> > it's worth spending a little thought on coming up with a scheme for
> test-ids.
>
> I've been through the list of parametrized tests and tweaked the `ids`
> kwargs to make them a little more helpful at first glance:
> https://github.com/OSGeo/gdal/pull/963/commits/8db599e7bc08b7dc73d81591898ed0f5f4243a58
>
> I didn't see any way to use `pytest_make_parametrize_id` really; IDs
> rightly vary enough between tests that I can't see that hook being very
> useful here.
>
> Cheers
> Craig de Stigter
>
> On Mon, 10 Dec 2018 at 09:59 jratike80 <
> jukka.rahkonen at maanmittauslaitos.fi> wrote:
>
>> +0
>>
>> -Jukka Rahkonen-
>>
>>
>> Even Rouault-2 wrote
>> > PSC members,
>> >
>> > gentle reminder to cast your vote on this.
>> >
>> > Thanks,
>> >
>> > Even
>>
>>
>>
>>
>>
>> --
>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181209/fb776bdf/attachment.html>

From even.rouault at spatialys.com  Mon Dec 10 04:18:58 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 10 Dec 2018 13:18:58 +0100
Subject: [gdal-dev] FlatGeobuf;
	proposal for a new performance oriented vector file format
In-Reply-To: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
References: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
Message-ID: <4698893.KAtX7gbmDh@even-i700>

Björn,

> In my spare time I've been working on a vector file format called
> FlatGeobuf (tentatively). The main reason, besides curiosity and learning,
> I'm putting time into it is that I think shapefile still rules the
> read/query static data performance game, which is kind of sad, and probably
> one of the reasons it is still so widely popular. Also, the main competitor
> (GeoPackage) isn't suitable for streaming access (AFAIK)

I suspect that you could organize the layout of a sqlite3 file to be streaming 
friendly, but the sqlite3 lib itself is probably not ready for that (or you 
have to cheat by buffering a sufficiently large number of bytes in memory and 
use a custom VFS to read in that buffer. at that point, implementing your own 
dedicated sqlite3 reader might be better. likely doable, but not trivial). 
Random access is possible (you can use /vsicurl/ etc on a geopackage), but it 
might involve a number of seeks and small reads in the B-Tree / R-Tree.

That raises a major question. Which use case(s) do you want to address 
specifically. From what I've understood, for network access:
- streaming access for progressive display as bytes come in
- efficient bbox queries with minimized number of bytes and ranges in the 
files to read (minimizing the number of ranges of bytes is probably the most 
important criterion since reading 1 byte or 1000 will take the same time)

> I think I'm starting to get somewhere, more details and source is at
> https://github.com/bjornharrtell/flatgeobuf and I have an early proof of
> concept driver implementation at
> https://github.com/bjornharrtell/gdal/tree/flatgeobuf and results are
> already quite promising - it can do roundtrip read/write and is already
> quite a bit faster than shapefile. I also have implemented naive read only
> QGIS provider for experimental purposes.

What are the I and O in the I+O related to the R-Tree index ?

Wondering if a 3D index could be an option in case you want to address the 
full 3D case at some point. But might be something for later.

I'm not familiar with flatbuf, but is random access in the Feature table by 
feature index is possible (without a preliminary scan pass), similarly to a 
.shx file in a shapefile ?

Just a detail: it could be nice to have some global flag in the header that 
would mean "index of any feature = its FID, its FID - 1, or no particular 
correlation between feature index and feature FID"

For completness of the attribute types, you could have date, time and binary. 
Can the concept of null value or empty value or both for a field value be 
encoded ?

The Column structure could also receive more optional info: a long 
description, maximum length for string, optional precision/scale formatting 
for those nostalgic of decimal formatting 

If you want full genericity to express a SRS, allowing a WKT CRS string as an 
alternative for authority+code.

> 
> Basically I'm fishing for interest in this effort, hoping that others will
> see potential in it even if it's "yet another format" and far from
> final/stable yet. Any feedback is welcome. As I see it, GDAL is a good
> place for a format specification and reference implementation to incubate.
> 
> Some additional food for thought that I've had during the experimentation:
> 
> 1. The main in memory representations of geometry/coordinates seem to be
> either separate arrays per dimension (GDAL (partially?) and QGIS) or a
> single array with dimension as stride. I've chosen the latter as of yet but
> I'm still a bit undecided. There is of course a substantial involved in
> transforming between the two representations so the situation with two
> competing models is a bit unfortunate. I'm also not sure about which of
> these models are objectively "better" than the other?

Why not just using WKB encoding since it has likely similar size and 
performance characteristics to the flatbuf encoding, with the main advantage 
of being widely implemented and supporting other geometry types like 
CircularString, PolyhedralSurface, etc..., which you need if you want to fully 
compete with GeoPackage ?

> 
> 2. One could get better space efficiency with protobuf instead of
> flatbuffers, but it has a performance cost. I have not gone far into
> investigating how much though and one could even reason about supporting
> both these encodings in a single format specification but it's taking it a
> bit far I think.

Contradicts a bit my above point, but if you decide for a custom geometry 
encoding, why not allowing int32 for vertex values, with a offset+scale 
setting ? (ala OpenStreetmap PBF)

If the main use case you want to address if cloud use, I was wondering if it 
would make sense to add a compression layer (ZSTD compress each Feature ?, or 
a group of features) to reduce the time spent in waiting for data from the 
network. Or perhaps not, and just let the transport layer do the compression 
(HTTP Encoding: gzip)

> 4. FlatGeobuf is perhaps a too technical name, not catchy enough and has a
> bad/boring abbreviation. Other candidates I've considered are OpenGeoFile,
> OpenVectorFile or OpenSpatialFile but I'm undecided. Any ideas? :)

COF = Cloud Optimized Features ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From idan at miara.com  Mon Dec 10 06:29:09 2018
From: idan at miara.com (Idan Miara)
Date: Mon, 10 Dec 2018 16:29:09 +0200
Subject: [gdal-dev] GPKG: int16 with scale
Message-ID: <CAEDrt38mStNkuHoEiTypVmdv0G5bJY5nE44B24PAP44H9On2yA@mail.gmail.com>

Hi,

I'm trying unsuccessfully to save Int16 dataset with scale != 1.0 in GPKG.

If I understand correctly the remark about "Tiled gridded coverage data"
here:
https://www.gdal.org/drv_geopackage_raster.html
I expect offset and scale for Int16 to be supported in gdal.

I tried to gdal_translate an int16 dataset from GTiff to GPKG and the scale
value is lost (at lease as far as QGIS is concerned).
I also translated the output gpkg back to GTiff and verified that the scale
is 1.0 instead of 2.0 as in my original GTiff.

I've tried edit the gpkg db with a sqlite editor and edit the scale value
manually and reloaded it in QGIS but then QGIS shows weird values (I
expected values around 600, without scaling I get values around 300 and
after changing the scale value manually from 1.0 to 2.0 I get values >
32,000).

any suggestions?

Kind regards,
Idan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/ab1fb192/attachment.html>

From even.rouault at spatialys.com  Mon Dec 10 06:59:18 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 10 Dec 2018 15:59:18 +0100
Subject: [gdal-dev] GPKG: int16 with scale
In-Reply-To: <CAEDrt38mStNkuHoEiTypVmdv0G5bJY5nE44B24PAP44H9On2yA@mail.gmail.com>
References: <CAEDrt38mStNkuHoEiTypVmdv0G5bJY5nE44B24PAP44H9On2yA@mail.gmail.com>
Message-ID: <2289229.RPQMbYteyR@even-i700>

On lundi 10 décembre 2018 16:29:09 CET Idan Miara wrote:
> Hi,
> 
> I'm trying unsuccessfully to save Int16 dataset with scale != 1.0 in GPKG.
> 
> If I understand correctly the remark about "Tiled gridded coverage data"
> here:
> https://www.gdal.org/drv_geopackage_raster.html
> I expect offset and scale for Int16 to be supported in gdal.
> 
> I tried to gdal_translate an int16 dataset from GTiff to GPKG and the scale
> value is lost (at lease as far as QGIS is concerned).
> I also translated the output gpkg back to GTiff and verified that the scale
> is 1.0 instead of 2.0 as in my original GTiff.

Yes, the Scale and Offset concepts as exposed by GDAL are ignored in reading 
or writing by the GeoPackage driver and haven't been mapped to the 
corresponding GPKG concepts. I guess this could be done, but for now the GPKG 
scale and offset have been kept as internal details when forcing a PNG 
encoding for a Float32 data type, and the driver will automatically set and 
apply scale and unscale, but not expose the raw values and the scale and 
offset metadata values.

For now, the solution is to use gdal_translate -unscale so as to convert the 
raw values into values after applying scale and offset.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From idan at miara.com  Mon Dec 10 07:05:47 2018
From: idan at miara.com (Idan Miara)
Date: Mon, 10 Dec 2018 17:05:47 +0200
Subject: [gdal-dev] GPKG: int16 with scale
In-Reply-To: <2289229.RPQMbYteyR@even-i700>
References: <CAEDrt38mStNkuHoEiTypVmdv0G5bJY5nE44B24PAP44H9On2yA@mail.gmail.com>
 <2289229.RPQMbYteyR@even-i700>
Message-ID: <CAEDrt3_XtU63LvMKhEDE4RzVyZc12n9pCuSs4Cp2qZjcZw=PjA@mail.gmail.com>

Got it, thanks for your quick response!

On Mon, 10 Dec 2018 at 16:59, Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 10 décembre 2018 16:29:09 CET Idan Miara wrote:
> > Hi,
> >
> > I'm trying unsuccessfully to save Int16 dataset with scale != 1.0 in
> GPKG.
> >
> > If I understand correctly the remark about "Tiled gridded coverage data"
> > here:
> > https://www.gdal.org/drv_geopackage_raster.html
> > I expect offset and scale for Int16 to be supported in gdal.
> >
> > I tried to gdal_translate an int16 dataset from GTiff to GPKG and the
> scale
> > value is lost (at lease as far as QGIS is concerned).
> > I also translated the output gpkg back to GTiff and verified that the
> scale
> > is 1.0 instead of 2.0 as in my original GTiff.
>
> Yes, the Scale and Offset concepts as exposed by GDAL are ignored in
> reading
> or writing by the GeoPackage driver and haven't been mapped to the
> corresponding GPKG concepts. I guess this could be done, but for now the
> GPKG
> scale and offset have been kept as internal details when forcing a PNG
> encoding for a Float32 data type, and the driver will automatically set
> and
> apply scale and unscale, but not expose the raw values and the scale and
> offset metadata values.
>
> For now, the solution is to use gdal_translate -unscale so as to convert
> the
> raw values into values after applying scale and offset.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/347f2fd9/attachment.html>

From eh0907-osgeo at 42net.de  Mon Dec 10 11:11:33 2018
From: eh0907-osgeo at 42net.de (Erik Heinz)
Date: Mon, 10 Dec 2018 20:11:33 +0100
Subject: [gdal-dev] gdalwarp ignoring scale and offset
Message-ID: <20181210191133.GA30328@morgoth.42net.de>

Hello everyone,

I like to use geotiff files with UInt16 raster bands and scale/offset
metadata for saving cm-resolution elevation data in an efficient way. 

In principle, this works well with gdal. As of version 2.3.2, however,
gdalwarp seems to silently drop the offset and scale values. I'm inclined to
say, this has been working in the past. But I am not sure. 
gdal_translate on the contrary leaves scale and offset intact.

Maybe, someone can look into this. Thank you.

Best regards,
Erik


From even.rouault at spatialys.com  Mon Dec 10 11:26:07 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 10 Dec 2018 20:26:07 +0100
Subject: [gdal-dev] gdalwarp ignoring scale and offset
In-Reply-To: <20181210191133.GA30328@morgoth.42net.de>
References: <20181210191133.GA30328@morgoth.42net.de>
Message-ID: <4642581.85XvEMNggC@even-i700>

On lundi 10 décembre 2018 20:11:33 CET Erik Heinz wrote:
> Hello everyone,
> 
> I like to use geotiff files with UInt16 raster bands and scale/offset
> metadata for saving cm-resolution elevation data in an efficient way.
> 
> In principle, this works well with gdal. As of version 2.3.2, however,
> gdalwarp seems to silently drop the offset and scale values. I'm inclined to
> say, this has been working in the past. But I am not sure.
> gdal_translate on the contrary leaves scale and offset intact.
> 
> Maybe, someone can look into this. Thank you.

As far as I can see, gdalwarp has never applied the offset and scale values 
(tested down to 1.11), but gdal_translate does.

You may file a ticket about that:
https://github.com/OSGeo/gdal/issues/new

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Mon Dec 10 11:39:05 2018
From: howard at hobu.co (Howard Butler)
Date: Mon, 10 Dec 2018 13:39:05 -0600
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CACmBxytB7Vr35y4V-OFisYc3MyTLdGCap9M1ipekGojfBN15wQ@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700> <1544389169983-0.post@n6.nabble.com>
 <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
 <CACmBxytB7Vr35y4V-OFisYc3MyTLdGCap9M1ipekGojfBN15wQ@mail.gmail.com>
Message-ID: <f4aa6d8c-c7ee-892e-03cc-9a7b397c8021@hobu.co>

+1

I watched the ticket traffic and shuddered :) Thank you. GDAL's testing
probably predates five or six Python testing regimes/eras.  I also have
the concern about GDAL's testing going through Python, but this RFC will
make it much easier for people to contribute and improve the story.


Congratulations on a huge lift!


Howard


On 12/9/18 9:48 PM, Kurt Schwehr wrote:
> I haven't had a chance to read the RFC yet, so I can't yet vote.  However,
> a huge thank you to Craig and everyone else who put in effort to make this
> happen!
>
> On Sun, Dec 9, 2018 at 7:05 PM Craig de Stigter <
> craig.destigter at koordinates.com> wrote:
>
>> Jonathan
>>
>>> it's worth spending a little thought on coming up with a scheme for
>> test-ids.
>>
>> I've been through the list of parametrized tests and tweaked the `ids`
>> kwargs to make them a little more helpful at first glance:
>> https://github.com/OSGeo/gdal/pull/963/commits/8db599e7bc08b7dc73d81591898ed0f5f4243a58
>>
>> I didn't see any way to use `pytest_make_parametrize_id` really; IDs
>> rightly vary enough between tests that I can't see that hook being very
>> useful here.
>>
>> Cheers
>> Craig de Stigter
>>
>> On Mon, 10 Dec 2018 at 09:59 jratike80 <
>> jukka.rahkonen at maanmittauslaitos.fi> wrote:
>>
>>> +0
>>>
>>> -Jukka Rahkonen-
>>>
>>>
>>> Even Rouault-2 wrote
>>>> PSC members,
>>>>
>>>> gentle reminder to cast your vote on this.
>>>>
>>>> Thanks,
>>>>
>>>> Even
>>>
>>>
>>>
>>>
>>> --
>>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/4371e966/attachment.sig>

From bjorn.harrtell at gmail.com  Mon Dec 10 13:42:30 2018
From: bjorn.harrtell at gmail.com (=?UTF-8?Q?Bj=C3=B6rn_Harrtell?=)
Date: Mon, 10 Dec 2018 22:42:30 +0100
Subject: [gdal-dev] FlatGeobuf;
 proposal for a new performance oriented vector file format
In-Reply-To: <4698893.KAtX7gbmDh@even-i700>
References: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
 <4698893.KAtX7gbmDh@even-i700>
Message-ID: <CANhDX=bCOGinvA4CbmWwHg120OZLmu2Uz=PMg0xJfAwO6WsL+A@mail.gmail.com>

Thanks Even, answers inlined.

Den mån 10 dec. 2018 kl 13:19 skrev Even Rouault <even.rouault at spatialys.com
>:

> Björn,
>
> > In my spare time I've been working on a vector file format called
> > FlatGeobuf (tentatively). The main reason, besides curiosity and
> learning,
> > I'm putting time into it is that I think shapefile still rules the
> > read/query static data performance game, which is kind of sad, and
> probably
> > one of the reasons it is still so widely popular. Also, the main
> competitor
> > (GeoPackage) isn't suitable for streaming access (AFAIK)
>
> I suspect that you could organize the layout of a sqlite3 file to be
> streaming
> friendly, but the sqlite3 lib itself is probably not ready for that (or
> you
> have to cheat by buffering a sufficiently large number of bytes in memory
> and
> use a custom VFS to read in that buffer. at that point, implementing your
> own
> dedicated sqlite3 reader might be better. likely doable, but not trivial).
> Random access is possible (you can use /vsicurl/ etc on a geopackage), but
> it
> might involve a number of seeks and small reads in the B-Tree / R-Tree.


> That raises a major question. Which use case(s) do you want to address
> specifically. From what I've understood, for network access:
> - streaming access for progressive display as bytes come in
> - efficient bbox queries with minimized number of bytes and ranges in the
> files to read (minimizing the number of ranges of bytes is probably the
> most
> important criterion since reading 1 byte or 1000 will take the same time)
>

The use case I had in mind is not the lossy and render optimized one, for
that use case I think vector tiles are a good design. What I'm aiming for
is essentially something to replace the shapefile i.e a lossless container
of simple features with as good as possible performance for bbox query
reads or full dataset reads via network or other means of I/O without
having to deal with preprocessing into tiles, generalization etc.


> > I think I'm starting to get somewhere, more details and source is at
> > https://github.com/bjornharrtell/flatgeobuf and I have an early proof of
> > concept driver implementation at
> > https://github.com/bjornharrtell/gdal/tree/flatgeobuf and results are
> > already quite promising - it can do roundtrip read/write and is already
> > quite a bit faster than shapefile. I also have implemented naive read
> only
> > QGIS provider for experimental purposes.
>
> What are the I and O in the I+O related to the R-Tree index ?
>

I symbolizes the the R-Tree nodes. O is a separate array with feature
offsets (the byte offset of each feature), so that together you can quickly
get the byte ranges that needs to be fetched for a spatial query.


> Wondering if a 3D index could be an option in case you want to address the
> full 3D case at some point. But might be something for later.
>
> I'm not familiar with flatbuf, but is random access in the Feature table
> by
> feature index is possible (without a preliminary scan pass), similarly to
> a
> .shx file in a shapefile ?
>

That is the purpose of the O as explained above. Each feature is a separate
flatbuffer message and can be accessed directly.


> Just a detail: it could be nice to have some global flag in the header
> that
> would mean "index of any feature = its FID, its FID - 1, or no particular
> correlation between feature index and feature FID"
>

Not sure exactly what you mean, but I've considered having an optional FID
index to support fast random access by FID in the cases where FID is not
the same as the index of the feature and I guess what you are saying it
this should be explicit. This is not yet added to the spec.


> For completness of the attribute types, you could have date, time and
> binary.
> Can the concept of null value or empty value or both for a field value be
> encoded ?
>

Yes, perhaps it would be useful to have dedicated types for date, time and
binary. I recently added datetime.

The columns/field definition is static for the layer. Values are required
to specify a column index. Null/missing values are represented by simply
omitting values for column indexes. An empty values array for a feature =
all values are null.

The Column structure could also receive more optional info: a long
> description, maximum length for string, optional precision/scale
> formatting
> for those nostalgic of decimal formatting
>

Agreed.


> If you want full genericity to express a SRS, allowing a WKT CRS string as
> an
> alternative for authority+code.
>

Agreed, I should consider it.


> >
> > Basically I'm fishing for interest in this effort, hoping that others
> will
> > see potential in it even if it's "yet another format" and far from
> > final/stable yet. Any feedback is welcome. As I see it, GDAL is a good
> > place for a format specification and reference implementation to
> incubate.
> >
> > Some additional food for thought that I've had during the
> experimentation:
> >
> > 1. The main in memory representations of geometry/coordinates seem to be
> > either separate arrays per dimension (GDAL (partially?) and QGIS) or a
> > single array with dimension as stride. I've chosen the latter as of yet
> but
> > I'm still a bit undecided. There is of course a substantial involved in
> > transforming between the two representations so the situation with two
> > competing models is a bit unfortunate. I'm also not sure about which of
> > these models are objectively "better" than the other?
>
> Why not just using WKB encoding since it has likely similar size and
> performance characteristics to the flatbuf encoding, with the main
> advantage
> of being widely implemented and supporting other geometry types like
> CircularString, PolyhedralSurface, etc..., which you need if you want to
> fully
> compete with GeoPackage ?
>

I think I've (perhaps prematurely) ruled out WKB because I find it not very
well/accessibly specified in it's details and existing implementations
rather complex, so you might be right here. I'm however not sure about
supporting any other geometry types than the ones I already do (similar as
shapefile) to constrain the complexity.


> >
> > 2. One could get better space efficiency with protobuf instead of
> > flatbuffers, but it has a performance cost. I have not gone far into
> > investigating how much though and one could even reason about supporting
> > both these encodings in a single format specification but it's taking it
> a
> > bit far I think.
>
> Contradicts a bit my above point, but if you decide for a custom geometry
> encoding, why not allowing int32 for vertex values, with a offset+scale
> setting ? (ala OpenStreetmap PBF)
>

That's what geobuf does for space efficiency but it seems it can cause
drift in some corner cases (see https://github.com/mapbox/geobuf/issues/96)
so I decided not to dive into it as I also wanted to try and aim for a
zero-copy encoding.


> If the main use case you want to address if cloud use, I was wondering if
> it
> would make sense to add a compression layer (ZSTD compress each Feature ?,
> or
> a group of features) to reduce the time spent in waiting for data from the
> network. Or perhaps not, and just let the transport layer do the
> compression
> (HTTP Encoding: gzip)
>

I have thought about it and container / transport layer compression seems
preferable to me.


> > 4. FlatGeobuf is perhaps a too technical name, not catchy enough and has
> a
> > bad/boring abbreviation. Other candidates I've considered are
> OpenGeoFile,
> > OpenVectorFile or OpenSpatialFile but I'm undecided. Any ideas? :)
>
> COF = Cloud Optimized Features ?
>

Hmm, not bad :) I haven't considered cloud use the main/only use case for
the format, but also offline applications so I'm not entirely convinced
(yet).


>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/e0465b9f/attachment.html>

From schwehr at gmail.com  Mon Dec 10 13:59:40 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 10 Dec 2018 13:59:40 -0800
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
Message-ID: <CACmBxyv1+U9-Xzghz6VTs+K6EQayeqo-e_z9BossoXofpRrsRA@mail.gmail.com>

+1 Kurt

Awesome!! It's great to see that my work in
https://github.com/schwehr/gdal-autotest2/tree/master/python is obsolete.

Some very minor suggestions:

- "Support testing under Python 2 & Python 3 (2.7+)" Move the (2.7+) to be
with Python 2.
- Mention that Fiona and Rasterio also use pytest
- Add the word "existing" so it's obvious right off that the first example
is not new. "A typical GDAL python unit test:" -> "A typical existing GDAL
python unit test:"
- Consider including an example with a float comparison.  Those drive me
nuts in the old style and I want to make sure people know about how to do
that with pytest
  https://stackoverflow.com/questions/8560131/pytest-assert-almost-equal
- Can you give a rough comparison of how long the existing and new styles
take to run.  A quick spot check says that they are pretty close with only
1604 looking to get worrisome.  Are there any things that could be listed
where people contribute that might speed up the testing?
- Is there a way for folks with large machines / cloud instances to run the
tests quicker without a lot of fiddling?
- I'm not a fan of GH and PR abbreviations.  Since this is on trac, it
would be worth being more verbose





On Wed, Dec 5, 2018 at 2:41 PM Craig de Stigter <
craig.destigter at koordinates.com> wrote:

> Hi
>
> I appreciate your comments on the pytest proposal and all the support to
> help get it this far. Given no actionable improvements have been suggested,
> and the feedback thus far seems encouraging...
>
> I move to adopt RFC 72: Run tests with pytest.
>
> https://trac.osgeo.org/gdal/wiki/rfc72_pytest
>
>
> Cheers
> Craig de Stigter
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/c66758cf/attachment-0001.html>

From even.rouault at spatialys.com  Mon Dec 10 14:03:53 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 10 Dec 2018 23:03:53 +0100
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
Message-ID: <4520555.lxzDxfaCfN@even-i700>

On jeudi 6 décembre 2018 11:40:49 CET Craig de Stigter wrote:
> Hi
> 
> I appreciate your comments on the pytest proposal and all the support to
> help get it this far. Given no actionable improvements have been suggested,
> and the feedback thus far seems encouraging...
> 
> I move to adopt RFC 72: Run tests with pytest.
> 
> https://trac.osgeo.org/gdal/wiki/rfc72_pytest

I declare this motion passed with the following votes from PSC members:
+1 from EvenR, DanielM, HowardB and KurtS
+0 from JukkaR

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Mon Dec 10 14:07:31 2018
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 10 Dec 2018 14:07:31 -0800
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <f4aa6d8c-c7ee-892e-03cc-9a7b397c8021@hobu.co>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700> <1544389169983-0.post@n6.nabble.com>
 <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
 <CACmBxytB7Vr35y4V-OFisYc3MyTLdGCap9M1ipekGojfBN15wQ@mail.gmail.com>
 <f4aa6d8c-c7ee-892e-03cc-9a7b397c8021@hobu.co>
Message-ID: <CACmBxyuzf3yGH+5=V7DyFdsak1RzouU6RUCyi7TE6NMxCkChaw@mail.gmail.com>

To follow on to Howard's comment about testing in python...

I'm looking forward to the day that GDAL can drop all python 2.x support
and testing!

And anyone working on C++ testing is welcome to the code here.  I'll
happily donate it with a license change to GDAL (it's apache 2.0 right
now).  You are free refactor however.  Or just use any bits that you think
are helpful if going to a different testing library.  I can also donate
some of the 80+k files in my fuzzer corpus as test inputs that cover weird
corners of the code.

https://github.com/schwehr/gdal-autotest2/tree/master/cpp

On Mon, Dec 10, 2018 at 11:39 AM Howard Butler <howard at hobu.co> wrote:

> +1
>
> I watched the ticket traffic and shuddered :) Thank you. GDAL's testing
> probably predates five or six Python testing regimes/eras.  I also have
> the concern about GDAL's testing going through Python, but this RFC will
> make it much easier for people to contribute and improve the story.
>
>
> Congratulations on a huge lift!
>
>
> Howard
>
>
> On 12/9/18 9:48 PM, Kurt Schwehr wrote:
> > I haven't had a chance to read the RFC yet, so I can't yet vote.
> However,
> > a huge thank you to Craig and everyone else who put in effort to make
> this
> > happen!
> >
> > On Sun, Dec 9, 2018 at 7:05 PM Craig de Stigter <
> > craig.destigter at koordinates.com> wrote:
> >
> >> Jonathan
> >>
> >>> it's worth spending a little thought on coming up with a scheme for
> >> test-ids.
> >>
> >> I've been through the list of parametrized tests and tweaked the `ids`
> >> kwargs to make them a little more helpful at first glance:
> >>
> https://github.com/OSGeo/gdal/pull/963/commits/8db599e7bc08b7dc73d81591898ed0f5f4243a58
> >>
> >> I didn't see any way to use `pytest_make_parametrize_id` really; IDs
> >> rightly vary enough between tests that I can't see that hook being very
> >> useful here.
> >>
> >> Cheers
> >> Craig de Stigter
> >>
> >> On Mon, 10 Dec 2018 at 09:59 jratike80 <
> >> jukka.rahkonen at maanmittauslaitos.fi> wrote:
> >>
> >>> +0
> >>>
> >>> -Jukka Rahkonen-
> >>>
> >>>
> >>> Even Rouault-2 wrote
> >>>> PSC members,
> >>>>
> >>>> gentle reminder to cast your vote on this.
> >>>>
> >>>> Thanks,
> >>>>
> >>>> Even
> >>>
> >>>
> >>>
> >>>
> >>> --
> >>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> >>> _______________________________________________
> >>> gdal-dev mailing list
> >>> gdal-dev at lists.osgeo.org
> >>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >> _______________________________________________
> >> gdal-dev mailing list
> >> gdal-dev at lists.osgeo.org
> >> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >
> >
> >
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/aeee0ee3/attachment.html>

From bjorn.harrtell at gmail.com  Mon Dec 10 14:13:45 2018
From: bjorn.harrtell at gmail.com (=?UTF-8?Q?Bj=C3=B6rn_Harrtell?=)
Date: Mon, 10 Dec 2018 23:13:45 +0100
Subject: [gdal-dev] FlatGeobuf;
 proposal for a new performance oriented vector file format
In-Reply-To: <0B565940-8A94-4423-9778-6C3C4D976812@bridging-it.de>
References: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
 <4698893.KAtX7gbmDh@even-i700>
 <0B565940-8A94-4423-9778-6C3C4D976812@bridging-it.de>
Message-ID: <CANhDX=YLjgRUKsOni_N370=rApEFUAKVg5rdPWRJEe1+s8X+Zw@mail.gmail.com>

Hi Benjamin,

Very interesting to read that you have experimented in similar things and
of your positive experiences with flatbuffers.

Den mån 10 dec. 2018 kl 18:18 skrev Benjamin Stadin <
benjamin.stadin at bridging-it.de>:

> Björn,
>
> Interesting to see there is some progress in this area. We've written a
> Flatbuffers based vector tile schema about 2 1/2 years ago, which is used
> in our rendering product (3D map rendering engine). I can share some
> thoughts about the general pros and cons, and what I'd do different (from
> today's perspective).
>
> Just last week I also started experimenting with using our tile format
> within QGIS, which would work similar to the MVT QGIS plugin [1] which uses
> web meractor tiling. It will parse our "HSG" flatbuffers cells (aka tiles),
> convert them on the fly into GeoJSON and pass them to QGIS.
>
> Some thoughts about your current implementation:
>
> 1) I second Even's question about the actual use-case. I think a
> traditional tile-based approach will be more efficient for bbox querying,
> and client-side visualization. I'll share my approach later below.
>

I agree and perhaps the spatial index part needs more consideration but
it's an important point that the format I'm trying to make is not something
to compete with vector tiles and render optimized representations - my aim
is for the case where you want/need to work with simple features source
data in lossless representation i.e more or less the same case as when
directly using shapefiles.


> 2) 2 1/2 years and quite some projects later, I still prefer Flatbuffers
> over protobuf for a number of reasons. Starting with direct memory access,
> easier client side parser implementation (structs instead of strange
> parallel arrays and such), performance. But it has one limitation in
> regards to memory usage and file size. Flatbuffers will require more memory
> (up to the size of the flatbuffers raw data) when you create or read a
> large flatbuffers file. This is due to the direct memory access
> capabilities. You can create a size-prefixed flatbuffers file (I've asked a
> question here [2]). But this will have negative side effects for your
> r-tree based approach. You'll need to read larger chunks (thus more
> unrelated data) to stream individual features. For streaming bbox queries a
> tile based approach is still more efficient, and simpler. Data in one area
> is packed into one memory region, and can be queried using common tile
> pyramid techniques (or variations like ours).
>

I haven't dived deep enough into this yet but my hope is that since I
constrain my format to be non-updatable I can construct and assume I have a
balanced R-tree with a known size and structure and as such I should not
need to read more of it than needed for traversal into the relevant part of
the tree and then I can use the offset index to get byte offsets to each
feature out of a tree query result. Because I also require the features to
be written in the order the R-tree has been built they will be clustered on
R-tree nodes so that most queries should result in small sets of sequential
reads to get the features.


> 3) The r-rtee implementation might be sufficient for simple use cases. But
> when later requiring to deal with 3D data and large data sets (like OSM)
> the implementation will become more complex, and would require to handle
> efficient disk based indexing instead of having to read the whole index
> into memory (I think the memory footprint for the index of the OSM data set
> will be in the region of 1GB++). In the end the advantage might not be so
> big compared to e.g. SQLite's R-Tree virtual table. It's actually a quite
> fast implementation, considering its low memory footprint (by cost of disk
> accesses).
>

Agreed that I might have underestimated the complexity of a partial
buffered tree traversal, but consider the above answer.


> 4) Seconding Even's suggestion about using WKB. Our implementation is also
> related to WKB types, but we defined the geometry types as part of the
> schema similar to yours. It works fine, but today I'd choose a byte array
> for WKB data for generic use and easier integration into existing software
> (no need to write a custom geometry parser for any language, WKB readers
> already exist which do that for you).
>

While I mosty agree I'm not entirely convinced, see answer to Even.


> 5) In case the vector format is supposed for client-side rendering, how to
> handle zoom levels properly?
>

I view this as out of scope for the format.


> From an adoptability and maintenance point of view, I'd try everything
> possible to avoid recreating too much. I think an "integrative" approach is
> a better choice. E.g. creating a Geopackage extension for the vector tiles
> format analog to WebP, using WKB as byte array, and referring to the common
> tile pyramid scheme for easier implementation and integration possibilities
> for client sider rendering.
>

While that sounds like an interesting idea for vector tile distribution,
which I agree is kind of poor today, it's not the aim of this format to
compete with vector tiles as I've hopefully been able to clarify now. :)


> Some words about our "Heidelberg Sinusoidal Grid" (HSG) implementation. We
> basically faced three problems with existing approaches for our use-cases:
> - We need different projections for accurate indoor (and outdoor) models.
> Existing vector tile approaches are either optimized for rendering (e.g.
> projection depending and clipping geometry data at tile bounds like MVT),
> or too proprietary / not widely adopted and thus more complex to integrate
> with common rendering approaches (like Googles Earth's format, forgotten
> it's name) and thereby then limiting their use in existing processing
> chains and editing tools.
> - We make heavy use of feature querying and interaction, where the full
> feature is required instead of drawing commands (like with MVT).
> - (New) Mixing common xyz tiling scheme with "real feature" (not rendering
> optimized, clipped) vector data will eventually allow for efficient
> streaming (bbox) and editing capabilities. E.g. I'm thinking of using our
> vector tiles and simplify / strip non-useful data at lower zoom levels, and
> using non-simplified data at upper zoom levels where it can be edited
> in-place for example in QGIS.
>
> In brief this is how it works:
> To be independent of a projection, and to allow for storing the whole
> globe, we use a variation of the equal area MODIS grid for the tile
> pyramid. So instead of using the actual projection the client(s) use a
> helper routine to calculate the "directly" required HSG tiles. Similar to
> how a web map would calculate the web Mercator tiles required for the
> current view.
>
> There are however two key differences: The returned tiles (we call them
> actually cells for a reason) only loosely relate to the actually used
> projection: You will be provided the HSG cells (+ small buffer) covering
> your current client view with complete and unaltered features and geometry
> data regardless of what projection the geometries are actually in. So the
> grid is actually used for bbox (tile-pyramid alike) indexing and querying,
> and does not care about the projection or data stored inside individual
> cells (the projection is considered once when the storage is created and
> features get assigned to a cell).
>
> The other difference to common tiling is that you will also need to load
> implicitly required cells for features overlapping a cell in current direct
> sight: Cells contain meta info about related cells (cells containing at
> least one feature overlapping this cell). Constructing the storage is
> therefore a bit more complex, but we can thereby avoid the need for a
> client-side index like a r-tree.
>
> I'm willing to open source that, but there hasn't been much interest in
> this. I'm interested in participating to define a next gen vector file
> format as well.
>

My spontaneous reaction to "HSG" is that it seems rather complex and
perhaps that it is aiming at other use case(s) than I had in mind.


>
> Cheers
> Ben
>
> [1] https://github.com/geometalab/Vector-Tiles-Reader-QGIS-Plugin
> [2]
> https://stackoverflow.com/questions/35322700/flatbuffers-how-to-write-giant-files
>
>
> ﻿Am 10.12.18, 13:19 schrieb "gdal-dev im Auftrag von Even Rouault" <
> gdal-dev-bounces at lists.osgeo.org im Auftrag von even.rouault at spatialys.com
> >:
>
>     Björn,
>
>     > In my spare time I've been working on a vector file format called
>     > FlatGeobuf (tentatively). The main reason, besides curiosity and
> learning,
>     > I'm putting time into it is that I think shapefile still rules the
>     > read/query static data performance game, which is kind of sad, and
> probably
>     > one of the reasons it is still so widely popular. Also, the main
> competitor
>     > (GeoPackage) isn't suitable for streaming access (AFAIK)
>
>     I suspect that you could organize the layout of a sqlite3 file to be
> streaming
>     friendly, but the sqlite3 lib itself is probably not ready for that
> (or you
>     have to cheat by buffering a sufficiently large number of bytes in
> memory and
>     use a custom VFS to read in that buffer. at that point, implementing
> your own
>     dedicated sqlite3 reader might be better. likely doable, but not
> trivial).
>     Random access is possible (you can use /vsicurl/ etc on a geopackage),
> but it
>     might involve a number of seeks and small reads in the B-Tree / R-Tree.
>
>     That raises a major question. Which use case(s) do you want to address
>     specifically. From what I've understood, for network access:
>     - streaming access for progressive display as bytes come in
>     - efficient bbox queries with minimized number of bytes and ranges in
> the
>     files to read (minimizing the number of ranges of bytes is probably
> the most
>     important criterion since reading 1 byte or 1000 will take the same
> time)
>
>     > I think I'm starting to get somewhere, more details and source is at
>     > https://github.com/bjornharrtell/flatgeobuf and I have an early
> proof of
>     > concept driver implementation at
>     > https://github.com/bjornharrtell/gdal/tree/flatgeobuf and results
> are
>     > already quite promising - it can do roundtrip read/write and is
> already
>     > quite a bit faster than shapefile. I also have implemented naive
> read only
>     > QGIS provider for experimental purposes.
>
>     What are the I and O in the I+O related to the R-Tree index ?
>
>     Wondering if a 3D index could be an option in case you want to address
> the
>     full 3D case at some point. But might be something for later.
>
>     I'm not familiar with flatbuf, but is random access in the Feature
> table by
>     feature index is possible (without a preliminary scan pass), similarly
> to a
>     .shx file in a shapefile ?
>
>     Just a detail: it could be nice to have some global flag in the header
> that
>     would mean "index of any feature = its FID, its FID - 1, or no
> particular
>     correlation between feature index and feature FID"
>
>     For completness of the attribute types, you could have date, time and
> binary.
>     Can the concept of null value or empty value or both for a field value
> be
>     encoded ?
>
>     The Column structure could also receive more optional info: a long
>     description, maximum length for string, optional precision/scale
> formatting
>     for those nostalgic of decimal formatting
>
>     If you want full genericity to express a SRS, allowing a WKT CRS
> string as an
>     alternative for authority+code.
>
>     >
>     > Basically I'm fishing for interest in this effort, hoping that
> others will
>     > see potential in it even if it's "yet another format" and far from
>     > final/stable yet. Any feedback is welcome. As I see it, GDAL is a
> good
>     > place for a format specification and reference implementation to
> incubate.
>     >
>     > Some additional food for thought that I've had during the
> experimentation:
>     >
>     > 1. The main in memory representations of geometry/coordinates seem
> to be
>     > either separate arrays per dimension (GDAL (partially?) and QGIS) or
> a
>     > single array with dimension as stride. I've chosen the latter as of
> yet but
>     > I'm still a bit undecided. There is of course a substantial involved
> in
>     > transforming between the two representations so the situation with
> two
>     > competing models is a bit unfortunate. I'm also not sure about which
> of
>     > these models are objectively "better" than the other?
>
>     Why not just using WKB encoding since it has likely similar size and
>     performance characteristics to the flatbuf encoding, with the main
> advantage
>     of being widely implemented and supporting other geometry types like
>     CircularString, PolyhedralSurface, etc..., which you need if you want
> to fully
>     compete with GeoPackage ?
>
>     >
>     > 2. One could get better space efficiency with protobuf instead of
>     > flatbuffers, but it has a performance cost. I have not gone far into
>     > investigating how much though and one could even reason about
> supporting
>     > both these encodings in a single format specification but it's
> taking it a
>     > bit far I think.
>
>     Contradicts a bit my above point, but if you decide for a custom
> geometry
>     encoding, why not allowing int32 for vertex values, with a
> offset+scale
>     setting ? (ala OpenStreetmap PBF)
>
>     If the main use case you want to address if cloud use, I was wondering
> if it
>     would make sense to add a compression layer (ZSTD compress each
> Feature ?, or
>     a group of features) to reduce the time spent in waiting for data from
> the
>     network. Or perhaps not, and just let the transport layer do the
> compression
>     (HTTP Encoding: gzip)
>
>     > 4. FlatGeobuf is perhaps a too technical name, not catchy enough and
> has a
>     > bad/boring abbreviation. Other candidates I've considered are
> OpenGeoFile,
>     > OpenVectorFile or OpenSpatialFile but I'm undecided. Any ideas? :)
>
>     COF = Cloud Optimized Features ?
>
>     Even
>
>     --
>     Spatialys - Geospatial professional services
>     http://www.spatialys.com
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/d78698a2/attachment-0001.html>

From jonathan-lists at lightpear.com  Mon Dec 10 15:30:18 2018
From: jonathan-lists at lightpear.com (Jonathan Moules)
Date: Mon, 10 Dec 2018 23:30:18 +0000
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700> <1544389169983-0.post@n6.nabble.com>
 <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
Message-ID: <708d0fdc-6452-436f-7304-1c9adc905b7d@lightpear.com>

Hi Craig,

For my suite I've used pytest_make_parameterize_id to auto-create id's 
using the first parameterised value as the id name if that parameter is 
called "_" (just underscore - the Python convention for a throwaway 
variable). It works really well, although would need some work for 
backwards compatibility.

So for example your code of:

@pytest.mark.parametrize('epsg_code,epsg_broken', [
     [2758, False],  # tmerc
     [2036, True],  # sterea   # failure caused by revert done in r22803
     [2046, False],  # tmerc

Which has the test "purpose" as a comment (how I used to do it), becomes:

@pytest.mark.parametrize('_, epsg_code,epsg_broken', [
     ["tmerc", 2758, False],
     ["sterea", 2036, True],   # failure caused by revert done in r22803
     ["tmerc - 2nd," 2046, False],

And so on. Then if the test fails you see the (hopefully meaningful) 
"sterea----". The advantage is that the id is there with the test rather 
than trailing it in a separate list that's just asking to suffer from 
bitrot.

----

If you're interested, the code is simple and basically this:

def pytest_make_parametrize_id(argname, val):
     """ Create a nice readable test id based on "_".

     Doesn't quote as expected and stop at the id alone. Instead it 
keeps going through the rest of the args.

     Also keeps track of test numbers so PyCharm/PyTest doesn't change 
their order to semi-alphabetical

     :param argname: parameterised arg name
     :param val: parameterised value name
     :return: string suitable for a test name
     """
     # We keep a test_num globally so it works across tests; not yet 
investigated a better way of know when we're on the next test
     global test_num

     if argname == '_':
         test_num += 1

         # Replace spaces with underscores so that we can run the given 
test individually.
         # Can't do that with spaces in test names.
         name = "{id}={name}".format(id=test_num, name=val.replace(' ', 
'_'))

         return name
     else:
         # We don't want any value for any other field.
         # Can't leave it as an empty string because then PyTest ignores it.
         return "-"

Just a thought.

Jonathan



On 2018-12-10 03:04, Craig de Stigter wrote:
> Jonathan
>
> > it's worth spending a little thought on coming up with a scheme for 
> test-ids.
>
> I've been through the list of parametrized tests and tweaked the `ids` 
> kwargs to make them a little more helpful at first glance: 
> https://github.com/OSGeo/gdal/pull/963/commits/8db599e7bc08b7dc73d81591898ed0f5f4243a58
>
> I didn't see any way to use `pytest_make_parametrize_id` really; IDs 
> rightly vary enough between tests that I can't see that hook being 
> very useful here.
>
> Cheers
> Craig de Stigter
>
> On Mon, 10 Dec 2018 at 09:59 jratike80 
> <jukka.rahkonen at maanmittauslaitos.fi 
> <mailto:jukka.rahkonen at maanmittauslaitos.fi>> wrote:
>
>     +0
>
>     -Jukka Rahkonen-
>
>
>     Even Rouault-2 wrote
>     > PSC members,
>     >
>     > gentle reminder to cast your vote on this.
>     >
>     > Thanks,
>     >
>     > Even
>
>
>
>
>
>     --
>     Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181210/e47db284/attachment.html>

From craig.destigter at koordinates.com  Mon Dec 10 16:07:48 2018
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Tue, 11 Dec 2018 13:07:48 +1300
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CACmBxyuzf3yGH+5=V7DyFdsak1RzouU6RUCyi7TE6NMxCkChaw@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700> <1544389169983-0.post@n6.nabble.com>
 <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
 <CACmBxytB7Vr35y4V-OFisYc3MyTLdGCap9M1ipekGojfBN15wQ@mail.gmail.com>
 <f4aa6d8c-c7ee-892e-03cc-9a7b397c8021@hobu.co>
 <CACmBxyuzf3yGH+5=V7DyFdsak1RzouU6RUCyi7TE6NMxCkChaw@mail.gmail.com>
Message-ID: <CAF1M8pdLJaL7Ry6Mx_pVofFavPcmU-XGDyhAu6qOcrEdc9g3sg@mail.gmail.com>

Thanks for the votes and kind words :)

I'd applied Kurt's super-minor wording suggestions but haven't added any
new sections (on fiona, extra examples, etc) yet. I'll try and incorporate
those changes in the next couple days.

Cheers
Craig

On Tue, 11 Dec 2018 at 11:07 Kurt Schwehr <schwehr at gmail.com> wrote:

> To follow on to Howard's comment about testing in python...
>
> I'm looking forward to the day that GDAL can drop all python 2.x support
> and testing!
>
> And anyone working on C++ testing is welcome to the code here.  I'll
> happily donate it with a license change to GDAL (it's apache 2.0 right
> now).  You are free refactor however.  Or just use any bits that you think
> are helpful if going to a different testing library.  I can also donate
> some of the 80+k files in my fuzzer corpus as test inputs that cover weird
> corners of the code.
>
> https://github.com/schwehr/gdal-autotest2/tree/master/cpp
>
> On Mon, Dec 10, 2018 at 11:39 AM Howard Butler <howard at hobu.co> wrote:
>
>> +1
>>
>> I watched the ticket traffic and shuddered :) Thank you. GDAL's testing
>> probably predates five or six Python testing regimes/eras.  I also have
>> the concern about GDAL's testing going through Python, but this RFC will
>> make it much easier for people to contribute and improve the story.
>>
>>
>> Congratulations on a huge lift!
>>
>>
>> Howard
>>
>>
>> On 12/9/18 9:48 PM, Kurt Schwehr wrote:
>> > I haven't had a chance to read the RFC yet, so I can't yet vote.
>> However,
>> > a huge thank you to Craig and everyone else who put in effort to make
>> this
>> > happen!
>> >
>> > On Sun, Dec 9, 2018 at 7:05 PM Craig de Stigter <
>> > craig.destigter at koordinates.com> wrote:
>> >
>> >> Jonathan
>> >>
>> >>> it's worth spending a little thought on coming up with a scheme for
>> >> test-ids.
>> >>
>> >> I've been through the list of parametrized tests and tweaked the `ids`
>> >> kwargs to make them a little more helpful at first glance:
>> >>
>> https://github.com/OSGeo/gdal/pull/963/commits/8db599e7bc08b7dc73d81591898ed0f5f4243a58
>> >>
>> >> I didn't see any way to use `pytest_make_parametrize_id` really; IDs
>> >> rightly vary enough between tests that I can't see that hook being very
>> >> useful here.
>> >>
>> >> Cheers
>> >> Craig de Stigter
>> >>
>> >> On Mon, 10 Dec 2018 at 09:59 jratike80 <
>> >> jukka.rahkonen at maanmittauslaitos.fi> wrote:
>> >>
>> >>> +0
>> >>>
>> >>> -Jukka Rahkonen-
>> >>>
>> >>>
>> >>> Even Rouault-2 wrote
>> >>>> PSC members,
>> >>>>
>> >>>> gentle reminder to cast your vote on this.
>> >>>>
>> >>>> Thanks,
>> >>>>
>> >>>> Even
>> >>>
>> >>>
>> >>>
>> >>>
>> >>> --
>> >>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>> >>> _______________________________________________
>> >>> gdal-dev mailing list
>> >>> gdal-dev at lists.osgeo.org
>> >>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>> >> _______________________________________________
>> >> gdal-dev mailing list
>> >> gdal-dev at lists.osgeo.org
>> >> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>> >
>> >
>> >
>> > _______________________________________________
>> > gdal-dev mailing list
>> > gdal-dev at lists.osgeo.org
>> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
> --
> http://schwehr.org
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181211/1c2c0232/attachment.html>

From craig.destigter at koordinates.com  Mon Dec 10 16:10:30 2018
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Tue, 11 Dec 2018 13:10:30 +1300
Subject: [gdal-dev] Motion: adopt RFC 72: Run tests with pytest
In-Reply-To: <CAF1M8pdLJaL7Ry6Mx_pVofFavPcmU-XGDyhAu6qOcrEdc9g3sg@mail.gmail.com>
References: <CAF1M8pegMEBkY0cOVYPAUGfA0+kVQZ_cGrz06ainZAVA532gMw@mail.gmail.com>
 <12766362.iVCG5TXXR2@even-i700> <1544389169983-0.post@n6.nabble.com>
 <CAF1M8pd=dDQNC3u8fDwbB3v3WmCOGGZb6greteFjiwPvXKGDog@mail.gmail.com>
 <CACmBxytB7Vr35y4V-OFisYc3MyTLdGCap9M1ipekGojfBN15wQ@mail.gmail.com>
 <f4aa6d8c-c7ee-892e-03cc-9a7b397c8021@hobu.co>
 <CACmBxyuzf3yGH+5=V7DyFdsak1RzouU6RUCyi7TE6NMxCkChaw@mail.gmail.com>
 <CAF1M8pdLJaL7Ry6Mx_pVofFavPcmU-XGDyhAu6qOcrEdc9g3sg@mail.gmail.com>
Message-ID: <CAF1M8peZOA6mVRodeg5ykVZpkqg8og+ddmMjSH2CtxbHmTGVjw@mail.gmail.com>

(Just saw Jonathan's email)

That approach to `ids` makes sense to me. Let's try and get the current PR
merged and I'll submit that as a followup PR (I have a few other minor
changes I want to make too, but have been holding off since the current one
is too enormous as-is)

On Tue, 11 Dec 2018 at 13:07 Craig de Stigter <
craig.destigter at koordinates.com> wrote:

> Thanks for the votes and kind words :)
>
> I'd applied Kurt's super-minor wording suggestions but haven't added any
> new sections (on fiona, extra examples, etc) yet. I'll try and incorporate
> those changes in the next couple days.
>
> Cheers
> Craig
>
> On Tue, 11 Dec 2018 at 11:07 Kurt Schwehr <schwehr at gmail.com> wrote:
>
>> To follow on to Howard's comment about testing in python...
>>
>> I'm looking forward to the day that GDAL can drop all python 2.x support
>> and testing!
>>
>> And anyone working on C++ testing is welcome to the code here.  I'll
>> happily donate it with a license change to GDAL (it's apache 2.0 right
>> now).  You are free refactor however.  Or just use any bits that you think
>> are helpful if going to a different testing library.  I can also donate
>> some of the 80+k files in my fuzzer corpus as test inputs that cover weird
>> corners of the code.
>>
>> https://github.com/schwehr/gdal-autotest2/tree/master/cpp
>>
>> On Mon, Dec 10, 2018 at 11:39 AM Howard Butler <howard at hobu.co> wrote:
>>
>>> +1
>>>
>>> I watched the ticket traffic and shuddered :) Thank you. GDAL's testing
>>> probably predates five or six Python testing regimes/eras.  I also have
>>> the concern about GDAL's testing going through Python, but this RFC will
>>> make it much easier for people to contribute and improve the story.
>>>
>>>
>>> Congratulations on a huge lift!
>>>
>>>
>>> Howard
>>>
>>>
>>> On 12/9/18 9:48 PM, Kurt Schwehr wrote:
>>> > I haven't had a chance to read the RFC yet, so I can't yet vote.
>>> However,
>>> > a huge thank you to Craig and everyone else who put in effort to make
>>> this
>>> > happen!
>>> >
>>> > On Sun, Dec 9, 2018 at 7:05 PM Craig de Stigter <
>>> > craig.destigter at koordinates.com> wrote:
>>> >
>>> >> Jonathan
>>> >>
>>> >>> it's worth spending a little thought on coming up with a scheme for
>>> >> test-ids.
>>> >>
>>> >> I've been through the list of parametrized tests and tweaked the `ids`
>>> >> kwargs to make them a little more helpful at first glance:
>>> >>
>>> https://github.com/OSGeo/gdal/pull/963/commits/8db599e7bc08b7dc73d81591898ed0f5f4243a58
>>> >>
>>> >> I didn't see any way to use `pytest_make_parametrize_id` really; IDs
>>> >> rightly vary enough between tests that I can't see that hook being
>>> very
>>> >> useful here.
>>> >>
>>> >> Cheers
>>> >> Craig de Stigter
>>> >>
>>> >> On Mon, 10 Dec 2018 at 09:59 jratike80 <
>>> >> jukka.rahkonen at maanmittauslaitos.fi> wrote:
>>> >>
>>> >>> +0
>>> >>>
>>> >>> -Jukka Rahkonen-
>>> >>>
>>> >>>
>>> >>> Even Rouault-2 wrote
>>> >>>> PSC members,
>>> >>>>
>>> >>>> gentle reminder to cast your vote on this.
>>> >>>>
>>> >>>> Thanks,
>>> >>>>
>>> >>>> Even
>>> >>>
>>> >>>
>>> >>>
>>> >>>
>>> >>> --
>>> >>> Sent from:
>>> http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>>> >>> _______________________________________________
>>> >>> gdal-dev mailing list
>>> >>> gdal-dev at lists.osgeo.org
>>> >>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> >> _______________________________________________
>>> >> gdal-dev mailing list
>>> >> gdal-dev at lists.osgeo.org
>>> >> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> >
>>> >
>>> >
>>> > _______________________________________________
>>> > gdal-dev mailing list
>>> > gdal-dev at lists.osgeo.org
>>> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>> --
>> --
>> http://schwehr.org
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181211/de64f5aa/attachment-0001.html>

From astewart at terragotech.com  Tue Dec 11 10:44:25 2018
From: astewart at terragotech.com (Alan Stewart)
Date: Tue, 11 Dec 2018 18:44:25 +0000
Subject: [gdal-dev] running autotest locally
Message-ID: <BY2PR15MB0856ADE5E75814F234439E62C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>

I'm trying to run GDAL autotest locally on my Windows box. I've tried to follow appveyor.yml very closely, but possibly there is some additional configuration required that is not included in this script? In particular, the gdrivers/postgisraster.py tests are skipped because postgisraster_init() finds SRID-26711 to be missing from spatial_ref_sys.

I've installed an appropriate version of the GIS internals binary builds to accompany my GDAL build and authored a batch file that configures the environment before for running the autotest. Most stuff seems to work...

Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615

www.terragotech.com<applewebdata://B24C0762-C7C9-4431-8518-ACC915448B89/www.terragotech.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181211/a180f43a/attachment.html>

From even.rouault at spatialys.com  Tue Dec 11 10:49:10 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 11 Dec 2018 19:49:10 +0100
Subject: [gdal-dev] running autotest locally
In-Reply-To: <BY2PR15MB0856ADE5E75814F234439E62C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>
References: <BY2PR15MB0856ADE5E75814F234439E62C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>
Message-ID: <6486887.iEf9g8K6eW@even-i700>

On mardi 11 décembre 2018 18:44:25 CET Alan Stewart wrote:
> I'm trying to run GDAL autotest locally on my Windows box. I've tried to
> follow appveyor.yml very closely, but possibly there is some additional
> configuration required that is not included in this script?

Beware of the merge today in master of RFC 72 that overhauls the testing suite 
with the use of pytest:
https://trac.osgeo.org/gdal/wiki/rfc72_pytest

> In particular,
> the gdrivers/postgisraster.py tests are skipped because
> postgisraster_init() finds SRID-26711 to be missing from spatial_ref_sys.

The postgisraster.py tests require running the
autotest/gdrivers/data/load_postgisraster_test_data.sh script, so only work 
easily from Unix.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From astewart at terragotech.com  Tue Dec 11 10:53:47 2018
From: astewart at terragotech.com (Alan Stewart)
Date: Tue, 11 Dec 2018 18:53:47 +0000
Subject: [gdal-dev] running autotest locally
In-Reply-To: <6486887.iEf9g8K6eW@even-i700>
References: <BY2PR15MB0856ADE5E75814F234439E62C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>
 <6486887.iEf9g8K6eW@even-i700>
Message-ID: <BY2PR15MB085675CA06FB636FF7043F71C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>

Will MacOS work acceptably to run all the tests?

Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615
 
www.terragotech.com

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: Tuesday, December 11, 2018 1:49 PM
To: gdal-dev at lists.osgeo.org
Cc: Alan Stewart <astewart at terragotech.com>
Subject: Re: [gdal-dev] running autotest locally

On mardi 11 décembre 2018 18:44:25 CET Alan Stewart wrote:
> I'm trying to run GDAL autotest locally on my Windows box. I've tried 
> to follow appveyor.yml very closely, but possibly there is some 
> additional configuration required that is not included in this script?

Beware of the merge today in master of RFC 72 that overhauls the testing suite with the use of pytest:
https://trac.osgeo.org/gdal/wiki/rfc72_pytest

> In particular,
> the gdrivers/postgisraster.py tests are skipped because
> postgisraster_init() finds SRID-26711 to be missing from spatial_ref_sys.

The postgisraster.py tests require running the autotest/gdrivers/data/load_postgisraster_test_data.sh script, so only work easily from Unix.

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com

From even.rouault at spatialys.com  Tue Dec 11 11:03:37 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 11 Dec 2018 20:03:37 +0100
Subject: [gdal-dev] running autotest locally
In-Reply-To: <BY2PR15MB085675CA06FB636FF7043F71C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>
References: <BY2PR15MB0856ADE5E75814F234439E62C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>
 <6486887.iEf9g8K6eW@even-i700>
 <BY2PR15MB085675CA06FB636FF7043F71C4A60@BY2PR15MB0856.namprd15.prod.outlook.com>
Message-ID: <3773237.zhWRMLOvL1@even-i700>

On mardi 11 décembre 2018 18:53:47 CET Alan Stewart wrote:
> Will MacOS work acceptably to run all the tests?

Depends what you can "all" the tests... There are tests I've never been able 
to run, for drivers requiring proprietary or hard-to-find third party 
libraries.

For the postgisraster driver, I don't know if they work on MacOSX. On Travis-
CI Mac, the tests are skipped due to Postgres server not being set up.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Thu Dec 13 05:37:56 2018
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Thu, 13 Dec 2018 13:37:56 +0000
Subject: [gdal-dev] Two questions about gdal_contour
Message-ID: <145e7646f17a436cb9b949e95a2e3d70@C119S212VM042.msvyvi.vaha.local>

Hi,

I noticed this question in gis.stackexchange https://gis.stackexchange.com/questions/305641/gdal-doesnt-create-contours-for-the-whole-raster?noredirect=1#comment493737_305641 and now I wonder


1)      If gdalinfo reports NoData Value=3.4028234663852886e+38, why gdal_contour does not accept the value as -snodata but user needs to know to use "inf"?

2)      If user asks gdal_contour to create intervals of 1 m from 20 to 3.4028234663852886e+38, wouldn't it be better to ask "Are you sure?" or error out before starting a process that will for sure fail? I guess that in most cases users do not really want more than 1000 contour levels.

-Jukka Rahkonen-

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181213/53774caf/attachment.html>

From even.rouault at spatialys.com  Thu Dec 13 05:57:54 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 13 Dec 2018 14:57:54 +0100
Subject: [gdal-dev] Two questions about gdal_contour
In-Reply-To: <145e7646f17a436cb9b949e95a2e3d70@C119S212VM042.msvyvi.vaha.local>
References: <145e7646f17a436cb9b949e95a2e3d70@C119S212VM042.msvyvi.vaha.local>
Message-ID: <7276475.nuMVYxtCht@even-i700>

On jeudi 13 décembre 2018 13:37:56 CET Rahkonen Jukka (MML) wrote:
> Hi,
> 
> I noticed this question in gis.stackexchange
> https://gis.stackexchange.com/questions/305641/gdal-doesnt-create-contours-> for-the-whole-raster?noredirect=1#comment493737_305641 and now I wonder
> 
> 
> 1)      If gdalinfo reports NoData Value=3.4028234663852886e+38, why
> gdal_contour does not accept the value as -snodata 

gdal_contour accepts it for me as a valid argument (in master). But I've not 
verified if comparison against it worked as intended in the gdal_contour 
context. If it does exact comparisons or comparisons against a fixed 
threshold, then due to decimal approximation, the chance that the comparison 
does not work as expected is high.

> but user needs to know
> to use "inf"?

inf is not the same as 3.4028234663852886e+38. 3.4028234663852886e+38 is the 
largest float32 value that is not infinity. But it is very easy to go just 
above it (due to decimal rounding issues, float32 vs float64 conversions, 
etc), and thus be considered at infinity. I did related fixes in GDAL core and 
VRT driver recently, but they likely don't fix any gdal_contour specific 
issue.

> 
> 2)      If user asks gdal_contour to create intervals of 1 m from 20 to
> 3.4028234663852886e+38, wouldn't it be better to ask "Are you sure?" or
> error out before starting a process that will for sure fail? I guess that
> in most cases users do not really want more than 1000 contour levels.

Dealing with all possible situations where the user might ask crazy things is 
a never ending task...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Marc.Pfister at digitalglobe.com  Thu Dec 13 08:36:33 2018
From: Marc.Pfister at digitalglobe.com (Pfister, Marc)
Date: Thu, 13 Dec 2018 16:36:33 +0000
Subject: [gdal-dev] vsis3 as source in VRT
Message-ID: <1544718997706.34003@digitalglobe.com>

Do VRTs support the /vsi*/ paths for source files?


Thanks,


Marc Pfister?

This electronic communication and any attachments may contain confidential and proprietary information of DigitalGlobe, Inc. If you are not the intended recipient, or an agent or employee responsible for delivering this communication to the intended recipient, or if you have received this communication in error, please do not print, copy, retransmit, disseminate or otherwise use the information. Please indicate to the sender that you have received this communication in error, and delete the copy you received.

DigitalGlobe reserves the right to monitor any electronic communication sent or received by its employees, agents or representatives.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181213/95d2580b/attachment.html>

From yyhu_live at outlook.com  Thu Dec 13 22:48:51 2018
From: yyhu_live at outlook.com (HU Yaoyu)
Date: Fri, 14 Dec 2018 06:48:51 +0000
Subject: [gdal-dev] Member function GDALRasterBand::RasterIO has
 inconsistent declaration and implementation
Message-ID: <SN2PR15MB1005D824E46D241C4AE3B7A788A10@SN2PR15MB1005.namprd15.prod.outlook.com>

Hi all,

I am a new guy to GDAL. I encountered a simple problem when trying to
link against the GDAL library.


I am working with Version 2.3.2 and Ubuntu 16.04 LTS 64bit. I downloaded
the source code, did a configure with no arguments and compiled the
library. After compiling, I performed an install operation to install
GDAL to /usr/local.


When I tried to link my code against /usr/local/lib/libgdal.so<http://libgdal.so> I got the
following error:

undefined reference to `GDALRasterBand::RasterIO(GDALRWFlag, int, int,
int, int, void*, int, int, GDALDataType, int, int)'


I was using cmake and did a successful find_package(GDAL) with
environment variable GDAL_DIR set to /usr/local. Then I specified the
dependencies with target_link_libraries( ) and the cmake variable
${GDAL_LIBRARY}.


By using


nm -gC /usr/local/lib/libgdal.so<http://libgdal.so> | grep GDALRasterBand::RasterIO


I got the following output:


00000000009c3360 T GDALRasterBand::RasterIOResampled(GDALRWFlag, int,
int, int, int, void*, int, int, GDALDataType, long long, long long,
GDALRasterIOExtraArg*)
00000000009aaaf0 T GDALRasterBand::RasterIO(GDALRWFlag, int, int, int,
int, void*, int, int, GDALDataType, long long, long long,
GDALRasterIOExtraArg*)

It turns out that the member function GDALRasterBand::RaterIO( ) is
compiled into libgdal.so<http://libgdal.so> with an extra argument with the type of
GDALRasterIOExtraArg*. However, in the file
/usr/local/include/gdal_priv.h, the definition of class GDALRasterBand
shows that the declaration of RasterIO( ) looks like this

CPLErr RasterIO( GDALRWFlag, int, int, int, int, void *, int, int,
GDALDataType, int, int);


Note that the last argument, which is present in the libgdal.so<http://libgdal.so>
implementation, is missing.


Why there is this inconsistency between the header file gdal_priv.h and
the library file libgdal.so<http://libgdal.so>.


Thanks.


Yaoyu


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181214/a815b14d/attachment.html>

From even.rouault at spatialys.com  Fri Dec 14 02:19:03 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Dec 2018 11:19:03 +0100
Subject: [gdal-dev] vsis3 as source in VRT
In-Reply-To: <1544718997706.34003@digitalglobe.com>
References: <1544718997706.34003@digitalglobe.com>
Message-ID: <3256081.pEVk6aFQH9@even-i700>

On jeudi 13 décembre 2018 16:36:33 CET Pfister, Marc wrote:
> Do VRTs support the /vsi*/ paths for source files?

Marc,

Any valid GDAL dataset name can be used as a VRT source filename. So short 
answer is yes.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Dec 14 02:21:03 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Dec 2018 11:21:03 +0100
Subject: [gdal-dev] Member function GDALRasterBand::RasterIO has
	inconsistent declaration and implementation
In-Reply-To: <SN2PR15MB1005D824E46D241C4AE3B7A788A10@SN2PR15MB1005.namprd15.prod.outlook.com>
References: <SN2PR15MB1005D824E46D241C4AE3B7A788A10@SN2PR15MB1005.namprd15.prod.outlook.com>
Message-ID: <35133019.oHJauqunUU@even-i700>

On vendredi 14 décembre 2018 06:48:51 CET HU Yaoyu wrote:
> Hi all,
> 
> I am a new guy to GDAL. I encountered a simple problem when trying to
> link against the GDAL library.
> 
> 
> I am working with Version 2.3.2 and Ubuntu 16.04 LTS 64bit. I downloaded
> the source code, did a configure with no arguments and compiled the
> library. After compiling, I performed an install operation to install
> GDAL to /usr/local.

I presume the gdal.h your code is including comes from an older version of 
GDAL.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Dec 14 04:21:32 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Dec 2018 13:21:32 +0100
Subject: [gdal-dev] GDAL 2.3.3 rc1 available
Message-ID: <1885510.qDmUY7oIyE@even-i700>

Hi,

I've issued a release candidate for GDAL 2.3.3. This adds 43 bug fixes 
(including a few improvements) on top of 2.3.2. The C and C++ API and ABI are 
unchanged.

This will be the last bugfix release in the 2.3 series, and a GDAL 2.4.0 
release candidate should follow very shortly.

The source is available at:

    http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3rc1.tar.xz
    http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3rc1.tar.gz
    http://download.osgeo.org/gdal/2.3.3/gdal233rc1.zip

A snapshot of the Python autotest suite can be downloaded from:

    http://download.osgeo.org/gdal/2.3.3/gdalautotest-2.3.3rc1.tar.gz
    http://download.osgeo.org/gdal/2.3.3/gdalautotest-2.3.3rc1.zip

GDAL-GRASS plugin (unchanged since 2.3.2):

    http://download.osgeo.org/gdal/2.3.3/gdal-grass-2.3.3.tar.gz

NEWS page:

   https://trac.osgeo.org/gdal/wiki/Release/2.3.3-News

I'll call for a vote to promote it to final at the beginning of next week if 
nothing serious is reported before.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Fri Dec 14 07:20:20 2018
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 14 Dec 2018 16:20:20 +0100
Subject: [gdal-dev] GDAL 2.3.3 rc1 available
In-Reply-To: <1885510.qDmUY7oIyE@even-i700>
References: <1885510.qDmUY7oIyE@even-i700>
Message-ID: <f304d22c-18dd-9f47-b5e7-7c70b8cb0289@xs4all.nl>

On 12/14/18 1:21 PM, Even Rouault wrote:
> I'll call for a vote to promote it to final at the beginning of next week if 
> nothing serious is reported before.

gcore/gdal_version.h.in is still at 2.3.2 instead of 2.3.3.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Fri Dec 14 07:54:52 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Dec 2018 16:54:52 +0100
Subject: [gdal-dev] GDAL 2.3.3 rc2 available
Message-ID: <2408273.W2nVAA8RkY@even-i700>

Hi,

Just fixing the issue that Bas noted.

The source is available at:

    http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3rc2.tar.xz
    http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3rc2.tar.gz
    http://download.osgeo.org/gdal/2.3.3/gdal233rc2.zip

A snapshot of the Python autotest suite can be downloaded from:

    http://download.osgeo.org/gdal/2.3.3/gdalautotest-2.3.3rc2.tar.gz
    http://download.osgeo.org/gdal/2.3.3/gdalautotest-2.3.3rc2.zip

GDAL-GRASS plugin (unchanged since 2.3.2):

    http://download.osgeo.org/gdal/2.3.3/gdal-grass-2.3.3.tar.gz

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From astewart at terragotech.com  Fri Dec 14 09:50:26 2018
From: astewart at terragotech.com (Alan Stewart)
Date: Fri, 14 Dec 2018 17:50:26 +0000
Subject: [gdal-dev] Ubuntu & Travis
Message-ID: <BN3PR15MB08508651129C5A327DC4C8F1C4A10@BN3PR15MB0850.namprd15.prod.outlook.com>

Ubuntu 18.04.1

Given all the required software dependencies are installed, shouldn't I be able to perform the same steps shown in the Travis log to perform the same tests? Apparently not, there seems to be other Travis configuration happening outside of the files in the git repository.

I get the following error when running ci/travis/ubuntu_1804/install.sh:

Checking for libFileGDBAPI.so in in /home/astewart/Documents/GitHub/OSGeo/gdal/FileGDB_API-64gcc51/lib... configure: error: not found.

$PWD/FileGDB_API-64gcc51 is embedded in install.sh, so it appears this cannot be overridden without editing the script. Manipulating the working directory when starting the script seems risky... Any better suggestions?

Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615

www.terragotech.com<applewebdata://B24C0762-C7C9-4431-8518-ACC915448B89/www.terragotech.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181214/882d0825/attachment-0001.html>

From even.rouault at spatialys.com  Fri Dec 14 10:42:48 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Dec 2018 19:42:48 +0100
Subject: [gdal-dev] Ubuntu & Travis
In-Reply-To: <BN3PR15MB08508651129C5A327DC4C8F1C4A10@BN3PR15MB0850.namprd15.prod.outlook.com>
References: <BN3PR15MB08508651129C5A327DC4C8F1C4A10@BN3PR15MB0850.namprd15.prod.outlook.com>
Message-ID: <1912842.A1gZzftJ7t@even-i700>

On vendredi 14 décembre 2018 17:50:26 CET Alan Stewart wrote:
> Ubuntu 18.04.1
> 
> Given all the required software dependencies are installed, shouldn't I be
> able to perform the same steps shown in the Travis log to perform the same
> tests? Apparently not, there seems to be other Travis configuration
> happening outside of the files in the git repository.
> 
> I get the following error when running ci/travis/ubuntu_1804/install.sh:
> 
> Checking for libFileGDBAPI.so in in
> /home/astewart/Documents/GitHub/OSGeo/gdal/FileGDB_API-64gcc51/lib...
> configure: error: not found.
> 
> $PWD/FileGDB_API-64gcc51 is embedded in install.sh, so it appears this
> cannot be overridden without editing the script. Manipulating the working
> directory when starting the script seems risky... Any better suggestions?

Those scripts were not designed at being used outside of Travis context, but 
there is no reason they shouldn't work though, if you ran them in the right 
order and as exactly invoked by .travis.yml

I presumed you ran
ci/travis/ubuntu_1804/before_install.sh
before ?

Did you check if you do indeed have something in
/home/astewart/Documents/GitHub/OSGeo/gdal/FileGDB_API-64gcc51/lib ?

And do you run install.sh as "ci/travis/ubuntu_1804/install.sh" ? (to be 
opposed as "install.sh" from ci/travis/ubuntu_1804)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From benjamin.deschamps at canada.ca  Fri Dec 14 10:48:32 2018
From: benjamin.deschamps at canada.ca (Deschamps, Benjamin (EC))
Date: Fri, 14 Dec 2018 18:48:32 +0000
Subject: [gdal-dev] gdal.Warp error No space left on device.
Message-ID: <mailman.0.1544813933.17181.gdal-dev@lists.osgeo.org>

Hi,

I've been able to reproduce the error reported here: https://trac.osgeo.org/gdal/ticket/3500 (closed/invalid).

The error is:

Traceback (most recent call last):
  File "C:\Users\deschampsb\Desktop\gdalwarp_HFA_bug\gdalwarp_HFA_bug.py", line 22, in <module>
    gdal.Warp("warp.hfa", "test.tif", options=warp_options)
  File "C:\Python36\lib\site-packages\osgeo\gdal.py", line 584, in Warp
    return wrapper_GDALWarpDestName(destNameOrDestDS, srcDSTab, opts, callback, callback_data)
  File "C:\Python36\lib\site-packages\osgeo\gdal.py", line 2928, in wrapper_GDALWarpDestName
    return _gdal.wrapper_GDALWarpDestName(*args)
RuntimeError: Failed to extend warp.ige to full size (5.73878e+09 bytes),
likely out of disk space.
No space left on device

This is using Python 3.6.1 64-bits with GDAL 2.1.3 bindings, on Windows Server 2008.

It turns out that the error is not related to the HFA output format, or to a lack of space in the destination location, but in my case to a lack of free space on C:. I had hundreds of GB of free disk in the output location, but I noticed that in my case, there was no (40K) disk space left on the system C: drive. Freeing up space on the C solved the issue. Are there any temp files being created there?

Thanks,

Benjamin Deschamps

Physical Sciences Specialist
Canadian Ice Service, Meteorological Service of Canada
Environment and Climate Change Canada / Government of Canada
Benjamin.Deschamps at canada.ca<mailto:Benjamin.Deschamps at canada.ca> / Tel: 613-943-4293

Spécialiste des sciences physiques
Service Canadien des Glaces, Service Météorologique du Canada,
Environnement et Changement climatique Canada / Gouvernement du Canada
Benjamin.Deschamps at canada.ca<mailto:Benjamin.Deschamps at canada.ca> / Tél. : 613-943-4293

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181214/d5156228/attachment.html>

From even.rouault at spatialys.com  Fri Dec 14 11:14:06 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Dec 2018 20:14:06 +0100
Subject: [gdal-dev] gdal.Warp error No space left on device.
In-Reply-To: <20181214185852.DB52D60C7B5E@lists.osgeo.org>
References: <20181214185852.DB52D60C7B5E@lists.osgeo.org>
Message-ID: <10187573.GjIWNr3hGc@even-i700>

On vendredi 14 décembre 2018 18:48:32 CET Deschamps, Benjamin (EC) wrote:
> Hi,
> 
> I've been able to reproduce the error reported here:
> https://trac.osgeo.org/gdal/ticket/3500 (closed/invalid).
> 
> The error is:
> 
> Traceback (most recent call last):
>   File "C:\Users\deschampsb\Desktop\gdalwarp_HFA_bug\gdalwarp_HFA_bug.py",
> line 22, in <module> gdal.Warp("warp.hfa", "test.tif",
> options=warp_options)
>   File "C:\Python36\lib\site-packages\osgeo\gdal.py", line 584, in Warp
>     return wrapper_GDALWarpDestName(destNameOrDestDS, srcDSTab, opts,
> callback, callback_data) File
> "C:\Python36\lib\site-packages\osgeo\gdal.py", line 2928, in
> wrapper_GDALWarpDestName return _gdal.wrapper_GDALWarpDestName(*args)
> RuntimeError: Failed to extend warp.ige to full size (5.73878e+09 bytes),
> likely out of disk space.
> No space left on device
> 
> This is using Python 3.6.1 64-bits with GDAL 2.1.3 bindings, on Windows
> Server 2008.
> 
> It turns out that the error is not related to the HFA output format, or to a
> lack of space in the destination location, but in my case to a lack of free
> space on C:. I had hundreds of GB of free disk in the output location, but
> I noticed that in my case, there was no (40K) disk space left on the system
> C: drive. Freeing up space on the C solved the issue. Are there any temp
> files being created there?

No, but the .ige file is a side car file that is created next to the main .hfa 
file (.img is usually used) if the main file would be bigger to 2GB, so if you 
created the .hfa file on c:\, the .ige will also be on c:\

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From benjamin.deschamps at canada.ca  Fri Dec 14 11:48:50 2018
From: benjamin.deschamps at canada.ca (Deschamps, Benjamin (EC))
Date: Fri, 14 Dec 2018 19:48:50 +0000
Subject: [gdal-dev] gdal.Warp error No space left on device.
In-Reply-To: <10187573.GjIWNr3hGc@even-i700>
References: <20181214185852.DB52D60C7B5E@lists.osgeo.org>
 <10187573.GjIWNr3hGc@even-i700>
Message-ID: <mailman.1.1544816936.17181.gdal-dev@lists.osgeo.org>

Hi Even,

I misinterpreted the symptoms here, and simply replicated the (seemingly correct) out-of-space error on a different drive while trying to test.

Something else in my code is making gdal.Warp try to write out huge files...

Sorry for the noise.

Benjamin

-----Original Message-----
From: Even Rouault [mailto:even.rouault at spatialys.com] 
Sent: December-14-18 2:14 PM
To: gdal-dev at lists.osgeo.org
Cc: Deschamps, Benjamin (EC)
Subject: Re: [gdal-dev] gdal.Warp error No space left on device.

On vendredi 14 décembre 2018 18:48:32 CET Deschamps, Benjamin (EC) wrote:
> Hi,
> 
> I've been able to reproduce the error reported here:
> https://trac.osgeo.org/gdal/ticket/3500 (closed/invalid).
> 
> The error is:
> 
> Traceback (most recent call last):
>   File 
> "C:\Users\deschampsb\Desktop\gdalwarp_HFA_bug\gdalwarp_HFA_bug.py",
> line 22, in <module> gdal.Warp("warp.hfa", "test.tif",
> options=warp_options)
>   File "C:\Python36\lib\site-packages\osgeo\gdal.py", line 584, in Warp
>     return wrapper_GDALWarpDestName(destNameOrDestDS, srcDSTab, opts, 
> callback, callback_data) File 
> "C:\Python36\lib\site-packages\osgeo\gdal.py", line 2928, in 
> wrapper_GDALWarpDestName return _gdal.wrapper_GDALWarpDestName(*args)
> RuntimeError: Failed to extend warp.ige to full size (5.73878e+09 
> bytes), likely out of disk space.
> No space left on device
> 
> This is using Python 3.6.1 64-bits with GDAL 2.1.3 bindings, on 
> Windows Server 2008.
> 
> It turns out that the error is not related to the HFA output format, 
> or to a lack of space in the destination location, but in my case to a 
> lack of free space on C:. I had hundreds of GB of free disk in the 
> output location, but I noticed that in my case, there was no (40K) 
> disk space left on the system
> C: drive. Freeing up space on the C solved the issue. Are there any 
> temp files being created there?

No, but the .ige file is a side car file that is created next to the main .hfa file (.img is usually used) if the main file would be bigger to 2GB, so if you created the .hfa file on c:\, the .ige will also be on c:\

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com

From johnrobot at gmail.com  Fri Dec 14 14:04:44 2018
From: johnrobot at gmail.com (johnrobot)
Date: Fri, 14 Dec 2018 15:04:44 -0700 (MST)
Subject: [gdal-dev] Support for reading IFC files?
Message-ID: <1544825084005-0.post@n6.nabble.com>

Hi
Over at
http://osgeo-org.1560.x6.nabble.com/QGIS-Developer-IFC-data-in-QGIS-td5388773.html,
I asked if anyone was working on adding support for reading IFC files in
QGIS and it was suggested to me that I should ask the GDAL/OGR forum. Are
there any plans on adding that to GDAL/OGR? It would be great to be able to
render BIM data together with my geodata in QGIS.

Regards,

Magnus



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Fri Dec 14 14:09:53 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 14 Dec 2018 23:09:53 +0100
Subject: [gdal-dev] GDAL 2.4.0 RC1 available
Message-ID: <20621989.ZHyS0x9Z73@even-i700>

Hi,

I've issued a release candidate for GDAL 2.4.0.

[Remainder to contributors (this mostly affects occasional contributors 
unlikely to read this message, anyway...): please make an effort to produce 
easy-to-process commit messages for the purpose of building the NEWS file.

Extract from CONTRIBUTING.md:
{{{
Commit message
--------------

Indicate a component name (eg a driver name), a short description and when
relevant, a reference to a issue (with 'fixes #' if it actually fixes it)

```
COMPONENT_NAME: fix bla bla (fixes #1234)

Details here...
```
}}}

Be aware that the raw material I started from to prepare NEWS was > 7000 line 
long with 1094 commits. If I cannot infer from the commit message which 
utility/driver/component is affected, I must specifically display the commit, 
which is not fun.]

~~~~~~~~

The source is available at:

    http://download.osgeo.org/gdal/2.4.0/gdal-2.4.0rc1.tar.xz
    http://download.osgeo.org/gdal/2.4.0/gdal-2.4.0rc1.tar.gz
    http://download.osgeo.org/gdal/2.4.0/gdal240rc1.zip

A snapshot of the Python autotest suite can be downloaded from:

    http://download.osgeo.org/gdal/2.4.0/gdalautotest-2.4.0rc1.tar.gz
    http://download.osgeo.org/gdal/2.4.0/gdalautotest-2.4.0rc1.zip

GDAL-GRASS plugin:

    http://download.osgeo.org/gdal/2.4.0/gdal-grass-2.4.0.tar.gz

NEWS page:

   https://trac.osgeo.org/gdal/wiki/Release/2.4.0-News

I'll call for a vote to promote it to final at the middle of next week if 
nothing serious is reported before.

I have created the release/2.4 branch from current master, so new developments 
can occur in master. Bug fixes that apply to 2.4 should be committed in master 
and cherry-picked in release/2.4

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From marco.atzeri at gmail.com  Sat Dec 15 00:05:34 2018
From: marco.atzeri at gmail.com (Marco Atzeri)
Date: Sat, 15 Dec 2018 09:05:34 +0100
Subject: [gdal-dev] GDAL 2.3.3 rc2 available
In-Reply-To: <2408273.W2nVAA8RkY@even-i700>
References: <2408273.W2nVAA8RkY@even-i700>
Message-ID: <8fe3f82d-fd14-1ca2-44bd-9dfefc502357@gmail.com>

Am 14.12.2018 um 16:54 schrieb Even Rouault:
> Hi,
> 
> Just fixing the issue that Bas noted.
> 
> The source is available at:
> 
>      http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3rc2.tar.xz

builds fine as usual on cygwin but the autotest has some problems.
It always had, I never completed them, but this time I decided to look
in more depth.

Extract of output:

----------------------------------------------------
$ grep TEST run_all.log | grep -v "success" | grep -v skip
   TEST: ogr_carto_vsimem ... Warning 1: Cannot register table in 
dashboard with cdb_cartodbfytable() since its SRS is not EPSG:4326
   TEST: ogr_couchdb_init ... HTTP service for http://127.0.0.1:5984 is 
down (HTTP Error: [Errno 111] Connection refused)
   TEST: ogr_csv_18 ... WKT,foo,bar
   TEST: ogr_dxf_43 ... Warning 1: Dangerous block recursion detected. 
Some blocks have not been inserted.
   TEST: ogr_gxt_3 ... ERROR 1: Line 9, Missing fields (at least 5 are 
expected, 1 found).
   TEST: ogr_geojson_13 ... {
   TEST: ogr_geom_polyhedral_surface ... ERROR 6: SFCGAL support not 
enabled.
   TEST: ogr_geom_tin ... ERROR 6: SFCGAL support not enabled.
   TEST: ogr_gft_read ... ERROR 1: HTTP error code : 401
   TEST: ogr_gml_11 ... Touching .gfs file
   TEST: ogr_gml_59 ... Touching .gfs file
   TEST: ogr_gml_60 ... ERROR 1: Could not resolve host: not_existing_host
   TEST: ogr_gml_61 ... Touching .gfs file
   TEST: ogr_gpkg_15 ... cannot load libproj.so, proj.dll, proj-9.dll, 
libproj-0.dll, libproj-10.dll, cygproj-10.dll or libproj.dylib
   TEST: ogr_gpkg_18 ... fail
   TEST: ogr_gpkg_cleanup ... ['ogr_gpkg_18.gpkg']
   TEST: ogr_gpsbabel_init ... Cannot access GPSBabel utility
   TEST: ogr_index_1 ... ERROR 3: Failed to parse field definition in 
file index_p.mif
   TEST: ogr_index_3 ... Traceback (most recent call last):
   TEST: ogr_index_8 ... Traceback (most recent call last):
   TEST: ogr_index_cleanup ... ERROR 3: Failed to parse field definition 
in file index_p.mif
   TEST: ogr_mitab_3 ... ERROR 3: Failed to parse field definition at 
line 14 in file tmp/tpoly.tab
   TEST: ogr_mitab_6 ...  Segmentation fault (core dumped)
--------------------------------------------------------

ogr_mitab_6
the SEG Fault makes the test sequence to stop at all so
nothing is available after. This is a weakness of using python
to recorsive run the tests.


ogr_gpkg_15
is not aware that last shared lib is cygproj-13.dll
for proj-5.x but the final result is "success" so I am puzzled,
it passed or failed ?
When I added the proper cygproj-13.dll to osr/osr_proj4.py
than it is fine. The funny thing is that there were never a
"libproj-10.dll", "cygproj-10.dll" as the API sequences was 9, 12, 13
so a different method should be used


In most of the other cases the test results is in rows below,
that makes wondering if a test polishing is needed to avoid
the extra output or if the "success" is misleading

----------------------------------------------------------
   TEST: ogr_carto_vsimem ... Warning 1: Cannot register table in 
dashboard with cdb_cartodbfytable() since its SRS is not EPSG:4326
success

   TEST: ogr_couchdb_init ... HTTP service for http://127.0.0.1:5984 is 
down (HTTP Error: [Errno 111] Connection refused)
cannot open http://127.0.0.1:5984
skip

   TEST: ogr_csv_18 ... WKT,foo,bar
"POINT (0 1)",bar,baz
success

   TEST: ogr_dxf_43 ... Warning 1: Dangerous block recursion detected. 
Some blocks have not been inserted.
Warning 1: Dangerous block recursion detected. Some blocks have not been 
inserted.
success

   TEST: ogr_gxt_3 ... ERROR 1: Line 9, Missing fields (at least 5 are 
expected, 1 found).
ERROR 1: Line 9, Missing fields (at least 5 are expected, 1 found).
ERROR 1: Line 9, Missing fields (at least 5 are expected, 1 found).
success

   TEST: ogr_geojson_13 ... {
"type": "FeatureCollection",
"name": "gjpoint",
"features": [
{ "type": "Feature", "properties": { "FID": 1.0, "NAME": "Point 1" }, 
"geometry": { "type": "Point", "coordinates": [ 100.0, 0.0 ] } }
]
}
success

   TEST: ogr_geom_polyhedral_surface ... ERROR 6: SFCGAL support not 
enabled.
success

   TEST: ogr_geom_tin ... ERROR 6: SFCGAL support not enabled.
success

   TEST: ogr_gml_11 ... Touching .gfs file
success

   TEST: ogr_gml_59 ... Touching .gfs file
success

   TEST: ogr_gml_60 ... ERROR 1: Could not resolve host: not_existing_host
success

   TEST: ogr_gml_61 ... Touching .gfs file
success

   TEST: ogr_index_cleanup ... ERROR 3: Failed to parse field definition 
in file index_p.mif
ERROR 6: COLUMNS keyword not found or invalid number of columns read in 
index_p.mif.  File may be corrupt.
success
------------------------------------------------------------


The real errors seem

   TEST: ogr_index_1 ... ERROR 3: Failed to parse field definition in 
file index_p.mif
ERROR 6: COLUMNS keyword not found or invalid number of columns read in 
index_p.mif.  File may be corrupt.
Traceback (most recent call last):
   File "pymod/gdaltest_python2.py", line 43, in run_func
     result = func()
   File "./ogr_index_test.py", line 80, in ogr_index_1
     gdaltest.p_lyr = gdaltest.p_ds.GetLayerByName('index_p')
AttributeError: 'NoneType' object has no attribute 'GetLayerByName'
fail (blowup)

   TEST: ogr_index_3 ... Traceback (most recent call last):
   File "pymod/gdaltest_python2.py", line 43, in run_func
     result = func()
   File "./ogr_index_test.py", line 124, in ogr_index_3
     sql_lyr = gdaltest.p_ds.ExecuteSQL(
AttributeError: 'NoneType' object has no attribute 'ExecuteSQL'
fail (blowup)

   TEST: ogr_index_8 ... Traceback (most recent call last):
   File "pymod/gdaltest_python2.py", line 43, in run_func
     result = func()
   File "./ogr_index_test.py", line 213, in ogr_index_8
     sql_lyr = gdaltest.p_ds.ExecuteSQL(
AttributeError: 'NoneType' object has no attribute 'ExecuteSQL'
fail (blowup)

   TEST: ogr_mitab_3 ... ERROR 3: Failed to parse field definition at 
line 14 in file tmp/tpoly.tab
Traceback (most recent call last):
   File "pymod/gdaltest_python2.py", line 43, in run_func
     result = func()
   File "./ogr_mitab.py", line 124, in ogr_mitab_3
     gdaltest.mapinfo_lyr = gdaltest.mapinfo_ds.GetLayer(0)
AttributeError: 'NoneType' object has no attribute 'GetLayer'
fail (blowup)

   TEST: ogr_mitab_6 ...  Segmentation fault (core dumped)
--------------------------------------------------

---
Diese E-Mail wurde von Avast Antivirus-Software auf Viren geprüft.
https://www.avast.com/antivirus


From even.rouault at spatialys.com  Sat Dec 15 00:44:24 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 15 Dec 2018 09:44:24 +0100
Subject: [gdal-dev] GDAL 2.3.3 rc2 available
In-Reply-To: <8fe3f82d-fd14-1ca2-44bd-9dfefc502357@gmail.com>
References: <2408273.W2nVAA8RkY@even-i700>
 <8fe3f82d-fd14-1ca2-44bd-9dfefc502357@gmail.com>
Message-ID: <29172685.d9ECSDTdHW@even-i700>

Marco,

A few remarks:

1) Please build with ./configure --with-proj[=/path/to/proj/prefix]
so that classic linking is done, and GDAL doesn't have to guess the exact name 
of the shared object. The dlopen() loading of it is deprecated and will be 
completely removed in GDAL 2.5.0

2) the absence of PROJ during the tests is known to break many tests

3) Some of the messages you get are expected. Some tests emit warnings / 
errors on purposs and miss silencing them (or sometimes it is not possible to 
silence). With GDAL 2.4 and the refactoring of the autotest suite with pytest, 
such verbosity is eliminated

4) cygwin is not really "supported", that is we don't have any continuous 
integration for it, and anything not tested doesn't work (that's my mantra). 

5) For the ogr_index errors you get, looking a bit at the case I see code like
the following in ogr/ogrsf_frmts/mitab/mitab_miffile.cpp

#ifndef _WIN32
    /*-----------------------------------------------------------------
     * On Unix, make sure extension uses the right cases
     * We do it even for write access because if a file with the same
     * extension already exists we want to overwrite it.
     *----------------------------------------------------------------*/
    TABAdjustFilenameExtension(pszTmpFname);
#endif

I suspect that the _WIN32 macro is defined for Cygwin, so the case adjustement 
is not done, whereas it should since Cygwin is probably case sensitive.

I guess the ogr_mitab_6 crash you get is related since the ogr_index involves 
mapinfo indexes.

Thanks for your testing,

Even

> Am 14.12.2018 um 16:54 schrieb Even Rouault:
> > Hi,
> > 
> > Just fixing the issue that Bas noted.
> > 
> > The source is available at:
> >      http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3rc2.tar.xz
> 
> builds fine as usual on cygwin but the autotest has some problems.
> It always had, I never completed them, but this time I decided to look
> in more depth.
> 
> Extract of output:
> 
> ----------------------------------------------------
> $ grep TEST run_all.log | grep -v "success" | grep -v skip
>    TEST: ogr_carto_vsimem ... Warning 1: Cannot register table in
> dashboard with cdb_cartodbfytable() since its SRS is not EPSG:4326
>    TEST: ogr_couchdb_init ... HTTP service for http://127.0.0.1:5984 is
> down (HTTP Error: [Errno 111] Connection refused)
>    TEST: ogr_csv_18 ... WKT,foo,bar
>    TEST: ogr_dxf_43 ... Warning 1: Dangerous block recursion detected.
> Some blocks have not been inserted.
>    TEST: ogr_gxt_3 ... ERROR 1: Line 9, Missing fields (at least 5 are
> expected, 1 found).
>    TEST: ogr_geojson_13 ... {
>    TEST: ogr_geom_polyhedral_surface ... ERROR 6: SFCGAL support not
> enabled.
>    TEST: ogr_geom_tin ... ERROR 6: SFCGAL support not enabled.
>    TEST: ogr_gft_read ... ERROR 1: HTTP error code : 401
>    TEST: ogr_gml_11 ... Touching .gfs file
>    TEST: ogr_gml_59 ... Touching .gfs file
>    TEST: ogr_gml_60 ... ERROR 1: Could not resolve host: not_existing_host
>    TEST: ogr_gml_61 ... Touching .gfs file
>    TEST: ogr_gpkg_15 ... cannot load libproj.so, proj.dll, proj-9.dll,
> libproj-0.dll, libproj-10.dll, cygproj-10.dll or libproj.dylib
>    TEST: ogr_gpkg_18 ... fail
>    TEST: ogr_gpkg_cleanup ... ['ogr_gpkg_18.gpkg']
>    TEST: ogr_gpsbabel_init ... Cannot access GPSBabel utility
>    TEST: ogr_index_1 ... ERROR 3: Failed to parse field definition in
> file index_p.mif
>    TEST: ogr_index_3 ... Traceback (most recent call last):
>    TEST: ogr_index_8 ... Traceback (most recent call last):
>    TEST: ogr_index_cleanup ... ERROR 3: Failed to parse field definition
> in file index_p.mif
>    TEST: ogr_mitab_3 ... ERROR 3: Failed to parse field definition at
> line 14 in file tmp/tpoly.tab
>    TEST: ogr_mitab_6 ...  Segmentation fault (core dumped)
> --------------------------------------------------------
> 
> ogr_mitab_6
> the SEG Fault makes the test sequence to stop at all so
> nothing is available after. This is a weakness of using python
> to recorsive run the tests.
> 
> 
> ogr_gpkg_15
> is not aware that last shared lib is cygproj-13.dll
> for proj-5.x but the final result is "success" so I am puzzled,
> it passed or failed ?
> When I added the proper cygproj-13.dll to osr/osr_proj4.py
> than it is fine. The funny thing is that there were never a
> "libproj-10.dll", "cygproj-10.dll" as the API sequences was 9, 12, 13
> so a different method should be used
> 
> 
> In most of the other cases the test results is in rows below,
> that makes wondering if a test polishing is needed to avoid
> the extra output or if the "success" is misleading
> 
> ----------------------------------------------------------
>    TEST: ogr_carto_vsimem ... Warning 1: Cannot register table in
> dashboard with cdb_cartodbfytable() since its SRS is not EPSG:4326
> success
> 
>    TEST: ogr_couchdb_init ... HTTP service for http://127.0.0.1:5984 is
> down (HTTP Error: [Errno 111] Connection refused)
> cannot open http://127.0.0.1:5984
> skip
> 
>    TEST: ogr_csv_18 ... WKT,foo,bar
> "POINT (0 1)",bar,baz
> success
> 
>    TEST: ogr_dxf_43 ... Warning 1: Dangerous block recursion detected.
> Some blocks have not been inserted.
> Warning 1: Dangerous block recursion detected. Some blocks have not been
> inserted.
> success
> 
>    TEST: ogr_gxt_3 ... ERROR 1: Line 9, Missing fields (at least 5 are
> expected, 1 found).
> ERROR 1: Line 9, Missing fields (at least 5 are expected, 1 found).
> ERROR 1: Line 9, Missing fields (at least 5 are expected, 1 found).
> success
> 
>    TEST: ogr_geojson_13 ... {
> "type": "FeatureCollection",
> "name": "gjpoint",
> "features": [
> { "type": "Feature", "properties": { "FID": 1.0, "NAME": "Point 1" },
> "geometry": { "type": "Point", "coordinates": [ 100.0, 0.0 ] } }
> ]
> }
> success
> 
>    TEST: ogr_geom_polyhedral_surface ... ERROR 6: SFCGAL support not
> enabled.
> success
> 
>    TEST: ogr_geom_tin ... ERROR 6: SFCGAL support not enabled.
> success
> 
>    TEST: ogr_gml_11 ... Touching .gfs file
> success
> 
>    TEST: ogr_gml_59 ... Touching .gfs file
> success
> 
>    TEST: ogr_gml_60 ... ERROR 1: Could not resolve host: not_existing_host
> success
> 
>    TEST: ogr_gml_61 ... Touching .gfs file
> success
> 
>    TEST: ogr_index_cleanup ... ERROR 3: Failed to parse field definition
> in file index_p.mif
> ERROR 6: COLUMNS keyword not found or invalid number of columns read in
> index_p.mif.  File may be corrupt.
> success
> ------------------------------------------------------------
> 
> 
> The real errors seem
> 
>    TEST: ogr_index_1 ... ERROR 3: Failed to parse field definition in
> file index_p.mif
> ERROR 6: COLUMNS keyword not found or invalid number of columns read in
> index_p.mif.  File may be corrupt.
> Traceback (most recent call last):
>    File "pymod/gdaltest_python2.py", line 43, in run_func
>      result = func()
>    File "./ogr_index_test.py", line 80, in ogr_index_1
>      gdaltest.p_lyr = gdaltest.p_ds.GetLayerByName('index_p')
> AttributeError: 'NoneType' object has no attribute 'GetLayerByName'
> fail (blowup)
> 
>    TEST: ogr_index_3 ... Traceback (most recent call last):
>    File "pymod/gdaltest_python2.py", line 43, in run_func
>      result = func()
>    File "./ogr_index_test.py", line 124, in ogr_index_3
>      sql_lyr = gdaltest.p_ds.ExecuteSQL(
> AttributeError: 'NoneType' object has no attribute 'ExecuteSQL'
> fail (blowup)
> 
>    TEST: ogr_index_8 ... Traceback (most recent call last):
>    File "pymod/gdaltest_python2.py", line 43, in run_func
>      result = func()
>    File "./ogr_index_test.py", line 213, in ogr_index_8
>      sql_lyr = gdaltest.p_ds.ExecuteSQL(
> AttributeError: 'NoneType' object has no attribute 'ExecuteSQL'
> fail (blowup)
> 
>    TEST: ogr_mitab_3 ... ERROR 3: Failed to parse field definition at
> line 14 in file tmp/tpoly.tab
> Traceback (most recent call last):
>    File "pymod/gdaltest_python2.py", line 43, in run_func
>      result = func()
>    File "./ogr_mitab.py", line 124, in ogr_mitab_3
>      gdaltest.mapinfo_lyr = gdaltest.mapinfo_ds.GetLayer(0)
> AttributeError: 'NoneType' object has no attribute 'GetLayer'
> fail (blowup)
> 
>    TEST: ogr_mitab_6 ...  Segmentation fault (core dumped)
> --------------------------------------------------
> 
> ---
> Diese E-Mail wurde von Avast Antivirus-Software auf Viren geprüft.
> https://www.avast.com/antivirus
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From marco.atzeri at gmail.com  Sat Dec 15 02:38:01 2018
From: marco.atzeri at gmail.com (Marco Atzeri)
Date: Sat, 15 Dec 2018 11:38:01 +0100
Subject: [gdal-dev] GDAL 2.3.3 rc2 available
In-Reply-To: <29172685.d9ECSDTdHW@even-i700>
References: <2408273.W2nVAA8RkY@even-i700>
 <8fe3f82d-fd14-1ca2-44bd-9dfefc502357@gmail.com>
 <29172685.d9ECSDTdHW@even-i700>
Message-ID: <55bebb10-e26c-d4f9-62ab-20a3445a9de4@gmail.com>

Am 15.12.2018 um 09:44 schrieb Even Rouault:
> Marco,
> 
> A few remarks:
> 
> 1) Please build with ./configure --with-proj[=/path/to/proj/prefix]
> so that classic linking is done, and GDAL doesn't have to guess the exact name
> of the shared object. The dlopen() loading of it is deprecated and will be
> completely removed in GDAL 2.5.0

Hi Even,

gdal package on cygwin is built with
--with-proj=/usr/lib --with-python --with-perl --without-jasper
and there is no problem in the build

checking for proj_create in -lproj... yes
checking proj.h usability... yes
checking proj.h presence... yes
checking for proj.h... yes
configure: proj >= 5 detected

> 2) the absence of PROJ during the tests is known to break many tests

Not the case here. The Gdal shared lib is properly linked

$ cygcheck /usr/bin/cyggdal-20.dll | grep proj
     D:\cygwin64T\bin\cygproj-13.dll

Only that test fails.

> 3) Some of the messages you get are expected. Some tests emit warnings /
> errors on purposs and miss silencing them (or sometimes it is not possible to
> silence). With GDAL 2.4 and the refactoring of the autotest suite with pytest,
> such verbosity is eliminated

Noted.

> 4) cygwin is not really "supported", that is we don't have any continuous
> integration for it, and anything not tested doesn't work (that's my mantra).

The definition of "supported" has different mileage for every project;
seldom upstream can test more than few platforms and almost never cygwin
is one. 99% of the time if a project works on vanilla Unix, it works
also for cygwin.

I am the cygwin package maintainer for proj, geos and gdal.
Proj and geos have zero failures, only on gdal I have not
yet spent enough time to clean the autotest failures as it
requires a separate step for running the test suite, that is
always a time consuming effort.

> 5) For the ogr_index errors you get, looking a bit at the case I see code like
> the following in ogr/ogrsf_frmts/mitab/mitab_miffile.cpp
> 
> #ifndef _WIN32
>      /*-----------------------------------------------------------------
>       * On Unix, make sure extension uses the right cases
>       * We do it even for write access because if a file with the same
>       * extension already exists we want to overwrite it.
>       *----------------------------------------------------------------*/
>      TABAdjustFilenameExtension(pszTmpFname);
> #endif
> 
> I suspect that the _WIN32 macro is defined for Cygwin, so the case adjustement
> is not done, whereas it should since Cygwin is probably case sensitive.
> 
> I guess the ogr_mitab_6 crash you get is related since the ogr_index involves
> mapinfo indexes.

I will look on this

> 
> Thanks for your testing,
> 
> Even
> 

Regards
Marco


---
Diese E-Mail wurde von Avast Antivirus-Software auf Viren geprüft.
https://www.avast.com/antivirus


From gigas002 at yandex.ru  Sat Dec 15 06:49:57 2018
From: gigas002 at yandex.ru (Gigas002)
Date: Sat, 15 Dec 2018 07:49:57 -0700 (MST)
Subject: [gdal-dev] How to use Gdal c# bindings with .NET Core
Message-ID: <1544885397803-0.post@n6.nabble.com>

Hello everyone. I'm trying to use c# bindings with .NET Core 2.0 on Visual
Studio 2017.
Tried to use multiple nuget packages:
1. https://www.nuget.org/packages/GDAL/ +
https://www.nuget.org/packages/GDAL.Native/
I used these packages for my .NET Framework project and it worked fine, but
it doesn't compile on .NET Core. The namespace OSGeo just couldn't been seen
and " 'GDAL.Native 2.3.2' package was restored using
'.NETFramework,Version=v4.6.1' " warning is thrown by VS.
2. https://www.nuget.org/packages/GDAL.NET/
Throws the same warning about .NET Framework 4.6.1 and requires to write
GdalConfiguration class, because Gdal.AllRegister() method wouldn't work. 
3. https://www.nuget.org/packages/Gdal.Core/2.3.0-beta-023 +
https://www.nuget.org/packages/Gdal.Core.WindowsRuntime/2.3.0-beta-023 +
https://www.nuget.org/packages/Gdal.Core.LinuxRuntime/2.3.0-beta-023
Doesn't throw any warnings/errors, compiles fine and Gdal.AllRegister()
method works OK. 

So, the built application works with the 3rd set of packages. But after
building the app, I use VS's "publish" to create standalone win-x64 and
linux-x64 app. And this version doesn't work at all.
At first it throws exception, because it couldn't find gdal_wrap.dll, if
I'll copy all needed dll's and the content from gdal-data directory from
pre-built gdal binaries (taken from here for example:
http://www.gisinternals.com/query.html?content=filelist&file=release-1911-x64-gdal-mapserver.zip)
to the directory with published .exe file, it'll throw another error:
System.EntryPointNotFoundException: Unable to find an entry point named
'CSharp_OSGeofGDAL_AllRegister___' in DLL 'gdal_wrap'.
So, probably I'm doing something wrong? Is there a complete guide how to use
gdal bindings with .NET Core to built standalone application? Thanls in
advance for your reply!



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From szekerest at gmail.com  Sat Dec 15 10:42:59 2018
From: szekerest at gmail.com (Tamas Szekeres)
Date: Sat, 15 Dec 2018 19:42:59 +0100
Subject: [gdal-dev] How to use Gdal c# bindings with .NET Core
In-Reply-To: <1544885397803-0.post@n6.nabble.com>
References: <1544885397803-0.post@n6.nabble.com>
Message-ID: <CACALY+Rxirw5zc6UihKrH2=cyJmrVdxChHpA53awxnpK9_nHKg@mail.gmail.com>

At the moment it looks like only the 3rd option below supports .net core.
However since that is a custom build, use the dependencies
(gdal_wrap.dll etc.) provided by the same bundle, ie:
https://www.nuget.org/packages/Gdal.Core.WindowsRuntime/2.3.0-beta-023
These dll-s support x64 only as far as I see.

Best regards,

Tamas



Gigas002 <gigas002 at yandex.ru> ezt írta (időpont: 2018. dec. 15., Szo,
15:50):

> Hello everyone. I'm trying to use c# bindings with .NET Core 2.0 on Visual
> Studio 2017.
> Tried to use multiple nuget packages:
> 1. https://www.nuget.org/packages/GDAL/ +
> https://www.nuget.org/packages/GDAL.Native/
> I used these packages for my .NET Framework project and it worked fine, but
> it doesn't compile on .NET Core. The namespace OSGeo just couldn't been
> seen
> and " 'GDAL.Native 2.3.2' package was restored using
> '.NETFramework,Version=v4.6.1' " warning is thrown by VS.
> 2. https://www.nuget.org/packages/GDAL.NET/
> Throws the same warning about .NET Framework 4.6.1 and requires to write
> GdalConfiguration class, because Gdal.AllRegister() method wouldn't work.
> 3. https://www.nuget.org/packages/Gdal.Core/2.3.0-beta-023 +
> https://www.nuget.org/packages/Gdal.Core.WindowsRuntime/2.3.0-beta-023 +
> https://www.nuget.org/packages/Gdal.Core.LinuxRuntime/2.3.0-beta-023
> Doesn't throw any warnings/errors, compiles fine and Gdal.AllRegister()
> method works OK.
>
> So, the built application works with the 3rd set of packages. But after
> building the app, I use VS's "publish" to create standalone win-x64 and
> linux-x64 app. And this version doesn't work at all.
> At first it throws exception, because it couldn't find gdal_wrap.dll, if
> I'll copy all needed dll's and the content from gdal-data directory from
> pre-built gdal binaries (taken from here for example:
>
> http://www.gisinternals.com/query.html?content=filelist&file=release-1911-x64-gdal-mapserver.zip
> )
> to the directory with published .exe file, it'll throw another error:
> System.EntryPointNotFoundException: Unable to find an entry point named
> 'CSharp_OSGeofGDAL_AllRegister___' in DLL 'gdal_wrap'.
> So, probably I'm doing something wrong? Is there a complete guide how to
> use
> gdal bindings with .NET Core to built standalone application? Thanls in
> advance for your reply!
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181215/031359ae/attachment.html>

From gigas002 at yandex.ru  Sat Dec 15 12:05:45 2018
From: gigas002 at yandex.ru (Gigas002)
Date: Sat, 15 Dec 2018 13:05:45 -0700 (MST)
Subject: [gdal-dev] How to use Gdal c# bindings with .NET Core
In-Reply-To: <CACALY+Rxirw5zc6UihKrH2=cyJmrVdxChHpA53awxnpK9_nHKg@mail.gmail.com>
References: <1544885397803-0.post@n6.nabble.com>
 <CACALY+Rxirw5zc6UihKrH2=cyJmrVdxChHpA53awxnpK9_nHKg@mail.gmail.com>
Message-ID: <1544904345953-0.post@n6.nabble.com>

Thanks! That worked for me. But of course anyone would prefer official
release, so... Is .net core bindings planned?



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From szekerest at gmail.com  Sun Dec 16 13:48:35 2018
From: szekerest at gmail.com (Tamas Szekeres)
Date: Sun, 16 Dec 2018 22:48:35 +0100
Subject: [gdal-dev] How to use Gdal c# bindings with .NET Core
In-Reply-To: <1544904345953-0.post@n6.nabble.com>
References: <1544885397803-0.post@n6.nabble.com>
 <CACALY+Rxirw5zc6UihKrH2=cyJmrVdxChHpA53awxnpK9_nHKg@mail.gmail.com>
 <1544904345953-0.post@n6.nabble.com>
Message-ID: <CACALY+QfMcG8jEaGW-sCJpZYpzeN_Fp-AxMuFOrVfkEdmpHY2w@mail.gmail.com>

"Official" binaries are not being provided by GDAL directly. However, in
the near future, I'm planning to support ".net standard 2.1" with the nuget
packages derived from the binaries of https://www.gisinternals.com.

Best regards,

Tamas


Gigas002 <gigas002 at yandex.ru> ezt írta (időpont: 2018. dec. 15., Szo,
21:05):

> Thanks! That worked for me. But of course anyone would prefer official
> release, so... Is .net core bindings planned?
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181216/251602da/attachment.html>

From pedrongvenancio at gmail.com  Mon Dec 17 02:09:52 2018
From: pedrongvenancio at gmail.com (=?UTF-8?Q?Pedro_Ven=C3=A2ncio?=)
Date: Mon, 17 Dec 2018 10:09:52 +0000
Subject: [gdal-dev] gdalwarp cutline shift between raster and vector in GDAL
	2.3.2
Message-ID: <CAMCJChuNnQ2bKRXYjFVAgJ4f8nCrwiVTNu9kC0sVAPo5pmBF2A@mail.gmail.com>

Hi,

I'm getting an error when clipping a raster by a mask layer, in GDAL 2.3.2.

This beaviour does not happen in GDAL 2.2.2.

To be more specific, in a Windows machine with GDAL 2.3.2, the clip is
done, but the image is clipped about 200 meters away from the correct
bounding box of the vector layer.

In Linux, with GDAL 2.2.2, the clip is done exactly by the vector bounding
box, as expected.

The command I'm using is just:

gdalwarp -of GTiff -tr 4.235097023884323 -4.2350970238843235 -tap -cutline
PATH_TO_FOLDER\Cartograma_20790_19D.gpkg -dstalpha PATH_TO_FOLDER\19-D.jpg
PATH_TO_FOLDER\19-D_clip.tif

The distance of the error made me think that could be something related to
the coordinate system. In fact, the aux.xml file from the raster layer (in
jpg format), and which must have been generated in some ESRI software, has
the EPSG:20790 coordinate system declared as:

      <SpatialReference xsi:type="typens:ProjectedCoordinateSystem">

<WKT>PROJCS["Lisboa_Hayford_Gauss_IGeoE",GEOGCS["GCS_Datum_Lisboa_Hayford",DATUM["D_Datum_Lisboa_Hayford",SPHEROID["International_1924",6378388.0,297.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",200000.0],PARAMETER["False_Northing",300000.0],PARAMETER["Central_Meridian",-8.131906111111112],PARAMETER["Scale_Factor",1.0],PARAMETER["Latitude_Of_Origin",39.66666666666666],UNIT["Meter",1.0],AUTHORITY["Esri",102164]]</WKT>
        <XOrigin>-5423400</XOrigin>
        <YOrigin>-14095000</YOrigin>
        <XYScale>450251902.2805022</XYScale>
        <ZOrigin>-100000</ZOrigin>
        <ZScale>10000</ZScale>
        <MOrigin>-100000</MOrigin>
        <MScale>10000</MScale>
        <XYTolerance>0.001</XYTolerance>
        <ZTolerance>0.001</ZTolerance>
        <MTolerance>0.001</MTolerance>
        <HighPrecision>true</HighPrecision>
        <WKID>102164</WKID>
        <LatestWKID>102164</LatestWKID>
      </SpatialReference>

Simply making a gdal_translate -a_srs EPSG:20790 to the original raster
layer, produces the following info in the aux.xml:

    <PAMDataset>
      <SRS>PROJCS["Lisbon (Lisbon) / Portuguese National
Grid",GEOGCS["Lisbon
(Lisbon)",DATUM["Lisbon_1937_Lisbon",SPHEROID["International
1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-304.046,-60.576,103.64,0,0,0,0],AUTHORITY["EPSG","6803"]],PRIMEM["Lisbon",-9.131906111111112,AUTHORITY["EPSG","8902"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4803"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",39.66666666666666],PARAMETER["central_meridian",1],PARAMETER["scale_factor",1],PARAMETER["false_easting",200000],PARAMETER["false_northing",300000],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","20790"]]</SRS>
      <GeoTransform>  1.6169619321196713e+05,  4.2462876699946506e+00,
-9.3136981756810518e-03,  3.6360765297460271e+05,  4.1234595692999079e-03,
-4.2324755960434057e+00</GeoTransform>
    </PAMDataset>

Making the gdalwarp cutline to this new raster layer, with EPSG:20790
assigned, already gives the correct output.

So, the strange thing is the diferent beaviour between GDAL 2.2.2 and
2.3.2. Can this be a bug in GDAL 2.3.2?

Here is a sample dataset to test:

https://cld.pt/dl/download/0fcb8923-ed23-45a0-b518-0e5168d0cc0b/19-D.zip

Thank you very much.

Best regards,
Pedro Venâncio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181217/b026be8b/attachment.html>

From andre+joost at nurfuerspam.de  Mon Dec 17 05:16:28 2018
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Mon, 17 Dec 2018 14:16:28 +0100
Subject: [gdal-dev] gdalwarp cutline shift between raster and vector in
	GDAL 2.3.2
In-Reply-To: <CAMCJChuNnQ2bKRXYjFVAgJ4f8nCrwiVTNu9kC0sVAPo5pmBF2A@mail.gmail.com>
References: <CAMCJChuNnQ2bKRXYjFVAgJ4f8nCrwiVTNu9kC0sVAPo5pmBF2A@mail.gmail.com>
Message-ID: <pv87fk$ahh$1@blaine.gmane.org>

Hi Pedro,

if you compare gdalsrsinfo epsg:20790 and gdalsrsinfo EPSG:102164 from 
ESRI, you see that ESRI omits the datum shift between Lisbon Hayford and 
WGS84.

So you should use -s_srs EPSG:20790 to get the warping correctly.

HTH,
Andre Joost

Am 17.12.18 um 11:09 schrieb Pedro Venâncio:
> Hi,
>
> I'm getting an error when clipping a raster by a mask layer, in GDAL 2.3.2.
>
> This beaviour does not happen in GDAL 2.2.2.
>
> To be more specific, in a Windows machine with GDAL 2.3.2, the clip is
> done, but the image is clipped about 200 meters away from the correct
> bounding box of the vector layer.
>
> In Linux, with GDAL 2.2.2, the clip is done exactly by the vector bounding
> box, as expected.
>
> The command I'm using is just:
>
> gdalwarp -of GTiff -tr 4.235097023884323 -4.2350970238843235 -tap -cutline
> PATH_TO_FOLDER\Cartograma_20790_19D.gpkg -dstalpha PATH_TO_FOLDER\19-D.jpg
> PATH_TO_FOLDER\19-D_clip.tif
>
> The distance of the error made me think that could be something related to
> the coordinate system. In fact, the aux.xml file from the raster layer (in
> jpg format), and which must have been generated in some ESRI software, has
> the EPSG:20790 coordinate system declared as:
>
>        <SpatialReference xsi:type="typens:ProjectedCoordinateSystem">
>
> <WKT>PROJCS["Lisboa_Hayford_Gauss_IGeoE",GEOGCS["GCS_Datum_Lisboa_Hayford",DATUM["D_Datum_Lisboa_Hayford",SPHEROID["International_1924",6378388.0,297.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",200000.0],PARAMETER["False_Northing",300000.0],PARAMETER["Central_Meridian",-8.131906111111112],PARAMETER["Scale_Factor",1.0],PARAMETER["Latitude_Of_Origin",39.66666666666666],UNIT["Meter",1.0],AUTHORITY["Esri",102164]]</WKT>
>          <XOrigin>-5423400</XOrigin>
>          <YOrigin>-14095000</YOrigin>
>          <XYScale>450251902.2805022</XYScale>
>          <ZOrigin>-100000</ZOrigin>
>          <ZScale>10000</ZScale>
>          <MOrigin>-100000</MOrigin>
>          <MScale>10000</MScale>
>          <XYTolerance>0.001</XYTolerance>
>          <ZTolerance>0.001</ZTolerance>
>          <MTolerance>0.001</MTolerance>
>          <HighPrecision>true</HighPrecision>
>          <WKID>102164</WKID>
>          <LatestWKID>102164</LatestWKID>
>        </SpatialReference>
>
> Simply making a gdal_translate -a_srs EPSG:20790 to the original raster
> layer, produces the following info in the aux.xml:
>
>      <PAMDataset>
>        <SRS>PROJCS["Lisbon (Lisbon) / Portuguese National
> Grid",GEOGCS["Lisbon
> (Lisbon)",DATUM["Lisbon_1937_Lisbon",SPHEROID["International
> 1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-304.046,-60.576,103.64,0,0,0,0],AUTHORITY["EPSG","6803"]],PRIMEM["Lisbon",-9.131906111111112,AUTHORITY["EPSG","8902"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4803"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",39.66666666666666],PARAMETER["central_meridian",1],PARAMETER["scale_factor",1],PARAMETER["false_easting",200000],PARAMETER["false_northing",300000],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","20790"]]</SRS>
>        <GeoTransform>  1.6169619321196713e+05,  4.2462876699946506e+00,
> -9.3136981756810518e-03,  3.6360765297460271e+05,  4.1234595692999079e-03,
> -4.2324755960434057e+00</GeoTransform>
>      </PAMDataset>
>
> Making the gdalwarp cutline to this new raster layer, with EPSG:20790
> assigned, already gives the correct output.
>
> So, the strange thing is the diferent beaviour between GDAL 2.2.2 and
> 2.3.2. Can this be a bug in GDAL 2.3.2?
>
> Here is a sample dataset to test:
>
> https://cld.pt/dl/download/0fcb8923-ed23-45a0-b518-0e5168d0cc0b/19-D.zip
>
> Thank you very much.
>
> Best regards,
> Pedro Venâncio
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



From pedrongvenancio at gmail.com  Mon Dec 17 06:25:02 2018
From: pedrongvenancio at gmail.com (=?UTF-8?Q?Pedro_Ven=C3=A2ncio?=)
Date: Mon, 17 Dec 2018 14:25:02 +0000
Subject: [gdal-dev] gdalwarp cutline shift between raster and vector in
 GDAL 2.3.2
In-Reply-To: <pv87fk$ahh$1@blaine.gmane.org>
References: <CAMCJChuNnQ2bKRXYjFVAgJ4f8nCrwiVTNu9kC0sVAPo5pmBF2A@mail.gmail.com>
 <pv87fk$ahh$1@blaine.gmane.org>
Message-ID: <CAMCJChum7baBv-Oib6fisCHvJaWUA=THiQBO2h7YUiLOv1ALwg@mail.gmail.com>

Hi Andre,

Given the magnitude of the shift, I suspected that could be due to the lack
of +towgs84 parameters of ESRI 102164.

But I does not understand why it worked correctly in GDAL 2.2.2.

Now I see that

C:\>gdalinfo --version
GDAL 2.3.2, released 2018/09/21

C:\>gdalsrsinfo EPSG:102164
PROJ.4 : +proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112
+k=1 +x_0=200000 +y_0=300000 +ellps=intl +units=m +no_defs
OGC WKT :
PROJCS["Lisboa_Hayford_Gauss_IGeoE",
    GEOGCS["GCS_Datum_Lisboa_Hayford",
        DATUM["Datum_Lisboa_Hayford",
            SPHEROID["International_1924",6378388.0,297.0]],
        PRIMEM["Greenwich",0.0],
        UNIT["Degree",0.0174532925199433]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["False_Easting",200000.0],
    PARAMETER["False_Northing",300000.0],
    PARAMETER["Central_Meridian",-8.131906111111112],
    PARAMETER["Scale_Factor",1.0],
    PARAMETER["Latitude_Of_Origin",39.66666666666666],
    UNIT["Meter",1.0],
    AUTHORITY["Esri","102164"]]

while

pedro at pedro-VirtualBox:~$ gdalinfo --version
GDAL 2.2.2, released 2017/09/15

pedro at pedro-VirtualBox:~$ gdalsrsinfo EPSG:102164
ERROR 1: ERROR - failed to load SRS definition from EPSG:102164

I checked and in both versions, this SRS is listed in proj esri file as

# Lisboa Hayford Gauss IGeoE
<102164> +proj=tmerc +lat_0=39.66666666666666 +lon_0=-8.131906111111112
+k=1.000000 +x_0=200000 +y_0=300000 +ellps=intl +units=m  no_defs <>

and not in the epsg file.

So, is there any explanation for the different behaviour between those
versions?

Thank you very much!

Best regards,
Pedro





Andre Joost <andre+joost at nurfuerspam.de> escreveu no dia segunda,
17/12/2018 à(s) 13:17:

> Hi Pedro,
>
> if you compare gdalsrsinfo epsg:20790 and gdalsrsinfo EPSG:102164 from
> ESRI, you see that ESRI omits the datum shift between Lisbon Hayford and
> WGS84.
>
> So you should use -s_srs EPSG:20790 to get the warping correctly.
>
> HTH,
> Andre Joost
>
> Am 17.12.18 um 11:09 schrieb Pedro Venâncio:
> > Hi,
> >
> > I'm getting an error when clipping a raster by a mask layer, in GDAL
> 2.3.2.
> >
> > This beaviour does not happen in GDAL 2.2.2.
> >
> > To be more specific, in a Windows machine with GDAL 2.3.2, the clip is
> > done, but the image is clipped about 200 meters away from the correct
> > bounding box of the vector layer.
> >
> > In Linux, with GDAL 2.2.2, the clip is done exactly by the vector
> bounding
> > box, as expected.
> >
> > The command I'm using is just:
> >
> > gdalwarp -of GTiff -tr 4.235097023884323 -4.2350970238843235 -tap
> -cutline
> > PATH_TO_FOLDER\Cartograma_20790_19D.gpkg -dstalpha
> PATH_TO_FOLDER\19-D.jpg
> > PATH_TO_FOLDER\19-D_clip.tif
> >
> > The distance of the error made me think that could be something related
> to
> > the coordinate system. In fact, the aux.xml file from the raster layer
> (in
> > jpg format), and which must have been generated in some ESRI software,
> has
> > the EPSG:20790 coordinate system declared as:
> >
> >        <SpatialReference xsi:type="typens:ProjectedCoordinateSystem">
> >
> >
> <WKT>PROJCS["Lisboa_Hayford_Gauss_IGeoE",GEOGCS["GCS_Datum_Lisboa_Hayford",DATUM["D_Datum_Lisboa_Hayford",SPHEROID["International_1924",6378388.0,297.0]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",200000.0],PARAMETER["False_Northing",300000.0],PARAMETER["Central_Meridian",-8.131906111111112],PARAMETER["Scale_Factor",1.0],PARAMETER["Latitude_Of_Origin",39.66666666666666],UNIT["Meter",1.0],AUTHORITY["Esri",102164]]</WKT>
> >          <XOrigin>-5423400</XOrigin>
> >          <YOrigin>-14095000</YOrigin>
> >          <XYScale>450251902.2805022</XYScale>
> >          <ZOrigin>-100000</ZOrigin>
> >          <ZScale>10000</ZScale>
> >          <MOrigin>-100000</MOrigin>
> >          <MScale>10000</MScale>
> >          <XYTolerance>0.001</XYTolerance>
> >          <ZTolerance>0.001</ZTolerance>
> >          <MTolerance>0.001</MTolerance>
> >          <HighPrecision>true</HighPrecision>
> >          <WKID>102164</WKID>
> >          <LatestWKID>102164</LatestWKID>
> >        </SpatialReference>
> >
> > Simply making a gdal_translate -a_srs EPSG:20790 to the original raster
> > layer, produces the following info in the aux.xml:
> >
> >      <PAMDataset>
> >        <SRS>PROJCS["Lisbon (Lisbon) / Portuguese National
> > Grid",GEOGCS["Lisbon
> > (Lisbon)",DATUM["Lisbon_1937_Lisbon",SPHEROID["International
> >
> 1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-304.046,-60.576,103.64,0,0,0,0],AUTHORITY["EPSG","6803"]],PRIMEM["Lisbon",-9.131906111111112,AUTHORITY["EPSG","8902"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4803"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",39.66666666666666],PARAMETER["central_meridian",1],PARAMETER["scale_factor",1],PARAMETER["false_easting",200000],PARAMETER["false_northing",300000],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","20790"]]</SRS>
> >        <GeoTransform>  1.6169619321196713e+05,  4.2462876699946506e+00,
> > -9.3136981756810518e-03,  3.6360765297460271e+05,
> 4.1234595692999079e-03,
> > -4.2324755960434057e+00</GeoTransform>
> >      </PAMDataset>
> >
> > Making the gdalwarp cutline to this new raster layer, with EPSG:20790
> > assigned, already gives the correct output.
> >
> > So, the strange thing is the diferent beaviour between GDAL 2.2.2 and
> > 2.3.2. Can this be a bug in GDAL 2.3.2?
> >
> > Here is a sample dataset to test:
> >
> > https://cld.pt/dl/download/0fcb8923-ed23-45a0-b518-0e5168d0cc0b/19-D.zip
> >
> > Thank you very much.
> >
> > Best regards,
> > Pedro Venâncio
> >
> >
> >
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181217/04b45011/attachment-0001.html>

From even.rouault at spatialys.com  Mon Dec 17 07:04:36 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 17 Dec 2018 16:04:36 +0100
Subject: [gdal-dev] gdalwarp cutline shift between raster and vector in
	GDAL 2.3.2
In-Reply-To: <CAMCJChum7baBv-Oib6fisCHvJaWUA=THiQBO2h7YUiLOv1ALwg@mail.gmail.com>
References: <CAMCJChuNnQ2bKRXYjFVAgJ4f8nCrwiVTNu9kC0sVAPo5pmBF2A@mail.gmail.com>
 <pv87fk$ahh$1@blaine.gmane.org>
 <CAMCJChum7baBv-Oib6fisCHvJaWUA=THiQBO2h7YUiLOv1ALwg@mail.gmail.com>
Message-ID: <2446040.U88M8hXbQr@even-i700>

On lundi 17 décembre 2018 14:25:02 CET Pedro Venâncio wrote:
> Hi Andre,
> 
> Given the magnitude of the shift, I suspected that could be due to the lack
> of +towgs84 parameters of ESRI 102164.

What version of PROJ does your GDAL 2.3.2 build use ? PROJ 5 ?
And your GDAL 2.2.2 build: PROJ 4 ?

If so, that might explain things. The ESRI:102164 translated as a proj string 
has no +towgs84, whereas EPSG:20790 has.

With PROJ 4 and how GDAL uses it, due to the absence of a +towgs84 in one of 
the source/target CRS, no datum shift is performed, which is what is expected.

With PROJ 5 and how GDAL 2.3.2 uses it, a unwanted datum shift is done (it is 
a bit like if the ESRI 102164 had an implicit +towgs84=0,0,0).
I've traced this as https://github.com/OSGeo/gdal/issues/1156
So yes defining -s_srs EPSG:20790 -t_srs EPSG:20790 is the best way to make 
sure all CRS are equal to avoid any reprojection attempt.

(the fact that your GDAL 2.2.2 build doesn't find EPSG:102164 is another 
issue, probably missing GDAL_DATA, and unrelated, since it doesn't need to be 
able to resolve it)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pedrongvenancio at gmail.com  Mon Dec 17 07:22:07 2018
From: pedrongvenancio at gmail.com (=?UTF-8?Q?Pedro_Ven=C3=A2ncio?=)
Date: Mon, 17 Dec 2018 15:22:07 +0000
Subject: [gdal-dev] gdalwarp cutline shift between raster and vector in
 GDAL 2.3.2
In-Reply-To: <2446040.U88M8hXbQr@even-i700>
References: <CAMCJChuNnQ2bKRXYjFVAgJ4f8nCrwiVTNu9kC0sVAPo5pmBF2A@mail.gmail.com>
 <pv87fk$ahh$1@blaine.gmane.org>
 <CAMCJChum7baBv-Oib6fisCHvJaWUA=THiQBO2h7YUiLOv1ALwg@mail.gmail.com>
 <2446040.U88M8hXbQr@even-i700>
Message-ID: <CAMCJChtL+n0fy4BTr-sj3mYd9a2-x-PnpfoHdwYgMVNu=zBOqQ@mail.gmail.com>

Hi Even,


What version of PROJ does your GDAL 2.3.2 build use ? PROJ 5 ?
> And your GDAL 2.2.2 build: PROJ 4 ?
>

GDAL 2.3.2 uses PROJ 5.2.0.
GDAL 2.2.3 uses PROJ.4 version 493
GDAL 2.2.2 uses PROJ.4 version 480



> If so, that might explain things. The ESRI:102164 translated as a proj
> string
> has no +towgs84, whereas EPSG:20790 has.
>
> With PROJ 4 and how GDAL uses it, due to the absence of a +towgs84 in one
> of
> the source/target CRS, no datum shift is performed, which is what is
> expected.
>
> With PROJ 5 and how GDAL 2.3.2 uses it, a unwanted datum shift is done (it
> is
> a bit like if the ESRI 102164 had an implicit +towgs84=0,0,0).
> I've traced this as https://github.com/OSGeo/gdal/issues/1156
>

I think this is exactly the problem!

C:\>gdalinfo --version
GDAL 2.3.2, released 2018/09/21

C:\>echo "0 0 0" | gdaltransform -s_srs "+proj=longlat +ellps=GRS80
+towgs84=100,100,100" -t_srs "+proj=longlat +ellps=GRS80"
0.000898301199977168 0.000904355202316605 100.001573113725


C:\>gdalinfo --version
GDAL 2.2.3, released 2017/11/20

C:\>echo "0 0 0" | gdaltransform -s_srs "+proj=longlat +ellps=GRS80
+towgs84=100,100,100" -t_srs "+proj=longlat +ellps=GRS80"
0 0 0


pedro at pedro-VirtualBox:~$ gdalinfo --version
GDAL 2.2.2, released 2017/09/15

pedro at pedro-VirtualBox:~$ echo "0 0 0" | gdaltransform -s_srs
"+proj=longlat +ellps=GRS80 +towgs84=100,100,100" -t_srs "+proj=longlat
+ellps=GRS80"
0 0 0


Do you think this can be fixed soon?

Thank you very much Even!

Best regards,
Pedro
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181217/ad08a855/attachment.html>

From even.rouault at spatialys.com  Mon Dec 17 14:19:52 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 17 Dec 2018 23:19:52 +0100
Subject: [gdal-dev] Support for reading IFC files?
In-Reply-To: <1544825084005-0.post@n6.nabble.com>
References: <1544825084005-0.post@n6.nabble.com>
Message-ID: <4155561.NRKIM30VcC@even-i700>

Magnus,

I believe that could be an interesting evolution. How that would be done 
exactly (e.g. leveraging IfcOpenShell) remains to be defined. And also find an 
available developer + appropriate funding to make that happen.

Even

> Hi
> Over at
> http://osgeo-org.1560.x6.nabble.com/QGIS-Developer-IFC-data-in-QGIS-td538877
> 3.html, I asked if anyone was working on adding support for reading IFC
> files in QGIS and it was suggested to me that I should ask the GDAL/OGR
> forum. Are there any plans on adding that to GDAL/OGR? It would be great to
> be able to render BIM data together with my geodata in QGIS.
> 
> Regards,
> 
> Magnus
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From umbertofilippo at tiscali.it  Mon Dec 17 15:00:30 2018
From: umbertofilippo at tiscali.it (umbertofilippo)
Date: Mon, 17 Dec 2018 16:00:30 -0700 (MST)
Subject: [gdal-dev] Piping ogr2ogr (SHP format) /vsistdout/ to unix command
Message-ID: <1545087630002-0.post@n6.nabble.com>

I hope my poor knowledge of informatics terminology won't prevent me to
explain properly, but I try to make my best.
I am trying to use ogr2ogr to convert the GML response from a WFS GetFeature
request to a zipped Shapefile.
I am able to convert the GML to Shapefile, but what I'd like to do now is to
use a command that could also zip that Shapefile (my final aim woud be to
mak this downloadable from a web app).
So I came across the  GDAL Virtual File Systems docs
<https://www.gdal.org/gdal_virtual_file_systems.html>   and saw /vsistdin/
and /vsistdout/. I thought to use these to pipe the shapefile output from
ogr2ogr to the zip command (I am on Linux).
This is what probably my best try:

ogr2ogr -f "ESRI Shapefile" /vsistdout/
WFS:"https://www.wondermap.it/cgi-bin/qgis_mapserv.fcgi?&map=/home/ubuntu/qgis/projects/Demo_sci_WMS/demo_sci.qgs&SERVICE=WFS&VERSION=1.1.0&REQUEST=GetFeature&typename=domini_sciabili&bbox=544138,5098446,564138,5108446"
| zip > test.zip

And the error I get:
adding: -ERROR 1: Failed to create directory /vsistdout/ for shapefile
datastore.
ERROR 1: ESRI Shapefile driver failed to create /vsistdout/
 (stored 0%)

Is it possible to do that?




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From nicolas.cadieux at archeotec.ca  Mon Dec 17 15:03:15 2018
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Mon, 17 Dec 2018 18:03:15 -0500
Subject: [gdal-dev] Zonal Grid Statistics
Message-ID: <fabc0a5a-f910-5356-b84b-22c282991914@archeotec.ca>

Hi,

I am currently using the SAGA Zonal Grid Statistics found here: 
http://www.saga-gis.org/saga_tool_doc/7.0.0/statistics_grid_5.html (both 
Zonal and Continuous Data are Rasters with the same extent and pixel 
posting). It works well but SAGA load both grids into memory.  Since my 
grids are the size of Canada , I am running out of memory.  Zones are 
land cover type but can also be Aspect and Slope (in 5 degree 
implements).  My continuous data (my grid to analyse) are basically DEM 
height errors.  So the general idea is to get the min, max, mean... 
error by land cover type (or slope Aspect...)

Is there a GDAL utility that can do this (with two raster files) without 
loading the raster into memory?

If not, is there a python code that you know of can help me calculate 
MIN MAX MEAN STDEV SUM by Zone.

If not, I was thinking the best way to do this would be to read both 
rasters one pixel at a time and then to make a python dictionary 
(defaultdict) with the Zonal data being the Dictionary Keys and the 
Dictionary values being the height errors.  This way, I could get my 
stats by dictionary key (zones).  If there is method to this madness?

To giving you an idea of the scope of the problem, I have 5 zonal layers 
and 50 height error raster in my study so speed is of essence.  A 
typical raster has.  284401 x 28801 pixels.

Thanks

Nicolas


From even.rouault at spatialys.com  Mon Dec 17 15:13:29 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Dec 2018 00:13:29 +0100
Subject: [gdal-dev] Piping ogr2ogr (SHP format) /vsistdout/ to unix
	command
In-Reply-To: <1545087630002-0.post@n6.nabble.com>
References: <1545087630002-0.post@n6.nabble.com>
Message-ID: <1810547.4kPrSXtpkg@even-i700>

On lundi 17 décembre 2018 16:00:30 CET umbertofilippo wrote:
> I hope my poor knowledge of informatics terminology won't prevent me to
> explain properly, but I try to make my best.
> I am trying to use ogr2ogr to convert the GML response from a WFS GetFeature
> request to a zipped Shapefile.
> Is it possible to do that?

No, you can't pipe a shapefile. This is a multi file format, and OGR updates 
the files in a non sequential way. You have to create a temporary shapefile 
and zip it afterwards.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From anash at protonmail.com  Mon Dec 17 15:21:09 2018
From: anash at protonmail.com (anash)
Date: Mon, 17 Dec 2018 16:21:09 -0700 (MST)
Subject: [gdal-dev] Creating Cloud Optimized GeoTIFFs
In-Reply-To: <CACmBxyt6jXDxqHsTddh7tgxzHPQ5UmGNXTx2Fkdr6ZJK1BtCsw@mail.gmail.com>
References: <CACkcqcUzFPHeZHfO3-d2f6aL4xaxMbTTd6LCf2b+2g_0A=7H8w@mail.gmail.com>
 <37364207.nlYVYg3d7h@even-i700>
 <CACmBxyt6jXDxqHsTddh7tgxzHPQ5UmGNXTx2Fkdr6ZJK1BtCsw@mail.gmail.com>
Message-ID: <1545088869421-0.post@n6.nabble.com>

Hi Even,

I have seen pretty much everywhere that COG's are created in 3 steps:

1. compress and tile the image

$ gdal_translate -co TILED=YES -co COMPRESS=DEFLATE in.tif tmp.tif

2. add overviews

$ gdaladdo -r average 2 4 8 16 tmp.tif

3. reorder overviews

$ gdal_translate -co TILED=YES -co COMPRESS=DEFLATE -co
COPY_SRC_OVERVIEWS=YES tmp.tif out.tif

However, it seems that we're tiling and compressing with gdal_translate
twice, which doesn't seem to be the most efficient way to do things.

I have run some initial tests on an untiled/uncompressed image basically
skipping step 1 and going straight to adding overviews and translating to
reorder, compress, and tile. The resulting image passes the COG validator
test, meaning it is a "valid" COG, though the overview offset values are
slightly different:

>>> validate(gdal.Open('tile_first_cog.tif'))
... ([], {'ifd_offsets': {'main': 8, 'overview_2': 31886, 'overview_3':
32822, 'overview_0': 18238, 'overview_1': 28966}, 'data_offsets': {'main':
180166631, 'overview_2': 2300609, 'overview_3': 33246, 'overview_0':
45588773, 'overview_1': 11129028}})

>>> validate(gdal.Open('no_init_tile_cog.tif'))
... ([], {'ifd_offsets': {'main': 8, 'overview_2': 31138, 'overview_3':
32074, 'overview_0': 17490, 'overview_1': 28218}, 'data_offsets': {'main':
180165883, 'overview_2': 2299861, 'overview_3': 32498, 'overview_0':
45588025, 'overview_1': 11128280}})

I am wondering, is there any downside to not starting with an initial
tiling/compression? 



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Mon Dec 17 15:35:19 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Dec 2018 00:35:19 +0100
Subject: [gdal-dev] Creating Cloud Optimized GeoTIFFs
In-Reply-To: <1545088869421-0.post@n6.nabble.com>
References: <CACkcqcUzFPHeZHfO3-d2f6aL4xaxMbTTd6LCf2b+2g_0A=7H8w@mail.gmail.com>
 <CACmBxyt6jXDxqHsTddh7tgxzHPQ5UmGNXTx2Fkdr6ZJK1BtCsw@mail.gmail.com>
 <1545088869421-0.post@n6.nabble.com>
Message-ID: <7598287.nXmGMaPFiO@even-i700>

> I have run some initial tests on an untiled/uncompressed image basically
> skipping step 1 and going straight to adding overviews and translating to
> reorder, compress, and tile. The resulting image passes the COG validator
> test, meaning it is a "valid" COG, though the overview offset values are
> slightly different:

Did you check with gdalinfo -checksum if the pixel content was identical ?

That's rather surprising. unless your input dataset is JPEG compressed for 
example, in which case the overviews created by gdaladdo will also use JPEG 
compression, whereas if done on tmp.tif they will use DEFLATE. That's the only 
explanation I have for now for the difference you observe.
And in that case, you loose quality, so you may want to use --config 
COMPRESS_OVERVIEW NONE (or DEFLATE) to gdaladdo.

> >>> validate(gdal.Open('tile_first_cog.tif'))
> 
> ... ([], {'ifd_offsets': {'main': 8, 'overview_2': 31886, 'overview_3':
> 32822, 'overview_0': 18238, 'overview_1': 28966}, 'data_offsets': {'main':
> 180166631, 'overview_2': 2300609, 'overview_3': 33246, 'overview_0':
> 45588773, 'overview_1': 11129028}})
> 
> >>> validate(gdal.Open('no_init_tile_cog.tif'))
> 
> ... ([], {'ifd_offsets': {'main': 8, 'overview_2': 31138, 'overview_3':
> 32074, 'overview_0': 17490, 'overview_1': 28218}, 'data_offsets': {'main':
> 180165883, 'overview_2': 2299861, 'overview_3': 32498, 'overview_0':
> 45588025, 'overview_1': 11128280}})
> 
> I am wondering, is there any downside to not starting with an initial
> tiling/compression?

Normally not, apart that might affect speed in a positive or negative way, 
depending on the characteristics of your input dataset (and with the comment I 
made above about lossy compression on the overviews)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kassies at gmail.com  Tue Dec 18 00:06:11 2018
From: kassies at gmail.com (Rutger)
Date: Tue, 18 Dec 2018 01:06:11 -0700 (MST)
Subject: [gdal-dev] Zonal Grid Statistics
In-Reply-To: <fabc0a5a-f910-5356-b84b-22c282991914@archeotec.ca>
References: <fabc0a5a-f910-5356-b84b-22c282991914@archeotec.ca>
Message-ID: <1545120371259-0.post@n6.nabble.com>

Hey,

It may depend on the input format, but for speed you probably want to read
at least a single block at a time, not a single pixel. The blocksize can be
inspected with "gdalinfo" for example.

Calculating those statistics can be done incrementally in a single pass, so
that's certainly possible without reading all data into memory at once while
still being efficient. The wiki already provides Python code for both the
Welford algorithm and a parallel version for calculating the variance and
the mean. The min/max and sum should be trivial.

https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_Online_algorithm
<https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford's_Online_algorithm>  

You could consider RasterIO (a GDAL wrapper) to alleviate some of the block
related logic, but the standard GDAL Python API would also work.

Regards,
Rutger



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From umbertofilippo at tiscali.it  Tue Dec 18 00:08:32 2018
From: umbertofilippo at tiscali.it (umbertofilippo)
Date: Tue, 18 Dec 2018 01:08:32 -0700 (MST)
Subject: [gdal-dev] Piping ogr2ogr (SHP format) /vsistdout/ to unix
	command
In-Reply-To: <1810547.4kPrSXtpkg@even-i700>
References: <1545087630002-0.post@n6.nabble.com> <1810547.4kPrSXtpkg@even-i700>
Message-ID: <1545120512567-0.post@n6.nabble.com>

Even Rouault-2 wrote
> On lundi 17 décembre 2018 16:00:30 CET umbertofilippo wrote:
> 
> No, you can't pipe a shapefile. This is a multi file format, and OGR
> updates 
> the files in a non sequential way. You have to create a temporary
> shapefile 
> and zip it afterwards.
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev

Thank you Even, will create the temp file then.

Regards,

Umberto



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From alobolistas at gmail.com  Tue Dec 18 00:54:22 2018
From: alobolistas at gmail.com (Agustin Lobo)
Date: Tue, 18 Dec 2018 09:54:22 +0100
Subject: [gdal-dev] gdal_calc.py: multiply each band of a multispectral
	raster by a factor
Message-ID: <CAG4NReL1EmSAmm+f9UcN0dNL7fBFtOESvNwr4iZ9-1inm4cHBw@mail.gmail.com>

Dear devs,
Is it possible to use gdal_calc.py to multiply each band of a
multispectral raster by a factor?
I've tried:

gdal_calc.py -A ReflPCA.tif --allBands=A --outfile=result.tif
--calc="A*[1,2,3,4,5,6]" --overwrite

it works fine with 1 single value,
gdal_calc.py -A ReflPCA.tif --allBands=A --outfile=result.tif
--calc="A*2" --overwrite

but do not know how to do it with a vector of factors. Perhaps because
of I'm not familiar with python numpy.

Thanks

From sawan.nikam22 at gmail.com  Tue Dec 18 03:18:47 2018
From: sawan.nikam22 at gmail.com (sawan nikam)
Date: Tue, 18 Dec 2018 16:48:47 +0530
Subject: [gdal-dev] Spatial adjustment using gdal java binding
Message-ID: <CABw2rhgfqdv6gyjHVo2V75-qO7F9pjP02ZUfmUu7CiEpne_gPg@mail.gmail.com>

Hi,
I m trying to do spatial adjustement of georefrenced shapfile with the help
of GDAL java bindings.

As in ArcMAP, there are many algorithms available for doing this task like
rubbersheeting, Affine, Projective.
While exploring, i didn't found such algorithms in gdal for performing this
task. Group members please suggess something, from where i have to start.

Thank you,
Sawan Nikam
sawan.nikam22 at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181218/734645fc/attachment-0001.html>

From even.rouault at spatialys.com  Tue Dec 18 03:35:15 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Dec 2018 12:35:15 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.3.3 rc2 for release
Message-ID: <2244336.xB3RpRy3uD@even-i700>

Hi,

Motion: GDAL/OGR 2.3.3 rc2 is promoted to be the official 2.3.3 final release.

-------

My vote: +1

-------

Note: https://github.com/OSGeo/gdal/issues/1156 was raised yesterday. Would 
have been good if it had been in 2.3.3 but I don't really feel like doing 
another RC for that, so that will be for 2.4.1


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Tue Dec 18 04:15:35 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Tue, 18 Dec 2018 05:15:35 -0700 (MST)
Subject: [gdal-dev] Motion: Promote GDAL 2.3.3 rc2 for release
In-Reply-To: <2244336.xB3RpRy3uD@even-i700>
References: <2244336.xB3RpRy3uD@even-i700>
Message-ID: <1545135335933-0.post@n6.nabble.com>

+1

-Jukka Rahkonen-


Even Rouault-2 wrote
> Hi,
> 
> Motion: GDAL/OGR 2.3.3 rc2 is promoted to be the official 2.3.3 final
> release.
> 
> -------
> 
> My vote: +1
> 
> -------
> 
> Note: https://github.com/OSGeo/gdal/issues/1156 was raised yesterday.
> Would 
> have been good if it had been in 2.3.3 but I don't really feel like doing 
> another RC for that, so that will be for 2.4.1





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From howard at hobu.co  Tue Dec 18 06:37:42 2018
From: howard at hobu.co (Howard Butler)
Date: Tue, 18 Dec 2018 08:37:42 -0600
Subject: [gdal-dev] Motion: Promote GDAL 2.3.3 rc2 for release
In-Reply-To: <1545135335933-0.post@n6.nabble.com>
References: <2244336.xB3RpRy3uD@even-i700> <1545135335933-0.post@n6.nabble.com>
Message-ID: <7f7bbe59-80a3-6c54-8210-72b79113c299@hobu.co>

+1


Howard


On 12/18/18 6:15 AM, jratike80 wrote:
> +1
>
> -Jukka Rahkonen-
>
>
> Even Rouault-2 wrote
>> Hi,
>>
>> Motion: GDAL/OGR 2.3.3 rc2 is promoted to be the official 2.3.3 final
>> release.
>>
>> -------
>>
>> My vote: +1
>>
>> -------
>>
>> Note: https://github.com/OSGeo/gdal/issues/1156 was raised yesterday.
>> Would 
>> have been good if it had been in 2.3.3 but I don't really feel like doing 
>> another RC for that, so that will be for 2.4.1
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181218/74042bf7/attachment.sig>

From dmorissette at mapgears.com  Tue Dec 18 07:02:00 2018
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Tue, 18 Dec 2018 10:02:00 -0500
Subject: [gdal-dev] Motion: Promote GDAL 2.3.3 rc2 for release
In-Reply-To: <2244336.xB3RpRy3uD@even-i700>
References: <2244336.xB3RpRy3uD@even-i700>
Message-ID: <cf84fa15-0ccc-3ca0-78b9-db423f065c95@mapgears.com>

+1

Daniel

On 2018-12-18 6:35 a.m., Even Rouault wrote:
> Hi,
> 
> Motion: GDAL/OGR 2.3.3 rc2 is promoted to be the official 2.3.3 final release.
> 
> -------
> 
> My vote: +1
> 
> -------
> 
> Note: https://github.com/OSGeo/gdal/issues/1156 was raised yesterday. Would
> have been good if it had been in 2.3.3 but I don't really feel like doing
> another RC for that, so that will be for 2.4.1
> 
> 
> Even
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From even.rouault at spatialys.com  Tue Dec 18 10:03:09 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Dec 2018 19:03:09 +0100
Subject: [gdal-dev] Budget to request to OSGeo for GDAL
Message-ID: <4837888.7GhMBFqbBc@even-i700>

Hi,

OSGeo projects will be asked (or have been, but can't find the email) for 
their budget needs for 2019

Anything to add beyond the 5000 USD to renew the Travis-CI extended jobs ? 
(that will benefit also to other projects that are under the OSGeo github 
organization)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Dec 18 10:04:53 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Dec 2018 19:04:53 +0100
Subject: [gdal-dev] Pre-RFC for OGRSpatialReference use in GDAL and changes
	in how to deal with axis order issues
Message-ID: <6891679.Um45VzzNMM@even-i700>

Hi,

I call this pre-RFC as I don't have yet any code implementing the following 
ideas (so there might be holes in the analysis), but I wanted to get some 
feedback before investing too much time into this substantial work.

Let's start with the easiest topic:

1) Use of OGRSpatialReference in GDAL

Currently GDAL datasets accept and return a WKT 1 string to describe the SRS. 
To be more independant of the actual encoding, and for example allowing a 
GeoPackage raster dataset to be able to use WKT 2, I propose we switch from a 
string representation to the more abstract representation offered by 
OGRSpatialReference. In the current state of GDAL, OGRSpatialReference is just 
a direct mapping of WKT 1, but in my in-progress gdalbarn branch at
https://github.com/rouault/gdal/tree/gdalbarn , OGRSpatialReference is now 
more or less encapsulating a osgeo::proj::crs object (ie a C++ object 
representing a CRS as modelled by OGC Topic 2 / ISO-19111), that can have 
several representations: OGC WKT1 (GDAL WKT1), WKT2, ESRI WKT1, PROJ strings.

So the proposal would be to change:

GDALDataset:
    virtual const char* GetProjectionRef();

to
    virtual OGRSpatialReference *GetSpatialRef();

    // compatibility layer (conceptually)
    const char* GetProjectionRef() {
		return GetSpatialRef()->ExportToWkt1(); }

Similarly on the set side,

Change
    virtual CPLErr SetProjection(const char* pszWKT);
to
    virtual CPLErr SetSpatialRef(OGRSpatialReference*);

    // compatibility layer (conceptually)
    CPLErr SetProjection(const char* pszWKT) {
		return SetSpatialRef(OGRSpatialReference::importFromWkt(pszWKT)); }

Regarding ownership, I guess we would do similarly to the vector side, that is 
GetSpatialRef() returns an an object that it owns and doesn't increment the 
refcount. And SetSpatialRef() would potentially increment the reference count 
on the passed object or clone it (like ICreateLayer() does)

To ease the transition that will require going through all the ~150 raster 
drivers, I may add in GDALDataset:
  protected:
    OGRSpatialReference* GetSpatialRefFromOldGetProjectionRef()
		// conceptual implementation
		{ return OGRSpatialReference::importFromWkt(OldGetProjectionRef()); }

    virtual const char* OldGetProjectionRef() { return ""; }

Drivers would rename their existing GetProjectionRef() to 
OldGetProjectionRef() and implement a GetSpatialRef() that would just call 
GetSpatialRefFromOldGetProjectionRef(). This is just a technical detail to be 
able to complete the transition of API easier in a semi-automatic way. Over 
time we may remove the hack and implement natively GetSpatialRef(). And 
similarly for the write side.


Now, the harder one:

2) Axis order revamp

Ever recurring headache [1], not sure my below proposal will solve it in a 
definitive way

Let's look at the current situation with a common example

EPSG:4326 returns
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0,
        AUTHORITY["EPSG","8901"]],
    UNIT["degree",0.0174532925199433,
        AUTHORITY["EPSG","9122"]],
    AUTHORITY["EPSG","4326"]]

whereas EPSGA:4326 returns (not the A for Axis)
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0,
        AUTHORITY["EPSG","8901"]],
    UNIT["degree",0.0174532925199433,
        AUTHORITY["EPSG","9122"]],
    AXIS["Latitude",NORTH],
    AXIS["Longitude",EAST],
    AUTHORITY["EPSG","4326"]]

In EPSG:4326 expansion, there is no AXIS mention. This is technically 
conformant with OGC WKT1 grammar where AXIS is optional. However, GDAL uses 
this omission to implicitely mean it doesn't honour the axis order that the 
EPSG authority has set for this geographic CRS, which is latitude first, 
longitude second, but instead use longitude, latitude. Note also that EPSGA:
4326 is not really honoured by GDAL: if you use it with gdaltransform, it will 
still expect/return coordinates in longitude, latitude order.

In WKT2, AXIS is a required element, so we cannot hide ourselves behind the 
omission we did in WKT1, and we can't either modify the definition to 
advertize longitude, latitude order, as it would be a great source of 
confusion (using an authority code but putting a contradictory element into it 
is a no-no)

I propose to add a "data axis to SRS axis mapping" concept, which is a bit 
similar to what is done in WCS DescribeCoverage response to explain how the 
SRS axis map to the grid axis of a coverage

Extract from
https://docs.geoserver.org/stable/en/user/extensions/wcs20eo/index.html
for a coverage that uses EPSG:4326
	 <gml:coverageFunction>
        <gml:GridFunction>
          <gml:sequenceRule axisOrder="+2 +1">Linear</gml:sequenceRule>
          <gml:startPoint>0 0</gml:startPoint>
        </gml:GridFunction>
      </gml:coverageFunction>

A similar mapping would be used to define how the 'x' and 'y' components in 
the geotransform matrix or in a OGRGeometry map to the axis defined by the CRS 
definition.

Such mapping would be given by a new method in OGRSpatialReference

    std::vector<int> GetDataAxisToSRSAxisMapping() const

To explain its semantics, imagine that it return 2,-1,3.
That would be interpreted as:
* 2: the first axis of the CRS maps to the second axis of the data
* -1: the second axis of the CRS maps to the first axis of the data, with 
values negated
* 3: the third axis of the CRS maps to the third axis of the data

This would be similar to the PROJ axisswap operation:
	https://proj4.org/operations/conversions/axisswap.html

By default, GetDataAxisToSRSAxisMapping() would return the identity 1,2[,3], 
that is be conformant with the axis order defined by the authority.

As all GDAL and a vast majority of OGR drivers depend on using the "GIS axis 
mapping", a method
	SetDataAxisToSRSAxisMappingStrategy(
			TRADITIONAL_GIS_ORDER or AUTHORITY_COMPLIANT )
would be added to make their job of specifying the axis mapping easier;

TRADITIONAL_GIS_ORDER would mean:
* for geographic 2D CRS,
    - for Latitude NORTH, Longitude EAST (such as EPSG:4326), 
GetDataAxisToSRSAxisMapping() would return {2,1}, meaning that the data order 
is longitude, latitude
    - for Longitude EAST, Latitude NORTH (such as OGC:CRS84), would return 
{1,2}

* for projected CRS,
    - for EAST, NORTH (ie most projected CRS), would return {1,2}
    - for NORTH, EAST, would return {2,1}
    - for North Pole CRS, with East/SOUTH, North/SOUTH, such as EPSG:5041 
("WGS 84 / UPS North (E,N)"), would return {1,2}
    - for North Pole CRS, with northing/SOUTH, easting/SOUTH, such as EPSG:
32661 ("WGS 84 / UPS North (N,E)"), would return {2,1}
    - similarly for South Pole CRS
    - Krovak East North, with EAST, NORTH, such as EPSG:5221 "S-JTSK (Ferro) / 
Krovak", would return {1,2}

	Cases where I'm less sure about what the 'GIS order' is and suspect we 
might not do the right thing currently:
    - Transverse Mercator South Oriented, with WEST, SOUTH, would return {1,2}   
(I assume that this system is not used for rasters)
    - traditional Krovak, with SOUTH, WEST, such as EPSG:2065 "S-JTSK (Ferro) 
/ Krovak", would return {1,2}   (I assume that this system is not used for 
rasters)
    - other cases, return {1,2}

OGRCreateCoordinateTransformation(OGRSpatialReference* source, 
OGRSpatialReference* target) will honour the data axis to srs axis mapping
That means that gdaltransform -s_srs EPSG:4326 -t_srs EPSG:32631 will expect 
latitude, longitude order (so backward incompatible)
(PROJ6 will also be axis order compliant when using EPSG codes)
We may add a -s_axis gis switch (and/or -s_axis long,lat for more explicit) / 
-t_axis syntax to have some easier transition.

Raster datasets will all set 
SetDataAxisToSRSAxisMappingStrategy(TRADITIONAL_GIS_ORDER) on the 
OGRSpatialReference* they return, and will also assume it in SetSpatialRef() 
(will probably be just assumed and unchecked for now)

Vector layers will mostly all call 
SetDataAxisToSRSAxisMappingStrategy(TRADITIONAL_GIS_ORDER) on the 
OGRSpatialReference* returned by GetSpatialRef(). We may decide that some 
drivers like GML no longer do coordinate axis swapping for GML3 and then use 
the AUTHORITY_COMPLIANT strategy.
ICreateLayer() when receiving a OGRSpatialReference* may decide to change the 
axis mapping strategy. That is: if it receives a OGRSpatialReference with 
AUTHORITY_COMPLIANT order, it may decide to switch to TRADITIONAL_GIS_ORDER 
and GetSpatialRef()::GetDataAxisToSRSAxisMapping() will reflect that. Tools 
like ogr2ogr will need to do the geometry axis swapping in that case

I'm midly satisfied with adding the axis mapping in the OGRSpatialReference 
class itself, but I feel it would be overkill to have an extra object to 
capture both (and can't come with a name for it). The coupling of both will 
require careful explanation of what some methods do. For example, I think 
OGRSpatialReference::IsSame() would ignore the data axis mapping setting when 
comparing 2 OGRSpatialReference object.

I would also lean on making WKT 1 export now always return the AXIS element, 
and EPSG:xxxx would then behave like EPSGA:xxxx

So a summary view of this approach is that in the formal SRS definition, we no 
longer do derogations regarding axis order, but we add an additional interface 
to describe how we actually make our match match with the SRS definition.

In case you reached that point, thoughts... ?

Even

[1] Fresh ticket about such confusion:
https://github.com/OSGeo/gdal/issues/1155

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From szekerest at gmail.com  Tue Dec 18 10:15:57 2018
From: szekerest at gmail.com (Tamas Szekeres)
Date: Tue, 18 Dec 2018 19:15:57 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.3.3 rc2 for release
In-Reply-To: <2244336.xB3RpRy3uD@even-i700>
References: <2244336.xB3RpRy3uD@even-i700>
Message-ID: <CACALY+RxxZBwEH=o+V9tNmn+Cmh1Xz_d8ud3JpzWfuDQMFUopw@mail.gmail.com>

+1

Tamas


Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2018. dec.
18., K, 12:35):

> Hi,
>
> Motion: GDAL/OGR 2.3.3 rc2 is promoted to be the official 2.3.3 final
> release.
>
> -------
>
> My vote: +1
>
> -------
>
> Note: https://github.com/OSGeo/gdal/issues/1156 was raised yesterday.
> Would
> have been good if it had been in 2.3.3 but I don't really feel like doing
> another RC for that, so that will be for 2.4.1
>
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181218/9af6827c/attachment-0001.html>

From warmerdam at pobox.com  Tue Dec 18 12:11:26 2018
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 18 Dec 2018 12:11:26 -0800
Subject: [gdal-dev] Motion: Promote GDAL 2.3.3 rc2 for release
In-Reply-To: <CACALY+RxxZBwEH=o+V9tNmn+Cmh1Xz_d8ud3JpzWfuDQMFUopw@mail.gmail.com>
References: <2244336.xB3RpRy3uD@even-i700>
 <CACALY+RxxZBwEH=o+V9tNmn+Cmh1Xz_d8ud3JpzWfuDQMFUopw@mail.gmail.com>
Message-ID: <CA+YzLBdWtSB-=ua0FyVanQcs11S24kbdTkK12S7-GVVjqPb3bQ@mail.gmail.com>

+1 Frank

I think we are using it at scale and have ironed out our problems.

On Tue, Dec 18, 2018 at 10:16 AM Tamas Szekeres <szekerest at gmail.com> wrote:

> +1
>
> Tamas
>
>
> Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2018. dec.
> 18., K, 12:35):
>
>> Hi,
>>
>> Motion: GDAL/OGR 2.3.3 rc2 is promoted to be the official 2.3.3 final
>> release.
>>
>> -------
>>
>> My vote: +1
>>
>> -------
>>
>> Note: https://github.com/OSGeo/gdal/issues/1156 was raised yesterday.
>> Would
>> have been good if it had been in 2.3.3 but I don't really feel like doing
>> another RC for that, so that will be for 2.4.1
>>
>>
>> Even
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows |
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181218/a8f534c1/attachment.html>

From astewart at terragotech.com  Tue Dec 18 13:13:03 2018
From: astewart at terragotech.com (Alan Stewart)
Date: Tue, 18 Dec 2018 21:13:03 +0000
Subject: [gdal-dev] osx compile failure
Message-ID: <BY2PR15MB0856948C0990E293382E9FDCC4BD0@BY2PR15MB0856.namprd15.prod.outlook.com>

MacOS 10.12, xcode 9.2

I doing 'git clone' of master from OSGeo/gdal and running the gdal/ci/travis/osx scripts. The install.sh script terminates because of:

plmosaicdataset.cpp:1111:30: error: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'const int' [-Werror,-Wshorten-64-to-32]
        const int nMosaics = json_object_array_length(poMosaics);
                  ~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
plmosaicdataset.cpp:1419:30: error: comparison of integers of different signs: 'int' and 'size_t' (aka 'unsigned long') [-Werror,-Wsign-compare]
            for(int i = 0; i < json_object_array_length(poItems); i++ )
                           ~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

I could fix this with a simple cast, but I don't know GDAL policy and I wonder how many more there will be if I fix these. Is my environment incorrect, should I be setting a flag to ignore this type of error? I would think that would be in the script...

Thanks for any advice.

Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615

www.terragotech.com<applewebdata://B24C0762-C7C9-4431-8518-ACC915448B89/www.terragotech.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181218/78cd541d/attachment.html>

From even.rouault at spatialys.com  Tue Dec 18 13:20:01 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 18 Dec 2018 22:20:01 +0100
Subject: [gdal-dev] osx compile failure
In-Reply-To: <BY2PR15MB0856948C0990E293382E9FDCC4BD0@BY2PR15MB0856.namprd15.prod.outlook.com>
References: <BY2PR15MB0856948C0990E293382E9FDCC4BD0@BY2PR15MB0856.namprd15.prod.outlook.com>
Message-ID: <19583406.D6Ig70h1ma@even-i700>

Alan,

your environment is correct, it is just that there are different versions of 
libjson-c where function signatures have changed. We have had similar issues 
in the past.

> 
> I doing 'git clone' of master from OSGeo/gdal and running the
> gdal/ci/travis/osx scripts. The install.sh script terminates because of:
> 
> plmosaicdataset.cpp:1111:30: error: implicit conversion loses integer
> precision: 'size_t' (aka 'unsigned long') to 'const int'
> [-Werror,-Wshorten-64-to-32] const int nMosaics =
> json_object_array_length(poMosaics);

Could be fixed for all versions by using: const auto

>                   ~~~~~~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> plmosaicdataset.cpp:1419:30: error: comparison of integers of different
> signs: 'int' and 'size_t' (aka 'unsigned long') [-Werror,-Wsign-compare]
> for(int i = 0; i < json_object_array_length(poItems); i++ ) ~ ^

I would do
  	 const auto nItemsLength = json_object_array_length(poItems);
    for( decltype(nItemsLength) i = 0; i < nItemsLength; i++ )

Can you submit a pull request with something like the above ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From astewart at terragotech.com  Tue Dec 18 13:41:26 2018
From: astewart at terragotech.com (Alan Stewart)
Date: Tue, 18 Dec 2018 21:41:26 +0000
Subject: [gdal-dev] Linux continuus integration failure
Message-ID: <BY2PR15MB08561BA51F8D338CE5833BAAC4BD0@BY2PR15MB0856.namprd15.prod.outlook.com>

Ubuntu 18.04.1 LTS

I am doing 'git clone' of master from OSGO/gdal and running the gdal/ci/travis/ubuntu_1804 scripts. Script.sh is terminating with failures of four tests from ogr_fgdb.py. There is a summary of those below. In theory these should all pass, as the GitHub Travis CI was passing at the time I cloned yesterday. Any suggestions re what could be wrong appreciated.


    def test_ogr_fgdb_13():

        ds = ogrtest.fgdb_drv.CreateDataSource(name)
        gdal.PopErrorHandler()
>       assert ds is None
E       AssertionError: assert <osgeo.ogr.DataSource; proxy of <Swig Object of type 'OGRDataSourceShadow *' at 0x7fa77faf11b0> > is None

ogr_fgdb.py:774: AssertionError

--------------------------------------------------------------------------------------

    def test_ogr_fgdb_19():

            for case in ('CASE4', 'CASE5'):
                (bPerLayerCopyingForTransaction, ds) = ogr_fgdb_19_open_update('tmp/test.gdb')

>               assert ds.StartTransaction(force=True) == 0
E               AttributeError: 'NoneType' object has no attribute 'StartTransaction'

ogr_fgdb.py:1407: AttributeError

--------------------------------------------------------------------------------------

    def test_ogr_fgdb_19bis():

        ds = ogr.Open('tmp/test.gdb')
        gdal.PushErrorHandler()
>       ret = test_ogr_fgdb_19()

ogr_fgdb.py:1562:

--------------------------------------------------------------------------------------

    def test_ogr_fgdb_20():

        ogrtest.openfilegdb_drv.Register()
        ds = ogr.Open('tmp/test.gdb', update=1)
        ogrtest.openfilegdb_drv.Deregister()
        ogrtest.fgdb_drv.Deregister()
        # Force OpenFileGDB first
        ogrtest.openfilegdb_drv.Register()
        ogrtest.fgdb_drv.Register()

>       lyr = ds.CreateLayer('ogr_fgdb_20', geom_type=ogr.wkbNone)
E       AttributeError: 'NoneType' object has no attribute 'CreateLayer'

ogr_fgdb.py:1594: AttributeError


Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615

www.terragotech.com<applewebdata://B24C0762-C7C9-4431-8518-ACC915448B89/www.terragotech.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181218/9b10bb8a/attachment-0001.html>

From scottyh at uw.edu  Tue Dec 18 14:20:08 2018
From: scottyh at uw.edu (Scott Henderson)
Date: Tue, 18 Dec 2018 14:20:08 -0800
Subject: [gdal-dev] optimal vsicurl settings for merging range requests
Message-ID: <F4A8FAC1-E1FD-4B16-B7EB-3552C0AE8D35@uw.edu>

There are many environment variables for optimizing access to remote geotiffs via GDAL’s /vsicurl/ interface. I’ve noticed that directly downloading a file via curl can be much faster (~4x) than pulling the entire file via gdal_translate or gdalmanage, and I think this is due to 1 GET request versus 10s of GET requests. Here is an example using Landsat8 on Google Cloud:

In brief it seems there is a limit for GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES that I’m missing. If the entire file is requested, I was expecting 2 GET requests (1 to read the metadata and another to retrieve the data).

Static:
https://github.com/scottyhq/pangeo-cog-test/blob/master/cog-timing.ipynb <https://github.com/scottyhq/pangeo-cog-test/blob/master/cog-timing.ipynb> 

Interactive:
https://mybinder.org/v2/gh/scottyhq/pangeo-cog-test/master?urlpath=lab/tree/cog-timing.ipynb <https://mybinder.org/v2/gh/scottyhq/pangeo-cog-test/master?urlpath=lab/tree/cog-timing.ipynb> 

Just the command:
CPL_VSIL_CURL_USE_HEAD=NO GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR CPL_VSIL_CURL_ALLOWED_EXTENSIONS=.TIF CPL_CURL_VERBOSE=YES GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES gdal_translate --debug ON /vsicurl/http://storage.googleapis.com/gcp-public-data-landsat/LC08/01/047/027/LC08_L1TP_047027_20130421_20170310_01_T1/LC08_L1TP_047027_20130421_20170310_01_T1_B4.TIF LC08_L1TP_047027_20130421_20170310_01_T1_B4.TIF

Thanks for any hints or clarification!
Scott



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181218/b3f0651c/attachment.html>

From even.rouault at spatialys.com  Tue Dec 18 15:22:39 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Dec 2018 00:22:39 +0100
Subject: [gdal-dev] optimal vsicurl settings for merging range requests
In-Reply-To: <F4A8FAC1-E1FD-4B16-B7EB-3552C0AE8D35@uw.edu>
References: <F4A8FAC1-E1FD-4B16-B7EB-3552C0AE8D35@uw.edu>
Message-ID: <3152203.0Yom4RR32k@even-i700>

On mardi 18 décembre 2018 14:20:08 CET Scott Henderson wrote:
> There are many environment variables for optimizing access to remote
> geotiffs via GDAL’s /vsicurl/ interface. I’ve noticed that directly
> downloading a file via curl can be much faster (~4x) than pulling the
> entire file via gdal_translate or gdalmanage, and I think this is due to 1
> GET request versus 10s of GET requests. Here is an example using Landsat8
> on Google Cloud:
> 
> In brief it seems there is a limit for
> GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES that I’m missing. If the entire file
> is requested, I was expecting 2 GET requests (1 to read the metadata and
> another to retrieve the data).

Scott,

Actually you would need to define 2 extra env variables for that:

GDAL_MAX_RAW_BLOCK_CACHE_SIZE=120000000 
(120 MB, the size of your uncompressed raster)
to overcome a 10 MB limit in the GeoTIFF driver for range request merging.
(undocumented)

and
GDAL_SWATH_SIZE=120000000 
to increase the default swath size used by the general raster copy mechanism 
of GDALDatasetCopyWholeRaster()
( https://trac.osgeo.org/gdal/wiki/ConfigOptions#GDAL_SWATH_SIZE )

With that you'll get 3 GET requests. The last one is a smallish one, probably 
because GDALDatasetCopyWholeRaster() isn't smart enough to issue a request for 
the whole raster due to the bottom block being partial.

But if you need to convert a whole raster, you could just use the HTTP driver, 
that is use a https:// URL directly as the dataset nmae (you may need to set 
GDAL_SKIP=DODS to avoid the DODS driver to kick in inappropriately), which 
will save you from setting all those magic incantations, and will consume less 
memory, since the above mechanisms will add caches at various layers (in the 
GTiff driver, in GDALDatasetCopyWholeRaster() and in the /vsicurl layer), 
whereas the HTTP driver will just ingest the whole raster.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at aitchison.me.uk  Tue Dec 18 22:30:30 2018
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Wed, 19 Dec 2018 06:30:30 +0000 (GMT)
Subject: [gdal-dev] Pre-RFC for OGRSpatialReference use in GDAL and
 changes in how to deal with axis order issues
In-Reply-To: <6891679.Um45VzzNMM@even-i700>
References: <6891679.Um45VzzNMM@even-i700>
Message-ID: <alpine.DEB.2.21.1812190627120.2605@warden>


Do we need to consider (real and false) precision when converting between 
OGRSpatialReference and string ?

On Tue, 18 Dec 2018, Even Rouault wrote:

> Hi,
>
> I call this pre-RFC as I don't have yet any code implementing the following
> ideas (so there might be holes in the analysis), but I wanted to get some
> feedback before investing too much time into this substantial work.
>
> Let's start with the easiest topic:
>
> 1) Use of OGRSpatialReference in GDAL
>
> Currently GDAL datasets accept and return a WKT 1 string to describe the SRS.
> To be more independant of the actual encoding, and for example allowing a
> GeoPackage raster dataset to be able to use WKT 2, I propose we switch from a
> string representation to the more abstract representation offered by
> OGRSpatialReference. In the current state of GDAL, OGRSpatialReference is just
> a direct mapping of WKT 1, but in my in-progress gdalbarn branch at
> https://github.com/rouault/gdal/tree/gdalbarn , OGRSpatialReference is now
> more or less encapsulating a osgeo::proj::crs object (ie a C++ object
> representing a CRS as modelled by OGC Topic 2 / ISO-19111), that can have
> several representations: OGC WKT1 (GDAL WKT1), WKT2, ESRI WKT1, PROJ strings.
>
> So the proposal would be to change:
>
> GDALDataset:
>    virtual const char* GetProjectionRef();
>
> to
>    virtual OGRSpatialReference *GetSpatialRef();
>
>    // compatibility layer (conceptually)
>    const char* GetProjectionRef() {
> 		return GetSpatialRef()->ExportToWkt1(); }
>
> Similarly on the set side,
>
> Change
>    virtual CPLErr SetProjection(const char* pszWKT);
> to
>    virtual CPLErr SetSpatialRef(OGRSpatialReference*);
>
>    // compatibility layer (conceptually)
>    CPLErr SetProjection(const char* pszWKT) {
> 		return SetSpatialRef(OGRSpatialReference::importFromWkt(pszWKT)); }
>
> Regarding ownership, I guess we would do similarly to the vector side, that is
> GetSpatialRef() returns an an object that it owns and doesn't increment the
> refcount. And SetSpatialRef() would potentially increment the reference count
> on the passed object or clone it (like ICreateLayer() does)
>
> To ease the transition that will require going through all the ~150 raster
> drivers, I may add in GDALDataset:
>  protected:
>    OGRSpatialReference* GetSpatialRefFromOldGetProjectionRef()
> 		// conceptual implementation
> 		{ return OGRSpatialReference::importFromWkt(OldGetProjectionRef()); }
>
>    virtual const char* OldGetProjectionRef() { return ""; }
>
> Drivers would rename their existing GetProjectionRef() to
> OldGetProjectionRef() and implement a GetSpatialRef() that would just call
> GetSpatialRefFromOldGetProjectionRef(). This is just a technical detail to be
> able to complete the transition of API easier in a semi-automatic way. Over
> time we may remove the hack and implement natively GetSpatialRef(). And
> similarly for the write side.


From alobolistas at gmail.com  Wed Dec 19 00:51:44 2018
From: alobolistas at gmail.com (Agustin Lobo)
Date: Wed, 19 Dec 2018 09:51:44 +0100
Subject: [gdal-dev] Wrong values writing ENVI image (both as ENVI or as
	GTiff)
Message-ID: <CAG4NRe+MKMtG93TOMEb_404n9RAexjrk3nQ4jdcLzYaaUi1Zfg@mail.gmail.com>

I have an image of 144 rows x 640 cols x 224 bands in ENVI format, in bil and
UInt16 (hdr states interleave = bil, data type = 12).

In order to convert to GTiff, I state:
gdal_translate -ot UInt16 input.raw test.tif

but values in test.tif are wrong: e.g. a pixel with value of 1038.0 in
input.raw becomes 234 in test.tif

This is so even if I just save as ENVI format with:
gdal_translate -of ENVI -ot UInt16 input.raw test

gdal_translate works fine if the input ENVI image is BSQ.

Is this a bug or am I doing something wrong?

(I appollogize I cannot provide an small example as I cannot write an
ENVI format in BIL order)
(using gdal GDAL 2.3.2, released 2018/09/21 on Debian)

Thanks

From even.rouault at spatialys.com  Wed Dec 19 02:21:49 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Dec 2018 11:21:49 +0100
Subject: [gdal-dev] Pre-RFC for OGRSpatialReference use in GDAL and
	changes in how to deal with axis order issues
In-Reply-To: <alpine.DEB.2.21.1812190627120.2605@warden>
References: <6891679.Um45VzzNMM@even-i700>
 <alpine.DEB.2.21.1812190627120.2605@warden>
Message-ID: <2176427.AGzq7LGXoG@even-i700>

On mercredi 19 décembre 2018 06:30:30 CET Andrew C Aitchison wrote:
> Do we need to consider (real and false) precision when converting between
> OGRSpatialReference and string ?

Can you explain more what you mean ? I don't understand.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


From andrew at aitchison.me.uk  Wed Dec 19 03:29:09 2018
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Wed, 19 Dec 2018 11:29:09 +0000 (GMT)
Subject: [gdal-dev] Pre-RFC for OGRSpatialReference use in GDAL and
 changes in how to deal with axis order issues
In-Reply-To: <2176427.AGzq7LGXoG@even-i700>
References: <6891679.Um45VzzNMM@even-i700>
 <alpine.DEB.2.21.1812190627120.2605@warden> <2176427.AGzq7LGXoG@even-i700>
Message-ID: <alpine.DEB.2.21.1812191103050.7731@warden>

On Wed, 19 Dec 2018, Even Rouault wrote:

> On mercredi 19 décembre 2018 06:30:30 CET Andrew C Aitchison wrote:
>> Do we need to consider (real and false) precision when converting between
>> OGRSpatialReference and string ?

My concern is that since since a WKT1 string encodes floating point 
values as strings and an OGRSpatialReference stores them as doubles,
a round trip (eg saving to file and reading back, or vice versa)
will sometimes not preserve the last digit(s).

My reference to "false precision" was something like 1.1 becoming
eg. 1.1000000000001

Looking in more detail at your proposal, I guess this wont bring up 
anything new, since we are using the existing routines
OGRSpatialReference::importFromWkt() and GetSpatialRef()->ExportToWkt1()
where this issue will have already been considered.

-- 
Andrew C. Aitchison					Cambridge, UK
 			andrew at aitchison.me.uk

From even.rouault at spatialys.com  Wed Dec 19 03:45:06 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Dec 2018 12:45:06 +0100
Subject: [gdal-dev] Pre-RFC for OGRSpatialReference use in GDAL and
	changes in how to deal with axis order issues
In-Reply-To: <alpine.DEB.2.21.1812191103050.7731@warden>
References: <6891679.Um45VzzNMM@even-i700> <2176427.AGzq7LGXoG@even-i700>
 <alpine.DEB.2.21.1812191103050.7731@warden>
Message-ID: <1784249.okuypoo40P@even-i700>

On mercredi 19 décembre 2018 11:29:09 CET Andrew C Aitchison wrote:
> On Wed, 19 Dec 2018, Even Rouault wrote:
> > On mercredi 19 décembre 2018 06:30:30 CET Andrew C Aitchison wrote:
> >> Do we need to consider (real and false) precision when converting between
> >> OGRSpatialReference and string ?
> 
> My concern is that since since a WKT1 string encodes floating point
> values as strings and an OGRSpatialReference stores them as doubles,
> a round trip (eg saving to file and reading back, or vice versa)
> will sometimes not preserve the last digit(s).
> 
> My reference to "false precision" was something like 1.1 becoming
> eg. 1.1000000000001
> 
> Looking in more detail at your proposal, I guess this wont bring up
> anything new, since we are using the existing routines
> OGRSpatialReference::importFromWkt() and GetSpatialRef()->ExportToWkt1()
> where this issue will have already been considered.

Indeed, nothing new on this. Except that the import/export from/to WKT will be 
done by PROJ 6 now. It uses %.15g formatting

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Wed Dec 19 04:46:26 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 19 Dec 2018 05:46:26 -0700 (MST)
Subject: [gdal-dev] Pre-RFC for OGRSpatialReference use in GDAL and
 changes in how to deal with axis order issues
In-Reply-To: <6891679.Um45VzzNMM@even-i700>
References: <6891679.Um45VzzNMM@even-i700>
Message-ID: <1545223586071-0.post@n6.nabble.com>

Even Rouault-2 wrote
> ICreateLayer() when receiving a OGRSpatialReference* may decide to change
> the 
> axis mapping strategy. That is: if it receives a OGRSpatialReference with 
> AUTHORITY_COMPLIANT order, it may decide to switch to
> TRADITIONAL_GIS_ORDER 
> and GetSpatialRef()::GetDataAxisToSRSAxisMapping() will reflect that.
> Tools 
> like ogr2ogr will need to do the geometry axis swapping in that case

Does this guarantee that it is impossible or at least pretty difficult to
create for example crazy shapefiles with flipped axis and rotated geometries
even if user tries to force that with AUTHORITY_COMPLIANT mode switch?

-Jukka Rahkonen-




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Wed Dec 19 05:07:28 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Dec 2018 14:07:28 +0100
Subject: [gdal-dev] Pre-RFC for OGRSpatialReference use in GDAL and
	changes in how to deal with axis order issues
In-Reply-To: <1545223586071-0.post@n6.nabble.com>
References: <6891679.Um45VzzNMM@even-i700> <1545223586071-0.post@n6.nabble.com>
Message-ID: <1796364.PgnaOPLyDh@even-i700>

On mercredi 19 décembre 2018 05:46:26 CET jratike80 wrote:
> Even Rouault-2 wrote
> 
> > ICreateLayer() when receiving a OGRSpatialReference* may decide to change
> > the
> > axis mapping strategy. That is: if it receives a OGRSpatialReference with
> > AUTHORITY_COMPLIANT order, it may decide to switch to
> > TRADITIONAL_GIS_ORDER
> > and GetSpatialRef()::GetDataAxisToSRSAxisMapping() will reflect that.
> > Tools
> > like ogr2ogr will need to do the geometry axis swapping in that case
> 
> Does this guarantee that it is impossible or at least pretty difficult to
> create for example crazy shapefiles with flipped axis and rotated geometries
> even if user tries to force that with AUTHORITY_COMPLIANT mode switch?

Hi Jukka,

<jokingly>
"""THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED"""
</jokingly>

More seriously, the goal is indeed to try to make things work as currently for 
ogr2ogr, gdalwarp workflows by making drivers to report properly how they map 
the data axis to the CRS axis.
For now, the only backward incompatible change I can think of is the use of 
the low-level OGRCoordinateTransformation() interface (and gdaltransform), 
that will be axis compliant w.r.t the authoritative CRS definition, but that's 
a wanted feature I think.
With the caveat that this is only words for now, and the work remains to be 
done and will certainly bring a few surprises.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Dec 19 05:11:11 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Dec 2018 14:11:11 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
Message-ID: <1700267.t1JjMhX49n@even-i700>

Hi,

Motion: GDAL/OGR 2.4.0 rc1 is promoted to be the official 2.4.0	 final release.

-------

My vote: +1

-------

I didn't have any feedback on this one, so I assume things go well.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Wed Dec 19 06:18:22 2018
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 19 Dec 2018 07:18:22 -0700 (MST)
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <1700267.t1JjMhX49n@even-i700>
References: <1700267.t1JjMhX49n@even-i700>
Message-ID: <1545229102592-0.post@n6.nabble.com>

+1

-Jukka Rahkonen-


Even Rouault-2 wrote
> Hi,
> 
> Motion: GDAL/OGR 2.4.0 rc1 is promoted to be the official 2.4.0	 final
> release.
> 
> -------
> 
> My vote: +1
> 
> -------
> 
> I didn't have any feedback on this one, so I assume things go well.
> 
> Even





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From roth.luke at gmail.com  Wed Dec 19 08:22:00 2018
From: roth.luke at gmail.com (Luke Roth)
Date: Wed, 19 Dec 2018 11:22:00 -0500
Subject: [gdal-dev] Default options for a format
Message-ID: <CAJ-aobdWmU5NRuTdzc3H8izS9s4+A60-aWj2+D+H-cMg27yi4Q@mail.gmail.com>

I know that a number of format-specific options can be set as environment
variables so they don't have to be specified on the command line
(TIFF_USE_OVR, GTIFF_IGNORE_READ_ERRORS).  Is there a way to set defaults
for other format-specific dataset creation options (for geotiff, TILED=YES,
COMPRESS=LZW, INTERLEAVE=BAND, etc.) this way?  I've set up batch scripts
that call the command line utilities that I use the most with my standard
set of options, but I was wondering if there was a more general way to
handle this that other people have figured out.
Thanks!
Luke
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181219/24e80ce9/attachment.html>

From even.rouault at spatialys.com  Wed Dec 19 08:25:18 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 19 Dec 2018 17:25:18 +0100
Subject: [gdal-dev] Default options for a format
In-Reply-To: <CAJ-aobdWmU5NRuTdzc3H8izS9s4+A60-aWj2+D+H-cMg27yi4Q@mail.gmail.com>
References: <CAJ-aobdWmU5NRuTdzc3H8izS9s4+A60-aWj2+D+H-cMg27yi4Q@mail.gmail.com>
Message-ID: <4706853.CMjxuJay6c@even-i700>

On mercredi 19 décembre 2018 11:22:00 CET Luke Roth wrote:
> I know that a number of format-specific options can be set as environment
> variables so they don't have to be specified on the command line
> (TIFF_USE_OVR, GTIFF_IGNORE_READ_ERRORS).  Is there a way to set defaults
> for other format-specific dataset creation options (for geotiff, TILED=YES,
> COMPRESS=LZW, INTERLEAVE=BAND, etc.) this way?  I've set up batch scripts
> that call the command line utilities that I use the most with my standard
> set of options, but I was wondering if there was a more general way to
> handle this that other people have figured out.
> Thanks!
> Luke

You may put any command line switch in a text file, and then use
--optfile your_file.txt to expand the content of your_file.txt

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From howard at hobu.co  Wed Dec 19 11:10:55 2018
From: howard at hobu.co (Howard Butler)
Date: Wed, 19 Dec 2018 13:10:55 -0600
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <1545229102592-0.post@n6.nabble.com>
References: <1700267.t1JjMhX49n@even-i700> <1545229102592-0.post@n6.nabble.com>
Message-ID: <04ae6aa7-8486-686f-71ac-bddf06181830@hobu.co>

+1

On 12/19/18 8:18 AM, jratike80 wrote:
> +1
>
> -Jukka Rahkonen-
>
>
> Even Rouault-2 wrote
>> Hi,
>>
>> Motion: GDAL/OGR 2.4.0 rc1 is promoted to be the official 2.4.0	 final
>> release.
>>
>> -------
>>
>> My vote: +1
>>
>> -------
>>
>> I didn't have any feedback on this one, so I assume things go well.
>>
>> Even
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181219/7105926c/attachment.sig>

From szekerest at gmail.com  Wed Dec 19 11:43:14 2018
From: szekerest at gmail.com (Tamas Szekeres)
Date: Wed, 19 Dec 2018 20:43:14 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <1700267.t1JjMhX49n@even-i700>
References: <1700267.t1JjMhX49n@even-i700>
Message-ID: <CACALY+R87XFTMQDUM0qWTr4Lb84kCr-hp-A9wi9ti3W2WKFDYw@mail.gmail.com>

+1

Tamas


Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2018. dec.
19., Sze, 14:11):

> Hi,
>
> Motion: GDAL/OGR 2.4.0 rc1 is promoted to be the official 2.4.0  final
> release.
>
> -------
>
> My vote: +1
>
> -------
>
> I didn't have any feedback on this one, so I assume things go well.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181219/ffa76419/attachment.html>

From dmorissette at mapgears.com  Wed Dec 19 13:19:39 2018
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Wed, 19 Dec 2018 16:19:39 -0500
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <1700267.t1JjMhX49n@even-i700>
References: <1700267.t1JjMhX49n@even-i700>
Message-ID: <928047f2-ca9f-6b0e-38d5-e2654acd25c0@mapgears.com>

+1

Daniel



On 2018-12-19 8:11 a.m., Even Rouault wrote:
> Hi,
> 
> Motion: GDAL/OGR 2.4.0 rc1 is promoted to be the official 2.4.0	 final release.
> 
> -------
> 
> My vote: +1
> 
> -------
> 
> I didn't have any feedback on this one, so I assume things go well.
> 
> Even
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From even.rouault at spatialys.com  Thu Dec 20 04:27:53 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 20 Dec 2018 13:27:53 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.3.3 rc2 for release
In-Reply-To: <2244336.xB3RpRy3uD@even-i700>
References: <2244336.xB3RpRy3uD@even-i700>
Message-ID: <4956370.eEOHJkj7Rk@even-i700>

On mardi 18 décembre 2018 12:35:15 CET Even Rouault wrote:
> Hi,
> 
> Motion: GDAL/OGR 2.3.3 rc2 is promoted to be the official 2.3.3 final
> release.
> 
> -------
> 
> My vote: +1
> 
> -------
> 

I declare this motion passed with +1 from PSC members: JukkaR, HowardB, 
DanielM, TamasS, FrankW and me.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Thu Dec 20 04:44:11 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 20 Dec 2018 13:44:11 +0100
Subject: [gdal-dev] GDAL/OGR 2.3.3 is released
Message-ID: <1615675.teRpQf0tze@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 2.3.3 bug fix version. This adds 43 bug fixes on top 
of 2.3.2. The C and C++ API and ABI are unchanged.

Consult the release notes for the list of issues addressed :
  https://trac.osgeo.org/gdal/wiki/Release/2.3.3-News

The sources are available at:

    http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3.tar.xz
    http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3.tar.gz
    http://download.osgeo.org/gdal/2.3.3/gdal233.zip
    http://download.osgeo.org/gdal/2.3.3/gdal-grass-2.3.3.tar.gz

Stay tuned: GDAL 2.4.0 shoud normally be released tomorrow.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Thu Dec 20 08:29:56 2018
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 20 Dec 2018 09:29:56 -0700
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <1700267.t1JjMhX49n@even-i700>
References: <1700267.t1JjMhX49n@even-i700>
Message-ID: <CADPhZXy-RYD+KeGN-8Xh-O-mOwGKhyDU7iAxUp0U=D-FAYiE2A@mail.gmail.com>

Hi Even,

2.4.0rc1 doesn't build on my Rasterio Travis-CI instance while 2.3.3 and
the master branch do just fine. I'm digging into the why not. Was the
configure script created differently for this release?

On Wed, Dec 19, 2018 at 6:11 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> Motion: GDAL/OGR 2.4.0 rc1 is promoted to be the official 2.4.0  final
> release.
>
> -------
>
> My vote: +1
>
> -------
>
> I didn't have any feedback on this one, so I assume things go well.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181220/1856b30b/attachment.html>

From even.rouault at spatialys.com  Thu Dec 20 09:25:11 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 20 Dec 2018 18:25:11 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <CADPhZXy-RYD+KeGN-8Xh-O-mOwGKhyDU7iAxUp0U=D-FAYiE2A@mail.gmail.com>
References: <1700267.t1JjMhX49n@even-i700>
 <CADPhZXy-RYD+KeGN-8Xh-O-mOwGKhyDU7iAxUp0U=D-FAYiE2A@mail.gmail.com>
Message-ID: <18416027.YAg5npELeS@even-i700>

On jeudi 20 décembre 2018 09:29:56 CET Sean Gillies wrote:
> Hi Even,
> 
> 2.4.0rc1 doesn't build on my Rasterio Travis-CI instance while 2.3.3 and
> the master branch do just fine. I'm digging into the why not. Was the
> configure script created differently for this release?

No, but it is not identical for 2.3.3 due to changes/additions in 
dependencies.
Can you share the details of what does not work exactly ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Thu Dec 20 09:44:34 2018
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 20 Dec 2018 10:44:34 -0700
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <18416027.YAg5npELeS@even-i700>
References: <1700267.t1JjMhX49n@even-i700>
 <CADPhZXy-RYD+KeGN-8Xh-O-mOwGKhyDU7iAxUp0U=D-FAYiE2A@mail.gmail.com>
 <18416027.YAg5npELeS@even-i700>
Message-ID: <CADPhZXzWxHaSRQzj+O05uJDu5JbMTuS9imaw-xHHc4xy4zuuKw@mail.gmail.com>

The Travis build log is incomplete, so it's hard to say exactly what the
problem is, but it seems that ./configure does not succeed:
https://travis-ci.org/mapbox/rasterio/jobs/470599640#L836.

Here are the configuration options:
https://github.com/mapbox/rasterio/blob/maint-1.0/scripts/travis_gdal_install.sh#L6
.

On Thu, Dec 20, 2018 at 10:25 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 20 décembre 2018 09:29:56 CET Sean Gillies wrote:
> > Hi Even,
> >
> > 2.4.0rc1 doesn't build on my Rasterio Travis-CI instance while 2.3.3 and
> > the master branch do just fine. I'm digging into the why not. Was the
> > configure script created differently for this release?
>
> No, but it is not identical for 2.3.3 due to changes/additions in
> dependencies.
> Can you share the details of what does not work exactly ?
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181220/85995ce3/attachment.html>

From even.rouault at spatialys.com  Thu Dec 20 10:15:35 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 20 Dec 2018 19:15:35 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <CADPhZXzWxHaSRQzj+O05uJDu5JbMTuS9imaw-xHHc4xy4zuuKw@mail.gmail.com>
References: <1700267.t1JjMhX49n@even-i700> <18416027.YAg5npELeS@even-i700>
 <CADPhZXzWxHaSRQzj+O05uJDu5JbMTuS9imaw-xHHc4xy4zuuKw@mail.gmail.com>
Message-ID: <1745906.uBhVe397Mr@even-i700>

On jeudi 20 décembre 2018 10:44:34 CET Sean Gillies wrote:
> The Travis build log is incomplete, so it's hard to say exactly what the
> problem is, but it seems that ./configure does not succeed:
> https://travis-ci.org/mapbox/rasterio/jobs/470599640#L836.

Indeed that doesn't help much. I tried a local build with your below options 
and that works fine.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Thu Dec 20 10:22:22 2018
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 20 Dec 2018 11:22:22 -0700
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <1745906.uBhVe397Mr@even-i700>
References: <1700267.t1JjMhX49n@even-i700> <18416027.YAg5npELeS@even-i700>
 <CADPhZXzWxHaSRQzj+O05uJDu5JbMTuS9imaw-xHHc4xy4zuuKw@mail.gmail.com>
 <1745906.uBhVe397Mr@even-i700>
Message-ID: <CADPhZXxbcanwCZRsq=BadUxihRa0YxWSoGOXekt3vGR183T-Qw@mail.gmail.com>

I'm 99% sure that this is a problem with my build and that it goes away
when 2.4.0rc1 becomes 2.4.0. Don't let me hold things up any longer.

On Thu, Dec 20, 2018 at 11:15 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 20 décembre 2018 10:44:34 CET Sean Gillies wrote:
> > The Travis build log is incomplete, so it's hard to say exactly what the
> > problem is, but it seems that ./configure does not succeed:
> > https://travis-ci.org/mapbox/rasterio/jobs/470599640#L836.
>
> Indeed that doesn't help much. I tried a local build with your below
> options
> and that works fine.
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>


-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181220/a1b93a53/attachment.html>

From mwtoews at gmail.com  Thu Dec 20 12:48:04 2018
From: mwtoews at gmail.com (Mike Taves)
Date: Fri, 21 Dec 2018 09:48:04 +1300
Subject: [gdal-dev] gdal/CURRENT lags
Message-ID: <CAM2FmMpVn83hSDpzK363k+afLOh+tnKmco7eO7xdY4r2LrjWNw@mail.gmail.com>

The symlink to https://download.osgeo.org/gdal/CURRENT/ hasn't been
updated for a few releases.

If there is a "HOWTO-RELEASE" document, this step should be added to
update the link.

From even.rouault at spatialys.com  Thu Dec 20 13:03:41 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 20 Dec 2018 22:03:41 +0100
Subject: [gdal-dev] gdal/CURRENT lags
In-Reply-To: <CAM2FmMpVn83hSDpzK363k+afLOh+tnKmco7eO7xdY4r2LrjWNw@mail.gmail.com>
References: <CAM2FmMpVn83hSDpzK363k+afLOh+tnKmco7eO7xdY4r2LrjWNw@mail.gmail.com>
Message-ID: <1987866.yj8dE6y2hh@even-i700>

On vendredi 21 décembre 2018 09:48:04 CET Mike Taves wrote:
> The symlink to https://download.osgeo.org/gdal/CURRENT/ hasn't been
> updated for a few releases.
> 

It points to 2.3.2 which, until a few hours ago, was the more recent official 
release. I skipped updating it today as in a few hours, CURRENT will be 2.4.0. 
So that was an attempt to do a micro-optimization, but you just ruined it ;-) 
(I'm joking)

> If there is a "HOWTO-RELEASE" document, this step should be added to
> update the link.

It is.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Dec 21 05:23:22 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 21 Dec 2018 14:23:22 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.0 rc1 for release
In-Reply-To: <1700267.t1JjMhX49n@even-i700>
References: <1700267.t1JjMhX49n@even-i700>
Message-ID: <6275955.0SXsCdCmQJ@even-i700>

On mercredi 19 décembre 2018 14:11:11 CET Even Rouault wrote:
> Hi,
> 
> Motion: GDAL/OGR 2.4.0 rc1 is promoted to be the official 2.4.0	 final
> release.
> 
> -------
> 
> My vote: +1
> 
> -------
> 

I declare this motion passed with +1 from PSC members: JukkaR, HowardB, 
DanielM, TamasS and me.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Dec 21 05:45:56 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 21 Dec 2018 14:45:56 +0100
Subject: [gdal-dev] GDAL 2.4.0 is released
Message-ID: <1706398.y4pQ4WZGur@even-i700>

Hi,

On behalf of the GDAL/OGR development team and community, I am pleased to
announce the release of GDAL/OGR 2.4.0.  GDAL/OGR is a C++ geospatial
data access library for raster and vector file formats, databases and
web services.  It includes bindings for several languages, and a variety
of command line tools.

   http://www.gdal.org/

The 2.4.0 release is a new feature release with the following highlights:

 * New GDAL drivers:
   - BYN: read/write support for Natural Resources Canada's Geoid binary format
   - EEDAI: read-only driver for Google Earth Engine Data API
   - IGNFHeightASCIIGrid: read-only driver to read IGN-France height correction ASCII grids
   - NGW: NextGIS Web read-only driver
   - NTv1: read-only driver for NTv1 datum shift grids
 * New OGR drivers:
   - EEDA: read-only driver for Google Earth Engine Data API
   - GeoJSONSeq: read/creation support of new-line or record-separator separated GeoJSON features (#378)
   - NGW: NextGIS Web read-write driver
 * Improved drivers:
   - BAG: add read support for variable-resolution grids, and write support for single-resolution grids
   - GTiff driver: add Lerc and WebP codecs
   - PostgisRaster: add support for out-db rasters
   - RMF
   - MSSQLSpatial
 * RFC 72: Make GDAL Python autotest suite use pytest framework
 * Add /vsihdfs/ virtual file system handler for Hadoop File System (via libhdfs)
 * Add /vsiwebhdfs/ read-write virtual file system for Web Hadoop File System REST API
 * gdal_contour rewriting: speed optimizations and capability to compute polygon isosurfaces.
 * Remove PHP and Ruby bindings.
 * Continued code linting in C++, Python scripts, Shell scripts and autotest

More complete information on the new features and fixes in the 2.4.0
release can be found at:

  http://trac.osgeo.org/gdal/wiki/Release/2.4.0-News

The release can be downloaded from:
  * http://download.osgeo.org/gdal/2.4.0/gdal240.zip - source as a zip
  * http://download.osgeo.org/gdal/2.4.0/gdal-2.4.0.tar.gz - source as .tar.gz
  * http://download.osgeo.org/gdal/2.4.0/gdal-2.4.0.tar.xz - source as .tar.xz
  * http://download.osgeo.org/gdal/2.4.0/gdal-grass-2.4.0.tar.gz - GDAL-GRASS plugin
  * http://download.osgeo.org/gdal/2.4.0/gdalautotest-2.4.0.tar.gz - test suite
  * http://download.osgeo.org/gdal/2.4.0/gdal240doc.zip - documentation / website

The migration guide can be found at  :
      https://github.com/OSGeo/gdal/blob/release/2.4/gdal/MIGRATION_GUIDE.TXT

Best regards and Season's greetings,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From rayg at daylongraphics.com  Sun Dec 23 12:04:23 2018
From: rayg at daylongraphics.com (Ray Gardener)
Date: Sun, 23 Dec 2018 12:04:23 -0800
Subject: [gdal-dev] GDAL 2.4.0 is released
In-Reply-To: <1706398.y4pQ4WZGur@even-i700>
References: <1706398.y4pQ4WZGur@even-i700>
Message-ID: <59529b16-28a3-9047-b424-6153bf2a1d9b@daylongraphics.com>

Yay


On 12/21/2018 5:45 AM, Even Rouault wrote:
> Hi,
>
> On behalf of the GDAL/OGR development team and community, I am pleased to
> announce the release of GDAL/OGR 2.4.0.


From umbertofilippo at tiscali.it  Wed Dec 26 08:56:48 2018
From: umbertofilippo at tiscali.it (umbertofilippo)
Date: Wed, 26 Dec 2018 09:56:48 -0700 (MST)
Subject: [gdal-dev] ogr2ogr and wfs driver with POST requests
Message-ID: <1545843408067-0.post@n6.nabble.com>

Is it possible to use the WFS driver of ogr2ogr with POST reuqests?

I am actually creating my Getfeature requests with OpenLayers using the
function  ol/format/WFS~WFS/writeGetFeature
<https://openlayers.org/en/latest/apidoc/module-ol_format_WFS-WFS.html#writeGetFeature> 
.

This returns the Node of my getFeature request, but I don't know if I can
use it along with ogr2ogr.

So far I've tested ogr2ogr successfully with GET requests but I would need
to use it with POST possibly.

In my code I usually to use the resulting Node from writeGetFeature to fetch
my WFS url with POST method and the result in the body parameter (with
JavaScript):

var featureRequest = new WFS().writeGetFeature({
    featureNS: 'http://www.qgis.org/gml',
    featureTypes: [typename],
    filter: filter,
});

// then post the request and add the received features to a layer
var response = await fetch(url, {
    method: 'POST',
    body: new XMLSerializer().serializeToString(featureRequest),
});



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Wed Dec 26 10:16:21 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 26 Dec 2018 19:16:21 +0100
Subject: [gdal-dev] ogr2ogr and wfs driver with POST requests
In-Reply-To: <1545843408067-0.post@n6.nabble.com>
References: <1545843408067-0.post@n6.nabble.com>
Message-ID: <2686811.JhOtkP9ViX@even-i700>

On mercredi 26 décembre 2018 09:56:48 CET umbertofilippo wrote:
> Is it possible to use the WFS driver of ogr2ogr with POST reuqests?

No, it uses GET verb for GetCapabilities, DescribeFeatureType and GetFeature.
It uses POST for the transactional part only.

But it is not difficult to translate your POST feature request into a GET one.
Or you can use your existing code to download the GetFeature response and use 
the resulting GML file as the input of ogr2ogr.

Even

> 
> I am actually creating my Getfeature requests with OpenLayers using the
> function  ol/format/WFS~WFS/writeGetFeature
> <https://openlayers.org/en/latest/apidoc/module-ol_format_WFS-WFS.html#write
> GetFeature> .
> 
> This returns the Node of my getFeature request, but I don't know if I can
> use it along with ogr2ogr.
> 
> So far I've tested ogr2ogr successfully with GET requests but I would need
> to use it with POST possibly.
> 
> In my code I usually to use the resulting Node from writeGetFeature to fetch
> my WFS url with POST method and the result in the body parameter (with
> JavaScript):
> 
> var featureRequest = new WFS().writeGetFeature({
>     featureNS: 'http://www.qgis.org/gml',
>     featureTypes: [typename],
>     filter: filter,
> });
> 
> // then post the request and add the received features to a layer
> var response = await fetch(url, {
>     method: 'POST',
>     body: new XMLSerializer().serializeToString(featureRequest),
> });
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From dagibbs22 at gmail.com  Thu Dec 27 13:12:16 2018
From: dagibbs22 at gmail.com (dagibbs22)
Date: Thu, 27 Dec 2018 14:12:16 -0700 (MST)
Subject: [gdal-dev] Exporting large geojsons to postgis using ogr2ogr
In-Reply-To: <CAHgSXQ=HdmEL_B1K0n6mB50DDC0Kb34Va40fM1oLKzdaxdtwfA@mail.gmail.com>
References: <CAHgSXQ=HdmEL_B1K0n6mB50DDC0Kb34Va40fM1oLKzdaxdtwfA@mail.gmail.com>
Message-ID: <1545945136776-0.post@n6.nabble.com>

Hi,
I'm trying to use gdal_rasterize on a 20 GB geojson but it's not working
(the geojson field I want to include in the raster is growth). I assume it's
because the geojson is too large. What can I do to rasterize the geojson
into tiles of 10x10 degrees?

ubuntu at ip-192-168-80-222:~$ gdal_rasterize -tr 0.00025 0.00025 -co
COMPRESS=LZW plantations.geojson test.tif -te -60 -30 -50 -20 -a growth 
ERROR 1: JSON parsing error: buffer size overflow (at offset 0)
ERROR 4: Failed to read GeoJSON data




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From dengo at gmx.net  Thu Dec 27 14:24:49 2018
From: dengo at gmx.net (Dennis Gocke)
Date: Thu, 27 Dec 2018 16:24:49 -0600
Subject: [gdal-dev] removing/updating stats and histogram when editing raster
Message-ID: <CALqbEi7saD+NcJrug=5=pdedOziYVBdfLuVkZf8zynW-dbkYfg@mail.gmail.com>

Hi,

when you have a raster where stats and histogram have already been computed
and later on you edit some pixels programmatically (GDAL C API), previously
computed stats/histogram are not automatically invalidated/removed. For
performance reasons it probably makes sense, that this is not done
automatically and must be explicitly handled, but I'm not sure how to
correctly handle removing or updating stats and histogram.

I would actually prefer just to remove the stats and histogram, but if
that's not possible I can also recompute them.

Removing:
If I'm not mistaken, stats can be removed by setting the
"STATISTICS_MINIMUM", ... Metadata Items to null, or would that only work
correctly for some raster formats?
Is there a better way to remove previously computed statistics?
How to remove the histogram?

Updating:
Stats can be recomputed by calling GDALComputeRasterStatistics which will
also update the corresponding metadata items.
For the histogram calling GDALGetDefaultHistogramEx with bForce=1 will not
recompute the histogram (it seems bForce is only relevant in cases where
the histogram has not been computed before).
What's the correct way to recompute the default histogram?

Kind regards,
Dennis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181227/8f7e8886/attachment.html>

From even.rouault at spatialys.com  Fri Dec 28 02:12:52 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Dec 2018 11:12:52 +0100
Subject: [gdal-dev] removing/updating stats and histogram when editing
	raster
In-Reply-To: <CALqbEi7saD+NcJrug=5=pdedOziYVBdfLuVkZf8zynW-dbkYfg@mail.gmail.com>
References: <CALqbEi7saD+NcJrug=5=pdedOziYVBdfLuVkZf8zynW-dbkYfg@mail.gmail.com>
Message-ID: <2256679.XJL3EU0DHB@even-i700>

Dennis,

> Removing:
> If I'm not mistaken, stats can be removed by setting the
> "STATISTICS_MINIMUM", ... Metadata Items to null, or would that only work
> correctly for some raster formats?
> Is there a better way to remove previously computed statistics?
> How to remove the histogram?

In most cases, stats and histographs will be in a .aux.xml sidecar file that 
you may just delete (or edit to remove those elements). If they are internal 
to the raster format, that's more difficult and you may need to translate it.

> 
> Updating:
> Stats can be recomputed by calling GDALComputeRasterStatistics which will
> also update the corresponding metadata items.
> For the histogram calling GDALGetDefaultHistogramEx with bForce=1 will not
> recompute the histogram (it seems bForce is only relevant in cases where
> the histogram has not been computed before).
> What's the correct way to recompute the default histogram?

You may use
GDALGetRasterHistogramEx() + GDALSetDefaultHistogramEx()

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From rykovd at gmail.com  Fri Dec 28 04:39:54 2018
From: rykovd at gmail.com (Denis Rykov)
Date: Fri, 28 Dec 2018 13:39:54 +0100
Subject: [gdal-dev] Error of reading data stored on NFS
Message-ID: <CAJbvKNqGgLf1cb0YmLC-FCBUgS-YvrPrNB0Nap0NtYHgm+Tszg@mail.gmail.com>

$ gdal_translate
/scratch/abel/UPM000_PILO00/DATA_SOURCES/raw_data/IMG_rebrotes_Guaviyu_191218.tif
output.tif
Input file size is 60613, 75538
0...10...20...30...40...50...60...70...80...90...ERROR 1:
_tiffSeekProc:Invalid argument
ERROR 1: TIFFFillTile:Seek error at row 45440, col 75392, tile 279542
ERROR 1: TIFFReadEncodedTile() failed.
ERROR 1:
/scratch/abel/UPM000_PILO00/DATA_SOURCES/raw_data/IMG_rebrotes_Guaviyu_191218.tif,
band 1: IReadBlock failed at X offset 356, Y offset 589
ERROR 1: GetBlockRef failed at X block offset 356, Y block offset 589

If copy this file to local directory and do the same command all works
without problem.

Does it mean that file is broken or it can be problem of misconfigured NFS?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181228/117d6371/attachment.html>

From even.rouault at spatialys.com  Fri Dec 28 05:14:58 2018
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 28 Dec 2018 14:14:58 +0100
Subject: [gdal-dev] SRS barn: 7th status report
Message-ID: <4181433.C00x0EdCgX@even-i700>

Hi

Please find my 7th status report at
https://erouault.blogspot.com/2018/12/srs-barn-raising-7th-report.html

Best regards,

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From simon.proud at physics.ox.ac.uk  Fri Dec 28 05:52:59 2018
From: simon.proud at physics.ox.ac.uk (Simon Proud)
Date: Fri, 28 Dec 2018 13:52:59 +0000
Subject: [gdal-dev] Gdalwarp producing odd results around 0 degree longitude
Message-ID: <72238e24-5216-9140-f401-9ba33078760d@physics.ox.ac.uk>

Hello,

I am warping ECMWF grib data (full globe, 0.25 degree resolution) to 
match the SEVIRI geostationary satellite projection. I use this command:

gdalwarp -overwrite -ot Float32 -t_srs "+proj=geos +a=6378169 
+b=6356583.8 +lon_0=0.0 +h=35785831" -te -5570248.832537 5570244.832537 
5567248.429179 -5567252.429179 -ts 3712 3712 -wo NUM_THREADS=6 -wo 
SOURCE_EXTRA=1000 -q -r cubicspline --config CENTER_LONG 180 
/data/ECMWF_T2_20181223T00_000.grib /data/cubicspline.tiff

The output projection looks good, and if I try this with the ECMWF 
land-sea mask then I can see that it is correct for most of the view.
However, along a vertical centred on zero degrees longitude I see this 
artefact: https://i.stack.imgur.com/tQn5F.png


Any ideas what is causing that, and how to resolve it? It artefact 
appears for all resampling methods except nearest neighbour.

Thanks,
Simon

-- 
Dr Simon R Proud
NERC Fellow in Aviation Meteorology,
Department of Atmospheric, Oceanic and Planetary Physics,
University of Oxford,
Clarendon Lab,
Parks Road,
OX1 3PU,
Oxford,
UK

Tel (office): +44 (0) 1865 282431
Tel (mobile): +44 (0) 7563 639685
Email: simon.proud at physics.ox.ac.uk
Twitter: @simon_sat


From dengo at gmx.net  Fri Dec 28 07:24:09 2018
From: dengo at gmx.net (Dennis Gocke)
Date: Fri, 28 Dec 2018 09:24:09 -0600
Subject: [gdal-dev] removing/updating stats and histogram when editing
	raster
In-Reply-To: <2256679.XJL3EU0DHB@even-i700>
References: <CALqbEi7saD+NcJrug=5=pdedOziYVBdfLuVkZf8zynW-dbkYfg@mail.gmail.com>
 <2256679.XJL3EU0DHB@even-i700>
Message-ID: <CALqbEi54jg=cGjbw1evNKyCTTSo7cc7BYguZ==U=i3YkYgdffw@mail.gmail.com>

Hi Even,

Thanks for the quick reply.

Regarding removing stats: I just noticed that the gdal_edit.py script also
just removes all metadata items starting with the 'STATISTICS_'. So that's
probably the way to go.

For removing the histogram there is no such option in gdal_edit.py

Your suggestion with GDALGetRasterHistogramEx() +
GDALSetDefaultHistogramEx() will not work for updating the histogram.
GDALGetRasterHistogramEx will not recompute the histogram, but instead will
fetch the existing histogram if the settings (min,max,bincount) match.
In cases the settings don't match (e.g. different max) it will compute a
new histogram and add it to the aux.xml, but the old invalid histogram will
still be there.
When GDALSetDefaultHistogramEx is called the invalid histogram will still
not be removed, but instead just the order of the histograms will be
changed.

So it seems separately (not using GDAL) removing/editing the aux.xml file
is currently the only option.
In my opinion that is a bit odd.
I think it would be good to have methods to remove statistics and
histograms.
Having those methods would also highlight that these methods need to be
explicitly called when the raster is edited and that they are not
automatically invalidated.

Another small question: Is there a GDAL config option, to make GDAL save
computed statistics to the aux.xml file instead of the raster file itself
when the raster is opened in EditMode?

Kind regards,
Dennis


Am Fr., 28. Dez. 2018 um 04:12 Uhr schrieb Even Rouault <
even.rouault at spatialys.com>:

> Dennis,
>
> > Removing:
> > If I'm not mistaken, stats can be removed by setting the
> > "STATISTICS_MINIMUM", ... Metadata Items to null, or would that only work
> > correctly for some raster formats?
> > Is there a better way to remove previously computed statistics?
> > How to remove the histogram?
>
> In most cases, stats and histographs will be in a .aux.xml sidecar file
> that
> you may just delete (or edit to remove those elements). If they are
> internal
> to the raster format, that's more difficult and you may need to translate
> it.
>
> >
> > Updating:
> > Stats can be recomputed by calling GDALComputeRasterStatistics which will
> > also update the corresponding metadata items.
> > For the histogram calling GDALGetDefaultHistogramEx with bForce=1 will
> not
> > recompute the histogram (it seems bForce is only relevant in cases where
> > the histogram has not been computed before).
> > What's the correct way to recompute the default histogram?
>
> You may use
> GDALGetRasterHistogramEx() + GDALSetDefaultHistogramEx()
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181228/a12c4dda/attachment-0001.html>

From steve.lime at state.mn.us  Fri Dec 28 09:21:04 2018
From: steve.lime at state.mn.us (Lime, Steve D (MNIT))
Date: Fri, 28 Dec 2018 17:21:04 +0000
Subject: [gdal-dev] 2019 OSGeo Community/Code Sprint in Minneapolis - May
	14-17
Message-ID: <DM5PR0901MB23103798EE3F4F809EACCD15DAB70@DM5PR0901MB2310.namprd09.prod.outlook.com>

Hi all: Just a quick note to let folks know that planning is underway to host a community/code sprint in Minneapolis in May of 2019 - specifically from May 14th to the 17th. The location will be the Wilson Research Collaboration Studio on the campus of the University of Minnesota. More information can be found at:



   https://wiki.osgeo.org/wiki/OSGeo_Community_Sprint_2019



As with previous sprints this represents a great opportunity to get distributed project teams together, to collaborate across projects and to have a lot of fun. The event is still five months out and what we need now more than anything is an idea of how many sprinters we might expect. There's a spot on the wiki page to add yourself and note the likelihood of attending.



These events are not possible without the generous support of sponsors, and a number of organizations have already stepped up. We really appreciate their support of free and open source software and OSGeo in particular. They are:



  Gold Sponsor -  GeoCue (https://geocue.com/)



  Silver Sponsors - Hobu (https://hobu.co/), EOX (https://eox.at/) and TYDAC (https://www.tydac.ch/)



  Bronze Sponsors - Coordinate Solutions (http://www.coordinatesolutions.com/) and SharedGeo (https://www.sharedgeo.org/)



Interested in sponsoring? You can find more information at https://wiki.osgeo.org/wiki/OSGeo_Community_Sprint_2019#Sponsoring.



See you in Minneapolis!



--Steve (steve.lime at state.mn.us<mailto:steve.lime at state.mn.us>)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20181228/4c9daafe/attachment.html>

From umbertofilippo at tiscali.it  Sat Dec 29 08:00:23 2018
From: umbertofilippo at tiscali.it (umbertofilippo)
Date: Sat, 29 Dec 2018 09:00:23 -0700 (MST)
Subject: [gdal-dev] ogr2ogr and wfs driver with POST requests
In-Reply-To: <2686811.JhOtkP9ViX@even-i700>
References: <1545843408067-0.post@n6.nabble.com> <2686811.JhOtkP9ViX@even-i700>
Message-ID: <1546099223907-0.post@n6.nabble.com>

Even Rouault-2 wrote
> On mercredi 26 décembre 2018 09:56:48 CET umbertofilippo wrote:
> But it is not difficult to translate your POST feature request into a GET
> one.

Yeah, indeed I did that and that was pretty easy.
Thank you for taking the time to answering me, really appreciate it!



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

