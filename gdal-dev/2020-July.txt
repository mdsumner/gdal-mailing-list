From jluis at ualg.pt  Wed Jul  1 01:25:21 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Wed, 1 Jul 2020 08:25:21 +0000
Subject: [gdal-dev] A crash with 3..1.1
Message-ID: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>

Hi Even,

My colleagues from Mac are getting crashes when using latest 3.1.1 GDAL from GMT.


the crash occurs for example when running a command such as (the @ is a recognized flag to GMT that downloads that particular file)

gmt grdimage -JM6.5i -R0/360/-45/45 -Bag @earth_day_01d > t.ps

You can see the stack trace at

https://github.com/GenericMappingTools/gmt/issues/3568

The crash occurs at line

https://github.com/GenericMappingTools/gmt/blob/master/src/gmt_gdalread.c#L339

which is accessed right after reading the file

https://github.com/GenericMappingTools/gmt/blob/master/src/gmt_gdalread.c#L34


A strange thing though is that it works fine for me on Windows with a GDAL build from master (2 days old).

Any idea on what might be causing this?

Thanks

Joaquim

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/31d972c1/attachment.html>

From even.rouault at spatialys.com  Wed Jul  1 02:21:56 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 11:21:56 +0200
Subject: [gdal-dev] A crash with 3..1.1
In-Reply-To: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
References: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
Message-ID: <4623339.krSGtqQMBS@even-i700>

Hi,

> Any idea on what might be causing this?

As it seems this involves building GDAL from source, and possibly from 
the same tree, perhaps a missing "make clean" before different build 
attempts

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/b5f48b91/attachment.html>

From jluis at ualg.pt  Wed Jul  1 02:27:33 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Wed, 1 Jul 2020 09:27:33 +0000
Subject: [gdal-dev] A crash with 3..1.1
In-Reply-To: <4623339.krSGtqQMBS@even-i700>
References: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
 <4623339.krSGtqQMBS@even-i700>
Message-ID: <DB6PR04MB330368F6A6CCF544C2B74F9AA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>

No, not build directly from source. I believe it's a GDAL supplied by Macports but Paul is at Hawaii and sleeping now, so can't confirm. And I forgot to mention in previous post. No problem when using GDAL 3.1.0 (same origin)

From: Even Rouault <even.rouault at spatialys.com>
Sent: Wednesday, July 1, 2020 10:22 AM
To: gdal-dev at lists.osgeo.org
Cc: Joaquim Manuel Freire Luís <jluis at ualg.pt>; Paul Wessel <pwessel at hawaii.edu>
Subject: Re: [gdal-dev] A crash with 3..1.1


Hi,



> Any idea on what might be causing this?



As it seems this involves building GDAL from source, and possibly from the same tree, perhaps a missing "make clean" before different build attempts



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/5c1bf885/attachment.html>

From jluis at ualg.pt  Wed Jul  1 02:33:18 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Wed, 1 Jul 2020 09:33:18 +0000
Subject: [gdal-dev] A crash with 3..1.1
In-Reply-To: <DB6PR04MB330368F6A6CCF544C2B74F9AA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
References: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
 <4623339.krSGtqQMBS@even-i700>
 <DB6PR04MB330368F6A6CCF544C2B74F9AA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
Message-ID: <DB6PR04MB3303A87BC19F36C8B298F96BA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>

And sorry again for not reporting everything in same post. It happens also in the CI tests

https://github.com/GenericMappingTools/gmt/issues/3566


and just got one more info

GDAL 3.1.0 fine, 3.1.1 crash
Either macports or homebrew
Seems to involve Geotiff.


From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Joaquim Manuel Freire Luís
Sent: Wednesday, July 1, 2020 10:28 AM
To: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Cc: Paul Wessel <pwessel at hawaii.edu>
Subject: Re: [gdal-dev] A crash with 3..1.1

No, not build directly from source. I believe it's a GDAL supplied by Macports but Paul is at Hawaii and sleeping now, so can't confirm. And I forgot to mention in previous post. No problem when using GDAL 3.1.0 (same origin)

From: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Sent: Wednesday, July 1, 2020 10:22 AM
To: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Cc: Joaquim Manuel Freire Luís <jluis at ualg.pt<mailto:jluis at ualg.pt>>; Paul Wessel <pwessel at hawaii.edu<mailto:pwessel at hawaii.edu>>
Subject: Re: [gdal-dev] A crash with 3..1.1


Hi,



> Any idea on what might be causing this?



As it seems this involves building GDAL from source, and possibly from the same tree, perhaps a missing "make clean" before different build attempts



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/80a654b1/attachment-0001.html>

From even.rouault at spatialys.com  Wed Jul  1 02:34:33 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 11:34:33 +0200
Subject: [gdal-dev] A crash with 3..1.1
In-Reply-To: <DB6PR04MB330368F6A6CCF544C2B74F9AA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
References: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
 <4623339.krSGtqQMBS@even-i700>
 <DB6PR04MB330368F6A6CCF544C2B74F9AA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
Message-ID: <2682535.sFunq02jN2@even-i700>

On mercredi 1 juillet 2020 09:27:33 CEST Joaquim Manuel Freire Luís wrote:
> No, not build directly from source. I believe it's a GDAL supplied by
> Macports but Paul is at Hawaii and sleeping now, so can't confirm. And I
> forgot to mention in previous post. No problem when using GDAL 3.1.0 
(same
> origin)

You have to determine if it comes from GDAL itself or its integration in GMT.
For example, does that happen with gdalinfo on a geotiff file with the 3.1.1 
build ? FYI, Travis-CI builds of GDAL 3.1.1 with its autotest suite on OSX are 
fine.
Try using Valgrind

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/8d29ca00/attachment.html>

From franco.amato at gmail.com  Wed Jul  1 08:30:54 2020
From: franco.amato at gmail.com (Franco Amato)
Date: Wed, 1 Jul 2020 10:30:54 -0500
Subject: [gdal-dev] Unresolved external symbols
Message-ID: <CA+CRCabAvK+A_LrPf_nQBKMAxAUgRhn93zmiJK2r82iqR68ypA@mail.gmail.com>

Good morning,
I am trying to build gdal from source but I'm stuck on some errors that I
can't solve.
Below the errors:

1>   Creating library gdal_i.lib and object gdal_i.exp
1>eedacommon.obj : error LNK2019: unresolved external symbol "bool __cdecl
CPLIsMachinePotentiallyGCEInstance(void)"
(?CPLIsMachinePotentiallyGCEInstance@@YA_NXZ) referenced in function
"protected: char * * __cdecl GDALEEDABaseDataset::GetBaseHTTPOptions(void)"
(?GetBaseHTTPOptions at GDALEEDABaseDataset@@IEAAPEAPEADXZ)
1>gdalhttp.obj : error LNK2019: unresolved external symbol "void * __cdecl
CPLHTTPSetOptions(void *,char const *,char const * const *)"
(?CPLHTTPSetOptions@@YAPEAXPEAXPEBDPEBQEBD at Z) referenced in function "void
__cdecl WMSHTTPInitializeRequest(struct WMSHTTPRequest *)"
(?WMSHTTPInitializeRequest@@YAXPEAUWMSHTTPRequest@@@Z)
1>gdalhttp.obj : error LNK2019: unresolved external symbol "void * __cdecl
CPLHTTPIgnoreSigPipe(void)" (?CPLHTTPIgnoreSigPipe@@YAPEAXXZ) referenced in
function "enum CPLErr __cdecl WMSHTTPFetchMulti(struct WMSHTTPRequest
*,int)" (?WMSHTTPFetchMulti@@YA?AW4CPLErr@@PEAUWMSHTTPRequest@@H at Z)
1>gdalhttp.obj : error LNK2019: unresolved external symbol "void __cdecl
CPLHTTPRestoreSigPipeHandler(void *)" (?CPLHTTPRestoreSigPipeHandler@
@YAXPEAX at Z) referenced in function "enum CPLErr __cdecl
WMSHTTPFetchMulti(struct WMSHTTPRequest *,int)" (?WMSHTTPFetchMulti@@YA?A

Can I have help? Are there any libraries that I forgot to link?
Thank you in advance.

*Environment:*
Windows 10 PRO
Visual Studio 2019
GDAL v3.1.1

Franco

-- 
*Franco Amato*
Il caffè è un piacere, se non è buono che piacere è...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/1aa043aa/attachment.html>

From even.rouault at spatialys.com  Wed Jul  1 08:42:23 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 17:42:23 +0200
Subject: [gdal-dev] Plan for a next Spatialite release ? Should the
	community fork it ?
Message-ID: <1610692.am3vAUgIcu@even-i700>

Hi Sandro,

I hope this emails finds you, and you are doing well. We had a few exchanges in private over 
past months about a next Spatialite release, but I'm still unclear on when a next release will 
materialize, hence this public call, with the Spatialite list, and GDAL and QGIS communities 
CC'ed. The intend of this email is to be constructive hopefully.

Downstream projects of Spatialite will have soon a critical need for a new release of 
Spatialite, as there is no released version of Spatialite that uses the PROJ >= 6 API. Spatialite 
4.3.0a, the latest stable release, dating from almost 5 years now, and uses the deprecated 
proj_api.h.
proj_api.h should normally have been removed in March this year, for PROJ 7.0, as announced 
2.5 years ago, but this was defered, mostly because Spatialite wasn't ready yet. PROJ 8, 
planned for March 2021, will certainly remove proj_api.h, so we will have an issue if no 
Spatialite release has been done in the meantime.

If no new Spatialite release is to happen soon, I can see 2 potential solutions:

a) drop Spatialite support from GDAL and QGIS. That would be a fair amount of work, and a 
functional regression for both projects. Besides support for the Spatialite format itself, both 
GDAL and QGIS benefit from its SQL spatial function to do analysis on GeoPackage files for 
example. There are also hidden dependencies to Spatialite, like the QGIS WFS client using 
Spatialite internally to do local caching of downloaded features.

b) or do a community fork of the current state of the Spatialite fossil repository, which 
implements the needed PROJ >= 6 support. This is certainly not an ideal solution, as that 
could create confusion on users on where the "official" Spatialite is. I would not call this a 
"hostile" fork, but more a "pragmatic" fork... If I were to do it, this would probably be a github 
repo, to make contributions from the community easier. But beyond the question of forking 
or not, I do think using github (or gitlab) for the official project would make it easier to foster 
collaboration.

Can you tell us about your plan and a realistic schedule for a Spatialite (would that be 5.0 or 
6.0 ?) release ? Can the community help somehow ? Is there anything preventing from 
releasing current fossil repo now ? If that may related to new features not yet implemented 
you've in mind and that you would like to land in a release, can't they wait after a release has 
been done with what exists already in Fossil ?

I'd say that if things don't seem to be moving, I'd probably go myself to implement solution b) 
this fall, hopefully with support of others devs reading this email as I'm already more than 
busy on other OSS projects.

Cheers,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/4942d9d6/attachment.html>

From even.rouault at spatialys.com  Wed Jul  1 09:34:50 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 01 Jul 2020 18:34:50 +0200
Subject: [gdal-dev] GDAL 3.1.1 is released
In-Reply-To: <1647824.1iBp1oP7ys@even-i700>
References: <1647824.1iBp1oP7ys@even-i700>
Message-ID: <2049949.TYFczOLTx6@even-i700>

On lundi 29 juin 2020 14:27:09 CEST Even Rouault wrote:
> Hi,
> 
> On behalf of the GDAL/OGR development team, I am pleased to announce the
> release of the GDAL/OGR 3.1.1 bug fix version. This adds 69 bug fixes on top
> of 3.1.0.
> 
> Consult the release notes for the list of issues addressed :
>   https://github.com/OSGeo/gdal/blob/v3.1.1/gdal/NEWS
> 
> The sources are available at:
> 
>     https://download.osgeo.org/gdal/3.1.1/gdal-3.1.1.tar.xz
>     https://download.osgeo.org/gdal/3.1.1/gdal-3.1.1.tar.gz
>     https://download.osgeo.org/gdal/3.1.1/gdal311.zip
>     https://download.osgeo.org/gdal/3.1.1/gdal-grass-3.1.1.tar.gz
> 
> Best regards,

Tagged versions of Docker images of GDAL 3.1.1 and PROJ 7.1.0 are at:
https://hub.docker.com/r/osgeo/gdal/tags

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200701/955abc82/attachment-0001.html>

From woklist at kyngchaos.com  Thu Jul  2 11:20:17 2020
From: woklist at kyngchaos.com (William Kyngesburye)
Date: Thu, 2 Jul 2020 13:20:17 -0500
Subject: [gdal-dev] Problems with latest pdfium
In-Reply-To: <518CDAE8-9E46-464A-B508-91934247BB7A@kyngchaos.com>
References: <518CDAE8-9E46-464A-B508-91934247BB7A@kyngchaos.com>
Message-ID: <CA3EC078-FAE7-495C-A6D9-C1CC8582D71E@kyngchaos.com>

Back to my question.  Does even 3.1 require the old pdfium fork?  This should be clarified in the GDAL PDF format page.

Is this fork keeping up with any security issues? (my guess is no since last commit is 5 years old.)

-----
William Kyngesburye
<kyngchaos at kyngchaos.com>
<http://www.kyngchaos.com>

Don't Panic

> On Jun 29, 2020, at 9:26 AM, William Kyngesburye <woklist at kyngchaos.com> wrote:
> 
> ﻿I'm compiling GDAL 3.1, the note says that only needs the patches.  It doesn't specify the source to use.
> 
> -----
> William Kyngesburye
> <kyngchaos at kyngchaos.com>
> <http://www.kyngchaos.com>
> 
> Don't Panic
> 
>> On Jun 29, 2020, at 4:34 AM, Even Rouault <even.rouault at spatialys.com> wrote:
>> 
>> ﻿
>> William,
>> 
>>> I'm getting multiple errors trying to compile PDF support with pdfium.
>> 
>> See https://gdal.org/drivers/raster/pdf.html#pdfium
>> 
>> You need to build pdfium from the indicated forks.
>> 
>> Even
>> 
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com


From even.rouault at spatialys.com  Thu Jul  2 11:52:51 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 02 Jul 2020 20:52:51 +0200
Subject: [gdal-dev] Problems with latest pdfium
In-Reply-To: <CA3EC078-FAE7-495C-A6D9-C1CC8582D71E@kyngchaos.com>
References: <518CDAE8-9E46-464A-B508-91934247BB7A@kyngchaos.com>
 <CA3EC078-FAE7-495C-A6D9-C1CC8582D71E@kyngchaos.com>
Message-ID: <3063178.hYYG2B0tac@even-i700>

William,

> Back to my question.  Does even 3.1 require the old pdfium fork?  This
> should be clarified in the GDAL PDF format page.

Hum, I thought
https://gdal.org/drivers/raster/pdf.html#pdfium was pretty clear about that

GDAL >= 3.1 ==> use https://github.com/rouault/pdfium_build_gdal_3_1
GDAL < 3.1 ==> use https://github.com/rouault/pdfium/tree/build

If you can think of how to make that clearer, a doc PR is welcome.

> Is this fork keeping up with any security issues? (my guess is no since last
> commit is 5 years old.)

No, none of both repository keep up with pdfium upstream. Those are just one-time efforts.

You could probably try updating 
https://github.com/rouault/pdfium_build_gdal_3_1/blob/master/build_linux.sh#L9 to a later 
revision of upstream pdfium, but you'd may have to adapt
https://github.com/rouault/pdfium_build_gdal_3_1/blob/master/code.patch

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200702/1099af0f/attachment.html>

From woklist at kyngchaos.com  Thu Jul  2 18:20:24 2020
From: woklist at kyngchaos.com (William Kyngesburye)
Date: Thu, 2 Jul 2020 20:20:24 -0500
Subject: [gdal-dev] Problems with latest pdfium
In-Reply-To: <3063178.hYYG2B0tac@even-i700>
References: <3063178.hYYG2B0tac@even-i700>
Message-ID: <2DE021F8-DDE7-4856-945D-92AA857F4B9B@kyngchaos.com>


> On Jul 2, 2020, at 1:52 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> ﻿
> William,
> 
>> Back to my question. Does even 3.1 require the old pdfium fork? This
>> should be clarified in the GDAL PDF format page.
> 
> Hum, I thought
> https://gdal.org/drivers/raster/pdf.html#pdfium was pretty clear about that
> 
> GDAL >= 3.1 ==> use https://github.com/rouault/pdfium_build_gdal_3_1
> GDAL < 3.1 ==> use https://github.com/rouault/pdfium/tree/build
> 
> If you can think of how to make that clearer, a doc PR is welcome.
> 

Looking closer at the linux script (I didn't think of using the linux script for a Mac build, sorry, didn't mention Mac, I just applied the patches to the latest source and compiled), I see a google branch mentioned there.  So I guess it's there, but still not clear, it's expecting one to run the scripts as is.

-----
William Kyngesburye
<kyngchaos at kyngchaos.com>
<http://www.kyngchaos.com>

Don't Panic


From nmthomas28 at gmail.com  Fri Jul  3 11:13:21 2020
From: nmthomas28 at gmail.com (Nathan Thomas)
Date: Fri, 3 Jul 2020 14:13:21 -0400
Subject: [gdal-dev] Ogr2ogr does not apply transform to CSV
Message-ID: <CF2FF6F3-D0BC-48BC-AD66-87AB4E5C217C@gmail.com>

I have a CSV with X, Y coordinates and height (Z). These heights are ellipsoid heights and I want them corrected to orthometric height, preferably using EGM2008. I try the following with ogr2ogr, 

ogr2ogr -f CSV photon_2018-10-23_t387_1593614567696_EGM2008.csv photon_2018-10-23_t387_1593614567696_EGM2008.vrt -s_srs EPSG:4979 -t_srs EPSG:4326+3855

passing it a vrt file:

<OGRVRTDataSource>
    <OGRVRTLayer name="photon_2018-10-23_t387_1593614567696">
        <SrcDataSource>photon_2018-10-23_t387_1593614567696.csv</SrcDataSource>
        <GeometryType>wkbPoint</GeometryType>
        <GeometryField encoding="PointFromColumns" x="X" y="Y" z="Z"/>
    </OGRVRTLayer>
</OGRVRTDataSource>

However the output file, 'photon_2018-10-23_t387_1593614567696_EGM2008.csv’  is the same as the input CSV and the vertical values are not corrected. If I loop over each set of coordinates and try gdaltransform, I get the correct result although this is not an efficient process:

    cmd = 'echo ' + '"' + str(X[i]) + ' ' + str(Y[i]) + ' ' + str(Z[i]) + '"' + ' | gdaltransform -s_srs "+proj=longlat +datum=WGS84 +no_def" -t_srs "+proj=longlat +datum=WGS84 +no_defs +geoidgrids=egm08_25.gtx"'

Is there a reason why ogr2ogr is not converting the data?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200703/34f95f99/attachment.html>

From even.rouault at spatialys.com  Sat Jul  4 09:30:25 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 04 Jul 2020 18:30:25 +0200
Subject: [gdal-dev] GDAL 3.1.2 soon to fix issue with GeoTIFF driver / PROJ
	[was Re: A crash with 3..1.1]
In-Reply-To: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
References: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
Message-ID: <796944335.kGDoSNy5BC@even-i700>

Hi,

I strongly believe that this issue was also reproduced with PostgisRaster in
https://github.com/OSGeo/gdal/issues/2744. The key to reproduce it is a call to 
OSRCleanup() before using the GeoTIFF driver.

I've now a fix for #2744 queued in https://github.com/OSGeo/gdal/pull/2746, and I believe it 
should fix the GMT issue (I would appreciate confirmation of that)

Due to the issue affecting several downstream programs, I intend to release a 3.1.2 release 
next tuesday, unless there are other critical issues found in between that need to be 
adressed

Even


On mercredi 1 juillet 2020 08:25:21 CEST Joaquim Manuel Freire Luís wrote:
> Hi Even,
> 
> My colleagues from Mac are getting crashes when using latest 3.1.1 GDAL from
> GMT.
> 
> 
> the crash occurs for example when running a command such as (the @ is a
> recognized flag to GMT that downloads that particular file)
> 
> gmt grdimage -JM6.5i -R0/360/-45/45 -Bag @earth_day_01d > t.ps
> 
> You can see the stack trace at
> 
> https://github.com/GenericMappingTools/gmt/issues/3568
> 
> The crash occurs at line
> 
> https://github.com/GenericMappingTools/gmt/blob/master/src/gmt_gdalread.c#L3
> 39
> 
> which is accessed right after reading the file
> 
> https://github.com/GenericMappingTools/gmt/blob/master/src/gmt_gdalread.c#L3
> 4
> 
> 
> A strange thing though is that it works fine for me on Windows with a GDAL
> build from master (2 days old).
> 
> Any idea on what might be causing this?
> 
> Thanks
> 
> Joaquim
	

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200704/eb7e1ac0/attachment.html>

From jluis at ualg.pt  Sat Jul  4 19:05:15 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Sun, 5 Jul 2020 02:05:15 +0000
Subject: [gdal-dev] GDAL 3.1.2 soon to fix issue with GeoTIFF driver /
 PROJ [was Re: A crash with 3..1.1]
In-Reply-To: <796944335.kGDoSNy5BC@even-i700>
References: <DB6PR04MB33038D5460ACBC7134C5A3EDA66C0@DB6PR04MB3303.eurprd04.prod.outlook.com>
 <796944335.kGDoSNy5BC@even-i700>
Message-ID: <DB6PR04MB33037B7065A24A445CDB05D3A6680@DB6PR04MB3303.eurprd04.prod.outlook.com>

Thanks Even,

It took quite a bit of work to trick MacOS and Cmake to use a custom GDAL build in the GMT build but now things seem to run smooth again.

Joaquim

From: Even Rouault <even.rouault at spatialys.com>
Sent: Saturday, July 4, 2020 5:30 PM
To: gdal-dev at lists.osgeo.org
Cc: Joaquim Manuel Freire Luís <jluis at ualg.pt>; Paul Wessel <pwessel at hawaii.edu>
Subject: GDAL 3.1.2 soon to fix issue with GeoTIFF driver / PROJ [was Re: [gdal-dev] A crash with 3..1.1]


Hi,



I strongly believe that this issue was also reproduced with PostgisRaster in

https://github.com/OSGeo/gdal/issues/2744. The key to reproduce it is a call to OSRCleanup() before using the GeoTIFF driver.



I've now a fix for #2744 queued in https://github.com/OSGeo/gdal/pull/2746, and I believe it should fix the GMT issue (I would appreciate confirmation of that)



Due to the issue affecting several downstream programs, I intend to release a 3.1.2 release next tuesday, unless there are other critical issues found in between that need to be adressed



Even





On mercredi 1 juillet 2020 08:25:21 CEST Joaquim Manuel Freire Luís wrote:

> Hi Even,

>

> My colleagues from Mac are getting crashes when using latest 3.1.1 GDAL from

> GMT.

>

>

> the crash occurs for example when running a command such as (the @ is a

> recognized flag to GMT that downloads that particular file)

>

> gmt grdimage -JM6.5i -R0/360/-45/45 -Bag @earth_day_01d > t.ps

>

> You can see the stack trace at

>

> https://github.com/GenericMappingTools/gmt/issues/3568

>

> The crash occurs at line

>

> https://github.com/GenericMappingTools/gmt/blob/master/src/gmt_gdalread.c#L3

> 39

>

> which is accessed right after reading the file

>

> https://github.com/GenericMappingTools/gmt/blob/master/src/gmt_gdalread.c#L3

> 4

>

>

> A strange thing though is that it works fine for me on Windows with a GDAL

> build from master (2 days old).

>

> Any idea on what might be causing this?

>

> Thanks

>

> Joaquim



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200705/b3321ba4/attachment.html>

From even.rouault at spatialys.com  Tue Jul  7 05:42:09 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jul 2020 14:42:09 +0200
Subject: [gdal-dev] GDAL 3.1.2 is released
Message-ID: <2909434.N2dtGQXMYC@even-i700>

Hi,

This unplanned bugfix release is mostly to fix a regression of GDAL 3.1.1 that was triggered 
by programs such as GMT or PostgisRaster when reading for example GeoTIFF files. Full 
releases notes below.

The sources are available at:
  https://download.osgeo.org/gdal/3.1.2/gdal-3.1.2.tar.xz
  https://download.osgeo.org/gdal/3.1.2/gdal-3.1.2.tar.gz
  https://download.osgeo.org/gdal/3.1.2/gdal312.zip
  https://download.osgeo.org/gdal/3.1.2/gdal-grass-3.1.2.tar.gz

Best regards,

Even

= GDAL/OGR 3.1.2 Release Notes =

The 3.1.2 release is a bug fix release.

== Build ==

Windows:
 * nmake.opt: add hint about adding ole32.lib to PROJ_LIBRARY for PROJ 7.1 when static 
linking (#2743)
 * nmake.opt: fix ECW hints (#2748)

== GDAL core ==

* DumpJPK2CodeStream(): fix reported offset of EOC marker when PSOT = 0 (#2724)
* Overview generation: fix progress percentage when using USE_RRD=YES (#2722)

== GDAL utilities ==

* gdal2tiles: fix issue in nativezoom computation with --profile=raster on a raster whose size 
is below the tile size
* gdal2tiles: fix --xyz with -p raster, fix KML generation with --xyz (fixes #2463) and update 
OpenLayers export to OpenLayers 6.3.1 (#2732)
* validate_gpkg.py: add expected column type for rtree with SQLite 3.31.1

== GDAL drivers ==

ISIS3 driver:
 * make sure that in-line label size is at least 65536 bytes (fixes #2741)

PAux driver:
 * avoid ingesting large binary unrelated files (found when investigating #2722)

== OGRSpatialReference ==

* Fix crashing bug with PROJ context and OSRCleanup(), as triggered by PostGIS raster and 
GMT (#2744)

== OGR drivers ==

CouchDB driver:
 * ogrcouchdblayer.cpp: fix compiler warning

DXF driver:
 * ogrdxf_leader.cpp: suppress false positive warning

FileGDB and OpenFileGDB drivers:
 * qualify DateTime values with UTC timezone when <IsTimeInUTC>true</IsTimeInUTC> is 
present in layer metadata (#2719)

GeoJSON driver:
 * fix opening of file starting with {"coordinates" (#2720)
 * ogrgeojsonreader.cpp: fix compiler warning

GML driver:
 * when encountering XML issue, defer emission of error message until we return a NULL 
feature, so as to avoid to confuse ogr2ogr (#2730)

== SWIG Bindings ==

Python bindings:
 * gdal.Info(): fix handling of -json in options (#2749)


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200707/ebb39cea/attachment.html>

From lee.w.eddington at gmail.com  Tue Jul  7 11:37:43 2020
From: lee.w.eddington at gmail.com (Lee Eddington)
Date: Tue, 7 Jul 2020 12:37:43 -0600
Subject: [gdal-dev] installing and using GDAL/OGR on AWS EC2 with python
Message-ID: <F401E9EB-994E-40F8-BE4C-BB3EF4093CFE@gmail.com>

I’m trying to use the osgeo python module on an AWS EC2 instance (t3a.nano running Amazon Linux 2).  From what I can gather I need to install the GDAL libraries, but am having a difficult time.  When I try:

	python -m pip install GDAL

I get:

    ERROR: Command errored out with exit status 1:
     command: /usr/bin/python -c 'import sys, setuptools, tokenize; sys.argv[0] = '"'"'/tmp/pip-install-J58vPK/GDAL/setup.py'"'"'; __file__='"'"'/tmp/pip-install-J58vPK/GDAL/setup.py'"'"';f=getattr(tokenize, '"'"'open'"'"', open)(__file__);code=f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' egg_info --egg-base /tmp/pip-pip-egg-info-t20qWh
         cwd: /tmp/pip-install-J58vPK/GDAL/
    Complete output (50 lines):
    /usr/lib64/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'long_description_content_type'
      warnings.warn(msg)
    running egg_info
    creating /tmp/pip-pip-egg-info-t20qWh/GDAL.egg-info
    writing requirements to /tmp/pip-pip-egg-info-t20qWh/GDAL.egg-info/requires.txt
    writing /tmp/pip-pip-egg-info-t20qWh/GDAL.egg-info/PKG-INFO
    writing top-level names to /tmp/pip-pip-egg-info-t20qWh/GDAL.egg-info/top_level.txt
    writing dependency_links to /tmp/pip-pip-egg-info-t20qWh/GDAL.egg-info/dependency_links.txt
    writing manifest file '/tmp/pip-pip-egg-info-t20qWh/GDAL.egg-info/SOURCES.txt'
    Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/tmp/pip-install-J58vPK/GDAL/setup.py", line 478, in <module>
        setup(**setup_kwargs)
      File "/usr/lib/python2.7/site-packages/setuptools/__init__.py", line 129, in setup
        return distutils.core.setup(**attrs)
      File "/usr/lib64/python2.7/distutils/core.py", line 151, in setup
        dist.run_commands()
      File "/usr/lib64/python2.7/distutils/dist.py", line 953, in run_commands
        self.run_command(cmd)
      File "/usr/lib64/python2.7/distutils/dist.py", line 972, in run_command
        cmd_obj.run()
      File "/usr/lib/python2.7/site-packages/setuptools/command/egg_info.py", line 278, in run
        self.find_sources()
      File "/usr/lib/python2.7/site-packages/setuptools/command/egg_info.py", line 293, in find_sources
        mm.run()
      File "/usr/lib/python2.7/site-packages/setuptools/command/egg_info.py", line 524, in run
        self.add_defaults()
      File "/usr/lib/python2.7/site-packages/setuptools/command/egg_info.py", line 560, in add_defaults
        sdist.add_defaults(self)
      File "/usr/lib/python2.7/site-packages/setuptools/command/py36compat.py", line 36, in add_defaults
        self._add_defaults_ext()
      File "/usr/lib/python2.7/site-packages/setuptools/command/py36compat.py", line 119, in _add_defaults_ext
        build_ext = self.get_finalized_command('build_ext')
      File "/usr/lib64/python2.7/distutils/cmd.py", line 312, in get_finalized_command
        cmd_obj.ensure_finalized()
      File "/usr/lib64/python2.7/distutils/cmd.py", line 109, in ensure_finalized
        self.finalize_options()
      File "/tmp/pip-install-J58vPK/GDAL/setup.py", line 320, in finalize_options
        self.gdaldir = self.get_gdal_config('prefix')
      File "/tmp/pip-install-J58vPK/GDAL/setup.py", line 263, in get_gdal_config
        raise gdal_config_error(traceback_string + '\n' + msg)
    __main__.gdal_config_error: Traceback (most recent call last):
      File "/tmp/pip-install-J58vPK/GDAL/setup.py", line 257, in get_gdal_config
        return fetch_config(option)
      File "/tmp/pip-install-J58vPK/GDAL/setup.py", line 160, in fetch_config
        raise gdal_config_error, e""")
      File "<string>", line 4, in <module>
    gdal_config_error: [Errno 2] No such file or directory
    
    Could not find gdal-config. Make sure you have installed the GDAL native library and development headers.
    ----------------------------------------
ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.


So I’ve tried installing the GDAL libraries according to instructions on:

	https://trac.osgeo.org/gdal/wiki/BuildingOnUnix <https://trac.osgeo.org/gdal/wiki/BuildingOnUnix>

% cd gdal
% ./configure [options]
% make
% su
Password: ********
# make install
# exit

When I run the ‘make’ command I get the following errors:

libtool: compile:  gcc -I/tmp/gdal-2.0.0/port -I/tmp/gdal-2.0.0/gcore -I/tmp/gdal-2.0.0/alg -I/tmp/gdal-2.0.0/ogr -I/tmp/gdal-2.0.0/ogr/ogrsf_frmts -g -O2 -Wall -Wdeclaration-after-statement -I/tmp/gdal-2.0.0/frmts/vrt -DOGR_ENABLED -I/tmp/gdal-2.0.0/port -DGDAL_COMPILATION -I/tmp/gdal-2.0.0/ogr/ogrsf_frmts/geojson/libjson -I/tmp/gdal-2.0.0/ogr/ogrsf_frmts/geojson -c gdalserver.c  -fPIC -DPIC -o .libs/gdalserver.o
gdalserver.c: In function 'CreateSocketAndBindAndListen':
gdalserver.c:124:21: error: storage size of 'sHints' isn't known
     struct addrinfo sHints;
                     ^~~~~~
gdalserver.c:126:31: error: invalid application of 'sizeof' to incomplete type 'struct addrinfo'
     memset(&sHints, 0, sizeof(struct addrinfo));
                               ^~~~~~
gdalserver.c:129:23: error: 'AI_PASSIVE' undeclared (first use in this function); did you mean 'AF_WANPIPE'?
     sHints.ai_flags = AI_PASSIVE;
                       ^~~~~~~~~~
                       AF_WANPIPE
gdalserver.c:129:23: note: each undeclared identifier is reported only once for each function it appears in
gdalserver.c:132:12: warning: implicit declaration of function 'getaddrinfo' [-Wimplicit-function-declaration]
     nRet = getaddrinfo(NULL, pszService, &sHints, &psResults);
            ^~~~~~~~~~~
gdalserver.c:135:48: warning: implicit declaration of function 'gai_strerror'; did you mean 'strerror'? [-Wimplicit-function-declaration]
         fprintf(stderr, "getaddrinfo(): %s\n", gai_strerror(nRet));
                                                ^~~~~~~~~~~~
                                                strerror
gdalserver.c:135:42: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'int' [-Wformat=]
         fprintf(stderr, "getaddrinfo(): %s\n", gai_strerror(nRet));
                                         ~^     ~~~~~~~~~~~~~~~~~~
                                         %d
gdalserver.c:141:39: error: dereferencing pointer to incomplete type 'struct addrinfo'
          psResultsIter = psResultsIter->ai_next)
                                       ^~
gdalserver.c:162:5: warning: implicit declaration of function 'freeaddrinfo' [-Wimplicit-function-declaration]
     freeaddrinfo(psResults);
     ^~~~~~~~~~~~
gdalserver.c:124:21: warning: unused variable 'sHints' [-Wunused-variable]
     struct addrinfo sHints;
                     ^~~~~~
make[1]: *** [gdalserver.lo] Error 1
make[1]: Leaving directory `/tmp/gdal-2.0.0/apps'
make: *** [apps-target] Error 2


Any help would be greatly appreciated.  

Lee


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200707/563e0b29/attachment-0001.html>

From breuil at craig.fr  Wed Jul  8 01:12:31 2020
From: breuil at craig.fr (Landry Breuil)
Date: Wed, 8 Jul 2020 10:12:31 +0200
Subject: [gdal-dev] building a vrt to stack overlapping COGs with a
	mask/alpha band
Message-ID: <6ec39add-b538-2770-5bec-5e4f53421590@craig.fr>

Hi,

i'm converting a stock of tiled aerial pictures (from distinct 
years/campaigns) to COG (using gdal 3.1.0), and trying to stack them via 
a vrt. the COG arent 'full', in the sense that they have a bbox, but 
there isnt data *everywhere*. Some of those campaigns/COGs have 
overlapping BBOXes.

the COG are built from vrts (assembling all the tiles for the campaign) 
built with -addalpha, and then using gdal_translate -of COG -b 1 -b 2 -b 
3 -mask 4 to have the mask band in the resulting COG, ie i get 3 bands 
with a 'per-dataset mask':

Band 1 Block=512x512 Type=Byte, ColorInterp=Red
   Overviews: 148000x172000, 74000x86000, 37000x43000, 18500x21500, 
9250x10750, 4625x5375, 2313x2688, 1157x1344, 579x672, 290x336
   Mask Flags: PER_DATASET
   Overviews of mask band: 148000x172000, 74000x86000, 37000x43000, 
18500x21500, 9250x10750, 4625x5375, 2313x2688, 1157x1344, 579x672, 290x336

i have zero issue loading the separate COGs in QGIS (locally or via 
vsicurl), the nodata areas are properly displayed as transparent, 
loading several COGs on top of each other properly render the 
overlapping areas, ie if at some coords there's data in the lower COG 
and nodata in the toplevel COG, then the data from the lower COG is 
rendered. That can also be achieved via a mapserver GROUP, loading the 
layers on top of each other, as seen in https://imgur.com/9BgZSTH.png

Trying to achieve the same via a vrt file stacking the COGs fails (plain 
gdalbuildvrt img1.tiff img2.tiff), ie for the same coords, nodata will 
be rendered if there's nodata in the toplevel COG (even if there's data 
in the lower COG), and that for the complete BBOX of the toplevel COG 
(ie outside of the toplevel COG BBOX, data from the lower COGs is 
displayed). See https://imgur.com/a/HiEfjxY for an example (here, it's 
via WMS loading as jpeg, using png the white area would be transparent).

I tried playing with the various gdalbuildvrt (-addalpha, etc..) options 
but i still cant figure out what is the correct incantation to achieve 
my goal (ie tell gdalbuildvrt that there's some kind of 'cutline' around 
the given COGs ?), so i'm resorting to find hints on the list :)

TIA,

Landry

From even.rouault at spatialys.com  Wed Jul  8 04:23:01 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 Jul 2020 13:23:01 +0200
Subject: [gdal-dev] building a vrt to stack overlapping COGs with a
	mask/alpha band
In-Reply-To: <6ec39add-b538-2770-5bec-5e4f53421590@craig.fr>
References: <6ec39add-b538-2770-5bec-5e4f53421590@craig.fr>
Message-ID: <2740551.dUSTRQQKyk@even-i700>

On mercredi 8 juillet 2020 10:12:31 CEST Landry Breuil wrote:
> Hi,
> 
> i'm converting a stock of tiled aerial pictures (from distinct
> years/campaigns) to COG (using gdal 3.1.0), and trying to stack them via
> a vrt. the COG arent 'full', in the sense that they have a bbox, but
> there isnt data *everywhere*. Some of those campaigns/COGs have
> overlapping BBOXes.
> 
> the COG are built from vrts (assembling all the tiles for the campaign)
> built with -addalpha, and then using gdal_translate -of COG -b 1 -b 2 -b
> 3 -mask 4 to have the mask band in the resulting COG, ie i get 3 bands
> with a 'per-dataset mask':
> 
> Band 1 Block=512x512 Type=Byte, ColorInterp=Red
>    Overviews: 148000x172000, 74000x86000, 37000x43000, 18500x21500,
> 9250x10750, 4625x5375, 2313x2688, 1157x1344, 579x672, 290x336
>    Mask Flags: PER_DATASET
>    Overviews of mask band: 148000x172000, 74000x86000, 37000x43000,
> 18500x21500, 9250x10750, 4625x5375, 2313x2688, 1157x1344, 579x672, 290x336
> 
> i have zero issue loading the separate COGs in QGIS (locally or via
> vsicurl), the nodata areas are properly displayed as transparent,
> loading several COGs on top of each other properly render the
> overlapping areas, ie if at some coords there's data in the lower COG
> and nodata in the toplevel COG, then the data from the lower COG is
> rendered. That can also be achieved via a mapserver GROUP, loading the
> layers on top of each other, as seen in https://imgur.com/9BgZSTH.png
> 
> Trying to achieve the same via a vrt file stacking the COGs fails (plain
> gdalbuildvrt img1.tiff img2.tiff), ie for the same coords, nodata will
> be rendered if there's nodata in the toplevel COG (even if there's data
> in the lower COG), and that for the complete BBOX of the toplevel COG
> (ie outside of the toplevel COG BBOX, data from the lower COGs is
> displayed). See https://imgur.com/a/HiEfjxY for an example (here, it's
> via WMS loading as jpeg, using png the white area would be transparent).
> 
> I tried playing with the various gdalbuildvrt (-addalpha, etc..) options
> but i still cant figure out what is the correct incantation to achieve
> my goal (ie tell gdalbuildvrt that there's some kind of 'cutline' around
> the given COGs ?), so i'm resorting to find hints on the list :)

Landry,

The behaviour you describe is indeed how VRT stacking works currently. Alpha / masks bands 
are dealt as regular bands. No blending is done. Long time wish / todo.

Your best option with VRT would be to use a NoData value instead if you can.
Or use gdalwarp to create a materialized mosaic.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200708/775a92a9/attachment.html>

From breuil at craig.fr  Thu Jul  9 01:09:56 2020
From: breuil at craig.fr (Landry Breuil)
Date: Thu, 9 Jul 2020 10:09:56 +0200
Subject: [gdal-dev] building a vrt to stack overlapping COGs with a
 mask/alpha band
In-Reply-To: <2740551.dUSTRQQKyk@even-i700>
References: <6ec39add-b538-2770-5bec-5e4f53421590@craig.fr>
 <2740551.dUSTRQQKyk@even-i700>
Message-ID: <84f469c9-49ac-428c-992b-046323e08b7c@craig.fr>

On 08/07/2020 13:23, Even Rouault wrote:
> On mercredi 8 juillet 2020 10:12:31 CEST Landry Breuil wrote:
> 
>  > Hi,
> 
>  >
> 
>  > i'm converting a stock of tiled aerial pictures (from distinct
> 
>  > years/campaigns) to COG (using gdal 3.1.0), and trying to stack them via
> 
>  > a vrt. the COG arent 'full', in the sense that they have a bbox, but
> 
>  > there isnt data *everywhere*. Some of those campaigns/COGs have
> 
>  > overlapping BBOXes.
> 
>  >
> 
>  > the COG are built from vrts (assembling all the tiles for the campaign)
> 
>  > built with -addalpha, and then using gdal_translate -of COG -b 1 -b 2 -b
> 
>  > 3 -mask 4 to have the mask band in the resulting COG, ie i get 3 bands
> 
>  > with a 'per-dataset mask':
> 
>  >
> 
>  > Band 1 Block=512x512 Type=Byte, ColorInterp=Red
> 
>  > Overviews: 148000x172000, 74000x86000, 37000x43000, 18500x21500,
> 
>  > 9250x10750, 4625x5375, 2313x2688, 1157x1344, 579x672, 290x336
> 
>  > Mask Flags: PER_DATASET
> 
>  > Overviews of mask band: 148000x172000, 74000x86000, 37000x43000,
> 
>  > 18500x21500, 9250x10750, 4625x5375, 2313x2688, 1157x1344, 579x672, 
> 290x336
> 
>  >
> 
>  > i have zero issue loading the separate COGs in QGIS (locally or via
> 
>  > vsicurl), the nodata areas are properly displayed as transparent,
> 
>  > loading several COGs on top of each other properly render the
> 
>  > overlapping areas, ie if at some coords there's data in the lower COG
> 
>  > and nodata in the toplevel COG, then the data from the lower COG is
> 
>  > rendered. That can also be achieved via a mapserver GROUP, loading the
> 
>  > layers on top of each other, as seen in https://imgur.com/9BgZSTH.png
> 
>  >
> 
>  > Trying to achieve the same via a vrt file stacking the COGs fails (plain
> 
>  > gdalbuildvrt img1.tiff img2.tiff), ie for the same coords, nodata will
> 
>  > be rendered if there's nodata in the toplevel COG (even if there's data
> 
>  > in the lower COG), and that for the complete BBOX of the toplevel COG
> 
>  > (ie outside of the toplevel COG BBOX, data from the lower COGs is
> 
>  > displayed). See https://imgur.com/a/HiEfjxY for an example (here, it's
> 
>  > via WMS loading as jpeg, using png the white area would be transparent).
> 
>  >
> 
>  > I tried playing with the various gdalbuildvrt (-addalpha, etc..) options
> 
>  > but i still cant figure out what is the correct incantation to achieve
> 
>  > my goal (ie tell gdalbuildvrt that there's some kind of 'cutline' around
> 
>  > the given COGs ?), so i'm resorting to find hints on the list :)
> 
> Landry,
> 
> The behaviour you describe is indeed how VRT stacking works currently. 
> Alpha / masks bands are dealt as regular bands. No blending is done. 

So that explains why it works with the mapserver GROUP keyword, as it 
does the blending of the sub-layers.

> Long time wish / todo.

Ok, good to know.

> Your best option with VRT would be to use a NoData value instead if you can.

You mean setting a nodata value when building the COGs (ie 
gdal_translate -a_nodata 0 -of COG dataset.vrt dataset.tif) instead of 
the alpha/mask band, and then using this nodata value as -srcnodata 0 
parameter to gdalbuildvrt ?

> Or use gdalwarp to create a materialized mosaic.

That would be sub optimal (ie double storage) as i also need to be able 
to use the distinct campaigns independently.

Landry

From idan at miara.com  Thu Jul  9 08:29:41 2020
From: idan at miara.com (Idan Miara)
Date: Thu, 9 Jul 2020 18:29:41 +0300
Subject: [gdal-dev] create a vrt with overviews from a raster list
Message-ID: <CAEDrt3-W3NVFUrEJj5b8g34ZO1cw7-yQ7GfajVR3jy_z3EfnGQ@mail.gmail.com>

Hi all,

I have a list of rasters (DataSet objects) that I want to be treated as
overviews for the BuildVRT function and not as a mosaic.
I couldn't find how to make such a vrt programmatically.
IIRC I could create such a vrt by manually editing the vrt file and
inserting <Overview> sections.

Long story:
Say I have a few rasters (with overviews) with different extents, assuming
that the rasters with the larger extents have lower resolution.
I'm trying to write a function that takes all these rasters/overviews and
creates a vrt using the "best" overviews from all the rasters, so that I
have a raster with the maximum extent for each overview level.

"almost" working implementation:
https://github.com/talos-gis/gdalos/blob/master/src/gdalos/make_vrt_with_multiple_extent_overviews.py


For that I created a list of DataSets objects opened with OpenEx with
OVERVIEW_LEVEL:
I want to use these DataSets as a set of overviews for the base DataSet.

I've tried using:
vrt_ds = gdal.BuildVRT(str(vrt_filename), ds_list, options=
gdal.BuildVRTOptions(outputBounds=extent))

But I think it tries to create a mosaic of the input DataSets instead of
treating them as overviews.

Kind regards,
Idan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200709/5aa84518/attachment.html>

From rajeshreddy82 at gmail.com  Fri Jul 10 01:38:39 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Fri, 10 Jul 2020 01:38:39 -0700 (MST)
Subject: [gdal-dev] GDAL SQLITE ID reserved  column issue
Message-ID: <1594370319636-0.post@n6.nabble.com>

Developers,
I am using ogr2ogr.

My Test json file is having ID property -

{"type":"Feature","id":"XX","geometry":{"type":"Point","coordinates":[-9944478.9237651918,5330546.6922583049]},"properties":{*"ID"*:"NorthWest
Territory","ToolTip":"NorthWest","Label":"Corporate Operations Boundary
7679755"}}}

My VRT file is -

<?xml version="1.0" encoding="utf-8"?>
<OGRVRTDataSource>
  <OGRVRTLayer name="Schematic">
    <SrcDataSource>C:\Test.json</SrcDataSource>    
    <SrcSQL dialect="sqlite">SELECT * FROM "Test"</SrcSQL>
  </OGRVRTLayer>
</OGRVRTDataSource>

SQLITE is unable to create a virtual table with "ID" property column since
"id" is already there as reserved index column hence the problem.

How to overcome this issue?

Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From rajeshreddy82 at gmail.com  Fri Jul 10 01:38:50 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Fri, 10 Jul 2020 01:38:50 -0700 (MST)
Subject: [gdal-dev] GDAL SQLITE ID reserved  column issue
Message-ID: <1594370330338-0.post@n6.nabble.com>

Developers,
I am using ogr2ogr.

My Test json file is having ID property -

{"type":"Feature","id":"XX","geometry":{"type":"Point","coordinates":[-9944478.9237651918,5330546.6922583049]},"properties":{*"ID"*:"NorthWest
Territory","ToolTip":"NorthWest","Label":"Corporate Operations Boundary
7679755"}}}

My VRT file is -

<?xml version="1.0" encoding="utf-8"?>
<OGRVRTDataSource>
  <OGRVRTLayer name="Schematic">
    <SrcDataSource>C:\Test.json</SrcDataSource>    
    <SrcSQL dialect="sqlite">SELECT * FROM "Test"</SrcSQL>
  </OGRVRTLayer>
</OGRVRTDataSource>

SQLITE is unable to create a virtual table with "ID" property column since
"id" is already there as reserved index column hence the problem.

How to overcome this issue?

Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From breuil at craig.fr  Fri Jul 10 01:41:54 2020
From: breuil at craig.fr (Landry Breuil)
Date: Fri, 10 Jul 2020 10:41:54 +0200
Subject: [gdal-dev] building a vrt to stack overlapping COGs with a
 mask/alpha band
In-Reply-To: <84f469c9-49ac-428c-992b-046323e08b7c@craig.fr>
References: <6ec39add-b538-2770-5bec-5e4f53421590@craig.fr>
 <2740551.dUSTRQQKyk@even-i700>
 <84f469c9-49ac-428c-992b-046323e08b7c@craig.fr>
Message-ID: <c4dfb131-b48e-27a5-c068-7eec80ab2fdc@craig.fr>

On 09/07/2020 10:09, Landry Breuil wrote:
> On 08/07/2020 13:23, Even Rouault wrote:
>> On mercredi 8 juillet 2020 10:12:31 CEST Landry Breuil wrote:
>>

<snip>

> 
>> Your best option with VRT would be to use a NoData value instead if 
>> you can.
> 
> You mean setting a nodata value when building the COGs (ie 
> gdal_translate -a_nodata 0 -of COG dataset.vrt dataset.tif) instead of 
> the alpha/mask band, and then using this nodata value as -srcnodata 0 
> parameter to gdalbuildvrt ?

So i tried this nodata method, it sort of works, ie i can stack the COGs 
on top of each other via the VRT, and they're blended together at 
display time.. unless (and i already hit that in the past) on the 
borders of the COG one can see ugly artifacts of the JPEG compression 
going 'outside' the original area:

https://imgur.com/t0hwdvx.png

https://imgur.com/RqJXbmx.png

to workaround this in the past, i had built a contraption/script that 
'worked' but wasnt fully satisfying:
- creating a geojson with a cutline from the tileindex (ogr2ogr -dialect 
SQLITE -f GeoJSON -sql "SELECT buffer(GUnion(GEOMETRY), -12, 1) from 
tileindex)
- warping the vrt with the cutline via gdalwarp
- compressing the result via gdal_translate (not COG yet, but TIFF with 
JPEG/YCBCR)
- and then adding overviews separately via gdaladdo

i'm unsure this method is still the way to go to eradicate artifacts on 
the borders of image, as i had sometimes artifacts *in the overviews* 
which were also JPEG-compressed.

Landry

From even.rouault at spatialys.com  Fri Jul 10 06:10:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 10 Jul 2020 15:10:16 +0200
Subject: [gdal-dev] GDAL SQLITE ID reserved  column issue
In-Reply-To: <1594370330338-0.post@n6.nabble.com>
References: <1594370330338-0.post@n6.nabble.com>
Message-ID: <2489530.JMMa1YyWPj@even-i700>

Hi,

> My Test json file is having ID property -
> 
> {"type":"Feature","id":"XX","geometry":{"type":"Point","coordinates":[-99444
> 78.9237651918,5330546.6922583049]},"properties":{*"ID"*:"NorthWest
> Territory","ToolTip":"NorthWest","Label":"Corporate Operations Boundary
> 7679755"}}}
> 
> My VRT file is -
> 
> <?xml version="1.0" encoding="utf-8"?>
> <OGRVRTDataSource>
>   <OGRVRTLayer name="Schematic">
>     <SrcDataSource>C:\Test.json</SrcDataSource>
>     <SrcSQL dialect="sqlite">SELECT * FROM "Test"</SrcSQL>
>   </OGRVRTLayer>
> </OGRVRTDataSource>
> 
> SQLITE is unable to create a virtual table with "ID" property column since
> "id" is already there as reserved index column hence the problem.
> 
> How to overcome this issue?

I couldn't really come with a workaround with the existing state of the code.

I've added improvements in https://github.com/OSGeo/gdal/pull/2756 that will make it 
possible to deal with that situation:

$ ogrinfo test.json -sql "select * from test" -dialect sqlite -q

Layer name: SELECT
OGRFeature(SELECT):0
  id (String) = XX
  ID2 (String) = NorthWest Territory
  ToolTip (String) = NorthWest
  Label (String) = Corporate Operations Boundary 7679755
  POINT (-9944478.92376519 5330546.6922583)

==> due to SQLite not allowing field names differing by case, one is obliged to rename fields.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200710/76d14a33/attachment.html>

From rajeshreddy82 at gmail.com  Fri Jul 10 07:16:37 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Fri, 10 Jul 2020 07:16:37 -0700 (MST)
Subject: [gdal-dev] GDAL SQLITE ID reserved  column issue
In-Reply-To: <2489530.JMMa1YyWPj@even-i700>
References: <1594370330338-0.post@n6.nabble.com> <2489530.JMMa1YyWPj@even-i700>
Message-ID: <1594390597959-0.post@n6.nabble.com>

Thanks for the information.

ID is very common attribute which will be used in features representations.
It would be good, if you provide a workaround or solution in next release or
future release.

Thanks again.

Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From bstults at fsu.edu  Fri Jul 10 12:12:38 2020
From: bstults at fsu.edu (Brian Stults)
Date: Fri, 10 Jul 2020 15:12:38 -0400
Subject: [gdal-dev] does TIGER vector driver extract 1980 block information
Message-ID: <635a11f7-9c1f-866e-23f0-e7acfedfc921@fsu.edu>

I am trying to generate a shapefile of 1980 census blocks using the 1992
Tiger/Line files. I am able to open the files directly using QGIS, and I
can create shapefiles using the GDAL TIGER driver. However, these
methods do not seem to extract the 1980 block information. Perhaps the
GDAL Tiger driver doesn't pull that info? Is there a way to adapt these
methods, or are there any other methods, for getting a 1980 census block
shapefile?

Specifically, I need a 1980 block shapefile to overlay with a more
recent census block shapefile to examine changed boundaries.

From jukka.rahkonen at maanmittauslaitos.fi  Sat Jul 11 04:32:28 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Sat, 11 Jul 2020 04:32:28 -0700 (MST)
Subject: [gdal-dev] GDAL SQLITE ID reserved  column issue
In-Reply-To: <1594390597959-0.post@n6.nabble.com>
References: <1594370330338-0.post@n6.nabble.com>
 <2489530.JMMa1YyWPj@even-i700> <1594390597959-0.post@n6.nabble.com>
Message-ID: <1594467148104-0.post@n6.nabble.com>

Hi,

What Even did will be included in next releases. But if you wish that
GeoJSON that contains both the identifier "id" and also "ID" as an attribute
can be converted into SQLite based formats (GeoPackage, SQLite) in the
future it will not happen. For SQLite all "ID", "id", "Id", and "iD" mean
the same identifier. See discussion in
http://sqlite.1065341.n5.nabble.com/Is-sqlite-case-sensitive-td75706.html.

If both GeoJSON and GeoPackage are important for the use case, rename
attribute ID into something else.

-Jukka Rahkonen-



MRRAJESH wrote
> Thanks for the information.
> 
> ID is very common attribute which will be used in features
> representations.
> It would be good, if you provide a workaround or solution in next release
> or
> future release.
> 
> Thanks again.
> 
> Regards,
> Rajesh
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From szabot.hu at gmail.com  Thu Jul 16 12:00:40 2020
From: szabot.hu at gmail.com (Tibor Szabo)
Date: Thu, 16 Jul 2020 21:00:40 +0200
Subject: [gdal-dev] MSG-CPP satellite projection to wgs84 with gdal
In-Reply-To: <CADfw_TNqS7Ag4_JmPZqQtg+p2-1j3MoT=VDbiScXH_NL1+9TLg@mail.gmail.com>
References: <mailman.101598.1594657646.17185.gdal-dev@lists.osgeo.org>
 <CADfw_TMLa4vk+_u1W3rEXq+jLXyrA=ANa1Vv6eDkbLg6VOUiKQ@mail.gmail.com>
 <CADfw_TNqS7Ag4_JmPZqQtg+p2-1j3MoT=VDbiScXH_NL1+9TLg@mail.gmail.com>
Message-ID: <CADfw_TPwc6=AO50Ut2A1nh6Ytv4PXc=Y_dbh6sYzf48kdG5_wQ@mail.gmail.com>

Hi All,

I have tried to wrap a netcdf file for changing projection from satellite
view to EPSG:4326 with gdal_warp in Ubuntu and windows also with error.
Sample file:
https://z003.s3-us-west-2.amazonaws.com/SEVIR_OPER_R___MSGCPP__L2__20200712T220000_20200712T221500_0001.nc
D:\meteo_model>gdalwarp -of NetCDF -s_srs "+proj=geos +lon_0=0.000000
+lat_0=0 +h=35807.414063 +a=6378.169 +b=6356.5838" -t_srs EPSG:4326 -te 0
50 10 60
NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cot
TEST_MOD_COT_NL.nc
ERROR 5: OSRCalcInvFlattening(): Wrong input values
ERROR 1: PROJ: proj_create_operations: Source and target ellipsoid do not
belong to the same celestial body
ERROR 6: Cannot find coordinate operations from
`PROJCRS["unknown",BASEGEOGCRS["unknown",DATUM["unknown",ELLIPSOID["unknown",6378.169,295.48806589701,LENGTHUNIT["metre",1,ID["EPSG",9001]]]],PRIMEM["Reference
meridian",0,ANGLEUNIT["degree",0.0174532925199433,ID["EPSG",9122]]]],CONVERSION["unknown",METHOD["Geostationary
Satellite (Sweep Y)"],PARAMETER["Longitude of natural
origin",0,ANGLEUNIT["degree",0.0174532925199433],ID["EPSG",8802]],PARAMETER["Satellite
Height",35807.414063,LENGTHUNIT["metre",1,ID["EPSG",9001]]],PARAMETER["False
easting",0,LENGTHUNIT["metre",1],ID["EPSG",8806]],PARAMETER["False
northing",0,LENGTHUNIT["metre",1],ID["EPSG",8807]]],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
to `EPSG:4326'

D:\meteo_model>

My gdal version:
Win:
D:\meteo_model>ogrinfo --version
GDAL 3.1.0dev, released 2019/99/99
Linux:
szabot at manicminer:~/gdal_knmi_test$ ogrinfo --version
GDAL 3.0.4, released 2020/01/28

BR
Tibor


D:\meteo_model>gdalinfo
SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc
Driver: netCDF/Network Common Data Format
Files: SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc
Size is 512, 512
Metadata:
  NC_GLOBAL#comment=none
  NC_GLOBAL#Conventions=CF-1.4
  NC_GLOBAL#history=NetCDF files based on KNMI MSG-CPP HDF5 files.
  NC_GLOBAL#institution=Royal Netherlands Meteorological Institute (KNMI)
  NC_GLOBAL#references=http://msgcpp.knmi.nl
  NC_GLOBAL#source=Royal Netherlands Meteorological Institute (KNMI)
  NC_GLOBAL#title=MSG-CPP derived Cloud Physical Products from Meteosat
Second Generation (MSG)
  NC_GLOBAL#version=0001
Subdatasets:

SUBDATASET_1_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":azidiff
  SUBDATASET_1_DESC=[1x3712x3712]
angle_of_rotation_from_solar_azimuth_to_platform_azimuth (16-bit integer)

SUBDATASET_2_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cth
  SUBDATASET_2_DESC=[1x3712x3712] height_at_cloud_top (16-bit integer)

SUBDATASET_3_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cldmask
  SUBDATASET_3_DESC=[1x3712x3712] cloud_area_fraction status_flag (16-bit
integer)

SUBDATASET_4_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cot
  SUBDATASET_4_DESC=[1x3712x3712] atmosphere_optical_thickness_due_to_cloud
(16-bit integer)

SUBDATASET_5_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cph
  SUBDATASET_5_DESC=[1x3712x3712] thermodynamic_particle_phase_at_cloud_top
status_flag (16-bit integer)

SUBDATASET_6_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":ctt
  SUBDATASET_6_DESC=[1x3712x3712] air_temperature_at_cloud_top (16-bit
integer)

SUBDATASET_7_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cwp
  SUBDATASET_7_DESC=[1x3712x3712] atmosphere_cloud_condensed_water_content
(16-bit integer)

SUBDATASET_8_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":dcld
  SUBDATASET_8_DESC=[1x3712x3712] thickness_of_liquid_water_cloud (16-bit
integer)

SUBDATASET_9_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":dcot
  SUBDATASET_9_DESC=[1x3712x3712] atmosphere_optical_thickness_due_to_cloud
standard_error (16-bit integer)

SUBDATASET_10_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":dcwp
  SUBDATASET_10_DESC=[1x3712x3712] atmosphere_cloud_condensed_water_content
standard_error (16-bit integer)

SUBDATASET_11_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":dndv
  SUBDATASET_11_DESC=[1x3712x3712]
number_concentration_of_cloud_liquid_water_particles_in_air_at_liquid_water_cloud_top
(16-bit integer)

SUBDATASET_12_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":dreff
  SUBDATASET_12_DESC=[1x3712x3712]
effective_radius_of_cloud_condensed_water_particles_at_cloud_top
standard_error (16-bit integer)

SUBDATASET_13_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":precip
  SUBDATASET_13_DESC=[1x3712x3712] lwe_precipitation_rate (16-bit integer)

SUBDATASET_14_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":precip_ir
  SUBDATASET_14_DESC=[1x3712x3712] lwe_precipitation_rate (16-bit integer)

SUBDATASET_15_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":qa
  SUBDATASET_15_DESC=[1x3712x3712] *** TBD *** (16-bit integer)

SUBDATASET_16_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":reff
  SUBDATASET_16_DESC=[1x3712x3712]
effective_radius_of_cloud_condensed_water_particles_at_cloud_top (16-bit
integer)

SUBDATASET_17_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":satz
  SUBDATASET_17_DESC=[1x3712x3712] platform_zenith_angle (16-bit integer)

SUBDATASET_18_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":sds
  SUBDATASET_18_DESC=[1x3712x3712] surface_downwelling_shortwave_flux
(16-bit integer)

SUBDATASET_19_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":sds_cs
  SUBDATASET_19_DESC=[1x3712x3712]
surface_downwelling_shortwave_flux_assuming_clear_sky (16-bit integer)

SUBDATASET_20_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":sds_diff
  SUBDATASET_20_DESC=[1x3712x3712]
surface_diffuse_downwelling_shortwave_flux_in_air (16-bit integer)

SUBDATASET_21_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":sds_diff_cs
  SUBDATASET_21_DESC=[1x3712x3712]
surface_diffuse_downwelling_shortwave_flux_in_air_assuming_clear_sky
(16-bit integer)

SUBDATASET_22_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":sunz
  SUBDATASET_22_DESC=[1x3712x3712] solar_zenith_angle (16-bit integer)

SUBDATASET_23_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":lat
  SUBDATASET_23_DESC=[3712x3712] latitude (32-bit floating-point)

SUBDATASET_24_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":lon
  SUBDATASET_24_DESC=[3712x3712] longitude (32-bit floating-point)

SUBDATASET_25_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":time_offset
  SUBDATASET_25_DESC=[3712x3712] time_offset (16-bit integer)

SUBDATASET_26_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":version_id
  SUBDATASET_26_DESC=[1x1] version_id (64-bit floating-point)

SUBDATASET_27_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":sat_id
  SUBDATASET_27_DESC=[1x1] sat_id (64-bit floating-point)

SUBDATASET_28_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":earth_sun_distance
  SUBDATASET_28_DESC=[1x1] earth_sun_distance (64-bit floating-point)

SUBDATASET_29_NAME=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":annual_mean_solar_extraterrestrial_flux
  SUBDATASET_29_DESC=[1x1] annual_mean_solar_extraterrestrial_flux (64-bit
floating-point)
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,  512.0)
Upper Right (  512.0,    0.0)
Lower Right (  512.0,  512.0)
Center      (  256.0,  256.0)

D:\meteo_model>

------------------------------------------------------------

D:\meteo_model>gdalinfo
NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cot
ERROR 5: OSRCalcInvFlattening(): Wrong input values
Driver: netCDF/Network Common Data Format
Files: none associated
Size is 3712, 3712
Coordinate System is:
GEOGCRS["unknown",
    DATUM["unnamed",
        ELLIPSOID["Spheroid",6356584,0,
            LENGTHUNIT["metre",1,
                ID["EPSG",9001]]]],
    PRIMEM["Greenwich",0,
        ANGLEUNIT["degree",0.0174532925199433,
            ID["EPSG",9122]]],
    CS[ellipsoidal,2],
        AXIS["latitude",north,
            ORDER[1],
            ANGLEUNIT["degree",0.0174532925199433,
                ID["EPSG",9122]]],
        AXIS["longitude",east,
            ORDER[2],
            ANGLEUNIT["degree",0.0174532925199433,
                ID["EPSG",9122]]]]
Data axis to CRS axis mapping: 2,1
Origin = (-5568.748339200000373,5568.748339200000373)
Pixel Size = (3.000403200000000,-3.000403200000000)
Metadata:
  cot#coordinates=lat lon
  cot#grid_mapping=projection
  cot#long_name=Cloud Optical Thickness
  cot#offset=0
  cot#scale_factor=0.0099999998
  cot#standard_name=atmosphere_optical_thickness_due_to_cloud
  cot#units=1
  cot#_FillValue=-1
  NC_GLOBAL#comment=none
  NC_GLOBAL#Conventions=CF-1.4
  NC_GLOBAL#history=NetCDF files based on KNMI MSG-CPP HDF5 files.
  NC_GLOBAL#institution=Royal Netherlands Meteorological Institute (KNMI)
  NC_GLOBAL#references=http://msgcpp.knmi.nl
  NC_GLOBAL#source=Royal Netherlands Meteorological Institute (KNMI)
  NC_GLOBAL#title=MSG-CPP derived Cloud Physical Products from Meteosat
Second Generation (MSG)
  NC_GLOBAL#version=0001
  NETCDF_DIM_EXTRA={time}
  NETCDF_DIM_time_DEF={1,6}
  NETCDF_DIM_time_VALUES=1594628100
  projection#EPSG_code=none
  projection#grid_mapping_name=MSGnavigation
  projection#height_from_earth_center=42163972
  projection#latitude_of_projection_origin=0
  projection#longitude_of_projection_origin=0
  projection#long_name=Projection information
  projection#proj4_params=+proj=geos +lon_0=0.000000 +lat_0=0
+h=35807.414063 +a=6378.169 +b=6356.5838
  projection#scale_x=35785.832
  projection#scale_y=-35785.832
  projection#semi_major_axis=6356584
  projection#semi_minor_axis=6378169
  time#calendar=none
  time#long_name=time
  time#standard_name=time
  time#units=seconds since 1970-01-01 00:00:00
  x#long_name=x coordinate of projection
  x#standard_name=projection_x_coordinate
  x#units=km
  y#long_name=y coordinate of projection
  y#standard_name=projection_y_coordinate
  y#units=km
Geolocation:
  LINE_OFFSET=0
  LINE_STEP=1
  PIXEL_OFFSET=0
  PIXEL_STEP=1
  SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]
  X_BAND=1

X_DATASET=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":lon
  Y_BAND=1

Y_DATASET=NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":lat
Corner Coordinates:
Upper Left  (   -5568.748,    5568.748) (Invalid angle,Invalid angle)
Lower Left  (   -5568.748,   -5568.748) (Invalid angle,Invalid angle)
Upper Right (    5568.748,    5568.748) (Invalid angle,Invalid angle)
Lower Right (    5568.748,   -5568.748) (Invalid angle,Invalid angle)
Center      (  -0.0000000,   0.0000000) (  0d 0' 0.00"W,  0d 0' 0.00"N)
Band 1 Block=3712x3712 Type=Int16, ColorInterp=Undefined
  NoData Value=-1
  Unit Type: 1
  Offset: 0,   Scale:0.00999999977648258
  Metadata:
    coordinates=lat lon
    grid_mapping=projection
    long_name=Cloud Optical Thickness
    NETCDF_DIM_time=1594628100
    NETCDF_VARNAME=cot
    offset=0
    scale_factor=0.0099999998
    standard_name=atmosphere_optical_thickness_due_to_cloud
    units=1
    _FillValue=-1

--------------------------------------------------



>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200716/73681d52/attachment-0001.html>

From even.rouault at spatialys.com  Thu Jul 16 12:18:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jul 2020 21:18:30 +0200
Subject: [gdal-dev] MSG-CPP satellite projection to wgs84 with gdal
In-Reply-To: <CADfw_TPwc6=AO50Ut2A1nh6Ytv4PXc=Y_dbh6sYzf48kdG5_wQ@mail.gmail.com>
References: <mailman.101598.1594657646.17185.gdal-dev@lists.osgeo.org>
 <CADfw_TNqS7Ag4_JmPZqQtg+p2-1j3MoT=VDbiScXH_NL1+9TLg@mail.gmail.com>
 <CADfw_TPwc6=AO50Ut2A1nh6Ytv4PXc=Y_dbh6sYzf48kdG5_wQ@mail.gmail.com>
Message-ID: <10638909.yuKCelYGFy@even-i700>

On jeudi 16 juillet 2020 21:00:40 CEST Tibor Szabo wrote:
> Hi All,
> 
> I have tried to wrap a netcdf file for changing projection from satellite
> view to EPSG:4326 with gdal_warp in Ubuntu and windows also with error.
> Sample file:
> https://z003.s3-us-west-2.amazonaws.com/
SEVIR_OPER_R___MSGCPP__L2__20200712T
> 220000_20200712T221500_0001.nc D:\meteo_model>gdalwarp -of NetCDF -s_srs
> "+proj=geos +lon_0=0.000000 +lat_0=0 +h=35807.414063 +a=6378.169
> +b=6356.5838" -t_srs EPSG:4326 -te 0 50 10 60

+a and +b values must be expressed in metres, not kilometres.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200716/afa616ad/attachment.html>

From szabot.hu at gmail.com  Thu Jul 16 23:13:59 2020
From: szabot.hu at gmail.com (Tibor Szabo)
Date: Fri, 17 Jul 2020 08:13:59 +0200
Subject: [gdal-dev] MSG-CPP satellite projection to wgs84 with gdal
In-Reply-To: <10638909.yuKCelYGFy@even-i700>
References: <mailman.101598.1594657646.17185.gdal-dev@lists.osgeo.org>
 <CADfw_TNqS7Ag4_JmPZqQtg+p2-1j3MoT=VDbiScXH_NL1+9TLg@mail.gmail.com>
 <CADfw_TPwc6=AO50Ut2A1nh6Ytv4PXc=Y_dbh6sYzf48kdG5_wQ@mail.gmail.com>
 <10638909.yuKCelYGFy@even-i700>
Message-ID: <CADfw_TNx-gsxzGYuvLaS+MUA58+7e+rj65Ena9jW27j7_NVVtQ@mail.gmail.com>

  Hi Even,

Thank you for your quick answer.

I have tried many variants in the syntax and I got output nc file only with
the following:

+proj=geos +lon_0=0.000000 +lat_0=0 +h=35807.414063 +a=6378169 +b=6356583.8
+units=km

One error msg was also remains:

szabot at manicminer:~/gdal_knmi_test$ gdalwarp -of NetCDF -s_srs "+proj=geos
+lon_0=0.000000 +lat_0=0 +h=35807.414063 +a=6378169 +b=6356583.8 +units=km"
-t_srs EPSG:4326 -te 0 50 10 60
NETCDF:"SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc":cot
TEST_MOD_COT_NL.nc
ERROR 5: OSRCalcInvFlattening(): Wrong input values
Creating output file that is 3125P x 3125L.
Processing
NETCDF:SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc:cot
[1/1] : 0Using internal nodata values (e.g. -1) for image
NETCDF:SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc:cot.
Copying nodata values from source
NETCDF:SEVIR_OPER_R___MSGCPP__L2__20200713T081500_20200713T083000_0001.nc:cot
to destination TEST_MOD_COT_NL.nc.
ERROR 1: Too many points (529 out of 529) failed to transform, unable to
compute output bounds.
Warning 1: Unable to compute source region for output window 0,0,3125,3125,
skipping.
...10...20...30...40...50...60...70...80...90...100 - done.

BR

Tibor


Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2020. júl.
16., Cs, 21:18):

> On jeudi 16 juillet 2020 21:00:40 CEST Tibor Szabo wrote:
>
> > Hi All,
>
> >
>
> > I have tried to wrap a netcdf file for changing projection from satellite
>
> > view to EPSG:4326 with gdal_warp in Ubuntu and windows also with error.
>
> > Sample file:
>
> >
> https://z003.s3-us-west-2.amazonaws.com/SEVIR_OPER_R___MSGCPP__L2__20200712T
>
> > 220000_20200712T221500_0001.nc D:\meteo_model>gdalwarp -of NetCDF -s_srs
>
> > "+proj=geos +lon_0=0.000000 +lat_0=0 +h=35807.414063 +a=6378.169
>
> > +b=6356.5838" -t_srs EPSG:4326 -te 0 50 10 60
>
>
>
> +a and +b values must be expressed in metres, not kilometres.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200717/86010770/attachment.html>

From thomas.bonfort at gmail.com  Fri Jul 17 09:09:11 2020
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Fri, 17 Jul 2020 18:09:11 +0200
Subject: [gdal-dev] "wrong" overview selected when warping from ortho to
	webmercator
Message-ID: <CAOM3y2i2WVsGbcJuoeSnKep17BMdZ1x7XY2_hrBgOcnkYVHuMA@mail.gmail.com>

I'm trying to warp/extract a webmercator tile from a large +proj=ortho
image. The issue is that the further I move away from the center of the
image the quality of the output result degrades. This seems to be due to
which overview is being selected from the source image.

input image created with -t_srs "+proj=ortho +lon_0=99.8 +lat_0=61.52" .
gdalinfo in-ortho.tif:

Size is 270322, 145529
Coordinate System is: [snip]
Origin = (-4730365.833427881821990,2876021.392761887982488)
Pixel Size = (35.000000000000000,-35.000000000000000)
Corner Coordinates:
Upper Left  (-4730365.833, 2876021.393) (  2d20'24.47"W, 40d39'26.68"N)
Lower Left  (-4730365.833,-2217493.607) ( 47d47' 8.30"E, 19d46'55.15"N)
Upper Right ( 4730904.167, 2876021.393) (158d 3'24.38"W, 40d38'56.55"N)
Lower Right ( 4730904.167,-2217493.607) (151d49'12.07"E, 19d46'34.13"N)
Center      (     269.167,  329263.893) ( 99d48'20.20"E, 64d28'44.92"N)
Band 1 Block=512x512 Type=Byte, ColorInterp=Red
  Overviews: 135161x72765, 67581x36383, 33791x18192, 16896x9096, 8448x4548,
4224x2274, 2112x1137, 1056x569

extracting webmercator tile 7,96,12 with "gdalwarp -t_srs epsg:3857 -ts 256
256 -te 10018754.171394620091 15967389.460660178214 10331840.239250702783
16280475.528516260907 -r cubic -to
AREA_OF_INTEREST=90.000000,80.647035,92.812500,81.09321 in-ortho.tif
bad.tif" gives:

GDAL: GDALOpen(in-ortho.tif, this=0x55597052f230) succeeds as GTiff.
GDAL: Using GTiff driver
Using band 4 of source image as alpha.
Creating output file that is 256P x 256L.
GDAL: GDALDriver::Create(GTiff,bad.tif,256,256,4,Byte,0x5559705570a0)
Processing in-ortho.tif [1/1] : 0WARP: Copying metadata from first source
to destination dataset
GTiff: ScanDirectories()
GTiff: Opened 135161x72765 overview.
GTiff: Opened 67581x36383 overview.
GTiff: Opened 33791x18192 overview.
GTiff: Opened 16896x9096 overview.
GTiff: Opened 8448x4548 overview.
GTiff: Opened 4224x2274 overview.
GTiff: Opened 2112x1137 overview.
GTiff: Opened 1056x569 overview.
WARP: Selecting overview level 3 for in-ortho.tif
GDAL: GDALOverviewDataset(in-ortho.tif, this=0x55597051dce0) creation.
GDALWARP: Defining SKIP_NOSOURCE=YES
WARP: SetAlphaMax: AlphaMax not set.
WARP: SetAlphaMax: AlphaMax not set.
GDAL: GDAL_CACHEMAX = 796 MB
GDAL: GDALWarpKernel()::GWKCubicNoMasksOrDstDensityOnlyByte()
Src=8130,1295,105x99 Dst=0,0,256x256
...10...20...30...40...50...60...70...80...90...100 - done.
GDAL: Flushing dirty blocks:
0...10...20...30...40...50...60...70...80...90...100 - done.
GDAL: GDALClose(bad.tif, this=0x55597056bd20)
GDAL: GDALClose(in-ortho.tif, this=0x55597052f230)

Where we can see that the warper is using a window of 105x99 in the 3rd
overview. The output image is of course blurry.

Selecting a tile closer to the ortho center (7,104,38) /opt/bin/gdalwarp
-t_srs epsg:3857 -ts 256 256 -te 12523442.714243277907 7827151.696402047761
12836528.782099360600 8140237.764258129522 -r cubic -to
AREA_OF_INTEREST=112.500000,57.326521,115.312500,58.813742 in-ortho.tif
good.tif gives:

GDAL: GDALOpen(in-ortho.tif, this=0x562469aa9230) succeeds as GTiff.
GDAL: Using GTiff driver
Using band 4 of source image as alpha.
Creating output file that is 256P x 256L.
GDAL: GDALDriver::Create(GTiff,good.tif,256,256,4,Byte,0x562469ac2f90)
Processing in-ortho.tif [1/1] : 0WARP: Copying metadata from first source
to destination dataset
GTiff: ScanDirectories()
GTiff: Opened 135161x72765 overview.
GTiff: Opened 67581x36383 overview.
GTiff: Opened 33791x18192 overview.
GTiff: Opened 16896x9096 overview.
GTiff: Opened 8448x4548 overview.
GTiff: Opened 4224x2274 overview.
GTiff: Opened 2112x1137 overview.
GTiff: Opened 1056x569 overview.
WARP: Selecting overview level 3 for in-ortho.tif
GDAL: GDALOverviewDataset(in-ortho.tif, this=0x562469a97ce0) creation.
GDALWARP: Defining SKIP_NOSOURCE=YES
WARP: SetAlphaMax: AlphaMax not set.
WARP: SetAlphaMax: AlphaMax not set.
GDAL: GDAL_CACHEMAX = 796 MB
GDAL: GDALWarpKernel()::GWKCubicNoMasksOrDstDensityOnlyByte()
Src=9741,5481,355x359 Dst=0,0,256x256
...10...20...30...40...50...60...70...80...90...100 - done.
GDAL: Flushing dirty blocks:
0...10...20...30...40...50...60...70...80...90...100 - done.
GDAL: GDALClose(good.tif, this=0x562469ac4680)
GDAL: GDALClose(in-ortho.tif, this=0x562469aa9230)

Where we can see that we are still using the 3rd overview but with a source
window of 355x359 pixels which of course gives a much better result.

* I know that in the first case I can use "-ovr AUTO-2" to force the
selection of the "correct" overview, but that's going to be inefficient
when extracting close to the center.
* I added the -to AREA_OF_INTEREST= options while trying to debug the issue
but it makes no difference with or without it
* The issue is not specific to a +proj=ortho input projection, I'm having
similar issues with an +proj=laea projection

Is there an easy way to fix this? Or could there be an initial first step
that programatically sets the -ovr AUTO-N parameter depending on the size
of the source window that is going to be used?

best regards,
Thomas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200717/48cb9d8a/attachment.html>

From even.rouault at spatialys.com  Fri Jul 17 10:01:36 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 17 Jul 2020 19:01:36 +0200
Subject: [gdal-dev] "wrong" overview selected when warping from ortho to
	webmercator
In-Reply-To: <CAOM3y2i2WVsGbcJuoeSnKep17BMdZ1x7XY2_hrBgOcnkYVHuMA@mail.gmail.com>
References: <CAOM3y2i2WVsGbcJuoeSnKep17BMdZ1x7XY2_hrBgOcnkYVHuMA@mail.gmail.com>
Message-ID: <2566263.kxMeztWWcx@even-i700>

Hi Thomas,

> * I added the -to AREA_OF_INTEREST= options while trying to debug the issue
> but it makes no difference with or without it

Yes, -to AREA_OF_INTEREST is only taken into account for informing PROJ of the area of 
interest in its choice of candidate transformations when datum transformations are involved. 
So completely useless here (and likely in most other cases as well, unless to cut a bit 
computation time in PROJ when researching candidate coordinate transformation pipelines)

> Is there an easy way to fix this? Or could there be an initial first step
> that programatically sets the -ovr AUTO-N parameter depending on the size
> of the source window that is going to be used?

The issue you observe comes from using GDALSuggestedWarpOutput2()
https://github.com/OSGeo/gdal/blob/master/gdal/apps/gdalwarp_lib.cpp#L2308
that looks at reprojecting the whole source dataset, without taking into account the 
potential restriction of the target extent set by -te. I guess using 
GDALWarpOperation::ComputeSourceWindow() instead would be more appropriate. You 
could file a ticket about that.

A workaround (untested) in the mean time could be that you restrict your input dataset as a 
VRT that includes "just" the needed source pixels. You could probably try do that 
automatically with gdal_translate -projwin with bounds in the the target SRS and -projwin_srs 
being that target SRS. However I'm not sure how well it will guess the source pixels (-
projwin_srs effect is quite naive: it just reprojects the upper-left and lower-right corners of -
projwin. No fancy sampling along the edges of the bounding box). So you might need to code 
something smarter to create that source VRT. Or add sufficient margins to coordinates 
passed to projwin so that the VRT includes the needed source pixels.
I'd expect access to overviews of the source file should still work through VRT.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200717/761c6f59/attachment-0001.html>

From thomas.bonfort at gmail.com  Fri Jul 17 13:32:46 2020
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Fri, 17 Jul 2020 22:32:46 +0200
Subject: [gdal-dev] "wrong" overview selected when warping from ortho to
	webmercator
In-Reply-To: <2566263.kxMeztWWcx@even-i700>
References: <CAOM3y2i2WVsGbcJuoeSnKep17BMdZ1x7XY2_hrBgOcnkYVHuMA@mail.gmail.com>
 <2566263.kxMeztWWcx@even-i700>
Message-ID: <CAOM3y2hndQOGRCT9e+9ixRRUN+oeLfFedr77bCHeNJD+Ok0uYg@mail.gmail.com>

Thank you Even for the prompt reply.
I'll have a look into the vrt workaround, in my case the deformations
aren't enormous so applying a buffer at vrt creation time would probably be
sufficient provided the overviews are taken into account.
However for the computesourcewindow proposition which I'd like to look
into, I imagine it would be an explicit option passed into gdalwarp_lib
that would trigger the behaviour; is that in line with your understanding?
Best regards,
Thomas


Le ven. 17 juil. 2020 à 19:01, Even Rouault <even.rouault at spatialys.com> a
écrit :

> Hi Thomas,
>
>
>
> > * I added the -to AREA_OF_INTEREST= options while trying to debug the
> issue
>
> > but it makes no difference with or without it
>
>
>
> Yes, -to AREA_OF_INTEREST is only taken into account for informing PROJ of
> the area of interest in its choice of candidate transformations when datum
> transformations are involved. So completely useless here (and likely in
> most other cases as well, unless to cut a bit computation time in PROJ when
> researching candidate coordinate transformation pipelines)
>
>
>
> > Is there an easy way to fix this? Or could there be an initial first step
>
> > that programatically sets the -ovr AUTO-N parameter depending on the size
>
> > of the source window that is going to be used?
>
>
>
> The issue you observe comes from using GDALSuggestedWarpOutput2()
>
> https://github.com/OSGeo/gdal/blob/master/gdal/apps/gdalwarp_lib.cpp#L2308
>
> that looks at reprojecting the whole source dataset, without taking into
> account the potential restriction of the target extent set by -te. I guess
> using GDALWarpOperation::ComputeSourceWindow() instead would be more
> appropriate. You could file a ticket about that.
>
>
>
> A workaround (untested) in the mean time could be that you restrict your
> input dataset as a VRT that includes "just" the needed source pixels. You
> could probably try do that automatically with gdal_translate -projwin with
> bounds in the the target SRS and -projwin_srs being that target SRS.
> However I'm not sure how well it will guess the source pixels (-projwin_srs
> effect is quite naive: it just reprojects the upper-left and lower-right
> corners of -projwin. No fancy sampling along the edges of the bounding
> box). So you might need to code something smarter to create that source
> VRT. Or add sufficient margins to coordinates passed to projwin so that the
> VRT includes the needed source pixels.
>
> I'd expect access to overviews of the source file should still work
> through VRT.
>
>
>
> Even
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200717/86b09230/attachment.html>

From even.rouault at spatialys.com  Fri Jul 17 13:53:03 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 17 Jul 2020 22:53:03 +0200
Subject: [gdal-dev] "wrong" overview selected when warping from ortho to
	webmercator
In-Reply-To: <CAOM3y2hndQOGRCT9e+9ixRRUN+oeLfFedr77bCHeNJD+Ok0uYg@mail.gmail.com>
References: <CAOM3y2i2WVsGbcJuoeSnKep17BMdZ1x7XY2_hrBgOcnkYVHuMA@mail.gmail.com>
 <2566263.kxMeztWWcx@even-i700>
 <CAOM3y2hndQOGRCT9e+9ixRRUN+oeLfFedr77bCHeNJD+Ok0uYg@mail.gmail.com>
Message-ID: <2562182.KFJgF5G99R@even-i700>

On vendredi 17 juillet 2020 22:32:46 CEST thomas bonfort wrote:
> Thank you Even for the prompt reply.
> I'll have a look into the vrt workaround, in my case the deformations
> aren't enormous so applying a buffer at vrt creation time would probably be
> sufficient provided the overviews are taken into account.

> However for the computesourcewindow proposition which I'd like to look
> into, I imagine it would be an explicit option passed into gdalwarp_lib
> that would trigger the behaviour; is that in line with your understanding?

I was more thinking about replacing the current logic. A ComputeSourceWindow() 
based one should hopefully be superior for all cases

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200717/fa0cec81/attachment.html>

From runette at gmail.com  Sat Jul 18 04:10:49 2020
From: runette at gmail.com (Paul Harwood)
Date: Sat, 18 Jul 2020 12:10:49 +0100
Subject: [gdal-dev] OGR IsRing() not working
Message-ID: <CAE8nN5O8sU7J-s8iBj6vE2YvHxGXiFCN8ehTUuQFv75_aT_UFQ@mail.gmail.com>

Hi

I am using GDAL (actually though the c# swig bindings) to load some GeoJSON
files with features of type LINESTRING25D and POLYGON.

I am using the .IsRing() method to detect if the line features are closed.

This works as intended on the features that are linestrings.

But for some reason it is NOT working on the linear rings from the
polygons, even though they are :

1 Coming out as Geometry objects of type LINESTRING25D - exactly as the
linestrings are, and
2 Are closed in that I can see that the last vertex is exactly the same as
the first vertex.

Do you have any idea what would cause this? I am trying to understand what
would be different in a LINESTRING25D Geometry object that is part of a
POLYGon Geometry object as opposed to one that is not!

Thanks

Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200718/d81f435c/attachment.html>

From rajeshreddy82 at gmail.com  Tue Jul 21 04:19:54 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Tue, 21 Jul 2020 04:19:54 -0700 (MST)
Subject: [gdal-dev] How to destroy/free VSIMEM in C++
Message-ID: <1595330394877-0.post@n6.nabble.com>

Developers,
Below is the GDALVectorTranslate C++ code. I am clearing the vsibuf with
VSIUnlink. But still memory is not vanished. Do we need to call any other
methods?
try
	{
		.....
                ....
		vsibufPath = string("/vsimem/mvt-") + GetUUID();
		vsibuf = vsibufPath.c_str();

		dst = (GDALDataset *)GDALVectorTranslate(vsibuf, NULL, 1, &hSrcDS, opt,
NULL);
	}
	catch (...)
	{
		throw;
	}
        ...
        ...
	GDALVectorTranslateOptionsFree(opt);	
	GDALClose(dst);
	GDALClose(hSrcDS);
        VSIUnlink(vsibuf);


Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Tue Jul 21 06:21:58 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 21 Jul 2020 15:21:58 +0200
Subject: [gdal-dev] How to destroy/free VSIMEM in C++
In-Reply-To: <1595330394877-0.post@n6.nabble.com>
References: <1595330394877-0.post@n6.nabble.com>
Message-ID: <13082600.XHMZH9Rfej@even-i700>

On mardi 21 juillet 2020 04:19:54 CEST MRRAJESH wrote:
> Developers,
> Below is the GDALVectorTranslate C++ code. I am clearing the vsibuf with
> VSIUnlink. But still memory is not vanished. Do we need to call any other
> methods?

I suspect you use the MVT driver here ? In which case it will output a hierarchy 
of files. VSIUnlink() just removes one single file, which is not appropriate then. 
Use VSIRmdirRecursive() instead

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200721/c4a1c8b1/attachment.html>

From rajeshreddy82 at gmail.com  Tue Jul 21 06:55:11 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Tue, 21 Jul 2020 06:55:11 -0700 (MST)
Subject: [gdal-dev] How to destroy/free VSIMEM in C++
In-Reply-To: <13082600.XHMZH9Rfej@even-i700>
References: <1595330394877-0.post@n6.nabble.com>
 <13082600.XHMZH9Rfej@even-i700>
Message-ID: <1595339711494-0.post@n6.nabble.com>

Right, this implementation is for MVT. Objective is to get the
<service>/18/66027/96262.mvt file

We are passing the VRT file as input. Output is vsimem. Options are -
{"-dsco", "TILE_EXTENSION=mvt",
      "-dsco", "COMPRESS=NO", "-dsco", "MINZOOM=18",  "-dsco", "MAXZOOM=18"}

Once we have multiple files in vsimem, opening the specific mvt file
(example - "/vsimem/mvt-<GUID>/18/66027/96262.mvt") are returning with below
code - 

VSILFILE* fp = VSIFOpenL(vsiMemFilename.c_str(), "rb");
		VSIFSeekL(fp, 0, SEEK_END);
		size_t nSize = (size_t)VSIFTellL(fp);
		VSIFSeekL(fp, 0, SEEK_SET);
		void* pRefBuf = CPLMalloc(nSize);
		VSIFReadL(pRefBuf, 1, nSize, fp);
		VSIFCloseL(fp);
		*size = nSize;
		return pRefBuf;

Once we got the file, we want to vanish the vsimem.

Question:
1. VSIRmdirRecursive(vsimem) -will vanish the vsimem?
2. Is above implementation is correct by using GDAL?

Thanks for your time..

Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From isaac.gerg at gergltd.com  Tue Jul 21 09:48:14 2020
From: isaac.gerg at gergltd.com (Isaac Gerg)
Date: Tue, 21 Jul 2020 12:48:14 -0400
Subject: [gdal-dev] Appropriate place to store CEP50 in Geotiff
Message-ID: <CADnN3yVxeYTgK6g=E63k86tA11pL2A25p7=OVJLtsJGaPoHpgg@mail.gmail.com>

Hi,

I am inquiring to know if there is an appropriate place to put a CEP50
(circular error probability 50%) measurement in a geotiff.

Thanks in advance,
Isaac
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200721/fdbfc8a2/attachment.html>

From luis.de.sousa at protonmail.ch  Tue Jul 21 11:02:09 2020
From: luis.de.sousa at protonmail.ch (=?utf-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Tue, 21 Jul 2020 18:02:09 +0000
Subject: [gdal-dev] undefined reference to `json_object_new_array linking
	with libgdal.a
Message-ID: <YChHw1lzZp5zOQ3F6yuodVhex_2-VTy0JwBZ0DnPcjz_1vSsHFE3_WbMvaydE3VLN66d9Izt4Lo_eQFZEMaHJbQkrzFrr73ePH19zMMydPY=@protonmail.ch>

Dear all,

I am trying to compile a programme on Ubuntu 20.04 that links with libgdal.a. The compiler fails with this message:

/usr/bin/ld: /usr/lib/libgdal.a(ogrfeature.o): in function `OGRFeature::GetFieldAsSerializedJSon(int) const':
(.text+0x3861): undefined reference to `json_object_new_array'

If I understand it correctly, this means the json library is not being found. I thus made sure ld can actually find it:

$ ld -ljson --verbose
[...]
==================================================
ld: mode elf_x86_64
attempt to open /usr/local/lib/x86_64-linux-gnu/libjson.so failed
attempt to open /usr/local/lib/x86_64-linux-gnu/libjson.a failed
attempt to open /lib/x86_64-linux-gnu/libjson.so succeeded
/lib/x86_64-linux-gnu/libjson.so
[...]

I also added the -ljson flag but the compiler still fails. Is there something else missing beyond the json library?

Thank you.
--
Luís

Sent with [ProtonMail](https://protonmail.com) Secure Email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200721/f29a738b/attachment.html>

From even.rouault at spatialys.com  Tue Jul 21 14:02:48 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 21 Jul 2020 23:02:48 +0200
Subject: [gdal-dev] undefined reference to `json_object_new_array
	linking with libgdal.a
In-Reply-To: <YChHw1lzZp5zOQ3F6yuodVhex_2-VTy0JwBZ0DnPcjz_1vSsHFE3_WbMvaydE3VLN66d9Izt4Lo_eQFZEMaHJbQkrzFrr73ePH19zMMydPY=@protonmail.ch>
References: <YChHw1lzZp5zOQ3F6yuodVhex_2-VTy0JwBZ0DnPcjz_1vSsHFE3_WbMvaydE3VLN66d9Izt4Lo_eQFZEMaHJbQkrzFrr73ePH19zMMydPY=@protonmail.ch>
Message-ID: <3945235.DHZloAiQEj@even-i700>

Luí­s,

normally GDAL builds out-of-the-box regarding libjson-c on Ubuntu.

You have 2 possibilities, install libjson-c-dev, or let GDAL use its internal 
copy of libjson-c.

In your linking attempts, this should be rather -ljson-c than -ljson, but 
normally you shouldn't have to do that.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200721/2cc1df9a/attachment.html>

From luis.de.sousa at protonmail.ch  Wed Jul 22 01:46:56 2020
From: luis.de.sousa at protonmail.ch (=?utf-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Wed, 22 Jul 2020 08:46:56 +0000
Subject: [gdal-dev] undefined reference to `json_object_new_array
	linking with libgdal.a
In-Reply-To: <3945235.DHZloAiQEj@even-i700>
References: <YChHw1lzZp5zOQ3F6yuodVhex_2-VTy0JwBZ0DnPcjz_1vSsHFE3_WbMvaydE3VLN66d9Izt4Lo_eQFZEMaHJbQkrzFrr73ePH19zMMydPY=@protonmail.ch>
 <3945235.DHZloAiQEj@even-i700>
Message-ID: <I8nU2G9IZ3m5gKb2BKeMQGXvqY1uct0y94tOAQAkBbvK7uaVBByfxh1qsJa9oFW6_-3mPx2gkjvvbBHog1wO2GgBpDNRfWedNi-8sguWhIg=@protonmail.ch>

Hi Even, thank you for the reply.

libjson-c-dev is already installed in the system, and the linker can find it:

$ ld -ljson-c --verbose
[...]
==================================================
ld: mode elf_x86_64
attempt to open /usr/local/lib/x86_64-linux-gnu/libjson-c.so failed
attempt to open /usr/local/lib/x86_64-linux-gnu/libjson-c.a failed
attempt to open /lib/x86_64-linux-gnu/libjson-c.so failed
attempt to open /lib/x86_64-linux-gnu/libjson-c.a failed
attempt to open /usr/lib/x86_64-linux-gnu/libjson-c.so succeeded
/usr/lib/x86_64-linux-gnu/libjson-c.so
[...]

But the compiler still fails in the same way, whether I include the -json-c flag or not. Below is the output with the full compiler command:

g++ -I../../lib/dglib/include -I../../lib/shapelib/include -I../../lib/proj4lib/include -I/usr/include/gdal -O3 -std=c++11 -ljson-c -o dggrid binvals.o dggrid.o quadclip.o transform.o binpres.o gridgen.o DgHexSF.o param.o clipper.o table.o util.o ../../lib/dglib/lib/dglib.a ../../lib/shapelib/lib/shapelib.a ../../lib/proj4lib/lib/proj4lib.a /usr/lib/libgdal.a
/usr/bin/ld: /usr/lib/libgdal.a(shp_vsi.o): in function `SASetupDefaultHooks':
(.text+0x2d0): multiple definition of `SASetupDefaultHooks'; ../../lib/shapelib/lib/shapelib.a(safileio.o):safileio.c:(.text+0xc0): first defined here
/usr/bin/ld: /usr/lib/libgdal.a(ogrfeature.o): in function `OGRFeature::GetFieldAsSerializedJSon(int) const':
(.text+0x3861): undefined reference to `json_object_new_array'

Any other hints welcome. Thank you.

--
Luís

Sent with [ProtonMail](https://protonmail.com) Secure Email.

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐
On Tuesday, July 21, 2020 11:02 PM, Even Rouault <even.rouault at spatialys.com> wrote:

> Luí­s,
>
> normally GDAL builds out-of-the-box regarding libjson-c on Ubuntu.
>
> You have 2 possibilities, install libjson-c-dev, or let GDAL use its internal copy of libjson-c.
>
> In your linking attempts, this should be rather -ljson-c than -ljson, but normally you shouldn't have to do that.
>
> Even
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200722/8dfc6d46/attachment.html>

From even.rouault at spatialys.com  Wed Jul 22 09:16:09 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 22 Jul 2020 18:16:09 +0200
Subject: [gdal-dev] undefined reference to `json_object_new_array
	linking with libgdal.a
In-Reply-To: <I8nU2G9IZ3m5gKb2BKeMQGXvqY1uct0y94tOAQAkBbvK7uaVBByfxh1qsJa9oFW6_-3mPx2gkjvvbBHog1wO2GgBpDNRfWedNi-8sguWhIg=@protonmail.ch>
References: <YChHw1lzZp5zOQ3F6yuodVhex_2-VTy0JwBZ0DnPcjz_1vSsHFE3_WbMvaydE3VLN66d9Izt4Lo_eQFZEMaHJbQkrzFrr73ePH19zMMydPY=@protonmail.ch>
 <3945235.DHZloAiQEj@even-i700>
 <I8nU2G9IZ3m5gKb2BKeMQGXvqY1uct0y94tOAQAkBbvK7uaVBByfxh1qsJa9oFW6_-3mPx2gkjvvbBHog1wO2GgBpDNRfWedNi-8sguWhIg=@protonmail.ch>
Message-ID: <59096231.narxTbckzB@even-i700>

On mercredi 22 juillet 2020 08:46:56 CEST Luí­s Moreira de Sousa wrote:
> Hi Even, thank you for the reply.
> 
> libjson-c-dev is already installed in the system, and the linker can find
> it:
> 
> $ ld -ljson-c --verbose
> [...]
> ==================================================
> ld: mode elf_x86_64
> attempt to open /usr/local/lib/x86_64-linux-gnu/libjson-c.so failed
> attempt to open /usr/local/lib/x86_64-linux-gnu/libjson-c.a failed
> attempt to open /lib/x86_64-linux-gnu/libjson-c.so failed
> attempt to open /lib/x86_64-linux-gnu/libjson-c.a failed
> attempt to open /usr/lib/x86_64-linux-gnu/libjson-c.so succeeded
> /usr/lib/x86_64-linux-gnu/libjson-c.so
> [...]
> 
> But the compiler still fails in the same way, whether I include the -json-c
> flag or not. Below is the output with the full compiler command:
> 
> g++ -I../../lib/dglib/include -I../../lib/shapelib/include
> -I../../lib/proj4lib/include -I/usr/include/gdal -O3 -std=c++11 -ljson-c -o
> dggrid binvals.o dggrid.o quadclip.o transform.o binpres.o gridgen.o
> DgHexSF.o param.o clipper.o table.o util.o ../../lib/dglib/lib/dglib.a
> ../../lib/shapelib/lib/shapelib.a ../../lib/proj4lib/lib/proj4lib.a
> /usr/lib/libgdal.a /usr/bin/ld: /usr/lib/libgdal.a(shp_vsi.o): in function
> `SASetupDefaultHooks': (.text+0x2d0): multiple definition of
> `SASetupDefaultHooks';

Ah sorry I read your initial message too fast. I thought you had an issue building GDAL itself.

The SASetupDefaultHooks issue might come from it being defined in shapelib.a and in GDAL 
too.
Did you build GDAL with --with-hide-internal-symbols ?

Any reason to use static linking ? This is generally an extra pain

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200722/15cb9cce/attachment.html>

From luis.de.sousa at protonmail.ch  Wed Jul 22 11:38:55 2020
From: luis.de.sousa at protonmail.ch (=?utf-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Wed, 22 Jul 2020 18:38:55 +0000
Subject: [gdal-dev] undefined reference to `json_object_new_array
	linking with libgdal.a
In-Reply-To: <59096231.narxTbckzB@even-i700>
References: <YChHw1lzZp5zOQ3F6yuodVhex_2-VTy0JwBZ0DnPcjz_1vSsHFE3_WbMvaydE3VLN66d9Izt4Lo_eQFZEMaHJbQkrzFrr73ePH19zMMydPY=@protonmail.ch>
 <3945235.DHZloAiQEj@even-i700>
 <I8nU2G9IZ3m5gKb2BKeMQGXvqY1uct0y94tOAQAkBbvK7uaVBByfxh1qsJa9oFW6_-3mPx2gkjvvbBHog1wO2GgBpDNRfWedNi-8sguWhIg=@protonmail.ch>
 <59096231.narxTbckzB@even-i700>
Message-ID: <60Oz7IQO5qCar9RK0qW-dLPDT3igL6u6C46q4he_I1sWPCy4ZF48LnkoXKdziv-f0XRo59jn7EX-_AQNlmkQ2-4bbidVkm_FRgOWdu6FENM=@protonmail.ch>

Hi again Even,

I work with GDAL installed from the Ubuntu GIS repository. I could not verify, but I doubt it is compiled with the --with-hide-internal-symbols flag.

This programme includes the Makefiles, I am just trying to compile it with minimal change. I experimented removing the link to shapelib.a, but then none of the shapefile methods are found. So it seems the compiler it is not confusing it with the methods in GDAL.

I hope this is not straying too much from GDAL itself. It has been a few years since I last compiled this programme, but it used to be just plug-and-play.

Thank you.

--
Luís

Sent with [ProtonMail](https://protonmail.com) Secure Email.

‐‐‐‐‐‐‐ Original Message ‐‐‐‐‐‐‐

> Ah sorry I read your initial message too fast. I thought you had an issue building GDAL itself.
>
> The SASetupDefaultHooks issue might come from it being defined in shapelib.a and in GDAL too.
>
> Did you build GDAL with --with-hide-internal-symbols ?
>
> Any reason to use static linking ? This is generally an extra pain
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200722/2e289f7d/attachment-0001.html>

From sebastic at xs4all.nl  Wed Jul 22 20:50:03 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 23 Jul 2020 05:50:03 +0200
Subject: [gdal-dev] undefined reference to `json_object_new_array
 linking with libgdal.a
In-Reply-To: <60Oz7IQO5qCar9RK0qW-dLPDT3igL6u6C46q4he_I1sWPCy4ZF48LnkoXKdziv-f0XRo59jn7EX-_AQNlmkQ2-4bbidVkm_FRgOWdu6FENM=@protonmail.ch>
References: <YChHw1lzZp5zOQ3F6yuodVhex_2-VTy0JwBZ0DnPcjz_1vSsHFE3_WbMvaydE3VLN66d9Izt4Lo_eQFZEMaHJbQkrzFrr73ePH19zMMydPY=@protonmail.ch>
 <3945235.DHZloAiQEj@even-i700>
 <I8nU2G9IZ3m5gKb2BKeMQGXvqY1uct0y94tOAQAkBbvK7uaVBByfxh1qsJa9oFW6_-3mPx2gkjvvbBHog1wO2GgBpDNRfWedNi-8sguWhIg=@protonmail.ch>
 <59096231.narxTbckzB@even-i700>
 <60Oz7IQO5qCar9RK0qW-dLPDT3igL6u6C46q4he_I1sWPCy4ZF48LnkoXKdziv-f0XRo59jn7EX-_AQNlmkQ2-4bbidVkm_FRgOWdu6FENM=@protonmail.ch>
Message-ID: <a87afe96-fbe7-5056-c788-afb3b751f615@xs4all.nl>

On 7/22/20 8:38 PM, Luí s Moreira de Sousa wrote:
> I work with GDAL installed from the Ubuntu GIS repository.

There is no gdal for focal in the UbuntuGIS PPA.

> I could not verify, but I doubt it is compiled with the --with-hide-internal-symbols flag.

The gdal packages in the UbuntuGIS PPA like those in Ubuntu use the same
packaging as in Debian and that uses --with-hide-internal-symbols, see:

 https://salsa.debian.org/debian-gis-team/gdal/-/blob/master/debian/rules#L117

And:

 https://launchpadlibrarian.net/471535809/buildlog_ubuntu-focal-amd64.gdal_3.0.4+dfsg-1build3_BUILDING.txt.gz
 https://launchpadlibrarian.net/468243097/buildlog_ubuntu-bionic-amd64.gdal_3.0.4+dfsg-1~bionic0_BUILDING.txt.gz

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From a.neumann at carto.net  Thu Jul 23 01:28:16 2020
From: a.neumann at carto.net (Andreas Neumann)
Date: Thu, 23 Jul 2020 10:28:16 +0200
Subject: [gdal-dev] Discussing DTM compression in GeoTIFF
Message-ID: <c5ba84c0ed4bb1db2f2134b248d6b930@carto.net>

Hi, 

I was reading through
https://kokoalberti.com/articles/geotiff-compression-optimization-guide/
(very interesting article) and I am wondering about how to interpret
read-speed vs compression. With this article I learned about the
relatively new zstd compression and LERC, which is esp. interesting for
LIDAR/DTM data in float32. 

In general, when you compress more, the read-speed decreases. So an
uncompressed file would read very fast. But isn't this gain in read
speed at the expense that you have to read a substantially higher amount
of data when you use uncompressed or low-compressed data? 

E.g. in the table
https://kokoalberti.com/articles/geotiff-compression-optimization-guide/read_results.png


when you read a float32 dtm with zstd compression, predictor 3 and
zstd_level 9, it shows a substantially lower read rate compared to
predictor 1 (not optimized for float32). But given that predictor 3
compresses substantially better than predictor 1 for float32, isn't the
read-rate "overall" just as good with predictor 3? 

Formulating my question different: isn't the read-rate at
https://kokoalberti.com/articles/geotiff-compression-optimization-guide/read_results.png
a bit distorted by the fact that higher-compression means that you also
have to read substantially smaller file sizes? Shouldn't this table with
the read-rate be kind of "normalized" with the file sizes it has to read
for exactly the same data? 

Currently, it just lists MB/CPU-sec. 

Thanks for the discussion, 

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200723/fb22f2ac/attachment.html>

From andrew at aitchison.me.uk  Thu Jul 23 03:10:23 2020
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 23 Jul 2020 11:10:23 +0100 (BST)
Subject: [gdal-dev] Discussing DTM compression in GeoTIFF
In-Reply-To: <c5ba84c0ed4bb1db2f2134b248d6b930@carto.net>
References: <c5ba84c0ed4bb1db2f2134b248d6b930@carto.net>
Message-ID: <alpine.DEB.2.23.453.2007231031160.24184@warden.aitchison.me.uk>

On Thu, 23 Jul 2020, Andreas Neumann wrote:

> I was reading through
> https://kokoalberti.com/articles/geotiff-compression-optimization-guide/
> (very interesting article) and I am wondering about how to interpret
> read-speed vs compression. With this article I learned about the
> relatively new zstd compression and LERC, which is esp. interesting for
> LIDAR/DTM data in float32. 
> In general, when you compress more, the read-speed decreases. So an
> uncompressed file would read very fast. But isn't this gain in read
> speed at the expense that you have to read a substantially higher amount
> of data when you use uncompressed or low-compressed data? 
> E.g. in the table
> https://kokoalberti.com/articles/geotiff-compression-optimization-guide/read_results.png
>
> when you read a float32 dtm with zstd compression, predictor 3 and
> zstd_level 9, it shows a substantially lower read rate compared to
> predictor 1 (not optimized for float32). But given that predictor 3
> compresses substantially better than predictor 1 for float32, isn't the
> read-rate "overall" just as good with predictor 3? 
> Formulating my question different: isn't the read-rate at
> https://kokoalberti.com/articles/geotiff-compression-optimization-guide/read_results.png
> a bit distorted by the fact that higher-compression means that you also
> have to read substantially smaller file sizes? Shouldn't this table with
> the read-rate be kind of "normalized" with the file sizes it has to read
> for exactly the same data? 
> Currently, it just lists MB/CPU-sec.

I agree that the amount of compressed data to be read back is important
in this sort of analysis.

The "read" test code (from
https://github.com/kokoalberti/geotiff-benchmark/blob/master/gtiff_benchmark.py
) is
         # Run the read tests on the just created file by decompressing
         # it again.
         print("READ test: Running on file '{}'".format(option+'.tif'))
         read_file_output = os.path.join(tmpdir, 'read.tif')
         cmd = ['gdal_translate', '-q', option_file, read_file_output,
                '-co', 'TILED=NO', '-co', 'COMPRESS=NONE']

         try:
             task_clock = perf(cmd=cmd, rep=args.repetitions)
             speed = (1/task_clock) * base_file_size
             print("READ test: Completed {} repetitions. Average time: {:.2f}s Speed: {:.2f}Mb/s".format(args.repetitions, task_clock, speed))
         except Exception as e:
             print("READ test: Failed!")
             task_clock = ''
             speed = ''
         finally:
             results.append('{};{};{};{};;;;{}'.format('read', filename, option, task_clock, speed))

The line
             speed = (1/task_clock) * base_file_size
says that the size of the original uncompressed file has been used to 
calculate the speed. Since the benchmark code, appears
to be timing reading the compressed data from disk(cache), the 
decompression and writing the decompressed data to disk(cache),
this is what you want for an overall performance comparison.

However, the comment
    # Run the read tests on the just created file
suggests to me that they will be cached at some level and will
probably still be in memory somewhere (eg filesystem cache),
unless the python benchmarking system know how to invalidate these 
caches ...

The compression method that gives the best decompression performance
will depend where the compressed data is currently held;
if the file will be decompressed once from internet the compressed
size may be much more important than if there are many partial
decompressions from in memory data.

Back in the 1990s I remember hearing that some decompression
method actually used fewer instrucions than reading the uncompressed
data from disk.

Machine hardware may also make a difference.
Once upon a time the X server on Sun workstations had two
implementations of each primitive, one where memory was faster
than compute and one where compute was faster then memory.
The installer benchmarked each primitive and selected the one
which was faster on the particular machine.

Since then CPU speeds have increased much more than RAM speed,
so there may be a definite winner on current hardware, or it may
mean that the balance point allows more complex decompression algorithms.

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From bjorn.harrtell at gmail.com  Sun Jul 26 08:51:05 2020
From: bjorn.harrtell at gmail.com (=?UTF-8?Q?Bj=C3=B6rn_Harrtell?=)
Date: Sun, 26 Jul 2020 17:51:05 +0200
Subject: [gdal-dev] Problem replicating docker CI (GitHub Actions) locally
Message-ID: <CANhDX=bER83eRUAnTa=73OSg_vwef2u+5O1wW9zwDpSLG=VjUw@mail.gmail.com>

I'm trying to run the same docker build and test run as in
workflow ubuntu_20.04 on GitHub Actions but locally.

Running `docker build -f .github/workflows/ubuntu_20.04/Dockerfile.deps -t
gdal-deps-ubuntu-20.04 .github/workflows/ubuntu_20.04` goes fine.

Running `docker build -f .github/workflows/ubuntu_20.04/Dockerfile -t gdal
.` fails with `/usr/bin/ld: frmts/o/biggifdataset.o: relocation
R_X86_64_PC32 against symbol `_ZTV16BIGGifRasterBand' can not be used when
making a shared object; recompile with -fPIC` on multiple tries.

I'm at Ubuntu 20.04 and Docker 19.03.8 which is not identical to the CI
machine but I guess that should not matter.

Anyone know what might explain this?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200726/94f889ab/attachment.html>

From even.rouault at spatialys.com  Sun Jul 26 09:56:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 26 Jul 2020 18:56:16 +0200
Subject: [gdal-dev] Problem replicating docker CI (GitHub Actions)
	locally
In-Reply-To: <CANhDX=bER83eRUAnTa=73OSg_vwef2u+5O1wW9zwDpSLG=VjUw@mail.gmail.com>
References: <CANhDX=bER83eRUAnTa=73OSg_vwef2u+5O1wW9zwDpSLG=VjUw@mail.gmail.com>
Message-ID: <41996886.WPzIbqY87h@even-i700>

On dimanche 26 juillet 2020 17:51:05 CEST Björn Harrtell wrote:
> I'm trying to run the same docker build and test run as in
> workflow ubuntu_20.04 on GitHub Actions but locally.
> 
> Running `docker build -f .github/workflows/ubuntu_20.04/Dockerfile.deps -t
> gdal-deps-ubuntu-20.04 .github/workflows/ubuntu_20.04` goes fine.
> 
> Running `docker build -f .github/workflows/ubuntu_20.04/Dockerfile -t gdal
> .` fails with `/usr/bin/ld: frmts/o/biggifdataset.o: relocation
> R_X86_64_PC32 against symbol `_ZTV16BIGGifRasterBand' can not be used when
> making a shared object; recompile with -fPIC` on multiple tries.
> 
> I'm at Ubuntu 20.04 and Docker 19.03.8 which is not identical to the CI
> machine but I guess that should not matter.
> 
> Anyone know what might explain this?

Hi Björn,

I'm wondering if the issue might not be that you had already compiled objects in your host 
machine, that have been transfered to the Docker build environment and are incompatible 
with the compiler in it. Perhaps try adding a "make clean" in .github/workflows/
ubuntu_20.04/build.sh before the make ? (ideally we wouldn't copy in the Docker build 
already built objects from the host)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200726/d8aaa954/attachment.html>

From bjorn.harrtell at gmail.com  Sun Jul 26 10:16:10 2020
From: bjorn.harrtell at gmail.com (=?UTF-8?Q?Bj=C3=B6rn_Harrtell?=)
Date: Sun, 26 Jul 2020 19:16:10 +0200
Subject: [gdal-dev] Problem replicating docker CI (GitHub Actions)
	locally
In-Reply-To: <41996886.WPzIbqY87h@even-i700>
References: <CANhDX=bER83eRUAnTa=73OSg_vwef2u+5O1wW9zwDpSLG=VjUw@mail.gmail.com>
 <41996886.WPzIbqY87h@even-i700>
Message-ID: <CANhDX=Y6b+TPkGPk1AbKGmjriiU6pGOrPjtwCGW+gghCzE4sBQ@mail.gmail.com>

Thanks Even, that was it. Didn't realize that it copied the local repo as
is into the container.

Den sön 26 juli 2020 kl 18:56 skrev Even Rouault <even.rouault at spatialys.com
>:

> On dimanche 26 juillet 2020 17:51:05 CEST Björn Harrtell wrote:
>
> > I'm trying to run the same docker build and test run as in
>
> > workflow ubuntu_20.04 on GitHub Actions but locally.
>
> >
>
> > Running `docker build -f .github/workflows/ubuntu_20.04/Dockerfile.deps
> -t
>
> > gdal-deps-ubuntu-20.04 .github/workflows/ubuntu_20.04` goes fine.
>
> >
>
> > Running `docker build -f .github/workflows/ubuntu_20.04/Dockerfile -t
> gdal
>
> > .` fails with `/usr/bin/ld: frmts/o/biggifdataset.o: relocation
>
> > R_X86_64_PC32 against symbol `_ZTV16BIGGifRasterBand' can not be used
> when
>
> > making a shared object; recompile with -fPIC` on multiple tries.
>
> >
>
> > I'm at Ubuntu 20.04 and Docker 19.03.8 which is not identical to the CI
>
> > machine but I guess that should not matter.
>
> >
>
> > Anyone know what might explain this?
>
>
>
> Hi Björn,
>
>
>
> I'm wondering if the issue might not be that you had already compiled
> objects in your host machine, that have been transfered to the Docker build
> environment and are incompatible with the compiler in it. Perhaps try
> adding a "make clean" in .github/workflows/ubuntu_20.04/build.sh before the
> make ? (ideally we wouldn't copy in the Docker build already built objects
> from the host)
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200726/e3f9e9f0/attachment.html>

From rajeshreddy82 at gmail.com  Sun Jul 26 14:53:55 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Sun, 26 Jul 2020 14:53:55 -0700 (MST)
Subject: [gdal-dev] How to improve the performance of VectorTranslate with
 VSIMEM in C++
Message-ID: <1595800435998-0.post@n6.nabble.com>

Developers,

Code is written in C++. It is taking time (say 30 sec to 1 min) for each mvt
file. how to improve the performance.

Objective is to get the <service>/<zoom Level>/<Column>/<Row>.mvt file. Here
each call is a thread.

We are passing the VRT file as input. Output is vsimem. Options are -
{"-dsco", "TILE_EXTENSION=mvt","-dsco", "COMPRESS=NO", "-dsco",
"MINZOOM=zoom level",  "-dsco", "MAXZOOM=zoom level"}

Once we have multiple files in vsimem, opening the specific mvt file
(example - "/vsimem/mvt-<GUID>/18/66027/96262.mvt") and returning to client
with below
code -

VSILFILE* fp = VSIFOpenL(vsiMemFilename.c_str(), "rb");
                VSIFSeekL(fp, 0, SEEK_END);
                size_t nSize = (size_t)VSIFTellL(fp);
                VSIFSeekL(fp, 0, SEEK_SET);
                void* pRefBuf = CPLMalloc(nSize);
                VSIFReadL(pRefBuf, 1, nSize, fp);
                VSIFCloseL(fp);
                *size = nSize;
                return pRefBuf;

Since "VSIFReadL" method is not available in C#, we moved to C++.

Questions:

1. Is above implementation is correct by using GDAL for each thread call?
2. It is taking time (say 30 sec to 1 min) for each thread, how to improve
performance.
3. can we expect "VSIFReadL" in C# libraries in coming releases?


Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From rajeshreddy82 at gmail.com  Mon Jul 27 06:00:52 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Mon, 27 Jul 2020 06:00:52 -0700 (MST)
Subject: [gdal-dev] How to skip the creation of metadata.json in
 GDALVectorTranslate with C++
Message-ID: <1595854852130-0.post@n6.nabble.com>

Developers,

I am using C++ GDALVectorTranslate to translate from vrt to mvt. I want to
skip the creation of metadata.json. How?

dst = (GDALDataset *)GDALVectorTranslate(C:\\Temp\\Tests, NULL, 1, &hSrcDS,
opt, NULL);

Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From rajeshreddy82 at gmail.com  Tue Jul 28 02:57:12 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Tue, 28 Jul 2020 02:57:12 -0700 (MST)
Subject: [gdal-dev] VRT performance Improvement
Message-ID: <1595930232624-0.post@n6.nabble.com>

Developers,

We are using VRT file (located in physical disk) as input to
GDALVectorTranslate in C++. This VRT file pointing JSON file, which is
little bigger size. How to improve the performance?

const char *pszFilename = "C:\\Test\\MVT.vrt";	
hSrcDS = (GDALDatasetH *)GDALOpenEx(pszFilename, GDAL_OF_READONLY, NULL,
NULL, NULL);

dst = (GDALDataset *)GDALVectorTranslate(vsibuf, NULL, 1, &hSrcDS, opt,
NULL);

*VRT FILE:*

OGRVRTDataSource>
  <OGRVRTLayer name="Administrative">
    <SrcDataSource relativeToVRT="1">features.json</SrcDataSource>
    <SrcSQL dialect="sqlite">SELECT * FROM "features" WHERE LegendEntryName 
    IN("V_XX_AR","V_XX_LB","V_DOCIND_PT","V_XX_ML")</SrcSQL>
   </OGRVRTLayer>
.....
....


Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Tue Jul 28 10:30:10 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Tue, 28 Jul 2020 10:30:10 -0700 (MST)
Subject: [gdal-dev] VRT performance Improvement
In-Reply-To: <1595930232624-0.post@n6.nabble.com>
References: <1595930232624-0.post@n6.nabble.com>
Message-ID: <1595957410684-0.post@n6.nabble.com>

Hi,

I guess that the slowest part is not VRT but your SQL
SELECT * FROM "features" WHERE LegendEntryName 
    IN("V_XX_AR","V_XX_LB","V_DOCIND_PT","V_XX_ML") because GeoJSON does not
support attribute indexes. I would have a try by converting GeoJSON into
GeoPackage or any other database format. Remember to create the index as
well

ogrinfo -sql "create index legendentryname_idx on my_table(legententryname)"
my_geopackage.gpkg

Running attribute queries without index is so expensive that it is waste of
time to begin to optimize anything else. I do not know if GDAL has methods
for creating temporary attribute indexes so that you would not need to
convert GeoJSON physically into some other format.

-Jukka Rahkonen-


MRRAJESH wrote
> Developers,
> 
> We are using VRT file (located in physical disk) as input to
> GDALVectorTranslate in C++. This VRT file pointing JSON file, which is
> little bigger size. How to improve the performance?
> 
>          const char *pszFilename = "C:\\Test\\MVT.vrt";	
>          hSrcDS = (GDALDatasetH *)GDALOpenEx(pszFilename,
> GDAL_OF_READONLY, NULL,NULL, NULL);
> 
>          dst = (GDALDataset *)GDALVectorTranslate(vsibuf, NULL, 1,
> &hSrcDS, opt,NULL);
> 
> *VRT FILE:*
> 
> OGRVRTDataSource>
>   
> <OGRVRTLayer name="Administrative">
>     
> <SrcDataSource relativeToVRT="1">
> features.json
> </SrcDataSource>
>     
> <SrcSQL dialect="sqlite">
> SELECT * FROM "features" WHERE LegendEntryName 
>     IN("V_XX_AR","V_XX_LB","V_DOCIND_PT","V_XX_ML")
> </SrcSQL>
>    
> </OGRVRTLayer>
> .....
> ....
> 
> 
> Regards,
> Rajesh
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From rajeshreddy82 at gmail.com  Tue Jul 28 11:18:00 2020
From: rajeshreddy82 at gmail.com (MRRAJESH)
Date: Tue, 28 Jul 2020 11:18:00 -0700 (MST)
Subject: [gdal-dev] VRT performance Improvement
In-Reply-To: <1595957410684-0.post@n6.nabble.com>
References: <1595930232624-0.post@n6.nabble.com>
 <1595957410684-0.post@n6.nabble.com>
Message-ID: <1595960280653-0.post@n6.nabble.com>

@Even or Developers,

Please confirm on -

 "GDAL has methods for creating temporary attribute indexes so that we would
not need to convert GeoJSON physically into some other format."

Do we need to convert GeoJSON to some other format for better performance? 

Regards,
Rajesh



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From prasunkgupta at gmail.com  Wed Jul 29 23:44:44 2020
From: prasunkgupta at gmail.com (Prasun Kumar Gupta)
Date: Thu, 30 Jul 2020 12:14:44 +0530
Subject: [gdal-dev] Query regarding using gdalwarp with cutlineSQL
Message-ID: <CAJaf+gHX2sxfThXWYoOkGJ_0n+G94mf=F8L56nQQuX8CYZRN9A@mail.gmail.com>

 Hi,

I am trying to clip a raster using a polygon layer. I want to specify a
where clause to select one polygon feature from the polygon layer and
subset the raster *only *for that one polygon feature.

I am not getting the intended results with this line of code:

ds = gdal.Warp('output.tif', 'input.tif', format = 'GTiff', \
               cutlineDSName = 'parcel.shp', \
               cutlineSQL = 'SELECT * FROM parcel', \
               cutlineWhere = 'name = "first"')
if ds is None:
    print('Failed')else:
    print('Success')# prints Success but gives same result as without
the cutlineSQL and cutlineWhere options

Problem is also explained in detail on StackExchange
<https://gis.stackexchange.com/questions/369065/incorrect-results-while-cropping-with-gdalwarp-and-cutlinesql>
(with screenshots and sample data).
Could someone please let me know what I am missing?

Regards,
Prasun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200730/89951161/attachment.html>

From jlaegel at gbi-info.de  Fri Jul 31 01:20:18 2020
From: jlaegel at gbi-info.de (jlaegel)
Date: Fri, 31 Jul 2020 01:20:18 -0700 (MST)
Subject: [gdal-dev] How can I use RawCodeValues in DXF driver?
Message-ID: <1596183618418-0.post@n6.nabble.com>

Hello,

I create a new DXF file, and want to use the RawCodeValues field.
but I can't get it in the output DXF.

Procedure:
- MS-SQL-Server
- GDAL version 3.0.0

-a table on the SQL-Server with fields:
   layer AS nvarchar(max),
   RawCodeValues AS nvarchar(max),
   ogr_style AS nvarchar(max),
   blockname AS nvarchar(max),
   blockscale AS nvarchar(max),
   blockangle AS int,
   the_geom AS geometry

- input command line: (* replace the original input)

/ogr2ogr --config DXF_INCLUDE_RAW_CODE_VALUES TRUE -f DXF
C:\***\***\***\test.dxf -dsco
header=C:\ogr2ogr\gdal\bin\gdal-data\header.dxf -dsco
trailer=C:\ogr2ogr\gdal\bin\gdal-data\trailer.dxf
"MSSQL:server=**.**.**.**;driver=SQL Server;database=****;
Uid=***;Pwd=******; tables=dbo.*****(the_geom)"/

This procedure works itself for the DXF output with the values in
"ogr_style" or "blockname".
But the value in the tablefield "RawCodeValues" is ignored.

Example of SQL-Table content: (line geometry)
layer|RawCodeValues|ogr_style|blockname|blockscale|blockangle
test|43=1.0|PEN(c:#cecece)|NULL|NULL|NULL

In this example i need *constant width* in line geometry.
In DXF, the line is available with color #cecece, but without constant
width.

I have read that the content in "RawCodeValues" should be "code = value [,
code = value]*".

Is my content/syntax for RawCodeValues in the tablefield correct?

Or what do I have to set so the output with RawCodeValues works?

The "Pen Width" in "ogr_style" isn't an option for me, because that is the
weight in DXF and not all values are allowed.




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From alpacagis at gmail.com  Fri Jul 31 06:04:45 2020
From: alpacagis at gmail.com (Federico Gianoli)
Date: Fri, 31 Jul 2020 15:04:45 +0200
Subject: [gdal-dev] Specify data type on opening a netcdf
Message-ID: <CAO9K6eoL5WpRDdQaXjfifnj+Dk-y8bFTm_0WPF=nV7gPH5js6Q@mail.gmail.com>

Dear all,
I have an issue opening a netcdf with gdal. I should declare the data type
of my raster in gdal.Open().

The Netcdf data type is declared in the metadata as "Float", but GDAL reads
this information as Float64 and not as Float32. This reading error
misinterprets my decimal values causing rounding errors.

float 32 to float64 (wrong):
[0.9160000518, 0.920000052] > 0.92 --> [False, True] WRONG

flaot32 to float32 (correct):
[0.916, 0.92] > 0.92 --> [False, False] CORRECT


Is there a way to specify the input data type?
I'm not able to find a solution to this.

Regards

Federico
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200731/148166c3/attachment.html>

From even.rouault at spatialys.com  Fri Jul 31 06:37:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 31 Jul 2020 15:37:32 +0200
Subject: [gdal-dev] Specify data type on opening a netcdf
In-Reply-To: <CAO9K6eoL5WpRDdQaXjfifnj+Dk-y8bFTm_0WPF=nV7gPH5js6Q@mail.gmail.com>
References: <CAO9K6eoL5WpRDdQaXjfifnj+Dk-y8bFTm_0WPF=nV7gPH5js6Q@mail.gmail.com>
Message-ID: <2047398.qA6QjXz3UG@even-i700>

On vendredi 31 juillet 2020 15:04:45 CEST Federico Gianoli wrote:
> Dear all,
> I have an issue opening a netcdf with gdal. I should declare the data type
> of my raster in gdal.Open().
> 
> The Netcdf data type is declared in the metadata as "Float", but GDAL reads
> this information as Float64 and not as Float32. This reading error
> misinterprets my decimal values causing rounding errors.
> 
> float 32 to float64 (wrong):
> [0.9160000518, 0.920000052] > 0.92 --> [False, True] WRONG
> 
> flaot32 to float32 (correct):
> [0.916, 0.92] > 0.92 --> [False, False] CORRECT
> 
> 
> Is there a way to specify the input data type?

No. What do you mean by "The Netcdf data type is declared in the metadata as "Float"" ? Is 
this some text attribute that would override the native data type, which would be Float64 ? 
the GDAL netCDF driver has proper support for both Float32 or Float64 based on the data 
types of variable.
If you need to override it, your best option is to use the -ot Float32 switch of gdal_translate 
to down cast.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200731/42775bd5/attachment.html>

From alpacagis at gmail.com  Fri Jul 31 08:01:46 2020
From: alpacagis at gmail.com (Federico Gianoli)
Date: Fri, 31 Jul 2020 17:01:46 +0200
Subject: [gdal-dev] Specify data type on opening a netcdf
In-Reply-To: <2047398.qA6QjXz3UG@even-i700>
References: <CAO9K6eoL5WpRDdQaXjfifnj+Dk-y8bFTm_0WPF=nV7gPH5js6Q@mail.gmail.com>
 <2047398.qA6QjXz3UG@even-i700>
Message-ID: <CAO9K6epD+HQ0Fi-p7sPwm4Mi1=tNuvf1qm13vpUs5UA_U-BZMA@mail.gmail.com>

Thanks Even,

If I look at the metadata of my netcdf, the values of "offset" and "scale
factor" are in float64 instead of float32. So the correct values to read
should be -0.08 as offset and 0.004 as scale factor.
If I open the netcdf in SNAP, for example, I am able to correctly see this
information. So, I suppose that, by default, gdal reads metadata values  in
float64 instead of 32bit, and I would like to know if there is a way to
force gdal to read these values as float32.

  NC_GLOBAL#title=10-daily Normalized Difference Vegetation Index 333M:
GLOBE 2020-06-21T00:00:00Z
  NDVI#add_offset=-0.079999998
  NDVI#flag_meanings=Missing cloud snow sea background
  NDVI#flag_values={251,252,253,254,255}
  NDVI#grid_mapping=crs
  NDVI#missing_value=255
  NDVI#scale_factor=0.0040000002
  NDVI#valid_range={0,250}
  NDVI#_FillValue=255

Band 1 Block=3270x1272 Type=Byte, ColorInterp=Undefined
  NoData Value=255
  Offset: -0.0799999982118607,   Scale:0.00400000018998981
  Metadata:
    add_offset=-0.079999998
    flag_meanings=Missing cloud snow sea background
    flag_values={251,252,253,254,255}
    grid_mapping=crs
    long_name=Normalized Difference Vegetation Index 333M
    missing_value=255
    NETCDF_VARNAME=NDVI
    scale_factor=0.0040000002
    valid_range={0,250}
    _FillValue=255



Il giorno ven 31 lug 2020 alle ore 15:37 Even Rouault <
even.rouault at spatialys.com> ha scritto:

> On vendredi 31 juillet 2020 15:04:45 CEST Federico Gianoli wrote:
>
> > Dear all,
>
> > I have an issue opening a netcdf with gdal. I should declare the data
> type
>
> > of my raster in gdal.Open().
>
> >
>
> > The Netcdf data type is declared in the metadata as "Float", but GDAL
> reads
>
> > this information as Float64 and not as Float32. This reading error
>
> > misinterprets my decimal values causing rounding errors.
>
> >
>
> > float 32 to float64 (wrong):
>
> > [0.9160000518, 0.920000052] > 0.92 --> [False, True] WRONG
>
> >
>
> > flaot32 to float32 (correct):
>
> > [0.916, 0.92] > 0.92 --> [False, False] CORRECT
>
> >
>
> >
>
> > Is there a way to specify the input data type?
>
>
>
> No. What do you mean by "The Netcdf data type is declared in the metadata
> as "Float"" ? Is this some text attribute that would override the native
> data type, which would be Float64 ? the GDAL netCDF driver has proper
> support for both Float32 or Float64 based on the data types of variable.
>
> If you need to override it, your best option is to use the -ot Float32
> switch of gdal_translate to down cast.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20200731/cef0a32d/attachment.html>

From andrew at aitchison.me.uk  Fri Jul 31 09:21:45 2020
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 31 Jul 2020 17:21:45 +0100 (BST)
Subject: [gdal-dev] Specify data type on opening a netcdf
In-Reply-To: <CAO9K6epD+HQ0Fi-p7sPwm4Mi1=tNuvf1qm13vpUs5UA_U-BZMA@mail.gmail.com>
References: <CAO9K6eoL5WpRDdQaXjfifnj+Dk-y8bFTm_0WPF=nV7gPH5js6Q@mail.gmail.com>
 <2047398.qA6QjXz3UG@even-i700>
 <CAO9K6epD+HQ0Fi-p7sPwm4Mi1=tNuvf1qm13vpUs5UA_U-BZMA@mail.gmail.com>
Message-ID: <alpine.DEB.2.23.453.2007311711350.85826@warden.aitchison.me.uk>

On Fri, 31 Jul 2020, Federico Gianoli wrote:

> Thanks Even,
>
> If I look at the metadata of my netcdf, the values of "offset" and "scale
> factor" are in float64 instead of float32. So the correct values to read
> should be -0.08 as offset and 0.004 as scale factor.
> If I open the netcdf in SNAP, for example, I am able to correctly see this
> information. So, I suppose that, by default, gdal reads metadata values  in
> float64 instead of 32bit, and I would like to know if there is a way to
> force gdal to read these values as float32.
>
>  NC_GLOBAL#title=10-daily Normalized Difference Vegetation Index 333M:
> GLOBE 2020-06-21T00:00:00Z
>  NDVI#add_offset=-0.079999998
>  NDVI#flag_meanings=Missing cloud snow sea background
>  NDVI#flag_values={251,252,253,254,255}
>  NDVI#grid_mapping=crs
>  NDVI#missing_value=255
>  NDVI#scale_factor=0.0040000002
>  NDVI#valid_range={0,250}
>  NDVI#_FillValue=255

Does SNAP allow you to display the values with more precision ?
If they were exactly -0.08 and 0.004 before conversion to Float64
the values actually stored will be more like -0.08000000000000000167
and 0.00400000000000000008 (printed in C with "%.20lf")

Could the initial data have been Float32, converted to Float64
to be stored in the netcdf ?

I guess what you really want is for gdal to read in Float64 data and 
convert it to Float32 for processing/outout ?
Evan's suggestion of "-ot Flat32" will give you 32bit output.

>> No. What do you mean by "The Netcdf data type is declared in the metadata
>> as "Float"" ? Is this some text attribute that would override the native
>> data type, which would be Float64 ? the GDAL netCDF driver has proper
>> support for both Float32 or Float64 based on the data types of variable.
>>
>> If you need to override it, your best option is to use the -ot Float32
>> switch of gdal_translate to down cast.

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From lukepinnerau at gmail.com  Fri Jul 31 14:40:36 2020
From: lukepinnerau at gmail.com (Luke)
Date: Fri, 31 Jul 2020 14:40:36 -0700 (MST)
Subject: [gdal-dev] Query regarding using gdalwarp with cutlineSQL
In-Reply-To: <CAJaf+gHX2sxfThXWYoOkGJ_0n+G94mf=F8L56nQQuX8CYZRN9A@mail.gmail.com>
References: <CAJaf+gHX2sxfThXWYoOkGJ_0n+G94mf=F8L56nQQuX8CYZRN9A@mail.gmail.com>
Message-ID: <1596231636200-0.post@n6.nabble.com>

You need  single quotes around your string literal:

cutlineWhere="name = 'first'"



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

