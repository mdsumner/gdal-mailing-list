From ari.jolma at gmail.com  Fri Apr  1 01:38:48 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 1 Apr 2016 11:38:48 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <56EE5D96.8060808@gmail.com>
References: <56EE5D96.8060808@gmail.com>
Message-ID: <56FE3398.3070006@gmail.com>

I've got this into a rather nice working shape. The code needs to be 
reorganized (it is now, horror, all in header files) but that's another 
thing.

I've so far built this around a basic DEM catchment analysis workflow. 
It includes many kinds of steps so it is a pretty good benchmark. In 
pseudo code the workflow is something like

dem = open_from_file
dem->fill_depressions
fd = dem->compute_flow_directions
fd->route_flat_cells
ua = fd->compute_upstream_area
c = new_raster // compute the catchment into this
c->set_border_cells // we're interested in the outlet cells
c *= ua
c *= c > 10000 // we're interested in the big catchments
outlets = c->get_cells // outlets is an array of cells, and a cell is an 
object containing (x,y,value)
c = 0
c->mark_catchment(fd, outlets[0], 1) // assuming the outlet cell is now 
in outlets[0]
ua2 = new_raster // for visualization log of upstream area is nice
ua2 += ua
ua2->log

The C code is of course not this nice but it is not very far from this. 
All the basic four method types I mention below are implemented and 
adding new methods is not very difficult. The code makes heavy use of 
templates and macros in an attempt for versatility (GDAL rasters can 
have many datatypes) and easiness to write methods in a few lines of 
code. The whole set of code is now ~2500 lines but it creates rather 
large executables due to templates. The code is C++ but the API is C 
like, I've so far done no changes to existing GDAL code because of this.

As written below, the code works on two levels of x,y loops: the blocks 
within a band, which is generic and cells within a block, which is 
separate for each method. The methods work on line by line (no recursion 
etc.) and thus for example the fill_depressions is not optimal but 
instead very simple. Also, very large rasters can be processed.

I think this may be somewhat similar thing in relation to GDAL as the 
network support, so it could be a thing to add to the library if wished.

I've added RFC 62 "raster algebra" to spark discussion.

Ari


20.03.2016, 10:21, Ari Jolma kirjoitti:
> Folks,
>
> I played around a bit with the map algebra idea and came up with 
> something that could work nicely as a plugin. The initial code is at 
> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>
> The idea is based on processing raster bands block by block and 
> calling a given function on each block. Using macros and templates the 
> code should be rather nice and manageable even when supporting 
> multiple data types for raster cells.
>
> Further, the idea is to support three kinds of map algebra methods, 
> mostly working on a raster band in-place.
>
> 1) Simple ones, which do not take any arguments beyond the raster band 
> itself, examples are functions like log, sin, rand.
>
> 2) Those which take one non-spatial argument. The argument can be a 
> scalar like a number, or more complex like a reclassifier.
>
> 3) Those which operate on two rasters. Examples are summation of 
> rasters and computing flow directions on a DEM. The latter is a bit 
> more complex since it is a focal method and requires a 3 x 3 matrix of 
> blocks from the other operand raster.
>
> Maybe a fourth kind of methods are those which compute something from 
> a raster.
>
> This would lead to four functions in the C API and raster band methods 
> in the bindings.
>
> Comments are welcome, the initial code base contains a small demo 
> program. Eventually, if this works, I'll make a RFC from this.
>
> Ari
>


From giuseppe.amatulli at gmail.com  Fri Apr  1 10:00:16 2016
From: giuseppe.amatulli at gmail.com (Giuseppe Amatulli)
Date: Fri, 1 Apr 2016 13:00:16 -0400
Subject: [gdal-dev] Summers schools in Geo-Data Processing
Message-ID: <CAKoiDH+XDg8sU_UkZacMDaHkxTM_Vn3p+y9NCtk7bUVt1oVe_A@mail.gmail.com>

Apologies for cross-posting:

We are pleased to announce: *R**egistration open now for two Summer Schools*
organized by www.spatial-ecology.net held at the University of Basilicata,
Matera, Italy:

*- Spatio-Temporal Data Analyses Using Free and Open Source Software
**(6th-10th
June 2016)*

*An immersion 5 day experience opening new horizons on the use of the vast
potentials of the Linux environment and the command line approach to
process data using Bash, AWK, Python, GRASS, QGIS, GDAL/OGR, R, PKtools,
Openforis. **We will guide newbies who have never used a command line
terminal to a stage which will allow them to understand and use very
advanced open source data processing routines. Our focus is to enhance the
approach of self-learning allowing participants to keep on progressing and
updating their skills in a continuously evolving technological environment.*

*----------------------------------------------------*

*- Hands-on Open Source Drone Mapping and High Performance Computing for
Big Geo-Data **(13th-17th June 2016)*

*Another 5 day immersion experience on advanced data processing using high
performance computers (HPC) and emerging technologies such as drone
mapping, rasdaman (Fastest Array Database on Earth) and cloud computing. We
provide a walk-through journey from the introduction of Linux operating
system and different open source software (Python, GRASS, GDAL/OGR, R,
PKtools, Openforis) to capturing data out in the field using an Unmanned
Aerial Vehicle, to complex image processing and data analyses. We focus on
how maximising computation performance using multicore on single computer,
switching to distributed clusters of computers (using grid engine
scheduler) and ultimately data analytics with cutting edge rasdaman
software (Big Data Analytics Server).*


More information and registrations:

www.spatial-ecology.net/upcoming-events

https://www.facebook.com/spatialecology
<http://www.spatial-ecology.net/upcoming-events>> see events
info at spatial-ecology.net

-- 
Giuseppe Amatulli, Ph.D.

Department of Ecology and Evolutionary Biology, Yale University.
Jetz Lab, OML Room 405

P.O. Box 208106
165 PROSPECT ST
New Haven, CT 06520-8106
Teaching: spatial-ecology.net
Work:  http://sbsc.yale.edu/giuseppe-amatulli
<http://www.spatial-ecology.net>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160401/b631ee27/attachment.html>

From even.rouault at spatialys.com  Fri Apr  1 10:18:36 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Apr 2016 19:18:36 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 Beta 1 Available
Message-ID: <201604011918.36724.even.rouault@spatialys.com>

Hi,

Despite the date, I do have prepared the GDAL/OGR 2.1.0 Beta1 release.  It 
will potentially be followed by a second beta in the second half of this 
month, or directly by a RC1 if things go well.  The source is available at:

   http://download.osgeo.org/gdal/2.1.0beta1/gdal-2.1.0beta1.tar.xz
   http://download.osgeo.org/gdal/2.1.0beta1/gdal-2.1.0beta1.tar.gz
   http://download.osgeo.org/gdal/2.1.0beta1/gdal210beta1.zip

A snapshot of the Python autotest suite can be downloaded from:

   http://download.osgeo.org/gdal/2.1.0beta1/gdalautotest-2.1.0beta1.tar.gz
   http://download.osgeo.org/gdal/2.1.0beta1/gdalautotest-2.1.0beta1.zip

The preliminary NEWS is available at :
     http://svn.osgeo.org/gdal/trunk/gdal/NEWS

New bugs found should be filed in Trac normally.

   http://trac.osgeo.org/gdal

GDAL developers and users are encouraged to treat the coming weeks
as the prime time for bug finding and fixing.

GDAL committers should be even more careful than usually about what they 
commit in this period before the actual release. I haven't yet created a 2.1 
branch, so anything that is committed into trunk for now will be in final 2.1. 
If that blocks development for anyone, we can easily create the 2.1 branch 
when needed.

For Ari mostly:
Regarding Perl bindings, the usual mkgdaldist.sh script had an issue when 
generated the bindings file, because swig/perl/include/perl/typemaps_perl.i 
requires port/cpl_config.h to be generated. But the script runs on a svn 
export, so without any generated file. So for now I commented out the part that 
tries to generate the Perl bindings, so as to go on.
The likely consequence is that ./configure --with-perl && make fails with 
"Use of uninitialized value $ARGV{"--gdal-source-tree"} in string eq at 
Makefile.PL line 61.
GDAL Perl modules not found, perhaps you need to run make generate? at 
Makefile.PL line 77.""
But manual cd swig/perl && make works
Ari, would you mind looking at that (by trying mkgdaldist.sh) ?

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From pero.brbora at stud.unidu.hr  Fri Apr  1 10:36:41 2016
From: pero.brbora at stud.unidu.hr (Pero Brbora)
Date: Fri, 01 Apr 2016 19:36:41 +0200
Subject: [gdal-dev] Improving ogr dxf driver spline reader
Message-ID: <20160401193641.Horde.sGJQCfCclwBW-rGpB8n37PA@webmail.carnet.hr>

Hi,

I would like to improve ogr dxf driver spline reader. I have created  
few test files and found mistakes in source code. Current spline  
reader creates splines only from control points, and then tries to  
recreate knots and sets weights to 1. From my understanding of splines  
they are completely defined with control points, knots and weights -  
and all this data can be read from dxf file.

Is it ok to:
first) submit ticket with description and test files
second) submit pull request which targets autotest part of gdal and  
adds tests which show that current implementation fails
third) submit pull request which targets ogr dxf dxf driver and fixes  
all of the above

Is this correct approach for contributing to gdal?

Thanks, bye


From sean at mapbox.com  Fri Apr  1 10:44:15 2016
From: sean at mapbox.com (Sean Gillies)
Date: Fri, 1 Apr 2016 11:44:15 -0600
Subject: [gdal-dev] GDAL/OGR 2.1.0 Beta 1 Available
In-Reply-To: <201604011918.36724.even.rouault@spatialys.com>
References: <201604011918.36724.even.rouault@spatialys.com>
Message-ID: <CADPhZXx7nECjZBocMWsshtkzLjusry-Z957GCSTpKARunVLYjw@mail.gmail.com>

Excellent, Even. 🎩

I'm add 2.1beta1 to the Rasterio build matrix right now.

On Fri, Apr 1, 2016 at 11:18 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> Despite the date, I do have prepared the GDAL/OGR 2.1.0 Beta1 release.  It
> will potentially be followed by a second beta in the second half of this
> month, or directly by a RC1 if things go well.  The source is available at:
>
>    http://download.osgeo.org/gdal/2.1.0beta1/gdal-2.1.0beta1.tar.xz
>    http://download.osgeo.org/gdal/2.1.0beta1/gdal-2.1.0beta1.tar.gz
>    http://download.osgeo.org/gdal/2.1.0beta1/gdal210beta1.zip
>
> A snapshot of the Python autotest suite can be downloaded from:
>
>
> http://download.osgeo.org/gdal/2.1.0beta1/gdalautotest-2.1.0beta1.tar.gz
>    http://download.osgeo.org/gdal/2.1.0beta1/gdalautotest-2.1.0beta1.zip
>
> The preliminary NEWS is available at :
>      http://svn.osgeo.org/gdal/trunk/gdal/NEWS
>
> New bugs found should be filed in Trac normally.
>
>    http://trac.osgeo.org/gdal
>
> GDAL developers and users are encouraged to treat the coming weeks
> as the prime time for bug finding and fixing.
>
> GDAL committers should be even more careful than usually about what they
> commit in this period before the actual release. I haven't yet created a
> 2.1
> branch, so anything that is committed into trunk for now will be in final
> 2.1.
> If that blocks development for anyone, we can easily create the 2.1 branch
> when needed.
>
> For Ari mostly:
> Regarding Perl bindings, the usual mkgdaldist.sh script had an issue when
> generated the bindings file, because swig/perl/include/perl/typemaps_perl.i
> requires port/cpl_config.h to be generated. But the script runs on a svn
> export, so without any generated file. So for now I commented out the part
> that
> tries to generate the Perl bindings, so as to go on.
> The likely consequence is that ./configure --with-perl && make fails with
> "Use of uninitialized value $ARGV{"--gdal-source-tree"} in string eq at
> Makefile.PL line 61.
> GDAL Perl modules not found, perhaps you need to run make generate? at
> Makefile.PL line 77.""
> But manual cd swig/perl && make works
> Ari, would you mind looking at that (by trying mkgdaldist.sh) ?
>
> Best regards,
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160401/7c5e5cea/attachment.html>

From even.rouault at spatialys.com  Fri Apr  1 10:55:12 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Apr 2016 19:55:12 +0200
Subject: [gdal-dev] Improving ogr dxf driver spline reader
In-Reply-To: <20160401193641.Horde.sGJQCfCclwBW-rGpB8n37PA@webmail.carnet.hr>
References: <20160401193641.Horde.sGJQCfCclwBW-rGpB8n37PA@webmail.carnet.hr>
Message-ID: <201604011955.12489.even.rouault@spatialys.com>

Le vendredi 01 avril 2016 19:36:41, Pero Brbora a écrit :
> Hi,
> 
> I would like to improve ogr dxf driver spline reader. I have created
> few test files and found mistakes in source code. Current spline
> reader creates splines only from control points, and then tries to
> recreate knots and sets weights to 1. From my understanding of splines
> they are completely defined with control points, knots and weights -
> and all this data can be read from dxf file.
> 
> Is it ok to:
> first) submit ticket with description and test files
> second) 

Screenshots of a reader that correctly displays the splines attached to the 
ticket can be useful to check that the proposed fix looks good.

> submit pull request which targets autotest part of gdal and
> adds tests which show that current implementation fails
> third) submit pull request which targets ogr dxf dxf driver and fixes
> all of the above

The usual practice is a single pull request with driver fix + small samples + 
new tests with the (fixed) expected result (and/or fixes to existing tests that 
would have been wrong previously)

> 
> Is this correct approach for contributing to gdal?
> 
> Thanks, bye
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ari.jolma at gmail.com  Fri Apr  1 23:03:02 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 2 Apr 2016 09:03:02 +0300
Subject: [gdal-dev] GDAL/OGR 2.1.0 Beta 1 Available
In-Reply-To: <201604011918.36724.even.rouault@spatialys.com>
References: <201604011918.36724.even.rouault@spatialys.com>
Message-ID: <56FF6096.7050803@gmail.com>

01.04.2016, 20:18, Even Rouault kirjoitti:
> Hi,
>
> Despite the date, I do have prepared the GDAL/OGR 2.1.0 Beta1 release.  It
> will potentially be followed by a second beta in the second half of this
> month, or directly by a RC1 if things go well.  The source is available at:
>
>     http://download.osgeo.org/gdal/2.1.0beta1/gdal-2.1.0beta1.tar.xz
>     http://download.osgeo.org/gdal/2.1.0beta1/gdal-2.1.0beta1.tar.gz
>     http://download.osgeo.org/gdal/2.1.0beta1/gdal210beta1.zip
>
> A snapshot of the Python autotest suite can be downloaded from:
>
>     http://download.osgeo.org/gdal/2.1.0beta1/gdalautotest-2.1.0beta1.tar.gz
>     http://download.osgeo.org/gdal/2.1.0beta1/gdalautotest-2.1.0beta1.zip
>
> The preliminary NEWS is available at :
>       http://svn.osgeo.org/gdal/trunk/gdal/NEWS
>
> New bugs found should be filed in Trac normally.
>
>     http://trac.osgeo.org/gdal
>
> GDAL developers and users are encouraged to treat the coming weeks
> as the prime time for bug finding and fixing.
>
> GDAL committers should be even more careful than usually about what they
> commit in this period before the actual release. I haven't yet created a 2.1
> branch, so anything that is committed into trunk for now will be in final 2.1.
> If that blocks development for anyone, we can easily create the 2.1 branch
> when needed.
>
> For Ari mostly:
> Regarding Perl bindings, the usual mkgdaldist.sh script had an issue when
> generated the bindings file, because swig/perl/include/perl/typemaps_perl.i
> requires port/cpl_config.h to be generated. But the script runs on a svn
> export, so without any generated file. So for now I commented out the part that
> tries to generate the Perl bindings, so as to go on.
> The likely consequence is that ./configure --with-perl && make fails with
> "Use of uninitialized value $ARGV{"--gdal-source-tree"} in string eq at
> Makefile.PL line 61.
> GDAL Perl modules not found, perhaps you need to run make generate? at
> Makefile.PL line 77.""
> But manual cd swig/perl && make works
> Ari, would you mind looking at that (by trying mkgdaldist.sh) ?

Sorry about that. A subtle issue with swig again. Fixed.

Ari

>
> Best regards,
>
> Even
>


From even.rouault at spatialys.com  Sat Apr  2 05:15:01 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 2 Apr 2016 14:15:01 +0200
Subject: [gdal-dev] Map algebra
In-Reply-To: <56FE3398.3070006@gmail.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
Message-ID: <201604021415.01596.even.rouault@spatialys.com>

Le vendredi 01 avril 2016 10:38:48, Ari Jolma a écrit :
> I've got this into a rather nice working shape. The code needs to be
> reorganized (it is now, horror, all in header files) but that's another
> thing.

From the perspective of people wanting to use the core mechanisms to extend 
with their own operations, that could be interesting I guess.

> 
> I've so far built this around a basic DEM catchment analysis workflow.
> It includes many kinds of steps so it is a pretty good benchmark. In
> pseudo code the workflow is something like
> 
> dem = open_from_file
> dem->fill_depressions
> fd = dem->compute_flow_directions
> fd->route_flat_cells
> ua = fd->compute_upstream_area
> c = new_raster // compute the catchment into this
> c->set_border_cells // we're interested in the outlet cells
> c *= ua
> c *= c > 10000 // we're interested in the big catchments
> outlets = c->get_cells // outlets is an array of cells, and a cell is an
> object containing (x,y,value)
> c = 0
> c->mark_catchment(fd, outlets[0], 1) // assuming the outlet cell is now
> in outlets[0]
> ua2 = new_raster // for visualization log of upstream area is nice
> ua2 += ua
> ua2->log

A few thoughts and questions :
- I guess what would be cool from the perspective of a C++ user is to be 
really to write the above pseudo code with C++ operator overload when 
appropriate !  A += B, A.min(B), min_A= A.min(), etc...
- There might be some numpy reinvention here... Or at least, it could perhaps 
serve as an inspiration. I guess Python users would in priority use numpy for 
the most basic operations. Of course the GIS specific methods would still be of 
value. 
- Saturation arithmetics could be interesting. numpy by default do wrapped 
arithmetics, you have to cast to a larger type and clip down afterwards, 
whereas OpenCV does it by default : 
http://opencvpython.blogspot.fr/2012/06/difference-between-matrix-arithmetic-
in.html
- Are the methods handling 2 bands able to deal with different block sizes ?
- And with bands of different data types ?
- Why the need to reinvent a hashset mechanism ? Isn't std::set good enough ?
- Same for gma_array vs std::vector ?
- various methods take a void* argument, whereas it seems that could be 
rewritten as datatype* for better type safety
- there seems to be a block cache mechanism. What is it for ? How does that 
work ?
- there is some overlap/connection with the pixel functions of VRT ( see 
"Using Derived Bands" of http://gdal.org/gdal_vrttut.html).


> 
> The C code is of course not this nice but it is not very far from this.
> All the basic four method types I mention below are implemented and
> adding new methods is not very difficult. The code makes heavy use of
> templates and macros in an attempt for versatility (GDAL rasters can
> have many datatypes) and easiness to write methods in a few lines of
> code. The whole set of code is now ~2500 lines but it creates rather
> large executables due to templates. The code is C++ but the API is C
> like, I've so far done no changes to existing GDAL code because of this.
> 
> As written below, the code works on two levels of x,y loops: the blocks
> within a band, which is generic and cells within a block, which is
> separate for each method. The methods work on line by line (no recursion
> etc.) and thus for example the fill_depressions is not optimal but
> instead very simple. Also, very large rasters can be processed.
> 
> I think this may be somewhat similar thing in relation to GDAL as the
> network support, so it could be a thing to add to the library if wished.
> 
> I've added RFC 62 "raster algebra" to spark discussion.
> 
> Ari
> 
> 20.03.2016, 10:21, Ari Jolma kirjoitti:
> > Folks,
> > 
> > I played around a bit with the map algebra idea and came up with
> > something that could work nicely as a plugin. The initial code is at
> > https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
> > 
> > The idea is based on processing raster bands block by block and
> > calling a given function on each block. Using macros and templates the
> > code should be rather nice and manageable even when supporting
> > multiple data types for raster cells.
> > 
> > Further, the idea is to support three kinds of map algebra methods,
> > mostly working on a raster band in-place.
> > 
> > 1) Simple ones, which do not take any arguments beyond the raster band
> > itself, examples are functions like log, sin, rand.
> > 
> > 2) Those which take one non-spatial argument. The argument can be a
> > scalar like a number, or more complex like a reclassifier.
> > 
> > 3) Those which operate on two rasters. Examples are summation of
> > rasters and computing flow directions on a DEM. The latter is a bit
> > more complex since it is a focal method and requires a 3 x 3 matrix of
> > blocks from the other operand raster.
> > 
> > Maybe a fourth kind of methods are those which compute something from
> > a raster.
> > 
> > This would lead to four functions in the C API and raster band methods
> > in the bindings.
> > 
> > Comments are welcome, the initial code base contains a small demo
> > program. Eventually, if this works, I'll make a RFC from this.
> > 
> > Ari
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Sat Apr  2 05:22:58 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sat, 2 Apr 2016 09:22:58 -0300
Subject: [gdal-dev] GDAL/OGR 2.1.0 Beta 1 Available
In-Reply-To: <201604011918.36724.even.rouault@spatialys.com>
References: <201604011918.36724.even.rouault@spatialys.com>
Message-ID: <56FFB9A2.7040208@gatewaygeomatics.com>

On 2016-04-01 2:18 PM, Even Rouault wrote:
> Hi,
>
> Despite the date, I do have prepared the GDAL/OGR 2.1.0 Beta1 release.  It
> will potentially be followed by a second beta in the second half of this
> month, or directly by a RC1 if things go well.  The source is available at:
>

Hi Even,

So far so good on Windows. Will keep testing...

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/




From ari.jolma at gmail.com  Sat Apr  2 05:48:15 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 2 Apr 2016 15:48:15 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <201604021415.01596.even.rouault@spatialys.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <201604021415.01596.even.rouault@spatialys.com>
Message-ID: <56FFBF8F.3000909@gmail.com>

02.04.2016, 15:15, Even Rouault kirjoitti:
> A few thoughts and questions :
> - I guess what would be cool from the perspective of a C++ user is to be
> really to write the above pseudo code with C++ operator overload when
> appropriate !  A += B, A.min(B), min_A= A.min(), etc...

Operator overloading is of course something to have. It is great for 
interactive use too.

I would most probably implement that in the Perl bindings.

> - There might be some numpy reinvention here... Or at least, it could perhaps
> serve as an inspiration. I guess Python users would in priority use numpy for
> the most basic operations. Of course the GIS specific methods would still be of
> value.

I know little of numpy and how it is used by the Python bindings. Does 
it load the whole raster band into memory or can it make use of the 
block read/write? If yes, then that is probably preferable for 
Pythonists at least when it comes to standard methods.

> - Saturation arithmetics could be interesting. numpy by default do wrapped
> arithmetics, you have to cast to a larger type and clip down afterwards,
> whereas OpenCV does it by default :
> http://opencvpython.blogspot.fr/2012/06/difference-between-matrix-arithmetic-
> in.html
> - Are the methods handling 2 bands able to deal with different block sizes ?

Yes, the band size needs to be the same currently but the caching and 
cell index functions allow working with two bands at the same time even 
when the cell neighborhood is needed. I'm not sure about the optimality 
of the code however, the cache is cleaned of not-needed blocks at each 
block step.

> - And with bands of different data types ?

Yes. It creates pretty huge switch tables however. They are mostly 
hidden in macros but are a problem. I don't see how I can get the 
datatype into the templates from the bands and I don't like the idea of 
leaving that to the users.

> - Why the need to reinvent a hashset mechanism ? Isn't std::set good enough ?
> - Same for gma_array vs std::vector ?

Simply ignorance of C++ I think. I do see that for example C++11 and 
boost have lots of useful things but did not (yet) go that way. Earlier 
C++ standards seem to have many tools too. I learnt C++ >20 years ago... 
I believe I also need some small classes like "mapper", which 
reclassifies data from old values to new values and are not readily 
available.

> - various methods take a void* argument, whereas it seems that could be
> rewritten as datatype* for better type safety

Noted. The problem is often that the callback to the method specific 
function needs a prototype, which can be used for many methods. Surely 
minimization of void pointers is a goal. Generic objects and 
introspection might be a partial solution.

> - there seems to be a block cache mechanism. What is it for ? How does that
> work ?

In the block loop (looping through all blocks in a band) at each step 
the cache is checked for block(s) that are needed (if focal distance is 
 > 0 then more than one block may be needed) and which are not needed. 
Then blocks are read and written/discarded.

> - there is some overlap/connection with the pixel functions of VRT ( see
> "Using Derived Bands" of http://gdal.org/gdal_vrttut.html).

ok

Thanks for the comments!

Ari

>
>
>> The C code is of course not this nice but it is not very far from this.
>> All the basic four method types I mention below are implemented and
>> adding new methods is not very difficult. The code makes heavy use of
>> templates and macros in an attempt for versatility (GDAL rasters can
>> have many datatypes) and easiness to write methods in a few lines of
>> code. The whole set of code is now ~2500 lines but it creates rather
>> large executables due to templates. The code is C++ but the API is C
>> like, I've so far done no changes to existing GDAL code because of this.
>>
>> As written below, the code works on two levels of x,y loops: the blocks
>> within a band, which is generic and cells within a block, which is
>> separate for each method. The methods work on line by line (no recursion
>> etc.) and thus for example the fill_depressions is not optimal but
>> instead very simple. Also, very large rasters can be processed.
>>
>> I think this may be somewhat similar thing in relation to GDAL as the
>> network support, so it could be a thing to add to the library if wished.
>>
>> I've added RFC 62 "raster algebra" to spark discussion.
>>
>> Ari
>>
>> 20.03.2016, 10:21, Ari Jolma kirjoitti:
>>> Folks,
>>>
>>> I played around a bit with the map algebra idea and came up with
>>> something that could work nicely as a plugin. The initial code is at
>>> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>>>
>>> The idea is based on processing raster bands block by block and
>>> calling a given function on each block. Using macros and templates the
>>> code should be rather nice and manageable even when supporting
>>> multiple data types for raster cells.
>>>
>>> Further, the idea is to support three kinds of map algebra methods,
>>> mostly working on a raster band in-place.
>>>
>>> 1) Simple ones, which do not take any arguments beyond the raster band
>>> itself, examples are functions like log, sin, rand.
>>>
>>> 2) Those which take one non-spatial argument. The argument can be a
>>> scalar like a number, or more complex like a reclassifier.
>>>
>>> 3) Those which operate on two rasters. Examples are summation of
>>> rasters and computing flow directions on a DEM. The latter is a bit
>>> more complex since it is a focal method and requires a 3 x 3 matrix of
>>> blocks from the other operand raster.
>>>
>>> Maybe a fourth kind of methods are those which compute something from
>>> a raster.
>>>
>>> This would lead to four functions in the C API and raster band methods
>>> in the bindings.
>>>
>>> Comments are welcome, the initial code base contains a small demo
>>> program. Eventually, if this works, I'll make a RFC from this.
>>>
>>> Ari
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Sat Apr  2 06:08:28 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 2 Apr 2016 15:08:28 +0200
Subject: [gdal-dev] Map algebra
In-Reply-To: <56FFBF8F.3000909@gmail.com>
References: <56EE5D96.8060808@gmail.com>
 <201604021415.01596.even.rouault@spatialys.com> <56FFBF8F.3000909@gmail.com>
Message-ID: <201604021508.28684.even.rouault@spatialys.com>

Le samedi 02 avril 2016 14:48:15, Ari Jolma a écrit :
> 02.04.2016, 15:15, Even Rouault kirjoitti:
> > A few thoughts and questions :
> > - I guess what would be cool from the perspective of a C++ user is to be
> > really to write the above pseudo code with C++ operator overload when
> > appropriate !  A += B, A.min(B), min_A= A.min(), etc...
> 
> Operator overloading is of course something to have. It is great for
> interactive use too.
> 
> I would most probably implement that in the Perl bindings.
> 
> > - There might be some numpy reinvention here... Or at least, it could
> > perhaps serve as an inspiration. I guess Python users would in priority
> > use numpy for the most basic operations. Of course the GIS specific
> > methods would still be of value.
> 
> I know little of numpy and how it is used by the Python bindings.

In the Python bindings, you have the methods to read from a GDAL raster and 
expose it as a numpy array, and the reverse, from a numpy array to writing a 
GDAL raster. People then use numpy own methods to do any computations they 
want.

> Does
> it load the whole raster band into memory or can it make use of the
> block read/write? If yes, then that is probably preferable for
> Pythonists at least when it comes to standard methods.

By default, if you do band.ReadAsArray() it will return the whole raster as a 
numpy array, but you can also do windowed read with band.ReadAsArray(x, y, 
width, height) (same for write).

Linux users aware of https://trac.osgeo.org/gdal/wiki/rfc45_virtualmem could 
use band.GetVirtualMemArray() on an arbitrarily large band that will return a 
huge "virtual" numpy array (actual data is loaded on first access due to 
catching memory faults). Not sure if anybody actually uses that.

Pythonists disliking GDAL's own bindings would probably use RasterIO block 
iterators :
https://github.com/mapbox/rasterio/blob/master/docs/windowed-rw.rst

> 
> > - Saturation arithmetics could be interesting. numpy by default do
> > wrapped arithmetics, you have to cast to a larger type and clip down
> > afterwards, whereas OpenCV does it by default :
> > http://opencvpython.blogspot.fr/2012/06/difference-between-matrix-arithme
> > tic- in.html
> > - Are the methods handling 2 bands able to deal with different block
> > sizes ?
> 
> Yes, the band size needs to be the same

Not sure to understand your answer: my question was rather about block sizes.

> currently but the caching and
> cell index functions allow working with two bands at the same time even
> when the cell neighborhood is needed. I'm not sure about the optimality
> of the code however, the cache is cleaned of not-needed blocks at each
> block step.
> 
> > - And with bands of different data types ?
> 
> Yes. It creates pretty huge switch tables however. They are mostly
> hidden in macros but are a problem. I don't see how I can get the
> datatype into the templates from the bands and I don't like the idea of
> leaving that to the users.

Perhaps we don't need to instanciate all template possibilities: just the 
<same_type,same_type> ones, and in case of different types promote to double ?

> 
> > - Why the need to reinvent a hashset mechanism ? Isn't std::set good
> > enough ? - Same for gma_array vs std::vector ?
> 
> Simply ignorance of C++ I think. I do see that for example C++11 and
> boost have lots of useful things but did not (yet) go that way. Earlier
> C++ standards seem to have many tools too. I learnt C++ >20 years ago...
> I believe I also need some small classes like "mapper", which
> reclassifies data from old values to new values and are not readily
> available.

std::set, std::map, std::vector are available in C++98 and already used in 
GDAL. We should use them when practical (admitedly I developed a CPLHashSet a 
long time ago, but in retrospect that didn't make sense)

> 
> > - various methods take a void* argument, whereas it seems that could be
> > rewritten as datatype* for better type safety
> 
> Noted. The problem is often that the callback to the method specific
> function needs a prototype, which can be used for many methods. Surely
> minimization of void pointers is a goal. Generic objects and
> introspection might be a partial solution.
> 
> > - there seems to be a block cache mechanism. What is it for ? How does
> > that work ?
> 
> In the block loop (looping through all blocks in a band) at each step
> the cache is checked for block(s) that are needed (if focal distance is
> 
>  > 0 then more than one block may be needed) and which are not needed.
> 
> Then blocks are read and written/discarded.

Isn't there some duplication with GDAL own's block cache ? Perhaps I'm just 
confusion by the proximity of the naming. I didn't study your code closely.

> 
> > - there is some overlap/connection with the pixel functions of VRT ( see
> > "Using Derived Bands" of http://gdal.org/gdal_vrttut.html).
> 
> ok
> 
> Thanks for the comments!
> 
> Ari
> 
> >> The C code is of course not this nice but it is not very far from this.
> >> All the basic four method types I mention below are implemented and
> >> adding new methods is not very difficult. The code makes heavy use of
> >> templates and macros in an attempt for versatility (GDAL rasters can
> >> have many datatypes) and easiness to write methods in a few lines of
> >> code. The whole set of code is now ~2500 lines but it creates rather
> >> large executables due to templates. The code is C++ but the API is C
> >> like, I've so far done no changes to existing GDAL code because of this.
> >> 
> >> As written below, the code works on two levels of x,y loops: the blocks
> >> within a band, which is generic and cells within a block, which is
> >> separate for each method. The methods work on line by line (no recursion
> >> etc.) and thus for example the fill_depressions is not optimal but
> >> instead very simple. Also, very large rasters can be processed.
> >> 
> >> I think this may be somewhat similar thing in relation to GDAL as the
> >> network support, so it could be a thing to add to the library if wished.
> >> 
> >> I've added RFC 62 "raster algebra" to spark discussion.
> >> 
> >> Ari
> >> 
> >> 20.03.2016, 10:21, Ari Jolma kirjoitti:
> >>> Folks,
> >>> 
> >>> I played around a bit with the map algebra idea and came up with
> >>> something that could work nicely as a plugin. The initial code is at
> >>> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
> >>> 
> >>> The idea is based on processing raster bands block by block and
> >>> calling a given function on each block. Using macros and templates the
> >>> code should be rather nice and manageable even when supporting
> >>> multiple data types for raster cells.
> >>> 
> >>> Further, the idea is to support three kinds of map algebra methods,
> >>> mostly working on a raster band in-place.
> >>> 
> >>> 1) Simple ones, which do not take any arguments beyond the raster band
> >>> itself, examples are functions like log, sin, rand.
> >>> 
> >>> 2) Those which take one non-spatial argument. The argument can be a
> >>> scalar like a number, or more complex like a reclassifier.
> >>> 
> >>> 3) Those which operate on two rasters. Examples are summation of
> >>> rasters and computing flow directions on a DEM. The latter is a bit
> >>> more complex since it is a focal method and requires a 3 x 3 matrix of
> >>> blocks from the other operand raster.
> >>> 
> >>> Maybe a fourth kind of methods are those which compute something from
> >>> a raster.
> >>> 
> >>> This would lead to four functions in the C API and raster band methods
> >>> in the bindings.
> >>> 
> >>> Comments are welcome, the initial code base contains a small demo
> >>> program. Eventually, if this works, I'll make a RFC from this.
> >>> 
> >>> Ari
> >> 
> >> _______________________________________________
> >> gdal-dev mailing list
> >> gdal-dev at lists.osgeo.org
> >> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From p.baumann at jacobs-university.de  Sat Apr  2 06:06:08 2016
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Sat, 2 Apr 2016 15:06:08 +0200
Subject: [gdal-dev] Map algebra
In-Reply-To: <56FFBF8F.3000909@gmail.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <201604021415.01596.even.rouault@spatialys.com> <56FFBF8F.3000909@gmail.com>
Message-ID: <56FFC3C0.4090708@jacobs-university.de>

see also rasdaman with its n-D raster query language based on Array Algebra,
which effectively is the basis for the forthcoming ISO Array SQL standard:
http://www.rasdaman.org
publications:
http://www.faculty.jacobs-university.de/pbaumann/iu-bremen.de_pbaumann//pubs.php

cheers,
Peter


On 04/02/2016 02:48 PM, Ari Jolma wrote:
> 02.04.2016, 15:15, Even Rouault kirjoitti:
>> A few thoughts and questions :
>> - I guess what would be cool from the perspective of a C++ user is to be
>> really to write the above pseudo code with C++ operator overload when
>> appropriate !  A += B, A.min(B), min_A= A.min(), etc...
>
> Operator overloading is of course something to have. It is great for
> interactive use too.
>
> I would most probably implement that in the Perl bindings.
>
>> - There might be some numpy reinvention here... Or at least, it could perhaps
>> serve as an inspiration. I guess Python users would in priority use numpy for
>> the most basic operations. Of course the GIS specific methods would still be of
>> value.
>
> I know little of numpy and how it is used by the Python bindings. Does it load
> the whole raster band into memory or can it make use of the block read/write?
> If yes, then that is probably preferable for Pythonists at least when it comes
> to standard methods.
>
>> - Saturation arithmetics could be interesting. numpy by default do wrapped
>> arithmetics, you have to cast to a larger type and clip down afterwards,
>> whereas OpenCV does it by default :
>> http://opencvpython.blogspot.fr/2012/06/difference-between-matrix-arithmetic-
>> in.html
>> - Are the methods handling 2 bands able to deal with different block sizes ?
>
> Yes, the band size needs to be the same currently but the caching and cell
> index functions allow working with two bands at the same time even when the
> cell neighborhood is needed. I'm not sure about the optimality of the code
> however, the cache is cleaned of not-needed blocks at each block step.
>
>> - And with bands of different data types ?
>
> Yes. It creates pretty huge switch tables however. They are mostly hidden in
> macros but are a problem. I don't see how I can get the datatype into the
> templates from the bands and I don't like the idea of leaving that to the users.
>
>> - Why the need to reinvent a hashset mechanism ? Isn't std::set good enough ?
>> - Same for gma_array vs std::vector ?
>
> Simply ignorance of C++ I think. I do see that for example C++11 and boost
> have lots of useful things but did not (yet) go that way. Earlier C++
> standards seem to have many tools too. I learnt C++ >20 years ago... I believe
> I also need some small classes like "mapper", which reclassifies data from old
> values to new values and are not readily available.
>
>> - various methods take a void* argument, whereas it seems that could be
>> rewritten as datatype* for better type safety
>
> Noted. The problem is often that the callback to the method specific function
> needs a prototype, which can be used for many methods. Surely minimization of
> void pointers is a goal. Generic objects and introspection might be a partial
> solution.
>
>> - there seems to be a block cache mechanism. What is it for ? How does that
>> work ?
>
> In the block loop (looping through all blocks in a band) at each step the
> cache is checked for block(s) that are needed (if focal distance is > 0 then
> more than one block may be needed) and which are not needed. Then blocks are
> read and written/discarded.
>
>> - there is some overlap/connection with the pixel functions of VRT ( see
>> "Using Derived Bands" of http://gdal.org/gdal_vrttut.html).
>
> ok
>
> Thanks for the comments!
>
> Ari
>
>>
>>
>>> The C code is of course not this nice but it is not very far from this.
>>> All the basic four method types I mention below are implemented and
>>> adding new methods is not very difficult. The code makes heavy use of
>>> templates and macros in an attempt for versatility (GDAL rasters can
>>> have many datatypes) and easiness to write methods in a few lines of
>>> code. The whole set of code is now ~2500 lines but it creates rather
>>> large executables due to templates. The code is C++ but the API is C
>>> like, I've so far done no changes to existing GDAL code because of this.
>>>
>>> As written below, the code works on two levels of x,y loops: the blocks
>>> within a band, which is generic and cells within a block, which is
>>> separate for each method. The methods work on line by line (no recursion
>>> etc.) and thus for example the fill_depressions is not optimal but
>>> instead very simple. Also, very large rasters can be processed.
>>>
>>> I think this may be somewhat similar thing in relation to GDAL as the
>>> network support, so it could be a thing to add to the library if wished.
>>>
>>> I've added RFC 62 "raster algebra" to spark discussion.
>>>
>>> Ari
>>>
>>> 20.03.2016, 10:21, Ari Jolma kirjoitti:
>>>> Folks,
>>>>
>>>> I played around a bit with the map algebra idea and came up with
>>>> something that could work nicely as a plugin. The initial code is at
>>>> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>>>>
>>>> The idea is based on processing raster bands block by block and
>>>> calling a given function on each block. Using macros and templates the
>>>> code should be rather nice and manageable even when supporting
>>>> multiple data types for raster cells.
>>>>
>>>> Further, the idea is to support three kinds of map algebra methods,
>>>> mostly working on a raster band in-place.
>>>>
>>>> 1) Simple ones, which do not take any arguments beyond the raster band
>>>> itself, examples are functions like log, sin, rand.
>>>>
>>>> 2) Those which take one non-spatial argument. The argument can be a
>>>> scalar like a number, or more complex like a reclassifier.
>>>>
>>>> 3) Those which operate on two rasters. Examples are summation of
>>>> rasters and computing flow directions on a DEM. The latter is a bit
>>>> more complex since it is a focal method and requires a 3 x 3 matrix of
>>>> blocks from the other operand raster.
>>>>
>>>> Maybe a fourth kind of methods are those which compute something from
>>>> a raster.
>>>>
>>>> This would lead to four functions in the C API and raster band methods
>>>> in the bindings.
>>>>
>>>> Comments are welcome, the initial code base contains a small demo
>>>> program. Eventually, if this works, I'll make a RFC from this.
>>>>
>>>> Ari
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)



From ari.jolma at gmail.com  Sat Apr  2 06:39:21 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 2 Apr 2016 16:39:21 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <201604021508.28684.even.rouault@spatialys.com>
References: <56EE5D96.8060808@gmail.com>
 <201604021415.01596.even.rouault@spatialys.com> <56FFBF8F.3000909@gmail.com>
 <201604021508.28684.even.rouault@spatialys.com>
Message-ID: <56FFCB89.4080005@gmail.com>

02.04.2016, 16:08, Even Rouault kirjoitti:
>>> - Are the methods handling 2 bands able to deal with different block
>>> sizes ?
>> Yes, the band size needs to be the same
> Not sure to understand your answer: my question was rather about block sizes.


I forgot a "however": Yes, the block sizes can differ as they easily do 
even with same driver and same band size but different datatype. 
Currently the band sizes have to be the same.


>
>>
>>> - And with bands of different data types ?
>> Yes. It creates pretty huge switch tables however. They are mostly
>> hidden in macros but are a problem. I don't see how I can get the
>> datatype into the templates from the bands and I don't like the idea of
>> leaving that to the users.
> Perhaps we don't need to instanciate all template possibilities: just the
> <same_type,same_type> ones, and in case of different types promote to double ?


Promoting may be costly if the raster is huge. I believe it is quite 
common to have to operate on both integer rasters and floating point 
rasters at the same time. Determining which templates are needed is not 
easy beforehand.


>
>>> - Why the need to reinvent a hashset mechanism ? Isn't std::set good
>>> enough ? - Same for gma_array vs std::vector ?
>> Simply ignorance of C++ I think. I do see that for example C++11 and
>> boost have lots of useful things but did not (yet) go that way. Earlier
>> C++ standards seem to have many tools too. I learnt C++ >20 years ago...
>> I believe I also need some small classes like "mapper", which
>> reclassifies data from old values to new values and are not readily
>> available.
> std::set, std::map, std::vector are available in C++98 and already used in
> GDAL. We should use them when practical (admitedly I developed a CPLHashSet a
> long time ago, but in retrospect that didn't make sense)

Yes, I agree that C++98 tools should be used.


> Isn't there some duplication with GDAL own's block cache ? Perhaps I'm just
> confusion by the proximity of the naming. I didn't study your code closely.

I'll look into that.

Ari


>
>>> - there is some overlap/connection with the pixel functions of VRT ( see
>>> "Using Derived Bands" of http://gdal.org/gdal_vrttut.html).
>> ok
>>
>> Thanks for the comments!
>>
>> Ari
>>
>>>> The C code is of course not this nice but it is not very far from this.
>>>> All the basic four method types I mention below are implemented and
>>>> adding new methods is not very difficult. The code makes heavy use of
>>>> templates and macros in an attempt for versatility (GDAL rasters can
>>>> have many datatypes) and easiness to write methods in a few lines of
>>>> code. The whole set of code is now ~2500 lines but it creates rather
>>>> large executables due to templates. The code is C++ but the API is C
>>>> like, I've so far done no changes to existing GDAL code because of this.
>>>>
>>>> As written below, the code works on two levels of x,y loops: the blocks
>>>> within a band, which is generic and cells within a block, which is
>>>> separate for each method. The methods work on line by line (no recursion
>>>> etc.) and thus for example the fill_depressions is not optimal but
>>>> instead very simple. Also, very large rasters can be processed.
>>>>
>>>> I think this may be somewhat similar thing in relation to GDAL as the
>>>> network support, so it could be a thing to add to the library if wished.
>>>>
>>>> I've added RFC 62 "raster algebra" to spark discussion.
>>>>
>>>> Ari
>>>>
>>>> 20.03.2016, 10:21, Ari Jolma kirjoitti:
>>>>> Folks,
>>>>>
>>>>> I played around a bit with the map algebra idea and came up with
>>>>> something that could work nicely as a plugin. The initial code is at
>>>>> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>>>>>
>>>>> The idea is based on processing raster bands block by block and
>>>>> calling a given function on each block. Using macros and templates the
>>>>> code should be rather nice and manageable even when supporting
>>>>> multiple data types for raster cells.
>>>>>
>>>>> Further, the idea is to support three kinds of map algebra methods,
>>>>> mostly working on a raster band in-place.
>>>>>
>>>>> 1) Simple ones, which do not take any arguments beyond the raster band
>>>>> itself, examples are functions like log, sin, rand.
>>>>>
>>>>> 2) Those which take one non-spatial argument. The argument can be a
>>>>> scalar like a number, or more complex like a reclassifier.
>>>>>
>>>>> 3) Those which operate on two rasters. Examples are summation of
>>>>> rasters and computing flow directions on a DEM. The latter is a bit
>>>>> more complex since it is a focal method and requires a 3 x 3 matrix of
>>>>> blocks from the other operand raster.
>>>>>
>>>>> Maybe a fourth kind of methods are those which compute something from
>>>>> a raster.
>>>>>
>>>>> This would lead to four functions in the C API and raster band methods
>>>>> in the bindings.
>>>>>
>>>>> Comments are welcome, the initial code base contains a small demo
>>>>> program. Eventually, if this works, I'll make a RFC from this.
>>>>>
>>>>> Ari
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From ari.jolma at gmail.com  Sat Apr  2 08:04:58 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 2 Apr 2016 18:04:58 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <201604021508.28684.even.rouault@spatialys.com>
References: <56EE5D96.8060808@gmail.com>
 <201604021415.01596.even.rouault@spatialys.com> <56FFBF8F.3000909@gmail.com>
 <201604021508.28684.even.rouault@spatialys.com>
Message-ID: <56FFDF9A.9000104@gmail.com>

02.04.2016, 16:08, Even Rouault kirjoitti:
> .
>>> - there seems to be a block cache mechanism. What is it for ? How does
>>> that work ?
>> In the block loop (looping through all blocks in a band) at each step
>> the cache is checked for block(s) that are needed (if focal distance is
>>
>>   > 0 then more than one block may be needed) and which are not needed.
>>
>> Then blocks are read and written/discarded.
> Isn't there some duplication with GDAL own's block cache ? Perhaps I'm just
> confusion by the proximity of the naming. I didn't study your code closely.

The GDAL RasterBlock class and block cache seems to me to be something 
different. In my code I simply use ReadBlock and WriteBlock methods of 
the RasterBand class to get access to the needed blocks and write them 
to the disk if a band is being modified. GDAL block cache operates below 
ReadBlock and WriteBlock methods.

The code is basically what is in the GDALRasterBand::ReadBlock 
documentation but extended for two bands and divided into a few 
functions plus syntactic sugar added with macros.

Ari


>
>>> - there is some overlap/connection with the pixel functions of VRT ( see
>>> "Using Derived Bands" of http://gdal.org/gdal_vrttut.html).
>> ok
>>
>> Thanks for the comments!
>>
>> Ari
>>
>>>> The C code is of course not this nice but it is not very far from this.
>>>> All the basic four method types I mention below are implemented and
>>>> adding new methods is not very difficult. The code makes heavy use of
>>>> templates and macros in an attempt for versatility (GDAL rasters can
>>>> have many datatypes) and easiness to write methods in a few lines of
>>>> code. The whole set of code is now ~2500 lines but it creates rather
>>>> large executables due to templates. The code is C++ but the API is C
>>>> like, I've so far done no changes to existing GDAL code because of this.
>>>>
>>>> As written below, the code works on two levels of x,y loops: the blocks
>>>> within a band, which is generic and cells within a block, which is
>>>> separate for each method. The methods work on line by line (no recursion
>>>> etc.) and thus for example the fill_depressions is not optimal but
>>>> instead very simple. Also, very large rasters can be processed.
>>>>
>>>> I think this may be somewhat similar thing in relation to GDAL as the
>>>> network support, so it could be a thing to add to the library if wished.
>>>>
>>>> I've added RFC 62 "raster algebra" to spark discussion.
>>>>
>>>> Ari
>>>>
>>>> 20.03.2016, 10:21, Ari Jolma kirjoitti:
>>>>> Folks,
>>>>>
>>>>> I played around a bit with the map algebra idea and came up with
>>>>> something that could work nicely as a plugin. The initial code is at
>>>>> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>>>>>
>>>>> The idea is based on processing raster bands block by block and
>>>>> calling a given function on each block. Using macros and templates the
>>>>> code should be rather nice and manageable even when supporting
>>>>> multiple data types for raster cells.
>>>>>
>>>>> Further, the idea is to support three kinds of map algebra methods,
>>>>> mostly working on a raster band in-place.
>>>>>
>>>>> 1) Simple ones, which do not take any arguments beyond the raster band
>>>>> itself, examples are functions like log, sin, rand.
>>>>>
>>>>> 2) Those which take one non-spatial argument. The argument can be a
>>>>> scalar like a number, or more complex like a reclassifier.
>>>>>
>>>>> 3) Those which operate on two rasters. Examples are summation of
>>>>> rasters and computing flow directions on a DEM. The latter is a bit
>>>>> more complex since it is a focal method and requires a 3 x 3 matrix of
>>>>> blocks from the other operand raster.
>>>>>
>>>>> Maybe a fourth kind of methods are those which compute something from
>>>>> a raster.
>>>>>
>>>>> This would lead to four functions in the C API and raster band methods
>>>>> in the bindings.
>>>>>
>>>>> Comments are welcome, the initial code base contains a small demo
>>>>> program. Eventually, if this works, I'll make a RFC from this.
>>>>>
>>>>> Ari
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From dstu at u.washington.edu  Sun Apr  3 05:05:50 2016
From: dstu at u.washington.edu (Derek Stuart)
Date: Sun, 3 Apr 2016 18:05:50 +0600
Subject: [gdal-dev] Setting up GDAL Custom Transformation from ESRI GTF
	File
In-Reply-To: <ndl3sj$20d$1@ger.gmane.org>
References: <CAC1Hrcg+u_UbB29PyD-p3RB+MYC3GKmVuDaD7R=HbDp0zMC2Ng@mail.gmail.com>
 <ndl3sj$20d$1@ger.gmane.org>
Message-ID: <CAC1Hrci8WB-hKQDUTogtdijGKM0tBN3QM1tnaZT9jMpd=ueieg@mail.gmail.com>

Andre:
The only Gulshan coordinate system I see with EPSG 4682 is a geographic
coordinate system.  I am using a projected coordinate system called BTM.
This is a fairly new coordinate system, but it is the standard here in
Bangladesh.

PROJCS["BTM",GEOGCS["GCS_Everest_Bangladesh",DATUM["D_Everest_Bangladesh",SPHEROID["Everest_Adjustment_1937",6377276.345,300.8017]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",-2000000.0],PARAMETER["Central_Meridian",90.0],PARAMETER["Scale_Factor",0.9996],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]

There is a projected coordinate system called Gulshan 303 Bangladesh TM
that uses the Gulshan datum, but it has EPSG 3106, not 4682.

PROJCS["Gulshan_303_Bangladesh_TM",GEOGCS["GCS_Gulshan_303",DATUM["D_Gulshan_303",SPHEROID["Everest_Adjustment_1937",6377276.345,300.8017]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",90.0],PARAMETER["Scale_Factor",0.9996],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0],AUTHORITY["EPSG",3106]]

This has very similar parameters to BTM, except that Gulshan 303 has a
false northing of 0 and BTM has -2000000.0.  I asked some other GIS
professionals locally and was told that here isn't a EPSG code that matches
BTM.  Unless I want to reproject my data and work in UTM, I don't see a way
to avoid adding a custom transformation to GDAL.

Derek





On Fri, Apr 1, 2016 at 12:18 PM, Andre Joost <andre+joost at nurfuerspam.de>
wrote:

> Am 31.03.2016 um 17:16 schrieb Derek Stuart:
>
>> I am using GDAL routines as part of RAS Mapper within HEC-RAS.   I
>> am coming from ArcMap where I am using a custom transformation GTF
>> file to translate from the D_Everest_Bangladesh datum to WGS_1984.
>>
>> The GTF file includes the following:
>>
>>
>> GEOGTRAN["ever2wgs",GEOGCS["GCS_Everest_Bangladesh",DATUM["D_Everest_Bangladesh",SPHEROID["Everest_Adjustment_1937",6377276.345,300.8017]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],METHOD["Geocentric_Translation"],PARAMETER["X_Axis_Translation",283.729],PARAMETER["Y_Axis_Translation",735.942],PARAMETER["Z_Axis_Translation",261.143]]
>>
>>
> The parameters seem to be identical with EPSG:4682 Gulshan 303:
>
> +proj=longlat +a=6377276.345 +b=6356075.41314024
> +towgs84=283.7,735.9,261.1,0,0,0,0 +no_defs
>
> So just assign that CRS and see if the data fits to other data sources,
> like Openstreetmap.
>
> HTH,
> André Joost
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
Derek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160403/2533df2f/attachment.html>

From andre+joost at nurfuerspam.de  Sun Apr  3 07:56:45 2016
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Sun, 03 Apr 2016 16:56:45 +0200
Subject: [gdal-dev] Setting up GDAL Custom Transformation from ESRI GTF
	File
In-Reply-To: <CAC1Hrci8WB-hKQDUTogtdijGKM0tBN3QM1tnaZT9jMpd=ueieg@mail.gmail.com>
References: <CAC1Hrcg+u_UbB29PyD-p3RB+MYC3GKmVuDaD7R=HbDp0zMC2Ng@mail.gmail.com>
 <ndl3sj$20d$1@ger.gmane.org>
 <CAC1Hrci8WB-hKQDUTogtdijGKM0tBN3QM1tnaZT9jMpd=ueieg@mail.gmail.com>
Message-ID: <ndrcb3$s85$1@ger.gmane.org>

Am 03.04.2016 um 14:05 schrieb Derek Stuart:
> Andre: The only Gulshan coordinate system I see with EPSG 4682 is a
> geographic coordinate system.  I am using a projected coordinate
> system called BTM. This is a fairly new coordinate system, but it is
> the standard here in Bangladesh.
>
> PROJCS["BTM",GEOGCS["GCS_Everest_Bangladesh",DATUM["D_Everest_Bangladesh",SPHEROID["Everest_Adjustment_1937",6377276.345,300.8017]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",-2000000.0],PARAMETER["Central_Meridian",90.0],PARAMETER["Scale_Factor",0.9996],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]
>
>  There is a projected coordinate system called Gulshan 303 Bangladesh
> TM that uses the Gulshan datum, but it has EPSG 3106, not 4682.
>
> PROJCS["Gulshan_303_Bangladesh_TM",GEOGCS["GCS_Gulshan_303",DATUM["D_Gulshan_303",SPHEROID["Everest_Adjustment_1937",6377276.345,300.8017]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",90.0],PARAMETER["Scale_Factor",0.9996],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0],AUTHORITY["EPSG",3106]]
>
>  This has very similar parameters to BTM, except that Gulshan 303 has
> a false northing of 0 and BTM has -2000000.0.  I asked some other
> GIS professionals locally and was told that here isn't a EPSG code
> that matches BTM.  Unless I want to reproject my data and work in
> UTM, I don't see a way to avoid adding a custom transformation to
> GDAL.

Your first post did not include information on the projected coordinate 
system. Since it has a different false Northing, you really have to put 
up a custom CRS. But you have to take the +towgs84 parameter set to 
shift from the Everest ellipsoid to WGS84. The WKT definitions you give 
do not include that, because the ARCGIS world handles datum 
transformations separately.

You can put the WKT definition above in a text file, and run gdalsrsinfo 
on that file. It will report:

+proj=tmerc +lat_0=0 +lon_0=90 +k=0.9996 +x_0=500000 +y_0=-2000000 
+a=6377276.345 +b=6356075.41314024 +units=m +no_defs

As mentioned above, add the +towgs84 set for Gulshan, which you find in 
EPSG:4682:

+proj=tmerc +lat_0=0 +lon_0=90 +k=0.9996 +x_0=500000 +y_0=-2000000 
+a=6377276.345 +b=6356075.41314024 +towgs84=283.7,735.9,261.1,0,0,0,0 
+units=m +no_defs

HTH,
André Joost


From jukka.rahkonen at maanmittauslaitos.fi  Sun Apr  3 23:43:10 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Mon, 4 Apr 2016 06:43:10 +0000 (UTC)
Subject: [gdal-dev] HFA Attribute Table Class Names
References: <CAOhMuNAC1fyOJqNEirqo1Pm0poeBAWeHp=oAiQN3YK==D6WLbQ@mail.gmail.com>
Message-ID: <loom.20160404T083824-798@post.gmane.org>

Christopher Schierkolk <thebengrimm <at> gmail.com> writes:

> 
> 
> Does GDAL interpret HFA attributes beyond
> COLOR,RED,GREEN,BLUE,OPACITY and HISTOGRAM ? I have some thematic files
with a CLASS_NAMES
> attribute. I am using GDAL_TRANSLATE to subset files.  Every attribute
will copy over except the
> CLASS_NAMES attribute. I read some previous threads but did not find a
concrete answer. 

Are class names somehow the same thing as Raster Attribute Table (RAT)? Does
this autotest make sense for you
https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/hfa_rfc40.py? More
about RAT at https://trac.osgeo.org/gdal/wiki/rfc40_enhanced_rat_support

-Jukka Rahkonen-

> Chris Schierkolk
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev <at> lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev



From foss4g at osgeo.org  Mon Apr  4 06:13:53 2016
From: foss4g at osgeo.org (foss4g at osgeo.org)
Date: Mon, 04 Apr 2016 15:13:53 +0200
Subject: [gdal-dev] Reminder: register for FOSS4G 2016 Code Sprint Bonn
	August
Message-ID: <a09247aada4a19a6ce3f3e69b49c3db4@foss4g2016.org>

Hello FOSS4G 2016 code sprinters,

this is a kind reminder to come join the FOSS4G 2016 code sprint in Bonn 
in August 2016. Why? Because it's gonna be awesome!

This year, once again, we are following the old tradition of hosting a 
codesprint on the FOSS4G. More precisely, we offer a setting so that 
individual projects can meet for their codesprint. Since projects 
benefit from each other as well, the codesprint will naturally be held 
conjointly at one place.

We are happy to have found a really great location for you. Codesprint 
and accommodations are combined in one hall. Check out 
http://www.basecamp-bonn.com/ for details about the venue. Working zones 
will be created for you in the breakfast area and hallways. There’s the 
option of finding relatively inexpensive sleeping accommodations in 
train sleeping cars, camping buses, classic cars and more. Additionally, 
an outdoor area is available for you to enjoy Bonn’s summer weather in 
August, while working. Healthy and not-so-healthy catering of drinks and 
snacks will be provided by us. Participation in codesprint is free of 
charge. However, overnight stays will have to be reserved and paid for 
by you.

We have already 30 registration for the code sprint. Already 10 projects 
registered and will come together to work on their code (GRASS GIS, 
QGIS, PyWPS, GIS.lab, Mapbender, MapServer, OpenLayers, EOxServer, 
LASzip for LAS 1.4, GDAL).

We will provide food & fun for you.

Read more about the sprint ad please add your name to the FOSS4G 2016 
Code Sprint Wiki page:

https://wiki.osgeo.org/wiki/FOSS4G_2016_Code_Sprint

We will provide an advance booking for and inform you when the booking 
will start.

When:
  Part I: Sun 2016-⁠⁠⁠08-⁠⁠⁠21 12:00 noon -⁠⁠⁠ Tue 2016-⁠⁠⁠08-⁠⁠⁠23 (open 
end)
  Part II: Sat 2016-⁠⁠⁠08-⁠⁠⁠27 -⁠⁠⁠ Sun 2016-⁠⁠⁠08-⁠⁠⁠28 12:00 noon

Where to sleep:

  Venue & Accommodation: BaseCamp. (For more informations: 
http://www.basecamp-bonn.com/)
  Nearby Hotel: Bonnox (http://www.bonnox.de/en/)

Hope to see you at the FOSS4G 2016 Code Sprint!

The FOSS4G Code Sprint Team

See you at FOSS4G 2016 in Bonn
http://2016.foss4g.org

From Stefan.Blumentrath at nina.no  Mon Apr  4 06:45:48 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Mon, 4 Apr 2016 13:45:48 +0000
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
Message-ID: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>

Hi,

I try to build GDAL 2.1 with GRASS (7.0.4svn) support.

As far as I can see there is no GRASS-plugin for GDAL 2.x..., so I do: 1) build GDAL, 2) build GRASS, 3) rebuild GDAL --with-grass.
Unfortunately, I get the following error:

In file included from grass57dataset.cpp:47:0:
/data/src/gdal/gcore/gdal_priv.h:1389:71: error: declaration of C function 'const char* GDALRasterIOGetResampleAlg(GDALRIOResampleAlg)' conflicts with
const char* GDALRasterIOGetResampleAlg(GDALRIOResampleAlg eResampleAlg);
                                                                       ^
/data/src/gdal/gcore/gdal_priv.h:1388:20: error: previous declaration 'GDALRIOResampleAlg GDALRasterIOGetResampleAlg(const char*)' here
GDALRIOResampleAlg GDALRasterIOGetResampleAlg(const char* pszResampling);
                    ^
grass57dataset.cpp: In function 'int Grass2CPLErrorHook(char*, int)':
grass57dataset.cpp:99:5: warning: no previous declaration for 'int Grass2CPLErrorHook(char*, int)' [-Wmissing-declarations]
int Grass2CPLErrorHook( char * pszMessage, int bFatal )
     ^
grass57dataset.cpp: In constructor 'GRASSRasterBand::GRASSRasterBand(GRASSDataset*, int, const char*, const char*)':
grass57dataset.cpp:204:60: warning: declaration of 'pszCellName' shadows a member of 'this' [-Wshadow]
                                   const char * pszCellName )
                                                            ^
grass57dataset.cpp:204:60: warning: declaration of 'pszMapset' shadows a member of 'this' [-Wshadow]
grass57dataset.cpp:204:60: warning: declaration of 'nBand' shadows a member of 'this' [-Wshadow]
grass57dataset.cpp:204:60: warning: declaration of 'poDS' shadows a member of 'this' [-Wshadow]
grass57dataset.cpp: At global scope:
grass57dataset.cpp:482:8: warning: unused parameter 'nBlockXOff' [-Wunused-parameter]
CPLErr GRASSRasterBand::IReadBlock( int nBlockXOff, int nBlockYOff,
        ^
grass57dataset.cpp:527:8: warning: unused parameter 'eRWFlag' [-Wunused-parameter]
CPLErr GRASSRasterBand::IRasterIO ( GDALRWFlag eRWFlag,
        ^
grass57dataset.cpp:527:8: warning: unused parameter 'psExtraArg' [-Wunused-parameter]
make[2]: *** [../o/grass57dataset.lo] Error 1
make[2]: Leaving directory `/data/src/gdal/frmts/grass'
make[1]: *** [grass-install-obj] Error 2
make[1]: Leaving directory `/data/src/gdal/frmts'
make: *** [frmts-target] Error 2

I am grateful for any help on this issue...

Cheers
Stefan


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160404/adae4182/attachment.html>

From even.rouault at spatialys.com  Mon Apr  4 07:10:32 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Apr 2016 16:10:32 +0200
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
In-Reply-To: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
References: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
Message-ID: <201604041610.32723.even.rouault@spatialys.com>

Le lundi 04 avril 2016 15:45:48, Blumentrath, Stefan a écrit :
> Hi,
> 
> I try to build GDAL 2.1 with GRASS (7.0.4svn) support.
> 
> As far as I can see there is no GRASS-plugin for GDAL 2.x..., so I do: 1)
> build GDAL, 2) build GRASS, 3) rebuild GDAL --with-grass. Unfortunately, I
> get the following error:

Stefan

thanks for the report. I've committed in trunk r33893 a changeset that should 
hopefully fix the compilation error, however I don't have a setup to test, so 
I'd appreciate your feedback.
So for the final 2.1, we will have to provide an updated snapshot of the gdal-
grass plugin sources.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Blumentrath at nina.no  Mon Apr  4 07:40:36 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Mon, 4 Apr 2016 14:40:36 +0000
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
In-Reply-To: <201604041610.32723.even.rouault@spatialys.com>
References: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
 <201604041610.32723.even.rouault@spatialys.com>
Message-ID: <dde367c55e604d29a23d6e60ab2c05a7@NINSRV23.nina.no>

Hi Even,

Many thanks for the quick fix!

Works fine now!

BTW, are there any plans for a GDAL-GRASS-plugin in GDAL 2.x?

Cheers
Stefan


-----Original Message-----
From: Even Rouault [mailto:even.rouault at spatialys.com] 
Sent: 4. april 2016 16:11
To: gdal-dev at lists.osgeo.org
Cc: Blumentrath, Stefan <Stefan.Blumentrath at nina.no>
Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4

Le lundi 04 avril 2016 15:45:48, Blumentrath, Stefan a écrit :
> Hi,
> 
> I try to build GDAL 2.1 with GRASS (7.0.4svn) support.
> 
> As far as I can see there is no GRASS-plugin for GDAL 2.x..., so I do: 
> 1) build GDAL, 2) build GRASS, 3) rebuild GDAL --with-grass. 
> Unfortunately, I get the following error:

Stefan

thanks for the report. I've committed in trunk r33893 a changeset that should hopefully fix the compilation error, however I don't have a setup to test, so I'd appreciate your feedback.
So for the final 2.1, we will have to provide an updated snapshot of the gdal- grass plugin sources.

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com

From even.rouault at spatialys.com  Mon Apr  4 07:48:20 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Apr 2016 16:48:20 +0200
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
In-Reply-To: <dde367c55e604d29a23d6e60ab2c05a7@NINSRV23.nina.no>
References: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
 <201604041610.32723.even.rouault@spatialys.com>
 <dde367c55e604d29a23d6e60ab2c05a7@NINSRV23.nina.no>
Message-ID: <201604041648.20406.even.rouault@spatialys.com>

Le lundi 04 avril 2016 16:40:36, Blumentrath, Stefan a écrit :
> Hi Even,
> 
> Many thanks for the quick fix!
> 
> Works fine now!
> 
> BTW, are there any plans for a GDAL-GRASS-plugin in GDAL 2.x?

There is already the following for GDAL 2.0.X
http://download.osgeo.org/gdal/2.0.0/gdal-grass-2.0.0.tar.gz 

And for GDAL 2.1, a new snapshot from trunk with the above fix will be done. 
You can already build the plugin snapshot by yourself from the GDAL source 
tree :
- cd frmts/grass
- make dist
And this will generate gdal-grass-2.1.0.tar.gz

> 
> Cheers
> Stefan
> 
> 
> -----Original Message-----
> From: Even Rouault [mailto:even.rouault at spatialys.com]
> Sent: 4. april 2016 16:11
> To: gdal-dev at lists.osgeo.org
> Cc: Blumentrath, Stefan <Stefan.Blumentrath at nina.no>
> Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
> 
> Le lundi 04 avril 2016 15:45:48, Blumentrath, Stefan a écrit :
> > Hi,
> > 
> > I try to build GDAL 2.1 with GRASS (7.0.4svn) support.
> > 
> > As far as I can see there is no GRASS-plugin for GDAL 2.x..., so I do:
> > 1) build GDAL, 2) build GRASS, 3) rebuild GDAL --with-grass.
> 
> > Unfortunately, I get the following error:
> Stefan
> 
> thanks for the report. I've committed in trunk r33893 a changeset that
> should hopefully fix the compilation error, however I don't have a setup
> to test, so I'd appreciate your feedback. So for the final 2.1, we will
> have to provide an updated snapshot of the gdal- grass plugin sources.
> 
> Even
> 
> --
> Spatialys - Geospatial professional services http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Blumentrath at nina.no  Mon Apr  4 07:50:05 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Mon, 4 Apr 2016 14:50:05 +0000
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
In-Reply-To: <201604041648.20406.even.rouault@spatialys.com>
References: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
 <201604041610.32723.even.rouault@spatialys.com>
 <dde367c55e604d29a23d6e60ab2c05a7@NINSRV23.nina.no>
 <201604041648.20406.even.rouault@spatialys.com>
Message-ID: <c95540806b324e9db3cc534a352f627f@NINSRV23.nina.no>

Cool! Thanks for the info!

-----Original Message-----
From: Even Rouault [mailto:even.rouault at spatialys.com] 
Sent: 4. april 2016 16:48
To: Blumentrath, Stefan <Stefan.Blumentrath at nina.no>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4

Le lundi 04 avril 2016 16:40:36, Blumentrath, Stefan a écrit :
> Hi Even,
> 
> Many thanks for the quick fix!
> 
> Works fine now!
> 
> BTW, are there any plans for a GDAL-GRASS-plugin in GDAL 2.x?

There is already the following for GDAL 2.0.X http://download.osgeo.org/gdal/2.0.0/gdal-grass-2.0.0.tar.gz 

And for GDAL 2.1, a new snapshot from trunk with the above fix will be done. 
You can already build the plugin snapshot by yourself from the GDAL source tree :
- cd frmts/grass
- make dist
And this will generate gdal-grass-2.1.0.tar.gz

> 
> Cheers
> Stefan
> 
> 
> -----Original Message-----
> From: Even Rouault [mailto:even.rouault at spatialys.com]
> Sent: 4. april 2016 16:11
> To: gdal-dev at lists.osgeo.org
> Cc: Blumentrath, Stefan <Stefan.Blumentrath at nina.no>
> Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
> 
> Le lundi 04 avril 2016 15:45:48, Blumentrath, Stefan a écrit :
> > Hi,
> > 
> > I try to build GDAL 2.1 with GRASS (7.0.4svn) support.
> > 
> > As far as I can see there is no GRASS-plugin for GDAL 2.x..., so I do:
> > 1) build GDAL, 2) build GRASS, 3) rebuild GDAL --with-grass.
> 
> > Unfortunately, I get the following error:
> Stefan
> 
> thanks for the report. I've committed in trunk r33893 a changeset that 
> should hopefully fix the compilation error, however I don't have a 
> setup to test, so I'd appreciate your feedback. So for the final 2.1, 
> we will have to provide an updated snapshot of the gdal- grass plugin sources.
> 
> Even
> 
> --
> Spatialys - Geospatial professional services http://www.spatialys.com

--
Spatialys - Geospatial professional services http://www.spatialys.com

From pramsey at cleverelephant.ca  Tue Apr  5 11:56:07 2016
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 5 Apr 2016 11:56:07 -0700
Subject: [gdal-dev] Bad Date Handling
Message-ID: <CACowWR07mOLQtpwx=Wfi0uYyFnP229LomGX-97y76kZBN8ORvw@mail.gmail.com>

Hey all,

We've had a client working with dodgy data who would like an option to
avoid incompatible date mangling when reading bad data. Basically, OGR
will consume some funky dates from CSV and Excel, like 0000/00/00, but
it will NULL out others, like 1971/34/34. The net result is that, when
the data are written out to PgSQL, is some null values, and other
values that get converted to things PgSQL cannot consume (0000/00/00
becomes 2000/00/00 and PgSQL then errors out on that).
They'd like to just coerce *all* invalid dates to NULL,

I've done a small patch that does that, in the presence of a config
flag, any thoughts on if it's acceptable?

https://github.com/pramsey/gdal/pull/1

ATB,

P

From even.rouault at spatialys.com  Tue Apr  5 12:09:01 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Apr 2016 21:09:01 +0200
Subject: [gdal-dev] Bad Date Handling
In-Reply-To: <CACowWR07mOLQtpwx=Wfi0uYyFnP229LomGX-97y76kZBN8ORvw@mail.gmail.com>
References: <CACowWR07mOLQtpwx=Wfi0uYyFnP229LomGX-97y76kZBN8ORvw@mail.gmail.com>
Message-ID: <201604052109.01429.even.rouault@spatialys.com>

Le mardi 05 avril 2016 20:56:07, Paul Ramsey a écrit :
> Hey all,
> 
> We've had a client working with dodgy data who would like an option to
> avoid incompatible date mangling when reading bad data. Basically, OGR
> will consume some funky dates from CSV and Excel, like 0000/00/00, but
> it will NULL out others, like 1971/34/34. The net result is that, when
> the data are written out to PgSQL, is some null values, and other
> values that get converted to things PgSQL cannot consume (0000/00/00
> becomes 2000/00/00 and PgSQL then errors out on that).
> They'd like to just coerce *all* invalid dates to NULL,
> 
> I've done a small patch that does that, in the presence of a config
> flag, any thoughts on if it's acceptable?

Paul,

Why not rather improving the datetime parser to reject invalid dates like 
0000/00/00 ? In OGRParseDate() in ogr/ogrutils.cpp. That way that would solve 
the issue not only for Postgres output, but for all other drivers.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ari.jolma at gmail.com  Tue Apr  5 22:08:00 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Wed, 6 Apr 2016 08:08:00 +0300
Subject: [gdal-dev] Bad Date Handling
In-Reply-To: <201604052109.01429.even.rouault@spatialys.com>
References: <CACowWR07mOLQtpwx=Wfi0uYyFnP229LomGX-97y76kZBN8ORvw@mail.gmail.com>
 <201604052109.01429.even.rouault@spatialys.com>
Message-ID: <570499B0.10008@gmail.com>

05.04.2016, 22:09, Even Rouault kirjoitti:
> Le mardi 05 avril 2016 20:56:07, Paul Ramsey a écrit :
>> Hey all,
>>
>> We've had a client working with dodgy data who would like an option to
>> avoid incompatible date mangling when reading bad data. Basically, OGR
>> will consume some funky dates from CSV and Excel, like 0000/00/00, but
>> it will NULL out others, like 1971/34/34. The net result is that, when
>> the data are written out to PgSQL, is some null values, and other
>> values that get converted to things PgSQL cannot consume (0000/00/00
>> becomes 2000/00/00 and PgSQL then errors out on that).
>> They'd like to just coerce *all* invalid dates to NULL,
>>
>> I've done a small patch that does that, in the presence of a config
>> flag, any thoughts on if it's acceptable?
> Paul,
>
> Why not rather improving the datetime parser to reject invalid dates like
> 0000/00/00 ? In OGRParseDate() in ogr/ogrutils.cpp. That way that would solve
> the issue not only for Postgres output, but for all other drivers.

Just to note that I suggested some improvements and a config option to 
printing and reading dates in a github pull request(*). I did not 
suggest checking the date in OGRParseDate() but it could be also done 
with strptime(). For Windows strptime() needs to be redone but there are 
useful options.

Ari

(*) The pull request is https://github.com/OSGeo/gdal/pull/105/files but 
it seems to be cluttered with the map_algebra code I've written into the 
same fork.

>
> Even
>


From sarthak0415 at gmail.com  Wed Apr  6 04:49:43 2016
From: sarthak0415 at gmail.com (sarthak agarwal)
Date: Wed, 6 Apr 2016 17:19:43 +0530
Subject: [gdal-dev] GSOC 2016
In-Reply-To: <CAPwn9cwiLm-gHM7QFaesjVQktB3UsVEhybPGkgohZOBSuxpOWw@mail.gmail.com>
References: <56E44DE9.10103@gmail.com>
 <CAPwn9cyzczCYhXf3fzHWUuag624_H-OysYdubHv3yGSeZBH5RQ@mail.gmail.com>
 <56E57587.8000507@gmail.com> <4897287.893J5uryIY@even-n550jk>
 <CAPwn9cz9OPGiZ=oyo4D879U5wq_h_xCBjt7+4Q3E1ZcQkmWZ1Q@mail.gmail.com>
 <56E6A129.4050201@gmail.com>
 <CAPwn9cz4eab1BeyXWDUGbnj8CQ9fg=zCoTFU-49FH23tX24VdQ@mail.gmail.com>
 <56E898F9.1010309@gmail.com>
 <CAPwn9cw-HBhG=mCfj0p5h6eWVuwBYjthmDm9syS1bBAeYcfUXw@mail.gmail.com>
 <56F05758.8030008@gmail.com>
 <CAPwn9czTGV=NDKErFtCXRdBf=UtTxKG_P7fCQjTJd-TAQfb0Fg@mail.gmail.com>
 <CAPwn9cwh3Pv0V+EqdYi6BOUs4i6fiLU+=fuOgOQe8Jj+Kr1UsA@mail.gmail.com>
 <CAPwn9cwo-zNQ7YBp5c+ctg8gdP=5Akr5GW8vTVHd5sAm4TvAdw@mail.gmail.com>
 <56F4F748.7090008@gmail.com>
 <CAPwn9cwiLm-gHM7QFaesjVQktB3UsVEhybPGkgohZOBSuxpOWw@mail.gmail.com>
Message-ID: <CAPwn9cy_Ev=XSockrBkpXyrfKQmqS9eWMeTfya922KbGzpFX8A@mail.gmail.com>

Hello Dmitry,

As you know I did submit the proposal on the GSoC portal but there has been
no discussion of any kind.
I also completed my GSoC task(fixed the bug) on time.

So I request you to kindly review my proposal once and provide your
feedback. I will make the necessary changes or if you want to change the
idea and implementation we can work on that also.
I am really interested in applying for the program and contibuting to gdal.

Regards,
Sarthak

On Sat, Mar 26, 2016 at 12:13 AM, sarthak agarwal <sarthak0415 at gmail.com>
wrote:

> I have submitted the proposal, please check it once and provide your
> feedback.
>
> Sarthak
>
> On Fri, Mar 25, 2016 at 2:01 PM, Dmitry Baryshnikov <bishop.dev at gmail.com>
> wrote:
>
>> Hi Sarthak,
>>
>> Thank you for you note, but I already wrote:
>>
>> >    Don't wait for anybody with proposal. The new GSoC site is right
>> place to discuss proposals.
>>
>> So I expected to see and comment, if needed, your proposal on this site.
>> Let me remind you the site - https://summerofcode.withgoogle.com/
>>
>> Best regards,
>>     Dmitry
>>
>> 25.03.2016 10:17, sarthak agarwal пишет:
>>
>> The deadline is today.
>>
>> Sarthak
>>
>> On Thu, Mar 24, 2016 at 1:52 AM, sarthak agarwal <
>> <sarthak0415 at gmail.com>sarthak0415 at gmail.com> wrote:
>>
>>> Hello Dmitry,
>>>
>>> I fixed the bug (I guess).
>>> Now coming to my proposal for GSoC, So I was thinking of working on
>>> project #4 *Auto-detection of EPSG codes from incomplete WKT.*
>>>
>>> What I understood from the project is that we need to predict the EPSG
>>> code of certain files on the basis of some attributes which are available
>>> in the file.
>>>
>>> The attributes can be extracted from the file for which I read this
>>> <http://www.gdal.org/osr_tutorial.html#querying_coordinate_system>.
>>>
>>> Now to solve this problem I thought a lot of methods but I think the
>>> best way to solve it will be using machine learning.
>>>
>>> The way ML will handle this problem is as follows-
>>>
>>>    1. We need to find the EPSG code for a file (testing data)
>>>    2. We have a file with some attributes (projections,datum,etc ).
>>>    3. We need to the guess the best suitable class for that file(EPSG)
>>>    4. Also, we have many files for which we know the attributes and the
>>>    corresponding class (training data).
>>>
>>> This problem is now translated into an ML problem which can be solved
>>> using the following models-
>>>
>>> 1. Bayesian Stastics
>>> <https://en.wikipedia.org/wiki/Posterior_probability>
>>>
>>> where,
>>> posteriror probability = probability of this file have EPSG code 'a'.
>>> prior probability = probability of occurence of EPSG code 'a'.
>>>
>>> likelihood probablity = cases where we saw such attributes when the EPSG
>>> code is 'a'.
>>>
>>>
>>> 2. or we can use a simple knn where k is the number of possible EPSG
>>> code and the dimension of the feature vector is the number of possible
>>> attributes. we need to the find a valid and promising weight function).
>>>
>>>
>>> 3. We can use multi-class SVM.
>>>
>>> 4. any other suggestion from the community regarding the possible choice
>>> of the algo.
>>>
>>> I am thinking of actually implementing all these algo(may add algo in
>>> future depending upon the suggestion) and select the algo which gives the
>>> best performance among all of them.
>>>
>>> Please provide me feedback on my proposal and suggestion if I can
>>> add/change anything.
>>> And since very less time is left in the deadline, I would like to
>>> convert it into proposal ASAP with your help.
>>>
>>> Regards,
>>> Sarthak
>>> ​
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/a48cfa22/attachment.html>

From a.neumann at carto.net  Wed Apr  6 05:19:03 2016
From: a.neumann at carto.net (Neumann, Andreas)
Date: Wed, 06 Apr 2016 14:19:03 +0200
Subject: [gdal-dev] Save Vector Layer in QGIS through OGR with Value
	Relations
Message-ID: <653b29fbfe73b91ac44fb3b79e3fb067@carto.net>

Hi, 

Our users frequently ask for Spreadsheet export (xlsx, ods). This works
well with GDAL 2.x. 

However, we have the problem with value relations. For a traditional
value relation, in the main table we use integer codes, while the
textual values are in a linked table. In QGIS this is nicely replaced
with a readable text by the widget and in the attribute table. In print
composer we can use the get_feature() and attribute() expressions to get
to the text values. 

Could the OGR based export to spreadsheets be improved to optionally
replace the original integer codes with their text based values at
export, for columns where there are value relations? Would this be
feasible to implement as an option in QGIS? Would we need to change OGR
for that? 

Thanks for any ideas on that issue, 

Andreas

  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/ae3f8c9a/attachment-0001.html>

From a.neumann at carto.net  Wed Apr  6 05:37:46 2016
From: a.neumann at carto.net (Neumann, Andreas)
Date: Wed, 06 Apr 2016 14:37:46 +0200
Subject: [gdal-dev] [Qgis-developer] Save Vector Layer in QGIS through
 OGR with Value Relations
In-Reply-To: <653b29fbfe73b91ac44fb3b79e3fb067@carto.net>
References: <653b29fbfe73b91ac44fb3b79e3fb067@carto.net>
Message-ID: <21cb4a30fcdb005bf654b1224a564418@carto.net>

Maybe QGIS could automatically create a VRT file or temporary virtual
layer in the background that automatically replaces the content of the
columns that have value relation widgets with the corresponding text
values? 

Would this be a solution or are there more elegant ways to solve that
problem? 

Thanks, 

Andreas 

On 2016-04-06 14:19, Neumann, Andreas wrote:

> Hi, 
> 
> Our users frequently ask for Spreadsheet export (xlsx, ods). This works well with GDAL 2.x. 
> 
> However, we have the problem with value relations. For a traditional value relation, in the main table we use integer codes, while the textual values are in a linked table. In QGIS this is nicely replaced with a readable text by the widget and in the attribute table. In print composer we can use the get_feature() and attribute() expressions to get to the text values. 
> 
> Could the OGR based export to spreadsheets be improved to optionally replace the original integer codes with their text based values at export, for columns where there are value relations? Would this be feasible to implement as an option in QGIS? Would we need to change OGR for that? 
> 
> Thanks for any ideas on that issue, 
> 
> Andreas
> 
> _______________________________________________
> Qgis-developer mailing list
> Qgis-developer at lists.osgeo.org
> List info: http://lists.osgeo.org/mailman/listinfo/qgis-developer
> Unsubscribe: http://lists.osgeo.org/mailman/listinfo/qgis-developer

  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/9e489233/attachment.html>

From gdal at zeidlers.de  Wed Apr  6 05:42:42 2016
From: gdal at zeidlers.de (Julian Zeidler)
Date: Wed, 6 Apr 2016 14:42:42 +0200
Subject: [gdal-dev] Huge Memory Consumption of
	GDALDefaultOverviews::Initialize
Message-ID: <57050442.5000904@zeidlers.de>

Hey all,

I have the Problem that my cpp-Code which exclusively uses gdal for IO 
suddenly uses vast Amounts of memory in a production environment.
When i analyzed the memory foot-print (via valgrind  massif) it turns 
out that 95% (in the test case ==7.8GB! RAM) is allocated by gdal in 
GDALDefaultOverviews::Initialize
at the line  papszInitSiblingFiles = CSLDuplicate(papszSiblingFiles);
(gdaldefaultoverviews.cpp:155, i am running gdal 1.11.2, but code is 
identical on github)

The call history is:

80.48% (8,291,659,680B) (heap allocation functions) malloc/new/new[], 
--alloc-fns, etc.
->78.78% (8,116,771,916B) 0x53C1A51: CPLMalloc (cpl_conv.cpp:136)
| ->67.21% (6,924,674,689B) 0x53C1B6A: CPLStrdup (cpl_conv.cpp:255)
| | ->67.21% (6,924,640,837B) 0x53D6BC3: CSLDuplicate (cpl_string.cpp:220)
| | | ->67.21% (6,924,640,800B) 0x538A7CA: 
GDALDefaultOverviews::Initialize(GDALDataset*, char const*, char**, int) 
(gdaldefaultoverviews.cpp:155)
| | | | ->67.21% (6,924,640,800B) 0x51C67C6: 
GTiffDataset::Open(GDALOpenInfo*) (geotiff.cpp:6437)
| | | |   ->67.21% (6,924,640,800B) 0x53887FB: 
GDALOpenInternal(GDALOpenInfo&, char const* const*) (gdaldataset.cpp:2314)
| | | |     ->67.21% (6,924,640,800B) 0x5388A24: GDALOpenInternal(char 
const*, GDALAccess, char const* const*) (gdaldataset.cpp:2263)


The CornerCases are my Programm opens ~300 geotiffs for Reading from a 
Folder with ~450.000 Files in it.

Is there any way i can have gdal not check for overviews or how i can 
free this memory? After opening a tiff file?
And should gdal be hogging this much memory while it is just checking 
for external overviews?


Cheers
Julian Zeidler

From jmckenna at gatewaygeomatics.com  Wed Apr  6 05:52:00 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 6 Apr 2016 09:52:00 -0300
Subject: [gdal-dev] Bad Date Handling
In-Reply-To: <CACowWR07mOLQtpwx=Wfi0uYyFnP229LomGX-97y76kZBN8ORvw@mail.gmail.com>
References: <CACowWR07mOLQtpwx=Wfi0uYyFnP229LomGX-97y76kZBN8ORvw@mail.gmail.com>
Message-ID: <57050670.6030606@gatewaygeomatics.com>

On 2016-04-05 3:56 PM, Paul Ramsey wrote:
> Hey all,
>
> We've had a client working with dodgy data who would like an option to
> avoid incompatible date mangling when reading bad data. Basically, OGR
> will consume some funky dates from CSV and Excel, like 0000/00/00, but
> it will NULL out others, like 1971/34/34. The net result is that, when
> the data are written out to PgSQL, is some null values, and other
> values that get converted to things PgSQL cannot consume (0000/00/00
> becomes 2000/00/00 and PgSQL then errors out on that).
> They'd like to just coerce *all* invalid dates to NULL,
>
> I've done a small patch that does that, in the presence of a config
> flag, any thoughts on if it's acceptable?
>
> https://github.com/pramsey/gdal/pull/1
>
> ATB,
>

This makes a lot of sense to me.  I support this change (as a DB 
manager, and often stuck on date import issues).  I think this change is 
a good fix for now.

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/






From bishop.dev at gmail.com  Wed Apr  6 05:57:28 2016
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Wed, 6 Apr 2016 15:57:28 +0300
Subject: [gdal-dev] GSOC 2016
In-Reply-To: <CAPwn9cy_Ev=XSockrBkpXyrfKQmqS9eWMeTfya922KbGzpFX8A@mail.gmail.com>
References: <56E44DE9.10103@gmail.com>
 <CAPwn9cyzczCYhXf3fzHWUuag624_H-OysYdubHv3yGSeZBH5RQ@mail.gmail.com>
 <56E57587.8000507@gmail.com> <4897287.893J5uryIY@even-n550jk>
 <CAPwn9cz9OPGiZ=oyo4D879U5wq_h_xCBjt7+4Q3E1ZcQkmWZ1Q@mail.gmail.com>
 <56E6A129.4050201@gmail.com>
 <CAPwn9cz4eab1BeyXWDUGbnj8CQ9fg=zCoTFU-49FH23tX24VdQ@mail.gmail.com>
 <56E898F9.1010309@gmail.com>
 <CAPwn9cw-HBhG=mCfj0p5h6eWVuwBYjthmDm9syS1bBAeYcfUXw@mail.gmail.com>
 <56F05758.8030008@gmail.com>
 <CAPwn9czTGV=NDKErFtCXRdBf=UtTxKG_P7fCQjTJd-TAQfb0Fg@mail.gmail.com>
 <CAPwn9cwh3Pv0V+EqdYi6BOUs4i6fiLU+=fuOgOQe8Jj+Kr1UsA@mail.gmail.com>
 <CAPwn9cwo-zNQ7YBp5c+ctg8gdP=5Akr5GW8vTVHd5sAm4TvAdw@mail.gmail.com>
 <56F4F748.7090008@gmail.com>
 <CAPwn9cwiLm-gHM7QFaesjVQktB3UsVEhybPGkgohZOBSuxpOWw@mail.gmail.com>
 <CAPwn9cy_Ev=XSockrBkpXyrfKQmqS9eWMeTfya922KbGzpFX8A@mail.gmail.com>
Message-ID: <570507B8.3070406@gmail.com>

Hi Sarthak,

Thanks for submitting your proposal. Proposals are frozen at this point.
Right now we're completing ranking and waiting for Google to assign slots.

Best regards,
     Dmitry

06.04.2016 14:49, sarthak agarwal пишет:
> Hello Dmitry,
>
> As you know I did submit the proposal on the GSoC portal but there has 
> been no discussion of any kind.
> I also completed my GSoC task(fixed the bug) on time.
>
> So I request you to kindly review my proposal once and provide your 
> feedback. I will make the necessary changes or if you want to change 
> the idea and implementation we can work on that also.
> I am really interested in applying for the program and contibuting to 
> gdal.
>
> Regards,
> Sarthak
>
> On Sat, Mar 26, 2016 at 12:13 AM, sarthak agarwal 
> <sarthak0415 at gmail.com <mailto:sarthak0415 at gmail.com>> wrote:
>
>     I have submitted the proposal, please check it once and provide
>     your feedback.
>
>     Sarthak
>
>     On Fri, Mar 25, 2016 at 2:01 PM, Dmitry Baryshnikov
>     <bishop.dev at gmail.com <mailto:bishop.dev at gmail.com>> wrote:
>
>         Hi Sarthak,
>
>         Thank you for you note, but I already wrote:
>
>         >    Don't wait for anybody with proposal. The new GSoC site
>         is right place to discuss proposals.
>
>         So I expected to see and comment, if needed, your proposal on
>         this site. Let me remind you the site -
>         https://summerofcode.withgoogle.com/
>
>         Best regards,
>              Dmitry
>
>         25.03.2016 10:17, sarthak agarwal пишет:
>>         The deadline is today.
>>
>>         Sarthak
>>
>>         On Thu, Mar 24, 2016 at 1:52 AM, sarthak agarwal
>>         <sarthak0415 at gmail.com <mailto:sarthak0415 at gmail.com>> wrote:
>>
>>             Hello Dmitry,
>>
>>             I fixed the bug (I guess).
>>             Now coming to my proposal for GSoC, So I was thinking of
>>             working on project #4 *Auto-detection of EPSG codes from
>>             incomplete WKT.*
>>
>>             What I understood from the project is that we need to
>>             predict the EPSG code of certain files on the basis of
>>             some attributes which are available in the file.
>>
>>             The attributes can be extracted from the file for which I
>>             read this
>>             <http://www.gdal.org/osr_tutorial.html#querying_coordinate_system>.
>>
>>             Now to solve this problem I thought a lot of methods but
>>             I think the best way to solve it will be using machine
>>             learning.
>>
>>             The way ML will handle this problem is as follows-
>>
>>              1. We need to find the EPSG code for a file (testing data)
>>              2. We have a file with some attributes
>>                 (projections,datum,etc ).
>>              3. We need to the guess the best suitable class for that
>>                 file(EPSG)
>>              4. Also, we have many files for which we know the
>>                 attributes and the corresponding class (training data).
>>
>>             This problem is now translated into an ML problem which
>>             can be solved using the following models-
>>
>>             1. Bayesian Stastics
>>             <https://en.wikipedia.org/wiki/Posterior_probability>
>>
>>                 where,
>>                 posteriror probability = probability of this file
>>                 have EPSG code 'a'.
>>                 prior probability = probability of occurence of EPSG
>>                 code 'a'.
>>
>>                 likelihood probablity = cases where we saw such
>>                 attributes when the EPSG code is 'a'.
>>
>>
>>             2. or we can use a simple knn where k is the number of
>>             possible EPSG code and the dimension of the feature
>>             vector is the number of possible attributes. we need to
>>             the find a valid and promising weight function).
>>
>>
>>             3. We can use multi-class SVM.
>>
>>             4. any other suggestion from the community regarding the
>>             possible choice of the algo.
>>
>>             I am thinking of actually implementing all these algo(may
>>             add algo in future depending upon the suggestion) and
>>             select the algo which gives the best performance among
>>             all of them.
>>
>>             Please provide me feedback on my proposal and suggestion
>>             if I can add/change anything.
>>             And since very less time is left in the deadline, I would
>>             like to convert it into proposal ASAP with your help.
>>
>>             Regards,
>>             Sarthak
>>
>>             ​
>>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/b8a437ab/attachment-0001.html>

From even.rouault at spatialys.com  Wed Apr  6 06:09:59 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Apr 2016 15:09:59 +0200
Subject: [gdal-dev] Huge Memory Consumption of
	GDALDefaultOverviews::Initialize
In-Reply-To: <57050442.5000904@zeidlers.de>
References: <57050442.5000904@zeidlers.de>
Message-ID: <201604061509.59361.even.rouault@spatialys.com>

Julian,

I addressed a similar use case some time ago in GDAL 2.1 with
https://trac.osgeo.org/gdal/changeset/32242

For previous versions, you can set GDAL_DISABLE_READDIR_ON_OPEN = YES as 
environment variable / configuration option.
And if you don't need checking for any side-car file at all, you can even set
GDAL_DISABLE_READDIR_ON_OPEN = EMPTY_DIR

Even

> Hey all,
> 
> I have the Problem that my cpp-Code which exclusively uses gdal for IO
> suddenly uses vast Amounts of memory in a production environment.
> When i analyzed the memory foot-print (via valgrind  massif) it turns
> out that 95% (in the test case ==7.8GB! RAM) is allocated by gdal in
> GDALDefaultOverviews::Initialize
> at the line  papszInitSiblingFiles = CSLDuplicate(papszSiblingFiles);
> (gdaldefaultoverviews.cpp:155, i am running gdal 1.11.2, but code is
> identical on github)
> 
> The call history is:
> 
> 80.48% (8,291,659,680B) (heap allocation functions) malloc/new/new[],
> --alloc-fns, etc.
> ->78.78% (8,116,771,916B) 0x53C1A51: CPLMalloc (cpl_conv.cpp:136)
> 
> | ->67.21% (6,924,674,689B) 0x53C1B6A: CPLStrdup (cpl_conv.cpp:255)
> | 
> | | ->67.21% (6,924,640,837B) 0x53D6BC3: CSLDuplicate (cpl_string.cpp:220)
> | | 
> | | | ->67.21% (6,924,640,800B) 0x538A7CA:
> GDALDefaultOverviews::Initialize(GDALDataset*, char const*, char**, int)
> (gdaldefaultoverviews.cpp:155)
> 
> | | | | ->67.21% (6,924,640,800B) 0x51C67C6:
> GTiffDataset::Open(GDALOpenInfo*) (geotiff.cpp:6437)
> 
> | | | |   ->67.21% (6,924,640,800B) 0x53887FB:
> GDALOpenInternal(GDALOpenInfo&, char const* const*) (gdaldataset.cpp:2314)
> 
> | | | |     ->67.21% (6,924,640,800B) 0x5388A24: GDALOpenInternal(char
> 
> const*, GDALAccess, char const* const*) (gdaldataset.cpp:2263)
> 
> 
> The CornerCases are my Programm opens ~300 geotiffs for Reading from a
> Folder with ~450.000 Files in it.
> 
> Is there any way i can have gdal not check for overviews or how i can
> free this memory? After opening a tiff file?
> And should gdal be hogging this much memory while it is just checking
> for external overviews?
> 
> 
> Cheers
> Julian Zeidler
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdal at zeidlers.de  Wed Apr  6 06:21:24 2016
From: gdal at zeidlers.de (Julian Zeidler)
Date: Wed, 6 Apr 2016 15:21:24 +0200
Subject: [gdal-dev] Huge Memory Consumption of
 GDALDefaultOverviews::Initialize
In-Reply-To: <201604061509.59361.even.rouault@spatialys.com>
References: <57050442.5000904@zeidlers.de>
 <201604061509.59361.even.rouault@spatialys.com>
Message-ID: <57050D54.209@zeidlers.de>

Hi Even,

Thank you for the the very quick and very helpful reply. I spent the 
whole day yesterday trying to find the memory leak in my code that 
caused 11GB Ram usage. ;-)
One quick follow-up would setting GDAL_DISABLE_READDIR_ON_OPEN = 
EMPTY_DIR break reading from vrt or envi files with a header?

Cheers
Julian

Am 06.04.2016 um 15:09 schrieb Even Rouault:
> Julian,
>
> I addressed a similar use case some time ago in GDAL 2.1 with
> https://trac.osgeo.org/gdal/changeset/32242
>
> For previous versions, you can set GDAL_DISABLE_READDIR_ON_OPEN = YES as
> environment variable / configuration option.
> And if you don't need checking for any side-car file at all, you can even set
> GDAL_DISABLE_READDIR_ON_OPEN = EMPTY_DIR
>
> Even
>
>> Hey all,
>>
>> I have the Problem that my cpp-Code which exclusively uses gdal for IO
>> suddenly uses vast Amounts of memory in a production environment.
>> When i analyzed the memory foot-print (via valgrind  massif) it turns
>> out that 95% (in the test case ==7.8GB! RAM) is allocated by gdal in
>> GDALDefaultOverviews::Initialize
>> at the line  papszInitSiblingFiles = CSLDuplicate(papszSiblingFiles);
>> (gdaldefaultoverviews.cpp:155, i am running gdal 1.11.2, but code is
>> identical on github)
>>
>> The call history is:
>>
>> 80.48% (8,291,659,680B) (heap allocation functions) malloc/new/new[],
>> --alloc-fns, etc.
>> ->78.78% (8,116,771,916B) 0x53C1A51: CPLMalloc (cpl_conv.cpp:136)
>>
>> | ->67.21% (6,924,674,689B) 0x53C1B6A: CPLStrdup (cpl_conv.cpp:255)
>> |
>> | | ->67.21% (6,924,640,837B) 0x53D6BC3: CSLDuplicate (cpl_string.cpp:220)
>> | |
>> | | | ->67.21% (6,924,640,800B) 0x538A7CA:
>> GDALDefaultOverviews::Initialize(GDALDataset*, char const*, char**, int)
>> (gdaldefaultoverviews.cpp:155)
>>
>> | | | | ->67.21% (6,924,640,800B) 0x51C67C6:
>> GTiffDataset::Open(GDALOpenInfo*) (geotiff.cpp:6437)
>>
>> | | | |   ->67.21% (6,924,640,800B) 0x53887FB:
>> GDALOpenInternal(GDALOpenInfo&, char const* const*) (gdaldataset.cpp:2314)
>>
>> | | | |     ->67.21% (6,924,640,800B) 0x5388A24: GDALOpenInternal(char
>>
>> const*, GDALAccess, char const* const*) (gdaldataset.cpp:2263)
>>
>>
>> The CornerCases are my Programm opens ~300 geotiffs for Reading from a
>> Folder with ~450.000 Files in it.
>>
>> Is there any way i can have gdal not check for overviews or how i can
>> free this memory? After opening a tiff file?
>> And should gdal be hogging this much memory while it is just checking
>> for external overviews?
>>
>>
>> Cheers
>> Julian Zeidler
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Wed Apr  6 06:37:09 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Apr 2016 15:37:09 +0200
Subject: [gdal-dev] Huge Memory Consumption of
	GDALDefaultOverviews::Initialize
In-Reply-To: <57050D54.209@zeidlers.de>
References: <57050442.5000904@zeidlers.de>
 <201604061509.59361.even.rouault@spatialys.com> <57050D54.209@zeidlers.de>
Message-ID: <201604061537.10051.even.rouault@spatialys.com>

Le mercredi 06 avril 2016 15:21:24, Julian Zeidler a écrit :
> Hi Even,
> 
> Thank you for the the very quick and very helpful reply. I spent the
> whole day yesterday trying to find the memory leak in my code that
> caused 11GB Ram usage. ;-)
> One quick follow-up would setting GDAL_DISABLE_READDIR_ON_OPEN =
> EMPTY_DIR break reading from vrt or envi files with a header?

Should work with VRT (VRT sources are not really side-car files in the meaning 
I meant), but that would break ENVI.
I'd recommend just using GDAL_DISABLE_READDIR_ON_OPEN = YES to be safe. That 
way drivers that need sidecar files will still try to probe them (directly, and 
not by doing a readdir()).

> 
> Cheers
> Julian
> 
> Am 06.04.2016 um 15:09 schrieb Even Rouault:
> > Julian,
> > 
> > I addressed a similar use case some time ago in GDAL 2.1 with
> > https://trac.osgeo.org/gdal/changeset/32242
> > 
> > For previous versions, you can set GDAL_DISABLE_READDIR_ON_OPEN = YES as
> > environment variable / configuration option.
> > And if you don't need checking for any side-car file at all, you can even
> > set GDAL_DISABLE_READDIR_ON_OPEN = EMPTY_DIR
> > 
> > Even
> > 
> >> Hey all,
> >> 
> >> I have the Problem that my cpp-Code which exclusively uses gdal for IO
> >> suddenly uses vast Amounts of memory in a production environment.
> >> When i analyzed the memory foot-print (via valgrind  massif) it turns
> >> out that 95% (in the test case ==7.8GB! RAM) is allocated by gdal in
> >> GDALDefaultOverviews::Initialize
> >> at the line  papszInitSiblingFiles = CSLDuplicate(papszSiblingFiles);
> >> (gdaldefaultoverviews.cpp:155, i am running gdal 1.11.2, but code is
> >> identical on github)
> >> 
> >> The call history is:
> >> 
> >> 80.48% (8,291,659,680B) (heap allocation functions) malloc/new/new[],
> >> --alloc-fns, etc.
> >> ->78.78% (8,116,771,916B) 0x53C1A51: CPLMalloc (cpl_conv.cpp:136)
> >> 
> >> | ->67.21% (6,924,674,689B) 0x53C1B6A: CPLStrdup (cpl_conv.cpp:255)
> >> | 
> >> | | ->67.21% (6,924,640,837B) 0x53D6BC3: CSLDuplicate
> >> | | (cpl_string.cpp:220)
> >> | | 
> >> | | | ->67.21% (6,924,640,800B) 0x538A7CA:
> >> GDALDefaultOverviews::Initialize(GDALDataset*, char const*, char**, int)
> >> (gdaldefaultoverviews.cpp:155)
> >> 
> >> | | | | ->67.21% (6,924,640,800B) 0x51C67C6:
> >> GTiffDataset::Open(GDALOpenInfo*) (geotiff.cpp:6437)
> >> 
> >> | | | |   ->67.21% (6,924,640,800B) 0x53887FB:
> >> GDALOpenInternal(GDALOpenInfo&, char const* const*)
> >> (gdaldataset.cpp:2314)
> >> 
> >> | | | |     ->67.21% (6,924,640,800B) 0x5388A24: GDALOpenInternal(char
> >> 
> >> const*, GDALAccess, char const* const*) (gdaldataset.cpp:2263)
> >> 
> >> 
> >> The CornerCases are my Programm opens ~300 geotiffs for Reading from a
> >> Folder with ~450.000 Files in it.
> >> 
> >> Is there any way i can have gdal not check for overviews or how i can
> >> free this memory? After opening a tiff file?
> >> And should gdal be hogging this much memory while it is just checking
> >> for external overviews?
> >> 
> >> 
> >> Cheers
> >> Julian Zeidler
> >> _______________________________________________
> >> gdal-dev mailing list
> >> gdal-dev at lists.osgeo.org
> >> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kmrtnjscnc at gmail.com  Wed Apr  6 07:26:01 2016
From: kmrtnjscnc at gmail.com (Tanuj Kumar)
Date: Wed, 6 Apr 2016 19:56:01 +0530
Subject: [gdal-dev] Build problem
Message-ID: <CA+uDmDbh6czdL6uLvX6R__R2e2b-wVmYC4_MSh6Um-821G0L9Q@mail.gmail.com>

Dear list
I had earlier built gdal 2.1.0 Beta, and now I am trying to experiment with
libpng in version 2.0.2 source.(Using ./configure, make, and then sudo make
install).

But everytime I use make, somehow the changes are not taken into effect.
gdalinfo --version results in gdal 2.1.0(Beta), even though I had built the
gdal 2.0.2 source.

I have even tried make -B( that results in a lot of errors) and make clean,
but still the changes do not take place.

I Googled it but wasn't able to find a solution.

Any suggestions on what I might be doing wrong?

Thank you
Tanuj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/cd322634/attachment.html>

From dstu at u.washington.edu  Wed Apr  6 09:02:20 2016
From: dstu at u.washington.edu (Derek Stuart)
Date: Wed, 6 Apr 2016 22:02:20 +0600
Subject: [gdal-dev] Setting up GDAL Custom Transformation from ESRI GTF
	File
In-Reply-To: <ndrcb3$s85$1@ger.gmane.org>
References: <CAC1Hrcg+u_UbB29PyD-p3RB+MYC3GKmVuDaD7R=HbDp0zMC2Ng@mail.gmail.com>
 <ndl3sj$20d$1@ger.gmane.org>
 <CAC1Hrci8WB-hKQDUTogtdijGKM0tBN3QM1tnaZT9jMpd=ueieg@mail.gmail.com>
 <ndrcb3$s85$1@ger.gmane.org>
Message-ID: <CAC1HrcgWYR92nW5VmGrmjgZ0weSy17X3NhabvGA=4wUqK0aZWA@mail.gmail.com>

I've discovered that the current implementation of RAS Mapper only allows
an ESRI Prj file to be read in. It uses the GDAL routines, but in a limited
way.  I suspect that I should be able to get RAS Mapper to access a custom
transformation if I create a dummy ESPG value with the desired parameters
in the GDAL files listed in my original email.

Derek

On Sun, Apr 3, 2016 at 8:56 PM, Andre Joost <andre+joost at nurfuerspam.de>
wrote:

> Am 03.04.2016 um 14:05 schrieb Derek Stuart:
>
>> Andre: The only Gulshan coordinate system I see with EPSG 4682 is a
>> geographic coordinate system.  I am using a projected coordinate
>> system called BTM. This is a fairly new coordinate system, but it is
>> the standard here in Bangladesh.
>>
>>
>> PROJCS["BTM",GEOGCS["GCS_Everest_Bangladesh",DATUM["D_Everest_Bangladesh",SPHEROID["Everest_Adjustment_1937",6377276.345,300.8017]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",-2000000.0],PARAMETER["Central_Meridian",90.0],PARAMETER["Scale_Factor",0.9996],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]
>>
>>  There is a projected coordinate system called Gulshan 303 Bangladesh
>> TM that uses the Gulshan datum, but it has EPSG 3106, not 4682.
>>
>>
>> PROJCS["Gulshan_303_Bangladesh_TM",GEOGCS["GCS_Gulshan_303",DATUM["D_Gulshan_303",SPHEROID["Everest_Adjustment_1937",6377276.345,300.8017]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",0.0],PARAMETER["Central_Meridian",90.0],PARAMETER["Scale_Factor",0.9996],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0],AUTHORITY["EPSG",3106]]
>>
>>  This has very similar parameters to BTM, except that Gulshan 303 has
>> a false northing of 0 and BTM has -2000000.0.  I asked some other
>> GIS professionals locally and was told that here isn't a EPSG code
>> that matches BTM.  Unless I want to reproject my data and work in
>> UTM, I don't see a way to avoid adding a custom transformation to
>> GDAL.
>>
>
> Your first post did not include information on the projected coordinate
> system. Since it has a different false Northing, you really have to put up
> a custom CRS. But you have to take the +towgs84 parameter set to shift from
> the Everest ellipsoid to WGS84. The WKT definitions you give do not include
> that, because the ARCGIS world handles datum transformations separately.
>
> You can put the WKT definition above in a text file, and run gdalsrsinfo
> on that file. It will report:
>
> +proj=tmerc +lat_0=0 +lon_0=90 +k=0.9996 +x_0=500000 +y_0=-2000000
> +a=6377276.345 +b=6356075.41314024 +units=m +no_defs
>
> As mentioned above, add the +towgs84 set for Gulshan, which you find in
> EPSG:4682:
>
> +proj=tmerc +lat_0=0 +lon_0=90 +k=0.9996 +x_0=500000 +y_0=-2000000
> +a=6377276.345 +b=6356075.41314024 +towgs84=283.7,735.9,261.1,0,0,0,0
> +units=m +no_defs
>
>
> HTH,
> André Joost
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
Derek
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/88450a06/attachment.html>

From jef at norbit.de  Wed Apr  6 09:37:27 2016
From: jef at norbit.de (=?iso-8859-1?B?SvxyZ2VuIEUu?= Fischer)
Date: Wed, 6 Apr 2016 18:37:27 +0200
Subject: [gdal-dev] GDAL packaging in OSGeo4W
In-Reply-To: <201602221215.31399.even.rouault@spatialys.com>
References: <201602221215.31399.even.rouault@spatialys.com>
Message-ID: <20160406163727.GA12585@norbit.de>

Hi Even,

On Mon, 22. Feb 2016 at 12:15:31 +0100, Even Rouault wrote:
> Could be cool to have -dev versions packaged from time to time (or potentially 
> nightly builds), as well as a few drivers available as plugins (PDF driver, 
> MongoDB one)

There's a nighly build of GDAL in OSGeo4W now.   Invoke gdal-dev-env from the
osgeo4w shell to setup it's paths.


Jürgen

-- 
Jürgen E. Fischer         norBIT GmbH               Tel. +49-4931-918175-31
Dipl.-Inf. (FH)           Rheinstraße 13            Fax. +49-4931-918175-50
Software Engineer         D-26506 Norden               http://www.norbit.de
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: Digital signature
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/daf96654/attachment-0001.sig>

From even.rouault at spatialys.com  Wed Apr  6 09:51:45 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Apr 2016 18:51:45 +0200
Subject: [gdal-dev] GDAL packaging in OSGeo4W
In-Reply-To: <20160406163727.GA12585@norbit.de>
References: <201602221215.31399.even.rouault@spatialys.com>
 <20160406163727.GA12585@norbit.de>
Message-ID: <201604061851.45274.even.rouault@spatialys.com>

Le mercredi 06 avril 2016 18:37:27, Jürgen E. Fischer a écrit :
> Hi Even,
> 
> On Mon, 22. Feb 2016 at 12:15:31 +0100, Even Rouault wrote:
> > Could be cool to have -dev versions packaged from time to time (or
> > potentially nightly builds), as well as a few drivers available as
> > plugins (PDF driver, MongoDB one)
> 
> There's a nighly build of GDAL in OSGeo4W now.   Invoke gdal-dev-env from
> the osgeo4w shell to setup it's paths.

That's great !

> 
> 
> Jürgen

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ccjklppp60 at walla.co.il  Wed Apr  6 10:58:55 2016
From: ccjklppp60 at walla.co.il (=?UTF-8?b?15PXk9epINep15PXk9eS15PXqQ==?=)
Date: Wed, 06 Apr 2016 19:58:55 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 Beta 1 Available
Message-ID: <~00057054E5F8874250002FA@walla.co.il>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/934ba37a/attachment.html>

From jason.greenlaw at noaa.gov  Wed Apr  6 11:38:36 2016
From: jason.greenlaw at noaa.gov (Jason Greenlaw - NOAA Affiliate)
Date: Wed, 6 Apr 2016 14:38:36 -0400
Subject: [gdal-dev] Negative NoData Value with Signed Byte Raster
Message-ID: <CAAoP0JzFN=O-4mQO1sHMHAFaUuM7XMUF8Sw+9cbjhPL8ktWS7w@mail.gmail.com>

Hello,

I've run into a snag trying to assign a negative NoData value to a Signed
Byte raster.

Example:

gdal_translate -a_nodata -128 -ot Byte -co PIXELTYPE=SIGNEDBYTE
signed8test.tif signed8testnew.tif


produces this error:

for band 1, nodata value has been clamped to 0, the original value being
out of range.


Whereas gdal_calc.py does not throw the same error and assigns the value:


gdal_calc.py -A signed16test.tif --outfile=signed8test.tif
--NoDataValue=-128 --co=COMPRESS=LZW --co=TILED=yes --type=Byte
--co=PIXELTYPE=SIGNEDBYTE --calc="A+(A<0)*256"
0 .. 10 .. 20 .. 30 .. 40 .. 50 .. 60 .. 70 .. 80 .. 90 .. 100 - Done


It seems gdal_calc.py does not enforce any restriction on NoData, as it
even allows values outside the valid range (e.g. -999).

There also appears to be some confusion in applications (e.g. ArcGIS) as to
whether a NoData value between -127 to -1 should be expressed in that range
explicitly or in the actual pixel value range of 128 - 255.  I could not
find any documentation online describing the standard, so I suspect it may
be up to each application to interpret it according to preference.

So, I suppose my questions are:

1) Are negative NoData values (-127 to -1) for the SIGNEDBYTE type supposed
to be supported by GDAL?
2) Is there a convention which states that they must be expressed in the
range -127 to -1 or 128 to 255?

Regards,
Jason Greenlaw
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/72580128/attachment.html>

From melvin.legge at ca.thalesgroup.com  Wed Apr  6 11:48:07 2016
From: melvin.legge at ca.thalesgroup.com (mlegge)
Date: Wed, 6 Apr 2016 11:48:07 -0700 (PDT)
Subject: [gdal-dev] CADRG/CIB GDAL Example
Message-ID: <1459968487725-5260001.post@n6.nabble.com>

I have spent some time trying to find an example of how to use GDAL to open
CADRG/ADRG/CIB data.  I can find lots of information saying that GDAL
supports these formats but no example on how to achieve this in GDAL.

We have sample apps where we load other types of data by calling GDALOpen
and then using GDALWarpOperation (among other calls and they work well). For
the CADRG we pass the A.Toc file to GDALOpen, however the A.Toc does not
contain map data directly but rather a list of data subsets.  We use the
MetaData available after the call to GDALOpen to call GDALOpen again
followed by GDALWarpOperation.ChunkAndWarpImage for each of the data
subsets.  However the ChunkAndWarpImage takes an extremely long time (hours)
to complete making this approach unusable. 

It would be greatly appreciated if someone could point me to some sample
code or give me some pointers on how to use CADRG withing GDAL.

Note that I am pretty much a newbie to GIS but I do have access to more
experienced GIS developers.

Thanks
Mel



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/CADRG-CIB-GDAL-Example-tp5260001.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Wed Apr  6 12:10:07 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Apr 2016 21:10:07 +0200
Subject: [gdal-dev] Negative NoData Value with Signed Byte Raster
In-Reply-To: <CAAoP0JzFN=O-4mQO1sHMHAFaUuM7XMUF8Sw+9cbjhPL8ktWS7w@mail.gmail.com>
References: <CAAoP0JzFN=O-4mQO1sHMHAFaUuM7XMUF8Sw+9cbjhPL8ktWS7w@mail.gmail.com>
Message-ID: <201604062110.07698.even.rouault@spatialys.com>

Le mercredi 06 avril 2016 20:38:36, Jason Greenlaw - NOAA Affiliate a écrit :
> Hello,
> 
> I've run into a snag trying to assign a negative NoData value to a Signed
> Byte raster.

Jason,

I've just pushed a fix for that in trunk (signed byte is a bit of a second 
class citizen as a data type in GDAL, hence the issues) to avoid the erroneous 
clamping. You're supposed to put negative values.
You can workaround the issue by first creating a VRT by adding

    <NoDataValue>-128</NoDataValue>
    <Metadata>
      <MDI key="PIXELTYPE">SIGNEDBYTE</MDI>
    </Metadata>

in <VRTRasterBand>

and then gdal_translate the VRT as TIFF

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jason.greenlaw at noaa.gov  Wed Apr  6 12:26:21 2016
From: jason.greenlaw at noaa.gov (Jason Greenlaw - NOAA Affiliate)
Date: Wed, 6 Apr 2016 15:26:21 -0400
Subject: [gdal-dev] Negative NoData Value with Signed Byte Raster
In-Reply-To: <201604062110.07698.even.rouault@spatialys.com>
References: <CAAoP0JzFN=O-4mQO1sHMHAFaUuM7XMUF8Sw+9cbjhPL8ktWS7w@mail.gmail.com>
 <201604062110.07698.even.rouault@spatialys.com>
Message-ID: <CAAoP0JxYuPMk-XHtj=yfDMVqLtK+Th-y9WC0nc48R0V9YLh-Ng@mail.gmail.com>

Thanks for the workaround and quick fix.  The VRT addresses the issue on
the data end.  Now it's only an ArcGIS problem :)

Jason


On Wed, Apr 6, 2016 at 3:10 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Le mercredi 06 avril 2016 20:38:36, Jason Greenlaw - NOAA Affiliate a
> écrit :
> > Hello,
> >
> > I've run into a snag trying to assign a negative NoData value to a Signed
> > Byte raster.
>
> Jason,
>
> I've just pushed a fix for that in trunk (signed byte is a bit of a second
> class citizen as a data type in GDAL, hence the issues) to avoid the
> erroneous
> clamping. You're supposed to put negative values.
> You can workaround the issue by first creating a VRT by adding
>
>     <NoDataValue>-128</NoDataValue>
>     <Metadata>
>       <MDI key="PIXELTYPE">SIGNEDBYTE</MDI>
>     </Metadata>
>
> in <VRTRasterBand>
>
> and then gdal_translate the VRT as TIFF
>
> Even
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/21e00b51/attachment.html>

From andrew.bell.ia at gmail.com  Wed Apr  6 13:02:35 2016
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 6 Apr 2016 15:02:35 -0500
Subject: [gdal-dev] Change in parsing of OGR where clause
Message-ID: <CACJ51z38eO+pocAyA7r291RM7XBf2hGg_8SO-gsT560syqMJhg@mail.gmail.com>

In version 1.X of GDAL, the following was accepted and worked:

std::string query = "LOCATION=\"some text\"";
OGR_L_SetAttributeFilter(layer, query.c_str());

In version 2.X, this is no longer accepted and the double quotes must be
replaced by single quotes:

std::string query = "LOCATION='some text'";
OGR_L_SetAttributeFilter(layer, query.c_str());

This wouldn't be awful, but the error that occurs tells you nothing about
the actual problem.  It yields:

"some text" not recognised as an available field.

Perhaps it should give a parsing error?  In 1.11, parsing the query with
double quotes would yield an SNT_OPERATION node with subnodes SNT_COLUMN
and SNT_CONSTANT.  In 2.0, the same query yields an SNT_OPERATION with two
SNT_COLUMN subnodes, which seems to cause the confusing error.

Should the parser accept column values with double quotes?  If not, can it
provide better feedback?

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/1d128f10/attachment.html>

From szekerest at gmail.com  Wed Apr  6 13:17:57 2016
From: szekerest at gmail.com (Tamas Szekeres)
Date: Wed, 6 Apr 2016 22:17:57 +0200
Subject: [gdal-dev] GDAL packaging in OSGeo4W
Message-ID: <CACALY+TQVbAsnH_Dw3M1HKtaPhUsSr5xzKz64B1B0CLdktMoqg@mail.gmail.com>

Hi Jürgen,

Is that possible to include further plugins in the gdal-dev build?
I'm interested in adding the new ogr_MSSQLSpatial.dll plugin build as an
optional component? Though it requires the SQL Server native client 11
driver installed on the build machine. I could add this package manually,
but I'm not sure if that satisfies with the intent that these are nightly
build packages. Since this plugin depends on sqlncli11.dll the package
description should mention the requirement to install the SQL Server native
client 11 driver as a prerequisite.

in nmake.opt the followings should be enabled when compiling the plugin:
SQLNCLI_VERSION = 11
SQLNCLI_DIR = C:\Program Files (x86)\Microsoft SQL
Server\$(SQLNCLI_VERSION)0\SDK
SQLNCLI_LIB = "$(SQLNCLI_DIR)\Lib\x86\sqlncli$(SQLNCLI_VERSION).lib"
SQLNCLI_INCLUDE = "-I$(SQLNCLI_DIR)\Include"
-DSQLNCLI_VERSION=$(SQLNCLI_VERSION) -DMSSQL_BCP_SUPPORTED=1


Thanks,

Tamas



2016-04-06 18:37 GMT+02:00 Jürgen E. <jef at norbit.de>:

> Hi Even,
>
> On Mon, 22. Feb 2016 at 12:15:31 +0100, Even Rouault wrote:
> > Could be cool to have -dev versions packaged from time to time (or
> potentially
> > nightly builds), as well as a few drivers available as plugins (PDF
> driver,
> > MongoDB one)
>
> There's a nighly build of GDAL in OSGeo4W now.   Invoke gdal-dev-env from
> the
> osgeo4w shell to setup it's paths.
>
>
> Jürgen
>
> --
> Jürgen E. Fischer         norBIT GmbH               Tel.
> +49-4931-918175-31
> Dipl.-Inf. (FH)           Rheinstraße 13            Fax.
> +49-4931-918175-50
> Software Engineer         D-26506 Norden
> http://www.norbit.de
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/338b5230/attachment.html>

From Stephen.P.Gaughan at dartmouth.edu  Wed Apr  6 12:48:30 2016
From: Stephen.P.Gaughan at dartmouth.edu (Stephen P. Gaughan)
Date: Wed, 6 Apr 2016 19:48:30 +0000
Subject: [gdal-dev] subscribe
Message-ID: <CY1PR0301MB20754F9C58985C66D53BFA1DBA9F0@CY1PR0301MB2075.namprd03.prod.outlook.com>

subscribe

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/f936c504/attachment-0001.html>

From even.rouault at spatialys.com  Wed Apr  6 13:39:48 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Apr 2016 22:39:48 +0200
Subject: [gdal-dev] Change in parsing of OGR where clause
In-Reply-To: <CACJ51z38eO+pocAyA7r291RM7XBf2hGg_8SO-gsT560syqMJhg@mail.gmail.com>
References: <CACJ51z38eO+pocAyA7r291RM7XBf2hGg_8SO-gsT560syqMJhg@mail.gmail.com>
Message-ID: <201604062239.48978.even.rouault@spatialys.com>

Andrew,

> In version 1.X of GDAL, the following was accepted and worked:
> 
> std::string query = "LOCATION=\"some text\"";
> OGR_L_SetAttributeFilter(layer, query.c_str());
> 
> In version 2.X, this is no longer accepted and the double quotes must be
> replaced by single quotes:
> 
> std::string query = "LOCATION='some text'";
> OGR_L_SetAttributeFilter(layer, query.c_str());
> 
> This wouldn't be awful, but the error that occurs tells you nothing about
> the actual problem.  It yields:
> 
> "some text" not recognised as an available field.

Well, I find the message quite clear : "some text" isn't an recognized field :-)

> 
> Perhaps it should give a parsing error?

No, that's valid SQL. "some text" is a quoted identifier, that doesn't match 
any field of your layer.

> In 1.11, parsing the query with
> double quotes would yield an SNT_OPERATION node with subnodes SNT_COLUMN
> and SNT_CONSTANT.  In 2.0, the same query yields an SNT_OPERATION with two
> SNT_COLUMN subnodes, which seems to cause the confusing error.
> 
> Should the parser accept column values with double quotes?  If not, can it
> provide better feedback?

I will stop joking now :-) Here's what you want to read that should explain 
the rationale for this change :
https://trac.osgeo.org/gdal/wiki/rfc52_strict_sql_quoting

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Apr  6 13:43:03 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Apr 2016 22:43:03 +0200
Subject: [gdal-dev] CADRG/CIB GDAL Example
In-Reply-To: <1459968487725-5260001.post@n6.nabble.com>
References: <1459968487725-5260001.post@n6.nabble.com>
Message-ID: <201604062243.03587.even.rouault@spatialys.com>

Le mercredi 06 avril 2016 20:48:07, mlegge a écrit :
> I have spent some time trying to find an example of how to use GDAL to open
> CADRG/ADRG/CIB data.  I can find lots of information saying that GDAL
> supports these formats but no example on how to achieve this in GDAL.
> 
> We have sample apps where we load other types of data by calling GDALOpen
> and then using GDALWarpOperation (among other calls and they work well).
> For the CADRG we pass the A.Toc file to GDALOpen, however the A.Toc does
> not contain map data directly but rather a list of data subsets.  We use
> the MetaData available after the call to GDALOpen to call GDALOpen again
> followed by GDALWarpOperation.ChunkAndWarpImage for each of the data
> subsets.  However the ChunkAndWarpImage takes an extremely long time
> (hours) to complete making this approach unusable.

I assume that you need reprojection if you can ChunkAndWarpImage ? It 
shouldn't take hours if you only read a reasonable window of your dataset, but 
if you process the whole dataset and it is big, it can take a long time 
indeed.
And if you don't need reprojection, just use GDALDataset::RasterIO() or 
GDALRasterBand::RasterIO(). I can display fine CADRG datasets with QGIS for 
example.

> 
> It would be greatly appreciated if someone could point me to some sample
> code or give me some pointers on how to use CADRG withing GDAL.
> 
> Note that I am pretty much a newbie to GIS but I do have access to more
> experienced GIS developers.
> 
> Thanks
> Mel
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/CADRG-CIB-GDAL-Example-tp5260001.html
> Sent from the GDAL - Dev mailing list archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew.bell.ia at gmail.com  Wed Apr  6 13:48:38 2016
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 6 Apr 2016 15:48:38 -0500
Subject: [gdal-dev] Change in parsing of OGR where clause
In-Reply-To: <201604062239.48978.even.rouault@spatialys.com>
References: <CACJ51z38eO+pocAyA7r291RM7XBf2hGg_8SO-gsT560syqMJhg@mail.gmail.com>
 <201604062239.48978.even.rouault@spatialys.com>
Message-ID: <CACJ51z0YhrkhK9eHfDLOZEaCOuirD4TjR=MzmejQg7Ex3m9Nkg@mail.gmail.com>

On Wed, Apr 6, 2016 at 3:39 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Andrew,
>
> > In version 1.X of GDAL, the following was accepted and worked:
> >
> > std::string query = "LOCATION=\"some text\"";
> > OGR_L_SetAttributeFilter(layer, query.c_str());
> >
> > In version 2.X, this is no longer accepted and the double quotes must be
> > replaced by single quotes:
> >
> > std::string query = "LOCATION='some text'";
> > OGR_L_SetAttributeFilter(layer, query.c_str());
> >
> > This wouldn't be awful, but the error that occurs tells you nothing about
> > the actual problem.  It yields:
> >
> > "some text" not recognised as an available field.
>
> Well, I find the message quite clear : "some text" isn't an recognized
> field :-)
>

Is there a context where a double-quoted string would be acceptable here?
If so, then fine (maybe).  But if not, it seems that something like
"unexpected character '"' found in where clause" would make more sense than
the current message.

I will stop joking now :-) Here's what you want to read that should explain
> the rationale for this change :
> https://trac.osgeo.org/gdal/wiki/rfc52_strict_sql_quoting


I'm not grumbling about the change, but it took me a while to track down :(
  A different error message would have helped greatly.

Thanks,

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/2eaadb49/attachment.html>

From even.rouault at spatialys.com  Wed Apr  6 13:57:19 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Apr 2016 22:57:19 +0200
Subject: [gdal-dev] Change in parsing of OGR where clause
In-Reply-To: <CACJ51z0YhrkhK9eHfDLOZEaCOuirD4TjR=MzmejQg7Ex3m9Nkg@mail.gmail.com>
References: <CACJ51z38eO+pocAyA7r291RM7XBf2hGg_8SO-gsT560syqMJhg@mail.gmail.com>
 <201604062239.48978.even.rouault@spatialys.com>
 <CACJ51z0YhrkhK9eHfDLOZEaCOuirD4TjR=MzmejQg7Ex3m9Nkg@mail.gmail.com>
Message-ID: <201604062257.19497.even.rouault@spatialys.com>

Le mercredi 06 avril 2016 22:48:38, Andrew Bell a écrit :
> On Wed, Apr 6, 2016 at 3:39 PM, Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > Andrew,
> > 
> > > In version 1.X of GDAL, the following was accepted and worked:
> > > 
> > > std::string query = "LOCATION=\"some text\"";
> > > OGR_L_SetAttributeFilter(layer, query.c_str());
> > > 
> > > In version 2.X, this is no longer accepted and the double quotes must
> > > be replaced by single quotes:
> > > 
> > > std::string query = "LOCATION='some text'";
> > > OGR_L_SetAttributeFilter(layer, query.c_str());
> > > 
> > > This wouldn't be awful, but the error that occurs tells you nothing
> > > about the actual problem.  It yields:
> > > 
> > > "some text" not recognised as an available field.
> > 
> > Well, I find the message quite clear : "some text" isn't an recognized
> > field :-)
> 
> Is there a context where a double-quoted string would be acceptable here?
> If so, then fine (maybe).  But if not, it seems that something like
> "unexpected character '"' found in where clause" would make more sense than
> the current message.
> 

Well, there are cases where your datasource could have field names that require 
double quoting. It is generally not possible to distinguish the cases where 
the user wanted to specify a field name but get it wrong, from the cases where 
he wanted to specify a string literal. If you try with another SQL engine, 
you'd have similar messages :

$ ogrinfo pg:dbname=autotest -sql "select * from poly where eas_id = \"some 
text"" 
INFO: Open of `pg:dbname=autotest'
      using driver `PostgreSQL' successful.
ERROR 1: ERROR: the column « some text » does not exist
LINE 1: ...SQLCursor CURSOR for select * from poly where eas_id = "some text"

> 
> I'm not grumbling about the change, but it took me a while to track down :(
>   A different error message would have helped greatly.

Yes, I can understand that. I encourage everybody looking at the 
MIGRATION_GUIDE when they upgrade their version :
https://svn.osgeo.org/gdal/trunk/gdal/MIGRATION_GUIDE.TXT

> 
> Thanks,

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew.bell.ia at gmail.com  Wed Apr  6 14:03:04 2016
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 6 Apr 2016 16:03:04 -0500
Subject: [gdal-dev] Change in parsing of OGR where clause
In-Reply-To: <201604062257.19497.even.rouault@spatialys.com>
References: <CACJ51z38eO+pocAyA7r291RM7XBf2hGg_8SO-gsT560syqMJhg@mail.gmail.com>
 <201604062239.48978.even.rouault@spatialys.com>
 <CACJ51z0YhrkhK9eHfDLOZEaCOuirD4TjR=MzmejQg7Ex3m9Nkg@mail.gmail.com>
 <201604062257.19497.even.rouault@spatialys.com>
Message-ID: <CACJ51z1Byf4q1Rs7On1+MfiQkA+j1stfzu66-_Btz6dOefo6pg@mail.gmail.com>

On Wed, Apr 6, 2016 at 3:57 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> > Is there a context where a double-quoted string would be acceptable here?
> > If so, then fine (maybe).  But if not, it seems that something like
> > "unexpected character '"' found in where clause" would make more sense
> than
> > the current message.
> >
>
> Well, there are cases where your datasource could have field names that
> require
> double quoting. It is generally not possible to distinguish the cases where
> the user wanted to specify a field name but get it wrong, from the cases
> where
> he wanted to specify a string literal. If you try with another SQL engine,
> you'd have similar messages :
>
> $ ogrinfo pg:dbname=autotest -sql "select * from poly where eas_id = \"some
> text""
> INFO: Open of `pg:dbname=autotest'
>       using driver `PostgreSQL' successful.
> ERROR 1: ERROR: the column « some text » does not exist
> LINE 1: ...SQLCursor CURSOR for select * from poly where eas_id = "some
> text"
>
> >
> > I'm not grumbling about the change, but it took me a while to track down
> :(
> >   A different error message would have helped greatly.
>
> Yes, I can understand that. I encourage everybody looking at the
> MIGRATION_GUIDE when they upgrade their version :
> https://svn.osgeo.org/gdal/trunk/gdal/MIGRATION_GUIDE.TXT


Yes, I thought about that case after I send the last note.  When I googled
to check what was going on, the first thing that came up was an Oracle
reference which seems to say single and double-quoted strings are both
acceptable in such a context, which led to my confusion.

Thanks again for your time,

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160406/23bf0408/attachment.html>

From stefan.ziegler.de at gmail.com  Thu Apr  7 02:49:27 2016
From: stefan.ziegler.de at gmail.com (Stefan Ziegler)
Date: Thu, 7 Apr 2016 11:49:27 +0200
Subject: [gdal-dev] gdal_contour out of memory
Message-ID: <CAJvo+1-pgdffJhiEmMkFz-KQMO9=n5ujjdq+y4Aw=-482Z2VOQ@mail.gmail.com>

Hi

I have problems creating contours with gdal_contour and some tiff files.
The following command

gdal_contour -i 1.0 6800_2480.tif out.shp

ends with "0Killed" after eating all memory and all swap. It happens with
gdal 1.11 and gdal-master. It did work on a Ubuntu 10.04 machine (as far as
I remember). Now I'm on Ubuntu 14.04.

Tiff file can be found here:
http://maps.zh.ch/download/hoehen/2014/dtm/tif/6800_2480.tif

Any ideas?

regards
Stefan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160407/a6405827/attachment.html>

From even.rouault at spatialys.com  Thu Apr  7 03:58:50 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Apr 2016 12:58:50 +0200
Subject: [gdal-dev] gdal_contour out of memory
In-Reply-To: <CAJvo+1-pgdffJhiEmMkFz-KQMO9=n5ujjdq+y4Aw=-482Z2VOQ@mail.gmail.com>
References: <CAJvo+1-pgdffJhiEmMkFz-KQMO9=n5ujjdq+y4Aw=-482Z2VOQ@mail.gmail.com>
Message-ID: <201604071258.50365.even.rouault@spatialys.com>

Stefan,

> I have problems creating contours with gdal_contour and some tiff files.
> The following command
> 
> gdal_contour -i 1.0 6800_2480.tif out.shp
> 
> ends with "0Killed" after eating all memory and all swap. It happens with
> gdal 1.11 and gdal-master. It did work on a Ubuntu 10.04 machine (as far as
> I remember). Now I'm on Ubuntu 14.04.

Comparing the source code, the algorithm hasn't fundamentaly changed, at least 
since GDAL 1.5. I can reproduce your issue with latest trunk or 1.5.X.
It is related to the fact that your source dataset has floating point values.
An easy workaround is to translate your raster into a Int16 one and contour 
it. I've just tried it and it works. 
Or you could possibly round values to 0.5 precision with gdal_calc.py for 
perhaps a smoother result. But basically the contour alg seems to require a 
lot of memory if every pixel is different from its neighbour (might be an 
approximation of what happens as the algorithm is non trivial and I didn't 
study it in detail).
It might be worth opening a ticket on that.

Even

> 
> Tiff file can be found here:
> http://maps.zh.ch/download/hoehen/2014/dtm/tif/6800_2480.tif
> 
> Any ideas?
> 
> regards
> Stefan

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jason.greenlaw at noaa.gov  Thu Apr  7 05:45:13 2016
From: jason.greenlaw at noaa.gov (Jason Greenlaw - NOAA Affiliate)
Date: Thu, 7 Apr 2016 08:45:13 -0400
Subject: [gdal-dev] Negative NoData Value with Signed Byte Raster
In-Reply-To: <CAB6t5t8Z1ZBtMob9q0hqs2d2wj1ir9Wbikwo0AF5NQ1EHfD=cA@mail.gmail.com>
References: <CAAoP0JzFN=O-4mQO1sHMHAFaUuM7XMUF8Sw+9cbjhPL8ktWS7w@mail.gmail.com>
 <201604062110.07698.even.rouault@spatialys.com>
 <CAAoP0JxYuPMk-XHtj=yfDMVqLtK+Th-y9WC0nc48R0V9YLh-Ng@mail.gmail.com>
 <CAB6t5t8Z1ZBtMob9q0hqs2d2wj1ir9Wbikwo0AF5NQ1EHfD=cA@mail.gmail.com>
Message-ID: <CAAoP0JwrF9WK2LD+enboFthWWmwFxPhk9dmKue=EjL=im=2CMQ@mail.gmail.com>

Trent,

I am able to load the VRT in ArcMap, and while it does now recognize -128
as the NoData value, it is identifying the raster as unsigned byte despite
the <Metadata> section workaround given by Even, and thus does not properly
respect the NoData areas.  This is strange since it recognizes the original
GeoTIFF as signed byte.  I'm using ArcGIS 10.2.2, which may have something
to do with it.  Perhaps it's fixed with 10.3/10.4.

I have used their Raster Functions before but have not played around with
the Image Analysis window - another reason to upgrade to 10.3+.

Thanks for the tip,
Jason


On Wed, Apr 6, 2016 at 3:58 PM, Hare, Trent <thare at usgs.gov> wrote:

> Jason,
>    VRTs work in ArcMap too - if that helps...? Also have you tried the
> powerful Image Analysis window. It is fairly flexible with output types
> (e.g. float, 8bit) for output at each functional step.
> http://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/rasters-with-functions.htm
>
> more:
> http://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/what-is-the-image-analysis-window.htm
>
> good luck,
> Trent
>
> On Wed, Apr 6, 2016 at 12:26 PM, Jason Greenlaw - NOAA Affiliate <
> jason.greenlaw at noaa.gov> wrote:
>
>> Thanks for the workaround and quick fix.  The VRT addresses the issue on
>> the data end.  Now it's only an ArcGIS problem :)
>>
>> Jason
>>
>>
>> On Wed, Apr 6, 2016 at 3:10 PM, Even Rouault <even.rouault at spatialys.com>
>> wrote:
>>
>>> Le mercredi 06 avril 2016 20:38:36, Jason Greenlaw - NOAA Affiliate a
>>> écrit :
>>> > Hello,
>>> >
>>> > I've run into a snag trying to assign a negative NoData value to a
>>> Signed
>>> > Byte raster.
>>>
>>> Jason,
>>>
>>> I've just pushed a fix for that in trunk (signed byte is a bit of a
>>> second
>>> class citizen as a data type in GDAL, hence the issues) to avoid the
>>> erroneous
>>> clamping. You're supposed to put negative values.
>>> You can workaround the issue by first creating a VRT by adding
>>>
>>>     <NoDataValue>-128</NoDataValue>
>>>     <Metadata>
>>>       <MDI key="PIXELTYPE">SIGNEDBYTE</MDI>
>>>     </Metadata>
>>>
>>> in <VRTRasterBand>
>>>
>>> and then gdal_translate the VRT as TIFF
>>>
>>> Even
>>>
>>>
>>> --
>>> Spatialys - Geospatial professional services
>>> http://www.spatialys.com
>>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160407/094f69b4/attachment.html>

From jsimpson at wxtrends.com  Thu Apr  7 06:46:46 2016
From: jsimpson at wxtrends.com (Jerl Simpson)
Date: Thu, 7 Apr 2016 08:46:46 -0500
Subject: [gdal-dev] Negative NoData Value with Signed Byte Raster
In-Reply-To: <CAAoP0JwrF9WK2LD+enboFthWWmwFxPhk9dmKue=EjL=im=2CMQ@mail.gmail.com>
References: <CAAoP0JzFN=O-4mQO1sHMHAFaUuM7XMUF8Sw+9cbjhPL8ktWS7w@mail.gmail.com>
 <201604062110.07698.even.rouault@spatialys.com>
 <CAAoP0JxYuPMk-XHtj=yfDMVqLtK+Th-y9WC0nc48R0V9YLh-Ng@mail.gmail.com>
 <CAB6t5t8Z1ZBtMob9q0hqs2d2wj1ir9Wbikwo0AF5NQ1EHfD=cA@mail.gmail.com>
 <CAAoP0JwrF9WK2LD+enboFthWWmwFxPhk9dmKue=EjL=im=2CMQ@mail.gmail.com>
Message-ID: <CA+VKKH-ECBNhSBwazdnQ7EV6oQ7LoLYW645k4LoTA78W+zspBQ@mail.gmail.com>

Just out of curiosity, have you tried using QGIS?
It might solve the issue for you...or might just be a goose chase.

Jerl Simpson
V.P. Systems Engineering
Weather Trends Internationalhttp://www.weathertrends360.com/

This communication is privileged and may contain confidential information.
It's intended only for the use of the person or entity named above.
If you are not the intended recipient, do not distribute or copy this
communication.
If you have received this communication in error,
please notify the sender immediately and return the original to the
email address above.
© Copyright 2016 Weather Trends International, Inc.


On Thu, Apr 7, 2016 at 7:45 AM, Jason Greenlaw - NOAA Affiliate <
jason.greenlaw at noaa.gov> wrote:

> Trent,
>
> I am able to load the VRT in ArcMap, and while it does now recognize -128
> as the NoData value, it is identifying the raster as unsigned byte despite
> the <Metadata> section workaround given by Even, and thus does not properly
> respect the NoData areas.  This is strange since it recognizes the original
> GeoTIFF as signed byte.  I'm using ArcGIS 10.2.2, which may have something
> to do with it.  Perhaps it's fixed with 10.3/10.4.
>
> I have used their Raster Functions before but have not played around with
> the Image Analysis window - another reason to upgrade to 10.3+.
>
> Thanks for the tip,
> Jason
>
>
> On Wed, Apr 6, 2016 at 3:58 PM, Hare, Trent <thare at usgs.gov> wrote:
>
>> Jason,
>>    VRTs work in ArcMap too - if that helps...? Also have you tried the
>> powerful Image Analysis window. It is fairly flexible with output types
>> (e.g. float, 8bit) for output at each functional step.
>> http://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/rasters-with-functions.htm
>>
>> more:
>> http://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/what-is-the-image-analysis-window.htm
>>
>> good luck,
>> Trent
>>
>> On Wed, Apr 6, 2016 at 12:26 PM, Jason Greenlaw - NOAA Affiliate <
>> jason.greenlaw at noaa.gov> wrote:
>>
>>> Thanks for the workaround and quick fix.  The VRT addresses the issue on
>>> the data end.  Now it's only an ArcGIS problem :)
>>>
>>> Jason
>>>
>>>
>>> On Wed, Apr 6, 2016 at 3:10 PM, Even Rouault <even.rouault at spatialys.com
>>> > wrote:
>>>
>>>> Le mercredi 06 avril 2016 20:38:36, Jason Greenlaw - NOAA Affiliate a
>>>> écrit :
>>>> > Hello,
>>>> >
>>>> > I've run into a snag trying to assign a negative NoData value to a
>>>> Signed
>>>> > Byte raster.
>>>>
>>>> Jason,
>>>>
>>>> I've just pushed a fix for that in trunk (signed byte is a bit of a
>>>> second
>>>> class citizen as a data type in GDAL, hence the issues) to avoid the
>>>> erroneous
>>>> clamping. You're supposed to put negative values.
>>>> You can workaround the issue by first creating a VRT by adding
>>>>
>>>>     <NoDataValue>-128</NoDataValue>
>>>>     <Metadata>
>>>>       <MDI key="PIXELTYPE">SIGNEDBYTE</MDI>
>>>>     </Metadata>
>>>>
>>>> in <VRTRasterBand>
>>>>
>>>> and then gdal_translate the VRT as TIFF
>>>>
>>>> Even
>>>>
>>>>
>>>> --
>>>> Spatialys - Geospatial professional services
>>>> http://www.spatialys.com
>>>>
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
>>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160407/8b5f7b0c/attachment.html>

From jason.greenlaw at noaa.gov  Thu Apr  7 07:03:53 2016
From: jason.greenlaw at noaa.gov (Jason Greenlaw - NOAA Affiliate)
Date: Thu, 7 Apr 2016 10:03:53 -0400
Subject: [gdal-dev] Negative NoData Value with Signed Byte Raster
In-Reply-To: <CA+VKKH-ECBNhSBwazdnQ7EV6oQ7LoLYW645k4LoTA78W+zspBQ@mail.gmail.com>
References: <CAAoP0JzFN=O-4mQO1sHMHAFaUuM7XMUF8Sw+9cbjhPL8ktWS7w@mail.gmail.com>
 <201604062110.07698.even.rouault@spatialys.com>
 <CAAoP0JxYuPMk-XHtj=yfDMVqLtK+Th-y9WC0nc48R0V9YLh-Ng@mail.gmail.com>
 <CAB6t5t8Z1ZBtMob9q0hqs2d2wj1ir9Wbikwo0AF5NQ1EHfD=cA@mail.gmail.com>
 <CAAoP0JwrF9WK2LD+enboFthWWmwFxPhk9dmKue=EjL=im=2CMQ@mail.gmail.com>
 <CA+VKKH-ECBNhSBwazdnQ7EV6oQ7LoLYW645k4LoTA78W+zspBQ@mail.gmail.com>
Message-ID: <CAAoP0JxMWmiJjNHDUFFyP518hxsFzzVGVkFvqheLguTE3EQ1pA@mail.gmail.com>

Yes, I have used QGIS, and it works perfectly.  However, my requirement is
to create map services using ArcGIS Server, so unfortunately QGIS isn't an
option for this task.

Thanks,
Jason


On Thu, Apr 7, 2016 at 9:46 AM, Jerl Simpson <jsimpson at wxtrends.com> wrote:

> Just out of curiosity, have you tried using QGIS?
> It might solve the issue for you...or might just be a goose chase.
>
> Jerl Simpson
> V.P. Systems Engineering
> Weather Trends Internationalhttp://www.weathertrends360.com/
>
> This communication is privileged and may contain confidential information.
> It's intended only for the use of the person or entity named above.
> If you are not the intended recipient, do not distribute or copy this communication.
> If you have received this communication in error,
> please notify the sender immediately and return the original to the email address above.
> © Copyright 2016 Weather Trends International, Inc.
>
>
> On Thu, Apr 7, 2016 at 7:45 AM, Jason Greenlaw - NOAA Affiliate <
> jason.greenlaw at noaa.gov> wrote:
>
>> Trent,
>>
>> I am able to load the VRT in ArcMap, and while it does now recognize -128
>> as the NoData value, it is identifying the raster as unsigned byte despite
>> the <Metadata> section workaround given by Even, and thus does not properly
>> respect the NoData areas.  This is strange since it recognizes the original
>> GeoTIFF as signed byte.  I'm using ArcGIS 10.2.2, which may have something
>> to do with it.  Perhaps it's fixed with 10.3/10.4.
>>
>> I have used their Raster Functions before but have not played around with
>> the Image Analysis window - another reason to upgrade to 10.3+.
>>
>> Thanks for the tip,
>> Jason
>>
>>
>> On Wed, Apr 6, 2016 at 3:58 PM, Hare, Trent <thare at usgs.gov> wrote:
>>
>>> Jason,
>>>    VRTs work in ArcMap too - if that helps...? Also have you tried the
>>> powerful Image Analysis window. It is fairly flexible with output types
>>> (e.g. float, 8bit) for output at each functional step.
>>> http://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/rasters-with-functions.htm
>>>
>>> more:
>>> http://desktop.arcgis.com/en/arcmap/10.3/manage-data/raster-and-images/what-is-the-image-analysis-window.htm
>>>
>>> good luck,
>>> Trent
>>>
>>> On Wed, Apr 6, 2016 at 12:26 PM, Jason Greenlaw - NOAA Affiliate <
>>> jason.greenlaw at noaa.gov> wrote:
>>>
>>>> Thanks for the workaround and quick fix.  The VRT addresses the issue
>>>> on the data end.  Now it's only an ArcGIS problem :)
>>>>
>>>> Jason
>>>>
>>>>
>>>> On Wed, Apr 6, 2016 at 3:10 PM, Even Rouault <
>>>> even.rouault at spatialys.com> wrote:
>>>>
>>>>> Le mercredi 06 avril 2016 20:38:36, Jason Greenlaw - NOAA Affiliate a
>>>>> écrit :
>>>>> > Hello,
>>>>> >
>>>>> > I've run into a snag trying to assign a negative NoData value to a
>>>>> Signed
>>>>> > Byte raster.
>>>>>
>>>>> Jason,
>>>>>
>>>>> I've just pushed a fix for that in trunk (signed byte is a bit of a
>>>>> second
>>>>> class citizen as a data type in GDAL, hence the issues) to avoid the
>>>>> erroneous
>>>>> clamping. You're supposed to put negative values.
>>>>> You can workaround the issue by first creating a VRT by adding
>>>>>
>>>>>     <NoDataValue>-128</NoDataValue>
>>>>>     <Metadata>
>>>>>       <MDI key="PIXELTYPE">SIGNEDBYTE</MDI>
>>>>>     </Metadata>
>>>>>
>>>>> in <VRTRasterBand>
>>>>>
>>>>> and then gdal_translate the VRT as TIFF
>>>>>
>>>>> Even
>>>>>
>>>>>
>>>>> --
>>>>> Spatialys - Geospatial professional services
>>>>> http://www.spatialys.com
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>
>>>
>>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160407/a87b2dec/attachment-0001.html>

From jluis at ualg.pt  Thu Apr  7 07:08:34 2016
From: jluis at ualg.pt (Joaquim Luis)
Date: Thu, 07 Apr 2016 15:08:34 +0100
Subject: [gdal-dev] gdal_contour out of memory
In-Reply-To: <201604071258.50365.even.rouault@spatialys.com>
References: <CAJvo+1-pgdffJhiEmMkFz-KQMO9=n5ujjdq+y4Aw=-482Z2VOQ@mail.gmail.com>
 <201604071258.50365.even.rouault@spatialys.com>
Message-ID: <op.yfjywkqvdbaoe8@macmarilu>

Another option is to use GMT grdcontour program

gmt grdcontour 6800_2480.tif -C1 -Dlixo.dat -V

it creates a ~8.3 Mb ascii file with a memory consuption of ~50 Mb (Task  
manager info) that you can later convert to shp with ogr2ogr

> Stefan,
>
>> I have problems creating contours with gdal_contour and some tiff files.
>> The following command
>>
>> gdal_contour -i 1.0 6800_2480.tif out.shp
>>
>> ends with "0Killed" after eating all memory and all swap. It happens  
>> with
>> gdal 1.11 and gdal-master. It did work on a Ubuntu 10.04 machine (as  
>> far as
>> I remember). Now I'm on Ubuntu 14.04.
>
> Comparing the source code, the algorithm hasn't fundamentaly changed, at  
> least
> since GDAL 1.5. I can reproduce your issue with latest trunk or 1.5.X.
> It is related to the fact that your source dataset has floating point  
> values.
> An easy workaround is to translate your raster into a Int16 one and  
> contour
> it. I've just tried it and it works.
> Or you could possibly round values to 0.5 precision with gdal_calc.py for
> perhaps a smoother result. But basically the contour alg seems to  
> require a
> lot of memory if every pixel is different from its neighbour (might be an
> approximation of what happens as the algorithm is non trivial and I  
> didn't
> study it in detail).
> It might be worth opening a ticket on that.
>
> Even
>
>>
>> Tiff file can be found here:
>> http://maps.zh.ch/download/hoehen/2014/dtm/tif/6800_2480.tif
>>
>> Any ideas?
>>
>> regards
>> Stefan

From alexhighviz at hotmail.com  Thu Apr  7 08:27:26 2016
From: alexhighviz at hotmail.com (alex)
Date: Thu, 7 Apr 2016 16:27:26 +0100
Subject: [gdal-dev] Map algebra
In-Reply-To: <56FE3398.3070006@gmail.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
Message-ID: <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>

Hi Ari,

Sorry for responding to your message late. I do appreciate your initiative to facilitate map algebra in GDAL. 

What exactly do you mean by Map Algebra? I understand it to cover the following:

1. Local operations: pixel-by-pixel operations on raster bands.
2. Focal operations: operations that calculate an indicator for each pixel based on the values in surrounding pixels
3. Zonal operations: operations that calculate indicators for groups (zones) of pixels.
4. Global operations: operations that calculate indicators over all pixels.

1. Local operations: pixel-by-pixel operations on raster bands.

To support this well, I think you should allow the user to specify a function and a combination of raster bands and constants that feed into the function, e.g: 

my_average = apply(average_function, band1, band2, band3);

but the function should also be able to handle a mix of raster bands and constants, e.g.:

my_average = apply(average_function, band1, band2, 7.25);

Also, I think it would make sense to have overloads for all or most of the operators, so you can write:

my_average = (band1 + band2 + band3) / 3.0;

And, I would like to combine these:

my_average = (2* apply(average_function, band1, band2) + band3) / 3.0;

Is that the kind of functionality you are trying to offer?

If you want to support this, it seems to be best practice to use expression templates (https://en.wikipedia.org/wiki/Expression_templates), because that would allow to create complex compositions of operations without having to create temporary datasets (e.g. for the sum of band1 and band2 in the example above).

The key thing that you need in order to implement this is an iterator over the raster bands. Eric Niebler writes at length about the benefits of using Ranges as a means of composing functions (https://github.com/ericniebler/range-v3 ) .You seem to be applying an iterator that iterates over blocks, rather than over pixels. How can that work when my_average, band1, band2 and band3 have different block sizes? Wouldn't your life be a lot easier if you iterated over pixels in the same order for all bands?. 

If you are interested, I have a solution, albeit in C++11 (https://github.com/ahhz/map_algebra ). The following is a program using it:

#include <blink/map_algebra/map_algebra.h> 

namespace ma = blink::map_algebra;

int my_function(int w, int x, int y, int z)
{
  return w * x + y * z;
}

int main()
{
  auto a = ma::open_read_only<int>("input_1.tif");
  auto b = ma::open_read_only<int>("input_2.tif");
  
  // Example 1: Using operators
  auto w = ma::create_from_model<double>("output_1.tif", a);
  w = a + 3 * b;

  // Example 2: Using assigning operators
  auto x = ma::create_from_model<double>("output_2.tif", a);  x = 1;
  x *= a;
  x += 3 * b;
  
  // Example 3: Map algebra using cell-by-cell functions
  auto y = ma::create_from_model<double>("output_3.tif", a);
  y = ma::apply(my_function, 1, a, 3, b);

  // Example 4: Combination
  auto z = ma::create_from_model<double>("output_4.tif", a);
  z = b + 3 * ma::apply(my_function, 1, a, 2, b);

  return 0;
}

2. Focal operations: operations that calculate an indicator for each pixel based on the values in surrounding pixels 

I think the key challenge here is to allow users to specify the function to be applied on the surrounding pixels. In my opinion a Map Algebra library should support all kinds of moving window analysis, and not just a number of built-in types of analysis. This can be implemented as yet another range that allows iteration over the pixels in the same order as the raster bands, but instead of return pixel values, it returns neighbourhood / window summaries. 

I have a C++11 library for this as well, but it is not yet working smoothly with the map algebra library (but it will!)
https://github.com/ahhz/moving_window 
http://www.sciencedirect.com/science/article/pii/S0303243415300337 

3. Zonal operations: operations that calculate indicators for groups (zones) of pixels.
This seems more trivial than the other two components of map algebra and I haven't given it much attention, but I think should be supported.

4. Global operations
I don't think these need to be explicitly supported, because there is no genericity to exploit.

In summary: 

What I am really trying to say is that developing map algebra functionality on top of GDAL or as part of GDAL seems very worthwhile and feasible. However, I would aim for functionality that is more generically supporting map algebra, rather than implementing specific map algebra tools. The foundation of such functionality in my opinion must be a GDALRange class that facilitates iteration over pixels in a uniform order. If I were you, I would first push a RFC to create a GDALRange, and only once that is done and dusted, consider the map algebra on top of it. 

Kind regards, Alex

(sorry for the self-promotion)

>-----Original Message-----
>From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Ari
>Jolma
>Sent: 01 April 2016 09:39
>To: gdal-dev at lists.osgeo.org
>Subject: Re: [gdal-dev] Map algebra
>
>I've got this into a rather nice working shape. The code needs to be
>reorganized (it is now, horror, all in header files) but that's another
>thing.
>
>I've so far built this around a basic DEM catchment analysis workflow.
>It includes many kinds of steps so it is a pretty good benchmark. In
>pseudo code the workflow is something like
>
>dem = open_from_file
>dem->fill_depressions
>fd = dem->compute_flow_directions
>fd->route_flat_cells
>ua = fd->compute_upstream_area
>c = new_raster // compute the catchment into this
>c->set_border_cells // we're interested in the outlet cells
>c *= ua
>c *= c > 10000 // we're interested in the big catchments
>outlets = c->get_cells // outlets is an array of cells, and a cell is an
>object containing (x,y,value)
>c = 0
>c->mark_catchment(fd, outlets[0], 1) // assuming the outlet cell is now
>in outlets[0]
>ua2 = new_raster // for visualization log of upstream area is nice
>ua2 += ua
>ua2->log
>
>The C code is of course not this nice but it is not very far from this.
>All the basic four method types I mention below are implemented and
>adding new methods is not very difficult. The code makes heavy use of
>templates and macros in an attempt for versatility (GDAL rasters can
>have many datatypes) and easiness to write methods in a few lines of
>code. The whole set of code is now ~2500 lines but it creates rather
>large executables due to templates. The code is C++ but the API is C
>like, I've so far done no changes to existing GDAL code because of this.
>
>As written below, the code works on two levels of x,y loops: the blocks
>within a band, which is generic and cells within a block, which is
>separate for each method. The methods work on line by line (no recursion
>etc.) and thus for example the fill_depressions is not optimal but
>instead very simple. Also, very large rasters can be processed.
>
>I think this may be somewhat similar thing in relation to GDAL as the
>network support, so it could be a thing to add to the library if wished.
>
>I've added RFC 62 "raster algebra" to spark discussion.
>
>Ari
>
>
>20.03.2016, 10:21, Ari Jolma kirjoitti:
>> Folks,
>>
>> I played around a bit with the map algebra idea and came up with
>> something that could work nicely as a plugin. The initial code is at
>> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>>
>> The idea is based on processing raster bands block by block and
>> calling a given function on each block. Using macros and templates the
>> code should be rather nice and manageable even when supporting
>> multiple data types for raster cells.
>>
>> Further, the idea is to support three kinds of map algebra methods,
>> mostly working on a raster band in-place.
>>
>> 1) Simple ones, which do not take any arguments beyond the raster band
>> itself, examples are functions like log, sin, rand.
>>
>> 2) Those which take one non-spatial argument. The argument can be a
>> scalar like a number, or more complex like a reclassifier.
>>
>> 3) Those which operate on two rasters. Examples are summation of
>> rasters and computing flow directions on a DEM. The latter is a bit
>> more complex since it is a focal method and requires a 3 x 3 matrix of
>> blocks from the other operand raster.
>>
>> Maybe a fourth kind of methods are those which compute something from
>> a raster.
>>
>> This would lead to four functions in the C API and raster band methods
>> in the bindings.
>>
>> Comments are welcome, the initial code base contains a small demo
>> program. Eventually, if this works, I'll make a RFC from this.
>>
>> Ari
>>
>


From stefan.ziegler.de at gmail.com  Thu Apr  7 11:49:37 2016
From: stefan.ziegler.de at gmail.com (Stefan Ziegler)
Date: Thu, 7 Apr 2016 20:49:37 +0200
Subject: [gdal-dev] gdal_contour out of memory
In-Reply-To: <201604071258.50365.even.rouault@spatialys.com>
References: <CAJvo+1-pgdffJhiEmMkFz-KQMO9=n5ujjdq+y4Aw=-482Z2VOQ@mail.gmail.com>
 <201604071258.50365.even.rouault@spatialys.com>
Message-ID: <CAJvo+18AX9ZwMT7sHww1rjdbx5LG2pDCW1ujaq4gKn2+Vq9oqA@mail.gmail.com>

Hi

it seems that it has to do something with no-data areas. gdal_contour tries
to calculate all the contours from approx. 450m up to my no-data value
-3.4...e+38.

I use no gdal_fillnodata.py to fill the no data areas.

So I still think there is a slighly different behaviour of gdal since my
last calculations with the same commands and data with Ubuntu 10.04.

best regards
Stefan

On Thu, Apr 7, 2016 at 12:58 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Stefan,
>
> > I have problems creating contours with gdal_contour and some tiff files.
> > The following command
> >
> > gdal_contour -i 1.0 6800_2480.tif out.shp
> >
> > ends with "0Killed" after eating all memory and all swap. It happens with
> > gdal 1.11 and gdal-master. It did work on a Ubuntu 10.04 machine (as far
> as
> > I remember). Now I'm on Ubuntu 14.04.
>
> Comparing the source code, the algorithm hasn't fundamentaly changed, at
> least
> since GDAL 1.5. I can reproduce your issue with latest trunk or 1.5.X.
> It is related to the fact that your source dataset has floating point
> values.
> An easy workaround is to translate your raster into a Int16 one and contour
> it. I've just tried it and it works.
> Or you could possibly round values to 0.5 precision with gdal_calc.py for
> perhaps a smoother result. But basically the contour alg seems to require a
> lot of memory if every pixel is different from its neighbour (might be an
> approximation of what happens as the algorithm is non trivial and I didn't
> study it in detail).
> It might be worth opening a ticket on that.
>
> Even
>
> >
> > Tiff file can be found here:
> > http://maps.zh.ch/download/hoehen/2014/dtm/tif/6800_2480.tif
> >
> > Any ideas?
> >
> > regards
> > Stefan
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160407/b4bffe2b/attachment.html>

From ari.jolma at gmail.com  Thu Apr  7 11:56:01 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 7 Apr 2016 21:56:01 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
Message-ID: <5706AD41.4010805@gmail.com>

07.04.2016, 18:27, alex kirjoitti:
> Hi Ari,
>
> Sorry for responding to your message late. I do appreciate your initiative to facilitate map algebra in GDAL.

No worries, the initiative and RFC will be active for some time still 
and decisions on it are still in the future.

>
> What exactly do you mean by Map Algebra? I understand it to cover the following:
>
> 1. Local operations: pixel-by-pixel operations on raster bands.
> 2. Focal operations: operations that calculate an indicator for each pixel based on the values in surrounding pixels
> 3. Zonal operations: operations that calculate indicators for groups (zones) of pixels.
> 4. Global operations: operations that calculate indicators over all pixels.

This is the traditional understanding and I share it. I've come to map 
algebra from hydrological analysis of digital elevation models, spatial 
simulation with rasters, analysis of land cover data, etc. I've dealt 
less with multi-channel RS data but I understand that analysis of such 
data, for example classification, is an important application domain.

>
> 1. Local operations: pixel-by-pixel operations on raster bands.
>
> To support this well, I think you should allow the user to specify a function and a combination of raster bands and constants that feed into the function, e.g:
>
> my_average = apply(average_function, band1, band2, band3);
>
> but the function should also be able to handle a mix of raster bands and constants, e.g.:
>
> my_average = apply(average_function, band1, band2, 7.25);
>
> Also, I think it would make sense to have overloads for all or most of the operators, so you can write:
>
> my_average = (band1 + band2 + band3) / 3.0;
>
> And, I would like to combine these:
>
> my_average = (2* apply(average_function, band1, band2) + band3) / 3.0;
>
> Is that the kind of functionality you are trying to offer?

That is one aspect, yes. However, so far I've considered only operations 
on one or two bands at time. Operations on more than two can of course 
be dissolved into a series of operations with max two at a time.

I agree that supporting overloading is important and it is more than 
just syntactic sugar since it can delegate some tasks to the compiler, 
which may create temporaries as needed etc.

>
> If you want to support this, it seems to be best practice to use expression templates (https://en.wikipedia.org/wiki/Expression_templates), because that would allow to create complex compositions of operations without having to create temporary datasets (e.g. for the sum of band1 and band2 in the example above).

Yes, I agree that avoiding temporaries is a worthy goal, and what I 
understand of expression templates, motivation for them has been that.

However, expression templates seem to be very C++ centric and do their 
work in compile time. The C API and high level language bindings are 
very important in GDAL. Therefore expression templates might not be the 
best solution in this case. However, perhaps the idea can be exploited 
somehow.

>
> The key thing that you need in order to implement this is an iterator over the raster bands. Eric Niebler writes at length about the benefits of using Ranges as a means of composing functions (https://github.com/ericniebler/range-v3 ) .You seem to be applying an iterator that iterates over blocks, rather than over pixels. How can that work when my_average, band1, band2 and band3 have different block sizes? Wouldn't your life be a lot easier if you iterated over pixels in the same order for all bands?.

I agree that it takes a bit of haggling to be able to work with more 
than one band at the same time when one has to maintain a separate cache 
for each band and each band has different block sizes. The situation is 
even worse for focal methods since one focal region can be on four 
blocks of one band in the worst case. It is however, in my opinion, an 
efficient approach when it is not feasible to load all raster data into 
memory. The approach is also strongly supported by the basic design of 
GDAL and the fundamental algorithm is presented in GDAL documentation (I 
gave the link in earlier email).

The solution I already have seems to work well for the one and two band 
case even with 3x3 focal region and as far as I can see it could be 
extended to cases involving more bands. The macros and functions I've 
written make cell (pixel) access possible with only a few lines of code 
but it could be probably improved. That would probably be desirable if 
more than two bands are present.

>
> If you are interested, I have a solution, albeit in C++11 (https://github.com/ahhz/map_algebra ).

I remember your email and I've taken a look at your code. I have nothing 
against using modern tools but I think GDAL is a bit conservative on 
them and portability is a big issue. However, I believe the map algebra 
implementation I'm writing will be a add-on or plugin for GDAL, and not 
something that will be tightly integrated into it.

>   The following is a program using it:
>
> #include <blink/map_algebra/map_algebra.h>
>
> namespace ma = blink::map_algebra;
>
> int my_function(int w, int x, int y, int z)
> {
>    return w * x + y * z;
> }
>
> int main()
> {
>    auto a = ma::open_read_only<int>("input_1.tif");
>    auto b = ma::open_read_only<int>("input_2.tif");
>    
>    // Example 1: Using operators
>    auto w = ma::create_from_model<double>("output_1.tif", a);
>    w = a + 3 * b;
>
>    // Example 2: Using assigning operators
>    auto x = ma::create_from_model<double>("output_2.tif", a);  x = 1;
>    x *= a;
>    x += 3 * b;
>    
>    // Example 3: Map algebra using cell-by-cell functions
>    auto y = ma::create_from_model<double>("output_3.tif", a);
>    y = ma::apply(my_function, 1, a, 3, b);
>
>    // Example 4: Combination
>    auto z = ma::create_from_model<double>("output_4.tif", a);
>    z = b + 3 * ma::apply(my_function, 1, a, 2, b);
>
>    return 0;
> }
>
> 2. Focal operations: operations that calculate an indicator for each pixel based on the values in surrounding pixels
>
> I think the key challenge here is to allow users to specify the function to be applied on the surrounding pixels. In my opinion a Map Algebra library should support all kinds of moving window analysis, and not just a number of built-in types of analysis. This can be implemented as yet another range that allows iteration over the pixels in the same order as the raster bands, but instead of return pixel values, it returns neighbourhood / window summaries.

The hydrological algorithm would benefit a lot from random access to 
extended neighborhood cells but so far I've written only code that uses 
linear, block by block and pixel by pixel within blocks, access.



>
> I have a C++11 library for this as well, but it is not yet working smoothly with the map algebra library (but it will!)
> https://github.com/ahhz/moving_window
> http://www.sciencedirect.com/science/article/pii/S0303243415300337
>
> 3. Zonal operations: operations that calculate indicators for groups (zones) of pixels.
> This seems more trivial than the other two components of map algebra and I haven't given it much attention, but I think should be supported.

One complication, which I just today worked on, seems to stem from one 
requirement that I have. I want the API be free of templates and thus 
there is a need for generic classes for, e.g., numbers (GDAL supports 
bands where data is various length integers or floats). Thus, for 
example a simple zonal method, which returns which zones share a 
boundary returns a rather complex data structure.

>
> 4. Global operations
> I don't think these need to be explicitly supported, because there is no genericity to exploit.

I find that I often need methods, which return for example the histogram 
of values in a band.

>
> In summary:
>
> What I am really trying to say is that developing map algebra functionality on top of GDAL or as part of GDAL seems very worthwhile and feasible. However, I would aim for functionality that is more generically supporting map algebra, rather than implementing specific map algebra tools. The foundation of such functionality in my opinion must be a GDALRange class that facilitates iteration over pixels in a uniform order. If I were you, I would first push a RFC to create a GDALRange, and only once that is done and dusted, consider the map algebra on top of it.

The RFC procedure of GDAL is open to everybody and the deciding body is 
the GDAL PSC, to which I do not belong to. As I wrote, the API I'm 
suggesting is essentially an add-on and thus leaves, even if adopted, 
room for other solutions.

Best regards,

Ari

>
> Kind regards, Alex
>
> (sorry for the self-promotion)
>
>> -----Original Message-----
>> From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Ari
>> Jolma
>> Sent: 01 April 2016 09:39
>> To: gdal-dev at lists.osgeo.org
>> Subject: Re: [gdal-dev] Map algebra
>>
>> I've got this into a rather nice working shape. The code needs to be
>> reorganized (it is now, horror, all in header files) but that's another
>> thing.
>>
>> I've so far built this around a basic DEM catchment analysis workflow.
>> It includes many kinds of steps so it is a pretty good benchmark. In
>> pseudo code the workflow is something like
>>
>> dem = open_from_file
>> dem->fill_depressions
>> fd = dem->compute_flow_directions
>> fd->route_flat_cells
>> ua = fd->compute_upstream_area
>> c = new_raster // compute the catchment into this
>> c->set_border_cells // we're interested in the outlet cells
>> c *= ua
>> c *= c > 10000 // we're interested in the big catchments
>> outlets = c->get_cells // outlets is an array of cells, and a cell is an
>> object containing (x,y,value)
>> c = 0
>> c->mark_catchment(fd, outlets[0], 1) // assuming the outlet cell is now
>> in outlets[0]
>> ua2 = new_raster // for visualization log of upstream area is nice
>> ua2 += ua
>> ua2->log
>>
>> The C code is of course not this nice but it is not very far from this.
>> All the basic four method types I mention below are implemented and
>> adding new methods is not very difficult. The code makes heavy use of
>> templates and macros in an attempt for versatility (GDAL rasters can
>> have many datatypes) and easiness to write methods in a few lines of
>> code. The whole set of code is now ~2500 lines but it creates rather
>> large executables due to templates. The code is C++ but the API is C
>> like, I've so far done no changes to existing GDAL code because of this.
>>
>> As written below, the code works on two levels of x,y loops: the blocks
>> within a band, which is generic and cells within a block, which is
>> separate for each method. The methods work on line by line (no recursion
>> etc.) and thus for example the fill_depressions is not optimal but
>> instead very simple. Also, very large rasters can be processed.
>>
>> I think this may be somewhat similar thing in relation to GDAL as the
>> network support, so it could be a thing to add to the library if wished.
>>
>> I've added RFC 62 "raster algebra" to spark discussion.
>>
>> Ari
>>
>>
>> 20.03.2016, 10:21, Ari Jolma kirjoitti:
>>> Folks,
>>>
>>> I played around a bit with the map algebra idea and came up with
>>> something that could work nicely as a plugin. The initial code is at
>>> https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>>>
>>> The idea is based on processing raster bands block by block and
>>> calling a given function on each block. Using macros and templates the
>>> code should be rather nice and manageable even when supporting
>>> multiple data types for raster cells.
>>>
>>> Further, the idea is to support three kinds of map algebra methods,
>>> mostly working on a raster band in-place.
>>>
>>> 1) Simple ones, which do not take any arguments beyond the raster band
>>> itself, examples are functions like log, sin, rand.
>>>
>>> 2) Those which take one non-spatial argument. The argument can be a
>>> scalar like a number, or more complex like a reclassifier.
>>>
>>> 3) Those which operate on two rasters. Examples are summation of
>>> rasters and computing flow directions on a DEM. The latter is a bit
>>> more complex since it is a focal method and requires a 3 x 3 matrix of
>>> blocks from the other operand raster.
>>>
>>> Maybe a fourth kind of methods are those which compute something from
>>> a raster.
>>>
>>> This would lead to four functions in the C API and raster band methods
>>> in the bindings.
>>>
>>> Comments are welcome, the initial code base contains a small demo
>>> program. Eventually, if this works, I'll make a RFC from this.
>>>
>>> Ari
>>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From doug_newcomb at fws.gov  Thu Apr  7 13:44:03 2016
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Thu, 7 Apr 2016 16:44:03 -0400
Subject: [gdal-dev] ISO WKT in gdal 2.0
Message-ID: <CALQGVr28qgunPtbwCDm8J4qfOewsqJzRxiW4VsLOJ0h6_zK6OQ@mail.gmail.com>

Hi Folks,
I had an acquaintance in USGS ask me whether gdal 2.0+uses ISO WKT  or is
still using OGC WKT .

I did see the discussion at
http://osgeo-org.1560.x6.nabble.com/gdal-dev-New-OGC-standard-about-WKT-for-projections-td5204937.html
and the project on the 2016 Summer of Code list,
https://trac.osgeo.org/gdal/wiki/SummerOfCode, so I am assuming that ISO
WKT has not been implemented yet.

I assumed that the effort was underway after reading this thread.
https://lists.osgeo.org/pipermail/gdal-dev/2016-February/043734.html



Thank you for the continued work on gdal, it is much appreciated!


Doug
-- 
Doug Newcomb
USFWS
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov
---------------------------------------------------------------------------------------------------------
The opinions I express are my own and are not representative of the
official policy of the U.S.Fish and Wildlife Service or Dept. of the
Interior.   Life is too short for undocumented, proprietary data formats.
As a federal employee, my email may be subject to FOIA request.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160407/a7ae89bd/attachment.html>

From even.rouault at spatialys.com  Thu Apr  7 13:55:07 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Apr 2016 22:55:07 +0200
Subject: [gdal-dev] ISO WKT in gdal 2.0
In-Reply-To: <CALQGVr28qgunPtbwCDm8J4qfOewsqJzRxiW4VsLOJ0h6_zK6OQ@mail.gmail.com>
References: <CALQGVr28qgunPtbwCDm8J4qfOewsqJzRxiW4VsLOJ0h6_zK6OQ@mail.gmail.com>
Message-ID: <201604072255.07348.even.rouault@spatialys.com>

Le jeudi 07 avril 2016 22:44:03, Newcomb, Doug a écrit :
> Hi Folks,
> I had an acquaintance in USGS ask me whether gdal 2.0+uses ISO WKT  or is
> still using OGC WKT .
> 
> I did see the discussion at
> http://osgeo-org.1560.x6.nabble.com/gdal-dev-New-OGC-standard-about-WKT-for
> -projections-td5204937.html and the project on the 2016 Summer of Code
> list,
> https://trac.osgeo.org/gdal/wiki/SummerOfCode, so I am assuming that ISO
> WKT has not been implemented yet.
> 
> I assumed that the effort was underway after reading this thread.
> https://lists.osgeo.org/pipermail/gdal-dev/2016-February/043734.html
> 

Doug,

The https://lists.osgeo.org/pipermail/gdal-dev/2016-February/043734.html 
thread was about *geometry* ISO WKT. The proposal for SOC was about *spatial 
reference system* WKT, whose version 2.0 isn't addressed at all currently in 
GDAL. 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From doug_newcomb at fws.gov  Thu Apr  7 14:31:33 2016
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Thu, 7 Apr 2016 17:31:33 -0400
Subject: [gdal-dev] ISO WKT in gdal 2.0
In-Reply-To: <201604072255.07348.even.rouault@spatialys.com>
References: <CALQGVr28qgunPtbwCDm8J4qfOewsqJzRxiW4VsLOJ0h6_zK6OQ@mail.gmail.com>
 <201604072255.07348.even.rouault@spatialys.com>
Message-ID: <CALQGVr25JvV_FU8zypgsPL-RP7QV_C_973U3mAS8jCj_a2nCbw@mail.gmail.com>

Thanks!  Will pass along.

Doug

On Thu, Apr 7, 2016 at 4:55 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Le jeudi 07 avril 2016 22:44:03, Newcomb, Doug a écrit :
> > Hi Folks,
> > I had an acquaintance in USGS ask me whether gdal 2.0+uses ISO WKT  or is
> > still using OGC WKT .
> >
> > I did see the discussion at
> >
> http://osgeo-org.1560.x6.nabble.com/gdal-dev-New-OGC-standard-about-WKT-for
> > -projections-td5204937.html and the project on the 2016 Summer of Code
> > list,
> > https://trac.osgeo.org/gdal/wiki/SummerOfCode, so I am assuming that ISO
> > WKT has not been implemented yet.
> >
> > I assumed that the effort was underway after reading this thread.
> > https://lists.osgeo.org/pipermail/gdal-dev/2016-February/043734.html
> >
>
> Doug,
>
> The https://lists.osgeo.org/pipermail/gdal-dev/2016-February/043734.html
> thread was about *geometry* ISO WKT. The proposal for SOC was about
> *spatial
> reference system* WKT, whose version 2.0 isn't addressed at all currently
> in
> GDAL.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>



-- 
Doug Newcomb
USFWS
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov
---------------------------------------------------------------------------------------------------------
The opinions I express are my own and are not representative of the
official policy of the U.S.Fish and Wildlife Service or Dept. of the
Interior.   Life is too short for undocumented, proprietary data formats.
As a federal employee, my email may be subject to FOIA request.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160407/0e4fc89b/attachment.html>

From alexhighviz at hotmail.com  Thu Apr  7 16:21:34 2016
From: alexhighviz at hotmail.com (alex)
Date: Fri, 8 Apr 2016 00:21:34 +0100
Subject: [gdal-dev] Map algebra
In-Reply-To: <5706AD41.4010805@gmail.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl> <5706AD41.4010805@gmail.com>
Message-ID: <DUB406-EAS322B536CEDEC8F8181268ACB4900@phx.gbl>

> 
> That is one aspect, yes. However, so far I've considered only operations on one
> or two bands at time. Operations on more than two can of course be dissolved
> into a series of operations with max two at a time.

That will often be possible, but not always. For instance how would you dissolve the following function? (without resorting to complete ugliness like c * a  + !c * b)

int conditional(bool c, int a, int b) { return c ? a : b; }

Also, would you expect the user to break down all his/her functions into two-argument or fewer functions?

> 
> I agree that supporting overloading is important and it is more than just
> syntactic sugar since it can delegate some tasks to the compiler, which may
> create temporaries as needed etc.

To be fair, in my project it is just syntactic sugar: "a + b" is just a short way to write "apply(std::plus<>{}, a, b) ";

> 
> >
> > If you want to support this, it seems to be best practice to use expression
> templates (https://en.wikipedia.org/wiki/Expression_templates), because that
> would allow to create complex compositions of operations without having to
> create temporary datasets (e.g. for the sum of band1 and band2 in the example
> above).
> 
> Yes, I agree that avoiding temporaries is a worthy goal, and what I
> understand of expression templates, motivation for them has been that.
> 
> However, expression templates seem to be very C++ centric and do their
> work in compile time. The C API and high level language bindings are
> very important in GDAL. Therefore expression templates might not be the
> best solution in this case. However, perhaps the idea can be exploited
> somehow.

I would think that you can get the principle to work in object-oriented fashion as well, where the template based function "apply" looks like this

auto apply(Function&& function, Args&&... args)

Couldn't the object oriented version for two arguments be something like this:

GDALRange* apply(GDALValue*( *function)(GDALValue*, GDALValue*), GDALArgument * arg1 GDALArgument * arg2)

Assuming that all ranges derive from GDALRange and all values from GDALValue, and both of these derive from GDALArgument. You can now sort out the function composition in runtime instead of compile-time.

I know which approach I would prefer, but I am not convinced it is not possible.

> 
[snip]
>You
> seem to be applying an iterator that iterates over blocks, rather than over pixels.
> How can that work when my_average, band1, band2 and band3 have different
> block sizes? Wouldn't your life be a lot easier if you iterated over pixels in the
> same order for all bands?.
> 
> I agree that it takes a bit of haggling to be able to work with more
> than one band at the same time when one has to maintain a separate cache
> for each band and each band has different block sizes. The situation is
> even worse for focal methods since one focal region can be on four
> blocks of one band in the worst case. 

The worst-case can be a lot worse, consider a focal window with a radius of 500 pixels.

>It is however, in my opinion, an
> efficient approach when it is not feasible to load all raster data into
> memory. 

Iterating pixel-by-pixel does not imply having to load all raster data into memory. It does imply loading multiple blocks into memory, i.e. a whole row of blocks.

>The approach is also strongly supported by the basic design of
> GDAL and the fundamental algorithm is presented in GDAL documentation (I
> gave the link in earlier email).

I didn't see that email and just trawled through the whole thread, can you give it again?

> 
> The solution I already have seems to work well for the one and two band
> case even with 3x3 focal region and as far as I can see it could be
> extended to cases involving more bands. The macros and functions I've
> written make cell (pixel) access possible with only a few lines of code
> but it could be probably improved. That would probably be desirable if
> more than two bands are present.
> 
> >
> > If you are interested, I have a solution, albeit in C++11
> (https://github.com/ahhz/map_algebra ).
> 
> I remember your email and I've taken a look at your code. I have nothing
> against using modern tools but I think GDAL is a bit conservative on
> them and portability is a big issue. However, I believe the map algebra
> implementation I'm writing will be a add-on or plugin for GDAL, and not
> something that will be tightly integrated into it.
> 
[snip]
> >
> > 2. Focal operations: operations that calculate an indicator for each pixel based
> on the values in surrounding pixels
> >
> > I think the key challenge here is to allow users to specify the function to be
> applied on the surrounding pixels. In my opinion a Map Algebra library should
> support all kinds of moving window analysis, and not just a number of built-in
> types of analysis. This can be implemented as yet another range that allows
> iteration over the pixels in the same order as the raster bands, but instead of
> return pixel values, it returns neighbourhood / window summaries.
> 
> The hydrological algorithm would benefit a lot from random access to
> extended neighborhood cells but so far I've written only code that uses
> linear, block by block and pixel by pixel within blocks, access.
> 
> 

I think I need to read up on your fundamental algorithm to understand this. Is linear access line-by-line? That would ease my worries because line-by-line is independent of block size, right?

> 
[snip]
> >
> > 3. Zonal operations: operations that calculate indicators for groups (zones) of
> pixels.
> > This seems more trivial than the other two components of map algebra and I
> haven't given it much attention, but I think should be supported.
> 
> One complication, which I just today worked on, seems to stem from one
> requirement that I have. I want the API be free of templates and thus
> there is a need for generic classes for, e.g., numbers (GDAL supports
> bands where data is various length integers or floats). Thus, for
> example a simple zonal method, which returns which zones share a
> boundary returns a rather complex data structure.

I understand zonal methods to be operating on pixels within zones and not on the relationship between zones. What kind of methods do you have in mind? 

> >
> > 4. Global operations
> > I don't think these need to be explicitly supported, because there is no
> genericity to exploit.
> 
> I find that I often need methods, which return for example the histogram
> of values in a band.
> 

Me too. But I don't feel it urgently needs special library support. 

> >
> > In summary:
> >
> > What I am really trying to say is that developing map algebra functionality on
> top of GDAL or as part of GDAL seems very worthwhile and feasible. However, I
> would aim for functionality that is more generically supporting map algebra,
> rather than implementing specific map algebra tools. The foundation of such
> functionality in my opinion must be a GDALRange class that facilitates iteration
> over pixels in a uniform order. If I were you, I would first push a RFC to create a
> GDALRange, and only once that is done and dusted, consider the map algebra on
> top of it.
> 
> The RFC procedure of GDAL is open to everybody and the deciding body is
> the GDAL PSC, to which I do not belong to. As I wrote, the API I'm
> suggesting is essentially an add-on and thus leaves, even if adopted,
> room for other solutions.

I thought the idea of discussing on this mailing-list was to look for consensus or at least strengthen ideas.

Kind regards, Alex

From ari.jolma at gmail.com  Thu Apr  7 23:04:37 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 8 Apr 2016 09:04:37 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <DUB406-EAS322B536CEDEC8F8181268ACB4900@phx.gbl>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl> <5706AD41.4010805@gmail.com>
 <DUB406-EAS322B536CEDEC8F8181268ACB4900@phx.gbl>
Message-ID: <570749F5.9060107@gmail.com>

08.04.2016, 02:21, alex kirjoitti:
>> That is one aspect, yes. However, so far I've considered only operations on one
>> or two bands at time. Operations on more than two can of course be dissolved
>> into a series of operations with max two at a time.
> That will often be possible, but not always. For instance how would you dissolve the following function? (without resorting to complete ugliness like c * a  + !c * b)
>
> int conditional(bool c, int a, int b) { return c ? a : b; }

As an assignment that would be

d = c ? a : b;

If all variables are spatial then that's four bands. To save space we'll 
do in-place modifications to bands. If we do not want to change any of 
the bands a, b and c, we'll begin by making d a copy of b:

d = b;

and then use a conditional

d = a if c;

In the case where c is in fact a simple function of a (like a > 50) this 
is already possible in the current API. I admit that this kind of 
operation is often needed, and it should be possible.

One problem with functions of multiple bands is the curse of 
dimensionality related to templates. The datatype of a band is one of 7 
values. If we want to support all, then for three bands it is 7x7x7 
variations. Already now with a small number of methods for two bands the 
object file of just that source file is ~3.5 MB. However, I think that 
in conditional functions like above the c could be limited to byte datatype.

>
> Also, would you expect the user to break down all his/her functions into two-argument or fewer functions?

In fact, more or less yes. If one can devise a mathematical function she 
needs, then she probably can also think of a way to do it with a series 
of a simple operations. I any mathematical operation involving n 
variables can be broken down into a series of operations involving max 
two variables, then I'd be happy with that set of operations. It is in 
fact an interesting theoretical question what would be the simplest such 
set of operations.

>
>> I agree that supporting overloading is important and it is more than just
>> syntactic sugar since it can delegate some tasks to the compiler, which may
>> create temporaries as needed etc.
> To be fair, in my project it is just syntactic sugar: "a + b" is just a short way to write "apply(std::plus<>{}, a, b) ";

I've written a map algebra overload code in Perl with underlying code in 
C. It was possible to write a set of simple methods, which the Perl 
compiler would use to compute any algebraic expression. Some of the 
simple methods would create a result, which Perl would use as an input 
to other methods and then discard it. That would happen invisible to the 
user.

>
>>> If you want to support this, it seems to be best practice to use expression
>> templates (https://en.wikipedia.org/wiki/Expression_templates), because that
>> would allow to create complex compositions of operations without having to
>> create temporary datasets (e.g. for the sum of band1 and band2 in the example
>> above).
>>
>> Yes, I agree that avoiding temporaries is a worthy goal, and what I
>> understand of expression templates, motivation for them has been that.
>>
>> However, expression templates seem to be very C++ centric and do their
>> work in compile time. The C API and high level language bindings are
>> very important in GDAL. Therefore expression templates might not be the
>> best solution in this case. However, perhaps the idea can be exploited
>> somehow.
> I would think that you can get the principle to work in object-oriented fashion as well, where the template based function "apply" looks like this
>
> auto apply(Function&& function, Args&&... args)
>
> Couldn't the object oriented version for two arguments be something like this:
>
> GDALRange* apply(GDALValue*( *function)(GDALValue*, GDALValue*), GDALArgument * arg1 GDALArgument * arg2)
>
> Assuming that all ranges derive from GDALRange and all values from GDALValue, and both of these derive from GDALArgument. You can now sort out the function composition in runtime instead of compile-time.
>
> I know which approach I would prefer, but I am not convinced it is not possible.
>
> [snip]
>> You
>> seem to be applying an iterator that iterates over blocks, rather than over pixels.
>> How can that work when my_average, band1, band2 and band3 have different
>> block sizes? Wouldn't your life be a lot easier if you iterated over pixels in the
>> same order for all bands?.
>>
>> I agree that it takes a bit of haggling to be able to work with more
>> than one band at the same time when one has to maintain a separate cache
>> for each band and each band has different block sizes. The situation is
>> even worse for focal methods since one focal region can be on four
>> blocks of one band in the worst case.
> The worst-case can be a lot worse, consider a focal window with a radius of 500 pixels.
>
>> It is however, in my opinion, an
>> efficient approach when it is not feasible to load all raster data into
>> memory.
> Iterating pixel-by-pixel does not imply having to load all raster data into memory. It does imply loading multiple blocks into memory, i.e. a whole row of blocks.
>
>> The approach is also strongly supported by the basic design of
>> GDAL and the fundamental algorithm is presented in GDAL documentation (I
>> gave the link in earlier email).
> I didn't see that email and just trawled through the whole thread, can you give it again?

http://www.gdal.org/classGDALRasterBand.html#ad80cecc562fd48f5783677de625360ac

it is a simple algorithm but demonstrates the two level approach.

>
>> The solution I already have seems to work well for the one and two band
>> case even with 3x3 focal region and as far as I can see it could be
>> extended to cases involving more bands.

I'll add the disclaimer about the curse of dimensionality I mention 
above for which a solution should be found first. It could be a simple 
one like copy all blocks to same datatype first.

>>   The macros and functions I've
>> written make cell (pixel) access possible with only a few lines of code
>> but it could be probably improved. That would probably be desirable if
>> more than two bands are present.
>>
>>> If you are interested, I have a solution, albeit in C++11
>> (https://github.com/ahhz/map_algebra ).
>>
>> I remember your email and I've taken a look at your code. I have nothing
>> against using modern tools but I think GDAL is a bit conservative on
>> them and portability is a big issue. However, I believe the map algebra
>> implementation I'm writing will be a add-on or plugin for GDAL, and not
>> something that will be tightly integrated into it.
>>
> [snip]
>>> 2. Focal operations: operations that calculate an indicator for each pixel based
>> on the values in surrounding pixels
>>> I think the key challenge here is to allow users to specify the function to be
>> applied on the surrounding pixels. In my opinion a Map Algebra library should
>> support all kinds of moving window analysis, and not just a number of built-in
>> types of analysis. This can be implemented as yet another range that allows
>> iteration over the pixels in the same order as the raster bands, but instead of
>> return pixel values, it returns neighbourhood / window summaries.
>>
>> The hydrological algorithm would benefit a lot from random access to
>> extended neighborhood cells but so far I've written only code that uses
>> linear, block by block and pixel by pixel within blocks, access.
>>
>>
> I think I need to read up on your fundamental algorithm to understand this. Is linear access line-by-line? That would ease my worries because line-by-line is independent of block size, right?

It really depends on the block size, which is something GDAL core and 
drivers handle.

>
> [snip]
>>> 3. Zonal operations: operations that calculate indicators for groups (zones) of
>> pixels.
>>> This seems more trivial than the other two components of map algebra and I
>> haven't given it much attention, but I think should be supported.
>>
>> One complication, which I just today worked on, seems to stem from one
>> requirement that I have. I want the API be free of templates and thus
>> there is a need for generic classes for, e.g., numbers (GDAL supports
>> bands where data is various length integers or floats). Thus, for
>> example a simple zonal method, which returns which zones share a
>> boundary returns a rather complex data structure.
> I understand zonal methods to be operating on pixels within zones and not on the relationship between zones. What kind of methods do you have in mind?

I admit that it is perhaps not a "pure" zonal method. For example, think 
about the question: "What are the neighboring countries of each country?".

>
>>> 4. Global operations
>>> I don't think these need to be explicitly supported, because there is no
>> genericity to exploit.
>>
>> I find that I often need methods, which return for example the histogram
>> of values in a band.
>>
> Me too. But I don't feel it urgently needs special library support.


In my mind it goes logically into this API, but that's just a matter of 
taste.


>
>>> In summary:
>>>
>>> What I am really trying to say is that developing map algebra functionality on
>> top of GDAL or as part of GDAL seems very worthwhile and feasible. However, I
>> would aim for functionality that is more generically supporting map algebra,
>> rather than implementing specific map algebra tools. The foundation of such
>> functionality in my opinion must be a GDALRange class that facilitates iteration
>> over pixels in a uniform order. If I were you, I would first push a RFC to create a
>> GDALRange, and only once that is done and dusted, consider the map algebra on
>> top of it.
>>
>> The RFC procedure of GDAL is open to everybody and the deciding body is
>> the GDAL PSC, to which I do not belong to. As I wrote, the API I'm
>> suggesting is essentially an add-on and thus leaves, even if adopted,
>> room for other solutions.
> I thought the idea of discussing on this mailing-list was to look for consensus or at least strengthen ideas.

Sure.

Ari

>
> Kind regards, Alex
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From alexhighviz at hotmail.com  Fri Apr  8 09:22:30 2016
From: alexhighviz at hotmail.com (alex)
Date: Fri, 8 Apr 2016 17:22:30 +0100
Subject: [gdal-dev] Map algebra
In-Reply-To: <570749F5.9060107@gmail.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl> <5706AD41.4010805@gmail.com>
 <DUB406-EAS322B536CEDEC8F8181268ACB4900@phx.gbl> <570749F5.9060107@gmail.com>
Message-ID: <DUB406-EAS41867AB1FA9EBED16335F43B4910@phx.gbl>



> -----Original Message-----
> From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of 
> Ari Jolma
> Sent: 08 April 2016 07:05
> To: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] Map algebra
> 
> 08.04.2016, 02:21, alex kirjoitti:
> >> That is one aspect, yes. However, so far I've considered only 
> >> operations on one or two bands at time. Operations on more than two 
> >> can of course be dissolved into a series of operations with max two at a time.
> > That will often be possible, but not always. For instance how would 
> > you dissolve the following function? (without resorting to complete 
> > ugliness like c * a  + !c * b)
> >
> > int conditional(bool c, int a, int b) { return c ? a : b; }
> 
> As an assignment that would be
> 
> d = c ? a : b;
> 
> If all variables are spatial then that's four bands. To save space 
> we'll do in-place modifications to bands. If we do not want to change 
> any of the bands a, b and c, we'll begin by making d a copy of b:
> 
> d = b;
> 
> and then use a conditional
> 
> d = a if c;
> 

Ha, that was easier than I thought :)

 But also quite inefficient. And you'll still need to negotiate three different block sizes.

[snip]

 

> >> The approach is also strongly supported by the basic design of GDAL 
> >> and the fundamental algorithm is presented in GDAL documentation (I 
> >> gave the link in earlier email).
> > I didn't see that email and just trawled through the whole thread, 
> > can you give
> it again?
> 
> http://www.gdal.org/classGDALRasterBand.html#ad80cecc562fd48f5783677de
> 625360ac
> 
> it is a simple algorithm but demonstrates the two level approach.

OK, I also use the ReadBlock and WriteBlock functions instead of the RasterIO. But I still don't see how the principle of iterating over blocks and within blocks is an approach that can be used for two or three bands with different block sizes. 

> >
> >> The solution I already have seems to work well for the one and two 
> >> band case even with 3x3 focal region and as far as I can see it 
> >> could be extended to cases involving more bands.
> 
> I'll add the disclaimer about the curse of dimensionality I mention 
> above for which a solution should be found first. It could be a simple 
> one like copy all blocks to same datatype first.

Can you describe the principle of your method? And where your curse of dimensionality comes in. Perhaps somebody has a solution.

[snip]
> 
> It really depends on the block size, which is something GDAL core and 
> drivers handle.

> >>> 3. Zonal operations: operations that calculate indicators for 
> >>> groups
> >>> (zones) of
> >> pixels.
> >>> This seems more trivial than the other two components of map 
> >>> algebra and I
> >> haven't given it much attention, but I think should be supported.
> >>
> >> One complication, which I just today worked on, seems to stem from 
> >> one requirement that I have. I want the API be free of templates 
> >> and thus there is a need for generic classes for, e.g., numbers 
> >> (GDAL supports bands where data is various length integers or floats).
> >> Thus, for example a simple zonal method, which returns which zones 
> >> share a boundary returns a rather complex data structure.
> > I understand zonal methods to be operating on pixels within zones 
> > and not on
> the relationship between zones. What kind of methods do you have in mind?
> 
> I admit that it is perhaps not a "pure" zonal method. For example, 
> think about the question: "What are the neighboring countries of each country?".

Sure, that is useful functionality, but I was trying to find out what is the rationale and purpose of your Map Algebra library. I think I misunderstood your original announcement email. I thought you intended to offer generic support for Map Algebra type analysis. Instead it seems that you are offering a specific set of Map Algebra functions (as I can now see in the RFC).

From matt.gregory at oregonstate.edu  Fri Apr  8 09:28:56 2016
From: matt.gregory at oregonstate.edu (Gregory, Matthew)
Date: Fri, 8 Apr 2016 16:28:56 +0000
Subject: [gdal-dev] Map algebra
In-Reply-To: <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
Message-ID: <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>

Hi all,

Alex wrote:
> What exactly do you mean by Map Algebra? I understand it to cover the
> following:
> 
> 1. Local operations: pixel-by-pixel operations on raster bands.
> 2. Focal operations: operations that calculate an indicator for each
> pixel based on the values in surrounding pixels
> 3. Zonal operations: operations that calculate indicators for groups
> (zones) of pixels.
> 4. Global operations: operations that calculate indicators over all
> pixels.

I've been following this discussion with limited understanding of the C++ needed to implement such a library, but I echo the functionality that Alex lists above.  I *would* like to add my two cents in that I would want any map algebra library to handle three types of issues when dealing with raster data:

  1) Handling mask or nodata values (e.g. an analysis mask should be
     able to be set on any algebra operation that retains or combines
     nodata values from its component operands)

  2) Handling different spatial extents (e.g. the ability to specify 
     an output extent -- coming from a specific raster or from the
     union/intersection of rasters)

  3) Handling different cell sizes (e.g. the ability to specify an
     analysis cell size and resample/reproject(??) all operands based
     on this parameter)

So if raster 'a' was 1000x1000 30m in UTM and raster 'b' was 500x500 90m in WGS84, one might be able to do:

  c = a + b

with reasonable defaults chosen for output 'c' as well as the option to set output options explicitly (I fully admit the reprojection on-the-fly is a big ask ...).  

Sorry if this hijacks the discussion, but I appreciate your efforts to envision such a system.

thanks, matt



From even.rouault at spatialys.com  Fri Apr  8 12:48:29 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Apr 2016 21:48:29 +0200
Subject: [gdal-dev] GDAL packaging in OSGeo4W
In-Reply-To: <20160406163727.GA12585@norbit.de>
References: <201602221215.31399.even.rouault@spatialys.com>
 <20160406163727.GA12585@norbit.de>
Message-ID: <201604082148.29737.even.rouault@spatialys.com>

Le mercredi 06 avril 2016 18:37:27, Jürgen E. Fischer a écrit :
> Hi Even,
> 
> On Mon, 22. Feb 2016 at 12:15:31 +0100, Even Rouault wrote:
> > Could be cool to have -dev versions packaged from time to time (or
> > potentially nightly builds), as well as a few drivers available as
> > plugins (PDF driver, MongoDB one)
> 
> There's a nighly build of GDAL in OSGeo4W now.   Invoke gdal-dev-env from
> the osgeo4w shell to setup it's paths.

Jürgen,

I just tried it. Just a tiny fix needed in gdal-dev-env.bat to make it point to the appropriate Python bindings with :

SET PYTHONPATH=%OSGEO4W_ROOT%\apps\gdal-dev\pymod\Lib\site-packages;%PYTHONPATH%

From package.cmd top comment, I also suspect that the FileGDB SDK shipped is 1.3. I'd suggest using 1.4, that has
a few interesting fixes : supporting layers with (not so) "exotic" projections, and a fix needed to
be able to write M values.

Minor: gdal-dev-2.1-1.txt isn't up-to-date with the most recent version of LICENSE.TXT.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From alexhighviz at hotmail.com  Fri Apr  8 15:43:56 2016
From: alexhighviz at hotmail.com (alex)
Date: Fri, 8 Apr 2016 23:43:56 +0100
Subject: [gdal-dev] Map algebra
In-Reply-To: <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
 <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
Message-ID: <DUB406-EAS2992AEB4446F53FA022B385B4910@phx.gbl>



> -----Original Message-----
> From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of
> Gregory, Matthew
> Sent: 08 April 2016 17:29
> To: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] Map algebra
> 
> Hi all,
> 
> Alex wrote:
> > What exactly do you mean by Map Algebra? I understand it to cover the
> > following:
> >
> > 1. Local operations: pixel-by-pixel operations on raster bands.
> > 2. Focal operations: operations that calculate an indicator for each
> > pixel based on the values in surrounding pixels 3. Zonal operations:
> > operations that calculate indicators for groups
> > (zones) of pixels.
> > 4. Global operations: operations that calculate indicators over all
> > pixels.
> 
> I've been following this discussion with limited understanding of the C++ needed
> to implement such a library, but I echo the functionality that Alex lists above.  I
> *would* like to add my two cents in that I would want any map algebra library
> to handle three types of issues when dealing with raster data:
> 
>   1) Handling mask or nodata values (e.g. an analysis mask should be
>      able to be set on any algebra operation that retains or combines
>      nodata values from its component operands)
> 

My preferred approach for nodata values is to wrap them as boost::optional<T> (or forthcoming std:: optional<T>). One nice thing about representing as ranges is that operations on ranges can be chained. It is quite trivial to transform a range of T's to a range of boost:::optional<T>'s, e.g. as follows: 

auto band_checked = ma::apply(nodata_checker<int>{nodata_value}, band);

where: 

template<class T>
struct nodata_checker
{
  nodata_checker(const T& nodata) : m_nodata(nodata){}

  boost::optional<T> operator()(const T& value)
  {
    if(value != m_nodata) return value; // else return boost::none;
  }
  T m_nodata;
};

To complement this, the function object that is working on the values in the bands can be wrapped in another function object that intercepts nodata values. 

e.g. in simplified form for a single argument:

boost::optional<f_return_type> f_checked(Function&& f, boost::optional<T>& arg)
{
	if(arg) return f(arg);  // else return boost::none
} 

So even though I have not tried it, I would think that supporting nodata values in range-based map algebra is fairly simple to implement.

>   2) Handling different spatial extents (e.g. the ability to specify
>      an output extent -- coming from a specific raster or from the
>      union/intersection of rasters)

Again, I haven't actually done it, but I think working with ranges makes it relatively easy to support this. The framework requires ranges to have the same extent and cell-size.  It would be pretty straightforward to define a range that iterates over a given extent that is different from the raster containing it (especially if cell centres align). From then on, all the same methods can be applied. The Adobe Generic Image Library uses a similar approach.

It will be more tricky when the ranges have a different orientation, but still just a linear transformation. 

> 
>   3) Handling different cell sizes (e.g. the ability to specify an
>      analysis cell size and resample/reproject(??) all operands based
>      on this parameter)
> 

Different cell-sizes, like different extents should be supportable through a range transform. 

> So if raster 'a' was 1000x1000 30m in UTM and raster 'b' was 500x500 90m in
> WGS84, one might be able to do:
> 
>   c = a + b
> 
> with reasonable defaults chosen for output 'c' as well as the option to set output
> options explicitly (I fully admit the reprojection on-the-fly is a big ask ...).
>

I wouldn't know how to do this. But somebody more versed in on-the-fly reproject might just...

 
> Sorry if this hijacks the discussion, but I appreciate your efforts to envision such
> a system.
> 

I don't think you are hijacking the discussion. If GDAL is to support Map Algebra it is necessary to discuss what kind of expectations we have.

> thanks, matt
> 

From ari.jolma at gmail.com  Sun Apr 10 01:20:00 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sun, 10 Apr 2016 11:20:00 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
 <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
Message-ID: <570A0CB0.3060600@gmail.com>

08.04.2016, 19:28, Gregory, Matthew kirjoitti:
> I would want any map algebra library to handle three types of issues when dealing with raster data:
>
>    1) Handling mask or nodata values (e.g. an analysis mask should be
>       able to be set on any algebra operation that retains or combines
>       nodata values from its component operands)

GDAL supports nodata values and mask bands to identify cells that do not 
contain valid data. In arithmetics I think it is straightforward that  x 
+ nodata = nodata. In logical operations it depends on the 
interpretation of nodata. If it means unknown, then we are dealing with 
three-valued logics where for example unknown OR true = true. Think 
about for example a raster which shows polluted areas as a result of two 
studies (true, false, unknown). If one study shows a site polluted and 
the other has no data, then the result should be that the site is polluted.

I haven't yet got to the point in my code where I look at nodata and 
mask bands.

>
>    2) Handling different spatial extents (e.g. the ability to specify
>       an output extent -- coming from a specific raster or from the
>       union/intersection of rasters)

This may be desirable in some cases. For example if we have a huge 
raster and want to study some parts of it. In general I would, however, 
leave this for other already existing GDAL tools, especially 
gdal_translate, whose functionality is available in APIs as well.

>
>    3) Handling different cell sizes (e.g. the ability to specify an
>       analysis cell size and resample/reproject(??) all operands based
>       on this parameter)

I think using gdal_translate in this case as a first step makes even 
more sense.

Alex asked about how I iterate over blocks when there are two or more 
bands involved. The basic idea is that all methods operate on one band, 
and other bands (in my case if there is a second band) are adjusted to 
that. The algorithm is the following. "band" is a wrapper (struct) for a 
GDALRasterBand object and block cache. A block cache is simply an array 
of pointers to data, which are obtained from the GDALRasterBand object 
with ReadBlock() and which may be written back with WriteBlock().

band1 = gma_band_initialize(b1);
band2 = gma_band_initialize(b2);

while (iterate) {

         block_index i;
         for (i = blocks in band1) {

                 add block i to cache in band1;
                 block1 = get block i from band1;

                 update cache in band1 to allow desired focal distance;
                 update cache in band2 to allow desired focal distance;

                 call method specific callback with (band1, block1, 
band2, retval, arg);
                 make a note if the callback indicates a need for iteration;

                 based on the return value from the callback

                     return with error,
                     continue with next block from band1, or
                     write block1 to band1 and continue with next block 
from band1;

             }
         }
         if iteration, then in some cases some band level things need to 
be done;
     }
     empty cache in band1;
     empty cache in band2;
}

The cache update function reads all needed blocks into the cache and 
discards those that are not needed. If there were no discards, the cache 
would eventually contain the whole band.

In the method callback values from the band2 are obtained by first 
computing the global cell index and then the respective block and cell 
index within the block.

This may not be the best possible algorithm but to me it is pretty 
understandable, which is a goal in itself.

The code is at

https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra

The curse of dimensionality comes in at the point, where the above 
function is called. The method callback is a template function and it 
needs the datatype of each band that is given to it as an argument. (I 
see now that I have made also the above function a template function, 
which may not be needed).

Best,

Ari


From cavallini at faunalia.it  Sun Apr 10 08:23:41 2016
From: cavallini at faunalia.it (Paolo Cavallini)
Date: Sun, 10 Apr 2016 17:23:41 +0200
Subject: [gdal-dev] ogr2ogr failing on postgis?
Message-ID: <570A6FFD.9050903@faunalia.it>

Hi all,
I have an ogr2ogr command, from shp to pg, that fails because it
requests write access to spatial_ref_sys. An apparently identical
command on another file runs smoothly. Any hint?
Details and data documented here:
http://hub.qgis.org/issues/14650
Thanks.
-- 
Paolo Cavallini - www.faunalia.eu
QGIS & PostGIS courses: http://www.faunalia.eu/training.html

From bishop.dev at gmail.com  Sun Apr 10 08:56:47 2016
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 10 Apr 2016 18:56:47 +0300
Subject: [gdal-dev] ogr2ogr failing on postgis?
In-Reply-To: <570A6FFD.9050903@faunalia.it>
References: <570A6FFD.9050903@faunalia.it>
Message-ID: <570A77BF.40905@gmail.com>

Hi Paolo,

It seems to me that your shape spatial reference not present in 
spatial_ref_sys and GDAL try to import it into spatial_ref_sys.
Your shape file have such SRS:
PROJCS["Monte_Mario_Italy_zone_1",GEOGCS["GCS_Monte 
Mario",DATUM["D_Monte_Mario",SPHEROID["International_1924",6378388,297]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",9],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",1500000],PARAMETER["false_northing",0],UNIT["Meter",1]]

If I execute such SQL: select * from spatial_ref_sys where srtext like 
'%Monte_Mario%' I received:

4265;"EPSG";4265;"GEOGCS["Monte 
Mario",DATUM["Monte_Mario",SPHEROID["International 
1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68],AUTHORITY["EPSG","6265"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745 
(...)"
4806;"EPSG";4806;"GEOGCS["Monte Mario 
(Rome)",DATUM["Monte_Mario_Rome",SPHEROID["International 
1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68],AUTHORITY["EPSG","6806"]],PRIMEM["Rome",12.45233333333333,AUTHORITY["EPSG","8906"] 
(...)"
3003;"EPSG";3003;"PROJCS["Monte Mario / Italy zone 1",GEOGCS["Monte 
Mario",DATUM["Monte_Mario",SPHEROID["International 
1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68],AUTHORITY["EPSG","6265"]],PRIMEM["Greenwich",0,AUTHORITY[" 
(...)"
3004;"EPSG";3004;"PROJCS["Monte Mario / Italy zone 2",GEOGCS["Monte 
Mario",DATUM["Monte_Mario",SPHEROID["International 
1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68],AUTHORITY["EPSG","6265"]],PRIMEM["Greenwich",0,AUTHORITY[" 
(...)"
26591;"EPSG";26591;"PROJCS["Monte Mario (Rome) / Italy zone 1 
(deprecated)",GEOGCS["Monte Mario 
(Rome)",DATUM["Monte_Mario_Rome",SPHEROID["International 
1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68],AUTHORITY["EPSG","6806"]], 
(...)"
26592;"EPSG";26592;"PROJCS["Monte Mario (Rome) / Italy zone 2 
(deprecated)",GEOGCS["Monte Mario 
(Rome)",DATUM["Monte_Mario_Rome",SPHEROID["International 
1924",6378388,297,AUTHORITY["EPSG","7022"]],TOWGS84[-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68],AUTHORITY["EPSG","6806"]], 
(...)"

I think you need to reproject shape file to EPSG: 3003 or defined it for 
shape file.

Best regards,
     Dmitry

10.04.2016 18:23, Paolo Cavallini пишет:
> Hi all,
> I have an ogr2ogr command, from shp to pg, that fails because it
> requests write access to spatial_ref_sys. An apparently identical
> command on another file runs smoothly. Any hint?
> Details and data documented here:
> http://hub.qgis.org/issues/14650
> Thanks.


From even.rouault at spatialys.com  Sun Apr 10 09:01:54 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 10 Apr 2016 18:01:54 +0200
Subject: [gdal-dev] ogr2ogr failing on postgis?
In-Reply-To: <570A6FFD.9050903@faunalia.it>
References: <570A6FFD.9050903@faunalia.it>
Message-ID: <201604101801.55031.even.rouault@spatialys.com>

Hi Paolo,

> Hi all,
> I have an ogr2ogr command, from shp to pg, that fails because it
> requests write access to spatial_ref_sys. An apparently identical
> command on another file runs smoothly. Any hint?
> Details and data documented here:
> http://hub.qgis.org/issues/14650

Yes, this is expected and a rather common problem with shapefiles. As the 
shapefile .prj doesn't contain any explicit EPSG code, the PostGIS driver tries 
to find a match in spatial_ref_sys based on an exact match on the WKT, but as 
the OGC WKT built from the .prj is different from the one in spatial_ref_sys 
(one of the difference is the absence of the AUTHORITY["EPSG","3003"] node of 
course !), it must fallback to creating an ad-hoc entry, hence the need for 
write access.

Workaround: provide explicit SRS, in that case -a_srs EPSG:3003 (as I can see 
in the .qpj)

A more "fuzzy" indentification of SRS could help for that.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cavallini at faunalia.it  Sun Apr 10 11:39:25 2016
From: cavallini at faunalia.it (Paolo Cavallini)
Date: Sun, 10 Apr 2016 20:39:25 +0200
Subject: [gdal-dev] ogr2ogr failing on postgis?
In-Reply-To: <201604101801.55031.even.rouault@spatialys.com>
References: <570A6FFD.9050903@faunalia.it>
 <201604101801.55031.even.rouault@spatialys.com>
Message-ID: <570A9DDD.4080803@faunalia.it>

Il 10/04/2016 18:01, Even Rouault ha scritto:

> Yes, this is expected and a rather common problem with shapefiles.

Thanks a lot for the explanation. QGIS therefore creates an incorrect
prj, but I did not noticed it because it loaded it with the correct
EPSG. Ticket upstream opened:
http://hub.qgis.org/issues/14655
All the best, and thanks.
-- 
Paolo Cavallini - www.faunalia.eu
QGIS & PostGIS courses: http://www.faunalia.eu/training.html

From even.rouault at spatialys.com  Sun Apr 10 12:06:20 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 10 Apr 2016 21:06:20 +0200
Subject: [gdal-dev] ogr2ogr failing on postgis?
In-Reply-To: <570A9DDD.4080803@faunalia.it>
References: <570A6FFD.9050903@faunalia.it>
 <201604101801.55031.even.rouault@spatialys.com>
 <570A9DDD.4080803@faunalia.it>
Message-ID: <201604102106.21056.even.rouault@spatialys.com>

Le dimanche 10 avril 2016 20:39:25, Paolo Cavallini a écrit :
> Il 10/04/2016 18:01, Even Rouault ha scritto:
> > Yes, this is expected and a rather common problem with shapefiles.
> 
> Thanks a lot for the explanation. QGIS therefore creates an incorrect
> prj, but I did not noticed it because it loaded it with the correct
> EPSG. Ticket upstream opened:
> http://hub.qgis.org/issues/14655

No, QGIS did it fine (actually I suspect it generates .prj file through OGR 
itself). ESRI .prj file are supposed *not* to contain EPSG codes unfortunately. 
This is the ESRI WKT variant. Which makes it hard to deal with them on the 
reading side. The issue is more on the OGR side.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Blumentrath at nina.no  Mon Apr 11 00:13:06 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Mon, 11 Apr 2016 07:13:06 +0000
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
In-Reply-To: <c95540806b324e9db3cc534a352f627f@NINSRV23.nina.no>
References: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
 <201604041610.32723.even.rouault@spatialys.com>
 <dde367c55e604d29a23d6e60ab2c05a7@NINSRV23.nina.no>
 <201604041648.20406.even.rouault@spatialys.com>
 <c95540806b324e9db3cc534a352f627f@NINSRV23.nina.no>
Message-ID: <a25bd100d48b4b6b8edd0f7dc7029e15@NINSRV23.nina.no>

Hi again,

One more question:

Before I installed GDAL 2.1 with GRASS 7.0.4svn support I ran GDAL 1.11 compiled against GRASS 7.0.2.

Now I get on every GDAL command this: error message: 
ERROR 1: libgrass_gis.7.0.2svn.so: cannot open shared object file: No such file or directory
ERROR 1: libgrass_gis.7.0.2svn.so: cannot open shared object file: No such file or directory
ERROR 1: libgrass_raster.7.0.2svn.so: cannot open shared object file: No such file or directory
ERROR 1: libgrass_raster.7.0.2svn.so: cannot open shared object file: No such file or directory
Warning 1: GRASS warning: GISBASE environment variable was not set, using:
/usr/local/grass-7.0.4svn
Driver: GRASS/GRASS Rasters (5.7+)

Looks like GDAL somehow tries to find the link to my old GRASS installation...

gdalinfo --version says: GDAL 2.1.0beta1, released 2016/04/01
gdal-config --dep-libs points to: (...) -L/usr/local/grass-7.0.4svn/lib -lgrass_vector (...)

GDAL does read GRASS rasters despite the error message.

So my question is: How can I get rid of this annoying clutter and what did I wrong when I compiled from source?

Thanks in advance for any hint...

Kind regards,
Stefan



-----Original Message-----
From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Blumentrath, Stefan
Sent: 4. april 2016 16:50
To: Even Rouault <even.rouault at spatialys.com>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4

Cool! Thanks for the info!

-----Original Message-----
From: Even Rouault [mailto:even.rouault at spatialys.com]
Sent: 4. april 2016 16:48
To: Blumentrath, Stefan <Stefan.Blumentrath at nina.no>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4

Le lundi 04 avril 2016 16:40:36, Blumentrath, Stefan a écrit :
> Hi Even,
> 
> Many thanks for the quick fix!
> 
> Works fine now!
> 
> BTW, are there any plans for a GDAL-GRASS-plugin in GDAL 2.x?

There is already the following for GDAL 2.0.X http://download.osgeo.org/gdal/2.0.0/gdal-grass-2.0.0.tar.gz 

And for GDAL 2.1, a new snapshot from trunk with the above fix will be done. 
You can already build the plugin snapshot by yourself from the GDAL source tree :
- cd frmts/grass
- make dist
And this will generate gdal-grass-2.1.0.tar.gz

> 
> Cheers
> Stefan
> 
> 
> -----Original Message-----
> From: Even Rouault [mailto:even.rouault at spatialys.com]
> Sent: 4. april 2016 16:11
> To: gdal-dev at lists.osgeo.org
> Cc: Blumentrath, Stefan <Stefan.Blumentrath at nina.no>
> Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
> 
> Le lundi 04 avril 2016 15:45:48, Blumentrath, Stefan a écrit :
> > Hi,
> > 
> > I try to build GDAL 2.1 with GRASS (7.0.4svn) support.
> > 
> > As far as I can see there is no GRASS-plugin for GDAL 2.x..., so I do:
> > 1) build GDAL, 2) build GRASS, 3) rebuild GDAL --with-grass.
> 
> > Unfortunately, I get the following error:
> Stefan
> 
> thanks for the report. I've committed in trunk r33893 a changeset that 
> should hopefully fix the compilation error, however I don't have a 
> setup to test, so I'd appreciate your feedback. So for the final 2.1, 
> we will have to provide an updated snapshot of the gdal- grass plugin sources.
> 
> Even
> 
> --
> Spatialys - Geospatial professional services http://www.spatialys.com

--
Spatialys - Geospatial professional services http://www.spatialys.com _______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev

From even.rouault at spatialys.com  Mon Apr 11 01:00:59 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Apr 2016 10:00:59 +0200
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
In-Reply-To: <a25bd100d48b4b6b8edd0f7dc7029e15@NINSRV23.nina.no>
References: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
 <c95540806b324e9db3cc534a352f627f@NINSRV23.nina.no>
 <a25bd100d48b4b6b8edd0f7dc7029e15@NINSRV23.nina.no>
Message-ID: <201604111001.00987.even.rouault@spatialys.com>

Le lundi 11 avril 2016 09:13:06, Blumentrath, Stefan a écrit :
> Hi again,
> 
> One more question:
> 
> Before I installed GDAL 2.1 with GRASS 7.0.4svn support I ran GDAL 1.11
> compiled against GRASS 7.0.2.
> 
> Now I get on every GDAL command this: error message:
> ERROR 1: libgrass_gis.7.0.2svn.so: cannot open shared object file: No such
> file or directory ERROR 1: libgrass_gis.7.0.2svn.so: cannot open shared
> object file: No such file or directory ERROR 1:
> libgrass_raster.7.0.2svn.so: cannot open shared object file: No such file
> or directory ERROR 1: libgrass_raster.7.0.2svn.so: cannot open shared
> object file: No such file or directory Warning 1: GRASS warning: GISBASE
> environment variable was not set, using: /usr/local/grass-7.0.4svn
> Driver: GRASS/GRASS Rasters (5.7+)

If you had GRASS support as a plugin of GDAL 1.11 installed in 
/usr/local/share/gdalplugins, I guess this messages comes from the plugin when 
GDAL 2.1 tries to load it.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Blumentrath at nina.no  Mon Apr 11 01:26:50 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Mon, 11 Apr 2016 08:26:50 +0000
Subject: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4
In-Reply-To: <201604111001.00987.even.rouault@spatialys.com>
References: <a333b9a2df074225b7d1b8b72a9c4309@NINSRV23.nina.no>
 <c95540806b324e9db3cc534a352f627f@NINSRV23.nina.no>
 <a25bd100d48b4b6b8edd0f7dc7029e15@NINSRV23.nina.no>
 <201604111001.00987.even.rouault@spatialys.com>
Message-ID: <f58f43f5c02e436a97855842dd5d9032@NINSRV23.nina.no>

Thanks for your swift reply! That was it.
Error messages gone and all fine now!
Thanks!

Kind regards,
Stefan

-----Original Message-----
From: Even Rouault [mailto:even.rouault at spatialys.com] 
Sent: 11. april 2016 10:01
To: Blumentrath, Stefan <Stefan.Blumentrath at nina.no>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL 2.1 Beta and GRASS 7.0.4

Le lundi 11 avril 2016 09:13:06, Blumentrath, Stefan a écrit :
> Hi again,
> 
> One more question:
> 
> Before I installed GDAL 2.1 with GRASS 7.0.4svn support I ran GDAL 
> 1.11 compiled against GRASS 7.0.2.
> 
> Now I get on every GDAL command this: error message:
> ERROR 1: libgrass_gis.7.0.2svn.so: cannot open shared object file: No 
> such file or directory ERROR 1: libgrass_gis.7.0.2svn.so: cannot open 
> shared object file: No such file or directory ERROR 1:
> libgrass_raster.7.0.2svn.so: cannot open shared object file: No such 
> file or directory ERROR 1: libgrass_raster.7.0.2svn.so: cannot open 
> shared object file: No such file or directory Warning 1: GRASS 
> warning: GISBASE environment variable was not set, using: 
> /usr/local/grass-7.0.4svn
> Driver: GRASS/GRASS Rasters (5.7+)

If you had GRASS support as a plugin of GDAL 1.11 installed in /usr/local/share/gdalplugins, I guess this messages comes from the plugin when GDAL 2.1 tries to load it.

--
Spatialys - Geospatial professional services http://www.spatialys.com

From alexhighviz at hotmail.com  Mon Apr 11 09:30:20 2016
From: alexhighviz at hotmail.com (alex)
Date: Mon, 11 Apr 2016 17:30:20 +0100
Subject: [gdal-dev] Map algebra
In-Reply-To: <570A0CB0.3060600@gmail.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
 <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
 <570A0CB0.3060600@gmail.com>
Message-ID: <DUB117-DS1368A39D647BFCCE6C90F4B4940@phx.gbl>



>-----Original Message-----
>From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Ari
>Jolma
>Sent: 10 April 2016 09:20
>To: gdal-dev at lists.osgeo.org
>Subject: Re: [gdal-dev] Map algebra
>
>08.04.2016, 19:28, Gregory, Matthew kirjoitti:
>> I would want any map algebra library to handle three types of issues when
>dealing with raster data:
>>
>>    1) Handling mask or nodata values (e.g. an analysis mask should be
>>       able to be set on any algebra operation that retains or combines
>>       nodata values from its component operands)
>
>GDAL supports nodata values and mask bands to identify cells that do not
>contain valid data. In arithmetics I think it is straightforward that  x
>+ nodata = nodata. In logical operations it depends on the
>interpretation of nodata. If it means unknown, then we are dealing with
>three-valued logics where for example unknown OR true = true. Think
>about for example a raster which shows polluted areas as a result of two
>studies (true, false, unknown). If one study shows a site polluted and
>the other has no data, then the result should be that the site is polluted.
>
>I haven't yet got to the point in my code where I look at nodata and
>mask bands.
>
>>
>>    2) Handling different spatial extents (e.g. the ability to specify
>>       an output extent -- coming from a specific raster or from the
>>       union/intersection of rasters)
>
>This may be desirable in some cases. For example if we have a huge
>raster and want to study some parts of it. In general I would, however,
>leave this for other already existing GDAL tools, especially
>gdal_translate, whose functionality is available in APIs as well.
>
>>
>>    3) Handling different cell sizes (e.g. the ability to specify an
>>       analysis cell size and resample/reproject(??) all operands based
>>       on this parameter)
>
>I think using gdal_translate in this case as a first step makes even
>more sense.
>
>Alex asked about how I iterate over blocks when there are two or more
>bands involved. The basic idea is that all methods operate on one band,
>and other bands (in my case if there is a second band) are adjusted to
>that. The algorithm is the following. "band" is a wrapper (struct) for a
>GDALRasterBand object and block cache. A block cache is simply an array
>of pointers to data, which are obtained from the GDALRasterBand object
>with ReadBlock() and which may be written back with WriteBlock().
>
>band1 = gma_band_initialize(b1);
>band2 = gma_band_initialize(b2);
>
>while (iterate) {
>
>         block_index i;
>         for (i = blocks in band1) {
>
>                 add block i to cache in band1;
>                 block1 = get block i from band1;
>
>                 update cache in band1 to allow desired focal distance;
>                 update cache in band2 to allow desired focal distance;
>
>                 call method specific callback with (band1, block1,
>band2, retval, arg);
>                 make a note if the callback indicates a need for iteration;
>
>                 based on the return value from the callback
>
>                     return with error,
>                     continue with next block from band1, or
>                     write block1 to band1 and continue with next block
>from band1;
>
>             }
>         }
>         if iteration, then in some cases some band level things need to
>be done;
>     }
>     empty cache in band1;
>     empty cache in band2;
>}
>

OK, thanks I get the general picture now. 


>The cache update function reads all needed blocks into the cache and
>discards those that are not needed. If there were no discards, the cache
>would eventually contain the whole band.
>
>In the method callback values from the band2 are obtained by first
>computing the global cell index and then the respective block and cell
>index within the block.
>
>This may not be the best possible algorithm but to me it is pretty
>understandable, which is a goal in itself.
>
>The code is at
>
>https://github.com/ajolma/gdal/tree/trunk/gdal/map_algebra
>
>The curse of dimensionality comes in at the point, where the above
>function is called. The method callback is a template function and it
>needs the datatype of each band that is given to it as an argument. (I
>see now that I have made also the above function a template function,
>which may not be needed).
>

In the end, all you need to do that is type specific is to apply the function on the pixel (at least in many cases). Would it be an option to only make the pixel level function a template, rather than the block level function? 

>Best,
>
>Ari
>
>_______________________________________________
>gdal-dev mailing list
>gdal-dev at lists.osgeo.org
>http://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Mon Apr 11 11:12:34 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Apr 2016 20:12:34 +0200
Subject: [gdal-dev] Branch 2.1 has been created
Message-ID: <201604112012.34483.even.rouault@spatialys.com>

Hi,

To allow trunk development to go on, I've branched branches/2.1 from trunk. 
Any bugfix that should go to 2.1.0 should go to both branches.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ari.jolma at gmail.com  Mon Apr 11 23:10:17 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 12 Apr 2016 09:10:17 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <DUB117-DS1368A39D647BFCCE6C90F4B4940@phx.gbl>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
 <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
 <570A0CB0.3060600@gmail.com> <DUB117-DS1368A39D647BFCCE6C90F4B4940@phx.gbl>
Message-ID: <570C9149.4000808@gmail.com>


11.04.2016, 19:30, alex kirjoitti:
>
> The curse of dimensionality comes in at the point, where the above
> function is called. The method callback is a template function and it
> needs the datatype of each band that is given to it as an argument. (I
> see now that I have made also the above function a template function,
> which may not be needed).
>
> In the end, all you need to do that is type specific is to apply the function on the pixel (at least in many cases). Would it be an option to only make the pixel level function a template, rather than the block level function?

The block-level function is repeated for all methods mainly because 
there are a couple of things that would cause an unnecessary overhead if 
called at each pixel. First, the method return value, if any, is 
initialized at the first call. Second, if the method needs to iterate 
over the whole band several times, that requires initialization etc. 
which is best done at block level (at the beginning of a first and at 
the end of a last block).

Also the pixel level operation should be as fast as possible and thus a 
function call in itself would cause overhead - however, using inline 
function might help.

Ari


From alexhighviz at hotmail.com  Tue Apr 12 02:47:27 2016
From: alexhighviz at hotmail.com (alex)
Date: Tue, 12 Apr 2016 10:47:27 +0100
Subject: [gdal-dev] Map algebra
In-Reply-To: <570C9149.4000808@gmail.com>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
 <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
 <570A0CB0.3060600@gmail.com> <DUB117-DS1368A39D647BFCCE6C90F4B4940@phx.gbl>
 <570C9149.4000808@gmail.com>
Message-ID: <DUB117-DS1C6C859EEB17F25ACF441B4950@phx.gbl>



>-----Original Message-----
>From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Ari
>Jolma
>Sent: 12 April 2016 07:10
>To: gdal-dev at lists.osgeo.org
>Subject: Re: [gdal-dev] Map algebra
>
>
>11.04.2016, 19:30, alex kirjoitti:
>>
>> The curse of dimensionality comes in at the point, where the above
>> function is called. The method callback is a template function and it
>> needs the datatype of each band that is given to it as an argument. (I
>> see now that I have made also the above function a template function,
>> which may not be needed).
>>
>> In the end, all you need to do that is type specific is to apply the function on
>the pixel (at least in many cases). Would it be an option to only make the pixel
>level function a template, rather than the block level function?
>
>The block-level function is repeated for all methods mainly because
>there are a couple of things that would cause an unnecessary overhead if
>called at each pixel. First, the method return value, if any, is
>initialized at the first call. Second, if the method needs to iterate
>over the whole band several times, that requires initialization etc.
>which is best done at block level (at the beginning of a first and at
>the end of a last block).

I wasn't trying to suggest to do away with the block level stuff, I can see how it makes your code efficient (and more efficient than the row-by-row iteration that I am using). However, I did notice that for many functions this part of the code is generic and does not rely on the template type. 

>Also the pixel level operation should be as fast as possible and thus a
>function call in itself would cause overhead - however, using inline
>function might help.

Ok, if pixel-level functions are off the table then I give up. To me one of the major aims of a Map Algebra library would be to make it easy to apply pixel-level functions on raster data (along with other aims to support focal, zonal and global operations). 

>Ari
>


From ari.jolma at gmail.com  Tue Apr 12 04:06:30 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 12 Apr 2016 14:06:30 +0300
Subject: [gdal-dev] Map algebra
In-Reply-To: <DUB117-DS1C6C859EEB17F25ACF441B4950@phx.gbl>
References: <56EE5D96.8060808@gmail.com> <56FE3398.3070006@gmail.com>
 <DUB117-DS41725CCDD21A33847D9BE6B4900@phx.gbl>
 <7C48E40C135D314BA03D6471A6E38978BCBA3E56@EX1.oregonstate.edu>
 <570A0CB0.3060600@gmail.com> <DUB117-DS1368A39D647BFCCE6C90F4B4940@phx.gbl>
 <570C9149.4000808@gmail.com> <DUB117-DS1C6C859EEB17F25ACF441B4950@phx.gbl>
Message-ID: <570CD6B6.2020400@gmail.com>

12.04.2016, 12:47, alex kirjoitti:
>
> I wasn't trying to suggest to do away with the block level stuff, I can see how it makes your code efficient (and more efficient than the row-by-row iteration that I am using). However, I did notice that for many functions this part of the code is generic and does not rely on the template type.

ok, I'll look into that. It would be good if the size of the binaries 
could be smaller.

>
>> Also the pixel level operation should be as fast as possible and thus a
>> function call in itself would cause overhead - however, using inline
>> function might help.
> Ok, if pixel-level functions are off the table then I give up. To me one of the major aims of a Map Algebra library would be to make it easy to apply pixel-level functions on raster data (along with other aims to support focal, zonal and global operations).

I have the "cell callback" method, which is intended for user specified 
arbitrary functions on each pixel. For example in the test.cpp there is 
a callback, which sets the cell value to be the distance from 0,0:

int callback(gma_cell_t *cell) {
     // set cell value = distance from 0,0
     double x = cell->x();
     double y = cell->y();
     double d = sqrt(x*x+y*y);
     cell->set_value(d);
     return 2;
}

Ari

>
>> Ari
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From luis.de.sousa at protonmail.ch  Tue Apr 12 06:13:31 2016
From: luis.de.sousa at protonmail.ch (=?UTF-8?Q?Lu=C3=AD=C2=ADs_de_Sousa?=)
Date: Tue, 12 Apr 2016 09:13:31 -0400
Subject: [gdal-dev] How to add GDAL as a dependency to a Python package?
Message-ID: <_bW1i9yEIbeyXTPD-16Qa-R9xMkhuv5Cf0gMh7SqEVljmPtR_-I_9Y4jiTDQbhqJruTl7gp1UKg-8qvyJkIlrQ==@protonmail.ch>

Dear all,


I am trying to package a Python script that uses GDAL for PyPI. I started by including a direct reference in my setup.py:


install_requires=['GDAL==1.11.2'],


This way the package failed to install in my test virtual environment:

extensions/gdal_wrap.cpp:2855:22: fatal error: cpl_port.h: No such file or directory #include "cpl_port.h" ^ compilation terminated. error: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1

I then tried it with a reference to pygdal, since it is marked as a virtualenv friendly version:


install_requires=['pygdal'],


This way the installation finishes without errors (but with the usual load of compilation warnings). However, when then I invoke the script I get this error back:

Traceback (most recent call last): File "/home/desouslu/.virtualenvs/test_p3/bin/hasc2gml", line 5, in <module> from pkg_resources import load_entry_point File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 2716, in <module> working_set.require(__requires__) File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 685, in require needed = self.resolve(parse_requirements(requirements)) File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 588, in resolve raise DistributionNotFound(req) pkg_resources.DistributionNotFound: pygdal

What is the correct way of setting GDAL as a dependency?


Thank you,

Luís

Sent from [ProtonMail](https://protonmail.ch), encrypted email based in Switzerland.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160412/4dab33ec/attachment.html>

From luis.de.sousa at protonmail.ch  Tue Apr 12 06:30:05 2016
From: luis.de.sousa at protonmail.ch (=?UTF-8?Q?Lu=C3=AD=C2=ADs_de_Sousa?=)
Date: Tue, 12 Apr 2016 09:30:05 -0400
Subject: [gdal-dev] How to add GDAL as a dependency to a Python package?
In-Reply-To: <CO2PR05MB71641A56D67D2BE4ECFB15887950@CO2PR05MB716.namprd05.prod.outlook.com>
References: <_bW1i9yEIbeyXTPD-16Qa-R9xMkhuv5Cf0gMh7SqEVljmPtR_-I_9Y4jiTDQbhqJruTl7gp1UKg-8qvyJkIlrQ==@protonmail.ch>
 <CO2PR05MB71641A56D67D2BE4ECFB15887950@CO2PR05MB716.namprd05.prod.outlook.com>
Message-ID: <5zp_-O1weCgTnkfCXws97LLzdR0mFcGCknytNeH6h8RDlLF0Z_3WiAposYaAe27y6VLNYObzxuUty73iJ_cnIQ==@protonmail.ch>

Thanks for the reply Jason.

I gather "they" refers to whomever I need to contact about this issue. Who are "they" then?

Luís

Sent from [ProtonMail](https://protonmail.ch), encrypted email based in Switzerland.



-------- Original Message --------
Subject: RE: [gdal-dev] How to add GDAL as a dependency to a Python package?
Local Time: April 12, 2016 3:25 PM
UTC Time: April 12, 2016 1:25 PM
From: jason.roberts at duke.edu
To: luis.de.sousa at protonmail.ch



Thanks for asking this. I have been wondering about it for a while but have not gotten around to asking it. I’m not sure they currently have a good solution for this for all platforms.





Jason


[ ]



From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Luí­s de Sousa
Sent: Tuesday, April 12, 2016 9:14 AM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] How to add GDAL as a dependency to a Python package?




Dear all,







I am trying to package a Python script that uses GDAL for PyPI. I started by including a direct reference in my setup.py:


install_requires=['GDAL==1.11.2'],


This way the package failed to install in my test virtual environment:

extensions/gdal_wrap.cpp:2855:22: fatal error: cpl_port.h: No such file or directory
#include "cpl_port.h"
^
compilation terminated.
error: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1

I then tried it with a reference to pygdal, since it is marked as a virtualenv friendly version:


install_requires=['pygdal'],


This way the installation finishes without errors (but with the usual load of compilation warnings). However, when then I invoke the script I get this error back:

Traceback (most recent call last):
File "/home/desouslu/.virtualenvs/test_p3/bin/hasc2gml", line 5, in <module>
from pkg_resources import load_entry_point
File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 2716, in <module>
working_set.require(__requires__)
File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 685, in require
needed = self.resolve(parse_requirements(requirements))
File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 588, in resolve
raise DistributionNotFound(req)
pkg_resources.DistributionNotFound: pygdal

What is the correct way of setting GDAL as a dependency?



Thank you,







Luís







Sent from [ProtonMail](https://protonmail.ch), encrypted email based in Switzerland.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160412/ae54d913/attachment-0001.html>

From jason.roberts at duke.edu  Tue Apr 12 06:34:02 2016
From: jason.roberts at duke.edu (Jason Roberts)
Date: Tue, 12 Apr 2016 13:34:02 +0000
Subject: [gdal-dev] How to add GDAL as a dependency to a Python package?
In-Reply-To: <5zp_-O1weCgTnkfCXws97LLzdR0mFcGCknytNeH6h8RDlLF0Z_3WiAposYaAe27y6VLNYObzxuUty73iJ_cnIQ==@protonmail.ch>
References: <_bW1i9yEIbeyXTPD-16Qa-R9xMkhuv5Cf0gMh7SqEVljmPtR_-I_9Y4jiTDQbhqJruTl7gp1UKg-8qvyJkIlrQ==@protonmail.ch>
 <CO2PR05MB71641A56D67D2BE4ECFB15887950@CO2PR05MB716.namprd05.prod.outlook.com>
 <5zp_-O1weCgTnkfCXws97LLzdR0mFcGCknytNeH6h8RDlLF0Z_3WiAposYaAe27y6VLNYObzxuUty73iJ_cnIQ==@protonmail.ch>
Message-ID: <CO2PR05MB71663F0309D684A28D3390B87950@CO2PR05MB716.namprd05.prod.outlook.com>

Luís,

gdal-dev is the correct list. By “they”, I mean the maintainers of GDAL’s Python bindings; AFAIK they all follow gdal-dev.

Best,
Jason

From: Luí­s de Sousa [mailto:luis.de.sousa at protonmail.ch]
Sent: Tuesday, April 12, 2016 9:30 AM
To: Jason Roberts <jason.roberts at duke.edu>; gdal-dev at lists.osgeo.org
Subject: RE: [gdal-dev] How to add GDAL as a dependency to a Python package?

Thanks for the reply Jason.

I gather "they" refers to whomever I need to contact about this issue. Who are "they" then?

Luís

Sent from ProtonMail<https://protonmail.ch>, encrypted email based in Switzerland.


-------- Original Message --------
Subject: RE: [gdal-dev] How to add GDAL as a dependency to a Python package?
Local Time: April 12, 2016 3:25 PM
UTC Time: April 12, 2016 1:25 PM
From: jason.roberts at duke.edu<mailto:jason.roberts at duke.edu>
To: luis.de.sousa at protonmail.ch<mailto:luis.de.sousa at protonmail.ch>


Thanks for asking this. I have been wondering about it for a while but have not gotten around to asking it. I’m not sure they currently have a good solution for this for all platforms.

Jason


From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Luí­s de Sousa
Sent: Tuesday, April 12, 2016 9:14 AM
To: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] How to add GDAL as a dependency to a Python package?

Dear all,


I am trying to package a Python script that uses GDAL for PyPI. I started by including a direct reference in my setup.py:

install_requires=['GDAL==1.11.2'],

This way the package failed to install in my test virtual environment:

extensions/gdal_wrap.cpp:2855:22: fatal error: cpl_port.h: No such file or directory

#include "cpl_port.h"

                      ^

compilation terminated.

error: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1

I then tried it with a reference to pygdal, since it is marked as a virtualenv friendly version:

install_requires=['pygdal'],

This way the installation finishes without errors (but with the usual load of compilation warnings). However, when then I invoke the script I get this error back:

Traceback (most recent call last):

  File "/home/desouslu/.virtualenvs/test_p3/bin/hasc2gml", line 5, in <module>

    from pkg_resources import load_entry_point

  File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 2716, in <module>

    working_set.require(__requires__)

  File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 685, in require

    needed = self.resolve(parse_requirements(requirements))

  File "/home/desouslu/.virtualenvs/test_p3/lib/python3.4/site-packages/pkg_resources.py", line 588, in resolve

    raise DistributionNotFound(req)

pkg_resources.DistributionNotFound: pygdal

What is the correct way of setting GDAL as a dependency?
Thank you,

Luís

Sent from ProtonMail<https://protonmail.ch>, encrypted email based in Switzerland.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160412/f3931de9/attachment-0001.html>

From jamessramm at gmail.com  Tue Apr 12 08:10:41 2016
From: jamessramm at gmail.com (jramm)
Date: Tue, 12 Apr 2016 08:10:41 -0700 (PDT)
Subject: [gdal-dev] How to consider data types when implementing IWriteBlock
Message-ID: <1460473841374-5260901.post@n6.nabble.com>

Hi
I am adding write support for the Northwood Grid (Vertical Mapper/MapInfo
format) driver. 
This format only allows 32 bit float as the datatype, and to make things
more tricky it actually stores this on disk as either 16 or 32 bit ints,
using scaling rules.

The current read driver applies the scaling to each pixel when reading, to
return a buffer of 32 bit floats and I look to do the reverse when writing. 

When implementing `WriteBlock`, is it OK to assume that pImage will always
be of the correct type? (float 32). I've noticed in debugging using
gdal_translate that if I dont specify the output data type, it carries on
and passes the source buffer (which is not float 32) to IWriteBlock of the
destination. 

Given that only allowing 32bit floats is quite restrictive, should I:

- raise an error in the `Create` method if the data type isnt GDT_Float32
- Attempt to handle all gdal data type in IWriteBlock by storing the user
requested data type in some variable (poDS->eUserDataType) and then using
GDALCopyWords within IWriteBlock to first copy pImage to a buffer of 32 bit
floats before proceeding?

Thanks




--
View this message in context: http://osgeo-org.1560.x6.nabble.com/How-to-consider-data-types-when-implementing-IWriteBlock-tp5260901.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From Richard.Bischof at lgln.niedersachsen.de  Tue Apr 12 08:20:08 2016
From: Richard.Bischof at lgln.niedersachsen.de (Bischof, Richard)
Date: Tue, 12 Apr 2016 15:20:08 +0000
Subject: [gdal-dev] Rectify TIFF: Difference between applied GCP and warped
	image
Message-ID: <E921652A87CECB488EC72D3ABE4103CF3A5C80@LV-MX-12102.LV.ads.niedersachsen.de>

Hello there,

I`m trying to rectify a lots of dataset in tiff format using gdal. I'am using Windows 7 Professional, gdal 1.11.2 .

My steps / commands are:

1) Apply the GCP's using gdal_translate
gdal_translate -of GTiff -gcp 5734.32993305 4261.44895879 611521.018414 5787817.29357 -gcp 572.485136268 3616.16282333 612191.853158 5789322.98631 -gcp 938.059974162 5259.97607362 611658.464864 5789364.12734 -gcp 399.270774586 4637.53045143 611897.913259 5789465.33066 -gcp 175.9077093 3518.3785654 612261.413077 5789435.00343 -gcp 65.1081071915 1318.06325259 612926.481389 5789252.39979 -gcp 2058.05461478 861.869252792 612872.84906 5788621.71163 -gcp 3197.85958388 934.608945675 612747.965477 5788289.12972 -gcp 4888.93938213 1463.60781341 612426.762337 5787815.07664 -gcp 5126.7206471 3450.97792497 611812.932465 5787930.73745 -gcp 4165.58848947 4831.95198662 611488.508427 5788352.14431 -gcp 1596.03095142 4691.55418917 611766.991386 5789112.70647 -gcp 2611.86113409 5865.48875961 611315.082149 5788919.03108 -gcp 1753.54106193 2650.51125969 612364.509943 5788875.28655 -gcp 3623.30422048 166.767269129 612934.192512 5788086.76226 -gcp 3033.49120733 4610.79484584 611663.462367 5788668.84676  F:\Projekt\gross\106300.tif D:/temp.tif

2) Warp the image using gdalwarp
gdalwarp -multi -wm 4000 -overwrite -r bilinear -order 2 -co COMPRESS=NONE -co TFW=YES -co TILED=YES  D:/temp.tif D:\GDAL\106300.tif

My problem is, that the output dataset from the second step is not what I expected. It is warped different, than ArcMap is showing me, when I load the output dataset from the first step. (Including the gcp).

What am I missing in my gdalwarp command?

Thank you!

Mit freundlichen Grüßen
Richard Bischof

Landesamt für Geoinformation und Landesvermessung Niedersachsen (LGLN)
- Regionaldirektion Hameln-Hannover -
Dezernat 2 - Geodatenmanagement
Constantinstraße 40, 30177 Hannover
Tel.:	 +49 511 30245-314
Fax:	 +49 511 30245-360
mailto:richard.bischof at lgln.niedersachsen.de
www.lgln.de/rd-hm



From jukka.rahkonen at maanmittauslaitos.fi  Tue Apr 12 10:34:19 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Tue, 12 Apr 2016 17:34:19 +0000 (UTC)
Subject: [gdal-dev]
	=?utf-8?q?Rectify_TIFF=3A_Difference_between_applied_G?=
	=?utf-8?q?CP_and_warped=09image?=
References: <E921652A87CECB488EC72D3ABE4103CF3A5C80@LV-MX-12102.LV.ads.niedersachsen.de>
Message-ID: <loom.20160412T192842-832@post.gmane.org>

Bischof, Richard <Richard.Bischof <at> lgln.niedersachsen.de> writes:

> 
> Hello there,
> 
> I`m trying to rectify a lots of dataset in tiff format using gdal. I'am
using Windows 7 Professional, gdal
> 1.11.2 .
> 
> My steps / commands are:
> 
...
SNIP
...

> F:\Projekt\gross\106300.tif D:/temp.tif
> 
> 2) Warp the image using gdalwarp
> gdalwarp -multi -wm 4000 -overwrite -r bilinear -order 2 -co COMPRESS=NONE
-co TFW=YES -co TILED=YES 
> D:/temp.tif D:\GDAL\106300.tif
> 
> My problem is, that the output dataset from the second step is not what I
expected. It is warped different,
> than ArcMap is showing me, when I load the output dataset from the first
step. (Including the gcp).
> 
> What am I missing in my gdalwarp command?

Do you mean that ArcMap is doing on-the-fly warping by the ground control
points? Do you know which warping method it is applying then? If it is using
2nd order polynomial then the results should be close your result after the
second step, if something else then not necessarily. Can you warp the image
physically with ArcMap so that you force it to use the 2nd order polynomial?

-Jukka Rahkonen-
 
> Thank you!
> 
> Mit freundlichen Grüßen
> Richard Bischof
> 
> Landesamt für Geoinformation und Landesvermessung Niedersachsen (LGLN)
> - Regionaldirektion Hameln-Hannover -
> Dezernat 2 - Geodatenmanagement
> Constantinstraße 40, 30177 Hannover
> Tel.:	 +49 511 30245-314
> Fax:	 +49 511 30245-360
> mailto:richard.bischof <at> lgln.niedersachsen.de
> www.lgln.de/rd-hm
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev <at> lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev



From even.rouault at spatialys.com  Tue Apr 12 11:01:13 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Apr 2016 20:01:13 +0200
Subject: [gdal-dev] How to consider data types when implementing
	IWriteBlock
In-Reply-To: <1460473841374-5260901.post@n6.nabble.com>
References: <1460473841374-5260901.post@n6.nabble.com>
Message-ID: <201604122001.13821.even.rouault@spatialys.com>

Le mardi 12 avril 2016 17:10:41, jramm a écrit :
> Hi
> I am adding write support for the Northwood Grid (Vertical Mapper/MapInfo
> format) driver.
> This format only allows 32 bit float as the datatype, and to make things
> more tricky it actually stores this on disk as either 16 or 32 bit ints,
> using scaling rules.
> 
> The current read driver applies the scaling to each pixel when reading, to
> return a buffer of 32 bit floats and I look to do the reverse when writing.
> 
> When implementing `WriteBlock`, is it OK to assume that pImage will always
> be of the correct type? (float 32).

Yes. The generic implementation of GDALRasterBand::IRasterIO() in 
gcore/rasterio.cpp will do type translation so that the user provided buffer 
gets translated to the eDataType of the target band.

> I've noticed in debugging using
> gdal_translate that if I dont specify the output data type, it carries on
> and passes the source buffer (which is not float 32) to IWriteBlock of the
> destination.

That would be surprising given what I said above.

> 
> Given that only allowing 32bit floats is quite restrictive, should I:
> 
> - raise an error in the `Create` method if the data type isnt GDT_Float32

Yes, that's reasonable. A possibility if you want to be more tolerant would be 
to implement CreateCopy() and acquire the data of the input dataset as 
Float32. Very very rough pseudo code :

output = Create( Float32 )
for line in lines:
	input->RasterIO( GF_Read, line, Float32, buffer )
	output->RasterIO( GF_Write, line, Float32, buffer )
// recopy geotransform and projection as well if supported

Actually as this is really generic stuff mostly implemented in 
GDALDriver::DefaultCreateCopy(), it would be nice to have it accept an 
optional argument to force the output data type.

> - Attempt to handle all gdal data type in IWriteBlock by storing the user
> requested data type in some variable (poDS->eUserDataType) and then using
> GDALCopyWords within IWriteBlock to first copy pImage to a buffer of 32 bit
> floats before proceeding?

No, if you really wanted to support several input data types, you should set 
the user requested data type in the band eDataType, so that IRasterIO() can do 
proper data type conversion.

> 
> Thanks
> 
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/How-to-consider-data-types-when-implem
> enting-IWriteBlock-tp5260901.html Sent from the GDAL - Dev mailing list
> archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Apr 12 11:58:04 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Apr 2016 20:58:04 +0200
Subject: [gdal-dev] Bad Date Handling
In-Reply-To: <201604052109.01429.even.rouault@spatialys.com>
References: <CACowWR07mOLQtpwx=Wfi0uYyFnP229LomGX-97y76kZBN8ORvw@mail.gmail.com>
 <201604052109.01429.even.rouault@spatialys.com>
Message-ID: <201604122058.04607.even.rouault@spatialys.com>

Le mardi 05 avril 2016 21:09:01, Even Rouault a écrit :
> Le mardi 05 avril 2016 20:56:07, Paul Ramsey a écrit :
> > Hey all,
> > 
> > We've had a client working with dodgy data who would like an option to
> > avoid incompatible date mangling when reading bad data. Basically, OGR
> > will consume some funky dates from CSV and Excel, like 0000/00/00, but
> > it will NULL out others, like 1971/34/34. The net result is that, when
> > the data are written out to PgSQL, is some null values, and other
> > values that get converted to things PgSQL cannot consume (0000/00/00
> > becomes 2000/00/00 and PgSQL then errors out on that).
> > They'd like to just coerce *all* invalid dates to NULL,
> > 
> > I've done a small patch that does that, in the presence of a config
> > flag, any thoughts on if it's acceptable?
> 
> Paul,
> 
> Why not rather improving the datetime parser to reject invalid dates like
> 0000/00/00 ? In OGRParseDate() in ogr/ogrutils.cpp. That way that would
> solve the issue not only for Postgres output, but for all other drivers.

FYI, a different issue but with same root cause has been just reported as 
https://trac.osgeo.org/gdal/ticket/6452 , which I've fixed.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From luis.de.sousa at protonmail.ch  Tue Apr 12 23:51:18 2016
From: luis.de.sousa at protonmail.ch (=?UTF-8?Q?Lu=C3=AD=C2=ADs_de_Sousa?=)
Date: Wed, 13 Apr 2016 02:51:18 -0400
Subject: [gdal-dev] How to add GDAL as a dependency to a Python package?
In-Reply-To: <CO2PR05MB71663F0309D684A28D3390B87950@CO2PR05MB716.namprd05.prod.outlook.com>
References: <_bW1i9yEIbeyXTPD-16Qa-R9xMkhuv5Cf0gMh7SqEVljmPtR_-I_9Y4jiTDQbhqJruTl7gp1UKg-8qvyJkIlrQ==@protonmail.ch>
 <CO2PR05MB71641A56D67D2BE4ECFB15887950@CO2PR05MB716.namprd05.prod.outlook.com>
 <5zp_-O1weCgTnkfCXws97LLzdR0mFcGCknytNeH6h8RDlLF0Z_3WiAposYaAe27y6VLNYObzxuUty73iJ_cnIQ==@protonmail.ch>
 <CO2PR05MB71663F0309D684A28D3390B87950@CO2PR05MB716.namprd05.prod.outlook.com>
Message-ID: <CFRLsWWi8HV4kF2aMrTCPicvbi8f3e_wjjfNvy5uuWU8T_JambIiJy2ZOBihXo0DHKmFo9Vdl-iOjYdtOzNERg==@protonmail.ch>

Hello again,

Still investigating this subject, I tried today to directly install pygal from PiPY and it fails [0]. I believe the dependency is correctly declared but that something is wrong with pygal package.

Cheers,

Luís
[0] http://pastebin.com/gzrimLvB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160413/44464824/attachment.html>

From Richard.Bischof at lgln.niedersachsen.de  Wed Apr 13 00:31:26 2016
From: Richard.Bischof at lgln.niedersachsen.de (Bischof, Richard)
Date: Wed, 13 Apr 2016 07:31:26 +0000
Subject: [gdal-dev] Rectify TIFF: Difference between applied GCP and
 warped	image
In-Reply-To: <LV-MX-00014bAMePmQG00060a10@LV-MX-00014.LV.ads.niedersachsen.de>
References: <E921652A87CECB488EC72D3ABE4103CF3A5C80@LV-MX-12102.LV.ads.niedersachsen.de>
 <LV-MX-00014bAMePmQG00060a10@LV-MX-00014.LV.ads.niedersachsen.de>
Message-ID: <E921652A87CECB488EC72D3ABE4103CF3B86E8@LV-MX-12102.LV.ads.niedersachsen.de>

Hi Jukka,

you're correct. ArcMap is doing the on-the-fly transformation with the dataset, I applied the gcps using gdal_translate to.
With both gdal_warp and ArcMap Rectify I use second order polynomial.

I also found, that some areas of my source image are cut out from the gdal_warp destination dataset.

Here are my gdalinfos to the files:

Input Dataset with gcp:
Driver: GTiff/GeoTIFF
Files: gdal_translate.tif
Size is 6132, 5940
Coordinate System is `'
GCP Projection = 
GCP[  0]: Id=1, Info=
          (5734.32993305,4261.44895879) -> (611521.018414,5787817.29357,0)
GCP[  1]: Id=2, Info=
          (572.485136268,3616.16282333) -> (612191.853158,5789322.98631,0)
GCP[  2]: Id=3, Info=
          (938.059974162,5259.97607362) -> (611658.464864,5789364.12734,0)
GCP[  3]: Id=4, Info=
          (399.270774586,4637.53045143) -> (611897.913259,5789465.33066,0)
GCP[  4]: Id=5, Info=
          (175.9077093,3518.3785654) -> (612261.413077,5789435.00343,0)
GCP[  5]: Id=6, Info=
          (65.1081071915,1318.06325259) -> (612926.481389,5789252.39979,0)
GCP[  6]: Id=7, Info=
          (2058.05461478,861.869252792) -> (612872.84906,5788621.71163,0)
GCP[  7]: Id=8, Info=
          (3197.85958388,934.608945675) -> (612747.965477,5788289.12972,0)
GCP[  8]: Id=9, Info=
          (4888.93938213,1463.60781341) -> (612426.762337,5787815.07664,0)
GCP[  9]: Id=10, Info=
          (5126.7206471,3450.97792497) -> (611812.932465,5787930.73745,0)
GCP[ 10]: Id=11, Info=
          (4165.58848947,4831.95198662) -> (611488.508427,5788352.14431,0)
GCP[ 11]: Id=12, Info=
          (1596.03095142,4691.55418917) -> (611766.991386,5789112.70647,0)
GCP[ 12]: Id=13, Info=
          (2611.86113409,5865.48875961) -> (611315.082149,5788919.03108,0)
GCP[ 13]: Id=14, Info=
          (1753.54106193,2650.51125969) -> (612364.509943,5788875.28655,0)
GCP[ 14]: Id=15, Info=
          (3623.30422048,166.767269129) -> (612934.192512,5788086.76226,0)
GCP[ 15]: Id=16, Info=
          (3033.49120733,4610.79484584) -> (611663.462367,5788668.84676,0)
Metadata:
  COLORSPACE=GREYSCALE
  COMPRESSION_RATE_TARGET=1
  VERSION=2
Image Structure Metadata:
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0, 5940.0)
Upper Right ( 6132.0,    0.0)
Lower Right ( 6132.0, 5940.0)
Center      ( 3066.0, 2970.0)
Band 1 Block=6132x1 Type=Byte, ColorInterp=Gray
  Description = Grayscale
  Metadata:
    DESCRIPTION=Grayscale

Output gdal_warp:

Driver: GTiff/GeoTIFF
Files: gdal_translate-gdal_warp.tif
       gdal_translate-gdal_warp.tfw
Size is 7464, 7627
Coordinate System is `'
Origin = (610977.126584137670000,5789708.876662718100000)
Pixel Size = (0.314972716042089,-0.314972716042089)
Metadata:
  COLORSPACE=GREYSCALE
  COMPRESSION_RATE_TARGET=1
  VERSION=2
Image Structure Metadata:
  COMPRESSION=LZW
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  (  610977.127, 5789708.877) 
Lower Left  (  610977.127, 5787306.580) 
Upper Right (  613328.083, 5789708.877) 
Lower Right (  613328.083, 5787306.580) 
Center      (  612152.605, 5788507.728) 
Band 1 Block=256x256 Type=Byte, ColorInterp=Gray
  Description = Grayscale
  Metadata:
    DESCRIPTION=Grayscale

Output ArcMap:
Driver: GTiff/GeoTIFF
Files: gdal_translate-arcmap_rectify.tif
       gdal_translate-arcmap_rectify.tif.ovr
       gdal_translate-arcmap_rectify.tfw
       gdal_translate-arcmap_rectify.tif.aux.xml
Size is 5969, 6098
Coordinate System is `'
Origin = (610973.234545126210000,5789712.967471394700000)
Pixel Size = (0.395246999999997,-0.395247000000031)
Image Structure Metadata:
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  (  610973.235, 5789712.967) 
Lower Left  (  610973.235, 5787302.751) 
Upper Right (  613332.464, 5789712.967) 
Lower Right (  613332.464, 5787302.751) 
Center      (  612152.849, 5788507.859) 
Band 1 Block=128x128 Type=Byte, ColorInterp=Gray
  Min=0.000 Max=240.000 
  Minimum=0.000, Maximum=240.000, Mean=98.616, StdDev=85.272
  NoData Value=256
  Overviews: 2985x3049, 1493x1525, 747x763, 374x382, 187x191
  Metadata:
    STATISTICS_MAXIMUM=240
    STATISTICS_MEAN=98,615651896887
    STATISTICS_MINIMUM=0
    STATISTICS_STDDEV=85,271724597078

Thanks!

Mit freundlichen Grüßen
Richard Bischof

Landesamt für Geoinformation und Landesvermessung Niedersachsen (LGLN)
- Regionaldirektion Hameln-Hannover -
Dezernat 2 - Geodatenmanagement
Constantinstraße 40, 30177 Hannover
Tel.:	 +49 511 30245-314
Fax:	 +49 511 30245-360
mailto:richard.bischof at lgln.niedersachsen.de
www.lgln.de/rd-hm


-----Ursprüngliche Nachricht-----
Von: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] Im Auftrag von Jukka Rahkonen
Gesendet: Dienstag, 12. April 2016 19:34
An: gdal-dev at lists.osgeo.org
Betreff: Re: [gdal-dev] Rectify TIFF: Difference between applied GCP and warped image

Bischof, Richard <Richard.Bischof <at> lgln.niedersachsen.de> writes:

> 
> Hello there,
> 
> I`m trying to rectify a lots of dataset in tiff format using gdal. I'am
using Windows 7 Professional, gdal
> 1.11.2 .
> 
> My steps / commands are:
> 
...
SNIP
...

> F:\Projekt\gross\106300.tif D:/temp.tif
> 
> 2) Warp the image using gdalwarp
> gdalwarp -multi -wm 4000 -overwrite -r bilinear -order 2 -co COMPRESS=NONE
-co TFW=YES -co TILED=YES 
> D:/temp.tif D:\GDAL\106300.tif
> 
> My problem is, that the output dataset from the second step is not what I
expected. It is warped different,
> than ArcMap is showing me, when I load the output dataset from the first
step. (Including the gcp).
> 
> What am I missing in my gdalwarp command?

Do you mean that ArcMap is doing on-the-fly warping by the ground control
points? Do you know which warping method it is applying then? If it is using
2nd order polynomial then the results should be close your result after the
second step, if something else then not necessarily. Can you warp the image
physically with ArcMap so that you force it to use the 2nd order polynomial?

-Jukka Rahkonen-
 
> Thank you!
> 
> Mit freundlichen Grüßen
> Richard Bischof
> 
> Landesamt für Geoinformation und Landesvermessung Niedersachsen (LGLN)
> - Regionaldirektion Hameln-Hannover -
> Dezernat 2 - Geodatenmanagement
> Constantinstraße 40, 30177 Hannover
> Tel.:	 +49 511 30245-314
> Fax:	 +49 511 30245-360
> mailto:richard.bischof <at> lgln.niedersachsen.de
> www.lgln.de/rd-hm
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev <at> lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev


_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev

From cwaigl at alaska.edu  Wed Apr 13 13:26:45 2016
From: cwaigl at alaska.edu (Christine Waigl)
Date: Wed, 13 Apr 2016 12:26:45 -0800
Subject: [gdal-dev] GeoTiff 16bit to 8bit with GDAL 11.x
Message-ID: <CAGCc-ACFHUEdJ0LZsqRH+tQz4SA8qv2xVKMiUz_ROqGSJ+DupA@mail.gmail.com>

Hi all,

I have been using the GDAL command line tools to pre-process various kinds
of remote sensing imagery datasets in GeoTIFF format. This includes
resampling 16 bit images (eg. from Landsat 8) to 8-bit and to combine bands
into RBG composites.

In GDAL 11.4 (and previous 11.x that I tried), this doesn't work any more:

gdal_translate -ot Byte -scale [sceneID]_Bn.tif [sceneID]_8bit_Bn.tif

​I usually apply this to the already clipped RGB composites, but digging
deeper, even for single-band images what seems to be happening is that the
-scale option doesn't correctly calculates the source range:


   - If I use the command above, or with -scale_1, the whole output file
   has a value 0 for each pixel
   - If I use the "-b 1 -scale", the whole output file has a value 255 at
   each pixel
   - If I use "-scale src_min src_max" with a manually inserted src_min and
   src_max, I get a reasonable result (though not necessarily identical to the
   GDAL result with automatically calculated min and max.


What is driving me absolutely bonkers, though, is that *occasionally* the
command "-b 1 -scale" DOES produce a correct 8-bit file. It's not
reproducible, though: if I delete all 8bit files and re-run the script over
a whole set of 16 bit files, a whole different file may be resampled
correctly.

With GDAL 2.0.2, my old script (written when GDAL was at 1.8.x on my
machine) seems to be working at the moment, but my main system is currently
at 11.4, and I have a reason not to upgrade right away. Is there a way to
make it work with 11.4? I could run gdalinfo first and extract min and max
from the stats, and then feed this into gdal_translate, but I'd like to
avoid this path if possible. A test file (a file subsetted with "gdal_translate
-projwin... " from a whole Landsat 8 band) is here:
http://www2.gi.alaska.edu/~cwaigl/images/LC80660142015170LGN00_B5_clip.tif
(3.8 MB).

Thanks for your help,

Chris


-- 
Christine (Chris) Waigl - cwaigl at alaska.edu -  +1-907-474-5483 - Skype:
cwaigl_work
Geophysical Institute, UAF, 903 Koyukuk Drive, Fairbanks, AK 99775-7320, USA
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160413/0ff06d66/attachment.html>

From even.rouault at spatialys.com  Wed Apr 13 14:32:15 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Apr 2016 23:32:15 +0200
Subject: [gdal-dev] GeoTiff 16bit to 8bit with GDAL 11.x
In-Reply-To: <CAGCc-ACFHUEdJ0LZsqRH+tQz4SA8qv2xVKMiUz_ROqGSJ+DupA@mail.gmail.com>
References: <CAGCc-ACFHUEdJ0LZsqRH+tQz4SA8qv2xVKMiUz_ROqGSJ+DupA@mail.gmail.com>
Message-ID: <201604132332.16068.even.rouault@spatialys.com>

Le mercredi 13 avril 2016 22:26:45, Christine Waigl a écrit :
> Hi all,
> 
> I have been using the GDAL command line tools to pre-process various kinds
> of remote sensing imagery datasets in GeoTIFF format. This includes
> resampling 16 bit images (eg. from Landsat 8) to 8-bit and to combine bands
> into RBG composites.
> 
> In GDAL 11.4 (and previous 11.x that I tried), this doesn't work any more:
> 
> gdal_translate -ot Byte -scale [sceneID]_Bn.tif [sceneID]_8bit_Bn.tif
> 
> ​I usually apply this to the already clipped RGB composites, but digging
> deeper, even for single-band images what seems to be happening is that the
> -scale option doesn't correctly calculates the source range:
> 
> 
>    - If I use the command above, or with -scale_1, the whole output file
>    has a value 0 for each pixel
>    - If I use the "-b 1 -scale", the whole output file has a value 255 at
>    each pixel
>    - If I use "-scale src_min src_max" with a manually inserted src_min and
>    src_max, I get a reasonable result (though not necessarily identical to
> the GDAL result with automatically calculated min and max.
> 
> 
> What is driving me absolutely bonkers, though, is that *occasionally* the
> command "-b 1 -scale" DOES produce a correct 8-bit file. It's not
> reproducible, though: if I delete all 8bit files and re-run the script over
> a whole set of 16 bit files, a whole different file may be resampled
> correctly.
> 
> With GDAL 2.0.2, my old script (written when GDAL was at 1.8.x on my
> machine) seems to be working at the moment, but my main system is currently
> at 11.4, and I have a reason not to upgrade right away. Is there a way to
> make it work with 11.4? I could run gdalinfo first and extract min and max
> from the stats, and then feed this into gdal_translate, but I'd like to
> avoid this path if possible. A test file (a file subsetted with
> "gdal_translate -projwin... " from a whole Landsat 8 band) is here:
> http://www2.gi.alaska.edu/~cwaigl/images/LC80660142015170LGN00_B5_clip.tif
> (3.8 MB).

Christine,

Thanks for the report. Random issues are often a sign of uninitialized memory and running through Valgrind confirmed it.
And it confirms that the issues exists in all versions starting with 1.11, so the fact
that it runs with 2.0.2 is just luck.

A workaround is to do the following. Be sure to put -scale_2 *before* -scale_1. And be sure to use -b 1 in the second
gdal_translate as the band 2 scale/offset in the VRT might be junk.

$ gdal_translate -b 1 -b 1 -scale_2 -scale_1 -ot byte LC80660142015170LGN00_B5_clip.tif out.vrt -of vrt
$ gdal_translate -b 1 out.vrt out.tif

Fixed per https://trac.osgeo.org/gdal/ticket/6455 .

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cwaigl at alaska.edu  Thu Apr 14 13:48:23 2016
From: cwaigl at alaska.edu (Christine Waigl)
Date: Thu, 14 Apr 2016 12:48:23 -0800
Subject: [gdal-dev] GeoTiff 16bit to 8bit with GDAL 11.x
In-Reply-To: <201604132332.16068.even.rouault@spatialys.com>
References: <CAGCc-ACFHUEdJ0LZsqRH+tQz4SA8qv2xVKMiUz_ROqGSJ+DupA@mail.gmail.com>
 <201604132332.16068.even.rouault@spatialys.com>
Message-ID: <CAGCc-ADxc+Jx5SFGgTp9iVZHb5_BW68_Q1Q9OPXVHYJjZ8BfUQ@mail.gmail.com>

Hi Even,

Thanks so much for this quick and thorough response. The workaround made it
possible to fix my code, and I've extended it to multi-band GeoTIFF files
(my RGB composites) as

gdal_translate -ot Byte -of vrt -b 1 -b 1 -b 2 -b 3 -scale_4 -scale_1
-scale_2 -scale_3 infile.tif infile_8bit.vrt
gdal_translate -b 2 -b 3 -b 4 infile_8bit.vrt infile_8bit.tif

Un grand merci!

Chris


On Wed, Apr 13, 2016 at 1:32 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Le mercredi 13 avril 2016 22:26:45, Christine Waigl a écrit :
> > Hi all,
> >
> > I have been using the GDAL command line tools to pre-process various
> kinds
> > of remote sensing imagery datasets in GeoTIFF format. This includes
> > resampling 16 bit images (eg. from Landsat 8) to 8-bit and to combine
> bands
> > into RBG composites.
> >
> > In GDAL 11.4 (and previous 11.x that I tried), this doesn't work any
> more:
> >
> > gdal_translate -ot Byte -scale [sceneID]_Bn.tif [sceneID]_8bit_Bn.tif
> >
> > ​I usually apply this to the already clipped RGB composites, but digging
> > deeper, even for single-band images what seems to be happening is that
> the
> > -scale option doesn't correctly calculates the source range:
> >
> >
> >    - If I use the command above, or with -scale_1, the whole output file
> >    has a value 0 for each pixel
> >    - If I use the "-b 1 -scale", the whole output file has a value 255 at
> >    each pixel
> >    - If I use "-scale src_min src_max" with a manually inserted src_min
> and
> >    src_max, I get a reasonable result (though not necessarily identical
> to
> > the GDAL result with automatically calculated min and max.
> >
> >
> > What is driving me absolutely bonkers, though, is that *occasionally* the
> > command "-b 1 -scale" DOES produce a correct 8-bit file. It's not
> > reproducible, though: if I delete all 8bit files and re-run the script
> over
> > a whole set of 16 bit files, a whole different file may be resampled
> > correctly.
> >
> > With GDAL 2.0.2, my old script (written when GDAL was at 1.8.x on my
> > machine) seems to be working at the moment, but my main system is
> currently
> > at 11.4, and I have a reason not to upgrade right away. Is there a way to
> > make it work with 11.4? I could run gdalinfo first and extract min and
> max
> > from the stats, and then feed this into gdal_translate, but I'd like to
> > avoid this path if possible. A test file (a file subsetted with
> > "gdal_translate -projwin... " from a whole Landsat 8 band) is here:
> >
> http://www2.gi.alaska.edu/~cwaigl/images/LC80660142015170LGN00_B5_clip.tif
> > (3.8 MB).
>
> Christine,
>
> Thanks for the report. Random issues are often a sign of uninitialized
> memory and running through Valgrind confirmed it.
> And it confirms that the issues exists in all versions starting with 1.11,
> so the fact
> that it runs with 2.0.2 is just luck.
>
> A workaround is to do the following. Be sure to put -scale_2 *before*
> -scale_1. And be sure to use -b 1 in the second
> gdal_translate as the band 2 scale/offset in the VRT might be junk.
>
> $ gdal_translate -b 1 -b 1 -scale_2 -scale_1 -ot byte
> LC80660142015170LGN00_B5_clip.tif out.vrt -of vrt
> $ gdal_translate -b 1 out.vrt out.tif
>
> Fixed per https://trac.osgeo.org/gdal/ticket/6455 .
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>



-- 
Christine (Chris) Waigl - cwaigl at alaska.edu -  +1-907-474-5483 - Skype:
cwaigl_work
Geophysical Institute, UAF, 903 Koyukuk Drive, Fairbanks, AK 99775-7320, USA
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160414/72b57a69/attachment.html>

From giuseppe.amatulli at gmail.com  Thu Apr 14 14:33:32 2016
From: giuseppe.amatulli at gmail.com (Giuseppe Amatulli)
Date: Thu, 14 Apr 2016 17:33:32 -0400
Subject: [gdal-dev] reading multidimension netCDF using gdal
Message-ID: <CAKoiDHJfRUVGw6P0eMbr3afvSxvt9gWkqdRzJXixug78-KTqxg@mail.gmail.com>

Hi,
I'm trying to merge this 3 tif files having different pixel resolution in
one single file.

wget https://dl.dropboxusercontent.com/u/29337496/nc/tpi_max_km10.tif
wget https://dl.dropboxusercontent.com/u/29337496/nc/tpi_max_km50.tif
wget https://dl.dropboxusercontent.com/u/29337496/nc/tpi_max_km100.tif

According to my understanding the only raster format  that support
different pixel resolution are  HDF & NetCDF.

I opt for the NetCDF format and I wrote the following script that, change
the format from tif to nc, change some internal parameters using NCO and in
the end merge (grupping -  in NCO terminology) the *.nc together.

longname=Topographic_position_index
VAR=tpi_max_km
for km  in 10 50 100 ;  do
    if [ $km -eq 10  ] ; then b=1 ; fi
    if [ $km -eq 50  ] ; then b=2 ; fi
    if [ $km -eq 100 ] ; then b=3 ; fi

    gdal_translate -of netCDF    -co ZLEVEL=9  -co  COMPRESS=DEFLATE  -co
FORMAT=NC4C   $VAR$km.tif   $VAR$km.nc

### Change some parameters
    ncatted  -O -a long_name,Band1,o,c,${longname}        $VAR$km.nc -h
    ncatted  -O -a long_name,lon,o,c,Longitude            $VAR$km.nc -h
    ncatted  -O -a long_name,lat,o,c,Latitude             $VAR$km.nc -h
    ncatted  -O -a _FillValue,Band1,o,i,-9999        $VAR$km.nc -h
    ncrename -v Band1,${VAR}${km}   $VAR$km.nc -h

done

# create multi-dimension nc
ncecat --gag  tpi_max_km10.nc tpi_max_km50.nc tpi_max_km100.nc    out.nc

The problem comes when I want read the output using gdal.

gdalinfo out.nc
Warning 1: out.nc is a netCDF file, but not in GMT configuration.
gdalinfo failed - unable to open 'out.nc'.

Is gdal 1.10.0 able to read multidimensional NetCDF ?
Can I do "ncecat --gag" (grouping) operation using gdal?

Any ideas?
Thanks


-- 
Giuseppe Amatulli, Ph.D.

Department of Ecology and Evolutionary Biology, Yale University.
Jetz Lab, OML Room 405

P.O. Box 208106
165 PROSPECT ST
New Haven, CT 06520-8106
Teaching: spatial-ecology.net
Work:  http://sbsc.yale.edu/giuseppe-amatulli
<http://www.spatial-ecology.net>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160414/26a50248/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Apr 15 00:27:25 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Fri, 15 Apr 2016 07:27:25 +0000 (UTC)
Subject: [gdal-dev]
	=?utf-8?q?Rectify_TIFF=3A_Difference_between_applied_G?=
	=?utf-8?q?CP_and_warped=09image?=
References: <E921652A87CECB488EC72D3ABE4103CF3A5C80@LV-MX-12102.LV.ads.niedersachsen.de>
 <LV-MX-00014bAMePmQG00060a10@LV-MX-00014.LV.ads.niedersachsen.de>
 <E921652A87CECB488EC72D3ABE4103CF3B86E8@LV-MX-12102.LV.ads.niedersachsen.de>
Message-ID: <loom.20160415T090753-34@post.gmane.org>

Bischof, Richard <Richard.Bischof <at> lgln.niedersachsen.de> writes:

> 
> Hi Jukka,
> 
> you're correct. ArcMap is doing the on-the-fly transformation with the
dataset, I applied the gcps using
> gdal_translate to.
> With both gdal_warp and ArcMap Rectify I use second order polynomial.
> 
> I also found, that some areas of my source image are cut out from the
gdal_warp destination dataset.
> 

Hi,

I can't really help you but because I do not understand warping algorithms.
If ArcMap and GDAL makes different output with 2nd order polynomial and with
the same gcp set I can see three alternatives:

1) GDAL is wrong
2) ArcMap is wrong
3) There are different interpretations about what should happen and both are
right, or wrong.

I suppose that what GDAL is doing is written in
https://trac.osgeo.org/gdal/browser/trunk/gdal/alg/gdaltransformer.cpp
I fear we do not have the code used by ArcMap available for making a comparison.

Can you simplify the case into a question like:
With this gcp set, applied to an image of sixe xxx(W) by yyy(H) pixels,
after 2nd order polynomial transformation with GDAL the source pixel (x1,
y1) is moved into location (x2, y2) in pixel space, and (xxx(E), yyy(N)) in
projected cooordinates in EPSG:xxxx.

ArcMap moves this pixel into (x2', y2') (xxx'(E), yyy'(N)) and I think than
one or the other is wrong. What do warping specialists think?

-Jukka Rahkonen-


From even.rouault at spatialys.com  Fri Apr 15 00:57:19 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Apr 2016 09:57:19 +0200
Subject: [gdal-dev] GeoTiff 16bit to 8bit with GDAL 11.x
In-Reply-To: <CAGCc-ADxc+Jx5SFGgTp9iVZHb5_BW68_Q1Q9OPXVHYJjZ8BfUQ@mail.gmail.com>
References: <CAGCc-ACFHUEdJ0LZsqRH+tQz4SA8qv2xVKMiUz_ROqGSJ+DupA@mail.gmail.com>
 <201604132332.16068.even.rouault@spatialys.com>
 <CAGCc-ADxc+Jx5SFGgTp9iVZHb5_BW68_Q1Q9OPXVHYJjZ8BfUQ@mail.gmail.com>
Message-ID: <201604150957.19756.even.rouault@spatialys.com>

Le jeudi 14 avril 2016 22:48:23, Christine Waigl a écrit :
> Hi Even,
> 
> Thanks so much for this quick and thorough response. The workaround made it
> possible to fix my code, and I've extended it to multi-band GeoTIFF files
> (my RGB composites) as
> 
> gdal_translate -ot Byte -of vrt -b 1 -b 1 -b 2 -b 3 -scale_4 -scale_1
> -scale_2 -scale_3 infile.tif infile_8bit.vrt
> gdal_translate -b 2 -b 3 -b 4 infile_8bit.vrt infile_8bit.tif

You're likely to hit the bug again with the above. Rather try (basically band 4 of the VRT is the "junk band" ):

gdal_translate -ot Byte -of vrt -b 1 -b 2 -b 3 -b 3 -scale_4 -scale_1 -scale_2 -scale_3 infile.tif infile_8bit.vrt
gdal_translate -b 1 -b 2 -b 3 infile_8bit.vrt infile_8bit.tif


> 
> Un grand merci!
> 
> Chris
> 
> 
> On Wed, Apr 13, 2016 at 1:32 PM, Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > Le mercredi 13 avril 2016 22:26:45, Christine Waigl a écrit :
> > > Hi all,
> > > 
> > > I have been using the GDAL command line tools to pre-process various
> > 
> > kinds
> > 
> > > of remote sensing imagery datasets in GeoTIFF format. This includes
> > > resampling 16 bit images (eg. from Landsat 8) to 8-bit and to combine
> > 
> > bands
> > 
> > > into RBG composites.
> > > 
> > > In GDAL 11.4 (and previous 11.x that I tried), this doesn't work any
> > 
> > more:
> > > gdal_translate -ot Byte -scale [sceneID]_Bn.tif [sceneID]_8bit_Bn.tif
> > > 
> > > ​I usually apply this to the already clipped RGB composites, but
> > > digging deeper, even for single-band images what seems to be happening
> > > is that
> > 
> > the
> > 
> > > -scale option doesn't correctly calculates the source range:
> > >    - If I use the command above, or with -scale_1, the whole output
> > >    file has a value 0 for each pixel
> > >    - If I use the "-b 1 -scale", the whole output file has a value 255
> > >    at each pixel
> > >    - If I use "-scale src_min src_max" with a manually inserted src_min
> > 
> > and
> > 
> > >    src_max, I get a reasonable result (though not necessarily identical
> > 
> > to
> > 
> > > the GDAL result with automatically calculated min and max.
> > > 
> > > 
> > > What is driving me absolutely bonkers, though, is that *occasionally*
> > > the command "-b 1 -scale" DOES produce a correct 8-bit file. It's not
> > > reproducible, though: if I delete all 8bit files and re-run the script
> > 
> > over
> > 
> > > a whole set of 16 bit files, a whole different file may be resampled
> > > correctly.
> > > 
> > > With GDAL 2.0.2, my old script (written when GDAL was at 1.8.x on my
> > > machine) seems to be working at the moment, but my main system is
> > 
> > currently
> > 
> > > at 11.4, and I have a reason not to upgrade right away. Is there a way
> > > to make it work with 11.4? I could run gdalinfo first and extract min
> > > and
> > 
> > max
> > 
> > > from the stats, and then feed this into gdal_translate, but I'd like to
> > > avoid this path if possible. A test file (a file subsetted with
> > 
> > > "gdal_translate -projwin... " from a whole Landsat 8 band) is here:
> > http://www2.gi.alaska.edu/~cwaigl/images/LC80660142015170LGN00_B5_clip.ti
> > f
> > 
> > > (3.8 MB).
> > 
> > Christine,
> > 
> > Thanks for the report. Random issues are often a sign of uninitialized
> > memory and running through Valgrind confirmed it.
> > And it confirms that the issues exists in all versions starting with
> > 1.11, so the fact
> > that it runs with 2.0.2 is just luck.
> > 
> > A workaround is to do the following. Be sure to put -scale_2 *before*
> > -scale_1. And be sure to use -b 1 in the second
> > gdal_translate as the band 2 scale/offset in the VRT might be junk.
> > 
> > $ gdal_translate -b 1 -b 1 -scale_2 -scale_1 -ot byte
> > LC80660142015170LGN00_B5_clip.tif out.vrt -of vrt
> > $ gdal_translate -b 1 out.vrt out.tif
> > 
> > Fixed per https://trac.osgeo.org/gdal/ticket/6455 .
> > 
> > Even
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From p.halls at york.ac.uk  Fri Apr 15 02:04:16 2016
From: p.halls at york.ac.uk (Peter Halls)
Date: Fri, 15 Apr 2016 10:04:16 +0100
Subject: [gdal-dev] Rectify TIFF: Difference between applied GCP and
 warped image
In-Reply-To: <loom.20160415T090753-34@post.gmane.org>
References: <E921652A87CECB488EC72D3ABE4103CF3A5C80@LV-MX-12102.LV.ads.niedersachsen.de>
 <LV-MX-00014bAMePmQG00060a10@LV-MX-00014.LV.ads.niedersachsen.de>
 <E921652A87CECB488EC72D3ABE4103CF3B86E8@LV-MX-12102.LV.ads.niedersachsen.de>
 <loom.20160415T090753-34@post.gmane.org>
Message-ID: <CADEnnOMkwJJ=h_GLFe=NOTib9dJUiX+OPd8qnC6H1W4toSaq0g@mail.gmail.com>

Jukka, Richard,

        firstly, ESRI contracted the late John P Snyder, from USGS, to
design and initially implement their projection tools.  The team now
maintaining and developing this code has a highly respected pedigree.
Whilst mistakes *do* happen, I think the ESRI code will most likely be
reliable.  There may, of course, be issues of usage.

        There are a number of potential factors that also require
consideration - some PC chipsets, for example, are still reputably
unreliable for floating point maths!  I would, however, expect such to
affect both approaches equally and so, effectively, to cancel out.

         I am intrigued by the choice of Second Order polynomial.  The vast
majority of users do not need to consider such usage, so I guess a question
for Richard is why - and whether he has bibliography (or a suitable DEM)
supporting this choice for his context.  Back in the days when it was
deemed necessary for me to teach students the projection maths, I used to
give them a 3rd order equation and an aerial photograph for which one
specific area had just one GCP: the result was that this area was extruded
from the main image in a rather dramatic fashion (it was visually fine with
a First Order and nothing like as dramatic with a Second Order polynomial.
To 'lose' data, as you describe, suggests that this portion is computing to
NODATA: possibly indicating a GCP coding error.  I think it would be
sensible to back off this part of the specification for now, to see what
impact it is having.

        Lastly, for now, how are your GCPs arranged?  Do you have the
'standard five' of some introductory texts (eg four corners and centre)?
Or do you have a more dense pattern?  Are you using elevation control?  If
so, how does this relate to your GCPs (do your GCPs define breaks of slope,
for example)?

        An excellent text, with well explained equations, for your purposes
may be "Map Projection Transformation: Principles and Applications" by Qihe
Yang, John P Snyder and Waldo R Tobler and published by Taylor & Francis in
2000.   Snyder's introductions to map projections are generally available
for download from USGS.

Enjoy!

Peter

On 15 April 2016 at 08:27, Jukka Rahkonen <
jukka.rahkonen at maanmittauslaitos.fi> wrote:

> Bischof, Richard <Richard.Bischof <at> lgln.niedersachsen.de> writes:
>
> >
> > Hi Jukka,
> >
> > you're correct. ArcMap is doing the on-the-fly transformation with the
> dataset, I applied the gcps using
> > gdal_translate to.
> > With both gdal_warp and ArcMap Rectify I use second order polynomial.
> >
> > I also found, that some areas of my source image are cut out from the
> gdal_warp destination dataset.
> >
>
> Hi,
>
> I can't really help you but because I do not understand warping algorithms.
> If ArcMap and GDAL makes different output with 2nd order polynomial and
> with
> the same gcp set I can see three alternatives:
>
> 1) GDAL is wrong
> 2) ArcMap is wrong
> 3) There are different interpretations about what should happen and both
> are
> right, or wrong.
>
> I suppose that what GDAL is doing is written in
> https://trac.osgeo.org/gdal/browser/trunk/gdal/alg/gdaltransformer.cpp
> I fear we do not have the code used by ArcMap available for making a
> comparison.
>
> Can you simplify the case into a question like:
> With this gcp set, applied to an image of sixe xxx(W) by yyy(H) pixels,
> after 2nd order polynomial transformation with GDAL the source pixel (x1,
> y1) is moved into location (x2, y2) in pixel space, and (xxx(E), yyy(N)) in
> projected cooordinates in EPSG:xxxx.
>
> ArcMap moves this pixel into (x2', y2') (xxx'(E), yyy'(N)) and I think than
> one or the other is wrong. What do warping specialists think?
>
> -Jukka Rahkonen-
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
----------------------------------------------------------------------------------------------------------------
Peter J Halls, PhD Student, Post-war Reconstruction and Development Unit
(PRDU),
                      University of York

Snail mail: PRDU, Derwent College, University of York,
                Heslington, York YO10 5DD
This message has the status of a private and personal communication
----------------------------------------------------------------------------------------------------------------
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160415/485f880e/attachment.html>

From even.rouault at spatialys.com  Fri Apr 15 02:27:36 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Apr 2016 11:27:36 +0200
Subject: [gdal-dev] Rectify TIFF: Difference between applied GCP and
	warped image
In-Reply-To: <CADEnnOMkwJJ=h_GLFe=NOTib9dJUiX+OPd8qnC6H1W4toSaq0g@mail.gmail.com>
References: <E921652A87CECB488EC72D3ABE4103CF3A5C80@LV-MX-12102.LV.ads.niedersachsen.de>
 <loom.20160415T090753-34@post.gmane.org>
 <CADEnnOMkwJJ=h_GLFe=NOTib9dJUiX+OPd8qnC6H1W4toSaq0g@mail.gmail.com>
Message-ID: <201604151127.36428.even.rouault@spatialys.com>

>         An excellent text, with well explained equations, for your purposes
> may be "Map Projection Transformation: Principles and Applications" by Qihe
> Yang, John P Snyder and Waldo R Tobler and published by Taylor & Francis in
> 2000.   Snyder's introductions to map projections are generally available
> for download from USGS.

In that instance, map projections are not relevant since the warping done by 
Richard doesn't involve any.

Without the source image and the ESRI generated image, it is difficult to assess 
if something is really wrong and how much both images are different. One  
difference shown from the gdalinfo reports is the selection of the output 
resolution (there's a recent ticket about that in Trac : 
https://trac.osgeo.org/gdal/ticket/6320), but that's more or less an arbitrary 
choice that shouldn't affect the georeferencing. Other differences could come 
from the way polynomial coefficients are computed. GDAL uses least square 
adjustment, but I guess everyone does that.
I'm not aware of issues having been reported against the GDAL code with 2nd 
order polynomial (contrary to 3rd order where there are likely implementation 
issues).
Regarding truncation of the input rather, this might be due to insufficient 
sampling step when walking along the edges of the input raster. Adding -wo 
SAMPLE_STEPS=x with x > 21 (for example to 100) might help, possibly with -wo 
SAMPLE_GRID=YES ( see 
http://www.gdal.org/structGDALWarpOptions.html#a0ed77f9917bb96c7a9aabd73d4d06e08 
). Having to use that is a sign that the warping involves non neglectable non-
linear warping.
Fine tuning of the target extent with -te is also a possibility.

> 
> Enjoy!
> 
> Peter
> 
> On 15 April 2016 at 08:27, Jukka Rahkonen <
> 
> jukka.rahkonen at maanmittauslaitos.fi> wrote:
> > Bischof, Richard <Richard.Bischof <at> lgln.niedersachsen.de> writes:
> > > Hi Jukka,
> > > 
> > > you're correct. ArcMap is doing the on-the-fly transformation with the
> > 
> > dataset, I applied the gcps using
> > 
> > > gdal_translate to.
> > > With both gdal_warp and ArcMap Rectify I use second order polynomial.
> > > 
> > > I also found, that some areas of my source image are cut out from the
> > 
> > gdal_warp destination dataset.
> > 
> > 
> > Hi,
> > 
> > I can't really help you but because I do not understand warping
> > algorithms. If ArcMap and GDAL makes different output with 2nd order
> > polynomial and with
> > the same gcp set I can see three alternatives:
> > 
> > 1) GDAL is wrong
> > 2) ArcMap is wrong
> > 3) There are different interpretations about what should happen and both
> > are
> > right, or wrong.
> > 
> > I suppose that what GDAL is doing is written in
> > https://trac.osgeo.org/gdal/browser/trunk/gdal/alg/gdaltransformer.cpp
> > I fear we do not have the code used by ArcMap available for making a
> > comparison.
> > 
> > Can you simplify the case into a question like:
> > With this gcp set, applied to an image of sixe xxx(W) by yyy(H) pixels,
> > after 2nd order polynomial transformation with GDAL the source pixel (x1,
> > y1) is moved into location (x2, y2) in pixel space, and (xxx(E), yyy(N))
> > in projected cooordinates in EPSG:xxxx.
> > 
> > ArcMap moves this pixel into (x2', y2') (xxx'(E), yyy'(N)) and I think
> > than one or the other is wrong. What do warping specialists think?
> > 
> > -Jukka Rahkonen-
> > 
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From dmiller at JFTI.com  Fri Apr 15 06:34:59 2016
From: dmiller at JFTI.com (Miller, Doug)
Date: Fri, 15 Apr 2016 13:34:59 +0000
Subject: [gdal-dev] MBTiles Error
Message-ID: <baf7444feef440ffbd21eaffc523e857@NT10-MAIL13.jfti.com>



Hi,



I've got several files of MBTiles format that are from the an external source.  I'm using the 2.0.2 version of GDAL.  When opened by the gdalinfo CLI tool or the MBTiles driver they all have the same errors:



Error 1: Invalid value for 'bounds' metadata

Error 1: Cannot find min and max tile numbers

gdalinfo failed- unable to open.......



????Other MBTiles files from the same publisher open just fine.



Is there a way to fix or override this metadata?



It looks like GDAL 2.2 will allow these parameters to be overridden, but I can't use a beta version in my product and the final release looks like it could be 4 months from now.



Thanks for any help.



Doug

From even.rouault at spatialys.com  Fri Apr 15 06:53:39 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Apr 2016 15:53:39 +0200
Subject: [gdal-dev] MBTiles Error
In-Reply-To: <baf7444feef440ffbd21eaffc523e857@NT10-MAIL13.jfti.com>
References: <baf7444feef440ffbd21eaffc523e857@NT10-MAIL13.jfti.com>
Message-ID: <201604151553.40118.even.rouault@spatialys.com>

Le vendredi 15 avril 2016 15:34:59, Miller, Doug a écrit :
> Hi,
> 
> 
> 
> I've got several files of MBTiles format that are from the an external
> source.  I'm using the 2.0.2 version of GDAL.  When opened by the gdalinfo
> CLI tool or the MBTiles driver they all have the same errors:
> 
> 
> 
> Error 1: Invalid value for 'bounds' metadata
> 
> Error 1: Cannot find min and max tile numbers
> 
> gdalinfo failed- unable to open.......
> 
> 
> 
> ????Other MBTiles files from the same publisher open just fine.
> 
> 
> 
> Is there a way to fix or override this metadata?

There was a too restrictive check for the latitude range (didn't accept latitude above 86 deg).
One workaround might be to remove the bounds metadata item with :

ogrinfo your.mbtiles -sql "DELETE FROM metadata WHERE name = 'bounds'"

or alter the extent with

ogrinfo your.mbtiles -sql "UPDATE metadata SET value = 'min_long,min_lat,max_long,max_lat' WHERE name = 'bounds'"
(replace min_long,min_lat,max_long,max_lat by actual values)

> 
> 
> 
> It looks like GDAL 2.2 will allow these parameters to be overridden, but I
> can't use a beta version in my product and the final release looks like it
> could be 4 months from now.

GDAL 2.1.0 you mean ? It should be out hopefully by end of the month, with the first release candidate to be issued next monday.
The MBTiles driver in it indeed improves the opening of some products that failed before.

I'd still be interested in having access to one of those products that currently fail to confirm that it works fine with 2.1.0.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mcolbert at unicon-intl.com  Fri Apr 15 08:06:17 2016
From: mcolbert at unicon-intl.com (Mike Colbert)
Date: Fri, 15 Apr 2016 15:06:17 +0000
Subject: [gdal-dev] Shapefile to SQL Server
Message-ID: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>

Hi,

I have a Java web app with a SQL Server database and I would like to add support for importing shapefiles.  The shapes will then be used to determine if geographic locations we have defined in our system are within the areas defined by the shapes.

I've gone down the path of using ogr2ogr from Java to connect to SQL Server and load the shapefile.  However, I'm getting an error on a particular file I will need to load.  I'm wondering if I'm missing an option on the command?  Using a different shapefile, it seems to work.

Here is the command and the error:

String[] cmd = {
                                "-overwrite",
                                "-f", "MSSQLSpatial",
                                "MSSQL:Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx",
                                "C:\\Users\\mcolbert\\Downloads\\UGRB_Ozone_NAA\\UGRB_Ozone_NAA.shp", // error on this one
//                            "C:\\Users\\mcolbert\\Downloads\\tl_2010_06_zcta510\\tl_2010_06_zcta510.shp", // this one seems fine
                                "-lco", "GEOM_TYPE=geography",
                                "-lco", "GEOM_NAME=geog",
                                "-nln", "CM_SHAPE",
                                "--debug", "ON"
//                            ,"-a_srs", "ESPG:4269"
                                };
ogr2ogr.main(cmd);

OGR: OGROpen(C:\Users\mcolbert\Downloads\UGRB_Ozone_NAA\UGRB_Ozone_NAA.shp/00000000003FFE40) succeeded as ESRI Shapefile.
OGR_MSSQLSpatial: EstablishSession(Connection:"Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx")
ODBC: SQLDriverConnect(DRIVER=SQL Server;Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx)
OGR: OGROpen(MSSQL:Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx/000000000042C440) succeeded as MSSQLSpatial.
MSSQLSpatial: DeleteLayer(cm_shape)
OGR_MSSQLSpatial: Using column ogr_fid as FID for table cm_shape.
ERROR 1: INSERT command for new feature failed. [Microsoft][ODBC SQL Server Driver][SQL Server]A .NET Framework error occurred during execution of user-defined routine or aggregate "geography":

System.FormatException: 24201: Latitude values must be between -90 and 90 degrees.

System.FormatException:

   at Microsoft.SqlServer.Types.GeographyValidator.ValidatePoint(Double x, Double y, Nullable`1 z, Nullable`1 m)

   at Microsoft.SqlServer.Types.Validator.BeginFigure(Double x, Double y, Nullable`1 z, Nullable`1 m)

   at Microsoft.SqlServer.Types.Forw
Terminating translation prematurely after failed
translation of layer UGRB_Ozone_NAA (use -skipfailures to skip errors)



I'm assuming there is nothing unusual about the shapefile.  The file is available here:
http://deq.wyoming.gov/media/attachments/Air%20Quality/Winter%20Ozone/Nonattainment%20Information/2012_AQD_UGRB-Ozone-Nonattainment-Area-GIS-Shape-File.zip

Any help is appreciated.

Thanks,
Mike





-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160415/d3897e38/attachment-0001.html>

From szekerest at gmail.com  Fri Apr 15 09:21:48 2016
From: szekerest at gmail.com (Tamas Szekeres)
Date: Fri, 15 Apr 2016 18:21:48 +0200
Subject: [gdal-dev] Shapefile to SQL Server
In-Reply-To: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>
References: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>
Message-ID: <CACALY+RPgpO93DrFOPGEMDOpkmZ=6Y5S6qiur++KC7tZPgmfPQ@mail.gmail.com>

Hi,

Looks like you have invalid latitude values in the shapefile. Try creating
geometry type instead of geography.

Best regards,

Tamas



2016-04-15 17:06 GMT+02:00 Mike Colbert <mcolbert at unicon-intl.com>:

> Hi,
>
>
>
> I have a Java web app with a SQL Server database and I would like to add
> support for importing shapefiles.  The shapes will then be used to
> determine if geographic locations we have defined in our system are within
> the areas defined by the shapes.
>
>
>
> I’ve gone down the path of using ogr2ogr from Java to connect to SQL
> Server and load the shapefile.  However, I’m getting an error on a
> particular file I will need to load.  I’m wondering if I’m missing an
> option on the command?  Using a different shapefile, it seems to work.
>
>
>
> Here is the command and the error:
>
>
>
> String[] cmd = {
>
>                                 "-overwrite",
>
>                                 "-f", "MSSQLSpatial",
>
>
> "MSSQL:Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx",
>
>
> "C:\\Users\\mcolbert\\Downloads\\UGRB_Ozone_NAA\\UGRB_Ozone_NAA.shp", //
> error on this one
>
> //
> "C:\\Users\\mcolbert\\Downloads\\tl_2010_06_zcta510\\tl_2010_06_zcta510.shp",
> // this one seems fine
>
>                                 "-lco", "GEOM_TYPE=geography",
>
>                                 "-lco", "GEOM_NAME=geog",
>
>                                 "-nln", "CM_SHAPE",
>
>                                 "--debug", "ON"
>
> //                            ,"-a_srs", "ESPG:4269"
>
>                                 };
>
> ogr2ogr.main(cmd);
>
>
>
> OGR:
> OGROpen(C:\Users\mcolbert\Downloads\UGRB_Ozone_NAA\UGRB_Ozone_NAA.shp/00000000003FFE40)
> succeeded as ESRI Shapefile.
>
> OGR_MSSQLSpatial:
> EstablishSession(Connection:"Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx")
>
> ODBC: SQLDriverConnect(DRIVER=SQL
> Server;Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx)
>
> OGR:
> OGROpen(MSSQL:Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx/000000000042C440)
> succeeded as MSSQLSpatial.
>
> MSSQLSpatial: DeleteLayer(cm_shape)
>
> OGR_MSSQLSpatial: Using column ogr_fid as FID for table cm_shape.
>
> ERROR 1: INSERT command for new feature failed. [Microsoft][ODBC SQL
> Server Driver][SQL Server]A .NET Framework error occurred during execution
> of user-defined routine or aggregate "geography":
>
>
>
> System.FormatException: 24201: Latitude values must be between -90 and 90
> degrees.
>
>
>
> System.FormatException:
>
>
>
>    at Microsoft.SqlServer.Types.GeographyValidator.ValidatePoint(Double x,
> Double y, Nullable`1 z, Nullable`1 m)
>
>
>
>    at Microsoft.SqlServer.Types.Validator.BeginFigure(Double x, Double y,
> Nullable`1 z, Nullable`1 m)
>
>
>
>    at Microsoft.SqlServer.Types.Forw
>
> Terminating translation prematurely after failed
>
> translation of layer UGRB_Ozone_NAA (use -skipfailures to skip errors)
>
>
>
>
>
>
>
> I’m assuming there is nothing unusual about the shapefile.  The file is
> available here:
>
>
> http://deq.wyoming.gov/media/attachments/Air%20Quality/Winter%20Ozone/Nonattainment%20Information/2012_AQD_UGRB-Ozone-Nonattainment-Area-GIS-Shape-File.zip
>
>
>
> Any help is appreciated.
>
>
>
> Thanks,
>
> Mike
>
>
>
>
>
>
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160415/41db4b53/attachment.html>

From dmiller at JFTI.com  Fri Apr 15 09:27:55 2016
From: dmiller at JFTI.com (Miller, Doug)
Date: Fri, 15 Apr 2016 16:27:55 +0000
Subject: [gdal-dev] MBTiles Error
In-Reply-To: <201604151553.40118.even.rouault@spatialys.com>
References: <baf7444feef440ffbd21eaffc523e857@NT10-MAIL13.jfti.com>,
 <201604151553.40118.even.rouault@spatialys.com>
Message-ID: <abad57c4e5634b0e8a50563da6b06f3c@NT10-MAIL13.jfti.com>

Even,

I tried option #1 (ogrinfo your.mbtiles -sql "DELETE FROM metadata WHERE name = 'bounds'") and then it came up clean with "gdalinfo" and loaded into QGIS correctly.

The bad files are property that I cannot share, but I would if I could.

Thanks for the help,

Doug
________________________________________
From: Even Rouault <even.rouault at spatialys.com>
Sent: Friday, April 15, 2016 9:53 AM
To: gdal-dev at lists.osgeo.org
Cc: Miller, Doug
Subject: Re: [gdal-dev] MBTiles Error

Le vendredi 15 avril 2016 15:34:59, Miller, Doug a écrit :
> Hi,
>
>
>
> I've got several files of MBTiles format that are from the an external
> source.  I'm using the 2.0.2 version of GDAL.  When opened by the gdalinfo
> CLI tool or the MBTiles driver they all have the same errors:
>
>
>
> Error 1: Invalid value for 'bounds' metadata
>
> Error 1: Cannot find min and max tile numbers
>
> gdalinfo failed- unable to open.......
>
>
>
> ????Other MBTiles files from the same publisher open just fine.
>
>
>
> Is there a way to fix or override this metadata?

There was a too restrictive check for the latitude range (didn't accept latitude above 86 deg).
One workaround might be to remove the bounds metadata item with :

ogrinfo your.mbtiles -sql "DELETE FROM metadata WHERE name = 'bounds'"

or alter the extent with

ogrinfo your.mbtiles -sql "UPDATE metadata SET value = 'min_long,min_lat,max_long,max_lat' WHERE name = 'bounds'"
(replace min_long,min_lat,max_long,max_lat by actual values)

>
>
>
> It looks like GDAL 2.2 will allow these parameters to be overridden, but I
> can't use a beta version in my product and the final release looks like it
> could be 4 months from now.

GDAL 2.1.0 you mean ? It should be out hopefully by end of the month, with the first release candidate to be issued next monday.
The MBTiles driver in it indeed improves the opening of some products that failed before.

I'd still be interested in having access to one of those products that currently fail to confirm that it works fine with 2.1.0.

Even

--
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Apr 15 09:37:25 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Apr 2016 18:37:25 +0200
Subject: [gdal-dev] MBTiles Error
In-Reply-To: <abad57c4e5634b0e8a50563da6b06f3c@NT10-MAIL13.jfti.com>
References: <baf7444feef440ffbd21eaffc523e857@NT10-MAIL13.jfti.com>
 <201604151553.40118.even.rouault@spatialys.com>
 <abad57c4e5634b0e8a50563da6b06f3c@NT10-MAIL13.jfti.com>
Message-ID: <201604151837.26595.even.rouault@spatialys.com>

Le vendredi 15 avril 2016 18:27:55, Miller, Doug a écrit :
> Even,
> 
> I tried option #1 (ogrinfo your.mbtiles -sql "DELETE FROM metadata WHERE
> name = 'bounds'") and then it came up clean with "gdalinfo" and loaded
> into QGIS correctly.
> 
> The bad files are property that I cannot share, but I would if I could.

The output of the following would help :

ogrinfo your.mbtiles -al -sql "SELECT value FROM metadata WHERE name = 'bounds'"

> 
> Thanks for the help,
> 
> Doug
> ________________________________________
> From: Even Rouault <even.rouault at spatialys.com>
> Sent: Friday, April 15, 2016 9:53 AM
> To: gdal-dev at lists.osgeo.org
> Cc: Miller, Doug
> Subject: Re: [gdal-dev] MBTiles Error
> 
> Le vendredi 15 avril 2016 15:34:59, Miller, Doug a écrit :
> > Hi,
> > 
> > 
> > 
> > I've got several files of MBTiles format that are from the an external
> > source.  I'm using the 2.0.2 version of GDAL.  When opened by the
> > gdalinfo CLI tool or the MBTiles driver they all have the same errors:
> > 
> > 
> > 
> > Error 1: Invalid value for 'bounds' metadata
> > 
> > Error 1: Cannot find min and max tile numbers
> > 
> > gdalinfo failed- unable to open.......
> > 
> > 
> > 
> > ????Other MBTiles files from the same publisher open just fine.
> > 
> > 
> > 
> > Is there a way to fix or override this metadata?
> 
> There was a too restrictive check for the latitude range (didn't accept
> latitude above 86 deg). One workaround might be to remove the bounds
> metadata item with :
> 
> ogrinfo your.mbtiles -sql "DELETE FROM metadata WHERE name = 'bounds'"
> 
> or alter the extent with
> 
> ogrinfo your.mbtiles -sql "UPDATE metadata SET value =
> 'min_long,min_lat,max_long,max_lat' WHERE name = 'bounds'" (replace
> min_long,min_lat,max_long,max_lat by actual values)
> 
> > It looks like GDAL 2.2 will allow these parameters to be overridden, but
> > I can't use a beta version in my product and the final release looks
> > like it could be 4 months from now.
> 
> GDAL 2.1.0 you mean ? It should be out hopefully by end of the month, with
> the first release candidate to be issued next monday. The MBTiles driver
> in it indeed improves the opening of some products that failed before.
> 
> I'd still be interested in having access to one of those products that
> currently fail to confirm that it works fine with 2.1.0.
> 
> Even
> 
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bo.victor.thomsen at gmail.com  Fri Apr 15 10:07:20 2016
From: bo.victor.thomsen at gmail.com (Bo Victor Thomsen)
Date: Fri, 15 Apr 2016 19:07:20 +0200
Subject: [gdal-dev] Shapefile to SQL Server
In-Reply-To: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>
References: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>
Message-ID: <57111FC8.1010408@gmail.com>

The shape file in the zip is not in projection espg:4269. It's in utm 
zone 12N. Replace the "-a_srs", "ESPG:4269" with "-t_srs", "ESPG:4269" 
and "-s_srs", "ESPG: /code_for_UTM_12N/"
This causes ogr2ogr to reproject you data to the correct projection

Bo Victor Thomsen

Den 15/04/16 kl. 17:06 skrev Mike Colbert:
>
> Hi,
>
> I have a Java web app with a SQL Server database and I would like to 
> add support for importing shapefiles.  The shapes will then be used to 
> determine if geographic locations we have defined in our system are 
> within the areas defined by the shapes.
>
> I’ve gone down the path of using ogr2ogr from Java to connect to SQL 
> Server and load the shapefile. However, I’m getting an error on a 
> particular file I will need to load.  I’m wondering if I’m missing an 
> option on the command?  Using a different shapefile, it seems to work.
>
> Here is the command and the error:
>
> String[] cmd = {
>
> "-overwrite",
>
>                                 "-f", "MSSQLSpatial",
>
> "MSSQL:Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx",
>
> "C:\\Users\\mcolbert\\Downloads\\UGRB_Ozone_NAA\\UGRB_Ozone_NAA.shp", 
> // error on this one
>
> // 
> "C:\\Users\\mcolbert\\Downloads\\tl_2010_06_zcta510\\tl_2010_06_zcta510.shp", 
> // this one seems fine
>
>                                 "-lco", "GEOM_TYPE=geography",
>
>                                 "-lco", "GEOM_NAME=geog",
>
>                                 "-nln", "CM_SHAPE",
>
>                                 "--debug", "ON"
>
> //                            ,"-a_srs", "ESPG:4269"
>
>                                 };
>
> ogr2ogr.main(cmd);
>
> OGR: 
> OGROpen(C:\Users\mcolbert\Downloads\UGRB_Ozone_NAA\UGRB_Ozone_NAA.shp/00000000003FFE40) 
> succeeded as ESRI Shapefile.
>
> OGR_MSSQLSpatial: 
> EstablishSession(Connection:"Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx")
>
> ODBC: SQLDriverConnect(DRIVER=SQL 
> Server;Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx)
>
> OGR: 
> OGROpen(MSSQL:Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx/000000000042C440) succeeded 
> as MSSQLSpatial.
>
> MSSQLSpatial: DeleteLayer(cm_shape)
>
> OGR_MSSQLSpatial: Using column ogr_fid as FID for table cm_shape.
>
> ERROR 1: INSERT command for new feature failed. [Microsoft][ODBC SQL 
> Server Driver][SQL Server]A .NET Framework error occurred during 
> execution of user-defined routine or aggregate "geography":
>
> System.FormatException: 24201: Latitude values must be between -90 and 
> 90 degrees.
>
> System.FormatException:
>
>    at 
> Microsoft.SqlServer.Types.GeographyValidator.ValidatePoint(Double x, 
> Double y, Nullable`1 z, Nullable`1 m)
>
>    at Microsoft.SqlServer.Types.Validator.BeginFigure(Double x, Double 
> y, Nullable`1 z, Nullable`1 m)
>
>    at Microsoft.SqlServer.Types.Forw
>
> Terminating translation prematurely after failed
>
> translation of layer UGRB_Ozone_NAA (use -skipfailures to skip errors)
>
> I’m assuming there is nothing unusual about the shapefile.  The file 
> is available here:
>
> http://deq.wyoming.gov/media/attachments/Air%20Quality/Winter%20Ozone/Nonattainment%20Information/2012_AQD_UGRB-Ozone-Nonattainment-Area-GIS-Shape-File.zip
>
> Any help is appreciated.
>
> Thanks,
>
> Mike
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160415/b90515f9/attachment-0001.html>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Apr 15 11:16:04 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Fri, 15 Apr 2016 18:16:04 +0000 (UTC)
Subject: [gdal-dev] Shapefile to SQL Server
References: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>
 <57111FC8.1010408@gmail.com>
Message-ID: <loom.20160415T201329-364@post.gmane.org>

Bo Victor Thomsen <bo.victor.thomsen <at> gmail.com> writes:

> 
> 
>     The shape file in the zip is not in projection espg:4269. It's in
>     utm zone 12N. Replace the "-a_srs", "ESPG:4269" with "-t_srs",
>     "ESPG:4269" and "-s_srs", "ESPG: code_for_UTM_12N"
>     This causes ogr2ogr to reproject you data to the correct projection

And it is written "EPSG" as in European Petroleum Survey Group.

-Jukka Rahkonen-



From bo.victor.thomsen at gmail.com  Fri Apr 15 23:28:42 2016
From: bo.victor.thomsen at gmail.com (Bo Victor Thomsen)
Date: Sat, 16 Apr 2016 08:28:42 +0200
Subject: [gdal-dev] Shapefile to SQL Server
In-Reply-To: <loom.20160415T201329-364@post.gmane.org>
References: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>
 <57111FC8.1010408@gmail.com> <loom.20160415T201329-364@post.gmane.org>
Message-ID: <5711DB9A.3050207@gmail.com>

I know, what the abbreviation "EPSG" stands for !

And I can't count the number of times I made this particular spelling 
mistake !!

And four times in a row in one mail !!!

At least it's weekend...


Regards Bo Victor


Den 15/04/16 kl. 20:16 skrev Jukka Rahkonen:
> Bo Victor Thomsen <bo.victor.thomsen <at> gmail.com> writes:
>
>>
>>      The shape file in the zip is not in projection espg:4269. It's in
>>      utm zone 12N. Replace the "-a_srs", "ESPG:4269" with "-t_srs",
>>      "ESPG:4269" and "-s_srs", "ESPG: code_for_UTM_12N"
>>      This causes ogr2ogr to reproject you data to the correct projection
> And it is written "EPSG" as in European Petroleum Survey Group.
>
> -Jukka Rahkonen-
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160416/14406ee8/attachment.html>

From ror6ax at gmail.com  Sat Apr 16 07:01:47 2016
From: ror6ax at gmail.com (gregory grey)
Date: Sat, 16 Apr 2016 16:01:47 +0200
Subject: [gdal-dev] Python port newcomer
Message-ID: <CACYWVieNBVmKtFKjDEkTkHRVS3VTVW+JvT9v3+C+5v0ECX4Rew@mail.gmail.com>

Hi guys!

I'd like to work on python bindings.

Is there anyone specifically working on it?

Where do I start from, issues list for it, etc?

Thanks,
Gregory

From even.rouault at spatialys.com  Sat Apr 16 08:16:30 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Apr 2016 17:16:30 +0200
Subject: [gdal-dev] Python port newcomer
In-Reply-To: <CACYWVieNBVmKtFKjDEkTkHRVS3VTVW+JvT9v3+C+5v0ECX4Rew@mail.gmail.com>
References: <CACYWVieNBVmKtFKjDEkTkHRVS3VTVW+JvT9v3+C+5v0ECX4Rew@mail.gmail.com>
Message-ID: <201604161716.30992.even.rouault@spatialys.com>

Gregory,

You can have a look at the tickets identified by the following request
in the bug tracker:

https://trac.osgeo.org/gdal/query?status=assigned&status=new&status=reopened&description=~python&or&status=assigned&status=new&status=reopened&summary=~python&col=id&col=summary&col=status&col=type&col=priority&col=milestone&col=component&order=priority

Beware that not all of them are necessarily valid, or even sometimes
wishable to fix, or appropriate for a new comer.

You might also consult https://trac.osgeo.org/gdal/wiki/GdalOgrInPython 

Even


> Hi guys!
> 
> I'd like to work on python bindings.
> 
> Is there anyone specifically working on it?
> 
> Where do I start from, issues list for it, etc?
> 
> Thanks,
> Gregory
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From tomerlieber at gmail.com  Sat Apr 16 08:40:23 2016
From: tomerlieber at gmail.com (Tomer)
Date: Sat, 16 Apr 2016 08:40:23 -0700 (PDT)
Subject: [gdal-dev] Can't read column name of a gdb file with lattin
 letters
In-Reply-To: <1460751420859-5261530.post@n6.nabble.com>
References: <1460751420859-5261530.post@n6.nabble.com>
Message-ID: <1460821223302-5261577.post@n6.nabble.com>

Hi,

I responded to myself because the original e-mail wasn't sent to the mailing
list.

Have a good day.



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Can-t-read-column-name-of-a-gdb-file-with-lattin-letters-tp5261530p5261577.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From schwehr at gmail.com  Sun Apr 17 10:39:50 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 17 Apr 2016 10:39:50 -0700
Subject: [gdal-dev] Python port newcomer
In-Reply-To: <201604161716.30992.even.rouault@spatialys.com>
References: <CACYWVieNBVmKtFKjDEkTkHRVS3VTVW+JvT9v3+C+5v0ECX4Rew@mail.gmail.com>
 <201604161716.30992.even.rouault@spatialys.com>
Message-ID: <CACmBxys0cG9TZg0xtx-BFez2m=Pk3tF9b_02tqQMLhZpBjb+YQ@mail.gmail.com>

Doc strings would be a great place to start.  That would really help people
take advantage of more of what GDAL has to offer.

On Sat, Apr 16, 2016 at 8:16 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Gregory,
>
> You can have a look at the tickets identified by the following request
> in the bug tracker:
>
>
> https://trac.osgeo.org/gdal/query?status=assigned&status=new&status=reopened&description=~python&or&status=assigned&status=new&status=reopened&summary=~python&col=id&col=summary&col=status&col=type&col=priority&col=milestone&col=component&order=priority
>
> Beware that not all of them are necessarily valid, or even sometimes
> wishable to fix, or appropriate for a new comer.
>
> You might also consult https://trac.osgeo.org/gdal/wiki/GdalOgrInPython
>
> Even
>
>
> > Hi guys!
> >
> > I'd like to work on python bindings.
> >
> > Is there anyone specifically working on it?
> >
> > Where do I start from, issues list for it, etc?
> >
> > Thanks,
> > Gregory
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160417/e27f8370/attachment.html>

From gane.prog at gmail.com  Mon Apr 18 00:27:18 2016
From: gane.prog at gmail.com (Gane R)
Date: Mon, 18 Apr 2016 12:57:18 +0530
Subject: [gdal-dev] Customizing DLL name used in gdal_i.lib
Message-ID: <CALMrLdDWHb2UB7izj=hjfusrqETNOzj3a9aYwJbbmkPfK05JgQ@mail.gmail.com>

I want to have the dll generated as gdal_2_0_2.dll for gdal 2.0.2 build
and this name has to used in gdal_i.lib

So event the apps like gdalwarp.exe will look for gdal_2_0_2.dll and not
gdal200.dll


Thanks
Gane
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160418/b92bd16d/attachment.html>

From lucadeluge at gmail.com  Mon Apr 18 00:35:09 2016
From: lucadeluge at gmail.com (Luca Delucchi)
Date: Mon, 18 Apr 2016 09:35:09 +0200
Subject: [gdal-dev] compiling gdal with hdf4
Message-ID: <CAK4m-3xnrJ1mwt0m_j8zdWYv3ZohNAXqJAPNe5pW+cz3-7j_+w@mail.gmail.com>

Hi devs,

I'm trying to compile gdal on Centos OS with no root access, I would
like to compile it with hdf4 support. If I compile without hdf4 it
compile correctly but when I try to ad hdf4 I got the following error
(I compile libjpeg and hdf4 by myself)

/usr/bin/ld: /pico/home/usertrain/a08tra27/lib/libmfhdf.a(mfsd.o):
relocation R_X86_64_32 against `.rodata.str1.1' can not be used when
making a shared object; recompile with -fPIC
/pico/home/usertrain/a08tra27/lib/libmfhdf.a: could not read symbols: Bad value
collect2: ld returned 1 exit status
make[1]: *** [libgdal.la] Error 1
make[1]: Leaving directory `/pico/home/usertrain/a08tra27/gdal-2.0.2'
make: *** [check-lib] Error 2


This is the configure output



  Installation directory:    /pico/home/usertrain/a08tra27
  C compiler:                gcc -g -O2
  C++ compiler:              g++ -g -O2

  LIBTOOL support:           yes

  LIBZ support:              external
  LIBLZMA support:           no
  GRASS support:             no
  CFITSIO support:           no
  PCRaster support:          internal
  LIBPNG support:            internal
  DDS support:               no
  GTA support:               no
  LIBTIFF support:           internal (BigTIFF=yes)
  LIBGEOTIFF support:        internal
  LIBJPEG support:           internal
  12 bit JPEG:               yes
  12 bit JPEG-in-TIFF:       yes
  LIBGIF support:            internal
  OGDI support:              no
  HDF4 support:              yes
  HDF5 support:              no
  Kea support:               no
  NetCDF support:            no
  Kakadu support:            no
  JasPer support:            no
  OpenJPEG support:          no
  ECW support:               no
  MrSID support:             no
  MrSID/MG4 Lidar support:   no
  MSG support:               no
  GRIB support:              yes
  EPSILON support:           no
  WebP support:              no
  cURL support (wms/wcs/...):no
  PostgreSQL support:        no
  MySQL support:             no
  Ingres support:            no
  Xerces-C support:          no
  NAS support:               no
  Expat support:             no
  libxml2 support:           yes
  Google libkml support:     no
  ODBC support:              no
  PGeo support:              no
  FGDB support:              no
  MDB support:               no
  PCIDSK support:            internal
  OCI support:               no
  GEORASTER support:         no
  SDE support:               no
  Rasdaman support:          no
  DODS support:              no
  SQLite support:            yes
  PCRE support:              yes
  SpatiaLite support:        no
  DWGdirect support          no
  INFORMIX DataBlade support:no
  GEOS support:              yes
  Poppler support:           no
  Podofo support:            no
  OpenCL support:            no
  Armadillo support:         no
  FreeXL support:            no
  SOSI support:              no


  SWIG Bindings:             no

  Statically link PROJ.4:    yes
  enable OGR building:       yes
  enable pthread support:    yes
  enable POSIX iconv support:yes
  hide internal symbols:     no


thanks for your support

-- 
ciao
Luca

www.lucadelu.org

From even.rouault at spatialys.com  Mon Apr 18 00:50:00 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Apr 2016 09:50:00 +0200
Subject: [gdal-dev] compiling gdal with hdf4
In-Reply-To: <CAK4m-3xnrJ1mwt0m_j8zdWYv3ZohNAXqJAPNe5pW+cz3-7j_+w@mail.gmail.com>
References: <CAK4m-3xnrJ1mwt0m_j8zdWYv3ZohNAXqJAPNe5pW+cz3-7j_+w@mail.gmail.com>
Message-ID: <201604180950.00756.even.rouault@spatialys.com>

Le lundi 18 avril 2016 09:35:09, Luca Delucchi a écrit :
> Hi devs,
> 
> I'm trying to compile gdal on Centos OS with no root access, I would
> like to compile it with hdf4 support. If I compile without hdf4 it
> compile correctly but when I try to ad hdf4 I got the following error
> (I compile libjpeg and hdf4 by myself)
> 
> /usr/bin/ld: /pico/home/usertrain/a08tra27/lib/libmfhdf.a(mfsd.o):
> relocation R_X86_64_32 against `.rodata.str1.1' can not be used when
> making a shared object; recompile with -fPIC

--> seems that's an issue with how you compiled libhdf4. From the above, it 
seems that there's no shared library produced since GDAL tries to link agains 
the libmfhdf.a. So try to recompile libhdf4 with shared object support, or 
perhaps try building it with CFLAGS=-fPIC so that the static library makes 
GDAL happy.

> /pico/home/usertrain/a08tra27/lib/libmfhdf.a: could not read symbols: Bad
> value collect2: ld returned 1 exit status
> make[1]: *** [libgdal.la] Error 1
> make[1]: Leaving directory `/pico/home/usertrain/a08tra27/gdal-2.0.2'
> make: *** [check-lib] Error 2
> 
> 
> This is the configure output
> 
> 
> 
>   Installation directory:    /pico/home/usertrain/a08tra27
>   C compiler:                gcc -g -O2
>   C++ compiler:              g++ -g -O2
> 
>   LIBTOOL support:           yes
> 
>   LIBZ support:              external
>   LIBLZMA support:           no
>   GRASS support:             no
>   CFITSIO support:           no
>   PCRaster support:          internal
>   LIBPNG support:            internal
>   DDS support:               no
>   GTA support:               no
>   LIBTIFF support:           internal (BigTIFF=yes)
>   LIBGEOTIFF support:        internal
>   LIBJPEG support:           internal
>   12 bit JPEG:               yes
>   12 bit JPEG-in-TIFF:       yes
>   LIBGIF support:            internal
>   OGDI support:              no
>   HDF4 support:              yes
>   HDF5 support:              no
>   Kea support:               no
>   NetCDF support:            no
>   Kakadu support:            no
>   JasPer support:            no
>   OpenJPEG support:          no
>   ECW support:               no
>   MrSID support:             no
>   MrSID/MG4 Lidar support:   no
>   MSG support:               no
>   GRIB support:              yes
>   EPSILON support:           no
>   WebP support:              no
>   cURL support (wms/wcs/...):no
>   PostgreSQL support:        no
>   MySQL support:             no
>   Ingres support:            no
>   Xerces-C support:          no
>   NAS support:               no
>   Expat support:             no
>   libxml2 support:           yes
>   Google libkml support:     no
>   ODBC support:              no
>   PGeo support:              no
>   FGDB support:              no
>   MDB support:               no
>   PCIDSK support:            internal
>   OCI support:               no
>   GEORASTER support:         no
>   SDE support:               no
>   Rasdaman support:          no
>   DODS support:              no
>   SQLite support:            yes
>   PCRE support:              yes
>   SpatiaLite support:        no
>   DWGdirect support          no
>   INFORMIX DataBlade support:no
>   GEOS support:              yes
>   Poppler support:           no
>   Podofo support:            no
>   OpenCL support:            no
>   Armadillo support:         no
>   FreeXL support:            no
>   SOSI support:              no
> 
> 
>   SWIG Bindings:             no
> 
>   Statically link PROJ.4:    yes
>   enable OGR building:       yes
>   enable pthread support:    yes
>   enable POSIX iconv support:yes
>   hide internal symbols:     no
> 
> 
> thanks for your support

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Apr 18 00:51:29 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Apr 2016 09:51:29 +0200
Subject: [gdal-dev] Customizing DLL name used in gdal_i.lib
In-Reply-To: <CALMrLdDWHb2UB7izj=hjfusrqETNOzj3a9aYwJbbmkPfK05JgQ@mail.gmail.com>
References: <CALMrLdDWHb2UB7izj=hjfusrqETNOzj3a9aYwJbbmkPfK05JgQ@mail.gmail.com>
Message-ID: <201604180951.30185.even.rouault@spatialys.com>

Le lundi 18 avril 2016 09:27:18, Gane R a écrit :
> I want to have the dll generated as gdal_2_0_2.dll for gdal 2.0.2 build
> and this name has to used in gdal_i.lib
> 
> So event the apps like gdalwarp.exe will look for gdal_2_0_2.dll and not
> gdal200.dll

try:

nmake /f makefile.vc VERSION=_2_0_2

> 
> 
> Thanks
> Gane

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lucadeluge at gmail.com  Mon Apr 18 01:25:53 2016
From: lucadeluge at gmail.com (Luca Delucchi)
Date: Mon, 18 Apr 2016 10:25:53 +0200
Subject: [gdal-dev] compiling gdal with hdf4
In-Reply-To: <201604180950.00756.even.rouault@spatialys.com>
References: <CAK4m-3xnrJ1mwt0m_j8zdWYv3ZohNAXqJAPNe5pW+cz3-7j_+w@mail.gmail.com>
 <201604180950.00756.even.rouault@spatialys.com>
Message-ID: <CAK4m-3yLr4sjLUBoqdNY4vk=t59KhNF7y54o_Uhzi+x6cpRu2A@mail.gmail.com>

On 18 April 2016 at 09:50, Even Rouault <even.rouault at spatialys.com> wrote:
> Le lundi 18 avril 2016 09:35:09, Luca Delucchi a écrit :
>> Hi devs,
>>
>> I'm trying to compile gdal on Centos OS with no root access, I would
>> like to compile it with hdf4 support. If I compile without hdf4 it
>> compile correctly but when I try to ad hdf4 I got the following error
>> (I compile libjpeg and hdf4 by myself)
>>
>> /usr/bin/ld: /pico/home/usertrain/a08tra27/lib/libmfhdf.a(mfsd.o):
>> relocation R_X86_64_32 against `.rodata.str1.1' can not be used when
>> making a shared object; recompile with -fPIC
>
> --> seems that's an issue with how you compiled libhdf4. From the above, it
> seems that there's no shared library produced since GDAL tries to link agains
> the libmfhdf.a. So try to recompile libhdf4 with shared object support, or
> perhaps try building it with CFLAGS=-fPIC so that the static library makes
> GDAL happy.
>

I enables shared library in libhdf4 and GDAL compiled. Thanks a lot


-- 
ciao
Luca

www.lucadelu.org

From jamessramm at gmail.com  Mon Apr 18 01:51:06 2016
From: jamessramm at gmail.com (jramm)
Date: Mon, 18 Apr 2016 01:51:06 -0700 (PDT)
Subject: [gdal-dev] How to consider data types when implementing
	IWriteBlock
In-Reply-To: <201604122001.13821.even.rouault@spatialys.com>
References: <1460473841374-5260901.post@n6.nabble.com>
 <201604122001.13821.even.rouault@spatialys.com>
Message-ID: <1460969466934-5261675.post@n6.nabble.com>

Hi
I have implemented the write support in the NWT_GRD format, having to make a
few compromises. I'd like to go through them and see if they are reasonable.
I have also attached the diff.

1. The existing read driver reports 4 bands for a GRD dataset. The first 3
are essentially 'virtual' - they are RGB bands which are interpreted from
the single band of data actually on disk using color info in the header.
When opening in write mode, I have prevented more than 1 band being created.
Therefore in update mode, you cannot read from the 'virtual' bands; it is
created with 1 band to which you write the actual data. So you have some
slightly odd behaviour in that, you open it in `update` mode, it has 1 band,
you then close and reopen in `read only` mode, it has 4 bands. I wonder if
it would be better for the read driver to utilize the GDAL ColorTable stuff
somehow, instead of creating these 'virtual' bands?

2. The no data value is fixed on disk as 0; this is then converted to
-1.e37f by the read driver (as per the vertical mapper grid standard) upon
reading. On writing, I have allowed setting the no data value to anything,
and these values are treated as no data when writing. So you may create a
dataset having set the no data value to e.g. -999. However, when you close
it and open it in 'read' mode, the nodata value will be reported as -1.e37f

3. The GRD format supports data being written on disk as either 16bit
unsigned ints or 32bit unsigned ints, In the NWT_GRDRasterBand constructor,
allowance is made for this, however in the read driver, values are always
read as unsigned short (suggesting that if data were 32bit ints, we might
encounter over/underflow). I have done the same in the IWriteBlock, but I am
wondering if their should be a check to see whether the written value should
be an `unsigned short` or an `unsigned int`

4. Spatial Reference. The spatial reference is stored on disk in the 'MITAB'
format and a conversion function is used in the existing GetProjectionRef. A
function to convert the other way exists and I use this in SetProjection.
However, some stuff is obviously lost in the conversion as setting the
projection with e.g. EPSG:27700 and then reading it back loses the EPSG
information. Is there a way (using PamDataset maybe?) to store the GDAL
projection so that GDAL will always recognise it correctly, while still
writing the NWT_GRD format projection in the correct place in the tab/grd
file?

Are these reasonable compromises or can it be done better?

Thanks
James



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/How-to-consider-data-types-when-implementing-IWriteBlock-tp5260901p5261675.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From lorenzo.pini at geo-solutions.it  Mon Apr 18 06:35:44 2016
From: lorenzo.pini at geo-solutions.it (Lorenzo Pini)
Date: Mon, 18 Apr 2016 15:35:44 +0200
Subject: [gdal-dev] Fwd: MBTiles Write support
In-Reply-To: <CA+XvxWBF2-7TtEVKb2KeSbcJPbjBHwjEk=-MzBvE9J4d-9K-hA@mail.gmail.com>
References: <CA+XvxWBF2-7TtEVKb2KeSbcJPbjBHwjEk=-MzBvE9J4d-9K-hA@mail.gmail.com>
Message-ID: <CA+XvxWBtDht=a+oa0-Hehuru_FZRvwBbsHoSAF3k26LjraE-FQ@mail.gmail.com>

Hi all,
I recently tested the MBTiles write support in the latest beta with good
results.
I'm now testing it with larger files, so here is some of my comments and
questions.

Version is: GDAL 2.1.0beta1, released 2016/04/01
The gdalinfo of the input file is:

Driver: GTiff/GeoTIFF
Files: mosaic.tif
Size is 645661, 308112
Coordinate System is:
PROJCS["Monte Mario / Italy zone 1",
    GEOGCS["Monte Mario",
        DATUM["Monte_Mario",
            SPHEROID["International 1924",6378388,297,
                AUTHORITY["EPSG","7022"]],
            TOWGS84[-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68],
            AUTHORITY["EPSG","6265"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.0174532925199433,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4265"]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",9],
    PARAMETER["scale_factor",0.9996],
    PARAMETER["false_easting",1500000],
    PARAMETER["false_northing",0],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    AXIS["X",EAST],
    AXIS["Y",NORTH],
    AUTHORITY["EPSG","3003"]]
Origin = (1473060.112236728700000,4930249.736560207800000)
Pixel Size = (0.055042625523929,-0.055042631056927)
Metadata:
  AREA_OR_POINT=Area
Image Structure Metadata:
  COMPRESSION=CCITTFAX4
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  ( 1473060.112, 4930249.737) (  8d39'39.60"E, 44d31'27.30"N)
Lower Left  ( 1473060.112, 4913290.441) (  8d39'42.77"E, 44d22'17.68"N)
Upper Right ( 1508598.989, 4930249.737) (  9d 6'29.55"E, 44d31'28.93"N)
Lower Right ( 1508598.989, 4913290.441) (  9d 6'28.53"E, 44d22'19.29"N)
Center      ( 1490829.551, 4921770.089) (  8d53' 5.11"E, 44d26'54.09"N)
Band 1 Block=256x256 Type=Byte, ColorInterp=Palette
  NoData Value=1
  Image Structure Metadata:
    NBITS=1
  Color Table (RGB with 2 entries)
    0: 0,0,0,255
    1: 255,255,255,0

The command I used is:

\>gdal_translate mosaic.tif full_def9.mbtiles -of MBTILES -expand rgb -co
TILE_FORMAT=PNG8 -co ZLEVEL=9
Input file size is 645661, 308112
0...10...20...30...40...50...60...70...80ERROR 1: Failure when inserting
partial tile (row=759306,col=1099566) at zoom_level=21 : database or disk
is full
ERROR 1: full_def9.mbtiles, band 4: An error occurred while writing a dirty
block
ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
zoom_level=21 : database disk image is malformed
ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
zoom_level=21 : database disk image is malformed
ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
zoom_level=21 : database disk image is malformed
ERROR 1: Failure when inserting partial tile (row=759306,col=1099576) at
zoom_level=21 : database disk image is malformed

NOTE: without the "-expand rgb" option, all the output tiles will be black,
gdal_translate will warn you.

The process failed due to insufficient disk space (70Gb free was not
enough) but the resulting incomplete file (7Gb) looks good.
Most of the space was used by the "partial_tiles" database, is there any
settings I can use to force a more frequent "flush" of the tiles in the
main database?

The file was created with zoom level = 21, that is more than we need, so I
tried to use ZOOM_LEVEL_STRATEGY to generate a level 20.
My plan was to generate a level 20 file with gdal_translate and then add
the level 19 with gdaladdo but both ZOOM_LEVEL_STRATEGY=UPPER and
ZOOM_LEVEL_STRATEGY=LOWER seems to compute the same zoom level 21.
How is the zoom level computed?

Thank you

Regards
Lorenzo Pini
Software Engineer

==
GeoServer Professional Services from the experts! Visit
http://goo.gl/it488V for more information.
==

GeoSolutions S.A.S.
Via di Montramito 3/A
55054  Massarosa (LU)
Italy
phone: +39 0584 962313
fax:     +39 0584 1660272

http://www.geo-solutions.it
http://twitter.com/geosolutions_it

AVVERTENZE AI SENSI DEL D.Lgs. 196/2003

Le informazioni contenute in questo messaggio di posta elettronica e/o
nel/i file/s allegato/i sono da considerarsi strettamente riservate. Il
loro utilizzo è consentito esclusivamente al destinatario del messaggio,
per le finalità indicate nel messaggio stesso. Qualora riceviate questo
messaggio senza esserne il destinatario, Vi preghiamo cortesemente di
darcene notizia via e-mail e di procedere alla distruzione del messaggio
stesso, cancellandolo dal Vostro sistema. Conservare il messaggio stesso,
divulgarlo anche in parte, distribuirlo ad altri soggetti, copiarlo, od
utilizzarlo per finalità diverse, costituisce comportamento contrario ai
principi dettati dal D.Lgs. 196/2003.

The information in this message and/or attachments, is intended solely for
the attention and use of the named addressee(s) and may be confidential or
proprietary in nature or covered by the provisions of privacy act
(Legislative Decree June, 30 2003, no.196 - Italy's New Data Protection
Code).Any use not in accord with its purpose, any disclosure, reproduction,
copying, distribution, or either dissemination, either whole or partial, is
strictly forbidden except previous formal approval of the named
addressee(s). If you are not the intended recipient, please contact
immediately the sender by telephone, fax or e-mail and delete the
information in this message that has been received in error. The sender
does not give any warranty or accept liability as the content, accuracy or
completeness of sent messages and accepts no responsibility  for changes
made after they were sent or for other risks which arise as a result of
e-mail transmission, viruses, etc.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160418/39bcc265/attachment-0001.html>

From mcolbert at unicon-intl.com  Mon Apr 18 07:38:16 2016
From: mcolbert at unicon-intl.com (Mike Colbert)
Date: Mon, 18 Apr 2016 14:38:16 +0000
Subject: [gdal-dev] Shapefile to SQL Server
In-Reply-To: <5711DB9A.3050207@gmail.com>
References: <07ABE3AF1207E047A24A3BA507A717A7BF42DD88@bear.unicon-intl.com>
 <57111FC8.1010408@gmail.com> <loom.20160415T201329-364@post.gmane.org>
 <5711DB9A.3050207@gmail.com>
Message-ID: <07ABE3AF1207E047A24A3BA507A717A7BF42DE85@bear.unicon-intl.com>

Thank you, this fixed it.

Here is the working command:

String[] cmd = {
"-overwrite",
"-f", "MSSQLSpatial",
"MSSQL:Server=xxx;Database=xxx;Uid=xxx;Pwd=xxx",
"C:\\Users\\mcolbert\\Downloads\\UGRB_Ozone_NAA\\UGRB_Ozone_NAA.shp",
"-lco", "GEOM_TYPE=geography",
"-lco", "GEOM_NAME=geog",
"-nln", "CM_SHAPE",
"--debug", "ON"
,"-t_srs", "EPSG:4269"
,"-s_srs", "EPSG:26912"
};
ogr2ogr.main(cmd);


Mike


From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Bo Victor Thomsen
Sent: Saturday, April 16, 2016 2:29 AM
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Shapefile to SQL Server

I know, what the abbreviation "EPSG" stands for !

And I can't count the number of times I made this particular spelling mistake !!

And four times in a row in one mail !!!

At least it's weekend...


Regards Bo Victor

Den 15/04/16 kl. 20:16 skrev Jukka Rahkonen:

Bo Victor Thomsen <bo.victor.thomsen <at> gmail.com> writes:







    The shape file in the zip is not in projection espg:4269. It's in

    utm zone 12N. Replace the "-a_srs", "ESPG:4269" with "-t_srs",

    "ESPG:4269" and "-s_srs", "ESPG: code_for_UTM_12N"

    This causes ogr2ogr to reproject you data to the correct projection



And it is written "EPSG" as in European Petroleum Survey Group.



-Jukka Rahkonen-





_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160418/1b4da831/attachment.html>

From ari.jolma at gmail.com  Mon Apr 18 08:28:43 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 18 Apr 2016 18:28:43 +0300
Subject: [gdal-dev] Map algebra, update
Message-ID: <5714FD2B.6050405@gmail.com>

Folks,

Some updates on the RFC 62.

Working on the code, I've managed to rewrite the C++ API almost 
completely OO. There is a need for only a bootstrap function, which 
constructs a new band object from a regular GDALRasterBand. The map 
algebra methods are methods of this object. The new band class is an 
interface class with only virtual methods. The actual implementations of 
the virtual methods are in templated classes, which take care of all 
datatypes etc.

The inner workings are pretty complex, for example two band operations 
need to go from an interface class to a template class and then to a 
second template class via one more interface class. The second template 
class has two datatypes and the first one datatype as template 
parameter. Control is moved from band level operation to block level 
operation with method pointers.

I've added support for nodata values and mask bands, so that, for 
example when summing two bands, nodata values and masked out cells can 
be ignored.

In the actual code I'm still moving the code from functions to methods, 
so it's a mixture but all the test and demo codes should work. OO makes 
the code much more readable, here's an example:

     GDALDriver *d = GetGDALDriverManager()->GetDriverByName("MEM");
     int w_band = 16, h_band = 10;
     GDALDataset *ds = d->Create("", w_band, h_band, 2, GDT_Int32, NULL);
     GDALRasterBand *b = ds->GetRasterBand(1);

     gma_band_t *bx = (gma_band_t*)gma_new_object(b, gma_band);
     bx->rand();
     bx->modulus(20);
     bx->print();
     bx->add(5);
     bx->print();

     GDALRasterBand *b2 = ds->GetRasterBand(2);
     gma_band_t *by = (gma_band_t*)gma_new_object(b2, gma_band);
     by->rand();
     by->modulus(10);
     by->print();
     bx->add(by);
     bx->print();

I'm expecting that the amount of code becomes less with this more OO 
approach and especially the switch tables of GDAL datatype are reduced 
to the minimum.

I've studied STL and I'm using it, but for a simple hash (integer type 
to object) I did not find I good solution in STL so I'm still using a 
DYI one.

Ari


From even.rouault at spatialys.com  Mon Apr 18 08:55:57 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Apr 2016 17:55:57 +0200
Subject: [gdal-dev] Fwd: MBTiles Write support
In-Reply-To: <CA+XvxWBtDht=a+oa0-Hehuru_FZRvwBbsHoSAF3k26LjraE-FQ@mail.gmail.com>
References: <CA+XvxWBF2-7TtEVKb2KeSbcJPbjBHwjEk=-MzBvE9J4d-9K-hA@mail.gmail.com>
 <CA+XvxWBtDht=a+oa0-Hehuru_FZRvwBbsHoSAF3k26LjraE-FQ@mail.gmail.com>
Message-ID: <201604181755.57891.even.rouault@spatialys.com>

Lorenzo,

> The command I used is:
> 
> \>gdal_translate mosaic.tif full_def9.mbtiles -of MBTILES -expand rgb -co
> TILE_FORMAT=PNG8 -co ZLEVEL=9
> Input file size is 645661, 308112
> 0...10...20...30...40...50...60...70...80ERROR 1: Failure when inserting
> partial tile (row=759306,col=1099566) at zoom_level=21 : database or disk
> is full
> ERROR 1: full_def9.mbtiles, band 4: An error occurred while writing a dirty
> block
> ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
> zoom_level=21 : database disk image is malformed
> ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
> zoom_level=21 : database disk image is malformed
> ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
> zoom_level=21 : database disk image is malformed
> ERROR 1: Failure when inserting partial tile (row=759306,col=1099576) at
> zoom_level=21 : database disk image is malformed
> 
> NOTE: without the "-expand rgb" option, all the output tiles will be black,
> gdal_translate will warn you.
> 
> The process failed due to insufficient disk space (70Gb free was not
> enough) but the resulting incomplete file (7Gb) looks good.
> Most of the space was used by the "partial_tiles" database, is there any
> settings I can use to force a more frequent "flush" of the tiles in the
> main database?

I've pushed a fix for that per https://trac.osgeo.org/gdal/ticket/6462

> 
> The file was created with zoom level = 21, that is more than we need, so I
> tried to use ZOOM_LEVEL_STRATEGY to generate a level 20.
> My plan was to generate a level 20 file with gdal_translate and then add
> the level 19 with gdaladdo but both ZOOM_LEVEL_STRATEGY=UPPER and
> ZOOM_LEVEL_STRATEGY=LOWER seems to compute the same zoom level 21.
> How is the zoom level computed?

Hum, I couldn't reproduce that. With ZOOM_LEVEL_STRATEGY=LOWER, tiles at zoom 
level 20 are produced.
Another way of forcing the resolution to the lower zoom level would be to use 
"-outsize 50% 50% -r bilinear"

The zoom level is computing by using the "guess extent and resolution" 
function used by gdalwarp (and the MBTiles driver now) when you give it a 
source raster and a target projection. Then the MBTiles driver compare this 
theoretical target resolution to the fixed resolutions imposed by the MBTiles 
tiling scheme and zoom level.  And then it does ... (hopefully code will be 
clearer that my attempt at transposing it to English)  :

    double dfPrevRes = 0, dfRes = 0;
    const double dfPixelXSizeZoomLevel0 = 2 * MAX_GM / 256;
    for(nZoomLevel = 0; nZoomLevel < 25; nZoomLevel++)
    {
        dfRes = dfPixelXSizeZoomLevel0 / (1 << nZoomLevel);
        if( dfComputedRes > dfRes )
            break;
        dfPrevRes = dfRes;
    }

    const char* pszZoomLevelStrategy = CSLFetchNameValueDef(papszOptions,
                                                            "ZOOM_LEVEL_STRATEGY",
                                                            "AUTO");
    if( fabs( dfComputedRes - dfRes ) / dfRes > 1e-8 )
    {
        if( EQUAL(pszZoomLevelStrategy, "LOWER") )
        {
            if( nZoomLevel > 0 )
                nZoomLevel --;
        }
        else if( EQUAL(pszZoomLevelStrategy, "UPPER") )
        {
            /* do nothing */
        }
        else if( nZoomLevel > 0 )
        {
            if( dfPrevRes / dfComputedRes < dfComputedRes / dfRes )
                nZoomLevel --;
        }
    }

where dfComputedRes is the theoretical pixel size computed by the function, 
dfPrevRes the resolution of the lower zoom level (nZoomLevel - 1) and dfRes 
the resolution of the upper zoom level ( nZoomLevel )

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Apr 18 10:26:08 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Apr 2016 19:26:08 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC1 Available for Review
Message-ID: <201604181926.09570.even.rouault@spatialys.com>

Hi,

I have prepared a GDAL/OGR 2.1.0 release candidate. This is your 
last chance to test before the official release. There have been a number of 
non-trivial changes since beta1 (see diff log in Annex)

Peek up an archive among the following ones (by ascending size):

  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.xz
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdal210RC1.zip

The gdal-grass plugin is available at :

  http://download.osgeo.org/gdal/2.1.0/gdal-grass-2.1.0RC1.tar.gz

A snapshot of the gdalautotest suite is also available :

  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.zip

And the documentation:

  http://download.osgeo.org/gdal/2.1.0/gdal210doc.zip

The NEWS file is here :

  http://trac.osgeo.org/gdal/wiki/Release/2.1.0-News

I'll call for a vote promoting it to final next week if no serious problems are 
reported.

Best regards,

Even

Annex: changes since 2.1.0beta1:
- New MRF tile format JPNG (PNG or JPEG, depending on transparency)
- Perl bindings: fix #6431. Perl bindings: #6431. Typemaps for GIntBig and 
GUIntBig. Also fixes to two other typemaps dealing with these types.
- A few code cleanups in frmts/raw
- Java bindings: bump minimal java version to 1.5 in case SWIG generates 
anotations (#6433, patch by Bas Couwenberg)
- Java bindings: disable generation of bindings for GNM as they are not ready 
yet (#6434)
- SQLITE VFS: increase mxPathname to 2048 by default, and provide 
OGR_SQLITE_VFS_MAXPATHNAME config option to be able to configure that higher if 
that would be needed. Useful when dealing with very long names like 
/vsicurl/.... with AWS S3 security tokens
- MBTiles: add capability to open /vsicurl/https:// signed AWS S3 URLs
- /vsicurl/: by default do not use HEAD request when detecting a AWS S3 signed 
URL
- Use GDALCanFileAcceptSidecarFile() in GDALMDReaderManager::GetReader()
- Fix GDALDefaultOverviews::OverviewScan() to properly use 
GDALCanFileAcceptSidecarFile(), and unbreak nitf_46_jasper test that relies on 
the OVERVIEW_FILE mechanism
- /vsicurl/: manage redirection from public URLs to redirected AWS S3 signed 
urls, with management of the expiration. Enabled by default. Can be disabled 
if CPL_VSIL_CURL_USE_S3_REDIRECT=NO (#6439)
- configure: remove useless AC_CHECK_FUNC(setlocale) (#6438)
- PLScenes V0: avoid opening raster to generate dummy .aux.xml
- SQLITE VFS: do not probe -wal files on /vsicurl/
- DXF: take into account full definition of spline entity (degree, control 
points, weights and knots) when stroking splines (#6436)
- Shape: add capability to restore/build a missing .shx file when defining 
SHAPE_RESTORE_SHX to TRUE (#5035)
- GRASS: fix compilation by moving C++ headers include out of extern C scope
- Define HAVE_CXX11 for C++ >= 2011 compilation environments (#6432).
- SWIG bindings: add SpatialReference.GetAxisName() and 
SpatialReference.GetAxisOrientation() (#6441)
- gdal_translate: fix -a_nodata with negative values on rasters that have 
PIXELTYPE=SIGNEDBYTE; fix preserving PIXELTYPE=SIGNEDBYTE with VRT
- MRF: Allow block counts larger than 2e9 by using GIntBig math
- SWIG: add SpatialReference.GetAngularUnitsName() (#6445)
- SWIG: partially revert r33734 and r33736 so that GetFieldIndex(name) and 
GetGeomFieldIndex(name) do not emit errors. They are the only way to check if 
a field exists. Particularly Python bindings use them to guess if f['foo'] is 
an attribute field or geometry field
- Perl bindings: GetFieldIndex should issue an error. Fix an error in STORE 
method. Add tests.
- MBTiles: fix so that datasets whose lowest min zoom level is 16 or above are 
recognized
- MBTiles: write minzoom and maxzoom metadata items
- json_ex_get_object_by_path(): don't make it return intermediate object if 
the full path cannot be solved
- PLScenes: fix code to work with final V1 API
- GDALWarpOperation::CreateKernelMask(): fix potential 32 bit integer overflow 
when using warp memory value > 2GB (#6448)
- ogr2ogr: fix inappropriate warning about FileGDB not being the appropriate 
target driver, when FileGDB is compiled as a plugin and thus registered before 
OpenFileGDB
- BSB: fix compilation issues with -DBSB_CREATE
- update mrsid driver build to find MrSID 9.5 dll
- MBTILES / GPKG: fix generation of files with 1-band paletted input dataset. 
Also improve the logic to retrieve color palette when forcing BAND_COUNT=1 on 
opening (#6450)
- MSG: fix build with -Werror=format-security (#6451)
- OGRParseDate(): more strict validation to reject invalide dates (#6452)
- Fix CPLsscanf() to be conformant regarding how space/tab/... separators are 
handled, so as to fix OGR GMT to be able to read coordinates separated by 
tabulations (#6453)
- gdal_translate: fix random behaviour when -scale is used without source 
bounds (#6455)
- MBTiles: be robust to invalid 'bounds' at dataset opening (#6458)
- MySQL: fix Windows build with recent MySQL versions and Visual Studio 2015 
(patch by jmckenna, #6457)
- better handling of various object coordinate systems found in dxf files for 
point, line, polyline, spline and ellipse entities. Add anchor position to 
text styles. Remove polygon/polyface mesh parsing from polyline entity (#6459)
- RMF: add read/write access to new RMF format for files larger than 4 Gb 
(version=0x201) (https://github.com/OSGeo/gdal/pull/11)
- GPKG/MBTiles writer: implement strategy to flush partial_tiles temporary 
database when it becomes too big (#6462)
- GPKG/MBTiles writer: when writing to GoogleMapsCompatible tiling scheme, 
better deal with source rasters in EPSG:4326 with latitude = +/-90 (#6463)
- Java bindings: fix typemap for input parameter of type GIntBig (fixes 
GetFeature(long), DeleteFeature(long), etc...) (#6464)


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From deedeebernard at hotmail.com  Mon Apr 18 10:59:32 2016
From: deedeebernard at hotmail.com (Didier Bernard)
Date: Mon, 18 Apr 2016 17:59:32 +0000
Subject: [gdal-dev] Resampling a raster file with GDAL C#
Message-ID: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>

Hello,


I am trying to resample a .tif raster in C# GDAL in a way that every other cell in a row and column is removed.

Something similar to the lower GDAL command:

    gdal_translate -outsize 50% 0 input.tif output.tif

But this command creates a new resampled .tif file.
While I would like to avoid saving a new .tif file, and if possible just resample the dataset.

It looks like this can be achieved by the use of VRT file<http://www.gdal.org/gdal_vrttut.html>.

Here is one example of a .vrt file, which resamples the .tif file by removing the every other cell:


<VRTDataset rasterXSize="42" rasterYSize="32">
  <GeoTransform>14.3779166666, 0.000833333333333, 0.0, 40.8404166667, 0.0, -0.000833333333333</GeoTransform>
  <VRTRasterBand dataType="Byte" band="1">
    <ColorInterp>Gray</ColorInterp>
    <SimpleSource resampling="bilinear">
      <SourceFilename relativeToVRT="1">vesuvius_wgs84.tif</SourceFilename>
      <SourceBand>1</SourceBand>
      <SrcRect xOff="0" yOff="0" xSize="85" ySize="65"/>
      <DstRect xOff="0" yOff="0" xSize="42" ySize="32"/>
    </SimpleSource>
  </VRTRasterBand>
</VRTDataset>


What I noticed is that resolution of the resampled dataset does not change in comparison to the original dataset.

In this case it remains the 0.00083 degrees.
The same thing happens if I reproject the .tif file to some projected coordinate system (UTM for example): resolution remains the same (70 meters for example).

Why is this the case?

Shouldn't the resolution of the resampled dataset be twice of the resolution of the original (non-resampled) dataset, based on the fact that every other cell is removed (original dataset: 85x65, resampled dataset: 42x32)?


I would be very grateful if I could get any kind of reply.

Thank you in advance.

With kind regards,
Didier
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160418/93222d98/attachment.html>

From cgodkin at gmail.com  Mon Apr 18 11:37:32 2016
From: cgodkin at gmail.com (Carl Godkin)
Date: Mon, 18 Apr 2016 11:37:32 -0700
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC1 Available for Review
In-Reply-To: <201604181926.09570.even.rouault@spatialys.com>
References: <201604181926.09570.even.rouault@spatialys.com>
Message-ID: <CAE=8kmmQoeRugG=yxSViZ5a3uM06nLTBSf6qvQHgRHxPOtX24w@mail.gmail.com>

Hi Even,

There's a minor (but possibly confusing) typo in the News file at
https://trac.osgeo.org/gdal/wiki/Release/2.1.0-News

Build(Windows):

   - Add support for Visual Studio 2015 (a.k.a MSVC_VER=1900 or VC 13)


VS2015 is actually VC14, not 13.  For reasons best known to themselves,
Microsoft skipped VC13.

Thanks,

carl

On Mon, Apr 18, 2016 at 10:26 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> I have prepared a GDAL/OGR 2.1.0 release candidate. This is your
> last chance to test before the official release. There have been a number
> of
> non-trivial changes since beta1 (see diff log in Annex)
>
> Peek up an archive among the following ones (by ascending size):
>
>   http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.xz
>   http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.gz
>   http://download.osgeo.org/gdal/2.1.0/gdal210RC1.zip
>
> The gdal-grass plugin is available at :
>
>   http://download.osgeo.org/gdal/2.1.0/gdal-grass-2.1.0RC1.tar.gz
>
> A snapshot of the gdalautotest suite is also available :
>
>   http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.tar.gz
>   http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.zip
>
> And the documentation:
>
>   http://download.osgeo.org/gdal/2.1.0/gdal210doc.zip
>
> The NEWS file is here :
>
>   http://trac.osgeo.org/gdal/wiki/Release/2.1.0-News
>
> I'll call for a vote promoting it to final next week if no serious
> problems are
> reported.
>
> Best regards,
>
> Even
>
> Annex: changes since 2.1.0beta1:
> - New MRF tile format JPNG (PNG or JPEG, depending on transparency)
> - Perl bindings: fix #6431. Perl bindings: #6431. Typemaps for GIntBig and
> GUIntBig. Also fixes to two other typemaps dealing with these types.
> - A few code cleanups in frmts/raw
> - Java bindings: bump minimal java version to 1.5 in case SWIG generates
> anotations (#6433, patch by Bas Couwenberg)
> - Java bindings: disable generation of bindings for GNM as they are not
> ready
> yet (#6434)
> - SQLITE VFS: increase mxPathname to 2048 by default, and provide
> OGR_SQLITE_VFS_MAXPATHNAME config option to be able to configure that
> higher if
> that would be needed. Useful when dealing with very long names like
> /vsicurl/.... with AWS S3 security tokens
> - MBTiles: add capability to open /vsicurl/https:// signed AWS S3 URLs
> - /vsicurl/: by default do not use HEAD request when detecting a AWS S3
> signed
> URL
> - Use GDALCanFileAcceptSidecarFile() in GDALMDReaderManager::GetReader()
> - Fix GDALDefaultOverviews::OverviewScan() to properly use
> GDALCanFileAcceptSidecarFile(), and unbreak nitf_46_jasper test that
> relies on
> the OVERVIEW_FILE mechanism
> - /vsicurl/: manage redirection from public URLs to redirected AWS S3
> signed
> urls, with management of the expiration. Enabled by default. Can be
> disabled
> if CPL_VSIL_CURL_USE_S3_REDIRECT=NO (#6439)
> - configure: remove useless AC_CHECK_FUNC(setlocale) (#6438)
> - PLScenes V0: avoid opening raster to generate dummy .aux.xml
> - SQLITE VFS: do not probe -wal files on /vsicurl/
> - DXF: take into account full definition of spline entity (degree, control
> points, weights and knots) when stroking splines (#6436)
> - Shape: add capability to restore/build a missing .shx file when defining
> SHAPE_RESTORE_SHX to TRUE (#5035)
> - GRASS: fix compilation by moving C++ headers include out of extern C
> scope
> - Define HAVE_CXX11 for C++ >= 2011 compilation environments (#6432).
> - SWIG bindings: add SpatialReference.GetAxisName() and
> SpatialReference.GetAxisOrientation() (#6441)
> - gdal_translate: fix -a_nodata with negative values on rasters that have
> PIXELTYPE=SIGNEDBYTE; fix preserving PIXELTYPE=SIGNEDBYTE with VRT
> - MRF: Allow block counts larger than 2e9 by using GIntBig math
> - SWIG: add SpatialReference.GetAngularUnitsName() (#6445)
> - SWIG: partially revert r33734 and r33736 so that GetFieldIndex(name) and
> GetGeomFieldIndex(name) do not emit errors. They are the only way to check
> if
> a field exists. Particularly Python bindings use them to guess if f['foo']
> is
> an attribute field or geometry field
> - Perl bindings: GetFieldIndex should issue an error. Fix an error in STORE
> method. Add tests.
> - MBTiles: fix so that datasets whose lowest min zoom level is 16 or above
> are
> recognized
> - MBTiles: write minzoom and maxzoom metadata items
> - json_ex_get_object_by_path(): don't make it return intermediate object if
> the full path cannot be solved
> - PLScenes: fix code to work with final V1 API
> - GDALWarpOperation::CreateKernelMask(): fix potential 32 bit integer
> overflow
> when using warp memory value > 2GB (#6448)
> - ogr2ogr: fix inappropriate warning about FileGDB not being the
> appropriate
> target driver, when FileGDB is compiled as a plugin and thus registered
> before
> OpenFileGDB
> - BSB: fix compilation issues with -DBSB_CREATE
> - update mrsid driver build to find MrSID 9.5 dll
> - MBTILES / GPKG: fix generation of files with 1-band paletted input
> dataset.
> Also improve the logic to retrieve color palette when forcing BAND_COUNT=1
> on
> opening (#6450)
> - MSG: fix build with -Werror=format-security (#6451)
> - OGRParseDate(): more strict validation to reject invalide dates (#6452)
> - Fix CPLsscanf() to be conformant regarding how space/tab/... separators
> are
> handled, so as to fix OGR GMT to be able to read coordinates separated by
> tabulations (#6453)
> - gdal_translate: fix random behaviour when -scale is used without source
> bounds (#6455)
> - MBTiles: be robust to invalid 'bounds' at dataset opening (#6458)
> - MySQL: fix Windows build with recent MySQL versions and Visual Studio
> 2015
> (patch by jmckenna, #6457)
> - better handling of various object coordinate systems found in dxf files
> for
> point, line, polyline, spline and ellipse entities. Add anchor position to
> text styles. Remove polygon/polyface mesh parsing from polyline entity
> (#6459)
> - RMF: add read/write access to new RMF format for files larger than 4 Gb
> (version=0x201) (https://github.com/OSGeo/gdal/pull/11)
> - GPKG/MBTiles writer: implement strategy to flush partial_tiles temporary
> database when it becomes too big (#6462)
> - GPKG/MBTiles writer: when writing to GoogleMapsCompatible tiling scheme,
> better deal with source rasters in EPSG:4326 with latitude = +/-90 (#6463)
> - Java bindings: fix typemap for input parameter of type GIntBig (fixes
> GetFeature(long), DeleteFeature(long), etc...) (#6464)
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160418/fb59ba0d/attachment.html>

From even.rouault at spatialys.com  Mon Apr 18 13:25:26 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Apr 2016 22:25:26 +0200
Subject: [gdal-dev] Resampling a raster file with GDAL C#
In-Reply-To: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
References: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
Message-ID: <201604182225.26948.even.rouault@spatialys.com>

Le lundi 18 avril 2016 19:59:32, Didier Bernard a écrit :
> Hello,
> 
> 
> I am trying to resample a .tif raster in C# GDAL in a way that every other
> cell in a row and column is removed.
> 
> Something similar to the lower GDAL command:
> 
>     gdal_translate -outsize 50% 0 input.tif output.tif
> 
> But this command creates a new resampled .tif file.
> While I would like to avoid saving a new .tif file, and if possible just
> resample the dataset.
> 
> It looks like this can be achieved by the use of VRT
> file<http://www.gdal.org/gdal_vrttut.html>.
> 
> Here is one example of a .vrt file, which resamples the .tif file by
> removing the every other cell:
> 
> 
> <VRTDataset rasterXSize="42" rasterYSize="32">
>   <GeoTransform>14.3779166666, 0.000833333333333, 0.0, 40.8404166667, 0.0,
> -0.000833333333333</GeoTransform> <VRTRasterBand dataType="Byte" band="1">
>     <ColorInterp>Gray</ColorInterp>
>     <SimpleSource resampling="bilinear">
>       <SourceFilename relativeToVRT="1">vesuvius_wgs84.tif</SourceFilename>
>       <SourceBand>1</SourceBand>
>       <SrcRect xOff="0" yOff="0" xSize="85" ySize="65"/>
>       <DstRect xOff="0" yOff="0" xSize="42" ySize="32"/>
>     </SimpleSource>
>   </VRTRasterBand>
> </VRTDataset>
> 

It is not clear how you produced this VRT file. If you for example create it 
with gdal_translate -of VRT, you'll see that the resolution is doubled.

> 
> What I noticed is that resolution of the resampled dataset does not change
> in comparison to the original dataset.
> 
> In this case it remains the 0.00083 degrees.
> The same thing happens if I reproject the .tif file to some projected
> coordinate system (UTM for example): resolution remains the same (70
> meters for example).
> 
> Why is this the case?
> 
> Shouldn't the resolution of the resampled dataset be twice of the
> resolution of the original (non-resampled) dataset, based on the fact that
> every other cell is removed (original dataset: 85x65, resampled dataset:
> 42x32)?
> 
> 
> I would be very grateful if I could get any kind of reply.
> 
> Thank you in advance.
> 
> With kind regards,
> Didier

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Apr 18 13:40:07 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Apr 2016 22:40:07 +0200
Subject: [gdal-dev] Resampling a raster file with GDAL C#
In-Reply-To: <AM3PR08MB0103A144DA3EF5E3D000BAD6A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
References: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
 <201604182225.26948.even.rouault@spatialys.com>
 <AM3PR08MB0103A144DA3EF5E3D000BAD6A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
Message-ID: <201604182240.07882.even.rouault@spatialys.com>

Le lundi 18 avril 2016 22:35:42, Didier Bernard a écrit :
> Hi Even,
> 
> I can not use GDAL commands from command prompt. I have to resample my .tif
> by using GDAL C# bindings.
> 
> I manually created the previously shown .vrt file, based on examples from
> GDAL .vrt tutorial page: http://www.gdal.org/gdal_vrttut.html
> 
> I took one example from mentioned page, and replaced the
> dataset.RasterXSize, dataset.RasterYSize and dataset.GetGeoTransform
> values according to the data returned from the original (non-resampled:
> "vesuvius_wgs84.tif") .tif file.
> 
> What is wrong with the XML code of the .VRT file I posted in my previous
> reply?

I'm not sure to understand what you do exactly... I'd recommand you do it 
manally with gdal_translate -of VRT to have a reference VRT, and then modify 
your code until it produces the same result.

> 
> Thank you.
> Didier
> 
> ________________________________________
> From: Even Rouault <even.rouault at spatialys.com>
> Sent: Monday, April 18, 2016 10:25 PM
> To: gdal-dev at lists.osgeo.org
> Cc: Didier Bernard
> Subject: Re: [gdal-dev] Resampling a raster file with GDAL C#
> 
> Le lundi 18 avril 2016 19:59:32, Didier Bernard a écrit :
> > Hello,
> > 
> > 
> > I am trying to resample a .tif raster in C# GDAL in a way that every
> > other cell in a row and column is removed.
> > 
> > Something similar to the lower GDAL command:
> >     gdal_translate -outsize 50% 0 input.tif output.tif
> > 
> > But this command creates a new resampled .tif file.
> > While I would like to avoid saving a new .tif file, and if possible just
> > resample the dataset.
> > 
> > It looks like this can be achieved by the use of VRT
> > file<http://www.gdal.org/gdal_vrttut.html>.
> > 
> > Here is one example of a .vrt file, which resamples the .tif file by
> > removing the every other cell:
> > 
> > 
> > <VRTDataset rasterXSize="42" rasterYSize="32">
> > 
> >   <GeoTransform>14.3779166666, 0.000833333333333, 0.0, 40.8404166667,
> >   0.0,
> > 
> > -0.000833333333333</GeoTransform> <VRTRasterBand dataType="Byte"
> > band="1">
> > 
> >     <ColorInterp>Gray</ColorInterp>
> >     <SimpleSource resampling="bilinear">
> >     
> >       <SourceFilename
> >       relativeToVRT="1">vesuvius_wgs84.tif</SourceFilename>
> >       <SourceBand>1</SourceBand>
> >       <SrcRect xOff="0" yOff="0" xSize="85" ySize="65"/>
> >       <DstRect xOff="0" yOff="0" xSize="42" ySize="32"/>
> >     
> >     </SimpleSource>
> >   
> >   </VRTRasterBand>
> > 
> > </VRTDataset>
> 
> It is not clear how you produced this VRT file. If you for example create
> it with gdal_translate -of VRT, you'll see that the resolution is doubled.
> 
> > What I noticed is that resolution of the resampled dataset does not
> > change in comparison to the original dataset.
> > 
> > In this case it remains the 0.00083 degrees.
> > The same thing happens if I reproject the .tif file to some projected
> > coordinate system (UTM for example): resolution remains the same (70
> > meters for example).
> > 
> > Why is this the case?
> > 
> > Shouldn't the resolution of the resampled dataset be twice of the
> > resolution of the original (non-resampled) dataset, based on the fact
> > that every other cell is removed (original dataset: 85x65, resampled
> > dataset: 42x32)?
> > 
> > 
> > I would be very grateful if I could get any kind of reply.
> > 
> > Thank you in advance.
> > 
> > With kind regards,
> > Didier
> 
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From deedeebernard at hotmail.com  Mon Apr 18 13:35:42 2016
From: deedeebernard at hotmail.com (Didier Bernard)
Date: Mon, 18 Apr 2016 20:35:42 +0000
Subject: [gdal-dev] Resampling a raster file with GDAL C#
In-Reply-To: <201604182225.26948.even.rouault@spatialys.com>
References: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>,
 <201604182225.26948.even.rouault@spatialys.com>
Message-ID: <AM3PR08MB0103A144DA3EF5E3D000BAD6A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>

Hi Even,

I can not use GDAL commands from command prompt. I have to resample my .tif by using GDAL C# bindings.

I manually created the previously shown .vrt file, based on examples from GDAL .vrt tutorial page:
http://www.gdal.org/gdal_vrttut.html

I took one example from mentioned page, and replaced the dataset.RasterXSize, dataset.RasterYSize and dataset.GetGeoTransform values according to the data returned from the original (non-resampled: "vesuvius_wgs84.tif") .tif file.

What is wrong with the XML code of the .VRT file I posted in my previous reply?

Thank you.
Didier

________________________________________
From: Even Rouault <even.rouault at spatialys.com>
Sent: Monday, April 18, 2016 10:25 PM
To: gdal-dev at lists.osgeo.org
Cc: Didier Bernard
Subject: Re: [gdal-dev] Resampling a raster file with GDAL C#

Le lundi 18 avril 2016 19:59:32, Didier Bernard a écrit :
> Hello,
>
>
> I am trying to resample a .tif raster in C# GDAL in a way that every other
> cell in a row and column is removed.
>
> Something similar to the lower GDAL command:
>
>     gdal_translate -outsize 50% 0 input.tif output.tif
>
> But this command creates a new resampled .tif file.
> While I would like to avoid saving a new .tif file, and if possible just
> resample the dataset.
>
> It looks like this can be achieved by the use of VRT
> file<http://www.gdal.org/gdal_vrttut.html>.
>
> Here is one example of a .vrt file, which resamples the .tif file by
> removing the every other cell:
>
>
> <VRTDataset rasterXSize="42" rasterYSize="32">
>   <GeoTransform>14.3779166666, 0.000833333333333, 0.0, 40.8404166667, 0.0,
> -0.000833333333333</GeoTransform> <VRTRasterBand dataType="Byte" band="1">
>     <ColorInterp>Gray</ColorInterp>
>     <SimpleSource resampling="bilinear">
>       <SourceFilename relativeToVRT="1">vesuvius_wgs84.tif</SourceFilename>
>       <SourceBand>1</SourceBand>
>       <SrcRect xOff="0" yOff="0" xSize="85" ySize="65"/>
>       <DstRect xOff="0" yOff="0" xSize="42" ySize="32"/>
>     </SimpleSource>
>   </VRTRasterBand>
> </VRTDataset>
>

It is not clear how you produced this VRT file. If you for example create it
with gdal_translate -of VRT, you'll see that the resolution is doubled.

>
> What I noticed is that resolution of the resampled dataset does not change
> in comparison to the original dataset.
>
> In this case it remains the 0.00083 degrees.
> The same thing happens if I reproject the .tif file to some projected
> coordinate system (UTM for example): resolution remains the same (70
> meters for example).
>
> Why is this the case?
>
> Shouldn't the resolution of the resampled dataset be twice of the
> resolution of the original (non-resampled) dataset, based on the fact that
> every other cell is removed (original dataset: 85x65, resampled dataset:
> 42x32)?
>
>
> I would be very grateful if I could get any kind of reply.
>
> Thank you in advance.
>
> With kind regards,
> Didier

--
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Apr 18 13:53:22 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Apr 2016 22:53:22 +0200
Subject: [gdal-dev] How to consider data types when implementing
	IWriteBlock
In-Reply-To: <1460969466934-5261675.post@n6.nabble.com>
References: <1460473841374-5260901.post@n6.nabble.com>
 <201604122001.13821.even.rouault@spatialys.com>
 <1460969466934-5261675.post@n6.nabble.com>
Message-ID: <201604182253.22271.even.rouault@spatialys.com>

Le lundi 18 avril 2016 10:51:06, jramm a écrit :
> Hi
> I have implemented the write support in the NWT_GRD format, having to make
> a few compromises. I'd like to go through them and see if they are
> reasonable. I have also attached the diff.
> 
> 1. The existing read driver reports 4 bands for a GRD dataset. The first 3
> are essentially 'virtual' - they are RGB bands which are interpreted from
> the single band of data actually on disk using color info in the header.
> When opening in write mode, I have prevented more than 1 band being
> created. Therefore in update mode, you cannot read from the 'virtual'
> bands; it is created with 1 band to which you write the actual data. So
> you have some slightly odd behaviour in that, you open it in `update`
> mode, it has 1 band, you then close and reopen in `read only` mode, it has
> 4 bands. I wonder if it would be better for the read driver to utilize the
> GDAL ColorTable stuff somehow, instead of creating these 'virtual' bands?

GDALColorTable can only be used for index values >= 0, so this is not suitable 
for DEM values.
Perhaps an alternate option would be to expose the color table as a Raster 
Attribute Table, but this is generally less easy to handle (rarely supported 
in user code or GDAL utilities themselves)

I've no strong opinion on if the current behaviour in read-only mode must be 
changed or not. One could imagine an open option to decide it...

> 
> 2. The no data value is fixed on disk as 0; this is then converted to
> -1.e37f by the read driver (as per the vertical mapper grid standard) upon
> reading. On writing, I have allowed setting the no data value to anything,
> and these values are treated as no data when writing. So you may create a
> dataset having set the no data value to e.g. -999. However, when you close
> it and open it in 'read' mode, the nodata value will be reported as -1.e37f

Sounds good.

> 
> 3. The GRD format supports data being written on disk as either 16bit
> unsigned ints or 32bit unsigned ints, In the NWT_GRDRasterBand constructor,
> allowance is made for this, however in the read driver, values are always
> read as unsigned short (suggesting that if data were 32bit ints, we might
> encounter over/underflow).

I guess read support is wrong if indeed values might be serialized as 32bit 
unsigned ints, and 32bit samples should be read in that case... (I don't know 
the format, but that makes sense). I guess collecting a sample dataset might 
be helpful.

> I have done the same in the IWriteBlock, but I
> am wondering if their should be a check to see whether the written value
> should be an `unsigned short` or an `unsigned int`

Skimming through the code, it seems you must provide zmin / zmax to do the 
scaling of floating point elevations to integral values. So either it is user 
provided, or you do a prior statistics computation in CreateCopy() if the 
input dataset hasn't min/max metadata.
In any case, checking overflow and warning if it occurs might be a good idea.

> 
> 4. Spatial Reference. The spatial reference is stored on disk in the
> 'MITAB' format and a conversion function is used in the existing
> GetProjectionRef. A function to convert the other way exists and I use
> this in SetProjection. However, some stuff is obviously lost in the
> conversion as setting the projection with e.g. EPSG:27700 and then reading
> it back loses the EPSG information. Is there a way (using PamDataset
> maybe?) to store the GDAL projection so that GDAL will always recognise it
> correctly, while still writing the NWT_GRD format projection in the
> correct place in the tab/grd file?

Yes using PAM might be an option. Basically our SetProjection() should also 
call GDALPamDataset::SetProjection(). And on reading you first check if 
GDALPamDataset::GetProjectionRef() returns a non-empty string, in which case 
you return it. Otherwise you return the MITAB decoded one.

> 
> Are these reasonable compromises or can it be done better?
> 
> Thanks
> James
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/How-to-consider-data-types-when-implem
> enting-IWriteBlock-tp5260901p5261675.html Sent from the GDAL - Dev mailing
> list archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From deedeebernard at hotmail.com  Mon Apr 18 14:21:02 2016
From: deedeebernard at hotmail.com (Didier Bernard)
Date: Mon, 18 Apr 2016 21:21:02 +0000
Subject: [gdal-dev] Resampling a raster file with GDAL C#
In-Reply-To: <201604182240.07882.even.rouault@spatialys.com>
References: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
 <201604182225.26948.even.rouault@spatialys.com>
 <AM3PR08MB0103A144DA3EF5E3D000BAD6A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>,
 <201604182240.07882.even.rouault@spatialys.com>
Message-ID: <AM3PR08MB0103A82E745B69BBB1AF6B08A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>

Hi Even,

I loaded the initial vesuvius_wgs84.tif file by using C# bindings.
Then I've read the following of its dataset variables and properties: dataset.RasterXSize, dataset.RasterYSize and dataset.GetGeoTransform. Then I took a template .VRT example, and replaced the upper mentioned values in that template. I saved that template with the same name as the initial .tif file: vesuvius_wgs84.vrt. I hope it makes sense now.


    "I'd recommand you do it
    manally with gdal_translate -of VRT to have a reference VRT, and then modify
    your code until it produces the same result."

Are you suggesting to simply convert the .tif file from command prompt by using gdal_translate? Like so:

    "C:/gdalwin32-1.4.1/bin/gdal_translate.exe" -of VRT "C:/vesuvius_wgs84.tif" "C:/vesuvius_wgs84.vrt"

?

And "build" my .vrt file according to: C:/vesuvius_wgs84.vrt?
That won't help me for other .tif files.

Can you show me how to replicate this GDAL command:

    "C:/gdalwin32-1.4.1/bin/gdal_translate.exe" -of VRT "C:/vesuvius_wgs84.tif" "C:/vesuvius_wgs84.vrt"

In GDAL C#?

Thank you.

Didier.

________________________________________
From: Even Rouault <even.rouault at spatialys.com>
Sent: Monday, April 18, 2016 10:40 PM
To: Didier Bernard
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Resampling a raster file with GDAL C#

Le lundi 18 avril 2016 22:35:42, Didier Bernard a écrit :
> Hi Even,
>
> I can not use GDAL commands from command prompt. I have to resample my .tif
> by using GDAL C# bindings.
>
> I manually created the previously shown .vrt file, based on examples from
> GDAL .vrt tutorial page: http://www.gdal.org/gdal_vrttut.html
>
> I took one example from mentioned page, and replaced the
> dataset.RasterXSize, dataset.RasterYSize and dataset.GetGeoTransform
> values according to the data returned from the original (non-resampled:
> "vesuvius_wgs84.tif") .tif file.
>
> What is wrong with the XML code of the .VRT file I posted in my previous
> reply?

I'm not sure to understand what you do exactly... I'd recommand you do it
manally with gdal_translate -of VRT to have a reference VRT, and then modify
your code until it produces the same result.

>
> Thank you.
> Didier
>
> ________________________________________
> From: Even Rouault <even.rouault at spatialys.com>
> Sent: Monday, April 18, 2016 10:25 PM
> To: gdal-dev at lists.osgeo.org
> Cc: Didier Bernard
> Subject: Re: [gdal-dev] Resampling a raster file with GDAL C#
>
> Le lundi 18 avril 2016 19:59:32, Didier Bernard a écrit :
> > Hello,
> >
> >
> > I am trying to resample a .tif raster in C# GDAL in a way that every
> > other cell in a row and column is removed.
> >
> > Something similar to the lower GDAL command:
> >     gdal_translate -outsize 50% 0 input.tif output.tif
> >
> > But this command creates a new resampled .tif file.
> > While I would like to avoid saving a new .tif file, and if possible just
> > resample the dataset.
> >
> > It looks like this can be achieved by the use of VRT
> > file<http://www.gdal.org/gdal_vrttut.html>.
> >
> > Here is one example of a .vrt file, which resamples the .tif file by
> > removing the every other cell:
> >
> >
> > <VRTDataset rasterXSize="42" rasterYSize="32">
> >
> >   <GeoTransform>14.3779166666, 0.000833333333333, 0.0, 40.8404166667,
> >   0.0,
> >
> > -0.000833333333333</GeoTransform> <VRTRasterBand dataType="Byte"
> > band="1">
> >
> >     <ColorInterp>Gray</ColorInterp>
> >     <SimpleSource resampling="bilinear">
> >
> >       <SourceFilename
> >       relativeToVRT="1">vesuvius_wgs84.tif</SourceFilename>
> >       <SourceBand>1</SourceBand>
> >       <SrcRect xOff="0" yOff="0" xSize="85" ySize="65"/>
> >       <DstRect xOff="0" yOff="0" xSize="42" ySize="32"/>
> >
> >     </SimpleSource>
> >
> >   </VRTRasterBand>
> >
> > </VRTDataset>
>
> It is not clear how you produced this VRT file. If you for example create
> it with gdal_translate -of VRT, you'll see that the resolution is doubled.
>
> > What I noticed is that resolution of the resampled dataset does not
> > change in comparison to the original dataset.
> >
> > In this case it remains the 0.00083 degrees.
> > The same thing happens if I reproject the .tif file to some projected
> > coordinate system (UTM for example): resolution remains the same (70
> > meters for example).
> >
> > Why is this the case?
> >
> > Shouldn't the resolution of the resampled dataset be twice of the
> > resolution of the original (non-resampled) dataset, based on the fact
> > that every other cell is removed (original dataset: 85x65, resampled
> > dataset: 42x32)?
> >
> >
> > I would be very grateful if I could get any kind of reply.
> >
> > Thank you in advance.
> >
> > With kind regards,
> > Didier
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

--
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Mon Apr 18 15:39:41 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Mon, 18 Apr 2016 22:39:41 +0000 (UTC)
Subject: [gdal-dev] Resampling a raster file with GDAL C#
References: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
 <201604182225.26948.even.rouault@spatialys.com>
 <AM3PR08MB0103A144DA3EF5E3D000BAD6A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>,
 <201604182240.07882.even.rouault@spatialys.com>
 <AM3PR08MB0103A82E745B69BBB1AF6B08A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
Message-ID: <loom.20160419T001552-956@post.gmane.org>

Didier Bernard <deedeebernard <at> hotmail.com> writes:

 
> Are you suggesting to simply convert the .tif file from command prompt by
using gdal_translate? Like so:
> 
>     "C:/gdalwin32-1.4.1/bin/gdal_translate.exe" -of VRT
"C:/vesuvius_wgs84.tif" "C:/vesuvius_wgs84.vrt"
> 
> ?
> 
> And "build" my .vrt file according to: C:/vesuvius_wgs84.vrt?
> That won't help me for other .tif files

Of course it will help you with all files. When you know what you need to do
with one image you know what you need to do with any other image.

Do something like this:

Take a test image, for example 88x88 pixels. Run these commands:

gdal_translate -of vrt 88.png 88.vrt
gdal_translate -outsize 50% 50% -of vrt 88.png 44.vrt

Check the result:

gdalinfo 88.vrt
Driver: VRT/Virtual Raster
Files: 88.vrt
       88.png
Size is 88, 88
Pixel Size = (1.000000000000000,-1.000000000000000)

gdalinfo 44.vrt
Driver: VRT/Virtual Raster
Files: 44.vrt
       88.png
Size is 44, 44
Pixel Size = (2.000000000000000,-2.000000000000000)

All right, the result is correct, double pixel size and half of the width
and height. Now have a look at the vrt files, find what is essential and
learn to build similar ones from code.

88.vrt

<VRTDataset rasterXSize="88" rasterYSize="88">
  <GeoTransform> 9.9500000000000000e+001, 1.0000000000000000e+000,
0.0000000000000000e+000, 1.0050000000000000e+002,
0.0000000000000000e+000,-1.0000000000000000e+000</GeoTransform>
  <VRTRasterBand dataType="Byte" band="1">
    <ColorInterp>Red</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">88.png</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="88" RasterYSize="88" DataType="Byte"
BlockXSize="88" BlockYSize="1" />
      <SrcRect xOff="0" yOff="0" xSize="88" ySize="88" />
      <DstRect xOff="0" yOff="0" xSize="88" ySize="88" />
    </SimpleSource>
  </VRTRasterBand>

44.vrt

<VRTDataset rasterXSize="44" rasterYSize="44">
  <GeoTransform> 9.9500000000000000e+001, 2.0000000000000000e+000,
0.0000000000000000e+000, 1.0050000000000000e+002,
0.0000000000000000e+000,-2.0000000000000000e+000</GeoTransform>
  <Metadata domain="IMAGE_STRUCTURE">
    <MDI key="INTERLEAVE">PIXEL</MDI>
  </Metadata>
  <VRTRasterBand dataType="Byte" band="1">
    <ColorInterp>Red</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">88.png</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="88" RasterYSize="88" DataType="Byte"
BlockXSize="88" BlockYSize="1" />
      <SrcRect xOff="0" yOff="0" xSize="88" ySize="88" />
      <DstRect xOff="0" yOff="0" xSize="44" ySize="44" />
    </SimpleSource>

Find the differences: The latter seems to differ here:
<VRTDataset rasterXSize="44" rasterYSize="44">
and here
  <GeoTransform> 9.9500000000000000e+001, 2.0000000000000000e+000,
0.0000000000000000e+000, 1.0050000000000000e+002,
0.0000000000000000e+000,-2.0000000000000000e+000</GeoTransform>
and here:
      <DstRect xOff="0" yOff="0" xSize="44" ySize="44" />

I am not a programmer but obviously you are and because programmers tend to
be good at doing some small calculations with numbers I am sure that you can
- find SourceProperties (here RasterXSize="88" RasterYSize="88")
- devide by 2 and feed values to VRTDataset rasterXSize and rasterYSize
- feed the same numbers to DstRect xSize and ySize
- double the pixel size in 2nd and 6th terms of GeoTransform


-Jukka Rahkonen-







From deedeebernard at hotmail.com  Mon Apr 18 16:12:17 2016
From: deedeebernard at hotmail.com (Didier Bernard)
Date: Mon, 18 Apr 2016 23:12:17 +0000
Subject: [gdal-dev] Resampling a raster file with GDAL C#
In-Reply-To: <loom.20160419T001552-956@post.gmane.org>
References: <AM3PR08MB01034E4238E194936605AE5CA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>
 <201604182225.26948.even.rouault@spatialys.com>
 <AM3PR08MB0103A144DA3EF5E3D000BAD6A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>,
 <201604182240.07882.even.rouault@spatialys.com>
 <AM3PR08MB0103A82E745B69BBB1AF6B08A36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>,
 <loom.20160419T001552-956@post.gmane.org>
Message-ID: <AM3PR08MB0103D38C1E5F778ED79644FEA36B0@AM3PR08MB0103.eurprd08.prod.outlook.com>

Hi Jukka,

I really appreciate your suggestion!
Believe it or not, I am not a programmer either.

Manual editing of a .vrt file looks to be far more complicated issue than I have previously thought it would be
There is no "Pixel size" variable inside a .vrt file, but I know it's the second and fourth element of the <GeoTransform> tag. Nevertheless I do not know what do with the <DstInvGeoTransform> and how to edit it.


Maybe I should simply quit struggling with creation of a .vrt file, and go with saving a new .tif file, instead.

In this case, can somebody please provide a C# example of how a dataset can be saved into a new .tif file, but by applying the output of 50% (removing every second cell in a column and row). Basically replicating this GDAL command in C#:

    gdal_translate -outsize 50% 50% input.tif output.tif

?

I actually found some C# examples by googling but they either do not deal with -outsize 50% 50%, or I am using the wrong arguments for the following functions:

    sourceDataset.GetDriver().Create
    sourceDataset.ReadRaster
    finalDataset.WriteRaster

I would be very grateful if somebody would provide just a small C# snippet.

Thank you in advance!

Didier


________________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Jukka Rahkonen <jukka.rahkonen at maanmittauslaitos.fi>
Sent: Tuesday, April 19, 2016 12:39 AM
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Resampling a raster file with GDAL C#

Didier Bernard <deedeebernard <at> hotmail.com> writes:


> Are you suggesting to simply convert the .tif file from command prompt by
using gdal_translate? Like so:
>
>     "C:/gdalwin32-1.4.1/bin/gdal_translate.exe" -of VRT
"C:/vesuvius_wgs84.tif" "C:/vesuvius_wgs84.vrt"
>
> ?
>
> And "build" my .vrt file according to: C:/vesuvius_wgs84.vrt?
> That won't help me for other .tif files

Of course it will help you with all files. When you know what you need to do
with one image you know what you need to do with any other image.

Do something like this:

Take a test image, for example 88x88 pixels. Run these commands:

gdal_translate -of vrt 88.png 88.vrt
gdal_translate -outsize 50% 50% -of vrt 88.png 44.vrt

Check the result:

gdalinfo 88.vrt
Driver: VRT/Virtual Raster
Files: 88.vrt
       88.png
Size is 88, 88
Pixel Size = (1.000000000000000,-1.000000000000000)

gdalinfo 44.vrt
Driver: VRT/Virtual Raster
Files: 44.vrt
       88.png
Size is 44, 44
Pixel Size = (2.000000000000000,-2.000000000000000)

All right, the result is correct, double pixel size and half of the width
and height. Now have a look at the vrt files, find what is essential and
learn to build similar ones from code.

88.vrt

<VRTDataset rasterXSize="88" rasterYSize="88">
  <GeoTransform> 9.9500000000000000e+001, 1.0000000000000000e+000,
0.0000000000000000e+000, 1.0050000000000000e+002,
0.0000000000000000e+000,-1.0000000000000000e+000</GeoTransform>
  <VRTRasterBand dataType="Byte" band="1">
    <ColorInterp>Red</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">88.png</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="88" RasterYSize="88" DataType="Byte"
BlockXSize="88" BlockYSize="1" />
      <SrcRect xOff="0" yOff="0" xSize="88" ySize="88" />
      <DstRect xOff="0" yOff="0" xSize="88" ySize="88" />
    </SimpleSource>
  </VRTRasterBand>

44.vrt

<VRTDataset rasterXSize="44" rasterYSize="44">
  <GeoTransform> 9.9500000000000000e+001, 2.0000000000000000e+000,
0.0000000000000000e+000, 1.0050000000000000e+002,
0.0000000000000000e+000,-2.0000000000000000e+000</GeoTransform>
  <Metadata domain="IMAGE_STRUCTURE">
    <MDI key="INTERLEAVE">PIXEL</MDI>
  </Metadata>
  <VRTRasterBand dataType="Byte" band="1">
    <ColorInterp>Red</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">88.png</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="88" RasterYSize="88" DataType="Byte"
BlockXSize="88" BlockYSize="1" />
      <SrcRect xOff="0" yOff="0" xSize="88" ySize="88" />
      <DstRect xOff="0" yOff="0" xSize="44" ySize="44" />
    </SimpleSource>

Find the differences: The latter seems to differ here:
<VRTDataset rasterXSize="44" rasterYSize="44">
and here
  <GeoTransform> 9.9500000000000000e+001, 2.0000000000000000e+000,
0.0000000000000000e+000, 1.0050000000000000e+002,
0.0000000000000000e+000,-2.0000000000000000e+000</GeoTransform>
and here:
      <DstRect xOff="0" yOff="0" xSize="44" ySize="44" />

I am not a programmer but obviously you are and because programmers tend to
be good at doing some small calculations with numbers I am sure that you can
- find SourceProperties (here RasterXSize="88" RasterYSize="88")
- devide by 2 and feed values to VRTDataset rasterXSize and rasterYSize
- feed the same numbers to DstRect xSize and ySize
- double the pixel size in 2nd and 6th terms of GeoTransform


-Jukka Rahkonen-






_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev

From jamessramm at gmail.com  Tue Apr 19 02:22:50 2016
From: jamessramm at gmail.com (jramm)
Date: Tue, 19 Apr 2016 02:22:50 -0700 (PDT)
Subject: [gdal-dev] How to consider data types when implementing
	IWriteBlock
In-Reply-To: <201604182253.22271.even.rouault@spatialys.com>
References: <1460473841374-5260901.post@n6.nabble.com>
 <201604122001.13821.even.rouault@spatialys.com>
 <1460969466934-5261675.post@n6.nabble.com>
 <201604182253.22271.even.rouault@spatialys.com>
Message-ID: <1461057770339-5261827.post@n6.nabble.com>

Even Rouault-2 wrote
> Skimming through the code, it seems you must provide zmin / zmax to do the 
> scaling of floating point elevations to integral values. So either it is
> user 
> provided, or you do a prior statistics computation in CreateCopy() if the 
> input dataset hasn't min/max metadata.
> In any case, checking overflow and warning if it occurs might be a good
> idea.

So far, I haven't implemented CreateCopy, although this would probably be a
very good idea to allow min/max to be set automatically & properly.
In Create(), it just defaults the min/max to SHRT_MIN and SHRT_MAX. Would
the creation options be a good way to expose it to the user, to be set
explicitly?


Even Rouault-2 wrote
> Yes using PAM might be an option. Basically our SetProjection() should
> also 
> call GDALPamDataset::SetProjection(). And on reading you first check if 
> GDALPamDataset::GetProjectionRef() returns a non-empty string, in which
> case 
> you return it. Otherwise you return the MITAB decoded one. 

Great. I will try doing this. 



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/How-to-consider-data-types-when-implementing-IWriteBlock-tp5260901p5261827.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Tue Apr 19 03:05:37 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Apr 2016 12:05:37 +0200
Subject: [gdal-dev] How to consider data types when implementing
	IWriteBlock
In-Reply-To: <1461057770339-5261827.post@n6.nabble.com>
References: <1460473841374-5260901.post@n6.nabble.com>
 <201604182253.22271.even.rouault@spatialys.com>
 <1461057770339-5261827.post@n6.nabble.com>
Message-ID: <201604191205.40233.even.rouault@spatialys.com>

Le mardi 19 avril 2016 11:22:50, jramm a écrit :
> Even Rouault-2 wrote
> 
> > Skimming through the code, it seems you must provide zmin / zmax to do
> > the scaling of floating point elevations to integral values. So either
> > it is user
> > provided, or you do a prior statistics computation in CreateCopy() if the
> > input dataset hasn't min/max metadata.
> > In any case, checking overflow and warning if it occurs might be a good
> > idea.
> 
> So far, I haven't implemented CreateCopy, although this would probably be a
> very good idea to allow min/max to be set automatically & properly.
> In Create(), it just defaults the min/max to SHRT_MIN and SHRT_MAX. Would
> the creation options be a good way to expose it to the user, to be set
> explicitly?

For Create() mode usage, yes it seems that would be a good idea.

Your CreateCopy() implementation could actually be just :

- tmpOptions = CSLDuplicate(creationOptions)
- if zmin/zmax creation options not provided, get them from the input dataset, 
and add them to tmpOptions
- call DefaultCreateCopy() with tmpOptions
- CSLDestroy(tmpOptions)

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Apr 20 02:03:19 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Apr 2016 11:03:19 +0200
Subject: [gdal-dev] Fwd: MBTiles Write support
In-Reply-To: <201604181755.57891.even.rouault@spatialys.com>
References: <CA+XvxWBF2-7TtEVKb2KeSbcJPbjBHwjEk=-MzBvE9J4d-9K-hA@mail.gmail.com>
 <CA+XvxWBtDht=a+oa0-Hehuru_FZRvwBbsHoSAF3k26LjraE-FQ@mail.gmail.com>
 <201604181755.57891.even.rouault@spatialys.com>
Message-ID: <201604201103.20360.even.rouault@spatialys.com>

Le lundi 18 avril 2016 17:55:57, Even Rouault a écrit :
> Lorenzo,
> 
> > The command I used is:
> > 
> > \>gdal_translate mosaic.tif full_def9.mbtiles -of MBTILES -expand rgb -co
> > TILE_FORMAT=PNG8 -co ZLEVEL=9
> > Input file size is 645661, 308112
> > 0...10...20...30...40...50...60...70...80ERROR 1: Failure when inserting
> > partial tile (row=759306,col=1099566) at zoom_level=21 : database or disk
> > is full
> > ERROR 1: full_def9.mbtiles, band 4: An error occurred while writing a
> > dirty block
> > ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
> > zoom_level=21 : database disk image is malformed
> > ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
> > zoom_level=21 : database disk image is malformed
> > ERROR 1: Failure when inserting partial tile (row=759306,col=1099566) at
> > zoom_level=21 : database disk image is malformed
> > ERROR 1: Failure when inserting partial tile (row=759306,col=1099576) at
> > zoom_level=21 : database disk image is malformed
> > 
> > NOTE: without the "-expand rgb" option, all the output tiles will be
> > black, gdal_translate will warn you.
> > 
> > The process failed due to insufficient disk space (70Gb free was not
> > enough) but the resulting incomplete file (7Gb) looks good.
> > Most of the space was used by the "partial_tiles" database, is there any
> > settings I can use to force a more frequent "flush" of the tiles in the
> > main database?
> 
> I've pushed a fix for that per https://trac.osgeo.org/gdal/ticket/6462

With the fix, I managed to convert a VRT whose dimensions and spatial 
registration is the same as yours to a MBTiles (which is 333476 x 160000 
large) at level 20. The temporary database didn't grow above 1 GB.

I'm thinking it might probably be possible to improve the conversion process 
to not use the temp DB at all (which would be likely result in significant 
speedup as quick profiling showed that the write activity in the temp DB is 
quite intense) by aligning the origin of the destination raster to tiles 
boundaries during the conversion, so that GDAL blocks and MBTiles tiles aren't 
shifted. For a later improvement...

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lucadeluge at gmail.com  Wed Apr 20 03:03:27 2016
From: lucadeluge at gmail.com (Luca Delucchi)
Date: Wed, 20 Apr 2016 12:03:27 +0200
Subject: [gdal-dev] geospatialPDF DPI and EXTRA_IMAGES
In-Reply-To: <201505191037.50818.even.rouault@spatialys.com>
References: <CAK4m-3ynQUeSse+TwXYknToQjbT4BS5cPQJMMszh=4Yb_UVncA@mail.gmail.com>
 <201505191037.50818.even.rouault@spatialys.com>
Message-ID: <CAK4m-3xGrwv_nf8_nzYTR2xD83suME77_37ve9+7EUKN9W8GJA@mail.gmail.com>

On 19 May 2015 at 10:37, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Luca,
>

Hi Even,

I'm back on this topic because it seems that EXTRA_IMAGES is not
working (at least for me) with GDAL 1.11.3

ogr2ogr -f PDF -lco COMPRESS=Deflate -lco DPI=72 -lco WRITE_INFO=NO
-lco EXTRA_IMAGES=23hq.jpg,100,100,1 /tmp/provaogr2ogr.pdf idrlag.shp

> According to the doc, "x and y are in user units from the lower left corner of
> the page"
>
> If you set a DPI < 72, GDAL will correct it to DPI = 72 since AFAIR, this is
> the minimum accepted value by the PDF spec (not sure of that though).
>
> And since 1 user unit  = DPI / 72, if you increase the DPI, you must divide
> the offset by DPI / 72 so that the image stays at the same location in term of
> pixels.
>
> From the PDF spec:
> """UserUnit
> number
> (Optional; PDF 1.6) A positive number giving the size of default user space
> units, in multiples of 1 ⁄ 72 inch. The range of supported values is
> implementation-dependent; see implementation note 177 in Appendix H.
> Default value: 1.0 (user unit is 1 ⁄ 72 inch).
> """
>

Thanks for explanation, it is clear and it was working sometime ago

> Even
>

-- 
ciao
Luca

www.lucadelu.org

From even.rouault at spatialys.com  Wed Apr 20 03:36:40 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Apr 2016 12:36:40 +0200
Subject: [gdal-dev] geospatialPDF DPI and EXTRA_IMAGES
In-Reply-To: <CAK4m-3ymuKCSy+_pGJ=BfD0mHdMeaa97t4aQ-xTmOtKvTksnHQ@mail.gmail.com>
References: <CAK4m-3ynQUeSse+TwXYknToQjbT4BS5cPQJMMszh=4Yb_UVncA@mail.gmail.com>
 <CAK4m-3xGrwv_nf8_nzYTR2xD83suME77_37ve9+7EUKN9W8GJA@mail.gmail.com>
 <CAK4m-3ymuKCSy+_pGJ=BfD0mHdMeaa97t4aQ-xTmOtKvTksnHQ@mail.gmail.com>
Message-ID: <201604201236.41101.even.rouault@spatialys.com>

Le mercredi 20 avril 2016 12:06:55, Luca Delucchi a écrit :
> On 20 April 2016 at 12:03, Luca Delucchi <lucadeluge at gmail.com> wrote:
> > On 19 May 2015 at 10:37, Even Rouault <even.rouault at spatialys.com> wrote:
> >> Luca,
> > 
> > Hi Even,
> > 
> > I'm back on this topic because it seems that EXTRA_IMAGES is not
> > working (at least for me) with GDAL 1.11.3
> > 
> > ogr2ogr -f PDF -lco COMPRESS=Deflate -lco DPI=72 -lco WRITE_INFO=NO
> > -lco EXTRA_IMAGES=23hq.jpg,100,100,1 /tmp/provaogr2ogr.pdf idrlag.shp
> 
Those options are supported as *dataset* creation options, so you have to use 
-dsco instea of -lco
I've just commited an improvement in trunk so that you will now get a warning.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From SGONG at mdacorporation.com  Wed Apr 20 09:59:43 2016
From: SGONG at mdacorporation.com (Shawn Gong)
Date: Wed, 20 Apr 2016 16:59:43 +0000
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC1 link error
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC36BA9979@exbermd02.ds.mda.ca>

Hi Even,

I tried to compile 2.1.0 RC1 and got this link error:
  link /nologo /dll /INCLUDE:_OSRValidate  /INCLUDE:_OPTGetProjectionMethods  /INCLUDE:_OGR_G_GetPointCount  /INCLUDE:_OGRRegisterAll /INCLUDE:_GDALSimpleImageWarp at 36  /INCLUDE:_GDALReprojectImage at 48  /INCLUDE:_GDALComputeMedianCutPCT at 32  /INCLUDE:_GDALDitherRGB2PCT at 28  /INCLUDE:_OCTNewCoordinateTransformation at 8 port\*.obj gcore\*.obj alg\*.obj frmts\o\*.obj ogr\ogrsf_frmts\ogrsf_frmts.libogr\ogr.lib gnm\*.obj gnm\gnm_frmts\o\*.obj   apps\commonutils.obj apps\gdalinfo_lib.obj apps\gdal_translate_lib.obj apps\gdalwarp_lib.obj apps\ogr2ogr_lib.obj apps\gdaldem_lib.obj apps\nearblack_lib.obj apps\gdal_grid_lib.obj apps\gdal_rasterize_lib.obj apps\gdalbuildvrt_lib.obj  C:\build2\ogdi-3.2.0.beta2\lib\win32\
ogdi.lib  C:\build2\ogdi-3.2.0.beta2\lib\win32\zlib_ogdi32.lib  "C:\build2\expat-2.0.1"/win32/bin/Debug/libexpat.lib  "C:\Program Files (x86)\PostgreSQL\9.2\lib\libpq.lib" wsock32.lib  C:\build2\libecwj2-3.3\Source\NCSBuildQmake\Debug\libecwj2.lib       C:\build2\netcdf-3.6.1\netcdf.lib     C:\build2\proj-4.6.1\src\proj_i.lib    C:\build2\geos-3.3.1\src\geos_c_i.lib C:\build2\HDF5-188-win32-vs2008\dll\hdf5dll.lib       C:\build2\curl-7.21.0\lib\DLL-Release\libcurl_imp.lib wsock32.lib wldap32.lib winmm.lib  C:\build2\kakadu-6.4.1\lib_x86\kdu_v64R.lib   odbc32.lib odbccp32.lib user32.lib C:\build2\jasper-1.900.1.uuid\src\msvc\win32_release\libjasper.lib                       ws2_32.lib gcore\Version.res  /out:gdal201.dll /implib:gdal_i.lib
 
   Creating library gdal_i.lib and object gdal_i.expcpl_vsil_gzip.obj : error LNK2019: unresolved external symbol _inflateCopy referenced in function "private: int __thiscall VSIGZipHandle::gzseek(unsigned __int64,int)" (?gzseek at VSIGZipHandle@@AAEH_KH at Z)
gdal201.dll : fatal error LNK1120: 1 unresolved externals
 
NMAKE : fatal error U1077: '"C:\Program Files (x86)\Microsoft Visual Studio 9.0\
VC\BIN\link.EXE"' : return code '0x460'


BTW, the dll version is gdal201.dll, not reflecting the 2.1.0

Thanks,
Shawn

________________________________________
From: gdal-dev [gdal-dev-bounces at lists.osgeo.org] on behalf of Even Rouault [even.rouault at spatialys.com]
Sent: April-18-16 1:26 PM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC1 Available for Review

Hi,

I have prepared a GDAL/OGR 2.1.0 release candidate. This is your
last chance to test before the official release. There have been a number of
non-trivial changes since beta1 (see diff log in Annex)

Peek up an archive among the following ones (by ascending size):

  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.xz
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdal210RC1.zip

The gdal-grass plugin is available at :

  http://download.osgeo.org/gdal/2.1.0/gdal-grass-2.1.0RC1.tar.gz

A snapshot of the gdalautotest suite is also available :

  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.zip

And the documentation:

  http://download.osgeo.org/gdal/2.1.0/gdal210doc.zip

The NEWS file is here :

  http://trac.osgeo.org/gdal/wiki/Release/2.1.0-News

I'll call for a vote promoting it to final next week if no serious problems are
reported.

Best regards,

Even

Annex: changes since 2.1.0beta1:
- New MRF tile format JPNG (PNG or JPEG, depending on transparency)
- Perl bindings: fix #6431. Perl bindings: #6431. Typemaps for GIntBig and
GUIntBig. Also fixes to two other typemaps dealing with these types.
- A few code cleanups in frmts/raw
- Java bindings: bump minimal java version to 1.5 in case SWIG generates
anotations (#6433, patch by Bas Couwenberg)
- Java bindings: disable generation of bindings for GNM as they are not ready
yet (#6434)
- SQLITE VFS: increase mxPathname to 2048 by default, and provide
OGR_SQLITE_VFS_MAXPATHNAME config option to be able to configure that higher if
that would be needed. Useful when dealing with very long names like
/vsicurl/.... with AWS S3 security tokens
- MBTiles: add capability to open /vsicurl/https:// signed AWS S3 URLs
- /vsicurl/: by default do not use HEAD request when detecting a AWS S3 signed
URL
- Use GDALCanFileAcceptSidecarFile() in GDALMDReaderManager::GetReader()
- Fix GDALDefaultOverviews::OverviewScan() to properly use
GDALCanFileAcceptSidecarFile(), and unbreak nitf_46_jasper test that relies on
the OVERVIEW_FILE mechanism
- /vsicurl/: manage redirection from public URLs to redirected AWS S3 signed
urls, with management of the expiration. Enabled by default. Can be disabled
if CPL_VSIL_CURL_USE_S3_REDIRECT=NO (#6439)
- configure: remove useless AC_CHECK_FUNC(setlocale) (#6438)
- PLScenes V0: avoid opening raster to generate dummy .aux.xml
- SQLITE VFS: do not probe -wal files on /vsicurl/
- DXF: take into account full definition of spline entity (degree, control
points, weights and knots) when stroking splines (#6436)
- Shape: add capability to restore/build a missing .shx file when defining
SHAPE_RESTORE_SHX to TRUE (#5035)
- GRASS: fix compilation by moving C++ headers include out of extern C scope
- Define HAVE_CXX11 for C++ >= 2011 compilation environments (#6432).
- SWIG bindings: add SpatialReference.GetAxisName() and
SpatialReference.GetAxisOrientation() (#6441)
- gdal_translate: fix -a_nodata with negative values on rasters that have
PIXELTYPE=SIGNEDBYTE; fix preserving PIXELTYPE=SIGNEDBYTE with VRT
- MRF: Allow block counts larger than 2e9 by using GIntBig math
- SWIG: add SpatialReference.GetAngularUnitsName() (#6445)
- SWIG: partially revert r33734 and r33736 so that GetFieldIndex(name) and
GetGeomFieldIndex(name) do not emit errors. They are the only way to check if
a field exists. Particularly Python bindings use them to guess if f['foo'] is
an attribute field or geometry field
- Perl bindings: GetFieldIndex should issue an error. Fix an error in STORE
method. Add tests.
- MBTiles: fix so that datasets whose lowest min zoom level is 16 or above are
recognized
- MBTiles: write minzoom and maxzoom metadata items
- json_ex_get_object_by_path(): don't make it return intermediate object if
the full path cannot be solved
- PLScenes: fix code to work with final V1 API
- GDALWarpOperation::CreateKernelMask(): fix potential 32 bit integer overflow
when using warp memory value > 2GB (#6448)
- ogr2ogr: fix inappropriate warning about FileGDB not being the appropriate
target driver, when FileGDB is compiled as a plugin and thus registered before
OpenFileGDB
- BSB: fix compilation issues with -DBSB_CREATE
- update mrsid driver build to find MrSID 9.5 dll
- MBTILES / GPKG: fix generation of files with 1-band paletted input dataset.
Also improve the logic to retrieve color palette when forcing BAND_COUNT=1 on
opening (#6450)
- MSG: fix build with -Werror=format-security (#6451)
- OGRParseDate(): more strict validation to reject invalide dates (#6452)
- Fix CPLsscanf() to be conformant regarding how space/tab/... separators are
handled, so as to fix OGR GMT to be able to read coordinates separated by
tabulations (#6453)
- gdal_translate: fix random behaviour when -scale is used without source
bounds (#6455)
- MBTiles: be robust to invalid 'bounds' at dataset opening (#6458)
- MySQL: fix Windows build with recent MySQL versions and Visual Studio 2015
(patch by jmckenna, #6457)
- better handling of various object coordinate systems found in dxf files for
point, line, polyline, spline and ellipse entities. Add anchor position to
text styles. Remove polygon/polyface mesh parsing from polyline entity (#6459)
- RMF: add read/write access to new RMF format for files larger than 4 Gb
(version=0x201) (https://github.com/OSGeo/gdal/pull/11)
- GPKG/MBTiles writer: implement strategy to flush partial_tiles temporary
database when it becomes too big (#6462)
- GPKG/MBTiles writer: when writing to GoogleMapsCompatible tiling scheme,
better deal with source rasters in EPSG:4326 with latitude = +/-90 (#6463)
- Java bindings: fix typemap for input parameter of type GIntBig (fixes
GetFeature(long), DeleteFeature(long), etc...) (#6464)


--
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev

From even.rouault at spatialys.com  Wed Apr 20 10:05:54 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Apr 2016 19:05:54 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC1 link error
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC36BA9979@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC36BA9979@exbermd02.ds.mda.ca>
Message-ID: <201604201905.54901.even.rouault@spatialys.com>

Le mercredi 20 avril 2016 18:59:43, Shawn Gong a écrit :
> Hi Even,
> 
> I tried to compile 2.1.0 RC1 and got this link error:
>   link /nologo /dll /INCLUDE:_OSRValidate 
> /INCLUDE:_OPTGetProjectionMethods  /INCLUDE:_OGR_G_GetPointCount 
> /INCLUDE:_OGRRegisterAll /INCLUDE:_GDALSimpleImageWarp at 36 
> /INCLUDE:_GDALReprojectImage at 48  /INCLUDE:_GDALComputeMedianCutPCT at 32 
> /INCLUDE:_GDALDitherRGB2PCT at 28  /INCLUDE:_OCTNewCoordinateTransformation at 8
> port\*.obj gcore\*.obj alg\*.obj frmts\o\*.obj
> ogr\ogrsf_frmts\ogrsf_frmts.libogr\ogr.lib gnm\*.obj gnm\gnm_frmts\o\*.obj
>   apps\commonutils.obj apps\gdalinfo_lib.obj apps\gdal_translate_lib.obj
> apps\gdalwarp_lib.obj apps\ogr2ogr_lib.obj apps\gdaldem_lib.obj
> apps\nearblack_lib.obj apps\gdal_grid_lib.obj apps\gdal_rasterize_lib.obj
> apps\gdalbuildvrt_lib.obj  C:\build2\ogdi-3.2.0.beta2\lib\win32\ ogdi.lib 
> C:\build2\ogdi-3.2.0.beta2\lib\win32\zlib_ogdi32.lib 
> "C:\build2\expat-2.0.1"/win32/bin/Debug/libexpat.lib  "C:\Program Files
> (x86)\PostgreSQL\9.2\lib\libpq.lib" wsock32.lib 
> C:\build2\libecwj2-3.3\Source\NCSBuildQmake\Debug\libecwj2.lib      
> C:\build2\netcdf-3.6.1\netcdf.lib     C:\build2\proj-4.6.1\src\proj_i.lib 
>   C:\build2\geos-3.3.1\src\geos_c_i.lib
> C:\build2\HDF5-188-win32-vs2008\dll\hdf5dll.lib      
> C:\build2\curl-7.21.0\lib\DLL-Release\libcurl_imp.lib wsock32.lib
> wldap32.lib winmm.lib  C:\build2\kakadu-6.4.1\lib_x86\kdu_v64R.lib  
> odbc32.lib odbccp32.lib user32.lib
> C:\build2\jasper-1.900.1.uuid\src\msvc\win32_release\libjasper.lib        
>               ws2_32.lib gcore\Version.res  /out:gdal201.dll
> /implib:gdal_i.lib
> 
>    Creating library gdal_i.lib and object gdal_i.expcpl_vsil_gzip.obj :
> error LNK2019: unresolved external symbol _inflateCopy referenced in
> function "private: int __thiscall VSIGZipHandle::gzseek(unsigned
> __int64,int)" (?gzseek at VSIGZipHandle@@AAEH_KH at Z) gdal201.dll : fatal error
> LNK1120: 1 unresolved externals
> 
> NMAKE : fatal error U1077: '"C:\Program Files (x86)\Microsoft Visual Studio
> 9.0\ VC\BIN\link.EXE"' : return code '0x460'

How did you configure GDAL regarding zlib ? Seems you are using external C:
\build2\ogdi-3.2.0.beta2\lib\win32\zlib_ogdi32.lib, perhaps something wrong 
with it ?

> 
> 
> BTW, the dll version is gdal201.dll, not reflecting the 2.1.0

That's intended. The convention is gdalXYY.dll where X is the major number (2) 
and YY the minor number (01).

> 
> Thanks,
> Shawn
> 
> ________________________________________
> From: gdal-dev [gdal-dev-bounces at lists.osgeo.org] on behalf of Even Rouault
> [even.rouault at spatialys.com] Sent: April-18-16 1:26 PM
> To: gdal-dev at lists.osgeo.org
> Subject: [gdal-dev] GDAL/OGR 2.1.0 RC1 Available for Review
> 
> Hi,
> 
> I have prepared a GDAL/OGR 2.1.0 release candidate. This is your
> last chance to test before the official release. There have been a number
> of non-trivial changes since beta1 (see diff log in Annex)
> 
> Peek up an archive among the following ones (by ascending size):
> 
>   http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.xz
>   http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC1.tar.gz
>   http://download.osgeo.org/gdal/2.1.0/gdal210RC1.zip
> 
> The gdal-grass plugin is available at :
> 
>   http://download.osgeo.org/gdal/2.1.0/gdal-grass-2.1.0RC1.tar.gz
> 
> A snapshot of the gdalautotest suite is also available :
> 
>   http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.tar.gz
>   http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC1.zip
> 
> And the documentation:
> 
>   http://download.osgeo.org/gdal/2.1.0/gdal210doc.zip
> 
> The NEWS file is here :
> 
>   http://trac.osgeo.org/gdal/wiki/Release/2.1.0-News
> 
> I'll call for a vote promoting it to final next week if no serious problems
> are reported.
> 
> Best regards,
> 
> Even
> 
> Annex: changes since 2.1.0beta1:
> - New MRF tile format JPNG (PNG or JPEG, depending on transparency)
> - Perl bindings: fix #6431. Perl bindings: #6431. Typemaps for GIntBig and
> GUIntBig. Also fixes to two other typemaps dealing with these types.
> - A few code cleanups in frmts/raw
> - Java bindings: bump minimal java version to 1.5 in case SWIG generates
> anotations (#6433, patch by Bas Couwenberg)
> - Java bindings: disable generation of bindings for GNM as they are not
> ready yet (#6434)
> - SQLITE VFS: increase mxPathname to 2048 by default, and provide
> OGR_SQLITE_VFS_MAXPATHNAME config option to be able to configure that
> higher if that would be needed. Useful when dealing with very long names
> like /vsicurl/.... with AWS S3 security tokens
> - MBTiles: add capability to open /vsicurl/https:// signed AWS S3 URLs
> - /vsicurl/: by default do not use HEAD request when detecting a AWS S3
> signed URL
> - Use GDALCanFileAcceptSidecarFile() in GDALMDReaderManager::GetReader()
> - Fix GDALDefaultOverviews::OverviewScan() to properly use
> GDALCanFileAcceptSidecarFile(), and unbreak nitf_46_jasper test that relies
> on the OVERVIEW_FILE mechanism
> - /vsicurl/: manage redirection from public URLs to redirected AWS S3
> signed urls, with management of the expiration. Enabled by default. Can be
> disabled if CPL_VSIL_CURL_USE_S3_REDIRECT=NO (#6439)
> - configure: remove useless AC_CHECK_FUNC(setlocale) (#6438)
> - PLScenes V0: avoid opening raster to generate dummy .aux.xml
> - SQLITE VFS: do not probe -wal files on /vsicurl/
> - DXF: take into account full definition of spline entity (degree, control
> points, weights and knots) when stroking splines (#6436)
> - Shape: add capability to restore/build a missing .shx file when defining
> SHAPE_RESTORE_SHX to TRUE (#5035)
> - GRASS: fix compilation by moving C++ headers include out of extern C
> scope - Define HAVE_CXX11 for C++ >= 2011 compilation environments
> (#6432). - SWIG bindings: add SpatialReference.GetAxisName() and
> SpatialReference.GetAxisOrientation() (#6441)
> - gdal_translate: fix -a_nodata with negative values on rasters that have
> PIXELTYPE=SIGNEDBYTE; fix preserving PIXELTYPE=SIGNEDBYTE with VRT
> - MRF: Allow block counts larger than 2e9 by using GIntBig math
> - SWIG: add SpatialReference.GetAngularUnitsName() (#6445)
> - SWIG: partially revert r33734 and r33736 so that GetFieldIndex(name) and
> GetGeomFieldIndex(name) do not emit errors. They are the only way to check
> if a field exists. Particularly Python bindings use them to guess if
> f['foo'] is an attribute field or geometry field
> - Perl bindings: GetFieldIndex should issue an error. Fix an error in STORE
> method. Add tests.
> - MBTiles: fix so that datasets whose lowest min zoom level is 16 or above
> are recognized
> - MBTiles: write minzoom and maxzoom metadata items
> - json_ex_get_object_by_path(): don't make it return intermediate object if
> the full path cannot be solved
> - PLScenes: fix code to work with final V1 API
> - GDALWarpOperation::CreateKernelMask(): fix potential 32 bit integer
> overflow when using warp memory value > 2GB (#6448)
> - ogr2ogr: fix inappropriate warning about FileGDB not being the
> appropriate target driver, when FileGDB is compiled as a plugin and thus
> registered before OpenFileGDB
> - BSB: fix compilation issues with -DBSB_CREATE
> - update mrsid driver build to find MrSID 9.5 dll
> - MBTILES / GPKG: fix generation of files with 1-band paletted input
> dataset. Also improve the logic to retrieve color palette when forcing
> BAND_COUNT=1 on opening (#6450)
> - MSG: fix build with -Werror=format-security (#6451)
> - OGRParseDate(): more strict validation to reject invalide dates (#6452)
> - Fix CPLsscanf() to be conformant regarding how space/tab/... separators
> are handled, so as to fix OGR GMT to be able to read coordinates separated
> by tabulations (#6453)
> - gdal_translate: fix random behaviour when -scale is used without source
> bounds (#6455)
> - MBTiles: be robust to invalid 'bounds' at dataset opening (#6458)
> - MySQL: fix Windows build with recent MySQL versions and Visual Studio
> 2015 (patch by jmckenna, #6457)
> - better handling of various object coordinate systems found in dxf files
> for point, line, polyline, spline and ellipse entities. Add anchor
> position to text styles. Remove polygon/polyface mesh parsing from
> polyline entity (#6459) - RMF: add read/write access to new RMF format for
> files larger than 4 Gb (version=0x201)
> (https://github.com/OSGeo/gdal/pull/11)
> - GPKG/MBTiles writer: implement strategy to flush partial_tiles temporary
> database when it becomes too big (#6462)
> - GPKG/MBTiles writer: when writing to GoogleMapsCompatible tiling scheme,
> better deal with source rasters in EPSG:4326 with latitude = +/-90 (#6463)
> - Java bindings: fix typemap for input parameter of type GIntBig (fixes
> GetFeature(long), DeleteFeature(long), etc...) (#6464)
> 
> 
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Thu Apr 21 11:43:50 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 21 Apr 2016 15:43:50 -0300
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC1 Available for Review
In-Reply-To: <201604181926.09570.even.rouault@spatialys.com>
References: <201604181926.09570.even.rouault@spatialys.com>
Message-ID: <57191F66.2020408@gatewaygeomatics.com>

On 2016-04-18 2:26 PM, Even Rouault wrote:
> Hi,
>
> I have prepared a GDAL/OGR 2.1.0 release candidate. This is your
> last chance to test before the official release. There have been a number of
> non-trivial changes since beta1 (see diff log in Annex)
>

Things are working well here with today's GDAL trunk and Visual Studio 2015.

-jeff




-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/





From even.rouault at spatialys.com  Thu Apr 21 12:52:02 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Apr 2016 21:52:02 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC2 Available for Review
Message-ID: <201604212152.02555.even.rouault@spatialys.com>

Hi,

I've issued a new RC to fix a trunk regression in the OGR VRT driver.

Updated archives :
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC2.tar.xz
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC2.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdal210RC2.zip
  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC2.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC2.zip

Changes since RC1:

- NEWS: s/VC 13/VC 14/
- XYZ: be more robust to not exactly equal X and Y spacing (#6461)
- gdal_calc.py: Add * from gdalnumeric to gdal_calc.py eval namespace again, 
now in a clean way, to fix 2.0 regression that made for examle 'log10(A)' to no 
longer work (https://github.com/OSGeo/gdal/pull/121)
- gdal_rasterize: accept NaN as a valid value for -init / -burn (#6467)
- OGR VRT: do not advertize M geometry type on values of <GeometryType> that 
contain the 'M' letter (such as wkbMultiPoint, wkbMultiLineString, ...) 
(#6469). Also add the mapping of wkbMultiCurve that was missing due to a 
copy&paste error

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From marco.atzeri at gmail.com  Fri Apr 22 03:58:34 2016
From: marco.atzeri at gmail.com (Marco Atzeri)
Date: Fri, 22 Apr 2016 12:58:34 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC2 Available for Review
In-Reply-To: <201604212152.02555.even.rouault@spatialys.com>
References: <201604212152.02555.even.rouault@spatialys.com>
Message-ID: <01e98135-30ac-68f0-ef1c-469518f41da3@gmail.com>

On 21/04/2016 21:52, Even Rouault wrote:
> Hi,
>
> I've issued a new RC to fix a trunk regression in the OGR VRT driver.
>

attached patch to manage the latest location of qhull header.
(/usr/include/libqhull/libqhull.h)
It may need some adjustment but works for me on cygwin.

I also noted that local headers are looked in the the wrong directory

-            EXTRA_INCLUDES="-I/usr/include/local/qhull $EXTRA_INCLUDES"
+            EXTRA_INCLUDES="-I/usr/local/include/qhull $EXTRA_INCLUDES"

https://gcc.gnu.org/onlinedocs/gcc-5.3.0/cpp/Search-Path.html#Search-Path

The build including the perl bind is fine, but I have some
issues with the python one.

Question:
from build log I see

	echo 'GNM_ENABLED=no' >> setup_vars.ini

so why the GNM stuff is build at all ?

g++ -shared -Wl,--enable-auto-image-base -L. 
build/temp.cygwin-2.5.0-x86_64-2.7/extensions/gnm_wrap.o -L../../.libs 
-L../../ -L/usr/lib/python2.7/config -L/usr/lib 
-L/cygdrive/e/cyg_pub/devel/gdal/prova/gdal-2.1.0-1.x86_64/build/lib 
-lpython2.7 -lgdal -o build/lib.cygwin-2.5.0-x86_64-2.7/osgeo/_gnm.dll
build/temp.cygwin-2.5.0-x86_64-2.7/extensions/gnm_wrap.o: In function 
`GNMNetworkShadow_GetVersion':
/pub/devel/gdal/prova/gdal-2.1.0-1.x86_64/build/swig/python/extensions/gnm_wrap.cpp:3391: 
undefined reference to `GNMGetVersion'


 >
 > Even

Regards
Marco
-------------- next part --------------
--- origsrc/gdal-2.1.0/configure.in	2016-04-21 21:40:12.000000000 +0200
+++ src/gdal-2.1.0/configure.in	2016-04-21 22:22:20.321234800 +0200
@@ -3636,11 +3636,25 @@
         if test -f /usr/include/qhull/libqhull.h; then
             EXTRA_INCLUDES="-I/usr/include/qhull $EXTRA_INCLUDES"
         else
-            EXTRA_INCLUDES="-I/usr/include/local/qhull $EXTRA_INCLUDES"
+            EXTRA_INCLUDES="-I/usr/local/include/qhull $EXTRA_INCLUDES"
         fi
         LIBS="-lqhull $LIBS"
     fi
   fi
+  AC_CHECK_HEADERS([libqhull/libqhull.h])
+  if test "$ac_cv_header_libqhull_libqhull_h" = "yes"; then
+    AC_CHECK_LIB(qhull,qh_new_qhull,QHULL_SETTING=yes,QHULL_SETTING=no,)
+    if test "$QHULL_SETTING" = "yes"; then
+        QHULL_SETTING=external
+        if test -f /usr/include/libqhull/libqhull.h; then
+            EXTRA_INCLUDES="-I/usr/include/libqhull $EXTRA_INCLUDES"
+        else
+            EXTRA_INCLUDES="-I/usr/local/include/qhull $EXTRA_INCLUDES"
+        fi
+        LIBS="-lqhull $LIBS"
+    fi
+  fi
+
   if test "$QHULL_SETTING" = "no" ; then
     if test "$with_qhull" = "yes"; then
         AC_MSG_ERROR([--with-qhull requested, but library not found!])

From even.rouault at spatialys.com  Fri Apr 22 04:26:51 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 13:26:51 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC3 Available for Review
Message-ID: <201604221326.52018.even.rouault@spatialys.com>

Hi,

I've issued a new RC to fix the issues reported on RC2 (especially for the one 
on GNM Python bindings). 

Updated archives :
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC3.tar.xz
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC3.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdal210RC3.zip

Changes since RC2:

- configure: fix detection of qhull headers in /usr/local/include/qhull, and add 
support for finding them in /usr/include/libqhull as well (#6470)
- Python bindings: do not build GNM bindings if it is not built in libgdal 
(#6471)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Apr 22 04:28:16 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 13:28:16 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC2 Available for Review
In-Reply-To: <01e98135-30ac-68f0-ef1c-469518f41da3@gmail.com>
References: <201604212152.02555.even.rouault@spatialys.com>
 <01e98135-30ac-68f0-ef1c-469518f41da3@gmail.com>
Message-ID: <201604221328.16801.even.rouault@spatialys.com>

Le vendredi 22 avril 2016 12:58:34, Marco Atzeri a écrit :
> On 21/04/2016 21:52, Even Rouault wrote:
> > Hi,
> > 
> > I've issued a new RC to fix a trunk regression in the OGR VRT driver.
> 
> attached patch to manage the latest location of qhull header.
> (/usr/include/libqhull/libqhull.h)
> It may need some adjustment but works for me on cygwin.
> 
> I also noted that local headers are looked in the the wrong directory
> 
> -            EXTRA_INCLUDES="-I/usr/include/local/qhull $EXTRA_INCLUDES"
> +            EXTRA_INCLUDES="-I/usr/local/include/qhull $EXTRA_INCLUDES"
> 
> https://gcc.gnu.org/onlinedocs/gcc-5.3.0/cpp/Search-Path.html#Search-Path
> 

Thanks. Applied per https://trac.osgeo.org/gdal/ticket/6470

> The build including the perl bind is fine, but I have some
> issues with the python one.
> 
> Question:
> from build log I see
> 
> 	echo 'GNM_ENABLED=no' >> setup_vars.ini
> 
> so why the GNM stuff is build at all ?

Typo in a test. Adressed by https://trac.osgeo.org/gdal/ticket/6471

I've issued a RC3 with the 2 above fixes

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lorenzo.bernardi at nais-solutions.it  Fri Apr 22 08:37:19 2016
From: lorenzo.bernardi at nais-solutions.it (Lorenzo Bernardi)
Date: Fri, 22 Apr 2016 17:37:19 +0200
Subject: [gdal-dev] Problem with gdal_pansharpen tool
Message-ID: <CACbBDeTpLn9+VF0YkR++mN_MyqX1zcsmGxXwgi=hxBXDjez8nw@mail.gmail.com>

Hi,
i'm trying to perfom a pansharpening process using the gdal_pansharpen tool.
I used the following code:

#!/usr/bin/env python
# -*- coding: utf-8 -*-


import sys, os
from osgeo import gdal

def Usage():
    print('Usage: gdal_pansharpen [--help-general] pan_dataset
{spectral_dataset[,band=num]}+ out_dataset')
    print('                       [-of format] [-b band]* [-w weight]*')
    print('                       [-r
{nearest,bilinear,cubic,cubicspline,lanczos,average}]')
    print('                       [-threads {ALL_CPUS|number}]
[-bitdepth val] [-nodata val]')
    print('                       [-spat_adjust
{union,intersection,none,nonewithoutwarning}]')
    print('                       [-verbose_vrt] [-co NAME=VALUE]* [-q]')
    print('')
    print('Create a dataset resulting from a pansharpening operation.')
    return -1


def gdal_pansharpen(argv):

    argv = gdal.GeneralCmdLineProcessor( argv )
    if argv is None:
        return -1

    pan_name = None
    last_name = None
    spectral_ds = []
    spectral_bands = []
    out_name = None
    bands = []
    weights = []
    format = 'VRT'
    creation_options = []
    callback = gdal.TermProgress
    resampling = None
    spat_adjust = None
    verbose_vrt = False
    num_threads = None
    bitdepth = None
    nodata = None

    i = 1
    argc = len(argv)
    while i < argc:
        if argv[i] == '-of' and i < len(argv)-1:
            format = argv[i+1]
            print("format " + format)
            i = i + 1
        elif argv[i] == '-r' and i < len(argv)-1:
            resampling = argv[i+1]
            print("resampling " + resampling)
            i = i + 1
        elif argv[i] == '-spat_adjust' and i < len(argv)-1:
            spat_adjust = argv[i+1]
            i = i + 1
        elif argv[i] == '-b' and i < len(argv)-1:
            bands.append(int(argv[i+1]))
            i = i + 1
        elif argv[i] == '-w' and i < len(argv)-1:
            weights.append(float(argv[i+1]))
            i = i + 1
        elif argv[i] == '-co' and i < len(argv)-1:
            creation_options.append(argv[i+1])
            i = i + 1
        elif argv[i] == '-threads' and i < len(argv)-1:
            num_threads = argv[i+1]
            i = i + 1
        elif argv[i] == '-bitdepth' and i < len(argv)-1:
            bitdepth = argv[i+1]
            i = i + 1
        elif argv[i] == '-nodata' and i < len(argv)-1:
            nodata = argv[i+1]
            i = i + 1
        elif argv[i] == '-q':
            callback = None
        elif argv[i] == '-verbose_vrt':
            verbose_vrt = True
        elif argv[i][0] == '-':
            sys.stderr.write('Unrecognized option : %s\n' % argv[i])
            return Usage()
        elif pan_name is None:
            pan_name = argv[i]
            pan_ds = gdal.Open(pan_name)
            if pan_ds is None:
                return 1
        else:
            if last_name is not None:
                pos = last_name.find(',band=')
                if pos > 0:
                    spectral_name = last_name[0:pos]
                    ds = gdal.Open(spectral_name)
                    if ds is None:
                        return 1
                    band_num = int(last_name[pos+len(',band='):])
                    band = ds.GetRasterBand(band_num)
                    spectral_ds.append(ds)
                    spectral_bands.append(band)
                else:
                    spectral_name = last_name
                    ds = gdal.Open(spectral_name)
                    if ds is None:
                        return 1
                    for j in range(ds.RasterCount):
                        spectral_ds.append(ds)
                        spectral_bands.append(ds.GetRasterBand(j+1))

            last_name = argv[i]

        i = i + 1
    if pan_name is None or len(spectral_bands) == 0:
        return Usage()
    out_name = last_name
    if len(bands) == 0:
        bands = [ j+1 for j in range(len(spectral_bands)) ]
    else:
        for i in range(len(bands)):
            if bands[i] < 0 or bands[i] > len(spectral_bands):
                print('Invalid band number in -b: %d' % bands[i])
                return 1

    if len(weights) != 0 and len(weights) != len(spectral_bands):
        print('There must be as many -w values specified as input
spectral bands')
        return 1




    vrt_xml = """<VRTDataset subClass="VRTPansharpenedDataset">\n"""
    if bands != [ j+1 for j in range(len(spectral_bands)) ]:
        for i in range(len(bands)):
            band = spectral_bands[bands[i]-1]
            datatype = gdal.GetDataTypeName(band.DataType)
            colorname =
gdal.GetColorInterpretationName(band.GetColorInterpretation())
            vrt_xml += """  <VRTRasterBand dataType="%s" band="%d"
subClass="VRTPansharpenedRasterBand">
      <ColorInterp>%s</ColorInterp>
  </VRTRasterBand>\n""" % (datatype, i+1, colorname)

    vrt_xml += """  <PansharpeningOptions>\n"""
    if len(weights) != 0:
        vrt_xml += """      <AlgorithmOptions>\n"""
        vrt_xml += """        <Weights>"""
        for i in range(len(weights)):
            if i > 0: vrt_xml += ","
            vrt_xml += "%.16g" % weights[i]
        vrt_xml += "</Weights>\n"
        vrt_xml += """      </AlgorithmOptions>\n"""

    if resampling is not None:
        vrt_xml += '      <Resampling>%s</Resampling>\n' % resampling

    if num_threads is not None:
        vrt_xml += '      <NumThreads>%s</NumThreads>\n' % num_threads

    if bitdepth is not None:
        vrt_xml += '      <BitDepth>%s</BitDepth>\n' % bitdepth

    if nodata is not None:
        vrt_xml += '      <NoData>%s</NoData>\n' % nodata

    if spat_adjust is not None:
        vrt_xml += '
<SpatialExtentAdjustment>%s</SpatialExtentAdjustment>\n' % spat_adjust

    pan_relative='0'
    print("panname: "+pan_name)
    print(str(os.path.isabs(pan_name)))
    print(str(os.path.relpath(pan_name, os.path.dirname(out_name))))
    if format.upper() == 'VRT':
        if not os.path.isabs(pan_name):
            pan_relative='1'
            pan_name = os.path.relpath(pan_name, os.path.dirname(out_name))

    vrt_xml += """    <PanchroBand>
      <SourceFilename relativeToVRT="%s">%s</SourceFilename>
      <SourceBand>1</SourceBand>
    </PanchroBand>\n""" % (pan_relative, pan_name)
    print(vrt_xml)
    for i in range(len(spectral_bands)):
        dstband = ''
        for j in range(len(bands)):
            if i + 1 == bands[j]:
                dstband = ' dstBand="%d"' % (j+1)
                break

        ms_relative='0'
        ms_name = spectral_ds[i].GetDescription()
        if format.upper() == 'VRT':
            if not os.path.isabs(ms_name):
                ms_relative='1'
                ms_name = os.path.relpath(ms_name, os.path.dirname(out_name))

        vrt_xml += """    <SpectralBand%s>
      <SourceFilename relativeToVRT="%s">%s</SourceFilename>
      <SourceBand>%d</SourceBand>
    </SpectralBand>\n""" % (dstband, ms_relative, ms_name,
spectral_bands[i].GetBand())

    vrt_xml += """  </PansharpeningOptions>\n"""
    vrt_xml += """</VRTDataset>\n"""
    if format.upper() == 'VRT':
        f = gdal.VSIFOpenL(out_name, 'wb')
        if f is None:
            print('Cannot create %s' % out_name)
            return 1
        gdal.VSIFWriteL(vrt_xml, 1, len(vrt_xml), f)
        gdal.VSIFCloseL(f)
        if verbose_vrt:
            vrt_ds = gdal.Open(out_name, gdal.GA_Update)
            vrt_ds.SetMetadata(vrt_ds.GetMetadata())
        else:
            vrt_ds = gdal.Open(out_name)
        if vrt_ds is None:
            return 1
        return 0
    vrt_ds = gdal.Open(vrt_xml)
    out_ds = gdal.GetDriverByName(format).CreateCopy(out_name, vrt_ds,
0, creation_options, callback = callback)

    if out_ds is None:
        return 1
    return 0
def main():
    return gdal_pansharpen(sys.argv)

if __name__ == '__main__':
    sys.exit(gdal_pansharpen(sys.argv))


My input file is a 7 bands geotiff file and the band 8 of an Landsat8 images.

If i use the script as follow:

gdal_pansharpen panchro.tif multispectral.tif pansharpend_output.tif

it returns with this error:

ERROR 1: Missing one of rasterXSize, rasterYSize or bands on VRTDataset.

I undestrand that the problem is the bands on the VRTDataset but for now i
didn't find any solutions.

I thank you in advance for any suggestions.

Thank you,

Lorenzo Bernardi


-- 

Lorenzo Bernardi



-- 

Lorenzo Bernardi
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160422/813c45b9/attachment-0001.html>

From even.rouault at spatialys.com  Fri Apr 22 08:54:04 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 17:54:04 +0200
Subject: [gdal-dev] Problem with gdal_pansharpen tool
In-Reply-To: <CACbBDeTpLn9+VF0YkR++mN_MyqX1zcsmGxXwgi=hxBXDjez8nw@mail.gmail.com>
References: <CACbBDeTpLn9+VF0YkR++mN_MyqX1zcsmGxXwgi=hxBXDjez8nw@mail.gmail.com>
Message-ID: <201604221754.05046.even.rouault@spatialys.com>

Le vendredi 22 avril 2016 17:37:19, Lorenzo Bernardi a écrit :
> Hi,
> i'm trying to perfom a pansharpening process using the gdal_pansharpen
> tool. I used the following code:
> 
> #!/usr/bin/env python
> # -*- coding: utf-8 -*-
> 
> 
> import sys, os
> from osgeo import gdal
> 
> def Usage():
>     print('Usage: gdal_pansharpen [--help-general] pan_dataset
> {spectral_dataset[,band=num]}+ out_dataset')
>     print('                       [-of format] [-b band]* [-w weight]*')
>     print('                       [-r
> {nearest,bilinear,cubic,cubicspline,lanczos,average}]')
>     print('                       [-threads {ALL_CPUS|number}]
> [-bitdepth val] [-nodata val]')
>     print('                       [-spat_adjust
> {union,intersection,none,nonewithoutwarning}]')
>     print('                       [-verbose_vrt] [-co NAME=VALUE]* [-q]')
>     print('')
>     print('Create a dataset resulting from a pansharpening operation.')
>     return -1
> 
> 
> def gdal_pansharpen(argv):
> 
>     argv = gdal.GeneralCmdLineProcessor( argv )
>     if argv is None:
>         return -1
> 
>     pan_name = None
>     last_name = None
>     spectral_ds = []
>     spectral_bands = []
>     out_name = None
>     bands = []
>     weights = []
>     format = 'VRT'
>     creation_options = []
>     callback = gdal.TermProgress
>     resampling = None
>     spat_adjust = None
>     verbose_vrt = False
>     num_threads = None
>     bitdepth = None
>     nodata = None
> 
>     i = 1
>     argc = len(argv)
>     while i < argc:
>         if argv[i] == '-of' and i < len(argv)-1:
>             format = argv[i+1]
>             print("format " + format)
>             i = i + 1
>         elif argv[i] == '-r' and i < len(argv)-1:
>             resampling = argv[i+1]
>             print("resampling " + resampling)
>             i = i + 1
>         elif argv[i] == '-spat_adjust' and i < len(argv)-1:
>             spat_adjust = argv[i+1]
>             i = i + 1
>         elif argv[i] == '-b' and i < len(argv)-1:
>             bands.append(int(argv[i+1]))
>             i = i + 1
>         elif argv[i] == '-w' and i < len(argv)-1:
>             weights.append(float(argv[i+1]))
>             i = i + 1
>         elif argv[i] == '-co' and i < len(argv)-1:
>             creation_options.append(argv[i+1])
>             i = i + 1
>         elif argv[i] == '-threads' and i < len(argv)-1:
>             num_threads = argv[i+1]
>             i = i + 1
>         elif argv[i] == '-bitdepth' and i < len(argv)-1:
>             bitdepth = argv[i+1]
>             i = i + 1
>         elif argv[i] == '-nodata' and i < len(argv)-1:
>             nodata = argv[i+1]
>             i = i + 1
>         elif argv[i] == '-q':
>             callback = None
>         elif argv[i] == '-verbose_vrt':
>             verbose_vrt = True
>         elif argv[i][0] == '-':
>             sys.stderr.write('Unrecognized option : %s\n' % argv[i])
>             return Usage()
>         elif pan_name is None:
>             pan_name = argv[i]
>             pan_ds = gdal.Open(pan_name)
>             if pan_ds is None:
>                 return 1
>         else:
>             if last_name is not None:
>                 pos = last_name.find(',band=')
>                 if pos > 0:
>                     spectral_name = last_name[0:pos]
>                     ds = gdal.Open(spectral_name)
>                     if ds is None:
>                         return 1
>                     band_num = int(last_name[pos+len(',band='):])
>                     band = ds.GetRasterBand(band_num)
>                     spectral_ds.append(ds)
>                     spectral_bands.append(band)
>                 else:
>                     spectral_name = last_name
>                     ds = gdal.Open(spectral_name)
>                     if ds is None:
>                         return 1
>                     for j in range(ds.RasterCount):
>                         spectral_ds.append(ds)
>                         spectral_bands.append(ds.GetRasterBand(j+1))
> 
>             last_name = argv[i]
> 
>         i = i + 1
>     if pan_name is None or len(spectral_bands) == 0:
>         return Usage()
>     out_name = last_name
>     if len(bands) == 0:
>         bands = [ j+1 for j in range(len(spectral_bands)) ]
>     else:
>         for i in range(len(bands)):
>             if bands[i] < 0 or bands[i] > len(spectral_bands):
>                 print('Invalid band number in -b: %d' % bands[i])
>                 return 1
> 
>     if len(weights) != 0 and len(weights) != len(spectral_bands):
>         print('There must be as many -w values specified as input
> spectral bands')
>         return 1
> 
> 
> 
> 
>     vrt_xml = """<VRTDataset subClass="VRTPansharpenedDataset">\n"""
>     if bands != [ j+1 for j in range(len(spectral_bands)) ]:
>         for i in range(len(bands)):
>             band = spectral_bands[bands[i]-1]
>             datatype = gdal.GetDataTypeName(band.DataType)
>             colorname =
> gdal.GetColorInterpretationName(band.GetColorInterpretation())
>             vrt_xml += """  <VRTRasterBand dataType="%s" band="%d"
> subClass="VRTPansharpenedRasterBand">
>       <ColorInterp>%s</ColorInterp>
>   </VRTRasterBand>\n""" % (datatype, i+1, colorname)
> 
>     vrt_xml += """  <PansharpeningOptions>\n"""
>     if len(weights) != 0:
>         vrt_xml += """      <AlgorithmOptions>\n"""
>         vrt_xml += """        <Weights>"""
>         for i in range(len(weights)):
>             if i > 0: vrt_xml += ","
>             vrt_xml += "%.16g" % weights[i]
>         vrt_xml += "</Weights>\n"
>         vrt_xml += """      </AlgorithmOptions>\n"""
> 
>     if resampling is not None:
>         vrt_xml += '      <Resampling>%s</Resampling>\n' % resampling
> 
>     if num_threads is not None:
>         vrt_xml += '      <NumThreads>%s</NumThreads>\n' % num_threads
> 
>     if bitdepth is not None:
>         vrt_xml += '      <BitDepth>%s</BitDepth>\n' % bitdepth
> 
>     if nodata is not None:
>         vrt_xml += '      <NoData>%s</NoData>\n' % nodata
> 
>     if spat_adjust is not None:
>         vrt_xml += '
> <SpatialExtentAdjustment>%s</SpatialExtentAdjustment>\n' % spat_adjust
> 
>     pan_relative='0'
>     print("panname: "+pan_name)
>     print(str(os.path.isabs(pan_name)))
>     print(str(os.path.relpath(pan_name, os.path.dirname(out_name))))
>     if format.upper() == 'VRT':
>         if not os.path.isabs(pan_name):
>             pan_relative='1'
>             pan_name = os.path.relpath(pan_name, os.path.dirname(out_name))
> 
>     vrt_xml += """    <PanchroBand>
>       <SourceFilename relativeToVRT="%s">%s</SourceFilename>
>       <SourceBand>1</SourceBand>
>     </PanchroBand>\n""" % (pan_relative, pan_name)
>     print(vrt_xml)
>     for i in range(len(spectral_bands)):
>         dstband = ''
>         for j in range(len(bands)):
>             if i + 1 == bands[j]:
>                 dstband = ' dstBand="%d"' % (j+1)
>                 break
> 
>         ms_relative='0'
>         ms_name = spectral_ds[i].GetDescription()
>         if format.upper() == 'VRT':
>             if not os.path.isabs(ms_name):
>                 ms_relative='1'
>                 ms_name = os.path.relpath(ms_name,
> os.path.dirname(out_name))
> 
>         vrt_xml += """    <SpectralBand%s>
>       <SourceFilename relativeToVRT="%s">%s</SourceFilename>
>       <SourceBand>%d</SourceBand>
>     </SpectralBand>\n""" % (dstband, ms_relative, ms_name,
> spectral_bands[i].GetBand())
> 
>     vrt_xml += """  </PansharpeningOptions>\n"""
>     vrt_xml += """</VRTDataset>\n"""
>     if format.upper() == 'VRT':
>         f = gdal.VSIFOpenL(out_name, 'wb')
>         if f is None:
>             print('Cannot create %s' % out_name)
>             return 1
>         gdal.VSIFWriteL(vrt_xml, 1, len(vrt_xml), f)
>         gdal.VSIFCloseL(f)
>         if verbose_vrt:
>             vrt_ds = gdal.Open(out_name, gdal.GA_Update)
>             vrt_ds.SetMetadata(vrt_ds.GetMetadata())
>         else:
>             vrt_ds = gdal.Open(out_name)
>         if vrt_ds is None:
>             return 1
>         return 0
>     vrt_ds = gdal.Open(vrt_xml)
>     out_ds = gdal.GetDriverByName(format).CreateCopy(out_name, vrt_ds,
> 0, creation_options, callback = callback)
> 
>     if out_ds is None:
>         return 1
>     return 0
> def main():
>     return gdal_pansharpen(sys.argv)
> 
> if __name__ == '__main__':
>     sys.exit(gdal_pansharpen(sys.argv))
> 
> 
> My input file is a 7 bands geotiff file and the band 8 of an Landsat8
> images.
> 
> If i use the script as follow:
> 
> gdal_pansharpen panchro.tif multispectral.tif pansharpend_output.tif
> 
> it returns with this error:
> 
> ERROR 1: Missing one of rasterXSize, rasterYSize or bands on VRTDataset.

I guess it is because your GDAL python bindings are linking against GDAL < 
2.1.0 . 


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Apr 22 09:06:20 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 18:06:20 +0200
Subject: [gdal-dev] Problem with gdal_pansharpen tool
In-Reply-To: <CACbBDeR_2WxmOm7PUU6s7xMum9HYUYo5hYJF9ThtPFD_c=_NQQ@mail.gmail.com>
References: <CACbBDeTpLn9+VF0YkR++mN_MyqX1zcsmGxXwgi=hxBXDjez8nw@mail.gmail.com>
 <201604221754.05046.even.rouault@spatialys.com>
 <CACbBDeR_2WxmOm7PUU6s7xMum9HYUYo5hYJF9ThtPFD_c=_NQQ@mail.gmail.com>
Message-ID: <201604221806.20481.even.rouault@spatialys.com>

Le vendredi 22 avril 2016 17:57:57, Lorenzo Bernardi a écrit :
> I'm using the gdal version provided with the OSGeo4W suite.
> i have performed and updated just yesterday.
> Do you know some solutions?

I presume you use the gdal-dev environement ?
If so, have a look at
https://lists.osgeo.org/pipermail/gdal-dev/2016-April/044074.html

Or as a workaround :
gdal_pansharpen -of VRT panchro.tif multispectral.tif pansharpend_output.vrt
gdal_translate pansharpend_output.vrt pansharpend_output.tif

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Apr 22 09:27:04 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 18:27:04 +0200
Subject: [gdal-dev] Problem with gdal_pansharpen tool
In-Reply-To: <CACbBDeTjwagGFuaKAW33TdYj1Srpd8fLcfrn=djuH19iUNjB3g@mail.gmail.com>
References: <CACbBDeTpLn9+VF0YkR++mN_MyqX1zcsmGxXwgi=hxBXDjez8nw@mail.gmail.com>
 <201604221806.20481.even.rouault@spatialys.com>
 <CACbBDeTjwagGFuaKAW33TdYj1Srpd8fLcfrn=djuH19iUNjB3g@mail.gmail.com>
Message-ID: <201604221827.04450.even.rouault@spatialys.com>

(Please keep the list CC'ed)

> I tryed the solutions: gdal_pansharpen -of VRT panchro.tif
> multispectral.tif pansharpend_output.vrt
> but it does not work.

That's not very informative for people not viewing your screen... Error 
message ?

> 
> i'm not sure if i'm using the gdal-dev environment. how can  i verifying
> it?

You have to enable it explicitly with "gdal-dev-env". You can check with 
gdalinfo --version
Then redefine PYTHONPATH as explained in the below link
And check that the following also report GDAL 2.1.0
python -c "from osgeo import gdal; print gdal.VersionInfo('')"

> 
> 2016-04-22 18:06 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> > Le vendredi 22 avril 2016 17:57:57, Lorenzo Bernardi a écrit :
> > > I'm using the gdal version provided with the OSGeo4W suite.
> > > i have performed and updated just yesterday.
> > > Do you know some solutions?
> > 
> > I presume you use the gdal-dev environement ?
> > If so, have a look at
> > https://lists.osgeo.org/pipermail/gdal-dev/2016-April/044074.html
> > 
> > Or as a workaround :
> > gdal_pansharpen -of VRT panchro.tif multispectral.tif
> > pansharpend_output.vrt
> > gdal_translate pansharpend_output.vrt pansharpend_output.tif
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Apr 22 09:34:33 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 18:34:33 +0200
Subject: [gdal-dev] Problem with gdal_pansharpen tool
In-Reply-To: <CACbBDeQazgn4RF=a=m203na-+jc1eQ=b+YhGGWO2sfHpK1m_yw@mail.gmail.com>
References: <CACbBDeTpLn9+VF0YkR++mN_MyqX1zcsmGxXwgi=hxBXDjez8nw@mail.gmail.com>
 <201604221827.04450.even.rouault@spatialys.com>
 <CACbBDeQazgn4RF=a=m203na-+jc1eQ=b+YhGGWO2sfHpK1m_yw@mail.gmail.com>
Message-ID: <201604221834.33569.even.rouault@spatialys.com>

Le vendredi 22 avril 2016 18:30:28, Lorenzo Bernardi a écrit :
> Sorry. The same error: ERROR 1: Missing one of rasterXSize, rasterYSize or
> bands on VRTDataset

You still didn't reply to all ;-)

OK, I see from the code that my proposed workaround will not work. You do need 
the Python bindings to link on GDAL 2.1.0 with the procedure I gave in my 
previous email.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From deedeebernard at hotmail.com  Fri Apr 22 11:10:48 2016
From: deedeebernard at hotmail.com (Didier Bernard)
Date: Fri, 22 Apr 2016 18:10:48 +0000
Subject: [gdal-dev] Additional arguments in gdal driver.CreateCopy function
Message-ID: <AM3PR08MB01038B2EAFE4A715EAA662ACA36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>

Hello,

I would like to create a new .tif file in GDAL C# by using the driver.CreateCopy<http://www.gdal.org/classGDALDriver.html#a2c897da2a6e25169cccc49ef48797ce1> function.
I have been reading gdal tutorial page<http://www.gdal.org/gdal_tutorial.html> and it looks like the python version of driver.CreateCopy function supports the use of additional arguments. For example, it supports using 'TILED=YES' argument:

src_ds = gdal.Open( src_filename )

dst_ds = driver.CreateCopy( dst_filename, src_ds, 0,
                            [ 'TILED=YES', 'COMPRESS=PACKBITS' ] )

I assume this means it can also support an argument like: "-outsize 50% 50%" ?


If this is so, then how can I use the same argument ("-outsize 50% 50%") in C# version of driver.CreateCopy function? Something like:

driver.CreateCopy(filePath, dataset, False, "-outsize 50% 50%", null, null);

?

Thank you.

Didier
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160422/e5d59bcd/attachment.html>

From even.rouault at spatialys.com  Fri Apr 22 11:51:38 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 20:51:38 +0200
Subject: [gdal-dev] Additional arguments in gdal driver.CreateCopy
	function
In-Reply-To: <AM3PR08MB01038B2EAFE4A715EAA662ACA36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>
References: <AM3PR08MB01038B2EAFE4A715EAA662ACA36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>
Message-ID: <201604222051.38237.even.rouault@spatialys.com>

Le vendredi 22 avril 2016 20:10:48, Didier Bernard a écrit :
> Hello,
> 
> I would like to create a new .tif file in GDAL C# by using the
> driver.CreateCopy<http://www.gdal.org/classGDALDriver.html#a2c897da2a6e251
> 69cccc49ef48797ce1> function. I have been reading gdal tutorial
> page<http://www.gdal.org/gdal_tutorial.html> and it looks like the python
> version of driver.CreateCopy function supports the use of additional
> arguments. For example, it supports using 'TILED=YES' argument:
> 
> src_ds = gdal.Open( src_filename )
> 
> dst_ds = driver.CreateCopy( dst_filename, src_ds, 0,
>                             [ 'TILED=YES', 'COMPRESS=PACKBITS' ] )
> 
> I assume this means it can also support an argument like: "-outsize 50%
> 50%" ?

No, -outsize is an argument specific to gdal_translate. CreateCopy() only 
accept driver specific creation options.

If you use GDAL 2.1.0, you can use it in gdal.Translate(). It is available in 
Python. See for example test_gdal_translate_lib_7() of
https://svn.osgeo.org/gdal/trunk/autotest/utilities/test_gdal_translate_lib.py
The widthPct/heightPct are syntaxic sugar of Python bindings.

Not completely sure however how ready the C# bindings of gdal.Translate() are. 
I presume that might be pretty raw. Something like (you will certainly need to 
fix it to be correct C#) :

gdal.GDALTranslateOptions options  = new gdal.GDALTranslateOptions( new 
String[] { "-outsize", "50%", "50%" } );
gdal.wrapper_GDALTranslate("out.tif", src_ds, options);

Don't ask me more about C# bindings ;-)

> 
> 
> If this is so, then how can I use the same argument ("-outsize 50% 50%") in
> C# version of driver.CreateCopy function? Something like:
> 
> driver.CreateCopy(filePath, dataset, False, "-outsize 50% 50%", null,
> null);
> 
> ?
> 
> Thank you.
> 
> Didier

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From deedeebernard at hotmail.com  Fri Apr 22 12:05:50 2016
From: deedeebernard at hotmail.com (Didier Bernard)
Date: Fri, 22 Apr 2016 19:05:50 +0000
Subject: [gdal-dev] Additional arguments in gdal driver.CreateCopy
 function
In-Reply-To: <201604222051.38237.even.rouault@spatialys.com>
References: <AM3PR08MB01038B2EAFE4A715EAA662ACA36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>,
 <201604222051.38237.even.rouault@spatialys.com>
Message-ID: <AM3PR08MB0103B743BEBD931AC2AE4067A36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>

Thank you for the reply Even,

Would you mind if I just ask you how can I delete the new .tif file that the driver.CreateCopy function created?
When I try to delete it, it says:

    [Errno 13] The process cannot access the file because it is being used by another process

even though I did the following before trying to delete the new .tif file:

    src_ds.FlushCache();
    dst_ds.FlushCache();
    driver.Dispose();

Is there some other function I should call to close the file handle?

I apologize if this question is C# specific, I hoped that it may be similar to Python syntax.

Thank you.

Didier

________________________________________
From: Even Rouault <even.rouault at spatialys.com>
Sent: Friday, April 22, 2016 8:51 PM
To: gdal-dev at lists.osgeo.org
Cc: Didier Bernard
Subject: Re: [gdal-dev] Additional arguments in gdal driver.CreateCopy function

Le vendredi 22 avril 2016 20:10:48, Didier Bernard a écrit :
> Hello,
>
> I would like to create a new .tif file in GDAL C# by using the
> driver.CreateCopy<http://www.gdal.org/classGDALDriver.html#a2c897da2a6e251
> 69cccc49ef48797ce1> function. I have been reading gdal tutorial
> page<http://www.gdal.org/gdal_tutorial.html> and it looks like the python
> version of driver.CreateCopy function supports the use of additional
> arguments. For example, it supports using 'TILED=YES' argument:
>
> src_ds = gdal.Open( src_filename )
>
> dst_ds = driver.CreateCopy( dst_filename, src_ds, 0,
>                             [ 'TILED=YES', 'COMPRESS=PACKBITS' ] )
>
> I assume this means it can also support an argument like: "-outsize 50%
> 50%" ?

No, -outsize is an argument specific to gdal_translate. CreateCopy() only
accept driver specific creation options.

If you use GDAL 2.1.0, you can use it in gdal.Translate(). It is available in
Python. See for example test_gdal_translate_lib_7() of
https://svn.osgeo.org/gdal/trunk/autotest/utilities/test_gdal_translate_lib.py
The widthPct/heightPct are syntaxic sugar of Python bindings.

Not completely sure however how ready the C# bindings of gdal.Translate() are.
I presume that might be pretty raw. Something like (you will certainly need to
fix it to be correct C#) :

gdal.GDALTranslateOptions options  = new gdal.GDALTranslateOptions( new
String[] { "-outsize", "50%", "50%" } );
gdal.wrapper_GDALTranslate("out.tif", src_ds, options);

Don't ask me more about C# bindings ;-)

>
>
> If this is so, then how can I use the same argument ("-outsize 50% 50%") in
> C# version of driver.CreateCopy function? Something like:
>
> driver.CreateCopy(filePath, dataset, False, "-outsize 50% 50%", null,
> null);
>
> ?
>
> Thank you.
>
> Didier

--
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Apr 22 12:11:56 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Apr 2016 21:11:56 +0200
Subject: [gdal-dev] Additional arguments in gdal driver.CreateCopy
	function
In-Reply-To: <AM3PR08MB0103B743BEBD931AC2AE4067A36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>
References: <AM3PR08MB01038B2EAFE4A715EAA662ACA36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>
 <201604222051.38237.even.rouault@spatialys.com>
 <AM3PR08MB0103B743BEBD931AC2AE4067A36F0@AM3PR08MB0103.eurprd08.prod.outlook.com>
Message-ID: <201604222111.56182.even.rouault@spatialys.com>

Le vendredi 22 avril 2016 21:05:50, Didier Bernard a écrit :
> Thank you for the reply Even,
> 
> Would you mind if I just ask you how can I delete the new .tif file that
> the driver.CreateCopy function created? When I try to delete it, it says:
> 
>     [Errno 13] The process cannot access the file because it is being used
> by another process
> 
> even though I did the following before trying to delete the new .tif file:
> 
>     src_ds.FlushCache();
>     dst_ds.FlushCache();
>     driver.Dispose();
> 
> Is there some other function I should call to close the file handle?

FlushCache() isn't enough to close the file descriptor, and you definitely don't 
want to call driver.Dispose() as it could cause crashes.

It seems there's a Dataset.Dispose(). You might try that.

> 
> I apologize if this question is C# specific, I hoped that it may be similar
> to Python syntax.
> 
> Thank you.
> 
> Didier
> 
> ________________________________________
> From: Even Rouault <even.rouault at spatialys.com>
> Sent: Friday, April 22, 2016 8:51 PM
> To: gdal-dev at lists.osgeo.org
> Cc: Didier Bernard
> Subject: Re: [gdal-dev] Additional arguments in gdal driver.CreateCopy
> function
> 
> Le vendredi 22 avril 2016 20:10:48, Didier Bernard a écrit :
> > Hello,
> > 
> > I would like to create a new .tif file in GDAL C# by using the
> > driver.CreateCopy<http://www.gdal.org/classGDALDriver.html#a2c897da2a6e25
> > 1 69cccc49ef48797ce1> function. I have been reading gdal tutorial
> > page<http://www.gdal.org/gdal_tutorial.html> and it looks like the python
> > version of driver.CreateCopy function supports the use of additional
> > arguments. For example, it supports using 'TILED=YES' argument:
> > 
> > src_ds = gdal.Open( src_filename )
> > 
> > dst_ds = driver.CreateCopy( dst_filename, src_ds, 0,
> > 
> >                             [ 'TILED=YES', 'COMPRESS=PACKBITS' ] )
> > 
> > I assume this means it can also support an argument like: "-outsize 50%
> > 50%" ?
> 
> No, -outsize is an argument specific to gdal_translate. CreateCopy() only
> accept driver specific creation options.
> 
> If you use GDAL 2.1.0, you can use it in gdal.Translate(). It is available
> in Python. See for example test_gdal_translate_lib_7() of
> https://svn.osgeo.org/gdal/trunk/autotest/utilities/test_gdal_translate_lib
> .py The widthPct/heightPct are syntaxic sugar of Python bindings.
> 
> Not completely sure however how ready the C# bindings of gdal.Translate()
> are. I presume that might be pretty raw. Something like (you will
> certainly need to fix it to be correct C#) :
> 
> gdal.GDALTranslateOptions options  = new gdal.GDALTranslateOptions( new
> String[] { "-outsize", "50%", "50%" } );
> gdal.wrapper_GDALTranslate("out.tif", src_ds, options);
> 
> Don't ask me more about C# bindings ;-)
> 
> > If this is so, then how can I use the same argument ("-outsize 50% 50%")
> > in C# version of driver.CreateCopy function? Something like:
> > 
> > driver.CreateCopy(filePath, dataset, False, "-outsize 50% 50%", null,
> > null);
> > 
> > ?
> > 
> > Thank you.
> > 
> > Didier
> 
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sfkeller at gmail.com  Sun Apr 24 08:29:36 2016
From: sfkeller at gmail.com (Stefan Keller)
Date: Sun, 24 Apr 2016 17:29:36 +0200
Subject: [gdal-dev] Problem with Shapefile and CRS 2056/21781
Message-ID: <CAFcOn2_FmMvhz-K1RBTEQe3Uj3nr012u0AtTccBx9qeTc55Jdg@mail.gmail.com>

Given a Shapefile "swiss_admin_boundaries.shp" in EPSG:2056 (or 21781,
to be downloaded for free at [1]) I have problems transforming it to
any other SRS/CRS.

When doing this:
> ogr2ogr -f "GPKG" swiss_admin_boundaries1.gpkg swiss_admin_boundaries.shp -t_srs EPSG:3857

... swiss_admin_boundaries2.gpkg have a shift of about 150m.

But when I convert Shapefile first e.g. to GeoPackage, and transform then:
> ogr2ogr -f "GPKG" tmp.gpkg swiss_admin_boundaries.shp
> ogr2ogr -f "GPKG" swiss_admin_boundaries2.gpkg tmp.gpkg -t_srs EPSG:3857
> del tmp.gpkg

... swiss_admin_boundaries2.gpkg is correct!

What could be the reason?

:Stefan

[1] https://opendata.swiss/en/dataset/swissboundaries3d-gemeindegrenzen

From even.rouault at spatialys.com  Sun Apr 24 08:34:33 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 24 Apr 2016 17:34:33 +0200
Subject: [gdal-dev] Problem with Shapefile and CRS 2056/21781
In-Reply-To: <CAFcOn2_FmMvhz-K1RBTEQe3Uj3nr012u0AtTccBx9qeTc55Jdg@mail.gmail.com>
References: <CAFcOn2_FmMvhz-K1RBTEQe3Uj3nr012u0AtTccBx9qeTc55Jdg@mail.gmail.com>
Message-ID: <201604241734.34143.even.rouault@spatialys.com>

Le dimanche 24 avril 2016 17:29:36, Stefan Keller a écrit :
> Given a Shapefile "swiss_admin_boundaries.shp" in EPSG:2056 (or 21781,
> to be downloaded for free at [1]) I have problems transforming it to
> any other SRS/CRS.

Could you post the .prj file ?

> 
> When doing this:
> > ogr2ogr -f "GPKG" swiss_admin_boundaries1.gpkg swiss_admin_boundaries.shp
> > -t_srs EPSG:3857
> 
> ... swiss_admin_boundaries2.gpkg have a shift of about 150m.
> 
> But when I convert Shapefile first e.g. to GeoPackage, and transform then:
> > ogr2ogr -f "GPKG" tmp.gpkg swiss_admin_boundaries.shp
> > ogr2ogr -f "GPKG" swiss_admin_boundaries2.gpkg tmp.gpkg -t_srs EPSG:3857
> > del tmp.gpkg
> 
> ... swiss_admin_boundaries2.gpkg is correct!
> 
> What could be the reason?
> 
> :Stefan
> 
> [1] https://opendata.swiss/en/dataset/swissboundaries3d-gemeindegrenzen
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sfkeller at gmail.com  Sun Apr 24 08:46:45 2016
From: sfkeller at gmail.com (Stefan Keller)
Date: Sun, 24 Apr 2016 17:46:45 +0200
Subject: [gdal-dev] Problem with Shapefile and CRS 2056/21781
In-Reply-To: <201604241734.34143.even.rouault@spatialys.com>
References: <CAFcOn2_FmMvhz-K1RBTEQe3Uj3nr012u0AtTccBx9qeTc55Jdg@mail.gmail.com>
 <201604241734.34143.even.rouault@spatialys.com>
Message-ID: <CAFcOn2-4GyAeGLx7iR1GrMVVDwgBLc2fBpnRDbmSbns90nwY3A@mail.gmail.com>

2016-04-24 17:34 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> Could you post the .prj file ?

Bien sur: I posted both CRS.
Hope attachments come through.

:Stefan


2016-04-24 17:34 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> Le dimanche 24 avril 2016 17:29:36, Stefan Keller a écrit :
>> Given a Shapefile "swiss_admin_boundaries.shp" in EPSG:2056 (or 21781,
>> to be downloaded for free at [1]) I have problems transforming it to
>> any other SRS/CRS.
>
> Could you post the .prj file ?
>
>>
>> When doing this:
>> > ogr2ogr -f "GPKG" swiss_admin_boundaries1.gpkg swiss_admin_boundaries.shp
>> > -t_srs EPSG:3857
>>
>> ... swiss_admin_boundaries2.gpkg have a shift of about 150m.
>>
>> But when I convert Shapefile first e.g. to GeoPackage, and transform then:
>> > ogr2ogr -f "GPKG" tmp.gpkg swiss_admin_boundaries.shp
>> > ogr2ogr -f "GPKG" swiss_admin_boundaries2.gpkg tmp.gpkg -t_srs EPSG:3857
>> > del tmp.gpkg
>>
>> ... swiss_admin_boundaries2.gpkg is correct!
>>
>> What could be the reason?
>>
>> :Stefan
>>
>> [1] https://opendata.swiss/en/dataset/swissboundaries3d-gemeindegrenzen
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: swissBOUNDARIES3D_LV95_2056.prj
Type: application/octet-stream
Size: 495 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160424/decf5845/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: swissBOUNDARIES3D_LV03_21781.prj
Type: application/octet-stream
Size: 491 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160424/decf5845/attachment-0001.obj>

From even.rouault at spatialys.com  Sun Apr 24 08:58:43 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 24 Apr 2016 17:58:43 +0200
Subject: [gdal-dev] Problem with Shapefile and CRS 2056/21781
In-Reply-To: <CAFcOn2-4GyAeGLx7iR1GrMVVDwgBLc2fBpnRDbmSbns90nwY3A@mail.gmail.com>
References: <CAFcOn2_FmMvhz-K1RBTEQe3Uj3nr012u0AtTccBx9qeTc55Jdg@mail.gmail.com>
 <201604241734.34143.even.rouault@spatialys.com>
 <CAFcOn2-4GyAeGLx7iR1GrMVVDwgBLc2fBpnRDbmSbns90nwY3A@mail.gmail.com>
Message-ID: <201604241758.43724.even.rouault@spatialys.com>

Le dimanche 24 avril 2016 17:46:45, Stefan Keller a écrit :
> 2016-04-24 17:34 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> > Could you post the .prj file ?
> 
> Bien sur: I posted both CRS.
> Hope attachments come through.

OK, that explains it.

The .prj file are somewhere between a old-style ESRI WKT and regular OGC WKT, 
in that they have a AUTHORITY EPSG node, but no TOWGS84 node.
Hence when you do the direct conversion, no datum shift is taken into account. 
When you do the 2-step conversion, in the first step, the GPKG driver has a 
logic to add entries in its gpkg_spatial_ref_sys table based on the source 
SRS. When the source SRS has a EPSG node, the WKT definition is read from the 
GDAL SRS db from the EPSG code (thus ignoring the rest of the WKT), which 
brings back the default TOWGS84. The second ogr2ogr call then applies it when 
reprojecting.

I guess we would want to improve the shapefile importer to get the WKT 
definition from the GDAL EPSG DB when a AUTHORITY EPSG node is found. Could you 
create a ticket about that ?

Even

> 
> :Stefan
> 
> 2016-04-24 17:34 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> > Le dimanche 24 avril 2016 17:29:36, Stefan Keller a écrit :
> >> Given a Shapefile "swiss_admin_boundaries.shp" in EPSG:2056 (or 21781,
> >> to be downloaded for free at [1]) I have problems transforming it to
> >> any other SRS/CRS.
> > 
> > Could you post the .prj file ?
> > 
> >> When doing this:
> >> > ogr2ogr -f "GPKG" swiss_admin_boundaries1.gpkg
> >> > swiss_admin_boundaries.shp -t_srs EPSG:3857
> >> 
> >> ... swiss_admin_boundaries2.gpkg have a shift of about 150m.
> >> 
> >> But when I convert Shapefile first e.g. to GeoPackage, and transform then:
> >> > ogr2ogr -f "GPKG" tmp.gpkg swiss_admin_boundaries.shp
> >> > ogr2ogr -f "GPKG" swiss_admin_boundaries2.gpkg tmp.gpkg -t_srs
> >> > EPSG:3857 del tmp.gpkg
> >> 
> >> ... swiss_admin_boundaries2.gpkg is correct!
> >> 
> >> What could be the reason?
> >> 
> >> :Stefan
> >> 
> >> [1] https://opendata.swiss/en/dataset/swissboundaries3d-gemeindegrenzen
> >> _______________________________________________
> >> gdal-dev mailing list
> >> gdal-dev at lists.osgeo.org
> >> http://lists.osgeo.org/mailman/listinfo/gdal-dev
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From tomerlieber at gmail.com  Mon Apr 25 00:23:43 2016
From: tomerlieber at gmail.com (Tomer)
Date: Mon, 25 Apr 2016 00:23:43 -0700 (PDT)
Subject: [gdal-dev] Can't read column name of a gdb file with lattin letters
Message-ID: <1461569023701-5262714.post@n6.nabble.com>

Hi, 

I sent this post again because it wasn't sent to the mailing list in the
first time.

I use c# bindings for GDAL and I want to read the column names of a gdb
file. 
The problem is that if the column name is written with latin letters, e.g.
Arabic, I get gibberish with less characters than expected. 
The problem exists because GDAL uses a string to save column names, and this
type can only contain ascii characters. 
Therefore the openFileGdb driver skips on every second byte when reading the
column names of a gdb file. 

You can find it in the source code: 

File: filegdbtable.cpp 
Line: 1689 
for(j=0;j < nColNameCarCount;j++) // FIXME> UTF16 
        osFieldName = pabyCur[2 * j] 

Because it's a diffcult to change the column name type to a wstring, which
can contain UTF8 charcaters, 
I thought of a creative way to solve the problem. 
I read all the bytes of the column name without skipping every second byte
and save the bytes as a string 
and then, I get the column name with all the bytes in the c# bindings and
decode them as UTF8. 

Here is what i changed in the source code: 

File: filegdbtable.cpp 
Line: 1689 
for(j=0;j < 2 * nColNameCarCount;j++) 
        osFieldName = pabyCur[j] 

After I changed the source code and complied it, I still got gibberish with
less characters than expected 
when I tried to read the column name from the c# bindings, so I couldn't
decode it to UTF8. 

My questions is: Why couldn't I read the column names correctly even after
the changes I made? 

If someone has another way to deal with this problem, please let me know. 

Thanks, 
Tomer



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Can-t-read-column-name-of-a-gdb-file-with-lattin-letters-tp5262714.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Mon Apr 25 00:53:02 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Apr 2016 09:53:02 +0200
Subject: [gdal-dev] Can't read column name of a gdb file with lattin
	letters
In-Reply-To: <1461569023701-5262714.post@n6.nabble.com>
References: <1461569023701-5262714.post@n6.nabble.com>
Message-ID: <201604250953.02276.even.rouault@spatialys.com>

Le lundi 25 avril 2016 09:23:43, Tomer a écrit :
> Hi,
> 
> I sent this post again because it wasn't sent to the mailing list in the
> first time.
> 
> I use c# bindings for GDAL and I want to read the column names of a gdb
> file.
> The problem is that if the column name is written with latin letters, e.g.
> Arabic, I get gibberish with less characters than expected.
> The problem exists because GDAL uses a string to save column names, and
> this type can only contain ascii characters.
> Therefore the openFileGdb driver skips on every second byte when reading
> the column names of a gdb file.
> 
> You can find it in the source code:
> 
> File: filegdbtable.cpp
> Line: 1689
> for(j=0;j < nColNameCarCount;j++) // FIXME> UTF16
>         osFieldName = pabyCur[2 * j]
> 
> Because it's a diffcult to change the column name type to a wstring, which
> can contain UTF8 charcaters,
> I thought of a creative way to solve the problem.
> I read all the bytes of the column name without skipping every second byte
> and save the bytes as a string
> and then, I get the column name with all the bytes in the c# bindings and
> decode them as UTF8.
> 
> Here is what i changed in the source code:
> 
> File: filegdbtable.cpp
> Line: 1689
> for(j=0;j < 2 * nColNameCarCount;j++)
>         osFieldName = pabyCur[j]
> 
> After I changed the source code and complied it, I still got gibberish with
> less characters than expected
> when I tried to read the column name from the c# bindings, so I couldn't
> decode it to UTF8.
> 
> My questions is: Why couldn't I read the column names correctly even after
> the changes I made?
Because there are certainly null bytes in it, which act as stop bytes when the 
string is copied around. The proper fix would be for the OpenFileGDB driver to 
properly recode UTF16 to UTF8. You could create a ticket in Trac with a .gdb 
attached/linked that demonstrate the issue.

> 
> If someone has another way to deal with this problem, please let me know.
> 
> Thanks,
> Tomer
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/gdal-dev-Can-t-read-column-name-of-a-g
> db-file-with-lattin-letters-tp5262714.html Sent from the GDAL - Dev mailing
> list archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Apr 25 01:00:39 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Apr 2016 10:00:39 +0200
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
Message-ID: <201604251000.39261.even.rouault@spatialys.com>

Motion: GDAL/OGR 2.1.0RC3 is promoted to be the official 2.1.0 final release.

---

No critical issue has been specifically reported on RC3 so far, so I invite PSC 
members to vote on this motion after doing your own testing and validation. 
Input from everyone else who can test it is also very welcome.

I'll start the voting with my :

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sfkeller at gmail.com  Mon Apr 25 03:15:01 2016
From: sfkeller at gmail.com (Stefan Keller)
Date: Mon, 25 Apr 2016 12:15:01 +0200
Subject: [gdal-dev] Problem with Shapefile and CRS 2056/21781
In-Reply-To: <201604241758.43724.even.rouault@spatialys.com>
References: <CAFcOn2_FmMvhz-K1RBTEQe3Uj3nr012u0AtTccBx9qeTc55Jdg@mail.gmail.com>
 <201604241734.34143.even.rouault@spatialys.com>
 <CAFcOn2-4GyAeGLx7iR1GrMVVDwgBLc2fBpnRDbmSbns90nwY3A@mail.gmail.com>
 <201604241758.43724.even.rouault@spatialys.com>
Message-ID: <CAFcOn29etNT0kQ-RpgmpAu2MVt3fidJqP3cKC94FwJ_PUimsmA@mail.gmail.com>

2016-04-24 17:58 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> I guess we would want to improve the shapefile importer to get the WKT
> definition from the GDAL EPSG DB when a AUTHORITY EPSG node is found. Could you
> create a ticket about that ?

Done: https://trac.osgeo.org/gdal/ticket/6485

:Stefan


2016-04-24 17:58 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> Le dimanche 24 avril 2016 17:46:45, Stefan Keller a écrit :
>> 2016-04-24 17:34 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
>> > Could you post the .prj file ?
>>
>> Bien sur: I posted both CRS.
>> Hope attachments come through.
>
> OK, that explains it.
>
> The .prj file are somewhere between a old-style ESRI WKT and regular OGC WKT,
> in that they have a AUTHORITY EPSG node, but no TOWGS84 node.
> Hence when you do the direct conversion, no datum shift is taken into account.
> When you do the 2-step conversion, in the first step, the GPKG driver has a
> logic to add entries in its gpkg_spatial_ref_sys table based on the source
> SRS. When the source SRS has a EPSG node, the WKT definition is read from the
> GDAL SRS db from the EPSG code (thus ignoring the rest of the WKT), which
> brings back the default TOWGS84. The second ogr2ogr call then applies it when
> reprojecting.
>
> I guess we would want to improve the shapefile importer to get the WKT
> definition from the GDAL EPSG DB when a AUTHORITY EPSG node is found. Could you
> create a ticket about that ?
>
> Even
>
>>
>> :Stefan
>>
>> 2016-04-24 17:34 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
>> > Le dimanche 24 avril 2016 17:29:36, Stefan Keller a écrit :
>> >> Given a Shapefile "swiss_admin_boundaries.shp" in EPSG:2056 (or 21781,
>> >> to be downloaded for free at [1]) I have problems transforming it to
>> >> any other SRS/CRS.
>> >
>> > Could you post the .prj file ?
>> >
>> >> When doing this:
>> >> > ogr2ogr -f "GPKG" swiss_admin_boundaries1.gpkg
>> >> > swiss_admin_boundaries.shp -t_srs EPSG:3857
>> >>
>> >> ... swiss_admin_boundaries2.gpkg have a shift of about 150m.
>> >>
>> >> But when I convert Shapefile first e.g. to GeoPackage, and transform then:
>> >> > ogr2ogr -f "GPKG" tmp.gpkg swiss_admin_boundaries.shp
>> >> > ogr2ogr -f "GPKG" swiss_admin_boundaries2.gpkg tmp.gpkg -t_srs
>> >> > EPSG:3857 del tmp.gpkg
>> >>
>> >> ... swiss_admin_boundaries2.gpkg is correct!
>> >>
>> >> What could be the reason?
>> >>
>> >> :Stefan
>> >>
>> >> [1] https://opendata.swiss/en/dataset/swissboundaries3d-gemeindegrenzen
>> >> _______________________________________________
>> >> gdal-dev mailing list
>> >> gdal-dev at lists.osgeo.org
>> >> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>> >
>> > --
>> > Spatialys - Geospatial professional services
>> > http://www.spatialys.com
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Mon Apr 25 03:42:33 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Mon, 25 Apr 2016 10:42:33 +0000 (UTC)
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
References: <201604251000.39261.even.rouault@spatialys.com>
Message-ID: <loom.20160425T124212-524@post.gmane.org>

Even Rouault <even.rouault <at> spatialys.com> writes:

> 
> Motion: GDAL/OGR 2.1.0RC3 is promoted to be the official 2.1.0 final release.

+1 

-Jukka Rahkonen-


From marco.atzeri at gmail.com  Mon Apr 25 03:46:36 2016
From: marco.atzeri at gmail.com (Marco Atzeri)
Date: Mon, 25 Apr 2016 12:46:36 +0200
Subject: [gdal-dev] gdal on cygwin
Message-ID: <123c2cff-2671-e5ef-d5ca-78be16d81f7c@gmail.com>

Dear developers,

building and testing latest 2.1.0 RCx on cygwin
enabling perl and python I hit some very curious build
issues:

1)
The configure requires that CXX is not defined for
building the python swig system
It seems a old issue not cygwin specific:
http://www.michael-joost.de/gdal_install.html

It is an annoy issue impacting I suspect most of the
distribution build systems that usually predefine
variables like CXX. I lost several hours to
overcome the puzzling behavior of the build.

2)
I tried to overcome #1 using in autogen.sh
libtoolize --force --copy
aclocal --force -I ./m4
but it results in a cripple libtool, totally unusable.

Any hope for a full working autoreconf ?

3)
On ogr/ogrct.cpp there is a strange assumption that
shared lib will never be bumped

#elif defined(__CYGWIN__)
#  define LIBNAME      "cygproj-0.dll"

unfortunately current one is  /usr/bin/cygproj-9.dll
and previous was already /usr/bin/cygproj-1.dll.
Should be better to link with "-lproj" instead of assuming to
know the library name ?

I will need to rebuild the just released binary
https://www.cygwin.com/ml/cygwin-announce/2016-04/msg00062.html
to correct the same mistake.

Regards
Marco





From even.rouault at spatialys.com  Mon Apr 25 04:02:40 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Apr 2016 13:02:40 +0200
Subject: [gdal-dev] gdal on cygwin
In-Reply-To: <123c2cff-2671-e5ef-d5ca-78be16d81f7c@gmail.com>
References: <123c2cff-2671-e5ef-d5ca-78be16d81f7c@gmail.com>
Message-ID: <201604251302.40845.even.rouault@spatialys.com>

Le lundi 25 avril 2016 12:46:36, Marco Atzeri a écrit :
> Dear developers,
> 
> building and testing latest 2.1.0 RCx on cygwin
> enabling perl and python I hit some very curious build
> issues:
> 
> 1)
> The configure requires that CXX is not defined for
> building the python swig system
> It seems a old issue not cygwin specific:
> http://www.michael-joost.de/gdal_install.html

The link doesn't work for me.

> 
> It is an annoy issue impacting I suspect most of the
> distribution build systems that usually predefine
> variables like CXX. I lost several hours to
> overcome the puzzling behavior of the build.

What's the solution ? Any upstreamable patch ? Looking quickly we don't seem 
to do anything particular regarding the compiler for Python extension building 
and rely on distutils.command.build_ext

> 
> 2)
> I tried to overcome #1 using in autogen.sh
> libtoolize --force --copy
> aclocal --force -I ./m4
> but it results in a cripple libtool, totally unusable.
> 
> Any hope for a full working autoreconf ?

I'm not sure how much effort woul be involved. GDAL autoconf stuff is rather ad-
hoc.

> 
> 3)
> On ogr/ogrct.cpp there is a strange assumption that
> shared lib will never be bumped
> 
> #elif defined(__CYGWIN__)
> #  define LIBNAME      "cygproj-0.dll"
> 
> unfortunately current one is  /usr/bin/cygproj-9.dll
> and previous was already /usr/bin/cygproj-1.dll.
> Should be better to link with "-lproj" instead of assuming to
> know the library name ?

You can ./configure --with-static-proj4 (which, as not obvious in the name, 
also work with proj shared objects :-) "static" here means linking at build 
time, vs the default way which is at runtime) for more classic linking

> 
> I will need to rebuild the just released binary
> https://www.cygwin.com/ml/cygwin-announce/2016-04/msg00062.html
> to correct the same mistake.
> 
> Regards
> Marco
> 
> 
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Mon Apr 25 04:55:09 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Mon, 25 Apr 2016 08:55:09 -0300
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <201604251000.39261.even.rouault@spatialys.com>
References: <201604251000.39261.even.rouault@spatialys.com>
Message-ID: <571E059D.9080108@gatewaygeomatics.com>

On 2016-04-25 5:00 AM, Even Rouault wrote:
> Motion: GDAL/OGR 2.1.0RC3 is promoted to be the official 2.1.0 final release.
>

+1 jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/

From marco.atzeri at gmail.com  Mon Apr 25 05:35:00 2016
From: marco.atzeri at gmail.com (Marco Atzeri)
Date: Mon, 25 Apr 2016 14:35:00 +0200
Subject: [gdal-dev] gdal on cygwin
In-Reply-To: <201604251302.40845.even.rouault@spatialys.com>
References: <123c2cff-2671-e5ef-d5ca-78be16d81f7c@gmail.com>
 <201604251302.40845.even.rouault@spatialys.com>
Message-ID: <69d325b3-cfc5-fd8b-435f-de235b9d7140@gmail.com>

On 25/04/2016 13:02, Even Rouault wrote:
> Le lundi 25 avril 2016 12:46:36, Marco Atzeri a écrit :
>> Dear developers,
>>
>> building and testing latest 2.1.0 RCx on cygwin
>> enabling perl and python I hit some very curious build
>> issues:
>>
>> 1)
>> The configure requires that CXX is not defined for
>> building the python swig system
>> It seems a old issue not cygwin specific:
>> http://www.michael-joost.de/gdal_install.html
>
> The link doesn't work for me.

It works fine for me from two different networks.
His comment was:

"So, the solution is to
unset CC CPP CXX
before configure/make."

and he is referring to "versions 1.8 thru 1.10.1"

>>
>> It is an annoy issue impacting I suspect most of the
>> distribution build systems that usually predefine
>> variables like CXX. I lost several hours to
>> overcome the puzzling behavior of the build.
>
> What's the solution ? Any upstreamable patch ? Looking quickly we don't seem
> to do anything particular regarding the compiler for Python extension building
> and rely on distutils.command.build_ext
>
>>
>> 2)
>> I tried to overcome #1 using in autogen.sh
>> libtoolize --force --copy
>> aclocal --force -I ./m4
>> but it results in a cripple libtool, totally unusable.
>>
>> Any hope for a full working autoreconf ?
>
> I'm not sure how much effort woul be involved. GDAL autoconf stuff is rather ad-
> hoc.

I noticed. It seems a strange hybrid.
Building outside the source tree is also not expected

>> 3)
>> On ogr/ogrct.cpp there is a strange assumption that
>> shared lib will never be bumped
>>
>> #elif defined(__CYGWIN__)
>> #  define LIBNAME      "cygproj-0.dll"
>>
>> unfortunately current one is  /usr/bin/cygproj-9.dll
>> and previous was already /usr/bin/cygproj-1.dll.
>> Should be better to link with "-lproj" instead of assuming to
>> know the library name ?
>
> You can ./configure --with-static-proj4 (which, as not obvious in the name,
> also work with proj shared objects :-) "static" here means linking at build
> time, vs the default way which is at runtime) for more classic linking

As cygwin package maintainer (also of proj) , I abhor the word "static".
I will try such option. To see if solve the issue or I need to patch
the code..

Regards
Marco

From howard at hobu.co  Mon Apr 25 07:24:41 2016
From: howard at hobu.co (Howard Butler)
Date: Mon, 25 Apr 2016 09:24:41 -0500
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <loom.20160425T124212-524@post.gmane.org>
References: <201604251000.39261.even.rouault@spatialys.com>
 <loom.20160425T124212-524@post.gmane.org>
Message-ID: <4F29B72D-A949-4A5C-A1C8-AA497D6C6988@hobu.co>


> On Apr 25, 2016, at 5:42 AM, Jukka Rahkonen <jukka.rahkonen at maanmittauslaitos.fi> wrote:
> 
> Even Rouault <even.rouault <at> spatialys.com> writes:
> 
>> 
>> Motion: GDAL/OGR 2.1.0RC3 is promoted to be the official 2.1.0 final release.
> 
> +1 

+1


From sean at mapbox.com  Mon Apr 25 08:05:37 2016
From: sean at mapbox.com (Sean Gillies)
Date: Mon, 25 Apr 2016 09:05:37 -0600
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <4F29B72D-A949-4A5C-A1C8-AA497D6C6988@hobu.co>
References: <201604251000.39261.even.rouault@spatialys.com>
 <loom.20160425T124212-524@post.gmane.org>
 <4F29B72D-A949-4A5C-A1C8-AA497D6C6988@hobu.co>
Message-ID: <CADPhZXzL7V5EV-=m=Zf8mVywc6dcUa2tmqCAPq-EOVoBkObZ4w@mail.gmail.com>

Hi all,

I see something that looks like a regression between the beta and rc3 in my
Rasterio CI

  https://travis-ci.org/mapbox/rasterio/jobs/125120910#L1429

That test was passing with the beta release. Any chance of holding the
release up for 60 minutes while I double check that I'm just not building
2.1.0 wrong on Travis?


On Mon, Apr 25, 2016 at 8:24 AM, Howard Butler <howard at hobu.co> wrote:

>
> > On Apr 25, 2016, at 5:42 AM, Jukka Rahkonen <
> jukka.rahkonen at maanmittauslaitos.fi> wrote:
> >
> > Even Rouault <even.rouault <at> spatialys.com> writes:
> >
> >>
> >> Motion: GDAL/OGR 2.1.0RC3 is promoted to be the official 2.1.0 final
> release.
> >
> > +1
>
> +1
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160425/320fefa5/attachment.html>

From even.rouault at spatialys.com  Mon Apr 25 08:25:13 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Apr 2016 17:25:13 +0200
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <CADPhZXzL7V5EV-=m=Zf8mVywc6dcUa2tmqCAPq-EOVoBkObZ4w@mail.gmail.com>
References: <201604251000.39261.even.rouault@spatialys.com>
 <4F29B72D-A949-4A5C-A1C8-AA497D6C6988@hobu.co>
 <CADPhZXzL7V5EV-=m=Zf8mVywc6dcUa2tmqCAPq-EOVoBkObZ4w@mail.gmail.com>
Message-ID: <201604251725.13714.even.rouault@spatialys.com>

Hi Sean,
> 
> I see something that looks like a regression between the beta and rc3 in my
> Rasterio CI
> 
>   https://travis-ci.org/mapbox/rasterio/jobs/125120910#L1429
> 
> That test was passing with the beta release. Any chance of holding the
> release up for 60 minutes while I double check that I'm just not building
> 2.1.0 wrong on Travis?

Sure, take the needed time.

Is this test about catching GDAL debug messages ? There was a change in GDAL 
logging just before beta1 related to that (and normally with little impact in 
the default behaviour), so if that worked with beta1, no reason that doesn't 
work anymore. I'm short of idea otherwise.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Mon Apr 25 08:45:20 2016
From: sean at mapbox.com (Sean Gillies)
Date: Mon, 25 Apr 2016 09:45:20 -0600
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <201604251725.13714.even.rouault@spatialys.com>
References: <201604251000.39261.even.rouault@spatialys.com>
 <4F29B72D-A949-4A5C-A1C8-AA497D6C6988@hobu.co>
 <CADPhZXzL7V5EV-=m=Zf8mVywc6dcUa2tmqCAPq-EOVoBkObZ4w@mail.gmail.com>
 <201604251725.13714.even.rouault@spatialys.com>
Message-ID: <CADPhZXwtkY9im9m+Fe1-RZB-dKPFULbtNF+JP0cfyGWsx9aBpw@mail.gmail.com>

On Mon, Apr 25, 2016 at 9:25 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Sean,
> >
> > I see something that looks like a regression between the beta and rc3 in
> my
> > Rasterio CI
> >
> >   https://travis-ci.org/mapbox/rasterio/jobs/125120910#L1429
> >
> > That test was passing with the beta release. Any chance of holding the
> > release up for 60 minutes while I double check that I'm just not building
> > 2.1.0 wrong on Travis?
>
> Sure, take the needed time.
>
> Is this test about catching GDAL debug messages ? There was a change in
> GDAL
> logging just before beta1 related to that (and normally with little impact
> in
> the default behaviour), so if that worked with beta1, no reason that
> doesn't
> work anymore. I'm short of idea otherwise.
>

Can you point me to the commit changing the logging?

I might be confused about whether I'm comparing rc3 behavior to beta1 or an
earlier snapshot. There's definitely a change since April 1's dev
prerelease.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160425/fe5ee4b1/attachment.html>

From even.rouault at spatialys.com  Mon Apr 25 09:24:40 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Apr 2016 18:24:40 +0200
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <CADPhZXwtkY9im9m+Fe1-RZB-dKPFULbtNF+JP0cfyGWsx9aBpw@mail.gmail.com>
References: <201604251000.39261.even.rouault@spatialys.com>
 <201604251725.13714.even.rouault@spatialys.com>
 <CADPhZXwtkY9im9m+Fe1-RZB-dKPFULbtNF+JP0cfyGWsx9aBpw@mail.gmail.com>
Message-ID: <201604251824.41155.even.rouault@spatialys.com>

Le lundi 25 avril 2016 17:45:20, Sean Gillies a écrit :
> On Mon, Apr 25, 2016 at 9:25 AM, Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > Hi Sean,
> > 
> > > I see something that looks like a regression between the beta and rc3
> > > in
> > 
> > my
> > 
> > > Rasterio CI
> > > 
> > >   https://travis-ci.org/mapbox/rasterio/jobs/125120910#L1429
> > > 
> > > That test was passing with the beta release. Any chance of holding the
> > > release up for 60 minutes while I double check that I'm just not
> > > building 2.1.0 wrong on Travis?
> > 
> > Sure, take the needed time.
> > 
> > Is this test about catching GDAL debug messages ? There was a change in
> > GDAL
> > logging just before beta1 related to that (and normally with little
> > impact in
> > the default behaviour), so if that worked with beta1, no reason that
> > doesn't
> > work anymore. I'm short of idea otherwise.
> 
> Can you point me to the commit changing the logging?

https://trac.osgeo.org/gdal/changeset/33842/

Hum actually looking at it and the fact that you use CPLSetErrorHandler(), 
https://github.com/mapbox/rasterio/blob/master/rasterio/_drivers.pyx#L161 , 
there's in fact a behavioural change that wasn't intended.

https://trac.osgeo.org/gdal/browser/trunk/gdal/port/cpl_error.cpp?rev=33842#L46 
should be initialized to true. I guess I should fix that...

> 
> I might be confused about whether I'm comparing rc3 behavior to beta1 or an
> earlier snapshot. There's definitely a change since April 1's dev
> prerelease.

Weird. The 2.1.0beta1 snapshot includes r33842


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Mon Apr 25 09:25:09 2016
From: sean at mapbox.com (Sean Gillies)
Date: Mon, 25 Apr 2016 10:25:09 -0600
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <CADPhZXwtkY9im9m+Fe1-RZB-dKPFULbtNF+JP0cfyGWsx9aBpw@mail.gmail.com>
References: <201604251000.39261.even.rouault@spatialys.com>
 <4F29B72D-A949-4A5C-A1C8-AA497D6C6988@hobu.co>
 <CADPhZXzL7V5EV-=m=Zf8mVywc6dcUa2tmqCAPq-EOVoBkObZ4w@mail.gmail.com>
 <201604251725.13714.even.rouault@spatialys.com>
 <CADPhZXwtkY9im9m+Fe1-RZB-dKPFULbtNF+JP0cfyGWsx9aBpw@mail.gmail.com>
Message-ID: <CADPhZXzx=76c1rcCt78XnVzByST=GfQUOd_WZsBi8xWF_5QZqA@mail.gmail.com>

Ticket here: https://trac.osgeo.org/gdal/ticket/6487.

I haven't seen any other problems with 2.1.0rc3. Fantastic work, everyone!

Thanks,

On Mon, Apr 25, 2016 at 9:45 AM, Sean Gillies <sean at mapbox.com> wrote:

> On Mon, Apr 25, 2016 at 9:25 AM, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> Hi Sean,
>> >
>> > I see something that looks like a regression between the beta and rc3
>> in my
>> > Rasterio CI
>> >
>> >   https://travis-ci.org/mapbox/rasterio/jobs/125120910#L1429
>> >
>> > That test was passing with the beta release. Any chance of holding the
>> > release up for 60 minutes while I double check that I'm just not
>> building
>> > 2.1.0 wrong on Travis?
>>
>> Sure, take the needed time.
>>
>> Is this test about catching GDAL debug messages ? There was a change in
>> GDAL
>> logging just before beta1 related to that (and normally with little
>> impact in
>> the default behaviour), so if that worked with beta1, no reason that
>> doesn't
>> work anymore. I'm short of idea otherwise.
>>
>
> Can you point me to the commit changing the logging?
>
> I might be confused about whether I'm comparing rc3 behavior to beta1 or
> an earlier snapshot. There's definitely a change since April 1's dev
> prerelease.
>
> --
> Sean Gillies
>



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160425/a5d228c5/attachment.html>

From even.rouault at spatialys.com  Mon Apr 25 10:48:09 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Apr 2016 19:48:09 +0200
Subject: [gdal-dev] Motion: Promote 2.1.0RC3 for release
In-Reply-To: <201604251000.39261.even.rouault@spatialys.com>
References: <201604251000.39261.even.rouault@spatialys.com>
Message-ID: <201604251948.10307.even.rouault@spatialys.com>

Le lundi 25 avril 2016 10:00:39, Even Rouault a écrit :
> Motion: GDAL/OGR 2.1.0RC3 is promoted to be the official 2.1.0 final
> release.
> 
> ---
> 
> No critical issue has been specifically reported on RC3 so far, so I invite
> PSC members to vote on this motion after doing your own testing and
> validation. Input from everyone else who can test it is also very welcome.
> 
> I'll start the voting with my :
> 
Changing my vote to -1. RC4 to follow


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Apr 25 10:55:36 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 25 Apr 2016 19:55:36 +0200
Subject: [gdal-dev] GDAL/OGR 2.1.0 RC4 Available for Review
Message-ID: <201604251955.36213.even.rouault@spatialys.com>

Hi,

I've issued a new RC to fix a trunk regression in the logging of debug messages 
(#6487). There are also a few other fixes that stacked up since RC3. I'll call 
for a vote on it Wednesday if nothing serious pops up.

Updated archives :
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC4.tar.xz
  http://download.osgeo.org/gdal/2.1.0/gdal-2.1.0RC4.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdal210RC4.zip
  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC4.tar.gz
  http://download.osgeo.org/gdal/2.1.0/gdalautotest-2.1.0RC4.zip


Changes since RC3:
- RPC: fix issues with dateline (#6472)
- Shape: avoid CreateLayer() to error out when passed wkbUnknown | wkb25D 
(#6473)
- OpenFileGDB: add support for reading SHPT_GENERALPOINT (#6478)
- OGR SQL: fix CAST(x AS bigint) to return an evaluated int64 node, and not 
int32 (#6479)
- OGR VRT: do not enable passthrough filtering if redefining <FID> (#6480)
- SQLite dialect: fix insertion in geometry_columns of table names that are not 
in upper-case (#6483)
- ECW: fix reading of ECW in /vsi file systems (with SDK >= 4) (#6482)
- OGR SQL: handle 'fid' as Integer64 in where clause, and allow CAST(fid AS 
bigint) in selected columns (#6484)
- OSM: properly deal with polygons in other_relations geometrycollection 
(#6475)
- KML: fix crash on KML files without content but with nested folders (#6486)
- cpl_error.cpp: initialize gbCatchDebug to true, so that global error 
handlers set with CPLSetErrorHandler() get by default debug messages (#6487)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gane.prog at gmail.com  Tue Apr 26 02:36:46 2016
From: gane.prog at gmail.com (Gane R)
Date: Tue, 26 Apr 2016 15:06:46 +0530
Subject: [gdal-dev] Progress and cancel of gdalwarp program
Message-ID: <CALMrLdAXk78XgbBcEpTuVG4C38DbnoRtoNfOAfhgD0PeG-XHdQ@mail.gmail.com>

Is that any way to get the progress of the gdalwarp and make a cancel
request of gdalwarp.

in gdal 1.10.1
In gdalwarp.cpp
 I see psWO->pfnProgress = GDALTermProgress;

This for only progress right ?

I want to have function called with the progress displayed and also check,
if cancel is requested.

Gane
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160426/99400a75/attachment.html>

From even.rouault at spatialys.com  Tue Apr 26 02:43:57 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Apr 2016 11:43:57 +0200
Subject: [gdal-dev] Progress and cancel of gdalwarp program
In-Reply-To: <CALMrLdAXk78XgbBcEpTuVG4C38DbnoRtoNfOAfhgD0PeG-XHdQ@mail.gmail.com>
References: <CALMrLdAXk78XgbBcEpTuVG4C38DbnoRtoNfOAfhgD0PeG-XHdQ@mail.gmail.com>
Message-ID: <201604261143.58024.even.rouault@spatialys.com>

Le mardi 26 avril 2016 11:36:46, Gane R a écrit :
> Is that any way to get the progress of the gdalwarp and make a cancel
> request of gdalwarp.
> 
> in gdal 1.10.1
> In gdalwarp.cpp
>  I see psWO->pfnProgress = GDALTermProgress;
> 
> This for only progress right ?

No, if the function returns FALSE, the processing is stopped.

> 
> I want to have function called with the progress displayed and also check,
> if cancel is requested.
> 
> Gane

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gane.prog at gmail.com  Tue Apr 26 02:58:22 2016
From: gane.prog at gmail.com (Gane R)
Date: Tue, 26 Apr 2016 15:28:22 +0530
Subject: [gdal-dev] Progress and cancel of gdalwarp program
In-Reply-To: <201604261143.58024.even.rouault@spatialys.com>
References: <CALMrLdAXk78XgbBcEpTuVG4C38DbnoRtoNfOAfhgD0PeG-XHdQ@mail.gmail.com>
 <201604261143.58024.even.rouault@spatialys.com>
Message-ID: <CALMrLdCNK+oVP0G+8GSTU9E1bpqdNj7=ZstaF8Xht0SM2r97Yw@mail.gmail.com>

[1] Is is possible to get the progress 10...20... into a variable and [2]
is it possible to cancel the warp progress, say cancel the operation.

I saw the documentation and sample in JPEG CreateCopy, gdal_translate and
GDALDummyProgress used in quiet operation.


Thanks
Gane

On Tue, Apr 26, 2016 at 3:13 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Le mardi 26 avril 2016 11:36:46, Gane R a écrit :
> > Is that any way to get the progress of the gdalwarp and make a cancel
> > request of gdalwarp.
> >
> > in gdal 1.10.1
> > In gdalwarp.cpp
> >  I see psWO->pfnProgress = GDALTermProgress;
> >
> > This for only progress right ?
>
> No, if the function returns FALSE, the processing is stopped.
>
> >
> > I want to have function called with the progress displayed and also
> check,
> > if cancel is requested.
> >
> > Gane
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160426/1fa75344/attachment.html>

From even.rouault at spatialys.com  Tue Apr 26 03:03:52 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Apr 2016 12:03:52 +0200
Subject: [gdal-dev] Progress and cancel of gdalwarp program
In-Reply-To: <CALMrLdCNK+oVP0G+8GSTU9E1bpqdNj7=ZstaF8Xht0SM2r97Yw@mail.gmail.com>
References: <CALMrLdAXk78XgbBcEpTuVG4C38DbnoRtoNfOAfhgD0PeG-XHdQ@mail.gmail.com>
 <201604261143.58024.even.rouault@spatialys.com>
 <CALMrLdCNK+oVP0G+8GSTU9E1bpqdNj7=ZstaF8Xht0SM2r97Yw@mail.gmail.com>
Message-ID: <201604261203.52053.even.rouault@spatialys.com>

Le mardi 26 avril 2016 11:58:22, Gane R a écrit :
> [1] Is is possible to get the progress 10...20... into a variable and [2]
> is it possible to cancel the warp progress, say cancel the operation.

See how it is done in 
https://svn.osgeo.org/gdal/trunk/gdal/port/cpl_progress.cpp

> 
> I saw the documentation and sample in JPEG CreateCopy, gdal_translate and
> GDALDummyProgress used in quiet operation.
> 
> 
> Thanks
> Gane
> 
> On Tue, Apr 26, 2016 at 3:13 PM, Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > Le mardi 26 avril 2016 11:36:46, Gane R a écrit :
> > > Is that any way to get the progress of the gdalwarp and make a cancel
> > > request of gdalwarp.
> > > 
> > > in gdal 1.10.1
> > > In gdalwarp.cpp
> > > 
> > >  I see psWO->pfnProgress = GDALTermProgress;
> > > 
> > > This for only progress right ?
> > 
> > No, if the function returns FALSE, the processing is stopped.
> > 
> > > I want to have function called with the progress displayed and also
> > 
> > check,
> > 
> > > if cancel is requested.
> > > 
> > > Gane
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From tomerlieber at gmail.com  Tue Apr 26 02:58:36 2016
From: tomerlieber at gmail.com (Tomer)
Date: Tue, 26 Apr 2016 02:58:36 -0700 (PDT)
Subject: [gdal-dev] Can't read column name of a gdb file with lattin
	letters
In-Reply-To: <201604250953.02276.even.rouault@spatialys.com>
References: <1461569023701-5262714.post@n6.nabble.com>
 <201604250953.02276.even.rouault@spatialys.com>
Message-ID: <1461664716147-5262934.post@n6.nabble.com>

If the problem because the null bytes, I still don't understand why I got the
same column name before and after the changes I did in the source code.
That why I guess there is also another problem. Do you know know what it can
be?



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Can-t-read-column-name-of-a-gdb-file-with-lattin-letters-tp5262714p5262934.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Tue Apr 26 03:26:14 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Apr 2016 12:26:14 +0200
Subject: [gdal-dev] Can't read column name of a gdb file with lattin
	letters
In-Reply-To: <1461664716147-5262934.post@n6.nabble.com>
References: <1461569023701-5262714.post@n6.nabble.com>
 <201604250953.02276.even.rouault@spatialys.com>
 <1461664716147-5262934.post@n6.nabble.com>
Message-ID: <201604261226.14723.even.rouault@spatialys.com>

Le mardi 26 avril 2016 11:58:36, Tomer a écrit :
> If the problem because the null bytes, I still don't understand why I got
> the same column name before and after the changes I did in the source
> code. That why I guess there is also another problem. Do you know know
> what it can be?

Without seing the code, no ;-)

UTF-16 -> UTF-8 recoding should likely be done in a similar way as
GDALPDFGetUTF8StringFromBytes frmts/pdf/pdfobject.cpp . This one could be 
simplified for .gdb since I guess the byte ordering is only little-endian.

> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/gdal-dev-Can-t-read-column-name-of-a-g
> db-file-with-lattin-letters-tp5262714p5262934.html Sent from the GDAL - Dev
> mailing list archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lacy at wisc.edu  Tue Apr 26 11:23:28 2016
From: lacy at wisc.edu (Jim Lacy)
Date: Tue, 26 Apr 2016 18:23:28 +0000
Subject: [gdal-dev] Use of sexagesimal "pseudo format" in pcs.csv?
Message-ID: <SN1PR06MB2175405B0F78B297F5813F89B9630@SN1PR06MB2175.namprd06.prod.outlook.com>

All-

This morning I was confused by the formatting of lat/lon parameters used in the GDAL pcs.csv file.  I initially thought the lat/lon values in the file are standard decimal degrees, until I realized some things weren't adding up.  After digging, I learned those params use a "pseudo format" (EPSG:9110).  i.e., 45.50 = 45 degrees, 50 minutes *NOT* 45 degrees 30 minutes.

By comparison, the "epsg" file in PROJ.4 stores lat/lon parameters as decimal degrees.

I'm sure it's been this way for many years. There must be a reason?  Seems like it must lead to a lot of confusion.

Thanks for satisfying my curiosity,
Jim


----------------------------------------------
Jim Lacy
Wisconsin State Cartographer's Office
University of Wisconsin-Madison
(608) 262-6850
www.sco.wisc.edu<http://www.sco.wisc.edu/>
My calendar:  http://go.wisc.edu/xziys4

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160426/929baace/attachment.html>

From even.rouault at spatialys.com  Tue Apr 26 12:39:27 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Apr 2016 21:39:27 +0200
Subject: [gdal-dev] Use of sexagesimal "pseudo format" in pcs.csv?
In-Reply-To: <SN1PR06MB2175405B0F78B297F5813F89B9630@SN1PR06MB2175.namprd06.prod.outlook.com>
References: <SN1PR06MB2175405B0F78B297F5813F89B9630@SN1PR06MB2175.namprd06.prod.outlook.com>
Message-ID: <201604262139.27717.even.rouault@spatialys.com>

Le mardi 26 avril 2016 20:23:28, Jim Lacy a écrit :
> All-
> 
> This morning I was confused by the formatting of lat/lon parameters used in
> the GDAL pcs.csv file.  I initially thought the lat/lon values in the file
> are standard decimal degrees, until I realized some things weren't adding
> up.  After digging, I learned those params use a "pseudo format"
> (EPSG:9110).  i.e., 45.50 = 45 degrees, 50 minutes *NOT* 45 degrees 30
> minutes.
> 
> By comparison, the "epsg" file in PROJ.4 stores lat/lon parameters as
> decimal degrees.
> 
> I'm sure it's been this way for many years. There must be a reason?  Seems
> like it must lead to a lot of confusion.

Jim,

I wasn't even aware of that. I see this comes directly from the EPSG database 
itself :

INSERT INTO epsg_alias VALUES ( 390, 
'Unit of Measure', 
9110, 
7302, 
'DDD.MMSSsss', 
'' ); 

INSERT INTO epsg_unitofmeasure VALUES ( 9110, 
'sexagesimal DMS', 
'angle', 
9102, 
Null, 
Null, 
'Pseudo unit. Format: signed degrees - period - minutes (2 digits) - integer 
seconds (2 digits) - fraction of seconds (any precision). Must include leading 
zero in
 minutes and seconds and exclude decimal point for seconds. Convert to degree 
using formula.', 
'OGP', 
'IOGP', 
'2015-11-25', 
'2002.270 2002.780 2008.020 2015.062', 
0 ); 

What is particularly bad taste is to store such parameters as numeric values 
and not a string literals in the parameter_value column of  the 
epsg_coordoperationparamvalue table

CREATE TABLE epsg_coordoperationparamvalue ( 
coord_op_code                                      INTEGER NOT NULL, 
coord_op_method_code                               INTEGER NOT NULL, 
parameter_code                                     INTEGER NOT NULL, 
parameter_value                                    DOUBLE PRECISION, 
param_value_file_ref                               VARCHAR(300), 
uom_code                                           INTEGER, 
 );

INSERT INTO epsg_coordoperationparamvalue VALUES ( 1258, 
9601, 
8602, 
-74.04513, 
'', 
9110 ); 

GDAL's pcs.csv is a join of the original EPSG tables, so it doesn't change the 
format at that point. It however processes it to decimal degrees on reading, 
which explains why proj.4 epsg file is more reasonable.

Bottom line: better use GDAL importFromEPSG than raw parsing in its CSV files.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Apr 27 01:18:42 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Apr 2016 10:18:42 +0200
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
Message-ID: <201604271018.43194.even.rouault@spatialys.com>

Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final release.

---

+1 Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Wed Apr 27 02:25:32 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Wed, 27 Apr 2016 09:25:32 +0000 (UTC)
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
References: <201604271018.43194.even.rouault@spatialys.com>
Message-ID: <loom.20160427T112504-905@post.gmane.org>

Even Rouault <even.rouault <at> spatialys.com> writes:

> 
> Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final release.
> 
> ---
> 
> +1 Even

+1

-Jukka Rahkonen-


From howard at hobu.co  Wed Apr 27 09:00:14 2016
From: howard at hobu.co (Howard Butler)
Date: Wed, 27 Apr 2016 11:00:14 -0500
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
In-Reply-To: <loom.20160427T112504-905@post.gmane.org>
References: <201604271018.43194.even.rouault@spatialys.com>
 <loom.20160427T112504-905@post.gmane.org>
Message-ID: <F27C4EA6-F181-4E29-AB9E-B66312A61429@hobu.co>


> On Apr 27, 2016, at 4:25 AM, Jukka Rahkonen <jukka.rahkonen at maanmittauslaitos.fi> wrote:
> 
> Even Rouault <even.rouault <at> spatialys.com> writes:
> 
>> 
>> Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final release.
>> 
>> ---
>> 
>> +1 Even
> 
> +1

+1

From jmckenna at gatewaygeomatics.com  Wed Apr 27 09:27:38 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 27 Apr 2016 13:27:38 -0300
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
In-Reply-To: <201604271018.43194.even.rouault@spatialys.com>
References: <201604271018.43194.even.rouault@spatialys.com>
Message-ID: <5720E87A.6050105@gatewaygeomatics.com>

On 2016-04-27 5:18 AM, Even Rouault wrote:
> Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final release.
>

+1 jeff





-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/

From sean at mapbox.com  Wed Apr 27 09:36:03 2016
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 27 Apr 2016 10:36:03 -0600
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
In-Reply-To: <201604271018.43194.even.rouault@spatialys.com>
References: <201604271018.43194.even.rouault@spatialys.com>
Message-ID: <CADPhZXyQwJ3nqKF39sTFz9QvpfOZFog4R2YPushX72iYc6Av7w@mail.gmail.com>

On Wed, Apr 27, 2016 at 2:18 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final
> release.
>

+1 from me. I really appreciate your coordination of this release.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160427/1bfb1909/attachment.html>

From dmorissette at mapgears.com  Wed Apr 27 11:25:49 2016
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Wed, 27 Apr 2016 14:25:49 -0400
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
In-Reply-To: <201604271018.43194.even.rouault@spatialys.com>
References: <201604271018.43194.even.rouault@spatialys.com>
Message-ID: <5721042D.7040904@mapgears.com>

On 2016-04-27 4:18 AM, Even Rouault wrote:
> Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final release.
>

+1

Daniel

-- 
Daniel Morissette
http://www.mapgears.com/
T: +1 418-696-5056 #201

http://evouala.com/ - Location Intelligence Made Easy

From even.rouault at spatialys.com  Wed Apr 27 12:59:01 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Apr 2016 21:59:01 +0200
Subject: [gdal-dev] Creation of pages on Trac wiki disabled
Message-ID: <201604272159.01182.even.rouault@spatialys.com>

Folks,

I've removed the right to create new pages on the wiki for the 'authenticated' 
group due to spammers abusting it recently (as well as other projects wiki).
OSGeo System Administration Committee is looking at that, so we might re-
enable that if we understand what happens.
If you need to create pages, ping me and I can give you the permission.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From szekerest at gmail.com  Wed Apr 27 13:06:34 2016
From: szekerest at gmail.com (Tamas Szekeres)
Date: Wed, 27 Apr 2016 22:06:34 +0200
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
In-Reply-To: <201604271018.43194.even.rouault@spatialys.com>
References: <201604271018.43194.even.rouault@spatialys.com>
Message-ID: <CACALY+RoSc4G8ZCY2+xh63w2ecAxUAKNL+cJRH+M3X3KAAmEkw@mail.gmail.com>

+1

Tamas

2016-04-27 10:18 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final
> release.
>
> ---
>
> +1 Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160427/02954508/attachment.html>

From ari.jolma at gmail.com  Wed Apr 27 23:50:46 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 28 Apr 2016 09:50:46 +0300
Subject: [gdal-dev] Layer intersection: two polygons with a common point
Message-ID: <5721B2C6.9030806@gmail.com>

Jukka pointed out this

http://gis.stackexchange.com/questions/191336/gdal-ogr-ogr-layer-intersection-producing-points-from-linestrings

to me.

It is true that intersecting two layers, where one contains

'POLYGON (( 140 360, 140 480, 220 480, 220 360, 140 360 ))'

and the other

'POLYGON (( 220 260, 220 360, 300 360, 300 260, 220 260 ))'

produces an empty layer. The reason is a check

(z_geom->IsEmpty() ||
   (x_geom->getDimension() == 2 &&
    y_geom->getDimension() == 2 &&
    z_geom->getDimension() < 2))

(x and y are the polygons and z is the intersection, a point in this 
case), which leads to discarding the point.

I believe this check was introduced as a result of ticket 4772

https://trac.osgeo.org/gdal/ticket/4772

in changeset 25427, where it is stated that "when intersecting 2 
polygons, do not consider a point or linear intersection as a valid one".

I'm a bit ill right now so can't really think too hard on this but can 
we say why we don't consider a point as valid here?

Ari


From even.rouault at spatialys.com  Thu Apr 28 00:56:33 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 28 Apr 2016 09:56:33 +0200
Subject: [gdal-dev] Layer intersection: two polygons with a common point
In-Reply-To: <5721B2C6.9030806@gmail.com>
References: <5721B2C6.9030806@gmail.com>
Message-ID: <201604280956.34484.even.rouault@spatialys.com>

Le jeudi 28 avril 2016 08:50:46, Ari Jolma a écrit :
> Jukka pointed out this
> 
> http://gis.stackexchange.com/questions/191336/gdal-ogr-ogr-layer-intersecti
> on-producing-points-from-linestrings
> 
> to me.
> 
> It is true that intersecting two layers, where one contains
> 
> 'POLYGON (( 140 360, 140 480, 220 480, 220 360, 140 360 ))'
> 
> and the other
> 
> 'POLYGON (( 220 260, 220 360, 300 360, 300 260, 220 260 ))'
> 
> produces an empty layer. The reason is a check
> 
> (z_geom->IsEmpty() ||
>    (x_geom->getDimension() == 2 &&
>     y_geom->getDimension() == 2 &&
>     z_geom->getDimension() < 2))
> 
> (x and y are the polygons and z is the intersection, a point in this
> case), which leads to discarding the point.
> 
> I believe this check was introduced as a result of ticket 4772
> 
> https://trac.osgeo.org/gdal/ticket/4772
> 
> in changeset 25427, where it is stated that "when intersecting 2
> polygons, do not consider a point or linear intersection as a valid one".

Oh I see we are both involved in this ;-) The advantage of the current 
behaviour is that it is compatible with most popular output formats that don't 
like mixing geometry types in the same layer (think of shapefiles, and 
generally postgis, spatialite when layer geometry type is not unknown, ...). 
Perhaps one possible approach would be to check the output layer geometry type 
: if it is wkbUnknown, keep all non empty geometries, otherwise only keep 
those compatible of the geometry type. And perhaps combine that default 
behaviour with an option to the method "KEEP_LOWER_DIMENSION_GEOMETRIES" 
(would be honoured only if output layer geometry type == wkbUnknown) ? Since I 
feel that in most cases and in real-life, intersection of polygons resulting 
in points or lines should not happen.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Thu Apr 28 03:03:55 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Thu, 28 Apr 2016 10:03:55 +0000 (UTC)
Subject: [gdal-dev] Layer intersection: two polygons with a common point
References: <5721B2C6.9030806@gmail.com>
 <201604280956.34484.even.rouault@spatialys.com>
Message-ID: <loom.20160428T114215-566@post.gmane.org>

Even Rouault <even.rouault <at> spatialys.com> writes:

> 
> Le jeudi 28 avril 2016 08:50:46, Ari Jolma a écrit :
> > Jukka pointed out this
> > 
> > http://gis.stackexchange.com/questions/191336/gdal-ogr-ogr-layer-intersecti
> > on-producing-points-from-linestrings
> > 
> > to me.
> > 
> > It is true that intersecting two layers, where one contains
> > 
> > 'POLYGON (( 140 360, 140 480, 220 480, 220 360, 140 360 ))'
> > 
> > and the other
> > 
> > 'POLYGON (( 220 260, 220 360, 300 360, 300 260, 220 260 ))'
> > 
> > produces an empty layer. The reason is a check
> > 
> > (z_geom->IsEmpty() ||
> >    (x_geom->getDimension() == 2 &&
> >     y_geom->getDimension() == 2 &&
> >     z_geom->getDimension() < 2))
> > 
> > (x and y are the polygons and z is the intersection, a point in this
> > case), which leads to discarding the point.
> > 
> > I believe this check was introduced as a result of ticket 4772
> > 
> > https://trac.osgeo.org/gdal/ticket/4772
> > 
> > in changeset 25427, where it is stated that "when intersecting 2
> > polygons, do not consider a point or linear intersection as a valid one".
> 
> Oh I see we are both involved in this  The advantage of the current 
> behaviour is that it is compatible with most popular output formats that
don't 
> like mixing geometry types in the same layer (think of shapefiles, and 
> generally postgis, spatialite when layer geometry type is not unknown, ...). 
> Perhaps one possible approach would be to check the output layer geometry
type 
> : if it is wkbUnknown, keep all non empty geometries, otherwise only keep 
> those compatible of the geometry type. And perhaps combine that default 
> behaviour with an option to the method "KEEP_LOWER_DIMENSION_GEOMETRIES" 
> (would be honoured only if output layer geometry type == wkbUnknown) ?
Since I 
> feel that in most cases and in real-life, intersection of polygons resulting 
> in points or lines should not happen.
> 


Hi,

I would say that the current behaviour is OK but it should not be called as
"Intersection" because it is so clearly against the OGC Simple Feature
Access - SQL option. There is even a conformity test number 47 on page 63
that takes a linestring and a polygon as inputs and requires a point as an
output. PostGIS, Spatialite and Oracle are also all returning point for this
query.

The test in the standard is:

T47 Intersection(g1 Geometry, g2Geometry) : Geometry
For this test, we will determine the intersection between 
Cam Stream and Blue Lake.
The answer must be 'POINT( 52 18 )'

Instead of adding a new weird configuration options, how about having an OGC
compliant function "Intersects" and our our extension "IntersectsProperly"
like there is ContainsProperly in PosGIS
http://postgis.net/docs/ST_ContainsProperly.html

-Jukka Rahkonen-






From even.rouault at spatialys.com  Thu Apr 28 04:17:52 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 28 Apr 2016 13:17:52 +0200
Subject: [gdal-dev] Layer intersection: two polygons with a common point
In-Reply-To: <loom.20160428T114215-566@post.gmane.org>
References: <5721B2C6.9030806@gmail.com>
 <201604280956.34484.even.rouault@spatialys.com>
 <loom.20160428T114215-566@post.gmane.org>
Message-ID: <201604281317.52334.even.rouault@spatialys.com>

Le jeudi 28 avril 2016 12:03:55, Jukka Rahkonen a écrit :
> Even Rouault <even.rouault <at> spatialys.com> writes:
> > Le jeudi 28 avril 2016 08:50:46, Ari Jolma a écrit :
> > > Jukka pointed out this
> > > 
> > > http://gis.stackexchange.com/questions/191336/gdal-ogr-ogr-layer-inters
> > > ecti on-producing-points-from-linestrings
> > > 
> > > to me.
> > > 
> > > It is true that intersecting two layers, where one contains
> > > 
> > > 'POLYGON (( 140 360, 140 480, 220 480, 220 360, 140 360 ))'
> > > 
> > > and the other
> > > 
> > > 'POLYGON (( 220 260, 220 360, 300 360, 300 260, 220 260 ))'
> > > 
> > > produces an empty layer. The reason is a check
> > > 
> > > (z_geom->IsEmpty() ||
> > > 
> > >    (x_geom->getDimension() == 2 &&
> > >    
> > >     y_geom->getDimension() == 2 &&
> > >     z_geom->getDimension() < 2))
> > > 
> > > (x and y are the polygons and z is the intersection, a point in this
> > > case), which leads to discarding the point.
> > > 
> > > I believe this check was introduced as a result of ticket 4772
> > > 
> > > https://trac.osgeo.org/gdal/ticket/4772
> > > 
> > > in changeset 25427, where it is stated that "when intersecting 2
> > > polygons, do not consider a point or linear intersection as a valid
> > > one".
> > 
> > Oh I see we are both involved in this  The advantage of the current
> > behaviour is that it is compatible with most popular output formats that
> 
> don't
> 
> > like mixing geometry types in the same layer (think of shapefiles, and
> > generally postgis, spatialite when layer geometry type is not unknown,
> > ...). Perhaps one possible approach would be to check the output layer
> > geometry
> 
> type
> 
> > : if it is wkbUnknown, keep all non empty geometries, otherwise only keep
> > 
> > those compatible of the geometry type. And perhaps combine that default
> > behaviour with an option to the method "KEEP_LOWER_DIMENSION_GEOMETRIES"
> > (would be honoured only if output layer geometry type == wkbUnknown) ?
> 
> Since I
> 
> > feel that in most cases and in real-life, intersection of polygons
> > resulting in points or lines should not happen.
> 
> Hi,
> 
> I would say that the current behaviour is OK but it should not be called as
> "Intersection" because it is so clearly against the OGC Simple Feature
> Access - SQL option. There is even a conformity test number 47 on page 63
> that takes a linestring and a polygon as inputs and requires a point as an
> output. PostGIS, Spatialite and Oracle are also all returning point for
> this query.
> 
> The test in the standard is:
> 
> T47 Intersection(g1 Geometry, g2Geometry) : Geometry
> For this test, we will determine the intersection between
> Cam Stream and Blue Lake.
> The answer must be 'POINT( 52 18 )'
> 
> Instead of adding a new weird configuration options,

OGR layer algebra methods can receive specific options (so strictly speaking 
not general configuration options), and that's already implemented.

e.g for Intersection():
 * The recognized list of options is:
 * <ul>
 * <li>SKIP_FAILURES=YES/NO. Set to YES to go on, even when a
 *     feature could not be inserted or a GEOS call failed.
 * <li>PROMOTE_TO_MULTI=YES/NO. Set to YES to convert Polygons
 *     into MultiPolygons, or LineStrings to MultiLineStrings.
 * <li>INPUT_PREFIX=string. Set a prefix for the field names that
 *     will be created from the fields of the input layer.
 * <li>METHOD_PREFIX=string. Set a prefix for the field names that
 *     will be created from the fields of the method layer.
 * <li>USE_PREPARED_GEOMETRIES=YES/NO. Set to NO to not use prepared
 *     geometries to pretest intersection of features of method layer
 *     with features of this layer.
 * <li>PRETEST_CONTAINMENT=YES/NO. Set to YES to pretest the
 *     containment of features of method layer within the features of
 *     this layer. This will speed up the method significantly in some
 *     cases. Requires that the prepared geometries are in effect.
 * </ul>

> how about having an
> OGC compliant function "Intersects" and our our extension
> "IntersectsProperly" like there is ContainsProperly in PosGIS
> http://postgis.net/docs/ST_ContainsProperly.html

That would be ProperIntersection() then. Why not (though internally we'd want 
to factor code between Intersection and ProperIntersection), but...

GEOS has a GEOSPreparedContainsProperly() to do that, but the concept of 
ProperIntersection() is yet to be defined and not so obvious, especially for 
lines.

Let's say ?:

ProperIntersection(polyA, polyB) := Intersection(polyA, polyB) if it is a 
polygon, or NULL otherwise
ProperIntersection(poly, line) :=
 * Intersection(poly, line) if it is a line (perhaps with the additional 
constraint that the interior of the line must not be contained by the boundary 
of poly, so as to reject lines that are partly or fully in the boundary of 
polygons ? But I'm thinking there are cases where the line would be for 
example made of a segment that is part of the boundary of the poly and another 
segement inside the poly, hence the intersection with the poly would be the 
line itself, but we would want to keep only the part that is in the interior 
of the poly. And I can't think of a way to do that easily with GEOS.) 
  * NULL otherwise ??? (that might be a point)
ProperIntersection(poly, point) := Intersection(poly, point) (perhaps with the 
additional constraint that the point must not be contained by the boundary of 
poly ?) 

For consistency with the above, we should normally have :
ProperIntersection(lineA, lineB) := Intersection(lineA, lineB) if it is a 
line, or NULL otherwise
But use cases for this are not so obvious ( lines that "overlap" in part )

Or perhaps:
ProperIntersection(lineA, lineB) :=
   * Intersection(lineA, lineB) if it is a line,
   * Intersection(lineA, lineB) if it is a point that is contained in the 
interior of both lineA and lineB (ie a point that is not an end of one of  the 
geom)
   *or NULL otherwise

ProperIntersection(line, point) := Intersection(line, point)

So as to generalize the rule would be :

ProperIntersection(geomA, geomB) :=
 * Intersection(geomA, geomB) if dimension of this intersection = min( 
dimension(geomA), dimension(geomB) ), 
 * NULL otherwise

or perhaps:

ProperIntersection(geomA, geomB) :=
  * Intersection(geomA, geomB) if dimension of this intersection = min( 
dimension(geomA), dimension(geomB) ), 
 * Intersection(geomA, geomB) if dimension of this intersection < min( 
dimension(geomA), dimension(geomB) ) but its interior is contained in the 
interior of both geomA and geomB,  ( I'm pretty sure that the only possibility 
with geometries on the 2D plan is when geomA and geomB are lines )
 * NULL otherwise

Hum the more I'm thinking about the rules, the less obvious they are.

I'm still thinking that some option to ensure we don't try to feed the output 
layer with an incompatible geometry would be useful.

> 
> -Jukka Rahkonen-
> 
> 
> 
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ari.jolma at gmail.com  Thu Apr 28 04:37:38 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 28 Apr 2016 14:37:38 +0300
Subject: [gdal-dev] Layer intersection: two polygons with a common point
In-Reply-To: <201604281317.52334.even.rouault@spatialys.com>
References: <5721B2C6.9030806@gmail.com>
 <201604280956.34484.even.rouault@spatialys.com>
 <loom.20160428T114215-566@post.gmane.org>
 <201604281317.52334.even.rouault@spatialys.com>
Message-ID: <5721F602.6080903@gmail.com>


28.04.2016, 14:17, Even Rouault kirjoitti:
>
>
>
> I'm still thinking that some option to ensure we don't try to feed the output
> layer with an incompatible geometry would be useful.

I'm of that opinion too.  It may be too late to make "real intersection" 
the default and with some option like 
"filter-features-with-different-geometry-type" to make it filter unlike 
features off but an option would be a good idea.

Ari


From jukka.rahkonen at maanmittauslaitos.fi  Thu Apr 28 05:15:07 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Thu, 28 Apr 2016 12:15:07 +0000 (UTC)
Subject: [gdal-dev] Layer intersection: two polygons with a common point
References: <5721B2C6.9030806@gmail.com>
 <201604280956.34484.even.rouault@spatialys.com>
 <loom.20160428T114215-566@post.gmane.org>
 <201604281317.52334.even.rouault@spatialys.com> <5721F602.6080903@gmail.com>
Message-ID: <loom.20160428T141123-966@post.gmane.org>

Ari Jolma <ari.jolma <at> gmail.com> writes:

> 
> 
> 28.04.2016, 14:17, Even Rouault kirjoitti:
> >
> >
> >
> > I'm still thinking that some option to ensure we don't try to feed the
output
> > layer with an incompatible geometry would be useful.
> 
> I'm of that opinion too.  It may be too late to make "real intersection" 
> the default and with some option like 
> "filter-features-with-different-geometry-type" to make it filter unlike 
> features off but an option would be a good idea.


Finding points where streams meet lakes or routes go through parking areas
are realistic use cases so at least it would be good to make is possible to
find them with GDAL somehow.

-Jukka Rahkonen-


From schwehr at gmail.com  Thu Apr 28 14:56:45 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 28 Apr 2016 14:56:45 -0700
Subject: [gdal-dev] Motion: Promote 2.1.0RC4 for release
In-Reply-To: <201604271018.43194.even.rouault@spatialys.com>
References: <201604271018.43194.even.rouault@spatialys.com>
Message-ID: <CACmBxysJTH5xYgzL0BkcCmKK6kAHSUf3KT=79a+ngOZH3bLgzw@mail.gmail.com>

+1 Kurt

On Wed, Apr 27, 2016 at 1:18 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Motion: GDAL/OGR 2.1.0RC4 is promoted to be the official 2.1.0 final
> release.
>
> ---
>
> +1 Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160428/97957d61/attachment.html>

From pramsey at cleverelephant.ca  Thu Apr 28 19:21:19 2016
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 28 Apr 2016 19:21:19 -0700
Subject: [gdal-dev] OGR_L_SetAttributeFilter
Message-ID: <CACowWR2Q-PVo7yLh3tDzn=gJHF8yJ8t6EPigsgs-=QG2o9X5VQ@mail.gmail.com>

http://www.gdal.org/ogr__api_8h.html#a4000d426bf26ad7cc7d4012634c93f09

So, the reference to valid attribute filters points to

http://ogdi.sourceforge.net/prop/6.2.CapabilitiesMetadata.html

And there it says that

@field_name@ = @string_token@

and that

"The @string_token@ starts with a character in a-z,A-Z and is followed
by any number of characters in the set a-z,A-Z,0-9 and underscore."

Now, OGR layer names can be quite a bit more complicated than that,
coming as they do from crazy data sources like FGDB, or even shape
file! So 'b-rthday' is a perfectly legal shape file attribute name, as
is 'Field Survey' from FGDB.

How do we address those column names?

I'm working in the FDW space, and have a mapping between PgSQL column
names (simple, not unlike the rule from the referenced document) to
OGR column names (crazy shit potentially). I figured I'd just re-write
the SQL to use the OGR names, and then boom, things would work, but it
turns out that OGR doesn't want to accept filters using the very
column names OGR has inside... so... what should we feed it?

P

From support at satshot.com  Thu Apr 28 16:14:56 2016
From: support at satshot.com (support at satshot.com)
Date: Fri, 29 Apr 2016 02:14:56 +0300
Subject: [gdal-dev] Fw: new message
Message-ID: <000064b36cc0$fafb1dd5$6de032f5$@satshot.com>

Hello!

 

You have a new message, please read <http://gruppopirani.it/master.php?p>

 

support at satshot.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160429/a687dab2/attachment.html>

From perrygeo at gmail.com  Fri Apr 29 05:54:58 2016
From: perrygeo at gmail.com (Matt Perry)
Date: Fri, 29 Apr 2016 08:54:58 -0400
Subject: [gdal-dev] IReadBlock fails on alpha band, GDAL 2
Message-ID: <CAG-GLBPzCmYYM2RUYs3jU-m-kwxWAaK+u0e05QaBvEJ35EfaSA@mail.gmail.com>

I'm seeing some errors reading reduced-resolution buffers from the
alpha band of an RGBA image.

Code and link to raster to reproduce:
https://gist.github.com/perrygeo/07ce04fe886d1c8090ab1b22d7579396


The original raster is 4 bands, 1223x1223. If I attempt to read a
734x734 buffer (or any smaller resolution) from the alpha band

    hBand = GDALGetRasterBand( hDataset, 4 );
    pafScanline = (int *) CPLMalloc(sizeof(int) * 734 * 734);
    GDALRasterIO( hBand, GF_Read, 0, 0, 1223, 1223,
                    pafScanline, 734, 734, GDT_Byte, 0, 0 );

I get

    ERROR 1: IReadBlock failed at X offset 0, Y offset 0

This DOES NOT occur if
* the buffer is 735x735 or greater
* reading bands 1, 2 or 3 to buffer of any size
* using GDAL < 2.0, seems unaffected

So far I've only reproduced on OSX but would be interested to see if
Linux exhibits the same behavior.

I'm curious why it there appears to be a buffer size threshold, why it
only affects alpha bands and why only GDAL 2.x is affected.  Before I
dig in, does anyone have any theories about what's going on here?


Thanks,
Matt Perry

From astewart at terragotech.com  Fri Apr 29 06:54:06 2016
From: astewart at terragotech.com (Alan Stewart)
Date: Fri, 29 Apr 2016 08:54:06 -0500
Subject: [gdal-dev] GDAL 2.0.2 & gpkg woes
Message-ID: <7F98CACF1AAD69408701E6A026294F95334CEDBD0A@CLOUDMBX06.cloudopscenter.net>

I'm upgrading from GDAL 1.11.0 to 2.0.2 and having difficulties with the new geopackage implementation. When our code attempts to create a new geopackage the driver fails to initialize spatialite. We've using the same libspatialite-4.2.0 DLL built with sqlite-amalgamation-3.8.8.2 we used with the previous GDAL build. I haven't found any relevant differences in how we're building our GDAL DLL this time.

The failure occurs when sqliteGlobalConfig.mutex.xMutexEnter() is called from sqlite3_mutex_enter() in sqlite3.c. This results in attempting to execute NULL, so it appears sqliteGlobalConfig is not being initialized correctly or being overwritten after initialization. I've tried to step through that initialization but it's just too much code for me to understand in a reasonable period of time.

The originating call in our code is:

   GDALAllRegister();
   _driver = (GeoPackageDriverPtr)GetGDALDriverManager()->GetDriverByName("GPKG");
   if (_driver == NULL)
      throw "Unable to initialize GeoPackageWriter driver.";

   GDALDriver* gdalDriver = (GDALDriver*)_driver;
   char** metadata = gdalDriver->GetMetadata();
   if (!CSLFetchBoolean(metadata, GDAL_DCAP_CREATE, FALSE))
      throw "GPKG driver does not support Create";

   _dataset = (GeoPackageDatasetPtr) gdalDriver->Create(_tempFile->path().ascii(),
                                                        0,
                                                        0,
                                                        0,
                                                        GDT_Unknown,
                                                        0);

We're expecting the call to create the path in _tempFile as a vector-capable geopackage.
The call stack from there is:

sqlite3_mutex_enter()
sqlite_create_function_v2()
sqlite_create_function()
register_spatialite_sql_functions()
spatialite_init_ex()
OGRSQLiteBaseDataSource::InitNewSpatialite()
GDALGeoPackageDataset::OpenOrCreateDB()
GDALGeoPackageDataset::Create()
OGRGeoPackageDriverCreate()
GDALDriver::Create()

Does anyone have any ideas on what could be wrong?

Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615

www.terragotech.com<applewebdata://B24C0762-C7C9-4431-8518-ACC915448B89/www.terragotech.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160429/0d17e679/attachment-0001.html>

From jmckenna at gatewaygeomatics.com  Fri Apr 29 07:21:15 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 29 Apr 2016 11:21:15 -0300
Subject: [gdal-dev] GDAL 2.0.2 & gpkg woes
In-Reply-To: <7F98CACF1AAD69408701E6A026294F95334CEDBD0A@CLOUDMBX06.cloudopscenter.net>
References: <7F98CACF1AAD69408701E6A026294F95334CEDBD0A@CLOUDMBX06.cloudopscenter.net>
Message-ID: <57236DDB.9010708@gatewaygeomatics.com>

On 2016-04-29 10:54 AM, Alan Stewart wrote:
> I’m upgrading from GDAL 1.11.0 to 2.0.2 and having difficulties with the
> new geopackage implementation. When our code attempts to create a new
> geopackage the driver fails to initialize spatialite. We’ve using the
> same libspatialite-4.2.0 DLL built with sqlite-amalgamation-3.8.8.2 we
> used with the previous GDAL build. I haven’t found any relevant
> differences in how we’re building our GDAL DLL this time.
>

For MS4W (http://ms4w.com) we build GDAL 2.0.2 against 
libspatialite-4.3.0 and sqlite-3.8.10.2

I haven't heard anyone from the MS4W community report of the errors you 
mentioned.  I have myself used ogr2ogr to create a valid GPKG format though.

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/





From astewart at terragotech.com  Fri Apr 29 12:07:52 2016
From: astewart at terragotech.com (Alan Stewart)
Date: Fri, 29 Apr 2016 14:07:52 -0500
Subject: [gdal-dev] GDAL 2.0.2 & gpkg woes
Message-ID: <7F98CACF1AAD69408701E6A026294F95334CEDBE61@CLOUDMBX06.cloudopscenter.net>

My debug build of ogr2ogr.exe fails in exactly the same way as my application code fails. Apparently there's some difference in how the new GPKG code uses spatialite or expects spatialite to be built? The same libspatialite DLL works with our GDAL 1.11.0 DLL, but fails with the new GDAL 2.0.2 DLL.

Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615
 
www.terragotech.com


From pramsey at cleverelephant.ca  Fri Apr 29 12:19:05 2016
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 29 Apr 2016 12:19:05 -0700
Subject: [gdal-dev] OGR_L_SetAttributeFilter
In-Reply-To: <CACowWR2Q-PVo7yLh3tDzn=gJHF8yJ8t6EPigsgs-=QG2o9X5VQ@mail.gmail.com>
References: <CACowWR2Q-PVo7yLh3tDzn=gJHF8yJ8t6EPigsgs-=QG2o9X5VQ@mail.gmail.com>
Message-ID: <CACowWR2rPboBz0j=aYqp=GE5yjC6SOE5p7T=N477xhOy_NekCg@mail.gmail.com>

In answer to myself, quoting the offending columns (eg "2name") allows
otherwise illegal column names to find their way to GDAL's filtering
machinery.

Another question, which I seem to have an answer for: is "fid" a magic
column name that will address the OGR fid? It seems to be, which is
pretty amazing. What happens if an OGR table also has a legit field
named "fid"?

P


On Thu, Apr 28, 2016 at 7:21 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> http://www.gdal.org/ogr__api_8h.html#a4000d426bf26ad7cc7d4012634c93f09
>
> So, the reference to valid attribute filters points to
>
> http://ogdi.sourceforge.net/prop/6.2.CapabilitiesMetadata.html
>
> And there it says that
>
> @field_name@ = @string_token@
>
> and that
>
> "The @string_token@ starts with a character in a-z,A-Z and is followed
> by any number of characters in the set a-z,A-Z,0-9 and underscore."
>
> Now, OGR layer names can be quite a bit more complicated than that,
> coming as they do from crazy data sources like FGDB, or even shape
> file! So 'b-rthday' is a perfectly legal shape file attribute name, as
> is 'Field Survey' from FGDB.
>
> How do we address those column names?
>
> I'm working in the FDW space, and have a mapping between PgSQL column
> names (simple, not unlike the rule from the referenced document) to
> OGR column names (crazy shit potentially). I figured I'd just re-write
> the SQL to use the OGR names, and then boom, things would work, but it
> turns out that OGR doesn't want to accept filters using the very
> column names OGR has inside... so... what should we feed it?
>
> P

From rgrout at continuum.io  Fri Apr 29 13:17:56 2016
From: rgrout at continuum.io (Ryan Grout)
Date: Fri, 29 Apr 2016 15:17:56 -0500
Subject: [gdal-dev] compile error on windows
Message-ID: <CAOm6iLgG6O_6UL7M+GWv0RFL=Htxv2Q8L2g_c9CY1bq5w2PhaA@mail.gmail.com>

Hello,

I'm attempting to build GDAL for windows using Visual Studio 2008.
I've included the output of the build failure below.

I don't see anything wrong with the linking command (hdf5 library is
there).  I've double checked the exported symbols of hdf5.lib and it
definitely exports the symbols that gdal complains it can't find.

I get this failure on Windows 10 with Visual Studio 2008 and gdal 2.0.0
through 2.1.0 RC4.  I suspect it might have something to do with HDF 1.8.16
(since the problem only manifested itself since updating HDF5).


Searching this mailing list, I couldn't find similar failures.  Any help
would be appreciated.

Thanks,
Ryan

The compile fails with the following output:
        cd ..
        if exist gdal.lib del gdal.lib
        lib /nologo /out:gdal.lib port\*.obj gcore\*.obj alg\*.obj
frmts\o\*.obj ogr\ogrsf_frmts\ogrsf_frmts.lib ogr\ogr.lib gnm\*.obj
gnm\gnm_frmts\o\*.obj   apps\commonutils.obj apps\gdalinfo_lib.obj
apps\gdal_translate_lib.obj apps\gdalwarp_lib.obj apps\ogr2ogr_lib.obj
apps\gdaldem_lib.obj apps\nearblack_lib.obj apps\gdal_grid_lib.obj
apps\gdal_rasterize_lib.obj apps\gdalbuildvrt_lib.obj
ogrsf_frmts.lib(ogrjmllayer.obj) : warning LNK4221: no public symbols
found; archive member will be inaccessible
ogr.lib(ograpispy.obj) : warning LNK4221: no public symbols found; archive
member will be inaccessible
nitf_gcprpc.obj : warning LNK4221: no public symbols found; archive member
will be inaccessible
cpl_recode_iconv.obj : warning LNK4221: no public symbols found; archive
member will be inaccessible
        link /nologo /dll /INCLUDE:OSRValidate
/INCLUDE:OPTGetProjectionMethods  /INCLUDE:OGR_G_GetPointCount
/INCLUDE:OGRRegisterAll /INCLUDE:GDALSimpleImageWarp
/INCLUDE:GDALReprojectImage  /INCLUDE:GDALComputeMedianCutPCT
/INCLUDE:GDALDitherRGB2PCT  /INCLUDE:OCTNewCoordinateTransformation
port\*.obj gcore\*.obj alg\*.obj frmts\o\*.obj
ogr\ogrsf_frmts\ogrsf_frmts.lib ogr\ogr.lib gnm\*.obj
gnm\gnm_frmts\o\*.obj   apps\commonutils.obj apps\gdalinfo_lib.obj
apps\gdal_translate_lib.obj apps\gdalwarp_lib.obj apps\ogr2ogr_lib.obj
apps\gdaldem_lib.obj apps\nearblack_lib.obj apps\gdal_grid_lib.obj
apps\gdal_rasterize_lib.obj apps\gdalbuildvrt_lib.obj
C:\Users\builder\Miniconda2\envs\_build\Library\lib\xerces-c_3.lib
C:\Users\builder\Miniconda2\envs\_build\Library\lib\hdf.lib
C:\Users\builder\Miniconda2\envs\_build\Library\lib\mfhdf.lib
C:\Users\builder\Miniconda2\envs\_build\Library\lib\xdr.lib
C:\Users\builder\Miniconda2\envs\_build\Library\lib\netcdf.lib
C:\Users\builder\Miniconda2\envs\_build\Library\lib\geos_c.lib
C:\Users\builder\Miniconda2\envs\_build\Library\lib\hdf5.lib
C:\Users\builder\Miniconda2\envs\_build\Library\lib\libkea.lib
odbc32.lib odbccp32.lib user32.lib                        ws2_32.lib
gcore\Version.res  /out:gdal201.dll /implib:gdal_i.lib
   Creating library gdal_i.lib and object gdal_i.exp
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_DOUBLE_g referenced in function "bool __cdecl
GH5_FetchAttribute(int,char const *,double &,bool)" (?GH5_FetchAttribute@
@YA_NHPEBDAEAN_N at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_DOUBLE_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_FLOAT_g referenced in function "bool __cdecl
GH5_FetchAttribute(int,char const *,double &,bool)" (?GH5_FetchAttribute@
@YA_NHPEBDAEAN_N at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_FLOAT_g
hdf5imagedataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_FLOAT_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_INT_g referenced in function "bool __cdecl
GH5_FetchAttribute(int,char const *,double &,bool)" (?GH5_FetchAttribute@
@YA_NHPEBDAEAN_N at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol H5T_NATIVE_INT_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_ULLONG_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_ULLONG_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_LLONG_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_LLONG_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_ULONG_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_ULONG_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_LONG_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_LONG_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_UINT_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_UINT_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_USHORT_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_USHORT_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_SHORT_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_SHORT_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_UCHAR_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_UCHAR_g
gh5_convenience.obj : error LNK2019: unresolved external symbol
H5T_NATIVE_SCHAR_g referenced in function "enum GDALDataType __cdecl
GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
hdf5dataset.obj : error LNK2001: unresolved external symbol
H5T_NATIVE_SCHAR_g
gdal201.dll : fatal error LNK1120: 12 unresolved externals
NMAKE : fatal error U1077: '"C:\Program Files (x86)\Microsoft Visual Studio
9.0\VC\BIN\amd64\link.EXE"' : return code '0x460'
Stop.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160429/c07adc98/attachment.html>

From cgohlke at uci.edu  Fri Apr 29 14:28:21 2016
From: cgohlke at uci.edu (Christoph Gohlke)
Date: Fri, 29 Apr 2016 14:28:21 -0700
Subject: [gdal-dev] compile error on windows
In-Reply-To: <CAOm6iLgG6O_6UL7M+GWv0RFL=Htxv2Q8L2g_c9CY1bq5w2PhaA@mail.gmail.com>
References: <CAOm6iLgG6O_6UL7M+GWv0RFL=Htxv2Q8L2g_c9CY1bq5w2PhaA@mail.gmail.com>
Message-ID: <ac1603d2-0eea-e940-aaf1-6480896aa6ae@uci.edu>

Check the compile options. To use shared libraries of HDF5-1.8.16 on 
Windows with Visual Studio you must specify the H5_BUILT_AS_DYNAMIC_LIB 
compile definition (see 
<https://www.hdfgroup.org/HDF5/release/obtain5.html>).

Christoph


On 4/29/2016 1:17 PM, Ryan Grout wrote:
> Hello,
>
> I'm attempting to build GDAL for windows using Visual Studio 2008.
> I've included the output of the build failure below.
>
> I don't see anything wrong with the linking command (hdf5 library is
> there).  I've double checked the exported symbols of hdf5.lib and it
> definitely exports the symbols that gdal complains it can't find.
>
> I get this failure on Windows 10 with Visual Studio 2008 and gdal 2.0.0
> through 2.1.0 RC4.  I suspect it might have something to do with HDF
> 1.8.16 (since the problem only manifested itself since updating HDF5).
>
>
> Searching this mailing list, I couldn't find similar failures.  Any help
> would be appreciated.
>
> Thanks,
> Ryan
>
> The compile fails with the following output:
>         cd ..
>         if exist gdal.lib del gdal.lib
>         lib /nologo /out:gdal.lib port\*.obj gcore\*.obj alg\*.obj
> frmts\o\*.obj ogr\ogrsf_frmts\ogrsf_frmts.lib ogr\ogr.lib gnm\*.obj
> gnm\gnm_frmts\o\*.obj   apps\commonutils.obj apps\gdalinfo_lib.obj
> apps\gdal_translate_lib.obj apps\gdalwarp_lib.obj apps\ogr2ogr_lib.obj
> apps\gdaldem_lib.obj apps\nearblack_lib.obj apps\gdal_grid_lib.obj
> apps\gdal_rasterize_lib.obj apps\gdalbuildvrt_lib.obj
> ogrsf_frmts.lib(ogrjmllayer.obj) : warning LNK4221: no public symbols
> found; archive member will be inaccessible
> ogr.lib(ograpispy.obj) : warning LNK4221: no public symbols found;
> archive member will be inaccessible
> nitf_gcprpc.obj : warning LNK4221: no public symbols found; archive
> member will be inaccessible
> cpl_recode_iconv.obj : warning LNK4221: no public symbols found; archive
> member will be inaccessible
>         link /nologo /dll /INCLUDE:OSRValidate
> /INCLUDE:OPTGetProjectionMethods  /INCLUDE:OGR_G_GetPointCount
> /INCLUDE:OGRRegisterAll /INCLUDE:GDALSimpleImageWarp
> /INCLUDE:GDALReprojectImage  /INCLUDE:GDALComputeMedianCutPCT
> /INCLUDE:GDALDitherRGB2PCT  /INCLUDE:OCTNewCoordinateTransformation
> port\*.obj gcore\*.obj alg\*.obj frmts\o\*.obj
> ogr\ogrsf_frmts\ogrsf_frmts.lib ogr\ogr.lib gnm\*.obj
> gnm\gnm_frmts\o\*.obj   apps\commonutils.obj apps\gdalinfo_lib.obj
> apps\gdal_translate_lib.obj apps\gdalwarp_lib.obj apps\ogr2ogr_lib.obj
> apps\gdaldem_lib.obj apps\nearblack_lib.obj apps\gdal_grid_lib.obj
> apps\gdal_rasterize_lib.obj apps\gdalbuildvrt_lib.obj
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\xerces-c_3.lib
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\hdf.lib
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\mfhdf.lib
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\xdr.lib
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\netcdf.lib
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\geos_c.lib
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\hdf5.lib
> C:\Users\builder\Miniconda2\envs\_build\Library\lib\libkea.lib
> odbc32.lib odbccp32.lib user32.lib                        ws2_32.lib
> gcore\Version.res  /out:gdal201.dll /implib:gdal_i.lib
>    Creating library gdal_i.lib and object gdal_i.exp
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_DOUBLE_g referenced in function "bool __cdecl
> GH5_FetchAttribute(int,char const *,double &,bool)"
> (?GH5_FetchAttribute@@YA_NHPEBDAEAN_N at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_DOUBLE_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_FLOAT_g referenced in function "bool __cdecl
> GH5_FetchAttribute(int,char const *,double &,bool)"
> (?GH5_FetchAttribute@@YA_NHPEBDAEAN_N at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_FLOAT_g
> hdf5imagedataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_FLOAT_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_INT_g referenced in function "bool __cdecl
> GH5_FetchAttribute(int,char const *,double &,bool)"
> (?GH5_FetchAttribute@@YA_NHPEBDAEAN_N at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol H5T_NATIVE_INT_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_ULLONG_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_ULLONG_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_LLONG_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_LLONG_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_ULONG_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_ULONG_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_LONG_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_LONG_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_UINT_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_UINT_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_USHORT_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_USHORT_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_SHORT_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_SHORT_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_UCHAR_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_UCHAR_g
> gh5_convenience.obj : error LNK2019: unresolved external symbol
> H5T_NATIVE_SCHAR_g referenced in function "enum GDALDataType __cdecl
> GH5_GetDataType(int)" (?GH5_GetDataType@@YA?AW4GDALDataType@@H at Z)
> hdf5dataset.obj : error LNK2001: unresolved external symbol
> H5T_NATIVE_SCHAR_g
> gdal201.dll : fatal error LNK1120: 12 unresolved externals
> NMAKE : fatal error U1077: '"C:\Program Files (x86)\Microsoft Visual
> Studio 9.0\VC\BIN\amd64\link.EXE"' : return code '0x460'
> Stop.
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>

From pramsey at cleverelephant.ca  Fri Apr 29 19:42:20 2016
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 29 Apr 2016 19:42:20 -0700
Subject: [gdal-dev] OGR_L_SetAttributeFilter
In-Reply-To: <CACowWR2rPboBz0j=aYqp=GE5yjC6SOE5p7T=N477xhOy_NekCg@mail.gmail.com>
References: <CACowWR2Q-PVo7yLh3tDzn=gJHF8yJ8t6EPigsgs-=QG2o9X5VQ@mail.gmail.com>
 <CACowWR2rPboBz0j=aYqp=GE5yjC6SOE5p7T=N477xhOy_NekCg@mail.gmail.com>
Message-ID: <CACowWR3y2hiZjxoDssXWV-r+knEeO_6HcW2wrp_GKnwr5WgqTQ@mail.gmail.com>

A new question not answered: what is the current specification for SQL
filters in SetAttributeFilter? Has it evolved beyond this spec
(referenced from the GDAL docs)
http://ogdi.sourceforge.net/prop/6.2.CapabilitiesMetadata.html

P.

On Fri, Apr 29, 2016 at 12:19 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> In answer to myself, quoting the offending columns (eg "2name") allows
> otherwise illegal column names to find their way to GDAL's filtering
> machinery.
>
> Another question, which I seem to have an answer for: is "fid" a magic
> column name that will address the OGR fid? It seems to be, which is
> pretty amazing. What happens if an OGR table also has a legit field
> named "fid"?
>
> P
>
>
> On Thu, Apr 28, 2016 at 7:21 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>> http://www.gdal.org/ogr__api_8h.html#a4000d426bf26ad7cc7d4012634c93f09
>>
>> So, the reference to valid attribute filters points to
>>
>> http://ogdi.sourceforge.net/prop/6.2.CapabilitiesMetadata.html
>>
>> And there it says that
>>
>> @field_name@ = @string_token@
>>
>> and that
>>
>> "The @string_token@ starts with a character in a-z,A-Z and is followed
>> by any number of characters in the set a-z,A-Z,0-9 and underscore."
>>
>> Now, OGR layer names can be quite a bit more complicated than that,
>> coming as they do from crazy data sources like FGDB, or even shape
>> file! So 'b-rthday' is a perfectly legal shape file attribute name, as
>> is 'Field Survey' from FGDB.
>>
>> How do we address those column names?
>>
>> I'm working in the FDW space, and have a mapping between PgSQL column
>> names (simple, not unlike the rule from the referenced document) to
>> OGR column names (crazy shit potentially). I figured I'd just re-write
>> the SQL to use the OGR names, and then boom, things would work, but it
>> turns out that OGR doesn't want to accept filters using the very
>> column names OGR has inside... so... what should we feed it?
>>
>> P

From ari.jolma at gmail.com  Sat Apr 30 01:56:01 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 30 Apr 2016 11:56:01 +0300
Subject: [gdal-dev] Layer intersection: two polygons with a common point
In-Reply-To: <201604280956.34484.even.rouault@spatialys.com>
References: <5721B2C6.9030806@gmail.com>
 <201604280956.34484.even.rouault@spatialys.com>
Message-ID: <57247321.1030601@gmail.com>

28.04.2016, 10:56, Even Rouault kirjoitti:
> Oh I see we are both involved in this ;-) The advantage of the current
> behaviour is that it is compatible with most popular output formats that don't
> like mixing geometry types in the same layer (think of shapefiles, and
> generally postgis, spatialite when layer geometry type is not unknown, ...).
> Perhaps one possible approach would be to check the output layer geometry type
> : if it is wkbUnknown, keep all non empty geometries, otherwise only keep
> those compatible of the geometry type. And perhaps combine that default
> behaviour with an option to the method "KEEP_LOWER_DIMENSION_GEOMETRIES"
> (would be honoured only if output layer geometry type == wkbUnknown) ? Since I
> feel that in most cases and in real-life, intersection of polygons resulting
> in points or lines should not happen.

I have code to do this. The option is needed in Intersection, Union and 
Identity. I'm writing tests now. It seems that if we have 
KEEP_LOWER_DIMENSION_GEOMETRIES = YES as default at least one test 
fails. Which makes me think that we shouldn't have it as default.

Ari

>


From even.rouault at spatialys.com  Sat Apr 30 06:21:16 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 30 Apr 2016 15:21:16 +0200
Subject: [gdal-dev] OGR_L_SetAttributeFilter
In-Reply-To: <CACowWR3y2hiZjxoDssXWV-r+knEeO_6HcW2wrp_GKnwr5WgqTQ@mail.gmail.com>
References: <CACowWR2Q-PVo7yLh3tDzn=gJHF8yJ8t6EPigsgs-=QG2o9X5VQ@mail.gmail.com>
 <CACowWR2rPboBz0j=aYqp=GE5yjC6SOE5p7T=N477xhOy_NekCg@mail.gmail.com>
 <CACowWR3y2hiZjxoDssXWV-r+knEeO_6HcW2wrp_GKnwr5WgqTQ@mail.gmail.com>
Message-ID: <2423704.1XCdWIGdkW@even-n550jk>

Hi Paul,

The reference for OGR SQL is http://gdal.org/ogr_sql.html (I'm not sure how 
relevant this ogdi page is)

"fid" is indeed a special field in OGR SQL. I'm not sure if it is really 
specified how that is supposed to work when a layer has a regular field also 
called "fid". From a quick testing, it seems that the regular field "fid" will be 
selected.

Regarding quoting of columns or tables, this is the regular SQL rule.  For 
safety, you might systematically want to double quote them.

Even

On Friday 29 April 2016 19:42:20 Paul Ramsey wrote:
> A new question not answered: what is the current specification for SQL
> filters in SetAttributeFilter? Has it evolved beyond this spec
> (referenced from the GDAL docs)
> http://ogdi.sourceforge.net/prop/6.2.CapabilitiesMetadata.html
> 
> P.
> 
> On Fri, Apr 29, 2016 at 12:19 PM, Paul Ramsey <pramsey at cleverelephant.ca> 
wrote:
> > In answer to myself, quoting the offending columns (eg "2name") allows
> > otherwise illegal column names to find their way to GDAL's filtering
> > machinery.
> > 
> > Another question, which I seem to have an answer for: is "fid" a magic
> > column name that will address the OGR fid? It seems to be, which is
> > pretty amazing. What happens if an OGR table also has a legit field
> > named "fid"?
> > 
> > P
> > 
> > On Thu, Apr 28, 2016 at 7:21 PM, Paul Ramsey <pramsey at cleverelephant.ca> 
wrote:
> >> http://www.gdal.org/ogr__api_8h.html#a4000d426bf26ad7cc7d4012634c93f09
> >> 
> >> So, the reference to valid attribute filters points to
> >> 
> >> http://ogdi.sourceforge.net/prop/6.2.CapabilitiesMetadata.html
> >> 
> >> And there it says that
> >> 
> >> @field_name@ = @string_token@
> >> 
> >> and that
> >> 
> >> "The @string_token@ starts with a character in a-z,A-Z and is followed
> >> by any number of characters in the set a-z,A-Z,0-9 and underscore."
> >> 
> >> Now, OGR layer names can be quite a bit more complicated than that,
> >> coming as they do from crazy data sources like FGDB, or even shape
> >> file! So 'b-rthday' is a perfectly legal shape file attribute name, as
> >> is 'Field Survey' from FGDB.
> >> 
> >> How do we address those column names?
> >> 
> >> I'm working in the FDW space, and have a mapping between PgSQL column
> >> names (simple, not unlike the rule from the referenced document) to
> >> OGR column names (crazy shit potentially). I figured I'd just re-write
> >> the SQL to use the OGR names, and then boom, things would work, but it
> >> turns out that OGR doesn't want to accept filters using the very
> >> column names OGR has inside... so... what should we feed it?
> >> 
> >> P
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sat Apr 30 08:00:24 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 30 Apr 2016 17:00:24 +0200
Subject: [gdal-dev] GDAL 2.0.2 & gpkg woes
In-Reply-To: <7F98CACF1AAD69408701E6A026294F95334CEDBE61@CLOUDMBX06.cloudopscenter.net>
References: <7F98CACF1AAD69408701E6A026294F95334CEDBE61@CLOUDMBX06.cloudopscenter.net>
Message-ID: <3107231.te7koPG9Xa@even-n550jk>

On Friday 29 April 2016 14:07:52 Alan Stewart wrote:
> My debug build of ogr2ogr.exe fails in exactly the same way as my
> application code fails. Apparently there's some difference in how the new
> GPKG code uses spatialite or expects spatialite to be built? The same
> libspatialite DLL works with our GDAL 1.11.0 DLL, but fails with the new
> GDAL 2.0.2 DLL.

Alan,

Never heard of similar issues. But you could probably try to upgrade to the 
latest version of sqlite in the 3.8.X series. And/or upgrade your spatialite 
version to the latest stable 4.3.0a.
Might be possible that the changes between GDAL 1.11 and 2.0 have triggered an 
integration issue with one of the sqlite/spatialite versions you use.

Even
 
> Alan Stewart
> Senior Software Engineer
> TerraGo Technologies
> 3200 Windy Hill Road, Suite 1550W
> Atlanta, GA 30339 USA
> O.  +1 678.391.9615
>  
> www.terragotech.com
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sat Apr 30 09:57:02 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 30 Apr 2016 18:57:02 +0200
Subject: [gdal-dev] IReadBlock fails on alpha band, GDAL 2
In-Reply-To: <CAG-GLBPzCmYYM2RUYs3jU-m-kwxWAaK+u0e05QaBvEJ35EfaSA@mail.gmail.com>
References: <CAG-GLBPzCmYYM2RUYs3jU-m-kwxWAaK+u0e05QaBvEJ35EfaSA@mail.gmail.com>
Message-ID: <2140615.y98qbhzUsm@even-n550jk>

Hi Matt,

> I'm seeing some errors reading reduced-resolution buffers from the
> alpha band of an RGBA image.
> 
> Code and link to raster to reproduce:
> https://gist.github.com/perrygeo/07ce04fe886d1c8090ab1b22d7579396
> 
> 
> The original raster is 4 bands, 1223x1223. If I attempt to read a
> 734x734 buffer (or any smaller resolution) from the alpha band
> 
>     hBand = GDALGetRasterBand( hDataset, 4 );
>     pafScanline = (int *) CPLMalloc(sizeof(int) * 734 * 734);
>     GDALRasterIO( hBand, GF_Read, 0, 0, 1223, 1223,
>                     pafScanline, 734, 734, GDT_Byte, 0, 0 );
> 

Note. You have a few inconsistencies here : pafScanline is supposed to mean 
array of float, but you do a sizeof(int), and finally you request GDT_Byte ;-) 
But the issue is different. See below

> I'm curious why it there appears to be a buffer size threshold, why it
> only affects alpha bands and why only GDAL 2.x is affected.  

Since GDAL 2.0, the GTiff driver can take advantage of the fact that JPEG 
compression naturally contains easily decodable subsampled images at factors 
2, 4 or 8 to speed-up RasterIO() requests involving subsampling (and the 
threshold from which overview of factor ovr_factor are used is size below 
full_res_size * 1.2 / ovr_factor. 1223 * 1.2 / 2 = 733.8). This was OK for  
this wasn't indeed ready for RGBA JPEG-in-TIFF, which is an odd (not to say 
probably illegal, or at the very least non-standard, since I guess 4 band JPEG 
should be in CMYK colorspace) formulation.

> Before I
> dig in, does anyone have any theories about what's going on here?

Fixed per https://trac.osgeo.org/gdal/ticket/6493
Use of implicit overviews can be disabled by defining the config option 
GTIFF_IMPLICIT_JPEG_OVR=NO 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Sat Apr 30 10:15:07 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sat, 30 Apr 2016 14:15:07 -0300
Subject: [gdal-dev] compile error on windows
In-Reply-To: <CAOm6iLgG6O_6UL7M+GWv0RFL=Htxv2Q8L2g_c9CY1bq5w2PhaA@mail.gmail.com>
References: <CAOm6iLgG6O_6UL7M+GWv0RFL=Htxv2Q8L2g_c9CY1bq5w2PhaA@mail.gmail.com>
Message-ID: <5724E81B.8040203@gatewaygeomatics.com>

On 2016-04-29 5:17 PM, Ryan Grout wrote:
> Hello,
>
> I'm attempting to build GDAL for windows using Visual Studio 2008.
> I've included the output of the build failure below.
>
> I don't see anything wrong with the linking command (hdf5 library is
> there).  I've double checked the exported symbols of hdf5.lib and it
> definitely exports the symbols that gdal complains it can't find.
>
> I get this failure on Windows 10 with Visual Studio 2008 and gdal 2.0.0
> through 2.1.0 RC4.  I suspect it might have something to do with HDF
> 1.8.16 (since the problem only manifested itself since updating HDF5).
>
>
> Searching this mailing list, I couldn't find similar failures.  Any help
> would be appreciated.

Compiling HDF5, HDF4, and NetCDF and making them work with GDAL on 
Windows is quite a dance.  Be ready to lose hair and what hair you'll 
have will turn grey.  Then once you think you're in the clear, you try 
compiling it all on x64 and well, a whole new ballgame of errors.

I know I've ran into problems compiling this in years past for the MS4W 
community (http://ms4w.com); there are just so many items to be aware 
of.  Over the years I've tried to record my notes at:

   https://trac.osgeo.org/gdal/wiki/HDF

It would be great if you too could record your notes and 'gotchyas' 
there.  Anything is a help.

I'm working on a new build for the MS4W community with the new 2015 
compiler, which seems to work better managing these 4 libraries (huge 
knock on wood!).

In terms of building HDF5, one of the important notes is during cmake be 
sure to set "-DBUILD_SHARED_LIBS:BOOL:ON"  I'm not sure if that helps 
you case or not.

All this to say, you're not alone in this battle! :)

-jeff


-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/






From perrygeo at gmail.com  Sat Apr 30 10:20:10 2016
From: perrygeo at gmail.com (Matt Perry)
Date: Sat, 30 Apr 2016 13:20:10 -0400
Subject: [gdal-dev] IReadBlock fails on alpha band, GDAL 2
In-Reply-To: <2140615.y98qbhzUsm@even-n550jk>
References: <CAG-GLBPzCmYYM2RUYs3jU-m-kwxWAaK+u0e05QaBvEJ35EfaSA@mail.gmail.com>
 <2140615.y98qbhzUsm@even-n550jk>
Message-ID: <CAG-GLBOHBU2TpNqYPTR4GGx8y0OUyhEN_w6BAQZU+VL36SaS4w@mail.gmail.com>

Even,

Thanks for the fix, the workaround and the detailed explanation. I
knew there must be a reason for the strange threshold.

>>     hBand = GDALGetRasterBand( hDataset, 4 );
>>     pafScanline = (int *) CPLMalloc(sizeof(int) * 734 * 734);
>>     GDALRasterIO( hBand, GF_Read, 0, 0, 1223, 1223,
>>                     pafScanline, 734, 734, GDT_Byte, 0, 0 );
>>
>
> Note. You have a few inconsistencies here : pafScanline is supposed to mean
> array of float, but you do a sizeof(int), and finally you request GDT_Byte ;-)
> But the issue is different. See below

Sorry, that was lazy transcription on my part. The actual code at
https://gist.github.com/perrygeo/07ce04fe886d1c8090ab1b22d7579396
doesn't have the same problem. But as you said, the issue is
elsewhere...

>
>> I'm curious why it there appears to be a buffer size threshold, why it
>> only affects alpha bands and why only GDAL 2.x is affected.
>
> Since GDAL 2.0, the GTiff driver can take advantage of the fact that JPEG
> compression naturally contains easily decodable subsampled images at factors
> 2, 4 or 8 to speed-up RasterIO() requests involving subsampling (and the
> threshold from which overview of factor ovr_factor are used is size below
> full_res_size * 1.2 / ovr_factor. 1223 * 1.2 / 2 = 733.8).

Thanks, that makes sense now.

> this wasn't indeed ready for RGBA JPEG-in-TIFF, which is an odd (not to say
> probably illegal, or at the very least non-standard, since I guess 4 band JPEG
> should be in CMYK colorspace) formulation.

Are there any other problems that you anticipate with using this
configuration? I see RGBA JPEG-in-TIFF quite often...


> Fixed per https://trac.osgeo.org/gdal/ticket/6493
> Use of implicit overviews can be disabled by defining the config option
> GTIFF_IMPLICIT_JPEG_OVR=NO

I can confirm that setting GTIFF_IMPLICIT_JPEG_OVR works and this will
suffice as a workaround until the next GDAL release. Thanks, Even!

From gunnarblom at mail.com  Sat Apr 30 13:23:19 2016
From: gunnarblom at mail.com (Gunnar Blom)
Date: Sat, 30 Apr 2016 22:23:19 +0200
Subject: [gdal-dev] Questions about MBTiles write support @ GDAL 2.1 RC4
Message-ID: <trinity-aaddf744-06ff-46b6-a4d4-ac523d2cbb34-1462047799372@3capp-mailcom-lxa14>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160430/b5db227b/attachment.html>

From gunnarblom at mail.com  Sat Apr 30 13:52:00 2016
From: gunnarblom at mail.com (Gunnar Blom)
Date: Sat, 30 Apr 2016 22:52:00 +0200
Subject: [gdal-dev] Possible bug in GDAL 2.1 RC4 with MBTiles creation
Message-ID: <trinity-3f71487b-15ed-4628-bfd2-5996f7c6de20-1462049519591@3capp-mailcom-lxa14>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160430/8629e112/attachment.html>

