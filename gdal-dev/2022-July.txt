From even.rouault at spatialys.com  Fri Jul  1 00:14:43 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Jul 2022 09:14:43 +0200
Subject: [gdal-dev] Motion: adopt GDAL 3.5.1RC2 as final 3.5.1 release
Message-ID: <f6443b63-0aad-76ca-7e68-d6ac6a65aa5a@spatialys.com>

Hi,

Motion:

Adopt GDAL 3.5.1RC2 as final 3.5.1 release

Starting with my +1

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From mateusz at loskot.net  Fri Jul  1 00:53:19 2022
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 1 Jul 2022 09:53:19 +0200
Subject: [gdal-dev] Motion: adopt GDAL 3.5.1RC2 as final 3.5.1 release
In-Reply-To: <f6443b63-0aad-76ca-7e68-d6ac6a65aa5a@spatialys.com>
References: <f6443b63-0aad-76ca-7e68-d6ac6a65aa5a@spatialys.com>
Message-ID: <CABUeae88YQyyLs5=BgNiZWx0Jz34LOeWkd2L7gFpx=G2ionH=g@mail.gmail.com>

+1 Mateusz

On Fri, 1 Jul 2022 at 09:14, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> Motion:
>
> Adopt GDAL 3.5.1RC2 as final 3.5.1 release
>
> Starting with my +1
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Mateusz Loskot, http://mateusz.loskot.net

From nik at nixanz.com  Fri Jul  1 01:58:02 2022
From: nik at nixanz.com (Nik Sands)
Date: Fri, 1 Jul 2022 18:58:02 +1000
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
Message-ID: <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>

Thanks again for all the replies and advice.  I should have provided more context around my initial query about building GDAL with cmake on macOS.  So here goes? (this is quite long, so bear with me?)

My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.

I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).

So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).

So with all that background, I will now start at the beginning of my attempts to build GDAL 3.5 using a method that I hope will also work for iOS...

The GDAL cmake hints page says to do this:

cd gdal-{VERSION}
mkdir build
cd build
cmake ..
cmake --build .
cmake --build . --target install

When I run this as-is, the 'cmake ..' succeeds, but the 'cmake --build .' fails at the 82% mark with this output:

==========
[ 82%] Building CXX object ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:733:21: error: use of undeclared identifier 'sqlite3_enable_load_extension'
                if( sqlite3_enable_load_extension(hDB, 1) == SQLITE_OK )
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:746:21: error: use of undeclared identifier 'sqlite3_load_extension'
                if( sqlite3_load_extension(hDB, aosExtensions[i], nullptr, &pszErrMsg) != SQLITE_OK )
                    ^
2 errors generated.
make[2]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o] Error 1
make[1]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/all] Error 2
make: *** [all] Error 2
==========

So I then build SQLite manually, including the requirements that the built-in macOS SQLite seems to be missing, and install to ~/build.  Ie,

./configure SQLITE_ENABLE_RTREE=1 --prefix=/Users/{USERNAME}/build

Then I attempt to GDAL again as follows:

cd gdal-{VERSION}
rm -r build
mkdir build
cd build
cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..


Now cmake fails with:

-- Configuring incomplete, errors occurred!
See also "...../CMakeOutput.log".
See also "...../CMakeError.log".

The error log is fairly long, but two errors near the beginning seem to be perhaps quite significant:

ld: library not found for -lSystem

and a bit further on:

ld: library not found for -lc++

and then skipping to the end of the error log:

==========
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
  return ((int*)(&_iconv_close))[argc];
                  ^~~~~~~~~~~~
                  iconv_close
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/include/iconv.h:78:36: note: 'iconv_close' declared here
extern __LIBICONV_DLL_EXPORTED int iconv_close (iconv_t _cd);
                                   ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_825af.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_825af/fast] Error 2


File /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <iconv.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef _iconv_close
  return ((int*)(&_iconv_close))[argc];
#else
  (void)argc;
  return 0;
#endif
}
==========

Now if I try the following:

export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
cd gdal-{VERSION}
rm -r build
mkdir build
cd build
cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..

Then the -lsystem and -lc++ errors disappear, but the iconv errors are still there.

I?m clearly doing something quite wrong, but I?m just a hobbyist and cannot figure it out any further than this.

Thanks for bearing with me if you?ve managed to read this far.  I?d be grateful for some assistance to get this to build using cmake.

Cheers,
Nik.


From even.rouault at spatialys.com  Fri Jul  1 02:22:33 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Jul 2022 11:22:33 +0200
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
 <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
Message-ID: <f0e72223-de79-efbf-6cfe-3304e7f297af@spatialys.com>

Nik,

regarding the build isssue with Mac system sqlite3, I've filed this as 
https://github.com/OSGeo/gdal/issues/6011

regarding your other? "Configuring incomplete, errors occurred!" issue, 
I've found that generally the CMakeOutput.log and CMakeError.log files 
aren't the best way to spot the issue. They contain a lot of "normal" 
errors such as the one with iconv, that are due to trying to detect 
features available or not available in the build environment, so it is 
expected that some detections fail. You must have another issue, which 
is in the standard error stream of the "cmake" invokation

Run "cmake .. 2>&1 >log.txt" and look for "error" in log.txt

You may also want to try to link to the dynamic library of libsqlite3 
rather than the static one (static linking is always more difficult to 
accomplish), so something like 
-DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.dylib

I would also avoid using the '~' character for values of CMake variables 
and rather use $HOME. On my Linux shell, I see the values in the 
CMakeCache.txt are not expanded to full paths, and I doubt CMake will do 
it by itself.

Even

Le 01/07/2022 ? 10:58, Nik Sands a ?crit?:
> Thanks again for all the replies and advice.  I should have provided more context around my initial query about building GDAL with cmake on macOS.  So here goes? (this is quite long, so bear with me?)
>
> My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.
>
> I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).
>
> So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).
>
> So with all that background, I will now start at the beginning of my attempts to build GDAL 3.5 using a method that I hope will also work for iOS...
>
> The GDAL cmake hints page says to do this:
>
> cd gdal-{VERSION}
> mkdir build
> cd build
> cmake ..
> cmake --build .
> cmake --build . --target install
>
> When I run this as-is, the 'cmake ..' succeeds, but the 'cmake --build .' fails at the 82% mark with this output:
>
> ==========
> [ 82%] Building CXX object ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:733:21: error: use of undeclared identifier 'sqlite3_enable_load_extension'
>                  if( sqlite3_enable_load_extension(hDB, 1) == SQLITE_OK )
>                      ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:746:21: error: use of undeclared identifier 'sqlite3_load_extension'
>                  if( sqlite3_load_extension(hDB, aosExtensions[i], nullptr, &pszErrMsg) != SQLITE_OK )
>                      ^
> 2 errors generated.
> make[2]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o] Error 1
> make[1]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/all] Error 2
> make: *** [all] Error 2
> ==========
>
> So I then build SQLite manually, including the requirements that the built-in macOS SQLite seems to be missing, and install to ~/build.  Ie,
>
> ./configure SQLITE_ENABLE_RTREE=1 --prefix=/Users/{USERNAME}/build
>
> Then I attempt to GDAL again as follows:
>
> cd gdal-{VERSION}
> rm -r build
> mkdir build
> cd build
> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>
>
> Now cmake fails with:
>
> -- Configuring incomplete, errors occurred!
> See also "...../CMakeOutput.log".
> See also "...../CMakeError.log".
>
> The error log is fairly long, but two errors near the beginning seem to be perhaps quite significant:
>
> ld: library not found for -lSystem
>
> and a bit further on:
>
> ld: library not found for -lc++
>
> and then skipping to the end of the error log:
>
> ==========
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
>    return ((int*)(&_iconv_close))[argc];
>                    ^~~~~~~~~~~~
>                    iconv_close
> /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/include/iconv.h:78:36: note: 'iconv_close' declared here
> extern __LIBICONV_DLL_EXPORTED int iconv_close (iconv_t _cd);
>                                     ^
> 1 error generated.
> make[1]: *** [CMakeFiles/cmTC_825af.dir/CheckSymbolExists.c.o] Error 1
> make: *** [cmTC_825af/fast] Error 2
>
>
> File /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
> /* */
> #include <iconv.h>
>
> int main(int argc, char** argv)
> {
>    (void)argv;
> #ifndef _iconv_close
>    return ((int*)(&_iconv_close))[argc];
> #else
>    (void)argc;
>    return 0;
> #endif
> }
> ==========
>
> Now if I try the following:
>
> export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
> export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> cd gdal-{VERSION}
> rm -r build
> mkdir build
> cd build
> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>
> Then the -lsystem and -lc++ errors disappear, but the iconv errors are still there.
>
> I?m clearly doing something quite wrong, but I?m just a hobbyist and cannot figure it out any further than this.
>
> Thanks for bearing with me if you?ve managed to read this far.  I?d be grateful for some assistance to get this to build using cmake.
>
> Cheers,
> Nik.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From stephane.poirier at oifii.org  Fri Jul  1 02:42:37 2022
From: stephane.poirier at oifii.org (Stephane Poirier)
Date: Fri, 1 Jul 2022 05:42:37 -0400
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
 <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
Message-ID: <a7e4c8c0-2709-0365-e45a-1147dffe518b@oifii.org>

Hi Nik,

Great context you provided, along with your question, in this email comm.

Don't know if this is going to be of any help for you.

But, I noticed you had an uppercase S to system somewhere, while using 
an lowercase s to system elsewhere.

Note,

somewhere=[email line number unknown],[email line content]ld: library 
not found for -lSystem

elsewhere=[email line number unknown],[email line content]Then the 
-lsystem and -lc++ errors disappear, but the iconv errors are still there.

Since I never saw, to often, library name tag being defined with one, or 
more than one, uppercase characters,
I thought this info could be of help.

Have you tried, using a lower case to system, for both of these 
compile-time/link-time phases?

Or have you tried, a solution path, that would have GDAL/OGR build 
process produce GDAL/OGR logs
showing lower case to system, for both of these compile-time/link-time 
phases?

Can't provide a more informed fix for you, right now, I haven't build 
GDAL/OGR lately.

Cheers,

SPI

stephane.poirier at oifii.org
stephane.poirier at lasapps.org
stephane.poirier at geospi.com


On 2022-07-01 4:58 a.m., Nik Sands wrote:
> Thanks again for all the replies and advice.  I should have provided more context around my initial query about building GDAL with cmake on macOS.  So here goes? (this is quite long, so bear with me?)
>
> My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.
>
> I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).
>
> So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).
>
> So with all that background, I will now start at the beginning of my attempts to build GDAL 3.5 using a method that I hope will also work for iOS...
>
> The GDAL cmake hints page says to do this:
>
> cd gdal-{VERSION}
> mkdir build
> cd build
> cmake ..
> cmake --build .
> cmake --build . --target install
>
> When I run this as-is, the 'cmake ..' succeeds, but the 'cmake --build .' fails at the 82% mark with this output:
>
> ==========
> [ 82%] Building CXX object ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:733:21: error: use of undeclared identifier 'sqlite3_enable_load_extension'
>                  if( sqlite3_enable_load_extension(hDB, 1) == SQLITE_OK )
>                      ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:746:21: error: use of undeclared identifier 'sqlite3_load_extension'
>                  if( sqlite3_load_extension(hDB, aosExtensions[i], nullptr, &pszErrMsg) != SQLITE_OK )
>                      ^
> 2 errors generated.
> make[2]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o] Error 1
> make[1]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/all] Error 2
> make: *** [all] Error 2
> ==========
>
> So I then build SQLite manually, including the requirements that the built-in macOS SQLite seems to be missing, and install to ~/build.  Ie,
>
> ./configure SQLITE_ENABLE_RTREE=1 --prefix=/Users/{USERNAME}/build
>
> Then I attempt to GDAL again as follows:
>
> cd gdal-{VERSION}
> rm -r build
> mkdir build
> cd build
> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>
>
> Now cmake fails with:
>
> -- Configuring incomplete, errors occurred!
> See also "...../CMakeOutput.log".
> See also "...../CMakeError.log".
>
> The error log is fairly long, but two errors near the beginning seem to be perhaps quite significant:
>
> ld: library not found for -lSystem
>
> and a bit further on:
>
> ld: library not found for -lc++
>
> and then skipping to the end of the error log:
>
> ==========
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
>    return ((int*)(&_iconv_close))[argc];
>                    ^~~~~~~~~~~~
>                    iconv_close
> /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/include/iconv.h:78:36: note: 'iconv_close' declared here
> extern __LIBICONV_DLL_EXPORTED int iconv_close (iconv_t _cd);
>                                     ^
> 1 error generated.
> make[1]: *** [CMakeFiles/cmTC_825af.dir/CheckSymbolExists.c.o] Error 1
> make: *** [cmTC_825af/fast] Error 2
>
>
> File /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
> /* */
> #include <iconv.h>
>
> int main(int argc, char** argv)
> {
>    (void)argv;
> #ifndef _iconv_close
>    return ((int*)(&_iconv_close))[argc];
> #else
>    (void)argc;
>    return 0;
> #endif
> }
> ==========
>
> Now if I try the following:
>
> export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
> export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> cd gdal-{VERSION}
> rm -r build
> mkdir build
> cd build
> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>
> Then the -lsystem and -lc++ errors disappear, but the iconv errors are still there.
>
> I?m clearly doing something quite wrong, but I?m just a hobbyist and cannot figure it out any further than this.
>
> Thanks for bearing with me if you?ve managed to read this far.  I?d be grateful for some assistance to get this to build using cmake.
>
> Cheers,
> Nik.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
-------------------------------------------------
Stephane Poirier, Master physics - Ma?trise en physique

Remote sensing application developer
and serial entrepreneur -
D?veloppeur d'applications de t?l?d?tection
et entrepreneur en s?rie

3532 rue Sainte-Famille, Suite 3
Montreal, QC, H2X 2L1, Canada
+1 (514) 500-1449
+1 (514) 994-3532 cell

Software engineering - Ing?nierie logiciel:

https://www.oifii.org
https://www.lasapps.org
https://www.audiospi.com
https://www.videospi.com
https://www.textospi.com
https://www.spi.run

Public and private help and security -
S?curit? et service public et priv?:

https://www.docteurordinateur.org
https://www.humanaware.org

Algorithmic music and fine art -
Musique algorithmique et beaux-arts:

https://www.magicvan3000.com
https://www.fractalmontreal.org
https://www.vorotrans.org
https://www.nakedsoftware.org
https://www.nakedsoft.org

Author of the upcoming books -
Auteur des livres ? paraitre:

https://www.transparentspi.com
https://www.surfingonlove.com
https://www.lavraiereine.com
https://www.therealqueenofengland.com
https://www.anamericanpresident.ca
-------------------------------------------------


-- 
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From christophe.delepine at thalesgroup.com  Fri Jul  1 03:16:03 2022
From: christophe.delepine at thalesgroup.com (DELEPINE Christophe)
Date: Fri, 1 Jul 2022 10:16:03 +0000
Subject: [gdal-dev] Creating a vector mbtile with several layers
Message-ID: <5cd13da6909e46d7a4d2a4ff8849f48e@thalesgroup.com>

I also tried the MVT driver and got the same problem : the output metadata.json only lists one layer.
Should I create all layers first before adding features to them ?

The C++ API documentation does not explain how to write several layers in the case of a MBTILES/MVT dataset


De : DELEPINE Christophe
Envoy? : jeudi 30 juin 2022 17:17
? : 'gdal-dev at lists.osgeo.org' <gdal-dev at lists.osgeo.org>
Objet : Creating a vector mbtile with several layers

Hello

I am trying to create a vector mbtile containing several layers (using C++ GDAL API) but it does not work. My output mbtile only contains one layer (ogrinfo only lists one layer)
What I do is the following :

GDALDriver* driver = (GDALDriver*)GDALGetDriverByName("MBTiles");
GDALDataset* poDS = driver->Create(mbtiles.c_str(), 0, 0, 0, GDT_Unknown, datasetCreationOptions);
for (auto& layer : layers)
{
       OGRLayer* oLayer = poDS->CreateLayer(layer.name_.c_str(), &srs3857_, wkbUnknown);
OGRFeature *oFeature = OGRFeature::CreateFeature(oLayer->GetLayerDefn());
oFeature->SetGeometryDirectly(geom);
oLayer->CreateFeature(oFeature);
}
GDALClose(poDS);


Any idea what is wrong ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220701/432a3fe1/attachment.htm>

From even.rouault at spatialys.com  Fri Jul  1 03:31:32 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Jul 2022 12:31:32 +0200
Subject: [gdal-dev] Creating a vector mbtile with several layers
In-Reply-To: <5cd13da6909e46d7a4d2a4ff8849f48e@thalesgroup.com>
References: <5cd13da6909e46d7a4d2a4ff8849f48e@thalesgroup.com>
Message-ID: <324fa6f4-bd65-a5c4-7917-31207af0ad65@spatialys.com>

Looking at driver code and testing a bit with the following, I don't see 
any issue or need to create all layers before adding features to them

e.g with the following OGR Python script:

from osgeo import ogr, osr
srs = osr.SpatialReference()
srs.SetFromUserInput('EPSG:3857')
ds = ogr.GetDriverByName('MBTiles').CreateDataSource('out.mbtiles')
lyr = ds.CreateLayer('lyr1', srs=srs)
f = ogr.Feature(lyr.GetLayerDefn())
f.SetGeometry(ogr.CreateGeometryFromWkt('POINT(2000000 4000000)'))
lyr.CreateFeature(f)
lyr = ds.CreateLayer('lyr2', srs=srs)
f = ogr.Feature(lyr.GetLayerDefn())
f.SetGeometry(ogr.CreateGeometryFromWkt('POINT(3000000 5000000)'))
lyr.CreateFeature(f)
ds = None

$ ogrinfo out.mbtiles -al -q
Metadata:
 ? ZOOM_LEVEL=5
 ? name=out
 ? description=
 ? version=2
 ? minzoom=0
 ? maxzoom=5
 ? center=22.4578821,37.3507523,0
 ? bounds=17.9663057,33.7852301,26.9494585,40.9162745
 ? type=overlay
 ? format=pbf
 ? scheme=tms

Layer name: lyr1
OGRFeature(lyr1):401
 ? MULTIPOINT ((1999898.40805335 4000102.56421984))


Layer name: lyr2
OGRFeature(lyr2):402
 ? MULTIPOINT ((3000000.4861366 4999898.89418995))


Note: in your code you need to "delete oFeature" after CreateFeature() 
to avoid memory leaks, but that shouldn't affect the creation of the 
output dataset itself

I also assume you instantiate a new "geom" object for each feature, 
otherwise as you use SetGeometryDirectly() use-after-free would occur.

Even

Le 01/07/2022 ? 12:16, DELEPINE Christophe via gdal-dev a ?crit?:
>
> I also tried the MVT driver and got the same problem : the output 
> metadata.json only lists one layer.
>
> Should I create all layers first before adding features to them ?
>
> The C++ API documentation does not explain how to write several layers 
> in the case of a MBTILES/MVT dataset
>
> *De?:*DELEPINE Christophe
> *Envoy??:* jeudi 30 juin 2022 17:17
> *??:* 'gdal-dev at lists.osgeo.org' <gdal-dev at lists.osgeo.org>
> *Objet?:* Creating a vector mbtile with several layers
>
> Hello
>
> I am trying to create a vector mbtile containing several layers (using 
> C++ GDAL API) but it does not work. My output mbtile only contains one 
> layer (ogrinfo only lists one layer)
>
> What I do is the following :
>
> GDALDriver* driver = (GDALDriver*)GDALGetDriverByName("MBTiles");
>
> GDALDataset* poDS = driver->Create(mbtiles.c_str(), 0, 0, 0, 
> GDT_Unknown, datasetCreationOptions);
>
> for(auto& layer : layers)
>
> {
>
> OGRLayer* oLayer = poDS->CreateLayer(layer.name_.c_str(), &srs3857_, 
> wkbUnknown);
>
> OGRFeature*oFeature = OGRFeature::CreateFeature(oLayer->GetLayerDefn());
>
> oFeature->SetGeometryDirectly(geom);
>
> oLayer->CreateFeature(oFeature);
>
> }
>
> GDALClose(poDS);
>
> Any idea what is wrong ?
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220701/6820e029/attachment.htm>

From dg0yt at darc.de  Fri Jul  1 04:07:13 2022
From: dg0yt at darc.de (dg0yt at darc.de)
Date: Fri, 1 Jul 2022 13:07:13 +0200 (CEST)
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
 <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
Message-ID: <1484960505.65064.1656673633232@office.mailbox.org>

> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..

For static linkage, this may work for sqlite3, But often just providing the library file path is not enough because it lacks transitive usage requirements (i.e. additional libs like iconv).


> ld: library not found for -lSystem
> 
> and a bit further on:
> 
> ld: library not found for -lc++

This is probably bad input coming from some pkg-config file or CMake config file, unrelated to sqlite3.


> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
>   return ((int*)(&_iconv_close))[argc];
>                   ^~~~~~~~~~~~
>                   iconv_close

Stop looking on CMakeError.log. It is stderr from commands run by CMake during configuration, containing many non-fatal errors from system inspection. 
Look at the console output (stdout and stderr) from running CMake, and share that.


> export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
> export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
> cd gdal-{VERSION}

Don't use these flags for the SDK. 


For the record, vcpkg has a GDAL port, and static linkage is what vcpkg tests in CI for Linux and macOS. Making this work required a lot of work on pkg-config and cmake config provided by GDAL's dependencies. However the vcpkg port isn't as well tested as other GDAL distributions (and for ios, it isn't tested at all). YMMV.

Kai

From christophe.delepine at thalesgroup.com  Fri Jul  1 04:59:49 2022
From: christophe.delepine at thalesgroup.com (DELEPINE Christophe)
Date: Fri, 1 Jul 2022 11:59:49 +0000
Subject: [gdal-dev] Creating a vector mbtile with several layers
In-Reply-To: <324fa6f4-bd65-a5c4-7917-31207af0ad65@spatialys.com>
References: <5cd13da6909e46d7a4d2a4ff8849f48e@thalesgroup.com>
 <324fa6f4-bd65-a5c4-7917-31207af0ad65@spatialys.com>
Message-ID: <80e710b23c24454d8e2cdbf72a9be29e@thalesgroup.com>

Hi Even
I managed to get it working. There was a bug in my code which prevented features to be added to the second layer. In that case, the driver does not export the empty layer.

In the MVT driver documentation, it says : Part of the conversion is multi-threaded by default, using as many threads as there are cores. The number of threads used can be controlled with the GDAL_NUM_THREADS configuration option.

Do you know if that is also the case for the MBTILES driver ?

Regards


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220701/50e19bfa/attachment.htm>

From even.rouault at spatialys.com  Fri Jul  1 05:53:25 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Jul 2022 14:53:25 +0200
Subject: [gdal-dev] Creating a vector mbtile with several layers
In-Reply-To: <80e710b23c24454d8e2cdbf72a9be29e@thalesgroup.com>
References: <5cd13da6909e46d7a4d2a4ff8849f48e@thalesgroup.com>
 <324fa6f4-bd65-a5c4-7917-31207af0ad65@spatialys.com>
 <80e710b23c24454d8e2cdbf72a9be29e@thalesgroup.com>
Message-ID: <1aa2bf7c-04dc-a78c-3eef-dda686c7fbdc@spatialys.com>


Le 01/07/2022 ? 13:59, DELEPINE Christophe a ?crit?:
>
> Hi Even
>
> I managed to get it working. There was a bug in my code which 
> prevented features to be added to the second layer. In that case, the 
> driver does not export the empty layer.
>
> In the MVT driver documentation, it says : Part of the conversion is 
> multi-threaded by default, using as many threads as there are cores. 
> The number of threads used can be controlled with the 
> GDAL_NUM_THREADS?configuration option.
>
> Do you know if that is also the case for the MBTILES driver ?
>
yes, most of the code for vector MBTiles and MVT creation is common. 
Just added in the doc
>
> Regards
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220701/7ca38bfa/attachment.htm>

From johnstone.ainslie at gmail.com  Fri Jul  1 10:53:25 2022
From: johnstone.ainslie at gmail.com (Ainslie Johnstone)
Date: Fri, 1 Jul 2022 18:53:25 +0100
Subject: [gdal-dev] Gdal_warp -r sum not working a expected
In-Reply-To: <FFEBAEE3-06CD-4DA7-A64C-EE4A060557CB@gmail.com>
References: <FFEBAEE3-06CD-4DA7-A64C-EE4A060557CB@gmail.com>
Message-ID: <19FB1ACF-01CB-4646-B036-CD3F6BCA95F1@gmail.com>

Hi there, 

I am trying to downsample a high-resolution file of gridded population estimates (1km res over the whole world). I want the downsampled version to give the total population in the new lower-resolution grid. However, whenever I downsample using gdalwarp -r sum, I don?t seem to be getting this. Instead the new values in the lower-resolution grid (no matter what resolution it is) seem to be more like the max, rather than the sum, of the old high-resolution grid. If I add up the total population across the whole grid it is far lower than it should be. How much lower depends on how much I have downsampled. 

I am making sure to exclude the no data values, and have tried a whole variety of different output resolutions and projections. Any suggestions as to why this might be? 

Thanks in advance for your help! 
Ainslie

From andrew at aitchison.me.uk  Fri Jul  1 12:39:28 2022
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 1 Jul 2022 20:39:28 +0100 (BST)
Subject: [gdal-dev] Gdal_warp -r sum not working a expected
In-Reply-To: <19FB1ACF-01CB-4646-B036-CD3F6BCA95F1@gmail.com>
References: <FFEBAEE3-06CD-4DA7-A64C-EE4A060557CB@gmail.com>
 <19FB1ACF-01CB-4646-B036-CD3F6BCA95F1@gmail.com>
Message-ID: <4fa2aeb5-49ca-85b4-47c5-c9d6be7e97b4@aitchison.me.uk>

On Fri, 1 Jul 2022, Ainslie Johnstone wrote:

> Hi there,
>
> I am trying to downsample a high-resolution file of gridded
> population estimates (1km res over the whole world). I want the
> downsampled version to give the total population in the new
> lower-resolution grid. However, whenever I downsample using gdalwarp
> -r sum, I don?t seem to be getting this. Instead the new values in
> the lower-resolution grid (no matter what resolution it is) seem to
> be more like the max, rather than the sum, of the old
> high-resolution grid. If I add up the total population across the
> whole grid it is far lower than it should be. How much lower depends
> on how much I have downsampled.
>
> I am making sure to exclude the no data values, and have tried a
> whole variety of different output resolutions and projections. Any
> suggestions as to why this might be?

1. Are your working type -wt and output type -ot big enough to store
the population of the new pixels ?

2. If you don't need to record nodata, you could *try* making the
nodata value 0 and treat them as data.

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From jamesli200116 at gmail.com  Sat Jul  2 22:51:41 2022
From: jamesli200116 at gmail.com (James Li)
Date: Sun, 3 Jul 2022 14:51:41 +0900
Subject: [gdal-dev] Does gdal_translate support Parallel?
Message-ID: <CAA6xY=V5kCVWWFquXBh810c7Yfdps3ogH66z9SEfdnuSU30fXg@mail.gmail.com>

Hi,

Does gdal_translate support Parallel? Like gdalwarp?

I read the guidelines, but not mentioned.

If it supports, how to write the code. This is my example:
gdal_translate -of GTiff
HDF4_EOS:EOS_GRID:"MOD11A2.A2014001.h11v03.061.2021318005350.hdf":MODIS_Grid_8Day_1km_LST:LST_Day_1km
test.tif

Thanks

-- 
---------------------------------------------------
James Li
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220703/1633abfa/attachment.htm>

From nik at nixanz.com  Sun Jul  3 19:16:47 2022
From: nik at nixanz.com (Nik Sands)
Date: Mon, 4 Jul 2022 12:16:47 +1000
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <f0e72223-de79-efbf-6cfe-3304e7f297af@spatialys.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
 <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
 <f0e72223-de79-efbf-6cfe-3304e7f297af@spatialys.com>
Message-ID: <56578E55-C4E1-429F-9FA8-A2F2A3CA0DB1@nixanz.com>

Hi Even,

Thanks for the suggestions.  I am now using '$HOME' instead of ?~?.  I?m using static libraries instead of dynamic libraries because my goal is to build GDAL for iOS once I get the process working for macOS and my understanding is that I cannot use dynamic linking in an iOS app (except for OS-bundled libraries).

I?ve now attempted to build this way (using custom-built SQLite, as explained earlier):

cd gdal-{VERSION}
rm -r build
mkdir build
cd build
cmake -DSQLITE3_INCLUDE_DIR=$HOME/build/include -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.a -DCMAKE_INSTALL_PREFIX=$HOME/build -DCMAKE_BUILD_TYPE=Release .. >log.txt 2>&1

I found that it fails if I don?t include:  -DCMAKE_BUILD_TYPE=Release

Ignoring the CMake error log, as advised, and now just scanning sdout and stderr instead, I find that I get the following at about half-way through the output:

==========
-- Found BISON: /usr/bin/bison (found version "2.3")
Traceback (most recent call last):
  File "/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/swig/python/get_suffix.py", line 1, in <module>
    from setuptools.command.build_ext import EXTENSION_SUFFIXES; print(EXTENSION_SUFFIXES[0])
ImportError: cannot import name 'EXTENSION_SUFFIXES'
--   Target system:             Darwin
==========

I don?t really know where to go from here.

Cheers,
Nik.

> On 1 Jul 2022, at 7:22 pm, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Nik,
> 
> regarding the build isssue with Mac system sqlite3, I've filed this as https://github.com/OSGeo/gdal/issues/6011
> 
> regarding your other  "Configuring incomplete, errors occurred!" issue, I've found that generally the CMakeOutput.log and CMakeError.log files aren't the best way to spot the issue. They contain a lot of "normal" errors such as the one with iconv, that are due to trying to detect features available or not available in the build environment, so it is expected that some detections fail. You must have another issue, which is in the standard error stream of the "cmake" invokation
> 
> Run "cmake .. 2>&1 >log.txt" and look for "error" in log.txt
> 
> You may also want to try to link to the dynamic library of libsqlite3 rather than the static one (static linking is always more difficult to accomplish), so something like -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.dylib
> 
> I would also avoid using the '~' character for values of CMake variables and rather use $HOME. On my Linux shell, I see the values in the CMakeCache.txt are not expanded to full paths, and I doubt CMake will do it by itself.
> 
> Even
> 
> Le 01/07/2022 ? 10:58, Nik Sands a ?crit :
>> Thanks again for all the replies and advice.  I should have provided more context around my initial query about building GDAL with cmake on macOS.  So here goes? (this is quite long, so bear with me?)
>> 
>> My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.
>> 
>> I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).
>> 
>> So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).
>> 
>> So with all that background, I will now start at the beginning of my attempts to build GDAL 3.5 using a method that I hope will also work for iOS...
>> 
>> The GDAL cmake hints page says to do this:
>> 
>> cd gdal-{VERSION}
>> mkdir build
>> cd build
>> cmake ..
>> cmake --build .
>> cmake --build . --target install
>> 
>> When I run this as-is, the 'cmake ..' succeeds, but the 'cmake --build .' fails at the 82% mark with this output:
>> 
>> ==========
>> [ 82%] Building CXX object ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:733:21: error: use of undeclared identifier 'sqlite3_enable_load_extension'
>>                 if( sqlite3_enable_load_extension(hDB, 1) == SQLITE_OK )
>>                     ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:746:21: error: use of undeclared identifier 'sqlite3_load_extension'
>>                 if( sqlite3_load_extension(hDB, aosExtensions[i], nullptr, &pszErrMsg) != SQLITE_OK )
>>                     ^
>> 2 errors generated.
>> make[2]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o] Error 1
>> make[1]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/all] Error 2
>> make: *** [all] Error 2
>> ==========
>> 
>> So I then build SQLite manually, including the requirements that the built-in macOS SQLite seems to be missing, and install to ~/build.  Ie,
>> 
>> ./configure SQLITE_ENABLE_RTREE=1 --prefix=/Users/{USERNAME}/build
>> 
>> Then I attempt to GDAL again as follows:
>> 
>> cd gdal-{VERSION}
>> rm -r build
>> mkdir build
>> cd build
>> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>> 
>> 
>> Now cmake fails with:
>> 
>> -- Configuring incomplete, errors occurred!
>> See also "...../CMakeOutput.log".
>> See also "...../CMakeError.log".
>> 
>> The error log is fairly long, but two errors near the beginning seem to be perhaps quite significant:
>> 
>> ld: library not found for -lSystem
>> 
>> and a bit further on:
>> 
>> ld: library not found for -lc++
>> 
>> and then skipping to the end of the error log:
>> 
>> ==========
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
>>   return ((int*)(&_iconv_close))[argc];
>>                   ^~~~~~~~~~~~
>>                   iconv_close
>> /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/include/iconv.h:78:36: note: 'iconv_close' declared here
>> extern __LIBICONV_DLL_EXPORTED int iconv_close (iconv_t _cd);
>>                                    ^
>> 1 error generated.
>> make[1]: *** [CMakeFiles/cmTC_825af.dir/CheckSymbolExists.c.o] Error 1
>> make: *** [cmTC_825af/fast] Error 2
>> 
>> 
>> File /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
>> /* */
>> #include <iconv.h>
>> 
>> int main(int argc, char** argv)
>> {
>>   (void)argv;
>> #ifndef _iconv_close
>>   return ((int*)(&_iconv_close))[argc];
>> #else
>>   (void)argc;
>>   return 0;
>> #endif
>> }
>> ==========
>> 
>> Now if I try the following:
>> 
>> export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
>> export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>> export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>> export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>> export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>> cd gdal-{VERSION}
>> rm -r build
>> mkdir build
>> cd build
>> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>> 
>> Then the -lsystem and -lc++ errors disappear, but the iconv errors are still there.
>> 
>> I?m clearly doing something quite wrong, but I?m just a hobbyist and cannot figure it out any further than this.
>> 
>> Thanks for bearing with me if you?ve managed to read this far.  I?d be grateful for some assistance to get this to build using cmake.
>> 
>> Cheers,
>> Nik.
>> 
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/f4c95d04/attachment-0001.htm>

From jdaniel at etresoft.com  Sun Jul  3 20:16:23 2022
From: jdaniel at etresoft.com (John Daniel)
Date: Mon, 4 Jul 2022 03:16:23 +0000
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <56578E55-C4E1-429F-9FA8-A2F2A3CA0DB1@nixanz.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
 <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
 <f0e72223-de79-efbf-6cfe-3304e7f297af@spatialys.com>
 <56578E55-C4E1-429F-9FA8-A2F2A3CA0DB1@nixanz.com>
Message-ID: <85137599-D82C-4950-AB1F-58BFEA25B20E@etresoft.com>

Nik,
You can definitely use dynamic linking in an iOS app.

I don?t know how you would do that in CMake.

John Daniel
Etresoft, Inc.

On Jul 3, 2022, at 9:17 PM, Nik Sands <nik at nixanz.com> wrote:

? Hi Even,

Thanks for the suggestions.  I am now using '$HOME' instead of ?~?.  I?m using static libraries instead of dynamic libraries because my goal is to build GDAL for iOS once I get the process working for macOS and my understanding is that I cannot use dynamic linking in an iOS app (except for OS-bundled libraries).

I?ve now attempted to build this way (using custom-built SQLite, as explained earlier):

cd gdal-{VERSION}
rm -r build
mkdir build
cd build
cmake -DSQLITE3_INCLUDE_DIR=$HOME/build/include -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.a -DCMAKE_INSTALL_PREFIX=$HOME/build -DCMAKE_BUILD_TYPE=Release .. >log.txt 2>&1

I found that it fails if I don?t include:  -DCMAKE_BUILD_TYPE=Release

Ignoring the CMake error log, as advised, and now just scanning sdout and stderr instead, I find that I get the following at about half-way through the output:

==========
-- Found BISON: /usr/bin/bison (found version "2.3")
Traceback (most recent call last):
  File "/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/swig/python/get_suffix.py", line 1, in <module>
    from setuptools.command.build_ext import EXTENSION_SUFFIXES; print(EXTENSION_SUFFIXES[0])
ImportError: cannot import name 'EXTENSION_SUFFIXES'
--   Target system:             Darwin
==========

I don?t really know where to go from here.

Cheers,
Nik.

On 1 Jul 2022, at 7:22 pm, Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> wrote:

Nik,

regarding the build isssue with Mac system sqlite3, I've filed this as https://github.com/OSGeo/gdal/issues/6011

regarding your other  "Configuring incomplete, errors occurred!" issue, I've found that generally the CMakeOutput.log and CMakeError.log files aren't the best way to spot the issue. They contain a lot of "normal" errors such as the one with iconv, that are due to trying to detect features available or not available in the build environment, so it is expected that some detections fail. You must have another issue, which is in the standard error stream of the "cmake" invokation

Run "cmake .. 2>&1 >log.txt" and look for "error" in log.txt

You may also want to try to link to the dynamic library of libsqlite3 rather than the static one (static linking is always more difficult to accomplish), so something like -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.dylib

I would also avoid using the '~' character for values of CMake variables and rather use $HOME. On my Linux shell, I see the values in the CMakeCache.txt are not expanded to full paths, and I doubt CMake will do it by itself.

Even

Le 01/07/2022 ? 10:58, Nik Sands a ?crit :
Thanks again for all the replies and advice.  I should have provided more context around my initial query about building GDAL with cmake on macOS.  So here goes? (this is quite long, so bear with me?)

My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.

I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).

So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).

So with all that background, I will now start at the beginning of my attempts to build GDAL 3.5 using a method that I hope will also work for iOS...

The GDAL cmake hints page says to do this:

cd gdal-{VERSION}
mkdir build
cd build
cmake ..
cmake --build .
cmake --build . --target install

When I run this as-is, the 'cmake ..' succeeds, but the 'cmake --build .' fails at the 82% mark with this output:

==========
[ 82%] Building CXX object ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:733:21: error: use of undeclared identifier 'sqlite3_enable_load_extension'
                if( sqlite3_enable_load_extension(hDB, 1) == SQLITE_OK )
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:746:21: error: use of undeclared identifier 'sqlite3_load_extension'
                if( sqlite3_load_extension(hDB, aosExtensions[i], nullptr, &pszErrMsg) != SQLITE_OK )
                    ^
2 errors generated.
make[2]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o] Error 1
make[1]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/all] Error 2
make: *** [all] Error 2
==========

So I then build SQLite manually, including the requirements that the built-in macOS SQLite seems to be missing, and install to ~/build.  Ie,

./configure SQLITE_ENABLE_RTREE=1 --prefix=/Users/{USERNAME}/build

Then I attempt to GDAL again as follows:

cd gdal-{VERSION}
rm -r build
mkdir build
cd build
cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..


Now cmake fails with:

-- Configuring incomplete, errors occurred!
See also "...../CMakeOutput.log".
See also "...../CMakeError.log".

The error log is fairly long, but two errors near the beginning seem to be perhaps quite significant:

ld: library not found for -lSystem

and a bit further on:

ld: library not found for -lc++

and then skipping to the end of the error log:

==========
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
  return ((int*)(&_iconv_close))[argc];
                  ^~~~~~~~~~~~
                  iconv_close
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/include/iconv.h:78:36: note: 'iconv_close' declared here
extern __LIBICONV_DLL_EXPORTED int iconv_close (iconv_t _cd);
                                   ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_825af.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_825af/fast] Error 2


File /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <iconv.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef _iconv_close
  return ((int*)(&_iconv_close))[argc];
#else
  (void)argc;
  return 0;
#endif
}
==========

Now if I try the following:

export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
cd gdal-{VERSION}
rm -r build
mkdir build
cd build
cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..

Then the -lsystem and -lc++ errors disappear, but the iconv errors are still there.

I?m clearly doing something quite wrong, but I?m just a hobbyist and cannot figure it out any further than this.

Thanks for bearing with me if you?ve managed to read this far.  I?d be grateful for some assistance to get this to build using cmake.

Cheers,
Nik.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev

--
http://www.spatialys.com
My software is free, but my time generally not.



========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/32548119/attachment-0001.htm>

From nik at nixanz.com  Sun Jul  3 21:03:10 2022
From: nik at nixanz.com (Nik Sands)
Date: Mon, 4 Jul 2022 14:03:10 +1000
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <85137599-D82C-4950-AB1F-58BFEA25B20E@etresoft.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
 <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
 <f0e72223-de79-efbf-6cfe-3304e7f297af@spatialys.com>
 <56578E55-C4E1-429F-9FA8-A2F2A3CA0DB1@nixanz.com>
 <85137599-D82C-4950-AB1F-58BFEA25B20E@etresoft.com>
Message-ID: <CE5BF0F6-B0A9-4569-846F-E160738E41EE@nixanz.com>

Hi John,

Thanks for this information.  This was definitely not the case when I first started building iOS apps (quite some time ago), so I?ll have to do some further research to make sure I can incorporate dynamic libraries if/when appropriate.

Cheers,
Nik.


> On 4 Jul 2022, at 1:16 pm, John Daniel <jdaniel at etresoft.com> wrote:
> 
> Nik,
> You can definitely use dynamic linking in an iOS app. 
> 
> I don?t know how you would do that in CMake.
> 
> John Daniel
> Etresoft, Inc.
> 
>> On Jul 3, 2022, at 9:17 PM, Nik Sands <nik at nixanz.com> wrote:
>> 
>> ? Hi Even,
>> 
>> Thanks for the suggestions.  I am now using '$HOME' instead of ?~?.  I?m using static libraries instead of dynamic libraries because my goal is to build GDAL for iOS once I get the process working for macOS and my understanding is that I cannot use dynamic linking in an iOS app (except for OS-bundled libraries).
>> 
>> I?ve now attempted to build this way (using custom-built SQLite, as explained earlier):
>> 
>> cd gdal-{VERSION}
>> rm -r build
>> mkdir build
>> cd build
>> cmake -DSQLITE3_INCLUDE_DIR=$HOME/build/include -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.a -DCMAKE_INSTALL_PREFIX=$HOME/build -DCMAKE_BUILD_TYPE=Release .. >log.txt 2>&1
>> 
>> I found that it fails if I don?t include:  -DCMAKE_BUILD_TYPE=Release
>> 
>> Ignoring the CMake error log, as advised, and now just scanning sdout and stderr instead, I find that I get the following at about half-way through the output:
>> 
>> ==========
>> -- Found BISON: /usr/bin/bison (found version "2.3")
>> Traceback (most recent call last):
>>   File "/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/swig/python/get_suffix.py", line 1, in <module>
>>     from setuptools.command.build_ext import EXTENSION_SUFFIXES; print(EXTENSION_SUFFIXES[0])
>> ImportError: cannot import name 'EXTENSION_SUFFIXES'
>> --   Target system:             Darwin
>> ==========
>> 
>> I don?t really know where to go from here.
>> 
>> Cheers,
>> Nik.
>> 
>>> On 1 Jul 2022, at 7:22 pm, Even Rouault <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>> wrote:
>>> 
>>> Nik,
>>> 
>>> regarding the build isssue with Mac system sqlite3, I've filed this as https://github.com/OSGeo/gdal/issues/6011 <https://github.com/OSGeo/gdal/issues/6011>
>>> 
>>> regarding your other  "Configuring incomplete, errors occurred!" issue, I've found that generally the CMakeOutput.log and CMakeError.log files aren't the best way to spot the issue. They contain a lot of "normal" errors such as the one with iconv, that are due to trying to detect features available or not available in the build environment, so it is expected that some detections fail. You must have another issue, which is in the standard error stream of the "cmake" invokation
>>> 
>>> Run "cmake .. 2>&1 >log.txt" and look for "error" in log.txt
>>> 
>>> You may also want to try to link to the dynamic library of libsqlite3 rather than the static one (static linking is always more difficult to accomplish), so something like -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.dylib
>>> 
>>> I would also avoid using the '~' character for values of CMake variables and rather use $HOME. On my Linux shell, I see the values in the CMakeCache.txt are not expanded to full paths, and I doubt CMake will do it by itself.
>>> 
>>> Even
>>> 
>>> Le 01/07/2022 ? 10:58, Nik Sands a ?crit :
>>>> Thanks again for all the replies and advice.  I should have provided more context around my initial query about building GDAL with cmake on macOS.  So here goes? (this is quite long, so bear with me?)
>>>> 
>>>> My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.
>>>> 
>>>> I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).
>>>> 
>>>> So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).
>>>> 
>>>> So with all that background, I will now start at the beginning of my attempts to build GDAL 3.5 using a method that I hope will also work for iOS...
>>>> 
>>>> The GDAL cmake hints page says to do this:
>>>> 
>>>> cd gdal-{VERSION}
>>>> mkdir build
>>>> cd build
>>>> cmake ..
>>>> cmake --build .
>>>> cmake --build . --target install
>>>> 
>>>> When I run this as-is, the 'cmake ..' succeeds, but the 'cmake --build .' fails at the 82% mark with this output:
>>>> 
>>>> ==========
>>>> [ 82%] Building CXX object ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o
>>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:733:21: error: use of undeclared identifier 'sqlite3_enable_load_extension'
>>>>                 if( sqlite3_enable_load_extension(hDB, 1) == SQLITE_OK )
>>>>                     ^
>>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:746:21: error: use of undeclared identifier 'sqlite3_load_extension'
>>>>                 if( sqlite3_load_extension(hDB, aosExtensions[i], nullptr, &pszErrMsg) != SQLITE_OK )
>>>>                     ^
>>>> 2 errors generated.
>>>> make[2]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o] Error 1
>>>> make[1]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/all] Error 2
>>>> make: *** [all] Error 2
>>>> ==========
>>>> 
>>>> So I then build SQLite manually, including the requirements that the built-in macOS SQLite seems to be missing, and install to ~/build.  Ie,
>>>> 
>>>> ./configure SQLITE_ENABLE_RTREE=1 --prefix=/Users/{USERNAME}/build
>>>> 
>>>> Then I attempt to GDAL again as follows:
>>>> 
>>>> cd gdal-{VERSION}
>>>> rm -r build
>>>> mkdir build
>>>> cd build
>>>> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>>>> 
>>>> 
>>>> Now cmake fails with:
>>>> 
>>>> -- Configuring incomplete, errors occurred!
>>>> See also "...../CMakeOutput.log".
>>>> See also "...../CMakeError.log".
>>>> 
>>>> The error log is fairly long, but two errors near the beginning seem to be perhaps quite significant:
>>>> 
>>>> ld: library not found for -lSystem
>>>> 
>>>> and a bit further on:
>>>> 
>>>> ld: library not found for -lc++
>>>> 
>>>> and then skipping to the end of the error log:
>>>> 
>>>> ==========
>>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
>>>>   return ((int*)(&_iconv_close))[argc];
>>>>                   ^~~~~~~~~~~~
>>>>                   iconv_close
>>>> /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/include/iconv.h:78:36: note: 'iconv_close' declared here
>>>> extern __LIBICONV_DLL_EXPORTED int iconv_close (iconv_t _cd);
>>>>                                    ^
>>>> 1 error generated.
>>>> make[1]: *** [CMakeFiles/cmTC_825af.dir/CheckSymbolExists.c.o] Error 1
>>>> make: *** [cmTC_825af/fast] Error 2
>>>> 
>>>> 
>>>> File /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
>>>> /* */
>>>> #include <iconv.h>
>>>> 
>>>> int main(int argc, char** argv)
>>>> {
>>>>   (void)argv;
>>>> #ifndef _iconv_close
>>>>   return ((int*)(&_iconv_close))[argc];
>>>> #else
>>>>   (void)argc;
>>>>   return 0;
>>>> #endif
>>>> }
>>>> ==========
>>>> 
>>>> Now if I try the following:
>>>> 
>>>> export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
>>>> export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>>> export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>>> export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>>> export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>>> cd gdal-{VERSION}
>>>> rm -r build
>>>> mkdir build
>>>> cd build
>>>> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>>>> 
>>>> Then the -lsystem and -lc++ errors disappear, but the iconv errors are still there.
>>>> 
>>>> I?m clearly doing something quite wrong, but I?m just a hobbyist and cannot figure it out any further than this.
>>>> 
>>>> Thanks for bearing with me if you?ve managed to read this far.  I?d be grateful for some assistance to get this to build using cmake.
>>>> 
>>>> Cheers,
>>>> Nik.
>>>> 
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> 
>>> -- 
>>> http://www.spatialys.com <http://www.spatialys.com/>
>>> My software is free, but my time generally not.
>>> 
>> 
>> 
>> ========================================================
>> NIK SANDS
>> Line Tamer | Time Traveller | Space Cadet
>> 
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/daaa5eaf/attachment-0001.htm>

From nik at nixanz.com  Sun Jul  3 21:17:55 2022
From: nik at nixanz.com (Nik Sands)
Date: Mon, 4 Jul 2022 14:17:55 +1000
Subject: [gdal-dev] building on macOS - fatal error: 'direct.h' file not
 found
In-Reply-To: <56578E55-C4E1-429F-9FA8-A2F2A3CA0DB1@nixanz.com>
References: <4EF7B26B-C3F9-4709-87B6-D5895D90C6FD@nixanz.com>
 <CABUeae-txE=_YGLUjUb7oF2LeWg_c5NyfE6RshQGWhGPYtaN5A@mail.gmail.com>
 <862cc999163fcc805ae30b98fc392926@nixanz.com>
 <CAE8nN5NtqQUB25m=dw_oOPH_BEnVr2xS-tsr0ogfNS+OLMi4Bg@mail.gmail.com>
 <5164E762-2E3C-4628-B609-358667477BEE@nixanz.com>
 <f0e72223-de79-efbf-6cfe-3304e7f297af@spatialys.com>
 <56578E55-C4E1-429F-9FA8-A2F2A3CA0DB1@nixanz.com>
Message-ID: <0FF71BF0-8DDB-4E1E-BF8A-040905BA701F@nixanz.com>

PS.  Apologies - my last email (below) was premature and resulted from a lack of effort on my own part.

I?ve solved this lastest issue now.

I don?t need Python bindings in this case, so the easiest solution (instead of installing and/or pointing cmake to a compatible Python environment) is of course just to add the following to my cmake command:

	-DBUILD_PYTHON_BINDINGS=OFF

So my current cmake command for macOS now looks like this:

	cmake -DBUILD_PYTHON_BINDINGS=OFF -DSQLITE3_INCLUDE_DIR=$HOME/build/include -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.a -DCMAKE_INSTALL_PREFIX=$HOME/build -DCMAKE_BUILD_TYPE=Release ..

This results in a successful cmake, and then a successful build.

Thanks again to Even and others for the advice to get me this far.  I expect I will have more questions later when I try to build for iOS.  :-)

Cheers,
Nik.


> On 4 Jul 2022, at 12:16 pm, Nik Sands <nik at nixanz.com> wrote:
> 
> Hi Even,
> 
> Thanks for the suggestions.  I am now using '$HOME' instead of ?~?.  I?m using static libraries instead of dynamic libraries because my goal is to build GDAL for iOS once I get the process working for macOS and my understanding is that I cannot use dynamic linking in an iOS app (except for OS-bundled libraries).
> 
> I?ve now attempted to build this way (using custom-built SQLite, as explained earlier):
> 
> cd gdal-{VERSION}
> rm -r build
> mkdir build
> cd build
> cmake -DSQLITE3_INCLUDE_DIR=$HOME/build/include -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.a -DCMAKE_INSTALL_PREFIX=$HOME/build -DCMAKE_BUILD_TYPE=Release .. >log.txt 2>&1
> 
> I found that it fails if I don?t include:  -DCMAKE_BUILD_TYPE=Release
> 
> Ignoring the CMake error log, as advised, and now just scanning sdout and stderr instead, I find that I get the following at about half-way through the output:
> 
> ==========
> -- Found BISON: /usr/bin/bison (found version "2.3")
> Traceback (most recent call last):
>   File "/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/swig/python/get_suffix.py", line 1, in <module>
>     from setuptools.command.build_ext import EXTENSION_SUFFIXES; print(EXTENSION_SUFFIXES[0])
> ImportError: cannot import name 'EXTENSION_SUFFIXES'
> --   Target system:             Darwin
> ==========
> 
> I don?t really know where to go from here.
> 
> Cheers,
> Nik.
> 
>> On 1 Jul 2022, at 7:22 pm, Even Rouault <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>> wrote:
>> 
>> Nik,
>> 
>> regarding the build isssue with Mac system sqlite3, I've filed this as https://github.com/OSGeo/gdal/issues/6011 <https://github.com/OSGeo/gdal/issues/6011>
>> 
>> regarding your other  "Configuring incomplete, errors occurred!" issue, I've found that generally the CMakeOutput.log and CMakeError.log files aren't the best way to spot the issue. They contain a lot of "normal" errors such as the one with iconv, that are due to trying to detect features available or not available in the build environment, so it is expected that some detections fail. You must have another issue, which is in the standard error stream of the "cmake" invokation
>> 
>> Run "cmake .. 2>&1 >log.txt" and look for "error" in log.txt
>> 
>> You may also want to try to link to the dynamic library of libsqlite3 rather than the static one (static linking is always more difficult to accomplish), so something like -DSQLITE3_LIBRARY=$HOME/build/lib/libsqlite3.dylib
>> 
>> I would also avoid using the '~' character for values of CMake variables and rather use $HOME. On my Linux shell, I see the values in the CMakeCache.txt are not expanded to full paths, and I doubt CMake will do it by itself.
>> 
>> Even
>> 
>> Le 01/07/2022 ? 10:58, Nik Sands a ?crit :
>>> Thanks again for all the replies and advice.  I should have provided more context around my initial query about building GDAL with cmake on macOS.  So here goes? (this is quite long, so bear with me?)
>>> 
>>> My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.
>>> 
>>> I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).
>>> 
>>> So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).
>>> 
>>> So with all that background, I will now start at the beginning of my attempts to build GDAL 3.5 using a method that I hope will also work for iOS...
>>> 
>>> The GDAL cmake hints page says to do this:
>>> 
>>> cd gdal-{VERSION}
>>> mkdir build
>>> cd build
>>> cmake ..
>>> cmake --build .
>>> cmake --build . --target install
>>> 
>>> When I run this as-is, the 'cmake ..' succeeds, but the 'cmake --build .' fails at the 82% mark with this output:
>>> 
>>> ==========
>>> [ 82%] Building CXX object ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o
>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:733:21: error: use of undeclared identifier 'sqlite3_enable_load_extension'
>>>                 if( sqlite3_enable_load_extension(hDB, 1) == SQLITE_OK )
>>>                     ^
>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/ogr/ogrsf_frmts/sqlite/ogrsqlitedatasource.cpp:746:21: error: use of undeclared identifier 'sqlite3_load_extension'
>>>                 if( sqlite3_load_extension(hDB, aosExtensions[i], nullptr, &pszErrMsg) != SQLITE_OK )
>>>                     ^
>>> 2 errors generated.
>>> make[2]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/ogrsqlitedatasource.cpp.o] Error 1
>>> make[1]: *** [ogr/ogrsf_frmts/sqlite/CMakeFiles/ogr_SQLite.dir/all] Error 2
>>> make: *** [all] Error 2
>>> ==========
>>> 
>>> So I then build SQLite manually, including the requirements that the built-in macOS SQLite seems to be missing, and install to ~/build.  Ie,
>>> 
>>> ./configure SQLITE_ENABLE_RTREE=1 --prefix=/Users/{USERNAME}/build
>>> 
>>> Then I attempt to GDAL again as follows:
>>> 
>>> cd gdal-{VERSION}
>>> rm -r build
>>> mkdir build
>>> cd build
>>> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>>> 
>>> 
>>> Now cmake fails with:
>>> 
>>> -- Configuring incomplete, errors occurred!
>>> See also "...../CMakeOutput.log".
>>> See also "...../CMakeError.log".
>>> 
>>> The error log is fairly long, but two errors near the beginning seem to be perhaps quite significant:
>>> 
>>> ld: library not found for -lSystem
>>> 
>>> and a bit further on:
>>> 
>>> ld: library not found for -lc++
>>> 
>>> and then skipping to the end of the error log:
>>> 
>>> ==========
>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '_iconv_close'; did you mean 'iconv_close'?
>>>   return ((int*)(&_iconv_close))[argc];
>>>                   ^~~~~~~~~~~~
>>>                   iconv_close
>>> /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk/usr/include/iconv.h:78:36: note: 'iconv_close' declared here
>>> extern __LIBICONV_DLL_EXPORTED int iconv_close (iconv_t _cd);
>>>                                    ^
>>> 1 error generated.
>>> make[1]: *** [CMakeFiles/cmTC_825af.dir/CheckSymbolExists.c.o] Error 1
>>> make: *** [cmTC_825af/fast] Error 2
>>> 
>>> 
>>> File /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
>>> /* */
>>> #include <iconv.h>
>>> 
>>> int main(int argc, char** argv)
>>> {
>>>   (void)argv;
>>> #ifndef _iconv_close
>>>   return ((int*)(&_iconv_close))[argc];
>>> #else
>>>   (void)argc;
>>>   return 0;
>>> #endif
>>> }
>>> ==========
>>> 
>>> Now if I try the following:
>>> 
>>> export LDFLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib
>>> export CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>> export CCFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>> export CXXFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>> export CPPFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk"
>>> cd gdal-{VERSION}
>>> rm -r build
>>> mkdir build
>>> cd build
>>> cmake -DSQLITE3_INCLUDE_DIR=~/build/include -DSQLITE3_LIBRARY=~/build/lib/libsqlite3.a ..
>>> 
>>> Then the -lsystem and -lc++ errors disappear, but the iconv errors are still there.
>>> 
>>> I?m clearly doing something quite wrong, but I?m just a hobbyist and cannot figure it out any further than this.
>>> 
>>> Thanks for bearing with me if you?ve managed to read this far.  I?d be grateful for some assistance to get this to build using cmake.
>>> 
>>> Cheers,
>>> Nik.
>>> 
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>> 
>> -- 
>> http://www.spatialys.com <http://www.spatialys.com/>
>> My software is free, but my time generally not.
>> 
> 
> 
> ========================================================
> NIK SANDS
> Line Tamer | Time Traveller | Space Cadet
> 


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/e0afb87e/attachment-0001.htm>

From nik at nixanz.com  Sun Jul  3 22:19:55 2022
From: nik at nixanz.com (Nik Sands)
Date: Mon, 4 Jul 2022 15:19:55 +1000
Subject: [gdal-dev] CMAKE_INSTALL_PREFIX gdalinfo still looks for .dylib in
 /usr/lib
Message-ID: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>

Hi GDAL devs,

After having just succeeded in getting GDAL to build on macOS using a non-default CMAKE_INSTALL_PREFIX, I found that gdalinfo fails because it cannot find gdal.dylib in /usr/lib.  I assume other utilities also fail with the same error, but I didn?t try them.

Sorry I didn?t copy the exact error message, before I rebuilt GDAL as a static library ( BUILD_SHARED_LIBS=OFF ), after which of course gdalinfo works fine.

Is it expected that these GDAL utilities (such as gdalinfo) would look for GDAL in /usr/lib instead of the location in which it was actually built?

Cheers,
Nik.


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet


From bradh at frogmouth.net  Sun Jul  3 22:32:08 2022
From: bradh at frogmouth.net (Brad Hards)
Date: Mon, 04 Jul 2022 15:32:08 +1000
Subject: [gdal-dev] CMAKE_INSTALL_PREFIX gdalinfo still looks for .dylib
 in /usr/lib
In-Reply-To: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>
References: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>
Message-ID: <2458129.kjLP42Xki5@audax>

On Monday, 4 July 2022 3:19:55 PM AEST Nik Sands wrote:
> Is it expected that these GDAL utilities (such as gdalinfo) would look for
> GDAL in /usr/lib instead of the location in which it was actually built?

No.

I think your conceptual problem is expecting that the GDAL utilities are doing 
the looking. That isn't how it works. Instead, the system loader does the 
search based on what the utility says it needs.

That is, a dynamically linked gdalinfo says the "what", not the "where". 

If you put your libraries somewhere non-standard, you need to tell the system 
where to get them from. Usually LD_LIBRARY_PATH environment variable or 
something like that will help.

This isn't anything specific to GDAL.

Brad





From jamesli200116 at gmail.com  Mon Jul  4 00:03:15 2022
From: jamesli200116 at gmail.com (James Li)
Date: Mon, 4 Jul 2022 16:03:15 +0900
Subject: [gdal-dev] ERROR 4: `*.hdf' not recognized as a supported file
 format. On Mac and Linux.
Message-ID: <CAA6xY=UQ8fZCc46K72rPohHOR5+ixCaBf=vy+=gk3P6k5HQA2A@mail.gmail.com>

Hi,

When I use gdalinfo get info of a hdf file downloaded from MODIS on mac, it
returns:

% gdalinfo MOD17A2H.A2020001.h29v11.006.2020010231909.hdf

ERROR 4: `MOD17A2H.A2020001.h29v11.006.2020010231909.hdf' not recognized as
a supported file format.

gdalinfo failed - unable to open
'MOD17A2H.A2020001.h29v11.006.2020010231909.hdf'.


The situation is the same on Linux, but on windows it works.


How to solve this problem? Install additional package or something?


Thank you.



Best regards,

-- 
---------------------------------------------------
Chao Li
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/9a038884/attachment.htm>

From johnstone.ainslie at gmail.com  Mon Jul  4 01:20:00 2022
From: johnstone.ainslie at gmail.com (Ainslie Johnstone)
Date: Mon, 4 Jul 2022 09:20:00 +0100
Subject: [gdal-dev] Gdal_warp -r sum not working a expected
In-Reply-To: <4fa2aeb5-49ca-85b4-47c5-c9d6be7e97b4@aitchison.me.uk>
References: <FFEBAEE3-06CD-4DA7-A64C-EE4A060557CB@gmail.com>
 <19FB1ACF-01CB-4646-B036-CD3F6BCA95F1@gmail.com>
 <4fa2aeb5-49ca-85b4-47c5-c9d6be7e97b4@aitchison.me.uk>
Message-ID: <E93C300E-8B10-4068-834E-4B26E01E43D2@gmail.com>

Hi All, 

Thanks for your comments. I replaced the no data value (which previously was -200) with zero and then it all seemed to work!

Best wishes, 
Ainslie 

> On 1 Jul 2022, at 20:39, Andrew C Aitchison <andrew at aitchison.me.uk> wrote:
> 
> On Fri, 1 Jul 2022, Ainslie Johnstone wrote:
> 
>> Hi there,
>> 
>> I am trying to downsample a high-resolution file of gridded
>> population estimates (1km res over the whole world). I want the
>> downsampled version to give the total population in the new
>> lower-resolution grid. However, whenever I downsample using gdalwarp
>> -r sum, I don?t seem to be getting this. Instead the new values in
>> the lower-resolution grid (no matter what resolution it is) seem to
>> be more like the max, rather than the sum, of the old
>> high-resolution grid. If I add up the total population across the
>> whole grid it is far lower than it should be. How much lower depends
>> on how much I have downsampled.
>> 
>> I am making sure to exclude the no data values, and have tried a
>> whole variety of different output resolutions and projections. Any
>> suggestions as to why this might be?
> 
> 1. Are your working type -wt and output type -ot big enough to store
> the population of the new pixels ?
> 
> 2. If you don't need to record nodata, you could *try* making the
> nodata value 0 and treat them as data.
> 
> -- 
> Andrew C. Aitchison Kendal, UK
> andrew at aitchison.me.uk <mailto:andrew at aitchison.me.uk>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/1dc30931/attachment-0001.htm>

From even.rouault at spatialys.com  Mon Jul  4 02:11:59 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Jul 2022 11:11:59 +0200
Subject: [gdal-dev] CMAKE_INSTALL_PREFIX gdalinfo still looks for .dylib
 in /usr/lib
In-Reply-To: <2458129.kjLP42Xki5@audax>
References: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>
 <2458129.kjLP42Xki5@audax>
Message-ID: <808858cf-b07d-61cf-163c-1318f6dd7629@spatialys.com>


Le 04/07/2022 ? 07:32, Brad Hards a ?crit?:
> On Monday, 4 July 2022 3:19:55 PM AEST Nik Sands wrote:
>> Is it expected that these GDAL utilities (such as gdalinfo) would look for
>> GDAL in /usr/lib instead of the location in which it was actually built?
> No.
>
> I think your conceptual problem is expecting that the GDAL utilities are doing
> the looking. That isn't how it works. Instead, the system loader does the
> search based on what the utility says it needs.
>
> That is, a dynamically linked gdalinfo says the "what", not the "where".
>
> If you put your libraries somewhere non-standard, you need to tell the system
> where to get them from. Usually LD_LIBRARY_PATH environment variable or
> something like that will help.

That would rather be DYLD_LIBRARY_PATH on Mac

Building GDAL with "cmake -DGDAL_SET_INSTALL_RELATIVE_RPATH=ON" might 
also help. Cf 
https://gdal.org/build_hints.html#cmdoption-arg-GDAL_SET_INSTALL_RELATIVE_RPATH

> This isn't anything specific to GDAL.
>
> Brad
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/cf5dd7dd/attachment.htm>

From j1 at jimenezshaw.com  Mon Jul  4 02:11:53 2022
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 4 Jul 2022 11:11:53 +0200
Subject: [gdal-dev] Gdal_warp -r sum not working a expected
In-Reply-To: <E93C300E-8B10-4068-834E-4B26E01E43D2@gmail.com>
References: <FFEBAEE3-06CD-4DA7-A64C-EE4A060557CB@gmail.com>
 <19FB1ACF-01CB-4646-B036-CD3F6BCA95F1@gmail.com>
 <4fa2aeb5-49ca-85b4-47c5-c9d6be7e97b4@aitchison.me.uk>
 <E93C300E-8B10-4068-834E-4B26E01E43D2@gmail.com>
Message-ID: <CADRrdKvsW3Awp8iiczpQEmzUqQoM9ku2nZZjDSom3abdP=Lcbw@mail.gmail.com>

That seems to be something wrong in the algorithm or configuration, as it
is not "ignoring" the pixels with nodata value.
Could you dump the output of "gdalinfo" of the original file, and the exact
command line you are using with gdalwarp ?
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Mon, 4 Jul 2022 at 10:20, Ainslie Johnstone <johnstone.ainslie at gmail.com>
wrote:

> Hi All,
>
> Thanks for your comments. I replaced the no data value (which previously
> was -200) with zero and then it all seemed to work!
>
> Best wishes,
> Ainslie
>
> On 1 Jul 2022, at 20:39, Andrew C Aitchison <andrew at aitchison.me.uk>
> wrote:
>
> On Fri, 1 Jul 2022, Ainslie Johnstone wrote:
>
> Hi there,
>
> I am trying to downsample a high-resolution file of gridded
> population estimates (1km res over the whole world). I want the
> downsampled version to give the total population in the new
> lower-resolution grid. However, whenever I downsample using gdalwarp
> -r sum, I don?t seem to be getting this. Instead the new values in
> the lower-resolution grid (no matter what resolution it is) seem to
> be more like the max, rather than the sum, of the old
> high-resolution grid. If I add up the total population across the
> whole grid it is far lower than it should be. How much lower depends
> on how much I have downsampled.
>
> I am making sure to exclude the no data values, and have tried a
> whole variety of different output resolutions and projections. Any
> suggestions as to why this might be?
>
>
> 1. Are your working type -wt and output type -ot big enough to store
> the population of the new pixels ?
>
> 2. If you don't need to record nodata, you could *try* making the
> nodata value 0 and treat them as data.
>
> --
> Andrew C. Aitchison Kendal, UK
> andrew at aitchison.me.uk
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/e94ee14a/attachment.htm>

From christophe.delepine at thalesgroup.com  Mon Jul  4 02:57:38 2022
From: christophe.delepine at thalesgroup.com (DELEPINE Christophe)
Date: Mon, 4 Jul 2022 09:57:38 +0000
Subject: [gdal-dev] Multiproc stub by default
Message-ID: <ca37465705e94466b796d86ae28bab47@thalesgroup.com>



Hi Even



I have looked at cpl_multiproc.cpp implementation and I believe that I cannot use multithreading for the mbtiles conversion (even if I define GDAL_NUM_THREADS)
The compilation of cpl_multiproc.cpp depends on several compilation flags :


?        CPL_MULTIPROC_STUB

?        CPL_MULTIPROC_WIN32

?        CPL_MULTIPROC_PTHREAD

?        CPL_MULTIPROC_NONE

If none of them is defined, then CPL_MULTIPROC_STUB is defined automatically which means that multithreading is disabled (thread creation does not work).

I am using windows binaries of gdal I get from this site : GISInternals Support Site<https://www.gisinternals.com/release.php>

It seems that none of these symbols have been defined for this build process

I guess I would have to recompile gdal in order to enable multithreading?





Regards

Christophe




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/7a9ed52b/attachment-0001.htm>

From even.rouault at spatialys.com  Mon Jul  4 03:08:02 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Jul 2022 12:08:02 +0200
Subject: [gdal-dev] Multiproc stub by default
In-Reply-To: <ca37465705e94466b796d86ae28bab47@thalesgroup.com>
References: <ca37465705e94466b796d86ae28bab47@thalesgroup.com>
Message-ID: <9fa3a41a-b5b3-8f8b-e62b-46edbd290e09@spatialys.com>

Christophe,

CPL_MULTIPROC_WIN32 is automatically set on Windows by 
https://github.com/OSGeo/gdal/blob/104e1747748d204e8aff1945464a24b1f8c94c90/port/cpl_multiproc.h#L43

Even

Le 04/07/2022 ? 11:57, DELEPINE Christophe a ?crit?:
>
> Hi Even
> I have looked at cpl_multiproc.cpp implementation and I believe that I 
> cannot use multithreading for the mbtiles conversion (even if I define 
> GDAL_NUM_THREADS)
>
> The compilation of cpl_multiproc.cpp depends on several compilation 
> flags :
>
> ?CPL_MULTIPROC_STUB
>
> ?CPL_MULTIPROC_WIN32
>
> ?CPL_MULTIPROC_PTHREAD
>
> ?CPL_MULTIPROC_NONE
>
> If none of them is defined, then CPL_MULTIPROC_STUB is defined 
> automatically which means that multithreading is disabled (thread 
> creation does not work).
>
> I am using windows binaries of gdal I get from this site : 
> GISInternals Support Site <https://www.gisinternals.com/release.php>
> It seems that none of these symbols have been defined for this build 
> process
> I guess I would have to recompile gdal in order to enable multithreading?
> Regards
> Christophe

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/a15156e5/attachment.htm>

From gdt at lexort.com  Mon Jul  4 05:47:17 2022
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 04 Jul 2022 08:47:17 -0400
Subject: [gdal-dev] CMAKE_INSTALL_PREFIX gdalinfo still looks for .dylib
 in /usr/lib
In-Reply-To: <808858cf-b07d-61cf-163c-1318f6dd7629@spatialys.com> (Even
 Rouault's message of "Mon, 4 Jul 2022 11:11:59 +0200")
References: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>
 <2458129.kjLP42Xki5@audax>
 <808858cf-b07d-61cf-163c-1318f6dd7629@spatialys.com>
Message-ID: <rmi4jzxrqne.fsf@s1.lexort.com>


Even Rouault <even.rouault at spatialys.com> writes:

> Le 04/07/2022 ? 07:32, Brad Hards a ?crit?:
>> On Monday, 4 July 2022 3:19:55 PM AEST Nik Sands wrote:
>>> Is it expected that these GDAL utilities (such as gdalinfo) would look for
>>> GDAL in /usr/lib instead of the location in which it was actually built?
>> No.
>>
>> I think your conceptual problem is expecting that the GDAL utilities are doing
>> the looking. That isn't how it works. Instead, the system loader does the
>> search based on what the utility says it needs.
>>
>> That is, a dynamically linked gdalinfo says the "what", not the "where".

This isn't entirely accurate.   An executable (or another library) lists
the needed libraries and the search paths.

>> If you put your libraries somewhere non-standard, you need to tell the system
>> where to get them from. Usually LD_LIBRARY_PATH environment variable or
>> something like that will help.

Variables like that can help, but having to set them is working around a bug.

> That would rather be DYLD_LIBRARY_PATH on Mac
>
> Building GDAL with "cmake -DGDAL_SET_INSTALL_RELATIVE_RPATH=ON" might
> also help. Cf
> https://gdal.org/build_hints.html#cmdoption-arg-GDAL_SET_INSTALL_RELATIVE_RPATH

Indeed, cmake is very messy about RPATH.  Some operating systems seem to
object to rpath settings, and for whatever reason, cmake doesn't default
to doing this the way I consider correct, and further seems to push some
of the decisions to the project.  Compare to autoconf/libtool, which has
"the way rpath ought to be" doctrine embedded, which is good if you
agree and not so good if you don't.

So basically you need to understand how shlib searching works, and then
you need to understand the various cmake options, and figure it out.

"objdump -a" is useful to inspect objects on normal systems, and otool
is useful on macOS.  (Despite using and working on pkgsrc for macs I
have not yet fully paged in how shared libraries work on macs.  But
pkgsrc installs programs in /opt/pkg/bin that find libraries in
/opt/pkg/lib just fine.)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/284ad505/attachment.sig>

From christophe.delepine at thalesgroup.com  Mon Jul  4 05:49:02 2022
From: christophe.delepine at thalesgroup.com (DELEPINE Christophe)
Date: Mon, 4 Jul 2022 12:49:02 +0000
Subject: [gdal-dev] Multiproc stub by default
In-Reply-To: <9fa3a41a-b5b3-8f8b-e62b-46edbd290e09@spatialys.com>
References: <ca37465705e94466b796d86ae28bab47@thalesgroup.com>
 <9fa3a41a-b5b3-8f8b-e62b-46edbd290e09@spatialys.com>
Message-ID: <a7fcb64b3e6747ba843803e074801581@thalesgroup.com>

You are right, Even
Sorry for the confusion !


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/46277140/attachment.htm>

From runette at gmail.com  Mon Jul  4 07:22:33 2022
From: runette at gmail.com (Paul Harwood)
Date: Mon, 4 Jul 2022 15:22:33 +0100
Subject: [gdal-dev] CMAKE_INSTALL_PREFIX gdalinfo still looks for .dylib
 in /usr/lib
In-Reply-To: <rmi4jzxrqne.fsf@s1.lexort.com>
References: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>
 <2458129.kjLP42Xki5@audax>
 <808858cf-b07d-61cf-163c-1318f6dd7629@spatialys.com>
 <rmi4jzxrqne.fsf@s1.lexort.com>
Message-ID: <CAE8nN5NAvftqHTK38TUR8C+h2jj5MYcDpQ3M33QiW2CrS2EoZg@mail.gmail.com>

Without comment on whether any way is correct - I believe this is the
definitive source for how CMAKE approaches the subject :

https://gitlab.kitware.com/cmake/community/-/wikis/doc/cmake/RPATH-handling

On Mon, 4 Jul 2022 at 13:47, Greg Troxel <gdt at lexort.com> wrote:

>
> Even Rouault <even.rouault at spatialys.com> writes:
>
> > Le 04/07/2022 ? 07:32, Brad Hards a ?crit :
> >> On Monday, 4 July 2022 3:19:55 PM AEST Nik Sands wrote:
> >>> Is it expected that these GDAL utilities (such as gdalinfo) would look
> for
> >>> GDAL in /usr/lib instead of the location in which it was actually
> built?
> >> No.
> >>
> >> I think your conceptual problem is expecting that the GDAL utilities
> are doing
> >> the looking. That isn't how it works. Instead, the system loader does
> the
> >> search based on what the utility says it needs.
> >>
> >> That is, a dynamically linked gdalinfo says the "what", not the "where".
>
> This isn't entirely accurate.   An executable (or another library) lists
> the needed libraries and the search paths.
>
> >> If you put your libraries somewhere non-standard, you need to tell the
> system
> >> where to get them from. Usually LD_LIBRARY_PATH environment variable or
> >> something like that will help.
>
> Variables like that can help, but having to set them is working around a
> bug.
>
> > That would rather be DYLD_LIBRARY_PATH on Mac
> >
> > Building GDAL with "cmake -DGDAL_SET_INSTALL_RELATIVE_RPATH=ON" might
> > also help. Cf
> >
> https://gdal.org/build_hints.html#cmdoption-arg-GDAL_SET_INSTALL_RELATIVE_RPATH
>
> Indeed, cmake is very messy about RPATH.  Some operating systems seem to
> object to rpath settings, and for whatever reason, cmake doesn't default
> to doing this the way I consider correct, and further seems to push some
> of the decisions to the project.  Compare to autoconf/libtool, which has
> "the way rpath ought to be" doctrine embedded, which is good if you
> agree and not so good if you don't.
>
> So basically you need to understand how shlib searching works, and then
> you need to understand the various cmake options, and figure it out.
>
> "objdump -a" is useful to inspect objects on normal systems, and otool
> is useful on macOS.  (Despite using and working on pkgsrc for macs I
> have not yet fully paged in how shared libraries work on macs.  But
> pkgsrc installs programs in /opt/pkg/bin that find libraries in
> /opt/pkg/lib just fine.)
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/05f70ba4/attachment-0001.htm>

From jdaniel at etresoft.com  Mon Jul  4 07:37:09 2022
From: jdaniel at etresoft.com (John Daniel)
Date: Mon, 4 Jul 2022 14:37:09 +0000
Subject: [gdal-dev] CMAKE_INSTALL_PREFIX gdalinfo still looks for .dylib
 in /usr/lib
In-Reply-To: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>
References: <982628B2-5F22-42AE-9E1D-D9E2FD4930B6@nixanz.com>
Message-ID: <6FB86333-3E91-48BD-9ECA-E65C8117E6B5@etresoft.com>

Nik,
In another message you indicated that your ultimate goal was an iOS build. You also said this a few days ago, but I missed it:

On Jul 1, 2022, at 3:58 AM, Nik Sands <nik at nixanz.com> wrote:

My ultimate aim is to build GDAL 3.6 (not yet released) for iOS on ARM (as well as for macOS on Intel).  I can then combine them into a fat library and use that in my project (which is what I've been doing successfully for GDAL 2.2.2 for some time).  GDAL 3.6 isn't yet released, so I'm working with 3.5 for now in order to get my build process right.

I believe that for iOS, I cannot use any 'homebrew' or 'macports' packages installed in /usr/local, etc, as dependencies for the GDAL build.  They will likely work for macOS, but not for iOS.  Therefore I will need to build any dependencies manually and install to another location (for both iOS and macOS), where they do not already exist in the standard macOS/iOS SDK locations (or where the Apple-supplied libraries in those SDK locations are otherwise incompatible with GDAL - see SQLite notes below).  For any such dependencies, I plan to install them in ~/build (as I did previously for GDAL 2.2.2).

So I'm starting out building simply for macOS, but trying to use a similar technique to what I hope to use for iOS (after I get it working for macOS).

Unfortunately, an Intel Mac build is not going to help much for iOS. The macOS operating system includes many accommodations, like DYLD_LIBRARY_PATH, for legacy unix tools like GDAL. You don?t get those on iOS. It is going to be an awful lot of work to get GDAL to build on a Mac and then you are going to hit a brick wall with iOS.

Furthermore, some of GDAL?s optional dependencies are much more difficult to build for iOS. And there are some subtle differences between macOS and iOS. libcurl, for example, doesn?t exist on iOS. If you want it, you will have to build it yourself. I think it has a special mode where it can link against the built-in crypto frameworks instead of OpenSSL. Otherwise, that will complicate your life if you want to distribute your work in the App Store. On iOS especially, it is better to hook into the system-provided networking architectures instead of relying on unix ports.

If you want to proceed anyway, here are my recommendations:
1) Forget macOS. Focus on iOS. Targeting iOS 14+ should be adequate. Once you get iOS working, the macOS version is little more than a few additional clicks. Dependences will continue to be a mess, however.
2) Get an Apple Silicon Mac. This isn?t a requirement, but an Intel Mac is little more than a boat anchor as far as developers are concerned.
3) You will also need a development iOS device that you will keep on your lowest supported version of iOS. You don?t want to bother building GDAL for the simulator. Minimize your misery and target only a real device.
4) For now, only build GDAL with no dependencies.
5) The only thing you want to build is a framework. Once you have a useable iOS framework, making a macOS framework will be trivial by comparison. Then you can bundle them both into an xcframework.
6) Don?t forget PROJ and various data directories. You can include the data directories in your resources. But you will have to manually bootstrap the paths. If you need write access to any of that data, your bootstrap will have to including copying the data to an application support path and using that as the directory.

I?m afraid I can?t help you do any of that in CMake. Supposedly, it has a cross-platform mode. I think it can also generate either frameworks and/or Xcode projects. I can?t say how well any of that works. This is one of those times where you will have to become the expert. Most iOS and Mac developers don?t use CMake. Most CMake developers don?t use iOS or Mac. Same goes for most GDAL developers. You?re on your own here.

But if you are successful, you could become THE expert for building and running GDAL on iOS and macOS, much as the kyngchaos fellow used to be.

John Daniel
Etresoft, Inc.

On Jul 4, 2022, at 12:19 AM, Nik Sands <nik at nixanz.com> wrote:

Hi GDAL devs,

After having just succeeded in getting GDAL to build on macOS using a non-default CMAKE_INSTALL_PREFIX, I found that gdalinfo fails because it cannot find gdal.dylib in /usr/lib.  I assume other utilities also fail with the same error, but I didn?t try them.

Sorry I didn?t copy the exact error message, before I rebuilt GDAL as a static library ( BUILD_SHARED_LIBS=OFF ), after which of course gdalinfo works fine.

Is it expected that these GDAL utilities (such as gdalinfo) would look for GDAL in /usr/lib instead of the location in which it was actually built?

Cheers,
Nik.


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220704/401e15b4/attachment.htm>

From nik at nixanz.com  Mon Jul  4 21:14:33 2022
From: nik at nixanz.com (Nik Sands)
Date: Tue, 5 Jul 2022 14:14:33 +1000
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
Message-ID: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>

Hi GDAL devs,

As per my earlier emails, I?m attempting to build GDAL 3.5 for iOS.  The complete process (so far) for this is below, at the end of this email.

A quick summary of some relevant points is:
?  Using a 3rd party cmake toolchain file which caters for iOS, macOS (as well as other Apple OSs) and can even build a fat binary that works for both iOS device and simulator (arm64/x86_64).
?  Using a 3rd party mirror of SQLite which includes cmake configuration, so that I can incorporate the same methodology to build iOS SQLite that I?m using for other dependencies (the standard Apple bundled SQLite throws an error when building GDAL)

The 'cmake <options> ..? succeeds to configure the GDAL build.  However, when I run ?cmake ?build .? I get the following output:

==========
[  0%] Built target generate_gdal_version_h
[  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalinfo_lib.cpp.o
[  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalbuildvrt_lib.cpp.o
[  1%] Building CXX object apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/apps/gdal_grid_lib.cpp:1213:26: error: variable has incomplete type 'VSIStatBufL' (aka 'stat64')
            VSIStatBufL  sStat;
                         ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsi.h:195:16: note: forward declaration of 'stat64'
typedef struct VSI_STAT64_T VSIStatBufL;
               ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:41:22: note: expanded from macro 'VSI_STAT64_T'
#define VSI_STAT64_T stat64
                     ^
1 error generated.
make[2]: *** [apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o] Error 1
make[1]: *** [apps/CMakeFiles/appslib.dir/all] Error 2
make: *** [all] Error 2
==========

I found a GDAL bug that appears to be related, but it was closed as ?fixed? about 8 years ago:
https://trac.osgeo.org/gdal/ticket/1005

This may also be relevant:
https://www.spinics.net/lists/dash/msg02117.html

But this is somewhat beyond my (lack of) expertise to resolve.  Does anybody have any suggestions for resolving this issue?

Cheers,
Nik.


COMPLETE PROCESS TO BUILD iOS GDAL (so far):


Install Homebrew package manager:
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

Install cmake using Homebrew:
brew install cmakecmake --build . --target install

Install ios.toolchain.cmake:
Download from:  https://github.com/leetal/ios-cmake
Install at:  $HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake

Environment Variables:
export PREFIX=$HOME/build/arm64
export CMTOOLCHAIN=$HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake

Build SQLite:
Download CMAKE-compatible SQLite amalgamation from:
https://github.com/azadkuh/sqlite-amalgamation

cd sqlite-amalgamation-master
mkdir build
cd build
cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DSQLITE_ENABLE_RTREE=ON ..
cmake --build .
cmake --build . --target install

Build Proj:
cd proj-{VERSION}
mkdir build
cd build
cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DENABLE_TIFF=OFF -DENABLE_CURL=OFF -DBUILD_PROJSYNC=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a ..
cmake --build .
cmake --build . --target install

Build GDAL:
(Specifying the path to PROJ is not required because cmake automatically adds CMAKE_INSTALL_PREFIX to CMAKE_SYSTEM_PREFIX_PATH

cd gdal-{VERSION}
mkdir build
cd build
cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX/arm64 -DBUILD_APPS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_PYTHON_BINDINGS=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a -DCMAKE_BUILD_TYPE=Release ..
cmake --build .
cmake --build . --target install

From even.rouault at spatialys.com  Tue Jul  5 00:00:07 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Jul 2022 09:00:07 +0200
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
In-Reply-To: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
References: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
Message-ID: <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>

Nik,

in cmake/helpers/configure.cmake, there's a special case of Darwin at 
line 183 in master

 ? if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

Can you test if replacing it with

 ? if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin" OR ${CMAKE_SYSTEM_NAME} 
MATCHES "iOS")

works better? (I assume CMAKE_SYSTEM_NAME = iOS from 
https://cmake.org/cmake/help/latest/variable/IOS.html , but you might 
want to add a 'message(WARNING 
"CMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")' debug statement to check

Even

Le 05/07/2022 ? 06:14, Nik Sands a ?crit?:
> Hi GDAL devs,
>
> As per my earlier emails, I?m attempting to build GDAL 3.5 for iOS.  The complete process (so far) for this is below, at the end of this email.
>
> A quick summary of some relevant points is:
> ?  Using a 3rd party cmake toolchain file which caters for iOS, macOS (as well as other Apple OSs) and can even build a fat binary that works for both iOS device and simulator (arm64/x86_64).
> ?  Using a 3rd party mirror of SQLite which includes cmake configuration, so that I can incorporate the same methodology to build iOS SQLite that I?m using for other dependencies (the standard Apple bundled SQLite throws an error when building GDAL)
>
> The 'cmake <options> ..? succeeds to configure the GDAL build.  However, when I run ?cmake ?build .? I get the following output:
>
> ==========
> [  0%] Built target generate_gdal_version_h
> [  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalinfo_lib.cpp.o
> [  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalbuildvrt_lib.cpp.o
> [  1%] Building CXX object apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/apps/gdal_grid_lib.cpp:1213:26: error: variable has incomplete type 'VSIStatBufL' (aka 'stat64')
>              VSIStatBufL  sStat;
>                           ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsi.h:195:16: note: forward declaration of 'stat64'
> typedef struct VSI_STAT64_T VSIStatBufL;
>                 ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:41:22: note: expanded from macro 'VSI_STAT64_T'
> #define VSI_STAT64_T stat64
>                       ^
> 1 error generated.
> make[2]: *** [apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o] Error 1
> make[1]: *** [apps/CMakeFiles/appslib.dir/all] Error 2
> make: *** [all] Error 2
> ==========
>
> I found a GDAL bug that appears to be related, but it was closed as ?fixed? about 8 years ago:
> https://trac.osgeo.org/gdal/ticket/1005
>
> This may also be relevant:
> https://www.spinics.net/lists/dash/msg02117.html
>
> But this is somewhat beyond my (lack of) expertise to resolve.  Does anybody have any suggestions for resolving this issue?
>
> Cheers,
> Nik.
>
>
> COMPLETE PROCESS TO BUILD iOS GDAL (so far):
>
>
> Install Homebrew package manager:
> /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
>
> Install cmake using Homebrew:
> brew install cmakecmake --build . --target install
>
> Install ios.toolchain.cmake:
> Download from:  https://github.com/leetal/ios-cmake
> Install at:  $HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>
> Environment Variables:
> export PREFIX=$HOME/build/arm64
> export CMTOOLCHAIN=$HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>
> Build SQLite:
> Download CMAKE-compatible SQLite amalgamation from:
> https://github.com/azadkuh/sqlite-amalgamation
>
> cd sqlite-amalgamation-master
> mkdir build
> cd build
> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DSQLITE_ENABLE_RTREE=ON ..
> cmake --build .
> cmake --build . --target install
>
> Build Proj:
> cd proj-{VERSION}
> mkdir build
> cd build
> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DENABLE_TIFF=OFF -DENABLE_CURL=OFF -DBUILD_PROJSYNC=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a ..
> cmake --build .
> cmake --build . --target install
>
> Build GDAL:
> (Specifying the path to PROJ is not required because cmake automatically adds CMAKE_INSTALL_PREFIX to CMAKE_SYSTEM_PREFIX_PATH
>
> cd gdal-{VERSION}
> mkdir build
> cd build
> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX/arm64 -DBUILD_APPS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_PYTHON_BINDINGS=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a -DCMAKE_BUILD_TYPE=Release ..
> cmake --build .
> cmake --build . --target install
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From j1 at jimenezshaw.com  Tue Jul  5 00:20:59 2022
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 5 Jul 2022 09:20:59 +0200
Subject: [gdal-dev] gdal2tiles vs COG
Message-ID: <CADRrdKsYR1aBEV6Jt7Yx4mzZvQez1=txD0FtAqf8_R-NX5TaYw@mail.gmail.com>

Hi

Do you know if there is any performance comparison between gdal2tiles and
COG?

To display our geotiffs we are currently running gdal2tiles and storing the
(gazillion) tiles in Amazon S3. Then a webpage with openlayers is showing
them in WebMercator.
We are considering moving to make a COG file with the option
TILING_SCHEME=GoogleMapsCompatible and use also openlayers to read it (from
the same S3 server). However, our first tests are not running very fast
displaying the map in the browser.

I do not know if anybody else had studied it, and if there is any trick to
make it faster.

PS. I cannot use JPEG compression (with alpha) with openlayers, but that is
another problem... or maybe not.

Thanks,
Javier.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220705/181dfdc1/attachment.htm>

From even.rouault at spatialys.com  Tue Jul  5 04:23:00 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Jul 2022 13:23:00 +0200
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
In-Reply-To: <33BE1262-EBE6-49A6-BF9D-232CF72294DC@nixanz.com>
References: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
 <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>
 <33BE1262-EBE6-49A6-BF9D-232CF72294DC@nixanz.com>
Message-ID: <0519d59c-fa50-100e-2afa-ae6a7feeef6f@spatialys.com>

(re-adding the list)

ok, it's a bit weird CMake detects symbols that are not available at 
build time, but there might be some subtelties in iOS SDK

Can you try the following patch which basically forces to remap all 
"foo64" functions to "foo". I assume that iOS Unix I/O is 64-bit enabled 
by default...

diff --git a/cmake/helpers/configure.cmake b/cmake/helpers/configure.cmake
index c38604e23e..e5be264bf9 100644
--- a/cmake/helpers/configure.cmake
+++ b/cmake/helpers/configure.cmake
@@ -241,6 +241,20 @@ else ()
 ???? set(VSI_FTRUNCATE64 "ftruncate")
 ?? endif ()

+? if (${CMAKE_SYSTEM_NAME} MATCHES "iOS")
+??? set(VSI_FOPEN64 "fopen")
+??? set(VSI_FTRUNCATE64 "ftruncate")
+??? set(VSI_FTELL64 "ftell")
+??? set(VSI_FSEEK64 "fseek")
+??? set(VSI_STAT64 stat)
+??? set(VSI_STAT64_T stat)
+??? unset(HAVE_FOPEN64)
+??? unset(HAVE_FTRUNCATE64)
+??? unset(HAVE_FTELL64)
+??? unset(HAVE_FSEEK64)
+??? unset(HAVE_STATVFS64)
+? endif()
+
 ?? set(UNIX_STDIO_64 TRUE)

 ?? set(INCLUDE_XLOCALE_H)


Le 05/07/2022 ? 13:07, Nik Sands a ?crit?:
> Hi Even,
>
> Thanks again for your advice. ?The debug ?message did produce what I 
> believe was the expected output as follows:
>
> CMake Warning at cmake/helpers/configure.cmake:175 (message):
> ? CMAKE_SYSTEM_NAME=iOS
>
> Making the suggested change to the configure.cmake file (line 175 in 
> the version 3.5 distribution I have) and re-building certainly 
> progresses further than my previous build attempt. ?I now get the 
> errors in the ouput listed below. ?Note that I found one other 
> location in the same configure.cmake file where it was checking for 
> ?Darwin? and I made the same change to that line, but it made no 
> difference to these errors below.
>
> Cheers,
> Nik.
>
>
> ==========
> ?
> ?
> [ ?7%] Building CXX object 
> port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:139:23: 
> error: use of undeclared identifier 'ftell64'
> static_assert( sizeof(VSI_FTELL64(nullptr)) == sizeof(vsi_l_offset),
> ? ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: 
> note: expanded from macro 'VSI_FTELL64'
> #define VSI_FTELL64 ftell64
> ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:315:25: 
> error: use of undeclared identifier 'fseek64'
> ? ? const int nResult = VSI_FSEEK64( fp, nOffsetIn, nWhence );
> ? ? ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: 
> note: expanded from macro 'VSI_FSEEK64'
> #define VSI_FSEEK64 fseek64
> ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:355:25: 
> error: use of undeclared identifier 'ftell64'
> ? ? ? ? ? ? m_nOffset = VSI_FTELL64( fp );
> ? ? ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: 
> note: expanded from macro 'VSI_FTELL64'
> #define VSI_FTELL64 ftell64
> ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:422:13: 
> error: use of undeclared identifier 'fseek64'
> ? ? ? ? if( VSI_FSEEK64( fp, m_nOffset, SEEK_SET ) != 0 )
> ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: 
> note: expanded from macro 'VSI_FSEEK64'
> #define VSI_FSEEK64 fseek64
> ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:456:35: 
> error: use of undeclared identifier 'ftell64'
> ? ? ? ? vsi_l_offset nNewOffset = VSI_FTELL64( fp );
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: 
> note: expanded from macro 'VSI_FTELL64'
> #define VSI_FTELL64 ftell64
> ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:484:13: 
> error: use of undeclared identifier 'fseek64'
> ? ? ? ? if( VSI_FSEEK64( fp, m_nOffset, SEEK_SET ) != 0 )
> ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: 
> note: expanded from macro 'VSI_FSEEK64'
> #define VSI_FSEEK64 fseek64
> ? ? ? ? ? ? ? ? ? ? ^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:532:12: 
> error: use of undeclared identifier 'ftruncate64'; did you mean 
> 'ftruncate'?
> ? ? return VSI_FTRUNCATE64( fileno(fp), nNewSize );
> ? ? ? ? ? ?^~~~~~~~~~~~~~~
> ? ? ? ? ? ?ftruncate
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:146:25: 
> note: expanded from macro 'VSI_FTRUNCATE64'
> #define VSI_FTRUNCATE64 ftruncate64
> ? ? ? ? ? ? ? ? ? ? ? ? ^
> /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk/usr/include/unistd.h:611:6: 
> note: 'ftruncate' declared here
> int ? ? ?ftruncate(int, off_t);
> ? ? ? ? ?^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:645:16: 
> error: use of undeclared identifier 'fopen64'; did you mean 'fopen'?
> ? ? FILE *fp = VSI_FOPEN64( pszFilename, pszAccess );
> ? ? ? ? ? ? ? ?^~~~~~~~~~~
> ? ? ? ? ? ? ? ?fopen
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:143:21: 
> note: expanded from macro 'VSI_FOPEN64'
> #define VSI_FOPEN64 fopen64
> ? ? ? ? ? ? ? ? ? ? ^
> /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk/usr/include/stdio.h:153:7: 
> note: 'fopen' declared here
> FILE ? ?*fopen(const char * __restrict __filename, const char * 
> __restrict __mode) __DARWIN_ALIAS_STARTING(__MAC_10_6, __IPHONE_2_0, 
> __DARWIN_ALIAS(fopen));
> ? ? ? ? ?^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:22: 
> error: variable has incomplete type 'struct statvfs64'
> ? ? struct statvfs64 buf;
> ? ? ? ? ? ? ? ? ? ? ?^
> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:12: 
> note: forward declaration of 'statvfs64'
> ? ? struct statvfs64 buf;
> ? ? ? ? ? ?^
> 9 errors generated.
> make[2]: *** [port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o] 
> Error 1
> make[1]: *** [port/CMakeFiles/cpl.dir/all] Error 2
> make: *** [all] Error 2
> ==========
>
>
>
>> On 5 Jul 2022, at 5:00 pm, Even Rouault <even.rouault at spatialys.com> 
>> wrote:
>>
>> Nik,
>>
>> in cmake/helpers/configure.cmake, there's a special case of Darwin at 
>> line 183 in master
>>
>> ? if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
>>
>> Can you test if replacing it with
>>
>> ? if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin" OR ${CMAKE_SYSTEM_NAME} 
>> MATCHES "iOS")
>>
>> works better? (I assume CMAKE_SYSTEM_NAME = iOS from 
>> https://cmake.org/cmake/help/latest/variable/IOS.html , but you might 
>> want to add a 'message(WARNING 
>> "CMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")' debug statement to check
>>
>> Even
>>
>> Le 05/07/2022 ? 06:14, Nik Sands a ?crit?:
>>> Hi GDAL devs,
>>>
>>> As per my earlier emails, I?m attempting to build GDAL 3.5 for iOS. 
>>> ?The complete process (so far) for this is below, at the end of this 
>>> email.
>>>
>>> A quick summary of some relevant points is:
>>> ? ?Using a 3rd party cmake toolchain file which caters for iOS, 
>>> macOS (as well as other Apple OSs) and can even build a fat binary 
>>> that works for both iOS device and simulator (arm64/x86_64).
>>> ? ?Using a 3rd party mirror of SQLite which includes cmake 
>>> configuration, so that I can incorporate the same methodology to 
>>> build iOS SQLite that I?m using for other dependencies (the standard 
>>> Apple bundled SQLite throws an error when building GDAL)
>>>
>>> The 'cmake <options> ..? succeeds to configure the GDAL build. 
>>> ?However, when I run ?cmake ?build .? I get the following output:
>>>
>>> ==========
>>> [ ?0%] Built target generate_gdal_version_h
>>> [ ?0%] Building CXX object 
>>> apps/CMakeFiles/appslib.dir/gdalinfo_lib.cpp.o
>>> [ ?0%] Building CXX object 
>>> apps/CMakeFiles/appslib.dir/gdalbuildvrt_lib.cpp.o
>>> [ ?1%] Building CXX object 
>>> apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o
>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/apps/gdal_grid_lib.cpp:1213:26: 
>>> error: variable has incomplete type 'VSIStatBufL' (aka 'stat64')
>>> ????????????VSIStatBufL ?sStat;
>>> ?????????????????????????^
>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsi.h:195:16: 
>>> note: forward declaration of 'stat64'
>>> typedef struct VSI_STAT64_T VSIStatBufL;
>>> ???????????????^
>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:41:22: 
>>> note: expanded from macro 'VSI_STAT64_T'
>>> #define VSI_STAT64_T stat64
>>> ?????????????????????^
>>> 1 error generated.
>>> make[2]: *** [apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o] Error 1
>>> make[1]: *** [apps/CMakeFiles/appslib.dir/all] Error 2
>>> make: *** [all] Error 2
>>> ==========
>>>
>>> I found a GDAL bug that appears to be related, but it was closed as 
>>> ?fixed? about 8 years ago:
>>> https://trac.osgeo.org/gdal/ticket/1005
>>>
>>> This may also be relevant:
>>> https://www.spinics.net/lists/dash/msg02117.html
>>>
>>> But this is somewhat beyond my (lack of) expertise to resolve. ?Does 
>>> anybody have any suggestions for resolving this issue?
>>>
>>> Cheers,
>>> Nik.
>>>
>>>
>>> COMPLETE PROCESS TO BUILD iOS GDAL (so far):
>>>
>>>
>>> Install Homebrew package manager:
>>> /usr/bin/ruby -e "$(curl -fsSL 
>>> https://raw.githubusercontent.com/Homebrew/install/master/install)"
>>>
>>> Install cmake using Homebrew:
>>> brew install cmakecmake --build . --target install
>>>
>>> Install ios.toolchain.cmake:
>>> Download from: https://github.com/leetal/ios-cmake
>>> Install at: 
>>> ?$HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>>>
>>> Environment Variables:
>>> export PREFIX=$HOME/build/arm64
>>> export 
>>> CMTOOLCHAIN=$HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>>>
>>> Build SQLite:
>>> Download CMAKE-compatible SQLite amalgamation from:
>>> https://github.com/azadkuh/sqlite-amalgamation
>>>
>>> cd sqlite-amalgamation-master
>>> mkdir build
>>> cd build
>>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 
>>> -DCMAKE_INSTALL_PREFIX=$PREFIX -DSQLITE_ENABLE_RTREE=ON ..
>>> cmake --build .
>>> cmake --build . --target install
>>>
>>> Build Proj:
>>> cd proj-{VERSION}
>>> mkdir build
>>> cd build
>>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 
>>> -DCMAKE_INSTALL_PREFIX=$PREFIX -DENABLE_TIFF=OFF -DENABLE_CURL=OFF 
>>> -DBUILD_PROJSYNC=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include 
>>> -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a ..
>>> cmake --build .
>>> cmake --build . --target install
>>>
>>> Build GDAL:
>>> (Specifying the path to PROJ is not required because cmake 
>>> automatically adds CMAKE_INSTALL_PREFIX to CMAKE_SYSTEM_PREFIX_PATH
>>>
>>> cd gdal-{VERSION}
>>> mkdir build
>>> cd build
>>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 
>>> -DCMAKE_INSTALL_PREFIX=$PREFIX/arm64 -DBUILD_APPS=OFF 
>>> -DBUILD_SHARED_LIBS=OFF -DBUILD_PYTHON_BINDINGS=OFF 
>>> -DSQLITE3_INCLUDE_DIR=$PREFIX/include 
>>> -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a -DCMAKE_BUILD_TYPE=Release ..
>>> cmake --build .
>>> cmake --build . --target install
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>> -- 
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>>
>
>
> ========================================================
> NIK SANDS
> Line Tamer | Time Traveller | Space Cadet
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220705/7086dbf8/attachment-0001.htm>

From nik at nixanz.com  Tue Jul  5 04:18:08 2022
From: nik at nixanz.com (Nik Sands)
Date: Tue, 5 Jul 2022 21:18:08 +1000
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
In-Reply-To: <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>
References: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
 <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>
Message-ID: <B5278850-94E1-4CA1-9918-CEC5D5D6E4F7@nixanz.com>

Hi Even,

Thanks again for your advice.  The debug  message did produce what I believe was the expected output as follows:

CMake Warning at cmake/helpers/configure.cmake:175 (message):
  CMAKE_SYSTEM_NAME=iOS

Making the suggested change to the configure.cmake file (line 175 in the version 3.5 distribution I have) and re-building certainly progresses further than my previous build attempt.  I now get the errors in the ouput listed below.  Note that I found one other location in the same configure.cmake file where it was checking for ?Darwin? and I made the same change to that line, but it made no difference to these errors below.

Cheers,
Nik.


==========
?
?
[  7%] Building CXX object port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:139:23: error: use of undeclared identifier 'ftell64'
static_assert( sizeof(VSI_FTELL64(nullptr)) == sizeof(vsi_l_offset),
                      ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: note: expanded from macro 'VSI_FTELL64'
#define VSI_FTELL64 ftell64
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:315:25: error: use of undeclared identifier 'fseek64'
    const int nResult = VSI_FSEEK64( fp, nOffsetIn, nWhence );
                        ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: note: expanded from macro 'VSI_FSEEK64'
#define VSI_FSEEK64 fseek64
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:355:25: error: use of undeclared identifier 'ftell64'
            m_nOffset = VSI_FTELL64( fp );
                        ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: note: expanded from macro 'VSI_FTELL64'
#define VSI_FTELL64 ftell64
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:422:13: error: use of undeclared identifier 'fseek64'
        if( VSI_FSEEK64( fp, m_nOffset, SEEK_SET ) != 0 )
            ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: note: expanded from macro 'VSI_FSEEK64'
#define VSI_FSEEK64 fseek64
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:456:35: error: use of undeclared identifier 'ftell64'
        vsi_l_offset nNewOffset = VSI_FTELL64( fp );
                                  ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: note: expanded from macro 'VSI_FTELL64'
#define VSI_FTELL64 ftell64
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:484:13: error: use of undeclared identifier 'fseek64'
        if( VSI_FSEEK64( fp, m_nOffset, SEEK_SET ) != 0 )
            ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: note: expanded from macro 'VSI_FSEEK64'
#define VSI_FSEEK64 fseek64
                    ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:532:12: error: use of undeclared identifier 'ftruncate64'; did you mean 'ftruncate'?
    return VSI_FTRUNCATE64( fileno(fp), nNewSize );
           ^~~~~~~~~~~~~~~
           ftruncate
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:146:25: note: expanded from macro 'VSI_FTRUNCATE64'
#define VSI_FTRUNCATE64 ftruncate64
                        ^
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk/usr/include/unistd.h:611:6: note: 'ftruncate' declared here
int      ftruncate(int, off_t);
         ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:645:16: error: use of undeclared identifier 'fopen64'; did you mean 'fopen'?
    FILE *fp = VSI_FOPEN64( pszFilename, pszAccess );
               ^~~~~~~~~~~
               fopen
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:143:21: note: expanded from macro 'VSI_FOPEN64'
#define VSI_FOPEN64 fopen64
                    ^
/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk/usr/include/stdio.h:153:7: note: 'fopen' declared here
FILE    *fopen(const char * __restrict __filename, const char * __restrict __mode) __DARWIN_ALIAS_STARTING(__MAC_10_6, __IPHONE_2_0, __DARWIN_ALIAS(fopen));
         ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:22: error: variable has incomplete type 'struct statvfs64'
    struct statvfs64 buf;
                     ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:12: note: forward declaration of 'statvfs64'
    struct statvfs64 buf;
           ^
9 errors generated.
make[2]: *** [port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o] Error 1
make[1]: *** [port/CMakeFiles/cpl.dir/all] Error 2
make: *** [all] Error 2
==========



> On 5 Jul 2022, at 5:00 pm, Even Rouault <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>> wrote:
> 
> Nik,
> 
> in cmake/helpers/configure.cmake, there's a special case of Darwin at line 183 in master
> 
>   if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
> 
> Can you test if replacing it with
> 
>   if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin" OR ${CMAKE_SYSTEM_NAME} MATCHES "iOS")
> 
> works better? (I assume CMAKE_SYSTEM_NAME = iOS from https://cmake.org/cmake/help/latest/variable/IOS.html <https://cmake.org/cmake/help/latest/variable/IOS.html> , but you might want to add a 'message(WARNING "CMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")' debug statement to check
> 
> Even
> 
> Le 05/07/2022 ? 06:14, Nik Sands a ?crit :
>> Hi GDAL devs,
>> 
>> As per my earlier emails, I?m attempting to build GDAL 3.5 for iOS.  The complete process (so far) for this is below, at the end of this email.
>> 
>> A quick summary of some relevant points is:
>> ?  Using a 3rd party cmake toolchain file which caters for iOS, macOS (as well as other Apple OSs) and can even build a fat binary that works for both iOS device and simulator (arm64/x86_64).
>> ?  Using a 3rd party mirror of SQLite which includes cmake configuration, so that I can incorporate the same methodology to build iOS SQLite that I?m using for other dependencies (the standard Apple bundled SQLite throws an error when building GDAL)
>> 
>> The 'cmake <options> ..? succeeds to configure the GDAL build.  However, when I run ?cmake ?build .? I get the following output:
>> 
>> ==========
>> [  0%] Built target generate_gdal_version_h
>> [  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalinfo_lib.cpp.o
>> [  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalbuildvrt_lib.cpp.o
>> [  1%] Building CXX object apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/apps/gdal_grid_lib.cpp:1213:26: error: variable has incomplete type 'VSIStatBufL' (aka 'stat64')
>>             VSIStatBufL  sStat;
>>                          ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsi.h:195:16: note: forward declaration of 'stat64'
>> typedef struct VSI_STAT64_T VSIStatBufL;
>>                ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:41:22: note: expanded from macro 'VSI_STAT64_T'
>> #define VSI_STAT64_T stat64
>>                      ^
>> 1 error generated.
>> make[2]: *** [apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o] Error 1
>> make[1]: *** [apps/CMakeFiles/appslib.dir/all] Error 2
>> make: *** [all] Error 2
>> ==========
>> 
>> I found a GDAL bug that appears to be related, but it was closed as ?fixed? about 8 years ago:
>> https://trac.osgeo.org/gdal/ticket/1005 <https://trac.osgeo.org/gdal/ticket/1005>
>> 
>> This may also be relevant:
>> https://www.spinics.net/lists/dash/msg02117.html
>> 
>> But this is somewhat beyond my (lack of) expertise to resolve.  Does anybody have any suggestions for resolving this issue?
>> 
>> Cheers,
>> Nik.
>> 
>> 
>> COMPLETE PROCESS TO BUILD iOS GDAL (so far):
>> 
>> 
>> Install Homebrew package manager:
>> /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
>> 
>> Install cmake using Homebrew:
>> brew install cmakecmake --build . --target install
>> 
>> Install ios.toolchain.cmake:
>> Download from:  https://github.com/leetal/ios-cmake
>> Install at:  $HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>> 
>> Environment Variables:
>> export PREFIX=$HOME/build/arm64
>> export CMTOOLCHAIN=$HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>> 
>> Build SQLite:
>> Download CMAKE-compatible SQLite amalgamation from:
>> https://github.com/azadkuh/sqlite-amalgamation
>> 
>> cd sqlite-amalgamation-master
>> mkdir build
>> cd build
>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DSQLITE_ENABLE_RTREE=ON ..
>> cmake --build .
>> cmake --build . --target install
>> 
>> Build Proj:
>> cd proj-{VERSION}
>> mkdir build
>> cd build
>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DENABLE_TIFF=OFF -DENABLE_CURL=OFF -DBUILD_PROJSYNC=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a ..
>> cmake --build .
>> cmake --build . --target install
>> 
>> Build GDAL:
>> (Specifying the path to PROJ is not required because cmake automatically adds CMAKE_INSTALL_PREFIX to CMAKE_SYSTEM_PREFIX_PATH
>> 
>> cd gdal-{VERSION}
>> mkdir build
>> cd build
>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX/arm64 -DBUILD_APPS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_PYTHON_BINDINGS=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a -DCMAKE_BUILD_TYPE=Release ..
>> cmake --build .
>> cmake --build . --target install
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> -- 
> http://www.spatialys.com <http://www.spatialys.com/>
> My software is free, but my time generally not.
> 


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220705/32a4fdaa/attachment-0001.htm>

From gdt at lexort.com  Tue Jul  5 05:34:10 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 05 Jul 2022 08:34:10 -0400
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
In-Reply-To: <0519d59c-fa50-100e-2afa-ae6a7feeef6f@spatialys.com> (Even
 Rouault's message of "Tue, 5 Jul 2022 13:23:00 +0200")
References: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
 <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>
 <33BE1262-EBE6-49A6-BF9D-232CF72294DC@nixanz.com>
 <0519d59c-fa50-100e-2afa-ae6a7feeef6f@spatialys.com>
Message-ID: <rmiy1x7viv1.fsf@s1.lexort.com>


Even Rouault <even.rouault at spatialys.com> writes:

> Can you try the following patch which basically forces to remap all
> "foo64" functions to "foo". I assume that iOS Unix I/O is 64-bit
> enabled by default...

I would expect it is.  The BSD world changed the ttype of size_t, off_t
to 64 bits a really long time ago and in the particular case of NetBSD
versioned the syscalls for binary compat (probably others did too).  I
have viewed "large file support" as a linux and solaris thing only.

This is probably a bigger rototill than anyone has appetite for, but I
wonder if there should basically be a configure test to look for foo64
(by the equivalent of AC_TRY_COMPILE) and if so use it,a nd if not just
use the normal system calls.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220705/40e2afdb/attachment.sig>

From even.rouault at spatialys.com  Tue Jul  5 05:50:59 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Jul 2022 14:50:59 +0200
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
In-Reply-To: <rmiy1x7viv1.fsf@s1.lexort.com>
References: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
 <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>
 <33BE1262-EBE6-49A6-BF9D-232CF72294DC@nixanz.com>
 <0519d59c-fa50-100e-2afa-ae6a7feeef6f@spatialys.com>
 <rmiy1x7viv1.fsf@s1.lexort.com>
Message-ID: <eb81dd5d-1636-cabd-dd72-0f882cdc0c0d@spatialys.com>


> have viewed "large file support" as a linux and solaris thing only.
>
> This is probably a bigger rototill than anyone has appetite for, but I
> wonder if there should basically be a configure test to look for foo64
> (by the equivalent of AC_TRY_COMPILE) and if so use it,a nd if not just
> use the normal system calls.

That's what we do already what we do for a few functions (like fopen64 
vs fopen): cf 
https://github.com/OSGeo/gdal/blob/1e3cc18e298e81c1f42162b10ef7beb0dd94d3cf/cmake/helpers/configure.cmake#L230

But for some reason, in that circumstance, it seems it detects symbols 
that are not available afterwards at build time. It might be related to 
the warning at bottom of 
https://cmake.org/cmake/help/latest/module/CheckFunctionExists.html 
about prefering check_symbol_exists() rather than 
check_function_exists(). I suspect that the xxx64 symbols are available 
in a system library but require special #define to be usable.

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From gdt at lexort.com  Tue Jul  5 06:04:07 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 05 Jul 2022 09:04:07 -0400
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
In-Reply-To: <eb81dd5d-1636-cabd-dd72-0f882cdc0c0d@spatialys.com> (Even
 Rouault's message of "Tue, 5 Jul 2022 14:50:59 +0200")
References: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
 <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>
 <33BE1262-EBE6-49A6-BF9D-232CF72294DC@nixanz.com>
 <0519d59c-fa50-100e-2afa-ae6a7feeef6f@spatialys.com>
 <rmiy1x7viv1.fsf@s1.lexort.com>
 <eb81dd5d-1636-cabd-dd72-0f882cdc0c0d@spatialys.com>
Message-ID: <rmibku3vhh4.fsf@s1.lexort.com>


Even Rouault <even.rouault at spatialys.com> writes:

> That's what we do already what we do for a few functions (like fopen64
> vs fopen): cf
> https://github.com/OSGeo/gdal/blob/1e3cc18e298e81c1f42162b10ef7beb0dd94d3cf/cmake/helpers/configure.cmake#L230
>
> But for some reason, in that circumstance, it seems it detects symbols
> that are not available afterwards at build time. It might be related
> to the warning at bottom of
> https://cmake.org/cmake/help/latest/module/CheckFunctionExists.html
> about prefering check_symbol_exists() rather than
> check_function_exists(). I suspect that the xxx64 symbols are
> available in a system library but require special #define to be
> usable.

I see - so the compilation can throw an "implicit definition" warning
and succeed, and this means that if the symbol resolves at link time,
the test passes, even if the function signature is totally
non-matching.  That sounds like a buggy implementation of
Check_Function_Exists, but maybe that's what autoconf does.  Requiring
warning-clean compilation probably has its own issues.

Looking at CheckSymbolExists, it seems to check the right things, so
perhaps nik@ can try changing to that and see what happens.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220705/48f468db/attachment.sig>

From richard.greenwood at gmail.com  Tue Jul  5 06:27:56 2022
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Tue, 5 Jul 2022 07:27:56 -0600
Subject: [gdal-dev] gdal2tiles vs COG
In-Reply-To: <CADRrdKsYR1aBEV6Jt7Yx4mzZvQez1=txD0FtAqf8_R-NX5TaYw@mail.gmail.com>
References: <CADRrdKsYR1aBEV6Jt7Yx4mzZvQez1=txD0FtAqf8_R-NX5TaYw@mail.gmail.com>
Message-ID: <CAHBySPbbUQ7gyGGRUrm+t7nTuVOJiDroNxCXUM_Vfx2Cx4Q8ZQ@mail.gmail.com>

On Tue, Jul 5, 2022 at 1:30 AM Javier Jimenez Shaw <j1 at jimenezshaw.com>
wrote:

> Hi
>
> Do you know if there is any performance comparison between gdal2tiles and
> COG?
>
> To display our geotiffs we are currently running gdal2tiles and storing
> the (gazillion) tiles in Amazon S3. Then a webpage with openlayers is
> showing them in WebMercator.
> We are considering moving to make a COG file with the option
> TILING_SCHEME=GoogleMapsCompatible and use also openlayers to read it (from
> the same S3 server). However, our first tests are not running very fast
> displaying the map in the browser.
>
> I do not know if anybody else had studied it, and if there is any trick to
> make it faster.
>

Are you rendering the images in OpenLayers? And are you using the new-ish
GeoTiff format for the COGs? If so, I think the performance issue is that
OpenLayers has to read a lot of index data from the COG before it can make
a http range request. With tiles, the schema is already defined whereas
with a COG the app has to query the COG to get the schema before it can
request the portions that it needs. I found that after the initial requests
were completed that performance was fairly comparable.


> PS. I cannot use JPEG compression (with alpha) with openlayers, but that
> is another problem... or maybe not.
>

One kludge/work-around is to use a vector layer as a mask, but this
discussion probably doesn't belong on the GDAL list.


> Thanks,
> Javier.
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


-- 
Richard W. Greenwood
www.greenwoodmap.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220705/d8c03d36/attachment.htm>

From andAllWasWell at web.de  Tue Jul  5 11:06:19 2022
From: andAllWasWell at web.de (andAllWasWell at web.de)
Date: Tue, 5 Jul 2022 20:06:19 +0200
Subject: [gdal-dev] Dimension with unlimited length
Message-ID: <trinity-b313d292-7028-4287-9a56-4f6d6fd31ca0-1657044379598@3c-app-webde-bs43>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220705/90b6407c/attachment.htm>

From even.rouault at spatialys.com  Tue Jul  5 12:13:46 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Jul 2022 21:13:46 +0200
Subject: [gdal-dev] Dimension with unlimited length
In-Reply-To: <trinity-b313d292-7028-4287-9a56-4f6d6fd31ca0-1657044379598@3c-app-webde-bs43>
References: <trinity-b313d292-7028-4287-9a56-4f6d6fd31ca0-1657044379598@3c-app-webde-bs43>
Message-ID: <b061b4fd-d59d-7bcb-22eb-b8ec5e20bd4c@spatialys.com>

Luisa,

the answer is a mixed yes/no

The implementation of the CreateDimension() method in the netCDF 
supports a UNLIMITED creation option. Cf 
https://github.com/OSGeo/gdal/blob/664fae6ed14d77501c4f0a796f0fb371bae3bf3e/autotest/gdrivers/netcdf_multidim.py#L586 
to instruct it to be created as such at the netCDF level. But GDAL still 
needs a fixed size for such dimensions. I guess that could potentially 
be enhanced to be able to expand the dimension size, but that remains to 
be coded (there would be implications in GDAL generic multidim code that 
does for example checks on indices in GDALMultiDim::Write() operations)

Even

Le 05/07/2022 ? 20:06, andAllWasWell at web.de a ?crit?:
> Hi,
>
> i am interested in using GDAL for writing a multi-dimensional array in 
> a NetCDF file.
> Is it possible in GDAL to create a dimension (time in my case) without 
> knowing/ restricting the size of it at the beginning?
> I would like to create a MDArray?with first only one timestep and then 
> expand this by adding an unknown amount of timesteps to it afterwards.
> The other two dimensions are fixed in my case.
> In NetCDF I think it's possible through a dimension with unlimited 
> length (NC_UNLIMITED) - is there also a way in GDAL?
>
> I am using C++ if that's important to know.
>
> Thank you,
> Luisa
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From nik at nixanz.com  Tue Jul  5 16:29:18 2022
From: nik at nixanz.com (Nik Sands)
Date: Wed, 6 Jul 2022 09:29:18 +1000
Subject: [gdal-dev] Build GDAL 3.5 for iOS error: forward declaration of
 'stat64'
In-Reply-To: <0519d59c-fa50-100e-2afa-ae6a7feeef6f@spatialys.com>
References: <A2FE51B5-9DA0-4666-ACA2-4D5311C24A9D@nixanz.com>
 <c9383ba2-6f24-d37c-f594-18e7fbd7975d@spatialys.com>
 <33BE1262-EBE6-49A6-BF9D-232CF72294DC@nixanz.com>
 <0519d59c-fa50-100e-2afa-ae6a7feeef6f@spatialys.com>
Message-ID: <FE1FB3DE-7642-43AA-B394-9E06293413F3@nixanz.com>

Thanks Even,

After applying the patch and then running the ?cmake' and 'cmake ?build' again, it stops at the same point but produces much fewer errors (and I have found a dodgy work-around those - see below).  Only two errors this time, both for the same file:

==========
[  6%] Building CXX object port/CMakeFiles/cpl.dir/cpl_compressor.cpp.o
[  7%] Building CXX object port/CMakeFiles/cpl.dir/cpl_float.cpp.o
[  7%] Building CXX object port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:22: error: variable has incomplete type 'struct statvfs64'
    struct statvfs64 buf;
                     ^
/Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:12: note: forward declaration of 'statvfs64'
    struct statvfs64 buf;
           ^
1 error generated.
make[2]: *** [port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o] Error 1
make[1]: *** [port/CMakeFiles/cpl.dir/all] Error 2
make: *** [all] Error 2
==========

So the patch has fixed the vast majority of the errors, but this one still persists.

DODGY WORK AROUND:

I then modified the file 'port/cpl_vsil_unix_stdio_64.cpp? and deleted the ?if' section for ?HAVE_STATVFS64', forcing it to run the stavfs ?else? part instead, and this time the build continued on (as far as the ?98%? mark before producing another error which I might post seperately if I can?t resolve it).  Obviously this is not the ?correct? way to fix the issue, but I hope that it demonstrates (part of) where the issue lies and hopefully might help to identify the correct solution?

So for some reason, when the 'port/cpl_vsil_unix_stdio_64.cpp? file is used, it appears that HAVE_STATVFS64 is defined, despite the patch having been applied.

Following the patch, my cmake/helpers/configure.cmake file shows that the patch has been applied.  The relevent portion of that file now looks like this:

==========
  check_function_exists(ftruncate64 HAVE_FTRUNCATE64)
  if (HAVE_FTRUNCATE64)
    set(VSI_FTRUNCATE64 "ftruncate64")
  else ()
    set(VSI_FTRUNCATE64 "ftruncate")
  endif ()

  if (${CMAKE_SYSTEM_NAME} MATCHES "iOS")
    set(VSI_FOPEN64 "fopen")
    set(VSI_FTRUNCATE64 "ftruncate")
    set(VSI_FTELL64 "ftell")
    set(VSI_FSEEK64 "fseek")
    set(VSI_STAT64 stat)
    set(VSI_STAT64_T stat)
    unset(HAVE_FOPEN64)
    unset(HAVE_FTRUNCATE64)
    unset(HAVE_FTELL64)
    unset(HAVE_FSEEK64)
    unset(HAVE_STATVFS64)
  endif()

  set(UNIX_STDIO_64 TRUE)

  set(INCLUDE_XLOCALE_H)
  if(HAVE_XLOCALE_H)
    set(INCLUDE_XLOCALE_H "#include <xlocale.h>")
  endif()
==========

Cheers,
Nik.


> On 5 Jul 2022, at 9:23 pm, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> (re-adding the list)
> 
> ok, it's a bit weird CMake detects symbols that are not available at build time, but there might be some subtelties in iOS SDK
> 
> Can you try the following patch which basically forces to remap all "foo64" functions to "foo". I assume that iOS Unix I/O is 64-bit enabled by default...
> 
> diff --git a/cmake/helpers/configure.cmake b/cmake/helpers/configure.cmake
> index c38604e23e..e5be264bf9 100644
> --- a/cmake/helpers/configure.cmake
> +++ b/cmake/helpers/configure.cmake
> @@ -241,6 +241,20 @@ else ()
>      set(VSI_FTRUNCATE64 "ftruncate")
>    endif ()
>  
> +  if (${CMAKE_SYSTEM_NAME} MATCHES "iOS")
> +    set(VSI_FOPEN64 "fopen")
> +    set(VSI_FTRUNCATE64 "ftruncate")
> +    set(VSI_FTELL64 "ftell")
> +    set(VSI_FSEEK64 "fseek")
> +    set(VSI_STAT64 stat)
> +    set(VSI_STAT64_T stat)
> +    unset(HAVE_FOPEN64)
> +    unset(HAVE_FTRUNCATE64)
> +    unset(HAVE_FTELL64)
> +    unset(HAVE_FSEEK64)
> +    unset(HAVE_STATVFS64)
> +  endif()
> +
>    set(UNIX_STDIO_64 TRUE)
>  
>    set(INCLUDE_XLOCALE_H)
> 
> 
> 
> 
> Le 05/07/2022 ? 13:07, Nik Sands a ?crit :
>> Hi Even,
>> 
>> Thanks again for your advice.  The debug  message did produce what I believe was the expected output as follows:
>> 
>> CMake Warning at cmake/helpers/configure.cmake:175 (message):
>>   CMAKE_SYSTEM_NAME=iOS
>> 
>> Making the suggested change to the configure.cmake file (line 175 in the version 3.5 distribution I have) and re-building certainly progresses further than my previous build attempt.  I now get the errors in the ouput listed below.  Note that I found one other location in the same configure.cmake file where it was checking for ?Darwin? and I made the same change to that line, but it made no difference to these errors below.
>> 
>> Cheers,
>> Nik.
>> 
>> 
>> ==========
>> ?
>> ?
>> [  7%] Building CXX object port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:139:23: error: use of undeclared identifier 'ftell64'
>> static_assert( sizeof(VSI_FTELL64(nullptr)) == sizeof(vsi_l_offset),
>>                       ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: note: expanded from macro 'VSI_FTELL64'
>> #define VSI_FTELL64 ftell64
>>                     ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:315:25: error: use of undeclared identifier 'fseek64'
>>     const int nResult = VSI_FSEEK64( fp, nOffsetIn, nWhence );
>>                         ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: note: expanded from macro 'VSI_FSEEK64'
>> #define VSI_FSEEK64 fseek64
>>                     ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:355:25: error: use of undeclared identifier 'ftell64'
>>             m_nOffset = VSI_FTELL64( fp );
>>                         ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: note: expanded from macro 'VSI_FTELL64'
>> #define VSI_FTELL64 ftell64
>>                     ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:422:13: error: use of undeclared identifier 'fseek64'
>>         if( VSI_FSEEK64( fp, m_nOffset, SEEK_SET ) != 0 )
>>             ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: note: expanded from macro 'VSI_FSEEK64'
>> #define VSI_FSEEK64 fseek64
>>                     ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:456:35: error: use of undeclared identifier 'ftell64'
>>         vsi_l_offset nNewOffset = VSI_FTELL64( fp );
>>                                   ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:152:21: note: expanded from macro 'VSI_FTELL64'
>> #define VSI_FTELL64 ftell64
>>                     ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:484:13: error: use of undeclared identifier 'fseek64'
>>         if( VSI_FSEEK64( fp, m_nOffset, SEEK_SET ) != 0 )
>>             ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:149:21: note: expanded from macro 'VSI_FSEEK64'
>> #define VSI_FSEEK64 fseek64
>>                     ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:532:12: error: use of undeclared identifier 'ftruncate64'; did you mean 'ftruncate'?
>>     return VSI_FTRUNCATE64( fileno(fp), nNewSize );
>>            ^~~~~~~~~~~~~~~
>>            ftruncate
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:146:25: note: expanded from macro 'VSI_FTRUNCATE64'
>> #define VSI_FTRUNCATE64 ftruncate64
>>                         ^
>> /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk/usr/include/unistd.h:611:6: note: 'ftruncate' declared here
>> int      ftruncate(int, off_t);
>>          ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:645:16: error: use of undeclared identifier 'fopen64'; did you mean 'fopen'?
>>     FILE *fp = VSI_FOPEN64( pszFilename, pszAccess );
>>                ^~~~~~~~~~~
>>                fopen
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:143:21: note: expanded from macro 'VSI_FOPEN64'
>> #define VSI_FOPEN64 fopen64
>>                     ^
>> /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.5.sdk/usr/include/stdio.h:153:7: note: 'fopen' declared here
>> FILE    *fopen(const char * __restrict __filename, const char * __restrict __mode) __DARWIN_ALIAS_STARTING(__MAC_10_6, __IPHONE_2_0, __DARWIN_ALIAS(fopen));
>>          ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:22: error: variable has incomplete type 'struct statvfs64'
>>     struct statvfs64 buf;
>>                      ^
>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsil_unix_stdio_64.cpp:793:12: note: forward declaration of 'statvfs64'
>>     struct statvfs64 buf;
>>            ^
>> 9 errors generated.
>> make[2]: *** [port/CMakeFiles/cpl.dir/cpl_vsil_unix_stdio_64.cpp.o] Error 1
>> make[1]: *** [port/CMakeFiles/cpl.dir/all] Error 2
>> make: *** [all] Error 2
>> ==========
>> 
>> 
>> 
>>> On 5 Jul 2022, at 5:00 pm, Even Rouault <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>> wrote:
>>> 
>>> Nik,
>>> 
>>> in cmake/helpers/configure.cmake, there's a special case of Darwin at line 183 in master
>>> 
>>>   if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
>>> 
>>> Can you test if replacing it with
>>> 
>>>   if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin" OR ${CMAKE_SYSTEM_NAME} MATCHES "iOS")
>>> 
>>> works better? (I assume CMAKE_SYSTEM_NAME = iOS from https://cmake.org/cmake/help/latest/variable/IOS.html <https://cmake.org/cmake/help/latest/variable/IOS.html> , but you might want to add a 'message(WARNING "CMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")' debug statement to check
>>> 
>>> Even
>>> 
>>> Le 05/07/2022 ? 06:14, Nik Sands a ?crit :
>>>> Hi GDAL devs,
>>>> 
>>>> As per my earlier emails, I?m attempting to build GDAL 3.5 for iOS.  The complete process (so far) for this is below, at the end of this email.
>>>> 
>>>> A quick summary of some relevant points is:
>>>> ?  Using a 3rd party cmake toolchain file which caters for iOS, macOS (as well as other Apple OSs) and can even build a fat binary that works for both iOS device and simulator (arm64/x86_64).
>>>> ?  Using a 3rd party mirror of SQLite which includes cmake configuration, so that I can incorporate the same methodology to build iOS SQLite that I?m using for other dependencies (the standard Apple bundled SQLite throws an error when building GDAL)
>>>> 
>>>> The 'cmake <options> ..? succeeds to configure the GDAL build.  However, when I run ?cmake ?build .? I get the following output:
>>>> 
>>>> ==========
>>>> [  0%] Built target generate_gdal_version_h
>>>> [  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalinfo_lib.cpp.o
>>>> [  0%] Building CXX object apps/CMakeFiles/appslib.dir/gdalbuildvrt_lib.cpp.o
>>>> [  1%] Building CXX object apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o
>>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/apps/gdal_grid_lib.cpp:1213:26: error: variable has incomplete type 'VSIStatBufL' (aka 'stat64')
>>>>             VSIStatBufL  sStat;
>>>>                          ^
>>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/port/cpl_vsi.h:195:16: note: forward declaration of 'stat64'
>>>> typedef struct VSI_STAT64_T VSIStatBufL;
>>>>                ^
>>>> /Users/nsands/Documents/Development/3rdParty/GDAL3/gdal-3.5.0/build/port/cpl_config.h:41:22: note: expanded from macro 'VSI_STAT64_T'
>>>> #define VSI_STAT64_T stat64
>>>>                      ^
>>>> 1 error generated.
>>>> make[2]: *** [apps/CMakeFiles/appslib.dir/gdal_grid_lib.cpp.o] Error 1
>>>> make[1]: *** [apps/CMakeFiles/appslib.dir/all] Error 2
>>>> make: *** [all] Error 2
>>>> ==========
>>>> 
>>>> I found a GDAL bug that appears to be related, but it was closed as ?fixed? about 8 years ago:
>>>> https://trac.osgeo.org/gdal/ticket/1005 <https://trac.osgeo.org/gdal/ticket/1005>
>>>> 
>>>> This may also be relevant:
>>>> https://www.spinics.net/lists/dash/msg02117.html <https://www.spinics.net/lists/dash/msg02117.html>
>>>> 
>>>> But this is somewhat beyond my (lack of) expertise to resolve.  Does anybody have any suggestions for resolving this issue?
>>>> 
>>>> Cheers,
>>>> Nik.
>>>> 
>>>> 
>>>> COMPLETE PROCESS TO BUILD iOS GDAL (so far):
>>>> 
>>>> 
>>>> Install Homebrew package manager:
>>>> /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install <https://raw.githubusercontent.com/Homebrew/install/master/install>)"
>>>> 
>>>> Install cmake using Homebrew:
>>>> brew install cmakecmake --build . --target install
>>>> 
>>>> Install ios.toolchain.cmake:
>>>> Download from:  https://github.com/leetal/ios-cmake <https://github.com/leetal/ios-cmake>
>>>> Install at:  $HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>>>> 
>>>> Environment Variables:
>>>> export PREFIX=$HOME/build/arm64
>>>> export CMTOOLCHAIN=$HOME/Documents/Development/3rdParty/ios-cmake-master/ios.toolchain.cmake
>>>> 
>>>> Build SQLite:
>>>> Download CMAKE-compatible SQLite amalgamation from:
>>>> https://github.com/azadkuh/sqlite-amalgamation <https://github.com/azadkuh/sqlite-amalgamation>
>>>> 
>>>> cd sqlite-amalgamation-master
>>>> mkdir build
>>>> cd build
>>>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DSQLITE_ENABLE_RTREE=ON ..
>>>> cmake --build .
>>>> cmake --build . --target install
>>>> 
>>>> Build Proj:
>>>> cd proj-{VERSION}
>>>> mkdir build
>>>> cd build
>>>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX -DENABLE_TIFF=OFF -DENABLE_CURL=OFF -DBUILD_PROJSYNC=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a ..
>>>> cmake --build .
>>>> cmake --build . --target install
>>>> 
>>>> Build GDAL:
>>>> (Specifying the path to PROJ is not required because cmake automatically adds CMAKE_INSTALL_PREFIX to CMAKE_SYSTEM_PREFIX_PATH
>>>> 
>>>> cd gdal-{VERSION}
>>>> mkdir build
>>>> cd build
>>>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN -DPLATFORM=OS64 -DCMAKE_INSTALL_PREFIX=$PREFIX/arm64 -DBUILD_APPS=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_PYTHON_BINDINGS=OFF -DSQLITE3_INCLUDE_DIR=$PREFIX/include -DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a -DCMAKE_BUILD_TYPE=Release ..
>>>> cmake --build .
>>>> cmake --build . --target install
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>>> 
>>> -- 
>>> http://www.spatialys.com <http://www.spatialys.com/>
>>> My software is free, but my time generally not.
>>> 
>> 
>> 
>> ========================================================
>> NIK SANDS
>> Line Tamer | Time Traveller | Space Cadet
>> 
> -- 
> http://www.spatialys.com <http://www.spatialys.com/>
> My software is free, but my time generally not.


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220706/4456df4e/attachment-0001.htm>

From nik at nixanz.com  Tue Jul  5 23:41:08 2022
From: nik at nixanz.com (Nik Sands)
Date: Wed, 6 Jul 2022 16:41:08 +1000
Subject: [gdal-dev] GDAL 3.5 successfully built for iOS with cmake
Message-ID: <5D7F9F51-C20B-4527-948E-5D2F02F40AE2@nixanz.com>

Hello again,

This is just a quick note to follow up on my many questions over the past few days.

I have successfully built GDAL 3.5 for iOS, and I have fully documented the procedure I used at:

	https://gis.stackexchange.com/questions/434514/build-gdal-3-x-for-ios/435316#435316

Note that it includes two patches.  The second patch is a very dodgy kludge.  I hope that people who know better than I do will be able to come up with a better solution and that both patches will be incorporated into future distributions of GDAL.

Thanks to Even and the many other people who replied and offered advice and suggestions (and a patch).

Cheers,
Nik.


From even.rouault at spatialys.com  Wed Jul  6 00:54:41 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Jul 2022 09:54:41 +0200
Subject: [gdal-dev] Motion: adopt GDAL 3.5.1RC2 as final 3.5.1 release
In-Reply-To: <f6443b63-0aad-76ca-7e68-d6ac6a65aa5a@spatialys.com>
References: <f6443b63-0aad-76ca-7e68-d6ac6a65aa5a@spatialys.com>
Message-ID: <5a0419c1-2275-eba2-8218-05a15d3fdcba@spatialys.com>

Hi,

motion passed with +1 from MateuszL and I.

Even

Le 01/07/2022 ? 09:14, Even Rouault a ?crit?:
> Hi,
>
> Motion:
>
> Adopt GDAL 3.5.1RC2 as final 3.5.1 release
>
> Starting with my +1
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Wed Jul  6 01:28:36 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Jul 2022 10:28:36 +0200
Subject: [gdal-dev] GDAL 3.5 successfully built for iOS with cmake
In-Reply-To: <5D7F9F51-C20B-4527-948E-5D2F02F40AE2@nixanz.com>
References: <5D7F9F51-C20B-4527-948E-5D2F02F40AE2@nixanz.com>
Message-ID: <c9adced9-27ca-1abe-5eb0-3e9ec1a715dc@spatialys.com>

Nik,

can you revert your patches and just try the one at 
https://github.com/OSGeo/gdal/pull/6024 ?

The difference with my previous one is that it also unset variables in 
the cache. Testing locally on Linux (by running it unconditionnaly), I 
now see that the generated port/cpl_config.h in the build directory no 
longer define HAVE_STATVFS64, which should avoid the need for your patch 
in the .cpp file

Even

Le 06/07/2022 ? 08:41, Nik Sands a ?crit?:
> Hello again,
>
> This is just a quick note to follow up on my many questions over the past few days.
>
> I have successfully built GDAL 3.5 for iOS, and I have fully documented the procedure I used at:
>
> 	https://gis.stackexchange.com/questions/434514/build-gdal-3-x-for-ios/435316#435316
>
> Note that it includes two patches.  The second patch is a very dodgy kludge.  I hope that people who know better than I do will be able to come up with a better solution and that both patches will be incorporated into future distributions of GDAL.
>
> Thanks to Even and the many other people who replied and offered advice and suggestions (and a patch).
>
> Cheers,
> Nik.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Wed Jul  6 01:36:43 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Jul 2022 10:36:43 +0200
Subject: [gdal-dev] GDAL 3.5.1 is released
Message-ID: <4354814f-b16a-0f35-a057-b76909f84887@spatialys.com>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the
release of the GDAL/OGR 3.5.1 bug fix version.

Consult the release notes for the list of issues addressed :

 ? https://github.com/OSGeo/gdal/blob/v3.5.1/NEWS.md

The sources are available at:

 ? https://download.osgeo.org/gdal/3.5.1/gdal-3.5.1.tar.xz
 ? https://download.osgeo.org/gdal/3.5.1/gdal-3.5.1.tar.gz
 ? https://download.osgeo.org/gdal/3.5.1/gdal351.zip

Best regards,

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From nik at nixanz.com  Wed Jul  6 02:21:12 2022
From: nik at nixanz.com (Nik Sands)
Date: Wed, 6 Jul 2022 19:21:12 +1000
Subject: [gdal-dev] GDAL 3.5 successfully built for iOS with cmake
In-Reply-To: <c9adced9-27ca-1abe-5eb0-3e9ec1a715dc@spatialys.com>
References: <5D7F9F51-C20B-4527-948E-5D2F02F40AE2@nixanz.com>
 <c9adced9-27ca-1abe-5eb0-3e9ec1a715dc@spatialys.com>
Message-ID: <741F4902-1667-4145-A7D1-2EB918358A92@nixanz.com>

Hi Even,

Yes, you?re updated patch has worked on a (clean) distribution of version 3.5.  It has built for iOS successfully now, without my second dodgy work-around patch.

Thanks again.

Nik.


> On 6 Jul 2022, at 6:28 pm, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Nik,
> 
> can you revert your patches and just try the one at https://github.com/OSGeo/gdal/pull/6024 ?
> 
> The difference with my previous one is that it also unset variables in the cache. Testing locally on Linux (by running it unconditionnaly), I now see that the generated port/cpl_config.h in the build directory no longer define HAVE_STATVFS64, which should avoid the need for your patch in the .cpp file
> 
> Even
> 
> Le 06/07/2022 ? 08:41, Nik Sands a ?crit :
>> Hello again,
>> 
>> This is just a quick note to follow up on my many questions over the past few days.
>> 
>> I have successfully built GDAL 3.5 for iOS, and I have fully documented the procedure I used at:
>> 
>> 	https://gis.stackexchange.com/questions/434514/build-gdal-3-x-for-ios/435316#435316
>> 
>> Note that it includes two patches.  The second patch is a very dodgy kludge.  I hope that people who know better than I do will be able to come up with a better solution and that both patches will be incorporated into future distributions of GDAL.
>> 
>> Thanks to Even and the many other people who replied and offered advice and suggestions (and a patch).
>> 
>> Cheers,
>> Nik.
>> 
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 


========================================================
NIK SANDS
Line Tamer | Time Traveller | Space Cadet

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220706/bce16d13/attachment.htm>

From runette at gmail.com  Wed Jul  6 02:44:18 2022
From: runette at gmail.com (Paul Harwood)
Date: Wed, 6 Jul 2022 10:44:18 +0100
Subject: [gdal-dev] GDAL 3.5 successfully built for iOS with cmake
In-Reply-To: <741F4902-1667-4145-A7D1-2EB918358A92@nixanz.com>
References: <5D7F9F51-C20B-4527-948E-5D2F02F40AE2@nixanz.com>
 <c9adced9-27ca-1abe-5eb0-3e9ec1a715dc@spatialys.com>
 <741F4902-1667-4145-A7D1-2EB918358A92@nixanz.com>
Message-ID: <CAE8nN5N1mVJJBO+bcQTROuf-AcSNnpPPZTCp4XsM3taDa0GD7A@mail.gmail.com>

What would be very nice would be if you created a PR to add the iOS build
hints to gdal.org - so that this knowledge does not get lost ...

On Wed, 6 Jul 2022 at 10:21, Nik Sands <nik at nixanz.com> wrote:

> Hi Even,
>
> Yes, you?re updated patch has worked on a (clean) distribution of version
> 3.5.  It has built for iOS successfully now, without my second dodgy
> work-around patch.
>
> Thanks again.
>
> Nik.
>
>
> On 6 Jul 2022, at 6:28 pm, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
> Nik,
>
> can you revert your patches and just try the one at
> https://github.com/OSGeo/gdal/pull/6024 ?
>
> The difference with my previous one is that it also unset variables in the
> cache. Testing locally on Linux (by running it unconditionnaly), I now see
> that the generated port/cpl_config.h in the build directory no longer
> define HAVE_STATVFS64, which should avoid the need for your patch in the
> .cpp file
>
> Even
>
> Le 06/07/2022 ? 08:41, Nik Sands a ?crit :
>
> Hello again,
>
> This is just a quick note to follow up on my many questions over the past
> few days.
>
> I have successfully built GDAL 3.5 for iOS, and I have fully documented
> the procedure I used at:
>
>
> https://gis.stackexchange.com/questions/434514/build-gdal-3-x-for-ios/435316#435316
>
> Note that it includes two patches.  The second patch is a very dodgy
> kludge.  I hope that people who know better than I do will be able to come
> up with a better solution and that both patches will be incorporated into
> future distributions of GDAL.
>
> Thanks to Even and the many other people who replied and offered advice
> and suggestions (and a patch).
>
> Cheers,
> Nik.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
>
> ========================================================
> NIK SANDS
> Line Tamer | Time Traveller | Space Cadet
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220706/052a48c1/attachment-0001.htm>

From daniel.fred.evans at gmail.com  Wed Jul  6 04:13:39 2022
From: daniel.fred.evans at gmail.com (Daniel Evans)
Date: Wed, 6 Jul 2022 12:13:39 +0100
Subject: [gdal-dev] cURL response content output
Message-ID: <CANnaQaY2+6OE_AWWvsxQ0t7TCQCZezsXd3Y09ymU4jw_vi+xdg@mail.gmail.com>

Hi,

I'm trying to diagnose some issues with accessing remote datasets in GDAL -
I believe the problem is unrelated to GDAL itself, but it's proving hard to
debug.

By enabling CPL_CURL_VERBOSE, I can see that the server is kicking back a
400 Bad Request status, but the debug output doesn't include the actual
response content, which would allow me to understand the problem in more
detail. Is there a way to get GDAL/cURL to output the response content for
failed requests?


By way of example, if I attempt to access a nonexistent file on S3 with
cURL directly, I get the 404 error code and the descriptive XML error
message at the end:

$ curl -v https://a-very-very-fake-s3-bucket.s3.amazonaws.com/example.tif
[...]
< HTTP/1.1 404 Not Found
< Content-Type: application/xml
< Transfer-Encoding: chunked
< Date: Wed, 06 Jul 2022 11:09:09 GMT
< Server: AmazonS3
--- these lines ---
<
<?xml version="1.0" encoding="UTF-8"?>
<Error><Code>NoSuchBucket</Code><Message>The specified bucket does not
exist</Message><BucketName>a-very-very-fake-s3-bucket</BucketName>[...]</Error>
--- these lines ---


In contrast, the output from GDAL with CPL_CURL_VERBOSE excludes the XML
response:

< HTTP/1.1 404 Not Found
< Content-Type: application/xml
< Transfer-Encoding: chunked
< Date: Wed, 06 Jul 2022 11:04:16 GMT
< Server: AmazonS3

--- no XML output here ---

* Connection #1 to host a-very-very-fake-s3-bucket.s3.amazonaws.com left
intact
* Couldn't find host a-very-very-fake-s3-bucket.s3.amazonaws.com in the
.netrc file; using defaults
* Found bundle for host a-very-very-fake-s3-bucket.s3.amazonaws.com:
0x25b5080 [can pipeline]
* Re-using existing connection! (#1) with host
a-very-very-fake-s3-bucket.s3.amazonaws.com
* Connected to a-very-very-fake-s3-bucket.s3.amazonaws.com (52.216.207.115)
port 443 (#1)
> GET /?delimiter=%2F&max-keys=100&prefix=example.tif%2F HTTP/1.1
[...]

Regards,
Daniel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220706/9e060c74/attachment.htm>

From gane.prog at gmail.com  Wed Jul  6 07:22:34 2022
From: gane.prog at gmail.com (Gane R)
Date: Wed, 6 Jul 2022 19:52:34 +0530
Subject: [gdal-dev] PDF Driver projection support for Mercator_1SP
 Mercator_2SP
Message-ID: <CALMrLdDB5dcMF-z4j+sL-tHhf6y5D=TVfCoy+xHi=YFh8VH_hQ@mail.gmail.com>

Does the PDF driver support these projections

Here is such an example of file with projection
https://lists.osgeo.org/pipermail/gdal-dev/2016-September/045147.html

I see some fix applied for GeoTIFF https://trac.osgeo.org/gdal/ticket/5791

Any thoughts? for PDF driver or I am wrong they already exists in latest
GDAL

Gane R
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220706/9f6b77c7/attachment.htm>

From even.rouault at spatialys.com  Wed Jul  6 10:55:45 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Jul 2022 19:55:45 +0200
Subject: [gdal-dev] cURL response content output
In-Reply-To: <CANnaQaY2+6OE_AWWvsxQ0t7TCQCZezsXd3Y09ymU4jw_vi+xdg@mail.gmail.com>
References: <CANnaQaY2+6OE_AWWvsxQ0t7TCQCZezsXd3Y09ymU4jw_vi+xdg@mail.gmail.com>
Message-ID: <546b099f-629c-ad9e-f113-dceab5d0f248@spatialys.com>

Daniel,

https://github.com/OSGeo/gdal/pull/6028 should help, but with the 
restriction indicated in the commit message.

Even

Le 06/07/2022 ? 13:13, Daniel Evans a ?crit?:
> Hi,
>
> I'm trying to diagnose some issues with accessing remote datasets in 
> GDAL - I believe the problem is unrelated to GDAL itself, but it's 
> proving hard to debug.
>
> By enabling CPL_CURL_VERBOSE, I can see that the server is kicking 
> back a 400 Bad Request status, but the debug output doesn't include 
> the actual response content, which would allow me to understand the 
> problem in more detail. Is there a way to get GDAL/cURL to output the 
> response content for failed requests?
>
>
> By way of example, if I attempt to access a nonexistent file on S3 
> with cURL directly, I get the 404 error code and the descriptive 
> XML?error message at the end:
>
> $ curl -v https://a-very-very-fake-s3-bucket.s3.amazonaws.com/example.tif
> [...]
> < HTTP/1.1 404 Not Found
> < Content-Type: application/xml
> < Transfer-Encoding: chunked
> < Date: Wed, 06 Jul 2022 11:09:09 GMT
> < Server: AmazonS3
> --- these lines ---
> <
> <?xml version="1.0" encoding="UTF-8"?>
> <Error><Code>NoSuchBucket</Code><Message>The specified bucket does not 
> exist</Message><BucketName>a-very-very-fake-s3-bucket</BucketName>[...]</Error>
> --- these lines ---
>
>
> In contrast, the output from GDAL with CPL_CURL_VERBOSE excludes the 
> XML response:
>
> < HTTP/1.1 404 Not Found
> < Content-Type: application/xml
> < Transfer-Encoding: chunked
> < Date: Wed, 06 Jul 2022 11:04:16 GMT
> < Server: AmazonS3
>
> --- no XML output here ---
>
> * Connection #1 to host a-very-very-fake-s3-bucket.s3.amazonaws.com 
> <http://a-very-very-fake-s3-bucket.s3.amazonaws.com> left intact
> * Couldn't find host a-very-very-fake-s3-bucket.s3.amazonaws.com 
> <http://a-very-very-fake-s3-bucket.s3.amazonaws.com> in the .netrc 
> file; using defaults
> * Found bundle for host a-very-very-fake-s3-bucket.s3.amazonaws.com 
> <http://a-very-very-fake-s3-bucket.s3.amazonaws.com>: 0x25b5080 [can 
> pipeline]
> * Re-using existing connection! (#1) with host 
> a-very-very-fake-s3-bucket.s3.amazonaws.com 
> <http://a-very-very-fake-s3-bucket.s3.amazonaws.com>
> * Connected to a-very-very-fake-s3-bucket.s3.amazonaws.com 
> <http://a-very-very-fake-s3-bucket.s3.amazonaws.com> (52.216.207.115) 
> port 443 (#1)
> > GET /?delimiter=%2F&max-keys=100&prefix=example.tif%2F HTTP/1.1
> [...]
>
> Regards,
> Daniel
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220706/2189be8b/attachment.htm>

From nik at nixanz.com  Thu Jul  7 17:38:12 2022
From: nik at nixanz.com (Nik Sands)
Date: Fri, 8 Jul 2022 10:38:12 +1000
Subject: [gdal-dev] cmake ignores EXPAT_INCLUDE_DIR & EXPAT_LIBRARY
Message-ID: <6299727F-AE33-47E2-A164-345B8927FF0E@nixanz.com>

Hi GDAL devs,

I?ve built GDAL 3.5 for iOS (device and simulator) but I?ve found that when incorporating libgdal into my iOS app, there are several errors related to undefined symbols, all of which are XML related.

My guess is that the libexpat included in Apple?s SDK is missing some symbols that GDAL requires, therefore I?ve now built my own libexpat.

Now I?m attempting to rebuild GDAL using my own libexpat, using the cmake configuration command:

==========
cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN \
	-DPLATFORM=$OS \
	-DENABLE_BITCODE=OFF \
	-DCMAKE_INSTALL_PREFIX=$PREFIX \
	-DBUILD_APPS=OFF \
	-DBUILD_SHARED_LIBS=OFF \
	-DBUILD_PYTHON_BINDINGS=OFF \
	-DPROJ_ROOT=$PREFIX \
	-DEXPAT_INCLUDE_DIR=$PREFIX/include \
	-DEXPAT_LIBRARY=$PREFIX/lib/libexpat.dylib \
	-DSQLITE3_INCLUDE_DIR=$PREFIX/include \
	-DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a \
	-DIconv_INCLUDE_DIR=$SDKPATH/usr \
	-DIconv_LIBRARY=$SDKPATH/usr/lib/libiconv.tbd \
	-DCMAKE_BUILD_TYPE=Release \
	..
==========

However, when this completes, it tells me that it has ignored the two libexpat arguments that I supplied to it:

==========
-- Configuring done
-- Generating done
CMake Warning:
  Manually-specified variables were not used by the project:

    EXPAT_INCLUDE_DIR
    EXPAT_LIBRARY


-- Build files have been written to: ...
==========

Why would it be ignoring these arguments and how can I get it to use my own libexpat instead of the default SDK libexpat?

Cheers,
Nik.


From dg0yt at darc.de  Thu Jul  7 23:57:25 2022
From: dg0yt at darc.de (Kai Pastor, DG0YT)
Date: Fri, 8 Jul 2022 08:57:25 +0200
Subject: [gdal-dev] cmake ignores EXPAT_INCLUDE_DIR & EXPAT_LIBRARY
In-Reply-To: <6299727F-AE33-47E2-A164-345B8927FF0E@nixanz.com>
References: <6299727F-AE33-47E2-A164-345B8927FF0E@nixanz.com>
Message-ID: <3d2a99e7-c910-9439-4bcd-3ac42461c2dc@darc.de>

Am 08.07.22 um 02:38 schrieb Nik Sands:
> ==========
> -- Configuring done
> -- Generating done
> CMake Warning:
>    Manually-specified variables were not used by the project:
>
>      EXPAT_INCLUDE_DIR
>      EXPAT_LIBRARY
>
>
> -- Build files have been written to: ...
> ==========
>
> Why would it be ignoring these arguments and how can I get it to use my own libexpat instead of the default SDK libexpat?

Such arguments are used by "Find-module Packages". However, the Modern 
CMake approach for is "Config-file Packages". For expat, GDAL prefers 
config (expat-config.cmake, expatConfig.cmake) providing targets named 
expat::expat or EXPAT::EXPAT.

To use your own expat, make sure it has a config file which it is found 
via the search procedure, or use `EXPAT_ROOT`.

You can read more in the CMake documentation for command `find_package`, 
in cmake-packages or in "Using Dependencies Guide".

Kai

From even.rouault at spatialys.com  Fri Jul  8 01:15:51 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Jul 2022 10:15:51 +0200
Subject: [gdal-dev] cmake ignores EXPAT_INCLUDE_DIR & EXPAT_LIBRARY
In-Reply-To: <3d2a99e7-c910-9439-4bcd-3ac42461c2dc@darc.de>
References: <6299727F-AE33-47E2-A164-345B8927FF0E@nixanz.com>
 <3d2a99e7-c910-9439-4bcd-3ac42461c2dc@darc.de>
Message-ID: <533dac32-9b33-80db-9cef-539ab914fe61@spatialys.com>


> Such arguments are used by "Find-module Packages". However, the Modern 
> CMake approach for is "Config-file Packages". For expat, GDAL prefers 
> config (expat-config.cmake, expatConfig.cmake) providing targets named 
> expat::expat or EXPAT::EXPAT.
>
> To use your own expat, make sure it has a config file which it is 
> found via the search procedure, or use `EXPAT_ROOT`.
>
> You can read more in the CMake documentation for command 
> `find_package`, in cmake-packages or in "Using Dependencies Guide".

The more simple hint here to use all custom packages you've installed in 
$PREFIX would be to just specify -DCMAKE_PREFIX_PATH=$PREFIX

Even

-- 

http://www.spatialys.com
My software is free, but my time generally not.


From maxim.rylov at sap.com  Fri Jul  8 03:27:49 2022
From: maxim.rylov at sap.com (Rylov, Maxim)
Date: Fri, 8 Jul 2022 10:27:49 +0000
Subject: [gdal-dev] HANA driver in ubuntu-full docker image
Message-ID: <AM4PR02MB3123DE6B79E383DAB8C8244CF7829@AM4PR02MB3123.eurprd02.prod.outlook.com>

Hi GDAL developers,

We are interested in having the new HANA driver in the ubuntu-full docker image.
Would that be acceptable?

Thank you and kind regards,
Maxim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220708/cc08cd70/attachment.htm>

From even.rouault at spatialys.com  Fri Jul  8 03:46:04 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Jul 2022 12:46:04 +0200
Subject: [gdal-dev] HANA driver in ubuntu-full docker image
In-Reply-To: <AM4PR02MB3123DE6B79E383DAB8C8244CF7829@AM4PR02MB3123.eurprd02.prod.outlook.com>
References: <AM4PR02MB3123DE6B79E383DAB8C8244CF7829@AM4PR02MB3123.eurprd02.prod.outlook.com>
Message-ID: <0908cba9-7d62-5481-649b-ee41a9b5626b@spatialys.com>

Maxim,

the default image only includes free & open source software, and AFAIK 
the Hana ODBC driver itself is not.

You could potentially add optional support for it like was done with the 
WITH_FILEGDB option of docker/ubuntu-full/Dockerfile, and it would be 
the responsibility of users to enable the option a docker build time.

Even

Le 08/07/2022 ? 12:27, Rylov, Maxim via gdal-dev a ?crit?:
>
> Hi GDAL developers,
>
> We are interested in having the new HANA driver in the ubuntu-full 
> docker image.
> Would that be acceptable?
>
> Thank you and kind regards,
> Maxim
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220708/96bc5a25/attachment.htm>

From osgeo at gbp.gaige.net  Fri Jul  8 03:59:11 2022
From: osgeo at gbp.gaige.net (Gaige B. Paulsen)
Date: Fri, 08 Jul 2022 06:59:11 -0400
Subject: [gdal-dev] cmake ignores EXPAT_INCLUDE_DIR & EXPAT_LIBRARY
In-Reply-To: <6299727F-AE33-47E2-A164-345B8927FF0E@nixanz.com>
References: <6299727F-AE33-47E2-A164-345B8927FF0E@nixanz.com>
Message-ID: <382b52779b4f5594e83d05bad0d859df@gbp.gaige.net>

Nik,

Which symbols is the linker complaining about? I build regularly for iOS 
(although not using CMake directly), linking with the system copy of 
libxpat and libxml2 and I haven?t noticed any link or operational 
failures in 3.5.0. Admittedly, I use a subset of the drivers, but if you 
can send the linker errors, I can check to see why I'm not having the 
problem you are, maybe it'll give us a clue.

Cheers,
-Gaige


On 2022-07-07 20:38, Nik Sands wrote:
> Hi GDAL devs,
> 
> I?ve built GDAL 3.5 for iOS (device and simulator) but I?ve found that
> when incorporating libgdal into my iOS app, there are several errors
> related to undefined symbols, all of which are XML related.
> 
> My guess is that the libexpat included in Apple?s SDK is missing some
> symbols that GDAL requires, therefore I?ve now built my own libexpat.
> 
> Now I?m attempting to rebuild GDAL using my own libexpat, using the
> cmake configuration command:
> 
> ==========
> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN \
> 	-DPLATFORM=$OS \
> 	-DENABLE_BITCODE=OFF \
> 	-DCMAKE_INSTALL_PREFIX=$PREFIX \
> 	-DBUILD_APPS=OFF \
> 	-DBUILD_SHARED_LIBS=OFF \
> 	-DBUILD_PYTHON_BINDINGS=OFF \
> 	-DPROJ_ROOT=$PREFIX \
> 	-DEXPAT_INCLUDE_DIR=$PREFIX/include \
> 	-DEXPAT_LIBRARY=$PREFIX/lib/libexpat.dylib \
> 	-DSQLITE3_INCLUDE_DIR=$PREFIX/include \
> 	-DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a \
> 	-DIconv_INCLUDE_DIR=$SDKPATH/usr \
> 	-DIconv_LIBRARY=$SDKPATH/usr/lib/libiconv.tbd \
> 	-DCMAKE_BUILD_TYPE=Release \
> 	..
> ==========
> 
> However, when this completes, it tells me that it has ignored the two
> libexpat arguments that I supplied to it:
> 
> ==========
> -- Configuring done
> -- Generating done
> CMake Warning:
>   Manually-specified variables were not used by the project:
> 
>     EXPAT_INCLUDE_DIR
>     EXPAT_LIBRARY
> 
> 
> -- Build files have been written to: ...
> ==========
> 
> Why would it be ignoring these arguments and how can I get it to use
> my own libexpat instead of the default SDK libexpat?
> 
> Cheers,
> Nik.
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From xbartolone at gmail.com  Fri Jul  8 14:12:46 2022
From: xbartolone at gmail.com (Francesco Bartoli)
Date: Fri, 8 Jul 2022 23:12:46 +0200
Subject: [gdal-dev] Authentication bearer token for WFS driver
In-Reply-To: <57d7ba37-f8b5-4ae4-b418-e7a8a7452a2a@Spark>
References: <57d7ba37-f8b5-4ae4-b418-e7a8a7452a2a@Spark>
Message-ID: <22c373ed-69a8-409b-af17-9fd1567bfab3@Spark>

Hi devs,

is that authentication mechanism supported to consume a GeoServer layer protected by an OpenID Connect provider? I?m trying to implement a pygeoapi collection protected by the same OIDC provider via the OGR plugin but I need to figure out how the GDAL command line request would look like to pass?the bearer token through.

Do you have an example for the authentication scheme once the?HttpAuth?has been set to?ANY?(ref.?https://gdal.org/drivers/vector/wfs.html#dataset-name-syntax)?

Thank you in advance for your help.

Francesco
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220708/ce10415c/attachment.htm>

From even.rouault at spatialys.com  Fri Jul  8 14:19:39 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Jul 2022 23:19:39 +0200
Subject: [gdal-dev] Authentication bearer token for WFS driver
In-Reply-To: <22c373ed-69a8-409b-af17-9fd1567bfab3@Spark>
References: <57d7ba37-f8b5-4ae4-b418-e7a8a7452a2a@Spark>
 <22c373ed-69a8-409b-af17-9fd1567bfab3@Spark>
Message-ID: <3ef19788-4a9a-93fe-3496-65dc15e55a48@spatialys.com>

Francesco,

You should rather set the GDAL_HTTP_HEADER_FILE configuration option / 
environment variable to the filename of a text file which contains a 
line like

Authorization: Bearer XXXX

Even

Le 08/07/2022 ? 23:12, Francesco Bartoli a ?crit?:
> Hi devs,
>
> is that authentication mechanism supported to consume a GeoServer 
> layer protected by an OpenID Connect provider? I?m trying to implement 
> a pygeoapi collection protected by the same OIDC provider via the OGR 
> plugin but I need to figure out how the GDAL command line request 
> would look like to pass?the bearer token through.
>
> Do you have an example for the authentication scheme once the 
> *HttpAuth*?has been set to *ANY*?(ref. 
> https://gdal.org/drivers/vector/wfs.html#dataset-name-syntax)?
>
> Thank you in advance for your help.
>
> Francesco
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220708/f7885e6d/attachment.htm>

From nik at nixanz.com  Fri Jul  8 15:42:05 2022
From: nik at nixanz.com (Nik Sands)
Date: Sat, 9 Jul 2022 08:42:05 +1000
Subject: [gdal-dev] cmake ignores EXPAT_INCLUDE_DIR & EXPAT_LIBRARY
In-Reply-To: <382b52779b4f5594e83d05bad0d859df@gbp.gaige.net>
References: <6299727F-AE33-47E2-A164-345B8927FF0E@nixanz.com>
 <382b52779b4f5594e83d05bad0d859df@gbp.gaige.net>
Message-ID: <DBEA2A43-6001-4C1C-8E6C-DAF2ABA3893C@nixanz.com>

Hi Gaige,

Doh!  It was libxml2, not libexpat.  Thanks for pointing me in this direction.

Somehow, I hadn?t noticed the need for libxm2l in GDAL 3.x, as it was not in my iOS project which was working fine with GDAL 2.2.2 (or otherwise, it has somehow been removed from the project - perhaps when I did a clean up of unnecessary libraries).

The the libexpat guess was completely wrong.  It was all libxml2.

Now that I?ve added libxml2.tbd to the project, it builds fine.

Just FYI, as requested, the list of symbols is below (as reported by XCode when attempting to replace my old GDAL 2.2.2 library with my new GDAL 3.5 library).

I will remove my custom libexpat (attempt) from my GDAL cmake build process again.

Cheers,
Nik.

Undefined symbol: _xmlCatalogResolveSystem
Undefined symbol: _xmlNewStringInputStream
Undefined symbol: _xmlGetLastError
Undefined symbol: _xmlGetExternalEntityLoader
Undefined symbol: _xmlFree
Undefined symbol: _xmlSchemaNewMemParserCtxt
Undefined symbol: _xmlSchemaSetParserErrors
Undefined symbol: _xmlCatalogResolveURI
Undefined symbol: _xmlSetExternalEntityLoader
Undefined symbol: _xmlSchemaFreeParserCtxt
Undefined symbol: _xmlSchemaNewValidCtxt
Undefined symbol: _xmlSchemaValidateFile
Undefined symbol: _xmlSchemaSetValidErrors
Undefined symbol: _xmlSchemaParse
Undefined symbol: _xmlParseDoc
Undefined symbol: _xmlSchemaValidateDoc
Undefined symbol: _xmlFreeDoc
Undefined symbol: _xmlSchemaFreeValidCtxt
Undefined symbol: _xmlSchemaFree

> On 8 Jul 2022, at 8:59 pm, Gaige B. Paulsen <osgeo at gbp.gaige.net> wrote:
> 
> Nik,
> 
> Which symbols is the linker complaining about? I build regularly for iOS (although not using CMake directly), linking with the system copy of libxpat and libxml2 and I haven?t noticed any link or operational failures in 3.5.0. Admittedly, I use a subset of the drivers, but if you can send the linker errors, I can check to see why I'm not having the problem you are, maybe it'll give us a clue.
> 
> Cheers,
> -Gaige
> 
> 
> On 2022-07-07 20:38, Nik Sands wrote:
>> Hi GDAL devs,
>> I?ve built GDAL 3.5 for iOS (device and simulator) but I?ve found that
>> when incorporating libgdal into my iOS app, there are several errors
>> related to undefined symbols, all of which are XML related.
>> My guess is that the libexpat included in Apple?s SDK is missing some
>> symbols that GDAL requires, therefore I?ve now built my own libexpat.
>> Now I?m attempting to rebuild GDAL using my own libexpat, using the
>> cmake configuration command:
>> ==========
>> cmake -DCMAKE_TOOLCHAIN_FILE=$CMTOOLCHAIN \
>> 	-DPLATFORM=$OS \
>> 	-DENABLE_BITCODE=OFF \
>> 	-DCMAKE_INSTALL_PREFIX=$PREFIX \
>> 	-DBUILD_APPS=OFF \
>> 	-DBUILD_SHARED_LIBS=OFF \
>> 	-DBUILD_PYTHON_BINDINGS=OFF \
>> 	-DPROJ_ROOT=$PREFIX \
>> 	-DEXPAT_INCLUDE_DIR=$PREFIX/include \
>> 	-DEXPAT_LIBRARY=$PREFIX/lib/libexpat.dylib \
>> 	-DSQLITE3_INCLUDE_DIR=$PREFIX/include \
>> 	-DSQLITE3_LIBRARY=$PREFIX/lib/libsqlite3.a \
>> 	-DIconv_INCLUDE_DIR=$SDKPATH/usr \
>> 	-DIconv_LIBRARY=$SDKPATH/usr/lib/libiconv.tbd \
>> 	-DCMAKE_BUILD_TYPE=Release \
>> 	..
>> ==========
>> However, when this completes, it tells me that it has ignored the two
>> libexpat arguments that I supplied to it:
>> ==========
>> -- Configuring done
>> -- Generating done
>> CMake Warning:
>>  Manually-specified variables were not used by the project:
>>    EXPAT_INCLUDE_DIR
>>    EXPAT_LIBRARY
>> -- Build files have been written to: ...
>> ==========
>> Why would it be ignoring these arguments and how can I get it to use
>> my own libexpat instead of the default SDK libexpat?
>> Cheers,
>> Nik.
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From nik at nixanz.com  Fri Jul  8 20:22:57 2022
From: nik at nixanz.com (Nik Sands)
Date: Sat, 9 Jul 2022 13:22:57 +1000
Subject: [gdal-dev] How to obtain list of all available SRS in GDAL 3.5?
Message-ID: <A9AD87F0-85EA-48D7-ADCD-C200AABB5471@nixanz.com>

My app must provide the user with a comprehensive list of Spatial Reference Systems to select from.

With GDAL 2.2.2, I did this by querying both 'gcs.csv? and ?pcs.csv? from the GDAL_DATA directory.

These files are no longer available in GDAL 3.5.  So what?s the correct way to get a list of all the available SRSs now?

Cheers,
Nik.

From alansnow21 at gmail.com  Fri Jul  8 20:54:34 2022
From: alansnow21 at gmail.com (Alan Snow)
Date: Fri, 8 Jul 2022 22:54:34 -0500
Subject: [gdal-dev] How to obtain list of all available SRS in GDAL 3.5?
In-Reply-To: <A9AD87F0-85EA-48D7-ADCD-C200AABB5471@nixanz.com>
References: <A9AD87F0-85EA-48D7-ADCD-C200AABB5471@nixanz.com>
Message-ID: <CAGybdFQjOZfHODiOSY7J+crfFWNnMY3p28MsPqvcCadERxxL8w@mail.gmail.com>

This may be what you are looking for:
https://proj.org/development/reference/functions.html#c.proj_get_crs_info_list_from_database

On Fri, Jul 8, 2022, 10:23 PM Nik Sands <nik at nixanz.com> wrote:

> My app must provide the user with a comprehensive list of Spatial
> Reference Systems to select from.
>
> With GDAL 2.2.2, I did this by querying both 'gcs.csv? and ?pcs.csv? from
> the GDAL_DATA directory.
>
> These files are no longer available in GDAL 3.5.  So what?s the correct
> way to get a list of all the available SRSs now?
>
> Cheers,
> Nik.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220708/67711a23/attachment-0001.htm>

From mfstanton at geospan.com  Sat Jul  9 11:43:02 2022
From: mfstanton at geospan.com (Mike Stanton)
Date: Sat, 9 Jul 2022 18:43:02 +0000
Subject: [gdal-dev] Warp Reprojection A UTM NASD Projection into Missouri
 State Plane Western or Central leaves Gap Artifacts in the Tile Edges due
 to Distortion
Message-ID: <e86379c7a8294e39bc43e0bf413eb450@geospan.com>

Reprojecting shows a calculation error in the warping of a UTM Projection to a Missouri State Plane West or Central projection.  The manifestation is a series of crosshatch marks where the the tile Corners are and/or a black grid around all  the tiles in the data set, which is dependent on the zoom level being viewed.  Calculating the extents of the images shows the original image has a 256 meter size per tile but the reprojected tile has a 257.5~ meter extent even though the number of pixels is less in the southwest corners of the pictures probably due to the reprojected dimensions of the pixels.  The GSD of the pixels is for the reprojection is Pixel Size =  0.07935516222505510642 Original 0.07933064766036569682  as shown in the QGIS properties display.  When shown with nodata being white it renders as white flecks in Black it shows as a black grid.  I have a sample of four images from two columns and the set of calculations for one image from the UTM and the MSP_Central reproject.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220709/b5ee4527/attachment.htm>

From maxim.rylov at sap.com  Sun Jul 10 22:59:28 2022
From: maxim.rylov at sap.com (Rylov, Maxim)
Date: Mon, 11 Jul 2022 05:59:28 +0000
Subject: [gdal-dev] HANA driver in ubuntu-full docker image
In-Reply-To: <0908cba9-7d62-5481-649b-ee41a9b5626b@spatialys.com>
References: <AM4PR02MB3123DE6B79E383DAB8C8244CF7829@AM4PR02MB3123.eurprd02.prod.outlook.com>
 <0908cba9-7d62-5481-649b-ee41a9b5626b@spatialys.com>
Message-ID: <AM4PR02MB312335464E79BECFA357A625F7879@AM4PR02MB3123.eurprd02.prod.outlook.com>

Hi Even,

Thank you for your prompt reply.
We will consider your points and prepare a pull request.

Best regards,
Maxim

From: Even Rouault <even.rouault at spatialys.com>
Sent: Friday, July 8, 2022 12:46 PM
To: Rylov, Maxim <maxim.rylov at sap.com>; gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] HANA driver in ubuntu-full docker image


Maxim,

the default image only includes free & open source software, and AFAIK the Hana ODBC driver itself is not.

You could potentially add optional support for it like was done with the WITH_FILEGDB option of docker/ubuntu-full/Dockerfile, and it would be the responsibility of users to enable the option a docker build time.

Even
Le 08/07/2022 ? 12:27, Rylov, Maxim via gdal-dev a ?crit :
Hi GDAL developers,


We are interested in having the new HANA driver in the ubuntu-full docker image.
Would that be acceptable?

Thank you and kind regards,
Maxim



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev<https://eur03.safelinks.protection.outlook.com/?url=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fgdal-dev&data=05%7C01%7Cmaxim.rylov%40sap.com%7C41798914d5fa4262fb8308da60cf0fbd%7C42f7676cf455423c82f6dc2d99791af7%7C0%7C0%7C637928739676724949%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=12i4FcpYQ8pw4n%2Bh%2FgssEKM%2BpS28u3Swfcy2OOztJm8%3D&reserved=0>

--

http://www.spatialys.com<https://eur03.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.spatialys.com%2F&data=05%7C01%7Cmaxim.rylov%40sap.com%7C41798914d5fa4262fb8308da60cf0fbd%7C42f7676cf455423c82f6dc2d99791af7%7C0%7C0%7C637928739676724949%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=RtuKfDTCCS22LX1f1%2F9IBJ6Y0h0MgGf9AeDikZ5RnUs%3D&reserved=0>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220711/317f2203/attachment.htm>

From Brendan.DeTracey at dfo-mpo.gc.ca  Tue Jul 12 04:38:00 2022
From: Brendan.DeTracey at dfo-mpo.gc.ca (DeTracey, Brendan)
Date: Tue, 12 Jul 2022 11:38:00 +0000
Subject: [gdal-dev] NetCDF projection help
Message-ID: <dd2607a12a4d4ccaa35b8c8fed03a1c2@dfo-mpo.gc.ca>

Hi,

I have been "gifted" a netcdf raster that I must vectorize. When I load the raster into QGIS the coordinates are not correct. I believe that QGIS uses GDAL drivers. I have included a download link to the file, a ncdump -h,  and gdalinfo output, all at the bottom of this message. The raster is on the CORDEX arctic grid [https://cordex.org/domains/region-11-arctic/], a rotated pole projection with the pole at 0.0E, 6.55N and a Top Left Corner of 337.12E, 33.88N. My raster is double the resolution described in the specification. The raster covers the arctic and is a binary mask for Baffin Bay. The raster includes the lat and lon, but not the rotated projection lat and lon.

What do I need to do to get QGIS to properly load the coordinates for this raster? (The raster is too coarse for my needs. My plan is to use QGIS to manually draw a shapefile of the raster boundaries.) Why is the GDAL netcdf driver not properly creating an affine? Is it because the raster spans the pole?

Thanks so much,
Brendan

https://file.io/3ITCNwX0fg3s : CORDEX_subarea_O3.nc : 1MB

$ ncdump -h CORDEX_subarea_O3.nc
netcdf CORDEX_subarea_O3 {
dimensions:
        x = 232 ;
        y = 266 ;
variables:
        double lon(y, x) ;
                lon:standard_name = "longitude" ;
                lon:long_name = "longitude" ;
                lon:units = "degrees_east" ;
                lon:_CoordinateAxisType = "Lon" ;
        double lat(y, x) ;
                lat:standard_name = "latitude" ;
                lat:long_name = "latitude" ;
                lat:units = "degrees_north" ;
                lat:_CoordinateAxisType = "Lat" ;
        double mmask(y, x) ;
                mmask:coordinates = "lon lat" ;
                mmask:_FillValue = -9.e+33 ;
                mmask:missing_value = -9.e+33 ;

// global attributes:
                :CDI = "Climate Data Interface version 1.6.8 (http://mpimet.mpg.de/cdi)" ;
                :Conventions = "CF-1.4" ;
                :history = "Mon Apr 20 17:37:28 2020: cdo eqc,3 All_subareas_CORDEX_final.nc CORDEX_subarea_O3.nc\n",
                        "Sat Apr 11 22:10:21 2020: cdo add jonn.nc jlnn.nc jann.nc\n",
                        "Sat Apr 11 21:55:59 2020: cdo sub latest_5.nc jln.nc jon.nc\n",
                        "Sat Apr 11 17:29:06 2020: cdo add jos.nc Land_subareas_new.nc All_subareas_CORDEX_reedited.nc\n",
                        "Sat Apr 11 17:22:45 2020: cdo sub All_subareas_CORDEX_edited.nc j.nc jos.nc\n",
                        "Tue Apr 07 15:58:18 2020: cdo add jon.nc EPA_Arctic_bioregions_CORDEX_land_masked_edited.nc All_subareas_CORDEX_edited.nc\n",
                        "Tue Apr 07 15:19:29 2020: cdo sub All_subareas_CORDEX_best.nc jl.nc jo.nc_\n",
                        "Tue Apr 07 00:58:57 2020: cdo remapnn,ARC-22_sample_grid.nc All_subareas_.25deg.nc j.nc\n",
                        "Tue Apr 07 00:48:41 2020: cdo add NAA_subareas_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc All_subareas_.25deg.nc\n",
                        "Tue Apr 07 00:48:01 2020: cdo mulc,-1 EPA_Arctic_bioregions_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc\n",
                        "Mon Apr 06 17:20:07 2020: cdo add 4xAlaskan_Tundra_mask_l2_.25deg.nc jNSCff.nc jNSCA.nc\n",
                        "Mon Apr  6 17:18:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=int(mask_array) jNSCf.nc jNSCff.nc\n",
                        "Mon Apr  6 17:17:29 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s where(mask_array > 3.) mask_array = 3. jNSCfl.nc jNSCf.nc\n",
                        "Mon Apr  6 17:17:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=float(mask_array) jNSC.nc jNSCfl.nc\n",
                        "Mon Apr 06 16:38:46 2020: cdo add 3xArctic_Cordillera_mask_l2_.25deg.nc jNS.nc jNSC.nc\n",
                        "Mon Apr 06 16:36:11 2020: cdo add Southern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc jNS.nc\n",
                        "Mon Apr 06 16:35:10 2020: cdo mulc,2 Northern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc" ;
                :DOMAIN_number_total = 1 ;
                :DOMAIN_number = 0 ;
                :DOMAIN_dimensions_ids = 1, 2 ;
                :DOMAIN_size_global = 568, 400 ;
                :DOMAIN_size_local = 568, 400 ;
                :DOMAIN_position_first = 1, 1 ;
                :DOMAIN_position_last = 568, 400 ;
                :DOMAIN_halo_size_start = 0, 0 ;
                :DOMAIN_halo_size_end = 0, 0 ;
                :DOMAIN_type = "BOX" ;
                :history_of_appended_files = "Mon Oct  2 22:18:28 2017: Appended file mesh_zgr.nc had following \"history\" attribute:\n",
                        "Mon Oct  2 22:18:08 2017: ncks -A mesh_hgr.nc mesh_zgr.nc\n",
                        "" ;
                :NCO = "\"4.5.2\"" ;
                :CDO = "Climate Data Operators version 1.6.8rc2 (http://mpimet.mpg.de/cdo)" ;
}


$ gdalinfo CORDEX_subarea_O3.nc
Warning 1: Recode from UTF-8 to CP_ACP failed with the error: "Invalid argument".
Driver: netCDF/Network Common Data Format
Files: CORDEX_subarea_O3.nc
       CORDEX_subarea_O3.nc.aux.xml
Size is 232, 266
Metadata:
  mmask#coordinates=lon lat
  mmask#missing_value=-9e+33
  mmask#_FillValue=-9e+33
  NC_GLOBAL#CDI=Climate Data Interface version 1.6.8 (http://mpimet.mpg.de/cdi)
  NC_GLOBAL#CDO=Climate Data Operators version 1.6.8rc2 (http://mpimet.mpg.de/cdo)
  NC_GLOBAL#Conventions=CF-1.4
  NC_GLOBAL#DOMAIN_dimensions_ids={1,2}
  NC_GLOBAL#DOMAIN_halo_size_end={0,0}
  NC_GLOBAL#DOMAIN_halo_size_start={0,0}
  NC_GLOBAL#DOMAIN_number=0
  NC_GLOBAL#DOMAIN_number_total=1
  NC_GLOBAL#DOMAIN_position_first={1,1}
  NC_GLOBAL#DOMAIN_position_last={568,400}
  NC_GLOBAL#DOMAIN_size_global={568,400}
  NC_GLOBAL#DOMAIN_size_local={568,400}
  NC_GLOBAL#DOMAIN_type=BOX
  NC_GLOBAL#history=Mon Apr 20 17:37:28 2020: cdo eqc,3 All_subareas_CORDEX_final.nc CORDEX_subarea_O3.nc
Sat Apr 11 22:10:21 2020: cdo add jonn.nc jlnn.nc jann.nc
Sat Apr 11 21:55:59 2020: cdo sub latest_5.nc jln.nc jon.nc
Sat Apr 11 17:29:06 2020: cdo add jos.nc Land_subareas_new.nc All_subareas_CORDEX_reedited.nc
Sat Apr 11 17:22:45 2020: cdo sub All_subareas_CORDEX_edited.nc j.nc jos.nc
Tue Apr 07 15:58:18 2020: cdo add jon.nc EPA_Arctic_bioregions_CORDEX_land_masked_edited.nc All_subareas_CORDEX_edited.nc
Tue Apr 07 15:19:29 2020: cdo sub All_subareas_CORDEX_best.nc jl.nc jo.nc_
Tue Apr 07 00:58:57 2020: cdo remapnn,ARC-22_sample_grid.nc All_subareas_.25deg.nc j.nc
Tue Apr 07 00:48:41 2020: cdo add NAA_subareas_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc All_subareas_.25deg.nc
Tue Apr 07 00:48:01 2020: cdo mulc,-1 EPA_Arctic_bioregions_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc
Mon Apr 06 17:20:07 2020: cdo add 4xAlaskan_Tundra_mask_l2_.25deg.nc jNSCff.nc jNSCA.nc
Mon Apr  6 17:18:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=int(mask_array) jNSCf.nc jNSCff.nc
Mon Apr  6 17:17:29 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s where(mask_array > 3.) mask_array = 3. jNSCfl.nc jNSCf.nc
Mon Apr  6 17:17:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=float(mask_array) jNSC.nc jNSCfl.nc
Mon Apr 06 16:38:46 2020: cdo add 3xArctic_Cordillera_mask_l2_.25deg.nc jNS.nc jNSC.nc
Mon Apr 06 16:36:11 2020: cdo add Southern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc jNS.nc
Mon Apr 06 16:35:10 2020: cdo mulc,2 Northern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc
  NC_GLOBAL#history_of_appended_files=Mon Oct  2 22:18:28 2017: Appended file mesh_zgr.nc had following "history" attribute:
Mon Oct  2 22:18:08 2017: ncks -A mesh_hgr.nc mesh_zgr.nc

  NC_GLOBAL#NCO="4.5.2"
Subdatasets:
  SUBDATASET_1_NAME=NETCDF:"CORDEX_subarea_O3.nc":lon
  SUBDATASET_1_DESC=[266x232] longitude (64-bit floating-point)
  SUBDATASET_2_NAME=NETCDF:"CORDEX_subarea_O3.nc":lat
  SUBDATASET_2_DESC=[266x232] latitude (64-bit floating-point)
  SUBDATASET_3_NAME=NETCDF:"CORDEX_subarea_O3.nc":mmask
  SUBDATASET_3_DESC=[266x232] mmask (64-bit floating-point)
Geolocation:
  LINE_OFFSET=0
  LINE_STEP=1
  PIXEL_OFFSET=0
  PIXEL_STEP=1
  SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]
  X_BAND=1
  X_DATASET=NETCDF:"CORDEX_subarea_O3.nc":lon
  Y_BAND=1
  Y_DATASET=NETCDF:"CORDEX_subarea_O3.nc":lat
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,  266.0)
Upper Right (  232.0,    0.0)
Lower Right (  232.0,  266.0)
Center      (  116.0,  133.0)
Band 1 Block=232x1 Type=Float64, ColorInterp=Undefined
  Min=0.000 Max=1.000
  Minimum=0.000, Maximum=1.000, Mean=0.021, StdDev=0.144
  NoData Value=-9.00000000000000009e+33
  Metadata:
    coordinates=lon lat
    missing_value=-9e+33
    NETCDF_VARNAME=mmask
    STATISTICS_MAXIMUM=1
    STATISTICS_MEAN=0.021243842364532
    STATISTICS_MINIMUM=0
    STATISTICS_STDDEV=0.14419619109437
    _FillValue=-9e+33


------------------------------------------
Brendan DeTracey, VS 203/2-3
brendan.detracey at dfo-mpo.gc.ca

Ocean Monitoring and Observation Section | Section de surveillance et d'observation oc?anique /
Ocean Modelling and Analysis Section | Section d'analyse et de mod?lisation

Ocean and Ecosystem Sciences Division | Division des sciences de l'?cosyst?me et de la mer
Fisheries and Oceans Canada | P?ches et Oceans Canada
Bedford Institute of Oceanography | Institut Oc?anographique de Bedford
P.O. Box 1006, 1 Challenger Dr. | C.P.1006, 1 Challenger Dr. 
Dartmouth, N.S. Canada B2Y 4A2 | Dartmouth, N.-?., Canada B2Y 4A2
Telephone | T?l?phone 902-426-9727
------------------------------------------
If you have received this communication by mistake, please notify the sender immediately and delete the communication without printing, copying or forwarding it. Thank you. 
Si vous avez re?u cette communication par erreur, veuillez en aviser l'exp?diteur imm?diatement et la supprimer sans l'imprimer, la copier, ou la faire suivre. Merci.
------------------------------------------


From even.rouault at spatialys.com  Tue Jul 12 05:13:40 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Jul 2022 14:13:40 +0200
Subject: [gdal-dev] NetCDF projection help
In-Reply-To: <dd2607a12a4d4ccaa35b8c8fed03a1c2@dfo-mpo.gc.ca>
References: <dd2607a12a4d4ccaa35b8c8fed03a1c2@dfo-mpo.gc.ca>
Message-ID: <9b7462cb-0236-ceda-ff76-659ed7229aa1@spatialys.com>

Brendan,

You need to warp the raster using the geolocation array formed by the 
lon and lat variable:

gdalwarp -overwrite -geoloc CORDEX_subarea_O3.nc out.tif

(possibly using -t_srs EPSG:XXXX to indicate a more relevant SRS than 
EPSG:4326)

 > why is the GDAL netcdf driver not properly creating an affine?

It can only report an affine geotransform matrix when the lat and lon 
arrays are 1D, and have regular spacing. Here they are 2D and 
potentially express a "random" georeferencing, hence they are reported 
as a geolocation array.

Even

Le 12/07/2022 ? 13:38, DeTracey, Brendan a ?crit?:
> Hi,
>
> I have been "gifted" a netcdf raster that I must vectorize. When I load the raster into QGIS the coordinates are not correct. I believe that QGIS uses GDAL drivers. I have included a download link to the file, a ncdump -h,  and gdalinfo output, all at the bottom of this message. The raster is on the CORDEX arctic grid [https://cordex.org/domains/region-11-arctic/], a rotated pole projection with the pole at 0.0E, 6.55N and a Top Left Corner of 337.12E, 33.88N. My raster is double the resolution described in the specification. The raster covers the arctic and is a binary mask for Baffin Bay. The raster includes the lat and lon, but not the rotated projection lat and lon.
>
> What do I need to do to get QGIS to properly load the coordinates for this raster? (The raster is too coarse for my needs. My plan is to use QGIS to manually draw a shapefile of the raster boundaries.) Why is the GDAL netcdf driver not properly creating an affine? Is it because the raster spans the pole?
>
> Thanks so much,
> Brendan
>
> https://file.io/3ITCNwX0fg3s : CORDEX_subarea_O3.nc : 1MB
>
> $ ncdump -h CORDEX_subarea_O3.nc
> netcdf CORDEX_subarea_O3 {
> dimensions:
>          x = 232 ;
>          y = 266 ;
> variables:
>          double lon(y, x) ;
>                  lon:standard_name = "longitude" ;
>                  lon:long_name = "longitude" ;
>                  lon:units = "degrees_east" ;
>                  lon:_CoordinateAxisType = "Lon" ;
>          double lat(y, x) ;
>                  lat:standard_name = "latitude" ;
>                  lat:long_name = "latitude" ;
>                  lat:units = "degrees_north" ;
>                  lat:_CoordinateAxisType = "Lat" ;
>          double mmask(y, x) ;
>                  mmask:coordinates = "lon lat" ;
>                  mmask:_FillValue = -9.e+33 ;
>                  mmask:missing_value = -9.e+33 ;
>
> // global attributes:
>                  :CDI = "Climate Data Interface version 1.6.8 (http://mpimet.mpg.de/cdi)" ;
>                  :Conventions = "CF-1.4" ;
>                  :history = "Mon Apr 20 17:37:28 2020: cdo eqc,3 All_subareas_CORDEX_final.nc CORDEX_subarea_O3.nc\n",
>                          "Sat Apr 11 22:10:21 2020: cdo add jonn.nc jlnn.nc jann.nc\n",
>                          "Sat Apr 11 21:55:59 2020: cdo sub latest_5.nc jln.nc jon.nc\n",
>                          "Sat Apr 11 17:29:06 2020: cdo add jos.nc Land_subareas_new.nc All_subareas_CORDEX_reedited.nc\n",
>                          "Sat Apr 11 17:22:45 2020: cdo sub All_subareas_CORDEX_edited.nc j.nc jos.nc\n",
>                          "Tue Apr 07 15:58:18 2020: cdo add jon.nc EPA_Arctic_bioregions_CORDEX_land_masked_edited.nc All_subareas_CORDEX_edited.nc\n",
>                          "Tue Apr 07 15:19:29 2020: cdo sub All_subareas_CORDEX_best.nc jl.nc jo.nc_\n",
>                          "Tue Apr 07 00:58:57 2020: cdo remapnn,ARC-22_sample_grid.nc All_subareas_.25deg.nc j.nc\n",
>                          "Tue Apr 07 00:48:41 2020: cdo add NAA_subareas_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc All_subareas_.25deg.nc\n",
>                          "Tue Apr 07 00:48:01 2020: cdo mulc,-1 EPA_Arctic_bioregions_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc\n",
>                          "Mon Apr 06 17:20:07 2020: cdo add 4xAlaskan_Tundra_mask_l2_.25deg.nc jNSCff.nc jNSCA.nc\n",
>                          "Mon Apr  6 17:18:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=int(mask_array) jNSCf.nc jNSCff.nc\n",
>                          "Mon Apr  6 17:17:29 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s where(mask_array > 3.) mask_array = 3. jNSCfl.nc jNSCf.nc\n",
>                          "Mon Apr  6 17:17:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=float(mask_array) jNSC.nc jNSCfl.nc\n",
>                          "Mon Apr 06 16:38:46 2020: cdo add 3xArctic_Cordillera_mask_l2_.25deg.nc jNS.nc jNSC.nc\n",
>                          "Mon Apr 06 16:36:11 2020: cdo add Southern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc jNS.nc\n",
>                          "Mon Apr 06 16:35:10 2020: cdo mulc,2 Northern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc" ;
>                  :DOMAIN_number_total = 1 ;
>                  :DOMAIN_number = 0 ;
>                  :DOMAIN_dimensions_ids = 1, 2 ;
>                  :DOMAIN_size_global = 568, 400 ;
>                  :DOMAIN_size_local = 568, 400 ;
>                  :DOMAIN_position_first = 1, 1 ;
>                  :DOMAIN_position_last = 568, 400 ;
>                  :DOMAIN_halo_size_start = 0, 0 ;
>                  :DOMAIN_halo_size_end = 0, 0 ;
>                  :DOMAIN_type = "BOX" ;
>                  :history_of_appended_files = "Mon Oct  2 22:18:28 2017: Appended file mesh_zgr.nc had following \"history\" attribute:\n",
>                          "Mon Oct  2 22:18:08 2017: ncks -A mesh_hgr.nc mesh_zgr.nc\n",
>                          "" ;
>                  :NCO = "\"4.5.2\"" ;
>                  :CDO = "Climate Data Operators version 1.6.8rc2 (http://mpimet.mpg.de/cdo)" ;
> }
>
>
> $ gdalinfo CORDEX_subarea_O3.nc
> Warning 1: Recode from UTF-8 to CP_ACP failed with the error: "Invalid argument".
> Driver: netCDF/Network Common Data Format
> Files: CORDEX_subarea_O3.nc
>         CORDEX_subarea_O3.nc.aux.xml
> Size is 232, 266
> Metadata:
>    mmask#coordinates=lon lat
>    mmask#missing_value=-9e+33
>    mmask#_FillValue=-9e+33
>    NC_GLOBAL#CDI=Climate Data Interface version 1.6.8 (http://mpimet.mpg.de/cdi)
>    NC_GLOBAL#CDO=Climate Data Operators version 1.6.8rc2 (http://mpimet.mpg.de/cdo)
>    NC_GLOBAL#Conventions=CF-1.4
>    NC_GLOBAL#DOMAIN_dimensions_ids={1,2}
>    NC_GLOBAL#DOMAIN_halo_size_end={0,0}
>    NC_GLOBAL#DOMAIN_halo_size_start={0,0}
>    NC_GLOBAL#DOMAIN_number=0
>    NC_GLOBAL#DOMAIN_number_total=1
>    NC_GLOBAL#DOMAIN_position_first={1,1}
>    NC_GLOBAL#DOMAIN_position_last={568,400}
>    NC_GLOBAL#DOMAIN_size_global={568,400}
>    NC_GLOBAL#DOMAIN_size_local={568,400}
>    NC_GLOBAL#DOMAIN_type=BOX
>    NC_GLOBAL#history=Mon Apr 20 17:37:28 2020: cdo eqc,3 All_subareas_CORDEX_final.nc CORDEX_subarea_O3.nc
> Sat Apr 11 22:10:21 2020: cdo add jonn.nc jlnn.nc jann.nc
> Sat Apr 11 21:55:59 2020: cdo sub latest_5.nc jln.nc jon.nc
> Sat Apr 11 17:29:06 2020: cdo add jos.nc Land_subareas_new.nc All_subareas_CORDEX_reedited.nc
> Sat Apr 11 17:22:45 2020: cdo sub All_subareas_CORDEX_edited.nc j.nc jos.nc
> Tue Apr 07 15:58:18 2020: cdo add jon.nc EPA_Arctic_bioregions_CORDEX_land_masked_edited.nc All_subareas_CORDEX_edited.nc
> Tue Apr 07 15:19:29 2020: cdo sub All_subareas_CORDEX_best.nc jl.nc jo.nc_
> Tue Apr 07 00:58:57 2020: cdo remapnn,ARC-22_sample_grid.nc All_subareas_.25deg.nc j.nc
> Tue Apr 07 00:48:41 2020: cdo add NAA_subareas_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc All_subareas_.25deg.nc
> Tue Apr 07 00:48:01 2020: cdo mulc,-1 EPA_Arctic_bioregions_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc
> Mon Apr 06 17:20:07 2020: cdo add 4xAlaskan_Tundra_mask_l2_.25deg.nc jNSCff.nc jNSCA.nc
> Mon Apr  6 17:18:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=int(mask_array) jNSCf.nc jNSCff.nc
> Mon Apr  6 17:17:29 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s where(mask_array > 3.) mask_array = 3. jNSCfl.nc jNSCf.nc
> Mon Apr  6 17:17:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=float(mask_array) jNSC.nc jNSCfl.nc
> Mon Apr 06 16:38:46 2020: cdo add 3xArctic_Cordillera_mask_l2_.25deg.nc jNS.nc jNSC.nc
> Mon Apr 06 16:36:11 2020: cdo add Southern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc jNS.nc
> Mon Apr 06 16:35:10 2020: cdo mulc,2 Northern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc
>    NC_GLOBAL#history_of_appended_files=Mon Oct  2 22:18:28 2017: Appended file mesh_zgr.nc had following "history" attribute:
> Mon Oct  2 22:18:08 2017: ncks -A mesh_hgr.nc mesh_zgr.nc
>
>    NC_GLOBAL#NCO="4.5.2"
> Subdatasets:
>    SUBDATASET_1_NAME=NETCDF:"CORDEX_subarea_O3.nc":lon
>    SUBDATASET_1_DESC=[266x232] longitude (64-bit floating-point)
>    SUBDATASET_2_NAME=NETCDF:"CORDEX_subarea_O3.nc":lat
>    SUBDATASET_2_DESC=[266x232] latitude (64-bit floating-point)
>    SUBDATASET_3_NAME=NETCDF:"CORDEX_subarea_O3.nc":mmask
>    SUBDATASET_3_DESC=[266x232] mmask (64-bit floating-point)
> Geolocation:
>    LINE_OFFSET=0
>    LINE_STEP=1
>    PIXEL_OFFSET=0
>    PIXEL_STEP=1
>    SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]
>    X_BAND=1
>    X_DATASET=NETCDF:"CORDEX_subarea_O3.nc":lon
>    Y_BAND=1
>    Y_DATASET=NETCDF:"CORDEX_subarea_O3.nc":lat
> Corner Coordinates:
> Upper Left  (    0.0,    0.0)
> Lower Left  (    0.0,  266.0)
> Upper Right (  232.0,    0.0)
> Lower Right (  232.0,  266.0)
> Center      (  116.0,  133.0)
> Band 1 Block=232x1 Type=Float64, ColorInterp=Undefined
>    Min=0.000 Max=1.000
>    Minimum=0.000, Maximum=1.000, Mean=0.021, StdDev=0.144
>    NoData Value=-9.00000000000000009e+33
>    Metadata:
>      coordinates=lon lat
>      missing_value=-9e+33
>      NETCDF_VARNAME=mmask
>      STATISTICS_MAXIMUM=1
>      STATISTICS_MEAN=0.021243842364532
>      STATISTICS_MINIMUM=0
>      STATISTICS_STDDEV=0.14419619109437
>      _FillValue=-9e+33
>
>
> ------------------------------------------
> Brendan DeTracey, VS 203/2-3
> brendan.detracey at dfo-mpo.gc.ca
>
> Ocean Monitoring and Observation Section | Section de surveillance et d'observation oc?anique /
> Ocean Modelling and Analysis Section | Section d'analyse et de mod?lisation
>
> Ocean and Ecosystem Sciences Division | Division des sciences de l'?cosyst?me et de la mer
> Fisheries and Oceans Canada | P?ches et Oceans Canada
> Bedford Institute of Oceanography | Institut Oc?anographique de Bedford
> P.O. Box 1006, 1 Challenger Dr. | C.P.1006, 1 Challenger Dr.
> Dartmouth, N.S. Canada B2Y 4A2 | Dartmouth, N.-?., Canada B2Y 4A2
> Telephone | T?l?phone 902-426-9727
> ------------------------------------------
> If you have received this communication by mistake, please notify the sender immediately and delete the communication without printing, copying or forwarding it. Thank you.
> Si vous avez re?u cette communication par erreur, veuillez en aviser l'exp?diteur imm?diatement et la supprimer sans l'imprimer, la copier, ou la faire suivre. Merci.
> ------------------------------------------
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From daniel.fred.evans at gmail.com  Tue Jul 12 08:28:21 2022
From: daniel.fred.evans at gmail.com (Daniel Evans)
Date: Tue, 12 Jul 2022 16:28:21 +0100
Subject: [gdal-dev] cURL response content output
In-Reply-To: <546b099f-629c-ad9e-f113-dceab5d0f248@spatialys.com>
References: <CANnaQaY2+6OE_AWWvsxQ0t7TCQCZezsXd3Y09ymU4jw_vi+xdg@mail.gmail.com>
 <546b099f-629c-ad9e-f113-dceab5d0f248@spatialys.com>
Message-ID: <CANnaQaZfFtM6R3SKWRc_4h=WzSvEMez3ATFy3JbXD710nH6ELg@mail.gmail.com>

Hi again,

To loop back in the mailing list on the conversation Even and I had on the
PR, the answer to my original question (at least in the /vsis3/ use case)
was to enable CPL_DEBUG, which outputs the raw response in these sorts of
error cases, e.g.:

"CPLE_None in S3: <?xml version=\"1.0\"
encoding=\"UTF-8\"?>\n<Error><Code>NoSuchBucket</Code><Message>The
specified bucket does not
exist</Message><BucketName>a-very-very-fake-s3-bucket</BucketName><RequestId>...</RequestId><HostId>...</HostId></Error>"

I'd been thrown off by the fact that rasterio captures GDAL's CPL_DEBUG
logs and re-emits them in Python, but CPL_CURL_VERBOSE messages aren't
captured in the same way. Some quirks in the configuration of the logging
on my end meant the DEBUG log messages were being discarded when I thought
they weren't.

Regards,
Daniel

On Wed, 6 Jul 2022 at 18:55, Even Rouault <even.rouault at spatialys.com>
wrote:

> Daniel,
>
> https://github.com/OSGeo/gdal/pull/6028 should help, but with the
> restriction indicated in the commit message.
>
> Even
> Le 06/07/2022 ? 13:13, Daniel Evans a ?crit :
>
> Hi,
>
> I'm trying to diagnose some issues with accessing remote datasets in GDAL
> - I believe the problem is unrelated to GDAL itself, but it's proving hard
> to debug.
>
> By enabling CPL_CURL_VERBOSE, I can see that the server is kicking back a
> 400 Bad Request status, but the debug output doesn't include the actual
> response content, which would allow me to understand the problem in more
> detail. Is there a way to get GDAL/cURL to output the response content for
> failed requests?
>
>
> By way of example, if I attempt to access a nonexistent file on S3 with
> cURL directly, I get the 404 error code and the descriptive XML error
> message at the end:
>
> $ curl -v https://a-very-very-fake-s3-bucket.s3.amazonaws.com/example.tif
> [...]
> < HTTP/1.1 404 Not Found
> < Content-Type: application/xml
> < Transfer-Encoding: chunked
> < Date: Wed, 06 Jul 2022 11:09:09 GMT
> < Server: AmazonS3
> --- these lines ---
> <
> <?xml version="1.0" encoding="UTF-8"?>
> <Error><Code>NoSuchBucket</Code><Message>The specified bucket does not
> exist</Message><BucketName>a-very-very-fake-s3-bucket</BucketName>[...]</Error>
> --- these lines ---
>
>
> In contrast, the output from GDAL with CPL_CURL_VERBOSE excludes the XML
> response:
>
> < HTTP/1.1 404 Not Found
> < Content-Type: application/xml
> < Transfer-Encoding: chunked
> < Date: Wed, 06 Jul 2022 11:04:16 GMT
> < Server: AmazonS3
>
> --- no XML output here ---
>
> * Connection #1 to host a-very-very-fake-s3-bucket.s3.amazonaws.com left
> intact
> * Couldn't find host a-very-very-fake-s3-bucket.s3.amazonaws.com in the
> .netrc file; using defaults
> * Found bundle for host a-very-very-fake-s3-bucket.s3.amazonaws.com:
> 0x25b5080 [can pipeline]
> * Re-using existing connection! (#1) with host
> a-very-very-fake-s3-bucket.s3.amazonaws.com
> * Connected to a-very-very-fake-s3-bucket.s3.amazonaws.com
> (52.216.207.115) port 443 (#1)
> > GET /?delimiter=%2F&max-keys=100&prefix=example.tif%2F HTTP/1.1
> [...]
>
> Regards,
> Daniel
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220712/23c43f85/attachment-0001.htm>

From nelson.gerald.c at gmail.com  Tue Jul 12 08:50:57 2022
From: nelson.gerald.c at gmail.com (Gerald Nelson)
Date: Tue, 12 Jul 2022 15:50:57 +0000
Subject: [gdal-dev] NetCDF projection help
In-Reply-To: <dd2607a12a4d4ccaa35b8c8fed03a1c2@dfo-mpo.gc.ca>
References: <dd2607a12a4d4ccaa35b8c8fed03a1c2@dfo-mpo.gc.ca>
Message-ID: <CO1PR18MB46685481D80AAA46C7110D25AD869@CO1PR18MB4668.namprd18.prod.outlook.com>

Have you tried using the R package terra? It imports netCDF pretty much painlessly. It has the latest version of GDAL in the background doing the heavy lifting.

Gerald C. Nelson
Professor Emeritus, UIUC
+1 217-390-7888 (cell)
+1 970-639-2079 (land line)
Skype: jerrynelson
http://bit.ly/1arho7d

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of "DeTracey, Brendan" <Brendan.DeTracey at dfo-mpo.gc.ca>
Date: Tuesday, July 12, 2022 at 5:53 AM
To: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] NetCDF projection help

Hi,

I have been "gifted" a netcdf raster that I must vectorize. When I load the raster into QGIS the coordinates are not correct. I believe that QGIS uses GDAL drivers. I have included a download link to the file, a ncdump -h,  and gdalinfo output, all at the bottom of this message. The raster is on the CORDEX arctic grid [https://cordex.org/domains/region-11-arctic/], a rotated pole projection with the pole at 0.0E, 6.55N and a Top Left Corner of 337.12E, 33.88N. My raster is double the resolution described in the specification. The raster covers the arctic and is a binary mask for Baffin Bay. The raster includes the lat and lon, but not the rotated projection lat and lon.

What do I need to do to get QGIS to properly load the coordinates for this raster? (The raster is too coarse for my needs. My plan is to use QGIS to manually draw a shapefile of the raster boundaries.) Why is the GDAL netcdf driver not properly creating an affine? Is it because the raster spans the pole?

Thanks so much,
Brendan

https://file.io/3ITCNwX0fg3s : CORDEX_subarea_O3.nc : 1MB

$ ncdump -h CORDEX_subarea_O3.nc
netcdf CORDEX_subarea_O3 {
dimensions:
        x = 232 ;
        y = 266 ;
variables:
        double lon(y, x) ;
                lon:standard_name = "longitude" ;
                lon:long_name = "longitude" ;
                lon:units = "degrees_east" ;
                lon:_CoordinateAxisType = "Lon" ;
        double lat(y, x) ;
                lat:standard_name = "latitude" ;
                lat:long_name = "latitude" ;
                lat:units = "degrees_north" ;
                lat:_CoordinateAxisType = "Lat" ;
        double mmask(y, x) ;
                mmask:coordinates = "lon lat" ;
                mmask:_FillValue = -9.e+33 ;
                mmask:missing_value = -9.e+33 ;

// global attributes:
                :CDI = "Climate Data Interface version 1.6.8 (http://mpimet.mpg.de/cdi)" ;
                :Conventions = "CF-1.4" ;
                :history = "Mon Apr 20 17:37:28 2020: cdo eqc,3 All_subareas_CORDEX_final.nc CORDEX_subarea_O3.nc\n",
                        "Sat Apr 11 22:10:21 2020: cdo add jonn.nc jlnn.nc jann.nc\n",
                        "Sat Apr 11 21:55:59 2020: cdo sub latest_5.nc jln.nc jon.nc\n",
                        "Sat Apr 11 17:29:06 2020: cdo add jos.nc Land_subareas_new.nc All_subareas_CORDEX_reedited.nc\n",
                        "Sat Apr 11 17:22:45 2020: cdo sub All_subareas_CORDEX_edited.nc j.nc jos.nc\n",
                        "Tue Apr 07 15:58:18 2020: cdo add jon.nc EPA_Arctic_bioregions_CORDEX_land_masked_edited.nc All_subareas_CORDEX_edited.nc\n",
                        "Tue Apr 07 15:19:29 2020: cdo sub All_subareas_CORDEX_best.nc jl.nc jo.nc_\n",
                        "Tue Apr 07 00:58:57 2020: cdo remapnn,ARC-22_sample_grid.nc All_subareas_.25deg.nc j.nc\n",
                        "Tue Apr 07 00:48:41 2020: cdo add NAA_subareas_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc All_subareas_.25deg.nc\n",
                        "Tue Apr 07 00:48:01 2020: cdo mulc,-1 EPA_Arctic_bioregions_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc\n",
                        "Mon Apr 06 17:20:07 2020: cdo add 4xAlaskan_Tundra_mask_l2_.25deg.nc jNSCff.nc jNSCA.nc\n",
                        "Mon Apr  6 17:18:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=int(mask_array) jNSCf.nc jNSCff.nc\n",
                        "Mon Apr  6 17:17:29 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s where(mask_array > 3.) mask_array = 3. jNSCfl.nc jNSCf.nc\n",
                        "Mon Apr  6 17:17:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=float(mask_array) jNSC.nc jNSCfl.nc\n",
                        "Mon Apr 06 16:38:46 2020: cdo add 3xArctic_Cordillera_mask_l2_.25deg.nc jNS.nc jNSC.nc\n",
                        "Mon Apr 06 16:36:11 2020: cdo add Southern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc jNS.nc\n",
                        "Mon Apr 06 16:35:10 2020: cdo mulc,2 Northern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc" ;
                :DOMAIN_number_total = 1 ;
                :DOMAIN_number = 0 ;
                :DOMAIN_dimensions_ids = 1, 2 ;
                :DOMAIN_size_global = 568, 400 ;
                :DOMAIN_size_local = 568, 400 ;
                :DOMAIN_position_first = 1, 1 ;
                :DOMAIN_position_last = 568, 400 ;
                :DOMAIN_halo_size_start = 0, 0 ;
                :DOMAIN_halo_size_end = 0, 0 ;
                :DOMAIN_type = "BOX" ;
                :history_of_appended_files = "Mon Oct  2 22:18:28 2017: Appended file mesh_zgr.nc had following \"history\" attribute:\n",
                        "Mon Oct  2 22:18:08 2017: ncks -A mesh_hgr.nc mesh_zgr.nc\n",
                        "" ;
                :NCO = "\"4.5.2\"" ;
                :CDO = "Climate Data Operators version 1.6.8rc2 (http://mpimet.mpg.de/cdo)" ;
}


$ gdalinfo CORDEX_subarea_O3.nc
Warning 1: Recode from UTF-8 to CP_ACP failed with the error: "Invalid argument".
Driver: netCDF/Network Common Data Format
Files: CORDEX_subarea_O3.nc
       CORDEX_subarea_O3.nc.aux.xml
Size is 232, 266
Metadata:
  mmask#coordinates=lon lat
  mmask#missing_value=-9e+33
  mmask#_FillValue=-9e+33
  NC_GLOBAL#CDI=Climate Data Interface version 1.6.8 (http://mpimet.mpg.de/cdi)
  NC_GLOBAL#CDO=Climate Data Operators version 1.6.8rc2 (http://mpimet.mpg.de/cdo)
  NC_GLOBAL#Conventions=CF-1.4
  NC_GLOBAL#DOMAIN_dimensions_ids={1,2}
  NC_GLOBAL#DOMAIN_halo_size_end={0,0}
  NC_GLOBAL#DOMAIN_halo_size_start={0,0}
  NC_GLOBAL#DOMAIN_number=0
  NC_GLOBAL#DOMAIN_number_total=1
  NC_GLOBAL#DOMAIN_position_first={1,1}
  NC_GLOBAL#DOMAIN_position_last={568,400}
  NC_GLOBAL#DOMAIN_size_global={568,400}
  NC_GLOBAL#DOMAIN_size_local={568,400}
  NC_GLOBAL#DOMAIN_type=BOX
  NC_GLOBAL#history=Mon Apr 20 17:37:28 2020: cdo eqc,3 All_subareas_CORDEX_final.nc CORDEX_subarea_O3.nc
Sat Apr 11 22:10:21 2020: cdo add jonn.nc jlnn.nc jann.nc
Sat Apr 11 21:55:59 2020: cdo sub latest_5.nc jln.nc jon.nc
Sat Apr 11 17:29:06 2020: cdo add jos.nc Land_subareas_new.nc All_subareas_CORDEX_reedited.nc
Sat Apr 11 17:22:45 2020: cdo sub All_subareas_CORDEX_edited.nc j.nc jos.nc
Tue Apr 07 15:58:18 2020: cdo add jon.nc EPA_Arctic_bioregions_CORDEX_land_masked_edited.nc All_subareas_CORDEX_edited.nc
Tue Apr 07 15:19:29 2020: cdo sub All_subareas_CORDEX_best.nc jl.nc jo.nc_
Tue Apr 07 00:58:57 2020: cdo remapnn,ARC-22_sample_grid.nc All_subareas_.25deg.nc j.nc
Tue Apr 07 00:48:41 2020: cdo add NAA_subareas_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc All_subareas_.25deg.nc
Tue Apr 07 00:48:01 2020: cdo mulc,-1 EPA_Arctic_bioregions_.25deg.nc EPA_Arctic_bioregions_.25degx-1.nc
Mon Apr 06 17:20:07 2020: cdo add 4xAlaskan_Tundra_mask_l2_.25deg.nc jNSCff.nc jNSCA.nc
Mon Apr  6 17:18:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=int(mask_array) jNSCf.nc jNSCff.nc
Mon Apr  6 17:17:29 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s where(mask_array > 3.) mask_array = 3. jNSCfl.nc jNSCf.nc
Mon Apr  6 17:17:06 2020: /HOME/opt/package/nco/linux64/bin/ncap2 -s mask_array=float(mask_array) jNSC.nc jNSCfl.nc
Mon Apr 06 16:38:46 2020: cdo add 3xArctic_Cordillera_mask_l2_.25deg.nc jNS.nc jNSC.nc
Mon Apr 06 16:36:11 2020: cdo add Southern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc jNS.nc
Mon Apr 06 16:35:10 2020: cdo mulc,2 Northern_Arctic_mask_l2_.25deg.nc 2xNorthern_Arctic_mask_l2_.25deg.nc
  NC_GLOBAL#history_of_appended_files=Mon Oct  2 22:18:28 2017: Appended file mesh_zgr.nc had following "history" attribute:
Mon Oct  2 22:18:08 2017: ncks -A mesh_hgr.nc mesh_zgr.nc

  NC_GLOBAL#NCO="4.5.2"
Subdatasets:
  SUBDATASET_1_NAME=NETCDF:"CORDEX_subarea_O3.nc":lon
  SUBDATASET_1_DESC=[266x232] longitude (64-bit floating-point)
  SUBDATASET_2_NAME=NETCDF:"CORDEX_subarea_O3.nc":lat
  SUBDATASET_2_DESC=[266x232] latitude (64-bit floating-point)
  SUBDATASET_3_NAME=NETCDF:"CORDEX_subarea_O3.nc":mmask
  SUBDATASET_3_DESC=[266x232] mmask (64-bit floating-point)
Geolocation:
  LINE_OFFSET=0
  LINE_STEP=1
  PIXEL_OFFSET=0
  PIXEL_STEP=1
  SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AXIS["Latitude",NORTH],AXIS["Longitude",EAST],AUTHORITY["EPSG","4326"]]
  X_BAND=1
  X_DATASET=NETCDF:"CORDEX_subarea_O3.nc":lon
  Y_BAND=1
  Y_DATASET=NETCDF:"CORDEX_subarea_O3.nc":lat
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,  266.0)
Upper Right (  232.0,    0.0)
Lower Right (  232.0,  266.0)
Center      (  116.0,  133.0)
Band 1 Block=232x1 Type=Float64, ColorInterp=Undefined
  Min=0.000 Max=1.000
  Minimum=0.000, Maximum=1.000, Mean=0.021, StdDev=0.144
  NoData Value=-9.00000000000000009e+33
  Metadata:
    coordinates=lon lat
    missing_value=-9e+33
    NETCDF_VARNAME=mmask
    STATISTICS_MAXIMUM=1
    STATISTICS_MEAN=0.021243842364532
    STATISTICS_MINIMUM=0
    STATISTICS_STDDEV=0.14419619109437
    _FillValue=-9e+33


------------------------------------------
Brendan DeTracey, VS 203/2-3
brendan.detracey at dfo-mpo.gc.ca<mailto:brendan.detracey at dfo-mpo.gc.ca>

Ocean Monitoring and Observation Section | Section de surveillance et d'observation oc?anique /
Ocean Modelling and Analysis Section | Section d'analyse et de mod?lisation

Ocean and Ecosystem Sciences Division | Division des sciences de l'?cosyst?me et de la mer
Fisheries and Oceans Canada | P?ches et Oceans Canada
Bedford Institute of Oceanography | Institut Oc?anographique de Bedford
P.O. Box 1006, 1 Challenger Dr. | C.P.1006, 1 Challenger Dr.
Dartmouth, N.S. Canada B2Y 4A2 | Dartmouth, N.-?., Canada B2Y 4A2
Telephone | T?l?phone 902-426-9727
------------------------------------------
If you have received this communication by mistake, please notify the sender immediately and delete the communication without printing, copying or forwarding it. Thank you.
Si vous avez re?u cette communication par erreur, veuillez en aviser l'exp?diteur imm?diatement et la supprimer sans l'imprimer, la copier, ou la faire suivre. Merci.
------------------------------------------

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220712/71633190/attachment-0001.htm>

From bespin at gmail.com  Wed Jul 13 17:20:27 2022
From: bespin at gmail.com (Travis Featherston)
Date: Wed, 13 Jul 2022 17:20:27 -0700
Subject: [gdal-dev] ESRI FileGDB not available in Docker ubuntu-full after
 enabling WITH_FILEGDB
Message-ID: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>

I'm unable to see the ESRI FileGDB driver after enabling it in the
Dockerfile

Steps
1) git clone https://github.com/OSGeo/gdal.git
2) Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
3) ubuntu-full/build.sh --release --gdal v3.5.1 --proj master
4) docker run --rm osgeo/gdal:ubuntu-full-v3.5.1 ogr2ogr --formats |grep -i
gdb

Result
It seems to build successfully without any warning/errors but only the Open
driver is available.
OpenFileGDB -vector- (rov): ESRI FileGDB

Digging into the dockerfile and images ...

osgeo/gdal:ubuntu-full-v3.5.1_builder
  /usr/local/FileGDB_API/lib/
    libFileGDBAPI.so  libfgdbunixrtl.a  libfgdbunixrtl.so

  /build_thirdparty/usr/lib/
    libFileGDBAPI.so  libfgdbunixrtl.a  libfgdbunixrtl.so

  /usr/local/FileGDB_API/include/
    FileGDBAPI.h  FileGDBCore.h  Geodatabase.h  GeodatabaseManagement.h
 Raster.h  Row.h  Table.h  Util.h  make.include

  /usr/include/
    FileGDBAPI.h  FileGDBCore.h  Geodatabase.h  GeodatabaseManagement.h
 Raster.h  Row.h  Table.h  Util.h  make.include

osgeo/gdal:ubuntu-full-v3.5.1
  /usr/lib
    libFileGDBAPI.so  libfgdbunixrtl.a  libfgdbunixrtl.so

  /usr/include/
    <none of the header files are here, were they only needed during the
gdal compile?>

Is there a disconnect between these two lines in the docker file?
Line #175 && cp /usr/local/FileGDB_API/include/* /usr/include \
Line #319 COPY --from=builder /build/usr/include/ /usr/include/


Any thoughts?

My local env is wsl2 Ubuntu 22.04, with buildkit enabled

Thanks,
Travis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220713/4291c02d/attachment.htm>

From nyall.dawson at gmail.com  Wed Jul 13 20:37:01 2022
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 14 Jul 2022 13:37:01 +1000
Subject: [gdal-dev] ESRI FileGDB not available in Docker ubuntu-full
 after enabling WITH_FILEGDB
In-Reply-To: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>
References: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>
Message-ID: <CAB28Asg+rhkOnfjkd9Gy6rxs4uUVEuhgWEo2Z6gAxrs9SG9f=A@mail.gmail.com>

On Thu, 14 Jul 2022 at 10:21, Travis Featherston <bespin at gmail.com> wrote:
>
> I'm unable to see the ESRI FileGDB driver after enabling it in the Dockerfile
>
> Steps
> 1) git clone https://github.com/OSGeo/gdal.git
> 2) Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
> 3) ubuntu-full/build.sh --release --gdal v3.5.1 --proj master
> 4) docker run --rm osgeo/gdal:ubuntu-full-v3.5.1 ogr2ogr --formats |grep -i gdb
>
> Result
> It seems to build successfully without any warning/errors but only the Open driver is available.
> OpenFileGDB -vector- (rov): ESRI FileGDB

Slightly off topic response: Is there a particularly compelling reason
you want the FileGDB driver over the OpenFileGDB driver? On GDAL
master builds the open driver is better in almost every way :D

Nyall

From bespin at gmail.com  Wed Jul 13 21:41:18 2022
From: bespin at gmail.com (Travis Featherston)
Date: Wed, 13 Jul 2022 21:41:18 -0700
Subject: [gdal-dev] ESRI FileGDB not available in Docker ubuntu-full
 after enabling WITH_FILEGDB
In-Reply-To: <CAB28Asg+rhkOnfjkd9Gy6rxs4uUVEuhgWEo2Z6gAxrs9SG9f=A@mail.gmail.com>
References: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>
 <CAB28Asg+rhkOnfjkd9Gy6rxs4uUVEuhgWEo2Z6gAxrs9SG9f=A@mail.gmail.com>
Message-ID: <CAHK7dsvBPQ0qwGFrC12ix1kHPdQCn4CSCi-77p=i7o-rCrmZKA@mail.gmail.com>

I fully intend to switch over, just have some legacy deliveries in place
that aren't ready to switch without some testing.

On Wed, Jul 13, 2022, 8:37 PM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> On Thu, 14 Jul 2022 at 10:21, Travis Featherston <bespin at gmail.com> wrote:
> >
> > I'm unable to see the ESRI FileGDB driver after enabling it in the
> Dockerfile
> >
> > Steps
> > 1) git clone https://github.com/OSGeo/gdal.git
> > 2) Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
> > 3) ubuntu-full/build.sh --release --gdal v3.5.1 --proj master
> > 4) docker run --rm osgeo/gdal:ubuntu-full-v3.5.1 ogr2ogr --formats |grep
> -i gdb
> >
> > Result
> > It seems to build successfully without any warning/errors but only the
> Open driver is available.
> > OpenFileGDB -vector- (rov): ESRI FileGDB
>
> Slightly off topic response: Is there a particularly compelling reason
> you want the FileGDB driver over the OpenFileGDB driver? On GDAL
> master builds the open driver is better in almost every way :D
>
> Nyall
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220713/0f9af6eb/attachment.htm>

From even.rouault at spatialys.com  Thu Jul 14 02:00:31 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Jul 2022 11:00:31 +0200
Subject: [gdal-dev] ESRI FileGDB not available in Docker ubuntu-full
 after enabling WITH_FILEGDB
In-Reply-To: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>
References: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>
Message-ID: <779b270b-908b-205b-d7b2-c802f4e74ee1@spatialys.com>

Travis,

Can you try the patch at https://github.com/OSGeo/gdal/pull/6079 ? (the 
FileGDB part wasn't correctly ported when the Docker images have been 
ported to CMake builds)

Even

Le 14/07/2022 ? 02:20, Travis Featherston a ?crit?:
> I'm unable to see the ESRI FileGDB driver after enabling it in the 
> Dockerfile
>
> Steps
> 1) git clone https://github.com/OSGeo/gdal.git
> 2) Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
> 3) ubuntu-full/build.sh --release --gdal v3.5.1 --proj master
> 4) docker run --rm osgeo/gdal:ubuntu-full-v3.5.1 ogr2ogr --formats 
> |grep -i gdb
>
> Result
> It seems to build successfully without any warning/errors but only the 
> Open driver is available.
> OpenFileGDB -vector- (rov): ESRI FileGDB
>
> Digging into the dockerfile and images ...
>
> osgeo/gdal:ubuntu-full-v3.5.1_builder
> ? /usr/local/FileGDB_API/lib/
> ??? libFileGDBAPI.so ?libfgdbunixrtl.a ?libfgdbunixrtl.so
>
> ? /build_thirdparty/usr/lib/
> ??? libFileGDBAPI.so ?libfgdbunixrtl.a ?libfgdbunixrtl.so
>
> ? /usr/local/FileGDB_API/include/
> ??? FileGDBAPI.h ?FileGDBCore.h ?Geodatabase.h 
> ?GeodatabaseManagement.h ?Raster.h ?Row.h ?Table.h ?Util.h ?make.include
>
> ? /usr/include/
> ??? FileGDBAPI.h ?FileGDBCore.h ?Geodatabase.h 
> ?GeodatabaseManagement.h ?Raster.h ?Row.h ?Table.h ?Util.h ?make.include
>
> osgeo/gdal:ubuntu-full-v3.5.1
> ? /usr/lib
> ??? libFileGDBAPI.so ?libfgdbunixrtl.a ?libfgdbunixrtl.so
>
> ? /usr/include/
> ??? <none of the header files are here, were they only needed during 
> the gdal compile?>
>
> Is there a disconnect between these two lines in the docker file?
> Line #175 && cp /usr/local/FileGDB_API/include/* /usr/include \
> Line #319 COPY --from=builder /build/usr/include/ /usr/include/
>
>
> Any thoughts?
>
> My local env is wsl2 Ubuntu 22.04, with buildkit enabled
>
> Thanks,
> Travis
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220714/ecf0d1c4/attachment.htm>

From bespin at gmail.com  Thu Jul 14 09:00:31 2022
From: bespin at gmail.com (Travis Featherston)
Date: Thu, 14 Jul 2022 09:00:31 -0700
Subject: [gdal-dev] ESRI FileGDB not available in Docker ubuntu-full
 after enabling WITH_FILEGDB
In-Reply-To: <779b270b-908b-205b-d7b2-c802f4e74ee1@spatialys.com>
References: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>
 <779b270b-908b-205b-d7b2-c802f4e74ee1@spatialys.com>
Message-ID: <CAHK7dstc91HCcd4HTCYkxaT8s52=9xxmeUpY=9iPf_BHYu1vZw@mail.gmail.com>

Even,

Now I'm getting build errors

git fetch origin pull/6079/head:test
git checkout test
Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
*ubuntu-full/build.sh --release --gdal v3.5.1 --proj master*
...
#26 179.4 copying build/lib.linux-x86_64-3.10/osgeo/_
gdal.cpython-310-x86_64-linux-gnu.so -> osgeo
#26 179.4 copying build/lib.linux-x86_64-3.10/osgeo/_
gdalconst.cpython-310-x86_64-linux-gnu.so -> osgeo
#26 179.4 copying build/lib.linux-x86_64-3.10/osgeo/_
osr.cpython-310-x86_64-linux-gnu.so -> osgeo
#26 179.4 copying build/lib.linux-x86_64-3.10/osgeo/_
ogr.cpython-310-x86_64-linux-gnu.so -> osgeo
#26 179.4 copying build/lib.linux-x86_64-3.10/osgeo/_
gnm.cpython-310-x86_64-linux-gnu.so -> osgeo
#26 179.4 copying build/lib.linux-x86_64-3.10/osgeo/_
gdal_array.cpython-310-x86_64-linux-gnu.so -> osgeo
#26 179.4 [ 93%] Built target python_binding
#26 179.4 make: *** [Makefile:146: all] Error 2
------
*executor failed running [/bin/sh -c . /buildscripts/bh-set-envvars.**sh
  && /buildscripts/bh-gdal.sh]: exit code: 2*

If I try a non release master build I get something totally different
ubuntu-full/build.sh --gdal master --proj master
or
ubuntu-full/build.sh
Error response from daemon: network mode "docker_build_gdal" not supported
by buildkit







On Thu, Jul 14, 2022 at 2:00 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Travis,
>
> Can you try the patch at https://github.com/OSGeo/gdal/pull/6079 ? (the
> FileGDB part wasn't correctly ported when the Docker images have been
> ported to CMake builds)
>
> Even
> Le 14/07/2022 ? 02:20, Travis Featherston a ?crit :
>
> I'm unable to see the ESRI FileGDB driver after enabling it in the
> Dockerfile
>
> Steps
> 1) git clone https://github.com/OSGeo/gdal.git
> 2) Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
> 3) ubuntu-full/build.sh --release --gdal v3.5.1 --proj master
> 4) docker run --rm osgeo/gdal:ubuntu-full-v3.5.1 ogr2ogr --formats |grep
> -i gdb
>
> Result
> It seems to build successfully without any warning/errors but only the
> Open driver is available.
> OpenFileGDB -vector- (rov): ESRI FileGDB
>
> Digging into the dockerfile and images ...
>
> osgeo/gdal:ubuntu-full-v3.5.1_builder
>   /usr/local/FileGDB_API/lib/
>     libFileGDBAPI.so  libfgdbunixrtl.a  libfgdbunixrtl.so
>
>   /build_thirdparty/usr/lib/
>     libFileGDBAPI.so  libfgdbunixrtl.a  libfgdbunixrtl.so
>
>   /usr/local/FileGDB_API/include/
>     FileGDBAPI.h  FileGDBCore.h  Geodatabase.h  GeodatabaseManagement.h
>  Raster.h  Row.h  Table.h  Util.h  make.include
>
>   /usr/include/
>     FileGDBAPI.h  FileGDBCore.h  Geodatabase.h  GeodatabaseManagement.h
>  Raster.h  Row.h  Table.h  Util.h  make.include
>
> osgeo/gdal:ubuntu-full-v3.5.1
>   /usr/lib
>     libFileGDBAPI.so  libfgdbunixrtl.a  libfgdbunixrtl.so
>
>   /usr/include/
>     <none of the header files are here, were they only needed during the
> gdal compile?>
>
> Is there a disconnect between these two lines in the docker file?
> Line #175 && cp /usr/local/FileGDB_API/include/* /usr/include \
> Line #319 COPY --from=builder /build/usr/include/ /usr/include/
>
>
> Any thoughts?
>
> My local env is wsl2 Ubuntu 22.04, with buildkit enabled
>
> Thanks,
> Travis
>
>
>
>
>
>
>
>
>
>
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220714/f9fee533/attachment-0001.htm>

From even.rouault at spatialys.com  Sat Jul 16 16:12:14 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 17 Jul 2022 01:12:14 +0200
Subject: [gdal-dev] ESRI FileGDB not available in Docker ubuntu-full
 after enabling WITH_FILEGDB
In-Reply-To: <CAHK7dstc91HCcd4HTCYkxaT8s52=9xxmeUpY=9iPf_BHYu1vZw@mail.gmail.com>
References: <CAHK7dstSXf0A_KpnpgNa+W5UM57qL3PaZHRHgCVcd=UMVP5UiQ@mail.gmail.com>
 <779b270b-908b-205b-d7b2-c802f4e74ee1@spatialys.com>
 <CAHK7dstc91HCcd4HTCYkxaT8s52=9xxmeUpY=9iPf_BHYu1vZw@mail.gmail.com>
Message-ID: <c2a4b134-b8e1-f5cc-e214-36e2e8d1c634@spatialys.com>

OK, I've updated the PR with a working tested fix now.

Le 14/07/2022 ? 18:00, Travis Featherston a ?crit?:
> Even,
>
> Now I'm getting build errors
>
> git fetch origin pull/6079/head:test
> git checkout test
> Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
> *ubuntu-full/build.sh --release --gdal v3.5.1 --proj master*
> ...
> #26 179.4 copying 
> build/lib.linux-x86_64-3.10/osgeo/_gdal.cpython-310-x86_64-linux-gnu.so 
> <http://gdal.cpython-310-x86_64-linux-gnu.so> -> osgeo
> #26 179.4 copying 
> build/lib.linux-x86_64-3.10/osgeo/_gdalconst.cpython-310-x86_64-linux-gnu.so 
> <http://gdalconst.cpython-310-x86_64-linux-gnu.so> -> osgeo
> #26 179.4 copying 
> build/lib.linux-x86_64-3.10/osgeo/_osr.cpython-310-x86_64-linux-gnu.so 
> <http://osr.cpython-310-x86_64-linux-gnu.so> -> osgeo
> #26 179.4 copying 
> build/lib.linux-x86_64-3.10/osgeo/_ogr.cpython-310-x86_64-linux-gnu.so 
> <http://ogr.cpython-310-x86_64-linux-gnu.so> -> osgeo
> #26 179.4 copying 
> build/lib.linux-x86_64-3.10/osgeo/_gnm.cpython-310-x86_64-linux-gnu.so 
> <http://gnm.cpython-310-x86_64-linux-gnu.so> -> osgeo
> #26 179.4 copying 
> build/lib.linux-x86_64-3.10/osgeo/_gdal_array.cpython-310-x86_64-linux-gnu.so 
> <http://gdal_array.cpython-310-x86_64-linux-gnu.so> -> osgeo
> #26 179.4 [ 93%] Built target python_binding
> #26 179.4 make: *** [Makefile:146: all] Error 2
> ------
> *executor failed running [/bin/sh -c . 
> /buildscripts/bh-set-envvars.**sh ? ? && /buildscripts/bh-gdal.sh]: 
> exit code: 2*
>
> If I try a non release master build I get something totally different
> ubuntu-full/build.sh --gdal master --proj master
> or
> ubuntu-full/build.sh
> Error response from daemon: network mode "docker_build_gdal" not 
> supported by buildkit
>
>
>
>
>
>
>
> On Thu, Jul 14, 2022 at 2:00 AM Even Rouault 
> <even.rouault at spatialys.com> wrote:
>
>     Travis,
>
>     Can you try the patch at https://github.com/OSGeo/gdal/pull/6079 ?
>     (the FileGDB part wasn't correctly ported when the Docker images
>     have been ported to CMake builds)
>
>     Even
>
>     Le 14/07/2022 ? 02:20, Travis Featherston a ?crit?:
>>     I'm unable to see the ESRI FileGDB driver after enabling it in
>>     the Dockerfile
>>
>>     Steps
>>     1) git clone https://github.com/OSGeo/gdal.git
>>     2) Edit docker/ubuntu-full/Dockerfile; set ARG WITH_FILEGDB=yes
>>     3) ubuntu-full/build.sh --release --gdal v3.5.1 --proj master
>>     4) docker run --rm osgeo/gdal:ubuntu-full-v3.5.1 ogr2ogr
>>     --formats |grep -i gdb
>>
>>     Result
>>     It seems to build successfully without any warning/errors but
>>     only the Open driver is available.
>>     OpenFileGDB -vector- (rov): ESRI FileGDB
>>
>>     Digging into the dockerfile and images ...
>>
>>     osgeo/gdal:ubuntu-full-v3.5.1_builder
>>     ? /usr/local/FileGDB_API/lib/
>>     ??? libFileGDBAPI.so ?libfgdbunixrtl.a ?libfgdbunixrtl.so
>>
>>     ? /build_thirdparty/usr/lib/
>>     ??? libFileGDBAPI.so ?libfgdbunixrtl.a ?libfgdbunixrtl.so
>>
>>     ? /usr/local/FileGDB_API/include/
>>     ??? FileGDBAPI.h ?FileGDBCore.h ?Geodatabase.h
>>     ?GeodatabaseManagement.h ?Raster.h ?Row.h ?Table.h ?Util.h
>>     ?make.include
>>
>>     ? /usr/include/
>>     ??? FileGDBAPI.h ?FileGDBCore.h ?Geodatabase.h
>>     ?GeodatabaseManagement.h ?Raster.h ?Row.h ?Table.h ?Util.h
>>     ?make.include
>>
>>     osgeo/gdal:ubuntu-full-v3.5.1
>>     ? /usr/lib
>>     ??? libFileGDBAPI.so ?libfgdbunixrtl.a ?libfgdbunixrtl.so
>>
>>     ? /usr/include/
>>     ??? <none of the header files are here, were they only needed
>>     during the gdal compile?>
>>
>>     Is there a disconnect between these two lines in the docker file?
>>     Line #175 && cp /usr/local/FileGDB_API/include/* /usr/include \
>>     Line #319 COPY --from=builder /build/usr/include/ /usr/include/
>>
>>
>>     Any thoughts?
>>
>>     My local env is wsl2 Ubuntu 22.04, with buildkit enabled
>>
>>     Thanks,
>>     Travis
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>     _______________________________________________
>>     gdal-dev mailing list
>>     gdal-dev at lists.osgeo.org
>>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>     -- 
>     http://www.spatialys.com
>     My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220717/c9d0819d/attachment.htm>

From sean.gillies at gmail.com  Sun Jul 17 07:08:36 2022
From: sean.gillies at gmail.com (Sean Gillies)
Date: Sun, 17 Jul 2022 08:08:36 -0600
Subject: [gdal-dev] GDAL internal error handling and implications for other
 language bindings
Message-ID: <CAOodmJqF07zVA4eobrgxw+xD=1p6cxJLnMTvpXBpN1LoOex_GA@mail.gmail.com>

Hi all,

I've been thinking about how to surface GDAL errors in a better way for
Python programmers. I'm pretty sure that the approaches I'm looking at
generalize to GDAL's Python bindings and other language bindings. As well,
I'm wondering if we can't improve GDAL's internal error handling in some
core code. I'd love some feedback on my reasoning and design ideas from any
angle. For example, I know that there is some prior art in Thomas Bonfort's
Go modules, and expect there is some in rgdal. Please let me know what you
think.

I'm an author of the Rasterio project for Python. This project has a number
of problems handling GDAL errors. Generally, rasterio only checks the GDAL
error context after a GDAL function returns and so can only see the last
error that was set. Deeper errors may leak out to stderr, but a Python
programmer using rasterio can't do anything about them using Python
language features like try/except. This is a flaw in rasterio and stems
from some naive analysis on my part about how errors are handled internally
in GDAL. I assumed that functions in GDAL core and driver code consistently
handle errors set by the functions they call and then set an error that
describes exactly what a caller can do in the case of failure.

Consider OGRXLSDataSource::Open at
https://github.com/OSGeo/gdal/blob/35c07b18316b4b6d238f6d60b82c31e25662ad27/ogr/ogrsf_frmts/xls/ogrxlsdatasource.cpp#L116-L118.
The code resets the error context, pushes GDAL's silencing handler so that
no other handlers (like GDAL's default which prints to stderr) receive
error events, calls CPLRecode, and then executes more statements if
CPLRecode set an error. This looks to me like GDAL's equivalent of what
might be written in Python as

try:
    CPLRecode(...)
except:
    CPLGenerateTemporaryFilename(...)
    ...

In many ways, GDAL's error system is not unlike Python's at the C level.
Python extension code that fails is supposed to set an error and return a
particular value. When callers get that return value, they are to check for
a set error and should either return with an error-indicating value
(leaving the set error in place), or they can handle the error by clearing
it and continuing, maybe setting a new error if recovery isn't
possible. OGRXLSDataSource::Open
does this. A rasterio user doesn't need to see farther into
OGRXLSDataSource::Open
than the last error set. GDAL and Python error reporting and handling are
well aligned.

I see different behavior when rasterio calls GDALDatasetRasterIOEx to read
data from a GeoTIFF. The silencing handler is not used, so error events are
printed to stderr, but callers set new errors on top of the previous ones.
A rasterio users sees the deeper causes of I/O failure in their logs, but
can't react to them in their programs without extra work to parse errors
out of log messages.

Specifically, here's a snippet of errors printed to stderr that was
provided by a rasterio user recently. These result from a call to
GDALDatasetRasterIOEx.

ERROR 1: TIFFFillTile:No space for data buffer at scanline 4294967295
ERROR 1: TIFFReadEncodedTile() failed.
ERROR 1: /home/ubuntu/Documents/CDL_tiffs/2015_30m_cdls.tif, band 1:
IReadBlock failed at X offset 189, Y offset 60: TIFFReadEncodedTile()
failed.

"IReadBlock failed" is the last error set before GDALDatasetRasterIOEx
returns and is the only one that rasterio can currently surface as a Python
exception. It's specific about the block address at which a problem
occurred, but vague about the nature of the root problem. Was it a codec
error? Was it a memory allocation error? In this case it's a memory
allocation error. The user found that they could retry data reads and get
results the next time, presumably after their program's memory footprint
shrinks sufficiently. What if we could surface enough error detail to a
user that they could determine whether they could retry a read or not?

In
https://github.com/rasterio/rasterio/pull/2526/files#diff-a263c7288922a4c1ffd8318c15dfd3332babeb13edc7023662cb8cd7d69643b5R219
I am testing a hypothesis that the three consecutive, related errors above
might be usefully surfaced to a Python programmer in a chain of exceptions.
I've written an thing that records GDAL error events (intercepting them
before they go to stderr), links them together, and then raises the last
one. A Python programmer can catch RasterioIOError (what is raised in the
"IReadBlock failed" case) and in handling that exception can follow the
chain. At the very least, my experiment will show
"CPLE_AppDefinedError: TIFFFillTile:No
space for data buffer at scanline 4294967295" in Python tracebacks, which
could be a big help for rasterio users who are debugging. Information that
would otherwise be only in their logs would now be in the traceback.

For example, here is the traceback we can get when trying to read a
deliberately corrupted COG:

(venv) seangillies at PF3675VY:~/projects/rasterio$ rio insp
tests/data/corrupt.tif Rasterio 1.4dev Interactive Inspector (Python
3.8.10)Type "src.meta", "src.read(1)", or "help(src)" for more
information.>>> src.read()rasterio._err.CPLE_AppDefinedError:
TIFFFillTile:Read error at row 512, col 0, tile 3; got 38232 bytes,
expected 47086
The above exception was the direct cause of the following exception:
rasterio._err.CPLE_AppDefinedError: TIFFReadEncodedTile() failed.
The above exception was the direct cause of the following exception:
Traceback (most recent call last):  File "rasterio/_io.pyx", line 934,
in rasterio._io.DatasetReaderBase._read    io_multi_band(self._hds, 0,
xoff, yoff, width, height, out, indexes_arr, resampling=resampling)
File "rasterio/_io.pyx", line 166, in rasterio._io.io_multi_band
with stack_errors():  File "/usr/lib/python3.8/contextlib.py", line
120, in __exit__    next(self.gen)  File "rasterio/_err.pyx", line
245, in stack_errors    raise lastrasterio._err.CPLE_AppDefinedError:
/home/seangillies/projects/rasterio/tests/data/corrupt.tif, band 1:
IReadBlock failed at X offset 1, Y offset 1: TIFFReadEncodedTile()
failed.
The above exception was the direct cause of the following exception:
Traceback (most recent call last):  File "<console>", line 1, in
<module>  File "rasterio/_io.pyx", line 610, in
rasterio._io.DatasetReaderBase.read    out = self._read(indexes, out,
window, dtype, resampling=resampling)  File "rasterio/_io.pyx", line
937, in rasterio._io.DatasetReaderBase._read    raise
RasterioIOError("Read or write failed. {}".format(cplerr)) from
cplerrrasterio.errors.RasterioIOError: Read or write failed.
/home/seangillies/projects/rasterio/tests/data/corrupt.tif, band 1:
IReadBlock failed at X offset 1, Y offset 1: TIFFReadEncodedTile()
failed.

I think this could make communication in the Rasterio issue tracker much
more productive. More information about the causes of an error is right
there in the traceback instead of being split between traceback and stderr
(or other log stream). It could at least eliminate one round of asking for
more error detail in a bug report. And there's the ability to catch an
exception and go up the chain in code, potentially very powerful when you
need it.

The effectiveness of this error recorder and chainer could depend on how
many different styles of error handling exist in GDAL. I've pointed out two
kinds above. In OGRXLSDataSource::Open, we have error handling that
actively prevents error events from being emitted until the function gives
up on trying to handle errors. In IReadBlock, there doesn't seem to be any
such error handling involving the GDAL error context. I believe we've seen
cases of GDAL functions that set errors while returning a success error
code. It's possible that some functions return a failed error code while
not setting any error. Lots of different cases could make the error
recording and chaining approach fruitless.

Are there other styles or paradigms in use? Are there GDAL modules that
will challenge the assumptions that I'm making as I write my error
recorder? If you know of any, I'd love to hear about them.

Here are a few links for reference:

* Exception handling in Python's C API:
https://docs.python.org/3/c-api/exceptions.html#exception-handling (I feel
like GDAL could use some documentation like this).
* Python exception chaining:
https://docs.python.org/3/tutorial/errors.html#exception-chaining
* On the difference between an exception raised while handling and "raise
from":
https://blog.ram.rachum.com/post/621791438475296768/improving-python-exception-chaining-with

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220717/36684f76/attachment-0001.htm>

From even.rouault at spatialys.com  Sun Jul 17 11:41:43 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 17 Jul 2022 20:41:43 +0200
Subject: [gdal-dev] GDAL internal error handling and implications for
 other language bindings
In-Reply-To: <CAOodmJqF07zVA4eobrgxw+xD=1p6cxJLnMTvpXBpN1LoOex_GA@mail.gmail.com>
References: <CAOodmJqF07zVA4eobrgxw+xD=1p6cxJLnMTvpXBpN1LoOex_GA@mail.gmail.com>
Message-ID: <9a9ba875-bebf-dfe3-65bd-9a34aef7dd85@spatialys.com>

Sean,

that's a good and extensive analysis of error handling/reporting in GDAL.


> Consider OGRXLSDataSource::Open at 
> https://github.com/OSGeo/gdal/blob/35c07b18316b4b6d238f6d60b82c31e25662ad27/ogr/ogrsf_frmts/xls/ogrxlsdatasource.cpp#L116-L118. 
> The code resets the error context, pushes GDAL's silencing handler so 
> that no other handlers (like GDAL's default which prints to stderr) 
> receive error events, calls CPLRecode, and then executes more 
> statements if CPLRecode set an error. This looks to me like GDAL's 
> equivalent of what might be written in Python as
> |try: CPLRecode(...) except: CPLGenerateTemporaryFilename(...) ...|
|Yes, such error is fully handled internally by GDAL and hidden from the 
user. Purely implementation detail|
>
> I see different behavior when rasterio calls GDALDatasetRasterIOEx to 
> read data from a GeoTIFF. The silencing handler is not used, so error 
> events are printed to stderr, but callers set new errors on top of the 
> previous ones. A rasterio users sees the deeper causes of I/O failure 
> in their logs, but can't react to them in their programs without extra 
> work to parse errors out of log messages.
>
> Specifically, here's a snippet of errors printed to stderr that was 
> provided by a rasterio user recently. These result from a call to 
> GDALDatasetRasterIOEx.
> |ERROR 1: TIFFFillTile:No space for data buffer at scanline 4294967295 
> ERROR 1: TIFFReadEncodedTile() failed. ERROR 1: 
> /home/ubuntu/Documents/CDL_tiffs/2015_30m_cdls.tif, band 1: IReadBlock 
> failed at X offset 189, Y offset 60: TIFFReadEncodedTile() failed. |
> "IReadBlock failed" is the last error set before GDALDatasetRasterIOEx 
> returns and is the only one that rasterio can currently surface as a 
> Python exception. It's specific about the block address at which a 
> problem occurred, but vague about the nature of the root problem. Was 
> it a codec error? Was it a memory allocation error? In this case it's 
> a memory allocation error. The user found that they could retry data 
> reads and get results the next time, presumably after their program's 
> memory footprint shrinks sufficiently. What if we could surface enough 
> error detail to a user that they could determine whether they could 
> retry a read or not?
As mentioned in https://github.com/OSGeo/gdal/issues/6071, even for a 
memory allocation error, it is not obvious to know if it is makes sense 
to retry because some memory allocation errors are related to corrupted 
data.
>
> I think this could make communication in the Rasterio issue tracker 
> much more productive. More information about the causes of an error is 
> right there in the traceback instead of being split between traceback 
> and stderr (or other log stream). It could at least eliminate one 
> round of asking for more error detail in a bug report. And there's the 
> ability to catch an exception and go up the chain in code, potentially 
> very powerful when you need it.
It looks to me that if GDAL's error handling could potentially be 
enhanced with an error chaining concept. New API would have to be 
devised (for error emitters and consumers), and relevant places modified 
to use it. Would that be useful?
>
> ?I believe we've seen cases of GDAL functions that set errors while 
> returning a success error code.

There are 2 sub cases:

a) the function emits a CPLError(CE_Failure, ...) , clears the error 
state and returns something successful

b) the function emits a CPLError(CE_Failure, ...), doesn't clear the 
error state and returns something successful

I'd say b) is probably mostly unwanted, and should be corrected to, at 
the very least, clear the error state (*).? But people could also say 
that as soon as a CE_Failure is emitted and reaches the error handling 
method (either the default one or a user-set), that it is it is not 
caught by GDAL internals, the user could assume that the global function 
would fail. Making such an assumption currently given the whole code 
base would be overly cautious.? Worth mentioning: the 
CPLTurnFailureIntoWarning() function (introduced in 
https://github.com/OSGeo/gdal/commit/f151e9f652b9d036cacdebf67ca88f59d5680cb3 
and from what I can see , it is pretty much only used at the 2 initial 
only places of gdal_misc.cpp of this commit), that as its name suggests 
can cause any CE_Failure to be turned into a CE_Warning. It could be 
handy to implement a "any CE_Failure that goes to the default or 
user-set error handling method means that the function failed" policy, 
but I'm not sure how we could implement this consistently in the code 
base. That would require analyzing all potential code paths where this 
could happen. Impractical (this also applies to the (*) at the beginning 
of this paragraph)

(I guess we all agree that a successful function may emit one or several 
CPLError(CE_Warning, ...) during its execution)

> It's possible that some functions return a failed error code while not 
> setting any error.

Yes, sometimes error messages aren't really helpful when it is about 
corrupted data. e.g if you parse WKB geometries there are tons of 
potential error situations, and emitting a specific error for each one? 
would require a lot of coding effort, would bloat the code base & the 
size of the GDAL binary.

Even

-- 

http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220717/2a6e199b/attachment.htm>

From florian.douziech at csgroup.eu  Mon Jul 18 05:30:14 2022
From: florian.douziech at csgroup.eu (DOUZIECH Florian)
Date: Mon, 18 Jul 2022 12:30:14 +0000
Subject: [gdal-dev] LUT not available in metadata for the PNEO support
Message-ID: <PAYP264MB3336690F12936664A1217FDAF7899@PAYP264MB3336.FRAP264.PROD.OUTLOOK.COM>

Hi all,

Currently, I'm integrated the PNEO support in the Orfeo Tool Box.

Is there a plan to support LUT metadata for PNEO sensor?

The feature is quiet similar to the RPC data reading from the RPC xml file.

Best regards,
Florian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220718/521397de/attachment.htm>

From mcalzado at carto.com  Mon Jul 18 06:54:20 2022
From: mcalzado at carto.com (Moises Calzado)
Date: Mon, 18 Jul 2022 15:54:20 +0200
Subject: [gdal-dev] Ogr2ogr issue with big integers
Message-ID: <CAObRW4SY1gan0p3sjvP2qH9z7FX1ROsZffbq=dtU-SDfhAsqCQ@mail.gmail.com>

 test.csv
<https://drive.google.com/file/d/11moLc5Shd78iTCKzsHxCKL33xSFHaVva/view?usp=drive_web>
Hello everyone!

I'm dealing with some issues with ogr2ogr trying to convert my data to a
CSV file guessing the data types. I'm using the following command:

ogr2ogr -f CSV -skipfailures -makevalid /vsistdout/ CSV:test.csv -oo
AUTODETECT_TYPE=YES -lco CREATE_CSVT=YES > test.csv

When I add the AUTODETECT_TYPE=YES flag, ogr2ogr is applying some weird
transformations on the "uprn" column. If you check the generated output and
the original file, you'll notice that some integers have changed into a
negative number. Do you know if I'm doing something wrong, or if it's a
bug?

Thanks so much for your help,
Regards!



-- 
*Moises Calzado*

Support Engineer

(US) +1 917 463 3232 | (ES) +34 911 165 823 | mcalzado at carto.com
<https://www.carto.com/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220718/84bfee09/attachment.htm>

From even.rouault at spatialys.com  Mon Jul 18 11:47:55 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Jul 2022 20:47:55 +0200
Subject: [gdal-dev] Ogr2ogr issue with big integers
In-Reply-To: <CAObRW4SY1gan0p3sjvP2qH9z7FX1ROsZffbq=dtU-SDfhAsqCQ@mail.gmail.com>
References: <CAObRW4SY1gan0p3sjvP2qH9z7FX1ROsZffbq=dtU-SDfhAsqCQ@mail.gmail.com>
Message-ID: <147d1124-393d-dc71-bef9-02622fb4d9a4@spatialys.com>

Moises,

the reason is that autodetection by default only considers the content 
of the first megabyte of the file, and in the first megabyte, only 
integer values that fit on 32 bit integers are present, hence this data 
type is selected. But later in the file, there are values that require a 
64 bit integer.

You can add -oo AUTODETECT_SIZE_LIMIT=0 to mean unlimited size limit. 
Unfortunately I just noticed this got broken in 3.5.1, where 
AUTODETECT_SIZE_LIMIT=0 would disable any autodetection. This will be 
fixed per https://github.com/OSGeo/gdal/pull/6087. So if you've 3.5.1, 
use AUTODETECT_SIZE_LIMIT=-1 instead. Or a large value in bytes not 
greater than 2 billion. In the previously mentioned fix, I've also added 
a warning if integer values that don't fit on 32 bit are set.

Even

Le 18/07/2022 ? 15:54, Moises Calzado via gdal-dev a ?crit?:
> test.csv 
> <https://drive.google.com/file/d/11moLc5Shd78iTCKzsHxCKL33xSFHaVva/view?usp=drive_web>
> Hello everyone!
>
> I'm dealing with some issues with ogr2ogr trying to convert my data to 
> a CSV file guessing the data types. I'm using the following command:
>
> |ogr2ogr -f CSV -skipfailures -makevalid /vsistdout/ CSV:test.csv -oo 
> AUTODETECT_TYPE=YES -lcoCREATE_CSVT=YES > test.csv|
> When I add the AUTODETECT_TYPE=YES flag, ogr2ogr is applying some 
> weird transformations on the "uprn" column. If you check the generated 
> output and the original file, you'll notice that some 
> integers?have?changed?into a negative number. Do you know if I'm doing 
> something wrong, or if it's a bug?
>
> Thanks so much for your help,
> Regards!
>
>
>
> -- 
> *Moises Calzado*
>
> Support Engineer
>
> (US) +1 917 463 3232 | (ES) +34 911 165 823 | mcalzado at carto.com
>
> <https://www.carto.com/>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220718/18f3e865/attachment.htm>

From traviskirstine at gmail.com  Tue Jul 19 12:19:33 2022
From: traviskirstine at gmail.com (Travis Kirstine)
Date: Tue, 19 Jul 2022 15:19:33 -0400
Subject: [gdal-dev] JPEG compressed COGs nodata
Message-ID: <CALtm4h3miTRzjCj_j+QM0o-p_X_+eVU9pb5+0646VvQzdJErVQ@mail.gmail.com>

I've been trying to create a COG with JPEG compression with transparent
nodata values without much success.  Is this possible without creating a
secondary mask?

Any hints?

Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220719/52455154/attachment.htm>

From warmerdam at pobox.com  Tue Jul 19 15:01:02 2022
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 19 Jul 2022 18:01:02 -0400
Subject: [gdal-dev] JPEG compressed COGs nodata
In-Reply-To: <CALtm4h3miTRzjCj_j+QM0o-p_X_+eVU9pb5+0646VvQzdJErVQ@mail.gmail.com>
References: <CALtm4h3miTRzjCj_j+QM0o-p_X_+eVU9pb5+0646VvQzdJErVQ@mail.gmail.com>
Message-ID: <CA+YzLBexUCicXk4m01gSt8ELaP9E6+gjiwMn1sVeDgb67TQZKQ@mail.gmail.com>

Travis,

I am not aware of a good way to do this.   What I do is create separate
mask directories looking like te following.  Note the "Subfile Type:
transparency mask (4 = 0x4)" directories.  It isn't clear that all
applications will honor these, but modern GDAL treats this as a PER_DATASET
mask, and modern GDAL using applications that honor this style of masking
will support the mask properly.   I think modern QGIS does for instance,
and MapServer.   I could do some digging for the GDAL script code that
makes these if you like.

Best regards,
Frank


$ tiffinfo 20200708_082104_1002_Browse.tif
TIFFReadDirectory: Warning, Unknown field with tag 33550 (0x830e)
encountered.
TIFFReadDirectory: Warning, Unknown field with tag 33922 (0x8482)
encountered.
TIFFReadDirectory: Warning, Unknown field with tag 34735 (0x87af)
encountered.
TIFFReadDirectory: Warning, Unknown field with tag 34737 (0x87b1)
encountered.
TIFFReadDirectory: Warning, Unknown field with tag 42112 (0xa480)
encountered.
TIFF Directory at offset 0x17794e (1538382)
  Image Width: 5870 Image Length: 2889
  Tile Width: 256 Tile Length: 256
  Bits/Sample: 8
  Sample Format: unsigned integer
  Compression Scheme: JPEG
  Photometric Interpretation: YCbCr
  YCbCr Subsampling: 2, 2
  Samples/Pixel: 3
  Planar Configuration: single image plane
  Reference Black/White:
     0:     0   255
     1:   128   255
     2:   128   255
  ImageDescription: {"fp_center": [23.21221629852675, -19.107257323766635]}
  DateTime: 2020:07:08 08:21:04
  Tag 33550: 4.777314,4.777314,0.000000
  Tag 33922:
0.000000,0.000000,0.000000,2569932.323447,-2160669.364808,0.000000
  Tag 34735:
1,1,0,7,1024,0,1,1,1025,0,1,1,1026,34737,25,0,2049,34737,7,25,2054,0,1,9102,3072,0,1,3857,3076,0,1,9001
  Tag 34737: WGS 84 / Pseudo-Mercator|WGS 84|
  Tag 42112: <GDALMetadata>
  <Item name="DESCRIPTION" sample="0" role="description">red</Item>
  <Item name="DESCRIPTION" sample="1" role="description">green</Item>
  <Item name="DESCRIPTION" sample="2" role="description">blue</Item>
</GDALMetadata>

  JPEG Tables: (142 bytes)
TIFF Directory at offset 0xb6a (2922)
  Subfile Type: transparency mask (4 = 0x4)
  Image Width: 5870 Image Length: 2889
  Tile Width: 256 Tile Length: 256
  Bits/Sample: 1
  Sample Format: unsigned integer
  Compression Scheme: AdobeDeflate
  Photometric Interpretation: transparency mask
  Samples/Pixel: 1
  Planar Configuration: single image plane
  Predictor: none 1 (0x1)
TIFF Directory at offset 0x14b8 (5304)
  Subfile Type: reduced-resolution image (1 = 0x1)
  Image Width: 1468 Image Length: 723
  Tile Width: 128 Tile Length: 128
  Bits/Sample: 8
  Sample Format: unsigned integer
  Compression Scheme: JPEG
  Photometric Interpretation: YCbCr
  YCbCr Subsampling: 2, 2
  Samples/Pixel: 3
  Planar Configuration: single image plane
  Reference Black/White:
     0:     0   255
     1:   128   255
     2:   128   255
  JPEG Tables: (142 bytes)
TIFF Directory at offset 0x1888 (6280)
  Subfile Type: reduced-resolution image (1 = 0x1)
  Image Width: 734 Image Length: 362
  Tile Width: 128 Tile Length: 128
  Bits/Sample: 8
  Sample Format: unsigned integer
  Compression Scheme: JPEG
  Photometric Interpretation: YCbCr
  YCbCr Subsampling: 2, 2
  Samples/Pixel: 3
  Planar Configuration: single image plane
  Reference Black/White:
     0:     0   255
     1:   128   255
     2:   128   255
  JPEG Tables: (142 bytes)
TIFF Directory at offset 0x1aa8 (6824)
  Subfile Type: reduced-resolution image (1 = 0x1)
  Image Width: 367 Image Length: 181
  Tile Width: 128 Tile Length: 128
  Bits/Sample: 8
  Sample Format: unsigned integer
  Compression Scheme: JPEG
  Photometric Interpretation: YCbCr
  YCbCr Subsampling: 2, 2
  Samples/Pixel: 3
  Planar Configuration: single image plane
  Reference Black/White:
     0:     0   255
     1:   128   255
     2:   128   255
  JPEG Tables: (142 bytes)
TIFF Directory at offset 0x1c68 (7272)
  Subfile Type: reduced-resolution image/transparency mask (5 = 0x5)
  Image Width: 1468 Image Length: 723
  Tile Width: 128 Tile Length: 128
  Bits/Sample: 1
  Sample Format: unsigned integer
  Compression Scheme: AdobeDeflate
  Photometric Interpretation: transparency mask
  Samples/Pixel: 1
  Planar Configuration: single image plane
  Predictor: none 1 (0x1)
TIFF Directory at offset 0x1f56 (8022)
  Subfile Type: reduced-resolution image/transparency mask (5 = 0x5)
  Image Width: 734 Image Length: 362
  Tile Width: 128 Tile Length: 128
  Bits/Sample: 1
  Sample Format: unsigned integer
  Compression Scheme: AdobeDeflate
  Photometric Interpretation: transparency mask
  Samples/Pixel: 1
  Planar Configuration: single image plane
  Predictor: none 1 (0x1)
TIFF Directory at offset 0x2094 (8340)
  Subfile Type: reduced-resolution image/transparency mask (5 = 0x5)
  Image Width: 367 Image Length: 181
  Tile Width: 128 Tile Length: 128
  Bits/Sample: 1
  Sample Format: unsigned integer
  Compression Scheme: AdobeDeflate
  Photometric Interpretation: transparency mask
  Samples/Pixel: 1
  Planar Configuration: single image plane
  Predictor: none 1 (0x1)

On Tue, Jul 19, 2022 at 3:19 PM Travis Kirstine <traviskirstine at gmail.com>
wrote:

> I've been trying to create a COG with JPEG compression with transparent
> nodata values without much success.  Is this possible without creating a
> secondary mask?
>
> Any hints?
>
> Regards
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | +1 650-701-7823
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220719/74f54ca2/attachment.htm>

From even.rouault at spatialys.com  Wed Jul 20 11:07:08 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Jul 2022 20:07:08 +0200
Subject: [gdal-dev] LUT not available in metadata for the PNEO support
In-Reply-To: <PAYP264MB3336690F12936664A1217FDAF7899@PAYP264MB3336.FRAP264.PROD.OUTLOOK.COM>
References: <PAYP264MB3336690F12936664A1217FDAF7899@PAYP264MB3336.FRAP264.PROD.OUTLOOK.COM>
Message-ID: <c9f6b5af-214c-6f88-b6eb-492a080e05fb@spatialys.com>

Florian,
>
> Currently, I'm integrated the PNEO support in the Orfeo Tool Box.
>
> Is there a plan to support LUT metadata for PNEO sensor?

The plan in open source software is most often drawn by people in need 
for a feature :-) That would be a good contribution if you want to 
tackle that.

GDAL has the concepts of ColorTable attached to a RasterBand, or 
RasterAttributeTable (RAT), but from what I can see in the PNEO LUT XML 
files, not all input values are defined for compactness, just the points 
that define the curve, so they don't seem to be good fit here. Probably 
that exposing the content of the <LUT> XML element as a LUT metadata 
item on the relevant RasterBand could be a good solution.

Even

http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220720/742a8e97/attachment.htm>

From even.rouault at spatialys.com  Thu Jul 21 13:12:51 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Jul 2022 22:12:51 +0200
Subject: [gdal-dev] autoconf and nmake build systems ready to be removed
Message-ID: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com>

Hi,

Great news: the final step of the CMake migration (checklist in 
https://github.com/OSGeo/gdal/issues/5680), the removal of the autoconf 
and nmake build systems (https://github.com/OSGeo/gdal/pull/6110) is now 
ready to be merged.

Are there people who track GDAL master and still use autoconf/nmake and 
would need some grace period to complete their transition to cmake ?

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From gdt at lexort.com  Thu Jul 21 15:31:50 2022
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 21 Jul 2022 18:31:50 -0400
Subject: [gdal-dev] autoconf and nmake build systems ready to be removed
In-Reply-To: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com> (Even
 Rouault's message of "Thu, 21 Jul 2022 22:12:51 +0200")
References: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com>
Message-ID: <rmih73at7vt.fsf@s1.lexort.com>


Even Rouault <even.rouault at spatialys.com> writes:

> Hi,
>
> Great news: the final step of the CMake migration (checklist in
> https://github.com/OSGeo/gdal/issues/5680), the removal of the
> autoconf and nmake build systems
> (https://github.com/OSGeo/gdal/pull/6110) is now ready to be merged.
>
> Are there people who track GDAL master and still use autoconf/nmake
> and would need some grace period to complete their transition to cmake
> ?

I use cmake on master, but have not converted the package yet.

I guess you are implying that we are at the point where everything that
worked with autoconf is doable with cmake, including whatever cross
builds worked?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220721/a0c6531b/attachment.sig>

From even.rouault at spatialys.com  Thu Jul 21 16:03:57 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Jul 2022 01:03:57 +0200
Subject: [gdal-dev] autoconf and nmake build systems ready to be removed
In-Reply-To: <rmih73at7vt.fsf@s1.lexort.com>
References: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com>
 <rmih73at7vt.fsf@s1.lexort.com>
Message-ID: <78d5c6d5-4eaf-da17-9f59-9fea14c56b3f@spatialys.com>


> I use cmake on master, but have not converted the package yet.
You've still time as this will reach a release for 3.6.0 in November. 
This email is mostly for people having CI or other similar nightly build 
processes that track GDAL master.
>
> I guess you are implying that we are at the point where everything that
> worked with autoconf is doable with cmake, including whatever cross
> builds worked?
I'm not aware of platforms where GDAL used to build that can't build 
with CMake. Everything in our infrastructure that depended on autoconf & 
nmake has now been switched to cmake (that includes Android cross builds 
for example). So things are ready from my point of view.

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From gdt at lexort.com  Thu Jul 21 16:37:46 2022
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 21 Jul 2022 19:37:46 -0400
Subject: [gdal-dev] autoconf and nmake build systems ready to be removed
In-Reply-To: <78d5c6d5-4eaf-da17-9f59-9fea14c56b3f@spatialys.com> (Even
 Rouault's message of "Fri, 22 Jul 2022 01:03:57 +0200")
References: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com>
 <rmih73at7vt.fsf@s1.lexort.com>
 <78d5c6d5-4eaf-da17-9f59-9fea14c56b3f@spatialys.com>
Message-ID: <rmi8romt4tx.fsf@s1.lexort.com>


Even Rouault <even.rouault at spatialys.com> writes:

>> I use cmake on master, but have not converted the package yet.
> You've still time as this will reach a release for 3.6.0 in
> November. This email is mostly for people having CI or other similar
> nightly build processes that track GDAL master.

What I do, usually only when there is a call for testing, is to build on
master including creating a distfile, and then to build that distfile as
if it were a release in pkgsrc.  But duly noted that I need to get
around to converting the package.  That should not be hard; the
non-pkgsrc cmake build works.

>> I guess you are implying that we are at the point where everything that
>> worked with autoconf is doable with cmake, including whatever cross
>> builds worked?
> I'm not aware of platforms where GDAL used to build that can't build
> with CMake. Everything in our infrastructure that depended on autoconf
> & nmake has now been switched to cmake (that includes Android cross
> builds for example). So things are ready from my point of view.

Great, glad to hear it.  
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220721/4dcd857d/attachment.sig>

From andrew at aitchison.me.uk  Fri Jul 22 08:02:40 2022
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 22 Jul 2022 16:02:40 +0100 (BST)
Subject: [gdal-dev] autoconf and nmake build systems ready to be removed
In-Reply-To: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com>
References: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com>
Message-ID: <dbe99324-9895-443e-671e-b0f96a322d@aitchison.me.uk>

On Thu, 21 Jul 2022, Even Rouault wrote:

> Hi,
>
> Great news: the final step of the CMake migration (checklist in 
> https://github.com/OSGeo/gdal/issues/5680), the removal of the autoconf 
> and nmake build systems (https://github.com/OSGeo/gdal/pull/6110) is now 
> ready to be merged.
>
> Are there people who track GDAL master and still use autoconf/nmake and 
> would need some grace period to complete their transition to cmake ?

How do I build and install docs/manpage with cmake ?

# cd /home/werdna/git/gdal.build.llvm/doc
# make manpages
Generating ../man/man1/gdalinfo.1, ../man/man1/gdal-config.1, ../man/man1/ogrlinfo.1, ../man/man1/ogr2ogr.1
warning: argument 'a4wide' for option PAPER_TYPE is not a valid enum value
Using the default: a4!
error: tag HTML_FOOTER: footer file '/home/werdna/git/gdal/doc/gdal_footer.html' does not exist
Exiting...
make[3]: *** [doc/CMakeFiles/manpages.dir/build.make:76: man/man1/gdalinfo.1] Error 1
make[2]: *** [CMakeFiles/Makefile2:11041: doc/CMakeFiles/manpages.dir/all] Error 2
make[1]: *** [CMakeFiles/Makefile2:11048: doc/CMakeFiles/manpages.dir/rule] Error 2
make: *** [Makefile:204: doc/CMakeFiles/manpages.dir/rule] Error 2

(This machine is running Ubuntu 22.04/jammy )

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From even.rouault at spatialys.com  Fri Jul 22 08:27:41 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Jul 2022 17:27:41 +0200
Subject: [gdal-dev] autoconf and nmake build systems ready to be removed
In-Reply-To: <dbe99324-9895-443e-671e-b0f96a322d@aitchison.me.uk>
References: <6a02a58d-113f-1873-d529-11165e7cb166@spatialys.com>
 <dbe99324-9895-443e-671e-b0f96a322d@aitchison.me.uk>
Message-ID: <b0c1e4b9-a814-9539-a646-8cfcacf56700@spatialys.com>


> How do I build and install docs/manpage with cmake ?

This isn't integrated in the build system

you need to:

cd doc
make man

There are specific build prerequisites:

pip install -r doc/requirements.txt


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From traviskirstine at gmail.com  Fri Jul 22 09:03:54 2022
From: traviskirstine at gmail.com (Travis Kirstine)
Date: Fri, 22 Jul 2022 12:03:54 -0400
Subject: [gdal-dev] JPEG compressed COGs nodata
In-Reply-To: <CALtm4h3miTRzjCj_j+QM0o-p_X_+eVU9pb5+0646VvQzdJErVQ@mail.gmail.com>
References: <CALtm4h3miTRzjCj_j+QM0o-p_X_+eVU9pb5+0646VvQzdJErVQ@mail.gmail.com>
Message-ID: <CALtm4h0xzH+dRyWxVojsrWAqchwNw+0BEFDOpYTJEhr9QuMXPQ@mail.gmail.com>

To answer my own question I believe the answer is that you need to create
an alpha band when working with RGB datasets to have JPEG compressed COGs
without compression artifacts in the nodata areas.  Creating a internal
mask on the source data may work as well but I haven't tried.

# add a alpha band using the nearblack utility
nearblack -setalpha rgb_nodata.tif -o rgba.tif
# create the COG
gdal_translate -of COG  -co COMPRESS=JPEG -co
TILING_SCHEME=GoogleMapsCompatible -co NUM_THREADS=ALL_CPUS -co BIGTIFF=YES
rgba.tif cog.tif

Regards




On Tue, 19 Jul 2022 at 15:19, Travis Kirstine <traviskirstine at gmail.com>
wrote:

> I've been trying to create a COG with JPEG compression with transparent
> nodata values without much success.  Is this possible without creating a
> secondary mask?
>
> Any hints?
>
> Regards
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220722/23b27574/attachment.htm>

From sean.gillies at gmail.com  Fri Jul 22 14:02:58 2022
From: sean.gillies at gmail.com (Sean Gillies)
Date: Fri, 22 Jul 2022 15:02:58 -0600
Subject: [gdal-dev] GDAL internal error handling and implications for
 other language bindings
In-Reply-To: <9a9ba875-bebf-dfe3-65bd-9a34aef7dd85@spatialys.com>
References: <CAOodmJqF07zVA4eobrgxw+xD=1p6cxJLnMTvpXBpN1LoOex_GA@mail.gmail.com>
 <9a9ba875-bebf-dfe3-65bd-9a34aef7dd85@spatialys.com>
Message-ID: <CAOodmJox_ZyHfitRmtQrq+25uoCYhCMa9+PRZVO8SmBhe0QDTg@mail.gmail.com>

Even,

On Sun, Jul 17, 2022 at 12:41 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Sean,
>
> that's a good and extensive analysis of error handling/reporting in GDAL.
>
Thank you! It was fun to compare GDAL and Python.

> Consider OGRXLSDataSource::Open at
> https://github.com/OSGeo/gdal/blob/35c07b18316b4b6d238f6d60b82c31e25662ad27/ogr/ogrsf_frmts/xls/ogrxlsdatasource.cpp#L116-L118.
> The code resets the error context, pushes GDAL's silencing handler so that
> no other handlers (like GDAL's default which prints to stderr) receive
> error events, calls CPLRecode, and then executes more statements if
> CPLRecode set an error. This looks to me like GDAL's equivalent of what
> might be written in Python as
>
> try:
>     CPLRecode(...)
> except:
>     CPLGenerateTemporaryFilename(...)
>     ...
>
> Yes, such error is fully handled internally by GDAL and hidden from the
> user. Purely implementation detail
>
>
> I see different behavior when rasterio calls GDALDatasetRasterIOEx to read
> data from a GeoTIFF. The silencing handler is not used, so error events are
> printed to stderr, but callers set new errors on top of the previous ones.
> A rasterio users sees the deeper causes of I/O failure in their logs, but
> can't react to them in their programs without extra work to parse errors
> out of log messages.
>
> Specifically, here's a snippet of errors printed to stderr that was
> provided by a rasterio user recently. These result from a call to
> GDALDatasetRasterIOEx.
>
> ERROR 1: TIFFFillTile:No space for data buffer at scanline 4294967295
> ERROR 1: TIFFReadEncodedTile() failed.
> ERROR 1: /home/ubuntu/Documents/CDL_tiffs/2015_30m_cdls.tif, band 1: IReadBlock failed at X offset 189, Y offset 60: TIFFReadEncodedTile() failed.
>
>
> "IReadBlock failed" is the last error set before GDALDatasetRasterIOEx
> returns and is the only one that rasterio can currently surface as a Python
> exception. It's specific about the block address at which a problem
> occurred, but vague about the nature of the root problem. Was it a codec
> error? Was it a memory allocation error? In this case it's a memory
> allocation error. The user found that they could retry data reads and get
> results the next time, presumably after their program's memory footprint
> shrinks sufficiently. What if we could surface enough error detail to a
> user that they could determine whether they could retry a read or not?
>
> As mentioned in https://github.com/OSGeo/gdal/issues/6071, even for a
> memory allocation error, it is not obvious to know if it is makes sense to
> retry because some memory allocation errors are related to corrupted data.
>

Thank you for making this point. It's complicated.

>
> I think this could make communication in the Rasterio issue tracker much
> more productive. More information about the causes of an error is right
> there in the traceback instead of being split between traceback and stderr
> (or other log stream). It could at least eliminate one round of asking for
> more error detail in a bug report. And there's the ability to catch an
> exception and go up the chain in code, potentially very powerful when you
> need it.
>
> It looks to me that if GDAL's error handling could potentially be enhanced
> with an error chaining concept. New API would have to be devised (for error
> emitters and consumers), and relevant places modified to use it. Would that
> be useful?
>

I'm not sure whether it would be useful or not. It wouldn't help
gdal_translate users (for example), since all the errors go to stderr
already and there's no way to catch exceptions. The benefit would be for
scripting language bindings, and in those cases it's not too hard to hack
something together that makes up for the lack of native error chaining. I
think my recommendation would be to leave the GDAL error system as it is
while incrementally fixing small handling bugs and inconsistencies and
being mindful that language bindings might like to push an error handler
that records and links errors.

>> I believe we've seen cases of GDAL functions that set errors while
returning a success error code.

> There are 2 sub cases:
>
> a) the function emits a CPLError(CE_Failure, ...) , clears the error state
> and returns something successful
>
> b) the function emits a CPLError(CE_Failure, ...), doesn't clear the error
> state and returns something successful
>
> I'd say b) is probably mostly unwanted, and should be corrected to, at the
> very least, clear the error state (*).  But people could also say that as
> soon as a CE_Failure is emitted and reaches the error handling method
> (either the default one or a user-set), that it is it is not caught by GDAL
> internals, the user could assume that the global function would fail.
> Making such an assumption currently given the whole code base would be
> overly cautious.  Worth mentioning: the CPLTurnFailureIntoWarning()
> function (introduced in
> https://github.com/OSGeo/gdal/commit/f151e9f652b9d036cacdebf67ca88f59d5680cb3
> and from what I can see , it is pretty much only used at the 2 initial only
> places of gdal_misc.cpp of this commit), that as its name suggests can
> cause any CE_Failure to be turned into a CE_Warning. It could be handy to
> implement a "any CE_Failure that goes to the default or user-set error
> handling method means that the function failed" policy, but I'm not sure
> how we could implement this consistently in the code base. That would
> require analyzing all potential code paths where this could happen.
> Impractical (this also applies to the (*) at the beginning of this
> paragraph)
>
> (I guess we all agree that a successful function may emit one or several
> CPLError(CE_Warning, ...) during its execution)
>
I would prefer that no errors were emitted during a successful call, but
the next best thing is to have a better understanding of how the code
behaves now, and I feel like I have that. As long as no functions return a
successful error code while failing we're in pretty good shape!

> It's possible that some functions return a failed error code while not
> setting any error.
>
> Yes, sometimes error messages aren't really helpful when it is about
> corrupted data. e.g if you parse WKB geometries there are tons of potential
> error situations, and emitting a specific error for each one  would require
> a lot of coding effort, would bloat the code base & the size of the GDAL
> binary.
>
That makes sense.

Given all this, I think I'll modify my error recording approach to also use
the return values of functions. The combination of errors and return values
will be enough information to determine whether rasterio should raise a
Python exception.

Thanks!

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220722/a82933d1/attachment.htm>

From bo.victor.thomsen at gmail.com  Mon Jul 25 01:53:47 2022
From: bo.victor.thomsen at gmail.com (Bo Victor Thomsen)
Date: Mon, 25 Jul 2022 10:53:47 +0200
Subject: [gdal-dev] New behaviour of "PROMOTE_TO_MULTI" ?
Message-ID: <a973b3b2-47a7-f3eb-e4e5-ecd647405807@gmail.com>

I have a MapInfo .tab file containing polygons, both simple and 
multipolygons (and only polygons).

Using this command: (all ogr2ogr commands are one-liners, but examples 
are split for lucidity)

ogr2ogr
 ? --config PG_USE_COPY yes
 ? -progress
 ? -lco OVERWRITE=YES
 ? -dim XY
 ? -f "PostgreSQL" PG:"host=localhost port=5432 user=*** password=*** 
dbname=geodata"
 ? FREDSKOV.TAB

will (correctly) create a table in Postgres of PostGIS type "Geometry"

If I change the command to:

ogr2ogr
 ? --config PG_USE_COPY yes
 ? -progress
 ? -lco OVERWRITE=YES
 ? -dim XY
*? -nlt PROMOTE_TO_MULTI*
 ? -f "PostgreSQL" PG:"host=localhost port=5432 user=*** password=*** 
dbname=geodata"
 ? FREDSKOV.TAB

I would expect the table to change the PostGIS type to "MultiPolygon". 
However it still is registered as "Geometry".

Checking the table using SQL command:

SELECT ST_geometrytype(wkb_geometry), count(*) FROM mat.fredskov group by 1

affirms, that all geometries now is of type "ST_MultiPolygon".

AFAIK, this is a new behaviour. Or what ?

Postgres/Postgis version : 13.2,? 3.1

OGR2OGR version:? both 3.4 andf 3.6 dev.




-- 
Med venlig hilsen / Kind regards

Bo Victor Thomsen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220725/ddca9b20/attachment.htm>

From aborruso at gmail.com  Mon Jul 25 04:27:53 2022
From: aborruso at gmail.com (andy)
Date: Mon, 25 Jul 2022 13:27:53 +0200
Subject: [gdal-dev] Compiling GDAL for Linux and enabling PGeo format
Message-ID: <CAHEdGZNyHAzN2LVs2mWFaj1r4Nb7qzHq_Y9kR0ezueStni_orw@mail.gmail.com>

Hi,
I have installed unixodbc and odbc-mdbtools:

```
sudo apt-get install unixodbc odbc-mdbtools
```

I compile myself GDAL in my Linux machine, but I must use an old 2.4.x
version.

Currently I configure it in this way

```
./configure --prefix=/usr/local --with-sqlite3=/usr/local
--with-spatialite=/usr/local --with-geos=/usr/local/bin/geos-config
--with-netcdf=/usr/local --with-proj
```

How to add PGeo support?

Thank you,

Andrea
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220725/df73e503/attachment.htm>

From richard.greenwood at gmail.com  Mon Jul 25 06:32:35 2022
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Mon, 25 Jul 2022 07:32:35 -0600
Subject: [gdal-dev] New behaviour of "PROMOTE_TO_MULTI" ?
In-Reply-To: <a973b3b2-47a7-f3eb-e4e5-ecd647405807@gmail.com>
References: <a973b3b2-47a7-f3eb-e4e5-ecd647405807@gmail.com>
Message-ID: <CAHBySPYmUy5Dua+joHLmd79r2GbYXPLafUUFj6TMQm+TZbKx1w@mail.gmail.com>

Have you tried -nlt MultiPolygon?

On Mon, Jul 25, 2022 at 2:54 AM Bo Victor Thomsen <
bo.victor.thomsen at gmail.com> wrote:

> I have a MapInfo .tab file containing polygons, both simple and
> multipolygons (and only polygons).
>
> Using this command: (all ogr2ogr commands are one-liners, but examples are
> split for lucidity)
>
> ogr2ogr
>   --config PG_USE_COPY yes
>   -progress
>   -lco OVERWRITE=YES
>   -dim XY
>   -f "PostgreSQL" PG:"host=localhost port=5432 user=*** password=***
> dbname=geodata"
>   FREDSKOV.TAB
>
> will (correctly) create a table in Postgres of PostGIS type "Geometry"
>
> If I change the command to:
>
> ogr2ogr
>   --config PG_USE_COPY yes
>   -progress
>   -lco OVERWRITE=YES
>   -dim XY
> *  -nlt PROMOTE_TO_MULTI*
>   -f "PostgreSQL" PG:"host=localhost port=5432 user=*** password=***
> dbname=geodata"
>   FREDSKOV.TAB
>
> I would expect the table to change the PostGIS type to "MultiPolygon".
> However it still is registered as "Geometry".
>
> Checking the table using SQL command:
>
> SELECT ST_geometrytype(wkb_geometry), count(*) FROM mat.fredskov group by 1
>
> affirms, that all geometries now is of type "ST_MultiPolygon".
>
> AFAIK, this is a new behaviour. Or what ?
>
> Postgres/Postgis version : 13.2,  3.1
>
> OGR2OGR version:  both 3.4 andf 3.6 dev.
>
>
>
>
> --
> Med venlig hilsen / Kind regards
>
> Bo Victor Thomsen
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


-- 
Richard W. Greenwood
www.greenwoodmap.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220725/5c6e9da3/attachment.htm>

From hugues.francois at inrae.fr  Mon Jul 25 06:52:05 2022
From: hugues.francois at inrae.fr (Hugues =?utf-8?Q?Fran=C3=A7ois?=)
Date: Mon, 25 Jul 2022 15:52:05 +0200 (CEST)
Subject: [gdal-dev] New behaviour of "PROMOTE_TO_MULTI" ?
In-Reply-To: <CAHBySPYmUy5Dua+joHLmd79r2GbYXPLafUUFj6TMQm+TZbKx1w@mail.gmail.com>
References: <a973b3b2-47a7-f3eb-e4e5-ecd647405807@gmail.com>
 <CAHBySPYmUy5Dua+joHLmd79r2GbYXPLafUUFj6TMQm+TZbKx1w@mail.gmail.com>
Message-ID: <742711968.14136783.1658757125530.JavaMail.zimbra@inrae.fr>

Hi, 

I guess you should either 
=> drop the created table prior to launch the ogr2ogr command with the -nlt PROMOTE_TO_MULTI switch 
=> or maually alter the existing table: ALTER TABLE schema.table ALTER COLUMN geom TYPE geometry(MultiPolygon, SRID) using ST_MULTI(geom) 

HTH, 
Hug 



De: "Richard Greenwood" <richard.greenwood at gmail.com> 
?: "Bo Victor Thomsen" <bo.victor.thomsen at gmail.com> 
Cc: "gdal dev" <gdal-dev at lists.osgeo.org> 
Envoy?: Lundi 25 Juillet 2022 15:32:35 
Objet: Re: [gdal-dev] New behaviour of "PROMOTE_TO_MULTI" ? 

Have you tried -nlt MultiPolygon? 

On Mon, Jul 25, 2022 at 2:54 AM Bo Victor Thomsen < [ mailto:bo.victor.thomsen at gmail.com | bo.victor.thomsen at gmail.com ] > wrote: 





I have a MapInfo .tab file containing polygons, both simple and multipolygons (and only polygons). 

Using this command: (all ogr2ogr commands are one-liners, but examples are split for lucidity) 


ogr2ogr 
--config PG_USE_COPY yes 
-progress 
-lco OVERWRITE=YES 
-dim XY 
-f "PostgreSQL" PG:"host=localhost port=5432 user=*** password=*** dbname=geodata" 
FREDSKOV.TAB 


will (correctly) create a table in Postgres of PostGIS type "Geometry" 


If I change the command to: 

ogr2ogr 
--config PG_USE_COPY yes 
-progress 
-lco OVERWRITE=YES 
-dim XY 
-nlt PROMOTE_TO_MULTI 
-f "PostgreSQL" PG:"host=localhost port=5432 user=*** password=*** dbname=geodata" 
FREDSKOV.TAB 

I would expect the table to change the PostGIS type to "MultiPolygon". However it still is registered as "Geometry". 


Checking the table using SQL command: 

SELECT ST_geometrytype(wkb_geometry), count(*) FROM mat.fredskov group by 1 

affirms, that all geometries now is of type "ST_MultiPolygon". 

AFAIK, this is a new behaviour. Or what ? 


Postgres/Postgis version : 13.2, 3.1 


OGR2OGR version: both 3.4 andf 3.6 dev. 









-- 
Med venlig hilsen / Kind regards

Bo Victor Thomsen 
_______________________________________________ 
gdal-dev mailing list 
[ mailto:gdal-dev at lists.osgeo.org | gdal-dev at lists.osgeo.org ] 
[ https://lists.osgeo.org/mailman/listinfo/gdal-dev | https://lists.osgeo.org/mailman/listinfo/gdal-dev ] 





-- 
Richard W. Greenwood 
[ http://www.greenwoodmap.com/ | www.greenwoodmap.com ] 


[Fichier texte:ATT00001] 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220725/003193ec/attachment.htm>

From Matt.Wilkie at yukon.ca  Mon Jul 25 09:48:32 2022
From: Matt.Wilkie at yukon.ca (Matt.Wilkie at yukon.ca)
Date: Mon, 25 Jul 2022 16:48:32 +0000
Subject: [gdal-dev] JPEG compressed COGs nodata
In-Reply-To: <CALtm4h0xzH+dRyWxVojsrWAqchwNw+0BEFDOpYTJEhr9QuMXPQ@mail.gmail.com>
References: <CALtm4h3miTRzjCj_j+QM0o-p_X_+eVU9pb5+0646VvQzdJErVQ@mail.gmail.com>
 <CALtm4h0xzH+dRyWxVojsrWAqchwNw+0BEFDOpYTJEhr9QuMXPQ@mail.gmail.com>
Message-ID: <803552dd0058430fae6ac24bc59b2526@yukon.ca>

For those not wanting or needing to take the processing hit of running nearblack, use gdalwarp and -dstalpha to create the alpha channel, and use intermediate VRT to save space and more time. Something like this:

gdalwarp -srcnodata 0 -dstalpha -of vrt source.tif xx-interim.vrt

gdal_translate -of COG {...} xx-interim.vrt final.tif


-Matt

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Travis Kirstine
Sent: July 22, 2022 9:04 AM
To: gdal dev <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] JPEG compressed COGs nodata


You don't often get email from traviskirstine at gmail.com<mailto:traviskirstine at gmail.com>. Learn why this is important<https://aka.ms/LearnAboutSenderIdentification>

To answer my own question I believe the answer is that you need to create an alpha band when working with RGB datasets to have JPEG compressed COGs without compression artifacts in the nodata areas.  Creating a internal mask on the source data may work as well but I haven't tried.

# add a alpha band using the nearblack utility
nearblack -setalpha rgb_nodata.tif -o rgba.tif
# create the COG
gdal_translate -of COG  -co COMPRESS=JPEG -co TILING_SCHEME=GoogleMapsCompatible -co NUM_THREADS=ALL_CPUS -co BIGTIFF=YES rgba.tif cog.tif

Regards




On Tue, 19 Jul 2022 at 15:19, Travis Kirstine <traviskirstine at gmail.com<mailto:traviskirstine at gmail.com>> wrote:
I've been trying to create a COG with JPEG compression with transparent nodata values without much success.  Is this possible without creating a secondary mask?

Any hints?

Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220725/a03d6f99/attachment-0001.htm>

From aborruso at gmail.com  Tue Jul 26 02:38:50 2022
From: aborruso at gmail.com (andy)
Date: Tue, 26 Jul 2022 11:38:50 +0200
Subject: [gdal-dev] JPEGLSGetErrorAsString error compiling GDAL
Message-ID: <CAHEdGZOYA5Jt85nGjzBzJg+4jEuvnknnLS7Y0mFfbUv3njMDNQ@mail.gmail.com>

Hi,
compiling gdal 2.4.4, I have this error.

How to fix it?

Thank you

jpeglsdataset.cpp: In function ?const char*
JPEGLSGetErrorAsString(CharlsApiResultType)?:
jpeglsdataset.cpp:125:35: error: ?ImageTypeNotSupported? is not a member of
?CharlsApiResultType? {aka ?charls::jpegls_errc?}
  125 |         case CharlsApiResultType::ImageTypeNotSupported: return
"ImageTypeNotSupported";
      |                                   ^~~~~~~~~~~~~~~~~~~~~
jpeglsdataset.cpp:126:35: error: ?UnsupportedBitDepthForTransform? is not a
member of ?CharlsApiResultType? {aka ?charls::jpegls_errc?}; did you mean
?UnsupportedColorTransform??
  126 |         case CharlsApiResultType::UnsupportedBitDepthForTransform:
return "UnsupportedBitDepthForTransform";
      |                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                   UnsupportedColorTransform
jpeglsdataset.cpp: In member function ?CPLErr JPEGLSDataset::Uncompress()?:
jpeglsdataset.cpp:319:76: warning: ?CharlsApiResultType JpegLsDecode(void*,
size_t, const void*, size_t, const JlsParameters*, char*)? is deprecated:
Functionality will be removed in the next major version, use
CHARLS_NO_DEPRECATED_WARNING to suppress this deprecation.
[-Wdeprecated-declarations]
  319 |                             pabyCompressedData, nFileSize, nullptr,
nullptr);
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220726/d280fbd2/attachment.htm>

From even.rouault at spatialys.com  Tue Jul 26 04:59:48 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Jul 2022 13:59:48 +0200
Subject: [gdal-dev] JPEGLSGetErrorAsString error compiling GDAL
In-Reply-To: <CAHEdGZOYA5Jt85nGjzBzJg+4jEuvnknnLS7Y0mFfbUv3njMDNQ@mail.gmail.com>
References: <CAHEdGZOYA5Jt85nGjzBzJg+4jEuvnknnLS7Y0mFfbUv3njMDNQ@mail.gmail.com>
Message-ID: <080583cc-edfc-1155-d507-d85473b01806@spatialys.com>

If you don't need JPEGLS support, ./configure --without-charls

If you need it, try GDAL 3.4.3 with is the latest GDAL version having 
support for CharLS

Le 26/07/2022 ? 11:38, andy a ?crit?:
> Hi,
> compiling?gdal 2.4.4, I have this error.
>
> How to fix it?
>
> Thank you
>
> jpeglsdataset.cpp: In function ?const char* 
> JPEGLSGetErrorAsString(CharlsApiResultType)?:
> jpeglsdataset.cpp:125:35: error: ?ImageTypeNotSupported? is not a 
> member of ?CharlsApiResultType? {aka ?charls::jpegls_errc?}
> ? 125 | ? ? ? ? case CharlsApiResultType::ImageTypeNotSupported: 
> return "ImageTypeNotSupported";
> ? ? ? | ^~~~~~~~~~~~~~~~~~~~~
> jpeglsdataset.cpp:126:35: error: ?UnsupportedBitDepthForTransform? is 
> not a member of ?CharlsApiResultType? {aka ?charls::jpegls_errc?}; did 
> you mean ?UnsupportedColorTransform??
> ? 126 | ? ? ? ? case 
> CharlsApiResultType::UnsupportedBitDepthForTransform: return 
> "UnsupportedBitDepthForTransform";
> ? ? ? | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> ? ? ? | UnsupportedColorTransform
> jpeglsdataset.cpp: In member function ?CPLErr 
> JPEGLSDataset::Uncompress()?:
> jpeglsdataset.cpp:319:76: warning: ?CharlsApiResultType 
> JpegLsDecode(void*, size_t, const void*, size_t, const JlsParameters*, 
> char*)? is deprecated: Functionality will be removed in the next major 
> version, use CHARLS_NO_DEPRECATED_WARNING to suppress this 
> deprecation. [-Wdeprecated-declarations]
> ? 319 | ? ? ? ? ? ? ? ? ? ? ? ? ? ? pabyCompressedData, nFileSize, 
> nullptr, nullptr);
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From aborruso at gmail.com  Tue Jul 26 06:33:20 2022
From: aborruso at gmail.com (andy)
Date: Tue, 26 Jul 2022 15:33:20 +0200
Subject: [gdal-dev] JPEGLSGetErrorAsString error compiling GDAL
In-Reply-To: <080583cc-edfc-1155-d507-d85473b01806@spatialys.com>
References: <CAHEdGZOYA5Jt85nGjzBzJg+4jEuvnknnLS7Y0mFfbUv3njMDNQ@mail.gmail.com>
 <080583cc-edfc-1155-d507-d85473b01806@spatialys.com>
Message-ID: <CAHEdGZPrjLjjn4A_aKa_dF=25iYmf6Ydjm2F1mnLT4SR3VUwgA@mail.gmail.com>

it works, thank you very much
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220726/3ea7ee5e/attachment.htm>

From matthew.savoie at colorado.edu  Tue Jul 26 12:38:58 2022
From: matthew.savoie at colorado.edu (Matthew Savoie)
Date: Tue, 26 Jul 2022 19:38:58 +0000
Subject: [gdal-dev] gdal_translate differences between versions 3.4.3 and
 3.5.1?
Message-ID: <CY1PR03MB21714B51E6FB8F2DE210FB2BE8949@CY1PR03MB2171.namprd03.prod.outlook.com>

Hi all,

I have noticed a difference in the output of gdal_translate between GDAL 3.4.3
and 3.5.1 and I can't see in the changelog that I should see a difference.
This is just a request to see if I missed something or if there might be change
not described in gdal_translate between versions 3.4.3 and 3.5.1.

I have a netcdf4/hdf5 file (test.nc) that I extract a variable and turn into a geotiff with the gdal_translate command:

> `gdal_translate -a_srs EPSG:4326 NETCDF:"./test.nc":analysed_sst test_nc2tiff.tif`

I have run this command with gdal 3.4.3 and gdal 3.5.1 and get different output files.

The difference in the file metadata between the two versions is that using gdal
3.4.3: there is a value for `Origin` and `Pixel Size` and the Corner
Coordinates are in Latitude and longitude.  When I use gdal 3.5.1 there are no metadata
values for Origin or Pixel Size, and the Corner Coordinates look to be in grid
cells.

3.4.3 output:
   ...
   Origin = (-179.995005493240370,89.994997863650838)
   Pixel Size = (0.010000000152592,-0.009999999762615)
   ...
   Corner Coordinates:
   Upper Left  (-179.9950055,  89.9949979) (179d59'42.02"W, 89d59'41.99"N)
   Lower Left  (-179.9950055, -89.9949979) (179d59'42.02"W, 89d59'41.99"S)
   Upper Right ( 180.0050000,  89.9949979) (180d 0'18.00"E, 89d59'41.99"N)
   Lower Right ( 180.0050000, -89.9949979) (180d 0'18.00"E, 89d59'41.99"S)
   Center      (   0.0049973,   0.0000000) (  0d 0'17.99"E,  0d 0' 0.01"N)
   ...

3.5.1 output:
   ...
   Corner Coordinates:
   Upper Left  (    0.0,    0.0)
   Lower Left  (    0.0,17999.0)
   Upper Right (36000.0,    0.0)
   Lower Right (36000.0,17999.0)
   Center      (18000.0, 8999.5)
   ...

   I'm wondering if this is a bug or a feature.  I'm happy to provide a sample file or admit my ignorance if I should have known this was a new change.

Thanks,

Matt Savoie

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220726/6b70bb4b/attachment.htm>

From andrew at aitchison.me.uk  Tue Jul 26 23:14:47 2022
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Wed, 27 Jul 2022 07:14:47 +0100 (BST)
Subject: [gdal-dev] gdal_translate differences between versions 3.4.3
 and 3.5.1?
In-Reply-To: <CY1PR03MB21714B51E6FB8F2DE210FB2BE8949@CY1PR03MB2171.namprd03.prod.outlook.com>
References: <CY1PR03MB21714B51E6FB8F2DE210FB2BE8949@CY1PR03MB2171.namprd03.prod.outlook.com>
Message-ID: <d0fcaa98-26e4-2a47-95e5-19f815535cee@aitchison.me.uk>

On Tue, 26 Jul 2022, Matthew Savoie wrote:

> Hi all,
>
> I have noticed a difference in the output of gdal_translate between GDAL 3.4.3
> and 3.5.1 and I can't see in the changelog that I should see a difference.
> This is just a request to see if I missed something or if there might be change
> not described in gdal_translate between versions 3.4.3 and 3.5.1.
>
> I have a netcdf4/hdf5 file (test.nc) that I extract a variable and turn into a geotiff with the gdal_translate command:
>
>> `gdal_translate -a_srs EPSG:4326 NETCDF:"./test.nc":analysed_sst test_nc2tiff.tif`
>
> I have run this command with gdal 3.4.3 and gdal 3.5.1 and get different output files.

Can you compare the output of the two versions of gdalinfo ?
This should determine whether the difference is when reading or writing.

> The difference in the file metadata between the two versions is that using gdal
> 3.4.3: there is a value for `Origin` and `Pixel Size` and the Corner
> Coordinates are in Latitude and longitude.  When I use gdal 3.5.1 there are no metadata
> values for Origin or Pixel Size, and the Corner Coordinates look to be in grid
> cells.
>
> 3.4.3 output:
>   ...
>   Origin = (-179.995005493240370,89.994997863650838)
>   Pixel Size = (0.010000000152592,-0.009999999762615)
>   ...
>   Corner Coordinates:
>   Upper Left  (-179.9950055,  89.9949979) (179d59'42.02"W, 89d59'41.99"N)
>   Lower Left  (-179.9950055, -89.9949979) (179d59'42.02"W, 89d59'41.99"S)
>   Upper Right ( 180.0050000,  89.9949979) (180d 0'18.00"E, 89d59'41.99"N)
>   Lower Right ( 180.0050000, -89.9949979) (180d 0'18.00"E, 89d59'41.99"S)
>   Center      (   0.0049973,   0.0000000) (  0d 0'17.99"E,  0d 0' 0.01"N)
>   ...
>
> 3.5.1 output:
>   ...
>   Corner Coordinates:
>   Upper Left  (    0.0,    0.0)
>   Lower Left  (    0.0,17999.0)
>   Upper Right (36000.0,    0.0)
>   Lower Right (36000.0,17999.0)
>   Center      (18000.0, 8999.5)
>   ...
>
>   I'm wondering if this is a bug or a feature.  I'm happy to provide a sample file or admit my ignorance if I should have known this was a new change.
>
> Thanks,
>
> Matt Savoie
>
>

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From mcalzado at carto.com  Wed Jul 27 02:39:37 2022
From: mcalzado at carto.com (Moises Calzado)
Date: Wed, 27 Jul 2022 11:39:37 +0200
Subject: [gdal-dev] Ogr2ogr taking too much time to process a MapInfo TAB
 file
Message-ID: <CAObRW4TKO05RkhMqVLXKa_PLH++6cs7rzWiXYVf-suU4XFcoZQ@mail.gmail.com>

Hi everyone!

We're using ogr2ogr to convert MapInfo TAB files into CSV format using the
following command:

ogr2ogr -f CSV -skipfailures -makevalid /vsistdout/ /vsizip/onLDU.zip  -oo
> AUTODETECT_TYPE=YES -lco CREATE_CSVT=YES > test_2.csv


The file weights ?200 MB and the process is taking too much time to finish
(almost 20 min), so we don't know if we're doing something wrong regarding
the command that we launch.

[image: Screenshot 2022-07-20 at 12.55.14.png]

However, if we launch the same command against the .tab file instead of
using the vsizip virtual file system, it takes less than 30 seconds to
complete.

Have you ever seen something like this? Do you know if it's expected that
it takes too much time to process this kind of files, or we're doing
something wrong?

Thanks so much for your help in advance,
Regards!
-- 
*Moises Calzado*

Support Engineer

(US) +1 917 463 3232 | (ES) +34 911 165 823 | mcalzado at carto.com
<https://spatial-data-science-conference.com/2022/newyork/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/a1e48881/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot 2022-07-20 at 12.55.14.png
Type: image/png
Size: 22063 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/a1e48881/attachment-0001.png>

From aborruso at gmail.com  Wed Jul 27 06:25:41 2022
From: aborruso at gmail.com (andy)
Date: Wed, 27 Jul 2022 15:25:41 +0200
Subject: [gdal-dev] Compiling GDAL for Linux and enabling PGeo format
In-Reply-To: <CAHEdGZNyHAzN2LVs2mWFaj1r4Nb7qzHq_Y9kR0ezueStni_orw@mail.gmail.com>
References: <CAHEdGZNyHAzN2LVs2mWFaj1r4Nb7qzHq_Y9kR0ezueStni_orw@mail.gmail.com>
Message-ID: <CAHEdGZM0n03S-OA5o5WfM+D6Dz84rVodtdGKZgUwJJgi8OKuQQ@mail.gmail.com>

Hi,
I have solved it, adding "--with-pgeo=yes"

Thank you to  Richard Greenwood for the private email about it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/8d6e59db/attachment.htm>

From aborruso at gmail.com  Wed Jul 27 06:35:20 2022
From: aborruso at gmail.com (andy)
Date: Wed, 27 Jul 2022 15:35:20 +0200
Subject: [gdal-dev] How to read a PGeo source file using GDAL 2.4
Message-ID: <CAHEdGZPqVX91HVCh97b8s5p_wDJUb2_yiK=cHqxakXka0c+2Dw@mail.gmail.com>

Hi,
I have compiled GDAL to enable PGeo, and now I have it in --formats.

But if I run "ogrinfo PGeo:input.mdb", I have

ERROR 1: PGeo: MDB Tools driver not found!
Warning 1: Unable to install MDB driver for ODBC, MDB access may not
supported.
ERROR 1: Unable to initialize ODBC connection to DSN for input.mdb,
ERROR 1: PGeo: MDB Tools driver not found!
Warning 1: Unable to install MDB driver for ODBC, MDB access may not
supported.
ERROR 1: Unable to initialize ODBC connection to DSN for input.mdb


I have already installed "sudo apt-get install unixodbc odbc-mdbtools".

This is my .odbc.ini file

[sample_pgeo]
Description = Sample PGeo Database
Driver      = Microsoft Access Driver (*.mdb)
Database    = /home/aborruso/geo/input.mdb
Trace       = Yes
TraceFile   = /home/aborruso/odbc.log

I have the same error running "ogrinfo PGeo:sample_pgeo".

How to solve this problem?

Thank you
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/f13d431c/attachment.htm>

From matthew.savoie at colorado.edu  Wed Jul 27 08:03:47 2022
From: matthew.savoie at colorado.edu (Matthew Savoie)
Date: Wed, 27 Jul 2022 15:03:47 +0000
Subject: [gdal-dev] gdal_translate differences between versions 3.4.3
 and 3.5.1?
In-Reply-To: <d0fcaa98-26e4-2a47-95e5-19f815535cee@aitchison.me.uk>
References: <CY1PR03MB21714B51E6FB8F2DE210FB2BE8949@CY1PR03MB2171.namprd03.prod.outlook.com>
 <d0fcaa98-26e4-2a47-95e5-19f815535cee@aitchison.me.uk>
Message-ID: <CY1PR03MB217128271B0B1AAAA8407AB0E8979@CY1PR03MB2171.namprd03.prod.outlook.com>

Hi Andrew,

> I have run this command with gdal 3.4.3 and gdal 3.5.1 and get different output files.

Can you compare the output of the two versions of gdalinfo ?
This should determine whether the difference is when reading or writing.
Good idea, I did that and there is no difference in the output of gdalinfo between 3.4.3 and 3.5.1 on the test.nc file.

Thanks,

Matt Savoie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/359cf097/attachment.htm>

From even.rouault at spatialys.com  Wed Jul 27 08:50:12 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Jul 2022 17:50:12 +0200
Subject: [gdal-dev] gdal_translate differences between versions 3.4.3
 and 3.5.1?
In-Reply-To: <CY1PR03MB217128271B0B1AAAA8407AB0E8979@CY1PR03MB2171.namprd03.prod.outlook.com>
References: <CY1PR03MB21714B51E6FB8F2DE210FB2BE8949@CY1PR03MB2171.namprd03.prod.outlook.com>
 <d0fcaa98-26e4-2a47-95e5-19f815535cee@aitchison.me.uk>
 <CY1PR03MB217128271B0B1AAAA8407AB0E8979@CY1PR03MB2171.namprd03.prod.outlook.com>
Message-ID: <df42bfc1-1bc5-fca9-25e3-22464b2fed00@spatialys.com>


Le 27/07/2022 ? 17:03, Matthew Savoie a ?crit?:
>
> Hi Andrew,
>
> > I have run this command with gdal 3.4.3 and gdal 3.5.1 and get 
> different output files.
>
> Can you compare the output of the two versions of gdalinfo ?
> This should determine whether the difference is when reading or writing.
>
> Good idea, I did that and there is no difference in the output of 
> gdalinfo between 3.4.3 and 3.5.1 on the test.nc file.
>
Are you 100% sure about that ? It is highly unlikely that the difference 
would be on the side of the output driver (GeoTIFF), and much more 
likely on the reading side (netCDF). There have been adjustments 
recently in the netCDF driver to be a bit more restrictive regarding 
exposing geotransforms (the driver could expose non relevant 
geotransforms), that have had side effects on some files where they 
could be legitimate.

You can likely workaround the issue by definining the configuration 
option / environment variable GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS to 
YES (cf https://gdal.org/drivers/raster/netcdf.html#georeference). Buf 
if you can provide a link to the file that could be used to examine 
further whether the file is defective (an expected attribute missing), 
or the driver could be enhanced to recognize it better.

Even

> Thanks,
>
> Matt Savoie
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/15f51bf6/attachment.htm>

From even.rouault at spatialys.com  Wed Jul 27 08:55:28 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Jul 2022 17:55:28 +0200
Subject: [gdal-dev] Ogr2ogr taking too much time to process a MapInfo
 TAB file
In-Reply-To: <CAObRW4TKO05RkhMqVLXKa_PLH++6cs7rzWiXYVf-suU4XFcoZQ@mail.gmail.com>
References: <CAObRW4TKO05RkhMqVLXKa_PLH++6cs7rzWiXYVf-suU4XFcoZQ@mail.gmail.com>
Message-ID: <98136954-c8ea-4586-686a-4cb99cfede7e@spatialys.com>

Moises,

I've not reviewed in depth the MITAB driver, but reading from a .tab 
file may require random access, and it is thus not surprising that 
reading from a compressed file may exhibit poor performance. You might 
try to set the VSI_CACHE config option / env variable to YES, but no 
guarantee this will help for your use case.

Even

Le 27/07/2022 ? 11:39, Moises Calzado via gdal-dev a ?crit?:
> Hi everyone!
>
> We're using ogr2ogr to convert MapInfo TAB files into CSV format using 
> the following command:
>
>     ogr2ogr -f CSV -skipfailures -makevalid /vsistdout/
>     /vsizip/onLDU.zip ?-oo AUTODETECT_TYPE=YES -lco CREATE_CSVT=YES >
>     test_2.csv
>
>
> The file weights ?200?MB and the process is taking too much?time to 
> finish (almost 20?min), so we don't know if we're doing something 
> wrong regarding the command that we launch.
> Screenshot 2022-07-20 at 12.55.14.png
> However, if we launch the same command against?the .tab file instead 
> of using the vsizip virtual file system, it takes less than 30 seconds 
> to complete.
>
> Have you ever seen something like this? Do you know if it's expected 
> that it takes too much time to process this kind of files, or we're 
> doing something wrong?
>
> Thanks so much for your help in advance,
> Regards!
> -- 
> *Moises Calzado*
>
> Support Engineer
>
> (US) +1 917 463 3232 | (ES) +34 911 165 823 | mcalzado at carto.com
>
> <https://spatial-data-science-conference.com/2022/newyork/>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/db57ae98/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot%202022-07-20%20at%2012.55.14.png
Type: image/png
Size: 22063 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/db57ae98/attachment-0001.png>

From matthew.savoie at colorado.edu  Wed Jul 27 12:19:51 2022
From: matthew.savoie at colorado.edu (Matthew Savoie)
Date: Wed, 27 Jul 2022 19:19:51 +0000
Subject: [gdal-dev] gdal_translate differences between versions 3.4.3
 and 3.5.1?
In-Reply-To: <df42bfc1-1bc5-fca9-25e3-22464b2fed00@spatialys.com>
References: <CY1PR03MB21714B51E6FB8F2DE210FB2BE8949@CY1PR03MB2171.namprd03.prod.outlook.com>
 <d0fcaa98-26e4-2a47-95e5-19f815535cee@aitchison.me.uk>
 <CY1PR03MB217128271B0B1AAAA8407AB0E8979@CY1PR03MB2171.namprd03.prod.outlook.com>
 <df42bfc1-1bc5-fca9-25e3-22464b2fed00@spatialys.com>
Message-ID: <CY1PR03MB2171361248F74155BEB41D00E8979@CY1PR03MB2171.namprd03.prod.outlook.com>

Hi Even,

> I have run this command with gdal 3.4.3 and gdal 3.5.1 and get different output files.

Can you compare the output of the two versions of gdalinfo ?
This should determine whether the difference is when reading or writing.
Good idea, I did that and there is no difference in the output of gdalinfo between 3.4.3 and 3.5.1 on the test.nc file.

Are you 100% sure about that ? It is highly unlikely that the difference would be on the side of the output driver (GeoTIFF), and much more likely on the reading side (netCDF). There have been adjustments recently in the netCDF driver to be a bit more restrictive regarding exposing geotransforms (the driver could expose non relevant geotransforms), that have had side effects on some files where they could be legitimate.

You can likely workaround the issue by definining the configuration option / environment variable GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS to YES (cf https://gdal.org/drivers/raster/netcdf.html#georeference).



Yes, I rechecked the output of gdalinfo on the file.  Here is a link to my shared drive.
gdal-test<https://o365coloradoedu-my.sharepoint.com/:f:/g/personal/savoie_colorado_edu/EjihTcOSuZdJiZiiJmXkEiABHpbXHPFab6MbnjSfyfDLfw?e=qhQYmF>

The files are the test.nc file (which is in fact a copy of a dataset file 20210429090000-JPL-L4_GHRSST-SSTfnd-MUR-GLOB-v02.0-fv04.1.nc)
test.nc.dump which is the output of ncdump -h on the file
gdal.3.4.3.out and gdal3.5.1.out which are the result of two commands gdalinfo ?version and gdalinfo test.nc. You can see the only difference  is the version.

I will look at the config option to see how to get around this.  Thanks.

Matt


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220727/f406cbf3/attachment.htm>

From dmorissette at mapgears.com  Thu Jul 28 07:25:37 2022
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Thu, 28 Jul 2022 10:25:37 -0400
Subject: [gdal-dev] Ogr2ogr taking too much time to process a MapInfo
 TAB file
In-Reply-To: <98136954-c8ea-4586-686a-4cb99cfede7e@spatialys.com>
References: <CAObRW4TKO05RkhMqVLXKa_PLH++6cs7rzWiXYVf-suU4XFcoZQ@mail.gmail.com>
 <98136954-c8ea-4586-686a-4cb99cfede7e@spatialys.com>
Message-ID: <7b872c2a-1c02-0fb7-3fd7-ab07260a3e70@mapgears.com>

I confirm that the structure of the TAB dataset uses 512 bytes data 
blocks organized in a tree structure, so reading from the file implies 
lots of random access over the whole file even if you read the features 
sequentially since a single feature is stored in multiple data blocks of 
various types (feature header blocks, feature coordinate blocks, etc.).? 
It would be interesting to know if VSI_CACHE as suggested by Even will help.

Daniel

On 2022-07-27 11:55, Even Rouault wrote:
>
> Moises,
>
> I've not reviewed in depth the MITAB driver, but reading from a .tab 
> file may require random access, and it is thus not surprising that 
> reading from a compressed file may exhibit poor performance. You might 
> try to set the VSI_CACHE config option / env variable to YES, but no 
> guarantee this will help for your use case.
>
> Even
>
> Le 27/07/2022 ? 11:39, Moises Calzado via gdal-dev a ?crit?:
>> Hi everyone!
>>
>> We're using ogr2ogr to convert MapInfo TAB files into CSV format 
>> using the following command:
>>
>>     ogr2ogr -f CSV -skipfailures -makevalid /vsistdout/
>>     /vsizip/onLDU.zip ?-oo AUTODETECT_TYPE=YES -lco CREATE_CSVT=YES >
>>     test_2.csv
>>
>>
>> The file weights ?200?MB and the process is taking too much?time to 
>> finish (almost 20?min), so we don't know if we're doing something 
>> wrong regarding the command that we launch.
>> Screenshot 2022-07-20 at 12.55.14.png
>> However, if we launch the same command against?the .tab file instead 
>> of using the vsizip virtual file system, it takes less than 30 
>> seconds to complete.
>>
>> Have you ever seen something like this? Do you know if it's expected 
>> that it takes too much time to process this kind of files, or we're 
>> doing something wrong?
>>
>> Thanks so much for your help in advance,
>> Regards!
>> -- 
>> *Moises Calzado*
>>
>> Support Engineer
>>
>> (US) +1 917 463 3232 | (ES) +34 911 165 823 | mcalzado at carto.com
>>
>> <https://spatial-data-science-conference.com/2022/newyork/>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220728/e2dd361f/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Screenshot%202022-07-20%20at%2012.55.14.png
Type: image/png
Size: 22063 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220728/e2dd361f/attachment-0001.png>

From even.rouault at spatialys.com  Thu Jul 28 11:29:00 2022
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 28 Jul 2022 20:29:00 +0200
Subject: [gdal-dev] gdal_translate differences between versions 3.4.3
 and 3.5.1?
In-Reply-To: <CY1PR03MB2171361248F74155BEB41D00E8979@CY1PR03MB2171.namprd03.prod.outlook.com>
References: <CY1PR03MB21714B51E6FB8F2DE210FB2BE8949@CY1PR03MB2171.namprd03.prod.outlook.com>
 <d0fcaa98-26e4-2a47-95e5-19f815535cee@aitchison.me.uk>
 <CY1PR03MB217128271B0B1AAAA8407AB0E8979@CY1PR03MB2171.namprd03.prod.outlook.com>
 <df42bfc1-1bc5-fca9-25e3-22464b2fed00@spatialys.com>
 <CY1PR03MB2171361248F74155BEB41D00E8979@CY1PR03MB2171.namprd03.prod.outlook.com>
Message-ID: <d8920656-af54-34e9-d517-2d82e0f6181d@spatialys.com>

Matt,

The output of gdalinfo that matters here was the one on the subdataset 
you transform, so

gdalinfo NETCDF:"./test.nc":analysed_sst

I've a very poor Internet connection for the next 10 days so can't 
download the full .nc file yet, but from the .ncdump file you provided, 
I believe I managed to reproduce your issue

I've queued a fix in https://github.com/OSGeo/gdal/pull/6129

There's no much workaround I can think of, apart removing the 
'coordinates' attribute on the sst_anomaly variable.

Even

Le 27/07/2022 ? 21:19, Matthew Savoie a ?crit?:
>
> Hi Even,
>
>     > I have run this command with gdal 3.4.3 and gdal 3.5.1 and get
>     different output files.
>
>     Can you compare the output of the two versions of gdalinfo ?
>     This should determine whether the difference is when reading or
>     writing.
>
>     Good idea, I did that and there is no difference in the output of
>     gdalinfo between 3.4.3 and 3.5.1 on the test.nc file.
>
> Are you 100% sure about that ? It is highly unlikely that the 
> difference would be on the side of the output driver (GeoTIFF), and 
> much more likely on the reading side (netCDF). There have been 
> adjustments recently in the netCDF driver to be a bit more restrictive 
> regarding exposing geotransforms (the driver could expose non relevant 
> geotransforms), that have had side effects on some files where they 
> could be legitimate.
>
> You can likely workaround the issue by definining the configuration 
> option / environment variable GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS 
> to YES (cf https://gdal.org/drivers/raster/netcdf.html#georeference).
>
> Yes, I rechecked the output of gdalinfo on the file.? Here is a link 
> to my shared drive.
>
> gdal-test 
> <https://o365coloradoedu-my.sharepoint.com/:f:/g/personal/savoie_colorado_edu/EjihTcOSuZdJiZiiJmXkEiABHpbXHPFab6MbnjSfyfDLfw?e=qhQYmF>
>
> The files are the test.nc file (which is in fact a copy of a dataset 
> file 20210429090000-JPL-L4_GHRSST-SSTfnd-MUR-GLOB-v02.0-fv04.1.nc)
>
> test.nc.dump which is the output of ncdump -h on the file
>
> gdal.3.4.3.out and gdal3.5.1.out which are the result of two commands 
> gdalinfo ?version and gdalinfo test.nc. You can see the only 
> difference ?is the version.
>
> I will look at the config option to see how to get around this.? Thanks.
>
> Matt
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220728/44c43370/attachment.htm>

From bo.victor.thomsen at gmail.com  Sun Jul 31 01:00:11 2022
From: bo.victor.thomsen at gmail.com (Bo Victor Thomsen)
Date: Sun, 31 Jul 2022 10:00:11 +0200
Subject: [gdal-dev] New behaviour of "PROMOTE_TO_MULTI" ?
In-Reply-To: <742711968.14136783.1658757125530.JavaMail.zimbra@inrae.fr>
References: <a973b3b2-47a7-f3eb-e4e5-ecd647405807@gmail.com>
 <CAHBySPYmUy5Dua+joHLmd79r2GbYXPLafUUFj6TMQm+TZbKx1w@mail.gmail.com>
 <742711968.14136783.1658757125530.JavaMail.zimbra@inrae.fr>
Message-ID: <bc65b462-c77a-5b58-21fe-56218dbe7a91@gmail.com>

Thanks to Hugues and Richard for responding to my questions.

However, I'm using the ogr2ogr inside a DOS .cmd file like this:

for /R D:\tmp %%f in (*.tab) do ogr2ogr --config PG_USE_COPY yes 
-progress -lco OVERWRITE=YES -lco SCHEMA=mat -dim XY -a_srs EPSG:25832 
-f "PostgreSQL" PG:"host=localhost port=5432 user=*** password=*** 
dbname=geodata" "%%f"

I.e. iterating through a directory plus sub-directories and converting 
every found tab file into a table into schema "mat" using ogr2ogr

The tab files contains either points, linestrings or polygons. Polygons 
and linestrings can be a mix of simple and multi-objects. Each tab-file 
contains only one main type.

So I can't use "-nlt multipolygons". And the point of this project was 
to get rid of a fairly complex postgres based function that checks an 
uploaded table and change its geometry type using "alter table ... using 
st_multi(geom)" type of commands.

That was why I tried to use "-nlt promote_to_multi". According to this 
mail:

https://lists.osgeo.org/pipermail/gdal-dev/2012-September/034128.html

Even Rouault describes the exact behaviour I'm looking for: Simple 
linestrings / polygons will be changed to multi types and points will be 
left alone. And the geometry type will be set to a "multi*" as needed.

What actually happens is that linestrings, polygons /and/ points all are 
changed to multi type, but the geometry type remains "Geometry".


Med venlig hilsen / Kind regards

Bo Victor Thomsen

Den 25-07-2022 kl. 15:52 skrev Hugues Fran?ois:
> Hi,
>
> I guess you should either
> => drop the created table prior to launch the ogr2ogr command with the 
> -nlt PROMOTE_TO_MULTI switch
> => or maually alter the existing table: ALTER TABLE schema.table ALTER 
> COLUMN geom TYPE geometry(MultiPolygon, SRID) using ST_MULTI(geom)
>
> HTH,
> Hug
>
>
> ------------------------------------------------------------------------
> *De: *"Richard Greenwood" <richard.greenwood at gmail.com>
> *?: *"Bo Victor Thomsen" <bo.victor.thomsen at gmail.com>
> *Cc: *"gdal dev" <gdal-dev at lists.osgeo.org>
> *Envoy?: *Lundi 25 Juillet 2022 15:32:35
> *Objet: *Re: [gdal-dev] New behaviour of "PROMOTE_TO_MULTI" ?
>
> Have you tried -nlt MultiPolygon?
>
> On Mon, Jul 25, 2022 at 2:54 AM Bo Victor Thomsen 
> <bo.victor.thomsen at gmail.com> wrote:
>
>     I have a MapInfo .tab file containing polygons, both simple and
>     multipolygons (and only polygons).
>
>     Using this command: (all ogr2ogr commands are one-liners, but
>     examples are split for lucidity)
>
>     ogr2ogr
>     ? --config PG_USE_COPY yes
>     ? -progress
>     ? -lco OVERWRITE=YES
>     ? -dim XY
>     ? -f "PostgreSQL" PG:"host=localhost port=5432 user=***
>     password=*** dbname=geodata"
>     ? FREDSKOV.TAB
>
>     will (correctly) create a table in Postgres of PostGIS type
>     "Geometry"
>
>     If I change the command to:
>
>     ogr2ogr
>     ? --config PG_USE_COPY yes
>     ? -progress
>     ? -lco OVERWRITE=YES
>     ? -dim XY
>     *? -nlt PROMOTE_TO_MULTI*
>     ? -f "PostgreSQL" PG:"host=localhost port=5432 user=***
>     password=*** dbname=geodata"
>     ? FREDSKOV.TAB
>
>     I would expect the table to change the PostGIS type to
>     "MultiPolygon". However it still is registered as "Geometry".
>
>     Checking the table using SQL command:
>
>     SELECT ST_geometrytype(wkb_geometry), count(*) FROM mat.fredskov
>     group by 1
>
>     affirms, that all geometries now is of type "ST_MultiPolygon".
>
>     AFAIK, this is a new behaviour. Or what ?
>
>     Postgres/Postgis version : 13.2,? 3.1
>
>     OGR2OGR version:? both 3.4 andf 3.6 dev.
>
>
>
>
>     -- 
>     Med venlig hilsen / Kind regards
>
>     Bo Victor Thomsen
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> -- 
> Richard W. Greenwood
> www.greenwoodmap.com <http://www.greenwoodmap.com>
>
>
> [Fichier texte:ATT00001]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220731/7c14cb8f/attachment.htm>

From seri.prashanti at gmail.com  Sun Jul 31 22:01:53 2022
From: seri.prashanti at gmail.com (prashanti seri)
Date: Mon, 1 Aug 2022 10:31:53 +0530
Subject: [gdal-dev] unable to export Mapinfo text geom- style always symbol
Message-ID: <CAB05kczBHfy743qpz03rdGGhuDa_YQNKnPgUib=3Ujf6sYsmwg@mail.gmail.com>

Team,
We are exporting a "TextPointGeometry" type feature using GDAL MapInfo
driver. Below is the pseudo code -

Driver mapInfoFileDriver = Ogr.GetDriverByName("MapInfo File");
...
Feature mapInfoFeature = CreateFeature(featureData[i].Geometry,
mapInfolayer, featureData[i].SpatialRef);

mapInfoFeature.SetStyleString($"LABEL(t:\"TT\",a: 0,c:#0000ff)");


Result checked with ogrinfo, observed that style is always SYMBOL, see
below -


Style = SYMBOL(a:0,c:#000000,s:12pt,id:"mapinfo-sym-35,ogr-sym-10")


Are we missing anything or any limitations?


Regards,
Prashanti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20220801/c55c8213/attachment.htm>

