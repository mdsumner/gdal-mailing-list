From a.pau at creaf.uab.cat  Fri Mar  1 02:29:04 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Fri, 1 Mar 2024 10:29:04 +0000
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
Message-ID: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
yesterday I updated my personal branch (soon I'll do a pull request) but before as Even suggested I'm trying to make green al Actions.
The only problem I have now is at some points on tests...

But I am missing something because I there are things I don't understand well.

Can anyone give me some new information to clarify myself?

test_ogr_basic_10
It's this INFO message (that other drivers also give) a problem?
INFO: MiraMonVector: Creation of /foo\test.pol should have failed.

This message also appears in some other drivers.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to assign FID to feature.

Al tests in Linux Builds<https://github.com/AbelPau/gdal/actions/runs/8101809119> (in Actions) are OK except Alpine, gcc 32-bit
MiraMonVector driver (the one I am testing) seems to be OK.
gcore/test_driver_metadata.py::test_metadata_dcap_yes[MiraMonVector] PASSED [ 38%]
gcore/test_driver_metadata.py::test_metadata_openoptionlist[MiraMonVector] PASSED [ 40%]
gcore/test_driver_metadata.py::test_metadata_creationoptionslist[MiraMonVector] PASSED [ 42%]
gcore/test_driver_metadata.py::test_metadata_layer_creationoptionslist[MiraMonVector] PASSED [ 42%]
gcore/test_driver_metadata.py::test_metadata_creation_field_datatypes[MiraMonVector] PASSED [ 44%]
gcore/test_driver_metadata.py::test_metadata_creation_sub_field_datatypes[MiraMonVector] PASSED [ 46%]
gcore/test_driver_metadata.py::test_metadata_alter_geom_field_defn_flags[MiraMonVector] PASSED [ 47%]
gcore/test_driver_metadata.py::test_metadata_alter_field_defn_flags[MiraMonVector] PASSED [ 48%]
gcore/test_driver_metadata.py::test_metadata_creation_field_defn_flags[MiraMonVector] PASSED [ 48%]

But
2024-02-29T20:01:51.4283306Z ogr/ogr_basic_test.py::test_ogr_basic_10 FAILED                          [  1%]

=================================== FAILURES ===================================
______________________________ test_ogr_basic_10 _______________________________

Al some point: ERROR ret code = -6
But no more clues why.

Anyone can tell me how to explore this error?
I debugged this test in windows but all seems correct.
The program '[15680] test_ogrsf.exe' has exited with code 0 (0x0).

I finally installed a linux ubuntu:22.04  in a docker and I can do some things related to tests.
When I do
python3 -m pytest -vv -p no:sugar --color=no ogr/ogr_basic_test.py::test_ogr_basic_10

After a while this error appears.
So, why?
E         INFO: OpenFileGDB: CreateFeature() at line 837 failed but without explicit error.
E         INFO: TestCreate(DXF).
E         INFO: DXF: Creation of /foo/test.
E         ERROR ret code = -9
E       assert 'ERROR' not in 'INFO: TestCreate(PCIDSK).\nINFO: PCIDSK: Creation of /foo/test.pix should have failed.\nINFO: TestCreate(netCDF).\nINFO: netCDF: Creation of /foo/test.nc should have failed.\nINFO: netCDF: Creation of /vsimem/test33.n....

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/d0eed343/attachment-0003.jpg>

From even.rouault at spatialys.com  Fri Mar  1 02:43:21 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Mar 2024 11:43:21 +0100
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>

Hi,

this looks like potentially some memory usage issue that popups 
"randomly" on some platforms. The fact that you reproduce it on your 
22.04 build is encouraging since it will make it easier to debug

try the following:

sudo apt-get install gdb valgrind
gdb --args test_ogrsf -all_drivers
run

and hopefully it will crash and give you some hints

and/or

valgrind test_ogrsf -all_drivers

Even


Le 01/03/2024 ? 11:29, Abel Pau via gdal-dev a ?crit?:
>
> Hi,
>
> yesterday I updated my personal branch (soon I?ll do a pull request) 
> but before as Even suggested I?m trying to make green al Actions.
>
> The only problem I have now is at some points on tests...
>
> But I am missing something because I there are things I don?t 
> understand well.
>
> Can anyone give me some new information to clarify myself?
>
> *test_ogr_basic_10*
>
> It?s this INFO message (that other drivers also give) a problem?
>
> INFO: MiraMonVector: Creation of /foo\test.pol should have failed.
>
> This message also appears in some other drivers.
>
> INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed 
> to assign FID to feature.
>
> Al tests in Linux Builds 
> <https://github.com/AbelPau/gdal/actions/runs/8101809119> (in Actions) 
> are OK except *Alpine, gcc 32-bit*
>
> MiraMonVector driver (the one I am testing) seems to be OK.
>
> gcore/test_driver_metadata.py::test_metadata_dcap_yes[MiraMonVector] 
> PASSED [ 38%]
>
> gcore/test_driver_metadata.py::test_metadata_openoptionlist[MiraMonVector] 
> PASSED [ 40%]
>
> gcore/test_driver_metadata.py::test_metadata_creationoptionslist[MiraMonVector] 
> PASSED [ 42%]
>
> gcore/test_driver_metadata.py::test_metadata_layer_creationoptionslist[MiraMonVector] 
> PASSED [ 42%]
>
> gcore/test_driver_metadata.py::test_metadata_creation_field_datatypes[MiraMonVector] 
> PASSED [ 44%]
>
> gcore/test_driver_metadata.py::test_metadata_creation_sub_field_datatypes[MiraMonVector] 
> PASSED [ 46%]
>
> gcore/test_driver_metadata.py::test_metadata_alter_geom_field_defn_flags[MiraMonVector] 
> PASSED [ 47%]
>
> gcore/test_driver_metadata.py::test_metadata_alter_field_defn_flags[MiraMonVector] 
> PASSED [ 48%]
>
> gcore/test_driver_metadata.py::test_metadata_creation_field_defn_flags[MiraMonVector] 
> PASSED [ 48%]
>
> But
>
> 2024-02-29T20:01:51.4283306Z ogr/ogr_basic_test.py::test_ogr_basic_10 
> FAILED ???????????????????[? 1%]
>
> =================================== FAILURES 
> ===================================
>
> ______________________________ test_ogr_basic_10 
> _______________________________
>
> Al some point: ERROR ret code = -6
>
> *But no more clues why.*
>
> Anyone can tell me how to explore this error?
>
> I debugged this test in windows but all seems correct.
>
> The program '[15680] test_ogrsf.exe' has exited with code 0 (0x0).
>
>
> I finally installed a linux ubuntu:22.04 ?in a docker and I can do 
> some things related to tests.
>
> When I do
>
> python3 -m pytest -vv -p no:sugar --color=no 
> ogr/ogr_basic_test.py::test_ogr_basic_10
>
> After a while this error appears.
>
> So, why?
>
> E???????? INFO: OpenFileGDB: CreateFeature() at line 837 failed but 
> without explicit error.
>
> E???????? INFO: TestCreate(DXF).
>
> E???????? INFO: DXF: Creation of /foo/test.
>
> *E???????? ERROR ret code = -9*
>
> E?????? assert 'ERROR' not in 'INFO: TestCreate(PCIDSK).\nINFO: 
> PCIDSK: Creation of /foo/test.pix should have failed.\nINFO: 
> TestCreate(netCDF).\nINFO: netCDF: Creation of /foo/test.nc should 
> have failed.\nINFO: netCDF: Creation of /vsimem/test33.n....
>
> *Abel Pau Garcia*
>
> *GIS developer*
>
> 	
>
> https://www.creaf.cat/sites/default/files/creaf-signature.png
>
> *a.pau at creaf.uab.cat* <mailto:a.pau at creaf.uab.cat>
>
> *Let's chat on Teams!* 
> <https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
>
> *Tel. +34 934814277*
>
> 	
>
> https://www.creaf.cat/sites/default/files/so-en-signature.png
>
> https://www.creaf.cat/sites/default/files/twitter-icon-signature.png 
> <https://twitter.com/CREAF_ecologia>https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png 
> <https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>https://www.creaf.cat/sites/default/files/youtube-icon-signature.png 
> <https://www.youtube.com/c/creafecologia>https://www.creaf.cat/sites/default/files/instagram-icon-signature.png 
> <https://www.instagram.com/CREAF_ecologia/>
>
> *www.creaf.cat* <http://www.creaf.cat>*| **http://blog.creaf.cat* 
> <http://blog.creaf.cat>
>
> 	
>
> https://www.creaf.cat/sites/default/files/uab_logo_signatura.png
>
> CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)
>
>
> Before printing this electronic message, think about the environment.
>
> http://www.creaf.uab.cat/_signatura/line.gif
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/31190779/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Fri Mar  1 03:59:32 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Fri, 1 Mar 2024 11:59:32 +0000
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
Message-ID: <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi, and thanks for the answer.

Valgrint give me that info
...
INFO: TestCreate(JSONFG).
INFO: JSONFG: Creation of /foo/test.json should have failed.
INFO: JSONFG: CreateFeature() at line 780 succeeded but failed to assign FID to feature.
INFO: TestCreate(MiraMonVector).
INFO: MiraMonVector: Creation of /foo/test.pol should have failed.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to assign FID to feature.
Killed

If I add ?v to valgrint, same thing. Nothing more concrete
Same for gdb.

I?ll try some prints (or the log system) to see where exactly it crashes.


De: Even Rouault <even.rouault at spatialys.com>
Enviado el: divendres, 1 de mar? de 2024 11:43
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions


Hi,

this looks like potentially some memory usage issue that popups "randomly" on some platforms. The fact that you reproduce it on your 22.04 build is encouraging since it will make it easier to debug

try the following:

sudo apt-get install gdb valgrind
gdb --args test_ogrsf -all_drivers
run

and hopefully it will crash and give you some hints

and/or

valgrind test_ogrsf -all_drivers

Even


Le 01/03/2024 ? 11:29, Abel Pau via gdal-dev a ?crit :
Hi,
yesterday I updated my personal branch (soon I?ll do a pull request) but before as Even suggested I?m trying to make green al Actions.
The only problem I have now is at some points on tests...

But I am missing something because I there are things I don?t understand well.

Can anyone give me some new information to clarify myself?

test_ogr_basic_10
It?s this INFO message (that other drivers also give) a problem?
INFO: MiraMonVector: Creation of /foo\test.pol should have failed.

This message also appears in some other drivers.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to assign FID to feature.

Al tests in Linux Builds<https://github.com/AbelPau/gdal/actions/runs/8101809119> (in Actions) are OK except Alpine, gcc 32-bit
MiraMonVector driver (the one I am testing) seems to be OK.
gcore/test_driver_metadata.py::test_metadata_dcap_yes[MiraMonVector] PASSED [ 38%]
gcore/test_driver_metadata.py::test_metadata_openoptionlist[MiraMonVector] PASSED [ 40%]
gcore/test_driver_metadata.py::test_metadata_creationoptionslist[MiraMonVector] PASSED [ 42%]
gcore/test_driver_metadata.py::test_metadata_layer_creationoptionslist[MiraMonVector] PASSED [ 42%]
gcore/test_driver_metadata.py::test_metadata_creation_field_datatypes[MiraMonVector] PASSED [ 44%]
gcore/test_driver_metadata.py::test_metadata_creation_sub_field_datatypes[MiraMonVector] PASSED [ 46%]
gcore/test_driver_metadata.py::test_metadata_alter_geom_field_defn_flags[MiraMonVector] PASSED [ 47%]
gcore/test_driver_metadata.py::test_metadata_alter_field_defn_flags[MiraMonVector] PASSED [ 48%]
gcore/test_driver_metadata.py::test_metadata_creation_field_defn_flags[MiraMonVector] PASSED [ 48%]

But
2024-02-29T20:01:51.4283306Z ogr/ogr_basic_test.py::test_ogr_basic_10 FAILED                          [  1%]

=================================== FAILURES ===================================
______________________________ test_ogr_basic_10 _______________________________

Al some point: ERROR ret code = -6
But no more clues why.

Anyone can tell me how to explore this error?
I debugged this test in windows but all seems correct.
The program '[15680] test_ogrsf.exe' has exited with code 0 (0x0).

I finally installed a linux ubuntu:22.04  in a docker and I can do some things related to tests.
When I do
python3 -m pytest -vv -p no:sugar --color=no ogr/ogr_basic_test.py::test_ogr_basic_10

After a while this error appears.
So, why?
E         INFO: OpenFileGDB: CreateFeature() at line 837 failed but without explicit error.
E         INFO: TestCreate(DXF).
E         INFO: DXF: Creation of /foo/test.
E         ERROR ret code = -9
E       assert 'ERROR' not in 'INFO: TestCreate(PCIDSK).\nINFO: PCIDSK: Creation of /foo/test.pix should have failed.\nINFO: TestCreate(netCDF).\nINFO: netCDF: Creation of /foo/test.nc should have failed.\nINFO: netCDF: Creation of /vsimem/test33.n....

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.






_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/33176d70/attachment-0003.jpg>

From even.rouault at spatialys.com  Fri Mar  1 04:28:21 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Mar 2024 13:28:21 +0100
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
 <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <c0ffe5a5-36a7-4acb-900d-4b7864b1cc26@spatialys.com>

Under gdb, type "bt" (for backtrace) to see where it crashes. Normally 
Valgrind should display the stack trace too. It will be more reliable on 
a -DCMAKE_BUILD_TYPE=Debug build (assuming the issue is non Debug vs 
Release dependent)

Le 01/03/2024 ? 12:59, Abel Pau a ?crit?:
>
> Hi, and thanks for the answer.
>
> Valgrint give me that info
>
> ...
>
> INFO: TestCreate(JSONFG).
>
> INFO: JSONFG: Creation of /foo/test.json should have failed.
>
> INFO: JSONFG: CreateFeature() at line 780 succeeded but failed to 
> assign FID to feature.
>
> INFO: TestCreate(MiraMonVector).
>
> INFO: MiraMonVector: Creation of /foo/test.pol should have failed.
>
> INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed 
> to assign FID to feature.
>
> Killed
>
> If I add *?v*to valgrint, same thing. Nothing more concrete
>
> Same for gdb.
>
> I?ll try some prints (or the log system) to see where exactly it crashes.
>
> *De:*Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* divendres, 1 de mar? de 2024 11:43
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
>
> Hi,
>
> this looks like potentially some memory usage issue that popups 
> "randomly" on some platforms. The fact that you reproduce it on your 
> 22.04 build is encouraging since it will make it easier to debug
>
> try the following:
>
> sudo apt-get install gdb valgrind
> gdb --args test_ogrsf -all_drivers
> run
>
> and hopefully it will crash and give you some hints
>
> and/or
>
> valgrind test_ogrsf -all_drivers
>
> Even
>
> Le 01/03/2024 ? 11:29, Abel Pau via gdal-dev a ?crit?:
>
>     Hi,
>
>     yesterday I updated my personal branch (soon I?ll do a pull
>     request) but before as Even suggested I?m trying to make green al
>     Actions.
>
>     The only problem I have now is at some points on tests...
>
>     But I am missing something because I there are things I don?t
>     understand well.
>
>     Can anyone give me some new information to clarify myself?
>
>     *test_ogr_basic_10*
>
>     It?s this INFO message (that other drivers also give) a problem?
>
>     INFO: MiraMonVector: Creation of /foo\test.pol should have failed.
>
>     This message also appears in some other drivers.
>
>     INFO: MiraMonVector: CreateFeature() at line 780 succeeded but
>     failed to assign FID to feature.
>
>     Al tests in Linux Builds
>     <https://github.com/AbelPau/gdal/actions/runs/8101809119>(in
>     Actions) are OK except *Alpine, gcc 32-bit*
>
>     MiraMonVector driver (the one I am testing) seems to be OK.
>
>     gcore/test_driver_metadata.py::test_metadata_dcap_yes[MiraMonVector]
>     PASSED [ 38%]
>
>     gcore/test_driver_metadata.py::test_metadata_openoptionlist[MiraMonVector]
>     PASSED [ 40%]
>
>     gcore/test_driver_metadata.py::test_metadata_creationoptionslist[MiraMonVector]
>     PASSED [ 42%]
>
>     gcore/test_driver_metadata.py::test_metadata_layer_creationoptionslist[MiraMonVector]
>     PASSED [ 42%]
>
>     gcore/test_driver_metadata.py::test_metadata_creation_field_datatypes[MiraMonVector]
>     PASSED [ 44%]
>
>     gcore/test_driver_metadata.py::test_metadata_creation_sub_field_datatypes[MiraMonVector]
>     PASSED [ 46%]
>
>     gcore/test_driver_metadata.py::test_metadata_alter_geom_field_defn_flags[MiraMonVector]
>     PASSED [ 47%]
>
>     gcore/test_driver_metadata.py::test_metadata_alter_field_defn_flags[MiraMonVector]
>     PASSED [ 48%]
>
>     gcore/test_driver_metadata.py::test_metadata_creation_field_defn_flags[MiraMonVector]
>     PASSED [ 48%]
>
>     But
>
>     2024-02-29T20:01:51.4283306Z
>     ogr/ogr_basic_test.py::test_ogr_basic_10 FAILED
>     ???????????????????[? 1%]
>
>     =================================== FAILURES
>     ===================================
>
>     ______________________________ test_ogr_basic_10
>     _______________________________
>
>     Al some point: ERROR ret code = -6
>
>     *But no more clues why.*
>
>     Anyone can tell me how to explore this error?
>
>     I debugged this test in windows but all seems correct.
>
>     The program '[15680] test_ogrsf.exe' has exited with code 0 (0x0).
>
>
>     I finally installed a linux ubuntu:22.04 ?in a docker and I can do
>     some things related to tests.
>
>     When I do
>
>     python3 -m pytest -vv -p no:sugar --color=no
>     ogr/ogr_basic_test.py::test_ogr_basic_10
>
>     After a while this error appears.
>
>     So, why?
>
>     E???????? INFO: OpenFileGDB: CreateFeature() at line 837 failed
>     but without explicit error.
>
>     E???????? INFO: TestCreate(DXF).
>
>     E???????? INFO: DXF: Creation of /foo/test.
>
>     *E???????? ERROR ret code = -9*
>
>     E?????? assert 'ERROR' not in 'INFO: TestCreate(PCIDSK).\nINFO:
>     PCIDSK: Creation of /foo/test.pix should have failed.\nINFO:
>     TestCreate(netCDF).\nINFO: netCDF: Creation of /foo/test.nc should
>     have failed.\nINFO: netCDF: Creation of /vsimem/test33.n....
>
>     *Abel Pau Garcia*
>
>     *GIS developer*
>
>     	
>
>     https://www.creaf.cat/sites/default/files/creaf-signature.png
>
>     *a.pau at creaf.uab.cat* <mailto:a.pau at creaf.uab.cat>
>
>     *Let's chat on Teams!*
>     <https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
>
>     *Tel. +34 934814277*
>
>     	
>
>     https://www.creaf.cat/sites/default/files/so-en-signature.png
>
>     https://www.creaf.cat/sites/default/files/twitter-icon-signature.png
>     <https://twitter.com/CREAF_ecologia>https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png
>     <https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>https://www.creaf.cat/sites/default/files/youtube-icon-signature.png
>     <https://www.youtube.com/c/creafecologia>https://www.creaf.cat/sites/default/files/instagram-icon-signature.png
>     <https://www.instagram.com/CREAF_ecologia/>
>
>     *www.creaf.cat* <http://www.creaf.cat>*| **http://blog.creaf.cat*
>     <http://blog.creaf.cat>
>
>     	
>
>     https://www.creaf.cat/sites/default/files/uab_logo_signatura.png
>
>     CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)
>
>
>     Before printing this electronic message, think about the environment.
>
>     http://www.creaf.uab.cat/_signatura/line.gif
>
>
>
>     _______________________________________________
>
>     gdal-dev mailing list
>
>     gdal-dev at lists.osgeo.org
>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/3bef3d6f/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Fri Mar  1 06:51:59 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Fri, 1 Mar 2024 14:51:59 +0000
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <c0ffe5a5-36a7-4acb-900d-4b7864b1cc26@spatialys.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
 <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c0ffe5a5-36a7-4acb-900d-4b7864b1cc26@spatialys.com>
Message-ID: <PAXPR07MB77752A3F6AB8F102DA42C95FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>

It?s a mistery...
INFO: MiraMonVector: Creation of /foo/test.pol should have failed.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to assign FID to feature.

Program terminated with signal SIGKILL, Killed.
The program no longer exists.
(gdb) bt
No stack.
(gdb)

I?ve compiled like that:
cmake .. -DCMAKE_BUILD_TYPE=Debug
cmake --build .

So...

De: Even Rouault <even.rouault at spatialys.com>
Enviado el: divendres, 1 de mar? de 2024 13:28
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions


Under gdb, type "bt" (for backtrace) to see where it crashes. Normally Valgrind should display the stack trace too. It will be more reliable on a -DCMAKE_BUILD_TYPE=Debug build (assuming the issue is non Debug vs Release dependent)
Le 01/03/2024 ? 12:59, Abel Pau a ?crit :
Hi, and thanks for the answer.

Valgrint give me that info
...
INFO: TestCreate(JSONFG).
INFO: JSONFG: Creation of /foo/test.json should have failed.
INFO: JSONFG: CreateFeature() at line 780 succeeded but failed to assign FID to feature.
INFO: TestCreate(MiraMonVector).
INFO: MiraMonVector: Creation of /foo/test.pol should have failed.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to assign FID to feature.
Killed

If I add ?v to valgrint, same thing. Nothing more concrete
Same for gdb.

I?ll try some prints (or the log system) to see where exactly it crashes.


De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: divendres, 1 de mar? de 2024 11:43
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions


Hi,

this looks like potentially some memory usage issue that popups "randomly" on some platforms. The fact that you reproduce it on your 22.04 build is encouraging since it will make it easier to debug

try the following:

sudo apt-get install gdb valgrind
gdb --args test_ogrsf -all_drivers
run

and hopefully it will crash and give you some hints

and/or

valgrind test_ogrsf -all_drivers

Even


Le 01/03/2024 ? 11:29, Abel Pau via gdal-dev a ?crit :
Hi,
yesterday I updated my personal branch (soon I?ll do a pull request) but before as Even suggested I?m trying to make green al Actions.
The only problem I have now is at some points on tests...

But I am missing something because I there are things I don?t understand well.

Can anyone give me some new information to clarify myself?

test_ogr_basic_10
It?s this INFO message (that other drivers also give) a problem?
INFO: MiraMonVector: Creation of /foo\test.pol should have failed.

This message also appears in some other drivers.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to assign FID to feature.

Al tests in Linux Builds<https://github.com/AbelPau/gdal/actions/runs/8101809119> (in Actions) are OK except Alpine, gcc 32-bit
MiraMonVector driver (the one I am testing) seems to be OK.
gcore/test_driver_metadata.py::test_metadata_dcap_yes[MiraMonVector] PASSED [ 38%]
gcore/test_driver_metadata.py::test_metadata_openoptionlist[MiraMonVector] PASSED [ 40%]
gcore/test_driver_metadata.py::test_metadata_creationoptionslist[MiraMonVector] PASSED [ 42%]
gcore/test_driver_metadata.py::test_metadata_layer_creationoptionslist[MiraMonVector] PASSED [ 42%]
gcore/test_driver_metadata.py::test_metadata_creation_field_datatypes[MiraMonVector] PASSED [ 44%]
gcore/test_driver_metadata.py::test_metadata_creation_sub_field_datatypes[MiraMonVector] PASSED [ 46%]
gcore/test_driver_metadata.py::test_metadata_alter_geom_field_defn_flags[MiraMonVector] PASSED [ 47%]
gcore/test_driver_metadata.py::test_metadata_alter_field_defn_flags[MiraMonVector] PASSED [ 48%]
gcore/test_driver_metadata.py::test_metadata_creation_field_defn_flags[MiraMonVector] PASSED [ 48%]

But
2024-02-29T20:01:51.4283306Z ogr/ogr_basic_test.py::test_ogr_basic_10 FAILED                          [  1%]

=================================== FAILURES ===================================
______________________________ test_ogr_basic_10 _______________________________

Al some point: ERROR ret code = -6
But no more clues why.

Anyone can tell me how to explore this error?
I debugged this test in windows but all seems correct.
The program '[15680] test_ogrsf.exe' has exited with code 0 (0x0).

I finally installed a linux ubuntu:22.04  in a docker and I can do some things related to tests.
When I do
python3 -m pytest -vv -p no:sugar --color=no ogr/ogr_basic_test.py::test_ogr_basic_10

After a while this error appears.
So, why?
E         INFO: OpenFileGDB: CreateFeature() at line 837 failed but without explicit error.
E         INFO: TestCreate(DXF).
E         INFO: DXF: Creation of /foo/test.
E         ERROR ret code = -9
E       assert 'ERROR' not in 'INFO: TestCreate(PCIDSK).\nINFO: PCIDSK: Creation of /foo/test.pix should have failed.\nINFO: TestCreate(netCDF).\nINFO: netCDF: Creation of /foo/test.nc should have failed.\nINFO: netCDF: Creation of /vsimem/test33.n....

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.







_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/5c5f8b9c/attachment-0003.jpg>

From even.rouault at spatialys.com  Fri Mar  1 07:12:27 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Mar 2024 16:12:27 +0100
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <PAXPR07MB77752A3F6AB8F102DA42C95FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
 <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c0ffe5a5-36a7-4acb-900d-4b7864b1cc26@spatialys.com>
 <PAXPR07MB77752A3F6AB8F102DA42C95FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <c6c3c6b3-6d2f-4185-929f-07a9b5581a85@spatialys.com>

Your code must be something terrible so that even gdb doesn't catch it 
:-) (SIGKILL cannot be caught...)

 From the error messages, things might go wrong starting with 
https://github.com/OSGeo/gdal/blob/master/apps/test_ogrsf.cpp#L782

So maybe set a breakpoint at that line

b test_ogrsf.cpp:782

and then use "step", and "next" to single step and locate where this 
crashes. This is going to be a bit tedious...

(you might also want to modify slightly test_ogrsf so that this 
TestCreateLayer() method exists early when 
!EQUAL(poDriver->GetDescription(), "miramon") to avoid debugging other 
drivers)

You might install "ddd", as a GUI front-end for gdb, so that this is 
slightly more user friendly.

-- 

http://www.spatialys.com
My software is free, but my time generally not.


From a.pau at creaf.uab.cat  Fri Mar  1 07:17:39 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Fri, 1 Mar 2024 15:17:39 +0000
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <c6c3c6b3-6d2f-4185-929f-07a9b5581a85@spatialys.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
 <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c0ffe5a5-36a7-4acb-900d-4b7864b1cc26@spatialys.com>
 <PAXPR07MB77752A3F6AB8F102DA42C95FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c6c3c6b3-6d2f-4185-929f-07a9b5581a85@spatialys.com>
Message-ID: <PAXPR07MB77750C89CB5E338A28AA238FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Yes, I hope it's only  ONE single mistake because I have my code very protected against that kind of things...
Before you said that I am using LOG_STR(); from the test and I've filled it in all possible place it could be something.

Remember I have windows and in Visual Studio it works fine...
I don't know how to debug in my Docker linux (only command line) with Cmake compiler...

I think I'll catch the problem. Sooner or later!

I've been there before (years ago with a big problem (not my fault)). Finally I win

-----Mensaje original-----
De: Even Rouault <even.rouault at spatialys.com> 
Enviado el: divendres, 1 de mar? de 2024 16:12
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions

Your code must be something terrible so that even gdb doesn't catch it
:-) (SIGKILL cannot be caught...)

 From the error messages, things might go wrong starting with
https://github.com/OSGeo/gdal/blob/master/apps/test_ogrsf.cpp#L782

So maybe set a breakpoint at that line

b test_ogrsf.cpp:782

and then use "step", and "next" to single step and locate where this crashes. This is going to be a bit tedious...

(you might also want to modify slightly test_ogrsf so that this
TestCreateLayer() method exists early when !EQUAL(poDriver->GetDescription(), "miramon") to avoid debugging other
drivers)

You might install "ddd", as a GUI front-end for gdb, so that this is slightly more user friendly.

-- 

http://www.spatialys.com
My software is free, but my time generally not.


From fengting.chen at oracle.com  Fri Mar  1 11:31:39 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Fri, 1 Mar 2024 19:31:39 +0000
Subject: [gdal-dev] GDAL build on windows failed for FILEGDB driver
Message-ID: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>

Hi,

I am using VS2015 terminal and cmake to build GDAL on windows. I got the following compilation error for filegdbindex_write.cpp. Any idea?

  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1388): note: while trying to match the argument list '(OpenFileGDB::FileGDBTable::CreateAttributeIndex::<lambda_270e841f7399ccc74e1100890f395fab>)'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1388): error C2088: '+': illegal for class [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1384): error C2789: 'writeValueFunc': an object of const-qualified type must be initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1384): note: see declaration of 'writeValueFunc'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1390): error C3536: 'writeValueFunc': cannot be used before it is initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1390): error C2664: 'bool OpenFileGDB::WriteIndex<ValueOIDPair>(VSILFILE *,std::vector<ValueOIDPair,std::allocator<_Ty>> &,void (__cdecl *)(std::vector<GByte,std::allocator<unsigned char>> &,const int &,int),int &,int)': cannot convert argument 3 from 'int' to 'void (__cdecl *)(std::vector<GByte,std::allocator<_Ty>> &,const int &,int)' [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
          with
          [
              _Ty=ValueOIDPair
          ]
          and
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1390): note: Conversion from integral type to pointer type requires reinterpret_cast, C-style cast or function-style cast
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1412): error C2593: 'operator +' is ambiguous [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1412): note: could be 'built-in C++ operator+(void (__cdecl *)(std::vector<GByte,std::allocator<_Ty>> &,const float &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1412): note: or       'built-in C++ operator+(void (__stdcall *)(std::vector<GByte,std::allocator<_Ty>> &,const float &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1412): note: or       'built-in C++ operator+(void (__fastcall *)(std::vector<GByte,std::allocator<_Ty>> &,const float &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1412): note: or       'built-in C++ operator+(void (__vectorcall *)(std::vector<GByte,std::allocator<_Ty>> &,const float &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1412): note: while trying to match the argument list '(OpenFileGDB::FileGDBTable::CreateAttributeIndex::<lambda_d6d798253cfbdeb6d1ec1510fd54d8e5>)'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1412): error C2088: '+': illegal for class [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1409): error C2789: 'writeValueFunc': an object of const-qualified type must be initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1409): note: see declaration of 'writeValueFunc'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1414): error C3536: 'writeValueFunc': cannot be used before it is initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1414): error C2664: 'bool OpenFileGDB::WriteIndex<ValueOIDPair>(VSILFILE *,std::vector<ValueOIDPair,std::allocator<_Ty>> &,void (__cdecl *)(std::vector<GByte,std::allocator<unsigned char>> &,const float &,int),int &,int)': cannot convert argument 3 from 'int' to 'void (__cdecl *)(std::vector<GByte,std::allocator<_Ty>> &,const float &,int)' [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
          with
          [
              _Ty=ValueOIDPair
          ]
          and
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1414): note: Conversion from integral type to pointer type requires reinterpret_cast, C-style cast or function-style cast
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1439): error C2593: 'operator +' is ambiguous [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1439): note: could be 'built-in C++ operator+(void (__cdecl *)(std::vector<GByte,std::allocator<_Ty>> &,const double &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1439): note: or       'built-in C++ operator+(void (__stdcall *)(std::vector<GByte,std::allocator<_Ty>> &,const double &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1439): note: or       'built-in C++ operator+(void (__fastcall *)(std::vector<GByte,std::allocator<_Ty>> &,const double &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1439): note: or       'built-in C++ operator+(void (__vectorcall *)(std::vector<GByte,std::allocator<_Ty>> &,const double &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1439): note: while trying to match the argument list '(OpenFileGDB::FileGDBTable::CreateAttributeIndex::<lambda_ef45032c1b50ce8ace9943bec4f93e5b>)'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1439): error C2088: '+': illegal for class [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1436): error C2789: 'writeValueFunc': an object of const-qualified type must be initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1436): note: see declaration of 'writeValueFunc'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1441): error C3536: 'writeValueFunc': cannot be used before it is initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1441): error C2664: 'bool OpenFileGDB::WriteIndex<ValueOIDPair>(VSILFILE *,std::vector<ValueOIDPair,std::allocator<_Ty>> &,void (__cdecl *)(std::vector<GByte,std::allocator<unsigned char>> &,const double &,int),int &,int)': cannot convert argument 3 from 'int' to 'void (__cdecl *)(std::vector<GByte,std::allocator<_Ty>> &,const double &,int)' [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
          with
          [
              _Ty=ValueOIDPair
          ]
          and
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1441): note: Conversion from integral type to pointer type requires reinterpret_cast, C-style cast or function-style cast
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1503): error C2593: 'operator +' is ambiguous [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1503): note: could be 'built-in C++ operator+(void (__cdecl *)(std::vector<GByte,std::allocator<_Ty>> &,const std::vector<uint16_t,std::allocator<unsigned short>> &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1503): note: or       'built-in C++ operator+(void (__stdcall *)(std::vector<GByte,std::allocator<_Ty>> &,const std::vector<uint16_t,std::allocator<unsigned short>> &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1503): note: or       'built-in C++ operator+(void (__fastcall *)(std::vector<GByte,std::allocator<_Ty>> &,const std::vector<uint16_t,std::allocator<unsigned short>> &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1503): note: or       'built-in C++ operator+(void (__vectorcall *)(std::vector<GByte,std::allocator<_Ty>> &,const std::vector<uint16_t,std::allocator<unsigned short>> &,int))'
          with
          [
              _Ty=GByte
          ]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1503): note: while trying to match the argument list '(OpenFileGDB::FileGDBTable::CreateAttributeIndex::<lambda_102f9bf4de151179fe45fb40d3de5963>)'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1503): error C2088: '+': illegal for class [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1493): error C2789: 'writeValueFunc': an object of const-qualified type must be initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
  E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1493): note: see declaration of 'writeValueFunc'
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1507): error C3536: 'writeValueFunc': cannot be used before it is initialized [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
E:\gdal-3.8.4\ogr\ogrsf_frmts\openfilegdb\filegdbindex_write.cpp(1508): error C2664: 'bool OpenFileGDB::WriteIndex<ValueOIDPair>(VSILFILE *,std::vector<ValueOIDPair,std::allocator<_Ty>> &,void (__cdecl *)(std::vector<GByte,std::allocator<unsigned char>> &,const std::vector<uint16_t,std::allocator<unsigned short>> &,int),int &,int)': cannot convert argument 3 from 'int' to 'void (__cdecl *)(std::vector<GByte,std::allocator<_Ty>> &,const std::vector<uint16_t,std::allocator<unsigned short>> &,int)' [E:\gdal-3.8.4\build\ogr\ogrsf_frmts\openfilegdb\ogr_OpenFileGDB.vcxproj]
          with
          [
              _Ty=ValueOIDPair
          ]
          and
          [
              _Ty=GByte
          ]

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/1fa7c6ca/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Mar  1 14:54:19 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Mar 2024 23:54:19 +0100
Subject: [gdal-dev] GDAL build on windows failed for FILEGDB driver
In-Reply-To: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>


Le 01/03/2024 ? 20:31, Fengting Chen via gdal-dev a ?crit?:
>
> Hi,
>
> I am using VS2015 terminal and cmake to build GDAL on windows. I got 
> the following compilation error for filegdbindex_write.cpp. Any idea?
>
I kind of remember there was a ticket about that (probably closed). 
Basically VS2015 has incomplete C++11 support. You might go over that 
issue by replace the +[] lambda pattern with just [] I believe. But 
you'd better upgrade your compiler. The 3.9 branch requires C++17 
support, which requires VS2017

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240301/68906518/attachment.htm>

From aborruso at gmail.com  Sat Mar  2 08:59:34 2024
From: aborruso at gmail.com (andy)
Date: Sat, 2 Mar 2024 17:59:34 +0100
Subject: [gdal-dev] gdalinfo and WMT_MS_Capabilities: how to get Dimension
 and its Extent?
Message-ID: <CAHEdGZO=L7NrZ+omfU3w_X87fXCcA93BQoYqiht5tBGMh71hsw@mail.gmail.com>

Hi,
if I run "gdalinfo -json WMSURL -sd 1", I can read a lot of info about it,
but I do not see Dimension and its Extent in the json output (below an
example from WMS request).

<Dimension name="time" units="ISO8601"/>
<Extent name="time"
default="2024-03-01T00:00:00Z">2024-01-01T00:00:00.000Z,2024-01-02T00:00:00.000Z,2024-01-03T00:00:00.000Z,2024-01-04T00:00:00.000Z</Extent>

I would like to have this, to create a pipeline automatic testing.

Is there a way to read these informations using gdalinfo or some other gdal
cli utilities.

Thank you,

Andrea


-- 
___________________

Andrea Borruso
website: https://medium.com/tantotanto
38? 7' 48" N, 13? 21' 9" E, EPSG:4326
___________________

"cercare e saper riconoscere chi e cosa,
 in mezzo all?inferno, non ? inferno,
e farlo durare, e dargli spazio"

Italo Calvino
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/27f61887/attachment.htm>

From even.rouault at spatialys.com  Sat Mar  2 09:53:00 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 2 Mar 2024 18:53:00 +0100
Subject: [gdal-dev] gdalinfo and WMT_MS_Capabilities: how to get
 Dimension and its Extent?
In-Reply-To: <CAHEdGZO=L7NrZ+omfU3w_X87fXCcA93BQoYqiht5tBGMh71hsw@mail.gmail.com>
References: <CAHEdGZO=L7NrZ+omfU3w_X87fXCcA93BQoYqiht5tBGMh71hsw@mail.gmail.com>
Message-ID: <c3fc6dc7-7504-404b-9896-3a18635810ec@spatialys.com>

Andrea,
> if I run "gdalinfo -json WMSURL?-sd 1", I can read a lot of info about 
> it, but I do not see?Dimension and its Extent in the json output 
> (below an example from WMS request).
>
> <Dimension name="time" units="ISO8601"/>
> <Extent name="time" 
> default="2024-03-01T00:00:00Z">2024-01-01T00:00:00.000Z,2024-01-02T00:00:00.000Z,2024-01-03T00:00:00.000Z,2024-01-04T00:00:00.000Z</Extent>
>
> I would like to have this, to create a pipeline?automatic testing.
>
> Is there a way to read these informations using gdalinfo or some other 
> gdal cli utilities.

I don't think so. You'll have to issue the GetCapabilities request and 
parse its output by yourself

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/32f3fffa/attachment.htm>

From fengting.chen at oracle.com  Sat Mar  2 10:01:54 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Sat, 2 Mar 2024 18:01:54 +0000
Subject: [gdal-dev] [External] : Re: GDAL build on windows failed for
 FILEGDB driver
In-Reply-To: <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
Message-ID: <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>

Thanks, removing ?+? helped. But the next error is the link error:

E:\SDK\curl-8.6.0_1-win64-mingw\bin\libcurl-x64.dll : fatal error LNK1107: invalid or corrupt file: cannot read at 0x2C0 [E:\gdal-3.8.4\build\GDAL.vcxproj]

The cmake option is:

set (GDAL_USE_CURL                ON   CACHE  BOOL "" FORCE)
set (CURL_INCLUDE_DIR             "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE PATH "" FORCE)
set (CURL_LIBRARY_RELEASE         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.dll" CACHE FILEPATH "" FORCE)

Any idea?

From: Even Rouault <even.rouault at spatialys.com>
Date: Friday, March 1, 2024 at 5:54?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: [External] : Re: [gdal-dev] GDAL build on windows failed for FILEGDB driver


Le 01/03/2024 ? 20:31, Fengting Chen via gdal-dev a ?crit :
Hi,

I am using VS2015 terminal and cmake to build GDAL on windows. I got the following compilation error for filegdbindex_write.cpp. Any idea?

I kind of remember there was a ticket about that (probably closed). Basically VS2015 has incomplete C++11 support. You might go over that issue by replace the +[] lambda pattern with just [] I believe. But you'd better upgrade your compiler. The 3.9 branch requires C++17 support, which requires VS2017

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N7D9wGetkwWAVmRFBxeY1vj2M5dCjlmEJYIu4L8eVIiyJGITK8KWuYu9jFqHfduaiEuEc8PCCTOJ51txLyg4nXpErfxk$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/624d1583/attachment-0001.htm>

From even.rouault at spatialys.com  Sat Mar  2 10:08:37 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 2 Mar 2024 19:08:37 +0100
Subject: [gdal-dev] [External] : Re: GDAL build on windows failed for
 FILEGDB driver
In-Reply-To: <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
Message-ID: <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>

> set (CURL_LIBRARY_RELEASE 
> "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.dll" CACHE FILEPATH 
> "" FORCE)
>
==> XXX_LIBRARY[_RELEASE/_DEBUG] should point to a .lib import library, 
not to the .dll directly


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/90b9faa5/attachment.htm>

From even.rouault at spatialys.com  Sat Mar  2 10:50:41 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 2 Mar 2024 19:50:41 +0100
Subject: [gdal-dev] [External] : Re: GDAL build on windows failed for
 FILEGDB driver
In-Reply-To: <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
Message-ID: <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>


Le 02/03/2024 ? 19:36, Fengting Chen a ?crit?:
>
> That is what I guessed. But the documentation says:
>
> CURL_LIBRARY_RELEASE? 
> <https://gdal.org/development/building_from_source.html#cmdoption-arg-CURL_LIBRARY_RELEASE>
>
> Path to a shared or static library file, such as libcurl.dll, 
> libcurl.so, libcurl.lib, or other name.
>
Ah that was misleading indeed. Correction queued in 
https://github.com/OSGeo/gdal/pull/9371


> If I use .lib here, will GDAL link with the dynamic library by default
>
You need to point to the appropriate .lib: a static .lib if you want 
static linking, or an import .lib for dynamic linking. Cf 
https://stackoverflow.com/questions/8019464/a-static-library-vs-an-import-library-on-the-windows-platform 
for example

| or I need to set CURL_USE_STATIC_LIBS=OFF explicitly?

No, this setting is only effective when set to ON (it adds a 
-DCURL_STATICLIB define when including curl, and links to a few system 
Windows .lib).? You need to point CURL_LIBRARY_RELEASE to the 
appropriate kind of .lib given the type of linking you wish. The exact 
naming will depend on how curl has been built.


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/a96c7a72/attachment.htm>

From fengting.chen at oracle.com  Sat Mar  2 10:36:30 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Sat, 2 Mar 2024 18:36:30 +0000
Subject: [gdal-dev] [External] : Re: GDAL build on windows failed for
 FILEGDB driver
In-Reply-To: <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
Message-ID: <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>

That is what I guessed. But the documentation says:

CURL_LIBRARY_RELEASE?<https://gdal.org/development/building_from_source.html#cmdoption-arg-CURL_LIBRARY_RELEASE>
Path to a shared or static library file, such as libcurl.dll, libcurl.so, libcurl.lib, or other name.
If I use .lib here, will GDAL link with the dynamic library by default or I need to set CURL_USE_STATIC_LIBS=OFF explicitly?

Thanks!

From: Even Rouault <even.rouault at spatialys.com>
Date: Saturday, March 2, 2024 at 1:08?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [External] : Re: [gdal-dev] GDAL build on windows failed for FILEGDB driver
set (CURL_LIBRARY_RELEASE         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.dll" CACHE FILEPATH "" FORCE)

==> XXX_LIBRARY[_RELEASE/_DEBUG] should point to a .lib import library, not to the .dll directly



--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!JLgqR0Xmpy0AUkdrzdfKyclw3MYEvcOPpYdP04m-uxbTA0uf-YWzEltfLKASB4MXKlj9dC0VOJFC_d3zpeRnm3HTUWIn$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/6d1072f9/attachment-0001.htm>

From fengting.chen at oracle.com  Sat Mar  2 12:14:23 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Sat, 2 Mar 2024 20:14:23 +0000
Subject: [gdal-dev] [External] : Re: GDAL build on windows failed for
 FILEGDB driver
In-Reply-To: <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
Message-ID: <PH0PR10MB7061B8D205BBC75BEF6EE468935D2@PH0PR10MB7061.namprd10.prod.outlook.com>

Thanks, that is clear now.

One more question, anywhere to get proj_9_3.lib and sqlite3 .lib, most downloadable package only has .dll.

From: Even Rouault <even.rouault at spatialys.com>
Date: Saturday, March 2, 2024 at 1:50?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [External] : Re: [gdal-dev] GDAL build on windows failed for FILEGDB driver


Le 02/03/2024 ? 19:36, Fengting Chen a ?crit :
That is what I guessed. But the documentation says:

CURL_LIBRARY_RELEASE?<https://urldefense.com/v3/__https:/gdal.org/development/building_from_source.html*cmdoption-arg-CURL_LIBRARY_RELEASE__;Iw!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAlZbxGK0$>
Path to a shared or static library file, such as libcurl.dll, libcurl.so, libcurl.lib, or other name.

Ah that was misleading indeed. Correction queued in https://github.com/OSGeo/gdal/pull/9371<https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/pull/9371__;!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAng9m6OA$>


If I use .lib here, will GDAL link with the dynamic library by default

You need to point to the appropriate .lib: a static .lib if you want static linking, or an import .lib for dynamic linking. Cf https://stackoverflow.com/questions/8019464/a-static-library-vs-an-import-library-on-the-windows-platform<https://urldefense.com/v3/__https:/stackoverflow.com/questions/8019464/a-static-library-vs-an-import-library-on-the-windows-platform__;!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAtL66jH4$> for example

| or I need to set CURL_USE_STATIC_LIBS=OFF explicitly?

No, this setting is only effective when set to ON (it adds a -DCURL_STATICLIB define when including curl, and links to a few system Windows .lib).  You need to point CURL_LIBRARY_RELEASE to the appropriate kind of .lib given the type of linking you wish. The exact naming will depend on how curl has been built.



--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAvgpGpx2$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/68422ce3/attachment.htm>

From even.rouault at spatialys.com  Sat Mar  2 12:48:46 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 2 Mar 2024 21:48:46 +0100
Subject: [gdal-dev] [External] : Re: GDAL build on windows failed for
 FILEGDB driver
In-Reply-To: <PH0PR10MB7061B8D205BBC75BEF6EE468935D2@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB7061B8D205BBC75BEF6EE468935D2@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <7ac14ecb-09c4-4639-ae63-fd8f5f7015c0@spatialys.com>


Le 02/03/2024 ? 21:14, Fengting Chen a ?crit?:
>
> Thanks, that is clear now.
>
> One more question, anywhere to get proj_9_3.lib and sqlite3 .lib, most 
> downloadable package only has .dll.
>
conda or vcpkg. cf https://gdal.org/download.html#windows
>
> *From: *Even Rouault <even.rouault at spatialys.com>
> *Date: *Saturday, March 2, 2024 at 1:50?PM
> *To: *Fengting Chen <fengting.chen at oracle.com>, 
> gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
> *Subject: *Re: [External] : Re: [gdal-dev] GDAL build on windows 
> failed for FILEGDB driver
>
> Le 02/03/2024 ? 19:36, Fengting Chen a ?crit?:
>
>     That is what I guessed. But the documentation says:
>
>     CURL_LIBRARY_RELEASE?
>     <https://urldefense.com/v3/__https:/gdal.org/development/building_from_source.html*cmdoption-arg-CURL_LIBRARY_RELEASE__;Iw!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAlZbxGK0$>
>
>     Path to a shared or static library file, such as libcurl.dll,
>     libcurl.so, libcurl.lib, or other name.
>
> Ah that was misleading indeed. Correction queued in 
> https://github.com/OSGeo/gdal/pull/9371 
> <https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/pull/9371__;!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAng9m6OA$>
>
>     If I use .lib here, will GDAL link with the dynamic library by
>     default
>
> You need to point to the appropriate .lib: a static .lib if you want 
> static linking, or an import .lib for dynamic linking. Cf 
> https://stackoverflow.com/questions/8019464/a-static-library-vs-an-import-library-on-the-windows-platform 
> <https://urldefense.com/v3/__https:/stackoverflow.com/questions/8019464/a-static-library-vs-an-import-library-on-the-windows-platform__;!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAtL66jH4$> 
> for example
>
> | or I need to set CURL_USE_STATIC_LIBS=OFF explicitly?
>
> No, this setting is only effective when set to ON (it adds a 
> -DCURL_STATICLIB define when including curl, and links to a few system 
> Windows .lib).? You need to point CURL_LIBRARY_RELEASE to the 
> appropriate kind of .lib given the type of linking you wish. The exact 
> naming will depend on how curl has been built.
>
>
>
> -- 
> http://www.spatialys.com  <https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!NL4-GXTlZwB0Rdq69N2ze_aa3cG4M6vhEC97pm9UK8Z4svrhYWwpPuQCNPHu5W_Hlg5OKvssXsXDmBSjEJTiAvgpGpx2$>
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240302/f132290b/attachment-0001.htm>

From tomohiro.kanza.306 at baycurrent.co.jp  Sun Mar  3 18:30:22 2024
From: tomohiro.kanza.306 at baycurrent.co.jp (=?iso-2022-jp?B?GyRCNDI6QiEhQ1JCZxsoQg==?=)
Date: Mon, 4 Mar 2024 02:30:22 +0000
Subject: [gdal-dev] Segmentation fault (core dumped) occurs when running
 ogr2ogr command on container
Message-ID: <TY3PR01MB982485CF11B3755C8E900329B0232@TY3PR01MB9824.jpnprd01.prod.outlook.com>

I am implementing batch processing to convert Shape files, publicly available as open data,

into Geojson format within a container environment.



I installed gdal-bin on top of ubuntu:22.04 base image.

The Dockerfile I implemented is as follows:

```

FROM ubuntu:22.04



ENV DEBIAN_FRONTEND=noninteractive

RUN apt update

RUN apt -y install apt-transport-https jq unzip openjdk-17-jdk-headless curl



# Install gdal-bin

# Reference: https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html#how-to-install-gdal-ogr-packages-on-ubuntu

RUN apt -y install software-properties-common

RUN add-apt-repository -y ppa:ubuntugis/ppa

RUN apt update

RUN apt -y install gdal-bin



COPY ./convert.sh /convert.sh



CMD ["bash","convert.sh"]

```



When executing the ogr2ogr command within convert.sh, the following error occurs:

```

Shape: DBF Codepage = SJIS for /d1.shp

Shape: Treating as encoding 'MS932'.

GDAL: GDALOpen(/d1.shp, this=0x55f1edd77f30) succeeds as ESRI Shapefile.

GDAL: QuietDelete(/d1_raw.geojson) invoking Delete()

GDAL: GDALDriver::Create(GeoJSON,/d1_raw.geojson,0,0,0,Unknown,(nil))

GDALVectorTranslate: 5315 features written in layer 'd1'

Shape: 5315 features read on layer 'd1'.

GDAL: GDALClose(/d1.shp, this=0x55f1edd77f30)

GDAL: GDALClose(/d1_raw.geojson, this=0x55f1edd75fd0)

GDAL: In GDALDestroy - unloading GDAL shared library.

Segmentation fault (core dumped)

```



I checked if convert.sh execution is possible on the VM (host OS running Docker).

The error seems to occur only when executed within the container.



How should I resolve this?



?Environment

Host OS: ubuntu 22.04

Docker Deamon: 25.0.3

gdal-bin: 3.6.4

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240304/7526eac8/attachment.htm>

From a.pau at creaf.uab.cat  Mon Mar  4 01:41:30 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Mon, 4 Mar 2024 09:41:30 +0000
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <PAXPR07MB77750C89CB5E338A28AA238FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
 <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c0ffe5a5-36a7-4acb-900d-4b7864b1cc26@spatialys.com>
 <PAXPR07MB77752A3F6AB8F102DA42C95FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c6c3c6b3-6d2f-4185-929f-07a9b5581a85@spatialys.com>
 <PAXPR07MB77750C89CB5E338A28AA238FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB7775A667344E49B77043362EA2232@PAXPR07MB7775.eurprd07.prod.outlook.com>

After some investigations, I've concluded that I was doing two things that I've improved lately:
	1) Addressing a memory leak (in a non-typical case in my previous tests). CORRECTED
	2) I was requesting an amount of memory suitable for ogr2ogr of large layers but not for numerous translations on a machine with limited memory. I've reduced the amount of memory required by /10. And now Alpine 32 bits is in green colour!

There are still some tests to review, but I'm optimistic about submitting a pull request soon!


-----Mensaje original-----
De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: divendres, 1 de mar? de 2024 16:18
Para: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions

Yes, I hope it's only  ONE single mistake because I have my code very protected against that kind of things...
Before you said that I am using LOG_STR(); from the test and I've filled it in all possible place it could be something.

Remember I have windows and in Visual Studio it works fine...
I don't know how to debug in my Docker linux (only command line) with Cmake compiler...

I think I'll catch the problem. Sooner or later!

I've been there before (years ago with a big problem (not my fault)). Finally I win

-----Mensaje original-----
De: Even Rouault <even.rouault at spatialys.com> Enviado el: divendres, 1 de mar? de 2024 16:12
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions

Your code must be something terrible so that even gdb doesn't catch it
:-) (SIGKILL cannot be caught...)

 From the error messages, things might go wrong starting with
https://github.com/OSGeo/gdal/blob/master/apps/test_ogrsf.cpp#L782

So maybe set a breakpoint at that line

b test_ogrsf.cpp:782

and then use "step", and "next" to single step and locate where this crashes. This is going to be a bit tedious...

(you might also want to modify slightly test_ogrsf so that this
TestCreateLayer() method exists early when !EQUAL(poDriver->GetDescription(), "miramon") to avoid debugging other
drivers)

You might install "ddd", as a GUI front-end for gdb, so that this is slightly more user friendly.

-- 

http://www.spatialys.com
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From a.pau at creaf.uab.cat  Mon Mar  4 05:59:27 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Mon, 4 Mar 2024 13:59:27 +0000
Subject: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions
In-Reply-To: <PAXPR07MB7775A667344E49B77043362EA2232@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775CA4ED18AB3FEADA4B8E5A25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <d023688a-4781-47d5-b2e8-4103c02a3da4@spatialys.com>
 <PAXPR07MB7775DE9B78F733D6F5201F8AA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c0ffe5a5-36a7-4acb-900d-4b7864b1cc26@spatialys.com>
 <PAXPR07MB77752A3F6AB8F102DA42C95FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <c6c3c6b3-6d2f-4185-929f-07a9b5581a85@spatialys.com>
 <PAXPR07MB77750C89CB5E338A28AA238FA25E2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775A667344E49B77043362EA2232@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB7775C09B351D03880F6C0FF3A2232@PAXPR07MB7775.eurprd07.prod.outlook.com>

Well,
I've also found that issue: strdup (s=0x0)   Found and corrected.
It's was also a big issue :$

#0  __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:74
#1  0x00007ffff4fa8583 in __GI___strdup (s=0x0) at ./string/strdup.c:41
#2  0x00007ffff6f4c075 in MMInitLayerToRead (hMiraMonLayer=0x5555560b57e0, m_fp=0x555555d5e590,
    pszFilename=0x555555d4f970 "/vsimem/test1067.pol") at /gdal/ogr/ogrsf_frmts/miramon/mm_rdlayr.c:146
#3  0x00007ffff6f2e03a in OGRMiraMonLayer::OGRMiraMonLayer (this=0x555556087b10,
    pszFilename=0x555555d4f970 "/vsimem/test1067.pol", fp=0x0, poSRS=0x0, bUpdateIn=0, papszOpenOptions=0x0,
    MMMap=0x55555607b5c0) at /gdal/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:219
#4  0x00007ffff6f2c8b5 in OGRMiraMonDataSource::Open (this=0x55555607b460,
    pszFilename=0x555555d4f970 "/vsimem/test1067.pol", fp=0x0, poSRS=0x0, bUpdateIn=0, papszOpenOptionsUsr=0x0)
    at /gdal/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp:71
#5  0x00007ffff6f2d268 in OGRMiraMonDriverOpen (poOpenInfo=0x7fffffffdd00)
    at /gdal/ogr/ogrsf_frmts/miramon/ogrmiramondriver.cpp:87
#6  0x00007ffff73d0819 in GDALDriver::Open (this=0x555555640cb0, poOpenInfo=0x7fffffffdd00, bSetOpenOptions=false)
    at /gdal/gcore/gdaldriver.cpp:116
#7  0x00007ffff73e9980 in GDALOpenEx (pszFilename=0x555555d53d50 "/vsimem/test1067.pol", nOpenFlags=14,
    papszAllowedDrivers=0x0, papszOpenOptions=0x0, papszSiblingFiles=0x0) at /gdal/gcore/gdaldataset.cpp:3745
#8  0x00007ffff73d4be7 in GDALDriver::Delete (this=0x555555640cb0, pszFilename=0x555555d53d50 "/vsimem/test1067.pol")
    at /gdal/gcore/gdaldriver.cpp:1645
#9  0x000055555555e6f0 in TestCreateLayer (poDriver=0x555555640cb0, eGeomType=wkbLineString)
    at /gdal/apps/test_ogrsf.cpp:1017
#10 0x000055555555ef8f in TestCreate (poDriver=0x555555640cb0, bFromAllDrivers=1) at /gdal/apps/test_ogrsf.cpp:1107
#11 0x000055555555bdb2 in ThreadFunctionInternal (psContext=0x7fffffffe400) at /gdal/apps/test_ogrsf.cpp:325
#12 0x000055555555bc71 in ThreadFunction (user_data=0x7fffffffe400) at /gdal/apps/test_ogrsf.cpp:283
#13 0x000055555555bac1 in main (nArgc=2, papszArgv=0x555555645050) at /gdal/apps/test_ogrsf.cpp:233


-----Mensaje original-----
De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dilluns, 4 de mar? de 2024 10:42
Para: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions

After some investigations, I've concluded that I was doing two things that I've improved lately:
	1) Addressing a memory leak (in a non-typical case in my previous tests). CORRECTED
	2) I was requesting an amount of memory suitable for ogr2ogr of large layers but not for numerous translations on a machine with limited memory. I've reduced the amount of memory required by /10. And now Alpine 32 bits is in green colour!

There are still some tests to review, but I'm optimistic about submitting a pull request soon!


-----Mensaje original-----
De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev Enviado el: divendres, 1 de mar? de 2024 16:18
Para: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions

Yes, I hope it's only  ONE single mistake because I have my code very protected against that kind of things...
Before you said that I am using LOG_STR(); from the test and I've filled it in all possible place it could be something.

Remember I have windows and in Visual Studio it works fine...
I don't know how to debug in my Docker linux (only command line) with Cmake compiler...

I think I'll catch the problem. Sooner or later!

I've been there before (years ago with a big problem (not my fault)). Finally I win

-----Mensaje original-----
De: Even Rouault <even.rouault at spatialys.com> Enviado el: divendres, 1 de mar? de 2024 16:12
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Alpine, gcc 32-bit in Linux Build Actions

Your code must be something terrible so that even gdb doesn't catch it
:-) (SIGKILL cannot be caught...)

 From the error messages, things might go wrong starting with
https://github.com/OSGeo/gdal/blob/master/apps/test_ogrsf.cpp#L782

So maybe set a breakpoint at that line

b test_ogrsf.cpp:782

and then use "step", and "next" to single step and locate where this crashes. This is going to be a bit tedious...

(you might also want to modify slightly test_ogrsf so that this
TestCreateLayer() method exists early when !EQUAL(poDriver->GetDescription(), "miramon") to avoid debugging other
drivers)

You might install "ddd", as a GUI front-end for gdb, so that this is slightly more user friendly.

-- 

http://www.spatialys.com
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From even.rouault at spatialys.com  Tue Mar  5 03:06:12 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Mar 2024 12:06:12 +0100
Subject: [gdal-dev] Call for discussion on RFC99: Geometry coordinate
 precision
In-Reply-To: <c2708bea-db40-451b-afeb-42d0fb3ca67d@spatialys.com>
References: <c2708bea-db40-451b-afeb-42d0fb3ca67d@spatialys.com>
Message-ID: <e0e30f74-5ebf-40c4-9044-3e38cbd32d86@spatialys.com>

Hi,

https://github.com/OSGeo/gdal/pull/9300 has been updated with the actual 
changes from the candidate implementation now available in 
https://github.com/OSGeo/gdal/pull/9378

If there are no further remarks on the RFC in the following days, I will 
submit it for adoption.

Even

Le 26/02/2024 ? 13:14, Even Rouault via gdal-dev a ?crit?:
> Hi,
>
> I've drafted https://github.com/OSGeo/gdal/pull/9300 (rendered text at 
> https://github.com/rouault/gdal/blob/rfc99_text/doc/source/development/rfc/rfc99_geometry_coordinate_precision.rst)
>
> Summary:
>
> This RFC aims at introducing optional metadata to specify the 
> coordinate precision of geometries, to be able to round appropriately 
> coordinates and limit the number of decimals when exporting to 
> text-based formats or nullify least-significant bits for binary 
> formats. That metadata will be stored into and read from formats that 
> can support it.
>
> Note that this is not backed by an implementation yet (except a 
> prototype done one year or so for the nullification of 
> least-significant bits in WKB), so there might be changes/additions to 
> the exposed plan, but the document exposes the general directions
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From aborruso at gmail.com  Tue Mar  5 06:23:47 2024
From: aborruso at gmail.com (andy)
Date: Tue, 5 Mar 2024 15:23:47 +0100
Subject: [gdal-dev] FEATURE_SERVER_PAGING and GeoServices REST debugging
Message-ID: <CAHEdGZM9s7YuaiUoVz6N3yR_36jyM4zpETvmBUT6NTYiT2Si8A@mail.gmail.com>

Hi,
I'm querying a very slow GeoService REST

ogrinfo -al -ro -so --config GDAL_HTTP_UNSAFESSL YES  "
https://webapps.sit.puglia.it/arcgis/rest/services/Background/Catasto/MapServer/2/query?where=COMUNE%3D%27F915%27&text=&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=true&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&f=pjson"
 -oo FEATURE_SERVER_PAGING=YES --debug on

Despite the fact that I specified "FEATURE_SERVER_PAGING=YES", I always
have Feature Count: 1000.

But the count output is 29093
https://webapps.sit.puglia.it/arcgis/rest/services/Background/Catasto/MapServer/2/query?where=COMUNE%3D%27F915%27&text=&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&relationParam=&outFields=*&returnGeometry=true&maxAllowableOffset=&geometryPrecision=&outSR=&returnIdsOnly=false&returnCountOnly=true&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&gdbVersion=&returnDistinctValues=false&f=pjson

Am I doing something wrong?

Maybe the geoservice is malfunctioning.

Thank you

-- 
___________________

Andrea Borruso
website: https://medium.com/tantotanto
38? 7' 48" N, 13? 21' 9" E, EPSG:4326
___________________

"cercare e saper riconoscere chi e cosa,
 in mezzo all?inferno, non ? inferno,
e farlo durare, e dargli spazio"

Italo Calvino
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240305/4a4dfe54/attachment.htm>

From a.pau at creaf.uab.cat  Tue Mar  5 13:28:21 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Tue, 5 Mar 2024 21:28:21 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
Message-ID: <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself


I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).

Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240305/ff9824d5/attachment-0001.htm>

From tomohiro.kanza.306 at baycurrent.co.jp  Tue Mar  5 22:20:15 2024
From: tomohiro.kanza.306 at baycurrent.co.jp (=?utf-8?B?5a+b5bqn44CA5pm65aSn?=)
Date: Wed, 6 Mar 2024 06:20:15 +0000
Subject: [gdal-dev] Segmentation fault (core dumped) occurs when running
 ogr2ogr command on container
In-Reply-To: <PAXPR07MB77751629333EEC3038F16CA4A2232@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <TY3PR01MB982485CF11B3755C8E900329B0232@TY3PR01MB9824.jpnprd01.prod.outlook.com>
 <PAXPR07MB77751629333EEC3038F16CA4A2232@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <TY3PR01MB982431201BA90A8451AC5C1AB0212@TY3PR01MB9824.jpnprd01.prod.outlook.com>

Abel Pau,

Hi. Thank you for your response.

>I reduced this capacity 10 times and it worked.
Does this mean you reduced the size of the Shape file?
Or does it mean that you reduced the amount of memory requested?
( If it's the latter, I'd like to learn how to do it.)

Shape files are typically around 4MB, so I don't consider them to be very large files.
Additionally, I tried it on an AKS with a free memory size of over 20GB, but encountered the same issue.
It seems unlikely that there is a lack of specifications in the execution environment.

Could the issue possibly be due to a bug in the command?

From: Abel Pau <a.pau at creaf.uab.cat>
Sent: Monday, March 4, 2024 4:57 PM
To: ????? <tomohiro.kanza.306 at baycurrent.co.jp>
Subject: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Hi,
I did similar tests with a driver I am implementing and I obtained exact the same behavior as yours.
After a few speculations I deduced that my driver was asking for too much memory for the docker capacity.
I reduced this capacity 10 times and it worked.
So, perhaps, Shape or Geojson asks for too much memory for the docker capacity.
I don?t know if it?s possible to make it bigger.

Abel.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de ?? ?? via gdal-dev
Enviado el: dilluns, 4 de mar? de 2024 3:30
Para: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: [gdal-dev] Segmentation fault (core dumped) occurs when running ogr2ogr command on container


I am implementing batch processing to convert Shape files, publicly available as open data,

into Geojson format within a container environment.



I installed gdal-bin on top of ubuntu:22.04 base image.

The Dockerfile I implemented is as follows:

```

FROM ubuntu:22.04



ENV DEBIAN_FRONTEND=noninteractive

RUN apt update

RUN apt -y install apt-transport-https jq unzip openjdk-17-jdk-headless curl



# Install gdal-bin

# Reference: https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html#how-to-install-gdal-ogr-packages-on-ubuntu

RUN apt -y install software-properties-common

RUN add-apt-repository -y ppa:ubuntugis/ppa

RUN apt update

RUN apt -y install gdal-bin



COPY ./convert.sh /convert.sh



CMD ["bash","convert.sh"]

```



When executing the ogr2ogr command within convert.sh, the following error occurs:

```

Shape: DBF Codepage = SJIS for /d1.shp

Shape: Treating as encoding 'MS932'.

GDAL: GDALOpen(/d1.shp, this=0x55f1edd77f30) succeeds as ESRI Shapefile.

GDAL: QuietDelete(/d1_raw.geojson) invoking Delete()

GDAL: GDALDriver::Create(GeoJSON,/d1_raw.geojson,0,0,0,Unknown,(nil))

GDALVectorTranslate: 5315 features written in layer 'd1'

Shape: 5315 features read on layer 'd1'.

GDAL: GDALClose(/d1.shp, this=0x55f1edd77f30)

GDAL: GDALClose(/d1_raw.geojson, this=0x55f1edd75fd0)

GDAL: In GDALDestroy - unloading GDAL shared library.

Segmentation fault (core dumped)

```



I checked if convert.sh execution is possible on the VM (host OS running Docker).

The error seems to occur only when executed within the container.



How should I resolve this?



?Environment

Host OS: ubuntu 22.04

Docker Deamon: 25.0.3

gdal-bin: 3.6.4

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/6f504a61/attachment-0001.htm>

From a.pau at creaf.uab.cat  Wed Mar  6 00:53:08 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 6 Mar 2024 08:53:08 +0000
Subject: [gdal-dev] Segmentation fault (core dumped) occurs when running
 ogr2ogr command on container
In-Reply-To: <TY3PR01MB982431201BA90A8451AC5C1AB0212@TY3PR01MB9824.jpnprd01.prod.outlook.com>
References: <TY3PR01MB982485CF11B3755C8E900329B0232@TY3PR01MB9824.jpnprd01.prod.outlook.com>
 <PAXPR07MB77751629333EEC3038F16CA4A2232@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <TY3PR01MB982431201BA90A8451AC5C1AB0212@TY3PR01MB9824.jpnprd01.prod.outlook.com>
Message-ID: <PAXPR07MB77759F4E4C709092C89097B3A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,

I reduced the amount of memory requested. I could do that because I am developing the driver that failed.
After my mail I discovered another error, so, perhaps, this was the real cause.

4Mb it?s so small, so I is not the cause...
Perhaps you can add --config  CPL_DEBUG ON at your command line to see if this give you more information about the place where it crashes.

I?m sorry not being able to help you more.
Perhaps you can send me the shape and the command line to see if it crashes in my computer and I can find out the problem.

See you

De: ????? <tomohiro.kanza.306 at baycurrent.co.jp>
Enviado el: dimecres, 6 de mar? de 2024 7:20
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Abel Pau,

Hi. Thank you for your response.

>I reduced this capacity 10 times and it worked.
Does this mean you reduced the size of the Shape file?
Or does it mean that you reduced the amount of memory requested?
( If it's the latter, I'd like to learn how to do it.)

Shape files are typically around 4MB, so I don't consider them to be very large files.
Additionally, I tried it on an AKS with a free memory size of over 20GB, but encountered the same issue.
It seems unlikely that there is a lack of specifications in the execution environment.

Could the issue possibly be due to a bug in the command?

From: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>
Sent: Monday, March 4, 2024 4:57 PM
To: ????? <tomohiro.kanza.306 at baycurrent.co.jp<mailto:tomohiro.kanza.306 at baycurrent.co.jp>>
Subject: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Hi,
I did similar tests with a driver I am implementing and I obtained exact the same behavior as yours.
After a few speculations I deduced that my driver was asking for too much memory for the docker capacity.
I reduced this capacity 10 times and it worked.
So, perhaps, Shape or Geojson asks for too much memory for the docker capacity.
I don?t know if it?s possible to make it bigger.

Abel.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de ?? ?? via gdal-dev
Enviado el: dilluns, 4 de mar? de 2024 3:30
Para: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: [gdal-dev] Segmentation fault (core dumped) occurs when running ogr2ogr command on container


I am implementing batch processing to convert Shape files, publicly available as open data,

into Geojson format within a container environment.



I installed gdal-bin on top of ubuntu:22.04 base image.

The Dockerfile I implemented is as follows:

```

FROM ubuntu:22.04



ENV DEBIAN_FRONTEND=noninteractive

RUN apt update

RUN apt -y install apt-transport-https jq unzip openjdk-17-jdk-headless curl



# Install gdal-bin

# Reference: https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html#how-to-install-gdal-ogr-packages-on-ubuntu

RUN apt -y install software-properties-common

RUN add-apt-repository -y ppa:ubuntugis/ppa

RUN apt update

RUN apt -y install gdal-bin



COPY ./convert.sh /convert.sh



CMD ["bash","convert.sh"]

```



When executing the ogr2ogr command within convert.sh, the following error occurs:

```

Shape: DBF Codepage = SJIS for /d1.shp

Shape: Treating as encoding 'MS932'.

GDAL: GDALOpen(/d1.shp, this=0x55f1edd77f30) succeeds as ESRI Shapefile.

GDAL: QuietDelete(/d1_raw.geojson) invoking Delete()

GDAL: GDALDriver::Create(GeoJSON,/d1_raw.geojson,0,0,0,Unknown,(nil))

GDALVectorTranslate: 5315 features written in layer 'd1'

Shape: 5315 features read on layer 'd1'.

GDAL: GDALClose(/d1.shp, this=0x55f1edd77f30)

GDAL: GDALClose(/d1_raw.geojson, this=0x55f1edd75fd0)

GDAL: In GDALDestroy - unloading GDAL shared library.

Segmentation fault (core dumped)

```



I checked if convert.sh execution is possible on the VM (host OS running Docker).

The error seems to occur only when executed within the container.



How should I resolve this?



?Environment

Host OS: ubuntu 22.04

Docker Deamon: 25.0.3

gdal-bin: 3.6.4

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/98daa4e6/attachment-0001.htm>

From johannespaul92 at gmail.com  Wed Mar  6 02:00:43 2024
From: johannespaul92 at gmail.com (Johannes Paul)
Date: Wed, 6 Mar 2024 11:00:43 +0100
Subject: [gdal-dev] GDAL_ENABLE_DRIVER_PDF
Message-ID: <CACcmK9YWRQqEx9N+vmMFUvzmN8NC8z+eyBMB3kLqeZkaUQaLpQ@mail.gmail.com>

Hello,

I have compiled PDFium from https://github.com/rouault/pdfium/tree/master
and I'm trying to get GDAL 3.8.4 built with this geospatial PDF driver on
Almalinux 8.

However if I use cmake with the following variables :
*-DGDAL_USE_PDFIUM=ON -DGDAL_ENABLE_DRIVER_PDF=ON
-DPDFIUM_INCLUDE_DIR="${INSTALLDIR}"/include/pdfium
-DPDFIUM_LIBRARY="${INSTALLDIR}"/lib/pdfium/libpdfium.a*

I get the following error :



*CMake Error at cmake/helpers/GdalDriverHelper.cmake:284 (message):
gdal_target_link_libraries(): PRIVATE is a mandatory argument.Call Stack
(most recent call first):  frmts/pdf/CMakeLists.txt:53
(gdal_target_link_libraries)*

If I remove *-DGDAL_ENABLE_DRIVER_PDF=ON *, I get GDAL compiled but without
PDFium.

Any idea?
Thanks,
Johannes
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/1a274fbf/attachment.htm>

From even.rouault at spatialys.com  Wed Mar  6 02:19:33 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Mar 2024 11:19:33 +0100
Subject: [gdal-dev] GDAL_ENABLE_DRIVER_PDF
In-Reply-To: <CACcmK9YWRQqEx9N+vmMFUvzmN8NC8z+eyBMB3kLqeZkaUQaLpQ@mail.gmail.com>
References: <CACcmK9YWRQqEx9N+vmMFUvzmN8NC8z+eyBMB3kLqeZkaUQaLpQ@mail.gmail.com>
Message-ID: <db894d21-a7d6-4304-835f-9c39829553d5@spatialys.com>

Hi,

I suspect that the error comes from the fact that one of several of the 
other dependencies required by pdfium are not found: JPEG, PNG, 
OpenJPEG, lcms2

Even

Le 06/03/2024 ? 11:00, Johannes Paul via gdal-dev a ?crit?:
> Hello,
>
> I have compiled PDFium from 
> https://github.com/rouault/pdfium/tree/master and I'm trying to get 
> GDAL 3.8.4 built with this geospatial PDF driver on Almalinux 8.
>
> However if I use cmake with the following variables :
> /-DGDAL_USE_PDFIUM=ON -DGDAL_ENABLE_DRIVER_PDF=ON 
> -DPDFIUM_INCLUDE_DIR="${INSTALLDIR}"/include/pdfium 
> -DPDFIUM_LIBRARY="${INSTALLDIR}"/lib/pdfium/libpdfium.a/
>
> I get the following error :
> /CMake Error at cmake/helpers/GdalDriverHelper.cmake:284 (message):
> ? gdal_target_link_libraries(): PRIVATE is a mandatory argument.
> Call Stack (most recent call first):
> ? frmts/pdf/CMakeLists.txt:53 (gdal_target_link_libraries)/
>
> If I remove /-DGDAL_ENABLE_DRIVER_PDF=ON /, I get GDAL compiled but 
> without PDFium.
>
> Any idea?
> Thanks,
> Johannes
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/62943e60/attachment.htm>

From even.rouault at spatialys.com  Wed Mar  6 04:08:38 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Mar 2024 13:08:38 +0100
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>

Hi,

I don't see anything wrong. I've tried that on my native Linux build and 
the test_ogr_miramon_vector_1() is found. Does "pytest 
autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd 
need to some particular cleanup, but that's not the case here. pytest 
handles test failures nicely

Even

Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit?:
>
> Hi again,
>
> after solving some issues I used WSL (Windows subsystem Linux) to 
> create an environment where I am able to run tests.
>
> I run the cmake inside build folder in the environment. It?s slow but 
> finally it finish. After cmake --build . --target install all is ready 
> to be tested.
>
> I create a simple test ogr_miramon_vector.py (see the code below) to 
> prove that it?s reliable.
>
> I run:
>
> pytest autotest/ogr/ogr_miramon_vector.py
>
> and:
>
> apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest 
> autotest/ogr/ogr_miramon_vector.py
>
> Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, 
> pytest-sugar 1.0.0)
>
> benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False 
> min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 
> warmup=False warmup_iterations=100000)
>
> GDAL Build Info:
>
> PAM_ENABLED: YES
>
> OGR_ENABLED: YES
>
> CURL_ENABLED: YES
>
> CURL_VERSION: 7.68.0
>
> GEOS_ENABLED: YES
>
> GEOS_VERSION: 3.8.0-CAPI-1.13.1
>
> PROJ_BUILD_VERSION: 6.3.1
>
> PROJ_RUNTIME_VERSION: 6.3.1
>
> COMPILER: GCC 9.4.0
>
> GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data 
> may be skipped)
>
> GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
>
> rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
>
> configfile: pytest.ini
>
> plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
>
> *collected 0 items*
>
> My questions is why it seems it?s not working?
>
> Thanks!
>
> The test:
>
> -------------
>
> import os
>
> import gdaltest
>
> import ogrtest
>
> import pytest
>
> from osgeo import gdal, ogr, osr
>
> pytestmark = pytest.mark.require_driver("MiraMonVector")
>
> ###############################################################################
>
> @pytest.fixture(scope="module", autouse=True)
>
> def init():
>
> with gdaltest.config_option("CPL_DEBUG", "ON"):
>
> yield
>
> ###############################################################################
>
> # basic test
>
> def test_ogr_miramon_vector_1():
>
> try:
>
> ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
>
> lyr = ds.GetLayer(0)
>
> assert lyr is not None, "Failed to get layer"
>
> ??????assert lyr.GetFeatureCount() == 3
>
> assert lyr.GetGeomType() == ogr.wkbPoint
>
> ????????f = lyr.GetNextFeature()
>
> assert f.GetFID() == 0
>
> assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
>
> assert f.GetField("ID_GRAFIC") == "0"
>
> f = lyr.GetNextFeature()
>
> assert f.GetField("ID_GRAFIC") == "1"
>
> f = lyr.GetNextFeature()
>
> assert f.GetField("ID_GRAFIC") == "2"
>
> ds = None
>
> except Exception as e:
>
> pytest.fail(f"Test failed with exception: {e}")
>
> *De:*Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* divendres, 9 de febrer de 2024 11:48
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
> Abel,
>
> Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit?:
>
>     Hi,
>
>     I am at the lasts steps before pulling a request about the MiraMon
>     driver.
>     I need to write some documentation and formalize the tests.
>
>     After that, I?ll do the pull request to github.
>
> I'd suggest first before issuing the pull request that you push to 
> your fork on github and look at the Actions tab. That will allow you 
> to fix a lot of things on your side, before issuing the PR itself
>
>     I am a little confused about the testing. I can use pytest or
>     ctest, right? Which is the favourite? Are there any changes from
>     the official documentation?
>
> ctest is just the CMake way of launching the test suite. It will 
> execute C++ tests of autotest/cpp directly, and for tests written in 
> python will launch "pytest autotest/XXXXX" for each directory.
>
> "ctest --test-dir $build_dir -R autotest_ogr -V"? will just run all 
> the autotest/ogr tests, which can be quite long already.
>
> To test your own development, you may have a more pleasant experience 
> by directly running just the tests for your driver with something like 
> "pytest autotest/ogr/ogr_miramon.py"? (be careful on Windows, the 
> content of $build_dir/autotest is copied from $source_dir/autotest 
> each time "cmake" is run, so if you edit your test .py file directly 
> in the build directory, be super careful of not accidentally losing 
> your work, and make sure to copy its content to the source directory 
> first. That's admittedly an annoying point of the current test setup 
> on Windows, compared to Unix where we use symbolic links)
>
> after setting the environment to have PYTHONPATH point to something 
> like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I 
> believe you're on Windows?). If you look at the first lines output by 
> the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, 
> you'll actually see the PYTHONPATH value to specify.
>
> You also need to first install pytest and other testing dependencies 
> with: python -m pip install autotest/requirements.txt
>
>     There is a minimal test to create?
>
> A maximal test suite, you mean ;-) You should aim for a "reasonable" 
> coverage of the code you wrote. Aiming to test the nominal code paths 
> of your driver is desirable (testing the error cases generally 
> requires a lot more effort).
>
>     Can you recommend me some driver that tests things like:
>
>     1.Read a point/arc/polygon layer from some format (gml,kml,
>     gpckg,..) and assert the number of readed objectes
>
>     2.Read a point layer and assert some points (3d included) and some
>     of the fields values
>
>     3.The same with arcs and polygons
>
>     4.Create some layer from the own format to anothers and compare
>     the results with some ?good? results.
>
>     5.Create multiple layers from one outer format (like gpx) and
>     verify the name of the created files...
>
> You don't necessarily need to use other formats. It is actually better 
> if the tests of a format don't depend too much on other formats, to 
> keep things isolated.
>
> To test the read part of your driver, add a autotest/ogr/data/miramon 
> directory with *small* test files, ideally at most a few KB each to 
> keep the size of the GDAL repository reasonable, and a few features in 
> each is often enough to unit test, with different type of geometries, 
> attributes, and use the OGR Python API to open the file and iterate 
> over its layers and features to check their content. Those files 
> should have ideally be produced by the Miramon software and not by the 
> writing side of your driver, to check the interoperability of your 
> driver with a "reference" software.
>
> For the write site of the driver, you can for example run 
> gdal.VectorTranslate(dest, source) on those files, and use again the 
> test function to validate that the read side of your driver likes what 
> the write site has produced. An alternative is also to do a binary 
> comparison of the file generated by your driver with a reference test 
> file stored in for example autotest/ogr/data/miramon/ref_output. But 
> this may be sometimes a fragile approach if the output of your driver 
> might change in the future (would require regenerating the reference 
> test files).
>
> I'd suggest your test suite also has a test that runs the "test_ogrsf" 
> command line utility which is a kind of compliance test suite which 
> checks a number of expectations for a driver, like that 
> GetFeatureCount() returns the same number as iterating with 
> GetNextFeature(), etc etc
>
> It is difficult to point at a "reference" test suite, as all drivers 
> have their particularities and may need specific tests. Potential 
> sources of inspirations:
>
> - autotest/ogr/ogr_gtfs.py? . Shows very simple testing of the read 
> side of a driver, and includes a test_ogrsf test
>
> - autotest/ogr/ogr_csv.py? has examples where the writing side of the 
> driver is checked by opening the output file and checking that some 
> strings are present in it (only easily doable with text based formats)
>
> - autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the 
> writing side of a driver . A lot in it will be specific to the format 
> and irrelevant to your concern, but you should at least find all 
> possible aspects of how to test the write side of a driver.
>
> Even
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/70a81944/attachment-0001.htm>

From a.pau at creaf.uab.cat  Wed Mar  6 04:14:54 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 6 Mar 2024 12:14:54 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
Message-ID: <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi Even,
I finally discovered the error. It was the fixture. In the wrong place.
Now I?m creating the test.
I hope finish it soon.

On the other hand,
in my actions tab: Merge branch 'OSGeo:master' into master ? AbelPau/gdal at 0249b6d (github.com)<https://github.com/AbelPau/gdal/actions/runs/8169099745/job/22332488002>

There are some tiff failures, but nothing on my hand about tiff.
================================== FAILURES ===================================
36: _____________________________ test_tiff_write_133 _____________________________
36:
36: def test_tiff_write_133():

Do you know what it can be?

De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:%3ceven.rouault at spatialys.com%3e>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself



I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).


Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/8246230e/attachment-0001.htm>

From even.rouault at spatialys.com  Wed Mar  6 04:36:07 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Mar 2024 13:36:07 +0100
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <33f75b01-844d-495b-baff-f2d568637c3d@spatialys.com>


Le 06/03/2024 ? 13:14, Abel Pau a ?crit?:
>
> Hi Even,
>
> I finally discovered the error. It was the fixture. In the wrong place.
>
> Now I?m creating the test.
>
> I hope finish it soon.
>
> On the other hand,
>
> in my actions tab: Merge branch 'OSGeo:master' into master ? 
> AbelPau/gdal at 0249b6d (github.com) 
> <https://github.com/AbelPau/gdal/actions/runs/8169099745/job/22332488002>
>
> There are some tiff failures, but nothing on my hand about tiff.
>
> ================================== FAILURES 
> ===================================
>
> 36: _____________________________ test_tiff_write_133 
> _____________________________
>
> 36:
>
> 36: def test_tiff_write_133():
>
> Do you know what it can be?
>
There are sometimes random failures, but here it fails on both the 
build-windows-msys2-mingw and build-windows-conda configs . I would 
suspect this might be a side effect of a previous run of the Miramon 
driver by another test with an invalid filename such as /foo/bar. 
Actually I see that test_ogrsf tries to create a /foo/test file.

And 
https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L219 
does a VSIMkdirRecursive(), so it must create a "/foo" directory. I 
would recommend against using VSIMkdirRecursive() in a driver. You might 
use VSIMkdir() to create the latest level of directory, but creating the 
whole hiearchy is granting too much power to a driver.

Even

> *De:*Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dimecres, 6 de mar? de 2024 13:09
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
> Hi,
>
> I don't see anything wrong. I've tried that on my native Linux build 
> and the test_ogr_miramon_vector_1() is found. Does "pytest 
> autotest/ogr/ogr_basic_test.py" work?*
>
> Note: you don't need the try / except in your test case unless you'd 
> need to some particular cleanup, but that's not the case here. pytest 
> handles test failures nicely
>
> Even
>
> Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit?:
>
>     Hi again,
>
>     after solving some issues I used WSL (Windows subsystem Linux) to
>     create an environment where I am able to run tests.
>
>     I run the cmake inside build folder in the environment. It?s slow
>     but finally it finish. After cmake --build . --target install all
>     is ready to be tested.
>
>     I create a simple test ogr_miramon_vector.py (see the code below)
>     to prove that it?s reliable.
>
>     I run:
>
>     pytest autotest/ogr/ogr_miramon_vector.py
>
>     and:
>
>     apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest
>     autotest/ogr/ogr_miramon_vector.py
>
>     Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2,
>     pytest-sugar 1.0.0)
>
>     benchmark: 4.0.0 (defaults: timer=time.perf_counter
>     disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0
>     calibration_precision=10 warmup=False warmup_iterations=100000)
>
>     GDAL Build Info:
>
>     PAM_ENABLED: YES
>
>     OGR_ENABLED: YES
>
>     CURL_ENABLED: YES
>
>     CURL_VERSION: 7.68.0
>
>     GEOS_ENABLED: YES
>
>     GEOS_VERSION: 3.8.0-CAPI-1.13.1
>
>     PROJ_BUILD_VERSION: 6.3.1
>
>     PROJ_RUNTIME_VERSION: 6.3.1
>
>     COMPILER: GCC 9.4.0
>
>     GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded
>     data may be skipped)
>
>     GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be
>     skipped)
>
>     rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
>
>     configfile: pytest.ini
>
>     plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
>
>     *collected 0 items*
>
>     My questions is why it seems it?s not working?
>
>     Thanks!
>
>     The test:
>
>     -------------
>
>     import os
>
>     import gdaltest
>
>     import ogrtest
>
>     import pytest
>
>     from osgeo import gdal, ogr, osr
>
>     pytestmark = pytest.mark.require_driver("MiraMonVector")
>
>     ###############################################################################
>
>     @pytest.fixture(scope="module", autouse=True)
>
>     def init():
>
>     with gdaltest.config_option("CPL_DEBUG", "ON"):
>
>     yield
>
>     ###############################################################################
>
>     # basic test
>
>     def test_ogr_miramon_vector_1():
>
>     try:
>
>     ds =
>     gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
>
>     lyr = ds.GetLayer(0)
>
>     assert lyr is not None, "Failed to get layer"
>
>     ??????assert lyr.GetFeatureCount() == 3
>
>     assert lyr.GetGeomType() == ogr.wkbPoint
>
>     ????????f = lyr.GetNextFeature()
>
>     assert f.GetFID() == 0
>
>     assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
>
>     assert f.GetField("ID_GRAFIC") == "0"
>
>     f = lyr.GetNextFeature()
>
>     assert f.GetField("ID_GRAFIC") == "1"
>
>     f = lyr.GetNextFeature()
>
>     assert f.GetField("ID_GRAFIC") == "2"
>
>     ds = None
>
>     except Exception as e:
>
>     pytest.fail(f"Test failed with exception: {e}")
>
>     *De:*Even Rouault <even.rouault at spatialys.com>
>     <mailto:%3ceven.rouault at spatialys.com%3e>
>     *Enviado el:* divendres, 9 de febrer de 2024 11:48
>     *Para:* Abel Pau <a.pau at creaf.uab.cat>
>     <mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
>     *Asunto:* Re: [gdal-dev] Testing the driver
>
>     Abel,
>
>     Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit?:
>
>         Hi,
>
>         I am at the lasts steps before pulling a request about the
>         MiraMon driver.
>         I need to write some documentation and formalize the tests.
>
>         After that, I?ll do the pull request to github.
>
>     I'd suggest first before issuing the pull request that you push to
>     your fork on github and look at the Actions tab. That will allow
>     you to fix a lot of things on your side, before issuing the PR itself
>
>
>         I am a little confused about the testing. I can use pytest or
>         ctest, right? Which is the favourite? Are there any changes
>         from the official documentation?
>
>     ctest is just the CMake way of launching the test suite. It will
>     execute C++ tests of autotest/cpp directly, and for tests written
>     in python will launch "pytest autotest/XXXXX" for each directory.
>
>     "ctest --test-dir $build_dir -R autotest_ogr -V"? will just run
>     all the autotest/ogr tests, which can be quite long already.
>
>     To test your own development, you may have a more pleasant
>     experience by directly running just the tests for your driver with
>     something like "pytest autotest/ogr/ogr_miramon.py"? (be careful
>     on Windows, the content of $build_dir/autotest is copied from
>     $source_dir/autotest each time "cmake" is run, so if you edit your
>     test .py file directly in the build directory, be super careful of
>     not accidentally losing your work, and make sure to copy its
>     content to the source directory first. That's admittedly an
>     annoying point of the current test setup on Windows, compared to
>     Unix where we use symbolic links)
>
>     after setting the environment to have PYTHONPATH point to
>     something like $build_dir/swig/python/Release or
>     $build_dir/swig/python/Debug (I believe you're on Windows?).? If
>     you look at the first lines output by the above "ctest --test-dir
>     $build_dir -R autotest_ogr -V" invokation, you'll actually see the
>     PYTHONPATH value to specify.
>
>     You also need to first install pytest and other testing
>     dependencies with: python -m pip install autotest/requirements.txt
>
>         There is a minimal test to create?
>
>     A maximal test suite, you mean ;-) You should aim for a
>     "reasonable" coverage of the code you wrote. Aiming to test the
>     nominal code paths of your driver is desirable (testing the error
>     cases generally requires a lot more effort).
>
>
>         Can you recommend me some driver that tests things like:
>
>         1.Read a point/arc/polygon layer from some format (gml,kml,
>         gpckg,..) and assert the number of readed objectes
>
>         2.Read a point layer and assert some points (3d included) and
>         some of the fields values
>
>         3.The same with arcs and polygons
>
>         4.Create some layer from the own format to anothers and
>         compare the results with some ?good? results.
>
>         5.Create multiple layers from one outer format (like gpx) and
>         verify the name of the created files...
>
>     You don't necessarily need to use other formats. It is actually
>     better if the tests of a format don't depend too much on other
>     formats, to keep things isolated.
>
>     To test the read part of your driver, add a
>     autotest/ogr/data/miramon directory with *small* test files,
>     ideally at most a few KB each to keep the size of the GDAL
>     repository reasonable, and a few features in each is often enough
>     to unit test, with different type of geometries, attributes, and
>     use the OGR Python API to open the file and iterate over its
>     layers and features to check their content. Those files should
>     have ideally be produced by the Miramon software and not by the
>     writing side of your driver, to check the interoperability of your
>     driver with a "reference" software.
>
>     For the write site of the driver, you can for example run
>     gdal.VectorTranslate(dest, source) on those files, and use again
>     the test function to validate that the read side of your driver
>     likes what the write site has produced. An alternative is also to
>     do a binary comparison of the file generated by your driver with a
>     reference test file stored in for example
>     autotest/ogr/data/miramon/ref_output. But this may be sometimes a
>     fragile approach if the output of your driver might change in the
>     future (would require regenerating the reference test files).
>
>     I'd suggest your test suite also has a test that runs the
>     "test_ogrsf" command line utility which is a kind of compliance
>     test suite which checks a number of expectations for a driver,
>     like that GetFeatureCount() returns the same number as iterating
>     with GetNextFeature(), etc etc
>
>     It is difficult to point at a "reference" test suite, as all
>     drivers have their particularities and may need specific tests.
>     Potential sources of inspirations:
>
>     - autotest/ogr/ogr_gtfs.py? . Shows very simple testing of the
>     read side of a driver, and includes a test_ogrsf test
>
>     - autotest/ogr/ogr_csv.py? has examples where the writing side of
>     the driver is checked by opening the output file and checking that
>     some strings are present in it (only easily doable with text based
>     formats)
>
>     - autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the
>     writing side of a driver . A lot in it will be specific to the
>     format and irrelevant to your concern, but you should at least
>     find all possible aspects of how to test the write side of a driver.
>
>     Even
>
>     -- 
>
>     http://www.spatialys.com
>
>     My software is free, but my time generally not.
>
>
>
>     _______________________________________________
>
>     gdal-dev mailing list
>
>     gdal-dev at lists.osgeo.org
>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/c8e6a748/attachment-0001.htm>

From a.pau at creaf.uab.cat  Wed Mar  6 04:52:09 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 6 Mar 2024 12:52:09 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <33f75b01-844d-495b-baff-f2d568637c3d@spatialys.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <33f75b01-844d-495b-baff-f2d568637c3d@spatialys.com>
Message-ID: <PAXPR07MB7775F7BED4B21087D898D6E0A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>

Ok, I ?ve changed that. Let?s see if it?s the problem.
It?s all so delicate :)
Thanks again!

De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 13:36
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver



Le 06/03/2024 ? 13:14, Abel Pau a ?crit :
Hi Even,
I finally discovered the error. It was the fixture. In the wrong place.
Now I?m creating the test.
I hope finish it soon.

On the other hand,
in my actions tab: Merge branch 'OSGeo:master' into master ? AbelPau/gdal at 0249b6d (github.com)<https://github.com/AbelPau/gdal/actions/runs/8169099745/job/22332488002>

There are some tiff failures, but nothing on my hand about tiff.
================================== FAILURES ===================================
36: _____________________________ test_tiff_write_133 _____________________________
36:
36: def test_tiff_write_133():

Do you know what it can be?

There are sometimes random failures, but here it fails on both the build-windows-msys2-mingw and build-windows-conda configs . I would suspect this might be a side effect of a previous run of the Miramon driver by another test with an invalid filename such as /foo/bar. Actually I see that test_ogrsf tries to create a /foo/test file.

And https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L219 does a VSIMkdirRecursive(), so it must create a "/foo" directory. I would recommend against using VSIMkdirRecursive() in a driver. You might use VSIMkdir() to create the latest level of directory, but creating the whole hiearchy is granting too much power to a driver.

Even

De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:%3ceven.rouault at spatialys.com%3e>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself




I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).



Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.




_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/6880ff76/attachment-0001.htm>

From a.pau at creaf.uab.cat  Wed Mar  6 06:07:50 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 6 Mar 2024 14:07:50 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
Message-ID: <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>

About the question: . Does "pytest autotest/ogr/ogr_basic_test.py" work?*
The answer is YES.
ogr/ogr_basic_test.py ??????????????????????????????????????????????????????????????????                                                                                                                                     100% ??????????

Results (5.98s):
      66 passed





De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself



I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).


Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/9579543c/attachment-0001.htm>

From johannespaul92 at gmail.com  Wed Mar  6 06:25:28 2024
From: johannespaul92 at gmail.com (Johannes Paul)
Date: Wed, 6 Mar 2024 15:25:28 +0100
Subject: [gdal-dev] GDAL_ENABLE_DRIVER_PDF
In-Reply-To: <db894d21-a7d6-4304-835f-9c39829553d5@spatialys.com>
References: <CACcmK9YWRQqEx9N+vmMFUvzmN8NC8z+eyBMB3kLqeZkaUQaLpQ@mail.gmail.com>
 <db894d21-a7d6-4304-835f-9c39829553d5@spatialys.com>
Message-ID: <CACcmK9YQ+pg+n+HgyPJHZTxPrE10a+JdVokcLaNf87JZCdrNRQ@mail.gmail.com>

Thanks for your answer Even, lcms2 was indeed a missing piece, it allowed
me to get GDAL configured but the build failed with a missing header:
*fatal error: core/fpdfapi/page/cpdf_page.h: No such file or directory*

I finally used your pre-built binaries from
https://github.com/rouault/pdfium_build_gdal_3_8/releases
And get GDAL to compile properly with pdfium.

Thanks for the support,
Johannes

On Wed, 6 Mar 2024 at 11:19, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> I suspect that the error comes from the fact that one of several of the
> other dependencies required by pdfium are not found: JPEG, PNG, OpenJPEG,
> lcms2
>
> Even
> Le 06/03/2024 ? 11:00, Johannes Paul via gdal-dev a ?crit :
>
> Hello,
>
> I have compiled PDFium from https://github.com/rouault/pdfium/tree/master
> and I'm trying to get GDAL 3.8.4 built with this geospatial PDF driver on
> Almalinux 8.
>
> However if I use cmake with the following variables :
> *-DGDAL_USE_PDFIUM=ON -DGDAL_ENABLE_DRIVER_PDF=ON
> -DPDFIUM_INCLUDE_DIR="${INSTALLDIR}"/include/pdfium
> -DPDFIUM_LIBRARY="${INSTALLDIR}"/lib/pdfium/libpdfium.a*
>
> I get the following error :
>
>
>
> *CMake Error at cmake/helpers/GdalDriverHelper.cmake:284 (message):
> gdal_target_link_libraries(): PRIVATE is a mandatory argument. Call Stack
> (most recent call first):   frmts/pdf/CMakeLists.txt:53
> (gdal_target_link_libraries)*
>
> If I remove *-DGDAL_ENABLE_DRIVER_PDF=ON *, I get GDAL compiled but
> without PDFium.
>
> Any idea?
> Thanks,
> Johannes
>
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/c9dc4bc1/attachment.htm>

From a.pau at creaf.uab.cat  Wed Mar  6 07:02:23 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 6 Mar 2024 15:02:23 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi again,
anyone have any advice for debuging into python code?
I am using Pdb but it?s a little confusing.
Any experience?
Thanks


apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 3 items

ogr/ogr_miramon_vector.py ??                                                                                                                                                                                                  67% ???????
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PDB set_trace (IO-capturing turned off) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> /mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py(132)test_ogr_miramon_simple_polygon()
-> f = lyr.GetNextFeature()
(Pdb) s
--Call--
> /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1654)GetNextFeature()
-> def GetNextFeature(self, *args) -> "OGRFeatureShadow *":
(Pdb) s
> /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1668)GetNextFeature()
-> return _ogr.Layer_GetNextFeature(self, *args)
(Pdb) s
ERROR 2: CPLRealloc(): Out of memory allocating 667227037326010464 bytes.
Fatal Python error: Aborted

Current thread 0x00007f67c7140740 (most recent call first):
  File "/mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py", line 1668 in GetNextFeature
  File "/mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py", line 132 in test_ogr_miramon_simple_polygon
  File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line 194 in pytest_pyfunc_call
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line 1831 in runtest
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 170 in pytest_runtest_call
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 263 in <lambda>
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 342 in from_call
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 262 in call_runtest_hook
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 223 in call_and_report
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 134 in runtestprotocol
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 115 in pytest_runtest_protocol
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 352 in pytest_runtestloop
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 327 in _main
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 273 in wrap_session
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 320 in pytest_cmdline_main
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", line 175 in main
  File "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", line 198 in console_main
  File "/usr/local/bin/pytest", line 8 in <module>
Aborted


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dimecres, 6 de mar? de 2024 15:08
Para: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver

About the question: . Does "pytest autotest/ogr/ogr_basic_test.py" work?*
The answer is YES.
ogr/ogr_basic_test.py ??????????????????????????????????????????????????????????????????                                                                                                                                     100% ??????????

Results (5.98s):
      66 passed





De: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself


I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).

Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.


_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/84330e65/attachment-0001.htm>

From a.pau at creaf.uab.cat  Wed Mar  6 07:23:41 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 6 Mar 2024 15:23:41 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB7775F7BED4B21087D898D6E0A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <33f75b01-844d-495b-baff-f2d568637c3d@spatialys.com>
 <PAXPR07MB7775F7BED4B21087D898D6E0A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB7775EBF91F99E222DDEF9359A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
It seems nothing changes. I understand that the environment is new and the execution is not related with the last one.
Here there are 5 tests that fail..

Any idea of what can be happening?
They are very unrelated
Bye VSIMkdirRecursive() ? AbelPau/gdal at 646b98b (github.com)<https://github.com/AbelPau/gdal/actions/runs/8172351502/job/22342474513>


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dimecres, 6 de mar? de 2024 13:52
Para: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver

Ok, I ?ve changed that. Let?s see if it?s the problem.
It?s all so delicate :)
Thanks again!

De: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Enviado el: dimecres, 6 de mar? de 2024 13:36
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver



Le 06/03/2024 ? 13:14, Abel Pau a ?crit :
Hi Even,
I finally discovered the error. It was the fixture. In the wrong place.
Now I?m creating the test.
I hope finish it soon.

On the other hand,
in my actions tab: Merge branch 'OSGeo:master' into master ? AbelPau/gdal at 0249b6d (github.com)<https://github.com/AbelPau/gdal/actions/runs/8169099745/job/22332488002>

There are some tiff failures, but nothing on my hand about tiff.
================================== FAILURES ===================================
36: _____________________________ test_tiff_write_133 _____________________________
36:
36: def test_tiff_write_133():

Do you know what it can be?

There are sometimes random failures, but here it fails on both the build-windows-msys2-mingw and build-windows-conda configs . I would suspect this might be a side effect of a previous run of the Miramon driver by another test with an invalid filename such as /foo/bar. Actually I see that test_ogrsf tries to create a /foo/test file.

And https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L219 does a VSIMkdirRecursive(), so it must create a "/foo" directory. I would recommend against using VSIMkdirRecursive() in a driver. You might use VSIMkdir() to create the latest level of directory, but creating the whole hiearchy is granting too much power to a driver.

Even

De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:%3ceven.rouault at spatialys.com%3e>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself



I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).


Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/3f0ad8af/attachment-0001.htm>

From even.rouault at spatialys.com  Wed Mar  6 08:11:38 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Mar 2024 17:11:38 +0100
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>

PYTHONMALLOC=malloc gdb --args python3 -m pytest 
autotest/ogr/ogr_miramon_vector.py

PYTHONMALLOC=malloc valgrind python3 -m pytest 
autotest/ogr/ogr_miramon_vector.py

Le 06/03/2024 ? 16:02, Abel Pau via gdal-dev a ?crit?:
>
> Hi again,
>
> anyone have any advice for debuging into python code?
> I am using Pdb but it?s a little confusing.
>
> Any experience?
>
> Thanks
>
> apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest 
> autotest/ogr/ogr_miramon_vector.py
>
> Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, 
> pytest-sugar 1.0.0)
>
> benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False 
> min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 
> warmup=False warmup_iterations=100000)
>
> GDAL Build Info:
>
> PAM_ENABLED: YES
>
> OGR_ENABLED: YES
>
> CURL_ENABLED: YES
>
> CURL_VERSION: 7.68.0
>
> GEOS_ENABLED: YES
>
> GEOS_VERSION: 3.8.0-CAPI-1.13.1
>
> PROJ_BUILD_VERSION: 6.3.1
>
> PROJ_RUNTIME_VERSION: 6.3.1
>
> COMPILER: GCC 9.4.0
>
> GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data 
> may be skipped)
>
> GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
>
> rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
>
> configfile: pytest.ini
>
> plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
>
> collected 3 items
>
> ogr/ogr_miramon_vector.py 
> ??????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????67%???????
>
> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PDB set_trace (IO-capturing turned off) 
> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>
> > /mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py(132)test_ogr_miramon_simple_polygon()
>
> -> f = lyr.GetNextFeature()
>
> (Pdb) s
>
> --Call--
>
> > /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1654)GetNextFeature()
>
> -> def GetNextFeature(self, *args) -> "OGRFeatureShadow *":
>
> (Pdb) s
>
> > /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1668)GetNextFeature()
>
> -> return _ogr.Layer_GetNextFeature(self, *args)
>
> (Pdb) s
>
> ERROR 2: CPLRealloc(): Out of memory allocating 667227037326010464 bytes.
>
> Fatal Python error: Aborted
>
> Current thread 0x00007f67c7140740 (most recent call first):
>
> File "/mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py", 
> line 1668 in GetNextFeature
>
> File 
> "/mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py", 
> line 132 in test_ogr_miramon_simple_polygon
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line 
> 194 in pytest_pyfunc_call
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 
> 102 in _multicall
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 
> 119 in _hookexec
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 
> 501 in __call__
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line 
> 1831 in runtest
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 
> 170 in pytest_runtest_call
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 
> 102 in _multicall
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 
> 119 in _hookexec
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 
> 501 in __call__
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 
> 263 in <lambda>
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 
> 342 in from_call
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 
> 262 in call_runtest_hook
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 
> 223 in call_and_report
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 
> 134 in runtestprotocol
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 
> 115 in pytest_runtest_protocol
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 
> 102 in _multicall
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 
> 119 in _hookexec
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 
> 501 in __call__
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 
> 352 in pytest_runtestloop
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 
> 102 in _multicall
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 
> 119 in _hookexec
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 
> 501 in __call__
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 
> 327 in _main
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 
> 273 in wrap_session
>
> File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 
> 320 in pytest_cmdline_main
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 
> 102 in _multicall
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 
> 119 in _hookexec
>
> File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 
> 501 in __call__
>
> File 
> "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", 
> line 175 in main
>
> File 
> "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", 
> line 198 in console_main
>
> File "/usr/local/bin/pytest", line 8 in <module>
>
> Aborted
>
> *De:*gdal-dev <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Abel 
> Pau via gdal-dev
> *Enviado el:* dimecres, 6 de mar? de 2024 15:08
> *Para:* Even Rouault <even.rouault at spatialys.com>; 
> gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
> About the question: . Does "pytest autotest/ogr/ogr_basic_test.py" work?*
>
> The answer is YES.
>
> ogr/ogr_basic_test.py 
> ??????????????????????????????????????????????????????????????????100% 
> ??????????
>
> Results (5.98s):
>
> 66 passed
>
> *De:*Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dimecres, 6 de mar? de 2024 13:09
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
> Hi,
>
> I don't see anything wrong. I've tried that on my native Linux build 
> and the test_ogr_miramon_vector_1() is found. Does "pytest 
> autotest/ogr/ogr_basic_test.py" work?*
>
> Note: you don't need the try / except in your test case unless you'd 
> need to some particular cleanup, but that's not the case here. pytest 
> handles test failures nicely
>
> Even
>
> Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit?:
>
>     Hi again,
>
>     after solving some issues I used WSL (Windows subsystem Linux) to
>     create an environment where I am able to run tests.
>
>     I run the cmake inside build folder in the environment. It?s slow
>     but finally it finish. After cmake --build . --target install all
>     is ready to be tested.
>
>     I create a simple test ogr_miramon_vector.py (see the code below)
>     to prove that it?s reliable.
>
>     I run:
>
>     pytest autotest/ogr/ogr_miramon_vector.py
>
>     and:
>
>     apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest
>     autotest/ogr/ogr_miramon_vector.py
>
>     Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2,
>     pytest-sugar 1.0.0)
>
>     benchmark: 4.0.0 (defaults: timer=time.perf_counter
>     disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0
>     calibration_precision=10 warmup=False warmup_iterations=100000)
>
>     GDAL Build Info:
>
>     PAM_ENABLED: YES
>
>     OGR_ENABLED: YES
>
>     CURL_ENABLED: YES
>
>     CURL_VERSION: 7.68.0
>
>     GEOS_ENABLED: YES
>
>     GEOS_VERSION: 3.8.0-CAPI-1.13.1
>
>     PROJ_BUILD_VERSION: 6.3.1
>
>     PROJ_RUNTIME_VERSION: 6.3.1
>
>     COMPILER: GCC 9.4.0
>
>     GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded
>     data may be skipped)
>
>     GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be
>     skipped)
>
>     rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
>
>     configfile: pytest.ini
>
>     plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
>
>     *collected 0 items*
>
>     My questions is why it seems it?s not working?
>
>     Thanks!
>
>     The test:
>
>     -------------
>
>     import os
>
>     import gdaltest
>
>     import ogrtest
>
>     import pytest
>
>     from osgeo import gdal, ogr, osr
>
>     pytestmark = pytest.mark.require_driver("MiraMonVector")
>
>     ###############################################################################
>
>     @pytest.fixture(scope="module", autouse=True)
>
>     def init():
>
>     with gdaltest.config_option("CPL_DEBUG", "ON"):
>
>     yield
>
>     ###############################################################################
>
>     # basic test
>
>     def test_ogr_miramon_vector_1():
>
>     try:
>
>     ds =
>     gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
>
>     lyr = ds.GetLayer(0)
>
>     assert lyr is not None, "Failed to get layer"
>
>     ??????assert lyr.GetFeatureCount() == 3
>
>     assert lyr.GetGeomType() == ogr.wkbPoint
>
>     ????????f = lyr.GetNextFeature()
>
>     assert f.GetFID() == 0
>
>     assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
>
>     assert f.GetField("ID_GRAFIC") == "0"
>
>     f = lyr.GetNextFeature()
>
>     assert f.GetField("ID_GRAFIC") == "1"
>
>     f = lyr.GetNextFeature()
>
>     assert f.GetField("ID_GRAFIC") == "2"
>
>     ds = None
>
>     except Exception as e:
>
>     pytest.fail(f"Test failed with exception: {e}")
>
>     *De:*Even Rouault <even.rouault at spatialys.com>
>     <mailto:even.rouault at spatialys.com>
>     *Enviado el:* divendres, 9 de febrer de 2024 11:48
>     *Para:* Abel Pau <a.pau at creaf.uab.cat>
>     <mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
>     *Asunto:* Re: [gdal-dev] Testing the driver
>
>     Abel,
>
>     Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit?:
>
>         Hi,
>
>         I am at the lasts steps before pulling a request about the
>         MiraMon driver.
>         I need to write some documentation and formalize the tests.
>
>         After that, I?ll do the pull request to github.
>
>     I'd suggest first before issuing the pull request that you push to
>     your fork on github and look at the Actions tab. That will allow
>     you to fix a lot of things on your side, before issuing the PR itself
>
>         I am a little confused about the testing. I can use pytest or
>         ctest, right? Which is the favourite? Are there any changes
>         from the official documentation?
>
>     ctest is just the CMake way of launching the test suite. It will
>     execute C++ tests of autotest/cpp directly, and for tests written
>     in python will launch "pytest autotest/XXXXX" for each directory.
>
>     "ctest --test-dir $build_dir -R autotest_ogr -V"? will just run
>     all the autotest/ogr tests, which can be quite long already.
>
>     To test your own development, you may have a more pleasant
>     experience by directly running just the tests for your driver with
>     something like "pytest autotest/ogr/ogr_miramon.py"? (be careful
>     on Windows, the content of $build_dir/autotest is copied from
>     $source_dir/autotest each time "cmake" is run, so if you edit your
>     test .py file directly in the build directory, be super careful of
>     not accidentally losing your work, and make sure to copy its
>     content to the source directory first. That's admittedly an
>     annoying point of the current test setup on Windows, compared to
>     Unix where we use symbolic links)
>
>     after setting the environment to have PYTHONPATH point to
>     something like $build_dir/swig/python/Release or
>     $build_dir/swig/python/Debug (I believe you're on Windows?).? If
>     you look at the first lines output by the above "ctest --test-dir
>     $build_dir -R autotest_ogr -V" invokation, you'll actually see the
>     PYTHONPATH value to specify.
>
>     You also need to first install pytest and other testing
>     dependencies with: python -m pip install autotest/requirements.txt
>
>         There is a minimal test to create?
>
>     A maximal test suite, you mean ;-) You should aim for a
>     "reasonable" coverage of the code you wrote. Aiming to test the
>     nominal code paths of your driver is desirable (testing the error
>     cases generally requires a lot more effort).
>
>         Can you recommend me some driver that tests things like:
>
>         1.Read a point/arc/polygon layer from some format (gml,kml,
>         gpckg,..) and assert the number of readed objectes
>
>         2.Read a point layer and assert some points (3d included) and
>         some of the fields values
>
>         3.The same with arcs and polygons
>
>         4.Create some layer from the own format to anothers and
>         compare the results with some ?good? results.
>
>         5.Create multiple layers from one outer format (like gpx) and
>         verify the name of the created files...
>
>     You don't necessarily need to use other formats. It is actually
>     better if the tests of a format don't depend too much on other
>     formats, to keep things isolated.
>
>     To test the read part of your driver, add a
>     autotest/ogr/data/miramon directory with *small* test files,
>     ideally at most a few KB each to keep the size of the GDAL
>     repository reasonable, and a few features in each is often enough
>     to unit test, with different type of geometries, attributes, and
>     use the OGR Python API to open the file and iterate over its
>     layers and features to check their content. Those files should
>     have ideally be produced by the Miramon software and not by the
>     writing side of your driver, to check the interoperability of your
>     driver with a "reference" software.
>
>     For the write site of the driver, you can for example run
>     gdal.VectorTranslate(dest, source) on those files, and use again
>     the test function to validate that the read side of your driver
>     likes what the write site has produced. An alternative is also to
>     do a binary comparison of the file generated by your driver with a
>     reference test file stored in for example
>     autotest/ogr/data/miramon/ref_output. But this may be sometimes a
>     fragile approach if the output of your driver might change in the
>     future (would require regenerating the reference test files).
>
>     I'd suggest your test suite also has a test that runs the
>     "test_ogrsf" command line utility which is a kind of compliance
>     test suite which checks a number of expectations for a driver,
>     like that GetFeatureCount() returns the same number as iterating
>     with GetNextFeature(), etc etc
>
>     It is difficult to point at a "reference" test suite, as all
>     drivers have their particularities and may need specific tests.
>     Potential sources of inspirations:
>
>     - autotest/ogr/ogr_gtfs.py? . Shows very simple testing of the
>     read side of a driver, and includes a test_ogrsf test
>
>     - autotest/ogr/ogr_csv.py? has examples where the writing side of
>     the driver is checked by opening the output file and checking that
>     some strings are present in it (only easily doable with text based
>     formats)
>
>     - autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the
>     writing side of a driver . A lot in it will be specific to the
>     format and irrelevant to your concern, but you should at least
>     find all possible aspects of how to test the write side of a driver.
>
>     Even
>
>     -- 
>
>     http://www.spatialys.com
>
>     My software is free, but my time generally not.
>
>     _______________________________________________
>
>     gdal-dev mailing list
>
>     gdal-dev at lists.osgeo.org
>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/36890ac8/attachment-0001.htm>

From a.pau at creaf.uab.cat  Wed Mar  6 08:53:45 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 6 Mar 2024 16:53:45 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
Message-ID: <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>

I was using ubuntu 20.04 and it doesn?t work there.
Trying to install 22.04 but I have some issues (again).




De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 17:12
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver


PYTHONMALLOC=malloc gdb --args python3 -m pytest autotest/ogr/ogr_miramon_vector.py

PYTHONMALLOC=malloc valgrind python3 -m pytest autotest/ogr/ogr_miramon_vector.py
Le 06/03/2024 ? 16:02, Abel Pau via gdal-dev a ?crit :
Hi again,
anyone have any advice for debuging into python code?
I am using Pdb but it?s a little confusing.
Any experience?
Thanks


apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 3 items

ogr/ogr_miramon_vector.py ??                                                                                                                                                                                                  67%???????
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PDB set_trace (IO-capturing turned off) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> /mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py(132)test_ogr_miramon_simple_polygon()
-> f = lyr.GetNextFeature()
(Pdb) s
--Call--
> /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1654)GetNextFeature()
-> def GetNextFeature(self, *args) -> "OGRFeatureShadow *":
(Pdb) s
> /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1668)GetNextFeature()
-> return _ogr.Layer_GetNextFeature(self, *args)
(Pdb) s
ERROR 2: CPLRealloc(): Out of memory allocating 667227037326010464 bytes.
Fatal Python error: Aborted

Current thread 0x00007f67c7140740 (most recent call first):
  File "/mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py", line 1668 in GetNextFeature
  File "/mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py", line 132 in test_ogr_miramon_simple_polygon
  File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line 194 in pytest_pyfunc_call
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line 1831 in runtest
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 170 in pytest_runtest_call
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 263 in <lambda>
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 342 in from_call
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 262 in call_runtest_hook
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 223 in call_and_report
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 134 in runtestprotocol
  File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line 115 in pytest_runtest_protocol
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 352 in pytest_runtestloop
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 327 in _main
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 273 in wrap_session
  File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 320 in pytest_cmdline_main
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line 102 in _multicall
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line 119 in _hookexec
  File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501 in __call__
  File "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", line 175 in main
  File "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", line 198 in console_main
  File "/usr/local/bin/pytest", line 8 in <module>
Aborted


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dimecres, 6 de mar? de 2024 15:08
Para: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver

About the question: . Does "pytest autotest/ogr/ogr_basic_test.py" work?*
The answer is YES.
ogr/ogr_basic_test.py ??????????????????????????????????????????????????????????????????                                                                                                                                     100% ??????????

Results (5.98s):
      66 passed





De: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself



I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).


Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.


_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/b78350ed/attachment-0001.htm>

From daniel.fred.evans at gmail.com  Wed Mar  6 08:59:42 2024
From: daniel.fred.evans at gmail.com (Daniel Evans)
Date: Wed, 6 Mar 2024 16:59:42 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
 <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>

Is it worth moving this in-depth discussion to a PR or similar for the new
driver?

My thinking is that a lengthy discussion on memory leak detection
techniques in C++, how to run tests in Python, etc., aren't topics relevant
to most GDAL mailing list subscribers.

Cheers,
Daniel

On Wed, 6 Mar 2024, 16:54 Abel Pau via gdal-dev, <gdal-dev at lists.osgeo.org>
wrote:

> I was using ubuntu 20.04 and it doesn?t work there.
>
> Trying to install 22.04 but I have some issues (again).
>
>
>
>
>
>
>
>
>
> *De:* Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dimecres, 6 de mar? de 2024 17:12
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
>
>
> PYTHONMALLOC=malloc gdb --args python3 -m pytest
> autotest/ogr/ogr_miramon_vector.py
>
> PYTHONMALLOC=malloc valgrind python3 -m pytest
> autotest/ogr/ogr_miramon_vector.py
>
> Le 06/03/2024 ? 16:02, Abel Pau via gdal-dev a ?crit :
>
> Hi again,
>
> anyone have any advice for debuging into python code?
> I am using Pdb but it?s a little confusing.
>
> Any experience?
>
> Thanks
>
>
>
>
>
> apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest
> autotest/ogr/ogr_miramon_vector.py
>
> Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2,
> pytest-sugar 1.0.0)
>
> benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False
> min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10
> warmup=False warmup_iterations=100000)
>
> GDAL Build Info:
>
>   PAM_ENABLED: YES
>
>   OGR_ENABLED: YES
>
>   CURL_ENABLED: YES
>
>   CURL_VERSION: 7.68.0
>
>   GEOS_ENABLED: YES
>
>   GEOS_VERSION: 3.8.0-CAPI-1.13.1
>
>   PROJ_BUILD_VERSION: 6.3.1
>
>   PROJ_RUNTIME_VERSION: 6.3.1
>
>   COMPILER: GCC 9.4.0
>
> GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may
> be skipped)
>
> GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
>
> rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
>
> configfile: pytest.ini
>
> plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
>
> collected 3 items
>
>
>
> ogr/ogr_miramon_vector.py ??
>                                                                                                                                                                                         67%
> ???????
>
> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> PDB set_trace (IO-capturing turned off)
> >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>
> >
> /mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py(132)test_ogr_miramon_simple_polygon()
>
> -> f = lyr.GetNextFeature()
>
> (Pdb) s
>
> --Call--
>
> >
> /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1654)GetNextFeature()
>
> -> def GetNextFeature(self, *args) -> "OGRFeatureShadow *":
>
> (Pdb) s
>
> >
> /mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py(1668)GetNextFeature()
>
> -> return _ogr.Layer_GetNextFeature(self, *args)
>
> (Pdb) s
>
> ERROR 2: CPLRealloc(): Out of memory allocating 667227037326010464 bytes.
>
> Fatal Python error: Aborted
>
>
>
> Current thread 0x00007f67c7140740 (most recent call first):
>
>   File "/mnt/d/GitHub-repository/gdal/build/swig/python/osgeo/ogr.py",
> line 1668 in GetNextFeature
>
>   File
> "/mnt/d/GitHub-repository/gdal/build/autotest/ogr/ogr_miramon_vector.py",
> line 132 in test_ogr_miramon_simple_polygon
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line
> 194 in pytest_pyfunc_call
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line
> 102 in _multicall
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line
> 119 in _hookexec
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501
> in __call__
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/python.py", line
> 1831 in runtest
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line
> 170 in pytest_runtest_call
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line
> 102 in _multicall
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line
> 119 in _hookexec
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501
> in __call__
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line
> 263 in <lambda>
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line
> 342 in from_call
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line
> 262 in call_runtest_hook
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line
> 223 in call_and_report
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line
> 134 in runtestprotocol
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/runner.py", line
> 115 in pytest_runtest_protocol
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line
> 102 in _multicall
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line
> 119 in _hookexec
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501
> in __call__
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 352
> in pytest_runtestloop
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line
> 102 in _multicall
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line
> 119 in _hookexec
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501
> in __call__
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 327
> in _main
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 273
> in wrap_session
>
>   File "/usr/local/lib/python3.8/dist-packages/_pytest/main.py", line 320
> in pytest_cmdline_main
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_callers.py", line
> 102 in _multicall
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_manager.py", line
> 119 in _hookexec
>
>   File "/usr/local/lib/python3.8/dist-packages/pluggy/_hooks.py", line 501
> in __call__
>
>   File
> "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", line
> 175 in main
>
>   File
> "/usr/local/lib/python3.8/dist-packages/_pytest/config/__init__.py", line
> 198 in console_main
>
>   File "/usr/local/bin/pytest", line 8 in <module>
>
> Aborted
>
>
>
>
>
> *De:* gdal-dev <gdal-dev-bounces at lists.osgeo.org>
> <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Abel Pau via gdal-dev
> *Enviado el:* dimecres, 6 de mar? de 2024 15:08
> *Para:* Even Rouault <even.rouault at spatialys.com>
> <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
>
>
> About the question: . Does "pytest autotest/ogr/ogr_basic_test.py" work?*
>
> The answer is YES.
>
> ogr/ogr_basic_test.py
> ??????????????????????????????????????????????????????????????????
> 100% ??????????
>
>
>
> Results (5.98s):
>
>       66 passed
>
>
>
>
>
>
>
>
>
>
>
> *De:* Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dimecres, 6 de mar? de 2024 13:09
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
>
>
> Hi,
>
> I don't see anything wrong. I've tried that on my native Linux build and
> the test_ogr_miramon_vector_1() is found. Does "pytest
> autotest/ogr/ogr_basic_test.py" work?*
>
> Note: you don't need the try / except in your test case unless you'd need
> to some particular cleanup, but that's not the case here. pytest handles
> test failures nicely
>
> Even
>
> Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
>
> Hi again,
>
> after solving some issues I used WSL (Windows subsystem Linux) to create
> an environment where I am able to run tests.
>
>
>
> I run the cmake inside build folder in the environment. It?s slow but
> finally it finish. After cmake --build . --target install all is ready to
> be tested.
>
>
>
> I create a simple test ogr_miramon_vector.py (see the code below) to prove
> that it?s reliable.
>
>
>
> I run:
>
> pytest autotest/ogr/ogr_miramon_vector.py
>
> and:
>
>
>
> apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest
> autotest/ogr/ogr_miramon_vector.py
>
> Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2,
> pytest-sugar 1.0.0)
>
> benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False
> min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10
> warmup=False warmup_iterations=100000)
>
> GDAL Build Info:
>
>   PAM_ENABLED: YES
>
>   OGR_ENABLED: YES
>
>   CURL_ENABLED: YES
>
>   CURL_VERSION: 7.68.0
>
>   GEOS_ENABLED: YES
>
>   GEOS_VERSION: 3.8.0-CAPI-1.13.1
>
>   PROJ_BUILD_VERSION: 6.3.1
>
>   PROJ_RUNTIME_VERSION: 6.3.1
>
>   COMPILER: GCC 9.4.0
>
> GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may
> be skipped)
>
> GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
>
> rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
>
> configfile: pytest.ini
>
> plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
>
> *collected 0 items*
>
>
>
> My questions is why it seems it?s not working?
>
> Thanks!
>
>
>
> The test:
>
> -------------
>
> import os
>
>
>
> import gdaltest
>
> import ogrtest
>
> import pytest
>
>
>
> from osgeo import gdal, ogr, osr
>
>
>
> pytestmark = pytest.mark.require_driver("MiraMonVector")
>
>
>
>
> ###############################################################################
>
> @pytest.fixture(scope="module", autouse=True)
>
> def init():
>
>     with gdaltest.config_option("CPL_DEBUG", "ON"):
>
>         yield
>
>
>
>
>
>
> ###############################################################################
>
> # basic test
>
>
>
> def test_ogr_miramon_vector_1():
>
>     try:
>
>         ds =
> gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
>
>         lyr = ds.GetLayer(0)
>
>
>
>         assert lyr is not None, "Failed to get layer"
>
>
>
>         assert lyr.GetFeatureCount() == 3
>
>         assert lyr.GetGeomType() == ogr.wkbPoint
>
>
>
>         f = lyr.GetNextFeature()
>
>         assert f.GetFID() == 0
>
>         assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
>
>         assert f.GetField("ID_GRAFIC") == "0"
>
>
>
>         f = lyr.GetNextFeature()
>
>         assert f.GetField("ID_GRAFIC") == "1"
>
>
>
>         f = lyr.GetNextFeature()
>
>         assert f.GetField("ID_GRAFIC") == "2"
>
>
>
>         ds = None
>
>     except Exception as e:
>
>         pytest.fail(f"Test failed with exception: {e}")
>
>
>
>
>
>
>
>
>
> *De:* Even Rouault <even.rouault at spatialys.com>
> <even.rouault at spatialys.com>
> *Enviado el:* divendres, 9 de febrer de 2024 11:48
> *Para:* Abel Pau <a.pau at creaf.uab.cat> <a.pau at creaf.uab.cat>;
> gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
>
>
> Abel,
>
> Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
>
> Hi,
>
> I am at the lasts steps before pulling a request about the MiraMon driver.
> I need to write some documentation and formalize the tests.
>
> After that, I?ll do the pull request to github.
>
> I'd suggest first before issuing the pull request that you push to your
> fork on github and look at the Actions tab. That will allow you to fix a
> lot of things on your side, before issuing the PR itself
>
>
>
>
> I am a little confused about the testing. I can use pytest or ctest,
> right? Which is the favourite? Are there any changes from the official
> documentation?
>
> ctest is just the CMake way of launching the test suite. It will execute
> C++ tests of autotest/cpp directly, and for tests written in python will
> launch "pytest autotest/XXXXX" for each directory.
>
> "ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the
> autotest/ogr tests, which can be quite long already.
>
> To test your own development, you may have a more pleasant experience by
> directly running just the tests for your driver with something like "pytest
> autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of
> $build_dir/autotest is copied from $source_dir/autotest each time "cmake"
> is run, so if you edit your test .py file directly in the build directory,
> be super careful of not accidentally losing your work, and make sure to
> copy its content to the source directory first. That's admittedly an
> annoying point of the current test setup on Windows, compared to Unix where
> we use symbolic links)
>
> after setting the environment to have PYTHONPATH point to something like
> $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe
> you're on Windows?).  If you look at the first lines output by the above
> "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll
> actually see the PYTHONPATH value to specify.
>
> You also need to first install pytest and other testing dependencies with:
> python -m pip install autotest/requirements.txt
>
> There is a minimal test to create?
>
> A maximal test suite, you mean ;-) You should aim for a "reasonable"
> coverage of the code you wrote. Aiming to test the nominal code paths of
> your driver is desirable (testing the error cases generally requires a lot
> more effort).
>
>
> Can you recommend me some driver that tests things like:
>
> 1.       Read a point/arc/polygon layer from some format (gml,kml,
> gpckg,..) and assert the number of readed objectes
>
> 2.       Read a point layer and assert some points (3d included) and some
> of the fields values
>
> 3.       The same with arcs and polygons
>
> 4.       Create some layer from the own format to anothers and compare
> the results with some ?good? results.
>
> 5.       Create multiple layers from one outer format (like gpx) and
> verify the name of the created files...
>
> You don't necessarily need to use other formats. It is actually better if
> the tests of a format don't depend too much on other formats, to keep
> things isolated.
>
> To test the read part of your driver, add a autotest/ogr/data/miramon
> directory with *small* test files, ideally at most a few KB each to keep
> the size of the GDAL repository reasonable, and a few features in each is
> often enough to unit test, with different type of geometries, attributes,
> and use the OGR Python API to open the file and iterate over its layers and
> features to check their content. Those files should have ideally be
> produced by the Miramon software and not by the writing side of your
> driver, to check the interoperability of your driver with a "reference"
> software.
>
> For the write site of the driver, you can for example run
> gdal.VectorTranslate(dest, source) on those files, and use again the test
> function to validate that the read side of your driver likes what the write
> site has produced. An alternative is also to do a binary comparison of the
> file generated by your driver with a reference test file stored in for
> example autotest/ogr/data/miramon/ref_output. But this may be sometimes a
> fragile approach if the output of your driver might change in the future
> (would require regenerating the reference test files).
>
> I'd suggest your test suite also has a test that runs the "test_ogrsf"
> command line utility which is a kind of compliance test suite which checks
> a number of expectations for a driver, like that GetFeatureCount() returns
> the same number as iterating with GetNextFeature(), etc etc
>
> It is difficult to point at a "reference" test suite, as all drivers have
> their particularities and may need specific tests. Potential sources of
> inspirations:
>
> - autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side
> of a driver, and includes a test_ogrsf test
>
> - autotest/ogr/ogr_csv.py  has examples where the writing side of the
> driver is checked by opening the output file and checking that some strings
> are present in it (only easily doable with text based formats)
>
> - autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing
> side of a driver . A lot in it will be specific to the format and
> irrelevant to your concern, but you should at least find all possible
> aspects of how to test the write side of a driver.
>
> Even
>
> --
>
> http://www.spatialys.com
>
> My software is free, but my time generally not.
>
>
>
> _______________________________________________
>
> gdal-dev mailing list
>
> gdal-dev at lists.osgeo.org
>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
>
> http://www.spatialys.com
>
> My software is free, but my time generally not.
>
>
>
> _______________________________________________
>
> gdal-dev mailing list
>
> gdal-dev at lists.osgeo.org
>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
>
> http://www.spatialys.com
>
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/6c8a15c0/attachment-0001.htm>

From hemantbist at gmail.com  Wed Mar  6 14:16:41 2024
From: hemantbist at gmail.com (B H)
Date: Wed, 6 Mar 2024 14:16:41 -0800
Subject: [gdal-dev] gdal_translate -expand rgba behaving incorrectly,
 pct2rgb.py working correctly on a tif
Message-ID: <CAHgSXQmkdqER=rSDUuUXz8a8jnRw5g0p-xoZMTnLbPZA30OWNg@mail.gmail.com>

Hi,
I am processing a bunch of tifs where the gdal_translate and pct2rgb.py
seem to be behaving differently.
Is it a bug in gdal_translate, or I need to pass some options to get
correct behavior.

gdal_translate -expand rgba  a.tif  gdalbad.tif  # This produces a tif file
with _incorrect_ colors.
pct2rgb.py -rgba a.tif  gdalgood.tif # This produces the tif file with
correct colors.

I am using QGIS to view all the tif files.

I have tried it on gdal 3.4.3 and on some earlier versions. The  behaviour
is the same.
I have also opened a bug mainly to attach the sample tif file.
https://github.com/OSGeo/gdal/issues/9402

Best,
HB
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240306/9fa1f623/attachment.htm>

From andrew at aitchison.me.uk  Wed Mar  6 16:01:13 2024
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 7 Mar 2024 00:01:13 +0000 (GMT)
Subject: [gdal-dev] Testing the driver
In-Reply-To: <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
 <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>
Message-ID: <34f4c850-b770-ba01-e3f4-55b832a9e4b8@aitchison.me.uk>

On Wed, 6 Mar 2024, Daniel Evans via gdal-dev wrote:

> Is it worth moving this in-depth discussion to a PR or similar for the new
> driver?
>
> My thinking is that a lengthy discussion on memory leak detection
> techniques in C++, how to run tests in Python, etc., aren't topics relevant
> to most GDAL mailing list subscribers.

Maybe so, but how to develop gdal is surely on-topic
for gdal-dev ?

I"m still following and learning.

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From mubinicyer at gmail.com  Wed Mar  6 23:29:38 2024
From: mubinicyer at gmail.com (=?UTF-8?B?TcO8YmluIMSww6d5ZXI=?=)
Date: Thu, 7 Mar 2024 08:29:38 +0100
Subject: [gdal-dev] Building on windows
Message-ID: <CAA9KBADvpMv4d66iAqNnmrNm-KUU7fMpS_aAPs5q4ytQW-8hsA@mail.gmail.com>

Hi,

I want to build GDAL on Windows with Visual Studio 17 2022, but I couldn't.
I tried to install all necessary packets with conda but I receive a  lot of
errors.
Is there any new tutorial that shows how to build on windows with current
and new packets?

Thanks. Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/160b85ab/attachment.htm>

From a.pau at creaf.uab.cat  Thu Mar  7 00:41:51 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 7 Mar 2024 08:41:51 +0000
Subject: [gdal-dev] Building on windows
In-Reply-To: <CAA9KBADvpMv4d66iAqNnmrNm-KUU7fMpS_aAPs5q4ytQW-8hsA@mail.gmail.com>
References: <CAA9KBADvpMv4d66iAqNnmrNm-KUU7fMpS_aAPs5q4ytQW-8hsA@mail.gmail.com>
Message-ID: <PAXPR07MB7775A9297EB1D7AC63538952A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
I am a windows and VS2019 user anc C/C++ developer and I asked this question myself a long time ago.

Finally the best way for me was:


1)      Install vcpkg https://vcpkg.io/en/getting-started and install this on c:/dev/vcpkg. Follow their instructions. And then gdal instructions (https://gdal.org/download.html#vcpkg)

a.       git clone https://github.com/Microsoft/vcpkg.git

b.       .\vcpkg\bootstrap-vcpkg.bat

c.       vcpkg integrate install

d.       .\vcpkg install gdal --triplet=x64-windows

2)      Use this line to install all gdal needs: vcpkg --triplet x64-windows install curl expat geos lerc libdeflate libgeotiff libiconv libpng libxml2 openssl proj qhull sqlite3[rtree] xerces-c zlib

3)      Install python using vcpkg: vcpkg install python3

4)      Clone gdal https://github.com/OSGeo/gdal to some directory (let?s call it ?$Gdal$?)

5)      Set the system environment variable GDAL_DATA to $Gdal$\build\data

6)      Go to the folder $Gdal$ in cmd and

a.       cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=C:/dev/vcpkg/vcpkg/scripts/buildsystems/vcpkg.cmake  (<-- look for this file in your vcpkg installation: I have two vcpkg levels, I don?t know why but I don?t care)

b.       cmake --build build

It should work. If it doesn?t, tell us and let?s see if I missed something.
If it?s worth perhaps we can document it in somewhere on gdal page, cause it?s a long journey to set all this. It?s not clear anywhere.



De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de M?bin I?yer via gdal-dev
Enviado el: dijous, 7 de mar? de 2024 8:30
Para: gdal-dev at lists.osgeo.org
Asunto: [gdal-dev] Building on windows

Hi,

I want to build GDAL on Windows with Visual Studio 17 2022, but I couldn't.
I tried to install all necessary packets with conda but I receive a  lot of errors.
Is there any new tutorial that shows how to build on windows with current and new packets?

Thanks. Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/779fe0e2/attachment-0001.htm>

From pierre at chachatelier.fr  Thu Mar  7 00:47:24 2024
From: pierre at chachatelier.fr (Pierre Chatelier)
Date: Thu, 7 Mar 2024 09:47:24 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
Message-ID: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>

Hello,

I just had my first encounter with a NetCDF file. GDAL opens that 
flawlessly, I can identify the subdatasets and open/read them thanks to 
the SUBDATASET_n_NAME, as advertised in 
https://gdal.org/drivers/raster/netcdf.html

However, I am confused by the ability to create such a file with GDAL.
Let's say I have a bunch of images that I want to pack as NetCDF through 
GDAL.
Should I use bands or groups to let GDAL create the sub datasets ? Will 
GDAL create the metadata SUBDATASETS domain for me ?

The NetCDF file I am supposed to create should use HDF for sub datasets. 
No problem for reading (I have compiled GDAL with the HDF support and it 
works, I can open my sample file), but how do I tell GDAL to *write* 
that ? Should I create real datasets with the GDAL HDF driver and then 
gather them into a single one with GDAL NetCDF driver ?

Can you give some hints about what I am supposed to do ?

Pierre

From even.rouault at spatialys.com  Thu Mar  7 03:58:17 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Mar 2024 12:58:17 +0100
Subject: [gdal-dev] Building on windows
In-Reply-To: <PAXPR07MB7775A9297EB1D7AC63538952A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <CAA9KBADvpMv4d66iAqNnmrNm-KUU7fMpS_aAPs5q4ytQW-8hsA@mail.gmail.com>
 <PAXPR07MB7775A9297EB1D7AC63538952A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <080dde6f-4c34-4ba1-81aa-21667d46d7aa@spatialys.com>


Le 07/03/2024 ? 09:41, Abel Pau via gdal-dev a ?crit?:
>
> Hi,
>
> I am a windows and VS2019 user anc C/C++ developer and I asked this 
> question myself a long time ago.
>
> Finally the best way for me was:
>
> 1)Install vcpkg https://vcpkg.io/en/getting-started and install this 
> on c:/dev/vcpkg. Follow their instructions. And then gdal instructions 
> (https://gdal.org/download.html#vcpkg)
>
> a.git clone https://github.com/Microsoft/vcpkg.git
>
> b..\vcpkg\bootstrap-vcpkg.bat
>
> c.vcpkg integrate install
>
> d..\vcpkg install gdal --triplet=x64-windows
>
> 2)Use this line to install all gdal needs: vcpkg --triplet x64-windows 
> install curl expat geos lerc libdeflate libgeotiff libiconv libpng 
> libxml2 openssl proj qhull sqlite3[rtree] xerces-c zlib
>
> 3)Install python using vcpkg: vcpkg install python3
>
> 4)Clone gdal https://github.com/OSGeo/gdal to some directory (let?s 
> call it ?$Gdal$?)
>
> 5)Set the system environment variable GDAL_DATA to $Gdal$\build\data
>
> 6)Go to the folder $Gdal$ in cmd and
>
> a.cmake -B build -S . 
> -DCMAKE_TOOLCHAIN_FILE=C:/dev/*vcpkg/vcpkg*/scripts/buildsystems/vcpkg.cmake 
> (<-- look for this file in your vcpkg installation: I have two vcpkg 
> levels, I don?t know why but I don?t care)
>
> b.cmake --build build
>
> It should work. If it doesn?t, tell us and let?s see if I missed 
> something.
>
> If it?s worth perhaps we can document it in somewhere on gdal page, 
> cause it?s a long journey to set all this. It?s not clear anywhere.
>
Could be a new paragraph at bottom of 
https://gdal.org/development/dev_environment.html . We've already 
something similar for Conda based builds

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/7b730762/attachment.htm>

From even.rouault at spatialys.com  Thu Mar  7 06:08:07 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Mar 2024 15:08:07 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
In-Reply-To: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
References: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
Message-ID: <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>

Hi,

If your input dataset has multiple bands, each band will be written as a 
separate netCDF variable, and thus read as multiple subdatasets. The 
constraint is that as your input is a single raster, all bands must 
share the same georeferencing.

If you want to write multiple independent variables, then you'll have to 
use the GDAL multidimensional API. Cf 
https://github.com/OSGeo/gdal/blob/master/autotest/gdrivers/netcdf_multidim.py 
. h5py is also quite convenient

Even

Le 07/03/2024 ? 09:47, Pierre Chatelier via gdal-dev a ?crit?:
> Hello,
>
> I just had my first encounter with a NetCDF file. GDAL opens that 
> flawlessly, I can identify the subdatasets and open/read them thanks 
> to the SUBDATASET_n_NAME, as advertised in 
> https://gdal.org/drivers/raster/netcdf.html
>
> However, I am confused by the ability to create such a file with GDAL.
> Let's say I have a bunch of images that I want to pack as NetCDF 
> through GDAL.
> Should I use bands or groups to let GDAL create the sub datasets ? 
> Will GDAL create the metadata SUBDATASETS domain for me ?
>
> The NetCDF file I am supposed to create should use HDF for sub 
> datasets. No problem for reading (I have compiled GDAL with the HDF 
> support and it works, I can open my sample file), but how do I tell 
> GDAL to *write* that ? Should I create real datasets with the GDAL HDF 
> driver and then gather them into a single one with GDAL NetCDF driver ?
>
> Can you give some hints about what I am supposed to do ?
>
> Pierre
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From a.pau at creaf.uab.cat  Thu Mar  7 06:09:52 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 7 Mar 2024 14:09:52 +0000
Subject: [gdal-dev] Vagrant & VirtualBox
Message-ID: <PAXPR07MB7775142DC0065D9DB42255C2A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
in my seekness to find a friendly environment to compile and debug some of my tests I am trying now to use vagrant and a virtualBox.
Setting up a development environment - GDAL documentation<https://gdal.org/development/dev_environment.html#vagrant>

Once I have both installed I run from source directory vagrant up and the magic appears.
A Ubunto 22.04 is installed in the machine.

The cmd command (windows) let's like waiting with "default: + ninja -j6" in the screen.

I assume that is normal and the VB is ready to get into.
When I click on VB in the gdal-vagrant option I get alogin.
Whats is supposed I have to put there?

Sorry if it's a very basic question.


Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/f8543b63/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Thu Mar  7 07:24:55 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 7 Mar 2024 15:24:55 +0000
Subject: [gdal-dev] Vagrant & VirtualBox
In-Reply-To: <PAXPR07MB7775142DC0065D9DB42255C2A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775142DC0065D9DB42255C2A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB77751D059CE9958E0F41D771A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>

I see now that if I shutdown the machine and execute "vagrant up" again +  "vagrant ssh"  it login automatically.

On the other hand
cmake -build.  is extremly slow.
The is anyway to configure more CPU or memory to the process?


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dijous, 7 de mar? de 2024 15:10
Para: gdal-dev at lists.osgeo.org
Asunto: [gdal-dev] Vagrant & VirtualBox

Hi,
in my seekness to find a friendly environment to compile and debug some of my tests I am trying now to use vagrant and a virtualBox.
Setting up a development environment - GDAL documentation<https://gdal.org/development/dev_environment.html#vagrant>

Once I have both installed I run from source directory vagrant up and the magic appears.
A Ubunto 22.04 is installed in the machine.

The cmd command (windows) let's like waiting with "default: + ninja -j6" in the screen.

I assume that is normal and the VB is ready to get into.
When I click on VB in the gdal-vagrant option I get alogin.
Whats is supposed I have to put there?

Sorry if it's a very basic question.


Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d6620acf/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Thu Mar  7 07:29:59 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 7 Mar 2024 15:29:59 +0000
Subject: [gdal-dev] Vagrant & VirtualBox
In-Reply-To: <PAXPR07MB7775142DC0065D9DB42255C2A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775142DC0065D9DB42255C2A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB77752E71D0F544BEE4C19F13A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>

Perhaps with that?

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # specify memory size in MiB
  vm_ram = ENV['VAGRANT_VM_RAM'] || 4096
  vm_cpu = ENV['VAGRANT_VM_CPU'] || 2
  vm_ram_bytes = vm_ram * 1024 * 1024



De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dijous, 7 de mar? de 2024 15:10
Para: gdal-dev at lists.osgeo.org
Asunto: [gdal-dev] Vagrant & VirtualBox

Hi,
in my seekness to find a friendly environment to compile and debug some of my tests I am trying now to use vagrant and a virtualBox.
Setting up a development environment - GDAL documentation<https://gdal.org/development/dev_environment.html#vagrant>

Once I have both installed I run from source directory vagrant up and the magic appears.
A Ubunto 22.04 is installed in the machine.

The cmd command (windows) let's like waiting with "default: + ninja -j6" in the screen.

I assume that is normal and the VB is ready to get into.
When I click on VB in the gdal-vagrant option I get alogin.
Whats is supposed I have to put there?

Sorry if it's a very basic question.


Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/5acbcc50/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Thu Mar  7 09:33:02 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 7 Mar 2024 17:33:02 +0000
Subject: [gdal-dev] Vagrant & VirtualBox
In-Reply-To: <PAXPR07MB77752E71D0F544BEE4C19F13A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775142DC0065D9DB42255C2A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77752E71D0F544BEE4C19F13A2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB777543C576E813AC2470AE0EA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>

Even setting CPU to 6 it's extremly slow...
Any recent experience on that from windows and vagrant + Virtual Box?
Any other recomendation?

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dijous, 7 de mar? de 2024 16:30
Para: gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Vagrant & VirtualBox

Perhaps with that?

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # specify memory size in MiB
  vm_ram = ENV['VAGRANT_VM_RAM'] || 4096
  vm_cpu = ENV['VAGRANT_VM_CPU'] || 2
  vm_ram_bytes = vm_ram * 1024 * 1024



De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de Abel Pau via gdal-dev
Enviado el: dijous, 7 de mar? de 2024 15:10
Para: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: [gdal-dev] Vagrant & VirtualBox

Hi,
in my seekness to find a friendly environment to compile and debug some of my tests I am trying now to use vagrant and a virtualBox.
Setting up a development environment - GDAL documentation<https://gdal.org/development/dev_environment.html#vagrant>

Once I have both installed I run from source directory vagrant up and the magic appears.
A Ubunto 22.04 is installed in the machine.

The cmd command (windows) let's like waiting with "default: + ninja -j6" in the screen.

I assume that is normal and the VB is ready to get into.
When I click on VB in the gdal-vagrant option I get alogin.
Whats is supposed I have to put there?

Sorry if it's a very basic question.


Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/4cd07910/attachment-0003.jpg>

From hemantbist at gmail.com  Thu Mar  7 10:06:48 2024
From: hemantbist at gmail.com (B H)
Date: Thu, 7 Mar 2024 10:06:48 -0800
Subject: [gdal-dev] gdalwarp different behavior for tif and netCDF files
Message-ID: <CAHgSXQnQ=V2kC5dj=YTsVto5=LA84wq1JzEHr1EYDYpitav=WA@mail.gmail.com>

I am trying to reproject a netCDF file which is in Lat Lon (EPSG:4326)
projection to EPSG:3857 (Google mercator) (on GDAL 3.4.3, released
2022/04/22).
If I reproject to a tif file, it is reprojected correctly. If I reproject
to a nc file it reproject incorrectly/different location that tif file. I
am giving the commands I ran below.
Correctness is determined by viewing them in QGIS: (All tif files show up
at exactly same location as   a_stamped_latlon.nc. agoog.nc show up at a
different location ).

I will be happy to post the sample files [The only way I know to send files
to open a bug, but very likely its some details I don't know about
different formats].: a.nc is only 42KB.

Here is how to reproduce it.

 gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
a.nc agoog.nc
gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
-co "GEOTIFF_KEYS_FLAVOR=STANDARD" agoog_std.tif
gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
-co "GEOTIFF_KEYS_FLAVOR=STANDARD" a.nc  agoog_std.tif

gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
-co "GEOTIFF_KEYS_FLAVOR=ESRI_PE" a.nc  agoog_esri.tif
gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
-co "GEOTIFF_KEYS_FLAVOR=STANDARD" a.nc  agoog_std.tif
gdal_translate -a_srs EPSG:4326 a.nc a_stamped_latlon.nc


GDAL 3.4.3, released 2022/04/22
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/d7344779/attachment.htm>

From hemantbist at gmail.com  Thu Mar  7 10:16:04 2024
From: hemantbist at gmail.com (B H)
Date: Thu, 7 Mar 2024 10:16:04 -0800
Subject: [gdal-dev] gdalwarp different behavior for tif and netCDF files
In-Reply-To: <CAHgSXQnQ=V2kC5dj=YTsVto5=LA84wq1JzEHr1EYDYpitav=WA@mail.gmail.com>
References: <CAHgSXQnQ=V2kC5dj=YTsVto5=LA84wq1JzEHr1EYDYpitav=WA@mail.gmail.com>
Message-ID: <CAHgSXQ=gRNgTk4772FfVDorSm-eGP3OjcXvDeHCGK3PSmsvDtg@mail.gmail.com>

I should also have added that original nc has data in Lat Lon, but is not
actually stamped with EPSG:4326 SRS. Here is what I get from gdalinfo.
(I used a tool called grdcut to create the sample, but the behaviour is same

This is what gdalinfo shows on original nc file from which I created a
sample test case.


Driver: netCDF/Network Common Data Format
Files: /tmp/a.nc
Size is 14401, 6001
Origin = (-128.000416666666666,49.000416666666666)
Pixel Size = (0.000833333333333,-0.000833333333333)
Metadata:
  NC_GLOBAL#Conventions=CF-1.4
  NC_GLOBAL#geospatial_lat_max=49
  NC_GLOBAL#geospatial_lat_min=44
  NC_GLOBAL#geospatial_lat_resolution=0.000833
  NC_GLOBAL#geospatial_lat_units=degrees_north
  NC_GLOBAL#geospatial_lon_max=-116
  NC_GLOBAL#geospatial_lon_min=-128
  NC_GLOBAL#geospatial_lon_resolution=0.000833
  NC_GLOBAL#geospatial_lon_units=degrees_east
  NC_GLOBAL#GMT_version=4.5.1 [64-bit]
  NC_GLOBAL#history=xyz2grd -R-128/-116/44/49 -I3c -Gcrm_v8.grd
  NC_GLOBAL#title=crm_v8.grd
  x#actual_range={-128,-116}
  x#long_name=x
  x#units=degrees_east
  x#_CoordinateAxisType=Lon
  y#actual_range={44,49}
  y#long_name=y
  y#units=degrees_north
  y#_CoordinateAxisType=Lat
  z#actual_range={-3114.800048828125,4348}
  z#long_name=z
  z#positive=up
  z#units=meters
  z#_FillValue=-nan
Corner Coordinates:
Upper Left  (-128.0004167,  49.0004167)
Lower Left  (-128.0004167,  43.9995833)
Upper Right (-115.9995833,  49.0004167)
Lower Right (-115.9995833,  43.9995833)
Center      (-122.0000000,  46.5000000)
Band 1 Block=14401x1 Type=Float32, ColorInterp=Undefined
  NoData Value=nan
  Unit Type: meters
  Metadata:
    actual_range={-3114.800048828125,4348}
    long_name=z
    NETCDF_VARNAME=z
    positive=up
    units=meters
    _FillValue=-nan




On Thu, Mar 7, 2024 at 10:06?AM B H <hemantbist at gmail.com> wrote:

> I am trying to reproject a netCDF file which is in Lat Lon (EPSG:4326)
> projection to EPSG:3857 (Google mercator) (on GDAL 3.4.3, released
> 2022/04/22).
> If I reproject to a tif file, it is reprojected correctly. If I reproject
> to a nc file it reproject incorrectly/different location that tif file. I
> am giving the commands I ran below.
> Correctness is determined by viewing them in QGIS: (All tif files show up
> at exactly same location as   a_stamped_latlon.nc. agoog.nc show up at a
> different location ).
>
> I will be happy to post the sample files [The only way I know to send
> files to open a bug, but very likely its some details I don't know about
> different formats].: a.nc is only 42KB.
>
> Here is how to reproduce it.
>
>  gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
> a.nc agoog.nc
> gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
> -co "GEOTIFF_KEYS_FLAVOR=STANDARD" agoog_std.tif
> gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
> -co "GEOTIFF_KEYS_FLAVOR=STANDARD" a.nc  agoog_std.tif
>
> gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
> -co "GEOTIFF_KEYS_FLAVOR=ESRI_PE" a.nc  agoog_esri.tif
> gdalwarp -s_srs EPSG:4326 -t_srs EPSG:3857 -co COMPRESS=DEFLATE -r cubic
> -co "GEOTIFF_KEYS_FLAVOR=STANDARD" a.nc  agoog_std.tif
> gdal_translate -a_srs EPSG:4326 a.nc a_stamped_latlon.nc
>
>
> GDAL 3.4.3, released 2022/04/22
>
>
>
>
>
>
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/72ee0b00/attachment.htm>

From rdmailings at duif.net  Thu Mar  7 10:42:08 2024
From: rdmailings at duif.net (Richard Duivenvoorde)
Date: Thu, 7 Mar 2024 19:42:08 +0100
Subject: [gdal-dev] Renaming multiple layers when loading gpkg into postgis
Message-ID: <8236abf7-8912-439a-9a03-671d8c9e306d@duif.net>

Hi,

Loading a gpkg with multiple layers (from a zip) into Postgis is a breeze (all PG-stuff from env):

  ogr2ogr -overwrite -f PostgreSQL PG:"schemas=target" /vsizip//home/richard/data/data.zip/this.gpkg layer1 layer3

but now I want to rename those layers

  ogr2ogr -overwrite -f PostgreSQL PG:"schemas=target" /vsizip//home/richard/data/data.zip/this.gpkg layer1 -nln betterlayer1 layer3 -nln betterlayer3

This only loads the last layer.

Tried to google for this, but asking here: is it only possible to rename one layer per ogr2ogr call? (while it is possible to load several layers)

If so I will make my scripts do the loading one by one, but just want to check.

Regards,

Richard Duivenvoorde

From even.rouault at spatialys.com  Thu Mar  7 11:01:28 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Mar 2024 20:01:28 +0100
Subject: [gdal-dev] Renaming multiple layers when loading gpkg into
 postgis
In-Reply-To: <8236abf7-8912-439a-9a03-671d8c9e306d@duif.net>
References: <8236abf7-8912-439a-9a03-671d8c9e306d@duif.net>
Message-ID: <49c89e18-db2e-4d59-84a3-1b874ab12b77@spatialys.com>

Richard,
> Tried to google for this, but asking here: is it only possible to 
> rename one layer per ogr2ogr call? (while it is possible to load 
> several layers)

Not with ogr2ogr

>
> If so I will make my scripts do the loading one by one, but just want 
> to check.

or using 
https://github.com/OSGeo/gdal/blob/master/swig/python/gdal-utils/osgeo_utils/samples/ogr2vrt.py, 
doing the layer renames in the vrt, and ogr2ogr the vrt to your target 
database

Even

PS: Richard, I very often get "<rdmailings at duif.net>: Recipient address 
rejected: Domain not found." when replying to you and my email client 
doesn't send it. I had to remove your email from the To list

-- 

http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Thu Mar  7 11:07:29 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Mar 2024 20:07:29 +0100
Subject: [gdal-dev] Motion: adopt RFC 99: Geometry coordinate precision
Message-ID: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>

Hi,

The flow of comments calming down, I motion to adopt RFC 99: Geometry 
coordinate precision

https://github.com/OSGeo/gdal/pull/9300

Pre-rendered view at 
https://github.com/rouault/gdal/blob/rfc99_text/doc/source/development/rfc/rfc99_geometry_coordinate_precision.rst 


Starting with my +1,

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From schwehr at gmail.com  Thu Mar  7 11:44:00 2024
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 7 Mar 2024 11:44:00 -0800
Subject: [gdal-dev] Motion: adopt RFC 99: Geometry coordinate precision
In-Reply-To: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
References: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
Message-ID: <CACmBxyvW4XOCYt7xgxMMU57G77sGKk6ngBeo7kTvU4if7oM9vw@mail.gmail.com>

+0 KurtS. It seems like a good idea, but I worry about
unintended consequences, but can't come up with any.

On Thu, Mar 7, 2024 at 11:07?AM Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> The flow of comments calming down, I motion to adopt RFC 99: Geometry
> coordinate precision
>
> https://github.com/OSGeo/gdal/pull/9300
>
> Pre-rendered view at
>
> https://github.com/rouault/gdal/blob/rfc99_text/doc/source/development/rfc/rfc99_geometry_coordinate_precision.rst
>
>
> Starting with my +1,
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/0fb860dc/attachment-0001.htm>

From a.pau at creaf.uab.cat  Thu Mar  7 14:12:18 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 7 Mar 2024 22:12:18 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <34f4c850-b770-ba01-e3f4-55b832a9e4b8@aitchison.me.uk>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
 <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>
 <34f4c850-b770-ba01-e3f4-55b832a9e4b8@aitchison.me.uk>
Message-ID: <PAXPR07MB77754011AA9310C37BCE0B9CA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
I think that I found the way to debug and the trace makes me ask a question that can be interesting to everybody who uses python and it's not an expert, like me.

In my test I do:
ds = gdal.OpenEx("data/miramon/Polygons/SimplePolygons/SimplePolFile.pol")
lyr = ds.GetLayer(0)
assert lyr is not None, "Failed to get layer"
assert lyr.GetFeatureCount() == 3
assert lyr.GetGeomType() == ogr.wkbPolygon
f = lyr.GetNextFeature()

And at that moment there is a backtrace available:
#9  0x00007ffff4b3d86c in CPLRealloc (pData=0x0, nNewSize=667227037326010464) at /gdal/port/cpl_conv.cpp:280
#10 0x00007ffff5cb638a in MMResizeMiraMonPolygonArcs (pFID=0x555556456358, nMax=0x555556456348,
    nNum=4653387708260263558, nIncr=0, nProposedMax=0) at /gdal/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:4464
#11 0x00007ffff5cc33e4 in MMGetMultiPolygonCoordinates (hMiraMonLayer=0x555556446fd0, i_pol=1, flag_z=0)
    at /gdal/ogr/ogrsf_frmts/miramon/mm_rdlayr.c:353
#12 0x00007ffff5cc3dfb in MMGetGeoFeatureFromVector (hMiraMonLayer=0x555556446fd0, i_elem=1)
    at /gdal/ogr/ogrsf_frmts/miramon/mm_rdlayr.c:614
#13 0x00007ffff5ca6d63 in OGRMiraMonLayer::GetFeature (this=0x555556419300, nFeatureId=1)
    at /gdal/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:860
#14 0x00007ffff5ca6598 in OGRMiraMonLayer::GetNextRawFeature (this=0x555556419300)
    at /gdal/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:696
#15 0x00007ffff5cac1df in OGRGetNextFeatureThroughRaw<OGRMiraMonLayer>::GetNextFeature (this=0x555556419300)
    at /gdal/ogr/ogrsf_frmts/ogrsf_frmts.h:455
#16 0x00007ffff5cac186 in OGRMiraMonLayer::GetNextFeature (this=0x555556419300)
    at /gdal/ogr/ogrsf_frmts/miramon/ogrmiramon.h:109
#17 0x00007ffff60e860b in OGR_L_GetNextFeature (hLayer=0x555556419300)

At #10 we can see the variable nNum set to a non-sense megabignumber.
This variable is set during Opening... 

But my question is: The opening is in ds = gdal.OpenEx("data/miramon/Polygons/SimplePolygons/SimplePolFile.pol")
The variable is stored in a C++ class member (in a old fashion C struct) but available that it's filled in the opening.

After that, lyr = ds.GetLayer(0) is called.
And after that when lyr.GetNextFeature() is called... is this nNum set before still alive?
Or perhaps I should read every time I Get a Next Feature?

Thanks for answering this question!

Thanks Daniel for your pacience.



-----Mensaje original-----
De: Andrew C Aitchison <andrew at aitchison.me.uk> 
Enviado el: dijous, 7 de mar? de 2024 1:01
Para: Daniel Evans <daniel.fred.evans at gmail.com>
CC: Abel Pau <a.pau at creaf.uab.cat>; 'gdal-dev at lists.osgeo.org' (gdal-dev at lists.osgeo.org) <gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver

On Wed, 6 Mar 2024, Daniel Evans via gdal-dev wrote:

> Is it worth moving this in-depth discussion to a PR or similar for the 
> new driver?
>
> My thinking is that a lengthy discussion on memory leak detection 
> techniques in C++, how to run tests in Python, etc., aren't topics 
> relevant to most GDAL mailing list subscribers.

Maybe so, but how to develop gdal is surely on-topic for gdal-dev ?

I"m still following and learning.

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From even.rouault at spatialys.com  Thu Mar  7 14:32:19 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Mar 2024 23:32:19 +0100
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB77754011AA9310C37BCE0B9CA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
 <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>
 <34f4c850-b770-ba01-e3f4-55b832a9e4b8@aitchison.me.uk>
 <PAXPR07MB77754011AA9310C37BCE0B9CA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <187beb84-1300-45ab-a666-f66b4199ede4@spatialys.com>

> At #10 we can see the variable nNum set to a non-sense megabignumber.

Is it on a -DCMAKE_BUILD_TYPE=Debug build ? Otherwise stack traces and 
variable content in the debugger might look like garbage because of 
optimizations.

If it is a debug build, then there's likely some memory corruption or 
uninitialized variable in your code. Valgrind is generally a great tool 
to spot that. Otherwise add good old printf() statements to track down 
where the corruption starts. And given your Python sample code, I assume 
you could more easily reproduce the issue in a pure native context, just 
running "ogrinfo -al -q 
autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" (if 
it doesn't crash, try running it under gdb or valgrind)

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/33aebeff/attachment.htm>

From a.pau at creaf.uab.cat  Thu Mar  7 14:41:50 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 7 Mar 2024 22:41:50 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <187beb84-1300-45ab-a666-f66b4199ede4@spatialys.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
 <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>
 <34f4c850-b770-ba01-e3f4-55b832a9e4b8@aitchison.me.uk>
 <PAXPR07MB77754011AA9310C37BCE0B9CA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <187beb84-1300-45ab-a666-f66b4199ede4@spatialys.com>
Message-ID: <PAXPR07MB7775BCFA6CB7D9D78F0C8AEBA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
It?s in debug mode, yes, as you suggested.

yes, it crashes in the same way. Same big number.

It crashes because of the variable is not read from the file (this variable should be 1).
But debugging in windows (where not crashes) this variable is set when opening the layer, and then I suppose has the value corrupted at some point.
So I am going to put my old fashion printf on.

Thanks again!



De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dijous, 7 de mar? de 2024 23:32
Para: Abel Pau <a.pau at creaf.uab.cat>; Andrew C Aitchison <andrew at aitchison.me.uk>; Daniel Evans <daniel.fred.evans at gmail.com>
CC: 'gdal-dev at lists.osgeo.org' (gdal-dev at lists.osgeo.org) <gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver




At #10 we can see the variable nNum set to a non-sense megabignumber.

Is it on a -DCMAKE_BUILD_TYPE=Debug build ? Otherwise stack traces and variable content in the debugger might look like garbage because of optimizations.

If it is a debug build, then there's likely some memory corruption or uninitialized variable in your code. Valgrind is generally a great tool to spot that. Otherwise add good old printf() statements to track down where the corruption starts. And given your Python sample code, I assume you could more easily reproduce the issue in a pure native context, just running "ogrinfo -al -q autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" (if it doesn't crash, try running it under gdb or valgrind)

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240307/37b649a2/attachment-0001.htm>

From cfis at savagexi.com  Thu Mar  7 19:11:35 2024
From: cfis at savagexi.com (cfis at savagexi.com)
Date: Fri, 08 Mar 2024 03:11:35 +0000
Subject: [gdal-dev] Variable Tile Sizes
Message-ID: <0b4f10bb6390ef326ffe094a663e8f10dc9d6617@savagexi.com>

We have a custom tiling scheme (tilematrixset) for satellite imagery that varies tile widths as they move closer/farther from the equator. We do this for speed/efficiency reasons and the amount of error introduced is minimal over short distances and doesn't impat running CV algorithms. However, this means that our tiles may differ in width by a pixel for a paritcular satellite image (we tile the images).? 

Using gdalbuildvirt to combine the tiles back into a single image? works fine.

However, we would like to serve them using the OGC tile api. And that doesn't work, due to this error:


> 
> ERROR 1: GDALWMS: Incorrect size 983 x 1232 of downloaded block, expected 982 x 1232, max 982 x 1232.ERROR 1: GDALWMS: ReadBlockFromFile (0.0.0.0:5500/ogcapi/collections/1050010019917900---s---WV02---wv02---NA---NA/map/tiles/C1232_180_180/0/0/1.tif) failed.ERROR 1: GDAL_WMS>, band 1: IReadBlock failed at X offset 0, Y offset 0: GDALWMS: ReadBlockFromFile (0.0.0.0:5500/ogcapi/collections/1050010019917900---s---WV02---wv02---NA---NA/map/tiles/C1232_180_180/0/0/1.tif) failed.
> 

The code that causes this is:



> 
> **
> */* expected size */*const int esx = **MIN**(MAX(0, (x + 1) * nBlockXSize), nRasterXSize) -
> 
>  **MIN**(MAX(0, x * nBlockXSize), nRasterXSize);
> 
> const int esy = **MIN**(MAX(0, (y + 1) * nBlockYSize), nRasterYSize) -
> 
>  **MIN**(MAX(0, y * nBlockYSize), nRasterYSize);
> 
> int sx = ds->GetRasterXSize();
> 
> int sy = ds->GetRasterYSize();
> 
> */* Allow bigger than expected so pre-tiled constant size images work on** * corners */*
> if ((sx > nBlockXSize) || (sy > nBlockYSize) || (sx < esx) || (sy < esy)){ CPLError(CE_Failure, CPLE_AppDefined, "GDALWMS: Incorrect size %d x %d of downloaded block, " "expected %d x %d, max %d x %d.", sx, sy, esx, esy, nBlockXSize, nBlockYSize); ret = CE_Failure;}
> 
I was hoping that the comment about bigger than expected size images would work, but from the error message above it does not.

So I expect the answer is no, but is there any way we could work around, loosen or disable this restriction? Or some other idea on how to make this work?
Thanks,

Charlie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/d6d4b777/attachment.htm>

From a.pau at creaf.uab.cat  Fri Mar  8 01:16:24 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Fri, 8 Mar 2024 09:16:24 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB7775BCFA6CB7D9D78F0C8AEBA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
 <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>
 <34f4c850-b770-ba01-e3f4-55b832a9e4b8@aitchison.me.uk>
 <PAXPR07MB77754011AA9310C37BCE0B9CA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <187beb84-1300-45ab-a666-f66b4199ede4@spatialys.com>
 <PAXPR07MB7775BCFA6CB7D9D78F0C8AEBA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB77754BDB60218E12CAC4735AA2272@PAXPR07MB7775.eurprd07.prod.outlook.com>

FINALLY!
I discovered the problem.

I was using ?unsigned long? as 4 bytes variable. On windows it?s like that.

BUT on linux this kind of variable has a 8-bytes size.

This caused a mess in linux (but not in wondows).
So, mistery closed!!!!!

Thanks you all.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dijous, 7 de mar? de 2024 23:42
Para: Even Rouault <even.rouault at spatialys.com>; Andrew C Aitchison <andrew at aitchison.me.uk>; Daniel Evans <daniel.fred.evans at gmail.com>
CC: 'gdal-dev at lists.osgeo.org' (gdal-dev at lists.osgeo.org) <gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver

Hi,
It?s in debug mode, yes, as you suggested.

yes, it crashes in the same way. Same big number.

It crashes because of the variable is not read from the file (this variable should be 1).
But debugging in windows (where not crashes) this variable is set when opening the layer, and then I suppose has the value corrupted at some point.
So I am going to put my old fashion printf on.

Thanks again!



De: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Enviado el: dijous, 7 de mar? de 2024 23:32
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; Andrew C Aitchison <andrew at aitchison.me.uk<mailto:andrew at aitchison.me.uk>>; Daniel Evans <daniel.fred.evans at gmail.com<mailto:daniel.fred.evans at gmail.com>>
CC: 'gdal-dev at lists.osgeo.org' (gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>) <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Asunto: Re: [gdal-dev] Testing the driver




At #10 we can see the variable nNum set to a non-sense megabignumber.

Is it on a -DCMAKE_BUILD_TYPE=Debug build ? Otherwise stack traces and variable content in the debugger might look like garbage because of optimizations.

If it is a debug build, then there's likely some memory corruption or uninitialized variable in your code. Valgrind is generally a great tool to spot that. Otherwise add good old printf() statements to track down where the corruption starts. And given your Python sample code, I assume you could more easily reproduce the issue in a pure native context, just running "ogrinfo -al -q autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" (if it doesn't crash, try running it under gdb or valgrind)

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/7db018c7/attachment-0001.htm>

From salmanami22 at gmail.com  Fri Mar  8 01:58:21 2024
From: salmanami22 at gmail.com (Shaima Alsharif)
Date: Fri, 8 Mar 2024 12:58:21 +0300
Subject: [gdal-dev] (no subject)
Message-ID: <CAOHJxn5o6P5qzyUvvQHMXWcnAi6oyXu-1wfPqHdM9amdn9scBw@mail.gmail.com>

Dear Developers,

I am reaching out to seek advice or potential solutions regarding the
creation of .aux.xml files for GeoTIFF Or GOG using GDAL. I have attempted
using the following commands, like so:


os.environ['GDAL_PAM_ENABLED'] = 'YES'

os.environ['GDAL_GEOREF_SOURCES'] = 'WORLDFILE,PAM,INTERNAL'

os.environ['ESRI_XML_PAM'] = 'TRUE'


gdalwarp -overwrite -t_srs EPSG:4326 -r cubic
JED240207122504.MAXBERJ  output.tiff


gdaldem color-relief -alpha output.tiff titan.txt output.colored.tiff


gdal_translate -of COG -co TILING_SCHEME=GoogleMapsCompatible -co
COMPRESS=LZW  output.colored.tiff  output.cog.tiff


gdal_translate -of GTiff -co TILED=YES -co COMPRESS=DEFLATE input.tif
output.tif --config GDAL_PAM_ENABLED YES


gdalinfo --build
PAM_ENABLED=YES
OGR_ENABLED=YES
GEOS_ENABLED=YES
GEOS_VERSION=3.11.1-CAPI-1.17.1
PROJ_BUILD_VERSION=9.1.1
PROJ_RUNTIME_VERSION=9.1.1
COMPILER=GCC 12.2.0


 gdalinfo --version

GDAL 3.8.4, released 2024/02/08

also tried  gdal-3.6.2


OS is Ubuntu Aarch64



However, this does not result in the creation of an .aux.xml file. Could
you provide any insights into why the .aux.xml file may not be generated in
this instance?


Any assistance or suggestions you could offer would be greatly appreciated.


Best regards,

Shaima A.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/4d7389c2/attachment.htm>

From j1 at jimenezshaw.com  Fri Mar  8 01:59:15 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 8 Mar 2024 10:59:15 +0100
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB77754BDB60218E12CAC4735AA2272@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB7775BCA66940632CB1626B9CA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775CCC3C6DD22E8F7EFD401A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <7e500ea5-8861-48da-a3f3-390d4f6550a3@spatialys.com>
 <PAXPR07MB777560C33CF3F4C9C03FDF0AA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <CANnaQaaHL-zQixao=MHCzmS2N4a3F7a7U5xa6ynCh8-aU+b46w@mail.gmail.com>
 <34f4c850-b770-ba01-e3f4-55b832a9e4b8@aitchison.me.uk>
 <PAXPR07MB77754011AA9310C37BCE0B9CA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <187beb84-1300-45ab-a666-f66b4199ede4@spatialys.com>
 <PAXPR07MB7775BCFA6CB7D9D78F0C8AEBA2202@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77754BDB60218E12CAC4735AA2272@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <CADRrdKvAiATNO6rJjW4G6-nAJAa4Oi67WPjooEQ2CtntL46_LA@mail.gmail.com>

I hate that.
I never use "long" exactly for that problem. When the size is important,
uint64_t and friends are very useful, and well defined.

On Fri, 8 Mar 2024 at 10:16, Abel Pau via gdal-dev <gdal-dev at lists.osgeo.org>
wrote:

> FINALLY!
>
> I discovered the problem.
>
>
>
> I was using ?unsigned long? as 4 bytes variable. On windows it?s like that.
>
>
>
> BUT on linux this kind of variable has a 8-bytes size.
>
>
>
> This caused a mess in linux (but not in wondows).
>
> So, mistery closed!!!!!
>
>
>
> Thanks you all.
>
>
>
> *De:* gdal-dev <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Abel Pau
> via gdal-dev
> *Enviado el:* dijous, 7 de mar? de 2024 23:42
> *Para:* Even Rouault <even.rouault at spatialys.com>; Andrew C Aitchison <
> andrew at aitchison.me.uk>; Daniel Evans <daniel.fred.evans at gmail.com>
> *CC:* 'gdal-dev at lists.osgeo.org' (gdal-dev at lists.osgeo.org) <
> gdal-dev at lists.osgeo.org>
> *Asunto:* Re: [gdal-dev] Testing the driver
>
>
>
> Hi,
>
> It?s in debug mode, yes, as you suggested.
>
>
>
> yes, it crashes in the same way. Same big number.
>
>
>
> It crashes because of the variable is not read from the file (this
> variable should be 1).
>
> But debugging in windows (where not crashes) this variable is set when
> opening the layer, and then I suppose has the value corrupted at some point.
>
> So I am going to put my old fashion printf on.
>
>
>
> Thanks again!
>
>
>
>
>
>
>
> *De:* Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dijous, 7 de mar? de 2024 23:32
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; Andrew C Aitchison <
> andrew at aitchison.me.uk>; Daniel Evans <daniel.fred.evans at gmail.com>
> *CC:* 'gdal-dev at lists.osgeo.org' (gdal-dev at lists.osgeo.org) <
> gdal-dev at lists.osgeo.org>
> *Asunto:* Re: [gdal-dev] Testing the driver
>
>
>
>
>
> At #10 we can see the variable nNum set to a non-sense megabignumber.
>
> Is it on a -DCMAKE_BUILD_TYPE=Debug build ? Otherwise stack traces and
> variable content in the debugger might look like garbage because of
> optimizations.
>
> If it is a debug build, then there's likely some memory corruption or
> uninitialized variable in your code. Valgrind is generally a great tool to
> spot that. Otherwise add good old printf() statements to track down where
> the corruption starts. And given your Python sample code, I assume you
> could more easily reproduce the issue in a pure native context, just
> running "ogrinfo -al -q
> autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" (if it
> doesn't crash, try running it under gdb or valgrind)
>
> --
>
> http://www.spatialys.com
>
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/d57a03bf/attachment-0001.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Mar  8 02:36:56 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Fri, 8 Mar 2024 10:36:56 +0000
Subject: [gdal-dev] (no subject) force PAM
In-Reply-To: <CAOHJxn5o6P5qzyUvvQHMXWcnAi6oyXu-1wfPqHdM9amdn9scBw@mail.gmail.com>
References: <CAOHJxn5o6P5qzyUvvQHMXWcnAi6oyXu-1wfPqHdM9amdn9scBw@mail.gmail.com>
Message-ID: <DB9PR09MB68878054558DA41698199ED2FD272@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

I only managed to force the creation of the .aux.gml file with a workaround.

gdal_translate p4433h.tif test.tif -co profile=baseline

In this case it seems that not even --config GDAL_PAM_ENABLED YES is needed but test.tif.aux.xml gets created. Maybe the same PAM file works also for the non-baseline versions of that tiff file.

With GeoTIFF, COG, or VRT as output format  --config GDAL_PAM_ENABLED YES does not trigger the creation of the PAM file.
I think that storing the same metadata into two distinct places (GeoTIFF tags and .aux.xml) is generally speaking a bad idea because sooner or later the two versions do not match any more. But I guess that it could be convenient to read the plain text aux.xml file from the cloud before touching the main TIFF.

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Shaima Alsharif via gdal-dev
L?hetetty: perjantai 8. maaliskuuta 2024 11.58
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: [gdal-dev] (no subject)

Dear Developers,


I am reaching out to seek advice or potential solutions regarding the creation of .aux.xml files for GeoTIFF Or GOG using GDAL. I have attempted using the following commands, like so:



os.environ['GDAL_PAM_ENABLED'] = 'YES'

os.environ['GDAL_GEOREF_SOURCES'] = 'WORLDFILE,PAM,INTERNAL'

os.environ['ESRI_XML_PAM'] = 'TRUE'



gdalwarp -overwrite -t_srs EPSG:4326 -r cubic JED240207122504.MAXBERJ  output.tiff



gdaldem color-relief -alpha output.tiff titan.txt output.colored.tiff



gdal_translate -of COG -co TILING_SCHEME=GoogleMapsCompatible -co COMPRESS=LZW  output.colored.tiff  output.cog.tiff



gdal_translate -of GTiff -co TILED=YES -co COMPRESS=DEFLATE input.tif output.tif --config GDAL_PAM_ENABLED YES



gdalinfo --build
PAM_ENABLED=YES
OGR_ENABLED=YES
GEOS_ENABLED=YES
GEOS_VERSION=3.11.1-CAPI-1.17.1
PROJ_BUILD_VERSION=9.1.1
PROJ_RUNTIME_VERSION=9.1.1
COMPILER=GCC 12.2.0



 gdalinfo --version

GDAL 3.8.4, released 2024/02/08

also tried  gdal-3.6.2



OS is Ubuntu Aarch64





However, this does not result in the creation of an .aux.xml file. Could you provide any insights into why the .aux.xml file may not be generated in this instance?



Any assistance or suggestions you could offer would be greatly appreciated.



Best regards,

Shaima A.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/fb7fb088/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Mar  8 04:01:16 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Mar 2024 13:01:16 +0100
Subject: [gdal-dev] Variable Tile Sizes
In-Reply-To: <0b4f10bb6390ef326ffe094a663e8f10dc9d6617@savagexi.com>
References: <0b4f10bb6390ef326ffe094a663e8f10dc9d6617@savagexi.com>
Message-ID: <c5bd8553-bf72-4dae-8b10-d609f31565b0@spatialys.com>

Hi,

Varying tile sizes: we definitely don't support that, and I don't think 
any of the OGC tiling specifications do. I guess that could be 
implemented (what can't?) but the WMS driver definitely doesn't 
currently. The code you spotted is for tiles at the right and bottom 
edges of the virtual raster, but there's no resampling involved. Support 
for varying tile sizes would imply that the driver resamples from the 
tile size of the tile to the GDAL advertized tile size.

One thing that the OGCAPI driver supports is tilematrixset with varying 
*number* of tiles by latitude ranges using the "variableMatrixWidths" 
feature. Cf https://docs.ogc.org/is/17-083r4/17-083r4.html#toc72 . This 
also involves doing resampling in the driver.

Even

Le 08/03/2024 ? 04:11, Charlie Savage via gdal-dev a ?crit?:
> We have a custom tiling scheme (tilematrixset) for satellite imagery 
> that varies tile widths as they move closer/farther from the equator. 
> We do this for speed/efficiency reasons and the amount of error 
> introduced is minimal over short distances and doesn't impat running 
> CV algorithms. However, this means that our tiles may differ in width 
> by a pixel for a paritcular satellite image (we tile the images).
>
> Using gdalbuildvirt to combine the tiles back into a single image? 
> works fine.
>
> However, we would like to serve them using the OGC tile api. And that 
> doesn't work, due to this error:
>
>     ERROR 1: GDALWMS: Incorrect size 983 x 1232 of downloaded block,
>     expected 982 x 1232, max 982 x 1232. ERROR 1: GDALWMS:
>     ReadBlockFromFile
>     (0.0.0.0:5500/ogcapi/collections/1050010019917900---s---WV02---wv02---NA---NA/map/tiles/C1232_180_180/0/0/1.tif)
>     failed. ERROR 1: GDAL_WMS>, band 1: IReadBlock failed at X offset
>     0, Y offset 0: GDALWMS: ReadBlockFromFile
>     (0.0.0.0:5500/ogcapi/collections/1050010019917900---s---WV02---wv02---NA---NA/map/tiles/C1232_180_180/0/0/1.tif)
>     failed.
>
>
> The code that causes this is:
>
>
>
>     //* expected size */ /const int esx =*MIN*(MAX(0, (x +1) *nBlockXSize),nRasterXSize) -
>                      *MIN*(MAX(0,x *nBlockXSize),nRasterXSize);
>     const int esy =*MIN*(MAX(0, (y +1) *nBlockYSize),nRasterYSize) -
>                      *MIN*(MAX(0,y *nBlockYSize),nRasterYSize);
>     int sx =ds->GetRasterXSize();
>     int sy =ds->GetRasterYSize();
>
>     //* Allow bigger than expected so pre-tiled constant size images
>     work on //* corners *//
>
>     if ((sx > nBlockXSize) || (sy > nBlockYSize) || (sx < esx) || (sy
>     < esy)) { CPLError(CE_Failure, CPLE_AppDefined, "GDALWMS:
>     Incorrect size %d x %d of downloaded block, " "expected %d x %d,
>     max %d x %d.", sx, sy, esx, esy, nBlockXSize, nBlockYSize); ret =
>     CE_Failure; }
>
>
> I was hoping that the comment about bigger than expected size images 
> would work, but from the error message above it does not.
>
> So I expect the answer is no, but is there any way we could work 
> around, loosen or disable this restriction? Or some other idea on how 
> to make this work?
>
> Thanks,
>
> Charlie
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/eb3ad01a/attachment.htm>

From even.rouault at spatialys.com  Fri Mar  8 04:23:53 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Mar 2024 13:23:53 +0100
Subject: [gdal-dev] Motion: adopt RFC 99: Geometry coordinate precision
In-Reply-To: <CACmBxyvW4XOCYt7xgxMMU57G77sGKk6ngBeo7kTvU4if7oM9vw@mail.gmail.com>
References: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
 <CACmBxyvW4XOCYt7xgxMMU57G77sGKk6ngBeo7kTvU4if7oM9vw@mail.gmail.com>
Message-ID: <45abe9fd-f4f2-43be-9eb8-016aa06caf44@spatialys.com>


Le 07/03/2024 ? 20:44, Kurt Schwehr a ?crit?:
> +0 KurtS. It seems like a good idea, but I worry about 
> unintended?consequences, but can't come up with any.

I'm quite confident that as most new features (or sometimes even 
bugfixes), it will cause issues in some scenarios. Hopefully it will 
also help address more scenarios that aren't covered currently than ones 
that it will break :-) The main scenario I can imagine where the feature 
will trigger without users explicitly opting for it is when using 
ogr2ogr from a source that has an advertized precision (so no existing 
dataset). And by default none of the drivers will write coordinate 
precision metadata, unless the user has explictly defined one (through 
the API or the -xyRes switch of ogr2ogr). For example, even if you use 
the GeoJSON driver with RFC7946 output which rounds to 7 decimals by 
default, the xy_coordinate_resolution=1e-7 metadata will *not* be 
written in the file. And the new switch -unsetCoordPrecision switch will 
be a way to go back to the pre 3.9 behavior when dealing with source 
datasets that have an advertized coordinate precision. So hopefully 
backward compatibility should be quite good. A good indicator is that 
none of the existing regression tests had to be modified.

-- 

http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Fri Mar  8 07:40:44 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Mar 2024 16:40:44 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
Message-ID: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>

Hi,

Our command line C++ utilities use ad-hoc manual parsing, which means that:

-? the usage message must be manually composed,

-? you must take care to check that there are enough remaining arguments 
for the ones that take value to avoid out-of-bounds accesses (tests like 
argc + 1 < argn)

- detection for duplicated arguments when only a single occurrence is 
allowed must be manually done, nd thus is often not done, confusing 
users, cf https://github.com/OSGeo/gdal/issues/9415

- etc.

I've come across https://github.com/p-ranav/argparse which fit all my 
requirements at first sight: compatible with our C++ requirements 
(C++17), MIT license, easily usable (single header), well documented, 
and enough feature-full. From a quick testing, it seems to work well. It 
looks also as it has taken some inspiration from the Python argparse module.

I'd be tempted to give that a try to retrofit our existing utilities 
(probably starting with the ones with the less options :-)). Opinions? I 
guess there must be a plethora of similar projects, due to the absence 
of a std::argparse module... At least I see it is in the list of (9) 
alternatives mentioned at 
https://en.cppreference.com/w/cpp/links/libs?source=post_page---------------------------#Configuration:Command_Line

CLI11 looked like a candidate too, but reading 
https://github.com/CLIUtils/CLI11?tab=readme-ov-file#features-not-supported-by-this-library 
"There are some other possible "features" that are intentionally not 
supported by this library:... Non-standard variations on syntax, like 
|-long| options. This is non-standard and should be avoided, so that is 
enforced by this library." . Fair enough, but we use that extensively in 
GDAL.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/5b784552/attachment.htm>

From thomas.bonfort at gmail.com  Fri Mar  8 08:10:14 2024
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Fri, 8 Mar 2024 17:10:14 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
Message-ID: <CAOM3y2jJ72ZT5ruxKKZteLAXD8EewO1Cfcb1vdRf=kP-CjEdHg@mail.gmail.com>

Hi Even,
my number 1 requirement would be that the rewrite not cause any backwards
compatibility issues compared to today's argument handling. I suspect many
users are calling the gdal utilities through scripts and it would be a pain
to have to update those when upgrading gdal.

a nice to have enhancement that could be added during this upgrade (which
actually could be incompatible with my previous point, although I don't see
any on the top of my head) would be to support "--config key=value"
alongside "--config key value" in order to align with e.g. creation options.

best regards,
TB

Le ven. 8 mars 2024, 16:41, Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> a ?crit :

> Hi,
>
> Our command line C++ utilities use ad-hoc manual parsing, which means that:
>
> -  the usage message must be manually composed,
>
> -  you must take care to check that there are enough remaining arguments
> for the ones that take value to avoid out-of-bounds accesses (tests like
> argc + 1 < argn)
>
> - detection for duplicated arguments when only a single occurrence is
> allowed must be manually done, nd thus is often not done, confusing users,
> cf https://github.com/OSGeo/gdal/issues/9415
>
> - etc.
>
> I've come across https://github.com/p-ranav/argparse which fit all my
> requirements at first sight: compatible with our C++ requirements (C++17),
> MIT license, easily usable (single header), well documented, and enough
> feature-full. From a quick testing, it seems to work well. It looks also as
> it has taken some inspiration from the Python argparse module.
>
> I'd be tempted to give that a try to retrofit our existing utilities
> (probably starting with the ones with the less options :-)). Opinions? I
> guess there must be a plethora of similar projects, due to the absence of a
> std::argparse module... At least I see it is in the list of (9)
> alternatives mentioned at
> https://en.cppreference.com/w/cpp/links/libs?source=post_page---------------------------#Configuration:Command_Line
>
> CLI11 looked like a candidate too, but reading
> https://github.com/CLIUtils/CLI11?tab=readme-ov-file#features-not-supported-by-this-library
> "There are some other possible "features" that are intentionally not
> supported by this library:... Non-standard variations on syntax, like
> -long options. This is non-standard and should be avoided, so that is
> enforced by this library." . Fair enough, but we use that extensively in
> GDAL.
>
> Even
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/19e31bf4/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Mar  8 08:42:11 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Mar 2024 17:42:11 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <CAOM3y2jJ72ZT5ruxKKZteLAXD8EewO1Cfcb1vdRf=kP-CjEdHg@mail.gmail.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
 <CAOM3y2jJ72ZT5ruxKKZteLAXD8EewO1Cfcb1vdRf=kP-CjEdHg@mail.gmail.com>
Message-ID: <c390e5b1-ddef-4ad4-9d9d-e858a64b2e6a@spatialys.com>

Thomas,
>
> my number 1 requirement would be that the rewrite not cause any 
> backwards compatibility issues compared to today's argument handling. 
> I suspect many users are calling the gdal utilities through scripts 
> and it would be a pain to have to update those when upgrading gdal.

Yes, backward compatibility is an obvious requirement. That said, it 
would not be fully backwards compatible in the situations where users 
currently misuse the official synopsis, and typically when they repeat 
an argument that is supposed to not be repeatable. Currently depending 
on the argument and utility, they might potentially get an error, or the 
first occurrence will be used, or the last occurrence will be used (most 
often this last case). With a standard argument parser, this will be 
rejected with an explicit error message. This is actually what triggered 
me to consider using a dedicated mechanism for argument parsing.

Backward compatibility for nominal cases will be tricky in some 
situations. For example I see that ogrinfo supports a weird syntax like 
"-geom=NO" that p-ranav/argparse cannot support out of the box (it 
supports ["-geom", "NO"], and if a dash dash alias is also declared, 
["--geom", "NO"] or ["--geom=NO"]). So for those hopefully rare cases, 
one will have to pre-process argv[] before passing to p-ranav/argparse 
so that is sees 2 separate argv[] values ["-geom", "NO"] instead to work 
properly.

>
> a nice to have enhancement that could be added during this upgrade 
> (which actually could be incompatible with my previous point, although 
> I don't see any on the top of my head) would be to support "--config 
> key=value" alongside "--config key value" in order to align with e.g. 
> creation options.

That's kind of orthogonal. We can support both with the logic: if the 
argv[i] value after "--config" has an equal sign in it, assume it is a 
key=value pair (none of our valid config options should have an equal 
sign in the key!). Otherwise assume argv[i] is the key and argv[i+1] is 
the value.


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From andrew at aitchison.me.uk  Fri Mar  8 08:45:20 2024
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 8 Mar 2024 16:45:20 +0000 (GMT)
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
Message-ID: <f8e60b41-90de-ab29-0b75-3aefdb7b9ca3@aitchison.me.uk>

On Fri, 8 Mar 2024, Even Rouault via gdal-dev wrote:

> Hi,
>
> Our command line C++ utilities use ad-hoc manual parsing, which means that:
>
> -? the usage message must be manually composed,
>
> -? you must take care to check that there are enough remaining arguments for 
> the ones that take value to avoid out-of-bounds accesses (tests like argc + 1 
> < argn)
>
> - detection for duplicated arguments when only a single occurrence is allowed 
> must be manually done, nd thus is often not done, confusing users, cf 
> https://github.com/OSGeo/gdal/issues/9415
>
> - etc.
>
> I've come across https://github.com/p-ranav/argparse which fit all my 
> requirements at first sight: compatible with our C++ requirements (C++17), 
> MIT license, easily usable (single header), well documented, and enough 
> feature-full. From a quick testing, it seems to work well. It looks also as 
> it has taken some inspiration from the Python argparse module.
>
> I'd be tempted to give that a try to retrofit our existing utilities 
> (probably starting with the ones with the less options :-)). Opinions? I 
> guess there must be a plethora of similar projects, due to the absence of a 
> std::argparse module... At least I see it is in the list of (9) alternatives 
> mentioned at 
> https://en.cppreference.com/w/cpp/links/libs?source=post_page---------------------------#Configuration:Command_Line

Some options have related environment variables, eg --debug /CPL_DEBUG.
Options are also passed through to several drivers.
I assume that the implications for these are not significant ?

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From sethg at geographika.co.uk  Fri Mar  8 08:44:16 2024
From: sethg at geographika.co.uk (Seth G)
Date: Fri, 08 Mar 2024 17:44:16 +0100
Subject: [gdal-dev] ArcGIS REST API TMS Mini-Driver with non-Web Mercator
 Services
Message-ID: <bf571d8b-88f5-4459-b078-9ccefa14d967@app.fastmail.com>

Hi all,

I've been trying to set up the GDAL WMS driver to work with an ArcGIS tile service, as described at https://gdal.org/drivers/raster/wms.html#arcgis-rest-api
Everything works fine for Web Mercator services, but I'm not able to get this to work with a different projection.

I've used the following to create the XML service configuration file:

    gdal_translate https://utility.arcgis.com/usrsvcs/servers/6a6319c6b6bc4876b742eb907642da2e/rest/services/MapGeniePremiumITM/MapServer?f=json wms.xml -of WMS

This outputs:

    <GDAL_WMS>
      <Service name="TMS">
        <ServerUrl>https://utility.arcgis.com/usrsvcs/servers/6a6319c6b6bc4876b742eb907642da2e/rest/services/MapGeniePremiumITM/MapServer/tile/${z}/${y}/${x}</ServerUrl>
      </Service>
      <DataWindow>
        <UpperLeftX>-5022200.00000000</UpperLeftX>
        <UpperLeftY>4821100.00000000</UpperLeftY>
        <LowerRightX>-4751266.12479892</LowerRightX>
        <LowerRightY>4550166.12479892</LowerRightY>
        <TileLevel>12</TileLevel>
        <TileCountX>1</TileCountX>
        <YOrigin>top</YOrigin>
      </DataWindow>
      <Projection>EPSG:2157</Projection>
      <BlockSizeX>256</BlockSizeX>
      <BlockSizeY>256</BlockSizeY>
      <Cache/>
    </GDAL_WMS>

The following should then produce valid output (a tiny test area), and does when pointing at an XML config file for the Web Mercator services:

    SET CPL_DEBUG=ON
    gdal_translate -of PNG -outsize 512 512 -projwin 611540 640119 611640 640019 -projwin_srs "EPSG:2157" wms.xml output.png

For the above XML file the output image is empty. I've played around with all options including setting the DataWindow to the full extent referenced in the service JSON file with no luck:

    <UpperLeftX>399999.908983152</UpperLeftX>
    <LowerRightY>499999.966133265</LowerRightY>
    <LowerRightX>810000.120650242</LowerRightX>
    <UpperLeftY>999999.966133265</UpperLeftY>

Changing to the world bounds at least makes requests, but the X and Y values are way off:

    <UpperLeftX>-20037508.34</UpperLeftX>
    <UpperLeftY>20037508.34</UpperLeftY>
    <LowerRightX>20037508.34</LowerRightX>
    <LowerRightY>-20037508.34</LowerRightY>

Requesting... /tile/12/2948/2113
Actual tiles are more in the range /tile/12/61727/83181

Setting TileX and TileY can increase these values, but I'm not sure how (or if) I should be calculating them. 

Some questions:

- Are custom projections and DataWindows even supported?
- Are the values output to the XML config correct, or are they simply a template from which to start with?
- Are all the values for the XML in the service JSON file, or are there additional calculations to make?

Any advice greatly appreciated,

Seth

--
web:https://geographika.net & https://mapserverstudio.net
twitter: @geographika

From thomas.bonfort at gmail.com  Fri Mar  8 08:55:59 2024
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Fri, 8 Mar 2024 17:55:59 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <c390e5b1-ddef-4ad4-9d9d-e858a64b2e6a@spatialys.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
 <CAOM3y2jJ72ZT5ruxKKZteLAXD8EewO1Cfcb1vdRf=kP-CjEdHg@mail.gmail.com>
 <c390e5b1-ddef-4ad4-9d9d-e858a64b2e6a@spatialys.com>
Message-ID: <CAOM3y2iUg64-hZyQ18PYK1R0SweSrGbZSe2siY1eDyqro6wUhw@mail.gmail.com>

Le ven. 8 mars 2024, 17:42, Even Rouault <even.rouault at spatialys.com> a
?crit :

> Thomas,
> >
> > my number 1 requirement would be that the rewrite not cause any
> > backwards compatibility issues compared to today's argument handling.
> > I suspect many users are calling the gdal utilities through scripts
> > and it would be a pain to have to update those when upgrading gdal.
>
> Yes, backward compatibility is an obvious requirement. That said, it
> would not be fully backwards compatible in the situations where users
> currently misuse the official synopsis, and typically when they repeat
> an argument that is supposed to not be repeatable. Currently depending
> on the argument and utility, they might potentially get an error, or the
> first occurrence will be used, or the last occurrence will be used (most
> often this last case). With a standard argument parser, this will be
> rejected with an explicit error message. This is actually what triggered
> me to consider using a dedicated mechanism for argument parsing.
>

fully agree. my worry concerned e.g. the "-b <int>" case where an arg
parser handling the int conversion could have been useful, but would break
our "-b mask" current usage.


> Backward compatibility for nominal cases will be tricky in some
> situations. For example I see that ogrinfo supports a weird syntax like
> "-geom=NO" that p-ranav/argparse cannot support out of the box (it
> supports ["-geom", "NO"], and if a dash dash alias is also declared,
> ["--geom", "NO"] or ["--geom=NO"]). So for those hopefully rare cases,
> one will have to pre-process argv[] before passing to p-ranav/argparse
> so that is sees 2 separate argv[] values ["-geom", "NO"] instead to work
> properly.


I hope those are not to common, so the rewrite does not become more
difficult to maintain than today!


> >
> > a nice to have enhancement that could be added during this upgrade
> > (which actually could be incompatible with my previous point, although
> > I don't see any on the top of my head) would be to support "--config
> > key=value" alongside "--config key value" in order to align with e.g.
> > creation options.
>
> That's kind of orthogonal. We can support both with the logic: if the
> argv[i] value after "--config" has an equal sign in it, assume it is a
> key=value pair (none of our valid config options should have an equal
> sign in the key!). Otherwise assume argv[i] is the key and argv[i+1] is
> the value.
>

fully agree it is orthogonal, I was just throwing in a pain point I have
today. hopefully we don't have an occurence where the config key contains
an equal sign ?

regards,
tb


>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/18d58828/attachment.htm>

From j1 at jimenezshaw.com  Fri Mar  8 09:01:17 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 8 Mar 2024 18:01:17 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
Message-ID: <CADRrdKvbi5K+zKo7vr0xx=aR7XtBJcZFGe1MHXO7PHHLqq7Y=A@mail.gmail.com>

Hi Even.

In principle the idea sounds good.

How is it parsing the numbers? is it locale agnostic? I think it is not,
because it is using "strtod". That means that if I have my locale in
Spanish, French, German, ... it will expect "," as the decimal separator,
right?
... well, how is GDAL expecting floating values? Is GDAL locale agnostic?

Do you want to add it as a dependency, or just copy-paste the header file
into gdal repo?

On Fri, 8 Mar 2024 at 16:40, Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> Our command line C++ utilities use ad-hoc manual parsing, which means that:
>
> -  the usage message must be manually composed,
>
> -  you must take care to check that there are enough remaining arguments
> for the ones that take value to avoid out-of-bounds accesses (tests like
> argc + 1 < argn)
>
> - detection for duplicated arguments when only a single occurrence is
> allowed must be manually done, nd thus is often not done, confusing users,
> cf https://github.com/OSGeo/gdal/issues/9415
>
> - etc.
>
> I've come across https://github.com/p-ranav/argparse which fit all my
> requirements at first sight: compatible with our C++ requirements (C++17),
> MIT license, easily usable (single header), well documented, and enough
> feature-full. From a quick testing, it seems to work well. It looks also as
> it has taken some inspiration from the Python argparse module.
>
> I'd be tempted to give that a try to retrofit our existing utilities
> (probably starting with the ones with the less options :-)). Opinions? I
> guess there must be a plethora of similar projects, due to the absence of a
> std::argparse module... At least I see it is in the list of (9)
> alternatives mentioned at
> https://en.cppreference.com/w/cpp/links/libs?source=post_page---------------------------#Configuration:Command_Line
>
> CLI11 looked like a candidate too, but reading
> https://github.com/CLIUtils/CLI11?tab=readme-ov-file#features-not-supported-by-this-library
> "There are some other possible "features" that are intentionally not
> supported by this library:... Non-standard variations on syntax, like
> -long options. This is non-standard and should be avoided, so that is
> enforced by this library." . Fair enough, but we use that extensively in
> GDAL.
>
> Even
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/34912573/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Mar  8 09:19:42 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Mar 2024 18:19:42 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <f8e60b41-90de-ab29-0b75-3aefdb7b9ca3@aitchison.me.uk>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
 <f8e60b41-90de-ab29-0b75-3aefdb7b9ca3@aitchison.me.uk>
Message-ID: <ce264cef-6549-4e34-9b21-2e1bad1d35ce@spatialys.com>


> Some options have related environment variables, eg --debug /CPL_DEBUG.
> Options are also passed through to several drivers.
> I assume that the implications for these are not significant ?
This wouldn't change the general logic of GDAL and so the existing 
(possibly confusing) set of various type of options, configuration 
options/env variables, dataset-creation, layer-creation, etc. would 
remain :-)? Hopefully the change would be mostly unnoticed by users.

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Fri Mar  8 09:27:43 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Mar 2024 18:27:43 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <CADRrdKvbi5K+zKo7vr0xx=aR7XtBJcZFGe1MHXO7PHHLqq7Y=A@mail.gmail.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
 <CADRrdKvbi5K+zKo7vr0xx=aR7XtBJcZFGe1MHXO7PHHLqq7Y=A@mail.gmail.com>
Message-ID: <7a749b36-c97f-4eea-9a94-b7b05e8bdcd9@spatialys.com>


>
> In principle the idea sounds good.
>
> How is it parsing the numbers? is it locale agnostic? I think it is 
> not, because it is using "strtod". That means that if I have my locale 
> in Spanish, French, German, ... it will expect "," as the decimal 
> separator, right?
if running under a non-C locale, and without modification, yes
> ... well, how is GDAL expecting floating values?

Only if the utilities enables setlocale(LC_ALL, ""), which they don't by 
default. That said as the command line utility parsing is also used for 
the utility-as-C-function, we may run under a non-C locale (that is a 
Spanish/French/whatever locale) in some contexts.

> Is GDAL locale agnostic?
Grep'ping I see that we use both CPLAtof() which is locale-agnostic and 
assume dot as decimal separator or CPLAtofM() which accept dot or comma 
as decimal separator. I don't think there is a particular reason in 
using any of them. Inconsistency likely due to doing the work manually 
and depending on the mood of the developer. Not totally sure of the 
behavior we want: should we always require dot as the decimal separator, 
or be lenient and accept both dot and comma (wondering if there wouldn't 
be situations where we would take a "a,b,c" string, with a, b, c being 
floating point numbers, in which case obviously we would have to require 
dot. But I'm not sure if that can happen)
>
> Do you want to add it as a dependency, or just copy-paste the header 
> file into gdal repo?

yes, copy-paste and potentially with a few changes for our needs, like 
using CPLAtof or CPLAtofM.


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From j1 at jimenezshaw.com  Fri Mar  8 09:34:16 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 8 Mar 2024 18:34:16 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <7a749b36-c97f-4eea-9a94-b7b05e8bdcd9@spatialys.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
 <CADRrdKvbi5K+zKo7vr0xx=aR7XtBJcZFGe1MHXO7PHHLqq7Y=A@mail.gmail.com>
 <7a749b36-c97f-4eea-9a94-b7b05e8bdcd9@spatialys.com>
Message-ID: <CADRrdKsN6mGbazgVW+D0S3P_P6Q83xXNmBvN_P6aRmLxA+Cdjw@mail.gmail.com>

I don't like that the behaviour of a command line depends on the
configuration of the user (that is usually not aware of). So a command that
works for me doesn't work for you. That is bad.
I don't know in GDAL, but in proj there is the option --bbox, that has
comma separated coordinates. That can be -10.5,5.1,-9.5,6.3

On Fri, 8 Mar 2024 at 18:27, Even Rouault <even.rouault at spatialys.com>
wrote:

>
> >
> > In principle the idea sounds good.
> >
> > How is it parsing the numbers? is it locale agnostic? I think it is
> > not, because it is using "strtod". That means that if I have my locale
> > in Spanish, French, German, ... it will expect "," as the decimal
> > separator, right?
> if running under a non-C locale, and without modification, yes
> > ... well, how is GDAL expecting floating values?
>
> Only if the utilities enables setlocale(LC_ALL, ""), which they don't by
> default. That said as the command line utility parsing is also used for
> the utility-as-C-function, we may run under a non-C locale (that is a
> Spanish/French/whatever locale) in some contexts.
>
> > Is GDAL locale agnostic?
> Grep'ping I see that we use both CPLAtof() which is locale-agnostic and
> assume dot as decimal separator or CPLAtofM() which accept dot or comma
> as decimal separator. I don't think there is a particular reason in
> using any of them. Inconsistency likely due to doing the work manually
> and depending on the mood of the developer. Not totally sure of the
> behavior we want: should we always require dot as the decimal separator,
> or be lenient and accept both dot and comma (wondering if there wouldn't
> be situations where we would take a "a,b,c" string, with a, b, c being
> floating point numbers, in which case obviously we would have to require
> dot. But I'm not sure if that can happen)
> >
> > Do you want to add it as a dependency, or just copy-paste the header
> > file into gdal repo?
>
> yes, copy-paste and potentially with a few changes for our needs, like
> using CPLAtof or CPLAtofM.
>
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/a57a0fed/attachment.htm>

From thomas.bonfort at gmail.com  Fri Mar  8 09:42:52 2024
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Fri, 8 Mar 2024 18:42:52 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <CADRrdKsN6mGbazgVW+D0S3P_P6Q83xXNmBvN_P6aRmLxA+Cdjw@mail.gmail.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
 <CADRrdKvbi5K+zKo7vr0xx=aR7XtBJcZFGe1MHXO7PHHLqq7Y=A@mail.gmail.com>
 <7a749b36-c97f-4eea-9a94-b7b05e8bdcd9@spatialys.com>
 <CADRrdKsN6mGbazgVW+D0S3P_P6Q83xXNmBvN_P6aRmLxA+Cdjw@mail.gmail.com>
Message-ID: <CAOM3y2iVbxDaSDcSuvDpTRE=cJxeHJ=EZxYEpzPCQ8h-=hZ0hg@mail.gmail.com>

> I don't like that the behaviour of a command line depends on the
> configuration of the user (that is usually not aware of). So a command that
> works for me doesn't work for you. That is bad.
>

+1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/857eb867/attachment.htm>

From even.rouault at spatialys.com  Fri Mar  8 09:44:27 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Mar 2024 18:44:27 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <CADRrdKsN6mGbazgVW+D0S3P_P6Q83xXNmBvN_P6aRmLxA+Cdjw@mail.gmail.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
 <CADRrdKvbi5K+zKo7vr0xx=aR7XtBJcZFGe1MHXO7PHHLqq7Y=A@mail.gmail.com>
 <7a749b36-c97f-4eea-9a94-b7b05e8bdcd9@spatialys.com>
 <CADRrdKsN6mGbazgVW+D0S3P_P6Q83xXNmBvN_P6aRmLxA+Cdjw@mail.gmail.com>
Message-ID: <3c193d70-4177-42a3-8990-f33bb3219fa3@spatialys.com>


Le 08/03/2024 ? 18:34, Javier Jimenez Shaw a ?crit?:
> I don't like that the behaviour of a command line depends on the 
> configuration of the user (that is usually not aware of). So a command 
> that works for me doesn't work for you. That is bad.
I was perhaps not clear. Let me clarify, but at least for the current 
state of utilities, the current locale shouldn't matter because we use 
locale-independent methods. And that should be an aim for the new parser 
too.
> I don't know in GDAL, but in proj there is the option --bbox, that has 
> comma separated coordinates. That can be -10.5,5.1,-9.5,6.3

in GDAL I can only think of cases where the separator is space. I 
believe that we could use CPLAtofM() (accepting dot or comma) in 
situations where there's no ambiguity, and CPLAtof() (accepting dot 
only) if there are situations where comma is used as a separator between 
numbers themselves (to be confirmed we have such occurences)


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From jesse.r.meyer at nasa.gov  Fri Mar  8 11:00:36 2024
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Fri, 8 Mar 2024 19:00:36 +0000
Subject: [gdal-dev] Bad value 4 for "ExtraSamples" tag
Message-ID: <54CF404D-1352-4655-8A85-2B81D4CBBDAD@ndc.nasa.gov>

We recently began seeing the following error (which doesn?t seem to produce incorrect output images)


ERROR 1: _TIFFVSetField:/vsimem/gtiff/thread/job/0x1f5d0970: Bad value 4 for "ExtraSamples" tag

when creating a geotif image from C++ with creation options:

char *disk_create_options[] = {"COMPRESS=ZSTD", "ZSTD_LEVEL=1", "INTERLEAVE=BAND", "Tiled=YES", "NUM_THREADS=ALL_CPUS", "SPARSE_OK=True", "PREDICTOR=3", 0};

We are not explicitly using the vsimem driver, only the driver returned by:
GDALGetDriverByName("GTiff")

Notably, the ?ALPHA? creation option is absent, and per the documentation that is the only relevant option.  The error is emitted on gdal 3.8.4, but we have another environment with 3.4.3 and there?s no error.  On the 3.8.4 environment, we?re using internal libtiff w/ JXL support, if helpful.

Best,
Jesse
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240308/ca85b073/attachment-0001.htm>

From cfis at savagexi.com  Fri Mar  8 15:21:30 2024
From: cfis at savagexi.com (Charlie Savage)
Date: Fri, 8 Mar 2024 15:21:30 -0800
Subject: [gdal-dev] Variable Tile Sizes
In-Reply-To: <c5bd8553-bf72-4dae-8b10-d609f31565b0@spatialys.com>
References: <0b4f10bb6390ef326ffe094a663e8f10dc9d6617@savagexi.com>
 <c5bd8553-bf72-4dae-8b10-d609f31565b0@spatialys.com>
Message-ID: <f92673a1-dfb2-46a8-9a43-b260286f3cae@savagexi.com>


> Varying tile sizes: we definitely don't support that, and I don't think 
> any of the OGC tiling specifications do. I guess that could be 
> implemented (what can't?) but the WMS driver definitely doesn't 
> currently. The code you spotted is for tiles at the right and bottom 
> edges of the virtual raster, but there's no resampling involved. Support 
> for varying tile sizes would imply that the driver resamples from the 
> tile size of the tile to the GDAL advertized tile size.

Right, understood. Note though if you use gdalbuildvirt with the same 
tiles (manually downloaded) it actually works well enough for our 
purposes. Thus my question about if there is a way around that check.

> One thing that the OGCAPI driver supports is tilematrixset with varying 
> *number* of tiles by latitude ranges using the "variableMatrixWidths" 
> feature. Cf https://docs.ogc.org/is/17-083r4/17-083r4.html#toc72 . This 
> also involves doing resampling in the driver.

Right. We do the opposite, same number of tiles, different widths.

Charlie
> Le 08/03/2024 ? 04:11, Charlie Savage via gdal-dev a ?crit?:
>> We have a custom tiling scheme (tilematrixset) for satellite imagery 
>> that varies tile widths as they move closer/farther from the equator. 
>> We do this for speed/efficiency reasons and the amount of error 
>> introduced is minimal over short distances and doesn't impat running 
>> CV algorithms. However, this means that our tiles may differ in width 
>> by a pixel for a paritcular satellite image (we tile the images).
>>
>> Using gdalbuildvirt to combine the tiles back into a single image  
>> works fine.
>>
>> However, we would like to serve them using the OGC tile api. And that 
>> doesn't work, due to this error:
>>
>>     ERROR 1: GDALWMS: Incorrect size 983 x 1232 of downloaded block,
>>     expected 982 x 1232, max 982 x 1232. ERROR 1: GDALWMS:
>>     ReadBlockFromFile
>>     (0.0.0.0:5500/ogcapi/collections/1050010019917900---s---WV02---wv02---NA---NA/map/tiles/C1232_180_180/0/0/1.tif) failed. ERROR 1: GDAL_WMS>, band 1: IReadBlock failed at X offset 0, Y offset 0: GDALWMS: ReadBlockFromFile (0.0.0.0:5500/ogcapi/collections/1050010019917900---s---WV02---wv02---NA---NA/map/tiles/C1232_180_180/0/0/1.tif) failed.
>>
>>
>> The code that causes this is:
>>
>>
>>
>>     //* expected size */ /const int esx =*MIN*(MAX(0, (x +1) *nBlockXSize),nRasterXSize) -
>>                      *MIN*(MAX(0,x *nBlockXSize),nRasterXSize);
>>     const int esy =*MIN*(MAX(0, (y +1) *nBlockYSize),nRasterYSize) -
>>                      *MIN*(MAX(0,y *nBlockYSize),nRasterYSize);
>>     int sx =ds->GetRasterXSize();
>>     int sy =ds->GetRasterYSize();
>>
>>     //* Allow bigger than expected so pre-tiled constant size images
>>     work on //* corners *//
>>
>>     if ((sx > nBlockXSize) || (sy > nBlockYSize) || (sx < esx) || (sy
>>     < esy)) { CPLError(CE_Failure, CPLE_AppDefined, "GDALWMS:
>>     Incorrect size %d x %d of downloaded block, " "expected %d x %d,
>>     max %d x %d.", sx, sy, esx, esy, nBlockXSize, nBlockYSize); ret =
>>     CE_Failure; }
>>
>>
>> I was hoping that the comment about bigger than expected size images 
>> would work, but from the error message above it does not.
>>
>> So I expect the answer is no, but is there any way we could work 
>> around, loosen or disable this restriction? Or some other idea on how 
>> to make this work?
>>
>> Thanks,
>>
>> Charlie
>>
>>
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 

From howard at hobu.co  Sun Mar 10 13:53:34 2024
From: howard at hobu.co (Howard Butler)
Date: Sun, 10 Mar 2024 15:53:34 -0500
Subject: [gdal-dev] Motion: adopt RFC 99: Geometry coordinate precision
In-Reply-To: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
References: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
Message-ID: <7EC58E67-A878-41C9-8B86-A7958BCD1775@hobu.co>


> On Mar 7, 2024, at 1:07?PM, Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> 
> Hi,
> 
> The flow of comments calming down, I motion to adopt RFC 99: Geometry coordinate precision
> 
> https://github.com/OSGeo/gdal/pull/9300
> 
> Pre-rendered view at https://github.com/rouault/gdal/blob/rfc99_text/doc/source/development/rfc/rfc99_geometry_coordinate_precision.rst 
> 
> Starting with my +1,

+1

It is a bit annoying to have the ICreateLayer signature change which will require any external driver implementations to catch up, but we've been changing those plenty over the years.

Howard


From a.pau at creaf.uab.cat  Mon Mar 11 04:42:14 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Mon, 11 Mar 2024 11:42:14 +0000
Subject: [gdal-dev] New driver on doc index?
Message-ID: <PAXPR07MB7775349D21E0F85312CFF595A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
I'm obtaining this error:
/__w/gdal/gdal/doc/source/drivers/vector/miramon.rst: WARNING: document isn't included in any toctree

The file of the rst is miramon.rst but the name of the driver is MiraMonVector (to make it different from MiraMonRaster, in a future).

So, this is a problem? or I should add miramon.rst in any index?

Thanks!



Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/f6c28e01/attachment-0003.jpg>

From even.rouault at spatialys.com  Mon Mar 11 04:50:20 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Mar 2024 12:50:20 +0100
Subject: [gdal-dev] New driver on doc index?
In-Reply-To: <PAXPR07MB7775349D21E0F85312CFF595A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775349D21E0F85312CFF595A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <5e1e1cd3-4f6e-4411-a690-67585901d42f@spatialys.com>

Abel,
>
> Hi,
>
> I?m obtaining this error:
>
> /__w/gdal/gdal/doc/source/drivers/vector/miramon.rst: WARNING: 
> document isn't included in any toctree
>
> The file of the rst is miramon.rst but the name of the driver is 
> MiraMonVector (to make it different from MiraMonRaster, in a future).
>
> So, this is a problem?
>
the mismatch between the miramon.rst file and the name of the driver? no

but the warning is legit, and warnings are turned as errors in the doc 
build process. Otherwise your new page would never have been linked from 
anywhere else.

> or I should add miramon.rst in any index?
>
some quick googling of the error message would have lead you to 
https://sphinx-intro-tutorial.readthedocs.io/en/latest/common_issues.html

which suggests to add the new file to a index.rst file, in that 
instance: doc/source/drivers/vector/index.rst

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/c57661aa/attachment.htm>

From a.pau at creaf.uab.cat  Mon Mar 11 04:58:50 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Mon, 11 Mar 2024 11:58:50 +0000
Subject: [gdal-dev] New driver on doc index?
In-Reply-To: <5e1e1cd3-4f6e-4411-a690-67585901d42f@spatialys.com>
References: <PAXPR07MB7775349D21E0F85312CFF595A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <5e1e1cd3-4f6e-4411-a690-67585901d42f@spatialys.com>
Message-ID: <PAXPR07MB77759DD39BCCC43031D8997AA2242@PAXPR07MB7775.eurprd07.prod.outlook.com>

Oh,
I assumed that it was an internal error and not findable on google, but you?re right that the process is standard.
So, thanks for the answer!

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Even Rouault via gdal-dev
Enviado el: dilluns, 11 de mar? de 2024 12:50
Para: gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] New driver on doc index?

Abel,
Hi,
I?m obtaining this error:
/__w/gdal/gdal/doc/source/drivers/vector/miramon.rst: WARNING: document isn't included in any toctree

The file of the rst is miramon.rst but the name of the driver is MiraMonVector (to make it different from MiraMonRaster, in a future).

So, this is a problem?

the mismatch between the miramon.rst file and the name of the driver? no

but the warning is legit, and warnings are turned as errors in the doc build process. Otherwise your new page would never have been linked from anywhere else.
or I should add miramon.rst in any index?

some quick googling of the error message would have lead you to https://sphinx-intro-tutorial.readthedocs.io/en/latest/common_issues.html

which suggests to add the new file to a index.rst file, in that instance: doc/source/drivers/vector/index.rst
Even

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/368acded/attachment.htm>

From a.pau at creaf.uab.cat  Mon Mar 11 09:30:43 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Mon, 11 Mar 2024 16:30:43 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB7775EBF91F99E222DDEF9359A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <33f75b01-844d-495b-baff-f2d568637c3d@spatialys.com>
 <PAXPR07MB7775F7BED4B21087D898D6E0A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775EBF91F99E222DDEF9359A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB77755303FCDB5E4BD9995983A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,

going back to the misterious failing test_tiff_write_133 I am not able to understand what is wrong with that.
It seems that it would be failing when writing to an unauthorized path. But instead of that it is not failing (and this is the failure, not failing when it should fail).

# Test writing into a non authorized file
ds = gdaltest.tiff_drv.Create(
    "/foo/bar", 1024, 1000, 3, options=["STREAMABLE_OUTPUT=YES", "BLOCKYSIZE=1"]
)
assert ds is None

So, there is anything I am missing about that?
The actions that informs that is re-runed in debug mode:
Merge from base ? AbelPau/gdal at 3ec4655 (github.com)<https://github.com/AbelPau/gdal/actions/runs/8234751437/job/22520988179>

FAILED gcore/tiff_write.py::test_tiff_write_133 - AssertionError: assert <osgeo.gdal.Dataset; proxy of <Swig Object of type 'GDALDatasetShadow *' at 0x0000022226FEDE30> > is None

It?s not None X-(

Perhaps I, as Even said, I created a path before? But how to delete that? I don?t use anymore: VSIMkdirRecursive(). I use VSIMkdir()
Perhaps if the destination folder doesn?t exist I should NOT create it and return a FAILURE?



De: Abel Pau <a.pau at creaf.uab.cat>
Enviado el: dimecres, 6 de mar? de 2024 16:24
Para: Abel Pau <a.pau at creaf.uab.cat>; Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: RE: [gdal-dev] Testing the driver

Hi,
It seems nothing changes. I understand that the environment is new and the execution is not related with the last one.
Here there are 5 tests that fail..

Any idea of what can be happening?
They are very unrelated
Bye VSIMkdirRecursive() ? AbelPau/gdal at 646b98b (github.com)<https://github.com/AbelPau/gdal/actions/runs/8172351502/job/22342474513>


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de Abel Pau via gdal-dev
Enviado el: dimecres, 6 de mar? de 2024 13:52
Para: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver

Ok, I ?ve changed that. Let?s see if it?s the problem.
It?s all so delicate :)
Thanks again!

De: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Enviado el: dimecres, 6 de mar? de 2024 13:36
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver



Le 06/03/2024 ? 13:14, Abel Pau a ?crit :
Hi Even,
I finally discovered the error. It was the fixture. In the wrong place.
Now I?m creating the test.
I hope finish it soon.

On the other hand,
in my actions tab: Merge branch 'OSGeo:master' into master ? AbelPau/gdal at 0249b6d (github.com)<https://github.com/AbelPau/gdal/actions/runs/8169099745/job/22332488002>

There are some tiff failures, but nothing on my hand about tiff.
================================== FAILURES ===================================
36: _____________________________ test_tiff_write_133 _____________________________
36:
36: def test_tiff_write_133():

Do you know what it can be?

There are sometimes random failures, but here it fails on both the build-windows-msys2-mingw and build-windows-conda configs . I would suspect this might be a side effect of a previous run of the Miramon driver by another test with an invalid filename such as /foo/bar. Actually I see that test_ogrsf tries to create a /foo/test file.

And https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L219 does a VSIMkdirRecursive(), so it must create a "/foo" directory. I would recommend against using VSIMkdirRecursive() in a driver. You might use VSIMkdir() to create the latest level of directory, but creating the whole hiearchy is granting too much power to a driver.

Even

De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:%3ceven.rouault at spatialys.com%3e>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself


I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).

Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.


_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/ccca3416/attachment-0001.htm>

From even.rouault at spatialys.com  Mon Mar 11 09:55:50 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Mar 2024 17:55:50 +0100
Subject: [gdal-dev] Testing the driver
In-Reply-To: <PAXPR07MB77755303FCDB5E4BD9995983A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <33f75b01-844d-495b-baff-f2d568637c3d@spatialys.com>
 <PAXPR07MB7775F7BED4B21087D898D6E0A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775EBF91F99E222DDEF9359A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77755303FCDB5E4BD9995983A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <67c79df9-1fb1-47c7-abb4-3d82b5a13816@spatialys.com>

ok, I've looked a bit at the code

So I believe the issue is that

- https://github.com/OSGeo/gdal/blob/master/apps/test_ogrsf.cpp#L1064 
forms a "/foo/test.pol" filename for the miramon driver and call 
Create() with it

- and then 
https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L207 
"osPath = CPLGetPath(pszRootName);" sets "/foo/" as osPath, which is 
then passed to VSIMkdir(), and causing the following mess

I suspect the VSIMkdir() call should only be done in the branch 
https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L211 
where pszRootName has an empty extension.

Even

Le 11/03/2024 ? 17:30, Abel Pau a ?crit?:
>
> Hi,
>
> going back to the misterious failing test_tiff_write_133 I am not able 
> to understand what is wrong with that.
>
> It seems that it would be failing when writing to an unauthorized 
> path. But instead of that it is not failing (and this is the failure, 
> not failing when it should fail).
>
> # Test writing into a non authorized file
>
> ds = gdaltest.tiff_drv.Create(
>
> ??? "/foo/bar", 1024, 1000, 3, options=["STREAMABLE_OUTPUT=YES", 
> "BLOCKYSIZE=1"]
>
> )
>
> assert ds is None
>
> So, there is anything I am missing about that?
> The actions that informs that is re-runed in debug mode:
>
> Merge from base ? AbelPau/gdal at 3ec4655 (github.com) 
> <https://github.com/AbelPau/gdal/actions/runs/8234751437/job/22520988179>
>
> FAILED gcore/tiff_write.py::test_tiff_write_133 - AssertionError: 
> assert <osgeo.gdal.Dataset; proxy of <Swig Object of type 
> 'GDALDatasetShadow *' at 0x0000022226FEDE30> > is None
>
> It?s not None X-(
>
> Perhaps I, as Even said, I created a path before? But how to delete 
> that? I don?t use anymore: VSIMkdirRecursive(). I use VSIMkdir()
>
> *Perhaps if the destination folder doesn?t exist I should NOT create 
> it and return a FAILURE?*
>
> *De:*Abel Pau <a.pau at creaf.uab.cat>
> *Enviado el:* dimecres, 6 de mar? de 2024 16:24
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; Even Rouault 
> <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
> *Asunto:* RE: [gdal-dev] Testing the driver
>
> Hi,
>
> It seems nothing changes. I understand that the environment is new and 
> the execution is not related with the last one.
>
> Here there are 5 tests that fail..
>
> Any idea of what can be happening?
>
> They are very unrelated
>
> Bye VSIMkdirRecursive() ? AbelPau/gdal at 646b98b (github.com) 
> <https://github.com/AbelPau/gdal/actions/runs/8172351502/job/22342474513>
>
> *De:*gdal-dev <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Abel 
> Pau via gdal-dev
> *Enviado el:* dimecres, 6 de mar? de 2024 13:52
> *Para:* Even Rouault <even.rouault at spatialys.com>; 
> gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
> Ok, I ?ve changed that. Let?s see if it?s the problem.
>
> It?s all so delicate :)
>
> Thanks again!
>
> *De:*Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dimecres, 6 de mar? de 2024 13:36
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Testing the driver
>
> Le 06/03/2024 ? 13:14, Abel Pau a ?crit?:
>
>     Hi Even,
>
>     I finally discovered the error. It was the fixture. In the wrong
>     place.
>
>     Now I?m creating the test.
>
>     I hope finish it soon.
>
>     On the other hand,
>
>     in my actions tab: Merge branch 'OSGeo:master' into master ?
>     AbelPau/gdal at 0249b6d (github.com)
>     <https://github.com/AbelPau/gdal/actions/runs/8169099745/job/22332488002>
>
>     There are some tiff failures, but nothing on my hand about tiff.
>
>     ================================== FAILURES
>     ===================================
>
>     36: _____________________________ test_tiff_write_133
>     _____________________________
>
>     36:
>
>     36: def test_tiff_write_133():
>
>     Do you know what it can be?
>
> There are sometimes random failures, but here it fails on both the 
> build-windows-msys2-mingw and build-windows-conda configs . I would 
> suspect this might be a side effect of a previous run of the Miramon 
> driver by another test with an invalid filename such as /foo/bar. 
> Actually I see that test_ogrsf tries to create a /foo/test file.
>
> And 
> https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L219 
> does a VSIMkdirRecursive(), so it must create a "/foo" directory. I 
> would recommend against using VSIMkdirRecursive() in a driver. You 
> might use VSIMkdir() to create the latest level of directory, but 
> creating the whole hiearchy is granting too much power to a driver.
>
> Even
>
>     *De:*Even Rouault <even.rouault at spatialys.com>
>     <mailto:even.rouault at spatialys.com>
>     *Enviado el:* dimecres, 6 de mar? de 2024 13:09
>     *Para:* Abel Pau <a.pau at creaf.uab.cat>
>     <mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
>     *Asunto:* Re: [gdal-dev] Testing the driver
>
>     Hi,
>
>     I don't see anything wrong. I've tried that on my native Linux
>     build and the test_ogr_miramon_vector_1() is found. Does "pytest
>     autotest/ogr/ogr_basic_test.py" work?*
>
>     Note: you don't need the try / except in your test case unless
>     you'd need to some particular cleanup, but that's not the case
>     here. pytest handles test failures nicely
>
>     Even
>
>     Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit?:
>
>         Hi again,
>
>         after solving some issues I used WSL (Windows subsystem Linux)
>         to create an environment where I am able to run tests.
>
>         I run the cmake inside build folder in the environment. It?s
>         slow but finally it finish. After cmake --build . --target
>         install all is ready to be tested.
>
>         I create a simple test ogr_miramon_vector.py (see the code
>         below) to prove that it?s reliable.
>
>         I run:
>
>         pytest autotest/ogr/ogr_miramon_vector.py
>
>         and:
>
>         apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest
>         autotest/ogr/ogr_miramon_vector.py
>
>         Test session starts (platform: linux, Python 3.8.10, pytest
>         8.0.2, pytest-sugar 1.0.0)
>
>         benchmark: 4.0.0 (defaults: timer=time.perf_counter
>         disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0
>         calibration_precision=10 warmup=False warmup_iterations=100000)
>
>         GDAL Build Info:
>
>         ? PAM_ENABLED: YES
>
>         ? OGR_ENABLED: YES
>
>         ? CURL_ENABLED: YES
>
>         ? CURL_VERSION: 7.68.0
>
>         ? GEOS_ENABLED: YES
>
>         ? GEOS_VERSION: 3.8.0-CAPI-1.13.1
>
>         PROJ_BUILD_VERSION: 6.3.1
>
>         PROJ_RUNTIME_VERSION: 6.3.1
>
>         ? COMPILER: GCC 9.4.0
>
>         GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on
>         downloaded data may be skipped)
>
>         GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be
>         skipped)
>
>         rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
>
>         configfile: pytest.ini
>
>         plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
>
>         *collected 0 items*
>
>         My questions is why it seems it?s not working?
>
>         Thanks!
>
>         The test:
>
>         -------------
>
>         import os
>
>         import gdaltest
>
>         import ogrtest
>
>         import pytest
>
>         from osgeo import gdal, ogr, osr
>
>         pytestmark = pytest.mark.require_driver("MiraMonVector")
>
>         ###############################################################################
>
>         @pytest.fixture(scope="module", autouse=True)
>
>         def init():
>
>         ??? with gdaltest.config_option("CPL_DEBUG", "ON"):
>
>         ??????? yield
>
>         ###############################################################################
>
>         # basic test
>
>         def test_ogr_miramon_vector_1():
>
>         ??? try:
>
>         ??????? ds =
>         gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
>
>         ??????? lyr = ds.GetLayer(0)
>
>         ??????? assert lyr is not None, "Failed to get layer"
>
>         ? ??????assert lyr.GetFeatureCount() == 3
>
>         ??????? assert lyr.GetGeomType() == ogr.wkbPoint
>
>         ????????f = lyr.GetNextFeature()
>
>         ??????? assert f.GetFID() == 0
>
>         ??????? assert f.GetGeometryRef().ExportToWkt() == "POINT
>         (513.49 848.81)"
>
>         ??????? assert f.GetField("ID_GRAFIC") == "0"
>
>         ??????? f = lyr.GetNextFeature()
>
>         ??????? assert f.GetField("ID_GRAFIC") == "1"
>
>         ??????? f = lyr.GetNextFeature()
>
>         ??????? assert f.GetField("ID_GRAFIC") == "2"
>
>         ??????? ds = None
>
>         ??? except Exception as e:
>
>         pytest.fail(f"Test failed with exception: {e}")
>
>         *De:*Even Rouault <even.rouault at spatialys.com>
>         <mailto:%3ceven.rouault at spatialys.com%3e>
>         *Enviado el:* divendres, 9 de febrer de 2024 11:48
>         *Para:* Abel Pau <a.pau at creaf.uab.cat>
>         <mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
>         *Asunto:* Re: [gdal-dev] Testing the driver
>
>         Abel,
>
>         Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit?:
>
>             Hi,
>
>             I am at the lasts steps before pulling a request about the
>             MiraMon driver.
>             I need to write some documentation and formalize the tests.
>
>             After that, I?ll do the pull request to github.
>
>         I'd suggest first before issuing the pull request that you
>         push to your fork on github and look at the Actions tab. That
>         will allow you to fix a lot of things on your side, before
>         issuing the PR itself
>
>             I am a little confused about the testing. I can use pytest
>             or ctest, right? Which is the favourite? Are there any
>             changes from the official documentation?
>
>         ctest is just the CMake way of launching the test suite. It
>         will execute C++ tests of autotest/cpp directly, and for tests
>         written in python will launch "pytest autotest/XXXXX" for each
>         directory.
>
>         "ctest --test-dir $build_dir -R autotest_ogr -V"? will just
>         run all the autotest/ogr tests, which can be quite long already.
>
>         To test your own development, you may have a more pleasant
>         experience by directly running just the tests for your driver
>         with something like "pytest autotest/ogr/ogr_miramon.py"? (be
>         careful on Windows, the content of $build_dir/autotest is
>         copied from $source_dir/autotest each time "cmake" is run, so
>         if you edit your test .py file directly in the build
>         directory, be super careful of not accidentally losing your
>         work, and make sure to copy its content to the source
>         directory first. That's admittedly an annoying point of the
>         current test setup on Windows, compared to Unix where we use
>         symbolic links)
>
>         after setting the environment to have PYTHONPATH point to
>         something like $build_dir/swig/python/Release or
>         $build_dir/swig/python/Debug (I believe you're on Windows?).?
>         If you look at the first lines output by the above "ctest
>         --test-dir $build_dir -R autotest_ogr -V" invokation, you'll
>         actually see the PYTHONPATH value to specify.
>
>         You also need to first install pytest and other testing
>         dependencies with: python -m pip install autotest/requirements.txt
>
>             There is a minimal test to create?
>
>         A maximal test suite, you mean ;-) You should aim for a
>         "reasonable" coverage of the code you wrote. Aiming to test
>         the nominal code paths of your driver is desirable (testing
>         the error cases generally requires a lot more effort).
>
>             Can you recommend me some driver that tests things like:
>
>             1.Read a point/arc/polygon layer from some format
>             (gml,kml, gpckg,..) and assert the number of readed objectes
>
>             2.Read a point layer and assert some points (3d included)
>             and some of the fields values
>
>             3.The same with arcs and polygons
>
>             4.Create some layer from the own format to anothers and
>             compare the results with some ?good? results.
>
>             5.Create multiple layers from one outer format (like gpx)
>             and verify the name of the created files...
>
>         You don't necessarily need to use other formats. It is
>         actually better if the tests of a format don't depend too much
>         on other formats, to keep things isolated.
>
>         To test the read part of your driver, add a
>         autotest/ogr/data/miramon directory with *small* test files,
>         ideally at most a few KB each to keep the size of the GDAL
>         repository reasonable, and a few features in each is often
>         enough to unit test, with different type of geometries,
>         attributes, and use the OGR Python API to open the file and
>         iterate over its layers and features to check their content.
>         Those files should have ideally be produced by the Miramon
>         software and not by the writing side of your driver, to check
>         the interoperability of your driver with a "reference" software.
>
>         For the write site of the driver, you can for example run
>         gdal.VectorTranslate(dest, source) on those files, and use
>         again the test function to validate that the read side of your
>         driver likes what the write site has produced. An alternative
>         is also to do a binary comparison of the file generated by
>         your driver with a reference test file stored in for example
>         autotest/ogr/data/miramon/ref_output. But this may be
>         sometimes a fragile approach if the output of your driver
>         might change in the future (would require regenerating the
>         reference test files).
>
>         I'd suggest your test suite also has a test that runs the
>         "test_ogrsf" command line utility which is a kind of
>         compliance test suite which checks a number of expectations
>         for a driver, like that GetFeatureCount() returns the same
>         number as iterating with GetNextFeature(), etc etc
>
>         It is difficult to point at a "reference" test suite, as all
>         drivers have their particularities and may need specific
>         tests. Potential sources of inspirations:
>
>         - autotest/ogr/ogr_gtfs.py? . Shows very simple testing of the
>         read side of a driver, and includes a test_ogrsf test
>
>         - autotest/ogr/ogr_csv.py? has examples where the writing side
>         of the driver is checked by opening the output file and
>         checking that some strings are present in it (only easily
>         doable with text based formats)
>
>         - autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of
>         the writing side of a driver . A lot in it will be specific to
>         the format and irrelevant to your concern, but you should at
>         least find all possible aspects of how to test the write side
>         of a driver.
>
>         Even
>
>         -- 
>
>         http://www.spatialys.com
>
>         My software is free, but my time generally not.
>
>         _______________________________________________
>
>         gdal-dev mailing list
>
>         gdal-dev at lists.osgeo.org
>
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>     -- 
>
>     http://www.spatialys.com
>
>     My software is free, but my time generally not.
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/8ad0c92c/attachment-0001.htm>

From Michael.Smith at erdc.dren.mil  Mon Mar 11 11:30:17 2024
From: Michael.Smith at erdc.dren.mil (Smith, Michael ERDC-RDE-CRREL-NH CIV)
Date: Mon, 11 Mar 2024 18:30:17 +0000
Subject: [gdal-dev] Open a string (json) as STACIT in python
Message-ID: <9E3E23F5-2F8F-4306-87EC-003EFC47E680@erdc.dren.mil>

I?m building a stac item collection programmatically and I want to open that item collection in gdal using the python bindings. It all works if I save to a file or from a url (and I prefix with ?STACIT:?) but I cannot seem to be able to open a variable containing json as STACIT. I have tried with

myds = gdal.OpenEx(stac_string, allowed_drivers=["STACIT"])
or
myds = gdal.OpenEx("STACIT: "+stac_string)

I can open the json as myds = gdal.OpenEx(stac_string) but then its treated as geojson and I cannot figure out how to convert/treat it as STACIT.

Mike


-- 
Michael Smith 
US Army Corps of Engineers 
Remote Sensing/GIS Center 






From even.rouault at spatialys.com  Mon Mar 11 11:34:17 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Mar 2024 19:34:17 +0100
Subject: [gdal-dev] Open a string (json) as STACIT in python
In-Reply-To: <9E3E23F5-2F8F-4306-87EC-003EFC47E680@erdc.dren.mil>
References: <9E3E23F5-2F8F-4306-87EC-003EFC47E680@erdc.dren.mil>
Message-ID: <d9604c86-ee05-48d5-9d7d-81850bf7eb9c@spatialys.com>

Mike,

Yes, the STACIT driver requires either a filename or STACIT:filename, 
and doesn't support passing the content of the file in the connection string

An easy workaround is to do:

gdal.FileFromMemBuffer("/vsimem/temp_stacit.json", stac_string)
myds=gdal.OpenEx("/vsimem/temp_stacit.json")
gdal.Unlink("/vsimem/temp_stacit.json")

Even

Le 11/03/2024 ? 19:30, Smith, Michael ERDC-RDE-CRREL-NH CIV via gdal-dev 
a ?crit?:
> I?m building a stac item collection programmatically and I want to open that item collection in gdal using the python bindings. It all works if I save to a file or from a url (and I prefix with ?STACIT:?) but I cannot seem to be able to open a variable containing json as STACIT. I have tried with
>
> myds = gdal.OpenEx(stac_string, allowed_drivers=["STACIT"])
> or
> myds = gdal.OpenEx("STACIT: "+stac_string)
>
> I can open the json as myds = gdal.OpenEx(stac_string) but then its treated as geojson and I cannot figure out how to convert/treat it as STACIT.
>
> Mike
>
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From michael.smith.erdc at gmail.com  Mon Mar 11 11:38:54 2024
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Mon, 11 Mar 2024 14:38:54 -0400
Subject: [gdal-dev] Open a string (json) as STACIT in python
In-Reply-To: <d9604c86-ee05-48d5-9d7d-81850bf7eb9c@spatialys.com>
References: <9E3E23F5-2F8F-4306-87EC-003EFC47E680@erdc.dren.mil>
 <d9604c86-ee05-48d5-9d7d-81850bf7eb9c@spatialys.com>
Message-ID: <C2E2060C-886F-4B5E-84D0-3E79CE508C81@gmail.com>

Works perfectly just had to do

myds=gdal.OpenEx("STACIT:/vsimem/temp_stacit.json")

Mike

?On 3/11/24, 2:34 PM, "gdal-dev on behalf of Even Rouault via gdal-dev" <gdal-dev-bounces at lists.osgeo.org <mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>> wrote:


Mike,


Yes, the STACIT driver requires either a filename or STACIT:filename, 
and doesn't support passing the content of the file in the connection string


An easy workaround is to do:


gdal.FileFromMemBuffer("/vsimem/temp_stacit.json", stac_string)
myds=gdal.OpenEx("/vsimem/temp_stacit.json")
gdal.Unlink("/vsimem/temp_stacit.json")


Even


Le 11/03/2024 ? 19:30, Smith, Michael ERDC-RDE-CRREL-NH CIV via gdal-dev 
a ?crit :
> I?m building a stac item collection programmatically and I want to open that item collection in gdal using the python bindings. It all works if I save to a file or from a url (and I prefix with ?STACIT:?) but I cannot seem to be able to open a variable containing json as STACIT. I have tried with
>
> myds = gdal.OpenEx(stac_string, allowed_drivers=["STACIT"])
> or
> myds = gdal.OpenEx("STACIT: "+stac_string)
>
> I can open the json as myds = gdal.OpenEx(stac_string) but then its treated as geojson and I cannot figure out how to convert/treat it as STACIT.
>
> Mike
>
>
-- 
http://www.spatialys.com <http://www.spatialys.com>
My software is free, but my time generally not.


_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev <https://lists.osgeo.org/mailman/listinfo/gdal-dev>





From fengting.chen at oracle.com  Mon Mar 11 13:49:51 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Mon, 11 Mar 2024 20:49:51 +0000
Subject: [gdal-dev] GDAL 3.8.4 build on windows failed at linking
In-Reply-To: <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
Message-ID: <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>

GDAL 3.8.4 build on Windows from VS2015 x64 command prompt: ?cmake ?build .? throws the following error (there are more similar errors):

cpl_vsil_az.obj : error LNK2001: unresolved external symbol __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]

cmake options has:

set (GDAL_USE_CURL                ON   CACHE  BOOL "" FORCE)
set (CURL_INCLUDE_DIR             "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE PATH "" FORCE)
set (CURL_LIBRARY_RELEASE         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE FILEPATH "" FORCE)

libcurl-x64.lib is the DLL stub. Using dumpbin on libcurl-x64.lib shows that ?__imp_curl_slist_append? is available. But the linker error is ?__imp__curl_slist_append? not found. There is an extra ?_? in it.

Any idea why this error occurred?

Thanks!


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/42fa6367/attachment.htm>

From even.rouault at spatialys.com  Mon Mar 11 15:23:40 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Mar 2024 23:23:40 +0100
Subject: [gdal-dev] Using a "standard" argument parser for command line
 utilities?
In-Reply-To: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
References: <92dbc587-0882-4307-88d7-f02a7cb1e364@spatialys.com>
Message-ID: <512e859f-2ae6-451b-8712-371c7fabab18@spatialys.com>

Hi,

I've had some success prototyping the below idea on a few utilities. See 
https://github.com/OSGeo/gdal/pull/9445 for details

Even

Le 08/03/2024 ? 16:40, Even Rouault via gdal-dev a ?crit?:
>
> Hi,
>
> Our command line C++ utilities use ad-hoc manual parsing, which means 
> that:
>
> -? the usage message must be manually composed,
>
> -? you must take care to check that there are enough remaining 
> arguments for the ones that take value to avoid out-of-bounds accesses 
> (tests like argc + 1 < argn)
>
> - detection for duplicated arguments when only a single occurrence is 
> allowed must be manually done, nd thus is often not done, confusing 
> users, cf https://github.com/OSGeo/gdal/issues/9415
>
> - etc.
>
> I've come across https://github.com/p-ranav/argparse which fit all my 
> requirements at first sight: compatible with our C++ requirements 
> (C++17), MIT license, easily usable (single header), well documented, 
> and enough feature-full. From a quick testing, it seems to work well. 
> It looks also as it has taken some inspiration from the Python 
> argparse module.
>
> I'd be tempted to give that a try to retrofit our existing utilities 
> (probably starting with the ones with the less options :-)). Opinions? 
> I guess there must be a plethora of similar projects, due to the 
> absence of a std::argparse module... At least I see it is in the list 
> of (9) alternatives mentioned at 
> https://en.cppreference.com/w/cpp/links/libs?source=post_page---------------------------#Configuration:Command_Line
>
> CLI11 looked like a candidate too, but reading 
> https://github.com/CLIUtils/CLI11?tab=readme-ov-file#features-not-supported-by-this-library 
> "There are some other possible "features" that are intentionally not 
> supported by this library:... Non-standard variations on syntax, like 
> |-long| options. This is non-standard and should be avoided, so that 
> is enforced by this library." . Fair enough, but we use that 
> extensively in GDAL.
>
> Even
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240311/bbbe06e7/attachment.htm>

From pradeep.cabs at gov.in  Mon Mar 11 23:59:42 2024
From: pradeep.cabs at gov.in (Pradeep Mahato)
Date: Tue, 12 Mar 2024 12:29:42 +0530 (IST)
Subject: [gdal-dev] Utilizing GDAL for adding overviews layer in python
 language
Message-ID: <674813547.543004.1710226782841@gov.in>

Dear Team, 
We are working on a project with Geo-spatial images using python language for our development purpose. To visualize the images properly pyramid layer is necessary. GDAL buildoverview functionality of python, we are using to generate the overview but it is utilizing only the CPU. We are able to generate the pyramid layer using other python library utilizing the GPU but not able to add this pyramid layer into the geospatial images of ".tiff" file format as overview layer. 

Please help us in this regards if any GDAL function is there to add the pyramid as overview layer. 

Thanks and Regards, 
Pradeep Kumar Mahato 
Phone: 080-2504 9199/ +91 8762020114 



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/087150bf/attachment.htm>

From idan at miara.com  Tue Mar 12 00:11:25 2024
From: idan at miara.com (Idan Miara)
Date: Tue, 12 Mar 2024 09:11:25 +0200
Subject: [gdal-dev] Utilizing GDAL for adding overviews layer in python
 language
In-Reply-To: <674813547.543004.1710226782841@gov.in>
References: <674813547.543004.1710226782841@gov.in>
Message-ID: <CADmqiFVR0eOb0mqJvdfWsNnxR0=n8nfWourOCffpL1MWJWNchA@mail.gmail.com>

Hi,

So you are saying that you used gdal buildoverview in Python to add
overviews to the tiff file but it only uses CPU and not GPU.
And you could use the other library to add overviews using GPU - can you
share which library you used or what's the output format that you got?
Maybe you can combine the output of the other library into the tiff file
using gdal in Python.

Kind regards,
Idan


On Tue, 12 Mar 2024, 09:02 Pradeep Mahato via gdal-dev, <
gdal-dev at lists.osgeo.org> wrote:

> Dear Team,
>     We are working on a project with Geo-spatial images using python
> language for our development purpose. To visualize the images properly
> pyramid layer is necessary. GDAL buildoverview functionality of python, we
> are using to generate the overview but it is utilizing only the CPU. We are
> able to generate the pyramid layer using other python library utilizing the
> GPU but not able to add this pyramid layer into the geospatial images of
> *".tiff"* file format as overview layer.
>
> Please help us in this regards if any GDAL function is there to add the
> pyramid as overview layer.
>
> Thanks and Regards,
> Pradeep Kumar Mahato
> Phone: 080-2504 9199/ +91 8762020114
>
>
>
> <https://amritmahotsav.nic.in/>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/33944ac7/attachment-0001.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Mar 12 00:24:37 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Tue, 12 Mar 2024 07:24:37 +0000
Subject: [gdal-dev] Utilizing GDAL for adding overviews layer in python
 language
In-Reply-To: <674813547.543004.1710226782841@gov.in>
References: <674813547.543004.1710226782841@gov.in>
Message-ID: <DB9PR09MB6887A166A4344D8BD0606F3FFD2B2@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

External overviews that gdaladdo creates when the -ro option is used are TIFF files with a file name extension .ovr. If you can create similar TIFFs with the other library and name them as .ovr then GDAL should use them automatically.

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Pradeep Mahato via gdal-dev
L?hetetty: tiistai 12. maaliskuuta 2024 9.00
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: [gdal-dev] Utilizing GDAL for adding overviews layer in python language

Dear Team,
    We are working on a project with Geo-spatial images using python language for our development purpose. To visualize the images properly pyramid layer is necessary. GDAL buildoverview functionality of python, we are using to generate the overview but it is utilizing only the CPU. We are able to generate the pyramid layer using other python library utilizing the GPU but not able to add this pyramid layer into the geospatial images of ".tiff" file format as overview layer.

Please help us in this regards if any GDAL function is there to add the pyramid as overview layer.

Thanks and Regards,
Pradeep Kumar Mahato
Phone: 080-2504 9199/ +91 8762020114



[https://email.gov.in/videos/images/75.jpg]<https://amritmahotsav.nic.in/>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/80b4a3b6/attachment.htm>

From a.pau at creaf.uab.cat  Tue Mar 12 01:31:22 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Tue, 12 Mar 2024 08:31:22 +0000
Subject: [gdal-dev] Testing the driver
In-Reply-To: <67c79df9-1fb1-47c7-abb4-3d82b5a13816@spatialys.com>
References: <AS8PR07MB7766B7BD8750D12E3D01EC53A24B2@AS8PR07MB7766.eurprd07.prod.outlook.com>
 <3049631d-5857-4338-bd4f-e37abe88da50@spatialys.com>
 <PAXPR07MB77753E340419D0E6C7E02A37A2222@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <6628ab1c-317d-43aa-8831-e261d57bbc27@spatialys.com>
 <PAXPR07MB77751B48D982D46908A1B4CCA2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <33f75b01-844d-495b-baff-f2d568637c3d@spatialys.com>
 <PAXPR07MB7775F7BED4B21087D898D6E0A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775EBF91F99E222DDEF9359A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77755303FCDB5E4BD9995983A2242@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <67c79df9-1fb1-47c7-abb4-3d82b5a13816@spatialys.com>
Message-ID: <PAXPR07MB7775223EB7CE06CC9C36A3F1A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Even,
you are right!
[cid:image002.png at 01DA745F.C8585C00]

So, the driver only creates a folder if it?s the last one of a path (with no extension) because this is the place where to write a set of files (a layer).
So, thanks again!

At this time, if I?m not wrong only there is one red light
Merge remote-tracking branch 'upstream/master' into MiraMon-Vector-dr? ? AbelPau/gdal at 3f03aad (github.com)<https://github.com/AbelPau/gdal/actions/runs/8244678121>

I a macOs... I?ll try to figure it out :)



De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dilluns, 11 de mar? de 2024 17:56
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Testing the driver


ok, I've looked a bit at the code

So I believe the issue is that

- https://github.com/OSGeo/gdal/blob/master/apps/test_ogrsf.cpp#L1064 forms a "/foo/test.pol" filename for the miramon driver and call Create() with it

- and then https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L207 "osPath = CPLGetPath(pszRootName);" sets "/foo/" as osPath, which is then passed to VSIMkdir(), and causing the following mess

I suspect the VSIMkdir() call should only be done in the branch https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L211 where pszRootName has an empty extension.

Even
Le 11/03/2024 ? 17:30, Abel Pau a ?crit :
Hi,

going back to the misterious failing test_tiff_write_133 I am not able to understand what is wrong with that.
It seems that it would be failing when writing to an unauthorized path. But instead of that it is not failing (and this is the failure, not failing when it should fail).

# Test writing into a non authorized file
ds = gdaltest.tiff_drv.Create(
    "/foo/bar", 1024, 1000, 3, options=["STREAMABLE_OUTPUT=YES", "BLOCKYSIZE=1"]
)
assert ds is None

So, there is anything I am missing about that?
The actions that informs that is re-runed in debug mode:
Merge from base ? AbelPau/gdal at 3ec4655 (github.com)<https://github.com/AbelPau/gdal/actions/runs/8234751437/job/22520988179>

FAILED gcore/tiff_write.py::test_tiff_write_133 - AssertionError: assert <osgeo.gdal.Dataset; proxy of <Swig Object of type 'GDALDatasetShadow *' at 0x0000022226FEDE30> > is None

It?s not None X-(

Perhaps I, as Even said, I created a path before? But how to delete that? I don?t use anymore: VSIMkdirRecursive(). I use VSIMkdir()
Perhaps if the destination folder doesn?t exist I should NOT create it and return a FAILURE?



De: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>
Enviado el: dimecres, 6 de mar? de 2024 16:24
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: RE: [gdal-dev] Testing the driver

Hi,
It seems nothing changes. I understand that the environment is new and the execution is not related with the last one.
Here there are 5 tests that fail..

Any idea of what can be happening?
They are very unrelated
Bye VSIMkdirRecursive() ? AbelPau/gdal at 646b98b (github.com)<https://github.com/AbelPau/gdal/actions/runs/8172351502/job/22342474513>


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de Abel Pau via gdal-dev
Enviado el: dimecres, 6 de mar? de 2024 13:52
Para: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver

Ok, I ?ve changed that. Let?s see if it?s the problem.
It?s all so delicate :)
Thanks again!

De: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Enviado el: dimecres, 6 de mar? de 2024 13:36
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver



Le 06/03/2024 ? 13:14, Abel Pau a ?crit :
Hi Even,
I finally discovered the error. It was the fixture. In the wrong place.
Now I?m creating the test.
I hope finish it soon.

On the other hand,
in my actions tab: Merge branch 'OSGeo:master' into master ? AbelPau/gdal at 0249b6d (github.com)<https://github.com/AbelPau/gdal/actions/runs/8169099745/job/22332488002>

There are some tiff failures, but nothing on my hand about tiff.
================================== FAILURES ===================================
36: _____________________________ test_tiff_write_133 _____________________________
36:
36: def test_tiff_write_133():

Do you know what it can be?

There are sometimes random failures, but here it fails on both the build-windows-msys2-mingw and build-windows-conda configs . I would suspect this might be a side effect of a previous run of the Miramon driver by another test with an invalid filename such as /foo/bar. Actually I see that test_ogrsf tries to create a /foo/test file.

And https://github.com/AbelPau/gdal/blob/master/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp#L219 does a VSIMkdirRecursive(), so it must create a "/foo" directory. I would recommend against using VSIMkdirRecursive() in a driver. You might use VSIMkdir() to create the latest level of directory, but creating the whole hiearchy is granting too much power to a driver.

Even

De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: dimecres, 6 de mar? de 2024 13:09
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Hi,

I don't see anything wrong. I've tried that on my native Linux build and the test_ogr_miramon_vector_1() is found. Does "pytest autotest/ogr/ogr_basic_test.py" work?*

Note: you don't need the try / except in your test case unless you'd need to some particular cleanup, but that's not the case here. pytest handles test failures nicely

Even
Le 05/03/2024 ? 22:28, Abel Pau via gdal-dev a ?crit :
Hi again,
after solving some issues I used WSL (Windows subsystem Linux) to create an environment where I am able to run tests.

I run the cmake inside build folder in the environment. It?s slow but finally it finish. After cmake --build . --target install all is ready to be tested.

I create a simple test ogr_miramon_vector.py (see the code below) to prove that it?s reliable.

I run:
pytest autotest/ogr/ogr_miramon_vector.py
and:

apau at ABEL2:/mnt/d/GitHub-repository/gdal/build$ pytest autotest/ogr/ogr_miramon_vector.py
Test session starts (platform: linux, Python 3.8.10, pytest 8.0.2, pytest-sugar 1.0.0)
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.68.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.8.0-CAPI-1.13.1
  PROJ_BUILD_VERSION: 6.3.1
  PROJ_RUNTIME_VERSION: 6.3.1
  COMPILER: GCC 9.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /mnt/d/GitHub-repository/gdal/build/autotest
configfile: pytest.ini
plugins: benchmark-4.0.0, sugar-1.0.0, env-1.1.3
collected 0 items

My questions is why it seems it?s not working?
Thanks!

The test:
-------------
import os

import gdaltest
import ogrtest
import pytest

from osgeo import gdal, ogr, osr

pytestmark = pytest.mark.require_driver("MiraMonVector")

###############################################################################
@pytest.fixture(scope="module", autouse=True)
def init():
    with gdaltest.config_option("CPL_DEBUG", "ON"):
        yield


###############################################################################
# basic test

def test_ogr_miramon_vector_1():
    try:
        ds = gdal.OpenEx("data/miramon/Points/SimplePoints/SimplePointsFile.pnt")
        lyr = ds.GetLayer(0)

        assert lyr is not None, "Failed to get layer"

        assert lyr.GetFeatureCount() == 3
        assert lyr.GetGeomType() == ogr.wkbPoint

        f = lyr.GetNextFeature()
        assert f.GetFID() == 0
        assert f.GetGeometryRef().ExportToWkt() == "POINT (513.49 848.81)"
        assert f.GetField("ID_GRAFIC") == "0"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "1"

        f = lyr.GetNextFeature()
        assert f.GetField("ID_GRAFIC") == "2"

        ds = None
    except Exception as e:
        pytest.fail(f"Test failed with exception: {e}")




De: Even Rouault <even.rouault at spatialys.com><mailto:%3ceven.rouault at spatialys.com%3e>
Enviado el: divendres, 9 de febrer de 2024 11:48
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Testing the driver


Abel,
Le 09/02/2024 ? 10:55, Abel Pau via gdal-dev a ?crit :
Hi,
I am at the lasts steps before pulling a request about the MiraMon driver.
I need to write some documentation and formalize the tests.
After that, I?ll do the pull request to github.
I'd suggest first before issuing the pull request that you push to your fork on github and look at the Actions tab. That will allow you to fix a lot of things on your side, before issuing the PR itself

I am a little confused about the testing. I can use pytest or ctest, right? Which is the favourite? Are there any changes from the official documentation?

ctest is just the CMake way of launching the test suite. It will execute C++ tests of autotest/cpp directly, and for tests written in python will launch "pytest autotest/XXXXX" for each directory.

"ctest --test-dir $build_dir -R autotest_ogr -V"  will just run all the autotest/ogr tests, which can be quite long already.

To test your own development, you may have a more pleasant experience by directly running just the tests for your driver with something like "pytest autotest/ogr/ogr_miramon.py"  (be careful on Windows, the content of $build_dir/autotest is copied from $source_dir/autotest each time "cmake" is run, so if you edit your test .py file directly in the build directory, be super careful of not accidentally losing your work, and make sure to copy its content to the source directory first. That's admittedly an annoying point of the current test setup on Windows, compared to Unix where we use symbolic links)

after setting the environment to have PYTHONPATH point to something like $build_dir/swig/python/Release or $build_dir/swig/python/Debug (I believe you're on Windows?).  If you look at the first lines output by the above "ctest --test-dir $build_dir -R autotest_ogr -V" invokation, you'll actually see the PYTHONPATH value to specify.

You also need to first install pytest and other testing dependencies with: python -m pip install autotest/requirements.txt
There is a minimal test to create?
A maximal test suite, you mean ;-) You should aim for a "reasonable" coverage of the code you wrote. Aiming to test the nominal code paths of your driver is desirable (testing the error cases generally requires a lot more effort).
Can you recommend me some driver that tests things like:

1.       Read a point/arc/polygon layer from some format (gml,kml, gpckg,..) and assert the number of readed objectes

2.       Read a point layer and assert some points (3d included) and some of the fields values

3.       The same with arcs and polygons

4.       Create some layer from the own format to anothers and compare the results with some ?good? results.

5.       Create multiple layers from one outer format (like gpx) and verify the name of the created files...

You don't necessarily need to use other formats. It is actually better if the tests of a format don't depend too much on other formats, to keep things isolated.

To test the read part of your driver, add a autotest/ogr/data/miramon directory with *small* test files, ideally at most a few KB each to keep the size of the GDAL repository reasonable, and a few features in each is often enough to unit test, with different type of geometries, attributes, and use the OGR Python API to open the file and iterate over its layers and features to check their content. Those files should have ideally be produced by the Miramon software and not by the writing side of your driver, to check the interoperability of your driver with a "reference" software.

For the write site of the driver, you can for example run gdal.VectorTranslate(dest, source) on those files, and use again the test function to validate that the read side of your driver likes what the write site has produced. An alternative is also to do a binary comparison of the file generated by your driver with a reference test file stored in for example autotest/ogr/data/miramon/ref_output. But this may be sometimes a fragile approach if the output of your driver might change in the future (would require regenerating the reference test files).

I'd suggest your test suite also has a test that runs the "test_ogrsf" command line utility which is a kind of compliance test suite which checks a number of expectations for a driver, like that GetFeatureCount() returns the same number as iterating with GetNextFeature(), etc etc

It is difficult to point at a "reference" test suite, as all drivers have their particularities and may need specific tests. Potential sources of inspirations:

- autotest/ogr/ogr_gtfs.py  . Shows very simple testing of the read side of a driver, and includes a test_ogrsf test

- autotest/ogr/ogr_csv.py  has examples where the writing side of the driver is checked by opening the output file and checking that some strings are present in it (only easily doable with text based formats)

- autotest/ogr/ogr_openfilegdb_write.py . Extensive testing of the writing side of a driver . A lot in it will be specific to the format and irrelevant to your concern, but you should at least find all possible aspects of how to test the write side of a driver.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.


_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/1b34c1e0/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 7253 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/1b34c1e0/attachment-0001.png>

From idan at miara.com  Tue Mar 12 01:44:44 2024
From: idan at miara.com (Idan Miara)
Date: Tue, 12 Mar 2024 10:44:44 +0200
Subject: [gdal-dev] Utilizing GDAL for adding overviews layer in python
 language
In-Reply-To: <767096737.592038.1710232117136@gov.in>
References: <674813547.543004.1710226782841@gov.in>
 <CADmqiFVR0eOb0mqJvdfWsNnxR0=n8nfWourOCffpL1MWJWNchA@mail.gmail.com>
 <767096737.592038.1710232117136@gov.in>
Message-ID: <CADmqiFVDXiPG9KSXjvLKUhrgev+pTOz0YszzKRMAr6Bpev-75w@mail.gmail.com>

Hi,

You could use gdal to write a single tiff file from each numpy array layer
and name it accordingly:
base.tif - your input tiff file
base.tif.ovr - first overview
base.tif.ovr.ovr - second overview
base.tif.ovr.ovr.ovr - third overview
etc.

gdal would know to read these overviews automatically, but if you want you
can also transform base.tif (along with its new overviews) into a single
tif file with internal overviews (a COG could be a good choice).

There might be a way to write them all together into a single tiff in one
go without using intermediate single overview per layer files, but I'm not
sure how.


On Tue, 12 Mar 2024 at 10:28, Pradeep Mahato <pradeep.cabs at gov.in> wrote:

> Hi Idan,
>      We are using CuPy and CuCim to generate the pyramid layers, these
> layers are in numpy array format (LxWxHxC). Here L is number of pyramid
> layer and HxWxC is image in numpy array. Problem we are facing is that how
> to combine/stack these pyramid layers in one tiff file using GDAL.
>
> Thanks and Regards,
> Pradeep Kumar Mahato
> Phone: 080-2504 9199/ +91 8762020114
>
> ------------------------------
> *From: *idan at miara.com
> *To: *"Pradeep Mahato" <pradeep.cabs at gov.in>
> *Cc: *gdal-dev at lists.osgeo.org
> *Sent: *Tuesday, March 12, 2024 12:41:25 PM
> *Subject: *Re: [gdal-dev] Utilizing GDAL for adding overviews layer in
> python language
>
> Hi,
>
> So you are saying that you used gdal buildoverview in Python to add
> overviews to the tiff file but it only uses CPU and not GPU.
> And you could use the other library to add overviews using GPU - can you
> share which library you used or what's the output format that you got?
> Maybe you can combine the output of the other library into the tiff file
> using gdal in Python.
>
> Kind regards,
> Idan
>
>
> On Tue, 12 Mar 2024, 09:02 Pradeep Mahato via gdal-dev, <
> gdal-dev at lists.osgeo.org> wrote:
>
>> Dear Team,
>>     We are working on a project with Geo-spatial images using python
>> language for our development purpose. To visualize the images properly
>> pyramid layer is necessary. GDAL buildoverview functionality of python, we
>> are using to generate the overview but it is utilizing only the CPU. We are
>> able to generate the pyramid layer using other python library utilizing the
>> GPU but not able to add this pyramid layer into the geospatial images of
>> *".tiff"* file format as overview layer.
>>
>> Please help us in this regards if any GDAL function is there to add the
>> pyramid as overview layer.
>>
>> Thanks and Regards,
>> Pradeep Kumar Mahato
>> Phone: 080-2504 9199/ +91 8762020114
>>
>>
>>
>> <https://amritmahotsav.nic.in/>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/63520377/attachment.htm>

From tomohiro.kanza.306 at baycurrent.co.jp  Tue Mar 12 01:55:32 2024
From: tomohiro.kanza.306 at baycurrent.co.jp (=?utf-8?B?5a+b5bqn44CA5pm65aSn?=)
Date: Tue, 12 Mar 2024 08:55:32 +0000
Subject: [gdal-dev] Segmentation fault (core dumped) occurs when running
 ogr2ogr command on container
In-Reply-To: <PAXPR07MB77759F4E4C709092C89097B3A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <TY3PR01MB982485CF11B3755C8E900329B0232@TY3PR01MB9824.jpnprd01.prod.outlook.com>
 <PAXPR07MB77751629333EEC3038F16CA4A2232@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <TY3PR01MB982431201BA90A8451AC5C1AB0212@TY3PR01MB9824.jpnprd01.prod.outlook.com>
 <PAXPR07MB77759F4E4C709092C89097B3A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <TY3PR01MB9824724DD8EBBEE7F976A43EB02B2@TY3PR01MB9824.jpnprd01.prod.outlook.com>

Hi,

I tried executing with --config CPL_DEBUG ON, but it did not provide any useful information.

I'm sending you the command that's causing the issue.
We're using curl command to obtain the Shape file from the internet.

---

  1.  Obtaining the Shape file:
$curl -f --output-dir ./ -O https://data.bodik.jp/dataset/d4b9a284-58c0-4559-9e48-b7c83a4275f0/resource/28aa8f13-7cf0-4dc5-9dbf-a77f58c3f2c8/download/shape.zip


  1.  Unzipping the ZIP file:
$unzip -o -j -d ./ ./shape.zip

? Converting from Shape format to GeoJSON format:
$ogr2ogr -f GeoJSON -oo ENCODING=MS932 ./d1_raw.geojson ./d1.shp --config CPL_DEBUG ON
---
These commands are executed within the convert.sh called from the Dockerfile.

Best regards,

From: Abel Pau <a.pau at creaf.uab.cat>
Sent: Wednesday, March 6, 2024 5:53 PM
To: ????? <tomohiro.kanza.306 at baycurrent.co.jp>; gdal-dev at lists.osgeo.org
Subject: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Hi,

I reduced the amount of memory requested. I could do that because I am developing the driver that failed.
After my mail I discovered another error, so, perhaps, this was the real cause.

4Mb it?s so small, so I is not the cause...
Perhaps you can add --config  CPL_DEBUG ON at your command line to see if this give you more information about the place where it crashes.

I?m sorry not being able to help you more.
Perhaps you can send me the shape and the command line to see if it crashes in my computer and I can find out the problem.

See you

De: ????? <tomohiro.kanza.306 at baycurrent.co.jp<mailto:tomohiro.kanza.306 at baycurrent.co.jp>>
Enviado el: dimecres, 6 de mar? de 2024 7:20
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Abel Pau,

Hi. Thank you for your response.

>I reduced this capacity 10 times and it worked.
Does this mean you reduced the size of the Shape file?
Or does it mean that you reduced the amount of memory requested?
( If it's the latter, I'd like to learn how to do it.)

Shape files are typically around 4MB, so I don't consider them to be very large files.
Additionally, I tried it on an AKS with a free memory size of over 20GB, but encountered the same issue.
It seems unlikely that there is a lack of specifications in the execution environment.

Could the issue possibly be due to a bug in the command?

From: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>
Sent: Monday, March 4, 2024 4:57 PM
To: ????? <tomohiro.kanza.306 at baycurrent.co.jp<mailto:tomohiro.kanza.306 at baycurrent.co.jp>>
Subject: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Hi,
I did similar tests with a driver I am implementing and I obtained exact the same behavior as yours.
After a few speculations I deduced that my driver was asking for too much memory for the docker capacity.
I reduced this capacity 10 times and it worked.
So, perhaps, Shape or Geojson asks for too much memory for the docker capacity.
I don?t know if it?s possible to make it bigger.

Abel.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de ?? ?? via gdal-dev
Enviado el: dilluns, 4 de mar? de 2024 3:30
Para: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: [gdal-dev] Segmentation fault (core dumped) occurs when running ogr2ogr command on container


I am implementing batch processing to convert Shape files, publicly available as open data,

into Geojson format within a container environment.



I installed gdal-bin on top of ubuntu:22.04 base image.

The Dockerfile I implemented is as follows:

```

FROM ubuntu:22.04



ENV DEBIAN_FRONTEND=noninteractive

RUN apt update

RUN apt -y install apt-transport-https jq unzip openjdk-17-jdk-headless curl



# Install gdal-bin

# Reference: https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html#how-to-install-gdal-ogr-packages-on-ubuntu

RUN apt -y install software-properties-common

RUN add-apt-repository -y ppa:ubuntugis/ppa

RUN apt update

RUN apt -y install gdal-bin



COPY ./convert.sh /convert.sh



CMD ["bash","convert.sh"]

```



When executing the ogr2ogr command within convert.sh, the following error occurs:

```

Shape: DBF Codepage = SJIS for /d1.shp

Shape: Treating as encoding 'MS932'.

GDAL: GDALOpen(/d1.shp, this=0x55f1edd77f30) succeeds as ESRI Shapefile.

GDAL: QuietDelete(/d1_raw.geojson) invoking Delete()

GDAL: GDALDriver::Create(GeoJSON,/d1_raw.geojson,0,0,0,Unknown,(nil))

GDALVectorTranslate: 5315 features written in layer 'd1'

Shape: 5315 features read on layer 'd1'.

GDAL: GDALClose(/d1.shp, this=0x55f1edd77f30)

GDAL: GDALClose(/d1_raw.geojson, this=0x55f1edd75fd0)

GDAL: In GDALDestroy - unloading GDAL shared library.

Segmentation fault (core dumped)

```



I checked if convert.sh execution is possible on the VM (host OS running Docker).

The error seems to occur only when executed within the container.



How should I resolve this?



?Environment

Host OS: ubuntu 22.04

Docker Deamon: 25.0.3

gdal-bin: 3.6.4

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/35c5adf4/attachment-0001.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Mar 12 02:25:47 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Tue, 12 Mar 2024 09:25:47 +0000
Subject: [gdal-dev] Segmentation fault (core dumped) occurs when running
 ogr2ogr command on container
In-Reply-To: <TY3PR01MB9824724DD8EBBEE7F976A43EB02B2@TY3PR01MB9824.jpnprd01.prod.outlook.com>
References: <TY3PR01MB982485CF11B3755C8E900329B0232@TY3PR01MB9824.jpnprd01.prod.outlook.com>
 <PAXPR07MB77751629333EEC3038F16CA4A2232@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <TY3PR01MB982431201BA90A8451AC5C1AB0212@TY3PR01MB9824.jpnprd01.prod.outlook.com>
 <PAXPR07MB77759F4E4C709092C89097B3A2212@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <TY3PR01MB9824724DD8EBBEE7F976A43EB02B2@TY3PR01MB9824.jpnprd01.prod.outlook.com>
Message-ID: <DB9PR09MB6887F64C4E8ABB2D81F10AABFD2B2@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

I had a try with your dataset on Windows and I had no segmentation fault. Perhaps not surprise because I do not use the same container than you. I had some encoding problem but I believe that it is not related. But perhaps you have some use for knowing that the unzipping part is not necessary, shapefile can be read directly from the zip with /vsizip/.

ogr2ogr -f GeoJSON -oo ENCODING=MS932 d1_raw.geojson /vsizip/test.zip d1  --config CPL_DEBUG ON
GDAL: Auto register C:\OSGeo4W\apps\gdal\lib\gdalplugins\gdal_ECW_JP2ECW.dll using GDALRegister_ECW_JP2ECW.
GDAL: GDALOpen(/vsizip/test.zip, this=0000023F19871250) succeeds as ESRI Shapefile.
GDAL: GDALDriver::Create(GeoJSON,d1_raw.geojson,0,0,0,Unknown,0000000000000000)
Shape: DBF Codepage = SJIS for /vsizip/test.zip/d1.shp
Shape: Treating as encoding 'MS932'.
Shape: Cannot recode from 'MS932'. Disabling recoding
GDALVectorTranslate: 5315 features written in layer 'd1'
Shape: 5315 features read on layer 'd1'.
GDAL: GDALClose(/vsizip/test.zip, this=0000023F19871250)
GDAL: GDALClose(d1_raw.geojson, this=0000023F19876CF0)
GDAL: In GDALDestroy - unloading GDAL shared library.

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta ?? ?? via gdal-dev
L?hetetty: tiistai 12. maaliskuuta 2024 10.56
Vastaanottaja: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Aihe: Re: [gdal-dev] Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Hi,

I tried executing with --config CPL_DEBUG ON, but it did not provide any useful information.

I'm sending you the command that's causing the issue.
We're using curl command to obtain the Shape file from the internet.

---

  1.  Obtaining the Shape file:
$curl -f --output-dir ./ -O https://data.bodik.jp/dataset/d4b9a284-58c0-4559-9e48-b7c83a4275f0/resource/28aa8f13-7cf0-4dc5-9dbf-a77f58c3f2c8/download/shape.zip


  1.  Unzipping the ZIP file:
$unzip -o -j -d ./ ./shape.zip

? Converting from Shape format to GeoJSON format:
$ogr2ogr -f GeoJSON -oo ENCODING=MS932 ./d1_raw.geojson ./d1.shp --config CPL_DEBUG ON
---
These commands are executed within the convert.sh called from the Dockerfile.

Best regards,

From: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>
Sent: Wednesday, March 6, 2024 5:53 PM
To: ????? <tomohiro.kanza.306 at baycurrent.co.jp<mailto:tomohiro.kanza.306 at baycurrent.co.jp>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Subject: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Hi,

I reduced the amount of memory requested. I could do that because I am developing the driver that failed.
After my mail I discovered another error, so, perhaps, this was the real cause.

4Mb it?s so small, so I is not the cause...
Perhaps you can add --config  CPL_DEBUG ON at your command line to see if this give you more information about the place where it crashes.

I?m sorry not being able to help you more.
Perhaps you can send me the shape and the command line to see if it crashes in my computer and I can find out the problem.

See you

De: ????? <tomohiro.kanza.306 at baycurrent.co.jp<mailto:tomohiro.kanza.306 at baycurrent.co.jp>>
Enviado el: dimecres, 6 de mar? de 2024 7:20
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Abel Pau,

Hi. Thank you for your response.

>I reduced this capacity 10 times and it worked.
Does this mean you reduced the size of the Shape file?
Or does it mean that you reduced the amount of memory requested?
( If it's the latter, I'd like to learn how to do it.)

Shape files are typically around 4MB, so I don't consider them to be very large files.
Additionally, I tried it on an AKS with a free memory size of over 20GB, but encountered the same issue.
It seems unlikely that there is a lack of specifications in the execution environment.

Could the issue possibly be due to a bug in the command?

From: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>
Sent: Monday, March 4, 2024 4:57 PM
To: ????? <tomohiro.kanza.306 at baycurrent.co.jp<mailto:tomohiro.kanza.306 at baycurrent.co.jp>>
Subject: RE: Segmentation fault (core dumped) occurs when running ogr2ogr command on container

Hi,
I did similar tests with a driver I am implementing and I obtained exact the same behavior as yours.
After a few speculations I deduced that my driver was asking for too much memory for the docker capacity.
I reduced this capacity 10 times and it worked.
So, perhaps, Shape or Geojson asks for too much memory for the docker capacity.
I don?t know if it?s possible to make it bigger.

Abel.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de ?? ?? via gdal-dev
Enviado el: dilluns, 4 de mar? de 2024 3:30
Para: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: [gdal-dev] Segmentation fault (core dumped) occurs when running ogr2ogr command on container


I am implementing batch processing to convert Shape files, publicly available as open data,

into Geojson format within a container environment.



I installed gdal-bin on top of ubuntu:22.04 base image.

The Dockerfile I implemented is as follows:

```

FROM ubuntu:22.04



ENV DEBIAN_FRONTEND=noninteractive

RUN apt update

RUN apt -y install apt-transport-https jq unzip openjdk-17-jdk-headless curl



# Install gdal-bin

# Reference: https://mothergeo-py.readthedocs.io/en/latest/development/how-to/gdal-ubuntu-pkg.html#how-to-install-gdal-ogr-packages-on-ubuntu

RUN apt -y install software-properties-common

RUN add-apt-repository -y ppa:ubuntugis/ppa

RUN apt update

RUN apt -y install gdal-bin



COPY ./convert.sh /convert.sh



CMD ["bash","convert.sh"]

```



When executing the ogr2ogr command within convert.sh, the following error occurs:

```

Shape: DBF Codepage = SJIS for /d1.shp

Shape: Treating as encoding 'MS932'.

GDAL: GDALOpen(/d1.shp, this=0x55f1edd77f30) succeeds as ESRI Shapefile.

GDAL: QuietDelete(/d1_raw.geojson) invoking Delete()

GDAL: GDALDriver::Create(GeoJSON,/d1_raw.geojson,0,0,0,Unknown,(nil))

GDALVectorTranslate: 5315 features written in layer 'd1'

Shape: 5315 features read on layer 'd1'.

GDAL: GDALClose(/d1.shp, this=0x55f1edd77f30)

GDAL: GDALClose(/d1_raw.geojson, this=0x55f1edd75fd0)

GDAL: In GDALDestroy - unloading GDAL shared library.

Segmentation fault (core dumped)

```



I checked if convert.sh execution is possible on the VM (host OS running Docker).

The error seems to occur only when executed within the container.



How should I resolve this?



?Environment

Host OS: ubuntu 22.04

Docker Deamon: 25.0.3

gdal-bin: 3.6.4

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/6aa38fea/attachment-0001.htm>

From even.rouault at spatialys.com  Tue Mar 12 05:02:09 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Mar 2024 13:02:09 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
In-Reply-To: <bc2780b0-0f79-4191-9341-ba9e614785f7@chachatelier.fr>
References: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
 <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>
 <bc2780b0-0f79-4191-9341-ba9e614785f7@chachatelier.fr>
Message-ID: <7882ecd4-7010-4b9d-824c-2250b9cccbce@spatialys.com>

Pierre,

Le 12/03/2024 ? 12:51, Pierre Chatelier a ?crit?:
> Ok, I can confirm that
> -creating a dataset with <n> bands with the netCDF driver works
> -saving the dataset will write the expected "SUBDATASETS" domain with 
> "SUBDATASET_<i>_NAME=NETCDF:"<file>":"<band name>"
>
> But I can't figure out how to customize the <band name>, which is 
> Band1, Band2, Band3...
> I tried GDALRasterBand::SetDescription(), but without success

Looking at netcdfdataset.cpp line 9625, the netCDF variable name for a 
band is extracted from the NETCDF_VARNAME band metadata item of the 
source band.

>
> Also, is there a reason why AddBand() is not supported by the netCDF 
> driver ? I expected it to be able to add bands on demand as new 
> "netcdf variables".
>
I guess that could be implemented. There would be a subtlety however:

- if CreateCopy() has been invoked with NETCDF_DIM_EXTRA_xxx, 
NETCDF_DIM_xxx_DEF metadata items, to ask for bands to be modeled as a 
dimension (for example the time dimension of a 3D variable), that would 
require the band dimension to be created as UNLIMITED however at dataset 
creation.

- otherwise for 2D variables, yes, implementing AddBand() should be 
relatively straighforward ... hopefully ... (please don't sue me, if it 
is not. The netCDF driver has its peculiarities...)

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From pierre at chachatelier.fr  Tue Mar 12 04:51:47 2024
From: pierre at chachatelier.fr (Pierre Chatelier)
Date: Tue, 12 Mar 2024 12:51:47 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
In-Reply-To: <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>
References: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
 <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>
Message-ID: <bc2780b0-0f79-4191-9341-ba9e614785f7@chachatelier.fr>

Ok, I can confirm that
-creating a dataset with <n> bands with the netCDF driver works
-saving the dataset will write the expected "SUBDATASETS" domain with 
"SUBDATASET_<i>_NAME=NETCDF:"<file>":"<band name>"

But I can't figure out how to customize the <band name>, which is Band1, 
Band2, Band3...
I tried GDALRasterBand::SetDescription(), but without success

Also, is there a reason why AddBand() is not supported by the netCDF 
driver ? I expected it to be able to add bands on demand as new "netcdf 
variables".

Pierre

> Hi,
>
> If your input dataset has multiple bands, each band will be written as 
> a separate netCDF variable, and thus read as multiple subdatasets. The 
> constraint is that as your input is a single raster, all bands must 
> share the same georeferencing.
>
> If you want to write multiple independent variables, then you'll have 
> to use the GDAL multidimensional API. Cf 
> https://github.com/OSGeo/gdal/blob/master/autotest/gdrivers/netcdf_multidim.py 
> . h5py is also quite convenient
>
> Even
>
> Le 07/03/2024 ? 09:47, Pierre Chatelier via gdal-dev a ?crit?:
>> Hello,
>>
>> I just had my first encounter with a NetCDF file. GDAL opens that 
>> flawlessly, I can identify the subdatasets and open/read them thanks 
>> to the SUBDATASET_n_NAME, as advertised in 
>> https://gdal.org/drivers/raster/netcdf.html
>>
>> However, I am confused by the ability to create such a file with GDAL.
>> Let's say I have a bunch of images that I want to pack as NetCDF 
>> through GDAL.
>> Should I use bands or groups to let GDAL create the sub datasets ? 
>> Will GDAL create the metadata SUBDATASETS domain for me ?
>>
>> The NetCDF file I am supposed to create should use HDF for sub 
>> datasets. No problem for reading (I have compiled GDAL with the HDF 
>> support and it works, I can open my sample file), but how do I tell 
>> GDAL to *write* that ? Should I create real datasets with the GDAL 
>> HDF driver and then gather them into a single one with GDAL NetCDF 
>> driver ?
>>
>> Can you give some hints about what I am supposed to do ?
>>
>> Pierre
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


From pierre at chachatelier.fr  Tue Mar 12 05:33:24 2024
From: pierre at chachatelier.fr (Pierre Chatelier)
Date: Tue, 12 Mar 2024 13:33:24 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
In-Reply-To: <7882ecd4-7010-4b9d-824c-2250b9cccbce@spatialys.com>
References: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
 <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>
 <bc2780b0-0f79-4191-9341-ba9e614785f7@chachatelier.fr>
 <7882ecd4-7010-4b9d-824c-2250b9cccbce@spatialys.com>
Message-ID: <8223ad5c-042b-4735-9ff5-eeae6d676dd8@chachatelier.fr>

>
>> But I can't figure out how to customize the <band name>, which is 
>> Band1, Band2, Band3...
>> I tried GDALRasterBand::SetDescription(), but without success
>
> Looking at netcdfdataset.cpp line 9625, the netCDF variable name for a 
> band is extracted from the NETCDF_VARNAME band metadata item of the 
> source band.


Sounds good, doesn't work.
Actually, band->SetMetadataItem("NETCDF_VARNAME","somename...") does not 
raise any error and I tracked with a debugger that it goes down to? 
GDALMultiDomainMetadata::SetMetadataItem() and really calls 
CPLStringList::AddNameValue(),

but when reading the saved dataset file created by the netCDF driver, 
SUBDATASET_<i>_NAME are still "netcdf:<file>:Band1, Band2..."

I am still investigating to see if it might be related to the wrong 
domain, but so far I can't tell.

Pierre

From even.rouault at spatialys.com  Tue Mar 12 05:48:21 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Mar 2024 13:48:21 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
In-Reply-To: <8223ad5c-042b-4735-9ff5-eeae6d676dd8@chachatelier.fr>
References: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
 <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>
 <bc2780b0-0f79-4191-9341-ba9e614785f7@chachatelier.fr>
 <7882ecd4-7010-4b9d-824c-2250b9cccbce@spatialys.com>
 <8223ad5c-042b-4735-9ff5-eeae6d676dd8@chachatelier.fr>
Message-ID: <ed47974b-0a65-4ee1-af3a-7bec56e367da@spatialys.com>


Le 12/03/2024 ? 13:33, Pierre Chatelier a ?crit?:
>>
>>> But I can't figure out how to customize the <band name>, which is 
>>> Band1, Band2, Band3...
>>> I tried GDALRasterBand::SetDescription(), but without success
>>
>> Looking at netcdfdataset.cpp line 9625, the netCDF variable name for 
>> a band is extracted from the NETCDF_VARNAME band metadata item of the 
>> source band.
>
>
> Sounds good, doesn't work.

It must be set on the *source* band, before creating CreateCopy(). I've 
just tested it successfully with:

$ gdal_translate byte.tif input.vrt
$ python -c "from osgeo import gdal; ds = gdal.Open('input.vrt', 
gdal.GA_Update); ds.GetRasterBand(1).SetMetadataItem('NETCDF_VARNAME', 
'my_varname'); ds.SetMetadataItem('my_varname#long_name', 'my long name')"
$ gdal_translate input.vrt tmp.nc
$ ncdump -h tmp.nc | grep my_varname
 ?? ?byte my_varname(y, x) ;
 ?? ???? my_varname:long_name = "my long name" ;
 ?? ???? my_varname:_Unsigned = "true" ;
 ?? ???? my_varname:valid_range = 0s, 255s ;
 ?? ???? my_varname:grid_mapping = "transverse_mercator" ;

Not super intuitive admitedly. This is mostly done in a way that netCDF 
-> netCDF CreateCopy() preserve the variable name and long_name attributes

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From jukka.rahkonen at maanmittauslaitos.fi  Tue Mar 12 07:17:31 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Tue, 12 Mar 2024 14:17:31 +0000
Subject: [gdal-dev] WFS: Why to query the schema of all feature types if
 asking for just one?
Message-ID: <DB9PR09MB6887A47F09DE53EC8044E3FBFD2B2@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

I noticed that this query:
ogrinfo WFS:https://maps.helcom.fi/arcgis/services/MADS/Human_Activities/MapServer/WFSServer Human_Activities:Dredging_sites_points_36_2 --debug on

builds first a DescribeCoverage request that has a list all the 156 featuretypes:
Fetch(https://maps.helcom.fi/arcgis/services/MADS/Human_Activities/MapServer/WFSServer?SERVICE=WFS&VERSION=2.0.0&REQUEST=DescribeFeatureType&TYPENAME=Human_Activities:Dredging_sites_points_36_2,Human_Activities:Dredging_sites_areas_36_2, ...

I believe that the query string gets too long and the WFS server sends http 404 error. After that GDAL makes DescribeFeatureType for just "Human_Activities:Dredging_sites_points_36_2" and that query is successful. But I wonder why to make the first query at all.

-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/33eb0405/attachment.htm>

From a.pau at creaf.uab.cat  Tue Mar 12 09:22:57 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Tue, 12 Mar 2024 16:22:57 +0000
Subject: [gdal-dev] There's something strange about two tests that are very
 similar
Message-ID: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,

I have in a single test python file with 3 tests inside: gdal/autotest/ogr/ogr_miramon_vector.py at master * AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
In some actions the first and second are Ok but the third is not. Example of failure:
Some improvements for empty layers * AbelPau/gdal at 90a289c (github.com)<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4863>

Here you have the log (return _gdal.OpenEx(*args, **kwargs)
4912<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4913>23: E RuntimeError: Cannot open file %s.) <--- This happen in the driver when open fails.

The first two are OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master * AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L48>
gdal/autotest/ogr/ogr_miramon_vector.py at master * AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L99>

But this is not OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master * AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>

And the file are all on the correct place (I am sure about that):
For the second one, for example:
gdal/autotest/ogr/data/miramon/Arcs/SimpleArcs at master * AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Arcs/SimpleArcs>

And for the third one:
gdal/autotest/ogr/data/miramon/Polygons/SimplePolygons at master * AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Polygons/SimplePolygons>

On local tests are perfectly OK (see below). So, after some days of trying to figure out WHY and what is de difference between 2 and 3th test I have to ask you because it must be obvious but not to me.

Any idea? Some permissions stuff?? THANKS!


root at f5b8c1fb00ae:/gdal/build/autotest# python3 -m pytest -vv -p no:sugar --color=no ogr/ogr_miramon_vector.py
================================================= test session starts ==================================================
platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 -- /usr/bin/python3
cachedir: .pytest_cache
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.81.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.10.2-CAPI-1.16.0
  PROJ_BUILD_VERSION: 8.2.1
  PROJ_RUNTIME_VERSION: 8.2.1
  COMPILER: GCC 11.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /gdal/build/autotest
configfile: pytest.ini
plugins: env-1.1.3, benchmark-4.0.0
collected 3 items

ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_point PASSED                                                  [ 33%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_arc PASSED                                                    [ 66%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_polygon PASSED                                                [100%]

================================================== 3 passed in 0.11s ===================================================

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/86264198/attachment-0003.jpg>

From even.rouault at spatialys.com  Tue Mar 12 09:35:35 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Mar 2024 17:35:35 +0100
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>

- Are sure all needed files have been committed and pushed for the 
failing test?

- Perhaps an issue Windows CR-LF vs Unix LF end of line characters ? The 
default settings of git on Windows may mess with binary files. cf 
https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings

Le 12/03/2024 ? 17:22, Abel Pau via gdal-dev a ?crit?:
>
> Hi,
>
> I have in a single test python file with 3 tests inside: 
> gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal 
> (github.com) 
> <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
>
> In some actions the first and second are Ok but the third is not. 
> Example of failure:
>
> Some improvements for empty layers ? AbelPau/gdal at 90a289c (github.com) 
> <https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4863>
>
> Here you have the log (return _gdal.OpenEx(*args, **kwargs)
>
> 4912 
> <https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4913>23: 
> E RuntimeError: Cannot open file %s.) <--- This happen in the driver 
> when open fails.
>
> The first two are OK:
>
> gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal 
> (github.com) 
> <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L48>
>
> gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal 
> (github.com) 
> <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L99>
>
> But this is not OK:
>
> gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal 
> (github.com) 
> <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
>
> And the file are all on the correct place (I am sure about that):
>
> For the second one, for example:
>
> gdal/autotest/ogr/data/miramon/Arcs/SimpleArcs at master ? 
> AbelPau/gdal (github.com) 
> <https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Arcs/SimpleArcs>
>
> And for the third one:
>
> gdal/autotest/ogr/data/miramon/Polygons/SimplePolygons at master ? 
> AbelPau/gdal (github.com) 
> <https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Polygons/SimplePolygons>
>
> On local tests are perfectly OK (see below). So, after some days of 
> trying to figure out WHY and what is de difference between 2 and 3th 
> test I have to ask you because it must be obvious but not to me.
>
> Any idea? Some permissions stuff?? THANKS!
>
> root at f5b8c1fb00ae:/gdal/build/autotest# python3 -m pytest -vv -p 
> no:sugar --color=no ogr/ogr_miramon_vector.py
>
> ================================================= test session starts 
> ==================================================
>
> platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 -- 
> /usr/bin/python3
>
> cachedir: .pytest_cache
>
> benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False 
> min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 
> warmup=False warmup_iterations=100000)
>
> GDAL Build Info:
>
> ? PAM_ENABLED: YES
>
> ? OGR_ENABLED: YES
>
> ? CURL_ENABLED: YES
>
> ? CURL_VERSION: 7.81.0
>
> ? GEOS_ENABLED: YES
>
> ? GEOS_VERSION: 3.10.2-CAPI-1.16.0
>
> ? PROJ_BUILD_VERSION: 8.2.1
>
> ? PROJ_RUNTIME_VERSION: 8.2.1
>
> ? COMPILER: GCC 11.4.0
>
> GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data 
> may be skipped)
>
> GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
>
> rootdir: /gdal/build/autotest
>
> configfile: pytest.ini
>
> plugins: env-1.1.3, benchmark-4.0.0
>
> collected 3 items
>
> ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_point 
> PASSED????????????????????????????????????????????????? [ 33%]
>
> ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_arc 
> PASSED??????????????????????????????????????????????????? [ 66%]
>
> ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_polygon 
> PASSED??????????????????????????????????????????????? [100%]
>
> ================================================== 3 passed in 0.11s 
> ===================================================
>
> *Abel Pau Garcia*
>
> *GIS developer*
>
> 	
>
> https://www.creaf.cat/sites/default/files/creaf-signature.png
>
> *a.pau at creaf.uab.cat* <mailto:a.pau at creaf.uab.cat>
>
> *Let's chat on Teams!* 
> <https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
>
> *Tel. +34 934814277*
>
> 	
>
> https://www.creaf.cat/sites/default/files/so-en-signature.png
>
> https://www.creaf.cat/sites/default/files/twitter-icon-signature.png 
> <https://twitter.com/CREAF_ecologia>https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png 
> <https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>https://www.creaf.cat/sites/default/files/youtube-icon-signature.png 
> <https://www.youtube.com/c/creafecologia>https://www.creaf.cat/sites/default/files/instagram-icon-signature.png 
> <https://www.instagram.com/CREAF_ecologia/>
>
> *www.creaf.cat* <http://www.creaf.cat>*| **http://blog.creaf.cat* 
> <http://blog.creaf.cat>
>
> 	
>
> https://www.creaf.cat/sites/default/files/uab_logo_signatura.png
>
> CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)
>
>
> Before printing this electronic message, think about the environment.
>
> http://www.creaf.uab.cat/_signatura/line.gif
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/e248ffde/attachment-0003.jpg>

From fengting.chen at oracle.com  Tue Mar 12 09:48:40 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Tue, 12 Mar 2024 16:48:40 +0000
Subject: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed at
 linking
In-Reply-To: <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>

Resend with more information:

I am trying to build GDAL 3.8.4 on windows under VS2015. The build failed at linking stage that a bunch of external symbols not found, specifically the symbols in libproj, libcurl. I checked the dll library stub .lib for libproj and libcurl using ?dumpbin? and found the symbols in the library a little different, for example the linker error shows ?__imp__curl_slist_append? not found, the symbol output from the ?dumpbin? is  ?__imp_curl_slist_append? .

Any idea how to fix this?

Thanks!

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Fengting Chen via gdal-dev <gdal-dev at lists.osgeo.org>
Date: Monday, March 11, 2024 at 4:50?PM
To: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: [External] : [gdal-dev] GDAL 3.8.4 build on windows failed at linking
GDAL 3.8.4 build on Windows from VS2015 x64 command prompt: ?cmake ?build .? throws the following error (there are more similar errors):

cpl_vsil_az.obj : error LNK2001: unresolved external symbol __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]

cmake options has:

set (GDAL_USE_CURL                ON   CACHE  BOOL "" FORCE)
set (CURL_INCLUDE_DIR             "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE PATH "" FORCE)
set (CURL_LIBRARY_RELEASE         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE FILEPATH "" FORCE)

libcurl-x64.lib is the DLL stub. Using dumpbin on libcurl-x64.lib shows that ?__imp_curl_slist_append? is available. But the linker error is ?__imp__curl_slist_append? not found. There is an extra ?_? in it.

Any idea why this error occurred?

Thanks!


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/c4a061d2/attachment.htm>
-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: ATT00001.txt
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/c4a061d2/attachment.txt>

From even.rouault at spatialys.com  Tue Mar 12 09:56:33 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Mar 2024 17:56:33 +0100
Subject: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed
 at linking
In-Reply-To: <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
 <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <37e89c03-997c-46e7-a1cb-2f576efd5153@spatialys.com>

Not the answer you'll probably want to hear, but:

- Use an up-to-date compiler

- Use package distributions like vcpkg or conda-forge that already 
brings all the dependencies "for free"

- It seems you mix builds of different compilers (VS vs mingw). That's a 
bit asking for troubles ;-)

Le 12/03/2024 ? 17:48, Fengting Chen via gdal-dev a ?crit?:
>
> Resend with more information:
>
> I am trying to build GDAL 3.8.4 on windows under VS2015. The build 
> failed at linking stage that a bunch of external symbols not found, 
> specifically the symbols in libproj, libcurl. I checked the dll 
> library stub .lib for libproj and libcurl using ?dumpbin? and found 
> the symbols in the library a little different, for example the linker 
> error shows ?__imp__curl_slist_append? not found, the symbol output 
> from the ?dumpbin? is ?__imp_curl_slist_append? .
>
> Any idea how to fix this?
>
> Thanks!
>
> *From: *gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of 
> Fengting Chen via gdal-dev <gdal-dev at lists.osgeo.org>
> *Date: *Monday, March 11, 2024 at 4:50?PM
> *To: *gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
> *Subject: *[External] : [gdal-dev] GDAL 3.8.4 build on windows failed 
> at linking
>
> GDAL 3.8.4 build on Windows from VS2015 x64 command prompt: ?cmake 
> ?build .? throws the following error (there are more similar errors):
>
> cpl_vsil_az.obj : error LNK2001: unresolved external symbol 
> __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]
>
> cmake options has:
>
> set (GDAL_USE_CURL??????????????? ON?? CACHE? BOOL "" FORCE)
>
> set (CURL_INCLUDE_DIR "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE 
> PATH "" FORCE)
>
> set (CURL_LIBRARY_RELEASE 
> "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE FILEPATH 
> "" FORCE)
>
> libcurl-x64.lib is the DLL stub. Using dumpbin on libcurl-x64.lib 
> shows that ?__imp_curl_slist_append? is available. But the linker 
> error is ?__imp__curl_slist_append? not found. There is an extra ?_? 
> in it.
>
> Any idea why this error occurred?
>
> Thanks!
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/2ce3f7ae/attachment-0001.htm>

From pierre at chachatelier.fr  Tue Mar 12 06:16:29 2024
From: pierre at chachatelier.fr (Pierre Chatelier)
Date: Tue, 12 Mar 2024 14:16:29 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
In-Reply-To: <ed47974b-0a65-4ee1-af3a-7bec56e367da@spatialys.com>
References: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
 <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>
 <bc2780b0-0f79-4191-9341-ba9e614785f7@chachatelier.fr>
 <7882ecd4-7010-4b9d-824c-2250b9cccbce@spatialys.com>
 <8223ad5c-042b-4735-9ff5-eeae6d676dd8@chachatelier.fr>
 <ed47974b-0a65-4ee1-af3a-7bec56e367da@spatialys.com>
Message-ID: <812184a5-0f69-4ff2-96e1-2e932fc65b99@chachatelier.fr>

Le 12/03/2024 ? 13:48, Even Rouault a ?crit?:
>
> Le 12/03/2024 ? 13:33, Pierre Chatelier a ?crit?:
>>>
>>>> But I can't figure out how to customize the <band name>, which is 
>>>> Band1, Band2, Band3...
>>>> I tried GDALRasterBand::SetDescription(), but without success
>>>
>>> Looking at netcdfdataset.cpp line 9625, the netCDF variable name for 
>>> a band is extracted from the NETCDF_VARNAME band metadata item of 
>>> the source band.
>>
>>
>> Sounds good, doesn't work.
>
> It must be set on the *source* band, before creating CreateCopy(). 
> I've just tested it successfully with:

For now I still have two problems :
-it means I cannot work in-place in the final netCDF dataset, I have to 
use another dataset and use CreateCopy()
-for now? band->SetMetadataItem("NETCDF_VARNAME", "foo"); will generate 
a netCDF band name of "foo1" because there is something related to 
NETCDF_DIM_EXTRA that adds an index. (netcdfdatasetp.cpp:10507)

 ?I am investigating if I can force (even an empty) NETCDF_DIM_EXTRA. 
(but for now it does not work)

>
> $ gdal_translate byte.tif input.vrt
> $ python -c "from osgeo import gdal; ds = gdal.Open('input.vrt', 
> gdal.GA_Update); ds.GetRasterBand(1).SetMetadataItem('NETCDF_VARNAME', 
> 'my_varname'); ds.SetMetadataItem('my_varname#long_name', 'my long 
> name')"
> $ gdal_translate input.vrt tmp.nc
> $ ncdump -h tmp.nc | grep my_varname
> ?? ?byte my_varname(y, x) ;
> ?? ???? my_varname:long_name = "my long name" ;
> ?? ???? my_varname:_Unsigned = "true" ;
> ?? ???? my_varname:valid_range = 0s, 255s ;
> ?? ???? my_varname:grid_mapping = "transverse_mercator" ;
>
> Not super intuitive admitedly. This is mostly done in a way that 
> netCDF -> netCDF CreateCopy() preserve the variable name and long_name 
> attributes
>


From a.pau at creaf.uab.cat  Tue Mar 12 12:43:27 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Tue, 12 Mar 2024 19:43:27 +0000
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
Message-ID: <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>

>>> Are sure all needed files have been committed and pushed for the failing test?

Yes, sure. 9 files are needed for oine polygon layer. Absolutely sure.

>>> Perhaps an issue Windows CR-LF vs Unix LF end of line characters ? The default settings of git on Windows may mess with binary files. cf https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings

I?ll take a look but in binary files the format are bytes of information or blanks (there is no line endings or something similar). The drivers Writes and reads bytes and it goes to different features using offsets of 4 or 8 bytes depending on the version. 4 in this case. Here is the format description for more information. https://www.miramon.cat/new_note/eng/notes/MiraMon_structured_vectors_file_format.pdf

Taking a look to the log I can see an advice about GDALOpenEx (See below).

Thinking about differences between extension POL and the other two (PNT and ARC) is that is the main.
poDriver->SetMetadataItem(GDAL_DMD_EXTENSION, "pol");
poDriver->SetMetadataItem(GDAL_DMD_EXTENSIONS, "pol arc pnt");

I look into multiple examples where ds = gdal.OpenEx() is called with one, two or three arguments.
So, could it be related with this issue?

Thanks!!!


THE LOG:
/home/runner/work/gdal/gdal/build-ubuntu_22.04/autotest/ogr/ogr_miramon_vector.py:175:
17281<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17282>_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
17282<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17283>
17283<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17284>args = ('data/miramon/Polygons/SimplePolygons/SimplePolFile.pol',), kwargs = {}
17284<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17285>
17285<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17286> def OpenEx(*args, **kwargs) -> "GDALDatasetShadow *":
17286<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17287> r"""
17287<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17288> OpenEx(char const * utf8_path, unsigned int nOpenFlags=0, char ** allowed_drivers=None, char ** open_options=None, char ** sibling_files=None) -> Dataset
17288<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17289>
17289<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17290>
17290<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17291> Open a raster or vector file as a :py:class:`Dataset`.
17291<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17292> See :cpp:func:`GDALOpenEx`.
17292<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17293>
17293<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17294> Parameters
17294<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17295> ----------
17295<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17296> utf8_path : str
17296<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17297> name of the file to open
17297<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17298> flags : int
17298<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17299> Flags controlling how the Dataset is opened. Multiple ``gdal.OF_XXX`` flags
17299<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17300> may be combined using the ``|`` operator. See :cpp:func:`GDALOpenEx`.
17300<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17301> allowed_drivers : list, optional
17301<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17302> A list of the names of drivers that may attempt to open the dataset.
17302<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17303> open_options : dict/list, optional
17303<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17304> A dict or list of name=value driver-specific opening options.
17304<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17305> sibling_files: list, optional
17305<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17306> A list of filenames that are auxiliary to the main filename
17306<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17307>
17307<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17308> Returns
17308<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17309> -------
17309<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17310> Dataset, or ``None`` on failure.
17310<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17311>
17311<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17312> See Also
17312<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17313> --------
17313<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17314> :py:func:`Open`
17314<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17315> :py:func:`OpenShared`






Le 12/03/2024 ? 17:22, Abel Pau via gdal-dev a ?crit :
Hi,

I have in a single test python file with 3 tests inside: gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
In some actions the first and second are Ok but the third is not. Example of failure:
Some improvements for empty layers ? AbelPau/gdal at 90a289c (github.com)<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4863>

Here you have the log (return _gdal.OpenEx(*args, **kwargs)
4912<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4913>23: E RuntimeError: Cannot open file %s.) <--- This happen in the driver when open fails.

The first two are OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L48>
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L99>

But this is not OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>

And the file are all on the correct place (I am sure about that):
For the second one, for example:
gdal/autotest/ogr/data/miramon/Arcs/SimpleArcs at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Arcs/SimpleArcs>

And for the third one:
gdal/autotest/ogr/data/miramon/Polygons/SimplePolygons at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Polygons/SimplePolygons>

On local tests are perfectly OK (see below). So, after some days of trying to figure out WHY and what is de difference between 2 and 3th test I have to ask you because it must be obvious but not to me.

Any idea? Some permissions stuff?? THANKS!


root at f5b8c1fb00ae:/gdal/build/autotest# python3 -m pytest -vv -p no:sugar --color=no ogr/ogr_miramon_vector.py
================================================= test session starts ==================================================
platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 -- /usr/bin/python3
cachedir: .pytest_cache
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.81.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.10.2-CAPI-1.16.0
  PROJ_BUILD_VERSION: 8.2.1
  PROJ_RUNTIME_VERSION: 8.2.1
  COMPILER: GCC 11.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /gdal/build/autotest
configfile: pytest.ini
plugins: env-1.1.3, benchmark-4.0.0
collected 3 items

ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_point PASSED                                                  [ 33%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_arc PASSED                                                    [ 66%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_polygon PASSED                                                [100%]

================================================== 3 passed in 0.11s ===================================================

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.






_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240312/92baa33c/attachment-0003.jpg>

From pierre at chachatelier.fr  Tue Mar 12 13:09:12 2024
From: pierre at chachatelier.fr (Pierre Chatelier)
Date: Tue, 12 Mar 2024 21:09:12 +0100
Subject: [gdal-dev] Creating NetCDF dataset with sub datasets
In-Reply-To: <812184a5-0f69-4ff2-96e1-2e932fc65b99@chachatelier.fr>
References: <c031c123-d737-4cac-b270-1933f58787f9@chachatelier.fr>
 <880efb15-2f0e-4d86-88c0-c1697212ded4@spatialys.com>
 <bc2780b0-0f79-4191-9341-ba9e614785f7@chachatelier.fr>
 <7882ecd4-7010-4b9d-824c-2250b9cccbce@spatialys.com>
 <8223ad5c-042b-4735-9ff5-eeae6d676dd8@chachatelier.fr>
 <ed47974b-0a65-4ee1-af3a-7bec56e367da@spatialys.com>
 <812184a5-0f69-4ff2-96e1-2e932fc65b99@chachatelier.fr>
Message-ID: <C7A0227F-77FD-4EC4-9AF6-BBAF67B2EB9A@chachatelier.fr>

My investigation, might be an issue for the github :

band->SetMetadataItem("NETCDF_VARNAME", "foo"); will generate a netCDF band name of "foo1" because there must be a non-null papszExtraDimNames for some reason (netcdfdatasetp.cpp:9630)

However
-in order for "papszExtraDimNames" to be non-null, there must be a dataset->SetMetadataItem("NETCDF_DIM_EXTRA", ...)
-NETCDF_DIM_EXTRA="{}" is an empty array tokenized as null and does not help
-NETCDF_DIM_EXTRA="{dim1_name, dim2_name, ...}" will require NETCDF_DIM_dim<i>_name_DEF={dimension_size<i>,netcdf_data_type}...
-however, using extram dims  requires that the nDimSizeTot=product_i(dimension_size<i>, ...) == nBands ( (netcdfdatasetp.cpp:9473)
-this condition is a non sense in my scenario of a fixed number of 2D bands, there is no dimension_size<i> so that product_i(dimension_size<i>, ...) == nBands

Is there a bug or an artificial limitation by the current netCDF driver implementation ?

Pierre

> On 12 Mar 2024, at 14:16, Pierre Chatelier via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> 
> Le 12/03/2024 ? 13:48, Even Rouault a ?crit :
>> 
>> Le 12/03/2024 ? 13:33, Pierre Chatelier a ?crit :
>>>> 
>>>>> But I can't figure out how to customize the <band name>, which is Band1, Band2, Band3...
>>>>> I tried GDALRasterBand::SetDescription(), but without success
>>>> 
>>>> Looking at netcdfdataset.cpp line 9625, the netCDF variable name for a band is extracted from the NETCDF_VARNAME band metadata item of the source band.
>>> 
>>> 
>>> Sounds good, doesn't work.
>> 
>> It must be set on the *source* band, before creating CreateCopy(). I've just tested it successfully with:
> 
> For now I still have two problems :
> -it means I cannot work in-place in the final netCDF dataset, I have to use another dataset and use CreateCopy()
> -for now  band->SetMetadataItem("NETCDF_VARNAME", "foo"); will generate a netCDF band name of "foo1" because there is something related to NETCDF_DIM_EXTRA that adds an index. (netcdfdatasetp.cpp:10507)
> 
>  I am investigating if I can force (even an empty) NETCDF_DIM_EXTRA. (but for now it does not work)
> 
>> 
>> $ gdal_translate byte.tif input.vrt
>> $ python -c "from osgeo import gdal; ds = gdal.Open('input.vrt', gdal.GA_Update); ds.GetRasterBand(1).SetMetadataItem('NETCDF_VARNAME', 'my_varname'); ds.SetMetadataItem('my_varname#long_name', 'my long name')"
>> $ gdal_translate input.vrt tmp.nc
>> $ ncdump -h tmp.nc | grep my_varname
>>     byte my_varname(y, x) ;
>>         my_varname:long_name = "my long name" ;
>>         my_varname:_Unsigned = "true" ;
>>         my_varname:valid_range = 0s, 255s ;
>>         my_varname:grid_mapping = "transverse_mercator" ;
>> 
>> Not super intuitive admitedly. This is mostly done in a way that netCDF -> netCDF CreateCopy() preserve the variable name and long_name attributes
>> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Wed Mar 13 03:26:14 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Mar 2024 11:26:14 +0100
Subject: [gdal-dev] Motion: adopt RFC 99: Geometry coordinate precision
In-Reply-To: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
References: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
Message-ID: <38e04ebc-4b05-40ea-be9a-b2df8e4823a6@spatialys.com>

Hi,

I declare this motion passed with +1 from PSC members HowardB and me, 
and +0 from KurtS

Even

Le 07/03/2024 ? 20:07, Even Rouault via gdal-dev a ?crit?:
> Hi,
>
> The flow of comments calming down, I motion to adopt RFC 99: Geometry 
> coordinate precision
>
> https://github.com/OSGeo/gdal/pull/9300
>
> Pre-rendered view at 
> https://github.com/rouault/gdal/blob/rfc99_text/doc/source/development/rfc/rfc99_geometry_coordinate_precision.rst 
>
>
> Starting with my +1,
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Wed Mar 13 03:47:04 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Mar 2024 11:47:04 +0100
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>

Hi,

I've checkout'ed your branch locally and I can reproduce the error when 
running the Python tests. Some of the CI checks give an interesting hint 
about this being related to a UTF8 issue, and I wondered why

But running "ogrinfo 
autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" 
outputs:

"""

ERROR 4: Error pMMPolygonLayer.MMArc.pF: Cannot open file 
autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.arc

[QUALITY:LINEAGE:PROCESS1]
nOrganismes=1
history=C:\MiraMon\MM64.exe
date=20230628 16204988+0200

[QUALITY:LINEAGE:PROCESS1:ORGANISME_1]
IndividualName=Abel Pau
PositionName=T?cnic SIG
OrganisationName=Students and educational institutions

[...]

""""

So there are several problems:

1) On failure, you shouldn't output the content of the file in the error 
message, to keep it brief the UTF-8 error comes from the fact that the 
file content is not UTF-8 encoded)

2) There is an error opening the file.

3) Interestingly something in your code *deletes* file 
autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol !

4) You should really invest in running Valgrind. After restoring the 
deleted file, I can see:

$ valgrind ogrinfo 
autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
==1737168== Memcheck, a memory error detector
==1737168== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1737168== Using Valgrind-3.15.0 and LibVEX; rerun with -h for 
copyright info
==1737168== Command: ogrinfo 
autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
==1737168==
==1737168== Conditional jump or move depends on uninitialised value(s)
==1737168==??? at 0x4843C6F: strstr (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1737168==??? by 0x635FC44: MMReturnValueFromSectionINIFile 
(mm_wrlayr.c:5019)
==1737168==??? by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
==1737168==??? by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
==1737168==??? by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
==1737168==??? by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
==1737168==??? by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char 
const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, 
MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
==1737168==??? by 0x634C03E: OGRMiraMonDataSource::Open(char const*, 
VSIVirtualHandle*, OGRSpatialReference const*, int, char**) 
(ogrmiramondatasource.cpp:71)
==1737168==??? by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) 
(ogrmiramondriver.cpp:87)
==1737168==??? by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) 
(gdaldriver.cpp:116)
==1737168==??? by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
==1737168==??? by 0x10AC95: GDALDataset::Open(char const*, unsigned int, 
char const* const*, char const* const*, char const* const*) 
(gdal_priv.h:835)
==1737168==
==1737168== Conditional jump or move depends on uninitialised value(s)
==1737168==??? at 0x483EF58: strlen (in 
/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1737168==??? by 0x5262132: CPLStrdup (cpl_conv.cpp:316)
==1737168==??? by 0x635FC6E: MMReturnValueFromSectionINIFile 
(mm_wrlayr.c:5023)
==1737168==??? by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
==1737168==??? by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
==1737168==??? by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
==1737168==??? by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
==1737168==??? by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char 
const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, 
MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
==1737168==??? by 0x634C03E: OGRMiraMonDataSource::Open(char const*, 
VSIVirtualHandle*, OGRSpatialReference const*, int, char**) 
(ogrmiramondatasource.cpp:71)
==1737168==??? by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) 
(ogrmiramondriver.cpp:87)
==1737168==??? by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) 
(gdaldriver.cpp:116)
==1737168==??? by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
==1737168==
[...]


Le 12/03/2024 ? 20:43, Abel Pau a ?crit?:
>
> >>> Are sure all needed files have been committed and pushed for the 
> failing test?
>
> Yes, sure. 9 files are needed for oine polygon layer. Absolutely sure.
>
> >>> Perhaps an issue Windows CR-LF vs Unix LF end of line characters ? The 
> default settings of git on Windows may mess with binary files. cf 
> https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings
>
> I?ll take a look but in binary files the format are bytes of 
> information or blanks (there is no line endings or something similar). 
> The drivers Writes and reads bytes and it goes to different features 
> using offsets of 4 or 8 bytes depending on the version. 4 in this 
> case. Here is the format description for more information. 
> https://www.miramon.cat/new_note/eng/notes/MiraMon_structured_vectors_file_format.pdf
>
> Taking a look to the log I can see an advice about GDALOpenEx (See below).
>
> Thinking about differences between extension POL and the other two 
> (PNT and ARC) is that is the main.
>
> poDriver->SetMetadataItem(GDAL_DMD_EXTENSION, "pol");
>
> poDriver->SetMetadataItem(GDAL_DMD_EXTENSIONS, "pol arc pnt");
>
> I look into multiple examples where ds = gdal.OpenEx() is called with 
> one, two or three arguments.
>
> So, could it be related with this issue?
>
> Thanks!!!
>
> THE LOG:
>
> /home/runner/work/gdal/gdal/build-ubuntu_22.04/autotest/ogr/ogr_miramon_vector.py:175: 
>
>
> 17281 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17282>_ 
> _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
> _ _ _ _
>
> 17282 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17283> 
>
>
> 17283 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17284>args 
> = ('data/miramon/Polygons/SimplePolygons/SimplePolFile.pol',), kwargs 
> = {}
>
> 17284 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17285> 
>
>
> 17285 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17286> 
> def OpenEx(*args, **kwargs) -> "GDALDatasetShadow *":
>
> 17286 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17287> 
> r"""
>
> 17287 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17288> 
> OpenEx(char const * utf8_path, unsigned int nOpenFlags=0, char ** 
> allowed_drivers=None, char ** open_options=None, char ** 
> sibling_files=None) -> Dataset
>
> 17288 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17289> 
>
>
> 17289 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17290> 
>
>
> 17290 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17291> 
> Open a raster or vector file as a :py:class:`Dataset`.
>
> 17291 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17292> 
> See :cpp:func:`GDALOpenEx`.
>
> 17292 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17293> 
>
>
> 17293 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17294> 
> Parameters
>
> 17294 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17295> 
> ----------
>
> 17295 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17296> 
> utf8_path : str
>
> 17296 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17297> 
> name of the file to open
>
> 17297 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17298> 
> flags : int
>
> 17298 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17299> 
> Flags controlling how the Dataset is opened. Multiple ``gdal.OF_XXX`` 
> flags
>
> 17299 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17300> 
> may be combined using the ``|`` operator. See :cpp:func:`GDALOpenEx`.
>
> 17300 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17301> 
> allowed_drivers : list, optional
>
> 17301 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17302> 
> A list of the names of drivers that may attempt to open the dataset.
>
> 17302 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17303> 
> open_options : dict/list, optional
>
> 17303 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17304> 
> A dict or list of name=value driver-specific opening options.
>
> 17304 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17305> 
> sibling_files: list, optional
>
> 17305 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17306> 
> A list of filenames that are auxiliary to the main filename
>
> 17306 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17307> 
>
>
> 17307 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17308> 
> Returns
>
> 17308 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17309> 
> -------
>
> 17309 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17310> 
> Dataset, or ``None`` on failure.
>
> 17310 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17311> 
>
>
> 17311 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17312> 
> See Also
>
> 17312 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17313> 
> --------
>
> 17313 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17314> 
> :py:func:`Open`
>
> 17314 
> <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17315> 
> :py:func:`OpenShared`
>
> Le 12/03/2024 ? 17:22, Abel Pau via gdal-dev a ?crit?:
>
>     Hi,
>
>     I have in a single test python file with 3 tests inside:
>     gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal
>     (github.com)
>     <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
>
>     In some actions the first and second are Ok but the third is not.
>     Example of failure:
>
>     Some improvements for empty layers ? AbelPau/gdal at 90a289c
>     (github.com)
>     <https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4863>
>
>     Here you have the log (return _gdal.OpenEx(*args, **kwargs)
>
>     4912
>     <https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4913>23:
>     E RuntimeError: Cannot open file %s.) <--- This happen in the
>     driver when open fails.
>
>     The first two are OK:
>
>     gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal
>     (github.com)
>     <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L48>
>
>     gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal
>     (github.com)
>     <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L99>
>
>     But this is not OK:
>
>     gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal
>     (github.com)
>     <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
>
>     And the file are all on the correct place (I am sure about that):
>
>     For the second one, for example:
>
>     gdal/autotest/ogr/data/miramon/Arcs/SimpleArcs at master ?
>     AbelPau/gdal (github.com)
>     <https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Arcs/SimpleArcs>
>
>     And for the third one:
>
>     gdal/autotest/ogr/data/miramon/Polygons/SimplePolygons at master ?
>     AbelPau/gdal (github.com)
>     <https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Polygons/SimplePolygons>
>
>     On local tests are perfectly OK (see below). So, after some days
>     of trying to figure out WHY and what is de difference between 2
>     and 3th test I have to ask you because it must be obvious but not
>     to me.
>
>     Any idea? Some permissions stuff?? THANKS!
>
>     root at f5b8c1fb00ae:/gdal/build/autotest# python3 -m pytest -vv -p
>     no:sugar --color=no ogr/ogr_miramon_vector.py
>
>     ================================================= test session
>     starts ==================================================
>
>     platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 --
>     /usr/bin/python3
>
>     cachedir: .pytest_cache
>
>     benchmark: 4.0.0 (defaults: timer=time.perf_counter
>     disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0
>     calibration_precision=10 warmup=False warmup_iterations=100000)
>
>     GDAL Build Info:
>
>     ? PAM_ENABLED: YES
>
>     ? OGR_ENABLED: YES
>
>     ? CURL_ENABLED: YES
>
>     ? CURL_VERSION: 7.81.0
>
>     ? GEOS_ENABLED: YES
>
>     ? GEOS_VERSION: 3.10.2-CAPI-1.16.0
>
>     ? PROJ_BUILD_VERSION: 8.2.1
>
>     PROJ_RUNTIME_VERSION: 8.2.1
>
>     ? COMPILER: GCC 11.4.0
>
>     GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded
>     data may be skipped)
>
>     GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be
>     skipped)
>
>     rootdir: /gdal/build/autotest
>
>     configfile: pytest.ini
>
>     plugins: env-1.1.3, benchmark-4.0.0
>
>     collected 3 items
>
>     ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_point
>     PASSED????????????????????????????????????????????????? [ 33%]
>
>     ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_arc PASSED [ 66%]
>
>     ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_polygon PASSED
>     [100%]
>
>     ================================================== 3 passed in
>     0.11s ===================================================
>
>     *Abel Pau Garcia*
>
>     *GIS developer*
>
>     	
>
>     https://www.creaf.cat/sites/default/files/creaf-signature.png
>
>     *a.pau at creaf.uab.cat* <mailto:a.pau at creaf.uab.cat>
>
>     *Let's chat on Teams!*
>     <https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
>
>     *Tel. +34 934814277*
>
>     	
>
>     https://www.creaf.cat/sites/default/files/so-en-signature.png
>
>     https://www.creaf.cat/sites/default/files/twitter-icon-signature.png
>     <https://twitter.com/CREAF_ecologia>https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png
>     <https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>https://www.creaf.cat/sites/default/files/youtube-icon-signature.png
>     <https://www.youtube.com/c/creafecologia>https://www.creaf.cat/sites/default/files/instagram-icon-signature.png
>     <https://www.instagram.com/CREAF_ecologia/>
>
>     *www.creaf.cat* <http://www.creaf.cat>*| **http://blog.creaf.cat*
>     <http://blog.creaf.cat>
>
>     	
>
>     https://www.creaf.cat/sites/default/files/uab_logo_signatura.png
>
>     CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)
>
>
>     Before printing this electronic message, think about the environment.
>
>     http://www.creaf.uab.cat/_signatura/line.gif
>
>
>
>     _______________________________________________
>
>     gdal-dev mailing list
>
>     gdal-dev at lists.osgeo.org
>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/fe70d4d4/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Wed Mar 13 04:37:45 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 13 Mar 2024 11:37:45 +0000
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
Message-ID: <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi Even,
thanks for your effort on that.

I?ll spend some time analyzing that but I can imagine where the problem is.
For your information our .REL files are generated in ANSI codification and when this kind of files are read I forgot to translate to UTF-8.

It?s very probable that this is the mistake.
I?ll tell you when I solve that!

About

1)      it?s not my intention to output part of the content file (I think that is part of the name which is bad composed because is read from this REL file)

2)      Due to codification, certainly

3)      It?s odd and I didn?t want to do that, of course! I?ll review

4)      I used Valgrind some time, And I?ll do again, thanks

Thanks for the report!



De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimecres, 13 de mar? de 2024 11:47
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] There's something strange about two tests that are very similar


Hi,

I've checkout'ed your branch locally and I can reproduce the error when running the Python tests. Some of the CI checks give an interesting hint about this being related to a UTF8 issue, and I wondered why

But running "ogrinfo autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" outputs:

"""

ERROR 4: Error pMMPolygonLayer.MMArc.pF: Cannot open file autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.arc

[QUALITY:LINEAGE:PROCESS1]
nOrganismes=1
history=C:\MiraMon\MM64.exe
date=20230628 16204988+0200

[QUALITY:LINEAGE:PROCESS1:ORGANISME_1]
IndividualName=Abel Pau
PositionName=T?cnic SIG
OrganisationName=Students and educational institutions

[...]

""""

So there are several problems:

1) On failure, you shouldn't output the content of the file in the error message, to keep it brief the UTF-8 error comes from the fact that the file content is not UTF-8 encoded)

2) There is an error opening the file.

3) Interestingly something in your code *deletes* file autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol !

4) You should really invest in running Valgrind. After restoring the deleted file, I can see:

$ valgrind ogrinfo autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
==1737168== Memcheck, a memory error detector
==1737168== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1737168== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1737168== Command: ogrinfo autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
==1737168==
==1737168== Conditional jump or move depends on uninitialised value(s)
==1737168==    at 0x4843C6F: strstr (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1737168==    by 0x635FC44: MMReturnValueFromSectionINIFile (mm_wrlayr.c:5019)
==1737168==    by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
==1737168==    by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
==1737168==    by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
==1737168==    by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
==1737168==    by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
==1737168==    by 0x634C03E: OGRMiraMonDataSource::Open(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**) (ogrmiramondatasource.cpp:71)
==1737168==    by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) (ogrmiramondriver.cpp:87)
==1737168==    by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) (gdaldriver.cpp:116)
==1737168==    by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
==1737168==    by 0x10AC95: GDALDataset::Open(char const*, unsigned int, char const* const*, char const* const*, char const* const*) (gdal_priv.h:835)
==1737168==
==1737168== Conditional jump or move depends on uninitialised value(s)
==1737168==    at 0x483EF58: strlen (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1737168==    by 0x5262132: CPLStrdup (cpl_conv.cpp:316)
==1737168==    by 0x635FC6E: MMReturnValueFromSectionINIFile (mm_wrlayr.c:5023)
==1737168==    by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
==1737168==    by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
==1737168==    by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
==1737168==    by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
==1737168==    by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
==1737168==    by 0x634C03E: OGRMiraMonDataSource::Open(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**) (ogrmiramondatasource.cpp:71)
==1737168==    by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) (ogrmiramondriver.cpp:87)
==1737168==    by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) (gdaldriver.cpp:116)
==1737168==    by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
==1737168==
[...]


Le 12/03/2024 ? 20:43, Abel Pau a ?crit :

>>> Are sure all needed files have been committed and pushed for the failing test?

Yes, sure. 9 files are needed for oine polygon layer. Absolutely sure.

>>> Perhaps an issue Windows CR-LF vs Unix LF end of line characters ? The default settings of git on Windows may mess with binary files. cf https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings

I?ll take a look but in binary files the format are bytes of information or blanks (there is no line endings or something similar). The drivers Writes and reads bytes and it goes to different features using offsets of 4 or 8 bytes depending on the version. 4 in this case. Here is the format description for more information. https://www.miramon.cat/new_note/eng/notes/MiraMon_structured_vectors_file_format.pdf

Taking a look to the log I can see an advice about GDALOpenEx (See below).

Thinking about differences between extension POL and the other two (PNT and ARC) is that is the main.
poDriver->SetMetadataItem(GDAL_DMD_EXTENSION, "pol");
poDriver->SetMetadataItem(GDAL_DMD_EXTENSIONS, "pol arc pnt");

I look into multiple examples where ds = gdal.OpenEx() is called with one, two or three arguments.
So, could it be related with this issue?

Thanks!!!


THE LOG:
/home/runner/work/gdal/gdal/build-ubuntu_22.04/autotest/ogr/ogr_miramon_vector.py:175:
17281<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17282>_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
17282<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17283>
17283<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17284>args = ('data/miramon/Polygons/SimplePolygons/SimplePolFile.pol',), kwargs = {}
17284<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17285>
17285<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17286> def OpenEx(*args, **kwargs) -> "GDALDatasetShadow *":
17286<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17287> r"""
17287<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17288> OpenEx(char const * utf8_path, unsigned int nOpenFlags=0, char ** allowed_drivers=None, char ** open_options=None, char ** sibling_files=None) -> Dataset
17288<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17289>
17289<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17290>
17290<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17291> Open a raster or vector file as a :py:class:`Dataset`.
17291<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17292> See :cpp:func:`GDALOpenEx`.
17292<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17293>
17293<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17294> Parameters
17294<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17295> ----------
17295<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17296> utf8_path : str
17296<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17297> name of the file to open
17297<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17298> flags : int
17298<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17299> Flags controlling how the Dataset is opened. Multiple ``gdal.OF_XXX`` flags
17299<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17300> may be combined using the ``|`` operator. See :cpp:func:`GDALOpenEx`.
17300<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17301> allowed_drivers : list, optional
17301<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17302> A list of the names of drivers that may attempt to open the dataset.
17302<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17303> open_options : dict/list, optional
17303<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17304> A dict or list of name=value driver-specific opening options.
17304<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17305> sibling_files: list, optional
17305<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17306> A list of filenames that are auxiliary to the main filename
17306<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17307>
17307<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17308> Returns
17308<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17309> -------
17309<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17310> Dataset, or ``None`` on failure.
17310<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17311>
17311<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17312> See Also
17312<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17313> --------
17313<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17314> :py:func:`Open`
17314<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17315> :py:func:`OpenShared`






Le 12/03/2024 ? 17:22, Abel Pau via gdal-dev a ?crit :
Hi,

I have in a single test python file with 3 tests inside: gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
In some actions the first and second are Ok but the third is not. Example of failure:
Some improvements for empty layers ? AbelPau/gdal at 90a289c (github.com)<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4863>

Here you have the log (return _gdal.OpenEx(*args, **kwargs)
4912<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4913>23: E RuntimeError: Cannot open file %s.) <--- This happen in the driver when open fails.

The first two are OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L48>
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L99>

But this is not OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>

And the file are all on the correct place (I am sure about that):
For the second one, for example:
gdal/autotest/ogr/data/miramon/Arcs/SimpleArcs at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Arcs/SimpleArcs>

And for the third one:
gdal/autotest/ogr/data/miramon/Polygons/SimplePolygons at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Polygons/SimplePolygons>

On local tests are perfectly OK (see below). So, after some days of trying to figure out WHY and what is de difference between 2 and 3th test I have to ask you because it must be obvious but not to me.

Any idea? Some permissions stuff?? THANKS!


root at f5b8c1fb00ae:/gdal/build/autotest# python3 -m pytest -vv -p no:sugar --color=no ogr/ogr_miramon_vector.py
================================================= test session starts ==================================================
platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 -- /usr/bin/python3
cachedir: .pytest_cache
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.81.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.10.2-CAPI-1.16.0
  PROJ_BUILD_VERSION: 8.2.1
  PROJ_RUNTIME_VERSION: 8.2.1
  COMPILER: GCC 11.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /gdal/build/autotest
configfile: pytest.ini
plugins: env-1.1.3, benchmark-4.0.0
collected 3 items

ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_point PASSED                                                  [ 33%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_arc PASSED                                                    [ 66%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_polygon PASSED                                                [100%]

================================================== 3 passed in 0.11s ===================================================

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.







_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/89588884/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Wed Mar 13 07:00:02 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 13 Mar 2024 14:00:02 +0000
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi again,

MiraMon files have had INI files containing metadata information for ages.

To read and write sections and key/values from them, we use specific Windows functions (https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getprivateprofilestring). When I started programming the driver, I had to create a function to do that as I couldn't use the Windows one.

I suspect that these functions are not accurate and are failing.

Is there any function in GDAL that can read INI files (at least to check if a section exists and to get the value of a key in an existing section)? If not, perhaps using the following could be considered: https://github.com/brofield/simpleini

It seems to have an MIT license... If it's possible to use this parser, what would be the procedure? I noticed that Even added a parser for some command line arguments and perhaps something similar can be done with that.

If not, is it possible for me to add some files in the MiraMonVector driver and use them?

It's better to use something existing and multiplatform than to "reinvent the wheel" with some new function that can fail (in fact, is failing now).

Thanks.


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dimecres, 13 de mar? de 2024 12:38
Para: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] There's something strange about two tests that are very similar

Hi Even,
thanks for your effort on that.

I?ll spend some time analyzing that but I can imagine where the problem is.
For your information our .REL files are generated in ANSI codification and when this kind of files are read I forgot to translate to UTF-8.

It?s very probable that this is the mistake.
I?ll tell you when I solve that!

About

1)      it?s not my intention to output part of the content file (I think that is part of the name which is bad composed because is read from this REL file)

2)      Due to codification, certainly

3)      It?s odd and I didn?t want to do that, of course! I?ll review

4)      I used Valgrind some time, And I?ll do again, thanks

Thanks for the report!



De: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Enviado el: dimecres, 13 de mar? de 2024 11:47
Para: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] There's something strange about two tests that are very similar


Hi,

I've checkout'ed your branch locally and I can reproduce the error when running the Python tests. Some of the CI checks give an interesting hint about this being related to a UTF8 issue, and I wondered why

But running "ogrinfo autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" outputs:

"""

ERROR 4: Error pMMPolygonLayer.MMArc.pF: Cannot open file autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.arc

[QUALITY:LINEAGE:PROCESS1]
nOrganismes=1
history=C:\MiraMon\MM64.exe
date=20230628 16204988+0200

[QUALITY:LINEAGE:PROCESS1:ORGANISME_1]
IndividualName=Abel Pau
PositionName=T?cnic SIG
OrganisationName=Students and educational institutions

[...]

""""

So there are several problems:

1) On failure, you shouldn't output the content of the file in the error message, to keep it brief the UTF-8 error comes from the fact that the file content is not UTF-8 encoded)

2) There is an error opening the file.

3) Interestingly something in your code *deletes* file autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol !

4) You should really invest in running Valgrind. After restoring the deleted file, I can see:

$ valgrind ogrinfo autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
==1737168== Memcheck, a memory error detector
==1737168== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1737168== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1737168== Command: ogrinfo autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
==1737168==
==1737168== Conditional jump or move depends on uninitialised value(s)
==1737168==    at 0x4843C6F: strstr (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1737168==    by 0x635FC44: MMReturnValueFromSectionINIFile (mm_wrlayr.c:5019)
==1737168==    by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
==1737168==    by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
==1737168==    by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
==1737168==    by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
==1737168==    by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
==1737168==    by 0x634C03E: OGRMiraMonDataSource::Open(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**) (ogrmiramondatasource.cpp:71)
==1737168==    by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) (ogrmiramondriver.cpp:87)
==1737168==    by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) (gdaldriver.cpp:116)
==1737168==    by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
==1737168==    by 0x10AC95: GDALDataset::Open(char const*, unsigned int, char const* const*, char const* const*, char const* const*) (gdal_priv.h:835)
==1737168==
==1737168== Conditional jump or move depends on uninitialised value(s)
==1737168==    at 0x483EF58: strlen (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1737168==    by 0x5262132: CPLStrdup (cpl_conv.cpp:316)
==1737168==    by 0x635FC6E: MMReturnValueFromSectionINIFile (mm_wrlayr.c:5023)
==1737168==    by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
==1737168==    by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
==1737168==    by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
==1737168==    by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
==1737168==    by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
==1737168==    by 0x634C03E: OGRMiraMonDataSource::Open(char const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**) (ogrmiramondatasource.cpp:71)
==1737168==    by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) (ogrmiramondriver.cpp:87)
==1737168==    by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) (gdaldriver.cpp:116)
==1737168==    by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
==1737168==
[...]


Le 12/03/2024 ? 20:43, Abel Pau a ?crit :

>>> Are sure all needed files have been committed and pushed for the failing test?

Yes, sure. 9 files are needed for oine polygon layer. Absolutely sure.

>>> Perhaps an issue Windows CR-LF vs Unix LF end of line characters ? The default settings of git on Windows may mess with binary files. cf https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings

I?ll take a look but in binary files the format are bytes of information or blanks (there is no line endings or something similar). The drivers Writes and reads bytes and it goes to different features using offsets of 4 or 8 bytes depending on the version. 4 in this case. Here is the format description for more information. https://www.miramon.cat/new_note/eng/notes/MiraMon_structured_vectors_file_format.pdf

Taking a look to the log I can see an advice about GDALOpenEx (See below).

Thinking about differences between extension POL and the other two (PNT and ARC) is that is the main.
poDriver->SetMetadataItem(GDAL_DMD_EXTENSION, "pol");
poDriver->SetMetadataItem(GDAL_DMD_EXTENSIONS, "pol arc pnt");

I look into multiple examples where ds = gdal.OpenEx() is called with one, two or three arguments.
So, could it be related with this issue?

Thanks!!!


THE LOG:
/home/runner/work/gdal/gdal/build-ubuntu_22.04/autotest/ogr/ogr_miramon_vector.py:175:
17281<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17282>_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
17282<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17283>
17283<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17284>args = ('data/miramon/Polygons/SimplePolygons/SimplePolFile.pol',), kwargs = {}
17284<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17285>
17285<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17286> def OpenEx(*args, **kwargs) -> "GDALDatasetShadow *":
17286<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17287> r"""
17287<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17288> OpenEx(char const * utf8_path, unsigned int nOpenFlags=0, char ** allowed_drivers=None, char ** open_options=None, char ** sibling_files=None) -> Dataset
17288<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17289>
17289<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17290>
17290<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17291> Open a raster or vector file as a :py:class:`Dataset`.
17291<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17292> See :cpp:func:`GDALOpenEx`.
17292<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17293>
17293<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17294> Parameters
17294<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17295> ----------
17295<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17296> utf8_path : str
17296<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17297> name of the file to open
17297<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17298> flags : int
17298<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17299> Flags controlling how the Dataset is opened. Multiple ``gdal.OF_XXX`` flags
17299<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17300> may be combined using the ``|`` operator. See :cpp:func:`GDALOpenEx`.
17300<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17301> allowed_drivers : list, optional
17301<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17302> A list of the names of drivers that may attempt to open the dataset.
17302<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17303> open_options : dict/list, optional
17303<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17304> A dict or list of name=value driver-specific opening options.
17304<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17305> sibling_files: list, optional
17305<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17306> A list of filenames that are auxiliary to the main filename
17306<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17307>
17307<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17308> Returns
17308<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17309> -------
17309<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17310> Dataset, or ``None`` on failure.
17310<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17311>
17311<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17312> See Also
17312<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17313> --------
17313<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17314> :py:func:`Open`
17314<https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17315> :py:func:`OpenShared`






Le 12/03/2024 ? 17:22, Abel Pau via gdal-dev a ?crit :
Hi,

I have in a single test python file with 3 tests inside: gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
In some actions the first and second are Ok but the third is not. Example of failure:
Some improvements for empty layers ? AbelPau/gdal at 90a289c (github.com)<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4863>

Here you have the log (return _gdal.OpenEx(*args, **kwargs)
4912<https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4913>23: E RuntimeError: Cannot open file %s.) <--- This happen in the driver when open fails.

The first two are OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L48>
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L99>

But this is not OK:
gdal/autotest/ogr/ogr_miramon_vector.py at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>

And the file are all on the correct place (I am sure about that):
For the second one, for example:
gdal/autotest/ogr/data/miramon/Arcs/SimpleArcs at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Arcs/SimpleArcs>

And for the third one:
gdal/autotest/ogr/data/miramon/Polygons/SimplePolygons at master ? AbelPau/gdal (github.com)<https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Polygons/SimplePolygons>

On local tests are perfectly OK (see below). So, after some days of trying to figure out WHY and what is de difference between 2 and 3th test I have to ask you because it must be obvious but not to me.

Any idea? Some permissions stuff?? THANKS!


root at f5b8c1fb00ae:/gdal/build/autotest# python3 -m pytest -vv -p no:sugar --color=no ogr/ogr_miramon_vector.py
================================================= test session starts ==================================================
platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0 -- /usr/bin/python3
cachedir: .pytest_cache
benchmark: 4.0.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)
GDAL Build Info:
  PAM_ENABLED: YES
  OGR_ENABLED: YES
  CURL_ENABLED: YES
  CURL_VERSION: 7.81.0
  GEOS_ENABLED: YES
  GEOS_VERSION: 3.10.2-CAPI-1.16.0
  PROJ_BUILD_VERSION: 8.2.1
  PROJ_RUNTIME_VERSION: 8.2.1
  COMPILER: GCC 11.4.0
GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on downloaded data may be skipped)
GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be skipped)
rootdir: /gdal/build/autotest
configfile: pytest.ini
plugins: env-1.1.3, benchmark-4.0.0
collected 3 items

ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_point PASSED                                                  [ 33%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_arc PASSED                                                    [ 66%]
ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_polygon PASSED                                                [100%]

================================================== 3 passed in 0.11s ===================================================

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.






_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/064fc926/attachment-0003.jpg>

From even.rouault at spatialys.com  Wed Mar 13 09:04:08 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Mar 2024 17:04:08 +0100
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>

My intuition is that reading/writing ini file should be quite 
straightforward (unless I'm missing some subtelties of the format). In 
port/cpl_conv.cpp, we have a CPLLoadConfigOptionsFromFile() function 
that does that in a specific way for the purposes of parsing the GDAL 
configuration file 
(https://gdal.org/user/configoptions.html#gdal-configuration-file). But 
I can imagine we could have a more general std::map<std::string, 
std::pair<std::string,std::string>> CPLLoadIniFile(const char* 
pszIniFilename, CSLConstList papszOptions (if needed)) that would return 
a map of section -> (key, value) pairs.? Regarding an external project, 
this might be considered but one has to evaluate if there are not 
downsides (e.g will the effort to make it compile on all platforms and 
make all analysis tools we use happy not be greater than its benefits)

Le 13/03/2024 ? 15:00, Abel Pau via gdal-dev a ?crit?:
>
> Hi again,
>
> MiraMon files have had INI files containing metadata information for ages.
>
> To read and write sections and key/values from them, we use specific 
> Windows functions 
> (https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getprivateprofilestring). 
> When I started programming the driver, I had to create a function to 
> do that as I couldn't use the Windows one.
>
> I suspect that these functions are not accurate and are failing.
>
> Is there any function in GDAL that can read INI files (at least to 
> check if a section exists and to get the value of a key in an existing 
> section)? If not, perhaps using the following could be considered: 
> https://github.com/brofield/simpleini
>
> It seems to have an MIT license... If it's possible to use this 
> parser, what would be the procedure? I noticed that Even added a 
> parser for some command line arguments and perhaps something similar 
> can be done with that.
>
> If not, is it possible for me to add some files in the MiraMonVector 
> driver and use them?
>
> It's better to use something existing and multiplatform than to 
> "reinvent the wheel" with some new function that can fail (in fact, is 
> failing now).
>
> Thanks.
>
> *De:*gdal-dev <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Abel 
> Pau via gdal-dev
> *Enviado el:* dimecres, 13 de mar? de 2024 12:38
> *Para:* Even Rouault <even.rouault at spatialys.com>; 
> gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] There's something strange about two tests 
> that are very similar
>
> Hi Even,
>
> thanks for your effort on that.
>
> I?ll spend some time analyzing that but I can imagine where the 
> problem is.
>
> For your information our .REL files are generated in ANSI codification 
> and when this kind of files are read I forgot to translate to UTF-8.
>
> It?s very probable that this is the mistake.
>
> I?ll tell you when I solve that!
>
> About
>
> 1)it?s not my intention to output part of the content file (I think 
> that is part of the name which is bad composed because is read from 
> this REL file)
>
> 2)Due to codification, certainly
>
> 3)It?s odd and I didn?t want to do that, of course! I?ll review
>
> 4)I used Valgrind some time, And I?ll do again, thanks
>
>
> Thanks for the report!
>
> *De:*Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dimecres, 13 de mar? de 2024 11:47
> *Para:*Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] There's something strange about two tests 
> that are very similar
>
> Hi,
>
> I've checkout'ed your branch locally and I can reproduce the error 
> when running the Python tests. Some of the CI checks give an 
> interesting hint about this being related to a UTF8 issue, and I 
> wondered why
>
> But running "ogrinfo 
> autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol" 
> outputs:
>
> """
>
> ERROR 4: Error pMMPolygonLayer.MMArc.pF: Cannot open file 
> autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.arc
>
> [QUALITY:LINEAGE:PROCESS1]
> nOrganismes=1
> history=C:\MiraMon\MM64.exe
> date=20230628 16204988+0200
>
> [QUALITY:LINEAGE:PROCESS1:ORGANISME_1]
> IndividualName=Abel Pau
> PositionName=T?cnic SIG
> OrganisationName=Students and educational institutions
>
> [...]
>
> """"
>
> So there are several problems:
>
> 1) On failure, you shouldn't output the content of the file in the 
> error message, to keep it brief the UTF-8 error comes from the fact 
> that the file content is not UTF-8 encoded)
>
> 2) There is an error opening the file.
>
> 3) Interestingly something in your code *deletes* file 
> autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol !
>
> 4) You should really invest in running Valgrind. After restoring the 
> deleted file, I can see:
>
> $ valgrind ogrinfo 
> autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
> ==1737168== Memcheck, a memory error detector
> ==1737168== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward 
> et al.
> ==1737168== Using Valgrind-3.15.0 and LibVEX; rerun with -h for 
> copyright info
> ==1737168== Command: ogrinfo 
> autotest/ogr/data/miramon/Polygons/SimplePolygons/SimplePolFile.pol
> ==1737168==
> ==1737168== Conditional jump or move depends on uninitialised value(s)
> ==1737168==??? at 0x4843C6F: strstr (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==1737168==??? by 0x635FC44: MMReturnValueFromSectionINIFile 
> (mm_wrlayr.c:5019)
> ==1737168==??? by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
> ==1737168==??? by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
> ==1737168==??? by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
> ==1737168==??? by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
> ==1737168==??? by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char 
> const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, 
> MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
> ==1737168==??? by 0x634C03E: OGRMiraMonDataSource::Open(char const*, 
> VSIVirtualHandle*, OGRSpatialReference const*, int, char**) 
> (ogrmiramondatasource.cpp:71)
> ==1737168==??? by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) 
> (ogrmiramondriver.cpp:87)
> ==1737168==??? by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) 
> (gdaldriver.cpp:116)
> ==1737168==??? by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
> ==1737168==??? by 0x10AC95: GDALDataset::Open(char const*, unsigned 
> int, char const* const*, char const* const*, char const* const*) 
> (gdal_priv.h:835)
> ==1737168==
> ==1737168== Conditional jump or move depends on uninitialised value(s)
> ==1737168==??? at 0x483EF58: strlen (in 
> /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
> ==1737168==??? by 0x5262132: CPLStrdup (cpl_conv.cpp:316)
> ==1737168==??? by 0x635FC6E: MMReturnValueFromSectionINIFile 
> (mm_wrlayr.c:5023)
> ==1737168==??? by 0x636219A: MMCheck_REL_FILE (mm_wrlayr.c:5785)
> ==1737168==??? by 0x63586B0: MMInitPolygonLayer (mm_wrlayr.c:1665)
> ==1737168==??? by 0x6358BC6: MMInitLayerByType (mm_wrlayr.c:1761)
> ==1737168==??? by 0x636B818: MMInitLayerToRead (mm_rdlayr.c:142)
> ==1737168==??? by 0x634D6A7: OGRMiraMonLayer::OGRMiraMonLayer(char 
> const*, VSIVirtualHandle*, OGRSpatialReference const*, int, char**, 
> MiraMonVectMapInfo*) (ogrmiramonlayer.cpp:219)
> ==1737168==??? by 0x634C03E: OGRMiraMonDataSource::Open(char const*, 
> VSIVirtualHandle*, OGRSpatialReference const*, int, char**) 
> (ogrmiramondatasource.cpp:71)
> ==1737168==??? by 0x634C997: OGRMiraMonDriverOpen(GDALOpenInfo*) 
> (ogrmiramondriver.cpp:87)
> ==1737168==??? by 0x67DD68C: GDALDriver::Open(GDALOpenInfo*, bool) 
> (gdaldriver.cpp:116)
> ==1737168==??? by 0x67F61F4: GDALOpenEx (gdaldataset.cpp:3745)
> ==1737168==
> [...]
>
> Le 12/03/2024 ? 20:43, Abel Pau a ?crit?:
>
>     >>> Are sure all needed files have been committed and pushed for the
>     failing test?
>
>     Yes, sure. 9 files are needed for oine polygon layer. Absolutely sure.
>
>     >>> Perhaps an issue Windows CR-LF vs Unix LF end of line characters ?
>     The default settings of git on Windows may mess with binary files.
>     cf
>     https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings
>
>     I?ll take a look but in binary files the format are bytes of
>     information or blanks (there is no line endings or something
>     similar). The drivers Writes and reads bytes and it goes to
>     different features using offsets of 4 or 8 bytes depending on the
>     version. 4 in this case. Here is the format description for more
>     information.
>     https://www.miramon.cat/new_note/eng/notes/MiraMon_structured_vectors_file_format.pdf
>
>     Taking a look to the log I can see an advice about GDALOpenEx (See
>     below).
>
>     Thinking about differences between extension POL and the other two
>     (PNT and ARC) is that is the main.
>
>     poDriver->SetMetadataItem(GDAL_DMD_EXTENSION, "pol");
>
>     poDriver->SetMetadataItem(GDAL_DMD_EXTENSIONS, "pol arc pnt");
>
>     I look into multiple examples where ds = gdal.OpenEx() is called
>     with one, two or three arguments.
>
>     So, could it be related with this issue?
>
>     Thanks!!!
>
>     THE LOG:
>
>     /home/runner/work/gdal/gdal/build-ubuntu_22.04/autotest/ogr/ogr_miramon_vector.py:175:
>
>
>     17281
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17282>_
>     _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
>     _ _ _ _ _ _
>
>     17282
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17283>
>
>
>     17283
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17284>args
>     = ('data/miramon/Polygons/SimplePolygons/SimplePolFile.pol',),
>     kwargs = {}
>
>     17284
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17285>
>
>
>     17285
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17286>
>     def OpenEx(*args, **kwargs) -> "GDALDatasetShadow *":
>
>     17286
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17287>
>     r"""
>
>     17287
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17288>
>     OpenEx(char const * utf8_path, unsigned int nOpenFlags=0, char **
>     allowed_drivers=None, char ** open_options=None, char **
>     sibling_files=None) -> Dataset
>
>     17288
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17289>
>
>
>     17289
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17290>
>
>
>     17290
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17291>
>     Open a raster or vector file as a :py:class:`Dataset`.
>
>     17291
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17292>
>     See :cpp:func:`GDALOpenEx`.
>
>     17292
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17293>
>
>
>     17293
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17294>
>     Parameters
>
>     17294
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17295>
>     ----------
>
>     17295
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17296>
>     utf8_path : str
>
>     17296
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17297>
>     name of the file to open
>
>     17297
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17298>
>     flags : int
>
>     17298
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17299>
>     Flags controlling how the Dataset is opened. Multiple
>     ``gdal.OF_XXX`` flags
>
>     17299
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17300>
>     may be combined using the ``|`` operator. See :cpp:func:`GDALOpenEx`.
>
>     17300
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17301>
>     allowed_drivers : list, optional
>
>     17301
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17302>
>     A list of the names of drivers that may attempt to open the dataset.
>
>     17302
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17303>
>     open_options : dict/list, optional
>
>     17303
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17304>
>     A dict or list of name=value driver-specific opening options.
>
>     17304
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17305>
>     sibling_files: list, optional
>
>     17305
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17306>
>     A list of filenames that are auxiliary to the main filename
>
>     17306
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17307>
>
>
>     17307
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17308>
>     Returns
>
>     17308
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17309>
>     -------
>
>     17309
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17310>
>     Dataset, or ``None`` on failure.
>
>     17310
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17311>
>
>
>     17311
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17312>
>     See Also
>
>     17312
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17313>
>     --------
>
>     17313
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17314>
>     :py:func:`Open`
>
>     17314
>     <https://github.com/AbelPau/gdal/actions/runs/8254132320/job/22577551385#step:16:17315>
>     :py:func:`OpenShared`
>
>     Le 12/03/2024 ? 17:22, Abel Pau via gdal-dev a ?crit?:
>
>         Hi,
>
>         I have in a single test python file with 3 tests inside:
>         gdal/autotest/ogr/ogr_miramon_vector.py at master ?
>         AbelPau/gdal (github.com)
>         <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
>
>         In some actions the first and second are Ok but the third is
>         not. Example of failure:
>
>         Some improvements for empty layers ? AbelPau/gdal at 90a289c
>         (github.com)
>         <https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4863>
>
>         Here you have the log (return _gdal.OpenEx(*args, **kwargs)
>
>         4912
>         <https://github.com/AbelPau/gdal/actions/runs/8251854865/job/22569933640#step:12:4913>23:
>         E RuntimeError: Cannot open file %s.) <--- This happen in the
>         driver when open fails.
>
>         The first two are OK:
>
>         gdal/autotest/ogr/ogr_miramon_vector.py at master ?
>         AbelPau/gdal (github.com)
>         <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L48>
>
>         gdal/autotest/ogr/ogr_miramon_vector.py at master ?
>         AbelPau/gdal (github.com)
>         <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L99>
>
>         But this is not OK:
>
>         gdal/autotest/ogr/ogr_miramon_vector.py at master ?
>         AbelPau/gdal (github.com)
>         <https://github.com/AbelPau/gdal/blob/master/autotest/ogr/ogr_miramon_vector.py#L134>
>
>         And the file are all on the correct place (I am sure about that):
>
>         For the second one, for example:
>
>         gdal/autotest/ogr/data/miramon/Arcs/SimpleArcs at master ?
>         AbelPau/gdal (github.com)
>         <https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Arcs/SimpleArcs>
>
>         And for the third one:
>
>         gdal/autotest/ogr/data/miramon/Polygons/SimplePolygons at
>         master ? AbelPau/gdal (github.com)
>         <https://github.com/AbelPau/gdal/tree/master/autotest/ogr/data/miramon/Polygons/SimplePolygons>
>
>         On local tests are perfectly OK (see below). So, after some
>         days of trying to figure out WHY and what is de difference
>         between 2 and 3th test I have to ask you because it must be
>         obvious but not to me.
>
>         Any idea? Some permissions stuff?? THANKS!
>
>         root at f5b8c1fb00ae:/gdal/build/autotest# python3 -m pytest -vv
>         -p no:sugar --color=no ogr/ogr_miramon_vector.py
>
>         ================================================= test session
>         starts ==================================================
>
>         platform linux -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0
>         -- /usr/bin/python3
>
>         cachedir: .pytest_cache
>
>         benchmark: 4.0.0 (defaults: timer=time.perf_counter
>         disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0
>         calibration_precision=10 warmup=False warmup_iterations=100000)
>
>         GDAL Build Info:
>
>         ? PAM_ENABLED: YES
>
>         ? OGR_ENABLED: YES
>
>         ? CURL_ENABLED: YES
>
>         ? CURL_VERSION: 7.81.0
>
>         ? GEOS_ENABLED: YES
>
>         ? GEOS_VERSION: 3.10.2-CAPI-1.16.0
>
>         PROJ_BUILD_VERSION: 8.2.1
>
>         PROJ_RUNTIME_VERSION: 8.2.1
>
>         ? COMPILER: GCC 11.4.0
>
>         GDAL_DOWNLOAD_TEST_DATA: undefined (tests relying on
>         downloaded data may be skipped)
>
>         GDAL_RUN_SLOW_TESTS: undefined (tests marked as "slow" will be
>         skipped)
>
>         rootdir: /gdal/build/autotest
>
>         configfile: pytest.ini
>
>         plugins: env-1.1.3, benchmark-4.0.0
>
>         collected 3 items
>
>         ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_point
>         PASSED [ 33%]
>
>         ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_arc
>         PASSED??????????????????????????????????????????????????? [ 66%]
>
>         ogr/ogr_miramon_vector.py::test_ogr_miramon_simple_polygon
>         PASSED [100%]
>
>         ================================================== 3 passed in
>         0.11s ===================================================
>
>         *Abel Pau Garcia*
>
>         *GIS developer*
>
>         	
>
>         https://www.creaf.cat/sites/default/files/creaf-signature.png
>
>         *a.pau at creaf.uab.cat* <mailto:a.pau at creaf.uab.cat>
>
>         *Let's chat on Teams!*
>         <https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
>
>         *Tel. +34 934814277*
>
>         	
>
>         https://www.creaf.cat/sites/default/files/so-en-signature.png
>
>         https://www.creaf.cat/sites/default/files/twitter-icon-signature.png
>         <https://twitter.com/CREAF_ecologia>https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png
>         <https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>https://www.creaf.cat/sites/default/files/youtube-icon-signature.png
>         <https://www.youtube.com/c/creafecologia>https://www.creaf.cat/sites/default/files/instagram-icon-signature.png
>         <https://www.instagram.com/CREAF_ecologia/>
>
>         *www.creaf.cat* <http://www.creaf.cat>*|
>         **http://blog.creaf.cat* <http://blog.creaf.cat>
>
>         	
>
>         https://www.creaf.cat/sites/default/files/uab_logo_signatura.png
>
>         CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)
>
>
>         Before printing this electronic message, think about the
>         environment.
>
>         http://www.creaf.uab.cat/_signatura/line.gif
>
>
>
>         _______________________________________________
>
>         gdal-dev mailing list
>
>         gdal-dev at lists.osgeo.org
>
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>     -- 
>
>     http://www.spatialys.com
>
>     My software is free, but my time generally not.
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/d0a7abb2/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Wed Mar 13 15:30:47 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 13 Mar 2024 22:30:47 +0000
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>
Message-ID: <PAXPR07MB777507E0A04AFBE5E0153EE7A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>

Ok,
meanwhile this is taking on consideration I took care of ?\n?, ?\r? and ?\r\n? to finish the value of a key correctly with a \0.
All errors have disappeared except one. Almost FINE!

I use now Valgrind (very useful indeed, thanks) but I cannot find something useful that reveals the problem in MacOs Action: \r as CR (for unicode) ? AbelPau/gdal at 1f20e88 (github.com)<https://github.com/AbelPau/gdal/actions/runs/8271208701/job/22630450124>

When I run in a docker with Ubuntu 22.04 with valgrind seem that it?s ok (in other stages there were some useful information):
==21710==
==21710== HEAP SUMMARY:
==21710==     in use at exit: 29,003 bytes in 256 blocks
==21710==   total heap usage: 5,865,320 allocs, 5,865,064 frees, 19,927,117,986 bytes allocated
==21710==
==21710== LEAK SUMMARY:
==21710==    definitely lost: 0 bytes in 0 blocks
==21710==    indirectly lost: 0 bytes in 0 blocks
==21710==      possibly lost: 0 bytes in 0 blocks
==21710==    still reachable: 29,003 bytes in 256 blocks
==21710==         suppressed: 0 bytes in 0 blocks
==21710== Reachable blocks (those to which a pointer was found) are not shown.
==21710== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==21710==
==21710== For lists of detected and suppressed errors, rerun with: -s
==21710== ERROR SUMMARY: 26 errors from 3 contexts (suppressed: 0 from 0)

So, do you have any idea how I could reproduce the macOS_build error?

It?s the only mistake now :=o

Thanks for any clue!


De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimecres, 13 de mar? de 2024 17:04
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] There's something strange about two tests that are very similar


My intuition is that reading/writing ini file should be quite straightforward (unless I'm missing some subtelties of the format). In port/cpl_conv.cpp, we have a CPLLoadConfigOptionsFromFile() function that does that in a specific way for the purposes of parsing the GDAL configuration file (https://gdal.org/user/configoptions.html#gdal-configuration-file). But I can imagine we could have a more general std::map<std::string, std::pair<std::string,std::string>> CPLLoadIniFile(const char* pszIniFilename, CSLConstList papszOptions (if needed)) that would return a map of section -> (key, value) pairs.  Regarding an external project, this might be considered but one has to evaluate if there are not downsides (e.g will the effort to make it compile on all platforms and make all analysis tools we use happy not be greater than its benefits)
Le 13/03/2024 ? 15:00, Abel Pau via gdal-dev a ?crit :
Hi again,

MiraMon files have had INI files containing metadata information for ages.

To read and write sections and key/values from them, we use specific Windows functions (https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getprivateprofilestring). When I started programming the driver, I had to create a function to do that as I couldn't use the Windows one.

I suspect that these functions are not accurate and are failing.

Is there any function in GDAL that can read INI files (at least to check if a section exists and to get the value of a key in an existing section)? If not, perhaps using the following could be considered: https://github.com/brofield/simpleini

It seems to have an MIT license... If it's possible to use this parser, what would be the procedure? I noticed that Even added a parser for some command line arguments and perhaps something similar can be done with that.

If not, is it possible for me to add some files in the MiraMonVector driver and use them?

It's better to use something existing and multiplatform than to "reinvent the wheel" with some new function that can fail (in fact, is failing now).

Thanks.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240313/4ae0c0e6/attachment-0001.htm>

From even.rouault at spatialys.com  Wed Mar 13 16:15:38 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2024 00:15:38 +0100
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <PAXPR07MB777507E0A04AFBE5E0153EE7A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>
 <PAXPR07MB777507E0A04AFBE5E0153EE7A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <20bc8e91-9e52-4759-8d4a-c2f69ab2911a@spatialys.com>

try rebasing on top of latest master. It looks like the errors are only 
those fixed per 
https://github.com/OSGeo/gdal/commit/6703d3071de7155d320a39a580f27230428dcaca 


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/c5aa43f1/attachment.htm>

From a.pau at creaf.uab.cat  Wed Mar 13 23:44:00 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 14 Mar 2024 06:44:00 +0000
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <20bc8e91-9e52-4759-8d4a-c2f69ab2911a@spatialys.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>
 <PAXPR07MB777507E0A04AFBE5E0153EE7A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <20bc8e91-9e52-4759-8d4a-c2f69ab2911a@spatialys.com>
Message-ID: <PAXPR07MB777524CFA4BD3017E514F241A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
I rebased yesterday, after your message, but same error appeared and some more.
I rebased al 7.00 again and it seems that there are again some errors in linux builds.

I assume it's because of lasts code updates. I'll wait until something stable to rebase again.

Enviat des de l'Outlook per a l'Android<https://aka.ms/AAb9ysg>
________________________________
From: Even Rouault <even.rouault at spatialys.com>
Sent: Thursday, March 14, 2024 12:15:38 AM
To: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] There's something strange about two tests that are very similar


try rebasing on top of latest master. It looks like the errors are only those fixed per https://github.com/OSGeo/gdal/commit/6703d3071de7155d320a39a580f27230428dcaca

--
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/76c772f2/attachment.htm>

From a.pau at creaf.uab.cat  Thu Mar 14 01:51:24 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 14 Mar 2024 08:51:24 +0000
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <PAXPR07MB777524CFA4BD3017E514F241A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>
 <PAXPR07MB777507E0A04AFBE5E0153EE7A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <20bc8e91-9e52-4759-8d4a-c2f69ab2911a@spatialys.com>
 <PAXPR07MB777524CFA4BD3017E514F241A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB777583682F19FB37E614EC09A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>

Sorry,
I merged from my phone and I think I did it wrong.

At this time actions are going well except the same that didn?t work at the beginning of this message. The MacOS one.
Merge remote-tracking branch 'upstream/master' into MiraMon-Vector-dr? ? AbelPau/gdal at fa6f9e0 (github.com)<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2463>

Your proposal of rebasing didn?t solved the problem in macOS.

So, I?ll try to get an image of a mac and compile, but when I tried to use a Virtual Box it was extremly slow.

Thanks for any input to try to get some call stack with the error described below.
Using gdb I obtain
ogr/ogr_basic_test.py ?                                                                                 100% ??????????

Results (7.72s):
       1 passed
[Inferior 1 (process 15792) exited normally]

And the same with Valgrind.
Thanks!

______________________________ test_ogr_basic_10 _______________________________
2464<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2465>42:
2465<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2466>42: def test_ogr_basic_10():
2466<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2467>42:
2467<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2468>42: import test_cli_utilities
2468<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2469>42:
2469<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2470>42: if test_cli_utilities.get_test_ogrsf_path() is None:
2470<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2471>42: pytest.skip()
2471<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2472>42:
2472<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2473>42: ret = gdaltest.runexternal(
2473<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2474>42: test_cli_utilities.get_test_ogrsf_path() + " -all_drivers"
2474<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2475>42: )
2475<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2476>42:
2476<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2477>42: > assert "INFO" in ret
2477<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2478>42: E AssertionError: assert 'INFO' in '\nERROR ret code = -4'
2478<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2479>42:
2479<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2480>42: /Users/runner/work/gdal/gdal/build/autotest/ogr/ogr_basic_test.py:454: AssertionError


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dijous, 14 de mar? de 2024 7:44
Para: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] There's something strange about two tests that are very similar

Hi,
I rebased yesterday, after your message, but same error appeared and some more.
I rebased al 7.00 again and it seems that there are again some errors in linux builds.

I assume it's because of lasts code updates. I'll wait until something stable to rebase again.

Enviat des de l'Outlook per a l'Android<https://aka.ms/AAb9ysg>
________________________________
From: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Sent: Thursday, March 14, 2024 12:15:38 AM
To: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Subject: Re: [gdal-dev] There's something strange about two tests that are very similar


try rebasing on top of latest master. It looks like the errors are only those fixed per https://github.com/OSGeo/gdal/commit/6703d3071de7155d320a39a580f27230428dcaca

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/d5588f8d/attachment-0001.htm>

From even.rouault at spatialys.com  Thu Mar 14 02:12:59 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2024 10:12:59 +0100
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <PAXPR07MB777583682F19FB37E614EC09A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>
 <PAXPR07MB777507E0A04AFBE5E0153EE7A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <20bc8e91-9e52-4759-8d4a-c2f69ab2911a@spatialys.com>
 <PAXPR07MB777524CFA4BD3017E514F241A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB777583682F19FB37E614EC09A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <9eab720a-8dec-4d8a-8e47-f80caeca5d5c@spatialys.com>

gdb is not going to help for test_ogr_basic_10. As you can see in the 
test, it "runexternal", that is it forks a child process, so gdb isn't 
going to debug this child process by default.

The easiest is to run "test_ogrsf -all_drivers" directly / under gdb / 
under valgrind

Actually, I've just tried that on my system. Nothing under Valgrind, but 
the execution time was quite slow once it reaches the Miramon driver, 
and breaking under gdb, I see the following

INFO: MiraMonVector: Creation of /foo/test.pol should have failed.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to 
assign FID to feature.
^C--Type <RET> for more, q to quit, c to continue without paging--

Thread 1 "test_ogrsf" received signal SIGINT, Interrupt.
__memset_avx2_erms () at 
../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:151
151??? ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S: Aucun 
fichier ou dossier de ce type.
(gdb) bt
#0? __memset_avx2_erms () at 
../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:151
#1? 0x00007ffff5e40ed5 in CPLCalloc (nCount=1, nSize=104857600) at 
/home/even/gdal/MiraMon-Vector-driver/port/cpl_conv.cpp:164
#2? 0x00007ffff6f39a33 in MMMoveFromFileToFile (pSrcFile=0x555555bcd870, 
pDestFile=0x5555562b3b90, nOffset=0x5555561f3990)
 ??? at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:2693
#3? 0x00007ffff6f388fb in MMCloseArcLayer (hMiraMonLayer=0x5555561e4f90) 
at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:2150
#4? 0x00007ffff6f38dc5 in MMCloseLayer (hMiraMonLayer=0x5555561e4f90) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:2283
#5? 0x00007ffff6f2d955 in OGRMiraMonLayer::~OGRMiraMonLayer 
(this=0x5555561d5aa0, __in_chrg=<optimized out>) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:535
#6? 0x00007ffff6f2de22 in OGRMiraMonLayer::~OGRMiraMonLayer 
(this=0x5555561d5aa0, __in_chrg=<optimized out>) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:619
#7? 0x00007ffff6f2af7a in OGRMiraMonDataSource::~OGRMiraMonDataSource 
(this=0x555556265cb0, __in_chrg=<optimized out>)
 ??? at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp:50
#8? 0x00007ffff6f2b014 in OGRMiraMonDataSource::~OGRMiraMonDataSource 
(this=0x555556265cb0, __in_chrg=<optimized out>)
 ??? at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp:57
#9? 0x00007ffff73d61a3 in GDALClose (hDS=0x555556265cb0) at 
/home/even/gdal/MiraMon-Vector-driver/gcore/gdaldataset.cpp:4128
#10 0x000055555555e167 in TestCreateLayer (poDriver=0x55555564e3f0, 
eGeomType=wkbMultiPoint) at 
/home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:977
#11 0x000055555555ec61 in TestCreate (poDriver=0x55555564e3f0, 
bFromAllDrivers=1) at 
/home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:1094
#12 0x000055555555bd56 in ThreadFunctionInternal 
(psContext=0x7fffffffdb60) at 
/home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:325
#13 0x000055555555bc26 in ThreadFunction (user_data=0x7fffffffdb60) at 
/home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:283
#14 0x000055555555ba62 in main (nArgc=2, papszArgv=0x5555556521b0) at 
/home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:233

Actually looking at your MMMoveFromFileToFile(), I see it is allocating 
a working buffer of 100 MB. That's much larger than what you really 
need. A buffer of 64 KB or so would be equally performant. This function 
might also leak the buffer at line 2705.

"INFO: MiraMonVector: Creation of /foo/test.pol should have failed." 
also indicates some logic error in your driver.

and

$ gdb --args ogr2ogr /foo/test.pol autotest/ogr/data/poly.shp

crashes at

ERROR 4: Error pMMPolygonLayer->pF: Cannot open file /foo/test.pol.

Program received signal SIGSEGV, Segmentation fault.
MMAddArcRecordToMMDB (hMiraMonLayer=0x7fffebbe48f0, 
hMMFeature=0x7fffebc030d0, nElemCount=0, pArcHeader=0x555555af3940) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:6602
6602 pMMArcLayer->MMAdmDB.pMMBDXP->nRecords + 1))
(gdb) bt
#0? MMAddArcRecordToMMDB (hMiraMonLayer=0x7fffebbe48f0, 
hMMFeature=0x7fffebc030d0, nElemCount=0, pArcHeader=0x555555af3940)
 ??? at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:6602
#1? 0x00007ffff6f3ccd6 in MMCreateFeaturePolOrArc 
(hMiraMonLayer=0x7fffebbe48f0, hMMFeature=0x7fffebc030d0) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:4112
#2? 0x00007ffff6f3de4e in MMAddFeature (hMiraMonLayer=0x7fffebbe48f0, 
hMiraMonFeature=0x7fffebc030d0) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:4598
#3? 0x00007ffff6f31787 in OGRMiraMonLayer::MMWriteGeometry 
(this=0x7fffebbc6010) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1718
#4? 0x00007ffff6f30e01 in OGRMiraMonLayer::MMProcessGeometry 
(this=0x7fffebbc6010, hGeom=0x555555a30e10, poFeature=0x555555a2d7c0, 
bcalculateRecord=1 '\001')
 ??? at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1497
#5? 0x00007ffff6f30a8c in OGRMiraMonLayer::MMProcessMultiGeometry 
(this=0x7fffebbc6010, hGeom=0x555555a30e10, poFeature=0x555555a2d7c0)
 ??? at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1389
#6? 0x00007ffff6f31027 in OGRMiraMonLayer::ICreateFeature 
(this=0x7fffebbc6010, poFeature=0x555555a2d7c0) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1549
#7? 0x00007ffff735ec23 in OGRLayer::CreateFeature (this=0x7fffebbc6010, 
poFeature=0x555555a2d7c0) at 
/home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/generic/ogrlayer.cpp:733
#8? 0x00007ffff75c45fc in LayerTranslator::Translate 
(this=0x7fffffffd9a0, poFeatureIn=0x0, psInfo=0x555555a2b700, 
nCountLayerFeatures=0, pnReadFeatureCount=0x0, 
nTotalEventsDone=@0x7fffffffd618: 0,
 ??? pfnProgress=0x0, pProgressArg=0x0, psOptions=0x555555640dc0) at 
/home/even/gdal/MiraMon-Vector-driver/apps/ogr2ogr_lib.cpp:6292
#9? 0x00007ffff75b9d7b in GDALVectorTranslate (pszDest=0x555555640348 
"/foo/test.pol", hDstDS=0x0, nSrcCount=1, pahSrcDS=0x7fffffffdaf0, 
psOptionsIn=0x5555556403c0, pbUsageError=0x7fffffffdadc)
 ??? at /home/even/gdal/MiraMon-Vector-driver/apps/ogr2ogr_lib.cpp:3459
#10 0x000055555555a730 in main (nArgc=3, papszArgv=0x5555556401b0) at 
/home/even/gdal/MiraMon-Vector-driver/apps/ogr2ogr_bin.cpp:451

By the way, you might want to rebase again against latest master. I've 
just merged https://github.com/OSGeo/gdal/pull/9454 which re-activate 
the ASAN job that I had disabled yesterday night. We had some flakiness 
lately with the ASAN job. hopefully it is more stable now...

Le 14/03/2024 ? 09:51, Abel Pau a ?crit?:
>
> Sorry,
>
> I merged from my phone and I think I did it wrong.
>
> At this time actions are going well except the same that didn?t work 
> at the beginning of this message. The MacOS one.
>
> Merge remote-tracking branch 'upstream/master' into MiraMon-Vector-dr? 
> ? AbelPau/gdal at fa6f9e0 (github.com) 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2463>
>
> Your proposal of rebasing didn?t solved the problem in macOS.
>
> So, I?ll try to get an image of a mac and compile, but when I tried to 
> use a Virtual Box it was extremly slow.
>
> Thanks for any input to try to get some call stack with the error 
> described below.
>
> Using gdb I obtain
>
> ogr/ogr_basic_test.py ?100% ??????????
>
> Results (7.72s):
>
> ?????? 1 passed
>
> [Inferior 1 (process 15792) exited normally]
>
> And the same with Valgrind.
>
> Thanks!
>
> ______________________________ test_ogr_basic_10 
> _______________________________
>
> 2464 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2465>42: 
>
>
> 2465 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2466>42: 
> def test_ogr_basic_10():
>
> 2466 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2467>42: 
>
>
> 2467 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2468>42: 
> import test_cli_utilities
>
> 2468 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2469>42: 
>
>
> 2469 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2470>42: 
> if test_cli_utilities.get_test_ogrsf_path() is None:
>
> 2470 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2471>42: 
> pytest.skip()
>
> 2471 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2472>42: 
>
>
> 2472 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2473>42: 
> ret = gdaltest.runexternal(
>
> 2473 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2474>42: 
> test_cli_utilities.get_test_ogrsf_path() + " -all_drivers"
>
> 2474 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2475>42: 
> )
>
> 2475 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2476>42: 
>
>
> 2476 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2477>42: 
> > assert "INFO" in ret
>
> 2477 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2478>42: 
> E AssertionError: assert 'INFO' in '\nERROR ret code = -4'
>
> 2478 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2479>42: 
>
>
> 2479 
> <https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2480>42: 
> /Users/runner/work/gdal/gdal/build/autotest/ogr/ogr_basic_test.py:454: 
> AssertionError
>
> *De:*gdal-dev <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Abel 
> Pau via gdal-dev
> *Enviado el:* dijous, 14 de mar? de 2024 7:44
> *Para:* Even Rouault <even.rouault at spatialys.com>; 
> gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] There's something strange about two tests 
> that are very similar
>
> Hi,
>
> I rebased yesterday, after your message, but same error appeared and 
> some more.
>
> I rebased al 7.00 again and it seems that there are again some errors 
> in linux builds.
>
> I assume it's because of lasts code updates. I'll wait until something 
> stable to rebase again.
>
> Enviat des de l'Outlook per a l'Android <https://aka.ms/AAb9ysg>
>
> ------------------------------------------------------------------------
>
> *From:*Even Rouault <even.rouault at spatialys.com 
> <mailto:even.rouault at spatialys.com>>
> *Sent:* Thursday, March 14, 2024 12:15:38 AM
> *To:* Abel Pau <a.pau at creaf.uab.cat <mailto:a.pau at creaf.uab.cat>>; 
> gdal-dev at lists.osgeo.org 
> <mailto:gdal-dev at lists.osgeo.org><gdal-dev at lists.osgeo.org 
> <mailto:gdal-dev at lists.osgeo.org>>
> *Subject:* Re: [gdal-dev] There's something strange about two tests 
> that are very similar
>
> try rebasing on top of latest master. It looks like the errors are 
> only those fixed per 
> https://github.com/OSGeo/gdal/commit/6703d3071de7155d320a39a580f27230428dcaca 
>
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/30309143/attachment-0001.htm>

From fengting.chen at oracle.com  Thu Mar 14 08:47:02 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Thu, 14 Mar 2024 15:47:02 +0000
Subject: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed
 at linking
In-Reply-To: <37e89c03-997c-46e7-a1cb-2f576efd5153@spatialys.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
 <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <37e89c03-997c-46e7-a1cb-2f576efd5153@spatialys.com>
Message-ID: <PH0PR10MB706152FE70462BD16683828C93292@PH0PR10MB7061.namprd10.prod.outlook.com>

After upgrading the windows build environment to VS2022, I got the following linker error:

vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct jpeg_decompress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_dest(struct jpeg_compress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
     Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and object C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169: one or more multiply defined symbols found [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]

I set ?GDAL_USE_JPEG_INTERNAL?  with ?ON?. Any suggestions?

Thanks!

From: Even Rouault <even.rouault at spatialys.com>
Date: Tuesday, March 12, 2024 at 12:56?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed at linking

Not the answer you'll probably want to hear, but:

- Use an up-to-date compiler

- Use package distributions like vcpkg or conda-forge that already brings all the dependencies "for free"

- It seems you mix builds of different compilers (VS vs mingw). That's a bit asking for troubles ;-)
Le 12/03/2024 ? 17:48, Fengting Chen via gdal-dev a ?crit :
Resend with more information:

I am trying to build GDAL 3.8.4 on windows under VS2015. The build failed at linking stage that a bunch of external symbols not found, specifically the symbols in libproj, libcurl. I checked the dll library stub .lib for libproj and libcurl using ?dumpbin? and found the symbols in the library a little different, for example the linker error shows ?__imp__curl_slist_append? not found, the symbol output from the ?dumpbin? is  ?__imp_curl_slist_append? .

Any idea how to fix this?

Thanks!

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of Fengting Chen via gdal-dev <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Date: Monday, March 11, 2024 at 4:50?PM
To: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: [External] : [gdal-dev] GDAL 3.8.4 build on windows failed at linking
GDAL 3.8.4 build on Windows from VS2015 x64 command prompt: ?cmake ?build .? throws the following error (there are more similar errors):

cpl_vsil_az.obj : error LNK2001: unresolved external symbol __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]

cmake options has:

set (GDAL_USE_CURL                ON   CACHE  BOOL "" FORCE)
set (CURL_INCLUDE_DIR             "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE PATH "" FORCE)
set (CURL_LIBRARY_RELEASE         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE FILEPATH "" FORCE)

libcurl-x64.lib is the DLL stub. Using dumpbin on libcurl-x64.lib shows that ?__imp_curl_slist_append? is available. But the linker error is ?__imp__curl_slist_append? not found. There is an extra ?_? in it.

Any idea why this error occurred?

Thanks!





_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev<https://urldefense.com/v3/__https:/lists.osgeo.org/mailman/listinfo/gdal-dev__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3RxpGPNVk$>

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3R_bZl290$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/f7423ee3/attachment-0001.htm>

From even.rouault at spatialys.com  Thu Mar 14 08:52:16 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2024 16:52:16 +0100
Subject: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed
 at linking
In-Reply-To: <PH0PR10MB706152FE70462BD16683828C93292@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
 <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <37e89c03-997c-46e7-a1cb-2f576efd5153@spatialys.com>
 <PH0PR10MB706152FE70462BD16683828C93292@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <a8ba7c4e-cdfb-4e45-a52c-ba4ecc2ca367@spatialys.com>

Hi,

possibly already fixed in master with commit 
https://github.com/OSGeo/gdal/commit/849226ce1a9

Even

Le 14/03/2024 ? 16:47, Fengting Chen a ?crit?:
>
> After upgrading the windows build environment to VS2022, I got the 
> following linker error:
>
> vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct 
> jpeg_decompress_struct *,struct VSIVirtualHandle *)" 
> (?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z) 
> already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
> vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_dest(struct 
> jpeg_compress_struct *,struct VSIVirtualHandle *)" 
> (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z) 
> already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
> Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and object 
> C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
>
> C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169: one 
> or more multiply defined symbols found 
> [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
> I set ?GDAL_USE_JPEG_INTERNAL?? with ?ON?. Any suggestions?
>
> Thanks!
>
> *From: *Even Rouault <even.rouault at spatialys.com>
> *Date: *Tuesday, March 12, 2024 at 12:56?PM
> *To: *Fengting Chen <fengting.chen at oracle.com>, 
> gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
> *Subject: *Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows 
> failed at linking
>
> Not the answer you'll probably want to hear, but:
>
> - Use an up-to-date compiler
>
> - Use package distributions like vcpkg or conda-forge that already 
> brings all the dependencies "for free"
>
> - It seems you mix builds of different compilers (VS vs mingw). That's 
> a bit asking for troubles ;-)
>
> Le 12/03/2024 ? 17:48, Fengting Chen via gdal-dev a ?crit?:
>
>     Resend with more information:
>
>     I am trying to build GDAL 3.8.4 on windows under VS2015. The build
>     failed at linking stage that a bunch of external symbols not
>     found, specifically the symbols in libproj, libcurl. I checked the
>     dll library stub .lib for libproj and libcurl using ?dumpbin? and
>     found the symbols in the library a little different, for example
>     the linker error shows ?__imp__curl_slist_append? not found, the
>     symbol output from the ?dumpbin? is ??__imp_curl_slist_append? .
>
>     Any idea how to fix this?
>
>     Thanks!
>
>     *From: *gdal-dev <gdal-dev-bounces at lists.osgeo.org>
>     <mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of Fengting
>     Chen via gdal-dev <gdal-dev at lists.osgeo.org>
>     <mailto:gdal-dev at lists.osgeo.org>
>     *Date: *Monday, March 11, 2024 at 4:50?PM
>     *To: *gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
>     <mailto:gdal-dev at lists.osgeo.org>
>     *Subject: *[External] : [gdal-dev] GDAL 3.8.4 build on windows
>     failed at linking
>
>     GDAL 3.8.4 build on Windows from VS2015 x64 command prompt: ?cmake
>     ?build .? throws the following error (there are more similar errors):
>
>     cpl_vsil_az.obj : error LNK2001: unresolved external symbol
>     __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]
>
>     cmake options has:
>
>     set (GDAL_USE_CURL??????????????? ON?? CACHE? BOOL "" FORCE)
>
>     set (CURL_INCLUDE_DIR "E:/SDK/curl-8.6.0_1-win64-mingw/include"
>     CACHE PATH "" FORCE)
>
>     set (CURL_LIBRARY_RELEASE
>     "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE
>     FILEPATH "" FORCE)
>
>     libcurl-x64.lib is the DLL stub. Using dumpbin on libcurl-x64.lib
>     shows that ?__imp_curl_slist_append? is available. But the linker
>     error is ?__imp__curl_slist_append? not found. There is an extra
>     ?_? in it.
>
>     Any idea why this error occurred?
>
>     Thanks!
>
>
>
>     _______________________________________________
>
>     gdal-dev mailing list
>
>     gdal-dev at lists.osgeo.org
>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev  <https://urldefense.com/v3/__https:/lists.osgeo.org/mailman/listinfo/gdal-dev__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3RxpGPNVk$>
>
> -- 
> http://www.spatialys.com  <https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3R_bZl290$>
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/9d22bfaf/attachment.htm>

From a.pau at creaf.uab.cat  Thu Mar 14 10:11:58 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 14 Mar 2024 17:11:58 +0000
Subject: [gdal-dev] There's something strange about two tests that are
 very similar
In-Reply-To: <9eab720a-8dec-4d8a-8e47-f80caeca5d5c@spatialys.com>
References: <PAXPR07MB7775BF082C40C3292499F744A22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <095c9f66-9a81-4845-91a2-3cbe64ade5be@spatialys.com>
 <PAXPR07MB777524B3123563CB91ECC23CA22B2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <db4df611-b097-4df8-8267-c6a661c92f1a@spatialys.com>
 <PAXPR07MB7775D4DA1E91FB67DC32E9B9A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB7775D7D071D880A9A831826FA22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <a6c04956-f6ca-46c0-9469-3c8673ec49af@spatialys.com>
 <PAXPR07MB777507E0A04AFBE5E0153EE7A22A2@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <20bc8e91-9e52-4759-8d4a-c2f69ab2911a@spatialys.com>
 <PAXPR07MB777524CFA4BD3017E514F241A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB777583682F19FB37E614EC09A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <9eab720a-8dec-4d8a-8e47-f80caeca5d5c@spatialys.com>
Message-ID: <PAXPR07MB77751204E8EB8DE9585C1628A2292@PAXPR07MB7775.eurprd07.prod.outlook.com>

Thanks Even,
your feedback helped a lot.

De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dijous, 14 de mar? de 2024 10:13
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] There's something strange about two tests that are very similar


gdb is not going to help for test_ogr_basic_10. As you can see in the test, it "runexternal", that is it forks a child process, so gdb isn't going to debug this child process by default.

The easiest is to run "test_ogrsf -all_drivers" directly / under gdb / under valgrind

Actually, I've just tried that on my system. Nothing under Valgrind, but the execution time was quite slow once it reaches the Miramon driver, and breaking under gdb, I see the following

INFO: MiraMonVector: Creation of /foo/test.pol should have failed.
INFO: MiraMonVector: CreateFeature() at line 780 succeeded but failed to assign FID to feature.
^C--Type <RET> for more, q to quit, c to continue without paging--

Thread 1 "test_ogrsf" received signal SIGINT, Interrupt.
__memset_avx2_erms () at ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:151
151    ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S: Aucun fichier ou dossier de ce type.
(gdb) bt
#0  __memset_avx2_erms () at ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:151
#1  0x00007ffff5e40ed5 in CPLCalloc (nCount=1, nSize=104857600) at /home/even/gdal/MiraMon-Vector-driver/port/cpl_conv.cpp:164
#2  0x00007ffff6f39a33 in MMMoveFromFileToFile (pSrcFile=0x555555bcd870, pDestFile=0x5555562b3b90, nOffset=0x5555561f3990)
    at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:2693
#3  0x00007ffff6f388fb in MMCloseArcLayer (hMiraMonLayer=0x5555561e4f90) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:2150
#4  0x00007ffff6f38dc5 in MMCloseLayer (hMiraMonLayer=0x5555561e4f90) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:2283
#5  0x00007ffff6f2d955 in OGRMiraMonLayer::~OGRMiraMonLayer (this=0x5555561d5aa0, __in_chrg=<optimized out>) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:535
#6  0x00007ffff6f2de22 in OGRMiraMonLayer::~OGRMiraMonLayer (this=0x5555561d5aa0, __in_chrg=<optimized out>) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:619
#7  0x00007ffff6f2af7a in OGRMiraMonDataSource::~OGRMiraMonDataSource (this=0x555556265cb0, __in_chrg=<optimized out>)
    at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp:50
#8  0x00007ffff6f2b014 in OGRMiraMonDataSource::~OGRMiraMonDataSource (this=0x555556265cb0, __in_chrg=<optimized out>)
    at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramondatasource.cpp:57
#9  0x00007ffff73d61a3 in GDALClose (hDS=0x555556265cb0) at /home/even/gdal/MiraMon-Vector-driver/gcore/gdaldataset.cpp:4128
#10 0x000055555555e167 in TestCreateLayer (poDriver=0x55555564e3f0, eGeomType=wkbMultiPoint) at /home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:977
#11 0x000055555555ec61 in TestCreate (poDriver=0x55555564e3f0, bFromAllDrivers=1) at /home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:1094
#12 0x000055555555bd56 in ThreadFunctionInternal (psContext=0x7fffffffdb60) at /home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:325
#13 0x000055555555bc26 in ThreadFunction (user_data=0x7fffffffdb60) at /home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:283
#14 0x000055555555ba62 in main (nArgc=2, papszArgv=0x5555556521b0) at /home/even/gdal/MiraMon-Vector-driver/apps/test_ogrsf.cpp:233

Actually looking at your MMMoveFromFileToFile(), I see it is allocating a working buffer of 100 MB. That's much larger than what you really need. A buffer of 64 KB or so would be equally performant. This function might also leak the buffer at line 2705.

"INFO: MiraMonVector: Creation of /foo/test.pol should have failed." also indicates some logic error in your driver.

and

$ gdb --args ogr2ogr /foo/test.pol autotest/ogr/data/poly.shp

crashes at

ERROR 4: Error pMMPolygonLayer->pF: Cannot open file /foo/test.pol.

Program received signal SIGSEGV, Segmentation fault.
MMAddArcRecordToMMDB (hMiraMonLayer=0x7fffebbe48f0, hMMFeature=0x7fffebc030d0, nElemCount=0, pArcHeader=0x555555af3940) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:6602
6602                                     pMMArcLayer->MMAdmDB.pMMBDXP->nRecords + 1))
(gdb) bt
#0  MMAddArcRecordToMMDB (hMiraMonLayer=0x7fffebbe48f0, hMMFeature=0x7fffebc030d0, nElemCount=0, pArcHeader=0x555555af3940)
    at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:6602
#1  0x00007ffff6f3ccd6 in MMCreateFeaturePolOrArc (hMiraMonLayer=0x7fffebbe48f0, hMMFeature=0x7fffebc030d0) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:4112
#2  0x00007ffff6f3de4e in MMAddFeature (hMiraMonLayer=0x7fffebbe48f0, hMiraMonFeature=0x7fffebc030d0) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/mm_wrlayr.c:4598
#3  0x00007ffff6f31787 in OGRMiraMonLayer::MMWriteGeometry (this=0x7fffebbc6010) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1718
#4  0x00007ffff6f30e01 in OGRMiraMonLayer::MMProcessGeometry (this=0x7fffebbc6010, hGeom=0x555555a30e10, poFeature=0x555555a2d7c0, bcalculateRecord=1 '\001')
    at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1497
#5  0x00007ffff6f30a8c in OGRMiraMonLayer::MMProcessMultiGeometry (this=0x7fffebbc6010, hGeom=0x555555a30e10, poFeature=0x555555a2d7c0)
    at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1389
#6  0x00007ffff6f31027 in OGRMiraMonLayer::ICreateFeature (this=0x7fffebbc6010, poFeature=0x555555a2d7c0) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/miramon/ogrmiramonlayer.cpp:1549
#7  0x00007ffff735ec23 in OGRLayer::CreateFeature (this=0x7fffebbc6010, poFeature=0x555555a2d7c0) at /home/even/gdal/MiraMon-Vector-driver/ogr/ogrsf_frmts/generic/ogrlayer.cpp:733
#8  0x00007ffff75c45fc in LayerTranslator::Translate (this=0x7fffffffd9a0, poFeatureIn=0x0, psInfo=0x555555a2b700, nCountLayerFeatures=0, pnReadFeatureCount=0x0, nTotalEventsDone=@0x7fffffffd618: 0,
    pfnProgress=0x0, pProgressArg=0x0, psOptions=0x555555640dc0) at /home/even/gdal/MiraMon-Vector-driver/apps/ogr2ogr_lib.cpp:6292
#9  0x00007ffff75b9d7b in GDALVectorTranslate (pszDest=0x555555640348 "/foo/test.pol", hDstDS=0x0, nSrcCount=1, pahSrcDS=0x7fffffffdaf0, psOptionsIn=0x5555556403c0, pbUsageError=0x7fffffffdadc)
    at /home/even/gdal/MiraMon-Vector-driver/apps/ogr2ogr_lib.cpp:3459
#10 0x000055555555a730 in main (nArgc=3, papszArgv=0x5555556401b0) at /home/even/gdal/MiraMon-Vector-driver/apps/ogr2ogr_bin.cpp:451

By the way, you might want to rebase again against latest master. I've just merged https://github.com/OSGeo/gdal/pull/9454 which re-activate the ASAN job that I had disabled yesterday night. We had some flakiness lately with the ASAN job. hopefully it is more stable now...
Le 14/03/2024 ? 09:51, Abel Pau a ?crit :
Sorry,
I merged from my phone and I think I did it wrong.

At this time actions are going well except the same that didn?t work at the beginning of this message. The MacOS one.
Merge remote-tracking branch 'upstream/master' into MiraMon-Vector-dr? ? AbelPau/gdal at fa6f9e0 (github.com)<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2463>

Your proposal of rebasing didn?t solved the problem in macOS.

So, I?ll try to get an image of a mac and compile, but when I tried to use a Virtual Box it was extremly slow.

Thanks for any input to try to get some call stack with the error described below.
Using gdb I obtain
ogr/ogr_basic_test.py ?                                                                                 100% ??????????

Results (7.72s):
       1 passed
[Inferior 1 (process 15792) exited normally]

And the same with Valgrind.
Thanks!

______________________________ test_ogr_basic_10 _______________________________
2464<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2465>42:
2465<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2466>42: def test_ogr_basic_10():
2466<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2467>42:
2467<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2468>42: import test_cli_utilities
2468<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2469>42:
2469<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2470>42: if test_cli_utilities.get_test_ogrsf_path() is None:
2470<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2471>42: pytest.skip()
2471<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2472>42:
2472<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2473>42: ret = gdaltest.runexternal(
2473<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2474>42: test_cli_utilities.get_test_ogrsf_path() + " -all_drivers"
2474<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2475>42: )
2475<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2476>42:
2476<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2477>42: > assert "INFO" in ret
2477<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2478>42: E AssertionError: assert 'INFO' in '\nERROR ret code = -4'
2478<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2479>42:
2479<https://github.com/AbelPau/gdal/actions/runs/8277097153/job/22646788426#step:6:2480>42: /Users/runner/work/gdal/gdal/build/autotest/ogr/ogr_basic_test.py:454: AssertionError


De: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> En nombre de Abel Pau via gdal-dev
Enviado el: dijous, 14 de mar? de 2024 7:44
Para: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] There's something strange about two tests that are very similar

Hi,
I rebased yesterday, after your message, but same error appeared and some more.
I rebased al 7.00 again and it seems that there are again some errors in linux builds.

I assume it's because of lasts code updates. I'll wait until something stable to rebase again.

Enviat des de l'Outlook per a l'Android<https://aka.ms/AAb9ysg>
________________________________
From: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Sent: Thursday, March 14, 2024 12:15:38 AM
To: Abel Pau <a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Subject: Re: [gdal-dev] There's something strange about two tests that are very similar


try rebasing on top of latest master. It looks like the errors are only those fixed per https://github.com/OSGeo/gdal/commit/6703d3071de7155d320a39a580f27230428dcaca

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/8ea28379/attachment-0001.htm>

From robin at rtwilson.com  Thu Mar 14 10:28:59 2024
From: robin at rtwilson.com (Robin Wilson)
Date: Thu, 14 Mar 2024 17:28:59 +0000
Subject: [gdal-dev] Hanging (or very slow) when ogr2ogr appending to PostGIS
 table
Message-ID: <etPan.65f333e1.4b45c336.53d@rtwilson.com>

Hi,

I?ve been using ogr2ogr to import vector datasets into PostGIS tables.

I originally tried this using a local Postgres server, and ran the following commands to import one file into a PostGIS table, and then append the contents of another file to the same table:

ogr2ogr --debug ON -f PostgreSQL PG:?host=localhost user=postgres password=blah dbname=test_db" buildings1.gpkg -nln ogr_test
ogr2ogr -append -update --debug ON -f PostgreSQL PG:?host=localhost user=postgres password=blah dbname=test_db" buildings2.gpkg -nln ogr_test

This works fine, and both commands run quickly.

I then tried the same thing, but with a PostGIS server hosted on Azure. Obviously I expect things to take longer when accessing across the internet, but this time the first command completed quickly, but the second command seems to hang. Looking at the debug output, it shows:

GPKG: GeoPackage v1.2.0
GDAL: GDALOpen(buildings2.gpkg, this=0x131011800) succeeds as GPKG.
PG: Client encoding: 'UTF8'
PG: PostGIS schema: 'public'
PG: PostgreSQL version string : 'PostgreSQL 15.4 on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0, 64-bit'
PG: PostGIS version string : '3.3 USE_GEOS=1 USE_PROJ=1 USE_STATS=1'
GDAL: GDALOpen(PG:<connection string>, this=0x140f25850) succeeds as PostgreSQL.
PG: Primary key name (FID): fid, type : int4
PG: Using column 'fid' as FID for table 'ogr_test'
OGR2OGR: Using WriteArrowBatch()

and then nothing else.

I?m intrigued as to why it seems to hang, and what it is doing, or trying to do. I?ve tried adding buildings2.gpkg to a new table on the Azure PostGIS server and it completes very quickly, so it?s not just that buildings2 is larger and takes a long time to upload. Similarly, merging the two buildings files with ogrmerge.py and then running the ogr2ogr command to import to PostGIS also works, and runs quickly.

I?m also intrigued as to why this only seems to be happening with the Azure server - is there some configuration option I need to set? I?ve tried connecting as the ?postgres? root user, so it shouldn?t be a permissions issue.

Any ideas or suggestions of things to try?

Any help gratefully received,

Best regards,

Robin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/8c3b7e7d/attachment.htm>

From even.rouault at spatialys.com  Thu Mar 14 10:54:02 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2024 18:54:02 +0100
Subject: [gdal-dev] Hanging (or very slow) when ogr2ogr appending to
 PostGIS table
In-Reply-To: <etPan.65f333e1.4b45c336.53d@rtwilson.com>
References: <etPan.65f333e1.4b45c336.53d@rtwilson.com>
Message-ID: <5e452a3e-61b2-4ff2-b878-a1cb17cdc544@spatialys.com>

Robin,

- output of "gdalinfo --version" ?

- try adding ``--config PG_USE_COPY YES`` to? the command line where you 
append to the existing table. Cf 
https://gdal.org/drivers/vector/pg.html#configuration-options (copy mode 
is enabled by default at table creation, but not in append scenarios)

- if the above didn't help, try also setting ``--config 
OGR2OGR_USE_ARROW_API NO`` (please report if that makes a difference)

Even

Le 14/03/2024 ? 18:28, Robin Wilson via gdal-dev a ?crit?:
> Hi,
>
> I?ve been using ogr2ogr to import vector datasets into PostGIS tables.
>
> I originally tried this using a local Postgres server, and ran the 
> following commands to import one file into a PostGIS table, and then 
> append the contents of another file to the same table:
>
> ogr2ogr --debug ON -f PostgreSQL PG:?host=localhost user=postgres 
> password=blah dbname=test_db" buildings1.gpkg -nln ogr_test
> ogr2ogr -append -update --debug ON -f PostgreSQL PG:?host=localhost 
> user=postgres password=blah dbname=test_db" buildings2.gpkg -nln ogr_test
>
> This works fine, and both commands run quickly.
>
> I then tried the same thing, but with a PostGIS server hosted on 
> Azure. Obviously I expect things to take longer when accessing across 
> the internet, but this time the first command completed quickly, but 
> the second command seems to hang. Looking at the debug output, it shows:
>
> GPKG: GeoPackage v1.2.0
> GDAL: GDALOpen(buildings2.gpkg, this=0x131011800) succeeds as GPKG.
> PG: Client encoding: 'UTF8'
> PG: PostGIS schema: 'public'
> PG: PostgreSQL version string : 'PostgreSQL 15.4 on 
> x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 
> 7.5.0, 64-bit'
> PG: PostGIS version string : '3.3 USE_GEOS=1 USE_PROJ=1 USE_STATS=1'
> GDAL: GDALOpen(PG:<connection string>, this=0x140f25850) succeeds as 
> PostgreSQL.
> PG: Primary key name (FID): fid, type : int4
> PG: Using column 'fid' as FID for table 'ogr_test'
> OGR2OGR: Using WriteArrowBatch()
>
> and then nothing else.
>
> I?m intrigued as to why it seems to hang, and what it is doing, or 
> trying to do. I?ve tried adding buildings2.gpkg to a new table on the 
> Azure PostGIS server and it completes very quickly, so it?s not just 
> that buildings2 is larger and takes a long time to upload. Similarly, 
> merging the two buildings files with ogrmerge.py and then running the 
> ogr2ogr command to import to PostGIS also works, and runs quickly.
>
> I?m also intrigued as to why this only seems to be happening with the 
> Azure server - is there some configuration option I need to set? I?ve 
> tried connecting as the ?postgres? root user, so it shouldn?t be a 
> permissions issue.
>
> Any ideas or suggestions of things to try?
>
> Any help gratefully received,
>
> Best regards,
>
> Robin
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/df14643a/attachment.htm>

From even.rouault at spatialys.com  Thu Mar 14 11:14:12 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2024 19:14:12 +0100
Subject: [gdal-dev] Hanging (or very slow) when ogr2ogr appending to
 PostGIS table
In-Reply-To: <etPan.65f33aae.280a1aa4.53d@rtwilson.com>
References: <etPan.65f333e1.4b45c336.53d@rtwilson.com>
 <5e452a3e-61b2-4ff2-b878-a1cb17cdc544@spatialys.com>
 <etPan.65f33aae.280a1aa4.53d@rtwilson.com>
Message-ID: <365711ce-40e1-42b0-a096-3a632a2710be@spatialys.com>

(re-adding list)

Le 14/03/2024 ? 18:58, Robin Wilson a ?crit?:
> Hi Even,
>
> Perfect - adding ?config PG_USE_COPY YES solved it. I?ll write a blog 
> post about this that hopefully will be found by someone with the same 
> issue in future.
You may also suggest documentation enhancement to 
https://gdal.org/drivers/vector/pg.html . There's the convenient "Edit 
on GitHub" button at the top right
>
> For context, is there a particular reason why this is only enabled by 
> default when you?re creating a new table?

Yes, this is related to unique identifiers. At table creation, one can 
make the reasonable expectation that no other process will concurrently 
update the table since it didn't exist before. When updating/appending, 
that hypothesis is less likely, hence it is safer to fallback to the 
slower INSERT mode. I presume in the Azure context that you have a 
client->server->client round-trip at each feature insertion.

>
> For what it?s worth, I was running this on GDAL 3.8.3 - I checked it 
> was recent, but forgot to include it in my first email.
>
> Thanks,
>
> Robin
>

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/8e6c6275/attachment.htm>

From fengting.chen at oracle.com  Thu Mar 14 11:27:32 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Thu, 14 Mar 2024 18:27:32 +0000
Subject: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed
 at linking
In-Reply-To: <a8ba7c4e-cdfb-4e45-a52c-ba4ecc2ca367@spatialys.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
 <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <37e89c03-997c-46e7-a1cb-2f576efd5153@spatialys.com>
 <PH0PR10MB706152FE70462BD16683828C93292@PH0PR10MB7061.namprd10.prod.outlook.com>
 <a8ba7c4e-cdfb-4e45-a52c-ba4ecc2ca367@spatialys.com>
Message-ID: <PH0PR10MB7061515D707822F7FAF11CB093292@PH0PR10MB7061.namprd10.prod.outlook.com>

I included this fix but it doesn?t help. I was building the georaster driver as a plugin but the linker failed at building gdal library. So the fix doesn?t seem to be related to the problem.

Building Custom Rule C:/fechen/gdal-3.8.4/CMakeLists.txt
vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct jpeg_decompress_struct *,struct VSIVirtualHandle *)"
(?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_dest(struct jpeg_compress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
     Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and object C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169: one or more multiply defined symbols found [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]

From: Even Rouault <even.rouault at spatialys.com>
Date: Thursday, March 14, 2024 at 11:52?AM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed at linking

Hi,

possibly already fixed in master with commit https://github.com/OSGeo/gdal/commit/849226ce1a9<https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/commit/849226ce1a9__;!!ACWV5N9M2RV99hQ!KbMOD2u6nEacIP2ix07m6Y00zYu21fPOi8h2u_p-cjBCRSh9U8hYhTmK3txq5tv2LAvFBFXNfErVwdiaD9U8YKKFUCjQ$>

Even
Le 14/03/2024 ? 16:47, Fengting Chen a ?crit :
After upgrading the windows build environment to VS2022, I got the following linker error:

vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct jpeg_decompress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_dest(struct jpeg_compress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
     Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and object C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169: one or more multiply defined symbols found [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]

I set ?GDAL_USE_JPEG_INTERNAL?  with ?ON?. Any suggestions?

Thanks!

From: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Date: Tuesday, March 12, 2024 at 12:56?PM
To: Fengting Chen <fengting.chen at oracle.com><mailto:fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed at linking

Not the answer you'll probably want to hear, but:

- Use an up-to-date compiler

- Use package distributions like vcpkg or conda-forge that already brings all the dependencies "for free"

- It seems you mix builds of different compilers (VS vs mingw). That's a bit asking for troubles ;-)
Le 12/03/2024 ? 17:48, Fengting Chen via gdal-dev a ?crit :
Resend with more information:

I am trying to build GDAL 3.8.4 on windows under VS2015. The build failed at linking stage that a bunch of external symbols not found, specifically the symbols in libproj, libcurl. I checked the dll library stub .lib for libproj and libcurl using ?dumpbin? and found the symbols in the library a little different, for example the linker error shows ?__imp__curl_slist_append? not found, the symbol output from the ?dumpbin? is  ?__imp_curl_slist_append? .

Any idea how to fix this?

Thanks!

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of Fengting Chen via gdal-dev <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Date: Monday, March 11, 2024 at 4:50?PM
To: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: [External] : [gdal-dev] GDAL 3.8.4 build on windows failed at linking
GDAL 3.8.4 build on Windows from VS2015 x64 command prompt: ?cmake ?build .? throws the following error (there are more similar errors):

cpl_vsil_az.obj : error LNK2001: unresolved external symbol __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]

cmake options has:

set (GDAL_USE_CURL                ON   CACHE  BOOL "" FORCE)
set (CURL_INCLUDE_DIR             "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE PATH "" FORCE)
set (CURL_LIBRARY_RELEASE         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE FILEPATH "" FORCE)

libcurl-x64.lib is the DLL stub. Using dumpbin on libcurl-x64.lib shows that ?__imp_curl_slist_append? is available. But the linker error is ?__imp__curl_slist_append? not found. There is an extra ?_? in it.

Any idea why this error occurred?

Thanks!




_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev<https://urldefense.com/v3/__https:/lists.osgeo.org/mailman/listinfo/gdal-dev__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3RxpGPNVk$>

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3R_bZl290$>

My software is free, but my time generally not.

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!KbMOD2u6nEacIP2ix07m6Y00zYu21fPOi8h2u_p-cjBCRSh9U8hYhTmK3txq5tv2LAvFBFXNfErVwdiaD9U8YKzOL5Qh$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/b4bdbaea/attachment-0001.htm>

From even.rouault at spatialys.com  Thu Mar 14 11:42:40 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2024 19:42:40 +0100
Subject: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed
 at linking
In-Reply-To: <PH0PR10MB7061515D707822F7FAF11CB093292@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
 <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <37e89c03-997c-46e7-a1cb-2f576efd5153@spatialys.com>
 <PH0PR10MB706152FE70462BD16683828C93292@PH0PR10MB7061.namprd10.prod.outlook.com>
 <a8ba7c4e-cdfb-4e45-a52c-ba4ecc2ca367@spatialys.com>
 <PH0PR10MB7061515D707822F7FAF11CB093292@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <b743d331-b8d8-4e35-8693-88399b14273d@spatialys.com>


Le 14/03/2024 ? 19:27, Fengting Chen a ?crit?:
>
> I included this fix but it doesn?t help. I was building the georaster 
> driver as a plugin but the linker failed at building gdal library. So 
> the fix doesn?t seem to be related to the problem.
>
You can't build the driver as a plugin with internal libjpeg. CMake 
should prevent you from doing that because of

https://github.com/OSGeo/gdal/blob/master/frmts/georaster/CMakeLists.txt#L6

But I now remember (thanks git blame!) that during the defered driver 
loading RFC development, I found that the condition to check that was 
broken. This was fixed in 
https://github.com/OSGeo/gdal/commit/adb0fd695253cf9fb91bee46309e6c66b25e8d65

> Building Custom Rule C:/fechen/gdal-3.8.4/CMakeLists.txt
>
> vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct 
> jpeg_decompress_struct *,struct VSIVirtualHandle *)"
>
> (?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z) 
> already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
> vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_dest(struct 
> jpeg_compress_struct *,struct VSIVirtualHandle *)" 
> (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z) 
> already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
> Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and object 
> C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
>
> C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169: one 
> or more multiply defined symbols found 
> [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
> *From: *Even Rouault <even.rouault at spatialys.com>
> *Date: *Thursday, March 14, 2024 at 11:52?AM
> *To: *Fengting Chen <fengting.chen at oracle.com>, 
> gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
> *Subject: *Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows 
> failed at linking
>
> Hi,
>
> possibly already fixed in master with commit 
> https://github.com/OSGeo/gdal/commit/849226ce1a9 
> <https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/commit/849226ce1a9__;!!ACWV5N9M2RV99hQ!KbMOD2u6nEacIP2ix07m6Y00zYu21fPOi8h2u_p-cjBCRSh9U8hYhTmK3txq5tv2LAvFBFXNfErVwdiaD9U8YKKFUCjQ$>
>
> Even
>
> Le 14/03/2024 ? 16:47, Fengting Chen a ?crit?:
>
>     After upgrading the windows build environment to VS2022, I got the
>     following linker error:
>
>     vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct
>     jpeg_decompress_struct *,struct VSIVirtualHandle *)"
>     (?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z)
>     already defined in vsidataio.obj
>     [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
>     vsidataio.obj : error LNK2005: "void __cdecl
>     jpeg_vsiio_dest(struct jpeg_compress_struct *,struct
>     VSIVirtualHandle *)"
>     (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z)
>     already defined in vsidataio.obj
>     [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
>     Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and
>     object C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
>
>     C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169:
>     one or more multiply defined symbols found
>     [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
>
>     I set ?GDAL_USE_JPEG_INTERNAL?? with ?ON?. Any suggestions?
>
>     Thanks!
>
>     *From: *Even Rouault <even.rouault at spatialys.com>
>     <mailto:even.rouault at spatialys.com>
>     *Date: *Tuesday, March 12, 2024 at 12:56?PM
>     *To: *Fengting Chen <fengting.chen at oracle.com>
>     <mailto:fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org
>     <gdal-dev at lists.osgeo.org> <mailto:gdal-dev at lists.osgeo.org>
>     *Subject: *Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on
>     windows failed at linking
>
>     Not the answer you'll probably want to hear, but:
>
>     - Use an up-to-date compiler
>
>     - Use package distributions like vcpkg or conda-forge that already
>     brings all the dependencies "for free"
>
>     - It seems you mix builds of different compilers (VS vs mingw).
>     That's a bit asking for troubles ;-)
>
>     Le 12/03/2024 ? 17:48, Fengting Chen via gdal-dev a ?crit?:
>
>         Resend with more information:
>
>         I am trying to build GDAL 3.8.4 on windows under VS2015. The
>         build failed at linking stage that a bunch of external symbols
>         not found, specifically the symbols in libproj, libcurl. I
>         checked the dll library stub .lib for libproj and libcurl
>         using ?dumpbin? and found the symbols in the library a little
>         different, for example the linker error shows
>         ?__imp__curl_slist_append? not found, the symbol output from
>         the ?dumpbin? is ??__imp_curl_slist_append? .
>
>         Any idea how to fix this?
>
>         Thanks!
>
>         *From: *gdal-dev <gdal-dev-bounces at lists.osgeo.org>
>         <mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of
>         Fengting Chen via gdal-dev <gdal-dev at lists.osgeo.org>
>         <mailto:gdal-dev at lists.osgeo.org>
>         *Date: *Monday, March 11, 2024 at 4:50?PM
>         *To: *gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
>         <mailto:gdal-dev at lists.osgeo.org>
>         *Subject: *[External] : [gdal-dev] GDAL 3.8.4 build on windows
>         failed at linking
>
>         GDAL 3.8.4 build on Windows from VS2015 x64 command prompt:
>         ?cmake ?build .? throws the following error (there are more
>         similar errors):
>
>         cpl_vsil_az.obj : error LNK2001: unresolved external symbol
>         __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]
>
>         cmake options has:
>
>         set (GDAL_USE_CURL??????????????? ON CACHE? BOOL "" FORCE)
>
>         set (CURL_INCLUDE_DIR
>         "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE PATH "" FORCE)
>
>         set (CURL_LIBRARY_RELEASE
>         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE
>         FILEPATH "" FORCE)
>
>         libcurl-x64.lib is the DLL stub. Using dumpbin on
>         libcurl-x64.lib shows that ?__imp_curl_slist_append? is
>         available. But the linker error is ?__imp__curl_slist_append?
>         not found. There is an extra ?_? in it.
>
>         Any idea why this error occurred?
>
>         Thanks!
>
>         _______________________________________________
>
>         gdal-dev mailing list
>
>         gdal-dev at lists.osgeo.org
>
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev  <https://urldefense.com/v3/__https:/lists.osgeo.org/mailman/listinfo/gdal-dev__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3RxpGPNVk$>
>
>     -- 
>
>     http://www.spatialys.com  <https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3R_bZl290$>
>
>     My software is free, but my time generally not.
>
> -- 
> http://www.spatialys.com  <https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!KbMOD2u6nEacIP2ix07m6Y00zYu21fPOi8h2u_p-cjBCRSh9U8hYhTmK3txq5tv2LAvFBFXNfErVwdiaD9U8YKzOL5Qh$>
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240314/cca3bf1f/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Mar 15 01:11:55 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Mar 2024 09:11:55 +0100
Subject: [gdal-dev] Motion: adopt RFC 99: Geometry coordinate precision
In-Reply-To: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
References: <4a2ab83b-589a-4c74-9d73-9fbc598e684c@spatialys.com>
Message-ID: <e06181af-801c-4417-a791-931ad9b20cf1@spatialys.com>

Hi,

the implementation has now been merged into master.

Out-of-tree drivers or forks with new drivers will need to accommodate 
for the change in ICreateLayer() following the hint at 
https://github.com/OSGeo/gdal/blob/35feb24f2869750382223a9746cadd04b65b67bd/MIGRATION_GUIDE.TXT#L9

Even

Le 07/03/2024 ? 20:07, Even Rouault via gdal-dev a ?crit?:
> Hi,
>
> The flow of comments calming down, I motion to adopt RFC 99: Geometry 
> coordinate precision
>
> https://github.com/OSGeo/gdal/pull/9300
>
> Pre-rendered view at 
> https://github.com/rouault/gdal/blob/rfc99_text/doc/source/development/rfc/rfc99_geometry_coordinate_precision.rst 
>
>
> Starting with my +1,
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From fengting.chen at oracle.com  Fri Mar 15 12:59:26 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Fri, 15 Mar 2024 19:59:26 +0000
Subject: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed
 at linking
In-Reply-To: <b743d331-b8d8-4e35-8693-88399b14273d@spatialys.com>
References: <PH0PR10MB7061755415917FAC828A1406935E2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <45a148c8-f2ca-4048-aacb-3c008bfc7bf4@spatialys.com>
 <SN7PR10MB70462630BA2F2DE96B3A653F935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <7a2b4df7-49e3-4627-b16d-03b78a1c0d90@spatialys.com>
 <SN7PR10MB7046A3E43BE2D91B3BB49736935D2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <3762c856-b91a-4a88-a993-97a89c742296@spatialys.com>
 <PH0PR10MB70617A41C4B9FD4E6B97CDC693242@PH0PR10MB7061.namprd10.prod.outlook.com>
 <PH0PR10MB706167D0079742C47DF64085932B2@PH0PR10MB7061.namprd10.prod.outlook.com>
 <37e89c03-997c-46e7-a1cb-2f576efd5153@spatialys.com>
 <PH0PR10MB706152FE70462BD16683828C93292@PH0PR10MB7061.namprd10.prod.outlook.com>
 <a8ba7c4e-cdfb-4e45-a52c-ba4ecc2ca367@spatialys.com>
 <PH0PR10MB7061515D707822F7FAF11CB093292@PH0PR10MB7061.namprd10.prod.outlook.com>
 <b743d331-b8d8-4e35-8693-88399b14273d@spatialys.com>
Message-ID: <PH0PR10MB7061B7299246EDFC0A6B90A393282@PH0PR10MB7061.namprd10.prod.outlook.com>

Thanks for the information. Making the driver part of the GDAL library resolved the issue. Another issue is about the python bindings, there was no error in the build process but no python binding built. I see the following warnings:

C:\Program Files\Microsoft Visual Studio\2022\Professional\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(237,5): warning MSB8065: Custom build for item "C:\fechen\gdal-3.8.4\build\CMakeFiles\b568dadc5794ca78a5a6fb5e818aa83e\_gdal.cp36-win_amd64.pyd.rule" succeeded, but specified output "c:\fechen\gdal-3.8.4\build\swig\python\osgeo\_gdal.cp36-win_amd64.pyd" has not been created. This may cause incremental build to work incorrectly. [C:\fechen\gdal-3.8.4\build\swig\python\python_binding.vcxproj]

Could this warning have caused the python_binding from built and installed? If so, how to resolve it?

From: Even Rouault <even.rouault at spatialys.com>
Date: Thursday, March 14, 2024 at 2:42?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed at linking


Le 14/03/2024 ? 19:27, Fengting Chen a ?crit :
I included this fix but it doesn?t help. I was building the georaster driver as a plugin but the linker failed at building gdal library. So the fix doesn?t seem to be related to the problem.

You can't build the driver as a plugin with internal libjpeg. CMake should prevent you from doing that because of

https://github.com/OSGeo/gdal/blob/master/frmts/georaster/CMakeLists.txt#L6<https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/blob/master/frmts/georaster/CMakeLists.txt*L6__;Iw!!ACWV5N9M2RV99hQ!IPkRR1ZcwIotVYxg7JvUkznsl_LyC4GdbxYHcjQHjM4XR6sDe6iar5JIdCexcK9XtV-w_h_sJ6_vvtAF1OuFlbq7hyqM$>

But I now remember (thanks git blame!) that during the defered driver loading RFC development, I found that the condition to check that was broken. This was fixed in https://github.com/OSGeo/gdal/commit/adb0fd695253cf9fb91bee46309e6c66b25e8d65<https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/commit/adb0fd695253cf9fb91bee46309e6c66b25e8d65__;!!ACWV5N9M2RV99hQ!IPkRR1ZcwIotVYxg7JvUkznsl_LyC4GdbxYHcjQHjM4XR6sDe6iar5JIdCexcK9XtV-w_h_sJ6_vvtAF1OuFlb-Yzxpn$>

Building Custom Rule C:/fechen/gdal-3.8.4/CMakeLists.txt
vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct jpeg_decompress_struct *,struct VSIVirtualHandle *)"
(?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_dest(struct jpeg_compress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
     Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and object C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169: one or more multiply defined symbols found [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]

From: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Date: Thursday, March 14, 2024 at 11:52?AM
To: Fengting Chen <fengting.chen at oracle.com><mailto:fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed at linking

Hi,

possibly already fixed in master with commit https://github.com/OSGeo/gdal/commit/849226ce1a9<https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/commit/849226ce1a9__;!!ACWV5N9M2RV99hQ!KbMOD2u6nEacIP2ix07m6Y00zYu21fPOi8h2u_p-cjBCRSh9U8hYhTmK3txq5tv2LAvFBFXNfErVwdiaD9U8YKKFUCjQ$>

Even
Le 14/03/2024 ? 16:47, Fengting Chen a ?crit :
After upgrading the windows build environment to VS2022, I got the following linker error:

vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_src(struct jpeg_decompress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_src@@YAXPEAUjpeg_decompress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
vsidataio.obj : error LNK2005: "void __cdecl jpeg_vsiio_dest(struct jpeg_compress_struct *,struct VSIVirtualHandle *)" (?jpeg_vsiio_dest@@YAXPEAUjpeg_compress_struct@@PEAUVSIVirtualHandle@@@Z) already defined in vsidataio.obj [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]
     Creating library C:/fechen/gdal-3.8.4/build/Debug/gdald.lib and object C:/fechen/gdal-3.8.4/build/Debug/gdald.exp
C:\fechen\gdal-3.8.4\build\Debug\gdald.dll : fatal error LNK1169: one or more multiply defined symbols found [C:\fechen\gdal-3.8.4\build\GDAL.vcxproj]

I set ?GDAL_USE_JPEG_INTERNAL?  with ?ON?. Any suggestions?

Thanks!

From: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Date: Tuesday, March 12, 2024 at 12:56?PM
To: Fengting Chen <fengting.chen at oracle.com><mailto:fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] FW: [External] : GDAL 3.8.4 build on windows failed at linking

Not the answer you'll probably want to hear, but:

- Use an up-to-date compiler

- Use package distributions like vcpkg or conda-forge that already brings all the dependencies "for free"

- It seems you mix builds of different compilers (VS vs mingw). That's a bit asking for troubles ;-)
Le 12/03/2024 ? 17:48, Fengting Chen via gdal-dev a ?crit :
Resend with more information:

I am trying to build GDAL 3.8.4 on windows under VS2015. The build failed at linking stage that a bunch of external symbols not found, specifically the symbols in libproj, libcurl. I checked the dll library stub .lib for libproj and libcurl using ?dumpbin? and found the symbols in the library a little different, for example the linker error shows ?__imp__curl_slist_append? not found, the symbol output from the ?dumpbin? is  ?__imp_curl_slist_append? .

Any idea how to fix this?

Thanks!

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of Fengting Chen via gdal-dev <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Date: Monday, March 11, 2024 at 4:50?PM
To: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: [External] : [gdal-dev] GDAL 3.8.4 build on windows failed at linking
GDAL 3.8.4 build on Windows from VS2015 x64 command prompt: ?cmake ?build .? throws the following error (there are more similar errors):

cpl_vsil_az.obj : error LNK2001: unresolved external symbol __imp__curl_slist_append [E:\gdal-3.8.4\build\GDAL.vcxproj]

cmake options has:

set (GDAL_USE_CURL                ON   CACHE  BOOL "" FORCE)
set (CURL_INCLUDE_DIR             "E:/SDK/curl-8.6.0_1-win64-mingw/include" CACHE PATH "" FORCE)
set (CURL_LIBRARY_RELEASE         "E:/SDK/curl-8.6.0_1-win64-mingw/bin/libcurl-x64.lib" CACHE FILEPATH "" FORCE)

libcurl-x64.lib is the DLL stub. Using dumpbin on libcurl-x64.lib shows that ?__imp_curl_slist_append? is available. But the linker error is ?__imp__curl_slist_append? not found. There is an extra ?_? in it.

Any idea why this error occurred?

Thanks!




_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev<https://urldefense.com/v3/__https:/lists.osgeo.org/mailman/listinfo/gdal-dev__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3RxpGPNVk$>

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N8ZTSFcueASfCUE2XGRgmOMaX6fq5SFf-Tq25Un9Kws27WD09uZjzbSDMeAzmhzOrmz0mgSpFItXVTdprbA3R_bZl290$>

My software is free, but my time generally not.

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!KbMOD2u6nEacIP2ix07m6Y00zYu21fPOi8h2u_p-cjBCRSh9U8hYhTmK3txq5tv2LAvFBFXNfErVwdiaD9U8YKzOL5Qh$>

My software is free, but my time generally not.

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!IPkRR1ZcwIotVYxg7JvUkznsl_LyC4GdbxYHcjQHjM4XR6sDe6iar5JIdCexcK9XtV-w_h_sJ6_vvtAF1OuFlZXNreE4$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240315/cb7e7d0d/attachment-0001.htm>

From luis.de.sousa at protonmail.ch  Mon Mar 18 03:28:05 2024
From: luis.de.sousa at protonmail.ch (=?utf-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Mon, 18 Mar 2024 10:28:05 +0000
Subject: [gdal-dev] Internal libtiff version
Message-ID: <I2bnP8RP6GGoW8eRe9eDYKtT-MyXgSjZf9b6qulvgm34INNtErjo51RCk2eUJZSa9HGygnZ32cgQ1P7bFA8q9LKRlo5TQ4iXKxwRZ0LWX4o=@protonmail.ch>

Hi all,

I am currently facing the error "PREDICTOR=2 is only supported with 64 bit samples starting with libtiff > 4.3.0" with GDAL 3.6.4. Libtiff 4.3.0 was released in 2022, about a year before that version of GDAL. Is there a way to know which version of Libtiff is included with which version of GDAL? I searched the web site but could not find it.

Thank you.

--
Lu?s

Sent with [Proton Mail](https://proton.me/) secure email.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240318/2ad8b8e6/attachment.htm>

From j1 at jimenezshaw.com  Mon Mar 18 04:11:20 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 18 Mar 2024 12:11:20 +0100
Subject: [gdal-dev] Internal libtiff version
In-Reply-To: <I2bnP8RP6GGoW8eRe9eDYKtT-MyXgSjZf9b6qulvgm34INNtErjo51RCk2eUJZSa9HGygnZ32cgQ1P7bFA8q9LKRlo5TQ4iXKxwRZ0LWX4o=@protonmail.ch>
References: <I2bnP8RP6GGoW8eRe9eDYKtT-MyXgSjZf9b6qulvgm34INNtErjo51RCk2eUJZSa9HGygnZ32cgQ1P7bFA8q9LKRlo5TQ4iXKxwRZ0LWX4o=@protonmail.ch>
Message-ID: <CADRrdKsj3Et-Pe2EeKwmkO+zorLbBh61qi-aLtQ-pH3CbBUSNg@mail.gmail.com>

Probably here:
https://github.com/OSGeo/gdal/blob/master/frmts/gtiff/libtiff/tiffvers.h

On Mon, 18 Mar 2024 at 11:28, Lu??s Moreira de Sousa via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi all,
>
> I am currently facing the error "PREDICTOR=2 is only supported with 64
> bit samples starting with libtiff > 4.3.0" with GDAL 3.6.4. Libtiff 4.3.0
> was released in 2022, about a year before that version of GDAL. Is there a
> way to know which version of Libtiff is included with which version of
> GDAL? I searched the web site but could not find it.
>
> Thank you.
>
> --
> Lu?s
>
>
> Sent with Proton Mail <https://proton.me/> secure email.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240318/ebe8521b/attachment.htm>

From even.rouault at spatialys.com  Mon Mar 18 05:51:39 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Mar 2024 13:51:39 +0100
Subject: [gdal-dev] Internal libtiff version
In-Reply-To: <I2bnP8RP6GGoW8eRe9eDYKtT-MyXgSjZf9b6qulvgm34INNtErjo51RCk2eUJZSa9HGygnZ32cgQ1P7bFA8q9LKRlo5TQ4iXKxwRZ0LWX4o=@protonmail.ch>
References: <I2bnP8RP6GGoW8eRe9eDYKtT-MyXgSjZf9b6qulvgm34INNtErjo51RCk2eUJZSa9HGygnZ32cgQ1P7bFA8q9LKRlo5TQ4iXKxwRZ0LWX4o=@protonmail.ch>
Message-ID: <7990570b-6361-448e-8159-39171fa09705@spatialys.com>

Hi Lu?s,

it depends on your GDAL was built.

You can check it? with "gdalinfo --format gtiff | grep LIBTIFF" and it 
will return either LIBTIFF=INTERNAL or LIBTIFF=LIBTIFF, Version X.Y.Z

If it is with its internal libtiff copy, then it corresponds roughly to 
the state of libtiff master at then time the GDAL release was done. 
Looking at 
https://github.com/OSGeo/gdal/blob/v3.6.4/frmts/gtiff/libtiff/tiffvers.h, 
I see we were already past 4.4.0, so it is likely you have a GDAL build 
against an external libtiff that wasn't as current as the GDAL build

Even

Le 18/03/2024 ? 11:28, Lu? s Moreira de Sousa via gdal-dev a ?crit?:
> Hi all,
>
> I am currently facing the error "PREDICTOR=2 is only supported with 64 
> bit samples starting with libtiff > 4.3.0" with GDAL 3.6.4. Libtiff 
> 4.3.0 was released in 2022, about a year before that version of GDAL. 
> Is there a way to know which version of Libtiff is included with which 
> version of GDAL? I searched the web site but could not find it.
>
> Thank you.
>
> -- 
> Lu?s
>
>
> Sent with Proton Mail <https://proton.me/> secure email.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240318/196f5c9d/attachment.htm>

From michael.otto at data-experts.de  Mon Mar 18 06:48:20 2024
From: michael.otto at data-experts.de (Michael Otto)
Date: Mon, 18 Mar 2024 14:48:20 +0100
Subject: [gdal-dev] Better way to merge MBTiles ?
Message-ID: <OF094F81FA.01B2755F-ONC1258AE4.004B4FDE-C1258AE4.004BD538@data-experts.de>

Hello everyone,

I am in the process of merging several MBTiles files (same zoom level, 
same CRS) into one file.
(Unfortunately I am not allowed to use gdal_merge.py in my environment at 
the moment.)

Currently I am doing this via the detour "gdalbuildvrt".

Example commands:
'gdalbuildvrt complete.vrt Part1.mbtiles Part2.mbtiles ...'
'gdal_translate -of MBTILES -co TILE_FORMAT=WEBP complete.vrt 
complete.mbtiles'

I then create the pyramids using "gdaladdo". So far ok.

But the merging of the individual files takes a long time. Is there 
possibly a better and faster alternative?

Michael

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240318/b518a56d/attachment.htm>

From luis.de.sousa at protonmail.ch  Mon Mar 18 06:57:15 2024
From: luis.de.sousa at protonmail.ch (=?utf-8?Q?Lu=C3=AD=C2=ADs_Moreira_de_Sousa?=)
Date: Mon, 18 Mar 2024 13:57:15 +0000
Subject: [gdal-dev] Internal libtiff version
In-Reply-To: <7990570b-6361-448e-8159-39171fa09705@spatialys.com>
References: <I2bnP8RP6GGoW8eRe9eDYKtT-MyXgSjZf9b6qulvgm34INNtErjo51RCk2eUJZSa9HGygnZ32cgQ1P7bFA8q9LKRlo5TQ4iXKxwRZ0LWX4o=@protonmail.ch>
 <7990570b-6361-448e-8159-39171fa09705@spatialys.com>
Message-ID: <l7VHA8VqI47P05LqbnH_8Xfat0UIes1S-jaC4iDcSD5c4uAFoamOcgrY-gvlvqvPiQrIH05dP7gYv6DOuxsh2p8SDj8m757zgUKyXizfNt0=@protonmail.ch>

Thank you Even, that is helpful. This GDAL build is the one available from the stable branch of the Ubuntu-GIS PPA. I will bring this to attention with that community.

Regards.

--
Lu?s

Sent with [Proton Mail](https://proton.me/) secure email.

On Monday, March 18th, 2024 at 1:51 PM, Even Rouault <even.rouault at spatialys.com> wrote:

> Hi Lu?s,
>
> it depends on your GDAL was built.
>
> You can check it with "gdalinfo --format gtiff | grep LIBTIFF" and it will return either LIBTIFF=INTERNAL or LIBTIFF=LIBTIFF, Version X.Y.Z
>
> If it is with its internal libtiff copy, then it corresponds roughly to the state of libtiff master at then time the GDAL release was done. Looking at https://github.com/OSGeo/gdal/blob/v3.6.4/frmts/gtiff/libtiff/tiffvers.h, I see we were already past 4.4.0, so it is likely you have a GDAL build against an external libtiff that wasn't as current as the GDAL build
>
> Even
>
> Le 18/03/2024 ? 11:28, Lu? s Moreira de Sousa via gdal-dev a ?crit :
>
>> Hi all,
>>
>> I am currently facing the error "PREDICTOR=2 is only supported with 64 bit samples starting with libtiff > 4.3.0" with GDAL 3.6.4. Libtiff 4.3.0 was released in 2022, about a year before that version of GDAL. Is there a way to know which version of Libtiff is included with which version of GDAL? I searched the web site but could not find it.
>>
>> Thank you.
>>
>> --
>> Lu?s
>>
>> Sent with [Proton Mail](https://proton.me/) secure email.
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>>
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240318/662df9b2/attachment-0001.htm>

From carsten.lockenkoetter at web.de  Mon Mar 18 14:29:02 2024
From: carsten.lockenkoetter at web.de (=?iso-8859-1?Q?Carsten_Lockenk=F6tter?=)
Date: Mon, 18 Mar 2024 22:29:02 +0100
Subject: [gdal-dev] Censor area in tiles of aerial image
Message-ID: <003401da797b$4c134300$e439c900$@web.de>

Hi,



is it possible to censor specific areas of an aerial image using GDAL?



I have several smaller tiles that I've already transformed into my desired
coordinate system and generated internal pyramids.

Subsequently, I would like to censor certain areas based on polygons (e.g.,
from a shapefile or an Oracle DB) (coloring them grayish).

Set the color must be done after transforming coordinatesystem and
generating pyramids.



I usually use the compiled Windows binaries from gisinternals.com.

Presumably, my plan doesn't work with that, right? At least I haven't found
anything in that direction.

I suppose this could be done with a Python, but I've never worked with
Python before.

Do I need to adjust the internal pyramids as well? Or do I have to recreate
them?



Could you please show me a brief example of how it could work, so I have an
approach?

I just need an idea of how to implement this and possibly some tips on what
else I need to consider.



Regards,

Carsten

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240318/135d07fe/attachment.htm>

From warmerdam at pobox.com  Mon Mar 18 16:14:36 2024
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 18 Mar 2024 19:14:36 -0400
Subject: [gdal-dev] Censor area in tiles of aerial image
In-Reply-To: <003401da797b$4c134300$e439c900$@web.de>
References: <003401da797b$4c134300$e439c900$@web.de>
Message-ID: <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>

Carsten,

The gdal_rasterize command allows you to "burn in" polygons from an OGR
supported datasource into an existing raster.  If your raster is a 3 band
RGB file, you could use --burn 100 150 200 to burn in the RGB value
(100,150,200).   This will only work if the raster format you are using
supports update-in-place.

You would have to regenerate pyramids after this process -- they are not
automatically updated by GDAL when the "base layer" is updated.

Best regards,
Frank


On Mon, Mar 18, 2024 at 5:34?PM Carsten Lockenk?tter via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
>
>
> is it possible to censor specific areas of an aerial image using GDAL?
>
>
>
> I have several smaller tiles that I've already transformed into my desired
> coordinate system and generated internal pyramids.
>
> Subsequently, I would like to censor certain areas based on polygons
> (e.g., from a shapefile or an Oracle DB) (coloring them grayish).
>
> Set the color must be done after transforming coordinatesystem and
> generating pyramids.
>
>
>
> I usually use the compiled Windows binaries from gisinternals.com.
>
> Presumably, my plan doesn't work with that, right? At least I haven't
> found anything in that direction.
>
> I suppose this could be done with a Python, but I've never worked with
> Python before.
>
> Do I need to adjust the internal pyramids as well? Or do I have to
> recreate them?
>
>
>
> Could you please show me a brief example of how it could work, so I have
> an approach?
>
> I just need an idea of how to implement this and possibly some tips on
> what else I need to consider.
>
>
>
> Regards,
>
> Carsten
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | USA: +1 650-701-7823
<http://voice.google.com/calls?a=nc,%2B16507017823>
and watch the world go round - Rush    | CAN: +1 343-550-9984
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240318/c5a1a94e/attachment.htm>

From thomas.bonfort at gmail.com  Tue Mar 19 00:26:11 2024
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Tue, 19 Mar 2024 08:26:11 +0100
Subject: [gdal-dev] Censor area in tiles of aerial image
In-Reply-To: <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>
References: <003401da797b$4c134300$e439c900$@web.de>
 <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>
Message-ID: <CAOM3y2gQOLi1=+eEaN4qYU_7Zve_rbAdDKMOBC8fkB9WRV99QA@mail.gmail.com>

I have a side-question concerning the update-in-place behavior of the gtiff
driver in this case: given that a compressed strile will nearly always be
smaller after this update (due to better compression ratios on the uniform
area), will libtiff overwrite the previous strile in place also, or will it
be appended to the existing file (resulting in a larger final file size)?
regards,
TB

Le mar. 19 mars 2024, 00:15, Frank Warmerdam via gdal-dev <
gdal-dev at lists.osgeo.org> a ?crit :

> Carsten,
>
> The gdal_rasterize command allows you to "burn in" polygons from an OGR
> supported datasource into an existing raster.  If your raster is a 3 band
> RGB file, you could use --burn 100 150 200 to burn in the RGB value
> (100,150,200).   This will only work if the raster format you are using
> supports update-in-place.
>
> You would have to regenerate pyramids after this process -- they are not
> automatically updated by GDAL when the "base layer" is updated.
>
> Best regards,
> Frank
>
>
> On Mon, Mar 18, 2024 at 5:34?PM Carsten Lockenk?tter via gdal-dev <
> gdal-dev at lists.osgeo.org> wrote:
>
>> Hi,
>>
>>
>>
>> is it possible to censor specific areas of an aerial image using GDAL?
>>
>>
>>
>> I have several smaller tiles that I've already transformed into my
>> desired coordinate system and generated internal pyramids.
>>
>> Subsequently, I would like to censor certain areas based on polygons
>> (e.g., from a shapefile or an Oracle DB) (coloring them grayish).
>>
>> Set the color must be done after transforming coordinatesystem and
>> generating pyramids.
>>
>>
>>
>> I usually use the compiled Windows binaries from gisinternals.com.
>>
>> Presumably, my plan doesn't work with that, right? At least I haven't
>> found anything in that direction.
>>
>> I suppose this could be done with a Python, but I've never worked with
>> Python before.
>>
>> Do I need to adjust the internal pyramids as well? Or do I have to
>> recreate them?
>>
>>
>>
>> Could you please show me a brief example of how it could work, so I have
>> an approach?
>>
>> I just need an idea of how to implement this and possibly some tips on
>> what else I need to consider.
>>
>>
>>
>> Regards,
>>
>> Carsten
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
> --
>
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam,
> warmerdam at pobox.com
> light and sound - activate the windows | USA: +1 650-701-7823
> <http://voice.google.com/calls?a=nc,%2B16507017823>
> and watch the world go round - Rush    | CAN: +1 343-550-9984
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/84b70fd7/attachment.htm>

From even.rouault at spatialys.com  Tue Mar 19 00:42:35 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2024 08:42:35 +0100
Subject: [gdal-dev] Censor area in tiles of aerial image
In-Reply-To: <CAOM3y2gQOLi1=+eEaN4qYU_7Zve_rbAdDKMOBC8fkB9WRV99QA@mail.gmail.com>
References: <003401da797b$4c134300$e439c900$@web.de>
 <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>
 <CAOM3y2gQOLi1=+eEaN4qYU_7Zve_rbAdDKMOBC8fkB9WRV99QA@mail.gmail.com>
Message-ID: <89bcc0da-9bb0-4c20-83e5-178832ca1baa@spatialys.com>

Thomas,

Le 19/03/2024 ? 08:26, thomas bonfort via gdal-dev a ?crit?:
> I have a side-question concerning the update-in-place behavior of the 
> gtiff driver in this case: given that a compressed strile will nearly 
> always be smaller after this update (due to better compression ratios 
> on the uniform area), will libtiff overwrite the previous strile in 
> place also, or will it be appended to the existing file (resulting in 
> a larger final file size)?

If the updated tile/strip occupies a smaller size than its previous 
version, it will overwrite in place. Note however that it will not wipe 
out the bytes that are no longer used, which might potentially be an 
issue in the context of censoring. Thus I would recommend doing a final 
gdal_translate to get a "clean" version before distributing it.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/37200659/attachment-0001.htm>

From andrey_vi at list.ru  Tue Mar 19 05:43:26 2024
From: andrey_vi at list.ru (=?UTF-8?B?QW5kcmV5IFZJ?=)
Date: Tue, 19 Mar 2024 15:43:26 +0300
Subject: [gdal-dev] =?utf-8?q?gdal=5Frasterize_processed_GTiff_filesize_q?=
 =?utf-8?q?uestion?=
Message-ID: <1710852206.961190418@f143.i.mail.ru>


Hello.
?
I?m using gdal_rasterize to remove some data from DEM (Int16) and hillshade (Byte) rasters with shape-file, like this:
gdal_rasterize -burn -32768 shape.shp dem.tif and gdal_rasterize -burn 0 shape.shp hillshade.tif
Both DEM and hillshade GTiffs created with -co COMPRESS=LZW -co TILED=YES options. After processing with gdal_rasterize the  size of GTiffs becomes 1.5 times larger . Why it happens?  I assumed that it should be the other way around, because a significant portion of the data is replaced with the same values and should be compressed well.
?
Andrey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/00e5e885/attachment.htm>

From carsten.lockenkoetter at web.de  Tue Mar 19 05:42:01 2024
From: carsten.lockenkoetter at web.de (=?UTF-8?Q?Carsten_Lockenk=C3=B6tter?=)
Date: Tue, 19 Mar 2024 13:42:01 +0100
Subject: [gdal-dev] 
 =?utf-8?q?Re=3A__Censor_area_in_tiles_of_aerial_image?=
In-Reply-To: <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>
References: <003401da797b$4c134300$e439c900$@web.de>
 <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>
Message-ID: <trinity-1b18b0e2-d6cd-4638-a996-c5eb5b53cc9a-1710852121043@msvc-mesg-web101>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/03d69946/attachment.htm>

From even.rouault at spatialys.com  Tue Mar 19 06:05:44 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2024 14:05:44 +0100
Subject: [gdal-dev] Censor area in tiles of aerial image
In-Reply-To: <trinity-1b18b0e2-d6cd-4638-a996-c5eb5b53cc9a-1710852121043@msvc-mesg-web101>
References: <003401da797b$4c134300$e439c900$@web.de>
 <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>
 <trinity-1b18b0e2-d6cd-4638-a996-c5eb5b53cc9a-1710852121043@msvc-mesg-web101>
Message-ID: <a8c92bcc-097a-4a16-a08b-af68d133469e@spatialys.com>

Why not just trying?

Demo:

$ gdal_create -outsize 10 10 -burn 255 test.tif -a_srs EPSG:4326 -a_ullr 
0 10 10 0
$ gdal_rasterize -burn 0 
'{"type":"Polygon","coordinates":[[[2,2],[2,4],[4,4],[4,2],[2,2]]]}' 
test.tif
$ gdal_translate test.tif /vsistdout/ -of aaigrid
ncols??????? 10
nrows??????? 10
xllcorner??? 0.000000000000
yllcorner??? 0.000000000000
cellsize???? 1.000000000000
255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255
255 255 0 0 255 255 255 255 255 255
255 255 0 0 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255
255 255 255 255 255 255 255 255 255 255

That said, I've attempted to clarifiy it pe 
https://github.com/OSGeo/gdal/commit/4377ce22ec8d26b76760e8c1e4a9ffa2bd240b7d

Le 19/03/2024 ? 13:42, Carsten Lockenk?tter via gdal-dev a ?crit?:
> Hi Frank,
>
> I have read about gdal_rasterize but it seems it works a bit different 
> as i need it.
> Gdal_rasterize converts a vector layer to a raster layer with specific 
> dimensions and create a new file, like a mask.
> It could be work for me yes, because i publish the raster files as 
> image mosiac at the geoserver.
> Maybe the new "mask" file overlays on me original files and the 
> created wmts tiles of the geoserver could contain the mask.
>
> I will try it, but is there another option to burn the vectorlayer 
> into existing tiles?
>
> Regards,
> Carsten
> Am 19.03.24, 00:14 schrieb Frank Warmerdam <warmerdam at pobox.com>:
>
>     Carsten,
>
>     The gdal_rasterize command allows you to "burn in" polygons from
>     an OGR supported datasource into an existing raster.? If your
>     raster is a 3 band RGB file, you could use --burn 100 150 200 to
>     burn in the RGB value (100,150,200).? ?This will only work if the
>     raster format you are using supports update-in-place.
>
>     You would have to regenerate pyramids after this process -- they
>     are not automatically updated by GDAL when the "base layer" is
>     updated.
>
>     Best regards,
>     Frank
>
>
>     On Mon, Mar 18, 2024 at 5:34?PM Carsten Lockenk?tter via gdal-dev
>     <gdal-dev at lists.osgeo.org> wrote:
>
>         Hi,
>
>         is it possible to censor specific areas of an aerial image
>         using GDAL?
>
>         I have several smaller tiles that I've already transformed
>         into my desired coordinate system and generated internal pyramids.
>
>         Subsequently, I would like to censor certain areas based on
>         polygons (e.g., from a shapefile or an Oracle DB) (coloring
>         them grayish).
>
>         Set the color must be done after transforming coordinatesystem
>         and generating pyramids.
>
>         I usually use the compiled Windows binaries from
>         gisinternals.com <http://gisinternals.com>.
>
>         Presumably, my plan doesn't work with that, right? At least I
>         haven't found anything in that direction.
>
>         I suppose this could be done with a Python, but I've never
>         worked with Python before.
>
>         Do I need to adjust the internal pyramids as well? Or do I
>         have to recreate them?
>
>         Could you please show me a brief example of how it could work,
>         so I have an approach?
>
>         I just need an idea of how to implement this and possibly some
>         tips on what else I need to consider.
>
>         Regards,
>
>         Carsten
>
>         _______________________________________________
>         gdal-dev mailing list
>         gdal-dev at lists.osgeo.org
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>     -- 
>     ---------------------------------------+--------------------------------------
>     I set the clouds in motion - turn up ? | Frank Warmerdam,
>     warmerdam at pobox.com
>     light and sound - activate the windows | USA: +1 650-701-7823
>     and watch the world go round - Rush ? ?| CAN: +1 343-550-9984
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/1d6d3500/attachment-0001.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Mar 19 06:25:44 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Tue, 19 Mar 2024 13:25:44 +0000
Subject: [gdal-dev] gdal_rasterize processed GTiff filesize question
In-Reply-To: <1710852206.961190418@f143.i.mail.ru>
References: <1710852206.961190418@f143.i.mail.ru>
Message-ID: <DB9PR09MB688762C45E052665271C6B6BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

So the target files dem.tif and hillshade.tif exist already? Maybe it is not so simple to update already compressed data in place. Have you tried what happens if you re-write the results into new files

gdal_translate -co tiled=yes -co compress=LZW hillshade.tif final_hillshade.tif.

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Andrey VI via gdal-dev
L?hetetty: tiistai 19. maaliskuuta 2024 14.43
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: [gdal-dev] gdal_rasterize processed GTiff filesize question

Hello.

I?m using gdal_rasterize to remove some data from DEM (Int16) and hillshade (Byte) rasters with shape-file, like this:
gdal_rasterize -burn -32768 shape.shp dem.tif and gdal_rasterize -burn 0 shape.shp hillshade.tif
Both DEM and hillshade GTiffs created with -co COMPRESS=LZW -co TILED=YES options. After processing with gdal_rasterize the size of GTiffs becomes 1.5 times larger. Why it happens? I assumed that it should be the other way around, because a significant portion of the data is replaced with the same values and should be compressed well.

Andrey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/3024a52f/attachment.htm>

From andrey_vi at list.ru  Tue Mar 19 09:08:54 2024
From: andrey_vi at list.ru (=?UTF-8?B?QW5kcmV5IFZJ?=)
Date: Tue, 19 Mar 2024 19:08:54 +0300
Subject: [gdal-dev] 
 =?utf-8?q?gdal=5Frasterize_processed_GTiff_filesize_q?=
 =?utf-8?q?uestion?=
In-Reply-To: <DB9PR09MB688762C45E052665271C6B6BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>
References: <1710852206.961190418@f143.i.mail.ru>
 <DB9PR09MB688762C45E052665271C6B6BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>
Message-ID: <1710864534.474678295@f173.i.mail.ru>


Yes, the target files already exists. Yes, I?ve tried to investigate this issue on some small and medium files. For example:
original hillshade.tif size is 11469 bytes, after gdal_rasterize its size is 26465 bytes, and after gdal_translate - 15426 bytes,
original - 7477 K, gdal_rasterize - 8705 K, gdal_translate - 5964 K,
original - 39110 K, gdal_rasterize - 39112 K, gdal_translate - 446 K.
So,  it depends on the content of the raster.
I would like to avoid intermediate processing if possible. This will require additional time for processing and space for the data. Moreover, in some cases a lot of space needs to be allocated for intermediate files.
?
Andrey
>Tuesday, March 19, 2024 4:25 PM +03:00 from Rahkonen Jukka < jukka.rahkonen at maanmittauslaitos.fi >:
>?
>Hi,
>?
>So the target files dem.tif and hillshade.tif exist already? Maybe it is not so simple to update already compressed data in place. Have you tried what happens if you re-write the results into new files
>
>gdal_translate -co tiled=yes -co compress=LZW hillshade.tif final_hillshade.tif.
>?
>-Jukka Rahkonen-
>?
>L?hett?j?: gdal-dev < gdal-dev-bounces at lists.osgeo.org >  Puolesta  Andrey VI via gdal-dev
>L?hetetty: tiistai 19. maaliskuuta 2024 14.43
>Vastaanottaja: gdal-dev at lists.osgeo.org
>Aihe: [gdal-dev] gdal_rasterize processed GTiff filesize question
>?
>Hello.
>?
>I?m using gdal_rasterize to remove some data from DEM (Int16) and hillshade (Byte) rasters with shape-file, like this:
>gdal_rasterize -burn -32768 shape.shp dem.tif and gdal_rasterize -burn 0 shape.shp hillshade.tif
>Both DEM and hillshade GTiffs created with -co COMPRESS=LZW -co TILED=YES options. After processing with gdal_rasterize the  size of GTiffs becomes 1.5 times larger . Why it happens?  I assumed that it should be the other way around, because a significant portion of the data is replaced with the same values and should be compressed well.
>?
>Andrey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/b18369b1/attachment.htm>

From peter.loewe at gmx.de  Tue Mar 19 09:11:10 2024
From: peter.loewe at gmx.de (=?UTF-8?Q?Peter_L=C3=B6we?=)
Date: Tue, 19 Mar 2024 17:11:10 +0100
Subject: [gdal-dev] Scientific citations 2022 - 2024 overview
Message-ID: <trinity-dc6029d9-8b07-4d61-a05f-de015ce03f54-1710864670483@3c-app-gmx-bap46>

Hello GDAL community,

this is an update and preliminary summary about references to the GDAL project (and developer community) within scientific publications since 2022.

In 2022, a Digital Object Identifier (DOI) was registered for the GDAL project. Since then (version 3.5.1), each new release of GDAL receives a DOI an is being long term preserved in the scientific Open Access Repository Zenodo (https://zenodo.org/doi/10.5281/zenodo.5884351), which is connected the DOI registration process.

The DOI infrastructure allows to reference either the GDAL project as a whole or a particular GDAL version in scientific literature.

The GDAL project has become an early adopter regarding DOI use within OSGeo.

While there are still sometimes technical glitches in the GDAL-Zenodo-DOI workflows, we have now tangible proof of the resulting benefits:

Whenever a GDAL DOI is referenced in a scientic journal (which uses the CrossRef infrastructure for bibliographic citations), this can be tracked down and reported.

A listing of the publications citing GDAL in this manner is available here: https://wiki.osgeo.org/wiki/DOI#GDAL

GDAL has been referenced in publications from Nature, Springer, Wiley, American Geophysical Society and other publishers.

Since 2022, sixteen publications were reported (2022: 6 publications, 2023: 7 publications, 2024: 3 publications (so far)).

While these numbers might appear small, this is a very interesting development about the recognition of open source software as a part of open science.

Congratulations & best regards,
Peter

PS: There are actually many more publications citing GDAL, such as the FOSS4G proceedings, but they are not connected to the CrossRef bibliography infrastructure (yet).




<peter.loewe at gmx.de>


From fengting.chen at oracle.com  Tue Mar 19 12:14:45 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Tue, 19 Mar 2024 19:14:45 +0000
Subject: [gdal-dev] Python binding installation on windows
Message-ID: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>

Hi, I was able to build the GDAL with python binding on without error on windows. However, ?cmake --build . --target  install --config Release? command doesn?t install the python site-packages etc to the specified ?CMAKE_INSTALL_PREFIX? directory. The rest of the GDAL components were installed properly.  Did I miss anything?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/45e5ca44/attachment.htm>

From even.rouault at spatialys.com  Tue Mar 19 12:22:04 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2024 20:22:04 +0100
Subject: [gdal-dev] Python binding installation on windows
In-Reply-To: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
Message-ID: <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>

Hi,

Le 19/03/2024 ? 20:14, Fengting Chen via gdal-dev a ?crit?:
>
> Hi, I was able to build the GDAL with python binding on without error 
> on windows. However, ?cmake --build . --target ?install --config 
> Release? command doesn?t install the python site-packages etc to the 
> specified ?CMAKE_INSTALL_PREFIX? directory. The rest of the GDAL 
> components were installed properly. ?Did I miss anything?
>
What I can tell is that .github/workflows/cmake_builds.yml lines 480 
"cmake --build $GITHUB_WORKSPACE/build --config Release --target 
install" seems to do the job on CI :

https://github.com/OSGeo/gdal/actions/runs/8346148650/job/22842755713

"""
[...]

copying build\lib.win-amd64-cpython-310\osgeo\gdal.py -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\gdalconst.py -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo

copying build\lib.win-amd64-cpython-310\osgeo\gdalnumeric.py -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\gdal_array.py -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\gnm.py -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\ogr.py -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\osr.py -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_gdal.cp310-win_amd64.pyd 
-> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying 
build\lib.win-amd64-cpython-310\osgeo\_gdalconst.cp310-win_amd64.pyd -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying 
build\lib.win-amd64-cpython-310\osgeo\_gdal_array.cp310-win_amd64.pyd -> 
D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_gnm.cp310-win_amd64.pyd 
-> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_ogr.cp310-win_amd64.pyd 
-> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_osr.cp310-win_amd64.pyd 
-> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
[...]

"""

which setuptools version do you use? which logs do you get?

Perhaps also try running "python setup.py install" manually from the 
swig/python build directory

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/cd1e977a/attachment.htm>

From fengting.chen at oracle.com  Tue Mar 19 13:38:39 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Tue, 19 Mar 2024 20:38:39 +0000
Subject: [gdal-dev] [External] : Re: Python binding installation on
 windows
In-Reply-To: <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
Message-ID: <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>

I copied out the command from install_python_Release.cmake and ran it manually. Then it worked. Not sure why the command not invoked. I don?t see error from ?cmake ?build . ?target install ?config Release?.

My setuptools is 40.6.2.

From: Even Rouault <even.rouault at spatialys.com>
Date: Tuesday, March 19, 2024 at 3:22?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: [External] : Re: [gdal-dev] Python binding installation on windows

Hi,
Le 19/03/2024 ? 20:14, Fengting Chen via gdal-dev a ?crit :
Hi, I was able to build the GDAL with python binding on without error on windows. However, ?cmake --build . --target  install --config Release? command doesn?t install the python site-packages etc to the specified ?CMAKE_INSTALL_PREFIX? directory. The rest of the GDAL components were installed properly.  Did I miss anything?

What I can tell is that .github/workflows/cmake_builds.yml lines 480 "cmake --build $GITHUB_WORKSPACE/build --config Release --target install" seems to do the job on CI :

https://github.com/OSGeo/gdal/actions/runs/8346148650/job/22842755713<https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/actions/runs/8346148650/job/22842755713__;!!ACWV5N9M2RV99hQ!NOM7D2XYtQ5uEJTXmrU9LjbezoDtYziMv-HzoJZel2bY1bjtiVTyO_N8xFmlx2d4ojECDkfSo3H8rlVUB-37IXX_zS5P$>

"""
[...]

copying build\lib.win-amd64-cpython-310\osgeo\gdal.py -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\gdalconst.py -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\gdalnumeric.py -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\gdal_array.py -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\gnm.py -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\ogr.py -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\osr.py -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_gdal.cp310-win_amd64.pyd -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_gdalconst.cp310-win_amd64.pyd -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_gdal_array.cp310-win_amd64.pyd -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_gnm.cp310-win_amd64.pyd -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_ogr.cp310-win_amd64.pyd -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
copying build\lib.win-amd64-cpython-310\osgeo\_osr.cp310-win_amd64.pyd -> D:\\a\\gdal\\gdal\\install-gdal\Lib\site-packages\osgeo
[...]

"""

which setuptools version do you use? which logs do you get?

Perhaps also try running "python setup.py install" manually from the swig/python build directory

Even

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!NOM7D2XYtQ5uEJTXmrU9LjbezoDtYziMv-HzoJZel2bY1bjtiVTyO_N8xFmlx2d4ojECDkfSo3H8rlVUB-37IWxxgbNC$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/c8821fe3/attachment-0001.htm>

From even.rouault at spatialys.com  Tue Mar 19 13:44:15 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2024 21:44:15 +0100
Subject: [gdal-dev] [External] : Re: Python binding installation on
 windows
In-Reply-To: <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
 <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
Message-ID: <a2312cc6-45e2-445c-8b4a-3bcf07a23da1@spatialys.com>


Le 19/03/2024 ? 21:38, Fengting Chen a ?crit?:
>
> I copied out the command from install_python_Release.cmake and ran it 
> manually. Then it worked. Not sure why the command not invoked. I 
> don?t see error from ?cmake ?build . ?target install ?config Release?.
>
> My setuptools is 40.6.2.
>
Not sure if that's the reason, but that's pretty obsolete. 
swig/python/pyproject.toml now requires setuptools >= 67


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/f8e1559d/attachment.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Mar 19 14:56:22 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Tue, 19 Mar 2024 21:56:22 +0000
Subject: [gdal-dev] gdal_rasterize processed GTiff filesize question
In-Reply-To: <1710864534.474678295@f173.i.mail.ru>
References: <1710852206.961190418@f143.i.mail.ru>
 <DB9PR09MB688762C45E052665271C6B6BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>
 <1710864534.474678295@f173.i.mail.ru>
Message-ID: <DB9PR09MB68870010EF65D49B2FDE726BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

I suppose that something similar than with gdalwarp https://trac.osgeo.org/gdal/wiki/UserDocs/GdalWarp#GeoTIFFoutput-coCOMPRESSisbroken happens but with gdal_rasterize I think there are no tricks that could help.

-Jukka Rahkonen-

L?hett?j?: Andrey VI <andrey_vi at list.ru>
L?hetetty: tiistai 19. maaliskuuta 2024 18.09
Vastaanottaja: Rahkonen Jukka <jukka.rahkonen at maanmittauslaitos.fi>
Kopio: gdal-dev at lists.osgeo.org
Aihe: Re: [gdal-dev] gdal_rasterize processed GTiff filesize question

Yes, the target files already exists. Yes, I?ve tried to investigate this issue on some small and medium files. For example:
original hillshade.tif size is 11469 bytes, after gdal_rasterize its size is 26465 bytes, and after gdal_translate - 15426 bytes,
original - 7477 K, gdal_rasterize - 8705 K, gdal_translate - 5964 K,
original - 39110 K, gdal_rasterize - 39112 K, gdal_translate - 446 K.
So, it depends on the content of the raster.
I would like to avoid intermediate processing if possible. This will require additional time for processing and space for the data. Moreover, in some cases a lot of space needs to be allocated for intermediate files.

Andrey
Tuesday, March 19, 2024 4:25 PM +03:00 from Rahkonen Jukka <jukka.rahkonen at maanmittauslaitos.fi</compose?To=jukka.rahkonen at maanmittauslaitos.fi>>:


Hi,



So the target files dem.tif and hillshade.tif exist already? Maybe it is not so simple to update already compressed data in place. Have you tried what happens if you re-write the results into new files

gdal_translate -co tiled=yes -co compress=LZW hillshade.tif final_hillshade.tif.



-Jukka Rahkonen-



L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> Puolesta Andrey VI via gdal-dev
L?hetetty: tiistai 19. maaliskuuta 2024 14.43
Vastaanottaja: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Aihe: [gdal-dev] gdal_rasterize processed GTiff filesize question



Hello.



I?m using gdal_rasterize to remove some data from DEM (Int16) and hillshade (Byte) rasters with shape-file, like this:

gdal_rasterize -burn -32768 shape.shp dem.tif and gdal_rasterize -burn 0 shape.shp hillshade.tif

Both DEM and hillshade GTiffs created with -co COMPRESS=LZW -co TILED=YES options. After processing with gdal_rasterize the size of GTiffs becomes 1.5 times larger. Why it happens? I assumed that it should be the other way around, because a significant portion of the data is replaced with the same values and should be compressed well.



Andrey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/a086be12/attachment.htm>

From even.rouault at spatialys.com  Tue Mar 19 15:04:39 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2024 23:04:39 +0100
Subject: [gdal-dev] gdal_rasterize processed GTiff filesize question
In-Reply-To: <DB9PR09MB68870010EF65D49B2FDE726BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>
References: <1710852206.961190418@f143.i.mail.ru>
 <DB9PR09MB688762C45E052665271C6B6BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>
 <1710864534.474678295@f173.i.mail.ru>
 <DB9PR09MB68870010EF65D49B2FDE726BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>
Message-ID: <325d5ade-1610-43a6-94e3-c75ba24123e9@spatialys.com>


Le 19/03/2024 ? 22:56, Rahkonen Jukka via gdal-dev a ?crit?:
>
> Hi,
>
> I suppose that something similar than with gdalwarp 
> https://trac.osgeo.org/gdal/wiki/UserDocs/GdalWarp#GeoTIFFoutput-coCOMPRESSisbroken 
> happens but with gdal_rasterize I think there are no tricks that could 
> help.
>
Actually the -optim switch may help: 
https://gdal.org/programs/gdal_rasterize.html#cmdoption-gdal_rasterize-optim

I suspect "-optim raster" is what you would want to optimize raster size

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/17a7df22/attachment-0001.htm>

From mdsumner at gmail.com  Tue Mar 19 16:22:16 2024
From: mdsumner at gmail.com (Michael Sumner)
Date: Wed, 20 Mar 2024 10:22:16 +1100
Subject: [gdal-dev] overview sizes for COG
Message-ID: <CAAcGz989o--av93yD2mJSTX-xPxdM_sap52coaiA4OoZuWQzAA@mail.gmail.com>

Hi, can we specify overview sizes exactly? I have this odd grid that is
36000x17999, and I get consequently yucky overview sizes:

gdal_create -outsize 36000 17999 -ot Int8 -co SPARSE_OK=YES -a_srs
EPSG:4326 -a_ullr 0 17999 0 36000 weird.tif
gdal_translate weird.tif cog.tif  -of COG
gdalinfo cog.tif | grep Overviews
#  Overviews: 18000x8999, 9000x4499, 4500x2249, 2250x1124, 1125x562,
562x281, 281x14

Should I worry about this?  Can the sizes be specified via Translate? (I
can see how they could be generated externally and bundled, but I'm looking
for a way at this high level).

( Maybe I shouldn't even care about the sizes ... and maybe I should
resample the grid to be a better overall size, but I consider that out of
scope here.)

I'm comparing with other COG creators, e.g. odc which makes tidy overviews
( I will explore how it's getting done).

import xarray
from odc.geo.xr import assign_crs
from odc.geo.cog import write_cog

ds = xarray.open_dataset("weird.tif")
ds = assign_crs(ds, crs="EPSG:4326")  ## do something to tag it as odc


write_cog(ds["band_data"], "odc.tif")
os.system("gdalinfo odc.tif | grep Overviews")
#  Overviews: 18000x9000, 9000x4500, 4500x2250, 2250x1125, 1125x563

Cheers, Mike


-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/5797667e/attachment.htm>

From even.rouault at spatialys.com  Tue Mar 19 16:39:11 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2024 00:39:11 +0100
Subject: [gdal-dev] overview sizes for COG
In-Reply-To: <CAAcGz989o--av93yD2mJSTX-xPxdM_sap52coaiA4OoZuWQzAA@mail.gmail.com>
References: <CAAcGz989o--av93yD2mJSTX-xPxdM_sap52coaiA4OoZuWQzAA@mail.gmail.com>
Message-ID: <92ee7904-a52f-46c8-9142-b52c1c3ef7ae@spatialys.com>

Michael,
> Hi, can we specify overview sizes exactly?

No, the BuildOverviews() interface onlys take an array of overview 
factors. It is up to the driver implementation to decide how it computes 
the overview size from the main raster size and overview factor.

The COG driver is a bit of a special case, since it automagically 
compute overviews if they don't exist in the source dataset, and doesn't 
take an explicit list of overview factors. It simply divides by two 
successively, with floor truncation: 
https://github.com/OSGeo/gdal/blob/master/frmts/gtiff/cogdriver.cpp#L1092

> I have this odd grid that is 36000x17999, and I get consequently yucky 
> overview sizes:
>
> gdal_create -outsize 36000 17999 -ot Int8 -co SPARSE_OK=YES -a_srs 
> EPSG:4326 -a_ullr 0 17999 0 36000 weird.tif
> gdal_translate weird.tif cog.tif ?-of COG
> gdalinfo cog.tif | grep Overviews
> # ?Overviews: 18000x8999, 9000x4499, 4500x2249, 2250x1124, 1125x562, 
> 562x281, 281x14
>
> Should I worry about this?

Probably not ? :-)

> Can the sizes be specified via Translate? (I can see how they could be 
> generated externally and bundled, but I'm looking for a way at this 
> high level).
I guess someone could potentially add a OVERVIEW_SIZES=W1xH1,W2xH2,... 
creation option to the COG driver if that was really needed...
>
> ( Maybe I shouldn't even care about the sizes ... and maybe I should 
> resample the grid to be a better?overall size, but I consider that out 
> of scope here.)
>
> I'm comparing with other COG creators, e.g. odc which makes tidy 
> overviews ( I will explore how it's getting done).

It looks like they might use (previous_size + 1) / 2 (or ceil rounding)

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/47b483a2/attachment.htm>

From mdsumner at gmail.com  Tue Mar 19 16:48:45 2024
From: mdsumner at gmail.com (Michael Sumner)
Date: Wed, 20 Mar 2024 10:48:45 +1100
Subject: [gdal-dev] overview sizes for COG
In-Reply-To: <92ee7904-a52f-46c8-9142-b52c1c3ef7ae@spatialys.com>
References: <CAAcGz989o--av93yD2mJSTX-xPxdM_sap52coaiA4OoZuWQzAA@mail.gmail.com>
 <92ee7904-a52f-46c8-9142-b52c1c3ef7ae@spatialys.com>
Message-ID: <CAAcGz9_E0OFKrFdLDf3GK6kQZ9-VfAXGA2AX3qZ8Tczu3TV1dw@mail.gmail.com>

Excellent!  Thanks for the answers.

When I've explored a bit more I might implement the overview sizes just so
we can match downstream tools (the current motivation is like-for-like
performance comparison, I haven't looked there but I think odc goes very
low level to eke out speed).

Cheers, Mike



On Wed, Mar 20, 2024 at 10:39?AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Michael,
>
> Hi, can we specify overview sizes exactly?
>
> No, the BuildOverviews() interface onlys take an array of overview
> factors. It is up to the driver implementation to decide how it computes
> the overview size from the main raster size and overview factor.
>
> The COG driver is a bit of a special case, since it automagically compute
> overviews if they don't exist in the source dataset, and doesn't take an
> explicit list of overview factors. It simply divides by two successively,
> with floor truncation:
> https://github.com/OSGeo/gdal/blob/master/frmts/gtiff/cogdriver.cpp#L1092
>
> I have this odd grid that is 36000x17999, and I get consequently yucky
> overview sizes:
>
> gdal_create -outsize 36000 17999 -ot Int8 -co SPARSE_OK=YES -a_srs
> EPSG:4326 -a_ullr 0 17999 0 36000 weird.tif
> gdal_translate weird.tif cog.tif  -of COG
> gdalinfo cog.tif | grep Overviews
> #  Overviews: 18000x8999, 9000x4499, 4500x2249, 2250x1124, 1125x562,
> 562x281, 281x14
>
> Should I worry about this?
>
> Probably not ? :-)
>
> Can the sizes be specified via Translate? (I can see how they could be
> generated externally and bundled, but I'm looking for a way at this high
> level).
>
> I guess someone could potentially add a OVERVIEW_SIZES=W1xH1,W2xH2,...
> creation option to the COG driver if that was really needed...
>
>
> ( Maybe I shouldn't even care about the sizes ... and maybe I should
> resample the grid to be a better overall size, but I consider that out of
> scope here.)
>
> I'm comparing with other COG creators, e.g. odc which makes tidy overviews
> ( I will explore how it's getting done).
>
> It looks like they might use (previous_size + 1) / 2 (or ceil rounding)
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>

-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/45a5c90b/attachment.htm>

From warmerdam at pobox.com  Tue Mar 19 20:21:10 2024
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 19 Mar 2024 23:21:10 -0400
Subject: [gdal-dev] Censor area in tiles of aerial image
In-Reply-To: <trinity-1b18b0e2-d6cd-4638-a996-c5eb5b53cc9a-1710852121043@msvc-mesg-web101>
References: <003401da797b$4c134300$e439c900$@web.de>
 <CA+YzLBfvoiu2AcVG0EhRAEHXs4GN9aux_KjLAXmdBeO_KxXZrQ@mail.gmail.com>
 <trinity-1b18b0e2-d6cd-4638-a996-c5eb5b53cc9a-1710852121043@msvc-mesg-web101>
Message-ID: <CA+YzLBeoYN9Zao8ezL2Mhhta5MiMiUgecTgnR8zXo2CfB9ztzw@mail.gmail.com>

Carsten,

gdal_rasterize definitely supports burning into existing files.

I'm not sure about the configuration of your raster -- some formats are not
updatable-in-place, but the limitation isn't in gdal_rasterize.

Best regards,
Frank

On Tue, Mar 19, 2024 at 8:42?AM Carsten Lockenk?tter <
carsten.lockenkoetter at web.de> wrote:

> Hi Frank,
>
> I have read about gdal_rasterize but it seems it works a bit different as
> i need it.
> Gdal_rasterize converts a vector layer to a raster layer with specific
> dimensions and create a new file, like a mask.
> It could be work for me yes, because i publish the raster files as image
> mosiac at the geoserver.
> Maybe the new "mask" file overlays on me original files and the created
> wmts tiles of the geoserver could contain the mask.
>
> I will try it, but is there another option to burn the vectorlayer into
> existing tiles?
>
> Regards,
> Carsten
> Am 19.03.24, 00:14 schrieb Frank Warmerdam <warmerdam at pobox.com>:
>
>> Carsten,
>>
>> The gdal_rasterize command allows you to "burn in" polygons from an OGR
>> supported datasource into an existing raster.  If your raster is a 3 band
>> RGB file, you could use --burn 100 150 200 to burn in the RGB value
>> (100,150,200).   This will only work if the raster format you are using
>> supports update-in-place.
>>
>> You would have to regenerate pyramids after this process -- they are not
>> automatically updated by GDAL when the "base layer" is updated.
>>
>> Best regards,
>> Frank
>>
>>
>> On Mon, Mar 18, 2024 at 5:34?PM Carsten Lockenk?tter via gdal-dev <
>> gdal-dev at lists.osgeo.org> wrote:
>>
>>> Hi,
>>>
>>>
>>>
>>> is it possible to censor specific areas of an aerial image using GDAL?
>>>
>>>
>>>
>>> I have several smaller tiles that I've already transformed into my
>>> desired coordinate system and generated internal pyramids.
>>>
>>> Subsequently, I would like to censor certain areas based on polygons
>>> (e.g., from a shapefile or an Oracle DB) (coloring them grayish).
>>>
>>> Set the color must be done after transforming coordinatesystem and
>>> generating pyramids.
>>>
>>>
>>>
>>> I usually use the compiled Windows binaries from gisinternals.com.
>>>
>>> Presumably, my plan doesn't work with that, right? At least I haven't
>>> found anything in that direction.
>>>
>>> I suppose this could be done with a Python, but I've never worked with
>>> Python before.
>>>
>>> Do I need to adjust the internal pyramids as well? Or do I have to
>>> recreate them?
>>>
>>>
>>>
>>> Could you please show me a brief example of how it could work, so I have
>>> an approach?
>>>
>>> I just need an idea of how to implement this and possibly some tips on
>>> what else I need to consider.
>>>
>>>
>>>
>>> Regards,
>>>
>>> Carsten
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
>>
>> --
>>
>> ---------------------------------------+--------------------------------------
>> I set the clouds in motion - turn up   | Frank Warmerdam,
>> warmerdam at pobox.com
>> light and sound - activate the windows | USA: +1 650-701-7823
>> <http://voice.google.com/calls?a=nc,%2B16507017823>
>> and watch the world go round - Rush    | CAN: +1 343-550-9984
>>
>

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | USA: +1 650-701-7823
<http://voice.google.com/calls?a=nc,%2B16507017823>
and watch the world go round - Rush    | CAN: +1 343-550-9984
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240319/5ec96925/attachment-0001.htm>

From andrey_vi at list.ru  Tue Mar 19 23:04:59 2024
From: andrey_vi at list.ru (=?UTF-8?B?QW5kcmV5IFZJ?=)
Date: Wed, 20 Mar 2024 09:04:59 +0300
Subject: [gdal-dev] 
 =?utf-8?q?gdal=5Frasterize_processed_GTiff_filesize_q?=
 =?utf-8?q?uestion?=
In-Reply-To: <325d5ade-1610-43a6-94e3-c75ba24123e9@spatialys.com>
References: <1710852206.961190418@f143.i.mail.ru>
 <DB9PR09MB68870010EF65D49B2FDE726BFD2C2@DB9PR09MB6887.eurprd09.prod.outlook.com>
 <325d5ade-1610-43a6-94e3-c75ba24123e9@spatialys.com>
Message-ID: <1710914699.268461736@f751.i.mail.ru>


Hi, Even.
?
Using both options  "-optim raster" and "-optim vector"  results in the same size files. This is expected, since, as follows from the option description, it only affects the rasterization algorithm.
? 
>Wednesday, March 20, 2024 1:04 AM +03:00 from Even Rouault <even.rouault at spatialys.com>:
>?
>?
>Le 19/03/2024 ? 22:56, Rahkonen Jukka via gdal-dev a ?crit?:
>>Hi,
>>?
>>I suppose that something similar than with gdalwarp  https://trac.osgeo.org/gdal/wiki/UserDocs/GdalWarp#GeoTIFFoutput-coCOMPRESSisbroken happens but with gdal_rasterize I think there are no tricks that could help.
>Actually the -optim switch may help:  https://gdal.org/programs/gdal_rasterize.html#cmdoption-gdal_rasterize-optim
>I suspect "-optim raster" is what you would want to optimize raster size
>-- 
>http://www.spatialys.com
>My software is free, but my time generally not. 
?
?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/0e7f405b/attachment.htm>

From fengting.chen at oracle.com  Wed Mar 20 09:00:31 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Wed, 20 Mar 2024 16:00:31 +0000
Subject: [gdal-dev] [External] : Re: Python binding installation on
 windows
In-Reply-To: <a2312cc6-45e2-445c-8b4a-3bcf07a23da1@spatialys.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
 <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <a2312cc6-45e2-445c-8b4a-3bcf07a23da1@spatialys.com>
Message-ID: <PH0PR10MB70611155D91E1EDEFD5B61EA93332@PH0PR10MB7061.namprd10.prod.outlook.com>

Thanks for the suggestion. I can upgrade the setuptools and try again. Another question: is it possible to only build a specific driver plugin without rebuilding the GDAL?

From: Even Rouault <even.rouault at spatialys.com>
Date: Tuesday, March 19, 2024 at 4:44?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [External] : Re: [gdal-dev] Python binding installation on windows


Le 19/03/2024 ? 21:38, Fengting Chen a ?crit :
I copied out the command from install_python_Release.cmake and ran it manually. Then it worked. Not sure why the command not invoked. I don?t see error from ?cmake ?build . ?target install ?config Release?.

My setuptools is 40.6.2.

Not sure if that's the reason, but that's pretty obsolete. swig/python/pyproject.toml now requires setuptools >= 67



--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N3nIB7d9Q9apKmPbtbMITxjtMJmtZqXchODLrjPOsu8tiqHXsnajFBCx-lbUaTurwnt1im6MokPguTmhAGhhBLWTNET6$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/269c7b64/attachment.htm>

From even.rouault at spatialys.com  Wed Mar 20 09:06:04 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2024 17:06:04 +0100
Subject: [gdal-dev] [External] : Re: Python binding installation on
 windows
In-Reply-To: <PH0PR10MB70611155D91E1EDEFD5B61EA93332@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
 <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <a2312cc6-45e2-445c-8b4a-3bcf07a23da1@spatialys.com>
 <PH0PR10MB70611155D91E1EDEFD5B61EA93332@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <be580831-8ecb-4211-b5b5-0f0a605b4a1b@spatialys.com>

"cmake --build . --target gdal_GEOR" should shorten a bit the build 
time. It will try to rebuild the main "GDAL" target, but if it is 
already up to date, that should be just a matter for the build system to 
check that no files need to be rebuilt.

Le 20/03/2024 ? 17:00, Fengting Chen a ?crit?:
>
> Thanks for the suggestion. I can upgrade the setuptools and try again. 
> Another question: is it possible to only build a specific driver 
> plugin without rebuilding the GDAL?
>
> *From: *Even Rouault <even.rouault at spatialys.com>
> *Date: *Tuesday, March 19, 2024 at 4:44?PM
> *To: *Fengting Chen <fengting.chen at oracle.com>, 
> gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
> *Subject: *Re: [External] : Re: [gdal-dev] Python binding installation 
> on windows
>
> Le 19/03/2024 ? 21:38, Fengting Chen a ?crit?:
>
>     I copied out the command from install_python_Release.cmake and ran
>     it manually. Then it worked. Not sure why the command not invoked.
>     I don?t see error from ?cmake ?build . ?target install ?config
>     Release?.
>
>     My setuptools is 40.6.2.
>
> Not sure if that's the reason, but that's pretty obsolete. 
> swig/python/pyproject.toml now requires setuptools >= 67
>
>
>
> -- 
> http://www.spatialys.com  <https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N3nIB7d9Q9apKmPbtbMITxjtMJmtZqXchODLrjPOsu8tiqHXsnajFBCx-lbUaTurwnt1im6MokPguTmhAGhhBLWTNET6$>
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/f698c652/attachment-0001.htm>

From public at postholer.com  Wed Mar 20 09:24:00 2024
From: public at postholer.com (Scott)
Date: Wed, 20 Mar 2024 09:24:00 -0700
Subject: [gdal-dev] Feature Request: New -oo for VRT
Message-ID: <d4c0002d-eb14-4a7f-a55d-6497bc01b825@postholer.com>

It would be nice to have an open option to substitute a string of text 
with some other value, treating .vrt something like a template. Such as:

    -oo REPLACE="'sourceString'='targetString'"

Thoughts? Thanks for listening!
Scott

-- 
www.postholer.com

From even.rouault at spatialys.com  Wed Mar 20 11:33:03 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2024 19:33:03 +0100
Subject: [gdal-dev] Enhanced GeoParquet bounding-box based spatial filtering
 in master
Message-ID: <ba376aa9-7d01-45ad-84dc-b812f7821be6@spatialys.com>

Hi,

FYI, for those interested in GeoParquet, 
https://github.com/OSGeo/gdal/pull/9185 has now been merged into master. 
This is only effective on files generated with the updated driver that 
adds a bounding box column, and maximum efficiency is reached when 
sorting the features with the SORT_BY_BBOX=YES layer creation option. 
The bbox column is only used currently when opening a single GeoParquet 
file (i.e. not using the "dataset" type of opening where you point to a 
hierarchy of parquet files). See the pull request for more details.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Wed Mar 20 13:27:48 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2024 21:27:48 +0100
Subject: [gdal-dev] Feature Request: New -oo for VRT
In-Reply-To: <d4c0002d-eb14-4a7f-a55d-6497bc01b825@postholer.com>
References: <d4c0002d-eb14-4a7f-a55d-6497bc01b825@postholer.com>
Message-ID: <bbbd86b2-4862-4ea3-a7ef-820d7cbb2dbe@spatialys.com>

Hi,

assuming you use a Unix shell, and using the fact that the content of 
the VRT itself can be used as the datasource name, you can just do:

gdalinfo "$(sed 's/foo/bar/' my.vrt)"

Even

Le 20/03/2024 ? 17:24, Scott via gdal-dev a ?crit?:
> It would be nice to have an open option to substitute a string of text 
> with some other value, treating .vrt something like a template. Such as:
>
> ?? -oo REPLACE="'sourceString'='targetString'"
>
> Thoughts? Thanks for listening!
> Scott
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From mdsumner at gmail.com  Wed Mar 20 13:38:59 2024
From: mdsumner at gmail.com (Michael Sumner)
Date: Thu, 21 Mar 2024 07:38:59 +1100
Subject: [gdal-dev] palette file format doc ?
Message-ID: <CAAcGz9-oyeiuoMN3R80t6h8z5DHWQTDoXtVLxxsFanxhUtAf2Q@mail.gmail.com>

Is the palette_file  .txt format documented?

https://gdal.org/programs/gdalattachpct.html

It's mentioned in a few utilities, and created by tests but I couldn't find
an existing example or a description (I guessed, incorrectly at first,
leaving out the index column). I take it that it is 0-255 range values, but
is index 0-based or 1? And, can index be *value* in any contexts?

index  red green blue <alpha>

If it's documented I'll link it in PRs. I see qml and qlr here:
https://docs.qgis.org/3.34/en/docs/user_manual/appendices/qgis_file_formats.html

Cheers, Mike


-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/8e972efa/attachment.htm>

From even.rouault at spatialys.com  Wed Mar 20 13:52:29 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2024 21:52:29 +0100
Subject: [gdal-dev] palette file format doc ?
In-Reply-To: <CAAcGz9-oyeiuoMN3R80t6h8z5DHWQTDoXtVLxxsFanxhUtAf2Q@mail.gmail.com>
References: <CAAcGz9-oyeiuoMN3R80t6h8z5DHWQTDoXtVLxxsFanxhUtAf2Q@mail.gmail.com>
Message-ID: <0b6ea839-af26-4f96-ad64-7233605c6f3f@spatialys.com>

Michael,

Le 20/03/2024 ? 21:38, Michael Sumner via gdal-dev a ?crit?:
> Is the palette_file? .txt format documented?
>
> https://gdal.org/programs/gdalattachpct.html
>
> It's mentioned in a few utilities, and created by tests but I couldn't 
> find an existing example or a description (I guessed, incorrectly at 
> first, leaving out the index column). I

The initial attachpct.py script only worked with a GDAL raster as the 
source for the palette. The support for text formats, or qml, qlr seems 
to be a later addition by Idan Miara, and the best doc is probably the 
code: 
https://github.com/OSGeo/gdal/blob/master/swig/python/gdal-utils/osgeo_utils/auxiliary/color_palette.py 
. You may also have a look at autotest/pyscripts/test_gdal_utils.py 
which has tests for this color palette reading code. Looking a bit at 
it, I suspect the GDAL text format refered is the one actually used by 
gdaldem color-relief: 
https://gdal.org/programs/gdaldem.html#color-relief , which is itself 
derived from the one used by GRASS r.colors . But the Python code (only 
Python) and the one used by gdaldem (only C++) are different, so I 
wouldn't exclude there might be some differences.

| take it that it is 0-255 range values, but is index 0-based or 1?

0-based, as (unsigned) raster values are

> And, can index be *value* in any contexts?

If you use a raster with a signed data type, that could be negative 
values (assuming I understand your question)

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From fengting.chen at oracle.com  Wed Mar 20 15:11:42 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Wed, 20 Mar 2024 22:11:42 +0000
Subject: [gdal-dev] [External] : Re: Python binding installation on
 windows
In-Reply-To: <be580831-8ecb-4211-b5b5-0f0a605b4a1b@spatialys.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
 <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <a2312cc6-45e2-445c-8b4a-3bcf07a23da1@spatialys.com>
 <PH0PR10MB70611155D91E1EDEFD5B61EA93332@PH0PR10MB7061.namprd10.prod.outlook.com>
 <be580831-8ecb-4211-b5b5-0f0a605b4a1b@spatialys.com>
Message-ID: <PH0PR10MB7061AE823F91878D39DF060393332@PH0PR10MB7061.namprd10.prod.outlook.com>

After upgrading setuptools, the installation on windows worked. Just curious that why ?GDAL-3.8.4-py3.6.egg-info? is created under the site-packages on windows, while I set up the PYTHON_ROOT to use python 3.12 and clean up the build directory to rebuild everything.

On the other hand, on linux, when using python 3.12 for the build, the installation gave a lot of warnings like ?/scratch/gdal/gdal-3.8.4/dist/lib/python3.12/site-packages/osgeo/ogr.py:5954: SyntaxWarning: invalid escape sequence '\*'? . It seems that this is the new warning from python 3.12. But I don?t see this warning in the windows build, which made me suspect if I was really building on windows using python 3.12.

Any comments?

From: Even Rouault <even.rouault at spatialys.com>
Date: Wednesday, March 20, 2024 at 12:06?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [External] : Re: [gdal-dev] Python binding installation on windows

"cmake --build . --target gdal_GEOR" should shorten a bit the build time. It will try to rebuild the main "GDAL" target, but if it is already up to date, that should be just a matter for the build system to check that no files need to be rebuilt.
Le 20/03/2024 ? 17:00, Fengting Chen a ?crit :
Thanks for the suggestion. I can upgrade the setuptools and try again. Another question: is it possible to only build a specific driver plugin without rebuilding the GDAL?

From: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Date: Tuesday, March 19, 2024 at 4:44?PM
To: Fengting Chen <fengting.chen at oracle.com><mailto:fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: Re: [External] : Re: [gdal-dev] Python binding installation on windows


Le 19/03/2024 ? 21:38, Fengting Chen a ?crit :
I copied out the command from install_python_Release.cmake and ran it manually. Then it worked. Not sure why the command not invoked. I don?t see error from ?cmake ?build . ?target install ?config Release?.

My setuptools is 40.6.2.

Not sure if that's the reason, but that's pretty obsolete. swig/python/pyproject.toml now requires setuptools >= 67


--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!N3nIB7d9Q9apKmPbtbMITxjtMJmtZqXchODLrjPOsu8tiqHXsnajFBCx-lbUaTurwnt1im6MokPguTmhAGhhBLWTNET6$>

My software is free, but my time generally not.

--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!MtKz2hkeas1GDVfGg058wRT3BfVpJbVQEux28UIv5_EFr3ac9FxIv6QntyWBuWQ5PCX6BSVMnnnj90nyEd5oPhcAXgQm$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/5d70d0e8/attachment-0001.htm>

From even.rouault at spatialys.com  Wed Mar 20 15:46:22 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2024 23:46:22 +0100
Subject: [gdal-dev] [External] : Re: Python binding installation on
 windows
In-Reply-To: <PH0PR10MB7061AE823F91878D39DF060393332@PH0PR10MB7061.namprd10.prod.outlook.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
 <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <a2312cc6-45e2-445c-8b4a-3bcf07a23da1@spatialys.com>
 <PH0PR10MB70611155D91E1EDEFD5B61EA93332@PH0PR10MB7061.namprd10.prod.outlook.com>
 <be580831-8ecb-4211-b5b5-0f0a605b4a1b@spatialys.com>
 <PH0PR10MB7061AE823F91878D39DF060393332@PH0PR10MB7061.namprd10.prod.outlook.com>
Message-ID: <7f804507-8dca-4cda-b5cf-eb7c74df2cd6@spatialys.com>


Le 20/03/2024 ? 23:11, Fengting Chen a ?crit?:
>
> After upgrading setuptools, the installation on windows worked. Just 
> curious that why ?GDAL-3.8.4-py3.6.egg-info? is created under the 
> site-packages on windows, while I set up the PYTHON_ROOT to use python 
> 3.12 and clean up the build directory to rebuild everything.
>
> On the other hand, on linux, when using python 3.12 for the build, the 
> installation gave a lot of warnings like 
> ?/scratch/gdal/gdal-3.8.4/dist/lib/python3.12/site-packages/osgeo/ogr.py:5954: 
> SyntaxWarning: invalid escape sequence '\*'? . It seems that this is 
> the new warning from python 3.12. But I don?t see this warning in the 
> windows build, which made me suspect if I was really building on 
> windows using python 3.12.
>
Which SWIG version do you use? And can you paste line 5954 (and a few 
ones before and after) of your ogr.py ?

I can't reproduce locally any warning with SWIG 4.1.1 and python 3.12.0 
on my Linux. And on our CI with Fedora Rawhide and Python 3.12.2 and 
SWIG 4.2.1, there is no warning either:

cf https://github.com/OSGeo/gdal/actions/runs/8365025972/job/22901857183


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240320/e96aeb44/attachment.htm>

From public at postholer.com  Wed Mar 20 16:08:24 2024
From: public at postholer.com (Scott)
Date: Wed, 20 Mar 2024 16:08:24 -0700
Subject: [gdal-dev] Feature Request: New -oo for VRT
In-Reply-To: <bbbd86b2-4862-4ea3-a7ef-820d7cbb2dbe@spatialys.com>
References: <d4c0002d-eb14-4a7f-a55d-6497bc01b825@postholer.com>
 <bbbd86b2-4862-4ea3-a7ef-820d7cbb2dbe@spatialys.com>
Message-ID: <092450a3-789d-46a9-8827-e46cf20296c5@postholer.com>

I've been doing it similar, but with awk.


On 3/20/24 13:27, Even Rouault wrote:
> Hi,
> 
> assuming you use a Unix shell, and using the fact that the content of 
> the VRT itself can be used as the datasource name, you can just do:
> 
> gdalinfo "$(sed 's/foo/bar/' my.vrt)"
> 
> Even
> 
> Le 20/03/2024 ? 17:24, Scott via gdal-dev a ?crit?:
>> It would be nice to have an open option to substitute a string of text 
>> with some other value, treating .vrt something like a template. Such as:
>>
>> ?? -oo REPLACE="'sourceString'='targetString'"
>>
>> Thoughts? Thanks for listening!
>> Scott
>>

From mdsumner at gmail.com  Wed Mar 20 17:43:16 2024
From: mdsumner at gmail.com (Michael Sumner)
Date: Thu, 21 Mar 2024 11:43:16 +1100
Subject: [gdal-dev] palette file format doc ?
In-Reply-To: <0b6ea839-af26-4f96-ad64-7233605c6f3f@spatialys.com>
References: <CAAcGz9-oyeiuoMN3R80t6h8z5DHWQTDoXtVLxxsFanxhUtAf2Q@mail.gmail.com>
 <0b6ea839-af26-4f96-ad64-7233605c6f3f@spatialys.com>
Message-ID: <CAAcGz9-OkojtauLt3hbWvT0sHEc4YmJZXTdFw363Jdbhif_MKA@mail.gmail.com>

>
>
>
> > And, can index be *value* in any contexts?
>
> If you use a raster with a signed data type, that could be negative
> values (assuming I understand your question)
>
>

ah I see, arbitrary integer values map to a colour 0:(n-1) colours, match
the ordered n values in the raster - that is "value" in the way I was
thinking  ( I had in mind more general cases like interval ranges, but
that's  another level up)

I might be entirely messing up the concept ... will check my take by
experiment.

Cheers, Mike


-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/b2b9234d/attachment.htm>

From even.rouault at spatialys.com  Wed Mar 20 17:55:18 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Mar 2024 01:55:18 +0100
Subject: [gdal-dev] palette file format doc ?
In-Reply-To: <CAAcGz9-OkojtauLt3hbWvT0sHEc4YmJZXTdFw363Jdbhif_MKA@mail.gmail.com>
References: <CAAcGz9-oyeiuoMN3R80t6h8z5DHWQTDoXtVLxxsFanxhUtAf2Q@mail.gmail.com>
 <0b6ea839-af26-4f96-ad64-7233605c6f3f@spatialys.com>
 <CAAcGz9-OkojtauLt3hbWvT0sHEc4YmJZXTdFw363Jdbhif_MKA@mail.gmail.com>
Message-ID: <1748272e-8cbe-4100-9453-849d196db584@spatialys.com>


Le 21/03/2024 ? 01:43, Michael Sumner a ?crit?:
>
>
>
>     > And, can index be *value* in any contexts?
>
>     If you use a raster with a signed data type, that could be negative
>     values (assuming I understand your question)
>
>
>
> ah I see, arbitrary integer values map to a colour 0:(n-1) colours, 
> match the ordered n values in the raster - that is "value" in the way 
> I was thinking? ( I had in mind more general cases like interval 
> ranges, but that's? another level up)
>
> I might be entirely messing up the concept ... will check my take by 
> experiment.

It was wrong about negative values. As this script ultimately writes a 
GDALColorTable, you must use >=0 indices.


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/f47f7471/attachment.htm>

From even.rouault at spatialys.com  Wed Mar 20 17:55:28 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Mar 2024 01:55:28 +0100
Subject: [gdal-dev] Experience with slowness of free() on Windows with lots
 of allocations?
Message-ID: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>

Hi,

while investigating 
https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408, I've 
come to the conclusion that the Windows heap allocation mechanism sucks. 
Basically if you allocate a lot of heap regions of modest size with 
malloc()/new[], the time spent when freeing them all with corresponding 
free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~ 80,000 
allocations). The slowness is clearly quadratic with the number of 
allocations. You only start noticing it with ~ 30,000 allocations. And 
interestingly, another condition for that slowness is that each 
individual allocation much be strictly greater than 4096 * 4 bytes. At 
exactly that value, perf is acceptable, but add one extra byte, and it 
suddenly drops. I suspect that there must be a threshold from which 
malloc() starts using VirtualAlloc() instead of the heap, which must 
involve slow system calls, instead of a user-land allocation mechanism.

Anyone has already hit that and found solutions? The only potential idea 
I found until now would be to use a private heap with HeapCreate() with 
a fixed maximum size, which is a bit problematic to adopt by default, 
basically that would mean that the size of GDAL_CACHEMAX would be 
consumed as soon as one use the block cache.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From fengting.chen at oracle.com  Wed Mar 20 21:32:13 2024
From: fengting.chen at oracle.com (Fengting Chen)
Date: Thu, 21 Mar 2024 04:32:13 +0000
Subject: [gdal-dev] [External] : Re: Python binding installation on
 windows
In-Reply-To: <7f804507-8dca-4cda-b5cf-eb7c74df2cd6@spatialys.com>
References: <SN7PR10MB7046F5A03064082FA738E647932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <20c23bb2-f1fb-4861-a6a7-25bc5b3eccb8@spatialys.com>
 <SN7PR10MB7046AE5CA04F3960794CB092932C2@SN7PR10MB7046.namprd10.prod.outlook.com>
 <a2312cc6-45e2-445c-8b4a-3bcf07a23da1@spatialys.com>
 <PH0PR10MB70611155D91E1EDEFD5B61EA93332@PH0PR10MB7061.namprd10.prod.outlook.com>
 <be580831-8ecb-4211-b5b5-0f0a605b4a1b@spatialys.com>
 <PH0PR10MB7061AE823F91878D39DF060393332@PH0PR10MB7061.namprd10.prod.outlook.com>
 <7f804507-8dca-4cda-b5cf-eb7c74df2cd6@spatialys.com>
Message-ID: <PH0PR10MB706195CD3F6B22CD5532765B93322@PH0PR10MB7061.namprd10.prod.outlook.com>

It turned out that I didn?t specify swig_executable and an old version of swig was used on linux build. After fixing this, the warning was gone.

Back on windows build, with swig 4.2.1, python 3.12.2, setuptools 69.2, cmake still couldn?t install python binding. And I have to manually invoke setup_Release.py. And the installed python binding didn?t work. It has the following error:

Traceback (most recent call last):
  File "C:\gdal_win_build\gdal-3.8.4\pkg\gdal\python\lib\site-packages\osgeo\__init__.py", line 30, in swig_import_helper
    return importlib.import_module(mname)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\gdal_win_build\SDK\Python312\Lib\importlib\__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 921, in _load_unlocked
  File "<frozen importlib._bootstrap>", line 813, in module_from_spec
  File "<frozen importlib._bootstrap_external>", line 1289, in create_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
ImportError: DLL load failed while importing _gdal: The specified module could not be found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\gdal_win_build\gdal-3.8.4\pkg\gdal\python\Scripts\gdal_polygonize.py", line 5, in <module>
    from osgeo.gdal import UseExceptions, deprecation_warn
  File "C:\gdal_win_build\gdal-3.8.4\pkg\gdal\python\lib\site-packages\osgeo\__init__.py", line 35, in <module>
    _gdal = swig_import_helper()
            ^^^^^^^^^^^^^^^^^^^^
  File "C:\gdal_win_build\gdal-3.8.4\pkg\gdal\python\lib\site-packages\osgeo\__init__.py", line 32, in swig_import_helper
    return importlib.import_module('_gdal')
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\gdal_win_build\SDK\Python312\Lib\importlib\__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ModuleNotFoundError: No module named '_gdal'

Any idea?

From: Even Rouault <even.rouault at spatialys.com>
Date: Wednesday, March 20, 2024 at 6:46?PM
To: Fengting Chen <fengting.chen at oracle.com>, gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: Re: [External] : Re: [gdal-dev] Python binding installation on windows


Le 20/03/2024 ? 23:11, Fengting Chen a ?crit :
After upgrading setuptools, the installation on windows worked. Just curious that why ?GDAL-3.8.4-py3.6.egg-info? is created under the site-packages on windows, while I set up the PYTHON_ROOT to use python 3.12 and clean up the build directory to rebuild everything.

On the other hand, on linux, when using python 3.12 for the build, the installation gave a lot of warnings like ?/scratch/gdal/gdal-3.8.4/dist/lib/python3.12/site-packages/osgeo/ogr.py:5954: SyntaxWarning: invalid escape sequence '\*'? . It seems that this is the new warning from python 3.12. But I don?t see this warning in the windows build, which made me suspect if I was really building on windows using python 3.12.

Which SWIG version do you use? And can you paste line 5954 (and a few ones before and after) of your ogr.py ?

I can't reproduce locally any warning with SWIG 4.1.1 and python 3.12.0 on my Linux. And on our CI with Fedora Rawhide and Python 3.12.2 and SWIG 4.2.1, there is no warning either:

cf https://github.com/OSGeo/gdal/actions/runs/8365025972/job/22901857183<https://urldefense.com/v3/__https:/github.com/OSGeo/gdal/actions/runs/8365025972/job/22901857183__;!!ACWV5N9M2RV99hQ!ORD5c8IPzxNqFDmAs-8SsYYcQxF4HMFO92KcfmAGiHp8EYKXOw6_SJmW-YrJ1HSgUMEz6XDj6TANONhAva5jVB0qAJ07$>



--

http://www.spatialys.com<https://urldefense.com/v3/__http:/www.spatialys.com__;!!ACWV5N9M2RV99hQ!ORD5c8IPzxNqFDmAs-8SsYYcQxF4HMFO92KcfmAGiHp8EYKXOw6_SJmW-YrJ1HSgUMEz6XDj6TANONhAva5jVO0-1Qwb$>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/636537a2/attachment-0001.htm>

From j1 at jimenezshaw.com  Thu Mar 21 00:27:12 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 21 Mar 2024 08:27:12 +0100
Subject: [gdal-dev] Experience with slowness of free() on Windows with
 lots of allocations?
In-Reply-To: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
Message-ID: <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>

In my company we confirmed that "Windows heap allocation mechanism sucks."
Closing the application after using gtiff driver can take many seconds due
to memory deallocations.

One workaround was to use tcmalloc. I will ask my colleagues more details
next week.

On Thu, 21 Mar 2024, 01:55 Even Rouault via gdal-dev, <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> while investigating
> https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408, I've
> come to the conclusion that the Windows heap allocation mechanism sucks.
> Basically if you allocate a lot of heap regions of modest size with
> malloc()/new[], the time spent when freeing them all with corresponding
> free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~ 80,000
> allocations). The slowness is clearly quadratic with the number of
> allocations. You only start noticing it with ~ 30,000 allocations. And
> interestingly, another condition for that slowness is that each
> individual allocation much be strictly greater than 4096 * 4 bytes. At
> exactly that value, perf is acceptable, but add one extra byte, and it
> suddenly drops. I suspect that there must be a threshold from which
> malloc() starts using VirtualAlloc() instead of the heap, which must
> involve slow system calls, instead of a user-land allocation mechanism.
>
> Anyone has already hit that and found solutions? The only potential idea
> I found until now would be to use a private heap with HeapCreate() with
> a fixed maximum size, which is a bit problematic to adopt by default,
> basically that would mean that the size of GDAL_CACHEMAX would be
> consumed as soon as one use the block cache.
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/413c0d1a/attachment.htm>

From a.pau at creaf.uab.cat  Thu Mar 21 01:51:34 2024
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 21 Mar 2024 08:51:34 +0000
Subject: [gdal-dev] Experience with slowness of free() on Windows with
 lots of allocations?
In-Reply-To: <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
 <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
Message-ID: <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi Even,

you?re right. We also know that. When programming the driver I took it in consideration. Our solution is not rely on windows to make a good job with memory and we try to reuse as memory as possible instead of use calloc/free freely.

For instance, in the driver, for each feature I have to get or write the coordinates. I could do it every time I have to, so lots of times: create memory for reading, and then put them on the feature, and then free... so many times. What I do? When opening the layer I create some memory blocs of 250 Mb (due to the format itself) and I use that created memory to manage whatever I need. And when closing, I free it.

While doing that I observed that sometimes I have to use GDAL code that doesn?t take it in consideration (CPLRecode() for instance). Perhaps it could be improves as well.

Thanks for noticing that.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Javier Jimenez Shaw via gdal-dev
Enviado el: dijous, 21 de mar? de 2024 8:27
Para: Even Rouault <even.rouault at spatialys.com>
CC: gdal dev <gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

In my company we confirmed that "Windows heap allocation mechanism sucks."
Closing the application after using gtiff driver can take many seconds due to memory deallocations.

One workaround was to use tcmalloc. I will ask my colleagues more details next week.

On Thu, 21 Mar 2024, 01:55 Even Rouault via gdal-dev, <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>> wrote:
Hi,

while investigating
https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408, I've
come to the conclusion that the Windows heap allocation mechanism sucks.
Basically if you allocate a lot of heap regions of modest size with
malloc()/new[], the time spent when freeing them all with corresponding
free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~ 80,000
allocations). The slowness is clearly quadratic with the number of
allocations. You only start noticing it with ~ 30,000 allocations. And
interestingly, another condition for that slowness is that each
individual allocation much be strictly greater than 4096 * 4 bytes. At
exactly that value, perf is acceptable, but add one extra byte, and it
suddenly drops. I suspect that there must be a threshold from which
malloc() starts using VirtualAlloc() instead of the heap, which must
involve slow system calls, instead of a user-land allocation mechanism.

Anyone has already hit that and found solutions? The only potential idea
I found until now would be to use a private heap with HeapCreate() with
a fixed maximum size, which is a bit problematic to adopt by default,
basically that would mean that the size of GDAL_CACHEMAX would be
consumed as soon as one use the block cache.

Even

--
http://www.spatialys.com
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/cfeb3377/attachment-0001.htm>

From philippe.ghesquiere at airbus.com  Thu Mar 21 05:43:26 2024
From: philippe.ghesquiere at airbus.com (Philippe Ghesquiere)
Date: Thu, 21 Mar 2024 13:43:26 +0100
Subject: [gdal-dev] Compiling Poppler plugin under Windows (missing
 dependencies with GisInterrnals)
Message-ID: <CAAes_OHdq1hA7sqdP4ZidY1W2RVnVPzb1q36zoYSLi8uwWCtgA@mail.gmail.com>

Hi,

While compiling GDAL V3.8.4 under Windows (Visual Studio 17 2022), I would
like to add the PDF plugin.
I downloaded all dependencies from GisInternals
<https://www.gisinternals.com>.
The PDF plugin compilation, based on Poppler, fails due to missing
dependencies for poppler.lib.
I found a not-documented cmake variable used in FindPoppler.cmake:
POPPLER_EXTRA_LIBRARIES.

I tried to initialize it in my cmake configuration file :
set (POPPLER_EXTRA_LIBRARIES
"E:/00_GIT/GisInternals/release-1930-x64/lib/libjpeg.lib
E:/00_GIT/GisInternals/release-1930-x64/lib/libpng16_static.lib
E:/00_GIT/GisInternals/release-1930-x64/lib/tiff.lib" CACHE STRING "" FORCE)

The compilation process fails due to errors in
1) <AdditionalUsingDirectories> : it contains directories and the extra
librairies :
<AdditionalUsingDirectories>E:/00_GIT/GisInternals/release-1930-x64/lib;E:/00_GIT/GisInternals/release-1930-x64/lib/libjpeg.lib
E:/00_GIT/GisInternals/release-1930-x64/lib/libpng16_static.lib
E:/00_GIT/GisInternals/release-1930-x64/lib;E:/00_GIT/PDFium/lib</AdditionalUsingDirectories>

2) <AdditionalDependencies> : the extra librairies are separated by a
space, not a semicolon
<AdditionalDependencies>..\..\Debug\gdald.lib;E:\00_GIT\GisInternals\release-1930-x64\lib\poppler.lib;E:\00_GIT\PDFium\lib\pdfium.lib;winmm.lib;E:\00_GIT\GisInternals\release-1930-x64\lib\libjpeg.lib
E:\00_GIT\GisInternals\release-1930-x64\lib\libpng16_static.lib
E:\00_GIT\GisInternals\release-1930-x64\lib\tiff.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>

I guess, I did not initialize POPPLER_EXTRA_LIBRARIES:

   - is its type STRING ?
   - what separator should I use between library name ?

Thanks for your help
Philippe
The information in this e-mail is confidential. The contents may not be disclosed or used by anyone other than the addressee. Access to this e-mail by anyone else is unauthorised.
If you are not the intended recipient, please notify Airbus immediately and delete this e-mail.
Airbus cannot accept any responsibility for the accuracy or completeness of this e-mail as it has been sent over public networks. If you have any concerns over the content of this message or its Accuracy or Integrity, please contact Airbus immediately.
All outgoing e-mails from Airbus are checked using regularly updated virus scanning software but you should take whatever measures you deem to be appropriate to ensure that this message and any attachments are virus free.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/1b56e1e8/attachment.htm>

From even.rouault at spatialys.com  Thu Mar 21 06:07:02 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Mar 2024 14:07:02 +0100
Subject: [gdal-dev] Compiling Poppler plugin under Windows (missing
 dependencies with GisInterrnals)
In-Reply-To: <CAAes_OHdq1hA7sqdP4ZidY1W2RVnVPzb1q36zoYSLi8uwWCtgA@mail.gmail.com>
References: <CAAes_OHdq1hA7sqdP4ZidY1W2RVnVPzb1q36zoYSLi8uwWCtgA@mail.gmail.com>
Message-ID: <5ac87f69-59e6-4e95-b6a6-07061ae7e5c9@spatialys.com>

Philippe,


>
>
> I guess, I did not initialize POPPLER_EXTRA_LIBRARIES:
>
>   * is its type STRING ?
>
Yes
>
>   * what separator should I use between library?name ?
>
Semicolon ';'


I see this was added per 
https://github.com/OSGeo/gdal/commit/95ee1f855cd and 
https://github.com/OSGeo/gdal/commit/d69257df35c8ae3c283dce2077b7c49720f99663 
, although I'm a bit puzzled why gisinternals build recipe itself 
doesn't need it.

Feel free to submit a pull request to 
https://gdal.org/development/building_from_source.html to document that 
variable

Even


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/56d5b92d/attachment.htm>

From stefan.uhrig at sap.com  Thu Mar 21 06:17:14 2024
From: stefan.uhrig at sap.com (Uhrig, Stefan)
Date: Thu, 21 Mar 2024 13:17:14 +0000
Subject: [gdal-dev] Experience with slowness of free() on Windows with
 lots of allocations?
In-Reply-To: <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
 <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
 <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <AM0PR02MB5777AF877468B100BE9ECEB693322@AM0PR02MB5777.eurprd02.prod.outlook.com>

I was curious and gave it a try. I also saw the bad performance on deallocations, but surprisingly the usage of a std::vector in the outer loop speeds things up considerably.

I could still see a peak memory usage of 1.8GiB, so it does not seem as if the compiler did optimize something out.

#include <windows.h>
#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
#include <vector>

int SINGLE_ALLOC_SIZE = 21200;
int NUMBER_OF_ALLOCS = 21200 * 4;

class CMyClass
{
public:
    CMyClass()
    {
        lpData = new char[SINGLE_ALLOC_SIZE];
        assert(lpData);
    };

    ~CMyClass()
    {
        delete[] lpData;
    };

public:
    char* lpData;
};

int main()
{
    do
    {
        printf("start\n");
        {
            std::vector<CMyClass> lpList(NUMBER_OF_ALLOCS);
            //CMyClass* lpList = new CMyClass[NUMBER_OF_ALLOCS];
            printf("after alloc. starting freeing\n");
            //delete[] lpList;
        }
        printf("end\n");
    } while (1);
    return 0;
}




From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Abel Pau via gdal-dev
Sent: Thursday, March 21, 2024 9:52 AM
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

Hi Even,

you?re right. We also know that. When programming the driver I took it in consideration. Our solution is not rely on windows to make a good job with memory and we try to reuse as memory as possible instead of use calloc/free freely.

For instance, in the driver, for each feature I have to get or write the coordinates. I could do it every time I have to, so lots of times: create memory for reading, and then put them on the feature, and then free... so many times. What I do? When opening the layer I create some memory blocs of 250 Mb (due to the format itself) and I use that created memory to manage whatever I need. And when closing, I free it.

While doing that I observed that sometimes I have to use GDAL code that doesn?t take it in consideration (CPLRecode() for instance). Perhaps it could be improves as well.

Thanks for noticing that.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> En nombre de Javier Jimenez Shaw via gdal-dev
Enviado el: dijous, 21 de mar? de 2024 8:27
Para: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
CC: gdal dev <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Asunto: Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

In my company we confirmed that "Windows heap allocation mechanism sucks."
Closing the application after using gtiff driver can take many seconds due to memory deallocations.

One workaround was to use tcmalloc. I will ask my colleagues more details next week.

On Thu, 21 Mar 2024, 01:55 Even Rouault via gdal-dev, <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>> wrote:
Hi,

while investigating
https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408, I've
come to the conclusion that the Windows heap allocation mechanism sucks.
Basically if you allocate a lot of heap regions of modest size with
malloc()/new[], the time spent when freeing them all with corresponding
free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~ 80,000
allocations). The slowness is clearly quadratic with the number of
allocations. You only start noticing it with ~ 30,000 allocations. And
interestingly, another condition for that slowness is that each
individual allocation much be strictly greater than 4096 * 4 bytes. At
exactly that value, perf is acceptable, but add one extra byte, and it
suddenly drops. I suspect that there must be a threshold from which
malloc() starts using VirtualAlloc() instead of the heap, which must
involve slow system calls, instead of a user-land allocation mechanism.

Anyone has already hit that and found solutions? The only potential idea
I found until now would be to use a private heap with HeapCreate() with
a fixed maximum size, which is a bit problematic to adopt by default,
basically that would mean that the size of GDAL_CACHEMAX would be
consumed as soon as one use the block cache.

Even

--
http://www.spatialys.com<http://www.spatialys.com/>
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/84474aad/attachment-0001.htm>

From jesse.r.meyer at nasa.gov  Thu Mar 21 06:38:07 2024
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Thu, 21 Mar 2024 13:38:07 +0000
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: Experience with slowness of
 free() on Windows with lots of allocations?
In-Reply-To: <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
 <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
 <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <003F39B4-75EE-4AAB-B3E6-B67E493A3806@ndc.nasa.gov>

+1.  We use a variety of hand-rolled VirtualAlloc based (for basic tasks, a simple pointer bump, and for more elaborate needs, a ?buddy?) allocators, some of which try to be smart about memory usage via de-committing regions.  In our work, we tend to disable the GDAL cache entirely and rely on the file system?s file cache instead, which is a simplification we can make but is surely untenable in general here.

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Abel Pau via gdal-dev <gdal-dev at lists.osgeo.org>
Reply-To: Abel Pau <a.pau at creaf.uab.cat>
Date: Thursday, March 21, 2024 at 4:51?AM
To: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] [BULK] Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.


Hi Even,

you?re right. We also know that. When programming the driver I took it in consideration. Our solution is not rely on windows to make a good job with memory and we try to reuse as memory as possible instead of use calloc/free freely.

For instance, in the driver, for each feature I have to get or write the coordinates. I could do it every time I have to, so lots of times: create memory for reading, and then put them on the feature, and then free... so many times. What I do? When opening the layer I create some memory blocs of 250 Mb (due to the format itself) and I use that created memory to manage whatever I need. And when closing, I free it.

While doing that I observed that sometimes I have to use GDAL code that doesn?t take it in consideration (CPLRecode() for instance). Perhaps it could be improves as well.

Thanks for noticing that.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org> En nombre de Javier Jimenez Shaw via gdal-dev
Enviado el: dijous, 21 de mar? de 2024 8:27
Para: Even Rouault <even.rouault at spatialys.com>
CC: gdal dev <gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

In my company we confirmed that "Windows heap allocation mechanism sucks."
Closing the application after using gtiff driver can take many seconds due to memory deallocations.

One workaround was to use tcmalloc. I will ask my colleagues more details next week.

On Thu, 21 Mar 2024, 01:55 Even Rouault via gdal-dev, <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>> wrote:
Hi,

while investigating
https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408, I've
come to the conclusion that the Windows heap allocation mechanism sucks.
Basically if you allocate a lot of heap regions of modest size with
malloc()/new[], the time spent when freeing them all with corresponding
free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~ 80,000
allocations). The slowness is clearly quadratic with the number of
allocations. You only start noticing it with ~ 30,000 allocations. And
interestingly, another condition for that slowness is that each
individual allocation much be strictly greater than 4096 * 4 bytes. At
exactly that value, perf is acceptable, but add one extra byte, and it
suddenly drops. I suspect that there must be a threshold from which
malloc() starts using VirtualAlloc() instead of the heap, which must
involve slow system calls, instead of a user-land allocation mechanism.

Anyone has already hit that and found solutions? The only potential idea
I found until now would be to use a private heap with HeapCreate() with
a fixed maximum size, which is a bit problematic to adopt by default,
basically that would mean that the size of GDAL_CACHEMAX would be
consumed as soon as one use the block cache.

Even

--
http://www.spatialys.com<http://www.spatialys.com/>
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/3ed0207a/attachment.htm>

From stefan.uhrig at sap.com  Thu Mar 21 06:55:19 2024
From: stefan.uhrig at sap.com (Uhrig, Stefan)
Date: Thu, 21 Mar 2024 13:55:19 +0000
Subject: [gdal-dev] Experience with slowness of free() on Windows with
 lots of allocations?
In-Reply-To: <AM0PR02MB5777AF877468B100BE9ECEB693322@AM0PR02MB5777.eurprd02.prod.outlook.com>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
 <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
 <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <AM0PR02MB5777AF877468B100BE9ECEB693322@AM0PR02MB5777.eurprd02.prod.outlook.com>
Message-ID: <AM0PR02MB5777F98B20238EA21884085793322@AM0PR02MB5777.eurprd02.prod.outlook.com>

After further investigation I found that the order in which the CMyClass instances are destroyed matter. delete[] destroys them in reverse order while the vector destroys them in a forward order.

I could emulate both ways by using placement new:

#include <cassert>
#include <vector>

int SINGLE_ALLOC_SIZE = 21200;
int NUMBER_OF_ALLOCS = 21200 * 4;

class CMyClass
{
public:
    CMyClass()
    {
        lpData = new char[SINGLE_ALLOC_SIZE];
        assert(lpData);
    };

    ~CMyClass()
    {
        delete[] lpData;
    };

public:
    char* lpData;
};

void strat1()
{
    printf("strat1 start\n");
    CMyClass* lpList = new CMyClass[NUMBER_OF_ALLOCS];
    printf("after alloc. starting freeing\n");
    delete[] lpList;
    printf("end\n");
}

void strat2()
{
    printf("strat2 start\n");
    {
        std::vector<CMyClass> lpList(NUMBER_OF_ALLOCS);
        printf("after alloc. starting freeing\n");
    }
    printf("end\n");
}

void strat3()
{
    printf("strat3 start\n");
    void* block = malloc(NUMBER_OF_ALLOCS * sizeof(CMyClass));
    for (size_t i = 0; i < NUMBER_OF_ALLOCS; ++i)
    {
        void* address = (char*)block + i * sizeof(CMyClass);
        new (address) CMyClass();
    }
    printf("after alloc. starting freeing\n");
    for (size_t i = 0; i < NUMBER_OF_ALLOCS; ++i)
    {
        CMyClass* instance = (CMyClass*)((char*)block + (NUMBER_OF_ALLOCS - i - 1) * sizeof(CMyClass));
        instance->~CMyClass();
    }
    free(block);
    printf("end\n");
}

void strat4()
{
    printf("strat4 start\n");
    void* block = malloc(NUMBER_OF_ALLOCS * sizeof(CMyClass));
    for (size_t i = 0; i < NUMBER_OF_ALLOCS; ++i)
    {
        void* address = (char*)block + i * sizeof(CMyClass);
        new (address) CMyClass();
    }
    printf("after alloc. starting freeing\n");
    for (size_t i = 0; i < NUMBER_OF_ALLOCS; ++i)
    {
        CMyClass* instance = (CMyClass*)((char*)block + i * sizeof(CMyClass));
        instance->~CMyClass();
    }
    free(block);
    printf("end\n");
}

int main()
{
    do
    {
        strat1();
        strat2();
        strat3();
        strat4();
    } while (1);

}

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Uhrig, Stefan via gdal-dev
Sent: Thursday, March 21, 2024 2:17 PM
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

I was curious and gave it a try. I also saw the bad performance on deallocations, but surprisingly the usage of a std::vector in the outer loop speeds things up considerably.

I could still see a peak memory usage of 1.8GiB, so it does not seem as if the compiler did optimize something out.
<snip>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/2f6f6559/attachment-0001.htm>

From even.rouault at spatialys.com  Thu Mar 21 06:59:05 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Mar 2024 14:59:05 +0100
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: Experience with slowness of
 free() on Windows with lots of allocations?
In-Reply-To: <003F39B4-75EE-4AAB-B3E6-B67E493A3806@ndc.nasa.gov>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
 <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
 <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <003F39B4-75EE-4AAB-B3E6-B67E493A3806@ndc.nasa.gov>
Message-ID: <24703622-a76f-45af-b45a-e411adc22e1e@spatialys.com>

I've played with VirtualAlloc(NULL, SINGLE_ALLOC_SIZE, MEM_COMMIT | 
MEM_RESERVE, PAGE_READWRITE), and it does avoid the performance issue. 
However I see that VitualAlloc() allocates by chunks of 64 kB, so 
depending on the size of a block, it might cause significant waste of 
RAM, so that can't be used as a direct replacement of malloc().

My inclination would be to perhaps have an optional config option like 
GDAL_BLOCK_CACHE_USE_PRIVATE_HEAP that could be set, and when doing so 
it would use HeapCreate(0, 0, GDAL_CACHEMAX) to create a heap only used 
by the block cache. Not ideal, since that would reserve the whole 
GDAL_CACHEMAX (but for a large enough processing, you'll end up 
consuming it), but it has the advantage of not being extremely intrusive 
either... and could be easily ditched/replaced by something better in 
the future.

Regarding tcmalloc, I've had to use it on Linux too, but only on 
scenarios involving multithreading where it helps reducing RAM 
fragmentation: cf 
https://gdal.org/user/multithreading.html#ram-fragmentation-and-multi-threading 
. I've just tried quickly to use it on Windows to test it on the 
scenario, but didn't really manage to make it work. Even building it was 
challenging. Actually I tried https://github.com/gperftools/gperftools 
and I had to build from master since the latest tagged version doesn't 
build with CMake on Windows. But then nothing happens when linking 
tcmalloc_minimal.lib against my toy app. I probably missed something.

Anyway I don't really think we can force tcmalloc to be used in GDAL, as 
a library. Unless there would be a way to have its allocator to be 
optionnaly used at places that we control (ie explicitly call tc_malloc 
/ tc_free), and not replace the default malloc / free etc, which might 
be undesirable when GDAL is just a component of a larger application.

Disabling entirely the block cache (or setting it to a minimum value) is 
only a workable option for uncompressed formats, or if you use per-band 
blocks (INTERLEAVE=BAND in GTiff language) and not one block for all 
bands (INTERLEAVE=PIXEL), otherwise you'll pay multiple time the 
decompression.

Le 21/03/2024 ? 14:38, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND 
APPLICATIONS INC] via gdal-dev a ?crit?:
>
> +1. We use a variety of hand-rolled VirtualAlloc based (for basic 
> tasks, a simple pointer bump, and for more elaborate needs, a ?buddy?) 
> allocators, some of which try to be smart about memory usage via 
> de-committing regions. ?In our work, we tend to disable the GDAL cache 
> entirely and rely on the file system?s file cache instead, which is a 
> simplification we can make but is surely untenable in general here.
>
> *From: *gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Abel 
> Pau via gdal-dev <gdal-dev at lists.osgeo.org>
> *Reply-To: *Abel Pau <a.pau at creaf.uab.cat>
> *Date: *Thursday, March 21, 2024 at 4:51?AM
> *To: *"gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
> *Subject: *[EXTERNAL] [BULK] Re: [gdal-dev] Experience with slowness 
> of free() on Windows with lots of allocations?
>
> *CAUTION:*This email originated from outside of NASA.? Please take 
> care when clicking links or opening attachments. Use the "Report 
> Message" button to report suspicious messages to the NASA?SOC.
>
>
>
> Hi Even,
>
> you?re right. We also know that. When programming the driver I took it 
> in consideration. Our solution is not rely on windows to make a good 
> job with memory and we try to reuse as memory as possible instead of 
> use calloc/free freely.
>
> For instance, in the driver, for each feature I have to get or write 
> the coordinates. I could do it every time I have to, so lots of times: 
> create memory for reading, and then put them on the feature, and then 
> free... so many times. What I do? When opening the layer I create some 
> memory blocs of 250 Mb (due to the format itself) and I use that 
> created memory to manage whatever I need. And when closing, I free it.
>
> While doing that I observed that sometimes I have to use GDAL code 
> that doesn?t take it in consideration (CPLRecode()for instance). 
> Perhaps it could be improves as well.
>
> Thanks for noticing that.
>
> *De:*gdal-dev <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Javier 
> Jimenez Shaw via gdal-dev
> *Enviado el:* dijous, 21 de mar? de 2024 8:27
> *Para:* Even Rouault <even.rouault at spatialys.com>
> *CC:* gdal dev <gdal-dev at lists.osgeo.org>
> *Asunto:* Re: [gdal-dev] Experience with slowness of free() on Windows 
> with lots of allocations?
>
> In my company we confirmed that "Windows heap allocation mechanism sucks."
>
> Closing the application after using gtiff driver can take many seconds 
> due to memory deallocations.
>
> One workaround was to use tcmalloc. I will ask my colleagues more 
> details next week.
>
> On Thu, 21 Mar 2024, 01:55 Even Rouault via gdal-dev, 
> <gdal-dev at lists.osgeo.org> wrote:
>
>     Hi,
>
>     while investigating
>     https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408,
>     I've
>     come to the conclusion that the Windows heap allocation mechanism
>     sucks.
>     Basically if you allocate a lot of heap regions of modest size with
>     malloc()/new[], the time spent when freeing them all with
>     corresponding
>     free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~
>     80,000
>     allocations). The slowness is clearly quadratic with the number of
>     allocations. You only start noticing it with ~ 30,000 allocations.
>     And
>     interestingly, another condition for that slowness is that each
>     individual allocation much be strictly greater than 4096 * 4
>     bytes. At
>     exactly that value, perf is acceptable, but add one extra byte,
>     and it
>     suddenly drops. I suspect that there must be a threshold from which
>     malloc() starts using VirtualAlloc() instead of the heap, which must
>     involve slow system calls, instead of a user-land allocation
>     mechanism.
>
>     Anyone has already hit that and found solutions? The only
>     potential idea
>     I found until now would be to use a private heap with HeapCreate()
>     with
>     a fixed maximum size, which is a bit problematic to adopt by default,
>     basically that would mean that the size of GDAL_CACHEMAX would be
>     consumed as soon as one use the block cache.
>
>     Even
>
>     -- 
>     http://www.spatialys.com
>     My software is free, but my time generally not.
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/861d21e5/attachment.htm>

From jesse.r.meyer at nasa.gov  Thu Mar 21 07:14:56 2024
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Thu, 21 Mar 2024 14:14:56 +0000
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: Experience with slowness of
 free() on Windows with lots of allocations?
In-Reply-To: <24703622-a76f-45af-b45a-e411adc22e1e@spatialys.com>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
 <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
 <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <003F39B4-75EE-4AAB-B3E6-B67E493A3806@ndc.nasa.gov>
 <24703622-a76f-45af-b45a-e411adc22e1e@spatialys.com>
Message-ID: <F44AABC6-D1A2-4D96-B732-57DDAA693A28@ndc.nasa.gov>

I?ve used mimalloc successfully in the past, worth a look if a drop in replacement for new / delete / malloc / free is desirable.  Do note that its performance is usually uniformly superior to glibc / msvc but there are unintuitive performance cliffs.  Given the block nature of most gdal raster workloads, I don?t expect them to surface, but fyi.

Our allocators only call VAlloc when necessary ? we don?t issue a call 1:1 when a user would?ve used malloc.  The allocator has an internal state that knows when to call the underlying OS functions.  So in this case, if a user asks for 4kb, VAlloc would map in 64kb, and the next time a user asks for 4kb (or any size that would fit w/ alignment), we don?t ask VAlloc for memory, we issue a pointer bump (or something along those lines).  Naturally this is more complicated in a multithreaded context.  What we?ve done there is have a per-thread allocator so there?s no contention between threads in user-space.  Devil in the details, tho.

From: Even Rouault <even.rouault at spatialys.com>
Date: Thursday, March 21, 2024 at 9:59?AM
To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov>, Abel Pau <a.pau at creaf.uab.cat>, "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] [EXTERNAL] [BULK] Re: Experience with slowness of free() on Windows with lots of allocations?

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.



I've played with VirtualAlloc(NULL, SINGLE_ALLOC_SIZE, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE), and it does avoid the performance issue. However I see that VitualAlloc() allocates by chunks of 64 kB, so depending on the size of a block, it might cause significant waste of RAM, so that can't be used as a direct replacement of malloc().

My inclination would be to perhaps have an optional config option like GDAL_BLOCK_CACHE_USE_PRIVATE_HEAP that could be set, and when doing so it would use HeapCreate(0, 0, GDAL_CACHEMAX) to create a heap only used by the block cache. Not ideal, since that would reserve the whole GDAL_CACHEMAX (but for a large enough processing, you'll end up consuming it), but it has the advantage of not being extremely intrusive either... and could be easily ditched/replaced by something better in the future.

Regarding tcmalloc, I've had to use it on Linux too, but only on scenarios involving multithreading where it helps reducing RAM fragmentation: cf https://gdal.org/user/multithreading.html#ram-fragmentation-and-multi-threading . I've just tried quickly to use it on Windows to test it on the scenario, but didn't really manage to make it work. Even building it was challenging. Actually I tried https://github.com/gperftools/gperftools and I had to build from master since the latest tagged version doesn't build with CMake on Windows. But then nothing happens when linking tcmalloc_minimal.lib against my toy app. I probably missed something.

Anyway I don't really think we can force tcmalloc to be used in GDAL, as a library. Unless there would be a way to have its allocator to be optionnaly used at places that we control (ie explicitly call tc_malloc / tc_free), and not replace the default malloc / free etc, which might be undesirable when GDAL is just a component of a larger application.

Disabling entirely the block cache (or setting it to a minimum value) is only a workable option for uncompressed formats, or if you use per-band blocks (INTERLEAVE=BAND in GTiff language) and not one block for all bands (INTERLEAVE=PIXEL), otherwise you'll pay multiple time the decompression.
Le 21/03/2024 ? 14:38, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev a ?crit :
+1.  We use a variety of hand-rolled VirtualAlloc based (for basic tasks, a simple pointer bump, and for more elaborate needs, a ?buddy?) allocators, some of which try to be smart about memory usage via de-committing regions.  In our work, we tend to disable the GDAL cache entirely and rely on the file system?s file cache instead, which is a simplification we can make but is surely untenable in general here.

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of Abel Pau via gdal-dev <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Reply-To: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>
Date: Thursday, March 21, 2024 at 4:51?AM
To: "gdal-dev at lists.osgeo.org"<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] [BULK] Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.



Hi Even,

you?re right. We also know that. When programming the driver I took it in consideration. Our solution is not rely on windows to make a good job with memory and we try to reuse as memory as possible instead of use calloc/free freely.

For instance, in the driver, for each feature I have to get or write the coordinates. I could do it every time I have to, so lots of times: create memory for reading, and then put them on the feature, and then free... so many times. What I do? When opening the layer I create some memory blocs of 250 Mb (due to the format itself) and I use that created memory to manage whatever I need. And when closing, I free it.

While doing that I observed that sometimes I have to use GDAL code that doesn?t take it in consideration (CPLRecode() for instance). Perhaps it could be improves as well.

Thanks for noticing that.

De: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> En nombre de Javier Jimenez Shaw via gdal-dev
Enviado el: dijous, 21 de mar? de 2024 8:27
Para: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
CC: gdal dev <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Experience with slowness of free() on Windows with lots of allocations?

In my company we confirmed that "Windows heap allocation mechanism sucks."
Closing the application after using gtiff driver can take many seconds due to memory deallocations.

One workaround was to use tcmalloc. I will ask my colleagues more details next week.

On Thu, 21 Mar 2024, 01:55 Even Rouault via gdal-dev, <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>> wrote:
Hi,

while investigating
https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408, I've
come to the conclusion that the Windows heap allocation mechanism sucks.
Basically if you allocate a lot of heap regions of modest size with
malloc()/new[], the time spent when freeing them all with corresponding
free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~ 80,000
allocations). The slowness is clearly quadratic with the number of
allocations. You only start noticing it with ~ 30,000 allocations. And
interestingly, another condition for that slowness is that each
individual allocation much be strictly greater than 4096 * 4 bytes. At
exactly that value, perf is acceptable, but add one extra byte, and it
suddenly drops. I suspect that there must be a threshold from which
malloc() starts using VirtualAlloc() instead of the heap, which must
involve slow system calls, instead of a user-land allocation mechanism.

Anyone has already hit that and found solutions? The only potential idea
I found until now would be to use a private heap with HeapCreate() with
a fixed maximum size, which is a bit problematic to adopt by default,
basically that would mean that the size of GDAL_CACHEMAX would be
consumed as soon as one use the block cache.

Even

--
http://www.spatialys.com<http://www.spatialys.com/>
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com<http://www.spatialys.com/>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/f5f9b1eb/attachment-0001.htm>

From philippe.ghesquiere at airbus.com  Thu Mar 21 10:49:31 2024
From: philippe.ghesquiere at airbus.com (Philippe Ghesquiere)
Date: Thu, 21 Mar 2024 18:49:31 +0100
Subject: [gdal-dev] Compiling Poppler plugin under Windows (missing
 dependencies with GisInterrnals)
In-Reply-To: <5ac87f69-59e6-4e95-b6a6-07061ae7e5c9@spatialys.com>
References: <CAAes_OHdq1hA7sqdP4ZidY1W2RVnVPzb1q36zoYSLi8uwWCtgA@mail.gmail.com>
 <5ac87f69-59e6-4e95-b6a6-07061ae7e5c9@spatialys.com>
Message-ID: <CAAes_OHzh5kfQ=Gmka2FpZHXugp=pKMThhb4pLLHY2NALKcm+Q@mail.gmail.com>

Thanks Even.

As far as Gisinternals is concerned, I think they are still using "nmake"
to compile the PDF plugin (see makefile
<https://github.com/gisinternals/buildsystem/blob/main/Makefile>).
This may explain why they don't need the POPPLER_EXTRA_LIBRARIES parameter.

Concerning the document, I need to check how to do it from my office
(firewall strict rules ...)

Philippe

On Thu, Mar 21, 2024 at 2:07?PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Philippe,
>
>
>
> I guess, I did not initialize POPPLER_EXTRA_LIBRARIES:
>
>    - is its type STRING ?
>
> Yes
>
>
>    - what separator should I use between library name ?
>
> Semicolon ';'
>
>
> I see this was added per https://github.com/OSGeo/gdal/commit/95ee1f855cd
> and
> https://github.com/OSGeo/gdal/commit/d69257df35c8ae3c283dce2077b7c49720f99663
> , although I'm a bit puzzled why gisinternals build recipe itself doesn't
> need it.
>
> Feel free to submit a pull request to
> https://gdal.org/development/building_from_source.html to document that
> variable
>
> Even
>
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
The information in this e-mail is confidential. The contents may not be disclosed or used by anyone other than the addressee. Access to this e-mail by anyone else is unauthorised.
If you are not the intended recipient, please notify Airbus immediately and delete this e-mail.
Airbus cannot accept any responsibility for the accuracy or completeness of this e-mail as it has been sent over public networks. If you have any concerns over the content of this message or its Accuracy or Integrity, please contact Airbus immediately.
All outgoing e-mails from Airbus are checked using regularly updated virus scanning software but you should take whatever measures you deem to be appropriate to ensure that this message and any attachments are virus free.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/06cfb56b/attachment.htm>

From conrad_bielski at yahoo.com  Thu Mar 21 13:45:27 2024
From: conrad_bielski at yahoo.com (Conrad Bielski)
Date: Thu, 21 Mar 2024 20:45:27 +0000 (UTC)
Subject: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should be metres,
 how can I fix this?
References: <1045195440.383478.1711053927068.ref@mail.yahoo.com>
Message-ID: <1045195440.383478.1711053927068@mail.yahoo.com>

Hello GDALers,

I have a question about reading USGS 3DEP (3D Elevation Program) data. Inside of this data, a GEOTIFF tag 42114 is provided which is causing problems with datum shifts.

So when I use GDAL to compute the datum shifts, the tag is read and interprets that the DEM is showing elevation in 'feet' while the DEM is actually in metres. The DEMs are in fact in meter elevations and meter UTM horizontal coordinates. This is obviously erroneously integrated into the tag.

So my question is whether anyone has come across this issue and found a solution? Is there a way to edit the offending tag so that it is correctly interpreted as metres instead of feet? Other potential solutions so that GDAL interprets the elevation correctly?

Thanks in advance for your help. I provide below the output of gdalinfo which I hope could help with the offending info in bold.

Have a great day,
Conrad




Driver: GTiff/GeoTIFF
Files: I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
? ? ? ?I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
Size is 10012, 10012
Coordinate System is:
PROJCRS["NAD83 / UTM zone 17N",
? ? BASEGEOGCRS["NAD83",
? ? ? ? DATUM["North American Datum 1983",
? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
? ? ? ? PRIMEM["Greenwich",0,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433]],
? ? ? ? ID["EPSG",4269]],
? ? CONVERSION["UTM zone 17N",
? ? ? ? METHOD["Transverse Mercator",
? ? ? ? ? ? ID["EPSG",9807]],
? ? ? ? PARAMETER["Latitude of natural origin",0,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
? ? ? ? ? ? ID["EPSG",8801]],
? ? ? ? PARAMETER["Longitude of natural origin",-81,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
? ? ? ? ? ? ID["EPSG",8802]],
? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
? ? ? ? ? ? SCALEUNIT["unity",1],
? ? ? ? ? ? ID["EPSG",8805]],
? ? ? ? PARAMETER["False easting",500000,
? ? ? ? ? ? LENGTHUNIT["metre",1],
? ? ? ? ? ? ID["EPSG",8806]],
? ? ? ? PARAMETER["False northing",0,
? ? ? ? ? ? LENGTHUNIT["metre",1],
? ? ? ? ? ? ID["EPSG",8807]]],
? ? CS[Cartesian,2],
? ? ? ? AXIS["(E)",east,
? ? ? ? ? ? ORDER[1],
? ? ? ? ? ? LENGTHUNIT["metre",1]],
? ? ? ? AXIS["(N)",north,
? ? ? ? ? ? ORDER[2],
? ? ? ? ? ? LENGTHUNIT["metre",1]],
? ? USAGE[
? ? ? ? SCOPE["Engineering survey, topographic mapping."],
? ? ? ? AREA["North America - between 84?W and 78?W - onshore and offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - Florida; Georgia; Kentucky; Maryland; Michigan; New York; North Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia; West Virginia."],
? ? ? ? BBOX[23.81,-84,84,-78]],
? ? ID["EPSG",26917]]
Data axis to CRS axis mapping: 1,2
Origin = (339993.999958705157042,3920005.999981591943651)
Pixel Size = (1.000000000000000,-1.000000000000000)
Metadata:
? AREA_OR_POINT=Area
Image Structure Metadata:
? COMPRESSION=LZW
? INTERLEAVE=BAND
? LAYOUT=COG
? PREDICTOR=3
Corner Coordinates:
Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
? Min=669.509 Max=1604.949 
? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
? NoData Value=-999999
? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
? Unit Type: US survey foot
? Metadata:
? ? STATISTICS_APPROXIMATE=YES
? ? STATISTICS_MAXIMUM=1604.9490966797
? ? STATISTICS_MEAN=988.29463693706
? ? STATISTICS_MINIMUM=669.50915527344
? ? STATISTICS_STDDEV=159.80361228109
? ? STATISTICS_VALID_PERCENT=100
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/68938236/attachment.htm>

From even.rouault at spatialys.com  Thu Mar 21 13:49:55 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Mar 2024 21:49:55 +0100
Subject: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should be
 metres, how can I fix this?
In-Reply-To: <1045195440.383478.1711053927068@mail.yahoo.com>
References: <1045195440.383478.1711053927068.ref@mail.yahoo.com>
 <1045195440.383478.1711053927068@mail.yahoo.com>
Message-ID: <7832c1d9-61ce-41b0-b524-2f00859c817a@spatialys.com>


Le 21/03/2024 ? 21:45, Conrad Bielski via gdal-dev a ?crit?:
> Hello GDALers,
>
> I have a question about reading USGS 3DEP (3D Elevation Program) data. 
> Inside of this data, a GEOTIFF tag 42114 is provided which is causing 
> problems with datum shifts.

There's no such thing as a GEOTIFF tag 42114.

The closest tags are:

#define TIFFTAG_GDAL_METADATA 42112
#define TIFFTAG_GDAL_NODATA 42113

It would be helpuful if you could provide the file, or the result of a 
"tiffdump -m 1000 the.tif" and "listgeo the.tif" on it.

And was the .tif.aux.xml provided with the TIFF, or computed by GDAL. 
Because the information might come from it too.

>
> So when I use GDAL to compute the datum shifts, the tag is read and 
> interprets that the DEM is showing elevation in 'feet' while the DEM 
> is actually in metres. The DEMs are in fact in meter elevations and 
> meter UTM horizontal coordinates. This is obviously erroneously 
> integrated into the tag.
>
> So my question is whether anyone has come across this issue and found 
> a solution? Is there a way to edit the offending tag so that it is 
> correctly interpreted as metres instead of feet? Other potential 
> solutions so that GDAL interprets the elevation correctly?
>
> Thanks in advance for your help. I provide below the output of 
> gdalinfo which I hope could help with the offending info in bold.
>
> Have a great day,
> Conrad
>
>
>
>
> Driver: GTiff/GeoTIFF
> Files: 
> I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
> ?I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
> Size is 10012, 10012
> Coordinate System is:
> PROJCRS["NAD83 / UTM zone 17N",
> ? ? BASEGEOGCRS["NAD83",
> ? ? ? ? DATUM["North American Datum 1983",
> ? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
> ? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
> ? ? ? ? PRIMEM["Greenwich",0,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433]],
> ? ? ? ? ID["EPSG",4269]],
> ? ? CONVERSION["UTM zone 17N",
> ? ? ? ? METHOD["Transverse Mercator",
> ? ? ? ? ? ? ID["EPSG",9807]],
> ? ? ? ? PARAMETER["Latitude of natural origin",0,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
> ? ? ? ? ? ? ID["EPSG",8801]],
> ? ? ? ? PARAMETER["Longitude of natural origin",-81,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
> ? ? ? ? ? ? ID["EPSG",8802]],
> ? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
> ? ? ? ? ? ? SCALEUNIT["unity",1],
> ? ? ? ? ? ? ID["EPSG",8805]],
> ? ? ? ? PARAMETER["False easting",500000,
> ? ? ? ? ? ? LENGTHUNIT["metre",1],
> ? ? ? ? ? ? ID["EPSG",8806]],
> ? ? ? ? PARAMETER["False northing",0,
> ? ? ? ? ? ? LENGTHUNIT["metre",1],
> ? ? ? ? ? ? ID["EPSG",8807]]],
> ? ? CS[Cartesian,2],
> ? ? ? ? AXIS["(E)",east,
> ? ? ? ? ? ? ORDER[1],
> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
> ? ? ? ? AXIS["(N)",north,
> ? ? ? ? ? ? ORDER[2],
> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
> ? ? USAGE[
> ? ? ? ? SCOPE["Engineering survey, topographic mapping."],
> ? ? ? ? AREA["North America - between 84?W and 78?W - onshore and 
> offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - 
> Florida; Georgia; Kentucky; Maryland; Michigan; New York; North 
> Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia; 
> West Virginia."],
> ? ? ? ? BBOX[23.81,-84,84,-78]],
> ? ? ID["EPSG",26917]]
> Data axis to CRS axis mapping: 1,2
> Origin = (339993.999958705157042,3920005.999981591943651)
> Pixel Size = (1.000000000000000,-1.000000000000000)
> Metadata:
> ? AREA_OR_POINT=Area
> Image Structure Metadata:
> ? COMPRESSION=LZW
> ? INTERLEAVE=BAND
> ? LAYOUT=COG
> ? PREDICTOR=3
> Corner Coordinates:
> Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
> Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
> Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
> Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
> Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
> Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
> ? Min=669.509 Max=1604.949
> ? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
> ? NoData Value=-999999
> ? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
> *Unit Type: US survey foot*
> ? Metadata:
> ? ? STATISTICS_APPROXIMATE=YES
> ? ? STATISTICS_MAXIMUM=1604.9490966797
> ? ? STATISTICS_MEAN=988.29463693706
> ? ? STATISTICS_MINIMUM=669.50915527344
> ? ? STATISTICS_STDDEV=159.80361228109
> ? ? STATISTICS_VALID_PERCENT=100
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/1e68a1d4/attachment-0001.htm>

From conrad_bielski at yahoo.com  Thu Mar 21 17:15:28 2024
From: conrad_bielski at yahoo.com (Conrad Bielski)
Date: Fri, 22 Mar 2024 00:15:28 +0000 (UTC)
Subject: [gdal-dev] gdal-dev Digest, Vol 238, Issue 82
In-Reply-To: <mailman.190454.1711054198.32175.gdal-dev@lists.osgeo.org>
References: <mailman.190454.1711054198.32175.gdal-dev@lists.osgeo.org>
Message-ID: <1393569751.49246.1711066528175@mail.yahoo.com>

 Thanks Even,
you are correct about the tag number (I sent the incorrrect one).
I have provided a sample tif and some other descriptions of the issue here:bad_geotiff - Google Drive

| 
| 
|  | 
bad_geotiff - Google Drive


 |

 |

 |


The three files there are the following:1.? A bad tiff (this is slightly smaller; they are all pretty big).2.? A GDAL info dump (survey feet is almost at the bottom)3. A PDF with an explanation of the issue
thanks for your help.Conrad


    On Thursday, March 21, 2024 at 04:50:19 PM EDT, gdal-dev-request at lists.osgeo.org <gdal-dev-request at lists.osgeo.org> wrote:  
 
 Send gdal-dev mailing list submissions to
??? gdal-dev at lists.osgeo.org

To subscribe or unsubscribe via the World Wide Web, visit
??? https://lists.osgeo.org/mailman/listinfo/gdal-dev
or, via email, send a message with subject or body 'help' to
??? gdal-dev-request at lists.osgeo.org

You can reach the person managing the list at
??? gdal-dev-owner at lists.osgeo.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of gdal-dev digest..."


Today's Topics:

? 1. USGS 3DEP (3D Elevation Program) - feet should be metres, how
? ? ? can I fix this? (Conrad Bielski)
? 2. Re: USGS 3DEP (3D Elevation Program) - feet should be metres,
? ? ? how can I fix this? (Even Rouault)


----------------------------------------------------------------------

Message: 1
Date: Thu, 21 Mar 2024 20:45:27 +0000 (UTC)
From: Conrad Bielski <conrad_bielski at yahoo.com>
To: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should be
??? metres, how can I fix this?
Message-ID: <1045195440.383478.1711053927068 at mail.yahoo.com>
Content-Type: text/plain; charset="utf-8"

Hello GDALers,

I have a question about reading USGS 3DEP (3D Elevation Program) data. Inside of this data, a GEOTIFF tag 42114 is provided which is causing problems with datum shifts.

So when I use GDAL to compute the datum shifts, the tag is read and interprets that the DEM is showing elevation in 'feet' while the DEM is actually in metres. The DEMs are in fact in meter elevations and meter UTM horizontal coordinates. This is obviously erroneously integrated into the tag.

So my question is whether anyone has come across this issue and found a solution? Is there a way to edit the offending tag so that it is correctly interpreted as metres instead of feet? Other potential solutions so that GDAL interprets the elevation correctly?

Thanks in advance for your help. I provide below the output of gdalinfo which I hope could help with the offending info in bold.

Have a great day,
Conrad




Driver: GTiff/GeoTIFF
Files: I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
? ? ? ?I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
Size is 10012, 10012
Coordinate System is:
PROJCRS["NAD83 / UTM zone 17N",
? ? BASEGEOGCRS["NAD83",
? ? ? ? DATUM["North American Datum 1983",
? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
? ? ? ? PRIMEM["Greenwich",0,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433]],
? ? ? ? ID["EPSG",4269]],
? ? CONVERSION["UTM zone 17N",
? ? ? ? METHOD["Transverse Mercator",
? ? ? ? ? ? ID["EPSG",9807]],
? ? ? ? PARAMETER["Latitude of natural origin",0,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
? ? ? ? ? ? ID["EPSG",8801]],
? ? ? ? PARAMETER["Longitude of natural origin",-81,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
? ? ? ? ? ? ID["EPSG",8802]],
? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
? ? ? ? ? ? SCALEUNIT["unity",1],
? ? ? ? ? ? ID["EPSG",8805]],
? ? ? ? PARAMETER["False easting",500000,
? ? ? ? ? ? LENGTHUNIT["metre",1],
? ? ? ? ? ? ID["EPSG",8806]],
? ? ? ? PARAMETER["False northing",0,
? ? ? ? ? ? LENGTHUNIT["metre",1],
? ? ? ? ? ? ID["EPSG",8807]]],
? ? CS[Cartesian,2],
? ? ? ? AXIS["(E)",east,
? ? ? ? ? ? ORDER[1],
? ? ? ? ? ? LENGTHUNIT["metre",1]],
? ? ? ? AXIS["(N)",north,
? ? ? ? ? ? ORDER[2],
? ? ? ? ? ? LENGTHUNIT["metre",1]],
? ? USAGE[
? ? ? ? SCOPE["Engineering survey, topographic mapping."],
? ? ? ? AREA["North America - between 84?W and 78?W - onshore and offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - Florida; Georgia; Kentucky; Maryland; Michigan; New York; North Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia; West Virginia."],
? ? ? ? BBOX[23.81,-84,84,-78]],
? ? ID["EPSG",26917]]
Data axis to CRS axis mapping: 1,2
Origin = (339993.999958705157042,3920005.999981591943651)
Pixel Size = (1.000000000000000,-1.000000000000000)
Metadata:
? AREA_OR_POINT=Area
Image Structure Metadata:
? COMPRESSION=LZW
? INTERLEAVE=BAND
? LAYOUT=COG
? PREDICTOR=3
Corner Coordinates:
Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
? Min=669.509 Max=1604.949 
? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
? NoData Value=-999999
? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
? Unit Type: US survey foot
? Metadata:
? ? STATISTICS_APPROXIMATE=YES
? ? STATISTICS_MAXIMUM=1604.9490966797
? ? STATISTICS_MEAN=988.29463693706
? ? STATISTICS_MINIMUM=669.50915527344
? ? STATISTICS_STDDEV=159.80361228109
? ? STATISTICS_VALID_PERCENT=100
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/68938236/attachment-0001.htm>

------------------------------

Message: 2
Date: Thu, 21 Mar 2024 21:49:55 +0100
From: Even Rouault <even.rouault at spatialys.com>
To: Conrad Bielski <conrad_bielski at yahoo.com>,
??? "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should
??? be metres, how can I fix this?
Message-ID: <7832c1d9-61ce-41b0-b524-2f00859c817a at spatialys.com>
Content-Type: text/plain; charset="utf-8"; Format="flowed"


Le 21/03/2024 ? 21:45, Conrad Bielski via gdal-dev a ?crit?:
> Hello GDALers,
>
> I have a question about reading USGS 3DEP (3D Elevation Program) data. 
> Inside of this data, a GEOTIFF tag 42114 is provided which is causing 
> problems with datum shifts.

There's no such thing as a GEOTIFF tag 42114.

The closest tags are:

#define TIFFTAG_GDAL_METADATA 42112
#define TIFFTAG_GDAL_NODATA 42113

It would be helpuful if you could provide the file, or the result of a 
"tiffdump -m 1000 the.tif" and "listgeo the.tif" on it.

And was the .tif.aux.xml provided with the TIFF, or computed by GDAL. 
Because the information might come from it too.

>
> So when I use GDAL to compute the datum shifts, the tag is read and 
> interprets that the DEM is showing elevation in 'feet' while the DEM 
> is actually in metres. The DEMs are in fact in meter elevations and 
> meter UTM horizontal coordinates. This is obviously erroneously 
> integrated into the tag.
>
> So my question is whether anyone has come across this issue and found 
> a solution? Is there a way to edit the offending tag so that it is 
> correctly interpreted as metres instead of feet? Other potential 
> solutions so that GDAL interprets the elevation correctly?
>
> Thanks in advance for your help. I provide below the output of 
> gdalinfo which I hope could help with the offending info in bold.
>
> Have a great day,
> Conrad
>
>
>
>
> Driver: GTiff/GeoTIFF
> Files: 
> I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
> ?I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
> Size is 10012, 10012
> Coordinate System is:
> PROJCRS["NAD83 / UTM zone 17N",
> ? ? BASEGEOGCRS["NAD83",
> ? ? ? ? DATUM["North American Datum 1983",
> ? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
> ? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
> ? ? ? ? PRIMEM["Greenwich",0,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433]],
> ? ? ? ? ID["EPSG",4269]],
> ? ? CONVERSION["UTM zone 17N",
> ? ? ? ? METHOD["Transverse Mercator",
> ? ? ? ? ? ? ID["EPSG",9807]],
> ? ? ? ? PARAMETER["Latitude of natural origin",0,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
> ? ? ? ? ? ? ID["EPSG",8801]],
> ? ? ? ? PARAMETER["Longitude of natural origin",-81,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
> ? ? ? ? ? ? ID["EPSG",8802]],
> ? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
> ? ? ? ? ? ? SCALEUNIT["unity",1],
> ? ? ? ? ? ? ID["EPSG",8805]],
> ? ? ? ? PARAMETER["False easting",500000,
> ? ? ? ? ? ? LENGTHUNIT["metre",1],
> ? ? ? ? ? ? ID["EPSG",8806]],
> ? ? ? ? PARAMETER["False northing",0,
> ? ? ? ? ? ? LENGTHUNIT["metre",1],
> ? ? ? ? ? ? ID["EPSG",8807]]],
> ? ? CS[Cartesian,2],
> ? ? ? ? AXIS["(E)",east,
> ? ? ? ? ? ? ORDER[1],
> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
> ? ? ? ? AXIS["(N)",north,
> ? ? ? ? ? ? ORDER[2],
> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
> ? ? USAGE[
> ? ? ? ? SCOPE["Engineering survey, topographic mapping."],
> ? ? ? ? AREA["North America - between 84?W and 78?W - onshore and 
> offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - 
> Florida; Georgia; Kentucky; Maryland; Michigan; New York; North 
> Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia; 
> West Virginia."],
> ? ? ? ? BBOX[23.81,-84,84,-78]],
> ? ? ID["EPSG",26917]]
> Data axis to CRS axis mapping: 1,2
> Origin = (339993.999958705157042,3920005.999981591943651)
> Pixel Size = (1.000000000000000,-1.000000000000000)
> Metadata:
> ? AREA_OR_POINT=Area
> Image Structure Metadata:
> ? COMPRESSION=LZW
> ? INTERLEAVE=BAND
> ? LAYOUT=COG
> ? PREDICTOR=3
> Corner Coordinates:
> Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
> Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
> Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
> Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
> Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
> Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
> ? Min=669.509 Max=1604.949
> ? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
> ? NoData Value=-999999
> ? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
> *Unit Type: US survey foot*
> ? Metadata:
> ? ? STATISTICS_APPROXIMATE=YES
> ? ? STATISTICS_MAXIMUM=1604.9490966797
> ? ? STATISTICS_MEAN=988.29463693706
> ? ? STATISTICS_MINIMUM=669.50915527344
> ? ? STATISTICS_STDDEV=159.80361228109
> ? ? STATISTICS_VALID_PERCENT=100
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/1e68a1d4/attachment.htm>

------------------------------

Subject: Digest Footer

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev


------------------------------

End of gdal-dev Digest, Vol 238, Issue 82
*****************************************
  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240322/88a207ff/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Mar 22 01:57:00 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Mar 2024 09:57:00 +0100
Subject: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should be
 metres, how can I fix this?
In-Reply-To: <971450251.44371.1711066599559@mail.yahoo.com>
References: <1045195440.383478.1711053927068.ref@mail.yahoo.com>
 <1045195440.383478.1711053927068@mail.yahoo.com>
 <7832c1d9-61ce-41b0-b524-2f00859c817a@spatialys.com>
 <971450251.44371.1711066599559@mail.yahoo.com>
Message-ID: <94474859-a700-4099-a6c5-66bb8e86ee2e@spatialys.com>

Hi,

having looked at the file, I believe GDAL behaves correctly given the 
metadata in the file. This is clearly a unit type attached to the Band, 
and it should be corrected by the data producer to reflect what is 
really used in it

One way to correct it on your side is for example this little Python snippet

from osgeo import gdal
ds = gdal.Open('test.tif')
ds.GetRasterBand(1).SetUnitType('metre')

As the file is used in read-only mode, this will generate an auxiliary 
.aux.xml side car file overriding the unit.

You can also directly override the wrong metadata inside the TIFF with

ds = gdal.OpenEx('test.tif', open_options=['IGNORE_COG_LAYOUT_BREAK=YES'])
ds.GetRasterBand(1).SetUnitType('metre')

The IGNORE_COG_LAYOUT_BREAK=YES open option is because modifying TIFF 
metadata causes it to be rewritten at the end of the file, which 
"breaks" the COG convention. But that's still a perfectly valid GeoTIFF 
file, and will not change anything for local use of such file. You could 
reprocess that to a fully compliant COG with gdal_translate -of COG

Regarding how that is used by gdalwarp, the doc enhancement at 
https://github.com/OSGeo/gdal/pull/9527 captures my initial attempt at 
answering your questions.

Even


Le 22/03/2024 ? 01:16, Conrad Bielski a ?crit?:
> Just realised I should have put you also in CC
>
> Here is my response message again.
>
> Thanks Even,
>
> you are correct about the tag number (I sent the incorrrect one).
>
> I have provided a sample tif and some other descriptions of the issue 
> here:
> bad_geotiff - Google Drive 
> <https://drive.google.com/drive/folders/1LVJqoKrnLRf6_5FpE7a5SrUGIWBPQmqa?usp=sharing>
>
> 	
>
>
>     bad_geotiff - Google Drive
>
> <https://drive.google.com/drive/folders/1LVJqoKrnLRf6_5FpE7a5SrUGIWBPQmqa?usp=sharing> 
>
>
> The three files there are the following:
> 1.? A bad tiff (this is slightly smaller; they are all pretty big).
> 2.? A GDAL info dump (survey feet is almost at the bottom)
> 3. A PDF with an explanation of the issue
>
> thanks for your help.
> Conrad
>
>
> On Thursday, March 21, 2024 at 04:49:57 PM EDT, Even Rouault 
> <even.rouault at spatialys.com> wrote:
>
>
>
> Le 21/03/2024 ? 21:45, Conrad Bielski via gdal-dev a ?crit?:
> Hello GDALers,
>
> I have a question about reading USGS 3DEP (3D Elevation Program) data. 
> Inside of this data, a GEOTIFF tag 42114 is provided which is causing 
> problems with datum shifts.
>
> There's no such thing as a GEOTIFF tag 42114.
>
> The closest tags are:
>
> #define TIFFTAG_GDAL_METADATA 42112
> #define TIFFTAG_GDAL_NODATA 42113
>
> It would be helpuful if you could provide the file, or the result of a 
> "tiffdump -m 1000 the.tif" and "listgeo the.tif" on it.
>
> And was the .tif.aux.xml provided with the TIFF, or computed by GDAL. 
> Because the information might come from it too.
>
>
>>
>> So when I use GDAL to compute the datum shifts, the tag is read and 
>> interprets that the DEM is showing elevation in 'feet' while the DEM 
>> is actually in metres. The DEMs are in fact in meter elevations and 
>> meter UTM horizontal coordinates. This is obviously erroneously 
>> integrated into the tag.
>>
>> So my question is whether anyone has come across this issue and found 
>> a solution? Is there a way to edit the offending tag so that it is 
>> correctly interpreted as metres instead of feet? Other potential 
>> solutions so that GDAL interprets the elevation correctly?
>>
>> Thanks in advance for your help. I provide below the output of 
>> gdalinfo which I hope could help with the offending info in bold.
>>
>> Have a great day,
>> Conrad
>>
>>
>>
>>
>> Driver: GTiff/GeoTIFF
>> Files: 
>> I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
>> ?I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
>> Size is 10012, 10012
>> Coordinate System is:
>> PROJCRS["NAD83 / UTM zone 17N",
>> ? ? BASEGEOGCRS["NAD83",
>> ? ? ? ? DATUM["North American Datum 1983",
>> ? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
>> ? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
>> ? ? ? ? PRIMEM["Greenwich",0,
>> ANGLEUNIT["degree",0.0174532925199433]],
>> ? ? ? ? ID["EPSG",4269]],
>> ? ? CONVERSION["UTM zone 17N",
>> ? ? ? ? METHOD["Transverse Mercator",
>> ? ? ? ? ? ? ID["EPSG",9807]],
>> ? ? ? ? PARAMETER["Latitude of natural origin",0,
>> ANGLEUNIT["degree",0.0174532925199433],
>> ? ? ? ? ? ? ID["EPSG",8801]],
>> ? ? ? ? PARAMETER["Longitude of natural origin",-81,
>> ANGLEUNIT["degree",0.0174532925199433],
>> ? ? ? ? ? ? ID["EPSG",8802]],
>> ? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
>> ? ? ? ? ? ? SCALEUNIT["unity",1],
>> ? ? ? ? ? ? ID["EPSG",8805]],
>> ? ? ? ? PARAMETER["False easting",500000,
>> ? ? ? ? ? ? LENGTHUNIT["metre",1],
>> ? ? ? ? ? ? ID["EPSG",8806]],
>> ? ? ? ? PARAMETER["False northing",0,
>> ? ? ? ? ? ? LENGTHUNIT["metre",1],
>> ? ? ? ? ? ? ID["EPSG",8807]]],
>> ? ? CS[Cartesian,2],
>> ? ? ? ? AXIS["(E)",east,
>> ? ? ? ? ? ? ORDER[1],
>> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
>> ? ? ? ? AXIS["(N)",north,
>> ? ? ? ? ? ? ORDER[2],
>> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
>> ? ? USAGE[
>> ? ? ? ? SCOPE["Engineering survey, topographic mapping."],
>> ? ? ? ? AREA["North America - between 84?W and 78?W - onshore and 
>> offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - 
>> Florida; Georgia; Kentucky; Maryland; Michigan; New York; North 
>> Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia; 
>> West Virginia."],
>> ? ? ? ? BBOX[23.81,-84,84,-78]],
>> ? ? ID["EPSG",26917]]
>> Data axis to CRS axis mapping: 1,2
>> Origin = (339993.999958705157042,3920005.999981591943651)
>> Pixel Size = (1.000000000000000,-1.000000000000000)
>> Metadata:
>> ? AREA_OR_POINT=Area
>> Image Structure Metadata:
>> ? COMPRESSION=LZW
>> ? INTERLEAVE=BAND
>> ? LAYOUT=COG
>> ? PREDICTOR=3
>> Corner Coordinates:
>> Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
>> Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
>> Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
>> Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
>> Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
>> Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
>> ? Min=669.509 Max=1604.949
>> ? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
>> ? NoData Value=-999999
>> ? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
>> *Unit Type: US survey foot*
>> ? Metadata:
>> ? ? STATISTICS_APPROXIMATE=YES
>> ? ? STATISTICS_MAXIMUM=1604.9490966797
>> ? ? STATISTICS_MEAN=988.29463693706
>> ? ? STATISTICS_MINIMUM=669.50915527344
>> ? ? STATISTICS_STDDEV=159.80361228109
>> ? ? STATISTICS_VALID_PERCENT=100
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org  <mailto:gdal-dev at lists.osgeo.org>
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev  <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
> -- 
> http://www.spatialys.com  <http://www.spatialys.com>
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240322/b2fe6da0/attachment-0001.htm>

From kirk.waters at noaa.gov  Fri Mar 22 03:17:30 2024
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Fri, 22 Mar 2024 06:17:30 -0400
Subject: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should be
 metres, how can I fix this?
In-Reply-To: <94474859-a700-4099-a6c5-66bb8e86ee2e@spatialys.com>
References: <1045195440.383478.1711053927068.ref@mail.yahoo.com>
 <1045195440.383478.1711053927068@mail.yahoo.com>
 <7832c1d9-61ce-41b0-b524-2f00859c817a@spatialys.com>
 <971450251.44371.1711066599559@mail.yahoo.com>
 <94474859-a700-4099-a6c5-66bb8e86ee2e@spatialys.com>
Message-ID: <CADm=QrTKbsL-4oWFB+uE92p46n7d=uV_Gd0PGZs9gGcWU28qUA@mail.gmail.com>

I put in a ticket to the USGS National Map help desk so they'll know it
needs to be fixed. I'm sure some USGS folks watch this forum too.

Kirk Waters, PhD
NOAA Office for Coastal Management
Applied Sciences Program
?Phone: 843-284-6962? (email preferred)
coast.noaa.gov/digitalcoast
[he/him]




On Fri, Mar 22, 2024 at 4:57?AM Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> having looked at the file, I believe GDAL behaves correctly given the
> metadata in the file. This is clearly a unit type attached to the Band, and
> it should be corrected by the data producer to reflect what is really used
> in it
>
> One way to correct it on your side is for example this little Python
> snippet
>
> from osgeo import gdal
> ds = gdal.Open('test.tif')
> ds.GetRasterBand(1).SetUnitType('metre')
>
> As the file is used in read-only mode, this will generate an auxiliary
> .aux.xml side car file overriding the unit.
>
> You can also directly override the wrong metadata inside the TIFF with
>
> ds = gdal.OpenEx('test.tif', open_options=['IGNORE_COG_LAYOUT_BREAK=YES'])
> ds.GetRasterBand(1).SetUnitType('metre')
>
> The IGNORE_COG_LAYOUT_BREAK=YES open option is because modifying TIFF
> metadata causes it to be rewritten at the end of the file, which "breaks"
> the COG convention. But that's still a perfectly valid GeoTIFF file, and
> will not change anything for local use of such file. You could reprocess
> that to a fully compliant COG with gdal_translate -of COG
>
> Regarding how that is used by gdalwarp, the doc enhancement at
> https://github.com/OSGeo/gdal/pull/9527 captures my initial attempt at
> answering your questions.
>
> Even
>
>
> Le 22/03/2024 ? 01:16, Conrad Bielski a ?crit :
>
> Just realised I should have put you also in CC
>
> Here is my response message again.
>
> Thanks Even,
>
> you are correct about the tag number (I sent the incorrrect one).
>
> I have provided a sample tif and some other descriptions of the issue here:
> bad_geotiff - Google Drive
> <https://drive.google.com/drive/folders/1LVJqoKrnLRf6_5FpE7a5SrUGIWBPQmqa?usp=sharing>
>
> bad_geotiff - Google Drive
> <https://drive.google.com/drive/folders/1LVJqoKrnLRf6_5FpE7a5SrUGIWBPQmqa?usp=sharing>
>
> The three files there are the following:
> 1.  A bad tiff (this is slightly smaller; they are all pretty big).
> 2.  A GDAL info dump (survey feet is almost at the bottom)
> 3. A PDF with an explanation of the issue
>
> thanks for your help.
> Conrad
>
>
> On Thursday, March 21, 2024 at 04:49:57 PM EDT, Even Rouault
> <even.rouault at spatialys.com> <even.rouault at spatialys.com> wrote:
>
>
>
> Le 21/03/2024 ? 21:45, Conrad Bielski via gdal-dev a ?crit :
>
> Hello GDALers,
>
> I have a question about reading USGS 3DEP (3D Elevation Program) data.
> Inside of this data, a GEOTIFF tag 42114 is provided which is causing
> problems with datum shifts.
>
> There's no such thing as a GEOTIFF tag 42114.
>
> The closest tags are:
>
> #define TIFFTAG_GDAL_METADATA 42112
> #define TIFFTAG_GDAL_NODATA 42113
>
> It would be helpuful if you could provide the file, or the result of a
> "tiffdump -m 1000 the.tif" and "listgeo the.tif" on it.
>
> And was the .tif.aux.xml provided with the TIFF, or computed by GDAL.
> Because the information might come from it too.
>
>
> So when I use GDAL to compute the datum shifts, the tag is read and
> interprets that the DEM is showing elevation in 'feet' while the DEM is
> actually in metres. The DEMs are in fact in meter elevations and meter UTM
> horizontal coordinates. This is obviously erroneously integrated into the
> tag.
>
> So my question is whether anyone has come across this issue and found a
> solution? Is there a way to edit the offending tag so that it is correctly
> interpreted as metres instead of feet? Other potential solutions so that
> GDAL interprets the elevation correctly?
>
> Thanks in advance for your help. I provide below the output of gdalinfo
> which I hope could help with the offending info in bold.
>
> Have a great day,
> Conrad
>
>
>
>
> Driver: GTiff/GeoTIFF
> Files:
> I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
>
>  I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
> Size is 10012, 10012
> Coordinate System is:
> PROJCRS["NAD83 / UTM zone 17N",
>     BASEGEOGCRS["NAD83",
>         DATUM["North American Datum 1983",
>             ELLIPSOID["GRS 1980",6378137,298.257222101,
>                 LENGTHUNIT["metre",1]]],
>         PRIMEM["Greenwich",0,
>             ANGLEUNIT["degree",0.0174532925199433]],
>         ID["EPSG",4269]],
>     CONVERSION["UTM zone 17N",
>         METHOD["Transverse Mercator",
>             ID["EPSG",9807]],
>         PARAMETER["Latitude of natural origin",0,
>             ANGLEUNIT["degree",0.0174532925199433],
>             ID["EPSG",8801]],
>         PARAMETER["Longitude of natural origin",-81,
>             ANGLEUNIT["degree",0.0174532925199433],
>             ID["EPSG",8802]],
>         PARAMETER["Scale factor at natural origin",0.9996,
>             SCALEUNIT["unity",1],
>             ID["EPSG",8805]],
>         PARAMETER["False easting",500000,
>             LENGTHUNIT["metre",1],
>             ID["EPSG",8806]],
>         PARAMETER["False northing",0,
>             LENGTHUNIT["metre",1],
>             ID["EPSG",8807]]],
>     CS[Cartesian,2],
>         AXIS["(E)",east,
>             ORDER[1],
>             LENGTHUNIT["metre",1]],
>         AXIS["(N)",north,
>             ORDER[2],
>             LENGTHUNIT["metre",1]],
>     USAGE[
>         SCOPE["Engineering survey, topographic mapping."],
>         AREA["North America - between 84?W and 78?W - onshore and
> offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - Florida;
> Georgia; Kentucky; Maryland; Michigan; New York; North Carolina; Ohio;
> Pennsylvania; South Carolina; Tennessee; Virginia; West Virginia."],
>         BBOX[23.81,-84,84,-78]],
>     ID["EPSG",26917]]
> Data axis to CRS axis mapping: 1,2
> Origin = (339993.999958705157042,3920005.999981591943651)
> Pixel Size = (1.000000000000000,-1.000000000000000)
> Metadata:
>   AREA_OR_POINT=Area
> Image Structure Metadata:
>   COMPRESSION=LZW
>   INTERLEAVE=BAND
>   LAYOUT=COG
>   PREDICTOR=3
> Corner Coordinates:
> Upper Left  (  339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
> Lower Left  (  339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
> Upper Right (  350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
> Lower Right (  350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
> Center      (  345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
> Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
>   Min=669.509 Max=1604.949
>   Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
>   NoData Value=-999999
>   Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
>   *Unit Type: US survey foot*
>   Metadata:
>     STATISTICS_APPROXIMATE=YES
>     STATISTICS_MAXIMUM=1604.9490966797
>     STATISTICS_MEAN=988.29463693706
>     STATISTICS_MINIMUM=669.50915527344
>     STATISTICS_STDDEV=159.80361228109
>     STATISTICS_VALID_PERCENT=100
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240322/3eb34789/attachment-0001.htm>

From eruiz at aplitop.com  Fri Mar 22 04:37:05 2024
From: eruiz at aplitop.com (Elena Ruiz)
Date: Fri, 22 Mar 2024 11:37:05 +0000
Subject: [gdal-dev] Estonian WMS failure
In-Reply-To: <AS8P192MB21915B68ACB890C254D7E287BB312@AS8P192MB2191.EURP192.PROD.OUTLOOK.COM>
References: <AS8P192MB21915B68ACB890C254D7E287BB312@AS8P192MB2191.EURP192.PROD.OUTLOOK.COM>
Message-ID: <AS8P192MB21913E441ADF1834923FA3A8BB312@AS8P192MB2191.EURP192.PROD.OUTLOOK.COM>


Hi, I am using GDAL v3.06 to read map web services.
A customer from Estonia tells us that the official and public servers in their country are not working,
and as you can see below, they return the following error:

>gdalinfo "WMS:https://kaart.maaamet.ee/wms/alus-geo?"
ERROR 1: Error returned by server : unknown (56)
gdalinfo failed - unable to open 'WMS:https://kaart.maaamet.ee/wms/alus-geo?'.

>gdalinfo "WMS:https://kaart.maaamet.ee/wms/alus-geo?version=1.3.0"
ERROR 1: Error returned by server : unknown (56)
gdalinfo failed - unable to open 'WMS:https://kaart.maaamet.ee/wms/alus-geo?version=1.3.0'.

However, there are some of those Estonian servers that do work like the following:
teenus.maaamet.ee/ows/maardlad?service=WMS&version=1.3.0&request=GetCapabilities<https://teenus.maaamet.ee/ows/maardlad?service=WMS&version=1.3.0&request=GetCapabilities>

But I don't see the difference, both are version 1.3.0. Could you tell me what is causing this error?
Thank you and regards.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240322/bf4dcc56/attachment.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Mar 22 04:46:56 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Fri, 22 Mar 2024 11:46:56 +0000
Subject: [gdal-dev] Estonian WMS failure
In-Reply-To: <AS8P192MB21913E441ADF1834923FA3A8BB312@AS8P192MB2191.EURP192.PROD.OUTLOOK.COM>
References: <AS8P192MB21915B68ACB890C254D7E287BB312@AS8P192MB2191.EURP192.PROD.OUTLOOK.COM>
 <AS8P192MB21913E441ADF1834923FA3A8BB312@AS8P192MB2191.EURP192.PROD.OUTLOOK.COM>
Message-ID: <DB9PR09MB688704A269EA2B82B8A66517FD312@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

Works for me from the opposite side of the Gulf of Finland. I get a list of 215 subdatasets with
gdalinfo "WMS:https://kaart.maaamet.ee/wms/alus-geo?" --debug on

No problem with VERSION=1.3.0 either. I tested with GDAL 3.8.4, released 2024/02/08 (OSGeo4W).

-Jukka Rahkonen-


L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Elena Ruiz via gdal-dev
L?hetetty: perjantai 22. maaliskuuta 2024 13.37
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: [gdal-dev] Estonian WMS failure


Hi, I am using GDAL v3.06 to read map web services.
A customer from Estonia tells us that the official and public servers in their country are not working,
and as you can see below, they return the following error:

>gdalinfo "WMS:https://kaart.maaamet.ee/wms/alus-geo?"
ERROR 1: Error returned by server : unknown (56)
gdalinfo failed - unable to open 'WMS:https://kaart.maaamet.ee/wms/alus-geo?'.

>gdalinfo "WMS:https://kaart.maaamet.ee/wms/alus-geo?version=1.3.0"
ERROR 1: Error returned by server : unknown (56)
gdalinfo failed - unable to open 'WMS:https://kaart.maaamet.ee/wms/alus-geo?version=1.3.0'.

However, there are some of those Estonian servers that do work like the following:
teenus.maaamet.ee/ows/maardlad?service=WMS&version=1.3.0&request=GetCapabilities<https://teenus.maaamet.ee/ows/maardlad?service=WMS&version=1.3.0&request=GetCapabilities>

But I don't see the difference, both are version 1.3.0. Could you tell me what is causing this error?
Thank you and regards.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240322/334b074b/attachment-0001.htm>

From conrad_bielski at yahoo.com  Fri Mar 22 06:02:57 2024
From: conrad_bielski at yahoo.com (Conrad Bielski)
Date: Fri, 22 Mar 2024 13:02:57 +0000 (UTC)
Subject: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should be
 metres, how can I fix this?
In-Reply-To: <94474859-a700-4099-a6c5-66bb8e86ee2e@spatialys.com>
References: <1045195440.383478.1711053927068.ref@mail.yahoo.com>
 <1045195440.383478.1711053927068@mail.yahoo.com>
 <7832c1d9-61ce-41b0-b524-2f00859c817a@spatialys.com>
 <971450251.44371.1711066599559@mail.yahoo.com>
 <94474859-a700-4099-a6c5-66bb8e86ee2e@spatialys.com>
Message-ID: <966290433.187661.1711112577999@mail.yahoo.com>

 Thanks Even,
looks like a good workaround for the moment. Hopefully, the USGS will update their files accordingly.
Thanks Kirk for kicking this up. I'm sure it is not trivial to fix such an issue for a national dataset.
Have a great day,Conrad

    On Friday, March 22, 2024 at 04:57:03 AM EDT, Even Rouault <even.rouault at spatialys.com> wrote:  
 
  
Hi,
 
having looked at the file, I believe GDAL behaves correctly given the metadata in the file. This is clearly a unit type attached to the Band, and it should be corrected by the data producer to reflect what is really used in it
 
One way to correct it on your side is for example this little Python snippet
 
 
from osgeo import gdal
 ds = gdal.Open('test.tif')
 ds.GetRasterBand(1).SetUnitType('metre')
 
As the file is used in read-only mode, this will generate an auxiliary .aux.xml side car file overriding the unit.
 
You can also directly override the wrong metadata inside the TIFF with
 
 
ds = gdal.OpenEx('test.tif', open_options=['IGNORE_COG_LAYOUT_BREAK=YES'])
 ds.GetRasterBand(1).SetUnitType('metre')
 
The IGNORE_COG_LAYOUT_BREAK=YES open option is because modifying TIFF metadata causes it to be rewritten at the end of the file, which "breaks" the COG convention. But that's still a perfectly valid GeoTIFF file, and will not change anything for local use of such file. You could reprocess that to a fully compliant COG with gdal_translate -of COG
 
 
Regarding how that is used by gdalwarp, the doc enhancement at https://github.com/OSGeo/gdal/pull/9527 captures my initial attempt at answering your questions.
 

 
Even
 

 
 Le 22/03/2024 ? 01:16, Conrad Bielski a ?crit?:
  
 
 Just realised I should have put you also in CC 
  Here is my response message again. 
    Thanks Even, 
  you are correct about the tag number (I sent the incorrrect one). 
  I have provided a sample tif and some other descriptions of the issue here: bad_geotiff - Google Drive 
   
|  
|  
|  |  
bad_geotiff - Google Drive
  |

  |

  |

        
  The three files there are the following:   1.? A bad tiff (this is slightly smaller; they are all pretty big). 2.? A GDAL info dump (survey feet is almost at the bottom) 3. A PDF with an explanation of the issue   
  thanks for your help. Conrad  
  
      On Thursday, March 21, 2024 at 04:49:57 PM EDT, Even Rouault <even.rouault at spatialys.com> wrote:  
  
     

 
 Le 21/03/2024 ? 21:45, Conrad Bielski via gdal-dev a ?crit?:
  
 
     Hello GDALers,
 
 I have a question about reading USGS 3DEP (3D Elevation Program) data. Inside of this data, a GEOTIFF tag 42114 is provided which is causing problems with datum shifts.
    
There's no such thing as a GEOTIFF tag 42114.
 
The closest tags are:
 
 
#define TIFFTAG_GDAL_METADATA 42112
 #define TIFFTAG_GDAL_NODATA 42113
 
 
It would be helpuful if you could provide the file, or the result of a "tiffdump -m 1000 the.tif" and "listgeo the.tif" on it.
 
And was the .tif.aux.xml provided with the TIFF, or computed by GDAL. Because the information might come from it too.
 
    
      
 So when I use GDAL to compute the datum shifts, the tag is read and interprets that the DEM is showing elevation in 'feet' while the DEM is actually in metres. The DEMs are in fact in meter elevations and meter UTM horizontal coordinates. This is obviously erroneously integrated into the tag.
 
 So my question is whether anyone has come across this issue and found a solution? Is there a way to edit the offending tag so that it is correctly interpreted as metres instead of feet? Other potential solutions so that GDAL interprets the elevation correctly?
 
 Thanks in advance for your help. I provide below the output of gdalinfo which I hope could help with the offending info in bold.
 
 Have a great day,
 Conrad
 
  
  
  
     Driver: GTiff/GeoTIFF
 Files:I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
 ? ? ??I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
 Size is 10012, 10012
 Coordinate System is:
 PROJCRS["NAD83 / UTM zone 17N",
 ? ? BASEGEOGCRS["NAD83",
 ? ? ? ? DATUM["North American Datum 1983",
 ? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
 ? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
 ? ? ? ? PRIMEM["Greenwich",0,
 ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433]],
 ? ? ? ? ID["EPSG",4269]],
 ? ? CONVERSION["UTM zone 17N",
 ? ? ? ? METHOD["Transverse Mercator",
 ? ? ? ? ? ? ID["EPSG",9807]],
 ? ? ? ? PARAMETER["Latitude of natural origin",0,
 ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
 ? ? ? ? ? ? ID["EPSG",8801]],
 ? ? ? ? PARAMETER["Longitude of natural origin",-81,
 ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
 ? ? ? ? ? ? ID["EPSG",8802]],
 ? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
 ? ? ? ? ? ? SCALEUNIT["unity",1],
 ? ? ? ? ? ? ID["EPSG",8805]],
 ? ? ? ? PARAMETER["False easting",500000,
 ? ? ? ? ? ? LENGTHUNIT["metre",1],
 ? ? ? ? ? ? ID["EPSG",8806]],
 ? ? ? ? PARAMETER["False northing",0,
 ? ? ? ? ? ? LENGTHUNIT["metre",1],
 ? ? ? ? ? ? ID["EPSG",8807]]],
 ? ? CS[Cartesian,2],
 ? ? ? ? AXIS["(E)",east,
 ? ? ? ? ? ? ORDER[1],
 ? ? ? ? ? ? LENGTHUNIT["metre",1]],
 ? ? ? ? AXIS["(N)",north,
 ? ? ? ? ? ? ORDER[2],
 ? ? ? ? ? ? LENGTHUNIT["metre",1]],
 ? ? USAGE[
 ? ? ? ? SCOPE["Engineering survey, topographic mapping."],
 ? ? ? ? AREA["North America - between 84?W and 78?W - onshore and offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - Florida; Georgia; Kentucky; Maryland; Michigan; New York; North Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia; West Virginia."],
 ? ? ? ? BBOX[23.81,-84,84,-78]],
 ? ? ID["EPSG",26917]]
 Data axis to CRS axis mapping: 1,2
 Origin = (339993.999958705157042,3920005.999981591943651)
 Pixel Size = (1.000000000000000,-1.000000000000000)
 Metadata:
 ? AREA_OR_POINT=Area
 Image Structure Metadata:
 ? COMPRESSION=LZW
 ? INTERLEAVE=BAND
 ? LAYOUT=COG
 ? PREDICTOR=3
 Corner Coordinates:
 Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
 Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
 Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
 Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
 Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
 Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
 ? Min=669.509 Max=1604.949 
 ? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
 ? NoData Value=-999999
 ? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
 ? Unit Type: US survey foot
 ? Metadata:
 ? ? STATISTICS_APPROXIMATE=YES
 ? ? STATISTICS_MAXIMUM=1604.9490966797
 ? ? STATISTICS_MEAN=988.29463693706
 ? ? STATISTICS_MINIMUM=669.50915527344
 ? ? STATISTICS_STDDEV=159.80361228109
 ? ? STATISTICS_VALID_PERCENT=100   
   
  _______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
 
 -- 
http://www.spatialys.com
My software is free, but my time generally not.        -- 
http://www.spatialys.com
My software is free, but my time generally not.   
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240322/db1a5b5d/attachment-0001.htm>

From Ian.Hannah at metasphere.co.uk  Sun Mar 24 11:51:18 2024
From: Ian.Hannah at metasphere.co.uk (Ian Hannah)
Date: Sun, 24 Mar 2024 18:51:18 +0000
Subject: [gdal-dev] Issue with using GDAL warp
Message-ID: <AS8PR05MB10656B5098BC821DB68025A22A4372@AS8PR05MB10656.eurprd05.prod.outlook.com>

Hi,

I am using 3.8.4  of GDAL .NET and running this code:

                    string[] warpOptions =
                    {
                        "outputType", GdalConst.GDT_Byte.ToString(),
                        "srcSRS", projectionWKT,
                        "dstSRS", "EPSG:3857",
                        "accessMode", "overwrite"
                    };

                    string geoTiffOutputFileName = Path.GetTempFileName();
                    string pngOutputFileName = convertToImage ? Path.GetTempFileName() : null;

                    try
                    {
                        GDALVectorTranslateOptions gdalWarpOptions = new GDALVectorTranslateOptions(warpOptions);

                        using (Dataset outputDataset = Gdal.wrapper_GDALVectorTranslateDestName(geoTiffOutputFileName, dataset, gdalWarpOptions, null, null))
                        {
                            if (convertToImage)
                            {
                                string[] translateOptions = { "-of", "PNG" };
                                using (Gdal.wrapper_GDALTranslate(pngOutputFileName, outputDataset, new GDALTranslateOptions(translateOptions), null, null)) { }
                            }
                        }
                  }

And on the call to Gdal.wrapper_GDALVectorTranslateDestName I get the following error:

System.ApplicationException: 'Cannot guess driver for F:\Temp\2\tmp7A67.tmp'

This is in the generation of the geoTiffOutputFileName file.

Does anyone know why I am getting this error?

Thanks
Ian

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240324/721b86ac/attachment.htm>

From andrew at aitchison.me.uk  Sun Mar 24 12:33:04 2024
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sun, 24 Mar 2024 19:33:04 +0000 (GMT)
Subject: [gdal-dev] Issue with using GDAL warp
In-Reply-To: <AS8PR05MB10656B5098BC821DB68025A22A4372@AS8PR05MB10656.eurprd05.prod.outlook.com>
References: <AS8PR05MB10656B5098BC821DB68025A22A4372@AS8PR05MB10656.eurprd05.prod.outlook.com>
Message-ID: <120482cc-d11e-dc4d-4de6-70f451a91473@aitchison.me.uk>

On Sun, 24 Mar 2024, Ian Hannah via gdal-dev wrote:

> Hi,
>
> I am using 3.8.4  of GDAL .NET and running this code:
>
>                    string[] warpOptions =
>                    {
>                        "outputType", GdalConst.GDT_Byte.ToString(),
>                        "srcSRS", projectionWKT,
>                        "dstSRS", "EPSG:3857",
>                        "accessMode", "overwrite"
>                    };
>
>                    string geoTiffOutputFileName = Path.GetTempFileName();
>                    string pngOutputFileName = convertToImage ? Path.GetTempFileName() : null;
>
>                    try
>                    {
>                        GDALVectorTranslateOptions gdalWarpOptions = new GDALVectorTranslateOptions(warpOptions);
>
>                        using (Dataset outputDataset = Gdal.wrapper_GDALVectorTranslateDestName(geoTiffOutputFileName, dataset, gdalWarpOptions, null, null))
>                        {
>                            if (convertToImage)
>                            {
>                                string[] translateOptions = { "-of", "PNG" };
>                                using (Gdal.wrapper_GDALTranslate(pngOutputFileName, outputDataset, new GDALTranslateOptions(translateOptions), null, null)) { }
>                            }
>                        }
>                  }
>
> And on the call to Gdal.wrapper_GDALVectorTranslateDestName I get the following error:
>
> System.ApplicationException: 'Cannot guess driver for F:\Temp\2\tmp7A67.tmp'
>
> This is in the generation of the geoTiffOutputFileName file.
>
> Does anyone know why I am getting this error?

You are trying to overwrite the file, which often means to put new data
into an existing file. But since it is a tmp file I guess that it does not 
yet exist, so GDAL cannot read it to work out what format it is in.

Nowhere do you say what format outputDataset should have.

Maybe declaring the output file format would stop this error.

Unless you actual want a tiff and a png of the result,
maybe you don't actually need the call to Gdal.wrapper_GDALTranslate ?

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From Ian.Hannah at metasphere.co.uk  Sun Mar 24 13:23:49 2024
From: Ian.Hannah at metasphere.co.uk (Ian Hannah)
Date: Sun, 24 Mar 2024 20:23:49 +0000
Subject: [gdal-dev] Issue with using GDAL warp
In-Reply-To: <120482cc-d11e-dc4d-4de6-70f451a91473@aitchison.me.uk>
References: <AS8PR05MB10656B5098BC821DB68025A22A4372@AS8PR05MB10656.eurprd05.prod.outlook.com>
 <120482cc-d11e-dc4d-4de6-70f451a91473@aitchison.me.uk>
Message-ID: <AS8PR05MB106569311F3E9884FD49AC340A4372@AS8PR05MB10656.eurprd05.prod.outlook.com>

Hi,

If I change the options to this:

                    string[] warpOptions =
                    {
                        "srcSRS", projectionWKT,
                        "dstSRS", "EPSG:3857",
                        "format", "GTiff"
                    };

i.e. so specifying the output format and it still did not work (same error).

I do need to use the translate method because I trying to switch between 2 different projections.

Thanks
Ian

-----Original Message-----
From: Andrew C Aitchison <andrew at aitchison.me.uk> 
Sent: Sunday, March 24, 2024 7:33 PM
To: Ian Hannah <Ian.Hannah at metasphere.co.uk>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Issue with using GDAL warp

On Sun, 24 Mar 2024, Ian Hannah via gdal-dev wrote:

> Hi,
>
> I am using 3.8.4  of GDAL .NET and running this code:
>
>                    string[] warpOptions =
>                    {
>                        "outputType", GdalConst.GDT_Byte.ToString(),
>                        "srcSRS", projectionWKT,
>                        "dstSRS", "EPSG:3857",
>                        "accessMode", "overwrite"
>                    };
>
>                    string geoTiffOutputFileName = Path.GetTempFileName();
>                    string pngOutputFileName = convertToImage ? 
> Path.GetTempFileName() : null;
>
>                    try
>                    {
>                        GDALVectorTranslateOptions gdalWarpOptions = 
> new GDALVectorTranslateOptions(warpOptions);
>
>                        using (Dataset outputDataset = Gdal.wrapper_GDALVectorTranslateDestName(geoTiffOutputFileName, dataset, gdalWarpOptions, null, null))
>                        {
>                            if (convertToImage)
>                            {
>                                string[] translateOptions = { "-of", "PNG" };
>                                using (Gdal.wrapper_GDALTranslate(pngOutputFileName, outputDataset, new GDALTranslateOptions(translateOptions), null, null)) { }
>                            }
>                        }
>                  }
>
> And on the call to Gdal.wrapper_GDALVectorTranslateDestName I get the following error:
>
> System.ApplicationException: 'Cannot guess driver for F:\Temp\2\tmp7A67.tmp'
>
> This is in the generation of the geoTiffOutputFileName file.
>
> Does anyone know why I am getting this error?

You are trying to overwrite the file, which often means to put new data into an existing file. But since it is a tmp file I guess that it does not yet exist, so GDAL cannot read it to work out what format it is in.

Nowhere do you say what format outputDataset should have.

Maybe declaring the output file format would stop this error.

Unless you actual want a tiff and a png of the result, maybe you don't actually need the call to Gdal.wrapper_GDALTranslate ?

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From doug_newcomb at fws.gov  Mon Mar 25 06:39:07 2024
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Mon, 25 Mar 2024 13:39:07 +0000
Subject: [gdal-dev] [EXTERNAL] Re:  gdal-dev Digest, Vol 238, Issue 82
In-Reply-To: <1393569751.49246.1711066528175@mail.yahoo.com>
References: <mailman.190454.1711054198.32175.gdal-dev@lists.osgeo.org>
 <1393569751.49246.1711066528175@mail.yahoo.com>
Message-ID: <SA1PR09MB85923A4D9D7D2C7CEF49920FF1362@SA1PR09MB8592.namprd09.prod.outlook.com>

FYI,
If you find errors in the 3DEP data, send an email to tnm_help at usgs.gov .  I have forwarded your email with the list of files to that address.

Doug
________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Conrad Bielski via gdal-dev <gdal-dev at lists.osgeo.org>
Sent: Thursday, March 21, 2024 8:15 PM
To: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] Re: [gdal-dev] gdal-dev Digest, Vol 238, Issue 82




 This email has been received from outside of DOI - Use caution before clicking on links, opening attachments, or responding.



Thanks Even,

you are correct about the tag number (I sent the incorrrect one).

I have provided a sample tif and some other descriptions of the issue here:
bad_geotiff - Google Drive<https://drive.google.com/drive/folders/1LVJqoKrnLRf6_5FpE7a5SrUGIWBPQmqa?usp=sharing>

<https://drive.google.com/drive/folders/1LVJqoKrnLRf6_5FpE7a5SrUGIWBPQmqa?usp=sharing>
[https://s.yimg.com/lb/brands/80x80_google.png]
bad_geotiff - Google Drive

The three files there are the following:
1.  A bad tiff (this is slightly smaller; they are all pretty big).
2.  A GDAL info dump (survey feet is almost at the bottom)
3. A PDF with an explanation of the issue

thanks for your help.
Conrad


On Thursday, March 21, 2024 at 04:50:19 PM EDT, gdal-dev-request at lists.osgeo.org <gdal-dev-request at lists.osgeo.org> wrote:


Send gdal-dev mailing list submissions to
    gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

To subscribe or unsubscribe via the World Wide Web, visit
    https://lists.osgeo.org/mailman/listinfo/gdal-dev
or, via email, send a message with subject or body 'help' to
    gdal-dev-request at lists.osgeo.org<mailto:gdal-dev-request at lists.osgeo.org>

You can reach the person managing the list at
    gdal-dev-owner at lists.osgeo.org<mailto:gdal-dev-owner at lists.osgeo.org>

When replying, please edit your Subject line so it is more specific
than "Re: Contents of gdal-dev digest..."


Today's Topics:

  1. USGS 3DEP (3D Elevation Program) - feet should be metres, how
      can I fix this? (Conrad Bielski)
  2. Re: USGS 3DEP (3D Elevation Program) - feet should be metres,
      how can I fix this? (Even Rouault)


----------------------------------------------------------------------

Message: 1
Date: Thu, 21 Mar 2024 20:45:27 +0000 (UTC)
From: Conrad Bielski <conrad_bielski at yahoo.com<mailto:conrad_bielski at yahoo.com>>
To: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Subject: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should be
    metres, how can I fix this?
Message-ID: <1045195440.383478.1711053927068 at mail.yahoo.com<mailto:1045195440.383478.1711053927068 at mail.yahoo.com>>
Content-Type: text/plain; charset="utf-8"

Hello GDALers,

I have a question about reading USGS 3DEP (3D Elevation Program) data. Inside of this data, a GEOTIFF tag 42114 is provided which is causing problems with datum shifts.

So when I use GDAL to compute the datum shifts, the tag is read and interprets that the DEM is showing elevation in 'feet' while the DEM is actually in metres. The DEMs are in fact in meter elevations and meter UTM horizontal coordinates. This is obviously erroneously integrated into the tag.

So my question is whether anyone has come across this issue and found a solution? Is there a way to edit the offending tag so that it is correctly interpreted as metres instead of feet? Other potential solutions so that GDAL interprets the elevation correctly?

Thanks in advance for your help. I provide below the output of gdalinfo which I hope could help with the offending info in bold.

Have a great day,
Conrad




Driver: GTiff/GeoTIFF
Files: I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
? ? ? ?I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
Size is 10012, 10012
Coordinate System is:
PROJCRS["NAD83 / UTM zone 17N",
? ? BASEGEOGCRS["NAD83",
? ? ? ? DATUM["North American Datum 1983",
? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
? ? ? ? PRIMEM["Greenwich",0,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433]],
? ? ? ? ID["EPSG",4269]],
? ? CONVERSION["UTM zone 17N",
? ? ? ? METHOD["Transverse Mercator",
? ? ? ? ? ? ID["EPSG",9807]],
? ? ? ? PARAMETER["Latitude of natural origin",0,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
? ? ? ? ? ? ID["EPSG",8801]],
? ? ? ? PARAMETER["Longitude of natural origin",-81,
? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
? ? ? ? ? ? ID["EPSG",8802]],
? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
? ? ? ? ? ? SCALEUNIT["unity",1],
? ? ? ? ? ? ID["EPSG",8805]],
? ? ? ? PARAMETER["False easting",500000,
? ? ? ? ? ? LENGTHUNIT["metre",1],
? ? ? ? ? ? ID["EPSG",8806]],
? ? ? ? PARAMETER["False northing",0,
? ? ? ? ? ? LENGTHUNIT["metre",1],
? ? ? ? ? ? ID["EPSG",8807]]],
? ? CS[Cartesian,2],
? ? ? ? AXIS["(E)",east,
? ? ? ? ? ? ORDER[1],
? ? ? ? ? ? LENGTHUNIT["metre",1]],
? ? ? ? AXIS["(N)",north,
? ? ? ? ? ? ORDER[2],
? ? ? ? ? ? LENGTHUNIT["metre",1]],
? ? USAGE[
? ? ? ? SCOPE["Engineering survey, topographic mapping."],
? ? ? ? AREA["North America - between 84?W and 78?W - onshore and offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) - Florida; Georgia; Kentucky; Maryland; Michigan; New York; North Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia; West Virginia."],
? ? ? ? BBOX[23.81,-84,84,-78]],
? ? ID["EPSG",26917]]
Data axis to CRS axis mapping: 1,2
Origin = (339993.999958705157042,3920005.999981591943651)
Pixel Size = (1.000000000000000,-1.000000000000000)
Metadata:
? AREA_OR_POINT=Area
Image Structure Metadata:
? COMPRESSION=LZW
? INTERLEAVE=BAND
? LAYOUT=COG
? PREDICTOR=3
Corner Coordinates:
Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
? Min=669.509 Max=1604.949
? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
? NoData Value=-999999
? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
? Unit Type: US survey foot
? Metadata:
? ? STATISTICS_APPROXIMATE=YES
? ? STATISTICS_MAXIMUM=1604.9490966797
? ? STATISTICS_MEAN=988.29463693706
? ? STATISTICS_MINIMUM=669.50915527344
? ? STATISTICS_STDDEV=159.80361228109
? ? STATISTICS_VALID_PERCENT=100
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/68938236/attachment-0001.htm>

------------------------------

Message: 2
Date: Thu, 21 Mar 2024 21:49:55 +0100
From: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
To: Conrad Bielski <conrad_bielski at yahoo.com<mailto:conrad_bielski at yahoo.com>>,
    "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Subject: Re: [gdal-dev] USGS 3DEP (3D Elevation Program) - feet should
    be metres, how can I fix this?
Message-ID: <7832c1d9-61ce-41b0-b524-2f00859c817a at spatialys.com<mailto:7832c1d9-61ce-41b0-b524-2f00859c817a at spatialys.com>>
Content-Type: text/plain; charset="utf-8"; Format="flowed"


Le 21/03/2024 ? 21:45, Conrad Bielski via gdal-dev a ?crit?:
> Hello GDALers,
>
> I have a question about reading USGS 3DEP (3D Elevation Program) data.
> Inside of this data, a GEOTIFF tag 42114 is provided which is causing
> problems with datum shifts.

There's no such thing as a GEOTIFF tag 42114.

The closest tags are:

#define TIFFTAG_GDAL_METADATA 42112
#define TIFFTAG_GDAL_NODATA 42113

It would be helpuful if you could provide the file, or the result of a
"tiffdump -m 1000 the.tif" and "listgeo the.tif" on it.

And was the .tif.aux.xml provided with the TIFF, or computed by GDAL.
Because the information might come from it too.

>
> So when I use GDAL to compute the datum shifts, the tag is read and
> interprets that the DEM is showing elevation in 'feet' while the DEM
> is actually in metres. The DEMs are in fact in meter elevations and
> meter UTM horizontal coordinates. This is obviously erroneously
> integrated into the tag.
>
> So my question is whether anyone has come across this issue and found
> a solution? Is there a way to edit the offending tag so that it is
> correctly interpreted as metres instead of feet? Other potential
> solutions so that GDAL interprets the elevation correctly?
>
> Thanks in advance for your help. I provide below the output of
> gdalinfo which I hope could help with the offending info in bold.
>
> Have a great day,
> Conrad
>
>
>
>
> Driver: GTiff/GeoTIFF
> Files:
> I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif
> ?I:\v3_us_3dep\asheville\ashevilleUSGS_1M_17_x34y392_NC_Phase5_2018_A18.tif.aux.xml
> Size is 10012, 10012
> Coordinate System is:
> PROJCRS["NAD83 / UTM zone 17N",
> ? ? BASEGEOGCRS["NAD83",
> ? ? ? ? DATUM["North American Datum 1983",
> ? ? ? ? ? ? ELLIPSOID["GRS 1980",6378137,298.257222101,
> ? ? ? ? ? ? ? ? LENGTHUNIT["metre",1]]],
> ? ? ? ? PRIMEM["Greenwich",0,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433]],
> ? ? ? ? ID["EPSG",4269]],
> ? ? CONVERSION["UTM zone 17N",
> ? ? ? ? METHOD["Transverse Mercator",
> ? ? ? ? ? ? ID["EPSG",9807]],
> ? ? ? ? PARAMETER["Latitude of natural origin",0,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
> ? ? ? ? ? ? ID["EPSG",8801]],
> ? ? ? ? PARAMETER["Longitude of natural origin",-81,
> ? ? ? ? ? ? ANGLEUNIT["degree",0.0174532925199433],
> ? ? ? ? ? ? ID["EPSG",8802]],
> ? ? ? ? PARAMETER["Scale factor at natural origin",0.9996,
> ? ? ? ? ? ? SCALEUNIT["unity",1],
> ? ? ? ? ? ? ID["EPSG",8805]],
> ? ? ? ? PARAMETER["False easting",500000,
> ? ? ? ? ? ? LENGTHUNIT["metre",1],
> ? ? ? ? ? ? ID["EPSG",8806]],
> ? ? ? ? PARAMETER["False northing",0,
> ? ? ? ? ? ? LENGTHUNIT["metre",1],
> ? ? ? ? ? ? ID["EPSG",8807]]],
> ? ? CS[Cartesian,2],
> ? ? ? ? AXIS["(E)",east,
> ? ? ? ? ? ? ORDER[1],
> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
> ? ? ? ? AXIS["(N)",north,
> ? ? ? ? ? ? ORDER[2],
> ? ? ? ? ? ? LENGTHUNIT["metre",1]],
> ? ? USAGE[
> ? ? ? ? SCOPE["Engineering survey, topographic mapping."],
> ? ? ? ? AREA["North America - between 84?W and 78?W - onshore and
> offshore. Canada - Nunavut; Ontario; Quebec. United States (USA) -
> Florida; Georgia; Kentucky; Maryland; Michigan; New York; North
> Carolina; Ohio; Pennsylvania; South Carolina; Tennessee; Virginia;
> West Virginia."],
> ? ? ? ? BBOX[23.81,-84,84,-78]],
> ? ? ID["EPSG",26917]]
> Data axis to CRS axis mapping: 1,2
> Origin = (339993.999958705157042,3920005.999981591943651)
> Pixel Size = (1.000000000000000,-1.000000000000000)
> Metadata:
> ? AREA_OR_POINT=Area
> Image Structure Metadata:
> ? COMPRESSION=LZW
> ? INTERLEAVE=BAND
> ? LAYOUT=COG
> ? PREDICTOR=3
> Corner Coordinates:
> Upper Left ?( ?339994.000, 3920006.000) ( 82d45'43.98"W, 35d24'38.21"N)
> Lower Left ?( ?339994.000, 3909994.000) ( 82d45'36.92"W, 35d19'13.36"N)
> Upper Right ( ?350006.000, 3920006.000) ( 82d39' 7.17"W, 35d24'43.82"N)
> Lower Right ( ?350006.000, 3909994.000) ( 82d39' 0.55"W, 35d19'18.95"N)
> Center ? ? ?( ?345000.000, 3915000.000) ( 82d42'22.15"W, 35d21'58.63"N)
> Band 1 Block=512x512 Type=Float32, ColorInterp=Gray
> ? Min=669.509 Max=1604.949
> ? Minimum=669.509, Maximum=1604.949, Mean=988.295, StdDev=159.804
> ? NoData Value=-999999
> ? Overviews: 5006x5006, 2503x2503, 1251x1251, 625x625, 312x312
> *Unit Type: US survey foot*
> ? Metadata:
> ? ? STATISTICS_APPROXIMATE=YES
> ? ? STATISTICS_MAXIMUM=1604.9490966797
> ? ? STATISTICS_MEAN=988.29463693706
> ? ? STATISTICS_MINIMUM=669.50915527344
> ? ? STATISTICS_STDDEV=159.80361228109
> ? ? STATISTICS_VALID_PERCENT=100
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

--
http://www.spatialys.com<http://www.spatialys.com/>
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240321/1e68a1d4/attachment.htm>

------------------------------

Subject: Digest Footer

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev


------------------------------

End of gdal-dev Digest, Vol 238, Issue 82
*****************************************
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240325/1e2538cf/attachment-0001.htm>

From b.megyesi at soljoy.at  Tue Mar 26 03:01:28 2024
From: b.megyesi at soljoy.at (Bence Megyesi)
Date: Tue, 26 Mar 2024 11:01:28 +0100
Subject: [gdal-dev] =?utf-8?q?ogr2ogr=2C_GMLAS_driver=2C_help?=
Message-ID: <698-66029d00-31-19f7452@53291183>


Hello,

i am importing an xml with ogr2ogr using GMLAS driver to a PostgreSQL server. I am also using an .xsd file to correctly import and manage the imported xml in the server. This way i was able to import every element into the correct column based on the xsd, except one, a type="xsd:time" element. In the server i created a table list and their columns with types based on the xsd, but this "Uhrzeit" element's value wont get imported into the server. I checked the type in PostgreSQL, which is "time without time zone".
The value in the xml is HH:MM:SS formated so in theory it should work, but it wont.
My question is: what adjustments can i do with my ogr2ogr command
ogr2ogr_command = [
??????? 'ogr2ogr', '-skipfailures', '-f', 'PostgreSQL', f'PG:host={host} port={port} dbname={dbname} password={password} user={user} schemas={schema}',
??????? f'GMLAS:{xml_file_path}',
??????? '-oo', f'XSD={xsd_file_path}',
??????? '-oo', 'REMOVE_UNUSED_LAYERS=YES', '-oo', 'REMOVE_UNUSED_FIELDS=YES', '-append', '-forceNullable'
??? ]
to be able to import this type of data too?

I hope i am sending my question to the right person. If this is not the case, kindly disregard my message.

Best regards,
Bence
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240326/f2da998f/attachment.htm>

From even.rouault at spatialys.com  Tue Mar 26 05:27:50 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Mar 2024 13:27:50 +0100
Subject: [gdal-dev] ogr2ogr, GMLAS driver, help
In-Reply-To: <698-66029d00-31-19f7452@53291183>
References: <698-66029d00-31-19f7452@53291183>
Message-ID: <8146b432-c942-42b6-ae59-c41d60a163da@spatialys.com>

Hi,

It is very difficult to create manually the table & field structure that 
will be generated by the GMLAS driver. It is likely that the attribute 
name generated by the GMLAs driver is not the one you expect. First try 
ogr2ogr to a not-yet-existing PotsgreSQL table to see if data is 
correctly ingested (on a quick try on my side with a very simple 
example, it is)

Even

Le 26/03/2024 ? 11:01, Bence Megyesi via gdal-dev a ?crit?:
> Hello,
>
> i am importing an xml with ogr2ogr using GMLAS driver to a PostgreSQL 
> server. I am also using an .xsd file to correctly import and manage 
> the imported xml in the server. This way i was able to import every 
> element into the correct column based on the xsd, except one, a 
> type="xsd:time" element. In the server i created a table list and 
> their columns with types based on the xsd, but this "Uhrzeit" 
> element's value wont get imported into the server. I checked the type 
> in PostgreSQL, which is "time without time zone".
> The value in the xml is HH:MM:SS formated so in theory it should work, 
> but it wont.
> My question is: what adjustments can i do with my ogr2ogr command
> ogr2ogr_command = [
> ??????? 'ogr2ogr', '-skipfailures', '-f', 'PostgreSQL', 
> f'PG:host={host} port={port} dbname={dbname} password={password} 
> user={user} schemas={schema}',
> ??????? f'GMLAS:{xml_file_path}',
> ??????? '-oo', f'XSD={xsd_file_path}',
> ??????? '-oo', 'REMOVE_UNUSED_LAYERS=YES', '-oo', 
> 'REMOVE_UNUSED_FIELDS=YES', '-append', '-forceNullable'
> ??? ]
> to be able to import this type of data too?
>
> I hope i am sending my question to the right person. If this is not 
> the case, kindly disregard my message.
>
> Best regards,
> Bence
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From cristhian.rivera at hyds.es  Tue Mar 26 11:01:10 2024
From: cristhian.rivera at hyds.es (Cristhian Rivera)
Date: Tue, 26 Mar 2024 19:01:10 +0100
Subject: [gdal-dev] Incorrect geolocation information using newer gdal
 versions
Message-ID: <CAKrTThcu_+VPAm1mCoy8q1NcPj1K9qB+QQuhpT7jwEcEbjYRbQ@mail.gmail.com>

 Hi all,

I'm trying to debug an issue with a NetCDF file where in previous gdal
versions (up until 3.3.0) the geolocation was correctly identified by
gdalinfo, but in newer versions (>= 3.3.1) it is not.

In the attachments are the outputs of gdalinfo from the versions mentioned,
but the difference in both outputs is that newer versions cannot find the
"Origin" and "Pixel size", and the Corner coordinates differ a lot:

*Gdal 3.3.0:*

> Origin = (24500.000000000000000,465500.000000000000000)
> Pixel Size = (1000.000000000000000,-1000.000000000000000)



Corner Coordinates:
> Upper Left  (   24500.000,  465500.000)
> Lower Left  (   24500.000,   14500.000)
> Upper Right (  375500.000,  465500.000)
> Lower Right (  375500.000,   14500.000)
> Center      (  200000.000,  240000.000)


>= *Gdal 3.3.1*

> Corner Coordinates:
> Upper Left  (    0.0,    0.0)
> Lower Left  (    0.0,  451.0)
> Upper Right (  351.0,    0.0)
> Lower Right (  351.0,  451.0)
> Center      (  175.5,  225.5)


The files can also be found in the following drive repo if they are not
available in the mail:
https://drive.google.com/drive/folders/1zqV3n2SYUhOjgwxpYpChwqdNTiHAgNHj?usp=sharing


I've tried checking the changelog of that version but it seems only like a
bug fix release.
Any ideas of what else I can test to identify the issue?

Kind regards,

-- 
*Cristhian Rivera*
cristhian.rivera at hyds.es

*HYDS (Hydrometeorological Innovative Solutions)*
Jordi Girona 1-3, Ed. ParcUPC K2M 002
08034 Barcelona (Spain)
https://www.hyds.es
Tel: (+34) 933 524 050 <+34933524050>
*Disclaimer <https://www.hyds.es/disclaimer/> | Aviso Legal
<https://www.hyds.es/es/disclaimer/> | Av?s Legal
<https://www.hyds.es/ca/disclaimer/>*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240326/bc0c2fa0/attachment.htm>

From andrew at aitchison.me.uk  Tue Mar 26 12:02:54 2024
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Tue, 26 Mar 2024 19:02:54 +0000 (GMT)
Subject: [gdal-dev] Incorrect geolocation information using newer gdal
 versions
In-Reply-To: <CAKrTThcu_+VPAm1mCoy8q1NcPj1K9qB+QQuhpT7jwEcEbjYRbQ@mail.gmail.com>
References: <CAKrTThcu_+VPAm1mCoy8q1NcPj1K9qB+QQuhpT7jwEcEbjYRbQ@mail.gmail.com>
Message-ID: <39091ddd-4a78-e2fd-8704-cfde05eeca61@aitchison.me.uk>

On Tue, 26 Mar 2024, Cristhian Rivera via gdal-dev wrote:

> Hi all,
>
> I'm trying to debug an issue with a NetCDF file where in previous gdal
> versions (up until 3.3.0) the geolocation was correctly identified by
> gdalinfo, but in newer versions (>= 3.3.1) it is not.

I note that both versions output the warnings:

Warning 1: dimension #2 (Easting) is not a Longitude/X dimension.
Warning 1: dimension #1 (Northing) is not a Latitude/Y dimension.

gdalinfo --debug on 20240321000000.nc
gives me more info:

Warning 1: dimension #2 (Easting) is not a Longitude/X dimension.
Warning 1: dimension #1 (Northing) is not a Latitude/Y dimension.
GDAL_netCDF:
=====
SetProjectionFromVar( 65536, 4)
GDAL_netCDF: got grid_mapping crs
GDAL_netCDF: bIsGdalFile=0 bIsGdalCfFile=0 bSwitchedXY=0 bBottomUp=1
netCDF: Georeferencing ignored due to non-specific enough X axis name. Set 
GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES as configuration option to 
bypass this check
netCDF: Georeferencing ignored due to non-specific enough Y axis name. Set 
GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES as configuration option to 
bypass this check
GDAL_netCDF: bGotGeogCS=0 bGotCfSRS=0 bGotCfGT=0 bGotCfWktSRS=0 
bGotGdalSRS=0 bGotGdalGT=0
GDAL_netCDF: did not get geotransform from CF nor GDAL!
GDAL_netCDF: did not get projection from CF nor GDAL!
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL: GDALOpen(20240321000000.nc, this=0x63c988f650a0) succeeds as netCDF.
GDAL: GDALDefaultOverviews::OverviewScan()
GDAL: GDALClose(20240321000000.nc, this=0x63c988f650a0)


> In the attachments are the outputs of gdalinfo from the versions mentioned,
> but the difference in both outputs is that newer versions cannot find the
> "Origin" and "Pixel size", and the Corner coordinates differ a lot:
>
> *Gdal 3.3.0:*
>
>> Origin = (24500.000000000000000,465500.000000000000000)
>> Pixel Size = (1000.000000000000000,-1000.000000000000000)
>
>
>
> Corner Coordinates:
>> Upper Left  (   24500.000,  465500.000)
>> Lower Left  (   24500.000,   14500.000)
>> Upper Right (  375500.000,  465500.000)
>> Lower Right (  375500.000,   14500.000)
>> Center      (  200000.000,  240000.000)
>
>
>> = *Gdal 3.3.1*
>
>> Corner Coordinates:
>> Upper Left  (    0.0,    0.0)
>> Lower Left  (    0.0,  451.0)
>> Upper Right (  351.0,    0.0)
>> Lower Right (  351.0,  451.0)
>> Center      (  175.5,  225.5)
>
>
> The files can also be found in the following drive repo if they are not
> available in the mail:
> https://drive.google.com/drive/folders/1zqV3n2SYUhOjgwxpYpChwqdNTiHAgNHj?usp=sharing
>
>
> I've tried checking the changelog of that version but it seems only like a
> bug fix release.
> Any ideas of what else I can test to identify the issue?


-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From even.rouault at spatialys.com  Tue Mar 26 12:14:09 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Mar 2024 20:14:09 +0100
Subject: [gdal-dev] Incorrect geolocation information using newer gdal
 versions
In-Reply-To: <39091ddd-4a78-e2fd-8704-cfde05eeca61@aitchison.me.uk>
References: <CAKrTThcu_+VPAm1mCoy8q1NcPj1K9qB+QQuhpT7jwEcEbjYRbQ@mail.gmail.com>
 <39091ddd-4a78-e2fd-8704-cfde05eeca61@aitchison.me.uk>
Message-ID: <edc262a2-8e35-430b-a280-a1f5c69fc8f9@spatialys.com>

Yes, some versions ago the netCDF driver became much more stricter, 
expecting a strict respect of the netCDF CF conventions for axis names & 
attributes, to avoid false identification of non-georeferenced axis, 
which could cause issues.

The below debug message gives a hint to use the 
GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES to relax those checks.

Cf https://gdal.org/drivers/raster/netcdf.html#configuration-options

$ gdalinfo 20240321000000.nc --config 
GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS YES
[...]
Origin = (24500.000000000000000,465500.000000000000000)
Pixel Size = (1000.000000000000000,-1000.000000000000000)
[...]
Corner Coordinates:
Upper Left? (?? 24500.000,? 465500.000)
Lower Left? (?? 24500.000,?? 14500.000)
Upper Right (? 375500.000,? 465500.000)
Lower Right (? 375500.000,?? 14500.000)
Center????? (? 200000.000,? 240000.000)

What is at least missing in that particular file is the 
Easting:standard_name = "projection_x_coordinate" and 
Northing:standard_name = "projection_y_coordinate" attributes.

Even

Le 26/03/2024 ? 20:02, Andrew C Aitchison via gdal-dev a ?crit?:
> On Tue, 26 Mar 2024, Cristhian Rivera via gdal-dev wrote:
>
>> Hi all,
>>
>> I'm trying to debug an issue with a NetCDF file where in previous gdal
>> versions (up until 3.3.0) the geolocation was correctly identified by
>> gdalinfo, but in newer versions (>= 3.3.1) it is not.
>
> I note that both versions output the warnings:
>
> Warning 1: dimension #2 (Easting) is not a Longitude/X dimension.
> Warning 1: dimension #1 (Northing) is not a Latitude/Y dimension.
>
> gdalinfo --debug on 20240321000000.nc
> gives me more info:
>
> Warning 1: dimension #2 (Easting) is not a Longitude/X dimension.
> Warning 1: dimension #1 (Northing) is not a Latitude/Y dimension.
> GDAL_netCDF:
> =====
> SetProjectionFromVar( 65536, 4)
> GDAL_netCDF: got grid_mapping crs
> GDAL_netCDF: bIsGdalFile=0 bIsGdalCfFile=0 bSwitchedXY=0 bBottomUp=1
> netCDF: Georeferencing ignored due to non-specific enough X axis name. 
> Set GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES as configuration option 
> to bypass this check
> netCDF: Georeferencing ignored due to non-specific enough Y axis name. 
> Set GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES as configuration option 
> to bypass this check
> GDAL_netCDF: bGotGeogCS=0 bGotCfSRS=0 bGotCfGT=0 bGotCfWktSRS=0 
> bGotGdalSRS=0 bGotGdalGT=0
> GDAL_netCDF: did not get geotransform from CF nor GDAL!
> GDAL_netCDF: did not get projection from CF nor GDAL!
> GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
> GDAL: GDALOpen(20240321000000.nc, this=0x63c988f650a0) succeeds as 
> netCDF.
> GDAL: GDALDefaultOverviews::OverviewScan()
> GDAL: GDALClose(20240321000000.nc, this=0x63c988f650a0)
>
>
>> In the attachments are the outputs of gdalinfo from the versions 
>> mentioned,
>> but the difference in both outputs is that newer versions cannot find 
>> the
>> "Origin" and "Pixel size", and the Corner coordinates differ a lot:
>>
>> *Gdal 3.3.0:*
>>
>>> Origin = (24500.000000000000000,465500.000000000000000)
>>> Pixel Size = (1000.000000000000000,-1000.000000000000000)
>>
>>
>>
>> Corner Coordinates:
>>> Upper Left? (?? 24500.000,? 465500.000)
>>> Lower Left? (?? 24500.000,?? 14500.000)
>>> Upper Right (? 375500.000,? 465500.000)
>>> Lower Right (? 375500.000,?? 14500.000)
>>> Center????? (? 200000.000,? 240000.000)
>>
>>
>>> = *Gdal 3.3.1*
>>
>>> Corner Coordinates:
>>> Upper Left? (??? 0.0,??? 0.0)
>>> Lower Left? (??? 0.0,? 451.0)
>>> Upper Right (? 351.0,??? 0.0)
>>> Lower Right (? 351.0,? 451.0)
>>> Center????? (? 175.5,? 225.5)
>>
>>
>> The files can also be found in the following drive repo if they are not
>> available in the mail:
>> https://drive.google.com/drive/folders/1zqV3n2SYUhOjgwxpYpChwqdNTiHAgNHj?usp=sharing 
>>
>>
>>
>> I've tried checking the changelog of that version but it seems only 
>> like a
>> bug fix release.
>> Any ideas of what else I can test to identify the issue?
>
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From osgeo.mailinglist at gmail.com  Tue Mar 26 13:25:50 2024
From: osgeo.mailinglist at gmail.com (Thomas Gratier)
Date: Tue, 26 Mar 2024 21:25:50 +0100
Subject: [gdal-dev] About -oo -lco -dsco in docs
Message-ID: <CACPZzQ2ROSeJW-8CPqNPi+zAHXdYjbNSzdj+BpwoCPmZv7KJWg@mail.gmail.com>

Hi,

There are implicit rules when you read the OGR/GDAL docs in fact, in
particular when you use `ogr2ogr` or `ogrinfo`

`-oo <NAME>=<VALUE>` like "Open Options"
`-lco <NAME>=<VALUE>` for "Layer Creation Option"
`-dsco <NAME>=<VALUE>` for "DataSet Creation Option"

So, when you read for instance https://gdal.org/drivers/vector/csv.html,
you will see there is a section "Open options" so you will know that you
can use `-oo`. Also, you will see a "Layer Creation options" block so
again, you will know it mean use `-lco`.

It's documented in "ogr2ogr" but you need to know the rule to make the link
in your mind when reading the doc. Any idea to clarify the doc about the
"tip".

An idea could be about adding in drivers docs "Open options" block a
sentence like "When using the command line, use the flag `-oo
<NAME>=<VALUE>`" and do the same for "Layer creation options" block "When
using the command line, use the flag `-lco <NAME>=<VALUE>`"

Thoughts about the suggestion? Better idea? Not worth?

Regards,

Thomas Gratier
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240326/245cf47f/attachment.htm>

From cristhian.rivera at hyds.es  Tue Mar 26 13:40:27 2024
From: cristhian.rivera at hyds.es (Cristhian Rivera)
Date: Tue, 26 Mar 2024 21:40:27 +0100
Subject: [gdal-dev] Incorrect geolocation information using newer gdal
 versions
In-Reply-To: <edc262a2-8e35-430b-a280-a1f5c69fc8f9@spatialys.com>
References: <CAKrTThcu_+VPAm1mCoy8q1NcPj1K9qB+QQuhpT7jwEcEbjYRbQ@mail.gmail.com>
 <39091ddd-4a78-e2fd-8704-cfde05eeca61@aitchison.me.uk>
 <edc262a2-8e35-430b-a280-a1f5c69fc8f9@spatialys.com>
Message-ID: <CAKrTThcm0+ARWSH8OPPRwP2y2uGPXzq8_82N7fUUvc5CtxS1EQ@mail.gmail.com>

Thanks a lot to both of you! The GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS
option did the trick!
Didn't know about the --debug on flag, it will come in handy in the future

Regarding the last part:

What is at least missing in that particular file is the
> Easting:standard_name = "projection_x_coordinate" and
> Northing:standard_name = "projection_y_coordinate" attributes.


 How can I manually set those values?

Thanks for the help,


El mar, 26 mar 2024 a las 20:14, Even Rouault via gdal-dev (<
gdal-dev at lists.osgeo.org>) escribi?:

> Yes, some versions ago the netCDF driver became much more stricter,
> expecting a strict respect of the netCDF CF conventions for axis names &
> attributes, to avoid false identification of non-georeferenced axis,
> which could cause issues.
>
> The below debug message gives a hint to use the
> GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES to relax those checks.
>
> Cf https://gdal.org/drivers/raster/netcdf.html#configuration-options
>
> $ gdalinfo 20240321000000.nc --config
> GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS YES
> [...]
> Origin = (24500.000000000000000,465500.000000000000000)
> Pixel Size = (1000.000000000000000,-1000.000000000000000)
> [...]
> Corner Coordinates:
> Upper Left  (   24500.000,  465500.000)
> Lower Left  (   24500.000,   14500.000)
> Upper Right (  375500.000,  465500.000)
> Lower Right (  375500.000,   14500.000)
> Center      (  200000.000,  240000.000)
>
> What is at least missing in that particular file is the
> Easting:standard_name = "projection_x_coordinate" and
> Northing:standard_name = "projection_y_coordinate" attributes.
>
> Even
>
> Le 26/03/2024 ? 20:02, Andrew C Aitchison via gdal-dev a ?crit :
> > On Tue, 26 Mar 2024, Cristhian Rivera via gdal-dev wrote:
> >
> >> Hi all,
> >>
> >> I'm trying to debug an issue with a NetCDF file where in previous gdal
> >> versions (up until 3.3.0) the geolocation was correctly identified by
> >> gdalinfo, but in newer versions (>= 3.3.1) it is not.
> >
> > I note that both versions output the warnings:
> >
> > Warning 1: dimension #2 (Easting) is not a Longitude/X dimension.
> > Warning 1: dimension #1 (Northing) is not a Latitude/Y dimension.
> >
> > gdalinfo --debug on 20240321000000.nc
> > gives me more info:
> >
> > Warning 1: dimension #2 (Easting) is not a Longitude/X dimension.
> > Warning 1: dimension #1 (Northing) is not a Latitude/Y dimension.
> > GDAL_netCDF:
> > =====
> > SetProjectionFromVar( 65536, 4)
> > GDAL_netCDF: got grid_mapping crs
> > GDAL_netCDF: bIsGdalFile=0 bIsGdalCfFile=0 bSwitchedXY=0 bBottomUp=1
> > netCDF: Georeferencing ignored due to non-specific enough X axis name.
> > Set GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES as configuration option
> > to bypass this check
> > netCDF: Georeferencing ignored due to non-specific enough Y axis name.
> > Set GDAL_NETCDF_IGNORE_XY_AXIS_NAME_CHECKS=YES as configuration option
> > to bypass this check
> > GDAL_netCDF: bGotGeogCS=0 bGotCfSRS=0 bGotCfGT=0 bGotCfWktSRS=0
> > bGotGdalSRS=0 bGotGdalGT=0
> > GDAL_netCDF: did not get geotransform from CF nor GDAL!
> > GDAL_netCDF: did not get projection from CF nor GDAL!
> > GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
> > GDAL: GDALOpen(20240321000000.nc, this=0x63c988f650a0) succeeds as
> > netCDF.
> > GDAL: GDALDefaultOverviews::OverviewScan()
> > GDAL: GDALClose(20240321000000.nc, this=0x63c988f650a0)
> >
> >
> >> In the attachments are the outputs of gdalinfo from the versions
> >> mentioned,
> >> but the difference in both outputs is that newer versions cannot find
> >> the
> >> "Origin" and "Pixel size", and the Corner coordinates differ a lot:
> >>
> >> *Gdal 3.3.0:*
> >>
> >>> Origin = (24500.000000000000000,465500.000000000000000)
> >>> Pixel Size = (1000.000000000000000,-1000.000000000000000)
> >>
> >>
> >>
> >> Corner Coordinates:
> >>> Upper Left  (   24500.000,  465500.000)
> >>> Lower Left  (   24500.000,   14500.000)
> >>> Upper Right (  375500.000,  465500.000)
> >>> Lower Right (  375500.000,   14500.000)
> >>> Center      (  200000.000,  240000.000)
> >>
> >>
> >>> = *Gdal 3.3.1*
> >>
> >>> Corner Coordinates:
> >>> Upper Left  (    0.0,    0.0)
> >>> Lower Left  (    0.0,  451.0)
> >>> Upper Right (  351.0,    0.0)
> >>> Lower Right (  351.0,  451.0)
> >>> Center      (  175.5,  225.5)
> >>
> >>
> >> The files can also be found in the following drive repo if they are not
> >> available in the mail:
> >>
> https://drive.google.com/drive/folders/1zqV3n2SYUhOjgwxpYpChwqdNTiHAgNHj?usp=sharing
> >>
> >>
> >>
> >> I've tried checking the changelog of that version but it seems only
> >> like a
> >> bug fix release.
> >> Any ideas of what else I can test to identify the issue?
> >
> >
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


-- 
*Cristhian Rivera*
cristhian.rivera at hyds.es

*HYDS (Hydrometeorological Innovative Solutions)*
Jordi Girona 1-3, Ed. ParcUPC K2M 002
08034 Barcelona (Spain)
https://www.hyds.es
Tel: (+34) 933 524 050 <+34933524050>
*Disclaimer <https://www.hyds.es/disclaimer/> | Aviso Legal
<https://www.hyds.es/es/disclaimer/> | Av?s Legal
<https://www.hyds.es/ca/disclaimer/>*
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240326/0cd8da4c/attachment-0001.htm>

From michael.otto at data-experts.de  Wed Mar 27 06:29:22 2024
From: michael.otto at data-experts.de (Michael Otto)
Date: Wed, 27 Mar 2024 14:29:22 +0100
Subject: [gdal-dev] ERROR 1: Couldn't fetch requested layer when using a
 filter in the ogr2ogr- GetFeature request
Message-ID: <OF5E4C9E14.9590B8CA-ONC1258AED.0049A81E-C1258AED.004A18AB@data-experts.de>

Hello,

I'm trying to query a free WFS with filter values via ogr2ogr and write 
the results to a GeoJson file. 

If I use the following URL incl. filter:

https://isk.geobasis-bb.de/ows/feldblockkataster_wfs?SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAMES=refbb:Feldblock&SRSNAME=EPSG:25833&filter=
<fes:Filter xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:xsi="
http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.opengis.net/fes/2.0 
http://schemas.opengis.net/filter/2.0/filterAll.xsd"> <fes:And> 
<fes:PropertyIsEqualTo> <fes:ValueReference>FLIK</fes:ValueReference> 
<fes:Literal>DEBBLI1873413738</fes:Literal> </fes:PropertyIsEqualTo> 
<fes:PropertyIsEqualTo> 
<fes:ValueReference>FACHL_GUELTIG_AB</fes:ValueReference> 
<fes:Literal>2022-01-01</fes:Literal> </fes:PropertyIsEqualTo> </fes:And> 
</fes:Filter>

get the error message:

ERROR 1: Couldn't fetch requested layer '
http://schemas.opengis.net/filter/2.0/filterAll. xsd> <fes:And> 
<fes:PropertyIsEqualTo> <fes:ValueReference>FLIK</fes:ValueReference> 
<fes:Literal>DEBBLI1873413738</fes:Literal> </fes:PropertyIsEqualTo> <fes: 
PropertyIsEqualTo> 
<fes:ValueReference>FACHL_GUELTIG_AB</fes:ValueReference> 
<fes:Literal>2022-01-01</fes:Literal> </fes:PropertyIsEqualTo> </fes:And> 
</fes:Filter>'!

and no results.

If I submit the GetFeature request directly in the browser, I get the 
expected result (namely exactly 2 features).
Without the filter on the URL, my GetFeature requests also work as 
expected with ogr2ogr.

What am I doing wrong?

Michael
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240327/a67cc3cb/attachment.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Mar 27 06:39:17 2024
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Wed, 27 Mar 2024 13:39:17 +0000
Subject: [gdal-dev] ERROR 1: Couldn't fetch requested layer when using a
 filter in the ogr2ogr- GetFeature request
In-Reply-To: <OF5E4C9E14.9590B8CA-ONC1258AED.0049A81E-C1258AED.004A18AB@data-experts.de>
References: <OF5E4C9E14.9590B8CA-ONC1258AED.0049A81E-C1258AED.004A18AB@data-experts.de>
Message-ID: <DB9PR09MB6887E5C94BD8D4B4069C4D15FD342@DB9PR09MB6887.eurprd09.prod.outlook.com>

Hi,

Works for me with an URL encoded request:

ogrinfo "https://isk.geobasis-bb.de/ows/feldblockkataster_wfs?SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAMES=refbb:Feldblock&SRSNAME=EPSG:25833&filter=%3Cfes:Filter%20xmlns:fes=%22http://www.opengis.net/fes/2.0%22%20xmlns:xsi=%22http://www.w3.org/2001/XMLSchema-instance%22%20xsi:schemaLocation=%22http://www.opengis.net/fes/2.0http://schemas.opengis.net/filter/2.0/filterAll.xsd%22%3E%20%3Cfes:And%3E%20%3Cfes:PropertyIsEqualTo%3E%20%3Cfes:ValueReference%3EFLIK%3C/fes:ValueReference%3E%20%3Cfes:Literal%3EDEBBLI1873413738%3C/fes:Literal%3E%20%3C/fes:PropertyIsEqualTo%3E%20%3Cfes:PropertyIsEqualTo%3E%20%3Cfes:ValueReference%3EFACHL_GUELTIG_AB%3C/fes:ValueReference%3E%20%3Cfes:Literal%3E2022-01-01%3C/fes:Literal%3E%20%3C/fes:PropertyIsEqualTo%3E%20%3C/fes:And%3E%20%3C/fes:Filter%3E" -al

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Michael Otto via gdal-dev
L?hetetty: keskiviikko 27. maaliskuuta 2024 15.29
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: [gdal-dev] ERROR 1: Couldn't fetch requested layer when using a filter in the ogr2ogr- GetFeature request

Hello,

I'm trying to query a free WFS with filter values via ogr2ogr and write the results to a GeoJson file.

If I use the following URL incl. filter:

https://isk.geobasis-bb.de/ows/feldblockkataster_wfs?SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAMES=refbb:Feldblock&SRSNAME=EPSG:25833&filter=<fes:Filter xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/fes/2.0http://schemas.opengis.net/filter/2.0/filterAll.xsd"> <fes:And> <fes:PropertyIsEqualTo> <fes:ValueReference>FLIK</fes:ValueReference> <fes:Literal>DEBBLI1873413738</fes:Literal> </fes:PropertyIsEqualTo> <fes:PropertyIsEqualTo> <fes:ValueReference>FACHL_GUELTIG_AB</fes:ValueReference> <fes:Literal>2022-01-01</fes:Literal> </fes:PropertyIsEqualTo> </fes:And> </fes:Filter>

get the error message:

ERROR 1: Couldn't fetch requested layer 'http://schemas.opengis.net/filter/2.0/filterAll. xsd> <fes:And> <fes:PropertyIsEqualTo> <fes:ValueReference>FLIK</fes:ValueReference> <fes:Literal>DEBBLI1873413738</fes:Literal> </fes:PropertyIsEqualTo> <fes: PropertyIsEqualTo> <fes:ValueReference>FACHL_GUELTIG_AB</fes:ValueReference> <fes:Literal>2022-01-01</fes:Literal> </fes:PropertyIsEqualTo> </fes:And> </fes:Filter>'!

and no results.

If I submit the GetFeature request directly in the browser, I get the expected result (namely exactly 2 features).
Without the filter on the URL, my GetFeature requests also work as expected with ogr2ogr.

What am I doing wrong?

Michael
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240327/684f5c60/attachment.htm>

From michael.otto at data-experts.de  Wed Mar 27 06:44:13 2024
From: michael.otto at data-experts.de (Michael Otto)
Date: Wed, 27 Mar 2024 14:44:13 +0100
Subject: [gdal-dev] Antwort: Re: ERROR 1: Couldn't fetch requested layer
 when using a filter in the ogr2ogr- GetFeature request
In-Reply-To: <DB9PR09MB6887E5C94BD8D4B4069C4D15FD342@DB9PR09MB6887.eurprd09.prod.outlook.com>
References: <OF5E4C9E14.9590B8CA-ONC1258AED.0049A81E-C1258AED.004A18AB@data-experts.de>
 <DB9PR09MB6887E5C94BD8D4B4069C4D15FD342@DB9PR09MB6887.eurprd09.prod.outlook.com>
Message-ID: <OFEF9D0332.383C2DD4-ONC1258AED.004B59B1-C1258AED.004B74F2@data-experts.de>

Thank you Jukka,

that's it!

Michael




Von:    "Rahkonen Jukka" <jukka.rahkonen at maanmittauslaitos.fi>
An:     "Michael Otto" <michael.otto at data-experts.de>, 
"gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Datum:  27.03.2024 14:39
Betreff:        Re: [gdal-dev] ERROR 1: Couldn't fetch requested layer 
when using a filter in the ogr2ogr- GetFeature request



Hi,
 
Works for me with an URL encoded request:

ogrinfo "
https://isk.geobasis-bb.de/ows/feldblockkataster_wfs?SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAMES=refbb:Feldblock&SRSNAME=EPSG:25833&filter=%3Cfes:Filter%20xmlns:fes=%22http://www.opengis.net/fes/2.0%22%20xmlns:xsi=%22http://www.w3.org/2001/XMLSchema-instance%22%20xsi:schemaLocation=%22http://www.opengis.net/fes/2.0http://schemas.opengis.net/filter/2.0/filterAll.xsd%22%3E%20%3Cfes:And%3E%20%3Cfes:PropertyIsEqualTo%3E%20%3Cfes:ValueReference%3EFLIK%3C/fes:ValueReference%3E%20%3Cfes:Literal%3EDEBBLI1873413738%3C/fes:Literal%3E%20%3C/fes:PropertyIsEqualTo%3E%20%3Cfes:PropertyIsEqualTo%3E%20%3Cfes:ValueReference%3EFACHL_GUELTIG_AB%3C/fes:ValueReference%3E%20%3Cfes:Literal%3E2022-01-01%3C/fes:Literal%3E%20%3C/fes:PropertyIsEqualTo%3E%20%3C/fes:And%3E%20%3C/fes:Filter%3E
" -al

-Jukka Rahkonen-
 
L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Michael 
Otto via gdal-dev
L?hetetty: keskiviikko 27. maaliskuuta 2024 15.29
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: [gdal-dev] ERROR 1: Couldn't fetch requested layer when using a 
filter in the ogr2ogr- GetFeature request
 
Hello,

I'm trying to query a free WFS with filter values via ogr2ogr and write 
the results to a GeoJson file. 

If I use the following URL incl. filter:

https://isk.geobasis-bb.de/ows/feldblockkataster_wfs?SERVICE=WFS&VERSION=2.0.0&REQUEST=GetFeature&TYPENAMES=refbb:Feldblock&SRSNAME=EPSG:25833&filter=
<fes:Filter xmlns:fes="http://www.opengis.net/fes/2.0" xmlns:xsi="
http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.opengis.net/fes/2.0
http://schemas.opengis.net/filter/2.0/filterAll.xsd"> <fes:And> 
<fes:PropertyIsEqualTo> <fes:ValueReference>FLIK</fes:ValueReference> 
<fes:Literal>DEBBLI1873413738</fes:Literal> </fes:PropertyIsEqualTo> 
<fes:PropertyIsEqualTo> 
<fes:ValueReference>FACHL_GUELTIG_AB</fes:ValueReference> 
<fes:Literal>2022-01-01</fes:Literal> </fes:PropertyIsEqualTo> </fes:And> 
</fes:Filter>

get the error message:

ERROR 1: Couldn't fetch requested layer '
http://schemas.opengis.net/filter/2.0/filterAll. xsd> <fes:And> 
<fes:PropertyIsEqualTo> <fes:ValueReference>FLIK</fes:ValueReference> 
<fes:Literal>DEBBLI1873413738</fes:Literal> </fes:PropertyIsEqualTo> <fes: 
PropertyIsEqualTo> 
<fes:ValueReference>FACHL_GUELTIG_AB</fes:ValueReference> 
<fes:Literal>2022-01-01</fes:Literal> </fes:PropertyIsEqualTo> </fes:And> 
</fes:Filter>'!

and no results.

If I submit the GetFeature request directly in the browser, I get the 
expected result (namely exactly 2 features).
Without the filter on the URL, my GetFeature requests also work as 
expected with ogr2ogr.

What am I doing wrong?

Michael 


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240327/10a92d6e/attachment-0001.htm>

From even.rouault at spatialys.com  Wed Mar 27 14:01:48 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Mar 2024 22:01:48 +0100
Subject: [gdal-dev] About -oo -lco -dsco in docs
In-Reply-To: <CACPZzQ2ROSeJW-8CPqNPi+zAHXdYjbNSzdj+BpwoCPmZv7KJWg@mail.gmail.com>
References: <CACPZzQ2ROSeJW-8CPqNPi+zAHXdYjbNSzdj+BpwoCPmZv7KJWg@mail.gmail.com>
Message-ID: <0d1b8e1d-d088-440c-b2a5-1a13189b927c@spatialys.com>

Salut Thomas,

There's a tension between being clear to users, and also aiming at being 
concise / not repeating us too much (we have already one thousand pages 
of doc to maintain), and if we need to repeat, find the technical way of 
doing it without actually having to copy&paste&maintain the same text.

Probably a solution could be to have under each "Open options" 
paragraph, and introduction sentence like

"Consult :ref:`how to specify open options <open_options>` with command 
line utilities and the API." that links to a page explaining the concept 
and how to use it.

I was wondering if we'd just want to copy&paste that sentence at all 
relevant places, or create a custom Sphinx extension for a directive 
that would do that. The later is probably overkill. Possibly a one-time 
simple Python script could automatically insert that at relevant places

Even


Le 26/03/2024 ? 21:25, Thomas Gratier via gdal-dev a ?crit?:
> Hi,
>
> There are implicit rules when you read the OGR/GDAL docs in fact, in 
> particular when you use `ogr2ogr` or `ogrinfo`
>
> `-oo <NAME>=<VALUE>` like "Open Options"
> `-lco <NAME>=<VALUE>` for "Layer Creation Option"
> `-dsco <NAME>=<VALUE>` for "DataSet Creation Option"
>
> So, when you read for instance 
> https://gdal.org/drivers/vector/csv.html, you will see there is a 
> section "Open options" so you will know that you can use `-oo`. Also, 
> you will see a "Layer Creation options" block so again, you will know 
> it mean use `-lco`.
>
> It's documented in "ogr2ogr" but you need to know the rule to make the 
> link in your mind when reading the doc. Any idea to clarify the doc 
> about the "tip".
>
> An idea could be about adding in drivers docs "Open options" block a 
> sentence like "When using the command line, use the flag `-oo 
> <NAME>=<VALUE>`" and do the same for "Layer creation options" block 
> "When using the command line, use the flag `-lco <NAME>=<VALUE>`"
>
> Thoughts about the suggestion? Better idea? Not worth?
>
> Regards,
>
> Thomas Gratier
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From dbaston at gmail.com  Wed Mar 27 14:17:38 2024
From: dbaston at gmail.com (Daniel Baston)
Date: Wed, 27 Mar 2024 17:17:38 -0400
Subject: [gdal-dev] About -oo -lco -dsco in docs
In-Reply-To: <0d1b8e1d-d088-440c-b2a5-1a13189b927c@spatialys.com>
References: <CACPZzQ2ROSeJW-8CPqNPi+zAHXdYjbNSzdj+BpwoCPmZv7KJWg@mail.gmail.com>
 <0d1b8e1d-d088-440c-b2a5-1a13189b927c@spatialys.com>
Message-ID: <CA+K_q_qhGQku2DtMQNS=+78e7nxCyBgD0G7u6ztP17ef3ZEB4A@mail.gmail.com>

Perhaps a Sphinx substitution could be made with the relevant text and
added to
https://github.com/OSGeo/gdal/blob/master/doc/source/substitutions.rst

Dan

On Wed, Mar 27, 2024 at 5:01?PM Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Salut Thomas,
>
> There's a tension between being clear to users, and also aiming at being
> concise / not repeating us too much (we have already one thousand pages
> of doc to maintain), and if we need to repeat, find the technical way of
> doing it without actually having to copy&paste&maintain the same text.
>
> Probably a solution could be to have under each "Open options"
> paragraph, and introduction sentence like
>
> "Consult :ref:`how to specify open options <open_options>` with command
> line utilities and the API." that links to a page explaining the concept
> and how to use it.
>
> I was wondering if we'd just want to copy&paste that sentence at all
> relevant places, or create a custom Sphinx extension for a directive
> that would do that. The later is probably overkill. Possibly a one-time
> simple Python script could automatically insert that at relevant places
>
> Even
>
>
> Le 26/03/2024 ? 21:25, Thomas Gratier via gdal-dev a ?crit :
> > Hi,
> >
> > There are implicit rules when you read the OGR/GDAL docs in fact, in
> > particular when you use `ogr2ogr` or `ogrinfo`
> >
> > `-oo <NAME>=<VALUE>` like "Open Options"
> > `-lco <NAME>=<VALUE>` for "Layer Creation Option"
> > `-dsco <NAME>=<VALUE>` for "DataSet Creation Option"
> >
> > So, when you read for instance
> > https://gdal.org/drivers/vector/csv.html, you will see there is a
> > section "Open options" so you will know that you can use `-oo`. Also,
> > you will see a "Layer Creation options" block so again, you will know
> > it mean use `-lco`.
> >
> > It's documented in "ogr2ogr" but you need to know the rule to make the
> > link in your mind when reading the doc. Any idea to clarify the doc
> > about the "tip".
> >
> > An idea could be about adding in drivers docs "Open options" block a
> > sentence like "When using the command line, use the flag `-oo
> > <NAME>=<VALUE>`" and do the same for "Layer creation options" block
> > "When using the command line, use the flag `-lco <NAME>=<VALUE>`"
> >
> > Thoughts about the suggestion? Better idea? Not worth?
> >
> > Regards,
> >
> > Thomas Gratier
> >
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240327/6f1b26dd/attachment.htm>

From michael.otto at data-experts.de  Thu Mar 28 02:26:28 2024
From: michael.otto at data-experts.de (Michael Otto)
Date: Thu, 28 Mar 2024 10:26:28 +0100
Subject: [gdal-dev] Expiring token during paging on the WFS
Message-ID: <OFD255B5C9.73C0A621-ONC1258AEE.0032EE7C-C1258AEE.0033DBC4@data-experts.de>

Hello,

I have an important question about the use of a 'GDAL_HTTP_HEADER_FILE'.

If I request a WFS with "OGR_WFS_PAGING_ALLOWED=ON" and use a header file 
for authentication, will the header file be read with every new page?

I am wondering how I should deal with an expiring bearer token (validity 
5min) with a very long lasting query (>5min).

Questions:
Does ogr2ogr query the header file again for each new page?
Can I possibly set the authentication for every single requested page?
Is there another way to deal with expiring tokens?

Michael

PS: 
I use Java and start the apps via the ProcessBuilder.
If the header file is re-read for each page, I could update it accordingly 
(preferably without conflicts due to simultaneous reading and writing ;o) 
).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240328/f8d9e7ab/attachment.htm>

From andrew at aitchison.me.uk  Thu Mar 28 03:42:06 2024
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 28 Mar 2024 10:42:06 +0000 (GMT)
Subject: [gdal-dev] Expiring token during paging on the WFS
In-Reply-To: <OFD255B5C9.73C0A621-ONC1258AEE.0032EE7C-C1258AEE.0033DBC4@data-experts.de>
References: <OFD255B5C9.73C0A621-ONC1258AEE.0032EE7C-C1258AEE.0033DBC4@data-experts.de>
Message-ID: <86df1e98-e927-caba-c919-9092bd108f3c@aitchison.me.uk>

On Thu, 28 Mar 2024, Michael Otto via gdal-dev wrote:

> Hello,
>
> I have an important question about the use of a 'GDAL_HTTP_HEADER_FILE'.
>
> If I request a WFS with "OGR_WFS_PAGING_ALLOWED=ON" and use a header file
> for authentication, will the header file be read with every new page?
>
> I am wondering how I should deal with an expiring bearer token (validity
> 5min) with a very long lasting query (>5min).

Is this for one WFS service, or many ?
Assuming you are consuming the data promptly and aren't overloaded,
I would discuss this with the WFS service; you probably aren't
the only one having this issue. If sending the data takes longer
than the life of the token, they need longer-lived tokens.

Sorry I can't help with your actual questions.

> Questions:
> Does ogr2ogr query the header file again for each new page?
> Can I possibly set the authentication for every single requested page?
> Is there another way to deal with expiring tokens?
>
> Michael
>
> PS:
> I use Java and start the apps via the ProcessBuilder.
> If the header file is re-read for each page, I could update it accordingly
> (preferably without conflicts due to simultaneous reading and writing ;o)
> ).


-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From even.rouault at spatialys.com  Thu Mar 28 07:47:26 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 28 Mar 2024 15:47:26 +0100
Subject: [gdal-dev] Expiring token during paging on the WFS
In-Reply-To: <OFD255B5C9.73C0A621-ONC1258AEE.0032EE7C-C1258AEE.0033DBC4@data-experts.de>
References: <OFD255B5C9.73C0A621-ONC1258AEE.0032EE7C-C1258AEE.0033DBC4@data-experts.de>
Message-ID: <a178c5dd-a59f-406d-a77a-9c4c91efde48@spatialys.com>

Just added in 
https://github.com/OSGeo/gdal/commit/a6c3b0450994028a60cef854fbe6304910c7e277 
: "The content of the
file is not cached, and thus it is read again before issuing each HTTP 
request."

Le 28/03/2024 ? 10:26, Michael Otto via gdal-dev a ?crit?:
> Hello,
>
> I have an important question about the use of a 'GDAL_HTTP_HEADER_FILE'.
>
> If I request a WFS with "OGR_WFS_PAGING_ALLOWED=ON" and use a header 
> file for authentication, will the header file be read with every new page?
>
> I am wondering how I should deal with an expiring bearer token 
> (validity 5min) with a very long lasting query (>5min).
>
> Questions:
> Does ogr2ogr query the header file again for each new page?
> Can I possibly set the authentication for every single requested page?
> Is there another way to deal with expiring tokens?
>
> Michael
>
> PS:
> I use Java and start the apps via the ProcessBuilder.
> If the header file is re-read for each page, I could update it 
> accordingly (preferably without conflicts due to simultaneous reading 
> and writing ;o) ).
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240328/e4125e38/attachment.htm>

From philippe.ghesquiere at airbus.com  Fri Mar 29 01:45:08 2024
From: philippe.ghesquiere at airbus.com (Philippe Ghesquiere)
Date: Fri, 29 Mar 2024 09:45:08 +0100
Subject: [gdal-dev] JPEG2000 / GMLJP2: parameters seem to be ignored (offset
 location)
Message-ID: <CAAes_OHSdRL+dnGmK-87M_99ZvBGiXHBuSo_4Ha6obshHwSyHQ@mail.gmail.com>

Hi all,

I have some questions about GMLJP2 parameters concerning location.


*1) Description*Some JP2K images have a pixel origin different than (0 ; 0)
(DIMAP products for example).

In such cases, the GML header looks like like:
<gml:GridEnvelope>
    *<gml:low>7 7</gml:low>  <========== Different than "0 0"*
    <gml:high>1000 1000</gml:high>
</gml:GridEnvelope>

This origin coordinate should be taken into account for pixel location (See
OGC 05-047r3  p93):
<element name="startPoint" type="gml:integerList" minOccurs="0">
    <annotation>
        <documentation>
             Index position of the first grid post, which
             shall lie somwhere in the GridEnvelope. If absent, the
startPoint is equal
             to the value of gridEnvelope::low from the grid definition.
        </documentation>
    </annotation>
</element>

It seems that this offset is not taken into account by GDAL location
function.

*2) How to reproduce*
2.1) Data creation
Reference (no offset) image:
gdal_create -of JP2OpenJPEG -co GMLJP2=YES -outsize 100 100 -bands 3 -burn
0 -burn 255 -burn 0 -a_srs epsg:32632 -a_ullr 500000 500100 500100 500000
Offset_0.jp2

Image with offset:
sed s/"<gml:low>0 0"/"<gml:low>7 7"/g Offset_0.jp2 > Offset_7.jp2

2.2) Location test
echo "0 0" | gdaltransform Offset_0.jp2 Offset_7.jp2
0 0 0

*3) Question:*
Shouldn't we have a 7 pixels offset between the 2 images

Cheers
Philippe
The information in this e-mail is confidential. The contents may not be disclosed or used by anyone other than the addressee. Access to this e-mail by anyone else is unauthorised.
If you are not the intended recipient, please notify Airbus immediately and delete this e-mail.
Airbus cannot accept any responsibility for the accuracy or completeness of this e-mail as it has been sent over public networks. If you have any concerns over the content of this message or its Accuracy or Integrity, please contact Airbus immediately.
All outgoing e-mails from Airbus are checked using regularly updated virus scanning software but you should take whatever measures you deem to be appropriate to ensure that this message and any attachments are virus free.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240329/78fccef6/attachment.htm>

From j1 at jimenezshaw.com  Fri Mar 29 03:37:45 2024
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 29 Mar 2024 11:37:45 +0100
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: Experience with slowness of
 free() on Windows with lots of allocations?
In-Reply-To: <24703622-a76f-45af-b45a-e411adc22e1e@spatialys.com>
References: <3275981c-6ce5-4ed0-943e-00b80d0cbf38@spatialys.com>
 <CADRrdKu+Ewy_+i=5zYsiTKwdL5F_oS0OeZdaFp3S=XNacq7f7Q@mail.gmail.com>
 <PAXPR07MB77752666C2A6192319158318A2322@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <003F39B4-75EE-4AAB-B3E6-B67E493A3806@ndc.nasa.gov>
 <24703622-a76f-45af-b45a-e411adc22e1e@spatialys.com>
Message-ID: <CADRrdKv0z2rurLhZMKkMP9EwF_GtwNUoTvFv5iszLhm3P+e9og@mail.gmail.com>

for tcmalloc do you need master? this recent release seems to have CMake
https://github.com/gperftools/gperftools/releases/tag/gperftools-2.15

Of course, I do not mean to force the usage of it. But could be a
suggestion in case we do not find anything better and a user has problems.
Or a way to inspire later research.

For us it is definitely helping.

Cheers,
Javier

On Thu, 21 Mar 2024 at 14:59, Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> I've played with VirtualAlloc(NULL, SINGLE_ALLOC_SIZE, MEM_COMMIT |
> MEM_RESERVE, PAGE_READWRITE), and it does avoid the performance issue.
> However I see that VitualAlloc() allocates by chunks of 64 kB, so depending
> on the size of a block, it might cause significant waste of RAM, so that
> can't be used as a direct replacement of malloc().
>
> My inclination would be to perhaps have an optional config option like
> GDAL_BLOCK_CACHE_USE_PRIVATE_HEAP that could be set, and when doing so it
> would use HeapCreate(0, 0, GDAL_CACHEMAX) to create a heap only used by the
> block cache. Not ideal, since that would reserve the whole GDAL_CACHEMAX
> (but for a large enough processing, you'll end up consuming it), but it has
> the advantage of not being extremely intrusive either... and could be
> easily ditched/replaced by something better in the future.
>
> Regarding tcmalloc, I've had to use it on Linux too, but only on scenarios
> involving multithreading where it helps reducing RAM fragmentation: cf
> https://gdal.org/user/multithreading.html#ram-fragmentation-and-multi-threading
> . I've just tried quickly to use it on Windows to test it on the scenario,
> but didn't really manage to make it work. Even building it was challenging.
> Actually I tried https://github.com/gperftools/gperftools and I had to
> build from master since the latest tagged version doesn't build with CMake
> on Windows. But then nothing happens when linking tcmalloc_minimal.lib
> against my toy app. I probably missed something.
>
> Anyway I don't really think we can force tcmalloc to be used in GDAL, as a
> library. Unless there would be a way to have its allocator to be optionnaly
> used at places that we control (ie explicitly call tc_malloc / tc_free),
> and not replace the default malloc / free etc, which might be undesirable
> when GDAL is just a component of a larger application.
>
> Disabling entirely the block cache (or setting it to a minimum value) is
> only a workable option for uncompressed formats, or if you use per-band
> blocks (INTERLEAVE=BAND in GTiff language) and not one block for all bands
> (INTERLEAVE=PIXEL), otherwise you'll pay multiple time the decompression.
> Le 21/03/2024 ? 14:38, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND
> APPLICATIONS INC] via gdal-dev a ?crit :
>
> +1.  We use a variety of hand-rolled VirtualAlloc based (for basic tasks,
> a simple pointer bump, and for more elaborate needs, a ?buddy?) allocators,
> some of which try to be smart about memory usage via de-committing
> regions.  In our work, we tend to disable the GDAL cache entirely and rely
> on the file system?s file cache instead, which is a simplification we can
> make but is surely untenable in general here.
>
>
>
> *From: *gdal-dev <gdal-dev-bounces at lists.osgeo.org>
> <gdal-dev-bounces at lists.osgeo.org> on behalf of Abel Pau via gdal-dev
> <gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org>
> *Reply-To: *Abel Pau <a.pau at creaf.uab.cat> <a.pau at creaf.uab.cat>
> *Date: *Thursday, March 21, 2024 at 4:51?AM
> *To: *"gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
> <gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org>
> *Subject: *[EXTERNAL] [BULK] Re: [gdal-dev] Experience with slowness of
> free() on Windows with lots of allocations?
>
>
>
> *CAUTION:* This email originated from outside of NASA.  Please take care
> when clicking links or opening attachments.  Use the "Report Message"
> button to report suspicious messages to the NASA SOC.
>
>
>
> Hi Even,
>
>
>
> you?re right. We also know that. When programming the driver I took it in
> consideration. Our solution is not rely on windows to make a good job with
> memory and we try to reuse as memory as possible instead of use calloc/free
> freely.
>
>
>
> For instance, in the driver, for each feature I have to get or write the
> coordinates. I could do it every time I have to, so lots of times: create
> memory for reading, and then put them on the feature, and then free... so
> many times. What I do? When opening the layer I create some memory blocs of
> 250 Mb (due to the format itself) and I use that created memory to manage
> whatever I need. And when closing, I free it.
>
>
>
> While doing that I observed that sometimes I have to use GDAL code that
> doesn?t take it in consideration (CPLRecode() for instance). Perhaps it
> could be improves as well.
>
>
>
> Thanks for noticing that.
>
>
>
> *De:* gdal-dev <gdal-dev-bounces at lists.osgeo.org>
> <gdal-dev-bounces at lists.osgeo.org> *En nombre de *Javier Jimenez Shaw via
> gdal-dev
> *Enviado el:* dijous, 21 de mar? de 2024 8:27
> *Para:* Even Rouault <even.rouault at spatialys.com>
> <even.rouault at spatialys.com>
> *CC:* gdal dev <gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org>
> *Asunto:* Re: [gdal-dev] Experience with slowness of free() on Windows
> with lots of allocations?
>
>
>
> In my company we confirmed that "Windows heap allocation mechanism sucks."
>
> Closing the application after using gtiff driver can take many seconds due
> to memory deallocations.
>
>
>
> One workaround was to use tcmalloc. I will ask my colleagues more details
> next week.
>
>
>
> On Thu, 21 Mar 2024, 01:55 Even Rouault via gdal-dev, <
> gdal-dev at lists.osgeo.org> wrote:
>
> Hi,
>
> while investigating
> https://github.com/OSGeo/gdal/issues/9510#issuecomment-2010950408, I've
> come to the conclusion that the Windows heap allocation mechanism sucks.
> Basically if you allocate a lot of heap regions of modest size with
> malloc()/new[], the time spent when freeing them all with corresponding
> free()/delete[] is excruciatingly slow (like ~ 10 seconds for ~ 80,000
> allocations). The slowness is clearly quadratic with the number of
> allocations. You only start noticing it with ~ 30,000 allocations. And
> interestingly, another condition for that slowness is that each
> individual allocation much be strictly greater than 4096 * 4 bytes. At
> exactly that value, perf is acceptable, but add one extra byte, and it
> suddenly drops. I suspect that there must be a threshold from which
> malloc() starts using VirtualAlloc() instead of the heap, which must
> involve slow system calls, instead of a user-land allocation mechanism.
>
> Anyone has already hit that and found solutions? The only potential idea
> I found until now would be to use a private heap with HeapCreate() with
> a fixed maximum size, which is a bit problematic to adopt by default,
> basically that would mean that the size of GDAL_CACHEMAX would be
> consumed as soon as one use the block cache.
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240329/2497ddac/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Mar 29 06:34:01 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 29 Mar 2024 14:34:01 +0100
Subject: [gdal-dev] JPEG2000 / GMLJP2: parameters seem to be ignored
 (offset location)
In-Reply-To: <CAAes_OHSdRL+dnGmK-87M_99ZvBGiXHBuSo_4Ha6obshHwSyHQ@mail.gmail.com>
References: <CAAes_OHSdRL+dnGmK-87M_99ZvBGiXHBuSo_4Ha6obshHwSyHQ@mail.gmail.com>
Message-ID: <77aa8c68-0a3a-4322-a6a6-089e5f212fb3@spatialys.com>

This might be tricky, because JPEG2000 itself has a concept of a image 
space origin which is not necessarily (0,0) with the (XOSiz,?YOSiz) 
fields of the SIZ marker, although most of the time it is 0,0.?? I don't 
remember how the GDAL JPEG2000 drivers behave regarding that, if they 
ignore it (that is the GDAL 0,0 pixel is the one at (XOSiz,YOSiz)), of 
if the first valid pixel in GDAL image space is actually (XOSiz, YOSiz) 
and you have padding pixels between 0 and XOSiz/YOSiz.

You can get the XOSiz, YOSiz value with the 
https://github.com/OSGeo/gdal/blob/master/swig/python/gdal-utils/osgeo_utils/samples/dump_jp2.py 
script

Depending on how drivers behave, the combination of this JPEG2000 
imaging (XOSiz, YOSiz) concept with the gml:low shift from GMLJP2 might 
actually cancel and lead to the right result...

In any case data producers are calling for troubles by using any of 
those mechanisms...

Le 29/03/2024 ? 09:45, Philippe Ghesquiere via gdal-dev a ?crit?:
> Hi all,
>
> I have some questions about GMLJP2 parameters concerning location.
>
> *1) Description
> *Some JP2K images have a pixel origin different than (0 ; 0) (DIMAP 
> products for example).
>
> In such cases, the GML header looks like like:
> <gml:GridEnvelope>
> *<gml:low>7 7</gml:low>? <========== Different?than "0 0"*
> ? ? <gml:high>1000 1000</gml:high>
> </gml:GridEnvelope>
>
> This origin coordinate should be taken into account for pixel location 
> (See OGC 05-047r3? p93):
> <element name="startPoint" type="gml:integerList" minOccurs="0">
> ? ? <annotation>
> ? ? ? ? <documentation>
> ? ? ? ? ? ? ?Index position of the first grid post, which
> ? ? ? ? ? ? ?shall lie somwhere in the GridEnvelope. If absent, the 
> startPoint is equal
> ? ? ? ? ? ? ?to the value of gridEnvelope::low from the grid definition.
> ? ? ? ? </documentation>
> ? ? </annotation>
> </element>
>
> It seems that this offset is not taken into account by GDAL location 
> function.
>
> *2) How to reproduce*
> 2.1) Data creation
> Reference (no offset) image:
> gdal_create -of JP2OpenJPEG -co GMLJP2=YES -outsize 100 100 -bands 3 
> -burn 0 -burn 255 -burn 0 -a_srs epsg:32632 -a_ullr 500000 500100 
> 500100 500000 Offset_0.jp2
>
> Image with offset:
> sed s/"<gml:low>0 0"/"<gml:low>7 7"/g Offset_0.jp2 > Offset_7.jp2
>
> 2.2) Location test
> echo "0 0" | gdaltransform Offset_0.jp2 Offset_7.jp2
> 0 0 0
>
> *3) Question:*
> Shouldn't we have a 7 pixels offset between the 2 images
>
> Cheers
> Philippe
>
>
> The information in this e-mail is confidential. The contents may not 
> be disclosed or used by anyone other than the addressee. Access to 
> this e-mail by anyone else is unauthorised.
> If you are not the intended recipient, please notify Airbus 
> immediately and delete this e-mail.
> Airbus cannot accept any responsibility for the accuracy or 
> completeness of this e-mail as it has been sent over public networks. 
> If you have any concerns over the content of this message or its 
> Accuracy or Integrity, please contact Airbus immediately.
> All outgoing e-mails from Airbus are checked using regularly updated 
> virus scanning software but you should take whatever measures you deem 
> to be appropriate to ensure that this message and any attachments are 
> virus free.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240329/9684b20b/attachment.htm>

From howard at hobu.co  Fri Mar 29 10:20:58 2024
From: howard at hobu.co (Howard Butler)
Date: Fri, 29 Mar 2024 12:20:58 -0500
Subject: [gdal-dev] GDAL Maintainers Meeting Minutes
Message-ID: <1C9362AA-401D-4AD4-8415-B6385F83953A@hobu.co>

Howard Butler, Even Rouault, Dan Baston, Javier Jiminez Shaw, and Sean Gillies held the monthly GDAL Maintainers Meeting on 03/28/2024. The following items were discussed and reported upon:

Sponsorship Updates
-------------------------------

* Dynamic Graphic, Inc. sponsored GDAL at Supporter level

Discussion Items
----------------------------

 GDAL 3.8.5 RC1 is expected next week. It is intended to be the final 3.8 maintenance release with 3.9.0 being expected in May 2024

Maintenance activities update
------------------------------------------

Dan

* Addressed a few Python bindings crash bugs
* Python API documentation cleanups and reorganization to make discovery of methods groups by typical usage stories

Alessandro

* GDAL PR reviews
    * Vector file with Polygon Z with 2 coords causing errors https://github.com/OSGeo/gdal/issues/9326
    * GTiff: endless loop when resampling (bilinear) under some circumstances https://github.com/OSGeo/gdal/issues/9427
    *Inconsistent Output Dimensions from gdal.warp() with Identical outputBounds https://github.com/OSGeo/gdal/issues/9467 
* Small improvement to code formatting to add line breaks after methods definition https://github.com/OSGeo/gdal/pull/9498 

Even

* Exploring implementation of a consistent argument parsing library for all of the GDAL and OGR command line utilities. This library-wide update will provide a number of quality-of-life improvements for users of the command line utilities:
  * Usage messages will be consistently formatted
  * Longer help messages
  * Multiple specification of the same arguments should work more consistently and not fail silently in some cases
  * Potential for leverage of same framework to specify input for driving CLI activity with config files
  * Ability to remove lots of boilerplate CLI parsing code in the utilities
* RFC99 was merged that provided preliminary implementation to address management and bookkeeping of coordinate precision in OGR drivers that can leverage it. See https://github.com/rouault/gdal/blob/rfc99_text/doc/source/development/rfc/rfc99_geometry_coordinate_precision.rst for discussion
* Facilitated the release of OpenJPEG 2.5.2. See https://github.com/uclouvain/openjpeg/releases/tag/v2.5.2 for more information
* libtiff PSC motion passed and the project is now managed under GDAL-like processes
* Added a getDataset method on Layers to ensure that library users are not required to memoize Layer/Dataset relationships
* Action on over 100 tickets and PRs

The next GDAL Maintainers Meeting is 04/25/2024 at 9:00 EDT. Any PSC members are welcome to join by reaching out to me for an invite.

Howard

From even.rouault at spatialys.com  Sat Mar 30 12:16:33 2024
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 30 Mar 2024 20:16:33 +0100
Subject: [gdal-dev] CVE-2024-3094 (aka "xz hackdoor") and GDAL
Message-ID: <2fcd1d2f-37d2-44b7-8717-8074871fa351@spatialys.com>

Hi,

TLDR: no specific reason to worry.

My longer analysis:

Those following the recent security news have certainly come across 
https://lwn.net/Articles/967180 or similar articles, and if you don't 
have and have been running a cutting edge Linux distribution recently, 
you *should* follow related security alerts emitted by your vendor.

liblzma (the library part of the xz software distribution) is an 
optional libtiff dependency for the TIFF LZMA codec, and an optional 
direct GDAL dependency since GDAL 1.8.0. Initially only used when 
building GDAL with its internal libtiff, and since GDAL 3.4.0, directly 
too as a Zarr codec.

Beyond activity in liblzma / xz being potentially suspicious with at 
least 2 years of "contributions" by malicious actor 
https://github.com/JiaT75, which makes the current headlines, it has 
also been found that they contributed to libarchive too since 2021 
(https://github.com/libarchive/libarchive/commits?author=JiaT75), and 
their latest commit https://github.com/libarchive/libarchive/pull/1609 
is in particular pointed as suspicious. As far as I can see, this commit 
is present in libarchive >= 3.6. I mention libarchive because it is an 
optional GDAL dependency since GDAL 3.7.0 for the /vsi7z/ and /vsirar/ 
virtual file systems.

We don't have vendored copies of liblzma or libarchive in the GDAL 
source code repository.

Regarding GDAL Docker images, here's the status of versions they ship:

- ghcr.io/osgeo/gdal:alpine-small-3.8.4 and 
ghcr.io/osgeo/gdal:alpine-normal-3.8.4:
xz-libs-5.4.3-r0
libarchive-3.7.2-r0

- ghcr.io/osgeo/gdal:ubuntu-full-3.8.4:
liblzma5:amd64??????????????? 5.2.5-2ubuntu1
libarchive13:amd64??????????? 3.6.0-1ubuntu1

- ghcr.io/osgeo/gdal:ubuntu-small-3.8.4:
liblzma5:amd64????????????? 5.2.5-2ubuntu1

So those liblzma versions are not currently considered as affected. 
Regarding libarchive status and the impact of JiaT75's activity there, 
it seems to me we are yet in undecided territory and it wouldn't be 
surprising to see update of those libraries in the coming weeks, as 
exploration of past activity from that compromising entity is performed.

It is a good time to recall usual general best-practices:

- avoid opening datasets coming from unknown or untrusted sources

- if you do so, prefer doing that on dedicated workstations that don't 
have access to sensitive information

- you may reduce your potential exposure by disabling at build time 
optional dependencies you don't need.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20240330/30e805cc/attachment.htm>

