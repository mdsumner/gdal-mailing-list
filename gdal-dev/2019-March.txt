From even.rouault at spatialys.com  Fri Mar  1 05:33:55 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 01 Mar 2019 14:33:55 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
Message-ID: <31666320.RX92u5H2XH@even-i700>

Hi,

I've prepared a OGDI 4.0.0 release candidate.

Download links:
https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1.tar.gz
https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1.zip

The news are

4.0.0
=====

 o  Remove PROJ.4 dependency, functionality and related API

    With PROJ 6 being released and removing completely projects.h old API,
    a major upgrade would have been needed. I'd rather choose to completely
    cut off PROJ related functionality from OGDI.
    For the VRF case, projection support can be done through the GDAL/OGR
    OGDI driver.

    The dtusa and dtcanada drivers are removed.

    The following functions are removed from ecs_util.h:
    cln_SetServerProjection
    cln_SetClientProjection
    cln_ProjInit
    cln_CompareProjections
    cln_ConvRegion
    cln_ConvTtoS
    cln_ConvStoT
    cln_ChangeProjection
    cln_ChangeProjectionArea
    cln_ChangeProjectionLine
    cln_ChangeProjectionPoint
    cln_ChangeProjectionMatrix
    cln_ChangeProjectionImage
    cln_ChangeProjectionText
    ecs_distance_meters

 o  Update server version to 4.0 to reflect removal of SetServerProjection
    capability

 o  Build: add -fPIC when required

 o  Rename aclocal.m4 to acinclude.m4 and apply stricter quoting

 o  Respect LDFLAGS provided to ./configure

 o  Fall back to libtirpc if libc does not provide rpc/rpc.h

 o  Don't hardcode compiler to fix cross compilation.


I've verified it works fine with GDAL/OGR OGDI driver with the VRF OGDI driver of both
GDAL 2.4 and GDAL master, since GDAL does not use the now removed OGDI PROJ capabilities

Sourceforge CVS being now read-only, upstream development is now definitely at
https://github.com/libogdi/ogdi

I'll promote this RC to final if there are no serious issues reported.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Fri Mar  1 06:20:19 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 1 Mar 2019 15:20:19 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <31666320.RX92u5H2XH@even-i700>
References: <31666320.RX92u5H2XH@even-i700>
Message-ID: <2d1e2095-b3d3-5448-6976-46fc102a525e@xs4all.nl>

On 3/1/19 2:33 PM, Even Rouault wrote:
> Download links:
> https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1.tar.gz
> https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1.zip
> 
> [...]
> 
> Sourceforge CVS being now read-only, upstream development is now definitely at
> https://github.com/libogdi/ogdi

The release tag on GitHub is ogdi_4_0_0, shouldn't that reflect the RC
status too?

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Fri Mar  1 06:36:14 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 01 Mar 2019 15:36:14 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <2d1e2095-b3d3-5448-6976-46fc102a525e@xs4all.nl>
References: <31666320.RX92u5H2XH@even-i700>
 <2d1e2095-b3d3-5448-6976-46fc102a525e@xs4all.nl>
Message-ID: <5486290.jIxLoBMNEE@even-i700>

On vendredi 1 mars 2019 15:20:19 CET Sebastiaan Couwenberg wrote:
> On 3/1/19 2:33 PM, Even Rouault wrote:
> > Download links:
> > https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1
> > .tar.gz
> > https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC
> > 1.zip
> > 
> > [...]
> > 
> > Sourceforge CVS being now read-only, upstream development is now
> > definitely at https://github.com/libogdi/ogdi
> 
> The release tag on GitHub is ogdi_4_0_0, shouldn't that reflect the RC
> status too?

I'll recreate it if a RC2 is needed

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Fri Mar  1 06:59:57 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 1 Mar 2019 15:59:57 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <5486290.jIxLoBMNEE@even-i700>
References: <31666320.RX92u5H2XH@even-i700>
 <2d1e2095-b3d3-5448-6976-46fc102a525e@xs4all.nl>
 <5486290.jIxLoBMNEE@even-i700>
Message-ID: <62b3b063-cd91-7c58-058d-2d8fb15f0a33@xs4all.nl>

On 3/1/19 3:36 PM, Even Rouault wrote:
> On vendredi 1 mars 2019 15:20:19 CET Sebastiaan Couwenberg wrote:
>> On 3/1/19 2:33 PM, Even Rouault wrote:
>>> Download links:
>>> https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1
>>> .tar.gz
>>> https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC
>>> 1.zip
>>>
>>> [...]
>>>
>>> Sourceforge CVS being now read-only, upstream development is now
>>> definitely at https://github.com/libogdi/ogdi
>>
>> The release tag on GitHub is ogdi_4_0_0, shouldn't that reflect the RC
>> status too?
> 
> I'll recreate it if a RC2 is needed

While I'd rather see the tag renamed as it causes the upstream version
detection for the Debian package to see newer release, that situation
hopefully won't last long. We also cannot rely on the release tags to
know when 4.0.0 final is released.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From sebastic at xs4all.nl  Fri Mar  1 07:46:35 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 1 Mar 2019 16:46:35 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <31666320.RX92u5H2XH@even-i700>
References: <31666320.RX92u5H2XH@even-i700>
Message-ID: <4d417316-3408-ce26-1f36-f9a84cd40070@xs4all.nl>

On 3/1/19 2:33 PM, Even Rouault wrote:
> I'll promote this RC to final if there are no serious issues reported.

Not having pkg-config installed causes configure to fail with syntax
errors instead of failing gracefully about the lack of the pkg-config
requirement.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Fri Mar  1 08:26:49 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 01 Mar 2019 17:26:49 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <4d417316-3408-ce26-1f36-f9a84cd40070@xs4all.nl>
References: <31666320.RX92u5H2XH@even-i700>
 <4d417316-3408-ce26-1f36-f9a84cd40070@xs4all.nl>
Message-ID: <5858689.Mo1fqJ05oo@even-i700>

On vendredi 1 mars 2019 16:46:35 CET Sebastiaan Couwenberg wrote:
> On 3/1/19 2:33 PM, Even Rouault wrote:
> > I'll promote this RC to final if there are no serious issues reported.
> 
> Not having pkg-config installed causes configure to fail with syntax
> errors instead of failing gracefully about the lack of the pkg-config
> requirement.
> 

I can't reproduce this.
I've renamed my pkg-config binary and /usr/include/rpc/rpc.h to trigger the 
need of pkg-config and I get a clean error:

checking rpc/rpc.h usability... no
checking rpc/rpc.h presence... no
checking for rpc/rpc.h... no
checking for RPC... no
configure: error: in `/home/even/ogdi/git/ogdi':
configure: error: The pkg-config script could not be found or is too old.  
Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

Alternatively, you may set the environment variables RPC_CFLAGS
and RPC_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.

To get pkg-config, see <http://pkg-config.freedesktop.org/>.
See `config.log' for more details

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Fri Mar  1 08:29:57 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 1 Mar 2019 17:29:57 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <5858689.Mo1fqJ05oo@even-i700>
References: <31666320.RX92u5H2XH@even-i700>
 <4d417316-3408-ce26-1f36-f9a84cd40070@xs4all.nl>
 <5858689.Mo1fqJ05oo@even-i700>
Message-ID: <fdc67cb0-847e-ab05-c2f4-b51289ffd289@xs4all.nl>

On 3/1/19 5:26 PM, Even Rouault wrote:
> I can't reproduce this.
> I've renamed my pkg-config binary and /usr/include/rpc/rpc.h to trigger the 
> need of pkg-config and I get a clean error:

We use a clean chroot and `autoreconf -fi` before calling configure.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From even.rouault at spatialys.com  Fri Mar  1 08:42:26 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 01 Mar 2019 17:42:26 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <fdc67cb0-847e-ab05-c2f4-b51289ffd289@xs4all.nl>
References: <31666320.RX92u5H2XH@even-i700> <5858689.Mo1fqJ05oo@even-i700>
 <fdc67cb0-847e-ab05-c2f4-b51289ffd289@xs4all.nl>
Message-ID: <39785120.g3U5J71jiB@even-i700>

On vendredi 1 mars 2019 17:29:57 CET Sebastiaan Couwenberg wrote:
> On 3/1/19 5:26 PM, Even Rouault wrote:
> > I can't reproduce this.
> > I've renamed my pkg-config binary and /usr/include/rpc/rpc.h to trigger
> > the
> 
> > need of pkg-config and I get a clean error:
> We use a clean chroot and `autoreconf -fi` before calling configure.

ok, this is a bit a chicken and egg problem.

For autoreconf -i to produce the correct configure file, it needs the
/usr/share/aclocal/pkg.m4 file which is provided by the pkg-config file.

An alternative might be to copy this pkg.m4 file in the m4/ directory of ogdi, 
like we do in GDAL. Not sure if this is the most appropriate action though.
Anyway I don't see this as a release blocker.

Thanks for the feedback.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Fri Mar  1 08:50:57 2019
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 01 Mar 2019 11:50:57 -0500
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <fdc67cb0-847e-ab05-c2f4-b51289ffd289@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Fri, 1 Mar 2019 17:29:57 +0100")
References: <31666320.RX92u5H2XH@even-i700>
 <4d417316-3408-ce26-1f36-f9a84cd40070@xs4all.nl>
 <5858689.Mo1fqJ05oo@even-i700>
 <fdc67cb0-847e-ab05-c2f4-b51289ffd289@xs4all.nl>
Message-ID: <smulg1yczda.fsf@linuxpal.mit.edu>

Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 3/1/19 5:26 PM, Even Rouault wrote:
>> I can't reproduce this.
>> I've renamed my pkg-config binary and /usr/include/rpc/rpc.h to trigger the 
>> need of pkg-config and I get a clean error:
>
> We use a clean chroot and `autoreconf -fi` before calling configure.

I always had the impression that autogen/autoreconf/etc. needed to have
all the dependencies installed to have the m4 files visible as Even
says.

This sort of problem seems like it would happen for almost every
package.  Is this something you are seeing special in GDAL?

From even.rouault at spatialys.com  Fri Mar  1 09:12:22 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 01 Mar 2019 18:12:22 +0100
Subject: [gdal-dev] OGDI 4.0.0RC1 ready for testing
In-Reply-To: <smulg1yczda.fsf@linuxpal.mit.edu>
References: <31666320.RX92u5H2XH@even-i700>
 <fdc67cb0-847e-ab05-c2f4-b51289ffd289@xs4all.nl>
 <smulg1yczda.fsf@linuxpal.mit.edu>
Message-ID: <8972110.9yt4DcPnf6@even-i700>

On vendredi 1 mars 2019 11:50:57 CET Greg Troxel wrote:
> Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:
> > On 3/1/19 5:26 PM, Even Rouault wrote:
> >> I can't reproduce this.
> >> I've renamed my pkg-config binary and /usr/include/rpc/rpc.h to trigger
> >> the
> > 
> >> need of pkg-config and I get a clean error:
> > We use a clean chroot and `autoreconf -fi` before calling configure.
> 
> I always had the impression that autogen/autoreconf/etc. needed to have
> all the dependencies installed to have the m4 files visible as Even
> says.
> 
> This sort of problem seems like it would happen for almost every
> package.  Is this something you are seeing special in GDAL?

Digging into history, the reason is
https://trac.osgeo.org/gdal/ticket/6077#comment:2

So was a particular situation where I used a self-compiled autoconf, that 
lacked the pkg.m4 file. So definitely not a nominal situation


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From palmerjnz at gmail.com  Fri Mar  1 14:15:06 2019
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Sat, 2 Mar 2019 09:15:06 +1100
Subject: [gdal-dev] GDAL VRT with Cloud Optimized GeoTIFFs and AWS
Message-ID: <CAA5WJYmLNxmL-CE_g3e4tnwZkTZJkWe0DD3v8cAuHZEs3bCpiA@mail.gmail.com>

Hi All,

Does anyone have any tips or experience in trying to serve RGB large
imagery multi file datasets hosted on S3 to application servers/containers
for bulk tile rendering? Is this possible using VRTs and is the performance
manageable when compared to other mounted storage options?

Thanks,
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190302/d62c18e2/attachment.html>

From jeff at unterbahn.com  Fri Mar  1 14:45:05 2019
From: jeff at unterbahn.com (jywarren)
Date: Fri, 1 Mar 2019 15:45:05 -0700 (MST)
Subject: [gdal-dev] gdal2tiles.py cannot find EPSG:900913,
	sees only GDAL 1.6.1
In-Reply-To: <4C502C40.7090105@free.fr>
References: <AANLkTimn-TxvM9diuNP+uLURozHkoTFaZhgEcHpAoqvB@mail.gmail.com>
 <4C502C40.7090105@free.fr>
Message-ID: <1551480305904-0.post@n6.nabble.com>

Hi, Jean-Claude. It's been a long time but I found this post I made years ago
and in it, I was really rude. So I wanted to apologize for my tone and thank
you once again for your help. Please forgive me -- especially because I had
this error again, nine years later, and your answer was still helpful.



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From palmerjnz at gmail.com  Sat Mar  2 06:58:08 2019
From: palmerjnz at gmail.com (Jeremy Palmer)
Date: Sun, 3 Mar 2019 01:58:08 +1100
Subject: [gdal-dev] GDAL VRT with Cloud Optimized GeoTIFFs and AWS
In-Reply-To: <CAA5WJYmLNxmL-CE_g3e4tnwZkTZJkWe0DD3v8cAuHZEs3bCpiA@mail.gmail.com>
References: <CAA5WJYmLNxmL-CE_g3e4tnwZkTZJkWe0DD3v8cAuHZEs3bCpiA@mail.gmail.com>
Message-ID: <CAA5WJYme1=pCWvgu63FT9wOe8HM-OL3xbxmKLsvxKdFdiut0Jw@mail.gmail.com>

I've now found this useful Mapserver wiki page
https://github.com/mapserver/mapserver/wiki/Render-images-straight-out-of-S3-with-the-vsicurl-driver.
It seems to imply that it's better to merge a collection of dataset tiles
into a single big Geotiff rather than create a VRT due to the repeated HTTP
calls. I'm still interested in people's experiences using imagery direct
from S3 and it's performance.

Note some of my largest datasets have a total size of 1.5TBs uncompressed
Geotiff with about 8000 tiles @ 175mb per tile. I'll likely compress the
uncompressed Geotiffs and use JPEG compression, which I estimate can bring
the size down to about 200GB total.

Cheers
Jeremy

On Sat, Mar 2, 2019 at 9:15 AM Jeremy Palmer <palmerjnz at gmail.com> wrote:

> Hi All,
>
> Does anyone have any tips or experience in trying to serve RGB large
> imagery multi file datasets hosted on S3 to application servers/containers
> for bulk tile rendering? Is this possible using VRTs and is the performance
> manageable when compared to other mounted storage options?
>
> Thanks,
> Jeremy
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190303/e1e2bc31/attachment.html>

From richard.greenwood at gmail.com  Mon Mar  4 06:21:00 2019
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Mon, 4 Mar 2019 07:21:00 -0700
Subject: [gdal-dev] GDAL VRT with Cloud Optimized GeoTIFFs and AWS
In-Reply-To: <CAA5WJYme1=pCWvgu63FT9wOe8HM-OL3xbxmKLsvxKdFdiut0Jw@mail.gmail.com>
References: <CAA5WJYmLNxmL-CE_g3e4tnwZkTZJkWe0DD3v8cAuHZEs3bCpiA@mail.gmail.com>
 <CAA5WJYme1=pCWvgu63FT9wOe8HM-OL3xbxmKLsvxKdFdiut0Jw@mail.gmail.com>
Message-ID: <CAHBySPZLVhdqzJ3sfXLHgyOSS2_-Qpn5V+BVLFDXRtChmcAAYQ@mail.gmail.com>

What are the advantages of storing the imagery in S3 as opposed to EBS? I'm
using the throughput optimized magnetic EBS which I is a little less
expensive than S3. I did some testing a couple years ago and didn't see
enough performance gain to justify SSD. Have you tested S3 against any of
the EBS options?

Rich


On Sat, Mar 2, 2019 at 7:58 AM Jeremy Palmer <palmerjnz at gmail.com> wrote:

> I've now found this useful Mapserver wiki page
> https://github.com/mapserver/mapserver/wiki/Render-images-straight-out-of-S3-with-the-vsicurl-driver.
> It seems to imply that it's better to merge a collection of dataset tiles
> into a single big Geotiff rather than create a VRT due to the repeated HTTP
> calls. I'm still interested in people's experiences using imagery direct
> from S3 and it's performance.
>
> Note some of my largest datasets have a total size of 1.5TBs uncompressed
> Geotiff with about 8000 tiles @ 175mb per tile. I'll likely compress the
> uncompressed Geotiffs and use JPEG compression, which I estimate can bring
> the size down to about 200GB total.
>
> Cheers
> Jeremy
>
> On Sat, Mar 2, 2019 at 9:15 AM Jeremy Palmer <palmerjnz at gmail.com> wrote:
>
>> Hi All,
>>
>> Does anyone have any tips or experience in trying to serve RGB large
>> imagery multi file datasets hosted on S3 to application servers/containers
>> for bulk tile rendering? Is this possible using VRTs and is the performance
>> manageable when compared to other mounted storage options?
>>
>> Thanks,
>> Jeremy
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Richard W. Greenwood, PLS
www.greenwoodmap.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190304/e61f9fe3/attachment.html>

From michael.smith.erdc at gmail.com  Mon Mar  4 06:24:08 2019
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Mon, 04 Mar 2019 09:24:08 -0500
Subject: [gdal-dev] GDAL VRT with Cloud Optimized GeoTIFFs and AWS
In-Reply-To: <CAHBySPZLVhdqzJ3sfXLHgyOSS2_-Qpn5V+BVLFDXRtChmcAAYQ@mail.gmail.com>
References: <CAA5WJYmLNxmL-CE_g3e4tnwZkTZJkWe0DD3v8cAuHZEs3bCpiA@mail.gmail.com>
 <CAA5WJYme1=pCWvgu63FT9wOe8HM-OL3xbxmKLsvxKdFdiut0Jw@mail.gmail.com>
 <CAHBySPZLVhdqzJ3sfXLHgyOSS2_-Qpn5V+BVLFDXRtChmcAAYQ@mail.gmail.com>
Message-ID: <8D65489C-0A6D-4805-A0B3-17887BA3636F@gmail.com>

There are multiple advantages to using s3 over ebs. First is availability. S3 is highly available (and replicated). EBS is limited to the single volume and is much more fragile. EBS is also more expensive for storage than S3. And S3 is available to multiple instances, EBS is not, it can only be mounted to one EC2 instance.

 

Mike

 

 

--

Michael Smith

Remote Sensing/GIS Center

US Army Corps of Engineers

 

 

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Richard Greenwood <richard.greenwood at gmail.com>
Date: Monday, March 4, 2019 at 9:21 AM
To: Jeremy Palmer <palmerjnz at gmail.com>
Cc: gdal dev <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] GDAL VRT with Cloud Optimized GeoTIFFs and AWS

 

What are the advantages of storing the imagery in S3 as opposed to EBS? I'm using the throughput optimized magnetic EBS which I is a little less expensive than S3. I did some testing a couple years ago and didn't see enough performance gain to justify SSD. Have you tested S3 against any of the EBS options?

 

Rich

 

 

On Sat, Mar 2, 2019 at 7:58 AM Jeremy Palmer <palmerjnz at gmail.com> wrote:

I've now found this useful Mapserver wiki page https://github.com/mapserver/mapserver/wiki/Render-images-straight-out-of-S3-with-the-vsicurl-driver. It seems to imply that it's better to merge a collection of dataset tiles into a single big Geotiff rather than create a VRT due to the repeated HTTP calls. I'm still interested in people's experiences using imagery direct from S3 and it's performance. 

 

Note some of my largest datasets have a total size of 1.5TBs uncompressed Geotiff with about 8000 tiles @ 175mb per tile. I'll likely compress the uncompressed Geotiffs and use JPEG compression, which I estimate can bring the size down to about 200GB total.

 

Cheers

Jeremy

 

On Sat, Mar 2, 2019 at 9:15 AM Jeremy Palmer <palmerjnz at gmail.com> wrote:

Hi All,

 

Does anyone have any tips or experience in trying to serve RGB large imagery multi file datasets hosted on S3 to application servers/containers for bulk tile rendering? Is this possible using VRTs and is the performance manageable when compared to other mounted storage options? 

 

Thanks,

Jeremy

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev


 

-- 

Richard W. Greenwood, PLS
www.greenwoodmap.com

_______________________________________________ gdal-dev mailing list gdal-dev at lists.osgeo.org https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190304/4edc402d/attachment.html>

From even.rouault at spatialys.com  Mon Mar  4 12:43:30 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 04 Mar 2019 21:43:30 +0100
Subject: [gdal-dev] GDAL VRT with Cloud Optimized GeoTIFFs and AWS
In-Reply-To: <CAA5WJYme1=pCWvgu63FT9wOe8HM-OL3xbxmKLsvxKdFdiut0Jw@mail.gmail.com>
References: <CAA5WJYmLNxmL-CE_g3e4tnwZkTZJkWe0DD3v8cAuHZEs3bCpiA@mail.gmail.com>
 <CAA5WJYme1=pCWvgu63FT9wOe8HM-OL3xbxmKLsvxKdFdiut0Jw@mail.gmail.com>
Message-ID: <3579551.qLjllKlgxh@even-i700>

On dimanche 3 mars 2019 01:58:08 CET Jeremy Palmer wrote:
> I've now found this useful Mapserver wiki page
> https://github.com/mapserver/mapserver/wiki/Render-images-straight-out-of-S3
> -with-the-vsicurl-driver. It seems to imply that it's better to merge a
> collection of dataset tiles into a single big Geotiff rather than create a
> VRT due to the repeated HTTP calls. I'm still interested in people's
> experiences using imagery direct from S3 and it's performance.

Jeremy,

A gigantic TIFF will have rather big TileOffset and TileByteCount arrays, but 
probably less big than a VRT referencing TIFF tiles. If MapServer rendering is 
the final use case, I bet though that a MapServer tileindex (created with 
gdaltindex) referencing /vsis3/ files might be rather convenient & have good 
performance.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From stephenwoodbridge37 at gmail.com  Tue Mar  5 10:25:10 2019
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Tue, 5 Mar 2019 13:25:10 -0500
Subject: [gdal-dev] NOAA satellite swath NetCDF file to georeferenced Gtiff?
Message-ID: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>

Hi All,

Can someone please give me a hint on how to convert a NOAA satellite 
swath NetCDF file to georeferenced Gtiff?
I found these:
   https://trac.osgeo.org/gdal/ticket/4513
   https://trac.osgeo.org/gdal/wiki/rfc4_geolocate
which implies it cannot be done directly with gdal yet.
Is there another way to this maybe using Python if gdal can't handle it?

-Steve W

$ gdalinfo --version
GDAL 1.11.3, released 2015/09/16

$ gdalinfo 
NETCDF:20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc:sea_surface_temperature
Warning 1: dimension #2 (ni) is not a Longitude/X dimension.
Warning 1: dimension #1 (nj) is not a Latitude/Y dimension.
Driver: netCDF/Network Common Data Format
Files: 
20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc
Size is 409, 7200
Coordinate System is `'
Metadata:
   NC_GLOBAL#acknowledgment=Please acknowledge the use of these data 
with the following statement: These data were provided by Group for High 
Resolution Sea Surface Temperature (GHRSST) and the National Oceanic and 
Atmospheric Administration (NOAA).
   NC_GLOBAL#cdm_data_type=swath
   NC_GLOBAL#comment=none
   NC_GLOBAL#Conventions=CF-1.6
   NC_GLOBAL#creator_email=Alex.Ignatov at noaa.gov
   NC_GLOBAL#creator_name=Alex Ignatov
   NC_GLOBAL#creator_url=http://www.star.nesdis.noaa.gov
   NC_GLOBAL#date_created=20190304T214051Z
   NC_GLOBAL#easternmost_longitude=180
   NC_GLOBAL#file_quality_level=3
   NC_GLOBAL#gds_version_id=02.0
   NC_GLOBAL#geospatial_bounds=POLYGON((   3.520  14.209,  176.005 
20.284, -156.649  15.860,  -23.493   9.963,    3.520  14.209))
   NC_GLOBAL#geospatial_first_scanline_first_fov_lat=20.283962
   NC_GLOBAL#geospatial_first_scanline_first_fov_lon=176.00494
   NC_GLOBAL#geospatial_first_scanline_last_fov_lat=15.859998
   NC_GLOBAL#geospatial_first_scanline_last_fov_lon=-156.64908
   NC_GLOBAL#geospatial_last_scanline_first_fov_lat=14.20918
   NC_GLOBAL#geospatial_last_scanline_first_fov_lon=3.5202866
   NC_GLOBAL#geospatial_last_scanline_last_fov_lat=9.9625263
   NC_GLOBAL#geospatial_last_scanline_last_fov_lon=-23.492666
   NC_GLOBAL#geospatial_lat_resolution=0.0098999999
   NC_GLOBAL#geospatial_lat_units=degrees_north
   NC_GLOBAL#geospatial_lon_resolution=0.0098999999
   NC_GLOBAL#geospatial_lon_units=degrees_east
   NC_GLOBAL#history=Created by Advanced Clear-Sky Processor for Oceans 
(ACSPO)-AVHRR at NOAA/NESDIS/OSPO.
   NC_GLOBAL#id=AVHRR18_G-OSPO-L2P-v2.41
   NC_GLOBAL#institution=NOAA/NESDIS/OSPO
   NC_GLOBAL#keywords=Oceans > Ocean Temperature > Sea Surface Temperature
   NC_GLOBAL#keywords_vocabulary=NASA Global Change Master Directory 
(GCMD) Science Keywords
   NC_GLOBAL#license=GHRSST protocol describes data use as free and open
   NC_GLOBAL#Metadata_Conventions=Unidata Dataset Discovery v1.0
NC_GLOBAL#metadata_link=http://podaac.jpl.nasa.gov/ws/metadata/dataset/?format=iso&shortName=AVHRR18_G-OSPO-L2P-v2.41
   NC_GLOBAL#naming_authority=org.ghrsst
   NC_GLOBAL#netcdf_version_id=4.3.2 of Sep 24 2015 08:51:38 $
   NC_GLOBAL#northernmost_latitude=20.283962
   NC_GLOBAL#platform=NOAA-18
   NC_GLOBAL#processing_level=L2P
   NC_GLOBAL#product_version=2.41
   NC_GLOBAL#project=Group for High Resolution Sea Surface Temperature
   NC_GLOBAL#publisher_email=ghrsst-po at nceo.ac.uk
   NC_GLOBAL#publisher_name=The GHRSST Project Office
   NC_GLOBAL#publisher_url=http://www.ghrsst.org
   NC_GLOBAL#references=Data convention: GHRSST Data Specification (GDS) 
v2.0. Algorithms: ACSPO-AVHRR ATBD (NOAA/NESDIS/STAR)
   NC_GLOBAL#sensor=AVHRR_GAC
NC_GLOBAL#source=AVHRR_L1b,CMC0.2deg-CMC-L4-GLOB-v2.0,NOAA-NCEP-GFS
   NC_GLOBAL#southernmost_latitude=-90
   NC_GLOBAL#spatial_resolution=1.1 km at nadir
   NC_GLOBAL#standard_name_vocabulary=CF Standard Name Table (v26, 08 
November 2013)
   NC_GLOBAL#start_time=20190304T200000Z
   NC_GLOBAL#stop_time=20190304T205959Z
   NC_GLOBAL#summary=Sea surface temperature retrievals produced by 
NOAA/NESDIS/OSPO office from AVHRR sensor
   NC_GLOBAL#time_coverage_end=20190304T205959Z
   NC_GLOBAL#time_coverage_start=20190304T200000Z
   NC_GLOBAL#title=AVHRR L2P SST
   NC_GLOBAL#uuid=2eaa373c-3ec6-11e9-ac15-f9642917379f
   NC_GLOBAL#westernmost_longitude=-180
   NETCDF_DIM_EXTRA={time}
   NETCDF_DIM_time_DEF={1,4}
   NETCDF_DIM_time_VALUES=1204574400
   sea_surface_temperature#_FillValue=-32768
   sea_surface_temperature#add_offset=273.14999
   sea_surface_temperature#comment=SST obtained by regression with buoy 
measurements
   sea_surface_temperature#coordinates=lon lat
   sea_surface_temperature#long_name=sea surface skin temperature
   sea_surface_temperature#scale_factor=0.0099999998
   sea_surface_temperature#source=NOAA
sea_surface_temperature#standard_name=sea_surface_skin_temperature
   sea_surface_temperature#units=kelvin
   sea_surface_temperature#valid_max=32767
   sea_surface_temperature#valid_min=-32767
   time#axis=T
   time#calendar=Gregorian
   time#comment=seconds since 1981-01-01 00:00:00
   time#long_name=reference time of sst file
   time#standard_name=time
   time#units=seconds since 1981-01-01 00:00:00
Geolocation:
   LINE_OFFSET=0
   LINE_STEP=1
   PIXEL_OFFSET=0
   PIXEL_STEP=1
   SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9108"]],AUTHORITY["EPSG","4326"]]
   X_BAND=1
X_DATASET=NETCDF:"20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc":lon
   Y_BAND=1
Y_DATASET=NETCDF:"20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc":lat
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0, 7200.0)
Upper Right (  409.0,    0.0)
Lower Right (  409.0, 7200.0)
Center      (  204.5, 3600.0)
Band 1 Block=409x1024 Type=Int16, ColorInterp=Undefined
   NoData Value=-32768
   Offset: 273.149993896484,   Scale:0.00999999977648258
   Metadata:
     _FillValue=-32768
     add_offset=273.14999
     comment=SST obtained by regression with buoy measurements
     coordinates=lon lat
     long_name=sea surface skin temperature
     NETCDF_DIM_time=1204574400
     NETCDF_VARNAME=sea_surface_temperature
     scale_factor=0.0099999998
     source=NOAA
     standard_name=sea_surface_skin_temperature
     units=kelvin
     valid_max=32767
     valid_min=-32767


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From chris.marsh at usask.ca  Tue Mar  5 11:08:38 2019
From: chris.marsh at usask.ca (Marsh, Chris)
Date: Tue, 5 Mar 2019 19:08:38 +0000
Subject: [gdal-dev] NOAA satellite swath NetCDF file to georeferenced
 Gtiff?
In-Reply-To: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>
References: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>
Message-ID: <CAFgDerH68cDRZ8iU=kDdWm-+z271xRB6x9PRdk7rpDuXFkbKuw@mail.gmail.com>

You could use xarray to load the netcdf, and then write that data out to geotiff via rasterio. Full automation of this looks like it's still coming, but this ticket response shows how to do it. Might require assigning a crs to it manually, you'll have to play around with it.
https://github.com/pydata/xarray/issues/2042#issuecomment-457584997

Cheers
Chris

On Tue, Mar 5, 2019 at 12:25 PM Stephen Woodbridge <stephenwoodbridge37 at gmail.com<mailto:stephenwoodbridge37 at gmail.com>> wrote:
Hi All,

Can someone please give me a hint on how to convert a NOAA satellite
swath NetCDF file to georeferenced Gtiff?
I found these:
   https://trac.osgeo.org/gdal/ticket/4513
   https://trac.osgeo.org/gdal/wiki/rfc4_geolocate
which implies it cannot be done directly with gdal yet.
Is there another way to this maybe using Python if gdal can't handle it?

-Steve W

$ gdalinfo --version
GDAL 1.11.3, released 2015/09/16

$ gdalinfo
NETCDF:20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc<http://G-ACSPO_V2.41-v02.0-fv01.0.nc>:sea_surface_temperature
Warning 1: dimension #2 (ni) is not a Longitude/X dimension.
Warning 1: dimension #1 (nj) is not a Latitude/Y dimension.
Driver: netCDF/Network Common Data Format
Files:
20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc<http://20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc>
Size is 409, 7200
Coordinate System is `'
Metadata:
   NC_GLOBAL#acknowledgment=Please acknowledge the use of these data
with the following statement: These data were provided by Group for High
Resolution Sea Surface Temperature (GHRSST) and the National Oceanic and
Atmospheric Administration (NOAA).
   NC_GLOBAL#cdm_data_type=swath
   NC_GLOBAL#comment=none
   NC_GLOBAL#Conventions=CF-1.6
   NC_GLOBAL#creator_email=Alex.Ignatov at noaa.gov<mailto:Alex.Ignatov at noaa.gov>
   NC_GLOBAL#creator_name=Alex Ignatov
   NC_GLOBAL#creator_url=http://www.star.nesdis.noaa.gov
   NC_GLOBAL#date_created=20190304T214051Z
   NC_GLOBAL#easternmost_longitude=180
   NC_GLOBAL#file_quality_level=3
   NC_GLOBAL#gds_version_id=02.0
   NC_GLOBAL#geospatial_bounds=POLYGON((   3.520  14.209,  176.005
20.284, -156.649  15.860,  -23.493   9.963,    3.520  14.209))
   NC_GLOBAL#geospatial_first_scanline_first_fov_lat=20.283962
   NC_GLOBAL#geospatial_first_scanline_first_fov_lon=176.00494
   NC_GLOBAL#geospatial_first_scanline_last_fov_lat=15.859998
   NC_GLOBAL#geospatial_first_scanline_last_fov_lon=-156.64908
   NC_GLOBAL#geospatial_last_scanline_first_fov_lat=14.20918
   NC_GLOBAL#geospatial_last_scanline_first_fov_lon=3.5202866
   NC_GLOBAL#geospatial_last_scanline_last_fov_lat=9.9625263
   NC_GLOBAL#geospatial_last_scanline_last_fov_lon=-23.492666
   NC_GLOBAL#geospatial_lat_resolution=0.0098999999
   NC_GLOBAL#geospatial_lat_units=degrees_north
   NC_GLOBAL#geospatial_lon_resolution=0.0098999999
   NC_GLOBAL#geospatial_lon_units=degrees_east
   NC_GLOBAL#history=Created by Advanced Clear-Sky Processor for Oceans
(ACSPO)-AVHRR at NOAA/NESDIS/OSPO.
   NC_GLOBAL#id=AVHRR18_G-OSPO-L2P-v2.41
   NC_GLOBAL#institution=NOAA/NESDIS/OSPO
   NC_GLOBAL#keywords=Oceans > Ocean Temperature > Sea Surface Temperature
   NC_GLOBAL#keywords_vocabulary=NASA Global Change Master Directory
(GCMD) Science Keywords
   NC_GLOBAL#license=GHRSST protocol describes data use as free and open
   NC_GLOBAL#Metadata_Conventions=Unidata Dataset Discovery v1.0
NC_GLOBAL#metadata_link=http://podaac.jpl.nasa.gov/ws/metadata/dataset/?format=iso&shortName=AVHRR18_G-OSPO-L2P-v2.41
   NC_GLOBAL#naming_authority=org.ghrsst
   NC_GLOBAL#netcdf_version_id=4.3.2 of Sep 24 2015 08:51:38 $
   NC_GLOBAL#northernmost_latitude=20.283962
   NC_GLOBAL#platform=NOAA-18
   NC_GLOBAL#processing_level=L2P
   NC_GLOBAL#product_version=2.41
   NC_GLOBAL#project=Group for High Resolution Sea Surface Temperature
   NC_GLOBAL#publisher_email=ghrsst-po at nceo.ac.uk<mailto:ghrsst-po at nceo.ac.uk>
   NC_GLOBAL#publisher_name=The GHRSST Project Office
   NC_GLOBAL#publisher_url=http://www.ghrsst.org
   NC_GLOBAL#references=Data convention: GHRSST Data Specification (GDS)
v2.0. Algorithms: ACSPO-AVHRR ATBD (NOAA/NESDIS/STAR)
   NC_GLOBAL#sensor=AVHRR_GAC
NC_GLOBAL#source=AVHRR_L1b,CMC0.2deg-CMC-L4-GLOB-v2.0,NOAA-NCEP-GFS
   NC_GLOBAL#southernmost_latitude=-90
   NC_GLOBAL#spatial_resolution=1.1 km at nadir
   NC_GLOBAL#standard_name_vocabulary=CF Standard Name Table (v26, 08
November 2013)
   NC_GLOBAL#start_time=20190304T200000Z
   NC_GLOBAL#stop_time=20190304T205959Z
   NC_GLOBAL#summary=Sea surface temperature retrievals produced by
NOAA/NESDIS/OSPO office from AVHRR sensor
   NC_GLOBAL#time_coverage_end=20190304T205959Z
   NC_GLOBAL#time_coverage_start=20190304T200000Z
   NC_GLOBAL#title=AVHRR L2P SST
   NC_GLOBAL#uuid=2eaa373c-3ec6-11e9-ac15-f9642917379f
   NC_GLOBAL#westernmost_longitude=-180
   NETCDF_DIM_EXTRA={time}
   NETCDF_DIM_time_DEF={1,4}
   NETCDF_DIM_time_VALUES=1204574400
   sea_surface_temperature#_FillValue=-32768
   sea_surface_temperature#add_offset=273.14999
   sea_surface_temperature#comment=SST obtained by regression with buoy
measurements
   sea_surface_temperature#coordinates=lon lat
   sea_surface_temperature#long_name=sea surface skin temperature
   sea_surface_temperature#scale_factor=0.0099999998
   sea_surface_temperature#source=NOAA
sea_surface_temperature#standard_name=sea_surface_skin_temperature
   sea_surface_temperature#units=kelvin
   sea_surface_temperature#valid_max=32767
   sea_surface_temperature#valid_min=-32767
   time#axis=T
   time#calendar=Gregorian
   time#comment=seconds since 1981-01-01 00:00:00
   time#long_name=reference time of sst file
   time#standard_name=time
   time#units=seconds since 1981-01-01 00:00:00
Geolocation:
   LINE_OFFSET=0
   LINE_STEP=1
   PIXEL_OFFSET=0
   PIXEL_STEP=1
   SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9108"]],AUTHORITY["EPSG","4326"]]
   X_BAND=1
X_DATASET=NETCDF:"20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc<http://20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc>":lon
   Y_BAND=1
Y_DATASET=NETCDF:"20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc<http://20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc>":lat
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0, 7200.0)
Upper Right (  409.0,    0.0)
Lower Right (  409.0, 7200.0)
Center      (  204.5, 3600.0)
Band 1 Block=409x1024 Type=Int16, ColorInterp=Undefined
   NoData Value=-32768
   Offset: 273.149993896484,   Scale:0.00999999977648258
   Metadata:
     _FillValue=-32768
     add_offset=273.14999
     comment=SST obtained by regression with buoy measurements
     coordinates=lon lat
     long_name=sea surface skin temperature
     NETCDF_DIM_time=1204574400
     NETCDF_VARNAME=sea_surface_temperature
     scale_factor=0.0099999998
     source=NOAA
     standard_name=sea_surface_skin_temperature
     units=kelvin
     valid_max=32767
     valid_min=-32767


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190305/fbfe2e99/attachment-0001.html>

From jluis at ualg.pt  Tue Mar  5 11:13:30 2019
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Tue, 5 Mar 2019 19:13:30 +0000
Subject: [gdal-dev] NOAA satellite swath NetCDF file to georeferenced
 Gtiff?
In-Reply-To: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>
References: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>
Message-ID: <DB7PR04MB4316FDB8D7E352080594EEFDA6720@DB7PR04MB4316.eurprd04.prod.outlook.com>

I think you want to do something like this
https://github.com/GenericMappingTools/GMT.jl/blob/master/WL_Example_III.ipynb
It's done with Julia+GMT (and GDAL under the hood)

Joaquim

|>-----Original Message-----
|>From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Stephen
|>Woodbridge
|>Sent: Tuesday, March 5, 2019 6:25 PM
|>To: Gdal-Dev <gdal-dev at lists.osgeo.org>
|>Subject: [gdal-dev] NOAA satellite swath NetCDF file to georeferenced Gtiff?
|>
|>Hi All,
|>
|>Can someone please give me a hint on how to convert a NOAA satellite swath
|>NetCDF file to georeferenced Gtiff?
|>I found these:
|>   https://trac.osgeo.org/gdal/ticket/4513
|>   https://trac.osgeo.org/gdal/wiki/rfc4_geolocate
|>which implies it cannot be done directly with gdal yet.
|>Is there another way to this maybe using Python if gdal can't handle it?
|>
|>-Steve W
|>
|>$ gdalinfo --version
|>GDAL 1.11.3, released 2015/09/16
|>
|>$ gdalinfo
|>NETCDF:20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-
|>ACSPO_V2.41-v02.0-fv01.0.nc:sea_surface_temperature
|>Warning 1: dimension #2 (ni) is not a Longitude/X dimension.
|>Warning 1: dimension #1 (nj) is not a Latitude/Y dimension.
|>Driver: netCDF/Network Common Data Format
|>Files:
|>20190304200000-OSPO-L2P_GHRSST-SSTsubskin-AVHRR18_G-ACSPO_V2.41-
|>v02.0-fv01.0.nc
|>Size is 409, 7200
|>Coordinate System is `'
|>Metadata:
|>   NC_GLOBAL#acknowledgment=Please acknowledge the use of these data
|>with the following statement: These data were provided by Group for High
|>Resolution Sea Surface Temperature (GHRSST) and the National Oceanic and
|>Atmospheric Administration (NOAA).
|>   NC_GLOBAL#cdm_data_type=swath
|>   NC_GLOBAL#comment=none
|>   NC_GLOBAL#Conventions=CF-1.6
|>   NC_GLOBAL#creator_email=Alex.Ignatov at noaa.gov
|>   NC_GLOBAL#creator_name=Alex Ignatov
|>   NC_GLOBAL#creator_url=http://www.star.nesdis.noaa.gov
|>   NC_GLOBAL#date_created=20190304T214051Z
|>   NC_GLOBAL#easternmost_longitude=180
|>   NC_GLOBAL#file_quality_level=3
|>   NC_GLOBAL#gds_version_id=02.0
|>   NC_GLOBAL#geospatial_bounds=POLYGON((   3.520  14.209,  176.005
|>20.284, -156.649  15.860,  -23.493   9.963,    3.520  14.209))
|>   NC_GLOBAL#geospatial_first_scanline_first_fov_lat=20.283962
|>   NC_GLOBAL#geospatial_first_scanline_first_fov_lon=176.00494
|>   NC_GLOBAL#geospatial_first_scanline_last_fov_lat=15.859998
|>   NC_GLOBAL#geospatial_first_scanline_last_fov_lon=-156.64908
|>   NC_GLOBAL#geospatial_last_scanline_first_fov_lat=14.20918
|>   NC_GLOBAL#geospatial_last_scanline_first_fov_lon=3.5202866
|>   NC_GLOBAL#geospatial_last_scanline_last_fov_lat=9.9625263
|>   NC_GLOBAL#geospatial_last_scanline_last_fov_lon=-23.492666
|>   NC_GLOBAL#geospatial_lat_resolution=0.0098999999
|>   NC_GLOBAL#geospatial_lat_units=degrees_north
|>   NC_GLOBAL#geospatial_lon_resolution=0.0098999999
|>   NC_GLOBAL#geospatial_lon_units=degrees_east
|>   NC_GLOBAL#history=Created by Advanced Clear-Sky Processor for Oceans
|>(ACSPO)-AVHRR at NOAA/NESDIS/OSPO.
|>   NC_GLOBAL#id=AVHRR18_G-OSPO-L2P-v2.41
|>   NC_GLOBAL#institution=NOAA/NESDIS/OSPO
|>   NC_GLOBAL#keywords=Oceans > Ocean Temperature > Sea Surface
|>Temperature
|>   NC_GLOBAL#keywords_vocabulary=NASA Global Change Master Directory
|>(GCMD) Science Keywords
|>   NC_GLOBAL#license=GHRSST protocol describes data use as free and open
|>   NC_GLOBAL#Metadata_Conventions=Unidata Dataset Discovery v1.0
|>NC_GLOBAL#metadata_link=http://podaac.jpl.nasa.gov/ws/metadata/dataset/
|>?format=iso&shortName=AVHRR18_G-OSPO-L2P-v2.41
|>   NC_GLOBAL#naming_authority=org.ghrsst
|>   NC_GLOBAL#netcdf_version_id=4.3.2 of Sep 24 2015 08:51:38 $
|>   NC_GLOBAL#northernmost_latitude=20.283962
|>   NC_GLOBAL#platform=NOAA-18
|>   NC_GLOBAL#processing_level=L2P
|>   NC_GLOBAL#product_version=2.41
|>   NC_GLOBAL#project=Group for High Resolution Sea Surface Temperature
|>   NC_GLOBAL#publisher_email=ghrsst-po at nceo.ac.uk
|>   NC_GLOBAL#publisher_name=The GHRSST Project Office
|>   NC_GLOBAL#publisher_url=http://www.ghrsst.org
|>   NC_GLOBAL#references=Data convention: GHRSST Data Specification (GDS)
|>v2.0. Algorithms: ACSPO-AVHRR ATBD (NOAA/NESDIS/STAR)
|>   NC_GLOBAL#sensor=AVHRR_GAC
|>NC_GLOBAL#source=AVHRR_L1b,CMC0.2deg-CMC-L4-GLOB-v2.0,NOAA-NCEP-
|>GFS
|>   NC_GLOBAL#southernmost_latitude=-90
|>   NC_GLOBAL#spatial_resolution=1.1 km at nadir
|>   NC_GLOBAL#standard_name_vocabulary=CF Standard Name Table (v26, 08
|>November 2013)
|>   NC_GLOBAL#start_time=20190304T200000Z
|>   NC_GLOBAL#stop_time=20190304T205959Z
|>   NC_GLOBAL#summary=Sea surface temperature retrievals produced by
|>NOAA/NESDIS/OSPO office from AVHRR sensor
|>   NC_GLOBAL#time_coverage_end=20190304T205959Z
|>   NC_GLOBAL#time_coverage_start=20190304T200000Z
|>   NC_GLOBAL#title=AVHRR L2P SST
|>   NC_GLOBAL#uuid=2eaa373c-3ec6-11e9-ac15-f9642917379f
|>   NC_GLOBAL#westernmost_longitude=-180
|>   NETCDF_DIM_EXTRA={time}
|>   NETCDF_DIM_time_DEF={1,4}
|>   NETCDF_DIM_time_VALUES=1204574400
|>   sea_surface_temperature#_FillValue=-32768
|>   sea_surface_temperature#add_offset=273.14999
|>   sea_surface_temperature#comment=SST obtained by regression with buoy
|>measurements
|>   sea_surface_temperature#coordinates=lon lat
|>   sea_surface_temperature#long_name=sea surface skin temperature
|>   sea_surface_temperature#scale_factor=0.0099999998
|>   sea_surface_temperature#source=NOAA
|>sea_surface_temperature#standard_name=sea_surface_skin_temperature
|>   sea_surface_temperature#units=kelvin
|>   sea_surface_temperature#valid_max=32767
|>   sea_surface_temperature#valid_min=-32767
|>   time#axis=T
|>   time#calendar=Gregorian
|>   time#comment=seconds since 1981-01-01 00:00:00
|>   time#long_name=reference time of sst file
|>   time#standard_name=time
|>   time#units=seconds since 1981-01-01 00:00:00
|>Geolocation:
|>   LINE_OFFSET=0
|>   LINE_STEP=1
|>   PIXEL_OFFSET=0
|>   PIXEL_STEP=1
|>   SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
|>84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],TOWGS84[0,0,0,0,0
|>,0,0],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG",
|>"8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9108"]],A
|>UTHORITY["EPSG","4326"]]
|>   X_BAND=1
|>X_DATASET=NETCDF:"20190304200000-OSPO-L2P_GHRSST-SSTsubskin-
|>AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc":lon
|>   Y_BAND=1
|>Y_DATASET=NETCDF:"20190304200000-OSPO-L2P_GHRSST-SSTsubskin-
|>AVHRR18_G-ACSPO_V2.41-v02.0-fv01.0.nc":lat
|>Corner Coordinates:
|>Upper Left  (    0.0,    0.0)
|>Lower Left  (    0.0, 7200.0)
|>Upper Right (  409.0,    0.0)
|>Lower Right (  409.0, 7200.0)
|>Center      (  204.5, 3600.0)
|>Band 1 Block=409x1024 Type=Int16, ColorInterp=Undefined
|>   NoData Value=-32768
|>   Offset: 273.149993896484,   Scale:0.00999999977648258
|>   Metadata:
|>     _FillValue=-32768
|>     add_offset=273.14999
|>     comment=SST obtained by regression with buoy measurements
|>     coordinates=lon lat
|>     long_name=sea surface skin temperature
|>     NETCDF_DIM_time=1204574400
|>     NETCDF_VARNAME=sea_surface_temperature
|>     scale_factor=0.0099999998
|>     source=NOAA
|>     standard_name=sea_surface_skin_temperature
|>     units=kelvin
|>     valid_max=32767
|>     valid_min=-32767
|>
|>
|>---
|>This email has been checked for viruses by Avast antivirus software.
|>https://www.avast.com/antivirus
|>
|>_______________________________________________
|>gdal-dev mailing list
|>gdal-dev at lists.osgeo.org
|>https://lists.osgeo.org/mailman/listinfo/gdal-dev

From kassies at gmail.com  Wed Mar  6 01:01:57 2019
From: kassies at gmail.com (Rutger)
Date: Wed, 6 Mar 2019 02:01:57 -0700 (MST)
Subject: [gdal-dev] NOAA satellite swath NetCDF file to georeferenced
 Gtiff?
In-Reply-To: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>
References: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>
Message-ID: <1551862917643-0.post@n6.nabble.com>

Hey,

For as far as i know, the geolocation with GDAL only works for regular
(rectilinear?) grids. Swaths of scanning sensors (like MODIS/VIIRS etc) are
often irregular because of the bow-tie or other effects.

Have a look at Satpy or Pyresample (which Satpy uses) to handle those more
complex cases. It supports a lot of sensors out of the box, but it's also
quite easy to make a custom reader if you have to:

https://satpy.readthedocs.io/en/latest/#id1
<https://satpy.readthedocs.io/en/latest/#id1>  


Regards,
Rutger




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Wed Mar  6 03:38:50 2019
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 6 Mar 2019 11:38:50 +0000
Subject: [gdal-dev] Documentation of
Message-ID: <c158c513250149ab8f2b1a52129c78e1@C119S212VM042.msvyvi.vaha.local>

Hi,

In the documentation of GDAL config options I noticed this:
GDAL_SWATH_SIZE
Defaults to 10000000 (10 MB). Used by gcore/rasterio.cpp
Size of the swath when copying raster data from one dataset to another one (in bytes). Should not be smaller than GDAL_CACHEMAX

Should it be "...not be bigger than GDAL_CACHEMAX"? Lay man thinking and the comment in ticket https://trac.osgeo.org/gdal/ticket/2195 makes me think so.
"There's a configuration option for it, GDAL_SWATH_SIZE, and now it's 1/4 of the GDAL_CACHEMAX (still defaulting to 10 MB is GDAL_CACHEMAX let to its default value)"


-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190306/7aa986d7/attachment.html>

From neteler at osgeo.org  Wed Mar  6 05:32:59 2019
From: neteler at osgeo.org (Markus Neteler)
Date: Wed, 6 Mar 2019 14:32:59 +0100
Subject: [gdal-dev] NOAA satellite swath NetCDF file to georeferenced
	Gtiff?
In-Reply-To: <1551862917643-0.post@n6.nabble.com>
References: <505b1519-b7ee-4661-c904-e915b8fece7c@gmail.com>
 <1551862917643-0.post@n6.nabble.com>
Message-ID: <CALFmHhttryL53yVKOM5dP9Qd9kVD1ey3Ze5=3mJotn92=Pp9Ag@mail.gmail.com>

Hi,

maybe Pytroll could also be of interest.
See e.g.
https://pytroll.readthedocs.io/en/latest/quickstart_avhrr.html
https://pytroll.readthedocs.io/en/latest/quickstart_viirs.html

Markus


On Wed, Mar 6, 2019 at 10:02 AM Rutger <kassies at gmail.com> wrote:
>
> Hey,
>
> For as far as i know, the geolocation with GDAL only works for regular
> (rectilinear?) grids. Swaths of scanning sensors (like MODIS/VIIRS etc)
are
> often irregular because of the bow-tie or other effects.
>
> Have a look at Satpy or Pyresample (which Satpy uses) to handle those more
> complex cases. It supports a lot of sensors out of the box, but it's also
> quite easy to make a custom reader if you have to:
>
> https://satpy.readthedocs.io/en/latest/#id1
> <https://satpy.readthedocs.io/en/latest/#id1>
>
>
> Regards,
> Rutger
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190306/686c567a/attachment.html>

From even.rouault at spatialys.com  Wed Mar  6 12:47:12 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 06 Mar 2019 21:47:12 +0100
Subject: [gdal-dev] Documentation of
In-Reply-To: <c158c513250149ab8f2b1a52129c78e1@C119S212VM042.msvyvi.vaha.local>
References: <c158c513250149ab8f2b1a52129c78e1@C119S212VM042.msvyvi.vaha.local>
Message-ID: <3065089.zxKdW3PE2X@even-i700>

On mercredi 6 mars 2019 11:38:50 CET Rahkonen Jukka (MML) wrote:
> Hi,
> 
> In the documentation of GDAL config options I noticed this:
> GDAL_SWATH_SIZE
> Defaults to 10000000 (10 MB). Used by gcore/rasterio.cpp
> Size of the swath when copying raster data from one dataset to another one
> (in bytes). Should not be smaller than GDAL_CACHEMAX

Actually there is no direct connection between both. There is just no sense in 
making GDAL_SWATH_SIZE larger than the size of the uncompressed dataset.

> 
> Should it be "...not be bigger than GDAL_CACHEMAX"? Lay man thinking and the
> comment in ticket https://trac.osgeo.org/gdal/ticket/2195 makes me think
> so. "There's a configuration option for it, GDAL_SWATH_SIZE, and now it's
> 1/4 of the GDAL_CACHEMAX (still defaulting to 10 MB is GDAL_CACHEMAX let to
> its default value)"
> 
> 
> -Jukka Rahkonen-


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lhomme.xavier at gmail.com  Wed Mar  6 12:55:55 2019
From: lhomme.xavier at gmail.com (xavier lhomme)
Date: Wed, 6 Mar 2019 21:55:55 +0100
Subject: [gdal-dev]  ArcGIS and GDAL
In-Reply-To: <3065089.zxKdW3PE2X@even-i700>
References: <c158c513250149ab8f2b1a52129c78e1@C119S212VM042.msvyvi.vaha.local>
 <3065089.zxKdW3PE2X@even-i700>
Message-ID: <CACqzBMxZDs9WZH25LLu79bzTuNAsSyJhXQ=_aUcd3E1NYMcOzQ@mail.gmail.com>

Hi

At the ESRI DevSummit 2019, ESRI demonstrated how it's possible to use GDAL
with ArcGIS Pro using python  :

https://www.youtube.com/watch?v=FXlokt6mCkA&list=PLaPDDLTCmy4Y3e8AkFYr9n-njdf2fAbS4&index=26

best regards
xl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190306/0b5cb477/attachment.html>

From mickhowe292 at gmail.com  Wed Mar  6 17:09:39 2019
From: mickhowe292 at gmail.com (mick howe)
Date: Thu, 7 Mar 2019 01:09:39 +0000
Subject: [gdal-dev] convert india-latest.osm to india-latest.tab
Message-ID: <CAFcrWXiDfJzGK2BrGiBMkP-LJfbzW2UChQM2vZ=w7B6FnT0UBA@mail.gmail.com>

Been struggling with this for a month with this. I'm trying to convert an
open street map to MapInfo, dropping some fields as I go, if possible.

I believe ogr2ogr is the appropriate tool and can see what looks like part
of what I want in https://gdal.org/1.11/ogr2ogr.html but it is too spartan
for me too find the complete answer there.

Is there some fuller documentation I haven't found or someone willing to
guide me through this process

mick in glen innes
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190307/66e6bf16/attachment.html>

From mickhowe292 at gmail.com  Wed Mar  6 19:55:01 2019
From: mickhowe292 at gmail.com (mick howe)
Date: Thu, 7 Mar 2019 03:55:01 +0000
Subject: [gdal-dev] convert india-latest.osm to india-latest.tab
In-Reply-To: <CAFcrWXiDfJzGK2BrGiBMkP-LJfbzW2UChQM2vZ=w7B6FnT0UBA@mail.gmail.com>
References: <CAFcrWXiDfJzGK2BrGiBMkP-LJfbzW2UChQM2vZ=w7B6FnT0UBA@mail.gmail.com>
Message-ID: <CAFcrWXjfBEgbkzepk+YPv8p9_SPq42Rcb=uxQfCkN=jnzcL_Ng@mail.gmail.com>

been experimenting and worked this much out
*[mick at cave OSMIndia]$ ogr2ogr -f "MapInfo File" -skipfailures -progress
bhutan.tab bhutan-latest.osm.pbf*
*0...10...20...30...40...50...60...70...80...90...100 - done.*
ERROR 1: Layer 'lines' does not already exist in the output dataset, and
cannot be created by the output driver.
ERROR 1: Layer 'multilinestrings' does not already exist in the output
dataset, and cannot be created by the output driver.
ERROR 1: Layer 'multipolygons' does not already exist in the output
dataset, and cannot be created by the output driver.
ERROR 1: Layer 'other_relations' does not already exist in the output
dataset, and cannot be created by the output driver.
*[mick at cave OSMIndia]$ *
from this I got some points but nothing

mick in glen innes


On Thu, 7 Mar 2019 at 01:09, mick howe <mickhowe292 at gmail.com> wrote:

> Been struggling with this for a month with this. I'm trying to convert an
> open street map to MapInfo, dropping some fields as I go, if possible.
>
> I believe ogr2ogr is the appropriate tool and can see what looks like part
> of what I want in https://gdal.org/1.11/ogr2ogr.html but it is too
> spartan for me too find the complete answer there.
>
> Is there some fuller documentation I haven't found or someone willing to
> guide me through this process
>
> mick in glen innes
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190307/7847f172/attachment.html>

From sankin619 at gmail.com  Wed Mar  6 21:12:40 2019
From: sankin619 at gmail.com (san619)
Date: Wed, 6 Mar 2019 22:12:40 -0700 (MST)
Subject: [gdal-dev] SQL Anywhere Driver in gdal.
Message-ID: <1551935560759-0.post@n6.nabble.com>

Unable to find the sql anywhere driver in gdal. What could be the reason,
where can i download that driver.Where can i get some knowledge about that
driver.*Is there any way to connect to SAP HANA with gdal*.



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From Jon.Morris at jbarisk.com  Thu Mar  7 03:39:25 2019
From: Jon.Morris at jbarisk.com (Jon Morris)
Date: Thu, 7 Mar 2019 11:39:25 +0000
Subject: [gdal-dev] Intermittent raster read/write error
Message-ID: <LO2P123MB1935F080C80288A2400E693A824C0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>

Hello all,

I've had an intermittent error with reading and writing rasters and wondered if anyone else had seen something similar.

Tl;dr:
When writing tiles of data to a raster, sometimes one write will cause subsequent reads of that region to fail. This includes when reading the whole raster at once with ReadAsArray().

Background:
We have a python toolkit that uses GDAL functions on a range of GIS data, supported on both Windows and Linux. Raster processing is tiled, usually in blocks of 256 pixels. Our raster merge tool usually opens the files as a vrt then processes one block at a time. This is really inefficient when merging hundreds of files at once, as it requires a multi-dimensional numpy array. For this scenario, we calculate the total extent of the input rasters, create a blank output raster, then merge the input files with this raster one-by-one.

The problem:
Sometimes the write operation fails in some way, so that the next read fails. I've tried reading one of these bad rasters and it turned out there was just one bad tile, i.e. ds.ReadAsArray(xoff,yoff,xsize,ysize) works if you request some data that does not include the bad region. When I wrote nodata values to this one tile, the whole raster could be read again.

I've seen this happen for different datasets on different platforms but it is hard to reproduce the error exactly. If you leave out one of the input files, or change the output extent slightly, the problem does not occur. I'm suspecting it's a floating point rounding error, but can't really tell.

I'm still trying to track down the cause really, but I just wondered if this sounded familiar to anyone and/or if there were any solutions.

Thanks,

Jon


Jon Morris
Software Developer

Skype<sip:jon.morris at jbarisk.com>


T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png] <https://www.linkedin.com/in/jon-morris-a2897b4/>  [Follow us on Twitter] <https://twitter.com/jbarisk>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190307/855f4814/attachment-0001.html>

From andre+joost at nurfuerspam.de  Thu Mar  7 03:52:58 2019
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Thu, 07 Mar 2019 12:52:58 +0100
Subject: [gdal-dev] convert india-latest.osm to india-latest.tab
In-Reply-To: <CAFcrWXjfBEgbkzepk+YPv8p9_SPq42Rcb=uxQfCkN=jnzcL_Ng@mail.gmail.com>
References: <CAFcrWXiDfJzGK2BrGiBMkP-LJfbzW2UChQM2vZ=w7B6FnT0UBA@mail.gmail.com>
 <CAFcrWXjfBEgbkzepk+YPv8p9_SPq42Rcb=uxQfCkN=jnzcL_Ng@mail.gmail.com>
Message-ID: <q5r0ri$1eac$1@blaine.gmane.org>

Am 07.03.19 um 04:55 schrieb mick howe:
> been experimenting and worked this much out
> *[mick at cave OSMIndia]$ ogr2ogr -f "MapInfo File" -skipfailures -progress
> bhutan.tab bhutan-latest.osm.pbf*
> *0...10...20...30...40...50...60...70...80...90...100 - done.*
> ERROR 1: Layer 'lines' does not already exist in the output dataset, and
> cannot be created by the output driver.

Looks like a limitation of the OGR MapInfo driver. Are you bound to use 
that format? I guess Mapinfo can handle others as well.

HTH,
Andre Joost



From jukka.rahkonen at maanmittauslaitos.fi  Thu Mar  7 05:54:23 2019
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 7 Mar 2019 06:54:23 -0700 (MST)
Subject: [gdal-dev] convert india-latest.osm to india-latest.tab
In-Reply-To: <CAFcrWXjfBEgbkzepk+YPv8p9_SPq42Rcb=uxQfCkN=jnzcL_Ng@mail.gmail.com>
References: <CAFcrWXiDfJzGK2BrGiBMkP-LJfbzW2UChQM2vZ=w7B6FnT0UBA@mail.gmail.com>
 <CAFcrWXjfBEgbkzepk+YPv8p9_SPq42Rcb=uxQfCkN=jnzcL_Ng@mail.gmail.com>
Message-ID: <1551966863962-0.post@n6.nabble.com>

Hi,

MapInfo driver can write only one layer into one tab. However, it can write
several layers as separate tab files into a directory as documented in
https://www.gdal.org/drv_mitab.html.

Write your command as

ogr2ogr -f "MapInfo File" -skipfailures -progress bhutan
bhutan-latest.osm.pbf

and you will get a directory with MapInfo files
lines.tab
multilinestrings.tab
multipolygons.tab
other_relations.tab
points.tab


-Jukka Rahkonen-

mick howe-2 wrote
> been experimenting and worked this much out
> *[mick at cave OSMIndia]$ ogr2ogr -f "MapInfo File" -skipfailures -progress
> bhutan.tab bhutan-latest.osm.pbf*
> *0...10...20...30...40...50...60...70...80...90...100 - done.*
> ERROR 1: Layer 'lines' does not already exist in the output dataset, and
> cannot be created by the output driver.
> ERROR 1: Layer 'multilinestrings' does not already exist in the output
> dataset, and cannot be created by the output driver.
> ERROR 1: Layer 'multipolygons' does not already exist in the output
> dataset, and cannot be created by the output driver.
> ERROR 1: Layer 'other_relations' does not already exist in the output
> dataset, and cannot be created by the output driver.
> *[mick at cave OSMIndia]$ *
> from this I got some points but nothing
> 
> mick in glen innes
> 
> 
> On Thu, 7 Mar 2019 at 01:09, mick howe &lt;

> mickhowe292@

> &gt; wrote:
> 
>> Been struggling with this for a month with this. I'm trying to convert an
>> open street map to MapInfo, dropping some fields as I go, if possible.
>>
>> I believe ogr2ogr is the appropriate tool and can see what looks like
>> part
>> of what I want in https://gdal.org/1.11/ogr2ogr.html but it is too
>> spartan for me too find the complete answer there.
>>
>> Is there some fuller documentation I haven't found or someone willing to
>> guide me through this process
>>
>> mick in glen innes
>>
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From stephenwoodbridge37 at gmail.com  Thu Mar  7 08:30:04 2019
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Thu, 7 Mar 2019 11:30:04 -0500
Subject: [gdal-dev] Question of file ordering in VRT
Message-ID: <a8cf5027-374f-d7df-610e-9b8da84b657c@gmail.com>

Hi all,

When I have multiple overlapping files in VRT which pixel takes 
president? I'm assuming that the later files in the VRT would be the one 
presented. For example, I have multiple satellite images with names like 
YYYYMMDDHHMM-.....tif so when I use

gdalbuiltvrt YYYYMMDD.vrt YYYYMMDD*.tif

and then view that, in say mapserver, am I seeing the newest images or 
the oldest image when 2+ images overlap in any given area?

Thanks,
   -Steve

---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From even.rouault at spatialys.com  Thu Mar  7 08:42:52 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 07 Mar 2019 17:42:52 +0100
Subject: [gdal-dev] Question of file ordering in VRT
In-Reply-To: <a8cf5027-374f-d7df-610e-9b8da84b657c@gmail.com>
References: <a8cf5027-374f-d7df-610e-9b8da84b657c@gmail.com>
Message-ID: <1565477.nGn5D8bFmh@even-i700>

On jeudi 7 mars 2019 11:30:04 CET Stephen Woodbridge wrote:
> Hi all,
> 
> When I have multiple overlapping files in VRT which pixel takes
> president? I'm assuming that the later files in the VRT would be the one
> presented. For example, I have multiple satellite images with names like
> YYYYMMDDHHMM-.....tif so when I use
> 
> gdalbuiltvrt YYYYMMDD.vrt YYYYMMDD*.tif
> 
> and then view that, in say mapserver, am I seeing the newest images or
> the oldest image when 2+ images overlap in any given area?

Steve,

The last source mentionned in the VRT will take precedence over the previous 
overlapping ones.

I'm not sure however that the wildcard expansion will guarantee that the files 
will be sorted.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ivan.lucena at outlook.com  Thu Mar  7 08:52:24 2019
From: ivan.lucena at outlook.com (Ivan Lucena)
Date: Thu, 7 Mar 2019 16:52:24 +0000
Subject: [gdal-dev] Question of file ordering in VRT
In-Reply-To: <1565477.nGn5D8bFmh@even-i700>
References: <a8cf5027-374f-d7df-610e-9b8da84b657c@gmail.com>,
 <1565477.nGn5D8bFmh@even-i700>
Message-ID: <BN6PR2201MB124955946C853D202AC51293F24C0@BN6PR2201MB1249.namprd22.prod.outlook.com>

That’s depend on how the OS sort the file names. Windows for example does some weird stuff. It might be better to build your list files and pass it as a parameter instead of relay on *.tif

Get Outlook for iOS<https://aka.ms/o0ukef>

________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Even Rouault <even.rouault at spatialys.com>
Sent: Thursday, March 7, 2019 8:43 AM
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Question of file ordering in VRT

On jeudi 7 mars 2019 11:30:04 CET Stephen Woodbridge wrote:
> Hi all,
>
> When I have multiple overlapping files in VRT which pixel takes
> president? I'm assuming that the later files in the VRT would be the one
> presented. For example, I have multiple satellite images with names like
> YYYYMMDDHHMM-.....tif so when I use
>
> gdalbuiltvrt YYYYMMDD.vrt YYYYMMDD*.tif
>
> and then view that, in say mapserver, am I seeing the newest images or
> the oldest image when 2+ images overlap in any given area?

Steve,

The last source mentionned in the VRT will take precedence over the previous
overlapping ones.

I'm not sure however that the wildcard expansion will guarantee that the files
will be sorted.

Even

--
Spatialys - Geospatial professional services
http://www.spatialys.com
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190307/fd0b952d/attachment.html>

From stephenwoodbridge37 at gmail.com  Thu Mar  7 10:16:45 2019
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Thu, 7 Mar 2019 13:16:45 -0500
Subject: [gdal-dev] Question of file ordering in VRT
In-Reply-To: <1565477.nGn5D8bFmh@even-i700>
References: <a8cf5027-374f-d7df-610e-9b8da84b657c@gmail.com>
 <1565477.nGn5D8bFmh@even-i700>
Message-ID: <25fefe81-bee6-be4c-dc16-b9373178bda9@gmail.com>

Thanks Even and Ivan,

Good idea to build to build the list and use that for gdalbuildvrt.

-Steve

On 3/7/2019 11:42 AM, Even Rouault wrote:
> On jeudi 7 mars 2019 11:30:04 CET Stephen Woodbridge wrote:
>> Hi all,
>>
>> When I have multiple overlapping files in VRT which pixel takes
>> president? I'm assuming that the later files in the VRT would be the one
>> presented. For example, I have multiple satellite images with names like
>> YYYYMMDDHHMM-.....tif so when I use
>>
>> gdalbuiltvrt YYYYMMDD.vrt YYYYMMDD*.tif
>>
>> and then view that, in say mapserver, am I seeing the newest images or
>> the oldest image when 2+ images overlap in any given area?
> Steve,
>
> The last source mentionned in the VRT will take precedence over the previous
> overlapping ones.
>
> I'm not sure however that the wildcard expansion will guarantee that the files
> will be sorted.
>
> Even
>


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From mirror.zbeng at gmail.com  Fri Mar  8 03:30:33 2019
From: mirror.zbeng at gmail.com (AlonMF)
Date: Fri, 8 Mar 2019 04:30:33 -0700 (MST)
Subject: [gdal-dev] Change color to TIF file with GDAL
Message-ID: <1552044633412-0.post@n6.nabble.com>

Hello everyone
I have a tif file named ndvi.tif that contains values between 1 and 1. The
file is with one band.
In addition, I have a ndvi.vrt file which I am trying to edit.
My goal is to change the color of the image according to green-orange color
values. Currently the picture is black and white

I run the command:
gdal_translate -of GTiff -ot Float32 C:\Users\oze\test.vrt
C:\Users\oze\modified_palette.tif -scale -1 1

The resulting output is between 69 and 241 and the colors are still in black
and white rather than green-orange as I requested.

This is test.vrt file:

<VRTDataset rasterXSize="1271" rasterYSize="3179">
  <SRS>PROJCS["WGS 84 / UTM zone 36N",GEOGCS["WGS
84",DATUM["WGS_1984",SPHEROID["WGS
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",33],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH],AUTHORITY["EPSG","32636"]]</SRS>
  <GeoTransform>  7.3790000000000000e+05,  1.0000000000000000e+01, 
0.0000000000000000e+00,  3.6828200000000000e+06,  0.0000000000000000e+00,
-1.0000000000000000e+01</GeoTransform>
  <Metadata>
    <MDI key="AREA_OR_POINT">Area</MDI>
  </Metadata>
  <VRTRasterBand dataType="Float32" band="1">
<ColorInterp>Green</ColorInterp>

    <SimpleSource>
      <SourceFilename
relativeToVRT="0">C:\Users\oze\test.tif</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="1271" RasterYSize="3179"
DataType="Float32" BlockXSize="1271" BlockYSize="1" />
      <SrcRect xOff="0" yOff="0" xSize="1271" ySize="3179" />
      <DstRect xOff="0" yOff="0" xSize="1271" ySize="3179" />
    </SimpleSource>
  </VRTRasterBand>
</VRTDataset>


That's how it looks before everything:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/aaaa.jpg> 


This is how it looks after the command is run:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/bbbbbbbbb.jpg> 

It's important to me that the colors look like this:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/ccccccccc.jpg> 


These are the values before:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/ddddddddd.jpg> 


These are the values after:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/zzzzzzzzzzz.jpg> 


That's what it's important for me to see:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/asasasasa.jpg> 

Thanks to everyone who has read and wants to help



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From mirror.zbeng at gmail.com  Fri Mar  8 03:36:45 2019
From: mirror.zbeng at gmail.com (AlonMF)
Date: Fri, 8 Mar 2019 04:36:45 -0700 (MST)
Subject: [gdal-dev] Change color to TIF file with GDAL
Message-ID: <1552045005747-0.post@n6.nabble.com>

Hello everyone
I have a tif file named ndvi.tif that contains values between 1 and 1. The
file is with one band.
In addition, I have a ndvi.vrt file which I am trying to edit.
My goal is to change the color of the image according to green-orange color
values. Currently the picture is black and white

I run the command:
gdal_translate -of GTiff -ot Float32 C:\Users\oze\test.vrt
C:\Users\oze\modified_palette.tif -scale -1 1

The resulting output is between 69 and 241 and the colors are still in black
and white rather than green-orange as I requested.

This is test.vrt file:

<VRTDataset rasterXSize="1271" rasterYSize="3179">
  <SRS>PROJCS["WGS 84 / UTM zone 36N",GEOGCS["WGS
84",DATUM["WGS_1984",SPHEROID["WGS
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",33],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH],AUTHORITY["EPSG","32636"]]</SRS>
  <GeoTransform>  7.3790000000000000e+05,  1.0000000000000000e+01, 
0.0000000000000000e+00,  3.6828200000000000e+06,  0.0000000000000000e+00,
-1.0000000000000000e+01</GeoTransform>
  <Metadata>
    <MDI key="AREA_OR_POINT">Area</MDI>
  </Metadata>
  <VRTRasterBand dataType="Float32" band="1">
<ColorInterp>Green</ColorInterp>

    <SimpleSource>
      <SourceFilename
relativeToVRT="0">C:\Users\oze\test.tif</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="1271" RasterYSize="3179"
DataType="Float32" BlockXSize="1271" BlockYSize="1" />
      <SrcRect xOff="0" yOff="0" xSize="1271" ySize="3179" />
      <DstRect xOff="0" yOff="0" xSize="1271" ySize="3179" />
    </SimpleSource>
  </VRTRasterBand>
</VRTDataset>


That's how it looks before everything:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/aaaa.jpg> 


This is how it looks after the command is run:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/bbbbbbbbb.jpg> 

It's important to me that the colors look like this:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/ccccccccc.jpg> 


These are the values before:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/ddddddddd.jpg> 


These are the values after:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/zzzzzzzzzzz.jpg> 


That's what it's important for me to see:
<http://osgeo-org.1560.x6.nabble.com/file/t384615/asasasasa.jpg> 

Thanks to everyone who has read and wants to help



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From gdt at lexort.com  Fri Mar  8 05:11:39 2019
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 08 Mar 2019 08:11:39 -0500
Subject: [gdal-dev] gdal and proj
Message-ID: <smuwol9fr3o.fsf@linuxpal.mit.edu>

I am updating gdal from 2.2 to 2.3 in pkgsrc.  (Yes, I know 2.2 is old -
I had held off because of several reasons, including the new C++11
requirement.  And I know 2.4.0 is out, but I like to have an update to
each branch in the history.)

In doing the update, I'm trying to check it against proj 5.2.0
(currently in pkgsrc) and 6.0.0 (not pushed, because too many things
break).

But, I can't see where proj is actually linked.  configure seems to
simply declare that it will be dynamic if there is no explicit request
to use the version 4 API.  I don't see it linked into ligdal.so, or
ogr2ogr, or any other file that is produced.   I don't find HAVE_PROJ in
makefiles to add -lproj.

I'm happy to read some of the code/makefiles, but would appreciate a
brief clue.

From sebastic at xs4all.nl  Fri Mar  8 05:26:20 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 8 Mar 2019 14:26:20 +0100
Subject: [gdal-dev] gdal and proj
In-Reply-To: <smuwol9fr3o.fsf@linuxpal.mit.edu>
References: <smuwol9fr3o.fsf@linuxpal.mit.edu>
Message-ID: <b3077638-f468-f352-b2d5-84a49e7c33f3@xs4all.nl>

On 3/8/19 2:11 PM, Greg Troxel wrote:
> But, I can't see where proj is actually linked.  configure seems to
> simply declare that it will be dynamic if there is no explicit request
> to use the version 4 API.  I don't see it linked into ligdal.so, or
> ogr2ogr, or any other file that is produced.   I don't find HAVE_PROJ in
> makefiles to add -lproj.

Looks like you don't use the --with-static-proj4 configure option which
was renamed to --with-proj in 2.3.0.

Kind regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From andrew at aitchison.me.uk  Fri Mar  8 05:36:49 2019
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 8 Mar 2019 13:36:49 +0000 (GMT)
Subject: [gdal-dev] gdal and proj
In-Reply-To: <smuwol9fr3o.fsf@linuxpal.mit.edu>
References: <smuwol9fr3o.fsf@linuxpal.mit.edu>
Message-ID: <alpine.DEB.2.21.1903081333350.9744@warden.aitchison.me.uk>

On Fri, 8 Mar 2019, Greg Troxel wrote:

> I am updating gdal from 2.2 to 2.3 in pkgsrc.  (Yes, I know 2.2 is old -
> I had held off because of several reasons, including the new C++11
> requirement.  And I know 2.4.0 is out, but I like to have an update to
> each branch in the history.)
>
> In doing the update, I'm trying to check it against proj 5.2.0
> (currently in pkgsrc) and 6.0.0 (not pushed, because too many things
> break).
>
> But, I can't see where proj is actually linked.  configure seems to
> simply declare that it will be dynamic if there is no explicit request
> to use the version 4 API.  I don't see it linked into ligdal.so, or
> ogr2ogr, or any other file that is produced.   I don't find HAVE_PROJ in
> makefiles to add -lproj.

"dynamic" is misleading with reference to proj.
I don't remember the details, but I think it refers to a build option
more like a dll or plugin than a .so

> I'm happy to read some of the code/makefiles, but would appreciate a
> brief clue.


From rjhale at northrivergeographic.com  Fri Mar  8 05:52:56 2019
From: rjhale at northrivergeographic.com (Randal Hale)
Date: Fri, 8 Mar 2019 08:52:56 -0500
Subject: [gdal-dev] Question on exporting to Geopackage
Message-ID: <9c50b28b-33fd-6638-e348-0af222a98171@northrivergeographic.com>

This may be a bit obvious - so I apologize if it is and I'm missing it.

I'm exporting a table out of postgres/postgis into a geopackage. The 
geopackage goes to a ESRI shop who then pushes it into their Server setup.

When I export it out my smallint fields are moving to integer - which is 
causing some issues on the other side of the house. I've been doing some 
digging and can't come up with anything since I can't alter the column 
back to smallint post export (due to the sqlite base (I think)).

Anyway - I'm doing this: ogr2ogr -f GPKG TCStransport.gpkg 
PG:"host=host6 user=user dbname=dbname password=1234" 
"hc911.addresspoints" -nln "addresspoints"

Any suggestions welcome,

Randy


-- 
--
Randal Hale
rjhale at northrivergeographic.com
https://www.northrivergeographic.com
(423)653-3611


From gdt at lexort.com  Fri Mar  8 07:30:08 2019
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 08 Mar 2019 10:30:08 -0500
Subject: [gdal-dev] gdal and proj
In-Reply-To: <b3077638-f468-f352-b2d5-84a49e7c33f3@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Fri, 8 Mar 2019 14:26:20 +0100")
References: <smuwol9fr3o.fsf@linuxpal.mit.edu>
 <b3077638-f468-f352-b2d5-84a49e7c33f3@xs4all.nl>
Message-ID: <smu8sxpfkov.fsf@linuxpal.mit.edu>

Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 3/8/19 2:11 PM, Greg Troxel wrote:
>> But, I can't see where proj is actually linked.  configure seems to
>> simply declare that it will be dynamic if there is no explicit request
>> to use the version 4 API.  I don't see it linked into ligdal.so, or
>> ogr2ogr, or any other file that is produced.   I don't find HAVE_PROJ in
>> makefiles to add -lproj.
>
> Looks like you don't use the --with-static-proj4 configure option which
> was renamed to --with-proj in 2.3.0.

Are you saying that just building gdal without configuring options means
there is no proj support in gdal, and that you have to give an
affirmative --with-proj?  I didn't guess that, as usually configure
finds things that are wanted normally.

I read
  https://trac.osgeo.org/gdal/wiki/BuildingOnUnix
and I don't see this mentioned.

I wonder what the "dynamic" output (the beginning of the proj part in
configure.ac) means then.


Thanks for the hint - I will add --with-proj and see how that goes.

From sebastic at xs4all.nl  Fri Mar  8 07:32:46 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 8 Mar 2019 16:32:46 +0100
Subject: [gdal-dev] gdal and proj
In-Reply-To: <smu8sxpfkov.fsf@linuxpal.mit.edu>
References: <smuwol9fr3o.fsf@linuxpal.mit.edu>
 <b3077638-f468-f352-b2d5-84a49e7c33f3@xs4all.nl>
 <smu8sxpfkov.fsf@linuxpal.mit.edu>
Message-ID: <e0ecf2ed-c30a-72e7-025e-40e3d79f8090@xs4all.nl>

On 3/8/19 4:30 PM, Greg Troxel wrote:
> Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:
> 
>> On 3/8/19 2:11 PM, Greg Troxel wrote:
>>> But, I can't see where proj is actually linked.  configure seems to
>>> simply declare that it will be dynamic if there is no explicit request
>>> to use the version 4 API.  I don't see it linked into ligdal.so, or
>>> ogr2ogr, or any other file that is produced.   I don't find HAVE_PROJ in
>>> makefiles to add -lproj.
>>
>> Looks like you don't use the --with-static-proj4 configure option which
>> was renamed to --with-proj in 2.3.0.
> 
> Are you saying that just building gdal without configuring options means
> there is no proj support in gdal, and that you have to give an
> affirmative --with-proj?  I didn't guess that, as usually configure
> finds things that are wanted normally.

I am not saying that. I just know that the Debian package has explicitly
enabled the PROJ support in GDAL with those configure options since
before I was involved, and the resulting libgdal.so has libproj.so.13 in
its NEEDED section.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From jluis at ualg.pt  Fri Mar  8 08:01:11 2019
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Fri, 8 Mar 2019 16:01:11 +0000
Subject: [gdal-dev] Change color to TIF file with GDAL
In-Reply-To: <1552045005747-0.post@n6.nabble.com>
References: <1552045005747-0.post@n6.nabble.com>
Message-ID: <DB7PR04MB4316178E1EFFDE9E2037AB53A64D0@DB7PR04MB4316.eurprd04.prod.outlook.com>



|>Hello everyone
|>I have a tif file named ndvi.tif that contains values between 1 and 1. The file is
|>with one band.
|>In addition, I have a ndvi.vrt file which I am trying to edit.
|>My goal is to change the color of the image according to green-orange color
|>values. Currently the picture is black and white
 
Hi,

Some concept first. What you have is a grid not an image. You don't have any colors (nor black, nor orange or other). What you have is a matrix of float numbers ranging between -1 and 1.

Now, to visualize the contents of that grid, we assign colors to those numbers and we can assign any color we want, but that is during the visualization process. And you can off course save an image representation of that grid. Since I don't do these types of things with GDAL I don't know if it has one tool to do it, but the software you are using to visualize knows how to do that. Basically, you will be doing what is called an indexed image where a correspondence is made between the float value and a color scale. Changing the color scales, changes from grayscale to color images. But the trick is entirely on the color scale being used.

Joaquim

|>
|>I run the command:
|>gdal_translate -of GTiff -ot Float32 C:\Users\oze\test.vrt
|>C:\Users\oze\modified_palette.tif -scale -1 1
|>
|>The resulting output is between 69 and 241 and the colors are still in black and
|>white rather than green-orange as I requested.
|>
|>This is test.vrt file:
|>
|><VRTDataset rasterXSize="1271" rasterYSize="3179">
|>  <SRS>PROJCS["WGS 84 / UTM zone 36N",GEOGCS["WGS
|>84",DATUM["WGS_1984",SPHEROID["WGS
|>84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG",
|>"6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",
|>0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"
|>]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PA
|>RAMETER["central_meridian",33],PARAMETER["scale_factor",0.9996],PARAME
|>TER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,
|>AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH],AU
|>THORITY["EPSG","32636"]]</SRS>
|>  <GeoTransform>  7.3790000000000000e+05,  1.0000000000000000e+01,
|>0.0000000000000000e+00,  3.6828200000000000e+06,
|>0.0000000000000000e+00, -1.0000000000000000e+01</GeoTransform>
|>  <Metadata>
|>    <MDI key="AREA_OR_POINT">Area</MDI>
|>  </Metadata>
|>  <VRTRasterBand dataType="Float32" band="1">
|><ColorInterp>Green</ColorInterp>
|>
|>    <SimpleSource>
|>      <SourceFilename
|>relativeToVRT="0">C:\Users\oze\test.tif</SourceFilename>
|>      <SourceBand>1</SourceBand>
|>      <SourceProperties RasterXSize="1271" RasterYSize="3179"
|>DataType="Float32" BlockXSize="1271" BlockYSize="1" />
|>      <SrcRect xOff="0" yOff="0" xSize="1271" ySize="3179" />
|>      <DstRect xOff="0" yOff="0" xSize="1271" ySize="3179" />
|>    </SimpleSource>
|>  </VRTRasterBand>
|></VRTDataset>
|>
|>
|>That's how it looks before everything:
|><http://osgeo-org.1560.x6.nabble.com/file/t384615/aaaa.jpg>
|>
|>
|>This is how it looks after the command is run:
|><http://osgeo-org.1560.x6.nabble.com/file/t384615/bbbbbbbbb.jpg>
|>
|>It's important to me that the colors look like this:
|><http://osgeo-org.1560.x6.nabble.com/file/t384615/ccccccccc.jpg>
|>
|>
|>These are the values before:
|><http://osgeo-org.1560.x6.nabble.com/file/t384615/ddddddddd.jpg>
|>
|>
|>These are the values after:
|><http://osgeo-org.1560.x6.nabble.com/file/t384615/zzzzzzzzzzz.jpg>
|>
|>
|>That's what it's important for me to see:
|><http://osgeo-org.1560.x6.nabble.com/file/t384615/asasasasa.jpg>
|>
|>Thanks to everyone who has read and wants to help
|>
|>
|>
|>--
|>Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
|>_______________________________________________
|>gdal-dev mailing list
|>gdal-dev at lists.osgeo.org
|>https://lists.osgeo.org/mailman/listinfo/gdal-dev

From gdt at lexort.com  Fri Mar  8 12:29:08 2019
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 08 Mar 2019 15:29:08 -0500
Subject: [gdal-dev] gdal and proj
In-Reply-To: <e0ecf2ed-c30a-72e7-025e-40e3d79f8090@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Fri, 8 Mar 2019 16:32:46 +0100")
References: <smuwol9fr3o.fsf@linuxpal.mit.edu>
 <b3077638-f468-f352-b2d5-84a49e7c33f3@xs4all.nl>
 <smu8sxpfkov.fsf@linuxpal.mit.edu>
 <e0ecf2ed-c30a-72e7-025e-40e3d79f8090@xs4all.nl>
Message-ID: <smuftrxdsa3.fsf@linuxpal.mit.edu>


Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 3/8/19 4:30 PM, Greg Troxel wrote:
>> Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:
>> 
>>> Looks like you don't use the --with-static-proj4 configure option which
>>> was renamed to --with-proj in 2.3.0.
>> 
>> Are you saying that just building gdal without configuring options means
>> there is no proj support in gdal, and that you have to give an
>> affirmative --with-proj?  I didn't guess that, as usually configure
>> finds things that are wanted normally.
>
> I am not saying that. I just know that the Debian package has explicitly
> enabled the PROJ support in GDAL with those configure options since
> before I was involved, and the resulting libgdal.so has libproj.so.13 in
> its NEEDED section.

The draft pkgsrc entry for 2.3.3 produced a libgdal.so without proj
linked (when --with-proj was not given).

I then added
  CONFIGURE_ARGS+=        --with-proj
and that caused libgdal.so*, and a bunch of gdalfoo and ogrfoo to have
proj in DT_NEEDED as I would have expected.   I saw -lproj on link
lines and that seemed entirely normal.

I find the notion and wording of dynamic/static with proj in gdal to be
unfamiliar.  Thanks to Andrew for explaining that dynamic might mean
using dlopen or something like that.

I egrep -R'd through the sources and can't find any dlopen use for
proj.

It seems like I should be filing bugs that

1) the configure output about dynamic/static is using language that is
likely to be misunderstood by most

2) configure's default behavior when proj is visible but no options are
given is to not apparently use it (and configure does not appear to test
for it)

but I don't quite feel that I understand the intent.   I'll do that in a
day or so unless someone would like to tell me I'm confused.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190308/c4957b3a/attachment.sig>

From dhvelasco at up.edu.ph  Sun Mar 10 07:49:55 2019
From: dhvelasco at up.edu.ph (Dwight Louis Velasco)
Date: Sun, 10 Mar 2019 22:49:55 +0800
Subject: [gdal-dev] Interested in GSoC 2019
Message-ID: <CAHVNyL4CQ=ghjyidcWRAjh2dkKizPPXOovxoj9YgbXdhkBarZQ@mail.gmail.com>

Greetings OSGeo community,

My name is Dwight Louis Velasco, currently a senior Applied Physics
undergrad at the University of the Philippines Manila. I am looking forward
to opportunities to contribute to GDAL in this year's GSoC.
Currently, I'm finishing up a research and an internship position that both
deal with the processing of n-dimensional raster data via GDAL and other
software. I have some ideas in mind and would be grateful for your guidance
on how to proceed with them. Thank you!



ᐧ
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190310/c714b710/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Sun Mar 10 09:45:20 2019
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Sun, 10 Mar 2019 16:45:20 +0000
Subject: [gdal-dev] Ogr2ogr manual and -skipfailures
Message-ID: <fd625c43623841189dcc5250e6533d7c@C119S212VM042.msvyvi.vaha.local>

Hi,

On page https://www.gdal.org/ogr2ogr.html I can read from  the Performance hints:
"For example, for SQLite, explicitly defining -gt 65536 ensures optimal performance while populating some table containing many hundredth thousand or million rows. However, note that if there are failed insertions, the scope of -skipfailures is a whole transaction."

I have thought that -skipfailures overrides -gt and sets the size of transactions into 1 and there is also a comment in https://github.com/OSGeo/gdal/blob/master/gdal/apps/ogr2ogr_lib.cpp on row 5190:
/* If skipfailures is already set we should not
               modify nGroupTransactions = 1  #2409 */

Does -skipfailures set the size of a transaction into 1 or not?

-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190310/4e1824c3/attachment.html>

From even.rouault at spatialys.com  Sun Mar 10 10:39:23 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 10 Mar 2019 18:39:23 +0100
Subject: [gdal-dev] Ogr2ogr manual and -skipfailures
In-Reply-To: <fd625c43623841189dcc5250e6533d7c@C119S212VM042.msvyvi.vaha.local>
References: <fd625c43623841189dcc5250e6533d7c@C119S212VM042.msvyvi.vaha.local>
Message-ID: <1925220.cKzd7U4epn@even-i700>

On dimanche 10 mars 2019 16:45:20 CET Rahkonen Jukka (MML) wrote:
> Hi,
> 
> On page https://www.gdal.org/ogr2ogr.html I can read from  the Performance
> hints: "For example, for SQLite, explicitly defining -gt 65536 ensures
> optimal performance while populating some table containing many hundredth
> thousand or million rows. However, note that if there are failed
> insertions, the scope of -skipfailures is a whole transaction."
> 
> I have thought that -skipfailures overrides -gt and sets the size of
> transactions into 1 and there is also a comment in
> https://github.com/OSGeo/gdal/blob/master/gdal/apps/ogr2ogr_lib.cpp on row
> 5190: /* If skipfailures is already set we should not
>                modify nGroupTransactions = 1  #2409 */
> 
> Does -skipfailures set the size of a transaction into 1 or not?

Yes, -skipfailures overrides -gt. The doc seems to be behind

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bjorn.harrtell at gmail.com  Sun Mar 10 15:08:01 2019
From: bjorn.harrtell at gmail.com (=?UTF-8?Q?Bj=C3=B6rn_Harrtell?=)
Date: Sun, 10 Mar 2019 23:08:01 +0100
Subject: [gdal-dev] FlatGeobuf;
 proposal for a new performance oriented vector file format
In-Reply-To: <CAC8Q8tKrpZybsz4wSYrE=XhqV2sjxPFgqstTq68VRFut+MhyAA@mail.gmail.com>
References: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
 <CANhDX=b_J2b-vxakyFV7WB8qjzvu3APBT_wTRdan5GjcfBq4YA@mail.gmail.com>
 <CANhDX=YaSxDa6NmEQ2nfYmd7NvyqHNun+4agZMiUzzJi_Xa1gQ@mail.gmail.com>
 <CANhDX=a4zzXr-uk6Z6UivS1GHMMnO2rU6ZeengJ2GvVmEaOCEw@mail.gmail.com>
 <CAC8Q8tKrpZybsz4wSYrE=XhqV2sjxPFgqstTq68VRFut+MhyAA@mail.gmail.com>
Message-ID: <CANhDX=bDnrMnb92A8XJ9Z3fbD1tehVCzJ---Jgxw8C7Eh8FbmA@mail.gmail.com>

It would probably be possible to get substantial gains on existing formats
that have spatial indexing by making them more optimal/balanced however I
see the following major issues:

* Not sure how by convention deal with non-updatable indexes
(packing/sorting on hilbert or sort-tile-recursive seem inherently static)
on formats that are assumed to be mutable
* GeoPackage cannot benefit from clustering on spatial index (so it will
not be possible to "cloud" optimize)
* Shapefile has several other drawbacks as a format perhaps making it less
interesting to invest into

I have wondered several times about these things in relation to PostgreSQL
and PostGIS... first thought is why there is no way to mark a table
static/immutable in PostgreSQL, it seems to be there would be several
general optimization possibilities if it was known that a table cannot be
changed, not the least that it would make it possible to construct similar
packed R-trees as discussed above. Second thought is how the R-tree is
constructed/implemented via gist index (I have not had the brain
power/interest to dive into the source to understand it yet) - unless it
can be static it should probably optimally be a R*-tree with topological
split but I've got indications that it is not.

/Björn

Den mån 25 feb. 2019 kl 11:06 skrev Darafei "Komяpa" Praliaskouski <
me at komzpa.net>:

> Hi Björn,
>
> Would it make sense to implement it not as a separate format, but as a
> special convention on top of any of already existing ones?
> What happens if you sort by Hilbert curve a shapefile or geopackage, and
> tweak the internals to build indexes in flattish manner?
>
> For example, here is a branch of Postgres where GiST index is being built
> in flat manner. \
> It does not require any change on user's side, but gets you all the
> benefits by plainly building 10x faster.
> https://github.com/glukhovn/postgres/tree/gist_btree_build
>
>
> On Sun, Feb 24, 2019 at 4:59 PM Björn Harrtell <bjorn.harrtell at gmail.com>
> wrote:
>
>> I've now implemented so that the traversal of the R-tree reads nodes on
>> demand and as suspected it gives a significant boost:
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>> gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>> real 0m0,378s (~ 20% improvement)
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>> done
>> real 0m0,790s (~ 30% improvement)
>>
>> I'm now also faster on the reduced window (56 10.1 56.1) beating gpkg:
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>> gis_osm_buildings_a_free_1_single.gpkg gis_osm_buildings_a_free_1_single;
>> done
>> real 0m0,305s
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>> done
>> real 0m0,242s
>>
>> It still remains a TODO to further optimize I/O to read larger blocks if
>> possible (applies both to R-tree nodes and the feature data itself) and I
>> think that could prove a very significant performance boost potentially
>> leaving any competition in the dust. :D
>>
>> /Björn
>>
>> Den lör 9 feb. 2019 kl 00:08 skrev Björn Harrtell <
>> bjorn.harrtell at gmail.com>:
>>
>>> I've now implemented spatial filtering (at GDAL fork
>>> https://github.com/bjornharrtell/gdal/tree/flatgeobuf) and results are
>>> promising, for two test cases about 3,5-4 times faster than shapefile with
>>> the same content. I've used these command lines to measure total time over
>>> 10 iterations for each format and dataset:
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_roads_free_1.shp gis_osm_roads_free_1; done
>>> real 0m1,940s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_roads_free_1.gpkg gis_osm_roads_free_1; done
>>> real 0m0,750s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>>> real 0m0,461s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_buildings_a_free_1_single.shp gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m4,381s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_buildings_a_free_1_single.gpkg gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m1,624s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m1,113s
>>>
>>> The bounds 10 56 10.2 56.2 contains 21525 out of the 812547 total
>>> features for gis_osm_roads_free_1 and 57699 out of 2027890 features for
>>> gis_osm_buildings_a_free_1_single.
>>>
>>> And there is definitely room for optimization. The implementation is
>>> naive and reads the whole R-tree in memory and does not yet read
>>> consecutive features (common case as the R-tree is balanced) in larger I/O
>>> blocks which I think can be significant. If I reduce the extent to 10 56
>>> 10.1 56.1 GPKG is actually fair bit faster which I think is due to it being
>>> able to read the index partially.
>>>
>>> /Björn
>>>
>>> Den tis 22 jan. 2019 kl 18:43 skrev Björn Harrtell <
>>> bjorn.harrtell at gmail.com>:
>>>
>>>> After posting about my experimental format I realized that I lack
>>>> numbers on the potential performance, so I tried to make some more or less
>>>> scientific measuring. The results was disappointing, reaching similar
>>>> performance as shapefile for full sequential reads and so I lost interest
>>>> for a while. But recently I found out that my method of measuring was
>>>> flawed - I measured the time to read into a new shapefile using ogr2ogr,
>>>> but it turns out that can be quite unfair due to the string field length
>>>> dynamic resize that ogr2ogr will do if the strings from input feature
>>>> attributes are of variable length. I've now made some new measurements
>>>> using ogrinfo and the undocumented flag -qq to get a full sequential read.
>>>>
>>>> I've used the shapefiles "gis_osm_buildings_a_free_1" (exploded to
>>>> single poly) and "gis_osm_roads_free_1" from Denmark at
>>>> http://download.geofabrik.de/europe.html as the source, converted to
>>>> respective format, then measured the time it takes to run ogrinfo -qq on
>>>> them. Results (average over three runs):
>>>>
>>>> ## gis_osm_buildings_a_free_1 (2027890 Polygons)
>>>> * SHP: 3800 ms
>>>> * GPKG: 2700 ms
>>>> * FlatGeobuf: 2200 ms
>>>>
>>>> ## gis_osm_roads_free_1 (812547 LineStrings)
>>>> * SHP: 1600 ms
>>>> * GPKG: 1350 ms
>>>> * FlatGeobuf: 800 ms
>>>>
>>>> With that my hope and interest is rekindled. I believe I can fare even
>>>> better against the competition with with spatially filtered searches, will
>>>> hopefully soon have some results on that too.
>>>>
>>>> /Björn
>>>>
>>>> Den sön 9 dec. 2018 kl 20:36 skrev Björn Harrtell <
>>>> bjorn.harrtell at gmail.com>:
>>>>
>>>>> Hi GDAL/OGR folks,
>>>>>
>>>>> In my spare time I've been working on a vector file format called
>>>>> FlatGeobuf (tentatively). The main reason, besides curiosity and learning,
>>>>> I'm putting time into it is that I think shapefile still rules the
>>>>> read/query static data performance game, which is kind of sad, and probably
>>>>> one of the reasons it is still so widely popular. Also, the main competitor
>>>>> (GeoPackage) isn't suitable for streaming access (AFAIK) which shapefiles
>>>>> also handles surprisingly (?) well.
>>>>>
>>>>> By using a performance focused write once binary encoding
>>>>> (flatbuffers), schema constraint and focusing on read/query performance by
>>>>> clustering on an optimal spatial index (Packed Hilbert R-Tree) I hope to be
>>>>> able to beat shapefile performance and at the same time be optimal for
>>>>> streaming/cloud access.
>>>>>
>>>>> I think I'm starting to get somewhere, more details and source is at
>>>>> https://github.com/bjornharrtell/flatgeobuf and I have an early proof
>>>>> of concept driver implementation at
>>>>> https://github.com/bjornharrtell/gdal/tree/flatgeobuf and results are
>>>>> already quite promising - it can do roundtrip read/write and is already
>>>>> quite a bit faster than shapefile. I also have implemented naive read only
>>>>> QGIS provider for experimental purposes.
>>>>>
>>>>> Basically I'm fishing for interest in this effort, hoping that others
>>>>> will see potential in it even if it's "yet another format" and far from
>>>>> final/stable yet. Any feedback is welcome. As I see it, GDAL is a good
>>>>> place for a format specification and reference implementation to incubate.
>>>>>
>>>>> Some additional food for thought that I've had during the
>>>>> experimentation:
>>>>>
>>>>> 1. The main in memory representations of geometry/coordinates seem to
>>>>> be either separate arrays per dimension (GDAL (partially?) and QGIS) or a
>>>>> single array with dimension as stride. I've chosen the latter as of yet but
>>>>> I'm still a bit undecided. There is of course a substantial involved in
>>>>> transforming between the two representations so the situation with two
>>>>> competing models is a bit unfortunate. I'm also not sure about which of
>>>>> these models are objectively "better" than the other?
>>>>>
>>>>> 2. One could get better space efficiency with protobuf instead of
>>>>> flatbuffers, but it has a performance cost. I have not gone far into
>>>>> investigating how much though and one could even reason about supporting
>>>>> both these encodings in a single format specification but it's taking it a
>>>>> bit far I think.
>>>>>
>>>>> 3. Is there a reason to support different packing strategies for the
>>>>> R-Tree or is Packed Hilbert a good compromise (besides it being beautifully
>>>>> simple to implement)?
>>>>>
>>>>> 4. FlatGeobuf is perhaps a too technical name, not catchy enough and
>>>>> has a bad/boring abbreviation. Other candidates I've considered are
>>>>> OpenGeoFile, OpenVectorFile or OpenSpatialFile but I'm undecided. Any
>>>>> ideas? :)
>>>>>
>>>>> Regards,
>>>>>
>>>>> Björn Harrtell
>>>>>
>>>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
> Darafei Praliaskouski
> Support me: http://patreon.com/komzpa
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190310/14a34bb0/attachment.html>

From morten at breiner.dk  Sun Mar 10 15:24:55 2019
From: morten at breiner.dk (Morten Breiner)
Date: Sun, 10 Mar 2019 23:24:55 +0100
Subject: [gdal-dev] GDAL.Net 2.3.1 - CoordinateTransformation mismatch....
Message-ID: <69394adc-db34-8359-b5aa-f2b9af1296df@breiner.dk>

Hi,

I hope that I am posting my question to the right mailing list.

Currently, I am investigating the use of GDAL.NET 2.3.1 installed as a 
NUGET package in VisualStudio 2017.

It works very well when it comes to reading geotiff using provided 
drivers etc. However, when it comes to performing a coordinate 
transformation from one geodesy to another I encounter a mismatch 
between actual and expected coordinates. I have illustrated this in the 
Test Method below, where I have tried to transform a coordinate from 
EPSG:32028 to EPSG:4326, my test fails the final two Asserts.AreEqual 
when testing "x" and "y".

[TestMethod]

publicvoidGdalTransformEPSG32028ToEPSG4326()

{

// Setting environment variables and load all GDAL and OGR drivers

GdalConfiguration.ConfigureGdal();

GdalConfiguration.ConfigureOgr();

stringverInfo = Gdal.VersionInfo(string.Empty);

Assert.IsTrue(String.Compare(verInfo, "GDAL 2.3.1, released 2018/06/22", 
StringComparison.Ordinal)==0);

SpatialReference spatialSrc = newSpatialReference(string.Empty);

spatialSrc.ImportFromEPSG(32028);

SpatialReference spatialDest = newSpatialReference(string.Empty);

spatialDest.ImportFromEPSG(4326);

CoordinateTransformation transformator = 
newCoordinateTransformation(spatialSrc, spatialDest);

double[] result = newdouble[3];

transformator.TransformPoint(result, 2397350, 386280, 0);

// Actual output:  x=-76.3056550480934,  y=41.2177849636383,  z=0.0

// EPSG.io output: x=-76.3053142,        y=41.217868

Assert.AreEqual(-76.3053142, result[0], 1e-6, "x"); // failure 
x=-76.3056550480934

Assert.AreEqual(41.217868, result[1], 1e-6, "y"); // failure y= 
41.2177849636383

}


The static method GdalConfiguration() configure paths for proj lib, 
drivers etc as illustrated below:

///<summary>

///Construction of Gdal/Ogr

///</summary>

staticGdalConfiguration()

{

varexecutingAssemblyFile = 
newUri(Assembly.GetExecutingAssembly().GetName().CodeBase).LocalPath;

varexecutingDirectory = Path.GetDirectoryName(executingAssemblyFile);

if(string.IsNullOrEmpty(executingDirectory))

thrownewInvalidOperationException("cannot get executing directory");

vargdalPath = Path.Combine(executingDirectory, "gdal");

varnativePath = Path.Combine(gdalPath, GetPlatform());

// Prepend native path to environment path, to ensure the

// right libs are being used.

varpath = Environment.GetEnvironmentVariable("PATH");

path = nativePath + ";"+ Path.Combine(nativePath, "plugins") + ";"+ path;

Environment.SetEnvironmentVariable("PATH", path);

// Set the additional GDAL environment variables.

vargdalData = Path.Combine(gdalPath, "data");

Environment.SetEnvironmentVariable("GDAL_DATA", gdalData);

Gdal.SetConfigOption("GDAL_DATA", gdalData);

vardriverPath = Path.Combine(nativePath, "plugins");

Environment.SetEnvironmentVariable("GDAL_DRIVER_PATH", driverPath);

Gdal.SetConfigOption("GDAL_DRIVER_PATH", driverPath);

Environment.SetEnvironmentVariable("GEOTIFF_CSV", gdalData);

Gdal.SetConfigOption("GEOTIFF_CSV", gdalData);

varprojSharePath = Path.Combine(gdalPath, "share");

Environment.SetEnvironmentVariable("PROJ_LIB", projSharePath);

Gdal.SetConfigOption("PROJ_LIB", projSharePath);

}

///<summary>

///Method to ensure the static constructor is being called.

///</summary>

///<remarks>Be sure to call this function before using 
Gdal/Ogr/Osr</remarks>

publicstaticvoidConfigureOgr()

{

if(_configuredOgr) return;

// Register drivers

Ogr.RegisterAll();

_configuredOgr = true;

PrintDriversOgr();

}

///<summary>

///Method to ensure the static constructor is being called.

///</summary>

///<remarks>Be sure to call this function before using 
Gdal/Ogr/Osr</remarks>

publicstaticvoidConfigureGdal()

{

if(_configuredGdal) return;

// Register drivers

Gdal.AllRegister();

_configuredGdal = true;

PrintDriversGdal();

}

I would expect that I do the GDAL initialisation correctly, including 
the coordinate transformation but the "wrong" result when comparing my 
results with http://epsg.io or similar sources indicate that I am 
missing something essential? I have spent a long time trying to find a 
solution to this issue, but with out result.

Looking forward to receive any suggestion of what might be wrong in my 
approach.

Many thanks in advance.

BR

-Morten Breiner


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190310/7b5383fb/attachment-0001.html>

From zhan.j.zhang at noaa.gov  Sun Mar 10 18:19:30 2019
From: zhan.j.zhang at noaa.gov (Zhan Zhang - NOAA Affiliate)
Date: Sun, 10 Mar 2019 21:19:30 -0400
Subject: [gdal-dev] filter out wanted messages in a grib2 file
Message-ID: <CAAhuiS2QD_8Wajmrk1vSovf06tK+rH_XkLr_GHzQDKgKYckecQ@mail.gmail.com>

I have a grib2 file which contains many messages, and those messages define
different products on different surfaces (like z axis). For
instance, some messages defines "soil temperature"(product name) on a
surface called "depth below land surface" (surface name); and other
messages define "geopotential height" (product name) on a "pressure
surface" (surface name); etc. May I ask how I can filter out all those
messages that defines "soil temperature"(product name) on a surface called
"depth below land surface" (surface name)? Is there some grib2 tools
provided in gdal APIs that I can use? Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190310/f66db900/attachment.html>

From ao at t-kartor.se  Mon Mar 11 00:12:26 2019
From: ao at t-kartor.se (Andreas Oxenstierna)
Date: Mon, 11 Mar 2019 08:12:26 +0100
Subject: [gdal-dev] FlatGeobuf;
 proposal for a new performance oriented vector file format
In-Reply-To: <CANhDX=bDnrMnb92A8XJ9Z3fbD1tehVCzJ---Jgxw8C7Eh8FbmA@mail.gmail.com>
References: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
 <CANhDX=b_J2b-vxakyFV7WB8qjzvu3APBT_wTRdan5GjcfBq4YA@mail.gmail.com>
 <CANhDX=YaSxDa6NmEQ2nfYmd7NvyqHNun+4agZMiUzzJi_Xa1gQ@mail.gmail.com>
 <CANhDX=a4zzXr-uk6Z6UivS1GHMMnO2rU6ZeengJ2GvVmEaOCEw@mail.gmail.com>
 <CAC8Q8tKrpZybsz4wSYrE=XhqV2sjxPFgqstTq68VRFut+MhyAA@mail.gmail.com>
 <CANhDX=bDnrMnb92A8XJ9Z3fbD1tehVCzJ---Jgxw8C7Eh8FbmA@mail.gmail.com>
Message-ID: <eaf69cd7-a84a-cbfe-eccb-ed0fac39cc7e@t-kartor.se>

We see significant performance boost when clustering a large PostGIS 
table on the spatial index. This will rewrite the table in spatial index 
order.
CLUSTER <table> USING <spatial_index>
My understanding is that you need to periodically recluster the table 
when updated, which is an atomic exclusive rewrite of the complete table 
i.e. will take time.
You may ask the Postgre team about this, e.g. Magnus Hagander.
You may ask Sandro Santilli (PostGIS topology) about topological aspects.


> It would probably be possible to get substantial gains on existing 
> formats that have spatial indexing by making them more 
> optimal/balanced however I see the following major issues:
>
> * Not sure how by convention deal with non-updatable indexes 
> (packing/sorting on hilbert or sort-tile-recursive seem inherently 
> static) on formats that are assumed to be mutable
> * GeoPackage cannot benefit from clustering on spatial index (so it 
> will not be possible to "cloud" optimize)
> * Shapefile has several other drawbacks as a format perhaps making it 
> less interesting to invest into
>
> I have wondered several times about these things in relation to 
> PostgreSQL and PostGIS... first thought is why there is no way to mark 
> a table static/immutable in PostgreSQL, it seems to be there would be 
> several general optimization possibilities if it was known that a 
> table cannot be changed, not the least that it would make it possible 
> to construct similar packed R-trees as discussed above. Second thought 
> is how the R-tree is constructed/implemented via gist index (I have 
> not had the brain power/interest to dive into the source to understand 
> it yet) - unless it can be static it should probably optimally be 
> a R*-tree with topological split but I've got indications that it is not.
>
> /Björn
>
> Den mån 25 feb. 2019 kl 11:06 skrev Darafei "Komяpa" Praliaskouski 
> <me at komzpa.net <mailto:me at komzpa.net>>:
>
>     Hi Björn,
>
>     Would it make sense to implement it not as a separate format, but
>     as a special convention on top of any of already existing ones?
>     What happens if you sort by Hilbert curve a shapefile or
>     geopackage, and tweak the internals to build indexes in flattish
>     manner?
>
>     For example, here is a branch of Postgres where GiST index is
>     being built in flat manner. \
>     It does not require any change on user's side, but gets you all
>     the benefits by plainly building 10x faster.
>     https://github.com/glukhovn/postgres/tree/gist_btree_build
>
>
>     On Sun, Feb 24, 2019 at 4:59 PM Björn Harrtell
>     <bjorn.harrtell at gmail.com <mailto:bjorn.harrtell at gmail.com>> wrote:
>
>         I've now implemented so that the traversal of the R-tree reads
>         nodes on demand and as suspected it gives a significant boost:
>
>         > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>         gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>         real0m0,378s (~ 20% improvement)
>
>         > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>         gis_osm_buildings_a_free_1_single.fgb
>         gis_osm_buildings_a_free_1_single; done
>         real0m0,790s (~ 30% improvement)
>
>         I'm now also faster on the reduced window (56 10.1 56.1)
>         beating gpkg:
>
>         > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>         gis_osm_buildings_a_free_1_single.gpkg
>         gis_osm_buildings_a_free_1_single; done
>         real0m0,305s
>
>         > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>         gis_osm_buildings_a_free_1_single.fgb
>         gis_osm_buildings_a_free_1_single; done
>         real0m0,242s
>
>         It still remains a TODO to further optimize I/O to read larger
>         blocks if possible (applies both to R-tree nodes and the
>         feature data itself) and I think that could prove a very
>         significant performance boost potentially leaving any
>         competition in the dust. :D
>
>         /Björn
>
>         Den lör 9 feb. 2019 kl 00:08 skrev Björn Harrtell
>         <bjorn.harrtell at gmail.com <mailto:bjorn.harrtell at gmail.com>>:
>
>             I've now implemented spatial filtering (at GDAL fork
>             https://github.com/bjornharrtell/gdal/tree/flatgeobuf) and
>             results are promising, for two test cases about 3,5-4
>             times faster than shapefile with the same content. I've
>             used these command lines to measure total time over 10
>             iterations for each format and dataset:
>
>             > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2
>             56.2 gis_osm_roads_free_1.shp gis_osm_roads_free_1; done
>             real0m1,940s
>
>             > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2
>             56.2 gis_osm_roads_free_1.gpkg gis_osm_roads_free_1; done
>             real0m0,750s
>
>             > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2
>             56.2 gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>             real0m0,461s
>
>             > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2
>             56.2 gis_osm_buildings_a_free_1_single.shp
>             gis_osm_buildings_a_free_1_single; done
>             real0m4,381s
>
>             > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2
>             56.2 gis_osm_buildings_a_free_1_single.gpkg
>             gis_osm_buildings_a_free_1_single; done
>             real0m1,624s
>
>             > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2
>             56.2 gis_osm_buildings_a_free_1_single.fgb
>             gis_osm_buildings_a_free_1_single; done
>             real0m1,113s
>
>             The bounds 10 56 10.2 56.2 contains 21525 out of the
>             812547 total features for gis_osm_roads_free_1 and 57699
>             out of 2027890 features for gis_osm_buildings_a_free_1_single.
>
>             And there is definitely room for optimization. The
>             implementation is naive and reads the whole R-tree in
>             memory and does not yet read consecutive features (common
>             case as the R-tree is balanced) in larger I/O blocks which
>             I think can be significant. If I reduce the extent to 10
>             56 10.1 56.1 GPKG is actually fair bit faster which I
>             think is due to it being able to read the index partially.
>
>             /Björn
>
>             Den tis 22 jan. 2019 kl 18:43 skrev Björn Harrtell
>             <bjorn.harrtell at gmail.com <mailto:bjorn.harrtell at gmail.com>>:
>
>                 After posting about my experimental format I realized
>                 that I lack numbers on the potential performance, so I
>                 tried to make some more or less scientific measuring.
>                 The results was disappointing, reaching similar
>                 performance as shapefile for full sequential reads and
>                 so I lost interest for a while. But recently I found
>                 out that my method of measuring was flawed - I
>                 measured the time to read into a new shapefile using
>                 ogr2ogr, but it turns out that can be quite unfair due
>                 to the string field length dynamic resize that ogr2ogr
>                 will do if the strings from input feature attributes
>                 are of variable length. I've now made some new
>                 measurements using ogrinfo and the undocumented flag
>                 -qq to get a full sequential read.
>
>                 I've used the shapefiles "gis_osm_buildings_a_free_1"
>                 (exploded to single poly) and "gis_osm_roads_free_1"
>                 from Denmark at
>                 http://download.geofabrik.de/europe.html as the
>                 source, converted to respective format, then measured
>                 the time it takes to run ogrinfo -qq on them. Results
>                 (average over three runs):
>
>                 ## gis_osm_buildings_a_free_1 (2027890 Polygons)
>                 * SHP: 3800 ms
>                 * GPKG: 2700 ms
>                 * FlatGeobuf: 2200 ms
>
>                 ## gis_osm_roads_free_1 (812547 LineStrings)
>                 * SHP: 1600 ms
>                 * GPKG: 1350 ms
>                 * FlatGeobuf: 800 ms
>
>                 With that my hope and interest is rekindled. I believe
>                 I can fare even better against the competition with
>                 with spatially filtered searches, will hopefully soon
>                 have some results on that too.
>
>                 /Björn
>
>                 Den sön 9 dec. 2018 kl 20:36 skrev Björn Harrtell
>                 <bjorn.harrtell at gmail.com
>                 <mailto:bjorn.harrtell at gmail.com>>:
>
>                     Hi GDAL/OGR folks,
>
>                     In my spare time I've been working on a vector
>                     file format called FlatGeobuf (tentatively). The
>                     main reason, besides curiosity and learning, I'm
>                     putting time into it is that I think shapefile
>                     still rules the read/query static data performance
>                     game, which is kind of sad, and probably one of
>                     the reasons it is still so widely popular. Also,
>                     the main competitor (GeoPackage) isn't suitable
>                     for streaming access (AFAIK) which shapefiles also
>                     handles surprisingly (?) well.
>
>                     By using a performance focused write once binary
>                     encoding (flatbuffers), schema constraint and
>                     focusing on read/query performance by clustering
>                     on an optimal spatial index (Packed Hilbert
>                     R-Tree) I hope to be able to beat shapefile
>                     performance and at the same time be optimal for
>                     streaming/cloud access.
>
>                     I think I'm starting to get somewhere, more
>                     details and source is at
>                     https://github.com/bjornharrtell/flatgeobuf and I
>                     have an early proof of concept driver
>                     implementation at
>                     https://github.com/bjornharrtell/gdal/tree/flatgeobuf and
>                     results are already quite promising - it can do
>                     roundtrip read/write and is already quite a bit
>                     faster than shapefile. I also have implemented
>                     naive read only QGIS provider for experimental
>                     purposes.
>
>                     Basically I'm fishing for interest in this effort,
>                     hoping that others will see potential in it even
>                     if it's "yet another format" and far from
>                     final/stable yet. Any feedback is welcome. As I
>                     see it, GDAL is a good place for a format
>                     specification and reference implementation to
>                     incubate.
>
>                     Some additional food for thought that I've had
>                     during the experimentation:
>
>                     1. The main in memory representations of
>                     geometry/coordinates seem to be either separate
>                     arrays per dimension (GDAL (partially?) and QGIS)
>                     or a single array with dimension as stride. I've
>                     chosen the latter as of yet but I'm still a bit
>                     undecided. There is of course a substantial
>                     involved in transforming between the two
>                     representations so the situation with two
>                     competing models is a bit unfortunate. I'm also
>                     not sure about which of these models are
>                     objectively "better" than the other?
>
>                     2. One could get better space efficiency with
>                     protobuf instead of flatbuffers, but it has a
>                     performance cost. I have not gone far into
>                     investigating how much though and one could even
>                     reason about supporting both these encodings in a
>                     single format specification but it's taking it a
>                     bit far I think.
>
>                     3. Is there a reason to support different packing
>                     strategies for the R-Tree or is Packed Hilbert a
>                     good compromise (besides it being beautifully
>                     simple to implement)?
>
>                     4. FlatGeobuf is perhaps a too technical name, not
>                     catchy enough and has a bad/boring abbreviation.
>                     Other candidates I've considered are OpenGeoFile,
>                     OpenVectorFile or OpenSpatialFile but I'm
>                     undecided. Any ideas? :)
>
>                     Regards,
>
>                     Björn Harrtell
>
>         _______________________________________________
>         gdal-dev mailing list
>         gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>     -- 
>     Darafei Praliaskouski
>     Support me: http://patreon.com/komzpa
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Hälsningar

Andreas Oxenstierna
T-Kartor Geospatial AB
Olof Mohlins väg 12 Kristianstad
mobile: +46 733 206831
mailto: ao at t-kartor.se
http://www.t-kartor.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190311/8aec40e8/attachment-0001.html>

From m.zdila at gmail.com  Mon Mar 11 03:38:50 2019
From: m.zdila at gmail.com (=?UTF-8?Q?Martin_=C5=BDdila?=)
Date: Mon, 11 Mar 2019 11:38:50 +0100
Subject: [gdal-dev] DEM data antialiasing
Message-ID: <CAL520Rk6qunDqiisVWPqmC0wUoyYwZwH0DYsg8znUsddXVz-=g@mail.gmail.com>

Hello,

I've written a simple program for DEM data antialiasing to generate
hillshading without artefacts caused by DEM data rounded to integer. Maybe
somebody from gdal audience could be interested.

Please see
https://gis.stackexchange.com/questions/314971/raster-antialiasing/315003

Best regards
-- 
Martin Ždila
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190311/0ab70368/attachment.html>

From even.rouault at spatialys.com  Mon Mar 11 04:15:09 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Mar 2019 12:15:09 +0100
Subject: [gdal-dev] GDAL 2.4.1 RC this friday ?
Message-ID: <2049326.ibmKMLrCrJ@even-i700>

Hi,

It will be ~ 3 months since 2.4.0 release, so a good time to do a bugfix 
release. Let me know if some delay is needed to push your fixes.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Mar 11 04:30:10 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Mar 2019 12:30:10 +0100
Subject: [gdal-dev] OGDI 4.0.0 is released
In-Reply-To: <31666320.RX92u5H2XH@even-i700>
References: <31666320.RX92u5H2XH@even-i700>
Message-ID: <5861882.Ro3DQF4zRQ@even-i700>

Hi,

OGDI 4.0.0 RC1 is promoted to final 4.0.0 release.

Download links:
https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0/ogdi-4.0.0.tar.gz
https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0/ogdi-4.0.0.zip

Even

On vendredi 1 mars 2019 14:33:55 CET Even Rouault even.rouault at spatialys.com 
[ogdidev] wrote:
> Hi,
> 
> I've prepared a OGDI 4.0.0 release candidate.
> 
> Download links:
> https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1.t
> ar.gz
> https://freefr.dl.sourceforge.net/project/ogdi/ogdi/4.0.0RC1/ogdi-4.0.0RC1.
> zip
> 
> The news are
> 
> 4.0.0
> =====
> 
>  o  Remove PROJ.4 dependency, functionality and related API
> 
>     With PROJ 6 being released and removing completely projects.h old API,
>     a major upgrade would have been needed. I'd rather choose to completely
>     cut off PROJ related functionality from OGDI.
>     For the VRF case, projection support can be done through the GDAL/OGR
>     OGDI driver.
> 
>     The dtusa and dtcanada drivers are removed.
> 
>     The following functions are removed from ecs_util.h:
>     cln_SetServerProjection
>     cln_SetClientProjection
>     cln_ProjInit
>     cln_CompareProjections
>     cln_ConvRegion
>     cln_ConvTtoS
>     cln_ConvStoT
>     cln_ChangeProjection
>     cln_ChangeProjectionArea
>     cln_ChangeProjectionLine
>     cln_ChangeProjectionPoint
>     cln_ChangeProjectionMatrix
>     cln_ChangeProjectionImage
>     cln_ChangeProjectionText
>     ecs_distance_meters
> 
>  o  Update server version to 4.0 to reflect removal of SetServerProjection
>     capability
> 
>  o  Build: add -fPIC when required
> 
>  o  Rename aclocal.m4 to acinclude.m4 and apply stricter quoting
> 
>  o  Respect LDFLAGS provided to ./configure
> 
>  o  Fall back to libtirpc if libc does not provide rpc/rpc.h
> 
>  o  Don't hardcode compiler to fix cross compilation.
> 
> 
> I've verified it works fine with GDAL/OGR OGDI driver with the VRF OGDI
> driver of both GDAL 2.4 and GDAL master, since GDAL does not use the now
> removed OGDI PROJ capabilities
> 
> Sourceforge CVS being now read-only, upstream development is now definitely
> at https://github.com/libogdi/ogdi
> 
> I'll promote this RC to final if there are no serious issues reported.
> 
> Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From zhan.j.zhang at noaa.gov  Mon Mar 11 05:40:11 2019
From: zhan.j.zhang at noaa.gov (Zhan Zhang - NOAA Affiliate)
Date: Mon, 11 Mar 2019 08:40:11 -0400
Subject: [gdal-dev] filter out wanted messages in a grib2 file
In-Reply-To: <CAAhuiS2QD_8Wajmrk1vSovf06tK+rH_XkLr_GHzQDKgKYckecQ@mail.gmail.com>
References: <CAAhuiS2QD_8Wajmrk1vSovf06tK+rH_XkLr_GHzQDKgKYckecQ@mail.gmail.com>
Message-ID: <CAAhuiS2mNunBqs3z4kMhg_w7OzXRRTR2A_La9tC=V_NS_oyxuw@mail.gmail.com>

when I say "filter out", I mean "retrieve".

On Sun, Mar 10, 2019 at 9:19 PM Zhan Zhang - NOAA Affiliate <
zhan.j.zhang at noaa.gov> wrote:

> I have a grib2 file which contains many messages, and those messages
> define different products on different surfaces (like z axis). For
> instance, some messages defines "soil temperature"(product name) on a
> surface called "depth below land surface" (surface name); and other
> messages define "geopotential height" (product name) on a "pressure
> surface" (surface name); etc. May I ask how I can filter out all those
> messages that defines "soil temperature"(product name) on a surface called
> "depth below land surface" (surface name)? Is there some grib2 tools
> provided in gdal APIs that I can use? Thanks!
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190311/73737128/attachment.html>

From me at komzpa.net  Mon Mar 11 07:07:24 2019
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Mon, 11 Mar 2019 17:07:24 +0300
Subject: [gdal-dev] FlatGeobuf;
 proposal for a new performance oriented vector file format
In-Reply-To: <CANhDX=bDnrMnb92A8XJ9Z3fbD1tehVCzJ---Jgxw8C7Eh8FbmA@mail.gmail.com>
References: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
 <CANhDX=b_J2b-vxakyFV7WB8qjzvu3APBT_wTRdan5GjcfBq4YA@mail.gmail.com>
 <CANhDX=YaSxDa6NmEQ2nfYmd7NvyqHNun+4agZMiUzzJi_Xa1gQ@mail.gmail.com>
 <CANhDX=a4zzXr-uk6Z6UivS1GHMMnO2rU6ZeengJ2GvVmEaOCEw@mail.gmail.com>
 <CAC8Q8tKrpZybsz4wSYrE=XhqV2sjxPFgqstTq68VRFut+MhyAA@mail.gmail.com>
 <CANhDX=bDnrMnb92A8XJ9Z3fbD1tehVCzJ---Jgxw8C7Eh8FbmA@mail.gmail.com>
Message-ID: <CAC8Q8tK4QZ2spKJ_Yh+j98i7GMOf_9KSKFtcngeWXycH3X1GEQ@mail.gmail.com>

On Mon, Mar 11, 2019 at 1:08 AM Björn Harrtell <bjorn.harrtell at gmail.com>
wrote:

> It would probably be possible to get substantial gains on existing formats
> that have spatial indexing by making them more optimal/balanced however I
> see the following major issues:
>
> * Not sure how by convention deal with non-updatable indexes
> (packing/sorting on hilbert or sort-tile-recursive seem inherently static)
> on formats that are assumed to be mutable
>

Why does Hilbert indexing sets a requirement for it to be non-updatable?

If it's packed into same tree format, it's going to be updatable just the
same as the previous version. Yeah, it's going to degrade a bit on changes,
but if the tool to put sorting back in place is available then it's not a
big issue?



> * GeoPackage cannot benefit from clustering on spatial index (so it will
> not be possible to "cloud" optimize)
>

Why? What should it get for it to be possible?


> * Shapefile has several other drawbacks as a format perhaps making it less
> interesting to invest into
>

Its killer feature is universal support.


> I have wondered several times about these things in relation to PostgreSQL
> and PostGIS... first thought is why there is no way to mark a table
> static/immutable in PostgreSQL, it seems to be there would be several
> general optimization possibilities if it was known that a table cannot be
> changed, not the least that it would make it possible to construct similar
> packed R-trees as discussed above.
>

You probably missed a link I posted,
https://github.com/glukhovn/postgres/tree/gist_btree_buil
<https://github.com/glukhovn/postgres/tree/gist_btree_build>d - here a GiST
is built in similar way, without requiring read onliness of the table.



> Second thought is how the R-tree is constructed/implemented via gist index
> (I have not had the brain power/interest to dive into the source to
> understand it yet) - unless it can be static it should probably optimally
> be a R*-tree with topological split but I've got indications that it is not.
>

GiST is just *a* tree on top of support functions. More sophisticated
versions of tree are limited by what callbacks Postgres provides.


/Björn

Den mån 25 feb. 2019 kl 11:06 skrev Darafei "Komяpa" Praliaskouski <
me at komzpa.net>:

> Hi Björn,
>
> Would it make sense to implement it not as a separate format, but as a
> special convention on top of any of already existing ones?
> What happens if you sort by Hilbert curve a shapefile or geopackage, and
> tweak the internals to build indexes in flattish manner?
>
> For example, here is a branch of Postgres where GiST index is being built
> in flat manner. \
> It does not require any change on user's side, but gets you all the
> benefits by plainly building 10x faster.
> https://github.com/glukhovn/postgres/tree/gist_btree_build
>
>
> On Sun, Feb 24, 2019 at 4:59 PM Björn Harrtell <bjorn.harrtell at gmail.com>
> wrote:
>
>> I've now implemented so that the traversal of the R-tree reads nodes on
>> demand and as suspected it gives a significant boost:
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>> gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>> real 0m0,378s (~ 20% improvement)
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>> done
>> real 0m0,790s (~ 30% improvement)
>>
>> I'm now also faster on the reduced window (56 10.1 56.1) beating gpkg:
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>> gis_osm_buildings_a_free_1_single.gpkg gis_osm_buildings_a_free_1_single;
>> done
>> real 0m0,305s
>>
>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>> done
>> real 0m0,242s
>>
>> It still remains a TODO to further optimize I/O to read larger blocks if
>> possible (applies both to R-tree nodes and the feature data itself) and I
>> think that could prove a very significant performance boost potentially
>> leaving any competition in the dust. :D
>>
>> /Björn
>>
>> Den lör 9 feb. 2019 kl 00:08 skrev Björn Harrtell <
>> bjorn.harrtell at gmail.com>:
>>
>>> I've now implemented spatial filtering (at GDAL fork
>>> https://github.com/bjornharrtell/gdal/tree/flatgeobuf) and results are
>>> promising, for two test cases about 3,5-4 times faster than shapefile with
>>> the same content. I've used these command lines to measure total time over
>>> 10 iterations for each format and dataset:
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_roads_free_1.shp gis_osm_roads_free_1; done
>>> real 0m1,940s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_roads_free_1.gpkg gis_osm_roads_free_1; done
>>> real 0m0,750s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>>> real 0m0,461s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_buildings_a_free_1_single.shp gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m4,381s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_buildings_a_free_1_single.gpkg gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m1,624s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m1,113s
>>>
>>> The bounds 10 56 10.2 56.2 contains 21525 out of the 812547 total
>>> features for gis_osm_roads_free_1 and 57699 out of 2027890 features for
>>> gis_osm_buildings_a_free_1_single.
>>>
>>> And there is definitely room for optimization. The implementation is
>>> naive and reads the whole R-tree in memory and does not yet read
>>> consecutive features (common case as the R-tree is balanced) in larger I/O
>>> blocks which I think can be significant. If I reduce the extent to 10 56
>>> 10.1 56.1 GPKG is actually fair bit faster which I think is due to it being
>>> able to read the index partially.
>>>
>>> /Björn
>>>
>>> Den tis 22 jan. 2019 kl 18:43 skrev Björn Harrtell <
>>> bjorn.harrtell at gmail.com>:
>>>
>>>> After posting about my experimental format I realized that I lack
>>>> numbers on the potential performance, so I tried to make some more or less
>>>> scientific measuring. The results was disappointing, reaching similar
>>>> performance as shapefile for full sequential reads and so I lost interest
>>>> for a while. But recently I found out that my method of measuring was
>>>> flawed - I measured the time to read into a new shapefile using ogr2ogr,
>>>> but it turns out that can be quite unfair due to the string field length
>>>> dynamic resize that ogr2ogr will do if the strings from input feature
>>>> attributes are of variable length. I've now made some new measurements
>>>> using ogrinfo and the undocumented flag -qq to get a full sequential read.
>>>>
>>>> I've used the shapefiles "gis_osm_buildings_a_free_1" (exploded to
>>>> single poly) and "gis_osm_roads_free_1" from Denmark at
>>>> http://download.geofabrik.de/europe.html as the source, converted to
>>>> respective format, then measured the time it takes to run ogrinfo -qq on
>>>> them. Results (average over three runs):
>>>>
>>>> ## gis_osm_buildings_a_free_1 (2027890 Polygons)
>>>> * SHP: 3800 ms
>>>> * GPKG: 2700 ms
>>>> * FlatGeobuf: 2200 ms
>>>>
>>>> ## gis_osm_roads_free_1 (812547 LineStrings)
>>>> * SHP: 1600 ms
>>>> * GPKG: 1350 ms
>>>> * FlatGeobuf: 800 ms
>>>>
>>>> With that my hope and interest is rekindled. I believe I can fare even
>>>> better against the competition with with spatially filtered searches, will
>>>> hopefully soon have some results on that too.
>>>>
>>>> /Björn
>>>>
>>>> Den sön 9 dec. 2018 kl 20:36 skrev Björn Harrtell <
>>>> bjorn.harrtell at gmail.com>:
>>>>
>>>>> Hi GDAL/OGR folks,
>>>>>
>>>>> In my spare time I've been working on a vector file format called
>>>>> FlatGeobuf (tentatively). The main reason, besides curiosity and learning,
>>>>> I'm putting time into it is that I think shapefile still rules the
>>>>> read/query static data performance game, which is kind of sad, and probably
>>>>> one of the reasons it is still so widely popular. Also, the main competitor
>>>>> (GeoPackage) isn't suitable for streaming access (AFAIK) which shapefiles
>>>>> also handles surprisingly (?) well.
>>>>>
>>>>> By using a performance focused write once binary encoding
>>>>> (flatbuffers), schema constraint and focusing on read/query performance by
>>>>> clustering on an optimal spatial index (Packed Hilbert R-Tree) I hope to be
>>>>> able to beat shapefile performance and at the same time be optimal for
>>>>> streaming/cloud access.
>>>>>
>>>>> I think I'm starting to get somewhere, more details and source is at
>>>>> https://github.com/bjornharrtell/flatgeobuf and I have an early proof
>>>>> of concept driver implementation at
>>>>> https://github.com/bjornharrtell/gdal/tree/flatgeobuf and results are
>>>>> already quite promising - it can do roundtrip read/write and is already
>>>>> quite a bit faster than shapefile. I also have implemented naive read only
>>>>> QGIS provider for experimental purposes.
>>>>>
>>>>> Basically I'm fishing for interest in this effort, hoping that others
>>>>> will see potential in it even if it's "yet another format" and far from
>>>>> final/stable yet. Any feedback is welcome. As I see it, GDAL is a good
>>>>> place for a format specification and reference implementation to incubate.
>>>>>
>>>>> Some additional food for thought that I've had during the
>>>>> experimentation:
>>>>>
>>>>> 1. The main in memory representations of geometry/coordinates seem to
>>>>> be either separate arrays per dimension (GDAL (partially?) and QGIS) or a
>>>>> single array with dimension as stride. I've chosen the latter as of yet but
>>>>> I'm still a bit undecided. There is of course a substantial involved in
>>>>> transforming between the two representations so the situation with two
>>>>> competing models is a bit unfortunate. I'm also not sure about which of
>>>>> these models are objectively "better" than the other?
>>>>>
>>>>> 2. One could get better space efficiency with protobuf instead of
>>>>> flatbuffers, but it has a performance cost. I have not gone far into
>>>>> investigating how much though and one could even reason about supporting
>>>>> both these encodings in a single format specification but it's taking it a
>>>>> bit far I think.
>>>>>
>>>>> 3. Is there a reason to support different packing strategies for the
>>>>> R-Tree or is Packed Hilbert a good compromise (besides it being beautifully
>>>>> simple to implement)?
>>>>>
>>>>> 4. FlatGeobuf is perhaps a too technical name, not catchy enough and
>>>>> has a bad/boring abbreviation. Other candidates I've considered are
>>>>> OpenGeoFile, OpenVectorFile or OpenSpatialFile but I'm undecided. Any
>>>>> ideas? :)
>>>>>
>>>>> Regards,
>>>>>
>>>>> Björn Harrtell
>>>>>
>>>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
> Darafei Praliaskouski
> Support me: http://patreon.com/komzpa
>


-- 
Darafei Praliaskouski
Support me: http://patreon.com/komzpa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190311/7f8798f2/attachment-0001.html>

From bjorn.harrtell at gmail.com  Mon Mar 11 15:07:09 2019
From: bjorn.harrtell at gmail.com (=?UTF-8?Q?Bj=C3=B6rn_Harrtell?=)
Date: Mon, 11 Mar 2019 23:07:09 +0100
Subject: [gdal-dev] FlatGeobuf;
 proposal for a new performance oriented vector file format
In-Reply-To: <CAC8Q8tK4QZ2spKJ_Yh+j98i7GMOf_9KSKFtcngeWXycH3X1GEQ@mail.gmail.com>
References: <CANhDX=b8vn-su_1M-H6KmZBNcWs+iTV2Y2OaDmQJ72N349Z2QA@mail.gmail.com>
 <CANhDX=b_J2b-vxakyFV7WB8qjzvu3APBT_wTRdan5GjcfBq4YA@mail.gmail.com>
 <CANhDX=YaSxDa6NmEQ2nfYmd7NvyqHNun+4agZMiUzzJi_Xa1gQ@mail.gmail.com>
 <CANhDX=a4zzXr-uk6Z6UivS1GHMMnO2rU6ZeengJ2GvVmEaOCEw@mail.gmail.com>
 <CAC8Q8tKrpZybsz4wSYrE=XhqV2sjxPFgqstTq68VRFut+MhyAA@mail.gmail.com>
 <CANhDX=bDnrMnb92A8XJ9Z3fbD1tehVCzJ---Jgxw8C7Eh8FbmA@mail.gmail.com>
 <CAC8Q8tK4QZ2spKJ_Yh+j98i7GMOf_9KSKFtcngeWXycH3X1GEQ@mail.gmail.com>
Message-ID: <CANhDX=YFV5bb_+rKs0nU-dJOnEGg8p=qXnnhL_hwG0QEvt1WUg@mail.gmail.com>

Den mån 11 mars 2019 kl 15:07 skrev Darafei "Komяpa" Praliaskouski <
me at komzpa.net>:

>
>
> On Mon, Mar 11, 2019 at 1:08 AM Björn Harrtell <bjorn.harrtell at gmail.com>
> wrote:
>
>> It would probably be possible to get substantial gains on existing
>> formats that have spatial indexing by making them more optimal/balanced
>> however I see the following major issues:
>>
>> * Not sure how by convention deal with non-updatable indexes
>> (packing/sorting on hilbert or sort-tile-recursive seem inherently static)
>> on formats that are assumed to be mutable
>>
>
> Why does Hilbert indexing sets a requirement for it to be non-updatable?
>

> If it's packed into same tree format, it's going to be updatable just the
> same as the previous version. Yeah, it's going to degrade a bit on changes,
> but if the tool to put sorting back in place is available then it's not a
> big issue?
>

I'm not entirely sure but it seems to me that R-tree algorithms are divided
into static or dynamic ones for good reasons. The static ones have a
predictable structure with near 100% space utilization and I believe
assumptions can be used for performance in the implementation as long as
the structure is kept intact. Dynamic ones are typically more complex
because they need a strategy for tree insertion/balancing.

See https://github.com/mourner/rbush and https://github.com/mourner/flatbush
for contemporary and minimal implementations of the dynamic / static cases
also with reference to the algorithms used.

>
>
>> * GeoPackage cannot benefit from clustering on spatial index (so it will
>> not be possible to "cloud" optimize)
>>
>
> Why? What should it get for it to be possible?
>

I'm taking Evens word for it (see earlier in this thread) but I shouldn't
have written cannot, he wrote it's likely possible but as I interpreted it
quite far from trivial. When Even writes something is not trivial, I
instinctively think it's near impossible. :)


> * Shapefile has several other drawbacks as a format perhaps making it less
>> interesting to invest into
>>
>
> Its killer feature is universal support.
>

Agreed, but I'm saying I don't want to see that being the case forever? :)


> I have wondered several times about these things in relation to PostgreSQL
>> and PostGIS... first thought is why there is no way to mark a table
>> static/immutable in PostgreSQL, it seems to be there would be several
>> general optimization possibilities if it was known that a table cannot be
>> changed, not the least that it would make it possible to construct similar
>> packed R-trees as discussed above.
>>
>
> You probably missed a link I posted,
> https://github.com/glukhovn/postgres/tree/gist_btree_buil
> <https://github.com/glukhovn/postgres/tree/gist_btree_build>d - here a
> GiST is built in similar way, without requiring read onliness of the table.
>
>
>
>> Second thought is how the R-tree is constructed/implemented via gist
>> index (I have not had the brain power/interest to dive into the source to
>> understand it yet) - unless it can be static it should probably optimally
>> be a R*-tree with topological split but I've got indications that it is not.
>>
>
> GiST is just *a* tree on top of support functions. More sophisticated
> versions of tree are limited by what callbacks Postgres provides.
>
>
> /Björn
>
> Den mån 25 feb. 2019 kl 11:06 skrev Darafei "Komяpa" Praliaskouski <
> me at komzpa.net>:
>
>> Hi Björn,
>>
>> Would it make sense to implement it not as a separate format, but as a
>> special convention on top of any of already existing ones?
>> What happens if you sort by Hilbert curve a shapefile or geopackage, and
>> tweak the internals to build indexes in flattish manner?
>>
>> For example, here is a branch of Postgres where GiST index is being built
>> in flat manner. \
>> It does not require any change on user's side, but gets you all the
>> benefits by plainly building 10x faster.
>> https://github.com/glukhovn/postgres/tree/gist_btree_build
>>
>>
>> On Sun, Feb 24, 2019 at 4:59 PM Björn Harrtell <bjorn.harrtell at gmail.com>
>> wrote:
>>
>>> I've now implemented so that the traversal of the R-tree reads nodes on
>>> demand and as suspected it gives a significant boost:
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>>> real 0m0,378s (~ 20% improvement)
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m0,790s (~ 30% improvement)
>>>
>>> I'm now also faster on the reduced window (56 10.1 56.1) beating gpkg:
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>>> gis_osm_buildings_a_free_1_single.gpkg gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m0,305s
>>>
>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.1 56.1
>>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>>> done
>>> real 0m0,242s
>>>
>>> It still remains a TODO to further optimize I/O to read larger blocks if
>>> possible (applies both to R-tree nodes and the feature data itself) and I
>>> think that could prove a very significant performance boost potentially
>>> leaving any competition in the dust. :D
>>>
>>> /Björn
>>>
>>> Den lör 9 feb. 2019 kl 00:08 skrev Björn Harrtell <
>>> bjorn.harrtell at gmail.com>:
>>>
>>>> I've now implemented spatial filtering (at GDAL fork
>>>> https://github.com/bjornharrtell/gdal/tree/flatgeobuf) and results are
>>>> promising, for two test cases about 3,5-4 times faster than shapefile with
>>>> the same content. I've used these command lines to measure total time over
>>>> 10 iterations for each format and dataset:
>>>>
>>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>>> gis_osm_roads_free_1.shp gis_osm_roads_free_1; done
>>>> real 0m1,940s
>>>>
>>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>>> gis_osm_roads_free_1.gpkg gis_osm_roads_free_1; done
>>>> real 0m0,750s
>>>>
>>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>>> gis_osm_roads_free_1.fgb gis_osm_roads_free_1; done
>>>> real 0m0,461s
>>>>
>>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>>> gis_osm_buildings_a_free_1_single.shp gis_osm_buildings_a_free_1_single;
>>>> done
>>>> real 0m4,381s
>>>>
>>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>>> gis_osm_buildings_a_free_1_single.gpkg gis_osm_buildings_a_free_1_single;
>>>> done
>>>> real 0m1,624s
>>>>
>>>> > time for i in {1..10}; do ogrinfo -qq -spat 10 56 10.2 56.2
>>>> gis_osm_buildings_a_free_1_single.fgb gis_osm_buildings_a_free_1_single;
>>>> done
>>>> real 0m1,113s
>>>>
>>>> The bounds 10 56 10.2 56.2 contains 21525 out of the 812547 total
>>>> features for gis_osm_roads_free_1 and 57699 out of 2027890 features for
>>>> gis_osm_buildings_a_free_1_single.
>>>>
>>>> And there is definitely room for optimization. The implementation is
>>>> naive and reads the whole R-tree in memory and does not yet read
>>>> consecutive features (common case as the R-tree is balanced) in larger I/O
>>>> blocks which I think can be significant. If I reduce the extent to 10 56
>>>> 10.1 56.1 GPKG is actually fair bit faster which I think is due to it being
>>>> able to read the index partially.
>>>>
>>>> /Björn
>>>>
>>>> Den tis 22 jan. 2019 kl 18:43 skrev Björn Harrtell <
>>>> bjorn.harrtell at gmail.com>:
>>>>
>>>>> After posting about my experimental format I realized that I lack
>>>>> numbers on the potential performance, so I tried to make some more or less
>>>>> scientific measuring. The results was disappointing, reaching similar
>>>>> performance as shapefile for full sequential reads and so I lost interest
>>>>> for a while. But recently I found out that my method of measuring was
>>>>> flawed - I measured the time to read into a new shapefile using ogr2ogr,
>>>>> but it turns out that can be quite unfair due to the string field length
>>>>> dynamic resize that ogr2ogr will do if the strings from input feature
>>>>> attributes are of variable length. I've now made some new measurements
>>>>> using ogrinfo and the undocumented flag -qq to get a full sequential read.
>>>>>
>>>>> I've used the shapefiles "gis_osm_buildings_a_free_1" (exploded to
>>>>> single poly) and "gis_osm_roads_free_1" from Denmark at
>>>>> http://download.geofabrik.de/europe.html as the source, converted to
>>>>> respective format, then measured the time it takes to run ogrinfo -qq on
>>>>> them. Results (average over three runs):
>>>>>
>>>>> ## gis_osm_buildings_a_free_1 (2027890 Polygons)
>>>>> * SHP: 3800 ms
>>>>> * GPKG: 2700 ms
>>>>> * FlatGeobuf: 2200 ms
>>>>>
>>>>> ## gis_osm_roads_free_1 (812547 LineStrings)
>>>>> * SHP: 1600 ms
>>>>> * GPKG: 1350 ms
>>>>> * FlatGeobuf: 800 ms
>>>>>
>>>>> With that my hope and interest is rekindled. I believe I can fare even
>>>>> better against the competition with with spatially filtered searches, will
>>>>> hopefully soon have some results on that too.
>>>>>
>>>>> /Björn
>>>>>
>>>>> Den sön 9 dec. 2018 kl 20:36 skrev Björn Harrtell <
>>>>> bjorn.harrtell at gmail.com>:
>>>>>
>>>>>> Hi GDAL/OGR folks,
>>>>>>
>>>>>> In my spare time I've been working on a vector file format called
>>>>>> FlatGeobuf (tentatively). The main reason, besides curiosity and learning,
>>>>>> I'm putting time into it is that I think shapefile still rules the
>>>>>> read/query static data performance game, which is kind of sad, and probably
>>>>>> one of the reasons it is still so widely popular. Also, the main competitor
>>>>>> (GeoPackage) isn't suitable for streaming access (AFAIK) which shapefiles
>>>>>> also handles surprisingly (?) well.
>>>>>>
>>>>>> By using a performance focused write once binary encoding
>>>>>> (flatbuffers), schema constraint and focusing on read/query performance by
>>>>>> clustering on an optimal spatial index (Packed Hilbert R-Tree) I hope to be
>>>>>> able to beat shapefile performance and at the same time be optimal for
>>>>>> streaming/cloud access.
>>>>>>
>>>>>> I think I'm starting to get somewhere, more details and source is at
>>>>>> https://github.com/bjornharrtell/flatgeobuf and I have an early
>>>>>> proof of concept driver implementation at
>>>>>> https://github.com/bjornharrtell/gdal/tree/flatgeobuf and results
>>>>>> are already quite promising - it can do roundtrip read/write and is already
>>>>>> quite a bit faster than shapefile. I also have implemented naive read only
>>>>>> QGIS provider for experimental purposes.
>>>>>>
>>>>>> Basically I'm fishing for interest in this effort, hoping that others
>>>>>> will see potential in it even if it's "yet another format" and far from
>>>>>> final/stable yet. Any feedback is welcome. As I see it, GDAL is a good
>>>>>> place for a format specification and reference implementation to incubate.
>>>>>>
>>>>>> Some additional food for thought that I've had during the
>>>>>> experimentation:
>>>>>>
>>>>>> 1. The main in memory representations of geometry/coordinates seem to
>>>>>> be either separate arrays per dimension (GDAL (partially?) and QGIS) or a
>>>>>> single array with dimension as stride. I've chosen the latter as of yet but
>>>>>> I'm still a bit undecided. There is of course a substantial involved in
>>>>>> transforming between the two representations so the situation with two
>>>>>> competing models is a bit unfortunate. I'm also not sure about which of
>>>>>> these models are objectively "better" than the other?
>>>>>>
>>>>>> 2. One could get better space efficiency with protobuf instead of
>>>>>> flatbuffers, but it has a performance cost. I have not gone far into
>>>>>> investigating how much though and one could even reason about supporting
>>>>>> both these encodings in a single format specification but it's taking it a
>>>>>> bit far I think.
>>>>>>
>>>>>> 3. Is there a reason to support different packing strategies for the
>>>>>> R-Tree or is Packed Hilbert a good compromise (besides it being beautifully
>>>>>> simple to implement)?
>>>>>>
>>>>>> 4. FlatGeobuf is perhaps a too technical name, not catchy enough and
>>>>>> has a bad/boring abbreviation. Other candidates I've considered are
>>>>>> OpenGeoFile, OpenVectorFile or OpenSpatialFile but I'm undecided. Any
>>>>>> ideas? :)
>>>>>>
>>>>>> Regards,
>>>>>>
>>>>>> Björn Harrtell
>>>>>>
>>>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>> --
>> Darafei Praliaskouski
>> Support me: http://patreon.com/komzpa
>>
>
>
> --
> Darafei Praliaskouski
> Support me: http://patreon.com/komzpa
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190311/2fd0ddc1/attachment-0001.html>

From nicolas.cadieux at archeotec.ca  Mon Mar 11 22:56:34 2019
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Tue, 12 Mar 2019 01:56:34 -0400
Subject: [gdal-dev] ReadRaster memory hit
Message-ID: <E7C2B025-553A-40B6-A9ED-C8E57098FC1D@archeotec.ca>

Hi,

I am writing a python script and I need to read certain pixels form a  huge Hyperspectral images with  over 200 band.  If I use the method below from the tutorial,  if I understand correctly, memory hits will only come from what I place in the buffer? In this case, only one line of pixels? Therefore, even if the raster is huge, only that one line of pixels will actually be in memory?

Thanks
Nicolas


scanline = band.ReadRaster(xoff=0, yoff=0,
xsize=band.XSize, ysize=1,
buf_xsize=band.XSize, buf_ysize=1,
buf_type=gdal.GDT_Float32)

From even.rouault at spatialys.com  Tue Mar 12 04:58:17 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Mar 2019 12:58:17 +0100
Subject: [gdal-dev] ReadRaster memory hit
In-Reply-To: <E7C2B025-553A-40B6-A9ED-C8E57098FC1D@archeotec.ca>
References: <E7C2B025-553A-40B6-A9ED-C8E57098FC1D@archeotec.ca>
Message-ID: <11503331.a73kKzGOpv@even-i700>

On mardi 12 mars 2019 01:56:34 CET Nicolas Cadieux wrote:
> Hi,
> 
> I am writing a python script and I need to read certain pixels form a  huge
> Hyperspectral images with  over 200 band.  If I use the method below from
> the tutorial,  if I understand correctly, memory hits will only come from
> what I place in the buffer? In this case, only one line of pixels?
> Therefore, even if the raster is huge, only that one line of pixels will
> actually be in memory?

In theory yes, but that might depend on the driver and actual data 
organization. If the data is pixel-interleaved, then the driver might buffer 
the data for the line for all the bands of the raster, even if you request 
reading just one like you do.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nicolas.cadieux at archeotec.ca  Tue Mar 12 05:49:00 2019
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Tue, 12 Mar 2019 08:49:00 -0400
Subject: [gdal-dev] ReadRaster memory hit
In-Reply-To: <11503331.a73kKzGOpv@even-i700>
References: <E7C2B025-553A-40B6-A9ED-C8E57098FC1D@archeotec.ca>
 <11503331.a73kKzGOpv@even-i700>
Message-ID: <60A7CD63-27F3-44CE-8DEA-189B911CCC66@archeotec.ca>

Thanks again Even,

Is there a way I can test for this data organization and warn the user? I know very little about this aspect but I enjoy the learning curve.

As a follow up (if I may abuse!),  I have one file with thousands points and one raster with hundreds of bands, both huge. 

I have been querying the raster using the geotransform parameters one band at a time using a pool of workers “p.imap()” to call a function (python 2.7).   This way, I can multithread 6 bands at a time. 

Would it be a better approach to loop through the 200 bands inside this function?  So basically, is it faster to loop the 200 bands or to loop the thousands of points one band at a time inside this function? 

Merci, Your wisdom and help is always appreciated!
Nicolas

> Le 12 mars 2019 à 07:58, Even Rouault <even.rouault at spatialys.com> a écrit :
> 
>> On mardi 12 mars 2019 01:56:34 CET Nicolas Cadieux wrote:
>> Hi,
>> 
>> I am writing a python script and I need to read certain pixels form a  huge
>> Hyperspectral images with  over 200 band.  If I use the method below from
>> the tutorial,  if I understand correctly, memory hits will only come from
>> what I place in the buffer? In this case, only one line of pixels?
>> Therefore, even if the raster is huge, only that one line of pixels will
>> actually be in memory?
> 
> In theory yes, but that might depend on the driver and actual data 
> organization. If the data is pixel-interleaved, then the driver might buffer 
> the data for the line for all the bands of the raster, even if you request 
> reading just one like you do.
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From diregola at gmail.com  Tue Mar 12 07:06:11 2019
From: diregola at gmail.com (Margherita Di Leo)
Date: Tue, 12 Mar 2019 15:06:11 +0100
Subject: [gdal-dev] compiling gdal with netcdf support - broken links on wiki
Message-ID: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>

Hi,

I was looking for instructions to compile gdal with netcdf support and
ended up here [1], but I noticed that the links to netcdf library and to
quick instructions on how to compile gdal against it appear both broken. I
tried to install netcdf package on fedora but it seems to be the wrong one
because I can't convince gdal to grant support to it... Any pointer
appreciated

Thanks in advance
Kind regards,



[1] https://trac.osgeo.org/gdal/wiki/NetCDF

-- 
Margherita Di Leo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190312/c34e660d/attachment.html>

From sebastic at xs4all.nl  Tue Mar 12 07:29:09 2019
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 12 Mar 2019 15:29:09 +0100
Subject: [gdal-dev] compiling gdal with netcdf support - broken links on
 wiki
In-Reply-To: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>
References: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>
Message-ID: <eb3612335f30b550d783690023195d38@xs4all.nl>

On 2019-03-12 15:06, Margherita Di Leo wrote:
> I was looking for instructions to compile gdal with netcdf support and
> ended up here [1], but I noticed that the links to netcdf library and 
> to
> quick instructions on how to compile gdal against it appear both 
> broken. I
> tried to install netcdf package on fedora but it seems to be the wrong 
> one
> because I can't convince gdal to grant support to it... Any pointer
> appreciated

Have a look at the gdal package spec [0], it uses the netcdf-devel 
package for NetCDF support and hacks the configure script to use it [1]:

  sed -i 's|-L\$with_netcdf -L\$with_netcdf/lib -lnetcdf|-lnetcdf|g' 
configure

[0] https://src.fedoraproject.org/cgit/rpms/gdal.git/tree/gdal.spec
[1] https://src.fedoraproject.org/cgit/rpms/gdal.git/tree/gdal.spec#n385

Kind Regards,

Bas

From julien.demaria at acri-st.fr  Tue Mar 12 07:28:28 2019
From: julien.demaria at acri-st.fr (Julien Demaria)
Date: Tue, 12 Mar 2019 14:28:28 +0000
Subject: [gdal-dev] compiling gdal with netcdf support - broken links on
 wiki
In-Reply-To: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>
References: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>
Message-ID: <3B970FB76033264EB34479EC8A365E110437CE3F1A@vwiexc030.acri.local>

Hi Margherita,

I think you need to install the netcdf-devel fedora package which contains C header files needed to compile GDAL NetCDF support.

Julien


De : gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] De la part de Margherita Di Leo
Envoyé : mardi 12 mars 2019 15:06
À : gdal-dev at lists.osgeo.org
Objet : [gdal-dev] compiling gdal with netcdf support - broken links on wiki

Hi,

I was looking for instructions to compile gdal with netcdf support and ended up here [1], but I noticed that the links to netcdf library and to quick instructions on how to compile gdal against it appear both broken. I tried to install netcdf package on fedora but it seems to be the wrong one because I can't convince gdal to grant support to it... Any pointer appreciated

Thanks in advance
Kind regards,



[1] https://trac.osgeo.org/gdal/wiki/NetCDF

--
Margherita Di Leo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190312/af9ee497/attachment-0001.html>

From dhdeangelis at comhem.se  Tue Mar 12 07:55:36 2019
From: dhdeangelis at comhem.se (=?ISO-8859-1?Q?Hern=E1n?=)
Date: Tue, 12 Mar 2019 15:55:36 +0100
Subject: [gdal-dev] Ang: compiling gdal with netcdf support - broken links
 on wiki
References: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>
Message-ID: <p4qoah-rtmbqmojlgizxwf91k-pc9nuf-agzi5-ki83j8-2rw76a-yvk3pl85g4bukiyrnt-orsxri-9eb2co-pvh2d3mw528n-qos548-v1pojsiw5s9w-wam2fu-jg0m2it4np53-rl5krqhjrmll-jd8y2l.1552402536312@email.android.com>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190312/efc35434/attachment.html>

From diregola at gmail.com  Tue Mar 12 09:17:41 2019
From: diregola at gmail.com (Margherita Di Leo)
Date: Tue, 12 Mar 2019 17:17:41 +0100
Subject: [gdal-dev] compiling gdal with netcdf support - broken links on
	wiki
In-Reply-To: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>
References: <CABa=8QqJ4k8NtvuF67bxBtObsNBwR+i3wvsLqr751agz7SHavQ@mail.gmail.com>
Message-ID: <CABa=8QpwSoV_DFbtj1NJBJp1iTYEDd7732AYVVA8qnr5pK=W5w@mail.gmail.com>

Thanks everyone, gdal-devel package was indeed sufficient to get netcdf
support.

Kind regards,

On Tue, Mar 12, 2019 at 3:06 PM Margherita Di Leo <diregola at gmail.com>
wrote:

> Hi,
>
> I was looking for instructions to compile gdal with netcdf support and
> ended up here [1], but I noticed that the links to netcdf library and to
> quick instructions on how to compile gdal against it appear both broken. I
> tried to install netcdf package on fedora but it seems to be the wrong one
> because I can't convince gdal to grant support to it... Any pointer
> appreciated
>
> Thanks in advance
> Kind regards,
>
>
>
> [1] https://trac.osgeo.org/gdal/wiki/NetCDF
>
> --
> Margherita Di Leo
>


-- 
Margherita Di Leo
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190312/c3dd874a/attachment.html>

From patrick.mckendree.young at gmail.com  Tue Mar 12 15:42:34 2019
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Tue, 12 Mar 2019 16:42:34 -0600
Subject: [gdal-dev] gdal.BuildVRT with an empty destination
Message-ID: <CADXYQQ7L8YBcRyaQodTkOYC3U54gSQsXN7bZFccihUDxBQPcVA@mail.gmail.com>

Hi all,

I was browsing some GDAL test cases and came across some tests like so:

ds = gdal.BuildVRT('',...)

aka the destination is an empty string.  Is the returned dataset a purely
in memory object in this case?  I assume it is safe to use like any other
dataset; some of the other VRT related tests are using "/vsimem/..." as the
destination, wasn't sure if one form should be prefered over another for
quick in memory vrt building.

Thanks,
Patrick
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190312/a83175c9/attachment.html>

From even.rouault at spatialys.com  Wed Mar 13 02:37:34 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Mar 2019 10:37:34 +0100
Subject: [gdal-dev] gdal.BuildVRT with an empty destination
In-Reply-To: <CADXYQQ7L8YBcRyaQodTkOYC3U54gSQsXN7bZFccihUDxBQPcVA@mail.gmail.com>
References: <CADXYQQ7L8YBcRyaQodTkOYC3U54gSQsXN7bZFccihUDxBQPcVA@mail.gmail.com>
Message-ID: <1580243.ZqWYP4i12R@even-i700>

On mardi 12 mars 2019 16:42:34 CET Patrick Young wrote:
> Hi all,
> 
> I was browsing some GDAL test cases and came across some tests like so:
> 
> ds = gdal.BuildVRT('',...)
> 
> aka the destination is an empty string.  Is the returned dataset a purely
> in memory object in this case?  I assume it is safe to use like any other
> dataset; some of the other VRT related tests are using "/vsimem/..." as the
> destination, wasn't sure if one form should be prefered over another for
> quick in memory vrt building.
> 

If you use an empty string as the VRT filename, then it is not serialized at 
all when closing it, so you can't reopen it. You must use the dataset handle 
returned by gdal.BuildVRT() directly. Once the handle is closed, all 
associated memory is freed.

If using '/vsimem/foo.vrt', then the VRT XML will be serialized in this 
filename, and you can re-open it later in the same process. And possibly 
gdal.Unlink() the file once done with it to clear memory (if using loops with 
unique filnemames, etc)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From patrick.mckendree.young at gmail.com  Wed Mar 13 08:38:13 2019
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Wed, 13 Mar 2019 09:38:13 -0600
Subject: [gdal-dev] gdal.BuildVRT with an empty destination
In-Reply-To: <1580243.ZqWYP4i12R@even-i700>
References: <CADXYQQ7L8YBcRyaQodTkOYC3U54gSQsXN7bZFccihUDxBQPcVA@mail.gmail.com>
 <1580243.ZqWYP4i12R@even-i700>
Message-ID: <CADXYQQ5SWSMyNT5TcuvjYQdZzWnhTONN7afUAJ=ASFJ4+BPGiA@mail.gmail.com>

Thanks Even, this is awesome functionality! Definitely makes it even easier
to work with VRTs in memory!

On Wed, Mar 13, 2019 at 3:37 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> On mardi 12 mars 2019 16:42:34 CET Patrick Young wrote:
> > Hi all,
> >
> > I was browsing some GDAL test cases and came across some tests like so:
> >
> > ds = gdal.BuildVRT('',...)
> >
> > aka the destination is an empty string.  Is the returned dataset a purely
> > in memory object in this case?  I assume it is safe to use like any other
> > dataset; some of the other VRT related tests are using "/vsimem/..." as
> the
> > destination, wasn't sure if one form should be prefered over another for
> > quick in memory vrt building.
> >
>
> If you use an empty string as the VRT filename, then it is not serialized
> at
> all when closing it, so you can't reopen it. You must use the dataset
> handle
> returned by gdal.BuildVRT() directly. Once the handle is closed, all
> associated memory is freed.
>
> If using '/vsimem/foo.vrt', then the VRT XML will be serialized in this
> filename, and you can re-open it later in the same process. And possibly
> gdal.Unlink() the file once done with it to clear memory (if using loops
> with
> unique filnemames, etc)
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190313/b4125c8f/attachment.html>

From even.rouault at spatialys.com  Wed Mar 13 15:49:41 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 13 Mar 2019 23:49:41 +0100
Subject: [gdal-dev] libgeotiff 1.5.0 release candidate
Message-ID: <1725326.jxJeg1MGks@even-i700>

Hi,

I've prepared a libgeotiff 1.5.0 release candidate, aka "libgeotiff freed from 
CSV files". So download and try:

https://download.osgeo.org/geotiff/libgeotiff/libgeotiff-1.5.0RC1.tar.gz
https://download.osgeo.org/geotiff/libgeotiff/libgeotiff-1.5.0RC1.zip

If nothing serious is reported, I'll issue a motion next week to MetaCRS for 
offcial adoption.

The news are:
* Require PROJ >= 6 dependency
* Remove all CSV files used by geo_normalize API, since libgeotiff now relies
  on PROJ database for EPSG CRS definitions.
* geo_normalize.c: SetGTParmIds(): use ProjStraightVertPoleLongGeoKey for 
CT_PolarStereographic
* geo_normalize.c: report StdParallel1 for Mercator_2SP when a PCS code is 
used
* geo_normalize.c: fix support for Laborde Oblique Mercator
* listgeo: use PROJ database to display non-hardcoded values of a number of 
keys

For info, GDAL 2.4.0 builds against it (after re-adding a few symbols that are 
no-op now) and seems to work properly in quick basic manual	 tests, although 
moving the whole stack will require further advances in PROJ 6.0 adoption. The 
natural set of compatible versions (and the one actually tested by continuous 
integration) will be more GDAL 2.5.0 + libgeotiff 1.5.0 + PROJ 6.0

Best regards,

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Jon.Morris at jbarisk.com  Thu Mar 14 02:00:07 2019
From: Jon.Morris at jbarisk.com (Jon Morris)
Date: Thu, 14 Mar 2019 09:00:07 +0000
Subject: [gdal-dev] Intermittent raster read/write error
In-Reply-To: <LO2P123MB1935F080C80288A2400E693A824C0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>
References: <LO2P123MB1935F080C80288A2400E693A824C0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <LO2P123MB1935182F4BD24289BE973BFA824B0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>

Quick update:

I haven't found the cause of this error (or a reliable repro case), but have found that changing how often we call ds.FlushCache() makes it go away.

After a previous bug fix*, we changed to flushing the cache after every tile. Reverting it back to a longer interval (every 1e6 tiles) meant that we didn't see this write error.


* Changing the flush interval was due to another error though - if you mistakenly open the output dataset as read-only, there is no indication until the process is finished, or you call FlushCache, whichever is sooner. Is there a better way to determine that a write has failed? We've enabled gdal.UseExceptions, but if you call rb.WriteArray() on a read-only dataset, no error is raised. There is a write to stderr, but no exception.

Jon

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Jon Morris
Sent: 07 March 2019 11:39
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] Intermittent raster read/write error

Hello all,

I've had an intermittent error with reading and writing rasters and wondered if anyone else had seen something similar.

Tl;dr:
When writing tiles of data to a raster, sometimes one write will cause subsequent reads of that region to fail. This includes when reading the whole raster at once with ReadAsArray().

Background:
We have a python toolkit that uses GDAL functions on a range of GIS data, supported on both Windows and Linux. Raster processing is tiled, usually in blocks of 256 pixels. Our raster merge tool usually opens the files as a vrt then processes one block at a time. This is really inefficient when merging hundreds of files at once, as it requires a multi-dimensional numpy array. For this scenario, we calculate the total extent of the input rasters, create a blank output raster, then merge the input files with this raster one-by-one.

The problem:
Sometimes the write operation fails in some way, so that the next read fails. I've tried reading one of these bad rasters and it turned out there was just one bad tile, i.e. ds.ReadAsArray(xoff,yoff,xsize,ysize) works if you request some data that does not include the bad region. When I wrote nodata values to this one tile, the whole raster could be read again.

I've seen this happen for different datasets on different platforms but it is hard to reproduce the error exactly. If you leave out one of the input files, or change the output extent slightly, the problem does not occur. I'm suspecting it's a floating point rounding error, but can't really tell.

I'm still trying to track down the cause really, but I just wondered if this sounded familiar to anyone and/or if there were any solutions.

Thanks,

Jon


Jon Morris
Software Developer

Skype<sip:jon.morris at jbarisk.com>


T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png] <https://www.linkedin.com/in/jon-morris-a2897b4/>  [Follow us on Twitter] <https://twitter.com/jbarisk>

Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, South Barn, Broughton Hall, Skipton, North Yorkshire, BD23 3AE, Telephone: +441756799919


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190314/80d54737/attachment.html>

From rjhale at northrivergeographic.com  Thu Mar 14 08:11:42 2019
From: rjhale at northrivergeographic.com (Randal Hale)
Date: Thu, 14 Mar 2019 11:11:42 -0400
Subject: [gdal-dev] Export to Geopackage
Message-ID: <f55d0036-34cd-1925-2788-b6e2f3513805@northrivergeographic.com>

If I export a postgis table to geopackage:

ogr2ogr -f GPKG  export.gpkg  PG:"host=gis1 user=rjhale dbname=dbname 
password=pass" -nln "addresspoints" -sql "select id, geom, addresses"

I check the geopackage:

rjhale at gis7:~/temp$ ogrinfo -so -al TCStransport.gpkg

INFO: Open of `TCStransport.gpkg'

       using driver `GPKG' successful.

Layer name: addresspoints

*Geometry: Unknown (any)*

Feature Count: 23735

Any idea on what I'm doing wrong - the unknown geometry seems to be 
causing an issue in another process. If I export without the SQL 
statement everything is fine.

Randy


-- 
--
Randal Hale
rjhale at northrivergeographic.com
https://www.northrivergeographic.com
(423)653-3611

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190314/f773189c/attachment-0001.html>

From theduckylittle at gmail.com  Thu Mar 14 08:15:26 2019
From: theduckylittle at gmail.com (Dan Little)
Date: Thu, 14 Mar 2019 10:15:26 -0500
Subject: [gdal-dev] Export to Geopackage
In-Reply-To: <CABqPoBZr14dp9HDk97XUkb9g47GSd6aBpT2Jdmo12xYjenRz1g@mail.gmail.com>
References: <f55d0036-34cd-1925-2788-b6e2f3513805@northrivergeographic.com>
 <CABqPoBZr14dp9HDk97XUkb9g47GSd6aBpT2Jdmo12xYjenRz1g@mail.gmail.com>
Message-ID: <CABqPoBaRMpuOeihYWpFTUfaBB3bnxd54bP6-WXF+n6xcEzSUTA@mail.gmail.com>

Set `-nlt` ?

On Thu, Mar 14, 2019 at 10:12 AM Dan Little <theduckylittle at gmail.com> wrote:
>
> Set `-nlt` ?
>
> On Thu, Mar 14, 2019 at 10:12 AM Randal Hale
> <rjhale at northrivergeographic.com> wrote:
> >
> > If I export a postgis table to geopackage:
> >
> > ogr2ogr -f GPKG  export.gpkg  PG:"host=gis1 user=rjhale dbname=dbname password=pass" -nln "addresspoints" -sql "select id, geom, addresses"
> >
> > I check the geopackage:
> >
> > rjhale at gis7:~/temp$ ogrinfo -so -al TCStransport.gpkg
> >
> > INFO: Open of `TCStransport.gpkg'
> >
> >       using driver `GPKG' successful.
> >
> > Layer name: addresspoints
> >
> > Geometry: Unknown (any)
> >
> > Feature Count: 23735
> >
> > Any idea on what I'm doing wrong - the unknown geometry seems to be causing an issue in another process. If I export without the SQL statement everything is fine.
> >
> > Randy
> >
> >
> > --
> > --
> > Randal Hale
> > rjhale at northrivergeographic.com
> > https://www.northrivergeographic.com
> > (423)653-3611
> >
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev

From even.rouault at spatialys.com  Thu Mar 14 08:16:25 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2019 16:16:25 +0100
Subject: [gdal-dev] Export to Geopackage
In-Reply-To: <f55d0036-34cd-1925-2788-b6e2f3513805@northrivergeographic.com>
References: <f55d0036-34cd-1925-2788-b6e2f3513805@northrivergeographic.com>
Message-ID: <2116481.Ggbs0NPrJz@even-i700>

On jeudi 14 mars 2019 11:11:42 CET Randal Hale wrote:
> If I export a postgis table to geopackage:
> 
> ogr2ogr -f GPKG  export.gpkg  PG:"host=gis1 user=rjhale dbname=dbname
> password=pass" -nln "addresspoints" -sql "select id, geom, addresses"
> 
> I check the geopackage:
> 
> rjhale at gis7:~/temp$ ogrinfo -so -al TCStransport.gpkg
> 
> INFO: Open of `TCStransport.gpkg'
> 
>        using driver `GPKG' successful.
> 
> Layer name: addresspoints
> 
> *Geometry: Unknown (any)*
> 
> Feature Count: 23735
> 
> Any idea on what I'm doing wrong - the unknown geometry seems to be
> causing an issue in another process. If I export without the SQL
> statement everything is fine.

Randy,

You aren't doing something wrong. This is just that the PostGIS driver cannot 
retrieve the layer geometry type if using a SQL statement (could perhaps be 
improved in simple situations where selecting from a single table without join 
or transformation on the geometry). You can force the output layer geometry 
type by adding -nlt POINT|LINESTRING|POLYGON|etc.

See doc of -nlt in https://gdal.org/ogr2ogr.html

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Thu Mar 14 08:22:04 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 14 Mar 2019 12:22:04 -0300
Subject: [gdal-dev] libgeotiff 1.5.0 release candidate
In-Reply-To: <1725326.jxJeg1MGks@even-i700>
References: <1725326.jxJeg1MGks@even-i700>
Message-ID: <aabd9d0b-efa5-52e3-583c-bcebe721aa52@gatewaygeomatics.com>

On 2019-03-13 7:49 PM, Even Rouault wrote:
> 
> The
> natural set of compatible versions (and the one actually tested by continuous
> integration) will be more GDAL 2.5.0 + libgeotiff 1.5.0 + PROJ 6.0
> 

Thank you for explaining the compatible versions.  (and the many great 
changes)  -jeff



From even.rouault at spatialys.com  Thu Mar 14 09:17:17 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Mar 2019 17:17:17 +0100
Subject: [gdal-dev] Intermittent raster read/write error
In-Reply-To: <LO2P123MB1935182F4BD24289BE973BFA824B0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>
References: <LO2P123MB1935F080C80288A2400E693A824C0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>
 <LO2P123MB1935182F4BD24289BE973BFA824B0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <1820015.uASioj1Xtg@even-i700>

Jon,

> Is there a better way to determine that a write has failed? We've enabled
> gdal.UseExceptions, but if you call rb.WriteArray() on a read-only dataset,
> no error is raised. There is a write to stderr, but no exception.

The RasterIO() method called by WriteArray() didn't check access mode, so for 
small enough write w.r.t GDAL block cache, the error was only caught when 
dirty blocks in cache were actually written to storage by explicit 
FlushCache() or dataset closing.
I've a candidate fix https://github.com/OSGeo/gdal/pull/1364 to address that.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From rjhale at northrivergeographic.com  Thu Mar 14 12:36:12 2019
From: rjhale at northrivergeographic.com (Randal Hale)
Date: Thu, 14 Mar 2019 15:36:12 -0400
Subject: [gdal-dev] Export to Geopackage
In-Reply-To: <2116481.Ggbs0NPrJz@even-i700>
References: <f55d0036-34cd-1925-2788-b6e2f3513805@northrivergeographic.com>
 <2116481.Ggbs0NPrJz@even-i700>
Message-ID: <cf882332-59f9-1f2e-2a28-8b40d834a5bc@northrivergeographic.com>

Much thanks to you and Dan again - this ogr statement keeps growing in 
complexity and I completely forgot about the nlt option.

Thanks!

Randy

On 3/14/19 11:16 AM, Even Rouault wrote:
> On jeudi 14 mars 2019 11:11:42 CET Randal Hale wrote:
>> If I export a postgis table to geopackage:
>>
>> ogr2ogr -f GPKG  export.gpkg  PG:"host=gis1 user=rjhale dbname=dbname
>> password=pass" -nln "addresspoints" -sql "select id, geom, addresses"
>>
>> I check the geopackage:
>>
>> rjhale at gis7:~/temp$ ogrinfo -so -al TCStransport.gpkg
>>
>> INFO: Open of `TCStransport.gpkg'
>>
>>         using driver `GPKG' successful.
>>
>> Layer name: addresspoints
>>
>> *Geometry: Unknown (any)*
>>
>> Feature Count: 23735
>>
>> Any idea on what I'm doing wrong - the unknown geometry seems to be
>> causing an issue in another process. If I export without the SQL
>> statement everything is fine.
> Randy,
>
> You aren't doing something wrong. This is just that the PostGIS driver cannot
> retrieve the layer geometry type if using a SQL statement (could perhaps be
> improved in simple situations where selecting from a single table without join
> or transformation on the geometry). You can force the output layer geometry
> type by adding -nlt POINT|LINESTRING|POLYGON|etc.
>
> See doc of -nlt in https://gdal.org/ogr2ogr.html
>
> Even
>
>
-- 
--
Randal Hale
rjhale at northrivergeographic.com
https://www.northrivergeographic.com
(423)653-3611


From even.rouault at spatialys.com  Fri Mar 15 05:52:37 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Mar 2019 13:52:37 +0100
Subject: [gdal-dev] GDAL 2.4.1 RC1 available
Message-ID: <2653712.40BWWaRl1X@even-i700>

Hi,

I have prepared a GDAL/OGR 2.4.1 release candidate.

Peek up an archive among the following ones (by ascending size):

  http://download.osgeo.org/gdal/2.4.1/gdal-2.4.1rc1.tar.xz
  http://download.osgeo.org/gdal/2.4.1/gdal-2.4.1rc1.tar.gz
  http://download.osgeo.org/gdal/2.4.1/gdal241rc1.zip

A snapshot of the gdalautotest suite is also available :

  http://download.osgeo.org/gdal/2.4.1/gdalautotest-2.4.1rc1.tar.gz
  http://download.osgeo.org/gdal/2.4.1/gdalautotest-2.4.1rc1.zip

GDAL-GRASS plugin (unmodified):

    http://download.osgeo.org/gdal/2.4.1/gdal-grass-2.4.1.tar.gz

The NEWS file is here :

  http://trac.osgeo.org/gdal/wiki/Release/2.4.1-News

I'll call for a vote promoting it to final in the middle of next week if no
serious problems are reported before.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mofoyoda at gmail.com  Fri Mar 15 08:14:48 2019
From: mofoyoda at gmail.com (Nikolai Bezdna)
Date: Fri, 15 Mar 2019 18:14:48 +0300
Subject: [gdal-dev] vsistdin and VRT
Message-ID: <A53333D3-9667-4AAC-9BB7-A04087460368@gmail.com>

Can vsistdin be used in VRT source definition?
So that one can use output from another utility (osmium in my case) as a valid OGR source.

Nick

From Jon.Morris at jbarisk.com  Fri Mar 15 08:19:49 2019
From: Jon.Morris at jbarisk.com (Jon Morris)
Date: Fri, 15 Mar 2019 15:19:49 +0000
Subject: [gdal-dev] Intermittent raster read/write error
In-Reply-To: <1820015.uASioj1Xtg@even-i700>
References: <LO2P123MB1935F080C80288A2400E693A824C0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>
 <LO2P123MB1935182F4BD24289BE973BFA824B0@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>
 <1820015.uASioj1Xtg@even-i700>
Message-ID: <LO2P123MB1935ABC0C9AE3EC5B2252BC782440@LO2P123MB1935.GBRP123.PROD.OUTLOOK.COM>

Great. Many thanks for the quick fix and for all your great work so far!

Jon

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com>
Sent: 14 March 2019 16:17
To: gdal-dev at lists.osgeo.org
Cc: Jon Morris <Jon.Morris at jbarisk.com>
Subject: Re: [gdal-dev] Intermittent raster read/write error

Jon,

> Is there a better way to determine that a write has failed? We've
> enabled gdal.UseExceptions, but if you call rb.WriteArray() on a
> read-only dataset, no error is raised. There is a write to stderr, but no exception.

The RasterIO() method called by WriteArray() didn't check access mode, so for small enough write w.r.t GDAL block cache, the error was only caught when dirty blocks in cache were actually written to storage by explicit
FlushCache() or dataset closing.
I've a candidate fix https://github.com/OSGeo/gdal/pull/1364 to address that.

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com
T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png] <https://www.linkedin.com/in/jon-morris-a2897b4/>  [Follow us on Twitter] <https://twitter.com/jbarisk>

From even.rouault at spatialys.com  Fri Mar 15 08:26:16 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Mar 2019 16:26:16 +0100
Subject: [gdal-dev] vsistdin and VRT
In-Reply-To: <A53333D3-9667-4AAC-9BB7-A04087460368@gmail.com>
References: <A53333D3-9667-4AAC-9BB7-A04087460368@gmail.com>
Message-ID: <23529337.Tf4y6S7f1A@even-i700>

On vendredi 15 mars 2019 18:14:48 CET Nikolai Bezdna wrote:
> Can vsistdin be used in VRT source definition?
> So that one can use output from another utility (osmium in my case) as a
> valid OGR source.

The general answer is No. This depends a lot of the underlying driver (the 
format must allow sequential reading), and how you use it afterwards.

A particular case where this might work is a VRT referencing CSV:/vsistdin/ 
and using that vrt as the source for ogr2ogr

For example with test.vrt being:

<OGRVRTDataSource>
  <OGRVRTLayer name="test">
    <SrcDataSource>CSV:/vsistdin/</SrcDataSource>
    <SrcLayer>layer</SrcLayer>
  </OGRVRTLayer>
</OGRVRTDataSource>

you can do:

cat test.csv | ogr2ogr -f GML out.gml test.vrt 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ott.cavalcanti at gmail.com  Fri Mar 15 09:57:49 2019
From: ott.cavalcanti at gmail.com (Ottavio Cavalcanti)
Date: Fri, 15 Mar 2019 11:57:49 -0500
Subject: [gdal-dev] reprojection and clip of a netCDF
Message-ID: <CAANdT91FPSyp+PYh_RgKf7FqgKEB5t67c9Td6+Sgv84hiL207A@mail.gmail.com>

Hello,

I'd like to reproject a netCDF file through the command:

*gdalwarp -t_srs '+proj=lcc +units=m +a=6370000.0 +b=6370000.0 +lat_1=30.0
+lat_2=60.0 +lat_0=39.51 +lon_0=-120.0 +x_0=0 +y_0=0 +k_0=1.0
+nadgrids=@null +wktext  +no_defs' -of netCDF
NETCDF:"cut_wrf2d_d01_CTRL_EU10_200010-200012.nc":EU10 reprj_EU10.tif*

and then I tried clip the tiff file using a shapefile:

gdalwarp -q -cutline d01_domain_4km.shp -crop_to_cutline -of Gtiff
reprj_EU10.tif clip_EU10.tif

But I have got the following error:

*ERROR 1: Cannot compute bounding box of cutline.*

This is because the reprojected file (reprj_EU10.tif) is not in the right
position on the map.  Its lower left corner is in the origin (0,0) which
aren't the right coordinates.
I have tried with another command too:

*gdal_translate -a_srs d01_domain_4km.prj -of netCDF
NETCDF:"cut_wrf2d_d01_CTRL_EU10_200010-200012.nc":EU10 reprj_EU10.tif*

But I got the same error of the first attempt. I don't have any idea of how
to solve this problem.

Thanks.

Ottavio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190315/dc4d7fb4/attachment.html>

From jmckenna at gatewaygeomatics.com  Fri Mar 15 10:43:49 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 15 Mar 2019 14:43:49 -0300
Subject: [gdal-dev] GDAL 2.4.1 RC1 available
In-Reply-To: <2653712.40BWWaRl1X@even-i700>
References: <2653712.40BWWaRl1X@even-i700>
Message-ID: <0d2b29cf-9dc3-9159-1fe0-f885bb119f48@gatewaygeomatics.com>

On 2019-03-15 9:52 AM, Even Rouault wrote:
> 
> I'll call for a vote promoting it to final in the middle of next week if no
> serious problems are reported before.
> 

No issues here on Windows with Visual Studio 2017.

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/

From finn at arildsen.com  Sun Mar 17 06:41:41 2019
From: finn at arildsen.com (FA)
Date: Sun, 17 Mar 2019 06:41:41 -0700 (MST)
Subject: [gdal-dev] Building only OGR
Message-ID: <1552830101075-0.post@n6.nabble.com>

Hi

Does anyone know if it is possible to build a "small" subset of GDAL?   

In my Win32 application need to use the OGR functions to translate between
coordinate systems.  However, when I take the full package, there are
clashes between 3rd party libraries imported by GDAL and those I already
have in my application.

So I wanted to explore the possibility of building a self-contained subset
of GDAL, only providing OGR functions, and only dependent on a minimal set
of run-time-libraries.

I suspect that if I try the brute-force method of simply adding files to the
build as needed, I will eventually end up with the full GDAL package.



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From schwehr at gmail.com  Sun Mar 17 06:55:23 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 17 Mar 2019 06:55:23 -0700
Subject: [gdal-dev] Building only OGR
In-Reply-To: <1552830101075-0.post@n6.nabble.com>
References: <1552830101075-0.post@n6.nabble.com>
Message-ID: <CACmBxyv1dif-TNN44Lm8L154=Xr1UmcassyAp=1T6H2jWma4gQ@mail.gmail.com>

You can start by disabling drivers.  You can get down to just a couple
raster drivers pretty easily, but you won't be able to remove all of the
raster code.  I did exactly this with a bagel based build.  I got it down
to 21 raster drivers.  I think I am down under 300K active LOC.

On Sun, Mar 17, 2019, 6:42 AM FA <finn at arildsen.com> wrote:

> Hi
>
> Does anyone know if it is possible to build a "small" subset of GDAL?
>
> In my Win32 application need to use the OGR functions to translate between
> coordinate systems.  However, when I take the full package, there are
> clashes between 3rd party libraries imported by GDAL and those I already
> have in my application.
>
> So I wanted to explore the possibility of building a self-contained subset
> of GDAL, only providing OGR functions, and only dependent on a minimal set
> of run-time-libraries.
>
> I suspect that if I try the brute-force method of simply adding files to
> the
> build as needed, I will eventually end up with the full GDAL package.
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190317/cfdd13a0/attachment.html>

From even.rouault at spatialys.com  Sun Mar 17 07:26:50 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 17 Mar 2019 15:26:50 +0100
Subject: [gdal-dev] Building only OGR
In-Reply-To: <1552830101075-0.post@n6.nabble.com>
References: <1552830101075-0.post@n6.nabble.com>
Message-ID: <4094089.LlOhoCgr45@even-i700>

On dimanche 17 mars 2019 06:41:41 CET FA wrote:
> Hi
> 
> Does anyone know if it is possible to build a "small" subset of GDAL?
> 
> In my Win32 application need to use the OGR functions to translate between
> coordinate systems.  However, when I take the full package, there are
> clashes between 3rd party libraries imported by GDAL and those I already
> have in my application.
> 
> So I wanted to explore the possibility of building a self-contained subset
> of GDAL, only providing OGR functions, and only dependent on a minimal set
> of run-time-libraries.
> 
> I suspect that if I try the brute-force method of simply adding files to the
> build as needed, I will eventually end up with the full GDAL package.

Thomas Bonfort recently contributed patches for Unix builds in GDAL master to 
produce a minimal GDAL.
For the raster side (frmts/ subdirectory), the following drivers are required: 
derived gtiff hfa mem vrt. All others can be disabled
For the vector side (ogr/ogrsf_frmts/ subdirectory), the following drivers are 
required: generic geojson kml mem mitab vrt. All others can be disabled
With some tweaking of the Windows makefiles, you could likely get the same 
result.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sun Mar 17 16:06:39 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Mar 2019 00:06:39 +0100
Subject: [gdal-dev] github backporting application
Message-ID: <155304812.tXkPmZgO5S@even-i700>

Hi,

I've just seen that QGIS has started using a github backporting application,
https://github.com/apps/backporting, and I've just setup it for GDAL and PROJ

So the workflow is :
1) Create a pull request against master
2) If backport is needed, label it with "backport {branchname}" (I've created 
a "backport release/2.4" for GDAL and "backport 6.0" for PROJ)
3) Merge the pull request
4) The backport application automatically creates a new pull request against 
the target backport branch, and cherry-picks all the commits of the original 
pull request
5) Wait for CI to complete (or not) and merge (or not) this new PR

Of course this doesn't solve automagically conflicts etc, but can be 
convenient for trivial backports when branches are close enough

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nyall.dawson at gmail.com  Sun Mar 17 16:13:48 2019
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 18 Mar 2019 09:13:48 +1000
Subject: [gdal-dev] github backporting application
In-Reply-To: <155304812.tXkPmZgO5S@even-i700>
References: <155304812.tXkPmZgO5S@even-i700>
Message-ID: <CAB28Asga9Jf0BCDaJ77PiEN0ESb+FsyoiaP_TyFiWTtPQSwwwA@mail.gmail.com>

On Mon, 18 Mar 2019 at 09:06, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi,
>
> I've just seen that QGIS has started using a github backporting application,
> https://github.com/apps/backporting, and I've just setup it for GDAL and PROJ
>
> So the workflow is :
> 1) Create a pull request against master
> 2) If backport is needed, label it with "backport {branchname}" (I've created
> a "backport release/2.4" for GDAL and "backport 6.0" for PROJ)
> 3) Merge the pull request
> 4) The backport application automatically creates a new pull request against
> the target backport branch, and cherry-picks all the commits of the original
> pull request
> 5) Wait for CI to complete (or not) and merge (or not) this new PR
>
> Of course this doesn't solve automagically conflicts etc, but can be
> convenient for trivial backports when branches are close enough

Just from a QGIS developer's perspective:

The system is working OK, but there's two current limitations in the
bot which make it difficult to work within nicely:

1. Backported PRs have a generic name, e.g. "Backport #9528"
(https://github.com/qgis/QGIS/pull/9531). This makes it hard to see
what outstanding backports are open without diving into the details of
each. There's a fix here for the bot, but not merged yet:
https://github.com/tibdex/backport/pull/19 . On a similar vein, the
backported PRs don't include original author information, which in my
view makes reviewing a bit harder (since we have policies in place
that require a review from a different developer to the original
submitter for backports to the stable branch. Not a blocker, but just
opens the policy for easier abuse).

2. It's hard to track multiple backports, because currently the bot
only supports a single branch. See
https://github.com/tibdex/backport/pull/18 . We have to currently
"step" the backports back through multiple branches individually by
tagging the first auto created backport with the next branch to
backport to. Hopefully Matthias' PR is merged soon and fixes this
situation, but in the meantime it's fragile and potentially a backport
could accidently be skipped for a branch.

Nyall

From juliermeopensourcedeveloper at gmail.com  Mon Mar 18 08:27:42 2019
From: juliermeopensourcedeveloper at gmail.com (Julierme Pinheiro)
Date: Mon, 18 Mar 2019 12:27:42 -0300
Subject: [gdal-dev] Convert KML to Shapefile PyQGIS
Message-ID: <CAKTKyJKx99ZDaHcgWz-n+dUAYG0+WRoYJanE6Oc5Gs7ePSMYKQ@mail.gmail.com>

Dear all,

I have a kml file which is like a zip kml file available in here (
https://www.eorc.jaxa.jp/ALOS-2/obs/map/world_asc/kml/A_Cycle06.kml) which
has several satellite polygon footprint for Alos/Palsar images. I am in
need to convert all these files from KML to SHAPEFILE, saving the SHP files
using the layer ID.

I am trying to use the piece of code bellow (PyQGIS), but I do not know how
to unzip this kml and save the shapefiles using the layer ID information

vlayer = QgsVectorLayer("D:/KML-Images/A_Cycle06.kml", "line", "ogr")

writer = QgsVectorFileWriter.writeAsVectorFormat(vlayer,
"D:/KML-Images/<layer ID>.shp", "utf-8", None, "ESRI Shapefile")

Any help on that will be very appreciated.

Kind regards


Julierme
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190318/81d00c90/attachment.html>

From markus.metz.giswork at gmail.com  Mon Mar 18 09:49:54 2019
From: markus.metz.giswork at gmail.com (Markus Metz)
Date: Mon, 18 Mar 2019 17:49:54 +0100
Subject: [gdal-dev] NetCDF: North is left
Message-ID: <CAG+h=FFq3Ji_xBDFd-MVY2TC_ZUgOy5GtbaD_u5goiYnzm-vow@mail.gmail.com>

I have a NetCDF file with

Size is 1800, 3600
Coordinate System is `'
Origin = (89.999996946545821,179.999996947394237)
Pixel Size = (-0.099999996607273,-0.099999998304108)
Metadata:
  Latitude#long_name=Latitude
  Latitude#units=degrees_north
  Latitude#_CoordinateAxisType=Lat
  Longitude#long_name=Longitude
  Longitude#units=degrees_east
  Longitude#_CoordinateAxisType=Lon
...
Geolocation:
  LINE_OFFSET=0
  LINE_STEP=1
  PIXEL_OFFSET=0
  PIXEL_STEP=1
  SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
  X_BAND=1

X_DATASET=NETCDF:"LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":Longitude
  Y_BAND=1

Y_DATASET=NETCDF:"LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":Latitude
Corner Coordinates:
Upper Left  (      90.000,     180.000)
Lower Left  (      90.000,    -180.000)
Upper Right (     -90.000,     180.000)
Lower Right (     -90.000,    -180.000)
Center      (  -0.0000000,  -0.0000000)

-> apparently north is left and east is up
Is there any way to rotate this subdataset with GDAL tools? gdalwarp -s_srs
EPSG:4326 -t_srs EPSG:4326 does not work.

Do I have to add GCPs with gdal_translate?

Thanks for any hint!

The problem file is here:
https://hydro1.gesdisc.eosdis.nasa.gov/data/WAOB/LPRM_AMSR2_DS_A_SOILM3.001/2019/03/LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4

Markus M
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190318/d1f03b19/attachment.html>

From hyoklee at hdfgroup.org  Mon Mar 18 09:51:51 2019
From: hyoklee at hdfgroup.org (Joe Lee)
Date: Mon, 18 Mar 2019 16:51:51 +0000
Subject: [gdal-dev] GDAL Developer's meeting?
Message-ID: <CADeM3-zfvc5yDyb3YO5-z4BZPVGZp3tJdmXi-6Vs0knA7-vVbA@mail.gmail.com>

Hi,

  I'd like to engage with GDAL developers through face-to-face meeting.

  Is there any annual conference or meeting that GDAL developers
get together and discuss issues? I'm particularly interested in meeting
developers who maintain HDF4/HDF5/netCDF format drivers.

  Sincerely,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190318/f8bf6a8d/attachment.html>

From even.rouault at spatialys.com  Mon Mar 18 10:54:56 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Mar 2019 18:54:56 +0100
Subject: [gdal-dev] GDAL Developer's meeting?
In-Reply-To: <CADeM3-zfvc5yDyb3YO5-z4BZPVGZp3tJdmXi-6Vs0knA7-vVbA@mail.gmail.com>
References: <CADeM3-zfvc5yDyb3YO5-z4BZPVGZp3tJdmXi-6Vs0knA7-vVbA@mail.gmail.com>
Message-ID: <2252847.KqNuAbPBA3@even-i700>

Joe,

There is a OSGeo community sprint in Minnepolis, May 14-17. The GDAL project 
will be represented among others.

You'll find all details at
http://wiki.osgeo.org/wiki/OSGeo_Community_Sprint_2019

Even

> Hi,
> 
>   I'd like to engage with GDAL developers through face-to-face meeting.
> 
>   Is there any annual conference or meeting that GDAL developers
> get together and discuss issues? I'm particularly interested in meeting
> developers who maintain HDF4/HDF5/netCDF format drivers.
> 
>   Sincerely,


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mickhowe292 at gmail.com  Mon Mar 18 16:37:23 2019
From: mickhowe292 at gmail.com (mick howe)
Date: Mon, 18 Mar 2019 23:37:23 +0000
Subject: [gdal-dev] NetCDF: North is left
In-Reply-To: <CAG+h=FFq3Ji_xBDFd-MVY2TC_ZUgOy5GtbaD_u5goiYnzm-vow@mail.gmail.com>
References: <CAG+h=FFq3Ji_xBDFd-MVY2TC_ZUgOy5GtbaD_u5goiYnzm-vow@mail.gmail.com>
Message-ID: <CAFcrWXguDjyMAR=xnH+3-mS_RNLt8m7mZUxN3JbeceZVtW1BfQ@mail.gmail.com>

I have run into that issue many times when using surveyor's data, seems the
profession is yet to come to terms with the concept of north = up, east =
right, south = down, west = left

mick in glen innes

On Mon, 18 Mar 2019 at 16:50, Markus Metz <markus.metz.giswork at gmail.com>
wrote:

> I have a NetCDF file with
>
> Size is 1800, 3600
> Coordinate System is `'
> Origin = (89.999996946545821,179.999996947394237)
> Pixel Size = (-0.099999996607273,-0.099999998304108)
> Metadata:
>   Latitude#long_name=Latitude
>   Latitude#units=degrees_north
>   Latitude#_CoordinateAxisType=Lat
>   Longitude#long_name=Longitude
>   Longitude#units=degrees_east
>   Longitude#_CoordinateAxisType=Lon
> ...
> Geolocation:
>   LINE_OFFSET=0
>   LINE_STEP=1
>   PIXEL_OFFSET=0
>   PIXEL_STEP=1
>   SRS=GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS
> 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]]
>   X_BAND=1
>
> X_DATASET=NETCDF:"LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":Longitude
>   Y_BAND=1
>
> Y_DATASET=NETCDF:"LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":Latitude
> Corner Coordinates:
> Upper Left  (      90.000,     180.000)
> Lower Left  (      90.000,    -180.000)
> Upper Right (     -90.000,     180.000)
> Lower Right (     -90.000,    -180.000)
> Center      (  -0.0000000,  -0.0000000)
>
> -> apparently north is left and east is up
> Is there any way to rotate this subdataset with GDAL tools? gdalwarp
> -s_srs EPSG:4326 -t_srs EPSG:4326 does not work.
>
> Do I have to add GCPs with gdal_translate?
>
> Thanks for any hint!
>
> The problem file is here:
>
> https://hydro1.gesdisc.eosdis.nasa.gov/data/WAOB/LPRM_AMSR2_DS_A_SOILM3.001/2019/03/LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4
>
> Markus M
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190318/36bcfddb/attachment.html>

From norman.barker at gmail.com  Mon Mar 18 16:49:01 2019
From: norman.barker at gmail.com (Norman Barker)
Date: Mon, 18 Mar 2019 18:49:01 -0500
Subject: [gdal-dev] GDAL Developer's meeting?
In-Reply-To: <2252847.KqNuAbPBA3@even-i700>
References: <CADeM3-zfvc5yDyb3YO5-z4BZPVGZp3tJdmXi-6Vs0knA7-vVbA@mail.gmail.com>
 <2252847.KqNuAbPBA3@even-i700>
Message-ID: <CAN_Dn-FOv_C=tKKAPRYsaWSJA_XHAUTtJpZxkNjD3GWJfQUj1w@mail.gmail.com>

Hi Joe,

just echoing Even's note about the code sprint. I am planning to be there,
as are others, and I have spend a lot of time with the subdataset code
recently. I also (a long time ago) was involved in the the subdataset work
with netCDF within GDAL.

>From your email I see you are from the hdfgroup, what is your particular
interest with the current driver?

Norman

On Mon, Mar 18, 2019 at 12:55 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Joe,
>
> There is a OSGeo community sprint in Minnepolis, May 14-17. The GDAL
> project
> will be represented among others.
>
> You'll find all details at
> http://wiki.osgeo.org/wiki/OSGeo_Community_Sprint_2019
>
> Even
>
> > Hi,
> >
> >   I'd like to engage with GDAL developers through face-to-face meeting.
> >
> >   Is there any annual conference or meeting that GDAL developers
> > get together and discuss issues? I'm particularly interested in meeting
> > developers who maintain HDF4/HDF5/netCDF format drivers.
> >
> >   Sincerely,
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190318/9d0e7696/attachment.html>

From even.rouault at spatialys.com  Tue Mar 19 08:53:54 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2019 16:53:54 +0100
Subject: [gdal-dev] NetCDF: North is left
In-Reply-To: <CAG+h=FFq3Ji_xBDFd-MVY2TC_ZUgOy5GtbaD_u5goiYnzm-vow@mail.gmail.com>
References: <CAG+h=FFq3Ji_xBDFd-MVY2TC_ZUgOy5GtbaD_u5goiYnzm-vow@mail.gmail.com>
Message-ID: <8646250.3iYu71jj90@even-i700>

Markus,

yes this file has unconventionnal indexing of variables, with the fastest 
varying dimension being latitude, which confuses the driver

In https://github.com/OSGeo/gdal/pull/1377, I've made a number of changes that 
make support of such dataset a bit easier. I didn't go to making the driver 
autocorrect the swapped axis, but did a number of fixes so that the 
geotransform and Geolocation array metadata are correct (and also improve the 
geoloc transformer/wrapper to deal with such swapped axis)

With those fixes, the following does the right thing:
$ gdalwarp -geoloc  NETCDF:"LPRM-
AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":ts /tmp/out.tif -overwrite

Without it, you can indeed have the expected result by setting GCP

$ gdal_translate \
   NETCDF:"LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":ts \
   tmp.vrt \
   -gcp 0 0 -180 90 \
   -gcp 1800 0 -180 -90 \
   -gcp 0 3600 180 90 \
   -gcp 1800 3600 180 -90

$ gdalwarp tmp.vrt out.tif -order 1 --config GDAL_NETCDF_BOTTOMUP 0 -overwrite

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Mar 19 09:09:16 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2019 17:09:16 +0100
Subject: [gdal-dev] Convert KML to Shapefile PyQGIS
In-Reply-To: <CAKTKyJKx99ZDaHcgWz-n+dUAYG0+WRoYJanE6Oc5Gs7ePSMYKQ@mail.gmail.com>
References: <CAKTKyJKx99ZDaHcgWz-n+dUAYG0+WRoYJanE6Oc5Gs7ePSMYKQ@mail.gmail.com>
Message-ID: <2175373.iEQkY9tZ5z@even-i700>

Julierme,

the issue here is that your KML file is seen as a multi-layer dataset, with
one feature per layer, so you can't use the logic you put below. You need to
merge all the layers in a single one.

You can do that with the ogrmerge.py script that comes with GDAL:
https://www.gdal.org/ogrmerge.html

$ ogrmerge.py -overwrite_ds -single -src_layer_field_name src_layer -o out.shp A_Cycle06.kml

With released versions of the script, this will be very slow. I've just pushed a fix to speed that up, so grab:
https://raw.githubusercontent.com/OSGeo/gdal/master/gdal/swig/python/scripts/ogrmerge.py

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Mar 19 09:44:04 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Mar 2019 17:44:04 +0100
Subject: [gdal-dev] filter out wanted messages in a grib2 file
In-Reply-To: <CAAhuiS2QD_8Wajmrk1vSovf06tK+rH_XkLr_GHzQDKgKYckecQ@mail.gmail.com>
References: <CAAhuiS2QD_8Wajmrk1vSovf06tK+rH_XkLr_GHzQDKgKYckecQ@mail.gmail.com>
Message-ID: <14398170.pd5AI4FgOt@even-i700>

On dimanche 10 mars 2019 21:19:30 CET Zhan Zhang - NOAA Affiliate wrote:
> I have a grib2 file which contains many messages, and those messages define
> different products on different surfaces (like z axis). For
> instance, some messages defines "soil temperature"(product name) on a
> surface called "depth below land surface" (surface name); and other
> messages define "geopotential height" (product name) on a "pressure
> surface" (surface name); etc. May I ask how I can filter out all those
> messages that defines "soil temperature"(product name) on a surface called
> "depth below land surface" (surface name)? Is there some grib2 tools
> provided in gdal APIs that I can use? Thanks!

Zhan,

Multiple GRIB messages in a single file are seen by GDAL as a multi-band 
dataset.
So you need to iterate over the bands ( GDALGetRasterCount() + 
GDALGetRasterBand() for the C API ) and fetch its metadata ( GDALGetMetadata() 
) an description ( GDALGetDescription() ) to see if the band is of interest 
for you.

The output of gdalinfo should help you understanding this

If using the Python API, you may also analyze the result of
gdal.Info('my.grb2', format = 'json')
which is a Python dictionary, to retrieve the band you are interested in.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From markus.metz.giswork at gmail.com  Tue Mar 19 10:13:19 2019
From: markus.metz.giswork at gmail.com (Markus Metz)
Date: Tue, 19 Mar 2019 18:13:19 +0100
Subject: [gdal-dev] NetCDF: North is left
In-Reply-To: <8646250.3iYu71jj90@even-i700>
References: <CAG+h=FFq3Ji_xBDFd-MVY2TC_ZUgOy5GtbaD_u5goiYnzm-vow@mail.gmail.com>
 <8646250.3iYu71jj90@even-i700>
Message-ID: <CAG+h=FGyahwOHmv3GuWZzu3TW6oZEFvOvX_Uv_RtVr1JUR2JLw@mail.gmail.com>

Even,

On Tue, Mar 19, 2019 at 4:53 PM Even Rouault <even.rouault at spatialys.com>
wrote:
>
> Markus,
>
> yes this file has unconventionnal indexing of variables, with the fastest
> varying dimension being latitude, which confuses the driver
>
> In https://github.com/OSGeo/gdal/pull/1377, I've made a number of changes
that
> make support of such dataset a bit easier. I didn't go to making the
driver
> autocorrect the swapped axis, but did a number of fixes so that the
> geotransform and Geolocation array metadata are correct (and also improve
the
> geoloc transformer/wrapper to deal with such swapped axis)
>
> With those fixes, the following does the right thing:
> $ gdalwarp -geoloc  NETCDF:"LPRM-
> AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":ts /tmp/out.tif -overwrite

thanks a lot!

But looking at all the datasets with weird georeferencing out there in the
wild, it would be really ambitious to come up with a fix at driver level...
>
> Without it, you can indeed have the expected result by setting GCP

This is what I ended up doing, it works just fine, also in an automated
processing chain.

Markus M

>
> $ gdal_translate \
>    NETCDF:"LPRM-AMSR2_L3_DS_A_SOILM3_V001_20190301000851.nc4":ts \
>    tmp.vrt \
>    -gcp 0 0 -180 90 \
>    -gcp 1800 0 -180 -90 \
>    -gcp 0 3600 180 90 \
>    -gcp 1800 3600 180 -90
>
> $ gdalwarp tmp.vrt out.tif -order 1 --config GDAL_NETCDF_BOTTOMUP 0
-overwrite
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190319/d87ec4b2/attachment-0001.html>

From guyd at satellogic.com  Wed Mar 20 00:51:30 2019
From: guyd at satellogic.com (Guy Doulberg)
Date: Wed, 20 Mar 2019 09:51:30 +0200
Subject: [gdal-dev] gdal_rasterize and virtual rasters
Message-ID: <CAJ18MZrMdwxhrO6y5dAeU87pJN37rs01FnAXBZ_nnTyBddTLZg@mail.gmail.com>

Hi guys,

I am trying my luck here,

I looked up this question in the web but no success,

Is there a file format of raster type that returns the product of
gdal_rasterize.

I am thinking of something like a VRT file, that its attributes tell gdal
how to run gdal_rasterize on top of vectors layers.

Then running gdalinfo, gdal_translate and any gdal raster functions work on
that file, where the rasterization is done on the fly.

Does it make sense?

Thanks, guy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190320/babb6552/attachment.html>

From even.rouault at spatialys.com  Wed Mar 20 03:32:09 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2019 11:32:09 +0100
Subject: [gdal-dev] gdal_rasterize and virtual rasters
In-Reply-To: <CAJ18MZrMdwxhrO6y5dAeU87pJN37rs01FnAXBZ_nnTyBddTLZg@mail.gmail.com>
References: <CAJ18MZrMdwxhrO6y5dAeU87pJN37rs01FnAXBZ_nnTyBddTLZg@mail.gmail.com>
Message-ID: <6157060.zpeAnCjdsy@even-i700>

On mercredi 20 mars 2019 09:51:30 CET Guy Doulberg wrote:
> Hi guys,
> 
> I am trying my luck here,
> 
> I looked up this question in the web but no success,
> 
> Is there a file format of raster type that returns the product of
> gdal_rasterize.
> 
> I am thinking of something like a VRT file, that its attributes tell gdal
> how to run gdal_rasterize on top of vectors layers.
> 
> Then running gdalinfo, gdal_translate and any gdal raster functions work on
> that file, where the rasterization is done on the fly.
> 
> Does it make sense?

Yes, there's no such on-the-fly capability in GDAL. The closest would be to 
use your prefered WMS server (mapserver, geoserver, qgis-server etc) and 
create a GDAL WMS file from it.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From domlysz at gmail.com  Wed Mar 20 03:38:08 2019
From: domlysz at gmail.com (Dominique Lyszczarz)
Date: Wed, 20 Mar 2019 11:38:08 +0100
Subject: [gdal-dev] Troubles with PAM file
Message-ID: <CAKT=1=Df1UTDrbMrntG-Z1EvQV3S46RRAjHPisaDPXAnTZ8Byg@mail.gmail.com>

Hi all,

I'm trying to read a raster georeferenced with ArcGIS. It's a jpg file
coming with a PAM file (.aux.xml) that store GCPs and define a polynomial
transformation of order 3. Unfortunately GDAL does not take the PAM file
into account and gdalinfo does not report GCPs. After some investigations,
I found this commit
<https://github.com/OSGeo/gdal/commit/f8822eb50466fb740e228b8c6a7f066b916faa0a>
that suggest PAM files are supported by GDAL but only for TIFF dataset. So,
I've translated my file to TIFF and now gdalinfo report the GCPs but the
file is not correctly georeferenced. Reading more carefully the commit
previously cited I can see some relevants clues : sources GPCs are
considered to be expressed in inch and so the code rely on image dpi stored
in TIFF tags to compute the pixels coordinates. Futhermore the origin of
pixels coordinates is considered to be the bottom left. I've checked my PAM
file and clearly the sources GPC are expressed directly in pixel, not inch,
with an image origin fixed to top left. I can set the dpi of my image to 1
to fix the scale but Y coordinates remains wrong.

I'm a bit confused with theses PAM files, is there any technical doc from
ESRI? My PAM file make sense for me : pixel coordinates and top left origin
(like worldfile) for sources GPC, it's seems a very common approach. But
inch !? Also is there any particular reason to limit PAM file reading to
TIFF dataset ? maybe is it related to the need to extract dpi from tags ?

For now I can't see any way to correctly read this file with GDAL, so I'm
thinking of writing my own script to parse GCPs and rectify the raster wih
gdalwarp. Not sure if it will be the best approach here, any advices?

The file can be downloaded here :
https://drive.google.com/drive/folders/1hZXncJhcfZI0Uem-oCfUsruO9mPwWD0U?usp=sharing

Thanks in advance for any feedback on this.

Regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190320/32240fe9/attachment.html>

From even.rouault at spatialys.com  Wed Mar 20 03:40:47 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2019 11:40:47 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.1 rc1 for release
Message-ID: <2959849.DyI3mFKL0F@even-i700>

Hi,

No issues were raised about this release candidate, so

-------

Motion: GDAL/OGR 2.4.1 rc1 is promoted to be the official 2.4.1 final release.

-------

My vote: +1

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From dmorissette at mapgears.com  Wed Mar 20 03:57:02 2019
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Wed, 20 Mar 2019 06:57:02 -0400
Subject: [gdal-dev] Motion: Promote GDAL 2.4.1 rc1 for release
In-Reply-To: <2959849.DyI3mFKL0F@even-i700>
References: <2959849.DyI3mFKL0F@even-i700>
Message-ID: <06c2f085-acfe-1fae-79e6-b644767a340f@mapgears.com>

+1

Daniel

On 2019-03-20 6:40 a.m., Even Rouault wrote:
> Hi,
> 
> No issues were raised about this release candidate, so
> 
> -------
> 
> Motion: GDAL/OGR 2.4.1 rc1 is promoted to be the official 2.4.1 final release.
> 
> -------
> 
> My vote: +1
> 
> Best regards,
> 
> Even
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From jukka.rahkonen at maanmittauslaitos.fi  Wed Mar 20 05:35:33 2019
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 20 Mar 2019 05:35:33 -0700 (MST)
Subject: [gdal-dev] Motion: Promote GDAL 2.4.1 rc1 for release
In-Reply-To: <2959849.DyI3mFKL0F@even-i700>
References: <2959849.DyI3mFKL0F@even-i700>
Message-ID: <1553085333259-0.post@n6.nabble.com>

+1

-Jukka Rahkonen-


Even Rouault-2 wrote
> Hi,
> 
> No issues were raised about this release candidate, so
> 
> -------
> 
> Motion: GDAL/OGR 2.4.1 rc1 is promoted to be the official 2.4.1 final
> release.
> 
> -------
> 
> My vote: +1
> 
> Best regards,
> 
> Even





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Wed Mar 20 07:57:53 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2019 15:57:53 +0100
Subject: [gdal-dev] Troubles with PAM file
In-Reply-To: <CAKT=1=Df1UTDrbMrntG-Z1EvQV3S46RRAjHPisaDPXAnTZ8Byg@mail.gmail.com>
References: <CAKT=1=Df1UTDrbMrntG-Z1EvQV3S46RRAjHPisaDPXAnTZ8Byg@mail.gmail.com>
Message-ID: <16029690.IHXcHmxzov@even-i700>

Dominique,
> 
> I'm trying to read a raster georeferenced with ArcGIS. It's a jpg file
> coming with a PAM file (.aux.xml) that store GCPs and define a polynomial
> transformation of order 3. Unfortunately GDAL does not take the PAM file
> into account and gdalinfo does not report GCPs. After some investigations,
> I found this commit
> <https://github.com/OSGeo/gdal/commit/f8822eb50466fb740e228b8c6a7f066b916faa
> 0a> that suggest PAM files are supported by GDAL but only for TIFF dataset.

Not really. PAM files are supported for most formats, included JPEG, but the 
ESRI specific GCP decoding was limited for now to the GTiff format, mostly 
because of the oddity you noticed: in the case for which this was developed 
for
(see https://lists.osgeo.org/pipermail/gdal-dev/2017-January/045854.html and 
the related email thread), pixel coordinates were indeed surprisingly in 
inches and from the bottom left origin. So I couldn't/didn't want to 
generalize that to core PAM processing.

> 
> I'm a bit confused with theses PAM files, is there any technical doc from
> ESRI? 

Not to my knowledge. Initially PAM was developed for GDAL itself, but it seems 
ESRI developed some extensions on top of it, like the one you are facing to.

> The file can be downloaded here :
> https://drive.google.com/drive/folders/1hZXncJhcfZI0Uem-oCfUsruO9mPwWD0U?usp
> =sharing

You didn't include the most interesting part, that is the .aux.xml file itself

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From domlysz at gmail.com  Wed Mar 20 10:09:30 2019
From: domlysz at gmail.com (Dominique Lyszczarz)
Date: Wed, 20 Mar 2019 18:09:30 +0100
Subject: [gdal-dev] Troubles with PAM file
In-Reply-To: <16029690.IHXcHmxzov@even-i700>
References: <CAKT=1=Df1UTDrbMrntG-Z1EvQV3S46RRAjHPisaDPXAnTZ8Byg@mail.gmail.com>
 <16029690.IHXcHmxzov@even-i700>
Message-ID: <CAKT=1=A4U9uTBDz440=0Fa=+CRAWidF4mzd9bivqPobvnaGLiw@mail.gmail.com>

Thank you Even for these informations, that's good to know. I've added the
.aux.xml in the repository if it can be useful as reference. Finally, I got
good results with gdal_translate -gcp option following by gdalwarp. Fun
fact, in the PAM file Y image coordinates are negatives values but must be
pushed as positive number in gdal_translate command.

Le mer. 20 mars 2019 à 15:57, Even Rouault <even.rouault at spatialys.com> a
écrit :

> Dominique,
> >
> > I'm trying to read a raster georeferenced with ArcGIS. It's a jpg file
> > coming with a PAM file (.aux.xml) that store GCPs and define a polynomial
> > transformation of order 3. Unfortunately GDAL does not take the PAM file
> > into account and gdalinfo does not report GCPs. After some
> investigations,
> > I found this commit
> > <
> https://github.com/OSGeo/gdal/commit/f8822eb50466fb740e228b8c6a7f066b916faa
> > 0a> that suggest PAM files are supported by GDAL but only for TIFF
> dataset.
>
> Not really. PAM files are supported for most formats, included JPEG, but
> the
> ESRI specific GCP decoding was limited for now to the GTiff format, mostly
> because of the oddity you noticed: in the case for which this was
> developed
> for
> (see https://lists.osgeo.org/pipermail/gdal-dev/2017-January/045854.html
> and
> the related email thread), pixel coordinates were indeed surprisingly in
> inches and from the bottom left origin. So I couldn't/didn't want to
> generalize that to core PAM processing.
>
> >
> > I'm a bit confused with theses PAM files, is there any technical doc from
> > ESRI?
>
> Not to my knowledge. Initially PAM was developed for GDAL itself, but it
> seems
> ESRI developed some extensions on top of it, like the one you are facing
> to.
>
> > The file can be downloaded here :
> >
> https://drive.google.com/drive/folders/1hZXncJhcfZI0Uem-oCfUsruO9mPwWD0U?usp
> > =sharing
>
> You didn't include the most interesting part, that is the .aux.xml file
> itself
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190320/5ffcd99e/attachment-0001.html>

From armin.burger at gmx.net  Wed Mar 20 13:06:21 2019
From: armin.burger at gmx.net (Armin Burger)
Date: Wed, 20 Mar 2019 21:06:21 +0100
Subject: [gdal-dev] Set gdal option at compile time
Message-ID: <561bf5d9-840a-9e49-0a16-54361e1169ed@gmx.net>

Dear all

is it possible to change the default value of a GDAL option at compile
time? I would in particular like to set the option
"GDAL_DISABLE_READDIR_ON_OPEN" to TRUE as a default since in a batch
processing environment this can cause some overload of storage systems.

Thanks in advance for any hint
Armin

From juliermeopensourcedeveloper at gmail.com  Wed Mar 20 13:13:15 2019
From: juliermeopensourcedeveloper at gmail.com (Julierme Pinheiro)
Date: Wed, 20 Mar 2019 17:13:15 -0300
Subject: [gdal-dev] Convert KML to Shapefile PyQGIS
In-Reply-To: <2175373.iEQkY9tZ5z@even-i700>
References: <CAKTKyJKx99ZDaHcgWz-n+dUAYG0+WRoYJanE6Oc5Gs7ePSMYKQ@mail.gmail.com>
 <2175373.iEQkY9tZ5z@even-i700>
Message-ID: <CAKTKyJL_eSimwj6dSUX9m8Wj4x2wVLY5ascyHnzpHyvmx+o7sQ@mail.gmail.com>

Dear Even Rouault,

I got it done. Thank you very much for your reply.

I appreciated your time

Julierme



On Tue, Mar 19, 2019 at 1:09 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Julierme,
>
> the issue here is that your KML file is seen as a multi-layer dataset, with
> one feature per layer, so you can't use the logic you put below. You need
> to
> merge all the layers in a single one.
>
> You can do that with the ogrmerge.py script that comes with GDAL:
> https://www.gdal.org/ogrmerge.html
>
> $ ogrmerge.py -overwrite_ds -single -src_layer_field_name src_layer -o
> out.shp A_Cycle06.kml
>
> With released versions of the script, this will be very slow. I've just
> pushed a fix to speed that up, so grab:
>
> https://raw.githubusercontent.com/OSGeo/gdal/master/gdal/swig/python/scripts/ogrmerge.py
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190320/f934f814/attachment.html>

From even.rouault at spatialys.com  Wed Mar 20 14:01:18 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2019 22:01:18 +0100
Subject: [gdal-dev] Set gdal option at compile time
In-Reply-To: <561bf5d9-840a-9e49-0a16-54361e1169ed@gmx.net>
References: <561bf5d9-840a-9e49-0a16-54361e1169ed@gmx.net>
Message-ID: <2821870.OoFvJJjyiJ@even-i700>

On mercredi 20 mars 2019 21:06:21 CET Armin Burger wrote:
> Dear all
> 
> is it possible to change the default value of a GDAL option at compile
> time? 

No
Must be done at runtime. Can be done by setting it for example as environment 
variable in your batch script.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From zhan.j.zhang at noaa.gov  Wed Mar 20 14:22:11 2019
From: zhan.j.zhang at noaa.gov (Zhan Zhang - NOAA Affiliate)
Date: Wed, 20 Mar 2019 17:22:11 -0400
Subject: [gdal-dev] filter out wanted messages in a grib2 file
In-Reply-To: <14398170.pd5AI4FgOt@even-i700>
References: <CAAhuiS2QD_8Wajmrk1vSovf06tK+rH_XkLr_GHzQDKgKYckecQ@mail.gmail.com>
 <14398170.pd5AI4FgOt@even-i700>
Message-ID: <8EC177C4-44DE-4978-BFC3-3A52F1442B13@noaa.gov>

Thanks, Even! Can gdalinfo also get all the bands info needed as GDALGetRasterCount() + GDALGetRasterBand() + GDALGetMetadata() + GDALGetDescription() ) work together?

> On Mar 19, 2019, at 12:44 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
>> On dimanche 10 mars 2019 21:19:30 CET Zhan Zhang - NOAA Affiliate wrote:
>> I have a grib2 file which contains many messages, and those messages define
>> different products on different surfaces (like z axis). For
>> instance, some messages defines "soil temperature"(product name) on a
>> surface called "depth below land surface" (surface name); and other
>> messages define "geopotential height" (product name) on a "pressure
>> surface" (surface name); etc. May I ask how I can filter out all those
>> messages that defines "soil temperature"(product name) on a surface called
>> "depth below land surface" (surface name)? Is there some grib2 tools
>> provided in gdal APIs that I can use? Thanks!
> 
> Zhan,
> 
> Multiple GRIB messages in a single file are seen by GDAL as a multi-band 
> dataset.
> So you need to iterate over the bands ( GDALGetRasterCount() + 
> GDALGetRasterBand() for the C API ) and fetch its metadata ( GDALGetMetadata() 
> ) an description ( GDALGetDescription() ) to see if the band is of interest 
> for you.
> 
> The output of gdalinfo should help you understanding this
> 
> If using the Python API, you may also analyze the result of
> gdal.Info('my.grb2', format = 'json')
> which is a Python dictionary, to retrieve the band you are interested in.
> 
> Best regards,
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com

From armin.burger at gmx.net  Wed Mar 20 14:26:26 2019
From: armin.burger at gmx.net (Armin Burger)
Date: Wed, 20 Mar 2019 22:26:26 +0100
Subject: [gdal-dev] Set gdal option at compile time
In-Reply-To: <2821870.OoFvJJjyiJ@even-i700>
References: <561bf5d9-840a-9e49-0a16-54361e1169ed@gmx.net>
 <2821870.OoFvJJjyiJ@even-i700>
Message-ID: <ee9e845d-a5e3-5d5f-b04e-f0c666375990@gmx.net>



On 20/03/2019 22:01, Even Rouault wrote:
> On mercredi 20 mars 2019 21:06:21 CET Armin Burger wrote:
>> Dear all
>>
>> is it possible to change the default value of a GDAL option at compile
>> time?
>
> No
> Must be done at runtime. Can be done by setting it for example as environment
> variable in your batch script.
>
> Even
>

Thanks for the quick reply.

When opening a file, gdal checks for various sibling files, like *.AUX,
*.aux.xml, etc. Is there a sort of configuration file that defines for
which files and file extensions gdal is searching for any file open?

Best
Armin

From even.rouault at spatialys.com  Wed Mar 20 15:27:49 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Mar 2019 23:27:49 +0100
Subject: [gdal-dev] Closing remaining open Trac tickets ?
Message-ID: <3462139.RFeBElSrQP@even-i700>

Hi,

As we have already more than 100 tickets open in github, I guess nobody no 
longer looks at old Trac tickets.
I was wondering if we shouldn't mass close the remaining open tickets in Trac, 
with a message indicating that if the issue is still current, it should be 
filed on github, and assigning those tickets to a dedicated milestone "closed 
due to migration to github"

Thoughts ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Wed Mar 20 19:56:53 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 20 Mar 2019 19:56:53 -0700
Subject: [gdal-dev] Closing remaining open Trac tickets ?
In-Reply-To: <3462139.RFeBElSrQP@even-i700>
References: <3462139.RFeBElSrQP@even-i700>
Message-ID: <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>

+1

On Wed, Mar 20, 2019 at 3:28 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> As we have already more than 100 tickets open in github, I guess nobody no
> longer looks at old Trac tickets.
> I was wondering if we shouldn't mass close the remaining open tickets in
> Trac,
> with a message indicating that if the issue is still current, it should be
> filed on github, and assigning those tickets to a dedicated milestone
> "closed
> due to migration to github"
>
> Thoughts ?
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190320/e59321fe/attachment.html>

From jmckenna at gatewaygeomatics.com  Thu Mar 21 04:45:35 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 21 Mar 2019 08:45:35 -0300
Subject: [gdal-dev] Closing remaining open Trac tickets ?
In-Reply-To: <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>
Message-ID: <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>

+1

But note that the Trac wiki pages are still used (and editable).  I 
remember this situation for MapServer, and for that I spent much effort 
to manually create all of the existing Trac wiki pages, onto Github, by 
hand (and then we made the Trac wiki read-only).  This should be done 
also for GDAL (but maybe now there is a more automated way).

-jeff



> On Wed, Mar 20, 2019 at 3:28 PM Even Rouault <even.rouault at spatialys.com 
> <mailto:even.rouault at spatialys.com>> wrote:
> 
>     Hi,
> 
>     As we have already more than 100 tickets open in github, I guess
>     nobody no
>     longer looks at old Trac tickets.
>     I was wondering if we shouldn't mass close the remaining open
>     tickets in Trac,
>     with a message indicating that if the issue is still current, it
>     should be
>     filed on github, and assigning those tickets to a dedicated
>     milestone "closed
>     due to migration to github"
> 
>     Thoughts ?
> 
>     Even
> 
>     -- 
>     Spatialys - Geospatial professional services
>     http://www.spatialys.com
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> 
> 
> -- 
> --
> http://schwehr.org
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 


-- 
Jeff McKenna
MapServer Consulting and Training Services
https://gatewaygeomatics.com/

From even.rouault at spatialys.com  Thu Mar 21 04:59:46 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Mar 2019 12:59:46 +0100
Subject: [gdal-dev] Closing remaining open Trac tickets ?
In-Reply-To: <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>
 <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>
Message-ID: <13070258.WHEeq1O92e@even-i700>

On jeudi 21 mars 2019 08:45:35 CET Jeff McKenna wrote:
> +1
> 
> But note that the Trac wiki pages are still used (and editable).

I only targetted tickets. Wiki pages will remain for now.
That said, with Howard during the next code sprint, we intend to experiment 
moving GDAL documentation to Sphinx
( https://github.com/OSGeo/gdal/issues/1204 ) so the future of wiki pages will 
have to be considered.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Thu Mar 21 07:03:34 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 21 Mar 2019 15:03:34 +0100
Subject: [gdal-dev] Trac Wiki (was: Closing remaining open Trac tickets ?)
In-Reply-To: <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>
 <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>
Message-ID: <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>

On Thu, 21 Mar 2019 at 12:45, Jeff McKenna
<jmckenna at gatewaygeomatics.com> wrote:
>
> I spent much effort
> to manually create all of the existing Trac wiki pages, onto Github, by
> hand (and then we made the Trac wiki read-only).  This should be done
> also for GDAL (but maybe now there is a more automated way).

I have wondered what should be done about the Wiki pages too.
Do you think all pages qualify to be moved?

Perhaps those up to date and important should be marked
w/ "TODO: Move to GitHub" first, then it will be clear what to move.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From schwehr at gmail.com  Thu Mar 21 07:38:52 2019
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 21 Mar 2019 07:38:52 -0700
Subject: [gdal-dev] Trac Wiki (was: Closing remaining open Trac tickets
	?)
In-Reply-To: <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>
 <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
Message-ID: <CACmBxyvh5wx9a88ArzkGRZQPGX++3SaGpycPiF--MJ-yyeijew@mail.gmail.com>

If they are moved, can we put a redirect or at least leave a link to the
new location?  I am sure there are a huge number of links on the interwebs
to the wiki and it would be a major bummer to have those all go dead.

On Thu, Mar 21, 2019, 7:04 AM Mateusz Loskot <mateusz at loskot.net> wrote:

> On Thu, 21 Mar 2019 at 12:45, Jeff McKenna
> <jmckenna at gatewaygeomatics.com> wrote:
> >
> > I spent much effort
> > to manually create all of the existing Trac wiki pages, onto Github, by
> > hand (and then we made the Trac wiki read-only).  This should be done
> > also for GDAL (but maybe now there is a more automated way).
>
> I have wondered what should be done about the Wiki pages too.
> Do you think all pages qualify to be moved?
>
> Perhaps those up to date and important should be marked
> w/ "TODO: Move to GitHub" first, then it will be clear what to move.
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190321/08ee4a3b/attachment.html>

From mateusz at loskot.net  Thu Mar 21 08:23:52 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 21 Mar 2019 16:23:52 +0100
Subject: [gdal-dev] Trac Wiki (was: Closing remaining open Trac tickets
	?)
In-Reply-To: <CACmBxyvh5wx9a88ArzkGRZQPGX++3SaGpycPiF--MJ-yyeijew@mail.gmail.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>
 <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
 <CACmBxyvh5wx9a88ArzkGRZQPGX++3SaGpycPiF--MJ-yyeijew@mail.gmail.com>
Message-ID: <CABUeae_eNEiaOmtUs_xAYhrax3MHkxzMo+ZeKmrfmp4ge6dBJw@mail.gmail.com>

Surely, ant page moved can be updated with link to its new home.
Bigger, IMHO, issue is to decide what's worth to be migrated.
Similar issue was with zillion-page Trac wiki of Boost project, where many
of pages where scratch notes, or incomplete/random garbage.

Mateusz Loskot, mateusz at loskot.net
(Sent from mobile)

On Thu, 21 Mar 2019, 15:39 Kurt Schwehr, <schwehr at gmail.com> wrote:

> If they are moved, can we put a redirect or at least leave a link to the
> new location?  I am sure there are a huge number of links on the interwebs
> to the wiki and it would be a major bummer to have those all go dead.
>
> On Thu, Mar 21, 2019, 7:04 AM Mateusz Loskot <mateusz at loskot.net> wrote:
>
>> On Thu, 21 Mar 2019 at 12:45, Jeff McKenna
>> <jmckenna at gatewaygeomatics.com> wrote:
>> >
>> > I spent much effort
>> > to manually create all of the existing Trac wiki pages, onto Github, by
>> > hand (and then we made the Trac wiki read-only).  This should be done
>> > also for GDAL (but maybe now there is a more automated way).
>>
>> I have wondered what should be done about the Wiki pages too.
>> Do you think all pages qualify to be moved?
>>
>> Perhaps those up to date and important should be marked
>> w/ "TODO: Move to GitHub" first, then it will be clear what to move.
>>
>> Best regards,
>> --
>> Mateusz Loskot, http://mateusz.loskot.net
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190321/bd257a30/attachment.html>

From armin.burger at gmx.net  Thu Mar 21 10:34:11 2019
From: armin.burger at gmx.net (Armin Burger)
Date: Thu, 21 Mar 2019 18:34:11 +0100
Subject: [gdal-dev] Check of sibling files when opening an image file
Message-ID: <027b0328-25a9-cb34-ed48-d0eb7ffee7df@gmx.net>

Hi all

When gdal opens a file, it checks for various sibling files, like *.MTL,
*.aux.xml, *.RPC, etc (this is the case when the full directory scanning
is deactivated). This can be ~30 stat or open requests when opening a
single image file. Is there a way to define the file types that gdal
checks for their existence, thus allowing to reduce this to the pure
minimum, like *.ovr files only? Is this check driver dependent?

Thanks in advance for any hints
Armin


From even.rouault at spatialys.com  Thu Mar 21 11:09:58 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Mar 2019 19:09:58 +0100
Subject: [gdal-dev] Check of sibling files when opening an image file
In-Reply-To: <027b0328-25a9-cb34-ed48-d0eb7ffee7df@gmx.net>
References: <027b0328-25a9-cb34-ed48-d0eb7ffee7df@gmx.net>
Message-ID: <16900932.jtU330dJQA@even-i700>

On jeudi 21 mars 2019 18:34:11 CET Armin Burger wrote:
> Hi all
> 
> When gdal opens a file, it checks for various sibling files, like *.MTL,
> *.aux.xml, *.RPC, etc (this is the case when the full directory scanning
> is deactivated). This can be ~30 stat or open requests when opening a
> single image file. Is there a way to define the file types that gdal
> checks for their existence, thus allowing to reduce this to the pure
> minimum, like *.ovr files only? Is this check driver dependent?

If using /vsicurl/ and derived file systems, you can use
CPL_VSIL_CURL_ALLOWED_EXTENSIONS=".tif,.ovr" for example

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From armin.burger at gmx.net  Thu Mar 21 11:54:04 2019
From: armin.burger at gmx.net (Armin Burger)
Date: Thu, 21 Mar 2019 19:54:04 +0100
Subject: [gdal-dev] Check of sibling files when opening an image file
In-Reply-To: <16900932.jtU330dJQA@even-i700>
References: <027b0328-25a9-cb34-ed48-d0eb7ffee7df@gmx.net>
 <16900932.jtU330dJQA@even-i700>
Message-ID: <8fc17c8e-848c-9ffb-bb91-ef86a6b57f04@gmx.net>



On 21/03/2019 19:09, Even Rouault wrote:
> On jeudi 21 mars 2019 18:34:11 CET Armin Burger wrote:
>> Hi all
>>
>> When gdal opens a file, it checks for various sibling files, like *.MTL,
>> *.aux.xml, *.RPC, etc (this is the case when the full directory scanning
>> is deactivated). This can be ~30 stat or open requests when opening a
>> single image file. Is there a way to define the file types that gdal
>> checks for their existence, thus allowing to reduce this to the pure
>> minimum, like *.ovr files only? Is this check driver dependent?
>
> If using /vsicurl/ and derived file systems, you can use
> CPL_VSIL_CURL_ALLOWED_EXTENSIONS=".tif,.ovr" for example
>
> Even
>

Hi Even

Thanks, but we're using a POSIX file system (mounted via FUSE client),
so I assume this will not work then.

It would also be fine for us to reduce the number of extensions at
compile time by modifying configuration or source code files. But so far
I haven't found any appearances in the source code files for file
extensions that are obviously by default checked for their existence,
like e.g. "RPC.TXT". So any hints if/how this is possible would be great.

Cheers
Armin

From howard at hobu.co  Thu Mar 21 13:25:04 2019
From: howard at hobu.co (Howard Butler)
Date: Thu, 21 Mar 2019 15:25:04 -0500
Subject: [gdal-dev] Motion: Promote GDAL 2.4.1 rc1 for release
In-Reply-To: <1553085333259-0.post@n6.nabble.com>
References: <2959849.DyI3mFKL0F@even-i700> <1553085333259-0.post@n6.nabble.com>
Message-ID: <5C7D39D0-2C15-4784-906E-C28108279FC2@hobu.co>

+1

Howard


> On Mar 20, 2019, at 7:35 AM, jratike80 <jukka.rahkonen at maanmittauslaitos.fi> wrote:
> 
> +1
> 
> -Jukka Rahkonen-
> 
> 
> Even Rouault-2 wrote
>> Hi,
>> 
>> No issues were raised about this release candidate, so
>> 
>> -------
>> 
>> Motion: GDAL/OGR 2.4.1 rc1 is promoted to be the official 2.4.1 final
>> release.
>> 
>> -------
>> 
>> My vote: +1
>> 
>> Best regards,
>> 
>> Even
> 
> 
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html <http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190321/eb85a79f/attachment.html>

From szekerest at gmail.com  Thu Mar 21 15:43:22 2019
From: szekerest at gmail.com (Tamas Szekeres)
Date: Thu, 21 Mar 2019 23:43:22 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.1 rc1 for release
In-Reply-To: <2959849.DyI3mFKL0F@even-i700>
References: <2959849.DyI3mFKL0F@even-i700>
Message-ID: <CACALY+S+_eVZKLNXee4vpKqe80r-qwBYAEPrTTxsuKn=t2YEEA@mail.gmail.com>

+1

Tamas

Even Rouault <even.rouault at spatialys.com> ezt írta (időpont: 2019. márc.
20., Sze, 11:41):

> Hi,
>
> No issues were raised about this release candidate, so
>
> -------
>
> Motion: GDAL/OGR 2.4.1 rc1 is promoted to be the official 2.4.1 final
> release.
>
> -------
>
> My vote: +1
>
> Best regards,
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190321/e2a3c025/attachment.html>

From tgertin at vt.edu  Thu Mar 21 15:02:06 2019
From: tgertin at vt.edu (Thomas Gertin)
Date: Thu, 21 Mar 2019 18:02:06 -0400
Subject: [gdal-dev] installing gdal in CentOS
Message-ID: <CAKVWn8A1uWEhN7hhjHv2VEarxd1ajeFE8_vP=H8Ti9f-p7FYBg@mail.gmail.com>

Hello,

Does anybody know how to install gdal in CentOS?

Thanks,

Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190321/663f4a79/attachment.html>

From sebastic at xs4all.nl  Thu Mar 21 22:45:35 2019
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 22 Mar 2019 06:45:35 +0100
Subject: [gdal-dev] installing gdal in CentOS
In-Reply-To: <CAKVWn8A1uWEhN7hhjHv2VEarxd1ajeFE8_vP=H8Ti9f-p7FYBg@mail.gmail.com>
References: <CAKVWn8A1uWEhN7hhjHv2VEarxd1ajeFE8_vP=H8Ti9f-p7FYBg@mail.gmail.com>
Message-ID: <a5c26fb7-5148-2ea8-f761-7f851ec1dd70@xs4all.nl>

On 3/21/19 11:02 PM, Thomas Gertin wrote:
> Does anybody know how to install gdal in CentOS?

>From EPEL:

 https://fedoraproject.org/wiki/EPEL

Or use the spec as inspiration for building it yourself:

 https://src.fedoraproject.org/cgit/rpms/gdal.git/tree/

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From Stefan.Moebius at amdocs.com  Fri Mar 22 02:10:34 2019
From: Stefan.Moebius at amdocs.com (Stefan Moebius)
Date: Fri, 22 Mar 2019 09:10:34 +0000
Subject: [gdal-dev] Performance issue in coordinate transformations with
 Gdal 2.3.2
Message-ID: <AM6PR06MB445322AE686E3FF7B9E3AF5BED430@AM6PR06MB4453.eurprd06.prod.outlook.com>

Hi Even, Hi Thomas,

 

Thanks for your response and sorry for the late reply. School holidays and
sickness generated quite some delays across my team.

 

Anyway, meanwhile we have improved our methodology for measuring the
performance, by using JMH (
<https://openjdk.java.net/projects/code-tools/jmh/>
https://openjdk.java.net/projects/code-tools/jmh/). What we found is that
coordinate transformations have change their performance by roughly these
margins:

 

GDAL 2.3.3 over GDAL 2.3.1, both with PROJ 4.8.0 (without ETMERC): 

+50% WGS84 -> UTM projection and vice versa

+30% between different UTM projections

-10% UTM projection -> DHDN projection

 

GDAL 2.3.3 with PROJ 5.2.0 over GDAL 2.3.3 with PROJ 4.8.0 (with ETMERC):

+48% WGS84 -> UTM projection

+23% UTM projection -> WGS84

+60% between different UTM projections

+23% UTM projection -> DHDN projection

 

GDAL 2.4 adds another small margin across the board.

 

Overall, some of the transformations have indeed doubled their computation
time.

 

Hope this is useful. If anyone is interested in the test sources, do let me
know.

 

Regards,

Stefan

 

From: Thomas Knudsen <knudsen.thomas at gmail.com> 
Sent: Tuesday, January 29, 2019 12:13
To: Even Rouault <even.rouault at spatialys.com>
Cc: Stefan Moebius <Stefan.Moebius at amdocs.com>; gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Perforce issue in coordinate transformations with
Gdal 2.3.2

 

Prepare/finalize functions were added to pj_inv & pj_fwd  in PROJ PR #731
(https://github.com/OSGeo/proj.4/pull/731
<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.c
om%2FOSGeo%2Fproj.4%2Fpull%2F731&data=02%7C01%7CStefan.Moebius%40amdocs.com%
7C1af750be00dc439e8af008d685dade61%7Cc8eca3ca127646d59d9da0f2a028920f%7C0%7C
0%7C636843572476979244&sdata=SFr4nL70uT6NxoNcMnIYuxCxfhVmt4airGGxvPAhY9g%3D&
reserved=0> ), in order to resolve ticket #700
(https://github.com/OSGeo/proj.4/issues/700
<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.c
om%2FOSGeo%2Fproj.4%2Fissues%2F700&data=02%7C01%7CStefan.Moebius%40amdocs.co
m%7C1af750be00dc439e8af008d685dade61%7Cc8eca3ca127646d59d9da0f2a028920f%7C0%
7C0%7C636843572476979244&sdata=Wl1zUW%2BpkP%2Bu6phlj7OY%2B9oJtmMYUTM4Xa5pazH
vB1E%3D&reserved=0> ).

These add some overhead as well but IIRC, more like +15% (much depending on
the actual projection) than +100%. 

 

Den man. 28. jan. 2019 kl. 17.38 skrev Even Rouault <even.rouault at gmail.com
<mailto:even.rouault at gmail.com> >:

Stefan,

 

I bet you also upgraded your PROJ version in the process ? I can't think of
a reason in GDAL itself for a performance change. But on the PROJ side, yes,
there might be some explanation

The main one I can see is that in PROJ 4.9.3, the Extended Transverse
Mercator is used by default for UTM, which has probably a higher computation
time. If you define the GDAL configuration option / environmenet variable
OSR_USE_ETMERC to NO, then the older Transverse Mercator method will be
used.

PROJ 5.0 has also undergone major changes that might have increased a bit
the computation time, but I wouldn't expect them to cause a 2x slowdown.

 

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
<https://emea01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.spati
alys.com&data=02%7C01%7CStefan.Moebius%40amdocs.com%7C1af750be00dc439e8af008
d685dade61%7Cc8eca3ca127646d59d9da0f2a028920f%7C0%7C0%7C636843572476979244&s
data=a6NUnvhbQs8olqMY9%2B6zEr959T4KT1Iq2q0z9lUX18w%3D&reserved=0> 

 

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org> 
https://lists.osgeo.org/mailman/listinfo/gdal-dev
<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Flists.os
geo.org%2Fmailman%2Flistinfo%2Fgdal-dev&data=02%7C01%7CStefan.Moebius%40amdo
cs.com%7C1af750be00dc439e8af008d685dade61%7Cc8eca3ca127646d59d9da0f2a028920f
%7C0%7C0%7C636843572476979244&sdata=UjdRV5U5KE7Ao9%2Bfx0KlpzZIgzTN%2FCIoCg8t
WRtjXNg%3D&reserved=0> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/60b4c1ca/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2526 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/60b4c1ca/attachment.bin>
-------------- next part --------------
This email and the information contained herein is proprietary and confidential and subject to the Amdocs Email Terms of Service, which you may review at https://www.amdocs.com/about/email-terms-of-service <https://www.amdocs.com/about/email-terms-of-service>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/60b4c1ca/attachment-0001.html>

From Stefan.Moebius at amdocs.com  Fri Mar 22 02:44:35 2019
From: Stefan.Moebius at amdocs.com (Stefan Moebius)
Date: Fri, 22 Mar 2019 09:44:35 +0000
Subject: [gdal-dev] Coordinate transformation failing
Message-ID: <AM6PR06MB445370CF43BE397DE5F28D69ED430@AM6PR06MB4453.eurprd06.prod.outlook.com>

Hi again,

We recently encountered an issue with failing coordinate transformations.
The scenario is that a current (Java-based) software using GDAL 2.4.0/PROJ
5.2.0 reads HFA files generated a long time ago by another software using
GDAL 1.11.1/PROJ 4.8.0. The HFA files happen to come in a DHDN projection
system. The current software then transforms the files into a UTM projection
system and fails.

Investigating this further, we've come up with the following minimal test
showing the issue:

The current version of gdalinfo returns this coordinate system:
PROJCS["DHDN_VfD2_Germany_zone_3",
    GEOGCS["GCS_DHDN",
        DATUM["Deutsche_Hauptdreiecksnetz",
            SPHEROID["Bessel_1841",6377397.16,299.15281],
            TOWGS84[583,68,399.5,-0,-0,578614.3160276701,11300000]],
        PRIMEM["Greenwich",0],
        UNIT["Degree",0.017453292519943295]],
    PROJECTION["Transverse_Mercator"],
    PARAMETER["latitude_of_origin",0],
    PARAMETER["central_meridian",9],
    PARAMETER["scale_factor",1],
    PARAMETER["false_easting",3500000],
    PARAMETER["false_northing",0],
    UNIT["Meter",1]]
The old version of gdalinfo returns the same WKT string, but without the
TOWGS84 attribute.

The following code shows the issue when using GDAL 2.4.0/PROJ 5.2.0, where
the first test produces correct results, and the second one returns
infinity:

public class GdalTest
{
    @Test
    public void withoutTOWGS84()
    {
        final SpatialReference utm32 = new SpatialReference();
        utm32.ImportFromProj4("+proj=utm +zone=32 +datum=WGS84 +units=m
+no_defs");

        final SpatialReference dhdn3 = new SpatialReference();
        dhdn3.ImportFromProj4("+proj=tmerc +lat_0=0 +lon_0=9 +k=1
+x_0=3500000 +y_0=0 +ellps=bessel +units=m +no_defs");

        final CoordinateTransformation trafo = new
CoordinateTransformation(utm32, dhdn3);
        System.out.println(Arrays.toString(trafo.TransformPoint(473600.0,
5552000.0)));  // [3473592.6555052917, 5553652.669486293, 0.0]
    }

    @Test
    public void withTOWGS84()
    {
        final SpatialReference utm32 = new SpatialReference();
        utm32.ImportFromProj4("+proj=utm +zone=32 +datum=WGS84 +units=m
+no_defs");

        final SpatialReference dhdn3 = new SpatialReference();
        dhdn3.ImportFromProj4("+proj=tmerc +lat_0=0 +lon_0=9 +k=1
+x_0=3500000 +y_0=0 +ellps=bessel
+towgs84=583,68,399.5,-0,-0,578614.3160276701,11300000 +units=m +no_defs");

        final CoordinateTransformation trafo = new
CoordinateTransformation(utm32, dhdn3);
        System.out.println(Arrays.toString(trafo.TransformPoint(473600.0,
5552000.0)));  // [Infinity, Infinity, Infinity]
    }
}

Attempting the same things using gdaltransform also shows unexpected
behavior: although the results are not infinite, they are still wrong when
using the towgs84 parameters.

gdaltransform -s_srs "+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs"
-t_srs "+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=bessel
+units=m +no_defs"
473600 5552000
3473592.65550529 5553652.66948488 0

gdaltransform -s_srs "+proj=utm +zone=32 +datum=WGS84 +units=m +no_defs"
-t_srs "+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=bessel
+towgs84=583,68,399.5,-0,-0,578614.3160276701,11300000 +units=m +no_defs"
473600 5552000
-5235124.00823006 5717391.73687511 -5306247.65833537

So in summary, we have files produced by an old version of GDAL which we can
no longer use with the current version of GDAL. Are we doing something
wrong? Is this a bug? Is there a work-around?

Regards,
Stefan

Stefan Möbius
Development Manager
Amdocs Open Network

+49 351 652 47617 (internal 2044 47617)

amdocs open network  service acceleration

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2526 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/f7d64df4/attachment-0001.bin>
-------------- next part --------------
This email and the information contained herein is proprietary and confidential and subject to the Amdocs Email Terms of Service, which you may review at https://www.amdocs.com/about/email-terms-of-service <https://www.amdocs.com/about/email-terms-of-service>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/f7d64df4/attachment-0001.html>

From even.rouault at gmail.com  Fri Mar 22 04:04:38 2019
From: even.rouault at gmail.com (Even Rouault)
Date: Fri, 22 Mar 2019 12:04:38 +0100
Subject: [gdal-dev] Coordinate transformation failing
In-Reply-To: <AM6PR06MB445370CF43BE397DE5F28D69ED430@AM6PR06MB4453.eurprd06.prod.outlook.com>
References: <AM6PR06MB445370CF43BE397DE5F28D69ED430@AM6PR06MB4453.eurprd06.prod.outlook.com>
Message-ID: <CALxNk+kkz3nF-CZ6h33ag0zOQvu-OL0-sFgiW+Wk35VsBHV1YA@mail.gmail.com>

Stefan,

Le ven. 22 mars 2019 à 10:44, Stefan Moebius <Stefan.Moebius at amdocs.com> a
écrit :

> Hi again,
>
> We recently encountered an issue with failing coordinate transformations.
> The scenario is that a current (Java-based) software using GDAL 2.4.0/PROJ
> 5.2.0 reads HFA files generated a long time ago by another software using
> GDAL 1.11.1/PROJ 4.8.0. The HFA files happen to come in a DHDN projection
> system. The current software then transforms the files into a UTM
> projection
> system and fails.
>
> Investigating this further, we've come up with the following minimal test
> showing the issue:
>
> The current version of gdalinfo returns this coordinate system:
> PROJCS["DHDN_VfD2_Germany_zone_3",
>     GEOGCS["GCS_DHDN",
>         DATUM["Deutsche_Hauptdreiecksnetz",
>             SPHEROID["Bessel_1841",6377397.16,299.15281],
>             TOWGS84[583,68,399.5,-0,-0,578614.3160276701,11300000]],
>

--> OK, the TOWGS84 is wrong here. The rotation (4th,5th,6th) and scale
factor difference (7th) terms of the TOWGS84 are obviously nonsense.
They should be respectively in arc-seconds and in PPM.
>From what you mention, I believe this is due to
https://github.com/OSGeo/gdal/commit/e3d18d2070d8d73eef37ff3b844b7e441ffb5149
which is likely correct by itself.
The issue here is that as you mentionned the file was produced by GDAL
1.11.1 which incorrectly stored the values
of the rotation and sale factor difference as arc-seconds and PPM whereas
Erdas expected radians and unity-based scale factor difference.
Thus when reading this with GDAL >=2.2, the file is wrongly interpretated.
You should override the TOWGS84 values of this WKT with the corrected ones.

Even
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/0738d5db/attachment.html>

From even.rouault at spatialys.com  Fri Mar 22 04:07:22 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Mar 2019 12:07:22 +0100
Subject: [gdal-dev] Motion: Promote GDAL 2.4.1 rc1 for release
In-Reply-To: <2959849.DyI3mFKL0F@even-i700>
References: <2959849.DyI3mFKL0F@even-i700>
Message-ID: <1725302.RKJnydxR6b@even-i700>

> -------
> 
> Motion: GDAL/OGR 2.4.1 rc1 is promoted to be the official 2.4.1 final
> release.
> 
> -------
> 

This motion has passed with +1 from PSC members DanielM, JukkaR, HowardB, 
TamasS and myself

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Mar 22 04:34:05 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Mar 2019 12:34:05 +0100
Subject: [gdal-dev] GDAL/OGR 2.4.1 is released
Message-ID: <4372075.iJd5agJseP@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 2.4.1 bug fix version. This adds 52 bug fixes on top 
of 2.4.0. The C and C++ API and ABI are unchanged.

Consult the release notes for the list of issues addressed :
  https://trac.osgeo.org/gdal/wiki/Release/2.4.1-News

The sources are available at:

    http://download.osgeo.org/gdal/2.4.1/gdal-2.4.1.tar.xz
    http://download.osgeo.org/gdal/2.4.1/gdal-2.4.1.tar.gz
    http://download.osgeo.org/gdal/2.4.1/gdal241.zip
    http://download.osgeo.org/gdal/2.4.1/gdal-grass-2.4.1.tar.gz

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Mar 22 05:07:30 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Mar 2019 13:07:30 +0100
Subject: [gdal-dev] Closing remaining open Trac tickets ?
In-Reply-To: <3462139.RFeBElSrQP@even-i700>
References: <3462139.RFeBElSrQP@even-i700>
Message-ID: <2034107.mrPkJQG6cZ@even-i700>

On mercredi 20 mars 2019 23:27:49 CET Even Rouault wrote:
> Hi,
> 
> As we have already more than 100 tickets open in github, I guess nobody no
> longer looks at old Trac tickets.
> I was wondering if we shouldn't mass close the remaining open tickets in
> Trac, with a message indicating that if the issue is still current, it
> should be filed on github, and assigning those tickets to a dedicated
> milestone "closed due to migration to github"
> 

Mass closing just done according to above proposal.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Moebius at amdocs.com  Fri Mar 22 05:31:14 2019
From: Stefan.Moebius at amdocs.com (Stefan Moebius)
Date: Fri, 22 Mar 2019 12:31:14 +0000
Subject: [gdal-dev] Coordinate transformation failing
In-Reply-To: <CALxNk+kkz3nF-CZ6h33ag0zOQvu-OL0-sFgiW+Wk35VsBHV1YA@mail.gmail.com>
References: <AM6PR06MB445370CF43BE397DE5F28D69ED430@AM6PR06MB4453.eurprd06.prod.outlook.com>
 <CALxNk+kkz3nF-CZ6h33ag0zOQvu-OL0-sFgiW+Wk35VsBHV1YA@mail.gmail.com>
Message-ID: <AM6PR06MB44534F814F2ABC9978B8F360ED430@AM6PR06MB4453.eurprd06.prod.outlook.com>

Thanks, Even.

Is there a way to automatically detect and solve this when reading a file? Detection is obviously possible by checking for the failing transformation, but how about the solution? It seems that the towgs84 parameters aren’t strictly necessary – is simply removing them a reasonable (and generic) workaround?

 

--

Stefan

 

From: Even Rouault <even.rouault at gmail.com> 
Sent: Friday, March 22, 2019 12:05
To: Stefan Moebius <Stefan.Moebius at amdocs.com>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Coordinate transformation failing

 

Stefan,

 

Le ven. 22 mars 2019 à 10:44, Stefan Moebius <Stefan.Moebius at amdocs.com <mailto:Stefan.Moebius at amdocs.com> > a écrit :

Hi again,

We recently encountered an issue with failing coordinate transformations.
The scenario is that a current (Java-based) software using GDAL 2.4.0/PROJ
5.2.0 reads HFA files generated a long time ago by another software using
GDAL 1.11.1/PROJ 4.8.0. The HFA files happen to come in a DHDN projection
system. The current software then transforms the files into a UTM projection
system and fails.

Investigating this further, we've come up with the following minimal test
showing the issue:

The current version of gdalinfo returns this coordinate system:
PROJCS["DHDN_VfD2_Germany_zone_3",
    GEOGCS["GCS_DHDN",
        DATUM["Deutsche_Hauptdreiecksnetz",
            SPHEROID["Bessel_1841",6377397.16,299.15281],
            TOWGS84[583,68,399.5,-0,-0,578614.3160276701,11300000]],

 

--> OK, the TOWGS84 is wrong here. The rotation (4th,5th,6th) and scale factor difference (7th) terms of the TOWGS84 are obviously nonsense.

They should be respectively in arc-seconds and in PPM.

>From what you mention, I believe this is due to

https://github.com/OSGeo/gdal/commit/e3d18d2070d8d73eef37ff3b844b7e441ffb5149

which is likely correct by itself.

The issue here is that as you mentionned the file was produced by GDAL 1.11.1 which incorrectly stored the values

of the rotation and sale factor difference as arc-seconds and PPM whereas Erdas expected radians and unity-based scale factor difference.

Thus when reading this with GDAL >=2.2, the file is wrongly interpretated.

You should override the TOWGS84 values of this WKT with the corrected ones.

 

Even

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/94812424/attachment-0002.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 2526 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/94812424/attachment-0001.bin>
-------------- next part --------------
This email and the information contained herein is proprietary and confidential and subject to the Amdocs Email Terms of Service, which you may review at https://www.amdocs.com/about/email-terms-of-service <https://www.amdocs.com/about/email-terms-of-service>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190322/94812424/attachment-0003.html>

From gdt at lexort.com  Fri Mar 22 07:12:38 2019
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 22 Mar 2019 10:12:38 -0400
Subject: [gdal-dev] GDAL/OGR 2.4.1 is released
In-Reply-To: <4372075.iJd5agJseP@even-i700> (Even Rouault's message of "Fri,
 22 Mar 2019 12:34:05 +0100")
References: <4372075.iJd5agJseP@even-i700>
Message-ID: <smubm23gfqh.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

> On behalf of the GDAL/OGR development team, I am pleased to announce the 
> release of the GDAL/OGR 2.4.1 bug fix version. This adds 52 bug fixes on top 
> of 2.4.0. The C and C++ API and ABI are unchanged.

Sorry I didn't get to test RC1.  Aside from one problem, it built fine
on netbsd-8 amd64, and postgis tests passed using it, so I have updated
pkgsrc.


I got an error (gcc 5.5.0) about fabs not being in std:

ogrlinestring.cpp: In member function 'virtual void OGRSimpleCurve::segmentize(double)':
ogrlinestring.cpp:2554:13: error: 'fabs' is not a member of 'std'
         if( std::fabs(dfSquareDist - dfSquareMaxLength) > 1e-5 * dfSquareMaxLength )
             ^

I did not get this when building 2.4.0 on the same system (but I did do
a tiny update along the branch, and am rechecking 2.4.0).

I'm not 100% clear on the C++ standard; cmath has some ifdefs I don't
understand:

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  fabs(float __x)
  { return __builtin_fabsf(__x); }

  inline _GLIBCXX_CONSTEXPR long double
  fabs(long double __x)
  { return __builtin_fabsl(__x); }
#endif
      
and searching about this leads to some complicated discussion.  In
general, it seems std::abs is required to be overloaded for float and
that's the recommended usage, but I also see that some prefer std::fabs
for arguments know to be floats.

I applied the following patch for now; I suspect it's not right longer
term.

It's of course possible my g++ 5 headers are broken, but I would expect
this may have shown up elsewhere and been fixed by now if so.


Perhaps I should have switched to std::abs instead.



--- ogr/ogrlinestring.cpp.orig	2019-03-15 12:35:19.000000000 +0000
+++ ogr/ogrlinestring.cpp
@@ -2551,7 +2551,7 @@ void OGRSimpleCurve::segmentize( double 
         const double dfX = paoPoints[i+1].x - paoPoints[i].x;
         const double dfY = paoPoints[i+1].y - paoPoints[i].y;
         const double dfSquareDist = dfX * dfX + dfY * dfY;
-        if( std::fabs(dfSquareDist - dfSquareMaxLength) > 1e-5 * dfSquareMaxLength )
+        if( fabs(dfSquareDist - dfSquareMaxLength) > 1e-5 * dfSquareMaxLength )
         {
             const double dfIntermediatePoints =
                 floor(sqrt(dfSquareDist / dfSquareMaxLength) - 1e-2);



From even.rouault at spatialys.com  Fri Mar 22 07:37:44 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Mar 2019 15:37:44 +0100
Subject: [gdal-dev] GDAL/OGR 2.4.1 is released
In-Reply-To: <smubm23gfqh.fsf@linuxpal.mit.edu>
References: <4372075.iJd5agJseP@even-i700> <smubm23gfqh.fsf@linuxpal.mit.edu>
Message-ID: <2099568.SfE08hHO1P@even-i700>

Greg,

could you try instead applying the following patch (on top of unmodified 
2.4.1) ?

<cmath> is supposed to be the official header for std::fabs. It might get 
indirectly included on other systems by accident.


diff --git a/gdal/ogr/ogrlinestring.cpp b/gdal/ogr/ogrlinestring.cpp
index 810ad2e..1d4da9c 100644
--- a/gdal/ogr/ogrlinestring.cpp
+++ b/gdal/ogr/ogrlinestring.cpp
@@ -31,6 +31,7 @@
 #include "ogr_geos.h"
 #include "ogr_p.h"
 
+#include <cmath>
 #include <cstdlib>
 #include <algorithm>
 #include <limits>


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Fri Mar 22 08:32:04 2019
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 22 Mar 2019 11:32:04 -0400
Subject: [gdal-dev] GDAL/OGR 2.4.1 is released
In-Reply-To: <2099568.SfE08hHO1P@even-i700> (Even Rouault's message of "Fri,
 22 Mar 2019 15:37:44 +0100")
References: <4372075.iJd5agJseP@even-i700> <smubm23gfqh.fsf@linuxpal.mit.edu>
 <2099568.SfE08hHO1P@even-i700>
Message-ID: <smusgvfexhn.fsf@linuxpal.mit.edu>

Even Rouault <even.rouault at spatialys.com> writes:

> could you try instead applying the following patch (on top of unmodified 
> 2.4.1) ?
>
> <cmath> is supposed to be the official header for std::fabs. It might get 
> indirectly included on other systems by accident.
>
> diff --git a/gdal/ogr/ogrlinestring.cpp b/gdal/ogr/ogrlinestring.cpp
> index 810ad2e..1d4da9c 100644
> --- a/gdal/ogr/ogrlinestring.cpp
> +++ b/gdal/ogr/ogrlinestring.cpp
> @@ -31,6 +31,7 @@
>  #include "ogr_geos.h"
>  #include "ogr_p.h"
>  
> +#include <cmath>
>  #include <cstdlib>
>  #include <algorithm>
>  #include <limits>

With that patch (and not my earlier one), 2.4.1 builds without errors,
and postgis tests still pass.  (I know I should run the gdal test suite,
but haven't yet.)

From even.rouault at spatialys.com  Fri Mar 22 08:54:17 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Mar 2019 16:54:17 +0100
Subject: [gdal-dev] GDAL/OGR 2.4.1 is released
In-Reply-To: <smusgvfexhn.fsf@linuxpal.mit.edu>
References: <4372075.iJd5agJseP@even-i700> <2099568.SfE08hHO1P@even-i700>
 <smusgvfexhn.fsf@linuxpal.mit.edu>
Message-ID: <1617248.DbstFUg5F8@even-i700>

> With that patch (and not my earlier one), 2.4.1 builds without errors,
> and postgis tests still pass.  (I know I should run the gdal test suite,
> but haven't yet.)

Great. Patch queued in master and release/2.4 branches for next releases.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From paolo.zanini86 at gmail.com  Mon Mar 25 05:27:36 2019
From: paolo.zanini86 at gmail.com (paolino86)
Date: Mon, 25 Mar 2019 05:27:36 -0700 (MST)
Subject: [gdal-dev] GDAL_GRID Linear: Segmentation Fault
In-Reply-To: <CE106C36F836424AB340432214B378BA2F3327AC@prdassexch01.ad.linz.govt.nz>
References: <CE106C36F836424AB340432214B378BA2F33273A@prdassexch01.ad.linz.govt.nz>
 <2310147.cK4z6kg2OL@even-i700>
 <CE106C36F836424AB340432214B378BA2F3327AC@prdassexch01.ad.linz.govt.nz>
Message-ID: <1553516856964-0.post@n6.nabble.com>

Hi Ian,

did you finally solved your problem upgrading to the newer version ? I am
interested because I have a similar bug.

Thanks,
Paolo



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From armin.burger at gmx.net  Mon Mar 25 08:37:22 2019
From: armin.burger at gmx.net (Armin Burger)
Date: Mon, 25 Mar 2019 16:37:22 +0100
Subject: [gdal-dev] Check of sibling files when opening an image file
In-Reply-To: <8fc17c8e-848c-9ffb-bb91-ef86a6b57f04@gmx.net>
References: <027b0328-25a9-cb34-ed48-d0eb7ffee7df@gmx.net>
 <16900932.jtU330dJQA@even-i700>
 <8fc17c8e-848c-9ffb-bb91-ef86a6b57f04@gmx.net>
Message-ID: <2587a371-fbe0-aace-a417-d50e245a4c28@gmx.net>

Just in case someone is interested in a solution for this issue:

The most efficient setting was to set the gdal option
   GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR

This can reduce the file stat/open calls noticeably, depending on the
raster format. The worst format I found was JP2, which is now
unfortunately more often used like e.g. in Sentinel-2 data. For a JP2
image, a gdal Open() request for a single JP2 file makes 46 file
stat/open calls... With the above setting this is reduced to 6. In order
to set this as default, one needs to change this in the source code in
file gcore/gdalopeninfo.cpp.

If in addition the option GDAL_PAM_ENABLED is set to NO, then another 5
stat/open calls are eliminated. Here this setting can be put as default
at compile time by adding to the "configure" script the option
   --without-pam

Cheers
Armin




On 21/03/2019 19:54, Armin Burger wrote:
>
>
> On 21/03/2019 19:09, Even Rouault wrote:
>> On jeudi 21 mars 2019 18:34:11 CET Armin Burger wrote:
>>> Hi all
>>>
>>> When gdal opens a file, it checks for various sibling files, like *.MTL,
>>> *.aux.xml, *.RPC, etc (this is the case when the full directory scanning
>>> is deactivated). This can be ~30 stat or open requests when opening a
>>> single image file. Is there a way to define the file types that gdal
>>> checks for their existence, thus allowing to reduce this to the pure
>>> minimum, like *.ovr files only? Is this check driver dependent?
>>
>> If using /vsicurl/ and derived file systems, you can use
>> CPL_VSIL_CURL_ALLOWED_EXTENSIONS=".tif,.ovr" for example
>>
>> Even
>>
>
> Hi Even
>
> Thanks, but we're using a POSIX file system (mounted via FUSE client),
> so I assume this will not work then.
>
> It would also be fine for us to reduce the number of extensions at
> compile time by modifying configuration or source code files. But so far
> I haven't found any appearances in the source code files for file
> extensions that are obviously by default checked for their existence,
> like e.g. "RPC.TXT". So any hints if/how this is possible would be great.
>
> Cheers
> Armin
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From alejandro.saucedo.b at gmail.com  Mon Mar 25 16:26:17 2019
From: alejandro.saucedo.b at gmail.com (Alejandro Saucedo)
Date: Mon, 25 Mar 2019 17:26:17 -0600
Subject: [gdal-dev] Help with GDAL/OGR Python API and OCI
Message-ID: <CAAarJOZoOX9w2+yGbRWwU22QZVhJ9rUihkZ-Kpqm2B+8UKtF-Q@mail.gmail.com>

Hello,
Please, your help with the following problem.
I am not able to see the Oracle OCI driver from python using the GDAL/OGR
bindings.
The following code prints always None:
    from osgeo import ogr
    print(ogr.GetDriverByName( 'OCI' ))
 Also, the driver is never listed here:
    drivers = [ogr.GetDriver(i).GetDescription() for i in
range(ogr.GetDriverCount())]
    drivers.sort()
    print(drivers)
['ARCGEN', 'AVCBin', 'AVCE00', 'AeronavFAA', 'AmigoCloud', 'BNA', 'CAD',
'CSV', 'CSW', 'Carto', 'Cloudant', 'CouchDB', 'DGN', 'DXF', 'EDIGEO', 'ESRI
Shapefile', 'ESRIJSON', 'ElasticSearch', 'GFT', 'GML', 'GMLAS', 'GPKG',
'GPSBabel', 'GPSTrackMaker', 'GPX', 'GeoJSON', 'GeoRSS', 'Geoconcept',
'HTF', 'HTTP', 'Idrisi', 'Interlis 1', 'Interlis 2', 'JML', 'JP2OpenJPEG',
'KML', 'LIBKML', 'MBTiles', 'MVT', 'MapInfo File', 'Memory', 'NAS', 'ODS',
'OGR_DODS', 'OGR_GMT', 'OGR_PDS', 'OGR_SDTS', 'OGR_VRT', 'OSM', 'OpenAir',
'OpenFileGDB', 'PCIDSK', 'PDF', 'PGDUMP', 'PLSCENES', 'PostgreSQL', 'REC',
'S57', 'SEGUKOOA', 'SEGY', 'SQLite', 'SUA', 'SVG', 'SXF', 'Selafin',
'TIGER', 'TopoJSON', 'UK .NTF', 'VDV', 'VFK', 'WAsP', 'WFS', 'WFS3', 'XLS',
'XLSX', 'XPlane', 'netCDF']

However, OCI can be used in command line with ogr2ogr and it is listed when
executing ogrinfo --formats:
  OCI -vector- (rw+): Oracle Spatial

My environment is as follows:
RHOL 7, GDAL 2.3.3, Python 3.6 (with Numpy 1.16.1), Oracle Instant Client
18.5

I have tried building the python bindings using the following alternatives:
1) Building the python bindings with the GDAL source tree:
./configure --prefix=<GDAL_PREFIX> --with-curl=/usr/bin/curl-config
--with-python=<PYTHON3.6_BIN>/python
--with-oci-include=$ORACLE_HOME/sdk/include --with-oci=$ORACLE_HOME
2) Downloading the python bindings from
https://pypi.org/project/GDAL/2.3.3/#files and running setup.py
build/install process
3) Using pip install GDAL==2.3.3

The result is the same always, I can use the GDAL/OGR python API but cannot
see or use the OCI driver (the same for GeoRaster).

As suggested at
https://trac.osgeo.org/gdal/wiki/BuildingOnUnix#OCIwithoutinstallingOracle,
I have my ORACLE_HOME variable pointing to the instantclient folder,
ORACLE_HOME is also present at the PATH and LD_LIBRARY_PATH env vars as it
is GDAL/bin and GDAL/lib respectively.

I wonder if I'm missing something.

Any help is appreciated.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190325/ee320628/attachment.html>

From even.rouault at spatialys.com  Mon Mar 25 16:56:29 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Mar 2019 00:56:29 +0100
Subject: [gdal-dev] Help with GDAL/OGR Python API and OCI
In-Reply-To: <CAAarJOZoOX9w2+yGbRWwU22QZVhJ9rUihkZ-Kpqm2B+8UKtF-Q@mail.gmail.com>
References: <CAAarJOZoOX9w2+yGbRWwU22QZVhJ9rUihkZ-Kpqm2B+8UKtF-Q@mail.gmail.com>
Message-ID: <14278610.gYrv2AzT59@even-i700>

On lundi 25 mars 2019 17:26:17 CET Alejandro Saucedo wrote:
> Hello,
> Please, your help with the following problem.
> I am not able to see the Oracle OCI driver from python using the GDAL/OGR
> bindings.
> The following code prints always None:
>     from osgeo import ogr
>     print(ogr.GetDriverByName( 'OCI' ))
>  Also, the driver is never listed here:
>     drivers = [ogr.GetDriver(i).GetDescription() for i in
> range(ogr.GetDriverCount())]
>     drivers.sort()
>     print(drivers)
> ['ARCGEN', 'AVCBin', 'AVCE00', 'AeronavFAA', 'AmigoCloud', 'BNA', 'CAD',
> 'CSV', 'CSW', 'Carto', 'Cloudant', 'CouchDB', 'DGN', 'DXF', 'EDIGEO', 'ESRI
> Shapefile', 'ESRIJSON', 'ElasticSearch', 'GFT', 'GML', 'GMLAS', 'GPKG',
> 'GPSBabel', 'GPSTrackMaker', 'GPX', 'GeoJSON', 'GeoRSS', 'Geoconcept',
> 'HTF', 'HTTP', 'Idrisi', 'Interlis 1', 'Interlis 2', 'JML', 'JP2OpenJPEG',
> 'KML', 'LIBKML', 'MBTiles', 'MVT', 'MapInfo File', 'Memory', 'NAS', 'ODS',
> 'OGR_DODS', 'OGR_GMT', 'OGR_PDS', 'OGR_SDTS', 'OGR_VRT', 'OSM', 'OpenAir',
> 'OpenFileGDB', 'PCIDSK', 'PDF', 'PGDUMP', 'PLSCENES', 'PostgreSQL', 'REC',
> 'S57', 'SEGUKOOA', 'SEGY', 'SQLite', 'SUA', 'SVG', 'SXF', 'Selafin',
> 'TIGER', 'TopoJSON', 'UK .NTF', 'VDV', 'VFK', 'WAsP', 'WFS', 'WFS3', 'XLS',
> 'XLSX', 'XPlane', 'netCDF']
> 
> However, OCI can be used in command line with ogr2ogr and it is listed when
> executing ogrinfo --formats:
>   OCI -vector- (rw+): Oracle Spatial
> 
> My environment is as follows:
> RHOL 7, GDAL 2.3.3, Python 3.6 (with Numpy 1.16.1), Oracle Instant Client
> 18.5
> 
> I have tried building the python bindings using the following alternatives:
> 1) Building the python bindings with the GDAL source tree:
> ./configure --prefix=<GDAL_PREFIX> --with-curl=/usr/bin/curl-config
> --with-python=<PYTHON3.6_BIN>/python
> --with-oci-include=$ORACLE_HOME/sdk/include --with-oci=$ORACLE_HOME
> 2) Downloading the python bindings from
> https://pypi.org/project/GDAL/2.3.3/#files and running setup.py
> build/install process
> 3) Using pip install GDAL==2.3.3
> 
> The result is the same always, I can use the GDAL/OGR python API but cannot
> see or use the OCI driver (the same for GeoRaster).
> 
> As suggested at
> https://trac.osgeo.org/gdal/wiki/BuildingOnUnix#OCIwithoutinstallingOracle,
> I have my ORACLE_HOME variable pointing to the instantclient folder,
> ORACLE_HOME is also present at the PATH and LD_LIBRARY_PATH env vars as it
> is GDAL/bin and GDAL/lib respectively.

I presume the shared libraries of the python bindings link to another version 
of the GDAL lib than the one that you've built.
Locate _gdal.cpython-36m-x86_64-linux-gnu.so (or something like that), and run 
ldd on it to see to which libgdal it links to


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From alejandro.saucedo.b at gmail.com  Mon Mar 25 17:24:02 2019
From: alejandro.saucedo.b at gmail.com (Alejandro Saucedo)
Date: Mon, 25 Mar 2019 18:24:02 -0600
Subject: [gdal-dev] Help with GDAL/OGR Python API and OCI
In-Reply-To: <14278610.gYrv2AzT59@even-i700>
References: <CAAarJOZoOX9w2+yGbRWwU22QZVhJ9rUihkZ-Kpqm2B+8UKtF-Q@mail.gmail.com>
 <14278610.gYrv2AzT59@even-i700>
Message-ID: <CAAarJOYPDgVV4625EEk9sVueiEJmv67UJBHNqbZt1QS9sm8imA@mail.gmail.com>

Yes, it was that. I replaced the library it was linked to with the one from
my GDAL I built.

Thank you very much!

Regards.

On Mon, Mar 25, 2019 at 5:56 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 25 mars 2019 17:26:17 CET Alejandro Saucedo wrote:
> > Hello,
> > Please, your help with the following problem.
> > I am not able to see the Oracle OCI driver from python using the GDAL/OGR
> > bindings.
> > The following code prints always None:
> >     from osgeo import ogr
> >     print(ogr.GetDriverByName( 'OCI' ))
> >  Also, the driver is never listed here:
> >     drivers = [ogr.GetDriver(i).GetDescription() for i in
> > range(ogr.GetDriverCount())]
> >     drivers.sort()
> >     print(drivers)
> > ['ARCGEN', 'AVCBin', 'AVCE00', 'AeronavFAA', 'AmigoCloud', 'BNA', 'CAD',
> > 'CSV', 'CSW', 'Carto', 'Cloudant', 'CouchDB', 'DGN', 'DXF', 'EDIGEO',
> 'ESRI
> > Shapefile', 'ESRIJSON', 'ElasticSearch', 'GFT', 'GML', 'GMLAS', 'GPKG',
> > 'GPSBabel', 'GPSTrackMaker', 'GPX', 'GeoJSON', 'GeoRSS', 'Geoconcept',
> > 'HTF', 'HTTP', 'Idrisi', 'Interlis 1', 'Interlis 2', 'JML',
> 'JP2OpenJPEG',
> > 'KML', 'LIBKML', 'MBTiles', 'MVT', 'MapInfo File', 'Memory', 'NAS',
> 'ODS',
> > 'OGR_DODS', 'OGR_GMT', 'OGR_PDS', 'OGR_SDTS', 'OGR_VRT', 'OSM',
> 'OpenAir',
> > 'OpenFileGDB', 'PCIDSK', 'PDF', 'PGDUMP', 'PLSCENES', 'PostgreSQL',
> 'REC',
> > 'S57', 'SEGUKOOA', 'SEGY', 'SQLite', 'SUA', 'SVG', 'SXF', 'Selafin',
> > 'TIGER', 'TopoJSON', 'UK .NTF', 'VDV', 'VFK', 'WAsP', 'WFS', 'WFS3',
> 'XLS',
> > 'XLSX', 'XPlane', 'netCDF']
> >
> > However, OCI can be used in command line with ogr2ogr and it is listed
> when
> > executing ogrinfo --formats:
> >   OCI -vector- (rw+): Oracle Spatial
> >
> > My environment is as follows:
> > RHOL 7, GDAL 2.3.3, Python 3.6 (with Numpy 1.16.1), Oracle Instant Client
> > 18.5
> >
> > I have tried building the python bindings using the following
> alternatives:
> > 1) Building the python bindings with the GDAL source tree:
> > ./configure --prefix=<GDAL_PREFIX> --with-curl=/usr/bin/curl-config
> > --with-python=<PYTHON3.6_BIN>/python
> > --with-oci-include=$ORACLE_HOME/sdk/include --with-oci=$ORACLE_HOME
> > 2) Downloading the python bindings from
> > https://pypi.org/project/GDAL/2.3.3/#files and running setup.py
> > build/install process
> > 3) Using pip install GDAL==2.3.3
> >
> > The result is the same always, I can use the GDAL/OGR python API but
> cannot
> > see or use the OCI driver (the same for GeoRaster).
> >
> > As suggested at
> >
> https://trac.osgeo.org/gdal/wiki/BuildingOnUnix#OCIwithoutinstallingOracle
> ,
> > I have my ORACLE_HOME variable pointing to the instantclient folder,
> > ORACLE_HOME is also present at the PATH and LD_LIBRARY_PATH env vars as
> it
> > is GDAL/bin and GDAL/lib respectively.
>
> I presume the shared libraries of the python bindings link to another
> version
> of the GDAL lib than the one that you've built.
> Locate _gdal.cpython-36m-x86_64-linux-gnu.so (or something like that),
> and run
> ldd on it to see to which libgdal it links to
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190325/e1503514/attachment.html>

From cedric.traizet at c-s.fr  Tue Mar 26 02:47:05 2019
From: cedric.traizet at c-s.fr (=?UTF-8?Q?C=c3=a9dric_Traizet?=)
Date: Tue, 26 Mar 2019 10:47:05 +0100
Subject: [gdal-dev] Problem when creating GeoTiff raster with null origin
 and unit spacing
Message-ID: <ee70e4b2-0252-2fd8-ac61-9f1f0789aa89@c-s.fr>

Hello,

I am trying to create a raster file with the GeoTiff driver, origin 
[0,0] and pixel size [1,-1]. To do so I used the GDALDriver::Create(...) 
method with {0,1,0,0,0,-1} as geotransform. But the created output file 
has no "Pixel Size" or "Origin" metadata fields, and when I run gdalinfo 
the corner coordinates are flipped along the y axis:

Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,  512.0)
Upper Right (  512.0,    0.0)
Lower Right (  512.0,  512.0)
Center      (  256.0,  256.0)

instead of the expected:

Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,  -512.0)
Upper Right (  512.0,    0.0)
Lower Right (  512.0,  -512.0)
Center      (  256.0,  -256.0)

If I use another origin, another pixel size or another driver (I tested 
with the ENVI driver), the output has the "Pixel Size" and "Origin" 
fields, and the coordinates are not flipped.

Also, if I create the geoTiff file with GDALDriver::CreateCopy(...) on 
the dataset on which I used Create(...), the output has the correct fields.

Is it a bug ? or am I doing something wrong here ?

Attached is a c++ main that reproduce the problem:

# It takes as input two filenames, the driver name, the origin and the 
spacing.
# It creates a raster using the input driver, the first filename and the 
method |GDALDriver::Create(...)|.
# It creates another raster using the second filename. This raster created 
by copying the first dataset using |GDALDriver::CreateDataset(...)|.

config: Ubuntu 16.04, GDAL 2.2.1

sincerely,

Cédric Traizet


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/ad9fbf9b/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: main.cpp
Type: text/x-c++src
Size: 1792 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/ad9fbf9b/attachment-0001.cpp>

From even.rouault at spatialys.com  Tue Mar 26 04:03:19 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Mar 2019 12:03:19 +0100
Subject: [gdal-dev] Problem when creating GeoTiff raster with null
	origin and unit spacing
In-Reply-To: <ee70e4b2-0252-2fd8-ac61-9f1f0789aa89@c-s.fr>
References: <ee70e4b2-0252-2fd8-ac61-9f1f0789aa89@c-s.fr>
Message-ID: <19943708.f9C0aguRUD@even-i700>

Cédric,

this has been fixed in GDAL 2.3.0
See https://github.com/OSGeo/gdal/blob/master/gdal/NEWS#L911
https://github.com/OSGeo/gdal/commit/b28696a29f7c47ca05ffac57a6792a7d3e745e26

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Tue Mar 26 04:18:21 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 26 Mar 2019 11:18:21 +0000
Subject: [gdal-dev] Trac Wiki (was: Closing remaining open Trac tickets
	?)
In-Reply-To: <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CACmBxyt+PQo_88=shsSQEQ9KBXAMzDzPHERake7c9KaK6R3RmQ@mail.gmail.com>
 <868fd32c-6de7-d2ea-d4f8-9b1b6969fa2f@gatewaygeomatics.com>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
Message-ID: <CABUeae-2h_gt=ek2AjU2KEyAGyK4U8CmaPOH5c=RnoCqk+siRg@mail.gmail.com>

On Thu, 21 Mar 2019 at 14:04, Mateusz Loskot <mateusz at loskot.net> wrote:
> On Thu, 21 Mar 2019 at 12:45, Jeff McKenna <jmckenna at gatewaygeomatics.com> wrote:
> >
> > I spent much effort
> > to manually create all of the existing Trac wiki pages, onto Github, by
> > hand (and then we made the Trac wiki read-only).  This should be done
> > also for GDAL (but maybe now there is a more automated way).
>
> I have wondered what should be done about the Wiki pages too.
> Do you think all pages qualify to be moved?
> [...]

First, the Wiki on https://github.com/OSGeo/gdal would have to be enabled.

Is this OK to turn it on or it is off for a reason?

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Tue Mar 26 04:58:20 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Mar 2019 12:58:20 +0100
Subject: [gdal-dev] Trac Wiki (was: Closing remaining open Trac tickets
	?)
In-Reply-To: <CABUeae-2h_gt=ek2AjU2KEyAGyK4U8CmaPOH5c=RnoCqk+siRg@mail.gmail.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
 <CABUeae-2h_gt=ek2AjU2KEyAGyK4U8CmaPOH5c=RnoCqk+siRg@mail.gmail.com>
Message-ID: <129492574.OYTi3tP0LB@even-i700>

On mardi 26 mars 2019 11:18:21 CET Mateusz Loskot wrote:
> On Thu, 21 Mar 2019 at 14:04, Mateusz Loskot <mateusz at loskot.net> wrote:
> > On Thu, 21 Mar 2019 at 12:45, Jeff McKenna <jmckenna at gatewaygeomatics.com> 
wrote:
> > > I spent much effort
> > > to manually create all of the existing Trac wiki pages, onto Github, by
> > > hand (and then we made the Trac wiki read-only).  This should be done
> > > also for GDAL (but maybe now there is a more automated way).
> > 
> > I have wondered what should be done about the Wiki pages too.
> > Do you think all pages qualify to be moved?
> > [...]
> 
> First, the Wiki on https://github.com/OSGeo/gdal would have to be enabled.
> 
> Is this OK to turn it on or it is off for a reason?

Yes GH wiki is off because we have the Trac wiki, and having two wikis would 
be highly confusing.

The possible scenarios I see:
1) status quo with Trac wiki
2) migrate all or almost all content from Trac wiki to GitHub wiki, and kill 
Trac wiki
3) migrate part of Trac wiki to the future official RST doc, abandon&kill 
remaining non relevant info, and have no wiki at all. In the final state, the 
whole doc is the RST doc (PROJ current situation)
4) migrate part of Trac wiki to the future official RST doc, migrate remaining 
doc to gitub wiki, and kill Trac wiki.

3) or 4) would seem the most preferable outcome to me.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From tgertin at vt.edu  Tue Mar 26 07:19:43 2019
From: tgertin at vt.edu (Thomas Gertin)
Date: Tue, 26 Mar 2019 10:19:43 -0400
Subject: [gdal-dev] not able to get OpenCL to work
Message-ID: <CAKVWn8AQTZrYc+HErOGzd1Q0t8cChut1dztdZudv=980NUggHw@mail.gmail.com>

I am trying to get OpenCL to work with GDAL. I recently installed GDAL from
source on CentOS 7.6 and have GDAL 2.4.0. When I configured GDAL I added
this flag '--with-opencl=YES'.

I am using the 'watch nvidia-smi' command, but it is showing a low
utilization rate when I run this command:

sudo gdalwarp -t_srs EPSG:3395 -r lanczos -wo SOURCE_EXTRA=1000 -wo
USE_OPENCL=TRUE nouakchott_test_R1C1.tif
output/nouakchott_test_R1C1_3395_2.tif

Any help?

Thanks,

Tom
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/ec9652a8/attachment.html>

From ari.jolma at gmail.com  Tue Mar 26 08:50:19 2019
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 26 Mar 2019 17:50:19 +0200
Subject: [gdal-dev] Segfault in gdalrasterize
Message-ID: <2f985f18-9c8f-1b58-06ec-0eb10f77cce7@gmail.com>

We're seeing transient segfaults in gvBurnScanline with a huge in-memory 
raster created by rasterio.

The raster size is (67264, 51776).

The segfaults happen in cloud servers, not in laptops or local virtual 
machines.

Debugging is hard because rasterio installs its own libgdal but with gdb 
I see with bt

#0  __memset_avx2_unaligned_erms () at 
../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:245
#1  0x00007ffff127646f in gvBurnScanline(void*, int, int, int, double) ()
    from ../rasterio/.libs/libgdal-c9384152.so.20.5.0

Any ideas?

Thanks,

Ari



From domlysz at gmail.com  Tue Mar 26 09:20:41 2019
From: domlysz at gmail.com (Dominique Lyszczarz)
Date: Tue, 26 Mar 2019 17:20:41 +0100
Subject: [gdal-dev] Troubles with PAM file
In-Reply-To: <CAKT=1=A4U9uTBDz440=0Fa=+CRAWidF4mzd9bivqPobvnaGLiw@mail.gmail.com>
References: <CAKT=1=Df1UTDrbMrntG-Z1EvQV3S46RRAjHPisaDPXAnTZ8Byg@mail.gmail.com>
 <16029690.IHXcHmxzov@even-i700>
 <CAKT=1=A4U9uTBDz440=0Fa=+CRAWidF4mzd9bivqPobvnaGLiw@mail.gmail.com>
Message-ID: <CAKT=1=Avez=Y9azorxZ+Ah9AO4WEBMrFADhtguN3mk7AZ+PEOg@mail.gmail.com>

If it can be useful to anyone facing the same issue, my little script for
parsing these aux.xml and writing the expected GDAL commands to rectify the
raster is available here https://github.com/domlysz/PAM-GCPs-warper

Regards

Le mer. 20 mars 2019 à 18:09, Dominique Lyszczarz <domlysz at gmail.com> a
écrit :

> Thank you Even for these informations, that's good to know. I've added the
> .aux.xml in the repository if it can be useful as reference. Finally, I got
> good results with gdal_translate -gcp option following by gdalwarp. Fun
> fact, in the PAM file Y image coordinates are negatives values but must be
> pushed as positive number in gdal_translate command.
>
> Le mer. 20 mars 2019 à 15:57, Even Rouault <even.rouault at spatialys.com> a
> écrit :
>
>> Dominique,
>> >
>> > I'm trying to read a raster georeferenced with ArcGIS. It's a jpg file
>> > coming with a PAM file (.aux.xml) that store GCPs and define a
>> polynomial
>> > transformation of order 3. Unfortunately GDAL does not take the PAM file
>> > into account and gdalinfo does not report GCPs. After some
>> investigations,
>> > I found this commit
>> > <
>> https://github.com/OSGeo/gdal/commit/f8822eb50466fb740e228b8c6a7f066b916faa
>> > 0a> that suggest PAM files are supported by GDAL but only for TIFF
>> dataset.
>>
>> Not really. PAM files are supported for most formats, included JPEG, but
>> the
>> ESRI specific GCP decoding was limited for now to the GTiff format,
>> mostly
>> because of the oddity you noticed: in the case for which this was
>> developed
>> for
>> (see https://lists.osgeo.org/pipermail/gdal-dev/2017-January/045854.html
>> and
>> the related email thread), pixel coordinates were indeed surprisingly in
>> inches and from the bottom left origin. So I couldn't/didn't want to
>> generalize that to core PAM processing.
>>
>> >
>> > I'm a bit confused with theses PAM files, is there any technical doc
>> from
>> > ESRI?
>>
>> Not to my knowledge. Initially PAM was developed for GDAL itself, but it
>> seems
>> ESRI developed some extensions on top of it, like the one you are facing
>> to.
>>
>> > The file can be downloaded here :
>> >
>> https://drive.google.com/drive/folders/1hZXncJhcfZI0Uem-oCfUsruO9mPwWD0U?usp
>> > =sharing
>>
>> You didn't include the most interesting part, that is the .aux.xml file
>> itself
>>
>> Even
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/781e3e41/attachment.html>

From sean at mapbox.com  Tue Mar 26 10:18:54 2019
From: sean at mapbox.com (Sean Gillies)
Date: Tue, 26 Mar 2019 11:18:54 -0600
Subject: [gdal-dev] Segfault in gdalrasterize
In-Reply-To: <2f985f18-9c8f-1b58-06ec-0eb10f77cce7@gmail.com>
References: <2f985f18-9c8f-1b58-06ec-0eb10f77cce7@gmail.com>
Message-ID: <CADPhZXz090pApK18kmo9A-GG8Pco1qFLEt-FUz92_c7njxA78A@mail.gmail.com>

Hi Ari,

The Linux rasterio wheels I've been putting on PyPI include libraries built
for compatibility with old versions of Linux, as old as CentOS 5. If there
are any differences between the OS in your cloud and what you have on your
local machines, you may experience some differences. If you can, it could
be worth building Rasterio from source for your deployments, which would
mean installing the build prerequisites (Numpy, Cython, GDAL) and running
`pip install --no-binary rasterio rasterio`.

I wonder if you're more memory contrained in the cloud than you are on your
own computer and if this is part of the trouble.

On Tue, Mar 26, 2019 at 9:50 AM Ari Jolma <ari.jolma at gmail.com> wrote:

> We're seeing transient segfaults in gvBurnScanline with a huge in-memory
> raster created by rasterio.
>
> The raster size is (67264, 51776).
>
> The segfaults happen in cloud servers, not in laptops or local virtual
> machines.
>
> Debugging is hard because rasterio installs its own libgdal but with gdb
> I see with bt
>
> #0  __memset_avx2_unaligned_erms () at
> ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:245
> #1  0x00007ffff127646f in gvBurnScanline(void*, int, int, int, double) ()
>     from ../rasterio/.libs/libgdal-c9384152.so.20.5.0
>
> Any ideas?
>
> Thanks,
>
> Ari
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/46f069d7/attachment-0001.html>

From sean at mapbox.com  Tue Mar 26 10:55:26 2019
From: sean at mapbox.com (Sean Gillies)
Date: Tue, 26 Mar 2019 11:55:26 -0600
Subject: [gdal-dev] Encoding of keys and values returned by GDALGetMetadata?
Message-ID: <CADPhZXzFWYeqXjUGnThZiEW_u23cmb9w68PM0inw6gyQwKBwuQ@mail.gmail.com>

Hi all,

Little is said at
https://www.gdal.org/gdal_8h.html#a25929a66e99d92c2788485ecf13e2e82. Are
these values UTF-8 (as was the intent in
https://trac.osgeo.org/gdal/wiki/rfc5_unicode) or does it depend on the
format driver? In https://github.com/mapbox/rasterio/issues/1663 a rasterio
user is encountering HDF5 metadata items that can't be decoded using
Python's UTF-8 codec and I've love to be able to sort this out.

Thanks,

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/411c86d1/attachment.html>

From even.rouault at spatialys.com  Tue Mar 26 11:39:55 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Mar 2019 19:39:55 +0100
Subject: [gdal-dev] Segfault in gdalrasterize
In-Reply-To: <2f985f18-9c8f-1b58-06ec-0eb10f77cce7@gmail.com>
References: <2f985f18-9c8f-1b58-06ec-0eb10f77cce7@gmail.com>
Message-ID: <8333941.y05hydQvqo@even-i700>

On mardi 26 mars 2019 17:50:19 CET Ari Jolma wrote:
> We're seeing transient segfaults in gvBurnScanline with a huge in-memory
> raster created by rasterio.
> 
> The raster size is (67264, 51776).
> 
> The segfaults happen in cloud servers, not in laptops or local virtual
> machines.
> 
> Debugging is hard because rasterio installs its own libgdal but with gdb
> I see with bt
> 
> #0  __memset_avx2_unaligned_erms () at
> ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:245
> #1  0x00007ffff127646f in gvBurnScanline(void*, int, int, int, double) ()
>     from ../rasterio/.libs/libgdal-c9384152.so.20.5.0

First, which GDAL version ?? :-)

> 
> Any ideas?

Yes, GDAL 2.4.1 NEWS contains:

 * rasterize: fix crash when working buffer is larger than 2GB (#1338)

And the stacktrace you show reminds me a lot of the one there was for that 
issue. The working buffer size is GDAL cache max dependent, which is itself 
RAM dependent, hence why the bug happens on some machines and not other ones.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Tue Mar 26 12:44:45 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 26 Mar 2019 19:44:45 +0000
Subject: [gdal-dev] Trac Wiki (was: Closing remaining open Trac tickets
	?)
In-Reply-To: <129492574.OYTi3tP0LB@even-i700>
References: <3462139.RFeBElSrQP@even-i700>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
 <CABUeae-2h_gt=ek2AjU2KEyAGyK4U8CmaPOH5c=RnoCqk+siRg@mail.gmail.com>
 <129492574.OYTi3tP0LB@even-i700>
Message-ID: <CABUeae_FKexC-3dn1b0X=HZyyJ=fP_A9VHTfddhwb74g_R4vtw@mail.gmail.com>

On Tue, 26 Mar 2019, 11:58 Even Rouault, <even.rouault at spatialys.com> wrote:

> On mardi 26 mars 2019 11:18:21 CET Mateusz Loskot wrote:
> > On Thu, 21 Mar 2019 at 14:04, Mateusz Loskot <mateusz at loskot.net> wrote:
> > > On Thu, 21 Mar 2019 at 12:45, Jeff McKenna <
> jmckenna at gatewaygeomatics.com>
> wrote:
> > > > I spent much effort
> > > > to manually create all of the existing Trac wiki pages, onto Github,
> by
> > > > hand (and then we made the Trac wiki read-only).  This should be done
> > > > also for GDAL (but maybe now there is a more automated way).
> > >
> > > I have wondered what should be done about the Wiki pages too.
> > > Do you think all pages qualify to be moved?
> > > [...]
> >
> > First, the Wiki on https://github.com/OSGeo/gdal would have to be
> enabled.
> >
> > Is this OK to turn it on or it is off for a reason?
>
> Yes GH wiki is off because we have the Trac wiki, and having two wikis
> would
> be highly confusing.
>
> The possible scenarios I see:
> 1) status quo with Trac wiki
> 2) migrate all or almost all content from Trac wiki to GitHub wiki, and
> kill
> Trac wiki
> 3) migrate part of Trac wiki to the future official RST doc, abandon&kill
> remaining non relevant info, and have no wiki at all. In the final state,
> the
> whole doc is the RST doc (PROJ current situation)
> 4) migrate part of Trac wiki to the future official RST doc, migrate
> remaining
> doc to gitub wiki, and kill Trac wiki.
>
> 3) or 4) would seem the most preferable outcome to me.
>


I agree with your preference.
I'll be helping out with the docs then,
as we've already discussed.
Then, we decide about rest of the wiki.

Mateusz Loskot, mateusz at loskot.net
(Sent from mobile)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/c8327ea2/attachment.html>

From tobias.wendorff at tu-dortmund.de  Tue Mar 26 13:14:11 2019
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Tue, 26 Mar 2019 21:14:11 +0100
Subject: [gdal-dev] Mirror a WCS
Message-ID: <50b3fa092f577642b3c3b2c593ffc847.squirrel@webmail.tu-dortmund.de>

Hi there,

how do I correctly mirror a WCS using gdal_translate?

A WMS is easy, I'm creating a XML file, modify it as needed and download
it using gdal_translate. But I didn't find a similar workflow for WCS.

Sure, I could batch download images with 1000 x 1000 to GeoTIFF and
merge them afterwards, but I wonder, if I can do it like a WMS.

Thanks for ideas,
Tobias


From tobias.wendorff at tu-dortmund.de  Tue Mar 26 13:50:00 2019
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Tue, 26 Mar 2019 21:50:00 +0100
Subject: [gdal-dev] Mirror a WCS
In-Reply-To: <50b3fa092f577642b3c3b2c593ffc847.squirrel@webmail.tu-dortmund.de>
References: <50b3fa092f577642b3c3b2c593ffc847.squirrel@webmail.tu-dortmund.de>
Message-ID: <2beaa2b99070ff4228451a5658ac9f66.squirrel@webmail.tu-dortmund.de>

Oh great... A second after this message got released on the ML, I was
able to solve it.

It just works as expected:

gdal_translate -of GTiff -r near -tr 100 100 -projwin x x x x -projwin_srs
EPSG:25832 --debug ON --config CPL_CURL_VERBOSE YES --config
GDAL_HTTP_UNSAFESSL YES
"WCS:https://x/cgi-bin/wcs?map=x&REQUEST=GetCoverage&COVERAGE=x&CRS=EPSG:3035"
output_100.tif

Sorry for the noise.


From even.rouault at spatialys.com  Tue Mar 26 13:57:14 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Mar 2019 21:57:14 +0100
Subject: [gdal-dev] Encoding of keys and values returned by
	GDALGetMetadata?
In-Reply-To: <CADPhZXzFWYeqXjUGnThZiEW_u23cmb9w68PM0inw6gyQwKBwuQ@mail.gmail.com>
References: <CADPhZXzFWYeqXjUGnThZiEW_u23cmb9w68PM0inw6gyQwKBwuQ@mail.gmail.com>
Message-ID: <3395921.ptuAUYfEnn@even-i700>

Sean,

> Little is said at
> https://www.gdal.org/gdal_8h.html#a25929a66e99d92c2788485ecf13e2e82. Are
> these values UTF-8 (as was the intent in
> https://trac.osgeo.org/gdal/wiki/rfc5_unicode) or does it depend on the
> format driver?

The key/value mechanism itself just assumes NUL-terminated strings. The 
general aim of GDAL should be to have UTF-8 everywhere, but the reality is 
that not all drivers enforce this, so you might easily end up with 'random' 
encodings.

> In https://github.com/mapbox/rasterio/issues/1663 a rasterio
> user is encountering HDF5 metadata items that can't be decoded using
> Python's UTF-8 codec and I've love to be able to sort this out.

OK, looking at the details of this particular case, this is an inappropriate 
handling by the HDF5 driver of some types of attributes.
Fixed by
https://github.com/OSGeo/gdal/commit/9640098fc79b6ba6bb135f8715fa3e7dd2705691
which I've backported to 2.4 as well

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Tue Mar 26 16:35:45 2019
From: sean at mapbox.com (Sean Gillies)
Date: Tue, 26 Mar 2019 17:35:45 -0600
Subject: [gdal-dev] Encoding of keys and values returned by
	GDALGetMetadata?
In-Reply-To: <3395921.ptuAUYfEnn@even-i700>
References: <CADPhZXzFWYeqXjUGnThZiEW_u23cmb9w68PM0inw6gyQwKBwuQ@mail.gmail.com>
 <3395921.ptuAUYfEnn@even-i700>
Message-ID: <CADPhZXyqTU7AebMYB1u=aZRBJLoaf5LqTf0PsxVHTEcRqZjZnw@mail.gmail.com>

Even,

On Tue, Mar 26, 2019 at 2:57 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Sean,
>
> > Little is said at
> > https://www.gdal.org/gdal_8h.html#a25929a66e99d92c2788485ecf13e2e82. Are
> > these values UTF-8 (as was the intent in
> > https://trac.osgeo.org/gdal/wiki/rfc5_unicode) or does it depend on the
> > format driver?
>
> The key/value mechanism itself just assumes NUL-terminated strings. The
> general aim of GDAL should be to have UTF-8 everywhere, but the reality is
> that not all drivers enforce this, so you might easily end up with
> 'random'
> encodings.
>

I'll watch out for this.


>
> > In https://github.com/mapbox/rasterio/issues/1663 a rasterio
> > user is encountering HDF5 metadata items that can't be decoded using
> > Python's UTF-8 codec and I've love to be able to sort this out.
>
> OK, looking at the details of this particular case, this is an
> inappropriate
> handling by the HDF5 driver of some types of attributes.
> Fixed by
>
> https://github.com/OSGeo/gdal/commit/9640098fc79b6ba6bb135f8715fa3e7dd2705691
> which I've backported to 2.4 as well
>
> Even
>

Thanks for the quick fix!

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190326/0d784e53/attachment.html>

From ari.jolma at gmail.com  Tue Mar 26 23:07:23 2019
From: ari.jolma at gmail.com (Ari Jolma)
Date: Wed, 27 Mar 2019 08:07:23 +0200
Subject: [gdal-dev] Segfault in gdalrasterize
In-Reply-To: <8333941.y05hydQvqo@even-i700>
References: <2f985f18-9c8f-1b58-06ec-0eb10f77cce7@gmail.com>
 <8333941.y05hydQvqo@even-i700>
Message-ID: <fb3f3ae6-c312-d9c8-04f0-4df23d73c118@gmail.com>

Thanks Even,

Ari

Even Rouault kirjoitti 26.3.2019 klo 20.39:
> On mardi 26 mars 2019 17:50:19 CET Ari Jolma wrote:
>> We're seeing transient segfaults in gvBurnScanline with a huge in-memory
>> raster created by rasterio.
>>
>> The raster size is (67264, 51776).
>>
>> The segfaults happen in cloud servers, not in laptops or local virtual
>> machines.
>>
>> Debugging is hard because rasterio installs its own libgdal but with gdb
>> I see with bt
>>
>> #0  __memset_avx2_unaligned_erms () at
>> ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:245
>> #1  0x00007ffff127646f in gvBurnScanline(void*, int, int, int, double) ()
>>      from ../rasterio/.libs/libgdal-c9384152.so.20.5.0
> First, which GDAL version ?? :-)
>
>> Any ideas?
> Yes, GDAL 2.4.1 NEWS contains:
>
>   * rasterize: fix crash when working buffer is larger than 2GB (#1338)
>
> And the stacktrace you show reminds me a lot of the one there was for that
> issue. The working buffer size is GDAL cache max dependent, which is itself
> RAM dependent, hence why the bug happens on some machines and not other ones.
>
> Even
>

From ari.jolma at gmail.com  Wed Mar 27 02:53:25 2019
From: ari.jolma at gmail.com (Ari Jolma)
Date: Wed, 27 Mar 2019 11:53:25 +0200
Subject: [gdal-dev] Segfault in gdalrasterize
In-Reply-To: <8333941.y05hydQvqo@even-i700>
References: <2f985f18-9c8f-1b58-06ec-0eb10f77cce7@gmail.com>
 <8333941.y05hydQvqo@even-i700>
Message-ID: <d38d3d90-77ed-6db3-a445-170c8fb76bcf@gmail.com>

with 2.4.1 the segfault comes from gvBurnPoint, so that may need similar 
fix than gvBurnScanline

Ari


Even Rouault kirjoitti 26.3.2019 klo 20.39:
> On mardi 26 mars 2019 17:50:19 CET Ari Jolma wrote:
>> We're seeing transient segfaults in gvBurnScanline with a huge in-memory
>> raster created by rasterio.
>>
>> The raster size is (67264, 51776).
>>
>> The segfaults happen in cloud servers, not in laptops or local virtual
>> machines.
>>
>> Debugging is hard because rasterio installs its own libgdal but with gdb
>> I see with bt
>>
>> #0  __memset_avx2_unaligned_erms () at
>> ../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:245
>> #1  0x00007ffff127646f in gvBurnScanline(void*, int, int, int, double) ()
>>      from ../rasterio/.libs/libgdal-c9384152.so.20.5.0
> First, which GDAL version ?? :-)
>
>> Any ideas?
> Yes, GDAL 2.4.1 NEWS contains:
>
>   * rasterize: fix crash when working buffer is larger than 2GB (#1338)
>
> And the stacktrace you show reminds me a lot of the one there was for that
> issue. The working buffer size is GDAL cache max dependent, which is itself
> RAM dependent, hence why the bug happens on some machines and not other ones.
>
> Even
>

From jmckenna at gatewaygeomatics.com  Wed Mar 27 03:56:47 2019
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 27 Mar 2019 07:56:47 -0300
Subject: [gdal-dev] Trac Wiki
In-Reply-To: <129492574.OYTi3tP0LB@even-i700>
References: <3462139.RFeBElSrQP@even-i700>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
 <CABUeae-2h_gt=ek2AjU2KEyAGyK4U8CmaPOH5c=RnoCqk+siRg@mail.gmail.com>
 <129492574.OYTi3tP0LB@even-i700>
Message-ID: <07f7b0ae-5cec-6df3-2b28-7a24742504db@gatewaygeomatics.com>

On 2019-03-26 8:58 AM, Even Rouault wrote:
> 
> The possible scenarios I see:
> 1) status quo with Trac wiki
> 2) migrate all or almost all content from Trac wiki to GitHub wiki, and kill
> Trac wiki
> 3) migrate part of Trac wiki to the future official RST doc, abandon&kill
> remaining non relevant info, and have no wiki at all. In the final state, the
> whole doc is the RST doc (PROJ current situation)
> 4) migrate part of Trac wiki to the future official RST doc, migrate remaining
> doc to gitub wiki, and kill Trac wiki.
> 
> 3) or 4) would seem the most preferable outcome to me.
> 

My feedback on the #3 option:   wikis allow anyone to share their steps, 
tips, and prevent the 'funnel' happening where 1 or 2 people must 
approve doc changes, to the more official public site.

I prefer #4, but leave the old wiki pages in place & set them to read-only.

-jeff




From even.rouault at spatialys.com  Wed Mar 27 04:17:18 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Mar 2019 12:17:18 +0100
Subject: [gdal-dev] Oracle GeoRaster driver testing needed
Message-ID: <2397821.sLDWiusrG1@even-i700>

Hi,

I've recently corrected a number of issues raised by Coverity Scan (memory 
leaks, etc.) in the GeoRaster driver in master. I can only compile-test it, so 
there is some risk that regressions might pop up at runtime. Feedback from 
folks who have a test setup would be appreciated.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From tobias.wendorff at tu-dortmund.de  Wed Mar 27 04:39:50 2019
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Wed, 27 Mar 2019 12:39:50 +0100
Subject: [gdal-dev] Mirror a WCS
In-Reply-To: <2beaa2b99070ff4228451a5658ac9f66.squirrel@webmail.tu-dortmund.de>
References: <50b3fa092f577642b3c3b2c593ffc847.squirrel@webmail.tu-dortmund.de>
 <2beaa2b99070ff4228451a5658ac9f66.squirrel@webmail.tu-dortmund.de>
Message-ID: <EB31F168-0FF6-413E-9A52-B4F1CE16B88A@tu-dortmund.de>

Actually there IS a problem: the downloaded raster is off by 50 meters!

I think, I have to report an issue on github.

— 
Von einem iPhone gesendet und wird daher Fehler enthalten.

> Am 26.03.2019 um 21:50 schrieb Tobias Wendorff <tobias.wendorff at tu-dortmund.de>:
> 
> Oh great... A second after this message got released on the ML, I was
> able to solve it.
> 
> It just works as expected:
> 
> gdal_translate -of GTiff -r near -tr 100 100 -projwin x x x x -projwin_srs
> EPSG:25832 --debug ON --config CPL_CURL_VERBOSE YES --config
> GDAL_HTTP_UNSAFESSL YES
> "WCS:https://x/cgi-bin/wcs?map=x&REQUEST=GetCoverage&COVERAGE=x&CRS=EPSG:3035"
> output_100.tif
> 
> Sorry for the noise.
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From nicolas.cadieux at archeotec.ca  Wed Mar 27 08:39:23 2019
From: nicolas.cadieux at archeotec.ca (Nicolas Cadieux)
Date: Wed, 27 Mar 2019 11:39:23 -0400
Subject: [gdal-dev] ReadRaster memory hit
In-Reply-To: <60A7CD63-27F3-44CE-8DEA-189B911CCC66@archeotec.ca>
References: <E7C2B025-553A-40B6-A9ED-C8E57098FC1D@archeotec.ca>
 <11503331.a73kKzGOpv@even-i700>
 <60A7CD63-27F3-44CE-8DEA-189B911CCC66@archeotec.ca>
Message-ID: <DCAB7AE5-E324-47E8-B79A-5D27B58118F4@archeotec.ca>

Hi,

I did not get an answer for my question bellow so I did some testing.  I write to help others that will find this post.  (I am making a point to raster query tool.) It’s much faster to load a cloud of point to a function and to loop a query to each band than to load a single band to a function and to loop through the points.  Tested on 6 million points and a 288 band raster.  This might be obvious to some but I needed to test it.  

Cheers 
Nicolas

“Would it be a better approach to loop through the 200 bands inside this function?  So basically, is it faster to loop the 200 bands or to loop the thousands of points one band at a time inside this function? “

> Le 12 mars 2019 à 08:49, Nicolas Cadieux <nicolas.cadieux at archeotec.ca> a écrit :
> 
> Would it be a better approach to loop through the 200 bands inside this function?  So basically, is it faster to loop the 200 bands or to loop the thousands of points one band at a time inside this function? 

From howard at hobu.co  Wed Mar 27 09:01:40 2019
From: howard at hobu.co (Howard Butler)
Date: Wed, 27 Mar 2019 11:01:40 -0500
Subject: [gdal-dev] Trac Wiki
In-Reply-To: <07f7b0ae-5cec-6df3-2b28-7a24742504db@gatewaygeomatics.com>
References: <3462139.RFeBElSrQP@even-i700>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
 <CABUeae-2h_gt=ek2AjU2KEyAGyK4U8CmaPOH5c=RnoCqk+siRg@mail.gmail.com>
 <129492574.OYTi3tP0LB@even-i700>
 <07f7b0ae-5cec-6df3-2b28-7a24742504db@gatewaygeomatics.com>
Message-ID: <A1B2E765-E28B-424E-AA76-A195A322077E@hobu.co>



> On Mar 27, 2019, at 5:56 AM, Jeff McKenna <jmckenna at gatewaygeomatics.com> wrote:
> 
> On 2019-03-26 8:58 AM, Even Rouault wrote:
>> The possible scenarios I see:
>> 1) status quo with Trac wiki
>> 2) migrate all or almost all content from Trac wiki to GitHub wiki, and kill
>> Trac wiki
>> 3) migrate part of Trac wiki to the future official RST doc, abandon&kill
>> remaining non relevant info, and have no wiki at all. In the final state, the
>> whole doc is the RST doc (PROJ current situation)
>> 4) migrate part of Trac wiki to the future official RST doc, migrate remaining
>> doc to gitub wiki, and kill Trac wiki.
>> 3) or 4) would seem the most preferable outcome to me.
> 
> My feedback on the #3 option:   wikis allow anyone to share their steps, tips, and prevent the 'funnel' happening where 1 or 2 people must approve doc changes, to the more official public site.
> 
> I prefer #4, but leave the old wiki pages in place & set them to read-only.

I prefer #3, which is also the same situation that PROJ and MapServer have. The problem with wikis is rot and they compete for attention and search engine juice with official documentation channels. The challenge with GDAL site over the years has been the process to update has been quite onerous. A Sphinx-based site with github workflow is going to help alleviate that challenge quite a bit. It certainly did for the PROJ project, and it attracted a number of contributors who otherwise were not participating. 

My proposal is at https://github.com/OSGeo/gdal/issues/1204#issue-398700112 <https://github.com/OSGeo/gdal/issues/1204#issue-398700112> and I plan to have automated infrastructure similar to PROJ in place by the Minneapolis Sprint https://wiki.osgeo.org/wiki/OSGeo_Community_Sprint_2019 <https://wiki.osgeo.org/wiki/OSGeo_Community_Sprint_2019> for participants to be able to help work the task of porting over and organizing the bulk of the materials. Once that job is done, we can do some refinement in preparation for the GDAL 2.5 release. A big part of the effort will be preserving old links with redirects, but those would be main site items, not wiki articles.

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190327/ecc8ff6c/attachment.html>

From andrew.terry at centremaps.co.uk  Thu Mar 28 02:41:35 2019
From: andrew.terry at centremaps.co.uk (andrew terry)
Date: Thu, 28 Mar 2019 02:41:35 -0700 (MST)
Subject: [gdal-dev] Polymesh vs Faces as DXF blocks
Message-ID: <1553766095902-0.post@n6.nabble.com>

Hi,

Running the DXF exporter using a "Polymesh" block (e.g. a simple sphere)
fails but if i explode the polymesh to get "Faces" and use that as my block
my export works.

Just wondering whether there is any known reason for this - i'd thought the
block was not actually processed and just referenced in the process.

I have to swap the block manually to a polymesh after the export for it to
work in another application.

Using GDAL 2.4.0

Thanks

Andy



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From andrew.terry at centremaps.co.uk  Thu Mar 28 02:46:05 2019
From: andrew.terry at centremaps.co.uk (andrew terry)
Date: Thu, 28 Mar 2019 02:46:05 -0700 (MST)
Subject: [gdal-dev] Polymesh vs Faces as DXF blocks
In-Reply-To: <1553766095902-0.post@n6.nabble.com>
References: <1553766095902-0.post@n6.nabble.com>
Message-ID: <1553766365982-0.post@n6.nabble.com>

Just to add...

The result is the points are exported to the file and no block when it is a
polymesh. I've tried the template file as various options from R12 to
2004-2006 DXF



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Thu Mar 28 08:01:20 2019
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Thu, 28 Mar 2019 15:01:20 +0000
Subject: [gdal-dev] AsGeoJSON with SQLite dialect returns an empty string
Message-ID: <720c6291cffc4beeade7595a510a9331@C119S212VM042.msvyvi.vaha.local>

Hi,

I noticed this question https://gis.stackexchange.com/questions/316776/ogr2ogr-fails-with-no-such-table and tried to study that odd shapefile by repeating the test with GDAL 2.4.0 from OSGeo4W and there happens something with ST_AsGeoJSON that I do not understand.

This command indeed returns an empty result
ogrinfo -dialect sqlite -sql "select AsGeoJSON(geom)  from \"geo_export_98941210-c995-4502-8ebb-93a09f29d615\" limit 1"  fix.gpkg
INFO: Open of `fix.gpkg'
      using driver `GPKG' successful.

Layer name: SELECT
Geometry: None
Feature Count: 1
Layer SRS WKT:
(unknown)
AsGeoJSON(geom): String (0.0)
OGRFeature(SELECT):0
  AsGeoJSON(geom) (String) = (null)

Other Spatialite functions (AsGML, AsKML, AsBinary, AsSVG) do return the geometry, it is only AsGeoJSON that gives an empty result.

However, with a trick I could get also GeoJSON out:
ogrinfo -dialect sqlite -sql "select AsGeoJSON(st_geomfromtext(st_astext(geom)))  from \"geo_export_98941210-c995-4502-8ebb-93a09f29d615\" limit 1"  fix.gpkg
INFO: Open of `fix.gpkg'
      using driver `GPKG' successful.

Layer name: SELECT
Geometry: None
Feature Count: 1
Layer SRS WKT:
(unknown)
AsGeoJSON(st_geomfromtext(st_astext(geom))): String (0.0)
OGRFeature(SELECT):0
  AsGeoJSON(st_geomfromtext(st_astext(geom))) (String) = {"type":"Polygon","coordinates":[[[-87.666731,41.707976],[-87.66686799999998,41.70797699999999],[-87.66686699999999,41.708063],[-87.666684,41.708064],[-87.666683,41.70799499999999],[-87.66673,41.70799499999999],[-87.666731,41.707976]]]}

I could only repeat the result by reading the data directly from geopackage, not by saving the feature taken from gpkg into shapefile or OpenJUMP JML format. I produced a minimal geopackage http://latuviitta.org/downloads/one_chicago.gpkg with only one feature for testing. The command to try is

ogrinfo -dialect sqlite -sql "select AsGeoJSON(geom)  from \"geo_export_98941210-c995-4502-8ebb-93a09f29d615\""  one_chicago.gpkg

-Jukka Rahkonen-



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190328/639f6f74/attachment.html>

From even.rouault at spatialys.com  Thu Mar 28 08:31:49 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 28 Mar 2019 16:31:49 +0100
Subject: [gdal-dev] AsGeoJSON with SQLite dialect returns an empty string
In-Reply-To: <720c6291cffc4beeade7595a510a9331@C119S212VM042.msvyvi.vaha.local>
References: <720c6291cffc4beeade7595a510a9331@C119S212VM042.msvyvi.vaha.local>
Message-ID: <1673489.yrps5Gxg9n@even-i700>

On jeudi 28 mars 2019 15:01:20 CET Rahkonen Jukka (MML) wrote:
> Hi,
> 
> I noticed this question
> https://gis.stackexchange.com/questions/316776/ogr2ogr-fails-with-no-such-t
> able and tried to study that odd shapefile by repeating the test with GDAL
> 2.4.0 from OSGeo4W and there happens something with ST_AsGeoJSON that I do
> not understand.

Jukka,

This is a Spatialite bug specific of ST_AsGeoJSON + Geopackage geometry blobs. 
I've sent a patch to the Spatialite maintainer to fix it.

Other workarounds:
- for no precision loss at all, you can also do:
AsGeoJSON(ST_GeomFromWKT(AsBinary(geom)))
- or you can also use -dialect indirect_sqlite that will go through the slower 
indirection of using a virtual sqlite table with spatialite geometries.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From tobias.wendorff at tu-dortmund.de  Thu Mar 28 15:09:05 2019
From: tobias.wendorff at tu-dortmund.de (Tobias Wendorff)
Date: Thu, 28 Mar 2019 23:09:05 +0100
Subject: [gdal-dev] WCS: disk cache?
Message-ID: <2c4a343ea7b608304963a848f320f452.squirrel@webmail.tu-dortmund.de>

Hi there,

right now, when using WCS, the image cache goes to /vsimem/wcs/, can I
also write the files to disk?

Sure, I could play with a local HTTPS proxy, but a native approach would
be nice (like WMS).

Best regards,
Tobias


From taylorday.assimila at gmail.com  Fri Mar 29 02:02:08 2019
From: taylorday.assimila at gmail.com (taylorday.assimila at gmail.com)
Date: Fri, 29 Mar 2019 09:02:08 -0000
Subject: [gdal-dev] Compression not applying when updating/exiting GeoTiff
	file in GDAL?
In-Reply-To: <005d01d4e60d$99839dd0$cc8ad970$@gmail.com>
References: <003f01d4e60d$815176b0$83f46410$@gmail.com>
 <005d01d4e60d$99839dd0$cc8ad970$@gmail.com>
Message-ID: <009001d4e60e$170940c0$451bc240$@gmail.com>

Hi all,

 

I posted this question on GIS SE (link
<https://gis.stackexchange.com/questions/317009/compression-not-applying-whe
n-updating-exiting-geotiff-file-in-gdal?noredirect=1#comment515654_317009> )
but have not had any luck, so was wondering if anyone here could help. 

 

I have a `GeoTiff` file with dimensions 300 x 300 and 8760 bands (hourly for
one full year). I am testing some code that opens the file, updates ONE band
and exits - but I am finding that the file size almost doubles when I exit
the file, despite the new band being the same data type etc. Code is as
follows:

 

I am creating the `GeoTiff` file using the following creation options using
many singular `GeoTiff` files:

 

    gdal_merge.py -separate -co BIGTIFF=YES -co COMPRESS=DEFLATE -co
PREDICTOR=1 -co TILED=YES -co BLOCKXSIZE=64 -co BLOCKYSIZE=64 -o block64.tif
*.tif

    

The file size is 947MB.

 

I am then updating the file using the following code:

 

    ds = gdal.Open("block64.tif", gdal.GA_Update) 

 

    # Some simple operation to change band values

    arr = ds.GetRasterBand(11).ReadAsArray() / 2

    ds.GetRasterBand(11).WriteArray(arr)

    ds.FlushCache()

    ds = None

 

The file size is now 1.9GB.

 

My preliminary conclusion is that the compression/creation options are not
being applied once I've updated and exited the file. Is there any way to
re-compress/reapply the options once I close the file? 

 

Current options: 

 

1.	read file, make changes, save to a new file - this is not ideal as
saving the file each time I want to make an update is slow and this
operation is happening server-side and needs to be as quick as possible.
2.	Use VRTs - This is a good option, but I'd like all bands in one
GeoTiff to make I/O as quick as possible when extracting time series data,
so a VRT wrapper does not help with updating the base file. 

 

Any help would be greatly appreciated. 

 

Many thanks, 

 

Taylor 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20190329/c1d6d0b0/attachment.html>

From even.rouault at spatialys.com  Fri Mar 29 02:20:06 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 29 Mar 2019 10:20:06 +0100
Subject: [gdal-dev] Compression not applying when updating/exiting
	GeoTiff file in GDAL?
In-Reply-To: <009001d4e60e$170940c0$451bc240$@gmail.com>
References: <003f01d4e60d$815176b0$83f46410$@gmail.com>
 <005d01d4e60d$99839dd0$cc8ad970$@gmail.com>
 <009001d4e60e$170940c0$451bc240$@gmail.com>
Message-ID: <1627691.SrI4mTYx5k@even-i700>

On vendredi 29 mars 2019 09:02:08 CET taylorday.assimila at gmail.com wrote:
> Hi all,
> 
> 
> 
> I posted this question on GIS SE (link
> <https://gis.stackexchange.com/questions/317009/compression-not-applying-whe
> n-updating-exiting-geotiff-file-in-gdal?noredirect=1#comment515654_317009>
> ) but have not had any luck, so was wondering if anyone here could help.
> 
> 
> 
> I have a `GeoTiff` file with dimensions 300 x 300 and 8760 bands (hourly for
> one full year). I am testing some code that opens the file, updates ONE
> band and exits - but I am finding that the file size almost doubles when I
> exit the file, despite the new band being the same data type etc. Code is
> as follows:
> 
> 
> 
> I am creating the `GeoTiff` file using the following creation options using
> many singular `GeoTiff` files:
> 
> 
> 
>     gdal_merge.py -separate -co BIGTIFF=YES -co COMPRESS=DEFLATE -co
> PREDICTOR=1 -co TILED=YES -co BLOCKXSIZE=64 -co BLOCKYSIZE=64 -o block64.tif
> *.tif

This will create a geotiff file with default pixel-interleaving. If you want 
to update bands separately, you might prefer adding -co INTERLEAVE=BAND, so 
that TIFF tiles only contain data for one single band. With the default 
INTERLEAVE=PIXEL, when you rewrite a single band, you must be aware that you 
end up rewriting the whole file under the hood.
Which explains the dramatic effect you see on file size currently. One thing 
to have in mind is that the libtiff library used by GDAL has no "garbage 
collection", so when using compression, if the updated compressed data 
occupies a larger space than the previous one, the old space is lost and the 
new compressed data is written at the end of the file.

I don't know the datatype you use, but a uncompressed file could also be an 
option and won't have issues with growing size when being updated. This would 
be at worst a 7.1 GB file for 64-bit floating point data type.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From taylorday.assimila at gmail.com  Fri Mar 29 03:34:49 2019
From: taylorday.assimila at gmail.com (taylorday.assimila at gmail.com)
Date: Fri, 29 Mar 2019 10:34:49 -0000
Subject: [gdal-dev] Compression not applying when updating/exiting
	GeoTiff file in GDAL?
In-Reply-To: <1627691.SrI4mTYx5k@even-i700>
References: <003f01d4e60d$815176b0$83f46410$@gmail.com>
 <005d01d4e60d$99839dd0$cc8ad970$@gmail.com>
 <009001d4e60e$170940c0$451bc240$@gmail.com> <1627691.SrI4mTYx5k@even-i700>
Message-ID: <00ad01d4e61b$09dad9b0$1d908d10$@gmail.com>

Thanks for your quick reply Even, you've confirmed my thoughts. 

My reason for having all bands in one file was to reduce I/O operations so
that obtaining a time series (one pixel from each band) is super quick. We
currently have a system where each time slice is a separate GeoTiff and the
bottleneck is opening and closing each file (particularly when iterating
over 10 years' worth of hourly data - 87600 files). We also wanted to
include compression to create cloud-optimized GeoTiffs (COGs) to serve using
`vsicurl` etc. 

If I run my `gdal_merge` command with -co INTERLEAVE=BAND as you suggest, I
get a file with 8760 bands (with BIL) and then updating a single band is
almost instant (no rewriting everything as only the new band needs to be
rewritten)- so thank you! It seems that this was what I was missing and in
the end was a very simple solution! 

Taylor 

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: 29 March 2019 09:20
To: gdal-dev at lists.osgeo.org
Cc: taylorday.assimila at gmail.com
Subject: Re: [gdal-dev] Compression not applying when updating/exiting
GeoTiff file in GDAL?

On vendredi 29 mars 2019 09:02:08 CET taylorday.assimila at gmail.com wrote:
> Hi all,
> 
> 
> 
> I posted this question on GIS SE (link 
> <https://gis.stackexchange.com/questions/317009/compression-not-applyi
> ng-whe 
> n-updating-exiting-geotiff-file-in-gdal?noredirect=1#comment515654_317
> 009>
> ) but have not had any luck, so was wondering if anyone here could help.
> 
> 
> 
> I have a `GeoTiff` file with dimensions 300 x 300 and 8760 bands 
> (hourly for one full year). I am testing some code that opens the 
> file, updates ONE band and exits - but I am finding that the file size 
> almost doubles when I exit the file, despite the new band being the 
> same data type etc. Code is as follows:
> 
> 
> 
> I am creating the `GeoTiff` file using the following creation options 
> using many singular `GeoTiff` files:
> 
> 
> 
>     gdal_merge.py -separate -co BIGTIFF=YES -co COMPRESS=DEFLATE -co
> PREDICTOR=1 -co TILED=YES -co BLOCKXSIZE=64 -co BLOCKYSIZE=64 -o 
> block64.tif *.tif

This will create a geotiff file with default pixel-interleaving. If you want
to update bands separately, you might prefer adding -co INTERLEAVE=BAND, so
that TIFF tiles only contain data for one single band. With the default
INTERLEAVE=PIXEL, when you rewrite a single band, you must be aware that you
end up rewriting the whole file under the hood.
Which explains the dramatic effect you see on file size currently. One thing
to have in mind is that the libtiff library used by GDAL has no "garbage
collection", so when using compression, if the updated compressed data
occupies a larger space than the previous one, the old space is lost and the
new compressed data is written at the end of the file.

I don't know the datatype you use, but a uncompressed file could also be an
option and won't have issues with growing size when being updated. This
would be at worst a 7.1 GB file for 64-bit floating point data type.

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com


From even.rouault at spatialys.com  Fri Mar 29 03:57:18 2019
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 29 Mar 2019 11:57:18 +0100
Subject: [gdal-dev] Compression not applying when updating/exiting
	GeoTiff file in GDAL?
In-Reply-To: <00ad01d4e61b$09dad9b0$1d908d10$@gmail.com>
References: <003f01d4e60d$815176b0$83f46410$@gmail.com>
 <1627691.SrI4mTYx5k@even-i700> <00ad01d4e61b$09dad9b0$1d908d10$@gmail.com>
Message-ID: <5205306.7tF0rc5NE8@even-i700>

On vendredi 29 mars 2019 10:34:49 CET taylorday.assimila at gmail.com wrote:
> Thanks for your quick reply Even, you've confirmed my thoughts.
> 
> My reason for having all bands in one file was to reduce I/O operations so
> that obtaining a time series (one pixel from each band) is super quick. We
> currently have a system where each time slice is a separate GeoTiff and the
> bottleneck is opening and closing each file (particularly when iterating
> over 10 years' worth of hourly data - 87600 files). We also wanted to
> include compression to create cloud-optimized GeoTiffs (COGs) to serve using
> `vsicurl` etc.
> 
> If I run my `gdal_merge` command with -co INTERLEAVE=BAND as you suggest, I
> get a file with 8760 bands (with BIL) and then updating a single band is
> almost instant (no rewriting everything as only the new band needs to be
> rewritten)- so thank you! It seems that this was what I was missing and in
> the end was a very simple solution!
> 

Note that if you still use compression, the size increase effect will still 
apply and the file will likely grow over time if you constantly update band 
data. Less dramatic as with pixel interleaving of course.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Fri Mar 29 14:18:44 2019
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 29 Mar 2019 22:18:44 +0100
Subject: [gdal-dev] Trac Wiki
In-Reply-To: <A1B2E765-E28B-424E-AA76-A195A322077E@hobu.co>
References: <3462139.RFeBElSrQP@even-i700>
 <CABUeae_dqCU9YRbyZdSmx0MVw_1Jnczy_Eeic1L0FDC8nXY2cQ@mail.gmail.com>
 <CABUeae-2h_gt=ek2AjU2KEyAGyK4U8CmaPOH5c=RnoCqk+siRg@mail.gmail.com>
 <129492574.OYTi3tP0LB@even-i700>
 <07f7b0ae-5cec-6df3-2b28-7a24742504db@gatewaygeomatics.com>
 <A1B2E765-E28B-424E-AA76-A195A322077E@hobu.co>
Message-ID: <CABUeae--B2XTU4esk2O0F6gSFpCka5R84X+pM2tZov3qiVMRhg@mail.gmail.com>

On Wed, 27 Mar 2019 at 17:01, Howard Butler <howard at hobu.co> wrote:
> On Mar 27, 2019, at 5:56 AM, Jeff McKenna <jmckenna at gatewaygeomatics.com> wrote:
>> On 2019-03-26 8:58 AM, Even Rouault wrote:
>>>
>>> 3) migrate part of Trac wiki to the future official RST doc, abandon&kill
>>> remaining non relevant info, and have no wiki at all. In the final state, the
>>> whole doc is the RST doc (PROJ current situation)
>>> 4) migrate part of Trac wiki to the future official RST doc, migrate remaining
>>> doc to gitub wiki, and kill Trac wiki.
>>> 3) or 4) would seem the most preferable outcome to me.
>>
>>
>> I prefer #4, but leave the old wiki pages in place & set them to read-only.
>
> I prefer #3, which is also the same situation that PROJ and MapServer have. The problem with wikis is rot (...)

Good point. It is so easy to propose a change via PR that wiki's
particular advantage of being openly editable diminished.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From ari.jolma at gmail.com  Sun Mar 31 00:23:30 2019
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sun, 31 Mar 2019 10:23:30 +0300
Subject: [gdal-dev] WCS: disk cache?
In-Reply-To: <2c4a343ea7b608304963a848f320f452.squirrel@webmail.tu-dortmund.de>
References: <2c4a343ea7b608304963a848f320f452.squirrel@webmail.tu-dortmund.de>
Message-ID: <1885f5b1-28f3-6161-6d35-e7bf4876ccb2@gmail.com>

Tobias Wendorff kirjoitti 29.3.2019 klo 0.09:
> Hi there,
>
> right now, when using WCS, the image cache goes to /vsimem/wcs/, can I
> also write the files to disk?


GDALDriver objecs have a method CreateCopy just for that purpose.

Best regards,

Ari


>
> Sure, I could play with a local HTTPS proxy, but a native approach would
> be nice (like WMS).
>
> Best regards,
> Tobias
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

