From even.rouault at spatialys.com  Fri Dec  1 07:32:50 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 1 Dec 2023 16:32:50 +0100
Subject: [gdal-dev] Motion: adopt RFC 98: Build requirements for GDAL 3.9
Message-ID: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>

Hi,

Motion: adopt RFC 98: Build requirements for GDAL 3.9

https://github.com/OSGeo/gdal/pull/8802

Starting with my +1,

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From j1 at jimenezshaw.com  Fri Dec  1 08:05:58 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 1 Dec 2023 17:05:58 +0100
Subject: [gdal-dev] Motion: adopt RFC 98: Build requirements for GDAL 3.9
In-Reply-To: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
References: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
Message-ID: <CADRrdKtHDvfUJwNsKuc=MQuZcGb3gpmRMDsG7tTaaMmPTn_+BQ@mail.gmail.com>

+1 Javier

On Fri, 1 Dec 2023 at 16:32, Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> Motion: adopt RFC 98: Build requirements for GDAL 3.9
>
> https://github.com/OSGeo/gdal/pull/8802
>
> Starting with my +1,
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231201/3890f35b/attachment.htm>

From schwehr at gmail.com  Fri Dec  1 08:27:33 2023
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 1 Dec 2023 08:27:33 -0800
Subject: [gdal-dev] Motion: adopt RFC 98: Build requirements for GDAL 3.9
In-Reply-To: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
References: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
Message-ID: <CACmBxys=7MWr9JkKAAVyi0ACd4AHt+EnLT3kOYxt_3_1E2MhQw@mail.gmail.com>

+1 KurtS

On Fri, Dec 1, 2023, 7:34?AM Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> Motion: adopt RFC 98: Build requirements for GDAL 3.9
>
> https://github.com/OSGeo/gdal/pull/8802
>
> Starting with my +1,
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231201/a673d792/attachment-0001.htm>

From howard at hobu.co  Fri Dec  1 09:04:48 2023
From: howard at hobu.co (Howard Butler)
Date: Fri, 1 Dec 2023 11:04:48 -0600
Subject: [gdal-dev] Motion: adopt RFC 98: Build requirements for GDAL 3.9
In-Reply-To: <CACmBxys=7MWr9JkKAAVyi0ACd4AHt+EnLT3kOYxt_3_1E2MhQw@mail.gmail.com>
References: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
 <CACmBxys=7MWr9JkKAAVyi0ACd4AHt+EnLT3kOYxt_3_1E2MhQw@mail.gmail.com>
Message-ID: <8B8D483B-381A-4F51-B34E-0AF1B6DDC7B0@hobu.co>

+1 Howard

> On Dec 1, 2023, at 10:27?AM, Kurt Schwehr via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> 
> +1 KurtS
> 
> On Fri, Dec 1, 2023, 7:34?AM Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> Hi,
> 
> Motion: adopt RFC 98: Build requirements for GDAL 3.9
> 
> https://github.com/OSGeo/gdal/pull/8802
> 
> Starting with my +1,
> 
> Even
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From m.sulton1312 at gmail.com  Sat Dec  2 02:43:34 2023
From: m.sulton1312 at gmail.com (Muhamad Sulton)
Date: Sat, 2 Dec 2023 17:43:34 +0700
Subject: [gdal-dev] gdal-dev Digest, Vol 235, Issue 2
In-Reply-To: <mailman.5.1701460802.4599.gdal-dev@lists.osgeo.org>
References: <mailman.5.1701460802.4599.gdal-dev@lists.osgeo.org>
Message-ID: <CA+yrGbHPq0KU+hi-JBMzjn28Khgbc8kjOfQ+Yu8qBfoFyp72_w@mail.gmail.com>

Unsubscribe me, please

On Sat, Dec 2, 2023, 03:00 <gdal-dev-request at lists.osgeo.org> wrote:

> Send gdal-dev mailing list submissions to
>         gdal-dev at lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
> or, via email, send a message with subject or body 'help' to
>         gdal-dev-request at lists.osgeo.org
>
> You can reach the person managing the list at
>         gdal-dev-owner at lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of gdal-dev digest..."
>
>
> Today's Topics:
>
>    1. Re: Motion: adopt RFC 98: Build requirements for GDAL 3.9
>       (Howard Butler)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Fri, 1 Dec 2023 11:04:48 -0600
> From: Howard Butler <howard at hobu.co>
> To: gdal dev <gdal-dev at lists.osgeo.org>
> Subject: Re: [gdal-dev] Motion: adopt RFC 98: Build requirements for
>         GDAL 3.9
> Message-ID: <8B8D483B-381A-4F51-B34E-0AF1B6DDC7B0 at hobu.co>
> Content-Type: text/plain;       charset=utf-8
>
> +1 Howard
>
> > On Dec 1, 2023, at 10:27?AM, Kurt Schwehr via gdal-dev <
> gdal-dev at lists.osgeo.org> wrote:
> >
> > +1 KurtS
> >
> > On Fri, Dec 1, 2023, 7:34?AM Even Rouault via gdal-dev <
> gdal-dev at lists.osgeo.org> wrote:
> > Hi,
> >
> > Motion: adopt RFC 98: Build requirements for GDAL 3.9
> >
> > https://github.com/OSGeo/gdal/pull/8802
> >
> > Starting with my +1,
> >
> > Even
> >
> > --
> > http://www.spatialys.com
> > My software is free, but my time generally not.
> >
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> ------------------------------
>
> Subject: Digest Footer
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> ------------------------------
>
> End of gdal-dev Digest, Vol 235, Issue 2
> ****************************************
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231202/19ec7b2d/attachment.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Sat Dec  2 02:59:01 2023
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Sat, 2 Dec 2023 10:59:01 +0000
Subject: [gdal-dev] Motion: adopt RFC 98: Build requirements for GDAL 3.9
In-Reply-To: <CACmBxys=7MWr9JkKAAVyi0ACd4AHt+EnLT3kOYxt_3_1E2MhQw@mail.gmail.com>
References: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
 <CACmBxys=7MWr9JkKAAVyi0ACd4AHt+EnLT3kOYxt_3_1E2MhQw@mail.gmail.com>
Message-ID: <AM0PR09MB321916F15B7DF63C0AEEAF0CFD80A@AM0PR09MB3219.eurprd09.prod.outlook.com>

+1

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Kurt Schwehr via gdal-dev
L?hetetty: perjantai 1. joulukuuta 2023 18.28
Vastaanottaja: Even Rouault <even.rouault at spatialys.com>
Kopio: gdal dev <gdal-dev at lists.osgeo.org>
Aihe: Re: [gdal-dev] Motion: adopt RFC 98: Build requirements for GDAL 3.9

+1 KurtS

On Fri, Dec 1, 2023, 7:34?AM Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>> wrote:
Hi,

Motion: adopt RFC 98: Build requirements for GDAL 3.9

https://github.com/OSGeo/gdal/pull/8802

Starting with my +1,

Even

--
http://www.spatialys.com<http://www.spatialys.com/>
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231202/bf868e67/attachment.htm>

From scott.stanie at gmail.com  Sat Dec  2 18:09:18 2023
From: scott.stanie at gmail.com (Scott Staniewicz)
Date: Sat, 2 Dec 2023 21:09:18 -0500
Subject: [gdal-dev] Reading NetCDF on S3 with /vsis3/
Message-ID: <CAN4_TO-CKzFuYPzhRO+ro44EXL9pffPjSE4LUeMmAg+dzwJ6Zw@mail.gmail.com>

Are there any known limitations that prevent NetCDF datasets from being
read using `/vsis3/`?

I've created some NetCDF4 datasets with h5netcdf, and they are readable
locally and recognized by gdal. But when I put them on S3, `gdalinfo` only
recognizes them with the HDF5 driver, and fails when I force the use with
NETCDF:/vsis3/my-bucket/my-file.nc:/dataset

I'm wondering if there was some regression, because the command mentioned
here no longer works for me:
https://github.com/conda-forge/gdal-feedstock/issues/376#issuecomment-1320872404

$ gdalinfo --version
GDAL 3.7.2, released 2023/09/05

$ gdalinfo /vsicurl/
http://download.osgeo.org/gdal/data/netcdf/utm-big-chunks.nc
Driver: HDF5Image/HDF5 Dataset
Files: /vsicurl/http://download.osgeo.org/gdal/data/netcdf/utm-big-chunks.nc
Size is 3072, 3072
Metadata:
  CDI=Climate Data Interface version 1.6.0 (http://code.zmaw.de/projects/cdi
)
  CDO=Climate Data Operators version 1.6.0 (http://code.zmaw.de/projects/cdo
)
  Conventions=CF-1.5
  GDAL=GDAL 1.10.0, released 2013/04/13
  history=Tue Apr 16 16:07:46 2013: cdo -f nc4 -z zip -k auto copy utmbig.nc
utmbig2.nc
Tue Apr 16 16:06:59 2013: GDAL Create( utmbig.nc, ... )
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0, 3072.0)
Upper Right ( 3072.0,    0.0)
Lower Right ( 3072.0, 3072.0)
Center      ( 1536.0, 1536.0)
Band 1 Block=1536x1536 Type=Byte, ColorInterp=Undefined
  Metadata:
    long_name=GDAL Band Number 1
    _FillValue=0


When I upload one of the Netcdf test datasets from gdal (e.g.
https://github.com/OSGeo/gdal/blob/master/autotest/gdrivers/data/netcdf/longitude_latitude.nc)
to my s3 bucket, it fails to read it:


$ aws s3 cp longitude_latitude.nc s3://my-bucket/
upload: longitude_latitude.nc to s3://my-bucket/longitude_latitude.nc

l$ gdalinfo /vsis3/my-bucket/longitude_latitude.nc
ERROR 4: `/vsis3/my-bucket/longitude_latitude.nc' not recognized as a
supported file format.
gdalinfo failed - unable to open '/vsis3/my-bucket/longitude_latitude.nc'.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231202/288cc65d/attachment.htm>

From mdsumner at gmail.com  Sat Dec  2 20:10:25 2023
From: mdsumner at gmail.com (Michael Sumner)
Date: Sun, 3 Dec 2023 15:10:25 +1100
Subject: [gdal-dev] help please with close/reopen and GDALSubdatasetInfo
Message-ID: <CAAcGz98ajSqtOwuPFY1qxTJFSbkZrLg97xhgXz65OHL=rU1NGQ@mail.gmail.com>

May I please ask for assistance with this code?  I'm trying to close a
dataset with subdatasets and then reopen if the requested subdataset is
found.

It segfaults for all but the last subdataset name ... and I'm at a loss for
what I'm doing wrong.

Thank you.

Code below, and this gist documents it with a little more details:
https://gist.github.com/mdsumner/2ffc9b4746454fa0152b4a250900e535

Cheers, Mike


#include "gdal.h"
#include "gdal_priv.h"
#include <iostream>
int main(int argc, char **argv) {
  GDALAllRegister();

  auto poSrcDS =
    GDALDataset::Open(argv[1], GDAL_OF_RASTER, nullptr, nullptr, nullptr);
  if (poSrcDS == nullptr)
  {
    return 0;
  }
  char **papszSubdatasets = poSrcDS->GetMetadata("SUBDATASETS");
  int nSubdatasets = CSLCount(papszSubdatasets);
  char *pszSubdatasetSource = nullptr;
  if (nSubdatasets > 0)
  {
    for (int j = 0; j < nSubdatasets; j += 2)
    {
      pszSubdatasetSource = CPLStrdup(strstr(papszSubdatasets[j], "=") + 1);
      GDALSubdatasetInfoH info = GDALGetSubdatasetInfo(pszSubdatasetSource);
      if ( EQUAL(argv[2], GDALSubdatasetInfoGetSubdatasetComponent(info))) {
        std::cout << pszSubdatasetSource << "\n";
        poSrcDS->ReleaseRef();
        poSrcDS = GDALDataset::Open(pszSubdatasetSource, GDAL_OF_RASTER,
nullptr, nullptr, nullptr);
        CPLFree(pszSubdatasetSource);
        GDALDestroySubdatasetInfo(info);

      }
    }
  }

  poSrcDS->ReleaseRef();
  return 1;
}

-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231203/65a3eff8/attachment.htm>

From even.rouault at spatialys.com  Sun Dec  3 05:11:29 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 3 Dec 2023 14:11:29 +0100
Subject: [gdal-dev] help please with close/reopen and GDALSubdatasetInfo
In-Reply-To: <CAAcGz98ajSqtOwuPFY1qxTJFSbkZrLg97xhgXz65OHL=rU1NGQ@mail.gmail.com>
References: <CAAcGz98ajSqtOwuPFY1qxTJFSbkZrLg97xhgXz65OHL=rU1NGQ@mail.gmail.com>
Message-ID: <ca183679-ea93-4a32-9c1e-4979882aee7f@spatialys.com>

Hi Michael,

It was most missing a "break;" statement when the subdataset of interest 
has been found to exit the loop. Without the break, the loop will 
continue to read papszSubdatasets[] which has been invalidated by the 
poSrcDS->ReleaseRef(). Ah, memory unsafe languages :-). You also had a 
few memory leaks.

Fixed version:

#include "gdal.h"
#include "gdal_priv.h"
#include <iostream>
int main(int argc, char **argv) {
 ? GDALAllRegister();

 ? auto poSrcDS =
 ??? GDALDataset::Open(argv[1], GDAL_OF_RASTER, nullptr, nullptr, nullptr);
 ? if (poSrcDS == nullptr)
 ? {
 ??? return 0;
 ? }
 ? char **papszSubdatasets = poSrcDS->GetMetadata("SUBDATASETS");
 ? int nSubdatasets = CSLCount(papszSubdatasets);
 ? if (nSubdatasets > 0)
 ? {
 ??? for (int j = 0; j < nSubdatasets; j += 2)
 ??? {
 ????? char* pszSubdatasetSource = CPLStrdup(strstr(papszSubdatasets[j], 
"=") + 1);
 ????? GDALSubdatasetInfoH info = 
GDALGetSubdatasetInfo(pszSubdatasetSource);
 ????? char* component = info ? 
GDALSubdatasetInfoGetSubdatasetComponent(info) : NULL;
 ????? const bool bFound = component && EQUAL(argv[2], component);
 ????? CPLFree(component);
 ????? GDALDestroySubdatasetInfo(info);
 ????? if ( bFound) {
 ??????? std::cout << pszSubdatasetSource << "\n";
 ??????? poSrcDS->ReleaseRef();
 ??????? poSrcDS = GDALDataset::Open(pszSubdatasetSource, 
GDAL_OF_RASTER, nullptr, nullptr, nullptr);
 ??????? CPLFree(pszSubdatasetSource);
 ??????? break;
 ????? }
 ????? else {
 ??????? CPLFree(pszSubdatasetSource);
 ????? }
 ??? }
 ? }

 ? poSrcDS->ReleaseRef();
 ? return 1;
}

Even


Le 03/12/2023 ? 05:10, Michael Sumner via gdal-dev a ?crit?:
> #include "gdal.h"
> #include "gdal_priv.h"
> #include <iostream>
> int main(int argc, char **argv) {
> ? GDALAllRegister();
>
> ? auto poSrcDS =
> ? ? GDALDataset::Open(argv[1], GDAL_OF_RASTER, nullptr, nullptr, nullptr);
> ? if (poSrcDS == nullptr)
> ? {
> ? ? return 0;
> ? }
> ? char **papszSubdatasets = poSrcDS->GetMetadata("SUBDATASETS");
> ? int nSubdatasets = CSLCount(papszSubdatasets);
> ? char *pszSubdatasetSource = nullptr;
> ? if (nSubdatasets > 0)
> ? {
> ? ? for (int j = 0; j < nSubdatasets; j += 2)
> ? ? {
> ? ? ? pszSubdatasetSource = CPLStrdup(strstr(papszSubdatasets[j], "=") 
> + 1);
> ? ? ? GDALSubdatasetInfoH info = 
> GDALGetSubdatasetInfo(pszSubdatasetSource);
> ? ? ? if ( EQUAL(argv[2], 
> GDALSubdatasetInfoGetSubdatasetComponent(info))) {
> ? ? ? ? std::cout << pszSubdatasetSource << "\n";
> ? ? ? ? poSrcDS->ReleaseRef();
> ? ? ? ? poSrcDS = GDALDataset::Open(pszSubdatasetSource, 
> GDAL_OF_RASTER, nullptr, nullptr, nullptr);
> ? ? ? ? CPLFree(pszSubdatasetSource);
> ? ? ? ? GDALDestroySubdatasetInfo(info);
>
> ? ? ? }
> ? ? }
> ? }
>
> ? poSrcDS->ReleaseRef();
> ? return 1;
> }

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Sun Dec  3 05:28:58 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 3 Dec 2023 14:28:58 +0100
Subject: [gdal-dev] Reading NetCDF on S3 with /vsis3/
In-Reply-To: <CAN4_TO-CKzFuYPzhRO+ro44EXL9pffPjSE4LUeMmAg+dzwJ6Zw@mail.gmail.com>
References: <CAN4_TO-CKzFuYPzhRO+ro44EXL9pffPjSE4LUeMmAg+dzwJ6Zw@mail.gmail.com>
Message-ID: <fbf07082-ac0d-462e-bfd4-38a743939d7e@spatialys.com>

Scott,

Le 03/12/2023 ? 03:09, Scott Staniewicz via gdal-dev a ?crit?:
> Are there any known limitations that prevent NetCDF datasets from 
> being read using `/vsis3/`?

Yes. This requires Linux + sufficient permissions to run the userfaultfd 
Linux system call, which can be an issue when running in a container. Cf 
https://gdal.org/drivers/raster/netcdf.html#vsi-virtual-file-system-api-support.

The following works for me:

$ docker run --rm -it --security-opt seccomp=unconfined -e 
CPL_AWS_CREDENTIALS_FILE=/path/to/.aws/credentials -v $HOME:$HOME 
ghcr.io/osgeo/gdal:alpine-normal-3.8.1 gdalinfo 
/vsis3/my_bucket/longitude_latitude.nc

Driver: netCDF/Network Common Data Format
Files: /vsis3/my_bucket/longitude_latitude.nc
Size is 4, 3
Origin = (-180.041666666666657,-79.791679382324219)
Pixel Size = (0.083333333333333,-0.083328247070312)
Corner Coordinates:
Upper Left? (-180.0416667, -79.7916794)
Lower Left? (-180.0416667, -80.0416641)
Upper Right (-179.7083333, -79.7916794)
Lower Right (-179.7083333, -80.0416641)
Center????? (-179.8750000, -79.9166718)
Band 1 Block=4x1 Type=Float32, ColorInterp=Undefined
 ? NoData Value=9.96921e+36
 ? Metadata:
 ??? NETCDF_VARNAME=myvar

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231203/60b2bee9/attachment.htm>

From mdsumner at gmail.com  Sun Dec  3 11:33:13 2023
From: mdsumner at gmail.com (Michael Sumner)
Date: Mon, 4 Dec 2023 06:33:13 +1100
Subject: [gdal-dev] help please with close/reopen and GDALSubdatasetInfo
In-Reply-To: <ca183679-ea93-4a32-9c1e-4979882aee7f@spatialys.com>
References: <CAAcGz98ajSqtOwuPFY1qxTJFSbkZrLg97xhgXz65OHL=rU1NGQ@mail.gmail.com>
 <ca183679-ea93-4a32-9c1e-4979882aee7f@spatialys.com>
Message-ID: <CAAcGz9_07CUpkpds+ZL55H9KRAe7+Hr+LpbKJfXeFhBUaL-7SQ@mail.gmail.com>

Awesome, thank you!  I was a bit lost - learnt a lot from exploring this
though.

Cheers, Mike



On Mon, Dec 4, 2023 at 12:11?AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Michael,
>
> It was most missing a "break;" statement when the subdataset of interest
> has been found to exit the loop. Without the break, the loop will
> continue to read papszSubdatasets[] which has been invalidated by the
> poSrcDS->ReleaseRef(). Ah, memory unsafe languages :-). You also had a
> few memory leaks.
>
> Fixed version:
>
> #include "gdal.h"
> #include "gdal_priv.h"
> #include <iostream>
> int main(int argc, char **argv) {
>    GDALAllRegister();
>
>    auto poSrcDS =
>      GDALDataset::Open(argv[1], GDAL_OF_RASTER, nullptr, nullptr, nullptr);
>    if (poSrcDS == nullptr)
>    {
>      return 0;
>    }
>    char **papszSubdatasets = poSrcDS->GetMetadata("SUBDATASETS");
>    int nSubdatasets = CSLCount(papszSubdatasets);
>    if (nSubdatasets > 0)
>    {
>      for (int j = 0; j < nSubdatasets; j += 2)
>      {
>        char* pszSubdatasetSource = CPLStrdup(strstr(papszSubdatasets[j],
> "=") + 1);
>        GDALSubdatasetInfoH info =
> GDALGetSubdatasetInfo(pszSubdatasetSource);
>        char* component = info ?
> GDALSubdatasetInfoGetSubdatasetComponent(info) : NULL;
>        const bool bFound = component && EQUAL(argv[2], component);
>        CPLFree(component);
>        GDALDestroySubdatasetInfo(info);
>        if ( bFound) {
>          std::cout << pszSubdatasetSource << "\n";
>          poSrcDS->ReleaseRef();
>          poSrcDS = GDALDataset::Open(pszSubdatasetSource,
> GDAL_OF_RASTER, nullptr, nullptr, nullptr);
>          CPLFree(pszSubdatasetSource);
>          break;
>        }
>        else {
>          CPLFree(pszSubdatasetSource);
>        }
>      }
>    }
>
>    poSrcDS->ReleaseRef();
>    return 1;
> }
>
> Even
>
>
> Le 03/12/2023 ? 05:10, Michael Sumner via gdal-dev a ?crit :
> > #include "gdal.h"
> > #include "gdal_priv.h"
> > #include <iostream>
> > int main(int argc, char **argv) {
> >   GDALAllRegister();
> >
> >   auto poSrcDS =
> >     GDALDataset::Open(argv[1], GDAL_OF_RASTER, nullptr, nullptr,
> nullptr);
> >   if (poSrcDS == nullptr)
> >   {
> >     return 0;
> >   }
> >   char **papszSubdatasets = poSrcDS->GetMetadata("SUBDATASETS");
> >   int nSubdatasets = CSLCount(papszSubdatasets);
> >   char *pszSubdatasetSource = nullptr;
> >   if (nSubdatasets > 0)
> >   {
> >     for (int j = 0; j < nSubdatasets; j += 2)
> >     {
> >       pszSubdatasetSource = CPLStrdup(strstr(papszSubdatasets[j], "=")
> > + 1);
> >       GDALSubdatasetInfoH info =
> > GDALGetSubdatasetInfo(pszSubdatasetSource);
> >       if ( EQUAL(argv[2],
> > GDALSubdatasetInfoGetSubdatasetComponent(info))) {
> >         std::cout << pszSubdatasetSource << "\n";
> >         poSrcDS->ReleaseRef();
> >         poSrcDS = GDALDataset::Open(pszSubdatasetSource,
> > GDAL_OF_RASTER, nullptr, nullptr, nullptr);
> >         CPLFree(pszSubdatasetSource);
> >         GDALDestroySubdatasetInfo(info);
> >
> >       }
> >     }
> >   }
> >
> >   poSrcDS->ReleaseRef();
> >   return 1;
> > }
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>

-- 
Michael Sumner
Software and Database Engineer
Australian Antarctic Division
Hobart, Australia
e-mail: mdsumner at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231204/a1ee9614/attachment-0001.htm>

From carsten.schultz at pix4d.com  Mon Dec  4 03:21:02 2023
From: carsten.schultz at pix4d.com (Carsten Schultz)
Date: Mon, 4 Dec 2023 12:21:02 +0100
Subject: [gdal-dev] The pthread_atfork() issue
Message-ID: <8E6A54BC-F8AF-4A37-98BA-A99F651776B7@pix4d.com>

Hello everyone!

Please let me know if you would have preferred to discuss this on Github.

I have run into a problem with the use of pthread_atfork() in ogr_proj_p.cpp. I have since seen that the code has been disabled for macOS in 3.8 in response to https://github.com/OSGeo/gdal/issues/8497, and indeed I encountered the problem in 3.6.4 on macOS. The problems are however more general in my opinion.


I have two concerns.

1) The call `pthread_atfork(nullptr, nullptr, ForkOccurred)` install a handler which sets a flag in a global variable in a forked child. This handler should be installed exactly once. (Indeed there is no provision to remove such a handler.) However, the call is done in the constructor of OSRPJContextHolder and since there is a thread local instance of this, that constructor can be called an unlimited number of times.

2) The static flag g_bForkOccurred that is set by ForkOccured is used to signal that a fork has occurred and OSRPJContextHolder will clear that flag when it acts upon it. This means that at most one OSRPJContextHolder instance will observe the flag. That is probably not a problem as long as there is only one static or thread_local instance of OSRPJContextHolder, but it doesn?t look conceptually clean to me.


To see why (1) is a problem (except for the handler running several thousand time should a fork actually occur), there may be a limit to how many handlers can be actually registered, and pthread_atfork will return E_NOMEM if this limit is exceeded. Now since the code doesn?t check the return code and shouldn?t have registered the handler multiple times anyway, this will usually not be noticed. However, an unrelated part of the program may try to use pthread_atfork after GDAL has taken up all slots and react less nonchalantly to a failure. This is what happened to me. This is most likely the reason if a problem is noticed on macOS and not Linux, because on macOS the limit can be as low as 170 calls to pthread_atfork (4096 / 24, vm page size / size of 3 pointers) while I haven?t encountered such a limit on Linux.

Additionally pthread_atfork() is most likely not thread safe, and it is called without synchronisation.


Now all of this is of course easy to fix, but at first I wanted to ask whether you consider it actually worth the effort. If the getpid() version works fine, is that one system call expensive enough to warrant the effort of maintaining the pthread_atfork code?

Thanks for your time,

Carsten

From even.rouault at spatialys.com  Mon Dec  4 06:45:19 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Dec 2023 15:45:19 +0100
Subject: [gdal-dev] The pthread_atfork() issue
In-Reply-To: <8E6A54BC-F8AF-4A37-98BA-A99F651776B7@pix4d.com>
References: <8E6A54BC-F8AF-4A37-98BA-A99F651776B7@pix4d.com>
Message-ID: <218093d7-7956-4f64-b0f3-6529e034989b@spatialys.com>

Carsten,

thanks for the detailed analysis.

There is definitely a cost to getpid() in some circumstances. The worst 
case I can imagine is on code like the one below that looks over 
OGRCoordinateTransformation::Transform() many times. For each call to 
that function, there's a OSRGetProjTLSContext() call which involves 
getpid() when pthread_atfork is not used. The overhead is ~ 15% with 
that reproducer, so definitely measurable.

In https://github.com/OSGeo/gdal/pull/8909, I've taken into account your 
suggestion to call pthread_atfork() only once.? This is true that the 
detection might not work well with threads, but :

- generally mixing fork() and threads is a very bad idea as this leads 
to many issues like mutexes that would be taken by a thread that is not 
the one forked being let in a state where the child process can't 
acquire them anymore. So the safer practice is that you use either 
threading , or fork() your main process quite at its beginning to have 
child processes

- but even if you have let's say 2 threads A and B, and A calls fork(). 
Then the child process will only have a main thread at its creation, so 
it will inherit only from the one TLS instance of OSRPJContextHolder 
duplicated from A. Hence having a global g_bForkOccurred shouldn't be an 
issue. At least I believe... Anyway as mentioned in my previous point, 
mixing both paradigm is generally a bad idea.

Even

#include "ogr_spatialref.h"

int main(int argc, char **argv) {
 ??? OGRSpatialReference srs1;
 ??? srs1.importFromEPSG(4326);
 ??? OGRSpatialReference srs2;
 ??? srs2.importFromEPSG(32631);
 ??? auto poCT = OGRCreateCoordinateTransformation(&srs1, &srs2);
 ??? for(int i = 0; i < 5 * 1000 * 1000; ++i)
 ??? {
 ??????? double dfX = 49;
 ??????? double dfY = 2;
 ??????? poCT->TransformWithErrorCodes(1, &dfX, &dfY, nullptr, nullptr, 
nullptr);
 ??? }
 ??? delete poCT;
 ??? return 0;
}

Le 04/12/2023 ? 12:21, Carsten Schultz via gdal-dev a ?crit?:
> Hello everyone!
>
> Please let me know if you would have preferred to discuss this on Github.
>
> I have run into a problem with the use of pthread_atfork() in ogr_proj_p.cpp. I have since seen that the code has been disabled for macOS in 3.8 in response to https://github.com/OSGeo/gdal/issues/8497, and indeed I encountered the problem in 3.6.4 on macOS. The problems are however more general in my opinion.
>
>
> I have two concerns.
>
> 1) The call `pthread_atfork(nullptr, nullptr, ForkOccurred)` install a handler which sets a flag in a global variable in a forked child. This handler should be installed exactly once. (Indeed there is no provision to remove such a handler.) However, the call is done in the constructor of OSRPJContextHolder and since there is a thread local instance of this, that constructor can be called an unlimited number of times.
>
> 2) The static flag g_bForkOccurred that is set by ForkOccured is used to signal that a fork has occurred and OSRPJContextHolder will clear that flag when it acts upon it. This means that at most one OSRPJContextHolder instance will observe the flag. That is probably not a problem as long as there is only one static or thread_local instance of OSRPJContextHolder, but it doesn?t look conceptually clean to me.
>
>
> To see why (1) is a problem (except for the handler running several thousand time should a fork actually occur), there may be a limit to how many handlers can be actually registered, and pthread_atfork will return E_NOMEM if this limit is exceeded. Now since the code doesn?t check the return code and shouldn?t have registered the handler multiple times anyway, this will usually not be noticed. However, an unrelated part of the program may try to use pthread_atfork after GDAL has taken up all slots and react less nonchalantly to a failure. This is what happened to me. This is most likely the reason if a problem is noticed on macOS and not Linux, because on macOS the limit can be as low as 170 calls to pthread_atfork (4096 / 24, vm page size / size of 3 pointers) while I haven?t encountered such a limit on Linux.
>
> Additionally pthread_atfork() is most likely not thread safe, and it is called without synchronisation.
>
>
> Now all of this is of course easy to fix, but at first I wanted to ask whether you consider it actually worth the effort. If the getpid() version works fine, is that one system call expensive enough to warrant the effort of maintaining the pthread_atfork code?
>
> Thanks for your time,
>
> Carsten
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From j1 at jimenezshaw.com  Mon Dec  4 07:14:40 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 4 Dec 2023 16:14:40 +0100
Subject: [gdal-dev] Setting TIFFTAG_* in COG
Message-ID: <CADRrdKu8v7aGfS67-Y3K8e3kbJjKzYYSNu2mpu4rjS5R=6UOZg@mail.gmail.com>

Hi

I am trying to convert a "normal" tiff file into a COG. For that I am using
an intermediate vrt file to add the geolocation parameters, and finally
copy the vrt into a COG.
I am doing it in C++, but it should be similar doing it on the command line
I hope. (In some cases I am using also other parameters of the
gdalbuildvrt).

My problem is how are the "magic words" to set the TIFFTAG_* (like
TIFFTAG_DATETIME) in the final COG. I guess I could use the option "-oo"
for the options in GDALBuildVRT, or in the options of the method
"CreateCopy" for COG driver.
Is that doable that way? Should I prefix "TIFFTAG_..." with something like
"GDALMETADATA:"? (I tried, unsuccessfully)
Is that the same for AREA_OR_POINT?

Thanks.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231204/3e343d20/attachment.htm>

From even.rouault at spatialys.com  Mon Dec  4 07:46:38 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Dec 2023 16:46:38 +0100
Subject: [gdal-dev] Setting TIFFTAG_* in COG
In-Reply-To: <CADRrdKu8v7aGfS67-Y3K8e3kbJjKzYYSNu2mpu4rjS5R=6UOZg@mail.gmail.com>
References: <CADRrdKu8v7aGfS67-Y3K8e3kbJjKzYYSNu2mpu4rjS5R=6UOZg@mail.gmail.com>
Message-ID: <06477a9b-65ff-4edd-90c2-92d139d25b12@spatialys.com>

Javier,

TIFFTAG_DATETIME or AREA_OR_POINT are copied by the COG/GTiff drivers 
from the source dataset metadata.

So using gdal_translate / GDALTranslate(), you may set them with the 
"-mo KEY=VALUE" option.

If using an intermediate VRT as the source for GDALCreateCopy(), then 
you may call SetMetadataItem("KEY", "VALUE") on the VRT. I don't see an 
option in GDALBuildVRT() to do that, but you can definitely open the VRT 
after it has been created and call SetMetadataItem() on it

Even

Le 04/12/2023 ? 16:14, Javier Jimenez Shaw via gdal-dev a ?crit?:
> Hi
>
> I am trying to convert a "normal" tiff file into a COG. For that I am 
> using an intermediate vrt file to add the geolocation parameters, and 
> finally copy the vrt into a COG.
> I am doing it in C++, but it should be similar doing it on the command 
> line I hope. (In some cases I am using also other parameters of the 
> gdalbuildvrt).
>
> My problem is how are the "magic words" to set the TIFFTAG_* (like 
> TIFFTAG_DATETIME) in the final COG. I guess I could use the option 
> "-oo" for the options in GDALBuildVRT, or in the options of the method 
> "CreateCopy" for COG driver.
> Is that doable that way? Should I prefix "TIFFTAG_..." with something 
> like "GDALMETADATA:"? (I tried, unsuccessfully)
> Is that the same for AREA_OR_POINT?
>
> Thanks.
> .___ ._ ..._ .. . ._.? .___ .. __ . _. . __..? ... .... ._ .__
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231204/71dde822/attachment.htm>

From carsten.schultz at pix4d.com  Mon Dec  4 09:07:43 2023
From: carsten.schultz at pix4d.com (Carsten Schultz)
Date: Mon, 4 Dec 2023 18:07:43 +0100
Subject: [gdal-dev] The pthread_atfork() issue
In-Reply-To: <218093d7-7956-4f64-b0f3-6529e034989b@spatialys.com>
References: <8E6A54BC-F8AF-4A37-98BA-A99F651776B7@pix4d.com>
 <218093d7-7956-4f64-b0f3-6529e034989b@spatialys.com>
Message-ID: <AEC7A648-AE5B-49BA-BF89-13FACDA621B4@pix4d.com>

Even,

Thanks for the quick reply. If the getpid() has actually been measured to be an overhead, then it?s even better that this will now be resolved so that the faster code can be re-enabled for the Macs.

Since you have already created a PR I will answer there.

Best

Carsten

> On 4. Dec 2023, at 15:45, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Carsten,
> 
> thanks for the detailed analysis.
> 
> There is definitely a cost to getpid() in some circumstances. The worst case I can imagine is on code like the one below that looks over OGRCoordinateTransformation::Transform() many times. For each call to that function, there's a OSRGetProjTLSContext() call which involves getpid() when pthread_atfork is not used. The overhead is ~ 15% with that reproducer, so definitely measurable.
> 
> In https://github.com/OSGeo/gdal/pull/8909, I've taken into account your suggestion to call pthread_atfork() only once.  This is true that the detection might not work well with threads, but :
> 
> - generally mixing fork() and threads is a very bad idea as this leads to many issues like mutexes that would be taken by a thread that is not the one forked being let in a state where the child process can't acquire them anymore. So the safer practice is that you use either threading , or fork() your main process quite at its beginning to have child processes
> 
> - but even if you have let's say 2 threads A and B, and A calls fork(). Then the child process will only have a main thread at its creation, so it will inherit only from the one TLS instance of OSRPJContextHolder duplicated from A. Hence having a global g_bForkOccurred shouldn't be an issue. At least I believe... Anyway as mentioned in my previous point, mixing both paradigm is generally a bad idea.
> 
> Even
> 
> #include "ogr_spatialref.h"
> 
> int main(int argc, char **argv) {
>     OGRSpatialReference srs1;
>     srs1.importFromEPSG(4326);
>     OGRSpatialReference srs2;
>     srs2.importFromEPSG(32631);
>     auto poCT = OGRCreateCoordinateTransformation(&srs1, &srs2);
>     for(int i = 0; i < 5 * 1000 * 1000; ++i)
>     {
>         double dfX = 49;
>         double dfY = 2;
>         poCT->TransformWithErrorCodes(1, &dfX, &dfY, nullptr, nullptr, nullptr);
>     }
>     delete poCT;
>     return 0;
> }
> 
> Le 04/12/2023 ? 12:21, Carsten Schultz via gdal-dev a ?crit :
>> Hello everyone!
>> 
>> Please let me know if you would have preferred to discuss this on Github.
>> 
>> I have run into a problem with the use of pthread_atfork() in ogr_proj_p.cpp. I have since seen that the code has been disabled for macOS in 3.8 in response to https://github.com/OSGeo/gdal/issues/8497, and indeed I encountered the problem in 3.6.4 on macOS. The problems are however more general in my opinion.
>> 
>> 
>> I have two concerns.
>> 
>> 1) The call `pthread_atfork(nullptr, nullptr, ForkOccurred)` install a handler which sets a flag in a global variable in a forked child. This handler should be installed exactly once. (Indeed there is no provision to remove such a handler.) However, the call is done in the constructor of OSRPJContextHolder and since there is a thread local instance of this, that constructor can be called an unlimited number of times.
>> 
>> 2) The static flag g_bForkOccurred that is set by ForkOccured is used to signal that a fork has occurred and OSRPJContextHolder will clear that flag when it acts upon it. This means that at most one OSRPJContextHolder instance will observe the flag. That is probably not a problem as long as there is only one static or thread_local instance of OSRPJContextHolder, but it doesn?t look conceptually clean to me.
>> 
>> 
>> To see why (1) is a problem (except for the handler running several thousand time should a fork actually occur), there may be a limit to how many handlers can be actually registered, and pthread_atfork will return E_NOMEM if this limit is exceeded. Now since the code doesn?t check the return code and shouldn?t have registered the handler multiple times anyway, this will usually not be noticed. However, an unrelated part of the program may try to use pthread_atfork after GDAL has taken up all slots and react less nonchalantly to a failure. This is what happened to me. This is most likely the reason if a problem is noticed on macOS and not Linux, because on macOS the limit can be as low as 170 calls to pthread_atfork (4096 / 24, vm page size / size of 3 pointers) while I haven?t encountered such a limit on Linux.
>> 
>> Additionally pthread_atfork() is most likely not thread safe, and it is called without synchronisation.
>> 
>> 
>> Now all of this is of course easy to fix, but at first I wanted to ask whether you consider it actually worth the effort. If the getpid() version works fine, is that one system call expensive enough to warrant the effort of maintaining the pthread_atfork code?
>> 
>> Thanks for your time,
>> 
>> Carsten
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 


From j1 at jimenezshaw.com  Mon Dec  4 09:35:16 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 4 Dec 2023 18:35:16 +0100
Subject: [gdal-dev] Setting TIFFTAG_* in COG
In-Reply-To: <06477a9b-65ff-4edd-90c2-92d139d25b12@spatialys.com>
References: <CADRrdKu8v7aGfS67-Y3K8e3kbJjKzYYSNu2mpu4rjS5R=6UOZg@mail.gmail.com>
 <06477a9b-65ff-4edd-90c2-92d139d25b12@spatialys.com>
Message-ID: <CADRrdKs8ks=c0m31Tz80qHP-+NLEsfL66UpwLeV1Dz9HsEZSJg@mail.gmail.com>

Thanks!

On Mon, 4 Dec 2023 at 16:46, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier,
>
> TIFFTAG_DATETIME or AREA_OR_POINT are copied by the COG/GTiff drivers from
> the source dataset metadata.
>
> So using gdal_translate / GDALTranslate(), you may set them with the "-mo
> KEY=VALUE" option.
>
> If using an intermediate VRT as the source for GDALCreateCopy(), then you
> may call SetMetadataItem("KEY", "VALUE") on the VRT. I don't see an option
> in GDALBuildVRT() to do that, but you can definitely open the VRT after it
> has been created and call SetMetadataItem() on it
>
> Even
> Le 04/12/2023 ? 16:14, Javier Jimenez Shaw via gdal-dev a ?crit :
>
> Hi
>
> I am trying to convert a "normal" tiff file into a COG. For that I am
> using an intermediate vrt file to add the geolocation parameters, and
> finally copy the vrt into a COG.
> I am doing it in C++, but it should be similar doing it on the command
> line I hope. (In some cases I am using also other parameters of the
> gdalbuildvrt).
>
> My problem is how are the "magic words" to set the TIFFTAG_* (like
> TIFFTAG_DATETIME) in the final COG. I guess I could use the option "-oo"
> for the options in GDALBuildVRT, or in the options of the method
> "CreateCopy" for COG driver.
> Is that doable that way? Should I prefix "TIFFTAG_..." with something like
> "GDALMETADATA:"? (I tried, unsuccessfully)
> Is that the same for AREA_OR_POINT?
>
> Thanks.
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231204/fe090dae/attachment.htm>

From even.rouault at spatialys.com  Mon Dec  4 10:38:09 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Dec 2023 19:38:09 +0100
Subject: [gdal-dev] Requiring numpy for the Python bindings
Message-ID: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>

Hi,

The current situation where numpy is an optional dependency of the GDAL 
Python bindings is quite cumbersome to deal with our setup.py's 
setuptools . All details (a bit tricky) in 
https://github.com/OSGeo/gdal/issues/8069 . It seems it would be simpler 
if the bindings just required numpy, which is the confugration most 
people using the bindings likely actually end up using anyway.

Any opposition to that?

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From schwehr at gmail.com  Mon Dec  4 10:50:25 2023
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 4 Dec 2023 10:50:25 -0800
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
Message-ID: <CACmBxytgMh3KQpa4Nr+jXUaxAij6HBN2B5VeWCyHgV0Ya7fBEg@mail.gmail.com>

I lean towards just requiring numpy. It's super common and once a system
brings in gdal python, it can't be a super constrained env where keeping
things really small is critical. Just requiring numpy simplifies a number
of aspects.

I think the setup.py topic as a whole is somewhat separate.l.  So
whichever way the numpy dep goes (required or optional), switching to
pyproject.toml seems important. I'm fairly new to pyproject.toml, so I
might be missing something.

-Kurt

On Mon, Dec 4, 2023 at 10:38?AM Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> The current situation where numpy is an optional dependency of the GDAL
> Python bindings is quite cumbersome to deal with our setup.py's
> setuptools . All details (a bit tricky) in
> https://github.com/OSGeo/gdal/issues/8069 . It seems it would be simpler
> if the bindings just required numpy, which is the confugration most
> people using the bindings likely actually end up using anyway.
>
> Any opposition to that?
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231204/c9e39678/attachment.htm>

From daniel.fred.evans at gmail.com  Mon Dec  4 14:51:38 2023
From: daniel.fred.evans at gmail.com (Daniel Evans)
Date: Mon, 4 Dec 2023 22:51:38 +0000
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <CACmBxytgMh3KQpa4Nr+jXUaxAij6HBN2B5VeWCyHgV0Ya7fBEg@mail.gmail.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <CACmBxytgMh3KQpa4Nr+jXUaxAij6HBN2B5VeWCyHgV0Ya7fBEg@mail.gmail.com>
Message-ID: <CANnaQaYQrM12vL59W1VzO_2GQ=cNe8-gkt5RBJKETSjpU2cnsw@mail.gmail.com>

Agree with Kurt - it's always struck me as a little surprising that it was
optional. There's also not very much of a Python stack you can build that
involves GDAL but doesn't pull in Numpy through another dependency, as Even
said.

I would've thought that in any constrained environment where GDAL is
required, but Numpy is too much of a overhead, that using Python would be a
somewhat unusual choice to go with over the many other bindings that GDAL
offers.

Cheers,
Daniel

On Mon, 4 Dec 2023, 18:50 Kurt Schwehr via gdal-dev, <
gdal-dev at lists.osgeo.org> wrote:

> I lean towards just requiring numpy. It's super common and once a system
> brings in gdal python, it can't be a super constrained env where keeping
> things really small is critical. Just requiring numpy simplifies a number
> of aspects.
>
> I think the setup.py topic as a whole is somewhat separate.l.  So
> whichever way the numpy dep goes (required or optional), switching to
> pyproject.toml seems important. I'm fairly new to pyproject.toml, so I
> might be missing something.
>
> -Kurt
>
> On Mon, Dec 4, 2023 at 10:38?AM Even Rouault via gdal-dev <
> gdal-dev at lists.osgeo.org> wrote:
>
>> Hi,
>>
>> The current situation where numpy is an optional dependency of the GDAL
>> Python bindings is quite cumbersome to deal with our setup.py's
>> setuptools . All details (a bit tricky) in
>> https://github.com/OSGeo/gdal/issues/8069 . It seems it would be simpler
>> if the bindings just required numpy, which is the confugration most
>> people using the bindings likely actually end up using anyway.
>>
>> Any opposition to that?
>>
>> Even
>>
>> --
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231204/b6aa71a4/attachment.htm>

From sean.gillies at gmail.com  Mon Dec  4 15:47:38 2023
From: sean.gillies at gmail.com (Sean Gillies)
Date: Mon, 4 Dec 2023 16:47:38 -0700
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <CANnaQaYQrM12vL59W1VzO_2GQ=cNe8-gkt5RBJKETSjpU2cnsw@mail.gmail.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <CACmBxytgMh3KQpa4Nr+jXUaxAij6HBN2B5VeWCyHgV0Ya7fBEg@mail.gmail.com>
 <CANnaQaYQrM12vL59W1VzO_2GQ=cNe8-gkt5RBJKETSjpU2cnsw@mail.gmail.com>
Message-ID: <CAOodmJq788Hoq0tY+2x5L99ps0bJNhkALDH-iSXnipfmxNhYrA@mail.gmail.com>

For what it's worth, Rasterio has required Numpy for a few versions, and
there's never been a single complaint about it. The footprint and extra
complexity of numpy is just a drop in the bucket.

I suppose that someone using only the OGR parts of the Python bindings
might be inconvenienced, but not by much. And I suspect that the number of
these people who don't already have Numpy in their environment via
GeoPandas or Shapely is pretty small.

On Mon, Dec 4, 2023 at 3:52?PM Daniel Evans via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Agree with Kurt - it's always struck me as a little surprising that it was
> optional. There's also not very much of a Python stack you can build that
> involves GDAL but doesn't pull in Numpy through another dependency, as Even
> said.
>
> I would've thought that in any constrained environment where GDAL is
> required, but Numpy is too much of a overhead, that using Python would be a
> somewhat unusual choice to go with over the many other bindings that GDAL
> offers.
>
> Cheers,
> Daniel
>
> On Mon, 4 Dec 2023, 18:50 Kurt Schwehr via gdal-dev, <
> gdal-dev at lists.osgeo.org> wrote:
>
>> I lean towards just requiring numpy. It's super common and once a system
>> brings in gdal python, it can't be a super constrained env where keeping
>> things really small is critical. Just requiring numpy simplifies a number
>> of aspects.
>>
>> I think the setup.py topic as a whole is somewhat separate.l.  So
>> whichever way the numpy dep goes (required or optional), switching to
>> pyproject.toml seems important. I'm fairly new to pyproject.toml, so I
>> might be missing something.
>>
>> -Kurt
>>
>> On Mon, Dec 4, 2023 at 10:38?AM Even Rouault via gdal-dev <
>> gdal-dev at lists.osgeo.org> wrote:
>>
>>> Hi,
>>>
>>> The current situation where numpy is an optional dependency of the GDAL
>>> Python bindings is quite cumbersome to deal with our setup.py's
>>> setuptools . All details (a bit tricky) in
>>> https://github.com/OSGeo/gdal/issues/8069 . It seems it would be
>>> simpler
>>> if the bindings just required numpy, which is the confugration most
>>> people using the bindings likely actually end up using anyway.
>>>
>>> Any opposition to that?
>>>
>>> Even
>>>
>>>

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231204/17433359/attachment.htm>

From gdt at lexort.com  Mon Dec  4 17:13:53 2023
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 04 Dec 2023 20:13:53 -0500
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com> (Even
 Rouault via gdal-dev's message of "Mon, 4 Dec 2023 19:38:09 +0100")
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
Message-ID: <rmir0k1tpri.fsf@s1.lexort.com>

Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> writes:

> The current situation where numpy is an optional dependency of the
> GDAL Python bindings is quite cumbersome to deal with our setup.py's
> setuptools . All details (a bit tricky) in
> https://github.com/OSGeo/gdal/issues/8069 . It seems it would be
> simpler if the bindings just required numpy, which is the confugration
> most people using the bindings likely actually end up using anyway.

That seems ok, but I think it's important to realize how heavy it is.
numpy needs a Fortran compiler and a bunch of libs.  On NetBSD 9, that
leads to:

  Requires:
  gcc10>=10.3.0nb2
  python311>=3.11.0
  lapack>=3.9.0nb1
  cblas>=3.9.1nb1
  lapacke>=3.9.1nb2

which isn't bad compared to qgis, but it seems heavy compared to gdal.
Still, it's just build time, and none of those are things that don't
build.  Also, recent numpy explicitly requires gcc8, which isn't a real
problem, but it's newer than many LTS systems will have.

The big point is that numpy doesn't need rust, which seriously impairs
portability because there's a singleton compiler available for limited
platforms with a very difficult/recent self-hosting story.  Building the
rust compiler requires the *immediately preceding* compiler, which seems
unprecented, and I don't understand how people can think that's ok.  So
I think this is ok only if gdal people have understood the numpy
commmunity and think they would refrain from depending on rust.

From knudsen.thomas at gmail.com  Mon Dec  4 21:59:51 2023
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Tue, 5 Dec 2023 06:59:51 +0100
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <rmir0k1tpri.fsf@s1.lexort.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <rmir0k1tpri.fsf@s1.lexort.com>
Message-ID: <CAH0YoEPNznXm819u8jDp6bRFc8dNdV9LD4ecXnoPb=2ABKKvZQ@mail.gmail.com>

Den tirs. 5. dec. 2023 kl. 02.15 skrev Greg Troxel via gdal-dev <
gdal-dev at lists.osgeo.org>:
>  Building the
> rust compiler requires the *immediately preceding* compiler, which seems
> unprecented, and I don't understand how people can think that's ok

I don't think this is true - it's merely the common case:
Over at https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html
the description is

> The stage0 compiler is usually the current beta rustc compiler and its
associated
> dynamic libraries, which x.py will download for you.
> (You can also configure x.py to use something else.)

which makes it hardly any different than any compiler bootstrapping process.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231205/c261971d/attachment.htm>

From jan.wolski at trimble.com  Tue Dec  5 05:57:24 2023
From: jan.wolski at trimble.com (Jan Wolski)
Date: Tue, 5 Dec 2023 15:57:24 +0200
Subject: [gdal-dev] MVT tileset with limited output extent
Message-ID: <CAHFTwpHesVg71OFjrZajxstXC6G-4cEH30A=9wNLNeESeGhzkg@mail.gmail.com>

Hi,

I'm creating MVT tilesets for the ETRS-TM35FIN tiling scheme using
GDAL/OGR. I'm prototyping with ogr2ogr but later I will be using Python
bindings to create the production workflow.

Is there a way to limit the geographic extent of where the MVT driver
creates tiles? By default it seems to create all tiles that intersect any
input feature. I would like to create only tiles that intersect a given
extent. This is to enable partial update of a MVT tileset.

This is the ogr2ogr command I have now:

ogr2ogr -f MVT stand MV_R5232B.gpkg stand -dsco "MAXZOOM=11" -dsco
"MINZOOM=8" -dsco "TILE_EXTENSION=mvt" -dsco
"TILING_SCHEME=EPSG:3067,-548576,8388608,2097152" -dsco "TYPE=overlay"
-dsco "COMPRESS=NO"


Thanks,
Jan Wolski
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231205/2b669780/attachment-0001.htm>

From even.rouault at spatialys.com  Tue Dec  5 06:05:53 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Dec 2023 15:05:53 +0100
Subject: [gdal-dev] MVT tileset with limited output extent
In-Reply-To: <CAHFTwpHesVg71OFjrZajxstXC6G-4cEH30A=9wNLNeESeGhzkg@mail.gmail.com>
References: <CAHFTwpHesVg71OFjrZajxstXC6G-4cEH30A=9wNLNeESeGhzkg@mail.gmail.com>
Message-ID: <f04860f8-df3e-48f9-9ec4-919b5896fc45@spatialys.com>

You can use the -spat + (-clipsrc or -clipdst) switches of ogr2ogr

Le 05/12/2023 ? 14:57, Jan Wolski via gdal-dev a ?crit?:
> Hi,
>
> I'm creating MVT tilesets?for the?ETRS-TM35FIN tiling scheme using 
> GDAL/OGR. I'm prototyping with ogr2ogr but later I will be using 
> Python bindings to create the production workflow.
>
> Is there a way to limit the geographic extent of where the MVT driver 
> creates tiles? By default it seems to create all tiles that intersect 
> any input feature. I would like to create only tiles that intersect a 
> given extent. This is to enable partial update of a MVT tileset.
>
> This is the ogr2ogr command?I have now:
>
> ogr2ogr -f MVT stand MV_R5232B.gpkg stand -dsco "MAXZOOM=11" -dsco 
> "MINZOOM=8" -dsco "TILE_EXTENSION=mvt" -dsco 
> "TILING_SCHEME=EPSG:3067,-548576,8388608,2097152" -dsco "TYPE=overlay" 
> -dsco "COMPRESS=NO"
>
>
>
> Thanks,
> Jan Wolski
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231205/e9fc6cf3/attachment.htm>

From gdt at lexort.com  Tue Dec  5 06:27:44 2023
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 05 Dec 2023 09:27:44 -0500
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <CAH0YoEPNznXm819u8jDp6bRFc8dNdV9LD4ecXnoPb=2ABKKvZQ@mail.gmail.com>
 (Thomas Knudsen's message of "Tue, 5 Dec 2023 06:59:51 +0100")
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <rmir0k1tpri.fsf@s1.lexort.com>
 <CAH0YoEPNznXm819u8jDp6bRFc8dNdV9LD4ecXnoPb=2ABKKvZQ@mail.gmail.com>
Message-ID: <rmiplzkrafz.fsf@s1.lexort.com>

Thomas Knudsen <knudsen.thomas at gmail.com> writes:

> Den tirs. 5. dec. 2023 kl. 02.15 skrev Greg Troxel via gdal-dev <
> gdal-dev at lists.osgeo.org>:
>>  Building the
>> rust compiler requires the *immediately preceding* compiler, which seems
>> unprecented, and I don't understand how people can think that's ok
>
> I don't think this is true - it's merely the common case:

I am guessing you have not struggled with packaging  the rust compiler,
and are just using binaries provided by other people, which is the
Linuxy approach.

> Over at https://rustc-dev-guide.rust-lang.org/building/bootstrapping.html
> the description is
>
>> The stage0 compiler is usually the current beta rustc compiler and its
> associated
>> dynamic libraries, which x.py will download for you.
>> (You can also configure x.py to use something else.)
>
> which makes it hardly any different than any compiler bootstrapping process.

That page *totally omits* discussion of how far back the bootstrap
compiler can be.  That is not about the concept of bootstrapping, but
about whether the project has rules that the compiler codebase must only
use language features from some earlier times.

In theory, yes, any particular version of any particular self-hosted
compiler needs at least some previous version.  But there is a vast
practical difference between "needs some not super ancient version" and
"needs the version that was released a few months ago".  The rust
community appears to think it's ok to require the bootstrap compiler
that is really recent.

Based on hearing from and helping the people working on packaging rust
in pkgsrc, it seems quite clear that the previous release is almost
always required.  Compiling bootstrap kits is a source of considerable
difficulty, and if e.g. rust 1.60 could be used to build 1.61 through
1.74, they'd be doing it that way.

In contrast, I think people are building gcc 12 with gcc 7 without
issues.  It's not really "5 versions old" so much as "gcc from 5 years
ago can build new gcc".  With gcc, it's probably even better than that,
as they seem to get it that bootstrapping sequences are painful.  I
basically don't hear complaints about gcc bootstrapping, only discussion
from the guix/mes community about getting to full gcc from a binary seed
small enough to be hand reviewed (Thompson's trusting trust attack and
all that).

go is another example.  go 1.4 can be built from C, go 1.18 can be built
with 1.4, and later versions are buildable with 1.18.

To disprove my statement, please install a rust compiler released in
2020 and use it to build 1.74, without the system under the hood
fetching a 1.73 binary somebody else built.




From even.rouault at spatialys.com  Tue Dec  5 07:43:52 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 5 Dec 2023 16:43:52 +0100
Subject: [gdal-dev] Motion: adopt RFC 98: Build requirements for GDAL 3.9
In-Reply-To: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
References: <670717cc-e75a-42c6-a8b9-d4300b3f6111@spatialys.com>
Message-ID: <346d0e45-5f4d-45d0-9c74-019b1d87ec24@spatialys.com>

Hi,

I declare this motion passed with +1 from PSC members JavierJS, KurstS, 
HowardB, JukkaR and me.

Even

Le 01/12/2023 ? 16:32, Even Rouault via gdal-dev a ?crit?:
> Hi,
>
> Motion: adopt RFC 98: Build requirements for GDAL 3.9
>
> https://github.com/OSGeo/gdal/pull/8802
>
> Starting with my +1,
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From lnicola at dend.ro  Tue Dec  5 09:01:23 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Tue, 05 Dec 2023 19:01:23 +0200
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <rmir0k1tpri.fsf@s1.lexort.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <rmir0k1tpri.fsf@s1.lexort.com>
Message-ID: <98674a04-23b4-4aab-bdb9-944f52363049@betaapp.fastmail.com>

Hi Greg,

I'd like to better understand your concerns, so I have a couple of questions and remarks:

1. do the platforms you care about package Firefox, librsvg, or any other popular software that's using Rust?
2. do you have any reasons to believe that numpy will require Rust in the future? I skimmed the existing NEPs, including the 2.0 roadmap, and there's no mention of Rust, so it's unlikely to be on the plate for the next, say, 5 years.
3. if numpy ever requires Rust, do you expect that GDAL will be unable to support both the Rust-enabled numpy, and a previous version at the same time?
4. if numpy ever requires Rust, do you expect that the platforms you care about will stop packaging and/or updating it?
5. according to Debian's popcon, numpy has about 10x more users than GDAL [1] [2], so the packagers will be under a lot of pressure to support it anyway
6. if you're more worried about the availability of an up-to-date Rust toolchain, note that a lot of "foundational" Rust libraries have relatively conservative toolchain requirements. For example, the numpy crate (unrelated to the Python package) supports on Rust 1.48, which is from November 2020 [3].

Laurentiu

[1] https://qa.debian.org/popcon.php?package=numpy
[2] https://qa.debian.org/popcon.php?package=gdal
[3] for comparison, NetBSD 9 x86_64 has Rust 1.69 or 1.70

On Tue, Dec 5, 2023, at 03:13, Greg Troxel via gdal-dev wrote:
> Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> writes:
>
>> The current situation where numpy is an optional dependency of the
>> GDAL Python bindings is quite cumbersome to deal with our setup.py's
>> setuptools . All details (a bit tricky) in
>> https://github.com/OSGeo/gdal/issues/8069 . It seems it would be
>> simpler if the bindings just required numpy, which is the confugration
>> most people using the bindings likely actually end up using anyway.
>
> That seems ok, but I think it's important to realize how heavy it is.
> numpy needs a Fortran compiler and a bunch of libs.  On NetBSD 9, that
> leads to:
>
>   Requires:
>   gcc10>=10.3.0nb2
>   python311>=3.11.0
>   lapack>=3.9.0nb1
>   cblas>=3.9.1nb1
>   lapacke>=3.9.1nb2
>
> which isn't bad compared to qgis, but it seems heavy compared to gdal.
> Still, it's just build time, and none of those are things that don't
> build.  Also, recent numpy explicitly requires gcc8, which isn't a real
> problem, but it's newer than many LTS systems will have.
>
> The big point is that numpy doesn't need rust, which seriously impairs
> portability because there's a singleton compiler available for limited
> platforms with a very difficult/recent self-hosting story.  Building the
> rust compiler requires the *immediately preceding* compiler, which seems
> unprecented, and I don't understand how people can think that's ok.  So
> I think this is ok only if gdal people have understood the numpy
> commmunity and think they would refrain from depending on rust.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From howard at hobu.co  Tue Dec  5 16:54:57 2023
From: howard at hobu.co (Howard Butler)
Date: Tue, 5 Dec 2023 18:54:57 -0600
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <CANnaQaYQrM12vL59W1VzO_2GQ=cNe8-gkt5RBJKETSjpU2cnsw@mail.gmail.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <CACmBxytgMh3KQpa4Nr+jXUaxAij6HBN2B5VeWCyHgV0Ya7fBEg@mail.gmail.com>
 <CANnaQaYQrM12vL59W1VzO_2GQ=cNe8-gkt5RBJKETSjpU2cnsw@mail.gmail.com>
Message-ID: <C3148912-DC05-4018-83B1-63757A29085E@hobu.co>



> On Dec 4, 2023, at 4:51?PM, Daniel Evans via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> 
> Agree with Kurt - it's always struck me as a little surprising that it was optional. 

GDALs bindings predate Numpy. We spanned over the Numeric/Numarray transition IIRC too. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231205/a29c61d7/attachment.htm>

From ehabahmedehab at proton.me  Wed Dec  6 04:38:18 2023
From: ehabahmedehab at proton.me (ehabahmedehab)
Date: Wed, 06 Dec 2023 12:38:18 +0000
Subject: [gdal-dev] The Best Digital Marketing Agency in Egypt: Unleashing
 Your Business's Online Potential
Message-ID: <8KZLAiUI0GhfwIe2meEmPBblDgOBwBtohUtpvZOE3aHg1Gqpc_9YRcFIvPWY7q8vRwSwIeutpPvyTEg8WjbUMfHuZanoZ98VYXjQXXaU82c=@proton.me>

In the digital age, having a strong online presence is crucial for businesses to thrive and stay competitive. As the top digital marketing agency in Egypt, Digitology.co offers a wide range of services to help businesses optimize their online visibility and engage with their target audience effectively. In this blog post, we will explore what makes Digitology.co the best digital marketing agency in Egypt and how they can help boost your business's online presence.

A Comprehensive Range of Digital Marketing Services

Digitology.co provides a diverse array of digital marketing services, including:

1. [Social media marketing](https://digitology.co/)

2. [Google Ads and SEO services](https://digitology.co/)

3. [Website development and design](https://digitology.co/)

4. [Live event streaming](https://digitology.co/)

5. [Content creation and strategy](https://digitology.co/)

These services are tailored to meet the unique needs of each client, ensuring that they achieve the best results in the digital landscape[1].

Expertise and Experience

Founded in 2015, [Digitology.co](https://digitology.co/) has a proven track record of success in delivering creative digital services to its clients and partners[2]. Their team of dedicated professionals is driven, focused, and always prepared to tackle new challenges, ensuring that they provide the best digital marketing solutions in Egypt.

Customized Digital Strategies

Digitology.co understands that every business is unique, and they tailor their services to meet the specific needs and goals of each client[4]. This personalized approach ensures that businesses can achieve high traffic and high conversion rates, ultimately driving growth and success.

Cost-Effective Solutions

One of the most attractive aspects of Digitology.co is their cost-effective methods for driving high results for businesses[4]. Through attractive headlines, irresistible content, and call-to-action, they help businesses gain profit and encourage customers to make repetitive purchases.

[Top Digital Marketing Agency in Egypt](https://digitology.co/)

Digitology.co has been recognized as one of the top digital marketing agencies in Egypt[5]. Their ability to understand the client's vision, target market, and deliver on-time and on-budget projects has earned them a reputation as a reliable and effective digital marketing partner.

In conclusion, Digitology.co is [the best digital marketing agency in Egyp](https://digitology.co/)t, offering a comprehensive range of services, expertise, and customized solutions to help businesses optimize their online presence and achieve their digital marketing goals. If you're looking for a top [digital marketing agency](https://digitology.co/) in Egypt, look no further than Digitology.co.

Citations:

[1][https://digitology.co/digital-marketing-services/](https://%20https/digitology.co/digital-marketing-services/)

[2] https://digitology.co/ar/about-us-digital-marketing-agency-in-egypt/

[3] https://omls.oregon.gov/pipermail/afscme/2023-December/000124.html

[4] https://digitology.co/boosting-your-business-how-can-a-digital-marketing-agency-help-you/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231206/c2e1b645/attachment.htm>

From ehabahmedehab at proton.me  Wed Dec  6 04:40:50 2023
From: ehabahmedehab at proton.me (ehabahmedehab)
Date: Wed, 06 Dec 2023 12:40:50 +0000
Subject: [gdal-dev] Why Choose Digitology.co as Your Digital Marketing
 Agency in Egypt
Message-ID: <9ut7y3lhXOBxs3Mv04Oyrwp1KoipMH2-fYrXDNmFr3sQ78VHr73Nx6vCtkNqeJrMTBfjz99WfBSE2v6oCyoB3IvTFNTsWwjhQZGkJMkV5yo=@proton.me>

Looking for an exceptional [digital marketing agency in Egypt](https://digitology.co)? Look no further than [Digitology.co](https://digitology.co)! Renowned as Egypt's premier [digital marketing agency](https://digitology.co), we specialize in enhancing online presence and fostering unparalleled success for your business.

What Sets [Digitology.co](https://digitology.co) Apart as Egypt's Best [Digital Marketing Agency](https://digitology.co)?

1. Unmatched Expertise in [Digital Marketing](https://digitology.co)

At [Digitology.co](https://digitology.co), our team comprises seasoned professionals excelling in various digital marketing facets. From tailored [SEO strategies for the Egyptian market](https://digitology.co) to impactful social media campaigns, our experts craft personalized solutions to meet your unique business needs.

2. Proven Track Record of Success

As Egypt's [top digital marketing agency](https://digitology.co), our consistent delivery of outstanding results speaks volumes. We've significantly enhanced visibility, traffic, and conversions for numerous clients. Our success stories testify to our unwavering commitment to excellence.

3. Comprehensive [SEO and Online Marketing](https://digitology.co) Approach

Understanding the importance of a holistic approach, our strategies encompass diverse techniques like content optimization, link building, and technical SEO. This ensures prominent search engine rankings for your website.

Why [Digitology.co](https://digitology.co) Stands Out Among Egypt's [SEO Agencies](https://digitology.co)

As a leading [SEO agency in Egypt](https://digitology.co), we prioritize driving organic growth and maximizing online presence. Our tailored strategies aim to improve website visibility, increase organic traffic, and enhance conversions by resonating with Egyptian audiences.

Choose [Digitology.co](https://digitology.co) for Unparalleled [Digital Marketing Solutions](https://digitology.co)

Partnering with us grants access to cutting-edge strategies, personalized solutions, and a dedicated team committed to your success. We aim to propel your business to new heights through innovative, results-oriented digital marketing strategies.

Take the Next Step Towards Success

Ready to elevate your digital presence? Partner with [Digitology.co](https://digitology.co), Egypt's [best digital marketing agency](https://digitology.co). Contact us today to explore how our tailored solutions can revolutionize your online presence and drive tangible business growth. Explore [Digitology.co](https://digitology.co)'s services and witness firsthand how we transform your digital marketing endeavors. At [Digitology.co](https://digitology.co), your success is our priority!

For more info, visit the best digital marketing agency in Egypt [here](https://digitology.co)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231206/9eb3fd39/attachment-0001.htm>

From ehabahmedehab at proton.me  Wed Dec  6 04:41:24 2023
From: ehabahmedehab at proton.me (ehabahmedehab)
Date: Wed, 06 Dec 2023 12:41:24 +0000
Subject: [gdal-dev] Elevate Safety with ATISystems.com: Your Destination for
 Cutting-Edge Giant Voice and Outdoor Warning Systems
Message-ID: <8ceoqj7LJuxZm-k3AyRblL8z-OnBuFqltSbElRvSLLw5nWWtuxeCsoY8SiDTheWb3ZGpIeD5yhi3ReDdtow8DI8s3XYiIyMc9tEBOrp_kQg=@proton.me>

Ensuring safety and security in outdoor spaces stands as a paramount concern, and [ATISystems.com](http://atisystems.com/) leads the way with innovative solutions crafted to safeguard communities and businesses. Specializing in state-of-the-art giant voice systems and outdoor warning sirens, [ATISystems.com](http://atisystems.com/) offers comprehensive solutions tailored to meet your safety requirements.

What's Available at [ATISystems.com](http://atisystems.com/)?

1. Giant Voice Systems

[ATISystems.com](http://atisystems.com/) stands out in the industry by providing robust giant voice systems designed to effectively broadcast emergency messages across expansive outdoor areas. These systems play a crucial role in emergency preparedness, facilitating clear and immediate communication during critical situations.

2. Outdoor Warning Sirens

Offering a range of outdoor warning sirens, [ATISystems.com](http://atisystems.com/) ensures that communities and facilities have access to resilient alerting mechanisms. These sirens are engineered to emit high-decibel warnings, alerting individuals outdoors to potential threats or emergencies, thus enhancing overall safety protocols.

Why Opt for [ATISystems.com](http://atisystems.com/) for Your Safety Solutions?

1. Cutting-Edge Technology

[ATISystems.com](http://atisystems.com/) leverages cutting-edge technology in the development and deployment of their giant voice systems and outdoor warning sirens. The integration of advanced features ensures reliability and effectiveness precisely when it matters most.

2. Tailored Solutions

Recognizing the uniqueness of each location and scenario, [ATISystems.com](http://atisystems.com/) offers customized solutions to match specific safety requirements. Whether for municipalities, industrial sites, or educational campuses, their systems can be tailored for optimal performance.

3. Dedication to Safety

At the heart of [ATISystems.com](http://atisystems.com/) lies an unwavering commitment to safety. Their solutions are engineered to offer peace of mind, enabling swift and efficient communication during emergencies, thereby minimizing potential risks.

Discover Unmatched Safety Solutions at [ATISystems.com](http://atisystems.com/)

The dedication of [ATISystems.com](http://atisystems.com/) in delivering top-tier giant voice systems and outdoor warning sirens positions them as the go-to resource for enhancing outdoor safety measures. Their comprehensive range of products and services equips you with the necessary tools to mitigate risks and safeguard lives.

Secure Your Environment Today

Explore the cutting-edge solutions offered by [ATISystems.com](http://atisystems.com/) and take essential steps to fortify safety in your outdoor spaces. Delve into their giant voice systems and outdoor warning sirens to enhance your emergency preparedness.

For more information, please visit: [Giant Voice System]([https://atisystems.com](https://atisystems.com/)), [Outdoor Warning System]([https://atisystems.com](https://atisystems.com/)), [Outdoor Warning Siren]([https://atisystems.com](https://atisystems.com/))

Visit [[ATISystems.com](http://atisystems.com/)]([https://atisystems.com](https://atisystems.com/)) today and empower your organization or community with reliable and effective safety solutions. With [ATISystems.com](http://atisystems.com/), safety is priority.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231206/d2fcddf7/attachment.htm>

From gdt at lexort.com  Wed Dec  6 06:23:14 2023
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 06 Dec 2023 09:23:14 -0500
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <98674a04-23b4-4aab-bdb9-944f52363049@betaapp.fastmail.com>
 (=?utf-8?Q?=22Lauren=C8=9Biu?= Nicola via gdal-dev"'s message of "Tue, 05
 Dec 2023 19:01:23 +0200")
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <rmir0k1tpri.fsf@s1.lexort.com>
 <98674a04-23b4-4aab-bdb9-944f52363049@betaapp.fastmail.com>
Message-ID: <rmiy1e7mmul.fsf@s1.lexort.com>

Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org> writes:

> 1. do the platforms you care about package Firefox, librsvg, or any
> other popular software that's using Rust?

pkgsrc supports multiple operating system, multiple versions of those
systems, and multiple cpu architectures.  There are probably over a
hundred such 3-tuples.  pkgsrc has firefox, thunderbird, librsvg,
py-cryptography, matrix-synape, and more, just as you'd expect from any
other packaging system.

On some of these platforms, rust is functional.  On some of them, it is
not.  Guessing somewhat wildly, when firefox is not available, it's at
least 50% due to rust not being available.

Keeping rust going has been an ongoing source of work and problems.
This is partly because of not having a reasonable bootstrap story from
C/C++, and mostly because the singleton compiler (rust is technically a
langauge but in practice it is a single implementation, so far) has very
aggressive requirements for the bootstrap compiler.

> 2. do you have any reasons to believe that numpy will require Rust in
> the future? I skimmed the existing NEPs, including the 2.0 roadmap,
> and there's no mention of Rust, so it's unlikely to be on the plate
> for the next, say, 5 years.

I have no particular reason to believe it will happen.  I have seen many
things switch to rust and cause portability problems, and there appears
to be little concern for that during the switching process.  I don't
know if that's not understanding, not caring, thinking that switching is
so important that it is worth the harm, or something else I haven't
thought of.  I therefore find it hard to reason about these choices made
by others.

> 3. if numpy ever requires Rust, do you expect that GDAL will be unable
> to support both the Rust-enabled numpy, and a previous version at the
> same time?

Eventually, yes, that's how it usually works.  The pattern in general is
that some package becomes difficult because of a non-portable
dependency, and then people add in the previous version.   pkgsrc has
done this with py-cryptography.  But nobody maintains the old verison
and it becomes less and less reasonable

> 4. if numpy ever requires Rust, do you expect that the platforms you care about will stop packaging and/or updating it?

See 1; "platforms" isn't really apt here.  pkgsrc will certainly
continue to try to support rust and will almost almost certainly succeed
on things like recent versions of NetBSD on x86_64, aarch64, and
riscv64.  Rust will almost certainly be non-functional on minority CPU
types and older systems.

> 5. according to Debian's popcon, numpy has about 10x more users than
> GDAL [1] [2], so the packagers will be under a lot of pressure to
> support it anyway

Yes, but pressure doesn't work when it's technically infeasible.

> 6. if you're more worried about the availability of an up-to-date Rust
> toolchain, note that a lot of "foundational" Rust libraries have
> relatively conservative toolchain requirements. For example, the numpy
> crate (unrelated to the Python package) supports on Rust 1.48, which
> is from November 2020 [3].

Generally from a security viewpoint, it's only ok to run maintained
versions.  But yes, it may be that we version rust and support old, if
rust portability deteriorates.



I didn't mean this to be "it would be terrible to require numpy".  I am
just raising the portability issues becuase I find they often don't get
considered.  When A adds a dependency on P, then the set of systems (the
os-osversion-cpuarch tuple) A runs on is limited to the set P runs on,
and the future A' is limited to the future P'.  py-cryptography is a
good example of a package that used to run quite widely and now does
not.

Already, numpy requires a fortran compiler and BLAS type libs, which
don't really seem necessary for GDAL-type things.



I'm not really clear on why py-gdal uses numpy, and a quick scan of the
code makes it look like runtime import, with some of them guarded by
try/except.  A situation where you can still install py-gdal and the
functions that are "return me this layer as a numpy object" throw
exceptions and everything else works seems much better than having the
install fail.


What benefit does a hard requirement bring us, that is more important
than the downside of the current and future portability issues?

From lnicola at dend.ro  Wed Dec  6 06:58:27 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Wed, 06 Dec 2023 16:58:27 +0200
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <rmiy1e7mmul.fsf@s1.lexort.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <rmir0k1tpri.fsf@s1.lexort.com>
 <98674a04-23b4-4aab-bdb9-944f52363049@betaapp.fastmail.com>
 <rmiy1e7mmul.fsf@s1.lexort.com>
Message-ID: <aa215526-6028-4ffb-a94f-d7d3eea32f76@betaapp.fastmail.com>

On Wed, Dec 6, 2023, at 16:23, Greg Troxel via gdal-dev wrote:
> Keeping rust going has been an ongoing source of work and problems.
> This is partly because of not having a reasonable bootstrap story from
> C/C++, and mostly because the singleton compiler (rust is technically a
> langauge but in practice it is a single implementation, so far) has very
> aggressive requirements for the bootstrap compiler.

You might be aware of these, but there are two unrelated projects, gcc-rs (Rust front-end for GCC), and rustc_codegen_gcc (GCC back-end for rustc). These aren't going to solve the bootstrapping problems, but they can improve platform support -- not today, but a 5-year timeline seems reasonable.

> I have no particular reason to believe it will happen.  I have seen many
> things switch to rust and cause portability problems, and there appears
> to be little concern for that during the switching process.  I don't
> know if that's not understanding, not caring, thinking that switching is
> so important that it is worth the harm, or something else I haven't
> thought of.  I therefore find it hard to reason about these choices made
> by others.

This is more subtle than "not caring". Developers care about their software enough to be willing to throw away large parts of it, in order to be able to use Rust. What they care less about is portability to platforms they've never touched. Maybe they work on x86-64 and can test on AArch64, but just because somebody does the packaging for GNU Hurd, s390x or Amiga, that doesn't mean they are required to support a platform they're never going to touch.

See also https://blog.yossarian.net/2021/02/28/Weird-architectures-werent-supported-to-begin-with, which raises similar points.

>> 6. if you're more worried about the availability of an up-to-date Rust
>> toolchain, note that a lot of "foundational" Rust libraries have
>> relatively conservative toolchain requirements. For example, the numpy
>> crate (unrelated to the Python package) supports on Rust 1.48, which
>> is from November 2020 [3].
>
> Generally from a security viewpoint, it's only ok to run maintained
> versions.  But yes, it may be that we version rust and support old, if
> rust portability deteriorates.

I mean, it builds on 1.48, but still works on future versions. If NetBSD has 1.70, it will certainly build on that version. 1.48 is just the minimum required toolchain.

> What benefit does a hard requirement bring us, that is more important
> than the downside of the current and future portability issues?

If I understand correctly, it works around a Python packaging limitation where GDAL can't properly specify or detect its optional dependencies.

Laurentiu

From gdt at lexort.com  Wed Dec  6 07:27:05 2023
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 06 Dec 2023 10:27:05 -0500
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <aa215526-6028-4ffb-a94f-d7d3eea32f76@betaapp.fastmail.com>
 (=?utf-8?Q?=22Lauren=C8=9Biu?= Nicola via gdal-dev"'s message of "Wed, 06
 Dec 2023 16:58:27 +0200")
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
 <rmir0k1tpri.fsf@s1.lexort.com>
 <98674a04-23b4-4aab-bdb9-944f52363049@betaapp.fastmail.com>
 <rmiy1e7mmul.fsf@s1.lexort.com>
 <aa215526-6028-4ffb-a94f-d7d3eea32f76@betaapp.fastmail.com>
Message-ID: <rmi7clrmjw6.fsf@s1.lexort.com>

Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org> writes:

> On Wed, Dec 6, 2023, at 16:23, Greg Troxel via gdal-dev wrote:
>> Keeping rust going has been an ongoing source of work and problems.
>> This is partly because of not having a reasonable bootstrap story from
>> C/C++, and mostly because the singleton compiler (rust is technically a
>> langauge but in practice it is a single implementation, so far) has very
>> aggressive requirements for the bootstrap compiler.
>
> You might be aware of these, but there are two unrelated projects,
> gcc-rs (Rust front-end for GCC), and rustc_codegen_gcc (GCC back-end
> for rustc). These aren't going to solve the bootstrapping problems,
> but they can improve platform support -- not today, but a 5-year
> timeline seems reasonable.

I am aware of the first.  They may well improve support, but it will
take the rust community to value a stable language specification to the
point where the flagship compiler can build with reasonably recent
versions of gcc-rs.

> This is more subtle than "not caring". Developers care about their
> software enough to be willing to throw away large parts of it, in
> order to be able to use Rust. What they care less about is portability
> to platforms they've never touched. Maybe they work on x86-64 and can
> test on AArch64, but just because somebody does the packaging for GNU
> Hurd, s390x or Amiga, that doesn't mean they are required to support a
> platform they're never going to touch.

That sounds exactly like "not caring".  The point is that if one has
dependencies that have reasonable portability stories, and writes to
POSIX, then you produce things that are mostly portable and others will
send little patches and we all get along fine.  There is no "requirement
to support"; this is about "don't choose to make it effectively
impossible".  In the middle is "there is no reason it shouldn't work,
but if there's a bug please send a patch".

Choosing a dependency that has bad portability is a decision to make
your project not work on platforms that the non-portable dependency has
chosen to not make work.

> See also
> https://blog.yossarian.net/2021/02/28/Weird-architectures-werent-supported-to-begin-with,
> which raises similar points.

Long ago, free software struggled against "everybody should just use
windows".

>> What benefit does a hard requirement bring us, that is more important
>> than the downside of the current and future portability issues?
>
> If I understand correctly, it works around a Python packaging limitation where GDAL can't properly specify or detect its optional dependencies.

I guess there is that vs the try/except, or just let the things that
need to import numpy throw an exception, letting most of the use cases
work.  Surely one doesn't need numpy to read a geojson, or a vector
table out of a geopackage.

From even.rouault at spatialys.com  Wed Dec  6 12:01:37 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 6 Dec 2023 21:01:37 +0100
Subject: [gdal-dev] Requiring numpy for the Python bindings
In-Reply-To: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
References: <0ea20800-751f-4986-816a-856bf5638d13@spatialys.com>
Message-ID: <ad56eb94-1c4b-4b68-bde6-3fd323f051fe@spatialys.com>

Hi,

cf https://github.com/OSGeo/gdal/pull/8926 for a proposed resolution 
that is hopefully a good-enough compromise. In short, numpy as a *build* 
requirement (if using pip. if you use setuptools directly, you may set 
an env var if you really really don't want to have numpy in your way), 
but an optional runtime dependency.

Even

Le 04/12/2023 ? 19:38, Even Rouault via gdal-dev a ?crit?:
> Hi,
>
> The current situation where numpy is an optional dependency of the 
> GDAL Python bindings is quite cumbersome to deal with our setup.py's 
> setuptools . All details (a bit tricky) in 
> https://github.com/OSGeo/gdal/issues/8069 . It seems it would be 
> simpler if the bindings just required numpy, which is the confugration 
> most people using the bindings likely actually end up using anyway.
>
> Any opposition to that?
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From cmulershen at gmail.com  Wed Dec  6 21:09:57 2023
From: cmulershen at gmail.com (zs s)
Date: Thu, 7 Dec 2023 13:09:57 +0800
Subject: [gdal-dev] Virtual File Systems s3 not working
Message-ID: <CAMrRSDUHHWy0sdmTOfje7x_j4i8+ugmMUOov5kABxD7NTUFm7w@mail.gmail.com>

Hi,
When I use the following command, I get an error.

command:
ogrinfo --config AWS_ACCESS_KEY_ID "XXX" --config AWS_SECRET_ACCESS_KEY
"XXX" --config AWS_S3_ENDPOINT XXX --config AWS_HTTPS NO --config
AWS_VIRTUAL_HOSTING FALSE /vsizip//viss3//oss20/test.shp.zip

error message:
ogrinfo failed - unable to open '/vsizip//viss3//oss20/test.shp.zip'

It runs fine locally, is there any way to troubleshoot the problem? Is it
related to the operating system? We are using a less common linux
distribution.

thanks
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231207/f9b230ba/attachment.htm>

From cmulershen at gmail.com  Wed Dec  6 21:12:12 2023
From: cmulershen at gmail.com (zs s)
Date: Thu, 7 Dec 2023 13:12:12 +0800
Subject: [gdal-dev] Virtual File Systems s3 not working
In-Reply-To: <CAMrRSDUHHWy0sdmTOfje7x_j4i8+ugmMUOov5kABxD7NTUFm7w@mail.gmail.com>
References: <CAMrRSDUHHWy0sdmTOfje7x_j4i8+ugmMUOov5kABxD7NTUFm7w@mail.gmail.com>
Message-ID: <CAMrRSDV7doZTyraO7K=SWqDN_h8SG0Q5k1+tBBf6PAjGzKZUNQ@mail.gmail.com>

The path is /vsizip//vsis3//oss20/test.shp.zip, sorry, it's typo, but it's
still not work

zs s <cmulershen at gmail.com> ?2023?12?7??? 13:09???

> Hi,
> When I use the following command, I get an error.
>
> command:
> ogrinfo --config AWS_ACCESS_KEY_ID "XXX" --config AWS_SECRET_ACCESS_KEY
> "XXX" --config AWS_S3_ENDPOINT XXX --config AWS_HTTPS NO --config
> AWS_VIRTUAL_HOSTING FALSE /vsizip//viss3//oss20/test.shp.zip
>
> error message:
> ogrinfo failed - unable to open '/vsizip//viss3//oss20/test.shp.zip'
>
> It runs fine locally, is there any way to troubleshoot the problem? Is it
> related to the operating system? We are using a less common linux
> distribution.
>
> thanks
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231207/08433b4e/attachment.htm>

From jesse.r.meyer at nasa.gov  Fri Dec  8 09:06:59 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Fri, 8 Dec 2023 17:06:59 +0000
Subject: [gdal-dev] GTiff bit shuffle compression feature request
Message-ID: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>

Hi,

When using horizonal differencing to reduce the numerical range of band data, the upper bytes in the produced stream are typically 0 which leverages LZ?s byte based compression model.  But the least significant bytes can still have many significant bits as 0. Unless the whole byte is replicated, LZ compressors can?t do much to leverage the pattern however.  For data with temporal and or spatial coherence, ?shuffling? is another effective strategy to losslessly reform the data stream to be favorable to LZ style compressors.  And plays nicely off gains already provided by the PREDICTOR functionality.

The notion is to arrange the bit stream where the Nth ?shuffled? byte contains the Nth bit from each byte in the sequence.  The sequence length is usually determined by the data type bit length.

For example (for brevity, assume bytes are 4 bits long)

Byte 1,  Byte 2, Byte 3, Byte 4
0001, 0011, 0111, 0001

They all share the top 0 bit and the bottom 1 bit,

?Shuffled?
0000, 0010, 0110, 1111

The algorithm is pretty simple to implement, and can be SIMD accelerated for high performance.

While we specifically are users of the GTIFF format, such a strategy could be employed generically for most raster and even vector formats.

Best,
Jesse
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/d044b8c4/attachment.htm>

From even.rouault at spatialys.com  Fri Dec  8 09:19:51 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Dec 2023 18:19:51 +0100
Subject: [gdal-dev] GTiff bit shuffle compression feature request
In-Reply-To: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
Message-ID: <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>

Jesse,

This would break interoperability with other TIFF readers... Even adding 
a new TIFF tag to advertize that bit shuffling is applied would probably 
not be a sufficient guard, as existing readers wouldn't read it, and 
would just display garbage, which is worth that not being able to open 
the file at all. The only way I can think off of doing that in a safe 
way would be to use new values for the Compression tag, which isn't 
pretty either.

You should probably try Zarr which has such capability with the Blosc 
codec. Cf https://gdal.org/drivers/raster/zarr.html : BLOSC_SHUFFLE

I'm curious however to know which typical compression gain you get with 
that.

Even


Le 08/12/2023 ? 18:06, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND 
APPLICATIONS INC] via gdal-dev a ?crit?:
>
> Hi,
>
> When using horizonal differencing to reduce the numerical range of 
> band data, the upper bytes in the produced stream are typically 0 
> which leverages LZ?s byte based compression model.? But the least 
> significant bytes can still have many significant bits as 0. Unless 
> the whole byte is replicated, LZ compressors can?t do much to leverage 
> the pattern however.? For data with temporal and or spatial coherence, 
> ?shuffling? is another effective strategy to losslessly reform the 
> data stream to be favorable to LZ style compressors.? And plays nicely 
> off gains already provided by the PREDICTOR functionality.
>
> The notion is to arrange the bit stream where the Nth ?shuffled? byte 
> contains the Nth bit from each byte in the sequence.? The sequence 
> length is usually determined by the data type bit length.
>
> For example (for brevity, assume bytes are 4 bits long)
>
> Byte 1,? Byte 2, Byte 3, Byte 4
>
> 0001, 0011, 0111, 0001
>
> They all share the top 0 bit and the bottom 1 bit,
>
> ?Shuffled?
>
> 0000, 0010, 0110, 1111
>
> The algorithm is pretty simple to implement, and can be SIMD 
> accelerated for high performance.
>
> While we specifically are users of the GTIFF format, such a strategy 
> could be employed generically for most raster and even vector formats.
>
> Best,
>
> Jesse
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/27ca1f9b/attachment.htm>

From jesse.r.meyer at nasa.gov  Fri Dec  8 09:40:07 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Fri, 8 Dec 2023 17:40:07 +0000
Subject: [gdal-dev] [EXTERNAL] Re: GTiff bit shuffle compression feature
 request
In-Reply-To: <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
Message-ID: <40897EDD-E773-458C-8560-A8FEEFD66437@ndc.nasa.gov>

Thanks for the suggestion Even, we?ll see how effective Zarr is for our datasets.

Jesse

From: Even Rouault <even.rouault at spatialys.com>
Date: Friday, December 8, 2023 at 12:20 PM
To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov>, gdallists <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] Re: [gdal-dev] GTiff bit shuffle compression feature request

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.



Jesse,

This would break interoperability with other TIFF readers... Even adding a new TIFF tag to advertize that bit shuffling is applied would probably not be a sufficient guard, as existing readers wouldn't read it, and would just display garbage, which is worth that not being able to open the file at all. The only way I can think off of doing that in a safe way would be to use new values for the Compression tag, which isn't pretty either.

You should probably try Zarr which has such capability with the Blosc codec. Cf https://gdal.org/drivers/raster/zarr.html : BLOSC_SHUFFLE

I'm curious however to know which typical compression gain you get with that.

Even


Le 08/12/2023 ? 18:06, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev a ?crit :
Hi,

When using horizonal differencing to reduce the numerical range of band data, the upper bytes in the produced stream are typically 0 which leverages LZ?s byte based compression model.  But the least significant bytes can still have many significant bits as 0. Unless the whole byte is replicated, LZ compressors can?t do much to leverage the pattern however.  For data with temporal and or spatial coherence, ?shuffling? is another effective strategy to losslessly reform the data stream to be favorable to LZ style compressors.  And plays nicely off gains already provided by the PREDICTOR functionality.

The notion is to arrange the bit stream where the Nth ?shuffled? byte contains the Nth bit from each byte in the sequence.  The sequence length is usually determined by the data type bit length.

For example (for brevity, assume bytes are 4 bits long)

Byte 1,  Byte 2, Byte 3, Byte 4
0001, 0011, 0111, 0001

They all share the top 0 bit and the bottom 1 bit,

?Shuffled?
0000, 0010, 0110, 1111

The algorithm is pretty simple to implement, and can be SIMD accelerated for high performance.

While we specifically are users of the GTIFF format, such a strategy could be employed generically for most raster and even vector formats.

Best,
Jesse



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com<http://www.spatialys.com/>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/ae4333c7/attachment-0001.htm>

From lnicola at dend.ro  Fri Dec  8 11:04:24 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Fri, 08 Dec 2023 21:04:24 +0200
Subject: [gdal-dev] GTiff bit shuffle compression feature request
In-Reply-To: <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
Message-ID: <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>

Hi,

In my (limited) experience, it can really make a difference for floating-point rasters. Testing with a small one I have on hand (10980x10980x1, Float32), I get:

 - GeoTIFF DEFLATE 280 MB
 - Zarr BLOSC zlib NONE 281 MB
 - Zarr BLOSC zlib BIT 253 MB
 - Zarr BLOSC zlib BYTE 249 MB

Laurentiu

On Fri, Dec 8, 2023, at 19:19, Even Rouault via gdal-dev wrote:
> Jesse,
> 
> This would break interoperability with other TIFF readers... Even adding a new TIFF tag to advertize that bit shuffling is applied would probably not be a sufficient guard, as existing readers wouldn't read it, and would just display garbage, which is worth that not being able to open the file at all. The only way I can think off of doing that in a safe way would be to use new values for the Compression tag, which isn't pretty either.
> 
> You should probably try Zarr which has such capability with the Blosc codec. Cf https://gdal.org/drivers/raster/zarr.html : BLOSC_SHUFFLE
> 
> I'm curious however to know which typical compression gain you get with that.
> 
> Even
> 
> 
> 
> Le 08/12/2023 ? 18:06, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev a ?crit :
>> Hi,
>>  
>> When using horizonal differencing to reduce the numerical range of band data, the upper bytes in the produced stream are typically 0 which leverages LZ?s byte based compression model.  But the least significant bytes can still have many significant bits as 0. Unless the whole byte is replicated, LZ compressors can?t do much to leverage the pattern however.  For data with temporal and or spatial coherence, ?shuffling? is another effective strategy to losslessly reform the data stream to be favorable to LZ style compressors.  And plays nicely off gains already provided by the PREDICTOR functionality.
>>  
>> The notion is to arrange the bit stream where the Nth ?shuffled? byte contains the Nth bit from each byte in the sequence.  The sequence length is usually determined by the data type bit length.
>>  
>> For example (for brevity, assume bytes are 4 bits long)
>>  
>> Byte 1,  Byte 2, Byte 3, Byte 4
>> 0001, 0011, 0111, 0001
>>  
>> They all share the top 0 bit and the bottom 1 bit,
>>  
>> ?Shuffled?
>> 0000, 0010, 0110, 1111
>>  
>> The algorithm is pretty simple to implement, and can be SIMD accelerated for high performance.
>>  
>> While we specifically are users of the GTIFF format, such a strategy could be employed generically for most raster and even vector formats.
>>  
>> Best,
>> Jesse
>> 
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/c78c09bd/attachment.htm>

From even.rouault at spatialys.com  Fri Dec  8 11:11:54 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Dec 2023 20:11:54 +0100
Subject: [gdal-dev] GTiff bit shuffle compression feature request
In-Reply-To: <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
Message-ID: <520de41c-fcf1-446d-9da1-5e867b6686c3@spatialys.com>


>
> ?- GeoTIFF DEFLATE 280 MB
Is it with PREDICTOR=3 ?? (If not, then the ZARR datasets should also be 
compressed with FILTER=DELTA to have a fair comparison)
> ?- Zarr BLOSC zlib NONE 281 MB
> ?- Zarr BLOSC zlib BIT 253 MB
> ?- Zarr BLOSC zlib BYTE 249 MB

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/b39c6c5d/attachment.htm>

From lnicola at dend.ro  Fri Dec  8 11:23:41 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Fri, 08 Dec 2023 21:23:41 +0200
Subject: [gdal-dev] GTiff bit shuffle compression feature request
In-Reply-To: <520de41c-fcf1-446d-9da1-5e867b6686c3@spatialys.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
 <520de41c-fcf1-446d-9da1-5e867b6686c3@spatialys.com>
Message-ID: <99b85735-1176-4a8f-b883-b44176af447c@betaapp.fastmail.com>


On Fri, Dec 8, 2023, at 21:11, Even Rouault wrote:
> 
>> 
>>  - GeoTIFF DEFLATE 280 MB
> Is it with PREDICTOR=3 ?  (If not, then the ZARR datasets should also be compressed with FILTER=DELTA to have a fair comparison)

I would expect a fair comparison to be between PREDICTOR=3 and FILTER=DELTA and not the other way around, but it does seem to level the field significantly:

 - GeoTIFF DEFLATE PREDICTOR=3 255 MB
 - Zarr DELTA BLOSC zlib NONE 290 MB
 - Zarr DELTA BLOSC zlib BIT 266 MB
 - Zarr DELTA BLOSC zlib BYTE 259 MB

>>  - Zarr BLOSC zlib NONE 281 MB
>>  - Zarr BLOSC zlib BIT 253 MB
>>  - Zarr BLOSC zlib BYTE 249 MB
> 

So FILTER=DELTA yields worse compression, while GeoTIFF PREDICTOR=3 does very well. No need for Zarr! I don't remember PREDICTOR=3 doing so well in the past, so.. no idea :-).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/f005630e/attachment.htm>

From even.rouault at spatialys.com  Fri Dec  8 11:32:50 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Dec 2023 20:32:50 +0100
Subject: [gdal-dev] GTiff bit shuffle compression feature request
In-Reply-To: <99b85735-1176-4a8f-b883-b44176af447c@betaapp.fastmail.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
 <520de41c-fcf1-446d-9da1-5e867b6686c3@spatialys.com>
 <99b85735-1176-4a8f-b883-b44176af447c@betaapp.fastmail.com>
Message-ID: <358fcec9-06be-4c33-8341-4f93e3686c47@spatialys.com>


Le 08/12/2023 ? 20:23, Lauren?iu Nicola via gdal-dev a ?crit?:
>
> On Fri, Dec 8, 2023, at 21:11, Even Rouault wrote:
>>
>>>
>>> ?- GeoTIFF DEFLATE 280 MB
>> Is it with PREDICTOR=3 ?? (If not, then the ZARR datasets should also 
>> be compressed with FILTER=DELTA to have a fair comparison)
>
> I would expect a fair comparison to be between PREDICTOR=3 and 
> FILTER=DELTA and not the other way around,

yes, poor wording of mine. I meant that if using PREDICTOR=3, one should 
compare with FILTER=DELTA. But looking more closely, they are not 
strictly equivalent. PREDICTOR=3 applies the delta as b[0]-a[0], 
b[1]-a[1], b[2]-a[2], b[3]-a[3] where a[0...3] and b[0...3] are seen as 
the 4 byte representation of the float32, whereas FILTER=DELTA does the 
difference b_float - a_float as floating point. This isn't the same...

> but it does seem to level the field significantly:
>
> ?- GeoTIFF DEFLATE PREDICTOR=3 255 MB
> ?- Zarr DELTA BLOSC zlib NONE 290 MB
> ?- Zarr DELTA?BLOSC zlib BIT 266 MB
> ?- Zarr DELTA?BLOSC zlib BYTE 259 MB
>
>>> ?- Zarr BLOSC zlib NONE 281 MB
>>> ?- Zarr BLOSC zlib BIT 253 MB
>>> ?- Zarr BLOSC zlib BYTE 249 MB
>>
>
> So FILTER=DELTA yields worse compression, while GeoTIFF PREDICTOR=3 
> does very well. No need for Zarr! I don't remember PREDICTOR=3 doing 
> so well in the past, so.. no idea :-).
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/d5d2da89/attachment.htm>

From jesse.r.meyer at nasa.gov  Fri Dec  8 11:43:43 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Fri, 8 Dec 2023 19:43:43 +0000
Subject: [gdal-dev] [BULK] Re: [EXTERNAL] Re: GTiff bit shuffle
 compression feature request
In-Reply-To: <40897EDD-E773-458C-8560-A8FEEFD66437@ndc.nasa.gov>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <40897EDD-E773-458C-8560-A8FEEFD66437@ndc.nasa.gov>
Message-ID: <B41464FC-435A-40A8-BC41-87C985CE066E@ndc.nasa.gov>

Unfortunately Zarr has a design choice that won?t work for us: blocks are individual files on a file system.  Our datasets are massive and this will explode our inode allocations.  While we could archive the folder into a zip archive, it adds a step for anyone to work with the data.  Curiously, this sparse friendly representation seems totally baked into the format and there?s no way to opt out.  I?m not quite ready to share compression ratio findings, but initial results are consistent with my expectations.  Bitshuffle is effective for our data and works very well with another Zarr feature ?DELTA_DTYPE? which _can_ be a form of lossless compression if the max delta is known.

I understand not wanting to make third party tiff compliance worse than it already is from the GDAL project perspective.  That would be minimized if the functionality were added to libtiff proper, so any project that depends on libtiff could benefit from the enhancement.

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev" <gdal-dev at lists.osgeo.org>
Reply-To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov>
Date: Friday, December 8, 2023 at 12:40 PM
To: Even Rouault <even.rouault at spatialys.com>, gdallists <gdal-dev at lists.osgeo.org>
Subject: [BULK] Re: [gdal-dev] [EXTERNAL] Re: GTiff bit shuffle compression feature request

Thanks for the suggestion Even, we?ll see how effective Zarr is for our datasets.

Jesse

From: Even Rouault <even.rouault at spatialys.com>
Date: Friday, December 8, 2023 at 12:20 PM
To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov>, gdallists <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] Re: [gdal-dev] GTiff bit shuffle compression feature request

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.


Jesse,

This would break interoperability with other TIFF readers... Even adding a new TIFF tag to advertize that bit shuffling is applied would probably not be a sufficient guard, as existing readers wouldn't read it, and would just display garbage, which is worth that not being able to open the file at all. The only way I can think off of doing that in a safe way would be to use new values for the Compression tag, which isn't pretty either.

You should probably try Zarr which has such capability with the Blosc codec. Cf https://gdal.org/drivers/raster/zarr.html : BLOSC_SHUFFLE

I'm curious however to know which typical compression gain you get with that.

Even


Le 08/12/2023 ? 18:06, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev a ?crit :
Hi,

When using horizonal differencing to reduce the numerical range of band data, the upper bytes in the produced stream are typically 0 which leverages LZ?s byte based compression model.  But the least significant bytes can still have many significant bits as 0. Unless the whole byte is replicated, LZ compressors can?t do much to leverage the pattern however.  For data with temporal and or spatial coherence, ?shuffling? is another effective strategy to losslessly reform the data stream to be favorable to LZ style compressors.  And plays nicely off gains already provided by the PREDICTOR functionality.

The notion is to arrange the bit stream where the Nth ?shuffled? byte contains the Nth bit from each byte in the sequence.  The sequence length is usually determined by the data type bit length.

For example (for brevity, assume bytes are 4 bits long)

Byte 1,  Byte 2, Byte 3, Byte 4
0001, 0011, 0111, 0001

They all share the top 0 bit and the bottom 1 bit,

?Shuffled?
0000, 0010, 0110, 1111

The algorithm is pretty simple to implement, and can be SIMD accelerated for high performance.

While we specifically are users of the GTIFF format, such a strategy could be employed generically for most raster and even vector formats.

Best,
Jesse


_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com<http://www.spatialys.com/>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/a387fc27/attachment-0001.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Dec  8 12:01:08 2023
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Fri, 8 Dec 2023 20:01:08 +0000
Subject: [gdal-dev] [BULK] Re: [EXTERNAL] Re: GTiff bit shuffle
 compression feature request
In-Reply-To: <B41464FC-435A-40A8-BC41-87C985CE066E@ndc.nasa.gov>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <40897EDD-E773-458C-8560-A8FEEFD66437@ndc.nasa.gov>
 <B41464FC-435A-40A8-BC41-87C985CE066E@ndc.nasa.gov>
Message-ID: <AM0PR09MB32197221F8FB77A51770E8AEFD8AA@AM0PR09MB3219.eurprd09.prod.outlook.com>

Hi,

Could Zarr be used as Sozipped https://gdal.org/programs/sozip.html?

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev
L?hetetty: perjantai 8. joulukuuta 2023 21.44
Vastaanottaja: Even Rouault <even.rouault at spatialys.com>; gdallists <gdal-dev at lists.osgeo.org>
Aihe: Re: [gdal-dev] [BULK] Re: [EXTERNAL] Re: GTiff bit shuffle compression feature request

Unfortunately Zarr has a design choice that won't work for us: blocks are individual files on a file system.  Our datasets are massive and this will explode our inode allocations.  While we could archive the folder into a zip archive, it adds a step for anyone to work with the data.  Curiously, this sparse friendly representation seems totally baked into the format and there's no way to opt out.  I'm not quite ready to share compression ratio findings, but initial results are consistent with my expectations.  Bitshuffle is effective for our data and works very well with another Zarr feature "DELTA_DTYPE" which _can_ be a form of lossless compression if the max delta is known.

I understand not wanting to make third party tiff compliance worse than it already is from the GDAL project perspective.  That would be minimized if the functionality were added to libtiff proper, so any project that depends on libtiff could benefit from the enhancement.

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> on behalf of "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev" <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Reply-To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov<mailto:jesse.r.meyer at nasa.gov>>
Date: Friday, December 8, 2023 at 12:40 PM
To: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>, gdallists <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Subject: [BULK] Re: [gdal-dev] [EXTERNAL] Re: GTiff bit shuffle compression feature request

Thanks for the suggestion Even, we'll see how effective Zarr is for our datasets.

Jesse

From: Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Date: Friday, December 8, 2023 at 12:20 PM
To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov<mailto:jesse.r.meyer at nasa.gov>>, gdallists <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Subject: [EXTERNAL] Re: [gdal-dev] GTiff bit shuffle compression feature request

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.


Jesse,

This would break interoperability with other TIFF readers... Even adding a new TIFF tag to advertize that bit shuffling is applied would probably not be a sufficient guard, as existing readers wouldn't read it, and would just display garbage, which is worth that not being able to open the file at all. The only way I can think off of doing that in a safe way would be to use new values for the Compression tag, which isn't pretty either.

You should probably try Zarr which has such capability with the Blosc codec. Cf https://gdal.org/drivers/raster/zarr.html : BLOSC_SHUFFLE

I'm curious however to know which typical compression gain you get with that.

Even


Le 08/12/2023 ? 18:06, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev a ?crit :
Hi,

When using horizonal differencing to reduce the numerical range of band data, the upper bytes in the produced stream are typically 0 which leverages LZ's byte based compression model.  But the least significant bytes can still have many significant bits as 0. Unless the whole byte is replicated, LZ compressors can't do much to leverage the pattern however.  For data with temporal and or spatial coherence, 'shuffling' is another effective strategy to losslessly reform the data stream to be favorable to LZ style compressors.  And plays nicely off gains already provided by the PREDICTOR functionality.

The notion is to arrange the bit stream where the Nth "shuffled" byte contains the Nth bit from each byte in the sequence.  The sequence length is usually determined by the data type bit length.

For example (for brevity, assume bytes are 4 bits long)

Byte 1,  Byte 2, Byte 3, Byte 4
0001, 0011, 0111, 0001

They all share the top 0 bit and the bottom 1 bit,

"Shuffled"
0000, 0010, 0110, 1111

The algorithm is pretty simple to implement, and can be SIMD accelerated for high performance.

While we specifically are users of the GTIFF format, such a strategy could be employed generically for most raster and even vector formats.

Best,
Jesse


_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com<http://www.spatialys.com/>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/acca3620/attachment.htm>

From lnicola at dend.ro  Fri Dec  8 12:00:59 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Fri, 08 Dec 2023 22:00:59 +0200
Subject: [gdal-dev] GTiff bit shuffle compression feature request
In-Reply-To: <358fcec9-06be-4c33-8341-4f93e3686c47@spatialys.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
 <520de41c-fcf1-446d-9da1-5e867b6686c3@spatialys.com>
 <99b85735-1176-4a8f-b883-b44176af447c@betaapp.fastmail.com>
 <358fcec9-06be-4c33-8341-4f93e3686c47@spatialys.com>
Message-ID: <9dc613fa-7c3c-4673-9155-b3c5e7381156@betaapp.fastmail.com>

On Fri, Dec 8, 2023, at 21:32, Even Rouault wrote:
> yes, poor wording of mine. I meant that if using PREDICTOR=3, one should compare with FILTER=DELTA. But looking more closely, they are not strictly equivalent. PREDICTOR=3 applies the delta as b[0]-a[0], b[1]-a[1], b[2]-a[2], b[3]-a[3] where a[0...3] and b[0...3] are seen as the 4 byte representation of the float32, whereas FILTER=DELTA does the difference b_float - a_float as floating point. This isn't the same...
> 
https://www.blosc.org/posts/bytedelta-enhance-compression-toolset/ seems to be the equivalent.

> inode allocation

XFS or ZIP?

> extra step to decompress Zarr out of ZIP

Most libraries should be able to read Zarr directly from a ZIP archive.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/73625383/attachment-0001.htm>

From jesse.r.meyer at nasa.gov  Fri Dec  8 12:23:36 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Fri, 8 Dec 2023 20:23:36 +0000
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: GTiff bit shuffle compression
 feature request
In-Reply-To: <9dc613fa-7c3c-4673-9155-b3c5e7381156@betaapp.fastmail.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
 <520de41c-fcf1-446d-9da1-5e867b6686c3@spatialys.com>
 <99b85735-1176-4a8f-b883-b44176af447c@betaapp.fastmail.com>
 <358fcec9-06be-4c33-8341-4f93e3686c47@spatialys.com>
 <9dc613fa-7c3c-4673-9155-b3c5e7381156@betaapp.fastmail.com>
Message-ID: <47772BA8-4754-4DF1-98F6-96BB6F995069@ndc.nasa.gov>

The underlying network file system is opaque to us and can change on occasion.  But recently our team were asked to cull unused files due to inode counts.

We?re excited to explore SOZip on our vector data where random seek is important to us, but we?re waiting for that branch to be merged into master.   I don?t trust standard zip libraries to be performant for this usage case but I?m willing to be shown otherwise.

Jesse

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org>
Reply-To: Lauren?iu Nicola <lnicola at dend.ro>
Date: Friday, December 8, 2023 at 3:01 PM
To: gdallists <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] [BULK] Re: [gdal-dev] GTiff bit shuffle compression feature request

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.


On Fri, Dec 8, 2023, at 21:32, Even Rouault wrote:

yes, poor wording of mine. I meant that if using PREDICTOR=3, one should compare with FILTER=DELTA. But looking more closely, they are not strictly equivalent. PREDICTOR=3 applies the delta as b[0]-a[0], b[1]-a[1], b[2]-a[2], b[3]-a[3] where a[0...3] and b[0...3] are seen as the 4 byte representation of the float32, whereas FILTER=DELTA does the difference b_float - a_float as floating point. This isn't the same...
https://www.blosc.org/posts/bytedelta-enhance-compression-toolset/ seems to be the equivalent.

> inode allocation

XFS or ZIP?

> extra step to decompress Zarr out of ZIP

Most libraries should be able to read Zarr directly from a ZIP archive.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231208/c62d0a0a/attachment.htm>

From even.rouault at spatialys.com  Fri Dec  8 15:10:39 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 9 Dec 2023 00:10:39 +0100
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: GTiff bit shuffle compression
 feature request
In-Reply-To: <47772BA8-4754-4DF1-98F6-96BB6F995069@ndc.nasa.gov>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
 <520de41c-fcf1-446d-9da1-5e867b6686c3@spatialys.com>
 <99b85735-1176-4a8f-b883-b44176af447c@betaapp.fastmail.com>
 <358fcec9-06be-4c33-8341-4f93e3686c47@spatialys.com>
 <9dc613fa-7c3c-4673-9155-b3c5e7381156@betaapp.fastmail.com>
 <47772BA8-4754-4DF1-98F6-96BB6F995069@ndc.nasa.gov>
Message-ID: <9f71593e-4468-4be5-ba08-349adcbdc735@spatialys.com>

You could put Zarr into a ZIP. But there's little point in using SOZip 
for that use case (SOZIP has been merged into master 6 months ago by the 
way, in GDAL 3.7.0), since SOZip is for compressing large files. In a 
Zarr archive, you would have a lot of small/medium sized files for each 
chunk/tile. And when you need to read one, you read it in its whole 
(where SOZip aim is to be able to read efficiently a subset of a 
compressed file). SOZip main use case is more for vector datasets 
(geopackage, flatgeobuf, potentially Esri file geodatabase...)

For Zarr in ZIP, you should either use uncompressed Zarr and use Zip 
deflate compression, or compressed Zarr (blosc, whatever) and use 
uncompressed Zip ("store method").? If you have a Zarr dataset with lots 
of tiles, it might actually be relevant to use the zipindex 
(https://github.com/minio/zipindex) extension to locate more quickly 
each Zarr chunk, but GDAL won't make use of it.

Le 08/12/2023 ? 21:23, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND 
APPLICATIONS INC] via gdal-dev a ?crit?:
>
> The underlying network file system is opaque to us and can change on 
> occasion.? But recently our team were asked to cull unused files due 
> to inode counts.
>
> We?re excited to explore SOZip on our vector data where random seek is 
> important to us, but we?re waiting for that branch to be merged into 
> master.? ?I don?t trust standard zip libraries to be performant for 
> this usage case but I?m willing to be shown otherwise.
>
> Jesse
>
> *From: *gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of 
> Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org>
> *Reply-To: *Lauren?iu Nicola <lnicola at dend.ro>
> *Date: *Friday, December 8, 2023 at 3:01 PM
> *To: *gdallists <gdal-dev at lists.osgeo.org>
> *Subject: *[EXTERNAL] [BULK] Re: [gdal-dev] GTiff bit shuffle 
> compression feature request
>
> *CAUTION:*This email originated from outside of NASA.? Please take 
> care when clicking links or opening attachments. Use the "Report 
> Message" button to report suspicious messages to the NASA?SOC.
>
>
>
> On Fri, Dec 8, 2023, at 21:32, Even Rouault wrote:
>
>     yes, poor wording of mine. I meant that if using PREDICTOR=3, one
>     should compare with FILTER=DELTA. But looking more closely, they
>     are not strictly equivalent. PREDICTOR=3 applies the delta as
>     b[0]-a[0], b[1]-a[1], b[2]-a[2], b[3]-a[3] where a[0...3] and
>     b[0...3] are seen as the 4 byte representation of the float32,
>     whereas FILTER=DELTA does the difference b_float - a_float as
>     floating point. This isn't the same...
>
> https://www.blosc.org/posts/bytedelta-enhance-compression-toolset/ 
> seems to be the equivalent.
>
> > inode allocation
>
> XFS or ZIP?
>
> > extra step to decompress Zarr out of ZIP
>
> Most libraries should be able to read Zarr directly from a ZIP archive.
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231209/6119363f/attachment-0001.htm>

From howard at hobu.co  Sun Dec 10 05:54:00 2023
From: howard at hobu.co (Howard Butler)
Date: Sun, 10 Dec 2023 07:54:00 -0600
Subject: [gdal-dev] GTiff bit shuffle compression feature request
In-Reply-To: <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
References: <FF2AF56D-2A2A-4CB7-8259-8A2527392BF8@ndc.nasa.gov>
 <83cc7801-a6d3-4709-a636-2a35ad51611d@spatialys.com>
 <2d070c43-5426-4ef5-8e31-11b32245020e@app.fastmail.com>
Message-ID: <9CC99B2F-72A1-4C6F-86A7-9BEE02A2244D@hobu.co>



> On Dec 8, 2023, at 1:04?PM, Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> 
>  - GeoTIFF DEFLATE 280 MB
>  - Zarr BLOSC zlib NONE 281 MB
>  - Zarr BLOSC zlib BIT 253 MB
>  - Zarr BLOSC zlib BYTE 249 MB

If floating point compression performance in TIFFs is the primary concern, don't sleep on investigating LERC. I'm curious what LERC with a stated precision (MAX_Z_ERROR) does for these. In my experience, it's tough to beat LERC with a stated precision for floating point content if your expected readers can consume the encoding. We use it all the time for elevation content, and both QGIS and ArcGIS can consume them without trouble. 

LINZ wrote up a really nice report about LERC for their elevation content. 
https://github.com/linz/elevation/tree/master/docs/tiff-compression

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231210/0e4cd016/attachment.htm>

From jesse.r.meyer at nasa.gov  Mon Dec 11 08:11:07 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Mon, 11 Dec 2023 16:11:07 +0000
Subject: [gdal-dev] Is there a way to load a custom driver without a
 declaration in gdal_frmts.h?
Message-ID: <F6ABB5F7-9216-449C-A53B-CACA30972527@ndc.nasa.gov>

Hi,

I know drivers can be built as plugins, but can they be detected / used by GDAL if they are not registered via gdal_frmts.h?  It doesn?t seem so.  Is this a C++ ABI restriction?  We?d like to provide members of our team an internal and custom gdal driver implementation without each of them needing a special GDAL build.

Best,
Jesse
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231211/15dc4a4a/attachment.htm>

From lnicola at dend.ro  Mon Dec 11 08:13:13 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Mon, 11 Dec 2023 18:13:13 +0200
Subject: [gdal-dev] Is there a way to load a custom driver without a
 declaration in gdal_frmts.h?
In-Reply-To: <F6ABB5F7-9216-449C-A53B-CACA30972527@ndc.nasa.gov>
References: <F6ABB5F7-9216-449C-A53B-CACA30972527@ndc.nasa.gov>
Message-ID: <18121f10-5355-4ffd-bd4c-8c6743e45962@betaapp.fastmail.com>

Hi Jesse,

https://gdal.org/api/gdaldriver_cpp.html#_CPPv4N17GDALDriverManager15AutoLoadDriversEv should answer your question.

Laurentiu

On Mon, Dec 11, 2023, at 18:11, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev wrote:
> Hi,
>  
> I know drivers can be built as plugins, but can they be detected / used by GDAL if they are not registered via gdal_frmts.h?  It doesn?t seem so.  Is this a C++ ABI restriction?  We?d like to provide members of our team an internal and custom gdal driver implementation without each of them needing a special GDAL build.
>  
> Best,
> Jesse
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231211/109055ef/attachment.htm>

From jesse.r.meyer at nasa.gov  Mon Dec 11 08:17:23 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Mon, 11 Dec 2023 16:17:23 +0000
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: Is there a way to load a
 custom driver without a declaration in gdal_frmts.h?
In-Reply-To: <18121f10-5355-4ffd-bd4c-8c6743e45962@betaapp.fastmail.com>
References: <F6ABB5F7-9216-449C-A53B-CACA30972527@ndc.nasa.gov>
 <18121f10-5355-4ffd-bd4c-8c6743e45962@betaapp.fastmail.com>
Message-ID: <0AE4AEED-4F42-45E2-8682-5016951238AD@ndc.nasa.gov>

Thanks, that looks promising.

Does GDAL automatically call `AutoLoadDrivers`?  If not, do team members need to force a call to that?

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org>
Reply-To: Lauren?iu Nicola <lnicola at dend.ro>
Date: Monday, December 11, 2023 at 11:13 AM
To: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] [BULK] Re: [gdal-dev] Is there a way to load a custom driver without a declaration in gdal_frmts.h?

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.


Hi Jesse,

https://gdal.org/api/gdaldriver_cpp.html#_CPPv4N17GDALDriverManager15AutoLoadDriversEv should answer your question.

Laurentiu

On Mon, Dec 11, 2023, at 18:11, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev wrote:

Hi,



I know drivers can be built as plugins, but can they be detected / used by GDAL if they are not registered via gdal_frmts.h?  It doesn?t seem so.  Is this a C++ ABI restriction?  We?d like to provide members of our team an internal and custom gdal driver implementation without each of them needing a special GDAL build.



Best,

Jesse
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231211/2b96d8b4/attachment-0001.htm>

From even.rouault at spatialys.com  Mon Dec 11 08:24:20 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Dec 2023 17:24:20 +0100
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: Is there a way to load a
 custom driver without a declaration in gdal_frmts.h?
In-Reply-To: <0AE4AEED-4F42-45E2-8682-5016951238AD@ndc.nasa.gov>
References: <F6ABB5F7-9216-449C-A53B-CACA30972527@ndc.nasa.gov>
 <18121f10-5355-4ffd-bd4c-8c6743e45962@betaapp.fastmail.com>
 <0AE4AEED-4F42-45E2-8682-5016951238AD@ndc.nasa.gov>
Message-ID: <d986d00c-0646-4c0a-ab5a-3893da352063@spatialys.com>


Le 11/12/2023 ? 17:17, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND 
APPLICATIONS INC] via gdal-dev a ?crit?:
>
> Thanks, that looks promising.
>
> Does GDAL automatically call `AutoLoadDrivers`?? If not, do team 
> members need to force a call to that?
>
GDALAllRegister() which is normally called by all standard code using 
GDAL calls it: 
https://github.com/OSGeo/gdal/blob/54890592b410d95a59b4b07c0b499ca383005514/frmts/gdalallregister.cpp#L319

Even

> *From: *gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of 
> Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org>
> *Reply-To: *Lauren?iu Nicola <lnicola at dend.ro>
> *Date: *Monday, December 11, 2023 at 11:13 AM
> *To: *"gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
> *Subject: *[EXTERNAL] [BULK] Re: [gdal-dev] Is there a way to load a 
> custom driver without a declaration in gdal_frmts.h?
>
> *CAUTION:*This email originated from outside of NASA.? Please take 
> care when clicking links or opening attachments. Use the "Report 
> Message" button to report suspicious messages to the NASA?SOC.
>
>
>
> Hi Jesse,
>
> https://gdal.org/api/gdaldriver_cpp.html#_CPPv4N17GDALDriverManager15AutoLoadDriversEv 
> should answer your question.
>
> Laurentiu
>
> On Mon, Dec 11, 2023, at 18:11, Meyer, Jesse R. (GSFC-618.0)[SCIENCE 
> SYSTEMS AND APPLICATIONS INC] via gdal-dev wrote:
>
>     Hi,
>
>     I know drivers can be built as plugins, but can they be detected /
>     used by GDAL if they are not registered via gdal_frmts.h?? It
>     doesn?t seem so.? Is this a C++ ABI restriction? ?We?d like to
>     provide members of our team an internal and custom gdal driver
>     implementation without each of them needing a special GDAL build.
>
>     Best,
>
>     Jesse
>
>     _______________________________________________
>
>     gdal-dev mailing list
>
>     gdal-dev at lists.osgeo.org
>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231211/2a6e44c7/attachment.htm>

From jesse.r.meyer at nasa.gov  Mon Dec 11 08:30:59 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Mon, 11 Dec 2023 16:30:59 +0000
Subject: [gdal-dev] [EXTERNAL] [BULK] Re: Is there a way to load a
 custom driver without a declaration in gdal_frmts.h?
In-Reply-To: <d986d00c-0646-4c0a-ab5a-3893da352063@spatialys.com>
References: <F6ABB5F7-9216-449C-A53B-CACA30972527@ndc.nasa.gov>
 <18121f10-5355-4ffd-bd4c-8c6743e45962@betaapp.fastmail.com>
 <0AE4AEED-4F42-45E2-8682-5016951238AD@ndc.nasa.gov>
 <d986d00c-0646-4c0a-ab5a-3893da352063@spatialys.com>
Message-ID: <EDCC1542-0AA6-41CD-A129-58D783088BEE@ndc.nasa.gov>

Excellent, thanks.

From: Even Rouault <even.rouault at spatialys.com>
Date: Monday, December 11, 2023 at 11:24 AM
To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov>, Lauren?iu Nicola <lnicola at dend.ro>, "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] [EXTERNAL] [BULK] Re: Is there a way to load a custom driver without a declaration in gdal_frmts.h?

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.




Le 11/12/2023 ? 17:17, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev a ?crit :
Thanks, that looks promising.

Does GDAL automatically call `AutoLoadDrivers`?  If not, do team members need to force a call to that?

GDALAllRegister() which is normally called by all standard code using GDAL calls it: https://github.com/OSGeo/gdal/blob/54890592b410d95a59b4b07c0b499ca383005514/frmts/gdalallregister.cpp#L319

Even

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org><mailto:gdal-dev-bounces at lists.osgeo.org> on behalf of Lauren?iu Nicola via gdal-dev <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Reply-To: Lauren?iu Nicola <lnicola at dend.ro><mailto:lnicola at dend.ro>
Date: Monday, December 11, 2023 at 11:13 AM
To: "gdal-dev at lists.osgeo.org"<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org><mailto:gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] [BULK] Re: [gdal-dev] Is there a way to load a custom driver without a declaration in gdal_frmts.h?

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.



Hi Jesse,

https://gdal.org/api/gdaldriver_cpp.html#_CPPv4N17GDALDriverManager15AutoLoadDriversEv should answer your question.

Laurentiu

On Mon, Dec 11, 2023, at 18:11, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev wrote:

Hi,



I know drivers can be built as plugins, but can they be detected / used by GDAL if they are not registered via gdal_frmts.h?  It doesn?t seem so.  Is this a C++ ABI restriction?  We?d like to provide members of our team an internal and custom gdal driver implementation without each of them needing a special GDAL build.



Best,

Jesse
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev





_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com<http://www.spatialys.com/>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231211/04dcd560/attachment-0001.htm>

From a.pau at creaf.uab.cat  Tue Dec 12 00:20:55 2023
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Tue, 12 Dec 2023 08:20:55 +0000
Subject: [gdal-dev] Creating a diver: specify the options to create a layer
In-Reply-To: <PAXPR07MB77750CCBB1B6460745EFE76CA28FA@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB77750CCBB1B6460745EFE76CA28FA@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <PAXPR07MB77755012F2F5C8C06EC15750A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi,
as you probably know I am creating a driver to read formats and translate them to MiraMon and to write any MiraMon file to any format supported in GDAL.

One question appears to me today:

I used -lco Version=V11 to specify in which version I want to WRITE a MiraMon file. It works fine and I know how to get that from comand line.

Do I have to use the same to specify which height (in file with Z) I have to offer?
I have three possibilities: First Z, Highest or Lowest. I want the usem tells me what he/she wants.
How can I do that? Where can I get, then, this values?

Which is the appropriate way?
Thanks in advance!


Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/888635e5/attachment-0003.jpg>

From even.rouault at spatialys.com  Tue Dec 12 04:17:15 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Dec 2023 13:17:15 +0100
Subject: [gdal-dev] Creating a diver: specify the options to create a
 layer
In-Reply-To: <PAXPR07MB77755012F2F5C8C06EC15750A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB77750CCBB1B6460745EFE76CA28FA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77755012F2F5C8C06EC15750A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <0eaf0fcd-cb37-4ba5-ab5f-b3645972792c@spatialys.com>

Abel Pau,

> Do I have to use the same to specify which height (in file with Z) I 
> have to offer?
>
> I have three possibilities: First Z, Highest or Lowest. I want the 
> usem tells me what he/she wants.
>
> How can I do that? Where can I get, then, this values?
>
I'm not sure to understand your question. Are those height values fields 
to fill in the file header?

If so, yes you may obviously offer layer creation options to fill them.? 
If those values are directly related with the Z component of geometries 
of features the user writes into the file, and you can edit the header 
in a post processing stage (but I believe your strategy was to write 
some temporary file, before the final file, so that should be possible), 
you could also possibly infer them from the values of the features too.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/bcd770cf/attachment.htm>

From a.pau at creaf.uab.cat  Tue Dec 12 06:02:01 2023
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Tue, 12 Dec 2023 14:02:01 +0000
Subject: [gdal-dev] Creating a diver: specify the options to create a
 layer
In-Reply-To: <0eaf0fcd-cb37-4ba5-ab5f-b3645972792c@spatialys.com>
References: <PAXPR07MB77750CCBB1B6460745EFE76CA28FA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77755012F2F5C8C06EC15750A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <0eaf0fcd-cb37-4ba5-ab5f-b3645972792c@spatialys.com>
Message-ID: <PAXPR07MB77755868C59532CF3A0C1611A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi again,
thanks for the interest, Even. You?ll rest of me when I finish the driver. I promise :)

I didn?t explain it well. I try again.

Now I am in the case I want to translate from MiraMon to other GDAL formats.
For instance, points MiraMon format can have one or several Z values for each point. Then the user who wants to translate from MiraMon to other formats has to decide from command line which of Z?s wants to get.
Example:
The file MiraMoin_zPoints.pnt has 3 points:
point (2,2) has 3 heights: 8, 3.2 and 9
point (1,2) has 2 heights: 3, 8.1
point (2,4) has 1 height: 9

User has three options to get a Z for each point:
Get the first one for each point: 8, 3 and 9
Get the highest one for each point: 9, 8.1 and 9
Get the lowest one for each point: 3.2, 3 and 9

It?s a user decision. By default user will obtain the first one for each point but perhaps user wants another thing.

So, then, in a command line we could have:   ogr2ogr gml_file.gml MiraMoin_zPoints.pnt to translate from MiraMon to GML

If user wants to specify which Z wants, then this decision should be expressed in this line in some way.

After a research in the code (not documentation) I managed to get the way and now I would like to be sure that is the correct way:

ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=First, for getting the GML with the first Z of each point
ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=Hightest, for getting the GML with the highest Z of each point
ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=Lowest, for getting the GML with the lowest Z of each point

Using ?-oo?, in the Open() method of MiraMon driver datasource I can retrieve this value, save it in some variable and then give, for every feature, the appropriate Z in the GetNextRawFeature() method of the layer.

int OGRMiraMonDataSource::Open(const char *pszFilename, VSILFILE *fp,
                           const OGRSpatialReference *poSRS, int bUpdateIn,
                            char **papszOpenOptionsUsr)


If it?s correct, perfect. If not, then, which way would be the appropriate?

Thanks and I hope have been clear now :)
Thanks!





De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimarts, 12 de desembre de 2023 13:17
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Creating a diver: specify the options to create a layer


Abel Pau,

Do I have to use the same to specify which height (in file with Z) I have to offer?
I have three possibilities: First Z, Highest or Lowest. I want the usem tells me what he/she wants.
How can I do that? Where can I get, then, this values?

I'm not sure to understand your question. Are those height values fields to fill in the file header?

If so, yes you may obviously offer layer creation options to fill them.  If those values are directly related with the Z component of geometries of features the user writes into the file, and you can edit the header in a post processing stage (but I believe your strategy was to write some temporary file, before the final file, so that should be possible), you could also possibly infer them from the values of the features too.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/83d96b9e/attachment-0001.htm>

From even.rouault at spatialys.com  Tue Dec 12 06:35:28 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Dec 2023 15:35:28 +0100
Subject: [gdal-dev] Creating a diver: specify the options to create a
 layer
In-Reply-To: <PAXPR07MB77755868C59532CF3A0C1611A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB77750CCBB1B6460745EFE76CA28FA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77755012F2F5C8C06EC15750A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <0eaf0fcd-cb37-4ba5-ab5f-b3645972792c@spatialys.com>
 <PAXPR07MB77755868C59532CF3A0C1611A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <b151c709-931e-43c2-9542-ddcc9ae22df3@spatialys.com>

You could also potentially expose all the height values as a attribute 
of type RealList (not all OGR drivers support that though).? The open 
option also seems reasonable. Up to you w.r.t the use cases you've in mind.

Le 12/12/2023 ? 15:02, Abel Pau a ?crit?:
>
> Hi again,
>
> thanks for the interest, Even. You?ll rest of me when I finish the 
> driver. I promise :)
>
> I didn?t explain it well. I try again.
>
> Now I am in the case I want to translate from MiraMon to other GDAL 
> formats.
>
> For instance, points MiraMon format can have one or several Z values 
> for each point. Then the user who wants to translate from MiraMon to 
> other formats has to decide from command line which of Z?s wants to get.
>
> Example:
>
> The file *MiraMoin_zPoints.pnt* has 3 points:
>
> point (2,2) has 3 heights: 8, 3.2 and 9
>
> point (1,2) has 2 heights: 3, 8.1
>
> point (2,4) has 1 height: 9
>
> User has three options to get a Z for each point:
>
> Get the first one for each point: 8, 3 and 9
>
> Get the highest one for each point: 9, 8.1 and 9
>
> Get the lowest one for each point: 3.2, 3 and 9
>
> It?s a user decision. By default user will obtain the first one for 
> each point but perhaps user wants another thing.
>
> So, then, in a command line we could have: *ogr2ogr gml_file.gml 
> MiraMoin_zPoints.pnt* to translate from MiraMon to GML
>
> If user wants to specify which Z wants, then this decision should be 
> expressed in this line in some way.
>
> After a research in the code (not documentation) I managed to get the 
> way and now I would like to be sure that is the correct way:
>
> *ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=First*, for 
> getting the GML with the first Z of each point
>
> *ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=Hightest*, for 
> getting the GML with the highest Z of each point
>
> *ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=Lowest*, for 
> getting the GML with the lowest Z of each point
>
> Using ?-oo?, in the Open() method of MiraMon driver datasource I can 
> retrieve this value, save it in some variable and then give, for every 
> feature, the appropriate Z in the GetNextRawFeature() method of the layer.
>
> intOGRMiraMonDataSource::Open(constchar*pszFilename, VSILFILE*fp,
>
> constOGRSpatialReference*poSRS, intbUpdateIn,
>
> */char/**/**/**/papszOpenOptionsUsr/*)
>
> If it?s correct, perfect. If not, then, which way would be the 
> appropriate?
>
> Thanks and I hope have been clear now :)
>
> Thanks!
>
> *De:*Even Rouault <even.rouault at spatialys.com>
> *Enviado el:* dimarts, 12 de desembre de 2023 13:17
> *Para:* Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
> *Asunto:* Re: [gdal-dev] Creating a diver: specify the options to 
> create a layer
>
> Abel Pau,
>
>     Do I have to use the same to specify which height (in file with Z)
>     I have to offer?
>
>     I have three possibilities: First Z, Highest or Lowest. I want the
>     usem tells me what he/she wants.
>
>     How can I do that? Where can I get, then, this values?
>
> I'm not sure to understand your question. Are those height values 
> fields to fill in the file header?
>
> If so, yes you may obviously offer layer creation options to fill 
> them.? If those values are directly related with the Z component of 
> geometries of features the user writes into the file, and you can edit 
> the header in a post processing stage (but I believe your strategy was 
> to write some temporary file, before the final file, so that should be 
> possible), you could also possibly infer them from the values of the 
> features too.
>
> Even
>
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/94a004c4/attachment.htm>

From a.pau at creaf.uab.cat  Tue Dec 12 08:14:46 2023
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Tue, 12 Dec 2023 16:14:46 +0000
Subject: [gdal-dev] Creating a diver: specify the options to create a
 layer
In-Reply-To: <b151c709-931e-43c2-9542-ddcc9ae22df3@spatialys.com>
References: <PAXPR07MB77750CCBB1B6460745EFE76CA28FA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <PAXPR07MB77755012F2F5C8C06EC15750A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <0eaf0fcd-cb37-4ba5-ab5f-b3645972792c@spatialys.com>
 <PAXPR07MB77755868C59532CF3A0C1611A28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <b151c709-931e-43c2-9542-ddcc9ae22df3@spatialys.com>
Message-ID: <PAXPR07MB77756C7D675AD790DA1F96AFA28EA@PAXPR07MB7775.eurprd07.prod.outlook.com>

Thanks,
I think it?s enough exporting one of the Z. It?s a not very used particularity of the format.

De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimarts, 12 de desembre de 2023 15:35
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Creating a diver: specify the options to create a layer


You could also potentially expose all the height values as a attribute of type RealList (not all OGR drivers support that though).  The open option also seems reasonable. Up to you w.r.t the use cases you've in mind.
Le 12/12/2023 ? 15:02, Abel Pau a ?crit :
Hi again,
thanks for the interest, Even. You?ll rest of me when I finish the driver. I promise :)

I didn?t explain it well. I try again.

Now I am in the case I want to translate from MiraMon to other GDAL formats.
For instance, points MiraMon format can have one or several Z values for each point. Then the user who wants to translate from MiraMon to other formats has to decide from command line which of Z?s wants to get.
Example:
The file MiraMoin_zPoints.pnt has 3 points:
point (2,2) has 3 heights: 8, 3.2 and 9
point (1,2) has 2 heights: 3, 8.1
point (2,4) has 1 height: 9

User has three options to get a Z for each point:
Get the first one for each point: 8, 3 and 9
Get the highest one for each point: 9, 8.1 and 9
Get the lowest one for each point: 3.2, 3 and 9

It?s a user decision. By default user will obtain the first one for each point but perhaps user wants another thing.

So, then, in a command line we could have:   ogr2ogr gml_file.gml MiraMoin_zPoints.pnt to translate from MiraMon to GML

If user wants to specify which Z wants, then this decision should be expressed in this line in some way.

After a research in the code (not documentation) I managed to get the way and now I would like to be sure that is the correct way:

ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=First, for getting the GML with the first Z of each point
ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=Hightest, for getting the GML with the highest Z of each point
ogr2ogr gml_file.gml MiraMoin_zPoints.pnt -oo Height=Lowest, for getting the GML with the lowest Z of each point

Using ?-oo?, in the Open() method of MiraMon driver datasource I can retrieve this value, save it in some variable and then give, for every feature, the appropriate Z in the GetNextRawFeature() method of the layer.

int OGRMiraMonDataSource::Open(const char *pszFilename, VSILFILE *fp,
                           const OGRSpatialReference *poSRS, int bUpdateIn,
                            char **papszOpenOptionsUsr)


If it?s correct, perfect. If not, then, which way would be the appropriate?


Thanks and I hope have been clear now :)
Thanks!





De: Even Rouault <even.rouault at spatialys.com><mailto:even.rouault at spatialys.com>
Enviado el: dimarts, 12 de desembre de 2023 13:17
Para: Abel Pau <a.pau at creaf.uab.cat><mailto:a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Asunto: Re: [gdal-dev] Creating a diver: specify the options to create a layer


Abel Pau,

Do I have to use the same to specify which height (in file with Z) I have to offer?
I have three possibilities: First Z, Highest or Lowest. I want the usem tells me what he/she wants.
How can I do that? Where can I get, then, this values?

I'm not sure to understand your question. Are those height values fields to fill in the file header?

If so, yes you may obviously offer layer creation options to fill them.  If those values are directly related with the Z component of geometries of features the user writes into the file, and you can edit the header in a post processing stage (but I believe your strategy was to write some temporary file, before the final file, so that should be possible), you could also possibly infer them from the values of the features too.
Even

--

http://www.spatialys.com

My software is free, but my time generally not.

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231212/c60f8137/attachment-0001.htm>

From peter at dfmsoftware.co.za  Tue Dec 12 21:52:27 2023
From: peter at dfmsoftware.co.za (peter at dfmsoftware.co.za)
Date: Wed, 13 Dec 2023 07:52:27 +0200
Subject: [gdal-dev] Cutting Image GDAL C#
Message-ID: <000001da2d88$8d9e1280$a8da3780$@dfmsoftware.co.za>

Hello there,

 

I hope you are well?

I'm hoping you could help me out with some guidance. I need to cut out a TIF
image defined by lat/lon coords bounding box from a larger TIF image. 

I'm using GDAL in C# (obviously) I thought I'd ask you for some guidance as
I am not able to get it working myself.

 

 

Thanks again,

 

 

 

 

 

Kind Regards / Vriendelike Groete 

Peter West




PO Box 537, Eerste River, Cape Town, 7103
124 Fairview Road, Penhill, Eerste River, 7100
2017/129810/07 VAT4500278363 Tel: +27 21 904 1154 

 

To view our disclaimer, please click on the following link: 

 <https://dfmtechnologies.co.za/terms> https://dfmtechnologies.co.za/terms



Want to know more about what it is that we do? Click
<https://dfmtechnologies.co.za/> here to redirect to our website!

 

This e-mail may contain confidential information and may be legally
privileged and is intended only for the person to whom it is addressed. If
you are not the intended recipient, you are notified that you may not use,
distribute or copy this document in any manner whatsoever. Kindly also
notify the sender immediately by telephone, and delete the e-mail. DFM
Technologies does not accept liability for any damage, loss or expense
arising from this e-mail and/or accessing any files attached to this e-mail.
Disclaimer is deemed to form part of the content of this email in terms of
Section 11 of the Electronic Communications &Transactions Act, 25 of 2002.

Please refer to our Privacy Policy that is available on our Website with the
following address/Link pertaining to our commitment to compliance with the
Popi Act.

 <https://dfmtechnologies.co.za/privacypolicy> DFM Technologies - Privacy
Policy

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/0c5889c4/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.jpg
Type: image/jpeg
Size: 5908 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/0c5889c4/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 17208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/0c5889c4/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.gif
Type: image/gif
Size: 4902 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/0c5889c4/attachment-0001.gif>

From peter at dfmsoftware.co.za  Wed Dec 13 00:52:27 2023
From: peter at dfmsoftware.co.za (peter at dfmsoftware.co.za)
Date: Wed, 13 Dec 2023 10:52:27 +0200
Subject: [gdal-dev] Cutting Image GDAL C#
In-Reply-To: <000001da2d88$8d9e1280$a8da3780$@dfmsoftware.co.za>
References: <000001da2d88$8d9e1280$a8da3780$@dfmsoftware.co.za>
Message-ID: <000001da2da1$b3790b90$1a6b22b0$@dfmsoftware.co.za>

I made it work, no need to respond

Was helped out in the Libera.Chat

 

 

 

 

Kind Regards / Vriendelike Groete 

Peter West




PO Box 537, Eerste River, Cape Town, 7103
124 Fairview Road, Penhill, Eerste River, 7100
2017/129810/07 VAT4500278363 Tel: +27 21 904 1154 

 

To view our disclaimer, please click on the following link: 

 <https://dfmtechnologies.co.za/terms> https://dfmtechnologies.co.za/terms



Want to know more about what it is that we do? Click
<https://dfmtechnologies.co.za/> here to redirect to our website!

 

This e-mail may contain confidential information and may be legally
privileged and is intended only for the person to whom it is addressed. If
you are not the intended recipient, you are notified that you may not use,
distribute or copy this document in any manner whatsoever. Kindly also
notify the sender immediately by telephone, and delete the e-mail. DFM
Technologies does not accept liability for any damage, loss or expense
arising from this e-mail and/or accessing any files attached to this e-mail.
Disclaimer is deemed to form part of the content of this email in terms of
Section 11 of the Electronic Communications &Transactions Act, 25 of 2002.

Please refer to our Privacy Policy that is available on our Website with the
following address/Link pertaining to our commitment to compliance with the
Popi Act.

 <https://dfmtechnologies.co.za/privacypolicy> DFM Technologies - Privacy
Policy

 

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Peter via
gdal-dev
Sent: Wednesday, 13 December 2023 07:52
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] Cutting Image GDAL C#

 

Hello there,

 

I hope you are well?

I'm hoping you could help me out with some guidance. I need to cut out a TIF
image defined by lat/lon coords bounding box from a larger TIF image. 

I'm using GDAL in C# (obviously) I thought I'd ask you for some guidance as
I am not able to get it working myself.

 

 

Thanks again,

 

 

 

 

 

Kind Regards / Vriendelike Groete 

Peter West




PO Box 537, Eerste River, Cape Town, 7103
124 Fairview Road, Penhill, Eerste River, 7100
2017/129810/07 VAT4500278363 Tel: +27 21 904 1154 

 

To view our disclaimer, please click on the following link: 

 <https://dfmtechnologies.co.za/terms> https://dfmtechnologies.co.za/terms



Want to know more about what it is that we do? Click
<https://dfmtechnologies.co.za/> here to redirect to our website!

 

This e-mail may contain confidential information and may be legally
privileged and is intended only for the person to whom it is addressed. If
you are not the intended recipient, you are notified that you may not use,
distribute or copy this document in any manner whatsoever. Kindly also
notify the sender immediately by telephone, and delete the e-mail. DFM
Technologies does not accept liability for any damage, loss or expense
arising from this e-mail and/or accessing any files attached to this e-mail.
Disclaimer is deemed to form part of the content of this email in terms of
Section 11 of the Electronic Communications &Transactions Act, 25 of 2002.

Please refer to our Privacy Policy that is available on our Website with the
following address/Link pertaining to our commitment to compliance with the
Popi Act.

 <https://dfmtechnologies.co.za/privacypolicy> DFM Technologies - Privacy
Policy

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/d824e6ef/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.jpg
Type: image/jpeg
Size: 5908 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/d824e6ef/attachment-0001.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 17208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/d824e6ef/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.gif
Type: image/gif
Size: 4902 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231213/d824e6ef/attachment-0001.gif>

From a.pau at creaf.uab.cat  Thu Dec 14 08:36:27 2023
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Thu, 14 Dec 2023 16:36:27 +0000
Subject: [gdal-dev] Why Open() inside QuietDelete()?
Message-ID: <PAXPR07MB7775DB27C5D8600AF6B0CE28A28CA@PAXPR07MB7775.eurprd07.prod.outlook.com>

Hi, today I have a very inside-code question...
I'm wondering why when I want to translate from .SHP to MiraMonFile (.PNT) and the destinatination file already exists I seems that the call stack reveals a way that is weird for me and I would like to understand:

Translate->Create->(then, as it extist) QuietDelete ->Detele ->Open.... (why Open if I have to delete?)

Why I need to Open a file if my goal is to delete it? There is something I am missing and I'd appreciate any answer. Thanks a lot.


The complete call stack is this:
gdald.dll!MMInitLayerToRead(MiraMonVectLayerInfo * hMiraMonLayer, VSIVirtualHandle * m_fp, const char * pszFilename) Line 157    C

gdald.dll!OGRMiraMonLayer::OGRMiraMonLayer(const char * pszFilename, VSIVirtualHandle * fp, const OGRSpatialReference * poSRS, int bUpdateIn, char * * papszOpenOptions) Line 182       C++

gdald.dll!OGRMiraMonDataSource::Open(const char * pszFilename, VSIVirtualHandle * fp, const OGRSpatialReference * poSRS, int bUpdateIn, char * * papszOpenOptionsUsr) Line 67               C++

gdald.dll!OGRMMDriverOpen(GDALOpenInfo * poOpenInfo) Line 90      C++

gdald.dll!GDALDriver::Open(GDALOpenInfo * poOpenInfo, bool bSetOpenOptions) Line 116       C++

gdald.dll!GDALOpenEx(const char * pszFilename, unsigned int nOpenFlags, const char * const * papszAllowedDrivers, const char * const * papszOpenOptions, const char * const * papszSiblingFiles) Line 3670             C++

gdald.dll!GDALDriver::Delete(const char * pszFilename) Line 1631           C++

gdald.dll!GDALDriver::QuietDelete(const char * pszName, const char * const * papszAllowedDrivers) Line 1594 C++

gdald.dll!GDALDriver::Create(const char * pszFilename, int nXSize, int nYSize, int nBands, GDALDataType eType, const char * const * papszOptions) Line 264    C++

gdald.dll!GDALVectorTranslate(const char * pszDest, void * hDstDS, int nSrcCount, void * * pahSrcDS, const GDALVectorTranslateOptions * psOptionsIn, int * pbUsageError) Line 2589         C++

ogr2ogr.exe!wmain(int nArgc, wchar_t * * argv_w, wchar_t * * __formal) Line 455         C++




Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/48b7055b/attachment-0003.jpg>

From even.rouault at spatialys.com  Thu Dec 14 08:59:41 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Dec 2023 17:59:41 +0100
Subject: [gdal-dev] Why Open() inside QuietDelete()?
In-Reply-To: <PAXPR07MB7775DB27C5D8600AF6B0CE28A28CA@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB7775DB27C5D8600AF6B0CE28A28CA@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <edca0917-156b-4473-8e11-3aa414e2bb53@spatialys.com>


Le 14/12/2023 ? 17:36, Abel Pau via gdal-dev a ?crit?:
>
> Hi, today I have a very inside-code question...
>
> I?m wondering why when I want to translate from .SHP to MiraMonFile 
> (.PNT) and the destinatination file already exists I seems that the 
> call stack reveals a way that is weird for me and I would like to 
> understand:
>
> Translate->Create->(then, as it extist) QuietDelete ->Detele 
> ->Open.... *(why Open if I have to delete?)*
>
The answer lies in the code: 
https://github.com/OSGeo/gdal/blob/master/gcore/gdaldriver.cpp#L1642

The default Delete() implementation needs to know the file list 
composing the dataset (for example shapefile datasets are made of 
multiple files) by calling GDALDataset::GetFileList()

An alternative is that your driver implements the GDALDriver::pfnDelete 
callback, but I would do that only if the Open() in your driver is 
particularly slow (most drivers have a fast Open() method)

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/e13010f5/attachment.htm>

From jesse.r.meyer at nasa.gov  Thu Dec 14 12:52:59 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Thu, 14 Dec 2023 20:52:59 +0000
Subject: [gdal-dev] Custom raster driver startup issues
Message-ID: <A89B537A-9C61-42AD-8229-357F7934FE48@ndc.nasa.gov>

Hi,

After carefully following the advice here on the lists and the Raster driver tutorial GDAL isn?t loading the driver.

I am relying on the AutoLoadDrivers function.

When I GDALAllRegister(), followed by a GDALOpen(?path/to/custom/raster.ext?, RA_ReadOnly);, GDAL states that the file is not recognized as a supported file format.  The application was built against the exact version of GDAL used to link the custom driver code.  GDAL 3.7.2

I tried running an older GDAL version (3.6.3) in a python environment.  When I `from osgeo import gdal`, there are two errors that are printed.


  1.  Can?t load requested DLL ? then it printed the full path and file name of the driver .dll, so it can find it!
  2.  The specified procedure could not be found

These look like python specific error messages to me, and probably stem from a gdal version mismatch. I?m assuming #2 is emitted in a trivial sense because the .dll could not be opened.  Curiously the error message was printed twice.  I did not expect this to work but my hope was to see a more detailed error message.

I have exported the GDALRegister_X() function, in accordance with the documentation.  The driver code compiles cleanly and follows almost verbatim with the tutorial.

How should I approach diagnosing the problem?

Best,
Jesse
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/8457ae84/attachment.htm>

From even.rouault at spatialys.com  Thu Dec 14 13:19:42 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Dec 2023 22:19:42 +0100
Subject: [gdal-dev] Custom raster driver startup issues
In-Reply-To: <A89B537A-9C61-42AD-8229-357F7934FE48@ndc.nasa.gov>
References: <A89B537A-9C61-42AD-8229-357F7934FE48@ndc.nasa.gov>
Message-ID: <0ed7f082-e783-4772-a671-b6a08e1c15de@spatialys.com>

- If you build a plugin against GDAL X.Y, you must run it against GDAL 
X.Y, and not an earlier or later version since the C++ ABI changes 
between feature versions (you should however be able to use a plugin, 
built against X.Y.some_patch_version, against X.Y.another_path_version)

- The error you get about specified procedure not found generally 
indicate that your plugin links to some library that is not found in the 
PATH / LD_LIBRARY_PATH. dlopen() / LoadLibrary() aren't super verbose 
about the reasons. You might have to use ldd or DependencyWalker to 
figure out the runtime linking issue.

- If you use GDALRegister_X(), then your DLL must be called exactly 
"gdal_X.dll" / "gdal_X.so"? . Or use "GDALRegisterMe()" as the 
registration function.? GDALRegister_X or GDALRegisterMe must have C 
export style (extern "C").

- Before trying GDALOpen(), check with "gdalinfo --format X" that your 
driver is loaded.

Le 14/12/2023 ? 21:52, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND 
APPLICATIONS INC] via gdal-dev a ?crit?:
>
> Hi,
>
> After carefully following the advice here on the lists and the Raster 
> driver tutorial GDAL isn?t loading the driver.
>
> I am relying on the AutoLoadDrivers function.
>
> When I GDALAllRegister(), followed by a 
> GDALOpen(?path/to/custom/raster.ext?, RA_ReadOnly);, GDAL states that 
> the file is not recognized as a supported file format.? The 
> application was built against the exact version of GDAL used to link 
> the custom driver code.? GDAL 3.7.2
>
> I tried running an older GDAL version (3.6.3) in a python 
> environment.? When I `from osgeo import gdal`, there are two errors 
> that are printed.
>
>  1. Can?t load requested DLL ? then it printed the full path and file
>     name of the driver .dll, so it can find it!
>  2. The specified procedure could not be found
>
> These look like python specific error messages to me, and probably 
> stem from a gdal version mismatch. I?m assuming #2 is emitted in a 
> trivial sense because the .dll could not be opened.? Curiously the 
> error message was printed twice.? I did not expect this to work but my 
> hope was to see a more detailed error message.
>
> I have exported the GDALRegister_X() function, in accordance with the 
> documentation.? The driver code compiles cleanly and follows almost 
> verbatim with the tutorial.
>
> How should I approach diagnosing the problem?
>
> Best,
>
> Jesse
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/1916195b/attachment.htm>

From even.rouault at spatialys.com  Thu Dec 14 13:45:32 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Dec 2023 22:45:32 +0100
Subject: [gdal-dev] Custom raster driver startup issues
In-Reply-To: <0ed7f082-e783-4772-a671-b6a08e1c15de@spatialys.com>
References: <A89B537A-9C61-42AD-8229-357F7934FE48@ndc.nasa.gov>
 <0ed7f082-e783-4772-a671-b6a08e1c15de@spatialys.com>
Message-ID: <0bf7ac42-d42a-466c-859e-50356a2f6dcc@spatialys.com>

Actually, I remember now that on Linux I've observed plugin loading 
issues specific to loading in Python when I forget to link the plugin to 
libgdal itself. This doesn't show up when loading the plugin from a GDAL 
command line utility.

Le 14/12/2023 ? 22:19, Even Rouault via gdal-dev a ?crit?:
>
> - If you build a plugin against GDAL X.Y, you must run it against GDAL 
> X.Y, and not an earlier or later version since the C++ ABI changes 
> between feature versions (you should however be able to use a plugin, 
> built against X.Y.some_patch_version, against X.Y.another_path_version)
>
> - The error you get about specified procedure not found generally 
> indicate that your plugin links to some library that is not found in 
> the PATH / LD_LIBRARY_PATH. dlopen() / LoadLibrary() aren't super 
> verbose about the reasons. You might have to use ldd or 
> DependencyWalker to figure out the runtime linking issue.
>
> - If you use GDALRegister_X(), then your DLL must be called exactly 
> "gdal_X.dll" / "gdal_X.so"? . Or use "GDALRegisterMe()" as the 
> registration function.? GDALRegister_X or GDALRegisterMe must have C 
> export style (extern "C").
>
> - Before trying GDALOpen(), check with "gdalinfo --format X" that your 
> driver is loaded.
>
> Le 14/12/2023 ? 21:52, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS 
> AND APPLICATIONS INC] via gdal-dev a ?crit?:
>>
>> Hi,
>>
>> After carefully following the advice here on the lists and the Raster 
>> driver tutorial GDAL isn?t loading the driver.
>>
>> I am relying on the AutoLoadDrivers function.
>>
>> When I GDALAllRegister(), followed by a 
>> GDALOpen(?path/to/custom/raster.ext?, RA_ReadOnly);, GDAL states that 
>> the file is not recognized as a supported file format.? The 
>> application was built against the exact version of GDAL used to link 
>> the custom driver code.? GDAL 3.7.2
>>
>> I tried running an older GDAL version (3.6.3) in a python 
>> environment.? When I `from osgeo import gdal`, there are two errors 
>> that are printed.
>>
>>  1. Can?t load requested DLL ? then it printed the full path and file
>>     name of the driver .dll, so it can find it!
>>  2. The specified procedure could not be found
>>
>> These look like python specific error messages to me, and probably 
>> stem from a gdal version mismatch. I?m assuming #2 is emitted in a 
>> trivial sense because the .dll could not be opened.? Curiously the 
>> error message was printed twice.? I did not expect this to work but 
>> my hope was to see a more detailed error message.
>>
>> I have exported the GDALRegister_X() function, in accordance with the 
>> documentation.? The driver code compiles cleanly and follows almost 
>> verbatim with the tutorial.
>>
>> How should I approach diagnosing the problem?
>>
>> Best,
>>
>> Jesse
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/40a9f705/attachment-0001.htm>

From jesse.r.meyer at nasa.gov  Thu Dec 14 14:20:48 2023
From: jesse.r.meyer at nasa.gov (Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC])
Date: Thu, 14 Dec 2023 22:20:48 +0000
Subject: [gdal-dev] [EXTERNAL] Re:  Custom raster driver startup issues
In-Reply-To: <0ed7f082-e783-4772-a671-b6a08e1c15de@spatialys.com>
References: <A89B537A-9C61-42AD-8229-357F7934FE48@ndc.nasa.gov>
 <0ed7f082-e783-4772-a671-b6a08e1c15de@spatialys.com>
Message-ID: <1F718A7D-E9ED-415C-8C06-AEDF2DA5901E@ndc.nasa.gov>

Per 1, this was my understanding ? thanks for confirming.
2,  It might be that I?ve compiled with a different version of Microsoft?s C runtime library.  I?ll play with that.
3, I did not know the last bit regarding extern ?C?.  Is it in the documentation?  I?ll try this first.
4, good idea, thanks!

If I encounter more issues tomorrow I?ll report back.  I appreciate the support.

Jesse

From: Even Rouault <even.rouault at spatialys.com>
Date: Thursday, December 14, 2023 at 4:19 PM
To: "Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC]" <jesse.r.meyer at nasa.gov>, gdal-dev <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] Re: [gdal-dev] Custom raster driver startup issues

CAUTION: This email originated from outside of NASA.  Please take care when clicking links or opening attachments.  Use the "Report Message" button to report suspicious messages to the NASA SOC.



- If you build a plugin against GDAL X.Y, you must run it against GDAL X.Y, and not an earlier or later version since the C++ ABI changes between feature versions (you should however be able to use a plugin, built against X.Y.some_patch_version, against X.Y.another_path_version)

- The error you get about specified procedure not found generally indicate that your plugin links to some library that is not found in the PATH / LD_LIBRARY_PATH. dlopen() / LoadLibrary() aren't super verbose about the reasons. You might have to use ldd or DependencyWalker to figure out the runtime linking issue.

- If you use GDALRegister_X(), then your DLL must be called exactly "gdal_X.dll" / "gdal_X.so"  . Or use "GDALRegisterMe()" as the registration function.  GDALRegister_X or GDALRegisterMe must have C export style (extern "C").

- Before trying GDALOpen(), check with "gdalinfo --format X" that your driver is loaded.
Le 14/12/2023 ? 21:52, Meyer, Jesse R. (GSFC-618.0)[SCIENCE SYSTEMS AND APPLICATIONS INC] via gdal-dev a ?crit :
Hi,

After carefully following the advice here on the lists and the Raster driver tutorial GDAL isn?t loading the driver.

I am relying on the AutoLoadDrivers function.

When I GDALAllRegister(), followed by a GDALOpen(?path/to/custom/raster.ext?, RA_ReadOnly);, GDAL states that the file is not recognized as a supported file format.  The application was built against the exact version of GDAL used to link the custom driver code.  GDAL 3.7.2

I tried running an older GDAL version (3.6.3) in a python environment.  When I `from osgeo import gdal`, there are two errors that are printed.


  1.  Can?t load requested DLL ? then it printed the full path and file name of the driver .dll, so it can find it!
  2.  The specified procedure could not be found

These look like python specific error messages to me, and probably stem from a gdal version mismatch. I?m assuming #2 is emitted in a trivial sense because the .dll could not be opened.  Curiously the error message was printed twice.  I did not expect this to work but my hope was to see a more detailed error message.

I have exported the GDALRegister_X() function, in accordance with the documentation.  The driver code compiles cleanly and follows almost verbatim with the tutorial.

How should I approach diagnosing the problem?

Best,
Jesse



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com<http://www.spatialys.com/>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231214/028a3b2f/attachment.htm>

From a.pau at creaf.uab.cat  Fri Dec 15 00:54:24 2023
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Fri, 15 Dec 2023 08:54:24 +0000
Subject: [gdal-dev] Why Open() inside QuietDelete()?
In-Reply-To: <edca0917-156b-4473-8e11-3aa414e2bb53@spatialys.com>
References: <PAXPR07MB7775DB27C5D8600AF6B0CE28A28CA@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <edca0917-156b-4473-8e11-3aa414e2bb53@spatialys.com>
Message-ID: <PAXPR07MB7775DF29120E093344B24557A293A@PAXPR07MB7775.eurprd07.prod.outlook.com>

Thanks!!

De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dijous, 14 de desembre de 2023 18:00
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] Why Open() inside QuietDelete()?



Le 14/12/2023 ? 17:36, Abel Pau via gdal-dev a ?crit :
Hi, today I have a very inside-code question...
I?m wondering why when I want to translate from .SHP to MiraMonFile (.PNT) and the destinatination file already exists I seems that the call stack reveals a way that is weird for me and I would like to understand:

Translate->Create->(then, as it extist) QuietDelete ->Detele ->Open.... (why Open if I have to delete?)

The answer lies in the code: https://github.com/OSGeo/gdal/blob/master/gcore/gdaldriver.cpp#L1642

The default Delete() implementation needs to know the file list composing the dataset (for example shapefile datasets are made of multiple files) by calling GDALDataset::GetFileList()

An alternative is that your driver implements the GDALDriver::pfnDelete callback, but I would do that only if the Open() in your driver is particularly slow (most drivers have a fast Open() method)

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231215/181fb7d9/attachment-0001.htm>

From even.rouault at spatialys.com  Fri Dec 15 06:35:51 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Dec 2023 15:35:51 +0100
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
Message-ID: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>

Hi,

I'm considering removing from the source tree a number of third-party 
libraries that we have vendored over the years: zlib, libpng, libjpeg, 
giflib, liblerc

All of them are widely available in most packaging environments. In that 
list, only zlib is required (currently either as external or internal lib).

I believe the main reason for having them vendored is now mostly 
historical, dating back to times where there was no packaging system on 
Windows. Now we have Conda-Forge or vcpkg, it is easy to have those 
dependencies installed.

For libjpeg, there was a particular history related to 12-bit JPEG 
support that required to use the internal copy built in a special way, 
but a couple months ago, libjpeg-turbo 3.0 has been released with 
unified support for both 8-bit and 12-bit JPEG in the same build, and 
latest libtiff and GDAL releases are able to make use of it. Hence this 
justification no longer holds. Furthermore GDAL libjpeg copy is still 
good-ol' libjpeg 6b, without all the SIMD accelerations that are now in 
libjpeg-turbo, hence it is definitely not recommended any more to use 
GDAL internal copy of libjpeg.

For internal libpng, we have a small old patch to accept some invalid 
files ("Make screwy MSPaint "zero chunks" only a warning, not error", 
https://trac.osgeo.org/gdal/ticket/3416). I don't think it is critical 
to have that patch lost... At worse, it could be attempted to have it 
accepted by upstream.

Benefits of un-vendoring those libraries:

- currently, we must take care of updating them regularly, in particular 
to make sure they integrate the latest fixes for their vulnerabilities.

- they complicate the GDAL build scripts and configuration. For example, 
drivers can't be built as plugins if they depend of one of those 
libraries built as internal (because the internal copy is built in 
libgdal, but not exported, hence a plugin can't use its symbols, and 
thus must be built itself in libgdal core). We also must do tricks to 
rename their symbols to avoid clashes when integrating GDAL with other 
software which uses the corresponding external library.

- they require exceptions to static analyzers (cppcheck, coverity scan), 
since they don't use the same coding standards as GDAL

Looking a bit around in different open source build recipees of GDAL 
(Debian, Conda-Forge, vcpkg, OSGeo4W, gisinternals, rasterio-wheels), 
those proposed changes should have modest impact, as they already mostly 
use external libraries. What I've identified (I may have missed things) 
to require changes from the maintainers of those distributions to keep 
the same level of functionality:

- gisinternals doesn't seem to have a liblerc build

- rasterio-wheels doesn't seem to have libpng and giflib builds

As far as our code base is concerned, apart from the obvious removal of 
code and simplification of the build system, there would be some changes 
in CI configurations (like the Android CI build would be impacted to add 
at least a preliminary step of cross-compiling zlib).


Potential candidates, but would remain in-tree for now:

- libtiff: compulsory dependency. GDAL has been the main driver for most 
libtiff development over the last 10 years, and GDAL autotest suite 
tortures libtiff much more than libtiff own testsuite, hence it is quite 
convenient to have the capability of vendoring it.? Plus the fact that 
for "staging codecs" (that is codecs not yet integrated in official 
libtiff), currently JPEG-XL (a few years ago this was the LERC codec), 
we can't build them against an external libtiff.

- libgeotiff. compulsory dependency. If one uses internal libtiff, one 
also must use internal libgeotiff because of the renaming of symbols 
done when using internal libtiff.

- shapelib. compulsory dependency.? External default shapelib build uses 
32-bit file offset, whereas the internal shapelib is built with 64-bit 
offset support (to use .DBF files > 2 GB). We don't have build support 
for using it as external lib.

- libjson-c: compulsory dependency. I initially put it in the list of 
candidates to unvendor, as it is quite widely available, but now I 
recall that upstream libjson-c has an issue (especially/only on Windows) 
with non-C locales when parsing/outputing floating point numbers, which 
we have patched in our internal copy by using GDAL locale-safe 
functions. Ideally that should be fixed upstream, but not immediately 
trivial to port our changes.

- libqhull (used for the gdal_grid linear algorithm, which requires a 
Delaunay triangulation of the points): that one could be a candidate for 
unvendoring, as it is available in a number of distributions, but 
there's an issue currently which scipy which bundles it without renaming 
the symbols, hence if linking GDAL against external libqhull, and using 
GDAL + scipy, we have a clash of symbols 
(https://github.com/conda-forge/qgis-feedstock/issues/284#issuecomment-1356490896). 
When using internal libqhull, GDAL does rename its symbols, which works 
around this (scipy) issue.

Non-candidates:

- pcidsk sdk (for PCIDSK driver):?doesn't seem to be packaged. We don't 
have build support for using it as external lib.

- libopencad (used by CAD driver): doesn't seem to be packaged

- libcsf (used by PCRaster driver): doesn't seem to be packaged

- infback9. That code originally comes from the "contrib" part of zlib, 
to add Deflate64 support (non-backwards compatible extension of Deflate, 
sometimes used by Windows zipper I believe). We don't have build support 
for using it as external lib.

- degrib and g2clib (used by the GRIB driver): they originally came from 
third-party sources, but they aren't widely packaged and we have heavily 
patched them (there was no real possibility of collaboration with the 
authors of those software at the time where we needed to make those 
changes). We don't have build support for using them as external 
libraries. For better or worse, they should be considered as GDAL code 
now...

- hdf-eos (used by HDF4 driver): originally comes from a third-party 
source, but GDAL copy was heavily patched long time ago. We don't have 
build support for using it as external lib. For better or worse, it 
should be considered as GDAL code now...


Thoughts ? (given the length of the email, it should probably be 
formalized as a RFC. I'll do that, unless there is a massive uprising 
against the proposal...)

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From sebastic at xs4all.nl  Fri Dec 15 06:49:01 2023
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 15 Dec 2023 15:49:01 +0100
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
Message-ID: <427c2ed2-0e08-4dfd-b038-2ed8119dd940@xs4all.nl>

On 12/15/23 15:35, Even Rouault via gdal-dev wrote:
> Thoughts ? (given the length of the email, it should probably be 
> formalized as a RFC. I'll do that, unless there is a massive uprising 
> against the proposal...)

LERC doesn't support big endian architectures currently, only using that 
on little endian architectures using the internal copy currently works 
as expected. Using the external library would require conditionals in 
the packaging which I'm not in favor of.

Kind Regards,

Bas

-- 
  GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1


From even.rouault at spatialys.com  Fri Dec 15 07:02:20 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Dec 2023 16:02:20 +0100
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <427c2ed2-0e08-4dfd-b038-2ed8119dd940@xs4all.nl>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
 <427c2ed2-0e08-4dfd-b038-2ed8119dd940@xs4all.nl>
Message-ID: <c8439b7d-8027-4a42-88d8-4a3bd11fc193@spatialys.com>


Le 15/12/2023 ? 15:49, Sebastiaan Couwenberg via gdal-dev a ?crit?:
> On 12/15/23 15:35, Even Rouault via gdal-dev wrote:
>> Thoughts ? (given the length of the email, it should probably be 
>> formalized as a RFC. I'll do that, unless there is a massive uprising 
>> against the proposal...)
>
> LERC doesn't support big endian architectures currently, only using 
> that on little endian architectures using the internal copy currently 
> works as expected. Using the external library would require 
> conditionals in the packaging which I'm not in favor of.
Bas,

- The Debian libtiff package already handles that conditional, so there 
must certainly be a way of using the same trick for the GDAL build recipee

- The only user of LERC in GDAL (except for its libtiff internal cpoy) 
is the MRF driver. I doubt MRF is used widely except in Esri data 
centers... So even if you don't want to change the GDAL build recipee to 
include a conditional liblerc dependency, that wouldn't be the end of 
the world.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From howard at hobu.co  Fri Dec 15 07:18:55 2023
From: howard at hobu.co (Howard Butler)
Date: Fri, 15 Dec 2023 09:18:55 -0600
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
Message-ID: <7B532A67-30B4-430F-A09A-84829B54ECD9@hobu.co>



> On Dec 15, 2023, at 8:35?AM, Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> 
> Thoughts ? (given the length of the email, it should probably be formalized as a RFC. I'll do that, unless there is a massive uprising against the proposal...)


If the scope of this were to unvendor just these four (libjpeg, libpng, zlib, giflib), I think it is enough to start, but it brings up the question of whether or not JPEG, PNG, and GIF support are hard dependencies in GDAL afterward. They're always available no matter how you build  now, so would we make them hard dependencies or relax them to optional after unvendoring? I assume zlib would move to a hard dependency of GDAL.

Howard



From howard at hobu.co  Fri Dec 15 07:18:55 2023
From: howard at hobu.co (Howard Butler)
Date: Fri, 15 Dec 2023 09:18:55 -0600
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
Message-ID: <7B532A67-30B4-430F-A09A-84829B54ECD9@hobu.co>



> On Dec 15, 2023, at 8:35?AM, Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> wrote:
> 
> Thoughts ? (given the length of the email, it should probably be formalized as a RFC. I'll do that, unless there is a massive uprising against the proposal...)


If the scope of this were to unvendor just these four (libjpeg, libpng, zlib, giflib), I think it is enough to start, but it brings up the question of whether or not JPEG, PNG, and GIF support are hard dependencies in GDAL afterward. They're always available no matter how you build  now, so would we make them hard dependencies or relax them to optional after unvendoring? I assume zlib would move to a hard dependency of GDAL.

Howard



From even.rouault at spatialys.com  Fri Dec 15 07:33:19 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Dec 2023 16:33:19 +0100
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <7B532A67-30B4-430F-A09A-84829B54ECD9@hobu.co>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
 <7B532A67-30B4-430F-A09A-84829B54ECD9@hobu.co>
Message-ID: <01bbfaf0-7df6-40ea-9032-d08261af31f4@spatialys.com>

> If the scope of this were to unvendor just these four (libjpeg, libpng, zlib, giflib), I think it is enough to start, but it brings up the question of whether or not JPEG, PNG, and GIF support are hard dependencies in GDAL afterward. They're always available no matter how you build  now, so would we make them hard dependencies or relax them to optional after unvendoring? I assume zlib would move to a hard dependency of GDAL.

I would let libjpeg, libpng, giflib, liblerc as optional?dependencies. 
Our CMake scripts already handle them as optional. Someone doing a GDAL 
build only for vector might want to skip them.

But strongly recommended at least for libjpeg and libpng, since beyond 
being standalone formats, they are also used for example for GeoPackage, 
MBTiles, MRF, OGCAPI/WMS/WMTS, etc.

Yes zlib would move to a hard dependency, like PROJ (and if you build 
PROJ with libtiff or libcurl support, you must certainly already have 
zlib as it is a canonical dependency of those). There are lots of places 
in the code base where we assume deflate compression/decompression to be 
available.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231215/2fa5ce72/attachment.htm>

From andrew at aitchison.me.uk  Fri Dec 15 10:46:10 2023
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 15 Dec 2023 18:46:10 +0000 (GMT)
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <01bbfaf0-7df6-40ea-9032-d08261af31f4@spatialys.com>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
 <7B532A67-30B4-430F-A09A-84829B54ECD9@hobu.co>
 <01bbfaf0-7df6-40ea-9032-d08261af31f4@spatialys.com>
Message-ID: <11271ade-2b40-9098-4b26-3c69cfea7834@aitchison.me.uk>

On Fri, 15 Dec 2023, Even Rouault via gdal-dev wrote:

>> If the scope of this were to unvendor just these four (libjpeg, libpng, 
>> zlib, giflib), I think it is enough to start, but it brings up the question 
>> of whether or not JPEG, PNG, and GIF support are hard dependencies in GDAL 
>> afterward. They're always available no matter how you build  now, so would 
>> we make them hard dependencies or relax them to optional after unvendoring? 
>> I assume zlib would move to a hard dependency of GDAL.
>
> I would let libjpeg, libpng, giflib, liblerc as optional?dependencies. Our 
> CMake scripts already handle them as optional. Someone doing a GDAL build 
> only for vector might want to skip them.
>
> But strongly recommended at least for libjpeg and libpng, since beyond being 
> standalone formats, they are also used for example for GeoPackage, MBTiles, 
> MRF, OGCAPI/WMS/WMTS, etc.
>
> Yes zlib would move to a hard dependency, like PROJ (and if you build PROJ 
> with libtiff or libcurl support, you must certainly already have zlib as it 
> is a canonical dependency of those). There are lots of places in the code 
> base where we assume deflate compression/decompression to be available.

I don't see a problem but libpng also uses zlib. Do we need to
do anything to ensure that gdal uses the same zlib as libpng ?

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From even.rouault at spatialys.com  Fri Dec 15 14:56:44 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Dec 2023 23:56:44 +0100
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <11271ade-2b40-9098-4b26-3c69cfea7834@aitchison.me.uk>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
 <7B532A67-30B4-430F-A09A-84829B54ECD9@hobu.co>
 <01bbfaf0-7df6-40ea-9032-d08261af31f4@spatialys.com>
 <11271ade-2b40-9098-4b26-3c69cfea7834@aitchison.me.uk>
Message-ID: <f98ac747-1a81-4a58-afef-724c22de5064@spatialys.com>

Andrew,
> I don't see a problem but libpng also uses zlib. Do we need to
> do anything to ensure that gdal uses the same zlib as libpng ?

It is not the role to GDAL to check this (there's no portable way of 
doing that AFAIK), but it is obviously the responsibility of the user to 
make sure that all libraries (libpng, libcurl, libtiff, etc. and GDAL) 
that link to zlib link to the same one. This is basic dependency hygiene.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From gdt at lexort.com  Fri Dec 15 16:45:07 2023
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 15 Dec 2023 19:45:07 -0500
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com> (Even
 Rouault via gdal-dev's message of "Fri, 15 Dec 2023 15:35:51 +0100")
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
Message-ID: <rmittojkmb0.fsf@s1.lexort.com>

Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> writes:

> I'm considering removing from the source tree a number of third-party
> libraries that we have vendored over the years: zlib, libpng, libjpeg,
> giflib, liblerc

I'm basically strongly in favor of un-vendoring.  I view vendoring as a
bug, even if it is a workaround for other bugs.

> I believe the main reason for having them vendored is now mostly
> historical, dating back to times where there was no packaging system
> on Windows. Now we have Conda-Forge or vcpkg, it is easy to have those
> dependencies installed.

>From the pkgrsc viewpoint, I don't see any reasons why vendoring helps.
It looks to me like the build is using normal dependencies, including
zlib, jpeg, tiff, geotiff.  But apparently not shapelib and json-c.

$ ldd /usr/pkg/lib/libgdal.so
/usr/pkg/lib/libgdal.so:
        -lgeos_c.1 => /usr/pkg/lib/libgeos_c.so.1
        -lgeos.3.12.1 => /usr/pkg/lib/libgeos.so.3.12.1
        -lstdc++.9 => /usr/lib/libstdc++.so.9
        -lm.0 => /usr/lib/libm.so.0
        -lc.12 => /usr/lib/libc.so.12
        -lgcc_s.1 => /usr/lib/libgcc_s.so.1
        -lwebp.7 => /usr/pkg/lib/libwebp.so.7
        -lsharpyuv.0 => /usr/pkg/lib/libsharpyuv.so.0
        -lpthread.1 => /usr/lib/libpthread.so.1
        -lexpat.2 => /usr/lib/libexpat.so.2
        -lxerces-c-3.2 => /usr/pkg/lib/libxerces-c-3.2.so
        -lopenjp2.7 => /usr/pkg/lib/libopenjp2.so.7
        -lnetcdf.19 => /usr/pkg/lib/libnetcdf.so.19
        -lexecinfo.0 => /usr/lib/libexecinfo.so.0
        -lelf.2 => /usr/lib/libelf.so.2
        -lhdf5_hl.200 => /usr/pkg/lib/libhdf5_hl.so.200
        -lhdf5.200 => /usr/pkg/lib/libhdf5.so.200
        -lsz.2 => /usr/pkg/lib/libsz.so.2
        -laec.0 => /usr/pkg/lib/libaec.so.0
        -lz.1 => /usr/lib/libz.so.1
        -lbz2.1 => /usr/lib/libbz2.so.1
        -lxml2.2 => /usr/pkg/lib/libxml2.so.2
        -llzma.2 => /usr/lib/liblzma.so.2
        -lcurl.4 => /usr/pkg/lib/libcurl.so.4
        -lnghttp2.14 => /usr/pkg/lib/libnghttp2.so.14
        -lidn2.0 => /usr/pkg/lib/libidn2.so.0
        -lunistring.5 => /usr/pkg/lib/libunistring.so.5
        -lintl.1 => /usr/lib/libintl.so.1
        -lssl.15 => /usr/lib/libssl.so.15
        -lcrypto.15 => /usr/lib/libcrypto.so.15
        -lcrypt.1 => /lib/libcrypt.so.1
        -lgssapi.12 => /usr/lib/libgssapi.so.12
        -lkrb5.28 => /usr/lib/libkrb5.so.28
        -lhx509.7 => /usr/lib/libhx509.so.7
        -lasn1.10 => /usr/lib/libasn1.so.10
        -lcom_err.8 => /usr/lib/libcom_err.so.8
        -lroken.20 => /usr/lib/libroken.so.20
        -lutil.7 => /usr/lib/libutil.so.7
        -lwind.1 => /usr/lib/libwind.so.1
        -lheimbase.2 => /usr/lib/libheimbase.so.2
        -lheimntlm.6 => /usr/lib/libheimntlm.so.6
        -lgif.7 => /usr/pkg/lib/libgif.so.7
        -lgeotiff.5 => /usr/pkg/lib/libgeotiff.so.5
        -lproj.19 => /usr/pkg/lib/libproj.so.19
        -lsqlite3.1 => /usr/lib/libsqlite3.so.1
        -ltiff.6 => /usr/pkg/lib/libtiff.so.6
        -ljbig.2 => /usr/pkg/lib/libjbig.so.2
        -ljpeg.8 => /usr/pkg/lib/libjpeg.so.8
        -lpng16.16 => /usr/pkg/lib/libpng16.so.16
        -lrt.1 => /usr/lib/librt.so.1
        -lpcre.1 => /usr/pkg/lib/libpcre.so.1
        -lqhull_r.8.0 => /usr/pkg/lib/libqhull_r.so.8.0

> For libjpeg, there was a particular history related to 12-bit JPEG

So documentation of prereqs will say "you need jpeg, and you really
should use jpeg-turbo so you have 12-bit support"?  If so, sounds good.

> Benefits of un-vendoring those libraries:
>
> - currently, we must take care of updating them regularly, in
>   particular to make sure they integrate the latest fixes for their
>  vulnerabilities.

And not just that, but to have a gdal point release within days of any
vendored upstream release that has a security fix, documented as such or
not.  That's a tall order, and ~nobody achieves it.  This point is
strongly in favor of unvendoring.

Also, if there is a portablity or other bug fix, that needs to be
imported and apoint release, so people can get those fixes.

> Looking a bit around in different open source build recipees of GDAL
> (Debian, Conda-Forge, vcpkg, OSGeo4W, gisinternals, rasterio-wheels),
> those proposed changes should have modest impact, as they already
> mostly use external libraries. What I've identified (I may have missed
> things) to require changes from the maintainers of those distributions
> to keep the same level of functionality:
>
> - gisinternals doesn't seem to have a liblerc build
>
> - rasterio-wheels doesn't seem to have libpng and giflib builds

I am pretty sure pkgsrc will have little to no trouble.  There's no
liblerc, but it's optional and surely it can be packaged if somebody
cares.

> Potential candidates, but would remain in-tree for now:
>
> - libtiff: compulsory dependency. GDAL has been the main driver for
>   most libtiff development over the last 10 years, and GDAL autotest
>   suite tortures libtiff much more than libtiff own testsuite, hence
>   it is quite convenient to have the capability of vendoring it.? Plus
>   the fact that for "staging codecs" (that is codecs not yet
>   integrated in official libtiff), currently JPEG-XL (a few years ago
>   this was the LERC codec), we can't build them against an external
>  libtiff.

I see this as a workaround and it would be better if it weren't needed,
but getting most of the gain and leaving the harder issues for later is
a great strategy.  FWIW pkgsrc's gdal build uses pkgsrc libtiff and I
read normal tiffs just fine.

> - shapelib. compulsory dependency.? External default shapelib build
>   uses 32-bit file offset, whereas the internal shapelib is built with
>   64-bit offset support (to use .DBF files > 2 GB). We don't have
>   build support for using it as external lib.

Wow, that seems like quite a mess.  I wonder if that's only for
operating systems that have a LFS notion, vs those that just have 64-bit
off_t?


Overall, I would say unvendor as much as you feel you can do without
real trouble, and then repeat, and from my viewpoint, the more and
sooner the better, but I realize others have issues.

From schwehr at gmail.com  Fri Dec 15 22:40:30 2023
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 15 Dec 2023 22:40:30 -0800
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <rmittojkmb0.fsf@s1.lexort.com>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
 <rmittojkmb0.fsf@s1.lexort.com>
Message-ID: <CACmBxyt-RQbz+VKSAzBu+MmKupnzi_Zugc_nCC7esGYx3qn+Yw@mail.gmail.com>

+1 for un-vendoring. Long term, I think that will be a big win. Looks like
others have covered all of the issues that I can think of.



On Fri, Dec 15, 2023 at 4:45?PM Greg Troxel via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Even Rouault via gdal-dev <gdal-dev at lists.osgeo.org> writes:
>
> > I'm considering removing from the source tree a number of third-party
> > libraries that we have vendored over the years: zlib, libpng, libjpeg,
> > giflib, liblerc
>
> I'm basically strongly in favor of un-vendoring.  I view vendoring as a
> bug, even if it is a workaround for other bugs.
>
> > I believe the main reason for having them vendored is now mostly
> > historical, dating back to times where there was no packaging system
> > on Windows. Now we have Conda-Forge or vcpkg, it is easy to have those
> > dependencies installed.
>
> From the pkgrsc viewpoint, I don't see any reasons why vendoring helps.
> It looks to me like the build is using normal dependencies, including
> zlib, jpeg, tiff, geotiff.  But apparently not shapelib and json-c.
>
> $ ldd /usr/pkg/lib/libgdal.so
> /usr/pkg/lib/libgdal.so:
>         -lgeos_c.1 => /usr/pkg/lib/libgeos_c.so.1
>         -lgeos.3.12.1 => /usr/pkg/lib/libgeos.so.3.12.1
>         -lstdc++.9 => /usr/lib/libstdc++.so.9
>         -lm.0 => /usr/lib/libm.so.0
>         -lc.12 => /usr/lib/libc.so.12
>         -lgcc_s.1 => /usr/lib/libgcc_s.so.1
>         -lwebp.7 => /usr/pkg/lib/libwebp.so.7
>         -lsharpyuv.0 => /usr/pkg/lib/libsharpyuv.so.0
>         -lpthread.1 => /usr/lib/libpthread.so.1
>         -lexpat.2 => /usr/lib/libexpat.so.2
>         -lxerces-c-3.2 => /usr/pkg/lib/libxerces-c-3.2.so
>         -lopenjp2.7 => /usr/pkg/lib/libopenjp2.so.7
>         -lnetcdf.19 => /usr/pkg/lib/libnetcdf.so.19
>         -lexecinfo.0 => /usr/lib/libexecinfo.so.0
>         -lelf.2 => /usr/lib/libelf.so.2
>         -lhdf5_hl.200 => /usr/pkg/lib/libhdf5_hl.so.200
>         -lhdf5.200 => /usr/pkg/lib/libhdf5.so.200
>         -lsz.2 => /usr/pkg/lib/libsz.so.2
>         -laec.0 => /usr/pkg/lib/libaec.so.0
>         -lz.1 => /usr/lib/libz.so.1
>         -lbz2.1 => /usr/lib/libbz2.so.1
>         -lxml2.2 => /usr/pkg/lib/libxml2.so.2
>         -llzma.2 => /usr/lib/liblzma.so.2
>         -lcurl.4 => /usr/pkg/lib/libcurl.so.4
>         -lnghttp2.14 => /usr/pkg/lib/libnghttp2.so.14
>         -lidn2.0 => /usr/pkg/lib/libidn2.so.0
>         -lunistring.5 => /usr/pkg/lib/libunistring.so.5
>         -lintl.1 => /usr/lib/libintl.so.1
>         -lssl.15 => /usr/lib/libssl.so.15
>         -lcrypto.15 => /usr/lib/libcrypto.so.15
>         -lcrypt.1 => /lib/libcrypt.so.1
>         -lgssapi.12 => /usr/lib/libgssapi.so.12
>         -lkrb5.28 => /usr/lib/libkrb5.so.28
>         -lhx509.7 => /usr/lib/libhx509.so.7
>         -lasn1.10 => /usr/lib/libasn1.so.10
>         -lcom_err.8 => /usr/lib/libcom_err.so.8
>         -lroken.20 => /usr/lib/libroken.so.20
>         -lutil.7 => /usr/lib/libutil.so.7
>         -lwind.1 => /usr/lib/libwind.so.1
>         -lheimbase.2 => /usr/lib/libheimbase.so.2
>         -lheimntlm.6 => /usr/lib/libheimntlm.so.6
>         -lgif.7 => /usr/pkg/lib/libgif.so.7
>         -lgeotiff.5 => /usr/pkg/lib/libgeotiff.so.5
>         -lproj.19 => /usr/pkg/lib/libproj.so.19
>         -lsqlite3.1 => /usr/lib/libsqlite3.so.1
>         -ltiff.6 => /usr/pkg/lib/libtiff.so.6
>         -ljbig.2 => /usr/pkg/lib/libjbig.so.2
>         -ljpeg.8 => /usr/pkg/lib/libjpeg.so.8
>         -lpng16.16 => /usr/pkg/lib/libpng16.so.16
>         -lrt.1 => /usr/lib/librt.so.1
>         -lpcre.1 => /usr/pkg/lib/libpcre.so.1
>         -lqhull_r.8.0 => /usr/pkg/lib/libqhull_r.so.8.0
>
> > For libjpeg, there was a particular history related to 12-bit JPEG
>
> So documentation of prereqs will say "you need jpeg, and you really
> should use jpeg-turbo so you have 12-bit support"?  If so, sounds good.
>
> > Benefits of un-vendoring those libraries:
> >
> > - currently, we must take care of updating them regularly, in
> >   particular to make sure they integrate the latest fixes for their
> >  vulnerabilities.
>
> And not just that, but to have a gdal point release within days of any
> vendored upstream release that has a security fix, documented as such or
> not.  That's a tall order, and ~nobody achieves it.  This point is
> strongly in favor of unvendoring.
>
> Also, if there is a portablity or other bug fix, that needs to be
> imported and apoint release, so people can get those fixes.
>
> > Looking a bit around in different open source build recipees of GDAL
> > (Debian, Conda-Forge, vcpkg, OSGeo4W, gisinternals, rasterio-wheels),
> > those proposed changes should have modest impact, as they already
> > mostly use external libraries. What I've identified (I may have missed
> > things) to require changes from the maintainers of those distributions
> > to keep the same level of functionality:
> >
> > - gisinternals doesn't seem to have a liblerc build
> >
> > - rasterio-wheels doesn't seem to have libpng and giflib builds
>
> I am pretty sure pkgsrc will have little to no trouble.  There's no
> liblerc, but it's optional and surely it can be packaged if somebody
> cares.
>
> > Potential candidates, but would remain in-tree for now:
> >
> > - libtiff: compulsory dependency. GDAL has been the main driver for
> >   most libtiff development over the last 10 years, and GDAL autotest
> >   suite tortures libtiff much more than libtiff own testsuite, hence
> >   it is quite convenient to have the capability of vendoring it.  Plus
> >   the fact that for "staging codecs" (that is codecs not yet
> >   integrated in official libtiff), currently JPEG-XL (a few years ago
> >   this was the LERC codec), we can't build them against an external
> >  libtiff.
>
> I see this as a workaround and it would be better if it weren't needed,
> but getting most of the gain and leaving the harder issues for later is
> a great strategy.  FWIW pkgsrc's gdal build uses pkgsrc libtiff and I
> read normal tiffs just fine.
>
> > - shapelib. compulsory dependency.  External default shapelib build
> >   uses 32-bit file offset, whereas the internal shapelib is built with
> >   64-bit offset support (to use .DBF files > 2 GB). We don't have
> >   build support for using it as external lib.
>
> Wow, that seems like quite a mess.  I wonder if that's only for
> operating systems that have a LFS notion, vs those that just have 64-bit
> off_t?
>
>
> Overall, I would say unvendor as much as you feel you can do without
> real trouble, and then repeat, and from my viewpoint, the more and
> sooner the better, but I realize others have issues.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231215/40db4456/attachment.htm>

From even.rouault at spatialys.com  Sat Dec 16 06:01:26 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 16 Dec 2023 15:01:26 +0100
Subject: [gdal-dev] GDAL 3.8.2 RC1 is available, and motion to approve it
Message-ID: <1f897d28-3953-4722-a079-bef0765a6174@spatialys.com>

Hi,

I have prepared an advanced-of-time GDAL/OGR 3.8.2 release candidate, mostly
to fix a 3.8.0 regression that has been reported lately
(https://github.com/OSGeo/gdal/issues/8967), which caused an excessive 
use of
RAM when translating a VRT with many VRTComplexSource (typically used when
nodata or mask are involved), making such use cases unworkable.

Pick up an archive among the following ones (by ascending size):

 ? https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.xz
 ? https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.gz
 ? https://download.osgeo.org/gdal/3.8.2/gdal382rc1.zip

A snapshot of the gdalautotest suite is also available:

https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.tar.gz
 ? https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.zip

The NEWS file is here:

 ? https://github.com/OSGeo/gdal/blob/v3.8.2RC1/NEWS.md

Motion: adopt 3.8.2 RC1 as final 3.8.2 release

Starting with my +1,

Best regards,

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From jukka.rahkonen at maanmittauslaitos.fi  Sat Dec 16 07:11:15 2023
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Sat, 16 Dec 2023 15:11:15 +0000
Subject: [gdal-dev] GDAL 3.8.2 RC1 is available, and motion to approve it
In-Reply-To: <1f897d28-3953-4722-a079-bef0765a6174@spatialys.com>
References: <1f897d28-3953-4722-a079-bef0765a6174@spatialys.com>
Message-ID: <AM0PR09MB321914AC22F8152C94894D38FD92A@AM0PR09MB3219.eurprd09.prod.outlook.com>

+1

-Jukka Rahkonen-

-----Alkuper?inen viesti-----
L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Even Rouault via gdal-dev
L?hetetty: lauantai 16. joulukuuta 2023 16.01
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: [gdal-dev] GDAL 3.8.2 RC1 is available, and motion to approve it

Hi,

I have prepared an advanced-of-time GDAL/OGR 3.8.2 release candidate, mostly to fix a 3.8.0 regression that has been reported lately (https://github.com/OSGeo/gdal/issues/8967), which caused an excessive use of RAM when translating a VRT with many VRTComplexSource (typically used when nodata or mask are involved), making such use cases unworkable.

Pick up an archive among the following ones (by ascending size):

   https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.xz
   https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.gz
   https://download.osgeo.org/gdal/3.8.2/gdal382rc1.zip

A snapshot of the gdalautotest suite is also available:

https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.tar.gz
   https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.zip

The NEWS file is here:

   https://github.com/OSGeo/gdal/blob/v3.8.2RC1/NEWS.md

Motion: adopt 3.8.2 RC1 as final 3.8.2 release

Starting with my +1,

Best regards,

Even

--
http://www.spatialys.com/
My software is free, but my time generally not.

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From j1 at jimenezshaw.com  Sat Dec 16 07:28:48 2023
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sat, 16 Dec 2023 16:28:48 +0100
Subject: [gdal-dev] GDAL 3.8.2 RC1 is available, and motion to approve it
In-Reply-To: <1f897d28-3953-4722-a079-bef0765a6174@spatialys.com>
References: <1f897d28-3953-4722-a079-bef0765a6174@spatialys.com>
Message-ID: <CADRrdKvz6x+Wv7Z+CZqiVkhWiwQH76rv-Rim3PZETZi4qP0U_A@mail.gmail.com>

+1 Javier

On Sat, 16 Dec 2023, 15:01 Even Rouault via gdal-dev, <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> I have prepared an advanced-of-time GDAL/OGR 3.8.2 release candidate,
> mostly
> to fix a 3.8.0 regression that has been reported lately
> (https://github.com/OSGeo/gdal/issues/8967), which caused an excessive
> use of
> RAM when translating a VRT with many VRTComplexSource (typically used when
> nodata or mask are involved), making such use cases unworkable.
>
> Pick up an archive among the following ones (by ascending size):
>
>    https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.xz
>    https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.gz
>    https://download.osgeo.org/gdal/3.8.2/gdal382rc1.zip
>
> A snapshot of the gdalautotest suite is also available:
>
> https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.tar.gz
>    https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.zip
>
> The NEWS file is here:
>
>    https://github.com/OSGeo/gdal/blob/v3.8.2RC1/NEWS.md
>
> Motion: adopt 3.8.2 RC1 as final 3.8.2 release
>
> Starting with my +1,
>
> Best regards,
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231216/b120e5f9/attachment.htm>

From fitch at astraea.io  Sun Dec 17 14:09:09 2023
From: fitch at astraea.io (Fitch, Simeon)
Date: Sun, 17 Dec 2023 17:09:09 -0500
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
Message-ID: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>

The last argument to function `CPLErr GDALWriteBlock(GDALRasterBandH, int,
int, void*)`, pointing to the block array, is not `const`.  I can't find
anything in the documentation discussing ownership, etc. but need to know
what kind of invariants can be assumed here.

Are there (driver dependent?) circumstances where `GDALWriteBlock` will
mutate the given array, or can callers assume it's effectively `const
void*`?

Thanks,

Simeon

-- 
The content of this email is intended for the person or entity to which it 
is addressed only. This email may contain confidential information. If you 
are not the person to whom this message is addressed, be aware that any 
use, reproduction, or distribution of this message is strictly prohibited. 
If you received this in error, please contact the sender and immediately 
delete this email and any attachments.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231217/024d8506/attachment.htm>

From lnicola at dend.ro  Sun Dec 17 22:05:34 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Mon, 18 Dec 2023 08:05:34 +0200
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
Message-ID: <d720493f-455a-41ff-85c6-bf40d11c632e@app.fastmail.com>

I don't think it does, but some parts (the older ones) of the public GDAL API don't use const. I admit I didn't check the implementation this time though.

Laurentiu

On Mon, Dec 18, 2023, at 00:09, Fitch, Simeon via gdal-dev wrote:
> The last argument to function `CPLErr GDALWriteBlock(GDALRasterBandH, int, int, void*)`, pointing to the block array, is not `const`.  I can't find anything in the documentation discussing ownership, etc. but need to know what kind of invariants can be assumed here.
> 
> Are there (driver dependent?) circumstances where `GDALWriteBlock` will mutate the given array, or can callers assume it's effectively `const void*`?
> 
> Thanks,
> 
> Simeon
> 
> The content of this email is intended for the person or entity to which it is addressed only. This email may contain confidential information. If you are not the person to whom this message is addressed, be aware that any use, reproduction, or distribution of this message is strictly prohibited. If you received this in error, please contact the sender and immediately delete this email and any attachments.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231218/b1202166/attachment.htm>

From even.rouault at spatialys.com  Mon Dec 18 06:05:29 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Dec 2023 15:05:29 +0100
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
Message-ID: <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>

Hi,

interesting question. No easy answer as it is highly driver dependent. I 
believe that all drivers make sure that the content of the buffer before 
and after the call is the same, but some drivers might temporarily 
modify it, to do byte swapping. For example the HFA driver does that 
when run on big-endian hosts for non-Byte data type. I wouldn't exclude 
that for formats with MSB-byte ordering, a similar situation would 
happen for little endian hosts. So it is definitely not safe to use 
WriteBlock() with a buffer that would come from a read-only section of 
the calling program. Doc updated to reflect that in 
https://github.com/OSGeo/gdal/commit/ea321723dfc69ef3a422b1e3fe4dc9ee0832861d

Even

Le 17/12/2023 ? 23:09, Fitch, Simeon via gdal-dev a ?crit?:
> The last argument to function `CPLErr GDALWriteBlock(GDALRasterBandH, 
> int, int, void*)`, pointing to the block array, is not `const`.? I 
> can't find anything in the documentation discussing ownership, etc. 
> but need to know what kind of invariants can be assumed here.
>
> Are there (driver dependent?) circumstances where `GDALWriteBlock` 
> will mutate the given array, or can callers assume it's effectively 
> `const void*`?
>
> Thanks,
>
> Simeon
>
> The content of this email is intended for the person or entity to 
> which it is addressed only. This email may contain confidential 
> information. If you are not the person to whom this message is 
> addressed, be aware that any use, reproduction, or distribution of 
> this message is strictly prohibited. If you received this in error, 
> please contact the sender and immediately delete this email and any 
> attachments.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231218/f777b58c/attachment.htm>

From andrew at aitchison.me.uk  Mon Dec 18 07:18:56 2023
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Mon, 18 Dec 2023 15:18:56 +0000 (GMT)
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
 <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>
Message-ID: <15f5b3fe-ebd0-83bf-f94c-92ead5e087f7@aitchison.me.uk>

On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:

> Hi,
>
> interesting question. No easy answer as it is highly driver dependent. I 
> believe that all drivers make sure that the content of the buffer before and 
> after the call is the same, but some drivers might temporarily modify it, to 
> do byte swapping. For example the HFA driver does that when run on big-endian 
> hosts for non-Byte data type. I wouldn't exclude that for formats with 
> MSB-byte ordering, a similar situation would happen for little endian hosts. 
> So it is definitely not safe to use WriteBlock() with a buffer that would 
> come from a read-only section of the calling program. Doc updated to reflect 
> that in 
> https://github.com/OSGeo/gdal/commit/ea321723dfc69ef3a422b1e3fe4dc9ee0832861d

Did you mean to say
   Note that even with eRWFlag==GF_Write, the content of the buffer
   might be temporarily modified during the execution of this method
   (and eventually restored back to its original content), so it is not
   safe to use a buffer stored in a read-only section of the calling
   program.

or
 	Note that even with eRWFlag==GF_Read,  ...

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From even.rouault at spatialys.com  Mon Dec 18 07:38:25 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Dec 2023 16:38:25 +0100
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <15f5b3fe-ebd0-83bf-f94c-92ead5e087f7@aitchison.me.uk>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
 <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>
 <15f5b3fe-ebd0-83bf-f94c-92ead5e087f7@aitchison.me.uk>
Message-ID: <058430ae-d191-4087-b662-d3fb1874214c@spatialys.com>


Le 18/12/2023 ? 16:18, Andrew C Aitchison via gdal-dev a ?crit?:
> On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:
>
>> Hi,
>>
>> interesting question. No easy answer as it is highly driver 
>> dependent. I believe that all drivers make sure that the content of 
>> the buffer before and after the call is the same, but some drivers 
>> might temporarily modify it, to do byte swapping. For example the HFA 
>> driver does that when run on big-endian hosts for non-Byte data type. 
>> I wouldn't exclude that for formats with MSB-byte ordering, a similar 
>> situation would happen for little endian hosts. So it is definitely 
>> not safe to use WriteBlock() with a buffer that would come from a 
>> read-only section of the calling program. Doc updated to reflect that 
>> in 
>> https://github.com/OSGeo/gdal/commit/ea321723dfc69ef3a422b1e3fe4dc9ee0832861d
>
> Did you mean to say
> ? Note that even with eRWFlag==GF_Write, the content of the buffer
> ? might be temporarily modified during the execution of this method
> ? (and eventually restored back to its original content), so it is not
> ? safe to use a buffer stored in a read-only section of the calling
> ? program.

Yes I meant that. I've less evidence in the RasterIO(GF_Write, ...) case 
than in the WriteBlock() case, but without checking all drivers, it is 
more prudent to assume that the buffer might be touched during 
RasterIO(GF_Write) by some drivers.


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From fitch at astraea.io  Mon Dec 18 11:17:02 2023
From: fitch at astraea.io (Fitch, Simeon)
Date: Mon, 18 Dec 2023 14:17:02 -0500
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <058430ae-d191-4087-b662-d3fb1874214c@spatialys.com>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
 <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>
 <15f5b3fe-ebd0-83bf-f94c-92ead5e087f7@aitchison.me.uk>
 <058430ae-d191-4087-b662-d3fb1874214c@spatialys.com>
Message-ID: <CAAsstvG8_Pkv0gJ4JmK6zy5Z_yCmsMBZoGQvth07iH5arUiFaA@mail.gmail.com>

Thanks very much for the help on this!  Greatly appreciated!



On Mon, Dec 18, 2023 at 10:38?AM Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

>
> Le 18/12/2023 ? 16:18, Andrew C Aitchison via gdal-dev a ?crit :
> > On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:
> >
> >> Hi,
> >>
> >> interesting question. No easy answer as it is highly driver
> >> dependent. I believe that all drivers make sure that the content of
> >> the buffer before and after the call is the same, but some drivers
> >> might temporarily modify it, to do byte swapping. For example the HFA
> >> driver does that when run on big-endian hosts for non-Byte data type.
> >> I wouldn't exclude that for formats with MSB-byte ordering, a similar
> >> situation would happen for little endian hosts. So it is definitely
> >> not safe to use WriteBlock() with a buffer that would come from a
> >> read-only section of the calling program. Doc updated to reflect that
> >> in
> >>
> https://github.com/OSGeo/gdal/commit/ea321723dfc69ef3a422b1e3fe4dc9ee0832861d
> >
> > Did you mean to say
> >   Note that even with eRWFlag==GF_Write, the content of the buffer
> >   might be temporarily modified during the execution of this method
> >   (and eventually restored back to its original content), so it is not
> >   safe to use a buffer stored in a read-only section of the calling
> >   program.
>
> Yes I meant that. I've less evidence in the RasterIO(GF_Write, ...) case
> than in the WriteBlock() case, but without checking all drivers, it is
> more prudent to assume that the buffer might be touched during
> RasterIO(GF_Write) by some drivers.
>
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>

-- 
The content of this email is intended for the person or entity to which it 
is addressed only. This email may contain confidential information. If you 
are not the person to whom this message is addressed, be aware that any 
use, reproduction, or distribution of this message is strictly prohibited. 
If you received this in error, please contact the sender and immediately 
delete this email and any attachments.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231218/68b6f81f/attachment-0001.htm>

From even.rouault at spatialys.com  Mon Dec 18 12:21:01 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 18 Dec 2023 21:21:01 +0100
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <e965c80b-8ee7-9f33-01dc-972b718a309f@aitchison.me.uk>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
 <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>
 <15f5b3fe-ebd0-83bf-f94c-92ead5e087f7@aitchison.me.uk>
 <058430ae-d191-4087-b662-d3fb1874214c@spatialys.com>
 <e965c80b-8ee7-9f33-01dc-972b718a309f@aitchison.me.uk>
Message-ID: <6d0fd89f-977e-4c19-81be-4a571c88e802@spatialys.com>


Le 18/12/2023 ? 21:15, Andrew C Aitchison a ?crit?:
> On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:
>
>>
>> Le 18/12/2023 ? 16:18, Andrew C Aitchison via gdal-dev a ?crit?:
>>> On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:
>>>
>>>> Hi,
>>>>
>>>> interesting question. No easy answer as it is highly driver 
>>>> dependent. I believe that all drivers make sure that the content of 
>>>> the buffer before and after the call is the same, but some drivers 
>>>> might temporarily modify it, to do byte swapping. For example the 
>>>> HFA driver does that when run on big-endian hosts for non-Byte data 
>>>> type. I wouldn't exclude that for formats with MSB-byte ordering, a 
>>>> similar situation would happen for little endian hosts. So it is 
>>>> definitely not safe to use WriteBlock() with a buffer that would 
>>>> come from a read-only section of the calling program. Doc updated 
>>>> to reflect that in 
>>>> https://github.com/OSGeo/gdal/commit/ea321723dfc69ef3a422b1e3fe4dc9ee0832861d
>>>
>>> Did you mean to say
>>> ? Note that even with eRWFlag==GF_Write, the content of the buffer
>>> ? might be temporarily modified during the execution of this method
>>> ? (and eventually restored back to its original content), so it is not
>>> ? safe to use a buffer stored in a read-only section of the calling
>>> ? program.
>>
>> Yes I meant that. I've less evidence in the RasterIO(GF_Write, ...) 
>> case than in the WriteBlock() case, but without checking all drivers, 
>> it is more prudent to assume that the buffer might be touched during 
>> RasterIO(GF_Write) by some drivers.
>
> In that case I don't understand
> ?? Note that even with eRWFlag==GF_Write...
> It suggests to me that the buffer may be modified for eRWFlag==GF_Write
> *as well as* for eRWFlag==GF_Read (which implies that it is *more* likely
> to happen for GF_Read) ?

Ah, perhaps non-idiomatic wording from mine. I struggle to make that 
clearer: if you've better wording to suggest, that's welcome

In the GF_Read case, modifying the buffer is obviously expected since it 
is then an output buffer, whereas in the GF_Write case it is a input 
buffer, and thus users could legitimately expect it to remain fully 
untouched, which isn't the case.


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From andrew at aitchison.me.uk  Mon Dec 18 12:15:12 2023
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Mon, 18 Dec 2023 20:15:12 +0000 (GMT)
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <058430ae-d191-4087-b662-d3fb1874214c@spatialys.com>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
 <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>
 <15f5b3fe-ebd0-83bf-f94c-92ead5e087f7@aitchison.me.uk>
 <058430ae-d191-4087-b662-d3fb1874214c@spatialys.com>
Message-ID: <e965c80b-8ee7-9f33-01dc-972b718a309f@aitchison.me.uk>

On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:

>
> Le 18/12/2023 ? 16:18, Andrew C Aitchison via gdal-dev a ?crit?:
>> On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:
>> 
>>> Hi,
>>> 
>>> interesting question. No easy answer as it is highly driver dependent. I 
>>> believe that all drivers make sure that the content of the buffer before 
>>> and after the call is the same, but some drivers might temporarily modify 
>>> it, to do byte swapping. For example the HFA driver does that when run on 
>>> big-endian hosts for non-Byte data type. I wouldn't exclude that for 
>>> formats with MSB-byte ordering, a similar situation would happen for 
>>> little endian hosts. So it is definitely not safe to use WriteBlock() with 
>>> a buffer that would come from a read-only section of the calling program. 
>>> Doc updated to reflect that in 
>>> https://github.com/OSGeo/gdal/commit/ea321723dfc69ef3a422b1e3fe4dc9ee0832861d
>> 
>> Did you mean to say
>> ? Note that even with eRWFlag==GF_Write, the content of the buffer
>> ? might be temporarily modified during the execution of this method
>> ? (and eventually restored back to its original content), so it is not
>> ? safe to use a buffer stored in a read-only section of the calling
>> ? program.
>
> Yes I meant that. I've less evidence in the RasterIO(GF_Write, ...) case than 
> in the WriteBlock() case, but without checking all drivers, it is more 
> prudent to assume that the buffer might be touched during RasterIO(GF_Write) 
> by some drivers.

In that case I don't understand
    Note that even with eRWFlag==GF_Write...
It suggests to me that the buffer may be modified for eRWFlag==GF_Write
*as well as* for eRWFlag==GF_Read (which implies that it is *more* likely
to happen for GF_Read) ?

Sorry to be confused.

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From tebling at masuch.de  Tue Dec 19 07:56:23 2023
From: tebling at masuch.de (Karsten Tebling)
Date: Tue, 19 Dec 2023 16:56:23 +0100
Subject: [gdal-dev] gpkg related tables extension
Message-ID: <00a2efd0-1879-4b2c-a876-6b8361a5515d@masuch.de>

Hello,

according to the docs 
(https://gdal.org/drivers/vector/gpkg.html#relationships) the geopackage 
driver is able to read, create, update and delete "relationships". I 
tried to convert some tables of a postgis database to geopackage, but 
there was no related tables extensions in the geopackage. The related 
tables extension is also not listed in the supported extensions 
(https://gdal.org/drivers/vector/gpkg.html#level-of-support-of-geopackage-extensions). 
Is it possible to convert postgis tables to a geopackage with related 
tables? If not, do you by chance know another tool which can do that?

Cheers,

Karsten


From even.rouault at spatialys.com  Tue Dec 19 08:29:58 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 19 Dec 2023 17:29:58 +0100
Subject: [gdal-dev] gpkg related tables extension
In-Reply-To: <00a2efd0-1879-4b2c-a876-6b8361a5515d@masuch.de>
References: <00a2efd0-1879-4b2c-a876-6b8361a5515d@masuch.de>
Message-ID: <19adb168-e0d6-4bc0-bf2c-400beb4cbc7c@spatialys.com>

Karsten,

Le 19/12/2023 ? 16:56, Karsten Tebling via gdal-dev a ?crit?:
> Hello,
>
> according to the docs 
> (https://gdal.org/drivers/vector/gpkg.html#relationships) the 
> geopackage driver is able to read, create, update and delete 
> "relationships". I tried to convert some tables of a postgis database 
> to geopackage, but there was no related tables extensions in the 
> geopackage. 

The driver supports the API to read & edit relationships, but ogr2ogr 
doesn't have logic to copy relationships from the source dataset to the 
target one, nor does the PostGIS implement the relationship API.

> The related tables extension is also not listed in the supported 
> extensions 
> (https://gdal.org/drivers/vector/gpkg.html#level-of-support-of-geopackage-extensions). 

Was missing in that section of the doc. Just added

> Is it possible to convert postgis tables to a geopackage with related 
> tables?

You'll have to use the relationship API to create them manually. Cf 
python testing of the GPKG driver: 
https://github.com/OSGeo/gdal/blob/master/autotest/ogr/ogr_gpkg.py#L6897

Even


-- 
http://www.spatialys.com
My software is free, but my time generally not.


From andrew at aitchison.me.uk  Wed Dec 20 02:21:48 2023
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Wed, 20 Dec 2023 10:21:48 +0000 (GMT)
Subject: [gdal-dev] Under what (if any) conditions would GDALWriteBlock
 modify data buffer?
In-Reply-To: <6d0fd89f-977e-4c19-81be-4a571c88e802@spatialys.com>
References: <CAAsstvG0Weg859GaiwZnvV1JQDNsidPhaeMBfrun3j_jaNSKkw@mail.gmail.com>
 <7e78f157-d7a0-488d-99d8-0efdd1a2c84d@spatialys.com>
 <15f5b3fe-ebd0-83bf-f94c-92ead5e087f7@aitchison.me.uk>
 <058430ae-d191-4087-b662-d3fb1874214c@spatialys.com>
 <e965c80b-8ee7-9f33-01dc-972b718a309f@aitchison.me.uk>
 <6d0fd89f-977e-4c19-81be-4a571c88e802@spatialys.com>
Message-ID: <c3bacadf-f788-ef7b-3971-c158331687ee@aitchison.me.uk>

On Mon, 18 Dec 2023, Even Rouault wrote:

>
> Le 18/12/2023 ? 21:15, Andrew C Aitchison a ?crit?:
>> On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:
>> 
>>> 
>>> Le 18/12/2023 ? 16:18, Andrew C Aitchison via gdal-dev a ?crit?:
>>>> On Mon, 18 Dec 2023, Even Rouault via gdal-dev wrote:
>>>> 
>>>>> Hi,
>>>>> 
>>>>> interesting question. No easy answer as it is highly driver dependent. I 
>>>>> believe that all drivers make sure that the content of the buffer before 
>>>>> and after the call is the same, but some drivers might temporarily 
>>>>> modify it, to do byte swapping. For example the HFA driver does that 
>>>>> when run on big-endian hosts for non-Byte data type. I wouldn't exclude 
>>>>> that for formats with MSB-byte ordering, a similar situation would 
>>>>> happen for little endian hosts. So it is definitely not safe to use 
>>>>> WriteBlock() with a buffer that would come from a read-only section of 
>>>>> the calling program. Doc updated to reflect that in 
>>>>> https://github.com/OSGeo/gdal/commit/ea321723dfc69ef3a422b1e3fe4dc9ee0832861d
>>>> 
>>>> Did you mean to say
>>>> ? Note that even with eRWFlag==GF_Write, the content of the buffer
>>>> ? might be temporarily modified during the execution of this method
>>>> ? (and eventually restored back to its original content), so it is not
>>>> ? safe to use a buffer stored in a read-only section of the calling
>>>> ? program.
>>> 
>>> Yes I meant that. I've less evidence in the RasterIO(GF_Write, ...) case 
>>> than in the WriteBlock() case, but without checking all drivers, it is 
>>> more prudent to assume that the buffer might be touched during 
>>> RasterIO(GF_Write) by some drivers.
>> 
>> In that case I don't understand
>> ?? Note that even with eRWFlag==GF_Write...
>> It suggests to me that the buffer may be modified for eRWFlag==GF_Write
>> *as well as* for eRWFlag==GF_Read (which implies that it is *more* likely
>> to happen for GF_Read) ?
>
> Ah, perhaps non-idiomatic wording from mine. I struggle to make that clearer: 
> if you've better wording to suggest, that's welcome

Ah. I had misunderstood.
I thought we were reading to or writing from *the buffer* not the raster.
The text is fine.

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From even.rouault at spatialys.com  Wed Dec 20 04:27:10 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2023 13:27:10 +0100
Subject: [gdal-dev] GDAL 3.8.2 RC1 is available, and motion to approve it
In-Reply-To: <1f897d28-3953-4722-a079-bef0765a6174@spatialys.com>
References: <1f897d28-3953-4722-a079-bef0765a6174@spatialys.com>
Message-ID: <cf071d60-7a2a-46a7-9ffe-793192efbcc9@spatialys.com>

Motion passed with +1 from PSC members JukkaR, JavierJS and me

Le 16/12/2023 ? 15:01, Even Rouault via gdal-dev a ?crit?:
> Hi,
>
> I have prepared an advanced-of-time GDAL/OGR 3.8.2 release candidate, 
> mostly
> to fix a 3.8.0 regression that has been reported lately
> (https://github.com/OSGeo/gdal/issues/8967), which caused an excessive 
> use of
> RAM when translating a VRT with many VRTComplexSource (typically used 
> when
> nodata or mask are involved), making such use cases unworkable.
>
> Pick up an archive among the following ones (by ascending size):
>
> ? https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.xz
> ? https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2rc1.tar.gz
> ? https://download.osgeo.org/gdal/3.8.2/gdal382rc1.zip
>
> A snapshot of the gdalautotest suite is also available:
>
> https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.tar.gz
> ? https://download.osgeo.org/gdal/3.8.2/gdalautotest-3.8.2rc1.zip
>
> The NEWS file is here:
>
> ? https://github.com/OSGeo/gdal/blob/v3.8.2RC1/NEWS.md
>
> Motion: adopt 3.8.2 RC1 as final 3.8.2 release
>
> Starting with my +1,
>
> Best regards,
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Wed Dec 20 04:46:32 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2023 13:46:32 +0100
Subject: [gdal-dev] GDAL 3.8.2 is released
Message-ID: <7c1a8a84-41b8-41f1-8b2b-e68de940f812@spatialys.com>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the
release of the GDAL/OGR 3.8.2 bug fix version.

Consult the release notes for the list of issues addressed:
 ??? https://github.com/OSGeo/gdal/blob/v3.8.2/NEWS.md

The sources are available at:

 ??? https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2.tar.xz
 ??? https://download.osgeo.org/gdal/3.8.2/gdal-3.8.2.tar.gz
 ??? https://download.osgeo.org/gdal/3.8.2/gdal382.zip

Best regards,

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From jan.wolski at trimble.com  Wed Dec 20 07:06:50 2023
From: jan.wolski at trimble.com (Jan Wolski)
Date: Wed, 20 Dec 2023 17:06:50 +0200
Subject: [gdal-dev] MVT tileset with limited output extent
In-Reply-To: <f04860f8-df3e-48f9-9ec4-919b5896fc45@spatialys.com>
References: <CAHFTwpHesVg71OFjrZajxstXC6G-4cEH30A=9wNLNeESeGhzkg@mail.gmail.com>
 <f04860f8-df3e-48f9-9ec4-919b5896fc45@spatialys.com>
Message-ID: <CAHFTwpFQbbdUzSYcQob0h5UyERZNm09G5mb=ujP-E_OsO5_bug@mail.gmail.com>

Thanks for the reply.

I can see how spatially filtering the input (-spat) is useful, but I don't
want to clip the geometries (other than clipping by tile edges that MVT
driver does by default). What I'm after is spatial filtering of the output
tiles based on each tile extent.

So to further clarify, I could do the translation using -spat <ROI> and
then iterate over all of the generated MVT files and delete the ones whose
tile extent does not intersect with <ROI>. But that would waste resources
in a big way.

Thanks,
Jan Wolski

On Tue, Dec 5, 2023 at 4:05?PM Even Rouault <even.rouault at spatialys.com>
wrote:

> You can use the -spat + (-clipsrc or -clipdst) switches of ogr2ogr
> Le 05/12/2023 ? 14:57, Jan Wolski via gdal-dev a ?crit :
>
> Hi,
>
> I'm creating MVT tilesets for the ETRS-TM35FIN tiling scheme using
> GDAL/OGR. I'm prototyping with ogr2ogr but later I will be using Python
> bindings to create the production workflow.
>
> Is there a way to limit the geographic extent of where the MVT driver
> creates tiles? By default it seems to create all tiles that intersect any
> input feature. I would like to create only tiles that intersect a given
> extent. This is to enable partial update of a MVT tileset.
>
> This is the ogr2ogr command I have now:
>
> ogr2ogr -f MVT stand MV_R5232B.gpkg stand -dsco "MAXZOOM=11" -dsco
> "MINZOOM=8" -dsco "TILE_EXTENSION=mvt" -dsco
> "TILING_SCHEME=EPSG:3067,-548576,8388608,2097152" -dsco "TYPE=overlay"
> -dsco "COMPRESS=NO"
>
>
> Thanks,
> Jan Wolski
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/369fef6d/attachment.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Dec 20 07:17:16 2023
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Wed, 20 Dec 2023 15:17:16 +0000
Subject: [gdal-dev] MVT tileset with limited output extent
In-Reply-To: <CAHFTwpFQbbdUzSYcQob0h5UyERZNm09G5mb=ujP-E_OsO5_bug@mail.gmail.com>
References: <CAHFTwpHesVg71OFjrZajxstXC6G-4cEH30A=9wNLNeESeGhzkg@mail.gmail.com>
 <f04860f8-df3e-48f9-9ec4-919b5896fc45@spatialys.com>
 <CAHFTwpFQbbdUzSYcQob0h5UyERZNm09G5mb=ujP-E_OsO5_bug@mail.gmail.com>
Message-ID: <AM0PR09MB321977FDA33C542F3503E76EFD96A@AM0PR09MB3219.eurprd09.prod.outlook.com>

Hi,

Have you tried -sql? Like -sql ?select * from table where st_intersects(geom,reference_geom)?.

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Jan Wolski via gdal-dev
L?hetetty: keskiviikko 20. joulukuuta 2023 17.07
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: Re: [gdal-dev] MVT tileset with limited output extent

Thanks for the reply.

I can see how spatially filtering the input (-spat) is useful, but I don't want to clip the geometries (other than clipping by tile edges that MVT driver does by default). What I'm after is spatial filtering of the output tiles based on each tile extent.

So to further clarify, I could do the translation using -spat <ROI> and then iterate over all of the generated MVT files and delete the ones whose tile extent does not intersect with <ROI>. But that would waste resources in a big way.

Thanks,
Jan Wolski

On Tue, Dec 5, 2023 at 4:05?PM Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> wrote:

You can use the -spat + (-clipsrc or -clipdst) switches of ogr2ogr
Le 05/12/2023 ? 14:57, Jan Wolski via gdal-dev a ?crit :
Hi,

I'm creating MVT tilesets for the ETRS-TM35FIN tiling scheme using GDAL/OGR. I'm prototyping with ogr2ogr but later I will be using Python bindings to create the production workflow.

Is there a way to limit the geographic extent of where the MVT driver creates tiles? By default it seems to create all tiles that intersect any input feature. I would like to create only tiles that intersect a given extent. This is to enable partial update of a MVT tileset.

This is the ogr2ogr command I have now:

ogr2ogr -f MVT stand MV_R5232B.gpkg stand -dsco "MAXZOOM=11" -dsco "MINZOOM=8" -dsco "TILE_EXTENSION=mvt" -dsco "TILING_SCHEME=EPSG:3067,-548576,8388608,2097152" -dsco "TYPE=overlay" -dsco "COMPRESS=NO"


Thanks,
Jan Wolski


_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com<http://www.spatialys.com/>

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/a35e578a/attachment-0001.htm>

From even.rouault at spatialys.com  Wed Dec 20 10:15:09 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2023 19:15:09 +0100
Subject: [gdal-dev] shapelib 1.6.0RC1 available
Message-ID: <21d35b98-1611-47af-ad6a-769813b0734b@spatialys.com>

Hi,

it has been more than 3 years since shapelib v1.5.0 has been released. 
Here's a v1.6.0 release candidate:

- http://download.osgeo.org/shapelib/shapelib-1.6.0rc1.tar.gz

- http://download.osgeo.org/shapelib/shapelib-1.6.0rc1.zip

Changes:

 ?* shapefil.h: add SHAPELIB_VERSION_MAJOR/MINOR/MICRO, 
SHAPELIB_VERSION_NUMBER, and SHAPELIB_AT_LEAST macros
 ?* Compiler warning fixes and various code cleanups
 ?* SAHooks: add a void *pvUserData member. ABI change
 ?* SAHooks.FOpen and FClose callbacks: add a void *pvUserData 
parameter. API and ABI change
 ?* SAHooks.FWrite: make first parameter a const void*. API change
 ?* Do not distribute default COPYING and INSTALL
 ?* Use standard integer data types
 ?* Changes to allow building with cmake -DCMAKE_UNITY_BUILD=ON
 ?* Polygon writing: avoid considering rings slightly overlapping as 
inner-outer rings of others (refs OSGeo/gdal#5315)
 ?* Polygon writing: consider rings at non-constant Z as outer rings 
(fixes OSGeo/gdal#5315)
 ?? As noted in code comments, this is an approximation of more complicated
 ?? tests we'd likely have to do, that would take into account real
 ?? co-planar testing, to allow detecting inner rings of outer rings in an
 ?? oblique plane.
 ?* shpopen.c: Communicate why the file size cannot be reached when 
appending features (OSGeo/gdal#4140)
 ?? Clearly state why the file size cannot be reached. This is important 
in order
 ?? to correctly inform the user and prevent him/her from looking for 
other reasons.
 ?? Related to https://github.com/qgis/QGIS/issues/44202
 ?* SHPWriteObject(): prevent potential overflows on 64-bit platforms on 
huge geometries
 ?* SHPRestoreSHX: update SHX content length even if error occurred
 ?* In creation, uses w+b file opening mode instead of wb followed by r+b,
 ?? to support network file systems having sequential write only and when
 ?? using CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES (fixes 
OSGeo/gdal#7801)
 ?* Fix adding features in a .dbf without columns (fixes qgis/qgis#51247)
 ?* Have matching SOVERSION for CMake and autotools
 ?* Code reformatting
 ?* Enable csv2shp build with MSVC
 ?* Build contributed utilities via CMake
 ?* fix mis-matching CMake arguments
 ?* Use the the standard BUILD_TESTING CMake variable
 ?* Remove double free() in contrib/shpsrt, issue #39
 ?* SHPRestoreSHX: fix for (64 bit) big endian
 ?* Add config-style support for find_package(shapefile)
 ?* Prevent no-op FSeeks writing dbf & shp records for network 
filesystem performance

Note that there's a small API and ABI breakage (hence a SONAME bump) in 
custom file callbacks, but I don't believe those API are widely used, so 
disruption should be modest hopefully.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Wed Dec 20 10:33:27 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2023 19:33:27 +0100
Subject: [gdal-dev] Virtual Raster Tile Index (VRTTI) driver,
 and associated gdaltindex improvements
Message-ID: <abdbd4f2-38d7-45c5-9f79-a72c0fbfddcb@spatialys.com>

Hi,

For those not actively following github tickets & PR, I just want to 
point to a new pending major functionality to improve management of 
virtual mosaics with a very large number of tiles/sources (> tens of 
thousands of tiles), by referencing them as features of a vector layer 
(typically created by gdaltindex), instead of a XML file as in 
traditional VRT, augmented with additional metadata.

More details in https://github.com/OSGeo/gdal/pull/8983 (and in initial 
ticket in https://github.com/OSGeo/gdal/issues/8861)

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From a.pau at creaf.uab.cat  Wed Dec 20 11:58:28 2023
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 20 Dec 2023 19:58:28 +0000
Subject: [gdal-dev] How to assign a new eType to a feature
Message-ID: <PAXPR07MB77751F0B4F233D2F29A4DB9EA296A@PAXPR07MB7775.eurprd07.prod.outlook.com>

HI,
In the GetNewtRawFeature() I am processing all fields and a previusly OFTString type field has to be changed into OFTStringList type. After that, It'll be probably a OFTString again.

I try to do that:
poFeature->GetDefnRef()->GetFieldDefn(nIField)->SetType(OFTStringList);

And when the destination driver gets it, the OFTStringList is again OFTString. I've lost the property by magic.

The line that does that is poDstFeature->SetFDefnUnsafe(poDstFDefn); in Translate() line5746 (probably).

So, there is a good way to change the type I've assigned in the constructor by the same but a "List" instead in the GetNextRawFeature()?

Sorry for asking a question (again) but I've been a long time trying to figure out what happens!

Thanks!

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/b99fe3a7/attachment-0003.jpg>

From even.rouault at spatialys.com  Wed Dec 20 12:05:38 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 20 Dec 2023 21:05:38 +0100
Subject: [gdal-dev] How to assign a new eType to a feature
In-Reply-To: <PAXPR07MB77751F0B4F233D2F29A4DB9EA296A@PAXPR07MB7775.eurprd07.prod.outlook.com>
References: <PAXPR07MB77751F0B4F233D2F29A4DB9EA296A@PAXPR07MB7775.eurprd07.prod.outlook.com>
Message-ID: <568ce0b0-9a8c-4e0e-96e7-580ad332c5ad@spatialys.com>

Abel,

You should not change the type of field types (or the number of fields) 
once GetLayerDefn() has been called on the layer, after which the layer 
definition must be considered as sealed (cf recent RFC 
https://gdal.org/development/rfc/rfc97_feature_and_fielddefn_sealing.html), 
until potential calls from the user to CreateField()/DeleteField()/etc. 
which might unseal it. Changing field types during feature iteration 
would break expectations from users of the GDAL API (included GDAL tools 
such as ogr2ogr) and could cause nasty crashing bugs.

If you don't have a way to figure out the field type by looking at the 
header of your dataset, then you need to do a first reading pass to 
establish it (like done for example in the GeoJSON driver)

Even

Le 20/12/2023 ? 20:58, Abel Pau via gdal-dev a ?crit?:
>
> HI,
>
> In the GetNewtRawFeature() I am processing all fields and a previusly 
> OFTString type field has to be changed into OFTStringList type. After 
> that, It?ll be probably a OFTString again.
>
> I try to do that:
>
> poFeature->GetDefnRef()->GetFieldDefn(nIField)->SetType(OFTStringList);
>
> And when the destination driver gets it, the OFTStringList is again 
> OFTString. I?ve lost the property by magic.
>
> The line that does that is poDstFeature->SetFDefnUnsafe(poDstFDefn); 
> in Translate() line5746 (probably).
>
> So, there is a good way to change the type I?ve assigned in the 
> constructor by the same but a ?List? instead in the GetNextRawFeature()?
>
> Sorry for asking a question (again) but I?ve been a long time trying 
> to figure out what happens!
>
> Thanks!
>
> *Abel Pau Garcia*
>
> *GIS developer*
>
> 	
>
> https://www.creaf.cat/sites/default/files/creaf-signature.png
>
> *a.pau at creaf.uab.cat* <mailto:a.pau at creaf.uab.cat>
>
> *Let's chat on Teams!* 
> <https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
>
> *Tel. +34 934814277*
>
> 	
>
> https://www.creaf.cat/sites/default/files/so-en-signature.png
>
> https://www.creaf.cat/sites/default/files/twitter-icon-signature.png 
> <https://twitter.com/CREAF_ecologia>https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png 
> <https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>https://www.creaf.cat/sites/default/files/youtube-icon-signature.png 
> <https://www.youtube.com/c/creafecologia>https://www.creaf.cat/sites/default/files/instagram-icon-signature.png 
> <https://www.instagram.com/CREAF_ecologia/>
>
> *www.creaf.cat* <http://www.creaf.cat>*| **http://blog.creaf.cat* 
> <http://blog.creaf.cat>
>
> 	
>
> https://www.creaf.cat/sites/default/files/uab_logo_signatura.png
>
> CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)
>
>
> Before printing this electronic message, think about the environment.
>
> http://www.creaf.uab.cat/_signatura/line.gif
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/e920137d/attachment-0003.jpg>

From a.pau at creaf.uab.cat  Wed Dec 20 12:50:23 2023
From: a.pau at creaf.uab.cat (Abel Pau)
Date: Wed, 20 Dec 2023 20:50:23 +0000
Subject: [gdal-dev] How to assign a new eType to a feature
In-Reply-To: <568ce0b0-9a8c-4e0e-96e7-580ad332c5ad@spatialys.com>
References: <PAXPR07MB77751F0B4F233D2F29A4DB9EA296A@PAXPR07MB7775.eurprd07.prod.outlook.com>
 <568ce0b0-9a8c-4e0e-96e7-580ad332c5ad@spatialys.com>
Message-ID: <PAXPR07MB7775E61D5ABD3F8AFC470470A296A@PAXPR07MB7775.eurprd07.prod.outlook.com>

Even,
thanks for the answer.

I saw it recently in the list but I didn?t relate with that!
Thanks. I understand! I think it?s a good idea have al sealed before. And as you can remember I would seal the number of features also :p

Thanks :)

De: Even Rouault <even.rouault at spatialys.com>
Enviado el: dimecres, 20 de desembre de 2023 21:06
Para: Abel Pau <a.pau at creaf.uab.cat>; gdal-dev at lists.osgeo.org
Asunto: Re: [gdal-dev] How to assign a new eType to a feature


Abel,

You should not change the type of field types (or the number of fields) once GetLayerDefn() has been called on the layer, after which the layer definition must be considered as sealed (cf recent RFC https://gdal.org/development/rfc/rfc97_feature_and_fielddefn_sealing.html), until potential calls from the user to CreateField()/DeleteField()/etc. which might unseal it. Changing field types during feature iteration would break expectations from users of the GDAL API (included GDAL tools such as ogr2ogr) and could cause nasty crashing bugs.

If you don't have a way to figure out the field type by looking at the header of your dataset, then you need to do a first reading pass to establish it (like done for example in the GeoJSON driver)

Even
Le 20/12/2023 ? 20:58, Abel Pau via gdal-dev a ?crit :
HI,
In the GetNewtRawFeature() I am processing all fields and a previusly OFTString type field has to be changed into OFTStringList type. After that, It?ll be probably a OFTString again.

I try to do that:
poFeature->GetDefnRef()->GetFieldDefn(nIField)->SetType(OFTStringList);

And when the destination driver gets it, the OFTStringList is again OFTString. I?ve lost the property by magic.

The line that does that is poDstFeature->SetFDefnUnsafe(poDstFDefn); in Translate() line5746 (probably).

So, there is a good way to change the type I?ve assigned in the constructor by the same but a ?List? instead in the GetNextRawFeature()?

Sorry for asking a question (again) but I?ve been a long time trying to figure out what happens!

Thanks!

Abel Pau Garcia
GIS developer
[https://www.creaf.cat/sites/default/files/creaf-signature.png]
a.pau at creaf.uab.cat<mailto:a.pau at creaf.uab.cat>
Let's chat on Teams!<https://teams.microsoft.com/l/chat/0/0?users=a.pau at creaf.uab.cat>
Tel. +34 934814277
[https://www.creaf.cat/sites/default/files/so-en-signature.png]
[https://www.creaf.cat/sites/default/files/twitter-icon-signature.png]<https://twitter.com/CREAF_ecologia>[https://www.creaf.cat/sites/default/files/linkedin-icon-signature.png]<https://www.linkedin.com/company/1363052?trk=tyah&trkInfo=clickedVertical:company,clickedEntityId:1363052,idx:2-1-2,tarId:1465807877789,tas:creaf>[https://www.creaf.cat/sites/default/files/youtube-icon-signature.png]<https://www.youtube.com/c/creafecologia>[https://www.creaf.cat/sites/default/files/instagram-icon-signature.png]<https://www.instagram.com/CREAF_ecologia/>
www.creaf.cat<http://www.creaf.cat> | http://blog.creaf.cat
[https://www.creaf.cat/sites/default/files/uab_logo_signatura.png]
CREAF. Campus UAB. Edifici C. 08193 Bellaterra (Barcelona)

Before printing this electronic message, think about the environment.






_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

https://lists.osgeo.org/mailman/listinfo/gdal-dev

--

http://www.spatialys.com

My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 3657 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0006.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 2547 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0007.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image003.png
Type: image/png
Size: 505 bytes
Desc: image003.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0008.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image004.png
Type: image/png
Size: 446 bytes
Desc: image004.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0009.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image005.png
Type: image/png
Size: 553 bytes
Desc: image005.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0010.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image006.png
Type: image/png
Size: 582 bytes
Desc: image006.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0011.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image007.jpg
Type: image/jpeg
Size: 2208 bytes
Desc: image007.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0002.jpg>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image008.jpg
Type: image/jpeg
Size: 1111 bytes
Desc: image008.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231220/7f946545/attachment-0003.jpg>

From andrew at aitchison.me.uk  Thu Dec 21 04:55:06 2023
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 21 Dec 2023 12:55:06 +0000 (GMT)
Subject: [gdal-dev] Virtual Raster Tile Index (VRTTI) driver,
 and associated gdaltindex improvements
In-Reply-To: <abdbd4f2-38d7-45c5-9f79-a72c0fbfddcb@spatialys.com>
References: <abdbd4f2-38d7-45c5-9f79-a72c0fbfddcb@spatialys.com>
Message-ID: <49682c0a-4f10-e3af-e71c-078d4e996c7f@aitchison.me.uk>

On Wed, 20 Dec 2023, Even Rouault via gdal-dev wrote:

> Hi,
>
> For those not actively following github tickets & PR, I just 
> want to point to a new pending major functionality to improve 
> management of virtual mosaics with a very large number of 
> tiles/sources (> tens of thousands of tiles), by referencing 
> them as features of a vector layer (typically created by 
> gdaltindex), instead of a XML file as in traditional VRT, 
> augmented with additional metadata.
>
> More details in https://github.com/OSGeo/gdal/pull/8983 (and in 
> initial ticket in https://github.com/OSGeo/gdal/issues/8861)

Am I right in thinking that all the tiles must have the same
bit-depth and colour interpretation and for paletted tiles
the same colour table ?

I am aware of a vendor whose products had different colour tables,
and even different bit-depths, for each tile - a sort of adaptive
compression.

-- 
Andrew C. Aitchison                      Kendal, UK
                    andrew at aitchison.me.uk

From lnicola at dend.ro  Thu Dec 21 05:07:19 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Thu, 21 Dec 2023 15:07:19 +0200
Subject: [gdal-dev] Any difference between VRT SimpleSource and no-op
 ComplexSource?
Message-ID: <0d6f3b21-ed82-4883-84e0-6bf2e6d31aab@betaapp.fastmail.com>

Hello,

I noticed that gdalbuildvrt with no options produces VRTs that use ComplexSource, when SimpleSource would be sufficient. Is there any meaningful performance difference between the two? I know I should measure myself, I just didn't get to try it yet.

Thanks,
Laurentiu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231221/50b572a9/attachment.htm>

From even.rouault at spatialys.com  Thu Dec 21 05:51:24 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Dec 2023 14:51:24 +0100
Subject: [gdal-dev] Any difference between VRT SimpleSource and no-op
 ComplexSource?
In-Reply-To: <0d6f3b21-ed82-4883-84e0-6bf2e6d31aab@betaapp.fastmail.com>
References: <0d6f3b21-ed82-4883-84e0-6bf2e6d31aab@betaapp.fastmail.com>
Message-ID: <f637dcf7-ed3d-4d85-b6d2-1b4ad393c95f@spatialys.com>

Lauren?iu,

>
> I noticed that gdalbuildvrt with no options produces VRTs that use 
> ComplexSource, when SimpleSource would be sufficient. Is there any 
> meaningful performance difference between the two? I know I should 
> measure myself, I just didn't get to try it yet.

It only uses a ComplexSource when it needs to, that is to say when there 
is nodata or a mask band. Otherwise it will use SimpleSource. There is a 
performance hit in using ComplexSource when it is not needed. In 3.8, 
there has been an optimization to improve ComplexSource performance in 
common nodata-only scenarios: cf 
https://github.com/OSGeo/gdal/commit/cd67491d3909f5f05160fa209609b38d973c42de

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231221/e2a20201/attachment.htm>

From lnicola at dend.ro  Thu Dec 21 06:09:07 2023
From: lnicola at dend.ro (=?UTF-8?Q?Lauren=C8=9Biu_Nicola?=)
Date: Thu, 21 Dec 2023 16:09:07 +0200
Subject: [gdal-dev] Any difference between VRT SimpleSource and no-op
 ComplexSource?
In-Reply-To: <f637dcf7-ed3d-4d85-b6d2-1b4ad393c95f@spatialys.com>
References: <0d6f3b21-ed82-4883-84e0-6bf2e6d31aab@betaapp.fastmail.com>
 <f637dcf7-ed3d-4d85-b6d2-1b4ad393c95f@spatialys.com>
Message-ID: <73f894b6-d7e3-42ef-9c2f-936682bf6451@betaapp.fastmail.com>

On Thu, Dec 21, 2023, at 15:51, Even Rouault wrote:
> It only uses a ComplexSource when it needs to, that is to say when there is nodata or a mask band.
> 
I didn't realize this. I think I'm hitting a corner case with -separate, which is practically the only way I've ever used it:

$ gdalbuildvrt test.vrt T35TMK_20230520T090559_B02_10m.jp2 && cat test.vrt 
0...10...20...30...40...50...60...70...80...90...100 - done.
<VRTDataset rasterXSize="10980" rasterYSize="10980">
  <SRS dataAxisToSRSAxisMapping="1,2">PROJCS["WGS 84 / UTM zone 35N",GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",27],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH],AUTHORITY["EPSG","32635"]]</SRS>
  <GeoTransform>  3.9996000000000000e+05,  1.0000000000000000e+01,  0.0000000000000000e+00,  5.0000400000000000e+06,  0.0000000000000000e+00, -1.0000000000000000e+01</GeoTransform>
  <VRTRasterBand dataType="UInt16" band="1">
    <ColorInterp>Gray</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">T35TMK_20230520T090559_B02_10m.jp2</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="10980" RasterYSize="10980" DataType="UInt16" BlockXSize="1024" BlockYSize="1024" />
      <SrcRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
      <DstRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
    </SimpleSource>
  </VRTRasterBand>
  <OverviewList resampling="nearest">2 4 8 16</OverviewList>
</VRTDataset>

$ gdalbuildvrt -separate test.vrt T35TMK_20230520T090559_B02_10m.jp2 && cat test.vrt
0...10...20...30...40...50...60...70...80...90...100 - done.
<VRTDataset rasterXSize="10980" rasterYSize="10980">
  <SRS dataAxisToSRSAxisMapping="1,2">PROJCS["WGS 84 / UTM zone 35N",GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",27],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH],AUTHORITY["EPSG","32635"]]</SRS>
  <GeoTransform>  3.9996000000000000e+05,  1.0000000000000000e+01,  0.0000000000000000e+00,  5.0000400000000000e+06,  0.0000000000000000e+00, -1.0000000000000000e+01</GeoTransform>
  <VRTRasterBand dataType="UInt16" band="1">
    <ComplexSource>
      <SourceFilename relativeToVRT="1">T35TMK_20230520T090559_B02_10m.jp2</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="10980" RasterYSize="10980" DataType="UInt16" BlockXSize="1024" BlockYSize="1024" />
      <SrcRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
      <DstRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
    </ComplexSource>
  </VRTRasterBand>
</VRTDataset>

> Otherwise it will use SimpleSource. There is a performance hit in using ComplexSource when it is not needed. In 3.8, there has been an optimization to improve ComplexSource performance in common nodata-only scenarios: cf https://github.com/OSGeo/gdal/commit/cd67491d3909f5f05160fa209609b38d973c42de
Oh, that's great!

PS: are there good reasons for not allowing -separate for multi-band inputs (by including all bands) or propagating the input block size if it's the same for all of them?

Laurentiu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231221/2964c44c/attachment-0001.htm>

From jukka.rahkonen at maanmittauslaitos.fi  Thu Dec 21 06:18:15 2023
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka)
Date: Thu, 21 Dec 2023 14:18:15 +0000
Subject: [gdal-dev] Any difference between VRT SimpleSource and no-op
 ComplexSource?
In-Reply-To: <73f894b6-d7e3-42ef-9c2f-936682bf6451@betaapp.fastmail.com>
References: <0d6f3b21-ed82-4883-84e0-6bf2e6d31aab@betaapp.fastmail.com>
 <f637dcf7-ed3d-4d85-b6d2-1b4ad393c95f@spatialys.com>
 <73f894b6-d7e3-42ef-9c2f-936682bf6451@betaapp.fastmail.com>
Message-ID: <AM0PR09MB3219BCFE65D118AB5DB07F95FD95A@AM0PR09MB3219.eurprd09.prod.outlook.com>

Hi,

About -separate and multi-band inputs, see https://gdal.org/programs/gdalbuildvrt.html#cmdoption-gdalbuildvrt-separate

?Starting with GDAL 3.8, all bands of each input file are added as separate VRT bands, unless -b is specified to select a subset of them. Before GDAL 3.8, only the first band of each input file was placed into a new VRT band, and -b was ignored.?

-Jukka Rahkonen-

L?hett?j?: gdal-dev <gdal-dev-bounces at lists.osgeo.org> Puolesta Lauren?iu Nicola via gdal-dev
L?hetetty: torstai 21. joulukuuta 2023 16.09
Vastaanottaja: gdal-dev at lists.osgeo.org
Aihe: Re: [gdal-dev] Any difference between VRT SimpleSource and no-op ComplexSource?

On Thu, Dec 21, 2023, at 15:51, Even Rouault wrote:

It only uses a ComplexSource when it needs to, that is to say when there is nodata or a mask band.
I didn't realize this. I think I'm hitting a corner case with -separate, which is practically the only way I've ever used it:

$ gdalbuildvrt test.vrt T35TMK_20230520T090559_B02_10m.jp2 && cat test.vrt
0...10...20...30...40...50...60...70...80...90...100 - done.
<VRTDataset rasterXSize="10980" rasterYSize="10980">
  <SRS dataAxisToSRSAxisMapping="1,2">PROJCS["WGS 84 / UTM zone 35N",GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",27],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH],AUTHORITY["EPSG","32635"]]</SRS>
  <GeoTransform>  3.9996000000000000e+05,  1.0000000000000000e+01,  0.0000000000000000e+00,  5.0000400000000000e+06,  0.0000000000000000e+00, -1.0000000000000000e+01</GeoTransform>
  <VRTRasterBand dataType="UInt16" band="1">
    <ColorInterp>Gray</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">T35TMK_20230520T090559_B02_10m.jp2</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="10980" RasterYSize="10980" DataType="UInt16" BlockXSize="1024" BlockYSize="1024" />
      <SrcRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
      <DstRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
    </SimpleSource>
  </VRTRasterBand>
  <OverviewList resampling="nearest">2 4 8 16</OverviewList>
</VRTDataset>

$ gdalbuildvrt -separate test.vrt T35TMK_20230520T090559_B02_10m.jp2 && cat test.vrt
0...10...20...30...40...50...60...70...80...90...100 - done.
<VRTDataset rasterXSize="10980" rasterYSize="10980">
  <SRS dataAxisToSRSAxisMapping="1,2">PROJCS["WGS 84 / UTM zone 35N",GEOGCS["WGS 84",DATUM["WGS_1984",SPHEROID["WGS 84",6378137,298.257223563,AUTHORITY["EPSG","7030"]],AUTHORITY["EPSG","6326"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4326"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",27],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AXIS["Easting",EAST],AXIS["Northing",NORTH],AUTHORITY["EPSG","32635"]]</SRS>
  <GeoTransform>  3.9996000000000000e+05,  1.0000000000000000e+01,  0.0000000000000000e+00,  5.0000400000000000e+06,  0.0000000000000000e+00, -1.0000000000000000e+01</GeoTransform>
  <VRTRasterBand dataType="UInt16" band="1">
    <ComplexSource>
      <SourceFilename relativeToVRT="1">T35TMK_20230520T090559_B02_10m.jp2</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="10980" RasterYSize="10980" DataType="UInt16" BlockXSize="1024" BlockYSize="1024" />
      <SrcRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
      <DstRect xOff="0" yOff="0" xSize="10980" ySize="10980" />
    </ComplexSource>
  </VRTRasterBand>
</VRTDataset>

Otherwise it will use SimpleSource. There is a performance hit in using ComplexSource when it is not needed. In 3.8, there has been an optimization to improve ComplexSource performance in common nodata-only scenarios: cf https://github.com/OSGeo/gdal/commit/cd67491d3909f5f05160fa209609b38d973c42de
Oh, that's great!

PS: are there good reasons for not allowing -separate for multi-band inputs (by including all bands) or propagating the input block size if it's the same for all of them?

Laurentiu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231221/cc930053/attachment-0001.htm>

From even.rouault at spatialys.com  Thu Dec 21 06:23:25 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Dec 2023 15:23:25 +0100
Subject: [gdal-dev] Virtual Raster Tile Index (VRTTI) driver,
 and associated gdaltindex improvements
In-Reply-To: <49682c0a-4f10-e3af-e71c-078d4e996c7f@aitchison.me.uk>
References: <abdbd4f2-38d7-45c5-9f79-a72c0fbfddcb@spatialys.com>
 <49682c0a-4f10-e3af-e71c-078d4e996c7f@aitchison.me.uk>
Message-ID: <0d625398-49e1-4460-b7b9-bcd650559b8b@spatialys.com>

Andrew,

Le 21/12/2023 ? 13:55, Andrew C Aitchison via gdal-dev a ?crit?:
> On Wed, 20 Dec 2023, Even Rouault via gdal-dev wrote:
>
>> Hi,
>>
>> For those not actively following github tickets & PR, I just want to 
>> point to a new pending major functionality to improve management of 
>> virtual mosaics with a very large number of tiles/sources (> tens of 
>> thousands of tiles), by referencing them as features of a vector 
>> layer (typically created by gdaltindex), instead of a XML file as in 
>> traditional VRT, augmented with additional metadata.
>>
>> More details in https://github.com/OSGeo/gdal/pull/8983 (and in 
>> initial ticket in https://github.com/OSGeo/gdal/issues/8861)
>
> Am I right in thinking that all the tiles must have the same
> bit-depth and colour interpretation

Yes. If different bit-depth and rescaling is wished, you'll have to 
manually use for example 
"vrt://the.tif?scale=src_min,src_max,dst_min,dst_max" as the source 
name. Cf https://gdal.org/drivers/raster/vrt.html#vrt-connection-string

If bands are ordered differently, similarly use things like 
"vrt://the.tif?bands=3,2,1" to reorder them in a uniform way.

> and for paletted tiles
> the same colour table ?

I've just added support for automatically expanding color tables to 
RGB(A) if the BAND_COUNT metadata item is set to 3 or 4.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From even.rouault at spatialys.com  Thu Dec 21 06:27:10 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Dec 2023 15:27:10 +0100
Subject: [gdal-dev] Any difference between VRT SimpleSource and no-op
 ComplexSource?
In-Reply-To: <73f894b6-d7e3-42ef-9c2f-936682bf6451@betaapp.fastmail.com>
References: <0d6f3b21-ed82-4883-84e0-6bf2e6d31aab@betaapp.fastmail.com>
 <f637dcf7-ed3d-4d85-b6d2-1b4ad393c95f@spatialys.com>
 <73f894b6-d7e3-42ef-9c2f-936682bf6451@betaapp.fastmail.com>
Message-ID: <c73e443b-d294-445d-b1b1-ad82f8e5d343@spatialys.com>


> On Thu, Dec 21, 2023, at 15:51, Even Rouault wrote:
>>
>> It only uses a ComplexSource when it needs to, that is to say when 
>> there is nodata or a mask band.
>>
> I didn't realize this. I think I'm hitting a corner case with 
> -separate, which is practically the only way I've ever used it:

Ah, indeed, I now see the issue in that mode. Fixed per 
https://github.com/OSGeo/gdal/pull/8986

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231221/e1239165/attachment.htm>

From sean.gillies at gmail.com  Thu Dec 21 09:13:51 2023
From: sean.gillies at gmail.com (Sean Gillies)
Date: Thu, 21 Dec 2023 10:13:51 -0700
Subject: [gdal-dev] Virtual Raster Tile Index (VRTTI) driver,
 and associated gdaltindex improvements
In-Reply-To: <abdbd4f2-38d7-45c5-9f79-a72c0fbfddcb@spatialys.com>
References: <abdbd4f2-38d7-45c5-9f79-a72c0fbfddcb@spatialys.com>
Message-ID: <CAOodmJo2LKzczDiVfwjkp9WmDa+Yt0vur4a5Suc7-NR4mBJ+DQ@mail.gmail.com>

Hi Even,

I'm wondering how this relates to STAC. Do you imagine that GDAL users
should and will use this to publish large collections of data? When should
they use this and when should they use STAC collections instead?

Back in the day our tile indexes were shapefiles. I don't think this would
be a good practice now. Would all vector formats be supported? How about
column-oriented formats? How backwards compatible will this be with
existing tile index files? Can I just do a gdalinfo "XXXX:example.shp" on a
MapServer tile index?

This feature has been latent and available for a while, yes? It's obviously
useful. My main misgivings are about the overlap with existing GDAL
features and protocols (VRT, WMS, WMTS, STAC, MBTiles). I think too many
choices can create a not great experience for users.

On Wed, Dec 20, 2023, 11:33?AM Even Rouault via gdal-dev <
gdal-dev at lists.osgeo.org> wrote:

> Hi,
>
> For those not actively following github tickets & PR, I just want to
> point to a new pending major functionality to improve management of
> virtual mosaics with a very large number of tiles/sources (> tens of
> thousands of tiles), by referencing them as features of a vector layer
> (typically created by gdaltindex), instead of a XML file as in
> traditional VRT, augmented with additional metadata.
>
> More details in https://github.com/OSGeo/gdal/pull/8983 (and in initial
> ticket in https://github.com/OSGeo/gdal/issues/8861)
>
> Even
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231221/d8900998/attachment.htm>

From even.rouault at spatialys.com  Thu Dec 21 09:40:26 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 21 Dec 2023 18:40:26 +0100
Subject: [gdal-dev] Virtual Raster Tile Index (VRTTI) driver,
 and associated gdaltindex improvements
In-Reply-To: <CAOodmJo2LKzczDiVfwjkp9WmDa+Yt0vur4a5Suc7-NR4mBJ+DQ@mail.gmail.com>
References: <abdbd4f2-38d7-45c5-9f79-a72c0fbfddcb@spatialys.com>
 <CAOodmJo2LKzczDiVfwjkp9WmDa+Yt0vur4a5Suc7-NR4mBJ+DQ@mail.gmail.com>
Message-ID: <541670ee-9bd0-4340-ba3d-0f2610ea7349@spatialys.com>

Sean,
>
> I'm wondering how this relates to STAC. Do you imagine that GDAL users 
> should and will use this to publish large collections of data? When 
> should they use this and when should they use STAC collections instead?
I don't imagine this for publishing (that is not publishing the VRRTI 
tile index itself), but more for internal use in the software stack of 
users with large image collections. Similarly to good-ol' XML VRT.
>
> Back in the day our tile indexes were shapefiles. I don't think this 
> would be a good practice now. Would all vector formats be supported?
yes, in theory. But as documented, it is strongly recommended to use 
vector formats with efficient spatial filtering like GeoPackage, 
FlatGeoBuf, PostGIS. Those 3 ones in particular have been enhanced to 
support setting the metadata items used by VRTTI driver. So you don't 
necessarily need to create a XML VRTTI wrapper file for those.
> How about column-oriented formats?
that should work with them too. The fact that they are column-oriented 
is just an implementation detail. That said, until GeoParquet gets 
efficient spatial filtering (in the works at the spec level: 
https://github.com/opengeospatial/geoparquet/pull/191), this isn't yet a 
good choice (as a provision the VRTTI driver actually already supports 
.vrt.parquet)
> ?Can I just do a gdalinfo "XXXX:example.shp" on a MapServer tile index?
Yes. However, given that the metadata items suggested by VRTTI will not 
be available, this will require the driver to GDALOpen() one of the tile 
to figure out the number of bands, data type, etc. at opening time. Not 
a big deal however if the VRTTI dataset is opened for a long time to 
satisfy many requests.
>
> This feature has been latent and available for a while, yes? It's 
> obviously useful. My main misgivings are about the overlap with 
> existing GDAL features and protocols (VRT, WMS, WMTS, STAC, MBTiles). 
> I think too many choices can create a not great experience for users.

Yes there is clearly overlap (like most GDAL supported formats have 
strong functional overlap since they can be used with a common API :-))

Here are the main differences I see:

- WMS: requires a client&server architecture

- WMTS: generally requires a client&server architecture too (local use 
possible if using file:// URIs), but requires regular tiling

- STAC(ITems, with STAC projection extensions): functionally a bit 
similar to VRTTI, but using JSON format to catalog the sources. If you 
want to manage a catalog with a large set of sources, static STAC will 
not work well and you'll need a STAC server. Although with STAC, you 
want each "asset" to have user-facing metadata. In a VRTTI use case, you 
are more interested by the resulting mosaic than each of its source.

- STAC(Temporal Asset): functionally similar to WMTS (regular tiling)

- MBTiles/GeoPackage/COG/etc.: single-file tiled formats

Even

>
> On Wed, Dec 20, 2023, 11:33?AM Even Rouault via gdal-dev 
> <gdal-dev at lists.osgeo.org> wrote:
>
>     Hi,
>
>     For those not actively following github tickets & PR, I just want to
>     point to a new pending major functionality to improve management of
>     virtual mosaics with a very large number of tiles/sources (> tens of
>     thousands of tiles), by referencing them as features of a vector
>     layer
>     (typically created by gdaltindex), instead of a XML file as in
>     traditional VRT, augmented with additional metadata.
>
>     More details in https://github.com/OSGeo/gdal/pull/8983 (and in
>     initial
>     ticket in https://github.com/OSGeo/gdal/issues/8861)
>
>     Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231221/c8be3c0a/attachment.htm>

From even.rouault at spatialys.com  Fri Dec 22 07:06:31 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 22 Dec 2023 16:06:31 +0100
Subject: [gdal-dev] shapelib 1.6.0 is released
Message-ID: <8a729ecc-3f16-49e7-8475-10b55597edad@spatialys.com>

Hi,

I've promoted shapelib v1.6.0rc1 as final v1.6.0

- http://download.osgeo.org/shapelib/shapelib-1.6.0.tar.gz
- http://download.osgeo.org/shapelib/shapelib-1.6.0.zip

Changes since v1.5.0:

  * shapefil.h: add SHAPELIB_VERSION_MAJOR/MINOR/MICRO,
    SHAPELIB_VERSION_NUMBER, and SHAPELIB_AT_LEAST macros
  * Compiler warning fixes and various code cleanups
  * SAHooks: add a void *pvUserData member. ABI change
  * SAHooks.FOpen and FClose callbacks: add a void *pvUserData
    parameter. API and ABI change
  * SAHooks.FWrite: make first parameter a const void*. API change
  * Distribute LICENSE-LGPL and LICENSE-MIT files instead of COPYING
    file. Do not distribute INSTALL file
  * Use standard integer data types
  * Changes to allow building with cmake -DCMAKE_UNITY_BUILD=ON
  * Polygon writing: avoid considering rings slightly overlapping as
    inner-outer rings of others (refs OSGeo/gdal#5315)
  * Polygon writing: consider rings at non-constant Z as outer rings
    (fixes OSGeo/gdal#5315) As noted in code comments, this is an
    approximation of more complicated tests we'd likely have to do, that
    would take into account real co-planar testing, to allow detecting
    inner rings of outer rings in an oblique plane.
  * shpopen.c: Communicate why the file size cannot be reached when
    appending features (OSGeo/gdal#4140) Clearly state why the file size
    cannot be reached. This is important in order to correctly inform
    the user and prevent him/her from looking for other reasons. Related
    to https://github.com/qgis/QGIS/issues/44202
  * SHPWriteObject(): prevent potential overflows on 64-bit platforms on
    huge geometries
  * SHPRestoreSHX: update SHX content length even if error occurred
  * In creation, uses w+b file opening mode instead of wb followed by
    r+b, to support network file systems having sequential write only
    and when using CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE=YES (fixes
    OSGeo/gdal#7801)
  * Fix adding features in a .dbf without columns (fixes qgis/qgis#51247)
  * Have matching SOVERSION for CMake and autotools
  * Code reformatting
  * Enable contrib/csv2shp build with MSVC
  * Build contributed utilities via CMake
  * Use the the standard BUILD_TESTING CMake variable
  * Remove double free() in contrib/shpsrt (CVE-2022-0699)
  * SHPRestoreSHX: fix for (64 bit) big endian
  * Add config-style support for find_package(shapefile)
  * Prevent no-op FSeeks writing dbf & shp records for network
    filesystem performance

Best regards,

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231222/f6da9a97/attachment.htm>

From frankie at debian.org  Sun Dec 24 09:40:27 2023
From: frankie at debian.org (Francesco P. Lovergine)
Date: Sun, 24 Dec 2023 18:40:27 +0100
Subject: [gdal-dev] C API, pointers vs lists in functions prototypes
Message-ID: <ZYhtC9OuIqSUm4f4@aragorn.home.lovergine.com>

Hi, folks. 

I recently worked onto the current Perl binding for GDAL via modern FFI, and
discovered that a series of functions can cause segfaults of the Perl interpreter
due to the use of type* instead of type[] (sometimes type[6]) in 
function prototypes taken from the C header file. 
While that's perfectly the same in C, apparently it causes some oddities 
due to confusion among SV and AV in the Perl internals.

Unfortunately, the only way to deal with those prototypes in the Perl binding 
seems reading the documentation and to manually override the code that generates 
func bindings in Perl in order to replace pointers with arrays, when due.

Thinking about that, the whole issue could be valid potentially for other
language bindings, so I wonder if it would make sense changing a bit prototypes
in GDAL to solve this issue at the source for any list (i.e. using array notation
when required). I could even propose a simple PR about that, if it would help.

Thanks

The long story is here: https://github.com/ajolma/Geo-GDAL-FFI/issues/53

-- 
Francesco P. Lovergine

From even.rouault at spatialys.com  Sun Dec 24 09:51:50 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 24 Dec 2023 18:51:50 +0100
Subject: [gdal-dev] C API, pointers vs lists in functions prototypes
In-Reply-To: <ZYhtC9OuIqSUm4f4@aragorn.home.lovergine.com>
References: <ZYhtC9OuIqSUm4f4@aragorn.home.lovergine.com>
Message-ID: <587a2c9d-944b-44d0-88fd-27fea1786f9b@spatialys.com>

Francesco,

I can't think of a drawback if you want to submit such a PR to use 
type[] style declaration of arrays

Even

Le 24/12/2023 ? 18:40, Francesco P. Lovergine via gdal-dev a ?crit?:
> Hi, folks.
> I recently worked onto the current Perl binding for GDAL via modern 
> FFI, and
> discovered that a series of functions can cause segfaults of the Perl 
> interpreter
> due to the use of type* instead of type[] (sometimes type[6]) in 
> function prototypes taken from the C header file. While that's 
> perfectly the same in C, apparently it causes some oddities due to 
> confusion among SV and AV in the Perl internals.
>
> Unfortunately, the only way to deal with those prototypes in the Perl 
> binding seems reading the documentation and to manually override the 
> code that generates func bindings in Perl in order to replace pointers 
> with arrays, when due.
>
> Thinking about that, the whole issue could be valid potentially for other
> language bindings, so I wonder if it would make sense changing a bit 
> prototypes
> in GDAL to solve this issue at the source for any list (i.e. using 
> array notation
> when required). I could even propose a simple PR about that, if it 
> would help.
>
> Thanks
>
> The long story is here: https://github.com/ajolma/Geo-GDAL-FFI/issues/53
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From bdezonia at gmail.com  Tue Dec 26 14:35:36 2023
From: bdezonia at gmail.com (Barry DeZonia)
Date: Tue, 26 Dec 2023 16:35:36 -0600
Subject: [gdal-dev] Trouble building 3.8.2 from source
Message-ID: <CAKcvfuQNwo=FKwVAgA8VtOA6CFOAhKX3A9V4B8S0PLbs7iy7GA@mail.gmail.com>

Hey all,

This probably has a simple explanation.

I have downloaded the 3.8.2 source code.

In the local source code directory I make a build dir and cd into it.

I then do this:

CMAKE_INSTALL_PREFIX=/usr GDAL_JAVA_INSTALL_DIR=/usr/java/packages/lib
cmake ..

And then this:

CMAKE_INSTALL_PREFIX=/usr GDAL_JAVA_INSTALL_DIR=/usr/java/packages/lib
cmake --build .

And after a short while I get this error message:

CMake Error at port/CMakeLists.txt:122 (message):
  /home/bdz/Downloads/tmp/gdal-3.8.2/port/cpl_config.h was found, and
likely conflicts with
/home/bdz/Downloads/tmp/gdal-3.8.2/build/port/cpl_config.h

Can you tell me what I am doing wrong?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231226/4aecd97d/attachment.htm>

From even.rouault at spatialys.com  Tue Dec 26 14:45:24 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 26 Dec 2023 23:45:24 +0100
Subject: [gdal-dev] Trouble building 3.8.2 from source
In-Reply-To: <CAKcvfuQNwo=FKwVAgA8VtOA6CFOAhKX3A9V4B8S0PLbs7iy7GA@mail.gmail.com>
References: <CAKcvfuQNwo=FKwVAgA8VtOA6CFOAhKX3A9V4B8S0PLbs7iy7GA@mail.gmail.com>
Message-ID: <6e0a99c3-f8c9-4fc9-9c55-9b1b8f58f996@spatialys.com>

Barry,


> This probably has a simple explanation.
>
> I have downloaded?the 3.8.2 source code.
>
> In the local source code directory I make a build dir and cd into it.

Are you sure you didn't do an initial build in the top directory ? 
Because there's no port/cpl_config.h in the tarball, so the only way to 
have one there I can imagine is that there was an initial build from the 
top directory. Just try to remove port/cpl_config.h and things should 
work fine

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From bdezonia at gmail.com  Tue Dec 26 14:59:09 2023
From: bdezonia at gmail.com (Barry DeZonia)
Date: Tue, 26 Dec 2023 16:59:09 -0600
Subject: [gdal-dev] Trouble building 3.8.2 from source
In-Reply-To: <6e0a99c3-f8c9-4fc9-9c55-9b1b8f58f996@spatialys.com>
References: <CAKcvfuQNwo=FKwVAgA8VtOA6CFOAhKX3A9V4B8S0PLbs7iy7GA@mail.gmail.com>
 <6e0a99c3-f8c9-4fc9-9c55-9b1b8f58f996@spatialys.com>
Message-ID: <CAKcvfuSTu_tpeEjmfV3tOyRyzc-ub1FEXmm6UBXSB0KSOF4QbA@mail.gmail.com>

Thanks for the pointer. That was the problem. I just extracted the source
again elsewhere and can build there fine.

On Tue, Dec 26, 2023 at 4:45?PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Barry,
>
>
> > This probably has a simple explanation.
> >
> > I have downloaded the 3.8.2 source code.
> >
> > In the local source code directory I make a build dir and cd into it.
>
> Are you sure you didn't do an initial build in the top directory ?
> Because there's no port/cpl_config.h in the tarball, so the only way to
> have one there I can imagine is that there was an initial build from the
> top directory. Just try to remove port/cpl_config.h and things should
> work fine
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231226/b1ddafcb/attachment.htm>

From bdezonia at gmail.com  Thu Dec 28 18:15:37 2023
From: bdezonia at gmail.com (Barry DeZonia)
Date: Thu, 28 Dec 2023 20:15:37 -0600
Subject: [gdal-dev] Java API
Message-ID: <CAKcvfuS28FrpajjKr2iZNaicRNrFVXem4JgH0=ze3ef4EMSXGQ@mail.gmail.com>

Hey all,

I just wanted to let you know I updated my java code that uses GDAL (and
it's Java API) to load data from MDArray supporting drivers. My initial
tests (using my zorbage-viewer app to call zorbage-gdal routines) shows the
MDArray Java code is working well. Data files are a bit slow to load but
otherwise no complaints.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231228/7cee8b7a/attachment.htm>

From bdezonia at gmail.com  Thu Dec 28 18:49:12 2023
From: bdezonia at gmail.com (Barry DeZonia)
Date: Thu, 28 Dec 2023 20:49:12 -0600
Subject: [gdal-dev] Java API
In-Reply-To: <CAKcvfuS28FrpajjKr2iZNaicRNrFVXem4JgH0=ze3ef4EMSXGQ@mail.gmail.com>
References: <CAKcvfuS28FrpajjKr2iZNaicRNrFVXem4JgH0=ze3ef4EMSXGQ@mail.gmail.com>
Message-ID: <CAKcvfuTSeOLZo-sy9ifq7jsQjBPAsj=pMkG_1wsNKn7GAqVKMA@mail.gmail.com>

If it's not clear I am saying that the Java API extensions for MDArrays in
gdal 3.8 (and possibly 3.7 - I don't remember) has a clean bill of health.

On Thu, Dec 28, 2023 at 8:15?PM Barry DeZonia <bdezonia at gmail.com> wrote:

> Hey all,
>
> I just wanted to let you know I updated my java code that uses GDAL (and
> it's Java API) to load data from MDArray supporting drivers. My initial
> tests (using my zorbage-viewer app to call zorbage-gdal routines) shows the
> MDArray Java code is working well. Data files are a bit slow to load but
> otherwise no complaints.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231228/2c097422/attachment.htm>

From howard at hobu.co  Fri Dec 29 06:58:05 2023
From: howard at hobu.co (Howard Butler)
Date: Fri, 29 Dec 2023 08:58:05 -0600
Subject: [gdal-dev] GDAL Maintainers Meeting Minutes
Message-ID: <359BD5BA-7463-4431-BC20-3E07F2CB9D8F@hobu.co>

Howard Butler, Even Rouault, Dan Baston, and Alessandro Pasotti canceled the monthly GDAL Maintainers Meeting that was to be held on 12/28/2023 due to holiday conflicts. Maintainers instead provided text updates which I am relaying as our monthly report.

Fundraising update
----------------------------

Annual renewals are now going out to sponsors, so if you are a coordinator of GDAL funding in your organization, please be on the lookout for them. 

Maintenance activities update
------------------------------------------

Status from Dan:

> No activity from me this month. I hope you're enjoying your holidays.

Status from Alessandro:

> Bugfix: SubdatasetInfo API: better check for drive letters
> Feature: https://github.com/OSGeo/gdal/issues/8570Add OGRLayer::GetExtent3D()
> PR Review https://github.com/OSGeo/gdal/pull/8928ogrinfo: add a -extent3D switch
> Feature:  PG: GetExtent3D fast implementation
> PR Review https://github.com/OSGeo/gdal/pull/9003 VSICurl and derived:
> replace most uses of CPLString with std::sring
> PR Review https://github.com/OSGeo/gdal/pull/8988 WMS: change logic to
> set gdalwmscache directory to honor in particular XDG_CACHE_HOME
> (fixes #8987)

Status from Even:

> - Release of GDAL 3.8.1 after 3 release candidates
> - Release of GDAL 3.8.2
> - and because of a new 3.8.0 regression that has been reported and now fixed, I plan to do a 3.8.3 next week
> - RFC98 "Build requirements for GDAL 3.9" has been voted and implemented. This brings a significant cleanup with 8300 lines (mostly cmake compatibility scripts) removed, including more than 300 #ifdef branches removed
> - Attempt at being nicer with respect to numpy dependency by providing a pyproject.toml file per https://github.com/OSGeo/gdal/pull/8926 . More ambitious changes removing deprecated uses of setuptools will probably have to wait for a potential GDAL 4.0
> - Shapelib 1.6.0 has been released
> - a pre-RFC about the removal of a subset of the vendored libraries (namely zlib, libjpeg, libpng, giflib, liblerc) has been discussed on the mailing list. Checking further, I've realized that Debian unstable still ships with jpegturbo < 3.0, and thus has not yet 12-bit JPEG support. I've filed an issue about that to the libjpegturbo Debian package. I also see that Fedora Rawhide still ships libjpegturbo < 3.0 (it would be good that someone more familiar with that part of the ecosystem brings that to the attention of the maintainer of the package). So for now I'm deferring the RFC and its implementation to having more widespread use of libjpegturbo 3.0 to avoid functional loses.

The next GDAL Maintainers Meeting is 01/25/2023 at 9:00 EDT. Any PSC members are welcome to join by reaching out to me for an invite.

Howard

From Roger.Bivand at nhh.no  Fri Dec 29 12:17:22 2023
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 29 Dec 2023 20:17:22 +0000
Subject: [gdal-dev] GDAL Maintainers Meeting Minutes
In-Reply-To: <mailman.3.1703880001.26309.gdal-dev@lists.osgeo.org>
References: <mailman.3.1703880001.26309.gdal-dev@lists.osgeo.org>
Message-ID: <SV0P279MB04758FA641732E2E0DF05536EE9DA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>

https://bugzilla.redhat.com/show_bug.cgi?id=2256228

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no


From nyall.dawson at gmail.com  Fri Dec 29 13:10:13 2023
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Sat, 30 Dec 2023 07:10:13 +1000
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <c8439b7d-8027-4a42-88d8-4a3bd11fc193@spatialys.com>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
 <427c2ed2-0e08-4dfd-b038-2ed8119dd940@xs4all.nl>
 <c8439b7d-8027-4a42-88d8-4a3bd11fc193@spatialys.com>
Message-ID: <CAB28Asih0Hj_Eap_k2LK+_K86rAu5erOPCAuPEqr6MYPAOkD3g@mail.gmail.com>

On Sat, 16 Dec 2023, 1:03?am Even Rouault via gdal-dev, <
gdal-dev at lists.osgeo.org> wrote:

>
> Le 15/12/2023 ? 15:49, Sebastiaan Couwenberg via gdal-dev a ?crit :
> > On 12/15/23 15:35, Even Rouault via gdal-dev wrote:
> >> Thoughts ? (given the length of the email, it should probably be
> >> formalized as a RFC. I'll do that, unless there is a massive uprising
> >> against the proposal...)
> >
> > LERC doesn't support big endian architectures currently, only using
> > that on little endian architectures using the internal copy currently
> > works as expected. Using the external library would require
> > conditionals in the packaging which I'm not in favor of.
> Bas,
>
> - The Debian libtiff package already handles that conditional, so there
> must certainly be a way of using the same trick for the GDAL build recipee
>
> - The only user of LERC in GDAL (except for its libtiff internal cpoy)
> is the MRF driver. I doubt MRF is used widely except in Esri data
> centers... So even if you don't want to change the GDAL build recipee to
> include a conditional liblerc dependency, that wouldn't be the end of
> the world.
>

Some ESRI image server layers are served up using lerc compression, eg the
landcover tiles:

https://tiledimageservices.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/Esri_2020_Land_Cover_V2/ImageServer?f=pjson

I was planning on doing some future work in qgis to support reading these
layers by using gdal to do the lerc decompression, so I'd be disappointed
if the lerc compression support is dropped.

Nyall





> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231230/271a1fae/attachment.htm>

From even.rouault at spatialys.com  Fri Dec 29 13:36:17 2023
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 29 Dec 2023 22:36:17 +0100
Subject: [gdal-dev] Un-vendoring a number of third-party libraries?
In-Reply-To: <CAB28Asih0Hj_Eap_k2LK+_K86rAu5erOPCAuPEqr6MYPAOkD3g@mail.gmail.com>
References: <05d2a3d1-593d-499d-8edb-3cc2e277f0a0@spatialys.com>
 <427c2ed2-0e08-4dfd-b038-2ed8119dd940@xs4all.nl>
 <c8439b7d-8027-4a42-88d8-4a3bd11fc193@spatialys.com>
 <CAB28Asih0Hj_Eap_k2LK+_K86rAu5erOPCAuPEqr6MYPAOkD3g@mail.gmail.com>
Message-ID: <32be976d-8078-42d3-b84c-88bac1787403@spatialys.com>


Le 29/12/2023 ? 22:10, Nyall Dawson a ?crit?:
>
>
> On Sat, 16 Dec 2023, 1:03?am Even Rouault via gdal-dev, 
> <gdal-dev at lists.osgeo.org> wrote:
>
>
>     Le 15/12/2023 ? 15:49, Sebastiaan Couwenberg via gdal-dev a ?crit?:
>     > On 12/15/23 15:35, Even Rouault via gdal-dev wrote:
>     >> Thoughts ? (given the length of the email, it should probably be
>     >> formalized as a RFC. I'll do that, unless there is a massive
>     uprising
>     >> against the proposal...)
>     >
>     > LERC doesn't support big endian architectures currently, only using
>     > that on little endian architectures using the internal copy
>     currently
>     > works as expected. Using the external library would require
>     > conditionals in the packaging which I'm not in favor of.
>     Bas,
>
>     - The Debian libtiff package already handles that conditional, so
>     there
>     must certainly be a way of using the same trick for the GDAL build
>     recipee
>
>     - The only user of LERC in GDAL (except for its libtiff internal
>     cpoy)
>     is the MRF driver. I doubt MRF is used widely except in Esri data
>     centers... So even if you don't want to change the GDAL build
>     recipee to
>     include a conditional liblerc dependency, that wouldn't be the end of
>     the world.
>
>
> Some ESRI image server layers are served up using lerc compression, eg 
> the landcover tiles:
>
> https://tiledimageservices.arcgis.com/P3ePLMYs2RVChkJx/arcgis/rest/services/Esri_2020_Land_Cover_V2/ImageServer?f=pjson
>
> I was planning on doing some future work in qgis to support reading 
> these layers by using gdal to do the lerc decompression, so I'd be 
> disappointed if the lerc compression support is dropped.

Hi Nyall,

Interesting. Digging a bit more, I now see that the MRF driver can open 
Lerc blobs too (independently of the MRF extra stuff), so that can 
potentially be a way to get Lerc decompression working. And actually 
there's is a test in the WMS driver that uses MRF/LERC 
(https://github.com/OSGeo/gdal/blob/master/autotest/gdrivers/wms.py#L872) 
which might be just what you need.

It would be nice if the GDAL Debian package could link liblerc in the 
future.

Even


-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20231229/4c6cbae8/attachment.htm>

From Roger.Bivand at nhh.no  Sat Dec 30 01:35:04 2023
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 30 Dec 2023 09:35:04 +0000
Subject: [gdal-dev] GDAL Maintainers Meeting Minutes
In-Reply-To: <SV0P279MB04758FA641732E2E0DF05536EE9DA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
References: <mailman.3.1703880001.26309.gdal-dev@lists.osgeo.org>
 <SV0P279MB04758FA641732E2E0DF05536EE9DA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
Message-ID: <SV0P279MB04750ED9EBC4EEF2F8A09675EE9CA@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>

Unfortunately, upgrading to 3.0.1 failed in October: https://bugzilla.redhat.com/show_bug.cgi?id=2166459. I hope my (duplicate) report may nudge the build team.

Roger

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no

________________________________________
From: Roger Bivand <Roger.Bivand at nhh.no>
Sent: 29 December 2023 21:17
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL Maintainers Meeting Minutes

https://bugzilla.redhat.com/show_bug.cgi?id=2256228

--
Roger Bivand
Emeritus Professor
Norwegian School of Economics
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway
Roger.Bivand at nhh.no


