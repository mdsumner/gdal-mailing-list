From even.rouault at spatialys.com  Sun Oct  1 12:54:31 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 01 Oct 2017 21:54:31 +0200
Subject: [gdal-dev] Gdal_edit and TIFFTAG_EXTRASAMPLES
In-Reply-To: <6625043.vIzl4GcmEa@even-i700>
References: <1506805321867.21991@maanmittauslaitos.fi>
 <6625043.vIzl4GcmEa@even-i700>
Message-ID: <2736250.FWYUTLzZQb@even-i700>

Updates: 

1) I've improved the GTiff driver to support updating color interpretation in 
udpate mode
2) I've improved gdal_edit to support a
-colorinterp_X red|green|blue|alpha|undefined option where X is the band 
number.
3) I've fixed "tiffset -s ExtraSamples 1 val" to work (the issue was specific to 
specifying just one value indeed)

Note that with libtiff when you change an existing tag, the file size will 
slightly increase each time you do a change.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171001/5c07812d/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Sun Oct  1 13:21:32 2017
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Sun, 1 Oct 2017 20:21:32 +0000
Subject: [gdal-dev] Gdal_edit and TIFFTAG_EXTRASAMPLES
In-Reply-To: <2736250.FWYUTLzZQb@even-i700>
References: <1506805321867.21991@maanmittauslaitos.fi>
 <6625043.vIzl4GcmEa@even-i700>,<2736250.FWYUTLzZQb@even-i700>
Message-ID: <1506889297030.71474@maanmittauslaitos.fi>

Thanks Even.


I would guess that also other users who have both RGB+alpha and RGB+NIR images will appreciate these changes. At least for me it has been plain mystery when the fourth band appears as alpha and when as undefined, and how to change the interpretation despite using VRT.


-Jukka-

________________________________
Lähettäjä: Even Rouault <even.rouault at spatialys.com>
Lähetetty: 1. lokakuuta 2017 22:54
Vastaanottaja: gdal-dev at lists.osgeo.org
Kopio: Rahkonen Jukka (MML)
Aihe: Re: [gdal-dev] Gdal_edit and TIFFTAG_EXTRASAMPLES


Updates:



1) I've improved the GTiff driver to support updating color interpretation in udpate mode

2) I've improved gdal_edit to support a

-colorinterp_X red|green|blue|alpha|undefined option where X is the band number.

3) I've fixed "tiffset -s ExtraSamples 1 val" to work (the issue was specific to specifying just one value indeed)



Note that with libtiff when you change an existing tag, the file size will slightly increase each time you do a change.



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171001/0f045a43/attachment.html>

From schwehr at gmail.com  Mon Oct  2 08:04:30 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 2 Oct 2017 08:04:30 -0700
Subject: [gdal-dev] [gdal-commits] r40282 - trunk/gdal/frmts/aaigrid
In-Reply-To: <5005622.Nk3yRrjhcU@even-i700>
References: <20170930174716.25FDC390171@trac.osgeo.org>
 <5005622.Nk3yRrjhcU@even-i700>
Message-ID: <CACmBxyvef0z7-ZL2-cgCxC=On=bqB=vARpMZKt0LV3NS5BGkUg@mail.gmail.com>

+gdal-dev

Even,

Looking back at the changes to aaigrid, I think I've messed things up with
nodata.  Before I submit anything else, what do you think?

The trouble is that it is no longer doing a cast to float for in range
values.  That means for large values, it's not getting rounded to the
nearest float value any more.  I'm seeing this in one on my local tests.  I
dump the json out of gdalinfo and compare.  For float64.asc.json:

I was getting: -1.234567880630493164
Now seeing: -1.234567890123

The new value matches the text in the file, but it was a behavior change.
Leave it be or put in an else that does the rounding to nearest float value
by casting?

What do you think?

-kurt


On Sat, Sep 30, 2017 at 10:59 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On samedi 30 septembre 2017 10:47:16 CEST svn_gdal at osgeo.org wrote:
>
> > Author: goatbar
>
> > Date: 2017-09-30 10:47:16 -0700 (Sat, 30 Sep 2017)
>
> > New Revision: 40282
>
>
>
> Kurt,
>
>
>
> This will break the following test case with a infinite null value
>
>
>
> {{{
>
> north: 250.000000
>
> south: 0.000000
>
> east: 150.000000
>
> west: -100.000000
>
> rows: 2
>
> cols: 2
>
> null: inf
>
> 0 0
>
> 0 0
>
> }}}
>
>
>
> Peviously gdalinfo reported
>
> NoData Value=inf
>
> now its reports
>
> NoData Value=3.4028234663852886e+38
>
>
>
> so you should make a special case for pos and neg infinities.
>
>
>
> Note: in the same file, in the AAIGRID driver, there's a similar code at
> line 537
>
>
>
> Evn
>
>
>
> >
>
> > Modified:
>
> > trunk/gdal/frmts/aaigrid/aaigriddataset.cpp
>
> > Log:
>
> > Change double -> float -> double cast to clamping by numeric limits in
>
> > GRASSASCIIDataset::ParseHeader
>
> >
>
> > Found by autofuzz
>
> >
>
> >
>
> > Modified: trunk/gdal/frmts/aaigrid/aaigriddataset.cpp
>
> > ===================================================================
>
> > --- trunk/gdal/frmts/aaigrid/aaigriddataset.cpp 2017-09-30 16:56:10 UTC
> (rev
>
> > 40281) +++ trunk/gdal/frmts/aaigrid/aaigriddataset.cpp 2017-09-30
> 17:47:16
>
> > UTC (rev 40282) @@ -633,9 +633,10 @@
>
> > }
>
> > if( eDataType == GDT_Float32 )
>
> > {
>
> > - // TODO(schwehr): Is this really what we want?
>
> > - dfNoDataValue =
>
> > - static_cast<double>(static_cast<float>(dfNoDataValue));
>
> > + if( dfNoDataValue >= std::numeric_limits<float>::max() )
>
> > + dfNoDataValue = std::numeric_limits<float>::max();
>
> > + if( dfNoDataValue <= -std::numeric_limits<float>::max() )
>
> > + dfNoDataValue = -std::numeric_limits<float>::max();
>
> > }
>
> > }
>
> >
>
> >
>
> > _______________________________________________
>
> > gdal-commits mailing list
>
> > gdal-commits at lists.osgeo.org
>
> > https://lists.osgeo.org/mailman/listinfo/gdal-commits
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171002/a80b8df6/attachment.html>

From even.rouault at spatialys.com  Mon Oct  2 08:27:43 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 02 Oct 2017 17:27:43 +0200
Subject: [gdal-dev] [gdal-commits] r40282 - trunk/gdal/frmts/aaigrid
In-Reply-To: <CACmBxyvef0z7-ZL2-cgCxC=On=bqB=vARpMZKt0LV3NS5BGkUg@mail.gmail.com>
References: <20170930174716.25FDC390171@trac.osgeo.org>
 <5005622.Nk3yRrjhcU@even-i700>
 <CACmBxyvef0z7-ZL2-cgCxC=On=bqB=vARpMZKt0LV3NS5BGkUg@mail.gmail.com>
Message-ID: <2766160.vuUR4MKaeq@even-i700>

On lundi 2 octobre 2017 08:04:30 CEST Kurt Schwehr wrote:
> +gdal-dev
> 
> Even,
> 
> Looking back at the changes to aaigrid, I think I've messed things up with
> nodata.  Before I submit anything else, what do you think?
> 
> The trouble is that it is no longer doing a cast to float for in range
> values.  That means for large values, it's not getting rounded to the
> nearest float value any more.  I'm seeing this in one on my local tests.  I
> dump the json out of gdalinfo and compare.  For float64.asc.json:
> 
> I was getting: -1.234567880630493164
> Now seeing: -1.234567890123
> 
> The new value matches the text in the file, but it was a behavior change.
> Leave it be or put in an else that does the rounding to nearest float value
> by casting?
> 
> What do you think?

That's actually a general issue with GetNoDataValue() returning a double. For a Float32 band, 
the return only makes sense after being cast to float.

In the past, we have had issues in GDAL core regarding that in statistics, min-max or 
histogram computation functions, but I think that now we compare pixel values to the float-
casted nodata value. So whether you pre-cast to float in the driver shouldn't make a 
difference. You can try putting nodata values as pixel values in the .asc file, and check 
whether gdalinfo -stats / -mm / -hist ignore them.

That said, it wouldn't probably be a bad idea to keep the behaviour we had before your 
changes (ie double->float->double cast), so as to avoid breaking external code/tests that 
would depend (erroneously) on the exact value.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171002/d9f1ebfe/attachment-0001.html>

From schwehr at gmail.com  Mon Oct  2 09:51:07 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 2 Oct 2017 09:51:07 -0700
Subject: [gdal-dev] RFC68: C++11 compilation mode - Call for vote on
	adoption
In-Reply-To: <CACmBxyst=pZfK56xOO415xK=isa0_3=doas0c-CUM1mMsAmQCA@mail.gmail.com>
References: <CACmBxyvKSibfcNsFcThnjz=0RUAFeeDrGxAjT+vAghOaxSRc1w@mail.gmail.com>
 <de1bd5bd-c631-b576-83d2-30e828373d30@mapgears.com>
 <16202906.4nNSroQgz0@even-i700>
 <15DC8C82-E3C0-43C8-A352-8A2688420526@hobu.co>
 <CACmBxyst=pZfK56xOO415xK=isa0_3=doas0c-CUM1mMsAmQCA@mail.gmail.com>
Message-ID: <CACmBxysp2h7uoEz1BaUdMW5cgravGkRke185BjcNkFWQDTZkfA@mail.gmail.com>

I've created this ticket to track the process:
https://trac.osgeo.org/gdal/ticket/7066

On Mon, Sep 11, 2017 at 8:39 AM, Kurt Schwehr <schwehr at gmail.com> wrote:

> I declare RFC68 passed with the following votes:
>
> Even +1
> Jukka +1
> Daniel +0
> Howard +1
> Kurt +1
>
> I appreciate all the discussion and the non-PSC folks who weighed in.  I
> will update the RFC and begin staging a pull request targeted for Oct 1 or
> shortly thereafter.
>
> -kurt
>
> On Fri, Sep 8, 2017 at 2:49 PM, Howard Butler <howard at hobu.co> wrote:
>
>>
>> On Sep 8, 2017, at 3:29 PM, Even Rouault <even.rouault at spatialys.com>
>> wrote:
>>
>> If people really need to have recent GDAL on old platforms, they can use
>> backported toolchains, hire developers to backport the features they need
>> to older branches, etc...
>>
>>
>> +1 for C++11
>>
>> Howard
>>
>>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171002/51443a6d/attachment.html>

From caboe at sdfe.dk  Tue Oct  3 01:22:40 2017
From: caboe at sdfe.dk (=?iso-8859-1?Q?Casper_B=F8rgesen?=)
Date: Tue, 3 Oct 2017 08:22:40 +0000
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
Message-ID: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>

Hi devs

I am trying to merge a bunch of SHAPE files into a few SpatiaLite files. To make it more simple I have two kinds of data sets A and B and each data set has two SHAPE files. So my result should end up being a SpatiaLite file for each data set.

I am using the following commands to create the SpatiaLite files:

If it's the first file:
ogr2ogr -f SQLite -dsco SPATIALITE=YES -gt 100000 -lco SPATIAL_INDEX=NO out_A.spatialite A_1.shp -nln A
Else:
ogr2ogr -gt 100000 -update -append A.spatialite A_2.shp -nln A

If it's the first file:
ogr2ogr -f SQLite -dsco SPATIALITE=YES -gt 100000 -lco SPATIAL_INDEX=NO out_B.spatialite B_1.shp -nln B
Else:
ogr2ogr -gt 100000 -update -append B.spatialite B_2.shp -nln B

For some reason I haven't found yet, the last command fails with the following message (both A's work just fine):

ERROR 1: Layer B already exists, CreateLayer failed.
Use the layer creation option OVERWRITE=YES to replace it.
ERROR 1: Terminating translation prematurely after failed
translation of layer B (use -skipfailures to skip errors)

The two data sets are both linestrings but has different attributes. Both 1 and 2 in each data set has been created programmatically the same way.

I am using GDAL 2.2.2 (x64) on Windows 7 from OSGeo4W.

What could be the reason for this error?

Regards, Casper

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171003/91347428/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Oct  3 11:51:52 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Tue, 3 Oct 2017 11:51:52 -0700 (MST)
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
Message-ID: <1507056712555-0.post@n6.nabble.com>

Casper Børgesen-2 wrote
> Hi devs
> 
> I am trying to merge a bunch of SHAPE files into a few SpatiaLite files.
> To make it more simple I have two kinds of data sets A and B and each data
> set has two SHAPE files. So my result should end up being a SpatiaLite
> file for each data set.
> 
> I am using the following commands to create the SpatiaLite files:
> 
> If it's the first file:
> ogr2ogr -f SQLite -dsco SPATIALITE=YES -gt 100000 -lco SPATIAL_INDEX=NO
> out_A.spatialite A_1.shp -nln A
> Else:
> ogr2ogr -gt 100000 -update -append A.spatialite A_2.shp -nln A
> 
> If it's the first file:
> ogr2ogr -f SQLite -dsco SPATIALITE=YES -gt 100000 -lco SPATIAL_INDEX=NO
> out_B.spatialite B_1.shp -nln B
> Else:
> ogr2ogr -gt 100000 -update -append B.spatialite B_2.shp -nln B
> 
> For some reason I haven't found yet, the last command fails with the
> following message (both A's work just fine):
> 
> ERROR 1: Layer B already exists, CreateLayer failed.
> Use the layer creation option OVERWRITE=YES to replace it.
> ERROR 1: Terminating translation prematurely after failed
> translation of layer B (use -skipfailures to skip errors)
> 
> The two data sets are both linestrings but has different attributes. Both
> 1 and 2 in each data set has been created programmatically the same way.
> 
> I am using GDAL 2.2.2 (x64) on Windows 7 from OSGeo4W.
> 
> What could be the reason for this error?
> 
> Regards, Casper

Could you share a small test dataset for reproducing the issue?

-Jukka Rahkonen-




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From mikeucfl at gmail.com  Tue Oct  3 12:47:17 2017
From: mikeucfl at gmail.com (mikeucfl)
Date: Tue, 3 Oct 2017 12:47:17 -0700 (MST)
Subject: [gdal-dev] Possible bug with creating transactions using the
	FileGDB driver
Message-ID: <1507060037603-0.post@n6.nabble.com>

I recently stepped up some code to use Visual Studio 2015 and calling
GDALDataset::startTransaction(true) seems to fail for the FileGDB driver. I
tracked the issue down to cpl_conv's CPLCopyTree method:

In Visual Studio 2012 the first call to VSIStatL(pszOldPath, &sStatBuf) sets
sStatBuf so st_mode has the flags for a directory. The second call
VSIStatL(pszNewPath, &sStatBuf) fails internally because the new path
doesn't exist, and sStatBuf is remained untouched from the old path's call
(_wstat64 doesn't reset sStatBuf). This worked in favor for the next line in
CPLCopyTree since sStatBuf.st_mode is checked to see if the new path is a
directory (which it says yes because the old path is what set sStatBuf).

In Visual Studio 2015 _wstat64 clears out sStatBuf. So when VSIStatL is
called on pszNewPath, sStatBuf.st_mode doesn't show that it's a directory
and fails out saying "Unrecognized filesystem object : c:\temp\testing.gdb"

I'm thinking VSIStatL should check for a -1 response from _wstat64,
indicating the folder doesn't exist and VSI_ISDIR should only check the old
path's sStatBuf to see if it's a folder and not the new path (since it
doesn't exist at this time). Thoughts?



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Tue Oct  3 13:21:38 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 03 Oct 2017 22:21:38 +0200
Subject: [gdal-dev] Possible bug with creating transactions using the
	FileGDB driver
In-Reply-To: <1507060037603-0.post@n6.nabble.com>
References: <1507060037603-0.post@n6.nabble.com>
Message-ID: <1900064.gBz9jYZBZ8@even-i700>

Hi,

The 2 calls to Stat() are not done in the proper order indeed. Should be fixed per https://
trac.osgeo.org/gdal/ticket/7070

Even

> I recently stepped up some code to use Visual Studio 2015 and calling
> GDALDataset::startTransaction(true) seems to fail for the FileGDB driver. I
> tracked the issue down to cpl_conv's CPLCopyTree method:
> 
> In Visual Studio 2012 the first call to VSIStatL(pszOldPath, &sStatBuf) sets
> sStatBuf so st_mode has the flags for a directory. The second call
> VSIStatL(pszNewPath, &sStatBuf) fails internally because the new path
> doesn't exist, and sStatBuf is remained untouched from the old path's call
> (_wstat64 doesn't reset sStatBuf). This worked in favor for the next line
> in CPLCopyTree since sStatBuf.st_mode is checked to see if the new path is
> a directory (which it says yes because the old path is what set sStatBuf).
> 
> In Visual Studio 2015 _wstat64 clears out sStatBuf. So when VSIStatL is
> called on pszNewPath, sStatBuf.st_mode doesn't show that it's a directory
> and fails out saying "Unrecognized filesystem object : c:\temp\testing.gdb"
> 
> I'm thinking VSIStatL should check for a -1 response from _wstat64,
> indicating the folder doesn't exist and VSI_ISDIR should only check the old
> path's sStatBuf to see if it's a folder and not the new path (since it
> doesn't exist at this time). Thoughts?
> 
> 
> 
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171003/3b16874b/attachment.html>

From mikeucfl at gmail.com  Tue Oct  3 13:31:39 2017
From: mikeucfl at gmail.com (mikeucfl)
Date: Tue, 3 Oct 2017 13:31:39 -0700 (MST)
Subject: [gdal-dev] Possible bug with creating transactions using the
 FileGDB driver
In-Reply-To: <1900064.gBz9jYZBZ8@even-i700>
References: <1507060037603-0.post@n6.nabble.com> <1900064.gBz9jYZBZ8@even-i700>
Message-ID: <1507062699971-0.post@n6.nabble.com>

The fix worked for me, thanks!



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From caboe at sdfe.dk  Wed Oct  4 01:58:25 2017
From: caboe at sdfe.dk (=?utf-8?B?Q2FzcGVyIELDuHJnZXNlbg==?=)
Date: Wed, 4 Oct 2017 08:58:25 +0000
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <1507056712555-0.post@n6.nabble.com>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
 <1507056712555-0.post@n6.nabble.com>
Message-ID: <800A1C4B99390947B3BAA86C02CBDB26159FAF83@S000014.PROD.SITAD.DK>

Hi Jukka

I tried only to discover that the error is probably about an invalid (?) layer name (-nln). ogr2ogr doesn't complain if I give it a layer name with a dash in the middle, like 'some-thing'. When appending data to the layer using the same layer name, I get the error message.

I don't know if this type of layer names are indeed invalid and if so, the current behaviour of ogr2ogr not complaining is intended.

Regards, Casper

-----Original Message-----
From: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of jratike80
Sent: 3. oktober 2017 20:52
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Problem with merging SHAPEs into SpatiaLite

Casper Børgesen-2 wrote
> Hi devs
> 
> I am trying to merge a bunch of SHAPE files into a few SpatiaLite files.
> To make it more simple I have two kinds of data sets A and B and each data
> set has two SHAPE files. So my result should end up being a SpatiaLite
> file for each data set.
> 
> I am using the following commands to create the SpatiaLite files:
> 
> If it's the first file:
> ogr2ogr -f SQLite -dsco SPATIALITE=YES -gt 100000 -lco SPATIAL_INDEX=NO
> out_A.spatialite A_1.shp -nln A
> Else:
> ogr2ogr -gt 100000 -update -append A.spatialite A_2.shp -nln A
> 
> If it's the first file:
> ogr2ogr -f SQLite -dsco SPATIALITE=YES -gt 100000 -lco SPATIAL_INDEX=NO
> out_B.spatialite B_1.shp -nln B
> Else:
> ogr2ogr -gt 100000 -update -append B.spatialite B_2.shp -nln B
> 
> For some reason I haven't found yet, the last command fails with the
> following message (both A's work just fine):
> 
> ERROR 1: Layer B already exists, CreateLayer failed.
> Use the layer creation option OVERWRITE=YES to replace it.
> ERROR 1: Terminating translation prematurely after failed
> translation of layer B (use -skipfailures to skip errors)
> 
> The two data sets are both linestrings but has different attributes. Both
> 1 and 2 in each data set has been created programmatically the same way.
> 
> I am using GDAL 2.2.2 (x64) on Windows 7 from OSGeo4W.
> 
> What could be the reason for this error?
> 
> Regards, Casper

Could you share a small test dataset for reproducing the issue?

-Jukka Rahkonen-




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From jukka.rahkonen at maanmittauslaitos.fi  Wed Oct  4 04:11:28 2017
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 4 Oct 2017 11:11:28 +0000
Subject: [gdal-dev] VRT KernelFilteredSource and overviews
Message-ID: <1432341bb52e4227a34331b6645867f5@C119S212VM042.msvyvi.vaha.local>

Hi,

I was playing with kernel filters in VRT and using this really applies sharpen filter on-the-fly when looking the image at native resolution with QGIS:

<VRTRasterBand dataType="Byte" band="1">
    <ColorInterp>Red</ColorInterp>
    <KernelFilteredSource>
      <SourceFilename relativeToVRT="1">image.tif</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="12000" RasterYSize="12000" DataType="Byte" BlockXSize="12000" BlockYSize="1" />
      <SrcRect xOff="0" yOff="0" xSize="12000" ySize="12000" />
      <DstRect xOff="0" yOff="0" xSize="12000" ySize="12000" />
        <Kernel normalized="0">
          <Size>3</Size>
           <Coefs>0 -1 0 -1 5 -1 0 -1 0</Coefs>
  </Kernel>
    </KernelFilteredSource>
  </VRTRasterBand>

However, filter is not applied to overviews which means that image looks different when I zoom out. Is this the intended behavior?

-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171004/bbeba318/attachment.html>

From astewart at terragotech.com  Wed Oct  4 06:30:33 2017
From: astewart at terragotech.com (Alan Stewart)
Date: Wed, 4 Oct 2017 08:30:33 -0500
Subject: [gdal-dev] OGR2SQLITE_static_register
Message-ID: <7F98CACF1AAD69408701E6A026294F95573FBDF41D@CLOUDMBX06.cloudopscenter.net>

GDAL 1.11.0. We use a libspatialite 4.2.0 DLL.

>From ogrsqlitevirtualogr.cpp:

void OGR2SQLITE_Register()
{
    sqlite3_auto_extension ((void (*)(void)) OGR2SQLITE_static_register);
}

I'm trying to open an mbtiles file. Sqlite3_auto_extension() throws when executed.

Thanks for any info or suggestions.

Alan Stewart
Senior Software Engineer
TerraGo Technologies
3200 Windy Hill Road, Suite 1550W
Atlanta, GA 30339 USA
O.  +1 678.391.9615

www.terragotech.com<applewebdata://B24C0762-C7C9-4431-8518-ACC915448B89/www.terragotech.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171004/06eee064/attachment-0001.html>

From even.rouault at spatialys.com  Thu Oct  5 03:21:28 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 12:21:28 +0200
Subject: [gdal-dev] OGR2SQLITE_static_register
In-Reply-To: <7F98CACF1AAD69408701E6A026294F95573FBDF41D@CLOUDMBX06.cloudopscenter.net>
References: <7F98CACF1AAD69408701E6A026294F95573FBDF41D@CLOUDMBX06.cloudopscenter.net>
Message-ID: <3272243.aC958Rab4u@even-i700>

On mercredi 4 octobre 2017 08:30:33 CEST Alan Stewart wrote:
> GDAL 1.11.0. We use a libspatialite 4.2.0 DLL.

I'd say: time to upgrade your GDAL version.

Looking at recent GDAL versions, I see this comment:

/* We call this function so that each time a db is created, */
/* OGR2SQLITE_static_register is called, to initialize the sqlite3_api */
/* structure with the right pointers. */
/* We need to declare this function before including sqlite3ext.h, since */
/* sqlite 3.8.7, sqlite3_auto_extension can be a macro (#5725) */

Apparently this was fixed in GDAL 1.11.2:
 * fix segmentation fault when executing OGR2SQLITE_Register() when compiling against 
sqlite 3.8.7 (#5725)

So you're likely using too-old-GDAL with too-recent-sqlite3.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/3871921e/attachment.html>

From even.rouault at spatialys.com  Thu Oct  5 03:26:46 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 12:26:46 +0200
Subject: [gdal-dev] VRT KernelFilteredSource and overviews
In-Reply-To: <1432341bb52e4227a34331b6645867f5@C119S212VM042.msvyvi.vaha.local>
References: <1432341bb52e4227a34331b6645867f5@C119S212VM042.msvyvi.vaha.local>
Message-ID: <1706639.xOIDefy9Bq@even-i700>

On mercredi 4 octobre 2017 11:11:28 CEST Rahkonen Jukka (MML) wrote:
> Hi,
> 
> I was playing with kernel filters in VRT and using this really applies
> sharpen filter on-the-fly when looking the image at native resolution with
> QGIS:
> 
> <VRTRasterBand dataType="Byte" band="1">
>     <ColorInterp>Red</ColorInterp>
>     <KernelFilteredSource>
>       <SourceFilename relativeToVRT="1">image.tif</SourceFilename>
>       <SourceBand>1</SourceBand>
>       <SourceProperties RasterXSize="12000" RasterYSize="12000"
> DataType="Byte" BlockXSize="12000" BlockYSize="1" /> <SrcRect xOff="0"
> yOff="0" xSize="12000" ySize="12000" />
>       <DstRect xOff="0" yOff="0" xSize="12000" ySize="12000" />
>         <Kernel normalized="0">
>           <Size>3</Size>
>            <Coefs>0 -1 0 -1 5 -1 0 -1 0</Coefs>
>   </Kernel>
>     </KernelFilteredSource>
>   </VRTRasterBand>
> 
> However, filter is not applied to overviews which means that image looks
> different when I zoom out. Is this the intended behavior?

I guess not from a user point of view. But looking at the code, I see:

/* -------------------------------------------------------------------- */
/*      For now we don't support filtered access to non-full            */
/*      resolution requests. Just collect the data directly without     */
/*      any operator.                                                   */
/* -------------------------------------------------------------------- */
    if( nBufXSize != nXSize || nBufYSize != nYSize )
    {
        return VRTComplexSource::RasterIO( nXOff, nYOff, nXSize, nYSize,
                                           pData, nBufXSize, nBufYSize,
                                           eBufType, nPixelSpace, nLineSpace,
                                           psExtraArg );
    }

(which means that over-sampling will also not apply the kernel)


So seems the issue is "known". Probably that documenting this limitation should be done for 
now.
Doc source is in frmts/vrt/vrt_tutorial.dox

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/6d9c56dc/attachment.html>

From even.rouault at spatialys.com  Thu Oct  5 03:34:07 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 12:34:07 +0200
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <800A1C4B99390947B3BAA86C02CBDB26159FAF83@S000014.PROD.SITAD.DK>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
 <1507056712555-0.post@n6.nabble.com>
 <800A1C4B99390947B3BAA86C02CBDB26159FAF83@S000014.PROD.SITAD.DK>
Message-ID: <2157862.F5q6UXq7RR@even-i700>

On mercredi 4 octobre 2017 08:58:25 CEST Casper Børgesen wrote:
> Hi Jukka
> 
> I tried only to discover that the error is probably about an invalid (?)
> layer name (-nln). ogr2ogr doesn't complain if I give it a layer name with
> a dash in the middle, like 'some-thing'. When appending data to the layer
> using the same layer name, I get the error message.
 
> I don't know if this type of layer names are indeed invalid and if so, the
> current behaviour of ogr2ogr not complaining is intended.

I cannot reproduce on Linux (and can't see why that would be Windows specific)

The following works fine for me:
ogr2ogr -f gpkg test.gpkg ../autotest/ogr/data/poly.shp -nln "a-b"
ogr2ogr -gt 100000 -update -append test.gpkg ../autotest/ogr/data/poly.shp -nln "a-b"

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/6690d6cb/attachment.html>

From caboe at sdfe.dk  Thu Oct  5 03:52:42 2017
From: caboe at sdfe.dk (=?iso-8859-1?Q?Casper_B=F8rgesen?=)
Date: Thu, 5 Oct 2017 10:52:42 +0000
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <2157862.F5q6UXq7RR@even-i700>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
 <1507056712555-0.post@n6.nabble.com>
 <800A1C4B99390947B3BAA86C02CBDB26159FAF83@S000014.PROD.SITAD.DK>
 <2157862.F5q6UXq7RR@even-i700>
Message-ID: <800A1C4B99390947B3BAA86C02CBDB26159FB240@S000014.PROD.SITAD.DK>

Hi Even

I have prepared a very small test data set:

2 shape files
1 BAT file
1 screenshot of my output

You can find it here: https://ufile.io/ravt2

I don't have access to a Linux machine at the moment, so I cannot test it on Linux. But I am curious to know if it works on Linux :)

Regards, Casper

From: Even Rouault [mailto:even.rouault at spatialys.com]
Sent: 5. oktober 2017 12:34
To: gdal-dev at lists.osgeo.org
Cc: Casper Børgesen <caboe at sdfe.dk>
Subject: Re: [gdal-dev] Problem with merging SHAPEs into SpatiaLite


On mercredi 4 octobre 2017 08:58:25 CEST Casper Børgesen wrote:

> Hi Jukka

>

> I tried only to discover that the error is probably about an invalid (?)

> layer name (-nln). ogr2ogr doesn't complain if I give it a layer name with

> a dash in the middle, like 'some-thing'. When appending data to the layer

> using the same layer name, I get the error message.

> I don't know if this type of layer names are indeed invalid and if so, the

> current behaviour of ogr2ogr not complaining is intended.



I cannot reproduce on Linux (and can't see why that would be Windows specific)



The following works fine for me:

ogr2ogr -f gpkg test.gpkg ../autotest/ogr/data/poly.shp -nln "a-b"

ogr2ogr -gt 100000 -update -append test.gpkg ../autotest/ogr/data/poly.shp -nln "a-b"



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/febd64d5/attachment-0001.html>

From even.rouault at spatialys.com  Thu Oct  5 04:14:54 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 13:14:54 +0200
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <800A1C4B99390947B3BAA86C02CBDB26159FB240@S000014.PROD.SITAD.DK>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
 <2157862.F5q6UXq7RR@even-i700>
 <800A1C4B99390947B3BAA86C02CBDB26159FB240@S000014.PROD.SITAD.DK>
Message-ID: <6685989.vdUbxjnR8i@even-i700>

On jeudi 5 octobre 2017 10:52:42 CEST Casper Børgesen wrote:
> Hi Even
> 
> I have prepared a very small test data set:
> 
> 2 shape files
> 1 BAT file
> 1 screenshot of my output
> 
> You can find it here: https://ufile.io/ravt2
> 
> I don't have access to a Linux machine at the moment, so I cannot test it on
> Linux. But I am curious to know if it works on Linux :)

Oh I wrongly assumed you used geopackage whereas you use sqlite

The difference is that the sqlite driver applies by default name laundering which will turn "a-
b" into a_b in the creation stage. So your append -nln "a-b" will match a non existing layer

Add -lco LAUNDER=NO to the creation stage and that will solve it.

> 
> Regards, Casper
> 
> From: Even Rouault [mailto:even.rouault at spatialys.com]
> Sent: 5. oktober 2017 12:34
> To: gdal-dev at lists.osgeo.org
> Cc: Casper Børgesen <caboe at sdfe.dk>
> Subject: Re: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
> 
> On mercredi 4 octobre 2017 08:58:25 CEST Casper Børgesen wrote:
> > Hi Jukka
> > 
> > 
> > 
> > I tried only to discover that the error is probably about an invalid (?)
> > 
> > layer name (-nln). ogr2ogr doesn't complain if I give it a layer name with
> > 
> > a dash in the middle, like 'some-thing'. When appending data to the layer
> > 
> > using the same layer name, I get the error message.
> > 
> > I don't know if this type of layer names are indeed invalid and if so, the
> > 
> > current behaviour of ogr2ogr not complaining is intended.
> 
> I cannot reproduce on Linux (and can't see why that would be Windows
> specific)
> 
> 
> 
> The following works fine for me:
> 
> ogr2ogr -f gpkg test.gpkg ../autotest/ogr/data/poly.shp -nln "a-b"
> 
> ogr2ogr -gt 100000 -update -append test.gpkg ../autotest/ogr/data/poly.shp
> -nln "a-b"
> 
> 
> 
> Even
> 
> 
> 
> --
> 
> Spatialys - Geospatial professional services
> 
> http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/f92ca294/attachment.html>

From even.rouault at spatialys.com  Thu Oct  5 04:58:09 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 13:58:09 +0200
Subject: [gdal-dev] Caution if forking the github mirror those last 2 days
Message-ID: <18624419.qVBXTFZlu1@even-i700>

Hi,

There was accidental direct git commits starting 2 days ago to the https://
github.com/OSGeo/gdal mirror that somewhat messed up the svn->git 
mirroring. I've "cancelled" them by force pushing my local version.
That means that anyone having forked the github mirror those last 2 days 
will have to recreate it from scratch and re-apply their changes.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/aa5c0e05/attachment.html>

From koiralasujan at gmail.com  Thu Oct  5 04:59:06 2017
From: koiralasujan at gmail.com (sujankoirala2)
Date: Thu, 5 Oct 2017 04:59:06 -0700 (MST)
Subject: [gdal-dev] gdalwarp resampling_method option
Message-ID: <1507204746958-0.post@n6.nabble.com>

Hi there,
I was wondering if it would be possible to get the sum instead of the mean
or (any other regridding method). In our data, in many cases we need to
aggregate mass to coarser resolution. In theory, we can just multiply the
output of average method with number of pixels. But, due to differing size
of valid pixels (non nodata values) in each window, it won't produce an
accurate result.
I would be grateful if anyone can point me to 1) an alternate way to get the
number of valid pixels in each regridding window) or 2) get the sum within
the regridding window or 3) the location in the source where average method
of resampling is implemented so that I can edit the source and build from
scratch.
Thank you.





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Thu Oct  5 05:20:02 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 5 Oct 2017 05:20:02 -0700 (MST)
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <6685989.vdUbxjnR8i@even-i700>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
 <1507056712555-0.post@n6.nabble.com>
 <800A1C4B99390947B3BAA86C02CBDB26159FAF83@S000014.PROD.SITAD.DK>
 <2157862.F5q6UXq7RR@even-i700>
 <800A1C4B99390947B3BAA86C02CBDB26159FB240@S000014.PROD.SITAD.DK>
 <6685989.vdUbxjnR8i@even-i700>
Message-ID: <1507206002635-0.post@n6.nabble.com>

Hi,

I have a bit similar problem with making queries with SQLite SQL dialect if
shapefile name has numbers.
For example this succeeds fine with GDAL 2.3dev on Windows:

ogrinfo -sql "select * from test2000" test2000.shp

but this does not


ogrinfo -dialect sqlite -sql "select * from test2000" test2000.shp
INFO: Open of `test2000.shp'
      using driver `ESRI Shapefile' successful.
ERROR 1: Cannot create virtual table for layer 'test2000' : CREATE VIRTUAL:
inva
lid SQL statement : CREATE TABLE "test2000"("KUNTANUMER"
VARCHAR(3),"KUNTANIMI"
VARCHAR(18),"MAAKUNTA" VARCHAR(2),"AVI" VARCHAR(2),"ELY"
VARCHAR(2),"OGR_STYLE"
VARCHAR(37),OGR_STYLE VARCHAR HIDDEN,"GEOMETRY" BLOB_POLYGON_XYZ_0,
OGR_NATIVE_D
ATA VARCHAR, OGR_NATIVE_MEDIA_TYPE VARCHAR)
ERROR 1: In ExecuteSQL(): sqlite3_prepare_v2(select * from test2000):
  no such table: test2000

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Thu Oct  5 06:49:08 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 15:49:08 +0200
Subject: [gdal-dev] Fwd: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed and
	memory improvement
Message-ID: <11435221.utSXye5SVc@even-i700>

Hi,

I've just done changes in GDAL to be able to use the newly released openjpeg version: 
https://trac.osgeo.org/gdal/ticket/7074

For trunk,
- for linux builds, autoconf now uses pkg-config to be able to support more easily the /usr/
include/openjpeg-2.X path pattern
- for windows build, your option OPENJPEG_CFLAGS option now must point directly to the 
the include/openjpeg-2.X path

For branches/2.2, I've just extended the previous painful pattern to handle openjpeg 
versions.
(if you use GDAL 2.2.2 unmodified, you can just copy rename/symlink the include/
openjpeg-2.3 to include/openjpeg-2.2, and that will build fine as well)

Even

----------  Forwarded Message  ----------

Subject: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed and memory improvement
Date: jeudi 5 octobre 2017, 02:42:41 CEST
From: Antonin - OpenJPEG <info at openjpeg.org>
To: openjpeg at googlegroups.com <openjpeg at googlegroups.com>

Good news everyone !

OpenJPEG 2.3.0 is released today:
https://github.com/uclouvain/openjpeg/releases/tag/v2.3.0

This new release finalizes the work made by Even Rouault and funded by several academic 
institutions and archival organizations to make OpenJPEG significantly faster and safer.

In addition to what has been done in v2.2.0 (multithreading at decoding, speed 
optimizations, memory consumption reduction, etc, see http://www.openjpeg.org/
2017/08/10/OpenJPEG-2.2.0-released for details), this release adds improvement to sub-tile 
decoding.

Now when you handle a huge single tile image and only wants to decode a small part of it, 
only the window of interest is actually processed: sounds quite natural but I can ensure it 
wasn't that easy to implement. This leads to drastic speed and memory improvements as 
they now only depend on the size of the window and not on the original image size. This 
release also adds the ability to decode only a subset of components.

Overall, if we compare performances of OpenJPEG before all Even's optimizations (v2.1.2) 
and the ones reached by the new v2.3.0 release, we observe a 55-60% speed improvement on 
a single thread whole image decoding (even more on big images like 10000x10000). Memory 
consumption is also drastically reduced on mega-image decoding: for example, for a full 
decoding of a single tile 8000x12000 image, it is reduced from 2 to 1.3 GB RAM. But more 
importantly, OpenJPEG is now a workable solution for workflows involving partial decoding.

Benchmarks are hard to compare as there are many variables that can influence the results: 
so if you are an OpenJPEG user, please download and try this new release within your 
workflow ... And share your feedback, that would be highly appreciated.

As indicated above and described in a previous post (https://groups.google.com/d/msg/
openjpeg/CltNQpbbwm4/jajpDKq0AAAJ), all this has been made possible thanks to a 
funding from academic institutions and archival organizations, namely:
- Wellcome Library
- Stanford University
- Nationale Bibliotheek van Nederland (KBNL)
- University of Michigan
- University of California, Los Angeles (UCLA)

… And logistic support from the International Image Interoperability Framework (IIIF), the 
Council on Library and Information Resources (CLIR), intoPIX, and of course the Image and 
Signal Processing Group (ISPGroup) from University of Louvain (UCL, Belgium) hosting the 
OpenJPEG project. Thanks to all of them !

Many thanks also to Even Rouault, the developper who actually implemented these 
improvements, and of course to all contributors having suggested fixes or enhancements.

Enjoy,

Antonin

More info:
News: https://github.com/uclouvain/openjpeg/blob/v2.2.0/NEWS.md
Changelog: https://github.com/uclouvain/openjpeg/blob/v2.2.0/CHANGELOG.md
Full Changelog: https://github.com/uclouvain/openjpeg/compare/v2.1.2...v2.2.0

-- 
You are subscribed to the mailing-list of the OpenJPEG project (www.openjpeg.org)
To post: email to openjpeg at googlegroups.com
To unsubscribe: email to openjpeg+unsubscribe at googlegroups.com
For more options: visit http://groups.google.com/group/openjpeg
OpenJPEG is mainly supported by : 
* UCL Image and Signal Processing Group (http://sites.uclouvain.be/ispgroup) 
* IntoPIX (www.intopix.com)

-----------------------------------------
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/7fff0f4a/attachment-0001.html>

From chippy2005 at gmail.com  Thu Oct  5 10:46:32 2017
From: chippy2005 at gmail.com (Tim Waters)
Date: Thu, 5 Oct 2017 18:46:32 +0100
Subject: [gdal-dev] Potential issue with gdaladdo overviews setting alpha
 channel to nodata value instead of zero
Message-ID: <CAOKL=GwKqD1DGLEUDUK0p90zUuP21YmZygF+Fe7b7M1tKpf66A@mail.gmail.com>

Hello,

I'm seeing an issue which is present in 2.2.2 (tags/2.2.2 from github) and
seen in 1.11.3 (Ubuntu 16.04) but not present in 1.10.1 (Ubuntu 14.04).

If a raster with an alpha channel has nodata set, and overviews via
gdaladdo are created, the overviews use the nodata value for the value of
the alpha channel.  However, using the nearest resampling method correctly
sets the alpha to zero. All other resampling methods except nearest seem to
give the same wrong result.

I've created a repository with all the files and readme containing the
workflow.
https://github.com/timwaters/gdal_gdaladdo_issue with screenshots of the
expected and observed files opened in Gimp to view the pixel values.

The use case is mapwarper.net where users upload ungeoreferenced images,
they get converted to tifs and have overviews added, then they can mask
them (gdal_rasterize) and then warp the masked files, with overviews added
finally. I'm updating the server to run on Ubuntu 16.04 and will have to
compile gdal.

Flow is:

#Apply overviews to ungeoreferenced raster
gdaladdo -r average treasure_island.tif 2 4 8 16

#Rasterise ungeoreferenced raster with the cropping mask
gdal_rasterize -i  -b 1 -b 2 -b 3 -burn 17 -burn 17 -burn 17  20.gml -l
features treasure_island.tif

#Georeference & warp the raster
gdal_translate -a_srs '+init=epsg:4326' -of VRT treasure_island.tif
temp.vrt  -gcp 100.38, 83.096, -122.377, 37.830 -gcp 430.1966, 370.08,
-122.363, 37.8207 -gcp 313.69, 61.68, -122.368, 37.831
gdalwarp -rn  -dstalpha -srcnodata '17 17 17' -s_srs 'EPSG:4326' temp.vrt
treasure_island_warped.tif -co TILED=YES -co COMPRESS=LZW

#Apply overviews to georeferenced raster
gdaladdo -r average treasure_island_warped.tif 2 4 8 16

Expected - transparent areas in overviews should be 17,17,17 with alpha
channel set to 0
Observed - transparent areas in overviews are 17,17,17 with alpha also set
to 17

Potential workarounds are 1) to set the nodata value to 0 instead of 17,
however a few maps uploaded are black and white scans and so this might not
be good for those maps which have pure black in them (that's why I'm using
the 17 value), and 2) to use nearest neighbour for resampling, but it does
not look good at all online.

many thanks in advance and your help is appreciated!

Regards,

Tim
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/0637efbc/attachment.html>

From mwtoews at gmail.com  Thu Oct  5 12:55:30 2017
From: mwtoews at gmail.com (Mike Toews)
Date: Fri, 6 Oct 2017 08:55:30 +1300
Subject: [gdal-dev] gdalwarp resampling_method option
In-Reply-To: <1507204746958-0.post@n6.nabble.com>
References: <1507204746958-0.post@n6.nabble.com>
Message-ID: <CAM2FmMrXKvfouWzCNMCwMFR7=Gr=TzXVOpKA5MRwgbnegOwSHg@mail.gmail.com>

Hi,

I requested this feature 2 years ago:
https://trac.osgeo.org/gdal/ticket/6015

I probably had some workaround in Python, but I can't recall any details.

Cheers,
Mike

On 6 October 2017 at 00:59, sujankoirala2 <koiralasujan at gmail.com> wrote:
> Hi there,
> I was wondering if it would be possible to get the sum instead of the mean
> or (any other regridding method). In our data, in many cases we need to
> aggregate mass to coarser resolution. In theory, we can just multiply the
> output of average method with number of pixels. But, due to differing size
> of valid pixels (non nodata values) in each window, it won't produce an
> accurate result.
> I would be grateful if anyone can point me to 1) an alternate way to get the
> number of valid pixels in each regridding window) or 2) get the sum within
> the regridding window or 3) the location in the source where average method
> of resampling is implemented so that I can edit the source and build from
> scratch.
> Thank you.

From even.rouault at spatialys.com  Thu Oct  5 14:10:33 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 23:10:33 +0200
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <1507206002635-0.post@n6.nabble.com>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
 <6685989.vdUbxjnR8i@even-i700> <1507206002635-0.post@n6.nabble.com>
Message-ID: <2866174.RREZFGioJl@even-i700>

On jeudi 5 octobre 2017 05:20:02 CEST jratike80 wrote:
> Hi,
> 
> I have a bit similar problem with making queries with SQLite SQL dialect if
> shapefile name has numbers.
> For example this succeeds fine with GDAL 2.3dev on Windows:
> 
> ogrinfo -sql "select * from test2000" test2000.shp
> 
> but this does not

> 
> 
> ogrinfo -dialect sqlite -sql "select * from test2000" test2000.shp
> INFO: Open of `test2000.shp'
>       using driver `ESRI Shapefile' successful.
> ERROR 1: Cannot create virtual table for layer 'test2000' : CREATE VIRTUAL:
> inva
> lid SQL statement : CREATE TABLE "test2000"("KUNTANUMER"
> VARCHAR(3),"KUNTANIMI"
> VARCHAR(18),"MAAKUNTA" VARCHAR(2),"AVI" VARCHAR(2),"ELY"
> VARCHAR(2),"OGR_STYLE"
> VARCHAR(37),OGR_STYLE VARCHAR HIDDEN,"GEOMETRY" BLOB_POLYGON_XYZ_0,
> OGR_NATIVE_D
> ATA VARCHAR, OGR_NATIVE_MEDIA_TYPE VARCHAR)
> ERROR 1: In ExecuteSQL(): sqlite3_prepare_v2(select * from test2000):
>   no such table: test2000
> 

Nothing to do with the presence of numbers in the layer name. The issue here comes from 
the fact that your shapefile has a OGR_STYLE column, which confuses the SQLite SQL dialect 
wrapper that also tries to create a hidden OGR_STYLE column.
I've just pushed a fix in trunk.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/eacf193c/attachment.html>

From even.rouault at spatialys.com  Thu Oct  5 14:21:13 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 05 Oct 2017 23:21:13 +0200
Subject: [gdal-dev] Potential issue with gdaladdo overviews setting
	alpha channel to nodata value instead of zero
In-Reply-To: <CAOKL=GwKqD1DGLEUDUK0p90zUuP21YmZygF+Fe7b7M1tKpf66A@mail.gmail.com>
References: <CAOKL=GwKqD1DGLEUDUK0p90zUuP21YmZygF+Fe7b7M1tKpf66A@mail.gmail.com>
Message-ID: <10631309.2GdQpB13Gm@even-i700>

On jeudi 5 octobre 2017 18:46:32 CEST Tim Waters wrote:
> Hello,
> 
> I'm seeing an issue which is present in 2.2.2 (tags/2.2.2 from github) and
> seen in 1.11.3 (Ubuntu 16.04) but not present in 1.10.1 (Ubuntu 14.04).
> 
> If a raster with an alpha channel has nodata set, and overviews via
> gdaladdo are created, the overviews use the nodata value for the value of
> the alpha channel.  However, using the nearest resampling method correctly
> sets the alpha to zero. All other resampling methods except nearest seem to
> give the same wrong result.
> 
> I've created a repository with all the files and readme containing the
> workflow.
> https://github.com/timwaters/gdal_gdaladdo_issue with screenshots of the
> expected and observed files opened in Gimp to view the pixel values.
> 
> The use case is mapwarper.net where users upload ungeoreferenced images,
> they get converted to tifs and have overviews added, then they can mask
> them (gdal_rasterize) and then warp the masked files, with overviews added
> finally. I'm updating the server to run on Ubuntu 16.04 and will have to
> compile gdal.
> 
> Flow is:
> 
> #Apply overviews to ungeoreferenced raster
> gdaladdo -r average treasure_island.tif 2 4 8 16
> 
> #Rasterise ungeoreferenced raster with the cropping mask
> gdal_rasterize -i  -b 1 -b 2 -b 3 -burn 17 -burn 17 -burn 17  20.gml -l
> features treasure_island.tif
> 
> #Georeference & warp the raster
> gdal_translate -a_srs '+init=epsg:4326' -of VRT treasure_island.tif
> temp.vrt  -gcp 100.38, 83.096, -122.377, 37.830 -gcp 430.1966, 370.08,
> -122.363, 37.8207 -gcp 313.69, 61.68, -122.368, 37.831


> gdalwarp -rn  -dstalpha -srcnodata '17 17 17' -s_srs 'EPSG:4326' temp.vrt
> treasure_island_warped.tif -co TILED=YES -co COMPRESS=LZW

Tim,

The issue come from the above step. Basically this will add an alpha channel and also set 
implicitly a dest nodata value to 17. In GDAL extended TIFF, the nodata value applies to all 
channels. But when you have an alpha channel, having nodata values in addition doesn't 
really make sense and just confuse everything afterwards.
If you add -dstnodata none, this will fix the issue.
I think we should probably default to this behaviour when -dstalpha is specified.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171005/ef26d038/attachment.html>

From roel at huybrechts.re  Fri Oct  6 00:12:29 2017
From: roel at huybrechts.re (Roel Huybrechts)
Date: Fri, 06 Oct 2017 09:12:29 +0200
Subject: [gdal-dev] Compiling GDAL 2.2.2 with Informix (IDB) driver on
 Ubuntu 16.04
In-Reply-To: <2060043.XJInH6tJIv@even-i700>
References: <1506674995.2285568.1122228192.091C518F@webmail.messagingengine.com>
 <2060043.XJInH6tJIv@even-i700>
Message-ID: <1507273949.3458584.1129772576.7317F13B@webmail.messagingengine.com>

Hi Even,

> Is /opt/informix/lib/c++ in the search path for shared librariies ?
> That is: did you define LD_LIBRARY_PATH to point to it ? Or put it in
> /etc/ld.so.conf and ran ldconfig afterwards ?
I didn't define LD_LIBRARY_PATH or put it in ld.so.conf, as I didn't
have to do it in my Debian Testing VM and it worked there without that.
In the output I see that the Informix folders and libraries are listed
in the arguments of g++, so I don't think the problem has to do with
LD_LIBRARY_PATH or ld.so.conf?
g++ -std=gnu++11 /opt/informix/lib/esql/checkapi.o .libs/gdalserver.o
-o .libs/gdalserver  -L/opt/informix/lib/ -L/opt/informix/lib/esql -
L/opt/informix/lib/dmi -L/opt/informix/lib/c++ -lcrypt
/home/roel/software/gdal_compile/gdal/.libs/libgdal.so -L/usr/lib -L/usr/lib/x86_64-linux-
gnu/hdf5/serial -ljson-c -lfreexl -lqhull -lgeos_c -lwebp /usr/lib/x86_64-linux-
gnu/libsqlite3.so -lodbc -lodbcinst -lkmlbase -lkmldom -lkmlengine -
lkmlxsd -lkmlregionator /usr/lib/x86_64-linux-gnu/libexpat.so -lxerces-
c -lopenjp2 -lnetcdf -lhdf5_hl -lsz -lhdf5 /usr/lib/libmfhdfalt.so
/usr/lib/libdfalt.so -logdi -lgif -ljpeg -lgeotiff -ltiff -lpng -lpq
-lz -lpthread -lrt -ldl -lpcre /usr/lib/x86_64-linux-gnu/libcurl-
gnutls.so -lxml2 -lifsql -lifasf -lifgen -lifos -lifgls -lifglx -lifdmi
-lifc++ -pthread
To be sure, I added the Informix folders to /etc/ld.so.conf, but the
result is the same.
I then tried compiling with different versions of gcc/g++, also
resulting in the same error:./configure CC=gcc-4.7 CXX=g++-4.7 --with-idb=/opt/informix
./configure CC=gcc-4.8 CXX=g++-4.8 --with-idb=/opt/informix

To add to the puzzle: compiling with gcc-5 on Debian Testing works, but
with gcc-5 on Ubuntu 16.04 doesn't.. Although the version is slightly
different: gcc-5 (Debian 5.4.1-14) 5.4.1 20171003 versus gcc-5 (Ubuntu
5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609.
Any hints on how to proceed with debugging would be very helpful.
Thanks!
Kind regards,
Roel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171006/3ed9f429/attachment-0001.html>

From chippy2005 at gmail.com  Fri Oct  6 05:01:29 2017
From: chippy2005 at gmail.com (Tim Waters)
Date: Fri, 6 Oct 2017 13:01:29 +0100
Subject: [gdal-dev] Potential issue with gdaladdo overviews setting
 alpha channel to nodata value instead of zero
In-Reply-To: <10631309.2GdQpB13Gm@even-i700>
References: <CAOKL=GwKqD1DGLEUDUK0p90zUuP21YmZygF+Fe7b7M1tKpf66A@mail.gmail.com>
 <10631309.2GdQpB13Gm@even-i700>
Message-ID: <CAOKL=GyeBR+dOHG4NsgwBMeXSV_pdYX+RThP516UuAm_T0_ewA@mail.gmail.com>

Even,

Many thanks! This did fix the issue.
Agreed, having both nodata and transparency would confuse things, and I see
that this way also ensures that it works well with cropped maps with pure
black pixels.

Best regards,

Tim



On 5 October 2017 at 22:21, Even Rouault <even.rouault at spatialys.com> wrote:

> On jeudi 5 octobre 2017 18:46:32 CEST Tim Waters wrote:
>
> > Hello,
>
> >
>
> > I'm seeing an issue which is present in 2.2.2 (tags/2.2.2 from github)
> and
>
> > seen in 1.11.3 (Ubuntu 16.04) but not present in 1.10.1 (Ubuntu 14.04).
>
> >
>
> > If a raster with an alpha channel has nodata set, and overviews via
>
> > gdaladdo are created, the overviews use the nodata value for the value of
>
> > the alpha channel. However, using the nearest resampling method correctly
>
> > sets the alpha to zero. All other resampling methods except nearest seem
> to
>
> > give the same wrong result.
>
> >
>
> > I've created a repository with all the files and readme containing the
>
> > workflow.
>
> > https://github.com/timwaters/gdal_gdaladdo_issue with screenshots of the
>
> > expected and observed files opened in Gimp to view the pixel values.
>
> >
>
> > The use case is mapwarper.net where users upload ungeoreferenced images,
>
> > they get converted to tifs and have overviews added, then they can mask
>
> > them (gdal_rasterize) and then warp the masked files, with overviews
> added
>
> > finally. I'm updating the server to run on Ubuntu 16.04 and will have to
>
> > compile gdal.
>
> >
>
> > Flow is:
>
> >
>
> > #Apply overviews to ungeoreferenced raster
>
> > gdaladdo -r average treasure_island.tif 2 4 8 16
>
> >
>
> > #Rasterise ungeoreferenced raster with the cropping mask
>
> > gdal_rasterize -i -b 1 -b 2 -b 3 -burn 17 -burn 17 -burn 17 20.gml -l
>
> > features treasure_island.tif
>
> >
>
> > #Georeference & warp the raster
>
> > gdal_translate -a_srs '+init=epsg:4326' -of VRT treasure_island.tif
>
> > temp.vrt -gcp 100.38, 83.096, -122.377, 37.830 -gcp 430.1966, 370.08,
>
> > -122.363, 37.8207 -gcp 313.69, 61.68, -122.368, 37.831
>
>
>
>
>
> > gdalwarp -rn -dstalpha -srcnodata '17 17 17' -s_srs 'EPSG:4326' temp.vrt
>
> > treasure_island_warped.tif -co TILED=YES -co COMPRESS=LZW
>
>
>
> Tim,
>
>
>
> The issue come from the above step. Basically this will add an alpha
> channel and also set implicitly a dest nodata value to 17. In GDAL extended
> TIFF, the nodata value applies to all channels. But when you have an alpha
> channel, having nodata values in addition doesn't really make sense and
> just confuse everything afterwards.
>
> If you add -dstnodata none, this will fix the issue.
>
> I think we should probably default to this behaviour when -dstalpha is
> specified.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171006/3b7b7120/attachment.html>

From even.rouault at spatialys.com  Fri Oct  6 07:44:54 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 06 Oct 2017 16:44:54 +0200
Subject: [gdal-dev] Potential issue with gdaladdo overviews setting
	alpha channel to nodata value instead of zero
In-Reply-To: <CAOKL=GyeBR+dOHG4NsgwBMeXSV_pdYX+RThP516UuAm_T0_ewA@mail.gmail.com>
References: <CAOKL=GwKqD1DGLEUDUK0p90zUuP21YmZygF+Fe7b7M1tKpf66A@mail.gmail.com>
 <10631309.2GdQpB13Gm@even-i700>
 <CAOKL=GyeBR+dOHG4NsgwBMeXSV_pdYX+RThP516UuAm_T0_ewA@mail.gmail.com>
Message-ID: <2444169.6FG9tiYSJp@even-i700>

On vendredi 6 octobre 2017 13:01:29 CEST Tim Waters wrote:
> Even,
> 
> Many thanks! This did fix the issue.
> Agreed, having both nodata and transparency would confuse things, and I see
> that this way also ensures that it works well with cropped maps with pure
> black pixels.

I've changed in trunk the behaviour of gdalwarp as I suggested:
https://trac.osgeo.org/gdal/ticket/7075

The current behaviour is very likely a unintended side-effect of a GDAL 1.11.0 change: 
* gdalwarp: copy nodata values from source to dest if -dstnodata is not given ; add option 
to not set dest nodata with -dstnodata None (#5087)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171006/ff8b79a9/attachment.html>

From julien.michel at cnes.fr  Fri Oct  6 08:29:40 2017
From: julien.michel at cnes.fr (Julien Michel)
Date: Fri, 6 Oct 2017 17:29:40 +0200
Subject: [gdal-dev] vrt and too many open files error
Message-ID: <c0510790-dd49-a7a6-dc3e-12735445aafa@cnes.fr>

Dear all,

I have a VRT file, which I generated by a script I wrote, that simply 
mosaics 2750 tiles (images of the same size). I can not read back this 
vrt file with gdal, it says:

$ gdalinfo cloud_plain.vrt

ERROR 4: Too many open files
gdalinfo failed - unable to open 'cloud_plain.vrt'.

Reading this tracker [1], I think it should not complain ? Note that 
this happens when parsing the vrt file, not actually reading data. If I 
gdal_translate only a small portion spanning a few tiles, it will still 
complain. Shall I file a bug report or is this behavior expected ?

Regards,

Julien


[1] https://trac.osgeo.org/gdal/ticket/6604



-- 
Julien MICHEL
CNES - DSO/SI/2A


From even.rouault at spatialys.com  Fri Oct  6 08:55:46 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 06 Oct 2017 17:55:46 +0200
Subject: [gdal-dev] vrt and too many open files error
In-Reply-To: <c0510790-dd49-a7a6-dc3e-12735445aafa@cnes.fr>
References: <c0510790-dd49-a7a6-dc3e-12735445aafa@cnes.fr>
Message-ID: <2829090.ClH8iM0g7U@even-i700>

On vendredi 6 octobre 2017 17:29:40 CEST Julien Michel wrote:
> Dear all,
> 
> I have a VRT file, which I generated by a script I wrote, that simply
> mosaics 2750 tiles (images of the same size). I can not read back this
> vrt file with gdal, it says:
> 
> $ gdalinfo cloud_plain.vrt
> 
> ERROR 4: Too many open files
> gdalinfo failed - unable to open 'cloud_plain.vrt'.
> 
> Reading this tracker [1], I think it should not complain ? Note that
> this happens when parsing the vrt file, not actually reading data. If I
> gdal_translate only a small portion spanning a few tiles, it will still
> complain. Shall I file a bug report or is this behavior expected ?

Julien,

it is likely that if you built it at hand that your VRT sources lack a SourceProperties element

      <SourceProperties RasterXSize="xxx" RasterYSize="xxx" DataType="xxx" 
BlockXSize="xxx" BlockYSize="xxx" />

Without that element, GDAL must open each file, and you hit the 1024 file descriptor limit

~~~

That said, in theory the VRT driver could be improved to avoid having that element at all (and 
it would be desirable not having it). It is just needed so we can instanciate a ProxyDataset 
object since it needs to know those characteristics, but the VRT logic itself shouldn't need 
them until it identifies that it must read from the source. At the time where I improved that 
point in GDAL, I was still a bit unfamiliar with the code base and didn't dare touching that 
aspect ;-)


Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171006/41a7f1a4/attachment-0001.html>

From bradh at frogmouth.net  Fri Oct  6 17:56:26 2017
From: bradh at frogmouth.net (Brad Hards)
Date: Sat, 7 Oct 2017 11:56:26 +1100
Subject: [gdal-dev] Appending to an existing GeoPackage raster table
Message-ID: <001f01d33f07$1b7accf0$527066d0$@frogmouth.net>

I'm trying to find a way to append data to an existing geopackage raster
layer using GDAL.

The specific case is to use different sources (or different configurations
of a source like WMS) at different zoom levels, but extending an existing
table at the same zoom might also be useful.

As an example, consider a rendered map (like a OSM bright or humanitarian
style), where the level of detail you want at level 12 is different to level
8 or 15.
I can easily create a table at level 12, and add overviews, but the
overviews are just the same data made smaller. Instead, I want to render it
differently at each zoom level.

I tried using APPEND_DATASET, which does work for a new table, but not for
adding data to an existing table:
bradh at marginata:~/related_tables$ gdal_translate -projwin -68.1109 18.6664
-65.0914 17.7307 -projwin_srs EPSG:4326 -co APPEND_SUBDATASET=yes -co
TILING_SCHEME=GoogleMapsCompatible  wmssrc.xml -co RASTER_TABLE=out -of GPKG
out.gpkg
Input file size is 524288, 524288
ERROR 1: sqlite3_exec(CREATE TABLE "out" (id INTEGER PRIMARY KEY
AUTOINCREMENT,zoom_level INTEGER NOT NULL,tile_column INTEGER NOT
NULL,tile_row INTEGER NOT NULL,tile_data BLOB NOT NULL,UNIQUE (zoom_level,
tile_column, tile_row));CREATE TRIGGER "out_zoom_insert" BEFORE INSERT ON
"out" FOR EACH ROW BEGIN SELECT RAISE(ABORT, 'insert on table ''out''
violates constraint: zoom_level not specified for table in
gpkg_tile_matrix') WHERE NOT (NEW.zoom_level IN (SELECT zoom_level FROM
gpkg_tile_matrix WHERE lower(table_name) = lower('out'))) ; END; CREATE
TRIGGER "out_zoom_update" BEFORE UPDATE OF zoom_level ON "out" FOR EACH ROW
BEGIN SELECT RAISE(ABORT, 'update on table ''out'' violates constraint:
zoom_level not specified for table in gpkg_tile_matrix') WHERE NOT
(NEW.zoom_level IN (SELECT zoom_level FROM gpkg_tile_matrix WHERE
lower(table_name) = lower('out'))) ; END; CREATE TRIGGER
"out_tile_column_insert" BEFORE INSERT ON "out" FOR EACH ROW BEGIN SELECT
RAISE(ABORT, 'insert on table ''out'' violates constraint: tile_column
cannot be < 0') WHERE (NEW.tile_column < 0) ; SELECT RAISE(ABORT, 'insert on
table ''out'' violates constraint: tile_column must by < matrix_width
specified for table and zoom level in gpkg_tile_matrix') WHERE NOT
(NEW.tile_column < (SELECT matrix_width FROM gpkg_tile_matrix WHERE
lower(table_name) = lower('out') AND zoom_level = NEW.zoom_level)); END;
CREATE TRIGGER "out_tile_column_update" BEFORE UPDATE OF tile_column ON
"out" FOR EACH ROW BEGIN SELECT RAISE(ABORT, 'update on table ''out''
violates constraint: tile_column cannot be < 0') WHERE (NEW.tile_column < 0)
; SELECT RAISE(ABORT, 'update on table ''out'' violates constraint:
tile_column must by < matrix_width specified for table and zoom level in
gpkg_tile_matrix') WHERE NOT (NEW.tile_column < (SELECT matrix_width FROM
gpkg_tile_matrix WHERE lower(table_name) = lower('out') AND zoom_level =
NEW.zoom_level)); END; CREATE TRIGGER "out_tile_row_insert" BEFORE INSERT ON
"out" FOR EACH ROW BEGIN SELECT RAISE(ABORT, 'insert on table ''out''
violates constraint: tile_row cannot be < 0') WHERE (NEW.tile_row < 0) ;
SELECT RAISE(ABORT, 'insert on table ''out'' violates constraint: tile_row
must by < matrix_height specified for table and zoom level in
gpkg_tile_matrix') WHERE NOT (NEW.tile_row < (SELECT matrix_height FROM
gpkg_tile_matrix WHERE lower(table_name) = lower('out') AND zoom_level =
NEW.zoom_level)); END; CREATE TRIGGER "out_tile_row_update" BEFORE UPDATE OF
tile_row ON "out" FOR EACH ROW BEGIN SELECT RAISE(ABORT, 'update on table
''out'' violates constraint: tile_row cannot be < 0') WHERE (NEW.tile_row <
0) ; SELECT RAISE(ABORT, 'update on table ''out'' violates constraint:
tile_row must by < matrix_height specified for table and zoom level in
gpkg_tile_matrix') WHERE NOT (NEW.tile_row < (SELECT matrix_height FROM
gpkg_tile_matrix WHERE lower(table_name) = lower('out') AND zoom_level =
NEW.zoom_level)); END; ) failed: table "out" already exists
ERROR 1: Raster table out not correctly initialized due to missing call to
SetGeoTransform()

At this stage, the only thing I can think of is to create a bunch of tables
and merge them in some manual SQL. Any other suggestions?



From even.rouault at spatialys.com  Sat Oct  7 03:40:35 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 07 Oct 2017 12:40:35 +0200
Subject: [gdal-dev] Appending to an existing GeoPackage raster table
In-Reply-To: <001f01d33f07$1b7accf0$527066d0$@frogmouth.net>
References: <001f01d33f07$1b7accf0$527066d0$@frogmouth.net>
Message-ID: <1813584.t7BYrxGjhk@even-i700>

Hi,

> I'm trying to find a way to append data to an existing geopackage raster
> layer using GDAL.
> 
> The specific case is to use different sources (or different configurations
> of a source like WMS) at different zoom levels, but extending an existing
> table at the same zoom might also be useful.
> 
> As an example, consider a rendered map (like a OSM bright or humanitarian
> style), where the level of detail you want at level 12 is different to level
> 8 or 15.
> I can easily create a table at level 12, and add overviews, but the
> overviews are just the same data made smaller. Instead, I want to render it
> differently at each zoom level.

you can do that with "gdalwarp yoursource existing.gpkg -doo ZOOM_LEVEL=xxx"
This will insert the data at the requested zoom level.

> 
> I tried using APPEND_DATASET, which does work for a new table, but not for
> adding data to an existing table:

Yes, APPEND_SUBDATASET is to add new raster tables.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171007/419f038f/attachment.html>

From mj10777 at googlemail.com  Sat Oct  7 21:20:28 2017
From: mj10777 at googlemail.com (Mark Johnson)
Date: Sun, 8 Oct 2017 06:20:28 +0200
Subject: [gdal-dev] Appending to an existing GeoPackage raster table
Message-ID: <CAEEbjBjEbJ4YUJ_ZAALs_u1uS7aV_UL6ArAPyfQjTKWkDciRcw@mail.gmail.com>

>> I'm trying to find a way to append data to an existing geopackage raster
layer using GDAL.
My information on GeoPackages may be outdated, since the specification has
changed many times since I read it last.
But as far as I remember, the main goal was that a GeoPackage is a
complete/finished collection of data ready for deployment.

Even though it may be internally a Database, it should not be treated as
such.
So the word 'append' is inappropriate in this concept.

If the condition on which the original raster coverage was created no
longer applies, then a new raster coverage must be created that fulfill
these new conditions.

In this case you are extending the bounds of the raster coverage, which may
work when extending in a East/West direction, but not in a North/West
direction (assuming that North/West is 0,0). With mbtiles this would be no
problem since the use a world wide tms numbering for the tiles.

>> violates constraint: tile_column cannot be < 0'
>> violates constraint: tile_row cannot be < 0'

These errors imply that this is the case: the new tiles are out of bounds.

>> At this stage, the only thing I can think of is to create a bunch of
tables
and merge them in some manual SQL

Creating a new raster coverage, with new extent/bounds and sources should
be the idea.

On the fly I would say using a virtual file would be the best approach
- source 1: original GeoPackage
- source 2: the wms source

(Creating a GeoPackage of the wms source with the desired extent and use
that as 'source 2' might be a good idea)

Determine the final extent that will be needed for all zoom levels and use
gdalwarp (using the bounds parameters) to create a new GeoPackage raster
coverage from the virtual file with the new sources.

This should create the tiles correctly, merging the 2 sources together and
numbering the tiles correctly based on the given extent.

Theoretically this should work.

Mark Johnson, Berlin Germany
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171008/f065df75/attachment.html>

From bradh at frogmouth.net  Sun Oct  8 14:55:18 2017
From: bradh at frogmouth.net (Brad Hards)
Date: Mon, 9 Oct 2017 08:55:18 +1100
Subject: [gdal-dev] Appending to an existing GeoPackage raster table
In-Reply-To: <CAEEbjBjEbJ4YUJ_ZAALs_u1uS7aV_UL6ArAPyfQjTKWkDciRcw@mail.gmail.com>
References: <CAEEbjBjEbJ4YUJ_ZAALs_u1uS7aV_UL6ArAPyfQjTKWkDciRcw@mail.gmail.com>
Message-ID: <00cf01d34080$21e98520$65bc8f60$@frogmouth.net>

> My information on GeoPackages may be outdated, since the specification has
> changed many times since I read it last.
> But as far as I remember, the main goal was that a GeoPackage is a
> complete/finished collection of data ready for deployment.
I'm reasonably familiar with GeoPackage, and don't recall it ever only being 
considered a "finished" product. The current interop experiment (related 
tables) is actually about recording extra observations in GeoPackage.

> Even though it may be internally a Database, it should not be treated as 
> such.
> So the word 'append' is inappropriate in this concept.
"Citation needed" :-)

> If the condition on which the original raster coverage was created no longer
> applies, then a new raster coverage must be created that fulfill these new
> conditions.
That is a narrow and inappropriate view. In any case, I'm happy to build the 
whole raster, just need a way to do it.

> In this case you are extending the bounds of the raster coverage, which may
> work when extending in a East/West direction, but not in a North/West
> direction (assuming that North/West is 0,0). With mbtiles this would be no
> problem since the use a world wide tms numbering for the tiles.
You can do this with GeoPackage too, supported by GDAL as one of the tiling 
schemes (http://www.gdal.org/drv_geopackage_raster.html)

> Creating a new raster coverage, with new extent/bounds and sources should be
> the idea.
This is my main need. I was only looking for how to create a raster coverage 
with different content at different zoom levels.  I will try the gdalwarp 
solution next, although I did make it work with a simple bash loop and some 
spatialite SQL commands.

Brad




From caboe at sdfe.dk  Sun Oct  8 23:00:52 2017
From: caboe at sdfe.dk (=?iso-8859-1?Q?Casper_B=F8rgesen?=)
Date: Mon, 9 Oct 2017 06:00:52 +0000
Subject: [gdal-dev] Problem with merging SHAPEs into SpatiaLite
In-Reply-To: <6685989.vdUbxjnR8i@even-i700>
References: <800A1C4B99390947B3BAA86C02CBDB26159FAD1A@S000014.PROD.SITAD.DK>
 <2157862.F5q6UXq7RR@even-i700>
 <800A1C4B99390947B3BAA86C02CBDB26159FB240@S000014.PROD.SITAD.DK>
 <6685989.vdUbxjnR8i@even-i700>
Message-ID: <800A1C4B99390947B3BAA86C02CBDB26159FB62B@S000014.PROD.SITAD.DK>

Hi Even

Thanks for your reply, I will try the option. I just wonder, if the driver performs automatical laundering, shouldn't it automatically transform any requests too? So when asked if a layer exists, launder the incoming name and compare to that or does it have other complications down the road?

Regards, Casper

From: Even Rouault [mailto:even.rouault at spatialys.com]
Sent: 5. oktober 2017 13:15
To: Casper Børgesen <caboe at sdfe.dk>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Problem with merging SHAPEs into SpatiaLite


On jeudi 5 octobre 2017 10:52:42 CEST Casper Børgesen wrote:

> Hi Even

>

> I have prepared a very small test data set:

>

> 2 shape files

> 1 BAT file

> 1 screenshot of my output

>

> You can find it here: https://ufile.io/ravt2

>

> I don't have access to a Linux machine at the moment, so I cannot test it on

> Linux. But I am curious to know if it works on Linux :)



Oh I wrongly assumed you used geopackage whereas you use sqlite



The difference is that the sqlite driver applies by default name laundering which will turn "a-b" into a_b in the creation stage. So your append -nln "a-b" will match a non existing layer



Add -lco LAUNDER=NO to the creation stage and that will solve it.



>

> Regards, Casper

>

> From: Even Rouault [mailto:even.rouault at spatialys.com]

> Sent: 5. oktober 2017 12:34

> To: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

> Cc: Casper Børgesen <caboe at sdfe.dk<mailto:caboe at sdfe.dk>>

> Subject: Re: [gdal-dev] Problem with merging SHAPEs into SpatiaLite

>

> On mercredi 4 octobre 2017 08:58:25 CEST Casper Børgesen wrote:

> > Hi Jukka

> >

> >

> >

> > I tried only to discover that the error is probably about an invalid (?)

> >

> > layer name (-nln). ogr2ogr doesn't complain if I give it a layer name with

> >

> > a dash in the middle, like 'some-thing'. When appending data to the layer

> >

> > using the same layer name, I get the error message.

> >

> > I don't know if this type of layer names are indeed invalid and if so, the

> >

> > current behaviour of ogr2ogr not complaining is intended.

>

> I cannot reproduce on Linux (and can't see why that would be Windows

> specific)

>

>

>

> The following works fine for me:

>

> ogr2ogr -f gpkg test.gpkg ../autotest/ogr/data/poly.shp -nln "a-b"

>

> ogr2ogr -gt 100000 -update -append test.gpkg ../autotest/ogr/data/poly.shp

> -nln "a-b"

>

>

>

> Even

>

>

>

> --

>

> Spatialys - Geospatial professional services

>

> http://www.spatialys.com





--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171009/03cb56bb/attachment.html>

From harvey.l.berger at gmail.com  Mon Oct  9 09:07:49 2017
From: harvey.l.berger at gmail.com (Harvey Berger)
Date: Mon, 9 Oct 2017 09:07:49 -0700
Subject: [gdal-dev] GDAL Cubic Interpolation
Message-ID: <CACRD7o6qMz-LY_Pj2efGbgVnVKRoxk21XYVQ53rEvZ664Wbg-A@mail.gmail.com>

Hi,

I subsampled a GLOBE image of elevation data by a subsampling factor of 12
to a resolution of 0.1 deg x 0.1 deg on integer multiples of 0.1 deg. The
original GLOBE image is: Latitude from +90-1/240 deg to -90+1/240 deg in
1/120 deg steps, and Longitude from -180+1/240 deg to +180-1/240 deg in
1/120 deg steps.

I understand that the cubic interpolation method in gdalwarp accounts for
the subsampling factor, so 48x48 adjacent pixels influence the target pixel
for a subsampling factor of 12.

Does gdalwarp assume the original image is a sphere, where 48x48 adjacent
pixels influence all target pixels, or a rectangle, where a limited number
of pixels influence the target pixels at the top, bottom, left, and right
edges of the subsampled image? If gdalwarp assumes the original image is a
rectangle and uses a modified interpolation method at the four edges of the
subsampled image, the modified method affects two rows and two columns at
the top, bottom, left and right edges of the subsampled image. If gdalwarp
assumes the original image is a rectangle, is there a command option so
gdalwarp considers spherical wrapping when interpolating? Alternatively, I
assume I could augment the original GLOBE image with the appropriate
additional rows and columns on all four edges. If I did that, how do I tell
gdalwarp the extent of the augmented input image?

Kind regards,

Harvey
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171009/8e680d68/attachment-0001.html>

From even.rouault at spatialys.com  Mon Oct  9 09:24:00 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 09 Oct 2017 18:24:00 +0200
Subject: [gdal-dev] GDAL Cubic Interpolation
In-Reply-To: <CACRD7o6qMz-LY_Pj2efGbgVnVKRoxk21XYVQ53rEvZ664Wbg-A@mail.gmail.com>
References: <CACRD7o6qMz-LY_Pj2efGbgVnVKRoxk21XYVQ53rEvZ664Wbg-A@mail.gmail.com>
Message-ID: <1716577.oATaYCCh7f@even-i700>

Harvey,

> 
> I subsampled a GLOBE image of elevation data by a subsampling factor of 12
> to a resolution of 0.1 deg x 0.1 deg on integer multiples of 0.1 deg. The
> original GLOBE image is: Latitude from +90-1/240 deg to -90+1/240 deg in
> 1/120 deg steps, and Longitude from -180+1/240 deg to +180-1/240 deg in
> 1/120 deg steps.
> 
> I understand that the cubic interpolation method in gdalwarp accounts for
> the subsampling factor, so 48x48 adjacent pixels influence the target pixel
> for a subsampling factor of 12.
> 
> Does gdalwarp assume the original image is a sphere, where 48x48 adjacent
> pixels influence all target pixels, or a rectangle, where a limited number
> of pixels influence the target pixels at the top, bottom, left, and right
> edges of the subsampled image?

A rectangle, with fallback to bilinear resampling at edges

> If gdalwarp assumes the original image is a
> rectangle and uses a modified interpolation method at the four edges of the
> subsampled image, the modified method affects two rows and two columns at
> the top, bottom, left and right edges of the subsampled image. If gdalwarp
> assumes the original image is a rectangle, is there a command option so
> gdalwarp considers spherical wrapping when interpolating? 

Nothing directly straightforward. Your below plan is the a reasonable solution.

> Alternatively, I
> assume I could augment the original GLOBE image with the appropriate
> additional rows and columns on all four edges. If I did that, how do I tell
> gdalwarp the extent of the augmented input image?

You'll have to recreate a properly referenced input image, for example with

 gdal_translate -ullr upperleftx upperlefty lowerleftx lowerlefty

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171009/172cba80/attachment.html>

From jluis at ualg.pt  Mon Oct  9 09:32:37 2017
From: jluis at ualg.pt (Joaquim Luis)
Date: Mon, 09 Oct 2017 17:32:37 +0100
Subject: [gdal-dev] GDAL Cubic Interpolation
In-Reply-To: <1716577.oATaYCCh7f@even-i700>
References: <CACRD7o6qMz-LY_Pj2efGbgVnVKRoxk21XYVQ53rEvZ664Wbg-A@mail.gmail.com>
 <1716577.oATaYCCh7f@even-i700>
Message-ID: <op.y7un8n0adbaoe8@macmarilu>

Alternatively,  use GMT's grdsample with -fg option to force the knowledge  
(if it's not already in the file) that the Earth is round.

http://gmt.soest.hawaii.edu/doc/5.4.2/grdsample.html



>
> Harvey,
>
>
>>
>
>> I subsampled a GLOBE image of elevation data by a subsampling factor of  
>> 12
>
>> to a resolution of 0.1 deg x 0.1 deg on integer multiples of 0.1 deg.  
>> The
>
>> original GLOBE image is: Latitude from +90-1/240 deg to -90+1/240 deg in
>
>> 1/120 deg steps, and Longitude from -180+1/240 deg to +180-1/240 deg in
>
>> 1/120 deg steps.
>
>>
>
>> I understand that the cubic interpolation method in gdalwarp accounts  
>> for
>
>> the subsampling factor, so 48x48 adjacent pixels influence the target  
>> pixel
>
>> for a subsampling factor of 12.
>
>>
>
>> Does gdalwarp assume the original image is a sphere, where 48x48  
>> adjacent
>
>> pixels influence all target pixels, or a rectangle, where a limited  
>> number
>
>> of pixels influence the target pixels at the top, bottom, left, and  
>> right
>
>> edges of the subsampled image?
>
>
> A rectangle, with fallback to bilinear resampling at edges
>
>
>> If gdalwarp assumes the original image is a
>
>> rectangle and uses a modified interpolation method at the four edges of  
>> the
>
>> subsampled image, the modified method affects two rows and two columns  
>> at
>
>> the top, bottom, left and right edges of the subsampled image. If  
>> gdalwarp
>
>> assumes the original image is a rectangle, is there a command option so
>
>> gdalwarp considers spherical wrapping when interpolating?
>
>
> Nothing directly straightforward. Your below plan is the a reasonable  
> solution.
>
>
>> Alternatively, I
>
>> assume I could augment the original GLOBE image with the appropriate
>
>> additional rows and columns on all four edges. If I did that, how do I  
>> tell
>
>> gdalwarp the extent of the augmented input image?
>
>
> You'll have to recreate a properly referenced input image, for example  
> with
>
>
> gdal_translate -ullr upperleftx upperlefty lowerleftx lowerlefty
>
>
> Even
>
>
> --
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171009/91193957/attachment.html>

From sean at mapbox.com  Mon Oct  9 19:18:41 2017
From: sean at mapbox.com (Sean Gillies)
Date: Mon, 9 Oct 2017 20:18:41 -0600
Subject: [gdal-dev] vsicurl configuration design decisions
Message-ID: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>

Hi all,

It's written in
http://gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsicurl
:

> Starting with GDAL 2.3, options can be passed in the filename with the
following syntax: /vsicurl/option1=val1[,optionN=valN]*,url=http://...

I'd like to discuss the design decisions that are being made here before
this gets out into the world.

I'm uncomfortable with the way configuration is spread between environment
variables, config options that surface in the API, and also in identifiers.
I don't think it's a great idea to that expand the amount of configuration
in dataset identifiers. It's redundant, the syntax is complicated, and it
dilutes the network effects of reusing identifiers in our applications.

Are there specific advantages to this

  ogrinfo -so /vsicurl/max_retry=10,url=https://example.com/poly.shp

that we can't also have with a curl-style

  ogrinfo -so --max-retry=10 /vsicurl/https://example.com/poly.shp

or, better yet, in my opinion

  ogrinfo -so --max-retry=10 https://example.com/poly.shp

on the command line?

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171009/02011c20/attachment.html>

From warmerdam at pobox.com  Mon Oct  9 19:29:18 2017
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 9 Oct 2017 19:29:18 -0700
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
Message-ID: <CA+YzLBeA8xTvuAJ0W3aYa0d6Z794UOmQ48=vRgbyRk7G5jh2JA@mail.gmail.com>

Sean,

The obvious answer is that interfaces that are organized around the
dataset name do not make it easy to transport other parameters in a
way that is specific to one dataset.

While I worry a bit about complex dataset syntaxes I do think there is
a power to embedding these options in the dataset name.  I sometimes
wish we had a more generalized way of wrapping options into dataset
names with clear escaping rules, and a way to avoid interference
between different levels of wrapping and virtualization.

I would add that I requested a mechanism to control /vsicurl/ retry
strategies as we this machinery widely and failure to do "normal
retries" in /vsicurl was a problem for us.

Best regards,
Frank


On Mon, Oct 9, 2017 at 7:18 PM, Sean Gillies <sean at mapbox.com> wrote:
> Hi all,
>
> It's written in
> http://gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsicurl:
>
>> Starting with GDAL 2.3, options can be passed in the filename with the
>> following syntax: /vsicurl/option1=val1[,optionN=valN]*,url=http://...
>
> I'd like to discuss the design decisions that are being made here before
> this gets out into the world.
>
> I'm uncomfortable with the way configuration is spread between environment
> variables, config options that surface in the API, and also in identifiers.
> I don't think it's a great idea to that expand the amount of configuration
> in dataset identifiers. It's redundant, the syntax is complicated, and it
> dilutes the network effects of reusing identifiers in our applications.
>
> Are there specific advantages to this
>
>   ogrinfo -so /vsicurl/max_retry=10,url=https://example.com/poly.shp
>
> that we can't also have with a curl-style
>
>   ogrinfo -so --max-retry=10 /vsicurl/https://example.com/poly.shp
>
> or, better yet, in my opinion
>
>   ogrinfo -so --max-retry=10 https://example.com/poly.shp
>
> on the command line?
>
> --
> Sean Gillies
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com
light and sound - activate the windows |
and watch the world go round - Rush    | Geospatial Software Developer

From even.rouault at spatialys.com  Tue Oct 10 03:02:58 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 10 Oct 2017 12:02:58 +0200
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
Message-ID: <3843425.u1lSgM4hFX@even-i700>

Hi Sean,

> 
> It's written in
> http://gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsi
> curl
> > Starting with GDAL 2.3, options can be passed in the filename with the
> 
> following syntax: /vsicurl/option1=val1[,optionN=valN]*,url=http://...
> 
> I'd like to discuss the design decisions that are being made here before
> this gets out into the world.
> 
> I'm uncomfortable with the way configuration is spread between environment
> variables, config options that surface in the API,

Just a precision: GDAL only reads configuration options with CPLGetConfigOption(key). 
Those can be implictly set through environment variables of the same name or with 
CPLSetConfigOption(key, value).

> and also in identifiers.
> I don't think it's a great idea to that expand the amount of configuration
> in dataset identifiers. It's redundant, the syntax is complicated, 

Frank answered on the main motivations.

> and it
> dilutes the network effects of reusing identifiers in our applications.

Didn't understand what you meant with the above sentence.

> 
> Are there specific advantages to this
> 
>   ogrinfo -so /vsicurl/max_retry=10,url=https://example.com/poly.shp
> 
> that we can't also have with a curl-style
> 
>   ogrinfo -so --max-retry=10 /vsicurl/https://example.com/poly.shp
> 
> or, better yet, in my opinion
> 
>   ogrinfo -so --max-retry=10 https://example.com/poly.shp
> 
> on the command line?

One issue with you proposal is that it would require ogrinfo (or any utility) to go from the 
highest level abstraction layers of GDAL to the lowest ones.

When ogrinfo is provided
"/vsicurl/max_retry=10,url=https://example.com/poly.shp",
this is just a string used as a dataset name

It happily feeds it into GDALOpenEx(), which in turns proposes it sequentially to all drivers

The shapefile driver tries this string with VSIFOpenL(), which in turns iterates over all virtual 
file systems. The /vsicurl/ VFS happens to recognize it, manages to open the file. The 
shapefile driver can read the few first bytes from it and recognizes that it is a header of a 
shapefile, etc..

So in the current design neither the utility, nor GDALOpenEx(), or the drivers themselves 
really make a sense of that string. This is quite a strength at the architectural level. This also 
enables to pass such a string in a VRT file for example.

Regarding the direct use of http:// https:// , I also find it is a bit unfortunate that we can't use 
them directly and vsicurl machinery would be implictly used. It turns that historically we have 
the HTTP driver that triggers on such dataset name (ingesting the whole file into /vsimem/, 
and proposing it in turn to other drivers). There's also a few other drivers (DODS, etc..) that 
trigger on such names.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/e11c141e/attachment.html>

From Rob.Langford at salford.gov.uk  Tue Oct 10 02:48:11 2017
From: Rob.Langford at salford.gov.uk (Langford, Robert)
Date: Tue, 10 Oct 2017 09:48:11 +0000
Subject: [gdal-dev] OGR2OGR WFS HTTP 504 but no ERRORLEVEL
Message-ID: <d40f354674784883aedffc6d8e31ae08@EX13-P-MBX10-W.salford.gov.uk>

Hi there,

Currently we have a process that loads data from an external WFS into Postgres from a nightly scheduled batch file on a Windows box.  Usually works fine and it reports on any errors that it encounters.  But recently we've been getting an HTTP 504 error and no features are written but the resultant ERRORLEVEL is still 0.

We've contacted the provider to hopefully resolve the error, but we were wondering why ogr2ogr isn't raising the ERRORLEVEL?

Currently using: GDAL 2.2.2

The WFS URL is:
"WFS:http://environment.data.gov.uk/ds/wfs?SERVICE=WFS&INTERFACE=ENVIRONMENTWFS--0896250c-3aaa-43e2-b783-a133522cb5e3&VERSION=1.0.0"

The layer name is:
ne_wfs_crow_act_2000_access_layer_england

Here's the metadata<http://environment.data.gov.uk/ds/catalogue/#/0896250c-3aaa-43e2-b783-a133522cb5e3>

A layer that works from the same service as an example is below:
"WFS:http://environment.data.gov.uk/ds/wfs?SERVICE=WFS&INTERFACE=ENVIRONMENTWFS--e819098e-e248-4a8f-b684-5a21ca521b9b&VERSION=1.0.0"
ne_wfs_national_parks_england

Command we're running is like:
ogr2ogr -append -f PostgreSQL %POSTGRES_CONNECTION% "WFS:http://environment.data.gov.uk/ds/wfs?SERVICE=WFS&INTERFACE=ENVIRONMENTWFS--0896250c-3aaa-43e2-b783-a133522cb5e3&VERSION=1.0.0" ne_wfs_crow_act_2000_access_layer_england -nln %POSTGRES_DESTINATION_TABLE% -preserve_fid --config OGR_TRUNCATE YES

Running the command manually gives the below error messages:
ERROR 1: HTTP error code : 504
ERROR 1: Error returned by server : HTTP error code : 504 (0)

(And with --debug ON you can find out "GDALVectorTranslate: 0 features written in layer"

But the %ERRORLEVEL% = 0

Could anyone advise if this a bug, or if not how we can detect such errors?

Many thanks,

Rob



DISCLAIMER: The information contained in this communication/message from Rob.Langford at salford.gov.uk sent on Tue Oct 10 10:58:39 2017 is confidential. It is intended solely for the addressee(s) gdal-dev at lists.osgeo.org

Access to this message by anyone else is unauthorised. If you are not the intended recipient, any disclosure, copying, or distribution of the message, or any action or omission taken by you in reliance on it, is prohibited and may be unlawful.
As a public body, Salford City Council may be required to disclose this email [or any response to it] under the Freedom of Information Act 2000, unless the information in it is covered by one of the exemptions in the Act. 
Please immediately contact the sender, Rob.Langford at salford.gov.uk if you have received this message in error. 

For the full disclaimer please access http://www.salford.gov.uk/e-mail.  Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/8b29670a/attachment-0001.html>

From Rob.Langford at salford.gov.uk  Tue Oct 10 01:40:36 2017
From: Rob.Langford at salford.gov.uk (Langford, Robert)
Date: Tue, 10 Oct 2017 08:40:36 +0000
Subject: [gdal-dev] OGR2OGR WFS HTTP 504 but no ERRORLEVEL
Message-ID: <93f64d508c4546c6b9391d9aa120c35e@EX13-P-MBX10-W.salford.gov.uk>

Hi there,

Currently we have a process that loads data from an external WFS into Postgres from a nightly scheduled batch file on a Windows box.  Usually works fine and it reports on any errors that it encounters.  But recently we've been getting an HTTP 504 error and no features are written but the resultant ERRORLEVEL is still 0.

We've contacted the provider to hopefully resolve the error, but we were wondering why ogr2ogr isn't raising the ERRORLEVEL?

Currently using: GDAL 2.2.2

The WFS URL is:
"WFS:http://environment.data.gov.uk/ds/wfs?SERVICE=WFS&INTERFACE=ENVIRONMENTWFS--0896250c-3aaa-43e2-b783-a133522cb5e3&VERSION=1.0.0"

The layer name is:
ne_wfs_crow_act_2000_access_layer_england

Here's the metadata<http://environment.data.gov.uk/ds/catalogue/#/0896250c-3aaa-43e2-b783-a133522cb5e3>

A layer that works from the same service as an example is below:
"WFS:http://environment.data.gov.uk/ds/wfs?SERVICE=WFS&INTERFACE=ENVIRONMENTWFS--e819098e-e248-4a8f-b684-5a21ca521b9b&VERSION=1.0.0"
ne_wfs_national_parks_england

Command we're running is like:
ogr2ogr -append -f PostgreSQL %POSTGRES_CONNECTION% "WFS:http://environment.data.gov.uk/ds/wfs?SERVICE=WFS&INTERFACE=ENVIRONMENTWFS--0896250c-3aaa-43e2-b783-a133522cb5e3&VERSION=1.0.0" ne_wfs_crow_act_2000_access_layer_england -nln %POSTGRES_DESTINATION_TABLE% -preserve_fid --config OGR_TRUNCATE YES

Running the command manually gives the below error messages:
ERROR 1: HTTP error code : 504
ERROR 1: Error returned by server : HTTP error code : 504 (0)

(And with --debug ON you can find out "GDALVectorTranslate: 0 features written in layer"

But the %ERRORLEVEL% = 0

Could anyone advise if this a bug, or if not how we can detect such errors?

Many thanks,

Rob



DISCLAIMER: The information contained in this communication/message from Rob.Langford at salford.gov.uk sent on Tue Oct 10 10:55:54 2017 is confidential. It is intended solely for the addressee(s) gdal-dev at lists.osgeo.org

Access to this message by anyone else is unauthorised. If you are not the intended recipient, any disclosure, copying, or distribution of the message, or any action or omission taken by you in reliance on it, is prohibited and may be unlawful.
As a public body, Salford City Council may be required to disclose this email [or any response to it] under the Freedom of Information Act 2000, unless the information in it is covered by one of the exemptions in the Act. 
Please immediately contact the sender, Rob.Langford at salford.gov.uk if you have received this message in error. 

For the full disclaimer please access http://www.salford.gov.uk/e-mail.  Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/313f374a/attachment.html>

From paulopires16 at gmail.com  Tue Oct 10 03:25:47 2017
From: paulopires16 at gmail.com (Paulo Pires)
Date: Tue, 10 Oct 2017 03:25:47 -0700 (MST)
Subject: [gdal-dev] CMYK to PALETTE color converter
Message-ID: <1507631147035-0.post@n6.nabble.com>

Hello,

Is it possible to convert image directely from CMYK to PALETTE color? To do
that I need to convert first to RGB...

Thanks




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Tue Oct 10 04:03:12 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 10 Oct 2017 13:03:12 +0200
Subject: [gdal-dev] OGR2OGR WFS HTTP 504 but no ERRORLEVEL
In-Reply-To: <93f64d508c4546c6b9391d9aa120c35e@EX13-P-MBX10-W.salford.gov.uk>
References: <93f64d508c4546c6b9391d9aa120c35e@EX13-P-MBX10-W.salford.gov.uk>
Message-ID: <2824464.4srldvh2ue@even-i700>

Hi Robert,
> 
> Could anyone advise if this a bug, or if not how we can detect such errors?

Yes, that can probably be considered as a bug. The HTTP 504 error here occurs 
not when opening the WFS datasource or retrieving the layer schema but when 
iterating over features, and ogr2ogr lacked propragation of read errors when 
iterating over source features. I've just added it in trunk. For now, I'm a bit 
hesitant to backport that to the stable series (in hypothetical case of drivers that 
would emit errors when reading at end of dataset, which would be an 
inappropriate behaviour)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/20c7de79/attachment.html>

From Rob.Langford at salford.gov.uk  Tue Oct 10 04:38:31 2017
From: Rob.Langford at salford.gov.uk (Langford, Robert)
Date: Tue, 10 Oct 2017 11:38:31 +0000
Subject: [gdal-dev] OGR2OGR WFS HTTP 504 but no ERRORLEVEL
In-Reply-To: <20171010111221.E96E33C0C4@mailout.ictservices.co.uk>
References: <93f64d508c4546c6b9391d9aa120c35e@EX13-P-MBX10-W.salford.gov.uk>
 <20171010111221.E96E33C0C4@mailout.ictservices.co.uk>
Message-ID: <dd4192e4a7194b9e93ace06d82ed0e26@EX13-P-MBX10-W.salford.gov.uk>

Hi Even,

Thank you for looking at this and confirming.

So would this fix be available in the next major release and if so does that have a release date currently?

In the meantime any thoughts on how we could programmatically pick up this error?

Many thanks,

Rob

From: Even Rouault [mailto:even.rouault at spatialys.com]
Sent: 10 October 2017 12:03
To: gdal-dev at lists.osgeo.org
Cc: Langford, Robert <Rob.Langford at salford.gov.uk>
Subject: Re: [gdal-dev] OGR2OGR WFS HTTP 504 but no ERRORLEVEL


Hi Robert,

>

> Could anyone advise if this a bug, or if not how we can detect such errors?



Yes, that can probably be considered as a bug. The HTTP 504 error here occurs not when opening the WFS datasource or retrieving the layer schema but when iterating over features, and ogr2ogr lacked propragation of read errors when iterating over source features. I've just added it in trunk. For now, I'm a bit hesitant to backport that to the stable series (in hypothetical case of drivers that would emit errors when reading at end of dataset, which would be an inappropriate behaviour)



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com

DISCLAIMER: The information contained in this communication/message from Rob.Langford at salford.gov.uk sent on Tue Oct 10 12:38:32 2017 is confidential. It is intended solely for the addressee(s) gdal-dev at lists.osgeo.org;even.rouault at spatialys.com

Access to this message by anyone else is unauthorised. If you are not the intended recipient, any disclosure, copying, or distribution of the message, or any action or omission taken by you in reliance on it, is prohibited and may be unlawful.
As a public body, Salford City Council may be required to disclose this email [or any response to it] under the Freedom of Information Act 2000, unless the information in it is covered by one of the exemptions in the Act. 
Please immediately contact the sender, Rob.Langford at salford.gov.uk if you have received this message in error. 

For the full disclaimer please access http://www.salford.gov.uk/e-mail.  Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/26d85f40/attachment-0001.html>

From even.rouault at spatialys.com  Tue Oct 10 05:07:52 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 10 Oct 2017 14:07:52 +0200
Subject: [gdal-dev] OGR2OGR WFS HTTP 504 but no ERRORLEVEL
In-Reply-To: <dd4192e4a7194b9e93ace06d82ed0e26@EX13-P-MBX10-W.salford.gov.uk>
References: <93f64d508c4546c6b9391d9aa120c35e@EX13-P-MBX10-W.salford.gov.uk>
 <20171010111221.E96E33C0C4@mailout.ictservices.co.uk>
 <dd4192e4a7194b9e93ace06d82ed0e26@EX13-P-MBX10-W.salford.gov.uk>
Message-ID: <1622531.SnbSBzKLcH@even-i700>

On mardi 10 octobre 2017 11:38:31 CEST Langford, Robert wrote:
> Hi Even,
> 
> Thank you for looking at this and confirming.
> 
> So would this fix be available in the next major release and if so does that
> have a release date currently?

Likely around May 2018

But if you build your own GDAL, you should also be able to backport the trunk changeset into 
2.2 without too much pain: 
https://trac.osgeo.org/gdal/changeset/40382

> 
> In the meantime any thoughts on how we could programmatically pick up this
> error?

Perhaps redirect the standard error stream to a file and look for ERROR string in it ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/51ef195a/attachment.html>

From SGONG at mdacorporation.com  Tue Oct 10 06:14:47 2017
From: SGONG at mdacorporation.com (Shawn Gong)
Date: Tue, 10 Oct 2017 13:14:47 +0000
Subject: [gdal-dev] RADARSAT Constellation Mission (RCM) driver
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FF8EA88@exbermd02.ds.mda.ca>

Hi list,



I have seen some simulated datasets for RADARSAT Constellation Mission (RCM). It is smilar to RSAT-2: GTiff + product.xml for metadata

But the file structure is different.



Is there a plan to develop a RCM driver, and if so, what is the timeline?


Thanks,
Shawn Gong
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/4f54f6e7/attachment.html>

From SGONG at mdacorporation.com  Tue Oct 10 08:50:23 2017
From: SGONG at mdacorporation.com (Shawn Gong)
Date: Tue, 10 Oct 2017 15:50:23 +0000
Subject: [gdal-dev] RADARSAT Constellation Mission (RCM) driver
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC3FF8EA88@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FF8EA88@exbermd02.ds.mda.ca>
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FF8EABE@exbermd02.ds.mda.ca>

Hi list,



I have seen some simulated datasets for RADARSAT Constellation Mission (RCM). It is smilar to RSAT-2: GeoTiff + product.xml for metadata

But the file structure is different.



Is there a plan to develop a RCM driver, and if so, what is the timeline?


Thanks,
Shawn Gong


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171010/0f4d3263/attachment.html>

From benjamin.deschamps at canada.ca  Tue Oct 10 12:39:22 2017
From: benjamin.deschamps at canada.ca (Deschamps, Benjamin (EC))
Date: Tue, 10 Oct 2017 19:39:22 +0000
Subject: [gdal-dev] RADARSAT Constellation Mission (RCM) driver
Message-ID: <mailman.2.1507664960.21180.gdal-dev@lists.osgeo.org>

Hi Shawn,

As you probably know, there is one significant difference with regards to ScanSAR SLC products which are delivered in individual bursts on RCM. There are a few other more minor differences (calibration LUT file for each polarization, availability of 32-bit products, etc.).

CSA has a partial dataset of simulated data available here, along with the product format definition:
ftp://ftp.asc-csa.gc.ca/users/OpenData_DonneesOuvertes/pub/RCM.Donnees.Simulees/

I wouldn't be the person to write the driver, but would certainly be interested in testing it against our current RCM processing scripts. A GDAL driver could replace a portion of our processing chain down the line, assuming it is able to calibrate all modes, polarization options and product types.

Benjamin Deschamps 
Canadian Ice Service, Meteorological Service of Canada
Environment and Climate Change Canada / Government of Canada  

From paulopires16 at gmail.com  Tue Oct 10 15:59:16 2017
From: paulopires16 at gmail.com (Paulo Pires)
Date: Tue, 10 Oct 2017 15:59:16 -0700 (MST)
Subject: [gdal-dev] CMYK to PALETTE color converter
In-Reply-To: <1507631147035-0.post@n6.nabble.com>
References: <1507631147035-0.post@n6.nabble.com>
Message-ID: <1507676356234-0.post@n6.nabble.com>

This is an example: 

*im.convert('RGB').convert("P", palette=Image.ADAPTIVE, colors=256)*

But I have this error: 

* File "C:\Python27\lib\site-packages\PIL\Image.py", line 926, in convert
    im = self.im.quantize(colors)
ValueError: quantization error*



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Wed Oct 11 05:24:59 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 11 Oct 2017 14:24:59 +0200
Subject: [gdal-dev] Removing the *raster* OGDI driver ?
Message-ID: <14957600.LynyE0OHma@even-i700>

Hi,

I propose to remove the raster OGDI driver from trunk (the vector OGDI driver is 
still useful for VMAP/VPF/DCW)

There should be no reason to use it anymore since GDAL supports out of the box 
(and probably in a more efficient way) all the raster formats the OGDI bridge 
offers: ADRG, DTED and RPF (CADRG/CIB)

So speak up now if you see a strong reason to keep it alive.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171011/2c22ed92/attachment.html>

From harvey.l.berger at gmail.com  Wed Oct 11 10:06:10 2017
From: harvey.l.berger at gmail.com (Harvey Berger)
Date: Wed, 11 Oct 2017 10:06:10 -0700
Subject: [gdal-dev] GDAL Cubic Interpolation
In-Reply-To: <op.y7un8n0adbaoe8@macmarilu>
References: <CACRD7o6qMz-LY_Pj2efGbgVnVKRoxk21XYVQ53rEvZ664Wbg-A@mail.gmail.com>
 <1716577.oATaYCCh7f@even-i700> <op.y7un8n0adbaoe8@macmarilu>
Message-ID: <CACRD7o4sDKownkYC1934cf4N5vmGjD99ykdDbw3LvdxT6SyR0Q@mail.gmail.com>

Thanks Joaquim and Even,

Per my email I augmented the original GLOBE image and created a properly
referenced image using gdal_translate as follows: I did an imread from
QGIS/GDAL into Octave, added the appropriate 24 rows and columns on each
side, and did an imwrite back to QGIS/GDAL to continue processing; however,
I'm having a problem with negative elevations probably due to data type
confusion.

1. GDAL reports the data type of the original GLOBE tiff file as int16.
(file = output1.tiff)
2. After using imread in Octave, Octave reports the data type as uint16.
3. I retained the uint16 data type in Octave and added the additional rows
and columns.
4. I did an imwrite to create the augmented file. (file=output2.tiff)
5. GDAL reports the data type of the augmented files as uint16.
6. I performed the following GDAL command: gdal_translate -a_ullr ulx uly
lrx lry src_dataset dst_dataset. (file=output3.tiff)
7. I then used gdalwarp to create the subsampled and cubic interpolated
file (file=sample.tiff); GDAL report the data type as int16.

The problem is with locations with negative elevations that result in
erroneous results when I subsequent subsample using gdal_warp. Here are the
elevations reported by GDAL for one example pixel in the Caspian Sea:
output1.tiff (int16): -28 m
output2.tiff (uint16): 65508 m
output3.tiff (uint16): 65508 m

Unfortunately, Octave will not perform an imwrite with a int16 data type.
Is it possible to fix this within QGIS/GDAL or is there another solution?

Thanks again for your help.

Kind regards,

Harvey

On Mon, Oct 9, 2017 at 9:32 AM, Joaquim Luis <jluis at ualg.pt> wrote:

> Alternatively,  use GMT's grdsample with -fg option to force the knowledge
> (if it's not already in the file) that the Earth is round.
>
> http://gmt.soest.hawaii.edu/doc/5.4.2/grdsample.html
>
>
>
> Harvey,
>
>
>
> >
>
> > I subsampled a GLOBE image of elevation data by a subsampling factor of
> 12
>
> > to a resolution of 0.1 deg x 0.1 deg on integer multiples of 0.1 deg. The
>
> > original GLOBE image is: Latitude from +90-1/240 deg to -90+1/240 deg in
>
> > 1/120 deg steps, and Longitude from -180+1/240 deg to +180-1/240 deg in
>
> > 1/120 deg steps.
>
> >
>
> > I understand that the cubic interpolation method in gdalwarp accounts for
>
> > the subsampling factor, so 48x48 adjacent pixels influence the target
> pixel
>
> > for a subsampling factor of 12.
>
> >
>
> > Does gdalwarp assume the original image is a sphere, where 48x48 adjacent
>
> > pixels influence all target pixels, or a rectangle, where a limited
> number
>
> > of pixels influence the target pixels at the top, bottom, left, and right
>
> > edges of the subsampled image?
>
>
>
> A rectangle, with fallback to bilinear resampling at edges
>
>
>
> > If gdalwarp assumes the original image is a
>
> > rectangle and uses a modified interpolation method at the four edges of
> the
>
> > subsampled image, the modified method affects two rows and two columns at
>
> > the top, bottom, left and right edges of the subsampled image. If
> gdalwarp
>
> > assumes the original image is a rectangle, is there a command option so
>
> > gdalwarp considers spherical wrapping when interpolating?
>
>
>
> Nothing directly straightforward. Your below plan is the a reasonable
> solution.
>
>
>
> > Alternatively, I
>
> > assume I could augment the original GLOBE image with the appropriate
>
> > additional rows and columns on all four edges. If I did that, how do I
> tell
>
> > gdalwarp the extent of the augmented input image?
>
>
>
> You'll have to recreate a properly referenced input image, for example with
>
>
>
> gdal_translate -ullr upperleftx upperlefty lowerleftx lowerlefty
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171011/25de3735/attachment.html>

From even.rouault at spatialys.com  Wed Oct 11 10:51:28 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 11 Oct 2017 19:51:28 +0200
Subject: [gdal-dev] GDAL and cloud storage
Message-ID: <5740785.Qx7oKVHn2n@even-i700>

Hi,

I've written a post summarizing various enhancements done in trunk 
lately regarding GDAL and cloud storage:

https://erouault.blogspot.fr/2017/10/gdal-and-cloud-storage.html

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171011/656a82db/attachment-0001.html>

From harvey.l.berger at gmail.com  Wed Oct 11 19:57:18 2017
From: harvey.l.berger at gmail.com (Harvey Berger)
Date: Wed, 11 Oct 2017 19:57:18 -0700
Subject: [gdal-dev] GDAL Cubic Interpolation
In-Reply-To: <CACRD7o4sDKownkYC1934cf4N5vmGjD99ykdDbw3LvdxT6SyR0Q@mail.gmail.com>
References: <CACRD7o6qMz-LY_Pj2efGbgVnVKRoxk21XYVQ53rEvZ664Wbg-A@mail.gmail.com>
 <1716577.oATaYCCh7f@even-i700> <op.y7un8n0adbaoe8@macmarilu>
 <CACRD7o4sDKownkYC1934cf4N5vmGjD99ykdDbw3LvdxT6SyR0Q@mail.gmail.com>
Message-ID: <CACRD7o6_VF4LLaPO=pukdp80St3NDhFCEBXXhgDHbaXdmgBurA@mail.gmail.com>

To follow-up on my latest email, I confirmed that GDAL is interpreting the
pixels in the augmented image file from Octave as uint16 rather than int16,
and this results in incorrect elevation values after cubic interpolation
and subsampling (e.g., a pixel elevation of -28 m is misinterpreted as
65,508 m). Octave has a typecast function that changes a data type without
changing the data. Does GDAL have an equivalent function .... or does some
field need to be changed in the augmented tiff image file?

Kind regards,

Harvey

On Wed, Oct 11, 2017 at 10:06 AM, Harvey Berger <harvey.l.berger at gmail.com>
wrote:

> Thanks Joaquim and Even,
>
> Per my email I augmented the original GLOBE image and created a properly
> referenced image using gdal_translate as follows: I did an imread from
> QGIS/GDAL into Octave, added the appropriate 24 rows and columns on each
> side, and did an imwrite back to QGIS/GDAL to continue processing; however,
> I'm having a problem with negative elevations probably due to data type
> confusion.
>
> 1. GDAL reports the data type of the original GLOBE tiff file as int16.
> (file = output1.tiff)
> 2. After using imread in Octave, Octave reports the data type as uint16.
> 3. I retained the uint16 data type in Octave and added the additional rows
> and columns.
> 4. I did an imwrite to create the augmented file. (file=output2.tiff)
> 5. GDAL reports the data type of the augmented files as uint16.
> 6. I performed the following GDAL command: gdal_translate -a_ullr ulx uly
> lrx lry src_dataset dst_dataset. (file=output3.tiff)
> 7. I then used gdalwarp to create the subsampled and cubic interpolated
> file (file=sample.tiff); GDAL report the data type as int16.
>
> The problem is with locations with negative elevations that result in
> erroneous results when I subsequent subsample using gdal_warp. Here are the
> elevations reported by GDAL for one example pixel in the Caspian Sea:
> output1.tiff (int16): -28 m
> output2.tiff (uint16): 65508 m
> output3.tiff (uint16): 65508 m
>
> Unfortunately, Octave will not perform an imwrite with a int16 data type.
> Is it possible to fix this within QGIS/GDAL or is there another solution?
>
> Thanks again for your help.
>
> Kind regards,
>
> Harvey
>
> On Mon, Oct 9, 2017 at 9:32 AM, Joaquim Luis <jluis at ualg.pt> wrote:
>
>> Alternatively,  use GMT's grdsample with -fg option to force the
>> knowledge (if it's not already in the file) that the Earth is round.
>>
>> http://gmt.soest.hawaii.edu/doc/5.4.2/grdsample.html
>>
>>
>>
>> Harvey,
>>
>>
>>
>> >
>>
>> > I subsampled a GLOBE image of elevation data by a subsampling factor of
>> 12
>>
>> > to a resolution of 0.1 deg x 0.1 deg on integer multiples of 0.1 deg.
>> The
>>
>> > original GLOBE image is: Latitude from +90-1/240 deg to -90+1/240 deg in
>>
>> > 1/120 deg steps, and Longitude from -180+1/240 deg to +180-1/240 deg in
>>
>> > 1/120 deg steps.
>>
>> >
>>
>> > I understand that the cubic interpolation method in gdalwarp accounts
>> for
>>
>> > the subsampling factor, so 48x48 adjacent pixels influence the target
>> pixel
>>
>> > for a subsampling factor of 12.
>>
>> >
>>
>> > Does gdalwarp assume the original image is a sphere, where 48x48
>> adjacent
>>
>> > pixels influence all target pixels, or a rectangle, where a limited
>> number
>>
>> > of pixels influence the target pixels at the top, bottom, left, and
>> right
>>
>> > edges of the subsampled image?
>>
>>
>>
>> A rectangle, with fallback to bilinear resampling at edges
>>
>>
>>
>> > If gdalwarp assumes the original image is a
>>
>> > rectangle and uses a modified interpolation method at the four edges of
>> the
>>
>> > subsampled image, the modified method affects two rows and two columns
>> at
>>
>> > the top, bottom, left and right edges of the subsampled image. If
>> gdalwarp
>>
>> > assumes the original image is a rectangle, is there a command option so
>>
>> > gdalwarp considers spherical wrapping when interpolating?
>>
>>
>>
>> Nothing directly straightforward. Your below plan is the a reasonable
>> solution.
>>
>>
>>
>> > Alternatively, I
>>
>> > assume I could augment the original GLOBE image with the appropriate
>>
>> > additional rows and columns on all four edges. If I did that, how do I
>> tell
>>
>> > gdalwarp the extent of the augmented input image?
>>
>>
>>
>> You'll have to recreate a properly referenced input image, for example
>> with
>>
>>
>>
>> gdal_translate -ullr upperleftx upperlefty lowerleftx lowerlefty
>>
>>
>>
>> Even
>>
>>
>>
>> --
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>>
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171011/2e2d705e/attachment.html>

From neteler at osgeo.org  Thu Oct 12 08:29:56 2017
From: neteler at osgeo.org (Markus Neteler)
Date: Thu, 12 Oct 2017 17:29:56 +0200
Subject: [gdal-dev] Removing the *raster* OGDI driver ?
In-Reply-To: <14957600.LynyE0OHma@even-i700>
References: <14957600.LynyE0OHma@even-i700>
Message-ID: <CALFmHhsE5GZUHKHA1iVt+4HVY2k5oaXPLu++x2W0jE+v3hqmxA@mail.gmail.com>

On Wed, Oct 11, 2017 at 2:24 PM, Even Rouault
<even.rouault at spatialys.com> wrote:
> Hi,
>
> I propose to remove the raster OGDI driver from trunk (the vector OGDI
> driver is still useful for VMAP/VPF/DCW)
>
> There should be no reason to use it anymore since GDAL supports out of the
> box (and probably in a more efficient way) all the raster formats the OGDI
> bridge offers: ADRG, DTED and RPF (CADRG/CIB)

Probably that's fine - in case that legacy data need to be converted
one could still go back to an older GDAL version.

Best,
Markus


-- 
Markus Neteler, PhD
http://www.mundialis.de - free data with free software
http://grass.osgeo.org
http://courses.neteler.org/blog

From sean at mapbox.com  Thu Oct 12 08:31:20 2017
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 12 Oct 2017 09:31:20 -0600
Subject: [gdal-dev] GDAL and cloud storage
In-Reply-To: <5740785.Qx7oKVHn2n@even-i700>
References: <5740785.Qx7oKVHn2n@even-i700>
Message-ID: <CADPhZXwgEG57iFay6vxyy5t7=cFCkqpVr5940pE+rMZVgbQaoQ@mail.gmail.com>

Hi Even,

On Wed, Oct 11, 2017 at 11:51 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
>
>
> I've written a post summarizing various enhancements done in trunk lately
> regarding GDAL and cloud storage:
>
>
>
> https://erouault.blogspot.fr/2017/10/gdal-and-cloud-storage.html
>
>
>
> Even
>

This is great work and a great post. I made sure it was referenced in a
Mapbox blog post that's been scheduled to go out today. I didn't see the
Alibaba support coming, that's going to be a big deal for some users. Me,
I'm eager to exercise the HTTP/2 feature.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/3d21569a/attachment.html>

From even.rouault at spatialys.com  Thu Oct 12 08:40:45 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 12 Oct 2017 17:40:45 +0200
Subject: [gdal-dev] Removing the *raster* OGDI driver ?
In-Reply-To: <CALFmHhsE5GZUHKHA1iVt+4HVY2k5oaXPLu++x2W0jE+v3hqmxA@mail.gmail.com>
References: <14957600.LynyE0OHma@even-i700>
 <CALFmHhsE5GZUHKHA1iVt+4HVY2k5oaXPLu++x2W0jE+v3hqmxA@mail.gmail.com>
Message-ID: <1985304.JPD2huGE2D@even-i700>

On jeudi 12 octobre 2017 17:29:56 CEST Markus Neteler wrote:
> On Wed, Oct 11, 2017 at 2:24 PM, Even Rouault
> 
> <even.rouault at spatialys.com> wrote:
> > Hi,
> > 
> > I propose to remove the raster OGDI driver from trunk (the vector OGDI
> > driver is still useful for VMAP/VPF/DCW)
> > 
> > There should be no reason to use it anymore since GDAL supports out of the
> > box (and probably in a more efficient way) all the raster formats the OGDI
> > bridge offers: ADRG, DTED and RPF (CADRG/CIB)
> 
> Probably that's fine - in case that legacy data need to be converted
> one could still go back to an older GDAL version.

Or make the needed fixes in the GDAL drivers. But OGDI is less than maintained, so I 
strongly think that the corresponding GDAL own drivers are more capable.
One thing that makes me think that the raster OGDI driver isn't used is that nobody has 
raised bugs on it in recent years as far as I can remember, and I don't believe in perfect 
software. Something that is used inevitably generates bug reports (valid or invalid), 
questions, enhancement requests, etc..

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/595dc417/attachment-0001.html>

From sean at mapbox.com  Thu Oct 12 09:18:22 2017
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 12 Oct 2017 10:18:22 -0600
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <3843425.u1lSgM4hFX@even-i700>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
 <3843425.u1lSgM4hFX@even-i700>
Message-ID: <CADPhZXy2KJR5N1t8cNZbYJ+q6i5brSo2HBXR88KPDbEp9JGKzQ@mail.gmail.com>

Hi Even,

On Tue, Oct 10, 2017 at 4:02 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Sean,
>
>
>
> >
>
> > It's written in
>
> > http://gdal.org/gdal_virtual_file_systems.html#gdal_
> virtual_file_systems_vsi
>
> > curl
>
> > > Starting with GDAL 2.3, options can be passed in the filename with the
>
> >
>
> > following syntax: /vsicurl/option1=val1[,optionN=valN]*,url=http://...
>
> >
>
> > I'd like to discuss the design decisions that are being made here before
>
> > this gets out into the world.
>
> >
>
> > I'm uncomfortable with the way configuration is spread between
> environment
>
> > variables, config options that surface in the API,
>
>
>
> Just a precision: GDAL only reads configuration options with
> CPLGetConfigOption(key). Those can be implictly set through environment
> variables of the same name or with CPLSetConfigOption(key, value).
>
>
>
> > and also in identifiers.
>
> > I don't think it's a great idea to that expand the amount of
> configuration
>
> > in dataset identifiers. It's redundant, the syntax is complicated,
>
>
>
> Frank answered on the main motivations.
>

Yes, I understand that adding syntax tied to new core GDAL functionality
can turn already-deployed software into full-fledged cloud data consumers.
For cloud data providers and customers this is a big win.


>
>
> > and it
>
> > dilutes the network effects of reusing identifiers in our applications.
>
>
>
> Didn't understand what you meant with the above sentence.
>

I mean that having multiple names for datasets in our domain,
https://example.com/foo.tif vs /vsicurl/https://example.com/foo.tif vs
/viscurl/option1=val,url=https//example.com/foo.tif dilutes the power of
the names and potentially reduces the network effects we could get by using
fewer names. This is an abstract concern, however, and I don't want it to
distract from talking about the design decisions.


>
> >
>
> > Are there specific advantages to this
>
> >
>
> > ogrinfo -so /vsicurl/max_retry=10,url=https://example.com/poly.shp
>
> >
>
> > that we can't also have with a curl-style
>
> >
>
> > ogrinfo -so --max-retry=10 /vsicurl/https://example.com/poly.shp
>
> >
>
> > or, better yet, in my opinion
>
> >
>
> > ogrinfo -so --max-retry=10 https://example.com/poly.shp
>
> >
>
> > on the command line?
>
>
>
> One issue with you proposal is that it would require ogrinfo (or any
> utility) to go from the highest level abstraction layers of GDAL to the
> lowest ones.
>
>
>
> When ogrinfo is provided
>
> "/vsicurl/max_retry=10,url=https://example.com/poly.shp",
>
> this is just a string used as a dataset name
>
>
>
> It happily feeds it into GDALOpenEx(), which in turns proposes it
> sequentially to all drivers
>
>
>
> The shapefile driver tries this string with VSIFOpenL(), which in turns
> iterates over all virtual file systems. The /vsicurl/ VFS happens to
> recognize it, manages to open the file. The shapefile driver can read the
> few first bytes from it and recognizes that it is a header of a shapefile,
> etc..
>
>
>
> So in the current design neither the utility, nor GDALOpenEx(), or the
> drivers themselves really make a sense of that string. This is quite a
> strength at the architectural level. This also enables to pass such a
> string in a VRT file for example.
>

Is the future of open and creation options? Do you imagine this extended
to, say, block size, compression, number of threads? An RFC that discussed
the scope of this and at what level of abstraction it is implemented at
might be warranted? I'd be happy to participate.


>
>
> Regarding the direct use of http:// https:// , I also find it is a bit
> unfortunate that we can't use them directly and vsicurl machinery would be
> implictly used. It turns that historically we have the HTTP driver that
> triggers on such dataset name (ingesting the whole file into /vsimem/, and
> proposing it in turn to other drivers). There's also a few other drivers
> (DODS, etc..) that trigger on such names.
>
>
>
> Even
>

On the other hand, https://example.com/foo.tif identifies only a single
resource, whereas /viscurl/url=https://example.com/foo.tif can identify a
GeoTIFF along with all of its sidecars. I presume that the new GDAL cloud
utilities like gdal_cp.py take care of the auxiliary files, yes?

My final concern about the virtual file opening options is the syntax.
These /vsicurl/option1=val1[,optionN=valN]*,url=http://example.com/foo.tif
identifiers (or filenames or whatever we call them) may spread from GDAL
into the wider geospatial programming domain. Speaking from my experience
with Rasterio, open source Python GIS developers expect the /vsi* filenames
to "just work" in all software. Can we consider using a more standard
syntax? One that has parsers already deployed everywhere?

For example, /viscurl?option1=foo&option2=bar&url=
https://example.com/foo.tif can be parsed by standard URL parsers such as
Python's.

>>> from urllib.parse import urlparse, parse_qs
>>> urlparse('/viscurl?option1=foo&option2=bar&url=
https://example.com/foo.tif')
ParseResult(scheme='', netloc='', path='/viscurl', params='',
query='option1=foo&option2=bar&url=https://example.com/foo.tif',
fragment='')
>>> from urllib.parse import parse_qs
>>> parse_qs(_.query)
{'option1': ['foo'], 'url': ['https://example.com/foo.tif'], 'option2':
['bar']}

That syntax gives the /vsi* filenames the form of a "reflector" URL such as
we see in Google searches (for example:
https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0ahUKEwjC6e7hvevWAhXmjFQKHWsHDyMQFggmMAA&url=http%3A%2F%2Fwww.gdal.org%2F&usg=AOvVaw3fbRv5TusYwkXgz2Acf2kt)
and there are abundant tools and a body of knowledge about how to parse and
work with these.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/e4cd0002/attachment.html>

From chris.marsh at usask.ca  Thu Oct 12 10:41:37 2017
From: chris.marsh at usask.ca (Chris Marsh)
Date: Thu, 12 Oct 2017 17:41:37 +0000
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
Message-ID: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>

Hi,

I'm using GDAL (and by extension proj.4) to reproject a set of WGS84
coordinates to North America Albers Conic Conformal.

On all but 1 computer I run my code on, this works as expected. However,
when trying to run on one of Compute Canada's newest machines, I get the
error

ERROR 6: Failed to initialize PROJ.4 with `+proj=aea +lat_1=20 +lat_2=60
+lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
+units=m +no_defs'.

I have tried building and linking against various proj.4 versions, none of
which solves this problem.

The code  is straightfoward
OGRSpatialReference insrs;
    insrs.SetWellKnownGeogCS("WGS84");

    OGRSpatialReference outsrs;
    outsrs.importFromProj4("+proj=aea +lat_1=20 +lat_2=60 +lat_0=40
+lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
+no_defs");

    OGRCoordinateTransformation* coordTrans =  NULL;
    coordTrans = OGRCreateCoordinateTransformation(&insrs, &outsrs);

    coordTrans->Transform(1, &longitude, &latitude)

with the error appearing on the Transform call. The proj.4 string is from
using the ExportToWkt of GDAL for the WKT of Albers Conic Conformal. (long
story as to why i'm doing this). I have tried using the WKT string and that
results in the same error -- seems like it is just converted to proj.4
behind the scenes.

I am using gdal 2.2.1 and proj4 4.8 (4.9 has other issues I'm running into)

$gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/cvmfs/
soft.computecanada.ca/nix/store/lvjwgn6hpngyy6k4xqcqa9h2cxy3fl30-gfortran-5.4.0/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper
Target: x86_64-unknown-linux-gnu
Configured with:
Thread model: posix
gcc version 5.4.0 (GCC)

$uname -a
Linux gra-login4 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC
2017 x86_64 GNU/Linux

Cheers
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/35bc9d86/attachment.html>

From even.rouault at spatialys.com  Thu Oct 12 11:42:57 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 12 Oct 2017 20:42:57 +0200
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <CADPhZXy2KJR5N1t8cNZbYJ+q6i5brSo2HBXR88KPDbEp9JGKzQ@mail.gmail.com>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
 <3843425.u1lSgM4hFX@even-i700>
 <CADPhZXy2KJR5N1t8cNZbYJ+q6i5brSo2HBXR88KPDbEp9JGKzQ@mail.gmail.com>
Message-ID: <19360835.gTxv5qfqzm@even-i700>

Hi Sean,

> Is the future of open and creation options?

I don't understand your above sentence.

> Do you imagine this extended
> to, say, block size, compression, number of threads? An RFC that discussed
> the scope of this and at what level of abstraction it is implemented at
> might be warranted? I'd be happy to participate.

Not clear what you've in mind. Are you thinking about some formalism to define and 
specify options for VSI filenames ?

> On the other hand, https://example.com/foo.tif identifies only a single
> resource, whereas /viscurl/url=https://example.com/foo.tif can identify a
> GeoTIFF along with all of its sidecars. I presume that the new GDAL cloud
> utilities like gdal_cp.py take care of the auxiliary files, yes?

No. They should perhaps be named cpl_xxx since they really operate at the VSI/file level. 
Auxiliary/sidecar files are concepts that exist only at the driver level/

Copy of datasets + side car files can be done with "gdalmanage copy"

> 
> My final concern about the virtual file opening options is the syntax.
> These /vsicurl/option1=val1[,optionN=valN]*,url=http://example.com/foo.tif
> identifiers (or filenames or whatever we call them) may spread from GDAL
> into the wider geospatial programming domain. Speaking from my experience
> with Rasterio, open source Python GIS developers expect the /vsi* filenames
> to "just work" in all software. Can we consider using a more standard
> syntax? One that has parsers already deployed everywhere?

I don't really see a use of parsing those /vsi names by user code. User code has to compose 
them, not parse them. But I can see your point for something more standardized.

> That syntax gives the /vsi* filenames the form of a "reflector" URL such as
> we see in Google searches (for example:
> https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0ahUKEwj
> C6e7hvevWAhXmjFQKHWsHDyMQFggmMAA&url=http%3A%2F%2Fwww.gdal.org
%2F&usg=AOvVaw
> 3fbRv5TusYwkXgz2Acf2kt) and there are abundant tools and a body of knowledge
> about how to parse and work with these.

One downside is that you need to URLEncode the URL, which can make it painful when 
composing it at hand.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/77472d7d/attachment-0001.html>

From gdal at stripfamily.net  Thu Oct 12 12:15:02 2017
From: gdal at stripfamily.net (David Strip)
Date: Thu, 12 Oct 2017 13:15:02 -0600
Subject: [gdal-dev] GDAL and cloud storage
In-Reply-To: <CADPhZXwgEG57iFay6vxyy5t7=cFCkqpVr5940pE+rMZVgbQaoQ@mail.gmail.com>
References: <5740785.Qx7oKVHn2n@even-i700>
 <CADPhZXwgEG57iFay6vxyy5t7=cFCkqpVr5940pE+rMZVgbQaoQ@mail.gmail.com>
Message-ID: <b9938e47-3484-fc5a-5b8e-4d4c39c08e72@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/4a0d7531/attachment.html>

From bontepaarden at gmail.com  Thu Oct 12 12:31:16 2017
From: bontepaarden at gmail.com (Paul Meems)
Date: Thu, 12 Oct 2017 21:31:16 +0200
Subject: [gdal-dev] Clipping shapefile with another produces invalid shapes
Message-ID: <CAHNf2YR5JPPqdY_Af+ph8_RkoiuoryGhtogfRCZ7vO-UnPF6HQ@mail.gmail.com>

 Hi list,

I have a very large shapefile, with almost 700k shapes which I want to clip
with a border shapefile (in red):
https://ibb.co/gKth1G

I'm using this command:
ogr2ogr -clipsrc "border.shp" -overwrite -explodecollections -f "ESRI
Shapefile" ogr_clipped.shp Fishnet.shp
with GDAL 2.1.3, released 2017/20/01
Eventually, I'll transform the command to a call to ogr.VectorTranslate().

The result is visually correct:
https://ibb.co/hOvJab

But at the red asterix, I have an invalid shape. The reason is according to
GEOS:
Polygon must be clockwise
I have more of these errors.
They all seem to occur when the shape due to the clipping is triangular
shaped:
https://ibb.co/cKuY8w
https://ibb.co/eXcWvb

Is this an error/warning which can be expected or do I need to add an
additional parameter?
If needed I can try to make a test set with as little data as possible.

Thanks,

Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/ec162ab5/attachment.html>

From even.rouault at spatialys.com  Thu Oct 12 14:28:28 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 12 Oct 2017 23:28:28 +0200
Subject: [gdal-dev] Clipping shapefile with another produces invalid
	shapes
In-Reply-To: <CAHNf2YR5JPPqdY_Af+ph8_RkoiuoryGhtogfRCZ7vO-UnPF6HQ@mail.gmail.com>
References: <CAHNf2YR5JPPqdY_Af+ph8_RkoiuoryGhtogfRCZ7vO-UnPF6HQ@mail.gmail.com>
Message-ID: <2747206.glo2UCT3DP@even-i700>

Paul,

> But at the red asterix, I have an invalid shape. The reason is according to
> GEOS:
> Polygon must be clockwise

I can't see such error emitted by GEOS source code.

even at even-i700:~$ grep -r "must be clockwise" geos/
even at even-i700:~$ 


Are you sure this comes from it ? As far as I know, GDAL and GEOS are pretty much 
indifferent regarding the winding order of polygons. Other tools might be more sensitive.

You could possibly use the ST_ForceLHR() function of spatialite (through the SQL SQLite 
dialect) to post process your result:
http://www.gaia-gis.it/gaia-sins/spatialite-sql-4.2.0.html

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171012/7802f7b8/attachment.html>

From craig.destigter at koordinates.com  Thu Oct 12 14:55:32 2017
From: craig.destigter at koordinates.com (Craig de Stigter)
Date: Fri, 13 Oct 2017 10:55:32 +1300
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <19360835.gTxv5qfqzm@even-i700>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
 <3843425.u1lSgM4hFX@even-i700>
 <CADPhZXy2KJR5N1t8cNZbYJ+q6i5brSo2HBXR88KPDbEp9JGKzQ@mail.gmail.com>
 <19360835.gTxv5qfqzm@even-i700>
Message-ID: <CAF1M8pei411Afpd97yxcVu2+E6ALduxVdw4v0hOtZ6EYNa8Nfg@mail.gmail.com>

Hi folks

We're slightly invested in this because we use VSI paths reasonably
heavily, though not so much for cloud services yet.


> One downside is that you need to URLEncode the URL, which can make it
> painful when composing it at hand.


True, but that does eliminate ambiguity in the URL, and does so in a
well-known way.

Does the current scheme use any encoding? How would you escape text in
option values that might use `=` and `,` etc? Or are there guaranteed to be
no freeform-text options in these paths?



Tangential, but related: I've also just discovered the 2.2+ curly-brace
syntax for vsizip/vsitar paths, which allows nested archives:

/vsizip/{/vsizip/{/path/to/outer.zip}/path/to/inner.zip}/file.shp


The curly braces are a definite improvement on the ambiguous older syntax
for these paths. However, we noted the nesting order looks inside-out, and
thought it would have been more intuitive to put the path *inside* the
archive in the braces. i.e. nesting would look like:

> /vsizip//path/to/outer.zip/{/vsizip//path/to/inner.zip/{file.shp}}


Of course, this latter syntax was added in 2.2, so perhaps that ship has
already sailed.

>From our experiences with vsicurl and vsizip urls, it feels like
eliminating ambiguity in these paths is pretty important, more so than
trivial composability. Just my 2¢ :)


On 13 October 2017 at 07:42, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Sean,
>
>
>
> > Is the future of open and creation options?
>
>
>
> I don't understand your above sentence.
>
>
>
> > Do you imagine this extended
>
> > to, say, block size, compression, number of threads? An RFC that
> discussed
>
> > the scope of this and at what level of abstraction it is implemented at
>
> > might be warranted? I'd be happy to participate.
>
>
>
> Not clear what you've in mind. Are you thinking about some formalism to
> define and specify options for VSI filenames ?
>
>
>
> > On the other hand, https://example.com/foo.tif identifies only a single
>
> > resource, whereas /viscurl/url=https://example.com/foo.tif can identify
> a
>
> > GeoTIFF along with all of its sidecars. I presume that the new GDAL cloud
>
> > utilities like gdal_cp.py take care of the auxiliary files, yes?
>
>
>
> No. They should perhaps be named cpl_xxx since they really operate at the
> VSI/file level. Auxiliary/sidecar files are concepts that exist only at the
> driver level/
>
>
>
> Copy of datasets + side car files can be done with "gdalmanage copy"
>
>
>
> >
>
> > My final concern about the virtual file opening options is the syntax.
>
> > These /vsicurl/option1=val1[,optionN=valN]*,url=http://
> example.com/foo.tif
>
> > identifiers (or filenames or whatever we call them) may spread from GDAL
>
> > into the wider geospatial programming domain. Speaking from my experience
>
> > with Rasterio, open source Python GIS developers expect the /vsi*
> filenames
>
> > to "just work" in all software. Can we consider using a more standard
>
> > syntax? One that has parsers already deployed everywhere?
>
>
>
> I don't really see a use of parsing those /vsi names by user code. User
> code has to compose them, not parse them. But I can see your point for
> something more standardized.
>
>
>
> > That syntax gives the /vsi* filenames the form of a "reflector" URL such
> as
>
> > we see in Google searches (for example:
>
> > https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&
> cd=1&ved=0ahUKEwj
>
> > C6e7hvevWAhXmjFQKHWsHDyMQFggmMAA&url=http%3A%2F%2Fwww.gdal.org
> %2F&usg=AOvVaw
>
> > 3fbRv5TusYwkXgz2Acf2kt) and there are abundant tools and a body of
> knowledge
>
> > about how to parse and work with these.
>
>
>
> One downside is that you need to URLEncode the URL, which can make it
> painful when composing it at hand.
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
Regards,
Craig

Developer
Koordinates

+64 21 256 9488 <+64%2021%20256%209488> / koordinates.com / @koordinates
<https://twitter.com/koordinates>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/3f7f49ed/attachment-0001.html>

From even.rouault at spatialys.com  Thu Oct 12 15:15:02 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 13 Oct 2017 00:15:02 +0200
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <CAF1M8pei411Afpd97yxcVu2+E6ALduxVdw4v0hOtZ6EYNa8Nfg@mail.gmail.com>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
 <19360835.gTxv5qfqzm@even-i700>
 <CAF1M8pei411Afpd97yxcVu2+E6ALduxVdw4v0hOtZ6EYNa8Nfg@mail.gmail.com>
Message-ID: <5087572.fjGmY6Wygd@even-i700>

Craig,

> True, but that does eliminate ambiguity in the URL, and does so in a
> well-known way.
> 
> Does the current scheme use any encoding?

No

> How would you escape text in
> option values that might use `=` and `,` etc? Or are there guaranteed to be
> no freeform-text options in these paths?

Currently, given the supported set of options and values, yes. In case of future ambiguity, 
yes, we'd need to define some escaping rules.

> 
> 
> 
> Tangential, but related: I've also just discovered the 2.2+ curly-brace
> syntax for vsizip/vsitar paths, which allows nested archives:

That's a side effect. The main motivation was that there are .tar or .zip files in the wild that 
for good or wrong reasons have non standard extensions.

> 
> /vsizip/{/vsizip/{/path/to/outer.zip}/path/to/inner.zip}/file.shp
> 
> 
> The curly braces are a definite improvement on the ambiguous older syntax
> for these paths. However, we noted the nesting order looks inside-out, and
> thought it would have been more intuitive to put the path *inside* the
> 
> archive in the braces. i.e. nesting would look like:
> > /vsizip//path/to/outer.zip/{/vsizip//path/to/inner.zip/{file.shp}}

Hum, that doesn't seem really better to me, and I can't see how that could be implemented. /
vsizip//path/to/inner.zip/{file.shp} couldn't be succesfully resolved by the vsizip VFS since /
path/to/inner.zip isn't a regular file itself.

/vsizip/{/vsizip/{/path/to/outer.zip}/path/to/inner.zip}/file.shp is really closer how it works 
internally, and is close to function-like syntax f(g(h(x))) where you start evaluating the most 
internal member.

So you have /vsizip/{something}/file.shp, which means we'll expose a file handle, for a file.shp 
in a zip archive accessed through "something"
"something" happens to expand to /vsizip/{/path/to/outer.zip}/path/to/inner.zip which 
means we will return a file (that happens to be itself a zip, but at that stage, only  /vsizip/
{something}/file.shp cares that is  a zip), that is in a zip file /path/to/outer.zip, which happens 
to be a regular file.


> 
> Of course, this latter syntax was added in 2.2, so perhaps that ship has
> already sailed.

Yes


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/bbc06394/attachment.html>

From bontepaarden at gmail.com  Fri Oct 13 00:06:46 2017
From: bontepaarden at gmail.com (Paul Meems)
Date: Fri, 13 Oct 2017 09:06:46 +0200
Subject: [gdal-dev] Clipping shapefile with another produces invalid
	shapes
In-Reply-To: <2747206.glo2UCT3DP@even-i700>
References: <CAHNf2YR5JPPqdY_Af+ph8_RkoiuoryGhtogfRCZ7vO-UnPF6HQ@mail.gmail.com>
 <2747206.glo2UCT3DP@even-i700>
Message-ID: <CAHNf2YReVOHOG-Civ93rUhZhJxVzCENiuce2Ca5Op261gWYZwQ@mail.gmail.com>

Thanks Even for your quick reply.

I was using MapWinGIS to perform the validation and I assumed it was just
using GEOS.
I did a closer look at the code and it is first doing some internal checks
like the minimum number of points and the order of the points.
The code is checking if the polygon shape only has 1 part. If so it should
be clockwise.
After that, it is using the GEOS:IsValid method.
As I understand you correctly I should interpret this message as a warning,
not as an error.

I also tried your suggestion:
ogr2ogr -sql "select ST_ForceLHR(geometry) from ogr_clipped" -dialect
sqlite ogr_clipped_lhr.shp ogr_clipped.shp
It is very fast, only a few seconds on my 700k shapes, but the result is
the same. I still get the 'Polygon must be clockwise' error.
Of course, MapWinGIS also has a fix method, but it is very strict and not
so fast with 700k shapes.

I'll send the resulting shapefile to my client and ask if his application
can process the data.

Thanks,



Paul

*Paul Meems *
Release manager, configuration manager
and forum moderator of MapWindow GIS.
www.mapwindow.org

Owner of MapWindow.nl - Support for
Dutch speaking users.
www.mapwindow.nl


*The MapWindow GIS project has moved to GitHub
<https://github.com/MapWindow>!*


Download the latest MapWinGIS mapping engine.
<https://github.com/MapWindow/MapWinGIS/releases>

Download the latest MapWindow 5 open source desktop application.
<https://github.com/MapWindow/MapWindow5/releases>

2017-10-12 23:28 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> Paul,
>
>
>
> > But at the red asterix, I have an invalid shape. The reason is according
> to
>
> > GEOS:
>
> > Polygon must be clockwise
>
>
>
> I can't see such error emitted by GEOS source code.
>
>
>
> even at even-i700:~$ grep -r "must be clockwise" geos/
>
> even at even-i700:~$
>
>
>
>
>
> Are you sure this comes from it ? As far as I know, GDAL and GEOS are
> pretty much indifferent regarding the winding order of polygons. Other
> tools might be more sensitive.
>
>
>
> You could possibly use the ST_ForceLHR() function of spatialite (through
> the SQL SQLite dialect) to post process your result:
>
> http://www.gaia-gis.it/gaia-sins/spatialite-sql-4.2.0.html
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/79d43820/attachment.html>

From mlefort at neogeo.fr  Fri Oct 13 01:06:56 2017
From: mlefort at neogeo.fr (Matthieu Lefort)
Date: Fri, 13 Oct 2017 10:06:56 +0200
Subject: [gdal-dev] ogr2ogr : limit memory usage
Message-ID: <D8FE47A8-B70C-440D-91B2-10D76A6DA13D@neogeo.fr>

Hi list,
I am using ogr2ogr to load big geojson files (about 1 Go each) into postgresql database.
On my MacBook, (GDAL 1.11.3, released 2015/09/16), although it lasts about 20 minutes for each file, this works fine.
I tried to do the same thing on a VPS (Debian Stretch 9.2, 8 Go RAM) but the process consumes all RAM in 20 seconds before stopping (out of memory).
Install was made with apt-get install gdal-bin. (GDAL 2.1.2, released 2016/10/24)

Is there a way to control memory usage or to avoid at least using more memory than the available one ?

Thanks for your help !

- Matthieu Lefort -
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/a42bfa8f/attachment-0001.sig>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Oct 13 01:28:32 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Fri, 13 Oct 2017 01:28:32 -0700 (MST)
Subject: [gdal-dev] Clipping shapefile with another produces invalid
	shapes
In-Reply-To: <2747206.glo2UCT3DP@even-i700>
References: <CAHNf2YR5JPPqdY_Af+ph8_RkoiuoryGhtogfRCZ7vO-UnPF6HQ@mail.gmail.com>
 <2747206.glo2UCT3DP@even-i700>
Message-ID: <1507883312737-0.post@n6.nabble.com>

Even Rouault-2 wrote
> You could possibly use the ST_ForceLHR() function of spatialite (through
> the SQL SQLite 
> dialect) to post process your result:
> http://www.gaia-gis.it/gaia-sins/spatialite-sql-4.2.0.html

Interesting, that ST_ForceLHR in Spatialite gives the same result than
ST_ForceRHR in PostGIS.

Description for Spatialite:
Any Polygon Ring will be oriented accordingly to Left Hand Rule (Exterior
Ring will be clockwise oriented, and Interior Rings will be
counter-clockwise oriented).

Description for PostGIS:
Forces the orientation of the vertices in a polygon to follow a
Right-Hand-Rule, in which the area that is bounded by the polygon is to the
right of the boundary. In particular, the exterior ring is orientated in a
clockwise direction and the interior rings in a counter-clockwise direction.
This function is a synonym for ST_ForcePolygonCW 

Perhaps the rule of thumb would be not to talk just about right hand/left
hand rules in GIS because they are ambiguous, but mention also what it
really means like in the descriptions above, or in the GeoJSON
specification:

A linear ring MUST follow the right-hand rule with respect to the
area it bounds, i.e., exterior rings are counterclockwise, and
holes are clockwise.

-Jukka Rahkonen-




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Fri Oct 13 03:43:29 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 13 Oct 2017 12:43:29 +0200
Subject: [gdal-dev] ogr2ogr : limit memory usage
In-Reply-To: <D8FE47A8-B70C-440D-91B2-10D76A6DA13D@neogeo.fr>
References: <D8FE47A8-B70C-440D-91B2-10D76A6DA13D@neogeo.fr>
Message-ID: <167570775.aMiZ612gua@even-i700>

On vendredi 13 octobre 2017 10:06:56 CEST Matthieu Lefort wrote:
> Hi list,
> I am using ogr2ogr to load big geojson files (about 1 Go each) into
> postgresql database. On my MacBook, (GDAL 1.11.3, released 2015/09/16),
> although it lasts about 20 minutes for each file, this works fine. I tried
> to do the same thing on a VPS (Debian Stretch 9.2, 8 Go RAM) but the
> process consumes all RAM in 20 seconds before stopping (out of memory).
> Install was made with apt-get install gdal-bin. (GDAL 2.1.2, released
> 2016/10/24)
> 
> Is there a way to control memory usage or to avoid at least using more
> memory than the available one ?

Matthieu,

no, this is a known issue ( see https://trac.osgeo.org/gdal/ticket/6540 ) which would require 
substantial changes in the geojson driver to be adressed. It needs to ingest the whole file in 
memory currently, parse it completely, and store the resulting features in RAM. So typically, 
you need 10 to 20 times more RAM than the file size (I wouldn't expect the memory usage to 
be substantially different between GDAL 1.11 and 2.1, but there has been indeed a small 
change to use the MEM driver underneath)

So for now, your best chance is to try splitting the features[] array into smaller files.

https://www.google.fr/search?q=splitting+geojson+files points to various hints on how to 
split geojson files.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/608273c7/attachment.html>

From mlefort at neogeo.fr  Fri Oct 13 03:48:50 2017
From: mlefort at neogeo.fr (Matthieu Lefort)
Date: Fri, 13 Oct 2017 12:48:50 +0200
Subject: [gdal-dev] ogr2ogr : limit memory usage
In-Reply-To: <167570775.aMiZ612gua@even-i700>
References: <D8FE47A8-B70C-440D-91B2-10D76A6DA13D@neogeo.fr>
 <167570775.aMiZ612gua@even-i700>
Message-ID: <3C8557E7-065D-4078-A3ED-E8C006A7A441@neogeo.fr>

OK, I’ll try it. Thanks for theses informations.
Matthieu

> Le 13 oct. 2017 à 12:43, Even Rouault <even.rouault at spatialys.com> a écrit :
> 
> On vendredi 13 octobre 2017 10:06:56 CEST Matthieu Lefort wrote:
> > Hi list,
> > I am using ogr2ogr to load big geojson files (about 1 Go each) into
> > postgresql database. On my MacBook, (GDAL 1.11.3, released 2015/09/16),
> > although it lasts about 20 minutes for each file, this works fine. I tried
> > to do the same thing on a VPS (Debian Stretch 9.2, 8 Go RAM) but the
> > process consumes all RAM in 20 seconds before stopping (out of memory).
> > Install was made with apt-get install gdal-bin. (GDAL 2.1.2, released
> > 2016/10/24)
> >
> > Is there a way to control memory usage or to avoid at least using more
> > memory than the available one ?
> 
> Matthieu,
> 
> no, this is a known issue ( see https://trac.osgeo.org/gdal/ticket/6540 <https://trac.osgeo.org/gdal/ticket/6540> ) which would require substantial changes in the geojson driver to be adressed. It needs to ingest the whole file in memory currently, parse it completely, and store the resulting features in RAM. So typically, you need 10 to 20 times more RAM than the file size (I wouldn't expect the memory usage to be substantially different between GDAL 1.11 and 2.1, but there has been indeed a small change to use the MEM driver underneath)
> 
> So for now, your best chance is to try splitting the features[] array into smaller files.
> 
> https://www.google.fr/search?q=splitting+geojson+files <https://www.google.fr/search?q=splitting+geojson+files> points to various hints on how to split geojson files.
> 
> Even
> 
> 
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com <http://www.spatialys.com/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/575cf364/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/575cf364/attachment.sig>

From even.rouault at spatialys.com  Fri Oct 13 04:01:19 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 13 Oct 2017 13:01:19 +0200
Subject: [gdal-dev] Clipping shapefile with another produces invalid
	shapes
In-Reply-To: <CAHNf2YReVOHOG-Civ93rUhZhJxVzCENiuce2Ca5Op261gWYZwQ@mail.gmail.com>
References: <CAHNf2YR5JPPqdY_Af+ph8_RkoiuoryGhtogfRCZ7vO-UnPF6HQ@mail.gmail.com>
 <2747206.glo2UCT3DP@even-i700>
 <CAHNf2YReVOHOG-Civ93rUhZhJxVzCENiuce2Ca5Op261gWYZwQ@mail.gmail.com>
Message-ID: <5281266.kdNzZPQZ3P@even-i700>

On vendredi 13 octobre 2017 09:06:46 CEST Paul Meems wrote:
> Thanks Even for your quick reply.
> 
> I was using MapWinGIS to perform the validation and I assumed it was just
> using GEOS.
> I did a closer look at the code and it is first doing some internal checks
> like the minimum number of points and the order of the points.
> The code is checking if the polygon shape only has 1 part. If so it should
> be clockwise.
> After that, it is using the GEOS:IsValid method.
> As I understand you correctly I should interpret this message as a warning,
> not as an error.

Different software, standard, formats have differen rules on if there must be a winding order 
and which one it is...

A return of false by GEOS:IsValid() should be examined a bit more closely (but apparently you 
get this error before calling IsValid())

> 
> I also tried your suggestion:
> ogr2ogr -sql "select ST_ForceLHR(geometry) from ogr_clipped" -dialect
> sqlite ogr_clipped_lhr.shp ogr_clipped.shp

Jukka answered on the LHR vs RHR confusion, but I completely missed the fact that you were 
outputting to shapefile. In that case, whatever the original orientation, or if you modified it 
with a SQL statement, the OGR shapefile writer will force the polygons to follow the 
shapefile specification, which requires the outer ring to be in clockwise order. So you 
shouldn't get this error... Which means that either there's an issue in some case in the 
shapefile driver (numerical precision issue), or in the check in MapWinGIS.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/52d72770/attachment-0001.html>

From bontepaarden at gmail.com  Fri Oct 13 04:32:39 2017
From: bontepaarden at gmail.com (Paul Meems)
Date: Fri, 13 Oct 2017 13:32:39 +0200
Subject: [gdal-dev] Clipping shapefile with another produces invalid
	shapes
In-Reply-To: <5281266.kdNzZPQZ3P@even-i700>
References: <CAHNf2YR5JPPqdY_Af+ph8_RkoiuoryGhtogfRCZ7vO-UnPF6HQ@mail.gmail.com>
 <2747206.glo2UCT3DP@even-i700>
 <CAHNf2YReVOHOG-Civ93rUhZhJxVzCENiuce2Ca5Op261gWYZwQ@mail.gmail.com>
 <5281266.kdNzZPQZ3P@even-i700>
Message-ID: <CAHNf2YTEAbYCmyhjYiDRsAj9+nEg2rw1vXLj7wfYKVmPK8CAnA@mail.gmail.com>

Thanks Even and Jukka for the clarification.

Due to historical reasons, MapWinGIS is not using GDAL/OGR to read/write
shapefiles. It is using its own implementation.
For now, I will clip with OGR first and then fix with MapWinGIS, this will
produce valid shapes.
It does take a bit longer.

Should I create a test dataset to reproduce this issue. I'm not capable of
debugging GDAL myself.




Paul

*Paul Meems *
Release manager, configuration manager
and forum moderator of MapWindow GIS.
www.mapwindow.org

Owner of MapWindow.nl - Support for
Dutch speaking users.
www.mapwindow.nl


*The MapWindow GIS project has moved to GitHub
<https://github.com/MapWindow>!*


Download the latest MapWinGIS mapping engine.
<https://github.com/MapWindow/MapWinGIS/releases>

Download the latest MapWindow 5 open source desktop application.
<https://github.com/MapWindow/MapWindow5/releases>

2017-10-13 13:01 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> On vendredi 13 octobre 2017 09:06:46 CEST Paul Meems wrote:
>
> > Thanks Even for your quick reply.
>
> >
>
> > I was using MapWinGIS to perform the validation and I assumed it was just
>
> > using GEOS.
>
> > I did a closer look at the code and it is first doing some internal
> checks
>
> > like the minimum number of points and the order of the points.
>
> > The code is checking if the polygon shape only has 1 part. If so it
> should
>
> > be clockwise.
>
> > After that, it is using the GEOS:IsValid method.
>
> > As I understand you correctly I should interpret this message as a
> warning,
>
> > not as an error.
>
>
>
> Different software, standard, formats have differen rules on if there must
> be a winding order and which one it is...
>
>
>
> A return of false by GEOS:IsValid() should be examined a bit more closely
> (but apparently you get this error before calling IsValid())
>
>
>
> >
>
> > I also tried your suggestion:
>
> > ogr2ogr -sql "select ST_ForceLHR(geometry) from ogr_clipped" -dialect
>
> > sqlite ogr_clipped_lhr.shp ogr_clipped.shp
>
>
>
> Jukka answered on the LHR vs RHR confusion, but I completely missed the
> fact that you were outputting to shapefile. In that case, whatever the
> original orientation, or if you modified it with a SQL statement, the OGR
> shapefile writer will force the polygons to follow the shapefile
> specification, which requires the outer ring to be in clockwise order. So
> you shouldn't get this error... Which means that either there's an issue in
> some case in the shapefile driver (numerical precision issue), or in the
> check in MapWinGIS.
>
>
>
> Even
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/9b9a59b1/attachment.html>

From even.rouault at spatialys.com  Fri Oct 13 08:46:43 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 13 Oct 2017 17:46:43 +0200
Subject: [gdal-dev] Removing the *raster* OGDI driver ?
In-Reply-To: <14957600.LynyE0OHma@even-i700>
References: <14957600.LynyE0OHma@even-i700>
Message-ID: <3986953.iBZZNZ3AAN@even-i700>

On mercredi 11 octobre 2017 14:24:59 CEST Even Rouault wrote:
> Hi,
> 
> I propose to remove the raster OGDI driver from trunk (the vector OGDI
> driver is still useful for VMAP/VPF/DCW)
> 
> There should be no reason to use it anymore since GDAL supports out of the
> box (and probably in a more efficient way) all the raster formats the OGDI
> bridge offers: ADRG, DTED and RPF (CADRG/CIB)
> 
> So speak up now if you see a strong reason to keep it alive.

I've just removed the driver from trunk per 
https://trac.osgeo.org/gdal/ticket/7087

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/e5d1668a/attachment.html>

From julien.michel at cnes.fr  Fri Oct 13 08:52:17 2017
From: julien.michel at cnes.fr (Julien Michel)
Date: Fri, 13 Oct 2017 17:52:17 +0200
Subject: [gdal-dev] vrt and too many open files error
In-Reply-To: <2829090.ClH8iM0g7U@even-i700>
References: <c0510790-dd49-a7a6-dc3e-12735445aafa@cnes.fr>
 <2829090.ClH8iM0g7U@even-i700>
Message-ID: <ded8112f-470c-5e93-9426-7ee98d92e135@cnes.fr>

Thanks Even, it worked.

Regards,

Julien

Le 06/10/2017 à 17:55, Even Rouault a écrit :
>
> On vendredi 6 octobre 2017 17:29:40 CEST Julien Michel wrote:
>
> > Dear all,
>
> >
>
> > I have a VRT file, which I generated by a script I wrote, that simply
>
> > mosaics 2750 tiles (images of the same size). I can not read back this
>
> > vrt file with gdal, it says:
>
> >
>
> > $ gdalinfo cloud_plain.vrt
>
> >
>
> > ERROR 4: Too many open files
>
> > gdalinfo failed - unable to open 'cloud_plain.vrt'.
>
> >
>
> > Reading this tracker [1], I think it should not complain ? Note that
>
> > this happens when parsing the vrt file, not actually reading data. If I
>
> > gdal_translate only a small portion spanning a few tiles, it will still
>
> > complain. Shall I file a bug report or is this behavior expected ?
>
> Julien,
>
> it is likely that if you built it at hand that your VRT sources lack a 
> SourceProperties element
>
> <SourceProperties RasterXSize="xxx" RasterYSize="xxx" DataType="xxx" 
> BlockXSize="xxx" BlockYSize="xxx" />
>
> Without that element, GDAL must open each file, and you hit the 1024 
> file descriptor limit
>
> ~~~
>
> That said, in theory the VRT driver could be improved to avoid having 
> that element at all (and it would be desirable not having it). It is 
> just needed so we can instanciate a ProxyDataset object since it needs 
> to know those characteristics, but the VRT logic itself shouldn't need 
> them until it identifies that it must read from the source. At the 
> time where I improved that point in GDAL, I was still a bit unfamiliar 
> with the code base and didn't dare touching that aspect ;-)
>
> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>

-- 
Julien MICHEL
CNES - DSO/SI/2A - BPI 1219
18, avenue Edouard Belin
31401 Toulouse Cedex 09 - France
Tel: +33 561 282 894 - Fax: +33 561 283 109


From matt.a.hanson at gmail.com  Fri Oct 13 10:47:22 2017
From: matt.a.hanson at gmail.com (Matt Hanson)
Date: Fri, 13 Oct 2017 13:47:22 -0400
Subject: [gdal-dev] Fwd: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed
 and memory improvement
In-Reply-To: <11435221.utSXye5SVc@even-i700>
References: <11435221.utSXye5SVc@even-i700>
Message-ID: <CAGYeuZ=7REYkz=5OjUOK68B2xJFuPaYDe-zR46gZhv1G2Ac0gQ@mail.gmail.com>

Hi Even,

Great work with OpenJPEG! I'm trying to get GDAL trunk compiled with
support for it, but I can't get configuration to find it properly.  On an
Amazon base linux image my simplified Dockerfile is like this:

```
RUN \
    wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz; \
    tar xvf v2.3.0.tar.gz; \
    cd openjpeg-2.3.0; mkdir build; cd build; \
    cmake .. -DCMAKE_BUILT_TYPE=Release; \
    make; make install; make clean;
    #cd ../..; rm -rf openjpeg-* v2.3.0.tar.gz;

RUN \
    git clone https://github.com/OSGeo/gdal.git; cd gdal/gdal; \
    ./configure --with-openjpeg
```

Even though it appears that --with-openjpeg doesn't take any arguments, I
tried anyway with:
--with-openjpeg=/usr/local
--with-openjpeg=yes
--with-openjpeg=/usr/local/include/openjpeg-2.3,/usr/local/lib

I also tried with GDAL 2.2.2 and creating the symlink from
/usr/local/include/openjpeg-2.2 to /usr/local/include/openjpeg-2.3

I've not been able to get configure to turn on openjpeg support.

Are there additional dependencies I'm missing, or is this a problem on
trunk?

Thanks so much in advance!

Matthew Hanson



On Thu, Oct 5, 2017 at 9:49 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
>
>
> I've just done changes in GDAL to be able to use the newly released
> openjpeg version: https://trac.osgeo.org/gdal/ticket/7074
>
>
>
> For trunk,
>
> - for linux builds, autoconf now uses pkg-config to be able to support
> more easily the /usr/include/openjpeg-2.X path pattern
>
> - for windows build, your option OPENJPEG_CFLAGS option now must point
> directly to the the include/openjpeg-2.X path
>
>
>
> For branches/2.2, I've just extended the previous painful pattern to
> handle openjpeg versions.
>
> (if you use GDAL 2.2.2 unmodified, you can just copy rename/symlink the
> include/openjpeg-2.3 to include/openjpeg-2.2, and that will build fine as
> well)
>
>
>
> Even
>
>
>
> ---------- Forwarded Message ----------
>
>
>
> Subject: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed and memory
> improvement
>
> Date: jeudi 5 octobre 2017, 02:42:41 CEST
>
> From: Antonin - OpenJPEG <info at openjpeg.org>
>
> To: openjpeg at googlegroups.com <openjpeg at googlegroups.com>
>
>
>
> Good news everyone !
>
>
>
> OpenJPEG 2.3.0 is released today:
>
> https://github.com/uclouvain/openjpeg/releases/tag/v2.3.0
>
>
>
> This new release finalizes the work made by Even Rouault and funded by
> several academic institutions and archival organizations to make OpenJPEG
> significantly faster and safer.
>
>
>
> In addition to what has been done in v2.2.0 (multithreading at decoding,
> speed optimizations, memory consumption reduction, etc, see
> http://www.openjpeg.org/2017/08/10/OpenJPEG-2.2.0-released for details),
> this release adds improvement to sub-tile decoding.
>
>
>
> Now when you handle a huge single tile image and only wants to decode a
> small part of it, only the window of interest is actually processed: sounds
> quite natural but I can ensure it wasn't that easy to implement. This leads
> to drastic speed and memory improvements as they now only depend on the
> size of the window and not on the original image size. This release also
> adds the ability to decode only a subset of components.
>
>
>
> Overall, if we compare performances of OpenJPEG before all Even's
> optimizations (v2.1.2) and the ones reached by the new v2.3.0 release, we
> observe a 55-60% speed improvement on a single thread whole image decoding
> (even more on big images like 10000x10000). Memory consumption is also
> drastically reduced on mega-image decoding: for example, for a full
> decoding of a single tile 8000x12000 image, it is reduced from 2 to 1.3 GB
> RAM. But more importantly, OpenJPEG is now a workable solution for
> workflows involving partial decoding.
>
>
>
> Benchmarks are hard to compare as there are many variables that can
> influence the results: so if you are an OpenJPEG user, please download and
> try this new release within your workflow ... And share your feedback, that
> would be highly appreciated.
>
>
>
> As indicated above and described in a previous post (
> https://groups.google.com/d/msg/openjpeg/CltNQpbbwm4/jajpDKq0AAAJ), all
> this has been made possible thanks to a funding from academic institutions
> and archival organizations, namely:
>
> - Wellcome Library
>
> - Stanford University
>
> - Nationale Bibliotheek van Nederland (KBNL)
>
> - University of Michigan
>
> - University of California, Los Angeles (UCLA)
>
>
>
> … And logistic support from the International Image Interoperability
> Framework (IIIF), the Council on Library and Information Resources (CLIR),
> intoPIX, and of course the Image and Signal Processing Group (ISPGroup)
> from University of Louvain (UCL, Belgium) hosting the OpenJPEG project.
> Thanks to all of them !
>
>
>
> Many thanks also to Even Rouault, the developper who actually implemented
> these improvements, and of course to all contributors having suggested
> fixes or enhancements.
>
>
>
> Enjoy,
>
>
>
> Antonin
>
>
>
> More info:
>
> News: https://github.com/uclouvain/openjpeg/blob/v2.2.0/NEWS.md
>
> Changelog: https://github.com/uclouvain/openjpeg/blob/v2.2.0/CHANGELOG.md
>
> Full Changelog: https://github.com/uclouvain/openjpeg/compare/v2.1.2...v2.
> 2.0
>
>
>
> --
>
> You are subscribed to the mailing-list of the OpenJPEG project (
> www.openjpeg.org)
>
> To post: email to openjpeg at googlegroups.com
>
> To unsubscribe: email to openjpeg+unsubscribe at googlegroups.com
>
> For more options: visit http://groups.google.com/group/openjpeg
>
> OpenJPEG is mainly supported by :
>
> * UCL Image and Signal Processing Group (http://sites.uclouvain.be/
> ispgroup)
>
> * IntoPIX (www.intopix.com)
>
>
>
> -----------------------------------------
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/5fd3e476/attachment-0001.html>

From even.rouault at spatialys.com  Fri Oct 13 10:58:42 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 13 Oct 2017 19:58:42 +0200
Subject: [gdal-dev] Fwd: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed
	and memory improvement
In-Reply-To: <CAGYeuZ=7REYkz=5OjUOK68B2xJFuPaYDe-zR46gZhv1G2Ac0gQ@mail.gmail.com>
References: <11435221.utSXye5SVc@even-i700>
 <CAGYeuZ=7REYkz=5OjUOK68B2xJFuPaYDe-zR46gZhv1G2Ac0gQ@mail.gmail.com>
Message-ID: <3823601.I61ixlFcDb@even-i700>

On vendredi 13 octobre 2017 13:47:22 CEST Matt Hanson wrote:
> Hi Even,
> 
> Great work with OpenJPEG! I'm trying to get GDAL trunk compiled with
> support for it, but I can't get configuration to find it properly.  On an
> Amazon base linux image my simplified Dockerfile is like this:
> 
> ```
> RUN \
>     wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz; \
>     tar xvf v2.3.0.tar.gz; \
>     cd openjpeg-2.3.0; mkdir build; cd build; \
>     cmake .. -DCMAKE_BUILT_TYPE=Release; \
>     make; make install; make clean;
>     #cd ../..; rm -rf openjpeg-* v2.3.0.tar.gz;
> 
> RUN \
>     git clone https://github.com/OSGeo/gdal.git; cd gdal/gdal; \
>     ./configure --with-openjpeg
> ```
> 
> Even though it appears that --with-openjpeg doesn't take any arguments, I
> tried anyway with:
> --with-openjpeg=/usr/local
> --with-openjpeg=yes
> --with-openjpeg=/usr/local/include/openjpeg-2.3,/usr/local/lib
> 
> I also tried with GDAL 2.2.2 and creating the symlink from
> /usr/local/include/openjpeg-2.2 to /usr/local/include/openjpeg-2.3
> 
> I've not been able to get configure to turn on openjpeg support.
> 
> Are there additional dependencies I'm missing, or is this a problem on
> trunk?

Matt,

I've changed the way autoconf detects openjpeg in GDAL trunk. It now requires the pkg-
config info to be available.
Normally pkg-config should be able to find the info even with the /usr/local installation prefix

At least, that works on our Travis-CI platforms such as
ci/travis/precise_clang/before_install.sh
ci/travis/precise_clang/install.sh

You may try running GDAL configure with
PKG_CONFIG_PATH=/usr/local/lib/pkgconfig set as env variable, in case that helps (which I 
doubt is needed)

Perhaps add a ldconfig after make install of openjpeg ?

You may have a look at config.log generated by GDAL configure to help debugging the issue.

For GDAL 2.2.2, the symlink trick should work too.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/8fb7548c/attachment.html>

From sean at mapbox.com  Fri Oct 13 11:06:40 2017
From: sean at mapbox.com (Sean Gillies)
Date: Fri, 13 Oct 2017 12:06:40 -0600
Subject: [gdal-dev] Fwd: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed
 and memory improvement
In-Reply-To: <CAGYeuZ=7REYkz=5OjUOK68B2xJFuPaYDe-zR46gZhv1G2Ac0gQ@mail.gmail.com>
References: <11435221.utSXye5SVc@even-i700>
 <CAGYeuZ=7REYkz=5OjUOK68B2xJFuPaYDe-zR46gZhv1G2Ac0gQ@mail.gmail.com>
Message-ID: <CADPhZXzjO+o6m2WxfpxDYxHZo3joRHvYEbtjZ2fEkc2o9g0yQw@mail.gmail.com>

Matt,

I've been able to build GDAL with OpenJPEG 2.3.0 by using
the changeset_40330.diff patch (from the GDAL Trac) and no args for
--with-openjpeg:

https://github.com/sgillies/frs-wheel-builds/blob/master/Dockerfile.wheels#L105-L144

These GDAL builds are in the rasterio 1.0a10 wheels on PyPI.


On Fri, Oct 13, 2017 at 11:47 AM, Matt Hanson <matt.a.hanson at gmail.com>
wrote:

> Hi Even,
>
> Great work with OpenJPEG! I'm trying to get GDAL trunk compiled with
> support for it, but I can't get configuration to find it properly.  On an
> Amazon base linux image my simplified Dockerfile is like this:
>
> ```
> RUN \
>     wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz; \
>     tar xvf v2.3.0.tar.gz; \
>     cd openjpeg-2.3.0; mkdir build; cd build; \
>     cmake .. -DCMAKE_BUILT_TYPE=Release; \
>     make; make install; make clean;
>     #cd ../..; rm -rf openjpeg-* v2.3.0.tar.gz;
>
> RUN \
>     git clone https://github.com/OSGeo/gdal.git; cd gdal/gdal; \
>     ./configure --with-openjpeg
> ```
>
> Even though it appears that --with-openjpeg doesn't take any arguments, I
> tried anyway with:
> --with-openjpeg=/usr/local
> --with-openjpeg=yes
> --with-openjpeg=/usr/local/include/openjpeg-2.3,/usr/local/lib
>
> I also tried with GDAL 2.2.2 and creating the symlink from
> /usr/local/include/openjpeg-2.2 to /usr/local/include/openjpeg-2.3
>
> I've not been able to get configure to turn on openjpeg support.
>
> Are there additional dependencies I'm missing, or is this a problem on
> trunk?
>
> Thanks so much in advance!
>
> Matthew Hanson
>
>
>
> On Thu, Oct 5, 2017 at 9:49 AM, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> Hi,
>>
>>
>>
>> I've just done changes in GDAL to be able to use the newly released
>> openjpeg version: https://trac.osgeo.org/gdal/ticket/7074
>>
>>
>>
>> For trunk,
>>
>> - for linux builds, autoconf now uses pkg-config to be able to support
>> more easily the /usr/include/openjpeg-2.X path pattern
>>
>> - for windows build, your option OPENJPEG_CFLAGS option now must point
>> directly to the the include/openjpeg-2.X path
>>
>>
>>
>> For branches/2.2, I've just extended the previous painful pattern to
>> handle openjpeg versions.
>>
>> (if you use GDAL 2.2.2 unmodified, you can just copy rename/symlink the
>> include/openjpeg-2.3 to include/openjpeg-2.2, and that will build fine as
>> well)
>>
>>
>>
>> Even
>>
>>
>>
>> ---------- Forwarded Message ----------
>>
>>
>>
>> Subject: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed and memory
>> improvement
>>
>> Date: jeudi 5 octobre 2017, 02:42:41 CEST
>>
>> From: Antonin - OpenJPEG <info at openjpeg.org>
>>
>> To: openjpeg at googlegroups.com <openjpeg at googlegroups.com>
>>
>>
>>
>> Good news everyone !
>>
>>
>>
>> OpenJPEG 2.3.0 is released today:
>>
>> https://github.com/uclouvain/openjpeg/releases/tag/v2.3.0
>>
>>
>>
>> This new release finalizes the work made by Even Rouault and funded by
>> several academic institutions and archival organizations to make OpenJPEG
>> significantly faster and safer.
>>
>>
>>
>> In addition to what has been done in v2.2.0 (multithreading at decoding,
>> speed optimizations, memory consumption reduction, etc, see
>> http://www.openjpeg.org/2017/08/10/OpenJPEG-2.2.0-released for details),
>> this release adds improvement to sub-tile decoding.
>>
>>
>>
>> Now when you handle a huge single tile image and only wants to decode a
>> small part of it, only the window of interest is actually processed: sounds
>> quite natural but I can ensure it wasn't that easy to implement. This leads
>> to drastic speed and memory improvements as they now only depend on the
>> size of the window and not on the original image size. This release also
>> adds the ability to decode only a subset of components.
>>
>>
>>
>> Overall, if we compare performances of OpenJPEG before all Even's
>> optimizations (v2.1.2) and the ones reached by the new v2.3.0 release, we
>> observe a 55-60% speed improvement on a single thread whole image decoding
>> (even more on big images like 10000x10000). Memory consumption is also
>> drastically reduced on mega-image decoding: for example, for a full
>> decoding of a single tile 8000x12000 image, it is reduced from 2 to 1.3 GB
>> RAM. But more importantly, OpenJPEG is now a workable solution for
>> workflows involving partial decoding.
>>
>>
>>
>> Benchmarks are hard to compare as there are many variables that can
>> influence the results: so if you are an OpenJPEG user, please download and
>> try this new release within your workflow ... And share your feedback, that
>> would be highly appreciated.
>>
>>
>>
>> As indicated above and described in a previous post (
>> https://groups.google.com/d/msg/openjpeg/CltNQpbbwm4/jajpDKq0AAAJ), all
>> this has been made possible thanks to a funding from academic institutions
>> and archival organizations, namely:
>>
>> - Wellcome Library
>>
>> - Stanford University
>>
>> - Nationale Bibliotheek van Nederland (KBNL)
>>
>> - University of Michigan
>>
>> - University of California, Los Angeles (UCLA)
>>
>>
>>
>> … And logistic support from the International Image Interoperability
>> Framework (IIIF), the Council on Library and Information Resources (CLIR),
>> intoPIX, and of course the Image and Signal Processing Group (ISPGroup)
>> from University of Louvain (UCL, Belgium) hosting the OpenJPEG project.
>> Thanks to all of them !
>>
>>
>>
>> Many thanks also to Even Rouault, the developper who actually implemented
>> these improvements, and of course to all contributors having suggested
>> fixes or enhancements.
>>
>>
>>
>> Enjoy,
>>
>>
>>
>> Antonin
>>
>>
>>
>> More info:
>>
>> News: https://github.com/uclouvain/openjpeg/blob/v2.2.0/NEWS.md
>>
>> Changelog: https://github.com/uclouvain/openjpeg/blob/v2.2.0/CHANGELOG.md
>>
>> Full Changelog: https://github.com/uclouvain/o
>> penjpeg/compare/v2.1.2...v2.2.0
>>
>>
>>
>> --
>>
>> You are subscribed to the mailing-list of the OpenJPEG project (
>> www.openjpeg.org)
>>
>> To post: email to openjpeg at googlegroups.com
>>
>> To unsubscribe: email to openjpeg+unsubscribe at googlegroups.com
>>
>> For more options: visit http://groups.google.com/group/openjpeg
>>
>> OpenJPEG is mainly supported by :
>>
>> * UCL Image and Signal Processing Group (http://sites.uclouvain.be/isp
>> group)
>>
>> * IntoPIX (www.intopix.com)
>>
>>
>>
>> -----------------------------------------
>>
>> --
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/ddff8bed/attachment-0001.html>

From matt.a.hanson at gmail.com  Fri Oct 13 12:32:11 2017
From: matt.a.hanson at gmail.com (Matt Hanson)
Date: Fri, 13 Oct 2017 15:32:11 -0400
Subject: [gdal-dev] Fwd: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed
 and memory improvement
In-Reply-To: <CADPhZXzjO+o6m2WxfpxDYxHZo3joRHvYEbtjZ2fEkc2o9g0yQw@mail.gmail.com>
References: <11435221.utSXye5SVc@even-i700>
 <CAGYeuZ=7REYkz=5OjUOK68B2xJFuPaYDe-zR46gZhv1G2Ac0gQ@mail.gmail.com>
 <CADPhZXzjO+o6m2WxfpxDYxHZo3joRHvYEbtjZ2fEkc2o9g0yQw@mail.gmail.com>
Message-ID: <CAGYeuZknV3V+hQs1eMtzviGjHiasTJ4s3tSMxd5eutu6Jw6Gvw@mail.gmail.com>

Thanks guys, I got it to work from the 2.2 repo branch, which has the
change on it. I could not get it to work with trunk.

On Fri, Oct 13, 2017 at 2:06 PM, Sean Gillies <sean at mapbox.com> wrote:

> Matt,
>
> I've been able to build GDAL with OpenJPEG 2.3.0 by using
> the changeset_40330.diff patch (from the GDAL Trac) and no args for
> --with-openjpeg:
>
> https://github.com/sgillies/frs-wheel-builds/blob/master/
> Dockerfile.wheels#L105-L144
>
> These GDAL builds are in the rasterio 1.0a10 wheels on PyPI.
>
>
> On Fri, Oct 13, 2017 at 11:47 AM, Matt Hanson <matt.a.hanson at gmail.com>
> wrote:
>
>> Hi Even,
>>
>> Great work with OpenJPEG! I'm trying to get GDAL trunk compiled with
>> support for it, but I can't get configuration to find it properly.  On an
>> Amazon base linux image my simplified Dockerfile is like this:
>>
>> ```
>> RUN \
>>     wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz; \
>>     tar xvf v2.3.0.tar.gz; \
>>     cd openjpeg-2.3.0; mkdir build; cd build; \
>>     cmake .. -DCMAKE_BUILT_TYPE=Release; \
>>     make; make install; make clean;
>>     #cd ../..; rm -rf openjpeg-* v2.3.0.tar.gz;
>>
>> RUN \
>>     git clone https://github.com/OSGeo/gdal.git; cd gdal/gdal; \
>>     ./configure --with-openjpeg
>> ```
>>
>> Even though it appears that --with-openjpeg doesn't take any arguments, I
>> tried anyway with:
>> --with-openjpeg=/usr/local
>> --with-openjpeg=yes
>> --with-openjpeg=/usr/local/include/openjpeg-2.3,/usr/local/lib
>>
>> I also tried with GDAL 2.2.2 and creating the symlink from
>> /usr/local/include/openjpeg-2.2 to /usr/local/include/openjpeg-2.3
>>
>> I've not been able to get configure to turn on openjpeg support.
>>
>> Are there additional dependencies I'm missing, or is this a problem on
>> trunk?
>>
>> Thanks so much in advance!
>>
>> Matthew Hanson
>>
>>
>>
>> On Thu, Oct 5, 2017 at 9:49 AM, Even Rouault <even.rouault at spatialys.com>
>> wrote:
>>
>>> Hi,
>>>
>>>
>>>
>>> I've just done changes in GDAL to be able to use the newly released
>>> openjpeg version: https://trac.osgeo.org/gdal/ticket/7074
>>>
>>>
>>>
>>> For trunk,
>>>
>>> - for linux builds, autoconf now uses pkg-config to be able to support
>>> more easily the /usr/include/openjpeg-2.X path pattern
>>>
>>> - for windows build, your option OPENJPEG_CFLAGS option now must point
>>> directly to the the include/openjpeg-2.X path
>>>
>>>
>>>
>>> For branches/2.2, I've just extended the previous painful pattern to
>>> handle openjpeg versions.
>>>
>>> (if you use GDAL 2.2.2 unmodified, you can just copy rename/symlink the
>>> include/openjpeg-2.3 to include/openjpeg-2.2, and that will build fine as
>>> well)
>>>
>>>
>>>
>>> Even
>>>
>>>
>>>
>>> ---------- Forwarded Message ----------
>>>
>>>
>>>
>>> Subject: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed and memory
>>> improvement
>>>
>>> Date: jeudi 5 octobre 2017, 02:42:41 CEST
>>>
>>> From: Antonin - OpenJPEG <info at openjpeg.org>
>>>
>>> To: openjpeg at googlegroups.com <openjpeg at googlegroups.com>
>>>
>>>
>>>
>>> Good news everyone !
>>>
>>>
>>>
>>> OpenJPEG 2.3.0 is released today:
>>>
>>> https://github.com/uclouvain/openjpeg/releases/tag/v2.3.0
>>>
>>>
>>>
>>> This new release finalizes the work made by Even Rouault and funded by
>>> several academic institutions and archival organizations to make OpenJPEG
>>> significantly faster and safer.
>>>
>>>
>>>
>>> In addition to what has been done in v2.2.0 (multithreading at decoding,
>>> speed optimizations, memory consumption reduction, etc, see
>>> http://www.openjpeg.org/2017/08/10/OpenJPEG-2.2.0-released for
>>> details), this release adds improvement to sub-tile decoding.
>>>
>>>
>>>
>>> Now when you handle a huge single tile image and only wants to decode a
>>> small part of it, only the window of interest is actually processed: sounds
>>> quite natural but I can ensure it wasn't that easy to implement. This leads
>>> to drastic speed and memory improvements as they now only depend on the
>>> size of the window and not on the original image size. This release also
>>> adds the ability to decode only a subset of components.
>>>
>>>
>>>
>>> Overall, if we compare performances of OpenJPEG before all Even's
>>> optimizations (v2.1.2) and the ones reached by the new v2.3.0 release, we
>>> observe a 55-60% speed improvement on a single thread whole image decoding
>>> (even more on big images like 10000x10000). Memory consumption is also
>>> drastically reduced on mega-image decoding: for example, for a full
>>> decoding of a single tile 8000x12000 image, it is reduced from 2 to 1.3 GB
>>> RAM. But more importantly, OpenJPEG is now a workable solution for
>>> workflows involving partial decoding.
>>>
>>>
>>>
>>> Benchmarks are hard to compare as there are many variables that can
>>> influence the results: so if you are an OpenJPEG user, please download and
>>> try this new release within your workflow ... And share your feedback, that
>>> would be highly appreciated.
>>>
>>>
>>>
>>> As indicated above and described in a previous post (
>>> https://groups.google.com/d/msg/openjpeg/CltNQpbbwm4/jajpDKq0AAAJ), all
>>> this has been made possible thanks to a funding from academic institutions
>>> and archival organizations, namely:
>>>
>>> - Wellcome Library
>>>
>>> - Stanford University
>>>
>>> - Nationale Bibliotheek van Nederland (KBNL)
>>>
>>> - University of Michigan
>>>
>>> - University of California, Los Angeles (UCLA)
>>>
>>>
>>>
>>> … And logistic support from the International Image Interoperability
>>> Framework (IIIF), the Council on Library and Information Resources (CLIR),
>>> intoPIX, and of course the Image and Signal Processing Group (ISPGroup)
>>> from University of Louvain (UCL, Belgium) hosting the OpenJPEG project.
>>> Thanks to all of them !
>>>
>>>
>>>
>>> Many thanks also to Even Rouault, the developper who actually
>>> implemented these improvements, and of course to all contributors having
>>> suggested fixes or enhancements.
>>>
>>>
>>>
>>> Enjoy,
>>>
>>>
>>>
>>> Antonin
>>>
>>>
>>>
>>> More info:
>>>
>>> News: https://github.com/uclouvain/openjpeg/blob/v2.2.0/NEWS.md
>>>
>>> Changelog: https://github.com/uclouvain/openjpeg/blob/v2.2.0/CHANGELOG.
>>> md
>>>
>>> Full Changelog: https://github.com/uclouvain/o
>>> penjpeg/compare/v2.1.2...v2.2.0
>>>
>>>
>>>
>>> --
>>>
>>> You are subscribed to the mailing-list of the OpenJPEG project (
>>> www.openjpeg.org)
>>>
>>> To post: email to openjpeg at googlegroups.com
>>>
>>> To unsubscribe: email to openjpeg+unsubscribe at googlegroups.com
>>>
>>> For more options: visit http://groups.google.com/group/openjpeg
>>>
>>> OpenJPEG is mainly supported by :
>>>
>>> * UCL Image and Signal Processing Group (http://sites.uclouvain.be/isp
>>> group)
>>>
>>> * IntoPIX (www.intopix.com)
>>>
>>>
>>>
>>> -----------------------------------------
>>>
>>> --
>>>
>>> Spatialys - Geospatial professional services
>>>
>>> http://www.spatialys.com
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
>
> --
> Sean Gillies
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/7ae15147/attachment.html>

From even.rouault at spatialys.com  Fri Oct 13 12:48:10 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 13 Oct 2017 21:48:10 +0200
Subject: [gdal-dev] Fwd: [OpenJPEG] OpenJPEG v2.3.0 is out: more speed
	and memory improvement
In-Reply-To: <CAGYeuZknV3V+hQs1eMtzviGjHiasTJ4s3tSMxd5eutu6Jw6Gvw@mail.gmail.com>
References: <11435221.utSXye5SVc@even-i700>
 <CADPhZXzjO+o6m2WxfpxDYxHZo3joRHvYEbtjZ2fEkc2o9g0yQw@mail.gmail.com>
 <CAGYeuZknV3V+hQs1eMtzviGjHiasTJ4s3tSMxd5eutu6Jw6Gvw@mail.gmail.com>
Message-ID: <2398856.z5us3CPpGc@even-i700>

On vendredi 13 octobre 2017 15:32:11 CEST Matt Hanson wrote:
> Thanks guys, I got it to work from the 2.2 repo branch, which has the
> change on it. I could not get it to work with trunk.

Is pkg-config installed in your Docker env ? Can you share your dockerfile ?

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ari.jolma at gmail.com  Fri Oct 13 13:19:02 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 13 Oct 2017 23:19:02 +0300
Subject: [gdal-dev] Namespaces in GMLAS
Message-ID: <a9614f02-91ac-5398-16d7-83f605d48f1a@gmail.com>

I've been looking into a GML file ('akaava:Suojelualue') with ogrinfo 
I've got from a Finnish WFS

https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetCapabilities

First, the XSD files needed a bit of fixing: link GML to 3.1.1 instead 
of 2.1.2 in opaskartta.turku.fi_Tekl..., and fix [-] to [\-] in 
www.paikkatietopalvelu.fi_gml_yhteiset_2.1.6_yhteiset.xsd

After that, ogrinfo does not complain but does not find anything in the 
GML file. I dug in a bit and it turns out that 
GMLASSchemaAnalyzer::Analyze did not use the correct schema files (gml, 
asemakaava, etc) in the 2nd and 3rd passes it does through the 
namespaces -- it did in the first pass. For some reason only the 
namespace -> schema pairs in the GML get into aoNamespaces array. The 
correct ones are available in oMapURIToPrefixWithEmpty.

Probably the way Tekla constructs the GML file is unusual (my guess, I'm 
no expert on this subject). The xsi:schemaLocation in the GML file 
contains only two pairs: wfs -> wfs-schema and kuntagml -> describe 
featuretype request URL. These are in aoNamespaces. The latter then 
imports the gml and asemakaava schemas.

Modifying the code to read the namespaces in the 2nd and 3rd pass 
similarly as in 1st pass I get a long list of layers with ogrinfo and 
can read something real out of the GML file with ogr2ogr. However, 
there's two HTTP 404 errors -- probably some schemas are not where 
expected(?).

Could you Even sched some light on what's going on?

Thanks,

Ari



From sean at mapbox.com  Fri Oct 13 13:51:28 2017
From: sean at mapbox.com (Sean Gillies)
Date: Fri, 13 Oct 2017 14:51:28 -0600
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <5087572.fjGmY6Wygd@even-i700>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
 <19360835.gTxv5qfqzm@even-i700>
 <CAF1M8pei411Afpd97yxcVu2+E6ALduxVdw4v0hOtZ6EYNa8Nfg@mail.gmail.com>
 <5087572.fjGmY6Wygd@even-i700>
Message-ID: <CADPhZXwHnuzhcpYwaqXv_kW8vtcyB7XRQ4_0S5E=QjUeWXqpdQ@mail.gmail.com>

Even, Craig,

On Thu, Oct 12, 2017 at 4:15 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Craig,
>
>
>
> > True, but that does eliminate ambiguity in the URL, and does so in a
>
> > well-known way.
>

I'd like to point out that very often URLs in a query string do not need to
be encoded. Both the Python (see my earlier example) and Node standard
parsers will handle the string

/viscurl?option1=foo&option2=bar&url=https://example.com/foo.tif

without any URL encoding.

> url.parse('/viscurl?option1=foo&option2=bar&url=
https://example.com/foo.tif', true)
Url {
  protocol: null,
  slashes: null,
  auth: null,
  host: null,
  port: null,
  hostname: null,
  hash: null,
  search: '?option1=foo&option2=bar&url=https://example.com/foo.tif',
  query:
   { option1: 'foo',
     option2: 'bar',
     url: 'https://example.com/foo.tif' },
  pathname: '/viscurl',
  path: '/viscurl?option1=foo&option2=bar&url=https://example.com/foo.tif',
  href: '/viscurl?option1=foo&option2=bar&url=https://example.com/foo.tif' }

If the web resource has a query string of its own, it will certainly have
to be encoded.

Typing URLs by hand into the console, URL-encoded or not, is always going
to invite mistakes. In my experience, we're more likely to be selecting and
copying from a UI element or the output of another program, and it would be
unfortunate to trade away the benefits of URL standards only to make typing
easier.

>
>
> > Does the current scheme use any encoding?
>
>
>
> No
>
>
>
> > How would you escape text in
>
> > option values that might use `=` and `,` etc? Or are there guaranteed to
> be
>
> > no freeform-text options in these paths?
>
>
>
> Currently, given the supported set of options and values, yes. In case of
> future ambiguity, yes, we'd need to define some escaping rules.
>

The web already has escaping rules built in, one of the benefits I alluded
to above.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171013/22ee1c90/attachment.html>

From even.rouault at spatialys.com  Fri Oct 13 15:09:32 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 14 Oct 2017 00:09:32 +0200
Subject: [gdal-dev] Namespaces in GMLAS
In-Reply-To: <a9614f02-91ac-5398-16d7-83f605d48f1a@gmail.com>
References: <a9614f02-91ac-5398-16d7-83f605d48f1a@gmail.com>
Message-ID: <1741993.cYMXavuBLp@even-i700>

On vendredi 13 octobre 2017 23:19:02 CEST Ari Jolma wrote:
> I've been looking into a GML file ('akaava:Suojelualue') with ogrinfo
> I've got from a Finnish WFS
> 
> https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetCapabilities
> 
> First, the XSD files needed a bit of fixing: link GML to 3.1.1 instead
> of 2.1.2 in opaskartta.turku.fi_Tekl..., and fix [-] to [\-] in
> www.paikkatietopalvelu.fi_gml_yhteiset_2.1.6_yhteiset.xsd
> 
> After that, ogrinfo does not complain but does not find anything in the
> GML file. I dug in a bit and it turns out that
> GMLASSchemaAnalyzer::Analyze did not use the correct schema files (gml,
> asemakaava, etc) in the 2nd and 3rd passes it does through the
> namespaces -- it did in the first pass. For some reason only the
> namespace -> schema pairs in the GML get into aoNamespaces array. The
> correct ones are available in oMapURIToPrefixWithEmpty.
> 
> Probably the way Tekla constructs the GML file is unusual (my guess, I'm
> no expert on this subject). The xsi:schemaLocation in the GML file
> contains only two pairs: wfs -> wfs-schema and kuntagml -> describe
> featuretype request URL. These are in aoNamespaces. The latter then
> imports the gml and asemakaava schemas.
> 
> Modifying the code to read the namespaces in the 2nd and 3rd pass
> similarly as in 1st pass I get a long list of layers with ogrinfo and
> can read something real out of the GML file with ogr2ogr. However,
> there's two HTTP 404 errors -- probably some schemas are not where
> expected(?).
> 
> Could you Even sched some light on what's going on?

Hi Ari,

Oh no, I only do GMLAS stuff as a punishment when I have done some really evil 
action ;-)

I've downloaded the content of
"https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?
request=GetFeature&service=WFS&typename=kanta:Kiinteisto&version=1.1.0"
I didn't had to do schema fixing, but I probably already did try with that 
schema in the past since I had it cached, so perhaps I already fixed stuff.

Regarding the namespace issue, the core issue was that the .xml file only 
points to the wfs and kuntagml namespaces, but none of them has "interesting" 
elements. The kuntagml namespace happens to be a "wrapper" around the gml and 
kantakartta namespaces, and that's this latter one that has interesting 
elements.
The rational for that behaviour is that generally only the namespaces directly 
pointed by the document contain interesting elements. Indirectly imported 
namespaces just contain technical stuff you don't really want to expose as 
layers. But yes that heuristics wasn't bullet proof.

So a workaround is to add "http://www.paikkatietopalvelu.fi/gml/kantakartta 
http://www.paikkatietopalvelu.fi/gml/kantakartta/2.1.1/kantakartta.xsd" in the 
xsi:schemaLocation.
But I did a fix in https://trac.osgeo.org/gdal/changeset/40429 to avoid doing 
that: when "first choice" namespaces contain nothing interesting, fallback to 
the namespaces they indirectly import
I also pushed before a fix for gml:PolyhedralSurface parsing

With the fix (or manual workaround):

$ ogrinfo GMLAS:kanta.xml  -oo remove_unused_layers=yes 
INFO: Open of `GMLAS:kanta.xml'
      using driver `GMLAS' successful.
1: kiinteisto (None)
2: labelit (None)
3: labelit_label (Point)
4: sijainnit (None)
5: sijainnit_sijainti (Curve, Curve, Surface)
6: referenssipiste (Point, Point)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Oct 13 15:29:41 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 14 Oct 2017 00:29:41 +0200
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <CADPhZXwHnuzhcpYwaqXv_kW8vtcyB7XRQ4_0S5E=QjUeWXqpdQ@mail.gmail.com>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
 <5087572.fjGmY6Wygd@even-i700>
 <CADPhZXwHnuzhcpYwaqXv_kW8vtcyB7XRQ4_0S5E=QjUeWXqpdQ@mail.gmail.com>
Message-ID: <1589072.2KHdWIEkaR@even-i700>

Sean,

> I'd like to point out that very often URLs in a query string do not need to
> be encoded. Both the Python (see my earlier example) and Node standard
> parsers will handle the string
> 

While researching that issue, and from my pat memories, I found that there is 
a bit of confusion around the subject when to escape or not

> /viscurl?option1=foo&option2=bar&url=https://example.com/foo.tif
> 
> without any URL encoding.

https://tools.ietf.org/html/rfc3986 says in "3.4.  Query"

"""
      query       = *( pchar / "/" / "?" )

   The characters slash ("/") and question mark ("?") may represent data
   within the query component.  Beware that some older, erroneous
   implementations may not handle such data correctly when it is used as
   the base URI for relative references (Section 5.1), apparently
   because they fail to distinguish query data from path data when
   looking for hierarchical separators.  However, as query components
   are often used to carry identifying information in the form of
   "key=value" pairs and one frequently used value is a reference to
   another URI, it is sometimes better for usability to avoid percent-
   encoding those characters.
"""

But urrlib.urlencode() encodes slashes in values of query arguments, so they 
probably decided to avoid isues with the above mentionned older, erroneous 
implementations

>>> urllib.urlencode({'foo':'bar', 'url': 'http://example.com'})
'url=http%3A%2F%2Fexample.com&foo=bar'

> The web already has escaping rules built in, one of the benefits I alluded
> to above.

OK, let's follow your suggestion of using URL query string formatting, while 
this hasn't gone in a official release. Could you create a ticket about that ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nowosad at amu.edu.pl  Sun Oct 15 07:16:35 2017
From: nowosad at amu.edu.pl (Jakub Nowosad)
Date: Sun, 15 Oct 2017 10:16:35 -0400
Subject: [gdal-dev] GPKG writing times
Message-ID: <d4f8847f-9a31-0b35-9658-d28850ceb4fc@amu.edu.pl>

Hi,

I'd like to draw your attention to the case of slow (comparing to .shp) 
writing times of GPKG.
See https://github.com/r-spatial/sf/issues/470 for the details and some 
benchmarks.

Thanks,
Jakub
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171015/3c2a29a7/attachment.html>

From edzer.pebesma at uni-muenster.de  Sun Oct 15 09:13:33 2017
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Sun, 15 Oct 2017 18:13:33 +0200
Subject: [gdal-dev] Time in GDAL
Message-ID: <a3ec652f-6af0-8004-0332-b03a6d66b61d@uni-muenster.de>

Hi,

last week the openEO project [1] started, in which we aim to develop an
interface (api) to cloud-based processing of Earth observation (EO)
imagery. For this project, GDAL has been the blueprint in terms of
successfully integrating the diverse landscape of file formats [2]. The
project allocated a budget for subcontracting some GDAL development.

During discussions, it became clear that for practically everyone
involved, GDAL plays an important role, be it for ingesting images, or
for processing them on the fly. Also, a key requirement in all cases
seems to be to do something useful with time series of EO images. Here,
the current inability of GDAL to report the time associated with
datasets, subdatasets and/or bands was noted as a high potential area
for extending gdal. Currently, parsing this from the metadata strings is
possible but messy and ad hoc, error prone, and has to be done by each
client for every driver.

My proposal is to augment the GDAL interface to raster data with two
methods, GetStartTime() and GetEndTime(), which operate (at least) on
bands and report the start and end times of the data acquisition using a
simple interface, e.g. similar to poFeature->GetFieldAsDataTime [3] does
(returning IIRC either GMT or local time zone). Drivers should fill
these fields (which might be equal) or else a flag should indicate the
time is missing.

## Start and end time

Although most snapshot-based products may have identical start and end
times, many others don't; a lot of derived (e.g. climate) products give
daily or monthly averages, where start and end time differ.

## Multiple time stamps

Datasets might have many time stamps, e.g. some related to the
processing steps that a dataset has undergone. Other datasets, e.g.
forecast data, may have two relevant times (two-dimensional time): the
time at which the forecast was made (t0), and the forecast times the
band refers to (e.g. t0+6h, t0+12h, t0+18h, t0+24h etc). For both cases,
I believe there is a "default time": the time of observation or
prediction a band refers to. Access to other time aspects could be
obtained by tags as in GetStartTime(..., reference =
"TIME_OF_REPROCESSING"), which might be driver dependent.

## NetCDF/udunits time

Most file formats will have time strings like 2017-03-14T10:40:11.026Z
that should be pretty straightforward to handle. NetCDF however uses
time encoded in a form understood by udunits2 [4]; for example band
metadata may have

 time#units=days since 1978-01-01 00:00:00
 NETCDF_DIM_time=1339

which refers to 1339 days after 1978-01-01 00:00:00. Since the units can
be set very flexible, for such data I think one should either:
(i) have GDAL link (optionally) to udunits2, and if present, use the
library to convert to OFTDateTime;
(ii) do not try this but return the time units as string and the time as
double, and leave the conversion to the client.


I would like to know:
- whether there is support for this idea, in general (time in gdal),
- whether the approach sketched above makes sense
- what I've overlooked, what are the potential road blocks


[1] http://openeo.org/
[2] http://r-spatial.org/2016/11/29/openeo.html
[3]
http://www.gdal.org/classOGRFeature.html#a6c5d2444407b07e07b79863c42ee7a49
[4] https://www.unidata.ucar.edu/software/udunits/
-- 
Edzer Pebesma
Institute for Geoinformatics  (ifgi),  University of Münster
Heisenbergstraße 2, 48149 Münster, Germany; +49 251 83 33081
Journal of Statistical Software:   http://www.jstatsoft.org/
Computers & Geosciences:   http://elsevier.com/locate/cageo/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 473 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171015/aabb0385/attachment.sig>

From even.rouault at spatialys.com  Sun Oct 15 12:23:09 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 15 Oct 2017 21:23:09 +0200
Subject: [gdal-dev] Time in GDAL
In-Reply-To: <a3ec652f-6af0-8004-0332-b03a6d66b61d@uni-muenster.de>
References: <a3ec652f-6af0-8004-0332-b03a6d66b61d@uni-muenster.de>
Message-ID: <2278626.4d20AL68Up@even-i700>

Hi Edzer,

> Currently, parsing this from the metadata strings is
> possible but messy and ad hoc, error prone, and has to be done by each
> client for every driver.

Agreed that metadata handling can be messy and is a bit in freestyle mode 
between drivers. In GDAL 2.0, Dmitry introduced metadata readers and a 
formalism to standardize a few common ones. This is mentionned in the "IMAGERY 
Domain (remote sensing)" paragraph of http://gdal.org/gdal_datamodel.html . As 
this is short, I put it inline 
"""
For satellite or aerial imagery the IMAGERY Domain may be present. It depends 
on the existence of special metadata files near the image file. The files at 
the same directory with image file tested by the set of metadata readers, if 
files can be processed by the metadata reader, it fill the IMAGERY Domain with 
the following items:

    SATELLITEID: A satellite or scanner name
    CLOUDCOVER: Cloud coverage. The value between 0 - 100 or 999 if not 
available
    ACQUISITIONDATETIME: The image acquisition date time in UTC
"""

A few examples from the autotest suite

$ gdalinfo ../autotest/gcore/data/md_dg.tif -mdd imagery
[...]
Metadata (imagery):
  ACQUISITIONDATETIME=2010-04-01 12:00:00
  CLOUDCOVER=2
  SATELLITEID=WV03

$ gdalinfo ../autotest/gcore/data/md_re.tif -mdd imagery
[...]
Metadata (imagery):
  ACQUISITIONDATETIME=2010-02-01 12:00:00
  CLOUDCOVER=0
  SATELLITEID=RE-0

$ gdalinfo ../autotest/gcore/data/md_ls_b1.tif -mdd imagery
[...]
  ACQUISITIONDATETIME=2015-09-01 17:00:00
  CLOUDCOVER=1
  SATELLITEID=LANDSAT_8


This has been implement currently for the GTiff driver with side car files 
that contain metadata and whose format depend on each imagery provider (as 
well as in TIL and DIMAP drivers). There are currently readers for ALOS, 
DigitalGlobe, Eros, GeoEye, Kompsat, Landsat, OrbView, Pleiades, RapidEye, 
Resurs-DK1 and Spot.

So I can imagine we could start from this, extend it to other drivers where 
that make sense, and have distinct items when start time != end time, or just 
consider that ACQUISITIONDATETIME is the start time, and add a 
ENDACQUISITIONDATETIME.

You mention above "GetStartTime() and GetEndTime(), which operate (at least) 
on band". Do you think per band is needed ? The above approach is per dataset, 
but the GetMetadata() API is also available on bands, so that could be 
replicated there too if per-band timestamps are needed.

> ## Multiple time stamps
> 
> Datasets might have many time stamps, e.g. some related to the
> processing steps that a dataset has undergone. Other datasets, e.g.
> forecast data, may have two relevant times (two-dimensional time): the
> time at which the forecast was made (t0), and the forecast times the
> band refers to (e.g. t0+6h, t0+12h, t0+18h, t0+24h etc). For both cases,
> I believe there is a "default time": the time of observation or
> prediction a band refers to. Access to other time aspects could be
> obtained by tags as in GetStartTime(..., reference =
> "TIME_OF_REPROCESSING"), which might be driver dependent.

Yes, for the GRIB2 driver, we have (actually per-band) metadata like:
    GRIB_FORECAST_SECONDS=68400 sec
    GRIB_REF_TIME=  1203613200 sec UTC
    GRIB_VALID_TIME=  1203681600 sec UTC

GRIB_REF_TIME is your t0 / the time at which observations have been collected, 
and GRIB_VALID_TIME the time of the forecast.
The GRIB_REF_TIME could be potentially normalized as the ACQUISITIONDATETIME 
and the GRIB_VALID_TIME as a FORECASTDATETIME


> 
> ## NetCDF/udunits time
> 
> Most file formats will have time strings like 2017-03-14T10:40:11.026Z
> that should be pretty straightforward to handle. NetCDF however uses
> time encoded in a form understood by udunits2 [4]; for example band
> metadata may have
> 
>  time#units=days since 1978-01-01 00:00:00
>  NETCDF_DIM_time=1339
> 
> which refers to 1339 days after 1978-01-01 00:00:00. Since the units can
> be set very flexible, for such data I think one should either:
> (i) have GDAL link (optionally) to udunits2, and if present, use the
> library to convert to OFTDateTime;
> (ii) do not try this but return the time units as string and the time as
> double, and leave the conversion to the client.

(iii) if there are not so many variants of expressing the time (I can't 
imagine there are hundreds, and as GDAL has already "a couple" dependencies, 
better avoid adding new ones if we can avoid), we could also hard code the 
normalization in the netCDF driver.

> 
> 
> I would like to know:
> - whether there is support for this idea, in general (time in gdal),

I do think this makes sense

> - whether the approach sketched above makes sense

I'm not completely sure if we really need a dedicated method as you suggested, 
or if we can do with the normalized metadata approach that was introduced with 
the IMAGERY metadata domain.

> - what I've overlooked, what are the potential road blocks

Something not covered is the writing side, ie preservation of those metadata 
when typically gdal_translat'ing. But this can be considered out of scope 
currently. Potentially drivers could try to parse the IMAGERY metadata domain 
of the source dataset and do their best to encode the items into the natural 
way of the output driver.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sun Oct 15 12:29:48 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 15 Oct 2017 21:29:48 +0200
Subject: [gdal-dev] GPKG writing times
In-Reply-To: <d4f8847f-9a31-0b35-9658-d28850ceb4fc@amu.edu.pl>
References: <d4f8847f-9a31-0b35-9658-d28850ceb4fc@amu.edu.pl>
Message-ID: <5074890.9ppa3CnOuq@even-i700>

On dimanche 15 octobre 2017 10:16:35 CEST Jakub Nowosad wrote:
> Hi,
> 
> I'd like to draw your attention to the case of slow (comparing to .shp)
> writing times of GPKG.
> See https://github.com/r-spatial/sf/issues/470 for the details and some
> benchmarks.
> 

Jakub,

A quick search in the code shows that sf doesn't use 
OGRLayer::StartTransaction() / CommitTransaction() to surround calls to 
CreateFeature(). By default, SQLite auto-commits each INSERT, which is slow. 
Doing insertion by batches within a single (or several) transactions helps a 
lot.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From nowosad at amu.edu.pl  Sun Oct 15 12:32:45 2017
From: nowosad at amu.edu.pl (Jakub Nowosad)
Date: Sun, 15 Oct 2017 15:32:45 -0400
Subject: [gdal-dev] GPKG writing times
In-Reply-To: <5074890.9ppa3CnOuq@even-i700>
References: <d4f8847f-9a31-0b35-9658-d28850ceb4fc@amu.edu.pl>
 <5074890.9ppa3CnOuq@even-i700>
Message-ID: <95408ce4-0d39-e4b4-31f6-1a3a8a34ed1c@amu.edu.pl>

Thank you. I'm going to post your answer in the issue.


On 10/15/2017 03:29 PM, Even Rouault wrote:
> On dimanche 15 octobre 2017 10:16:35 CEST Jakub Nowosad wrote:
>> Hi,
>>
>> I'd like to draw your attention to the case of slow (comparing to .shp)
>> writing times of GPKG.
>> See https://github.com/r-spatial/sf/issues/470 for the details and some
>> benchmarks.
>>
> Jakub,
>
> A quick search in the code shows that sf doesn't use
> OGRLayer::StartTransaction() / CommitTransaction() to surround calls to
> CreateFeature(). By default, SQLite auto-commits each INSERT, which is slow.
> Doing insertion by batches within a single (or several) transactions helps a
> lot.
>
> Even
>


From lukepinnerau at gmail.com  Sun Oct 15 16:53:00 2017
From: lukepinnerau at gmail.com (Luke)
Date: Sun, 15 Oct 2017 16:53:00 -0700 (MST)
Subject: [gdal-dev] Time in GDAL
In-Reply-To: <2278626.4d20AL68Up@even-i700>
References: <a3ec652f-6af0-8004-0332-b03a6d66b61d@uni-muenster.de>
 <2278626.4d20AL68Up@even-i700>
Message-ID: <1508111580561-0.post@n6.nabble.com>

Just a comment from an end user: perhaps ACQUISITIONDATETIME could store
start and end times using ISO 8601 intervals (forward slash separator) -
start date time/end date time


Luke



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From ari.jolma at gmail.com  Mon Oct 16 03:03:32 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 16 Oct 2017 13:03:32 +0300
Subject: [gdal-dev] Namespaces in GMLAS
In-Reply-To: <1741993.cYMXavuBLp@even-i700>
References: <a9614f02-91ac-5398-16d7-83f605d48f1a@gmail.com>
 <1741993.cYMXavuBLp@even-i700>
Message-ID: <ff9b4810-e549-aff0-7d6d-951859e9a52a@gmail.com>

Thanks,

After fixing srsName attribute in the returned gml (the HTTP errors i 
mention below) I can now read the features in the file (GetNextFeature 
on the dataset object).

As a second step I try to make the download implicit (assuming the 
srsName would be ok) and use the /vsicurl mechanism, i.e., open

/vsicurl/https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetFeature&typename=akaava:Suojelualue

directly.

That seems difficult (impossible?) since GMLAS driver expects the name 
to start with GMLAS prefix. I don't see any obvious way to go around 
that. I can force GDAL to try only GMLAS but that does not help. Would 
it be possible to make OGRGMLASDriverIdentify return true using some option?

Best,

Ari

Even Rouault kirjoitti 14.10.2017 klo 01:09:
> On vendredi 13 octobre 2017 23:19:02 CEST Ari Jolma wrote:
>> I've been looking into a GML file ('akaava:Suojelualue') with ogrinfo
>> I've got from a Finnish WFS
>>
>> https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetCapabilities
>>
>> First, the XSD files needed a bit of fixing: link GML to 3.1.1 instead
>> of 2.1.2 in opaskartta.turku.fi_Tekl..., and fix [-] to [\-] in
>> www.paikkatietopalvelu.fi_gml_yhteiset_2.1.6_yhteiset.xsd
>>
>> After that, ogrinfo does not complain but does not find anything in the
>> GML file. I dug in a bit and it turns out that
>> GMLASSchemaAnalyzer::Analyze did not use the correct schema files (gml,
>> asemakaava, etc) in the 2nd and 3rd passes it does through the
>> namespaces -- it did in the first pass. For some reason only the
>> namespace -> schema pairs in the GML get into aoNamespaces array. The
>> correct ones are available in oMapURIToPrefixWithEmpty.
>>
>> Probably the way Tekla constructs the GML file is unusual (my guess, I'm
>> no expert on this subject). The xsi:schemaLocation in the GML file
>> contains only two pairs: wfs -> wfs-schema and kuntagml -> describe
>> featuretype request URL. These are in aoNamespaces. The latter then
>> imports the gml and asemakaava schemas.
>>
>> Modifying the code to read the namespaces in the 2nd and 3rd pass
>> similarly as in 1st pass I get a long list of layers with ogrinfo and
>> can read something real out of the GML file with ogr2ogr. However,
>> there's two HTTP 404 errors -- probably some schemas are not where
>> expected(?).
>>
>> Could you Even sched some light on what's going on?
> Hi Ari,
>
> Oh no, I only do GMLAS stuff as a punishment when I have done some really evil
> action ;-)
>
> I've downloaded the content of
> "https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?
> request=GetFeature&service=WFS&typename=kanta:Kiinteisto&version=1.1.0"
> I didn't had to do schema fixing, but I probably already did try with that
> schema in the past since I had it cached, so perhaps I already fixed stuff.
>
> Regarding the namespace issue, the core issue was that the .xml file only
> points to the wfs and kuntagml namespaces, but none of them has "interesting"
> elements. The kuntagml namespace happens to be a "wrapper" around the gml and
> kantakartta namespaces, and that's this latter one that has interesting
> elements.
> The rational for that behaviour is that generally only the namespaces directly
> pointed by the document contain interesting elements. Indirectly imported
> namespaces just contain technical stuff you don't really want to expose as
> layers. But yes that heuristics wasn't bullet proof.
>
> So a workaround is to add "http://www.paikkatietopalvelu.fi/gml/kantakartta
> http://www.paikkatietopalvelu.fi/gml/kantakartta/2.1.1/kantakartta.xsd" in the
> xsi:schemaLocation.
> But I did a fix in https://trac.osgeo.org/gdal/changeset/40429 to avoid doing
> that: when "first choice" namespaces contain nothing interesting, fallback to
> the namespaces they indirectly import
> I also pushed before a fix for gml:PolyhedralSurface parsing
>
> With the fix (or manual workaround):
>
> $ ogrinfo GMLAS:kanta.xml  -oo remove_unused_layers=yes
> INFO: Open of `GMLAS:kanta.xml'
>        using driver `GMLAS' successful.
> 1: kiinteisto (None)
> 2: labelit (None)
> 3: labelit_label (Point)
> 4: sijainnit (None)
> 5: sijainnit_sijainti (Curve, Curve, Surface)
> 6: referenssipiste (Point, Point)
>
> Even
>


From even.rouault at spatialys.com  Mon Oct 16 03:25:26 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 16 Oct 2017 12:25:26 +0200
Subject: [gdal-dev] Namespaces in GMLAS
In-Reply-To: <ff9b4810-e549-aff0-7d6d-951859e9a52a@gmail.com>
References: <a9614f02-91ac-5398-16d7-83f605d48f1a@gmail.com>
 <1741993.cYMXavuBLp@even-i700>
 <ff9b4810-e549-aff0-7d6d-951859e9a52a@gmail.com>
Message-ID: <3035373.gRoQjvXuYE@even-i700>

On lundi 16 octobre 2017 13:03:32 CEST Ari Jolma wrote:
> Thanks,
> 
> After fixing srsName attribute in the returned gml (the HTTP errors i
> mention below) I can now read the features in the file (GetNextFeature
> on the dataset object).
> 
> As a second step I try to make the download implicit (assuming the
> srsName would be ok) and use the /vsicurl mechanism, i.e., open
> 
> /vsicurl/https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetFeature
> &typename=akaava:Suojelualue
> 
> directly.

You can use GMLAS:/vsicurl/...

The following works for me:
ogrinfo "GMLAS:/vsicurl/https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetFeature&typename=akaava:Suojelualue&version=1.1.0" 

Not however that for a large file (> 16 MB), /vsicurl/ will not manage to cache the whole file. As the GMLAS driver requires multiple parsing passes,
this will cause the document to be re-downloaded several times. 
You can workaround that by setting VSI_CACHE=YES and increasing the  VSI_CACHE_SIZE value. Or downloading it entirely in a local file.

Hum, actually for such files, /vsicurl/ will probably not work since it issues GET range requests that WFS servers are unlikely to honour.
/vsicurl_streaming/ should be used, as it does a standard HTTP GET request, and reading XML file is purely a sequential operation that doesn't require random seeking.

> 
> That seems difficult (impossible?) since GMLAS driver expects the name
> to start with GMLAS prefix. I don't see any obvious way to go around
> that. I can force GDAL to try only GMLAS but that does not help. Would
> it be possible to make OGRGMLASDriverIdentify return true using some option?

The Identify() method could potentially look at poOpenInfo->papszAllowedDrivers, and if
it is made of a single entry that is GMLAS, it could remove the requirement for the GMLAS: prefix
There would be probably a few other changes since some code must expect the GMLAS: prefix

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bishop.dev at gmail.com  Mon Oct 16 03:35:05 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Mon, 16 Oct 2017 13:35:05 +0300
Subject: [gdal-dev] Time in GDAL
In-Reply-To: <1508111580561-0.post@n6.nabble.com>
References: <a3ec652f-6af0-8004-0332-b03a6d66b61d@uni-muenster.de>
 <2278626.4d20AL68Up@even-i700> <1508111580561-0.post@n6.nabble.com>
Message-ID: <6a291359-0da0-1051-e78c-192ee9e37e8a@gmail.com>

Hi,

For some imagery metadata the Acquisition date and time is the center of 
scene (end timestamp minus start). Also for one-shot camera there is 
only the one moment there the imagery was captured.

I believe that this 3 parameters (SATELLITEID, CLOUDCOVER, 
ACQUISITIONDATETIME) are common for any satellite/aerial imagery.

The many other parameters from imagery metadata also exported to 
GDALDataset metadata domain "", but they are not common to any 
satellite/aerial imagery and may vary from Provider/Satellite/Camera etc.

For example for DigitalGlobe satellite imagery the full metadata looks like:

$ gdalinfo -mdd all 14SEP05095603-P2AS-053903708010_01_P001.TIL
Driver: TIL/EarthWatch .TIL
Files: 14SEP05095603-P2AS-053903708010_01_P001.TIL
        ./14SEP05095603-P2AS-053903708010_01_P001.TIF
        14SEP05095603-P2AS-053903708010_01_P001.IMD
        14SEP05095603-P2AS-053903708010_01_P001.RPB
        14SEP05095603-P2AS-053903708010_01_P001.XML
Size is 5656, 6538
Coordinate System is:
PROJCS["WGS 84 / UTM zone 33N",
     GEOGCS["WGS 84",
         DATUM["WGS_1984",
             SPHEROID["WGS 84",6378137,298.257223563,
                 AUTHORITY["EPSG","7030"]],
             AUTHORITY["EPSG","6326"]],
         PRIMEM["Greenwich",0],
         UNIT["degree",0.0174532925199433],
         AUTHORITY["EPSG","4326"]],
     PROJECTION["Transverse_Mercator"],
     PARAMETER["latitude_of_origin",0],
     PARAMETER["central_meridian",15],
     PARAMETER["scale_factor",0.9996],
     PARAMETER["false_easting",500000],
     PARAMETER["false_northing",0],
     UNIT["metre",1,
         AUTHORITY["EPSG","9001"]],
     AUTHORITY["EPSG","32633"]]
Origin = (297822.399916459980886,4640476.799998810514808)
Pixel Size = (0.400000000000000,-0.400000000000000)
Metadata:
   METADATATYPE=DG
Metadata (IMD):
   bandId="P"
   BAND_P.absCalFactor=5.273360e-02
   BAND_P.effectiveBandwidth=2.846000e-01
   BAND_P.LLHAE=91.66
   BAND_P.LLLat=41.86684502
   BAND_P.LLLon=12.56391718
   BAND_P.LRHAE=91.66
   BAND_P.LRLat=41.86741975
   BAND_P.LRLon=12.59114917
   BAND_P.TDILevel=48
   BAND_P.ULHAE=91.66
   BAND_P.ULLat=41.89037482
   BAND_P.ULLon=12.56302285
   BAND_P.URHAE=91.66
   BAND_P.URLat=41.89095002
   BAND_P.URLon=12.59026482
   bitsPerPixel=16
   compressionType="None"
   generationTime=2014-09-30T18:42:14.000000Z
   imageDescriptor="ORStandard2A"
   IMAGE_1.attitudeKnowledgeSrc="R"
   IMAGE_1.avgLineRate=20000.04
   IMAGE_1.CatId="1040010001338D00"
   IMAGE_1.cloudCover=0.027
   IMAGE_1.colUncertainty=10.60
   IMAGE_1.exposureDuration=0.00005000
   IMAGE_1.firstLineTime=2014-09-05T09:56:03.000901Z
   IMAGE_1.maxCollectedColGSD=0.322
   IMAGE_1.maxCollectedRowGSD=0.328
   IMAGE_1.maxCrossTrackViewAngle=-3.0
   IMAGE_1.maxInTrackViewAngle=-13.4
   IMAGE_1.maxOffNadirViewAngle=13.7
   IMAGE_1.maxSatAz=203.5
   IMAGE_1.maxSatEl=74.9
   IMAGE_1.maxSunAz=150.3
   IMAGE_1.maxSunEl=51.6
   IMAGE_1.meanCollectedColGSD=0.322
   IMAGE_1.meanCollectedGSD=0.325
   IMAGE_1.meanCollectedRowGSD=0.328
   IMAGE_1.meanCrossTrackViewAngle=-3.1
   IMAGE_1.meanInTrackViewAngle=-13.4
   IMAGE_1.meanOffNadirViewAngle=13.7
   IMAGE_1.meanSatAz=203.4
   IMAGE_1.meanSatEl=74.7
   IMAGE_1.meanSunAz=150.3
   IMAGE_1.meanSunEl=51.6
   IMAGE_1.minCollectedColGSD=0.321
   IMAGE_1.minCollectedRowGSD=0.328
   IMAGE_1.minCrossTrackViewAngle=-3.1
   IMAGE_1.minInTrackViewAngle=-13.4
   IMAGE_1.minOffNadirViewAngle=13.7
   IMAGE_1.minSatAz=203.3
   IMAGE_1.minSatEl=74.6
   IMAGE_1.minSunAz=150.3
   IMAGE_1.minSunEl=51.6
   IMAGE_1.mode="FullSwath"
   IMAGE_1.PNIIRS=5.3
   IMAGE_1.positionKnowledgeSrc="R"
   IMAGE_1.resamplingKernel="MTF"
   IMAGE_1.revNumber=337
   IMAGE_1.rowUncertainty=22.29
   IMAGE_1.satId="WV03"
   IMAGE_1.scanDirection="Forward"
   MAP_PROJECTED_PRODUCT.colSpacing=0.40
   MAP_PROJECTED_PRODUCT.datumName="WE"
   MAP_PROJECTED_PRODUCT.datumOffset=(0.000,0.000,0.000)
   MAP_PROJECTED_PRODUCT.DEMCorrection="Base Elevation"
MAP_PROJECTED_PRODUCT.earliestAcqTime=2014-09-05T09:56:03.952766Z
   MAP_PROJECTED_PRODUCT.inverseFlattening=298.257223563
   MAP_PROJECTED_PRODUCT.latestAcqTime=2014-09-05T09:56:03.952766Z
   MAP_PROJECTED_PRODUCT.LLH=91.66
   MAP_PROJECTED_PRODUCT.LLX=297822.59991669
   MAP_PROJECTED_PRODUCT.LLY=4637861.79999881
   MAP_PROJECTED_PRODUCT.LRH=91.66
   MAP_PROJECTED_PRODUCT.LRX=300084.59992299
   MAP_PROJECTED_PRODUCT.LRY=4637861.79999884
   MAP_PROJECTED_PRODUCT.mapHemi="N"
   MAP_PROJECTED_PRODUCT.mapProjCode=1
   MAP_PROJECTED_PRODUCT.mapProjName="UTM"
MAP_PROJECTED_PRODUCT.mapProjParam=(0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000,0.000000000)
   MAP_PROJECTED_PRODUCT.mapZone=33
   MAP_PROJECTED_PRODUCT.numGCP=0
   MAP_PROJECTED_PRODUCT.orientationAngle=0.0
   MAP_PROJECTED_PRODUCT.originX=297822.59991646
   MAP_PROJECTED_PRODUCT.originY=4640476.59999881
   MAP_PROJECTED_PRODUCT.productGSD=0.40
   MAP_PROJECTED_PRODUCT.productUnits="M"
   MAP_PROJECTED_PRODUCT.rowSpacing=0.40
   MAP_PROJECTED_PRODUCT.semiMajorAxis=6378137.0000
   MAP_PROJECTED_PRODUCT.terrainHae=91.66
   MAP_PROJECTED_PRODUCT.ULH=91.66
   MAP_PROJECTED_PRODUCT.ULX=297822.59991646
   MAP_PROJECTED_PRODUCT.ULY=4640476.59999881
   MAP_PROJECTED_PRODUCT.URH=91.66
   MAP_PROJECTED_PRODUCT.URX=300084.59992277
   MAP_PROJECTED_PRODUCT.URY=4640476.59999884
   numberOfLooks=1
   numColumns=5656
   numRows=6538
   outputFormat="GeoTIFF"
   panSharpenAlgorithm="None"
   productCatalogId="203001012C130A00"
   productLevel="LV2A"
   productOrderId="053903708010_01_P001"
   productType="Standard"
   radiometricEnhancement="Off"
   radiometricLevel="Corrected"
   version="24.06"
Metadata (IMAGERY):
   ACQUISITIONDATETIME=2014-09-05 09:56:03
   CLOUDCOVER=2
   SATELLITEID=WV03
Metadata (DERIVED_SUBDATASETS):
DERIVED_SUBDATASET_1_NAME=DERIVED_SUBDATASET:LOGAMPLITUDE:14SEP05095603-P2AS-053903708010_01_P001.TIL
   DERIVED_SUBDATASET_1_DESC=log10 of amplitude of input bands from 
14SEP05095603-P2AS-053903708010_01_P001.TIL
RPC Metadata:
   HEIGHT_OFF=95
   HEIGHT_SCALE=501
   LAT_OFF=41.8789
   LAT_SCALE=0.0138
   LINE_DEN_COEFF=+1.000000E+00 -2.488971E-05 +2.587276E-03 
+1.089231E-04 -1.260952E-07 +5.670124E-08 +1.065337E-06 -7.328102E-08 
+6.742895E-06 +1.572611E-08 +1.099616E-08 +0.000000E+00 +0.000000E+00 
+0.000000E+00 +0.000000E+00 +0.000000E+00 -3.140924E-08 +0.000000E+00 
-1.932470E-07 +0.000000E+00
   LINE_NUM_COEFF=+5.233697E-03 +2.519639E-02 -1.112942E+00 
-8.988157E-02 +9.422697E-05 +1.726955E-06 -3.247570E-04 -7.769219E-05 
-2.880579E-03 -6.983318E-07 +6.440451E-08 +0.000000E+00 +3.142982E-07 
+0.000000E+00 -1.242131E-07 -7.506260E-06 +1.529383E-07 -4.171267E-08 
-2.631868E-07 +1.602011E-08
   LINE_OFF=3248
   LINE_SCALE=3442
   LONG_OFF=12.5771
   LONG_SCALE=0.0148
   SAMP_DEN_COEFF=+1.000000E+00 -8.111978E-04 +1.028897E-04 
-4.701564E-04 +3.086810E-08 +0.000000E+00 +1.309072E-07 +6.430917E-07 
+0.000000E+00 -2.286865E-07 +0.000000E+00 +0.000000E+00 +0.000000E+00 
+0.000000E+00 +0.000000E+00 +0.000000E+00 +0.000000E+00 +0.000000E+00 
+0.000000E+00 +0.000000E+00
   SAMP_NUM_COEFF=+1.609664E-03 +1.018366E+00 +3.588746E-02 
+4.792172E-02 -1.438654E-04 +3.970072E-04 -3.016523E-04 -8.267065E-04 
+8.545967E-06 -9.494914E-06 +3.217866E-07 +6.581541E-07 -6.303898E-08 
+6.950543E-08 +2.344002E-07 +0.000000E+00 -1.676066E-07 -7.014485E-07 
-4.732161E-07 -1.090619E-08
   SAMP_OFF=2826
   SAMP_SCALE=3015
Corner Coordinates:
Upper Left  (  297822.400, 4640476.800) ( 12d33'46.87"E, 41d53'25.36"N)
Lower Left  (  297822.400, 4637861.600) ( 12d33'50.09"E, 41d52' 0.64"N)
Upper Right (  300084.800, 4640476.800) ( 12d35'24.96"E, 41d53'27.43"N)
Lower Right (  300084.800, 4637861.600) ( 12d35'28.15"E, 41d52' 2.70"N)
Center      (  298953.600, 4639169.200) ( 12d34'37.52"E, 41d52'44.03"N)
Band 1 Block=128x128 Type=UInt16, ColorInterp=Undefined

In this example you can see only one time presents - 
IMAGE_1.firstLineTime=2014-09-05T09:56:03.000901Z which was mirrored to 
IMAGERY/ACQUISITIONDATETIME

If you work with the only one satellite you can grab needed metadata 
from default domain.

Best regards,
     Dmitry

16.10.17 2:53, Luke пишет:
> Just a comment from an end user: perhaps ACQUISITIONDATETIME could store
> start and end times using ISO 8601 intervals (forward slash separator) -
> start date time/end date time
>
>
> Luke
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From robertofig85 at gmail.com  Mon Oct 16 08:46:02 2017
From: robertofig85 at gmail.com (Roberto Ribeiro)
Date: Mon, 16 Oct 2017 13:46:02 -0200
Subject: [gdal-dev] Possible bug in Intersects() method in 2.2.1
Message-ID: <CANTZQ+zRC=7o=oSd598sejW2Y0xdsGNLk10jS038F0e1TopifA@mail.gmail.com>

I believe there may be a bug in how Intersects() evaluates point against
polygon boundary. I went on lengths about it here
<https://gis.stackexchange.com/questions/258416/gdal-intersects-not-working-as-it-should>,
but long story short if you Intersects() a point with a polygon boundary,
it returns False, where it should be returning True. Disjoint() also
returns False. However, Intersection() correctly returns the intersected
geometry (the point itself).

This is in GDAL 2.2.1, 64-bits for Windows. A user in the aforementioned
post mentions it working in their 1.10.1 version.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171016/49de6867/attachment.html>

From danley.dmello at bentley.com  Mon Oct 16 09:08:57 2017
From: danley.dmello at bentley.com (dmel)
Date: Mon, 16 Oct 2017 09:08:57 -0700 (MST)
Subject: [gdal-dev] Writing Geometrycollection to ShapeFile datasource
Message-ID: <1508170137577-0.post@n6.nabble.com>

Hi,

I am implementing export service to export the geometries from our system to
ShapeFile using OGR 1.11 library.

The service create GeoJSON datasource from the JSON input, and then for each
feature in the GeoJSON datasource it creates feature in ShapeFile
datasourse.

It all works well when all the features in the GeoJson are simple Geometry
(POINT, LINESTRING, POLYGON) (Note: we don’t support mix geometries)
But if the GeoJson data contains Point and GeometryCollection of Points,
then Shapefile driver raise the error:

“Attempt to write non-point( GeometryCollection ) geometry to POINT type
shapefile.”

Is this by design or bug because this works for Linestring and
GeometryCollection of Linestring ( same for polygon).
If this is by design, what the best way to handle this.



Thanks
Danley




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From ari.jolma at gmail.com  Mon Oct 16 10:46:01 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 16 Oct 2017 20:46:01 +0300
Subject: [gdal-dev] Namespaces in GMLAS
In-Reply-To: <3035373.gRoQjvXuYE@even-i700>
References: <a9614f02-91ac-5398-16d7-83f605d48f1a@gmail.com>
 <1741993.cYMXavuBLp@even-i700>
 <ff9b4810-e549-aff0-7d6d-951859e9a52a@gmail.com>
 <3035373.gRoQjvXuYE@even-i700>
Message-ID: <ab961382-ba56-60ef-695b-833f78ea955d@gmail.com>

Even Rouault kirjoitti 16.10.2017 klo 13:25:

> On lundi 16 octobre 2017 13:03:32 CEST Ari Jolma wrote:
>> Thanks,
>>
>> After fixing srsName attribute in the returned gml (the HTTP errors i
>> mention below) I can now read the features in the file (GetNextFeature
>> on the dataset object).
>>
>> As a second step I try to make the download implicit (assuming the
>> srsName would be ok) and use the /vsicurl mechanism, i.e., open
>>
>> /vsicurl/https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetFeature
>> &typename=akaava:Suojelualue
>>
>> directly.
> You can use GMLAS:/vsicurl/...

Thanks, good to know.

>
> The following works for me:
> ogrinfo "GMLAS:/vsicurl/https://opaskartta.turku.fi/TeklaOGCWeb/WFS.ashx?request=GetFeature&typename=akaava:Suojelualue&version=1.1.0"

Also the version seems to be important in this case. Without it the 
server seems to use GML 2.1.2, which conflicts with the rest of the GML 
application which uses GML 3.1.1. Also in GML 2.1.2 it adds the 
erroneous (I think, at least it fails in GDAL) srsName to geometries.

>
> Not however that for a large file (> 16 MB), /vsicurl/ will not manage to cache the whole file. As the GMLAS driver requires multiple parsing passes,
> this will cause the document to be re-downloaded several times.
> You can workaround that by setting VSI_CACHE=YES and increasing the  VSI_CACHE_SIZE value. Or downloading it entirely in a local file.
>
> Hum, actually for such files, /vsicurl/ will probably not work since it issues GET range requests that WFS servers are unlikely to honour.
> /vsicurl_streaming/ should be used, as it does a standard HTTP GET request, and reading XML file is purely a sequential operation that doesn't require random seeking.

ok, thanks. Best to download the file separately before reading it with 
GDAL.

Ari

>
>> That seems difficult (impossible?) since GMLAS driver expects the name
>> to start with GMLAS prefix. I don't see any obvious way to go around
>> that. I can force GDAL to try only GMLAS but that does not help. Would
>> it be possible to make OGRGMLASDriverIdentify return true using some option?
> The Identify() method could potentially look at poOpenInfo->papszAllowedDrivers, and if
> it is made of a single entry that is GMLAS, it could remove the requirement for the GMLAS: prefix
> There would be probably a few other changes since some code must expect the GMLAS: prefix
>
> Even
>


From even.rouault at spatialys.com  Mon Oct 16 11:43:45 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 16 Oct 2017 20:43:45 +0200
Subject: [gdal-dev] Writing Geometrycollection to ShapeFile datasource
In-Reply-To: <1508170137577-0.post@n6.nabble.com>
References: <1508170137577-0.post@n6.nabble.com>
Message-ID: <4834211.4EGbRXNaLL@even-i700>

On lundi 16 octobre 2017 09:08:57 CEST dmel wrote:
> Hi,
> 
> I am implementing export service to export the geometries from our system to
> ShapeFile using OGR 1.11 library.
> 
> The service create GeoJSON datasource from the JSON input, and then for each
> feature in the GeoJSON datasource it creates feature in ShapeFile
> datasourse.
> 
> It all works well when all the features in the GeoJson are simple Geometry
> (POINT, LINESTRING, POLYGON) (Note: we don’t support mix geometries)
> But if the GeoJson data contains Point and GeometryCollection of Points,
> then Shapefile driver raise the error:
> 
> “Attempt to write non-point( GeometryCollection ) geometry to POINT type
> shapefile.”
> 
> Is this by design or bug because this works for Linestring and
> GeometryCollection of Linestring ( same for polygon).
> If this is by design, what the best way to handle this.

Danley,

This is a constraint of the Shapefile format that doens't support mixed 
geometry types in the same layer.
In shapefile, you can put single LineString or GeometryCollection of 
LineString (which are turned into MultiLineString) in the same layer.
But Point and MultiPoint (or GeometryCollection of Point) can't be mixed 
together in the same shapefile
You could possibly instanciate a MultiPoint shapefile layer, and convert 
Point's to MultiPoint's before writing them to the layer.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Oct 16 12:14:55 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 16 Oct 2017 21:14:55 +0200
Subject: [gdal-dev] Possible bug in Intersects() method in 2.2.1
In-Reply-To: <CANTZQ+zRC=7o=oSd598sejW2Y0xdsGNLk10jS038F0e1TopifA@mail.gmail.com>
References: <CANTZQ+zRC=7o=oSd598sejW2Y0xdsGNLk10jS038F0e1TopifA@mail.gmail.com>
Message-ID: <1579532.GxDI7BWMU1@even-i700>

On lundi 16 octobre 2017 13:46:02 CEST Roberto Ribeiro wrote:
> I believe there may be a bug in how Intersects() evaluates point against
> polygon boundary. I went on lengths about it here
> <https://gis.stackexchange.com/questions/258416/gdal-intersects-not-working-> as-it-should>, but long story short if you Intersects() a point with a
> polygon boundary, it returns False, where it should be returning True.
> Disjoint() also returns False. However, Intersection() correctly returns
> the intersected geometry (the point itself).
> 
> This is in GDAL 2.2.1, 64-bits for Windows. A user in the aforementioned
> post mentions it working in their 1.10.1 version.

Roberto,

I confirm the issue. I've just fixed it per
https://trac.osgeo.org/gdal/ticket/7091

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From szekerest at gmail.com  Mon Oct 16 14:01:52 2017
From: szekerest at gmail.com (Tamas Szekeres)
Date: Mon, 16 Oct 2017 23:01:52 +0200
Subject: [gdal-dev] /MD vs /MDd for DEBUG MSVC builds
In-Reply-To: <3406832.iV3rIMGho3@even-i700>
References: <5929234.EW3oT5kK1v@even-i700>
 <c090f7be-4069-bdbe-9920-beb5eaace6c9@gatewaygeomatics.com>
 <2765401.71tuoFKTAT@even-i700> <3406832.iV3rIMGho3@even-i700>
Message-ID: <CACALY+TFvFknSTJeNt8_aYHsS9DfGqyQpP6E6d00y_572vKRhg@mail.gmail.com>

Looks like I've missed this thread earlier, but according to this change we
might either compile all the dependent libraries for /MDd (at least for the
statically linked libraries) or we trust in that GDAL is safe to compile
against a different CRT than the dependencies. That means that GDAL won't
free up memory that have been allocated in either of the dependencies or
vica versa. I'm not completely sure if the latter applies.

The earlier approach was a bit more like the RelWithDebInfo setting in the
cmake terminology which is not considered as a wrong setting, but that has
it's own purpose. At the moment I'm not aware of any binary distributions
or SDKs out of the box which would be compatible with the /MDd setting,
that causes that DEBUG=1 has a fairly limited usability from now on.

Best regards,

Tamas



2017-09-28 12:05 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> Hi,
>
>
>
> Given the feedback, I've just committed the below change (in trunk only)
>
>
>
> Even
>
>
>
> >
>
> > $ svn diff nmake.opt
>
> > Index: nmake.opt
>
> > ===================================================================
>
> > --- nmake.opt (revision 40206)
>
> > +++ nmake.opt (working copy)
>
> > @@ -132,13 +132,13 @@
>
> > !IFNDEF DEBUG
>
> > OPTFLAGS= $(CXX_ANALYZE_FLAGS) $(CXX_PDB_FLAGS) /nologo /MP /MD /EHsc /Ox
>
> > /FC /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE /DNDEBUG !ELSE
>
> > -OPTFLAGS= $(CXX_ANALYZE_FLAGS) $(CXX_PDB_FLAGS) /nologo /MP /MD /EHsc
> /FC
>
> > /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE /DDEBUG +OPTFLAGS=
>
> > $(CXX_ANALYZE_FLAGS) $(CXX_PDB_FLAGS) /nologo /MP /MDd /EHsc /FC
>
> > /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE /DDEBUG !ENDIF
>
> > !ELSE
>
> > !IFNDEF DEBUG
>
> > OPTFLAGS= $(CXX_PDB_FLAGS) /nologo /MD /EHsc /GR /Ox /FC /DNDEBUG
>
> > !ELSE
>
> > -OPTFLAGS= $(CXX_PDB_FLAGS) /nologo /MD /EHsc /GR /FC /DDEBUG
>
> > +OPTFLAGS= $(CXX_PDB_FLAGS) /nologo /MDd /EHsc /GR /FC /DDEBUG
>
> > !ENDIF
>
> > !ENDIF #MSVC_VER
>
> > !ENDIF # OPTFLAGS
>
> >
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171016/a9dbc252/attachment.html>

From michael.katz at noaa.gov  Mon Oct 16 14:08:32 2017
From: michael.katz at noaa.gov (Michael Katz - NOAA Affiliate)
Date: Mon, 16 Oct 2017 14:08:32 -0700
Subject: [gdal-dev] trouble reading a certain .jp2 file
Message-ID: <CALx5KqYvuq+H9K9O1+qoFdroL2jc6CGmNW0bSR3TysHuDArMTA@mail.gmail.com>

2GB file: https://www.dropbox.com/s/4dng8ugothc5uh7/top15-nc-
cir-50cm_48201_harris.zip?dl=0

I can read some other .jp2 files, but with this particular one I get:

C:\gdal-2.1.0\all\bin\gdal\apps>gdalinfo C:\top15-nc-cir-50cm-harris_48201.jp2
--debug on
GNM: GNMRegisterAllInternal
GNM: RegisterGNMFile
GNM: RegisterGNMdatabase
OPENJPEG: info: Start to read j2k main header (0).
ERROR 1: Prevent buffer overflow (x1: 216933, y1: 170700)

ERROR 1: Marker handler function failed to read the marker segment

ERROR 1: opj_read_header() failed
gdalinfo failed - unable to open 'C:\top15-nc-cir-50cm-harris_48201.jp2'.


Any insight into whether this is a problem with the file or with GDAL?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171016/a969e813/attachment.html>

From even.rouault at spatialys.com  Mon Oct 16 14:20:11 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 16 Oct 2017 23:20:11 +0200
Subject: [gdal-dev] /MD vs /MDd for DEBUG MSVC builds
In-Reply-To: <CACALY+TFvFknSTJeNt8_aYHsS9DfGqyQpP6E6d00y_572vKRhg@mail.gmail.com>
References: <5929234.EW3oT5kK1v@even-i700> <3406832.iV3rIMGho3@even-i700>
 <CACALY+TFvFknSTJeNt8_aYHsS9DfGqyQpP6E6d00y_572vKRhg@mail.gmail.com>
Message-ID: <150849973.0lxikWfQ8t@even-i700>

On lundi 16 octobre 2017 23:01:52 CEST Tamas Szekeres wrote:
> Looks like I've missed this thread earlier, but according to this change we
> might either compile all the dependent libraries for /MDd (at least for the
> statically linked libraries) or we trust in that GDAL is safe to compile
> against a different CRT than the dependencies. That means that GDAL won't
> free up memory that have been allocated in either of the dependencies or
> vica versa. I'm not completely sure if the latter applies.
> 
> The earlier approach was a bit more like the RelWithDebInfo setting in the
> cmake terminology which is not considered as a wrong setting, but that has
> it's own purpose. At the moment I'm not aware of any binary distributions
> or SDKs out of the box which would be compatible with the /MDd setting,
> that causes that DEBUG=1 has a fairly limited usability from now on.
> 

Ah Windows...

I guess the people who complained did builds with none or little dependencies.

Perhaps adding a RELWITHDEBINFO=1 flag that would expand to

OPTFLAGS= $(CXX_ANALYZE_FLAGS) $(CXX_PDB_FLAGS) /nologo /MP /MD /EHsc /FC /
D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE /DDEBUG

(ie same as default build but without /Ox and with /DDEBUG)

would help ?

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Oct 16 14:26:11 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 16 Oct 2017 23:26:11 +0200
Subject: [gdal-dev] trouble reading a certain .jp2 file
In-Reply-To: <CALx5KqYvuq+H9K9O1+qoFdroL2jc6CGmNW0bSR3TysHuDArMTA@mail.gmail.com>
References: <CALx5KqYvuq+H9K9O1+qoFdroL2jc6CGmNW0bSR3TysHuDArMTA@mail.gmail.com>
Message-ID: <1801267.Mz50visJjt@even-i700>

On lundi 16 octobre 2017 14:08:32 CEST Michael Katz - NOAA Affiliate wrote:
> 2GB file: https://www.dropbox.com/s/4dng8ugothc5uh7/top15-nc-> cir-50cm_48201_harris.zip?dl=0
> 
> I can read some other .jp2 files, but with this particular one I get:
> 
> C:\gdal-2.1.0\all\bin\gdal\apps>gdalinfo
> C:\top15-nc-cir-50cm-harris_48201.jp2 --debug on
> GNM: GNMRegisterAllInternal
> GNM: RegisterGNMFile
> GNM: RegisterGNMdatabase
> OPENJPEG: info: Start to read j2k main header (0).
> ERROR 1: Prevent buffer overflow (x1: 216933, y1: 170700)
> 
> ERROR 1: Marker handler function failed to read the marker segment
> 
> ERROR 1: opj_read_header() failed
> gdalinfo failed - unable to open 'C:\top15-nc-cir-50cm-harris_48201.jp2'.
> 
> 
> Any insight into whether this is a problem with the file or with GDAL?

This is a limitation of the openjpeg version you use. Upgrade to latest 
openjpeg 2.3.0 and latest GDAL as well (trunk, or 2.2.2 by renaming 
openjpeg-2.3/include to openjpeg-2.2/include)

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Mon Oct 16 14:48:07 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon, 16 Oct 2017 23:48:07 +0200
Subject: [gdal-dev] /MD vs /MDd for DEBUG MSVC builds
In-Reply-To: <150849973.0lxikWfQ8t@even-i700>
References: <5929234.EW3oT5kK1v@even-i700> <3406832.iV3rIMGho3@even-i700>
 <CACALY+TFvFknSTJeNt8_aYHsS9DfGqyQpP6E6d00y_572vKRhg@mail.gmail.com>
 <150849973.0lxikWfQ8t@even-i700>
Message-ID: <CABUeae-bHKQ643J0hCUBnSWtuoC4cRECd39hBDp8VSqYmrNMAg@mail.gmail.com>

On 16 Oct 2017 11:20 pm, "Even Rouault" <even.rouault at spatialys.com> wrote:

On lundi 16 octobre 2017 23:01:52 CEST Tamas Szekeres wrote:
> Looks like I've missed this thread earlier, but according to this change
we
> might either compile all the dependent libraries for /MDd (at least for
the
> statically linked libraries) or we trust in that GDAL is safe to compile
> against a different CRT than the dependencies. That means that GDAL won't
> free up memory that have been allocated in either of the dependencies or
> vica versa. I'm not completely sure if the latter applies.
>
> The earlier approach was a bit more like the RelWithDebInfo setting in the
> cmake terminology which is not considered as a wrong setting, but that has
> it's own purpose. At the moment I'm not aware of any binary distributions
> or SDKs out of the box which would be compatible with the /MDd setting,
> that causes that DEBUG=1 has a fairly limited usability from now on.
>

Ah Windows...

I guess the people who complained did builds with none or little
dependencies.

Perhaps adding a RELWITHDEBINFO=1 flag that would expand to

OPTFLAGS= $(CXX_ANALYZE_FLAGS) $(CXX_PDB_FLAGS) /nologo /MP /MD /EHsc /FC /
D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE /DDEBUG

(ie same as default build but without /Ox and with /DDEBUG)

would help ?


That would not be equivalent to CMake RelWithDebugInfo, which is is pretty
self-descriptive. Here is explanation from
https://cmake.org/pipermail/cmake/2001-October/002479.html


"The difference between Debug and RelwithDebInfo is that RelwithDebInfo is
quite similar to Release mode. It produces fully optimised code, but also
builds the program database, and inserts debug line information..."

Or, I'm m being unclear about use of /DEBUG

Mateusz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171016/e55fa580/attachment-0001.html>

From even.rouault at spatialys.com  Mon Oct 16 14:55:56 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 16 Oct 2017 23:55:56 +0200
Subject: [gdal-dev] /MD vs /MDd for DEBUG MSVC builds
In-Reply-To: <CABUeae-bHKQ643J0hCUBnSWtuoC4cRECd39hBDp8VSqYmrNMAg@mail.gmail.com>
References: <5929234.EW3oT5kK1v@even-i700> <150849973.0lxikWfQ8t@even-i700>
 <CABUeae-bHKQ643J0hCUBnSWtuoC4cRECd39hBDp8VSqYmrNMAg@mail.gmail.com>
Message-ID: <12812371.fagIzQW0H6@even-i700>

> 
> That would not be equivalent to CMake RelWithDebugInfo, which is is pretty
> self-descriptive. Here is explanation from
> https://cmake.org/pipermail/cmake/2001-October/002479.html
> 
> 
> "The difference between Debug and RelwithDebInfo is that RelwithDebInfo is
> quite similar to Release mode. It produces fully optimised code, but also
> builds the program database, and inserts debug line information..."
> 
> Or, I'm m being unclear about use of /DEBUG

I didn't check CMake semantics. Hum, then what about calling it  
DEBUG_WITH_RELEASE_CRT=1 ?



-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From szekerest at gmail.com  Mon Oct 16 15:30:54 2017
From: szekerest at gmail.com (Tamas Szekeres)
Date: Tue, 17 Oct 2017 00:30:54 +0200
Subject: [gdal-dev] /MD vs /MDd for DEBUG MSVC builds
In-Reply-To: <12812371.fagIzQW0H6@even-i700>
References: <5929234.EW3oT5kK1v@even-i700> <150849973.0lxikWfQ8t@even-i700>
 <CABUeae-bHKQ643J0hCUBnSWtuoC4cRECd39hBDp8VSqYmrNMAg@mail.gmail.com>
 <12812371.fagIzQW0H6@even-i700>
Message-ID: <CACALY+TFTiMP4NzNjtZmqu37h1ZVmR0GjyNxRRbuk-zoMULVwQ@mail.gmail.com>

I'd like to see /Od  in addition to the /Zi and /MD etc. with the
DEBUG_WITH_RELEASE_CRT
setting. By this means it's not the same as RelWithDebInfo which uses /O2
as far as I remember, which was the only setting that I always have to
change with the cmake builds to make it usable for debugging purposes.

Best regards,

Tamas


2017-10-16 23:55 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> >
> > That would not be equivalent to CMake RelWithDebugInfo, which is is
> pretty
> > self-descriptive. Here is explanation from
> > https://cmake.org/pipermail/cmake/2001-October/002479.html
> >
> >
> > "The difference between Debug and RelwithDebInfo is that RelwithDebInfo
> is
> > quite similar to Release mode. It produces fully optimised code, but also
> > builds the program database, and inserts debug line information..."
> >
> > Or, I'm m being unclear about use of /DEBUG
>
> I didn't check CMake semantics. Hum, then what about calling it
> DEBUG_WITH_RELEASE_CRT=1 ?
>
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171017/96040cc6/attachment.html>

From even.rouault at spatialys.com  Mon Oct 16 15:35:21 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Oct 2017 00:35:21 +0200
Subject: [gdal-dev] /MD vs /MDd for DEBUG MSVC builds
In-Reply-To: <CACALY+TFTiMP4NzNjtZmqu37h1ZVmR0GjyNxRRbuk-zoMULVwQ@mail.gmail.com>
References: <5929234.EW3oT5kK1v@even-i700> <12812371.fagIzQW0H6@even-i700>
 <CACALY+TFTiMP4NzNjtZmqu37h1ZVmR0GjyNxRRbuk-zoMULVwQ@mail.gmail.com>
Message-ID: <1842063.cEiVXQiaMI@even-i700>

On mardi 17 octobre 2017 00:30:54 CEST Tamas Szekeres wrote:
> I'd like to see /Od  in addition to the /Zi and /MD etc. with the
> DEBUG_WITH_RELEASE_CRT
> setting. By this means it's not the same as RelWithDebInfo which uses /O2
> as far as I remember, which was the only setting that I always have to
> change with the cmake builds to make it usable for debugging purposes.

Tamas / Mateusz,

I happily let you tune this as you see fit

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From michael.katz at noaa.gov  Mon Oct 16 15:54:47 2017
From: michael.katz at noaa.gov (Michael Katz - NOAA Affiliate)
Date: Mon, 16 Oct 2017 15:54:47 -0700
Subject: [gdal-dev] trouble reading a certain .jp2 file
In-Reply-To: <1801267.Mz50visJjt@even-i700>
References: <CALx5KqYvuq+H9K9O1+qoFdroL2jc6CGmNW0bSR3TysHuDArMTA@mail.gmail.com>
 <1801267.Mz50visJjt@even-i700>
Message-ID: <CALx5Kqa=CNeE5Vpmm6Q==dT5f=u_f_i+fetEeZ6pkNkrSgR7hA@mail.gmail.com>

Is there a certain size limit that can be handled by 2.1.0, or is it more
complicated than that?


On Mon, Oct 16, 2017 at 2:26 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 16 octobre 2017 14:08:32 CEST Michael Katz - NOAA Affiliate wrote:
> > 2GB file: https://www.dropbox.com/s/4dng8ugothc5uh7/top15-nc->
> cir-50cm_48201_harris.zip?dl=0
> >
> > I can read some other .jp2 files, but with this particular one I get:
> >
> > C:\gdal-2.1.0\all\bin\gdal\apps>gdalinfo
> > C:\top15-nc-cir-50cm-harris_48201.jp2 --debug on
> > GNM: GNMRegisterAllInternal
> > GNM: RegisterGNMFile
> > GNM: RegisterGNMdatabase
> > OPENJPEG: info: Start to read j2k main header (0).
> > ERROR 1: Prevent buffer overflow (x1: 216933, y1: 170700)
> >
> > ERROR 1: Marker handler function failed to read the marker segment
> >
> > ERROR 1: opj_read_header() failed
> > gdalinfo failed - unable to open 'C:\top15-nc-cir-50cm-harris_
> 48201.jp2'.
> >
> >
> > Any insight into whether this is a problem with the file or with GDAL?
>
> This is a limitation of the openjpeg version you use. Upgrade to latest
> openjpeg 2.3.0 and latest GDAL as well (trunk, or 2.2.2 by renaming
> openjpeg-2.3/include to openjpeg-2.2/include)
>
> Even
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171016/12e3445b/attachment.html>

From even.rouault at spatialys.com  Mon Oct 16 15:57:55 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Oct 2017 00:57:55 +0200
Subject: [gdal-dev] trouble reading a certain .jp2 file
In-Reply-To: <CALx5Kqa=CNeE5Vpmm6Q==dT5f=u_f_i+fetEeZ6pkNkrSgR7hA@mail.gmail.com>
References: <CALx5KqYvuq+H9K9O1+qoFdroL2jc6CGmNW0bSR3TysHuDArMTA@mail.gmail.com>
 <1801267.Mz50visJjt@even-i700>
 <CALx5Kqa=CNeE5Vpmm6Q==dT5f=u_f_i+fetEeZ6pkNkrSgR7hA@mail.gmail.com>
Message-ID: <2182275.EXA3ByDQmP@even-i700>

On lundi 16 octobre 2017 15:54:47 CEST Michael Katz - NOAA Affiliate wrote:
> Is there a certain size limit that can be handled by 2.1.0, or is it more
> complicated than that?
> 

OpenJPEG before 2.3.0 cannot handle JPEG-2000 files with more than 4 billion 
pixels

OpenJPEG 2.3.0 support has been added in GDAL trunk, or with GDAL 2.2.2, with 
the renaming of openjpeg-2.3/include to openjpeg-2.2/include trick

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From danley.dmello at bentley.com  Mon Oct 16 17:59:15 2017
From: danley.dmello at bentley.com (dmel)
Date: Mon, 16 Oct 2017 17:59:15 -0700 (MST)
Subject: [gdal-dev] Writing Geometrycollection to ShapeFile datasource
In-Reply-To: <4834211.4EGbRXNaLL@even-i700>
References: <1508170137577-0.post@n6.nabble.com> <4834211.4EGbRXNaLL@even-i700>
Message-ID: <1508201955456-0.post@n6.nabble.com>

Hi Even,

Thanks for your response. It assures me that I need special case for
Point,MultiPoint and Geometrycollection of Points when writing to ShapeFile.

Thanks
Danley



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From sean at mapbox.com  Mon Oct 16 21:30:54 2017
From: sean at mapbox.com (Sean Gillies)
Date: Mon, 16 Oct 2017 22:30:54 -0600
Subject: [gdal-dev] vsicurl configuration design decisions
In-Reply-To: <1589072.2KHdWIEkaR@even-i700>
References: <CADPhZXw_sRfvnuQwt4ee+HkF_FodpnCYMHpD-1a3j+vw=zcfmQ@mail.gmail.com>
 <5087572.fjGmY6Wygd@even-i700>
 <CADPhZXwHnuzhcpYwaqXv_kW8vtcyB7XRQ4_0S5E=QjUeWXqpdQ@mail.gmail.com>
 <1589072.2KHdWIEkaR@even-i700>
Message-ID: <CADPhZXxxjCRwm515_buXxqEQkG=FmFeHMgYewvJMvGVrtgMxNg@mail.gmail.com>

Done: https://trac.osgeo.org/gdal/ticket/7095.

On Fri, Oct 13, 2017 at 4:29 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Sean,
>
> > I'd like to point out that very often URLs in a query string do not need
> to
> > be encoded. Both the Python (see my earlier example) and Node standard
> > parsers will handle the string
> >
>
> While researching that issue, and from my pat memories, I found that there
> is
> a bit of confusion around the subject when to escape or not
>
> > /viscurl?option1=foo&option2=bar&url=https://example.com/foo.tif
> >
> > without any URL encoding.
>
> https://tools.ietf.org/html/rfc3986 says in "3.4.  Query"
>
> """
>       query       = *( pchar / "/" / "?" )
>
>    The characters slash ("/") and question mark ("?") may represent data
>    within the query component.  Beware that some older, erroneous
>    implementations may not handle such data correctly when it is used as
>    the base URI for relative references (Section 5.1), apparently
>    because they fail to distinguish query data from path data when
>    looking for hierarchical separators.  However, as query components
>    are often used to carry identifying information in the form of
>    "key=value" pairs and one frequently used value is a reference to
>    another URI, it is sometimes better for usability to avoid percent-
>    encoding those characters.
> """
>
> But urrlib.urlencode() encodes slashes in values of query arguments, so
> they
> probably decided to avoid isues with the above mentionned older, erroneous
> implementations
>
> >>> urllib.urlencode({'foo':'bar', 'url': 'http://example.com'})
> 'url=http%3A%2F%2Fexample.com&foo=bar'
>
> > The web already has escaping rules built in, one of the benefits I
> alluded
> > to above.
>
> OK, let's follow your suggestion of using URL query string formatting,
> while
> this hasn't gone in a official release. Could you create a ticket about
> that ?
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171016/7dc17290/attachment-0001.html>

From aborruso at gmail.com  Mon Oct 16 23:47:54 2017
From: aborruso at gmail.com (aborruso)
Date: Mon, 16 Oct 2017 23:47:54 -0700 (MST)
Subject: [gdal-dev] Error after building GDAL 2 in Debian jessie
Message-ID: <1508222874222-0.post@n6.nabble.com>

Hi all,
I have tried to build GDAL 2.2 [1], using this steps [1].

I have no problem in building, but after I have installed it, I have this
error for every GDAL/OGR command I run:

"symbol lookup error: /usr/lib/libgdal.so.20: undefined symbol:
sqlite3_column_table_name"

I'm a newbie, I do not know where to start to try solve it.

I need to build it starting from source, because via apt it's possible to
install only 1.x version (in Debian jessie), and I need the great features
of 2.x.

What can I try to do to solve this problem?

Thank you


[1] http://download.osgeo.org/gdal/2.2.2/gdal222.zip
[2] https://trac.osgeo.org/gdal/wiki/BuildingOnUnix



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Tue Oct 17 00:21:30 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Oct 2017 09:21:30 +0200
Subject: [gdal-dev] Error after building GDAL 2 in Debian jessie
In-Reply-To: <1508222874222-0.post@n6.nabble.com>
References: <1508222874222-0.post@n6.nabble.com>
Message-ID: <7899268.3ReOGrUW05@even-i700>

On lundi 16 octobre 2017 23:47:54 CEST aborruso wrote:
> Hi all,
> I have tried to build GDAL 2.2 [1], using this steps [1].
> 
> I have no problem in building, but after I have installed it, I have this
> error for every GDAL/OGR command I run:
> 
> "symbol lookup error: /usr/lib/libgdal.so.20: undefined symbol:
> sqlite3_column_table_name"

It looks you have at least two libsqlite3 installed on your system ? You built 
against one that has sqlite3_column_table_name available, but at runtime the 
dynamic loader finds one that has not it.
You can use LD_LIBRARY_PATH to point to the path of the libsqlite3 that was 
picked up by ./configure

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From aborruso at gmail.com  Tue Oct 17 00:39:24 2017
From: aborruso at gmail.com (aborruso)
Date: Tue, 17 Oct 2017 00:39:24 -0700 (MST)
Subject: [gdal-dev] Error after building GDAL 2 in Debian jessie
In-Reply-To: <7899268.3ReOGrUW05@even-i700>
References: <1508222874222-0.post@n6.nabble.com> <7899268.3ReOGrUW05@even-i700>
Message-ID: <1508225964693-0.post@n6.nabble.com>

Hi Even,
thank you very much.


Even Rouault-2 wrote
> It looks you have at least two libsqlite3 installed on your system ? You
> built 
> against one that has sqlite3_column_table_name available, but at runtime
> the 
> dynamic loader finds one that has not it.
> You can use LD_LIBRARY_PATH to point to the path of the libsqlite3 that
> was 
> picked up by ./configure

But I'm really a newbie.

I think I must add some option to "./configure
--prefix=/path/to/install/prefix [options]", but which option?

Is it something like "./configure --LD_LIBRARY_PATH =/path/to/libsqlite3"?

And a last stupid question: how to find the path of the installed
libsqlite3? With locate?

Thank you




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From mateusz at loskot.net  Tue Oct 17 00:59:00 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 17 Oct 2017 09:59:00 +0200
Subject: [gdal-dev] /MD vs /MDd for DEBUG MSVC builds
In-Reply-To: <1842063.cEiVXQiaMI@even-i700>
References: <5929234.EW3oT5kK1v@even-i700> <12812371.fagIzQW0H6@even-i700>
 <CACALY+TFTiMP4NzNjtZmqu37h1ZVmR0GjyNxRRbuk-zoMULVwQ@mail.gmail.com>
 <1842063.cEiVXQiaMI@even-i700>
Message-ID: <CABUeae9q7rwnwfEx4CVggHqGqV_CFn_bEwWS9TOs89Gi7nzK2Q@mail.gmail.com>

On 17 Oct 2017 12:35 am, "Even Rouault" <even.rouault at spatialys.com> wrote:

On mardi 17 octobre 2017 00:30:54 CEST Tamas Szekeres wrote:
> I'd like to see /Od  in addition to the /Zi and /MD etc. with the
> DEBUG_WITH_RELEASE_CRT
> setting. By this means it's not the same as RelWithDebInfo which uses /O2
> as far as I remember, which was the only setting that I always have to
> change with the cmake builds to make it usable for debugging purposes.

Tamas / Mateusz,

I happily let you tune this as you see fit


I don't want to interfere with Tamas' requirements, but I think simple and
clean from yhr library client point is to dance in Rome like Romans do.
That is stick to canonical build MSVC setup for both  release and debug
configurations.
If Tamas needs something different, OK.

FYI, I build GDAL with SDKs provided exclusively in form of optimised
binaries and I haven't encountered any issues, yet.

Mat
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171017/7da7a03e/attachment.html>

From vincent.mora at oslandia.com  Tue Oct 17 02:58:18 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Tue, 17 Oct 2017 11:58:18 +0200
Subject: [gdal-dev] netcd from WRF
Message-ID: <e10aa661-35ab-7bdf-a624-1c6425b8afe9@oslandia.com>

Hi,

I'm trying to visualize **weather forecast data from WRF** in QGIS.
Ultimately I'd like to add support for viewing/navigating datasets with
multiple dimensions (Z and time with like sliders to navigate through
bands).

gdal recognizes the bands just fine, although the netcdf produced by
**WRF does not follow netcdf conventions**
(https://www.ncl.ucar.edu/Applications/wrfnetcdf.shtml)

The data I have is Lambert93. I was able to add a grid_mapping with
GeoTransform and spatial_ref using ncap and ncatted (see below for how
the file is modified to have the crs regognized by gdal)

The issue I have now is that although the **first band displays
correctly for a given variable, the folowing bands (corresponding to
different times) are wrapped** by qgis (which means that the
geotransform is not recognized properly).

I think that I could use a vrt, maybe with a python filter, to work
around the issue, but I'd rather fix the driver if the described
behavior is considered buggy.

Questions:

- is the multiple band model a smart approach for time-varying data ?

- shall I try and improve the netcdf driver:

    - to fix the spatial_ref/geotransform not recognized in bands>1 (if
fix needed, because I'm not yet sure)

    - to recognize WRF files ? (or is it too specific/no-standard to
worth it)


Thanks,

V.













# here is what I do to the WRF .nc file to have it referenced properly

ncap -s 'lambert93=-9999' test_wrfout.nc test_wrfout_1.nc

ncatted \
    -a spatial_ref,lambert93,c,c,'PROJCS["RGF93 /
Lambert-93",GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4171"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Lambert_Conformal_Conic_2SP"],PARAMETER["standard_parallel_1",49],PARAMETER["standard_parallel_2",44],PARAMETER["latitude_of_origin",46.5],PARAMETER["central_meridian",3],PARAMETER["false_easting",700000],PARAMETER["false_northing",6600000],AUTHORITY["EPSG","2154"],AXIS["X",EAST],AXIS["Y",NORTH]]'
\
    -a GeoTransform,lambert93,c,c,"69815, 9000, 0, 5751408, 0, 9000" \
    -a grid_mapping,,c,c,'lambert93' \
    test_wrfout_1.nc test_wrfout_2.nc

# see also
https://gis.stackexchange.com/questions/218441/how-do-i-display-netcdf-data-with-correct-crs,







From even.rouault at spatialys.com  Tue Oct 17 03:05:35 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Oct 2017 12:05:35 +0200
Subject: [gdal-dev] ogr2ogr : limit memory usage
In-Reply-To: <167570775.aMiZ612gua@even-i700>
References: <D8FE47A8-B70C-440D-91B2-10D76A6DA13D@neogeo.fr>
 <167570775.aMiZ612gua@even-i700>
Message-ID: <7737340.7D6ycKdkdn@even-i700>

On vendredi 13 octobre 2017 12:43:29 CEST Even Rouault wrote:
> On vendredi 13 octobre 2017 10:06:56 CEST Matthieu Lefort wrote:
> > Hi list,
> > I am using ogr2ogr to load big geojson files (about 1 Go each) into
> > postgresql database. On my MacBook, (GDAL 1.11.3, released 2015/09/16),
> > although it lasts about 20 minutes for each file, this works fine. I tried
> > to do the same thing on a VPS (Debian Stretch 9.2, 8 Go RAM) but the
> > process consumes all RAM in 20 seconds before stopping (out of memory).
> > Install was made with apt-get install gdal-bin. (GDAL 2.1.2, released
> > 2016/10/24)
> > 
> > Is there a way to control memory usage or to avoid at least using more
> > memory than the available one ?
> 
> Matthieu,
> 
> no, this is a known issue ( see https://trac.osgeo.org/gdal/ticket/6540 )

Hi,

I've modified the GeoJSON driver in trunk to be able to ingest arbitrary large 
files with neglectable RAM consumption. Testing appreciated as this is a non 
trivial change.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Oct 17 03:26:39 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Oct 2017 12:26:39 +0200
Subject: [gdal-dev] netcd from WRF
In-Reply-To: <e10aa661-35ab-7bdf-a624-1c6425b8afe9@oslandia.com>
References: <e10aa661-35ab-7bdf-a624-1c6425b8afe9@oslandia.com>
Message-ID: <2121111.gPVIyOD0hh@even-i700>

Hi Vincent,

> 
> I'm trying to visualize **weather forecast data from WRF** in QGIS.
> Ultimately I'd like to add support for viewing/navigating datasets with
> multiple dimensions (Z and time with like sliders to navigate through
> bands).
> 
> gdal recognizes the bands just fine, although the netcdf produced by
> **WRF does not follow netcdf conventions**
> (https://www.ncl.ucar.edu/Applications/wrfnetcdf.shtml)
> 
> The data I have is Lambert93. I was able to add a grid_mapping with
> GeoTransform and spatial_ref using ncap and ncatted (see below for how
> the file is modified to have the crs regognized by gdal)
> 
> The issue I have now is that although the **first band displays
> correctly for a given variable, the folowing bands (corresponding to
> different times) are wrapped** by qgis (which means that the
> geotransform is not recognized properly).

Showing the gdalinfo / ncdump output would have helped better diagnosing.

Are you sure that GDAL handles the bands as GDAL raster bands of the same GDAL 
dataset, and not as different subdatasets (I suspect this is the later) ? 
Because the georeferencing info in a GDAL dataset is attached to the dataset, 
not the bands. So if that works for the first band, that should work for the 
next ones of the same dataset.

In netCDF, the grid_mapping object must be reference by each variable, so that 
each subdataset can find it.
Actually just saw that "gdal_translate multiband.tif multiband.nc -of netCDF" 
only attached the grid_mapping to the first band. Just fixed.

> 
> I think that I could use a vrt, maybe with a python filter, to work
> around the issue, but I'd rather fix the driver if the described
> behavior is considered buggy.
> 
> Questions:
> 
> - is the multiple band model a smart approach for time-varying data ?

Lacking a better abstraction for multidimensional dataset, GDAL cannot do 
better than using bands & subdatasets.

> 
> - shall I try and improve the netcdf driver:
> 
>     - to fix the spatial_ref/geotransform not recognized in bands>1 (if
> fix needed, because I'm not yet sure)

Probably not, if grid_mapping is properly attached to each variable.

> 
>     - to recognize WRF files ? (or is it too specific/no-standard to
> worth it)

Depends on how invasive the changes are and if that doesn't affect behaviour 
with already recognized netCDF datasets, but GDAL mission is to deal with 
real-world datasets, compliant or not to standards.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Tue Oct 17 06:34:07 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 17 Oct 2017 06:34:07 -0700
Subject: [gdal-dev] ogr2ogr : limit memory usage
In-Reply-To: <7737340.7D6ycKdkdn@even-i700>
References: <D8FE47A8-B70C-440D-91B2-10D76A6DA13D@neogeo.fr>
 <167570775.aMiZ612gua@even-i700> <7737340.7D6ycKdkdn@even-i700>
Message-ID: <CACmBxysaU1evqAFPCaDogP=AiMp1r4PscQvi18XUrqmdp-VFEg@mail.gmail.com>

Added some small fuzzer corpus test cases that cause me OOM on a 2GB
instance:

https://trac.osgeo.org/gdal/ticket/6540#comment:5

On Tue, Oct 17, 2017 at 3:05 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On vendredi 13 octobre 2017 12:43:29 CEST Even Rouault wrote:
> > On vendredi 13 octobre 2017 10:06:56 CEST Matthieu Lefort wrote:
> > > Hi list,
> > > I am using ogr2ogr to load big geojson files (about 1 Go each) into
> > > postgresql database. On my MacBook, (GDAL 1.11.3, released 2015/09/16),
> > > although it lasts about 20 minutes for each file, this works fine. I
> tried
> > > to do the same thing on a VPS (Debian Stretch 9.2, 8 Go RAM) but the
> > > process consumes all RAM in 20 seconds before stopping (out of memory).
> > > Install was made with apt-get install gdal-bin. (GDAL 2.1.2, released
> > > 2016/10/24)
> > >
> > > Is there a way to control memory usage or to avoid at least using more
> > > memory than the available one ?
> >
> > Matthieu,
> >
> > no, this is a known issue ( see https://trac.osgeo.org/gdal/ticket/6540
> )
>
> Hi,
>
> I've modified the GeoJSON driver in trunk to be able to ingest arbitrary
> large
> files with neglectable RAM consumption. Testing appreciated as this is a
> non
> trivial change.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171017/e7670cee/attachment-0001.html>

From even.rouault at spatialys.com  Tue Oct 17 06:40:27 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Oct 2017 15:40:27 +0200
Subject: [gdal-dev] ogr2ogr : limit memory usage
In-Reply-To: <CACmBxysaU1evqAFPCaDogP=AiMp1r4PscQvi18XUrqmdp-VFEg@mail.gmail.com>
References: <D8FE47A8-B70C-440D-91B2-10D76A6DA13D@neogeo.fr>
 <7737340.7D6ycKdkdn@even-i700>
 <CACmBxysaU1evqAFPCaDogP=AiMp1r4PscQvi18XUrqmdp-VFEg@mail.gmail.com>
Message-ID: <2427638.XONPO3W9bP@even-i700>

On mardi 17 octobre 2017 06:34:07 CEST Kurt Schwehr wrote:
> Added some small fuzzer corpus test cases that cause me OOM on a 2GB
> instance:
> 
> https://trac.osgeo.org/gdal/ticket/6540#comment:5

I doubt this is a OOM issue. But there was indeed a regression with empty 
string keys in dictionaries that caused an assertion (or a wrong branch to be 
taken in non-debug mode). Just fixed it

After the fix the following works (with my debug build, with many libraries 
linked, you need 700 MB to load GDAL)

for i in json/*; do (ulimit -v 700000; ogrinfo $i -al -so); done

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From vincent.mora at oslandia.com  Tue Oct 17 08:07:59 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Tue, 17 Oct 2017 17:07:59 +0200
Subject: [gdal-dev] netcd from WRF
In-Reply-To: <2121111.gPVIyOD0hh@even-i700>
References: <e10aa661-35ab-7bdf-a624-1c6425b8afe9@oslandia.com>
 <2121111.gPVIyOD0hh@even-i700>
Message-ID: <b57f027e-4373-c713-8b78-ac4c55db1dcd@oslandia.com>

Hi Even,


Thanks for your input.


Le 17/10/2017 à 12:26, Even Rouault a écrit :
>
> Showing the gdalinfo / ncdump output would have helped better diagnosing.
sorSy for that, the output for the subdataset of interest follows with a
recompiler version af gdal including your fix.
>
> Are you sure that GDAL handles the bands as GDAL raster bands of the same GDAL 
> dataset, and not as different subdatasets (I suspect this is the later) ? 
> Because the georeferencing info in a GDAL dataset is attached to the dataset, 
> not the bands. So if that works for the first band, that should work for the 
> next ones of the same dataset.
Is there a simple way to check that from gdalinfo output ?
>
> In netCDF, the grid_mapping object must be reference by each variable, so that 
> each subdataset can find it.
As far as I can tell, it's the case.
> Actually just saw that "gdal_translate multiband.tif multiband.nc -of netCDF" 
> only attached the grid_mapping to the first band. Just fixed.
Doesn't look good in qgis after that fix, but I guess it's normal since
it's the writing part that you changed.
> Lacking a better abstraction for multidimensional dataset, GDAL cannot do 
> better than using bands & subdatasets.
I suppose that what you mean by subdataset is what you obtain with
syntax like "netcdf:'myfile.nc':MYVAR". I'm quite fine with the band
abstraction for the purpose, it was just an open question to check I
didn't miss something.
>
>>     - to recognize WRF files ? (or is it too specific/no-standard to
>> worth it)
> Depends on how invasive the changes are and if that doesn't affect behaviour 
> with already recognized netCDF datasets, but GDAL mission is to deal with 
> real-world datasets, compliant or not to standards.
I guess it'd just be a matter of checking global metadata
(NC_GLOBAL#TITLE= OUTPUT FROM WRF...) and call an function to create the
spatial_ref and geotransform for all subdatasets the WRF way. So I think
I'll try that and propose a patch when done.


In the meantime, I'd like to have it working with the modified .nc file
with grid_mapping (gdalinfo below with/without debug info).
 

--------------------------- WITHOUT DEBUG INFO -----------------------------

$ gdalinfo NetCDF:'test_wrfout_2.nc':T2
Warning 1: No UNIDATA NC_GLOBAL:Conventions attribute
Driver: netCDF/Network Common Data Format
Files: test_wrfout_2.nc
Size is 155, 152
Coordinate System is:
PROJCS["RGF93 / Lambert-93",
    GEOGCS["RGF93",
        DATUM["Reseau_Geodesique_Francais_1993",
            SPHEROID["GRS 1980",6378137,298.257222101,
                AUTHORITY["EPSG","7019"]],
            TOWGS84[0,0,0,0,0,0,0],
            AUTHORITY["EPSG","6171"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.01745329251994328,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4171"]],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    PROJECTION["Lambert_Conformal_Conic_2SP"],
    PARAMETER["standard_parallel_1",49],
    PARAMETER["standard_parallel_2",44],
    PARAMETER["latitude_of_origin",46.5],
    PARAMETER["central_meridian",3],
    PARAMETER["false_easting",700000],
    PARAMETER["false_northing",6600000],
    AUTHORITY["EPSG","2154"],
    AXIS["X",EAST],
    AXIS["Y",NORTH]]
Origin = (69815.000000000000000,5751408.000000000000000)
Pixel Size = (9000.000000000000000,9000.000000000000000)
Metadata:
  lambert93#GeoTransform=69815, 9000, 0, 5751408, 0, 9000
  lambert93#grid_mapping=lambert93
  lambert93#spatial_ref=PROJCS["RGF93 /
Lambert-93",GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4171"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Lambert_Conformal_Conic_2SP"],PARAMETER["standard_parallel_1",49],PARAMETER["standard_parallel_2",44],PARAMETER["latitude_of_origin",46.5],PARAMETER["central_meridian",3],PARAMETER["false_easting",700000],PARAMETER["false_northing",6600000],AUTHORITY["EPSG","2154"],AXIS["X",EAST],AXIS["Y",NORTH]]
  NC_GLOBAL#ADAPT_DT_MAX=72
  NC_GLOBAL#ADAPT_DT_MIN=27
  NC_GLOBAL#ADAPT_DT_START=36
  NC_GLOBAL#AER_ANGEXP_OPT=1
  NC_GLOBAL#AER_ANGEXP_VAL=1.3
  NC_GLOBAL#AER_AOD550_OPT=1
  NC_GLOBAL#AER_AOD550_VAL=0.12
  NC_GLOBAL#AER_ASY_OPT=1
  NC_GLOBAL#AER_ASY_VAL=0.89999998
  NC_GLOBAL#AER_OPT=0
  NC_GLOBAL#AER_SSA_OPT=1
  NC_GLOBAL#AER_SSA_VAL=0.85000002
  NC_GLOBAL#AER_TYPE=1
  NC_GLOBAL#BLDT=0
  NC_GLOBAL#BL_PBL_PHYSICS=4
  NC_GLOBAL#BOTTOM-TOP_GRID_DIMENSION=35
  NC_GLOBAL#BOTTOM-TOP_PATCH_END_STAG=35
  NC_GLOBAL#BOTTOM-TOP_PATCH_END_UNSTAG=34
  NC_GLOBAL#BOTTOM-TOP_PATCH_START_STAG=1
  NC_GLOBAL#BOTTOM-TOP_PATCH_START_UNSTAG=1
  NC_GLOBAL#BUCKET_J=-1
  NC_GLOBAL#BUCKET_MM=-1
  NC_GLOBAL#CEN_LAT=45.014633
  NC_GLOBAL#CEN_LON=3.8544922
  NC_GLOBAL#CUDT=5
  NC_GLOBAL#CU_PHYSICS=1
  NC_GLOBAL#DAMPCOEF=0.2
  NC_GLOBAL#DAMP_OPT=0
  NC_GLOBAL#DFI_OPT=0
  NC_GLOBAL#DIFF_6TH_FACTOR=0.12
  NC_GLOBAL#DIFF_6TH_OPT=0
  NC_GLOBAL#DIFF_OPT=1
  NC_GLOBAL#DT=36
  NC_GLOBAL#DX=9000
  NC_GLOBAL#DY=9000
  NC_GLOBAL#ETAC=0
  NC_GLOBAL#FEEDBACK=1
  NC_GLOBAL#GFDDA_END_H=0
  NC_GLOBAL#GFDDA_INTERVAL_M=0
  NC_GLOBAL#GMT=12
  NC_GLOBAL#GRAV_SETTLING=0
  NC_GLOBAL#GRIDTYPE=C
  NC_GLOBAL#GRID_FDDA=0
  NC_GLOBAL#GRID_ID=1
  NC_GLOBAL#GRID_SFDDA=0
  NC_GLOBAL#GWD_OPT=0
  NC_GLOBAL#history=Tue Oct 17 14:57:49 2017: ncatted -a
spatial_ref,lambert93,c,c,PROJCS["RGF93 /
Lambert-93",GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4171"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Lambert_Conformal_Conic_2SP"],PARAMETER["standard_parallel_1",49],PARAMETER["standard_parallel_2",44],PARAMETER["latitude_of_origin",46.5],PARAMETER["central_meridian",3],PARAMETER["false_easting",700000],PARAMETER["false_northing",6600000],AUTHORITY["EPSG","2154"],AXIS["X",EAST],AXIS["Y",NORTH]]
-a GeoTransform,lambert93,c,c,69815, 9000, 0, 5751408, 0, 9000 -a
grid_mapping,,c,c,lambert93 test_wrfout_1.nc test_wrfout_2.nc
Tue Oct 17 14:57:39 2017: ncap -s lambert93=-9999 test_wrfout.nc
test_wrfout_1.nc
  NC_GLOBAL#HYBRID_OPT=-1
  NC_GLOBAL#HYPSOMETRIC_OPT=2
  NC_GLOBAL#ICLOUD=1
  NC_GLOBAL#ICLOUD_CU=0
  NC_GLOBAL#ISFFLX=1
  NC_GLOBAL#ISFTCFLX=0
  NC_GLOBAL#ISHALLOW=0
  NC_GLOBAL#ISICE=15
  NC_GLOBAL#ISLAKE=21
  NC_GLOBAL#ISOILWATER=14
  NC_GLOBAL#ISURBAN=13
  NC_GLOBAL#ISWATER=17
  NC_GLOBAL#I_PARENT_START=1
  NC_GLOBAL#JULDAY=278
  NC_GLOBAL#JULYR=2017
  NC_GLOBAL#J_PARENT_START=1
  NC_GLOBAL#KHDIF=0
  NC_GLOBAL#KM_OPT=4
  NC_GLOBAL#KVDIF=0
  NC_GLOBAL#MAP_PROJ=1
  NC_GLOBAL#MAP_PROJ_CHAR=Lambert Conformal
  NC_GLOBAL#MFSHCONV=1
  NC_GLOBAL#MMINLU=MODIFIED_IGBP_MODIS_NOAH
  NC_GLOBAL#MOAD_CEN_LAT=45.014633
  NC_GLOBAL#MOIST_ADV_OPT=1
  NC_GLOBAL#MP_PHYSICS=6
  NC_GLOBAL#NCO="4.6.1"
  NC_GLOBAL#NUM_LAND_CAT=21
  NC_GLOBAL#OBS_NUDGE_OPT=0
  NC_GLOBAL#PARENT_GRID_RATIO=1
  NC_GLOBAL#PARENT_ID=1
  NC_GLOBAL#POLE_LAT=90
  NC_GLOBAL#POLE_LON=0
  NC_GLOBAL#PREC_ACC_DT=0
  NC_GLOBAL#RADT=10
  NC_GLOBAL#RA_LW_PHYSICS=1
  NC_GLOBAL#RA_SW_PHYSICS=2
  NC_GLOBAL#SCALAR_ADV_OPT=1
  NC_GLOBAL#SCALAR_PBLMIX=0
  NC_GLOBAL#SF_LAKE_PHYSICS=0
  NC_GLOBAL#SF_OCEAN_PHYSICS=0
  NC_GLOBAL#SF_SFCLAY_PHYSICS=4
  NC_GLOBAL#SF_SURFACE_PHYSICS=2
  NC_GLOBAL#SF_URBAN_PHYSICS=0
  NC_GLOBAL#SGFDDA_END_H=0
  NC_GLOBAL#SGFDDA_INTERVAL_M=0
  NC_GLOBAL#SHCU_PHYSICS=0
  NC_GLOBAL#SIMULATION_INITIALIZATION_TYPE=REAL-DATA CASE
  NC_GLOBAL#SIMULATION_START_DATE=2017-10-05_12:00:00
  NC_GLOBAL#SKEBS_ON=0
  NC_GLOBAL#SMOOTH_OPTION=0
  NC_GLOBAL#SOUTH-NORTH_GRID_DIMENSION=153
  NC_GLOBAL#SOUTH-NORTH_PATCH_END_STAG=153
  NC_GLOBAL#SOUTH-NORTH_PATCH_END_UNSTAG=152
  NC_GLOBAL#SOUTH-NORTH_PATCH_START_STAG=1
  NC_GLOBAL#SOUTH-NORTH_PATCH_START_UNSTAG=1
  NC_GLOBAL#SPEC_BDY_FINAL_MU=1
  NC_GLOBAL#SST_UPDATE=0
  NC_GLOBAL#STAND_LON=3
  NC_GLOBAL#START_DATE=2017-10-05_12:00:00
  NC_GLOBAL#SURFACE_INPUT_SOURCE=3
  NC_GLOBAL#SWINT_OPT=0
  NC_GLOBAL#SWRAD_SCAT=1
  NC_GLOBAL#TITLE= OUTPUT FROM WRF V3.9.1 MODEL
  NC_GLOBAL#TKE_ADV_OPT=1
  NC_GLOBAL#TRACER_PBLMIX=1
  NC_GLOBAL#TRUELAT1=44
  NC_GLOBAL#TRUELAT2=49
  NC_GLOBAL#USE_Q_DIABATIC=0
  NC_GLOBAL#USE_THETA_M=0
  NC_GLOBAL#WEST-EAST_GRID_DIMENSION=156
  NC_GLOBAL#WEST-EAST_PATCH_END_STAG=156
  NC_GLOBAL#WEST-EAST_PATCH_END_UNSTAG=155
  NC_GLOBAL#WEST-EAST_PATCH_START_STAG=1
  NC_GLOBAL#WEST-EAST_PATCH_START_UNSTAG=1
  NC_GLOBAL#W_DAMPING=0
  NC_GLOBAL#YSU_TOPDOWN_PBLMIX=0
  NETCDF_DIM_EXTRA={Time}
  NETCDF_DIM_Time_DEF={24,5}
  T2#coordinates=XLONG XLAT XTIME
  T2#description=TEMP at 2 M
  T2#FieldType=104
  T2#grid_mapping=lambert93
  T2#MemoryOrder=XY
  T2#stagger=
  T2#units=K
Corner Coordinates:
Upper Left  (   69815.000, 5751408.000) (  4d11'14.74"W, 38d37' 9.01"N)
Lower Left  (   69815.000, 7119408.000) (  5d56'59.14"W, 50d50'57.22"N)
Upper Right ( 1464815.000, 5751408.000) ( 11d42'41.65"E, 38d29'53.79"N)
Lower Right ( 1464815.000, 7119408.000) ( 13d50'23.60"E, 50d41'53.67"N)
Center      (  767315.000, 6435408.000) (  3d51'16.19"E, 45d 0'52.67"N)
Band 1 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=1
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 2 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=2
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 3 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=3
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 4 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=4
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 5 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=5
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 6 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=6
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 7 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=7
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 8 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=8
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 9 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=9
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 10 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=10
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 11 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=11
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 12 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=12
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 13 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=13
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 14 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=14
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 15 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=15
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 16 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=16
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 17 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=17
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 18 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=18
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 19 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=19
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 20 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=20
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 21 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=21
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 22 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=22
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 23 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=23
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 24 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=24
    NETCDF_VARNAME=T2
    stagger=
    units=K


--------------------------- WITH DEBUG INFO -----------------------------

$ gdalinfo --config CPL_DEBUG ON NetCDF:'test_wrfout_2.nc':T2
GDAL_netCDF: driver detected file type=2, libnetcdf detected type=2
GDAL_netCDF: dim_count = 9
Warning 1: No UNIDATA NC_GLOBAL:Conventions attribute
GDAL_netCDF: var_count = 166
GDAL_netCDF: variable #2 [XLAT] was ignored
GDAL_netCDF: variable #3 [XLONG] was ignored
GDAL_netCDF: variable #51 [XTIME] was ignored
GDAL_netCDF: variable #120 [XLAT_U] was ignored
GDAL_netCDF: variable #121 [XLONG_U] was ignored
GDAL_netCDF: variable #122 [XLAT_V] was ignored
GDAL_netCDF: variable #123 [XLONG_V] was ignored
GDAL_netCDF: ncount 131 1
GDAL_netCDF:
=====
SetProjectionFromVar( 38)
GDAL_netCDF: got grid_mapping lambert93
GDAL_netCDF: bIsGdalFile=1 bIsGdalCfFile=0 bBottomUp=0
GDAL_netCDF: setting WKT from GDAL
GDAL_netCDF: SetProjection, WKT = PROJCS["RGF93 /
Lambert-93",GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4171"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Lambert_Conformal_Conic_2SP"],PARAMETER["standard_parallel_1",49],PARAMETER["standard_parallel_2",44],PARAMETER["latitude_of_origin",46.5],PARAMETER["central_meridian",3],PARAMETER["false_easting",700000],PARAMETER["false_northing",6600000],AUTHORITY["EPSG","2154"],AXIS["X",EAST],AXIS["Y",NORTH]]
GDAL_netCDF: pszGeoTransform is not NULL 69815, 9000, 0, 5751408, 0, 9000
GDAL_netCDF:
SetGeoTransform(69815.000000,9000.000000,0.000000,5751408.000000,0.000000,9000.000000)
GDAL_netCDF: coordinates attribute [XLONG XLAT XTIME] is unsupported
GDAL_netCDF: bGotGeogCS=0 bGotCfSRS=0 bGotCfGT=0 bGotGdalSRS=1 bGotGdalGT=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL_netCDF: did not get nodata value for variable #38, using default
9969209968386869046778552952102584320.000000
GDAL_netCDF: netcdf type=5 gdal type=6 signedByte=1
GDAL: GDALOpen(NetCDF:test_wrfout_2.nc:T2, this=0x55e95dcad8e0) succeeds
as netCDF.
Driver: netCDF/Network Common Data Format
GDAL: GDALDefaultOverviews::OverviewScan()
Files: test_wrfout_2.nc
Size is 155, 152
Coordinate System is:
PROJCS["RGF93 / Lambert-93",
    GEOGCS["RGF93",
        DATUM["Reseau_Geodesique_Francais_1993",
            SPHEROID["GRS 1980",6378137,298.257222101,
                AUTHORITY["EPSG","7019"]],
            TOWGS84[0,0,0,0,0,0,0],
            AUTHORITY["EPSG","6171"]],
        PRIMEM["Greenwich",0,
            AUTHORITY["EPSG","8901"]],
        UNIT["degree",0.01745329251994328,
            AUTHORITY["EPSG","9122"]],
        AUTHORITY["EPSG","4171"]],
    UNIT["metre",1,
        AUTHORITY["EPSG","9001"]],
    PROJECTION["Lambert_Conformal_Conic_2SP"],
    PARAMETER["standard_parallel_1",49],
    PARAMETER["standard_parallel_2",44],
    PARAMETER["latitude_of_origin",46.5],
    PARAMETER["central_meridian",3],
    PARAMETER["false_easting",700000],
    PARAMETER["false_northing",6600000],
    AUTHORITY["EPSG","2154"],
    AXIS["X",EAST],
    AXIS["Y",NORTH]]
Origin = (69815.000000000000000,5751408.000000000000000)
Pixel Size = (9000.000000000000000,9000.000000000000000)
Metadata:
  lambert93#GeoTransform=69815, 9000, 0, 5751408, 0, 9000
  lambert93#grid_mapping=lambert93
  lambert93#spatial_ref=PROJCS["RGF93 /
Lambert-93",GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4171"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Lambert_Conformal_Conic_2SP"],PARAMETER["standard_parallel_1",49],PARAMETER["standard_parallel_2",44],PARAMETER["latitude_of_origin",46.5],PARAMETER["central_meridian",3],PARAMETER["false_easting",700000],PARAMETER["false_northing",6600000],AUTHORITY["EPSG","2154"],AXIS["X",EAST],AXIS["Y",NORTH]]
  NC_GLOBAL#ADAPT_DT_MAX=72
  NC_GLOBAL#ADAPT_DT_MIN=27
  NC_GLOBAL#ADAPT_DT_START=36
  NC_GLOBAL#AER_ANGEXP_OPT=1
  NC_GLOBAL#AER_ANGEXP_VAL=1.3
  NC_GLOBAL#AER_AOD550_OPT=1
  NC_GLOBAL#AER_AOD550_VAL=0.12
  NC_GLOBAL#AER_ASY_OPT=1
  NC_GLOBAL#AER_ASY_VAL=0.89999998
  NC_GLOBAL#AER_OPT=0
  NC_GLOBAL#AER_SSA_OPT=1
  NC_GLOBAL#AER_SSA_VAL=0.85000002
  NC_GLOBAL#AER_TYPE=1
  NC_GLOBAL#BLDT=0
  NC_GLOBAL#BL_PBL_PHYSICS=4
  NC_GLOBAL#BOTTOM-TOP_GRID_DIMENSION=35
  NC_GLOBAL#BOTTOM-TOP_PATCH_END_STAG=35
  NC_GLOBAL#BOTTOM-TOP_PATCH_END_UNSTAG=34
  NC_GLOBAL#BOTTOM-TOP_PATCH_START_STAG=1
  NC_GLOBAL#BOTTOM-TOP_PATCH_START_UNSTAG=1
  NC_GLOBAL#BUCKET_J=-1
  NC_GLOBAL#BUCKET_MM=-1
  NC_GLOBAL#CEN_LAT=45.014633
  NC_GLOBAL#CEN_LON=3.8544922
  NC_GLOBAL#CUDT=5
  NC_GLOBAL#CU_PHYSICS=1
  NC_GLOBAL#DAMPCOEF=0.2
  NC_GLOBAL#DAMP_OPT=0
  NC_GLOBAL#DFI_OPT=0
  NC_GLOBAL#DIFF_6TH_FACTOR=0.12
  NC_GLOBAL#DIFF_6TH_OPT=0
  NC_GLOBAL#DIFF_OPT=1
  NC_GLOBAL#DT=36
  NC_GLOBAL#DX=9000
  NC_GLOBAL#DY=9000
  NC_GLOBAL#ETAC=0
  NC_GLOBAL#FEEDBACK=1
  NC_GLOBAL#GFDDA_END_H=0
  NC_GLOBAL#GFDDA_INTERVAL_M=0
  NC_GLOBAL#GMT=12
  NC_GLOBAL#GRAV_SETTLING=0
  NC_GLOBAL#GRIDTYPE=C
  NC_GLOBAL#GRID_FDDA=0
  NC_GLOBAL#GRID_ID=1
  NC_GLOBAL#GRID_SFDDA=0
  NC_GLOBAL#GWD_OPT=0
  NC_GLOBAL#history=Tue Oct 17 14:57:49 2017: ncatted -a
spatial_ref,lambert93,c,c,PROJCS["RGF93 /
Lambert-93",GEOGCS["RGF93",DATUM["Reseau_Geodesique_Francais_1993",SPHEROID["GRS
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],TOWGS84[0,0,0,0,0,0,0],AUTHORITY["EPSG","6171"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.01745329251994328,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","4171"]],UNIT["metre",1,AUTHORITY["EPSG","9001"]],PROJECTION["Lambert_Conformal_Conic_2SP"],PARAMETER["standard_parallel_1",49],PARAMETER["standard_parallel_2",44],PARAMETER["latitude_of_origin",46.5],PARAMETER["central_meridian",3],PARAMETER["false_easting",700000],PARAMETER["false_northing",6600000],AUTHORITY["EPSG","2154"],AXIS["X",EAST],AXIS["Y",NORTH]]
-a GeoTransform,lambert93,c,c,69815, 9000, 0, 5751408, 0, 9000 -a
grid_mapping,,c,c,lambert93 test_wrfout_1.nc test_wrfout_2.nc
Tue Oct 17 14:57:39 2017: ncap -s lambert93=-9999 test_wrfout.nc
test_wrfout_1.nc
  NC_GLOBAL#HYBRID_OPT=-1
  NC_GLOBAL#HYPSOMETRIC_OPT=2
  NC_GLOBAL#ICLOUD=1
  NC_GLOBAL#ICLOUD_CU=0
  NC_GLOBAL#ISFFLX=1
  NC_GLOBAL#ISFTCFLX=0
  NC_GLOBAL#ISHALLOW=0
  NC_GLOBAL#ISICE=15
  NC_GLOBAL#ISLAKE=21
  NC_GLOBAL#ISOILWATER=14
  NC_GLOBAL#ISURBAN=13
  NC_GLOBAL#ISWATER=17
  NC_GLOBAL#I_PARENT_START=1
  NC_GLOBAL#JULDAY=278
  NC_GLOBAL#JULYR=2017
  NC_GLOBAL#J_PARENT_START=1
  NC_GLOBAL#KHDIF=0
  NC_GLOBAL#KM_OPT=4
  NC_GLOBAL#KVDIF=0
  NC_GLOBAL#MAP_PROJ=1
  NC_GLOBAL#MAP_PROJ_CHAR=Lambert Conformal
  NC_GLOBAL#MFSHCONV=1
  NC_GLOBAL#MMINLU=MODIFIED_IGBP_MODIS_NOAH
  NC_GLOBAL#MOAD_CEN_LAT=45.014633
  NC_GLOBAL#MOIST_ADV_OPT=1
  NC_GLOBAL#MP_PHYSICS=6
  NC_GLOBAL#NCO="4.6.1"
  NC_GLOBAL#NUM_LAND_CAT=21
  NC_GLOBAL#OBS_NUDGE_OPT=0
  NC_GLOBAL#PARENT_GRID_RATIO=1
  NC_GLOBAL#PARENT_ID=1
  NC_GLOBAL#POLE_LAT=90
  NC_GLOBAL#POLE_LON=0
  NC_GLOBAL#PREC_ACC_DT=0
  NC_GLOBAL#RADT=10
  NC_GLOBAL#RA_LW_PHYSICS=1
  NC_GLOBAL#RA_SW_PHYSICS=2
  NC_GLOBAL#SCALAR_ADV_OPT=1
  NC_GLOBAL#SCALAR_PBLMIX=0
  NC_GLOBAL#SF_LAKE_PHYSICS=0
  NC_GLOBAL#SF_OCEAN_PHYSICS=0
  NC_GLOBAL#SF_SFCLAY_PHYSICS=4
  NC_GLOBAL#SF_SURFACE_PHYSICS=2
  NC_GLOBAL#SF_URBAN_PHYSICS=0
  NC_GLOBAL#SGFDDA_END_H=0
  NC_GLOBAL#SGFDDA_INTERVAL_M=0
  NC_GLOBAL#SHCU_PHYSICS=0
  NC_GLOBAL#SIMULATION_INITIALIZATION_TYPE=REAL-DATA CASE
  NC_GLOBAL#SIMULATION_START_DATE=2017-10-05_12:00:00
  NC_GLOBAL#SKEBS_ON=0
  NC_GLOBAL#SMOOTH_OPTION=0
  NC_GLOBAL#SOUTH-NORTH_GRID_DIMENSION=153
  NC_GLOBAL#SOUTH-NORTH_PATCH_END_STAG=153
  NC_GLOBAL#SOUTH-NORTH_PATCH_END_UNSTAG=152
  NC_GLOBAL#SOUTH-NORTH_PATCH_START_STAG=1
  NC_GLOBAL#SOUTH-NORTH_PATCH_START_UNSTAG=1
  NC_GLOBAL#SPEC_BDY_FINAL_MU=1
  NC_GLOBAL#SST_UPDATE=0
  NC_GLOBAL#STAND_LON=3
  NC_GLOBAL#START_DATE=2017-10-05_12:00:00
  NC_GLOBAL#SURFACE_INPUT_SOURCE=3
  NC_GLOBAL#SWINT_OPT=0
  NC_GLOBAL#SWRAD_SCAT=1
  NC_GLOBAL#TITLE= OUTPUT FROM WRF V3.9.1 MODEL
  NC_GLOBAL#TKE_ADV_OPT=1
  NC_GLOBAL#TRACER_PBLMIX=1
  NC_GLOBAL#TRUELAT1=44
  NC_GLOBAL#TRUELAT2=49
  NC_GLOBAL#USE_Q_DIABATIC=0
  NC_GLOBAL#USE_THETA_M=0
  NC_GLOBAL#WEST-EAST_GRID_DIMENSION=156
  NC_GLOBAL#WEST-EAST_PATCH_END_STAG=156
  NC_GLOBAL#WEST-EAST_PATCH_END_UNSTAG=155
  NC_GLOBAL#WEST-EAST_PATCH_START_STAG=1
  NC_GLOBAL#WEST-EAST_PATCH_START_UNSTAG=1
  NC_GLOBAL#W_DAMPING=0
  NC_GLOBAL#YSU_TOPDOWN_PBLMIX=0
  NETCDF_DIM_EXTRA={Time}
  NETCDF_DIM_Time_DEF={24,5}
  T2#coordinates=XLONG XLAT XTIME
  T2#description=TEMP at 2 M
  T2#FieldType=104
  T2#grid_mapping=lambert93
  T2#MemoryOrder=XY
  T2#stagger=
  T2#units=K
OGRCT: PROJ >= 4.8.0 features enabled
OGRCT: Using locale-safe proj version
OGRCT: Source: +proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3
+x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
+no_defs
OGRCT: Target: +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs
Corner Coordinates:
Upper Left  (   69815.000, 5751408.000) (  4d11'14.74"W, 38d37' 9.01"N)
Lower Left  (   69815.000, 7119408.000) (  5d56'59.14"W, 50d50'57.22"N)
Upper Right ( 1464815.000, 5751408.000) ( 11d42'41.65"E, 38d29'53.79"N)
Lower Right ( 1464815.000, 7119408.000) ( 13d50'23.60"E, 50d41'53.67"N)
Center      (  767315.000, 6435408.000) (  3d51'16.19"E, 45d 0'52.67"N)
Band 1 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=1
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 2 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=2
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 3 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=3
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 4 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=4
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 5 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=5
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 6 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=6
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 7 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=7
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 8 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=8
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 9 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=9
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 10 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=10
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 11 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=11
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 12 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=12
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 13 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=13
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 14 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=14
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 15 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=15
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 16 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=16
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 17 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=17
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 18 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=18
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 19 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=19
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 20 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=20
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 21 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=21
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 22 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=22
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 23 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=23
    NETCDF_VARNAME=T2
    stagger=
    units=K
Band 24 Block=155x1 Type=Float32, ColorInterp=Undefined
  NoData Value=9.96920996838686905e+36
  Unit Type: K
  Metadata:
    coordinates=XLONG XLAT XTIME
    description=TEMP at 2 M
    FieldType=104
    grid_mapping=lambert93
    MemoryOrder=XY
    NETCDF_DIM_Time=24
    NETCDF_VARNAME=T2
    stagger=
    units=K
GDAL: GDALClose(NetCDF:test_wrfout_2.nc:T2, this=0x55e95dcad8e0)




From even.rouault at spatialys.com  Tue Oct 17 08:13:23 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 17 Oct 2017 17:13:23 +0200
Subject: [gdal-dev] netcd from WRF
In-Reply-To: <b57f027e-4373-c713-8b78-ac4c55db1dcd@oslandia.com>
References: <e10aa661-35ab-7bdf-a624-1c6425b8afe9@oslandia.com>
 <2121111.gPVIyOD0hh@even-i700>
 <b57f027e-4373-c713-8b78-ac4c55db1dcd@oslandia.com>
Message-ID: <2948610.Lmh9ligR6v@even-i700>

> > Are you sure that GDAL handles the bands as GDAL raster bands of the same
> > GDAL dataset, and not as different subdatasets (I suspect this is the
> > later) ? Because the georeferencing info in a GDAL dataset is attached to
> > the dataset, not the bands. So if that works for the first band, that
> > should work for the next ones of the same dataset.
> 
> Is there a simple way to check that from gdalinfo output ?

The gdalinfo output you provided shows that it is indeed a multi-band dataset 
(which is a subdataset). So georeferencing should apply to all bands since 
this is attached to the dataset, and not the bands. I'm not clear why QGIS 
would get it for band 1 and not for other bands.

> I suppose that what you mean by subdataset is what you obtain with
> syntax like "netcdf:'myfile.nc':MYVAR". 

Yes

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From vincent.mora at oslandia.com  Tue Oct 17 08:59:06 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Tue, 17 Oct 2017 17:59:06 +0200
Subject: [gdal-dev] netcd from WRF
In-Reply-To: <2948610.Lmh9ligR6v@even-i700>
References: <e10aa661-35ab-7bdf-a624-1c6425b8afe9@oslandia.com>
 <2121111.gPVIyOD0hh@even-i700>
 <b57f027e-4373-c713-8b78-ac4c55db1dcd@oslandia.com>
 <2948610.Lmh9ligR6v@even-i700>
Message-ID: <f131d37a-44af-ec9e-bda3-dd7f3ac9372e@oslandia.com>



Le 17/10/2017 à 17:13, Even Rouault a écrit :
>>> Are you sure that GDAL handles the bands as GDAL raster bands of the same
>>> GDAL dataset, and not as different subdatasets (I suspect this is the
>>> later) ? Because the georeferencing info in a GDAL dataset is attached to
>>> the dataset, not the bands. So if that works for the first band, that
>>> should work for the next ones of the same dataset.
>> Is there a simple way to check that from gdalinfo output ?
> The gdalinfo output you provided shows that it is indeed a multi-band dataset 
> (which is a subdataset). So georeferencing should apply to all bands since 
> this is attached to the dataset, and not the bands. I'm not clear why QGIS 
> would get it for band 1 and not for other bands.
For some reason my dataset looks like it's been corrupted (I tested with
gdal contour and observed the same strange behavior in the output as
with QGIS).

The problem was between the keyboard and the chair.

I tested with another dataset, everything works fine.

I guess the only thing remaining for me to do is to implement the WRF
support in the netcdf driver.

Thanks for your help,

V.


From chris.marsh at usask.ca  Wed Oct 18 09:20:41 2017
From: chris.marsh at usask.ca (Chris Marsh)
Date: Wed, 18 Oct 2017 10:20:41 -0600
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
In-Reply-To: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
References: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
Message-ID: <CAFgDerGuh1SJ7bBCgPa_ES+rBCPVjAk17QB2WJAzj4hJwuZm3A@mail.gmail.com>

I was wondering if anyone had thoughts on this? I posted to the proj.4
list, but seems like this may be a gdal problem and not proj.4 as the
proj.4 command line has no problem with this string.
I have also tried the  newest gdal without success.
Cheers
Chris

On 12 October 2017 at 11:41, Chris Marsh <chris.marsh at usask.ca> wrote:

> Hi,
>
> I'm using GDAL (and by extension proj.4) to reproject a set of WGS84
> coordinates to North America Albers Conic Conformal.
>
> On all but 1 computer I run my code on, this works as expected. However,
> when trying to run on one of Compute Canada's newest machines, I get the
> error
>
> ERROR 6: Failed to initialize PROJ.4 with `+proj=aea +lat_1=20 +lat_2=60
> +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
> +units=m +no_defs'.
>
> I have tried building and linking against various proj.4 versions, none of
> which solves this problem.
>
> The code  is straightfoward
> OGRSpatialReference insrs;
>     insrs.SetWellKnownGeogCS("WGS84");
>
>     OGRSpatialReference outsrs;
>     outsrs.importFromProj4("+proj=aea +lat_1=20 +lat_2=60 +lat_0=40
> +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
> +no_defs");
>
>     OGRCoordinateTransformation* coordTrans =  NULL;
>     coordTrans = OGRCreateCoordinateTransformation(&insrs, &outsrs);
>
>     coordTrans->Transform(1, &longitude, &latitude)
>
> with the error appearing on the Transform call. The proj.4 string is from
> using the ExportToWkt of GDAL for the WKT of Albers Conic Conformal. (long
> story as to why i'm doing this). I have tried using the WKT string and that
> results in the same error -- seems like it is just converted to proj.4
> behind the scenes.
>
> I am using gdal 2.2.1 and proj4 4.8 (4.9 has other issues I'm running into)
>
> $gcc -v
> Using built-in specs.
> COLLECT_GCC=gcc
> COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/nix/store/
> lvjwgn6hpngyy6k4xqcqa9h2cxy3fl30-gfortran-5.4.0/libexec/gcc/
> x86_64-unknown-linux-gnu/5.4.0/lto-wrapper
> Target: x86_64-unknown-linux-gnu
> Configured with:
> Thread model: posix
> gcc version 5.4.0 (GCC)
>
> $uname -a
> Linux gra-login4 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC
> 2017 x86_64 GNU/Linux
>
> Cheers
> Chris
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171018/f3b4d3bf/attachment.html>

From victor at amigocloud.com  Wed Oct 18 11:40:55 2017
From: victor at amigocloud.com (Victor Chernetsky)
Date: Wed, 18 Oct 2017 11:40:55 -0700
Subject: [gdal-dev]  question about --config cmd line option
Message-ID: <CAGhxFKVT06hyH0MY+x0dJ5OKFtOcYqPQEnGq834VuDHMoUsC4A@mail.gmail.com>

Hello,

I am developing the AmigoCloud driver for GDAL, and I have a question about
'-config' command line option.

When I use a space it seems to work, but when I use '=', which seems like a
correct way of doing it, I get the token string with unwanted chars at the
end of it.

Here is how I call it with space. I get good result:
victor$ ./apps/ogrinfo --config AMIGOCLOUD_API_KEY MY_TOKEN -al
"AmigoCloud:14200"
AMIGOCLOUD_API_KEY: 'MY_TOKEN'

When I call it with '=' it's not good:
victor$ ./apps/ogrinfo --config AMIGOCLOUD_API_KEY=MY_TOKEN -al
"AmigoCloud:14200"
AMIGOCLOUD_API_KEY: 'MY_TOKEN=-al'

This is the code I use to get the token:

osAPIKey = CSLFetchNameValueDef(papszOpenOptionsIn, "AMIGOCLOUD_API_KEY",
                                CPLGetConfigOption("AMIGOCLOUD_API_KEY", ""));

printf("AMIGOCLOUD_API_KEY: '%s'\n", osAPIKey.c_str());

Am I doing something wrong in my code, or the space is the way to go?

Thanks,
*Victor Chernetsky*


+1 (408) 368-4607
victor at amigocloud.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171018/fa72f2bd/attachment.html>

From even.rouault at spatialys.com  Wed Oct 18 11:51:10 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 18 Oct 2017 20:51:10 +0200
Subject: [gdal-dev] question about --config cmd line option
In-Reply-To: <CAGhxFKVT06hyH0MY+x0dJ5OKFtOcYqPQEnGq834VuDHMoUsC4A@mail.gmail.com>
References: <CAGhxFKVT06hyH0MY+x0dJ5OKFtOcYqPQEnGq834VuDHMoUsC4A@mail.gmail.com>
Message-ID: <2381908.O3jRWjSRmJ@even-i700>

On mercredi 18 octobre 2017 11:40:55 CEST Victor Chernetsky wrote:
> Hello,
> 
> I am developing the AmigoCloud driver for GDAL, and I have a question about
> '-config' command line option.
> 
> When I use a space it seems to work, but when I use '=', which seems like a
> correct way of doing it, I get the token string with unwanted chars at the
> end of it.

Victor,

How surprising it might be, the space separator is the documented  (see end of 
http://gdal.org/gdal_utilities.html) and implemented way of separating the key 
and the value.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From victor at amigocloud.com  Wed Oct 18 11:55:53 2017
From: victor at amigocloud.com (Victor Chernetsky)
Date: Wed, 18 Oct 2017 11:55:53 -0700
Subject: [gdal-dev] question about --config cmd line option
In-Reply-To: <2381908.O3jRWjSRmJ@even-i700>
References: <CAGhxFKVT06hyH0MY+x0dJ5OKFtOcYqPQEnGq834VuDHMoUsC4A@mail.gmail.com>
 <2381908.O3jRWjSRmJ@even-i700>
Message-ID: <CAGhxFKWOP0mEYOOxARPXKMKdbmL1nPsuiYTjTAfErt7z675Ycw@mail.gmail.com>

Thanks Even. I just wanted to confirm it.

On Wed, Oct 18, 2017 at 11:51 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On mercredi 18 octobre 2017 11:40:55 CEST Victor Chernetsky wrote:
> > Hello,
> >
> > I am developing the AmigoCloud driver for GDAL, and I have a question
> about
> > '-config' command line option.
> >
> > When I use a space it seems to work, but when I use '=', which seems
> like a
> > correct way of doing it, I get the token string with unwanted chars at
> the
> > end of it.
>
> Victor,
>
> How surprising it might be, the space separator is the documented  (see
> end of
> http://gdal.org/gdal_utilities.html) and implemented way of separating
> the key
> and the value.
>
> Even
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171018/6ac736e1/attachment.html>

From even.rouault at spatialys.com  Wed Oct 18 11:58:26 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 18 Oct 2017 20:58:26 +0200
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
In-Reply-To: <CAFgDerGuh1SJ7bBCgPa_ES+rBCPVjAk17QB2WJAzj4hJwuZm3A@mail.gmail.com>
References: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
 <CAFgDerGuh1SJ7bBCgPa_ES+rBCPVjAk17QB2WJAzj4hJwuZm3A@mail.gmail.com>
Message-ID: <2594475.UVvFWGEU6N@even-i700>

On mercredi 18 octobre 2017 10:20:41 CEST Chris Marsh wrote:
> I was wondering if anyone had thoughts on this? I posted to the proj.4
> list, but seems like this may be a gdal problem and not proj.4 as the
> proj.4 command line has no problem with this string.
> I have also tried the  newest gdal without success.

Try building --with-static-proj4 to avoid the issues with the dlopen()'ing of 
libproj.so

Check if the following works

echo 2 49 | gdaltransform -s_srs EPSG:4326 -t_srs EPSG:32632


> Cheers
> Chris
> 
> On 12 October 2017 at 11:41, Chris Marsh <chris.marsh at usask.ca> wrote:
> > Hi,
> > 
> > I'm using GDAL (and by extension proj.4) to reproject a set of WGS84
> > coordinates to North America Albers Conic Conformal.
> > 
> > On all but 1 computer I run my code on, this works as expected. However,
> > when trying to run on one of Compute Canada's newest machines, I get the
> > error
> > 
> > ERROR 6: Failed to initialize PROJ.4 with `+proj=aea +lat_1=20 +lat_2=60
> > +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
> > +units=m +no_defs'.
> > 
> > I have tried building and linking against various proj.4 versions, none of
> > which solves this problem.
> > 
> > The code  is straightfoward
> > OGRSpatialReference insrs;
> > 
> >     insrs.SetWellKnownGeogCS("WGS84");
> >     
> >     OGRSpatialReference outsrs;
> >     outsrs.importFromProj4("+proj=aea +lat_1=20 +lat_2=60 +lat_0=40
> > 
> > +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
> > +no_defs");
> > 
> >     OGRCoordinateTransformation* coordTrans =  NULL;
> >     coordTrans = OGRCreateCoordinateTransformation(&insrs, &outsrs);
> >     
> >     coordTrans->Transform(1, &longitude, &latitude)
> > 
> > with the error appearing on the Transform call. The proj.4 string is from
> > using the ExportToWkt of GDAL for the WKT of Albers Conic Conformal. (long
> > story as to why i'm doing this). I have tried using the WKT string and
> > that
> > results in the same error -- seems like it is just converted to proj.4
> > behind the scenes.
> > 
> > I am using gdal 2.2.1 and proj4 4.8 (4.9 has other issues I'm running
> > into)
> > 
> > $gcc -v
> > Using built-in specs.
> > COLLECT_GCC=gcc
> > COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/nix/store/
> > lvjwgn6hpngyy6k4xqcqa9h2cxy3fl30-gfortran-5.4.0/libexec/gcc/
> > x86_64-unknown-linux-gnu/5.4.0/lto-wrapper
> > Target: x86_64-unknown-linux-gnu
> > Configured with:
> > Thread model: posix
> > gcc version 5.4.0 (GCC)
> > 
> > $uname -a
> > Linux gra-login4 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC
> > 2017 x86_64 GNU/Linux
> > 
> > Cheers
> > Chris


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From vincent.mora at oslandia.com  Thu Oct 19 05:11:45 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Thu, 19 Oct 2017 14:11:45 +0200
Subject: [gdal-dev] Countour polygons instead of lines
Message-ID: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>

Hi all,

I know this is old stuff (references below), but making polygons instead
of lines would be a great option for gdal_contour IMO.

It could be also another program included in gdal/app (if it is already,
I can't find it).

What do you think, shall I add that ? If yes, first or second option ?

V.


References:

http://osgeo-org.1560.x6.nabble.com/gdal-dev-gdal-polygonize-and-polygon-edges-td5035292.html

http://osgeo-org.1560.x6.nabble.com/Countour-polygons-instead-of-lines-td3758053.html

http://geoexamples.blogspot.fr/2013/08/creating-vectorial-isobands-with-python.html





PS:

A blur filter with minimal configuration would be another gorgeous
option to gdal_contour because it gives you nice smooth lines (you can
do that with filter in a vrt, but you have to create the vrt).



From gregers at septima.dk  Thu Oct 19 05:23:06 2017
From: gregers at septima.dk (Hans Gregers Hedegaard Petersen)
Date: Thu, 19 Oct 2017 14:23:06 +0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
Message-ID: <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>

Hi Vincent,

> I know this is old stuff (references below), but making polygons instead
> of lines would be a great option for gdal_contour IMO.
>
> It could be also another program included in gdal/app (if it is already,
> I can't find it).
>
> What do you think, shall I add that ? If yes, first or second option ?

I had a similar problem years ago, and after making consistent
orientation [1] it is simply a matter of running through the lines and
matching starting points with endpoints in the linestrings.  This is a
rather fast operation on a spatially indexed dataset.

You cannot always make polygons with them unless you are on a perfect
island - for instance I processed Denmark in tiles (over 43000 tiles
of 1x1km) and then "glued" the linestrings together afterwards. Speed
was essential, so I first glued all linestrings in a tile (which would
make a large number of closed linestrings), then between tiles (but
only for those that were not yet closed).


Cheers,

Gregers


[1]: https://trac.osgeo.org/gdal/ticket/3129

From even.rouault at spatialys.com  Thu Oct 19 05:46:54 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 19 Oct 2017 14:46:54 +0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
Message-ID: <1992799.P6YrmxzMtS@even-i700>

On jeudi 19 octobre 2017 14:11:45 CEST Vincent Mora wrote:
> Hi all,
> 
> I know this is old stuff (references below), but making polygons instead
> of lines would be a great option for gdal_contour IMO.
> 
> It could be also another program included in gdal/app (if it is already,
> I can't find it).
> 
> What do you think, shall I add that ? If yes, first or second option ?

Hi Vincent,

Would be definitely useful. If you base it on the existing countouring alg, 
then it makes sense to add this as a, let's say, "-polygon" option of the 
gdal_contour utility. 
We wiould need to cross-reference gdal_contour and gdal_polygonize 
documentation to explain the differences, as people could get confused.

There's also https://trac.osgeo.org/gdal/ticket/6526 related to isoband.

Greger's point about how to handle linestrings touching the raster edge is a 
good one. I guess we could have a mode where we force close polygons (probably 
the default mode), and another one (not necessarily needed now) where we leave 
them open so that then can be merged together.

Currently GDALContour() writes the geometries in a streaming way (and 
potentially with a driver that doesn't support fully random read/write 
operations). Probably that for creating polygons, you would need some 
temporary vector datasets ? But perhaps not, as it seems the current algorithm 
already stores quite a bunch of line segments in memory before being able to 
emit linestrings to the output driver.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From vincent.mora at oslandia.com  Thu Oct 19 05:47:36 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Thu, 19 Oct 2017 14:47:36 +0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
Message-ID: <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>

Hi Gregers,

Thanks for your reply.

The question was not "how to" yet, but "shall I" ;o)

I think I did something similar to the "ends matching" in a python
script that creates those polygons (in a particular context that also
requires tiling).

What I'd like to know, is if there is a reason why it's not already
available in gdal, since there is the need for that and apparently algos
to reach the goal.

> You cannot always make polygons with them unless you are on a perfect
island

I'm not sure I understand the that. The polygons I have in mind are
polygons with holes (multipolygons for a given class actually), is it
related to what you're saying ?


V.


Le 19/10/2017 à 14:23, Hans Gregers Hedegaard Petersen a écrit :
> Hi Vincent,
>
>> I know this is old stuff (references below), but making polygons instead
>> of lines would be a great option for gdal_contour IMO.
>>
>> It could be also another program included in gdal/app (if it is already,
>> I can't find it).
>>
>> What do you think, shall I add that ? If yes, first or second option ?
> I had a similar problem years ago, and after making consistent
> orientation [1] it is simply a matter of running through the lines and
> matching starting points with endpoints in the linestrings.  This is a
> rather fast operation on a spatially indexed dataset.
>
> You cannot always make polygons with them unless you are on a perfect
> island - for instance I processed Denmark in tiles (over 43000 tiles
> of 1x1km) and then "glued" the linestrings together afterwards. Speed
> was essential, so I first glued all linestrings in a tile (which would
> make a large number of closed linestrings), then between tiles (but
> only for those that were not yet closed).
>
>
> Cheers,
>
> Gregers
>
>
> [1]: https://trac.osgeo.org/gdal/ticket/3129



From jaadfoo at gmail.com  Thu Oct 19 10:57:10 2017
From: jaadfoo at gmail.com (Jamie Adams)
Date: Thu, 19 Oct 2017 10:57:10 -0700
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
Message-ID: <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>

>From a user perspective, this can be done pretty easily using gdal_calc.py
& gdal_polygonize.py. I've used this technique in the past several times.
This doesn't help with gdal_contour of course, but is a viable way of doing
the same thing. Maybe worth considering as a new python tool.

Using a random SRTM tile in bash:

for iso in 800 1000 1200 1400 1600
do
gdal_calc.py --NoDataValue=0 -A N22E005.tif --calc="A>${iso}" --outfile
${iso}.tif
gdal_polygonize.py -f "ESRI Shapefile" ${iso}.tif ${iso}.shp
done

On Thu, Oct 19, 2017 at 5:47 AM, Vincent Mora <vincent.mora at oslandia.com>
wrote:

> Hi Gregers,
>
> Thanks for your reply.
>
> The question was not "how to" yet, but "shall I" ;o)
>
> I think I did something similar to the "ends matching" in a python
> script that creates those polygons (in a particular context that also
> requires tiling).
>
> What I'd like to know, is if there is a reason why it's not already
> available in gdal, since there is the need for that and apparently algos
> to reach the goal.
>
> > You cannot always make polygons with them unless you are on a perfect
> island
>
> I'm not sure I understand the that. The polygons I have in mind are
> polygons with holes (multipolygons for a given class actually), is it
> related to what you're saying ?
>
>
> V.
>
>
> Le 19/10/2017 à 14:23, Hans Gregers Hedegaard Petersen a écrit :
> > Hi Vincent,
> >
> >> I know this is old stuff (references below), but making polygons instead
> >> of lines would be a great option for gdal_contour IMO.
> >>
> >> It could be also another program included in gdal/app (if it is already,
> >> I can't find it).
> >>
> >> What do you think, shall I add that ? If yes, first or second option ?
> > I had a similar problem years ago, and after making consistent
> > orientation [1] it is simply a matter of running through the lines and
> > matching starting points with endpoints in the linestrings.  This is a
> > rather fast operation on a spatially indexed dataset.
> >
> > You cannot always make polygons with them unless you are on a perfect
> > island - for instance I processed Denmark in tiles (over 43000 tiles
> > of 1x1km) and then "glued" the linestrings together afterwards. Speed
> > was essential, so I first glued all linestrings in a tile (which would
> > make a large number of closed linestrings), then between tiles (but
> > only for those that were not yet closed).
> >
> >
> > Cheers,
> >
> > Gregers
> >
> >
> > [1]: https://trac.osgeo.org/gdal/ticket/3129
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/254bf3c3/attachment.html>

From klassen.js at gmail.com  Thu Oct 19 11:38:38 2017
From: klassen.js at gmail.com (James Klassen)
Date: Thu, 19 Oct 2017 13:38:38 -0500
Subject: [gdal-dev] Esri JSON Curves
Message-ID: <CAHqX796fb24M9yV9_PQ3A4C9BhJwyiB2wFs+KJ-9Sk+daY8ipQ@mail.gmail.com>

Has anyone looked at reading curved geometries from an Esri rest service
queried with "returnTrueCurves=true"?

My end goal is to import the data into PostGIS. We were successful using
ogr2ogr to translate the curved features from a geodatabase download in the
past, but that download is being replaced with a rest service.  OGR reads
the rest service correctly without "returnTrueCurves=true", but we would
like to preserve the integrity of the curves in the source data if possible.

It doesn't look like there is any code in GDAL 2.2 to deal with this
situation.  `ogresrijsonreader.cpp:OGRESRIJSONReadPolygon()` looks like it
is only looking for a "rings" member, not "curveRings", etc.

I am seeing the response with curves is still identified as a polygon layer:

 "geometryType": "esriGeometryPolygon"

where some of the geometries are normal polygons as (I've changed the
numbers to protect the innocent):

 "geometry": {
    "rings": [
     [
      [
       544413.0,
       198310.9
      ],
...

while some of the other geometries confuse OGR and are as follows:

   "geometry": {
    "curveRings": [
     [
      [
       583150.8,
       150314.1
      ],
      {
       "c": [
        [
         583162.9,
         150317.4
        ],
        [
         583190.8,
         150313.8
        ]
       ]
      },
      [
       583141.3,
       150317.0
      ],
...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/cb85fcab/attachment-0001.html>

From even.rouault at spatialys.com  Thu Oct 19 12:04:05 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 19 Oct 2017 21:04:05 +0200
Subject: [gdal-dev] Esri JSON Curves
In-Reply-To: <CAHqX796fb24M9yV9_PQ3A4C9BhJwyiB2wFs+KJ-9Sk+daY8ipQ@mail.gmail.com>
References: <CAHqX796fb24M9yV9_PQ3A4C9BhJwyiB2wFs+KJ-9Sk+daY8ipQ@mail.gmail.com>
Message-ID: <1644688.RXc6CkTpVx@even-i700>

On jeudi 19 octobre 2017 13:38:38 CEST James Klassen wrote:
> Has anyone looked at reading curved geometries from an Esri rest service
> queried with "returnTrueCurves=true"?
> 
> My end goal is to import the data into PostGIS. We were successful using
> ogr2ogr to translate the curved features from a geodatabase download in the
> past, but that download is being replaced with a rest service.  OGR reads
> the rest service correctly without "returnTrueCurves=true", but we would
> like to preserve the integrity of the curves in the source data if possible.
> 
> It doesn't look like there is any code in GDAL 2.2 to deal with this
> situation.  `ogresrijsonreader.cpp:OGRESRIJSONReadPolygon()` looks like it
> is only looking for a "rings" member, not "curveRings", etc.

This is indeed not supported at the moment.
It appears to be documented in
http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#//02r3000000n1000000#CURVE

The data model is, non suprisingly, super close to what exists in Personnal Geodatabase
or FileGeodatabase. Arc/CircularArc could be translated to CIRCULARSTRING/COMPOUNDCURVE/
CURVEPOLYGON. Bezier curves would have to be linearized since there's no equivalent in
OGC SF / ISO SQL-MM Part 3 standards.
So this is "just" a matter of coding it. 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From chris.marsh at usask.ca  Thu Oct 19 12:19:52 2017
From: chris.marsh at usask.ca (Chris Marsh)
Date: Thu, 19 Oct 2017 13:19:52 -0600
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
In-Reply-To: <2594475.UVvFWGEU6N@even-i700>
References: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
 <CAFgDerGuh1SJ7bBCgPa_ES+rBCPVjAk17QB2WJAzj4hJwuZm3A@mail.gmail.com>
 <2594475.UVvFWGEU6N@even-i700>
Message-ID: <CAFgDerEp+A9K4xJjJ14=A+QgvdtsZwXEsb132d4UU+KPhJwWZQ@mail.gmail.com>

Hi,

I build GDAL by specifying --with-static-proj4  on the configure command
line. This does not seem to have resolved the problem.

echo 2 49 | build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
> -t_srs EPSG:32632
> -11818.9526229417 5451106.95020125 0


Cheers
Chris

On 18 October 2017 at 12:58, Even Rouault <even.rouault at spatialys.com>
wrote:

> On mercredi 18 octobre 2017 10:20:41 CEST Chris Marsh wrote:
> > I was wondering if anyone had thoughts on this? I posted to the proj.4
> > list, but seems like this may be a gdal problem and not proj.4 as the
> > proj.4 command line has no problem with this string.
> > I have also tried the  newest gdal without success.
>
> Try building --with-static-proj4 to avoid the issues with the dlopen()'ing
> of
> libproj.so
>
> Check if the following works
>
> echo 2 49 | gdaltransform -s_srs EPSG:4326 -t_srs EPSG:32632
>
>
> > Cheers
> > Chris
> >
> > On 12 October 2017 at 11:41, Chris Marsh <chris.marsh at usask.ca> wrote:
> > > Hi,
> > >
> > > I'm using GDAL (and by extension proj.4) to reproject a set of WGS84
> > > coordinates to North America Albers Conic Conformal.
> > >
> > > On all but 1 computer I run my code on, this works as expected.
> However,
> > > when trying to run on one of Compute Canada's newest machines, I get
> the
> > > error
> > >
> > > ERROR 6: Failed to initialize PROJ.4 with `+proj=aea +lat_1=20
> +lat_2=60
> > > +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0
> > > +units=m +no_defs'.
> > >
> > > I have tried building and linking against various proj.4 versions,
> none of
> > > which solves this problem.
> > >
> > > The code  is straightfoward
> > > OGRSpatialReference insrs;
> > >
> > >     insrs.SetWellKnownGeogCS("WGS84");
> > >
> > >     OGRSpatialReference outsrs;
> > >     outsrs.importFromProj4("+proj=aea +lat_1=20 +lat_2=60 +lat_0=40
> > >
> > > +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m
> > > +no_defs");
> > >
> > >     OGRCoordinateTransformation* coordTrans =  NULL;
> > >     coordTrans = OGRCreateCoordinateTransformation(&insrs, &outsrs);
> > >
> > >     coordTrans->Transform(1, &longitude, &latitude)
> > >
> > > with the error appearing on the Transform call. The proj.4 string is
> from
> > > using the ExportToWkt of GDAL for the WKT of Albers Conic Conformal.
> (long
> > > story as to why i'm doing this). I have tried using the WKT string and
> > > that
> > > results in the same error -- seems like it is just converted to proj.4
> > > behind the scenes.
> > >
> > > I am using gdal 2.2.1 and proj4 4.8 (4.9 has other issues I'm running
> > > into)
> > >
> > > $gcc -v
> > > Using built-in specs.
> > > COLLECT_GCC=gcc
> > > COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/nix/store/
> > > lvjwgn6hpngyy6k4xqcqa9h2cxy3fl30-gfortran-5.4.0/libexec/gcc/
> > > x86_64-unknown-linux-gnu/5.4.0/lto-wrapper
> > > Target: x86_64-unknown-linux-gnu
> > > Configured with:
> > > Thread model: posix
> > > gcc version 5.4.0 (GCC)
> > >
> > > $uname -a
> > > Linux gra-login4 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51
> UTC
> > > 2017 x86_64 GNU/Linux
> > >
> > > Cheers
> > > Chris
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/062364d8/attachment.html>

From even.rouault at spatialys.com  Thu Oct 19 12:34:54 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 19 Oct 2017 21:34:54 +0200
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
In-Reply-To: <CAFgDerEp+A9K4xJjJ14=A+QgvdtsZwXEsb132d4UU+KPhJwWZQ@mail.gmail.com>
References: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
 <2594475.UVvFWGEU6N@even-i700>
 <CAFgDerEp+A9K4xJjJ14=A+QgvdtsZwXEsb132d4UU+KPhJwWZQ@mail.gmail.com>
Message-ID: <3822135.iOQBfPJlNC@even-i700>

On jeudi 19 octobre 2017 13:19:52 CEST Chris Marsh wrote:
> Hi,
> 
> I build GDAL by specifying --with-static-proj4  on the configure command
> line. This does not seem to have resolved the problem.
> 
> echo 2 49 | build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
> 
> > -t_srs EPSG:32632
> > -11818.9526229417 5451106.95020125 0
> 

OK, so GDAL and proj.4 have some minimum level of functionnality

And what about

echo 2 49 |  gdaltransform -s_srs EPSG:4326 -t_srs "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" --debug on



-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From chris.marsh at usask.ca  Thu Oct 19 12:41:41 2017
From: chris.marsh at usask.ca (Chris Marsh)
Date: Thu, 19 Oct 2017 13:41:41 -0600
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
In-Reply-To: <3822135.iOQBfPJlNC@even-i700>
References: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
 <2594475.UVvFWGEU6N@even-i700>
 <CAFgDerEp+A9K4xJjJ14=A+QgvdtsZwXEsb132d4UU+KPhJwWZQ@mail.gmail.com>
 <3822135.iOQBfPJlNC@even-i700>
Message-ID: <CAFgDerGdabK3Jkq+50Ex-zEujUrmQxuPTD6R_SaPBjrYmXNvzw@mail.gmail.com>

echo 2 49 |  /build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
-t_srs "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0
+ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" --debug on
OGRCT: PROJ >= 4.8.0 features enabled
OGRCT: Using locale-safe proj version
OGRCT: Source: +proj=longlat +datum=WGS84 +no_defs
OGRCT: Target: +proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0
+y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
OGRCT: Source: +proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0
+y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
OGRCT: Target: +proj=longlat +datum=WGS84 +no_defs
5634252.86902731 4265258.45946341 0



On 19 October 2017 at 13:34, Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 19 octobre 2017 13:19:52 CEST Chris Marsh wrote:
> > Hi,
> >
> > I build GDAL by specifying --with-static-proj4  on the configure command
> > line. This does not seem to have resolved the problem.
> >
> > echo 2 49 | build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
> >
> > > -t_srs EPSG:32632
> > > -11818.9526229417 5451106.95020125 0
> >
>
> OK, so GDAL and proj.4 have some minimum level of functionnality
>
> And what about
>
> echo 2 49 |  gdaltransform -s_srs EPSG:4326 -t_srs "+proj=aea +lat_1=20
> +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80
> +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" --debug on
>
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/7d31c5e1/attachment.html>

From szekerest at gmail.com  Thu Oct 19 13:55:50 2017
From: szekerest at gmail.com (Tamas Szekeres)
Date: Thu, 19 Oct 2017 22:55:50 +0200
Subject: [gdal-dev] Get WFS attributes form the gml namespace as OGR fields
Message-ID: <CACALY+R5Q_cSACMshsHDe84-qkG9-04th6vMY5JYQfmp4G5G0A@mail.gmail.com>

Hi all,

It looks like whenever we have a dataset (shapefile,db table,etc...) which
has a
column with such names like "description", "name", "location" GeoServer
maps it to the elements in the gml namespace (in a 1.1 request),
therefore DescribeFeatureType doesn't contain these attributes.

For example this response doesn't include the name attribute

http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&SERVICE=WFS&REQUEST=DescribeFeatureType&TYPENAME=ogi:okcounties

However that attribute is returned in the GetFeature request in the
gml:name section, like:

http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&REQUEST=GetFeature&TYPENAME=ogi:okcounties

But as the result of this behaviour the WFS driver doesn't include this
item in the layer definition. Is that possible to retrieve these attributes
from the WFS driver as OGR fields for example to use them in SQL
expressions?

Thanks,

Tamas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/63003895/attachment.html>

From even.rouault at spatialys.com  Thu Oct 19 14:18:23 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 19 Oct 2017 23:18:23 +0200
Subject: [gdal-dev] Get WFS attributes form the gml namespace as OGR
	fields
In-Reply-To: <CACALY+R5Q_cSACMshsHDe84-qkG9-04th6vMY5JYQfmp4G5G0A@mail.gmail.com>
References: <CACALY+R5Q_cSACMshsHDe84-qkG9-04th6vMY5JYQfmp4G5G0A@mail.gmail.com>
Message-ID: <4193429.VVIeE486Qc@even-i700>

On jeudi 19 octobre 2017 22:55:50 CEST Tamas Szekeres wrote:
> Hi all,
> 
> It looks like whenever we have a dataset (shapefile,db table,etc...) which
> has a
> column with such names like "description", "name", "location" GeoServer
> maps it to the elements in the gml namespace (in a 1.1 request),
> therefore DescribeFeatureType doesn't contain these attributes.
> 
> For example this response doesn't include the name attribute
> 
> http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&SERVICE=WF
> S&REQUEST=DescribeFeatureType&TYPENAME=ogi:okcounties
> 
> However that attribute is returned in the GetFeature request in the
> gml:name section, like:
> 
> http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&REQUEST=Ge
> tFeature&TYPENAME=ogi:okcounties
> 
> But as the result of this behaviour the WFS driver doesn't include this
> item in the layer definition. Is that possible to retrieve these attributes
> from the WFS driver as OGR fields for example to use them in SQL
> expressions?

Hi Tamas,

If your need is to filter on the server, then you'll need to compose the full 
URL at hand.
If you want to post-filter, you can downloader the GetFeature request and open 
the GML file with the DOWNLOAD_SCHEMA=NO open option (or 
GML_DOWNLOAD_WFS_SCHEMA=NO configuration option)
This will prevent the GML driver from trying to use the schema, and then it 
will discover the gml:name element.

OGRFeature(okcounties):155
  gml_id (String) = okcounties.155
  name (String) = BEAVER
  state (Integer) = 40
  county (Integer) = 7
  stateplane (String) = N
  MULTIPOLYGON (((-100.945566 ....)))

The XSD parser used by the WFS and GML drivers could also possibly be modified 
to hard-code the definition of those few GML fields (although they might 
depend on the GML version).


Otherwise you can also use the GMLAS driver, but the result will be a bit 
inconvenient to use as it will create a dedicated layer for the name attribute 
(as gml:name can be repeated):

$ ogrinfo GMLAS:out.xml 
INFO: Open of `GMLAS:out.xml'
      using driver `GMLAS' successful.
1: okcounties (Multi Surface)
2: okcounties_metadataproperty (None)
3: okcounties_name (None)
4: location (None)

OGRFeature(okcounties):1
  ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1
  id (String) = okcounties.155
  state (Integer64) = 40
  county (Integer64) = 7
  stateplane (String) = N
  MULTIPOLYGON (((-100.945566....)))

OGRFeature(okcounties_name):1
  ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1_name_1
  parent_ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1
  value (String) = BEAVER


Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From klassen.js at gmail.com  Thu Oct 19 14:55:35 2017
From: klassen.js at gmail.com (James Klassen)
Date: Thu, 19 Oct 2017 16:55:35 -0500
Subject: [gdal-dev] Esri JSON Curves
In-Reply-To: <1644688.RXc6CkTpVx@even-i700>
References: <CAHqX796fb24M9yV9_PQ3A4C9BhJwyiB2wFs+KJ-9Sk+daY8ipQ@mail.gmail.com>
 <1644688.RXc6CkTpVx@even-i700>
Message-ID: <CAHqX795pjO7gMucUG2vHNAanvQ2DdFA+re9HN9aMgc=jsw8fsw@mail.gmail.com>

On Thu, Oct 19, 2017 at 2:04 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On jeudi 19 octobre 2017 13:38:38 CEST James Klassen wrote:
> > Has anyone looked at reading curved geometries from an Esri rest service
> > queried with "returnTrueCurves=true"?
> >
> > My end goal is to import the data into PostGIS. We were successful using
> > ogr2ogr to translate the curved features from a geodatabase download in
> the
> > past, but that download is being replaced with a rest service.  OGR reads
> > the rest service correctly without "returnTrueCurves=true", but we would
> > like to preserve the integrity of the curves in the source data if
> possible.
> >
> > It doesn't look like there is any code in GDAL 2.2 to deal with this
> > situation.  `ogresrijsonreader.cpp:OGRESRIJSONReadPolygon()` looks like
> it
> > is only looking for a "rings" member, not "curveRings", etc.
>
> This is indeed not supported at the moment.
> It appears to be documented in
> http://resources.arcgis.com/en/help/arcgis-rest-api/index.ht
> ml#//02r3000000n1000000#CURVE
>
> The data model is, non suprisingly, super close to what exists in
> Personnal Geodatabase
> or FileGeodatabase. Arc/CircularArc could be translated to
> CIRCULARSTRING/COMPOUNDCURVE/
> CURVEPOLYGON. Bezier curves would have to be linearized since there's no
> equivalent in
> OGC SF / ISO SQL-MM Part 3 standards.
> So this is "just" a matter of coding it.
>
>
Interesting.  So, some new JSON parsing code feeding into similar code to
what already exists in other drivers to create the right OGR objects.  It
just comes down to time and/or money to actually implement it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/9ddbc7c2/attachment.html>

From szekerest at gmail.com  Thu Oct 19 14:56:29 2017
From: szekerest at gmail.com (Tamas Szekeres)
Date: Thu, 19 Oct 2017 23:56:29 +0200
Subject: [gdal-dev] Get WFS attributes form the gml namespace as OGR
	fields
In-Reply-To: <4193429.VVIeE486Qc@even-i700>
References: <CACALY+R5Q_cSACMshsHDe84-qkG9-04th6vMY5JYQfmp4G5G0A@mail.gmail.com>
 <4193429.VVIeE486Qc@even-i700>
Message-ID: <CACALY+QhrqtH3Q7tJn0G+1AMJG-uqdJ=Tmu453O_NnJMH=kf6g@mail.gmail.com>

It looks like DOWNLOAD_SCHEMA=NO would do the trick, but if I use this in a
VRT file this way it crashes GDAL.

<OGRVRTDataSource>
    <OGRVRTLayer name="OKCounties">
        <SrcDataSource>
http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&amp;REQUEST=GetFeature&amp;TYPENAME=ogi:okcounties&amp;SRSNAME=EPSG:900913
</SrcDataSource>
        <OpenOptions>
            <OOI key="DOWNLOAD_SCHEMA">NO</OOI>
        </OpenOptions>
        <LayerSRS>EPSG:900913</LayerSRS>
        <SrcSQL>SELECT *,
'BRUSH(fc:#00000000);PEN(c:#008000,w:3px);LABEL(f:"Arial",c:#008000,s:14px,t:{name})'
as OGR_STYLE from "okcounties"</SrcSQL>
    </OGRVRTLayer>
</OGRVRTDataSource>





2017-10-19 23:18 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> On jeudi 19 octobre 2017 22:55:50 CEST Tamas Szekeres wrote:
> > Hi all,
> >
> > It looks like whenever we have a dataset (shapefile,db table,etc...)
> which
> > has a
> > column with such names like "description", "name", "location" GeoServer
> > maps it to the elements in the gml namespace (in a 1.1 request),
> > therefore DescribeFeatureType doesn't contain these attributes.
> >
> > For example this response doesn't include the name attribute
> >
> > http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&
> SERVICE=WF
> > S&REQUEST=DescribeFeatureType&TYPENAME=ogi:okcounties
> >
> > However that attribute is returned in the GetFeature request in the
> > gml:name section, like:
> >
> > http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&
> REQUEST=Ge
> > tFeature&TYPENAME=ogi:okcounties
> >
> > But as the result of this behaviour the WFS driver doesn't include this
> > item in the layer definition. Is that possible to retrieve these
> attributes
> > from the WFS driver as OGR fields for example to use them in SQL
> > expressions?
>
> Hi Tamas,
>
> If your need is to filter on the server, then you'll need to compose the
> full
> URL at hand.
> If you want to post-filter, you can downloader the GetFeature request and
> open
> the GML file with the DOWNLOAD_SCHEMA=NO open option (or
> GML_DOWNLOAD_WFS_SCHEMA=NO configuration option)
> This will prevent the GML driver from trying to use the schema, and then it
> will discover the gml:name element.
>
> OGRFeature(okcounties):155
>   gml_id (String) = okcounties.155
>   name (String) = BEAVER
>   state (Integer) = 40
>   county (Integer) = 7
>   stateplane (String) = N
>   MULTIPOLYGON (((-100.945566 ....)))
>
> The XSD parser used by the WFS and GML drivers could also possibly be
> modified
> to hard-code the definition of those few GML fields (although they might
> depend on the GML version).
>
>
> Otherwise you can also use the GMLAS driver, but the result will be a bit
> inconvenient to use as it will create a dedicated layer for the name
> attribute
> (as gml:name can be repeated):
>
> $ ogrinfo GMLAS:out.xml
> INFO: Open of `GMLAS:out.xml'
>       using driver `GMLAS' successful.
> 1: okcounties (Multi Surface)
> 2: okcounties_metadataproperty (None)
> 3: okcounties_name (None)
> 4: location (None)
>
> OGRFeature(okcounties):1
>   ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1
>   id (String) = okcounties.155
>   state (Integer64) = 40
>   county (Integer64) = 7
>   stateplane (String) = N
>   MULTIPOLYGON (((-100.945566....)))
>
> OGRFeature(okcounties_name):1
>   ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1_name_1
>   parent_ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1
>   value (String) = BEAVER
>
>
> Even
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/36adad6e/attachment.html>

From even.rouault at spatialys.com  Thu Oct 19 15:10:10 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 20 Oct 2017 00:10:10 +0200
Subject: [gdal-dev] Get WFS attributes form the gml namespace as OGR
	fields
In-Reply-To: <CACALY+QhrqtH3Q7tJn0G+1AMJG-uqdJ=Tmu453O_NnJMH=kf6g@mail.gmail.com>
References: <CACALY+R5Q_cSACMshsHDe84-qkG9-04th6vMY5JYQfmp4G5G0A@mail.gmail.com>
 <4193429.VVIeE486Qc@even-i700>
 <CACALY+QhrqtH3Q7tJn0G+1AMJG-uqdJ=Tmu453O_NnJMH=kf6g@mail.gmail.com>
Message-ID: <3952120.XUj66eOcG4@even-i700>

On jeudi 19 octobre 2017 23:56:29 CEST Tamas Szekeres wrote:
> It looks like DOWNLOAD_SCHEMA=NO would do the trick, but if I use this in a
> VRT file this way it crashes GDAL.

Just fixed the crash (related to the HTTP driver and GDAL_OF_SHARED open flag)

You can also prefix the URL with /vsicurl_streaming/ to avoid full ingestion 
into memory

> 
> <OGRVRTDataSource>
>     <OGRVRTLayer name="OKCounties">
>         <SrcDataSource>
> http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&amp;REQUES
> T=GetFeature&amp;TYPENAME=ogi:okcounties&amp;SRSNAME=EPSG:900913
> </SrcDataSource>
>         <OpenOptions>
>             <OOI key="DOWNLOAD_SCHEMA">NO</OOI>
>         </OpenOptions>
>         <LayerSRS>EPSG:900913</LayerSRS>
>         <SrcSQL>SELECT *,
> 'BRUSH(fc:#00000000);PEN(c:#008000,w:3px);LABEL(f:"Arial",c:#008000,s:14px,t
> :{name})' as OGR_STYLE from "okcounties"</SrcSQL>
>     </OGRVRTLayer>
> </OGRVRTDataSource>
> 
> 2017-10-19 23:18 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> > On jeudi 19 octobre 2017 22:55:50 CEST Tamas Szekeres wrote:
> > > Hi all,
> > > 
> > > It looks like whenever we have a dataset (shapefile,db table,etc...)
> > 
> > which
> > 
> > > has a
> > > column with such names like "description", "name", "location" GeoServer
> > > maps it to the elements in the gml namespace (in a 1.1 request),
> > > therefore DescribeFeatureType doesn't contain these attributes.
> > > 
> > > For example this response doesn't include the name attribute
> > > 
> > > http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&
> > 
> > SERVICE=WF
> > 
> > > S&REQUEST=DescribeFeatureType&TYPENAME=ogi:okcounties
> > > 
> > > However that attribute is returned in the GetFeature request in the
> > > gml:name section, like:
> > > 
> > > http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&
> > 
> > REQUEST=Ge
> > 
> > > tFeature&TYPENAME=ogi:okcounties
> > > 
> > > But as the result of this behaviour the WFS driver doesn't include this
> > > item in the layer definition. Is that possible to retrieve these
> > 
> > attributes
> > 
> > > from the WFS driver as OGR fields for example to use them in SQL
> > > expressions?
> > 
> > Hi Tamas,
> > 
> > If your need is to filter on the server, then you'll need to compose the
> > full
> > URL at hand.
> > If you want to post-filter, you can downloader the GetFeature request and
> > open
> > the GML file with the DOWNLOAD_SCHEMA=NO open option (or
> > GML_DOWNLOAD_WFS_SCHEMA=NO configuration option)
> > This will prevent the GML driver from trying to use the schema, and then
> > it
> > will discover the gml:name element.
> > 
> > OGRFeature(okcounties):155
> > 
> >   gml_id (String) = okcounties.155
> >   name (String) = BEAVER
> >   state (Integer) = 40
> >   county (Integer) = 7
> >   stateplane (String) = N
> >   MULTIPOLYGON (((-100.945566 ....)))
> > 
> > The XSD parser used by the WFS and GML drivers could also possibly be
> > modified
> > to hard-code the definition of those few GML fields (although they might
> > depend on the GML version).
> > 
> > 
> > Otherwise you can also use the GMLAS driver, but the result will be a bit
> > inconvenient to use as it will create a dedicated layer for the name
> > attribute
> > (as gml:name can be repeated):
> > 
> > $ ogrinfo GMLAS:out.xml
> > INFO: Open of `GMLAS:out.xml'
> > 
> >       using driver `GMLAS' successful.
> > 
> > 1: okcounties (Multi Surface)
> > 2: okcounties_metadataproperty (None)
> > 3: okcounties_name (None)
> > 4: location (None)
> > 
> > OGRFeature(okcounties):1
> > 
> >   ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1
> >   id (String) = okcounties.155
> >   state (Integer64) = 40
> >   county (Integer64) = 7
> >   stateplane (String) = N
> >   MULTIPOLYGON (((-100.945566....)))
> > 
> > OGRFeature(okcounties_name):1
> > 
> >   ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1_name_1
> >   parent_ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1
> >   value (String) = BEAVER
> > 
> > Even
> > 
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From robertofig85 at gmail.com  Thu Oct 19 16:15:24 2017
From: robertofig85 at gmail.com (Roberto Ribeiro)
Date: Thu, 19 Oct 2017 21:15:24 -0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
 <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>
Message-ID: <CANTZQ+yu9D=F2Yno5OSb1g+LvkTSSVuaQEORC=mBvPqFLGC-ug@mail.gmail.com>

I too have run into this problem in the past, though I believe, if you are
to use gdal_contour you have access to the underlying DEM/TIN/LAS, and if
you have that it's much easier just converting it directly to polygons
(using the technique Jamie posted, or similar ones). It could be a
gdal_contour flag if it makes sense to group it this way (contour lines and
hypsometry maps are closely related, after all), but it makes more sense to
me that it be its own routine.

Turning contour lines into contour polygons is surprisingly difficult, I
found. Closing the polygons is the easy part, but knowing which polygon to
assign which value is considerably trickier, because a polygon ill have
part of its boundary representing one value, and part representing another.
If you have a natively closed polygon with no inner ring, you can start
from there and assign to the polygon its outer boundary's values, then
proceed to the smallest polygon that completely encloses the previous one,
and so on. But it's quite possible you'll have no natively closed loops in
your AoI, most noticeably when doing high resolution work. You can pick a
line at random and do an R-tree search for the closest value, but that can
be pretty heavy if you have a lot of lines (and if you have break lines it
completely throws a wrench at your process). Thinking about it now, it
might work to assign the value during polygon creation time
, but that would mean writing a custom polygonize function. But it might
work.

I've always been curious about it (given that I tried doing it once, but
resorted to the raster approach), does anyone know of an algorithm for this?

2017-10-19 15:57 GMT-02:00 Jamie Adams <jaadfoo at gmail.com>:

> From a user perspective, this can be done pretty easily using gdal_calc.py
> & gdal_polygonize.py. I've used this technique in the past several times.
> This doesn't help with gdal_contour of course, but is a viable way of doing
> the same thing. Maybe worth considering as a new python tool.
>
> Using a random SRTM tile in bash:
>
> for iso in 800 1000 1200 1400 1600
> do
> gdal_calc.py --NoDataValue=0 -A N22E005.tif --calc="A>${iso}" --outfile
> ${iso}.tif
> gdal_polygonize.py -f "ESRI Shapefile" ${iso}.tif ${iso}.shp
> done
>
> On Thu, Oct 19, 2017 at 5:47 AM, Vincent Mora <vincent.mora at oslandia.com>
> wrote:
>
>> Hi Gregers,
>>
>> Thanks for your reply.
>>
>> The question was not "how to" yet, but "shall I" ;o)
>>
>> I think I did something similar to the "ends matching" in a python
>> script that creates those polygons (in a particular context that also
>> requires tiling).
>>
>> What I'd like to know, is if there is a reason why it's not already
>> available in gdal, since there is the need for that and apparently algos
>> to reach the goal.
>>
>> > You cannot always make polygons with them unless you are on a perfect
>> island
>>
>> I'm not sure I understand the that. The polygons I have in mind are
>> polygons with holes (multipolygons for a given class actually), is it
>> related to what you're saying ?
>>
>>
>> V.
>>
>>
>> Le 19/10/2017 à 14:23, Hans Gregers Hedegaard Petersen a écrit :
>> > Hi Vincent,
>> >
>> >> I know this is old stuff (references below), but making polygons
>> instead
>> >> of lines would be a great option for gdal_contour IMO.
>> >>
>> >> It could be also another program included in gdal/app (if it is
>> already,
>> >> I can't find it).
>> >>
>> >> What do you think, shall I add that ? If yes, first or second option ?
>> > I had a similar problem years ago, and after making consistent
>> > orientation [1] it is simply a matter of running through the lines and
>> > matching starting points with endpoints in the linestrings.  This is a
>> > rather fast operation on a spatially indexed dataset.
>> >
>> > You cannot always make polygons with them unless you are on a perfect
>> > island - for instance I processed Denmark in tiles (over 43000 tiles
>> > of 1x1km) and then "glued" the linestrings together afterwards. Speed
>> > was essential, so I first glued all linestrings in a tile (which would
>> > make a large number of closed linestrings), then between tiles (but
>> > only for those that were not yet closed).
>> >
>> >
>> > Cheers,
>> >
>> > Gregers
>> >
>> >
>> > [1]: https://trac.osgeo.org/gdal/ticket/3129
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171019/a226bd96/attachment-0001.html>

From gregers at septima.dk  Fri Oct 20 00:08:46 2017
From: gregers at septima.dk (Hans Gregers Hedegaard Petersen)
Date: Fri, 20 Oct 2017 09:08:46 +0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
Message-ID: <CAA+ACAnFL1E5OTh2w=UoNw8ik7-iY_91DzAbS6GcFGJFnGDoBA@mail.gmail.com>

> I think I did something similar to the "ends matching" in a python
> script that creates those polygons (in a particular context that also
> requires tiling).
>
> What I'd like to know, is if there is a reason why it's not already
> available in gdal, since there is the need for that and apparently algos
> to reach the goal.

That reason might be the use case - as indicated below and by Jamie.

>> You cannot always make polygons with them unless you are on a perfect
> island
>
> I'm not sure I understand the that. The polygons I have in mind are
> polygons with holes (multipolygons for a given class actually), is it
> related to what you're saying ?

The true isolines do not follow the edge of a tile. If you are on an
island you will have a natural boundary all around you DEM, and "all"
isolines should be closed (with the final isoline at sea level).

If all you are interested in is "this is above 5m" then you could -
and I would - simply use Jamies suggestion with gdal_calc and
gdal_polygonize. Closing the isolines had mostly to do with styling
and delivering as few linestrings as possible. The clientwould like to
be able to close them to polygons for easy access to areas. But if you
have the DEM yourself...


/Gregers

From szekerest at gmail.com  Fri Oct 20 01:15:44 2017
From: szekerest at gmail.com (Tamas Szekeres)
Date: Fri, 20 Oct 2017 10:15:44 +0200
Subject: [gdal-dev] Get WFS attributes form the gml namespace as OGR
	fields
In-Reply-To: <3952120.XUj66eOcG4@even-i700>
References: <CACALY+R5Q_cSACMshsHDe84-qkG9-04th6vMY5JYQfmp4G5G0A@mail.gmail.com>
 <4193429.VVIeE486Qc@even-i700>
 <CACALY+QhrqtH3Q7tJn0G+1AMJG-uqdJ=Tmu453O_NnJMH=kf6g@mail.gmail.com>
 <3952120.XUj66eOcG4@even-i700>
Message-ID: <CACALY+Q7C7cEjNSwO-puU6voPjPGW0qrD-hUPYzbH_cd1CmKig@mail.gmail.com>

Hi Even,

Thank you, that could indeed solve the problem.

Best regards,

Tamas


2017-10-20 0:10 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:

> On jeudi 19 octobre 2017 23:56:29 CEST Tamas Szekeres wrote:
> > It looks like DOWNLOAD_SCHEMA=NO would do the trick, but if I use this
> in a
> > VRT file this way it crashes GDAL.
>
> Just fixed the crash (related to the HTTP driver and GDAL_OF_SHARED open
> flag)
>
> You can also prefix the URL with /vsicurl_streaming/ to avoid full
> ingestion
> into memory
>
> >
> > <OGRVRTDataSource>
> >     <OGRVRTLayer name="OKCounties">
> >         <SrcDataSource>
> > http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&
> amp;REQUES
> > T=GetFeature&amp;TYPENAME=ogi:okcounties&amp;SRSNAME=EPSG:900913
> > </SrcDataSource>
> >         <OpenOptions>
> >             <OOI key="DOWNLOAD_SCHEMA">NO</OOI>
> >         </OpenOptions>
> >         <LayerSRS>EPSG:900913</LayerSRS>
> >         <SrcSQL>SELECT *,
> > 'BRUSH(fc:#00000000);PEN(c:#008000,w:3px);LABEL(f:"Arial",
> c:#008000,s:14px,t
> > :{name})' as OGR_STYLE from "okcounties"</SrcSQL>
> >     </OGRVRTLayer>
> > </OGRVRTDataSource>
> >
> > 2017-10-19 23:18 GMT+02:00 Even Rouault <even.rouault at spatialys.com>:
> > > On jeudi 19 octobre 2017 22:55:50 CEST Tamas Szekeres wrote:
> > > > Hi all,
> > > >
> > > > It looks like whenever we have a dataset (shapefile,db table,etc...)
> > >
> > > which
> > >
> > > > has a
> > > > column with such names like "description", "name", "location"
> GeoServer
> > > > maps it to the elements in the gml namespace (in a 1.1 request),
> > > > therefore DescribeFeatureType doesn't contain these attributes.
> > > >
> > > > For example this response doesn't include the name attribute
> > > >
> > > > http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&
> > >
> > > SERVICE=WF
> > >
> > > > S&REQUEST=DescribeFeatureType&TYPENAME=ogi:okcounties
> > > >
> > > > However that attribute is returned in the GetFeature request in the
> > > > gml:name section, like:
> > > >
> > > > http://cstest.coordinatesolutions.com/geoserver/wfs?VERSION=1.1.0&
> > >
> > > REQUEST=Ge
> > >
> > > > tFeature&TYPENAME=ogi:okcounties
> > > >
> > > > But as the result of this behaviour the WFS driver doesn't include
> this
> > > > item in the layer definition. Is that possible to retrieve these
> > >
> > > attributes
> > >
> > > > from the WFS driver as OGR fields for example to use them in SQL
> > > > expressions?
> > >
> > > Hi Tamas,
> > >
> > > If your need is to filter on the server, then you'll need to compose
> the
> > > full
> > > URL at hand.
> > > If you want to post-filter, you can downloader the GetFeature request
> and
> > > open
> > > the GML file with the DOWNLOAD_SCHEMA=NO open option (or
> > > GML_DOWNLOAD_WFS_SCHEMA=NO configuration option)
> > > This will prevent the GML driver from trying to use the schema, and
> then
> > > it
> > > will discover the gml:name element.
> > >
> > > OGRFeature(okcounties):155
> > >
> > >   gml_id (String) = okcounties.155
> > >   name (String) = BEAVER
> > >   state (Integer) = 40
> > >   county (Integer) = 7
> > >   stateplane (String) = N
> > >   MULTIPOLYGON (((-100.945566 ....)))
> > >
> > > The XSD parser used by the WFS and GML drivers could also possibly be
> > > modified
> > > to hard-code the definition of those few GML fields (although they
> might
> > > depend on the GML version).
> > >
> > >
> > > Otherwise you can also use the GMLAS driver, but the result will be a
> bit
> > > inconvenient to use as it will create a dedicated layer for the name
> > > attribute
> > > (as gml:name can be repeated):
> > >
> > > $ ogrinfo GMLAS:out.xml
> > > INFO: Open of `GMLAS:out.xml'
> > >
> > >       using driver `GMLAS' successful.
> > >
> > > 1: okcounties (Multi Surface)
> > > 2: okcounties_metadataproperty (None)
> > > 3: okcounties_name (None)
> > > 4: location (None)
> > >
> > > OGRFeature(okcounties):1
> > >
> > >   ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA34_okcounties_1
> > >   id (String) = okcounties.155
> > >   state (Integer64) = 40
> > >   county (Integer64) = 7
> > >   stateplane (String) = N
> > >   MULTIPOLYGON (((-100.945566....)))
> > >
> > > OGRFeature(okcounties_name):1
> > >
> > >   ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA
> 34_okcounties_1_name_1
> > >   parent_ogr_pkid (String) = 213FC01A8AA5FA1E1ADC65B21904DA
> 34_okcounties_1
> > >   value (String) = BEAVER
> > >
> > > Even
> > >
> > >
> > > --
> > > Spatialys - Geospatial professional services
> > > http://www.spatialys.com
>
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171020/ccf93d34/attachment.html>

From vincent.mora at oslandia.com  Fri Oct 20 10:33:12 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Fri, 20 Oct 2017 19:33:12 +0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <CANTZQ+yu9D=F2Yno5OSb1g+LvkTSSVuaQEORC=mBvPqFLGC-ug@mail.gmail.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
 <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>
 <CANTZQ+yu9D=F2Yno5OSb1g+LvkTSSVuaQEORC=mBvPqFLGC-ug@mail.gmail.com>
Message-ID: <fe24a40f-d702-888b-f20b-f2eeed5574d8@oslandia.com>

Hi all,

Thanks a lot for the feedback.

I have also resorted to polygonize (geos-polygonize) and ran into the
classification problem that you mention. There is also the issue of
performance if you have a lot of complex polygons, on a high res raster,
contours would take a couple of seconds, and geos-polygonize enought
time for me to Ctrl+C before the end.

At the time I needed to tile the problem anyway (split heigth classes
into smaller polygons such that the spatial index is usable, which is
not the case if you have huge polygons) so the classification issue was
the only problem I faced in the end.

I've started the work with the "easy" part: making properly oriented and
classified closed rings (see https://trac.osgeo.org/gdal/ticket/6526).

I'll also try the gdal_polygonize approach, but I don't think it's the
same thingl: with raster-classif + gdal_polygonize, if you have 3
classes 1,2,3 polygons from 1 can touch a polygon from 3, with contour
lines there will always be a polygon of class 2 in between.

Or am I missing something.

If someone believes I'm doing something useless and/or stupid (that also
happens), please do tell.

V.



Le 20/10/2017 à 01:15, Roberto Ribeiro a écrit :
> I too have run into this problem in the past, though I believe, if you
> are to use gdal_contour you have access to the underlying DEM/TIN/LAS,
> and if you have that it's much easier just converting it directly to
> polygons (using the technique Jamie posted, or similar ones). It could
> be a gdal_contour flag if it makes sense to group it this way (contour
> lines and hypsometry maps are closely related, after all), but it
> makes more sense to me that it be its own routine.
>
> Turning contour lines into contour polygons is surprisingly difficult,
> I found. Closing the polygons is the easy part, but knowing which
> polygon to assign which value is considerably trickier, because a
> polygon ill have part of its boundary representing one value, and part
> representing another. If you have a natively closed polygon with no
> inner ring, you can start from there and assign to the polygon its
> outer boundary's values, then proceed to the smallest polygon that
> completely encloses the previous one, and so on. But it's quite
> possible you'll have no natively closed loops in your AoI, most
> noticeably when doing high resolution work. You can pick a line at
> random and do an R-tree search for the closest value, but that can be
> pretty heavy if you have a lot of lines (and if you have break lines
> it completely throws a wrench at your process). Thinking about it now,
> it might work to assign the value during polygon creation time
> , but that would mean writing a custom polygonize function. But it
> might work.
>
> I've always been curious about it (given that I tried doing it once,
> but resorted to the raster approach), does anyone know of an algorithm
> for this?
>
> 2017-10-19 15:57 GMT-02:00 Jamie Adams <jaadfoo at gmail.com
> <mailto:jaadfoo at gmail.com>>:
>
>     From a user perspective, this can be done pretty easily using
>     gdal_calc.py & gdal_polygonize.py. I've used this technique in the
>     past several times. This doesn't help with gdal_contour of course,
>     but is a viable way of doing the same thing. Maybe worth
>     considering as a new python tool.
>
>     Using a random SRTM tile in bash:
>
>     for iso in 800 1000 1200 1400 1600
>     do 
>     gdal_calc.py --NoDataValue=0 -A N22E005.tif --calc="A>${iso}"
>     --outfile ${iso}.tif
>     gdal_polygonize.py -f "ESRI Shapefile" ${iso}.tif ${iso}.shp
>     done
>
>     On Thu, Oct 19, 2017 at 5:47 AM, Vincent Mora
>     <vincent.mora at oslandia.com <mailto:vincent.mora at oslandia.com>> wrote:
>
>         Hi Gregers,
>
>         Thanks for your reply.
>
>         The question was not "how to" yet, but "shall I" ;o)
>
>         I think I did something similar to the "ends matching" in a python
>         script that creates those polygons (in a particular context
>         that also
>         requires tiling).
>
>         What I'd like to know, is if there is a reason why it's not
>         already
>         available in gdal, since there is the need for that and
>         apparently algos
>         to reach the goal.
>
>         > You cannot always make polygons with them unless you are on
>         a perfect
>         island
>
>         I'm not sure I understand the that. The polygons I have in
>         mind are
>         polygons with holes (multipolygons for a given class
>         actually), is it
>         related to what you're saying ?
>
>
>         V.
>
>
>         Le 19/10/2017 à 14:23, Hans Gregers Hedegaard Petersen a écrit :
>         > Hi Vincent,
>         >
>         >> I know this is old stuff (references below), but making
>         polygons instead
>         >> of lines would be a great option for gdal_contour IMO.
>         >>
>         >> It could be also another program included in gdal/app (if
>         it is already,
>         >> I can't find it).
>         >>
>         >> What do you think, shall I add that ? If yes, first or
>         second option ?
>         > I had a similar problem years ago, and after making consistent
>         > orientation [1] it is simply a matter of running through the
>         lines and
>         > matching starting points with endpoints in the linestrings. 
>         This is a
>         > rather fast operation on a spatially indexed dataset.
>         >
>         > You cannot always make polygons with them unless you are on
>         a perfect
>         > island - for instance I processed Denmark in tiles (over
>         43000 tiles
>         > of 1x1km) and then "glued" the linestrings together
>         afterwards. Speed
>         > was essential, so I first glued all linestrings in a tile
>         (which would
>         > make a large number of closed linestrings), then between
>         tiles (but
>         > only for those that were not yet closed).
>         >
>         >
>         > Cheers,
>         >
>         > Gregers
>         >
>         >
>         > [1]: https://trac.osgeo.org/gdal/ticket/3129
>         <https://trac.osgeo.org/gdal/ticket/3129>
>
>
>         _______________________________________________
>         gdal-dev mailing list
>         gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>         <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
>
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171020/dcc754b4/attachment-0001.html>

From andrew at aitchison.me.uk  Fri Oct 20 11:18:41 2017
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Fri, 20 Oct 2017 19:18:41 +0100 (BST)
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <fe24a40f-d702-888b-f20b-f2eeed5574d8@oslandia.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
 <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>
 <CANTZQ+yu9D=F2Yno5OSb1g+LvkTSSVuaQEORC=mBvPqFLGC-ug@mail.gmail.com>
 <fe24a40f-d702-888b-f20b-f2eeed5574d8@oslandia.com>
Message-ID: <alpine.LRH.2.21.1710201900510.22513@warden.aitchison.me.uk>

On Fri, 20 Oct 2017, Vincent Mora wrote:

> I'll also try the gdal_polygonize approach, but I don't think it's the
> same thingl: with raster-classif + gdal_polygonize, if you have 3
> classes 1,2,3 polygons from 1 can touch a polygon from 3, with contour
> lines there will always be a polygon of class 2 in between.
>
> Or am I missing something.
>
> If someone believes I'm doing something useless and/or stupid (that also
> happens), please do tell.

Can you polygonize contours across a vertical cliff ?
If so, 2 may be "between" 1 and 3, but at some points they may all touch.

On some maps, contours become discontinuous around cliffs and quarries.

-- 
Andrew C Aitchison


From vincent.mora at oslandia.com  Sat Oct 21 01:23:39 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Sat, 21 Oct 2017 10:23:39 +0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <alpine.LRH.2.21.1710201900510.22513@warden.aitchison.me.uk>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
 <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>
 <CANTZQ+yu9D=F2Yno5OSb1g+LvkTSSVuaQEORC=mBvPqFLGC-ug@mail.gmail.com>
 <fe24a40f-d702-888b-f20b-f2eeed5574d8@oslandia.com>
 <alpine.LRH.2.21.1710201900510.22513@warden.aitchison.me.uk>
Message-ID: <3404f3b0-95e5-b99b-4678-799e5b912441@oslandia.com>



Le 20/10/2017 à 20:18, Andrew C Aitchison a écrit :
> On Fri, 20 Oct 2017, Vincent Mora wrote:
>
>> I'll also try the gdal_polygonize approach, but I don't think it's the
>> same thingl: with raster-classif + gdal_polygonize, if you have 3
>> classes 1,2,3 polygons from 1 can touch a polygon from 3, with contour
>> lines there will always be a polygon of class 2 in between.
>>
>> Or am I missing something.
>>
>> If someone believes I'm doing something useless and/or stupid (that also
>> happens), please do tell.
>
> Can you polygonize contours across a vertical cliff ?
> If so, 2 may be "between" 1 and 3, but at some points they may all touch.
>
> On some maps, contours become discontinuous around cliffs and quarries.
>
This is a mapper trick: the levelset algorithm will create line that are
very close to one another, but never touching (safe for numerical
precision).

The algorithm considers the raster grid as **continuous** field, so
vertical/overhanging cliffs cannot be modeled (you need 3D for that).

Those properties give us the opportunity to make some optimization, if
I'm note mistaken:
- any contour that closes on the border cannot be a hole, so you don't
need to check them, and in a lot of cases that's a lot of polygons, and
the big ones (I'm thinking contours for other values than altitude, like
temperature)
- for contours that don't close on border, if they are oriented
counterclockwise,they are holes, so the problem is to find which hole
belongs to which outer ring.

The later is not a fast algorithm in the general case. Especially with
elongated polygons that screw up spatial indexes. You need to do a point
in polygon for each hole point. But since we know that contour lines
never cross, then if one hole point is in the polygon, then the hole is
in the polygon.

I'm no sure you need to test for outer ring / outer ring inclusion (ring
islands), because the hole belongs to the smallest area outer ring that
includes one of its points. This makes me realize that the first
optimization I mentioned may not be useful if we need surface area.

I don't have all the details figured out, but I have good hope for an
efficient algorithm.

Cheers,

V.





From robertofig85 at gmail.com  Sun Oct 22 06:06:37 2017
From: robertofig85 at gmail.com (Roberto Ribeiro)
Date: Sun, 22 Oct 2017 11:06:37 -0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <alpine.LRH.2.21.1710201900510.22513@warden.aitchison.me.uk>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
 <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>
 <CANTZQ+yu9D=F2Yno5OSb1g+LvkTSSVuaQEORC=mBvPqFLGC-ug@mail.gmail.com>
 <fe24a40f-d702-888b-f20b-f2eeed5574d8@oslandia.com>
 <alpine.LRH.2.21.1710201900510.22513@warden.aitchison.me.uk>
Message-ID: <CANTZQ+x84PGWW8xjimjQo8X5QpamMSq-tOUxTbHJM8mA6S07=A@mail.gmail.com>

In cases of cliffs and such (i.e. sudden drops in altitude), traditional
photogrammetric softwares like PCI and Erdas work with break lines, as in,
you literally draw a line along edges you want computed discontinuously.
That is not really practical to do in command-line GDAL, though you could
import a previously created line vector and tell the algorithm to process
with those in mind.

2017-10-20 16:18 GMT-02:00 Andrew C Aitchison <andrew at aitchison.me.uk>:

> On Fri, 20 Oct 2017, Vincent Mora wrote:
>
> I'll also try the gdal_polygonize approach, but I don't think it's the
>> same thingl: with raster-classif + gdal_polygonize, if you have 3
>> classes 1,2,3 polygons from 1 can touch a polygon from 3, with contour
>> lines there will always be a polygon of class 2 in between.
>>
>> Or am I missing something.
>>
>> If someone believes I'm doing something useless and/or stupid (that also
>> happens), please do tell.
>>
>
> Can you polygonize contours across a vertical cliff ?
> If so, 2 may be "between" 1 and 3, but at some points they may all touch.
>
> On some maps, contours become discontinuous around cliffs and quarries.
>
> --
> Andrew C Aitchison
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171022/2f63c344/attachment.html>

From vincent.mora at oslandia.com  Sun Oct 22 08:40:28 2017
From: vincent.mora at oslandia.com (Vincent Mora)
Date: Sun, 22 Oct 2017 17:40:28 +0200
Subject: [gdal-dev] Countour polygons instead of lines
In-Reply-To: <CANTZQ+x84PGWW8xjimjQo8X5QpamMSq-tOUxTbHJM8mA6S07=A@mail.gmail.com>
References: <88110040-5480-cefa-07c2-2e4a21775bdf@oslandia.com>
 <CAA+ACAm4x-7Xn=G-yLoD6R7PC3XLeL4-rJZYXEzp_RjuGBkoOA@mail.gmail.com>
 <ead9567f-3f85-5006-f29d-3af33be84e4f@oslandia.com>
 <CAGJMTBf-9NR415+33aAzQ-b3y9AuwkEXhDmrNBdRhrV_uRA9HQ@mail.gmail.com>
 <CANTZQ+yu9D=F2Yno5OSb1g+LvkTSSVuaQEORC=mBvPqFLGC-ug@mail.gmail.com>
 <fe24a40f-d702-888b-f20b-f2eeed5574d8@oslandia.com>
 <alpine.LRH.2.21.1710201900510.22513@warden.aitchison.me.uk>
 <CANTZQ+x84PGWW8xjimjQo8X5QpamMSq-tOUxTbHJM8mA6S07=A@mail.gmail.com>
Message-ID: <1da2693c-7f68-ba74-b86a-e1349930468c@oslandia.com>

I think that this could also be done as post-processing step: collapsing
lines that are really close-by a discontinuity on the discontinuity (snap).

I was thinking about using the borders I introduced to close contours
(no data zones and raster edges) to handle those discontinuities, but I
don't think it will look good.

Another think I'd like to explore is contour simplification to avoid the
huge number of points caused by the marching squares. I'm well aware of
the complexity of the problem, but it's an interesting one ;-)


Le 22/10/2017 à 15:06, Roberto Ribeiro a écrit :
> In cases of cliffs and such (i.e. sudden drops in altitude),
> traditional photogrammetric softwares like PCI and Erdas work with
> break lines, as in, you literally draw a line along edges you want
> computed discontinuously. That is not really practical to do in
> command-line GDAL, though you could import a previously created line
> vector and tell the algorithm to process with those in mind.
>
> 2017-10-20 16:18 GMT-02:00 Andrew C Aitchison <andrew at aitchison.me.uk
> <mailto:andrew at aitchison.me.uk>>:
>
>     On Fri, 20 Oct 2017, Vincent Mora wrote:
>
>         I'll also try the gdal_polygonize approach, but I don't think
>         it's the
>         same thingl: with raster-classif + gdal_polygonize, if you have 3
>         classes 1,2,3 polygons from 1 can touch a polygon from 3, with
>         contour
>         lines there will always be a polygon of class 2 in between.
>
>         Or am I missing something.
>
>         If someone believes I'm doing something useless and/or stupid
>         (that also
>         happens), please do tell.
>
>
>     Can you polygonize contours across a vertical cliff ?
>     If so, 2 may be "between" 1 and 3, but at some points they may all
>     touch.
>
>     On some maps, contours become discontinuous around cliffs and
>     quarries.
>
>     -- 
>     Andrew C Aitchison
>
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171022/82d94aa2/attachment.html>

From ari.jolma at gmail.com  Sun Oct 22 23:52:20 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 23 Oct 2017 09:52:20 +0300
Subject: [gdal-dev] WCS driver
Message-ID: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>

It seems to me that the WCS driver could benefit from some love.

Is anybody working on it / planning to work on it?

I think simply a support for

gdalinfo WCS:...

to get a list of offered coverages would be useful to start with.

Ari



From bontepaarden at gmail.com  Mon Oct 23 03:16:24 2017
From: bontepaarden at gmail.com (Paul Meems)
Date: Mon, 23 Oct 2017 12:16:24 +0200
Subject: [gdal-dev] Using OpenEx() in C# with CSV file
Message-ID: <CAHNf2YSBb1-r_wCEia2jDZLdWnvtzUNbHz=UETxnRKc32VCk0w@mail.gmail.com>

Hi List,

I'm trying to read all fields in a CSV file.
Using this command it is working:
ogrinfo -ro -al -so test.csv -oo X_POSSIBLE_NAMES=Lon* -oo
Y_POSSIBLE_NAMES=Lat* -oo KEEP_GEOM_COLUMNS=NO

Now I need to do this in my C# application.
Because I need to send -00 (open options) I cannot use Ogr.Open(), but I
should use Gdal.OpenEx(), right?
OpenEx returns a Dataset, which I somehow need to convert to an
ogr datasource so I can use GetLayerByIndex(), GetFieldCount()
and GetFieldDefn() but I can't get it to work.

Looking at numerous Python example it seems in Python no conversion is
needed.
This is my C# code:
var openOptions = new[]
{
    "X_POSSIBLE_NAMES", "Lon*",
    "Y_POSSIBLE_NAMES", "Lat*",
    "KEEP_GEOM_COLUMNS", "NO"
};
using (var ds = Gdal.OpenEx(input, 4, null, openOptions, null))
{
    if (ds == null)
    {
        throw new Exception("Can't open OGR dataset: " + input);
    }
    // var layer = ds.GetLayerByIndex(0); <----- COMPILE ERROR
}

Any help is much appreciated.

Thanks,

Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171023/23246f73/attachment.html>

From even.rouault at spatialys.com  Mon Oct 23 03:19:18 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 23 Oct 2017 12:19:18 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
Message-ID: <10706047.0vAq8ZVGjg@even-i700>

Hi Ari,

> It seems to me that the WCS driver could benefit from some love.

That would be a good initiative!

In the wished feature list, I could add:

* improve test coverage, which is really low currently:
https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
One issue we have for testing is the lack of stable & reliable servers.
One potential way of addressing this is to use a local HTTP server, like I did recently with the /vsis3/ (and similar)
subsystems, where you can add stub endpoints. An extra advantage is that you can also easily test error situations.
See
- example of server start and end
	https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
      https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
- example of installation of HTTP answers to expected requests:
       https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258

* WCS 2.0 support


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ari.jolma at gmail.com  Mon Oct 23 05:39:11 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 23 Oct 2017 15:39:11 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <10706047.0vAq8ZVGjg@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
Message-ID: <6ae62c76-b380-a657-d525-f14f017146f4@gmail.com>

Even Rouault kirjoitti 23.10.2017 klo 13:19:
> Hi Ari,
>
>> It seems to me that the WCS driver could benefit from some love.
> That would be a good initiative!

I could begin with the gdalinfo WCS:... to list the subdatasets. I guess 
that's enough for some time.

>
> In the wished feature list, I could add:
>
> * improve test coverage, which is really low currently:
> https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
> One issue we have for testing is the lack of stable & reliable servers.
> One potential way of addressing this is to use a local HTTP server, like I did recently with the /vsis3/ (and similar)
> subsystems, where you can add stub endpoints. An extra advantage is that you can also easily test error situations.
> See
> - example of server start and end
> 	https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
>        https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
> - example of installation of HTTP answers to expected requests:
>         https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258

I think the way to go is to use local server with hand-made response 
variations and that looks like the needed infrastructure.

>
> * WCS 2.0 support
>
>
> Even
>

Ari


From jukka.rahkonen at maanmittauslaitos.fi  Mon Oct 23 07:23:45 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Mon, 23 Oct 2017 07:23:45 -0700 (MST)
Subject: [gdal-dev] WCS driver
In-Reply-To: <6ae62c76-b380-a657-d525-f14f017146f4@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <6ae62c76-b380-a657-d525-f14f017146f4@gmail.com>
Message-ID: <1508768625327-0.post@n6.nabble.com>

Ari Jolma-2 wrote
> I could begin with the gdalinfo WCS:... to list the subdatasets. I guess 
> that's enough for some time.

My personal opinion is that developing anything for WCS 1.x versions is
waste of time. WCS 2.x is much better standard and it is quite a lot
different than 1.x.

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From p.baumann at jacobs-university.de  Mon Oct 23 08:01:48 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Mon, 23 Oct 2017 17:01:48 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <10706047.0vAq8ZVGjg@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
Message-ID: <3814bccd-4693-e6e5-7069-6e43b1f6a597@jacobs-university.de>

Hi all,

splendid idea! Anybody who feels like working on WCS 2 support, feel free to
contact me or my group for any sort of explanations sought (I am the spec writer
of the coverages, admittedly). Note that the Coverage Implementation Schema
(CIS) 1.1 is out.  Maybe this is a good starter:
http://external.opengeospatial.org/twiki_public/CoveragesDWG/WebHome . I' be
most happy to see GDAL WCS2-enabled!

cheers,
Peter


On 10/23/2017 12:19 PM, Even Rouault wrote:
> Hi Ari,
>
>> It seems to me that the WCS driver could benefit from some love.
> That would be a good initiative!
>
> In the wished feature list, I could add:
>
> * improve test coverage, which is really low currently:
> https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
> One issue we have for testing is the lack of stable & reliable servers.
> One potential way of addressing this is to use a local HTTP server, like I did recently with the /vsis3/ (and similar)
> subsystems, where you can add stub endpoints. An extra advantage is that you can also easily test error situations.
> See
> - example of server start and end
> 	https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
>       https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
> - example of installation of HTTP answers to expected requests:
>        https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258
>
> * WCS 2.0 support
>
>
> Even
>

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)



From ari.jolma at gmail.com  Mon Oct 23 08:20:10 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 23 Oct 2017 18:20:10 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <1508768625327-0.post@n6.nabble.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <6ae62c76-b380-a657-d525-f14f017146f4@gmail.com>
 <1508768625327-0.post@n6.nabble.com>
Message-ID: <68c4db51-63ae-d81d-3d74-8143fe139687@gmail.com>

jratike80 kirjoitti 23.10.2017 klo 17:23:
> Ari Jolma-2 wrote
>> I could begin with the gdalinfo WCS:... to list the subdatasets. I guess
>> that's enough for some time.
> My personal opinion is that developing anything for WCS 1.x versions is
> waste of time. WCS 2.x is much better standard and it is quite a lot
> different than 1.x.

Are you saying that WCS 2 is too different from 1 to be developed into 
the same driver? I'm not familiar enough with the specs to judge that.

What prompted me into this matter was a need to develop a client for 
ArcGIS WCS server, which advertises only different versions of WCS 1. I 
see from ArcGIS server docs that it supports WCS 2.

Ari

>
> -Jukka Rahkonen-
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From ari.jolma at gmail.com  Mon Oct 23 08:31:58 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 23 Oct 2017 18:31:58 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <3814bccd-4693-e6e5-7069-6e43b1f6a597@jacobs-university.de>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <3814bccd-4693-e6e5-7069-6e43b1f6a597@jacobs-university.de>
Message-ID: <60e092c7-ebdf-9922-12b9-c5743b5e7380@gmail.com>



Peter Baumann kirjoitti 23.10.2017 klo 18:01:
> Hi all,
>
> splendid idea! Anybody who feels like working on WCS 2 support, feel free to
> contact me or my group for any sort of explanations sought (I am the spec writer
> of the coverages, admittedly). Note that the Coverage Implementation Schema
> (CIS) 1.1 is out.  Maybe this is a good starter:
> http://external.opengeospatial.org/twiki_public/CoveragesDWG/WebHome .

"universe of optional extensions"

sounds like a fun software development project :)

In short, how well do you see WCS 2 / the coverage model fits GDAL data 
model? It's not just raster anymore, right?

I guess the basic question is that do you think the existing WCS driver 
is not an appropriate starting point?

In any case I don't have at this point any real funding / time for this 
so I'd start incrementally and just reading the capabilities response 
for coverage list is enough. But, I see the importance.

Ari

>   I' be
> most happy to see GDAL WCS2-enabled!
>
> cheers,
> Peter
>
>
> On 10/23/2017 12:19 PM, Even Rouault wrote:
>> Hi Ari,
>>
>>> It seems to me that the WCS driver could benefit from some love.
>> That would be a good initiative!
>>
>> In the wished feature list, I could add:
>>
>> * improve test coverage, which is really low currently:
>> https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
>> One issue we have for testing is the lack of stable & reliable servers.
>> One potential way of addressing this is to use a local HTTP server, like I did recently with the /vsis3/ (and similar)
>> subsystems, where you can add stub endpoints. An extra advantage is that you can also easily test error situations.
>> See
>> - example of server start and end
>> 	https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
>>        https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
>> - example of installation of HTTP answers to expected requests:
>>         https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258
>>
>> * WCS 2.0 support
>>
>>
>> Even
>>


From p.baumann at jacobs-university.de  Mon Oct 23 11:41:57 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Mon, 23 Oct 2017 20:41:57 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <1508768625327-0.post@n6.nabble.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <6ae62c76-b380-a657-d525-f14f017146f4@gmail.com>
 <1508768625327-0.post@n6.nabble.com>
Message-ID: <b750bb0b-c487-5c22-2fff-bcb75e4a9e70@jacobs-university.de>



On 10/23/2017 04:23 PM, jratike80 wrote:
> Ari Jolma-2 wrote
>> I could begin with the gdalinfo WCS:... to list the subdatasets. I guess 
>> that's enough for some time.
> My personal opinion is that developing anything for WCS 1.x versions is
> waste of time. WCS 2.x is much better standard and it is quite a lot
> different than 1.x.
>
> -Jukka Rahkonen-
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

yes. major version change means: incompatibilities can be expected. Actually,
WCS 1 and 2 _are_ incompatibly different. WCS 1 essentially dates back to ~2000,
a lot of lessons have been learnt since then.
-Peter



-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)



From p.baumann at jacobs-university.de  Mon Oct 23 11:45:26 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Mon, 23 Oct 2017 20:45:26 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <68c4db51-63ae-d81d-3d74-8143fe139687@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <6ae62c76-b380-a657-d525-f14f017146f4@gmail.com>
 <1508768625327-0.post@n6.nabble.com>
 <68c4db51-63ae-d81d-3d74-8143fe139687@gmail.com>
Message-ID: <abcda6f1-ea68-e7af-d47e-a5d0233cf5c8@jacobs-university.de>



On 10/23/2017 05:20 PM, Ari Jolma wrote:
> jratike80 kirjoitti 23.10.2017 klo 17:23:
>> Ari Jolma-2 wrote
>>> I could begin with the gdalinfo WCS:... to list the subdatasets. I guess
>>> that's enough for some time.
>> My personal opinion is that developing anything for WCS 1.x versions is
>> waste of time. WCS 2.x is much better standard and it is quite a lot
>> different than 1.x.
>
> Are you saying that WCS 2 is too different from 1 to be developed into the
> same driver? I'm not familiar enough with the specs to judge that.

I do not know the driver code. Maybe code can be reused, but it should be
inspected carefully whether it adheres to the WCS 2 semantics.

If you need to test code: use the OGC compliance test suite.
If you need to explore & learn WCS: look at http://standards.rasdaman.com, this
is a small 1D ... 5D demo site. And see the tutorials collection on
www.earthserver.eu/webinars .

>
> What prompted me into this matter was a need to develop a client for ArcGIS
> WCS server, which advertises only different versions of WCS 1. I see from
> ArcGIS server docs that it supports WCS 2.

Starting 10.3, ESRI supports WCS 2.
If you are looking for clients: we are using WCS 2 through OpenLayers, Leaflet,
QGIS, NASA WorldWind, and several more. Should the clients not yet support it
natively let us know, we have the code (likely just not yet propagated into
these projects).

-Peter

>
> Ari
>
>>
>> -Jukka Rahkonen-
>>
>>
>>
>> -- 
>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)



From even.rouault at spatialys.com  Mon Oct 23 11:47:32 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 23 Oct 2017 20:47:32 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <60e092c7-ebdf-9922-12b9-c5743b5e7380@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <3814bccd-4693-e6e5-7069-6e43b1f6a597@jacobs-university.de>
 <60e092c7-ebdf-9922-12b9-c5743b5e7380@gmail.com>
Message-ID: <2419720.35R8Viu7ds@even-i700>

On lundi 23 octobre 2017 18:31:58 CEST Ari Jolma wrote:
> Peter Baumann kirjoitti 23.10.2017 klo 18:01:
> > Hi all,
> > 
> > splendid idea! Anybody who feels like working on WCS 2 support, feel free
> > to contact me or my group for any sort of explanations sought (I am the
> > spec writer of the coverages, admittedly). Note that the Coverage
> > Implementation Schema (CIS) 1.1 is out.  Maybe this is a good starter:
> > http://external.opengeospatial.org/twiki_public/CoveragesDWG/WebHome .
> 
> "universe of optional extensions"
> 
> sounds like a fun software development project :)
> 
> In short, how well do you see WCS 2 / the coverage model fits GDAL data
> model? It's not just raster anymore, right?

You can certainly expose traditional 2D rasters with WCS 2. This is what 
MapServer does for example. If you want to deal with higher dimension 
coverages too, you'd probably have to use the subdataset concept of GDAL (if 
there are not too many values on the other axis) or require the user to set 
the values of the n > 2 dimensions. This was already the case in the current 
driver with the time dimension.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From p.baumann at jacobs-university.de  Mon Oct 23 11:48:05 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Mon, 23 Oct 2017 20:48:05 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <60e092c7-ebdf-9922-12b9-c5743b5e7380@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <3814bccd-4693-e6e5-7069-6e43b1f6a597@jacobs-university.de>
 <60e092c7-ebdf-9922-12b9-c5743b5e7380@gmail.com>
Message-ID: <87d81b7b-c5d6-0403-5bd2-c1d9caace00f@jacobs-university.de>



On 10/23/2017 05:31 PM, Ari Jolma wrote:
>
>
> Peter Baumann kirjoitti 23.10.2017 klo 18:01:
>> Hi all,
>>
>> splendid idea! Anybody who feels like working on WCS 2 support, feel free to
>> contact me or my group for any sort of explanations sought (I am the spec writer
>> of the coverages, admittedly). Note that the Coverage Implementation Schema
>> (CIS) 1.1 is out.  Maybe this is a good starter:
>> http://external.opengeospatial.org/twiki_public/CoveragesDWG/WebHome .
>
> "universe of optional extensions"
>
> sounds like a fun software development project :)

indeed - you can start with the Core (and even there specialize, cf CIS 1.1
conformance class modularization) and then can add support for extensions one by
one, whenever you feel like :)

>
> In short, how well do you see WCS 2 / the coverage model fits GDAL data model?
> It's not just raster anymore, right?

coverages are a strict superset of rasters, and they can be nD. But an
implementation does not need to support all cases.

>
> I guess the basic question is that do you think the existing WCS driver is not
> an appropriate starting point?

as said, I do not know the code, maybe it can be reused to some large part as
the WCS Core functionality in the end still is subsetting. But a careful check
for semantics (especially corner cases) is certainly appropriate.

>
> In any case I don't have at this point any real funding / time for this so I'd
> start incrementally and just reading the capabilities response for coverage
> list is enough. But, I see the importance.
>
> Ari
>
>>   I' be
>> most happy to see GDAL WCS2-enabled!
>>
>> cheers,
>> Peter
>>
>>
>> On 10/23/2017 12:19 PM, Even Rouault wrote:
>>> Hi Ari,
>>>
>>>> It seems to me that the WCS driver could benefit from some love.
>>> That would be a good initiative!
>>>
>>> In the wished feature list, I could add:
>>>
>>> * improve test coverage, which is really low currently:
>>> https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
>>>
>>> One issue we have for testing is the lack of stable & reliable servers.
>>> One potential way of addressing this is to use a local HTTP server, like I
>>> did recently with the /vsis3/ (and similar)
>>> subsystems, where you can add stub endpoints. An extra advantage is that you
>>> can also easily test error situations.
>>> See
>>> - example of server start and end
>>>     https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
>>>        https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
>>> - example of installation of HTTP answers to expected requests:
>>>         https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258
>>>
>>> * WCS 2.0 support
>>>
>>>
>>> Even
>>>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)



From ari.jolma at gmail.com  Tue Oct 24 00:00:56 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 24 Oct 2017 10:00:56 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <10706047.0vAq8ZVGjg@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
Message-ID: <ea00fbd6-d35d-7b29-de02-a75f48a857c2@gmail.com>

Even Rouault kirjoitti 23.10.2017 klo 13:19:
> Hi Ari,
>
>> It seems to me that the WCS driver could benefit from some love.
> That would be a good initiative!
>
> In the wished feature list, I could add:
>
> * improve test coverage, which is really low currently:
> https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
> One issue we have for testing is the lack of stable & reliable servers.
> One potential way of addressing this is to use a local HTTP server, like I did recently with the /vsis3/ (and similar)
> subsystems, where you can add stub endpoints. An extra advantage is that you can also easily test error situations.
> See
> - example of server start and end
> 	https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
>        https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
> - example of installation of HTTP answers to expected requests:
>         https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258
>
> * WCS 2.0 support

Is there any reason not to switch to libxml2 from minixml?

I see only GMLAS driver uses libxml2 currently, and maybe OGR VRT.

Ari

>
>
> Even
>


From even.rouault at spatialys.com  Tue Oct 24 02:45:30 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 24 Oct 2017 11:45:30 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <ea00fbd6-d35d-7b29-de02-a75f48a857c2@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <ea00fbd6-d35d-7b29-de02-a75f48a857c2@gmail.com>
Message-ID: <3815862.ekviXIZPzv@even-i700>

> Is there any reason not to switch to libxml2 from minixml?
> 
> I see only GMLAS driver uses libxml2 currently

Ah, yes indirectly when it validates the data/gmlasconf.xml file against data/gmlasconf.xsd, 
since CPLValidateXML() uses libxml2 underneath to do that (it could actually have an 
alternate implementation using Xerces-C validation functionnalities.)

> , and maybe OGR VRT.

Same thing, OGR VRT, optionnaly, uses libxml2 to validate the .vrt file against its schema.

But minixml functionnality should be enough for WCS purposes, and libxml2 and Xerces-C 
remain optional dependencies.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/0cf4367d/attachment.html>

From edzer.pebesma at uni-muenster.de  Tue Oct 24 03:08:22 2017
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Tue, 24 Oct 2017 12:08:22 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <2419720.35R8Viu7ds@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <3814bccd-4693-e6e5-7069-6e43b1f6a597@jacobs-university.de>
 <60e092c7-ebdf-9922-12b9-c5743b5e7380@gmail.com>
 <2419720.35R8Viu7ds@even-i700>
Message-ID: <0a452d5f-e010-7b1f-cf70-618edf0c8c94@uni-muenster.de>



On 10/23/2017 08:47 PM, Even Rouault wrote:
> On lundi 23 octobre 2017 18:31:58 CEST Ari Jolma wrote:
>> Peter Baumann kirjoitti 23.10.2017 klo 18:01:
>>> Hi all,
>>>
>>> splendid idea! Anybody who feels like working on WCS 2 support, feel free
>>> to contact me or my group for any sort of explanations sought (I am the
>>> spec writer of the coverages, admittedly). Note that the Coverage
>>> Implementation Schema (CIS) 1.1 is out.  Maybe this is a good starter:
>>> http://external.opengeospatial.org/twiki_public/CoveragesDWG/WebHome .
>>
>> "universe of optional extensions"
>>
>> sounds like a fun software development project :)
>>
>> In short, how well do you see WCS 2 / the coverage model fits GDAL data
>> model? It's not just raster anymore, right?
> 
> You can certainly expose traditional 2D rasters with WCS 2. This is what 
> MapServer does for example. If you want to deal with higher dimension 
> coverages too, you'd probably have to use the subdataset concept of GDAL (if 
> there are not too many values on the other axis) or require the user to set 
> the values of the n > 2 dimensions. This was already the case in the current 
> driver with the time dimension.

The netcdf files I looked at through the GDAL driver had time and/or
depth offered as different gdal layers, and offered different variables
(i.e. different coverages) as subdatasets.

Which other GDAL drivers give direct access to time-varying raster
stacks in single files?

> 
> Even
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

From even.rouault at spatialys.com  Tue Oct 24 03:28:44 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 24 Oct 2017 12:28:44 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <0a452d5f-e010-7b1f-cf70-618edf0c8c94@uni-muenster.de>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <2419720.35R8Viu7ds@even-i700>
 <0a452d5f-e010-7b1f-cf70-618edf0c8c94@uni-muenster.de>
Message-ID: <1937599.9sUUdu34an@even-i700>

> The netcdf files I looked at through the GDAL driver had time and/or
> depth offered as different gdal layers, and offered different variables
> (i.e. different coverages) as subdatasets.

Yes, although in the WCS case, a coverage can have several bands, and thus using the band 
mechanism to reflect the N>2 dimensions can become confusing.

The only clean solution to that would be to have a true multidimensional raster support at 
the GDAL API level, but that's a rather involved effort.

> 
> Which other GDAL drivers give direct access to time-varying raster
> stacks in single files?

I guess HDF5, as it is really close to netCDF.

GRIB could potentially be used to have time-varying raster, although, from what I saw, 
generally you put instead different variables for the same forecast time in the same file. But 
technically you couldx just concatenate any amount of GRIB messages into a single file and 
this will be seen as a multi-band raster by GDAL.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/3b27708a/attachment.html>

From ari.jolma at gmail.com  Tue Oct 24 03:41:36 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 24 Oct 2017 13:41:36 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <1937599.9sUUdu34an@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <2419720.35R8Viu7ds@even-i700>
 <0a452d5f-e010-7b1f-cf70-618edf0c8c94@uni-muenster.de>
 <1937599.9sUUdu34an@even-i700>
Message-ID: <55794f5e-f768-981e-cf6d-3732e2621964@gmail.com>

Even Rouault kirjoitti 24.10.2017 klo 13:28:
>
> > The netcdf files I looked at through the GDAL driver had time and/or
>
> > depth offered as different gdal layers, and offered different variables
>
> > (i.e. different coverages) as subdatasets.
>
> Yes, although in the WCS case, a coverage can have several bands, and 
> thus using the band mechanism to reflect the N>2 dimensions can become 
> confusing.
>

Also in NetCDF the time dimension may be as bands - at least I have 
marine research data which opens first as having two subdatasets (mean 
and max wave height) and then as bands (the monthly values).


> The only clean solution to that would be to have a true 
> multidimensional raster support at the GDAL API level, but that's a 
> rather involved effort.
>

Above the division to subdatasets and bands seems arbitrary and perhaps 
not user controllable. I agree it would be useful to have a better data 
model in this respect.

Ari

> >
>
> > Which other GDAL drivers give direct access to time-varying raster
>
> > stacks in single files?
>
> I guess HDF5, as it is really close to netCDF.
>
> GRIB could potentially be used to have time-varying raster, although, 
> from what I saw, generally you put instead different variables for the 
> same forecast time in the same file. But technically you couldx just 
> concatenate any amount of GRIB messages into a single file and this 
> will be seen as a multi-band raster by GDAL.
>
> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/e85cfd1d/attachment-0001.html>

From ari.jolma at gmail.com  Tue Oct 24 07:07:51 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 24 Oct 2017 17:07:51 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <3815862.ekviXIZPzv@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <ea00fbd6-d35d-7b29-de02-a75f48a857c2@gmail.com>
 <3815862.ekviXIZPzv@even-i700>
Message-ID: <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>

Whoa! How hard can XML be? I have a real Capabilities document (from 
well known company) which defines *both* default and ows namespace to 
http://www.opengis.net/ows/2.0.

Thus, to be sure, I need to look for *both* ows:ServiceIdentification 
and ServiceIdentification. Or maybe loop through all elements and check 
for both at each element?

And additional spice is that in WCS 1.1.0 ServiceIdentification is in 
namespace http://www.opengis.net/wcs/1.1/ows. :)

Ari


Even Rouault kirjoitti 24.10.2017 klo 12:45:
>
> > Is there any reason not to switch to libxml2 from minixml?
>
> >
>
> > I see only GMLAS driver uses libxml2 currently
>
> Ah, yes indirectly when it validates the data/gmlasconf.xml file 
> against data/gmlasconf.xsd, since CPLValidateXML() uses libxml2 
> underneath to do that (it could actually have an alternate 
> implementation using Xerces-C validation functionnalities.)
>
> > , and maybe OGR VRT.
>
> Same thing, OGR VRT, optionnaly, uses libxml2 to validate the .vrt 
> file against its schema.
>
> But minixml functionnality should be enough for WCS purposes, and 
> libxml2 and Xerces-C remain optional dependencies.
>
> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/583cdf40/attachment.html>

From edzer.pebesma at uni-muenster.de  Tue Oct 24 07:16:43 2017
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Tue, 24 Oct 2017 16:16:43 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <55794f5e-f768-981e-cf6d-3732e2621964@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <2419720.35R8Viu7ds@even-i700>
 <0a452d5f-e010-7b1f-cf70-618edf0c8c94@uni-muenster.de>
 <1937599.9sUUdu34an@even-i700>
 <55794f5e-f768-981e-cf6d-3732e2621964@gmail.com>
Message-ID: <f0f3c1ea-f3c6-63e9-9d13-c9fbf8275644@uni-muenster.de>

I changed the subject, which was "WCS driver"; although it is still
relevant for the WCS driver, it's really about GDAL's abstraction.

On 10/24/2017 12:41 PM, Ari Jolma wrote:
> Even Rouault kirjoitti 24.10.2017 klo 13:28:
>>
>>  
>>
>> > The netcdf files I looked at through the GDAL driver had time and/or
>>
>> > depth offered as different gdal layers, and offered different variables
>>
>> > (i.e. different coverages) as subdatasets.
>>
>>  
>>
>> Yes, although in the WCS case, a coverage can have several bands, and
>> thus using the band mechanism to reflect the N>2 dimensions can become
>> confusing.
>>
> 
> Also in NetCDF the time dimension may be as bands - at least I have
> marine research data which opens first as having two subdatasets (mean
> and max wave height) and then as bands (the monthly values).

Yes, bands is what I meant; sorry for confusing this.

>>  
>>
>> The only clean solution to that would be to have a true
>> multidimensional raster support at the GDAL API level, but that's a
>> rather involved effort.
>>
> 
> Above the division to subdatasets and bands seems arbitrary and perhaps
> not user controllable. I agree it would be useful to have a better data
> model in this respect.

In my earlier email to this list [1] I suggested to allow querying bands
about their time, which would help deal with the case where a large set
of bands refers e.g. to both depth layers and time steps, in some order.

I too think that multidimensional raster support would be useful.
Besides by drastically redesigning data structures, could we get there
incrementally?

[1] https://lists.osgeo.org/pipermail/gdal-dev/2017-October/047381.html

> 
> Ari
> 
>>  
>>
>> >
>>
>> > Which other GDAL drivers give direct access to time-varying raster
>>
>> > stacks in single files?
>>
>>  
>>
>> I guess HDF5, as it is really close to netCDF.
>>
>>  
>>
>> GRIB could potentially be used to have time-varying raster, although,
>> from what I saw, generally you put instead different variables for the
>> same forecast time in the same file. But technically you couldx just
>> concatenate any amount of GRIB messages into a single file and this
>> will be seen as a multi-band raster by GDAL.
>>
>>  
>>
>> Even
>>
>>  
>>
>> -- 
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

From p.baumann at jacobs-university.de  Tue Oct 24 09:11:20 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Tue, 24 Oct 2017 18:11:20 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <ea00fbd6-d35d-7b29-de02-a75f48a857c2@gmail.com>
 <3815862.ekviXIZPzv@even-i700>
 <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
Message-ID: <9a8523dd-0d0a-5bb3-2b5b-82e8fa024a09@jacobs-university.de>

FWIW, OWS Common 2.0 is known to be flawed in several aspects (we spec writers
suffered dearly - from the resources it needed to discover, to finding
workarounds in the spec, to explaining to people...). Trust me, the namespace
issue is just a minor one in comparison... OGC is looking to get something
revised since 2 (?) years now, and until that will come we will have to live
with this situation, unfortunately and sometimes painfully.

just 2 cents,
Peter


On 10/24/2017 04:07 PM, Ari Jolma wrote:
>
> Whoa! How hard can XML be? I have a real Capabilities document (from well
> known company) which defines *both* default and ows namespace to
> http://www.opengis.net/ows/2.0.
>
> Thus, to be sure, I need to look for *both* ows:ServiceIdentification and
> ServiceIdentification. Or maybe loop through all elements and check for both
> at each element?
>
> And additional spice is that in WCS 1.1.0 ServiceIdentification is in
> namespace http://www.opengis.net/wcs/1.1/ows. :)
>
> Ari
>
>
> Even Rouault kirjoitti 24.10.2017 klo 12:45:
>>
>> > Is there any reason not to switch to libxml2 from minixml?
>>
>> >
>>
>> > I see only GMLAS driver uses libxml2 currently
>>
>>  
>>
>> Ah, yes indirectly when it validates the data/gmlasconf.xml file against
>> data/gmlasconf.xsd, since CPLValidateXML() uses libxml2 underneath to do that
>> (it could actually have an alternate implementation using Xerces-C validation
>> functionnalities.)
>>
>>  
>>
>> > , and maybe OGR VRT.
>>
>>  
>>
>> Same thing, OGR VRT, optionnaly, uses libxml2 to validate the .vrt file
>> against its schema.
>>
>>  
>>
>> But minixml functionnality should be enough for WCS purposes, and libxml2 and
>> Xerces-C remain optional dependencies.
>>
>>  
>>
>> Even
>>
>>  
>>
>>  
>>
>> -- 
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/8b4c10c1/attachment.html>

From even.rouault at spatialys.com  Tue Oct 24 10:23:53 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 24 Oct 2017 19:23:53 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <3815862.ekviXIZPzv@even-i700>
 <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
Message-ID: <21560891.RLOkF2piMS@even-i700>

On mardi 24 octobre 2017 17:07:51 CEST Ari Jolma wrote:
> Whoa! How hard can XML be? I have a real Capabilities document (from
> well known company) which defines *both* default and ows namespace to
> http://www.opengis.net/ows/2.0.
> 
> Thus, to be sure, I need to look for *both* ows:ServiceIdentification
> and ServiceIdentification. Or maybe loop through all elements and check
> for both at each element?

If there's no ambiguity with elements having same names in different 
namespaces, you can just strip namespace prefixes from elements with
CPLStripXMLNamespace(psRoot, NULL, true)

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/ab34497e/attachment-0001.html>

From hellik at web.de  Tue Oct 24 11:33:34 2017
From: hellik at web.de (Helmut Kudrnovsky)
Date: Tue, 24 Oct 2017 20:33:34 +0200
Subject: [gdal-dev] GDAL and ESRI Compact Cache
Message-ID: <trinity-9f016280-6ad4-47a3-865c-5d7e43758cbc-1508870014362@3c-app-webde-bs21>

hi,

just seen [1] that Austrian basemap (incl. orthofotos) is now offered as ESRI Compact Cache.

anyone any experience to read this format by GDAL?

kind regards
Helmut

[1] https://www.basemap.at/#offline

From even.rouault at spatialys.com  Tue Oct 24 12:13:51 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 24 Oct 2017 21:13:51 +0200
Subject: [gdal-dev] GDAL and ESRI Compact Cache
In-Reply-To: <trinity-9f016280-6ad4-47a3-865c-5d7e43758cbc-1508870014362@3c-app-webde-bs21>
References: <trinity-9f016280-6ad4-47a3-865c-5d7e43758cbc-1508870014362@3c-app-webde-bs21>
Message-ID: <1654705.DCq4IFflQb@even-i700>

On mardi 24 octobre 2017 20:33:34 CEST Helmut Kudrnovsky wrote:
>hi,
>
>just seen [1] that Austrian basemap (incl. orthofotos) is now offered as ESRI Compact Cache.
>
>anyone any experience to read this format by GDAL?
>
>kind regards
>Helmut
>
>[1] https://www.basemap.at/#offline

There's some high level documentation at
http://server.arcgis.com/en/server/10.3/publish-services/windows/inside-the-compact-cache-storage-format.htm
and more interesting technical description and code at
https://github.com/Esri/raster-tiles-compactcache

CC'ing Lucian as I see he has authored commits in this repository and can perhaps comment

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/aba0c8e7/attachment.html>

From lucianpls at yahoo.com  Tue Oct 24 16:17:11 2017
From: lucianpls at yahoo.com (Lucian Plesea)
Date: Tue, 24 Oct 2017 23:17:11 +0000 (UTC)
Subject: [gdal-dev] GDAL and ESRI Compact Cache
References: <1760942218.4111556.1508887031736.ref@mail.yahoo.com>
Message-ID: <1760942218.4111556.1508887031736@mail.yahoo.com>

Not the whole cache, but with some effort you can read each bundle as a single raster, as long as they are V2 compact bundles.

The simplest method is to use the WMS driver.  Counter intuitive, I know.
With a recent GDAL, this XML WMS file reads a bundle at level 17 from my disk, as a 32768x32768 raster.
The default CS and coordinates are for GCS, they would have to be overwritten in the XML, via the correct DataWindow node.

<GDAL_WMS>  <Service name="MRF" type="bundle">    <ServerUrl>file://C:/RioG2/_alllayers/L17/R12100Cc100.bundle</ServerUrl>
  </Service></GDAL_WMS>
Lucian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171024/cfec345b/attachment.html>

From ari.jolma at gmail.com  Wed Oct 25 00:21:47 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Wed, 25 Oct 2017 10:21:47 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <21560891.RLOkF2piMS@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <3815862.ekviXIZPzv@even-i700>
 <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
 <21560891.RLOkF2piMS@even-i700>
Message-ID: <030cd8ad-c85d-9fdf-d1fa-3e2517c27323@gmail.com>

Even Rouault kirjoitti 24.10.2017 klo 20:23:
>
> On mardi 24 octobre 2017 17:07:51 CEST Ari Jolma wrote:
>
> > Whoa! How hard can XML be? I have a real Capabilities document (from
>
> > well known company) which defines *both* default and ows namespace to
>
> > http://www.opengis.net/ows/2.0.
>
> >
>
> > Thus, to be sure, I need to look for *both* ows:ServiceIdentification
>
> > and ServiceIdentification. Or maybe loop through all elements and check
>
> > for both at each element?
>
> If there's no ambiguity with elements having same names in different 
> namespaces, you can just strip namespace prefixes from elements with
>
> CPLStripXMLNamespace(psRoot, NULL, true)
>

I implemented a solution, where the namespace prefixes is a list 
(CPLStringList). That is probably a general solution and actually quite 
simple.

Some fundamental thoughts on how to use the driver. The idea is to allow 
starting from a GetCapabilities request. The initial dataset name is thus

WCS:URL

where the URL may be without any parameters. We'll add service and 
request parameters but *not* version or acceptVersions since the server 
should return the latest supported version. The one I test with seems to 
return 1.1.2 and 2.0.1 only when requested. We'll leave it to user to 
add the version/acceptVersions. The user can also add updateSequence and 
other parameters. If the user adds coverage/identifiers/coverageId then 
we'll proceed directly to DescribeCoverage or further to GetCoverage if 
there are bounding boxes or such. DescribeCoverage is needed unless it 
is cached (see below) since it probably contains important metadata 
(nodata value, min and max values etc).

Errors are reported to the user - it is important to know whether the 
error is HTTP 404 or ExceptionReport InvalidParameterValue.

The driver currently honors some HTTP parameters such as timeout length, 
authorization etc. and they are in the service XML. How to forward them 
to the driver in the case of this simple dataset name case? Environment 
variables or somehow coded into the dataset name? (for example 
"WCS:x=y,URL=url" ?)

Also, it would be useful to cache at least the capabilities and coverage 
description. I have not yet thought much about that but using something 
like $HOME/.gdal/wcs_cache would be preferred I guess? Then there is the 
question how the user can control refreshing the cache - with options as 
above?

Ari

> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171025/b55fc202/attachment.html>

From hellik at web.de  Wed Oct 25 00:41:58 2017
From: hellik at web.de (Helmut Kudrnovsky)
Date: Wed, 25 Oct 2017 09:41:58 +0200
Subject: [gdal-dev] GDAL and ESRI Compact Cache
In-Reply-To: <1760942218.4111556.1508887031736@mail.yahoo.com>
References: <1760942218.4111556.1508887031736.ref@mail.yahoo.com>
 <1760942218.4111556.1508887031736@mail.yahoo.com>
Message-ID: <trinity-93dca4d9-37f4-4f0f-b91d-7d1ab82bab32-1508917318616@3c-app-webde-bap41>

>Gesendet: Mittwoch, 25. Oktober 2017 um 01:17 Uhr
>Von: "Lucian Plesea"
>Betreff: RE: GDAL and ESRI Compact Cache
>
>Not the whole cache, but with some effort you can read each bundle as a single raster, as long as they are V2 compact bundles.
> 
>The simplest method is to use the WMS driver.  Counter intuitive, I know.
>With a recent GDAL, this XML WMS file reads a bundle at level 17 from my disk, as a 32768x32768 raster.
>The default CS and coordinates are for GCS, they would have to be overwritten in the XML, via the correct DataWindow node.
> 
><GDAL_WMS>
>  <Service name="MRF" type="bundle">
>    <ServerUrl>file://C:/RioG2/_alllayers/L17/R12100Cc100.bundle</ServerUrl>
>  </Service>
></GDAL_WMS>
> 
>Lucian

thanks, I'll give it a try

Helmut

From even.rouault at spatialys.com  Wed Oct 25 04:01:42 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 25 Oct 2017 13:01:42 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
Message-ID: <2435502.MieFYiu8dg@even-i700>

Hi

(top posting to clearly mark the start of a new thread)

> I too think that multidimensional raster support would be useful.
> Besides by drastically redesigning data structures, could we get there
> incrementally?

One difficulty is that there are 154 raster drivers that use the current data structures.

2D is assumed in a number of base data structures. Non exhaustive list:

class GDALDataset:
	int nRasterXSize
	int nRasterYSize
	int GetRasterXSize()
	int GetRasterYSize()
	GetGeoTransform(double adfGT[6]) // read side
	SetGeoTransform(double adfGT[6]) // write side
	RasterIO(int nXOff, int nYOff, int nXSize, int nYSize, ... int nBufXSize, int 
nBufYSize, ...) + IRasterIO()
	[...]

class GDADriver
	Create( int nXSize, int nYSize, ... )

class GDALRasterBand
	int nRasterXSize
	int nRasterYSize
	int nBlockXSize
	int nBlockYSize
	int nBlocksPerRow
	int nBlocksPerColumn
	int GetXSize()
	int GetYSize()
	GetBlockSize(int* pnBlockXSize, int *pnBlockYSize)
	IReadBlock(int nBlockXOff, int nBlockYOff, ...)
	RasterIO() + IRasterIO()
	[...]

class GDALRasterBlock
    int                 nXOff;
    int                 nYOff;
    int                 nXSize;
    int                 nYSize;
    [...]

All GDAL algorithms and utilities assume 2D for subsetting, redimensionning, etc...

In a pure ND model, this would probably be something like:

class GDALDataset
	int nAxisCount
	char* apszAxisName[nAxisCount] // "X", "Y", "Z", "T", ...
	char* apszAxisUnit[nAxisCount] // "deg", "m", "secs since 1970-01-01T00:00:00Z", 
...
	int panAxisSize[nAxisCount]   // generalizes  nRasterXSize + nRasterYSize
	double padfOrigin[nAxisCount]  // generalizes adfGT[0] + adfGT[3]
	double papadfAxisVectors[nAxisCount][nAxisCount] // generalizes other 
coefficients of the geotransform
	IMultiDimRasterIO( const int* panWinOffsets, const size_t* panWinSizes, ...., 
const size_t* panBufSizes )

 (some members could actually be only present in the driver class extending GDALDataset. 
GDALDataset would only have getter and setter similarly to the above GetGeoTransform / 
SetGeoTransform )


And with that model, we only support regular grids and skewed and rotated grids, but with 
constant sampling space along each axis. Which might not be enough for the N > 2 'T' or 'Z' 
dimensions for which I can imagine sampling to be less frequently regular than on the 2D 
plane.
In netCDF, you can have support for irregular sampling since a variable is indexed by 
dimensions, and dimensions are generally associated with a 1D variable that describe the 
coordinate value for each sample point along the axis/dimension.

So a more general model would be:

class GDALDataset
	int nAxisCount
	char* apszAxisName[nAxisCount]
	char* apszAxisUnit[nAxisCount]
	int panAxisSize[nAxisCount]
	double papadfAxisCoordinates[nAxisCount][]  where the size of the 2nd 
dimension of this array is the value of panAxisSize[i]

(That would still not support fully irregular grids where basically each intersection of the grid 
should have a coordinate tuple, but we probably don't need to go to that complexity.)

Or perhaps put all axis related stuff in a dedicated class, and with a flag to indicate regular vs 
irregular spacing, so as to simplify some processing in the regular spacing case

class GDALGridAxis
	char* pszName
	char* pszUnit
	int nSize
	bool bRegularSpacing;
	double dfOrigin;  // if bRegularSpacing == true
	double adfVector[nAxisCount];  // if bRegularSpacing == true
	double adfAxisCoordinates[nSize]; // if bRegularSpacing == false


In a transition, we'd want:
	* all existing 2D functionnalities and public API to be preserved. And some rather 
mechanical way of converting existing driver code to the new internal API (helpers for the 2D 
case) since 2D only drivers are and will remain 95% of existing drivers.
	* addition of a restricted set of ND functionnalities. Among the potential 
restrictions for a first stage: read-only support, nearest neighbour resampling. Minimum 
functionnality needed:
	- ND read support in netCDF driver
	- A base GDALRasterBand::IMultiDimRasterIO() implementation, which requires 
the GDALRasterBlock / cache mechanism to support ND
	- We'd want some support for gdal_translate to be able to do coverage 
subsetting and slicing (you'd need to slice down to 2D if no drivers support ND output).
	- As the VRT format is the fundamental mechanics for any non trivial 
gdal_translate operation (any switch besides -of and -co goes through VRT internally), it 
would need to be updated to support ND.
	- C API and Python bindings should be updated.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171025/d87fc2b7/attachment-0001.html>

From ari.jolma at gmail.com  Wed Oct 25 04:42:54 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Wed, 25 Oct 2017 14:42:54 +0300
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <2435502.MieFYiu8dg@even-i700>
References: <2435502.MieFYiu8dg@even-i700>
Message-ID: <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>

I'd like to first know / decide what would we mean by a 
"multidimensional raster"?

What we now have as a raster is a dataset with one or more bands. The 
bands represent the data dimension and thus there is one of those 
(2D+1). Would we like to have more data dimensions? What Even sketches 
below is ND, but would we really want to have 2D + ND?

Also now there is no unit for the data dimension and the value is 
strictly increasing positive integer, would we like to have an explicit 
unit and arbitrary value (double, date, time, ...)?

Ari


Even Rouault kirjoitti 25.10.2017 klo 14:01:
>
> Hi
>
> (top posting to clearly mark the start of a new thread)
>
> > I too think that multidimensional raster support would be useful.
>
> > Besides by drastically redesigning data structures, could we get there
>
> > incrementally?
>
> One difficulty is that there are 154 raster drivers that use the 
> current data structures.
>
> 2D is assumed in a number of base data structures. Non exhaustive list:
>
> class GDALDataset:
>
> int nRasterXSize
>
> int nRasterYSize
>
> int GetRasterXSize()
>
> int GetRasterYSize()
>
> GetGeoTransform(double adfGT[6]) // read side
>
> SetGeoTransform(double adfGT[6]) // write side
>
> RasterIO(int nXOff, int nYOff, int nXSize, int nYSize, ... int 
> nBufXSize, int nBufYSize, ...) + IRasterIO()
>
> [...]
>
> class GDADriver
>
> Create( int nXSize, int nYSize, ... )
>
> class GDALRasterBand
>
> int nRasterXSize
>
> int nRasterYSize
>
> int nBlockXSize
>
> int nBlockYSize
>
> int nBlocksPerRow
>
> int nBlocksPerColumn
>
> int GetXSize()
>
> int GetYSize()
>
> GetBlockSize(int* pnBlockXSize, int *pnBlockYSize)
>
> IReadBlock(int nBlockXOff, int nBlockYOff, ...)
>
> RasterIO() + IRasterIO()
>
> [...]
>
> class GDALRasterBlock
>
> int nXOff;
>
> int nYOff;
>
> int nXSize;
>
> int nYSize;
>
> [...]
>
> All GDAL algorithms and utilities assume 2D for subsetting, 
> redimensionning, etc...
>
> In a pure ND model, this would probably be something like:
>
> class GDALDataset
>
> int nAxisCount
>
> char* apszAxisName[nAxisCount] // "X", "Y", "Z", "T", ...
>
> char* apszAxisUnit[nAxisCount] // "deg", "m", "secs since 
> 1970-01-01T00:00:00Z", ...
>
> int panAxisSize[nAxisCount] // generalizes nRasterXSize + nRasterYSize
>
> double padfOrigin[nAxisCount] // generalizes adfGT[0] + adfGT[3]
>
> double papadfAxisVectors[nAxisCount][nAxisCount] // generalizes other 
> coefficients of the geotransform
>
> IMultiDimRasterIO( const int* panWinOffsets, const size_t* 
> panWinSizes, ...., const size_t* panBufSizes )
>
> (some members could actually be only present in the driver class 
> extending GDALDataset. GDALDataset would only have getter and setter 
> similarly to the above GetGeoTransform / SetGeoTransform )
>
> And with that model, we only support regular grids and skewed and 
> rotated grids, but with constant sampling space along each axis. Which 
> might not be enough for the N > 2 'T' or 'Z' dimensions for which I 
> can imagine sampling to be less frequently regular than on the 2D plane.
>
> In netCDF, you can have support for irregular sampling since a 
> variable is indexed by dimensions, and dimensions are generally 
> associated with a 1D variable that describe the coordinate value for 
> each sample point along the axis/dimension.
>
> So a more general model would be:
>
> class GDALDataset
>
> int nAxisCount
>
> char* apszAxisName[nAxisCount]
>
> char* apszAxisUnit[nAxisCount]
>
> int panAxisSize[nAxisCount]
>
> double papadfAxisCoordinates[nAxisCount][] where the size of the 2nd 
> dimension of this array is the value of panAxisSize[i]
>
> (That would still not support fully irregular grids where basically 
> each intersection of the grid should have a coordinate tuple, but we 
> probably don't need to go to that complexity.)
>
> Or perhaps put all axis related stuff in a dedicated class, and with a 
> flag to indicate regular vs irregular spacing, so as to simplify some 
> processing in the regular spacing case
>
> class GDALGridAxis
>
> char* pszName
>
> char* pszUnit
>
> int nSize
>
> bool bRegularSpacing;
>
> double dfOrigin; // if bRegularSpacing == true
>
> double adfVector[nAxisCount]; // if bRegularSpacing == true
>
> double adfAxisCoordinates[nSize]; // if bRegularSpacing == false
>
> In a transition, we'd want:
>
> * all existing 2D functionnalities and public API to be preserved. And 
> some rather mechanical way of converting existing driver code to the 
> new internal API (helpers for the 2D case) since 2D only drivers are 
> and will remain 95% of existing drivers.
>
> * addition of a restricted set of ND functionnalities. Among the 
> potential restrictions for a first stage: read-only support, nearest 
> neighbour resampling. Minimum functionnality needed:
>
> - ND read support in netCDF driver
>
> - A base GDALRasterBand::IMultiDimRasterIO() implementation, which 
> requires the GDALRasterBlock / cache mechanism to support ND
>
> - We'd want some support for gdal_translate to be able to do coverage 
> subsetting and slicing (you'd need to slice down to 2D if no drivers 
> support ND output).
>
> - As the VRT format is the fundamental mechanics for any non trivial 
> gdal_translate operation (any switch besides -of and -co goes through 
> VRT internally), it would need to be updated to support ND.
>
> - C API and Python bindings should be updated.
>
> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171025/b8c7e225/attachment-0001.html>

From john at muccigrosso.org  Wed Oct 25 12:07:18 2017
From: john at muccigrosso.org (John D. Muccigrosso)
Date: Wed, 25 Oct 2017 15:07:18 -0400
Subject: [gdal-dev] Using ogr2ogr to convert from csv - drops text after
	number
Message-ID: <F387BB62-5269-4287-8E17-60F32FA90FFB@muccigrosso.org>

I'm using ogr2ogr to convert an xml file (from Google sheets) to csv. 
All is well except when there's a value like

     1 two

then the conversion will clip throw out everything after the "1". I take 
it that it sees a number and stops there.

I've got a workaround, but is there any way to tell ogr2ogr to treat the 
entire value?

Here's a simple xml file that exhibits the behavior:

```
<?xml version='1.0' encoding='utf-8'?>
<feed xmlns='http://www.w3.org/2005/Atom' 
xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' 
xmlns:gsx='http://schemas.google.com/spreadsheets/2006/extended'>
   <entry>
     <id>one</id>
     <updated>2017-10-24T19:42:20.580Z</updated>
     <title type='text'>1000001</title>
     <dummy>One_word</dummy>
     <dummy2>One, two</dummy2>
     <dummy3>One two</dummy3>
     <dummy4>1, two</dummy4>
     <dummy5>one, 2</dummy5>
     <dummy6>1 two</dummy6>
     <dummy7>one 2</dummy7>
</entry>
</feed>
```

ogr2ogr -f csv output.csv input.xml yields:

```
id,updated,title,title_type,dummy,dummy2,dummy3,dummy4,dummy5,dummy6,dummy7
one,2017/10/24 19:42:20.580+00,1000001,text,One_word,"One, two",One 
two,"1, two","one, 2",1,one 2
```

That second-to-last value should be "1 two" (with the quotes).

TIA.

John

From even.rouault at spatialys.com  Wed Oct 25 12:22:29 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 25 Oct 2017 21:22:29 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>
References: <2435502.MieFYiu8dg@even-i700>
 <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>
Message-ID: <9095781.qnEk8sG7dV@even-i700>

On mercredi 25 octobre 2017 14:42:54 CEST Ari Jolma wrote:
> I'd like to first know / decide what would we mean by a
> "multidimensional raster"?

The current rasters handled by GDAL are already multidimensional, with the number of 
dimensions being fixed to 2, and being 2 horizontal dimensions (X/Y, lon/lat). The idea here 
would be to at least address the 3D (X,Y,Z / X,Y,T) and 4D case (X,Y,Z,T), and when you need to 
do that, arbitrary number of dimensions is at hand.

The dimensions/ones here are mostly spatio-temporal ones, along which you can measure a 
physical phenomenon (a temperature field measures at different position, elevation, time)

> 
> What we now have as a raster is a dataset with one or more bands. The
> bands represent the data dimension and thus there is one of those
> (2D+1).

Bands do not represent a dimension. In OGC SIS
( http://docs.opengeospatial.org/is/09-146r6/09-146r6.html ) or WCS, bands are called fields 
of a rangeType.
Bands are different from the above mentionned dimensions in which they do not really 
consider an axis along which you have some consistency. Along the X/Y axis, you can mark 
ticks every n meters. Along the "band axis", you will have a temperature field in Kelvin, a wind 
direction in degrees, etc.

> Would we like to have more data dimensions? What Even sketches
> below is ND, but would we really want to have 2D + ND?

My scetch of ND intended to capture the current 2D case, as a particular case.

> 
> Also now there is no unit for the data dimension and the value is
> strictly increasing positive integer,

> would we like to have an explicit
> unit

Was the GDALDataset::char* apszAxisUnit[nAxisCount] or GDALGridAxis::pszUnit  in my 
scetch

> and arbitrary value (double, date, time, ...)?

In my scetch, I had indeed some hesitation about the appropriate type for 
adfAxisCoordinates array. I think that for the cases mentionned above (4D spatio-temporal) 
we can always represent the coordinates along each axis as a double value. The case where 
that's the less obvious is for date/time, but using some reference like the Unix Epoch.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171025/b05d5f1e/attachment.html>

From even.rouault at spatialys.com  Wed Oct 25 13:00:41 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 25 Oct 2017 22:00:41 +0200
Subject: [gdal-dev] Using ogr2ogr to convert from csv - drops text after
	number
In-Reply-To: <F387BB62-5269-4287-8E17-60F32FA90FFB@muccigrosso.org>
References: <F387BB62-5269-4287-8E17-60F32FA90FFB@muccigrosso.org>
Message-ID: <1766413.dlsiRAaFee@even-i700>

John,

The issue is a wrong detection of the field type in the GeoRSS/Atom 
driver, which I just fixed per
https://trac.osgeo.org/gdal/ticket/7108
There's no workaround, apart from grabbing a build with the above fix.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171025/c519628d/attachment.html>

From ari.jolma at gmail.com  Wed Oct 25 23:05:27 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 26 Oct 2017 09:05:27 +0300
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <9095781.qnEk8sG7dV@even-i700>
References: <2435502.MieFYiu8dg@even-i700>
 <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>
 <9095781.qnEk8sG7dV@even-i700>
Message-ID: <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>

Even Rouault kirjoitti 25.10.2017 klo 22:22:

> On mercredi 25 octobre 2017 14:42:54 CEST Ari Jolma wrote:
>
> > I'd like to first know / decide what would we mean by a
>
> > "multidimensional raster"?
>
> The current rasters handled by GDAL are already multidimensional
>

I was aiming at the 'multidimensional raster' to a case where the 
location (raster cell) data is multidimensional. You get 
multidimensional data whenever you have an axis along which you can do 
measurements (time, depth, electromagnetic spectrum, simulation number, 
etc). I'd take the location as the basis that probably shouldn't need 
extending for GDAL. Or do we want to support taking X,Y,T data from a 
format that supports it and slice it to X,T for another format? Maybe 
that makes sense for some visualization and analysis purposes, but is 
that what GDAL should support at some point? Are there compelling use cases?

Would it be possible to keep X,Y as it is and add support for 
multidimensional data as an extension?

Ari


> , with the number of dimensions being fixed to 2, and being 2 
> horizontal dimensions (X/Y, lon/lat). The idea here would be to at 
> least address the 3D (X,Y,Z / X,Y,T) and 4D case (X,Y,Z,T), and when 
> you need to do that, arbitrary number of dimensions is at hand.
>
> The dimensions/ones here are mostly spatio-temporal ones, along which 
> you can measure a physical phenomenon (a temperature field measures at 
> different position, elevation, time)
>
> >
>
> > What we now have as a raster is a dataset with one or more bands. The
>
> > bands represent the data dimension and thus there is one of those
>
> > (2D+1).
>
> Bands do not represent a dimension. In OGC SIS
>
> ( http://docs.opengeospatial.org/is/09-146r6/09-146r6.html ) or WCS, 
> bands are called fields of a rangeType.
>
> Bands are different from the above mentionned dimensions in which they 
> do not really consider an axis along which you have some consistency. 
> Along the X/Y axis, you can mark ticks every n meters. Along the "band 
> axis", you will have a temperature field in Kelvin, a wind direction 
> in degrees, etc.
>
> > Would we like to have more data dimensions? What Even sketches
>
> > below is ND, but would we really want to have 2D + ND?
>
> My scetch of ND intended to capture the current 2D case, as a 
> particular case.
>
> >
>
> > Also now there is no unit for the data dimension and the value is
>
> > strictly increasing positive integer,
>
> > would we like to have an explicit
>
> > unit
>
> Was the GDALDataset::char* apszAxisUnit[nAxisCount] or 
> GDALGridAxis::pszUnit in my scetch
>
> > and arbitrary value (double, date, time, ...)?
>
> In my scetch, I had indeed some hesitation about the appropriate type 
> for adfAxisCoordinates array. I think that for the cases mentionned 
> above (4D spatio-temporal) we can always represent the coordinates 
> along each axis as a double value. The case where that's the less 
> obvious is for date/time, but using some reference like the Unix Epoch.
>
> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171026/7dac4291/attachment-0001.html>

From edzer.pebesma at uni-muenster.de  Thu Oct 26 00:07:42 2017
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 26 Oct 2017 09:07:42 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <9095781.qnEk8sG7dV@even-i700>
References: <2435502.MieFYiu8dg@even-i700>
 <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>
 <9095781.qnEk8sG7dV@even-i700>
Message-ID: <10f83695-67a1-2777-664e-e6175cb7d4bf@uni-muenster.de>



On 10/25/2017 09:22 PM, Even Rouault wrote:
> On mercredi 25 octobre 2017 14:42:54 CEST Ari Jolma wrote:
> 
>> I'd like to first know / decide what would we mean by a
> 
>> "multidimensional raster"?
> 
>  
> 
> The current rasters handled by GDAL are already multidimensional, with
> the number of dimensions being fixed to 2, and being 2 horizontal
> dimensions (X/Y, lon/lat). The idea here would be to at least address
> the 3D (X,Y,Z / X,Y,T) and 4D case (X,Y,Z,T), and when you need to do
> that, arbitrary number of dimensions is at hand.
> 
>  
> 
> The dimensions/ones here are mostly spatio-temporal ones, along which
> you can measure a physical phenomenon (a temperature field measures at
> different position, elevation, time)
> 
>  
> 
>>
> 
>> What we now have as a raster is a dataset with one or more bands. The
> 
>> bands represent the data dimension and thus there is one of those
> 
>> (2D+1).
> 
>  
> 
> Bands do not represent a dimension. In OGC SIS
> 
> ( http://docs.opengeospatial.org/is/09-146r6/09-146r6.html ) or WCS,
> bands are called fields of a rangeType.
> 
> Bands are different from the above mentionned dimensions in which they
> do not really consider an axis along which you have some consistency.
> Along the X/Y axis, you can mark ticks every n meters. Along the "band
> axis", you will have a temperature field in Kelvin, a wind direction in
> degrees, etc.
> 

I think band is a dimension in the implementation in GDAL because for
every (x,y,band) we give access to a pixel; if it were not a dimension
but an attribute, we would for each pixel (x,y) give access to a record
with named fields e.g. { red, green, blue }.

In the case where bands reflect colors (or wavelength) they work well as
a dimension, since they can be uniquely ordered. Like elevation in
weather data they may be irregularly spaced; in practice, they refer to
wavelength intervals rather than point values.

In the case where there is no such ordering, e.g. where bands reflect
raster layers with abundance of different plant species, we can still
use it as a dimension to solve a problem, but we can't do meaningful
operations on it that assume ordering: you can smooth a spectral curve
or depth profile to reduce noise, but doing this over an arbitrarily
ordered set of species doesn't make sense.


>  
> 
>> Would we like to have more data dimensions? What Even sketches
> 
>> below is ND, but would we really want to have 2D + ND?
> 
>  
> 
> My scetch of ND intended to capture the current 2D case, as a particular
> case.
> 
>  
> 
>>
> 
>> Also now there is no unit for the data dimension and the value is
> 
>> strictly increasing positive integer,
> 
>  
> 
>> would we like to have an explicit
> 
>> unit
> 
>  
> 
> Was the GDALDataset::char* apszAxisUnit[nAxisCount] or
> GDALGridAxis::pszUnit in my scetch
> 
>  
> 
>> and arbitrary value (double, date, time, ...)?
> 
>  
> 
> In my scetch, I had indeed some hesitation about the appropriate type
> for adfAxisCoordinates array. I think that for the cases mentionned
> above (4D spatio-temporal) we can always represent the coordinates along
> each axis as a double value. The case where that's the less obvious is
> for date/time, but using some reference like the Unix Epoch.
> 
>  
> 
>  
> 
> Even
> 
>  
> 
> -- 
> 
> Spatialys - Geospatial professional services
> 
> http://www.spatialys.com
> 
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

From edzer.pebesma at uni-muenster.de  Thu Oct 26 00:26:29 2017
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 26 Oct 2017 09:26:29 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
References: <2435502.MieFYiu8dg@even-i700>
 <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>
 <9095781.qnEk8sG7dV@even-i700>
 <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
Message-ID: <231b3eab-5c7c-747f-1406-50259d80be16@uni-muenster.de>



On 10/26/2017 08:05 AM, Ari Jolma wrote:
> Even Rouault kirjoitti 25.10.2017 klo 22:22:
> 
>> On mercredi 25 octobre 2017 14:42:54 CEST Ari Jolma wrote:
>>
>> > I'd like to first know / decide what would we mean by a
>>
>> > "multidimensional raster"?
>>
>>  
>>
>> The current rasters handled by GDAL are already multidimensional
>>
> 
> I was aiming at the 'multidimensional raster' to a case where the
> location (raster cell) data is multidimensional. You get
> multidimensional data whenever you have an axis along which you can do
> measurements (time, depth, electromagnetic spectrum, simulation number,
> etc). I'd take the location as the basis that probably shouldn't need
> extending for GDAL. Or do we want to support taking X,Y,T data from a
> format that supports it and slice it to X,T for another format? Maybe
> that makes sense for some visualization and analysis purposes, but is
> that what GDAL should support at some point? Are there compelling use cases?

I'm thinking of handling and analysing multi-dimensional spatio-temporal
imagery-like array data in general, of which there are many examples.

Two big use case groups: detecting change from remote sensing image time
series, and analysing climate model predictions.

> 
> Would it be possible to keep X,Y as it is and add support for
> multidimensional data as an extension?

I think yes, and Even's proposal of yesterday sketches the path for this
(I still need more time to understand it).

More in general, we have multidimensional arrays where horizontal space
is not an x y image (GDAL raster band) but for instance a sequence of
feature geometries (e.g., in situ sensor data, or demographic data by
administrative region, time, and age class). We may want to keep those
use cases in mind when working on this from the GDAL perspective, since
pretty soon you will want to cut out a point or region, or aggregate
grid values over a polygon area while keeping all other dimensions.

> 
> Ari
> 
> 
>> , with the number of dimensions being fixed to 2, and being 2
>> horizontal dimensions (X/Y, lon/lat). The idea here would be to at
>> least address the 3D (X,Y,Z / X,Y,T) and 4D case (X,Y,Z,T), and when
>> you need to do that, arbitrary number of dimensions is at hand.
>>
>>  
>>
>> The dimensions/ones here are mostly spatio-temporal ones, along which
>> you can measure a physical phenomenon (a temperature field measures at
>> different position, elevation, time)
>>
>>  
>>
>> >
>>
>> > What we now have as a raster is a dataset with one or more bands. The
>>
>> > bands represent the data dimension and thus there is one of those
>>
>> > (2D+1).
>>
>>  
>>
>> Bands do not represent a dimension. In OGC SIS
>>
>> ( http://docs.opengeospatial.org/is/09-146r6/09-146r6.html ) or WCS,
>> bands are called fields of a rangeType.
>>
>> Bands are different from the above mentionned dimensions in which they
>> do not really consider an axis along which you have some consistency.
>> Along the X/Y axis, you can mark ticks every n meters. Along the "band
>> axis", you will have a temperature field in Kelvin, a wind direction
>> in degrees, etc.
>>
>>  
>>
>> > Would we like to have more data dimensions? What Even sketches
>>
>> > below is ND, but would we really want to have 2D + ND?
>>
>>  
>>
>> My scetch of ND intended to capture the current 2D case, as a
>> particular case.
>>
>>  
>>
>> >
>>
>> > Also now there is no unit for the data dimension and the value is
>>
>> > strictly increasing positive integer,
>>
>>  
>>
>> > would we like to have an explicit
>>
>> > unit
>>
>>  
>>
>> Was the GDALDataset::char* apszAxisUnit[nAxisCount] or
>> GDALGridAxis::pszUnit in my scetch
>>
>>  
>>
>> > and arbitrary value (double, date, time, ...)?
>>
>>  
>>
>> In my scetch, I had indeed some hesitation about the appropriate type
>> for adfAxisCoordinates array. I think that for the cases mentionned
>> above (4D spatio-temporal) we can always represent the coordinates
>> along each axis as a double value. The case where that's the less
>> obvious is for date/time, but using some reference like the Unix Epoch.
>>
>>  
>>
>>  
>>
>> Even
>>
>>  
>>
>> -- 
>>
>> Spatialys - Geospatial professional services
>>
>> http://www.spatialys.com
>>
> 
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

From ari.jolma at gmail.com  Thu Oct 26 00:39:38 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 26 Oct 2017 10:39:38 +0300
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <231b3eab-5c7c-747f-1406-50259d80be16@uni-muenster.de>
References: <2435502.MieFYiu8dg@even-i700>
 <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>
 <9095781.qnEk8sG7dV@even-i700>
 <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
 <231b3eab-5c7c-747f-1406-50259d80be16@uni-muenster.de>
Message-ID: <ff6af9b6-963c-8fb0-d05a-415b95ee6ed0@gmail.com>

Edzer Pebesma kirjoitti 26.10.2017 klo 10:26:
> More in general, we have multidimensional arrays where horizontal space
> is not an x y image (GDAL raster band) but for instance a sequence of
> feature geometries (e.g., in situ sensor data, or demographic data by
> administrative region, time, and age class). We may want to keep those
> use cases in mind when working on this from the GDAL perspective, since
> pretty soon you will want to cut out a point or region, or aggregate
> grid values over a polygon area while keeping all other dimensions.

With vector data the case is different, yes. You may have 'a thing' 
(say, a province), whose spatial representation changes significantly in 
time along with its characteristics (say, population). Or you may have a 
moving sensor.

But with raster data, I'd stick very strongly to the notion that the 
spatial representation is immutable. The only thing that may be 
important(? I may disregard something here) is that when you do 
reprojections, then the area that the cell represents changes. Is this 
too strong statement?

Ari


From Rob.Langford at salford.gov.uk  Thu Oct 26 04:26:46 2017
From: Rob.Langford at salford.gov.uk (Langford, Robert)
Date: Thu, 26 Oct 2017 11:26:46 +0000
Subject: [gdal-dev] ogr2ogr XLSX reporting no layers
Message-ID: <9d2d951f39264cd0a5a2b278668f76fe@EX13-P-MBX10-W.salford.gov.uk>

All,

Using GDAL v.2.2.2 on Windows.

Trying to read this XLSX file: http://www.gamblingcommission.gov.uk/docs/Premises-licence-database-extract.xlsx

Running:
> ogrinfo -ro -so -al Premises-licence-database-extract.xlsx

Returns:
>> GDAL: GDALOpen(Premises-licence-database-extract.xlsx, this=000001B35D22FF50) succeeds as XLSX.

But:
>> OGR: GetLayerCount() = 0

If I open the file in Excel and re-save it then works:
>> GDAL: GDALOpen(Premises-licence-database-extract-RESAVE.xlsx, this=000001FC29A80BE0) succeeds as XLSX.
>> OGR: GetLayerCount() = 1

Does anyone have any ideas?

Many thanks,

Rob



DISCLAIMER: The information contained in this communication/message from Rob.Langford at salford.gov.uk sent on Thu Oct 26 12:26:48 2017 is confidential. It is intended solely for the addressee(s) gdal-dev at lists.osgeo.org

Access to this message by anyone else is unauthorised. If you are not the intended recipient, any disclosure, copying, or distribution of the message, or any action or omission taken by you in reliance on it, is prohibited and may be unlawful.
As a public body, Salford City Council may be required to disclose this email [or any response to it] under the Freedom of Information Act 2000, unless the information in it is covered by one of the exemptions in the Act. 
Please immediately contact the sender, Rob.Langford at salford.gov.uk if you have received this message in error. 

For the full disclaimer please access http://www.salford.gov.uk/e-mail.  Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171026/cfb11ea6/attachment.html>

From edzer.pebesma at uni-muenster.de  Thu Oct 26 06:27:32 2017
From: edzer.pebesma at uni-muenster.de (Edzer Pebesma)
Date: Thu, 26 Oct 2017 15:27:32 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <ff6af9b6-963c-8fb0-d05a-415b95ee6ed0@gmail.com>
References: <2435502.MieFYiu8dg@even-i700>
 <da0c8b96-7f70-60c8-7be9-ebc40f2f5d0f@gmail.com>
 <9095781.qnEk8sG7dV@even-i700>
 <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
 <231b3eab-5c7c-747f-1406-50259d80be16@uni-muenster.de>
 <ff6af9b6-963c-8fb0-d05a-415b95ee6ed0@gmail.com>
Message-ID: <90ca8d7d-ec44-f99b-3882-4ab8b7128e01@uni-muenster.de>



On 10/26/2017 09:39 AM, Ari Jolma wrote:
> Edzer Pebesma kirjoitti 26.10.2017 klo 10:26:
>> More in general, we have multidimensional arrays where horizontal space
>> is not an x y image (GDAL raster band) but for instance a sequence of
>> feature geometries (e.g., in situ sensor data, or demographic data by
>> administrative region, time, and age class). We may want to keep those
>> use cases in mind when working on this from the GDAL perspective, since
>> pretty soon you will want to cut out a point or region, or aggregate
>> grid values over a polygon area while keeping all other dimensions.
> 
> With vector data the case is different, yes. You may have 'a thing'
> (say, a province), whose spatial representation changes significantly in
> time along with its characteristics (say, population). Or you may have a
> moving sensor.

For me, the static vs dynamic space discretization choice does not align
with the vector vs. raster choice, but for the case of representing
spatiotemporal phenomena with dense arrays, which is what we discuss
here, we'd better stick to static space discretization.

> 
> But with raster data, I'd stick very strongly to the notion that the
> spatial representation is immutable. The only thing that may be

Yes.

> important(? I may disregard something here) is that when you do
> reprojections, then the area that the cell represents changes. Is this
> too strong statement?

That's a different discussion, really. But an interesting one!

> 
> Ari
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Edzer Pebesma
Institute for Geoinformatics
Heisenbergstrasse 2, 48151 Muenster, Germany
Phone: +49 251 8333081

From even.rouault at spatialys.com  Thu Oct 26 10:03:34 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 26 Oct 2017 19:03:34 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <10f83695-67a1-2777-664e-e6175cb7d4bf@uni-muenster.de>
References: <2435502.MieFYiu8dg@even-i700> <9095781.qnEk8sG7dV@even-i700>
 <10f83695-67a1-2777-664e-e6175cb7d4bf@uni-muenster.de>
Message-ID: <167676488.VLBf9dnSPb@even-i700>

> 
> I think band is a dimension in the implementation in GDAL 

I disagree with that. There's clearly a GDALRasterBand object to model that.

> because for
> every (x,y,band) we give access to a pixel; if it were not a dimension
> but an attribute, we would for each pixel (x,y) give access to a record
> with named fields e.g. { red, green, blue }.

This could be done, but wouldn't be really practical given that bands can have different data 
types. But fundamentally band/field/variables is a concept that is different from the 
dimensions that index it. This is really clear in the related standards (WCS, CIS), and in the 
format implementations (netCDF), so I  think we shouldn't "merge" the band concept as an 
extra dimension.

If you have variable[x][y][z][t], then whatever the value of x, y, z, t the units, data type and 
semantics of variable[][][][] is the same

whereas dataset[x][y][band] doesn't have that property when you change band.

> 
> In the case where bands reflect colors (or wavelength) they work well as
> a dimension, since they can be uniquely ordered. Like elevation in
> weather data they may be irregularly spaced; in practice, they refer to
> wavelength intervals rather than point values.
> 
> In the case where there is no such ordering, e.g. where bands reflect
> raster layers with abundance of different plant species, we can still
> use it as a dimension to solve a problem

I see your point, but that's more a particular case, than something on which we can base an 
abstraction on. Note also that in some datasets the bands are not ordered in a logical 
fashion. For example in a GeoTIFF file, it is not uncommon to find R, G, B, Near-Infrared in 
that order.
And if you look at Sentinel-2 dataset, all bands are not sampled at the same resolutions, so 
band couldn't be used as an index through the whole band set.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171026/be7d06a8/attachment.html>

From even.rouault at spatialys.com  Thu Oct 26 10:17:08 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 26 Oct 2017 19:17:08 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
References: <2435502.MieFYiu8dg@even-i700> <9095781.qnEk8sG7dV@even-i700>
 <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
Message-ID: <2224838.mgomoDzED3@even-i700>

On jeudi 26 octobre 2017 09:05:27 CEST Ari Jolma wrote:
> Even Rouault kirjoitti 25.10.2017 klo 22:22:
> > On mercredi 25 octobre 2017 14:42:54 CEST Ari Jolma wrote:
> > > I'd like to first know / decide what would we mean by a
> > > 
> > > "multidimensional raster"?
> > 
> > The current rasters handled by GDAL are already multidimensional
> 
> I was aiming at the 'multidimensional raster' to a case where the
> location (raster cell) data is multidimensional. You get
> multidimensional data whenever you have an axis along which you can do
> measurements (time, depth, electromagnetic spectrum, simulation number,
> etc). I'd take the location as the basis that probably shouldn't need
> extending for GDAL.

> Or do we want to support taking X,Y,T data from a
> format that supports it and slice it to X,T for another format? Maybe
> that makes sense for some visualization and analysis purposes, but is
> that what GDAL should support at some point? Are there compelling use cases?

I don't have an opinon about slicing X,Y,T to X,T 

> 
> Would it be possible to keep X,Y as it is and add support for
> multidimensional data as an extension?

That could be indeed an option if we are sure that the 2 first dimensions are X and Y, and we 
want only to slice higher dimensionnal variables to X,Y.

So instead of having a general purpose indexing mechanism as I scetched initially an option 
would be to expose the extra dimensions/axis, their bounds. The user could set the values at 
which to set the values at which those extra dimensions must be considered, so as to get a 
fully constrainted X,Y indexed field.
The main advantage of this is that it would have presumably no impact on 2D-only drivers.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171026/f7b12051/attachment.html>

From even.rouault at spatialys.com  Thu Oct 26 10:25:38 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 26 Oct 2017 19:25:38 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <231b3eab-5c7c-747f-1406-50259d80be16@uni-muenster.de>
References: <2435502.MieFYiu8dg@even-i700>
 <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
 <231b3eab-5c7c-747f-1406-50259d80be16@uni-muenster.de>
Message-ID: <3223231.5ieHiColEd@even-i700>

> More in general, we have multidimensional arrays where horizontal 
space
> is not an x y image (GDAL raster band) but for instance a sequence 
of
> feature geometries (e.g., in situ sensor data, or demographic data 
by
> administrative region, time, and age class).

I didn't grasp what you meant there. This doesn't sound like gridded 
data, does it ? Can you point to such datasets ?

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171026/5abfe45b/attachment.html>

From even.rouault at spatialys.com  Thu Oct 26 12:29:46 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 26 Oct 2017 21:29:46 +0200
Subject: [gdal-dev] ogr2ogr XLSX reporting no layers
In-Reply-To: <9d2d951f39264cd0a5a2b278668f76fe@EX13-P-MBX10-W.salford.gov.uk>
References: <9d2d951f39264cd0a5a2b278668f76fe@EX13-P-MBX10-W.salford.gov.uk>
Message-ID: <2203749.y8YT2NXLWa@even-i700>

On jeudi 26 octobre 2017 11:26:46 CEST Langford, Robert wrote:
> All,
> 
> Using GDAL v.2.2.2 on Windows.
> 
> Trying to read this XLSX file:
> http://www.gamblingcommission.gov.uk/docs/Premises-licence-database-extract
> .xlsx
> Running:
> > ogrinfo -ro -so -al Premises-licence-database-extract.xlsx
> 
> Returns:
> >> GDAL: GDALOpen(Premises-licence-database-extract.xlsx,
> >> this=000001B35D22FF50) succeeds as XLSX.
> But:
> >> OGR: GetLayerCount() = 0
> 
> If I open the file in Excel and re-save it then works:
> >> GDAL: GDALOpen(Premises-licence-database-extract-RESAVE.xlsx,
> >> this=000001FC29A80BE0) succeeds as XLSX. OGR: GetLayerCount() = 1
> 
> Does anyone have any ideas?

Fixed per https://trac.osgeo.org/gdal/ticket/7110

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171026/542110d4/attachment.html>

From gane.prog at gmail.com  Fri Oct 27 00:05:26 2017
From: gane.prog at gmail.com (Gane R)
Date: Fri, 27 Oct 2017 12:35:26 +0530
Subject: [gdal-dev] Page Selection in GeoPDF in GDAL utilizes like gdalwarp,
	gdal_translate
Message-ID: <CALMrLdDGjoVq0Jmqr2x37orChn_hq3g2WH59vjQBH+_jpWaDsg@mail.gmail.com>

I have a GeoPDF with Map on second page, first page is kind of foreword.

 Do We have any way in GDAL to say to GDAL API use page 2 of this GeoPDF
for gdal_translate or gdalwarp ?

Thanks
Ganesan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/4887fba9/attachment.html>

From bradh at frogmouth.net  Fri Oct 27 01:29:48 2017
From: bradh at frogmouth.net (bradh at frogmouth.net)
Date: Fri, 27 Oct 2017 19:29:48 +1100
Subject: [gdal-dev] Page Selection in GeoPDF in GDAL utilizes like
	gdalwarp, gdal_translate
In-Reply-To: <CALMrLdDGjoVq0Jmqr2x37orChn_hq3g2WH59vjQBH+_jpWaDsg@mail.gmail.com>
References: <CALMrLdDGjoVq0Jmqr2x37orChn_hq3g2WH59vjQBH+_jpWaDsg@mail.gmail.com>
Message-ID: <005f01d34efd$c1072640$431572c0$@frogmouth.net>

You should be able to just use the normal subdataset referencing. I like gdalinfo to get the syntax.

 

Brad 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/0a2a1ea5/attachment.html>

From bo.victor.thomsen at gmail.com  Fri Oct 27 02:42:41 2017
From: bo.victor.thomsen at gmail.com (Bo Victor Thomsen)
Date: Fri, 27 Oct 2017 11:42:41 +0200
Subject: [gdal-dev] Using GDALVectorTranslate() from c# ?
Message-ID: <36911885-47da-7bc4-d06b-919e22b1afef@gmail.com>

To the list-

Has anybody a working c# example of using the GDALVectorTranslate()  
(ogr2ogr as a function) ?

At the moment I have a C# based application calling ogr2ogr as an 
external program. Terrible hack.

Kind regards

Bo Victor Thomsen
AestasGIS Denmark



From ari.jolma at gmail.com  Fri Oct 27 03:28:57 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 27 Oct 2017 13:28:57 +0300
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <2224838.mgomoDzED3@even-i700>
References: <2435502.MieFYiu8dg@even-i700> <9095781.qnEk8sG7dV@even-i700>
 <56b8d5e3-91e0-a0e8-14e7-3aa59c0121f3@gmail.com>
 <2224838.mgomoDzED3@even-i700>
Message-ID: <f09a8d9c-cc73-4178-8acf-3d05adcb1dff@gmail.com>

Even Rouault kirjoitti 26.10.2017 klo 20:17:
>
> >
>
> > Would it be possible to keep X,Y as it is and add support for
>
> > multidimensional data as an extension?
>
> That could be indeed an option if we are sure that the 2 first 
> dimensions are X and Y, and we want only to slice higher dimensionnal 
> variables to X,Y.
>

Assuming we have a X,Y,Z,T dataset of sea temperatures (Z is depth), we 
may want to warp it from projection A to B and then select a location 
and look a Z,T image from that location. Warping would work on X,Y and 
compute the Z,T as an extension what it now does for the pixel values 
(possibly multiple bands). I could imagine that the user would want to 
use GDAL for slicing the Z,T into an image - GDAL can write image files, 
so why not?

So perhaps the assumption for only slicing to X,Y is not ok.

> So instead of having a general purpose indexing mechanism as I 
> scetched initially an option would be to expose the extra 
> dimensions/axis, their bounds. The user could set the values at which 
> to set the values at which those extra dimensions must be considered, 
> so as to get a fully constrainted X,Y indexed field.
>
> The main advantage of this is that it would have presumably no impact 
> on 2D-only drivers.
>

I assume that would be very good from the point of view of actual 
feasibility of the whole project.

Ari

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/77638a40/attachment.html>

From even.rouault at spatialys.com  Fri Oct 27 03:57:03 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 27 Oct 2017 12:57:03 +0200
Subject: [gdal-dev] Multidimensional raster support in GDAL
In-Reply-To: <f09a8d9c-cc73-4178-8acf-3d05adcb1dff@gmail.com>
References: <2435502.MieFYiu8dg@even-i700> <2224838.mgomoDzED3@even-i700>
 <f09a8d9c-cc73-4178-8acf-3d05adcb1dff@gmail.com>
Message-ID: <1745772.ZVmJmhKRPM@even-i700>

> > The main advantage of this is that it would have presumably no impact
> > on 2D-only drivers.
> 
> I assume that would be very good from the point of view of actual
> feasibility of the whole project.

Yes, although the generic approach could probably be more doable by adding a few 
conveniency methods to make the transition easier for 2D-only drivers.

For example, currently you'll find in a typical Open() method

poDS->nRasterXSize = x
poDS->nRasterYSize = y

In a generic multidimensional approach, this could be replaced by a

poDS->SetXYSize( x, y )

that would take care of setting nAxisCount = 2 and initializing the 2 axis.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/cd1708a1/attachment-0001.html>

From asgerpetersen at gmail.com  Fri Oct 27 05:01:42 2017
From: asgerpetersen at gmail.com (Asger Sigurd Skovbo Petersen)
Date: Fri, 27 Oct 2017 14:01:42 +0200
Subject: [gdal-dev] Using OpenEx() in C# with CSV file
In-Reply-To: <CAHNf2YSBb1-r_wCEia2jDZLdWnvtzUNbHz=UETxnRKc32VCk0w@mail.gmail.com>
References: <CAHNf2YSBb1-r_wCEia2jDZLdWnvtzUNbHz=UETxnRKc32VCk0w@mail.gmail.com>
Message-ID: <CANeF=_jp2RQB08y0Ki--CE7Xm1f1pga58TFATGFsCXo0q_tPLA@mail.gmail.com>

Hi Paul,

As it happens I am having the same issue right now.

I am no swig expert at all, but it looks like the vector (OGR) part of the
Dataset is specifically NOT defined for C# see
https://github.com/OSGeo/gdal/blob/75b443c768b9757085c7c0642e575e1417ccf9dd/gdal/swig/include/Dataset.i#L798-L912


It would be nice to know why this is so, and how much work it is to fix it.

Best regards
Asger

On 23 October 2017 at 12:16, Paul Meems <bontepaarden at gmail.com> wrote:

> Hi List,
>
> I'm trying to read all fields in a CSV file.
> Using this command it is working:
> ogrinfo -ro -al -so test.csv -oo X_POSSIBLE_NAMES=Lon* -oo
> Y_POSSIBLE_NAMES=Lat* -oo KEEP_GEOM_COLUMNS=NO
>
> Now I need to do this in my C# application.
> Because I need to send -00 (open options) I cannot use Ogr.Open(), but I
> should use Gdal.OpenEx(), right?
> OpenEx returns a Dataset, which I somehow need to convert to an
> ogr datasource so I can use GetLayerByIndex(), GetFieldCount()
> and GetFieldDefn() but I can't get it to work.
>
> Looking at numerous Python example it seems in Python no conversion is
> needed.
> This is my C# code:
> var openOptions = new[]
> {
>     "X_POSSIBLE_NAMES", "Lon*",
>     "Y_POSSIBLE_NAMES", "Lat*",
>     "KEEP_GEOM_COLUMNS", "NO"
> };
> using (var ds = Gdal.OpenEx(input, 4, null, openOptions, null))
> {
>     if (ds == null)
>     {
>         throw new Exception("Can't open OGR dataset: " + input);
>     }
>     // var layer = ds.GetLayerByIndex(0); <----- COMPILE ERROR
> }
>
> Any help is much appreciated.
>
> Thanks,
>
> Paul
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/4b3361a6/attachment.html>

From ari.jolma at gmail.com  Fri Oct 27 09:38:10 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 27 Oct 2017 19:38:10 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <10706047.0vAq8ZVGjg@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
Message-ID: <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>

I have my initial work here:

https://github.com/ajolma/gdal/commit/2335bc6222e8d8df7e4b5fcfe21a825c727ad549

what I've done so far:

* Recognize WCS:URL format

* Parse GetCapabilities XML (versions 1.0.0 to 2.0.1)

* Simple cache for various XML-files (PAM, WCS_GDAL, Capabilities, 
DescribeCoverage)

My goal is to support something like (1-3 work somehow, 3 only for 1.0.0 
- for 1.1.1 it issues a too large GetCoverage request, maybe I broke 
something(?))

1) gdalinfo WCS:URL-to-server

         this fetches, parses and caches GetCapabilities XML

2) pick a layer from the list (DescribeCoverage URL is given)

3) gdalinfo WCS:DescribeCoverage-URL

4) use the layer

I'll work on at least basic support for 2.0.1 - time permitting.

Notes:

* No tests yet in the autotest suite

* I'm testing against existing ArcGIS, GeoServer and MapServer servers 
on the net

* The namespace support in parsing XML may be a bit overkill, but anyway 
its there.

* There are a few small utility functions - some could perhaps be 
replaced by ones from port and some could perhaps be added there in some 
form; and all could be improved.

Ari


Even Rouault kirjoitti 23.10.2017 klo 13:19:
> Hi Ari,
>
>> It seems to me that the WCS driver could benefit from some love.
> That would be a good initiative!
>
> In the wished feature list, I could add:
>
> * improve test coverage, which is really low currently:
> https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
> One issue we have for testing is the lack of stable & reliable servers.
> One potential way of addressing this is to use a local HTTP server, like I did recently with the /vsis3/ (and similar)
> subsystems, where you can add stub endpoints. An extra advantage is that you can also easily test error situations.
> See
> - example of server start and end
> 	https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
>        https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
> - example of installation of HTTP answers to expected requests:
>         https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258
>
> * WCS 2.0 support
>
>
> Even
>


From p.baumann at jacobs-university.de  Fri Oct 27 09:41:23 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Fri, 27 Oct 2017 18:41:23 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
Message-ID: <350f004a-06fc-cd3a-8248-6539bb03dbd5@jacobs-university.de>

cool work! Once released, you may want to list yourself here:
https://en.wikipedia.org/wiki/Web_Coverage_Service .

FYI, GDAL is already listed here:
http://external.opengeospatial.org/twiki_public/CoveragesDWG/WebHome#Known_Implementations

-Peter


On 10/27/2017 06:38 PM, Ari Jolma wrote:
> I have my initial work here:
>
> https://github.com/ajolma/gdal/commit/2335bc6222e8d8df7e4b5fcfe21a825c727ad549
>
> what I've done so far:
>
> * Recognize WCS:URL format
>
> * Parse GetCapabilities XML (versions 1.0.0 to 2.0.1)
>
> * Simple cache for various XML-files (PAM, WCS_GDAL, Capabilities,
> DescribeCoverage)
>
> My goal is to support something like (1-3 work somehow, 3 only for 1.0.0 - for
> 1.1.1 it issues a too large GetCoverage request, maybe I broke something(?))
>
> 1) gdalinfo WCS:URL-to-server
>
>         this fetches, parses and caches GetCapabilities XML
>
> 2) pick a layer from the list (DescribeCoverage URL is given)
>
> 3) gdalinfo WCS:DescribeCoverage-URL
>
> 4) use the layer
>
> I'll work on at least basic support for 2.0.1 - time permitting.
>
> Notes:
>
> * No tests yet in the autotest suite
>
> * I'm testing against existing ArcGIS, GeoServer and MapServer servers on the net
>
> * The namespace support in parsing XML may be a bit overkill, but anyway its
> there.
>
> * There are a few small utility functions - some could perhaps be replaced by
> ones from port and some could perhaps be added there in some form; and all
> could be improved.
>
> Ari
>
>
> Even Rouault kirjoitti 23.10.2017 klo 13:19:
>> Hi Ari,
>>
>>> It seems to me that the WCS driver could benefit from some love.
>> That would be a good initiative!
>>
>> In the wished feature list, I could add:
>>
>> * improve test coverage, which is really low currently:
>> https://rawgit.com/rouault/gdalautotest-coverage-results/master/coverage_html/frmts/wcs/wcsdataset.cpp.gcov.html
>>
>> One issue we have for testing is the lack of stable & reliable servers.
>> One potential way of addressing this is to use a local HTTP server, like I
>> did recently with the /vsis3/ (and similar)
>> subsystems, where you can add stub endpoints. An extra advantage is that you
>> can also easily test error situations.
>> See
>> - example of server start and end
>>     https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L126
>>        https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1906
>> - example of installation of HTTP answers to expected requests:
>>         https://trac.osgeo.org/gdal/browser/trunk/autotest/gcore/vsis3.py#L1258
>>
>> * WCS 2.0 support
>>
>>
>> Even
>>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)



From bishop.dev at gmail.com  Fri Oct 27 14:06:42 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sat, 28 Oct 2017 00:06:42 +0300
Subject: [gdal-dev] About CMake build again
Message-ID: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>

Hi,

As Even said it make sense to move discussion from this ticket 
(https://trac.osgeo.org/gdal/ticket/7080) to the list.

First of all I would like to make small introduction to Borsch project. 
Here it is some useful links:

    * Borsch repository: https://github.com/nextgis-borsch/borsch

    * Presentation on FOSS4G 2016:
    http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-presentation.pdf

    * GDAL repository adapted for Borsch:
    https://github.com/nextgis-borsch/lib_gdal

Shortly speaking Borsch is 3 CMake scripts which add ability to include 
dependence library in one line of code.

It looks like:

find_anyproject(TIFF REQUIRED)

Certainly developer can add additional parameter to configure dependency 
in find_anyproject function.

Inside  find_anyproject work 2 cases:

1. First of all (by default, but can be overridden) CMake searches host 
system for dependency library (headers and lib files). This is usual 
CMake find_package 
(https://cmake.org/cmake/help/v3.0/command/find_package.html) with some 
additional logic to try different options for hard cases (like Qt).

2. If library not found, find_anyproject can get the sources or prebuild 
library from github.

So the GDAL or any other library can be build the normal way, but 
developer have additional features to configure build all libraries with 
one compiler and one set of compiler/linker settings (with some limits). 
Such way we can have rather complicated scenarios to build GDAL and 
dependencies.

Here it is several examples of benefits of this approach:

1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library 
for iOS as *.framework and for Android as *.so (arm7, arm64, i386, 
x86_64 architecture). I build all dependencies include GDAL statically 
and link in one fat library. The all code that do it: 
https://github.com/nextgis/nextgis_datastore/blob/master/cmake/extlib.cmake#L118-L236

By the way the library also builds on Linux and Mac OS (Windows under 
development) and CMake try to use existed in host system libraries. If 
CMake find GDAL in host system it will use it and all 
(-DENABLE_PLSCENES=OFF ... ) will be ignored as it already build with 
another parameters.

2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa: 
https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules

3. Build QGIS 
(https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149), 
PostGIS 
(https://github.com/nextgis-borsch/postgis/blob/master/CMakeLists.txt#L165), 
Formbuilder 
(https://github.com/nextgis/formbuilder/blob/master/cmake/extlib.cmake#L53-L173)

This is main Borsch features.


There are some additional conventions like:

     * I modify all libraries included into Borsch repository to install 
on unix-like paths. For Linux this is usual, for Windows and Mac OS this 
let us to use Qt installer framework an install software mach similar 
like on Linux. This is about target "install" which is vary on different 
libraries (CMake has it own conventions about it). This is not mandatory 
for Borsch itself but useful. CMake can register installed libraries in 
system repository to simplify find them in find_package function.

     * CMake get library version from sources in all libraries included 
into Borsch (if applicable, otherwise set it in CMake script). This is 
necessary if exact version of library needed. This is not mandatory. One 
more benefit during building process we can see dependency library 
version in console.

     * We modify all libraries included into Borsch repository to find 
dependencies using find_anyproject. It is simple to use libraries from 
our borsch repository, but developer can fork them or use any other 
sources and build systems to have dependency library in it's host system.

One can see this is all very flexible.


What about GDAL.

1. After unification GDALDataset and OGRDatasource current sources tree 
is not fit for this new logic of GDAL classes. I rearranged sources more 
closer to GDAL classes and CMake needs. Main changes are moving raster 
and vector drivers inside drivers folder 
(https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This 
simplify situation where different drivers need the same dependency 
library (libpg, libsqlite, etc.). Also there are several raster/vector 
drivers which need a separate directory but now presented in ogr or 
frmts directories. There are some bad decisions I made - for example I 
moved unit tests into separate repository - this was a mistake. We will 
return unit tests back to GDAL repository.

An example of cmake friendly way see 
https://github.com/nextgis-borsch/lib_gdal/blob/master/drivers/vector/CMakeLists.txt. 
The driver developer must only create new folder and put CMakeLists.txt 
file into it. The upper CMake script will find new driver and add it to 
GDAL build. In common cases no need to modify upper CMake scripts.

2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG, 
JPEG etc). All this code are in separate repositories. I don't see the 
difference to get this code from git pull from main GDAL repository or 
from the separate repository via find_anyproject process. Current GDAL 
repository looks like the https://github.com/nextgis-borsch packed in 
one repository.


In conclusion:

1. Borsch added flexible and useful features and not remove existing 
approach

2. The current cmaked GDAL are in production in my company more than a 
year on Windows, Linix, Mac OS, iOS, Android.

3. I'm ready to discuss and improve current solution. Any help are welcome

4. I also will be happy to contribute directly or via PR into GDAL trunk 
instead of backporting in both directions improvements that we do in GDAL .


Finally:

Find the link to page with the CMake in GDAL discussion - 
https://trac.osgeo.org/gdal/wiki/CMake

-- 
Best regards,
     Dmitry

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/45804550/attachment.html>

From pschmitt at gmail.com  Fri Oct 27 14:56:18 2017
From: pschmitt at gmail.com (Peter Schmitt)
Date: Fri, 27 Oct 2017 15:56:18 -0600
Subject: [gdal-dev] VSI_CACHE, open files and memory growth
Message-ID: <CACkcqcX_C6NpROKGebQ-h4syiYn68wN6_Ay7qnOmwn5MUmweiw@mail.gmail.com>

Hi,

I ran into something unexpected with VSI_CACHE while trying to understand
Memory consumption with MapServer
https://lists.osgeo.org/pipermail/mapserver-users/2017-October/080315.html

When MapServer layers have the setting CLOSE_CONNECTION=DEFER (this setting
keeps open file handles open indefinitely), images accessed with /vsis3/,
GDAL config variables GDAL_CACHEMAX=1 and VSI_CACHE=FALSE, my 8 MapServer
processes, Supervisord and Nginx consumes a fixed amount of memory which I
cannot grow (~ 470 mb, as reported by `docker stats`) after I have been
streaming WMS tiles for a while.

When I set VSI_CACHE=TRUE, my 8 MapServer processes grows more than I think
it should. The default VSI_CACHE_SIZE is 25 MB
https://trac.osgeo.org/gdal/wiki/ConfigOptions#VSI_CACHE yet I can get my 8
MapServer processes to consume > 1.4 GB and climbing. I'm not sure how high
it will go as the way I am reproducing this is a bit tedious. I would
expect the memory to level out around 470 + 25 * 8 = 670 MB

Regardless of VSI_CACHE and GDAL_CACHEMAX settings, I get a small memory
footprint when MapServer is configured to close file handles after every
request (CLOSE_CONNECTION=ALWAYS). I've never noticed this issue with
VSI_CACHE and MapServer before because I typically cnopfigure MapServer to
utilize a Tile Index, which defaults to behavior similar to
CLOSE_CONNECTION=ALWAYS. That is, file handles are closed after each
request.

I'm using MapServer-7.0.6 built with GDAL-2.2.2.  Is VSI_CACHE_SIZE the
cache size per process? per file handle?

Thanks,
Pete
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/8b1c6d06/attachment.html>

From even.rouault at spatialys.com  Fri Oct 27 15:14:26 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 28 Oct 2017 00:14:26 +0200
Subject: [gdal-dev] VSI_CACHE, open files and memory growth
In-Reply-To: <CACkcqcX_C6NpROKGebQ-h4syiYn68wN6_Ay7qnOmwn5MUmweiw@mail.gmail.com>
References: <CACkcqcX_C6NpROKGebQ-h4syiYn68wN6_Ay7qnOmwn5MUmweiw@mail.gmail.com>
Message-ID: <6429058.xiqEkq9fc2@even-i700>

Peter,

> I'm using MapServer-7.0.6 built with GDAL-2.2.2.  Is VSI_CACHE_SIZE the
> cache size per process? per file handle?

Per-file handle :
"""
The default size of caching for each file is 25 MB, and
can be controlled with the VSI_CACHE_SIZE configuration option (value in bytes).
Content in that cache is discarded when the file handle is closed.
"""
( http://gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsicache )

So with CLOSE_CONNECTION=DEFER, what you observed is logical. 
CLOSE_CONNECTION=DEFER could probably be improved with a least recently used cache to maintain
the maximum number of simultaneously opened datasets to a reasonable amount.

Alternatively with GDAL trunk, for /vsicurl/ and related file systems, you can also
tune a global cache
"""
In addition, a global least-recently-used cache of 16 MB shared among all
downloaded content is enabled by default, and content in it may be reused
after a file handle has been closed and reopen. Starting with GDAL 2.3, the
size of this global LRU cache can be modified by setting the configuration
option CPL_VSIL_CURL_CACHE_SIZE (in bytes).
"""
( http://gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsicurl )

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/860ef25b/attachment-0001.html>

From pschmitt at gmail.com  Fri Oct 27 15:34:01 2017
From: pschmitt at gmail.com (Peter Schmitt)
Date: Fri, 27 Oct 2017 16:34:01 -0600
Subject: [gdal-dev] VSI_CACHE, open files and memory growth
In-Reply-To: <6429058.xiqEkq9fc2@even-i700>
References: <CACkcqcX_C6NpROKGebQ-h4syiYn68wN6_Ay7qnOmwn5MUmweiw@mail.gmail.com>
 <6429058.xiqEkq9fc2@even-i700>
Message-ID: <CACkcqcVFfrZSZue5Z8kMAPHBN7=csWrD25aWVS9JYUSFnMNJaQ@mail.gmail.com>

On Fri, Oct 27, 2017 at 4:14 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Peter,
>
>
>
> > I'm using MapServer-7.0.6 built with GDAL-2.2.2. Is VSI_CACHE_SIZE the
>
> > cache size per process? per file handle?
>
>
>
> Per-file handle :
>
> """
>
> The default size of caching for each file is 25 MB, and
>
> can be controlled with the VSI_CACHE_SIZE configuration option (value in
> bytes).
>
> Content in that cache is discarded when the file handle is closed.
>
> """
>
> ( http://gdal.org/gdal_virtual_file_systems.html#gdal_
> virtual_file_systems_vsicache )
>
>
>
> So with CLOSE_CONNECTION=DEFER, what you observed is logical.
>
> CLOSE_CONNECTION=DEFER could probably be improved with a least recently
> used cache to maintain
>
> the maximum number of simultaneously opened datasets to a reasonable
> amount.
>
>
>

Ah, thanks Even!  I should have read the docs more carefully!


> Alternatively with GDAL trunk, for /vsicurl/ and related file systems, you
> can also
>
> tune a global cache
>
> """
>
> In addition, a global least-recently-used cache of 16 MB shared among all
>
> downloaded content is enabled by default, and content in it may be reused
>
> after a file handle has been closed and reopen. Starting with GDAL 2.3, the
>
> size of this global LRU cache can be modified by setting the configuration
>
> option CPL_VSIL_CURL_CACHE_SIZE (in bytes).
>
> """
>
> ( http://gdal.org/gdal_virtual_file_systems.html#gdal_
> virtual_file_systems_vsicurl )
>
>
>
Nice, this will be helpful!

Thanks again,
Pete
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/77c8290c/attachment.html>

From chris.marsh at usask.ca  Fri Oct 27 22:38:39 2017
From: chris.marsh at usask.ca (Chris Marsh)
Date: Fri, 27 Oct 2017 23:38:39 -0600
Subject: [gdal-dev] sprintf different exception specified
Message-ID: <CAFgDerH=Otrhsh6htDeajGECvEwsg7JKT-PERVukVJww3eFTsg@mail.gmail.com>

Hi,
I'm trying to build GDAL 2.2.x, including most recent git, and I'm running
into the following error.
I've tried adding throw() to the end of this line, but it just results in
more (and bizarre) errors.

Would appreciate any insight on how to proceed.

Cheers
Chris


In file included from
> /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/gcore/gdal_frmts.h:34:0,
>                  from mbtilesdataset.cpp:29:
> /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port.h:1101:85:
> error: declaration of 'int sprintf(char*, const char*, ...)' has a
> different exception specifier
>      #define CPL_WARN_DEPRECATED(x)                       __attribute__
> ((deprecated))
>
>            ^
> /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port.h:1121:5:
> note: in expansion of macro 'CPL_WARN_DEPRECATED'
>      CPL_WARN_DEPRECATED("Use snprintf() or CPLsnprintf() instead");
>      ^
> In file included from
> /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port.h:137:0,
>                  from
> /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/gcore/gdal_frmts.h:34,
>                  from mbtilesdataset.cpp:29:
> /usr/include/stdio.h:364:12: error: from previous declaration 'int
> sprintf(char*, const char*, ...) throw ()'
>  extern int sprintf (char *__restrict __s,
>             ^
> In file included from /usr/include/features.h:375:0,
>                  from /usr/include/stdio.h:27,
>                  from
> /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port.h:137,
>                  from
> /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/gcore/gdal_frmts.h:34,
>                  from mbtilesdataset.cpp:29:



gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/cvmfs/
soft.computecanada.ca/nix/store/lvjwgn6hpngyy6k4xqcqa9h2cxy3fl30-gfortran-5.4.0/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper
Target: x86_64-unknown-linux-gnu
Configured with:
Thread model: posix
gcc version 5.4.0 (GCC)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171027/2ee56f99/attachment.html>

From even.rouault at spatialys.com  Sat Oct 28 01:17:12 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 28 Oct 2017 10:17:12 +0200
Subject: [gdal-dev] sprintf different exception specified
In-Reply-To: <CAFgDerH=Otrhsh6htDeajGECvEwsg7JKT-PERVukVJww3eFTsg@mail.gmail.com>
References: <CAFgDerH=Otrhsh6htDeajGECvEwsg7JKT-PERVukVJww3eFTsg@mail.gmail.com>
Message-ID: <15098962.9qtD3csLdy@even-i700>

Chris,

There must be something unusual with the system you build on. Is it possible to get an image 
of it ?

Anyway, you can probably workaround the issue with

CXXFLAGS="-DDONT_DEPRECATE_SPRINTF" ./configure [...]

Normally configure has a check to automatically define DONT_DEPRECATE_SPRINTF on 
systems where errors such as the one you get occur, but for some reason it doesn't work 
here. 

Even

> Hi,
> I'm trying to build GDAL 2.2.x, including most recent git, and I'm running
> into the following error.
> I've tried adding throw() to the end of this line, but it just results in
> more (and bizarre) errors.
> 
> Would appreciate any insight on how to proceed.
> 
> Cheers
> Chris
> 
> 
> In file included from
> 
> > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/gcore/gdal_fr
> > mts.h:34:0,> 
> >                  from mbtilesdataset.cpp:29:
> > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port
> > .h:1101:85: error: declaration of 'int sprintf(char*, const char*, ...)'
> > has a different exception specifier
> > 
> >      #define CPL_WARN_DEPRECATED(x)                       __attribute__
> > 
> > ((deprecated))
> > 
> >            ^
> > 
> > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port
> > .h:1121:5: note: in expansion of macro 'CPL_WARN_DEPRECATED'
> > 
> >      CPL_WARN_DEPRECATED("Use snprintf() or CPLsnprintf() instead");
> >      ^
> > 
> > In file included from
> > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port
> > .h:137:0,> 
> >                  from
> > 
> > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/gcore/gdal_fr
> > mts.h:34,> 
> >                  from mbtilesdataset.cpp:29:
> > /usr/include/stdio.h:364:12: error: from previous declaration 'int
> > sprintf(char*, const char*, ...) throw ()'
> > 
> >  extern int sprintf (char *__restrict __s,
> >  
> >             ^
> > 
> > In file included from /usr/include/features.h:375:0,
> > 
> >                  from /usr/include/stdio.h:27,
> >                  from
> > 
> > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/port/cpl_port
> > .h:137,> 
> >                  from
> > 
> > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/GDAL/gdal/gcore/gdal_fr
> > mts.h:34,> 
> >                  from mbtilesdataset.cpp:29:
> gcc -v
> Using built-in specs.
> COLLECT_GCC=gcc
> COLLECT_LTO_WRAPPER=/cvmfs/
> soft.computecanada.ca/nix/store/lvjwgn6hpngyy6k4xqcqa9h2cxy3fl30-gfortran-5.
> 4.0/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper Target:
> x86_64-unknown-linux-gnu
> Configured with:
> Thread model: posix
> gcc version 5.4.0 (GCC)


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/fae73726/attachment-0001.html>

From ari.jolma at gmail.com  Sat Oct 28 02:30:37 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 28 Oct 2017 12:30:37 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
Message-ID: <9e495955-5e27-da96-d683-38abd1216905@gmail.com>

Ari Jolma kirjoitti 27.10.2017 klo 19:38:
>
>
> * I'm testing against existing ArcGIS, GeoServer and MapServer servers 
> on the net

Version 1.0.0 seems to be usually understandable/ok but strangeness 
begins with 1.1

For example this request to a MapServer WCS (I'm not responsible for 
that server so don't know much about it), which is generated in the 
driver during a DescribeCoverage for the coverage,

http://194.66.252.155/cgi-bin/BGS_EMODnet_bathymetry/ows?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCoverage&IDENTIFIER=BGS_EMODNET_CentralMed-MCol&FORMAT=image%2Ftiff&BOUNDINGBOX=9.833333335,46.183333325,9.837500005,46.187499995,urn:ogc:def:crs:EPSG::4326&RangeSubset=band

gets the response

WCS server error. Requested BBOX 
(46.183333325,9.833333335,46.187499995,9.837500005) is outside requested 
coverage BBOX (9.83125,30.01040372,22.23542659,46.18958333)

If I change the order of X and Y in the bounding box in the request, the 
reply is ok. I'm thinking MapServer is in error here, for example 
similar request to ArcGIS WCS server

http://paikkatieto.ymparisto.fi/arcgis/services/Testit/Velmu_wcs_testi/MapServer/WCSServer?SERVICE=WCS&VERSION=1.1.2&REQUEST=GetCoverage&IDENTIFIER=1&FORMAT=image%2FGeoTIFF&BOUNDINGBOX=61686.0383772501,7302181.14320843,61706.0383772501,7302201.14320843,urn:ogc:def:crs:EPSG::3067&RangeSubset=Field_1

gets an ok response.

The case of GeoServer is also strange

https://msp.smartsea.fmi.fi/geoserver/wcs?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCoverage&IDENTIFIER=smartsea%3Aeusm2016&FORMAT=image%2Ftiff&BOUNDINGBOX=61610,7303970,61630,7303990,urn:ogc:def:crs:EPSG::3067&RangeSubset=contents

-- GeoServer does not seem to understand that GDAL wants only a 2 x 2 
sample - the response is huge (the whole geotiff?).

Ari


From jukka.rahkonen at maanmittauslaitos.fi  Sat Oct 28 03:10:44 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Sat, 28 Oct 2017 03:10:44 -0700 (MST)
Subject: [gdal-dev] WCS driver
In-Reply-To: <9e495955-5e27-da96-d683-38abd1216905@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
 <9e495955-5e27-da96-d683-38abd1216905@gmail.com>
Message-ID: <1509185444964-0.post@n6.nabble.com>

Ari Jolma-2 wrote
> Ari Jolma kirjoitti 27.10.2017 klo 19:38:
>>
>>
>> * I'm testing against existing ArcGIS, GeoServer and MapServer servers 
>> on the net
> 
> Version 1.0.0 seems to be usually understandable/ok but strangeness 
> begins with 1.1
> 
> For example this request to a MapServer WCS (I'm not responsible for 
> that server so don't know much about it), which is generated in the 
> driver during a DescribeCoverage for the coverage,
> 
> http://194.66.252.155/cgi-bin/BGS_EMODnet_bathymetry/ows?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCoverage&IDENTIFIER=BGS_EMODNET_CentralMed-MCol&FORMAT=image%2Ftiff&BOUNDINGBOX=9.833333335,46.183333325,9.837500005,46.187499995,urn:ogc:def:crs:EPSG::4326&RangeSubset=band
> 
> gets the response
> 
> WCS server error. Requested BBOX 
> (46.183333325,9.833333335,46.187499995,9.837500005) is outside requested 
> coverage BBOX (9.83125,30.01040372,22.23542659,46.18958333)
> 
> If I change the order of X and Y in the bounding box in the request, the 
> reply is ok. I'm thinking MapServer is in error here, for example 
> similar request to ArcGIS WCS server
> 
> http://paikkatieto.ymparisto.fi/arcgis/services/Testit/Velmu_wcs_testi/MapServer/WCSServer?SERVICE=WCS&VERSION=1.1.2&REQUEST=GetCoverage&IDENTIFIER=1&FORMAT=image%2FGeoTIFF&BOUNDINGBOX=61686.0383772501,7302181.14320843,61706.0383772501,7302201.14320843,urn:ogc:def:crs:EPSG::3067&RangeSubset=Field_1
> 
> gets an ok response.
> 
> The case of GeoServer is also strange
> 
> https://msp.smartsea.fmi.fi/geoserver/wcs?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCoverage&IDENTIFIER=smartsea%3Aeusm2016&FORMAT=image%2Ftiff&BOUNDINGBOX=61610,7303970,61630,7303990,urn:ogc:def:crs:EPSG::3067&RangeSubset=contents
> 
> -- GeoServer does not seem to understand that GDAL wants only a 2 x 2 
> sample - the response is huge (the whole geotiff?).
> 
> Ari

Hi,

BoundingBoxes in WCS 1.1.x and 2.x must follow the axis order of the
coordinate system, so with urn:ogc:def:crs:EPSG::4326 it must be
latitude-longitude. EPSG:3067 is natively an easting-northing system and
therefore it can make you believe that everything works fine but if you test
the Finnish services also with northing-easting system EPSG:2393 you may get
more frustration.

An open Geoserver with a DEM of Finland is available for testing at
http://avoindata.maanmittauslaitos.fi/geoserver/wcs?service=WCS&version=2.0.1&request=GetCapabilities

-Jukka Rahkonen-




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From ari.jolma at gmail.com  Sat Oct 28 07:39:19 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sat, 28 Oct 2017 17:39:19 +0300
Subject: [gdal-dev] WCS driver
In-Reply-To: <1509185444964-0.post@n6.nabble.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
 <9e495955-5e27-da96-d683-38abd1216905@gmail.com>
 <1509185444964-0.post@n6.nabble.com>
Message-ID: <90913025-afc0-f5cc-4fed-0f75853ebaf6@gmail.com>

jratike80 kirjoitti 28.10.2017 klo 13:10:

> Ari Jolma-2 wrote
>>
>> For example this request to a MapServer WCS (I'm not responsible for
>> that server so don't know much about it), which is generated in the
>> driver during a DescribeCoverage for the coverage,
>>
>> http://194.66.252.155/cgi-bin/BGS_EMODnet_bathymetry/ows?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCoverage&IDENTIFIER=BGS_EMODNET_CentralMed-MCol&FORMAT=image%2Ftiff&BOUNDINGBOX=9.833333335,46.183333325,9.837500005,46.187499995,urn:ogc:def:crs:EPSG::4326&RangeSubset=band
>>
>> gets the response
>>
>> WCS server error. Requested BBOX
>> (46.183333325,9.833333335,46.187499995,9.837500005) is outside requested
>> coverage BBOX (9.83125,30.01040372,22.23542659,46.18958333)
>>
>> If I change the order of X and Y in the bounding box in the request, the
>> reply is ok.
> Hi,
>
> BoundingBoxes in WCS 1.1.x and 2.x must follow the axis order of the
> coordinate system, so with urn:ogc:def:crs:EPSG::4326 it must be
> latitude-longitude.

ok, this is the famous confusion concerning axis order.

To me it seems that GDAL is correct since it determines the bounding box 
originally from GridCRS in CoverageDescription where the origin is said 
to be "9.833333335 46.187499995" (i.e., lon-lat). In the same GridCRS 
the CRS is stated to be "urn:ogc:def:crs:EPSG::4326" - so the axis order 
could be assumed correct. Interestingly in the same CoverageDescription 
MapServer says the LowerCorner of the "urn:ogc:def:crs:EPSG::4326" 
BoundingBox is "30.01040372 9.83125" (i.e., lat-lon). So it seems to me 
that MapServer is contradicting itself.

Reading MapServer code, it seems to be based on the idea that x,y is 
always east,north and when it writes BoundingBox, it swaps x and y if 
the projection is inverted (like 4326). It does not do that when it 
writes GridCRS.

GDAL seems to be based on the idea that x,y is what the projection says 
(what the projection says could be found out with 
OGRSpatialReference::GetAxis - however, for 4326 it does not say 
anything). This is my impression from WCS driver - I see there's a lot 
on this issue in the GML driver page.

A fix could be a WCS driver option "swap axis order for bounding box". 
But since I think that is not fixing the root cause (lying twice does 
not make you a truth speaker), also an option "swap axis order when 
reading GridOrigin" is needed. Isn't this fun?


>   EPSG:3067 is natively an easting-northing system and
> therefore it can make you believe that everything works fine but if you test
> the Finnish services also with northing-easting system EPSG:2393 you may get
> more frustration.
I'm sure you mean 'fun'.
>
> An open Geoserver with a DEM of Finland is available for testing at
> http://avoindata.maanmittauslaitos.fi/geoserver/wcs?service=WCS&version=2.0.1&request=GetCapabilities

I'll try the axis order with that. The geoserver at msp.smartsea.fmi.fi 
is mine and I'm not sure how well I can manage a geoserver.

Ari

>
> -Jukka Rahkonen-
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From miurahr at linux.com  Sat Oct 28 07:52:31 2017
From: miurahr at linux.com (Hiroshi Miura)
Date: Sat, 28 Oct 2017 23:52:31 +0900
Subject: [gdal-dev] About CMake build again
In-Reply-To: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
Message-ID: <445e75b0-2a22-9034-a048-961255ae1174@linux.com>

Hi,

Dmitry, Thank you for starting the thread.
I'm Hiroshi, a newbie as user and dev of GDAL. I'm OSM mapper.

On 2017/10/28 06:06, Dmitry Baryshnikov wrote:
>
> As Even said it make sense to move discussion from this ticket (https://trac.osgeo.org/gdal/ticket/7080) to the list.
>

The ticket (https://trac.osgeo.org/gdal/ticket/7080) is my proposal.
I put it because there are significant improvements in CMake ecosystem in recent days.

-  CMake support in Visual Studio 2017.
  (https://blogs.msdn.microsoft.com/vcblog/2016/10/05/cmake-support-in-visual-studio/)
      VS17 bundles CMake 3.9 into their tool chains.
      It helps editing code and debugging a C/C++ project with CMake.

- JetBrains CLion only supports CMake.
   CLion appeared in 2014.   Current CLion 2017.2 bundles CMake 3.8.


When I made a small contribution for GML driver recently,
I had a frustration to make changes on GDAL source tree.
If changing code and  unit test cycle become speedy, it would be better.

It is because I want to improve a development experience using C/C++ IDE.
After short research, I reached a conclusion to use CMake with GDAL source tree,
and work with CLion IDE on my Linux laptop.

> Finally:
>
> Find the link to page with the CMake in GDAL discussion - https://trac.osgeo.org/gdal/wiki/CMake
>

Wiki news point https://github.com/aashish24/gdal-svn/tree/cmake4gdal  as a  repository.

I tried it and catch up current GDAL  tree.
Unfortunately I didn't know Borsch project,
and a dependency issue discussed here in some years ago.

I eventually  updated cmake4gdal scripts to be able to read from CLion IDE on Linux/Windows.
https://github.com/miurahr/gdal/tree/compile_with_cmake

It can build a library with many drivers, python/perl bindings on Linux
and update vagrant script  to prepare clean compilation environment.
It also run autotest from CMake by specifying --target autotest

VS17 preview 2.0 can open this source tree as a VS native project on Windows10.
(compilation is not succeed)

Hiroshi Miura
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/4ccd52d6/attachment.html>

From p.baumann at jacobs-university.de  Sat Oct 28 08:28:00 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Sat, 28 Oct 2017 17:28:00 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <90913025-afc0-f5cc-4fed-0f75853ebaf6@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
 <9e495955-5e27-da96-d683-38abd1216905@gmail.com>
 <1509185444964-0.post@n6.nabble.com>
 <90913025-afc0-f5cc-4fed-0f75853ebaf6@gmail.com>
Message-ID: <7215d233-3a5e-cb0f-a220-8ed014f5c6ca@jacobs-university.de>

FYI, this is one of the shortcomings of WCS 1.x. Remedied in WCS 2.

-Peter


On 10/28/2017 04:39 PM, Ari Jolma wrote:
> jratike80 kirjoitti 28.10.2017 klo 13:10:
>
>> Ari Jolma-2 wrote
>>>
>>> For example this request to a MapServer WCS (I'm not responsible for
>>> that server so don't know much about it), which is generated in the
>>> driver during a DescribeCoverage for the coverage,
>>>
>>> http://194.66.252.155/cgi-bin/BGS_EMODnet_bathymetry/ows?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCoverage&IDENTIFIER=BGS_EMODNET_CentralMed-MCol&FORMAT=image%2Ftiff&BOUNDINGBOX=9.833333335,46.183333325,9.837500005,46.187499995,urn:ogc:def:crs:EPSG::4326&RangeSubset=band
>>>
>>>
>>> gets the response
>>>
>>> WCS server error. Requested BBOX
>>> (46.183333325,9.833333335,46.187499995,9.837500005) is outside requested
>>> coverage BBOX (9.83125,30.01040372,22.23542659,46.18958333)
>>>
>>> If I change the order of X and Y in the bounding box in the request, the
>>> reply is ok.
>> Hi,
>>
>> BoundingBoxes in WCS 1.1.x and 2.x must follow the axis order of the
>> coordinate system, so with urn:ogc:def:crs:EPSG::4326 it must be
>> latitude-longitude.
>
> ok, this is the famous confusion concerning axis order.
>
> To me it seems that GDAL is correct since it determines the bounding box
> originally from GridCRS in CoverageDescription where the origin is said to be
> "9.833333335 46.187499995" (i.e., lon-lat). In the same GridCRS the CRS is
> stated to be "urn:ogc:def:crs:EPSG::4326" - so the axis order could be assumed
> correct. Interestingly in the same CoverageDescription MapServer says the
> LowerCorner of the "urn:ogc:def:crs:EPSG::4326" BoundingBox is "30.01040372
> 9.83125" (i.e., lat-lon). So it seems to me that MapServer is contradicting
> itself.
>
> Reading MapServer code, it seems to be based on the idea that x,y is always
> east,north and when it writes BoundingBox, it swaps x and y if the projection
> is inverted (like 4326). It does not do that when it writes GridCRS.
>
> GDAL seems to be based on the idea that x,y is what the projection says (what
> the projection says could be found out with OGRSpatialReference::GetAxis -
> however, for 4326 it does not say anything). This is my impression from WCS
> driver - I see there's a lot on this issue in the GML driver page.
>
> A fix could be a WCS driver option "swap axis order for bounding box". But
> since I think that is not fixing the root cause (lying twice does not make you
> a truth speaker), also an option "swap axis order when reading GridOrigin" is
> needed. Isn't this fun?
>
>
>>   EPSG:3067 is natively an easting-northing system and
>> therefore it can make you believe that everything works fine but if you test
>> the Finnish services also with northing-easting system EPSG:2393 you may get
>> more frustration.
> I'm sure you mean 'fun'.
>>
>> An open Geoserver with a DEM of Finland is available for testing at
>> http://avoindata.maanmittauslaitos.fi/geoserver/wcs?service=WCS&version=2.0.1&request=GetCapabilities
>>
>
> I'll try the axis order with that. The geoserver at msp.smartsea.fmi.fi is
> mine and I'm not sure how well I can manage a geoserver.
>
> Ari
>
>>
>> -Jukka Rahkonen-
>>
>>
>>
>>
>> -- 
>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)



From chris.marsh at usask.ca  Sat Oct 28 09:20:11 2017
From: chris.marsh at usask.ca (Chris Marsh)
Date: Sat, 28 Oct 2017 10:20:11 -0600
Subject: [gdal-dev] sprintf different exception specified
In-Reply-To: <15098962.9qtD3csLdy@even-i700>
References: <CAFgDerH=Otrhsh6htDeajGECvEwsg7JKT-PERVukVJww3eFTsg@mail.gmail.com>
 <15098962.9qtD3csLdy@even-i700>
Message-ID: <CAFgDerEUfwZS6eMoFpWQ2bDPLJ7wk33=Zz6KzG-OSTD2S-Ubzw@mail.gmail.com>

Hi,

Ya, certainly feels that way... Probably not possible to get an image, it's
one of Compute Canada's machines, and so not something I am in charge of. I
could probably find out specific details if that helps?

That does correct the problem, thanks!

Cheers
Chris



On 28 October 2017 at 02:17, Even Rouault <even.rouault at spatialys.com>
wrote:

> Chris,
>
>
>
> There must be something unusual with the system you build on. Is it
> possible to get an image of it ?
>
>
>
> Anyway, you can probably workaround the issue with
>
>
>
> CXXFLAGS="-DDONT_DEPRECATE_SPRINTF" ./configure [...]
>
>
>
> Normally configure has a check to automatically define
> DONT_DEPRECATE_SPRINTF on systems where errors such as the one you get
> occur, but for some reason it doesn't work here.
>
>
>
> Even
>
>
>
> > Hi,
>
> > I'm trying to build GDAL 2.2.x, including most recent git, and I'm
> running
>
> > into the following error.
>
> > I've tried adding throw() to the end of this line, but it just results in
>
> > more (and bizarre) errors.
>
> >
>
> > Would appreciate any insight on how to proceed.
>
> >
>
> > Cheers
>
> > Chris
>
> >
>
> >
>
> > In file included from
>
> >
>
> > > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/
> GDAL/gdal/gcore/gdal_fr
>
> > > mts.h:34:0,>
>
> > > from mbtilesdataset.cpp:29:
>
> > > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/
> GDAL/gdal/port/cpl_port
>
> > > .h:1101:85: error: declaration of 'int sprintf(char*, const char*,
> ...)'
>
> > > has a different exception specifier
>
> > >
>
> > > #define CPL_WARN_DEPRECATED(x) __attribute__
>
> > >
>
> > > ((deprecated))
>
> > >
>
> > > ^
>
> > >
>
> > > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/
> GDAL/gdal/port/cpl_port
>
> > > .h:1121:5: note: in expansion of macro 'CPL_WARN_DEPRECATED'
>
> > >
>
> > > CPL_WARN_DEPRECATED("Use snprintf() or CPLsnprintf() instead");
>
> > > ^
>
> > >
>
> > > In file included from
>
> > > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/
> GDAL/gdal/port/cpl_port
>
> > > .h:137:0,>
>
> > > from
>
> > >
>
> > > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/
> GDAL/gdal/gcore/gdal_fr
>
> > > mts.h:34,>
>
> > > from mbtilesdataset.cpp:29:
>
> > > /usr/include/stdio.h:364:12: error: from previous declaration 'int
>
> > > sprintf(char*, const char*, ...) throw ()'
>
> > >
>
> > > extern int sprintf (char *__restrict __s,
>
> > >
>
> > > ^
>
> > >
>
> > > In file included from /usr/include/features.h:375:0,
>
> > >
>
> > > from /usr/include/stdio.h:27,
>
> > > from
>
> > >
>
> > > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/
> GDAL/gdal/port/cpl_port
>
> > > .h:137,>
>
> > > from
>
> > >
>
> > > /home/cmarsh/CHM/build-release/lib/GDAL-prefix/src/
> GDAL/gdal/gcore/gdal_fr
>
> > > mts.h:34,>
>
> > > from mbtilesdataset.cpp:29:
>
> > gcc -v
>
> > Using built-in specs.
>
> > COLLECT_GCC=gcc
>
> > COLLECT_LTO_WRAPPER=/cvmfs/
>
> > soft.computecanada.ca/nix/store/lvjwgn6hpngyy6k4xqcqa9h2cxy3fl
> 30-gfortran-5.
>
> > 4.0/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper Target:
>
> > x86_64-unknown-linux-gnu
>
> > Configured with:
>
> > Thread model: posix
>
> > gcc version 5.4.0 (GCC)
>
>
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/9be152e5/attachment.html>

From chris.marsh at usask.ca  Sat Oct 28 09:26:37 2017
From: chris.marsh at usask.ca (Chris Marsh)
Date: Sat, 28 Oct 2017 10:26:37 -0600
Subject: [gdal-dev] ERROR 6: Failed to initialize PROJ.4 with "..."
In-Reply-To: <CAFgDerGdabK3Jkq+50Ex-zEujUrmQxuPTD6R_SaPBjrYmXNvzw@mail.gmail.com>
References: <CAFgDerE_NOkzpbrpXjAWJWYJELw=vMx-SK4nYCnnob-hi88v2Q@mail.gmail.com>
 <2594475.UVvFWGEU6N@even-i700>
 <CAFgDerEp+A9K4xJjJ14=A+QgvdtsZwXEsb132d4UU+KPhJwWZQ@mail.gmail.com>
 <3822135.iOQBfPJlNC@even-i700>
 <CAFgDerGdabK3Jkq+50Ex-zEujUrmQxuPTD6R_SaPBjrYmXNvzw@mail.gmail.com>
Message-ID: <CAFgDerEyPuTuP8ZiEjehw3kZZ46Eo+TTbMGKHdSnO1oLMjKi6A@mail.gmail.com>

Hi all,

I posted this to the proj4 mailing list and they seem pretty convinced this
is a GDAL problem.

I have tried the September gdal 2.2.2 build as well as the latest GDAL git
build, and finally have them building thanks to Even's help.

However, now GDAL just segfaults within the pj_init_ctx. As a reminder,
it's something odd about this env as this work works flawlessly on multiple
computers.

Would appreciate any help,

Cheers
Chris

[debug]: Reading forcing file data
src/tcmalloc.cc:284] Attempt to free invalid pointer 0x2aaaafa4df20

Thread 1 received signal SIGABRT, Aborted.
0x00002aaac4900214 in raise () from /cvmfs/
soft.computecanada.ca/nix/var/nix/profiles/16.09/lib/libc.so.6
(gdb) bt
#0  0x00002aaac4900214 in raise () from /cvmfs/
soft.computecanada.ca/nix/var/nix/profiles/16.09/lib/libc.so.6
#1  0x00002aaac490167a in abort () from /cvmfs/
soft.computecanada.ca/nix/var/nix/profiles/16.09/lib/libc.so.6
#2  0x00002aaab5bd5748 in tcmalloc::Log (mode=mode at entry=tcmalloc::kCrash,
filename=filename at entry=0x2aaab5bea66e "src/tcmalloc.cc", line=line at entry=284,
a=..., b=..., c=..., d=...) at src/internal_logging.cc:118
#3  0x00002aaab5bca14f in (anonymous namespace)::InvalidFree
(ptr=<optimized out>) at src/tcmalloc.cc:284
#4  0x00002aaab5fe7dde in pj_dealloc (ptr=<optimized out>) at
pj_malloc.c:129
#5  0x00002aaab5fe7ed1 in pj_default_destructor (P=P at entry=0x13c2b40,
errlev=errlev at entry=-7) at pj_malloc.c:198
#6  0x00002aaab5fe7234 in pj_init_ctx (ctx=ctx at entry=0x2aaab6219b20
<default_context>, argc=<optimized out>, argv=argv at entry=0x7fffffff7a50) at
pj_init.c:672
#7  0x00002aaab5fe7615 in pj_init_plus_ctx (ctx=0x2aaab6219b20
<default_context>, definition=0x24863340 "+proj=aea +lat_1=20 +lat_2=60
+lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m
+no_defs ")
    at pj_init.c:411
#8  0x00002aaab4a71dc8 in OCTProj4NormalizeInternal(char const*) () from
/home/cmarsh/CHM/build-release/lib/gdal/lib/libgdal.so.20
#9  0x00002aaab4a71ee6 in OCTProj4Normalize () from
/home/cmarsh/CHM/build-release/lib/gdal/lib/libgdal.so.20
#10 0x00002aaab4a530ec in OGRSpatialReference::importFromProj4(char const*)
() from /home/cmarsh/CHM/build-release/lib/gdal/lib/libgdal.so.20
#11 0x0000000000520a61 in core::config_forcing (this=this at entry=0x7fffffffab50,
value=...) at /home/cmarsh/CHM/src/core.cpp:311
#12 0x0000000000527041 in core::init (this=this at entry=0x7fffffffab50,
argc=argc at entry=3, argv=argv at entry=0x7fffffffafe8) at
/home/cmarsh/CHM/src/core.cpp:1119
#13 0x00000000004f502f in main (argc=3, argv=0x7fffffffafe8) at
/home/cmarsh/CHM/src/main.cpp:17


Chris Marsh
PhD Candidate
chrismarsh.ca

121 Research Drive
University of Saskatchewan

On 19 October 2017 at 13:41, Chris Marsh <chris.marsh at usask.ca> wrote:

> echo 2 49 |  /build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
> -t_srs "+proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0
> +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" --debug on
> OGRCT: PROJ >= 4.8.0 features enabled
> OGRCT: Using locale-safe proj version
> OGRCT: Source: +proj=longlat +datum=WGS84 +no_defs
> OGRCT: Target: +proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0
> +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
> OGRCT: Source: +proj=aea +lat_1=20 +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0
> +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs
> OGRCT: Target: +proj=longlat +datum=WGS84 +no_defs
> 5634252.86902731 4265258.45946341 0
>
>
>
> On 19 October 2017 at 13:34, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> On jeudi 19 octobre 2017 13:19:52 CEST Chris Marsh wrote:
>> > Hi,
>> >
>> > I build GDAL by specifying --with-static-proj4  on the configure command
>> > line. This does not seem to have resolved the problem.
>> >
>> > echo 2 49 | build-release/lib/gdal/bin/gdaltransform -s_srs EPSG:4326
>> >
>> > > -t_srs EPSG:32632
>> > > -11818.9526229417 5451106.95020125 0
>> >
>>
>> OK, so GDAL and proj.4 have some minimum level of functionnality
>>
>> And what about
>>
>> echo 2 49 |  gdaltransform -s_srs EPSG:4326 -t_srs "+proj=aea +lat_1=20
>> +lat_2=60 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80
>> +towgs84=0,0,0,0,0,0,0 +units=m +no_defs" --debug on
>>
>>
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/5957a7af/attachment-0001.html>

From even.rouault at spatialys.com  Sat Oct 28 09:28:11 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 28 Oct 2017 18:28:11 +0200
Subject: [gdal-dev] Split of GeoJSON driver into GeoJSON,
	ESRIJSON and TopoJSON drivers
Message-ID: <3484613.GMMTxHoF9t@even-i700>

Hi,

FYI, in trunk, I've split the GeoJSON driver into 3 distinct GeoJSON, ESRIJSON and TopoJSON 
drivers.

This is to avoid identifying ESRI Json files and ESRI feature service URL, or TopoJSON files, as 
GeoJSON, which is inappropriate. In particular only true GeoJSON files can be created and 
updated currently, so having distinct drivers reflects more accurately the actual capabilities.

Besides the driver identification being different, the impact should be minimal. The only 
other intented visible change is that ESRI Json files had previously a layer named "GeoJSON". 
The new layer name will be the base name of the file (in case of a file, similarly to the logic of 
the GeoJSON driver), or otherwise "ESRIJSON"

Let me know if you find issues related to that change.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/b2f2080d/attachment.html>

From hellik at web.de  Sat Oct 28 15:16:32 2017
From: hellik at web.de (Helmut Kudrnovsky)
Date: Sat, 28 Oct 2017 15:16:32 -0700 (MST)
Subject: [gdal-dev] OGC announces a new standard that improves the way
 information is referenced to the earth
Message-ID: <1509228992087-0.post@n6.nabble.com>

Fyi

http://www.opengeospatial.org/pressroom/pressreleases/2656

"The goal of DGGS is to enable rapid assembly of spatial data without the
difficulties of working with projected coordinate reference systems. The OGC
DGGS Abstract Specification standard defines the conceptual model and a set
of rules for building highly efficient architectures for spatial data
storage, integration and analytics. ....."



-----
best regards
Helmut
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From bishop.dev at gmail.com  Sat Oct 28 15:21:22 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 29 Oct 2017 01:21:22 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <445e75b0-2a22-9034-a048-961255ae1174@linux.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <445e75b0-2a22-9034-a048-961255ae1174@linux.com>
Message-ID: <8509a3a1-8b4a-6f46-0acb-0b2b84bf42fa@gmail.com>

Hi Hiroshi,

I tried to test you solution:

    $ git clone --depth 1 https://github.com/miurahr/gdal.git

    $ cd gdal/

    $ mkdir build

    $ cd build

    $ cmake ..

    -- The C compiler identification is AppleClang 9.0.0.9000038

    [ Skipped ...]

    CMake Error at
    /Applications/CMake.app/Contents/share/cmake-3.8/Modules/FindPackageHandleStandardArgs.cmake:137
    (message):
       Could NOT find QHULL (missing: QHULL_LIBRARY QHULL_INCLUDE_DIR)
    Call Stack (most recent call first):
    /Applications/CMake.app/Contents/share/cmake-3.8/Modules/FindPackageHandleStandardArgs.cmake:377
    (_FPHSA_FAILURE_MESSAGE)
       cmake/FindQHULL.cmake:41 (FIND_PACKAGE_HANDLE_STANDARD_ARGS)
       gdal/alg/CMakeLists.txt:139 (find_package)


    -- Configuring incomplete, errors occurred!


The QHULL is not mandatory for GDAL build and should not stop 
configuring at that moment.


Fast review you solution:

1 Don't see Python 2/3 support (CMake will choose default Python). How 
to configure to build Python 2 or Python 3 bindings? Don't see Python 
bindings install steps.

2. Loose some drivers (for example GPKG) as of result manually added 
here 
(https://github.com/miurahr/gdal/blob/compile_with_cmake/gdal/ogr/ogrsf_frmts/CMakeLists.txt) 
- in compare of my idea automatically add drivers 
(https://github.com/nextgis-borsch/lib_gdal/blob/master/drivers/vector/CMakeLists.txt)

3. In GML driver you add EXPAT and Xerces simultaneously - as I remember 
this options are mutually exclusive (may be I'm wrong here)

4. There are mandatory drivers which may be disabled in your solution 
(GeoJSON, ESRI Shape, Map Info ...)

5. There are  drivers which cannot be disabled in your solution but this 
option must be (ilwis, r, til, saga, couchdb ...)

6. Again dependency problems. For example plscene, plmosaic depends on 
CURL, but there is no check if CURL is found 
(https://github.com/miurahr/gdal/blob/compile_with_cmake/gdal/ogr/ogrsf_frmts/plscenes/CMakeLists.txt). 
Rasterlite ans OSM drivers depends on SQLite, ...

7. Self driver dependency - for example mbtiles depends on GPKG and also 
on SQLite but no checks exist 
(https://github.com/miurahr/gdal/blob/compile_with_cmake/gdal/frmts/mbtiles/CMakeLists.txt) 


8. A lot of command line utilities not build - gdamanage, gdalenhance, 
gnmmanage, gdalsrsinfo ...)

9. Your make system checks via configure.cmake in port directory 
(https://github.com/miurahr/gdal/blob/compile_with_cmake/gdal/port/CMakeLists.txt#L32) 
as the result you hides the variables set by CMake from other parts of 
build (ogr, frmts, apps, etc).

10. Hardcoded paths - for example 
https://github.com/miurahr/gdal/blob/compile_with_cmake/CMakeLists.txt#L38

11. No summary output after configure.

12. Install paths on Windows are strange 
(https://github.com/miurahr/gdal/blob/compile_with_cmake/gdal/CMakeLists.txt#L207-L224). 
It mast be some logic (as in my solution) or let CMake choose the right 
paths.


I would like to note that my solution 
(https://github.com/nextgis-borsch/lib_gdal) successfully builds on 
Windows (MSVC), Ubuntu, Mac OS, Android, iOS (in our build environment). 
Also for last two OS you need the special toolchains and dependency must 
support them too.  All check for dependencies are present in already 
cmaked drives, all command line utilities build, also bindings and 
pythons scripts installs in right places. It rather configurable via 
command line options or CMake GUI.


Best regards,
     Dmitry

28.10.17 17:52, Hiroshi Miura пишет:
> Hi,
>
> Dmitry, Thank you for starting the thread.
> I'm Hiroshi, a newbie as user and dev of GDAL. I'm OSM mapper.
>
> On 2017/10/28 06:06, Dmitry Baryshnikov wrote:
>> As Even said it make sense to move discussion from this ticket (https://trac.osgeo.org/gdal/ticket/7080) to the list.
>>
> The ticket (https://trac.osgeo.org/gdal/ticket/7080) is my proposal.
> I put it because there are significant improvements in CMake ecosystem in recent days.
>
> -  CMake support in Visual Studio 2017.
>    (https://blogs.msdn.microsoft.com/vcblog/2016/10/05/cmake-support-in-visual-studio/)
>        VS17 bundles CMake 3.9 into their tool chains.
>        It helps editing code and debugging a C/C++ project with CMake.
>
> - JetBrains CLion only supports CMake.
>     CLion appeared in 2014.   Current CLion 2017.2 bundles CMake 3.8.
>
>
> When I made a small contribution for GML driver recently,
> I had a frustration to make changes on GDAL source tree.
> If changing code and  unit test cycle become speedy, it would be better.
>
> It is because I want to improve a development experience using C/C++ IDE.
> After short research, I reached a conclusion to use CMake with GDAL source tree,
> and work with CLion IDE on my Linux laptop.
>
>> Finally:
>>
>> Find the link to page with the CMake in GDAL discussion - https://trac.osgeo.org/gdal/wiki/CMake
>>
> Wiki news point https://github.com/aashish24/gdal-svn/tree/cmake4gdal  as a  repository.
>
> I tried it and catch up current GDAL  tree.
> Unfortunately I didn't know Borsch project,
> and a dependency issue discussed here in some years ago.
>
> I eventually  updated cmake4gdal scripts to be able to read from CLion IDE on Linux/Windows.
> https://github.com/miurahr/gdal/tree/compile_with_cmake
>
> It can build a library with many drivers, python/perl bindings on Linux
> and update vagrant script  to prepare clean compilation environment.
> It also run autotest from CMake by specifying --target autotest
>
> VS17 preview 2.0 can open this source tree as a VS native project on Windows10.
> (compilation is not succeed)
>
> Hiroshi Miura
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/33c1e1f8/attachment.html>

From bradh at frogmouth.net  Sat Oct 28 16:39:22 2017
From: bradh at frogmouth.net (bradh at frogmouth.net)
Date: Sun, 29 Oct 2017 10:39:22 +1100
Subject: [gdal-dev] About CMake build again
In-Reply-To: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
Message-ID: <013101d35045$fc253a20$f46fae60$@frogmouth.net>

Is there a way to invoke that “do all the dependency work for me” (`find_anyproject`) from the cmake command line?

So if I clone your lib_gdal repo, it could build GDAL and any required dependencies?

Brad

 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/e3bedf9b/attachment.html>

From jdaniel at etresoft.com  Sat Oct 28 12:29:48 2017
From: jdaniel at etresoft.com (John Daniel)
Date: Sat, 28 Oct 2017 19:29:48 +0000
Subject: [gdal-dev] About CMake build again
In-Reply-To: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
Message-ID: <3ED30291-EB0A-421E-8C2C-C5C1DC48E03B@etresoft.com>

I have my own build system for GDAL and its dependencies. It uses whatever build system each project uses. CMake is, by far, the most problematic. Luckily, I can still use the original autotools-based KML.

If I understand correctly, CMake is going to require a complete restructuring of the project and a complete dependency on CMake for all dependencies. Can anyone explain how this would improve anything?

With the KML project and others, I have found CMake to be the most complicated and most problematic build system. When there is a problem, I'm helpless to resolve it on my own. The people who made the CMake scripts are equally helpless because they use a different platform. I build on a Mac with Xcode and target both macOS and iOS. Are the maintainers of the GDAL CMake build scripts going to have access to same beta versions of all the above that I am using?

I'm not an active member of the mailing list. I've been on different projects the past couple of years but was looking forward to working on GDAL-based projects full time next year. CMake will shut me out of the community entirely. I simply don't have time to master CMake just to build projects that had never required a similar level of mastery of autotools. Instead, I will be forced to stay on the last working version I have. I won't be able to contribute any fixes I make or new features like my boost replacement for GEOS and Spatialite.

If some people like CMake and it works on their platforms, great. Then let people choose what build tools they want and what they can support on their own platforms.

John Daniel
Etresoft, Inc.

Sent from my iPhone

On Oct 27, 2017, at 5:06 PM, Dmitry Baryshnikov <bishop.dev at gmail.com<mailto:bishop.dev at gmail.com>> wrote:


Hi,

As Even said it make sense to move discussion from this ticket (https://trac.osgeo.org/gdal/ticket/7080) to the list.

First of all I would like to make small introduction to Borsch project. Here it is some useful links:

* Borsch repository: https://github.com/nextgis-borsch/borsch

* Presentation on FOSS4G 2016: http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-presentation.pdf

* GDAL repository adapted for Borsch: https://github.com/nextgis-borsch/lib_gdal

Shortly speaking Borsch is 3 CMake scripts which add ability to include dependence library in one line of code.

It looks like:

find_anyproject(TIFF REQUIRED)

Certainly developer can add additional parameter to configure dependency in find_anyproject function.

Inside  find_anyproject work 2 cases:

1. First of all (by default, but can be overridden) CMake searches host system for dependency library (headers and lib files). This is usual CMake find_package (https://cmake.org/cmake/help/v3.0/command/find_package.html) with some additional logic to try different options for hard cases (like Qt).

2. If library not found, find_anyproject can get the sources or prebuild library from github.

So the GDAL or any other library can be build the normal way, but developer have additional features to configure build all libraries with one compiler and one set of compiler/linker settings (with some limits). Such way we can have rather complicated scenarios to build GDAL and dependencies.

Here it is several examples of benefits of this approach:

1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library for iOS as *.framework and for Android as *.so (arm7, arm64, i386, x86_64 architecture). I build all dependencies include GDAL statically and link in one fat library. The all code that do it: https://github.com/nextgis/nextgis_datastore/blob/master/cmake/extlib.cmake#L118-L236

By the way the library also builds on Linux and Mac OS (Windows under development) and CMake try to use existed in host system libraries. If CMake find GDAL in host system it will use it and all (-DENABLE_PLSCENES=OFF ... ) will be ignored as it already build with another parameters.

2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa: https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules

3. Build QGIS (https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149), PostGIS (https://github.com/nextgis-borsch/postgis/blob/master/CMakeLists.txt#L165), Formbuilder (https://github.com/nextgis/formbuilder/blob/master/cmake/extlib.cmake#L53-L173)

This is main Borsch features.


There are some additional conventions like:

    * I modify all libraries included into Borsch repository to install on unix-like paths. For Linux this is usual, for Windows and Mac OS this let us to use Qt installer framework an install software mach similar like on Linux. This is about target "install" which is vary on different libraries (CMake has it own conventions about it). This is not mandatory for Borsch itself but useful. CMake can register installed libraries in system repository to simplify find them in find_package function.

    * CMake get library version from sources in all libraries included into Borsch (if applicable, otherwise set it in CMake script). This is necessary if exact version of library needed. This is not mandatory. One more benefit during building process we can see dependency library version in console.

    * We modify all libraries included into Borsch repository to find dependencies using find_anyproject. It is simple to use libraries from our borsch repository, but developer can fork them or use any other sources and build systems to have dependency library in it's host system.

One can see this is all very flexible.


What about GDAL.

1. After unification GDALDataset and OGRDatasource current sources tree is not fit for this new logic of GDAL classes. I rearranged sources more closer to GDAL classes and CMake needs. Main changes are moving raster and vector drivers inside drivers folder (https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This simplify situation where different drivers need the same dependency library (libpg, libsqlite, etc.). Also there are several raster/vector drivers which need a separate directory but now presented in ogr or frmts directories. There are some bad decisions I made - for example I moved unit tests into separate repository - this was a mistake. We will return unit tests back to GDAL repository.

An example of cmake friendly way see https://github.com/nextgis-borsch/lib_gdal/blob/master/drivers/vector/CMakeLists.txt. The driver developer must only create new folder and put CMakeLists.txt file into it. The upper CMake script will find new driver and add it to GDAL build. In common cases no need to modify upper CMake scripts.

2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG, JPEG etc). All this code are in separate repositories. I don't see the difference to get this code from git pull from main GDAL repository or from the separate repository via find_anyproject process. Current GDAL repository looks like the https://github.com/nextgis-borsch packed in one repository.


In conclusion:

1. Borsch added flexible and useful features and not remove existing approach

2. The current cmaked GDAL are in production in my company more than a year on Windows, Linix, Mac OS, iOS, Android.

3. I'm ready to discuss and improve current solution. Any help are welcome

4. I also will be happy to contribute directly or via PR into GDAL trunk instead of backporting in both directions improvements that we do in GDAL .


Finally:

Find the link to page with the CMake in GDAL discussion - https://trac.osgeo.org/gdal/wiki/CMake

--
Best regards,
    Dmitry

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171028/97d6bf0b/attachment-0001.html>

From bishop.dev at gmail.com  Sat Oct 28 18:37:36 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 29 Oct 2017 04:37:36 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <013101d35045$fc253a20$f46fae60$@frogmouth.net>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <013101d35045$fc253a20$f46fae60$@frogmouth.net>
Message-ID: <87e8a951-1eef-02fe-a60d-4a86608510e7@gmail.com>

Hi Brad.

Yes you are right. Just do this steps:

|git clone https://github.com/nextgis-borsch/lib_gdal.git gdal cd gdal 
mkdir build cd build cmake .. cmake --build .|

Some discussion was in this ticket 
(https://github.com/nextgis-borsch/lib_gdal/issues/13).

There are 3 scenarios supported by lib_gdal now:

1. Build gdal with all dependencies getting them from github 
(WITH_EXTERNAL). Preferable for Windows

2. Build gdal using the system libraries. Preferable for Linux

3. Build gdal using the dependency libraries build by user (out of 
source) and registered in CMake package registry. This is I use now. 
This script help me to clone all libraries, build them and register them 
in CMake package registry 
(https://github.com/nextgis-borsch/borsch/blob/master/opt/tools.py#L134).

Best regards,
     Dmitry

29.10.17 2:39, bradh at frogmouth.net пишет:
> Is there a way to invoke that “do all the dependency work for me” (`find_anyproject`) from the cmake command line?
>
> So if I clone your lib_gdal repo, it could build GDAL and any required dependencies?
>
> Brad
>
>   
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/608c57ab/attachment.html>

From bishop.dev at gmail.com  Sat Oct 28 18:46:05 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 29 Oct 2017 04:46:05 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <3ED30291-EB0A-421E-8C2C-C5C1DC48E03B@etresoft.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <3ED30291-EB0A-421E-8C2C-C5C1DC48E03B@etresoft.com>
Message-ID: <320cf015-239f-65d6-6b16-ea8a784ba3a5@gmail.com>

Hi John,

The CMake don't required complete restructure the GDAL project. But I 
think this changes needed to fit new classes inheritance introduced in 
GDAL 2.0. And new sources structure more closer to CMake needs.

Also I would like to note that I have only positive experience with 
CMake, especially 3.x (where many things made simpler).

For iOS builds I wrap CMake into the XCode project and used it via 
Carthage (see 
https://github.com/nextgis/nextgis_datastore/tree/master/opt/ios). This 
is not just GDAL, but an example how GDAL can be wrap too.

Best regards,
     Dmitry

28.10.17 22:29, John Daniel пишет:
> I have my own build system for GDAL and its dependencies. It uses whatever build system each project uses. CMake is, by far, the most problematic. Luckily, I can still use the original autotools-based KML.
>
> If I understand correctly, CMake is going to require a complete restructuring of the project and a complete dependency on CMake for all dependencies. Can anyone explain how this would improve anything?
>
> With the KML project and others, I have found CMake to be the most complicated and most problematic build system. When there is a problem, I'm helpless to resolve it on my own. The people who made the CMake scripts are equally helpless because they use a different platform. I build on a Mac with Xcode and target both macOS and iOS. Are the maintainers of the GDAL CMake build scripts going to have access to same beta versions of all the above that I am using?
>
> I'm not an active member of the mailing list. I've been on different projects the past couple of years but was looking forward to working on GDAL-based projects full time next year. CMake will shut me out of the community entirely. I simply don't have time to master CMake just to build projects that had never required a similar level of mastery of autotools. Instead, I will be forced to stay on the last working version I have. I won't be able to contribute any fixes I make or new features like my boost replacement for GEOS and Spatialite.
>
> If some people like CMake and it works on their platforms, great. Then let people choose what build tools they want and what they can support on their own platforms.
>
> John Daniel
> Etresoft, Inc.
>
> Sent from my iPhone
>
> On Oct 27, 2017, at 5:06 PM, Dmitry Baryshnikov <bishop.dev at gmail.com<mailto:bishop.dev at gmail.com>> wrote:
>
>
> Hi,
>
> As Even said it make sense to move discussion from this ticket (https://trac.osgeo.org/gdal/ticket/7080) to the list.
>
> First of all I would like to make small introduction to Borsch project. Here it is some useful links:
>
> * Borsch repository: https://github.com/nextgis-borsch/borsch
>
> * Presentation on FOSS4G 2016: http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-presentation.pdf
>
> * GDAL repository adapted for Borsch: https://github.com/nextgis-borsch/lib_gdal
>
> Shortly speaking Borsch is 3 CMake scripts which add ability to include dependence library in one line of code.
>
> It looks like:
>
> find_anyproject(TIFF REQUIRED)
>
> Certainly developer can add additional parameter to configure dependency in find_anyproject function.
>
> Inside  find_anyproject work 2 cases:
>
> 1. First of all (by default, but can be overridden) CMake searches host system for dependency library (headers and lib files). This is usual CMake find_package (https://cmake.org/cmake/help/v3.0/command/find_package.html) with some additional logic to try different options for hard cases (like Qt).
>
> 2. If library not found, find_anyproject can get the sources or prebuild library from github.
>
> So the GDAL or any other library can be build the normal way, but developer have additional features to configure build all libraries with one compiler and one set of compiler/linker settings (with some limits). Such way we can have rather complicated scenarios to build GDAL and dependencies.
>
> Here it is several examples of benefits of this approach:
>
> 1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library for iOS as *.framework and for Android as *.so (arm7, arm64, i386, x86_64 architecture). I build all dependencies include GDAL statically and link in one fat library. The all code that do it: https://github.com/nextgis/nextgis_datastore/blob/master/cmake/extlib.cmake#L118-L236
>
> By the way the library also builds on Linux and Mac OS (Windows under development) and CMake try to use existed in host system libraries. If CMake find GDAL in host system it will use it and all (-DENABLE_PLSCENES=OFF ... ) will be ignored as it already build with another parameters.
>
> 2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa: https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules
>
> 3. Build QGIS (https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149), PostGIS (https://github.com/nextgis-borsch/postgis/blob/master/CMakeLists.txt#L165), Formbuilder (https://github.com/nextgis/formbuilder/blob/master/cmake/extlib.cmake#L53-L173)
>
> This is main Borsch features.
>
>
> There are some additional conventions like:
>
>      * I modify all libraries included into Borsch repository to install on unix-like paths. For Linux this is usual, for Windows and Mac OS this let us to use Qt installer framework an install software mach similar like on Linux. This is about target "install" which is vary on different libraries (CMake has it own conventions about it). This is not mandatory for Borsch itself but useful. CMake can register installed libraries in system repository to simplify find them in find_package function.
>
>      * CMake get library version from sources in all libraries included into Borsch (if applicable, otherwise set it in CMake script). This is necessary if exact version of library needed. This is not mandatory. One more benefit during building process we can see dependency library version in console.
>
>      * We modify all libraries included into Borsch repository to find dependencies using find_anyproject. It is simple to use libraries from our borsch repository, but developer can fork them or use any other sources and build systems to have dependency library in it's host system.
>
> One can see this is all very flexible.
>
>
> What about GDAL.
>
> 1. After unification GDALDataset and OGRDatasource current sources tree is not fit for this new logic of GDAL classes. I rearranged sources more closer to GDAL classes and CMake needs. Main changes are moving raster and vector drivers inside drivers folder (https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This simplify situation where different drivers need the same dependency library (libpg, libsqlite, etc.). Also there are several raster/vector drivers which need a separate directory but now presented in ogr or frmts directories. There are some bad decisions I made - for example I moved unit tests into separate repository - this was a mistake. We will return unit tests back to GDAL repository.
>
> An example of cmake friendly way see https://github.com/nextgis-borsch/lib_gdal/blob/master/drivers/vector/CMakeLists.txt. The driver developer must only create new folder and put CMakeLists.txt file into it. The upper CMake script will find new driver and add it to GDAL build. In common cases no need to modify upper CMake scripts.
>
> 2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG, JPEG etc). All this code are in separate repositories. I don't see the difference to get this code from git pull from main GDAL repository or from the separate repository via find_anyproject process. Current GDAL repository looks like the https://github.com/nextgis-borsch packed in one repository.
>
>
> In conclusion:
>
> 1. Borsch added flexible and useful features and not remove existing approach
>
> 2. The current cmaked GDAL are in production in my company more than a year on Windows, Linix, Mac OS, iOS, Android.
>
> 3. I'm ready to discuss and improve current solution. Any help are welcome
>
> 4. I also will be happy to contribute directly or via PR into GDAL trunk instead of backporting in both directions improvements that we do in GDAL .
>
>
> Finally:
>
> Find the link to page with the CMake in GDAL discussion - https://trac.osgeo.org/gdal/wiki/CMake
>
> --
> Best regards,
>      Dmitry
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/214499b6/attachment-0001.html>

From alexander.bruy at gmail.com  Sat Oct 28 23:11:33 2017
From: alexander.bruy at gmail.com (Alexander Bruy)
Date: Sun, 29 Oct 2017 08:11:33 +0200
Subject: [gdal-dev] About CMake build again
In-Reply-To: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
Message-ID: <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>

While I'm not GDAL developer or regular contributor (submitted only
few patches),
but still often build GDAL trunk on WIndows and Linux, and less often on Mac.

Personally I think that solution proposed in
https://trac.osgeo.org/gdal/ticket/7080
is more preferable. It does not require *all* dependencies to be build
with cmake,
it does not require maintaining forks with special directory structure for *all*
dependencies, it plays well with conventions/packages provided on all systems
out of the box. Maybe borsch is good for in-house use when all stack
is build from
scratch but it is not suitable for real-world use cases.

Of course, #7080 is not ideal, there are some issues, but as I understand the
work is not over and most (if not all) issues can be solved.

Just my 2c.

2017-10-28 0:06 GMT+03:00 Dmitry Baryshnikov <bishop.dev at gmail.com>:
> Hi,
>
> As Even said it make sense to move discussion from this ticket
> (https://trac.osgeo.org/gdal/ticket/7080) to the list.
>
> First of all I would like to make small introduction to Borsch project. Here
> it is some useful links:
>
> * Borsch repository: https://github.com/nextgis-borsch/borsch
>
> * Presentation on FOSS4G 2016:
> http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-presentation.pdf
>
> * GDAL repository adapted for Borsch:
> https://github.com/nextgis-borsch/lib_gdal
>
> Shortly speaking Borsch is 3 CMake scripts which add ability to include
> dependence library in one line of code.
>
> It looks like:
>
> find_anyproject(TIFF REQUIRED)
>
> Certainly developer can add additional parameter to configure dependency in
> find_anyproject function.
>
> Inside  find_anyproject work 2 cases:
>
> 1. First of all (by default, but can be overridden) CMake searches host
> system for dependency library (headers and lib files). This is usual CMake
> find_package (https://cmake.org/cmake/help/v3.0/command/find_package.html)
> with some additional logic to try different options for hard cases (like
> Qt).
>
> 2. If library not found, find_anyproject can get the sources or prebuild
> library from github.
>
> So the GDAL or any other library can be build the normal way, but developer
> have additional features to configure build all libraries with one compiler
> and one set of compiler/linker settings (with some limits). Such way we can
> have rather complicated scenarios to build GDAL and dependencies.
>
> Here it is several examples of benefits of this approach:
>
> 1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library for
> iOS as *.framework and for Android as *.so (arm7, arm64, i386, x86_64
> architecture). I build all dependencies include GDAL statically and link in
> one fat library. The all code that do it:
> https://github.com/nextgis/nextgis_datastore/blob/master/cmake/extlib.cmake#L118-L236
>
> By the way the library also builds on Linux and Mac OS (Windows under
> development) and CMake try to use existed in host system libraries. If CMake
> find GDAL in host system it will use it and all (-DENABLE_PLSCENES=OFF ... )
> will be ignored as it already build with another parameters.
>
> 2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa:
> https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules
>
> 3. Build QGIS
> (https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149),
> PostGIS
> (https://github.com/nextgis-borsch/postgis/blob/master/CMakeLists.txt#L165),
> Formbuilder
> (https://github.com/nextgis/formbuilder/blob/master/cmake/extlib.cmake#L53-L173)
>
> This is main Borsch features.
>
>
> There are some additional conventions like:
>
>     * I modify all libraries included into Borsch repository to install on
> unix-like paths. For Linux this is usual, for Windows and Mac OS this let us
> to use Qt installer framework an install software mach similar like on
> Linux. This is about target "install" which is vary on different libraries
> (CMake has it own conventions about it). This is not mandatory for Borsch
> itself but useful. CMake can register installed libraries in system
> repository to simplify find them in find_package function.
>
>     * CMake get library version from sources in all libraries included into
> Borsch (if applicable, otherwise set it in CMake script). This is necessary
> if exact version of library needed. This is not mandatory. One more benefit
> during building process we can see dependency library version in console.
>
>     * We modify all libraries included into Borsch repository to find
> dependencies using find_anyproject. It is simple to use libraries from our
> borsch repository, but developer can fork them or use any other sources and
> build systems to have dependency library in it's host system.
>
> One can see this is all very flexible.
>
>
> What about GDAL.
>
> 1. After unification GDALDataset and OGRDatasource current sources tree is
> not fit for this new logic of GDAL classes. I rearranged sources more closer
> to GDAL classes and CMake needs. Main changes are moving raster and vector
> drivers inside drivers folder
> (https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This
> simplify situation where different drivers need the same dependency library
> (libpg, libsqlite, etc.). Also there are several raster/vector drivers which
> need a separate directory but now presented in ogr or frmts directories.
> There are some bad decisions I made - for example I moved unit tests into
> separate repository - this was a mistake. We will return unit tests back to
> GDAL repository.
>
> An example of cmake friendly way see
> https://github.com/nextgis-borsch/lib_gdal/blob/master/drivers/vector/CMakeLists.txt.
> The driver developer must only create new folder and put CMakeLists.txt file
> into it. The upper CMake script will find new driver and add it to GDAL
> build. In common cases no need to modify upper CMake scripts.
>
> 2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG, JPEG
> etc). All this code are in separate repositories. I don't see the difference
> to get this code from git pull from main GDAL repository or from the
> separate repository via find_anyproject process. Current GDAL repository
> looks like the https://github.com/nextgis-borsch packed in one repository.
>
>
> In conclusion:
>
> 1. Borsch added flexible and useful features and not remove existing
> approach
>
> 2. The current cmaked GDAL are in production in my company more than a year
> on Windows, Linix, Mac OS, iOS, Android.
>
> 3. I'm ready to discuss and improve current solution. Any help are welcome
>
> 4. I also will be happy to contribute directly or via PR into GDAL trunk
> instead of backporting in both directions improvements that we do in GDAL .
>
>
> Finally:
>
> Find the link to page with the CMake in GDAL discussion -
> https://trac.osgeo.org/gdal/wiki/CMake
>
> --
> Best regards,
>     Dmitry
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Alexander Bruy

From bo.victor.thomsen at gmail.com  Sun Oct 29 01:58:06 2017
From: bo.victor.thomsen at gmail.com (Bo Victor Thomsen)
Date: Sun, 29 Oct 2017 09:58:06 +0100
Subject: [gdal-dev] Add timestamp field with value to table during ogr2ogr
	operation
Message-ID: <dcc12a06-a73c-21c1-a8c7-f2288b77e63b@gmail.com>

To the list -

I'm converting shapefiles to postgres tables using ogr2ogr. As usual 
with ogr2ogr, it works very well.

Now I want to automatically add an extra column "created" with the 
current timestamp during the ogr2ogr operation.

Something like this:

ogr2ogr .....  -sql "SELECT *, CURRENT_TIMESTAMP AS created FROM 
point_data" ....

Shapefile name is "point_data.shp" and CURRENT_TIMESTAMP is a SQL92 
standard function

However, It doesn't work. Is there some way, I can add this timestamp 
value to the resulting table using a built-in function in ogr2ogr?

(The above command works, if you replace "CURRENT_TIMESTAMP" with ex. 
"OGR_TYPE". Obviously It doesn't produce a timestamp after this edit ;-)

Kind regards
Bo Victor Thomsen





From ari.jolma at gmail.com  Sun Oct 29 02:23:44 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sun, 29 Oct 2017 11:23:44 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <1509185444964-0.post@n6.nabble.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <078dcae2-dfa1-9f60-ce89-85d81d08acd1@gmail.com>
 <9e495955-5e27-da96-d683-38abd1216905@gmail.com>
 <1509185444964-0.post@n6.nabble.com>
Message-ID: <158529b1-fe61-deba-08fd-e5dd987766bb@gmail.com>

jratike80 kirjoitti 28.10.2017 klo 13:10:
> Ari Jolma-2 wrote
>> The case of GeoServer is also strange
>> https://msp.smartsea.fmi.fi/geoserver/wcs?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCoverage&IDENTIFIER=smartsea%3Aeusm2016&FORMAT=image%2Ftiff&BOUNDINGBOX=61610,7303970,61630,7303990,urn:ogc:def:crs:EPSG::3067&RangeSubset=contents
>>
>> -- GeoServer does not seem to understand that GDAL wants only a 2 x 2
>> sample - the response is huge (the whole geotiff?).
>>
>> Ari
>
> An open Geoserver with a DEM of Finland is available for testing at
> http://avoindata.maanmittauslaitos.fi/geoserver/wcs?service=WCS&version=2.0.1&request=GetCapabilities

Same thing with this server (I'm still testing with version 1.1), except 
that it is nice enough to let me know that

ERROR 1: This request is trying to generate too much data, the limit is 
488.28MB but the actual amount of bytes to be written in the output is 
18479MB

With the help of GeoServer demo tool in its admin panel, it seems 
necessary to add GridCRS to the request

http://avoindata.maanmittauslaitos.fi/geoserver/wcs?SERVICE=WCS&VERSION=1.1.0&REQUEST=GetCoverage&IDENTIFIER=korkeusmalli_10m%3Akorkeusmalli_10m&FORMAT=image%2Ftiff&BOUNDINGBOX=44005,7781985,44015,7781995,urn:ogc:def:crs:EPSG::3067&RangeSubset=contents&GridBaseCRS=urn:ogc:def:crs:EPSG::3067&GridType=urn:ogc:def:method:WCS:1.1:2dSimpleGrid&GridOffsets=20.0,-20.0&GridCS=urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS

GridCRS should be optional but in practise GeoServer seems to require it.

Ari

>
> -Jukka Rahkonen-
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Sun Oct 29 02:52:34 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 29 Oct 2017 10:52:34 +0100
Subject: [gdal-dev] WCS driver
In-Reply-To: <f2217665-e574-c04e-dd89-1264cf865420@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <90913025-afc0-f5cc-4fed-0f75853ebaf6@gmail.com>
 <f2217665-e574-c04e-dd89-1264cf865420@gmail.com>
Message-ID: <150934251.nXEc9MyG1j@even-i700>

Hi Ari,

> 
> I'd like to have your comment on this.
> 
> Ari Jolma kirjoitti 28.10.2017 klo 17:39:
> > Reading MapServer code, it seems to be based on the idea that x,y is
> > always east,north and when it writes BoundingBox, it swaps x and y if
> > the projection is inverted (like 4326). It does not do that when it
> > writes GridCRS.
> > 
> > GDAL seems to be based on the idea that x,y is what the projection
> > says (what the projection says could be found out with
> > OGRSpatialReference::GetAxis - however, for 4326 it does not say
> > anything).

Depends on how your import the CRS. If you import with importFromEPSG(), it will strip axis 
definition when they are in the unusual order. If you do importFromEPSGA(), you'll always 
get the axis definition.
(try gdalsrsinfo EPSG:4326 vs gdalsrsinfo EPSGA:4326. Same for EPSG:2393 vs EPSGA:2393)

> > This is my impression from WCS driver - I see there's a lot
> > on this issue in the GML driver page.
> 
> I think the fix depends on what's GDAL's opinion to what X,Y is. Is it
> what the projection says or is it easting,northing?
> 

I guess it depends on the WCS version. According to
http://mapserver.org/development/rfc/ms-rfc-41.html , contrary to WCS 1.0,  WCS 1.1 is 
supposed to honour EPSG axis order, so lat,long for most/all geodetic CRS, and 
easting,northing or northing,easting depending on the actual projected CRS

The "tradition" in GDAL drivers such as GML, WFS is to strip AXIS from the CRS WKT exposed 
when they are in the "annoying" lat,long and northing,easting, 

>From the GML driver:
{{{
            if (poSRS != NULL && m_bInvertAxisOrderIfLatLong &&
                GML_IsSRSLatLongOrder(pszSRSName))
            {
                OGR_SRSNode *poGEOGCS = poSRS->GetAttrNode("GEOGCS");
                if( poGEOGCS != NULL )
                    poGEOGCS->StripNodes("AXIS");

                OGR_SRSNode *poPROJCS = poSRS->GetAttrNode("PROJCS");
                if (poPROJCS != NULL && poSRS->EPSGTreatsAsNorthingEasting())
                    poPROJCS->StripNodes("AXIS");

            }
}}}

and to switch the coordinates appropriately so that the user sees the "GIS friendly" lon,lat 
and x,y order. It would be propably appropriate for the WCS driver to do so as well, as 
nothing else in GDAL can deal with rasters referenced in lat,long order.

Now, you may also have to deal with implementation bugs (if what MapServer does is indeed 
a bug), which can sometimes be auto-corrected, or not...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/a9731889/attachment-0001.html>

From ari.jolma at gmail.com  Sun Oct 29 03:40:30 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sun, 29 Oct 2017 12:40:30 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <150934251.nXEc9MyG1j@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <90913025-afc0-f5cc-4fed-0f75853ebaf6@gmail.com>
 <f2217665-e574-c04e-dd89-1264cf865420@gmail.com>
 <150934251.nXEc9MyG1j@even-i700>
Message-ID: <2f83c9cf-8203-7838-6965-875e248f6173@gmail.com>

Even Rouault kirjoitti 29.10.2017 klo 11:52:
>
> The "tradition" in GDAL drivers such as GML, WFS is to strip AXIS from 
> the CRS WKT exposed when they are in the "annoying" lat,long and 
> northing,easting,
>
> From the GML driver:
>
> {{{
>
> if (poSRS != NULL && m_bInvertAxisOrderIfLatLong &&
>
> GML_IsSRSLatLongOrder(pszSRSName))
>
> {
>
> OGR_SRSNode *poGEOGCS = poSRS->GetAttrNode("GEOGCS");
>
> if( poGEOGCS != NULL )
>
> poGEOGCS->StripNodes("AXIS");
>
> OGR_SRSNode *poPROJCS = poSRS->GetAttrNode("PROJCS");
>
> if (poPROJCS != NULL && poSRS->EPSGTreatsAsNorthingEasting())
>
> poPROJCS->StripNodes("AXIS");
>
> }
>
> }}}
>
> and to switch the coordinates appropriately so that the user sees the 
> "GIS friendly" lon,lat and x,y order. It would be propably appropriate 
> for the WCS driver to do so as well, as nothing else in GDAL can deal 
> with rasters referenced in lat,long order.
>

So, treat lat,lon and north,east always as exceptions. And in this case 
add an option to make that exception when appropriate and when writing 
the BoundingBox into the request. (But not when reading GridOrigin. 
However, I still have to see what other servers say.)

> Now, you may also have to deal with implementation bugs (if what 
> MapServer does is indeed a bug), which can sometimes be 
> auto-corrected, or not...
>

We'll see what MapServer developers say. I submitted an issue to its github.

Ari

> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/9926fe2b/attachment.html>

From even.rouault at spatialys.com  Sun Oct 29 03:49:44 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 29 Oct 2017 11:49:44 +0100
Subject: [gdal-dev] WCS driver
In-Reply-To: <2f83c9cf-8203-7838-6965-875e248f6173@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <150934251.nXEc9MyG1j@even-i700>
 <2f83c9cf-8203-7838-6965-875e248f6173@gmail.com>
Message-ID: <1563128.9cGn2nseaV@even-i700>

> So, treat lat,lon and north,east always as exceptions. And in this case
> add an option to make that exception when appropriate and when writing
> the BoundingBox into the request. (But not when reading GridOrigin.
> However, I still have to see what other servers say.)

I'm not sure what you exactly mean with "option". I'd see more that as a code 
branch ("if WCS >= 1.1 with SRS with unusual axis order, do axis inversion"), 
rather than something user visible. Similarly to what the WMS driver does in 
WMS 1.3 vs WMS 1.1

We may need to expose an advanced user option to deal with broken servers to 
avoid doing axis inversion although it would be normally required.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/5275c6a6/attachment.html>

From even.rouault at spatialys.com  Sun Oct 29 04:02:52 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 29 Oct 2017 12:02:52 +0100
Subject: [gdal-dev] Add timestamp field with value to table during
	ogr2ogr operation
In-Reply-To: <dcc12a06-a73c-21c1-a8c7-f2288b77e63b@gmail.com>
References: <dcc12a06-a73c-21c1-a8c7-f2288b77e63b@gmail.com>
Message-ID: <2673739.MVv6Hv3Utc@even-i700>

On dimanche 29 octobre 2017 09:58:06 CET Bo Victor Thomsen wrote:
> To the list -
> 
> I'm converting shapefiles to postgres tables using ogr2ogr. As usual
> with ogr2ogr, it works very well.
> 
> Now I want to automatically add an extra column "created" with the
> current timestamp during the ogr2ogr operation.
> 
> Something like this:
> 
> ogr2ogr .....  -sql "SELECT *, CURRENT_TIMESTAMP AS created FROM
> point_data" ....
> 
> Shapefile name is "point_data.shp" and CURRENT_TIMESTAMP is a SQL92
> standard function

OGR SQL is only a partial implementation of SQL92 :
http://gdal.org/ogr_sql.html

> 
> However, It doesn't work. Is there some way, I can add this timestamp
> value to the resulting table using a built-in function in ogr2ogr?

You may use the SQL SQLite dialect by adding -dialect SQLite
( http://gdal.org/ogr_sql_sqlite.html )
to your ogr2ogr command line, and that will do what you expect

Or almost, as I see that the column is recognized as a String column with values like 
'2017-10-29 10:26:43'. So you may need to do some SQL transformation on the PG database 
to properly type it.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/9432c4e1/attachment.html>

From bishop.dev at gmail.com  Sun Oct 29 06:39:49 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 29 Oct 2017 16:39:49 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
Message-ID: <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>

Hi Alexander,

Please read carefully that I wrote before. There are 3 options:

    1. Build gdal with all dependencies getting them from github
    (WITH_EXTERNAL). Preferable for Windows

    2. Build gdal using the system libraries. Preferable for Linux

    3. Build gdal using the dependency libraries build by user (out of
    source) and registered in CMake package registry. This is I use now.
    This script help me to clone all libraries, build them and register
    them in CMake package registry
    (https://github.com/nextgis-borsch/borsch/blob/master/opt/tools.py#L134).



Again, this is the options which one can choose. So if building 
everything from scratch not suits you - just select another option. I 
introduce presets (now there is only one for option 1 - 
https://github.com/nextgis-borsch/lib_gdal/issues/14) and this can be 
expanded for different scenarios. If you need full control on build just 
provide command line options to CMake and get what you need.

My fast code review solution of Hiroshi shows that it very far from 
working solution and need much work that already done in lib_gdal from 
Borsch.

My opinion is that different options is much flexible and suits for many 
scenarios as very limited solution from 
https://trac.osgeo.org/gdal/ticket/7080.

Best regards,
     Dmitry

29.10.17 9:11, Alexander Bruy пишет:
> While I'm not GDAL developer or regular contributor (submitted only
> few patches),
> but still often build GDAL trunk on WIndows and Linux, and less often on Mac.
>
> Personally I think that solution proposed in
> https://trac.osgeo.org/gdal/ticket/7080
> is more preferable. It does not require *all* dependencies to be build
> with cmake,
> it does not require maintaining forks with special directory structure for *all*
> dependencies, it plays well with conventions/packages provided on all systems
> out of the box. Maybe borsch is good for in-house use when all stack
> is build from
> scratch but it is not suitable for real-world use cases.
>
> Of course, #7080 is not ideal, there are some issues, but as I understand the
> work is not over and most (if not all) issues can be solved.
>
> Just my 2c.
>
> 2017-10-28 0:06 GMT+03:00 Dmitry Baryshnikov <bishop.dev at gmail.com>:
>> Hi,
>>
>> As Even said it make sense to move discussion from this ticket
>> (https://trac.osgeo.org/gdal/ticket/7080) to the list.
>>
>> First of all I would like to make small introduction to Borsch project. Here
>> it is some useful links:
>>
>> * Borsch repository: https://github.com/nextgis-borsch/borsch
>>
>> * Presentation on FOSS4G 2016:
>> http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-presentation.pdf
>>
>> * GDAL repository adapted for Borsch:
>> https://github.com/nextgis-borsch/lib_gdal
>>
>> Shortly speaking Borsch is 3 CMake scripts which add ability to include
>> dependence library in one line of code.
>>
>> It looks like:
>>
>> find_anyproject(TIFF REQUIRED)
>>
>> Certainly developer can add additional parameter to configure dependency in
>> find_anyproject function.
>>
>> Inside  find_anyproject work 2 cases:
>>
>> 1. First of all (by default, but can be overridden) CMake searches host
>> system for dependency library (headers and lib files). This is usual CMake
>> find_package (https://cmake.org/cmake/help/v3.0/command/find_package.html)
>> with some additional logic to try different options for hard cases (like
>> Qt).
>>
>> 2. If library not found, find_anyproject can get the sources or prebuild
>> library from github.
>>
>> So the GDAL or any other library can be build the normal way, but developer
>> have additional features to configure build all libraries with one compiler
>> and one set of compiler/linker settings (with some limits). Such way we can
>> have rather complicated scenarios to build GDAL and dependencies.
>>
>> Here it is several examples of benefits of this approach:
>>
>> 1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library for
>> iOS as *.framework and for Android as *.so (arm7, arm64, i386, x86_64
>> architecture). I build all dependencies include GDAL statically and link in
>> one fat library. The all code that do it:
>> https://github.com/nextgis/nextgis_datastore/blob/master/cmake/extlib.cmake#L118-L236
>>
>> By the way the library also builds on Linux and Mac OS (Windows under
>> development) and CMake try to use existed in host system libraries. If CMake
>> find GDAL in host system it will use it and all (-DENABLE_PLSCENES=OFF ... )
>> will be ignored as it already build with another parameters.
>>
>> 2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa:
>> https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules
>>
>> 3. Build QGIS
>> (https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149),
>> PostGIS
>> (https://github.com/nextgis-borsch/postgis/blob/master/CMakeLists.txt#L165),
>> Formbuilder
>> (https://github.com/nextgis/formbuilder/blob/master/cmake/extlib.cmake#L53-L173)
>>
>> This is main Borsch features.
>>
>>
>> There are some additional conventions like:
>>
>>      * I modify all libraries included into Borsch repository to install on
>> unix-like paths. For Linux this is usual, for Windows and Mac OS this let us
>> to use Qt installer framework an install software mach similar like on
>> Linux. This is about target "install" which is vary on different libraries
>> (CMake has it own conventions about it). This is not mandatory for Borsch
>> itself but useful. CMake can register installed libraries in system
>> repository to simplify find them in find_package function.
>>
>>      * CMake get library version from sources in all libraries included into
>> Borsch (if applicable, otherwise set it in CMake script). This is necessary
>> if exact version of library needed. This is not mandatory. One more benefit
>> during building process we can see dependency library version in console.
>>
>>      * We modify all libraries included into Borsch repository to find
>> dependencies using find_anyproject. It is simple to use libraries from our
>> borsch repository, but developer can fork them or use any other sources and
>> build systems to have dependency library in it's host system.
>>
>> One can see this is all very flexible.
>>
>>
>> What about GDAL.
>>
>> 1. After unification GDALDataset and OGRDatasource current sources tree is
>> not fit for this new logic of GDAL classes. I rearranged sources more closer
>> to GDAL classes and CMake needs. Main changes are moving raster and vector
>> drivers inside drivers folder
>> (https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This
>> simplify situation where different drivers need the same dependency library
>> (libpg, libsqlite, etc.). Also there are several raster/vector drivers which
>> need a separate directory but now presented in ogr or frmts directories.
>> There are some bad decisions I made - for example I moved unit tests into
>> separate repository - this was a mistake. We will return unit tests back to
>> GDAL repository.
>>
>> An example of cmake friendly way see
>> https://github.com/nextgis-borsch/lib_gdal/blob/master/drivers/vector/CMakeLists.txt.
>> The driver developer must only create new folder and put CMakeLists.txt file
>> into it. The upper CMake script will find new driver and add it to GDAL
>> build. In common cases no need to modify upper CMake scripts.
>>
>> 2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG, JPEG
>> etc). All this code are in separate repositories. I don't see the difference
>> to get this code from git pull from main GDAL repository or from the
>> separate repository via find_anyproject process. Current GDAL repository
>> looks like the https://github.com/nextgis-borsch packed in one repository.
>>
>>
>> In conclusion:
>>
>> 1. Borsch added flexible and useful features and not remove existing
>> approach
>>
>> 2. The current cmaked GDAL are in production in my company more than a year
>> on Windows, Linix, Mac OS, iOS, Android.
>>
>> 3. I'm ready to discuss and improve current solution. Any help are welcome
>>
>> 4. I also will be happy to contribute directly or via PR into GDAL trunk
>> instead of backporting in both directions improvements that we do in GDAL .
>>
>>
>> Finally:
>>
>> Find the link to page with the CMake in GDAL discussion -
>> https://trac.osgeo.org/gdal/wiki/CMake
>>
>> --
>> Best regards,
>>      Dmitry
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/c05bd86e/attachment-0001.html>

From ari.jolma at gmail.com  Sun Oct 29 06:53:00 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Sun, 29 Oct 2017 15:53:00 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <1563128.9cGn2nseaV@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <150934251.nXEc9MyG1j@even-i700>
 <2f83c9cf-8203-7838-6965-875e248f6173@gmail.com>
 <1563128.9cGn2nseaV@even-i700>
Message-ID: <e08c714a-3476-1a80-6384-2872b1f4a340@gmail.com>

Even Rouault kirjoitti 29.10.2017 klo 12:49:
>
> > So, treat lat,lon and north,east always as exceptions. And in this case
>
> > add an option to make that exception when appropriate and when writing
>
> > the BoundingBox into the request. (But not when reading GridOrigin.
>
> > However, I still have to see what other servers say.)
>
> I'm not sure what you exactly mean with "option". I'd see more that as 
> a code branch ("if WCS >= 1.1 with SRS with unusual axis order, do 
> axis inversion"), rather than something user visible. Similarly to 
> what the WMS driver does in WMS 1.3 vs WMS 1.1
>
> We may need to expose an advanced user option to deal with broken 
> servers to avoid doing axis inversion although it would be normally 
> required.
>

Yes, sure. It should be the expected behavior.

Ari

> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/19198baf/attachment.html>

From schwehr at gmail.com  Sun Oct 29 07:17:03 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 29 Oct 2017 07:17:03 -0700
Subject: [gdal-dev] About CMake build again
In-Reply-To: <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
Message-ID: <CACmBxysN2O+L6+eGOjuvNuvhd5U-SD7S=D0jw84t2=XZEjNVtQ@mail.gmail.com>

While autoconf isn't pretty, it has done me the least amount of harm of any
of the major build systems.  Without patches for the downstream packagers
and CI (travis/appveyor), I would be -1.  e.g. debian/ubuntu,
redhat/centos, macport/brew/fink, and others

With those patches, I'm -0.

BTW, It's not unreasonable to have separate build systems.  It's work, but
very doable.  I maintain a bazel build environment.  I have to notice add
or deletes of files in upstream, but it's been working for more than a
decade.

On Sat, Oct 28, 2017 at 11:11 PM, Alexander Bruy <alexander.bruy at gmail.com>
wrote:

> While I'm not GDAL developer or regular contributor (submitted only
> few patches),
> but still often build GDAL trunk on WIndows and Linux, and less often on
> Mac.
>
> Personally I think that solution proposed in
> https://trac.osgeo.org/gdal/ticket/7080
> is more preferable. It does not require *all* dependencies to be build
> with cmake,
> it does not require maintaining forks with special directory structure for
> *all*
> dependencies, it plays well with conventions/packages provided on all
> systems
> out of the box. Maybe borsch is good for in-house use when all stack
> is build from
> scratch but it is not suitable for real-world use cases.
>
> Of course, #7080 is not ideal, there are some issues, but as I understand
> the
> work is not over and most (if not all) issues can be solved.
>
> Just my 2c.
>
> 2017-10-28 0:06 GMT+03:00 Dmitry Baryshnikov <bishop.dev at gmail.com>:
> > Hi,
> >
> > As Even said it make sense to move discussion from this ticket
> > (https://trac.osgeo.org/gdal/ticket/7080) to the list.
> >
> > First of all I would like to make small introduction to Borsch project.
> Here
> > it is some useful links:
> >
> > * Borsch repository: https://github.com/nextgis-borsch/borsch
> >
> > * Presentation on FOSS4G 2016:
> > http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-
> presentation.pdf
> >
> > * GDAL repository adapted for Borsch:
> > https://github.com/nextgis-borsch/lib_gdal
> >
> > Shortly speaking Borsch is 3 CMake scripts which add ability to include
> > dependence library in one line of code.
> >
> > It looks like:
> >
> > find_anyproject(TIFF REQUIRED)
> >
> > Certainly developer can add additional parameter to configure dependency
> in
> > find_anyproject function.
> >
> > Inside  find_anyproject work 2 cases:
> >
> > 1. First of all (by default, but can be overridden) CMake searches host
> > system for dependency library (headers and lib files). This is usual
> CMake
> > find_package (https://cmake.org/cmake/help/
> v3.0/command/find_package.html)
> > with some additional logic to try different options for hard cases (like
> > Qt).
> >
> > 2. If library not found, find_anyproject can get the sources or prebuild
> > library from github.
> >
> > So the GDAL or any other library can be build the normal way, but
> developer
> > have additional features to configure build all libraries with one
> compiler
> > and one set of compiler/linker settings (with some limits). Such way we
> can
> > have rather complicated scenarios to build GDAL and dependencies.
> >
> > Here it is several examples of benefits of this approach:
> >
> > 1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library
> for
> > iOS as *.framework and for Android as *.so (arm7, arm64, i386, x86_64
> > architecture). I build all dependencies include GDAL statically and link
> in
> > one fat library. The all code that do it:
> > https://github.com/nextgis/nextgis_datastore/blob/master/
> cmake/extlib.cmake#L118-L236
> >
> > By the way the library also builds on Linux and Mac OS (Windows under
> > development) and CMake try to use existed in host system libraries. If
> CMake
> > find GDAL in host system it will use it and all (-DENABLE_PLSCENES=OFF
> ... )
> > will be ignored as it already build with another parameters.
> >
> > 2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa:
> > https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules
> >
> > 3. Build QGIS
> > (https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149
> ),
> > PostGIS
> > (https://github.com/nextgis-borsch/postgis/blob/master/
> CMakeLists.txt#L165),
> > Formbuilder
> > (https://github.com/nextgis/formbuilder/blob/master/cmake/
> extlib.cmake#L53-L173)
> >
> > This is main Borsch features.
> >
> >
> > There are some additional conventions like:
> >
> >     * I modify all libraries included into Borsch repository to install
> on
> > unix-like paths. For Linux this is usual, for Windows and Mac OS this
> let us
> > to use Qt installer framework an install software mach similar like on
> > Linux. This is about target "install" which is vary on different
> libraries
> > (CMake has it own conventions about it). This is not mandatory for Borsch
> > itself but useful. CMake can register installed libraries in system
> > repository to simplify find them in find_package function.
> >
> >     * CMake get library version from sources in all libraries included
> into
> > Borsch (if applicable, otherwise set it in CMake script). This is
> necessary
> > if exact version of library needed. This is not mandatory. One more
> benefit
> > during building process we can see dependency library version in console.
> >
> >     * We modify all libraries included into Borsch repository to find
> > dependencies using find_anyproject. It is simple to use libraries from
> our
> > borsch repository, but developer can fork them or use any other sources
> and
> > build systems to have dependency library in it's host system.
> >
> > One can see this is all very flexible.
> >
> >
> > What about GDAL.
> >
> > 1. After unification GDALDataset and OGRDatasource current sources tree
> is
> > not fit for this new logic of GDAL classes. I rearranged sources more
> closer
> > to GDAL classes and CMake needs. Main changes are moving raster and
> vector
> > drivers inside drivers folder
> > (https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This
> > simplify situation where different drivers need the same dependency
> library
> > (libpg, libsqlite, etc.). Also there are several raster/vector drivers
> which
> > need a separate directory but now presented in ogr or frmts directories.
> > There are some bad decisions I made - for example I moved unit tests into
> > separate repository - this was a mistake. We will return unit tests back
> to
> > GDAL repository.
> >
> > An example of cmake friendly way see
> > https://github.com/nextgis-borsch/lib_gdal/blob/master/
> drivers/vector/CMakeLists.txt.
> > The driver developer must only create new folder and put CMakeLists.txt
> file
> > into it. The upper CMake script will find new driver and add it to GDAL
> > build. In common cases no need to modify upper CMake scripts.
> >
> > 2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG,
> JPEG
> > etc). All this code are in separate repositories. I don't see the
> difference
> > to get this code from git pull from main GDAL repository or from the
> > separate repository via find_anyproject process. Current GDAL repository
> > looks like the https://github.com/nextgis-borsch packed in one
> repository.
> >
> >
> > In conclusion:
> >
> > 1. Borsch added flexible and useful features and not remove existing
> > approach
> >
> > 2. The current cmaked GDAL are in production in my company more than a
> year
> > on Windows, Linix, Mac OS, iOS, Android.
> >
> > 3. I'm ready to discuss and improve current solution. Any help are
> welcome
> >
> > 4. I also will be happy to contribute directly or via PR into GDAL trunk
> > instead of backporting in both directions improvements that we do in
> GDAL .
> >
> >
> > Finally:
> >
> > Find the link to page with the CMake in GDAL discussion -
> > https://trac.osgeo.org/gdal/wiki/CMake
> >
> > --
> > Best regards,
> >     Dmitry
> >
> >
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
> Alexander Bruy
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/00574de1/attachment-0001.html>

From miurahr at linux.com  Sun Oct 29 07:27:07 2017
From: miurahr at linux.com (Hiroshi Miura)
Date: Sun, 29 Oct 2017 23:27:07 +0900
Subject: [gdal-dev] About CMake build again
In-Reply-To: <8509a3a1-8b4a-6f46-0acb-0b2b84bf42fa@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <445e75b0-2a22-9034-a048-961255ae1174@linux.com>
 <8509a3a1-8b4a-6f46-0acb-0b2b84bf42fa@gmail.com>
Message-ID: <efccd600-9d16-7234-8448-fa6b8f843c29@linux.com>

Hi Dmitry,

On 2017年10月29日 07:21, Dmitry Baryshnikov wrote:
>
> Hi Hiroshi,
>
> I tried to test you solution:
>

Thank you for testing and sharing your experience.
It is working in progress status. And it is based on different policy with your solution.
 
Now I don't write document about a policy and how-to.

In current script assumes 'configuration has a priority over dependency libraries'
So when user/developer ON the driver, user/developer should install libraries on their own.

I have not done every dependencies  clean yet, but I've been improved.
You can  use vagrant script that prepares  environment to pass the build.

$ vagrant up

I've tested with LXC container environment on Linux.
>
> The QHULL is not mandatory for GDAL build and should not stop configuring at that moment.
>

It is hard work for me to determine which driver is mandatory and which is optional.  Also I need to  determine which driver should be  ON in default.
It would be a simple rule that driver which does not require 3rd party library is ON in default. Otherwise optional.

Every your feedback is valuable to improve script. It would be good PoC activity to know  which approach is preferable  for GDAL dev community.
I think your solution is to jump to highest level.  My trial is to realize an intermediate step from current source tree.


Hiroshi




From bishop.dev at gmail.com  Sun Oct 29 08:15:14 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 29 Oct 2017 18:15:14 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <CACmBxysN2O+L6+eGOjuvNuvhd5U-SD7S=D0jw84t2=XZEjNVtQ@mail.gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <CACmBxysN2O+L6+eGOjuvNuvhd5U-SD7S=D0jw84t2=XZEjNVtQ@mail.gmail.com>
Message-ID: <61fc829c-e85d-a173-1fab-a8ad82c73d6c@gmail.com>

Hi Kurt,

And how to deal with non Linux builds like Windows MSVC, mac OS XCode etc.?

Best regards,
     Dmitry

29.10.17 17:17, Kurt Schwehr пишет:
> While autoconf isn't pretty, it has done me the least amount of harm of any
> of the major build systems.  Without patches for the downstream packagers
> and CI (travis/appveyor), I would be -1.  e.g. debian/ubuntu,
> redhat/centos, macport/brew/fink, and others
>
> With those patches, I'm -0.
>
> BTW, It's not unreasonable to have separate build systems.  It's work, but
> very doable.  I maintain a bazel build environment.  I have to notice add
> or deletes of files in upstream, but it's been working for more than a
> decade.
>
> On Sat, Oct 28, 2017 at 11:11 PM, Alexander Bruy <alexander.bruy at gmail.com>
> wrote:
>
>> While I'm not GDAL developer or regular contributor (submitted only
>> few patches),
>> but still often build GDAL trunk on WIndows and Linux, and less often on
>> Mac.
>>
>> Personally I think that solution proposed in
>> https://trac.osgeo.org/gdal/ticket/7080
>> is more preferable. It does not require *all* dependencies to be build
>> with cmake,
>> it does not require maintaining forks with special directory structure for
>> *all*
>> dependencies, it plays well with conventions/packages provided on all
>> systems
>> out of the box. Maybe borsch is good for in-house use when all stack
>> is build from
>> scratch but it is not suitable for real-world use cases.
>>
>> Of course, #7080 is not ideal, there are some issues, but as I understand
>> the
>> work is not over and most (if not all) issues can be solved.
>>
>> Just my 2c.
>>
>> 2017-10-28 0:06 GMT+03:00 Dmitry Baryshnikov <bishop.dev at gmail.com>:
>>> Hi,
>>>
>>> As Even said it make sense to move discussion from this ticket
>>> (https://trac.osgeo.org/gdal/ticket/7080) to the list.
>>>
>>> First of all I would like to make small introduction to Borsch project.
>> Here
>>> it is some useful links:
>>>
>>> * Borsch repository: https://github.com/nextgis-borsch/borsch
>>>
>>> * Presentation on FOSS4G 2016:
>>> http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-
>> presentation.pdf
>>> * GDAL repository adapted for Borsch:
>>> https://github.com/nextgis-borsch/lib_gdal
>>>
>>> Shortly speaking Borsch is 3 CMake scripts which add ability to include
>>> dependence library in one line of code.
>>>
>>> It looks like:
>>>
>>> find_anyproject(TIFF REQUIRED)
>>>
>>> Certainly developer can add additional parameter to configure dependency
>> in
>>> find_anyproject function.
>>>
>>> Inside  find_anyproject work 2 cases:
>>>
>>> 1. First of all (by default, but can be overridden) CMake searches host
>>> system for dependency library (headers and lib files). This is usual
>> CMake
>>> find_package (https://cmake.org/cmake/help/
>> v3.0/command/find_package.html)
>>> with some additional logic to try different options for hard cases (like
>>> Qt).
>>>
>>> 2. If library not found, find_anyproject can get the sources or prebuild
>>> library from github.
>>>
>>> So the GDAL or any other library can be build the normal way, but
>> developer
>>> have additional features to configure build all libraries with one
>> compiler
>>> and one set of compiler/linker settings (with some limits). Such way we
>> can
>>> have rather complicated scenarios to build GDAL and dependencies.
>>>
>>> Here it is several examples of benefits of this approach:
>>>
>>> 1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library
>> for
>>> iOS as *.framework and for Android as *.so (arm7, arm64, i386, x86_64
>>> architecture). I build all dependencies include GDAL statically and link
>> in
>>> one fat library. The all code that do it:
>>> https://github.com/nextgis/nextgis_datastore/blob/master/
>> cmake/extlib.cmake#L118-L236
>>> By the way the library also builds on Linux and Mac OS (Windows under
>>> development) and CMake try to use existed in host system libraries. If
>> CMake
>>> find GDAL in host system it will use it and all (-DENABLE_PLSCENES=OFF
>> ... )
>>> will be ignored as it already build with another parameters.
>>>
>>> 2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa:
>>> https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules
>>>
>>> 3. Build QGIS
>>> (https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149
>> ),
>>> PostGIS
>>> (https://github.com/nextgis-borsch/postgis/blob/master/
>> CMakeLists.txt#L165),
>>> Formbuilder
>>> (https://github.com/nextgis/formbuilder/blob/master/cmake/
>> extlib.cmake#L53-L173)
>>> This is main Borsch features.
>>>
>>>
>>> There are some additional conventions like:
>>>
>>>      * I modify all libraries included into Borsch repository to install
>> on
>>> unix-like paths. For Linux this is usual, for Windows and Mac OS this
>> let us
>>> to use Qt installer framework an install software mach similar like on
>>> Linux. This is about target "install" which is vary on different
>> libraries
>>> (CMake has it own conventions about it). This is not mandatory for Borsch
>>> itself but useful. CMake can register installed libraries in system
>>> repository to simplify find them in find_package function.
>>>
>>>      * CMake get library version from sources in all libraries included
>> into
>>> Borsch (if applicable, otherwise set it in CMake script). This is
>> necessary
>>> if exact version of library needed. This is not mandatory. One more
>> benefit
>>> during building process we can see dependency library version in console.
>>>
>>>      * We modify all libraries included into Borsch repository to find
>>> dependencies using find_anyproject. It is simple to use libraries from
>> our
>>> borsch repository, but developer can fork them or use any other sources
>> and
>>> build systems to have dependency library in it's host system.
>>>
>>> One can see this is all very flexible.
>>>
>>>
>>> What about GDAL.
>>>
>>> 1. After unification GDALDataset and OGRDatasource current sources tree
>> is
>>> not fit for this new logic of GDAL classes. I rearranged sources more
>> closer
>>> to GDAL classes and CMake needs. Main changes are moving raster and
>> vector
>>> drivers inside drivers folder
>>> (https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This
>>> simplify situation where different drivers need the same dependency
>> library
>>> (libpg, libsqlite, etc.). Also there are several raster/vector drivers
>> which
>>> need a separate directory but now presented in ogr or frmts directories.
>>> There are some bad decisions I made - for example I moved unit tests into
>>> separate repository - this was a mistake. We will return unit tests back
>> to
>>> GDAL repository.
>>>
>>> An example of cmake friendly way see
>>> https://github.com/nextgis-borsch/lib_gdal/blob/master/
>> drivers/vector/CMakeLists.txt.
>>> The driver developer must only create new folder and put CMakeLists.txt
>> file
>>> into it. The upper CMake script will find new driver and add it to GDAL
>>> build. In common cases no need to modify upper CMake scripts.
>>>
>>> 2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG,
>> JPEG
>>> etc). All this code are in separate repositories. I don't see the
>> difference
>>> to get this code from git pull from main GDAL repository or from the
>>> separate repository via find_anyproject process. Current GDAL repository
>>> looks like the https://github.com/nextgis-borsch packed in one
>> repository.
>>>
>>> In conclusion:
>>>
>>> 1. Borsch added flexible and useful features and not remove existing
>>> approach
>>>
>>> 2. The current cmaked GDAL are in production in my company more than a
>> year
>>> on Windows, Linix, Mac OS, iOS, Android.
>>>
>>> 3. I'm ready to discuss and improve current solution. Any help are
>> welcome
>>> 4. I also will be happy to contribute directly or via PR into GDAL trunk
>>> instead of backporting in both directions improvements that we do in
>> GDAL .
>>>
>>> Finally:
>>>
>>> Find the link to page with the CMake in GDAL discussion -
>>> https://trac.osgeo.org/gdal/wiki/CMake
>>>
>>> --
>>> Best regards,
>>>      Dmitry
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>> --
>> Alexander Bruy
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>


From bishop.dev at gmail.com  Sun Oct 29 08:30:21 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 29 Oct 2017 18:30:21 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <efccd600-9d16-7234-8448-fa6b8f843c29@linux.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <445e75b0-2a22-9034-a048-961255ae1174@linux.com>
 <8509a3a1-8b4a-6f46-0acb-0b2b84bf42fa@gmail.com>
 <efccd600-9d16-7234-8448-fa6b8f843c29@linux.com>
Message-ID: <e7656db8-775b-3b6e-8e83-7367f2617943@gmail.com>

Hi Hiroshi,

I think that anyhow the current logic of makefile mast be transfer to 
CMake. See the 
https://github.com/OSGeo/gdal/blob/trunk/gdal/configure.ac or how I did 
it in lib_gdal repository. This logic is rather complicated!

About vagrant:

$ vagrant up
bash: vagrant: command not found

Vagrant is not documented dependency and I don't understand how it will 
help me in may building environment and what additional benefits vagrant 
provide to me in compare with autoconf?

I'm sure all steps in any environment, as Mateusz Łoskot wrote, should be:

git clone .../gdal
mkdir build
cd build
cmake ..
apps/gdalinfo --version


Best regards,
     Dmitry

29.10.17 17:27, Hiroshi Miura пишет:
> Hi Dmitry,
>
> On 2017年10月29日 07:21, Dmitry Baryshnikov wrote:
>> Hi Hiroshi,
>>
>> I tried to test you solution:
>>
> Thank you for testing and sharing your experience.
> It is working in progress status. And it is based on different policy with your solution.
>   
> Now I don't write document about a policy and how-to.
>
> In current script assumes 'configuration has a priority over dependency libraries'
> So when user/developer ON the driver, user/developer should install libraries on their own.
>
> I have not done every dependencies  clean yet, but I've been improved.
> You can  use vagrant script that prepares  environment to pass the build.
>
> $ vagrant up
>
> I've tested with LXC container environment on Linux.
>> The QHULL is not mandatory for GDAL build and should not stop configuring at that moment.
>>
> It is hard work for me to determine which driver is mandatory and which is optional.  Also I need to  determine which driver should be  ON in default.
> It would be a simple rule that driver which does not require 3rd party library is ON in default. Otherwise optional.
>
> Every your feedback is valuable to improve script. It would be good PoC activity to know  which approach is preferable  for GDAL dev community.
> I think your solution is to jump to highest level.  My trial is to realize an intermediate step from current source tree.
>
>
> Hiroshi
>
>
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171029/ba8e8aa9/attachment-0001.html>

From alexander.bruy at gmail.com  Mon Oct 30 00:00:27 2017
From: alexander.bruy at gmail.com (Alexander Bruy)
Date: Mon, 30 Oct 2017 09:00:27 +0200
Subject: [gdal-dev] About CMake build again
In-Reply-To: <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>
Message-ID: <CALuHMPDz-tt_hiie9MUJMeWwELARtcojPFUPTz9m=QcB7qxZhQ@mail.gmail.com>

Hi Dmitry,

thanks for explanation. I see that there is an option to use system libraries.
Maybe I'm wrong, but this is also possible with current build system and
CMake scripts from #7080. There is an option to build deps by myself and
use them to build GDAL, but again this is also possible with current build
system and CMake scripts from #7080.

I agree that automatic fetching of missed dependencies is nice feature. And
can simplify live in some cases. But there are questions:

1. what if dependency hosted on BitBucket, SourceForge or any self-hosted
VCS and not in your repository?
2. what if dependency use build system different from CMake?
3. what if upstream does not want/does not see abny benefits in moving to
GitHub and/or switching to CMake?

Correct me if I'm wrong, but most of the borsh's benefits require
changes not only
in GDAL, but also in all upstream projects, as well as infrastructure
changes for
them. Or why you maintain forks for every lib needed by GDAL in your repository?
If everything is fine and flexible why not use upstream projects directly?

2017-10-29 15:39 GMT+02:00 Dmitry Baryshnikov <bishop.dev at gmail.com>:
> 1. Build gdal with all dependencies getting them from github
> (WITH_EXTERNAL). Preferable for Windows
>
> 2. Build gdal using the system libraries. Preferable for Linux
>
> 3. Build gdal using the dependency libraries build by user (out of source)
> and registered in CMake package registry. This is I use now. This script
> help me to clone all libraries, build them and register them in CMake
> package registry
> (https://github.com/nextgis-borsch/borsch/blob/master/opt/tools.py#L134).
>
> My opinion is that different options is much flexible and suits for many
> scenarios as very limited solution from
> https://trac.osgeo.org/gdal/ticket/7080.

-- 
Alexander Bruy

From ari.jolma at gmail.com  Mon Oct 30 01:54:56 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 30 Oct 2017 10:54:56 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <10706047.0vAq8ZVGjg@even-i700>
 <ea00fbd6-d35d-7b29-de02-a75f48a857c2@gmail.com>
 <3815862.ekviXIZPzv@even-i700>
 <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
Message-ID: <3ef21aab-930c-4e49-de93-2991229736ae@gmail.com>

Ari Jolma kirjoitti 24.10.2017 klo 17:07:
>
> Whoa! How hard can XML be? I have a real Capabilities document (from 
> well known company) which defines *both* default and ows namespace to 
> http://www.opengis.net/ows/2.0.
>

Seems that XML is actually much harder than that :)

XML namespaces can be declared in any element and then they are in 
effect in that element and in all of its children unless they override 
the namespace declarations.

For example Rasdaman seems to write XML like that.

I'm wondering how much benefit there is from looking into the namespaces 
in WCS responses. Probably not much in practise. Not a lot of benefit 
from a lot of work if I implement those rules.

Ari


From bishop.dev at gmail.com  Mon Oct 30 02:06:16 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Mon, 30 Oct 2017 12:06:16 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <CALuHMPDz-tt_hiie9MUJMeWwELARtcojPFUPTz9m=QcB7qxZhQ@mail.gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>
 <CALuHMPDz-tt_hiie9MUJMeWwELARtcojPFUPTz9m=QcB7qxZhQ@mail.gmail.com>
Message-ID: <187fae33-f888-0a08-a8ba-ad4c8772ecc8@gmail.com>

Hi Alexander,

CMake scripts from #7080 have no logic presented in current building 
system (make/autoconf): there are several mandatory drivers, the 
optional drivers, and drivers depends from other drivers.

Also there is one big problem for me in #7080 - this is third build 
system additionally to GNUMakefile, makefile.vc.  And now CMakeLists.txt 
must be supported too. Three files which must be synced each other with 
and taking into consideration the upper scripts, it's awful!


That about your questions:

1. Now it is not supported. This is really limitations what should gone. 
It can be easily fixed. I thinking on this direction - may be somehow 
like in Carthage project was done (https://github.com/Carthage/Carthage).

2. Here we have 2 cases: 1 - cmaked dependency (we only remove current 
build system with own CMake not touching the original sources), 2 - wrap 
current build system by CMake (see how it is done for Qt4 - 
https://github.com/nextgis-borsch/lib_qt4)

3. This should not be the problem of upstream developers. It may be 
developed some script which periodically get sources and put them to 
cmaked repositories, build and run tests to report if everything is OK. 
Here we can achieve synced releases and developer branches with our owns 
prepared repositories.

4. What about option to get all needed dependencies from github 
(WITH_EXTERNAL) - yes we need own prepared repositories. Theoretical 
there is the mechanism to make direct clone from any repository 
(https://cmake.org/cmake/help/v3.8/module/ExternalProject.html) but 
there are several problems here:

1. Original repository may not support needed platforms (usually Mac OS, 
Android, iOS and Windows) or static/dynamic library builds.

2. No way to uniformly transfer building options to dependency builds.

3. Install paths of original projects may vary and this may be a problem 
in install target of main project. In current solution upper project 
installs all dependency dynamic libraries in it "install" target in 
uniform way.

To solve this problems I choose more simple way to have own prepared 
repositories (again, just like in Carthage approach).


Finally, thanks for your concrete questions!

Best regards,
     Dmitry

30.10.17 10:00, Alexander Bruy пишет:
> Hi Dmitry,
>
> thanks for explanation. I see that there is an option to use system libraries.
> Maybe I'm wrong, but this is also possible with current build system and
> CMake scripts from #7080. There is an option to build deps by myself and
> use them to build GDAL, but again this is also possible with current build
> system and CMake scripts from #7080.
>
> I agree that automatic fetching of missed dependencies is nice feature. And
> can simplify live in some cases. But there are questions:
>
> 1. what if dependency hosted on BitBucket, SourceForge or any self-hosted
> VCS and not in your repository?
> 2. what if dependency use build system different from CMake?
> 3. what if upstream does not want/does not see abny benefits in moving to
> GitHub and/or switching to CMake?
>
> Correct me if I'm wrong, but most of the borsh's benefits require
> changes not only
> in GDAL, but also in all upstream projects, as well as infrastructure
> changes for
> them. Or why you maintain forks for every lib needed by GDAL in your repository?
> If everything is fine and flexible why not use upstream projects directly?
>
> 2017-10-29 15:39 GMT+02:00 Dmitry Baryshnikov <bishop.dev at gmail.com>:
>> 1. Build gdal with all dependencies getting them from github
>> (WITH_EXTERNAL). Preferable for Windows
>>
>> 2. Build gdal using the system libraries. Preferable for Linux
>>
>> 3. Build gdal using the dependency libraries build by user (out of source)
>> and registered in CMake package registry. This is I use now. This script
>> help me to clone all libraries, build them and register them in CMake
>> package registry
>> (https://github.com/nextgis-borsch/borsch/blob/master/opt/tools.py#L134).
>>
>> My opinion is that different options is much flexible and suits for many
>> scenarios as very limited solution from
>> https://trac.osgeo.org/gdal/ticket/7080.


From mateusz at loskot.net  Mon Oct 30 02:24:34 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon, 30 Oct 2017 10:24:34 +0100
Subject: [gdal-dev] About CMake build again
In-Reply-To: <187fae33-f888-0a08-a8ba-ad4c8772ecc8@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>
 <CALuHMPDz-tt_hiie9MUJMeWwELARtcojPFUPTz9m=QcB7qxZhQ@mail.gmail.com>
 <187fae33-f888-0a08-a8ba-ad4c8772ecc8@gmail.com>
Message-ID: <CABUeae-6ga9vrGiMf-7QiG4iOyC74TnHgSUVFhgYk5tWKEe6FQ@mail.gmail.com>

On 30 October 2017 at 10:06, Dmitry Baryshnikov <bishop.dev at gmail.com> wrote:
>
> Also there is one big problem for me in #7080 - this is third build system
> additionally to GNUMakefile, makefile.vc.  And now CMakeLists.txt must be
> supported too. Three files which must be synced each other with and taking
> into consideration the upper scripts, it's awful!

Dmitry,

This issue is orthogonal to actual CMake challenge.
If core developers of a project X do not agree to switch to a new
build configuration Y,
then any initiative to develop setup for Y will live in a side car.

AFAIU, there is no plan or even will for such switch in GDAL.
Similar situation is with GEOS.

Finally, developing configuration for Y build system by completely
revolutionising structure of project X is a terrible thing to do in terms
of potential switch to Y. IOW, the bigger and deeper a revolution, the less
chance to get acceptance by core developers, also psychologically.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From bishop.dev at gmail.com  Mon Oct 30 02:42:24 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Mon, 30 Oct 2017 12:42:24 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <CABUeae-6ga9vrGiMf-7QiG4iOyC74TnHgSUVFhgYk5tWKEe6FQ@mail.gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>
 <CALuHMPDz-tt_hiie9MUJMeWwELARtcojPFUPTz9m=QcB7qxZhQ@mail.gmail.com>
 <187fae33-f888-0a08-a8ba-ad4c8772ecc8@gmail.com>
 <CABUeae-6ga9vrGiMf-7QiG4iOyC74TnHgSUVFhgYk5tWKEe6FQ@mail.gmail.com>
Message-ID: <c03d302f-630c-76dc-e0b4-0ff0c85883d2@gmail.com>

Hi Mateusz,

If really "there is no plan or even will for such switch in GDAL" I 
think nothing to discuss here.

The ticket #7080 should be closed and let's continue to live with 
current developing approach.

Which solution, my or Hiroshi, will more popular show the time.

Best regards,
     Dmitry

30.10.17 12:24, Mateusz Loskot пишет:
> On 30 October 2017 at 10:06, Dmitry Baryshnikov <bishop.dev at gmail.com> wrote:
>> Also there is one big problem for me in #7080 - this is third build system
>> additionally to GNUMakefile, makefile.vc.  And now CMakeLists.txt must be
>> supported too. Three files which must be synced each other with and taking
>> into consideration the upper scripts, it's awful!
> Dmitry,
>
> This issue is orthogonal to actual CMake challenge.
> If core developers of a project X do not agree to switch to a new
> build configuration Y,
> then any initiative to develop setup for Y will live in a side car.
>
> AFAIU, there is no plan or even will for such switch in GDAL.
> Similar situation is with GEOS.
>
> Finally, developing configuration for Y build system by completely
> revolutionising structure of project X is a terrible thing to do in terms
> of potential switch to Y. IOW, the bigger and deeper a revolution, the less
> chance to get acceptance by core developers, also psychologically.
>
> Best regards,


From mateusz at loskot.net  Mon Oct 30 02:45:47 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon, 30 Oct 2017 10:45:47 +0100
Subject: [gdal-dev] About CMake build again
In-Reply-To: <c03d302f-630c-76dc-e0b4-0ff0c85883d2@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>
 <CALuHMPDz-tt_hiie9MUJMeWwELARtcojPFUPTz9m=QcB7qxZhQ@mail.gmail.com>
 <187fae33-f888-0a08-a8ba-ad4c8772ecc8@gmail.com>
 <CABUeae-6ga9vrGiMf-7QiG4iOyC74TnHgSUVFhgYk5tWKEe6FQ@mail.gmail.com>
 <c03d302f-630c-76dc-e0b4-0ff0c85883d2@gmail.com>
Message-ID: <CABUeae9gRy1850-33riADkKbfF97r-h-dt=62eg0Z+-fRHqw=g@mail.gmail.com>

On 30 October 2017 at 10:42, Dmitry Baryshnikov <bishop.dev at gmail.com> wrote:
>
> If really "there is no plan or even will for such switch in GDAL" I think
> nothing to discuss here.

I indicated that it is "AFAIU".
I may be wrong.

Personally, I gave up about CMake for GDAL and I use the official build systems.
Luckily, GDAL still supports `--without-libtool` option.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From ari.jolma at gmail.com  Mon Oct 30 04:17:05 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 30 Oct 2017 13:17:05 +0200
Subject: [gdal-dev] About CMake build again
In-Reply-To: <CABUeae-6ga9vrGiMf-7QiG4iOyC74TnHgSUVFhgYk5tWKEe6FQ@mail.gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <61b5dce1-011b-fccd-6181-1e541e682e7c@gmail.com>
 <CALuHMPDz-tt_hiie9MUJMeWwELARtcojPFUPTz9m=QcB7qxZhQ@mail.gmail.com>
 <187fae33-f888-0a08-a8ba-ad4c8772ecc8@gmail.com>
 <CABUeae-6ga9vrGiMf-7QiG4iOyC74TnHgSUVFhgYk5tWKEe6FQ@mail.gmail.com>
Message-ID: <689c5932-8cf8-4637-cad1-cb284bf72d19@gmail.com>

Mateusz Loskot kirjoitti 30.10.2017 klo 11:24:
> On 30 October 2017 at 10:06, Dmitry Baryshnikov <bishop.dev at gmail.com> wrote:
>> Also there is one big problem for me in #7080 - this is third build system
>> additionally to GNUMakefile, makefile.vc.  And now CMakeLists.txt must be
>> supported too. Three files which must be synced each other with and taking
>> into consideration the upper scripts, it's awful!
> Dmitry,
>
> This issue is orthogonal to actual CMake challenge.
> If core developers of a project X do not agree to switch to a new
> build configuration Y,
> then any initiative to develop setup for Y will live in a side car.
>
> AFAIU, there is no plan or even will for such switch in GDAL.
> Similar situation is with GEOS.

https://github.com/OSGeo/gdal/graphs/contributors

It's basically Even who nowadays does developments for GDAL, and Kurt to 
some degree. So to change the build system, one needs only to convince 
Even :) I'm rather sure the rest of the PSC would not object.

I see the build system usually as a necessary evil. I'm yet to see a 
developer friendly build system. I don't know if anybody really has any 
passion to improve the current system of GDAL. I also don't understand 
the antipathy against libtool. I'm mostly happy with the current system 
since I'm on Linux and I usually don't need to mess with it. Building 
for Windows was a pain (even when I used to use mingw).

I have very little experience with CMake, mostly from building QGIS. It 
has a bit fancier UI than autotools but otherwise I don't have an opinion.

There are few things that could perhaps be better IMO

- the need to run make clean after updates (isn't it possible to have 
good dependencies?)
- the possibility to make real light-weight builds with only few drivers
- I also hand-edit the -O2 away from GDALmake.opt when I need to use 
gdb, maybe there is a configure option for that or something but I don't 
know

Best,

Ari

>
> Finally, developing configuration for Y build system by completely
> revolutionising structure of project X is a terrible thing to do in terms
> of potential switch to Y. IOW, the bigger and deeper a revolution, the less
> chance to get acceptance by core developers, also psychologically.
>
> Best regards,


From idan at miara.com  Mon Oct 30 06:36:43 2017
From: idan at miara.com (Idan Miara)
Date: Mon, 30 Oct 2017 15:36:43 +0200
Subject: [gdal-dev] Saving style/color table inside tiff
Message-ID: <CAEDrt3_yZu+UZk=d1ghDLce_b3bjxGQG3LsY=fkNZNhR1k-OrQ@mail.gmail.com>

Hi,

I would like to ask a few questions regarding color table/style inside
Tiffs (or any other standard raster format for that matter):

1. Single Band Byte Raster without scale/offset - I could a Byte band Tiff
with color table with gdal and load it successfully in QGIS, but if I try
to save a copy of that raster from within QGIS then it doesn't save the
color table, I get a grayscale raster as output.

2. Single Band non-Byte Raster - I could not save a float/int16 raster with
gdal, gdal just ignores the color table commands for non-byte raster. Is
there an option to save a color representation for non-byte raster inside
the raster itself? if not, what is a good practice for that ? is there a
standard cross application raster-style format? I could only see that QGIS
supports QML, which I guess is QGIS specific.

3. Single Band Byte raster with scale/offset - if I set a scale/offset to
my Byte raster then QGIS automatically converts it to Float32 raster upon
loading, I guess it's a QGIS limitation. I could not find a way to
scale/offset the color table itself, thus the raster cannot be colored
correctly with scale/offset. i.e. for scale=2, the raster values are 0-511,
but the color palette is only 0-255 so there is no way to color correctly
the values>255.

Idan.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/a18b351b/attachment.html>

From mohammedrashadkm at gmail.com  Mon Oct 30 08:16:12 2017
From: mohammedrashadkm at gmail.com (Rashad Kanavath)
Date: Mon, 30 Oct 2017 16:16:12 +0100
Subject: [gdal-dev] write nodata value using using creation option
Message-ID: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>

Hello,

Is it possible to set nodata using -co option.?

gdal_translate input.tif output.tif -co TIFFTAG_GDAL_NODATA=-30000
Input file size is 500, 500
Warning 6: driver GTiff does not support creation option TIFFTAG_GDAL_NODATA
0...10...20...30...40...50...60...70...80...90...100 - done.

According to doc, TIFFTAG_GDAL_NODATA is an tag available if GeoTIFF
profile  is GDALGeoTIFF.  and by default the profile is exactly that. I
cross checked this with sources.

using -a_nodata is working. But I would like to see if I can pass nodata
value via creation options. This is because in my workflow I am not using
gdal_translate utility.

gdalinfo --version
GDAL 2.2.0, released 2017/04/28


[1] http://www.gdal.org/frmt_gtiff.html
-- 
Regards,
   Rashad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/82532b25/attachment.html>

From andrew.bell.ia at gmail.com  Mon Oct 30 09:11:04 2017
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 30 Oct 2017 12:11:04 -0400
Subject: [gdal-dev] Crash using mem raster on Windows
Message-ID: <CACJ51z3fu7X+pPm3QDOE5mczkZWrYfZqSMY-2GUvpNjoqd+Z_w@mail.gmail.com>

Hi,

I'm creating a memory raster using the following code:

std::string makeColor()
{
    // Red is specified.  Green and blue are 0.
    static uint8_t rgb[12] = { 1, 2, 3, 4 };

    std::ostringstream ss;
    ss << "MEM:::PIXELS=4,LINES=1,BANDS=3,DATAPOINTER=" << &rgb;
    return ss.str();
}

I read the three bands in succession.  This works fine on OSX/Linux, but
fails when attempting to read the second band on Windows. Any thoughts on
what might be the issue?

Thanks,

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/497fd5a1/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Oct 30 09:20:53 2017
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Mon, 30 Oct 2017 09:20:53 -0700 (MST)
Subject: [gdal-dev] write nodata value using using creation option
In-Reply-To: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>
References: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>
Message-ID: <1509380453564-0.post@n6.nabble.com>

rashadkm wrote
> Hello,
> 
> Is it possible to set nodata using -co option.?
> 
> gdal_translate input.tif output.tif -co TIFFTAG_GDAL_NODATA=-30000
> Input file size is 500, 500
> Warning 6: driver GTiff does not support creation option
> TIFFTAG_GDAL_NODATA
> 0...10...20...30...40...50...60...70...80...90...100 - done.
> 
> According to doc, TIFFTAG_GDAL_NODATA is an tag available if GeoTIFF
> profile  is GDALGeoTIFF.  and by default the profile is exactly that. I
> cross checked this with sources.
> 
> using -a_nodata is working. But I would like to see if I can pass nodata
> value via creation options. This is because in my workflow I am not using
> gdal_translate utility.
> 
> gdalinfo --version
> GDAL 2.2.0, released 2017/04/28
> 
> 
> [1] http://www.gdal.org/frmt_gtiff.html
> -- 
> Regards,
>    Rashad

Hi Rashad,

If you do not use gdal_translate, please tell us what you do use - relevant
part of your Python code or whatever you have. By reading the manual
http://www.gdal.org/frmt_gtiff.html it is obvious that there is no such
creation option but for sure there is some other way.

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jdaniel at etresoft.com  Mon Oct 30 12:20:52 2017
From: jdaniel at etresoft.com (John Daniel)
Date: Mon, 30 Oct 2017 19:20:52 +0000
Subject: [gdal-dev] About CMake build again
In-Reply-To: <61fc829c-e85d-a173-1fab-a8ad82c73d6c@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <CALuHMPD1W0picmMy38Jz_8fEvGYDtaX2C_NCDrv5YSKNQo9RbQ@mail.gmail.com>
 <CACmBxysN2O+L6+eGOjuvNuvhd5U-SD7S=D0jw84t2=XZEjNVtQ@mail.gmail.com>
 <61fc829c-e85d-a173-1fab-a8ad82c73d6c@gmail.com>
Message-ID: <256B3AC5-505F-460B-BA87-4975E1D568C4@etresoft.com>

Xcode builds, targeting both macOS and iOS, are my primary concern. I have to use CMake for MySQL and JPEG2000. MySQL is only for server-side work and testing because licensing issues keep it out of any distributed products. JPEG2000 works fine. I have tried and failed to get the current, CMake-based KML working. I can’t figure it out and neither can the KML developers. Instead, I am using the last autotools version. At some point I will port source code fixes from the new version back to my autotools branch.

I always assumed that CMake only works on Linux, and maybe Windows I guess. You can’t use macOS/iOS/Xcode as a rationale for using CMake. I can’t imagine the GDAL CMake maintainers having the Apple hardware, accounts, and expertise necessary to keep that working. I certainly don’t have the CMake expertise. My interest in all of this is working with GIS data and GDAL, not CMake. 

The problem is that CMake is such an opaque black box. If it doesn’t work the first time, you have to dive very deep into the internals to figure it out. Autotools, for all its faults, needs only decent UNIX skills to get working. My build scripts are very complicated, but they do work. The only part I ever completely failed at was a CMake library. 

If you want to sell CMake as a Windows solution, fine. I don’t do Windows and I don’t care. But CMake can’t handle Apple platforms. 

John Daniel
Etresoft, Inc.

> On Oct 29, 2017, at 11:15 AM, Dmitry Baryshnikov <bishop.dev at gmail.com> wrote:
> 
> Hi Kurt,
> 
> And how to deal with non Linux builds like Windows MSVC, mac OS XCode etc.?
> 
> Best regards,
>    Dmitry
> 
> 29.10.17 17:17, Kurt Schwehr пишет:
>> While autoconf isn't pretty, it has done me the least amount of harm of any
>> of the major build systems.  Without patches for the downstream packagers
>> and CI (travis/appveyor), I would be -1.  e.g. debian/ubuntu,
>> redhat/centos, macport/brew/fink, and others
>> 
>> With those patches, I'm -0.
>> 
>> BTW, It's not unreasonable to have separate build systems.  It's work, but
>> very doable.  I maintain a bazel build environment.  I have to notice add
>> or deletes of files in upstream, but it's been working for more than a
>> decade.
>> 
>> On Sat, Oct 28, 2017 at 11:11 PM, Alexander Bruy <alexander.bruy at gmail.com>
>> wrote:
>> 
>>> While I'm not GDAL developer or regular contributor (submitted only
>>> few patches),
>>> but still often build GDAL trunk on WIndows and Linux, and less often on
>>> Mac.
>>> 
>>> Personally I think that solution proposed in
>>> https://trac.osgeo.org/gdal/ticket/7080
>>> is more preferable. It does not require *all* dependencies to be build
>>> with cmake,
>>> it does not require maintaining forks with special directory structure for
>>> *all*
>>> dependencies, it plays well with conventions/packages provided on all
>>> systems
>>> out of the box. Maybe borsch is good for in-house use when all stack
>>> is build from
>>> scratch but it is not suitable for real-world use cases.
>>> 
>>> Of course, #7080 is not ideal, there are some issues, but as I understand
>>> the
>>> work is not over and most (if not all) issues can be solved.
>>> 
>>> Just my 2c.
>>> 
>>> 2017-10-28 0:06 GMT+03:00 Dmitry Baryshnikov <bishop.dev at gmail.com>:
>>>> Hi,
>>>> 
>>>> As Even said it make sense to move discussion from this ticket
>>>> (https://trac.osgeo.org/gdal/ticket/7080) to the list.
>>>> 
>>>> First of all I would like to make small introduction to Borsch project.
>>> Here
>>>> it is some useful links:
>>>> 
>>>> * Borsch repository: https://github.com/nextgis-borsch/borsch
>>>> 
>>>> * Presentation on FOSS4G 2016:
>>>> http://nextgis.ru/wp-content/uploads/2016/08/NextGIS-Borsh-
>>> presentation.pdf
>>>> * GDAL repository adapted for Borsch:
>>>> https://github.com/nextgis-borsch/lib_gdal
>>>> 
>>>> Shortly speaking Borsch is 3 CMake scripts which add ability to include
>>>> dependence library in one line of code.
>>>> 
>>>> It looks like:
>>>> 
>>>> find_anyproject(TIFF REQUIRED)
>>>> 
>>>> Certainly developer can add additional parameter to configure dependency
>>> in
>>>> find_anyproject function.
>>>> 
>>>> Inside  find_anyproject work 2 cases:
>>>> 
>>>> 1. First of all (by default, but can be overridden) CMake searches host
>>>> system for dependency library (headers and lib files). This is usual
>>> CMake
>>>> find_package (https://cmake.org/cmake/help/
>>> v3.0/command/find_package.html)
>>>> with some additional logic to try different options for hard cases (like
>>>> Qt).
>>>> 
>>>> 2. If library not found, find_anyproject can get the sources or prebuild
>>>> library from github.
>>>> 
>>>> So the GDAL or any other library can be build the normal way, but
>>> developer
>>>> have additional features to configure build all libraries with one
>>> compiler
>>>> and one set of compiler/linker settings (with some limits). Such way we
>>> can
>>>> have rather complicated scenarios to build GDAL and dependencies.
>>>> 
>>>> Here it is several examples of benefits of this approach:
>>>> 
>>>> 1. NextGIS Mobile SDK v3. SDK based on GDAL and need it in one library
>>> for
>>>> iOS as *.framework and for Android as *.so (arm7, arm64, i386, x86_64
>>>> architecture). I build all dependencies include GDAL statically and link
>>> in
>>>> one fat library. The all code that do it:
>>>> https://github.com/nextgis/nextgis_datastore/blob/master/
>>> cmake/extlib.cmake#L118-L236
>>>> By the way the library also builds on Linux and Mac OS (Windows under
>>>> development) and CMake try to use existed in host system libraries. If
>>> CMake
>>>> find GDAL in host system it will use it and all (-DENABLE_PLSCENES=OFF
>>> ... )
>>>> will be ignored as it already build with another parameters.
>>>> 
>>>> 2. Build GDAL Windows standalone installer and GDAL Ubuntu ppa:
>>>> https://github.com/nextgis/ppa/blob/master/gdal/master/debian/rules
>>>> 
>>>> 3. Build QGIS
>>>> (https://github.com/nextgis/nextgisqgis/blob/master/CMakeLists.txt#L149
>>> ),
>>>> PostGIS
>>>> (https://github.com/nextgis-borsch/postgis/blob/master/
>>> CMakeLists.txt#L165),
>>>> Formbuilder
>>>> (https://github.com/nextgis/formbuilder/blob/master/cmake/
>>> extlib.cmake#L53-L173)
>>>> This is main Borsch features.
>>>> 
>>>> 
>>>> There are some additional conventions like:
>>>> 
>>>>     * I modify all libraries included into Borsch repository to install
>>> on
>>>> unix-like paths. For Linux this is usual, for Windows and Mac OS this
>>> let us
>>>> to use Qt installer framework an install software mach similar like on
>>>> Linux. This is about target "install" which is vary on different
>>> libraries
>>>> (CMake has it own conventions about it). This is not mandatory for Borsch
>>>> itself but useful. CMake can register installed libraries in system
>>>> repository to simplify find them in find_package function.
>>>> 
>>>>     * CMake get library version from sources in all libraries included
>>> into
>>>> Borsch (if applicable, otherwise set it in CMake script). This is
>>> necessary
>>>> if exact version of library needed. This is not mandatory. One more
>>> benefit
>>>> during building process we can see dependency library version in console.
>>>> 
>>>>     * We modify all libraries included into Borsch repository to find
>>>> dependencies using find_anyproject. It is simple to use libraries from
>>> our
>>>> borsch repository, but developer can fork them or use any other sources
>>> and
>>>> build systems to have dependency library in it's host system.
>>>> 
>>>> One can see this is all very flexible.
>>>> 
>>>> 
>>>> What about GDAL.
>>>> 
>>>> 1. After unification GDALDataset and OGRDatasource current sources tree
>>> is
>>>> not fit for this new logic of GDAL classes. I rearranged sources more
>>> closer
>>>> to GDAL classes and CMake needs. Main changes are moving raster and
>>> vector
>>>> drivers inside drivers folder
>>>> (https://github.com/nextgis-borsch/lib_gdal/tree/master/drivers).This
>>>> simplify situation where different drivers need the same dependency
>>> library
>>>> (libpg, libsqlite, etc.). Also there are several raster/vector drivers
>>> which
>>>> need a separate directory but now presented in ogr or frmts directories.
>>>> There are some bad decisions I made - for example I moved unit tests into
>>>> separate repository - this was a mistake. We will return unit tests back
>>> to
>>>> GDAL repository.
>>>> 
>>>> An example of cmake friendly way see
>>>> https://github.com/nextgis-borsch/lib_gdal/blob/master/
>>> drivers/vector/CMakeLists.txt.
>>>> The driver developer must only create new folder and put CMakeLists.txt
>>> file
>>>> into it. The upper CMake script will find new driver and add it to GDAL
>>>> build. In common cases no need to modify upper CMake scripts.
>>>> 
>>>> 2. I remove third-party code from drivers folders (TIFF, GeoTIF, PNG,
>>> JPEG
>>>> etc). All this code are in separate repositories. I don't see the
>>> difference
>>>> to get this code from git pull from main GDAL repository or from the
>>>> separate repository via find_anyproject process. Current GDAL repository
>>>> looks like the https://github.com/nextgis-borsch packed in one
>>> repository.
>>>> 
>>>> In conclusion:
>>>> 
>>>> 1. Borsch added flexible and useful features and not remove existing
>>>> approach
>>>> 
>>>> 2. The current cmaked GDAL are in production in my company more than a
>>> year
>>>> on Windows, Linix, Mac OS, iOS, Android.
>>>> 
>>>> 3. I'm ready to discuss and improve current solution. Any help are
>>> welcome
>>>> 4. I also will be happy to contribute directly or via PR into GDAL trunk
>>>> instead of backporting in both directions improvements that we do in
>>> GDAL .
>>>> 
>>>> Finally:
>>>> 
>>>> Find the link to page with the CMake in GDAL discussion -
>>>> https://trac.osgeo.org/gdal/wiki/CMake
>>>> 
>>>> --
>>>> Best regards,
>>>>     Dmitry
>>>> 
>>>> 
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> 
>>> 
>>> --
>>> Alexander Bruy
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> 
>> 
>> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Mon Oct 30 13:36:48 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Oct 2017 21:36:48 +0100
Subject: [gdal-dev] Crash using mem raster on Windows
In-Reply-To: <CACJ51z3fu7X+pPm3QDOE5mczkZWrYfZqSMY-2GUvpNjoqd+Z_w@mail.gmail.com>
References: <CACJ51z3fu7X+pPm3QDOE5mczkZWrYfZqSMY-2GUvpNjoqd+Z_w@mail.gmail.com>
Message-ID: <3533801.lnrTQSsNsX@even-i700>

Andrew,

> I'm creating a memory raster using the following code:
> [...]
> I read the three bands in succession.  This works fine on OSX/Linux, but
> fails when attempting to read the second band on Windows. Any thoughts on
> what might be the issue?

You need to use CPLPrintPointer() to format the pointer in a way
that will please the MEM driver

See https://github.com/OSGeo/gdal/blob/ddbf6d39aa4b005a77ca4f27c2d61a3214f336f8/gdal/alg/gdalcutline.cpp#L341

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/67bc8cc1/attachment.html>

From even.rouault at spatialys.com  Mon Oct 30 13:37:52 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Oct 2017 21:37:52 +0100
Subject: [gdal-dev] write nodata value using using creation option
In-Reply-To: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>
References: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>
Message-ID: <2044147.35xk69Zars@even-i700>

On lundi 30 octobre 2017 16:16:12 CET Rashad Kanavath wrote:
> Hello,
> 
> Is it possible to set nodata using -co option.?
> 
> gdal_translate input.tif output.tif -co TIFFTAG_GDAL_NODATA=-30000
> Input file size is 500, 500
> Warning 6: driver GTiff does not support creation option TIFFTAG_GDAL_NODATA
> 0...10...20...30...40...50...60...70...80...90...100 - done.
> 
> According to doc, TIFFTAG_GDAL_NODATA is an tag available if GeoTIFF
> profile  is GDALGeoTIFF.  and by default the profile is exactly that. I
> cross checked this with sources.
> 
> using -a_nodata is working. But I would like to see if I can pass nodata
> value via creation options. This is because in my workflow I am not using
> gdal_translate utility.

You can use the GDALSetNoDataValue() API, or its declinations in the language you use.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/b9efc6dc/attachment-0001.html>

From even.rouault at spatialys.com  Mon Oct 30 13:41:15 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Oct 2017 21:41:15 +0100
Subject: [gdal-dev] WCS driver
In-Reply-To: <3ef21aab-930c-4e49-de93-2991229736ae@gmail.com>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
 <3ef21aab-930c-4e49-de93-2991229736ae@gmail.com>
Message-ID: <4694741.uc9r9kQjSb@even-i700>

On lundi 30 octobre 2017 10:54:56 CET Ari Jolma wrote:
> Ari Jolma kirjoitti 24.10.2017 klo 17:07:
> > Whoa! How hard can XML be? I have a real Capabilities document (from
> > well known company) which defines *both* default and ows namespace to
> > http://www.opengis.net/ows/2.0.
> 
> Seems that XML is actually much harder than that :)
> 
> XML namespaces can be declared in any element and then they are in
> effect in that element and in all of its children unless they override
> the namespace declarations.
> 
> For example Rasdaman seems to write XML like that.
> 
> I'm wondering how much benefit there is from looking into the namespaces
> in WCS responses. Probably not much in practise. Not a lot of benefit
> from a lot of work if I implement those rules.

Yes, XML can be a pain.

Did you see my past suggestion of just stripping all namespace prefixes from elements with
CPLStripXMLNamespace(psRoot, NULL, TRUE) ?

I don't expect namespace ambiguities in the case of decoding WCS GetCapabilities or 
GetCoverage responses.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/ead02a95/attachment.html>

From even.rouault at spatialys.com  Mon Oct 30 13:53:21 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Oct 2017 21:53:21 +0100
Subject: [gdal-dev] Saving style/color table inside tiff
In-Reply-To: <CAEDrt3_yZu+UZk=d1ghDLce_b3bjxGQG3LsY=fkNZNhR1k-OrQ@mail.gmail.com>
References: <CAEDrt3_yZu+UZk=d1ghDLce_b3bjxGQG3LsY=fkNZNhR1k-OrQ@mail.gmail.com>
Message-ID: <2185237.DRuLKgM1rP@even-i700>

On lundi 30 octobre 2017 15:36:43 CET Idan Miara wrote:
> Hi,
> 
> I would like to ask a few questions regarding color table/style inside
> Tiffs (or any other standard raster format for that matter):
> 
> 1. Single Band Byte Raster without scale/offset - I could a Byte band Tiff
> with color table with gdal and load it successfully in QGIS, but if I try
> to save a copy of that raster from within QGIS then it doesn't save the
> color table, I get a grayscale raster as output.
Probably QGIS limitation
> 
> 2. Single Band non-Byte Raster - I could not save a float/int16 raster with
> gdal, gdal just ignores the color table commands for non-byte raster. Is
> there an option to save a color representation for non-byte raster inside
> the raster itself? 
GDAL supports writing color table in TIFF for Byte and UInt16 (not Int16). This is a limitation 
of the TIFF format. And actually this is more a fundamental limitation. Color table (in the 
strict sense) wouldn't make sense for other data types. For float, you need more to define 
ranges, with interpolation when a value is in the middle of a range. Typically what the 
gdaldem color-relief utility does with .cpt files.

> if not, what is a good practice for that ? is there a
> standard cross application raster-style format? I could only see that QGIS
> supports QML, which I guess is QGIS specific.
> 
> 3. Single Band Byte raster with scale/offset - if I set a scale/offset to
> my Byte raster then QGIS automatically converts it to Float32 raster upon
> loading, I guess it's a QGIS limitation. I could not find a way to
> scale/offset the color table itself, thus the raster cannot be colored
> correctly with scale/offset. i.e. for scale=2, the raster values are 0-511,
> but the color palette is only 0-255 so there is no way to color correctly
> the values>255.

Hum, I believe that the semantics of scale/offset + color table is not well defined in GDAL. 

> 
> Idan.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/4807c258/attachment.html>

From briantjacobs at gmail.com  Mon Oct 30 13:56:17 2017
From: briantjacobs at gmail.com (btjakes)
Date: Mon, 30 Oct 2017 13:56:17 -0700 (MST)
Subject: [gdal-dev] Issues with bipolar conic western hemisphere projection
 (+proj=bipc +ns)
Message-ID: <1509396977078-0.post@n6.nabble.com>

Hi, I've brought up this issue on stackoverflow but thought I'd get better
visibility here.
https://stackoverflow.com/questions/47019616/gdal-doesnt-recognize-bipolar-conic-western-hemisphere-projection

I'm having trouble with a particular projection. It seems supported within
proj4 (http://proj4.org/usage/operations/projections/bipc.html) But when I
use it within gdal it's as if it doesnt exist:

gdalsrsinfo:
```
gdalsrsinfo -o proj4 "+proj=bipc +ns"
```
yields
```
failed to load SRS definition
```
gdalwarp:
```
gdalwarp -overwrite -s_srs EPSG:4326 -t_srs "+proj=bipc +ns" -of GTiff
in.tiff out.tiff
```
yields
```
ERROR 1: Translating source or target SRS failed: +proj=bipc +ns
```

Also, running `proj -lp` lists it bipc : Bipolar conic of western
hemisphere.

These commands work fine for me with more common (re)projections, and I've
tried this on GDAL 1.11.5 and 2.2.2.

I was able to get this sort of to work within a mapbox rasterio script (not
sure what the difference is, given that it is GDAL powered). There's a
different problem. I'm doing a reprojection from WGS84 raster data to
"+proj=bipc +ns" and it blots out a bunch of the data through the center of
the image. 

Before:
<http://osgeo-org.1560.x6.nabble.com/file/t382003/Screen_Shot_1.png> 

After:
<http://osgeo-org.1560.x6.nabble.com/file/t382003/Screen_Shot_2.png> 
(NODATA is black)

This seems like some sort of artifact from the hybrid nature of the
projection (http://www.quadibloc.com/maps/images/bocc.gif). But I'm not sure
how to remedy this.

I can put `SOURCE_EXTRA=1000 SAMPLE_GRID=YES SAMPLE_STEPS=100` gdalwarp
flags in the rasterio script (a la
http://osgeo-org.1560.x6.nabble.com/gdalwarp-cutting-off-projected-image-td3756390.html)
but they dont seem to have an effect.

The relevant rasterio code is here

```
destCrs = rasterio.crs.CRS.from_string("+proj=bipc +ns")
width = 3142 
height = 4788
bounds = rasterio.coords.BoundingBox(left=-8140886.583,
bottom=-11629369.004, right=6276024.286, top=10340131.073)
affine = rasterio.transform.from_bounds(bounds.left, bounds.bottom,
bounds.right, bounds.top, width, height)

bandIn = src.read(1)

np.putmask(bandIn, bandIn < 0, 0)
bandOut = np.empty((height, width), np.float32)

reproject(
	source=bandIn,
	destination=bandOut,
	src_transform=src.affine,
	src_crs=src.crs,
	dst_transform=affine,
	dst_crs=destCrs,
	resampling=RESAMPLING.nearest,
	# Commented out GDAL flags for now: 
	# SOURCE_EXTRA=1000, SAMPLE_GRID="YES", SAMPLE_STEPS=100
)
```

Thanks for any help on either route.



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Mon Oct 30 15:14:36 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Oct 2017 23:14:36 +0100
Subject: [gdal-dev] Crash using mem raster on Windows
In-Reply-To: <CACJ51z0KivRw-uYGEk8F-5DHSwRAnWnzu6jF6M1EQLrOT209og@mail.gmail.com>
References: <CACJ51z3fu7X+pPm3QDOE5mczkZWrYfZqSMY-2GUvpNjoqd+Z_w@mail.gmail.com>
 <3533801.lnrTQSsNsX@even-i700>
 <CACJ51z0KivRw-uYGEk8F-5DHSwRAnWnzu6jF6M1EQLrOT209og@mail.gmail.com>
Message-ID: <5880334.6btJ0hF0Pk@even-i700>

On lundi 30 octobre 2017 18:08:52 CET Andrew Bell wrote:
> On Mon, Oct 30, 2017 at 4:36 PM, Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > Andrew,
> > 
> > > I'm creating a memory raster using the following code:
> > > 
> > > [...]
> > > 
> > > I read the three bands in succession. This works fine on OSX/Linux, but
> > > 
> > > fails when attempting to read the second band on Windows. Any thoughts
> > > on
> > > 
> > > what might be the issue?
> > 
> > You need to use CPLPrintPointer() to format the pointer in a way
> > 
> > that will please the MEM driver
> > 
> > 
> > 
> > See https://github.com/OSGeo/gdal/blob/ddbf6d39aa4b005a77ca4f27c
> > 2d61a3214f336f8/gdal/alg/gdalcutline.cpp#L341
> 
> Thanks.
> 
> This doesn't seem robust.  It seems the code should be able to deal with
> something printed as a standard pointer.
> Is there some reason you know of why it simply doesn't scan the value?

Part of the answer is in this code snippet

{{{

int CPLPrintPointer( char *pszBuffer, void *pValue, int nMaxLen )
{
[...]
    char szTemp[64] = {};

    snprintf(szTemp, sizeof(szTemp), "%p", pValue);

    // On windows, and possibly some other platforms the sprintf("%p")
    // does not prefix things with 0x so it is hard to know later if the
    // value is hex encoded.  Fix this up here.

    if( !STARTS_WITH_CI(szTemp, "0x") )
        snprintf(szTemp, sizeof(szTemp), "0x%p", pValue);

    return CPLPrintString(pszBuffer, szTemp, nMaxLen);
}
}}}

The MEM buffer apparently supports passing the pointer as an hexadecimal value with must 
be prefix with 0x, or a decimal value.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/8552f289/attachment-0001.html>

From even.rouault at spatialys.com  Mon Oct 30 15:14:57 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 30 Oct 2017 23:14:57 +0100
Subject: [gdal-dev] About CMake build again
In-Reply-To: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
Message-ID: <2354612.titQqOS24Y@even-i700>

Hi,

Trying to sum up my thoughts on this topic and answering to various points raised in this 
discussion thread:

- I believe a relevant question to ask to ourselves would be: "imagine that GDAL would come 
without any build system at all, what is the one that we would add" ? Ok, that's a bit silly to 
turn the question like that, a more realistic one would be "imagine you're going to create a 
software that will rule over the world, for the 20 next years and beyond, and should run on 
all reasonable platforms, which build system would we use? If the answer is clearly "cmake", 
then it is worth examining if there is not a path that would lead us to that point.
Similar question: is it an effort that will make GDAL development a bit easier for new 
contributors?

- Must be reasonably friendly for GDAL developers, and for GDAL users (users here = people 
building GDAL, but not actively hacking into its sources). As a user of cmake on Linux (and 
marginally on Windows), my experiences are rather good.

- the selling points I'd see with cmake would be the possibility of having ultimately a single 
build system, instead of the 2 ones we have. + solving the current lack of dependency 
tracking (speaking here about the mecanism that cause a change in a .h file to make the 
.c/.cpp files that depend on it to be automatically rebuilt). We could add that by using 
automake instead of our home-made GNUmakefile's, but doesn't feel like that's worth the 
effort by itself.
A nice side effect could also be the opportunity to drop some cruft that has accumulated 
over years in the current build systems (supporting ancient library versions that no longer 
make sense)

- If we added cmake support in trunk, I think this would only make sense if (all conditions to 
be met)
	*  we have at least a couple of "champions" to support the effort, and with an 
agreement on how to use cmake as a in-tree build solution. Regarding Borsch, I think Dmitry 
and his team did an impressive work, although I think that for GDAL we would want a more 
"traditional" way of using cmake (in-tree, no particular requirents regarding how the 
dependencies should be made). I'd hope that part of the work done on Borsch (or at the very 
least good ideas and the lessons learnt) could be ported back to such a more traditional way 
(and in a way where that would still be useful for Borsch. Possible win-win ?)
	* growing it from an experimental status to the recommended build system, once 
its completely mature. I'd expect that to require a transition over one or two release cycles 
(one reason for that delay would be that systems ship with a recent enough version of cmake 
regarding the minimum we would require)
	* ultimately removing autoconf + nmake support. Clearly we don't want to 
support 3 different build systems for the next 20 years.

- Thinking that if there's an agreement to give it a try, the next OSGeo code sprint ( https://
wiki.osgeo.org/wiki/OSGeo_Code_Sprint_2018 ) could be the opportunity to boost (no pun 
intended) the effort

- I'm puzzled about some of you having apparently completely different feeback regarding 
CMake on the same platform (MacOS). I don't owe a Mac, so I've no informed opinion on this. 
But I see that a software, with a complexity similar to GDAL, like QGIS uses CMake and it 
builds on Linux, Windows and MacOSX

- There wasn't much discussion about support for more exotic targets, like cross-compiling 
for Windows with mingw compiler hosted on Linux. But openjpeg for example has Travis-CI 
targets doing that, so this is at least achievable for a simple library.

- I've no fundamental objection to cmake... nor fundamental enthousiasm for it or mastering 
of it (could say the same about autoconf/automake or nmake. Build systems are boring 
subjects, aren't they ?)

Even

PS: for Ari, try ./configure --enanble-debug for builds with -g and without -O2 ;-)

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171030/2e482f4b/attachment.html>

From ari.jolma at gmail.com  Mon Oct 30 23:23:08 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 31 Oct 2017 08:23:08 +0200
Subject: [gdal-dev] OGC announces a new standard that improves the way
 information is referenced to the earth
In-Reply-To: <1509228992087-0.post@n6.nabble.com>
References: <1509228992087-0.post@n6.nabble.com>
Message-ID: <b3e9bfcc-8f7b-128b-617f-93ca90864ce8@gmail.com>

That also caught my eye. The text sounds a bit like marketing talk but 
maybe there is something.

 From a quick look my understanding is that the idea is to create a grid 
that divides the whole earth into cells of similar shape in a sequence 
of increasing cell size. And that sounds to me like a new idea.

Any other thoughts? Did I get the idea right?

Best,

Ari


Helmut Kudrnovsky kirjoitti 29.10.2017 klo 01:16:
> Fyi
>
> http://www.opengeospatial.org/pressroom/pressreleases/2656
>
> "The goal of DGGS is to enable rapid assembly of spatial data without the
> difficulties of working with projected coordinate reference systems. The OGC
> DGGS Abstract Specification standard defines the conceptual model and a set
> of rules for building highly efficient architectures for spatial data
> storage, integration and analytics. ....."
>
>
>
> -----
> best regards
> Helmut
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From ari.jolma at gmail.com  Mon Oct 30 23:33:04 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 31 Oct 2017 08:33:04 +0200
Subject: [gdal-dev] WCS driver
In-Reply-To: <4694741.uc9r9kQjSb@even-i700>
References: <6867cdba-3bee-4cde-3414-b12a7ff5b6d1@gmail.com>
 <28ebb245-b14b-e90e-d179-3f7c1869e052@gmail.com>
 <3ef21aab-930c-4e49-de93-2991229736ae@gmail.com>
 <4694741.uc9r9kQjSb@even-i700>
Message-ID: <0d5abdd2-028c-68c5-7cbc-3299b700f4a1@gmail.com>

Even Rouault kirjoitti 30.10.2017 klo 22:41:
>
> On lundi 30 octobre 2017 10:54:56 CET Ari Jolma wrote:
>
>
> >
>
> > XML namespaces can be declared in any element and then they are in
>
> > effect in that element and in all of its children unless they override
>
> > the namespace declarations.
>
> >
>
>
> Yes, XML can be a pain.
>
> Did you see my past suggestion of just stripping all namespace 
> prefixes from elements with
>
> CPLStripXMLNamespace(psRoot, NULL, TRUE) ?
>

Yes. I dropped the examine of namespaces from my code and use the above 
namespace dropper instead.

If we want to support at some point namespaces later in some case, maybe 
a similar function that fixes namespace prefixes to something we decide 
would be used. I mean that after the method, we would be sure the 
prefixes for "http://www.opengis.net/wcs/2.0" are "wcs" for example.

One thing CPLStripXMLNamespace could perhaps do is remove the namespace 
definition attribute nodes from element nodes.

Ari

> I don't expect namespace ambiguities in the case of decoding WCS 
> GetCapabilities or GetCoverage responses.
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/89c81ac2/attachment.html>

From ari.jolma at gmail.com  Mon Oct 30 23:58:24 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 31 Oct 2017 08:58:24 +0200
Subject: [gdal-dev] SRS definition
Message-ID: <5547346e-1925-6e09-c34c-d5350ada6cec@gmail.com>

Rasdaman writes SRS definitions such as 
"http://ows.rasdaman.org/def/crs/EPSG/0/32633" in WCS coverage 
descriptions. The URL returns a gml:ProjectedCRS XML. GDAL fetches the 
XML but then gives up in SetFromUserInput since it only expects "..that 
this method will be extended in the future to support  XML".

I wonder could the "crs/EPSG/0/32633" part be used as a proof that we 
know what this is?

Ari



From vincent.bernat at magellium.fr  Tue Oct 31 00:47:50 2017
From: vincent.bernat at magellium.fr (Vincent BERNAT)
Date: Tue, 31 Oct 2017 07:47:50 +0000
Subject: [gdal-dev] [gdal 2.2.2] different result with gdal 2.1.0
Message-ID: <1509436070082.90129@magellium.fr>

Hello all,


I was working with gdal 2.1.0 and i decide to update to 2.2.2

I work on Centos.


Everything is ok but on one image, i don't get the same result (and the result with 2.2.2 seems incorrect).


One of the most important difference is the result of the call of this function :

GDALSuggestedWarpOutput


Here are my image gdalinfo


Size is 1536, 1536
Coordinate System is:
PROJCS["ARC_System_Zone_18",
    GEOGCS["GCS_Sphere",
        DATUM["D_Sphere",
            SPHEROID["Sphere",6378137.0,0.0]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433]],
    PROJECTION["Azimuthal_Equidistant"],
    PARAMETER["latitude_of_center",-90],
    PARAMETER["longitude_of_center",0],
    PARAMETER["false_easting",0],
    PARAMETER["false_northing",0]]
Origin = (9713.964988580557474,556512.681478320620954)
Pixel Size = (5.004572695909427,-5.004572695909427)
Metadata:
  SRP_CREATIONDATE=20070417
  SRP_EDN=0
  SRP_NAM=APOLES01
  SRP_PRODUCT=ASRP
  SRP_REVISIONDATE=20070417
  SRP_SCA=50000
  SRP_ZNA=18
Corner Coordinates:
Upper Left  (    9713.965,  556512.681) (  1d 0' 0.00"E, 85d 0' 0.00"S)
Lower Left  (    9713.965,  548825.658) (  1d 0'50.41"E, 85d 4' 8.55"S)
Upper Right (   17400.989,  556512.681) (  1d47'27.37"E, 84d59'53.95"S)
Lower Right (   17400.989,  548825.658) (  1d48'57.61"E, 85d 4' 2.42"S)
Center      (   13557.477,  552669.170) (  1d24'18.85"E, 85d 2' 1.66"S)
Band 1 Block=128x128 Type=Byte, ColorInterp=Palette
  NoData Value=0
  Color Table (RGB with 256 entries)
    0: 0,0,0,255


Thanks a lot.

Regards,

Vincent
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/f19a8791/attachment.html>

From mohammedrashadkm at gmail.com  Tue Oct 31 01:11:14 2017
From: mohammedrashadkm at gmail.com (Rashad Kanavath)
Date: Tue, 31 Oct 2017 09:11:14 +0100
Subject: [gdal-dev] write nodata value using using creation option
In-Reply-To: <2044147.35xk69Zars@even-i700>
References: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>
 <2044147.35xk69Zars@even-i700>
Message-ID: <CANNqv9c6KHEQPnPnP06c=RocHeheY+dz10qw3fGcuVst6tZrLA@mail.gmail.com>

Thanks Jukka and Even for you reply.

I am using otb to write gtiff image and using ExtendedFilename option in
otb, it allows me to pass creation options to gdal.
So for now, I write the image in otb without any extended filename stuff
and then add no_data by using GDALSetNoDataValue() in python.
In  my python code, I can also call gdal_translate to do this via
subprocess.call()
 but I was wondering if passing nodata value as creation option would be
possible?

[1] https://wiki.orfeo-toolbox.org/index.php/ExtendedFileName



On Mon, Oct 30, 2017 at 9:37 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On lundi 30 octobre 2017 16:16:12 CET Rashad Kanavath wrote:
>
> > Hello,
>
> >
>
> > Is it possible to set nodata using -co option.?
>
> >
>
> > gdal_translate input.tif output.tif -co TIFFTAG_GDAL_NODATA=-30000
>
> > Input file size is 500, 500
>
> > Warning 6: driver GTiff does not support creation option
> TIFFTAG_GDAL_NODATA
>
> > 0...10...20...30...40...50...60...70...80...90...100 - done.
>
> >
>
> > According to doc, TIFFTAG_GDAL_NODATA is an tag available if GeoTIFF
>
> > profile is GDALGeoTIFF. and by default the profile is exactly that. I
>
> > cross checked this with sources.
>
> >
>
> > using -a_nodata is working. But I would like to see if I can pass nodata
>
> > value via creation options. This is because in my workflow I am not using
>
> > gdal_translate utility.
>
>
>
> You can use the GDALSetNoDataValue() API, or its declinations in the
> language you use.
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
Regards,
   Rashad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/becbcde7/attachment.html>

From ari.jolma at gmail.com  Tue Oct 31 03:17:26 2017
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 31 Oct 2017 12:17:26 +0200
Subject: [gdal-dev] Dangers or letting a domain name expire
Message-ID: <0178ec5a-94bf-9fce-a1d0-0c4306e10d02@gmail.com>

I had the domain name ajolma.net at some point and I kept there the 
documentation of the Perl bindings. Now they are at arijolma.org. At 
some point I let the name expire but I have not been very good at 
changing it everywhere. It is still for example in

https://trac.osgeo.org/gdal/browser/branches/2.2/gdal/swig/include/perl/gdal_perl.i

Apparently some chinese gambling entrepreneurs noted the expiration and 
now at ajolma.net there is the web page of a chinese casino.

I'll need to fix that file.

Ari



From bishop.dev at gmail.com  Tue Oct 31 04:03:12 2017
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Tue, 31 Oct 2017 14:03:12 +0300
Subject: [gdal-dev] About CMake build again
In-Reply-To: <2354612.titQqOS24Y@even-i700>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <2354612.titQqOS24Y@even-i700>
Message-ID: <6b5ea57e-e34d-71dd-e387-7205c94416fa@gmail.com>

Hi Even,

31.10.17 1:14, Even Rouault пишет:
> Hi,
>
> Trying to sum up my thoughts on this topic and answering to various points raised in this
> discussion thread:
>
> - I believe a relevant question to ask to ourselves would be: "imagine that GDAL would come
> without any build system at all, what is the one that we would add" ? Ok, that's a bit silly to
> turn the question like that, a more realistic one would be "imagine you're going to create a
> software that will rule over the world, for the 20 next years and beyond, and should run on
> all reasonable platforms, which build system would we use? If the answer is clearly "cmake",
> then it is worth examining if there is not a path that would lead us to that point.
> Similar question: is it an effort that will make GDAL development a bit easier for new
> contributors?
This is clearly for me long ago and this is CMake.
>
> - Must be reasonably friendly for GDAL developers, and for GDAL users (users here = people
> building GDAL, but not actively hacking into its sources). As a user of cmake on Linux (and
> marginally on Windows), my experiences are rather good.
Again want to point about illogical structure of source codes where we 
have some drivers in root folder (frmts)  and other drivers are deeper 
in the sources tree (ogr/ogrsf_frmts). And also we have raster drivers 
in ogrsf_frmts - like gpkg, cad (yes I know that they are raster-vector 
drivers) and vector drivers are in raster folder frmts, etc.
>
> - the selling points I'd see with cmake would be the possibility of having ultimately a single
> build system, instead of the 2 ones we have. + solving the current lack of dependency
> tracking (speaking here about the mecanism that cause a change in a .h file to make the
> .c/.cpp files that depend on it to be automatically rebuilt). We could add that by using
> automake instead of our home-made GNUmakefile's, but doesn't feel like that's worth the
> effort by itself.
> A nice side effect could also be the opportunity to drop some cruft that has accumulated
> over years in the current build systems (supporting ancient library versions that no longer
> make sense)
+ 1
>
> - If we added cmake support in trunk, I think this would only make sense if (all conditions to
> be met)
> 	*  we have at least a couple of "champions" to support the effort, and with an
> agreement on how to use cmake as a in-tree build solution. Regarding Borsch, I think Dmitry
> and his team did an impressive work, although I think that for GDAL we would want a more
> "traditional" way of using cmake (in-tree, no particular requirents regarding how the
> dependencies should be made). I'd hope that part of the work done on Borsch (or at the very
> least good ideas and the lessons learnt) could be ported back to such a more traditional way
> (and in a way where that would still be useful for Borsch. Possible win-win ?)
Using the find_anyproject function from Borsch (which is a wrapper 
around find_package) instead of find_package this is the only one 
requirements for successfully used in Borsch without any hacks (can be 
discussed to get win-win). Any others, like conventions about install 
paths, versions, naming etc. are optional and can be discussed too.
> 	* growing it from an experimental status to the recommended build system, once
> its completely mature. I'd expect that to require a transition over one or two release cycles
> (one reason for that delay would be that systems ship with a recent enough version of cmake
> regarding the minimum we would require)
> 	* ultimately removing autoconf + nmake support. Clearly we don't want to
> support 3 different build systems for the next 20 years.
>
> - Thinking that if there's an agreement to give it a try, the next OSGeo code sprint ( https://
> wiki.osgeo.org/wiki/OSGeo_Code_Sprint_2018 ) could be the opportunity to boost (no pun
> intended) the effort
>
> - I'm puzzled about some of you having apparently completely different feeback regarding
> CMake on the same platform (MacOS). I don't owe a Mac, so I've no informed opinion on this.
> But I see that a software, with a complexity similar to GDAL, like QGIS uses CMake and it
> builds on Linux, Windows and MacOSX
>
> - There wasn't much discussion about support for more exotic targets, like cross-compiling
> for Windows with mingw compiler hosted on Linux. But openjpeg for example has Travis-CI
> targets doing that, so this is at least achievable for a simple library.
>
> - I've no fundamental objection to cmake... nor fundamental enthousiasm for it or mastering
> of it (could say the same about autoconf/automake or nmake. Build systems are boring
> subjects, aren't they ?)
>
> Even
>
> PS: for Ari, try ./configure --enanble-debug for builds with -g and without -O2 ;-)
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
I working on CMake for GDAL for a long time and ready and willing to 
take part in this work. But it is necessary to make all decisions about 
how new build system based on CMake should looks like. Now it is not 
clear to me.
Should it be RFC based on this letter and 
https://trac.osgeo.org/gdal/wiki/CMake or something else?

Best regards,
     Dmitry

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/eb3d88ac/attachment-0001.html>

From even.rouault at spatialys.com  Tue Oct 31 04:04:05 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 31 Oct 2017 12:04:05 +0100
Subject: [gdal-dev] SRS definition
In-Reply-To: <5547346e-1925-6e09-c34c-d5350ada6cec@gmail.com>
References: <5547346e-1925-6e09-c34c-d5350ada6cec@gmail.com>
Message-ID: <2154327.fkLLLh5zI5@even-i700>

On mardi 31 octobre 2017 08:58:24 CET Ari Jolma wrote:
> Rasdaman writes SRS definitions such as
> "http://ows.rasdaman.org/def/crs/EPSG/0/32633" in WCS coverage
> descriptions. The URL returns a gml:ProjectedCRS XML. GDAL fetches the
> XML but then gives up in SetFromUserInput since it only expects "..that
> this method will be extended in the future to support  XML".
> 
> I wonder could the "crs/EPSG/0/32633" part be used as a proof that we
> know what this is?

Ideally importFromXML() should better support GML serialized SRS (there's a ticket 
about that: https://trac.osgeo.org/gdal/ticket/6852 ), but I'd agree that a URL ending 
with crs/EPSG/0/32633 could be just redirected to importFromEPSGA(32633)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/29c8c093/attachment.html>

From even.rouault at spatialys.com  Tue Oct 31 04:10:02 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 31 Oct 2017 12:10:02 +0100
Subject: [gdal-dev] write nodata value using using creation option
In-Reply-To: <CANNqv9c6KHEQPnPnP06c=RocHeheY+dz10qw3fGcuVst6tZrLA@mail.gmail.com>
References: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>
 <2044147.35xk69Zars@even-i700>
 <CANNqv9c6KHEQPnPnP06c=RocHeheY+dz10qw3fGcuVst6tZrLA@mail.gmail.com>
Message-ID: <30812241.8ChTIGsYvV@even-i700>

On mardi 31 octobre 2017 09:11:14 CET Rashad Kanavath wrote:
> Thanks Jukka and Even for you reply.
> 
> I am using otb to write gtiff image and using ExtendedFilename option in
> otb, it allows me to pass creation options to gdal.
> So for now, I write the image in otb without any extended filename stuff
> and then add no_data by using GDALSetNoDataValue() in python.
> In  my python code, I can also call gdal_translate to do this via
> subprocess.call()
>  but I was wondering if passing nodata value as creation option would be
> possible?

Almost everything is possible in theory, but I don't feel we need that redundancy. 
Why couldn't otb extendedFilename mechanisme be extended to support setting nodata through GDALSetNoDataValue(),
with a gdal:nodata=value syntax ?

You don't need to use subprocess.call() to use gdal_translate functionnality.
See 
https://trac.osgeo.org/gdal/browser/trunk/autotest/utilities/test_gdal_translate_lib.py#L249

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/4aa71120/attachment.html>

From p.baumann at jacobs-university.de  Tue Oct 31 04:28:12 2017
From: p.baumann at jacobs-university.de (Peter Baumann)
Date: Tue, 31 Oct 2017 12:28:12 +0100
Subject: [gdal-dev] SRS definition
In-Reply-To: <2154327.fkLLLh5zI5@even-i700>
References: <5547346e-1925-6e09-c34c-d5350ada6cec@gmail.com>
 <2154327.fkLLLh5zI5@even-i700>
Message-ID: <75a6eec1-50f8-f2b6-068d-6c282afbdf37@jacobs-university.de>

FWIW, more about CRS URLs and the CRS resolver:
http://external.opengeospatial.org/twiki_public/CRSdefinitionResolver/

-Peter


On 10/31/2017 12:04 PM, Even Rouault wrote:
>
> On mardi 31 octobre 2017 08:58:24 CET Ari Jolma wrote:
>
> > Rasdaman writes SRS definitions such as
>
> > "http://ows.rasdaman.org/def/crs/EPSG/0/32633" in WCS coverage
>
> > descriptions. The URL returns a gml:ProjectedCRS XML. GDAL fetches the
>
> > XML but then gives up in SetFromUserInput since it only expects "..that
>
> > this method will be extended in the future to support  XML".
>
> >
>
> > I wonder could the "crs/EPSG/0/32633" part be used as a proof that we
>
> > know what this is?
>
>  
>
> Ideally importFromXML() should better support GML serialized SRS (there's a
> ticket about that: https://trac.osgeo.org/gdal/ticket/6852 ), but I'd agree
> that a URL ending with crs/EPSG/0/32633 could be just redirected to
> importFromEPSGA(32633)
>
>  
>
> Even
>
>  
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Dr. Peter Baumann
 - Professor of Computer Science, Jacobs University Bremen
   www.faculty.jacobs-university.de/pbaumann
   mail: p.baumann at jacobs-university.de
   tel: +49-421-200-3178, fax: +49-421-200-493178
 - Executive Director, rasdaman GmbH Bremen (HRB 26793)
   www.rasdaman.com, mail: baumann at rasdaman.com
   tel: 0800-rasdaman, fax: 0800-rasdafax, mobile: +49-173-5837882
"Si forte in alienas manus oberraverit hec peregrina epistola incertis ventis dimissa, sed Deo commendata, precamur ut ei reddatur cui soli destinata, nec preripiat quisquam non sibi parata." (mail disclaimer, AD 1083)


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/005a519a/attachment.html>

From mohammedrashadkm at gmail.com  Tue Oct 31 04:44:33 2017
From: mohammedrashadkm at gmail.com (Rashad Kanavath)
Date: Tue, 31 Oct 2017 12:44:33 +0100
Subject: [gdal-dev] write nodata value using using creation option
In-Reply-To: <30812241.8ChTIGsYvV@even-i700>
References: <CANNqv9d0KM7x1_PHnh2AU5cZfb87fB5j2mkGdTd0-5MNtQMt2A@mail.gmail.com>
 <2044147.35xk69Zars@even-i700>
 <CANNqv9c6KHEQPnPnP06c=RocHeheY+dz10qw3fGcuVst6tZrLA@mail.gmail.com>
 <30812241.8ChTIGsYvV@even-i700>
Message-ID: <CANNqv9dhj_FjNEMe71rsF7Mk-XbZxtzoaOSn4YmxgWhEyGd5yQ@mail.gmail.com>

On Tue, Oct 31, 2017 at 12:10 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On mardi 31 octobre 2017 09:11:14 CET Rashad Kanavath wrote:
>
> > Thanks Jukka and Even for you reply.
>
> >
>
> > I am using otb to write gtiff image and using ExtendedFilename option in
>
> > otb, it allows me to pass creation options to gdal.
>
> > So for now, I write the image in otb without any extended filename stuff
>
> > and then add no_data by using GDALSetNoDataValue() in python.
>
> > In my python code, I can also call gdal_translate to do this via
>
> > subprocess.call()
>
> > but I was wondering if passing nodata value as creation option would be
>
> > possible?
>
>
>
> Almost everything is possible in theory, but I don't feel we need that
> redundancy.
>
> Why couldn't otb extendedFilename mechanisme be extended to support
> setting nodata through GDALSetNoDataValue(),
>
> with a gdal:nodata=value syntax ?
>
Yes.  I will see if can send a patch to otb!

>
>
> You don't need to use subprocess.call() to use gdal_translate
> functionnality.
>

Thanks for the sample code on using gdal_translate as function.

> See
>
> https://trac.osgeo.org/gdal/browser/trunk/autotest/utilities
> /test_gdal_translate_lib.py#L249
>
>
>
> --
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>



-- 
Regards,
   Rashad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/790f9c3e/attachment-0001.html>

From even.rouault at spatialys.com  Tue Oct 31 04:49:20 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 31 Oct 2017 12:49:20 +0100
Subject: [gdal-dev] [gdal 2.2.2] different result with gdal 2.1.0
In-Reply-To: <1509436070082.90129@magellium.fr>
References: <1509436070082.90129@magellium.fr>
Message-ID: <5212177.2KvNqHDvaO@even-i700>

On mardi 31 octobre 2017 07:47:50 CET Vincent BERNAT wrote:
> Hello all,
> 
> 
> I was working with gdal 2.1.0 and i decide to update to 2.2.2
> 
> I work on Centos.
> 
> 
> Everything is ok but on one image, i don't get the same result (and the
> result with 2.2.2 seems incorrect).
> 
> 
> One of the most important difference is the result of the call of this
> function :
> 
> GDALSuggestedWarpOutput

You don't give enough information for other people to be able to reproduce. Which 
arguments do you pass to GDALSuggestedWarpOutput ?

Can you reproduce with gdalwarp ?

Here's what I've tried:

* generate an image with equivalent size and georeferencing as yours

gdal_translate byte.tif test.tif -a_srs 'PROJCS["ARC_System_Zone_18",
    GEOGCS["GCS_Sphere",
        DATUM["D_Sphere",
            SPHEROID["Sphere",6378137.0,0.0]],
        PRIMEM["Greenwich",0],
        UNIT["degree",0.0174532925199433]],
    PROJECTION["Azimuthal_Equidistant"],
    PARAMETER["latitude_of_center",-90],
    PARAMETER["longitude_of_center",0],
    PARAMETER["false_easting",0],
    PARAMETER["false_northing",0]]' \
   -outsize 1536 1536 -a_ullr 9713.965 556512.681 17400.989 548825.658

* wrap it to WGS84

gdalwarp test.tif out.tif -overwrite -t_srs EPSG:4326


With GDAL trunk or 2.1, I get the exact same result:

$ gdalinfo -checksum out.tif
Driver: GTiff/GeoTIFF
Files: out.tif
Size is 2165, 188
Coordinate System is:
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0],
    UNIT["degree",0.0174532925199433],
    AUTHORITY["EPSG","4326"]]
Origin = (1.000000002034652,-84.998318292160022)
Pixel Size = (0.000376928999761,-0.000376928999761)
Metadata:
  AREA_OR_POINT=Area
Image Structure Metadata:
  INTERLEAVE=BAND
Corner Coordinates:
Upper Left  (   1.0000000, -84.9983183) (  1d 0' 0.00"E, 84d59'53.95"S)
Lower Left  (   1.0000000, -85.0691809) (  1d 0' 0.00"E, 85d 4' 9.05"S)
Upper Right (   1.8160513, -84.9983183) (  1d48'57.78"E, 84d59'53.95"S)
Lower Right (   1.8160513, -85.0691809) (  1d48'57.78"E, 85d 4' 9.05"S)
Center      (   1.4080256, -85.0337496) (  1d24'28.89"E, 85d 2' 1.50"S)
Band 1 Block=2165x3 Type=Byte, ColorInterp=Gray
  Checksum=51779

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/18fd2b79/attachment.html>

From mateusz at loskot.net  Tue Oct 31 04:54:59 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 31 Oct 2017 12:54:59 +0100
Subject: [gdal-dev] About CMake build again
In-Reply-To: <2354612.titQqOS24Y@even-i700>
References: <24279829-bc4c-cb12-03c6-2e13282f841b@gmail.com>
 <2354612.titQqOS24Y@even-i700>
Message-ID: <CABUeae9jEtS2k3e49K6xF5md6B1kcEHnOOar1677s4K_Mb0L9w@mail.gmail.com>

On 30 October 2017 at 23:14, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Trying to sum up my thoughts on this topic and answering to various points
> raised in this discussion thread:
>
> - I believe a relevant question to ask to ourselves would be:
> "imagine that GDAL would come without any build system at all, what is the one that we would add" ?

Assuming multi-platform is the critical requirement, there are no real
altenratives that beat CMake.

> Ok, that's a bit silly to turn the question like that, a more
> realistic one would be
> "imagine you're going to create a software that will rule over the world, for the 20 next years
> and beyond, and should run on all reasonable platforms, which build system would we use?

IMHO, answer to that is:
First, write portable code in build system agnostic way:
- Stick to C/C++ standard libraries as much as possible
- Stick to vanila preprocessor magic to handle C/C++ library
differences and incompatibilities.
- Eliminate or platform-specific generated headers (or keep it small,
one for all)
Then, choose multi-platfor build system and keep build configuration
scripts *small*.

That will make it easy to compile the code with any build system
current user wants to use
or any build system the project will switch over to in future, if necessary.

> If the answer is clearly "cmake", then it is worth examining if there is not a path that
> would lead us to that point.

No, the anwer is not "clearly cmake".
CMake is great because it's multi-platform, it is available virtually
everywhere and easy to install.
CMake is terrible because it did not develop any best practices or
conventions regarding how
a perfect build configuration should be developed with CMake. That
historically led to home grown,
overgrown, bloated piles of CMake scripts specific to projects that
require maintenance on its own.
Even worse, many of those badly written scripts made it into CMake
distribution as FindXXX.cmake
modules, and CMake team did not reject or unify them.
The freedom led to ecosystem of numerous distinct build monsters
governed by specific conventions
based on CMake like ECM from KDE, BCM from Boost, and Borsch fall
sinto similar category, I think.
Naturally, GDAL would grown its own, beause CMake is rubbish :-)

An ideal build configuration scripts should be small, even for a large project.
Here is example of such setup proposed for Boost
https://github.com/ned14/boost-bmv-cmake
There is no pile of custom CMake macros or modules provided and that
is an ideal :)

> Similar question: is it an effort that will make GDAL development a bit
> easier for new contributors?

Perhaps, potentially, may be.
Certainly, CMake makes development friendly for use with modern IDEs.

> A nice side effect could also be the opportunity to drop some cruft that has
> accumulated over years in the current build systems (supporting ancient
> library versions that no longer make sense)

Dropping existing cruft is good.
Replacing cruft with new CMake cruft is bad idea.
Unfortunately, in most cases I've seen that is what happens when a
project migrates to CMake.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From robertofig85 at gmail.com  Tue Oct 31 05:40:13 2017
From: robertofig85 at gmail.com (Roberto Ribeiro)
Date: Tue, 31 Oct 2017 10:40:13 -0200
Subject: [gdal-dev] OGC announces a new standard that improves the way
 information is referenced to the earth
In-Reply-To: <b3e9bfcc-8f7b-128b-617f-93ca90864ce8@gmail.com>
References: <1509228992087-0.post@n6.nabble.com>
 <b3e9bfcc-8f7b-128b-617f-93ca90864ce8@gmail.com>
Message-ID: <CANTZQ+ySEW02Bxw0rb2870jur1DveYrBmFh49tgpOsk-9+1kMA@mail.gmail.com>

I too took that understanding from the text, Ari. I'll read the specs
later, but since they mention a lot Big Data and the raster <> vector
integration, I imagine it is akin to a geometry collection, but
encompassing a wider range of data types, and arranged in a pyramid/r-tree
-esque environment for faster processing.

If so, it's not an entirely novel idea (Esri's File GDB is mostly that, as
well as the entire CAD modelling), but one that would be interesting to
have an open standard for.

2017/10/31 午前4:23 "Ari Jolma" <ari.jolma at gmail.com>:

> That also caught my eye. The text sounds a bit like marketing talk but
> maybe there is something.
>
> From a quick look my understanding is that the idea is to create a grid
> that divides the whole earth into cells of similar shape in a sequence of
> increasing cell size. And that sounds to me like a new idea.
>
> Any other thoughts? Did I get the idea right?
>
> Best,
>
> Ari
>
>
> Helmut Kudrnovsky kirjoitti 29.10.2017 klo 01:16:
>
>> Fyi
>>
>> http://www.opengeospatial.org/pressroom/pressreleases/2656
>>
>> "The goal of DGGS is to enable rapid assembly of spatial data without the
>> difficulties of working with projected coordinate reference systems. The
>> OGC
>> DGGS Abstract Specification standard defines the conceptual model and a
>> set
>> of rules for building highly efficient architectures for spatial data
>> storage, integration and analytics. ....."
>>
>>
>>
>> -----
>> best regards
>> Helmut
>> --
>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/22f154d0/attachment-0001.html>

From Benjamin.Stadin at heidelberg-mobil.com  Tue Oct 31 08:09:53 2017
From: Benjamin.Stadin at heidelberg-mobil.com (Stadin, Benjamin)
Date: Tue, 31 Oct 2017 15:09:53 +0000
Subject: [gdal-dev] OGC announces a new standard that improves the way
 information is referenced to the earth
In-Reply-To: <CANTZQ+ySEW02Bxw0rb2870jur1DveYrBmFh49tgpOsk-9+1kMA@mail.gmail.com>
References: <1509228992087-0.post@n6.nabble.com>
 <b3e9bfcc-8f7b-128b-617f-93ca90864ce8@gmail.com>,
 <CANTZQ+ySEW02Bxw0rb2870jur1DveYrBmFh49tgpOsk-9+1kMA@mail.gmail.com>
Message-ID: <8FC8B81D-6446-4E90-8580-4EA92379F083@heidelberg-mobil.com>

To me this proposal looks too complicated for practical application in it's current form. I think the surface model (or a "default" model) and related algorithms should be part of the proposal.

I needed to solve some of the problems they mention for our 3d rendering engine (store  vector data of multiple projections in an indexed storage and separate vector storage, projection and visible projection when rendering) as well as for parallel data processing of large data sets.

I found that systems which use ellipsoidal polygons on the surface model of the earth impractical for a variety of reasons: Image data and rendering systems mostly deal with rectangular tiles, there are commonly accepted (but not standardized) properties like zoom levels and tile sizes which many software adheres to, and also algorithm complexity and implementation effort.

I ended up with an adaptation of the MODIS grid for our application (https://modis-land.gsfc.nasa.gov/MODLAND_grid.html) so that cells (which are equal area in MODIS) are of the same length as OSM / Web Mercator tiles (at the equator), also considering zoom levels.

I think there is a real need for such concept, but in my opinion there needs to be a default model and algorithms in order to be relevant.

Best
Ben

Von meinem iPad gesendet

Am 31.10.2017 um 13:40 schrieb Roberto Ribeiro <robertofig85 at gmail.com<mailto:robertofig85 at gmail.com>>:

I too took that understanding from the text, Ari. I'll read the specs later, but since they mention a lot Big Data and the raster <> vector integration, I  it is akin to a geometry collection, but encompassing a wider range of data types, and arranged in a pyramid/r-tree -esque environment for faster processing.

If so, it's not an entirely novel idea (Esri's File GDB is mostly that, as well as the entire CAD modelling), but one that would be interesting to have an open standard for.

2017/10/31 ??4:23 "Ari Jolma" <ari.jolma at gmail.com<mailto:ari.jolma at gmail.com>>:
That also caught my eye. The text sounds a bit like marketing talk but maybe there is something.

>From a quick look my understanding is that the idea is to create a grid that divides the whole earth into cells of similar shape in a sequence of increasing cell size. And that sounds to me like a new idea.

Any other thoughts? Did I get the idea right?

Best,

Ari


Helmut Kudrnovsky kirjoitti 29.10.2017 klo 01:16:
Fyi

http://www.opengeospatial.org/pressroom/pressreleases/2656

"The goal of DGGS is to enable rapid assembly of spatial data without the
difficulties of working with projected coordinate reference systems. The OGC
DGGS Abstract Specification standard defines the conceptual model and a set
of rules for building highly efficient architectures for spatial data
storage, integration and analytics. ....."



-----
best regards
Helmut
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/da25e846/attachment.html>

From schwehr at gmail.com  Tue Oct 31 11:14:20 2017
From: schwehr at gmail.com (Kurt Schwehr)
Date: Tue, 31 Oct 2017 11:14:20 -0700
Subject: [gdal-dev] OGC announces a new standard that improves the way
 information is referenced to the earth
In-Reply-To: <8FC8B81D-6446-4E90-8580-4EA92379F083@heidelberg-mobil.com>
References: <1509228992087-0.post@n6.nabble.com>
 <b3e9bfcc-8f7b-128b-617f-93ca90864ce8@gmail.com>
 <CANTZQ+ySEW02Bxw0rb2870jur1DveYrBmFh49tgpOsk-9+1kMA@mail.gmail.com>
 <8FC8B81D-6446-4E90-8580-4EA92379F083@heidelberg-mobil.com>
Message-ID: <CACmBxyt0rhA7zHPg3H5QW=TQCU=mQQbVzBXkkSvbWZdY-bC0uw@mail.gmail.com>

See also space filling curves like the hilbert curve and Google's S2...

https://docs.google.com/presentation/d/1Hl4KapfAENAOf4gv-pSngKwvS_jwNVHRPZTTDzXXn6Q/view#slide=id.i0

On Tue, Oct 31, 2017 at 8:09 AM, Stadin, Benjamin <
Benjamin.Stadin at heidelberg-mobil.com> wrote:

> To me this proposal looks too complicated for practical application in
> it‘s current form. I think the surface model (or a „default“ model) and
> related algorithms should be part of the proposal.
>
> I needed to solve some of the problems they mention for our 3d rendering
> engine (store  vector data of multiple projections in an indexed storage
> and separate vector storage, projection and visible projection when
> rendering) as well as for parallel data processing of large data sets.
>
> I found that systems which use ellipsoidal polygons on the surface model
> of the earth impractical for a variety of reasons: Image data and rendering
> systems mostly deal with rectangular tiles, there are commonly accepted
> (but not standardized) properties like zoom levels and tile sizes which
> many software adheres to, and also algorithm complexity and implementation
> effort.
>
> I ended up with an adaptation of the MODIS grid for our application (
> https://modis-land.gsfc.nasa.gov/MODLAND_grid.html) so that cells (which
> are equal area in MODIS) are of the same length as OSM / Web Mercator tiles
> (at the equator), also considering zoom levels.
>
> I think there is a real need for such concept, but in my opinion there
> needs to be a default model and algorithms in order to be relevant.
>
> Best
> Ben
>
> Von meinem iPad gesendet
>
> Am 31.10.2017 um 13:40 schrieb Roberto Ribeiro <robertofig85 at gmail.com>:
>
> I too took that understanding from the text, Ari. I'll read the specs
> later, but since they mention a lot Big Data and the raster <> vector
> integration, I  it is akin to a geometry collection, but encompassing a
> wider range of data types, and arranged in a pyramid/r-tree -esque
> environment for faster processing.
>
> If so, it's not an entirely novel idea (Esri's File GDB is mostly that, as
> well as the entire CAD modelling), but one that would be interesting to
> have an open standard for.
>
> 2017/10/31 午前4:23 "Ari Jolma" <ari.jolma at gmail.com>:
>
>> That also caught my eye. The text sounds a bit like marketing talk but
>> maybe there is something.
>>
>> From a quick look my understanding is that the idea is to create a grid
>> that divides the whole earth into cells of similar shape in a sequence of
>> increasing cell size. And that sounds to me like a new idea.
>>
>> Any other thoughts? Did I get the idea right?
>>
>> Best,
>>
>> Ari
>>
>>
>> Helmut Kudrnovsky kirjoitti 29.10.2017 klo 01:16:
>>
>>> Fyi
>>>
>>> http://www.opengeospatial.org/pressroom/pressreleases/2656
>>>
>>> "The goal of DGGS is to enable rapid assembly of spatial data without the
>>> difficulties of working with projected coordinate reference systems. The
>>> OGC
>>> DGGS Abstract Specification standard defines the conceptual model and a
>>> set
>>> of rules for building highly efficient architectures for spatial data
>>> storage, integration and analytics. ....."
>>>
>>>
>>>
>>> -----
>>> best regards
>>> Helmut
>>> --
>>> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/de95e950/attachment.html>

From SGONG at mdacorporation.com  Tue Oct 31 12:02:20 2017
From: SGONG at mdacorporation.com (Shawn Gong)
Date: Tue, 31 Oct 2017 19:02:20 +0000
Subject: [gdal-dev] mingw64 build error gdal-2.2.2
Message-ID: <7DCBC135929FF74E8A5488B1814AC6BC3FF98DE6@exbermd02.ds.mda.ca>

Hi list,



I am using mingw64 GCC to build gdal-2.2.2 and got the following error.

gdal-2.1.4. was built fine. and I couldn't find syntax difference in cpl_port.h between gdal 2.2.2 and 2.1.4.


Thanks,
Shawn

building 'osgeo._gdal_array' extension
C:\msys64\mingw64\bin/x86_64-w64-mingw32-gcc.exe -fno-strict-aliasing -march=x86-64 -mtune=generic -O2 -pipe -fwrapv -D__USE_MINGW_ANSI_STDIO=1 -DNDEBUG -DNDEBUG -I../../port -I../../gcore -I../../alg -I../../ogr/ -I../../ogr/ogrsf_frmts -I../../gnm -I../../apps -IC:/msys64/mingw64/include/python2.7 -IC:/msys64/mingw64/lib/python2.7/site-packages/numpy/core/include -Iinclude -c extensions/gdal_array_wrap.cpp -o build/temp.mingw-2.7/extensions/gdal_array_wrap.o
In file included from ../../gcore/gdal.h:42:0,
                 from extensions/gdal_array_wrap.cpp:3143:
../../port/cpl_port.h:1119:5: error: conflicting declaration of 'int sprintf(char*, const char*, ...)' with 'C' linkage
 int sprintf(char *str, const char* fmt, ...) CPL_PRINT_FUNC_FORMAT(2, 3) CPL_WARN_DEPRECATED("Use snprintf() or CPLsnprintf() instead");
     ^~~~~~~
In file included from C:/msys64/mingw64/include/python2.7/Python.h:33:0,
                 from extensions/gdal_array_wrap.cpp:172:
C:/msys64/mingw64/x86_64-w64-mingw32/include/stdio.h:316:5: note: previous declaration with 'C++' linkage
 int sprintf (char *__stream, const char *__format, ...)
     ^~~~~~~
In file included from C:/msys64/mingw64/include/python2.7/numpy/ndarraytypes.h:1809:0,
                 from C:/msys64/mingw64/include/python2.7/numpy/ndarrayobject.h:18,
                 from C:/msys64/mingw64/include/python2.7/numpy/arrayobject.h:4,
                 from extensions/gdal_array_wrap.cpp:3464:
C:/msys64/mingw64/include/python2.7/numpy/npy_1_7_deprecated_api.h:13:79: note: #pragma message: C:/msys64/mingw64/include/python2.7/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION
                          "#defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION")
                                                                               ^
error: command 'C:\\msys64\\mingw64\\bin/x86_64-w64-mingw32-gcc.exe' failed with exit status 1
make[2]: *** [GNUmakefile:68: build] Error 1
make[2]: Leaving directory '/c/build64/gdal-2.2.2/swig/python'
make[1]: *** [GNUmakefile:30: build] Error 2
make[1]: Leaving directory '/c/build64/gdal-2.2.2/swig'
make: *** [GNUmakefile:103: swig-modules] Error 2
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/d3d1e5b5/attachment.html>

From even.rouault at spatialys.com  Tue Oct 31 12:20:34 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 31 Oct 2017 20:20:34 +0100
Subject: [gdal-dev] mingw64 build error gdal-2.2.2
In-Reply-To: <7DCBC135929FF74E8A5488B1814AC6BC3FF98DE6@exbermd02.ds.mda.ca>
References: <7DCBC135929FF74E8A5488B1814AC6BC3FF98DE6@exbermd02.ds.mda.ca>
Message-ID: <2403172.lrcaz2IteI@even-i700>

> 
> building 'osgeo._gdal_array' extension
> C:\msys64\mingw64\bin/x86_64-w64-mingw32-gcc.exe -fno-strict-aliasing
> -march=x86-64 -mtune=generic -O2 -pipe -fwrapv -D__USE_MINGW_ANSI_STDIO=1
> -DNDEBUG -DNDEBUG -I../../port -I../../gcore -I../../alg -I../../ogr/
> -I../../ogr/ogrsf_frmts -I../../gnm -I../../apps
> -IC:/msys64/mingw64/include/python2.7
> -IC:/msys64/mingw64/lib/python2.7/site-packages/numpy/core/include
> -Iinclude -c extensions/gdal_array_wrap.cpp -o
> build/temp.mingw-2.7/extensions/gdal_array_wrap.o In file included from
> ../../gcore/gdal.h:42:0,
>                  from extensions/gdal_array_wrap.cpp:3143:
> ../../port/cpl_port.h:1119:5: error: conflicting declaration of 'int
> sprintf(char*, const char*, ...)' with 'C' linkage int sprintf(char *str,
> const char* fmt, ...) CPL_PRINT_FUNC_FORMAT(2, 3) CPL_WARN_DEPRECATED("Use
> snprintf() or CPLsnprintf() instead"); ^~~~~~~

What doesn't make sense is that the sprintf() definition at line 1119 of cpl_port.h should 
only be enabled if GDAL_COMPILATION is defined, and I don't see it in the above build line, 
and it shouldn't be present in a .h file normally. So there's something to investigate.

> In file included from C:/msys64/mingw64/include/python2.7/Python.h:33:0,
>                  from extensions/gdal_array_wrap.cpp:172:
> C:/msys64/mingw64/x86_64-w64-mingw32/include/stdio.h:316:5: note: previous
> declaration with 'C++' linkage int sprintf (char *__stream, const char
> *__format, ...)
>      ^~~~~~~

This one is weird. It would seem that the original sprintf() definition would be understood as 
a C++ symbol, and not a C one. I'd hope stdio.h from mingw to have the usual extern "C" {    } 
protection for that. 

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/272881c6/attachment.html>

From nfarah at hotmail.com  Tue Oct 31 12:39:23 2017
From: nfarah at hotmail.com (N. Farah)
Date: Tue, 31 Oct 2017 19:39:23 +0000
Subject: [gdal-dev] Open Jpeg 2.3.0 and OPJ_NUM_THREADS
Message-ID: <BLUPR11MB0449FDC9BAC24D90C9B7B50EDD5E0@BLUPR11MB0449.namprd11.prod.outlook.com>

Hi,


In http://gdal.org/frmt_jp2openjpeg.html under 'Thread Support' section there is the following:

"Starting with GDAL 2.3, this multi-threading at code-block level is automatically enabled by GDAL".


Was meant "Starting with OpenJpeg 2.3, ..." ?

If yes, was that enabling made in the 'OpenJpeg 2.3' library or was made in GDAL ?


Thanks

Noureddine Farah

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/19981e2c/attachment.html>

From even.rouault at spatialys.com  Tue Oct 31 12:47:01 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 31 Oct 2017 20:47:01 +0100
Subject: [gdal-dev] Open Jpeg 2.3.0 and OPJ_NUM_THREADS
In-Reply-To: <BLUPR11MB0449FDC9BAC24D90C9B7B50EDD5E0@BLUPR11MB0449.namprd11.prod.outlook.com>
References: <BLUPR11MB0449FDC9BAC24D90C9B7B50EDD5E0@BLUPR11MB0449.namprd11.prod.outlook.com>
Message-ID: <1857027.MWOT6xa53n@even-i700>

On mardi 31 octobre 2017 19:39:23 CET N. Farah wrote:
> Hi,
> 
> 
> In http://gdal.org/frmt_jp2openjpeg.html under 'Thread Support' section
> there is the following:
> 
> "Starting with GDAL 2.3, this multi-threading at code-block level is
> automatically enabled by GDAL".
> 
> 
> Was meant "Starting with OpenJpeg 2.3, ..." ?

No, was meant starting with GDAL 2.3 (the current dev version). And that requires openjpeg 
>= 2.2 as well.

> 
> If yes, was that enabling made in the 'OpenJpeg 2.3' library or was made in
> GDAL ?

openjpeg >= 2.2 (actually 2.1.2, but I restricted to 2.2 or later) brings multithreading decoding 
at codeblock level, and GDAL trunk automatically enables it.

So the doc is correct I think, but I know that those similar version numbers between GDAL 
and openjpeg can be confusing.

Bottom line: use the latest and greatest of both to get the better performance.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/13f10790/attachment-0001.html>

From nfarah at hotmail.com  Tue Oct 31 12:50:15 2017
From: nfarah at hotmail.com (N. Farah)
Date: Tue, 31 Oct 2017 19:50:15 +0000
Subject: [gdal-dev] Open Jpeg 2.3.0 and OPJ_NUM_THREADS
In-Reply-To: <1857027.MWOT6xa53n@even-i700>
References: <BLUPR11MB0449FDC9BAC24D90C9B7B50EDD5E0@BLUPR11MB0449.namprd11.prod.outlook.com>,
 <1857027.MWOT6xa53n@even-i700>
Message-ID: <BLUPR11MB0449C6B5AEF4673D9D418FBCDD5E0@BLUPR11MB0449.namprd11.prod.outlook.com>

Thanks for the quick response. I'm not using latest GDAL and was curious where that multi-threading enabling was made ? Was it some where in GDAL code or through an option in the openjpeg 2.3.0 API ?


Thanks

Noureddine Farah

________________________________
From: Even Rouault <even.rouault at spatialys.com>
Sent: Tuesday, October 31, 2017 3:47:01 PM
To: gdal-dev at lists.osgeo.org
Cc: N. Farah
Subject: Re: [gdal-dev] Open Jpeg 2.3.0 and OPJ_NUM_THREADS


On mardi 31 octobre 2017 19:39:23 CET N. Farah wrote:

> Hi,

>

>

> In http://gdal.org/frmt_jp2openjpeg.html under 'Thread Support' section

> there is the following:

>

> "Starting with GDAL 2.3, this multi-threading at code-block level is

> automatically enabled by GDAL".

>

>

> Was meant "Starting with OpenJpeg 2.3, ..." ?



No, was meant starting with GDAL 2.3 (the current dev version). And that requires openjpeg >= 2.2 as well.



>

> If yes, was that enabling made in the 'OpenJpeg 2.3' library or was made in

> GDAL ?



openjpeg >= 2.2 (actually 2.1.2, but I restricted to 2.2 or later) brings multithreading decoding at codeblock level, and GDAL trunk automatically enables it.



So the doc is correct I think, but I know that those similar version numbers between GDAL and openjpeg can be confusing.



Bottom line: use the latest and greatest of both to get the better performance.



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/e915953f/attachment.html>

From robertofig85 at gmail.com  Tue Oct 31 15:21:08 2017
From: robertofig85 at gmail.com (Roberto Ribeiro)
Date: Tue, 31 Oct 2017 20:21:08 -0200
Subject: [gdal-dev] Can't import ptrcreate from _gdal module
Message-ID: <CANTZQ+xm7J1cMZL8wBxPu1XF3sgUzPHWe9+MrTwW26NGG_s7Xw@mail.gmail.com>

I'm trying to work with a tool that, in one of its functions, uses a set of
_gdal methods regarding pointers (e.g. ptrcreate, ptradd, ptrvalue, etc.),
but when I try to import the function it returns me:

AttributeError: 'module' object has no attribute 'ptrcreate'

Doing a dir(_gdal) returns me a huge list of methods, but none of the
pointer ones. Is this a problem with my python bindings?

(gdal version 2.2.1 64-bits for Windows)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/544218e5/attachment.html>

From saarko at alaska.edu  Tue Oct 31 15:23:45 2017
From: saarko at alaska.edu (Scott Arko)
Date: Tue, 31 Oct 2017 14:23:45 -0800
Subject: [gdal-dev] Using /vsicurl and /vsizip with zip files and signed S3
	links
Message-ID: <CAFCnYQPb7f9krBOZbgQPx3UMAps4bMVrN2Chgj3k2o8-z6irKA@mail.gmail.com>

Hello GDAL Developers,


I am having trouble using the /vsis3 or /vsicurl driver with S3 signed
links and can't find any details in the archive of this list. I have a
signed S3 link that is a zip file containing a variety of other files,
including a geotiff, which is what I'm really after.   I would like to be
able to access the geotiff file only using a combination of /vsizip and
/vsicurl.   I am using GDAL version 2.2.1 on MacOS.  An example link is
below:

https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D

If I do a gdalinfo on this file using vsizip and vsicurl it seems to
recognize the file and gives me links to use to access the individual
elements.
gdalinfo /vsizip//vsicurl/"
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D
"

ERROR 6: Support only 1 file in archive file /vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D
when no explicit in-archive filename is specified

You could try one of the following :

  /vsizip//vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.tif

  /vsizip//vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.jpg

  /vsizip//vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.jpg.aux.xml

  /vsizip//vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/ESA_citation.txt

  /vsizip//vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.wld


Apologies for the funky formatting on this result.  However, if I try to
run gdalinfo on one of the recommended links (the geotiff), I get the
following (with --debug ON)

gdalinfo --debug ON /vsizip//vsicurl/"
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.tif
"

GDAL: Auto register /opt/local/lib/gdalplugins/gdal_KEA.dylib using
GDALRegister_KEA.

GDAL: Assuming DCAP_RASTER for driver KEA. Please fix it.

GNM: GNMRegisterAllInternal

GNM: RegisterGNMFile

GNM: RegisterGNMdatabase

VSICURL: GetFileSize(
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.tif)=0
response_code=403

VSICURL: GetFileSize(
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.tif.xml)=0
response_code=403

ERROR 4: `/vsizip//vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.tif'
does not exist in the file system, and is not recognized as a supported
dataset name.

gdalinfo failed - unable to open '/vsizip//vsicurl/
https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.tif
'.

I'm wondering if there is something I am doing wrong, something in the way
gdal handles S3 signed links, or perhaps the functionality I'm looking for
just doesn't exist yet.  Thank you very much for any thoughts you might
have.

Kindest Regards,
Scott Arko



-- 
Scott Arko
Alaska Satellite Facility Deputy Director
University of Alaska Fairbanks

903 Koyukuk Drive
Fairbanks, AK 99775
Phone: (907) 474 - 5570
email:  saarko at alaska.edu
http://www.asf.alaska.edu
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/f0b8e09f/attachment-0001.html>

From Benjamin.Stadin at heidelberg-mobil.com  Tue Oct 31 15:30:04 2017
From: Benjamin.Stadin at heidelberg-mobil.com (Stadin, Benjamin)
Date: Tue, 31 Oct 2017 22:30:04 +0000
Subject: [gdal-dev] OGC announces a new standard that improves the way
 information is referenced to the earth
In-Reply-To: <CACmBxyt0rhA7zHPg3H5QW=TQCU=mQQbVzBXkkSvbWZdY-bC0uw@mail.gmail.com>
References: <1509228992087-0.post@n6.nabble.com>
 <b3e9bfcc-8f7b-128b-617f-93ca90864ce8@gmail.com>
 <CANTZQ+ySEW02Bxw0rb2870jur1DveYrBmFh49tgpOsk-9+1kMA@mail.gmail.com>
 <8FC8B81D-6446-4E90-8580-4EA92379F083@heidelberg-mobil.com>,
 <CACmBxyt0rhA7zHPg3H5QW=TQCU=mQQbVzBXkkSvbWZdY-bC0uw@mail.gmail.com>
Message-ID: <977BCE19-16EA-4AFD-B871-508616CFB0EB@heidelberg-mobil.com>

Sure. But I mean: They should decide about and use S2 or whatever by default as part of the new standard and create a reference implementation, if they were serious about solving mentioned issues in practice.



Am 31.10.2017 um 19:14 schrieb Kurt Schwehr <schwehr at gmail.com<mailto:schwehr at gmail.com>>:

See also space filling curves like the hilbert curve and Google's S2...

https://docs.google.com/presentation/d/1Hl4KapfAENAOf4gv-pSngKwvS_jwNVHRPZTTDzXXn6Q/view#slide=id.i0

On Tue, Oct 31, 2017 at 8:09 AM, Stadin, Benjamin <Benjamin.Stadin at heidelberg-mobil.com<mailto:Benjamin.Stadin at heidelberg-mobil.com>> wrote:
To me this proposal looks too complicated for practical application in it's current form. I think the surface model (or a "default" model) and related algorithms should be part of the proposal.

I needed to solve some of the problems they mention for our 3d rendering engine (store  vector data of multiple projections in an indexed storage and separate vector storage, projection and visible projection when rendering) as well as for parallel data processing of large data sets.

I found that systems which use ellipsoidal polygons on the surface model of the earth impractical for a variety of reasons: Image data and rendering systems mostly deal with rectangular tiles, there are commonly accepted (but not standardized) properties like zoom levels and tile sizes which many software adheres to, and also algorithm complexity and implementation effort.

I ended up with an adaptation of the MODIS grid for our application (https://modis-land.gsfc.nasa.gov/MODLAND_grid.html) so that cells (which are equal area in MODIS) are of the same length as OSM / Web Mercator tiles (at the equator), also considering zoom levels.

I think there is a real need for such concept, but in my opinion there needs to be a default model and algorithms in order to be relevant.

Best
Ben

Von meinem iPad gesendet

Am 31.10.2017 um 13:40 schrieb Roberto Ribeiro <robertofig85 at gmail.com<mailto:robertofig85 at gmail.com>>:

I too took that understanding from the text, Ari. I'll read the specs later, but since they mention a lot Big Data and the raster <> vector integration, I  it is akin to a geometry collection, but encompassing a wider range of data types, and arranged in a pyramid/r-tree -esque environment for faster processing.

If so, it's not an entirely novel idea (Esri's File GDB is mostly that, as well as the entire CAD modelling), but one that would be interesting to have an open standard for.

2017/10/31 ??4:23 "Ari Jolma" <ari.jolma at gmail.com<mailto:ari.jolma at gmail.com>>:
That also caught my eye. The text sounds a bit like marketing talk but maybe there is something.

>From a quick look my understanding is that the idea is to create a grid that divides the whole earth into cells of similar shape in a sequence of increasing cell size. And that sounds to me like a new idea.

Any other thoughts? Did I get the idea right?

Best,

Ari


Helmut Kudrnovsky kirjoitti 29.10.2017 klo 01:16:
Fyi

http://www.opengeospatial.org/pressroom/pressreleases/2656

"The goal of DGGS is to enable rapid assembly of spatial data without the
difficulties of working with projected coordinate reference systems. The OGC
DGGS Abstract Specification standard defines the conceptual model and a set
of rules for building highly efficient architectures for spatial data
storage, integration and analytics. ....."



-----
best regards
Helmut
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev



--
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/fbd54931/attachment.html>

From even.rouault at spatialys.com  Tue Oct 31 15:37:18 2017
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 31 Oct 2017 23:37:18 +0100
Subject: [gdal-dev] Using /vsicurl and /vsizip with zip files and signed
	S3 links
In-Reply-To: <CAFCnYQPb7f9krBOZbgQPx3UMAps4bMVrN2Chgj3k2o8-z6irKA@mail.gmail.com>
References: <CAFCnYQPb7f9krBOZbgQPx3UMAps4bMVrN2Chgj3k2o8-z6irKA@mail.gmail.com>
Message-ID: <2100781.tcONaqBtAJ@even-i700>

> You could try one of the following :
> 
>   /vsizip//vsicurl/
> https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20
> 170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccess
> KeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt
> 2fXlKOeKk%3D/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_
> E9A8-POEORB-24-RGB.tif

The hint did not work here because of the signature stuff after the .zip extension. I've fixed it and now it would propose:

/vsizip/{/vsicurl/https://gsfc-ngap-hyp3-product-prod.s3.amazonaws.com/547/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.zip?AWSAccessKeyId=AKIAIYGQSCGFDA6WYRIQ&Expires=1824498425&Signature=WkQJbs%2FE6vLttvAAYt2fXlKOeKk%3D}/S1B_IW_GRDH_1SDV_20170903T223511_20170903T223539_007233_00CC06_E9A8-POEORB-24-RGB.tif

which will work

The fix is just for the hint, you can use the above syntax, documented in 
http://gdal.org/gdal_virtual_file_systems.html#gdal_virtual_file_systems_vsizip

"""Starting with GDAL 2.2, an alternate syntax is available so as to enable chaining and not being dependent
on .zip extension : /vsizip/{/path/to/the/archive}/path/inside/the/zip/file. Note that /path/to/the/archive may also itself use this alternate syntax."""

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171031/c8b5f24e/attachment.html>

From vesnikos at gmail.com  Tue Oct 31 18:00:10 2017
From: vesnikos at gmail.com (Nikolaos Ves)
Date: Wed, 1 Nov 2017 01:00:10 +0000
Subject: [gdal-dev] virtualmem py
Message-ID: <CADCcPvvTfSymVaJ-wSOVf6jvtWBZ4FaTx7Su6+JPk2T2FmuneQ@mail.gmail.com>

Hi All,

I was experimenting with the GetVirtualMemArray python bindings and I am
receiving a 'Received a NULL pointer.' error (windows)

Also, the  tests virtualmem_{1..4} in appveyor are being skipped (and
they're rigged to skip if the platform is not equal to linux)

Are the VirtualMemArrays not working in windows?

Nik
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20171101/44f9d421/attachment.html>

