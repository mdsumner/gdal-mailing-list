From s.perkins at l...  Mon Jul  1 21:30:51 2002
From: s.perkins at l... (Simon Perkins)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] Proposed change to GDAL FITS driver
References: <3D1895AD.3060107@p...> <3D1D19BE.DC44F49D@l...>
Message-ID: <3D21024B.BB430943@l...>

Simon Perkins wrote:
> I'd like to make a tiny but just possibly incompatible change to
> the FITS driver, so I'm writing this first to see if the change
> is likely to affect anyone out there. If you don't use the FITS
> driver in your code then please ignore this message. Even if you
> do use the FITS driver, you can most likely ignore this message
> anyway!
>
> FWIW, the change I'm proposing only involves a single, completely
> undocumented aspect of the driver, so I'm predicting that nobody
> outside of the organization I work in (where the driver was
> written) will be affected.

I have submitted an update for the FITS driver to CVS. The change
involves how FITS files with BZERO and BSCALE set are handled,
and differs slightly from what I suggested a few days ago (even
less has changed from the user point of view). See the updated
GDAL FITS documention for details. This change will presumably
take a while to propagate into a release (assuming Frank approves
the change...). Let me know if there are any problems.

Sy

-- 
Simon Perkins
Los Alamos National Laboratory, USA
http://nis-www.lanl.gov/~simes


From s.perkins at l...  Tue Jul  2 18:53:22 2002
From: s.perkins at l... (Simon Perkins)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] Proposed change to GDAL FITS driver
References: <3D1895AD.3060107@p...> <3D1D19BE.DC44F49D@l...> <3D21024B.BB430943@l...>
Message-ID: <3D222EE2.1070509@l...>

Simon Perkins wrote:
> I have submitted an update for the FITS driver to CVS. The change
> involves how FITS files with BZERO and BSCALE set are handled,
> and differs slightly from what I suggested a few days ago (even
> less has changed from the user point of view). See the updated
> GDAL FITS documention for details. This change will presumably
> take a while to propagate into a release (assuming Frank approves
> the change...). Let me know if there are any problems.

Er, after an extra day's careful consideration I've finally 
decided to remove any special treatment of FITS files with 
BSCALE/BZERO set. Changes have been submitted to CVS. FITS files 
now work just like any other GDAL format, which is just what they 
always should have done...

Sorry for any confusion!

Sy

-- 
Simon Perkins
Los Alamos National Laboratory, USA
http://nis-www.lanl.gov/~simes




From ldviveros at l...  Thu Jul  4 15:43:41 2002
From: ldviveros at l... (Luis Viveros)
Date: Wed Nov 21 11:49:17 2007
Subject: postgresql output format
Message-ID: <JMEDOKAFMOMPCAAA@m...>

Frank:

I didn't notice when the postgresql output format was discontinued.
Can you tell me which is the last version that supported it?

Thanks

Luis Viveros


_____________________________________________________
Supercharge your e-mail with a 25MB Inbox, POP3 Access, No Ads
and NoTaglines --> LYCOS MAIL PLUS.
http://www.mail.lycos.com/brandPage.shtml?pageId=plus 


From ldviveros at l...  Tue Jul  9 16:22:10 2002
From: ldviveros at l... (Luis Viveros)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] postgresql output format
Message-ID: <LHHDFHKIIGHIEAAA@m...>

Hi:

sorry about last mail. I've found out 'why' it was not supported.

./configure --with-pg=/usr/local/pgsql/bin

sorry again.

Luis

--

On Thu, 04 Jul 2002 15:43:41 
Luis Viveros wrote:
>Frank:
>
>I didn't notice when the postgresql output format was discontinued.
>Can you tell me which is the last version that supported it?
>
>Thanks
>
>Luis Viveros
>
>
>_____________________________________________________
>Supercharge your e-mail with a 25MB Inbox, POP3 Access, No Ads
>and NoTaglines --> LYCOS MAIL PLUS.
>http://www.mail.lycos.com/brandPage.shtml?pageId=plus 
>


_____________________________________________________
Supercharge your e-mail with a 25MB Inbox, POP3 Access, No Ads
and NoTaglines --> LYCOS MAIL PLUS.
http://www.mail.lycos.com/brandPage.shtml?pageId=plus 


From ben at v...  Thu Jul 11 07:46:07 2002
From: ben at v... (Ben Discoe)
Date: Wed Nov 21 11:49:17 2007
Subject: OGR and GML?
Message-ID: <CBEJKAGICNIKHBNPFPOPIEAPCAAA.ben@v...>


Frank, could you comment briefly on where OGR support for GML is at?

I am facing the prospect of writing my own GML parser(s), which as you know
is quite a daunting task. Since we're already using OGR, i have high hopes
that it could do some or most of the GML work for us.

It would be totally fine if, at first, it only reads GML 'naively' without
examining the schema.

Also - if is there a mailing list more appropriate for this question than
gdal-dev, let me know.

Some background on the situation: I've taken a full-time position with VFNY
(http://www.vfny.org/) whose main project is a GML-based WFS, and
simulaneously running the VTP, whose ad-hoc formats are attempting to
migrate towards GML.

Thanks,
Ben
http://vterrain.org/



From warmerdam at p...  Thu Jul 11 08:26:59 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] OGR and GML?
References: <CBEJKAGICNIKHBNPFPOPIEAPCAAA.ben@v...>
Message-ID: <3D2D7993.7060609@p...>

Ben Discoe wrote:
> Frank, could you comment briefly on where OGR support for GML is at?
> 
> I am facing the prospect of writing my own GML parser(s), which as you know
> is quite a daunting task. Since we're already using OGR, i have high hopes
> that it could do some or most of the GML work for us.
> 
> It would be totally fine if, at first, it only reads GML 'naively' without
> examining the schema.

Ben,

The OGR GML reading should be working fairly well, and I think I have tested
it successfully with the GML output from the WFS. I am certainly interested
in making further improvements to the GML reader. In fact, I haven't made the
final (billable) delivery for the GML reader to my original client yet, so I do
need to return to it this summer and do some additional polishing.

> Also - if is there a mailing list more appropriate for this question than
> gdal-dev, let me know.

In theory the sfcom-dev list is for all OGR stuff, but in practice I think it
is better to keep all GDAL and OGR discussion on gdal-dev for now. I may
make a separate OGR mailing list when I move gdal-dev to remotesensing.org this
summer.

> Some background on the situation: I've taken a full-time position with VFNY
> (http://www.vfny.org/) whose main project is a GML-based WFS, and
> simulaneously running the VTP, whose ad-hoc formats are attempting to
> migrate towards GML.

Way cool! I will do whatever I can to improve the GML reading to meet your
needs.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From ben at v...  Mon Jul 15 17:52:34 2002
From: ben at v... (Ben Discoe)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] OGR and GML?
In-Reply-To: <3D2D7993.7060609@p...>
Message-ID: <CBEJKAGICNIKHBNPFPOPMEDLCAAA.ben@v...>


Is there a way to get OGR to parse from a memory buffer, rather than a disk
file?
Right now i am using the following, which assumes a filename:

OGRDataSource *pDatasource = OGRSFDriverRegistrar::Open( filename );

However, my GML files are being acquired using HTTP, as a big string buffer.
I can write the buffer out to a temporary file, and point OGR to that, which
works, but i hope there is a more efficient way?

Thanks,
Ben



From warmerdam at p...  Tue Jul 16 09:29:58 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] OGR and GML?
References: <CBEJKAGICNIKHBNPFPOPMEDLCAAA.ben@v...>
Message-ID: <3D341FD6.4000008@p...>

Ben Discoe wrote:
> Is there a way to get OGR to parse from a memory buffer, rather than a disk
> file?
> Right now i am using the following, which assumes a filename:
> 
> OGRDataSource *pDatasource = OGRSFDriverRegistrar::Open( filename );
> 
> However, my GML files are being acquired using HTTP, as a big string buffer.
> I can write the buffer out to a temporary file, and point OGR to that, which
> works, but i hope there is a more efficient way?

Ben,

There is currently no direct support for this, but it could be implemented.
Note that the GML parser is currently implemented on top of the Xerces C++
parser which has an abstracted class to represent the input source, and
implementation which can use a local file, memory buffer or URI as the source.

In your case would it be practical to pass in the URL and let the parser
pull the data instead of doing it yourself?

Hmm. Actually, since we make two passes this might be a bad idea. My second
thought is that we engineer some esoteric format for a "filename" that can
be used to refer to a memory buffer and then low down in the GML reader it
can recognise this and construct a memory reader.

eg.

"OGR_GML_MEM:<pointer-offset> <memory-block-size-in-bytes>"

Let me know if you would like me to incorporate this.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From ben at v...  Tue Jul 16 10:15:30 2002
From: ben at v... (Ben Discoe)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] OGR and GML?
In-Reply-To: <3D341FD6.4000008@p...>
Message-ID: <CBEJKAGICNIKHBNPFPOPCEEHCAAA.ben@v...>


Hi Frank,

(Hope i didn't ruffle too many feathers with my mail to gml-interest... :-)

> In your case would it be practical to pass in the URL and let the parser
> pull the data instead of doing it yourself?
>
> Hmm. Actually, since we make two passes this might be a bad idea.

Yes, and my code has already gone to the trouble of taking on a dependency
on Libwww in order to do cross-platform HTTP requests. I would think that
you wouldn't want to have such a large dependency in OGR.

> My second
> thought is that we engineer some esoteric format for a "filename" that can
> be used to refer to a memory buffer and then low down in the GML reader it
> can recognise this and construct a memory reader.

That sounds good, so you wouldn't have to change the API for
OGRSFDriverRegistrar::Open()

> eg.
> "OGR_GML_MEM:<pointer-offset> <memory-block-size-in-bytes>"

That would be fine. I could also simply pass the memory buffer itself. It
it begins with "<?xml" then you would know it's not a filename.

Anything like that should work fine.

Thanks,
Ben



From tmitchell at l...  Wed Jul 17 14:43:57 2002
From: tmitchell at l... (tymitche)
Date: Wed Nov 21 11:49:17 2007
Subject: OGR2OGR -f "PostgreSQL"
Message-ID: <ah4dtd+5jem@eGroups.com>

Congrats and thanks on the latest version of the ogr tools, Frank.
I'm using ogr2ogr to convert my arcinfo coverages and shapefiles into 
postgis and it works great!

For those of you who have been using earlier versions, one excellent 
option is the "-append" flag which will add more inserts into the db 
if the layer already exists. Great stuff, thank you for making it 
available.

Tyler



From warmerdam at p...  Thu Jul 18 17:00:33 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] ogr2ogr, Possible to control layer combining?
References: <A35A461EBB6BD511859E0002A56B89CC02D7699E@E...>
Message-ID: <3D372C71.5080402@p...>

Martin, Daniel wrote:
> No response on this. Is there a better place for me to ask user 
> questions? I know this is the developers list, but it does say on 
> the web page that user questions should be directed here.

Dan,

This is the best place to ask such questions. There just isn't an
easy solution.

> I've been using ogr2ogr to convert various formats to MITAB. When I
> used it against a set of TIGER Line data, it combined all the layers
> in one folder into a single layer. 

Note that this "automerging" is a property of the TIGER reader. It treats
all county datasets in a single directory as a single dataset with the
layer splitting being on feature type.

> Now I'm trying to convert a set of shape files (Census' 2000
> ZCTA layers) into MITAB. When I do, it's converting each shape file
> into a separate layer. Is there any way to force ogr2ogr to convert
> the entire folder into one layer, as it did with the TIGER data?

> MapInfo does have tools to combine the resulting MITAB layers, but
> (not surprisingly) they don't work half the time (this time included).

Because the MapInfo OGR driver does not support appending to an existing
dataset, this is pretty hard. I will look at modifying the shapefile
driver to support layer append, and then - hopefully - you would be able
to merge you different shapefiles into one shapefile, and then convert
that to mapinfo. Of course, many other GIS tools provide some sort of
merge option too.

Later,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From warmerdam at p...  Thu Jul 18 17:09:26 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] ogr2ogr, Possible to control layer combining?
References: <A35A461EBB6BD511859E0002A56B89CC02D7699E@E...> <3D372C71.5080402@p...>
Message-ID: <3D372E86.60708@p...>

Frank Warmerdam wrote:
> Because the MapInfo OGR driver does not support appending to an existing
> dataset, this is pretty hard. I will look at modifying the shapefile
> driver to support layer append, and then - hopefully - you would be able
> to merge you different shapefiles into one shapefile, and then convert
> that to mapinfo. Of course, many other GIS tools provide some sort of
> merge option too.

Dan,

OK, it seems that recent OGRs will support merging shapefiles already.
Lets say you have two shapefiles file1.shp and file2.shp and you want to
merge them into file_merged.shp before converting to mapinfo. You can
do something like this:

ogr2ogr file_merged.shp file1.shp
ogr2ogr -update -append file_merged.shp file2.shp -nln file_merged file2

The second command is opening file_merged.shp in update mode, and trying to
find existing layers and append the features being copied.

The -nln option sets the name of the layer to be copied to.

Some of the -update and -append stuff was done since the GDAL/OGR 1.1.7
release, so you may need to update from CVS if you want to do this.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From dron at a...  Fri Jul 19 05:37:03 2002
From: dron at a... (Andrey Kiselev)
Date: Wed Nov 21 11:49:17 2007
Subject: [ANNOUNCE]: HDF4 support in GDAL
Message-ID: <20020719133703.623a32a6.dron@a...>

Hi, GDAL users!

There is a new driver in the GDAL CVS tree for Hierarchical Data Format
Release 4 (HDF4) datasets reading. Currently all sorts of
ASTER/MODIS/SEAWIFS 2D/3D datasets could be imported. For compiling library
with HDF4 support you will need a NCSA HDF library and headers. This one
could
be downloaded from the http://hdf.ncsa.uiuc.edu/obtain.html (but before
downloading search this library in your distribution. For Debian users

apt-get install libhdf4g libhdf4g-dev

should be enough).

Please, check format documentation page before using the driver!

Best regards,
Andrey


-- 
Andrey V. Kiselev
Scientific Research Center for Ecological Safety Russian Academy of Sciences
Office phone: +7 812 2307834 ICQ UIN 26871517
Registered Linux user number 169907



From warmerdam at p...  Fri Jul 19 16:58:07 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] BSB Format Version 3.0
References: <005001c21ef3$48f531b0$0300000a@nomadserver1>
Message-ID: <3D387D5F.3060309@p...>


Jay,

You emailed me a while ago about BSB 3.0 support. I have correct the quirks
with the file you provided ... I believe it was just the longer copyright
message exceeding my expected joined line length maximum, and have now
successfully read the file. The changes are committed to the GDAL CVS source
tree, and I have also prepared a new release of my BSB sample code:

ftp://gdal.velocet.ca/pub/outgoing/bsb-1.2.zip

This cut of the BSB support also includes BSB 1.1 changes.

Thanks for your help. Let me know if you encounter any problems with my BSB
support.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From warmerdam at p...  Thu Jul 25 12:02:28 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: OGR2OGR Postgresql field names
References: <OF7190A8F0.9EB9116C-ON88256C01.00574284@l...>
Message-ID: <3D402114.6080502@p...>

Tyler Mitchell wrote:
> Frank, I'm using ogr2ogr to postgis and, as I believe you have noted, I
> find that the field names end up being a bit irritating and I have to quote
> them and capitalize them when I'm running queries, etc. Is there any plan
> to convert the field names to simple lower case names? Know what I mean?
> In all, ogr2ogr sure works great with coverages. Sure beats doing
> coverage->OGR->shp->shp2pgsql which is the other alternative.

Tyler,

I can imagine a few ways of doing this.

One would be to provide a way of overriding output column names in ogr2ogr
but then you would have to set each column by hand.

Another would be to provide a "layer creation option" to the Postgres/PostGIS
driver that would cause it to flatten the names.

I don't have any immediate plans on doing this but I would be interested
in opinion on how it should be done.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From tmitchell at l...  Thu Jul 25 15:17:55 2002
From: tmitchell at l... (Tyler Mitchell)
Date: Wed Nov 21 11:49:17 2007
Subject: OGR2OGR Postgresql field names
Message-ID: <OFA788D4A5.1060FBB3-ON88256C01.006996DC-88256C01.0069A262@l...>


>One would be to provide a way of overriding output column names in ogr2ogr
>but then you would have to set each column by hand.
I can see the value in this - Arcinfo has this kind of option for outputing
dbase files. It's good because my input coverages sometimes have
db-unfriendly field names (ie. MYFIELD# and MYFIELD-ID).
That said, if one is doing this interactively and regularly it can get
tedious. Perhaps a template text file could direct the mappings or save
the last set of mappings?

>Another would be to provide a "layer creation option" to the
Postgres/PostGIS
>driver that would cause it to flatten the names.
This would be the biggest bang for the buck, I think. Simply let it dump
all the field names flattened out. I'd love this kind of option!

>I don't have any immediate plans on doing this but I would be interested
>in opinion on how it should be done.
Is this only an issue with the coverage->postgresql or is it with other
data types as well?

Tyler





From warmerdam at p...  Mon Jul 29 11:16:00 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: Metadata domains in GDAL
References: <20020729190319.3f9325f9.dron@a...>
Message-ID: <3D455C30.6000605@p...>

Andrey Kiselev wrote:
> Frank,
> 
> What is a puprose for ``metadata domains''? I want to fetch global dataset
> metadata when reading subdataset and store them in separate domain meanwhile
> subdataset's metadata will be stored in the default domain. Is it good
> application for domains?

Andrey,

You could use domains for this. Basically, domains are used to provide
additional namespaces for specific kinds of metadata, and a variety hacks.

It is anticipated that over time a bunch of specific domain values will be
given particular semantics, such as was done with the SUBDATASETS domain.

Other domains are used as needed. For instance the CEOS and Envisat drivers
allow applications to fetch raw record data (ascii encoded) via specialized
domains. This is an example of a "hack" based on metadata domains.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From warmerdam at p...  Wed Jul 31 11:23:32 2002
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:17 2007
Subject: Calibration in GDAL
References: <20020731190209.6c67118c.dron@a...>
Message-ID: <3D4800F4.9000504@p...>

Andrey Kiselev wrote:
> Hi, Frank,
> 
> I'm thinking about adding calibration feature to the GDAL and I need your
> opinion. I'm suggest follows:
> 
> 1. Add a helper class for storing polinomial coefficients on per pixel
> basis. It may be something like
> 
> -----------
> class Calibration
> {
> int iOrder;
> double *padfCoefficients;
> 
> public:
> 
> Calibration( int, double * );
> ~Calibartion( );
> double CalibrateValue( double );
> 
> }
> 
> /* padfInputArray --- Array of polinomial coefficients */
> 
> Calibration::Calibration( int iOrder, double *padfInputArray )
> {
> if ( iOrder == 0 )
> return NULL;
> iOrder = ABS( iOrder );
> padfCoefficients = CPLMalloc( iOrder * sizeof(double) );
> 
> for ( int i = 0; i< iOrder; i++ )
> padfCoefficients[i] = padfInputArray[i];
> 
> }
> 
> double Calibration::CalibrateValue( double dfValue )
> {
> double dfCalibratedValue = 0;
> 
> for ( int i = iOrder; i > 0; i-- )
> dfCalibratedValue =
> (dfCalibratedValue + padfCoefficients[i]) * dfValue;
> 
> return dfCalibratedValue;
> }
> -----------
> 
> 2. Each driver which supports calibartion should define method
> 
> virtual double GDALRasterBand::GetCalibratedValue( int iXPos, int iYPos,
> double dfValue );
> 
> in the GDALRasterBand class. This method will return calibrated value for
> the specified pixel (value of pixel passed through dfValue parameter). In
> the Open() method for the dataset calibration array will be created and
> filled. In case of the same function for all pixels it will be something
> like (schematically)
> 
> Calibration *paCal = new Calibration[nBands];
> 
> If we have different functions for different rows it will be
> 
> Calibration **papCal = new Calibration[nBands][nYSize];
> 
> And if we have the same function for all rows
> 
> Calibration **papCal = new Calibration[nBands][nXSize];
> 
> 3. GDALRasterBand::RasterIO() method should take a flag indicating that we
> want to get calibrated values. Maybe something like GF_ReadCalibrated as the
> first parameter? Actually they will be calculated using
> GetCalibratedValue().
> 
> 
> What do you think about all of these?

Andrey,

I have included all of your original text above so others on the gdal list
can follow the discussion.

I think that:
o The calibration information has to be transportable from one driver to
another, so we should not entirely hide it within the driver.

o We should support a calibration scheme that can potentially support multiple
calibration model types without having to alter the public API.

Inorder to accomplish this I suggest that we implement a GDALCalibrationModel
class that initially:

o Can be initialized from a string list representation of a calibration model.
o Has a method to calibrate a single value given the value as a double and
the location as an integer pixel,line location from within the source image.
o Supports whatever polynomial scheme you initially need.
o Implement a convenience mechanism for storing calibration models in an
external text file. This mechanism could be easily plugged into formats
that don't currently support calibration in much the way we support world files
or external overview files for many formats now. Ensure this convenience
mechanism is utilized for GeoTIFF format.

and that would eventually offer methods for;
o Converting back to a string list model format.
o Altering the calibration model (if needed) to account for subsetting of an image.
o Support additional calibration models as we need them.
o Include a method on the GDALRasterBand() for reading calibrated data that
would internally take care of instantiating the GDALCalibrationModel ...
perhaps called CalibratedRasterIO() (read-only though).

I think that calibration models should be fetched, and set on the GDALRasterBand
via the metadata mechanism, using a special domain (perhaps "BMD_CALIBRATION_MODEL").
Within this special domain there would be standard keys for the calibration model
type, and perhaps a description field. The rest of the key/value pairs would be
model type specific. The whole stringlist of metadata from this domain is the
serialized format of the calibration model.

The one concern about my suggested approach is that for formats for which the
calibration model for the whole file would be very big it will be necessary to
convert it to the string list format, and back into a GDALCalibrationModel all
in memory. If we forsee this being a big problem we should rethink things a
bit.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush | Geospatial Programmer for Rent




From paul at t...  Wed Jul 31 20:55:59 2002
From: paul at t... (Paul Selormey)
Date: Wed Nov 21 11:49:17 2007
Subject: [gdal-dev] Re: Calibration in GDAL
References: <20020731190209.6c67118c.dron@a...> <3D4800F4.9000504@p...>
Message-ID: <002d01c238f6$35ab6350$700201c0@M...>

Hello Frank and Andrey,
I need a little education here. What is the use of the so-called
calibrated raster? (I have always associated calibration to instruments).

Best regards,
Paul.

----- Original Message -----
From: "Frank Warmerdam" <warmerdam@p...>
To: "Andrey Kiselev" <dron@a...>
Cc: "gdal-dev" <gdal-dev@yahoogroups.com>
Sent: Thursday, August 01, 2002 12:23 AM
Subject: [gdal-dev] Re: Calibration in GDAL


>
> Andrey Kiselev wrote:
> > Hi, Frank,
> >
> > I'm thinking about adding calibration feature to the GDAL and I need
your
> > opinion. I'm suggest follows:
> >
> > 1. Add a helper class for storing polinomial coefficients on per pixel
> > basis. It may be something like
> >
> > -----------
> > class Calibration
> > {
> > int iOrder;
> > double *padfCoefficients;
> >
> > public:
> >
> > Calibration( int, double * );
> > ~Calibartion( );
> > double CalibrateValue( double );
> >
> > }
> >
> > /* padfInputArray --- Array of polinomial coefficients */
> >
> > Calibration::Calibration( int iOrder, double *padfInputArray )
> > {
> > if ( iOrder == 0 )
> > return NULL;
> > iOrder = ABS( iOrder );
> > padfCoefficients = CPLMalloc( iOrder * sizeof(double) );
> >
> > for ( int i = 0; i< iOrder; i++ )
> > padfCoefficients[i] = padfInputArray[i];
> >
> > }
> >
> > double Calibration::CalibrateValue( double dfValue )
> > {
> > double dfCalibratedValue = 0;
> >
> > for ( int i = iOrder; i > 0; i-- )
> > dfCalibratedValue =
> > (dfCalibratedValue + padfCoefficients[i]) * dfValue;
> >
> > return dfCalibratedValue;
> > }
> > -----------
> >
> > 2. Each driver which supports calibartion should define method
> >
> > virtual double GDALRasterBand::GetCalibratedValue( int iXPos, int iYPos,
> > double dfValue );
> >
> > in the GDALRasterBand class. This method will return calibrated value
for
> > the specified pixel (value of pixel passed through dfValue parameter).
In
> > the Open() method for the dataset calibration array will be created and
> > filled. In case of the same function for all pixels it will be something
> > like (schematically)
> >
> > Calibration *paCal = new Calibration[nBands];
> >
> > If we have different functions for different rows it will be
> >
> > Calibration **papCal = new Calibration[nBands][nYSize];
> >
> > And if we have the same function for all rows
> >
> > Calibration **papCal = new Calibration[nBands][nXSize];
> >
> > 3. GDALRasterBand::RasterIO() method should take a flag indicating that
we
> > want to get calibrated values. Maybe something like GF_ReadCalibrated as
the
> > first parameter? Actually they will be calculated using
> > GetCalibratedValue().
> >
> >
> > What do you think about all of these?
>
> Andrey,
>
> I have included all of your original text above so others on the gdal list
> can follow the discussion.
>
> I think that:
> o The calibration information has to be transportable from one driver to
> another, so we should not entirely hide it within the driver.
>
> o We should support a calibration scheme that can potentially support
multiple
> calibration model types without having to alter the public API.
>
> Inorder to accomplish this I suggest that we implement a
GDALCalibrationModel
> class that initially:
>
> o Can be initialized from a string list representation of a calibration
model.
> o Has a method to calibrate a single value given the value as a double
and
> the location as an integer pixel,line location from within the source
image.
> o Supports whatever polynomial scheme you initially need.
> o Implement a convenience mechanism for storing calibration models in an
> external text file. This mechanism could be easily plugged into
formats
> that don't currently support calibration in much the way we support
world files
> or external overview files for many formats now. Ensure this
convenience
> mechanism is utilized for GeoTIFF format.
>
> and that would eventually offer methods for;
> o Converting back to a string list model format.
> o Altering the calibration model (if needed) to account for subsetting
of an image.
> o Support additional calibration models as we need them.
> o Include a method on the GDALRasterBand() for reading calibrated data
that
> would internally take care of instantiating the GDALCalibrationModel
...
> perhaps called CalibratedRasterIO() (read-only though).
>
> I think that calibration models should be fetched, and set on the
GDALRasterBand
> via the metadata mechanism, using a special domain (perhaps
"BMD_CALIBRATION_MODEL").
> Within this special domain there would be standard keys for the
calibration model
> type, and perhaps a description field. The rest of the key/value pairs
would be
> model type specific. The whole stringlist of metadata from this domain is
the
> serialized format of the calibration model.
>
> The one concern about my suggested approach is that for formats for which
the
> calibration model for the whole file would be very big it will be
necessary to
> convert it to the string list format, and back into a GDALCalibrationModel
all
> in memory. If we forsee this being a big problem we should rethink things
a
> bit.
>
> Best regards,
>
> --
> ---------------------------------------+----------------------------------
----
> I set the clouds in motion - turn up | Frank Warmerdam,
warmerdam@p...
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush | Geospatial Programmer for Rent
>
>
>
>
>
> Your use of Yahoo! Groups is subject to http://docs.yahoo.com/info/terms/
>
>



