From warmerdam at p...  Wed Jan  3 14:13:00 2001
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:13 2007
Subject: Large Files, and other additions
Message-ID: <3A5379BC.AF067C05@p...>

Folks, 

I have added a "large file access API" in cpl_vsi.h. Basically this is
a copy of the normal VSI functions with an L appended. The offset arguments
and return values are of type vsi_l_offset which on some platforms will be
a 64 bit value, and even where not, it will be a 32bit unsigned value. 

On windows I have implemented cpl_vsil_win32.cpp which allows the large
file api to be used to write large files. To be honest, I have only tried
this with files between 2GB and 4GB but it should work with larger files too.

The TIFF and Erdas Imagine readers (internally limited to 4GB) have been
updated to use this API, and I have tested writing and reading >2GB files for
both formats on WinNT. 

Because I have to use underlying Win32 functions to implement the large
file API, the "FILE *" returned by VSIFOpenL() isn't compatible with the
one returned by VSIFOpen(), so the handle for the large file API must be
kept separate from the regular API. The "FILE *" from VSIFOpenL() on 
winnt is a "HANDLE" returned by the Win32 CreateFile() function. 

Because of this compatibility problem, I haven't yet updated all the 
"RawDataset" based formats to support large files. They will have to all be
done at once. 

Note there is also a GIntBig and GUIntBig type, which on some platforms is
64bit. On other platforms (for now, all non-windows) the IntBig is just a
long, and "large file API" is just #define'ed to the regular VSI functions. 

Lastly, I have now implemented support for the popular Netpbm greyscale, and
RGB formats (.pgm and .ppm). This facilitates some experiments I am doing
with the FIASCO (Fractal Image And Sequence COdec) image compressor at:

http://ulli.linuxave.net/fiasco/

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerda
and watch the world go round - Rush | Geospatial Programmer for Rent


From warmerdam at p...  Wed Jan 10 11:00:59 2001
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:13 2007
Subject: GIF Support in GDAL
Message-ID: <3A5C873B.57B272CD@p...>

Folks, 

I have incorporated GIF support into GDAL (read, and write) as part of the
CIETMap project through the DM Solutions Group. This includes support for
generating interlaced output files, but does not include support for a 
transparent color. This could be added if necessary, but it wasn't obvious
to me how to do so from the libungif documentation. 

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerda
and watch the world go round - Rush | Geospatial Programmer for Rent


From warmerdam at p...  Mon Jan 15 09:30:05 2001
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:13 2007
Subject: Progressive JPEG
Message-ID: <3A63096D.2DE24B0A@p...>


Folks, 

I have added support for generating progressive JPEG files on behalf of the
CIETMap project. Use the option "PROGRESSIVE=ON" when copying to jpeg
format. I had limited success in getting Netscape to display these files
progressively. 

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerda
and watch the world go round - Rush | Geospatial Programmer for Rent


From warmerdam at p...  Mon Jan 22 17:28:19 2001
From: warmerdam at p... (Frank Warmerdam)
Date: Wed Nov 21 11:49:13 2007
Subject: GDAL 1.1.3 Released
Message-ID: <3A6CB403.DE83561D@p...>

Folks, 

I have issued 1.1.3 source zip/tar files. I would appreciate any feedback
on problems with this version. I will be preparing binary libraries for
release with GRASS 5.0 final from this rev. I am also hoping to include it
in a new cut of the OpenEV binary releases.

Best regards,

---------------------------------------+--------------------------------------
I set the clouds in motion - turn up | Frank Warmerdam, warmerdam@p...
light and sound - activate the windows | http://pobox.com/~warmerda
and watch the world go round - Rush | Geospatial Programmer for Rent


2001-01-22 Frank Warmerdam <warmerdam@p...>

* Released gdal 1.1.3 source distributions.

2001-01-20 Frank Warmerdam <warmerdam@p...>

* Improved python configure logic so it skips python if there is
no python makefile.

2001-01-17 Frank Warmerdam <warmerdam@p...>

* Added progressive jpeg support (a couple days ago).

* Added support for processing CODELIST records in NTF reader (as
used for BL2000 datasets).

2001-01-10 Frank Warmerdam <warmerdam@p...>

* Patched GDALDataset::FlushCache() to recover gracefully if papoBands
doesn't exist yet matching nBands.

2001-01-09 Frank Warmerdam <warmerdam@p...>

* Added GIF driver based on libungif.

2001-01-03 Frank Warmerdam <warmerdam@p...>

* Fixed some serious bugs with clean target on windows makefile.
Now links gdal11.dll with /debug.

* Erdas Imagine now uses large file API to support 2-4GB files on
Windows.

* libtiff now uses large file api (tif_vsi.c) on windows to handle
2-4GB tiff files. 

* Added large file API in port/cpl_vsi.h, and implemented for
Win32 in port/cpl_vsil_win32.c

2000-12-15 Frank Warmerdam <warmerdam@p...>

* Added read support for .tfw files, and read/write support
for GEOTRANSMATRIX in GeoTIFF. 

* Fixed so that non-geographic/projected model types result in
an empty coordinate system string, not WGS84, as per bug report
from Eric Miller and aerial.tif. 

2000-12-14 Frank Warmerdam <warmerdam@p...>

* Added HKVDataset::Delete() implementation, made accessable from
python.

2000-12-13 Frank Warmerdam <warmerdam@p...>

* Various improvements to build. 
ogr/ogrsf_frmts/sdts now only updates the sdts and iso libraries in 
ogrsf_frmts.a if they are out of date. 
frmts/gtiff just installs object code from libtiff and libgeotiff
directories instead of .a files, to avoid the $(wildcard .../*.a) 
issue.

2000-12-05 Frank Warmerdam <warmerdam@p...>

* Added better error testing, especially for CE_Failure in 
parts of OGR to avoid being defeated by a mere warning.

* Added Cassini support in gdal/ogr/ogr_srs_proj4.cpp

* Check for png_set_IHDR in configure so avoid using old png libraries.

* Added support for all readable projections in write code for
GeoTIFF (gdal/frmts/gtiff/gt_wkt_srs.cpp).

* Modified ogr_srs_proj4.cpp to use +R_A for VanDerGrinten and
Miller Cylindrical.

2000-11-29 Frank Warmerdam <warmerdam@p...>

* Added limited SetGeoTransform() support for HKV Blob format.

* Added "pretty printing" of coordinate system in gdalinfo.c

* Added gdal_merge.py in pymod directory.

* Extended shapefile OGR driver to support MULTIPOLYGON objects.

2000-11-27 Frank Warmerdam <warmerdam@p...>

* Added Japanese DEM format (frmts/jdem).

2000-11-27 Bernhard Reiter <bernhard@i...>

* Enable the use of the --exec-prefix and --libdir etc configure 
options and should give the same behaviour.

2000-11-24 Frank Warmerdam <warmerdam@p...>

* Added support for using pre-installed libtiff. Controlled via
--with-libtiff configure switch.

2000-11-22 Frank Warmerdam <warmerdam@p...>

* Added CEOS_DM_* metadata items for CEOS SAR format at Peter
Farris-Manning's request in frmts/ceos2/sar_ceosdataset.cpp.

* Fixed bug in complex image overview generation (core/overview.cpp).
The complex overview images were corrupt.

2000-11-16 Frank Warmerdam <warmerda@cs46980-c>

* Moved GXF driver down in driver order (in GDALAllRegister()).
Improved test for GXFness in gxfdataset.cpp a bit.

2000-10-30 Frank Warmerdam <warmerda@cs46980-c>

* Added error related entry points to gdal.i/gdal.py for python.

* Fixed ehdrdataset.cpp to report error if the user selects the
.hdr file instead of the .bil file. 

* Fixed bug with GetRasterColorTable in gdal.py, and 
GetRasterNoDataValue in gdal.i.


