From jukka.rahkonen at mmmtike.fi  Sun Dec  1 09:27:16 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Sun, 1 Dec 2013 17:27:16 +0000 (UTC)
Subject: [gdal-dev] .csvt file doesn't allow space after comma
References: <52980F2B.30106@stripfamily.net>
	<CADEnnOMdm7WoYFAuygbfz5j=tESarFcSsM_N=Lc7Z7Fah_O99A@mail.gmail.com>
Message-ID: <loom.20131201T181453-579@post.gmane.org>

Peter Halls <p.halls <at> york.ac.uk> writes:

> 
> 
> 
> 
> David,
> ????
http://www.qgis.nl/2012/07/13/koppelen-van-data-uit-csv-bestand/?lang=en
defines the cvst file as a sequence of comma separated column definitions.?
The examples are all 'dense', with no space between the comma and the next
value.? It seems odd to define it in this way - perhaps there is a reason or
perhaps it is a bijou bugette in QGIS ...

The blog post could mention that csv reader and csvt type file are GDAL/OGR
features and that the primary documentation is in
http://www.gdal.org/ogr/drv_csv.html. Also, if there is a wish to change how
csv driver behaves the right place to discuss is the gdal-dev mailing list.
However, that is something that belongs to QGIS developers and QGIS users
should not need to care about it.

-Jukka Rahkonen-


From Roger.Bivand at nhh.no  Mon Dec  2 02:22:11 2013
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 2 Dec 2013 11:22:11 +0100
Subject: [gdal-dev] Locked files under Windows
In-Reply-To: <alpine.LRH.2.03.1311052006060.1859@reclus.nhh.no>
References: <alpine.LRH.2.03.1311051606520.949@reclus.nhh.no>
	<1383666181.527912059b1e4@imp.free.fr>
	<alpine.LRH.2.03.1311051824230.1536@reclus.nhh.no>
	<201311051959.54351.even.rouault@mines-paris.org>
	<alpine.LRH.2.03.1311052006060.1859@reclus.nhh.no>
Message-ID: <alpine.LRH.2.03.1312021040520.10012@reclus.nhh.no>

On Tue, 5 Nov 2013, Roger Bivand wrote:

> On Tue, 5 Nov 2013, Even Rouault wrote:
>
>>> Even,
>>> 
>>> Thanks as always for getting back quickly! Yes, the relevant code is (line
>>> 475 in rgdal/src/gdal-bindings.cpp):
>>>
>>>    GDALDataset *pDataset =
>>>      (GDALDataset *) R_ExternalPtrAddr(sxpHandle);
>>>
>>>    if (pDataset == NULL) return(R_NilValue);
>>>
>>>    installErrorHandler();
>>>
>>>    GDALDriver *pDriver = pDataset->GetDriver();
>>>
>>>    const char *filename = pDataset->GetDescription();
>>>
>>>    GDALDeleteDataset((GDALDriverH) pDriver, filename);
>>>
>>>    R_ClearExternalPtr(sxpHandle);
>>>
>>>    uninstallErrorHandlerAndTriggerError();
>>> 
>>> but after this is run, the file remains open. Is GDALDeleteDataset()
>>> inappropriate? Should we say GDALClose((GDALDatasetH)pDataset); first; you
>>> suggested this instead of pDataset->~GDALDataset(); last year? The file
>>> pointers are inside the Dataset objects, so obviously they should be
>>> closed. We have tried putting things in various orders, without success so
>>> far, I'm afraid.
>> 
>> GDALDeleteDataset() doesn't take the dataset object as a parameter, so it 
>> will
>> not delete it for you (in the C++ sense of delete... The naming of 
>> functions
>> is a bit confusing admitedly)
>> 
>> Yes, you need to call GDALClose() before GDALDeleteDataset(), and make sure
>> that the handle to the dataset is no used afterwards of course. I mention 
>> that
>> because I'm not sure what R_ClearExternalPtr() does.
>
> Right - I've been trying this based on your first reply, which put me "on 
> track". I think that we have assumed that GDALDeleteDataset() took an open 
> dataset and deleted it, closing, freeing and unlinking combined. It makes 
> sense, though, to close first after having stored the arguments to 
> GDALDeleteDataset(). The R_ClearExternalPtr() function clears the internal 
> object in R in which external pointers are stored, so would zombie the 
> dataset if applied too early. Initial tests on Linux and Windows are 
> promising ...

Even,

Not end of story, I'm afraid. Running GCC 4.8.2 AddressSanitizer, we see:

> GDAL.close(x)
=================================================================
==30754== ERROR: AddressSanitizer: heap-use-after-free on address 
...
     #5 0x7ffd14e195db in RGDAL_DeleteHandle 
/data/gannet/ripley/R/packages/tests-48x/rgdal/src/gdal-bindings.cpp:491
     #6 0x7ffd14e19675 in RGDAL_CloseDataset 
/data/gannet/ripley/R/packages/tests-48x/rgdal/src/gdal-bindings.cpp:519

(full report at foot of: 
http://www.stats.ox.ac.uk/pub/bdr/memtests/ASAN/rgdal.out)

where RGDAL_DeleteHandle after revision is:

   installErrorHandler();

   GDALDriver *pDriver = pDataset->GetDriver();
   const char *desc = GDALGetDriverShortName(pDriver);
   GDALDriver *pDriver1 = (GDALDriver *) GDALGetDriverByName(desc);

   const char *filename = pDataset->GetDescription();

   GDALClose((GDALDatasetH) pDataset);
   GDALDeleteDataset((GDALDriverH) pDriver1, filename);

   R_ClearExternalPtr(sxpHandle);
   uninstallErrorHandlerAndTriggerError();


(R_ClearExternalPtr removes the external pointer stored as an R workspace 
object).

I suspect that ASAN is unhappy about pDriver being a pointer inside 
pDataset when pDataset no longer exists. It is being over-touchy, maybe, 
but if the heap was overwritten between pDriver being retrieved and used, 
the consequences might be unpredictable. I've tried making pDriver 
independent of pDataset, as you see, but the ASAN error is the same. Is 
filename a copy or does it point into pDataset?

Best wishes,

Roger

>
> Thanks again,
>
> Roger
>
>> 
>> 
>>> 
>>> Best wishes,
>>> 
>>> Roger
>>> 
>> 
>> 
>> 
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no


From jonathanmoules at warwickshire.gov.uk  Mon Dec  2 03:12:13 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Mon, 2 Dec 2013 11:12:13 +0000
Subject: [gdal-dev] GDAL python tools and batch files
Message-ID: <CAA-xNcXFWkR+hByyJixmePzAOfNfbcNSoM=EZsuGqrTrHymWWQ@mail.gmail.com>

Hi List,
I'm trying to batch (Windows) a fairly simple task - mosaic and then
pyramid some rasters.

While testing, I've simplified my batch file down to two lines:

gdal_merge -o %THIS_DIR%.tif -of GTiff -co TILED=YES -co BIGTIFF=YES -co
> COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512
> --optfile tiff_list.txt -co
> PHOTOMETRIC=YCBCR
>


> pause



The problem is that once gdal_merge has finished processing, rather than
continue onward the batch file ends, so in this case the "pause" is never
triggered. Doesn't matter what comes next, the batch ends as soon as the
merge is complete.

However the same simple batch file but with a gdaladdo command instead
works fine. Is this a python thing?

Anyone know why that is? Should it be doing this? Using the OSGeo GDAL
1.10.1 build, but it happened with FWTools too (thought it was a FWTools
bug at the time).

Tested on Windows 7 and Server 2008.

Cheers,
Jonathan

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/b219a28a/attachment.html>

From even.rouault at mines-paris.org  Mon Dec  2 03:28:52 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 2 Dec 2013 12:28:52 +0100
Subject: [gdal-dev] Locked files under Windows
In-Reply-To: <alpine.LRH.2.03.1312021040520.10012@reclus.nhh.no>
References: <alpine.LRH.2.03.1311051606520.949@reclus.nhh.no>
	<alpine.LRH.2.03.1311052006060.1859@reclus.nhh.no>
	<alpine.LRH.2.03.1312021040520.10012@reclus.nhh.no>
Message-ID: <201312021228.52753.even.rouault@mines-paris.org>

Le lundi 02 d?cembre 2013 11:22:11, Roger Bivand a ?crit :
> On Tue, 5 Nov 2013, Roger Bivand wrote:
> > On Tue, 5 Nov 2013, Even Rouault wrote:
> >>> Even,
> >>> 
> >>> Thanks as always for getting back quickly! Yes, the relevant code is
> >>> (line
> >>> 
> >>> 475 in rgdal/src/gdal-bindings.cpp):
> >>>    GDALDataset *pDataset =
> >>>    
> >>>      (GDALDataset *) R_ExternalPtrAddr(sxpHandle);
> >>>    
> >>>    if (pDataset == NULL) return(R_NilValue);
> >>>    
> >>>    installErrorHandler();
> >>>    
> >>>    GDALDriver *pDriver = pDataset->GetDriver();
> >>>    
> >>>    const char *filename = pDataset->GetDescription();
> >>>    
> >>>    GDALDeleteDataset((GDALDriverH) pDriver, filename);
> >>>    
> >>>    R_ClearExternalPtr(sxpHandle);
> >>>    
> >>>    uninstallErrorHandlerAndTriggerError();
> >>> 
> >>> but after this is run, the file remains open. Is GDALDeleteDataset()
> >>> inappropriate? Should we say GDALClose((GDALDatasetH)pDataset); first;
> >>> you suggested this instead of pDataset->~GDALDataset(); last year? The
> >>> file pointers are inside the Dataset objects, so obviously they should
> >>> be closed. We have tried putting things in various orders, without
> >>> success so far, I'm afraid.
> >> 
> >> GDALDeleteDataset() doesn't take the dataset object as a parameter, so
> >> it will
> >> not delete it for you (in the C++ sense of delete... The naming of
> >> functions
> >> is a bit confusing admitedly)
> >> 
> >> Yes, you need to call GDALClose() before GDALDeleteDataset(), and make
> >> sure that the handle to the dataset is no used afterwards of course. I
> >> mention that
> >> because I'm not sure what R_ClearExternalPtr() does.
> > 
> > Right - I've been trying this based on your first reply, which put me "on
> > track". I think that we have assumed that GDALDeleteDataset() took an
> > open dataset and deleted it, closing, freeing and unlinking combined. It
> > makes sense, though, to close first after having stored the arguments to
> > GDALDeleteDataset(). The R_ClearExternalPtr() function clears the
> > internal object in R in which external pointers are stored, so would
> > zombie the dataset if applied too early. Initial tests on Linux and
> > Windows are promising ...
> 
> Even,
> 
> Not end of story, I'm afraid. Running GCC 4.8.2 AddressSanitizer, we see:
> > GDAL.close(x)
> 
> =================================================================
> ==30754== ERROR: AddressSanitizer: heap-use-after-free on address
> ...
>      #5 0x7ffd14e195db in RGDAL_DeleteHandle
> /data/gannet/ripley/R/packages/tests-48x/rgdal/src/gdal-bindings.cpp:491
>      #6 0x7ffd14e19675 in RGDAL_CloseDataset
> /data/gannet/ripley/R/packages/tests-48x/rgdal/src/gdal-bindings.cpp:519
> 
> (full report at foot of:
> http://www.stats.ox.ac.uk/pub/bdr/memtests/ASAN/rgdal.out)
> 
> where RGDAL_DeleteHandle after revision is:
> 
>    installErrorHandler();
> 
>    GDALDriver *pDriver = pDataset->GetDriver();
>    const char *desc = GDALGetDriverShortName(pDriver);
>    GDALDriver *pDriver1 = (GDALDriver *) GDALGetDriverByName(desc);
> 
>    const char *filename = pDataset->GetDescription();
> 
>    GDALClose((GDALDatasetH) pDataset);
>    GDALDeleteDataset((GDALDriverH) pDriver1, filename);
> 
>    R_ClearExternalPtr(sxpHandle);
>    uninstallErrorHandlerAndTriggerError();
> 
> 
> (R_ClearExternalPtr removes the external pointer stored as an R workspace
> object).
> 
> I suspect that ASAN is unhappy about pDriver being a pointer inside
> pDataset when pDataset no longer exists. It is being over-touchy, maybe,
> but if the heap was overwritten between pDriver being retrieved and used,
> the consequences might be unpredictable. I've tried making pDriver
> independent of pDataset, as you see, but the ASAN error is the same. Is
> filename a copy or does it point into pDataset?

You can remove the following lines and just use pDriver
>    const char *desc = GDALGetDriverShortName(pDriver);
>    GDALDriver *pDriver1 = (GDALDriver *) GDALGetDriverByName(desc);

The error is that the pointer returned by GetDescription() is owned by the 
dataset, so becomes invalid when you close it. You have to strdup() the value 
before closing the dataset.

> 
> Best wishes,
> 
> Roger
> 
> > Thanks again,
> > 
> > Roger
> > 
> >>> Best wishes,
> >>> 
> >>> Roger

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From Roger.Bivand at nhh.no  Mon Dec  2 04:09:35 2013
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 2 Dec 2013 13:09:35 +0100
Subject: [gdal-dev] Locked files under Windows
In-Reply-To: <201312021228.52753.even.rouault@mines-paris.org>
References: <alpine.LRH.2.03.1311051606520.949@reclus.nhh.no>
	<alpine.LRH.2.03.1311052006060.1859@reclus.nhh.no>
	<alpine.LRH.2.03.1312021040520.10012@reclus.nhh.no>
	<201312021228.52753.even.rouault@mines-paris.org>
Message-ID: <alpine.LRH.2.03.1312021307370.10364@reclus.nhh.no>

On Mon, 2 Dec 2013, Even Rouault wrote:

> Le lundi 02 d?cembre 2013 11:22:11, Roger Bivand a ?crit :
>> On Tue, 5 Nov 2013, Roger Bivand wrote:
>>> On Tue, 5 Nov 2013, Even Rouault wrote:
>>>>> Even,
>>>>>
>>>>> Thanks as always for getting back quickly! Yes, the relevant code is
>>>>> (line
>>>>>
>>>>> 475 in rgdal/src/gdal-bindings.cpp):
>>>>>    GDALDataset *pDataset =
>>>>>
>>>>>      (GDALDataset *) R_ExternalPtrAddr(sxpHandle);
>>>>>
>>>>>    if (pDataset == NULL) return(R_NilValue);
>>>>>
>>>>>    installErrorHandler();
>>>>>
>>>>>    GDALDriver *pDriver = pDataset->GetDriver();
>>>>>
>>>>>    const char *filename = pDataset->GetDescription();
>>>>>
>>>>>    GDALDeleteDataset((GDALDriverH) pDriver, filename);
>>>>>
>>>>>    R_ClearExternalPtr(sxpHandle);
>>>>>
>>>>>    uninstallErrorHandlerAndTriggerError();
>>>>>
>>>>> but after this is run, the file remains open. Is GDALDeleteDataset()
>>>>> inappropriate? Should we say GDALClose((GDALDatasetH)pDataset); first;
>>>>> you suggested this instead of pDataset->~GDALDataset(); last year? The
>>>>> file pointers are inside the Dataset objects, so obviously they should
>>>>> be closed. We have tried putting things in various orders, without
>>>>> success so far, I'm afraid.
>>>>
>>>> GDALDeleteDataset() doesn't take the dataset object as a parameter, so
>>>> it will
>>>> not delete it for you (in the C++ sense of delete... The naming of
>>>> functions
>>>> is a bit confusing admitedly)
>>>>
>>>> Yes, you need to call GDALClose() before GDALDeleteDataset(), and make
>>>> sure that the handle to the dataset is no used afterwards of course. I
>>>> mention that
>>>> because I'm not sure what R_ClearExternalPtr() does.
>>>
>>> Right - I've been trying this based on your first reply, which put me "on
>>> track". I think that we have assumed that GDALDeleteDataset() took an
>>> open dataset and deleted it, closing, freeing and unlinking combined. It
>>> makes sense, though, to close first after having stored the arguments to
>>> GDALDeleteDataset(). The R_ClearExternalPtr() function clears the
>>> internal object in R in which external pointers are stored, so would
>>> zombie the dataset if applied too early. Initial tests on Linux and
>>> Windows are promising ...
>>
>> Even,
>>
>> Not end of story, I'm afraid. Running GCC 4.8.2 AddressSanitizer, we see:
>>> GDAL.close(x)
>>
>> =================================================================
>> ==30754== ERROR: AddressSanitizer: heap-use-after-free on address
>> ...
>>      #5 0x7ffd14e195db in RGDAL_DeleteHandle
>> /data/gannet/ripley/R/packages/tests-48x/rgdal/src/gdal-bindings.cpp:491
>>      #6 0x7ffd14e19675 in RGDAL_CloseDataset
>> /data/gannet/ripley/R/packages/tests-48x/rgdal/src/gdal-bindings.cpp:519
>>
>> (full report at foot of:
>> http://www.stats.ox.ac.uk/pub/bdr/memtests/ASAN/rgdal.out)
>>
>> where RGDAL_DeleteHandle after revision is:
>>
>>    installErrorHandler();
>>
>>    GDALDriver *pDriver = pDataset->GetDriver();
>>    const char *desc = GDALGetDriverShortName(pDriver);
>>    GDALDriver *pDriver1 = (GDALDriver *) GDALGetDriverByName(desc);
>>
>>    const char *filename = pDataset->GetDescription();
>>
>>    GDALClose((GDALDatasetH) pDataset);
>>    GDALDeleteDataset((GDALDriverH) pDriver1, filename);
>>
>>    R_ClearExternalPtr(sxpHandle);
>>    uninstallErrorHandlerAndTriggerError();
>>
>>
>> (R_ClearExternalPtr removes the external pointer stored as an R workspace
>> object).
>>
>> I suspect that ASAN is unhappy about pDriver being a pointer inside
>> pDataset when pDataset no longer exists. It is being over-touchy, maybe,
>> but if the heap was overwritten between pDriver being retrieved and used,
>> the consequences might be unpredictable. I've tried making pDriver
>> independent of pDataset, as you see, but the ASAN error is the same. Is
>> filename a copy or does it point into pDataset?
>
> You can remove the following lines and just use pDriver
>>    const char *desc = GDALGetDriverShortName(pDriver);
>>    GDALDriver *pDriver1 = (GDALDriver *) GDALGetDriverByName(desc);
>
> The error is that the pointer returned by GetDescription() is owned by the
> dataset, so becomes invalid when you close it. You have to strdup() the value
> before closing the dataset.

Yes, this works. Both pDriver and filename must be separated from their 
origins in pDataset before pDataset is closed.

Thanks again,

Roger

>
>>
>> Best wishes,
>>
>> Roger
>>
>>> Thanks again,
>>>
>>> Roger
>>>
>>>>> Best wishes,
>>>>>
>>>>> Roger
>
>

-- 
Roger Bivand
Department of Economics, Norwegian School of Economics,
Helleveien 30, N-5045 Bergen, Norway.
voice: +47 55 95 93 55; fax +47 55 95 95 43
e-mail: Roger.Bivand at nhh.no

From jonathanmoules at warwickshire.gov.uk  Mon Dec  2 04:13:48 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Mon, 2 Dec 2013 12:13:48 +0000
Subject: [gdal-dev] GDAL python tools and batch files
In-Reply-To: <CAHNf2YSi1c6vTjYq4LOONYL8gnpZ7+aTBnh6HLbwQBP-PYDJXw@mail.gmail.com>
References: <CAA-xNcXFWkR+hByyJixmePzAOfNfbcNSoM=EZsuGqrTrHymWWQ@mail.gmail.com>
	<CAHNf2YSi1c6vTjYq4LOONYL8gnpZ7+aTBnh6HLbwQBP-PYDJXw@mail.gmail.com>
Message-ID: <CAA-xNcVxu9uXGhyiTPAP1=1k4DnUhb4wSHPVQQ=StGzXHK+n7A@mail.gmail.com>

Thanks Paul, that did it. I guess it's a python/batch file interaction
thing.

Cheers,
Jonathan



On 2 December 2013 11:51, Paul Meems <p.meems at topx-group.nl> wrote:

> I think you should add 'call' at the begining of the command:
>
> http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/call.mspx?mfr=true
>
>
>
> Met vriendelijke groet,
>
>
> Paul Meems
>
>
> *Paul Meems*Senior GIS consultant
>
> 06-53989481
> TopX Geo-ICT <http://www.topx-geo-ict.nl>
>
>  <http://topx-group.nl/topx-geo-ict>Wij bieden ondersteuning
>
> voor MapWindow GIS <http://www.mapwindow.org/>
>
>
>
> 2013/12/2 Jonathan Moules <jonathanmoules at warwickshire.gov.uk>
>
>>  Hi List,
>> I'm trying to batch (Windows) a fairly simple task - mosaic and then
>> pyramid some rasters.
>>
>> While testing, I've simplified my batch file down to two lines:
>>
>> gdal_merge -o %THIS_DIR%.tif -of GTiff -co TILED=YES -co BIGTIFF=YES -co
>>> COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512
>>> --optfile tiff_list.txt -co
>>> PHOTOMETRIC=YCBCR
>>>
>>
>>
>>> pause
>>
>>
>>
>> The problem is that once gdal_merge has finished processing, rather than
>> continue onward the batch file ends, so in this case the "pause" is never
>> triggered. Doesn't matter what comes next, the batch ends as soon as the
>> merge is complete.
>>
>> However the same simple batch file but with a gdaladdo command instead
>> works fine. Is this a python thing?
>>
>> Anyone know why that is? Should it be doing this? Using the OSGeo GDAL
>> 1.10.1 build, but it happened with FWTools too (thought it was a FWTools
>> bug at the time).
>>
>> Tested on Windows 7 and Server 2008.
>>
>> Cheers,
>> Jonathan
>>
>> This transmission is intended for the named addressee(s) only and may
>> contain sensitive or protectively marked material up to RESTRICTED and
>> should be handled accordingly. Unless you are the named addressee (or
>> authorised to receive it for the addressee) you may not copy or use it, or
>> disclose it to anyone else. If you have received this transmission in error
>> please notify the sender immediately. All email traffic sent to or from us,
>> including without limitation all GCSX traffic, may be subject to recording
>> and/or monitoring in accordance with relevant legislation.
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/2c0fc39a/attachment-0001.html>

From etiennebr at gmail.com  Mon Dec  2 06:22:07 2013
From: etiennebr at gmail.com (Etienne B. Racine)
Date: Mon, 2 Dec 2013 09:22:07 -0500
Subject: [gdal-dev] how to aggregate an image to a lower resolution
 using gdal (gdalwarp?)
In-Reply-To: <CE427279.7C14%jan.verbesselt@wur.nl>
References: <CE427279.7C14%jan.verbesselt@wur.nl>
Message-ID: <CALjAYt71wViURsnvtvytAX1HkfmDEO2ndsv=w-apKfFGJEXimQ@mail.gmail.com>

I've tried to dig this a bit. I couldn't understand the logic behind gdal
aggregation (or downsampling). I've simplified your example using a smaller
raster and deterministic values. Maybe someone could enlighten us by
looking at the aggregation values ? Note that the lower right cells values
were identical in all dimensions I've tried (about 4 - 10).

The example is run on GDAL 1.11dev, released 2013/04/13

Thanks,
Etienne

# in R:
require(raster)
filei <- '10by10.tif'
fileo <- '5by5.tif'

dm = 4
r <- raster(matrix(1:(dm^2), dm, dm))

writeRaster(r, filename=filei, overwrite = TRUE)

## aggregate using R aggregate function using the mean
r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)

file.remove(fileo)
cmd <- paste("gdalwarp -r average -tr", paste(res(r1), collapse = " "),
filei, fileo)
system(cmd)
r2 <- raster(fileo)

>as.matrix(r)
     [,1] [,2] [,3] [,4]
[1,]    1    5    9   13
[2,]    2    6   10   14
[3,]    3    7   11   15
[4,]    4    8   12   16
> lapply(list(r1, r2, r2-r1), as.matrix)
[[1]]
     [,1] [,2]
[1,]  3.5 11.5
[2,]  5.5 13.5

[[2]]
     [,1] [,2]
[1,]  6.0 12.0
[2,]  7.5 13.5

[[3]]
     [,1] [,2]
[1,]  2.5  0.5
[2,]  2.0  0.0


2013/8/27 Verbesselt, Jan <jan.verbesselt at wur.nl>

> Hi all,
>
> I have been testing gdalwarp to aggregate (using -r average) an image.
> In order to better understand what is happening I have created a
> reproducible example within an R environment and compared it with the
> aggregate function of the R raster package (see below). There are some
> differences between the gdalwarp raster (r2) and the aggregated raster
> (r1).
>
> How is the gdalwarp -r average working? Which pixels are selected for
> averaging (e.g.the corner pixels, center pixels, or all within the
> aggregation window)?
>
> If there is a gdal aggregate option to average pixels comparable to the
> aggregate function in the R raster package, it would be great as that
> would potentially faster, and you could also reproject and aggregate at
> once.
>
> Thanks!
> Jan
>
> http://bfast.r-forge.r-project.org
> http://goo.gl/1mBC5F
>
>
> ## R script
> require(raster)
> filei <- '10by10.tif'
> fileo <- '5by5.tif'
>
> set.seed(123)
> r <- raster(ncols=36, nrows=18)
> r <- setValues(r, round(runif(ncell(r))*10))
> r
> plot(r)
> writeRaster(r, filename=filei, overwrite = TRUE)
>
> ## aggregate using R aggregate function using the mean
> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>
> cmd <- paste("gdalwarp -r average -tr 20 20 -te -180 -90 180 90 ",
>              filei, " ", fileo, sep = "")
> system(cmd)
> r2 <- raster(fileo)
>
> ## compare
> plot(r1)
> plot(r2)
> r1
> r2
> getValues(r1)
> getValues(r2)
>
> ##
> plot(r1-r2)
> sessionInfo()
>
> R> sessionInfo()
> R version 3.0.1 (2013-05-16)
> Platform: x86_64-pc-linux-gnu (64-bit)
>
> locale:
>  [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C         LC_TIME=C
> LC_COLLATE=C         LC_MONETARY=C
>  [6] LC_MESSAGES=C        LC_PAPER=C           LC_NAME=C
> LC_ADDRESS=C         LC_TELEPHONE=C
> [11] LC_MEASUREMENT=C     LC_IDENTIFICATION=C
>
> attached base packages:
> [1] stats     graphics  grDevices utils     datasets  methods   base
>
> other attached packages:
> [1] rgdal_0.8-10  raster_2.1-49 sp_1.0-11
>
> loaded via a namespace (and not attached):
> [1] grid_3.0.1      lattice_0.20-23 tools_3.0.1
>
>
> rgdal: version: 0.8-10, (SVN revision 478)
> Geospatial Data Abstraction Library extensions to R successfully loaded
> Loaded GDAL runtime: GDAL 1.10.0, released 2013/04/24
> Path to GDAL shared files: /usr/share/gdal/1.10
> Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
> Path to PROJ.4 shared files: (autodetected)
>
>
>
>
>
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/3e346dd4/attachment.html>

From etourigny.dev at gmail.com  Mon Dec  2 07:41:38 2013
From: etourigny.dev at gmail.com (Etienne Tourigny)
Date: Mon, 2 Dec 2013 13:41:38 -0200
Subject: [gdal-dev] how to aggregate an image to a lower resolution
 using gdal (gdalwarp?)
In-Reply-To: <CALjAYt71wViURsnvtvytAX1HkfmDEO2ndsv=w-apKfFGJEXimQ@mail.gmail.com>
References: <CE427279.7C14%jan.verbesselt@wur.nl>
	<CALjAYt71wViURsnvtvytAX1HkfmDEO2ndsv=w-apKfFGJEXimQ@mail.gmail.com>
Message-ID: <CA+TxYvNvx+S+P6Hu_xQ8uMVhV5tEsHOvvcAOpwwPNxzUAPKD3w@mail.gmail.com>

The "average" resampling mode of gdalwarp does "average resampling,
computes the average of all non-NODATA contributing pixels".

It was meant to compute the average of all the pixels in the "aggregation
window". However, it may have issues in the corners.

I am the author of the average and mode algorithms, and I basically copied
the aggregation logic from the other algorithms (i.e. which pixels are
selected for the aggregation), so there may be something wrong in the logic.

Certainly, looking at this simple example shows that something is wrong.

I tested average and mode resampling with a fairly large dataset and did
not find these problems.

Can you create a new bug in the tracker and upload the scripts and data
used?  I don't have much (any) time to work on this but would be happy to
apply a working patch.

Cheers, Etienne


On Mon, Dec 2, 2013 at 12:22 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:

> I've tried to dig this a bit. I couldn't understand the logic behind gdal
> aggregation (or downsampling). I've simplified your example using a smaller
> raster and deterministic values. Maybe someone could enlighten us by
> looking at the aggregation values ? Note that the lower right cells values
> were identical in all dimensions I've tried (about 4 - 10).
>
> The example is run on GDAL 1.11dev, released 2013/04/13
>
> Thanks,
> Etienne
>
> # in R:
>
> require(raster)
> filei <- '10by10.tif'
> fileo <- '5by5.tif'
>
> dm = 4
> r <- raster(matrix(1:(dm^2), dm, dm))
>
>
> writeRaster(r, filename=filei, overwrite = TRUE)
>
> ## aggregate using R aggregate function using the mean
> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>
> file.remove(fileo)
> cmd <- paste("gdalwarp -r average -tr", paste(res(r1), collapse = " "),
> filei, fileo)
> system(cmd)
> r2 <- raster(fileo)
>
> >as.matrix(r)
>      [,1] [,2] [,3] [,4]
> [1,]    1    5    9   13
> [2,]    2    6   10   14
> [3,]    3    7   11   15
> [4,]    4    8   12   16
> > lapply(list(r1, r2, r2-r1), as.matrix)
> [[1]]
>      [,1] [,2]
> [1,]  3.5 11.5
> [2,]  5.5 13.5
>
> [[2]]
>      [,1] [,2]
> [1,]  6.0 12.0
> [2,]  7.5 13.5
>
> [[3]]
>      [,1] [,2]
> [1,]  2.5  0.5
> [2,]  2.0  0.0
>
>
> 2013/8/27 Verbesselt, Jan <jan.verbesselt at wur.nl>
>
> Hi all,
>>
>> I have been testing gdalwarp to aggregate (using -r average) an image.
>> In order to better understand what is happening I have created a
>> reproducible example within an R environment and compared it with the
>> aggregate function of the R raster package (see below). There are some
>> differences between the gdalwarp raster (r2) and the aggregated raster
>> (r1).
>>
>> How is the gdalwarp -r average working? Which pixels are selected for
>> averaging (e.g.the corner pixels, center pixels, or all within the
>> aggregation window)?
>>
>> If there is a gdal aggregate option to average pixels comparable to the
>> aggregate function in the R raster package, it would be great as that
>> would potentially faster, and you could also reproject and aggregate at
>> once.
>>
>> Thanks!
>> Jan
>>
>> http://bfast.r-forge.r-project.org
>> http://goo.gl/1mBC5F
>>
>>
>> ## R script
>> require(raster)
>> filei <- '10by10.tif'
>> fileo <- '5by5.tif'
>>
>> set.seed(123)
>> r <- raster(ncols=36, nrows=18)
>> r <- setValues(r, round(runif(ncell(r))*10))
>> r
>> plot(r)
>> writeRaster(r, filename=filei, overwrite = TRUE)
>>
>> ## aggregate using R aggregate function using the mean
>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>
>> cmd <- paste("gdalwarp -r average -tr 20 20 -te -180 -90 180 90 ",
>>              filei, " ", fileo, sep = "")
>> system(cmd)
>> r2 <- raster(fileo)
>>
>> ## compare
>> plot(r1)
>> plot(r2)
>> r1
>> r2
>> getValues(r1)
>> getValues(r2)
>>
>> ##
>> plot(r1-r2)
>> sessionInfo()
>>
>> R> sessionInfo()
>> R version 3.0.1 (2013-05-16)
>> Platform: x86_64-pc-linux-gnu (64-bit)
>>
>> locale:
>>  [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C         LC_TIME=C
>> LC_COLLATE=C         LC_MONETARY=C
>>  [6] LC_MESSAGES=C        LC_PAPER=C           LC_NAME=C
>> LC_ADDRESS=C         LC_TELEPHONE=C
>> [11] LC_MEASUREMENT=C     LC_IDENTIFICATION=C
>>
>> attached base packages:
>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>
>> other attached packages:
>> [1] rgdal_0.8-10  raster_2.1-49 sp_1.0-11
>>
>> loaded via a namespace (and not attached):
>> [1] grid_3.0.1      lattice_0.20-23 tools_3.0.1
>>
>>
>> rgdal: version: 0.8-10, (SVN revision 478)
>> Geospatial Data Abstraction Library extensions to R successfully loaded
>> Loaded GDAL runtime: GDAL 1.10.0, released 2013/04/24
>> Path to GDAL shared files: /usr/share/gdal/1.10
>> Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>> Path to PROJ.4 shared files: (autodetected)
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/7197a164/attachment.html>

From etourigny.dev at gmail.com  Mon Dec  2 07:43:01 2013
From: etourigny.dev at gmail.com (Etienne Tourigny)
Date: Mon, 2 Dec 2013 13:43:01 -0200
Subject: [gdal-dev] Using GDALWARP to crop to extremeties of source data
In-Reply-To: <1385481019193-5091315.post@n6.nabble.com>
References: <1385481019193-5091315.post@n6.nabble.com>
Message-ID: <CA+TxYvPNrE8aLx_RDnkS82Kd3+r47aK0fteZmG=vY84opQ=f=w@mail.gmail.com>

You can use gdal_translte with -projwin or -srcwin parameter


On Tue, Nov 26, 2013 at 1:50 PM, JSz <james at agritech.co.uk> wrote:

> I am using GDAL_grid to create a raster image using the command :
>
> *gdal_grid -a invdist:power=2:smoothing=0.001:radius1=0.0005:radius2=0.0005
> -of GTiff -zField a_field -ot Float64 -l data data_source.vrt results.tiff*
>
> which obviously extrapolates the data beyond the extremities of my data, I
> can cut the required data with a shape file by using :
>
> *gdalwarp -cutline <<src_shape>> -crop_to_cutline -srcnodata 0 source.tiff
> output.tiff*
>
> However is there a way to cut to the extremities of my original data
> without
> the need for the shape file?
>
> Many thanks
>
> JSz
>
>
>
>
>
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/Using-GDALWARP-to-crop-to-extremeties-of-source-data-tp5091315.html
> Sent from the GDAL - Dev mailing list archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/66249863/attachment-0001.html>

From jonathanmoules at warwickshire.gov.uk  Mon Dec  2 08:17:11 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Mon, 2 Dec 2013 16:17:11 +0000
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
Message-ID: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>

Hi List,
I've just tried the following:

call gdalwarp -of GTiff *-wm 13000* -co TILED=YES -co BIGTIFF=YES -co
COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
PHOTOMETRIC=YCBCR SP1937.tif SP1938.tif SP1939.tif 1.tif

The documentation says:

> -wm memory_in_mb:
> Set the amount of memory (in megabytes) that the warp API is allowed to
> use for caching.


So by my reading I'm allocating a bit less than 13GB (of my 16,730,672kB
RAM) to gdalwarp.

Imagine my surprise when I get this error:
 ERROR 5: GDALWarpOptions.Validate()
  dfWarpMemoryLimit=13000 is unreasonably small.

After more testing, anything with 4 digits works fine (including 9999), but
anything with five digits (i.e. 10,000) gives me that error.

Is this a bug?

 (GDAL 1.10.1)

Cheers,
Jonathan

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/06f7ef8e/attachment.html>

From even.rouault at mines-paris.org  Mon Dec  2 08:39:50 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 2 Dec 2013 17:39:50 +0100
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
Message-ID: <201312021739.50370.even.rouault@mines-paris.org>

Le lundi 02 d?cembre 2013 17:17:11, Jonathan Moules a ?crit :
> Hi List,
> I've just tried the following:
> 
> call gdalwarp -of GTiff *-wm 13000* -co TILED=YES -co BIGTIFF=YES -co
> COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
> PHOTOMETRIC=YCBCR SP1937.tif SP1938.tif SP1939.tif 1.tif
> 
> The documentation says:
> > -wm memory_in_mb:
> > Set the amount of memory (in megabytes) that the warp API is allowed to
> > use for caching.
> 
> So by my reading I'm allocating a bit less than 13GB (of my 16,730,672kB
> RAM) to gdalwarp.
> 
> Imagine my surprise when I get this error:
>  ERROR 5: GDALWarpOptions.Validate()
>   dfWarpMemoryLimit=13000 is unreasonably small.
> 
> After more testing, anything with 4 digits works fine (including 9999), but
> anything with five digits (i.e. 10,000) gives me that error.
> 
> Is this a bug?

Rather a undocumented attempt to correct wrong user supplied parameter.

In gdalwarp utility, if the value of -wm is < 10000, then it is considered as 
megabytes ( and multiplied by 1024*1024 for GDAL internals), otherwise it is 
considered as bytes, and passed unmodified to GDAL internals. (the last change 
to that logic was in http://trac.osgeo.org/gdal/changeset/10817 , 7 years ago, 
where the threshold was modified from 4000 to 10000, so at that time 10 GB was 
really enormous !)
In gdal warper code, there is a test that checks if the memory limit variable 
(that must be in bytes now) is at least 100000, and bail out if it is not the 
case.
So currently you could specify the size as bytes : "-wm 16730672000".

I'm wondering if we should not remove this GDAL-isense logic in gdalwarp 
utility and just implement documented behaviour... Or maybe document the 
current behaviour.

Note: unless your warping process implies considerable image shape distortion 
(which is unlikely to be the case here since I don't see any -s_srs or -t_srs 
flag), you don't need such a huge value. It could decrease performance 
actually. The only case where it might help is if your source images are not 
tiled.

> 
>  (GDAL 1.10.1)
> 
> Cheers,
> Jonathan

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From jonathanmoules at warwickshire.gov.uk  Mon Dec  2 09:49:42 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Mon, 2 Dec 2013 17:49:42 +0000
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <CAA-xNcVcoKYOpMeT-2Cgp7tq4mth8n4aFpg3EoCSJ2nDQZAc5w@mail.gmail.com>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<201312021739.50370.even.rouault@mines-paris.org>
	<CAA-xNcVcoKYOpMeT-2Cgp7tq4mth8n4aFpg3EoCSJ2nDQZAc5w@mail.gmail.com>
Message-ID: <CAA-xNcVD73n9VgjYTC_Wjq26KpndewmDdBgvRaTMX=t9n_f0ow@mail.gmail.com>

Hi Even,
A further thought while we're on the issue of limits, it appears that gdal
(both gdal_translate and gdalwarp) have an internal limit of 10GB when
they're auto-allocating RAM.

Assuming this is the case and it's not just coincidence, it might it be
worth updating them to allow more use if appropriate (it seems to be
hitting this for a large-ecw to geotiff convesion)? For instance my work
desktop has 16GB and the server I'm also doing some processing on has 36GB.

Cheers,
Jonathan

(also I failed to reply-all to my previous reply; so included below)


On 2 December 2013 17:25, Jonathan Moules <
jonathanmoules at warwickshire.gov.uk> wrote:

> Hi Even,
> Thanks for the detailed reply. It seems in the end that I can use a
> combination of gdalbuildvrt and gdal_translate to get the same results
> without having to bother with manual memory management. The output is the
> same size and the quality is identical.
>
> From a user perspective, I would suggest removing this behaviour (though
> documenting would work too). You could add a gdal warning if they set it
> above 10GB with a similar caveat to the "Note" in your email.
> Of course, then in another 7 years you'll be asked why the warning is
> triggering at the "low" 10GB!
>
> Thanks again,
> Jonathan
>
>
> On 2 December 2013 16:39, Even Rouault <even.rouault at mines-paris.org>wrote:
>
>> Le lundi 02 d?cembre 2013 17:17:11, Jonathan Moules a ?crit :
>> > Hi List,
>> > I've just tried the following:
>> >
>> > call gdalwarp -of GTiff *-wm 13000* -co TILED=YES -co BIGTIFF=YES -co
>> > COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512
>> -co
>> > PHOTOMETRIC=YCBCR SP1937.tif SP1938.tif SP1939.tif 1.tif
>> >
>> > The documentation says:
>> > > -wm memory_in_mb:
>> > > Set the amount of memory (in megabytes) that the warp API is allowed
>> to
>> > > use for caching.
>> >
>> > So by my reading I'm allocating a bit less than 13GB (of my 16,730,672kB
>> > RAM) to gdalwarp.
>> >
>> > Imagine my surprise when I get this error:
>> >  ERROR 5: GDALWarpOptions.Validate()
>> >   dfWarpMemoryLimit=13000 is unreasonably small.
>> >
>> > After more testing, anything with 4 digits works fine (including 9999),
>> but
>> > anything with five digits (i.e. 10,000) gives me that error.
>> >
>> > Is this a bug?
>>
>> Rather a undocumented attempt to correct wrong user supplied parameter.
>>
>> In gdalwarp utility, if the value of -wm is < 10000, then it is
>> considered as
>> megabytes ( and multiplied by 1024*1024 for GDAL internals), otherwise it
>> is
>> considered as bytes, and passed unmodified to GDAL internals. (the last
>> change
>> to that logic was in http://trac.osgeo.org/gdal/changeset/10817 , 7
>> years ago,
>> where the threshold was modified from 4000 to 10000, so at that time 10
>> GB was
>> really enormous !)
>> In gdal warper code, there is a test that checks if the memory limit
>> variable
>> (that must be in bytes now) is at least 100000, and bail out if it is not
>> the
>> case.
>> So currently you could specify the size as bytes : "-wm 16730672000".
>>
>> I'm wondering if we should not remove this GDAL-isense logic in gdalwarp
>> utility and just implement documented behaviour... Or maybe document the
>> current behaviour.
>>
>> Note: unless your warping process implies considerable image shape
>> distortion
>> (which is unlikely to be the case here since I don't see any -s_srs or
>> -t_srs
>> flag), you don't need such a huge value. It could decrease performance
>> actually. The only case where it might help is if your source images are
>> not
>> tiled.
>>
>> >
>> >  (GDAL 1.10.1)
>> >
>> > Cheers,
>> > Jonathan
>>
>> --
>> Geospatial professional services
>> http://even.rouault.free.fr/services.html
>>
>
>

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/c56da72b/attachment.html>

From even.rouault at mines-paris.org  Mon Dec  2 09:57:50 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 2 Dec 2013 18:57:50 +0100
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <CAA-xNcVD73n9VgjYTC_Wjq26KpndewmDdBgvRaTMX=t9n_f0ow@mail.gmail.com>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<CAA-xNcVcoKYOpMeT-2Cgp7tq4mth8n4aFpg3EoCSJ2nDQZAc5w@mail.gmail.com>
	<CAA-xNcVD73n9VgjYTC_Wjq26KpndewmDdBgvRaTMX=t9n_f0ow@mail.gmail.com>
Message-ID: <201312021857.50819.even.rouault@mines-paris.org>

Le lundi 02 d?cembre 2013 18:49:42, Jonathan Moules a ?crit :
> Hi Even,
> A further thought while we're on the issue of limits, it appears that gdal
> (both gdal_translate and gdalwarp) have an internal limit of 10GB when
> they're auto-allocating RAM.

I'm not aware of such a limitation in the code. It might be that your OS 
cannot allocate that much memory in one single malloc() if it is the 
allocation pattern involved here, but I'm just guessing. What commands did you 
exactly tried to trigger this ?

> 
> Assuming this is the case and it's not just coincidence, it might it be
> worth updating them to allow more use if appropriate (it seems to be
> hitting this for a large-ecw to geotiff convesion)? 

The ECW SDK itself has its own RAM management. See 
http://www.gdal.org/frmt_ecw.html

> For instance my work
> desktop has 16GB and the server I'm also doing some processing on has 36GB.
> 
> Cheers,
> Jonathan
> 
> (also I failed to reply-all to my previous reply; so included below)
> 
> 
> On 2 December 2013 17:25, Jonathan Moules <
> 
> jonathanmoules at warwickshire.gov.uk> wrote:
> > Hi Even,
> > Thanks for the detailed reply. It seems in the end that I can use a
> > combination of gdalbuildvrt and gdal_translate to get the same results
> > without having to bother with manual memory management. The output is the
> > same size and the quality is identical.
> > 
> > From a user perspective, I would suggest removing this behaviour (though
> > documenting would work too). You could add a gdal warning if they set it
> > above 10GB with a similar caveat to the "Note" in your email.
> > Of course, then in another 7 years you'll be asked why the warning is
> > triggering at the "low" 10GB!
> > 
> > Thanks again,
> > Jonathan
> > 
> > On 2 December 2013 16:39, Even Rouault <even.rouault at mines-
paris.org>wrote:
> >> Le lundi 02 d?cembre 2013 17:17:11, Jonathan Moules a ?crit :
> >> > Hi List,
> >> > I've just tried the following:
> >> > 
> >> > call gdalwarp -of GTiff *-wm 13000* -co TILED=YES -co BIGTIFF=YES -co
> >> > COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co
> >> > BLOCKYSIZE=512
> >> 
> >> -co
> >> 
> >> > PHOTOMETRIC=YCBCR SP1937.tif SP1938.tif SP1939.tif 1.tif
> >> > 
> >> > The documentation says:
> >> > > -wm memory_in_mb:
> >> > > Set the amount of memory (in megabytes) that the warp API is allowed
> >> 
> >> to
> >> 
> >> > > use for caching.
> >> > 
> >> > So by my reading I'm allocating a bit less than 13GB (of my
> >> > 16,730,672kB RAM) to gdalwarp.
> >> > 
> >> > Imagine my surprise when I get this error:
> >> >  ERROR 5: GDALWarpOptions.Validate()
> >> >  
> >> >   dfWarpMemoryLimit=13000 is unreasonably small.
> >> > 
> >> > After more testing, anything with 4 digits works fine (including
> >> > 9999),
> >> 
> >> but
> >> 
> >> > anything with five digits (i.e. 10,000) gives me that error.
> >> > 
> >> > Is this a bug?
> >> 
> >> Rather a undocumented attempt to correct wrong user supplied parameter.
> >> 
> >> In gdalwarp utility, if the value of -wm is < 10000, then it is
> >> considered as
> >> megabytes ( and multiplied by 1024*1024 for GDAL internals), otherwise
> >> it is
> >> considered as bytes, and passed unmodified to GDAL internals. (the last
> >> change
> >> to that logic was in http://trac.osgeo.org/gdal/changeset/10817 , 7
> >> years ago,
> >> where the threshold was modified from 4000 to 10000, so at that time 10
> >> GB was
> >> really enormous !)
> >> In gdal warper code, there is a test that checks if the memory limit
> >> variable
> >> (that must be in bytes now) is at least 100000, and bail out if it is
> >> not the
> >> case.
> >> So currently you could specify the size as bytes : "-wm 16730672000".
> >> 
> >> I'm wondering if we should not remove this GDAL-isense logic in gdalwarp
> >> utility and just implement documented behaviour... Or maybe document the
> >> current behaviour.
> >> 
> >> Note: unless your warping process implies considerable image shape
> >> distortion
> >> (which is unlikely to be the case here since I don't see any -s_srs or
> >> -t_srs
> >> flag), you don't need such a huge value. It could decrease performance
> >> actually. The only case where it might help is if your source images are
> >> not
> >> tiled.
> >> 
> >> >  (GDAL 1.10.1)
> >> > 
> >> > Cheers,
> >> > Jonathan
> >> 
> >> --
> >> Geospatial professional services
> >> http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From jonathanmoules at warwickshire.gov.uk  Mon Dec  2 10:12:07 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Mon, 2 Dec 2013 18:12:07 +0000
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <201312021857.50819.even.rouault@mines-paris.org>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<CAA-xNcVcoKYOpMeT-2Cgp7tq4mth8n4aFpg3EoCSJ2nDQZAc5w@mail.gmail.com>
	<CAA-xNcVD73n9VgjYTC_Wjq26KpndewmDdBgvRaTMX=t9n_f0ow@mail.gmail.com>
	<201312021857.50819.even.rouault@mines-paris.org>
Message-ID: <CAA-xNcUUd_9h=pRsmothu6d8k7npiVB9_2wD7dX_9fT8gH=J-Q@mail.gmail.com>

Hi Even,
To hit the 10GB limit I'm using (Windows Server 2008):

gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co COMPRESS=JPEG
-co JPEG_QUALITY=60 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
PHOTOMETRIC=YCBCR 2000.vrt 2000.tif

I tried adding:  --config GDAL_CACHEMAX 27000000000 but then it'd just
crash with out-of-memory (it wouldn't actually stop at 27GB; so I guess
that works differently again).

====

I was also using this (which is a simple tif to tif) and it too used 10GB
before stopping itself (this was Windows 7):
call gdal_merge -o output.tif -of GTiff -co TILED=YES -co BIGTIFF=YES -co
COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512
--optfile tiff_list.txt -co PHOTOMETRIC=YCBCR

It may just have been co-incident.

I think I'll just let it do it automatically and hope for the best.

Jonathan


On 2 December 2013 17:57, Even Rouault <even.rouault at mines-paris.org> wrote:

> Le lundi 02 d?cembre 2013 18:49:42, Jonathan Moules a ?crit :
> > Hi Even,
> > A further thought while we're on the issue of limits, it appears that
> gdal
> > (both gdal_translate and gdalwarp) have an internal limit of 10GB when
> > they're auto-allocating RAM.
>
> I'm not aware of such a limitation in the code. It might be that your OS
> cannot allocate that much memory in one single malloc() if it is the
> allocation pattern involved here, but I'm just guessing. What commands did
> you
> exactly tried to trigger this ?
>
> >
> > Assuming this is the case and it's not just coincidence, it might it be
> > worth updating them to allow more use if appropriate (it seems to be
> > hitting this for a large-ecw to geotiff convesion)?
>
> The ECW SDK itself has its own RAM management. See
> http://www.gdal.org/frmt_ecw.html
>
> > For instance my work
> > desktop has 16GB and the server I'm also doing some processing on has
> 36GB.
> >
> > Cheers,
> > Jonathan
> >
> > (also I failed to reply-all to my previous reply; so included below)
> >
> >
> > On 2 December 2013 17:25, Jonathan Moules <
> >
> > jonathanmoules at warwickshire.gov.uk> wrote:
> > > Hi Even,
> > > Thanks for the detailed reply. It seems in the end that I can use a
> > > combination of gdalbuildvrt and gdal_translate to get the same results
> > > without having to bother with manual memory management. The output is
> the
> > > same size and the quality is identical.
> > >
> > > From a user perspective, I would suggest removing this behaviour
> (though
> > > documenting would work too). You could add a gdal warning if they set
> it
> > > above 10GB with a similar caveat to the "Note" in your email.
> > > Of course, then in another 7 years you'll be asked why the warning is
> > > triggering at the "low" 10GB!
> > >
> > > Thanks again,
> > > Jonathan
> > >
> > > On 2 December 2013 16:39, Even Rouault <even.rouault at mines-
> paris.org>wrote:
> > >> Le lundi 02 d?cembre 2013 17:17:11, Jonathan Moules a ?crit :
> > >> > Hi List,
> > >> > I've just tried the following:
> > >> >
> > >> > call gdalwarp -of GTiff *-wm 13000* -co TILED=YES -co BIGTIFF=YES
> -co
> > >> > COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co
> > >> > BLOCKYSIZE=512
> > >>
> > >> -co
> > >>
> > >> > PHOTOMETRIC=YCBCR SP1937.tif SP1938.tif SP1939.tif 1.tif
> > >> >
> > >> > The documentation says:
> > >> > > -wm memory_in_mb:
> > >> > > Set the amount of memory (in megabytes) that the warp API is
> allowed
> > >>
> > >> to
> > >>
> > >> > > use for caching.
> > >> >
> > >> > So by my reading I'm allocating a bit less than 13GB (of my
> > >> > 16,730,672kB RAM) to gdalwarp.
> > >> >
> > >> > Imagine my surprise when I get this error:
> > >> >  ERROR 5: GDALWarpOptions.Validate()
> > >> >
> > >> >   dfWarpMemoryLimit=13000 is unreasonably small.
> > >> >
> > >> > After more testing, anything with 4 digits works fine (including
> > >> > 9999),
> > >>
> > >> but
> > >>
> > >> > anything with five digits (i.e. 10,000) gives me that error.
> > >> >
> > >> > Is this a bug?
> > >>
> > >> Rather a undocumented attempt to correct wrong user supplied
> parameter.
> > >>
> > >> In gdalwarp utility, if the value of -wm is < 10000, then it is
> > >> considered as
> > >> megabytes ( and multiplied by 1024*1024 for GDAL internals), otherwise
> > >> it is
> > >> considered as bytes, and passed unmodified to GDAL internals. (the
> last
> > >> change
> > >> to that logic was in http://trac.osgeo.org/gdal/changeset/10817 , 7
> > >> years ago,
> > >> where the threshold was modified from 4000 to 10000, so at that time
> 10
> > >> GB was
> > >> really enormous !)
> > >> In gdal warper code, there is a test that checks if the memory limit
> > >> variable
> > >> (that must be in bytes now) is at least 100000, and bail out if it is
> > >> not the
> > >> case.
> > >> So currently you could specify the size as bytes : "-wm 16730672000".
> > >>
> > >> I'm wondering if we should not remove this GDAL-isense logic in
> gdalwarp
> > >> utility and just implement documented behaviour... Or maybe document
> the
> > >> current behaviour.
> > >>
> > >> Note: unless your warping process implies considerable image shape
> > >> distortion
> > >> (which is unlikely to be the case here since I don't see any -s_srs or
> > >> -t_srs
> > >> flag), you don't need such a huge value. It could decrease performance
> > >> actually. The only case where it might help is if your source images
> are
> > >> not
> > >> tiled.
> > >>
> > >> >  (GDAL 1.10.1)
> > >> >
> > >> > Cheers,
> > >> > Jonathan
> > >>
> > >> --
> > >> Geospatial professional services
> > >> http://even.rouault.free.fr/services.html
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html
>

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/27d8196b/attachment-0001.html>

From even.rouault at mines-paris.org  Mon Dec  2 10:32:29 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 2 Dec 2013 19:32:29 +0100
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <CAA-xNcUUd_9h=pRsmothu6d8k7npiVB9_2wD7dX_9fT8gH=J-Q@mail.gmail.com>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<201312021857.50819.even.rouault@mines-paris.org>
	<CAA-xNcUUd_9h=pRsmothu6d8k7npiVB9_2wD7dX_9fT8gH=J-Q@mail.gmail.com>
Message-ID: <201312021932.29315.even.rouault@mines-paris.org>

Le lundi 02 d?cembre 2013 19:12:07, Jonathan Moules a ?crit :
> Hi Even,
> To hit the 10GB limit I'm using (Windows Server 2008):
> 
> gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co COMPRESS=JPEG
> -co JPEG_QUALITY=60 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
> PHOTOMETRIC=YCBCR 2000.vrt 2000.tif
> 
> I tried adding:  --config GDAL_CACHEMAX 27000000000 but then it'd just
> crash with out-of-memory (it wouldn't actually stop at 27GB; so I guess
> that works differently again).

Crash (Windows dialog) or "clean" exit with a GDAL error message ?
What are the files (TIFF, ECW, ...) in the VRT ?
I don't see anything wrong, and have not OS and hardware specs to reproduce 
that.

> 
> ====
> 
> I was also using this (which is a simple tif to tif) and it too used 10GB
> before stopping itself (this was Windows 7):
> call gdal_merge -o output.tif -of GTiff -co TILED=YES -co BIGTIFF=YES -co
> COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512
> --optfile tiff_list.txt -co PHOTOMETRIC=YCBCR
> 
> It may just have been co-incident.
> 
> I think I'll just let it do it automatically and hope for the best.

Yes, that's perhaps the best. Increasing cache size is not always the best 
thing to do. You can probably push it to 1 or 2 GB. Above, it is dubious that 
it will help.

> 
> Jonathan
> 
> On 2 December 2013 17:57, Even Rouault <even.rouault at mines-paris.org> wrote:
> > Le lundi 02 d?cembre 2013 18:49:42, Jonathan Moules a ?crit :
> > > Hi Even,
> > > A further thought while we're on the issue of limits, it appears that
> > 
> > gdal
> > 
> > > (both gdal_translate and gdalwarp) have an internal limit of 10GB when
> > > they're auto-allocating RAM.
> > 
> > I'm not aware of such a limitation in the code. It might be that your OS
> > cannot allocate that much memory in one single malloc() if it is the
> > allocation pattern involved here, but I'm just guessing. What commands
> > did you
> > exactly tried to trigger this ?
> > 
> > > Assuming this is the case and it's not just coincidence, it might it be
> > > worth updating them to allow more use if appropriate (it seems to be
> > > hitting this for a large-ecw to geotiff convesion)?
> > 
> > The ECW SDK itself has its own RAM management. See
> > http://www.gdal.org/frmt_ecw.html
> > 
> > > For instance my work
> > > desktop has 16GB and the server I'm also doing some processing on has
> > 
> > 36GB.
> > 
> > > Cheers,
> > > Jonathan
> > > 
> > > (also I failed to reply-all to my previous reply; so included below)
> > > 
> > > 
> > > On 2 December 2013 17:25, Jonathan Moules <
> > > 
> > > jonathanmoules at warwickshire.gov.uk> wrote:
> > > > Hi Even,
> > > > Thanks for the detailed reply. It seems in the end that I can use a
> > > > combination of gdalbuildvrt and gdal_translate to get the same
> > > > results without having to bother with manual memory management. The
> > > > output is
> > 
> > the
> > 
> > > > same size and the quality is identical.
> > > > 
> > > > From a user perspective, I would suggest removing this behaviour
> > 
> > (though
> > 
> > > > documenting would work too). You could add a gdal warning if they set
> > 
> > it
> > 
> > > > above 10GB with a similar caveat to the "Note" in your email.
> > > > Of course, then in another 7 years you'll be asked why the warning is
> > > > triggering at the "low" 10GB!
> > > > 
> > > > Thanks again,
> > > > Jonathan
> > > > 
> > > > On 2 December 2013 16:39, Even Rouault <even.rouault at mines-
> > 
> > paris.org>wrote:
> > > >> Le lundi 02 d?cembre 2013 17:17:11, Jonathan Moules a ?crit :
> > > >> > Hi List,
> > > >> > I've just tried the following:
> > > >> > 
> > > >> > call gdalwarp -of GTiff *-wm 13000* -co TILED=YES -co BIGTIFF=YES
> > 
> > -co
> > 
> > > >> > COMPRESS=JPEG -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co
> > > >> > BLOCKYSIZE=512
> > > >> 
> > > >> -co
> > > >> 
> > > >> > PHOTOMETRIC=YCBCR SP1937.tif SP1938.tif SP1939.tif 1.tif
> > > >> > 
> > > >> > The documentation says:
> > > >> > > -wm memory_in_mb:
> > > >> > > Set the amount of memory (in megabytes) that the warp API is
> > 
> > allowed
> > 
> > > >> to
> > > >> 
> > > >> > > use for caching.
> > > >> > 
> > > >> > So by my reading I'm allocating a bit less than 13GB (of my
> > > >> > 16,730,672kB RAM) to gdalwarp.
> > > >> > 
> > > >> > Imagine my surprise when I get this error:
> > > >> >  ERROR 5: GDALWarpOptions.Validate()
> > > >> >  
> > > >> >   dfWarpMemoryLimit=13000 is unreasonably small.
> > > >> > 
> > > >> > After more testing, anything with 4 digits works fine (including
> > > >> > 9999),
> > > >> 
> > > >> but
> > > >> 
> > > >> > anything with five digits (i.e. 10,000) gives me that error.
> > > >> > 
> > > >> > Is this a bug?
> > > >> 
> > > >> Rather a undocumented attempt to correct wrong user supplied
> > 
> > parameter.
> > 
> > > >> In gdalwarp utility, if the value of -wm is < 10000, then it is
> > > >> considered as
> > > >> megabytes ( and multiplied by 1024*1024 for GDAL internals),
> > > >> otherwise it is
> > > >> considered as bytes, and passed unmodified to GDAL internals. (the
> > 
> > last
> > 
> > > >> change
> > > >> to that logic was in http://trac.osgeo.org/gdal/changeset/10817 , 7
> > > >> years ago,
> > > >> where the threshold was modified from 4000 to 10000, so at that time
> > 
> > 10
> > 
> > > >> GB was
> > > >> really enormous !)
> > > >> In gdal warper code, there is a test that checks if the memory limit
> > > >> variable
> > > >> (that must be in bytes now) is at least 100000, and bail out if it
> > > >> is not the
> > > >> case.
> > > >> So currently you could specify the size as bytes : "-wm
> > > >> 16730672000".
> > > >> 
> > > >> I'm wondering if we should not remove this GDAL-isense logic in
> > 
> > gdalwarp
> > 
> > > >> utility and just implement documented behaviour... Or maybe document
> > 
> > the
> > 
> > > >> current behaviour.
> > > >> 
> > > >> Note: unless your warping process implies considerable image shape
> > > >> distortion
> > > >> (which is unlikely to be the case here since I don't see any -s_srs
> > > >> or -t_srs
> > > >> flag), you don't need such a huge value. It could decrease
> > > >> performance actually. The only case where it might help is if your
> > > >> source images
> > 
> > are
> > 
> > > >> not
> > > >> tiled.
> > > >> 
> > > >> >  (GDAL 1.10.1)
> > > >> > 
> > > >> > Cheers,
> > > >> > Jonathan
> > > >> 
> > > >> --
> > > >> Geospatial professional services
> > > >> http://even.rouault.free.fr/services.html
> > 
> > --
> > Geospatial professional services
> > http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From jonathanmoules at warwickshire.gov.uk  Mon Dec  2 10:42:59 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Mon, 2 Dec 2013 18:42:59 +0000
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <201312021932.29315.even.rouault@mines-paris.org>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<201312021857.50819.even.rouault@mines-paris.org>
	<CAA-xNcUUd_9h=pRsmothu6d8k7npiVB9_2wD7dX_9fT8gH=J-Q@mail.gmail.com>
	<201312021932.29315.even.rouault@mines-paris.org>
Message-ID: <CAA-xNcWLp4PTJoRUkYMsEFd0Oy0+Ta2N0Ay4b5Z0iYAzsrkHag@mail.gmail.com>

On 2 December 2013 18:32, Even Rouault <even.rouault at mines-paris.org> wrote:

> Le lundi 02 d?cembre 2013 19:12:07, Jonathan Moules a ?crit :
> > Hi Even,
> > To hit the 10GB limit I'm using (Windows Server 2008):
> >
> > gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co COMPRESS=JPEG
> > -co JPEG_QUALITY=60 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
> > PHOTOMETRIC=YCBCR 2000.vrt 2000.tif
> >
> > I tried adding:  --config GDAL_CACHEMAX 27000000000 but then it'd just
> > crash with out-of-memory (it wouldn't actually stop at 27GB; so I guess
> > that works differently again).
>
> Crash (Windows dialog) or "clean" exit with a GDAL error message ?
> What are the files (TIFF, ECW, ...) in the VRT ?
> I don't see anything wrong, and have not OS and hardware specs to reproduce
> that.
>

A clean GDAL error:

0...ERROR 2: GDALRasterBlock::Internalize : Out of memory allocating 262144
> bytes.
> ERROR 1: GetBlockRef failed at X block offset 334, Y block offset 60


The "files" are one single ECW file. 5GB compressed, about 200GB
uncompressed.

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131202/81781908/attachment.html>

From even.rouault at mines-paris.org  Mon Dec  2 11:03:41 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 2 Dec 2013 20:03:41 +0100
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <CAA-xNcWLp4PTJoRUkYMsEFd0Oy0+Ta2N0Ay4b5Z0iYAzsrkHag@mail.gmail.com>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<201312021932.29315.even.rouault@mines-paris.org>
	<CAA-xNcWLp4PTJoRUkYMsEFd0Oy0+Ta2N0Ay4b5Z0iYAzsrkHag@mail.gmail.com>
Message-ID: <201312022003.41567.even.rouault@mines-paris.org>

Le lundi 02 d?cembre 2013 19:42:59, Jonathan Moules a ?crit :
> On 2 December 2013 18:32, Even Rouault <even.rouault at mines-paris.org> wrote:
> > Le lundi 02 d?cembre 2013 19:12:07, Jonathan Moules a ?crit :
> > > Hi Even,
> > > To hit the 10GB limit I'm using (Windows Server 2008):
> > > 
> > > gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co
> > > COMPRESS=JPEG -co JPEG_QUALITY=60 -co BLOCKXSIZE=512 -co
> > > BLOCKYSIZE=512 -co
> > > PHOTOMETRIC=YCBCR 2000.vrt 2000.tif
> > > 
> > > I tried adding:  --config GDAL_CACHEMAX 27000000000 but then it'd just
> > > crash with out-of-memory (it wouldn't actually stop at 27GB; so I guess
> > > that works differently again).
> > 
> > Crash (Windows dialog) or "clean" exit with a GDAL error message ?
> > What are the files (TIFF, ECW, ...) in the VRT ?
> > I don't see anything wrong, and have not OS and hardware specs to
> > reproduce that.
> 
> A clean GDAL error:
> 
> 0...ERROR 2: GDALRasterBlock::Internalize : Out of memory allocating 262144

It is really the operating system refusing to do the allocation. Perhaps there 
are too much of small allocation, but the virtual memory space on 64 bit is 
huge so fragmentation should not be an issue.
Or perhaps you've just reached the RAM size due to the ECW SDK eating RAM by 
itself. According to http://www.gdal.org/frmt_ecw.html, it can consume up to 
1/4 of the RAM by default. I'm not sure which version of the SDK you are 
using, but I remember that with the ECW SDK 3.3 it requires a patch for Linux 
64 bit, otherwise it could use much more RAM than 1/4. You could try setting 
ECW_CACHE_MAXMEM explicitely (possibly below 2 GB to avoid any potential 32/64 
bit issue)

> 
> > bytes.
> > ERROR 1: GetBlockRef failed at X block offset 334, Y block offset 60
> 
> The "files" are one single ECW file. 5GB compressed, about 200GB
> uncompressed.

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Mon Dec  2 11:34:03 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 2 Dec 2013 20:34:03 +0100
Subject: [gdal-dev] GetFeature() and attribute/spatial filters
Message-ID: <201312022034.03624.even.rouault@mines-paris.org>

Hi,

Frank noticed in http://trac.osgeo.org/gdal/ticket/5309 that the generic 
implementation of GetFeature(), which uses GetNextFeature() internally, did 
not respect its documented behaviour. It should have ignored any attribute or 
spatial filter, which it didn't up to 
http://trac.osgeo.org/gdal/changeset/26688. Now it will temporarily drop any 
attribute or spatial filter during the GetFeature() call, and restore it back 
afterwards (caution: the sequential pointer of GetNextFeature() will have been 
modified, as before)

Authors of drivers that override SetAttributeFilter() and/or 
SetSpatialFilter() and/or GetFeature() must have in mind that assumption.

I've upgraded the OGDI, PG, MySQL, MSSQLSpatial, OCI, SDE, PGeo, ODBC, WALK, 
IDB, SQLite and Ingres drivers. Hopefully no other driver update is needed, 
but you are kindly welcome to check.

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From jukka.rahkonen at mmmtike.fi  Mon Dec  2 12:46:27 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Mon, 2 Dec 2013 20:46:27 +0000 (UTC)
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<201312021857.50819.even.rouault@mines-paris.org>
	<CAA-xNcUUd_9h=pRsmothu6d8k7npiVB9_2wD7dX_9fT8gH=J-Q@mail.gmail.com>
	<201312021932.29315.even.rouault@mines-paris.org>
	<CAA-xNcWLp4PTJoRUkYMsEFd0Oy0+Ta2N0Ay4b5Z0iYAzsrkHag@mail.gmail.com>
Message-ID: <loom.20131202T214305-478@post.gmane.org>

Jonathan Moules <jonathanmoules <at> warwickshire.gov.uk> writes:


> > I tried adding: ?--config GDAL_CACHEMAX 27000000000 but then it'd just
> > crash with out-of-memory (it wouldn't actually stop at 27GB; so I guess
> > that works differently again).
> Crash (Windows dialog) or "clean" exit with a GDAL error message ?
> What are the files (TIFF, ECW, ...) in the VRT ?
> I don't see anything wrong, and have not OS and hardware specs to reproduce
> that.
> 
> 
> A clean GDAL error:
> 
> 
> 
> 0...ERROR 2: GDALRasterBlock::Internalize : Out of memory allocating
262144 bytes.ERROR 1: GetBlockRef failed at X block offset 334, Y block
offset 60
> 
> The "files" are one single ECW file. 5GB compressed, about 200GB uncompressed.
> 

Hi,

I am not sure if things have changed since 
http://trac.osgeo.org/gdal/wiki/UserDocs/GdalWarp
and discussion around
http://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg04017.html

That time it was not at all good to use unnecessarily large -wm value.

-Jukka Rahkonen-


From jonathanmoules at warwickshire.gov.uk  Tue Dec  3 04:09:26 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Tue, 3 Dec 2013 12:09:26 +0000
Subject: [gdal-dev] -wm (memory in mb with gdalwarp)
In-Reply-To: <201312022003.41567.even.rouault@mines-paris.org>
References: <CAA-xNcXdN10WzP8GAtEp3fwYFYcDqsLBPatS92YVAgdpqDcTmw@mail.gmail.com>
	<201312021932.29315.even.rouault@mines-paris.org>
	<CAA-xNcWLp4PTJoRUkYMsEFd0Oy0+Ta2N0Ay4b5Z0iYAzsrkHag@mail.gmail.com>
	<201312022003.41567.even.rouault@mines-paris.org>
Message-ID: <CAA-xNcVhiO6Jww=r0wFzZVZKBbHxDTT-k0fbT99dOjhPtrwZLQ@mail.gmail.com>

Thanks for the replies. I think in this instance that as Even suggests it's
because both the ECW SDK and GDAL are trying to allocate which will take me
over the RAM limit.
>From a users perspective I just figured that more RAM = better, based on
experience that's usually how things work. Useful to know it's not here.

Thanks again,
Jonathan

On 2 December 2013 19:03, Even Rouault <even.rouault at mines-paris.org> wrote:

> Le lundi 02 d?cembre 2013 19:42:59, Jonathan Moules a ?crit :
> > On 2 December 2013 18:32, Even Rouault <even.rouault at mines-paris.org>
> wrote:
> > > Le lundi 02 d?cembre 2013 19:12:07, Jonathan Moules a ?crit :
> > > > Hi Even,
> > > > To hit the 10GB limit I'm using (Windows Server 2008):
> > > >
> > > > gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co
> > > > COMPRESS=JPEG -co JPEG_QUALITY=60 -co BLOCKXSIZE=512 -co
> > > > BLOCKYSIZE=512 -co
> > > > PHOTOMETRIC=YCBCR 2000.vrt 2000.tif
> > > >
> > > > I tried adding:  --config GDAL_CACHEMAX 27000000000 but then it'd
> just
> > > > crash with out-of-memory (it wouldn't actually stop at 27GB; so I
> guess
> > > > that works differently again).
> > >
> > > Crash (Windows dialog) or "clean" exit with a GDAL error message ?
> > > What are the files (TIFF, ECW, ...) in the VRT ?
> > > I don't see anything wrong, and have not OS and hardware specs to
> > > reproduce that.
> >
> > A clean GDAL error:
> >
> > 0...ERROR 2: GDALRasterBlock::Internalize : Out of memory allocating
> 262144
>
> It is really the operating system refusing to do the allocation. Perhaps
> there
> are too much of small allocation, but the virtual memory space on 64 bit is
> huge so fragmentation should not be an issue.
> Or perhaps you've just reached the RAM size due to the ECW SDK eating RAM
> by
> itself. According to http://www.gdal.org/frmt_ecw.html, it can consume up
> to
> 1/4 of the RAM by default. I'm not sure which version of the SDK you are
> using, but I remember that with the ECW SDK 3.3 it requires a patch for
> Linux
> 64 bit, otherwise it could use much more RAM than 1/4. You could try
> setting
> ECW_CACHE_MAXMEM explicitely (possibly below 2 GB to avoid any potential
> 32/64
> bit issue)
>
> >
> > > bytes.
> > > ERROR 1: GetBlockRef failed at X block offset 334, Y block offset 60
> >
> > The "files" are one single ECW file. 5GB compressed, about 200GB
> > uncompressed.
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html
>

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131203/4558683b/attachment.html>

From schut at sarvision.nl  Tue Dec  3 06:52:24 2013
From: schut at sarvision.nl (Vincent Schut)
Date: Tue, 03 Dec 2013 15:52:24 +0100
Subject: [gdal-dev] gdalwarp integer overflow
Message-ID: <529DF028.1070104@sarvision.nl>

Hi,

I get the following error (integer overflow) when running gdalwarp on a 
very large vrt to reproject to a very small tif:

gdalwarp -overwrite -t_srs epsg:4326 -te -180 -90 180 90 -ts 36 18 -r 
near ${YEAR}/world_${YEAR}_sinu.vrt ${YEAR}/world_${YEAR}_ll_overview.tif
Creating output file that is 36P x 18L.
Processing input file 2013/world_2013_sinu.vrt.
Using internal nodata values (e.g. 0) for image 2013/world_2013_sinu.vrt.
Copying nodata values from source 2013/world_2013_sinu.vrt to 
destination 2013/world_2013_ll_overview.tif.
0...10...20...30...40...50...60ERROR 1: Integer overflow : 
nSrcXSize=22358, nSrcYSize=9601

I also tried -r average, which gives the same error.
Note that this might be a less than average usecase: I am running 
gdalwarp on a vrt (built with gdalbuildvrt) of dimensions 172800, 33600 
and sinusoidal projection, to create a tif with dimensions of 36, 18 (10 
deg/pixel) and latlon wgs84 projection. This because ultimately I want 
to create latlon tiles of 10x10 degrees, but want to avoid creating 
empty tiles, so I'll use gdallocationinfo on the 36x18 tif to check if 
this 10x10 degree square actually has data.

Any insights or tips on what could be wrong or how to debug/prevent this 
are welcome (e.g. should I try some specific warpoptions?)

Thanks in advance,
Vincent.

From jonathanmoules at warwickshire.gov.uk  Tue Dec  3 07:18:25 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Tue, 3 Dec 2013 15:18:25 +0000
Subject: [gdal-dev] Setting the noData flag in a GeoTIFF
Message-ID: <CAA-xNcWj-AC5Tq_2GLrDcSDgHpM7BW39FLPYMtkpqL01x1Ge=g@mail.gmail.com>

Hi List,
  I have a question about setting a value as "noData" in GeoTIFFs.

I'm creating a Geotiff with this two stage process (mosaicing a lot of
tiles together):

gdalbuildvrt -hidenodata -srcnodata 255 -vrtnodata 255 -input_file_list
>> tiff_list.txt 255.vrt
>
>
>> gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co COMPRESS=JPEG
>>  -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
>> PHOTOMETRIC=YCBCR 255.vrt 255mask.tif
>
>
The resultant image is fine, but when I access it, both via ArcGIS and QGIS
it says that there is no noData value set.

I've tried reading into it and came across this -
http://www.gdal.org/frmt_gtiff.html - but it requires a deeper level of the
GeoTIFF library than I have to make much sense of it.

I did see "GDAL_TIFF_INTERNAL_MASK" and tried to set it to true (using -co
and --config), but GDAL just complained about it not being a valid
configuration option.

Can GeoTiffs have a noData value in them that applications will see and
honour? If so, can I set it in GDAL?
It's not critically important, more nice-to-have and also trying to
understand the format better

Thanks,
Jonathan

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131203/ceca244c/attachment.html>

From even.rouault at mines-paris.org  Tue Dec  3 07:56:56 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 03 Dec 2013 16:56:56 +0100
Subject: [gdal-dev] gdalwarp integer overflow
In-Reply-To: <529DF028.1070104@sarvision.nl>
References: <529DF028.1070104@sarvision.nl>
Message-ID: <1386086216.529dff4893dec@imp.free.fr>

Hi,

do you have many bands and what is their data type ? Because the check for
integer overflows does nSrcXSize * nSrcYSize * nWordSize *  nBandCount.
nSrcXSize * nSrcYSize by itself is 214 659 158. So it means that you have more
than 10 bands of Byte type, or other combinations of band number/data type that
cause the number to go over 2 billion.

I think the cause of the issue is the large over sampling you are attempting.
This requires to fetch an anourmous source area for a tinish target area. I
suggest you do gdalwarp in several times by using decreasing sizes. Perhaps just
an intermediate state will be necessary.

In the situation, the warping algorithm could also be smarter and realize that
in nearest neighbour resampling it doesn't need to fetch a source area but just
fetch individual source pixels. But that's a pretty unusual case (usually the
number of source pixels more or less matches the number of target pixels)

Even

> Hi,
>
> I get the following error (integer overflow) when running gdalwarp on a
> very large vrt to reproject to a very small tif:
>
> gdalwarp -overwrite -t_srs epsg:4326 -te -180 -90 180 90 -ts 36 18 -r
> near ${YEAR}/world_${YEAR}_sinu.vrt ${YEAR}/world_${YEAR}_ll_overview.tif
> Creating output file that is 36P x 18L.
> Processing input file 2013/world_2013_sinu.vrt.
> Using internal nodata values (e.g. 0) for image 2013/world_2013_sinu.vrt.
> Copying nodata values from source 2013/world_2013_sinu.vrt to
> destination 2013/world_2013_ll_overview.tif.
> 0...10...20...30...40...50...60ERROR 1: Integer overflow :
> nSrcXSize=22358, nSrcYSize=9601
>
> I also tried -r average, which gives the same error.
> Note that this might be a less than average usecase: I am running
> gdalwarp on a vrt (built with gdalbuildvrt) of dimensions 172800, 33600
> and sinusoidal projection, to create a tif with dimensions of 36, 18 (10
> deg/pixel) and latlon wgs84 projection. This because ultimately I want
> to create latlon tiles of 10x10 degrees, but want to avoid creating
> empty tiles, so I'll use gdallocationinfo on the 36x18 tif to check if
> this 10x10 degree square actually has data.
>
> Any insights or tips on what could be wrong or how to debug/prevent this
> are welcome (e.g. should I try some specific warpoptions?)
>
> Thanks in advance,
> Vincent.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



From even.rouault at mines-paris.org  Tue Dec  3 08:02:03 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 03 Dec 2013 17:02:03 +0100
Subject: [gdal-dev] Setting the noData flag in a GeoTIFF
In-Reply-To: <CAA-xNcWj-AC5Tq_2GLrDcSDgHpM7BW39FLPYMtkpqL01x1Ge=g@mail.gmail.com>
References: <CAA-xNcWj-AC5Tq_2GLrDcSDgHpM7BW39FLPYMtkpqL01x1Ge=g@mail.gmail.com>
Message-ID: <1386086523.529e007bc87dc@imp.free.fr>

Selon Jonathan Moules <jonathanmoules at warwickshire.gov.uk>:

> Hi List,
>   I have a question about setting a value as "noData" in GeoTIFFs.
>
> I'm creating a Geotiff with this two stage process (mosaicing a lot of
> tiles together):
>
> gdalbuildvrt -hidenodata -srcnodata 255 -vrtnodata 255 -input_file_list
> >> tiff_list.txt 255.vrt
> >
> >
> >> gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co COMPRESS=JPEG
> >>  -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
> >> PHOTOMETRIC=YCBCR 255.vrt 255mask.tif
> >
> >
> The resultant image is fine, but when I access it, both via ArcGIS and QGIS
> it says that there is no noData value set.

Yes, and gdalinfo on 255mask.tif would report the same too. The reason is the
"-hidenodata" flag in the gdalbuildvrt. Remove it and it should work as
expected.

You don't need to rebuild your 255mask.tif. Just try :

python gdal_edit.py -a_nodata 255 255mask.tif (cf
http://www.gdal.org/gdal_edit.html)

>
> I've tried reading into it and came across this -
> http://www.gdal.org/frmt_gtiff.html - but it requires a deeper level of the
> GeoTIFF library than I have to make much sense of it.
>
> I did see "GDAL_TIFF_INTERNAL_MASK" and tried to set it to true (using -co
> and --config), but GDAL just complained about it not being a valid
> configuration option.

Masks are more unusual and difficult to master.

>
> Can GeoTiffs have a noData value in them that applications will see and
> honour? If so, can I set it in GDAL?
> It's not critically important, more nice-to-have and also trying to
> understand the format better
>
> Thanks,
> Jonathan
>
> --
> This transmission is intended for the named addressee(s) only and may
> contain sensitive or protectively marked material up to RESTRICTED and
> should be handled accordingly. Unless you are the named addressee (or
> authorised to receive it for the addressee) you may not copy or use it, or
> disclose it to anyone else. If you have received this transmission in error
> please notify the sender immediately. All email traffic sent to or from us,
> including without limitation all GCSX traffic, may be subject to recording
> and/or monitoring in accordance with relevant legislation.
>



From andre+joost at nurfuerspam.de  Tue Dec  3 08:05:28 2013
From: andre+joost at nurfuerspam.de (Andre Joost)
Date: Tue, 03 Dec 2013 17:05:28 +0100
Subject: [gdal-dev] gdalwarp integer overflow
In-Reply-To: <529DF028.1070104@sarvision.nl>
References: <529DF028.1070104@sarvision.nl>
Message-ID: <l7l0oa$16n$1@ger.gmane.org>

Am 03.12.2013 15:52, schrieb Vincent Schut:

>
> Any insights or tips on what could be wrong or how to debug/prevent this
> are welcome (e.g. should I try some specific warpoptions?)
>

Have you tried to leave out the poles from your warping?

In sinusoidal, the poles are just one point, while in WGS84 they are the 
top and bottom line. This might be a problem when reprojecting back to 
WGS84.

Greetings,
Andr? Joost


From jonathanmoules at warwickshire.gov.uk  Tue Dec  3 08:33:33 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Tue, 3 Dec 2013 16:33:33 +0000
Subject: [gdal-dev] Setting the noData flag in a GeoTIFF
In-Reply-To: <1386086523.529e007bc87dc@imp.free.fr>
References: <CAA-xNcWj-AC5Tq_2GLrDcSDgHpM7BW39FLPYMtkpqL01x1Ge=g@mail.gmail.com>
	<1386086523.529e007bc87dc@imp.free.fr>
Message-ID: <CAA-xNcX-f110VT6uyDbrDNuf4Yh8zGjiv-5xQLr1djA6fLnf=A@mail.gmail.com>

Hi Even,
That worked great.
It figures that I'd tried about 6 different permutations, including a few
without "-hidenodata"; but none of them was the right one it seems.

It's no problem recreating the tifs as they're small test tifs that takes a
few seconds to process.

Many thanks!
Jonathan

On 3 December 2013 16:02, Even Rouault <even.rouault at mines-paris.org> wrote:

> Selon Jonathan Moules <jonathanmoules at warwickshire.gov.uk>:
>
> > Hi List,
> >   I have a question about setting a value as "noData" in GeoTIFFs.
> >
> > I'm creating a Geotiff with this two stage process (mosaicing a lot of
> > tiles together):
> >
> > gdalbuildvrt -hidenodata -srcnodata 255 -vrtnodata 255 -input_file_list
> > >> tiff_list.txt 255.vrt
> > >
> > >
> > >> gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co
> COMPRESS=JPEG
> > >>  -co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
> > >> PHOTOMETRIC=YCBCR 255.vrt 255mask.tif
> > >
> > >
> > The resultant image is fine, but when I access it, both via ArcGIS and
> QGIS
> > it says that there is no noData value set.
>
> Yes, and gdalinfo on 255mask.tif would report the same too. The reason is
> the
> "-hidenodata" flag in the gdalbuildvrt. Remove it and it should work as
> expected.
>
> You don't need to rebuild your 255mask.tif. Just try :
>
> python gdal_edit.py -a_nodata 255 255mask.tif (cf
> http://www.gdal.org/gdal_edit.html)
>
> >
> > I've tried reading into it and came across this -
> > http://www.gdal.org/frmt_gtiff.html - but it requires a deeper level of
> the
> > GeoTIFF library than I have to make much sense of it.
> >
> > I did see "GDAL_TIFF_INTERNAL_MASK" and tried to set it to true (using
> -co
> > and --config), but GDAL just complained about it not being a valid
> > configuration option.
>
> Masks are more unusual and difficult to master.
>
> >
> > Can GeoTiffs have a noData value in them that applications will see and
> > honour? If so, can I set it in GDAL?
> > It's not critically important, more nice-to-have and also trying to
> > understand the format better
> >
> > Thanks,
> > Jonathan
> >
> > --
> > This transmission is intended for the named addressee(s) only and may
> > contain sensitive or protectively marked material up to RESTRICTED and
> > should be handled accordingly. Unless you are the named addressee (or
> > authorised to receive it for the addressee) you may not copy or use it,
> or
> > disclose it to anyone else. If you have received this transmission in
> error
> > please notify the sender immediately. All email traffic sent to or from
> us,
> > including without limitation all GCSX traffic, may be subject to
> recording
> > and/or monitoring in accordance with relevant legislation.
> >
>
>
>

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131203/51c9eae0/attachment.html>

From Alain.Royer at ete.inrs.ca  Tue Dec  3 12:05:34 2013
From: Alain.Royer at ete.inrs.ca (Royer Alain)
Date: Tue, 3 Dec 2013 15:05:34 -0500
Subject: [gdal-dev] GDALPolygonize hMaskBand with value < than 0
Message-ID: <D1FB4AB4D18BF64EB20251368E4D406101E0E1C3B8A2@INRSEXCH02.AD.INRS.CA>

Hi,

I'm not sute if it is a good place to post this. So sorry if it's not. The documentation for the GDALPolygonize function said that a value other than zero will be used as the mask. But after some test, it is a value > than zero that is used as the mask. Is it a bug or a documentation bug ? I would have prefered that any value other than 0 would be used as a mask.

http://www.gdal.org/gdal__alg_8h.html#a3f522a9035d3512b5d414fb4752671b1

(sorry for my english, I'm french canadian)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131203/6a10d052/attachment.html>

From etiennebr at gmail.com  Tue Dec  3 12:37:14 2013
From: etiennebr at gmail.com (Etienne B. Racine)
Date: Tue, 3 Dec 2013 15:37:14 -0500
Subject: [gdal-dev] how to aggregate an image to a lower resolution
 using gdal (gdalwarp?)
In-Reply-To: <CA+TxYvNvx+S+P6Hu_xQ8uMVhV5tEsHOvvcAOpwwPNxzUAPKD3w@mail.gmail.com>
References: <CE427279.7C14%jan.verbesselt@wur.nl>
	<CALjAYt71wViURsnvtvytAX1HkfmDEO2ndsv=w-apKfFGJEXimQ@mail.gmail.com>
	<CA+TxYvNvx+S+P6Hu_xQ8uMVhV5tEsHOvvcAOpwwPNxzUAPKD3w@mail.gmail.com>
Message-ID: <CALjAYt6NKOviEg4iZhQMftSad7jhc3_iXTFbH-abY2WHyC0ZAg@mail.gmail.com>

I added a ticket http://trac.osgeo.org/gdal/ticket/5311

Etienne


2013/12/2 Etienne Tourigny <etourigny.dev at gmail.com>

> The "average" resampling mode of gdalwarp does "average resampling,
> computes the average of all non-NODATA contributing pixels".
>
> It was meant to compute the average of all the pixels in the "aggregation
> window". However, it may have issues in the corners.
>
> I am the author of the average and mode algorithms, and I basically copied
> the aggregation logic from the other algorithms (i.e. which pixels are
> selected for the aggregation), so there may be something wrong in the logic.
>
> Certainly, looking at this simple example shows that something is wrong.
>
> I tested average and mode resampling with a fairly large dataset and did
> not find these problems.
>
> Can you create a new bug in the tracker and upload the scripts and data
> used?  I don't have much (any) time to work on this but would be happy to
> apply a working patch.
>
> Cheers, Etienne
>
>
> On Mon, Dec 2, 2013 at 12:22 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:
>
>> I've tried to dig this a bit. I couldn't understand the logic behind gdal
>> aggregation (or downsampling). I've simplified your example using a smaller
>> raster and deterministic values. Maybe someone could enlighten us by
>> looking at the aggregation values ? Note that the lower right cells values
>> were identical in all dimensions I've tried (about 4 - 10).
>>
>> The example is run on GDAL 1.11dev, released 2013/04/13
>>
>> Thanks,
>> Etienne
>>
>> # in R:
>>
>> require(raster)
>> filei <- '10by10.tif'
>> fileo <- '5by5.tif'
>>
>> dm = 4
>> r <- raster(matrix(1:(dm^2), dm, dm))
>>
>>
>> writeRaster(r, filename=filei, overwrite = TRUE)
>>
>> ## aggregate using R aggregate function using the mean
>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>
>> file.remove(fileo)
>> cmd <- paste("gdalwarp -r average -tr", paste(res(r1), collapse = " "),
>> filei, fileo)
>> system(cmd)
>> r2 <- raster(fileo)
>>
>> >as.matrix(r)
>>      [,1] [,2] [,3] [,4]
>> [1,]    1    5    9   13
>> [2,]    2    6   10   14
>> [3,]    3    7   11   15
>> [4,]    4    8   12   16
>> > lapply(list(r1, r2, r2-r1), as.matrix)
>> [[1]]
>>      [,1] [,2]
>> [1,]  3.5 11.5
>> [2,]  5.5 13.5
>>
>> [[2]]
>>      [,1] [,2]
>> [1,]  6.0 12.0
>> [2,]  7.5 13.5
>>
>> [[3]]
>>      [,1] [,2]
>> [1,]  2.5  0.5
>> [2,]  2.0  0.0
>>
>>
>> 2013/8/27 Verbesselt, Jan <jan.verbesselt at wur.nl>
>>
>> Hi all,
>>>
>>> I have been testing gdalwarp to aggregate (using -r average) an image.
>>> In order to better understand what is happening I have created a
>>> reproducible example within an R environment and compared it with the
>>> aggregate function of the R raster package (see below). There are some
>>> differences between the gdalwarp raster (r2) and the aggregated raster
>>> (r1).
>>>
>>> How is the gdalwarp -r average working? Which pixels are selected for
>>> averaging (e.g.the corner pixels, center pixels, or all within the
>>> aggregation window)?
>>>
>>> If there is a gdal aggregate option to average pixels comparable to the
>>> aggregate function in the R raster package, it would be great as that
>>> would potentially faster, and you could also reproject and aggregate at
>>> once.
>>>
>>> Thanks!
>>> Jan
>>>
>>> http://bfast.r-forge.r-project.org
>>> http://goo.gl/1mBC5F
>>>
>>>
>>> ## R script
>>> require(raster)
>>> filei <- '10by10.tif'
>>> fileo <- '5by5.tif'
>>>
>>> set.seed(123)
>>> r <- raster(ncols=36, nrows=18)
>>> r <- setValues(r, round(runif(ncell(r))*10))
>>> r
>>> plot(r)
>>> writeRaster(r, filename=filei, overwrite = TRUE)
>>>
>>> ## aggregate using R aggregate function using the mean
>>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>>
>>> cmd <- paste("gdalwarp -r average -tr 20 20 -te -180 -90 180 90 ",
>>>              filei, " ", fileo, sep = "")
>>> system(cmd)
>>> r2 <- raster(fileo)
>>>
>>> ## compare
>>> plot(r1)
>>> plot(r2)
>>> r1
>>> r2
>>> getValues(r1)
>>> getValues(r2)
>>>
>>> ##
>>> plot(r1-r2)
>>> sessionInfo()
>>>
>>> R> sessionInfo()
>>> R version 3.0.1 (2013-05-16)
>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>
>>> locale:
>>>  [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C         LC_TIME=C
>>> LC_COLLATE=C         LC_MONETARY=C
>>>  [6] LC_MESSAGES=C        LC_PAPER=C           LC_NAME=C
>>> LC_ADDRESS=C         LC_TELEPHONE=C
>>> [11] LC_MEASUREMENT=C     LC_IDENTIFICATION=C
>>>
>>> attached base packages:
>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>
>>> other attached packages:
>>> [1] rgdal_0.8-10  raster_2.1-49 sp_1.0-11
>>>
>>> loaded via a namespace (and not attached):
>>> [1] grid_3.0.1      lattice_0.20-23 tools_3.0.1
>>>
>>>
>>> rgdal: version: 0.8-10, (SVN revision 478)
>>> Geospatial Data Abstraction Library extensions to R successfully loaded
>>> Loaded GDAL runtime: GDAL 1.10.0, released 2013/04/24
>>> Path to GDAL shared files: /usr/share/gdal/1.10
>>> Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>>> Path to PROJ.4 shared files: (autodetected)
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131203/fca72eef/attachment.html>

From jukka.rahkonen at mmmtike.fi  Tue Dec  3 22:58:07 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Wed, 4 Dec 2013 06:58:07 +0000 (UTC)
Subject: [gdal-dev] Setting the noData flag in a GeoTIFF
References: <CAA-xNcWj-AC5Tq_2GLrDcSDgHpM7BW39FLPYMtkpqL01x1Ge=g@mail.gmail.com>
	<1386086523.529e007bc87dc@imp.free.fr>
	<CAA-xNcX-f110VT6uyDbrDNuf4Yh8zGjiv-5xQLr1djA6fLnf=A@mail.gmail.com>
Message-ID: <loom.20131204T074130-295@post.gmane.org>

Jonathan Moules <jonathanmoules <at> warwickshire.gov.uk> writes:

> 
> 
> 
> Hi Even,
> That worked great.
> It figures that I'd tried about 6 different permutations, including a few
without "-hidenodata"; but none of them was the right one it seems.
> 
> 
> It's no problem recreating the tifs as they're small test tifs that takes
a few seconds to process.
> 
> Many thanks!Jonathan

Hi,

Be warned that the result may not be what you believe. You are compressing
to jpeg and as a lossy method it does not store constant pixel values for
the whole nodata area. If 255-255-255 pixels are nodata values you will get
also pixels like 255-255-254 here and there and they will not be transparent
in applications. That may not be a problem for you if you combine
rectangular images with full of data into a mosaic but if you warp images
one by one into another projection so that they will get rotated and then
want to use the warped images side by side you would see that the
overlapping areas look bad.

-Jukka Rahkonen-


From schut at sarvision.nl  Wed Dec  4 00:20:10 2013
From: schut at sarvision.nl (Vincent Schut)
Date: Wed, 04 Dec 2013 09:20:10 +0100
Subject: [gdal-dev] gdalwarp integer overflow
In-Reply-To: <1386086216.529dff4893dec@imp.free.fr>
References: <529DF028.1070104@sarvision.nl>
	<1386086216.529dff4893dec@imp.free.fr>
Message-ID: <529EE5BA.2080407@sarvision.nl>

On 12/03/2013 04:56 PM, Even Rouault wrote:
> Hi,
>
> do you have many bands and what is their data type ? Because the check for
> integer overflows does nSrcXSize * nSrcYSize * nWordSize *  nBandCount.
> nSrcXSize * nSrcYSize by itself is 214 659 158. So it means that you have more
> than 10 bands of Byte type, or other combinations of band number/data type that
> cause the number to go over 2 billion.
>
> I think the cause of the issue is the large over sampling you are attempting.
> This requires to fetch an anourmous source area for a tinish target area. I
> suggest you do gdalwarp in several times by using decreasing sizes. Perhaps just
> an intermediate state will be necessary.
>
> In the situation, the warping algorithm could also be smarter and realize that
> in nearest neighbour resampling it doesn't need to fetch a source area but just
> fetch individual source pixels. But that's a pretty unusual case (usually the
> number of source pixels more or less matches the number of target pixels)
>
> Even

Even, thank you for this clear explanation. I'll try the 2-steps workaround.

Vincent.

>
>> Hi,
>>
>> I get the following error (integer overflow) when running gdalwarp on a
>> very large vrt to reproject to a very small tif:
>>
>> gdalwarp -overwrite -t_srs epsg:4326 -te -180 -90 180 90 -ts 36 18 -r
>> near ${YEAR}/world_${YEAR}_sinu.vrt ${YEAR}/world_${YEAR}_ll_overview.tif
>> Creating output file that is 36P x 18L.
>> Processing input file 2013/world_2013_sinu.vrt.
>> Using internal nodata values (e.g. 0) for image 2013/world_2013_sinu.vrt.
>> Copying nodata values from source 2013/world_2013_sinu.vrt to
>> destination 2013/world_2013_ll_overview.tif.
>> 0...10...20...30...40...50...60ERROR 1: Integer overflow :
>> nSrcXSize=22358, nSrcYSize=9601
>>
>> I also tried -r average, which gives the same error.
>> Note that this might be a less than average usecase: I am running
>> gdalwarp on a vrt (built with gdalbuildvrt) of dimensions 172800, 33600
>> and sinusoidal projection, to create a tif with dimensions of 36, 18 (10
>> deg/pixel) and latlon wgs84 projection. This because ultimately I want
>> to create latlon tiles of 10x10 degrees, but want to avoid creating
>> empty tiles, so I'll use gdallocationinfo on the 36x18 tif to check if
>> this 10x10 degree square actually has data.
>>
>> Any insights or tips on what could be wrong or how to debug/prevent this
>> are welcome (e.g. should I try some specific warpoptions?)
>>
>> Thanks in advance,
>> Vincent.
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>

From jonathanmoules at warwickshire.gov.uk  Wed Dec  4 03:52:50 2013
From: jonathanmoules at warwickshire.gov.uk (Jonathan Moules)
Date: Wed, 4 Dec 2013 11:52:50 +0000
Subject: [gdal-dev] Setting the noData flag in a GeoTIFF
In-Reply-To: <loom.20131204T074130-295@post.gmane.org>
References: <CAA-xNcWj-AC5Tq_2GLrDcSDgHpM7BW39FLPYMtkpqL01x1Ge=g@mail.gmail.com>
	<1386086523.529e007bc87dc@imp.free.fr>
	<CAA-xNcX-f110VT6uyDbrDNuf4Yh8zGjiv-5xQLr1djA6fLnf=A@mail.gmail.com>
	<loom.20131204T074130-295@post.gmane.org>
Message-ID: <CAA-xNcVtx0ahE0jgrXt6OxVSExEj3Cr-juejaiErFgH-uPFJtw@mail.gmail.com>

Hi Jukka,
Good point. In fact, that's one of the reasons I want to set the noData
flag. I figure when compressing hopefully the compressor will see that it
is "noData" and will treat it differently from the way it would an actual
value (which results in things like your mentioned 255,255,254) so I won't
get the white-border-effect. I guess I'll find out if/when I get to that
point.

Cheers,
Jonathan




On 4 December 2013 06:58, Jukka Rahkonen <jukka.rahkonen at mmmtike.fi> wrote:

> Jonathan Moules <jonathanmoules <at> warwickshire.gov.uk> writes:
>
> >
> >
> >
> > Hi Even,
> > That worked great.
> > It figures that I'd tried about 6 different permutations, including a few
> without "-hidenodata"; but none of them was the right one it seems.
> >
> >
> > It's no problem recreating the tifs as they're small test tifs that takes
> a few seconds to process.
> >
> > Many thanks!Jonathan
>
> Hi,
>
> Be warned that the result may not be what you believe. You are compressing
> to jpeg and as a lossy method it does not store constant pixel values for
> the whole nodata area. If 255-255-255 pixels are nodata values you will get
> also pixels like 255-255-254 here and there and they will not be
> transparent
> in applications. That may not be a problem for you if you combine
> rectangular images with full of data into a mosaic but if you warp images
> one by one into another projection so that they will get rotated and then
> want to use the warped images side by side you would see that the
> overlapping areas look bad.
>
> -Jukka Rahkonen-
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>

-- 
This transmission is intended for the named addressee(s) only and may 
contain sensitive or protectively marked material up to RESTRICTED and 
should be handled accordingly. Unless you are the named addressee (or 
authorised to receive it for the addressee) you may not copy or use it, or 
disclose it to anyone else. If you have received this transmission in error 
please notify the sender immediately. All email traffic sent to or from us, 
including without limitation all GCSX traffic, may be subject to recording 
and/or monitoring in accordance with relevant legislation.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131204/07a16258/attachment-0001.html>

From jukka.rahkonen at mmmtike.fi  Wed Dec  4 04:16:39 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Wed, 4 Dec 2013 12:16:39 +0000 (UTC)
Subject: [gdal-dev] Setting the noData flag in a GeoTIFF
References: <CAA-xNcWj-AC5Tq_2GLrDcSDgHpM7BW39FLPYMtkpqL01x1Ge=g@mail.gmail.com>
	<1386086523.529e007bc87dc@imp.free.fr>
	<CAA-xNcX-f110VT6uyDbrDNuf4Yh8zGjiv-5xQLr1djA6fLnf=A@mail.gmail.com>
	<loom.20131204T074130-295@post.gmane.org>
	<CAA-xNcVtx0ahE0jgrXt6OxVSExEj3Cr-juejaiErFgH-uPFJtw@mail.gmail.com>
Message-ID: <loom.20131204T130330-808@post.gmane.org>

Jonathan Moules <jonathanmoules <at> warwickshire.gov.uk> writes:

> 
> 
> Hi Jukka,Good point. In fact, that's one of the reasons I want to set the
noData flag. I figure when compressing hopefully the compressor will see
that it is "noData" and will treat it differently from the way it would an
actual value (which results in things like your mentioned 255,255,254) so I
won't get the white-border-effect. I guess I'll find out if/when I get to
that point.

Hi,

As far as I know GDAL does not do miracles. You cannot make a perfect result
with rotated images, noData value and jpeg compression if you warp first and
mosaic afterwards.  If you want to use jpeg compression, as I suppose you
do, turn the order and mosaic first - warp next. Build a virtual mosaic when
you still play in the world of the native projection and warp images to
target projection by using ?projwin.  That way at least the images from the
middle parts of your site will be rectangular and without noData areas at
all in the target srs and you will have no issues with jpeg compression. You
will still get non-transparent pixels into the borders of your site but you
can create those images  without compression or with lossless LZW/deflate
compression.

You are anyways so well oriented in doing controlled tests that you will
probably do little experiments with your own data and mosaics of size 2x2 or
3x3 tiles before running huge batches.

However, if your originals don't have white borders of noData areas withing
the image area then you will not have them either after running your commands.

gdalbuildvrt -hidenodata -srcnodata 255 -vrtnodata 255 -input_file_list
tiff_list.txt 255.vrt

gdal_translate -of GTiff -co TILED=YES -co BIGTIFF=YES -co COMPRESS=JPEG 
-co JPEG_QUALITY=80 -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co
PHOTOMETRIC=YCBCR 255.vrt 255mask.tif

In this case using noData is not necessary either and may actually burn
holes into your images if there are some extremely light areas of dry, plain
terrain or the sun is reflecting from the water bodies and roofs of the
buildings etc.

-Jukka-



From vesnikos at gmail.com  Wed Dec  4 06:56:42 2013
From: vesnikos at gmail.com (Nick Ves)
Date: Wed, 4 Dec 2013 16:56:42 +0200
Subject: [gdal-dev] How to get coordinates of original corners from
	warped image
In-Reply-To: <CAKWoFMKUtNi7HhdPAHoY26c+9=3sHinPRBKT2M=396RMtV7VtQ@mail.gmail.com>
References: <CAKWoFMKUtNi7HhdPAHoY26c+9=3sHinPRBKT2M=396RMtV7VtQ@mail.gmail.com>
Message-ID: <CADCcPvvqoQkV4nTP-+n2BF8Sxy97YEfG0G0GKQUC0hrcm1p7Nw@mail.gmail.com>

On Sat, Nov 30, 2013 at 1:27 PM, Lauri Kajan <lauri.kajan at gmail.com> wrote:
> Hi all
>
> I have a set of aerial bird's view images and now I need to get extents of
> those images as polygons.
> I thought to add GCPs to images and possibly somehow to use the same
> transformation that is used when warping the images with perspective
> algorithm, to calculate coordinates for corners of the original images.
>

Get the coordinates from you projected Image then you can use the
cs2cs to re-projected those coordinates back to your original CRS

> Is this possible with python?
>
yes, you can use the pyproj lib

>
> Thanks
>
> -Lauri
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

From schneider.michal at gmail.com  Wed Dec  4 07:01:44 2013
From: schneider.michal at gmail.com (Michal Schneider)
Date: Wed, 4 Dec 2013 16:01:44 +0100
Subject: [gdal-dev] MS SQL Server layer's spatial reference
Message-ID: <CANBOXvXPjsvJX3o9h1qyZgpkFKJqORb=ZGf=u1XOThWipq+Avw@mail.gmail.com>

Hi,

I have a problem with getting spatial reference of one layer in MS SQL
Server. When I run following command everything is just file, I'm getting
WKT description of layer's spatial reference.

ogrinfo -so MSSQL:server=ORASRV;database=uap;uid=xxx;pwd=xxx SDE.USES_p
--config GDAL_DATA D:\projekty\GDAL\install\data

But when I do something similar with C++ API, I'm getting NULL :-(

OGRDataSource *ds;
OGRLayer *layer;
OGRSpatialReference *sr;

CPLSetConfigOption("GDAL_DATA", "D:\projekty\GDAL\install\data");
ds =
OGRSFDriverRegistrar::Open("MSSQL:server=ORASRV;database=uap;uid=xxx;pwd=xxx");
layer = ds->GetLayerByName("SDE.USES_p");
sr = layer->GetSpatialRef();

Am I doing something wrong?

Thanks a lot for your help.

Michal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131204/68cc1cf3/attachment.html>

From bishop.dev at gmail.com  Wed Dec  4 12:11:44 2013
From: bishop.dev at gmail.com (Dmitriy Baryshnikov)
Date: Thu, 05 Dec 2013 00:11:44 +0400
Subject: [gdal-dev]  VS2010-VS2013 s57
In-Reply-To: <CANBOXvXPjsvJX3o9h1qyZgpkFKJqORb=ZGf=u1XOThWipq+Avw@mail.gmail.com>
References: <CANBOXvXPjsvJX3o9h1qyZgpkFKJqORb=ZGf=u1XOThWipq+Avw@mail.gmail.com>
Message-ID: <529F8C80.10608@gmail.com>

Hi,

I have such error: the GDAL compiled with VS2010-VS2013 in s57 driver 
loose all additional fields values. But the same code compiled with gcc 
or previous VS works fine.
I found the root of problems here (ogr\ogrsf_frmts\s57\s57reader.cpp:932):

    const char *pszAcronym = poRegistrar->GetAttrAcronym(nAttrId);
    iField = poFeature->GetDefnRef()->GetFieldIndex(pszAcronym);

The pszAcronym always empty.

The problem comes from this function (ogr\ogrsf_frmts\s57\s57.h:140):

    const char *GetAttrAcronym( int i )
         { return GetAttrInfo(i) == NULL ? NULL :
    aoAttrInfos[i]->osAcronym; }

It seems to me that during execution this function I have |situation 
when||c_str()|result becomes invalid (the|std::string|is destroyed or a 
non-const member function of the string is called).

If I change function

    const char *GetAttrAcronym( int i )
         { return GetAttrInfo(i) == NULL ? NULL :
    aoAttrInfos[i]->osAcronym.c_str(); }

the problem gone.

So I need some confirmation/verification my ideas.
If I'm right, I can make changes to s57 driver.

Best regards,
     Dmitry



---
??? ????????? ???????? ?? ??????? ? ???????????? ?? ????????? ?????? ?? ??????? avast!
http://www.avast.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131205/0244c5e7/attachment.html>

From warmerdam at pobox.com  Wed Dec  4 12:19:53 2013
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 4 Dec 2013 12:19:53 -0800
Subject: [gdal-dev] VS2010-VS2013 s57
In-Reply-To: <529F8C80.10608@gmail.com>
References: <CANBOXvXPjsvJX3o9h1qyZgpkFKJqORb=ZGf=u1XOThWipq+Avw@mail.gmail.com>
	<529F8C80.10608@gmail.com>
Message-ID: <CA+YzLBcJk1UVX4mSz91waTRJDGu89yHXXsL1NOrGvnK_WCGq9Q@mail.gmail.com>

Dmitriy,

It is not clear to me why this should be necessary.  osAcronym is a long
lived std::string (well CPLString derived from std::string) living in the
registrars attribute list.  I assume the following method is used to
convert the CPLString to "const char *" which should amount to the same
thing you did.

    operator const char* (void) const { return c_str(); }

Perhaps there is some subtle reason I don't see that the compiler is
creating a temporary std::string in between?

In any event, if you file a ticket I can apply this change upstream.  There
are other accessors on the same class that look like they could have
similar issues.

Best regards,
Frank


On Wed, Dec 4, 2013 at 12:11 PM, Dmitriy Baryshnikov
<bishop.dev at gmail.com>wrote:

>  Hi,
>
> I have such error: the GDAL compiled with VS2010-VS2013 in s57 driver
> loose all additional fields values. But the same code compiled with gcc or
> previous VS works fine.
> I found the root of problems here (ogr\ogrsf_frmts\s57\s57reader.cpp:932):
>
> const char *pszAcronym = poRegistrar->GetAttrAcronym(nAttrId);
> iField = poFeature->GetDefnRef()->GetFieldIndex(pszAcronym);
>
>  The pszAcronym always empty.
>
> The problem comes from this function (ogr\ogrsf_frmts\s57\s57.h:140):
>
> const char *GetAttrAcronym( int i )
>     { return GetAttrInfo(i) == NULL ? NULL : aoAttrInfos[i]->osAcronym; }
>
> It seems to me that during execution this function I have situation when
> c_str() result becomes invalid (the std::string is destroyed or a
> non-const member function of the string is called).
>
> If I change function
>
> const char *GetAttrAcronym( int i )
>     { return GetAttrInfo(i) == NULL ? NULL :
> aoAttrInfos[i]->osAcronym.c_str(); }
>
> the problem gone.
>
> So I need some confirmation/verification my ideas.
> If I'm right, I can make changes to s57 driver.
>
> Best regards,
>     Dmitry
>
>
>
> ------------------------------
>    <http://www.avast.com/>
>
> ??? ????????? ???????? ?? ??????? ? ???????????? ?? ????????? avast!
> Antivirus <http://www.avast.com/> ?????? ???????.
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131204/f7de2033/attachment.html>

From bishop.dev at gmail.com  Wed Dec  4 13:15:58 2013
From: bishop.dev at gmail.com (Dmitriy Baryshnikov)
Date: Thu, 05 Dec 2013 01:15:58 +0400
Subject: [gdal-dev] VS2010-VS2013 s57
In-Reply-To: <CA+YzLBcJk1UVX4mSz91waTRJDGu89yHXXsL1NOrGvnK_WCGq9Q@mail.gmail.com>
References: <CANBOXvXPjsvJX3o9h1qyZgpkFKJqORb=ZGf=u1XOThWipq+Avw@mail.gmail.com>	<529F8C80.10608@gmail.com>
	<CA+YzLBcJk1UVX4mSz91waTRJDGu89yHXXsL1NOrGvnK_WCGq9Q@mail.gmail.com>
Message-ID: <529F9B8E.8010800@gmail.com>

Hi Frank,

You quite right, what

    It is not clear to me why this should be necessary.  osAcronym is a
    long lived std::string (well CPLString derived from std::string)
    living in the registrars attribute list.  I assume the following
    method is used to convert the CPLString to "const char *" which
    should amount to the same thing you did.

but this is not helps, as c_str() method of std::string not return 
pointer, but construct new zero ended const char* managed by std::string 
(maybe this is specific to VS2010-VS2013). This const char* cleared 
after some call to std::string or CPLString and we got empty (cleared) 
const char *pszAcronym. I think the VS2010-VS2013 compiler do this in 
getter by index, operator const char* or the whole GetAttrInfo(i) == 
NULL ? NULL : aoAttrInfos[i]->osAcronym (maybe MS change the order 
parameter calculation or optimization). Maybe const (operator const 
char* (void) const) in non const (const char *GetAttrAcronym( int i )) 
function VS2010-VS2013 specific behaviour.

OK, I fire the ticket. As I have committer rights, my I add changes, 
corresponding to the ticket?

Best regards,
     Dmitry

05.12.2013 0:19, Frank Warmerdam ?????:
> Dmitriy,
>
> It is not clear to me why this should be necessary.  osAcronym is a 
> long lived std::string (well CPLString derived from std::string) 
> living in the registrars attribute list.  I assume the following 
> method is used to convert the CPLString to "const char *" which should 
> amount to the same thing you did.
>
>     operator const char* (void) const { return c_str(); }
>
> Perhaps there is some subtle reason I don't see that the compiler is 
> creating a temporary std::string in between?
>
> In any event, if you file a ticket I can apply this change upstream. 
>  There are other accessors on the same class that look like they could 
> have similar issues.
>
> Best regards,
> Frank
>
>
> On Wed, Dec 4, 2013 at 12:11 PM, Dmitriy Baryshnikov 
> <bishop.dev at gmail.com <mailto:bishop.dev at gmail.com>> wrote:
>
>     Hi,
>
>     I have such error: the GDAL compiled with VS2010-VS2013 in s57
>     driver loose all additional fields values. But the same code
>     compiled with gcc or previous VS works fine.
>     I found the root of problems here
>     (ogr\ogrsf_frmts\s57\s57reader.cpp:932):
>
>         const char *pszAcronym = poRegistrar->GetAttrAcronym(nAttrId);
>         iField = poFeature->GetDefnRef()->GetFieldIndex(pszAcronym);
>
>     The pszAcronym always empty.
>
>     The problem comes from this function (ogr\ogrsf_frmts\s57\s57.h:140):
>
>         const char *GetAttrAcronym( int i )
>             { return GetAttrInfo(i) == NULL ? NULL :
>         aoAttrInfos[i]->osAcronym; }
>
>     It seems to me that during execution this function I have
>     |situation when||c_str()|result becomes invalid
>     (the|std::string|is destroyed or a non-const member function of
>     the string is called).
>
>     If I change function
>
>         const char *GetAttrAcronym( int i )
>             { return GetAttrInfo(i) == NULL ? NULL :
>         aoAttrInfos[i]->osAcronym.c_str(); }
>
>     the problem gone.
>
>     So I need some confirmation/verification my ideas.
>     If I'm right, I can make changes to s57 driver.
>
>     Best regards,
>          Dmitry
>
>
>
>     ------------------------------------------------------------------------
>     <http://www.avast.com/> 	
>
>     ??? ????????? ???????? ?? ??????? ? ???????????? ?? ?????????
>     avast! Antivirus <http://www.avast.com/> ?????? ???????.
>
>
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
> -- 
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up   | Frank Warmerdam, 
> warmerdam at pobox.com <mailto:warmerdam at pobox.com>
> light and sound - activate the windows | http://pobox.com/~warmerdam 
> <http://pobox.com/%7Ewarmerdam>
> and watch the world go round - Rush    | Geospatial Software Developer



---
??? ????????? ???????? ?? ??????? ? ???????????? ?? ????????? ?????? ?? ??????? avast!
http://www.avast.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131205/92f9099f/attachment-0001.html>

From even.rouault at mines-paris.org  Wed Dec  4 13:22:13 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 4 Dec 2013 22:22:13 +0100
Subject: [gdal-dev] VS2010-VS2013 s57
In-Reply-To: <529F9B8E.8010800@gmail.com>
References: <CANBOXvXPjsvJX3o9h1qyZgpkFKJqORb=ZGf=u1XOThWipq+Avw@mail.gmail.com>
	<CA+YzLBcJk1UVX4mSz91waTRJDGu89yHXXsL1NOrGvnK_WCGq9Q@mail.gmail.com>
	<529F9B8E.8010800@gmail.com>
Message-ID: <201312042222.13650.even.rouault@mines-paris.org>

Le mercredi 04 d?cembre 2013 22:15:58, Dmitriy Baryshnikov a ?crit :
> Hi Frank,
> 
> You quite right, what
> 
>     It is not clear to me why this should be necessary.  osAcronym is a
>     long lived std::string (well CPLString derived from std::string)
>     living in the registrars attribute list.  I assume the following
>     method is used to convert the CPLString to "const char *" which
>     should amount to the same thing you did.
> 
> but this is not helps, as c_str() method of std::string not return
> pointer, but construct new zero ended const char* managed by std::string
> (maybe this is specific to VS2010-VS2013). This const char* cleared
> after some call to std::string or CPLString and we got empty (cleared)
> const char *pszAcronym. I think the VS2010-VS2013 compiler do this in
> getter by index, operator const char* or the whole GetAttrInfo(i) ==
> NULL ? NULL : aoAttrInfos[i]->osAcronym (maybe MS change the order
> parameter calculation or optimization). Maybe const (operator const
> char* (void) const) in non const (const char *GetAttrAcronym( int i ))
> function VS2010-VS2013 specific behaviour.
> 
> OK, I fire the ticket. As I have committer rights, my I add changes,
> corresponding to the ticket?

Yes, Dmitriy, please commit your change (GetAttrName() would need the same 
change also). Hopefully, it will solve the failure on ogr_s57_6 that have been 
seen in http://www.gisinternals.com/sdk/build-output/vc10-20131204-5-52-50-84-
vc10-dev.txt since a few weeks and I couldn't understand.
And actually this must be related to one of my latest change in the S57 driver 
where I've restructured that area a bit to gain thread-safety.
I'm not sure if VS2010 is right or wrong in doing what it does, but if the 
.c_str() fix the issue, that's always good to have !

Even

> 
> Best regards,
>      Dmitry
> 
> 05.12.2013 0:19, Frank Warmerdam ?????:
> > Dmitriy,
> > 
> > It is not clear to me why this should be necessary.  osAcronym is a
> > long lived std::string (well CPLString derived from std::string)
> > living in the registrars attribute list.  I assume the following
> > method is used to convert the CPLString to "const char *" which should
> > amount to the same thing you did.
> > 
> >     operator const char* (void) const { return c_str(); }
> > 
> > Perhaps there is some subtle reason I don't see that the compiler is
> > creating a temporary std::string in between?
> > 
> > In any event, if you file a ticket I can apply this change upstream.
> > 
> >  There are other accessors on the same class that look like they could
> > 
> > have similar issues.
> > 
> > Best regards,
> > Frank
> > 
> > 
> > On Wed, Dec 4, 2013 at 12:11 PM, Dmitriy Baryshnikov
> > 
> > <bishop.dev at gmail.com <mailto:bishop.dev at gmail.com>> wrote:
> >     Hi,
> >     
> >     I have such error: the GDAL compiled with VS2010-VS2013 in s57
> >     driver loose all additional fields values. But the same code
> >     compiled with gcc or previous VS works fine.
> >     I found the root of problems here
> >     
> >     (ogr\ogrsf_frmts\s57\s57reader.cpp:932):
> >         const char *pszAcronym = poRegistrar->GetAttrAcronym(nAttrId);
> >         iField = poFeature->GetDefnRef()->GetFieldIndex(pszAcronym);
> >     
> >     The pszAcronym always empty.
> >     
> >     The problem comes from this function (ogr\ogrsf_frmts\s57\s57.h:140):
> >         const char *GetAttrAcronym( int i )
> >         
> >             { return GetAttrInfo(i) == NULL ? NULL :
> >         aoAttrInfos[i]->osAcronym; }
> >     
> >     It seems to me that during execution this function I have
> >     
> >     |situation when||c_str()|result becomes invalid
> >     
> >     (the|std::string|is destroyed or a non-const member function of
> >     the string is called).
> >     
> >     If I change function
> >     
> >         const char *GetAttrAcronym( int i )
> >         
> >             { return GetAttrInfo(i) == NULL ? NULL :
> >         aoAttrInfos[i]->osAcronym.c_str(); }
> >     
> >     the problem gone.
> >     
> >     So I need some confirmation/verification my ideas.
> >     If I'm right, I can make changes to s57 driver.
> >     
> >     Best regards,
> >     
> >          Dmitry
> >     
> >     ---------------------------------------------------------------------
> >     --- <http://www.avast.com/>
> >     
> >     ??? ????????? ???????? ?? ??????? ? ???????????? ?? ?????????
> >     avast! Antivirus <http://www.avast.com/> ?????? ???????.
> >     
> >     
> >     
> >     _______________________________________________
> >     gdal-dev mailing list
> >     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
> >     http://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> ---
> ??? ????????? ???????? ?? ??????? ? ???????????? ?? ????????? ?????? ??
> ??????? avast! http://www.avast.com

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From go2viena at gmx.com  Thu Dec  5 06:43:27 2013
From: go2viena at gmx.com (go2viena at gmx.com)
Date: Thu, 05 Dec 2013 15:43:27 +0100
Subject: [gdal-dev] What GDAL BUILDVRT utility does in case of overlapped
 pixels while mosaicking georeferenced images?
Message-ID: <20131205144328.305200@gmx.com>

Hi GDAL Developers:
During mosaicking numerous georeferenced images using the BUILDVRT utility (http://www.gdal.org/gdalbuildvrt.html ), what this tool does in case of overlapped pixels: does it calculate mean values for all the overlapped pixels and that mean value is resulted in final mosaicked image? OR anything else?
I want to make sure about the actual method behind this utility.
Thanks.
nils
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131205/f5b467c5/attachment.html>

From jukka.rahkonen at mmmtike.fi  Thu Dec  5 07:18:16 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Thu, 5 Dec 2013 15:18:16 +0000 (UTC)
Subject: [gdal-dev] What GDAL BUILDVRT utility does in case of
	overlapped pixels while mosaicking georeferenced images?
References: <20131205144328.305200@gmx.com>
Message-ID: <loom.20131205T161540-990@post.gmane.org>

 <go2viena <at> gmx.com> writes:

> 
> Hi GDAL Developers:
> ?
> During mosaicking numerous?georeferenced images using the?BUILDVRT
utility?(http://www.gdal.org/gdalbuildvrt.html), what this tool does in case
of overlapped pixels: does it calculate mean values for all the overlapped
pixels and that mean value is resulted in final mosaicked image? OR anything
else?
> I want to make sure about the actual method behind this utility.

Hi,

Nothing so intelligent if I am not wrong. Pixels from the latest image in
the VRT file will be used.

-Jukka Rahkonen-


From ammar83_h at yahoo.com  Thu Dec  5 07:21:10 2013
From: ammar83_h at yahoo.com (Ammar)
Date: Thu, 5 Dec 2013 07:21:10 -0800 (PST)
Subject: [gdal-dev] Tiling and Overviews disappear after compressing with LZW
In-Reply-To: <1386256814.5947.YahooMailNeo@web163002.mail.bf1.yahoo.com>
References: <mailman.582.1386241008.24729.gdal-dev@lists.osgeo.org>
	<1386241833.44053.YahooMailNeo@web163005.mail.bf1.yahoo.com>
	<1386256814.5947.YahooMailNeo@web163002.mail.bf1.yahoo.com>
Message-ID: <1386256870.1521.YahooMailNeo@web163004.mail.bf1.yahoo.com>

Hello list,


I am new to GDAL and I have been using the utilities to process and prepare TIFF? to create a mosaic in Geoserver. I am expermineting with different compression methods and I have noticed that after compressing a file with LZW, the previously created tiles and overviews disappear!

?what I did was:

gdal_translate -a_srs "EPSG:3011" -co "TILED=YES" -co "BLOCKXSIZE=512" -co "BLOCKYSIZE=512" in.tif out.tif


gdaladdo -r average file.tif 2 4 8 16 32??? //Adding the overviews

gdal_translate -co compress=LZW in.tif out.tif

After the compression, I got the original block size and with no overviews!

Any ideas, thoughts or tips will be appreciated.

//Ammar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131205/7b3e7fa6/attachment.html>

From giuseppe.amatulli at gmail.com  Thu Dec  5 07:16:30 2013
From: giuseppe.amatulli at gmail.com (Giuseppe Amatulli)
Date: Thu, 5 Dec 2013 10:16:30 -0500
Subject: [gdal-dev] LAS support
In-Reply-To: <CABUeae9KD0ZYKj0y3RYh+1mu2s+K-n2Goaq6m2ja=4MMFRs=PQ@mail.gmail.com>
References: <CAP6xJca1TGozsUYeocU-++LP4YVErDtv4jcbRgt3gEZMyaXAWQ@mail.gmail.com>
	<CABUeae_=og_1HZb2M24zZ3df7ArzzH-XJA8Qa9+L2_YkU55t0g@mail.gmail.com>
	<CAP6xJcY3xfbYXeBskDY2VVdN5mPmPvOdxZXcg58XARNULG73gA@mail.gmail.com>
	<201311291939.18710.even.rouault@mines-paris.org>
	<CABUeae9KD0ZYKj0y3RYh+1mu2s+K-n2Goaq6m2ja=4MMFRs=PQ@mail.gmail.com>
Message-ID: <CAKoiDHLww0NwodLvTPbF=3jfqwrcRGyvpkpyKa2AZWK3dbmdxA@mail.gmail.com>

Hi,
just to let you know that pktools (
http://www.nongnu.org/pktools/html/index.html) in particular
pklas2img support the las file to create dem.
Best
-- 
Giuseppe Amatulli, Ph.D.

Center for Earth Observation
ESC Room 119A
Yale University
P.O. Box 208109
New Haven, CT, 06520-8109
Teaching: spatial-ecology.net
Work:  http://sbsc.yale.edu/training-and-support


On 29 November 2013 15:53, Mateusz Loskot <mateusz at loskot.net> wrote:

> On 29 November 2013 18:39, Even Rouault <even.rouault at mines-paris.org>
> wrote:
> > Le vendredi 29 novembre 2013 18:35:28, Rui L. Pires a ?crit :
> >> On 29 November 2013 11:44, Mateusz Loskot <mateusz at loskot.net> wrote:
> >> > On 29 November 2013 10:32, Rui L. Pires <rlpires at gmail.com> wrote:
> >> > > I was approaching this issue and particularly OGR as a solution for
> >> > > data conversion and reduction. I am quite fond of the functionality
> >> > > OGRLayer makes possible in a transparent way, such as reprojection
> and
> >> > > spatial querying.
> >> >
> >> > Those are valid use cases of course and I don't argue here.
> >> > Just, since OGR is an abstraction layer and point clouds are enormous,
> >> > I wouldn't expect high performance.
> >> > That's why, IMHO, point clouds require dedicated toolkits (PDAL, PCL).
> >>
> >> Hi Mateusz,
> >>
> >> I understand your point regarding performance but I consider that to be
> a
> >> driver issue. My point is functionality before speed.
> >>
> >> Perhaps, you can try las2ogr to see how OGR in general will work for
> your
> >>
> >> > uses.
> >> > Besides, writing OGR driver with libLAS (or PDAL) should be feasible.
> >>
> >> Indeed it is feasible. It's running fine here! ;-)
> >
> > I'm not versed in lidar or point clouds to know if it is really
> relevant, but
> > it is true that OGR has drivers for stuff that aren't strictly vector
> formats.
> > And as las2ogr exists, I also imagine that an OGR driver should be
> doable.
> > So it would not be completely out of topic to have a OGR driver based on
> > libLAS or PDAL
>
> Sure. As I've said, I somewhat changed my opinion on that lately :-)
>
> > (the question is : should it be based on libLAS or PDAL ? Any
> > opinion on this ?)
>
> AFAICT, it should be PDAL as libLAS is considered as deprecated
> and not actively maintained. But, I'll leave this to Hobu to confirm.
>
> > A potential problem is that libLAS and PDAL have GDAL as a build
> dependency,
> > so a OGR driver would need to be compiled as a plugin (same as GRASS
> plugin
> > for example).
>
> That's right.
>
> Best regards,
> --
> Mateusz  ?oskot, http://mateusz.loskot.net
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131205/5f17b49e/attachment-0001.html>

From schut at sarvision.nl  Thu Dec  5 07:39:02 2013
From: schut at sarvision.nl (Vincent Schut)
Date: Thu, 05 Dec 2013 16:39:02 +0100
Subject: [gdal-dev] Tiling and Overviews disappear after compressing
 with LZW
In-Reply-To: <1386256870.1521.YahooMailNeo@web163004.mail.bf1.yahoo.com>
References: <mailman.582.1386241008.24729.gdal-dev@lists.osgeo.org>	<1386241833.44053.YahooMailNeo@web163005.mail.bf1.yahoo.com>	<1386256814.5947.YahooMailNeo@web163002.mail.bf1.yahoo.com>
	<1386256870.1521.YahooMailNeo@web163004.mail.bf1.yahoo.com>
Message-ID: <52A09E16.9070105@sarvision.nl>

On 12/05/13 16:21, Ammar wrote:
> Hello list,
>
> I am new to GDAL and I have been using the utilities to process and 
> prepare TIFF  to create a mosaic in Geoserver. I am expermineting with 
> different compression methods and I have noticed that after 
> compressing a file with LZW, the previously created tiles and 
> overviews disappear!
>  what I did was:
>
> gdal_translate -a_srs "EPSG:3011" -co "TILED=YES" -co "BLOCKXSIZE=512" 
> -co "BLOCKYSIZE=512" in.tif out.tif
>
> gdaladdo -r average file.tif 2 4 8 16 32//Adding the overviews
>
> gdal_translate -co compress=LZW in.tif out.tif
>
> After the compression, I got the original block size and with no 
> overviews!
>
> Any ideas, thoughts or tips will be appreciated.

Hello Ammar,

the default for gdal_translate is no tiling, no compression, and don't 
copy overviews. So your last gdal_translate command effectively removes 
all tiling, overviews and compression. If you want to have a tiled and 
compressed file, add the '-co compress=lzw" to your first gdal_translate 
command, which will create a tiled and compressed 'out.tif'. Then add 
overviews to that with gdaladdo. If I'm not mistaken, the overviews use 
the settings from the main dataset, so would also use lzw compression.

Best,
Vincent Schut.
>
> //Ammar
>
>
>
>
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131205/2754df2b/attachment.html>

From schut at sarvision.nl  Thu Dec  5 07:48:27 2013
From: schut at sarvision.nl (Vincent Schut)
Date: Thu, 05 Dec 2013 16:48:27 +0100
Subject: [gdal-dev] Tiling and Overviews disappear after compressing
 with LZW
In-Reply-To: <52A09E16.9070105@sarvision.nl>
References: <mailman.582.1386241008.24729.gdal-dev@lists.osgeo.org>	<1386241833.44053.YahooMailNeo@web163005.mail.bf1.yahoo.com>	<1386256814.5947.YahooMailNeo@web163002.mail.bf1.yahoo.com>	<1386256870.1521.YahooMailNeo@web163004.mail.bf1.yahoo.com>
	<52A09E16.9070105@sarvision.nl>
Message-ID: <52A0A04B.1050005@sarvision.nl>

On 12/05/13 16:39, Vincent Schut wrote:
> On 12/05/13 16:21, Ammar wrote:
>> Hello list,
>>
>> I am new to GDAL and I have been using the utilities to process and 
>> prepare TIFF  to create a mosaic in Geoserver. I am expermineting 
>> with different compression methods and I have noticed that after 
>> compressing a file with LZW, the previously created tiles and 
>> overviews disappear!
>>  what I did was:
>>
>> gdal_translate -a_srs "EPSG:3011" -co "TILED=YES" -co 
>> "BLOCKXSIZE=512" -co "BLOCKYSIZE=512" in.tif out.tif
>>
>> gdaladdo -r average file.tif 2 4 8 16 32//Adding the overviews
>>
>> gdal_translate -co compress=LZW in.tif out.tif
>>
>> After the compression, I got the original block size and with no 
>> overviews!
>>
>> Any ideas, thoughts or tips will be appreciated.
>
> Hello Ammar,
>
> the default for gdal_translate is no tiling, no compression, and don't 
> copy overviews. So your last gdal_translate command effectively 
> removes all tiling, overviews and compression. If you want to have a 
> tiled and compressed file, add the '-co compress=lzw" to your first 
> gdal_translate command, which will create a tiled and compressed 
> 'out.tif'. Then add overviews to that with gdaladdo. If I'm not 
> mistaken, the overviews use the settings from the main dataset, so 
> would also use lzw compression.
>
> Best,
> Vincent Schut.

Correction: that should of course read: "So your last gdal_translate 
command effectively removes all tiling and overviews, while adding lzw 
compression."
>>
>> //Ammar
>>
>>
>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131205/ccd14312/attachment-0001.html>

From jukka.rahkonen at mmmtike.fi  Thu Dec  5 09:58:28 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Thu, 5 Dec 2013 17:58:28 +0000 (UTC)
Subject: [gdal-dev] Tiling and Overviews disappear after compressing
	with LZW
References: <mailman.582.1386241008.24729.gdal-dev@lists.osgeo.org>
	<1386241833.44053.YahooMailNeo@web163005.mail.bf1.yahoo.com>
	<1386256814.5947.YahooMailNeo@web163002.mail.bf1.yahoo.com>
	<1386256870.1521.YahooMailNeo@web163004.mail.bf1.yahoo.com>
Message-ID: <loom.20131205T183428-663@post.gmane.org>

Ammar <ammar83_h <at> yahoo.com> writes:

> 
> Hello list,

> 
> I am new to GDAL and I have been using the utilities to process and
prepare TIFF? to create a mosaic in Geoserver. I am
>  expermineting with different
>  compression methods and I have noticed that after compressing a file with
LZW, the previously created tiles and overviews disappear!

Hi,

Experimenting is good but reading manuals is not a bad idea either. I
recommend these Geoserver recipes
http://www.slideshare.net/geosolutions/gs-steroids-sgiannecfoss4g20130103

The gdaladdo manual page http://www.gdal.org/gdaladdo.html seems to need
some improvements but is is still worth reading.

Gdal_translate writes always a new file, it does not improve something
existing. Gdaladdo behaves a bit differently and it add overviews into
existing geotiff.

Good defaults for aerial images is to run first

gdal_translate -of GTiff -co tiled=yes -co compress=jpeg -co
PHOTOMETRIC=YCBCR in.tif out.tif

and then 
gdaladdo --config COMPRESS_OVERVIEW JPEG --config PHOTOMETRIC_OVERVIEW YCBCR
         --config INTERLEAVE_OVERVIEW PIXEL out.tif 2 4 8 16

For raster maps jpeg compression is not ideal. Experiment with compression
methods (or stay with uncompressed if you have space), resampling options
and consider if you want to use internal or external overviews (-ro). Both
behave in a similar way but building internal overviews saves some disk
space. On the other hand external overviews can be removed easily if you
want to have a try with different parameters. 

-Jukka Rahkonen-


From ammar83_h at yahoo.com  Fri Dec  6 02:13:43 2013
From: ammar83_h at yahoo.com (Ammar)
Date: Fri, 6 Dec 2013 02:13:43 -0800 (PST)
Subject: [gdal-dev] Tiling and Overviews disappear after compressing
	with LZW
In-Reply-To: <52A0A04B.1050005@sarvision.nl>
References: <mailman.582.1386241008.24729.gdal-dev@lists.osgeo.org>	<1386241833.44053.YahooMailNeo@web163005.mail.bf1.yahoo.com>	<1386256814.5947.YahooMailNeo@web163002.mail.bf1.yahoo.com>	<1386256870.1521.YahooMailNeo@web163004.mail.bf1.yahoo.com>	<52A09E16.9070105@sarvision.nl>
	<52A0A04B.1050005@sarvision.nl>
Message-ID: <1386324823.85998.YahooMailNeo@web163003.mail.bf1.yahoo.com>

Vincent,

Thank you very much for your reply. I did what you suggested and it worked! :)

Regards,
Ammar




________________________________
 From: Vincent Schut <schut at sarvision.nl>
To: gdal-dev at lists.osgeo.org 
Sent: Thursday, December 5, 2013 4:48 PM
Subject: Re: [gdal-dev] Tiling and Overviews disappear after compressing with LZW
 


On 12/05/13 16:39, Vincent Schut wrote:

On 12/05/13 16:21, Ammar wrote:
>
>Hello list, 
>>
>>
>>I am new to GDAL and I have been using the utilities to process and prepare TIFF? to create a mosaic in Geoserver. I am expermineting with different compression methods and I have noticed that after compressing a file with LZW, the previously created tiles and overviews disappear!
>>
>>?what I did was:
>>
>>
>>gdal_translate -a_srs "EPSG:3011" -co "TILED=YES" -co "BLOCKXSIZE=512" -co "BLOCKYSIZE=512" in.tif out.tif
>>
>>
>>
>>gdaladdo -r average file.tif 2 4 8 16 32??? //Adding the overviews
>>
>>
>>gdal_translate -co compress=LZW in.tif out.tif
>>
>>
>>After the compression, I got the original block size and with no overviews!
>>
>>
>>Any ideas, thoughts or tips will be appreciated.
>Hello Ammar,
>
>the default for gdal_translate is no tiling, no compression, and
      don't copy overviews. So your last gdal_translate command
      effectively removes all tiling, overviews and compression. If you
      want to have a tiled and compressed file, add the '-co
      compress=lzw" to your first gdal_translate command, which will
      create a tiled and compressed 'out.tif'. Then add overviews to
      that with gdaladdo. If I'm not mistaken, the overviews use the
      settings from the main dataset, so would also use lzw compression.
>
>Best,
>Vincent Schut.
>
Correction: that should of course read: "So your last gdal_translate
    command effectively removes all tiling and overviews, while adding
    lzw compression."


>>
>>//Ammar
>>
>>
>>
>>
>>
>>
>>
>>
>>
>>_______________________________________________
gdal-dev mailing list gdal-dev at lists.osgeo.org http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>_______________________________________________
gdal-dev mailing list gdal-dev at lists.osgeo.org http://lists.osgeo.org/mailman/listinfo/gdal-dev

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131206/c7045bc0/attachment.html>

From ammar83_h at yahoo.com  Fri Dec  6 02:44:51 2013
From: ammar83_h at yahoo.com (Ammar)
Date: Fri, 6 Dec 2013 02:44:51 -0800 (PST)
Subject: [gdal-dev] Tiling and Overviews disappear after
	compressing	with LZW
In-Reply-To: <loom.20131205T183428-663@post.gmane.org>
References: <mailman.582.1386241008.24729.gdal-dev@lists.osgeo.org>	<1386241833.44053.YahooMailNeo@web163005.mail.bf1.yahoo.com>	<1386256814.5947.YahooMailNeo@web163002.mail.bf1.yahoo.com>	<1386256870.1521.YahooMailNeo@web163004.mail.bf1.yahoo.com>
	<loom.20131205T183428-663@post.gmane.org>
Message-ID: <1386326691.92805.YahooMailNeo@web163005.mail.bf1.yahoo.com>

Jukka,

Thank you very much for your reply and tips. I have already gone over the GeoServer on Steroids, which is a very good and informative document. 

Best regards,
Ammar




________________________________
 From: Jukka Rahkonen <jukka.rahkonen at mmmtike.fi>
To: gdal-dev at lists.osgeo.org 
Sent: Thursday, December 5, 2013 6:58 PM
Subject: Re: [gdal-dev] Tiling and Overviews disappear after compressing	with LZW
 

Ammar <ammar83_h <at> yahoo.com> writes:

> 
> Hello list,

> 
> I am new to GDAL and I have been using the utilities to process and
prepare TIFF? to create a mosaic in Geoserver. I am
>? expermineting with different
>? compression methods and I have noticed that after compressing a file with
LZW, the previously created tiles and overviews disappear!

Hi,

Experimenting is good but reading manuals is not a bad idea either. I
recommend these Geoserver recipes
http://www.slideshare.net/geosolutions/gs-steroids-sgiannecfoss4g20130103

The gdaladdo manual page http://www.gdal.org/gdaladdo.html seems to need
some improvements but is is still worth reading.

Gdal_translate writes always a new file, it does not improve something
existing. Gdaladdo behaves a bit differently and it add overviews into
existing geotiff.

Good defaults for aerial images is to run first

gdal_translate -of GTiff -co tiled=yes -co compress=jpeg -co
PHOTOMETRIC=YCBCR in.tif out.tif

and then 
gdaladdo --config COMPRESS_OVERVIEW JPEG --config PHOTOMETRIC_OVERVIEW YCBCR
? ? ? ?  --config INTERLEAVE_OVERVIEW PIXEL out.tif 2 4 8 16

For raster maps jpeg compression is not ideal. Experiment with compression
methods (or stay with uncompressed if you have space), resampling options
and consider if you want to use internal or external overviews (-ro). Both
behave in a similar way but building internal overviews saves some disk
space. On the other hand external overviews can be removed easily if you
want to have a try with different parameters. 

-Jukka Rahkonen-

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131206/760bdff1/attachment-0001.html>

From etourigny.dev at gmail.com  Fri Dec  6 07:18:44 2013
From: etourigny.dev at gmail.com (Etienne Tourigny)
Date: Fri, 6 Dec 2013 13:18:44 -0200
Subject: [gdal-dev] how to aggregate an image to a lower resolution
 using gdal (gdalwarp?)
In-Reply-To: <CALjAYt6NKOviEg4iZhQMftSad7jhc3_iXTFbH-abY2WHyC0ZAg@mail.gmail.com>
References: <CE427279.7C14%jan.verbesselt@wur.nl>
	<CALjAYt71wViURsnvtvytAX1HkfmDEO2ndsv=w-apKfFGJEXimQ@mail.gmail.com>
	<CA+TxYvNvx+S+P6Hu_xQ8uMVhV5tEsHOvvcAOpwwPNxzUAPKD3w@mail.gmail.com>
	<CALjAYt6NKOviEg4iZhQMftSad7jhc3_iXTFbH-abY2WHyC0ZAg@mail.gmail.com>
Message-ID: <CA+TxYvPxHCmV2qHNXxc3apPu_q7UcUs86Me+wiK1tv6FUkwhoQ@mail.gmail.com>

Jan, can you please add your sample dataset and comments in that ticket?

Etienne


On Tue, Dec 3, 2013 at 6:37 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:

> I added a ticket http://trac.osgeo.org/gdal/ticket/5311
>
> Etienne
>
>
> 2013/12/2 Etienne Tourigny <etourigny.dev at gmail.com>
>
>> The "average" resampling mode of gdalwarp does "average resampling,
>> computes the average of all non-NODATA contributing pixels".
>>
>> It was meant to compute the average of all the pixels in the "aggregation
>> window". However, it may have issues in the corners.
>>
>> I am the author of the average and mode algorithms, and I basically
>> copied the aggregation logic from the other algorithms (i.e. which pixels
>> are selected for the aggregation), so there may be something wrong in the
>> logic.
>>
>> Certainly, looking at this simple example shows that something is wrong.
>>
>> I tested average and mode resampling with a fairly large dataset and did
>> not find these problems.
>>
>> Can you create a new bug in the tracker and upload the scripts and data
>> used?  I don't have much (any) time to work on this but would be happy to
>> apply a working patch.
>>
>> Cheers, Etienne
>>
>>
>> On Mon, Dec 2, 2013 at 12:22 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:
>>
>>> I've tried to dig this a bit. I couldn't understand the logic behind
>>> gdal aggregation (or downsampling). I've simplified your example using a
>>> smaller raster and deterministic values. Maybe someone could enlighten us
>>> by looking at the aggregation values ? Note that the lower right cells
>>> values were identical in all dimensions I've tried (about 4 - 10).
>>>
>>> The example is run on GDAL 1.11dev, released 2013/04/13
>>>
>>> Thanks,
>>> Etienne
>>>
>>> # in R:
>>>
>>> require(raster)
>>> filei <- '10by10.tif'
>>> fileo <- '5by5.tif'
>>>
>>> dm = 4
>>> r <- raster(matrix(1:(dm^2), dm, dm))
>>>
>>>
>>> writeRaster(r, filename=filei, overwrite = TRUE)
>>>
>>> ## aggregate using R aggregate function using the mean
>>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>>
>>> file.remove(fileo)
>>> cmd <- paste("gdalwarp -r average -tr", paste(res(r1), collapse = " "),
>>> filei, fileo)
>>> system(cmd)
>>> r2 <- raster(fileo)
>>>
>>> >as.matrix(r)
>>>      [,1] [,2] [,3] [,4]
>>> [1,]    1    5    9   13
>>> [2,]    2    6   10   14
>>> [3,]    3    7   11   15
>>> [4,]    4    8   12   16
>>> > lapply(list(r1, r2, r2-r1), as.matrix)
>>> [[1]]
>>>      [,1] [,2]
>>> [1,]  3.5 11.5
>>> [2,]  5.5 13.5
>>>
>>> [[2]]
>>>      [,1] [,2]
>>> [1,]  6.0 12.0
>>> [2,]  7.5 13.5
>>>
>>> [[3]]
>>>      [,1] [,2]
>>> [1,]  2.5  0.5
>>> [2,]  2.0  0.0
>>>
>>>
>>> 2013/8/27 Verbesselt, Jan <jan.verbesselt at wur.nl>
>>>
>>> Hi all,
>>>>
>>>> I have been testing gdalwarp to aggregate (using -r average) an image.
>>>> In order to better understand what is happening I have created a
>>>> reproducible example within an R environment and compared it with the
>>>> aggregate function of the R raster package (see below). There are some
>>>> differences between the gdalwarp raster (r2) and the aggregated raster
>>>> (r1).
>>>>
>>>> How is the gdalwarp -r average working? Which pixels are selected for
>>>> averaging (e.g.the corner pixels, center pixels, or all within the
>>>> aggregation window)?
>>>>
>>>> If there is a gdal aggregate option to average pixels comparable to the
>>>> aggregate function in the R raster package, it would be great as that
>>>> would potentially faster, and you could also reproject and aggregate at
>>>> once.
>>>>
>>>> Thanks!
>>>> Jan
>>>>
>>>> http://bfast.r-forge.r-project.org
>>>> http://goo.gl/1mBC5F
>>>>
>>>>
>>>> ## R script
>>>> require(raster)
>>>> filei <- '10by10.tif'
>>>> fileo <- '5by5.tif'
>>>>
>>>> set.seed(123)
>>>> r <- raster(ncols=36, nrows=18)
>>>> r <- setValues(r, round(runif(ncell(r))*10))
>>>> r
>>>> plot(r)
>>>> writeRaster(r, filename=filei, overwrite = TRUE)
>>>>
>>>> ## aggregate using R aggregate function using the mean
>>>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>>>
>>>> cmd <- paste("gdalwarp -r average -tr 20 20 -te -180 -90 180 90 ",
>>>>              filei, " ", fileo, sep = "")
>>>> system(cmd)
>>>> r2 <- raster(fileo)
>>>>
>>>> ## compare
>>>> plot(r1)
>>>> plot(r2)
>>>> r1
>>>> r2
>>>> getValues(r1)
>>>> getValues(r2)
>>>>
>>>> ##
>>>> plot(r1-r2)
>>>> sessionInfo()
>>>>
>>>> R> sessionInfo()
>>>> R version 3.0.1 (2013-05-16)
>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>>
>>>> locale:
>>>>  [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C         LC_TIME=C
>>>> LC_COLLATE=C         LC_MONETARY=C
>>>>  [6] LC_MESSAGES=C        LC_PAPER=C           LC_NAME=C
>>>> LC_ADDRESS=C         LC_TELEPHONE=C
>>>> [11] LC_MEASUREMENT=C     LC_IDENTIFICATION=C
>>>>
>>>> attached base packages:
>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>
>>>> other attached packages:
>>>> [1] rgdal_0.8-10  raster_2.1-49 sp_1.0-11
>>>>
>>>> loaded via a namespace (and not attached):
>>>> [1] grid_3.0.1      lattice_0.20-23 tools_3.0.1
>>>>
>>>>
>>>> rgdal: version: 0.8-10, (SVN revision 478)
>>>> Geospatial Data Abstraction Library extensions to R successfully loaded
>>>> Loaded GDAL runtime: GDAL 1.10.0, released 2013/04/24
>>>> Path to GDAL shared files: /usr/share/gdal/1.10
>>>> Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>>>> Path to PROJ.4 shared files: (autodetected)
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>
>>>
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131206/40b14b61/attachment.html>

From etiennebr at gmail.com  Fri Dec  6 07:58:11 2013
From: etiennebr at gmail.com (Etienne B. Racine)
Date: Fri, 6 Dec 2013 10:58:11 -0500
Subject: [gdal-dev] how to aggregate an image to a lower resolution
 using gdal (gdalwarp?)
In-Reply-To: <CA+TxYvPxHCmV2qHNXxc3apPu_q7UcUs86Me+wiK1tv6FUkwhoQ@mail.gmail.com>
References: <CE427279.7C14%jan.verbesselt@wur.nl>
	<CALjAYt71wViURsnvtvytAX1HkfmDEO2ndsv=w-apKfFGJEXimQ@mail.gmail.com>
	<CA+TxYvNvx+S+P6Hu_xQ8uMVhV5tEsHOvvcAOpwwPNxzUAPKD3w@mail.gmail.com>
	<CALjAYt6NKOviEg4iZhQMftSad7jhc3_iXTFbH-abY2WHyC0ZAg@mail.gmail.com>
	<CA+TxYvPxHCmV2qHNXxc3apPu_q7UcUs86Me+wiK1tv6FUkwhoQ@mail.gmail.com>
Message-ID: <CALjAYt4KhWkR35fd7047jM0XJO3gRJGaYjkgr+G3=RDZ=ABSeg@mail.gmail.com>

Etienne, I've added the relevant files. I think it's sufficient to debug
the function, but if you think it might be helpful, I could add a larger
raster and the results of the aggregation.

Etienne


2013/12/6 Etienne Tourigny <etourigny.dev at gmail.com>

> Jan, can you please add your sample dataset and comments in that ticket?
>
> Etienne
>
>
> On Tue, Dec 3, 2013 at 6:37 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:
>
>> I added a ticket http://trac.osgeo.org/gdal/ticket/5311
>>
>> Etienne
>>
>>
>> 2013/12/2 Etienne Tourigny <etourigny.dev at gmail.com>
>>
>>> The "average" resampling mode of gdalwarp does "average resampling,
>>> computes the average of all non-NODATA contributing pixels".
>>>
>>> It was meant to compute the average of all the pixels in the "aggregation
>>> window". However, it may have issues in the corners.
>>>
>>> I am the author of the average and mode algorithms, and I basically
>>> copied the aggregation logic from the other algorithms (i.e. which pixels
>>> are selected for the aggregation), so there may be something wrong in the
>>> logic.
>>>
>>> Certainly, looking at this simple example shows that something is wrong.
>>>
>>>
>>> I tested average and mode resampling with a fairly large dataset and did
>>> not find these problems.
>>>
>>> Can you create a new bug in the tracker and upload the scripts and data
>>> used?  I don't have much (any) time to work on this but would be happy to
>>> apply a working patch.
>>>
>>> Cheers, Etienne
>>>
>>>
>>> On Mon, Dec 2, 2013 at 12:22 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:
>>>
>>>> I've tried to dig this a bit. I couldn't understand the logic behind
>>>> gdal aggregation (or downsampling). I've simplified your example using a
>>>> smaller raster and deterministic values. Maybe someone could enlighten us
>>>> by looking at the aggregation values ? Note that the lower right cells
>>>> values were identical in all dimensions I've tried (about 4 - 10).
>>>>
>>>> The example is run on GDAL 1.11dev, released 2013/04/13
>>>>
>>>> Thanks,
>>>> Etienne
>>>>
>>>> # in R:
>>>>
>>>> require(raster)
>>>> filei <- '10by10.tif'
>>>> fileo <- '5by5.tif'
>>>>
>>>> dm = 4
>>>> r <- raster(matrix(1:(dm^2), dm, dm))
>>>>
>>>>
>>>> writeRaster(r, filename=filei, overwrite = TRUE)
>>>>
>>>> ## aggregate using R aggregate function using the mean
>>>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>>>
>>>> file.remove(fileo)
>>>> cmd <- paste("gdalwarp -r average -tr", paste(res(r1), collapse = " "),
>>>> filei, fileo)
>>>> system(cmd)
>>>> r2 <- raster(fileo)
>>>>
>>>> >as.matrix(r)
>>>>      [,1] [,2] [,3] [,4]
>>>> [1,]    1    5    9   13
>>>> [2,]    2    6   10   14
>>>> [3,]    3    7   11   15
>>>> [4,]    4    8   12   16
>>>> > lapply(list(r1, r2, r2-r1), as.matrix)
>>>> [[1]]
>>>>      [,1] [,2]
>>>> [1,]  3.5 11.5
>>>> [2,]  5.5 13.5
>>>>
>>>> [[2]]
>>>>      [,1] [,2]
>>>> [1,]  6.0 12.0
>>>> [2,]  7.5 13.5
>>>>
>>>> [[3]]
>>>>      [,1] [,2]
>>>> [1,]  2.5  0.5
>>>> [2,]  2.0  0.0
>>>>
>>>>
>>>> 2013/8/27 Verbesselt, Jan <jan.verbesselt at wur.nl>
>>>>
>>>> Hi all,
>>>>>
>>>>> I have been testing gdalwarp to aggregate (using -r average) an image.
>>>>> In order to better understand what is happening I have created a
>>>>> reproducible example within an R environment and compared it with the
>>>>> aggregate function of the R raster package (see below). There are some
>>>>> differences between the gdalwarp raster (r2) and the aggregated raster
>>>>> (r1).
>>>>>
>>>>> How is the gdalwarp -r average working? Which pixels are selected for
>>>>> averaging (e.g.the corner pixels, center pixels, or all within the
>>>>> aggregation window)?
>>>>>
>>>>> If there is a gdal aggregate option to average pixels comparable to the
>>>>> aggregate function in the R raster package, it would be great as that
>>>>> would potentially faster, and you could also reproject and aggregate at
>>>>> once.
>>>>>
>>>>> Thanks!
>>>>> Jan
>>>>>
>>>>> http://bfast.r-forge.r-project.org
>>>>> http://goo.gl/1mBC5F
>>>>>
>>>>>
>>>>> ## R script
>>>>> require(raster)
>>>>> filei <- '10by10.tif'
>>>>> fileo <- '5by5.tif'
>>>>>
>>>>> set.seed(123)
>>>>> r <- raster(ncols=36, nrows=18)
>>>>> r <- setValues(r, round(runif(ncell(r))*10))
>>>>> r
>>>>> plot(r)
>>>>> writeRaster(r, filename=filei, overwrite = TRUE)
>>>>>
>>>>> ## aggregate using R aggregate function using the mean
>>>>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>>>>
>>>>> cmd <- paste("gdalwarp -r average -tr 20 20 -te -180 -90 180 90 ",
>>>>>              filei, " ", fileo, sep = "")
>>>>> system(cmd)
>>>>> r2 <- raster(fileo)
>>>>>
>>>>> ## compare
>>>>> plot(r1)
>>>>> plot(r2)
>>>>> r1
>>>>> r2
>>>>> getValues(r1)
>>>>> getValues(r2)
>>>>>
>>>>> ##
>>>>> plot(r1-r2)
>>>>> sessionInfo()
>>>>>
>>>>> R> sessionInfo()
>>>>> R version 3.0.1 (2013-05-16)
>>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>>>
>>>>> locale:
>>>>>  [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C         LC_TIME=C
>>>>> LC_COLLATE=C         LC_MONETARY=C
>>>>>  [6] LC_MESSAGES=C        LC_PAPER=C           LC_NAME=C
>>>>> LC_ADDRESS=C         LC_TELEPHONE=C
>>>>> [11] LC_MEASUREMENT=C     LC_IDENTIFICATION=C
>>>>>
>>>>> attached base packages:
>>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>>
>>>>> other attached packages:
>>>>> [1] rgdal_0.8-10  raster_2.1-49 sp_1.0-11
>>>>>
>>>>> loaded via a namespace (and not attached):
>>>>> [1] grid_3.0.1      lattice_0.20-23 tools_3.0.1
>>>>>
>>>>>
>>>>> rgdal: version: 0.8-10, (SVN revision 478)
>>>>> Geospatial Data Abstraction Library extensions to R successfully loaded
>>>>> Loaded GDAL runtime: GDAL 1.10.0, released 2013/04/24
>>>>> Path to GDAL shared files: /usr/share/gdal/1.10
>>>>> Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>>>>> Path to PROJ.4 shared files: (autodetected)
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> gdal-dev mailing list
>>>>> gdal-dev at lists.osgeo.org
>>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>>
>>>>
>>>>
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131206/4d5289ad/attachment-0001.html>

From skunkmyrddyn at gmail.com  Fri Dec  6 08:39:37 2013
From: skunkmyrddyn at gmail.com (Simon Shak)
Date: Fri, 6 Dec 2013 10:39:37 -0600
Subject: [gdal-dev] Nodata and compression artifacts
In-Reply-To: <CAJuTQSE9OM1tUspWQz8dasnCPnsHHzfYugOdGtj+BpU3EBQzOw@mail.gmail.com>
References: <CAJuTQSGs23=fbvNteE5P8mHsQrmTi-K7EHyMzi2zgYqkkyXY=A@mail.gmail.com>
	<201311252233.16874.even.rouault@mines-paris.org>
	<CAJuTQSGgyNdMzj1GqMSFwGkG0o2H+D84g1-DzPfk9Jc+YS_pxA@mail.gmail.com>
	<201311252244.48424.even.rouault@mines-paris.org>
	<CAJuTQSE9OM1tUspWQz8dasnCPnsHHzfYugOdGtj+BpU3EBQzOw@mail.gmail.com>
Message-ID: <CAJuTQSF98EYarO8zNxc9dWvE_JMy3FTToiVAiJrso-5UV_57rQ@mail.gmail.com>

I'm trying to get the VRT file to work.  I used gdalbuildvrt to create the
information from both files, and then by hand performed a merge of the
extra band into the original, but when I try to use gdal_translate or
gdalwarp to test if the files are reading appropriately, I'm getting an
"empty" file with enough filesize to have all the pixels.  Viewing it shows
nothing even if I remap the bands.
My process is I take the .sid, use gdal_translate to scale it down into an
uncompressed GTiff so I can create a mask efficiently (I know it won't be a
100% match, but this should work for my purposes).  I use imagemagick to
create the alpha channel and save it to the mask.tif and then another
gdal_translate to rebind the geotag into the tif.

The VRT file I've created is as follows:

<VRTDataset rasterXSize="65457" rasterYSize="56333">
  <SRS>PROJCS["NAD83 / UTM zone
10N",GEOGCS["NAD83",DATUM["North_American_Datum_1983",SPHEROID["GRS
1980",6378137,298.2572221010002,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","6269"]],PRIMEM["Greenwich",0],UNIT["degree",0.0174532925199433],AUTHORITY["EPSG","4269"]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",0],PARAMETER["central_meridian",-123],PARAMETER["scale_factor",0.9996],PARAMETER["false_easting",500000],PARAMETER["false_northing",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]],AUTHORITY["EPSG","26910"]]</SRS>
  <GeoTransform> 4.2990600000000000e+005, 1.0000000000000000e+000,
0.0000000000000000e+000, 4.9556800000000000e+006,
0.0000000000000000e+000,-1.0000000000000000e+000</GeoTransform>
  <VRTRasterBand dataType="Byte" band="1">
    <ColorInterp>Red</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">RGBFile.sid</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="65457" RasterYSize="56333"
DataType="Byte" BlockXSize="1024" BlockYSize="128" />
      <SrcRect xOff="0" yOff="0" xSize="65457" ySize="56333" />
      <DstRect xOff="0" yOff="0" xSize="65457" ySize="56333" />
    </SimpleSource>
  </VRTRasterBand>
  <VRTRasterBand dataType="Byte" band="2">
    <ColorInterp>Green</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">RGBFile.sid</SourceFilename>
      <SourceBand>2</SourceBand>
      <SourceProperties RasterXSize="65457" RasterYSize="56333"
DataType="Byte" BlockXSize="1024" BlockYSize="128" />
      <SrcRect xOff="0" yOff="0" xSize="65457" ySize="56333" />
      <DstRect xOff="0" yOff="0" xSize="65457" ySize="56333" />
    </SimpleSource>
  </VRTRasterBand>
  <VRTRasterBand dataType="Byte" band="3">
    <ColorInterp>Blue</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">RGBFile.sid</SourceFilename>
      <SourceBand>3</SourceBand>
      <SourceProperties RasterXSize="65457" RasterYSize="56333"
DataType="Byte" BlockXSize="1024" BlockYSize="128" />
      <SrcRect xOff="0" yOff="0" xSize="65457" ySize="56333" />
      <DstRect xOff="0" yOff="0" xSize="65457" ySize="56333" />
    </SimpleSource>
  </VRTRasterBand>
  <VRTRasterBand dataType="Byte" band="4">
    <ColorInterp>Alpha</ColorInterp>
    <SimpleSource>
      <SourceFilename relativeToVRT="1">mask.tif</SourceFilename>
      <SourceBand>1</SourceBand>
      <SourceProperties RasterXSize="6545" RasterYSize="5633"
DataType="Byte"/>
      <SrcRect xOff="0" yOff="0" xSize="6545" ySize="5633" />
      <DstRect xOff="0" yOff="0" xSize="65457" ySize="56333" />
    </SimpleSource>
  </VRTRasterBand>
</VRTDataset>


On Mon, Nov 25, 2013 at 3:48 PM, Simon Shak <skunkmyrddyn at gmail.com> wrote:

> Sorry my phone botched the reply. Meant to say having something like
> having 9 input files into gdalwarp and needing a cutline for each input to
> mask their individual Nodata.
> On Nov 25, 2013 3:44 PM, "Even Rouault" <even.rouault at mines-paris.org>
> wrote:
>
>>
>> > I often have multiple input files and didn't
>> > see a way to use the cutline option with multiple input cutline.
>>
>> You can try merging them into a single OGR layer (with ogr2ogr for
>> example)
>>
>> > On Nov 25, 2013 3:33 PM, "Even Rouault" <even.rouault at mines-paris.org>
>> >
>> > wrote:
>> > > Le lundi 25 novembre 2013 22:29:00, Simon Shak a ?crit :
>> > > > I?m working with gdalwarp to reprocess a large amount of imagery to
>> be
>> > > > compatible with another program that requires imagery to be in
>> WGS84.
>> > >
>> > >  The
>> > >
>> > > > input imagery is compressed in MrSID format and does not include an
>> > > > internal mask for nodata.  I don?t know if this is because the
>> creator
>> > > > of the imagery overlooked it, or if the format doesn?t support a
>> mask.
>> > >
>> > >  Either
>> > >
>> > > > way, when I attempt to merge neighboring sets, I get odd bands of
>> dark
>> > > > color.  I?ve looked closely, and it is evident because at the edge
>> of
>> > > > the images are non 100% black pixels, that though I?m sending
>> > > > ?srcnodata 0
>> > >
>> > > into
>> > >
>> > > > gdalwarp, they get read as pixels and progress through.  I?ve looked
>> > > > into using the nearblack command on the files first, but the
>> > > > compression ratio of the .SID files makes it such that the files
>> don?t
>> > > > easily fit into my hard drive array for pre-nearblacking them before
>> > > > processing, plus the physical size of some of these files are large
>> > > > enough that the nearblack takes a long time to run.  Without the
>> > > > nearblack step, my multithreaded control script can process one
>> chunk
>> > > > in a day, but adding the nearblack, and it increases to a week at
>> > > > least.
>> > > >
>> > > >
>> > > >
>> > > > I?m looking for a solution that would not require making a large
>> > > > interim uncompressed version and would hopefully not incur a lengthy
>> > > > additional process.
>> > > >
>> > > >
>> > > >
>> > > > The simpler thoughts I have would be to adjust gdalwarp?s
>> ?srcnodata to
>> > > > take a range option, much like nearblack, so that if it detects a
>> pixel
>> > > > (even in the middle) that is with the range specified would get
>> > > > ignored,
>> > >
>> > > or
>> > >
>> > > > a way to include an ancillary file that could contain a mask.
>>  Either
>> > >
>> > > would
>> > >
>> > > > work for me, I have potential ways to quickly generate a mask for
>> the
>> > >
>> > > input
>> > >
>> > > > files.  I?d think the mask could work much like .TIF can have a
>> .TFW,
>> > >
>> > > that
>> > >
>> > > > a .MSK could be detected as well.
>> > >
>> > > You can use the -cutline option of gdalwarp if you have the mask as a
>> > > shapefile
>> > > or another OGR datasource.
>> > > You could also use a VRT file to combine the MrSID imagery and add
>> > > another band
>> > > from TIF for example as the alpha/mask band.
>> > >
>> > >
>> > > --
>> > > Geospatial professional services
>> > > http://even.rouault.free.fr/services.html
>>
>> --
>> Geospatial professional services
>> http://even.rouault.free.fr/services.html
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131206/0655eed3/attachment.html>

From etourigny.dev at gmail.com  Fri Dec  6 10:44:43 2013
From: etourigny.dev at gmail.com (Etienne Tourigny)
Date: Fri, 6 Dec 2013 16:44:43 -0200
Subject: [gdal-dev] how to aggregate an image to a lower resolution
 using gdal (gdalwarp?)
In-Reply-To: <CALjAYt4KhWkR35fd7047jM0XJO3gRJGaYjkgr+G3=RDZ=ABSeg@mail.gmail.com>
References: <CE427279.7C14%jan.verbesselt@wur.nl>
	<CALjAYt71wViURsnvtvytAX1HkfmDEO2ndsv=w-apKfFGJEXimQ@mail.gmail.com>
	<CA+TxYvNvx+S+P6Hu_xQ8uMVhV5tEsHOvvcAOpwwPNxzUAPKD3w@mail.gmail.com>
	<CALjAYt6NKOviEg4iZhQMftSad7jhc3_iXTFbH-abY2WHyC0ZAg@mail.gmail.com>
	<CA+TxYvPxHCmV2qHNXxc3apPu_q7UcUs86Me+wiK1tv6FUkwhoQ@mail.gmail.com>
	<CALjAYt4KhWkR35fd7047jM0XJO3gRJGaYjkgr+G3=RDZ=ABSeg@mail.gmail.com>
Message-ID: <CA+TxYvNSwvoHWbcEP5wOvrOK3vfKwScdkwd-qTrCjV+tCjJCHg@mail.gmail.com>

I have attached a patch to the ticket that fixes the problem. Anyone
interested is welcome to test it.

regards, Etienne


On Fri, Dec 6, 2013 at 1:58 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:

> Etienne, I've added the relevant files. I think it's sufficient to debug
> the function, but if you think it might be helpful, I could add a larger
> raster and the results of the aggregation.
>
> Etienne
>
>
> 2013/12/6 Etienne Tourigny <etourigny.dev at gmail.com>
>
>> Jan, can you please add your sample dataset and comments in that ticket?
>>
>> Etienne
>>
>>
>> On Tue, Dec 3, 2013 at 6:37 PM, Etienne B. Racine <etiennebr at gmail.com>wrote:
>>
>>> I added a ticket http://trac.osgeo.org/gdal/ticket/5311
>>>
>>> Etienne
>>>
>>>
>>> 2013/12/2 Etienne Tourigny <etourigny.dev at gmail.com>
>>>
>>>> The "average" resampling mode of gdalwarp does "average resampling,
>>>> computes the average of all non-NODATA contributing pixels".
>>>>
>>>> It was meant to compute the average of all the pixels in the "aggregation
>>>> window". However, it may have issues in the corners.
>>>>
>>>> I am the author of the average and mode algorithms, and I basically
>>>> copied the aggregation logic from the other algorithms (i.e. which pixels
>>>> are selected for the aggregation), so there may be something wrong in the
>>>> logic.
>>>>
>>>> Certainly, looking at this simple example shows that something is
>>>> wrong.
>>>>
>>>> I tested average and mode resampling with a fairly large dataset and
>>>> did not find these problems.
>>>>
>>>> Can you create a new bug in the tracker and upload the scripts and data
>>>> used?  I don't have much (any) time to work on this but would be happy to
>>>> apply a working patch.
>>>>
>>>> Cheers, Etienne
>>>>
>>>>
>>>> On Mon, Dec 2, 2013 at 12:22 PM, Etienne B. Racine <etiennebr at gmail.com
>>>> > wrote:
>>>>
>>>>> I've tried to dig this a bit. I couldn't understand the logic behind
>>>>> gdal aggregation (or downsampling). I've simplified your example using a
>>>>> smaller raster and deterministic values. Maybe someone could enlighten us
>>>>> by looking at the aggregation values ? Note that the lower right cells
>>>>> values were identical in all dimensions I've tried (about 4 - 10).
>>>>>
>>>>> The example is run on GDAL 1.11dev, released 2013/04/13
>>>>>
>>>>> Thanks,
>>>>> Etienne
>>>>>
>>>>> # in R:
>>>>>
>>>>> require(raster)
>>>>> filei <- '10by10.tif'
>>>>> fileo <- '5by5.tif'
>>>>>
>>>>> dm = 4
>>>>> r <- raster(matrix(1:(dm^2), dm, dm))
>>>>>
>>>>>
>>>>> writeRaster(r, filename=filei, overwrite = TRUE)
>>>>>
>>>>> ## aggregate using R aggregate function using the mean
>>>>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>>>>
>>>>> file.remove(fileo)
>>>>> cmd <- paste("gdalwarp -r average -tr", paste(res(r1), collapse = "
>>>>> "), filei, fileo)
>>>>> system(cmd)
>>>>> r2 <- raster(fileo)
>>>>>
>>>>> >as.matrix(r)
>>>>>      [,1] [,2] [,3] [,4]
>>>>> [1,]    1    5    9   13
>>>>> [2,]    2    6   10   14
>>>>> [3,]    3    7   11   15
>>>>> [4,]    4    8   12   16
>>>>> > lapply(list(r1, r2, r2-r1), as.matrix)
>>>>> [[1]]
>>>>>      [,1] [,2]
>>>>> [1,]  3.5 11.5
>>>>> [2,]  5.5 13.5
>>>>>
>>>>> [[2]]
>>>>>      [,1] [,2]
>>>>> [1,]  6.0 12.0
>>>>> [2,]  7.5 13.5
>>>>>
>>>>> [[3]]
>>>>>      [,1] [,2]
>>>>> [1,]  2.5  0.5
>>>>> [2,]  2.0  0.0
>>>>>
>>>>>
>>>>> 2013/8/27 Verbesselt, Jan <jan.verbesselt at wur.nl>
>>>>>
>>>>> Hi all,
>>>>>>
>>>>>> I have been testing gdalwarp to aggregate (using -r average) an image.
>>>>>> In order to better understand what is happening I have created a
>>>>>> reproducible example within an R environment and compared it with the
>>>>>> aggregate function of the R raster package (see below). There are some
>>>>>> differences between the gdalwarp raster (r2) and the aggregated raster
>>>>>> (r1).
>>>>>>
>>>>>> How is the gdalwarp -r average working? Which pixels are selected for
>>>>>> averaging (e.g.the corner pixels, center pixels, or all within the
>>>>>> aggregation window)?
>>>>>>
>>>>>> If there is a gdal aggregate option to average pixels comparable to
>>>>>> the
>>>>>> aggregate function in the R raster package, it would be great as that
>>>>>> would potentially faster, and you could also reproject and aggregate
>>>>>> at
>>>>>> once.
>>>>>>
>>>>>> Thanks!
>>>>>> Jan
>>>>>>
>>>>>> http://bfast.r-forge.r-project.org
>>>>>> http://goo.gl/1mBC5F
>>>>>>
>>>>>>
>>>>>> ## R script
>>>>>> require(raster)
>>>>>> filei <- '10by10.tif'
>>>>>> fileo <- '5by5.tif'
>>>>>>
>>>>>> set.seed(123)
>>>>>> r <- raster(ncols=36, nrows=18)
>>>>>> r <- setValues(r, round(runif(ncell(r))*10))
>>>>>> r
>>>>>> plot(r)
>>>>>> writeRaster(r, filename=filei, overwrite = TRUE)
>>>>>>
>>>>>> ## aggregate using R aggregate function using the mean
>>>>>> r1 <- aggregate(r, fact=2, fun = mean, na.rm = TRUE)
>>>>>>
>>>>>> cmd <- paste("gdalwarp -r average -tr 20 20 -te -180 -90 180 90 ",
>>>>>>              filei, " ", fileo, sep = "")
>>>>>> system(cmd)
>>>>>> r2 <- raster(fileo)
>>>>>>
>>>>>> ## compare
>>>>>> plot(r1)
>>>>>> plot(r2)
>>>>>> r1
>>>>>> r2
>>>>>> getValues(r1)
>>>>>> getValues(r2)
>>>>>>
>>>>>> ##
>>>>>> plot(r1-r2)
>>>>>> sessionInfo()
>>>>>>
>>>>>> R> sessionInfo()
>>>>>> R version 3.0.1 (2013-05-16)
>>>>>> Platform: x86_64-pc-linux-gnu (64-bit)
>>>>>>
>>>>>> locale:
>>>>>>  [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C         LC_TIME=C
>>>>>> LC_COLLATE=C         LC_MONETARY=C
>>>>>>  [6] LC_MESSAGES=C        LC_PAPER=C           LC_NAME=C
>>>>>> LC_ADDRESS=C         LC_TELEPHONE=C
>>>>>> [11] LC_MEASUREMENT=C     LC_IDENTIFICATION=C
>>>>>>
>>>>>> attached base packages:
>>>>>> [1] stats     graphics  grDevices utils     datasets  methods   base
>>>>>>
>>>>>> other attached packages:
>>>>>> [1] rgdal_0.8-10  raster_2.1-49 sp_1.0-11
>>>>>>
>>>>>> loaded via a namespace (and not attached):
>>>>>> [1] grid_3.0.1      lattice_0.20-23 tools_3.0.1
>>>>>>
>>>>>>
>>>>>> rgdal: version: 0.8-10, (SVN revision 478)
>>>>>> Geospatial Data Abstraction Library extensions to R successfully
>>>>>> loaded
>>>>>> Loaded GDAL runtime: GDAL 1.10.0, released 2013/04/24
>>>>>> Path to GDAL shared files: /usr/share/gdal/1.10
>>>>>> Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
>>>>>> Path to PROJ.4 shared files: (autodetected)
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>>
>>>>>> _______________________________________________
>>>>>> gdal-dev mailing list
>>>>>> gdal-dev at lists.osgeo.org
>>>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>>>
>>>>>
>>>>>
>>>>> _______________________________________________
>>>>> gdal-dev mailing list
>>>>> gdal-dev at lists.osgeo.org
>>>>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>>
>>>>
>>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131206/0f588ad1/attachment-0001.html>

From victor.fine at gmail.com  Sun Dec  8 08:31:43 2013
From: victor.fine at gmail.com (Victor Fine)
Date: Sun, 8 Dec 2013 18:31:43 +0200
Subject: [gdal-dev] Adding driver in run time
Message-ID: <CAL3ZN9MSwRs0LXQf_cp0Sd-KUg+qsXKgytV7SsM1ABv8qy4Fig@mail.gmail.com>

Hello,

I'm trying to write a driver , inside my program that uses GDAL (C++).

After the call to GDALAllRegister(); I call GDALRegister_MYDEM(),
which is much like in the example in
http://www.gdal.org/gdal_drivertut.html

After that, I try to call GDALOpen on some file and the breakpoint in
the .. *MYDEMDataset::Open(...) function is not even hit.
(And , of course, I get a message that this is not a recognized format).

It seems that I have some beginners mistake here - why does GDAL
ignores my driver?

Regards,
Victor.

From phil.wilkes at rmit.edu.au  Sun Dec  8 14:58:57 2013
From: phil.wilkes at rmit.edu.au (philwilkes)
Date: Sun, 8 Dec 2013 14:58:57 -0800 (PST)
Subject: [gdal-dev] SetColorInterpretation() for a GeoTiff using GDAL
	not working
In-Reply-To: <1385723091.529874d3cb9f9@imp.free.fr>
References: <1385720718101-5091839.post@n6.nabble.com>
	<1385723091.529874d3cb9f9@imp.free.fr>
Message-ID: <1386543537025-5093268.post@n6.nabble.com>

Thanks Evan, that work perfectly.

I have also open a ticket on Trac.

Thanks for your help, Phil



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/SetColorInterpretation-for-a-GeoTiff-using-GDAL-not-working-tp5091839p5093268.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From tkeitt at gmail.com  Sun Dec  8 19:21:11 2013
From: tkeitt at gmail.com (Tim Keitt)
Date: Sun, 8 Dec 2013 21:21:11 -0600
Subject: [gdal-dev] Default GeoTransform for MEM driver
Message-ID: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f__J_m84Qg@mail.gmail.com>

I notice that the "MEM" driver returns {0, 1, 0, 0, 0, -1} by default. Is
this a bug or do some formats flip the vertical axis? If so, what is the
convention for detecting and handling "south up" formats in code?

THK

-- 
Timothy H. Keitt
http://www.keittlab.org/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131208/0ff7e413/attachment.html>

From jukka.rahkonen at mmmtike.fi  Sun Dec  8 21:27:15 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Mon, 9 Dec 2013 05:27:15 +0000 (UTC)
Subject: [gdal-dev] Default GeoTransform for MEM driver
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
Message-ID: <loom.20131209T061909-946@post.gmane.org>

Tim Keitt <tkeitt <at> gmail.com> writes:

> 
> I notice that the "MEM" driver returns {0, 1, 0, 0, 0, -1} by default. Is
this a bug or do some formats flip the vertical axis? If so, what is the
convention for detecting and handling "south up" formats in code?

I guess that anchor point is at the top left corner and therefore the north
coordinate is decreasing step by step when you walk downwards. Document
http://www.gdal.org/gdal_tutorial.html supports my thoughts.

-Jukka Rahkonen-




From Volker.Wichmann at uibk.ac.at  Mon Dec  9 08:23:42 2013
From: Volker.Wichmann at uibk.ac.at (Volker Wichmann)
Date: Mon, 09 Dec 2013 17:23:42 +0100
Subject: [gdal-dev] Adding driver in run time
In-Reply-To: <CAL3ZN9MSwRs0LXQf_cp0Sd-KUg+qsXKgytV7SsM1ABv8qy4Fig@mail.gmail.com>
References: <CAL3ZN9MSwRs0LXQf_cp0Sd-KUg+qsXKgytV7SsM1ABv8qy4Fig@mail.gmail.com>
Message-ID: <52A5EE8E.6070404@uibk.ac.at>

On 12/08/2013 05:31 PM, Victor Fine wrote:
> Hello,
>
> I'm trying to write a driver , inside my program that uses GDAL (C++).
>
> After the call to GDALAllRegister(); I call GDALRegister_MYDEM(),
> which is much like in the example in
> http://www.gdal.org/gdal_drivertut.html
>
> After that, I try to call GDALOpen on some file and the breakpoint in
> the .. *MYDEMDataset::Open(...) function is not even hit.
> (And , of course, I get a message that this is not a recognized format).
>
> It seems that I have some beginners mistake here - why does GDAL
> ignores my driver?
>
> Regards,
> Victor.

Hi Victor,

did you add your driver to the GDAL tree (i.e. in 
gdal/gcore/gdal_frmts.h and frmts/gdalallregister.cpp) like described in 
the tutorial you mention?

Volker

> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>


From tkeitt at utexas.edu  Mon Dec  9 08:55:34 2013
From: tkeitt at utexas.edu (Tim Keitt)
Date: Mon, 9 Dec 2013 10:55:34 -0600
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <loom.20131209T061909-946@post.gmane.org>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
	<loom.20131209T061909-946@post.gmane.org>
Message-ID: <CANnL8gqPrd1AxeSxjaovbqy0_rh7vtar9skaDXo6Re3TDd733w@mail.gmail.com>

Right. Thanks for checking into it.

I guess I was thrown by
http://www.gdal.org/classGDALDataset.html#af9593cc241e7d140f5f3c4798a43a668

which gives the default as {0, 1, 0, 0, 0, +1}.

Is there a library wide convention on this? I can update the docs if so. (I
assume its a simple pull and send a diff type setup.)

THK


On Sun, Dec 8, 2013 at 11:27 PM, Jukka Rahkonen
<jukka.rahkonen at mmmtike.fi>wrote:

> Tim Keitt <tkeitt <at> gmail.com> writes:
>
> >
> > I notice that the "MEM" driver returns {0, 1, 0, 0, 0, -1} by default. Is
> this a bug or do some formats flip the vertical axis? If so, what is the
> convention for detecting and handling "south up" formats in code?
>
> I guess that anchor point is at the top left corner and therefore the north
> coordinate is decreasing step by step when you walk downwards. Document
> http://www.gdal.org/gdal_tutorial.html supports my thoughts.
>
> -Jukka Rahkonen-
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
http://www.keittlab.org/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131209/2c1e7f37/attachment.html>

From lucena_ivan at hotmail.com  Mon Dec  9 09:08:19 2013
From: lucena_ivan at hotmail.com (Ivan Lucena)
Date: Mon, 9 Dec 2013 12:08:19 -0500
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <CANnL8gqPrd1AxeSxjaovbqy0_rh7vtar9skaDXo6Re3TDd733w@mail.gmail.com>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>,
	<loom.20131209T061909-946@post.gmane.org>,
	<CANnL8gqPrd1AxeSxjaovbqy0_rh7vtar9skaDXo6Re3TDd733w@mail.gmail.com>
Message-ID: <BLU173-W2EAF30CFE7E0131CF4EC190D30@phx.gbl>

The other problem with that documentation is the return code. CE_Failue means that the driver does not support it and/or that the dataset doesn't have it. 

From: tkeitt at utexas.edu
Date: Mon, 9 Dec 2013 10:55:34 -0600
To: jukka.rahkonen at mmmtike.fi
CC: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Default GeoTransform for MEM driver

Right. Thanks for checking into it.
I guess I was thrown by http://www.gdal.org/classGDALDataset.html#af9593cc241e7d140f5f3c4798a43a668


which gives the default as {0, 1, 0, 0, 0, +1}.
Is there a library wide convention on this? I can update the docs if so. (I assume its a simple pull and send a diff type setup.)


THK

On Sun, Dec 8, 2013 at 11:27 PM, Jukka Rahkonen <jukka.rahkonen at mmmtike.fi> wrote:


Tim Keitt <tkeitt <at> gmail.com> writes:





>

> I notice that the "MEM" driver returns {0, 1, 0, 0, 0, -1} by default. Is

this a bug or do some formats flip the vertical axis? If so, what is the

convention for detecting and handling "south up" formats in code?



I guess that anchor point is at the top left corner and therefore the north

coordinate is decreasing step by step when you walk downwards. Document

http://www.gdal.org/gdal_tutorial.html supports my thoughts.



-Jukka Rahkonen-







_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org

http://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
http://www.keittlab.org/


_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131209/37c5d97b/attachment.html>

From even.rouault at mines-paris.org  Mon Dec  9 11:54:35 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 9 Dec 2013 20:54:35 +0100
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <BLU173-W2EAF30CFE7E0131CF4EC190D30@phx.gbl>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
	<CANnL8gqPrd1AxeSxjaovbqy0_rh7vtar9skaDXo6Re3TDd733w@mail.gmail.com>
	<BLU173-W2EAF30CFE7E0131CF4EC190D30@phx.gbl>
Message-ID: <201312092054.35345.even.rouault@mines-paris.org>

Le lundi 09 d?cembre 2013 18:08:19, Ivan Lucena a ?crit :
> The other problem with that documentation is the return code. CE_Failue
> means that the driver does not support it and/or that the dataset doesn't
> have it.

The current behaviour of the MEM driver doesn't particularly shock me. It 
seems OK to return CE_Failure if SetGeoTransform() hasn't been explicitely 
called to define it. And as far as the default geotransform, it is a matter of 
taste. [ 0, 1, 0, 0, 0, 1] would be indeed a bit more classical for a 
ungeoreferenced image, but one can consider that if GetGeoTransform() returns 
CE_Failure, the returned geotransform is to be ignored.

To answere Tim's initial question {0, 1, 0, 0, 0, -1} is a north-up image :  
(0,0) is the coordinate of the upper left of the top left pixel, and y values 
are decreasing with image rows.

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Mon Dec  9 12:00:22 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 9 Dec 2013 21:00:22 +0100
Subject: [gdal-dev] Adding driver in run time
In-Reply-To: <CAL3ZN9MSwRs0LXQf_cp0Sd-KUg+qsXKgytV7SsM1ABv8qy4Fig@mail.gmail.com>
References: <CAL3ZN9MSwRs0LXQf_cp0Sd-KUg+qsXKgytV7SsM1ABv8qy4Fig@mail.gmail.com>
Message-ID: <201312092100.22465.even.rouault@mines-paris.org>

Le dimanche 08 d?cembre 2013 17:31:43, Victor Fine a ?crit :
> Hello,
> 
> I'm trying to write a driver , inside my program that uses GDAL (C++).
> 
> After the call to GDALAllRegister(); I call GDALRegister_MYDEM(),
> which is much like in the example in
> http://www.gdal.org/gdal_drivertut.html
> 
> After that, I try to call GDALOpen on some file and the breakpoint in
> the .. *MYDEMDataset::Open(...) function is not even hit.
> (And , of course, I get a message that this is not a recognized format).
> 
> It seems that I have some beginners mistake here - why does GDAL
> ignores my driver?

If the application compiles, links and runs, nothing immediately strikes me as 
a potential error, but perhaps you could enumerate all the registered drivers 
and check if yours is listed ?

for(i=0;i<GDALGetDriverCount();i++)
	printf("driver %d: %s\n", i, GDALGetDriverShortName(GDALGetDriver(i)));

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From xenon at alphapixel.com  Mon Dec  9 12:24:01 2013
From: xenon at alphapixel.com (Chris Hanson)
Date: Mon, 9 Dec 2013 13:24:01 -0700
Subject: [gdal-dev] Vector geospatial data format for massive quantities of
	(poly)lines
Message-ID: <CAGoufmb=xOJE3KWzgQR6RTLiht2Gusy=TpSeKZqHzNy05nt8ng@mail.gmail.com>

  An application my client is pursuing involves generating and displaying
linework (contours) for state-sized areas. These will be (among other
things) displayed via Geoserver.

  We are able to generate the contour data with gdal, but the output is now
exceeding the 2GB format limit of Shapefiles.

  I'm wondering if anyone has any recommendations for a format or other
strategy for handling large data like this? I think in the end we may end
up breaking it up into tiles, but figured I'd ask first.

-- 
Chris 'Xenon' Hanson, omo sanza lettere. Xenon at AlphaPixel.com
http://www.alphapixel.com/
Training ? Consulting ? Contracting
3D ? Scene Graphs (Open Scene Graph/OSG) ? OpenGL 2 ? OpenGL 3 ? OpenGL 4 ?
GLSL ? OpenGL ES 1 ? OpenGL ES 2 ? OpenCL
Digital Imaging ? GIS ? GPS ? osgEarth ? Terrain ? Telemetry ? Cryptography
? Digital Audio ? LIDAR ? Kinect ? Embedded ? Mobile ? iPhone/iPad/iOS ?
Android
@alphapixel <https://twitter.com/alphapixel> facebook.com/alphapixel (775)
623-PIXL [7495]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131209/fa94b156/attachment.html>

From jukka.rahkonen at mmmtike.fi  Mon Dec  9 13:49:39 2013
From: jukka.rahkonen at mmmtike.fi (Jukka Rahkonen)
Date: Mon, 9 Dec 2013 21:49:39 +0000 (UTC)
Subject: [gdal-dev]
	=?utf-8?q?Vector_geospatial_data_format_for_massive_qu?=
	=?utf-8?q?antities_of=09=28poly=29lines?=
References: <CAGoufmb=xOJE3KWzgQR6RTLiht2Gusy=TpSeKZqHzNy05nt8ng@mail.gmail.com>
Message-ID: <loom.20131209T223909-494@post.gmane.org>

Chris Hanson <xenon <at> alphapixel.com> writes:

> 
> 
> ? An application my client is pursuing involves generating and displaying
linework (contours) for state-sized areas. These will be (among other
things) displayed via Geoserver.
> 
> 
> 
> 
> ? We are able to generate the contour data with gdal, but the output is
now exceeding the 2GB format limit of Shapefiles.
> 
> ? I'm wondering if anyone has any recommendations for a format or other
strategy for handling large data like this? I think in the end we may end up
breaking it up into tiles, but figured I'd ask first.

Hi,

Spatialite is flexible and fast and quite easy to create at least up to 10
GB db file size. However, Java and native Spatialite binaries are tricky to
put to play together. The Spatialite community module is probably easy to
install
http://docs.geoserver.org/latest/en/user/community/spatialite/index.html but
it seems to use Spatialite version 2.4.0 while the current one is 4.1.0 and
I wouldn't recommend that.

However, Paul Ramsey is working on GeoPackage driver for GDAL and Boundless
is building a GeoPackage community module for Geoserver so perhaps the
answer is OGC GeoPackage, the shapefile of the hopefully near future.

-Jukka Rahkonen- 


From p.scadden at gns.cri.nz  Mon Dec  9 13:55:18 2013
From: p.scadden at gns.cri.nz (Phil Scadden)
Date: Tue, 10 Dec 2013 10:55:18 +1300
Subject: [gdal-dev] Vector geospatial data format for massive quantities
 of (poly)lines
In-Reply-To: <loom.20131209T223909-494@post.gmane.org>
References: <CAGoufmb=xOJE3KWzgQR6RTLiht2Gusy=TpSeKZqHzNy05nt8ng@mail.gmail.com>
	<loom.20131209T223909-494@post.gmane.org>
Message-ID: <52A63C46.30804@gns.cri.nz>

There is also the Contouring WPS in geoserver. Beyond that I would look 
at storage in PostGIS.

Notice: This email and any attachments are confidential.
If received in error please destroy and immediately notify us.
Do not copy or disclose the contents.


From jomeder at ihug.co.nz  Mon Dec  9 16:50:41 2013
From: jomeder at ihug.co.nz (Jo Meder)
Date: Tue, 10 Dec 2013 13:50:41 +1300
Subject: [gdal-dev] JPEG2000 read performance with OpenJPEG
Message-ID: <B9344E63-2CB3-4D60-B8BB-D544D463C588@ihug.co.nz>

Hi,

I'm using GDAL 1.10.1 and OpenJPEG on OS X, to read JPEG 2000 orthophotos from the USGS National Map. The performance seems really, really poor. I'm using GDALRasterBand::RasterIO() to read a scanline at a time. It's been running about 10 minutes now without reading one scan line. At the moment I have disabled threads in GDAL but it was very slow with threads as well.

I have tried gdal_translate to convert the image to a GeoTIFF and that is very slow but does write the file out in 5 minutes or so. The image is 5540 x 7630.

Would it be worth reading the image in blocks? I would just try it but it will take some rearranging of code so I thought I would ask if anyone has experienced this same performance problem and had any insights on a solution.

Thanks,

Jo Meder



From jomeder at ihug.co.nz  Mon Dec  9 20:03:48 2013
From: jomeder at ihug.co.nz (Jo Meder)
Date: Tue, 10 Dec 2013 17:03:48 +1300
Subject: [gdal-dev] NLCD images and north
Message-ID: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>

Hi,

I have a land cover raster from NLCD via the USGS National Map. The actual data is rotated something like 15? inside the raster. Using the API where would I start to rotate it to north up? I am presuming that the data isn't north up already, for example the Y axis of the raster doesn't actually represent north relative to the features in the image, but I may be wrong! When I overlay it on imported DEM data it definitely seems to be rotated. The corner coordinates of the data are also rotated.

Sorry for this rather vague question but I'd appreciate any starting points.

Regards,

Jo Meder



From gdal at stripfamily.net  Mon Dec  9 21:04:19 2013
From: gdal at stripfamily.net (David Strip)
Date: Mon, 09 Dec 2013 22:04:19 -0700
Subject: [gdal-dev] NLCD images and north
In-Reply-To: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>
References: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>
Message-ID: <52A6A0D3.5050509@stripfamily.net>

I downloaded some NLCD test data (roughly Washington DC, for what it's
worth) using the NationalMap viewer and I see the apparent rotation, but
actually it's not rotated. I suspect you are seeing the same phenomenon.
Your download includes, among other files, a .tif file with the image,
and a .tfw file that defines the "world" in terms of the projection
defined in the .prj file. In my  experiment the .tfw file shows no
rotation (entries 2 and 3 are equal to 0). However, the projection is an
Albers Equal Area projection, so the image boundaries don't align to the
tif boundaries. If you open your file in something like qgis and set the
projection to the appropriate UTM zone or similar projection, you'll
probably get what you're expecting - a north-south rectangle containing
your data. At least that's what happened when I tried it. (And of course
that's what it should be according the .tfw file)

From stevejking at talktalk.net  Tue Dec 10 06:02:49 2013
From: stevejking at talktalk.net (stevejking)
Date: Tue, 10 Dec 2013 06:02:49 -0800 (PST)
Subject: [gdal-dev] Force application of ntv2 grid
In-Reply-To: <l7aamb$2d1$1@ger.gmane.org>
References: <C6B695652D5E6B4597E90C5734C0242616D8ACFD95@prdlsmmsg01.ad.linz.govt.nz>
	<l7aamb$2d1$1@ger.gmane.org>
Message-ID: <1386684169248-5093536.post@n6.nabble.com>

Andre Joost wrote
> Am 29.11.2013 09:59, schrieb Jeremy Palmer:
>> Hi gdal-devs,
>>
>> I'm trying to shift shapefile data using a custom NTv2 grid file. The
>> logical source and destination coordinate systems are the same
>> (geographic coordinates EPSG:4167), I only want to shift the data.
>>
>> The type of command I'm trying to run is:
>>
>> ogr2ogr -f "Esri Shapefile" -a_srs "+proj=longlat +ellps=GRS80"
>> -t_srs "+proj=longlat +ellps=GRS80 +nadgrids=custom_grid.gsb +wktext"
>> dst_datasource_name src_datasource_name
>>
>> but the output shapefile does not get transformed...
>>
>> Is this because there is a short circuit in proj4 if the ellipsoids
>> are the same?
>>
> 
> No, you have to explicitely specify +towgs84=0,0,0,0,0,0,0 for the first 
> srs. Otherwise it is assumed that both share the same datum.
> 
> HTH,
> Andr? Joost
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> http://lists.osgeo.org/mailman/listinfo/gdal-dev

Andre is on the right track. 

But, I believe you need to specify the +nadgrids=c:\custom_grid.gsb in your
source projection, then use the +towgs84=0,0,0,0,0,0,0 in your target.

You may get away without specifying any path to your gsb, not sure.


HTH
Regards,
Steve



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Force-application-of-ntv2-grid-tp5091818p5093536.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From lucena_ivan at hotmail.com  Tue Dec 10 07:48:31 2013
From: lucena_ivan at hotmail.com (Ivan Lucena)
Date: Tue, 10 Dec 2013 10:48:31 -0500
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <201312092054.35345.even.rouault@mines-paris.org>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
	<CANnL8gqPrd1AxeSxjaovbqy0_rh7vtar9skaDXo6Re3TDd733w@mail.gmail.com>
	<BLU173-W2EAF30CFE7E0131CF4EC190D30@phx.gbl>,
	<201312092054.35345.even.rouault@mines-paris.org>
Message-ID: <BLU173-W134E2D8141BAC05FA494E490D20@phx.gbl>

Hi Even,

> From: even.rouault at mines-paris.org
> To: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] Default GeoTransform for MEM driver
> Date: Mon, 9 Dec 2013 20:54:35 +0100
> CC: lucena_ivan at hotmail.com; tkeitt at utexas.edu; jukka.rahkonen at mmmtike.fi
> 
> Le lundi 09 d?cembre 2013 18:08:19, Ivan Lucena a ?crit :
> > The other problem with that documentation is the return code. CE_Failue
> > means that the driver does not support it and/or that the dataset doesn't
> > have it.
> 
> The current behaviour of the MEM driver doesn't particularly shock me. It 
> seems OK to return CE_Failure if SetGeoTransform() hasn't been explicitely 
> called to define it. And as far as the default geotransform, it is a matter of 
> taste. [ 0, 1, 0, 0, 0, 1] would be indeed a bit more classical for a 
> ungeoreferenced image, but one can consider that if GetGeoTransform() returns 
> CE_Failure, the returned geotransform is to be ignored.

That is good to know. So it really doesn't matter if the driver support geotransformation or not.

But my concern is when it returns CE_None. What does it really means because I was checking some driver's implementation of GetGeoTransform and I noticed that some of then always return CE_None no matter what. So would that be possible that a dataset is *ungeoreferenced* and a driver returns CE_None with the default values [0, 1, 0, 0, 0, 1]. Should we trust that those values [0, 1, 0, 0, 0, 1] are correct or are they just a default filler?

For example, to get [0, 1, 0, 0, 0, 1] we should expect a world-file that should be something like:

1.0000000000
0.0000000000
0.0000000000
1.0000000000
0.5000000000
0.5000000000

Not:

1.0000000000
0.0000000000
0.0000000000
1.0000000000
0.0000000000
0.0000000000

Anyway, I will trust that the CE_None means that the geotransformation values are correct but should I will also check if the values are equal to [0, 1, 0, 0, 0, 1] just in case? And what to do if they are?

Sorry to introduce a question that is not exactly related to the topic, the MEM driver.

Regards,

Ivan

> 
> To answere Tim's initial question {0, 1, 0, 0, 0, -1} is a north-up image :  
> (0,0) is the coordinate of the upper left of the top left pixel, and y values 
> are decreasing with image rows.
> 
> Even
> 
> -- 
> Geospatial professional services
> http://even.rouault.free.fr/services.html
 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131210/43cc8f9f/attachment-0001.html>

From thomas.campagne at gmail.com  Tue Dec 10 08:47:15 2013
From: thomas.campagne at gmail.com (Thomas Campagne)
Date: Tue, 10 Dec 2013 08:47:15 -0800
Subject: [gdal-dev] Force application of ntv2 grid
In-Reply-To: <1386684169248-5093536.post@n6.nabble.com>
References: <C6B695652D5E6B4597E90C5734C0242616D8ACFD95@prdlsmmsg01.ad.linz.govt.nz>
	<l7aamb$2d1$1@ger.gmane.org>
	<1386684169248-5093536.post@n6.nabble.com>
Message-ID: <CAKi59uwO=6Q6EuLG7_ryD8G4OAQpP6Z8sKD4=n1GgRtjnzO86Q@mail.gmail.com>

2013/12/10 stevejking <stevejking at talktalk.net>

> Andre Joost wrote
> > Am 29.11.2013 09:59, schrieb Jeremy Palmer:
> >> Hi gdal-devs,
> >>
> >> I'm trying to shift shapefile data using a custom NTv2 grid file. The
> >> logical source and destination coordinate systems are the same
> >> (geographic coordinates EPSG:4167), I only want to shift the data.
> >>
> >> The type of command I'm trying to run is:
> >>
> >> ogr2ogr -f "Esri Shapefile" -a_srs "+proj=longlat +ellps=GRS80"
> >> -t_srs "+proj=longlat +ellps=GRS80 +nadgrids=custom_grid.gsb +wktext"
> >> dst_datasource_name src_datasource_name
> >>
> >> but the output shapefile does not get transformed...
> >>
> >> Is this because there is a short circuit in proj4 if the ellipsoids
> >> are the same?
> >>
> >
> > No, you have to explicitely specify +towgs84=0,0,0,0,0,0,0 for the first
> > srs. Otherwise it is assumed that both share the same datum.
> >
> > HTH,
> > Andr? Joost
> >
> > _______________________________________________
> > gdal-dev mailing list
>
> > gdal-dev at .osgeo
>
> > http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> Andre is on the right track.
>
> But, I believe you need to specify the +nadgrids=c:\custom_grid.gsb in your
> source projection, then use the +towgs84=0,0,0,0,0,0,0 in your target.
>
> You may get away without specifying any path to your gsb, not sure.
>
>
> HTH
> Regards,
> Steve
>
>
Hi,

Just as a side note, I like to turn on the debugging mode by setting the
environment variable PROJ_DEBUG to any number.
It gives useful info on how your ntv2 grid is used and might help you
identify other issues if any.

Regards

Thomas


-- 
Thomas Campagne
Vancouver, BC
Canada
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131210/016d705d/attachment.html>

From tkeitt at utexas.edu  Tue Dec 10 08:58:47 2013
From: tkeitt at utexas.edu (Tim Keitt)
Date: Tue, 10 Dec 2013 10:58:47 -0600
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <201312092054.35345.even.rouault@mines-paris.org>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
	<CANnL8gqPrd1AxeSxjaovbqy0_rh7vtar9skaDXo6Re3TDd733w@mail.gmail.com>
	<BLU173-W2EAF30CFE7E0131CF4EC190D30@phx.gbl>
	<201312092054.35345.even.rouault@mines-paris.org>
Message-ID: <CANnL8gqVe09Kiwj6qstg2Svtg2fpHaO-U86geuHkSGvjdtr6Vw@mail.gmail.com>

On Mon, Dec 9, 2013 at 1:54 PM, Even Rouault
<even.rouault at mines-paris.org>wrote:

> Le lundi 09 d?cembre 2013 18:08:19, Ivan Lucena a ?crit :
> > The other problem with that documentation is the return code. CE_Failue
> > means that the driver does not support it and/or that the dataset doesn't
> > have it.
>
> The current behaviour of the MEM driver doesn't particularly shock me. It
> seems OK to return CE_Failure if SetGeoTransform() hasn't been explicitely
> called to define it. And as far as the default geotransform, it is a
> matter of
> taste. [ 0, 1, 0, 0, 0, 1] would be indeed a bit more classical for a
> ungeoreferenced image, but one can consider that if GetGeoTransform()
> returns
> CE_Failure, the returned geotransform is to be ignored.
>
> To answere Tim's initial question {0, 1, 0, 0, 0, -1} is a north-up image :
> (0,0) is the coordinate of the upper left of the top left pixel, and y
> values
> are decreasing with image rows.
>

That makes sense. It just a matter of always checking the transform and not
assuming as I was that there is one default arrangement.

THK


>
> Even
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html
>



-- 
http://www.keittlab.org/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131210/380b1f9f/attachment.html>

From even.rouault at mines-paris.org  Tue Dec 10 10:44:31 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 10 Dec 2013 19:44:31 +0100
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <BLU173-W134E2D8141BAC05FA494E490D20@phx.gbl>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
	<201312092054.35345.even.rouault@mines-paris.org>
	<BLU173-W134E2D8141BAC05FA494E490D20@phx.gbl>
Message-ID: <201312101944.32022.even.rouault@mines-paris.org>

Le mardi 10 d?cembre 2013 16:48:31, Ivan Lucena a ?crit :
> Hi Even,
> 
> > From: even.rouault at mines-paris.org
> > To: gdal-dev at lists.osgeo.org
> > Subject: Re: [gdal-dev] Default GeoTransform for MEM driver
> > Date: Mon, 9 Dec 2013 20:54:35 +0100
> > CC: lucena_ivan at hotmail.com; tkeitt at utexas.edu; jukka.rahkonen at mmmtike.fi
> > 
> > Le lundi 09 d?cembre 2013 18:08:19, Ivan Lucena a ?crit :
> > > The other problem with that documentation is the return code. CE_Failue
> > > means that the driver does not support it and/or that the dataset
> > > doesn't have it.
> > 
> > The current behaviour of the MEM driver doesn't particularly shock me. It
> > seems OK to return CE_Failure if SetGeoTransform() hasn't been
> > explicitely called to define it. And as far as the default geotransform,
> > it is a matter of taste. [ 0, 1, 0, 0, 0, 1] would be indeed a bit more
> > classical for a ungeoreferenced image, but one can consider that if
> > GetGeoTransform() returns CE_Failure, the returned geotransform is to be
> > ignored.
> 
> That is good to know. So it really doesn't matter if the driver support
> geotransformation or not.
> 
> But my concern is when it returns CE_None. What does it really means
> because I was checking some driver's implementation of GetGeoTransform and
> I noticed that some of then always return CE_None no matter what. 
> So would
> that be possible that a dataset is *ungeoreferenced* and a driver returns
> CE_None with the default values [0, 1, 0, 0, 0, 1].
> Should we trust that
> those values [0, 1, 0, 0, 0, 1] are correct or are they just a default
> filler?
> 
> For example, to get [0, 1, 0, 0, 0, 1] we should expect a world-file that
> should be something like:
> 
> 1.0000000000
> 0.0000000000
> 0.0000000000
> 1.0000000000
> 0.5000000000
> 0.5000000000
> 
> Not:
> 
> 1.0000000000
> 0.0000000000
> 0.0000000000
> 1.0000000000
> 0.0000000000
> 0.0000000000
> 
> Anyway, I will trust that the CE_None means that the geotransformation
> values are correct but should I will also check if the values are equal to
> [0, 1, 0, 0, 0, 1] just in case? And what to do if they are?

I'm not sure to know the ultimate answer to your questions. My understanding 
of http://www.gdal.org/classGDALDataset.html#af9593cc241e7d140f5f3c4798a43a668 
is that when there's no projection space associated to a raster, it should 
return (0,1,0,0,0,1) and CE_Failure. But they are certainly drivers that 
return (0,1,0,0,0,1) and CE_None. They should likely be fixed to return 
CE_Failure instead. But you can also test if the geotransform is (0,1,0,0,0,1) 
since it isn't a likely real geotransform.

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From apachemaven0 at gmail.com  Tue Dec 10 20:04:11 2013
From: apachemaven0 at gmail.com (maven apache)
Date: Wed, 11 Dec 2013 12:04:11 +0800
Subject: [gdal-dev] install ESRI file geodatabse driver
Message-ID: <CA+FxMdUmEyTVqO1vvQJBngELdjMbvXV+XGzbRjF7O=V6rp+X5Q@mail.gmail.com>

Hi:

I am using ubuntu 12.04 with 64bit. and I have installed gdal 1.9.2 from
the ppa:"https://launchpad.net/~ubuntugis/+archive/ppa/".

And following the driver page <http://www.gdal.org/ogr/drv_filegdb.html>, I
have to install the FileGDB_API_SDK if I want to read/write the gdb format.

I have download the package from ESRI site, but I do not know how to
install it.

And I have found this <http://trac.osgeo.org/gdal/wiki/FileGDB>, but it
seems that I have to re-compile gdal again from the source if I follow the
guide.

Any suggestion ?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131211/54aee395/attachment.html>

From stefano.iacovella at gmail.com  Tue Dec 10 21:17:35 2013
From: stefano.iacovella at gmail.com (Stefano Iacovella)
Date: Wed, 11 Dec 2013 06:17:35 +0100
Subject: [gdal-dev] install ESRI file geodatabse driver
In-Reply-To: <CA+FxMdUmEyTVqO1vvQJBngELdjMbvXV+XGzbRjF7O=V6rp+X5Q@mail.gmail.com>
References: <CA+FxMdUmEyTVqO1vvQJBngELdjMbvXV+XGzbRjF7O=V6rp+X5Q@mail.gmail.com>
Message-ID: <CAG9OqYrCg1EJnZeXc8gFBJ2D2G3Xwu8cDmRVAa8AGCx_2J8a8g@mail.gmail.com>

I don't think there is any binary package compiled with FGDB driver.
Yes, you should remove your installation, download source code for gdal and
compile as described in the wiki. By the way on Linux compilation is really
easy and fast.

Cheers

Stefano

---------------------------------------------------
41.95581N 12.52854E

http://www.linkedin.com/in/stefanoiacovella

http://twitter.com/#!/Iacovellas
Il 11/dic/2013 05:05 "maven apache" <apachemaven0 at gmail.com> ha scritto:

> Hi:
>
> I am using ubuntu 12.04 with 64bit. and I have installed gdal 1.9.2 from
> the ppa:"https://launchpad.net/~ubuntugis/+archive/ppa/".
>
> And following the driver page <http://www.gdal.org/ogr/drv_filegdb.html>,
> I have to install the FileGDB_API_SDK if I want to read/write the gdb
> format.
>
> I have download the package from ESRI site, but I do not know how to
> install it.
>
> And I have found this <http://trac.osgeo.org/gdal/wiki/FileGDB>, but it
> seems that I have to re-compile gdal again from the source if I follow the
> guide.
>
> Any suggestion ?
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131211/7b9dc4d8/attachment.html>

From fjitiaux at gmail.com  Wed Dec 11 03:26:04 2013
From: fjitiaux at gmail.com (Florent JITIAUX)
Date: Wed, 11 Dec 2013 12:26:04 +0100
Subject: [gdal-dev]  Binding java : improve it or make a parser ?
In-Reply-To: <CAL81ghBAHvEzVN8=O_b8En5zEEG4VqNiUwBQHpZMJtqtUYsW8Q@mail.gmail.com>
References: <CAL81ghAxyJhJM1QW-i9iLer0w9ixD5rZfiERjYGFQDEGsWcNHQ@mail.gmail.com>
	<CAL81ghBAHvEzVN8=O_b8En5zEEG4VqNiUwBQHpZMJtqtUYsW8Q@mail.gmail.com>
Message-ID: <CAL81ghCWH5LQEgF4=RPGxzJNoOmUC=N8GJ94uR8-0vNL8eH5+A@mail.gmail.com>

Hi all,

since some weeks i think about the improvement of the java binding. The
fact is when you look at the javadoc and the gdal API doc, there's some
difference  between them. The model of the java binding is reduced at the
minimum like geometry class.

If i remember there was a discussion about ogr and the fact it was a little
used. To make a mask with ogr and put it in dataset is not easy because the
way is not obvious with the binding. And making a geometry is easier when
you look at the geometry model.

That's why i would like to improve the java binding but there's 2 ways :
- the first is to modify swig interface. Even if i understand the code, the
problem is i'm not a C/C++ developer.
- the second is to make a parser like for XML or csv files in Java. For
example i made an enum with gdal drivers to make an instance of driver.
It's cleaner than to call it with a String and i added all information from
the driver web page in the javadoc.

The first question is : is it a good idea ? The aim of this "project" is to
be used by others, not only me.

The second is : which solution is better for you ?

Regards,

Florent
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131211/8b8ac32a/attachment.html>

From dmburgess at linktechs.net  Wed Dec 11 08:08:47 2013
From: dmburgess at linktechs.net (Dennis Burgess)
Date: Wed, 11 Dec 2013 10:08:47 -0600
Subject: [gdal-dev] gdal utilities question
Message-ID: <50710E9A7E64454C974049FC998EB655018DD9CD@03-exchange.lti.local>

I have been using the GDAL utilities.  But ran into a snag.  We create
KML overlay files, basically KML file that geolocates a PNG on google
maps.  This PNG is a vector image as well as can have 1 or two colors
other than the transparent background.    We used gdal to convert this
to a GEOTIFF using the gdal_contour and this work quite well, its
ignores the colors for the most part, as all we want is a poly of the
colored areas, don't care about what color.  gedal_polygonize, sees all
colors and seams much more rough.  

 

in both cases, we generate a KML shapefile, but it appears they create
line entries vs polygons.

 

We also use ogr2ogr to simplify the KML as well.   Can anyone give me
some better method to get a pologyon for only the colored areas ,
ignoring changes in color.?

 

Dennis Burgess, 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131211/e62308ec/attachment.html>

From chaitanya.ch at gmail.com  Wed Dec 11 08:29:33 2013
From: chaitanya.ch at gmail.com (Chaitanya kumar CH)
Date: Wed, 11 Dec 2013 21:59:33 +0530
Subject: [gdal-dev] gdal utilities question
In-Reply-To: <50710E9A7E64454C974049FC998EB655018DD9CD@03-exchange.lti.local>
References: <50710E9A7E64454C974049FC998EB655018DD9CD@03-exchange.lti.local>
Message-ID: <CAMKgpOanoNBhcRuJeZYEO1ocVt9REosHKrZk-gRqxko8W9bpeA@mail.gmail.com>

Dennis,

You can create a new raster with the pixel values scaled to one bit so that
all you have is zero for no color and one for any color. Use gdal_translate
with the -scale option. The exact method depends on the data. Then you are
essentially ignoring the color.

Contours are set as lines instead of polygons because they terminate at the
raster edges.

--
Best regards,
Chaitanya Kumar CH
On Dec 11, 2013 9:48 PM, "Dennis Burgess" <dmburgess at linktechs.net> wrote:

> I have been using the GDAL utilities.  But ran into a snag.  We create KML
> overlay files, basically KML file that geolocates a PNG on google maps.
> This PNG is a vector image as well as can have 1 or two colors other than
> the transparent background.    We used gdal to convert this to a GEOTIFF
> using the gdal_contour and this work quite well, its ignores the colors for
> the most part, as all we want is a poly of the colored areas, don't care
> about what color.  gedal_polygonize, sees all colors and seams much more
> rough.
>
>
>
> in both cases, we generate a KML shapefile, but it appears they create
> line entries vs polygons.
>
>
>
> We also use ogr2ogr to simplify the KML as well.   Can anyone give me some
> better method to get a pologyon for only the colored areas , ignoring
> changes in color.?
>
>
>
> *Dennis Burgess,*
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131211/3f107440/attachment.html>

From tkeitt at utexas.edu  Wed Dec 11 10:23:09 2013
From: tkeitt at utexas.edu (Tim Keitt)
Date: Wed, 11 Dec 2013 12:23:09 -0600
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <201312101944.32022.even.rouault@mines-paris.org>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
	<201312092054.35345.even.rouault@mines-paris.org>
	<BLU173-W134E2D8141BAC05FA494E490D20@phx.gbl>
	<201312101944.32022.even.rouault@mines-paris.org>
Message-ID: <CANnL8go6SWv-HSiz5MBYE3OT3FZY7v7+LBgQq6KPZZzeyY-n-g@mail.gmail.com>

On Tue, Dec 10, 2013 at 12:44 PM, Even Rouault <even.rouault at mines-paris.org
> wrote:

> Le mardi 10 d?cembre 2013 16:48:31, Ivan Lucena a ?crit :
> > Hi Even,
> >
> > > From: even.rouault at mines-paris.org
> > > To: gdal-dev at lists.osgeo.org
> > > Subject: Re: [gdal-dev] Default GeoTransform for MEM driver
> > > Date: Mon, 9 Dec 2013 20:54:35 +0100
> > > CC: lucena_ivan at hotmail.com; tkeitt at utexas.edu;
> jukka.rahkonen at mmmtike.fi
> > >
> > > Le lundi 09 d?cembre 2013 18:08:19, Ivan Lucena a ?crit :
> > > > The other problem with that documentation is the return code.
> CE_Failue
> > > > means that the driver does not support it and/or that the dataset
> > > > doesn't have it.
> > >
> > > The current behaviour of the MEM driver doesn't particularly shock me.
> It
> > > seems OK to return CE_Failure if SetGeoTransform() hasn't been
> > > explicitely called to define it. And as far as the default
> geotransform,
> > > it is a matter of taste. [ 0, 1, 0, 0, 0, 1] would be indeed a bit more
> > > classical for a ungeoreferenced image, but one can consider that if
> > > GetGeoTransform() returns CE_Failure, the returned geotransform is to
> be
> > > ignored.
> >
> > That is good to know. So it really doesn't matter if the driver support
> > geotransformation or not.
> >
> > But my concern is when it returns CE_None. What does it really means
> > because I was checking some driver's implementation of GetGeoTransform
> and
> > I noticed that some of then always return CE_None no matter what.
> > So would
> > that be possible that a dataset is *ungeoreferenced* and a driver returns
> > CE_None with the default values [0, 1, 0, 0, 0, 1].
> > Should we trust that
> > those values [0, 1, 0, 0, 0, 1] are correct or are they just a default
> > filler?
> >
> > For example, to get [0, 1, 0, 0, 0, 1] we should expect a world-file that
> > should be something like:
> >
> > 1.0000000000
> > 0.0000000000
> > 0.0000000000
> > 1.0000000000
> > 0.5000000000
> > 0.5000000000
> >
> > Not:
> >
> > 1.0000000000
> > 0.0000000000
> > 0.0000000000
> > 1.0000000000
> > 0.0000000000
> > 0.0000000000
> >
> > Anyway, I will trust that the CE_None means that the geotransformation
> > values are correct but should I will also check if the values are equal
> to
> > [0, 1, 0, 0, 0, 1] just in case? And what to do if they are?
>
> I'm not sure to know the ultimate answer to your questions. My
> understanding
> of
> http://www.gdal.org/classGDALDataset.html#af9593cc241e7d140f5f3c4798a43a668
> is that when there's no projection space associated to a raster, it should
> return (0,1,0,0,0,1) and CE_Failure. But they are certainly drivers that
> return (0,1,0,0,0,1) and CE_None. They should likely be fixed to return
> CE_Failure instead. But you can also test if the geotransform is
> (0,1,0,0,0,1)
> since it isn't a likely real geotransform.
>

It would make things easier if all drivers returned the same default: (0,
1, 0, 0, 0, -1) for any dataset where the transform has not been assigned.
(I reworked my test to use the assumption that spatial y and line index y
are opposite sign and it works correctly.) I think it should be considered
a bug in the docs and any driver the does not return that default.
Otherwise users have to add a lot of ugly conditional code.

THK


>
> Even
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html
>



-- 
http://www.keittlab.org/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131211/443c9216/attachment-0001.html>

From even.rouault at mines-paris.org  Wed Dec 11 10:30:44 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 11 Dec 2013 19:30:44 +0100
Subject: [gdal-dev] Default GeoTransform for MEM driver
In-Reply-To: <CANnL8go6SWv-HSiz5MBYE3OT3FZY7v7+LBgQq6KPZZzeyY-n-g@mail.gmail.com>
References: <CANnL8gph7XO9SC6FCWi7zB8GRdAY_WSySan+Bq=6f@mail.gmail.com>
	<201312101944.32022.even.rouault@mines-paris.org>
	<CANnL8go6SWv-HSiz5MBYE3OT3FZY7v7+LBgQq6KPZZzeyY-n-g@mail.gmail.com>
Message-ID: <201312111930.44882.even.rouault@mines-paris.org>

Le mercredi 11 d?cembre 2013 19:23:09, Tim Keitt a ?crit :
> On Tue, Dec 10, 2013 at 12:44 PM, Even Rouault
> <even.rouault at mines-paris.org
> 
> > wrote:
> > 
> > Le mardi 10 d?cembre 2013 16:48:31, Ivan Lucena a ?crit :
> > > Hi Even,
> > > 
> > > > From: even.rouault at mines-paris.org
> > > > To: gdal-dev at lists.osgeo.org
> > > > Subject: Re: [gdal-dev] Default GeoTransform for MEM driver
> > > > Date: Mon, 9 Dec 2013 20:54:35 +0100
> > > > CC: lucena_ivan at hotmail.com; tkeitt at utexas.edu;
> > 
> > jukka.rahkonen at mmmtike.fi
> > 
> > > > Le lundi 09 d?cembre 2013 18:08:19, Ivan Lucena a ?crit :
> > > > > The other problem with that documentation is the return code.
> > 
> > CE_Failue
> > 
> > > > > means that the driver does not support it and/or that the dataset
> > > > > doesn't have it.
> > > > 
> > > > The current behaviour of the MEM driver doesn't particularly shock
> > > > me.
> > 
> > It
> > 
> > > > seems OK to return CE_Failure if SetGeoTransform() hasn't been
> > > > explicitely called to define it. And as far as the default
> > 
> > geotransform,
> > 
> > > > it is a matter of taste. [ 0, 1, 0, 0, 0, 1] would be indeed a bit
> > > > more classical for a ungeoreferenced image, but one can consider
> > > > that if GetGeoTransform() returns CE_Failure, the returned
> > > > geotransform is to
> > 
> > be
> > 
> > > > ignored.
> > > 
> > > That is good to know. So it really doesn't matter if the driver support
> > > geotransformation or not.
> > > 
> > > But my concern is when it returns CE_None. What does it really means
> > > because I was checking some driver's implementation of GetGeoTransform
> > 
> > and
> > 
> > > I noticed that some of then always return CE_None no matter what.
> > > So would
> > > that be possible that a dataset is *ungeoreferenced* and a driver
> > > returns CE_None with the default values [0, 1, 0, 0, 0, 1].
> > > Should we trust that
> > > those values [0, 1, 0, 0, 0, 1] are correct or are they just a default
> > > filler?
> > > 
> > > For example, to get [0, 1, 0, 0, 0, 1] we should expect a world-file
> > > that should be something like:
> > > 
> > > 1.0000000000
> > > 0.0000000000
> > > 0.0000000000
> > > 1.0000000000
> > > 0.5000000000
> > > 0.5000000000
> > > 
> > > Not:
> > > 
> > > 1.0000000000
> > > 0.0000000000
> > > 0.0000000000
> > > 1.0000000000
> > > 0.0000000000
> > > 0.0000000000
> > > 
> > > Anyway, I will trust that the CE_None means that the geotransformation
> > > values are correct but should I will also check if the values are equal
> > 
> > to
> > 
> > > [0, 1, 0, 0, 0, 1] just in case? And what to do if they are?
> > 
> > I'm not sure to know the ultimate answer to your questions. My
> > understanding
> > of
> > http://www.gdal.org/classGDALDataset.html#af9593cc241e7d140f5f3c4798a43a6
> > 68 is that when there's no projection space associated to a raster, it
> > should return (0,1,0,0,0,1) and CE_Failure. But they are certainly
> > drivers that return (0,1,0,0,0,1) and CE_None. They should likely be
> > fixed to return CE_Failure instead. But you can also test if the
> > geotransform is (0,1,0,0,0,1)
> > since it isn't a likely real geotransform.
> 
> It would make things easier if all drivers returned the same default: (0,
> 1, 0, 0, 0, -1) for any dataset where the transform has not been assigned.
> (I reworked my test to use the assumption that spatial y and line index y
> are opposite sign and it works correctly.) I think it should be considered
> a bug in the docs and any driver the does not return that default.
> Otherwise users have to add a lot of ugly conditional code.

I don't see where there's a bug in the documentation. (0,1,0,0,0,1) is OK for 
the default geotransform. It means that spatial coordinate space = raster 
coordinate space.
It is the geotransform (0,1,0,0,0,-1) of the MEM driver that is a bit odd.
Patches welcome to unify driver behaviour.

> 
> THK
> 
> > Even
> > 
> > --
> > Geospatial professional services
> > http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From ychemin at gmail.com  Thu Dec 12 02:03:47 2013
From: ychemin at gmail.com (Yann Chemin)
Date: Thu, 12 Dec 2013 15:33:47 +0530
Subject: [gdal-dev] Accessing a 2D array stored in 1D by GDALRasterIO()
Message-ID: <CALTpO6BrLd6FKJDah-dt=hN8eKqDyP+NdZPsr6Tmqc9y_1HxfA@mail.gmail.com>

Hi,

I loaded an image with:
GDALRasterIO(hB,GF_Read,0,0,nX,nY,oneDarray,nX,nY,GDT_Float32,0,0);

to run some statistics, however, a new requirement is to make stats per
land-use,

is there a way to get the index of a given pixel in the 1D array from a
given set of row & column?

Thank you,
Yann


-- 
----
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131212/ed7f2bb2/attachment.html>

From even.rouault at mines-paris.org  Thu Dec 12 03:42:41 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 12 Dec 2013 12:42:41 +0100
Subject: [gdal-dev] Accessing a 2D array stored in 1D by GDALRasterIO()
In-Reply-To: <CALTpO6BrLd6FKJDah-dt=hN8eKqDyP+NdZPsr6Tmqc9y_1HxfA@mail.gmail.com>
References: <CALTpO6BrLd6FKJDah-dt=hN8eKqDyP+NdZPsr6Tmqc9y_1HxfA@mail.gmail.com>
Message-ID: <1386848561.52a9a131c690f@imp.free.fr>

Selon Yann Chemin <ychemin at gmail.com>:

> Hi,
>
> I loaded an image with:
> GDALRasterIO(hB,GF_Read,0,0,nX,nY,oneDarray,nX,nY,GDT_Float32,0,0);
>
> to run some statistics, however, a new requirement is to make stats per
> land-use,
>
> is there a way to get the index of a given pixel in the 1D array from a
> given set of row & column?

OneDaarry[row * nXSize + col] where OneDarray is a float* (to match GDT_Float32)
and nXSize = GDALGetRasterBandXSize(hB)


>
> Thank you,
> Yann
>
>
> --
> ----
>



From even.rouault at mines-paris.org  Thu Dec 12 05:30:21 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 12 Dec 2013 14:30:21 +0100
Subject: [gdal-dev] [Qgis-developer] QGIS Multi-threaded Rendering
In-Reply-To: <CAC2XbFduypNWFNqnt2fBDw-uaZKHgBQCduK6=rdoPyH6yFdm-Q@mail.gmail.com>
References: <CAC2XbFduypNWFNqnt2fBDw-uaZKHgBQCduK6=rdoPyH6yFdm-Q@mail.gmail.com>
Message-ID: <1386855021.52a9ba6d6b3b6@imp.free.fr>

Hi Martin,

(CC'ing gdal-dev : original email is
http://lists.osgeo.org/pipermail/qgis-developer/2013-December/029716.html)

just commenting on the interesting raster topics.

> Finally, some further thoughts/questions:
>
> - rasters - currently we do not have API to cancel requests for raster
> blocks. This means that currently we need to wait until the raster
> block is fully read even when we cancel the rendering job. GDAL has
> some support for asynchronous requests - anyone has some experience
> with it?

Indeed there's an API in GDAL for asynchronous requests :
http://trac.osgeo.org/gdal/wiki/rfc24_progressive_data_support
Note that it has a "real" implementation only in the JPIPKAK driver
(driver that implement the JPIP protocol - JPEG2000 trough the network -
with the Kakadu library). For other drivers that don't have a dedicated
implementation, a default implementation will just turn the async requests
as a sync request (more precisely GetNextUpdatedRegion() will just do
a RasterIO(), other methods mentionned in the RFC are no-op).
Real cancellation / async request is generally hard to implement since the
low level libraries used by drivers must support it. The analysis must be
done on a per-driver basis (determine which drivers are important for you,
which ones are slow, see if it can be remedied in the general synchronous
case, otherwise imagine how async request could be implemented, ...)
We could imagine that the default GetNextUpdatedRegion(), instead of
issuing a single RasterIO() could split it up into several RasterIO()
if the request window crosses several tiles (in the case of a tiled
dataset) to allow cancellation between the calls to GetNextUpdatedRegion().
But that's no always a beneficial strategy. Drivers can use the fact that
a RasterIO() is done on a "big" window to optimize things a bit, w.r.t
issuing several RasterIO() on smaller windows. In GDAL 1.10, I've for example
implemented multi-threaded block decoding in the OpenJPEG driver : if the
window of a RasterIO() call spans over several tiles and you have several
cores, then each tile will be decoded in parallel.
Regarding the current API of asynchronous requests, I feel there's perhaps
a lack of a way of signaling that data is ready. GetNextUpdatedRegion()
works on a pulling startegy. Perhaps a callback mechanism could be usefull.
That topic needs some thinking...

>
> - rasters (again) - there are no intermediate updates of the raster
> layer when rendering. What that means is that until the raster layer
> is fully rendered, the preview is completely blank. There is a way to
> constrain the raster block requests to smaller tiles, but what would
> be the performance consequences? I am not that familiar with the way
> how raster drivers are implemented in GDAL... anyone to bring some
> wisdom?

You can issue a GDALRasterIO() call with a buffer size that is smaller than
the source window. If the raster has overviews (.ovr file, computed internal
overviews, or "implicit" overviews in formats like JPEG2000 or ECW), then they
will be used. (Of course, you can also directly issue GDALRasterIO() on a
overview band, but that will be equivalent performance-wise).
Otherwise, full resolution data will be fetched and then sub-sampled, which can
take some time. No magic solution here.

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From pierre.carreaud at sites.fr  Thu Dec 12 05:48:09 2013
From: pierre.carreaud at sites.fr (Pierre CARREAUD)
Date: Thu, 12 Dec 2013 14:48:09 +0100
Subject: [gdal-dev] Support of KOLOR KRO raw file
Message-ID: <007801cef740$cb53fdd0$61fbf970$@carreaud@sites.fr>

Hi List,

Do you know if GDAL can read .kro files ? It?s KOLOR Raw format. This type
of file is exported by Kolor Autopano Giga. If not, is it hard to implement?

The format is following: (http://www.autopano.net/wiki-en/Format_KRO )

Header is 20 bytes long :
 3 bytes : "KRO" signature in hex 0x4B 0x52 0x4F
 1 byte  : 0x01 version
 unsigned long : Width
 unsigned long : Height
 unsigned long : depth = > 8 bits, 16 bits, 32 bits  unsigned long : ncomp
=> number of compoment, 4 by default, RGB + Alpha  Data * : the data
uncompressed

- Everything is stored in big endian form ( header and datas )
- the data is stored RGBA, RGBA ( or RGB, RGB if you have 3 component only )
- It's row major order, meaning, you store first row, then second row
- top row is the first row
- Within a row, are columns stored left-to-right
- 16bits format is a 16bits integer (0..65535), not floating point ( it's
not like half floating point in openEXR )
- 32bits format is pure 'c' float stored binary in big endian format ( IEEE
754 binary floating point )
- no color space specification nor metadata stored
- file size limit is ruled by file system

Regards,

Pierre CARREAUD
Responsable d?affaire en topographie et lasergramm?trie


L?ING?NIERIE DE LA DURABILIT?
?
SITES ? Entit? ?le-de-France
P?le MIR (M?trologie - Instrumentations - Relev?s)
2 bis avenue du Centre
92500 Rueil-Malmaison, France
Tel?: 01 41 39 02 00 / Fax?: 01 41 39 02 01 www.sites.fr
?
??EXPERTISE????INSTRUMENTATION / MESURES????INGENIERIE



From wonder.sk at gmail.com  Thu Dec 12 06:43:49 2013
From: wonder.sk at gmail.com (Martin Dobias)
Date: Thu, 12 Dec 2013 21:43:49 +0700
Subject: [gdal-dev] [Qgis-developer] QGIS Multi-threaded Rendering
In-Reply-To: <1386855021.52a9ba6d6b3b6@imp.free.fr>
References: <CAC2XbFduypNWFNqnt2fBDw-uaZKHgBQCduK6=rdoPyH6yFdm-Q@mail.gmail.com>
	<1386855021.52a9ba6d6b3b6@imp.free.fr>
Message-ID: <CAC2XbFfsjEYXG4ce03xZo2oWuTJ7ow==WLNRjz8GJ63nm_rFSw@mail.gmail.com>

Hi Even

thanks for your thoughts.

On Thu, Dec 12, 2013 at 8:30 PM, Even Rouault
<even.rouault at mines-paris.org> wrote:
>> - rasters - currently we do not have API to cancel requests for raster
>> blocks. This means that currently we need to wait until the raster
>> block is fully read even when we cancel the rendering job. GDAL has
>> some support for asynchronous requests - anyone has some experience
>> with it?
>
> Indeed there's an API in GDAL for asynchronous requests :
> http://trac.osgeo.org/gdal/wiki/rfc24_progressive_data_support
> Note that it has a "real" implementation only in the JPIPKAK driver
> (driver that implement the JPIP protocol - JPEG2000 trough the network -
> with the Kakadu library). For other drivers that don't have a dedicated
> implementation, a default implementation will just turn the async requests
> as a sync request (more precisely GetNextUpdatedRegion() will just do
> a RasterIO(), other methods mentionned in the RFC are no-op).
> Real cancellation / async request is generally hard to implement since the
> low level libraries used by drivers must support it. The analysis must be
> done on a per-driver basis (determine which drivers are important for you,
> which ones are slow, see if it can be remedied in the general synchronous
> case, otherwise imagine how async request could be implemented, ...)
> We could imagine that the default GetNextUpdatedRegion(), instead of
> issuing a single RasterIO() could split it up into several RasterIO()
> if the request window crosses several tiles (in the case of a tiled
> dataset) to allow cancellation between the calls to GetNextUpdatedRegion().
> But that's no always a beneficial strategy. Drivers can use the fact that
> a RasterIO() is done on a "big" window to optimize things a bit, w.r.t
> issuing several RasterIO() on smaller windows. In GDAL 1.10, I've for example
> implemented multi-threaded block decoding in the OpenJPEG driver : if the
> window of a RasterIO() call spans over several tiles and you have several
> cores, then each tile will be decoded in parallel.
> Regarding the current API of asynchronous requests, I feel there's perhaps
> a lack of a way of signaling that data is ready. GetNextUpdatedRegion()
> works on a pulling startegy. Perhaps a callback mechanism could be usefull.
> That topic needs some thinking...

So obviously adding async API support for other common formats would
take a lot of time... I was secretly hoping that the remark in rfc24
mentioning only jpipkak driver was just a temporary state of affairs
:-)

However I realize that actually I do not really need to have truly
asynchronous requests. The requests from QGIS are being made from
within a worker thread, so it is not a problem if GDAL block that
thread. The only thing I need is to be able to tell GDAL to stop
reading data as soon as possible once the rendering gets cancelled.
API-wise, I would like to have a method in GDALDataset, using which I
could register my custom function returning cancellation status of the
request (just true/false). The drivers would be responsible for
calling that function whenever appropriate during RasterIO to check
whether the request has been cancelled or not. It would be probably
much less hassle to implement this functionality in drivers - although
I understand that still many drivers using custom libraries won't be
able to provide that functionality.

Regards
Martin

From even.rouault at mines-paris.org  Thu Dec 12 07:28:55 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 12 Dec 2013 16:28:55 +0100
Subject: [gdal-dev] [Qgis-developer] QGIS Multi-threaded Rendering
In-Reply-To: <CAC2XbFfsjEYXG4ce03xZo2oWuTJ7ow==WLNRjz8GJ63nm_rFSw@mail.gmail.com>
References: <CAC2XbFduypNWFNqnt2fBDw-uaZKHgBQCduK6=rdoPyH6yFdm-Q@mail.gmail.com>
	<1386855021.52a9ba6d6b3b6@imp.free.fr>
	<CAC2XbFfsjEYXG4ce03xZo2oWuTJ7ow==WLNRjz8GJ63nm_rFSw@mail.gmail.com>
Message-ID: <1386862135.52a9d637b3028@imp.free.fr>

Selon Martin Dobias <wonder.sk at gmail.com>:

> Hi Even
>
> thanks for your thoughts.
>
> On Thu, Dec 12, 2013 at 8:30 PM, Even Rouault
> <even.rouault at mines-paris.org> wrote:
> >> - rasters - currently we do not have API to cancel requests for raster
> >> blocks. This means that currently we need to wait until the raster
> >> block is fully read even when we cancel the rendering job. GDAL has
> >> some support for asynchronous requests - anyone has some experience
> >> with it?
> >
> > Indeed there's an API in GDAL for asynchronous requests :
> > http://trac.osgeo.org/gdal/wiki/rfc24_progressive_data_support
> > Note that it has a "real" implementation only in the JPIPKAK driver
> > (driver that implement the JPIP protocol - JPEG2000 trough the network -
> > with the Kakadu library). For other drivers that don't have a dedicated
> > implementation, a default implementation will just turn the async requests
> > as a sync request (more precisely GetNextUpdatedRegion() will just do
> > a RasterIO(), other methods mentionned in the RFC are no-op).
> > Real cancellation / async request is generally hard to implement since the
> > low level libraries used by drivers must support it. The analysis must be
> > done on a per-driver basis (determine which drivers are important for you,
> > which ones are slow, see if it can be remedied in the general synchronous
> > case, otherwise imagine how async request could be implemented, ...)
> > We could imagine that the default GetNextUpdatedRegion(), instead of
> > issuing a single RasterIO() could split it up into several RasterIO()
> > if the request window crosses several tiles (in the case of a tiled
> > dataset) to allow cancellation between the calls to GetNextUpdatedRegion().
> > But that's no always a beneficial strategy. Drivers can use the fact that
> > a RasterIO() is done on a "big" window to optimize things a bit, w.r.t
> > issuing several RasterIO() on smaller windows. In GDAL 1.10, I've for
> example
> > implemented multi-threaded block decoding in the OpenJPEG driver : if the
> > window of a RasterIO() call spans over several tiles and you have several
> > cores, then each tile will be decoded in parallel.
> > Regarding the current API of asynchronous requests, I feel there's perhaps
> > a lack of a way of signaling that data is ready. GetNextUpdatedRegion()
> > works on a pulling startegy. Perhaps a callback mechanism could be usefull.
> > That topic needs some thinking...
>
> So obviously adding async API support for other common formats would
> take a lot of time... I was secretly hoping that the remark in rfc24
> mentioning only jpipkak driver was just a temporary state of affairs
> :-)
>
> However I realize that actually I do not really need to have truly
> asynchronous requests. The requests from QGIS are being made from
> within a worker thread, so it is not a problem if GDAL block that
> thread. The only thing I need is to be able to tell GDAL to stop
> reading data as soon as possible once the rendering gets cancelled.
> API-wise, I would like to have a method in GDALDataset, using which I
> could register my custom function returning cancellation status of the
> request (just true/false). The drivers would be responsible for
> calling that function whenever appropriate during RasterIO to check
> whether the request has been cancelled or not. It would be probably
> much less hassle to implement this functionality in drivers - although
> I understand that still many drivers using custom libraries won't be
> able to provide that functionality.

Yes, that's a reasonable possibility. The callback could also take
as parameter a percentage of completion. That could actually be a
GDALProgressFunc (
http://trac.osgeo.org/gdal/browser/trunk/gdal/port/cpl_progress.h )


>
> Regards
> Martin
>



From pramsey at cleverelephant.ca  Thu Dec 12 12:36:42 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 12 Dec 2013 12:36:42 -0800
Subject: [gdal-dev] ISO WKB
Message-ID: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>

Hey all,
Is there already a facility for writing out ISO-standard WKB in GDAL? The biggest difference is the?wkbGeometryType number for the case of 3d features. OGR currently uses the old extended SFSQL adopted by PostGIS. ISO (naturally) did their own thing. As far as I can see, there?s no support there now, or is there?
P.


--?
Paul Ramsey
http://cleverelephant.ca
http://postgis.net
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131212/c99d2a98/attachment.html>

From even.rouault at mines-paris.org  Thu Dec 12 14:33:32 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 12 Dec 2013 23:33:32 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
Message-ID: <201312122333.32283.even.rouault@mines-paris.org>

Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :
> Hey all,
> Is there already a facility for writing out ISO-standard WKB in GDAL? The
> biggest difference is the wkbGeometryType number for the case of 3d
> features. OGR currently uses the old extended SFSQL adopted by PostGIS.
> ISO (naturally) did their own thing. As far as I can see, there?s no
> support there now, or is there? P.

Hi Paul,

no, there's no support for ISO WKB yet. We still stick to 
http://home.gdal.org/projects/opengis/twohalfdsf.html

I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or we 
could add an extra boolean argument bISOWkb to the existing exportToWkb(). Not 
sure about WkbSize() : does the size of ISO WKB blobs differ from the unofficial 
WKB ?

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From pramsey at cleverelephant.ca  Thu Dec 12 14:39:25 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 12 Dec 2013 14:39:25 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312122333.32283.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
Message-ID: <etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>

I?ve been looking over the code, and I think I can make importFromWkb consume ISO inputs with relatively minor changes. (during the geometry type determination in the concrete types, it looks easy enough to add a little logic to deal with ISO type numbers)
For exportToWkb, I?m wondering if maybe an optional parameter (wkbVariant?) that defaults to wkbVariantOGC would be sufficient?

It also seems the wkb reader/writer have little handling for empty geometry types. I?d like to add some in, if that?s OK.

Fortunately the only substantial difference for ISO WKB is the type number.

I?m starting an isowkb branch on my git repo to hold this piece of work, I don?t think it?ll be very big.

Then I?ll start asking about ?m? dimensions :)

P.

--?
Paul Ramsey
http://cleverelephant.ca
http://postgis.net

On December 12, 2013 at 2:33:41 PM, Even Rouault (even.rouault at mines-paris.org) wrote:

Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :  
> Hey all,  
> Is there already a facility for writing out ISO-standard WKB in GDAL? The  
> biggest difference is the wkbGeometryType number for the case of 3d  
> features. OGR currently uses the old extended SFSQL adopted by PostGIS.  
> ISO (naturally) did their own thing. As far as I can see, there?s no  
> support there now, or is there? P.  

Hi Paul,  

no, there's no support for ISO WKB yet. We still stick to  
http://home.gdal.org/projects/opengis/twohalfdsf.html  

I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or we  
could add an extra boolean argument bISOWkb to the existing exportToWkb(). Not  
sure about WkbSize() : does the size of ISO WKB blobs differ from the unofficial  
WKB ?  

Even  

--  
Geospatial professional services  
http://even.rouault.free.fr/services.html  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131212/a9254136/attachment.html>

From even.rouault at mines-paris.org  Thu Dec 12 14:57:58 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 12 Dec 2013 23:57:58 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
Message-ID: <201312122357.58554.even.rouault@mines-paris.org>

Le jeudi 12 d?cembre 2013 23:39:25, Paul Ramsey a ?crit :
> I?ve been looking over the code, and I think I can make importFromWkb
> consume ISO inputs with relatively minor changes. (during the geometry
> type determination in the concrete types, it looks easy enough to add a
> little logic to deal with ISO type numbers) For exportToWkb, I?m wondering
> if maybe an optional parameter (wkbVariant?) that defaults to
> wkbVariantOGC would be sufficient?

Sounds good to me. Is "wkbVariantOGC" the variant currently implemented ? Is 
our 3D support really compliant with an OGC standard ?

> 
> It also seems the wkb reader/writer have little handling for empty geometry
> types. I?d like to add some in, if that?s OK.

Are you sure about that ?

See :

>>> from osgeo import ogr
>>> ogr.CreateGeometryFromWkb(g.ExportToWkb()).ExportToWkt()
'LINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING 
EMPTY').ExportToWkb()).ExportToWkt()
'LINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING 
EMPTY').ExportToWkb()).ExportToWkt()
'LINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POLYGON 
EMPTY').ExportToWkb()).ExportToWkt()
'POLYGON EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTILINESTRING 
EMPTY').ExportToWkb()).ExportToWkt()
'MULTILINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTIPOLYGON 
EMPTY').ExportToWkb()).ExportToWkt()
'MULTIPOLYGON EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('GEOMETRYCOLLECTION 
EMPTY').ExportToWkb()).ExportToWkt()
'GEOMETRYCOLLECTION EMPTY'

The only exception is POINT EMPTY due to the lack of wkb representation for it 
:
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POINT 
EMPTY').ExportToWkb()).ExportToWkt()
'POINT (0 0)'


> 
> Fortunately the only substantial difference for ISO WKB is the type number.
> 
> I?m starting an isowkb branch on my git repo to hold this piece of work, I
> don?t think it?ll be very big.
> 
> Then I?ll start asking about ?m? dimensions :)

That's a fresh new land to explore...

> 
> P.
> 
> -- 
> Paul Ramsey
> http://cleverelephant.ca
> http://postgis.net
> 
> On December 12, 2013 at 2:33:41 PM, Even Rouault
> (even.rouault at mines-paris.org) wrote:
> 
> Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :
> > Hey all,
> > Is there already a facility for writing out ISO-standard WKB in GDAL? The
> > biggest difference is the wkbGeometryType number for the case of 3d
> > features. OGR currently uses the old extended SFSQL adopted by PostGIS.
> > ISO (naturally) did their own thing. As far as I can see, there?s no
> > support there now, or is there? P.
> 
> Hi Paul,
> 
> no, there's no support for ISO WKB yet. We still stick to
> http://home.gdal.org/projects/opengis/twohalfdsf.html
> 
> I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or we
> could add an extra boolean argument bISOWkb to the existing exportToWkb().
> Not sure about WkbSize() : does the size of ISO WKB blobs differ from the
> unofficial WKB ?
> 
> Even
> 
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From mateusz at loskot.net  Thu Dec 12 15:19:34 2013
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 12 Dec 2013 23:19:34 +0000
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312122357.58554.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
Message-ID: <CABUeae9EW22opsbyc6iEC2UdRLk-d6EdGMPiphQuRS7WWc6XCQ@mail.gmail.com>

On 12 Dec 2013 22:58, "Even Rouault" <even.rouault at mines-paris.org> wrote:
>
> Le jeudi 12 d?cembre 2013 23:39:25, Paul Ramsey a ?crit :
> > It also seems the wkb reader/writer have little handling for empty
geometry
> > types. I?d like to add some in, if that?s OK.
>
> Are you sure about that ?
>
> See :
>
> >>> from osgeo import ogr
> >>> ogr.CreateGeometryFromWkb(g.ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
> EMPTY').ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
> EMPTY').ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POLYGON
> EMPTY').ExportToWkb()).ExportToWkt()
> 'POLYGON EMPTY'
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTILINESTRING
> EMPTY').ExportToWkb()).ExportToWkt()
> 'MULTILINESTRING EMPTY'
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTIPOLYGON
> EMPTY').ExportToWkb()).ExportToWkt()
> 'MULTIPOLYGON EMPTY'
> >>>
ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('GEOMETRYCOLLECTION
> EMPTY').ExportToWkb()).ExportToWkt()
> 'GEOMETRYCOLLECTION EMPTY'
>
> The only exception is POINT EMPTY due to the lack of wkb representation
for it
> :
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POINT
> EMPTY').ExportToWkb()).ExportToWkt()
> 'POINT (0 0)'

See
http://blog.cleverelephant.ca/2010/03/nothing-nada-zip-bupkus.html

-- 
Mateusz ?oskot, http://mateusz.loskot.net
(Sent from mobile, apology for top-posting or broken quotes)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131212/1c22be29/attachment.html>

From pramsey at cleverelephant.ca  Thu Dec 12 15:24:25 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 12 Dec 2013 15:24:25 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312122357.58554.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
Message-ID: <etPan.52aa45a9.2ae8944a.6320@Butterfly.local>

Sounds good to me. Is "wkbVariantOGC" the variant currently implemented ? Is?
our 3D support really compliant with an OGC standard ??
Not really anymore, since SFSQL 1.2 defined OGC into sync with ISO. We?re in compliance with the old guidance that was passed and promptly forgotten in the period between SFSQL 1.1 and 1.2. Nothing wrong with that, we can call it something else (I guess?)

> It also seems the wkb reader/writer have little handling for empty geometry?
> types. I?d like to add some in, if that?s OK.?

Are you sure about that ??
Nope, you?re right. The empty support is implicitly tied to the understanding that numPoints == 0 means empty and numRings == 0?means?empty and numGeoms == 0?means?empty, rather than an IsEmpty() test.

The GeoPackage document actually specifies a representation for POINT EMPTY, ?"In GeoPackages these points SHALL be encoded as a Point where each coordinate value is set to an IEEE-754 quiet NaN value?.

P
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131212/e0bb6778/attachment-0001.html>

From Robin.Ellis at science.dsitia.qld.gov.au  Thu Dec 12 16:31:58 2013
From: Robin.Ellis at science.dsitia.qld.gov.au (Ellis Robin (Bundaberg))
Date: Fri, 13 Dec 2013 10:31:58 +1000
Subject: [gdal-dev] OSGeo.OGR.Layer.Clip in C# application
Message-ID: <B9924964883892428222097C3398D5A10CF3D2FC@CHQMAIL6.lands.resnet.qg>

I'm working in Win 7 x64 and  VS2010 using gdal/ogr compiled libraries
in a C# project (libraries from 'release-1600-x64-dev.zip', built
12/12/2013). I can successfully open two polygon shapefiles as
'DataSource' objects, however when I attempt to clip one shapefile by
the other I get this error message:

 

Attempt to write non-polygon (GEOMETRYCOLLECTION) geometry to POLYGON
type shapefile

 

My code is posted below, any assistance appreciated. I'm happy to read
more documentation/examples if somebody can point me in the right
direction.

 

Thanks very much

 

Rob

 

public static Layer clipAGdalDSByAnother(DataSource baseDS, DataSource
clipDS)

{

    Layer baseLayer = baseDS.GetLayerByIndex(0);

    Layer clipLayer = clipDS.GetLayerByIndex(0);

 

    string newDataName = "tester.shp";

 

    Layer layer;

 

    int i;

    for (i = 0; i < baseDS.GetLayerCount(); i++)

    {

        layer = baseDS.GetLayerByIndex(i);

        if (layer != null && layer.GetLayerDefn().GetName() ==
newDataName)

        {

            Console.WriteLine("Layer already existed. Recreating
it.\n");

            baseDS.DeleteLayer(i);

            break;

        }

    }

           

    Layer result = baseDS.CreateLayer(newDataName, null,
baseLayer.GetLayerDefn().GetGeomType(), new string[] { });

 

    baseLayer.Clip(clipLayer, result, new string[] { "SKIP_FAILURES=YES"
}, null, null);

 

    return result;

}

 


***************************** Disclaimer  *****************************

The contents of this electronic message and any attachments are intended only for the addressee and may contain privileged or confidential information. They may only be used for the purposes for which they were supplied. If you are not the addressee, you are notified that any transmission, distribution, downloading, printing or photocopying of the contents of this message or attachments is strictly prohibited.
The privilege of confidentiality attached to this message and attachments is not waived, lost or destroyed by reason of mistaken delivery to you. If you receive this message in error please notify the sender by return e-mail or telephone.

Please note: the Department of Science, Information Technology, Innovation and the Arts carries out automatic software scanning, filtering and blocking of E-mails and attachments (including emails of a personal nature) for detection of viruses, malicious code, SPAM, executable programs or content it deems unacceptable. All reasonable precautions will be taken to respect the privacy of individuals in accordance with the Information Privacy Act 2009 (Qld). Personal information will only be used for official purposes, e.g. monitoring Departmental Personnel's compliance with Departmental Policies. Personal information will not be divulged or disclosed to others, unless authorised or required by Departmental Policy and/or law.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131213/fbb46e67/attachment.html>

From jun.xiong1981 at gmail.com  Thu Dec 12 18:06:22 2013
From: jun.xiong1981 at gmail.com (Jun Xiong)
Date: Thu, 12 Dec 2013 19:06:22 -0700
Subject: [gdal-dev] How to open Erdas Imagine .ige (Large Raster Spill File)
	Format with gdal
Message-ID: <CAODwqS=b+eAdwtbx7sfpipJqfz8WMhbor1pqgExbRBuM3XJRZw@mail.gmail.com>

Hi All:

I have a Erdas .ige file (>=100GB) which was generated by gdal utility
gdal_merge.py,  then I want to use gdal API to open it, like following:

    GDALDatasetH  hDataset;
>     char *pszFilename;
>     GDALAllRegister();
>     hDataset = GDALOpen(pszFilename, GA_ReadOnly);


The program was compiled successfully, but when I tried to run it, the
system prompt

Segmentation fault (core dumped)


And nothing else, I googled such information and then found very hard to
locate the bugs. And ideas? Very appreciated.

Jun
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131212/9011f7bc/attachment.html>

From etourigny.dev at gmail.com  Thu Dec 12 18:12:09 2013
From: etourigny.dev at gmail.com (Etienne Tourigny)
Date: Fri, 13 Dec 2013 00:12:09 -0200
Subject: [gdal-dev] How to open Erdas Imagine .ige (Large Raster Spill
 File) Format with gdal
In-Reply-To: <CAODwqS=b+eAdwtbx7sfpipJqfz8WMhbor1pqgExbRBuM3XJRZw@mail.gmail.com>
References: <CAODwqS=b+eAdwtbx7sfpipJqfz8WMhbor1pqgExbRBuM3XJRZw@mail.gmail.com>
Message-ID: <CA+TxYvPyiDWqYR8JnmQx3cdkswVw9AS5PJoQ67foauM6J9d8tA@mail.gmail.com>

you have not initialized you variable pszFilename, try replacing it with
the actual file name of the file, or setting the contents of the variable.


On Fri, Dec 13, 2013 at 12:06 AM, Jun Xiong <jun.xiong1981 at gmail.com> wrote:

> Hi All:
>
> I have a Erdas .ige file (>=100GB) which was generated by gdal utility
> gdal_merge.py,  then I want to use gdal API to open it, like following:
>
>     GDALDatasetH  hDataset;
>>     char *pszFilename;
>>     GDALAllRegister();
>>     hDataset = GDALOpen(pszFilename, GA_ReadOnly);
>
>
> The program was compiled successfully, but when I tried to run it, the
> system prompt
>
> Segmentation fault (core dumped)
>
>
> And nothing else, I googled such information and then found very hard to
> locate the bugs. And ideas? Very appreciated.
>
> Jun
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131213/aac5b311/attachment.html>

From jun.xiong1981 at gmail.com  Thu Dec 12 19:20:42 2013
From: jun.xiong1981 at gmail.com (Jun Xiong)
Date: Thu, 12 Dec 2013 20:20:42 -0700
Subject: [gdal-dev] How to open Erdas Imagine .ige (Large Raster Spill
 File) Format with gdal
In-Reply-To: <CA+TxYvPyiDWqYR8JnmQx3cdkswVw9AS5PJoQ67foauM6J9d8tA@mail.gmail.com>
References: <CAODwqS=b+eAdwtbx7sfpipJqfz8WMhbor1pqgExbRBuM3XJRZw@mail.gmail.com>
	<CA+TxYvPyiDWqYR8JnmQx3cdkswVw9AS5PJoQ67foauM6J9d8tA@mail.gmail.com>
Message-ID: <CAODwqSmHo3hRSbB2mCYbRoYVYkab4Najy_ecxjxgp=6Auo26cA@mail.gmail.com>

HI Etienne:

Thank you for your reply.  Actually I did initialized pszFilename. I just
omit parts of the codes to make it readable.


On Thu, Dec 12, 2013 at 7:12 PM, Etienne Tourigny
<etourigny.dev at gmail.com>wrote:

> you have not initialized you variable pszFilename, try replacing it with
> the actual file name of the file, or setting the contents of the variable.
>
>
> On Fri, Dec 13, 2013 at 12:06 AM, Jun Xiong <jun.xiong1981 at gmail.com>wrote:
>
>> Hi All:
>>
>> I have a Erdas .ige file (>=100GB) which was generated by gdal utility
>> gdal_merge.py,  then I want to use gdal API to open it, like following:
>>
>>     GDALDatasetH  hDataset;
>>>     char *pszFilename;
>>>     GDALAllRegister();
>>>     hDataset = GDALOpen(pszFilename, GA_ReadOnly);
>>
>>
>> The program was compiled successfully, but when I tried to run it, the
>> system prompt
>>
>>  Segmentation fault (core dumped)
>>
>>
>> And nothing else, I googled such information and then found very hard to
>> locate the bugs. And ideas? Very appreciated.
>>
>> Jun
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>


-- 
Jun Xiong, Ph.D.
U.S. Geological Survey
2255 North Gemini Drive, Flagstaff, Arizona - 86001, USA.
Office: 928-556-7215
Fax:    928-556-7169
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131212/17f11ee7/attachment-0001.html>

From lukepinnerau at gmail.com  Thu Dec 12 20:54:04 2013
From: lukepinnerau at gmail.com (Luke)
Date: Thu, 12 Dec 2013 20:54:04 -0800 (PST)
Subject: [gdal-dev] How to open Erdas Imagine .ige (Large Raster Spill
 File) Format with gdal
In-Reply-To: <CAODwqS=b+eAdwtbx7sfpipJqfz8WMhbor1pqgExbRBuM3XJRZw@mail.gmail.com>
References: <CAODwqS=b+eAdwtbx7sfpipJqfz8WMhbor1pqgExbRBuM3XJRZw@mail.gmail.com>
Message-ID: <1386910444264-5094089.post@n6.nabble.com>

Pass the *.img filename to GDALOpen. Don't try to open the *.ige file
directly.  The ERDAS Imagine (HFA) driver will access the spill file
implicitly.


Luke



Jun Xiong wrote
> Hi All:
> 
> I have a Erdas .ige file (>=100GB) which was generated by gdal utility
> gdal_merge.py,  then I want to use gdal API to open it, like following:
> 
>     GDALDatasetH  hDataset;
>>     char *pszFilename;
>>     GDALAllRegister();
>>     hDataset = GDALOpen(pszFilename, GA_ReadOnly);
> 
> 
> The program was compiled successfully, but when I tried to run it, the
> system prompt
> 
> Segmentation fault (core dumped)
> 
> 
> And nothing else, I googled such information and then found very hard to
> locate the bugs. And ideas? Very appreciated.
> 
> Jun
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> http://lists.osgeo.org/mailman/listinfo/gdal-dev





--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-How-to-open-Erdas-Imagine-ige-Large-Raster-Spill-File-Format-with-gdal-tp5094078p5094089.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From bishop.dev at gmail.com  Thu Dec 12 23:25:55 2013
From: bishop.dev at gmail.com (Dmitriy Baryshnikov)
Date: Fri, 13 Dec 2013 11:25:55 +0400
Subject: [gdal-dev] [Qgis-developer] QGIS Multi-threaded Rendering
In-Reply-To: <1386862135.52a9d637b3028@imp.free.fr>
References: <CAC2XbFduypNWFNqnt2fBDw-uaZKHgBQCduK6=rdoPyH6yFdm-Q@mail.gmail.com>	<1386855021.52a9ba6d6b3b6@imp.free.fr>	<CAC2XbFfsjEYXG4ce03xZo2oWuTJ7ow==WLNRjz8GJ63nm_rFSw@mail.gmail.com>
	<1386862135.52a9d637b3028@imp.free.fr>
Message-ID: <52AAB683.2040007@gmail.com>

Hi,

Why not reading small chunks (i.e. 256 x 256) with RasterIO 
<http://www.gdal.org/classGDALDataset.html#ae077c53268d2272eebed10b891a05743> 
from big raster? We'll get less memory usage.
The program can count the percentage using the size of GDALDataset and 
size of chunks and cancel on any chunk.

By the way, can GDALDataset RasterIO different chunks from separate threads?

Best regards,
     Dmitry

12.12.2013 19:28, Even Rouault ?????:
> Selon Martin Dobias <wonder.sk at gmail.com>:
>
>> Hi Even
>>
>> thanks for your thoughts.
>>
>> On Thu, Dec 12, 2013 at 8:30 PM, Even Rouault
>> <even.rouault at mines-paris.org> wrote:
>>>> - rasters - currently we do not have API to cancel requests for raster
>>>> blocks. This means that currently we need to wait until the raster
>>>> block is fully read even when we cancel the rendering job. GDAL has
>>>> some support for asynchronous requests - anyone has some experience
>>>> with it?
>>> Indeed there's an API in GDAL for asynchronous requests :
>>> http://trac.osgeo.org/gdal/wiki/rfc24_progressive_data_support
>>> Note that it has a "real" implementation only in the JPIPKAK driver
>>> (driver that implement the JPIP protocol - JPEG2000 trough the network -
>>> with the Kakadu library). For other drivers that don't have a dedicated
>>> implementation, a default implementation will just turn the async requests
>>> as a sync request (more precisely GetNextUpdatedRegion() will just do
>>> a RasterIO(), other methods mentionned in the RFC are no-op).
>>> Real cancellation / async request is generally hard to implement since the
>>> low level libraries used by drivers must support it. The analysis must be
>>> done on a per-driver basis (determine which drivers are important for you,
>>> which ones are slow, see if it can be remedied in the general synchronous
>>> case, otherwise imagine how async request could be implemented, ...)
>>> We could imagine that the default GetNextUpdatedRegion(), instead of
>>> issuing a single RasterIO() could split it up into several RasterIO()
>>> if the request window crosses several tiles (in the case of a tiled
>>> dataset) to allow cancellation between the calls to GetNextUpdatedRegion().
>>> But that's no always a beneficial strategy. Drivers can use the fact that
>>> a RasterIO() is done on a "big" window to optimize things a bit, w.r.t
>>> issuing several RasterIO() on smaller windows. In GDAL 1.10, I've for
>> example
>>> implemented multi-threaded block decoding in the OpenJPEG driver : if the
>>> window of a RasterIO() call spans over several tiles and you have several
>>> cores, then each tile will be decoded in parallel.
>>> Regarding the current API of asynchronous requests, I feel there's perhaps
>>> a lack of a way of signaling that data is ready. GetNextUpdatedRegion()
>>> works on a pulling startegy. Perhaps a callback mechanism could be usefull.
>>> That topic needs some thinking...
>> So obviously adding async API support for other common formats would
>> take a lot of time... I was secretly hoping that the remark in rfc24
>> mentioning only jpipkak driver was just a temporary state of affairs
>> :-)
>>
>> However I realize that actually I do not really need to have truly
>> asynchronous requests. The requests from QGIS are being made from
>> within a worker thread, so it is not a problem if GDAL block that
>> thread. The only thing I need is to be able to tell GDAL to stop
>> reading data as soon as possible once the rendering gets cancelled.
>> API-wise, I would like to have a method in GDALDataset, using which I
>> could register my custom function returning cancellation status of the
>> request (just true/false). The drivers would be responsible for
>> calling that function whenever appropriate during RasterIO to check
>> whether the request has been cancelled or not. It would be probably
>> much less hassle to implement this functionality in drivers - although
>> I understand that still many drivers using custom libraries won't be
>> able to provide that functionality.
> Yes, that's a reasonable possibility. The callback could also take
> as parameter a percentage of completion. That could actually be a
> GDALProgressFunc (
> http://trac.osgeo.org/gdal/browser/trunk/gdal/port/cpl_progress.h )
>
>
>> Regards
>> Martin
>>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131213/adad0afd/attachment.html>

From mateusz at loskot.net  Fri Dec 13 01:42:33 2013
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 13 Dec 2013 09:42:33 +0000
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52aa45a9.2ae8944a.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52aa45a9.2ae8944a.6320@Butterfly.local>
Message-ID: <CABUeae9RxzkyRzXfKuPOLh_sgqdApbq4ogvyDkVzM-WPchmYcg@mail.gmail.com>

On 12 December 2013 23:24, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>
> The GeoPackage document actually specifies a representation for POINT EMPTY,
> "In GeoPackages these points SHALL be encoded as a Point where each
> coordinate value is set to an IEEE-754 quiet NaN value?.

Couldn't OGC and ISO unify *all* their specs to quitely NaN?

Or, couldn't FOSS implementations (PostGIS, OGR, ...) unify regardless
the 'unspecified behaviour' in (some) specs?

Best regards,
-- 
Mateusz  ?oskot, http://mateusz.loskot.net

From pepijn at vaneeckhoudt.net  Fri Dec 13 02:18:53 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Fri, 13 Dec 2013 11:18:53 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52aa45a9.2ae8944a.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>	<201312122333.32283.even.rouault@mines-paris.org>	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52aa45a9.2ae8944a.6320@Butterfly.local>
Message-ID: <52AADF0D.2030403@vaneeckhoudt.net>

On 13-12-13 00:24, Paul Ramsey wrote:
> The GeoPackage document actually specifies a representation for POINT 
> EMPTY,  "In GeoPackages these points SHALL be encoded as a Point where 
> each coordinate value is set to an IEEE-754 quiet NaN value".
I'm to blame for this one. It's specified in the GeoPackage spec because 
it's not specified in SFSQL or SQLMM and I didn't want to leave this as 
an unspecified part of the encoding.

The reason I pushed for the nan based encoding is that it provides an 
encoding of 'point empty' that does not lose information. The 
alternative of encoding it as null or multipoint empty changes the 
semantics of the object. If you stick with the point wkb type then the 
only option for special values is special double values. point(nan nan) 
seemed like a reasonable approximation of point empty; a point where the 
coordinates are not valid numbers.

If you think this is a bad idea or causes real difficulties in 
implementation please let me know, I'll bring it up in the geopackage 
swg then. Alternative solutions are also welcome of course.

Pepijn
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131213/e9e0bbbd/attachment.html>

From even.rouault at mines-paris.org  Fri Dec 13 11:11:10 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Fri, 13 Dec 2013 20:11:10 +0100
Subject: [gdal-dev] [Qgis-developer] QGIS Multi-threaded Rendering
In-Reply-To: <52AAB683.2040007@gmail.com>
References: <CAC2XbFduypNWFNqnt2fBDw-uaZKHgBQCduK6=rdoPyH6yFdm-Q@mail.gmail.com>
	<1386862135.52a9d637b3028@imp.free.fr> <52AAB683.2040007@gmail.com>
Message-ID: <201312132011.10057.even.rouault@mines-paris.org>

Le vendredi 13 d?cembre 2013 08:25:55, Dmitriy Baryshnikov a ?crit :
> Hi,
> 
> Why not reading small chunks (i.e. 256 x 256) with RasterIO
> <http://www.gdal.org/classGDALDataset.html#ae077c53268d2272eebed10b891a0574
> 3> from big raster? We'll get less memory usage.

I think QGIS currently does a single RasterIO for the widget. I guess it is a 
matter of simplicity in comparison to issuing small chunks and compositing 
them. And for some formats (such as ECW), it is actually better to issue a 
single RasterIO for the "big" window rather than doing several smaller ones.

> The program can count the percentage using the size of GDALDataset and
> size of chunks and cancel on any chunk.
> 
> By the way, can GDALDataset RasterIO different chunks from separate
> threads?

The dataset and rasterband objects are not supposed to be called from 
concurrent threads, so the generic implementation of 
GDALRasterBand::IRasterIO() in gcore/rasterio.cpp cannot do that. For example 
a IReadBlock() implementation will generally do a fseek() and fread() : if 2 
threads call it, the seek and read can be interleaved in a funny fashion ! 
Rasterband and dataset objects can also have state variables modified by 
IReadBlock() to do some caching, etc...
However driver implementations are perfectly free to do what they want. That's 
the case of the OpenJPEG driver I mentionned in my initial post.


> 
> Best regards,
>      Dmitry
> 
> 12.12.2013 19:28, Even Rouault ?????:
> > Selon Martin Dobias <wonder.sk at gmail.com>:
> >> Hi Even
> >> 
> >> thanks for your thoughts.
> >> 
> >> On Thu, Dec 12, 2013 at 8:30 PM, Even Rouault
> >> 
> >> <even.rouault at mines-paris.org> wrote:
> >>>> - rasters - currently we do not have API to cancel requests for raster
> >>>> blocks. This means that currently we need to wait until the raster
> >>>> block is fully read even when we cancel the rendering job. GDAL has
> >>>> some support for asynchronous requests - anyone has some experience
> >>>> with it?
> >>> 
> >>> Indeed there's an API in GDAL for asynchronous requests :
> >>> http://trac.osgeo.org/gdal/wiki/rfc24_progressive_data_support
> >>> Note that it has a "real" implementation only in the JPIPKAK driver
> >>> (driver that implement the JPIP protocol - JPEG2000 trough the network
> >>> - with the Kakadu library). For other drivers that don't have a
> >>> dedicated implementation, a default implementation will just turn the
> >>> async requests as a sync request (more precisely
> >>> GetNextUpdatedRegion() will just do a RasterIO(), other methods
> >>> mentionned in the RFC are no-op).
> >>> Real cancellation / async request is generally hard to implement since
> >>> the low level libraries used by drivers must support it. The analysis
> >>> must be done on a per-driver basis (determine which drivers are
> >>> important for you, which ones are slow, see if it can be remedied in
> >>> the general synchronous case, otherwise imagine how async request
> >>> could be implemented, ...) We could imagine that the default
> >>> GetNextUpdatedRegion(), instead of issuing a single RasterIO() could
> >>> split it up into several RasterIO() if the request window crosses
> >>> several tiles (in the case of a tiled dataset) to allow cancellation
> >>> between the calls to GetNextUpdatedRegion(). But that's no always a
> >>> beneficial strategy. Drivers can use the fact that a RasterIO() is
> >>> done on a "big" window to optimize things a bit, w.r.t issuing several
> >>> RasterIO() on smaller windows. In GDAL 1.10, I've for
> >> 
> >> example
> >> 
> >>> implemented multi-threaded block decoding in the OpenJPEG driver : if
> >>> the window of a RasterIO() call spans over several tiles and you have
> >>> several cores, then each tile will be decoded in parallel.
> >>> Regarding the current API of asynchronous requests, I feel there's
> >>> perhaps a lack of a way of signaling that data is ready.
> >>> GetNextUpdatedRegion() works on a pulling startegy. Perhaps a callback
> >>> mechanism could be usefull. That topic needs some thinking...
> >> 
> >> So obviously adding async API support for other common formats would
> >> take a lot of time... I was secretly hoping that the remark in rfc24
> >> mentioning only jpipkak driver was just a temporary state of affairs
> >> 
> >> :-)
> >> 
> >> However I realize that actually I do not really need to have truly
> >> asynchronous requests. The requests from QGIS are being made from
> >> within a worker thread, so it is not a problem if GDAL block that
> >> thread. The only thing I need is to be able to tell GDAL to stop
> >> reading data as soon as possible once the rendering gets cancelled.
> >> API-wise, I would like to have a method in GDALDataset, using which I
> >> could register my custom function returning cancellation status of the
> >> request (just true/false). The drivers would be responsible for
> >> calling that function whenever appropriate during RasterIO to check
> >> whether the request has been cancelled or not. It would be probably
> >> much less hassle to implement this functionality in drivers - although
> >> I understand that still many drivers using custom libraries won't be
> >> able to provide that functionality.
> > 
> > Yes, that's a reasonable possibility. The callback could also take
> > as parameter a percentage of completion. That could actually be a
> > GDALProgressFunc (
> > http://trac.osgeo.org/gdal/browser/trunk/gdal/port/cpl_progress.h )
> > 
> >> Regards
> >> Martin
> > 
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From pramsey at cleverelephant.ca  Fri Dec 13 12:00:33 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 13 Dec 2013 12:00:33 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312122357.58554.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
Message-ID: <etPan.52ab6761.4db127f8.6320@Butterfly.local>

I?ve pushed up some work to do this

https://github.com/pramsey/gdal/tree/isowkb

I had to change *two* method signatures, which I don?t really like, both exportToWkb and getGeometryType needed a variant parameter added. The problem is that getGeometryType returns the full WKB type, with dimensionality encoded, which makes it somewhat duplicative of getCoordinateDimension. In an ideal world, getGeometryType would only return the type number, and dimensionally information would be inferred from getCoordinateDimension.

Then only the exportToWkb signature would need a variant parameter.

importFromWkb also was changed to ingest the ISO variant if that?s what it?s fed. No changes to signature required there.

P.

--?
Paul Ramsey
http://cleverelephant.ca
http://postgis.net

On December 12, 2013 at 2:58:05 PM, Even Rouault (even.rouault at mines-paris.org) wrote:

Le jeudi 12 d?cembre 2013 23:39:25, Paul Ramsey a ?crit :  
> I?ve been looking over the code, and I think I can make importFromWkb  
> consume ISO inputs with relatively minor changes. (during the geometry  
> type determination in the concrete types, it looks easy enough to add a  
> little logic to deal with ISO type numbers) For exportToWkb, I?m wondering  
> if maybe an optional parameter (wkbVariant?) that defaults to  
> wkbVariantOGC would be sufficient?  

Sounds good to me. Is "wkbVariantOGC" the variant currently implemented ? Is  
our 3D support really compliant with an OGC standard ?  

>  
> It also seems the wkb reader/writer have little handling for empty geometry  
> types. I?d like to add some in, if that?s OK.  

Are you sure about that ?  

See :  

>>> from osgeo import ogr  
>>> ogr.CreateGeometryFromWkb(g.ExportToWkb()).ExportToWkt()  
'LINESTRING EMPTY'  
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING  
EMPTY').ExportToWkb()).ExportToWkt()  
'LINESTRING EMPTY'  
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING  
EMPTY').ExportToWkb()).ExportToWkt()  
'LINESTRING EMPTY'  
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POLYGON  
EMPTY').ExportToWkb()).ExportToWkt()  
'POLYGON EMPTY'  
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTILINESTRING  
EMPTY').ExportToWkb()).ExportToWkt()  
'MULTILINESTRING EMPTY'  
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTIPOLYGON  
EMPTY').ExportToWkb()).ExportToWkt()  
'MULTIPOLYGON EMPTY'  
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('GEOMETRYCOLLECTION  
EMPTY').ExportToWkb()).ExportToWkt()  
'GEOMETRYCOLLECTION EMPTY'  

The only exception is POINT EMPTY due to the lack of wkb representation for it  
:  
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POINT  
EMPTY').ExportToWkb()).ExportToWkt()  
'POINT (0 0)'  


>  
> Fortunately the only substantial difference for ISO WKB is the type number.  
>  
> I?m starting an isowkb branch on my git repo to hold this piece of work, I  
> don?t think it?ll be very big.  
>  
> Then I?ll start asking about ?m? dimensions :)  

That's a fresh new land to explore...  

>  
> P.  
>  
> --  
> Paul Ramsey  
> http://cleverelephant.ca  
> http://postgis.net  
>  
> On December 12, 2013 at 2:33:41 PM, Even Rouault  
> (even.rouault at mines-paris.org) wrote:  
>  
> Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :  
> > Hey all,  
> > Is there already a facility for writing out ISO-standard WKB in GDAL? The  
> > biggest difference is the wkbGeometryType number for the case of 3d  
> > features. OGR currently uses the old extended SFSQL adopted by PostGIS.  
> > ISO (naturally) did their own thing. As far as I can see, there?s no  
> > support there now, or is there? P.  
>  
> Hi Paul,  
>  
> no, there's no support for ISO WKB yet. We still stick to  
> http://home.gdal.org/projects/opengis/twohalfdsf.html  
>  
> I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or we  
> could add an extra boolean argument bISOWkb to the existing exportToWkb().  
> Not sure about WkbSize() : does the size of ISO WKB blobs differ from the  
> unofficial WKB ?  
>  
> Even  
>  
> --  
> Geospatial professional services  
> http://even.rouault.free.fr/services.html  

--  
Geospatial professional services  
http://even.rouault.free.fr/services.html  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131213/3e1521f8/attachment.html>

From pramsey at cleverelephant.ca  Fri Dec 13 12:51:57 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 13 Dec 2013 12:51:57 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52ab6761.4db127f8.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
Message-ID: <etPan.52ab736d.66ef438d.6320@Butterfly.local>

Actually, I think changing the contract on getGeometryType to only ever returning the basic (non-3d) type would clean up driver implementation code a bit. Grepping for it in the drivers, you see a lot of

CPLAssert(wkbFlatten(poGeom->getGeometryType()) == wkbPoint)

and

? ?|| (poLine->getGeometryType() != wkbLineString
? ? && poLine->getGeometryType() != wkbLineString25D) )

and very few unqualified calls to it.

P.

--?
Paul Ramsey
http://cleverelephant.ca
http://postgis.net

On December 13, 2013 at 12:00:34 PM, Paul Ramsey (pramsey at cleverelephant.ca) wrote:

I?ve pushed up some work to do this

https://github.com/pramsey/gdal/tree/isowkb

I had to change *two* method signatures, which I don?t really like, both exportToWkb and getGeometryType needed a variant parameter added. The problem is that getGeometryType returns the full WKB type, with dimensionality encoded, which makes it somewhat duplicative of getCoordinateDimension. In an ideal world, getGeometryType would only return the type number, and dimensionally information would be inferred from getCoordinateDimension.

Then only the exportToWkb signature would need a variant parameter.

importFromWkb also was changed to ingest the ISO variant if that?s what it?s fed. No changes to signature required there.

P.

--?
Paul Ramsey
http://cleverelephant.ca
http://postgis.net

On December 12, 2013 at 2:58:05 PM, Even Rouault (even.rouault at mines-paris.org) wrote:

Le jeudi 12 d?cembre 2013 23:39:25, Paul Ramsey a ?crit :
> I?ve been looking over the code, and I think I can make importFromWkb
> consume ISO inputs with relatively minor changes. (during the geometry
> type determination in the concrete types, it looks easy enough to add a
> little logic to deal with ISO type numbers) For exportToWkb, I?m wondering
> if maybe an optional parameter (wkbVariant?) that defaults to
> wkbVariantOGC would be sufficient?

Sounds good to me. Is "wkbVariantOGC" the variant currently implemented ? Is
our 3D support really compliant with an OGC standard ?

>
> It also seems the wkb reader/writer have little handling for empty geometry
> types. I?d like to add some in, if that?s OK.

Are you sure about that ?

See :

>>> from osgeo import ogr
>>> ogr.CreateGeometryFromWkb(g.ExportToWkb()).ExportToWkt()
'LINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
EMPTY').ExportToWkb()).ExportToWkt()
'LINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
EMPTY').ExportToWkb()).ExportToWkt()
'LINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POLYGON
EMPTY').ExportToWkb()).ExportToWkt()
'POLYGON EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTILINESTRING
EMPTY').ExportToWkb()).ExportToWkt()
'MULTILINESTRING EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTIPOLYGON
EMPTY').ExportToWkb()).ExportToWkt()
'MULTIPOLYGON EMPTY'
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('GEOMETRYCOLLECTION
EMPTY').ExportToWkb()).ExportToWkt()
'GEOMETRYCOLLECTION EMPTY'

The only exception is POINT EMPTY due to the lack of wkb representation for it
:
>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POINT
EMPTY').ExportToWkb()).ExportToWkt()
'POINT (0 0)'


>
> Fortunately the only substantial difference for ISO WKB is the type number.
>
> I?m starting an isowkb branch on my git repo to hold this piece of work, I
> don?t think it?ll be very big.
>
> Then I?ll start asking about ?m? dimensions :)

That's a fresh new land to explore...

>
> P.
>
> --
> Paul Ramsey
> http://cleverelephant.ca
> http://postgis.net
>
> On December 12, 2013 at 2:33:41 PM, Even Rouault
> (even.rouault at mines-paris.org) wrote:
>
> Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :
> > Hey all,
> > Is there already a facility for writing out ISO-standard WKB in GDAL? The
> > biggest difference is the wkbGeometryType number for the case of 3d
> > features. OGR currently uses the old extended SFSQL adopted by PostGIS.
> > ISO (naturally) did their own thing. As far as I can see, there?s no
> > support there now, or is there? P.
>
> Hi Paul,
>
> no, there's no support for ISO WKB yet. We still stick to
> http://home.gdal.org/projects/opengis/twohalfdsf.html
>
> I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or we
> could add an extra boolean argument bISOWkb to the existing exportToWkb().
> Not sure about WkbSize() : does the size of ISO WKB blobs differ from the
> unofficial WKB ?
>
> Even
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html

--
Geospatial professional services
http://even.rouault.free.fr/services.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131213/ba094d01/attachment.html>

From even.rouault at mines-paris.org  Fri Dec 13 13:07:43 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Fri, 13 Dec 2013 22:07:43 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52ab6761.4db127f8.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
Message-ID: <201312132207.43973.even.rouault@mines-paris.org>

Le vendredi 13 d?cembre 2013 21:00:33, Paul Ramsey a ?crit :
> I?ve pushed up some work to do this
> 
> https://github.com/pramsey/gdal/tree/isowkb
> 
> I had to change *two* method signatures, which I don?t really like, both
> exportToWkb and getGeometryType needed a variant parameter added. The
> problem is that getGeometryType returns the full WKB type, with
> dimensionality encoded, which makes it somewhat duplicative of
> getCoordinateDimension. In an ideal world, getGeometryType would only
> return the type number, and dimensionally information would be inferred
> from getCoordinateDimension.
> 
> Then only the exportToWkb signature would need a variant parameter.
> 
> importFromWkb also was changed to ingest the ISO variant if that?s what
> it?s fed. No changes to signature required there.

The fact that getGeometryType() returns type + dimensionality is actually not 
new to your proposal.

The main issue I see is that, now, the OGRwkbGeometryType enumeration contains 
different ways of encoding the same information. For mortals, a wkbPoint25D is 
the same as a wkbPointIsoZ. As OGRwkbGeometryType belongs to the OGR public C 
API, we must be careful when touching it. The direct consequence of 
introducing new values is that all code that currently accepts 
OGRwkbGeometryType as an argument will not know what to do with it if it is 
fed with a wkb*****IsoZ value. Such code is for example the implementation of 
the CreateLayer() method of all existing OGR drivers that have creation 
capabilities. The wkbFlatten() macro will not work on IsoZ constants.

Perhaps a documentation note saying that the wkb****IsoZ values are only 
returned by getGeometryType(OGRwkbVariant = wkbVariantIso), and should not be 
used as values of parameters of any method should be sufficient ?

Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ... 
wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ }, a 
getIsoGeometryType() method that returns it, and the exportToWkb() methods 
that calls int getGeometryType(OGRwkbVariant eVariant) { return (eVariant == 
wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }

I'm not sure what's the best way of addressing that. It looks like the now 
famous motto "We can't be compatible to MULTIPLE standards at the same time." 
applies...

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Fri Dec 13 13:21:22 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Fri, 13 Dec 2013 22:21:22 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52ab736d.66ef438d.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
	<etPan.52ab736d.66ef438d.6320@Butterfly.local>
Message-ID: <201312132221.22427.even.rouault@mines-paris.org>

Le vendredi 13 d?cembre 2013 21:51:57, Paul Ramsey a ?crit :
> Actually, I think changing the contract on getGeometryType to only ever
> returning the basic (non-3d) type would clean up driver implementation
> code a bit. Grepping for it in the drivers, you see a lot of
> 
> CPLAssert(wkbFlatten(poGeom->getGeometryType()) == wkbPoint)
> 
> and
> 
>    || (poLine->getGeometryType() != wkbLineString
>     && poLine->getGeometryType() != wkbLineString25D) )
> 
> and very few unqualified calls to it.

This would have impacts on drivers, but also on external code since 
OGR_G_GetGeometryType() is the C mapping of OGRGeometry::getGeometryType()

There are also OGRGeomField::GetType(), OGRFeatureDefn::GetGeomType() and 
OGRLayer::GetGeomType() (and their C equivalents) that return wkbGeometryType. 
I imagine that if we change the contract of OGRGeometry::getGeometryType(), 
they should also behave similarly, for consistency.

So we have a backward compatibility issue here, which must be carefully 
weighted in.

> 
> P.
> 
> -- 
> Paul Ramsey
> http://cleverelephant.ca
> http://postgis.net
> 
> On December 13, 2013 at 12:00:34 PM, Paul Ramsey
> (pramsey at cleverelephant.ca) wrote:
> 
> I?ve pushed up some work to do this
> 
> https://github.com/pramsey/gdal/tree/isowkb
> 
> I had to change *two* method signatures, which I don?t really like, both
> exportToWkb and getGeometryType needed a variant parameter added. The
> problem is that getGeometryType returns the full WKB type, with
> dimensionality encoded, which makes it somewhat duplicative of
> getCoordinateDimension. In an ideal world, getGeometryType would only
> return the type number, and dimensionally information would be inferred
> from getCoordinateDimension.
> 
> Then only the exportToWkb signature would need a variant parameter.
> 
> importFromWkb also was changed to ingest the ISO variant if that?s what
> it?s fed. No changes to signature required there.
> 
> P.
> 
> -- 
> Paul Ramsey
> http://cleverelephant.ca
> http://postgis.net
> 
> On December 12, 2013 at 2:58:05 PM, Even Rouault
> (even.rouault at mines-paris.org) wrote:
> 
> Le jeudi 12 d?cembre 2013 23:39:25, Paul Ramsey a ?crit :
> > I?ve been looking over the code, and I think I can make importFromWkb
> > consume ISO inputs with relatively minor changes. (during the geometry
> > type determination in the concrete types, it looks easy enough to add a
> > little logic to deal with ISO type numbers) For exportToWkb, I?m
> > wondering if maybe an optional parameter (wkbVariant?) that defaults to
> > wkbVariantOGC would be sufficient?
> 
> Sounds good to me. Is "wkbVariantOGC" the variant currently implemented ?
> Is our 3D support really compliant with an OGC standard ?
> 
> > It also seems the wkb reader/writer have little handling for empty
> > geometry types. I?d like to add some in, if that?s OK.
> 
> Are you sure about that ?
> 
> See :
> >>> from osgeo import ogr
> >>> ogr.CreateGeometryFromWkb(g.ExportToWkb()).ExportToWkt()
> 
> 'LINESTRING EMPTY'
> 
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
> 
> EMPTY').ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
> 
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
> 
> EMPTY').ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
> 
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POLYGON
> 
> EMPTY').ExportToWkb()).ExportToWkt()
> 'POLYGON EMPTY'
> 
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTILINESTRING
> 
> EMPTY').ExportToWkb()).ExportToWkt()
> 'MULTILINESTRING EMPTY'
> 
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTIPOLYGON
> 
> EMPTY').ExportToWkb()).ExportToWkt()
> 'MULTIPOLYGON EMPTY'
> 
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('GEOMETRYCOLLECTION
> 
> EMPTY').ExportToWkb()).ExportToWkt()
> 'GEOMETRYCOLLECTION EMPTY'
> 
> The only exception is POINT EMPTY due to the lack of wkb representation for
> it
> 
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POINT
> 
> EMPTY').ExportToWkb()).ExportToWkt()
> 'POINT (0 0)'
> 
> > Fortunately the only substantial difference for ISO WKB is the type
> > number.
> > 
> > I?m starting an isowkb branch on my git repo to hold this piece of work,
> > I don?t think it?ll be very big.
> > 
> > Then I?ll start asking about ?m? dimensions :)
> 
> That's a fresh new land to explore...
> 
> > P.
> > 
> > --
> > Paul Ramsey
> > http://cleverelephant.ca
> > http://postgis.net
> > 
> > On December 12, 2013 at 2:33:41 PM, Even Rouault
> > (even.rouault at mines-paris.org) wrote:
> > 
> > Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :
> > > Hey all,
> > > Is there already a facility for writing out ISO-standard WKB in GDAL?
> > > The biggest difference is the wkbGeometryType number for the case of
> > > 3d features. OGR currently uses the old extended SFSQL adopted by
> > > PostGIS. ISO (naturally) did their own thing. As far as I can see,
> > > there?s no support there now, or is there? P.
> > 
> > Hi Paul,
> > 
> > no, there's no support for ISO WKB yet. We still stick to
> > http://home.gdal.org/projects/opengis/twohalfdsf.html
> > 
> > I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or
> > we could add an extra boolean argument bISOWkb to the existing
> > exportToWkb(). Not sure about WkbSize() : does the size of ISO WKB blobs
> > differ from the unofficial WKB ?
> > 
> > Even
> > 
> > --
> > Geospatial professional services
> > http://even.rouault.free.fr/services.html
> 
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From pramsey at cleverelephant.ca  Fri Dec 13 13:32:38 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 13 Dec 2013 13:32:38 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312132221.22427.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
	<etPan.52ab736d.66ef438d.6320@Butterfly.local>
	<201312132221.22427.even.rouault@mines-paris.org>
Message-ID: <etPan.52ab7cf6.1befd79f.6320@Butterfly.local>

Ah, right, it?s exposed.?

Unfortunate, because it means that the OGC/ISO variant problem leaks into more external things than just WKB.
I wonder how many people test dimensionality with getCoordinateDimension and how many do it with (wkb25DBit & getGeometryType()), no way to know unfortunately

P.

--?
Paul Ramsey
http://cleverelephant.ca
http://postgis.net

On December 13, 2013 at 1:21:40 PM, Even Rouault (even.rouault at mines-paris.org) wrote:

Le vendredi 13 d?cembre 2013 21:51:57, Paul Ramsey a ?crit :  
> Actually, I think changing the contract on getGeometryType to only ever  
> returning the basic (non-3d) type would clean up driver implementation  
> code a bit. Grepping for it in the drivers, you see a lot of  
>  
> CPLAssert(wkbFlatten(poGeom->getGeometryType()) == wkbPoint)  
>  
> and  
>  
> || (poLine->getGeometryType() != wkbLineString  
> && poLine->getGeometryType() != wkbLineString25D) )  
>  
> and very few unqualified calls to it.  

This would have impacts on drivers, but also on external code since  
OGR_G_GetGeometryType() is the C mapping of OGRGeometry::getGeometryType()  

There are also OGRGeomField::GetType(), OGRFeatureDefn::GetGeomType() and  
OGRLayer::GetGeomType() (and their C equivalents) that return wkbGeometryType.  
I imagine that if we change the contract of OGRGeometry::getGeometryType(),  
they should also behave similarly, for consistency.  

So we have a backward compatibility issue here, which must be carefully  
weighted in.  

>  
> P.  
>  
> --  
> Paul Ramsey  
> http://cleverelephant.ca  
> http://postgis.net  
>  
> On December 13, 2013 at 12:00:34 PM, Paul Ramsey  
> (pramsey at cleverelephant.ca) wrote:  
>  
> I?ve pushed up some work to do this  
>  
> https://github.com/pramsey/gdal/tree/isowkb  
>  
> I had to change *two* method signatures, which I don?t really like, both  
> exportToWkb and getGeometryType needed a variant parameter added. The  
> problem is that getGeometryType returns the full WKB type, with  
> dimensionality encoded, which makes it somewhat duplicative of  
> getCoordinateDimension. In an ideal world, getGeometryType would only  
> return the type number, and dimensionally information would be inferred  
> from getCoordinateDimension.  
>  
> Then only the exportToWkb signature would need a variant parameter.  
>  
> importFromWkb also was changed to ingest the ISO variant if that?s what  
> it?s fed. No changes to signature required there.  
>  
> P.  
>  
> --  
> Paul Ramsey  
> http://cleverelephant.ca  
> http://postgis.net  
>  
> On December 12, 2013 at 2:58:05 PM, Even Rouault  
> (even.rouault at mines-paris.org) wrote:  
>  
> Le jeudi 12 d?cembre 2013 23:39:25, Paul Ramsey a ?crit :  
> > I?ve been looking over the code, and I think I can make importFromWkb  
> > consume ISO inputs with relatively minor changes. (during the geometry  
> > type determination in the concrete types, it looks easy enough to add a  
> > little logic to deal with ISO type numbers) For exportToWkb, I?m  
> > wondering if maybe an optional parameter (wkbVariant?) that defaults to  
> > wkbVariantOGC would be sufficient?  
>  
> Sounds good to me. Is "wkbVariantOGC" the variant currently implemented ?  
> Is our 3D support really compliant with an OGC standard ?  
>  
> > It also seems the wkb reader/writer have little handling for empty  
> > geometry types. I?d like to add some in, if that?s OK.  
>  
> Are you sure about that ?  
>  
> See :  
> >>> from osgeo import ogr  
> >>> ogr.CreateGeometryFromWkb(g.ExportToWkb()).ExportToWkt()  
>  
> 'LINESTRING EMPTY'  
>  
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING  
>  
> EMPTY').ExportToWkb()).ExportToWkt()  
> 'LINESTRING EMPTY'  
>  
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING  
>  
> EMPTY').ExportToWkb()).ExportToWkt()  
> 'LINESTRING EMPTY'  
>  
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POLYGON  
>  
> EMPTY').ExportToWkb()).ExportToWkt()  
> 'POLYGON EMPTY'  
>  
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTILINESTRING  
>  
> EMPTY').ExportToWkb()).ExportToWkt()  
> 'MULTILINESTRING EMPTY'  
>  
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTIPOLYGON  
>  
> EMPTY').ExportToWkb()).ExportToWkt()  
> 'MULTIPOLYGON EMPTY'  
>  
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('GEOMETRYCOLLECTION  
>  
> EMPTY').ExportToWkb()).ExportToWkt()  
> 'GEOMETRYCOLLECTION EMPTY'  
>  
> The only exception is POINT EMPTY due to the lack of wkb representation for  
> it  
>  
> >>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POINT  
>  
> EMPTY').ExportToWkb()).ExportToWkt()  
> 'POINT (0 0)'  
>  
> > Fortunately the only substantial difference for ISO WKB is the type  
> > number.  
> >  
> > I?m starting an isowkb branch on my git repo to hold this piece of work,  
> > I don?t think it?ll be very big.  
> >  
> > Then I?ll start asking about ?m? dimensions :)  
>  
> That's a fresh new land to explore...  
>  
> > P.  
> >  
> > --  
> > Paul Ramsey  
> > http://cleverelephant.ca  
> > http://postgis.net  
> >  
> > On December 12, 2013 at 2:33:41 PM, Even Rouault  
> > (even.rouault at mines-paris.org) wrote:  
> >  
> > Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :  
> > > Hey all,  
> > > Is there already a facility for writing out ISO-standard WKB in GDAL?  
> > > The biggest difference is the wkbGeometryType number for the case of  
> > > 3d features. OGR currently uses the old extended SFSQL adopted by  
> > > PostGIS. ISO (naturally) did their own thing. As far as I can see,  
> > > there?s no support there now, or is there? P.  
> >  
> > Hi Paul,  
> >  
> > no, there's no support for ISO WKB yet. We still stick to  
> > http://home.gdal.org/projects/opengis/twohalfdsf.html  
> >  
> > I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or  
> > we could add an extra boolean argument bISOWkb to the existing  
> > exportToWkb(). Not sure about WkbSize() : does the size of ISO WKB blobs  
> > differ from the unofficial WKB ?  
> >  
> > Even  
> >  
> > --  
> > Geospatial professional services  
> > http://even.rouault.free.fr/services.html  
>  
> --  
> Geospatial professional services  
> http://even.rouault.free.fr/services.html  

--  
Geospatial professional services  
http://even.rouault.free.fr/services.html  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131213/ee10c9ea/attachment.html>

From Robin.Ellis at science.dsitia.qld.gov.au  Sun Dec 15 21:12:20 2013
From: Robin.Ellis at science.dsitia.qld.gov.au (Ellis Robin (Bundaberg))
Date: Mon, 16 Dec 2013 15:12:20 +1000
Subject: [gdal-dev] OSGeo.OGR.Layer.Clip in C# application
Message-ID: <B9924964883892428222097C3398D5A10CFBEE21@CHQMAIL6.lands.resnet.qg>

As an update, this would appear to be a topological issue with my input
shapefile. I can successfully complete Intersection processes using the
method described previously if I use simple data inputs. Similarly, I
can complete a Clip process on simple data inputs, although the results
aren't always entirely as expected. If I hook up the
GDALProgressFuncDelegate I do notice this message pops up during
intersection/clip of complex inputs:

 

'System.ApplicationException' occurred in ogr_csharp.dll

 

Which ultimately leads to the GEOMETRYCOLLECTION error reported
previously. I can only assume that clean topology will avoid this.

 

Regards

 

Rob

 

From: gdal-dev-bounces at lists.osgeo.org
[mailto:gdal-dev-bounces at lists.osgeo.org] On Behalf Of Ellis Robin
(Bundaberg)
Sent: Friday, 13 December 2013 10:32 AM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] OSGeo.OGR.Layer.Clip in C# application

 

I'm working in Win 7 x64 and  VS2010 using gdal/ogr compiled libraries
in a C# project (libraries from 'release-1600-x64-dev.zip', built
12/12/2013). I can successfully open two polygon shapefiles as
'DataSource' objects, however when I attempt to clip one shapefile by
the other I get this error message:

 

Attempt to write non-polygon (GEOMETRYCOLLECTION) geometry to POLYGON
type shapefile

 

My code is posted below, any assistance appreciated. I'm happy to read
more documentation/examples if somebody can point me in the right
direction.

 

Thanks very much

 

Rob

 

public static Layer clipAGdalDSByAnother(DataSource baseDS, DataSource
clipDS)

{

    Layer baseLayer = baseDS.GetLayerByIndex(0);

    Layer clipLayer = clipDS.GetLayerByIndex(0);

 

    string newDataName = "tester.shp";

 

    Layer layer;

 

    int i;

    for (i = 0; i < baseDS.GetLayerCount(); i++)

    {

        layer = baseDS.GetLayerByIndex(i);

        if (layer != null && layer.GetLayerDefn().GetName() ==
newDataName)

        {

            Console.WriteLine("Layer already existed. Recreating
it.\n");

            baseDS.DeleteLayer(i);

            break;

        }

    }

           

    Layer result = baseDS.CreateLayer(newDataName, null,
baseLayer.GetLayerDefn().GetGeomType(), new string[] { });

 

    baseLayer.Clip(clipLayer, result, new string[] { "SKIP_FAILURES=YES"
}, null, null);

 

    return result;

}

 

***************************** Disclaimer  *****************************

The contents of this electronic message and any attachments are intended
only for the addressee and may contain privileged or confidential
information. They may only be used for the purposes for which they were
supplied. If you are not the addressee, you are notified that any
transmission, distribution, downloading, printing or photocopying of the
contents of this message or attachments is strictly prohibited.
The privilege of confidentiality attached to this message and
attachments is not waived, lost or destroyed by reason of mistaken
delivery to you. If you receive this message in error please notify the
sender by return e-mail or telephone.

Please note: the Department of Science, Information Technology,
Innovation and the Arts carries out automatic software scanning,
filtering and blocking of E-mails and attachments (including emails of a
personal nature) for detection of viruses, malicious code, SPAM,
executable programs or content it deems unacceptable. All reasonable
precautions will be taken to respect the privacy of individuals in
accordance with the Information Privacy Act 2009 (Qld). Personal
information will only be used for official purposes, e.g. monitoring
Departmental Personnel's compliance with Departmental Policies. Personal
information will not be divulged or disclosed to others, unless
authorised or required by Departmental Policy and/or law.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131216/d87d8a29/attachment.html>

From s.r.kriishna at gmail.com  Sun Dec 15 23:04:58 2013
From: s.r.kriishna at gmail.com (SIVA RAMA KRISHNA)
Date: Mon, 16 Dec 2013 12:34:58 +0530
Subject: [gdal-dev] Generating Lat,
	long Cordinates with bearing line and angle
Message-ID: <CAP-zkzctmZA_RuM+kxJEaHvSr5w-9c6Eht+HrBDd-nND9hhHQA@mail.gmail.com>

Hello,

Thanks in advance
I have a *lat, lon* coordinate with a known projection system I assume it a
initial point. I want to generate a next Position with the an *angle* with
(horizontal/vertical)  and *bearing length*  in lat,lon  coordinates and
complete it with angles and bearing lengths to form a polygon


Any Help in the above context is highly appreciated
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131216/51e9e2bb/attachment.html>

From p.scadden at gns.cri.nz  Mon Dec 16 12:49:23 2013
From: p.scadden at gns.cri.nz (Phil Scadden)
Date: Tue, 17 Dec 2013 09:49:23 +1300
Subject: [gdal-dev] Generating Lat,
 long Cordinates with bearing line and angle
In-Reply-To: <CAP-zkzctmZA_RuM+kxJEaHvSr5w-9c6Eht+HrBDd-nND9hhHQA@mail.gmail.com>
References: <CAP-zkzctmZA_RuM+kxJEaHvSr5w-9c6Eht+HrBDd-nND9hhHQA@mail.gmail.com>
Message-ID: <52AF6753.1050509@gns.cri.nz>


> I have a *lat, lon* coordinate with a known projection system I assume 
> it a initial point. I want to generate a next Position with the an 
> *angle* with (horizontal/vertical)  and *bearing length*  in lat,lon 
> coordinates and complete it with angles and bearing lengths to form a 
> polygon

Try http://www.movable-type.co.uk/scripts/latlong.html#destPoint


However, you need to be very careful with this as calculations are being 
done assuming a spherical earth. Fine is distances arent large enough 
for the ellipsoidal effects to affect accuracy. For large distances, you 
need to use Vincent' s_formula - 
http://en.wikipedia.org/wiki/Vincenty%27s_formulae which require iteration.


Notice: This email and any attachments are confidential.
If received in error please destroy and immediately notify us.
Do not copy or disclose the contents.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131217/6611bd11/attachment.html>

From pramsey at cleverelephant.ca  Mon Dec 16 13:57:23 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 16 Dec 2013 13:57:23 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <etPan.52ab6761.4db127f8.6320@Butterfly.local>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
Message-ID: <CACowWR2LxX6bd8KWQn8Os5iNZjYic_sAmRqZ=nS28VBPA21waw@mail.gmail.com>

Back to this, is it OK? How are we patching back to SVN? I can convert
it into a patch and attach to a ticket, if that's the path.

P.

On Fri, Dec 13, 2013 at 12:00 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> I?ve pushed up some work to do this
>
> https://github.com/pramsey/gdal/tree/isowkb
>
> I had to change *two* method signatures, which I don?t really like, both
> exportToWkb and getGeometryType needed a variant parameter added. The
> problem is that getGeometryType returns the full WKB type, with
> dimensionality encoded, which makes it somewhat duplicative of
> getCoordinateDimension. In an ideal world, getGeometryType would only return
> the type number, and dimensionally information would be inferred from
> getCoordinateDimension.
>
> Then only the exportToWkb signature would need a variant parameter.
>
> importFromWkb also was changed to ingest the ISO variant if that?s what it?s
> fed. No changes to signature required there.
>
> P.
>
> --
> Paul Ramsey
> http://cleverelephant.ca
> http://postgis.net
>
> On December 12, 2013 at 2:58:05 PM, Even Rouault
> (even.rouault at mines-paris.org) wrote:
>
> Le jeudi 12 d?cembre 2013 23:39:25, Paul Ramsey a ?crit :
>> I?ve been looking over the code, and I think I can make importFromWkb
>> consume ISO inputs with relatively minor changes. (during the geometry
>> type determination in the concrete types, it looks easy enough to add a
>> little logic to deal with ISO type numbers) For exportToWkb, I?m wondering
>> if maybe an optional parameter (wkbVariant?) that defaults to
>> wkbVariantOGC would be sufficient?
>
> Sounds good to me. Is "wkbVariantOGC" the variant currently implemented ? Is
> our 3D support really compliant with an OGC standard ?
>
>>
>> It also seems the wkb reader/writer have little handling for empty
>> geometry
>> types. I?d like to add some in, if that?s OK.
>
> Are you sure about that ?
>
> See :
>
>>>> from osgeo import ogr
>>>> ogr.CreateGeometryFromWkb(g.ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
>>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
> EMPTY').ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
>>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('LINESTRING
> EMPTY').ExportToWkb()).ExportToWkt()
> 'LINESTRING EMPTY'
>>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POLYGON
> EMPTY').ExportToWkb()).ExportToWkt()
> 'POLYGON EMPTY'
>>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTILINESTRING
> EMPTY').ExportToWkb()).ExportToWkt()
> 'MULTILINESTRING EMPTY'
>>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('MULTIPOLYGON
> EMPTY').ExportToWkb()).ExportToWkt()
> 'MULTIPOLYGON EMPTY'
>>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('GEOMETRYCOLLECTION
> EMPTY').ExportToWkb()).ExportToWkt()
> 'GEOMETRYCOLLECTION EMPTY'
>
> The only exception is POINT EMPTY due to the lack of wkb representation for
> it
> :
>>>> ogr.CreateGeometryFromWkb(ogr.CreateGeometryFromWkt('POINT
> EMPTY').ExportToWkb()).ExportToWkt()
> 'POINT (0 0)'
>
>
>>
>> Fortunately the only substantial difference for ISO WKB is the type
>> number.
>>
>> I?m starting an isowkb branch on my git repo to hold this piece of work, I
>> don?t think it?ll be very big.
>>
>> Then I?ll start asking about ?m? dimensions :)
>
> That's a fresh new land to explore...
>
>>
>> P.
>>
>> --
>> Paul Ramsey
>> http://cleverelephant.ca
>> http://postgis.net
>>
>> On December 12, 2013 at 2:33:41 PM, Even Rouault
>> (even.rouault at mines-paris.org) wrote:
>>
>> Le jeudi 12 d?cembre 2013 21:36:42, Paul Ramsey a ?crit :
>> > Hey all,
>> > Is there already a facility for writing out ISO-standard WKB in GDAL?
>> > The
>> > biggest difference is the wkbGeometryType number for the case of 3d
>> > features. OGR currently uses the old extended SFSQL adopted by PostGIS.
>> > ISO (naturally) did their own thing. As far as I can see, there?s no
>> > support there now, or is there? P.
>>
>> Hi Paul,
>>
>> no, there's no support for ISO WKB yet. We still stick to
>> http://home.gdal.org/projects/opengis/twohalfdsf.html
>>
>> I can imagine we could have exportToISOWkb() method in OGRGeometry*. Or we
>> could add an extra boolean argument bISOWkb to the existing exportToWkb().
>> Not sure about WkbSize() : does the size of ISO WKB blobs differ from the
>> unofficial WKB ?
>>
>> Even
>>
>> --
>> Geospatial professional services
>> http://even.rouault.free.fr/services.html
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Tue Dec 17 00:41:50 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 17 Dec 2013 09:41:50 +0100
Subject: [gdal-dev] Generating Lat,
	long Cordinates with bearing line and angle
In-Reply-To: <52AF6753.1050509@gns.cri.nz>
References: <CAP-zkzctmZA_RuM+kxJEaHvSr5w-9c6Eht+HrBDd-nND9hhHQA@mail.gmail.com>
	<52AF6753.1050509@gns.cri.nz>
Message-ID: <1387269710.52b00e4e46651@imp.free.fr>

Selon Phil Scadden <p.scadden at gns.cri.nz>:

>
> > I have a *lat, lon* coordinate with a known projection system I assume
> > it a initial point. I want to generate a next Position with the an
> > *angle* with (horizontal/vertical)  and *bearing length*  in lat,lon
> > coordinates and complete it with angles and bearing lengths to form a
> > polygon
>
> Try http://www.movable-type.co.uk/scripts/latlong.html#destPoint
>
>
> However, you need to be very careful with this as calculations are being
> done assuming a spherical earth. Fine is distances arent large enough
> for the ellipsoidal effects to affect accuracy. For large distances, you
> need to use Vincent' s_formula -
> http://en.wikipedia.org/wiki/Vincenty%27s_formulae which require iteration.

http://geographiclib.sourceforge.net/ has an implementation of it.

>
>
> Notice: This email and any attachments are confidential.
> If received in error please destroy and immediately notify us.
> Do not copy or disclose the contents.
>
>



From even.rouault at mines-paris.org  Tue Dec 17 01:03:01 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 17 Dec 2013 10:03:01 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <CACowWR2LxX6bd8KWQn8Os5iNZjYic_sAmRqZ=nS28VBPA21waw@mail.gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
	<CACowWR2LxX6bd8KWQn8Os5iNZjYic_sAmRqZ=nS28VBPA21waw@mail.gmail.com>
Message-ID: <1387270981.52b013450bdcb@imp.free.fr>

Selon Paul Ramsey <pramsey at cleverelephant.ca>:

> Back to this, is it OK?

As said in http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html,
I feel a bit unconfortable with the extension of the OGRwkbGeometryType
enumeration that has possible impacts on other parts of OGR. There's perhaps a
time where we will touch it, but I'd expect it to ideally embrace Z, M, ZM,
circular geometries at once. And that would deserve a RFC.

What do you think of keeping it an internal enumeration of OGR, since that's
probably all you need for now ?

"Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ }, a
getIsoGeometryType() method that returns it, and the exportToWkb() methods
that calls int getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }"

I'd be happy to hear about other GDAL developers opinion on this.

> How are we patching back to SVN? I can convert
> it into a patch and attach to a ticket, if that's the path.

git-svn can be used to bridge the 2 worlds, but in my recent experience it has
been painful to use. So generating a patch and applying it is probably easier.

Even

--
Geospatial professional services
http://even.rouault.free.fr/services.html


From mateusz at loskot.net  Tue Dec 17 06:09:41 2013
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 17 Dec 2013 14:09:41 +0000
Subject: [gdal-dev] ISO WKB
In-Reply-To: <1387270981.52b013450bdcb@imp.free.fr>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
	<CACowWR2LxX6bd8KWQn8Os5iNZjYic_sAmRqZ=nS28VBPA21waw@mail.gmail.com>
	<1387270981.52b013450bdcb@imp.free.fr>
Message-ID: <CABUeae8Z6U0xd+5XMtB_3LctVEc3L8iXdNF2aEmAg3PKV_dKNA@mail.gmail.com>

On 17 December 2013 09:03, Even Rouault <even.rouault at mines-paris.org> wrote:
> Selon Paul Ramsey <pramsey at cleverelephant.ca>:
>
>> Back to this, is it OK?
>
> As said in http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html,
> I feel a bit unconfortable with the extension of the OGRwkbGeometryType
> enumeration that has possible impacts on other parts of OGR. There's perhaps a
> time where we will touch it, but I'd expect it to ideally embrace Z, M, ZM,
> circular geometries at once. And that would deserve a RFC.
>
> What do you think of keeping it an internal enumeration of OGR, since that's
> probably all you need for now ?
>
> "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
> wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ }, a
> getIsoGeometryType() method that returns it, and the exportToWkb() methods
> that calls int getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
> wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }"
>
> I'd be happy to hear about other GDAL developers opinion on this.

IMHO, each format based on a particular spec/standard should be
supported with a separate interface (enum + functions)
per format/standard.

Best regards,
-- 
Mateusz  ?oskot, http://mateusz.loskot.net

From bishop.dev at gmail.com  Tue Dec 17 12:16:25 2013
From: bishop.dev at gmail.com (Dmitriy Baryshnikov)
Date: Wed, 18 Dec 2013 00:16:25 +0400
Subject: [gdal-dev] ISO WKB
In-Reply-To: <CABUeae8Z6U0xd+5XMtB_3LctVEc3L8iXdNF2aEmAg3PKV_dKNA@mail.gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>	<201312122333.32283.even.rouault@mines-paris.org>	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>	<201312122357.58554.even.rouault@mines-paris.org>	<etPan.52ab6761.4db127f8.6320@Butterfly.local>	<CACowWR2LxX6bd8KWQn8Os5iNZjYic_sAmRqZ=nS28VBPA21waw@mail.gmail.com>	<1387270981.52b013450bdcb@imp.free.fr>
	<CABUeae8Z6U0xd+5XMtB_3LctVEc3L8iXdNF2aEmAg3PKV_dKNA@mail.gmail.com>
Message-ID: <52B0B119.5050306@gmail.com>

Hi,

I afraid that we come to situation where:

getGeometryType()
getIsoGeometryType()
getRFCGeometryType()
...
getBlahBlahGeometryType()

Why not have only one method and only one enum (as GDAL origin - single 
abstract data model to the calling application for all supported formats).
I think all ISO specific things should be internal and driver specific. 
So, we will get single GDAL enum of geom types.

Best regards,
     Dmitry

17.12.2013 18:09, Mateusz Loskot ?????:
> On 17 December 2013 09:03, Even Rouault <even.rouault at mines-paris.org> wrote:
>> Selon Paul Ramsey <pramsey at cleverelephant.ca>:
>>
>>> Back to this, is it OK?
>> As said in http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html,
>> I feel a bit unconfortable with the extension of the OGRwkbGeometryType
>> enumeration that has possible impacts on other parts of OGR. There's perhaps a
>> time where we will touch it, but I'd expect it to ideally embrace Z, M, ZM,
>> circular geometries at once. And that would deserve a RFC.
>>
>> What do you think of keeping it an internal enumeration of OGR, since that's
>> probably all you need for now ?
>>
>> "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
>> wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ }, a
>> getIsoGeometryType() method that returns it, and the exportToWkb() methods
>> that calls int getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
>> wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }"
>>
>> I'd be happy to hear about other GDAL developers opinion on this.
> IMHO, each format based on a particular spec/standard should be
> supported with a separate interface (enum + functions)
> per format/standard.
>
> Best regards,

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131218/88505bc8/attachment.html>

From even.rouault at mines-paris.org  Tue Dec 17 12:32:23 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 17 Dec 2013 21:32:23 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <52B0B119.5050306@gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<CABUeae8Z6U0xd+5XMtB_3LctVEc3L8iXdNF2aEmAg3PKV_dKNA@mail.gmail.com>
	<52B0B119.5050306@gmail.com>
Message-ID: <201312172132.23786.even.rouault@mines-paris.org>

Le mardi 17 d?cembre 2013 21:16:25, Dmitriy Baryshnikov a ?crit :
> Hi,
> 
> I afraid that we come to situation where:
> 
> getGeometryType()
> getIsoGeometryType()
> getRFCGeometryType()
> ...
> getBlahBlahGeometryType()
> 
> Why not have only one method and only one enum (as GDAL origin - single
> abstract data model to the calling application for all supported formats).
> I think all ISO specific things should be internal and driver specific.
> So, we will get single GDAL enum of geom types.

I don't see it a problem if we have different getXXXGeometryType() or 
exportToXXXX() methods in OGRGeometry, provided that they document well the 
standard/document they implement. The ISO WKB encoding is a standard, so it 
can be a legitimate interface of OGRGeometry, and could potentially be used in 
several drivers ( actually if you look at OGRSpatialReference class it has a 
lot of import / export methods to various exotic formats, only used by one 
driver ). 

> 
> Best regards,
>      Dmitry
> 
> 17.12.2013 18:09, Mateusz Loskot ?????:
> > On 17 December 2013 09:03, Even Rouault <even.rouault at mines-paris.org> 
wrote:
> >> Selon Paul Ramsey <pramsey at cleverelephant.ca>:
> >>> Back to this, is it OK?
> >> 
> >> As said in
> >> http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html, I
> >> feel a bit unconfortable with the extension of the OGRwkbGeometryType
> >> enumeration that has possible impacts on other parts of OGR. There's
> >> perhaps a time where we will touch it, but I'd expect it to ideally
> >> embrace Z, M, ZM, circular geometries at once. And that would deserve a
> >> RFC.
> >> 
> >> What do you think of keeping it an internal enumeration of OGR, since
> >> that's probably all you need for now ?
> >> 
> >> "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
> >> wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ },
> >> a getIsoGeometryType() method that returns it, and the exportToWkb()
> >> methods that calls int getGeometryType(OGRwkbVariant eVariant) { return
> >> (eVariant == wkbVariantOgc) ? getGeometryType()  :
> >> getIsoGeometryType(); }"
> >> 
> >> I'd be happy to hear about other GDAL developers opinion on this.
> > 
> > IMHO, each format based on a particular spec/standard should be
> > supported with a separate interface (enum + functions)
> > per format/standard.
> > 
> > Best regards,

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From bishop.dev at gmail.com  Tue Dec 17 12:38:44 2013
From: bishop.dev at gmail.com (Dmitriy Baryshnikov)
Date: Wed, 18 Dec 2013 00:38:44 +0400
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312172132.23786.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<CABUeae8Z6U0xd+5XMtB_3LctVEc3L8iXdNF2aEmAg3PKV_dKNA@mail.gmail.com>
	<52B0B119.5050306@gmail.com>
	<201312172132.23786.even.rouault@mines-paris.org>
Message-ID: <52B0B654.6000703@gmail.com>

In this case, the

getXXXGeometryType()

is more logic, than

int getGeometryType(OGRwkbVariant eVariant) { return
(eVariant == wkbVariantOgc) ? getGeometryType()  :
getIsoGeometryType(); }

Best regards,
     Dmitry

18.12.2013 0:32, Even Rouault ?????:
> Le mardi 17 d?cembre 2013 21:16:25, Dmitriy Baryshnikov a ?crit :
>> Hi,
>>
>> I afraid that we come to situation where:
>>
>> getGeometryType()
>> getIsoGeometryType()
>> getRFCGeometryType()
>> ...
>> getBlahBlahGeometryType()
>>
>> Why not have only one method and only one enum (as GDAL origin - single
>> abstract data model to the calling application for all supported formats).
>> I think all ISO specific things should be internal and driver specific.
>> So, we will get single GDAL enum of geom types.
> I don't see it a problem if we have different getXXXGeometryType() or
> exportToXXXX() methods in OGRGeometry, provided that they document well the
> standard/document they implement. The ISO WKB encoding is a standard, so it
> can be a legitimate interface of OGRGeometry, and could potentially be used in
> several drivers ( actually if you look at OGRSpatialReference class it has a
> lot of import / export methods to various exotic formats, only used by one
> driver ).
>
>> Best regards,
>>       Dmitry
>>
>> 17.12.2013 18:09, Mateusz Loskot ?????:
>>> On 17 December 2013 09:03, Even Rouault <even.rouault at mines-paris.org>
> wrote:
>>>> Selon Paul Ramsey <pramsey at cleverelephant.ca>:
>>>>> Back to this, is it OK?
>>>> As said in
>>>> http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html, I
>>>> feel a bit unconfortable with the extension of the OGRwkbGeometryType
>>>> enumeration that has possible impacts on other parts of OGR. There's
>>>> perhaps a time where we will touch it, but I'd expect it to ideally
>>>> embrace Z, M, ZM, circular geometries at once. And that would deserve a
>>>> RFC.
>>>>
>>>> What do you think of keeping it an internal enumeration of OGR, since
>>>> that's probably all you need for now ?
>>>>
>>>> "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
>>>> wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ },
>>>> a getIsoGeometryType() method that returns it, and the exportToWkb()
>>>> methods that calls int getGeometryType(OGRwkbVariant eVariant) { return
>>>> (eVariant == wkbVariantOgc) ? getGeometryType()  :
>>>> getIsoGeometryType(); }"
>>>>
>>>> I'd be happy to hear about other GDAL developers opinion on this.
>>> IMHO, each format based on a particular spec/standard should be
>>> supported with a separate interface (enum + functions)
>>> per format/standard.
>>>
>>> Best regards,


From even.rouault at mines-paris.org  Tue Dec 17 12:44:13 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 17 Dec 2013 21:44:13 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <52B0B654.6000703@gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312172132.23786.even.rouault@mines-paris.org>
	<52B0B654.6000703@gmail.com>
Message-ID: <201312172144.13068.even.rouault@mines-paris.org>

Le mardi 17 d?cembre 2013 21:38:44, Dmitriy Baryshnikov a ?crit :
> In this case, the
> 
> getXXXGeometryType()
> 
> is more logic, than
> 
> int getGeometryType(OGRwkbVariant eVariant) { return
> (eVariant == wkbVariantOgc) ? getGeometryType()  :
> getIsoGeometryType(); }

ah ok, I see your point. The idea was just a proposal to offer an helper method 
to avoid typing in the exportToWkb() of each geometry subclass :
 (eVariant == wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType();

That getGeometryType(OGRwkbVariant eVariant) could be a protected method of 
OGRGeometry class, so that it remains an internal implementation detail. 

> 
> Best regards,
>      Dmitry
> 
> 18.12.2013 0:32, Even Rouault ?????:
> > Le mardi 17 d?cembre 2013 21:16:25, Dmitriy Baryshnikov a ?crit :
> >> Hi,
> >> 
> >> I afraid that we come to situation where:
> >> 
> >> getGeometryType()
> >> getIsoGeometryType()
> >> getRFCGeometryType()
> >> ...
> >> getBlahBlahGeometryType()
> >> 
> >> Why not have only one method and only one enum (as GDAL origin - single
> >> abstract data model to the calling application for all supported
> >> formats). I think all ISO specific things should be internal and driver
> >> specific. So, we will get single GDAL enum of geom types.
> > 
> > I don't see it a problem if we have different getXXXGeometryType() or
> > exportToXXXX() methods in OGRGeometry, provided that they document well
> > the standard/document they implement. The ISO WKB encoding is a
> > standard, so it can be a legitimate interface of OGRGeometry, and could
> > potentially be used in several drivers ( actually if you look at
> > OGRSpatialReference class it has a lot of import / export methods to
> > various exotic formats, only used by one driver ).
> > 
> >> Best regards,
> >> 
> >>       Dmitry
> >> 
> >> 17.12.2013 18:09, Mateusz Loskot ?????:
> >>> On 17 December 2013 09:03, Even Rouault <even.rouault at mines-paris.org>
> > 
> > wrote:
> >>>> Selon Paul Ramsey <pramsey at cleverelephant.ca>:
> >>>>> Back to this, is it OK?
> >>>> 
> >>>> As said in
> >>>> http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html, I
> >>>> feel a bit unconfortable with the extension of the OGRwkbGeometryType
> >>>> enumeration that has possible impacts on other parts of OGR. There's
> >>>> perhaps a time where we will touch it, but I'd expect it to ideally
> >>>> embrace Z, M, ZM, circular geometries at once. And that would deserve
> >>>> a RFC.
> >>>> 
> >>>> What do you think of keeping it an internal enumeration of OGR, since
> >>>> that's probably all you need for now ?
> >>>> 
> >>>> "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso,
> >>>> ... wkbGeometryCollectionIso, wkbPointIsoZ, ...
> >>>> wkbGeometryCollectionIsoZ }, a getIsoGeometryType() method that
> >>>> returns it, and the exportToWkb() methods that calls int
> >>>> getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
> >>>> wkbVariantOgc) ? getGeometryType()  :
> >>>> getIsoGeometryType(); }"
> >>>> 
> >>>> I'd be happy to hear about other GDAL developers opinion on this.
> >>> 
> >>> IMHO, each format based on a particular spec/standard should be
> >>> supported with a separate interface (enum + functions)
> >>> per format/standard.
> >>> 
> >>> Best regards,

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Tue Dec 17 12:54:31 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 17 Dec 2013 21:54:31 +0100
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and raster
	bands as virtual memory mappings"
Message-ID: <201312172154.31610.even.rouault@mines-paris.org>

Hi,

This is a call for discussion for "RFC 45: GDAL datasets and raster bands as 
virtual memory mappings"

Beginning of the RFC inline (the full RFC includes a few colorful schemas !) :

"""

== Summary ==

This document proposes additions to GDAL so that image data of GDAL datasets 
and
raster bands can be seen as virtual memory mappings, for hopefully simpler 
usage.

== Rationale ==

When one wants to read or write image data from/into a GDAL dataset or raster
band, one must use the RasterIO() interface for the regions of interest that
are read or written. For small images, the most convenient solution is usually
to read/write the whole image in a single request where the region of interest
is the full raster extent. For larger images, particularly when they do not
fit entirely in RAM, this is not possible, and if one wants to operate on the
whole image, one must use a windowing strategy to avoid memory issues : 
typically
by proceeding scanline (or group of scanlines) by scanline, or by blocks for 
tiled
images. This can make the writing of algorithms more complicated when they 
need
to access a neighbourhoud of pixels around each pixel of interest, since the 
size of this
extra window must be taken into account, leading to overlapping regions of
interests. Nothing that cannot be solved, but that requires some additional
thinking that distracts from the followed main purpose.

The proposed addition of this RFC is to make the image data appear as a single
array accessed with a pointer, without being limited by the size of RAM with
respect to the size of the dataset (excepted limitations imposed by the CPU
architecture and the operating system)

"""

Best regards,

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Tue Dec 17 13:01:31 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 17 Dec 2013 22:01:31 +0100
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
	raster bands as virtual memory mappings"
In-Reply-To: <201312172154.31610.even.rouault@mines-paris.org>
References: <201312172154.31610.even.rouault@mines-paris.org>
Message-ID: <201312172201.31535.even.rouault@mines-paris.org>

Le mardi 17 d?cembre 2013 21:54:31, Even Rouault a ?crit :
> Hi,
> 
> This is a call for discussion for "RFC 45: GDAL datasets and raster bands
> as virtual memory mappings"

Here's the link to the RFC :

http://trac.osgeo.org/gdal/wiki/rfc45_virtualmem

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From JArmstrong at geologic.com  Tue Dec 17 13:25:17 2013
From: JArmstrong at geologic.com (Jeremy Armstrong)
Date: Tue, 17 Dec 2013 21:25:17 +0000
Subject: [gdal-dev] Produce noData Masks When Warping Datasets
Message-ID: <9ED72201536BAD4A98E2113E5862EC79A5EFB8@Mail1.geologic.com>

Hi List,

I am using GDALAutoCreateWarpedVRT() to warp datasets which then get transformed to bitmaps.   When warping images sometimes they get rotated leaving black around the edges of the resulting image (especially when warping to another UTM zone).  How can I produce images without the black edges?  As far as I can tell, GDAL won't probuce bitmaps with alpha layering.  I have read about GDAL's noData masks but am having trouble figuring out how to produce them.  They would work well because I don't need opacity I just want to mask out the black edges when I display the bitmaps.

Thanks,
Jeremy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131217/3fa875f2/attachment-0001.html>

From pramsey at cleverelephant.ca  Tue Dec 17 13:38:26 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 17 Dec 2013 13:38:26 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <1387270981.52b013450bdcb@imp.free.fr>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
	<CACowWR2LxX6bd8KWQn8Os5iNZjYic_sAmRqZ=nS28VBPA21waw@mail.gmail.com>
	<1387270981.52b013450bdcb@imp.free.fr>
Message-ID: <CACowWR0wAeGg2mav9Kp5_+LY=iHbpFvjpUkEKa+Q3Ko6Kde0XQ@mail.gmail.com>

OK, so hide the ISO types from the outside world. No problem.

Is it OK to have getGeometryType and exportToWkb accept wkbVariant
optional parameters?

P.

On Tue, Dec 17, 2013 at 1:03 AM, Even Rouault
<even.rouault at mines-paris.org> wrote:
> Selon Paul Ramsey <pramsey at cleverelephant.ca>:
>
>> Back to this, is it OK?
>
> As said in http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html,
> I feel a bit unconfortable with the extension of the OGRwkbGeometryType
> enumeration that has possible impacts on other parts of OGR. There's perhaps a
> time where we will touch it, but I'd expect it to ideally embrace Z, M, ZM,
> circular geometries at once. And that would deserve a RFC.
>
> What do you think of keeping it an internal enumeration of OGR, since that's
> probably all you need for now ?
>
> "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
> wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ }, a
> getIsoGeometryType() method that returns it, and the exportToWkb() methods
> that calls int getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
> wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }"
>
> I'd be happy to hear about other GDAL developers opinion on this.
>
>> How are we patching back to SVN? I can convert
>> it into a patch and attach to a ticket, if that's the path.
>
> git-svn can be used to bridge the 2 worlds, but in my recent experience it has
> been painful to use. So generating a patch and applying it is probably easier.
>
> Even
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html
>

From even.rouault at mines-paris.org  Tue Dec 17 13:50:59 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Tue, 17 Dec 2013 22:50:59 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <CACowWR0wAeGg2mav9Kp5_+LY=iHbpFvjpUkEKa+Q3Ko6Kde0XQ@mail.gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<1387270981.52b013450bdcb@imp.free.fr>
	<CACowWR0wAeGg2mav9Kp5_+LY=iHbpFvjpUkEKa+Q3Ko6Kde0XQ@mail.gmail.com>
Message-ID: <201312172251.00044.even.rouault@mines-paris.org>

Le mardi 17 d?cembre 2013 22:38:26, Paul Ramsey a ?crit :
> OK, so hide the ISO types from the outside world. No problem.
> 
> Is it OK to have getGeometryType and exportToWkb accept wkbVariant
> optional parameters?

For exportToWkb(), it is just a matter of taste whether to add an optional 
parameter or to have a dedicated method.

For getGeometryType(), as it returns a OGRwkbGeometryType, you can't add an 
optional parameter to return values other than OGRwkbGeometryType.
My latest proposal was to have a - protected - "int 
getGeometryType(wkbVariant)  { return
(eVariant == wkbVariantOgc) ? getGeometryType()  :
getIsoGeometryType(); }" and a public OGRwkbIsoGeometryType 
getIsoGeometryType().

> 
> P.
> 
> On Tue, Dec 17, 2013 at 1:03 AM, Even Rouault
> 
> <even.rouault at mines-paris.org> wrote:
> > Selon Paul Ramsey <pramsey at cleverelephant.ca>:
> >> Back to this, is it OK?
> > 
> > As said in
> > http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html, I
> > feel a bit unconfortable with the extension of the OGRwkbGeometryType
> > enumeration that has possible impacts on other parts of OGR. There's
> > perhaps a time where we will touch it, but I'd expect it to ideally
> > embrace Z, M, ZM, circular geometries at once. And that would deserve a
> > RFC.
> > 
> > What do you think of keeping it an internal enumeration of OGR, since
> > that's probably all you need for now ?
> > 
> > "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
> > wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ },
> > a getIsoGeometryType() method that returns it, and the exportToWkb()
> > methods that calls int getGeometryType(OGRwkbVariant eVariant) { return
> > (eVariant == wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType();
> > }"
> > 
> > I'd be happy to hear about other GDAL developers opinion on this.
> > 
> >> How are we patching back to SVN? I can convert
> >> it into a patch and attach to a ticket, if that's the path.
> > 
> > git-svn can be used to bridge the 2 worlds, but in my recent experience
> > it has been painful to use. So generating a patch and applying it is
> > probably easier.
> > 
> > Even
> > 
> > --
> > Geospatial professional services
> > http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From mateusz at loskot.net  Tue Dec 17 13:53:39 2013
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 17 Dec 2013 21:53:39 +0000
Subject: [gdal-dev] ISO WKB
In-Reply-To: <52B0B119.5050306@gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312122333.32283.even.rouault@mines-paris.org>
	<etPan.52aa3b1d.74b0dc51.6320@Butterfly.local>
	<201312122357.58554.even.rouault@mines-paris.org>
	<etPan.52ab6761.4db127f8.6320@Butterfly.local>
	<CACowWR2LxX6bd8KWQn8Os5iNZjYic_sAmRqZ=nS28VBPA21waw@mail.gmail.com>
	<1387270981.52b013450bdcb@imp.free.fr>
	<CABUeae8Z6U0xd+5XMtB_3LctVEc3L8iXdNF2aEmAg3PKV_dKNA@mail.gmail.com>
	<52B0B119.5050306@gmail.com>
Message-ID: <CABUeae8V4ZW3rXn3dWrg6sD-W3+CPUW-n8VLTmKTJHugX16QYQ@mail.gmail.com>

On 17 December 2013 20:16, Dmitriy Baryshnikov <bishop.dev at gmail.com> wrote:
> Hi,
>
> I afraid that we come to situation where:
>
> getGeometryType()
> getIsoGeometryType()
> getRFCGeometryType()
> ...
> getBlahBlahGeometryType()
>
> Why not have only one method and only one enum (as GDAL origin - single
> abstract data model to the calling application for all supported formats).
> I think all ISO specific things should be internal and driver specific. So,
> we will get single GDAL enum of geom types.

I agree with you, in principle, that it's best if abstraction layer actually
makes a common denominator, but it is in this particular case
it is too late (AFAIU what Even says) and single enumeration would
gather plain codes as well as bit flags, leading to further confusion
in interpretation.


Best regards,
-- 
Mateusz  ?oskot, http://mateusz.loskot.net

From pramsey at cleverelephant.ca  Tue Dec 17 21:28:16 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 17 Dec 2013 21:28:16 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312172251.00044.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<1387270981.52b013450bdcb@imp.free.fr>
	<CACowWR0wAeGg2mav9Kp5_+LY=iHbpFvjpUkEKa+Q3Ko6Kde0XQ@mail.gmail.com>
	<201312172251.00044.even.rouault@mines-paris.org>
Message-ID: <CACowWR2CvFYphAPpSucPa_2tYyV0vJvrtPALEtekki9si1UsdQ@mail.gmail.com>

I don't think we should expose the ISO geometry types to the world,
they're just for WKB really, so I'll keep that part hidden away. It's
a shame we can't get rid of the 25d type variants for gdal2... if not
then, when?

Incidentally, is there going to be a GDAL 1.11?

P.

On Tue, Dec 17, 2013 at 1:50 PM, Even Rouault
<even.rouault at mines-paris.org> wrote:
> Le mardi 17 d?cembre 2013 22:38:26, Paul Ramsey a ?crit :
>> OK, so hide the ISO types from the outside world. No problem.
>>
>> Is it OK to have getGeometryType and exportToWkb accept wkbVariant
>> optional parameters?
>
> For exportToWkb(), it is just a matter of taste whether to add an optional
> parameter or to have a dedicated method.
>
> For getGeometryType(), as it returns a OGRwkbGeometryType, you can't add an
> optional parameter to return values other than OGRwkbGeometryType.
> My latest proposal was to have a - protected - "int
> getGeometryType(wkbVariant)  { return
> (eVariant == wkbVariantOgc) ? getGeometryType()  :
> getIsoGeometryType(); }" and a public OGRwkbIsoGeometryType
> getIsoGeometryType().
>
>>
>> P.
>>
>> On Tue, Dec 17, 2013 at 1:03 AM, Even Rouault
>>
>> <even.rouault at mines-paris.org> wrote:
>> > Selon Paul Ramsey <pramsey at cleverelephant.ca>:
>> >> Back to this, is it OK?
>> >
>> > As said in
>> > http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html, I
>> > feel a bit unconfortable with the extension of the OGRwkbGeometryType
>> > enumeration that has possible impacts on other parts of OGR. There's
>> > perhaps a time where we will touch it, but I'd expect it to ideally
>> > embrace Z, M, ZM, circular geometries at once. And that would deserve a
>> > RFC.
>> >
>> > What do you think of keeping it an internal enumeration of OGR, since
>> > that's probably all you need for now ?
>> >
>> > "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso, ...
>> > wkbGeometryCollectionIso, wkbPointIsoZ, ... wkbGeometryCollectionIsoZ },
>> > a getIsoGeometryType() method that returns it, and the exportToWkb()
>> > methods that calls int getGeometryType(OGRwkbVariant eVariant) { return
>> > (eVariant == wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType();
>> > }"
>> >
>> > I'd be happy to hear about other GDAL developers opinion on this.
>> >
>> >> How are we patching back to SVN? I can convert
>> >> it into a patch and attach to a ticket, if that's the path.
>> >
>> > git-svn can be used to bridge the 2 worlds, but in my recent experience
>> > it has been painful to use. So generating a patch and applying it is
>> > probably easier.
>> >
>> > Even
>> >
>> > --
>> > Geospatial professional services
>> > http://even.rouault.free.fr/services.html
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html

From warmerdam at pobox.com  Tue Dec 17 21:55:50 2013
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 17 Dec 2013 21:55:50 -0800
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
 raster bands as virtual memory mappings"
In-Reply-To: <201312172201.31535.even.rouault@mines-paris.org>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312172201.31535.even.rouault@mines-paris.org>
Message-ID: <CA+YzLBesDJsr9RR7df_2B_TwPq_QzkP20Jp4TiRRz_+-08bNaQ@mail.gmail.com>

Even,

Very impressive work, I am supportive.

IMHO it would be wonderful if there was also an mmap() based mechanism
where you could ask for the virtual memory chunk and you get it back (if it
works) along with stride values to access in it.  This could likely be made
to work for most "raw" based formats and a few others too.  It might also
allow non-mmap() based files to return an organization based more on their
actual organization for efficiency.

Best regards,
Frank



On Tue, Dec 17, 2013 at 1:01 PM, Even Rouault
<even.rouault at mines-paris.org>wrote:

> Le mardi 17 d?cembre 2013 21:54:31, Even Rouault a ?crit :
> > Hi,
> >
> > This is a call for discussion for "RFC 45: GDAL datasets and raster bands
> > as virtual memory mappings"
>
> Here's the link to the RFC :
>
> http://trac.osgeo.org/gdal/wiki/rfc45_virtualmem
>
> Even
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131217/217a801f/attachment.html>

From even.rouault at mines-paris.org  Wed Dec 18 01:20:18 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 18 Dec 2013 10:20:18 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <CACowWR2CvFYphAPpSucPa_2tYyV0vJvrtPALEtekki9si1UsdQ@mail.gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312172251.00044.even.rouault@mines-paris.org>
	<CACowWR2CvFYphAPpSucPa_2tYyV0vJvrtPALEtekki9si1UsdQ@mail.gmail.com>
Message-ID: <201312181020.19019.even.rouault@mines-paris.org>

Le mercredi 18 d?cembre 2013 06:28:16, Paul Ramsey a ?crit :
> I don't think we should expose the ISO geometry types to the world,
> they're just for WKB really, so I'll keep that part hidden away. It's
> a shame we can't get rid of the 25d type variants for gdal2... if not
> then, when?

Ah, I didn't perceive you wanted to go that far. Well, that's certainly 
something that could be done for a GDAL 2. It would require a RFC to draw the 
battle plan and analyze the impacts.

> 
> Incidentally, is there going to be a GDAL 1.11?

Technically, at that point, no breaking changes have been done in trunk, so 
1.11 would make sense as a version number.

Even

> 
> P.
> 
> On Tue, Dec 17, 2013 at 1:50 PM, Even Rouault
> 
> <even.rouault at mines-paris.org> wrote:
> > Le mardi 17 d?cembre 2013 22:38:26, Paul Ramsey a ?crit :
> >> OK, so hide the ISO types from the outside world. No problem.
> >> 
> >> Is it OK to have getGeometryType and exportToWkb accept wkbVariant
> >> optional parameters?
> > 
> > For exportToWkb(), it is just a matter of taste whether to add an
> > optional parameter or to have a dedicated method.
> > 
> > For getGeometryType(), as it returns a OGRwkbGeometryType, you can't add
> > an optional parameter to return values other than OGRwkbGeometryType. My
> > latest proposal was to have a - protected - "int
> > getGeometryType(wkbVariant)  { return
> > (eVariant == wkbVariantOgc) ? getGeometryType()  :
> > getIsoGeometryType(); }" and a public OGRwkbIsoGeometryType
> > getIsoGeometryType().
> > 
> >> P.
> >> 
> >> On Tue, Dec 17, 2013 at 1:03 AM, Even Rouault
> >> 
> >> <even.rouault at mines-paris.org> wrote:
> >> > Selon Paul Ramsey <pramsey at cleverelephant.ca>:
> >> >> Back to this, is it OK?
> >> > 
> >> > As said in
> >> > http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html, I
> >> > feel a bit unconfortable with the extension of the OGRwkbGeometryType
> >> > enumeration that has possible impacts on other parts of OGR. There's
> >> > perhaps a time where we will touch it, but I'd expect it to ideally
> >> > embrace Z, M, ZM, circular geometries at once. And that would deserve
> >> > a RFC.
> >> > 
> >> > What do you think of keeping it an internal enumeration of OGR, since
> >> > that's probably all you need for now ?
> >> > 
> >> > "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso,
> >> > ... wkbGeometryCollectionIso, wkbPointIsoZ, ...
> >> > wkbGeometryCollectionIsoZ }, a getIsoGeometryType() method that
> >> > returns it, and the exportToWkb() methods that calls int
> >> > getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
> >> > wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }"
> >> > 
> >> > I'd be happy to hear about other GDAL developers opinion on this.
> >> > 
> >> >> How are we patching back to SVN? I can convert
> >> >> it into a patch and attach to a ticket, if that's the path.
> >> > 
> >> > git-svn can be used to bridge the 2 worlds, but in my recent
> >> > experience it has been painful to use. So generating a patch and
> >> > applying it is probably easier.
> >> > 
> >> > Even
> >> > 
> >> > --
> >> > Geospatial professional services
> >> > http://even.rouault.free.fr/services.html
> > 
> > --
> > Geospatial professional services
> > http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Wed Dec 18 02:10:19 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 18 Dec 2013 11:10:19 +0100
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
	raster bands as virtual memory mappings"
In-Reply-To: <CA+YzLBesDJsr9RR7df_2B_TwPq_QzkP20Jp4TiRRz_+-08bNaQ@mail.gmail.com>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312172201.31535.even.rouault@mines-paris.org>
	<CA+YzLBesDJsr9RR7df_2B_TwPq_QzkP20Jp4TiRRz_+-08bNaQ@mail.gmail.com>
Message-ID: <201312181110.19094.even.rouault@mines-paris.org>

Le mercredi 18 d?cembre 2013 06:55:50, Frank Warmerdam a ?crit :
> Even,
> 
> Very impressive work, I am supportive.
> 
> IMHO it would be wonderful if there was also an mmap() based mechanism
> where you could ask for the virtual memory chunk and you get it back (if it
> works) along with stride values to access in it.  This could likely be made
> to work for most "raw" based formats and a few others too.  It might also
> allow non-mmap() based files to return an organization based more on their
> actual organization for efficiency.

Hi Frank,

I'm not completely sure to have understood your idea. Would that be something 
like :

CPLVirtualMem CPL_DLL* GDALDatasetGetVirtualMemAuto( GDALDatasetH hDS,
                                         GDALRWFlag eRWFlag,
                                         int nXOff, int nYOff,
                                         int nXSize, int nYSize,
                                         int nBufXSize, int nBufYSize,
                                         GDALDataType eBufType,
                                         int nBandCount, int* panBandMap,
                                         int *pnPixelSpace,
                                         GIntBig *pnLineSpace,
                                         GIntBig *pnBandSpace,
                                         size_t nCacheSize,
                                         int bSingleThreadUsage,
                                         char **papszOptions );

Difference with GDALDatasetGetVirtualMem() : the stride values are now output 
values and no more nPageSizeHint parameter.

In your mind, would the spacings be determined in a generic way from the 
dataset properties(block size and INTERLEAVED=PIXEL/BAND metadata item), or 
would that require some direct cooperation of the driver ?

Since you mention raw formats, perhaps you are thinking more to a file-based 
mmap() rather than a anonymous mmap() combined with RasterIO(), like currently 
proposed ? This is something I've mentionned in the "Related thoughts" 
paragraph but there are practical annoyance with how Linux manages memory with 
file-based mmap(). I'd be happy if someone has successfull experience with that 
by the way (and that doesn't require explicit madvise() each time you're done 
with a range of memory)

---------------------------

Reading again your words, I'm now wondering if you are not thinking to a 
Dataset / RasterBand virtual method that could be implemented by drivers ?

virtual CPLVirtualMem* GetVirtualMem(.......)

They would directly use the low-level CPLVirtualMem to create the mapping and 
provide their own callback to fill pages when page fault occurs. So they could 
potentially avoid using the block cache layer and do direct file I/O ?

Looking at RawRasterBand::IRasterIO(), I can see that it can use (under some 
circumstances with a non obvious heuristics) direct file I/O without going to 
the block cache. So the current proposed implementation could potentially 
already benefit from that. Perhaps we would need a flag to RasterIO to ask it to 
avoid block cache when possible. Or just call 
CPLSetThreadLocalConfigOption("GDAL_ONE_BIG_READ", "YES") in 
GDALVirtualMem::DoIOBandSequential() / DoIOPixelInterleaved()

Even

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From dmburgess at linktechs.net  Wed Dec 18 07:45:29 2013
From: dmburgess at linktechs.net (Dennis Burgess)
Date: Wed, 18 Dec 2013 09:45:29 -0600
Subject: [gdal-dev] Hourly Consultant to help with python script
Message-ID: <50710E9A7E64454C974049FC998EB655018DDBF2@03-exchange.lti.local>

I have a python script that I need to convert existing geotiffs to poly
KML files.   The existing files are multi-colored, and all I want is any
colored area, vs the background color.  

 

If you are interested, we can pay via paypal, send me your hourly rate
and when you are free via e-mail!   We will remit payment once work is
completed.

 

 

Dennis Burgess, 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131218/62b0744f/attachment.html>

From chaitanya.ch at gmail.com  Wed Dec 18 07:58:19 2013
From: chaitanya.ch at gmail.com (Chaitanya kumar CH)
Date: Wed, 18 Dec 2013 21:28:19 +0530
Subject: [gdal-dev] Hourly Consultant to help with python script
In-Reply-To: <50710E9A7E64454C974049FC998EB655018DDBF2@03-exchange.lti.local>
References: <50710E9A7E64454C974049FC998EB655018DDBF2@03-exchange.lti.local>
Message-ID: <CAMKgpObtpAVZRqiMR-bYqomV4RB6ewZ0Fjx7i7keEJHVMXbwSg@mail.gmail.com>

Hi Dennis,

I'd like to take up your offer. This looks like a small enough job. I can
use the gdal_polygonize algorithm to process all the areas with a value
other than nodata value.

Please email me the details and sample data if you would like me to work on
it.

--
Best regards,
Chaitanya Kumar CH
On Dec 18, 2013 9:07 PM, "Dennis Burgess" <dmburgess at linktechs.net> wrote:

> I have a python script that I need to convert existing geotiffs to poly
> KML files.   The existing files are multi-colored, and all I want is any
> colored area, vs the background color.
>
>
>
> If you are interested, we can pay via paypal, send me your hourly rate and
> when you are free via e-mail!   We will remit payment once work is
> completed.
>
>
>
>
>
> *Dennis Burgess, *
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131218/7d26f2eb/attachment.html>

From warmerdam at pobox.com  Wed Dec 18 10:53:37 2013
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 18 Dec 2013 10:53:37 -0800
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
 raster bands as virtual memory mappings"
In-Reply-To: <201312181110.19094.even.rouault@mines-paris.org>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312172201.31535.even.rouault@mines-paris.org>
	<CA+YzLBesDJsr9RR7df_2B_TwPq_QzkP20Jp4TiRRz_+-08bNaQ@mail.gmail.com>
	<201312181110.19094.even.rouault@mines-paris.org>
Message-ID: <CA+YzLBfPOE_9m1ruS81nDNvS=msz+8D2TbJbvpNgbVPKtjynug@mail.gmail.com>

Even,

Sorry, I was thinking of mmap() directly to the file, and having something
like:

CPLVirtualMem CPL_DLL* GDALBandGetVirtualMemAuto( GDALRasterBandH hBand,
                                         int *pnPixelSpace,
                                         GIntBig *pnLineSpace,
                                         char **papszOptions );

I imagined an available virtual method on the band which could be
implemented - primarily by the RawBand class to try and mmap() the data and
return the layout.  But when that fails, or is unavailable it could use
your existing methodology with a layout that seems well tuned to the
underlying data organization.

Certainly there is no need to hold things up for this.  What you are
proposing is already wonderfully useful.  I'm wondering if there would be
ways of making what you propose work with Python Numpy in such a way that a
numpy array could be requested which is of this virtual memory.  That would
also be a nice extension.

Best regards,
Frank



On Wed, Dec 18, 2013 at 2:10 AM, Even Rouault
<even.rouault at mines-paris.org>wrote:

> Le mercredi 18 d?cembre 2013 06:55:50, Frank Warmerdam a ?crit :
> > Even,
> >
> > Very impressive work, I am supportive.
> >
> > IMHO it would be wonderful if there was also an mmap() based mechanism
> > where you could ask for the virtual memory chunk and you get it back (if
> it
> > works) along with stride values to access in it.  This could likely be
> made
> > to work for most "raw" based formats and a few others too.  It might also
> > allow non-mmap() based files to return an organization based more on
> their
> > actual organization for efficiency.
>
> Hi Frank,
>
> I'm not completely sure to have understood your idea. Would that be
> something
> like :
>
> CPLVirtualMem CPL_DLL* GDALDatasetGetVirtualMemAuto( GDALDatasetH hDS,
>                                          GDALRWFlag eRWFlag,
>                                          int nXOff, int nYOff,
>                                          int nXSize, int nYSize,
>                                          int nBufXSize, int nBufYSize,
>                                          GDALDataType eBufType,
>                                          int nBandCount, int* panBandMap,
>                                          int *pnPixelSpace,
>                                          GIntBig *pnLineSpace,
>                                          GIntBig *pnBandSpace,
>                                          size_t nCacheSize,
>                                          int bSingleThreadUsage,
>                                          char **papszOptions );
>
> Difference with GDALDatasetGetVirtualMem() : the stride values are now
> output
> values and no more nPageSizeHint parameter.
>
> In your mind, would the spacings be determined in a generic way from the
> dataset properties(block size and INTERLEAVED=PIXEL/BAND metadata item), or
> would that require some direct cooperation of the driver ?
>
> Since you mention raw formats, perhaps you are thinking more to a
> file-based
> mmap() rather than a anonymous mmap() combined with RasterIO(), like
> currently
> proposed ? This is something I've mentionned in the "Related thoughts"
> paragraph but there are practical annoyance with how Linux manages memory
> with
> file-based mmap(). I'd be happy if someone has successfull experience with
> that
> by the way (and that doesn't require explicit madvise() each time you're
> done
> with a range of memory)
>
> ---------------------------
>
> Reading again your words, I'm now wondering if you are not thinking to a
> Dataset / RasterBand virtual method that could be implemented by drivers ?
>
> virtual CPLVirtualMem* GetVirtualMem(.......)
>
> They would directly use the low-level CPLVirtualMem to create the mapping
> and
> provide their own callback to fill pages when page fault occurs. So they
> could
> potentially avoid using the block cache layer and do direct file I/O ?
>
> Looking at RawRasterBand::IRasterIO(), I can see that it can use (under
> some
> circumstances with a non obvious heuristics) direct file I/O without going
> to
> the block cache. So the current proposed implementation could potentially
> already benefit from that. Perhaps we would need a flag to RasterIO to ask
> it to
> avoid block cache when possible. Or just call
> CPLSetThreadLocalConfigOption("GDAL_ONE_BIG_READ", "YES") in
> GDALVirtualMem::DoIOBandSequential() / DoIOPixelInterleaved()
>
> Even
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html
>



-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131218/9ca01833/attachment.html>

From even.rouault at mines-paris.org  Wed Dec 18 11:46:43 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 18 Dec 2013 20:46:43 +0100
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
	raster bands as virtual memory mappings"
In-Reply-To: <CA+YzLBfPOE_9m1ruS81nDNvS=msz+8D2TbJbvpNgbVPKtjynug@mail.gmail.com>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312181110.19094.even.rouault@mines-paris.org>
	<CA+YzLBfPOE_9m1ruS81nDNvS=msz+8D2TbJbvpNgbVPKtjynug@mail.gmail.com>
Message-ID: <201312182046.43899.even.rouault@mines-paris.org>

Le mercredi 18 d?cembre 2013 19:53:37, Frank Warmerdam a ?crit :
> Even,
> 
> Sorry, I was thinking of mmap() directly to the file, and having something
> like:
> 
> CPLVirtualMem CPL_DLL* GDALBandGetVirtualMemAuto( GDALRasterBandH hBand,
>                                          int *pnPixelSpace,
>                                          GIntBig *pnLineSpace,
>                                          char **papszOptions );
> 
> I imagined an available virtual method on the band which could be
> implemented - primarily by the RawBand class to try and mmap() the data and
> return the layout.  But when that fails, or is unavailable it could use
> your existing methodology with a layout that seems well tuned to the
> underlying data organization.

Yes, that should be doable, but with the limitation I raised about the memory 
management of file-based mmap() : if you mmap() a file larger than RAM, and read 
it entirely, without explicit madvise() to discard regions no longer needed, 
it will fill RAM and cause disk swapping. I should retest to confirm. Perhaps 
there are some OS level tuning to avoid that ?

> 
> Certainly there is no need to hold things up for this.  What you are
> proposing is already wonderfully useful. 

I've no particular timetable for this. This started as an experiment. So I'm 
happy to explore complementary ideas.

> I'm wondering if there would be
> ways of making what you propose work with Python Numpy in such a way that a
> numpy array could be requested which is of this virtual memory.  That would
> also be a nice extension.

Hum, how would that be different from what is proposed in the SWIG bindings 
section of the RFC ?

> 
> Best regards,
> Frank
> 
> 
> 
> On Wed, Dec 18, 2013 at 2:10 AM, Even Rouault
> 
> <even.rouault at mines-paris.org>wrote:
> > Le mercredi 18 d?cembre 2013 06:55:50, Frank Warmerdam a ?crit :
> > > Even,
> > > 
> > > Very impressive work, I am supportive.
> > > 
> > > IMHO it would be wonderful if there was also an mmap() based mechanism
> > > where you could ask for the virtual memory chunk and you get it back
> > > (if
> > 
> > it
> > 
> > > works) along with stride values to access in it.  This could likely be
> > 
> > made
> > 
> > > to work for most "raw" based formats and a few others too.  It might
> > > also allow non-mmap() based files to return an organization based more
> > > on
> > 
> > their
> > 
> > > actual organization for efficiency.
> > 
> > Hi Frank,
> > 
> > I'm not completely sure to have understood your idea. Would that be
> > something
> > like :
> > 
> > CPLVirtualMem CPL_DLL* GDALDatasetGetVirtualMemAuto( GDALDatasetH hDS,
> > 
> >                                          GDALRWFlag eRWFlag,
> >                                          int nXOff, int nYOff,
> >                                          int nXSize, int nYSize,
> >                                          int nBufXSize, int nBufYSize,
> >                                          GDALDataType eBufType,
> >                                          int nBandCount, int* panBandMap,
> >                                          int *pnPixelSpace,
> >                                          GIntBig *pnLineSpace,
> >                                          GIntBig *pnBandSpace,
> >                                          size_t nCacheSize,
> >                                          int bSingleThreadUsage,
> >                                          char **papszOptions );
> > 
> > Difference with GDALDatasetGetVirtualMem() : the stride values are now
> > output
> > values and no more nPageSizeHint parameter.
> > 
> > In your mind, would the spacings be determined in a generic way from the
> > dataset properties(block size and INTERLEAVED=PIXEL/BAND metadata item),
> > or would that require some direct cooperation of the driver ?
> > 
> > Since you mention raw formats, perhaps you are thinking more to a
> > file-based
> > mmap() rather than a anonymous mmap() combined with RasterIO(), like
> > currently
> > proposed ? This is something I've mentionned in the "Related thoughts"
> > paragraph but there are practical annoyance with how Linux manages memory
> > with
> > file-based mmap(). I'd be happy if someone has successfull experience
> > with that
> > by the way (and that doesn't require explicit madvise() each time you're
> > done
> > with a range of memory)
> > 
> > ---------------------------
> > 
> > Reading again your words, I'm now wondering if you are not thinking to a
> > Dataset / RasterBand virtual method that could be implemented by drivers
> > ?
> > 
> > virtual CPLVirtualMem* GetVirtualMem(.......)
> > 
> > They would directly use the low-level CPLVirtualMem to create the mapping
> > and
> > provide their own callback to fill pages when page fault occurs. So they
> > could
> > potentially avoid using the block cache layer and do direct file I/O ?
> > 
> > Looking at RawRasterBand::IRasterIO(), I can see that it can use (under
> > some
> > circumstances with a non obvious heuristics) direct file I/O without
> > going to
> > the block cache. So the current proposed implementation could potentially
> > already benefit from that. Perhaps we would need a flag to RasterIO to
> > ask it to
> > avoid block cache when possible. Or just call
> > CPLSetThreadLocalConfigOption("GDAL_ONE_BIG_READ", "YES") in
> > GDALVirtualMem::DoIOBandSequential() / DoIOPixelInterleaved()
> > 
> > Even
> > 
> > --
> > Geospatial professional services
> > http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From warmerdam at pobox.com  Wed Dec 18 12:01:53 2013
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 18 Dec 2013 12:01:53 -0800
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
 raster bands as virtual memory mappings"
In-Reply-To: <201312182046.43899.even.rouault@mines-paris.org>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312181110.19094.even.rouault@mines-paris.org>
	<CA+YzLBfPOE_9m1ruS81nDNvS=msz+8D2TbJbvpNgbVPKtjynug@mail.gmail.com>
	<201312182046.43899.even.rouault@mines-paris.org>
Message-ID: <CA+YzLBfMiyLj+oe=DMHBgqhj=P1tjirJdmx4=62Dwc=j+yE21w@mail.gmail.com>

On Wed, Dec 18, 2013 at 11:46 AM, Even Rouault <even.rouault at mines-paris.org
> wrote:

> Le mercredi 18 d?cembre 2013 19:53:37, Frank Warmerdam a ?crit :
> > Even,
> >
> > Sorry, I was thinking of mmap() directly to the file, and having
> something
> > like:
> >
> > CPLVirtualMem CPL_DLL* GDALBandGetVirtualMemAuto( GDALRasterBandH hBand,
> >                                          int *pnPixelSpace,
> >                                          GIntBig *pnLineSpace,
> >                                          char **papszOptions );
> >
> > I imagined an available virtual method on the band which could be
> > implemented - primarily by the RawBand class to try and mmap() the data
> and
> > return the layout.  But when that fails, or is unavailable it could use
> > your existing methodology with a layout that seems well tuned to the
> > underlying data organization.
>
> Yes, that should be doable, but with the limitation I raised about the
> memory
> management of file-based mmap() : if you mmap() a file larger than RAM,
> and read
> it entirely, without explicit madvise() to discard regions no longer
> needed,
> it will fill RAM and cause disk swapping. I should retest to confirm.
> Perhaps

there are some OS level tuning to avoid that ?
>

Even,

That was not my experience for readonly mmap() of actual files on disk
"back in the day".

In any event, I'd suggest sticking with what you have, and if I'm keen
perhaps one day I'll try and implement mmap() support.  If I do, I feel
like it needs to go down through the VSI*L system and once a file is
mmapped() the VSI*L IO should also be using the mmaped images.  Once upon a
time this had performance benefits. I'm not sure if that is the case any
more.

Best regards,
Frank

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131218/f6f7ee46/attachment.html>

From warmerdam at pobox.com  Wed Dec 18 12:09:16 2013
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Wed, 18 Dec 2013 12:09:16 -0800
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
 raster bands as virtual memory mappings"
In-Reply-To: <201312182046.43899.even.rouault@mines-paris.org>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312181110.19094.even.rouault@mines-paris.org>
	<CA+YzLBfPOE_9m1ruS81nDNvS=msz+8D2TbJbvpNgbVPKtjynug@mail.gmail.com>
	<201312182046.43899.even.rouault@mines-paris.org>
Message-ID: <CA+YzLBeUZAW0qQepg3n6Wr4oT8a1ESeECf9MPoLNoLa=Z-tu4A@mail.gmail.com>

On Wed, Dec 18, 2013 at 11:46 AM, Even Rouault <even.rouault at mines-paris.org
> wrote:

> > I'm wondering if there would be
> > ways of making what you propose work with Python Numpy in such a way
> that a
> > numpy array could be requested which is of this virtual memory.  That
> would
> > also be a nice extension.
>
> Hum, how would that be different from what is proposed in the SWIG bindings
> section of the RFC ?
>
>
Even,

Ahem - I apparently did not read the RFC closely enough.  You are well
ahead of me on this idea.

Best regards,

-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131218/8aea8431/attachment.html>

From tpiepho at gmail.com  Wed Dec 18 12:09:48 2013
From: tpiepho at gmail.com (Trent Piepho)
Date: Wed, 18 Dec 2013 12:09:48 -0800
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
 raster bands as virtual memory mappings"
In-Reply-To: <201312182046.43899.even.rouault@mines-paris.org>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312181110.19094.even.rouault@mines-paris.org>
	<CA+YzLBfPOE_9m1ruS81nDNvS=msz+8D2TbJbvpNgbVPKtjynug@mail.gmail.com>
	<201312182046.43899.even.rouault@mines-paris.org>
Message-ID: <CA+7tXijrUtuE2=wE86pdEUuJaszvoq1rU-z+sUHsfFTKPwMyjw@mail.gmail.com>

On Wed, Dec 18, 2013 at 11:46 AM, Even Rouault
<even.rouault at mines-paris.org> wrote:
> Le mercredi 18 d?cembre 2013 19:53:37, Frank Warmerdam a ?crit :
>>
>> I imagined an available virtual method on the band which could be
>> implemented - primarily by the RawBand class to try and mmap() the data and
>> return the layout.  But when that fails, or is unavailable it could use
>> your existing methodology with a layout that seems well tuned to the
>> underlying data organization.
>
> Yes, that should be doable, but with the limitation I raised about the memory
> management of file-based mmap() : if you mmap() a file larger than RAM, and read
> it entirely, without explicit madvise() to discard regions no longer needed,
> it will fill RAM and cause disk swapping. I should retest to confirm. Perhaps
> there are some OS level tuning to avoid that ?

For Linux, if you mmap a file and do not write to it, the pages will
be clean.  This means that under memory pressure those pages can be
dropped without paging out to swap.  They are already backed on disk
in the mmaped file.  Only dirty anonymous mapped pages (anon mmap,
malloc() memory from mmap() or brk(), stack, etc.) would need to be
written to swap.

Of course if you touch a large amount of memory and know you're never
use it again, you can help the OS out when it comes to deciding which
pages to free by using madvise.

One think to consider is that a 32-bit OS can only memory map about
2-3 GB at once, even though there is no trouble using files much
larger than this size.  If you want to access a large file with
mmap(), you might need to use some kind of sliding window.

I think also, mmaping many gigabytes has a certain cost in setting up
the page tables for the mapping that's not insignificant.  Even on a
64-bit os, mmaping a 20 GB file just to access some small portion of
it could be inefficient.

From even.rouault at mines-paris.org  Wed Dec 18 14:02:00 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 18 Dec 2013 23:02:00 +0100
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
	raster bands as virtual memory mappings"
In-Reply-To: <CA+7tXijrUtuE2=wE86pdEUuJaszvoq1rU-z+sUHsfFTKPwMyjw@mail.gmail.com>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312182046.43899.even.rouault@mines-paris.org>
	<CA+7tXijrUtuE2=wE86pdEUuJaszvoq1rU-z+sUHsfFTKPwMyjw@mail.gmail.com>
Message-ID: <201312182302.01229.even.rouault@mines-paris.org>

Le mercredi 18 d?cembre 2013 21:09:48, Trent Piepho a ?crit :
> On Wed, Dec 18, 2013 at 11:46 AM, Even Rouault
> 
> <even.rouault at mines-paris.org> wrote:
> > Le mercredi 18 d?cembre 2013 19:53:37, Frank Warmerdam a ?crit :
> >> I imagined an available virtual method on the band which could be
> >> implemented - primarily by the RawBand class to try and mmap() the data
> >> and return the layout.  But when that fails, or is unavailable it could
> >> use your existing methodology with a layout that seems well tuned to
> >> the underlying data organization.
> > 
> > Yes, that should be doable, but with the limitation I raised about the
> > memory management of file-based mmap() : if you mmap() a file larger
> > than RAM, and read it entirely, without explicit madvise() to discard
> > regions no longer needed, it will fill RAM and cause disk swapping. I
> > should retest to confirm. Perhaps there are some OS level tuning to
> > avoid that ?
> 
> For Linux, if you mmap a file and do not write to it, the pages will
> be clean.  This means that under memory pressure those pages can be
> dropped without paging out to swap.  They are already backed on disk
> in the mmaped file.  Only dirty anonymous mapped pages (anon mmap,
> malloc() memory from mmap() or brk(), stack, etc.) would need to be
> written to swap.

Yes, that's the theory. But in practice, on my system ( kernel 2.6.32-46-
generic 64 bit - Ubuntu 10.04 - 4 GB RAM ), the system becomes rather 
unresponsive as soon as the process has read a part of the file that is 
equivalent to the initial remaining free RAM. The 'top' utility shows it to 
consume ~ 2.7 GB, which must be the free RAM.

Here's the test program I've used :

test_mmap.c :

#define _LARGEFILE64_SOURCE 1
#include <sys/mman.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <assert.h>
#include <fcntl.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

int main(int argc, char* argv[])
{
    int fd;
    struct stat64 buf;
    char* ptr;
    long long i;
    int res = 0;
    int bDontNeed = 0;

    assert( argc == 2 || argc == 3 );
    if( argc == 3 && strcmp(argv[2], "-dontneed") == 0 )
        bDontNeed = 1;
    fd = open(argv[1], O_RDONLY);
    assert(fd >= 0);
    assert(stat64(argv[1], &buf) == 0);
    ptr = (char*) mmap(NULL, buf.st_size, PROT_READ, MAP_PRIVATE, fd, 0);
    assert(ptr);
    for(i = 0; i< buf.st_size; i+= 4096)
    {
        /* Discard the pages every 500 MB read */
        if( bDontNeed && ((i % (1024 * 1024 * 500)) == 0) )
            madvise(ptr, buf.st_size, MADV_DONTNEED);

        res += ptr[i];
    }
    close(fd);
    return res;
}

$ gcc -Wall -g test_mmap.c -o test_mmap

$ ./test_mmap eudem_dem_4258_europe.tif
(the file is 20 GB large)

--> system becomes unresponsive

$ ./test_mmap eudem_dem_4258_europe.tif -dontneed

--> system remains usable. Every 500 MB read, a madvise() call will 
explicitely discard all pages. That's just for test. It couldn't be used in 
practice.

==> Does anyone reproduce similar behaviour ?

> 
> Of course if you touch a large amount of memory and know you're never
> use it again, you can help the OS out when it comes to deciding which
> pages to free by using madvise.
> 
> One think to consider is that a 32-bit OS can only memory map about
> 2-3 GB at once, even though there is no trouble using files much
> larger than this size.  If you want to access a large file with
> mmap(), you might need to use some kind of sliding window.

Yes, I'm well aware of that. But 32bit systems are now becoming increasingly 
legacy, so we shouldn't worry too much about them.

> 
> I think also, mmaping many gigabytes has a certain cost in setting up
> the page tables for the mapping that's not insignificant.  Even on a
> 64-bit os, mmaping a 20 GB file just to access some small portion of
> it could be inefficient.

Yes, I agree there are hidden costs in the memory management layers of the OS. 
"Huge TLB pages" (2 MB) on AMD64 systems can potentially be a solution to 
decrease that cost. I had started a bit to experiment with that, but my kernel 
was not recent enough to benefit from all functionnalities or it didn't seem 
really practical to use.

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From pramsey at cleverelephant.ca  Wed Dec 18 15:50:06 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 18 Dec 2013 15:50:06 -0800
Subject: [gdal-dev] ISO WKB
In-Reply-To: <201312181020.19019.even.rouault@mines-paris.org>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312172251.00044.even.rouault@mines-paris.org>
	<CACowWR2CvFYphAPpSucPa_2tYyV0vJvrtPALEtekki9si1UsdQ@mail.gmail.com>
	<201312181020.19019.even.rouault@mines-paris.org>
Message-ID: <CACowWR0SP1OaRvXnK=g15POj-NdEsmzLkTOU7HnFRWWFF-XzwQ@mail.gmail.com>

I've updated my working branch to match your intent more closely, I hope

https://github.com/pramsey/gdal/tree/isowkb

the iso enumeration is no longer there, and access to iso geometry
types is via a protected method only.

The reason I asked about GDAL2 is that some of the stuff in OGR seemed
new to me (multiple geometry columns, e.g.) and I thought that those
kinds of changes might be leading to a GDAL2 release.

P.

On Wed, Dec 18, 2013 at 1:20 AM, Even Rouault
<even.rouault at mines-paris.org> wrote:
> Le mercredi 18 d?cembre 2013 06:28:16, Paul Ramsey a ?crit :
>> I don't think we should expose the ISO geometry types to the world,
>> they're just for WKB really, so I'll keep that part hidden away. It's
>> a shame we can't get rid of the 25d type variants for gdal2... if not
>> then, when?
>
> Ah, I didn't perceive you wanted to go that far. Well, that's certainly
> something that could be done for a GDAL 2. It would require a RFC to draw the
> battle plan and analyze the impacts.
>
>>
>> Incidentally, is there going to be a GDAL 1.11?
>
> Technically, at that point, no breaking changes have been done in trunk, so
> 1.11 would make sense as a version number.
>
> Even
>
>>
>> P.
>>
>> On Tue, Dec 17, 2013 at 1:50 PM, Even Rouault
>>
>> <even.rouault at mines-paris.org> wrote:
>> > Le mardi 17 d?cembre 2013 22:38:26, Paul Ramsey a ?crit :
>> >> OK, so hide the ISO types from the outside world. No problem.
>> >>
>> >> Is it OK to have getGeometryType and exportToWkb accept wkbVariant
>> >> optional parameters?
>> >
>> > For exportToWkb(), it is just a matter of taste whether to add an
>> > optional parameter or to have a dedicated method.
>> >
>> > For getGeometryType(), as it returns a OGRwkbGeometryType, you can't add
>> > an optional parameter to return values other than OGRwkbGeometryType. My
>> > latest proposal was to have a - protected - "int
>> > getGeometryType(wkbVariant)  { return
>> > (eVariant == wkbVariantOgc) ? getGeometryType()  :
>> > getIsoGeometryType(); }" and a public OGRwkbIsoGeometryType
>> > getIsoGeometryType().
>> >
>> >> P.
>> >>
>> >> On Tue, Dec 17, 2013 at 1:03 AM, Even Rouault
>> >>
>> >> <even.rouault at mines-paris.org> wrote:
>> >> > Selon Paul Ramsey <pramsey at cleverelephant.ca>:
>> >> >> Back to this, is it OK?
>> >> >
>> >> > As said in
>> >> > http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html, I
>> >> > feel a bit unconfortable with the extension of the OGRwkbGeometryType
>> >> > enumeration that has possible impacts on other parts of OGR. There's
>> >> > perhaps a time where we will touch it, but I'd expect it to ideally
>> >> > embrace Z, M, ZM, circular geometries at once. And that would deserve
>> >> > a RFC.
>> >> >
>> >> > What do you think of keeping it an internal enumeration of OGR, since
>> >> > that's probably all you need for now ?
>> >> >
>> >> > "Or have a separate OGRwkbIsoGeometryType enumeration { wkbPointIso,
>> >> > ... wkbGeometryCollectionIso, wkbPointIsoZ, ...
>> >> > wkbGeometryCollectionIsoZ }, a getIsoGeometryType() method that
>> >> > returns it, and the exportToWkb() methods that calls int
>> >> > getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
>> >> > wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }"
>> >> >
>> >> > I'd be happy to hear about other GDAL developers opinion on this.
>> >> >
>> >> >> How are we patching back to SVN? I can convert
>> >> >> it into a patch and attach to a ticket, if that's the path.
>> >> >
>> >> > git-svn can be used to bridge the 2 worlds, but in my recent
>> >> > experience it has been painful to use. So generating a patch and
>> >> > applying it is probably easier.
>> >> >
>> >> > Even
>> >> >
>> >> > --
>> >> > Geospatial professional services
>> >> > http://even.rouault.free.fr/services.html
>> >
>> > --
>> > Geospatial professional services
>> > http://even.rouault.free.fr/services.html
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html

From even.rouault at mines-paris.org  Wed Dec 18 16:32:14 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 19 Dec 2013 01:32:14 +0100
Subject: [gdal-dev] ISO WKB
In-Reply-To: <CACowWR0SP1OaRvXnK=g15POj-NdEsmzLkTOU7HnFRWWFF-XzwQ@mail.gmail.com>
References: <etPan.52aa1e5a.6b8b4567.6320@Butterfly.local>
	<201312181020.19019.even.rouault@mines-paris.org>
	<CACowWR0SP1OaRvXnK=g15POj-NdEsmzLkTOU7HnFRWWFF-XzwQ@mail.gmail.com>
Message-ID: <201312190132.14499.even.rouault@mines-paris.org>

Le jeudi 19 d?cembre 2013 00:50:06, Paul Ramsey a ?crit :
> I've updated my working branch to match your intent more closely, I hope
> 
> https://github.com/pramsey/gdal/tree/isowkb
> 
> the iso enumeration is no longer there, and access to iso geometry
> types is via a protected method only.

Yes, looks good (except some generated files that accidently were committed). 

> 
> The reason I asked about GDAL2 is that some of the stuff in OGR seemed
> new to me (multiple geometry columns, e.g.) and I thought that those
> kinds of changes might be leading to a GDAL2 release.

There are a lot of possible ideas for a GDAL 2 ( 
http://trac.osgeo.org/gdal/wiki/GDAL20Changes ).
Multiple geometry columns is indeed a recent addition ( 
http://trac.osgeo.org/gdal/wiki/rfc41_multiple_geometry_fields ), but it 
doesn't break the C API. 
To tag a GDAL 2, we would probably need something more disruptive (although 
hopefully not too disruptive !) since GDAL 2 will sound to people's hears : 
"ah, maybe I have to adapt my code that has worked for the last past 10 years"
Not sure when this will happen...

> 
> P.
> 
> On Wed, Dec 18, 2013 at 1:20 AM, Even Rouault
> 
> <even.rouault at mines-paris.org> wrote:
> > Le mercredi 18 d?cembre 2013 06:28:16, Paul Ramsey a ?crit :
> >> I don't think we should expose the ISO geometry types to the world,
> >> they're just for WKB really, so I'll keep that part hidden away. It's
> >> a shame we can't get rid of the 25d type variants for gdal2... if not
> >> then, when?
> > 
> > Ah, I didn't perceive you wanted to go that far. Well, that's certainly
> > something that could be done for a GDAL 2. It would require a RFC to draw
> > the battle plan and analyze the impacts.
> > 
> >> Incidentally, is there going to be a GDAL 1.11?
> > 
> > Technically, at that point, no breaking changes have been done in trunk,
> > so 1.11 would make sense as a version number.
> > 
> > Even
> > 
> >> P.
> >> 
> >> On Tue, Dec 17, 2013 at 1:50 PM, Even Rouault
> >> 
> >> <even.rouault at mines-paris.org> wrote:
> >> > Le mardi 17 d?cembre 2013 22:38:26, Paul Ramsey a ?crit :
> >> >> OK, so hide the ISO types from the outside world. No problem.
> >> >> 
> >> >> Is it OK to have getGeometryType and exportToWkb accept wkbVariant
> >> >> optional parameters?
> >> > 
> >> > For exportToWkb(), it is just a matter of taste whether to add an
> >> > optional parameter or to have a dedicated method.
> >> > 
> >> > For getGeometryType(), as it returns a OGRwkbGeometryType, you can't
> >> > add an optional parameter to return values other than
> >> > OGRwkbGeometryType. My latest proposal was to have a - protected -
> >> > "int
> >> > getGeometryType(wkbVariant)  { return
> >> > (eVariant == wkbVariantOgc) ? getGeometryType()  :
> >> > getIsoGeometryType(); }" and a public OGRwkbIsoGeometryType
> >> > getIsoGeometryType().
> >> > 
> >> >> P.
> >> >> 
> >> >> On Tue, Dec 17, 2013 at 1:03 AM, Even Rouault
> >> >> 
> >> >> <even.rouault at mines-paris.org> wrote:
> >> >> > Selon Paul Ramsey <pramsey at cleverelephant.ca>:
> >> >> >> Back to this, is it OK?
> >> >> > 
> >> >> > As said in
> >> >> > http://lists.osgeo.org/pipermail/gdal-dev/2013-December/037738.html
> >> >> > , I feel a bit unconfortable with the extension of the
> >> >> > OGRwkbGeometryType enumeration that has possible impacts on other
> >> >> > parts of OGR. There's perhaps a time where we will touch it, but
> >> >> > I'd expect it to ideally embrace Z, M, ZM, circular geometries at
> >> >> > once. And that would deserve a RFC.
> >> >> > 
> >> >> > What do you think of keeping it an internal enumeration of OGR,
> >> >> > since that's probably all you need for now ?
> >> >> > 
> >> >> > "Or have a separate OGRwkbIsoGeometryType enumeration {
> >> >> > wkbPointIso, ... wkbGeometryCollectionIso, wkbPointIsoZ, ...
> >> >> > wkbGeometryCollectionIsoZ }, a getIsoGeometryType() method that
> >> >> > returns it, and the exportToWkb() methods that calls int
> >> >> > getGeometryType(OGRwkbVariant eVariant) { return (eVariant ==
> >> >> > wkbVariantOgc) ? getGeometryType()  : getIsoGeometryType(); }"
> >> >> > 
> >> >> > I'd be happy to hear about other GDAL developers opinion on this.
> >> >> > 
> >> >> >> How are we patching back to SVN? I can convert
> >> >> >> it into a patch and attach to a ticket, if that's the path.
> >> >> > 
> >> >> > git-svn can be used to bridge the 2 worlds, but in my recent
> >> >> > experience it has been painful to use. So generating a patch and
> >> >> > applying it is probably easier.
> >> >> > 
> >> >> > Even
> >> >> > 
> >> >> > --
> >> >> > Geospatial professional services
> >> >> > http://even.rouault.free.fr/services.html
> >> > 
> >> > --
> >> > Geospatial professional services
> >> > http://even.rouault.free.fr/services.html
> > 
> > --
> > Geospatial professional services
> > http://even.rouault.free.fr/services.html

-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From tpiepho at gmail.com  Wed Dec 18 19:41:18 2013
From: tpiepho at gmail.com (Trent Piepho)
Date: Wed, 18 Dec 2013 19:41:18 -0800
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
 raster bands as virtual memory mappings"
In-Reply-To: <201312182302.01229.even.rouault@mines-paris.org>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312182046.43899.even.rouault@mines-paris.org>
	<CA+7tXijrUtuE2=wE86pdEUuJaszvoq1rU-z+sUHsfFTKPwMyjw@mail.gmail.com>
	<201312182302.01229.even.rouault@mines-paris.org>
Message-ID: <CA+7tXigTQRu=vWY2y4Tp2g2wbAxjXgcXgsEcOya9ytdve66K1A@mail.gmail.com>

Do you see page file activity?  If you look at /proc/pid/smaps, you
should be able to see the actual status of the mapping of your data
file.  Probably it is consuming a large number of pages of RAM, but
also there should be zero pages written to swap.  All clean private or
clean shared, zero anonymous and zero swap.

I think the system unresponsiveness is probably do to I/O scheduling.
You're process has queued a lot of I/O reads and everything else has
to wait in the queue.  So all other I/O sees huge latencies.

And too, a 20 GB mapping is probably thrashing the TLB.  Do huge pages
actually get used?  On the embedded systems I'm more intimately
familiar with, only normal 4k pages are used by user processes.  Huge
TLBs are more of a special case that can be used by the kernel for
things like frame buffer mappings and SoC register windows.


On Wed, Dec 18, 2013 at 2:02 PM, Even Rouault
<even.rouault at mines-paris.org> wrote:
> Le mercredi 18 d?cembre 2013 21:09:48, Trent Piepho a ?crit :
>> On Wed, Dec 18, 2013 at 11:46 AM, Even Rouault
>>
>> <even.rouault at mines-paris.org> wrote:
>> > Le mercredi 18 d?cembre 2013 19:53:37, Frank Warmerdam a ?crit :
>> >> I imagined an available virtual method on the band which could be
>> >> implemented - primarily by the RawBand class to try and mmap() the data
>> >> and return the layout.  But when that fails, or is unavailable it could
>> >> use your existing methodology with a layout that seems well tuned to
>> >> the underlying data organization.
>> >
>> > Yes, that should be doable, but with the limitation I raised about the
>> > memory management of file-based mmap() : if you mmap() a file larger
>> > than RAM, and read it entirely, without explicit madvise() to discard
>> > regions no longer needed, it will fill RAM and cause disk swapping. I
>> > should retest to confirm. Perhaps there are some OS level tuning to
>> > avoid that ?
>>
>> For Linux, if you mmap a file and do not write to it, the pages will
>> be clean.  This means that under memory pressure those pages can be
>> dropped without paging out to swap.  They are already backed on disk
>> in the mmaped file.  Only dirty anonymous mapped pages (anon mmap,
>> malloc() memory from mmap() or brk(), stack, etc.) would need to be
>> written to swap.
>
> Yes, that's the theory. But in practice, on my system ( kernel 2.6.32-46-
> generic 64 bit - Ubuntu 10.04 - 4 GB RAM ), the system becomes rather
> unresponsive as soon as the process has read a part of the file that is
> equivalent to the initial remaining free RAM. The 'top' utility shows it to
> consume ~ 2.7 GB, which must be the free RAM.
>
> Here's the test program I've used :
>
> test_mmap.c :
>
> #define _LARGEFILE64_SOURCE 1
> #include <sys/mman.h>
> #include <sys/types.h>
> #include <sys/stat.h>
> #include <assert.h>
> #include <fcntl.h>
> #include <stdio.h>
> #include <string.h>
> #include <unistd.h>
>
> int main(int argc, char* argv[])
> {
>     int fd;
>     struct stat64 buf;
>     char* ptr;
>     long long i;
>     int res = 0;
>     int bDontNeed = 0;
>
>     assert( argc == 2 || argc == 3 );
>     if( argc == 3 && strcmp(argv[2], "-dontneed") == 0 )
>         bDontNeed = 1;
>     fd = open(argv[1], O_RDONLY);
>     assert(fd >= 0);
>     assert(stat64(argv[1], &buf) == 0);
>     ptr = (char*) mmap(NULL, buf.st_size, PROT_READ, MAP_PRIVATE, fd, 0);
>     assert(ptr);
>     for(i = 0; i< buf.st_size; i+= 4096)
>     {
>         /* Discard the pages every 500 MB read */
>         if( bDontNeed && ((i % (1024 * 1024 * 500)) == 0) )
>             madvise(ptr, buf.st_size, MADV_DONTNEED);
>
>         res += ptr[i];
>     }
>     close(fd);
>     return res;
> }
>
> $ gcc -Wall -g test_mmap.c -o test_mmap
>
> $ ./test_mmap eudem_dem_4258_europe.tif
> (the file is 20 GB large)
>
> --> system becomes unresponsive
>
> $ ./test_mmap eudem_dem_4258_europe.tif -dontneed
>
> --> system remains usable. Every 500 MB read, a madvise() call will
> explicitely discard all pages. That's just for test. It couldn't be used in
> practice.
>
> ==> Does anyone reproduce similar behaviour ?
>
>>
>> Of course if you touch a large amount of memory and know you're never
>> use it again, you can help the OS out when it comes to deciding which
>> pages to free by using madvise.
>>
>> One think to consider is that a 32-bit OS can only memory map about
>> 2-3 GB at once, even though there is no trouble using files much
>> larger than this size.  If you want to access a large file with
>> mmap(), you might need to use some kind of sliding window.
>
> Yes, I'm well aware of that. But 32bit systems are now becoming increasingly
> legacy, so we shouldn't worry too much about them.
>
>>
>> I think also, mmaping many gigabytes has a certain cost in setting up
>> the page tables for the mapping that's not insignificant.  Even on a
>> 64-bit os, mmaping a 20 GB file just to access some small portion of
>> it could be inefficient.
>
> Yes, I agree there are hidden costs in the memory management layers of the OS.
> "Huge TLB pages" (2 MB) on AMD64 systems can potentially be a solution to
> decrease that cost. I had started a bit to experiment with that, but my kernel
> was not recent enough to benefit from all functionnalities or it didn't seem
> really practical to use.
>
> --
> Geospatial professional services
> http://even.rouault.free.fr/services.html

From jomeder at ihug.co.nz  Thu Dec 19 00:50:08 2013
From: jomeder at ihug.co.nz (Jo Meder)
Date: Thu, 19 Dec 2013 21:50:08 +1300
Subject: [gdal-dev] JPEG2000 read performance with OpenJPEG
Message-ID: <8A14C2A8-755F-47A3-BF8D-D1BFC3AB33D7@ihug.co.nz>

Hi,

Just to follow up, once I got GDAL built with OpenJPEG support on Windows I found the performance was terrible there as well. So I tried reading in blocks and that was obviously the way to do it. The way I was doing it was to read a scanline from each rasterband, perhaps 4 different bands for an RGBA image, and process all the pixels for a scanline at once. Now I read blocks from each rasterband in turn. It completes in a minute or so instead of taking 10 minutes without completing one scanline!

It's interesting because it kind of makes having a codepath based on GDALRasterBand::RasterIO() redundant, for my purposes anyway. Originally I thought I would have two codepaths based on reading scanlines (especially considering I'd written it all before trying JPEG 2000!) and reading blocks which were switched between depending on block size. That ends up being a chunk of code though, and with the risk of major performance issues it seems better just to go with reading blocks. All RasterIO() seems to get you, on the surface at least, is the data type conversion. However I found GDALCopyWords() which seems to handle that.

Thanks to whoever wrote the sample code in the ReadBlock() docs, very helpful as a start :-).

Regards,

Jo Meder

From jomeder at ihug.co.nz  Thu Dec 19 01:18:04 2013
From: jomeder at ihug.co.nz (Jo Meder)
Date: Thu, 19 Dec 2013 22:18:04 +1300
Subject: [gdal-dev] NLCD images and north
In-Reply-To: <52A6A0D3.5050509@stripfamily.net>
References: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>
	<52A6A0D3.5050509@stripfamily.net>
Message-ID: <06F4340D-8485-4444-833C-ACA7D182D055@ihug.co.nz>

Hi David,

Thanks for your help. I hadn't replied before now because I'm on the digest and I was waiting for it to come through. It never did! Seems like I'm not getting all the digests for some reason.

On 10/12/2013, at 6:04 PM, David Strip <gdal at stripfamily.net> wrote:

> I downloaded some NLCD test data (roughly Washington DC, for what it's
> worth) using the NationalMap viewer and I see the apparent rotation, but
> actually it's not rotated. I suspect you are seeing the same phenomenon.
> Your download includes, among other files, a .tif file with the image,
> and a .tfw file that defines the "world" in terms of the projection
> defined in the .prj file. In my  experiment the .tfw file shows no
> rotation (entries 2 and 3 are equal to 0). However, the projection is an
> Albers Equal Area projection, so the image boundaries don't align to the
> tif boundaries. If you open your file in something like qgis and set the
> projection to the appropriate UTM zone or similar projection, you'll
> probably get what you're expecting - a north-south rectangle containing
> your data. 

I gave it a try and got that result too.

> At least that's what happened when I tried it. (And of course
> that's what it should be according the .tfw file)

Can you clarify that last part for me please? Are you saying that the data should be aligned north up based on the .tfw file? The geotransform from GDAL also suggested there was no rotation. Or is it just that the data is correct for the projection it is in?

So far all the data I've used has been north up and seems to have been projected in UTM or something like it. I need to make things transparent to the user so I wonder if what I should be doing is reprojecting all the data to a custom projection for our world. The reprojection would handle the cases like this NLCD data.

Regards,

Jo Meder 


From even.rouault at mines-paris.org  Thu Dec 19 01:52:43 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 19 Dec 2013 10:52:43 +0100
Subject: [gdal-dev] JPEG2000 read performance with OpenJPEG
In-Reply-To: <8A14C2A8-755F-47A3-BF8D-D1BFC3AB33D7@ihug.co.nz>
References: <8A14C2A8-755F-47A3-BF8D-D1BFC3AB33D7@ihug.co.nz>
Message-ID: <1387446763.52b2c1eb36156@imp.free.fr>

Hi,

Yes for performance you must adapt your reading pattern to the underlying
structure of the data. You could still have performant RasterIO() if you define
GDAL_CACHEMAX to at least (raster_width * block_height * 4), so that when you
read a scanline there will be enough memory in the block cache to keep all the
blocks that have been read for that scanline.
Instead of using GDALReadBlock(), you could also use GDALRasterIO() but on a
window that is aligned to tile boundaries and dimensions.
The reason for which gdal_translate was more performant than your code is that
it does exactly that : work on block/tile dimensions.

Even

> Hi,
>
> Just to follow up, once I got GDAL built with OpenJPEG support on Windows I
> found the performance was terrible there as well. So I tried reading in
> blocks and that was obviously the way to do it. The way I was doing it was to
> read a scanline from each rasterband, perhaps 4 different bands for an RGBA
> image, and process all the pixels for a scanline at once. Now I read blocks
> from each rasterband in turn. It completes in a minute or so instead of
> taking 10 minutes without completing one scanline!
>
> It's interesting because it kind of makes having a codepath based on
> GDALRasterBand::RasterIO() redundant, for my purposes anyway. Originally I
> thought I would have two codepaths based on reading scanlines (especially
> considering I'd written it all before trying JPEG 2000!) and reading blocks
> which were switched between depending on block size. That ends up being a
> chunk of code though, and with the risk of major performance issues it seems
> better just to go with reading blocks. All RasterIO() seems to get you, on
> the surface at least, is the data type conversion. However I found
> GDALCopyWords() which seems to handle that.
>
> Thanks to whoever wrote the sample code in the ReadBlock() docs, very helpful
> as a start :-).
>
> Regards,
>
> Jo Meder
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>

From skunkmyrddyn at gmail.com  Thu Dec 19 10:15:41 2013
From: skunkmyrddyn at gmail.com (Simon Shak)
Date: Thu, 19 Dec 2013 12:15:41 -0600
Subject: [gdal-dev] JPEG2000 read performance with OpenJPEG
In-Reply-To: <8A14C2A8-755F-47A3-BF8D-D1BFC3AB33D7@ihug.co.nz>
References: <8A14C2A8-755F-47A3-BF8D-D1BFC3AB33D7@ihug.co.nz>
Message-ID: <CAJuTQSHG4p_Zhv1Y8tc-YL7CoCfNqnjSCB+fFZm8GPyixvxY8A@mail.gmail.com>

I've worked with jp2 for a while and have found that the specifics of each
source was different and had different timings when reading. Overall I
found the erdas ecw/j2k driver had the best read performance. The read only
driver is available freely.
On Dec 19, 2013 2:50 AM, "Jo Meder" <jomeder at ihug.co.nz> wrote:

> Hi,
>
> Just to follow up, once I got GDAL built with OpenJPEG support on Windows
> I found the performance was terrible there as well. So I tried reading in
> blocks and that was obviously the way to do it. The way I was doing it was
> to read a scanline from each rasterband, perhaps 4 different bands for an
> RGBA image, and process all the pixels for a scanline at once. Now I read
> blocks from each rasterband in turn. It completes in a minute or so instead
> of taking 10 minutes without completing one scanline!
>
> It's interesting because it kind of makes having a codepath based on
> GDALRasterBand::RasterIO() redundant, for my purposes anyway. Originally I
> thought I would have two codepaths based on reading scanlines (especially
> considering I'd written it all before trying JPEG 2000!) and reading blocks
> which were switched between depending on block size. That ends up being a
> chunk of code though, and with the risk of major performance issues it
> seems better just to go with reading blocks. All RasterIO() seems to get
> you, on the surface at least, is the data type conversion. However I found
> GDALCopyWords() which seems to handle that.
>
> Thanks to whoever wrote the sample code in the ReadBlock() docs, very
> helpful as a start :-).
>
> Regards,
>
> Jo Meder
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131219/0cddbdab/attachment-0001.html>

From gdal at stripfamily.net  Thu Dec 19 10:38:50 2013
From: gdal at stripfamily.net (David Strip)
Date: Thu, 19 Dec 2013 11:38:50 -0700
Subject: [gdal-dev] NLCD images and north
In-Reply-To: <06F4340D-8485-4444-833C-ACA7D182D055@ihug.co.nz>
References: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>	<52A6A0D3.5050509@stripfamily.net>
	<06F4340D-8485-4444-833C-ACA7D182D055@ihug.co.nz>
Message-ID: <52B33D3A.6040102@stripfamily.net>

On 12/19/2013 2:18 AM, Jo Meder wrote:
> Can you clarify that last part for me please? Are you saying that the data should be aligned north up based on the .tfw file? The geotransform from GDAL also suggested there was no rotation. Or is it just that the data is correct for the projection it is in?
The .tfw file is saying the is indeed aligned north up, in the sense
that pixel (0,0) is due north of pixel (1,0). That is, the columns of
the array are aligned north-south.
Once again, open the raster in qgis. You get an apparently rotated patch
that is slightly tapered towards the top. This is how the projection
renders for this part of the world (Washington, DC). Now click
View->Decorations->North Arrow, click Enable North Arrow and click Set
Direction Automatically. Click OK. The resulting north arrow does not
point vertically, but rather is parallel to the edges of the patch,
again validating the north-up nature of the rasters.
>
> So far all the data I've used has been north up and seems to have been projected in UTM or something like it. I need to make things transparent to the user so I wonder if what I should be doing is reprojecting all the data to a custom projection for our world. The reprojection would handle the cases like this NLCD data.
Hopefully someone will chime in here with a suggestion how to address
your problem to make this easier for your users. Reprojecting your data
to a projection that doesn't have the visual effect of the Albers seems
to be the right way to go so as not to confuse your users, but what
projection to use is a complicated question that has a lot to do with
the use case and what areas of the world you're working in.  Each
projection introduces it own forms of distortion (or alternatively, each
preserves specific characteristics). The choice of projection will
depend on which characteristics are most important to preserve, the
scale/extent of the maps your users work in, and the sorts of analyses
(formal or informal) that they will be performing.

From even.rouault at mines-paris.org  Thu Dec 19 11:05:58 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Thu, 19 Dec 2013 20:05:58 +0100
Subject: [gdal-dev] Call for discussion on "RFC 45: GDAL datasets and
	raster bands as virtual memory mappings"
In-Reply-To: <CA+7tXigTQRu=vWY2y4Tp2g2wbAxjXgcXgsEcOya9ytdve66K1A@mail.gmail.com>
References: <201312172154.31610.even.rouault@mines-paris.org>
	<201312182302.01229.even.rouault@mines-paris.org>
	<CA+7tXigTQRu=vWY2y4Tp2g2wbAxjXgcXgsEcOya9ytdve66K1A@mail.gmail.com>
Message-ID: <201312192006.01326.even.rouault@mines-paris.org>

Le jeudi 19 d?cembre 2013 04:41:18, Trent Piepho a ?crit :
> Do you see page file activity?  If you look at /proc/pid/smaps, you
> should be able to see the actual status of the mapping of your data
> file.  Probably it is consuming a large number of pages of RAM, but
> also there should be zero pages written to swap.  All clean private or
> clean shared, zero anonymous and zero swap.

7f8e6f75d000-7f9334df1000 r--p 00000000 08:06 11645756                   
/home/even/T?l?chargements/eudem_dem_4258_europe.tif
Size:           20011600 kB
Rss:             2943372 kB
Pss:             2943372 kB
Shared_Clean:          0 kB
Shared_Dirty:          0 kB
Private_Clean:   2943372 kB
Private_Dirty:         0 kB
Referenced:       950596 kB
Swap:                  0 kB
KernelPageSize:        4 kB
MMUPageSize:           4 kB

So yes, you are right. I've noticed the 'Referenced' values tends to fluctuate 
a lot during execution, while other values remain stable after some point.

> 
> I think the system unresponsiveness is probably do to I/O scheduling.
> You're process has queued a lot of I/O reads and everything else has
> to wait in the queue.  So all other I/O sees huge latencies.

Yes, that's a likely clause. I've just tried to do a 
madvise(..,..,MADV_RANDOM) on the whole mapping just after mmap(), and it 
seems to increase the system responsiveness in a noticeable way (since I can 
write this email while the program is running !). Of course, the throughput of 
the test program has reduced significantly (which is logical since agressive 
I/O read-ahead must be disabled).

> 
> And too, a 20 GB mapping is probably thrashing the TLB.  Do huge pages
> actually get used?

No, they don't. My understanding and previous attempts is that mmap() needs an 
explicit flag for that, and other tunings at OS level.

> On the embedded systems I'm more intimately
> familiar with, only normal 4k pages are used by user processes.  Huge
> TLBs are more of a special case that can be used by the kernel for
> things like frame buffer mappings and SoC register windows.
> 


-- 
Geospatial professional services
http://even.rouault.free.fr/services.html

From gdal at stripfamily.net  Thu Dec 19 12:02:57 2013
From: gdal at stripfamily.net (David Strip)
Date: Thu, 19 Dec 2013 13:02:57 -0700
Subject: [gdal-dev] NLCD images and north
In-Reply-To: <52B33D3A.6040102@stripfamily.net>
References: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>	<52A6A0D3.5050509@stripfamily.net>	<06F4340D-8485-4444-833C-ACA7D182D055@ihug.co.nz>
	<52B33D3A.6040102@stripfamily.net>
Message-ID: <52B350F1.8090700@stripfamily.net>

On 12/19/2013 11:38 AM, David Strip wrote:
> On 12/19/2013 2:18 AM, Jo Meder wrote:
>> Can you clarify that last part for me please? Are you saying that the data should be aligned north up based on the .tfw file? The geotransform from GDAL also suggested there was no rotation. Or is it just that the data is correct for the projection it is in?
Ignore this part of my previous reply. It's not correct and reflects
confusion on my part.
> The .tfw file is saying the is indeed aligned north up, in the sense
> that pixel (0,0) is due north of pixel (1,0). That is, the columns of
> the array are aligned north-south.
End region to ignore
> Once again, open the raster in qgis. You get an apparently rotated patch
> that is slightly tapered towards the top. This is how the projection
> renders for this part of the world (Washington, DC). Now click
> View->Decorations->North Arrow, click Enable North Arrow and click Set
> Direction Automatically. Click OK. The resulting north arrow does not
> point vertically, but rather is parallel to the edges of the patch,
> again validating the north-up nature of the rasters.
>> So far all the data I've used has been north up and seems to have been projected in UTM or something like it. I need to make things transparent to the user so I wonder if what I should be doing is reprojecting all the data to a custom projection for our world. The reprojection would handle the cases like this NLCD data.
> Hopefully someone will chime in here with a suggestion how to address
> your problem to make this easier for your users. Reprojecting your data
> to a projection that doesn't have the visual effect of the Albers seems
> to be the right way to go so as not to confuse your users, but what
> projection to use is a complicated question that has a lot to do with
> the use case and what areas of the world you're working in.  Each
> projection introduces it own forms of distortion (or alternatively, each
> preserves specific characteristics). The choice of projection will
> depend on which characteristics are most important to preserve, the
> scale/extent of the maps your users work in, and the sorts of analyses
> (formal or informal) that they will be performing.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



From knelson at usgs.gov  Thu Dec 19 12:07:30 2013
From: knelson at usgs.gov (Kurtis Nelson)
Date: Thu, 19 Dec 2013 14:07:30 -0600
Subject: [gdal-dev] NLCD images and north
In-Reply-To: <52B350F1.8090700@stripfamily.net>
References: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>	<52A6A0D3.5050509@stripfamily.net>	<06F4340D-8485-4444-833C-ACA7D182D055@ihug.co.nz>	<52B33D3A.6040102@stripfamily.net>
	<52B350F1.8090700@stripfamily.net>
Message-ID: <52B35202.9080304@usgs.gov>

On 12/19/2013 2:02 PM, David Strip wrote:
> On 12/19/2013 11:38 AM, David Strip wrote:
>> On 12/19/2013 2:18 AM, Jo Meder wrote:
>>> Can you clarify that last part for me please? Are you saying that the data should be aligned north up based on the .tfw file? The geotransform from GDAL also suggested there was no rotation. Or is it just that the data is correct for the projection it is in?
> Ignore this part of my previous reply. It's not correct and reflects
> confusion on my part.
>> The .tfw file is saying the is indeed aligned north up, in the sense
>> that pixel (0,0) is due north of pixel (1,0). That is, the columns of
>> the array are aligned north-south.
> End region to ignore
>> Once again, open the raster in qgis. You get an apparently rotated patch
>> that is slightly tapered towards the top. This is how the projection
>> renders for this part of the world (Washington, DC). Now click
>> View->Decorations->North Arrow, click Enable North Arrow and click Set
>> Direction Automatically. Click OK. The resulting north arrow does not
>> point vertically, but rather is parallel to the edges of the patch,
>> again validating the north-up nature of the rasters.
>>> So far all the data I've used has been north up and seems to have been projected in UTM or something like it. I need to make things transparent to the user so I wonder if what I should be doing is reprojecting all the data to a custom projection for our world. The reprojection would handle the cases like this NLCD data.
>> Hopefully someone will chime in here with a suggestion how to address
>> your problem to make this easier for your users. Reprojecting your data
>> to a projection that doesn't have the visual effect of the Albers seems
>> to be the right way to go so as not to confuse your users, but what
>> projection to use is a complicated question that has a lot to do with
>> the use case and what areas of the world you're working in.  Each
>> projection introduces it own forms of distortion (or alternatively, each
>> preserves specific characteristics). The choice of projection will
>> depend on which characteristics are most important to preserve, the
>> scale/extent of the maps your users work in, and the sorts of analyses
>> (formal or informal) that they will be performing.
To re-iterate what David mentioned - The NLCD data are projected using 
an Albers Conical Equal Area projection centered on the conterminous US 
(-96 degrees).  If you are displaying the data relative to a UTM frame 
it will appear increasingly rotated as you get further from the center 
of the projection space.  The data can be re-projected to UTM or other 
such suitable coordinate system based on the size and location of your 
study area and the desired purpose of your data.  However, realize that 
re-projecting raster data will result in modified pixel values which, 
when working with thematic data, can affect your analyses depending on 
the level of error introduced and again what you plan to use the data for.
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131219/6b8a85ae/attachment.html>

From mkorver at amazon.com  Thu Dec 19 14:58:20 2013
From: mkorver at amazon.com (Korver, Mark)
Date: Thu, 19 Dec 2013 22:58:20 +0000
Subject: [gdal-dev] newb with gdal vrt file
Message-ID: <3067CD48A39A0E4B90D161D30D43C97109E96FF4@ex10-mbx-6004.ant.amazon.com>

I am seeing the following error when trying to run a check on a new vrt that I created.

u at ip:/mnt/tx$ gdal_translate -of GTiff -b 1 -outsize 2% 2% utmzone_15_index.vrt utm15overview.tif
Input file size is 246390, 271201
0ERROR 4: Failed to open /mnt/tx/naip12_nc-cir_1m_3093_33_2_20120522.jp2.
u at ip:/mnt/tx$

I also tried specifying bands with -b 1 -b 2 -b 3, same error.

This is a vrt that points at 4 band jp2 files.  When I run gdal_translate directly on naip12_nc-cir_1m_3093_33_2_20120522.jp2 I don't have a problem.

I used the following command to generate the vrt.
gdalbuildvrt -input_file_list /mnt/tx/utmzone15.lst /mnt/tx/utmzone_15_index.vrt

there are 4 references to the file that it errors on in the vrt
cat utmzone_15_index.vrt | grep naip12_nc-cir_1m_3093_33_2_20120522
      <SourceFilename relativeToVRT="1">naip12_nc-cir_1m_3093_33_2_20120522.jp2</SourceFilename>
      <SourceFilename relativeToVRT="1">naip12_nc-cir_1m_3093_33_2_20120522.jp2</SourceFilename>
      <SourceFilename relativeToVRT="1">naip12_nc-cir_1m_3093_33_2_20120522.jp2</SourceFilename>
      <SourceFilename relativeToVRT="1">naip12_nc-cir_1m_3093_33_2_20120522.jp2</SourceFilename>

I suspect I just don't understand something about how I should build the vrt in the first place, and that it has something to do with bands.
I would appreciate if someone would point out what I have wrong.

You can see the vrt file here
http://korver-geodata.s3.amazonaws.com/utmzone_15_index.vrt?AWSAccessKeyId=AKIAJVGZCMETHRONYTUQ&Expires=1398979666&Signature=zVPjulOwuqD8TRULQ%2bLb%2f8Q8xJA%3d

The jp2 that it stops on is here.
http://korver-geodata.s3.amazonaws.com/naip/tx/2012/naip12_nc-cir_1m_3093_33_2_20120522.jp2?AWSAccessKeyId=AKIAJVGZCMETHRONYTUQ&Expires=1401918601&Signature=cY7CtKQcAkMkh%2bDtLnVHiSSDULI%3d

------------------------------------ 
Mark Korver
Education & Government Solutions Architect
Amazon Web Services 
o: 206.765.4745 | m: 206.669.3557





From lukepinnerau at gmail.com  Thu Dec 19 17:58:06 2013
From: lukepinnerau at gmail.com (Luke)
Date: Thu, 19 Dec 2013 17:58:06 -0800 (PST)
Subject: [gdal-dev] newb with gdal vrt file
In-Reply-To: <3067CD48A39A0E4B90D161D30D43C97109E96FF4@ex10-mbx-6004.ant.amazon.com>
References: <3067CD48A39A0E4B90D161D30D43C97109E96FF4@ex10-mbx-6004.ant.amazon.com>
Message-ID: <1387504686096-5095183.post@n6.nabble.com>

Your paths are likely wrong. According to the paths in that VRT, the JP2s
should be located in the same directory as the VRT file.  If they aren't,
you need to ensure the list of JP2s (/mnt/tx/utmzone15.lst) used to create
the VRT contains complete absolute or relative paths to each JP2.

Luke



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-newb-with-gdal-vrt-file-tp5095176p5095183.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From jomeder at ihug.co.nz  Fri Dec 20 03:24:05 2013
From: jomeder at ihug.co.nz (Jo Meder)
Date: Sat, 21 Dec 2013 00:24:05 +1300
Subject: [gdal-dev] NLCD images and north
In-Reply-To: <52B33D3A.6040102@stripfamily.net>
References: <97DB64B0-FD27-4B8A-9CE4-B177A38E9B30@ihug.co.nz>	<52A6A0D3.5050509@stripfamily.net>
	<06F4340D-8485-4444-833C-ACA7D182D055@ihug.co.nz>
	<52B33D3A.6040102@stripfamily.net>
Message-ID: <026EC36A-F89D-4802-BAF5-A2CAF751F272@ihug.co.nz>

Hi David,

On 20/12/2013, at 7:38 AM, David Strip wrote:

> Once again, open the raster in qgis. You get an apparently rotated patch
> that is slightly tapered towards the top. This is how the projection
> renders for this part of the world (Washington, DC). Now click
> View->Decorations->North Arrow, click Enable North Arrow and click Set
> Direction Automatically. Click OK. The resulting north arrow does not
> point vertically, but rather is parallel to the edges of the patch,
> again validating the north-up nature of the rasters.

Right, that makes it very clear, thanks.

> Hopefully someone will chime in here with a suggestion how to address
> your problem to make this easier for your users. Reprojecting your data
> to a projection that doesn't have the visual effect of the Albers seems
> to be the right way to go so as not to confuse your users, but what
> projection to use is a complicated question that has a lot to do with
> the use case and what areas of the world you're working in.  Each
> projection introduces it own forms of distortion (or alternatively, each
> preserves specific characteristics). The choice of projection will
> depend on which characteristics are most important to preserve, the
> scale/extent of the maps your users work in, and the sorts of analyses
> (formal or informal) that they will be performing.

Our app is landscape renderer/visualiser (not based around real world data) which has a planet as the base scene object. It's a sphere and we use a lat/long geographic coordinate system for georeferencing. As a "near enough" test I reprojected the NLCD data to WGS84/EPSG:4326 and that seems to have done the trick. There is still a ways to go but it's a promising start. I did a quick test render showing the Mt St Helens from the USGS National Map with the 1/9 Arc Second DEMs, several orthophotos and the NLCD data:

http://www.jomeder.com/photos/mshmanydata.jpg

I think the ghosting in areas with the orthophotos is a bit of misregistration between the orthophoto and the DEM. There is one set of shadows from the orthophotos and one from the rendering.

Anyway, thanks for putting me on the right track.

Regards,

Jo Meder

From cgodkin at gmail.com  Fri Dec 20 06:06:22 2013
From: cgodkin at gmail.com (Carl Godkin)
Date: Fri, 20 Dec 2013 06:06:22 -0800
Subject: [gdal-dev] Link change to ESRI download site
Message-ID: <CAE=8kmkHp4Ao3kRDb6y3KRcESVXxup2HfV6+vJtCDtC4w2URGA@mail.gmail.com>

Hi,

The link on the ESRI File Geodatabase (FileGDB) driver page

http://www.gdal.org/ogr/drv_filegdb.html

now points to a non-existent ESRI page.  I think the link could be replaced
by

http://www.esri.com/apps/products/download/#File_Geodatabase_API_1.3

instead.

Thanks,

carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131220/9f2a2ffb/attachment-0001.html>

From mkorver at amazon.com  Sat Dec 21 00:12:32 2013
From: mkorver at amazon.com (Mark korver)
Date: Sat, 21 Dec 2013 00:12:32 -0800 (PST)
Subject: [gdal-dev] newb with gdal vrt file
In-Reply-To: <1387504686096-5095183.post@n6.nabble.com>
References: <3067CD48A39A0E4B90D161D30D43C97109E96FF4@ex10-mbx-6004.ant.amazon.com>
	<1387504686096-5095183.post@n6.nabble.com>
Message-ID: <1387613552126-5095336.post@n6.nabble.com>

The VRT is in the same directory as the jp2 files.  I also ran the
gdal_translate from the same directory. I just tried it again after changing
to absolute path and I get the same error.  Maybe I am just hitting some
limit in the number of files I can have in a VRT?  There are about 1,000 in
this one.  I was hoping to use the VRT rather than use gdaltindex for use
with Mapserver, but maybe I need to go back to gdaltindex approach?

- Mark



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-newb-with-gdal-vrt-file-tp5095176p5095336.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From howard at hobu.co  Sun Dec 22 19:17:02 2013
From: howard at hobu.co (Howard Butler)
Date: Sun, 22 Dec 2013 21:17:02 -0600
Subject: [gdal-dev] MrSID JP2 support in Mac DSDK 9
Message-ID: <66FAD1C0-0D88-4883-8754-E908D3DE83F5@hobu.co>

All,

This is more a question for the LizardTech folks, but I was attempting to configure GDAL trunk to provide JP2 support via the MrSID --with-jp2mrsid configure switch, and it complained about not finding libltkdu.a to enable it. That archive file is not in the DSDK at all, and as far as I can tell, this must mean there's either no JP2 support in the MrSID DSDK or our configure logic needs to change for DSDKs > 8.0 that have moved their JP2 symbols into the main library or something.

Does anyone know the story with MrSID JP2 is on OSX?

Secondly, does OpenJPEG perform well enough to not bother with MrSID's JP2 implementation?

Thanks,

Howard 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131222/01664629/attachment.pgp>

From even.rouault at mines-paris.org  Mon Dec 23 03:00:33 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Mon, 23 Dec 2013 12:00:33 +0100
Subject: [gdal-dev] MrSID JP2 support in Mac DSDK 9
In-Reply-To: <66FAD1C0-0D88-4883-8754-E908D3DE83F5@hobu.co>
References: <66FAD1C0-0D88-4883-8754-E908D3DE83F5@hobu.co>
Message-ID: <1387796433.52b817d182d1a@imp.free.fr>

Hi Howard,

DSDK v8 or later no longer needs libltkdu.a. The test that should have succeeded
and that has not apparently in your case is :

        elif test -e "$with_mrsid/lib/libltidsdk.so" \
              -o -e "$with_mrsid/lib/libltidsdk.dylib"; then # v8+ .so has kdu
          with_jp2mrsid=yes

But I don't know if there are specific behaviour for the Mac DSDK

Regarding OpenJPEG, it will be undoubtly slower than any of the proprietary
implementation. For JPEG2000 files that are tiled, the performance is more or
less acceptable for interactive rendering in QGIS ( ~ 1 second with a 4 core CPU
  when scrolling). For monoblock JPEG2000, performance will be terrible since
OpenJPEG needs to decode  the whole file.

Even

> All,
>
> This is more a question for the LizardTech folks, but I was attempting to
> configure GDAL trunk to provide JP2 support via the MrSID --with-jp2mrsid
> configure switch, and it complained about not finding libltkdu.a to enable
> it. That archive file is not in the DSDK at all, and as far as I can tell,
> this must mean there's either no JP2 support in the MrSID DSDK or our
> configure logic needs to change for DSDKs > 8.0 that have moved their JP2
> symbols into the main library or something.
>
> Does anyone know the story with MrSID JP2 is on OSX?
>
> Secondly, does OpenJPEG perform well enough to not bother with MrSID's JP2
> implementation?
>
> Thanks,
>
> Howard
>



From howard at hobu.co  Mon Dec 23 07:55:20 2013
From: howard at hobu.co (Howard Butler)
Date: Mon, 23 Dec 2013 09:55:20 -0600
Subject: [gdal-dev] MrSID JP2 support in Mac DSDK 9
In-Reply-To: <1387796433.52b817d182d1a@imp.free.fr>
References: <66FAD1C0-0D88-4883-8754-E908D3DE83F5@hobu.co>
	<1387796433.52b817d182d1a@imp.free.fr>
Message-ID: <94D520D2-37A9-4606-B800-ED0311D8DA60@hobu.co>


On Dec 23, 2013, at 5:00 AM, Even Rouault <even.rouault at mines-paris.org> wrote:

> Hi Howard,
> 
> DSDK v8 or later no longer needs libltkdu.a. The test that should have succeeded
> and that has not apparently in your case is :
> 
>        elif test -e "$with_mrsid/lib/libltidsdk.so" \
>              -o -e "$with_mrsid/lib/libltidsdk.dylib"; then # v8+ .so has kdu
>          with_jp2mrsid=yes
> 
> But I don't know if there are specific behaviour for the Mac DSDK

Ok, I'll fix this up.

Howard

From howard at hobu.co  Mon Dec 23 19:37:19 2013
From: howard at hobu.co (Howard Butler)
Date: Mon, 23 Dec 2013 21:37:19 -0600
Subject: [gdal-dev] MrSID JP2 support in Mac DSDK 9
In-Reply-To: <94D520D2-37A9-4606-B800-ED0311D8DA60@hobu.co>
References: <66FAD1C0-0D88-4883-8754-E908D3DE83F5@hobu.co>
	<1387796433.52b817d182d1a@imp.free.fr>
	<94D520D2-37A9-4606-B800-ED0311D8DA60@hobu.co>
Message-ID: <EE910814-EBDF-40A3-8D16-40045A0ED1A3@hobu.co>


On Dec 23, 2013, at 9:55 AM, Howard Butler <howard at hobu.co> wrote:

> 
> On Dec 23, 2013, at 5:00 AM, Even Rouault <even.rouault at mines-paris.org> wrote:
> 
>> Hi Howard,
>> 
>> DSDK v8 or later no longer needs libltkdu.a. The test that should have succeeded
>> and that has not apparently in your case is :
>> 
>>       elif test -e "$with_mrsid/lib/libltidsdk.so" \
>>             -o -e "$with_mrsid/lib/libltidsdk.dylib"; then # v8+ .so has kdu
>>         with_jp2mrsid=yes
>> 
>> But I don't know if there are specific behaviour for the Mac DSDK
> 
> Ok, I'll fix this up.

No fixup was needed. As part of my "installation," I moved the .dylibs into /usr/local/lib but pointed at the leftover MrSID SDK directory for configuration. The dylibs were not found, and the logic of the test couldn't succeed.

Thanks,

Howard

From pcorti at gmail.com  Tue Dec 24 09:48:52 2013
From: pcorti at gmail.com (Paolo Corti)
Date: Tue, 24 Dec 2013 18:48:52 +0100
Subject: [gdal-dev] performance with VRT dataset containing a large number
	of raster datasets
In-Reply-To: <CAHXrU-Jw8z8o_41gFdMgzJ9xZBoWqr5S=B3qyurmf9W029TV0w@mail.gmail.com>
References: <CAHXrU-Jw8z8o_41gFdMgzJ9xZBoWqr5S=B3qyurmf9W029TV0w@mail.gmail.com>
Message-ID: <CAHXrU-+6DgriN-Aki13DkLYu+DN3aOxMGbbyrtvT+DagUkbg2Q@mail.gmail.com>

Hi all

I am experiencing problems using a VRT dataset built from a large directory
of .tif files.

While if a build the VRT from just one of these datasets, gdalwarp will
work very fast with it, if I use the VRT will all of these images, it
becomes undefinite times slower.

Debugging the gdalwarp command, it seems that gdalwarp accesses every
single raster composing the vrt datasource, even if that single raster is
not within the extent defined by the -te gdalwarp option.

Here is the output for a vrt composed by just one single .tif file:

$ time gdalwarp -te -88.88 20.28 -87.88 21.28 single.vrt single.tiff
...
Src=1344,4463,1201x1201 Dst=0,0,1200x1200
0...10...20...30...40...50...60...70...80...90...100 - done.
GDAL: GDALClose(single.vrt, this=0x8ca6ef8)
GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x8ca9aa8)
GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x8ca7208)
GDAL: GDALClose(single.tiff, this=0x8ca7e98)
GDAL: In GDALDestroy - unloading GDAL shared library.

real 0m0.137s
user 0m0.076s
sys 0m0.052s

and here is the output for a vrt composed of all of the .tif files:

capooti at ubuntu:~/training/vrt$ time gdalwarp -te -88.88 20.28 -87.88 21.28
all.vrt all.tiff
...
Src=7344,16464,1201x1201 Dst=0,0,1200x1200
0...10...20...30...40...50...60...70...80...90...100 - done.
GDAL: GDALClose(all.vrt, this=0x9d332b0)
GDAL: GDALClose(/home/capooti/training/vrt/srtm_18_09.tif, this=0x9d46618)
GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x9d467c8)
...
GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_09.tif, this=0x9d4c1b8)
GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_10.tif, this=0x9d4c3a8)
GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x9d30800)
GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_11.tif, this=0x9d4c630)
GDAL: GDALClose(all.tiff, this=0x9d33990)
GDAL: In GDALDestroy - unloading GDAL shared library.

real 61m12.130s
user 0m6.076s
sys 0m18.052s

Any hint here to prevent gdalwarp to access the unneeded source raster
files - the defined extent in -te should just hit a couple of ones?
thanks in advance
p

-- 
Paolo Corti
Geospatial software developer
web: http://www.paolocorti.net
twitter: @capooti
skype: capooti
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131224/3c9ba395/attachment.html>

From bishop.dev at gmail.com  Tue Dec 24 12:22:15 2013
From: bishop.dev at gmail.com (Dmitriy Baryshnikov)
Date: Wed, 25 Dec 2013 00:22:15 +0400
Subject: [gdal-dev] performance with VRT dataset containing a large
 number of raster datasets
In-Reply-To: <CAHXrU-+6DgriN-Aki13DkLYu+DN3aOxMGbbyrtvT+DagUkbg2Q@mail.gmail.com>
References: <CAHXrU-Jw8z8o_41gFdMgzJ9xZBoWqr5S=B3qyurmf9W029TV0w@mail.gmail.com>
	<CAHXrU-+6DgriN-Aki13DkLYu+DN3aOxMGbbyrtvT+DagUkbg2Q@mail.gmail.com>
Message-ID: <52B9ECF7.4030804@gmail.com>

Hi Paolo,
the te option set the output raster size, not the subraster. You have to 
use gdal_translate to get subraster and then use gdalwarp.
Also *multi option is preferable to multi threaded execution.
*

Best regards,
     Dmitry

24.12.2013 21:48, Paolo Corti ?????:
>
> Hi all
>
> I am experiencing problems using a VRT dataset built from a large 
> directory of .tif files.
>
> While if a build the VRT from just one of these datasets, gdalwarp 
> will work very fast with it, if I use the VRT will all of these 
> images, it becomes undefinite times slower.
>
> Debugging the gdalwarp command, it seems that gdalwarp accesses every 
> single raster composing the vrt datasource, even if that single raster 
> is not within the extent defined by the -te gdalwarp option.
>
> Here is the output for a vrt composed by just one single .tif file:
>
> $ time gdalwarp -te -88.88 20.28 -87.88 21.28 single.vrt single.tiff
> ...
> Src=1344,4463,1201x1201 Dst=0,0,1200x1200
> 0...10...20...30...40...50...60...70...80...90...100 - done.
> GDAL: GDALClose(single.vrt, this=0x8ca6ef8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x8ca9aa8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x8ca7208)
> GDAL: GDALClose(single.tiff, this=0x8ca7e98)
> GDAL: In GDALDestroy - unloading GDAL shared library.
>
> real 0m0.137s
> user 0m0.076s
> sys 0m0.052s
>
> and here is the output for a vrt composed of all of the .tif files:
>
> capooti at ubuntu:~/training/vrt$ time gdalwarp -te -88.88 20.28 -87.88 
> 21.28 all.vrt all.tiff
> ...
> Src=7344,16464,1201x1201 Dst=0,0,1200x1200
> 0...10...20...30...40...50...60...70...80...90...100 - done.
> GDAL: GDALClose(all.vrt, this=0x9d332b0)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_18_09.tif, this=0x9d46618)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x9d467c8)
> ...
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_09.tif, this=0x9d4c1b8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_10.tif, this=0x9d4c3a8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x9d30800)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_11.tif, this=0x9d4c630)
> GDAL: GDALClose(all.tiff, this=0x9d33990)
> GDAL: In GDALDestroy - unloading GDAL shared library.
>
> real 61m12.130s
> user 0m6.076s
> sys 0m18.052s
>
> Any hint here to prevent gdalwarp to access the unneeded source raster 
> files - the defined extent in -te should just hit a couple of ones?
> thanks in advance
> p
>
> -- 
> Paolo Corti
> Geospatial software developer
> web: http://www.paolocorti.net
> twitter: @capooti
> skype: capooti
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131225/f985d8a9/attachment.html>

From tmassimi at hotmail.com  Tue Dec 24 14:21:37 2013
From: tmassimi at hotmail.com (Tommaso)
Date: Tue, 24 Dec 2013 22:21:37 +0000
Subject: [gdal-dev] ERROR 6: No translation for an empty SRS
Message-ID: <DUB127-W20749BE84F9B864AD1090DAC00@phx.gbl>

Hi all,

to convert some coordinates from Lambert2 Etendu to WGS84.
I wrote the small python script you can see below.

It works fine on linux (gdal-1.9.2-5) but it doesn't work on win32
(GDAL-1.10.1.win32-py2.7.msi and gdal-110-1500-core.msi,downloaded from 
http://vbkto.dyndns.org/sdk/PackageList.aspx?file=release-1500-gdal-1-10-1-mapserver-6-4-0.zip):

C:\import>python test_coord.py
ERROR 6: No translation for an empty SRS to PROJ.4 format is known.
Traceback (most recent call last):
  File "test_coord.py", line 56, in <module>
    point.Transform(coordTrans)
  File "z:\Programmi\python27\lib\site-packages\osgeo\ogr.py", line 4615, in Transform
    return _ogr.Geometry_Transform(self, *args)
TypeError: in method 'Geometry_Transform', argument 2 of type 'OSRCoordinateTransformationShadow *'

env vars are fine:

C:\import>set gd
GDAL_DATA=c:\programmi\gdal\gdal-data
GDAL_DRIVER_PATH=c:\programmi\gdal\gdalplugins

what can I do to let the script working on windows too?

==========

import sys, os

import ogr
import osr

def getCoord(a,b):
  WGS = osr.SpatialReference()
  WGS.ImportFromEPSG(4326)
  IGNF = osr.SpatialReference()
  IGNF.ImportFromProj4("+init=IGNF:LAMBE +wktext")
  coordTrans = osr.CoordinateTransformation(IGNF,WGS)
  point = ogr.Geometry(ogr.wkbPoint)
  point.AddPoint(a,b)
  point.Transform(coordTrans)
  return point.GetX(), point.GetY()


if __name__ == '__main__':
  print getCoord(602262.89743,2670591.7564)
  print "expected Lat=51.028160, Lon=2.368641"
 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131224/2d0560cd/attachment.html>

From even.rouault at mines-paris.org  Wed Dec 25 07:05:06 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 25 Dec 2013 16:05:06 +0100
Subject: [gdal-dev] performance with VRT dataset containing a large
	number of raster datasets
In-Reply-To: <CAHXrU-+6DgriN-Aki13DkLYu+DN3aOxMGbbyrtvT+DagUkbg2Q@mail.gmail.com>
References: <CAHXrU-Jw8z8o_41gFdMgzJ9xZBoWqr5S=B3qyurmf9W029TV0w@mail.gmail.com>
	<CAHXrU-+6DgriN-Aki13DkLYu+DN3aOxMGbbyrtvT+DagUkbg2Q@mail.gmail.com>
Message-ID: <1387983906.52baf422d8249@imp.free.fr>

Hi,

gdalwarp with a VRT as input dataset should only open the source datasets that
compose the VRT if they intersect the target extent you've specified. Are you
sure that there's only one single tile in your VRT that intersects the target
extent you've specified ?

Could you paste one extract of your all.vrt ?

Even

> Hi all
>
> I am experiencing problems using a VRT dataset built from a large directory
> of .tif files.
>
> While if a build the VRT from just one of these datasets, gdalwarp will
> work very fast with it, if I use the VRT will all of these images, it
> becomes undefinite times slower.
>
> Debugging the gdalwarp command, it seems that gdalwarp accesses every
> single raster composing the vrt datasource, even if that single raster is
> not within the extent defined by the -te gdalwarp option.
>
> Here is the output for a vrt composed by just one single .tif file:
>
> $ time gdalwarp -te -88.88 20.28 -87.88 21.28 single.vrt single.tiff
> ...
> Src=1344,4463,1201x1201 Dst=0,0,1200x1200
> 0...10...20...30...40...50...60...70...80...90...100 - done.
> GDAL: GDALClose(single.vrt, this=0x8ca6ef8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x8ca9aa8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x8ca7208)
> GDAL: GDALClose(single.tiff, this=0x8ca7e98)
> GDAL: In GDALDestroy - unloading GDAL shared library.
>
> real 0m0.137s
> user 0m0.076s
> sys 0m0.052s
>
> and here is the output for a vrt composed of all of the .tif files:
>
> capooti at ubuntu:~/training/vrt$ time gdalwarp -te -88.88 20.28 -87.88 21.28
> all.vrt all.tiff
> ...
> Src=7344,16464,1201x1201 Dst=0,0,1200x1200
> 0...10...20...30...40...50...60...70...80...90...100 - done.
> GDAL: GDALClose(all.vrt, this=0x9d332b0)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_18_09.tif, this=0x9d46618)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x9d467c8)
> ...
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_09.tif, this=0x9d4c1b8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_10.tif, this=0x9d4c3a8)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_19_08.tif, this=0x9d30800)
> GDAL: GDALClose(/home/capooti/training/vrt/srtm_35_11.tif, this=0x9d4c630)
> GDAL: GDALClose(all.tiff, this=0x9d33990)
> GDAL: In GDALDestroy - unloading GDAL shared library.
>
> real 61m12.130s
> user 0m6.076s
> sys 0m18.052s
>
> Any hint here to prevent gdalwarp to access the unneeded source raster
> files - the defined extent in -te should just hit a couple of ones?
> thanks in advance
> p
>
> --
> Paolo Corti
> Geospatial software developer
> web: http://www.paolocorti.net
> twitter: @capooti
> skype: capooti
>



From tmassimi at hotmail.com  Wed Dec 25 09:55:55 2013
From: tmassimi at hotmail.com (Tommaso)
Date: Wed, 25 Dec 2013 17:55:55 +0000
Subject: [gdal-dev] ERROR 6: No translation for an empty SRS
In-Reply-To: <DUB127-W20749BE84F9B864AD1090DAC00@phx.gbl>
References: <DUB127-W20749BE84F9B864AD1090DAC00@phx.gbl>
Message-ID: <DUB127-W551588ACDBB87990F0B3A1DAC30@phx.gbl>

doing some test I see the error is coming from this line

IGNF.ImportFromProj4("+init=IGNF:LAMB2 +wktext")

so it seems that the string is valid for Linux and not 
for windows.

I can't found a list of possible arguments for ImportFromProj4,
can samebody give me some good link?

Thanks in advance


From: tmassimi at hotmail.com
To: gdal-dev at lists.osgeo.org
Date: Tue, 24 Dec 2013 22:21:37 +0000
Subject: [gdal-dev] ERROR 6: No translation for an empty SRS




Hi all,

to convert some coordinates from Lambert2 Etendu to WGS84.
I wrote the small python script you can see below.

It works fine on linux (gdal-1.9.2-5) but it doesn't work on win32
(GDAL-1.10.1.win32-py2.7.msi and gdal-110-1500-core.msi,downloaded from 
http://vbkto.dyndns.org/sdk/PackageList.aspx?file=release-1500-gdal-1-10-1-mapserver-6-4-0.zip):

C:\import>python test_coord.py
ERROR 6: No translation for an empty SRS to PROJ.4 format is known.
Traceback (most recent call last):
  File "test_coord.py", line 56, in <module>
    point.Transform(coordTrans)
  File "z:\Programmi\python27\lib\site-packages\osgeo\ogr.py", line 4615, in Transform
    return _ogr.Geometry_Transform(self, *args)
TypeError: in method 'Geometry_Transform', argument 2 of type 'OSRCoordinateTransformationShadow *'

env vars are fine:

C:\import>set gd
GDAL_DATA=c:\programmi\gdal\gdal-data
GDAL_DRIVER_PATH=c:\programmi\gdal\gdalplugins

what can I do to let the script working on windows too?

==========

import sys, os

import ogr
import osr

def getCoord(a,b):
  WGS = osr.SpatialReference()
  WGS.ImportFromEPSG(4326)
  IGNF = osr.SpatialReference()
  IGNF.ImportFromProj4("+init=IGNF:LAMBE +wktext")
  coordTrans = osr.CoordinateTransformation(IGNF,WGS)
  point = ogr.Geometry(ogr.wkbPoint)
  point.AddPoint(a,b)
  point.Transform(coordTrans)
  return point.GetX(), point.GetY()


if __name__ == '__main__':
  print getCoord(602262.89743,2670591.7564)
  print "expected Lat=51.028160, Lon=2.368641"
 		 	   		  

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131225/902855cb/attachment.html>

From even.rouault at mines-paris.org  Wed Dec 25 10:14:22 2013
From: even.rouault at mines-paris.org (Even Rouault)
Date: Wed, 25 Dec 2013 19:14:22 +0100
Subject: [gdal-dev] ERROR 6: No translation for an empty SRS
In-Reply-To: <DUB127-W551588ACDBB87990F0B3A1DAC30@phx.gbl>
References: <DUB127-W20749BE84F9B864AD1090DAC00@phx.gbl>
	<DUB127-W551588ACDBB87990F0B3A1DAC30@phx.gbl>
Message-ID: <1387995262.52bb207e91065@imp.free.fr>

Selon Tommaso <tmassimi at hotmail.com>:

> doing some test I see the error is coming from this line
>
> IGNF.ImportFromProj4("+init=IGNF:LAMB2 +wktext")
>
> so it seems that the string is valid for Linux and not
> for windows.
>
> I can't found a list of possible arguments for ImportFromProj4,
> can samebody give me some good link?

The issue must be with proj.4 that does not find the 'IGNF' file that is
normally installed with PROJ.4. Try to find it and set the PROJ_LIB
environmenent variable to point to the directory where IGNF is located.
You can also define the PROJ_DEBUG environmenet variable to ON to see debug
messages of proj.

>
> Thanks in advance
>
>
> From: tmassimi at hotmail.com
> To: gdal-dev at lists.osgeo.org
> Date: Tue, 24 Dec 2013 22:21:37 +0000
> Subject: [gdal-dev] ERROR 6: No translation for an empty SRS
>
>
>
>
> Hi all,
>
> to convert some coordinates from Lambert2 Etendu to WGS84.
> I wrote the small python script you can see below.
>
> It works fine on linux (gdal-1.9.2-5) but it doesn't work on win32
> (GDAL-1.10.1.win32-py2.7.msi and gdal-110-1500-core.msi,downloaded from
>
http://vbkto.dyndns.org/sdk/PackageList.aspx?file=release-1500-gdal-1-10-1-mapserver-6-4-0.zip):
>
> C:\import>python test_coord.py
> ERROR 6: No translation for an empty SRS to PROJ.4 format is known.
> Traceback (most recent call last):
>   File "test_coord.py", line 56, in <module>
>     point.Transform(coordTrans)
>   File "z:\Programmi\python27\lib\site-packages\osgeo\ogr.py", line 4615, in
> Transform
>     return _ogr.Geometry_Transform(self, *args)
> TypeError: in method 'Geometry_Transform', argument 2 of type
> 'OSRCoordinateTransformationShadow *'
>
> env vars are fine:
>
> C:\import>set gd
> GDAL_DATA=c:\programmi\gdal\gdal-data
> GDAL_DRIVER_PATH=c:\programmi\gdal\gdalplugins
>
> what can I do to let the script working on windows too?
>
> ==========
>
> import sys, os
>
> import ogr
> import osr
>
> def getCoord(a,b):
>   WGS = osr.SpatialReference()
>   WGS.ImportFromEPSG(4326)
>   IGNF = osr.SpatialReference()
>   IGNF.ImportFromProj4("+init=IGNF:LAMBE +wktext")
>   coordTrans = osr.CoordinateTransformation(IGNF,WGS)
>   point = ogr.Geometry(ogr.wkbPoint)
>   point.AddPoint(a,b)
>   point.Transform(coordTrans)
>   return point.GetX(), point.GetY()
>
>
> if __name__ == '__main__':
>   print getCoord(602262.89743,2670591.7564)
>   print "expected Lat=51.028160, Lon=2.368641"
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev



From tmassimi at hotmail.com  Wed Dec 25 11:50:38 2013
From: tmassimi at hotmail.com (Tommaso)
Date: Wed, 25 Dec 2013 19:50:38 +0000
Subject: [gdal-dev] ERROR 6: No translation for an empty SRS
In-Reply-To: <1387995262.52bb207e91065@imp.free.fr>
References: <DUB127-W20749BE84F9B864AD1090DAC00@phx.gbl>
	<DUB127-W551588ACDBB87990F0B3A1DAC30@phx.gbl>,
	<1387995262.52bb207e91065@imp.free.fr>
Message-ID: <DUB127-W82F89B2535B2E740771C0DDAC30@phx.gbl>

> Date: Wed, 25 Dec 2013 19:14:22 +0100
> From: even.rouault at mines-paris.org
> To: tmassimi at hotmail.com
> CC: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] ERROR 6: No translation for an empty SRS
> 
> Selon Tommaso <tmassimi at hotmail.com>:
> 
> > doing some test I see the error is coming from this line
> >
> > IGNF.ImportFromProj4("+init=IGNF:LAMB2 +wktext")
> >
> > so it seems that the string is valid for Linux and not
> > for windows.
> >
> > I can't found a list of possible arguments for ImportFromProj4,
> > can somebody give me some good link?
> 
> The issue must be with proj.4 that does not find the 'IGNF' file that is
> normally installed with PROJ.4. Try to find it and set the PROJ_LIB
> environmenent variable to point to the directory where IGNF is located.
> You can also define the PROJ_DEBUG environmenet variable to ON to see debug
> messages of proj.

Man, you are my hero!!
your mail is the best Xmas present I had today :)

In my opinion in case of configuration file not found
the library should print the error on console
also if the env var PROJ_DEBUG is not setted,
better if it could also declare the name of the used env var

pj_open_lib(IGNF): call fopen(C:\Program\GDAL\projlib1\IGNF) - failed (hint: check your env var PROJ_LIB)

Thanks again
Tom




 		 	   		  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131225/a3d22e2b/attachment.html>

From amamaslog at gmail.com  Wed Dec 25 18:43:52 2013
From: amamaslog at gmail.com (Avenger Maslog)
Date: Thu, 26 Dec 2013 10:43:52 +0800
Subject: [gdal-dev] Unable to create MApInfo .tab File
Message-ID: <CANmVfhRfoTEMdgjX2yKJU0tLQRkJV1DeNwGRYc43ofPgDhz=xw@mail.gmail.com>

Hi Everyone!

I'm having an issue with creating MapInfo .tab files. I'm trying to
automate the process of creating either .tab or .shp files using the same
set of codes. It works fine when the output specified are shapefiles but
fails with a message: "Failed writing geometry for feature id #" for each
.tab point feature that I was trying to create.The input is dictionary
information and the output comes out as either .shp or .tab depending on
which one was specified. I really hope somebody could point out the reason
why it works with shapefiles but not with tab files. Thanks in advance!

        if fileType == "TAB":
            driver = ogr.GetDriverByName('MapInfo File')

        if fileType == "SHP":
            driver = ogr.GetDriverByName('ESRI Shapefile')

        featureDataSource = driver.CreateDataSource(fileName)

        layerName = "FeatureList"
        featureSpatialRef = osr.SpatialReference()
        featureSpatialRef.ImportFromEPSG(4326)
        featureLayer = featureDataSource.CreateLayer(layerName, srs =
featureSpatialRef, geom_type=ogr.wkbPoint)

        standardFieldsList = []

        standardField = ""

        for attrib in attribList:

            if attrib["FLD_KEY"] == "ATTRIB_NAME":
                standardField = attrib["FLD_VAL"]

            if attrib["FLD_KEY"] == "DATA_TYPE":
                standardField = standardField + "." + attrib["FLD_VAL"]

            if attrib["FLD_KEY"] == "DATA_LEN":
                standardField = standardField + "." + str(attrib["FLD_VAL"])

            if attrib["FLD_KEY"] == "DEF_VAL":
                standardFieldsList.append(standardField)
                standardField = ""

        standardFieldsFileCreator = FileCreator()
        standardFieldsFileCreator.createStandardFields(standardFieldsList,
featureLayer)

        featureObj = ogr.Feature(featureLayer.GetLayerDefn())
        featurePoint = ogr.Geometry(ogr.wkbPoint)

        for feature in featureList:
            for fieldName in feature.keys():
                fieldValue = feature[fieldName]
                featureObj.SetField(str(fieldName), str(fieldValue))

            coords = str(feature["COORDS"])
            coords = coords.strip()[1:-1]
            coords = coords.split(", ")

            featurePoint.AddPoint(float(coords[0]),float(coords[1]))
            featureObj.SetGeometry(featurePoint)

            featureLayer.CreateFeature(featureObj)

        featureDataSource.Destroy()

av
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131226/da334668/attachment.html>

From chaitanya.ch at gmail.com  Fri Dec 27 04:28:48 2013
From: chaitanya.ch at gmail.com (Chaitanya kumar CH)
Date: Fri, 27 Dec 2013 17:58:48 +0530
Subject: [gdal-dev] Unable to create MApInfo .tab File
In-Reply-To: <CANmVfhRfoTEMdgjX2yKJU0tLQRkJV1DeNwGRYc43ofPgDhz=xw@mail.gmail.com>
References: <CANmVfhRfoTEMdgjX2yKJU0tLQRkJV1DeNwGRYc43ofPgDhz=xw@mail.gmail.com>
Message-ID: <CAMKgpOaKCWpUGN-R5HXN0Odw-p5ez=MobA-AHXGUcHgosBC1Cw@mail.gmail.com>

av,

Can you check if ogr2ogr can convert the shapefile to mapinfo?

--
Best regards,
Chaitanya Kumar CH
On Dec 26, 2013 8:14 AM, "Avenger Maslog" <amamaslog at gmail.com> wrote:

> Hi Everyone!
>
> I'm having an issue with creating MapInfo .tab files. I'm trying to
> automate the process of creating either .tab or .shp files using the same
> set of codes. It works fine when the output specified are shapefiles but
> fails with a message: "Failed writing geometry for feature id #" for each
> .tab point feature that I was trying to create.The input is dictionary
> information and the output comes out as either .shp or .tab depending on
> which one was specified. I really hope somebody could point out the reason
> why it works with shapefiles but not with tab files. Thanks in advance!
>
>         if fileType == "TAB":
>             driver = ogr.GetDriverByName('MapInfo File')
>
>         if fileType == "SHP":
>             driver = ogr.GetDriverByName('ESRI Shapefile')
>
>         featureDataSource = driver.CreateDataSource(fileName)
>
>         layerName = "FeatureList"
>         featureSpatialRef = osr.SpatialReference()
>         featureSpatialRef.ImportFromEPSG(4326)
>         featureLayer = featureDataSource.CreateLayer(layerName, srs =
> featureSpatialRef, geom_type=ogr.wkbPoint)
>
>         standardFieldsList = []
>
>         standardField = ""
>
>         for attrib in attribList:
>
>             if attrib["FLD_KEY"] == "ATTRIB_NAME":
>                 standardField = attrib["FLD_VAL"]
>
>             if attrib["FLD_KEY"] == "DATA_TYPE":
>                 standardField = standardField + "." + attrib["FLD_VAL"]
>
>             if attrib["FLD_KEY"] == "DATA_LEN":
>                 standardField = standardField + "." +
> str(attrib["FLD_VAL"])
>
>             if attrib["FLD_KEY"] == "DEF_VAL":
>                 standardFieldsList.append(standardField)
>                 standardField = ""
>
>         standardFieldsFileCreator = FileCreator()
>         standardFieldsFileCreator.createStandardFields(standardFieldsList,
> featureLayer)
>
>         featureObj = ogr.Feature(featureLayer.GetLayerDefn())
>         featurePoint = ogr.Geometry(ogr.wkbPoint)
>
>         for feature in featureList:
>             for fieldName in feature.keys():
>                 fieldValue = feature[fieldName]
>                 featureObj.SetField(str(fieldName), str(fieldValue))
>
>             coords = str(feature["COORDS"])
>             coords = coords.strip()[1:-1]
>             coords = coords.split(", ")
>
>             featurePoint.AddPoint(float(coords[0]),float(coords[1]))
>
>             featureObj.SetGeometry(featurePoint)
>
>             featureLayer.CreateFeature(featureObj)
>
>         featureDataSource.Destroy()
>
> av
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131227/15b016d5/attachment.html>

From yehil at rafael.co.il  Tue Dec 31 04:32:03 2013
From: yehil at rafael.co.il (Livneh Yehiyam)
Date: Tue, 31 Dec 2013 14:32:03 +0200
Subject: [gdal-dev] http://www.gisinternals.com/ down?
Message-ID: <C5D1974ECA44D2429ECBC64B967C34C0D037051571@MAILBOXSERVER.rf.local>


Hi
Is http://www.gisinternals.com/sdk/ down or is it just for me?

Thanks, and happy new year
Yehiyam


________________________________________

This message (including any attachments) issued by RAFAEL- ADVANCED DEFENSE SYSTEMS LTD. (hereinafter "RAFAEL") contains confidential information intended for a specific individual and purpose, may constitute information that is privileged or confidential or otherwise protected from disclosure. If you are not the intended recipient, you should contact us immediately and thereafter delete this message from your system. You are hereby notified that any disclosure, copying, dissemination, distribution or forwarding of this message, or the taking of any action based on it, is strictly prohibited. If you have received this e-mail in error, please notify us immediately by e-mail mailto:lawraf at rafael.co.il and completely delete or destroy any and all electronic or other copies of the original message and any attachments thereof.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20131231/ae766c0d/attachment.html>

From yjacolin at free.fr  Tue Dec 31 04:31:50 2013
From: yjacolin at free.fr (Yves Jacolin)
Date: Tue, 31 Dec 2013 13:31:50 +0100
Subject: [gdal-dev] http://www.gisinternals.com/ down?
In-Reply-To: <C5D1974ECA44D2429ECBC64B967C34C0D037051571@MAILBOXSERVER.rf.local>
References: <C5D1974ECA44D2429ECBC64B967C34C0D037051571@MAILBOXSERVER.rf.local>
Message-ID: <2853803.AtJQbSqqNZ@helios>

Hello,

down for me also!

Y.
Le mardi 31 d?cembre 2013 14:32:03 Livneh Yehiyam a ?crit :
> Hi
> Is http://www.gisinternals.com/sdk/ down or is it just for me?
> 
> Thanks, and happy new year
> Yehiyam
> 
> 
> ________________________________________
> 
> This message (including any attachments) issued by RAFAEL- ADVANCED DEFENSE
> SYSTEMS LTD. (hereinafter "RAFAEL") contains confidential information
> intended for a specific individual and purpose, may constitute information
> that is privileged or confidential or otherwise protected from disclosure.
> If you are not the intended recipient, you should contact us immediately
> and thereafter delete this message from your system. You are hereby
> notified that any disclosure, copying, dissemination, distribution or
> forwarding of this message, or the taking of any action based on it, is
> strictly prohibited. If you have received this e-mail in error, please
> notify us immediately by e-mail mailto:lawraf at rafael.co.il and completely
> delete or destroy any and all electronic or other copies of the original
> message and any attachments thereof.
-- 
Yves Jacolin

