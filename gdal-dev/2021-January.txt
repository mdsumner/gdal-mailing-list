From snori at geovista.in  Fri Jan  1 07:32:10 2021
From: snori at geovista.in (snorimaps)
Date: Fri, 1 Jan 2021 08:32:10 -0700 (MST)
Subject: [gdal-dev] GDAL PDF - Styling options don't work
Message-ID: <1609515130114-0.post@n6.nabble.com>

I'm trying to create a geopdf using gdal_translate. However, the basic
styling options provided by GDAL don't work. viz:

- PEN: dash patterns for Linestrings don't work
- LABEL: angle (a:) option for Points doesn't work, when {angle} needs to be
read from feature
properties (ex: a:{rotation}). Manual angle value entry works (ex: a: 60).

Can anyone help resolve this? Or I would appreciate anyone who had
experienced similar issues to comment on this.



My vst code for reference:
<OGRVRTDataSource>
    <OGRVRTLayer name="ParcelLines">
        <SrcDataSource>parcellines_json.geojson</SrcDataSource>
		<SrcSQL>SELECT *, 'PEN(c:#000000,w:10px)' as OGR_STYLE from
"ParcelLines"</SrcSQL>
        <GeometryType>wkbLineString</GeometryType>
        <LayerSRS>WGS84</LayerSRS>
    </OGRVRTLayer>
	<OGRVRTLayer name="GLines">
        <SrcDataSource>glines_json.geojson</SrcDataSource>
		<SrcSQL>SELECT *, 'PEN(c:#FF0000,w:2px,p:"10mm 15mm")'  as OGR_STYLE from
"GLines"</SrcSQL>
		<GeometryType>wkbLineString</GeometryType>
        <LayerSRS>WGS84</LayerSRS>
    </OGRVRTLayer>	
    <OGRVRTLayer name="Label">
        <SrcDataSource>labels_json.geojson</SrcDataSource>
		<SrcSQL>SELECT *, 'LABEL(c:#000000,s:20px,a:{"lrotationd"},t:{length})' as
OGR_STYLE from "Label"</SrcSQL>
		<GeometryType>wkbPoint</GeometryType>
        <LayerSRS>WGS84</LayerSRS>
    </OGRVRTLayer>
</OGRVRTDataSource>



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From msaupe at web.de  Fri Jan  1 09:04:11 2021
From: msaupe at web.de (Michael Saupe)
Date: Fri, 1 Jan 2021 18:04:11 +0100
Subject: [gdal-dev] ogr2ogr from gpx to postgis - track_fid not maintained
 for track_points
Message-ID: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>

Hello folks,

I am importing multiple gpx files into a postgis database. The tables 'tracks' and 'track_points' are created / updated.

The column track_fid in in the track_points table should be a reference to the track feature id as documented in https://gdal.org/drivers/vector/gpx.html, however it is always zero.?

Is this a bug or am I missing something?


      Details

I am creating an empty database, then create postgis extension with 'CREATE EXTENSION POSTGIS'

I have two simple gpx files ( see attachments )

  * file1.gpx - containing 2 track segments - each with 3 track points
  * file2.gpx - containing 1 track segment? with 3 track points

I am using commands

ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost user=postgres password=xx port=5432" file1.gpx

ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost user=postgres password=xx port=5432" file2.gpx

Resulting data in 'tracks'

ogc_fid 	name 	cmt 	desc 	src 	link1_href 	link1_text 	link1_type 	link2_href 	link2_text 	link2_type 	number 	type 	wkb_geometry
1 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	...
2 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	...

ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	.... other columns omitted ...
1 	0 	0 	0 	1 	NULL 	
2 	0 	0 	1 	1 	NULL 	
3 	0 	0 	2 	1 	NULL 	
4 	0 	1 	0 	2 	NULL 	
5 	0 	1 	1 	2 	NULL 	
6 	0 	1 	2 	2 	NULL 	
7 	0 	0 	0 	3 	NULL 	
8 	0 	0 	1 	3 	NULL 	
9 	0 	0 	2 	3 	NULL 	

Expected:

ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	.... other columns omitted ...
1 	1
	0 	0 	1 	NULL 	
2 	1
	0 	1 	1 	NULL 	
3 	1
	0 	2 	1 	NULL 	
4 	1
	1 	0 	2 	NULL 	
5 	1
	1 	1 	2 	NULL 	
6 	1
	1 	2 	2 	NULL 	
7 	2
	0 	0 	3 	NULL 	
8 	2
	0 	1 	3 	NULL 	
9 	2
	0 	2 	3 	NULL 	

I also tried to omit -update -append, but same result.

Versions:

  * Postgres: "PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 9.3.0) 9.3.0, 64-bit"
  * Postgis: "POSTGIS="3.0.3 0" [EXTENSION] PGSQL="120" GEOS="3.8.1-CAPI-1.13.3" PROJ="7.0.1" LIBXML="2.9.10" LIBJSON="0.14" LIBPROTOBUF="1.3.3" WAGYU="0.4.3 (Internal)""
  * Gdal: 3.2.0

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210101/ad5f393b/attachment.html>

From msaupe at web.de  Fri Jan  1 11:54:36 2021
From: msaupe at web.de (Michael Saupe)
Date: Fri, 1 Jan 2021 20:54:36 +0100
Subject: [gdal-dev] ogr2ogr from gpx to postgis - track_fid not
 maintained for track_points
In-Reply-To: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>
References: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>
Message-ID: <8714a9d0-9382-fd29-1ed4-b4fc9d1bb6be@web.de>

clarification: second table of my points is 'track_points'.

Also adding my 2 gpx files for reference:

*file1.gpx:*

<?xml version="1.0" encoding="UTF-8"?>
<gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
? <metadata>
? </metadata>
? <trk>
??? <trkseg>
????? <trkpt lat="49.250324000" lon="8.687196000">
??????? <ele>1</ele>
????? </trkpt>
????? <trkpt lat="49.250019001" lon="8.687469003">
??????? <ele>1</ele>
????? </trkpt>
????? <trkpt lat="49.249714001" lon="8.687742003">
??????? <ele>1</ele>
????? </trkpt>
??? </trkseg>
??? <trkseg>
????? <trkpt lat="49.125652000" lon="8.714194000">
??????? <ele>2</ele>
????? </trkpt>
????? <trkpt lat="49.125519000" lon="8.714731000">
??????? <ele>2</ele>
????? </trkpt>
????? <trkpt lat="49.125414000" lon="8.715057001">
??????? <ele>2</ele>
????? </trkpt>
??? </trkseg>
? </trk>
</gpx>

*file2.gpx:*

<?xml version="1.0" encoding="UTF-8"?>
<gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
? <metadata>
? </metadata>
? <trk>
??? <trkseg>
????? <trkpt lat="49.11" lon="8.7">
??????? <ele>3</ele>
????? </trkpt>
????? <trkpt lat="49.12" lon="8.7">
??????? <ele>3</ele>
????? </trkpt>
????? <trkpt lat="49.13" lon="8.7">
??????? <ele>3</ele>
????? </trkpt>
??? </trkseg>
? </trk>
</gpx


Am 01.01.2021 um 18:04 schrieb Michael Saupe:
>
> Hello folks,
>
> I am importing multiple gpx files into a postgis database. The tables 'tracks' and 'track_points' are created / updated.
>
> The column track_fid in in the track_points table should be a reference to the track feature id as documented in https://gdal.org/drivers/vector/gpx.html, however it is always zero.?
>
> Is this a bug or am I missing something?
>
>
>       Details
>
> I am creating an empty database, then create postgis extension with 'CREATE EXTENSION POSTGIS'
>
> I have two simple gpx files ( see attachments )
>
>   * file1.gpx - containing 2 track segments - each with 3 track points
>   * file2.gpx - containing 1 track segment? with 3 track points
>
> I am using commands
>
> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost user=postgres password=xx port=5432" file1.gpx
>
> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost user=postgres password=xx port=5432" file2.gpx
>
> Resulting data in 'tracks'
>
> ogc_fid 	name 	cmt 	desc 	src 	link1_href 	link1_text 	link1_type 	link2_href 	link2_text 	link2_type 	number 	type 	wkb_geometry
> 1 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	...
> 2 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	...
>
Resulting data in 'track_points'

ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	.... other columns omitted ...
1 	0 	0 	0 	1 	NULL 	
2 	0 	0 	1 	1 	NULL 	
3 	0 	0 	2 	1 	NULL 	
4 	0 	1 	0 	2 	NULL 	
5 	0 	1 	1 	2 	NULL 	
6 	0 	1 	2 	2 	NULL 	
7 	0 	0 	0 	3 	NULL 	
8 	0 	0 	1 	3 	NULL 	
9 	0 	0 	2 	3 	NULL 	

> Expected:
>
> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	.... other columns omitted ...
> 1 	1
> 	0 	0 	1 	NULL 	
> 2 	1
> 	0 	1 	1 	NULL 	
> 3 	1
> 	0 	2 	1 	NULL 	
> 4 	1
> 	1 	0 	2 	NULL 	
> 5 	1
> 	1 	1 	2 	NULL 	
> 6 	1
> 	1 	2 	2 	NULL 	
> 7 	2
> 	0 	0 	3 	NULL 	
> 8 	2
> 	0 	1 	3 	NULL 	
> 9 	2
> 	0 	2 	3 	NULL 	
>
> I also tried to omit -update -append, but same result.
>
> Versions:
>
>   * Postgres: "PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 9.3.0) 9.3.0, 64-bit"
>   * Postgis: "POSTGIS="3.0.3 0" [EXTENSION] PGSQL="120" GEOS="3.8.1-CAPI-1.13.3" PROJ="7.0.1" LIBXML="2.9.10" LIBJSON="0.14" LIBPROTOBUF="1.3.3" WAGYU="0.4.3 (Internal)""
>   * Gdal: 3.2.0
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210101/dd506fa7/attachment-0001.html>

From stephenwoodbridge37 at gmail.com  Fri Jan  1 13:36:19 2021
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Fri, 1 Jan 2021 16:36:19 -0500
Subject: [gdal-dev] Contour Line Thinning
Message-ID: <96a752e0-60a3-9ee2-cc1a-3640fccf581d@gmail.com>

Hi all,

I'm contouring bathemetry data using gdal_contour and it works really 
great. The problem I have is that when depth falls off rapidly like at 
the continental shelf or into a canyon, I get too many contour lines 
that all bunch up. If I change the contour step size to fix this, then 
the flatter areas don't get enough lines.

I wonder if anyone has any ideas on someway to thin these lines or some 
way to do adaptive contouring based on maybe something like scanning the 
image first to build a masks that represent these rapid changes in depth 
and then change the contour levels in these masked areas.

I currently contour into a postgis database, the render them using 
mapserver into a tile cache since they are static once they are computed.

I would be interested in any ideas you might have on how to tackle this 
problem.

-Steve W

From richard.greenwood at gmail.com  Fri Jan  1 18:47:52 2021
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Fri, 1 Jan 2021 19:47:52 -0700
Subject: [gdal-dev] Contour Line Thinning
In-Reply-To: <96a752e0-60a3-9ee2-cc1a-3640fccf581d@gmail.com>
References: <96a752e0-60a3-9ee2-cc1a-3640fccf581d@gmail.com>
Message-ID: <CAHBySPaQtD2tpAOvhPcAsiC=uqtAFb2iYS-pN07BbWgnzvM82A@mail.gmail.com>

On Fri, Jan 1, 2021 at 2:36 PM Stephen Woodbridge <
stephenwoodbridge37 at gmail.com> wrote:

> Hi all,
>
> I'm contouring bathemetry data using gdal_contour and it works really
> great. The problem I have is that when depth falls off rapidly like at
> the continental shelf or into a canyon, I get too many contour lines
> that all bunch up. If I change the contour step size to fix this, then
> the flatter areas don't get enough lines.
>
> I wonder if anyone has any ideas on someway to thin these lines or some
> way to do adaptive contouring based on maybe something like scanning the
> image first to build a masks that represent these rapid changes in depth
> and then change the contour levels in these masked areas.
>
> I currently contour into a postgis database, the render them using
> mapserver into a tile cache since they are static once they are computed.
>
> I would be interested in any ideas you might have on how to tackle this
> problem.
>
> -Steve W
>
>
Hey Steve,

Interesting problem and this isn't an answer, just my opinion. I live and
play in a mountainous area and frequently use USGS topo maps with contour
intervals of 20, 40 and 80 feet. Each map's contour interval was chosen
with criteria like yours - flatter land needs smaller contour intervals,
but steeper land can become too cluttered with a small contour interval.
But as a map user it drives me crazy when I stitch together adjoining maps
with different intervals and try to get a sense of the landscape. Like this
for example
<https://greenwoodmap.com/tetonwy/mapserver/map#zcr=7.279815109511815/2448564.5062904786/1516712.6778719614/0&lyrs=DRG,Roads,ownership>
where 20 foot contours adjoin 80 foot. The western half of the map is much
steeper than the eastern, but that's not obvious from a quick look. I'd
just let the bunched up contours tell the reader that hey, it's really
steep here!

Best regards,
Rich

-- 
Richard W. Greenwood, PLS
www.greenwoodmap.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210101/4af48172/attachment.html>

From stephenwoodbridge37 at gmail.com  Fri Jan  1 19:09:47 2021
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Fri, 1 Jan 2021 22:09:47 -0500
Subject: [gdal-dev] Contour Line Thinning
In-Reply-To: <CAHBySPaQtD2tpAOvhPcAsiC=uqtAFb2iYS-pN07BbWgnzvM82A@mail.gmail.com>
References: <96a752e0-60a3-9ee2-cc1a-3640fccf581d@gmail.com>
 <CAHBySPaQtD2tpAOvhPcAsiC=uqtAFb2iYS-pN07BbWgnzvM82A@mail.gmail.com>
Message-ID: <39f8b06d-7176-0aff-e06c-faf6e8d11046@gmail.com>

On 1/1/2021 9:47 PM, Richard Greenwood wrote:
> On Fri, Jan 1, 2021 at 2:36 PM Stephen Woodbridge 
> <stephenwoodbridge37 at gmail.com <mailto:stephenwoodbridge37 at gmail.com>> 
> wrote:
>
>     Hi all,
>
>     I'm contouring bathemetry data using gdal_contour and it works really
>     great. The problem I have is that when depth falls off rapidly
>     like at
>     the continental shelf or into a canyon, I get too many contour lines
>     that all bunch up. If I change the contour step size to fix this,
>     then
>     the flatter areas don't get enough lines.
>
>     I wonder if anyone has any ideas on someway to thin these lines or
>     some
>     way to do adaptive contouring based on maybe something like
>     scanning the
>     image first to build a masks that represent these rapid changes in
>     depth
>     and then change the contour levels in these masked areas.
>
>     I currently contour into a postgis database, the render them using
>     mapserver into a tile cache since they are static once they are
>     computed.
>
>     I would be interested in any ideas you might have on how to tackle
>     this
>     problem.
>
>     -Steve W
>
>
> Hey Steve,
>
> Interesting problem and this isn't an answer, just my opinion. I live 
> and play in a mountainous?area and frequently use USGS topo maps with 
> contour intervals of 20, 40 and 80 feet. Each map's contour interval 
> was chosen with criteria like yours - flatter land needs smaller 
> contour intervals, but steeper land can become too cluttered with a 
> small contour interval. But as a map user it drives me crazy when I 
> stitch together?adjoining?maps with different intervals and try to get 
> a sense of the landscape. Like this for example 
> <https://greenwoodmap.com/tetonwy/mapserver/map#zcr=7.279815109511815/2448564.5062904786/1516712.6778719614/0&lyrs=DRG,Roads,ownership> 
> where 20 foot contours adjoin 80 foot. The western half of the map is 
> much steeper than the eastern, but that's not obvious from a quick 
> look. I'd just let the bunched up contours tell the reader that hey, 
> it's really steep here!
>
> Best regards,
> Rich
>
> -- 
> Richard W. Greenwood, PLS
> www.greenwoodmap.com <http://www.greenwoodmap.com>

Hi Rich,

Yeah, I get your point. And the engineer in me agrees but users of the 
map have complained so I have to at least look into the issue.

One thought I had that might work because I'm dealing with ocean bottom 
contours is to do something like:

a) take all contours above X
b) take all contours below Y
c) take every Nth contour between X and Y

This would probably work OK for the drop off on the continental shelf at 
least for the East coast, I'd have to look at other areas since this is 
a global map, but 98% of the users are on the East coast currently but 
that is expanding.

Anyway, it is an interesting problem, I'd like to find a simple solution 
that I can build into the postGIS database where I have all the contour 
lines stored. Or find a solution that handles the generation of the 
contour lines with some kind of adaptive thinning. My guess is that it 
will not be easy to do it at the generation level, so I'll probably only 
be able to do the thinning during the rendering of the tiles.

Thank you for your thoughts on this,
-Steve

From even.rouault at spatialys.com  Sat Jan  2 05:03:18 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 02 Jan 2021 14:03:18 +0100
Subject: [gdal-dev] ogr2ogr from gpx to postgis - track_fid not
 maintained for track_points
In-Reply-To: <8714a9d0-9382-fd29-1ed4-b4fc9d1bb6be@web.de>
References: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>
 <8714a9d0-9382-fd29-1ed4-b4fc9d1bb6be@web.de>
Message-ID: <1649714.pKSNBLYYSO@even-i700>

Michael,

You have a single track in each file, so it is expected that track_fid doesn't 
change and is set at 0 (as there's no attribute to uniquely identify a track)
For what you want to do (that is have distinct track_fid for each file), 
you'll likely have to use an intermediate postgresql schema, where you would 
correct the value of track_fid, before merging them together

Even

> clarification: second table of my points is 'track_points'.
> 
> Also adding my 2 gpx files for reference:
> 
> *file1.gpx:*
> 
> <?xml version="1.0" encoding="UTF-8"?>
> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>   <metadata>
>   </metadata>
>   <trk>
>     <trkseg>
>       <trkpt lat="49.250324000" lon="8.687196000">
>         <ele>1</ele>
>       </trkpt>
>       <trkpt lat="49.250019001" lon="8.687469003">
>         <ele>1</ele>
>       </trkpt>
>       <trkpt lat="49.249714001" lon="8.687742003">
>         <ele>1</ele>
>       </trkpt>
>     </trkseg>
>     <trkseg>
>       <trkpt lat="49.125652000" lon="8.714194000">
>         <ele>2</ele>
>       </trkpt>
>       <trkpt lat="49.125519000" lon="8.714731000">
>         <ele>2</ele>
>       </trkpt>
>       <trkpt lat="49.125414000" lon="8.715057001">
>         <ele>2</ele>
>       </trkpt>
>     </trkseg>
>   </trk>
> </gpx>
> 
> *file2.gpx:*
> 
> <?xml version="1.0" encoding="UTF-8"?>
> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>   <metadata>
>   </metadata>
>   <trk>
>     <trkseg>
>       <trkpt lat="49.11" lon="8.7">
>         <ele>3</ele>
>       </trkpt>
>       <trkpt lat="49.12" lon="8.7">
>         <ele>3</ele>
>       </trkpt>
>       <trkpt lat="49.13" lon="8.7">
>         <ele>3</ele>
>       </trkpt>
>     </trkseg>
>   </trk>
> </gpx
> 
> Am 01.01.2021 um 18:04 schrieb Michael Saupe:
> > Hello folks,
> > 
> > I am importing multiple gpx files into a postgis database. The tables
> > 'tracks' and 'track_points' are created / updated.
> > 
> > The column track_fid in in the track_points table should be a reference to
> > the track feature id as documented in
> > https://gdal.org/drivers/vector/gpx.html, however it is always zero. 
> > 
> > Is this a bug or am I missing something?
> > 
> >       Details
> > 
> > I am creating an empty database, then create postgis extension with
> > 'CREATE EXTENSION POSTGIS'
> > 
> > I have two simple gpx files ( see attachments )
> > 
> >   * file1.gpx - containing 2 track segments - each with 3 track points
> >   * file2.gpx - containing 1 track segment  with 3 track points
> > 
> > I am using commands
> > 
> > ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
> > user=postgres password=xx port=5432" file1.gpx
> > 
> > ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
> > user=postgres password=xx port=5432" file2.gpx
> > 
> > Resulting data in 'tracks'
> > 
> > ogc_fid 	name 	cmt 	desc 	src 	link1_href 	link1_text 	link1_type
> > 	link2_href 	link2_text 	link2_type 	number 	type 	wkb_geometry 1 	
NULL
> > 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	
NULL 	... 2
> > 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	
NULL 	NULL
> > 	...
> Resulting data in 'track_points'
> 
> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	.... 
other
> columns omitted ... 1 	0 	0 	0 	1 	NULL
> 2 	0 	0 	1 	1 	NULL
> 3 	0 	0 	2 	1 	NULL
> 4 	0 	1 	0 	2 	NULL
> 5 	0 	1 	1 	2 	NULL
> 6 	0 	1 	2 	2 	NULL
> 7 	0 	0 	0 	3 	NULL
> 8 	0 	0 	1 	3 	NULL
> 9 	0 	0 	2 	3 	NULL
> 
> > Expected:
> > 
> > ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	....
> > other columns omitted ... 1 	1
> > 
> > 	0 	0 	1 	NULL
> > 
> > 2 	1
> > 
> > 	0 	1 	1 	NULL
> > 
> > 3 	1
> > 
> > 	0 	2 	1 	NULL
> > 
> > 4 	1
> > 
> > 	1 	0 	2 	NULL
> > 
> > 5 	1
> > 
> > 	1 	1 	2 	NULL
> > 
> > 6 	1
> > 
> > 	1 	2 	2 	NULL
> > 
> > 7 	2
> > 
> > 	0 	0 	3 	NULL
> > 
> > 8 	2
> > 
> > 	0 	1 	3 	NULL
> > 
> > 9 	2
> > 
> > 	0 	2 	3 	NULL
> > 
> > I also tried to omit -update -append, but same result.
> > 
> > Versions:
> >   * Postgres: "PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc
> >   (Alpine 9.3.0) 9.3.0, 64-bit" * Postgis: "POSTGIS="3.0.3 0" [EXTENSION]
> >   PGSQL="120" GEOS="3.8.1-CAPI-1.13.3" PROJ="7.0.1" LIBXML="2.9.10"
> >   LIBJSON="0.14" LIBPROTOBUF="1.3.3" WAGYU="0.4.3 (Internal)"" * Gdal:
> >   3.2.0


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at aitchison.me.uk  Sat Jan  2 06:17:57 2021
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Sat, 2 Jan 2021 14:17:57 +0000 (GMT)
Subject: [gdal-dev] Contour Line Thinning
In-Reply-To: <39f8b06d-7176-0aff-e06c-faf6e8d11046@gmail.com>
References: <96a752e0-60a3-9ee2-cc1a-3640fccf581d@gmail.com>
 <CAHBySPaQtD2tpAOvhPcAsiC=uqtAFb2iYS-pN07BbWgnzvM82A@mail.gmail.com>
 <39f8b06d-7176-0aff-e06c-faf6e8d11046@gmail.com>
Message-ID: <9dab2245-d4e8-3e8a-fe22-da592fbb5a53@aitchison.me.uk>

On Fri, 1 Jan 2021, Stephen Woodbridge wrote:

> On 1/1/2021 9:47 PM, Richard Greenwood wrote:
>> On Fri, Jan 1, 2021 at 2:36 PM Stephen Woodbridge 
>> <stephenwoodbridge37 at gmail.com <mailto:stephenwoodbridge37 at gmail.com>> 
>> wrote:
>>
>>     Hi all,
>>
>>     I'm contouring bathemetry data using gdal_contour and it works really
>>     great. The problem I have is that when depth falls off rapidly
>>     like at
>>     the continental shelf or into a canyon, I get too many contour lines
>>     that all bunch up. If I change the contour step size to fix this,
>>     then
>>     the flatter areas don't get enough lines.
>>
>>     I wonder if anyone has any ideas on someway to thin these lines or
>>     some
>>     way to do adaptive contouring based on maybe something like
>>     scanning the
>>     image first to build a masks that represent these rapid changes in
>>     depth
>>     and then change the contour levels in these masked areas.
>>
>>     I currently contour into a postgis database, the render them using
>>     mapserver into a tile cache since they are static once they are
>>     computed.
>>
>>     I would be interested in any ideas you might have on how to tackle
>>     this
>>     problem.
>>
>>     -Steve W
>> 
>> 
>> Hey Steve,
>> 
>> Interesting problem and this isn't an answer, just my opinion. I live and 
>> play in a mountainous?area and frequently use USGS topo maps with contour 
>> intervals of 20, 40 and 80 feet. Each map's contour interval was chosen 
>> with criteria like yours - flatter land needs smaller contour intervals, 
>> but steeper land can become too cluttered with a small contour interval. 
>> But as a map user it drives me crazy when I stitch together?adjoining?maps 
>> with different intervals and try to get a sense of the landscape. Like this 
>> for example 
>> <https://greenwoodmap.com/tetonwy/mapserver/map#zcr=7.279815109511815/2448564.5062904786/1516712.6778719614/0&lyrs=DRG,Roads,ownership> 
>> where 20 foot contours adjoin 80 foot. The western half of the map is much 
>> steeper than the eastern, but that's not obvious from a quick look. I'd 
>> just let the bunched up contours tell the reader that hey, it's really 
>> steep here!
>> 
>> Best regards,
>> Rich
>> 
>> -- 
>> Richard W. Greenwood, PLS
>> www.greenwoodmap.com <http://www.greenwoodmap.com>
>
> Hi Rich,
>
> Yeah, I get your point. And the engineer in me agrees but users of the map 
> have complained so I have to at least look into the issue.

Swisstopo appears to draw the contours until they are very close together, 
then draw *vertical* lines for the steepest sections
https://map.geo.admin.ch/?lang=en&topic=swisstopo&bgLayer=ch.swisstopo.swissimage&E=2643456.18&N=1158412.03&zoom=9&layers=ch.swisstopo.amtliches-strassenverzeichnis,KML%7C%7Chttps:%2F%2Fpublic.geo.admin.ch%2FX-zbcggpRz-GgyBn6mrj2Q,ch.bav.haltestellen-oev,ch.swisstopo.pixelkarte-farbe-pk25.noscale&layers_opacity=0.85,1,1,1&layers_visibility=false,false,true,true&catalogNodes=1396,1397
Of course these maps have the reputation for being hand drawn and the most 
beautiful available anywhere; not sure how you could do something similar
automatically.

(I was going to say that these are expensive maps, but I see that
  they will be available online free of charge from March 2021
  https://www.swisstopo.admin.ch/en/swisstopo/free-geodata.html
)

> One thought I had that might work because I'm dealing with ocean bottom 
> contours is to do something like:
>
> a) take all contours above X
> b) take all contours below Y
> c) take every Nth contour between X and Y
>
> This would probably work OK for the drop off on the continental shelf at 
> least for the East coast, I'd have to look at other areas since this is a 
> global map, but 98% of the users are on the East coast currently but that is 
> expanding.
>
> Anyway, it is an interesting problem, I'd like to find a simple solution that 
> I can build into the postGIS database where I have all the contour lines 
> stored. Or find a solution that handles the generation of the contour lines 
> with some kind of adaptive thinning. My guess is that it will not be easy to 
> do it at the generation level, so I'll probably only be able to do the 
> thinning during the rendering of the tiles.
>
> Thank you for your thoughts on this,
> -Steve
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From even.rouault at spatialys.com  Sat Jan  2 06:41:10 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 02 Jan 2021 15:41:10 +0100
Subject: [gdal-dev] Contour Line Thinning
In-Reply-To: <39f8b06d-7176-0aff-e06c-faf6e8d11046@gmail.com>
References: <96a752e0-60a3-9ee2-cc1a-3640fccf581d@gmail.com>
 <CAHBySPaQtD2tpAOvhPcAsiC=uqtAFb2iYS-pN07BbWgnzvM82A@mail.gmail.com>
 <39f8b06d-7176-0aff-e06c-faf6e8d11046@gmail.com>
Message-ID: <1696157.4UKMG00TkM@even-i700>

On vendredi 1 janvier 2021 22:09:47 CET Stephen Woodbridge wrote:
> On 1/1/2021 9:47 PM, Richard Greenwood wrote:
> > On Fri, Jan 1, 2021 at 2:36 PM Stephen Woodbridge
> > <stephenwoodbridge37 at gmail.com <mailto:stephenwoodbridge37 at gmail.com>>
> > 
> > wrote:
> >     Hi all,
> >     
> >     I'm contouring bathemetry data using gdal_contour and it works really
> >     great. The problem I have is that when depth falls off rapidly
> >     like at
> >     the continental shelf or into a canyon, I get too many contour lines
> >     that all bunch up. If I change the contour step size to fix this,
> >     then
> >     the flatter areas don't get enough lines.
> >     
> >     I wonder if anyone has any ideas on someway to thin these lines or
> >     some
> >     way to do adaptive contouring based on maybe something like
> >     scanning the
> >     image first to build a masks that represent these rapid changes in
> >     depth
> >     and then change the contour levels in these masked areas.
> >     
> >     I currently contour into a postgis database, the render them using
> >     mapserver into a tile cache since they are static once they are
> >     computed.
> >     
> >     I would be interested in any ideas you might have on how to tackle
> >     this
> >     problem.
> >     
> >     -Steve W
> > 
> > Hey Steve,
> > 
> > Interesting problem and this isn't an answer, just my opinion. I live
> > and play in a mountainous area and frequently use USGS topo maps with
> > contour intervals of 20, 40 and 80 feet. Each map's contour interval
> > was chosen with criteria like yours - flatter land needs smaller
> > contour intervals, but steeper land can become too cluttered with a
> > small contour interval. But as a map user it drives me crazy when I
> > stitch together adjoining maps with different intervals and try to get
> > a sense of the landscape. Like this for example
> > <https://greenwoodmap.com/tetonwy/mapserver/map#zcr=7.279815109511815/2448
> > 564.5062904786/1516712.6778719614/0&lyrs=DRG,Roads,ownership> where 20
> > foot contours adjoin 80 foot. The western half of the map is much steeper
> > than the eastern, but that's not obvious from a quick look. I'd just let
> > the bunched up contours tell the reader that hey, it's really steep here!
> > 
> > Best regards,
> > Rich
> 
> Hi Rich,
> 
> Yeah, I get your point. And the engineer in me agrees but users of the
> map have complained so I have to at least look into the issue.
> 
> One thought I had that might work because I'm dealing with ocean bottom
> contours is to do something like:
> 
> a) take all contours above X
> b) take all contours below Y
> c) take every Nth contour between X and Y
> 
> This would probably work OK for the drop off on the continental shelf at
> least for the East coast, I'd have to look at other areas since this is
> a global map, but 98% of the users are on the East coast currently but
> that is expanding.
> 
> Anyway, it is an interesting problem, I'd like to find a simple solution
> that I can build into the postGIS database where I have all the contour
> lines stored. Or find a solution that handles the generation of the
> contour lines with some kind of adaptive thinning. My guess is that it
> will not be easy to do it at the generation level, so I'll probably only
> be able to do the thinning during the rendering of the tiles.

A potential approach would be to use a ST_Buffer() on the generated lines, 
let's say, with 10m interval that are not multiple of 50 or 100 and see if 
they intersect other lines to eliminate them. You might need to do that on 
small bounding boxes to avoid evicting lines in areas where the density is 
low.

The GDAL countour generator could potentially be modified as well to avoid 
generating too many lines. For example if the difference between 2 adjacent 
nodes would be >= 100 m, it would only generate a level multiple of 50 m (the 
setting could be a limitation to the number of contours per raster cell). That 
could be done without performance impact. That wouldn't work if the resolution 
of the terrain is too high and that the difference of elevation between 
consecutive node is not big enough in average to generate a contour line. 
Perhaps a criterion based on slope rather than the number of contour per 
raster cell would work better.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From msaupe at web.de  Sat Jan  2 06:59:23 2021
From: msaupe at web.de (Michael Saupe)
Date: Sat, 2 Jan 2021 15:59:23 +0100
Subject: [gdal-dev] ogr2ogr from gpx to postgis - track_fid not
 maintained for track_points
In-Reply-To: <1649714.pKSNBLYYSO@even-i700>
References: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>
 <8714a9d0-9382-fd29-1ed4-b4fc9d1bb6be@web.de> <1649714.pKSNBLYYSO@even-i700>
Message-ID: <b593d301-eea8-70e2-11dd-e12bf630caae@web.de>

Hi Evan,

thank you for the explanation. That makes sense. However, in my opinion ogr2ogr behavior is not really consistent in this case: The column ogc_fid , which is in fact the track id, is incremented on each gpx file import ( regardless if you use -update -append? or not ).

Michael

Am 02.01.2021 um 14:03 schrieb Even Rouault:
> Michael,
>
> You have a single track in each file, so it is expected that track_fid doesn't 
> change and is set at 0 (as there's no attribute to uniquely identify a track)
> For what you want to do (that is have distinct track_fid for each file), 
> you'll likely have to use an intermediate postgresql schema, where you would 
> correct the value of track_fid, before merging them together
>
> Even
>
>> clarification: second table of my points is 'track_points'.
>>
>> Also adding my 2 gpx files for reference:
>>
>> *file1.gpx:*
>>
>> <?xml version="1.0" encoding="UTF-8"?>
>> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>>   <metadata>
>>   </metadata>
>>   <trk>
>>     <trkseg>
>>       <trkpt lat="49.250324000" lon="8.687196000">
>>         <ele>1</ele>
>>       </trkpt>
>>       <trkpt lat="49.250019001" lon="8.687469003">
>>         <ele>1</ele>
>>       </trkpt>
>>       <trkpt lat="49.249714001" lon="8.687742003">
>>         <ele>1</ele>
>>       </trkpt>
>>     </trkseg>
>>     <trkseg>
>>       <trkpt lat="49.125652000" lon="8.714194000">
>>         <ele>2</ele>
>>       </trkpt>
>>       <trkpt lat="49.125519000" lon="8.714731000">
>>         <ele>2</ele>
>>       </trkpt>
>>       <trkpt lat="49.125414000" lon="8.715057001">
>>         <ele>2</ele>
>>       </trkpt>
>>     </trkseg>
>>   </trk>
>> </gpx>
>>
>> *file2.gpx:*
>>
>> <?xml version="1.0" encoding="UTF-8"?>
>> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>>   <metadata>
>>   </metadata>
>>   <trk>
>>     <trkseg>
>>       <trkpt lat="49.11" lon="8.7">
>>         <ele>3</ele>
>>       </trkpt>
>>       <trkpt lat="49.12" lon="8.7">
>>         <ele>3</ele>
>>       </trkpt>
>>       <trkpt lat="49.13" lon="8.7">
>>         <ele>3</ele>
>>       </trkpt>
>>     </trkseg>
>>   </trk>
>> </gpx
>>
>> Am 01.01.2021 um 18:04 schrieb Michael Saupe:
>>> Hello folks,
>>>
>>> I am importing multiple gpx files into a postgis database. The tables
>>> 'tracks' and 'track_points' are created / updated.
>>>
>>> The column track_fid in in the track_points table should be a reference to
>>> the track feature id as documented in
>>> https://gdal.org/drivers/vector/gpx.html, however it is always zero. 
>>>
>>> Is this a bug or am I missing something?
>>>
>>>       Details
>>>
>>> I am creating an empty database, then create postgis extension with
>>> 'CREATE EXTENSION POSTGIS'
>>>
>>> I have two simple gpx files ( see attachments )
>>>
>>>   * file1.gpx - containing 2 track segments - each with 3 track points
>>>   * file2.gpx - containing 1 track segment  with 3 track points
>>>
>>> I am using commands
>>>
>>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
>>> user=postgres password=xx port=5432" file1.gpx
>>>
>>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
>>> user=postgres password=xx port=5432" file2.gpx
>>>
>>> Resulting data in 'tracks'
>>>
>>> ogc_fid 	name 	cmt 	desc 	src 	link1_href 	link1_text 	link1_type
>>> 	link2_href 	link2_text 	link2_type 	number 	type 	wkb_geometry 1 	
> NULL
>>> 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	
> NULL 	... 2
>>> 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	
> NULL 	NULL
>>> 	...
>> Resulting data in 'track_points'
>>
>> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	.... 
> other
>> columns omitted ... 1 	0 	0 	0 	1 	NULL
>> 2 	0 	0 	1 	1 	NULL
>> 3 	0 	0 	2 	1 	NULL
>> 4 	0 	1 	0 	2 	NULL
>> 5 	0 	1 	1 	2 	NULL
>> 6 	0 	1 	2 	2 	NULL
>> 7 	0 	0 	0 	3 	NULL
>> 8 	0 	0 	1 	3 	NULL
>> 9 	0 	0 	2 	3 	NULL
>>
>>> Expected:
>>>
>>> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	....
>>> other columns omitted ... 1 	1
>>>
>>> 	0 	0 	1 	NULL
>>>
>>> 2 	1
>>>
>>> 	0 	1 	1 	NULL
>>>
>>> 3 	1
>>>
>>> 	0 	2 	1 	NULL
>>>
>>> 4 	1
>>>
>>> 	1 	0 	2 	NULL
>>>
>>> 5 	1
>>>
>>> 	1 	1 	2 	NULL
>>>
>>> 6 	1
>>>
>>> 	1 	2 	2 	NULL
>>>
>>> 7 	2
>>>
>>> 	0 	0 	3 	NULL
>>>
>>> 8 	2
>>>
>>> 	0 	1 	3 	NULL
>>>
>>> 9 	2
>>>
>>> 	0 	2 	3 	NULL
>>>
>>> I also tried to omit -update -append, but same result.
>>>
>>> Versions:
>>>   * Postgres: "PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc
>>>   (Alpine 9.3.0) 9.3.0, 64-bit" * Postgis: "POSTGIS="3.0.3 0" [EXTENSION]
>>>   PGSQL="120" GEOS="3.8.1-CAPI-1.13.3" PROJ="7.0.1" LIBXML="2.9.10"
>>>   LIBJSON="0.14" LIBPROTOBUF="1.3.3" WAGYU="0.4.3 (Internal)"" * Gdal:
>>>   3.2.0
>


From msaupe at web.de  Sat Jan  2 07:01:27 2021
From: msaupe at web.de (Michael Saupe)
Date: Sat, 2 Jan 2021 16:01:27 +0100
Subject: [gdal-dev] ogr2ogr from gpx to postgis - track_fid not
 maintained for track_points
In-Reply-To: <b593d301-eea8-70e2-11dd-e12bf630caae@web.de>
References: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>
 <8714a9d0-9382-fd29-1ed4-b4fc9d1bb6be@web.de> <1649714.pKSNBLYYSO@even-i700>
 <b593d301-eea8-70e2-11dd-e12bf630caae@web.de>
Message-ID: <0e3f531c-7e6f-95fe-4a93-f7fd2e285682@web.de>

I am referring to ogc_fid of 'tracks' table.


Am 02.01.2021 um 15:59 schrieb Michael Saupe:
> Hi Evan,
>
> thank you for the explanation. That makes sense. However, in my opinion ogr2ogr behavior is not really consistent in this case: The column ogc_fid , which is in fact the track id, is incremented on each gpx file import ( regardless if you use -update -append? or not ).
>
> Michael
>
> Am 02.01.2021 um 14:03 schrieb Even Rouault:
>> Michael,
>>
>> You have a single track in each file, so it is expected that track_fid doesn't
>> change and is set at 0 (as there's no attribute to uniquely identify a track)
>> For what you want to do (that is have distinct track_fid for each file),
>> you'll likely have to use an intermediate postgresql schema, where you would
>> correct the value of track_fid, before merging them together
>>
>> Even
>>
>>> clarification: second table of my points is 'track_points'.
>>>
>>> Also adding my 2 gpx files for reference:
>>>
>>> *file1.gpx:*
>>>
>>> <?xml version="1.0" encoding="UTF-8"?>
>>> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>>>   <metadata>
>>>   </metadata>
>>>   <trk>
>>>     <trkseg>
>>>       <trkpt lat="49.250324000" lon="8.687196000">
>>>         <ele>1</ele>
>>>       </trkpt>
>>>       <trkpt lat="49.250019001" lon="8.687469003">
>>>         <ele>1</ele>
>>>       </trkpt>
>>>       <trkpt lat="49.249714001" lon="8.687742003">
>>>         <ele>1</ele>
>>>       </trkpt>
>>>     </trkseg>
>>>     <trkseg>
>>>       <trkpt lat="49.125652000" lon="8.714194000">
>>>         <ele>2</ele>
>>>       </trkpt>
>>>       <trkpt lat="49.125519000" lon="8.714731000">
>>>         <ele>2</ele>
>>>       </trkpt>
>>>       <trkpt lat="49.125414000" lon="8.715057001">
>>>         <ele>2</ele>
>>>       </trkpt>
>>>     </trkseg>
>>>   </trk>
>>> </gpx>
>>>
>>> *file2.gpx:*
>>>
>>> <?xml version="1.0" encoding="UTF-8"?>
>>> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>>>   <metadata>
>>>   </metadata>
>>>   <trk>
>>>     <trkseg>
>>>       <trkpt lat="49.11" lon="8.7">
>>>         <ele>3</ele>
>>>       </trkpt>
>>>       <trkpt lat="49.12" lon="8.7">
>>>         <ele>3</ele>
>>>       </trkpt>
>>>       <trkpt lat="49.13" lon="8.7">
>>>         <ele>3</ele>
>>>       </trkpt>
>>>     </trkseg>
>>>   </trk>
>>> </gpx
>>>
>>> Am 01.01.2021 um 18:04 schrieb Michael Saupe:
>>>> Hello folks,
>>>>
>>>> I am importing multiple gpx files into a postgis database. The tables
>>>> 'tracks' and 'track_points' are created / updated.
>>>>
>>>> The column track_fid in in the track_points table should be a reference to
>>>> the track feature id as documented in
>>>> https://gdal.org/drivers/vector/gpx.html, however it is always zero.
>>>>
>>>> Is this a bug or am I missing something?
>>>>
>>>>       Details
>>>>
>>>> I am creating an empty database, then create postgis extension with
>>>> 'CREATE EXTENSION POSTGIS'
>>>>
>>>> I have two simple gpx files ( see attachments )
>>>>
>>>>   * file1.gpx - containing 2 track segments - each with 3 track points
>>>>   * file2.gpx - containing 1 track segment  with 3 track points
>>>>
>>>> I am using commands
>>>>
>>>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
>>>> user=postgres password=xx port=5432" file1.gpx
>>>>
>>>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
>>>> user=postgres password=xx port=5432" file2.gpx
>>>>
>>>> Resulting data in 'tracks'
>>>>
>>>> ogc_fid 	name 	cmt 	desc 	src 	link1_href 	link1_text 	link1_type
>>>> 	link2_href 	link2_text 	link2_type 	number 	type 	wkb_geometry 1
>> NULL
>>>> 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL
>> NULL 	... 2
>>>> 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL
>> NULL 	NULL
>>>> 	...
>>> Resulting data in 'track_points'
>>>
>>> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	....
>> other
>>> columns omitted ... 1 	0 	0 	0 	1 	NULL
>>> 2 	0 	0 	1 	1 	NULL
>>> 3 	0 	0 	2 	1 	NULL
>>> 4 	0 	1 	0 	2 	NULL
>>> 5 	0 	1 	1 	2 	NULL
>>> 6 	0 	1 	2 	2 	NULL
>>> 7 	0 	0 	0 	3 	NULL
>>> 8 	0 	0 	1 	3 	NULL
>>> 9 	0 	0 	2 	3 	NULL
>>>
>>>> Expected:
>>>>
>>>> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	....
>>>> other columns omitted ... 1 	1
>>>>
>>>> 	0 	0 	1 	NULL
>>>>
>>>> 2 	1
>>>>
>>>> 	0 	1 	1 	NULL
>>>>
>>>> 3 	1
>>>>
>>>> 	0 	2 	1 	NULL
>>>>
>>>> 4 	1
>>>>
>>>> 	1 	0 	2 	NULL
>>>>
>>>> 5 	1
>>>>
>>>> 	1 	1 	2 	NULL
>>>>
>>>> 6 	1
>>>>
>>>> 	1 	2 	2 	NULL
>>>>
>>>> 7 	2
>>>>
>>>> 	0 	0 	3 	NULL
>>>>
>>>> 8 	2
>>>>
>>>> 	0 	1 	3 	NULL
>>>>
>>>> 9 	2
>>>>
>>>> 	0 	2 	3 	NULL
>>>>
>>>> I also tried to omit -update -append, but same result.
>>>>
>>>> Versions:
>>>>   * Postgres: "PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc
>>>>   (Alpine 9.3.0) 9.3.0, 64-bit" * Postgis: "POSTGIS="3.0.3 0" [EXTENSION]
>>>>   PGSQL="120" GEOS="3.8.1-CAPI-1.13.3" PROJ="7.0.1" LIBXML="2.9.10"
>>>>   LIBJSON="0.14" LIBPROTOBUF="1.3.3" WAGYU="0.4.3 (Internal)"" * Gdal:
>>>>   3.2.0
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From gdal at stripfamily.net  Sat Jan  2 07:57:35 2021
From: gdal at stripfamily.net (David Strip)
Date: Sat, 2 Jan 2021 08:57:35 -0700
Subject: [gdal-dev] Contour Line Thinning
In-Reply-To: <9dab2245-d4e8-3e8a-fe22-da592fbb5a53@aitchison.me.uk>
References: <96a752e0-60a3-9ee2-cc1a-3640fccf581d@gmail.com>
 <CAHBySPaQtD2tpAOvhPcAsiC=uqtAFb2iYS-pN07BbWgnzvM82A@mail.gmail.com>
 <39f8b06d-7176-0aff-e06c-faf6e8d11046@gmail.com>
 <9dab2245-d4e8-3e8a-fe22-da592fbb5a53@aitchison.me.uk>
Message-ID: <09503bf5-c4f1-2de3-dfd8-65e7a8bf9e3e@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210102/1e81c6bf/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Sat Jan  2 13:19:26 2021
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Sat, 2 Jan 2021 14:19:26 -0700 (MST)
Subject: [gdal-dev] ogr2ogr from gpx to postgis - track_fid not
 maintained for track_points
In-Reply-To: <b593d301-eea8-70e2-11dd-e12bf630caae@web.de>
References: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>
 <8714a9d0-9382-fd29-1ed4-b4fc9d1bb6be@web.de> <1649714.pKSNBLYYSO@even-i700>
 <b593d301-eea8-70e2-11dd-e12bf630caae@web.de>
Message-ID: <1609622366624-0.post@n6.nabble.com>

Hi,

For my mind the behavior is consistent. FID (in this case named as ogc_fid)
is a unique feature ID and tracks table contains tracks so it is natural
that FID is increasing when more tracks are added - and it must increase or
otherwise the FID is not unique. The track_points table contains points and
FID is unique for each point. If you add more track points the ogc_fid will
increase from the maximum existing ogc_fid value. The track id in the
track_points column in just a normal attribute and it is read directly from
the GPX data.

-Jukka Rahkonen-


Michael Saupe-2 wrote
> Hi Evan,
> 
> thank you for the explanation. That makes sense. However, in my opinion
> ogr2ogr behavior is not really consistent in this case: The column ogc_fid
> , which is in fact the track id, is incremented on each gpx file import (
> regardless if you use -update -append? or not ).
> 
> Michael
> 
> Am 02.01.2021 um 14:03 schrieb Even Rouault:
>> Michael,
>>
>> You have a single track in each file, so it is expected that track_fid
>> doesn't 
>> change and is set at 0 (as there's no attribute to uniquely identify a
>> track)
>> For what you want to do (that is have distinct track_fid for each file), 
>> you'll likely have to use an intermediate postgresql schema, where you
>> would 
>> correct the value of track_fid, before merging them together
>>
>> Even
>>
>>> clarification: second table of my points is 'track_points'.
>>>
>>> Also adding my 2 gpx files for reference:
>>>
>>> *file1.gpx:*
>>>
>>> <?xml version="1.0" encoding="UTF-8"?>
>>> 
> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>>>   
> <metadata>
>>>   
> </metadata>
>>>   
> <trk>
>>>     
> <trkseg>
>>>       
> <trkpt lat="49.250324000" lon="8.687196000">
>>>         
> <ele>
> 1
> </ele>
>>>       
> </trkpt>
>>>       
> <trkpt lat="49.250019001" lon="8.687469003">
>>>         
> <ele>
> 1
> </ele>
>>>       
> </trkpt>
>>>       
> <trkpt lat="49.249714001" lon="8.687742003">
>>>         
> <ele>
> 1
> </ele>
>>>       
> </trkpt>
>>>     
> </trkseg>
>>>     
> <trkseg>
>>>       
> <trkpt lat="49.125652000" lon="8.714194000">
>>>         
> <ele>
> 2
> </ele>
>>>       
> </trkpt>
>>>       
> <trkpt lat="49.125519000" lon="8.714731000">
>>>         
> <ele>
> 2
> </ele>
>>>       
> </trkpt>
>>>       
> <trkpt lat="49.125414000" lon="8.715057001">
>>>         
> <ele>
> 2
> </ele>
>>>       
> </trkpt>
>>>     
> </trkseg>
>>>   
> </trk>
>>> 
> </gpx>
>>>
>>> *file2.gpx:*
>>>
>>> <?xml version="1.0" encoding="UTF-8"?>
>>> 
> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
>>>   
> <metadata>
>>>   
> </metadata>
>>>   
> <trk>
>>>     
> <trkseg>
>>>       
> <trkpt lat="49.11" lon="8.7">
>>>         
> <ele>
> 3
> </ele>
>>>       
> </trkpt>
>>>       
> <trkpt lat="49.12" lon="8.7">
>>>         
> <ele>
> 3
> </ele>
>>>       
> </trkpt>
>>>       
> <trkpt lat="49.13" lon="8.7">
>>>         
> <ele>
> 3
> </ele>
>>>       
> </trkpt>
>>>     
> </trkseg>
>>>   
> </trk>
>>> 
> </gpx
>>
>>
>>> Am 01.01.2021 um 18:04 schrieb Michael Saupe:
>>>> Hello folks,
>>>>
>>>> I am importing multiple gpx files into a postgis database. The tables
>>>> 'tracks' and 'track_points' are created / updated.
>>>>
>>>> The column track_fid in in the track_points table should be a reference
>>>> to
>>>> the track feature id as documented in
>>>> https://gdal.org/drivers/vector/gpx.html, however it is always zero. 
>>>>
>>>> Is this a bug or am I missing something?
>>>>
>>>>       Details
>>>>
>>>> I am creating an empty database, then create postgis extension with
>>>> 'CREATE EXTENSION POSTGIS'
>>>>
>>>> I have two simple gpx files ( see attachments )
>>>>
>>>>   * file1.gpx - containing 2 track segments - each with 3 track points
>>>>   * file2.gpx - containing 1 track segment  with 3 track points
>>>>
>>>> I am using commands
>>>>
>>>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
>>>> user=postgres password=xx port=5432" file1.gpx
>>>>
>>>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
>>>> user=postgres password=xx port=5432" file2.gpx
>>>>
>>>> Resulting data in 'tracks'
>>>>
>>>> ogc_fid 	name 	cmt 	desc 	src 	link1_href 	link1_text 	link1_type
>>>> 	link2_href 	link2_text 	link2_type 	number 	type 	wkb_geometry 1 	
>> NULL
>>>> 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	
>> NULL 	... 2
>>>> 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	NULL 	
>> NULL 	NULL
>>>> 	...
>>> Resulting data in 'track_points'
>>>
>>> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	.... 
>> other
>>> columns omitted ... 1 	0 	0 	0 	1 	NULL
>>> 2 	0 	0 	1 	1 	NULL
>>> 3 	0 	0 	2 	1 	NULL
>>> 4 	0 	1 	0 	2 	NULL
>>> 5 	0 	1 	1 	2 	NULL
>>> 6 	0 	1 	2 	2 	NULL
>>> 7 	0 	0 	0 	3 	NULL
>>> 8 	0 	0 	1 	3 	NULL
>>> 9 	0 	0 	2 	3 	NULL
>>>
>>>> Expected:
>>>>
>>>> ogc_fid 	track_fid 	track_seg_id 	track_seg_point_id 	ele 	time 	....
>>>> other columns omitted ... 1 	1
>>>>
>>>> 	0 	0 	1 	NULL
>>>>
>>>> 2 	1
>>>>
>>>> 	0 	1 	1 	NULL
>>>>
>>>> 3 	1
>>>>
>>>> 	0 	2 	1 	NULL
>>>>
>>>> 4 	1
>>>>
>>>> 	1 	0 	2 	NULL
>>>>
>>>> 5 	1
>>>>
>>>> 	1 	1 	2 	NULL
>>>>
>>>> 6 	1
>>>>
>>>> 	1 	2 	2 	NULL
>>>>
>>>> 7 	2
>>>>
>>>> 	0 	0 	3 	NULL
>>>>
>>>> 8 	2
>>>>
>>>> 	0 	1 	3 	NULL
>>>>
>>>> 9 	2
>>>>
>>>> 	0 	2 	3 	NULL
>>>>
>>>> I also tried to omit -update -append, but same result.
>>>>
>>>> Versions:
>>>>   * Postgres: "PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc
>>>>   (Alpine 9.3.0) 9.3.0, 64-bit" * Postgis: "POSTGIS="3.0.3 0"
>>>> [EXTENSION]
>>>>   PGSQL="120" GEOS="3.8.1-CAPI-1.13.3" PROJ="7.0.1" LIBXML="2.9.10"
>>>>   LIBJSON="0.14" LIBPROTOBUF="1.3.3" WAGYU="0.4.3 (Internal)"" * Gdal:
>>>>   3.2.0
>>
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From richard.greenwood at gmail.com  Sat Jan  2 17:21:44 2021
From: richard.greenwood at gmail.com (Richard Greenwood)
Date: Sat, 2 Jan 2021 18:21:44 -0700
Subject: [gdal-dev] ogr2ogr from gpx to postgis - track_fid not
 maintained for track_points
In-Reply-To: <b593d301-eea8-70e2-11dd-e12bf630caae@web.de>
References: <53d70791-f882-3252-3ddf-ec51dd23144f@web.de>
 <8714a9d0-9382-fd29-1ed4-b4fc9d1bb6be@web.de>
 <1649714.pKSNBLYYSO@even-i700> <b593d301-eea8-70e2-11dd-e12bf630caae@web.de>
Message-ID: <CAHBySPatKsUis+okrZ4pTMQFEAmEV=S9pbf4QXWdCao5wnHOeQ@mail.gmail.com>

On Sat, Jan 2, 2021 at 7:59 AM Michael Saupe <msaupe at web.de> wrote:

> Hi Evan,
>
> thank you for the explanation. That makes sense. However, in my opinion
> ogr2ogr behavior is not really consistent in this case: The column ogc_fid
> , which is in fact the track id, is incremented on each gpx file import (
> regardless if you use -update -append  or not ).
>
>
The ogc_fid is a primary key column created by ogr2ogr. Its values come
from a postgres sequence named TABLE_NAME_ogc_fid_seq. You can see this by
looking at your table definition, for example in pgAdmin in the "SQL" tab.
The ogc_fid is not the track id but might appear to be since it starts at 0.

Rich


>
> Am 02.01.2021 um 14:03 schrieb Even Rouault:
> > Michael,
> >
> > You have a single track in each file, so it is expected that track_fid
> doesn't
> > change and is set at 0 (as there's no attribute to uniquely identify a
> track)
> > For what you want to do (that is have distinct track_fid for each file),
> > you'll likely have to use an intermediate postgresql schema, where you
> would
> > correct the value of track_fid, before merging them together
> >
> > Even
> >
> >> clarification: second table of my points is 'track_points'.
> >>
> >> Also adding my 2 gpx files for reference:
> >>
> >> *file1.gpx:*
> >>
> >> <?xml version="1.0" encoding="UTF-8"?>
> >> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
> >>   <metadata>
> >>   </metadata>
> >>   <trk>
> >>     <trkseg>
> >>       <trkpt lat="49.250324000" lon="8.687196000">
> >>         <ele>1</ele>
> >>       </trkpt>
> >>       <trkpt lat="49.250019001" lon="8.687469003">
> >>         <ele>1</ele>
> >>       </trkpt>
> >>       <trkpt lat="49.249714001" lon="8.687742003">
> >>         <ele>1</ele>
> >>       </trkpt>
> >>     </trkseg>
> >>     <trkseg>
> >>       <trkpt lat="49.125652000" lon="8.714194000">
> >>         <ele>2</ele>
> >>       </trkpt>
> >>       <trkpt lat="49.125519000" lon="8.714731000">
> >>         <ele>2</ele>
> >>       </trkpt>
> >>       <trkpt lat="49.125414000" lon="8.715057001">
> >>         <ele>2</ele>
> >>       </trkpt>
> >>     </trkseg>
> >>   </trk>
> >> </gpx>
> >>
> >> *file2.gpx:*
> >>
> >> <?xml version="1.0" encoding="UTF-8"?>
> >> <gpx version="1.1" xmlns="http://www.topografix.com/GPX/1/1">
> >>   <metadata>
> >>   </metadata>
> >>   <trk>
> >>     <trkseg>
> >>       <trkpt lat="49.11" lon="8.7">
> >>         <ele>3</ele>
> >>       </trkpt>
> >>       <trkpt lat="49.12" lon="8.7">
> >>         <ele>3</ele>
> >>       </trkpt>
> >>       <trkpt lat="49.13" lon="8.7">
> >>         <ele>3</ele>
> >>       </trkpt>
> >>     </trkseg>
> >>   </trk>
> >> </gpx
> >>
> >> Am 01.01.2021 um 18:04 schrieb Michael Saupe:
> >>> Hello folks,
> >>>
> >>> I am importing multiple gpx files into a postgis database. The tables
> >>> 'tracks' and 'track_points' are created / updated.
> >>>
> >>> The column track_fid in in the track_points table should be a
> reference to
> >>> the track feature id as documented in
> >>> https://gdal.org/drivers/vector/gpx.html, however it is always zero.
> >>>
> >>> Is this a bug or am I missing something?
> >>>
> >>>       Details
> >>>
> >>> I am creating an empty database, then create postgis extension with
> >>> 'CREATE EXTENSION POSTGIS'
> >>>
> >>> I have two simple gpx files ( see attachments )
> >>>
> >>>   * file1.gpx - containing 2 track segments - each with 3 track points
> >>>   * file2.gpx - containing 1 track segment  with 3 track points
> >>>
> >>> I am using commands
> >>>
> >>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
> >>> user=postgres password=xx port=5432" file1.gpx
> >>>
> >>> ogr2ogr -f PostgreSQL -update -append "PG:dbname=testdb host=localhost
> >>> user=postgres password=xx port=5432" file2.gpx
> >>>
> >>> Resulting data in 'tracks'
> >>>
> >>> ogc_fid     name    cmt     desc    src     link1_href
> link1_text      link1_type
> >>>     link2_href      link2_text      link2_type      number  type
> wkb_geometry 1
> > NULL
> >>>     NULL    NULL    NULL    NULL    NULL    NULL    NULL    NULL
> NULL    NULL
> > NULL  ... 2
> >>>     NULL    NULL    NULL    NULL    NULL    NULL    NULL    NULL
> NULL    NULL
> > NULL  NULL
> >>>     ...
> >> Resulting data in 'track_points'
> >>
> >> ogc_fid      track_fid       track_seg_id    track_seg_point_id
> ele     time    ....
> > other
> >> columns omitted ... 1        0       0       0       1       NULL
> >> 2    0       0       1       1       NULL
> >> 3    0       0       2       1       NULL
> >> 4    0       1       0       2       NULL
> >> 5    0       1       1       2       NULL
> >> 6    0       1       2       2       NULL
> >> 7    0       0       0       3       NULL
> >> 8    0       0       1       3       NULL
> >> 9    0       0       2       3       NULL
> >>
> >>> Expected:
> >>>
> >>> ogc_fid     track_fid       track_seg_id    track_seg_point_id
> ele     time    ....
> >>> other columns omitted ... 1         1
> >>>
> >>>     0       0       1       NULL
> >>>
> >>> 2   1
> >>>
> >>>     0       1       1       NULL
> >>>
> >>> 3   1
> >>>
> >>>     0       2       1       NULL
> >>>
> >>> 4   1
> >>>
> >>>     1       0       2       NULL
> >>>
> >>> 5   1
> >>>
> >>>     1       1       2       NULL
> >>>
> >>> 6   1
> >>>
> >>>     1       2       2       NULL
> >>>
> >>> 7   2
> >>>
> >>>     0       0       3       NULL
> >>>
> >>> 8   2
> >>>
> >>>     0       1       3       NULL
> >>>
> >>> 9   2
> >>>
> >>>     0       2       3       NULL
> >>>
> >>> I also tried to omit -update -append, but same result.
> >>>
> >>> Versions:
> >>>   * Postgres: "PostgreSQL 12.5 on x86_64-pc-linux-musl, compiled by gcc
> >>>   (Alpine 9.3.0) 9.3.0, 64-bit" * Postgis: "POSTGIS="3.0.3 0"
> [EXTENSION]
> >>>   PGSQL="120" GEOS="3.8.1-CAPI-1.13.3" PROJ="7.0.1" LIBXML="2.9.10"
> >>>   LIBJSON="0.14" LIBPROTOBUF="1.3.3" WAGYU="0.4.3 (Internal)"" * Gdal:
> >>>   3.2.0
> >
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


-- 
Richard W. Greenwood, PLS
www.greenwoodmap.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210102/42e694bd/attachment-0001.html>

From howard at hobu.co  Sun Jan  3 07:41:59 2021
From: howard at hobu.co (Howard Butler)
Date: Sun, 3 Jan 2021 09:41:59 -0600
Subject: [gdal-dev] Motion: promote GDAL 3.2.1 RC1
In-Reply-To: <2a6064e3-50b3-8878-cb56-a5897f564bf2@mapgears.com>
References: <2500286.d7aLm5r6SR@even-i700>
 <2a6064e3-50b3-8878-cb56-a5897f564bf2@mapgears.com>
Message-ID: <B794305D-40CA-431C-805C-16E6FE46989A@hobu.co>

+1

> On Dec 31, 2020, at 11:03 AM, Daniel Morissette <dmorissette at mapgears.com> wrote:
> 
> +1
> 
> Daniel
> 
> 
> On 2020-12-31 03:58, Even Rouault wrote:
>> Hi,
>> Having heard no issues being reported regarding RC1
>> Motion:
>> Adopt GDAL 3.2.1 RC1 as final 3.2.1 release
>> Starting with my +1
>> Even
> 
> 
> -- 
> Daniel Morissette
> Mapgears Inc
> T: +1 418-696-5056 #201
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Mon Jan  4 04:16:11 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 04 Jan 2021 13:16:11 +0100
Subject: [gdal-dev] Motion: promote GDAL 3.2.1 RC1
In-Reply-To: <2500286.d7aLm5r6SR@even-i700>
References: <2500286.d7aLm5r6SR@even-i700>
Message-ID: <15790932.Vpptu9oTJN@even-i700>

Hi,

> Motion:
> 
> Adopt GDAL 3.2.1 RC1 as final 3.2.1 release
> 
> Starting with my +1

I declare this motion passed with +1 from PSC members MateuszL, JukkaR, 
DanielM, HowardB and myself

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jan  4 04:36:26 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 04 Jan 2021 13:36:26 +0100
Subject: [gdal-dev] GDAL 3.2.1 is released
Message-ID: <5820368.Mr40ba0S82@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 3.2.1 bug fix version.

Consult the release notes for the list of issues addressed :
  https://github.com/OSGeo/gdal/blob/v3.2.1/gdal/NEWS

The sources are available at:

    https://download.osgeo.org/gdal/3.2.1/gdal-3.2.1.tar.xz
    https://download.osgeo.org/gdal/3.2.1/gdal-3.2.1.tar.gz
    https://download.osgeo.org/gdal/3.2.1/gdal321.zip
    https://download.osgeo.org/gdal/3.2.1/gdal-grass-3.2.1.tar.gz

Also note that the GDAL 3.2.x series will be the last one to support Python 
2.7. Starting with GDAL 3.3, Python 3.6 or above will be required for Python 
functionality.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmlsiqueira at globo.com  Mon Jan  4 07:49:48 2021
From: jmlsiqueira at globo.com (=?UTF-8?Q?Jo=C3=A3o_Marcelo_Lopes_Siqueira?=)
Date: Mon, 04 Jan 2021 12:49:48 -0300
Subject: [gdal-dev] Problem to generate watershed with the Fill sinks (wang
 & liu) comand
Message-ID: <502b3a512518d2c1ec287a95cb102052@globo.com>

 

Hello guys, a happy 2021 for everyone. 

I am trying to use the tool Fill sinks (wang & liu) to trace a watershed
from an MDE.tif file.This MDE was generated from meter by meter curves
at QGIS 

It turns out that the output files are not generated and the following
error message appears: 

"WARNING Could not load parameter gdal:buildvirtualraster_1:NDVI do tipo
vrt_destination." 

Could someone help me with this error? 

Before executing the command I indicate that I want the output files to
be saved. 

I am using QGIS 3.10.4-A-Coru?a with GDAL/OGR 3.0.4 in the windows 10-64
bits. 
-- 

-- 
Thanks 
Jo?o Marcelo Lopes 

Keep Playing 
http://www.boardgamegeek.com/collection/user/jmlsiqueira?own=1&subtype=boardgame&ff=1
[1] 

Links:
------
[1]
http://www.boardgamegeek.com/collection/user/jmlsiqueira?own=1&amp;subtype=boardgame&amp;ff=1
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210104/95749e18/attachment.html>

From gp.saliola at gmail.com  Tue Jan  5 01:22:14 2021
From: gp.saliola at gmail.com (gp.saliola at gmail.com)
Date: Tue, 5 Jan 2021 10:22:14 +0100
Subject: [gdal-dev] Map warping
Message-ID: <001d01d6e344$41c85e60$c5591b20$@gmail.com>

Hello,

I'm trying to warp a GeoTiff image from its datum/projection to EPSG:32633
(WGS84 UTM33 Nord).

These are the info about the source tiff file:

 

Driver: GTiff/GeoTIFF

Files: C:\Users\gpsal\Desktop\venezia.tif

Size is 10600, 3904

Coordinate System is:

PROJCS["WGS 84 / Pseudo-Mercator",

    GEOGCS["WGS 84",

        DATUM["WGS_1984",

            SPHEROID["WGS 84",6378137,298.257223563,

                AUTHORITY["EPSG","7030"]],

            AUTHORITY["EPSG","6326"]],

        PRIMEM["Greenwich",0,

            AUTHORITY["EPSG","8901"]],

        UNIT["degree",0.0174532925199433,

            AUTHORITY["EPSG","9122"]],

        AUTHORITY["EPSG","4326"]],

    PROJECTION["Mercator_1SP"],

    PARAMETER["central_meridian",0],

    PARAMETER["scale_factor",1],

    PARAMETER["false_easting",0],

    PARAMETER["false_northing",0],

    UNIT["metre",1,

       AUTHORITY["EPSG","9001"]],

    AXIS["Easting",EAST],

    AXIS["Northing",NORTH],

    EXTENSION["PROJ4","+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0
+x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs"],

    AUTHORITY["EPSG","3857"]]

Data axis to CRS axis mapping: 1,2

PROJ.4 string is:

'+proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1
+units=m +nadgrids=@null +wktext +no_defs'

Origin = (1335698.850769308628514,5704032.021438719704747)

Pixel Size = (3.356372516969551,-3.345286391264631)

Metadata:

  AREA_OR_POINT=Area

  TIFFTAG_RESOLUTIONUNIT=2 (pixels/inch)

  TIFFTAG_XRESOLUTION=72

  TIFFTAG_YRESOLUTION=72

Image Structure Metadata:

  COMPRESSION=LZW

  INTERLEAVE=PIXEL

Corner Coordinates:

Upper Left  ( 1335698.851, 5704032.021) ( 11d59'55.63"E, 45d31'18.17"N)

Lower Left  ( 1335698.851, 5690972.023) ( 11d59'55.63"E, 45d26'22.04"N)

Upper Right ( 1371276.399, 5704032.021) ( 12d19' 6.19"E, 45d31'18.17"N)

Lower Right ( 1371276.399, 5690972.023) ( 12d19' 6.19"E, 45d26'22.04"N)

Center      ( 1353487.625, 5697502.022) ( 12d 9'30.91"E, 45d28'50.16"N)

Band 1 Block=10600x1 Type=Byte, ColorInterp=Red

Band 2 Block=10600x1 Type=Byte, ColorInterp=Green

Band 3 Block=10600x1 Type=Byte, ColorInterp=Blue

 

The result is a warped image but georeferencing is bad (difference of some
kilometers).

The problem is in the input map or what?

Thank you for your support.

Best regards,

Gian Paolo Saliola

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210105/08b57d95/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Tue Jan  5 11:42:20 2021
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Tue, 5 Jan 2021 19:42:20 +0000
Subject: [gdal-dev] How to read multi-band xyz files?
Message-ID: <bbbf676aec04480e904e3420b8365b11@maanmittauslaitos.fi>

Hi,

It is possible to create multi-band xyz files with the gdal2xyz.py script. The usage and result is like this:

gdal2xyz -band 1 -band 2 -band 3 test.tif test.xyz

more test.xyz
0.500 0.500 255 255 255
1.500 0.500 255 255 255
2.500 0.500 255 255 255
3.500 0.500 255 255 255
. . .

However, in reading "the X, Y and Z columns (in that order) are assumed to be the first 3 columns of each line" as documented in https://gdal.org/drivers/raster/xyz.html and gdalinfo finds only the first band

gdalinfo test.xyz
Driver: XYZ/ASCII Gridded XYZ
Files: test.xyz
Size is 476, 468
Origin = (0.000000000000000,0.000000000000000)
Pixel Size = (1.000000000000000,1.000000000000000)
Corner Coordinates:
Upper Left  (   0.0000000,   0.0000000)
Lower Left  (       0.000,     468.000)
Upper Right (     476.000,       0.000)
Lower Right (     476.000,     468.000)
Center      (     238.000,     234.000)
Band 1 Block=476x1 Type=Byte, ColorInterp=Undefined
  Min=0.000 Max=255.000

Is there any way to get all the bands?

-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210105/6c05a2b7/attachment.html>

From even.rouault at spatialys.com  Wed Jan  6 02:58:15 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 06 Jan 2021 11:58:15 +0100
Subject: [gdal-dev] How to read multi-band xyz files?
In-Reply-To: <bbbf676aec04480e904e3420b8365b11@maanmittauslaitos.fi>
References: <bbbf676aec04480e904e3420b8365b11@maanmittauslaitos.fi>
Message-ID: <19643128.39li2LbLVt@even-i700>

> Is there any way to get all the bands?

Not directly.
You could add a header line with the appropriate column names, by making the Z 
column to point to a different column each time.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From henry at silviaterra.com  Wed Jan  6 06:48:47 2021
From: henry at silviaterra.com (Henry Rodman)
Date: Wed, 6 Jan 2021 08:48:47 -0600
Subject: [gdal-dev] error building gdal docker image for v2.4.4
Message-ID: <CAB59xmF5FbKzBJmk9dWEcbdw5Wh_8840cdDg6EV_A=++ChTXyg@mail.gmail.com>

Hello, I am trying to set up a development environment with version 2.4.4
of gdal installed. I found the documentation for the gdal docker image and
successfully built the image with --gdal master and --proj master flags
set.

However, when I try to build the docker image with version 2.4.4 of gdal
(and version 4.8.0 of proj) the ./configure call for building gdal hits an
error related to proj availability.

Here is the command that I run (from gdal/gdal/docker directory):
ubuntu-small/build.sh --release --gdal v2.4.4 --proj 4.8.0

Here is the tail of the logging messages from the docker build:
checking how to link PROJ library... link statically.
checking for proj_create in -lproj... no
checking for pj_init in -lproj... no
checking for pj_init in -lproj... no
checking for pj_init in -lproj... no
checking for pj_init in -lproj... no
checking for pj_init in -lproj... no
configure: error: cannot find proj

Is this expected behavior? Perhaps the Dockerfile in the gdal repository is
not backwards compatible as far back as version 2.4.4 of gdal and version
4.8.0 of proj?

In the proj configuration logs I noticed a few messages that might provide
a clue:
libtool: install: /usr/bin/install -c .libs/libproj.lai
/build/usr/local/lib/libproj.la
libtool: warning: remember to run 'libtool --finish /usr/local/lib'
 /usr/bin/mkdir -p '/build/usr/local/bin'
  /bin/bash ../libtool   --mode=install /usr/bin/install -c proj nad2bin
geod cs2cs '/build/usr/local/bin'
libtool: warning: 'libproj.la' has not been installed in '/usr/local/lib'
libtool: install: /usr/bin/install -c .libs/proj /build/usr/local/bin/proj
libtool: warning: 'libproj.la' has not been installed in '/usr/local/lib'
libtool: install: /usr/bin/install -c .libs/nad2bin
/build/usr/local/bin/nad2bin
libtool: warning: 'libproj.la' has not been installed in '/usr/local/lib'
libtool: install: /usr/bin/install -c .libs/geod /build/usr/local/bin/geod
libtool: warning: 'libproj.la' has not been installed in '/usr/local/lib'
libtool: install: /usr/bin/install -c .libs/cs2cs /build/usr/local/bin/cs2c

If the docker build process won't work for my application I will move on
but I thought I would check to see if there may be a simple solution.

Thank you in advance for any suggestions!

-- 
*Henry Rodman*
Forest Biometrician
SilviaTerra  |  www.silviaterra.com
612-845-7637
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210106/d5b24fc1/attachment.html>

From Daniel.Evans at jbarisk.com  Wed Jan  6 07:46:25 2021
From: Daniel.Evans at jbarisk.com (Daniel Evans)
Date: Wed, 6 Jan 2021 15:46:25 +0000
Subject: [gdal-dev] Displaying the transform behind a
 CoordinateTransformation object
Message-ID: <LO3P123MB29532B036B025A4E6B26E9BA95D00@LO3P123MB2953.GBRP123.PROD.OUTLOOK.COM>

Hello,

In QGIS, it is possible to select from several available transformations between coordinate systems if the user desires. See their documentation at: https://docs.qgis.org/3.4/en/docs/user_manual/working_with_projections/working_with_projections.html#datum-transformations

With GDAL, is it possible to perform some or all of:

  1.  Showing the details of the transform automatically selected by a CoordinateTransformation object,
  2.  Selecting/specifying an alternate transform,
  3.  Listing all available transforms between two coordinate systems?


I've had a quick look at the QGIS source code, which pulls the transforms from a sqlite database, but the table it references ("tbl_datum_transform") is not in my proj.db (Proj v6.2.1), so I suspect it's a separate/custom/processed database.

https://github.com/qgis/QGIS/blob/f32725658f205af4ac9718d3a3b74f13eaa98d3e/src/core/qgsdatumtransform.cpp
https://github.com/qgis/QGIS/blob/c491b9dbd7dd5012a9db4a9a21ded28ae49bd4ec/src/core/qgscoordinatereferencesystem.h
(A comment in the latter states "The database of CRS shipped with QGIS is stored in a SQLite database (see QgsApplication::srsDatabaseFilePath()) and it is based on the data files maintained by GDAL project (a variety of .csv and .wkt files).")


In particular, my query relates to transforms to/from British National Grid, where I'm told that many transforms of varying accuracy are available, and QGIS doesn't choose the transform our users want automatically. I've not been able to answer their queries regarding what transformation GDAL has chosen when we create a CoordinateTransformation object.

Dr Daniel Evans
Software Developer


[JBA COVID-19 statement]<https://www.jbagroup.co.uk/sites/www.jbagroup.co.uk/files/documents/15-030%20JBA%20Business%20Continuity%20Briefing%20-%20Latest.pdf>

T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png]  [Follow us on Twitter] <https://twitter.com/jbarisk>

Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire, BD23 3FD, Telephone: +441756799919


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210106/71ddb36f/attachment-0001.html>

From even.rouault at spatialys.com  Wed Jan  6 08:28:58 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 06 Jan 2021 17:28:58 +0100
Subject: [gdal-dev] error building gdal docker image for v2.4.4
In-Reply-To: <CAB59xmF5FbKzBJmk9dWEcbdw5Wh_8840cdDg6EV_A=++ChTXyg@mail.gmail.com>
References: <CAB59xmF5FbKzBJmk9dWEcbdw5Wh_8840cdDg6EV_A=++ChTXyg@mail.gmail.com>
Message-ID: <4116843.KLXUsTJ4LI@even-i700>

> Is this expected behavior? Perhaps the Dockerfile in the gdal repository is
> not backwards compatible as far back as version 2.4.4 of gdal and version
> 4.8.0 of proj?

Yes this is expected. The Dockerfile, as it, is only compatible of GDAL >= 3 
and PROJ >= 6. You could tweak it to make it work with older versions. The 
issue is all the renaming of libproj to libinternalproj. If you remove that, 
that should hopefully work

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From matteo.ghetta at gmail.com  Thu Jan  7 02:20:37 2021
From: matteo.ghetta at gmail.com (matteo)
Date: Thu, 7 Jan 2021 11:20:37 +0100
Subject: [gdal-dev] List all the (possible) errors of a single transaction
Message-ID: <f201ebc6-7dea-d19e-17e7-57f5f579268f@gmail.com>

Hi all and happy new year!

as suggested some days ago [0] I've set up a vrt file that I use to 
export many tables from a gpkg to a PG.

In the PG DB there are some constraints and with the vrt files all works 
as expected: if an error (like a wrong value caught by the constraint) a 
total rollback is made and nothing is written in the PG DB.

But what if I've more than one single error on the gpkg? It seems (to 
me) that when ogr2ogr identifies the first error the process is stopped.

Is there a way to list ALL the (possible) errors of a single transaction 
(like a dry run)?

Cheers and thanks for any hint

Matteo


[0] https://lists.osgeo.org/pipermail/gdal-dev/2020-December/053209.html

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jan  7 02:39:27 2021
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Thu, 7 Jan 2021 10:39:27 +0000
Subject: [gdal-dev] [EXTERNAL] Re:  How to read multi-band xyz files?
Message-ID: <7ee6d659102a43ee9d7a02304a179098@maanmittauslaitos.fi>

Hi,

I was mainly curious without any exact need at the moment. I just noticed that gdal2xyz.py can create xyz files with more bands than just one for z but I also had a feeling that GDAL cannot read such files directly back, which appeared to be true.

Generally speaking there might be some use cases for a multiband plain text format. I am remembering that some user on the Geoserver users mailing list a few months ago was after such a format. Use case was to query pixel values from a WCS service. Requesting a single pixel GeoTIFF makes things unnecessary difficult for such simple need.

-Jukka Rahkonen-

L?hett?j?: Hare, Trent M <thare at usgs.gov>
L?hetetty: keskiviikko 6. tammikuuta 2021 17.52
Vastaanottaja: Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi>
Aihe: Re: [EXTERNAL] Re: [gdal-dev] How to read multi-band xyz files?

Jukka,
  I'm not sure I understand exactly what you want but I have this old script which might help.

This is old enough it might need some minor updates for Python 3.
https://github.com/USGS-Astrogeology/GDAL_scripts/tree/master/gdal2AsciiLatLonBands

-Trent
________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> on behalf of Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>>
Sent: Wednesday, January 6, 2021 3:58 AM
To: gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org> <gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>>
Cc: Rahkonen Jukka (MML) <jukka.rahkonen at maanmittauslaitos.fi<mailto:jukka.rahkonen at maanmittauslaitos.fi>>
Subject: [EXTERNAL] Re: [gdal-dev] How to read multi-band xyz files?



 This email has been received from outside of DOI - Use caution before clicking on links, opening attachments, or responding.



> Is there any way to get all the bands?

Not directly.
You could add a header line with the appropriate column names, by making the Z
column to point to a different column each time.

Even

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210107/1ff7083f/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jan  7 03:45:15 2021
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 7 Jan 2021 04:45:15 -0700 (MST)
Subject: [gdal-dev] List all the (possible) errors of a single
 transaction
In-Reply-To: <f201ebc6-7dea-d19e-17e7-57f5f579268f@gmail.com>
References: <f201ebc6-7dea-d19e-17e7-57f5f579268f@gmail.com>
Message-ID: <1610019915156-0.post@n6.nabble.com>

Hi,

One workaround is to use -skipfailures and compare afterwards which IDs in
the source data are not present in the target table. Skipfailures is forcing
the transaction size into one row and it may be deadly slow if the output is
GeoPackage because initializing/committing a transaction in SQLite is slow.
With PostGIS as an outlut it is not as slow. A dry run into some some fast,
not transactual format like GeoJSON could be used as some sort of test but
that does not test the database constraints.

If you know your database and the contraints that you have you should be
able to make quite nice tests by running SQL against the source data. But
having a typeless SQLite as source can make it harder to write the SQL
tests. That may even be a reason for your problems (field reserved for
integers contains text etc.).

I wonder why even the database engines would go on after finding the first
error in the transaction. The whole transaction must be rollbacked in any
case so why not to quit sooner rather than later?



-Jukka Rahkonen-



ghtmtt wrote
> Hi all and happy new year!
> 
> as suggested some days ago [0] I've set up a vrt file that I use to 
> export many tables from a gpkg to a PG.
> 
> In the PG DB there are some constraints and with the vrt files all works 
> as expected: if an error (like a wrong value caught by the constraint) a 
> total rollback is made and nothing is written in the PG DB.
> 
> But what if I've more than one single error on the gpkg? It seems (to 
> me) that when ogr2ogr identifies the first error the process is stopped.
> 
> Is there a way to list ALL the (possible) errors of a single transaction 
> (like a dry run)?
> 
> Cheers and thanks for any hint
> 
> Matteo
> 
> 
> [0] https://lists.osgeo.org/pipermail/gdal-dev/2020-December/053209.html
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From matteo.ghetta at gmail.com  Thu Jan  7 05:08:25 2021
From: matteo.ghetta at gmail.com (matteo)
Date: Thu, 7 Jan 2021 14:08:25 +0100
Subject: [gdal-dev] List all the (possible) errors of a single
 transaction
In-Reply-To: <1610019915156-0.post@n6.nabble.com>
References: <f201ebc6-7dea-d19e-17e7-57f5f579268f@gmail.com>
 <1610019915156-0.post@n6.nabble.com>
Message-ID: <62119b5b-02ae-9a09-25c6-5e6e2293deb8@gmail.com>

Hi Jukka,

> One workaround is to use -skipfailures and compare afterwards which IDs in
> the source data are not present in the target table. Skipfailures is forcing
> the transaction size into one row and it may be deadly slow if the output is
> GeoPackage because initializing/committing a transaction in SQLite is slow.
> With PostGIS as an outlut it is not as slow. A dry run into some some fast,
> not transactual format like GeoJSON could be used as some sort of test but
> that does not test the database constraints.
> 
> If you know your database and the contraints that you have you should be
> able to make quite nice tests by running SQL against the source data. But
> having a typeless SQLite as source can make it harder to write the SQL
> tests. That may even be a reason for your problems (field reserved for
> integers contains text etc.).
> 
> I wonder why even the database engines would go on after finding the first
> error in the transaction. The whole transaction must be rollbacked in any
> case so why not to quit sooner rather than later?

thanks for the input. It seems that -skipfailures is the parameter that 
I can use to do what I have to.

My idea is to use a "staging" database on PG where I can run the single 
transaction with -skipfailures and then, if I don't have any errors, I 
will run a similar job with the same input data but on a "production" 
database.

Maybe not the cleanest solution but still a good one to catch all the 
errors of all the tables

Matteo

From matteo.ghetta at gmail.com  Fri Jan  8 06:58:39 2021
From: matteo.ghetta at gmail.com (matteo)
Date: Fri, 8 Jan 2021 15:58:39 +0100
Subject: [gdal-dev] Catching many errors of the same record (ogr2ogr)
Message-ID: <c7c6964b-3eab-34d9-d3e1-4bdcebbaea4f@gmail.com>

Hi all,

I've 2 small questions during a syncing from a GPKG to a PG DB with 
constraints using -skipfailures:

* is it possible to show only the constraint error and not also the 
insert one? Even if there is only a single error, reading the log it 
seems that there are 2 of them (I know a person should only read....)
* is there are 2 errors (e.g. constraints error) BUT in the same record, 
ogr2ogr shows only the first one and not all of them

Cheers and thanks for any hint!

Matteo

From hanwgeek at gmail.com  Fri Jan  8 09:30:12 2021
From: hanwgeek at gmail.com (Han Wang)
Date: Sat, 9 Jan 2021 01:30:12 +0800
Subject: [gdal-dev] AttributeError: module '_gdal' has no attribute
 'DirEntry_name_get'
Message-ID: <CADCmNp0BW05cvRpa8kYU-quiP+2N8HYZPnAdA9NcErghV_NFwQ@mail.gmail.com>

Hi all,

I want to use gdal in python3.6 with QGIS but when I `from osgeo import
gdal`, it shows:
```python
>>> from osgeo import gdal
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python3.6/dist-packages/osgeo/gdal.py", line 1565,
in <module>
    class DirEntry(_object):
  File "/usr/local/lib/python3.6/dist-packages/osgeo/gdal.py", line 1573,
in DirEntry
    __swig_getmethods__["name"] = _gdal.DirEntry_name_get
AttributeError: module '_gdal' has no attribute 'DirEntry_name_get'
```
I installed GDAL2.2.3 from qgis.org repo. What can I do to fix this? Thanks
a lot!

Best regards,

Han
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210109/b870131e/attachment.html>

From alex at outsideanalytics.com  Sat Jan  9 13:54:58 2021
From: alex at outsideanalytics.com (Alex Riggs)
Date: Sat, 9 Jan 2021 14:54:58 -0700
Subject: [gdal-dev] /vsimem/ Driver CPLCreateUserFaultMapping Error in Docker
Message-ID: <CAMDQBEXNEpWsFTJ+upHU6_0611VMEQZEC15X4VTBPyxT52LM3A@mail.gmail.com>

Hello,

I am using the /vsimem/ driver to create a virtual netCDF from a bytes
string in Python3. The process works fine when run from my host system but
when I package it up in a Docker container  I'm getting errors when trying
to open the in memory file. The error stems from a call to
`gdal.Open('/vsimem/name_of_file.nc')`, and the error text is:
"CPLCreateUserFaultMapping(): syscall(__NR_userfaultfd) failed".

I'm aware a simple work around would be to write the file to an on-disk
file and just delete it when I don't need it anymore but am curious as to
why the /vsimem/ driver is failing in a Docker container.

Any help or insight would be appreciated!

Cheers,

Alexander Riggs
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210109/eec42141/attachment.html>

From even.rouault at spatialys.com  Sun Jan 10 08:34:31 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 10 Jan 2021 17:34:31 +0100
Subject: [gdal-dev] /vsimem/ Driver CPLCreateUserFaultMapping Error in
 Docker
In-Reply-To: <CAMDQBEXNEpWsFTJ+upHU6_0611VMEQZEC15X4VTBPyxT52LM3A@mail.gmail.com>
References: <CAMDQBEXNEpWsFTJ+upHU6_0611VMEQZEC15X4VTBPyxT52LM3A@mail.gmail.com>
Message-ID: <1852271.oK1pnfUTmk@even-i700>

Alex,

> I am using the /vsimem/ driver to create a virtual netCDF from a bytes
> string in Python3. The process works fine when run from my host system but
> when I package it up in a Docker container  I'm getting errors when trying
> to open the in memory file. The error stems from a call to
> `gdal.Open('/vsimem/name_of_file.nc')`, and the error text is:
> "CPLCreateUserFaultMapping(): syscall(__NR_userfaultfd) failed".
> 
> I'm aware a simple work around would be to write the file to an on-disk
> file and just delete it when I don't need it anymore but am curious as to
> why the /vsimem/ driver is failing in a Docker container.

Docker runs with restricted permissions by default, and disables the 
userfaultfd Linux system call that is currently needed to open virtual files.

You can run your Docker container with  --security-opt seccomp=unconfined  to 
remove those restrictions (there are more advanced ways to enable a more fine 
grained control on which syscalls you enable/disable)

That said, for /vsimem/ using Linux userfaultfd is a bit overkill. I've queued
https://github.com/OSGeo/gdal/pull/3363 which removes that restriction.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Sun Jan 10 15:02:23 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Jan 2021 00:02:23 +0100
Subject: [gdal-dev] Considering drivers removal ?
Message-ID: <3167316.Bsjxy4uaUB@even-i700>

Hi,

It's not spring yet, but I'm in a mood lately of axing useless things, and we 
probably have tons of candidate for that in GDAL, especially in drivers.
I was going to just axe the DB2 driver
(https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.

Any idea how we can know what is used and what isn't ? A "call-home" 
functionality where we would track driver usage would only be acceptable if 
people enable it and have network connectivity, so we won't probably get lots 
of feedback. Having a spreadsheet with the driver list and asking people to 
fill it would probably also receive little feedback. So the idea I had was to 
do something like the following in the Open() method of a candidate for 
removal:

GDALDataset* FooDriver::Open( .... )
{
   if( !Identify(poOpenInfo) )
      return nullptr;

   if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
   {
       CPLError(CE_Failure, CPLE_AppDefined,
    "Driver FOO is considered for removal in GDAL 3.5. You are invited "
    "to convert any dataset in that format to another more common one ."
    "If you need this driver in future GDAL versions, create a ticket at "
    "https://github.com/OSGeo/gdal (look first for an existing one first) to "
    "explain how critical it is for you (but the GDAL project may still "
    "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
    "configuration option / environment variable to YES");
       return nullptr;
    }
    ...
}

That is, when we detect a file to be handled by the driver, emit the above 
error message and do not open the dataset, unless the user defines the 
environment variable.
Similarly in the Create()/CreateCopy() methods.
If we ship this in 3.3, with a 3.5 milestone for removal, this would offer a 
feedback period of one year / 2 feature versions.

Here's my own list of candidates for retirement (probably over-conservative). 
Mostly based on gut feeling. None of them are particularly bad citizens, but I 
have no indication that they are still used, which doesn't mean they aren't.

* Raster side:
BPG
DB2Raster
DOQ1
DOQ2
E00GRID
Epsilon
FujiBAS
GS7BG
GSAG
IDA
JDEM
JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
JPEGLS
LAN
MFF
MG4Lidar ?
NDF
NTv1
SDTS Raster
SGI
XPM
ZMap

* Vector side:
AERONAVFAA
ESRI ArcObjects
ARCGEN
BNA
Cloudant
CouchDB
DB2
DODS
FMEObjects Gateway
Geomedia MDB
GMT ASCII Vectors
GTM
HTF
INGRES
MongoDB (the old one, superseded by MongoDBv3)
OpenAIR
REC
SDTS
SUA
SVG
TIGER
WALK


Anything you'd add / remove ?

What is not obvious is what would be the criterion for keeping a driver: 1, 
10, 100 users asking for the driver to be kept ?
If a GDAL developer contributing to the overall good of the project needs the 
preservation of a driver to be able to justify its continued involvement, I'd 
tend to think it to be enough to keep it.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jan.heckman at gmail.com  Sun Jan 10 15:50:18 2021
From: jan.heckman at gmail.com (Jan Heckman)
Date: Mon, 11 Jan 2021 00:50:18 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <CAKMUAtCG8o86a7DnvsUgG-Njez7t47nOdC18Pm70RZg568S5Wg@mail.gmail.com>

A bit of googling sometimes gives an indication. I was a little confused
about SVG, not using it myself but getting quite a few references.
E.g. this one in stackexchange, with a mention how often it was looked up:
https://gis.stackexchange.com/questions/11476/importing-svg-into-gis
Just an idea. Obviously, it is not easy to decide exactly what to do with
this sort of information.
Jan

On Mon, Jan 11, 2021 at 12:02 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> It's not spring yet, but I'm in a mood lately of axing useless things, and
> we
> probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
>
> Any idea how we can know what is used and what isn't ? A "call-home"
> functionality where we would track driver usage would only be acceptable
> if
> people enable it and have network connectivity, so we won't probably get
> lots
> of feedback. Having a spreadsheet with the driver list and asking people
> to
> fill it would probably also receive little feedback. So the idea I had was
> to
> do something like the following in the Open() method of a candidate for
> removal:
>
> GDALDataset* FooDriver::Open( .... )
> {
>    if( !Identify(poOpenInfo) )
>       return nullptr;
>
>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>    {
>        CPLError(CE_Failure, CPLE_AppDefined,
>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>     "to convert any dataset in that format to another more common one ."
>     "If you need this driver in future GDAL versions, create a ticket at "
>     "https://github.com/OSGeo/gdal (look first for an existing one first)
> to "
>     "explain how critical it is for you (but the GDAL project may still "
>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>     "configuration option / environment variable to YES");
>        return nullptr;
>     }
>     ...
> }
>
> That is, when we detect a file to be handled by the driver, emit the above
> error message and do not open the dataset, unless the user defines the
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer
> a
> feedback period of one year / 2 feature versions.
>
> Here's my own list of candidates for retirement (probably
> over-conservative).
> Mostly based on gut feeling. None of them are particularly bad citizens,
> but I
> have no indication that they are still used, which doesn't mean they
> aren't.
>
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> JPEGLS
> LAN
> MFF
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
>
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3)
> OpenAIR
> REC
> SDTS
> SUA
> SVG
> TIGER
> WALK
>
>
> Anything you'd add / remove ?
>
> What is not obvious is what would be the criterion for keeping a driver:
> 1,
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project needs
> the
> preservation of a driver to be able to justify its continued involvement,
> I'd
> tend to think it to be enough to keep it.
>
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/37fbfbc8/attachment.html>

From nyall.dawson at gmail.com  Sun Jan 10 15:57:11 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 11 Jan 2021 09:57:11 +1000
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CAKMUAtCG8o86a7DnvsUgG-Njez7t47nOdC18Pm70RZg568S5Wg@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <CAKMUAtCG8o86a7DnvsUgG-Njez7t47nOdC18Pm70RZg568S5Wg@mail.gmail.com>
Message-ID: <CAB28Asgi2y2fY7tLVmAGz_-ygjZMy7fTMpsZnHq8vk5ysWMedg@mail.gmail.com>

On Mon, 11 Jan 2021 at 09:50, Jan Heckman <jan.heckman at gmail.com> wrote:
>
> A bit of googling sometimes gives an indication. I was a little confused about SVG, not using it myself but getting quite a few references.
> E.g. this one in stackexchange, with a mention how often it was looked up:
> https://gis.stackexchange.com/questions/11476/importing-svg-into-gis
> Just an idea. Obviously, it is not easy to decide exactly what to do with this sort of information.

I've previously found the SVG driver useful for getting data out of
typically non-spatial formats for georeferencing (e.g. I once had to
convert a bunch of spatial data which had been hand drawn in visio on
top of a google map screenshot...). I'd be sorry to see this driver
go, as it's a useful last-resort aid for situations like this.

Nyall

> Jan
>
> On Mon, Jan 11, 2021 at 12:02 AM Even Rouault <even.rouault at spatialys.com> wrote:
>>
>> Hi,
>>
>> It's not spring yet, but I'm in a mood lately of axing useless things, and we
>> probably have tons of candidate for that in GDAL, especially in drivers.
>> I was going to just axe the DB2 driver
>> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
>>
>> Any idea how we can know what is used and what isn't ? A "call-home"
>> functionality where we would track driver usage would only be acceptable if
>> people enable it and have network connectivity, so we won't probably get lots
>> of feedback. Having a spreadsheet with the driver list and asking people to
>> fill it would probably also receive little feedback. So the idea I had was to
>> do something like the following in the Open() method of a candidate for
>> removal:
>>
>> GDALDataset* FooDriver::Open( .... )
>> {
>>    if( !Identify(poOpenInfo) )
>>       return nullptr;
>>
>>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>>    {
>>        CPLError(CE_Failure, CPLE_AppDefined,
>>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>>     "to convert any dataset in that format to another more common one ."
>>     "If you need this driver in future GDAL versions, create a ticket at "
>>     "https://github.com/OSGeo/gdal (look first for an existing one first) to "
>>     "explain how critical it is for you (but the GDAL project may still "
>>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>>     "configuration option / environment variable to YES");
>>        return nullptr;
>>     }
>>     ...
>> }
>>
>> That is, when we detect a file to be handled by the driver, emit the above
>> error message and do not open the dataset, unless the user defines the
>> environment variable.
>> Similarly in the Create()/CreateCopy() methods.
>> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer a
>> feedback period of one year / 2 feature versions.
>>
>> Here's my own list of candidates for retirement (probably over-conservative).
>> Mostly based on gut feeling. None of them are particularly bad citizens, but I
>> have no indication that they are still used, which doesn't mean they aren't.
>>
>> * Raster side:
>> BPG
>> DB2Raster
>> DOQ1
>> DOQ2
>> E00GRID
>> Epsilon
>> FujiBAS
>> GS7BG
>> GSAG
>> IDA
>> JDEM
>> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
>> JPEGLS
>> LAN
>> MFF
>> MG4Lidar ?
>> NDF
>> NTv1
>> SDTS Raster
>> SGI
>> XPM
>> ZMap
>>
>> * Vector side:
>> AERONAVFAA
>> ESRI ArcObjects
>> ARCGEN
>> BNA
>> Cloudant
>> CouchDB
>> DB2
>> DODS
>> FMEObjects Gateway
>> Geomedia MDB
>> GMT ASCII Vectors
>> GTM
>> HTF
>> INGRES
>> MongoDB (the old one, superseded by MongoDBv3)
>> OpenAIR
>> REC
>> SDTS
>> SUA
>> SVG
>> TIGER
>> WALK
>>
>>
>> Anything you'd add / remove ?
>>
>> What is not obvious is what would be the criterion for keeping a driver: 1,
>> 10, 100 users asking for the driver to be kept ?
>> If a GDAL developer contributing to the overall good of the project needs the
>> preservation of a driver to be able to justify its continued involvement, I'd
>> tend to think it to be enough to keep it.
>>
>>
>> Even
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From andrew.bell.ia at gmail.com  Sun Jan 10 16:02:09 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Sun, 10 Jan 2021 19:02:09 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <CACJ51z1u9+J1xxcirt8RwW0b3+AS02SzsWrgFkicGgJ2Y5t_HA@mail.gmail.com>

Could you simply make them all plugins and announce that they will be
unmaintained? After a release cycle, we place such things into their own
repo. Don't know if that would work for GDAL.

On Sun, Jan 10, 2021, 6:02 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> It's not spring yet, but I'm in a mood lately of axing useless things, and
> we
> probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
>
> Any idea how we can know what is used and what isn't ? A "call-home"
> functionality where we would track driver usage would only be acceptable
> if
> people enable it and have network connectivity, so we won't probably get
> lots
> of feedback. Having a spreadsheet with the driver list and asking people
> to
> fill it would probably also receive little feedback. So the idea I had was
> to
> do something like the following in the Open() method of a candidate for
> removal:
>
> GDALDataset* FooDriver::Open( .... )
> {
>    if( !Identify(poOpenInfo) )
>       return nullptr;
>
>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>    {
>        CPLError(CE_Failure, CPLE_AppDefined,
>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>     "to convert any dataset in that format to another more common one ."
>     "If you need this driver in future GDAL versions, create a ticket at "
>     "https://github.com/OSGeo/gdal (look first for an existing one first)
> to "
>     "explain how critical it is for you (but the GDAL project may still "
>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>     "configuration option / environment variable to YES");
>        return nullptr;
>     }
>     ...
> }
>
> That is, when we detect a file to be handled by the driver, emit the above
> error message and do not open the dataset, unless the user defines the
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer
> a
> feedback period of one year / 2 feature versions.
>
> Here's my own list of candidates for retirement (probably
> over-conservative).
> Mostly based on gut feeling. None of them are particularly bad citizens,
> but I
> have no indication that they are still used, which doesn't mean they
> aren't.
>
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> JPEGLS
> LAN
> MFF
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
>
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3)
> OpenAIR
> REC
> SDTS
> SUA
> SVG
> TIGER
> WALK
>
>
> Anything you'd add / remove ?
>
> What is not obvious is what would be the criterion for keeping a driver:
> 1,
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project needs
> the
> preservation of a driver to be able to justify its continued involvement,
> I'd
> tend to think it to be enough to keep it.
>
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210110/f1e5c42f/attachment-0001.html>

From stephenwoodbridge37 at gmail.com  Sun Jan 10 16:02:40 2021
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Sun, 10 Jan 2021 19:02:40 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <54cb2ae8-452c-6937-1751-406dc28e1d4b@gmail.com>

Even,

This makes a lot of sense to me. How would you handle this in Python?
Would it make sense to create a GDAL-removed repository and move stuff 
into it just so it is available if someone wants it. This would not be 
supported or updated by GDAL just making it available if someone 
wants/needs to fork it, something else like this?

-Steve W

On 1/10/2021 6:02 PM, Even Rouault wrote:
> Hi,
>
> It's not spring yet, but I'm in a mood lately of axing useless things, and we
> probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
>
> Any idea how we can know what is used and what isn't ? A "call-home"
> functionality where we would track driver usage would only be acceptable if
> people enable it and have network connectivity, so we won't probably get lots
> of feedback. Having a spreadsheet with the driver list and asking people to
> fill it would probably also receive little feedback. So the idea I had was to
> do something like the following in the Open() method of a candidate for
> removal:
>
> GDALDataset* FooDriver::Open( .... )
> {
>     if( !Identify(poOpenInfo) )
>        return nullptr;
>
>     if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>     {
>         CPLError(CE_Failure, CPLE_AppDefined,
>      "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>      "to convert any dataset in that format to another more common one ."
>      "If you need this driver in future GDAL versions, create a ticket at "
>      "https://github.com/OSGeo/gdal (look first for an existing one first) to "
>      "explain how critical it is for you (but the GDAL project may still "
>      "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>      "configuration option / environment variable to YES");
>         return nullptr;
>      }
>      ...
> }
>
> That is, when we detect a file to be handled by the driver, emit the above
> error message and do not open the dataset, unless the user defines the
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer a
> feedback period of one year / 2 feature versions.
>
> Here's my own list of candidates for retirement (probably over-conservative).
> Mostly based on gut feeling. None of them are particularly bad citizens, but I
> have no indication that they are still used, which doesn't mean they aren't.
>
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> JPEGLS
> LAN
> MFF
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
>
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3)
> OpenAIR
> REC
> SDTS
> SUA
> SVG
> TIGER
> WALK
>
>
> Anything you'd add / remove ?
>
> What is not obvious is what would be the criterion for keeping a driver: 1,
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project needs the
> preservation of a driver to be able to justify its continued involvement, I'd
> tend to think it to be enough to keep it.
>
>
> Even
>


From jan.heckman at gmail.com  Sun Jan 10 16:09:56 2021
From: jan.heckman at gmail.com (Jan Heckman)
Date: Mon, 11 Jan 2021 01:09:56 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <54cb2ae8-452c-6937-1751-406dc28e1d4b@gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <54cb2ae8-452c-6937-1751-406dc28e1d4b@gmail.com>
Message-ID: <CAKMUAtD5Hq6FBJ7LJmFMZpcBKyO=-XDtUvMUmohZy446jqGVPA@mail.gmail.com>

Hey guys, I was just typing pretty much the same thing.
So these drivers could be removed gracefully with a trace allowing
gis-archeologists/archivists to use them.
I can just see the papers in my imagination.
Jan

On Mon, Jan 11, 2021 at 1:03 AM Stephen Woodbridge <
stephenwoodbridge37 at gmail.com> wrote:

> Even,
>
> This makes a lot of sense to me. How would you handle this in Python?
> Would it make sense to create a GDAL-removed repository and move stuff
> into it just so it is available if someone wants it. This would not be
> supported or updated by GDAL just making it available if someone
> wants/needs to fork it, something else like this?
>
> -Steve W
>
> On 1/10/2021 6:02 PM, Even Rouault wrote:
> > Hi,
> >
> > It's not spring yet, but I'm in a mood lately of axing useless things,
> and we
> > probably have tons of candidate for that in GDAL, especially in drivers.
> > I was going to just axe the DB2 driver
> > (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
> >
> > Any idea how we can know what is used and what isn't ? A "call-home"
> > functionality where we would track driver usage would only be acceptable
> if
> > people enable it and have network connectivity, so we won't probably get
> lots
> > of feedback. Having a spreadsheet with the driver list and asking people
> to
> > fill it would probably also receive little feedback. So the idea I had
> was to
> > do something like the following in the Open() method of a candidate for
> > removal:
> >
> > GDALDataset* FooDriver::Open( .... )
> > {
> >     if( !Identify(poOpenInfo) )
> >        return nullptr;
> >
> >     if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
> >     {
> >         CPLError(CE_Failure, CPLE_AppDefined,
> >      "Driver FOO is considered for removal in GDAL 3.5. You are invited "
> >      "to convert any dataset in that format to another more common one ."
> >      "If you need this driver in future GDAL versions, create a ticket
> at "
> >      "https://github.com/OSGeo/gdal (look first for an existing one
> first) to "
> >      "explain how critical it is for you (but the GDAL project may still
> "
> >      "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
> >      "configuration option / environment variable to YES");
> >         return nullptr;
> >      }
> >      ...
> > }
> >
> > That is, when we detect a file to be handled by the driver, emit the
> above
> > error message and do not open the dataset, unless the user defines the
> > environment variable.
> > Similarly in the Create()/CreateCopy() methods.
> > If we ship this in 3.3, with a 3.5 milestone for removal, this would
> offer a
> > feedback period of one year / 2 feature versions.
> >
> > Here's my own list of candidates for retirement (probably
> over-conservative).
> > Mostly based on gut feeling. None of them are particularly bad citizens,
> but I
> > have no indication that they are still used, which doesn't mean they
> aren't.
> >
> > * Raster side:
> > BPG
> > DB2Raster
> > DOQ1
> > DOQ2
> > E00GRID
> > Epsilon
> > FujiBAS
> > GS7BG
> > GSAG
> > IDA
> > JDEM
> > JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> > JPEGLS
> > LAN
> > MFF
> > MG4Lidar ?
> > NDF
> > NTv1
> > SDTS Raster
> > SGI
> > XPM
> > ZMap
> >
> > * Vector side:
> > AERONAVFAA
> > ESRI ArcObjects
> > ARCGEN
> > BNA
> > Cloudant
> > CouchDB
> > DB2
> > DODS
> > FMEObjects Gateway
> > Geomedia MDB
> > GMT ASCII Vectors
> > GTM
> > HTF
> > INGRES
> > MongoDB (the old one, superseded by MongoDBv3)
> > OpenAIR
> > REC
> > SDTS
> > SUA
> > SVG
> > TIGER
> > WALK
> >
> >
> > Anything you'd add / remove ?
> >
> > What is not obvious is what would be the criterion for keeping a driver:
> 1,
> > 10, 100 users asking for the driver to be kept ?
> > If a GDAL developer contributing to the overall good of the project
> needs the
> > preservation of a driver to be able to justify its continued
> involvement, I'd
> > tend to think it to be enough to keep it.
> >
> >
> > Even
> >
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/53bd1cf8/attachment.html>

From schwehr at gmail.com  Sun Jan 10 16:57:05 2021
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 10 Jan 2021 16:57:05 -0800
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <CACmBxysg0e1Z=DJEGBbfULAm4zP2b63sYHJK6_5mXykYrUL6kg@mail.gmail.com>

I am definitely for removing unused things that talk to servers or use
binary drivers.

I can see wanting to keep drivers that don't interact with servers for
posterity, but I think that cost is starting to get high.  A system like
you describe with a good lead time sounds good.

In the Google setup, I switched to using the set of minimum viable drivers
for business needs in our internal build.  The cost of having other drivers
was just too much. We have issues with custom filesystem support, tracking
of things that go through sandbox boundaries, and maximum binary size
(nothing like having your compiler bail from an OOM).


On Sun, Jan 10, 2021 at 3:02 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> It's not spring yet, but I'm in a mood lately of axing useless things, and
> we
> probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
>
> Any idea how we can know what is used and what isn't ? A "call-home"
> functionality where we would track driver usage would only be acceptable
> if
> people enable it and have network connectivity, so we won't probably get
> lots
> of feedback. Having a spreadsheet with the driver list and asking people
> to
> fill it would probably also receive little feedback. So the idea I had was
> to
> do something like the following in the Open() method of a candidate for
> removal:
>
> GDALDataset* FooDriver::Open( .... )
> {
>    if( !Identify(poOpenInfo) )
>       return nullptr;
>
>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>    {
>        CPLError(CE_Failure, CPLE_AppDefined,
>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>     "to convert any dataset in that format to another more common one ."
>     "If you need this driver in future GDAL versions, create a ticket at "
>     "https://github.com/OSGeo/gdal (look first for an existing one first)
> to "
>     "explain how critical it is for you (but the GDAL project may still "
>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>     "configuration option / environment variable to YES");
>        return nullptr;
>     }
>     ...
> }
>
> That is, when we detect a file to be handled by the driver, emit the above
> error message and do not open the dataset, unless the user defines the
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer
> a
> feedback period of one year / 2 feature versions.
>
> Here's my own list of candidates for retirement (probably
> over-conservative).
> Mostly based on gut feeling. None of them are particularly bad citizens,
> but I
> have no indication that they are still used, which doesn't mean they
> aren't.
>
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> JPEGLS
> LAN
> MFF
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
>
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3)
> OpenAIR
> REC
> SDTS
> SUA
> SVG
> TIGER
> WALK
>
>
> Anything you'd add / remove ?
>
> What is not obvious is what would be the criterion for keeping a driver:
> 1,
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project needs
> the
> preservation of a driver to be able to justify its continued involvement,
> I'd
> tend to think it to be enough to keep it.
>
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210110/61ec0df5/attachment-0001.html>

From andrew at aitchison.me.uk  Mon Jan 11 05:01:46 2021
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Mon, 11 Jan 2021 13:01:46 +0000 (GMT)
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <e4efd71e-ce8f-3fdc-4e98-47208c95bb43@aitchison.me.uk>

On Mon, 11 Jan 2021, Even Rouault wrote:

> It's not spring yet, but I'm in a mood lately of axing useless things, and
> we probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
            ...            ... 
> That is, when we detect a file to be handled by the driver, emit the above
> error message and do not open the dataset, unless the user defines the
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer a
> feedback period of one year / 2 feature versions.

That sounds a reasonable timetable.

The next Ubuntu LTS is due for release April 2022, so is likely to have
GDAL 3.4 and the avoidable warning, which is good. (If it had GDAL 3.5
people moving to it from a previous LTS would not see the warning ...)

Where are the costs in keeping these drivers ?
If as Kurt describes, the costs are for the user, we already have plugins
and options to not include drivers in the main binary. We could add a 3 way
switch like the kernel: builtin/plugin/not built which would make things
simple for packagers and users.

I am assuming that these are drivers that don't get much maintenance
at the moment, so the gain for GDAL developers is not having to add
new GDAL features to so many drivers ?

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From even.rouault at spatialys.com  Mon Jan 11 06:44:34 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Jan 2021 15:44:34 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <24409467.5ZiOI5qNVC@even-i700>

Hi,

trying to answer the different points raised up to now:

- SVG: let's keep it as it is used. This is exactly the feedback I'm seeking 
for. I had developed this as a toy, crazy me, I won't do it anymore. No idea 
anyone was using it actually.

- making those driver plugins. This would require significant work, and the 
purpose is to save work. Our current build infrastructure is not ready for 
easy plugification. And announcing they will be unmaintained is probably not 
efficient to know in advance the impact of the planned breakage. People don't 
read documentation. The only way to force people to react is to break them in 
some way.

- regarding Python, I'm not sure what the question is exactly. If it was how 
to still enable the drivers candidate for retirement to work, then it is just 
gdal.SetConfigOption('GDAL_ENABLE_DRIVER_FOO', 'YES')

- once we have decided which drivers should be retired, I don't find moving 
them to some cemetery repository very useful. Because that would lack part of 
the build scripts. What would be more useful is to add a paragraph in the 
documentation that drivers FOO, BAR, BAZ were retired in GDAL 3.5. That way 
people know they have to download a GDAL tarball or checkout a git tag before 
that release, or download a past OSGeo-Live VM, or Conda package, etc... And 
they will get (hopefully) functional code. Much better than the cemetery 
approach.

- regarding schedule:
   * GDAL 3.3, May 2021: version with drivers semi-retired
   * GDAL 3.4, November 2021: still with drivers semi-retired
   * GDAL 3.5, May 2022: retired drivers are gone
 So we won't get much feedback from Ubuntu LTS april 2022, as at that date, 
the drivers will have to be retired for the 3.5 release.

- Where are the costs in keeping these drivers ?
   * monetary: there is one, but I'm unable to quantify it
   * environmental: burn CPU cycles each time someone does a GDAL build
   * psychological: prevent developers from doing modernization in GDAL 
internals. When you know you have to change 250 drivers, you think twice 
before doing the change, and generally you conclude it is not worth it, or 
fallback to hacks to limit the amount of code change. We should probably trim 
down the list to 20 raster and vector drivers to have a real effect regarding 
that. For a next time :-)

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at lexort.com  Mon Jan 11 06:51:39 2021
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 11 Jan 2021 09:51:39 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <24409467.5ZiOI5qNVC@even-i700> (Even Rouault's message of "Mon, 
 11 Jan 2021 15:44:34 +0100")
References: <3167316.Bsjxy4uaUB@even-i700> <24409467.5ZiOI5qNVC@even-i700>
Message-ID: <rmi5z43v85g.fsf@s1.lexort.com>


Even Rouault <even.rouault at spatialys.com> writes:

> - Where are the costs in keeping these drivers ?
>    * monetary: there is one, but I'm unable to quantify it
>    * environmental: burn CPU cycles each time someone does a GDAL build
>    * psychological: prevent developers from doing modernization in GDAL 
> internals. When you know you have to change 250 drivers, you think twice 
> before doing the change, and generally you conclude it is not worth it, or 
> fallback to hacks to limit the amount of code change. We should probably trim 
> down the list to 20 raster and vector drivers to have a real effect regarding 
> that. For a next time :-)

It would probably help anchor the discussion for someone to send a list
of drivers with remove/keep as a straw proposal, not taken super
seriously, just to see roughly where we are.   Personally, I only use
maintstream things so am not too likely to be affected, but I don't have
a good grasp of the scope of the proposal.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/a910f589/attachment.sig>

From spoissantca at gmail.com  Mon Jan 11 07:59:35 2021
From: spoissantca at gmail.com (Stephane Poissant)
Date: Mon, 11 Jan 2021 10:59:35 -0500
Subject: [gdal-dev] gdal_cachemax configuration
Message-ID: <FC26FFFB-6C0C-4483-AEE4-8D4CB343E515@gmail.com>

Good day to all,

I am fairly new to goal / mapserver and I have to upgrade the servers to latest Linux available on Amazon. (CentOS 2 kinda)
I managed to get mapserver compiled and going properly. I?d like to configure the goal_cachemax to 512 but I cannot find
Where and how to apply this systemwide instead of per connection. 

[root at mapserver-0290 bin]# ./gdalinfo --version
GDAL 3.2.0, released 2020/10/26

[root at mapserver-0290 bin]# ./gdalinfo --config GDAL_CACHEMAX 512
Usage: gdalinfo [--help-general] [-json] [-mm] [-stats] [-hist] [-nogcp] [-nomd]
                [-norat] [-noct] [-nofl] [-checksum] [-proj4]
                [-listmdd] [-mdd domain|`all`] [-wkt_format WKT1|WKT2|...]*
                [-sd subdataset] [-oo NAME=VALUE]* [-if format]* datasetname

Any suggestions? Unless you have a better idea of what could cause this error type?
For the records, it works fine on Amazon Linux 1...


I get errors in the apache log like the following:

(IP and URL were replaced for security reasons)
?
[Mon Jan 11 14:39:49.128142 2021] [cgi:error] [pid 2498] [client x.x.x.x:65072] AH01215: GDAL: GDALOpen(PG:host=floodsource2.tk.com port=5432 dbname='floodsource' user='monkeysk' password=XXXXXXXXXXXXXXXXXXXXXX schema='public' table='flood_jba_cn_river_1500_2017_v2' mode='2', this=0x1d2bf80) succeeds as PostGISRaster.: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.143728 2021] [cgi:error] [pid 2794] [client x.x.x.x:65076] AH01215: GDAL: GDALOpen(PG:host=floodsource2.tk.com port=5432 dbname='floodsource' user='monkeysk' password=XXXXXXXXXXXXXXXXXXXXXX schema='public' table='flood_jba_cn_river_1500_2017_v2' mode='2', this=0x1273f80) succeeds as PostGISRaster.: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.144051 2021] [cgi:error] [pid 2792] [client x.x.x.x:65074] AH01215: GDAL: GDALOpen(PG:host=floodsource2.tk.com port=5432 dbname='floodsource' user='monkeysk' password=XXXXXXXXXXXXXXXXXXXXXX schema='public' table='flood_jba_cn_river_1500_2017_v2' mode='2', this=0x12baf80) succeeds as PostGISRaster.: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.146908 2021] [cgi:error] [pid 2495] [client x.x.x.x:65077] AH01215: GDAL: GDALOpen(PG:host=floodsource2.tk.com port=5432 dbname='floodsource' user='monkeysk' password=XXXXXXXXXXXXXXXXXXXXXX schema='public' table='flood_jba_cn_river_1500_2017_v2' mode='2', this=0x21abf80) succeeds as PostGISRaster.: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.156075 2021] [cgi:error] [pid 2800] [client x.x.x.x:65073] AH01215: GDAL: GDALOpen(PG:host=floodsource2.tk.com port=5432 dbname='floodsource' user='monkeysk' password=XXXXXXXXXXXXXXXXXXXXXX schema='public' table='flood_jba_cn_river_1500_2017_v2' mode='2', this=0x1debf80) succeeds as PostGISRaster.: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.156355 2021] [cgi:error] [pid 2793] [client x.x.x.x:65075] AH01215: GDAL: GDALOpen(PG:host=floodsource2.tk.com port=5432 dbname='floodsource' user='monkeysk' password=XXXXXXXXXXXXXXXXXXXXXX schema='public' table='flood_jba_cn_river_1500_2017_v2' mode='2', this=0x102af80) succeeds as PostGISRaster.: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.382585 2021] [cgi:error] [pid 2498] [client x.x.x.x:65072] AH01215: GDAL: GDAL_CACHEMAX = 388 MB: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.443576 2021] [cgi:error] [pid 2800] [client x.x.x.x:65073] AH01215: GDAL: GDAL_CACHEMAX = 388 MB: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.477139 2021] [cgi:error] [pid 2495] [client x.x.x.x:65077] AH01215: GDAL: GDAL_CACHEMAX = 388 MB: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.479542 2021] [cgi:error] [pid 2794] [client x.x.x.x:65076] AH01215: GDAL: GDAL_CACHEMAX = 388 MB: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.505870 2021] [cgi:error] [pid 2793] [client x.x.x.x:65075] AH01215: GDAL: GDAL_CACHEMAX = 388 MB: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/
[Mon Jan 11 14:39:49.527354 2021] [cgi:error] [pid 2792] [client x.x.x.x:65074] AH01215: GDAL: GDAL_CACHEMAX = 388 MB: /var/www/html/map/mapserv.cgi, referer: http://utility.something.com/

St?phane Poissant  
Portable: 514-793-3506
spoissantca at gmail.com

From gdal at stripfamily.net  Mon Jan 11 08:15:33 2021
From: gdal at stripfamily.net (David Strip)
Date: Mon, 11 Jan 2021 09:15:33 -0700
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <24409467.5ZiOI5qNVC@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700> <24409467.5ZiOI5qNVC@even-i700>
Message-ID: <687d5fa3-a38f-a424-20f4-44944616aabd@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/28880399/attachment.html>

From gdt at lexort.com  Mon Jan 11 08:18:59 2021
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 11 Jan 2021 11:18:59 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <rmi5z43v85g.fsf@s1.lexort.com> (Greg Troxel's message of "Mon,
 11 Jan 2021 09:51:39 -0500")
References: <3167316.Bsjxy4uaUB@even-i700> <24409467.5ZiOI5qNVC@even-i700>
 <rmi5z43v85g.fsf@s1.lexort.com>
Message-ID: <rmi1rertpjg.fsf@s1.lexort.com>


Sorry,  I didn't read the first message in it entirety before digging in
to the thread.

Reading over the proposed list of removals, nothing jumps out at me as
problematic.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/fde7ddd7/attachment.sig>

From kress.marius at icloud.com  Mon Jan 11 10:00:50 2021
From: kress.marius at icloud.com (=?utf-8?Q?Marius_Kre=C3=9F?=)
Date: Mon, 11 Jan 2021 19:00:50 +0100
Subject: [gdal-dev] Unable to install GDAL on macOS with pip
Message-ID: <B6274949-D919-4E81-87E7-30B295E356AA@icloud.com>

Dear GDAL developers and users,

I am unable to install GDAL on my Mac. I have set up Python with pyenv. When I enter pip install gdal I get a lot of exceptions that always end with FileNotFoundError: [Errno 2] No such file or directory: '../../apps/gdal-config? or  FileNotFoundError: [Errno 2] No such file or directory: 'gdal-config? The very last line says Could not find gdal-config. Make sure you have installed the GDAL native library and development headers. But that?s what I try to do, right?

When I download the package from http://download.osgeo.org/gdal/ and try to install it with pip install gdal-3.2.1.tar.gz I get the error message:

ERROR: Command errored out with exit status 1:
     command: /Users/marius/.pyenv/versions/3.9.0/bin/python3.9 -c 'import sys, setuptools, tokenize; sys.argv[0] = '"'"'/private/var/folders/99/kr62vcdn1nq7b376wln_0r6m0000gn/T/pip-req-build-hmpof14i/setup.py'"'"'; __file__='"'"'/private/var/folders/99/kr62vcdn1nq7b376wln_0r6m0000gn/T/pip-req-build-hmpof14i/setup.py'"'"';f=getattr(tokenize, '"'"'open'"'"', open)(__file__);code=f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' egg_info --egg-base /private/var/folders/99/kr62vcdn1nq7b376wln_0r6m0000gn/T/pip-pip-egg-info-3inooqvl
         cwd: /private/var/folders/99/kr62vcdn1nq7b376wln_0r6m0000gn/T/pip-req-build-hmpof14i/
    Complete output (5 lines):
    Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/Users/marius/.pyenv/versions/3.9.0/lib/python3.9/tokenize.py", line 392, in open
        buffer = _builtin_open(filename, 'rb')
    FileNotFoundError: [Errno 2] No such file or directory: '/private/var/folders/99/kr62vcdn1nq7b376wln_0r6m0000gn/T/pip-req-build-hmpof14i/setup.py'

Do you have any idea what could be the problem? There are no installation instructions on the website, so I assumed it can be installed with pip just like any other package.

Best regards,

Marius
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/b480ae9c/attachment-0001.html>

From chris.marsh at usask.ca  Mon Jan 11 10:18:31 2021
From: chris.marsh at usask.ca (Chris Marsh)
Date: Mon, 11 Jan 2021 12:18:31 -0600
Subject: [gdal-dev] Unable to install GDAL on macOS with pip
In-Reply-To: <B6274949-D919-4E81-87E7-30B295E356AA@icloud.com>
References: <B6274949-D919-4E81-87E7-30B295E356AA@icloud.com>
Message-ID: <CAFgDerGcB2XDokEi+N0qBmi=z8y=8KQ8H2CaO9M8w_LYWdmTgg@mail.gmail.com>

Hi,
You need to have the gdal binaries installed before pip install gdal will
work. Specifically, pip install gdal installs the python bindings for gdal.

In my opinion on mac, the easiest way is to install gdal via homebrew. Then
the configuration utility gdal-info should be on the path and pip install
GDAL should work
https://pypi.org/project/GDAL/

Going the homebrew route for gdal will ensure you have everything needed
for gdal to work and avoids the complication of having to compile gdal
yourself.

Personally, I use gdal from base homebrew and then use this repackaging of
the python gdal bindings. I've found it to be more reliable with venvs.
https://github.com/nextgis/pygdal

Both methods should work though,

Cheers
Chris
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/2e1bf5cf/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan 11 10:55:40 2021
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Mon, 11 Jan 2021 11:55:40 -0700 (MST)
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <1610391340786-0.post@n6.nabble.com>

Hi,

The joy of being a Windows user is that it is so easy to use old GDAL
versions if the binaries still happen to be on some dusty backup disk. Even
the FWTools including GDAL 1.7.0 from 2010 seemed to work fine and include
quite a many later removed drivers.

A few comments about the driver list:

- There are indeed questions about SVG in gis.stackexchange every now and
then.
- I used LAN a lot when FWTools was young and ERDAS wrote bad GeoTIFFs.
Things are probably changed since that. 
- GMT is an active project and some GMT developers appear on this list as
well. Maybe some of them happend to read this and say if GMT ASCII vectors
are still important for GMT. Or otherwise I can ask from the GMT forum.
- GPS Track Maker, as far as I know, is quite popular in Brazil. However,
when I used the software I just used GPX format for data transfer. Are there
any Brazilian GDAL user here to comment?

When it comes to Windows binaries, there is a very valuable archive in
https://gisinternals.com/archive.php. It would be pity if it would get lost
some day.

-Jukka Rahkonen-



Even Rouault-2 wrote
> Hi,
> 
> It's not spring yet, but I'm in a mood lately of axing useless things, and
> we 
> probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
> 
> Any idea how we can know what is used and what isn't ? A "call-home" 
> functionality where we would track driver usage would only be acceptable
> if 
> people enable it and have network connectivity, so we won't probably get
> lots 
> of feedback. Having a spreadsheet with the driver list and asking people
> to 
> fill it would probably also receive little feedback. So the idea I had was
> to 
> do something like the following in the Open() method of a candidate for 
> removal:
> 
> GDALDataset* FooDriver::Open( .... )
> {
>    if( !Identify(poOpenInfo) )
>       return nullptr;
> 
>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>    {
>        CPLError(CE_Failure, CPLE_AppDefined,
>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>     "to convert any dataset in that format to another more common one ."
>     "If you need this driver in future GDAL versions, create a ticket at "
>     "https://github.com/OSGeo/gdal (look first for an existing one first)
> to "
>     "explain how critical it is for you (but the GDAL project may still "
>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>     "configuration option / environment variable to YES");
>        return nullptr;
>     }
>     ...
> }
> 
> That is, when we detect a file to be handled by the driver, emit the above 
> error message and do not open the dataset, unless the user defines the 
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer
> a 
> feedback period of one year / 2 feature versions.
> 
> Here's my own list of candidates for retirement (probably
> over-conservative). 
> Mostly based on gut feeling. None of them are particularly bad citizens,
> but I 
> have no indication that they are still used, which doesn't mean they
> aren't.
> 
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> JPEGLS
> LAN
> MFF
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
> 
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3)
> OpenAIR
> REC
> SDTS
> SUA
> SVG
> TIGER
> WALK
> 
> 
> Anything you'd add / remove ?
> 
> What is not obvious is what would be the criterion for keeping a driver:
> 1, 
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project needs
> the 
> preservation of a driver to be able to justify its continued involvement,
> I'd 
> tend to think it to be enough to keep it.
> 
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From kress.marius at icloud.com  Mon Jan 11 11:37:46 2021
From: kress.marius at icloud.com (=?utf-8?Q?Marius_Kre=C3=9F?=)
Date: Mon, 11 Jan 2021 20:37:46 +0100
Subject: [gdal-dev] Unable to install GDAL on macOS with pip
In-Reply-To: <CAFgDerGcB2XDokEi+N0qBmi=z8y=8KQ8H2CaO9M8w_LYWdmTgg@mail.gmail.com>
References: <B6274949-D919-4E81-87E7-30B295E356AA@icloud.com>
 <CAFgDerGcB2XDokEi+N0qBmi=z8y=8KQ8H2CaO9M8w_LYWdmTgg@mail.gmail.com>
Message-ID: <365BEDDD-02E2-436D-81F5-5BBA1D43F388@icloud.com>

Thank you, this worked! Maybe this should be mentioned on the Download page? I think it is a bit incomplete in general: Nothing on macOS and the Windows section just mentions Conda and no alternatives (like gisinternals.com and OSGeo4W). Maybe it could be expanded?

Marius

> Am 11.01.2021 um 19:18 schrieb Chris Marsh <chris.marsh at usask.ca>:
> 
> Hi,
> You need to have the gdal binaries installed before pip install gdal will work. Specifically, pip install gdal installs the python bindings for gdal.
> 
> In my opinion on mac, the easiest way is to install gdal via homebrew. Then the configuration utility gdal-info should be on the path and pip install GDAL should work
> https://pypi.org/project/GDAL/ <https://pypi.org/project/GDAL/>
> 
> Going the homebrew route for gdal will ensure you have everything needed for gdal to work and avoids the complication of having to compile gdal yourself. 
> 
> Personally, I use gdal from base homebrew and then use this repackaging of the python gdal bindings. I've found it to be more reliable with venvs.
> https://github.com/nextgis/pygdal <https://github.com/nextgis/pygdal>
> 
> Both methods should work though,
> 
> Cheers
> Chris

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/18d8d048/attachment.html>

From chris.marsh at usask.ca  Mon Jan 11 11:50:21 2021
From: chris.marsh at usask.ca (Chris Marsh)
Date: Mon, 11 Jan 2021 13:50:21 -0600
Subject: [gdal-dev] Unable to install GDAL on macOS with pip
In-Reply-To: <365BEDDD-02E2-436D-81F5-5BBA1D43F388@icloud.com>
References: <B6274949-D919-4E81-87E7-30B295E356AA@icloud.com>
 <CAFgDerGcB2XDokEi+N0qBmi=z8y=8KQ8H2CaO9M8w_LYWdmTgg@mail.gmail.com>
 <365BEDDD-02E2-436D-81F5-5BBA1D43F388@icloud.com>
Message-ID: <CAFgDerH_1xJhFLqOChF_gzXzmodvYH1Xb15Opy89ON0=B1R-zQ@mail.gmail.com>

Glad to hear it.
I'm not sure what Even et al's stance on using homebrew as an official
recommendation is. I am just a user who has gone down this route myself

On Mon, Jan 11, 2021 at 1:37 PM Marius Kre? <kress.marius at icloud.com> wrote:

> CAUTION: External to USask. Verify sender and use caution with links and
> attachments. Forward suspicious emails to phishing at usask.ca
>
> Thank you, this worked! Maybe this should be mentioned on the Download
> page? I think it is a bit incomplete in general: Nothing on macOS and the
> Windows section just mentions Conda and no alternatives (like
> gisinternals.com and OSGeo4W). Maybe it could be expanded?
>
> Marius
>
> Am 11.01.2021 um 19:18 schrieb Chris Marsh <chris.marsh at usask.ca>:
>
> Hi,
> You need to have the gdal binaries installed before pip install gdal will
> work. Specifically, pip install gdal installs the python bindings for gdal.
>
> In my opinion on mac, the easiest way is to install gdal via homebrew.
> Then the configuration utility gdal-info should be on the path and pip
> install GDAL should work
> https://pypi.org/project/GDAL/
>
> Going the homebrew route for gdal will ensure you have everything needed
> for gdal to work and avoids the complication of having to compile gdal
> yourself.
>
> Personally, I use gdal from base homebrew and then use this repackaging of
> the python gdal bindings. I've found it to be more reliable with venvs.
> https://github.com/nextgis/pygdal
>
> Both methods should work though,
>
> Cheers
> Chris
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/3d1bb396/attachment-0001.html>

From jukka.rahkonen at maanmittauslaitos.fi  Mon Jan 11 13:10:03 2021
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Mon, 11 Jan 2021 21:10:03 +0000
Subject: [gdal-dev] Gdalwarp fails with Stereographic_North_Pole
Message-ID: <5996c5acdb91455f8b60a74b2474a3f1@maanmittauslaitos.fi>

Hi,

Have a look at this question https://gis.stackexchange.com/questions/383825/difference-between-qgis-export-and-gdalwarp?

The original poster managed to get good output with gdalwarp by warping first into EPSG:9040 and then into EPSG:4326 but that feels like a workaround and not a solution. I could reproduce the issue and I wonder what QGIS is doing differently.

-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/2a37dd0b/attachment.html>

From shayne.tueller at us.af.mil  Mon Jan 11 13:24:20 2021
From: shayne.tueller at us.af.mil (TUELLER, SHAYNE R CIV USAF AFMC 519 SWES/MXDEC)
Date: Mon, 11 Jan 2021 21:24:20 +0000
Subject: [gdal-dev] [Non-DoD Source] Re:  Considering drivers removal ?
In-Reply-To: <1610391340786-0.post@n6.nabble.com>
References: <3167316.Bsjxy4uaUB@even-i700>,
 <1610391340786-0.post@n6.nabble.com>
Message-ID: <CY1P111MB04710432DA6C45ABE22DD067C6AB0@CY1P111MB0471.NAMP111.PROD.OUTLOOK.COM>

I love FWTools. Still use it quite often.

I wish it was still actively maintained.

Shayne
________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of jratike80 <jukka.rahkonen at maanmittauslaitos.fi>
Sent: Monday, January 11, 2021 11:55 AM
To: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: [Non-DoD Source] Re: [gdal-dev] Considering drivers removal ?

Hi,

The joy of being a Windows user is that it is so easy to use old GDAL
versions if the binaries still happen to be on some dusty backup disk. Even
the FWTools including GDAL 1.7.0 from 2010 seemed to work fine and include
quite a many later removed drivers.

A few comments about the driver list:

- There are indeed questions about SVG in gis.stackexchange every now and
then.
- I used LAN a lot when FWTools was young and ERDAS wrote bad GeoTIFFs.
Things are probably changed since that.
- GMT is an active project and some GMT developers appear on this list as
well. Maybe some of them happend to read this and say if GMT ASCII vectors
are still important for GMT. Or otherwise I can ask from the GMT forum.
- GPS Track Maker, as far as I know, is quite popular in Brazil. However,
when I used the software I just used GPX format for data transfer. Are there
any Brazilian GDAL user here to comment?

When it comes to Windows binaries, there is a very valuable archive in
https://gisinternals.com/archive.php. It would be pity if it would get lost
some day.

-Jukka Rahkonen-



Even Rouault-2 wrote
> Hi,
>
> It's not spring yet, but I'm in a mood lately of axing useless things, and
> we
> probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
>
> Any idea how we can know what is used and what isn't ? A "call-home"
> functionality where we would track driver usage would only be acceptable
> if
> people enable it and have network connectivity, so we won't probably get
> lots
> of feedback. Having a spreadsheet with the driver list and asking people
> to
> fill it would probably also receive little feedback. So the idea I had was
> to
> do something like the following in the Open() method of a candidate for
> removal:
>
> GDALDataset* FooDriver::Open( .... )
> {
>    if( !Identify(poOpenInfo) )
>       return nullptr;
>
>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>    {
>        CPLError(CE_Failure, CPLE_AppDefined,
>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>     "to convert any dataset in that format to another more common one ."
>     "If you need this driver in future GDAL versions, create a ticket at "
>     "https://github.com/OSGeo/gdal (look first for an existing one first)
> to "
>     "explain how critical it is for you (but the GDAL project may still "
>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>     "configuration option / environment variable to YES");
>        return nullptr;
>     }
>     ...
> }
>
> That is, when we detect a file to be handled by the driver, emit the above
> error message and do not open the dataset, unless the user defines the
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer
> a
> feedback period of one year / 2 feature versions.
>
> Here's my own list of candidates for retirement (probably
> over-conservative).
> Mostly based on gut feeling. None of them are particularly bad citizens,
> but I
> have no indication that they are still used, which doesn't mean they
> aren't.
>
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> JPEGLS
> LAN
> MFF
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
>
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3)
> OpenAIR
> REC
> SDTS
> SUA
> SVG
> TIGER
> WALK
>
>
> Anything you'd add / remove ?
>
> What is not obvious is what would be the criterion for keeping a driver:
> 1,
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project needs
> the
> preservation of a driver to be able to justify its continued involvement,
> I'd
> tend to think it to be enough to keep it.
>
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/8226dd18/attachment.html>

From ricardo.garcia.silva at gmail.com  Mon Jan 11 14:16:25 2021
From: ricardo.garcia.silva at gmail.com (Ricardo Filipe Soares Garcia da)
Date: Mon, 11 Jan 2021 22:16:25 +0000
Subject: [gdal-dev] vector layer with Z coordinate - report extent in 3D
Message-ID: <CAFcNcQZJg3YaOxeBxAsPe8iteyZzqcr4ZnthK=BhJV=ffp3zPA@mail.gmail.com>

Hi list

Is there some brief way to get the Z extent of a vector layer? I mean
something analogous to the Layer.GetExtent() method, but which would
retrieve the extent of the Z coordinate?

OTherwise, it seems like I need to iterate over all features of the layer
and keep the min/max Z values. Shall this be a good tactic for retrieving
the Z extent of a vector?


Thanks in advance

-- 
___________________________ ___ __
Ricardo Garcia Silva
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/fb7866d9/attachment-0001.html>

From sean at mapbox.com  Mon Jan 11 14:40:37 2021
From: sean at mapbox.com (Sean Gillies)
Date: Mon, 11 Jan 2021 15:40:37 -0700
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <24409467.5ZiOI5qNVC@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700> <24409467.5ZiOI5qNVC@even-i700>
Message-ID: <CADPhZXy8uPQvpvOW1pc5hzahcXeN1zKTXQ_eoNhr8UFpkJ54Hw@mail.gmail.com>

Hi Even,

On Mon, Jan 11, 2021 at 7:44 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> trying to answer the different points raised up to now:
>
> - SVG: let's keep it as it is used. This is exactly the feedback I'm
> seeking
> for. I had developed this as a toy, crazy me, I won't do it anymore. No
> idea
> anyone was using it actually.


> - making those driver plugins. This would require significant work, and
> the
> purpose is to save work. Our current build infrastructure is not ready for
> easy plugification. And announcing they will be unmaintained is probably
> not
> efficient to know in advance the impact of the planned breakage. People
> don't
> read documentation. The only way to force people to react is to break them
> in
> some way.
>
> - regarding Python, I'm not sure what the question is exactly. If it was
> how
> to still enable the drivers candidate for retirement to work, then it is
> just
> gdal.SetConfigOption('GDAL_ENABLE_DRIVER_FOO', 'YES')
>

Making users explicitly turn these formats back on feels good to me. I
don't see a downside to it. We might want to consider one round of warnings
before setting this option's default to NO? Doing so would take care of the
operators of deployed applications who *do* pay attention to warnings.

Would it make any sense to retire read and write of formats on a different
schedule? The fewer SDTS files written in the next 6-12 months, the less
impact there will be when we remove the driver.

When the change is made to GDAL, I might bikeshed about the config option
name a bit.


> - once we have decided which drivers should be retired, I don't find
> moving
> them to some cemetery repository very useful. Because that would lack part
> of
> the build scripts. What would be more useful is to add a paragraph in the
> documentation that drivers FOO, BAR, BAZ were retired in GDAL 3.5. That
> way
> people know they have to download a GDAL tarball or checkout a git tag
> before
> that release, or download a past OSGeo-Live VM, or Conda package, etc...
> And
> they will get (hopefully) functional code. Much better than the cemetery
> approach.
>
> - regarding schedule:
>    * GDAL 3.3, May 2021: version with drivers semi-retired
>    * GDAL 3.4, November 2021: still with drivers semi-retired
>    * GDAL 3.5, May 2022: retired drivers are gone
>  So we won't get much feedback from Ubuntu LTS april 2022, as at that
> date,
> the drivers will have to be retired for the 3.5 release.
>
> - Where are the costs in keeping these drivers ?
>    * monetary: there is one, but I'm unable to quantify it
>    * environmental: burn CPU cycles each time someone does a GDAL build
>    * psychological: prevent developers from doing modernization in GDAL
> internals. When you know you have to change 250 drivers, you think twice
> before doing the change, and generally you conclude it is not worth it, or
> fallback to hacks to limit the amount of code change. We should probably
> trim
> down the list to 20 raster and vector drivers to have a real effect
> regarding
> that. For a next time :-)
>
> Even
>

Would we disable default compilation of these drivers in 3.3 as well? I'd
be in favor of that.

Thanks for writing that third bullet point. I've thought twice about
changes for exactly that reason.

Formats come and go. We can't expect the GDAL project and its maintainers
(mostly you!) to be the curators forever of all data.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/baaefb1d/attachment.html>

From warmerdam at pobox.com  Mon Jan 11 14:54:30 2021
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Mon, 11 Jan 2021 17:54:30 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <CA+YzLBd3_3k4bACABbwcTaLHFga7wq8GtSOnXr7MbJW=c=N+=A@mail.gmail.com>

Even,

My opinion is that old drivers which do not depend on external
libraries/services and that we have tests for should be retained until they
cause painful problems.  I would be supportive of dropping drivers for
which there is no apparent interest, and that are not buildable and
testable due to dependence on external libraries and services.  We can
always reintroduce them if someone comes forward and wants them and is
willing to help support them.

LAN, NTv1 and SDTS Raster are examples (IMHO) of relatively low value
drivers that should be retained because they are buildable, testable and
not problematic.

Best regards,
Frank


On Sun, Jan 10, 2021 at 6:02 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> It's not spring yet, but I'm in a mood lately of axing useless things, and
> we
> probably have tons of candidate for that in GDAL, especially in drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
>
> Any idea how we can know what is used and what isn't ? A "call-home"
> functionality where we would track driver usage would only be acceptable
> if
> people enable it and have network connectivity, so we won't probably get
> lots
> of feedback. Having a spreadsheet with the driver list and asking people
> to
> fill it would probably also receive little feedback. So the idea I had was
> to
> do something like the following in the Open() method of a candidate for
> removal:
>
> GDALDataset* FooDriver::Open( .... )
> {
>    if( !Identify(poOpenInfo) )
>       return nullptr;
>
>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>    {
>        CPLError(CE_Failure, CPLE_AppDefined,
>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>     "to convert any dataset in that format to another more common one ."
>     "If you need this driver in future GDAL versions, create a ticket at "
>     "https://github.com/OSGeo/gdal (look first for an existing one first)
> to "
>     "explain how critical it is for you (but the GDAL project may still "
>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>     "configuration option / environment variable to YES");
>        return nullptr;
>     }
>     ...
> }
>
> That is, when we detect a file to be handled by the driver, emit the above
> error message and do not open the dataset, unless the user defines the
> environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would offer
> a
> feedback period of one year / 2 feature versions.
>
> Here's my own list of candidates for retirement (probably
> over-conservative).
> Mostly based on gut feeling. None of them are particularly bad citizens,
> but I
> have no indication that they are still used, which doesn't mean they
> aren't.
>
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
> JPEGLS
> LAN
> MFF
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
>
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3)
> OpenAIR
> REC
> SDTS
> SUA
> SVG
> TIGER
> WALK
>
>
> Anything you'd add / remove ?
>
> What is not obvious is what would be the criterion for keeping a driver:
> 1,
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project needs
> the
> preservation of a driver to be able to justify its continued involvement,
> I'd
> tend to think it to be enough to keep it.
>
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>


-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | +1 650-701-7823
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/8e1951fd/attachment.html>

From jluis at ualg.pt  Mon Jan 11 15:34:20 2021
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Mon, 11 Jan 2021 23:34:20 +0000
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <1610391340786-0.post@n6.nabble.com>
References: <3167316.Bsjxy4uaUB@even-i700> <1610391340786-0.post@n6.nabble.com>
Message-ID: <AM6PR04MB39597891A955CBE62593BB8EA6AB0@AM6PR04MB3959.eurprd04.prod.outlook.com>

> - GMT is an active project and some GMT developers appear on this list as well. Maybe some of them happend to read this and say if GMT ASCII vectors are still important for GMT. Or otherwise I can ask from the GMT forum.


Right.

The GMT raster driver is from the times GNT used a 1-d array to represent 2-D grids in netCDF. That was abandoned some ~15 years ago for COARS compliant nc grids and is a good candidate for deprecation.

The " GMT ASCII vectors" format (written under contract with NIWA) is still very much used (under the hood) by the GMT library and should be kept alive until we finish the integration with the GDAL vector side.

Joaquim




-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of jratike80
Sent: Monday, January 11, 2021 6:56 PM
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] Considering drivers removal ?

Hi,

The joy of being a Windows user is that it is so easy to use old GDAL versions if the binaries still happen to be on some dusty backup disk. Even the FWTools including GDAL 1.7.0 from 2010 seemed to work fine and include quite a many later removed drivers.

A few comments about the driver list:

- There are indeed questions about SVG in gis.stackexchange every now and then.
- I used LAN a lot when FWTools was young and ERDAS wrote bad GeoTIFFs.
Things are probably changed since that. 
- GMT is an active project and some GMT developers appear on this list as well. Maybe some of them happend to read this and say if GMT ASCII vectors are still important for GMT. Or otherwise I can ask from the GMT forum.
- GPS Track Maker, as far as I know, is quite popular in Brazil. However, when I used the software I just used GPX format for data transfer. Are there any Brazilian GDAL user here to comment?

When it comes to Windows binaries, there is a very valuable archive in https://gisinternals.com/archive.php. It would be pity if it would get lost some day.

-Jukka Rahkonen-



Even Rouault-2 wrote
> Hi,
> 
> It's not spring yet, but I'm in a mood lately of axing useless things, 
> and we probably have tons of candidate for that in GDAL, especially in 
> drivers.
> I was going to just axe the DB2 driver
> (https://github.com/OSGeo/gdal/pull/3366) but the issue is more general.
> 
> Any idea how we can know what is used and what isn't ? A "call-home" 
> functionality where we would track driver usage would only be 
> acceptable if people enable it and have network connectivity, so we 
> won't probably get lots of feedback. Having a spreadsheet with the 
> driver list and asking people to fill it would probably also receive 
> little feedback. So the idea I had was to do something like the 
> following in the Open() method of a candidate for
> removal:
> 
> GDALDataset* FooDriver::Open( .... )
> {
>    if( !Identify(poOpenInfo) )
>       return nullptr;
> 
>    if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
>    {
>        CPLError(CE_Failure, CPLE_AppDefined,
>     "Driver FOO is considered for removal in GDAL 3.5. You are invited "
>     "to convert any dataset in that format to another more common one ."
>     "If you need this driver in future GDAL versions, create a ticket at "
>     "https://github.com/OSGeo/gdal (look first for an existing one 
> first) to "
>     "explain how critical it is for you (but the GDAL project may still "
>     "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
>     "configuration option / environment variable to YES");
>        return nullptr;
>     }
>     ...
> }
> 
> That is, when we detect a file to be handled by the driver, emit the 
> above error message and do not open the dataset, unless the user 
> defines the environment variable.
> Similarly in the Create()/CreateCopy() methods.
> If we ship this in 3.3, with a 3.5 milestone for removal, this would 
> offer a feedback period of one year / 2 feature versions.
> 
> Here's my own list of candidates for retirement (probably 
> over-conservative).
> Mostly based on gut feeling. None of them are particularly bad 
> citizens, but I have no indication that they are still used, which 
> doesn't mean they aren't.
> 
> * Raster side:
> BPG
> DB2Raster
> DOQ1
> DOQ2
> E00GRID
> Epsilon
> FujiBAS
> GS7BG
> GSAG
> IDA
> JDEM
> JPEG2000 (Jasper): JP2OpenJPEG is a better replacement JPEGLS LAN MFF 
> MG4Lidar ?
> NDF
> NTv1
> SDTS Raster
> SGI
> XPM
> ZMap
> 
> * Vector side:
> AERONAVFAA
> ESRI ArcObjects
> ARCGEN
> BNA
> Cloudant
> CouchDB
> DB2
> DODS
> FMEObjects Gateway
> Geomedia MDB
> GMT ASCII Vectors
> GTM
> HTF
> INGRES
> MongoDB (the old one, superseded by MongoDBv3) OpenAIR REC SDTS SUA 
> SVG TIGER WALK
> 
> 
> Anything you'd add / remove ?
> 
> What is not obvious is what would be the criterion for keeping a driver:
> 1,
> 10, 100 users asking for the driver to be kept ?
> If a GDAL developer contributing to the overall good of the project 
> needs the preservation of a driver to be able to justify its continued 
> involvement, I'd tend to think it to be enough to keep it.
> 
> 
> Even
> 
> --
> Spatialys - Geospatial professional services http://www.spatialys.com 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From schwehr at gmail.com  Mon Jan 11 15:51:43 2021
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 11 Jan 2021 15:51:43 -0800
Subject: [gdal-dev] netCDF chunk fetch failed
Message-ID: <CACmBxysPR=6Q=2Mm8gUY+t_pneCjT4-HD7To9Q1sg-FR2tOLxg@mail.gmail.com>

Hi all,

In a build of gdal 3.2.0, I'm seeing this error: "netCDF chunk fetch
failed" for 2 out of 5 subdatasets.  Is there an easy way to handle this so
the bad data is returned as the nodata value?  And also, any idea what is
actually wrong with the netcdf files?

I am in contact with the NOAA folks who made this data.

Thanks!
-kurt



gsutil cp
gs://gcp-public-data-goes-16/ABI-L2-FDCF/2017/263/21/OR_ABI-L2-FDCF-M3_G16_s20172632115407_e20172632126173_c20172632126283.nc
.
gsutil cp
gs://gcp-public-data-goes-16/ABI-L2-FDCF/2018/123/12/OR_ABI-L2-FDCF-M3_G16_s20181231215382_e20181231226149_c20181231226258.nc
.
gsutil cp
gs://gcp-public-data-goes-16/ABI-L2-FDCF/2018/324/18/OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc
.
gsutil cp
gs://gcp-public-data-goes-16/ABI-L2-FDCF/2020/247/16/OR_ABI-L2-FDCF-M6_G16_s20202471650186_e20202471659494_c20202471700318.nc
.


for subdataset in Area Temp Mask Power DQF; do
    echo $subdataset
    (gdalinfo -stats
NETCDF:OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc:$subdataset
| grep 'Band 1');
done

Area
Warning 1: netCDFDataset::valid_range: min > max:
  min: 0.000000
  max: -6.000000

ERROR 1: netCDF chunk fetch failed: #-101 (NetCDF: HDF error)
ERROR 1:
NETCDF:OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc:Area,
band 1: IReadBlock failed at X offset 19, Y offset 10: netCDF chunk fetch
failed: #-101 (NetCDF: HDF error)
Band 1 Block=226x226 Type=Int16, ColorInterp=Undefined
Temp
Warning 1: netCDFDataset::valid_range: min > max:
  min: 0.000000
  max: -6.000000
Band 1 Block=226x226 Type=Int16, ColorInterp=Undefined
Mask
ERROR 1: netCDF chunk fetch failed: #-101 (NetCDF: HDF error)
ERROR 1:
NETCDF:OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc:Mask,
band 1: IReadBlock failed at X offset 4, Y offset 11: netCDF chunk fetch
failed: #-101 (NetCDF: HDF error)
Band 1 Block=226x226 Type=Int16, ColorInterp=Undefined
Power
Band 1 Block=226x226 Type=Float32, ColorInterp=Undefined
DQF
Band 1 Block=226x226 Type=Byte, ColorInterp=Undefined
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210111/b091a47b/attachment.html>

From thare at usgs.gov  Mon Jan 11 16:08:54 2021
From: thare at usgs.gov (Hare, Trent M)
Date: Tue, 12 Jan 2021 00:08:54 +0000
Subject: [gdal-dev] [EXTERNAL] Re:  Considering drivers removal ?
In-Reply-To: <CA+YzLBd3_3k4bACABbwcTaLHFga7wq8GtSOnXr7MbJW=c=N+=A@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>,
 <CA+YzLBd3_3k4bACABbwcTaLHFga7wq8GtSOnXr7MbJW=c=N+=A@mail.gmail.com>
Message-ID: <SJ0PR09MB649648A993831B84E43A70F0D2AB0@SJ0PR09MB6496.namprd09.prod.outlook.com>

Speaking on behave of folks who support archives, I highly recommend keeping old drivers, unless as Frank stated, they cause an issue (code or license). We are often faced with dealing with code rot, but in the same vein, we will also find ourselves dealing with more and more outdated file formats. I would much rather keep an old harmless driver around than trying to install crusty binaries (or compile old code). To clean-up the growing list of drivers, perhaps the code and driver listings can be grouped together (only shown with some flag .e.g. --show_crusty_drivers :-).

my 2 cents,
Trent



________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Frank Warmerdam <warmerdam at pobox.com>
Sent: Monday, January 11, 2021 3:54 PM
To: Even Rouault <even.rouault at spatialys.com>
Cc: gdal dev <gdal-dev at lists.osgeo.org>
Subject: [EXTERNAL] Re: [gdal-dev] Considering drivers removal ?


 Even,

My opinion is that old drivers which do not depend on external libraries/services and that we have tests for should be retained until they cause painful problems.  I would be supportive of dropping drivers for which there is no apparent interest, and that are not buildable and testable due to dependence on external libraries and services.  We can always reintroduce them if someone comes forward and wants them and is willing to help support them.

LAN, NTv1 and SDTS Raster are examples (IMHO) of relatively low value drivers that should be retained because they are buildable, testable and not problematic.

Best regards,
Frank


On Sun, Jan 10, 2021 at 6:02 PM Even Rouault <even.rouault at spatialys.com<mailto:even.rouault at spatialys.com>> wrote:
Hi,

It's not spring yet, but I'm in a mood lately of axing useless things, and we
probably have tons of candidate for that in GDAL, especially in drivers.
I was going to just axe the DB2 driver
(https://github.com/OSGeo/gdal/pull/3366<https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FOSGeo%2Fgdal%2Fpull%2F3366&data=04%7C01%7Cthare%40usgs.gov%7C1e2f55b493a14743e05308d8b68403af%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637460025413382723%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&sdata=yL2QV58xeFIATK6fhCNe9D5spR49Hi9wdmOFwPZLwV4%3D&reserved=0>) but the issue is more general.

Any idea how we can know what is used and what isn't ? A "call-home"
functionality where we would track driver usage would only be acceptable if
people enable it and have network connectivity, so we won't probably get lots
of feedback. Having a spreadsheet with the driver list and asking people to
fill it would probably also receive little feedback. So the idea I had was to
do something like the following in the Open() method of a candidate for
removal:

GDALDataset* FooDriver::Open( .... )
{
   if( !Identify(poOpenInfo) )
      return nullptr;

   if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
   {
       CPLError(CE_Failure, CPLE_AppDefined,
    "Driver FOO is considered for removal in GDAL 3.5. You are invited "
    "to convert any dataset in that format to another more common one ."
    "If you need this driver in future GDAL versions, create a ticket at "
    "https://github.com/OSGeo/gdal<https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FOSGeo%2Fgdal&data=04%7C01%7Cthare%40usgs.gov%7C1e2f55b493a14743e05308d8b68403af%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637460025413382723%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&sdata=acUQRtJEPXcmhT0cB0VeH0pRzCc8r5n5Pj7E1EtdFjA%3D&reserved=0> (look first for an existing one first) to "
    "explain how critical it is for you (but the GDAL project may still "
    "remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
    "configuration option / environment variable to YES");
       return nullptr;
    }
    ...
}

That is, when we detect a file to be handled by the driver, emit the above
error message and do not open the dataset, unless the user defines the
environment variable.
Similarly in the Create()/CreateCopy() methods.
If we ship this in 3.3, with a 3.5 milestone for removal, this would offer a
feedback period of one year / 2 feature versions.

Here's my own list of candidates for retirement (probably over-conservative).
Mostly based on gut feeling. None of them are particularly bad citizens, but I
have no indication that they are still used, which doesn't mean they aren't.

* Raster side:
BPG
DB2Raster
DOQ1
DOQ2
E00GRID
Epsilon
FujiBAS
GS7BG
GSAG
IDA
JDEM
JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
JPEGLS
LAN
MFF
MG4Lidar ?
NDF
NTv1
SDTS Raster
SGI
XPM
ZMap

* Vector side:
AERONAVFAA
ESRI ArcObjects
ARCGEN
BNA
Cloudant
CouchDB
DB2
DODS
FMEObjects Gateway
Geomedia MDB
GMT ASCII Vectors
GTM
HTF
INGRES
MongoDB (the old one, superseded by MongoDBv3)
OpenAIR
REC
SDTS
SUA
SVG
TIGER
WALK


Anything you'd add / remove ?

What is not obvious is what would be the criterion for keeping a driver: 1,
10, 100 users asking for the driver to be kept ?
If a GDAL developer contributing to the overall good of the project needs the
preservation of a driver to be able to justify its continued involvement, I'd
tend to think it to be enough to keep it.


Even

--
Spatialys - Geospatial professional services
http://www.spatialys.com<https://gcc02.safelinks.protection.outlook.com/?url=http%3A%2F%2Fwww.spatialys.com%2F&data=04%7C01%7Cthare%40usgs.gov%7C1e2f55b493a14743e05308d8b68403af%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637460025413392679%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&sdata=BLvei4JhJxnKvFiWEo2uq5u3uNOvvZ%2FowLqGsOqqmjE%3D&reserved=0>
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev<https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fgdal-dev&data=04%7C01%7Cthare%40usgs.gov%7C1e2f55b493a14743e05308d8b68403af%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637460025413392679%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&sdata=vrqrivmgWe6K9hicpHpkREkj85zYGQsJ7loflu9I3VQ%3D&reserved=0>


--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam at pobox.com<mailto:warmerdam at pobox.com>
light and sound - activate the windows | +1 650-701-7823
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/9b7cb4c9/attachment-0001.html>

From jed.kaplan at arve-research.com  Mon Jan 11 18:38:53 2021
From: jed.kaplan at arve-research.com (Jed O. Kaplan)
Date: Tue, 12 Jan 2021 10:38:53 +0800
Subject: [gdal-dev] Considering drivers removal ?
Message-ID: <4702685F-563D-4A9F-99AD-3A95BCF1A885@arve-research.com>

I for one am using the GMT vector driver for GDAL on a regular basis, e.g., for integration between GRASS GIS and GMT for cartography. I am grateful to the developers for their continued support for this driver.

Thanks, Jed


From julien.demaria at acri-st.fr  Tue Jan 12 01:00:39 2021
From: julien.demaria at acri-st.fr (Julien Demaria)
Date: Tue, 12 Jan 2021 09:00:39 +0000
Subject: [gdal-dev] netCDF chunk fetch failed
In-Reply-To: <CACmBxysPR=6Q=2Mm8gUY+t_pneCjT4-HD7To9Q1sg-FR2tOLxg@mail.gmail.com>
References: <CACmBxysPR=6Q=2Mm8gUY+t_pneCjT4-HD7To9Q1sg-FR2tOLxg@mail.gmail.com>
Message-ID: <3B970FB76033264EB34479EC8A365E1104E93C2D8F@vwiexc030.acri.local>

Kurt,

I tried the latest version of NetCDF?s nccopy utility on your files and it also failed.  Same with an old NetCDF v4.2/HDF5 v1.8.9 version.
So the files seem wrong/corrupted for an unknow reason, or created with a specific NetCDF/HDF5 version which include a compatibility break.
Did you get answer from NOAA?
I?m not sure if GDAL should handle this case (skip failed chunks and set them to nodata).

Best,
Julien


De : gdal-dev <gdal-dev-bounces at lists.osgeo.org> De la part de Kurt Schwehr
Envoy? : mardi 12 janvier 2021 00:52
? : gdal dev <gdal-dev at lists.osgeo.org>
Objet : [gdal-dev] netCDF chunk fetch failed

Hi all,

In a build of gdal 3.2.0, I'm seeing this error: "netCDF chunk fetch failed" for 2 out of 5 subdatasets.  Is there an easy way to handle this so the bad data is returned as the nodata value?  And also, any idea what is actually wrong with the netcdf files?

I am in contact with the NOAA folks who made this data.

Thanks!
-kurt



gsutil cp gs://gcp-public-data-goes-16/ABI-L2-FDCF/2017/263/21/OR_ABI-L2-FDCF-M3_G16_s20172632115407_e20172632126173_c20172632126283.nc .
gsutil cp gs://gcp-public-data-goes-16/ABI-L2-FDCF/2018/123/12/OR_ABI-L2-FDCF-M3_G16_s20181231215382_e20181231226149_c20181231226258.nc .
gsutil cp gs://gcp-public-data-goes-16/ABI-L2-FDCF/2018/324/18/OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc .
gsutil cp gs://gcp-public-data-goes-16/ABI-L2-FDCF/2020/247/16/OR_ABI-L2-FDCF-M6_G16_s20202471650186_e20202471659494_c20202471700318.nc .


for subdataset in Area Temp Mask Power DQF; do
    echo $subdataset
    (gdalinfo -stats NETCDF:OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc:$subdataset | grep 'Band 1');
done

Area
Warning 1: netCDFDataset::valid_range: min > max:
  min: 0.000000
  max: -6.000000

ERROR 1: netCDF chunk fetch failed: #-101 (NetCDF: HDF error)
ERROR 1: NETCDF:OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc:Area, band 1: IReadBlock failed at X offset 19, Y offset 10: netCDF chunk fetch failed: #-101 (NetCDF: HDF error)
Band 1 Block=226x226 Type=Int16, ColorInterp=Undefined
Temp
Warning 1: netCDFDataset::valid_range: min > max:
  min: 0.000000
  max: -6.000000
Band 1 Block=226x226 Type=Int16, ColorInterp=Undefined
Mask
ERROR 1: netCDF chunk fetch failed: #-101 (NetCDF: HDF error)
ERROR 1: NETCDF:OR_ABI-L2-FDCF-M3_G16_s20183241845341_e20183241856108_c20183241856213.nc:Mask, band 1: IReadBlock failed at X offset 4, Y offset 11: netCDF chunk fetch failed: #-101 (NetCDF: HDF error)
Band 1 Block=226x226 Type=Int16, ColorInterp=Undefined
Power
Band 1 Block=226x226 Type=Float32, ColorInterp=Undefined
DQF
Band 1 Block=226x226 Type=Byte, ColorInterp=Undefined
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/568333bc/attachment.html>

From felix.kessler1 at web.de  Tue Jan 12 01:27:07 2021
From: felix.kessler1 at web.de (=?UTF-8?Q?Felix_Ke=c3=9fler?=)
Date: Tue, 12 Jan 2021 10:27:07 +0100
Subject: [gdal-dev] TargetAlignedPixels for Python-GdalWarp when reprojecting
Message-ID: <0aacbb0a-544a-0af2-9ff7-c9b42631638e@web.de>

Hey Guys,
I am trying to reproject different satellite images to the same UTM-Zone
using gdalwarp in Python
It works so far, but I can not align the pixels. Is there a possibility?

I also opened a question on stackexchange, there are some images and my
current code:

https://gis.stackexchange.com/questions/384012/how-can-i-align-the-pixels-with-using-gdal-and-python



Thanks,
Felix


From conormcindoe1 at gmail.com  Tue Jan 12 03:55:43 2021
From: conormcindoe1 at gmail.com (Conor McIndoe)
Date: Tue, 12 Jan 2021 11:55:43 +0000
Subject: [gdal-dev] Registering C++ Pixel Functions for Command-Line
 Utilities
Message-ID: <97f91605-aa15-c7c0-71d7-ae74d7f1933e@gmail.com>

Hello developers,

I am just learning the ropes with GDAL so apologies if some of this is 
quite far off. Also apologies in advance for the essay :)

I am trying to register a pixel function, written in C++, in order to 
produce a VRT and eventually a TIF from some input TIFs. I am trying to 
follow an thread from this mailing list 
(https://lists.osgeo.org/pipermail/gdal-dev/2011-May/028742.html) to 
make GDAL aware of a shared library which contains and registers the 
pixel function. Hopefully there is some clear error here which one of 
you can spot?

I have adapted the example found at the VRT reference page 
(https://gdal.org/drivers/raster/vrt.html) to produce a function which 
sets every pixel equal to 1 (just to test the workflow):

// src/gdalPixelFunctions.cpp

#include "gdal.h"
#include "cpl_conv.h"
#include "gdal_priv.h"

#include <iostream>

CPLErr OneFunction(
 ??? void **papoSources, int nSources, void *pData,
 ??? int nXSize, int nYSize, GDALDataType eSrcType,
 ??? GDALDataType eBufType, int nPixelSpace, int nLineSpace
)
{
 ??? int ii, iLine, iCol;
 ??? double pix_val;
 ??? double x0, x3, x4, x8;

 ??? if(nSources != 4) return CE_Failure;

 ??? for(iLine = 0; iLine < nYSize; iLine++)
 ??? {
 ??????? for(iCol = 0; iCol < nXSize; iCol++)
 ??????? {
 ??????????? ii = iLine * nXSize + iCol;

 ??????????? /* Source raster pixels may be obtained with SRCVAL macro */
 ??????????? x0 = SRCVAL(papoSources[0], eSrcType, ii);
 ??????????? x3 = SRCVAL(papoSources[1], eSrcType, ii);
 ??????????? x4 = SRCVAL(papoSources[2], eSrcType, ii);
 ??????????? x8 = SRCVAL(papoSources[3], eSrcType, ii);

 ??????????? pix_val = 1;

 ??????????? GDALCopyWords(
 ??????????????? &pix_val,
 ??????????????? GDT_Float64,
 ??????????????? 0,
 ??????????????? ((GByte *)pData) + nLineSpace * iLine + iCol * nPixelSpace,
 ??????????????? eBufType,
 ??????????????? nPixelSpace,
 ??????????????? 1
 ??????????? );
 ??????? }
 ??? }

 ??? return CE_None;
}

void GDALRegisterMe()
{
 ??? std::cout << "Inside GDALRegisterME()" << std::endl;
 ??? GDALAddDerivedBandPixelFunc("OneFunction", OneFunction);
}


Compilation:

g++ -std=c++20 -fPIC -lgdal -c src/gdalPixelFunctions.cpp -o 
build/gdal_pixelFunctions.o

g++ -lgdal -shared build/gdal_pixelFunctions.o -o 
build/gdal_pixelFunctions.so

export GDAL_DRIVER_PATH="/path/to/build"


Attempting to call:

gdal_translate testVrt.vrt testVrt.tif

(where testVrt.vrt references the OneFunction pixel function) results in 
the following error messages:

ERROR 1: /path/to/build/gdal_pixelFunctions.so: undefined symbol: 
GDALRegisterMe
ERROR 1: /path/to/build/gdal_pixelFunctions.so: undefined symbol: 
GDALRegister_pixelFunctions

I have also tried registering by defining a void 
GDALRegister_pixelFunctions() but with the same issue. I assume this 
error means that GDAL is looking in the shared library for these two 
register functions and failing to find them?

Thank you for your help and sorry for the long post!


From thomas.bonfort at gmail.com  Tue Jan 12 04:02:39 2021
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Tue, 12 Jan 2021 13:02:39 +0100
Subject: [gdal-dev] Registering C++ Pixel Functions for Command-Line
 Utilities
In-Reply-To: <97f91605-aa15-c7c0-71d7-ae74d7f1933e@gmail.com>
References: <97f91605-aa15-c7c0-71d7-ae74d7f1933e@gmail.com>
Message-ID: <CAOM3y2hGktoryY+G3i3QL5p6VUJem-YMRN942jk8K3nKX2j-nA@mail.gmail.com>

Conor,
I suspect that you should add an
extern "C" {
void GDALRegisterMe();
}
line at the beginning of your cpp file.

--
Thomas

On Tue, Jan 12, 2021 at 12:56 PM Conor McIndoe <conormcindoe1 at gmail.com>
wrote:

> Hello developers,
>
> I am just learning the ropes with GDAL so apologies if some of this is
> quite far off. Also apologies in advance for the essay :)
>
> I am trying to register a pixel function, written in C++, in order to
> produce a VRT and eventually a TIF from some input TIFs. I am trying to
> follow an thread from this mailing list
> (https://lists.osgeo.org/pipermail/gdal-dev/2011-May/028742.html) to
> make GDAL aware of a shared library which contains and registers the
> pixel function. Hopefully there is some clear error here which one of
> you can spot?
>
> I have adapted the example found at the VRT reference page
> (https://gdal.org/drivers/raster/vrt.html) to produce a function which
> sets every pixel equal to 1 (just to test the workflow):
>
> // src/gdalPixelFunctions.cpp
>
> #include "gdal.h"
> #include "cpl_conv.h"
> #include "gdal_priv.h"
>
> #include <iostream>
>
> CPLErr OneFunction(
>      void **papoSources, int nSources, void *pData,
>      int nXSize, int nYSize, GDALDataType eSrcType,
>      GDALDataType eBufType, int nPixelSpace, int nLineSpace
> )
> {
>      int ii, iLine, iCol;
>      double pix_val;
>      double x0, x3, x4, x8;
>
>      if(nSources != 4) return CE_Failure;
>
>      for(iLine = 0; iLine < nYSize; iLine++)
>      {
>          for(iCol = 0; iCol < nXSize; iCol++)
>          {
>              ii = iLine * nXSize + iCol;
>
>              /* Source raster pixels may be obtained with SRCVAL macro */
>              x0 = SRCVAL(papoSources[0], eSrcType, ii);
>              x3 = SRCVAL(papoSources[1], eSrcType, ii);
>              x4 = SRCVAL(papoSources[2], eSrcType, ii);
>              x8 = SRCVAL(papoSources[3], eSrcType, ii);
>
>              pix_val = 1;
>
>              GDALCopyWords(
>                  &pix_val,
>                  GDT_Float64,
>                  0,
>                  ((GByte *)pData) + nLineSpace * iLine + iCol *
> nPixelSpace,
>                  eBufType,
>                  nPixelSpace,
>                  1
>              );
>          }
>      }
>
>      return CE_None;
> }
>
> void GDALRegisterMe()
> {
>      std::cout << "Inside GDALRegisterME()" << std::endl;
>      GDALAddDerivedBandPixelFunc("OneFunction", OneFunction);
> }
>
>
> Compilation:
>
> g++ -std=c++20 -fPIC -lgdal -c src/gdalPixelFunctions.cpp -o
> build/gdal_pixelFunctions.o
>
> g++ -lgdal -shared build/gdal_pixelFunctions.o -o
> build/gdal_pixelFunctions.so
>
> export GDAL_DRIVER_PATH="/path/to/build"
>
>
> Attempting to call:
>
> gdal_translate testVrt.vrt testVrt.tif
>
> (where testVrt.vrt references the OneFunction pixel function) results in
> the following error messages:
>
> ERROR 1: /path/to/build/gdal_pixelFunctions.so: undefined symbol:
> GDALRegisterMe
> ERROR 1: /path/to/build/gdal_pixelFunctions.so: undefined symbol:
> GDALRegister_pixelFunctions
>
> I have also tried registering by defining a void
> GDALRegister_pixelFunctions() but with the same issue. I assume this
> error means that GDAL is looking in the shared library for these two
> register functions and failing to find them?
>
> Thank you for your help and sorry for the long post!
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/a332c5a5/attachment-0001.html>

From duncfw at gmail.com  Tue Jan 12 04:03:18 2021
From: duncfw at gmail.com (duncfw at gmail.com)
Date: Tue, 12 Jan 2021 12:03:18 +0000
Subject: [gdal-dev] NetCDF on S3?
Message-ID: <CAGQKFGBYbkgc_Aio9bwZuNMYPZFafxAiykxvBo+z1GSV0DZ6rg@mail.gmail.com>

Hello,
I'm trying to open a NetCDF file from S3 with Gdal and I'm hitting some
problems and I'm not sure whether they are limitations of the driver or I'm
just not using it right.

I have two NetCDF files, one is (small) sample file from the Copernicus
File Danger Index, the other is one month of data (1.5GB) from the ECMWF
Reanalysis 2m Temperature variable. The first file opens file from my local
file system and using the /vsis3 virtual filesystem but the second one
doesn't.

With CPL_DEBUG=ON, successfully opening the file with gdalinfo looks like
this:

GNM: GNMRegisterAllInternal
GNM: RegisterGNMFile
GNM: RegisterGNMdatabase
GDAL_netCDF: driver detected file type=2, libnetcdf detected type=2
GDAL_netCDF: dim_count = 3
GDAL_netCDF: var_count = 4
GDAL_netCDF:
=====
SetProjectionFromVar( 3)
GDAL_netCDF: bIsGdalFile=0 bIsGdalCfFile=0 bBottomUp=1
GDAL_netCDF: set bBottomUp = 0 from Y axis
GDAL_netCDF: xdim: 1440 nSpacingBegin: 250 nSpacingMiddle: 250 nSpacingLast: 250
GDAL_netCDF: ydim: 721 nSpacingBegin: -250 nSpacingMiddle: -250
nSpacingLast: -250
GDAL_netCDF: SetGeoTransform(-0.125000,0.250000,0.000000,90.125000,0.000000,-0.250000)
GDAL_netCDF: bGotGeogCS=0 bGotCfSRS=0 bGotCfGT=1 bGotGdalSRS=0 bGotGdalGT=0
GDAL_netCDF: netcdf type=3 gdal type=3 signedByte=1
...

The same file when uploaded to S3 outputs the following using the
vsis3 virtual filesystem:

GNM: GNMRegisterAllInternal
GNM: RegisterGNMFile
GNM: RegisterGNMdatabase
HTTP: libcurl/7.69.1 OpenSSL/1.1.1g zlib/1.2.5 libssh2/1.8.2
HTTP: GDAL was built against curl 7.64.1, but is running against 7.69.1.
S3: Switching to region eu-west-1
VSICURL: Downloading 0-16383
(https://some-s3-bucket.s3.amazonaws.com/era5-reanalysis/2m_temperature/2020-01.nc)...
VSICURL: Got response_code=206
ERROR 4: `/vsis3/some-s3-bucket/era5-reanalysis/2m_temperature/2020-01.nc'
not recognized as a supported file format.
gdalinfo failed - unable to open
'/vsis3/some-s3-bucket/era5-reanalysis/2m_temperature/2020-01.nc'.


Is it clear from this output whether there is an issue with the 2020-01.nc file?

Thanks,

Duncan Walker
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/46b3c105/attachment.html>

From conormcindoe1 at gmail.com  Tue Jan 12 04:46:28 2021
From: conormcindoe1 at gmail.com (Conor McIndoe)
Date: Tue, 12 Jan 2021 12:46:28 +0000
Subject: [gdal-dev] Registering C++ Pixel Functions for Command-Line
 Utilities
In-Reply-To: <CAOM3y2hGktoryY+G3i3QL5p6VUJem-YMRN942jk8K3nKX2j-nA@mail.gmail.com>
References: <97f91605-aa15-c7c0-71d7-ae74d7f1933e@gmail.com>
 <CAOM3y2hGktoryY+G3i3QL5p6VUJem-YMRN942jk8K3nKX2j-nA@mail.gmail.com>
Message-ID: <5ecafb7f-784f-c178-72cc-a4270750d505@gmail.com>

Wonderful, thank you Thomas, that has indeed resolve the issue

Best,

Conor

On 12/01/2021 12:02, thomas bonfort wrote:
> Conor,
> I suspect that you should add an
> extern "C" {
> void GDALRegisterMe();
> }
> line at the beginning of your cpp file.
>
> --
> Thomas
>
> On Tue, Jan 12, 2021 at 12:56 PM Conor McIndoe 
> <conormcindoe1 at gmail.com <mailto:conormcindoe1 at gmail.com>> wrote:
>
>     Hello developers,
>
>     I am just learning the ropes with GDAL so apologies if some of
>     this is
>     quite far off. Also apologies in advance for the essay :)
>
>     I am trying to register a pixel function, written in C++, in order to
>     produce a VRT and eventually a TIF from some input TIFs. I am
>     trying to
>     follow an thread from this mailing list
>     (https://lists.osgeo.org/pipermail/gdal-dev/2011-May/028742.html
>     <https://lists.osgeo.org/pipermail/gdal-dev/2011-May/028742.html>) to
>     make GDAL aware of a shared library which contains and registers the
>     pixel function. Hopefully there is some clear error here which one of
>     you can spot?
>
>     I have adapted the example found at the VRT reference page
>     (https://gdal.org/drivers/raster/vrt.html
>     <https://gdal.org/drivers/raster/vrt.html>) to produce a function
>     which
>     sets every pixel equal to 1 (just to test the workflow):
>
>     // src/gdalPixelFunctions.cpp
>
>     #include "gdal.h"
>     #include "cpl_conv.h"
>     #include "gdal_priv.h"
>
>     #include <iostream>
>
>     CPLErr OneFunction(
>     ???? void **papoSources, int nSources, void *pData,
>     ???? int nXSize, int nYSize, GDALDataType eSrcType,
>     ???? GDALDataType eBufType, int nPixelSpace, int nLineSpace
>     )
>     {
>     ???? int ii, iLine, iCol;
>     ???? double pix_val;
>     ???? double x0, x3, x4, x8;
>
>     ???? if(nSources != 4) return CE_Failure;
>
>     ???? for(iLine = 0; iLine < nYSize; iLine++)
>     ???? {
>     ???????? for(iCol = 0; iCol < nXSize; iCol++)
>     ???????? {
>     ???????????? ii = iLine * nXSize + iCol;
>
>     ???????????? /* Source raster pixels may be obtained with SRCVAL
>     macro */
>     ???????????? x0 = SRCVAL(papoSources[0], eSrcType, ii);
>     ???????????? x3 = SRCVAL(papoSources[1], eSrcType, ii);
>     ???????????? x4 = SRCVAL(papoSources[2], eSrcType, ii);
>     ???????????? x8 = SRCVAL(papoSources[3], eSrcType, ii);
>
>     ???????????? pix_val = 1;
>
>     ???????????? GDALCopyWords(
>     ???????????????? &pix_val,
>     ???????????????? GDT_Float64,
>     ???????????????? 0,
>     ???????????????? ((GByte *)pData) + nLineSpace * iLine + iCol *
>     nPixelSpace,
>     ???????????????? eBufType,
>     ???????????????? nPixelSpace,
>     ???????????????? 1
>     ???????????? );
>     ???????? }
>     ???? }
>
>     ???? return CE_None;
>     }
>
>     void GDALRegisterMe()
>     {
>     ???? std::cout << "Inside GDALRegisterME()" << std::endl;
>     ???? GDALAddDerivedBandPixelFunc("OneFunction", OneFunction);
>     }
>
>
>     Compilation:
>
>     g++ -std=c++20 -fPIC -lgdal -c src/gdalPixelFunctions.cpp -o
>     build/gdal_pixelFunctions.o
>
>     g++ -lgdal -shared build/gdal_pixelFunctions.o -o
>     build/gdal_pixelFunctions.so
>
>     export GDAL_DRIVER_PATH="/path/to/build"
>
>
>     Attempting to call:
>
>     gdal_translate testVrt.vrt testVrt.tif
>
>     (where testVrt.vrt references the OneFunction pixel function)
>     results in
>     the following error messages:
>
>     ERROR 1: /path/to/build/gdal_pixelFunctions.so: undefined symbol:
>     GDALRegisterMe
>     ERROR 1: /path/to/build/gdal_pixelFunctions.so: undefined symbol:
>     GDALRegister_pixelFunctions
>
>     I have also tried registering by defining a void
>     GDALRegister_pixelFunctions() but with the same issue. I assume this
>     error means that GDAL is looking in the shared library for these two
>     register functions and failing to find them?
>
>     Thank you for your help and sorry for the long post!
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/98728141/attachment.html>

From even.rouault at spatialys.com  Tue Jan 12 04:50:02 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Jan 2021 13:50:02 +0100
Subject: [gdal-dev] Catching many errors of the same record (ogr2ogr)
In-Reply-To: <c7c6964b-3eab-34d9-d3e1-4bdcebbaea4f@gmail.com>
References: <c7c6964b-3eab-34d9-d3e1-4bdcebbaea4f@gmail.com>
Message-ID: <2970223.U9Y0CrkEHy@even-i700>

On vendredi 8 janvier 2021 15:58:39 CET matteo wrote:
> Hi all,
> 
> I've 2 small questions during a syncing from a GPKG to a PG DB with
> constraints using -skipfailures:
> 
> * is it possible to show only the constraint error and not also the
> insert one? Even if there is only a single error, reading the log it
> seems that there are 2 of them (I know a person should only read....)
> * is there are 2 errors (e.g. constraints error) BUT in the same record,
> ogr2ogr shows only the first one and not all of them

Why not experimenting outside GDAL a bit ?

$ psql

# create table foo(bar integer check (bar = 1), baz integer check (baz = 1));
# insert into foo values (2,2);
ERROR:  new row for relation "foo" violates check constraint "foo_bar_check"
DETAIL:  Failing row contains (2, 2).


and asking your favorite search engine about
"postgresql get all constraint violations"

==>
https://stackoverflow.com/questions/23822162/error-message-with-all-constraint-violations-in-postgres


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jan.heckman at gmail.com  Tue Jan 12 06:06:37 2021
From: jan.heckman at gmail.com (Jan Heckman)
Date: Tue, 12 Jan 2021 15:06:37 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <4702685F-563D-4A9F-99AD-3A95BCF1A885@arve-research.com>
References: <4702685F-563D-4A9F-99AD-3A95BCF1A885@arve-research.com>
Message-ID: <CAKMUAtDJJWhdfxAB6oqHmcr2-Wiu8J=eMOXbmP6DSFMxcko5kg@mail.gmail.com>

In good company when pruning the source trees:
https://www.phoronix.com/scan.php?page=news_item&px=2021-Linux-Drop-Old-CPUs
Apparently 68000 may not be supported any longer in linux...
Just joking. Hope you don't mind...

On Tue, Jan 12, 2021 at 3:46 AM Jed O. Kaplan <jed.kaplan at arve-research.com>
wrote:

> I for one am using the GMT vector driver for GDAL on a regular basis,
> e.g., for integration between GRASS GIS and GMT for cartography. I am
> grateful to the developers for their continued support for this driver.
>
> Thanks, Jed
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/5a9dc990/attachment-0001.html>

From jgale at mathworks.com  Tue Jan 12 06:48:47 2021
From: jgale at mathworks.com (Jonathan Gale)
Date: Tue, 12 Jan 2021 14:48:47 +0000
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <3167316.Bsjxy4uaUB@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
Message-ID: <DS7PR05MB746174A1A32134D6266312B8B2AA0@DS7PR05MB7461.namprd05.prod.outlook.com>

Hi,

Looking at the list, we use/support SDTS Raster import. As a US government format with the use case mentioned below, I'd prefer to not see the format removed from the software.  We have some evidence that the format is still used by some of our users.

The users of the software I help develop and maintain expect a high level of compatibility across releases.  A commonly discussed use case involves rerunning the same code with the same data across many years to ensure reproducibility of results.  While we see the need to keep code maintainable, it feels important to consider this use case.

Not specific to the software I work on, I think of GDAL as a "swiss army knife" of geospatial format support.  It is the FOSS way to access many formats both new and old.  I do wonder whether alternatives available should be considered when evaluating a given driver for removal.  It would be unfortunate if there was no way to read a format anymore with available software.

Overall, we like the idea of introducing a process for this.  Thinking about next steps, it is important to consider what the criterion should be as Even mentioned.  How many users?  Who are these users?  How do we estimate the downstream impact on users who don't know that their format is being considered for removal?  As others have mentioned, how does maintainability factor in?  I hope that if there was a process to do this, that it would be codified and visible.

Best,
Jonathan


From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: Sunday, January 10, 2021 6:02 PM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] Considering drivers removal ?

Hi,

It's not spring yet, but I'm in a mood lately of axing useless things, and we
probably have tons of candidate for that in GDAL, especially in drivers.
I was going to just axe the DB2 driver
(https://github.com/OSGeo/gdal/pull/3366<https://github.com/OSGeo/gdal/pull/3366>) but the issue is more general.

Any idea how we can know what is used and what isn't ? A "call-home"
functionality where we would track driver usage would only be acceptable if
people enable it and have network connectivity, so we won't probably get lots
of feedback. Having a spreadsheet with the driver list and asking people to
fill it would probably also receive little feedback. So the idea I had was to
do something like the following in the Open() method of a candidate for
removal:

GDALDataset* FooDriver::Open( .... )
{
if( !Identify(poOpenInfo) )
return nullptr;

if( !CPLTestBool(CPLGetConfigOption("GDAL_ENABLE_DRIVER_FOO", "NO") )
{
CPLError(CE_Failure, CPLE_AppDefined,
"Driver FOO is considered for removal in GDAL 3.5. You are invited "
"to convert any dataset in that format to another more common one ."
"If you need this driver in future GDAL versions, create a ticket at "
"https://github.com/OSGeo/gdal<https://github.com/OSGeo/gdal> (look first for an existing one first) to "
"explain how critical it is for you (but the GDAL project may still "
"remove it), and to enable it now, set the GDAL_ENABLE_DRIVER_FOO "
"configuration option / environment variable to YES");
return nullptr;
}
...
}

That is, when we detect a file to be handled by the driver, emit the above
error message and do not open the dataset, unless the user defines the
environment variable.
Similarly in the Create()/CreateCopy() methods.
If we ship this in 3.3, with a 3.5 milestone for removal, this would offer a
feedback period of one year / 2 feature versions.

Here's my own list of candidates for retirement (probably over-conservative).
Mostly based on gut feeling. None of them are particularly bad citizens, but I
have no indication that they are still used, which doesn't mean they aren't.

* Raster side:
BPG
DB2Raster
DOQ1
DOQ2
E00GRID
Epsilon
FujiBAS
GS7BG
GSAG
IDA
JDEM
JPEG2000 (Jasper): JP2OpenJPEG is a better replacement
JPEGLS
LAN
MFF
MG4Lidar ?
NDF
NTv1
SDTS Raster
SGI
XPM
ZMap

* Vector side:
AERONAVFAA
ESRI ArcObjects
ARCGEN
BNA
Cloudant
CouchDB
DB2
DODS
FMEObjects Gateway
Geomedia MDB
GMT ASCII Vectors
GTM
HTF
INGRES
MongoDB (the old one, superseded by MongoDBv3)
OpenAIR
REC
SDTS
SUA
SVG
TIGER
WALK


Anything you'd add / remove ?

What is not obvious is what would be the criterion for keeping a driver: 1,
10, 100 users asking for the driver to be kept ?
If a GDAL developer contributing to the overall good of the project needs the
preservation of a driver to be able to justify its continued involvement, I'd
tend to think it to be enough to keep it.


Even

--
Spatialys - Geospatial professional services
http://www.spatialys.com<http://www.spatialys.com>
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev<https://lists.osgeo.org/mailman/listinfo/gdal-dev>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/d8aa108e/attachment.html>

From howard at hobu.co  Tue Jan 12 09:38:47 2021
From: howard at hobu.co (Howard Butler)
Date: Tue, 12 Jan 2021 11:38:47 -0600
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <DS7PR05MB746174A1A32134D6266312B8B2AA0@DS7PR05MB7461.namprd05.prod.outlook.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <DS7PR05MB746174A1A32134D6266312B8B2AA0@DS7PR05MB7461.namprd05.prod.outlook.com>
Message-ID: <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>



> On Jan 12, 2021, at 8:48 AM, Jonathan Gale <jgale at mathworks.com> wrote:
> 
> Hi,
>  
> Looking at the list, we use/support SDTS Raster import. As a US government format with the use case mentioned below, I?d prefer to not see the format removed from the software.  We have some evidence that the format is still used by some of our users.

It would be helpful for Mathworks to provide the GDAL project a list of "used" formats in its software. GDAL doesn't get that recon, and it can't put phone home capability into the software to get it either.

>  The users of the software I help develop and maintain expect a high level of compatibility across releases.  A commonly discussed use case involves rerunning the same code with the same data across many years to ensure reproducibility of results.  While we see the need to keep code maintainable, it feels important to consider this use case. 

So the open source project your commercial software product depends upon is supposed to worry about forever version compatibility to protect your product? You may not have said it this way, but this is what I hear when I read this statement. It is especially frustrating to hear given the many commercial entities like Mathworks that have leveraged GDAL for years without providing non-targeted financial and developer resources back to the project to carry this kind of maintenance burden. 

The community doesn't maintain GDAL ? Even Rouault does (right now, just like Frank Warmerdam did before him). The community doesn't really share the burden, but it does share its rewards (1000 line NEWS posts of updates to the project every release). Even is now searching for ways to make it more maintainable given that the resources to sustain the current trajectory have not materialized. This includes culling drivers that merely add burden and evolving old stuff where appropriate (code, configuration, APIs).  It isn't on us to say whether something is or isn't a burden either ? we need to step into the breach if we need to keep something around. 

A problem with GDAL is the breach is a 1 million line behemoth with homegrown test suites, build setups, software layout, and type system. It is not a comfortable project to make casual contributions because it requires a lot of investment to get up to speed. You end up having to carry the rock of 20 years of software (mis)behavior as you do it. For anything other than adding another driver, this burden ends up being too great. So while we want more maintainers (working free to us!), the software itself makes it very difficult for them to grow into the role. Attempts to relax the dough to allow that to happen are met with, well, this mailing list thread.  
 
> Not specific to the software I work on, I think of GDAL as a ?swiss army knife? of geospatial format support.  It is the FOSS way to access many formats both new and old.  I do wonder whether alternatives available should be considered when evaluating a given driver for removal.  It would be unfortunate if there was no way to read a format anymore with available software.

The old versions are still available, but I understand as a commercial product, you want BOTH the maintenance and bug fixing of existing software plus all of the goodie features of a new release. 

> Overall, we like the idea of introducing a process for this.  Thinking about next steps, it is important to consider what the criterion should be as Even mentioned.  How many users?  Who are these users?  How do we estimate the downstream impact on users who don?t know that their format is being considered for removal?  As others have mentioned, how does maintainability factor in?  I hope that if there was a process to do this, that it would be codified and visible.

The only question that matters here is "Who is going to maintain it?" and if the answer to that is "no one", it should be removed. There doesn't need to be any meetings because the only criteria that matters is if someone is willing to maintain it. We should provide the list of drivers and assign the GitHub handles that step forward to be responsible for each. If obscure government one-offs formats have an audience of downtrodden government users forced to use them, they need to put their handle in and take ownership. They then need to find the time, money, or attention to carry things forward. 

Howard

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/3031501f/attachment-0001.html>

From warmerdam at pobox.com  Tue Jan 12 09:56:13 2021
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Tue, 12 Jan 2021 12:56:13 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
References: <3167316.Bsjxy4uaUB@even-i700>
 <DS7PR05MB746174A1A32134D6266312B8B2AA0@DS7PR05MB7461.namprd05.prod.outlook.com>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
Message-ID: <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>

On Tue, Jan 12, 2021 at 12:38 PM Howard Butler <howard at hobu.co> wrote:

> The only question that matters here is "Who is going to maintain it?" and
> if the answer to that is "no one", it should be removed. There doesn't need
> to be any meetings because the only criteria that matters is if someone is
> willing to maintain it. We should provide the list of drivers and assign
> the GitHub handles that step forward to be responsible for each. If obscure
> government one-offs formats have an audience of downtrodden government
> users forced to use them, they need to put their handle in and take
> ownership. They then need to find the time, money, or attention to carry
> things forward.
>

Howard / Even,

I'd be willing to commit to maintaining some of the archaic drivers that
meet the conditions I mentioned (buildable, testable in core build).  If
Even would like I can provide a sublist of those he proposed i'd be willing
to be responsible for.

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam,
warmerdam at pobox.com
light and sound - activate the windows | +1 650-701-7823
and watch the world go round - Rush    | Geospatial Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210112/ecdf06df/attachment.html>

From even.rouault at spatialys.com  Tue Jan 12 14:36:22 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 12 Jan 2021 23:36:22 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
Message-ID: <5660672.59c2uHP61a@even-i700>

On mardi 12 janvier 2021 12:56:13 CET Frank Warmerdam wrote:
> On Tue, Jan 12, 2021 at 12:38 PM Howard Butler <howard at hobu.co> wrote:
> > The only question that matters here is "Who is going to maintain it?" and
> > if the answer to that is "no one", it should be removed. There doesn't
> > need
> > to be any meetings because the only criteria that matters is if someone is
> > willing to maintain it. We should provide the list of drivers and assign
> > the GitHub handles that step forward to be responsible for each. If
> > obscure
> > government one-offs formats have an audience of downtrodden government
> > users forced to use them, they need to put their handle in and take
> > ownership. They then need to find the time, money, or attention to carry
> > things forward.
> 
> Howard / Even,
> 
> I'd be willing to commit to maintaining some of the archaic drivers that
> meet the conditions I mentioned (buildable, testable in core build).  If
> Even would like I can provide a sublist of those he proposed i'd be willing
> to be responsible for.

NTv1: this is the perfect example of a driver of absolutely no use in 2021. 
Unless I'm wrong, there was only one single public dataset for that format, 
ntv1_can.dat, and it is now available as GeoTIFF in
https://github.com/OSGeo/PROJ-data/blob/master/ca_nrc/ca_nrc_ntv1_can.tif

My current plan is:

- for BPG, E00GRID, EPSILON, IGNFHeightASCIIGrid, ISG, Aeronav FAA, BNA, HTF, 
OpenAir, SEG-P1, SEG-Y, SUA, X-Plane, move *now* driver code, documentation  
and tests to https://github.com/OSGeo/gdal-extra-drivers which is a slightly 
improved version of a cemetery repository, since it includes a build script to 
create a plugin. I have no plan to maintain that repository after that initial 
move (that means I won't merge pull requests unless someone else steps up for 
the role) and it will likely break in the future. I'd wish we would agree to 
move more drivers there. And probably most future drivers for esoteric formats 
should go there.
Those drivers are ones I've authored, that received no significant 
contribution from anyone else AFAIR, no-one paid development for and I suspect 
are close to be unused. So hopefully no one should have bad feelings with them 
going away. It was a bad taste of mine to have put them in GDAL to start with.
Why did I picked up the extra repository after all ? A tiny fraction of them 
might be useful like ISG or IGNFHeightASCIIGrid in some contexts (to create 
grids for PROJ), but definitely not for general purpose. So as far as I'm 
concerned, I'll go through the extra step of building the extra repository or 
a subset of it if I've an occasional need for them.

- proceed as I mentionned initially for other drivers I listed and no-one 
steps up to maintain, with the variation of moving the code to gdal-extra-
drivers instead of just removing them (but potentially not including a build 
recipee for them in the build script, if that proves to be too complex).

The issue with esoteric/legacy drivers is not that much maintenance of the 
actual code of the drivers, in the sense of dealing with bug reports, 
questions, etc. (pretty sure they are none for the ones I listed). Most of 
them must work reasonably well and be feature complete, and most 
vulnerabilities have now been fixed. My concern is that this legacy code has 
indirect costs on other GDAL developers and users. The psychological cost I 
mentionned. Let's say someone want to turn on higher warning levels, and that 
this breaks in tens of drivers. Would he have to ping every maintainer and 
wait for them to address the issue ? Or maybe he will just give up. Similarly 
for breaking changes in the driver API. As Sean mentionned, this is probably a 
serious obstacle to growing up the core development team.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From stephenwoodbridge37 at gmail.com  Tue Jan 12 16:52:36 2021
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Tue, 12 Jan 2021 19:52:36 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <5660672.59c2uHP61a@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
Message-ID: <c10c72cd-bfc6-8b8b-da41-72cf6b2a8fc6@gmail.com>

On 1/12/2021 5:36 PM, Even Rouault wrote:
> On mardi 12 janvier 2021 12:56:13 CET Frank Warmerdam wrote:
>> On Tue, Jan 12, 2021 at 12:38 PM Howard Butler <howard at hobu.co> wrote:
>>> The only question that matters here is "Who is going to maintain it?" and
>>> if the answer to that is "no one", it should be removed. There doesn't
>>> need
>>> to be any meetings because the only criteria that matters is if someone is
>>> willing to maintain it. We should provide the list of drivers and assign
>>> the GitHub handles that step forward to be responsible for each. If
>>> obscure
>>> government one-offs formats have an audience of downtrodden government
>>> users forced to use them, they need to put their handle in and take
>>> ownership. They then need to find the time, money, or attention to carry
>>> things forward.
>> Howard / Even,
>>
>> I'd be willing to commit to maintaining some of the archaic drivers that
>> meet the conditions I mentioned (buildable, testable in core build).  If
>> Even would like I can provide a sublist of those he proposed i'd be willing
>> to be responsible for.
> NTv1: this is the perfect example of a driver of absolutely no use in 2021.
> Unless I'm wrong, there was only one single public dataset for that format,
> ntv1_can.dat, and it is now available as GeoTIFF in
> https://github.com/OSGeo/PROJ-data/blob/master/ca_nrc/ca_nrc_ntv1_can.tif
>
> My current plan is:
>
> - for BPG, E00GRID, EPSILON, IGNFHeightASCIIGrid, ISG, Aeronav FAA, BNA, HTF,
> OpenAir, SEG-P1, SEG-Y, SUA, X-Plane, move *now* driver code, documentation
> and tests to https://github.com/OSGeo/gdal-extra-drivers which is a slightly
> improved version of a cemetery repository, since it includes a build script to
> create a plugin. I have no plan to maintain that repository after that initial
> move (that means I won't merge pull requests unless someone else steps up for
> the role) and it will likely break in the future. I'd wish we would agree to
> move more drivers there. And probably most future drivers for esoteric formats
> should go there.
> Those drivers are ones I've authored, that received no significant
> contribution from anyone else AFAIR, no-one paid development for and I suspect
> are close to be unused. So hopefully no one should have bad feelings with them
> going away. It was a bad taste of mine to have put them in GDAL to start with.
> Why did I picked up the extra repository after all ? A tiny fraction of them
> might be useful like ISG or IGNFHeightASCIIGrid in some contexts (to create
> grids for PROJ), but definitely not for general purpose. So as far as I'm
> concerned, I'll go through the extra step of building the extra repository or
> a subset of it if I've an occasional need for them.
>
> - proceed as I mentionned initially for other drivers I listed and no-one
> steps up to maintain, with the variation of moving the code to gdal-extra-
> drivers instead of just removing them (but potentially not including a build
> recipee for them in the build script, if that proves to be too complex).
>
> The issue with esoteric/legacy drivers is not that much maintenance of the
> actual code of the drivers, in the sense of dealing with bug reports,
> questions, etc. (pretty sure they are none for the ones I listed). Most of
> them must work reasonably well and be feature complete, and most
> vulnerabilities have now been fixed. My concern is that this legacy code has
> indirect costs on other GDAL developers and users. The psychological cost I
> mentionned. Let's say someone want to turn on higher warning levels, and that
> this breaks in tens of drivers. Would he have to ping every maintainer and
> wait for them to address the issue ? Or maybe he will just give up. Similarly
> for breaking changes in the driver API. As Sean mentionned, this is probably a
> serious obstacle to growing up the core development team.
>
>
> Even
>
Even,

Just want to say this sounds like good plan to me, not that my input 
means a lot. I also want to say Thank You! for all your hard work 
supporting this and other projects, but answering my questions through 
the years. I've had a lot of roles in my career in open source and 
industry and can appreciate the difficult balance between compatibility 
with legacy code and the need to break free of it to move forward. It's 
hard and I never enjoyed having to make those decisions, but you have my 
respect and support whatever you decide.

Thank You! again for your efforts and support!

-Steve W

From john.reilly at softwright.com  Wed Jan 13 05:21:48 2021
From: john.reilly at softwright.com (John Reilly)
Date: Wed, 13 Jan 2021 13:21:48 +0000
Subject: [gdal-dev] GDAL 2.2+ Slower Than 2.1.2
Message-ID: <DM5PR19MB1370115FF11D61E1474D44D286A90@DM5PR19MB1370.namprd19.prod.outlook.com>

Our TAP7 application (www.softwright.com) has been using GDAL since we rewrote it in C# from VB 6. I just grabbed the binaries from Tamas's build site (https://www.gisinternals.com/release.php).

Most of my CPU cycles are involved in reading millions of samples from raster data files.

I have tried to upgrade from 2.1.2 to 2.3.1 and then 2.4.3 using the Windows x64 binaries. Today I tried the 2.4.4 NuGet package. In all upgrade cases, my application suddenly ran half as fast using the newer versions.

Does anyone have any clue what could have changed between 2.1.2 and 2.3.1 to account for longer raster read times? When I looked at the release notes, nothing jumps out at me.

I am using Visual Studio 2017 and C# on 64-bit Win 10.

Thanks.

-John Reilly.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/6106cc23/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jan 13 07:51:11 2021
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 13 Jan 2021 15:51:11 +0000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
Message-ID: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>

Hi,

The thread "Considering drivers removal ?" made me think about what is the real issue. Is there something fundamentally wrong with the current GDAL? If having >100 and >100 drivers prevent developers from doing modernization in GDAL internals I do not believe that having 90 and 90 really makes much difference. Not even what Even suggested "We should probably trim down the list to 20 raster and vector drivers to have a real effect regarding that."

What if we imagine that we have managed to drop all the drivers and we have free hands to modernize the GDAL internals and everything. What would we do differently? Would there be less built-in drivers and more plugins or what?
And when it comes the time to do the next modernization campaign, would it be any easier? How about the threshold to become a maintainer? I am not a developer myself but somehow I feel that currently it is not so easy to jump in and start maintaining even just one specific driver.

-Jukka Rahkonen-


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/d7ed0962/attachment-0001.html>

From howard at hobu.co  Wed Jan 13 09:33:38 2021
From: howard at hobu.co (Howard Butler)
Date: Wed, 13 Jan 2021 11:33:38 -0600
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
Message-ID: <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>


> Is there something fundamentally wrong with the current GDAL?

The project's history is one person doing most of the work. This person eventually burns out.

Here's a table of the top five lifetime commits to the repository as of December 2020. 

Even Rouault ? 19,838
Frank Warmerdam ? 11,503
Kurt Schwehr ? 3,403
Andrey Kiselev ? 1,320
Howard Butler ? 768

The reason why this person burns out is they are actually doing *three* jobs, not one. Three, you say? 

First is the actual maintainer job. You're the clearinghouse for bugs, the primary authority on the mailing list, the first respondent in the bug tracker, and the one that organizes and cuts the software release. When we think of the maintainer for the GDAL project, this is what we think of. No one organization will pay for just this job.

This means you need a revenue stream to make it maintenance your full time gig. That's easy enough, just get paid for working on GDAL, right? Well sure, but people don't want to pay for you to fix bugs that users vaguely provide in the mailing list. They want to pay for functionality they need to add to their software. So you are in a spot ? you have to *add* more to the software to earn revenue. For GDAL, adding more means more drivers and more capabilities for those drivers (CPL, VSICloud, etc). This creates more bugs and maintenance load that the original directed funder supports for only a little while. This second job is in conflict with the first and the dissonance amplifies as time goes one.

The third job is you have to solicit work through the contacts you've built up to keep the revenue hopper full. Invoicing, statements of work, negotiation, telecons, and the usual business stuff. People see you as cheap because you're "open source", and pressure you on price, scope, and completion time. You eventually orient about a small cadre of repeat clients with strong trust relationships. 

How can this be fixed?

1) Burn through the current maintainer and hope another one comes along. The users of the GDAL project simply got lucky that Even picked up the torch after Frank moved on. Maybe that happens again on the next iteration.

2) Refactor the software so that more maintainers can participate. That's been our current discussion, which doesn't seem to be converging on any solutions.

3) Provide a revenue stream so the maintainer only has to do the maintenance job, and not the other two jobs that are in conflict with the project's maintenance. This person should be paid like the FAANG senior engineer that's currently taking GDAL and using it to add some geo widget to their software. 

OSGeo was supposed to be the answer to #3, but in 15 years of existence it has shown it is not and never will be. Maybe it is time to start a GDAL foundation ala QGIS and others and direct corporate benefactors to fund it directly. Those benefactors would have to pledge significant resources to at least get to the level of a FAANG senior engineer as a start.

Howard


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/32debc2e/attachment.html>

From dmorissette at mapgears.com  Wed Jan 13 11:11:05 2021
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Wed, 13 Jan 2021 14:11:05 -0500
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
Message-ID: <67bb2855-3d07-4027-aad5-64001dcfd78b@mapgears.com>

Thank you Howard for a great analysis and for pointing out the key problems.

Personally I think the top two problems are:

1- Bus number: we need to find a way to increase the number of active 
maintainers to ensure the viability and velocity of the project

2- Sustainable revenue stream for maintenance activities: as you 
explained, it is relatively easy to fund features, but profitable 
companies selling software or services that use GDAL need to realize 
that it would be an investment for them to contribute even just a 
fraction of 1% of their sales in "non-string-attached funding" to 
support non-sexy stuff such as release management, bug fixes, security 
fixes, dependency upgrades, packaging, docs,  etc... not only in GDAL, 
but in the top-5 open source components that they rely on.

The QGIS approach to managing funding is an option, but it's not the 
only one. I would tend to go for a more decentralized approach to reduce 
the risk for the project with a single entity supporting it.

I step up to work with you Howard toward improving the situation. 
(Actually I had already written personally to Even to discuss some 
options before seeing your reply)

Daniel



On 2021-01-13 12:33, Howard Butler wrote:
> 
>> Is there something fundamentally wrong with the current GDAL? 
> 
> The project's history is one person doing most of the work. This person 
> eventually burns out.
> 
> Here's a table of the top five lifetime commits to the repository as of 
> December 2020.
> 
> Even Rouault ??19,838
> Frank Warmerdam ??11,503
> Kurt Schwehr ??3,403
> Andrey Kiselev ??1,320
> Howard Butler ??768
> 
> The reason why this person burns out is they are actually doing *three* 
> jobs, not one. Three, you say?
> 
> First is the actual maintainer job. You're the clearinghouse for bugs, 
> the primary authority on the mailing list, the first respondent in the 
> bug tracker, and the one that organizes and cuts the software release. 
> When we think of the maintainer for the GDAL project, this is what we 
> think of. No one organization will pay for just this job.
> 
> This means you need a revenue stream to make it maintenance your full 
> time gig. That's easy enough, just get paid for working on GDAL, right? 
> Well sure, but people don't want to pay for you to fix bugs that users 
> vaguely provide in the mailing list. They want to pay for functionality 
> they need to add to their software. So you are in a spot ? you have to 
> *add* more to the software to earn revenue. For GDAL, adding more means 
> more drivers and more capabilities for those drivers (CPL, VSICloud, 
> etc). This creates more bugs and maintenance load that the original 
> directed funder supports for only a little while. This second job is in 
> conflict with the first and the dissonance amplifies as time goes one.
> 
> The third job is you have to solicit work through the contacts you've 
> built up to keep the revenue hopper full. Invoicing, statements of work, 
> negotiation, telecons, and the usual business stuff. People see you as 
> cheap because you're "open source", and pressure you on price, scope, 
> and completion time. You eventually orient about a small cadre of repeat 
> clients with strong trust relationships.
> 
> How can this be fixed?
> 
> 1) Burn through the current maintainer and hope another one comes along. 
> The users of the GDAL project simply got lucky that Even picked up the 
> torch after Frank moved on. Maybe that happens again on the next iteration.
> 
> 2) Refactor the software so that more maintainers can participate. 
> That's been our current discussion, which doesn't seem to be converging 
> on any solutions.
> 
> 3) Provide a revenue stream so the maintainer only has to do the 
> maintenance job, and not the other two jobs that are in conflict with 
> the project's maintenance. This person should be paid like the FAANG 
> senior engineer that's currently taking GDAL and using it to add some 
> geo widget to their software.
> 
> OSGeo was supposed to be the answer to #3, but in 15 years of existence 
> it has shown it is not and never will be. Maybe it is time to start a 
> GDAL foundation ala QGIS and others and direct corporate benefactors to 
> fund it directly. Those benefactors would have to pledge significant 
> resources to at least get to the level of a FAANG senior engineer as a 
> start.
> 
> Howard
> 
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From gdal at stripfamily.net  Wed Jan 13 12:23:50 2021
From: gdal at stripfamily.net (David Strip)
Date: Wed, 13 Jan 2021 13:23:50 -0700
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
Message-ID: <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/517f392b/attachment.html>

From Brendan.DeTracey at dfo-mpo.gc.ca  Wed Jan 13 12:28:08 2021
From: Brendan.DeTracey at dfo-mpo.gc.ca (DeTracey, Brendan)
Date: Wed, 13 Jan 2021 20:28:08 +0000
Subject: [gdal-dev] python - intersecting linestrings to polygon
Message-ID: <0a3b767e089e4b44a223b937ee09ee85@dfo-mpo.gc.ca>

Hi,

An image of my multiline can be seen in this post (https://gis.stackexchange.com/questions/384213/ogr-buildpolygonfromedges-fails-on-my-multiline). I am trying to extract the largest polygon contained by the lines. As you can see in the figure, one of the linestrings has only 2 points. One of the linestrings has 3 points. The remaining linestrings have many points. What is the suggested workflow to solve this problem?

Both Polygonize and BuildPolygonFromEdges fail, even if I segmentize my multiline.  Must I first trim all linestrings to their intersectional segments? Or break them into all the pieces from all intersections?

Thanks,
Brendan

------------------------------------------
Brendan DeTracey
brendan.detracey at dfo-mpo.gc.ca<mailto:brendan.detracey at dfo-mpo.gc.ca>
(902)426-9727, VS 308-30, Mail Station VS240
Ocean Monitoring and Observation Section / Section de Monitorage et Observation de l'ocean
Ocean and Ecosystem Sciences Division / Division des sciences de la mer et de l'?cosyst?me
Fisheries and Oceans Canada / P?ches et oc?ans Canada
Bedford Institute of Oceanography / Institut oc?anographique de Bedford
P.O. Box 1006 / C.P. 1006
Dartmouth, NS  B2Y 4A2 / Dartmouth, N.-?.  B2Y 4A2
Government of Canada / Gouvernement du Canada
If you have received this communication by mistake, please notify the sender immediately and delete the communication without printing, copying or forwarding it. Thank you.
Si vous avez re?u cette communication par erreur, veuillez en aviser l'exp?diteur imm?diatement et la supprimer sans l'imprimer, la copier, ou la faire suivre. Merci.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/2c3a2d8f/attachment.html>

From schwehr at gmail.com  Wed Jan 13 12:48:57 2021
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 13 Jan 2021 12:48:57 -0800
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
Message-ID: <CACmBxyuvYE09uvwRw7-GfFkZe4S0g_Gn0dmUPc3wpicGvSsETA@mail.gmail.com>

I mostly wanted to say that I'm here listening to the discussion and
thinking about all these issues.

On the technical side, I tried to publicly think about long term
maintainability / reliability of GDAL over the years.  It's always a moving
target, but here are a few of my old thoughts:

https://lists.osgeo.org/pipermail/gdal-dev/2016-May/044298.html
https://lists.osgeo.org/pipermail/gdal-dev/2015-September/042680.html

Those leave out a lot and are dated.

On Wed, Jan 13, 2021 at 12:24 PM David Strip <gdal at stripfamily.net> wrote:

> Kudos to Howard for his succinct summary of the situation and the call to
> action. While I have nowhere near his experience with open source, my
> experience with other volunteer organizations reveals a similar pattern.
> One person, or maybe a small number of people, carry the burden of keeping
> the organization running. This goes on for years until someone burns out.
> Sometimes new people step before chaos sets in, but too often the
> organization begins a death spiral.
>
> Open source broadly is facing something of a turning point as commercial
> organizations have learned how to profit from open source, but have not yet
> learned they have to contribute to the commons. A particularly relevant
> example is the case of MongoDB where cloud services were offering paid
> hosting while paying nothing to support the project. Gdal's situation
> strikes me as similar. Large commercial vendors are embedding gdal in their
> offerings, either directly in software delivered to users or as part of the
> infrastructure behind the services they provide. Some of these companies
> are very profitable and could well afford to pay their way. Unfortunately,
> it is often the case that the developer who is aware of this reliance on
> gdal may not be in a position to convince his/her management to ante up for
> the "free" software.
>
> What is the path forward?  One path Howard suggests is establishing a
> foundation similar to that behind Qgis. Another alternative, probably far
> more controversial, is a license change. MongoDB created a license class
> directed at the cloud suppliers who were (morally) abusing the free license
> terms. gdal could adopt a license that requires those bundling gdal into a
> commercial product or service to pay their way. As I said, this would no
> doubt be quite controversial. Then there's the case of "second-order"
> free-riders. Gdal is critical technology underlying Qgis, another free,
> open-source project. Should firms that contribute to the qgis foundation
> also contribute to gdal, or can they rely on the appropriate portion of
> their "dues"  to be forwarded to gdal?
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/5b052f89/attachment.html>

From j1 at jimenezshaw.com  Wed Jan 13 13:25:34 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 13 Jan 2021 22:25:34 +0100
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
Message-ID: <CADRrdKtLfDNZtwFnXxJdsT8AqCHqaYdnqcrgNbM-BfoL=Yfs=g@mail.gmail.com>

Kudos++
Even's question about deprecating drivers triggered several discussions:

- Should we deprecate unused drivers? or how to find out that many drivers
are really not used? I liked the idea of reducing the weight in gdal with
unused code. Breaking the execution is the only way that most of the people
understand, and enabling them via environment variable is a good workaround
imho. Unfortunately the timing of Ubuntu LTSs does not help with the
proposed calendar.
If we maintain a library to use old and inefficient formats, "natural
selection" will never extinguish them. (Ok, I do not use any of the formats
in the list, so maybe I am a bit biased).

- How to make GDAL more attractive for contributors? We know that Even is
the main contributor by far. Making the code easier to maintain is a good
idea. It is going to be enough?

- How to finance the development of GDAL? Well, do not forget that Even is
also working a lot in PROJ, a library by the way used by GDAL... (should
GDAL contribute to PROJ, as QGIS should contribute to GDAL and PROJ?) I do
not know how do the donations to QGIS work, and how complicated is to
organize that. A friend mentioned GitHub Sponsors (
https://github.com/sponsors) . Maybe it is an easy way. Not only private
companies may contribute. I am sure that many governmental institutions are
using GDAL and  PROJ in a daily basis. However, as somebody said, the
developer that codes with GDAL usually does not have any power to induce
the company to make a donation. That is my case... but I still insist every
few months (I guess they ignore me more and more).

I want to thank Even for the great work he is doing.

Cheers
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Wed, 13 Jan 2021 at 21:24, David Strip <gdal at stripfamily.net> wrote:

> Kudos to Howard for his succinct summary of the situation and the call to
> action. While I have nowhere near his experience with open source, my
> experience with other volunteer organizations reveals a similar pattern.
> One person, or maybe a small number of people, carry the burden of keeping
> the organization running. This goes on for years until someone burns out.
> Sometimes new people step before chaos sets in, but too often the
> organization begins a death spiral.
>
> Open source broadly is facing something of a turning point as commercial
> organizations have learned how to profit from open source, but have not yet
> learned they have to contribute to the commons. A particularly relevant
> example is the case of MongoDB where cloud services were offering paid
> hosting while paying nothing to support the project. Gdal's situation
> strikes me as similar. Large commercial vendors are embedding gdal in their
> offerings, either directly in software delivered to users or as part of the
> infrastructure behind the services they provide. Some of these companies
> are very profitable and could well afford to pay their way. Unfortunately,
> it is often the case that the developer who is aware of this reliance on
> gdal may not be in a position to convince his/her management to ante up for
> the "free" software.
>
> What is the path forward?  One path Howard suggests is establishing a
> foundation similar to that behind Qgis. Another alternative, probably far
> more controversial, is a license change. MongoDB created a license class
> directed at the cloud suppliers who were (morally) abusing the free license
> terms. gdal could adopt a license that requires those bundling gdal into a
> commercial product or service to pay their way. As I said, this would no
> doubt be quite controversial. Then there's the case of "second-order"
> free-riders. Gdal is critical technology underlying Qgis, another free,
> open-source project. Should firms that contribute to the qgis foundation
> also contribute to gdal, or can they rely on the appropriate portion of
> their "dues"  to be forwarded to gdal?
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/48d8af6a/attachment-0001.html>

From nyall.dawson at gmail.com  Wed Jan 13 14:20:34 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 14 Jan 2021 08:20:34 +1000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CADRrdKtLfDNZtwFnXxJdsT8AqCHqaYdnqcrgNbM-BfoL=Yfs=g@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CADRrdKtLfDNZtwFnXxJdsT8AqCHqaYdnqcrgNbM-BfoL=Yfs=g@mail.gmail.com>
Message-ID: <CAB28AshjvyX5FE9y40c3feScHUdxhnX7EG8R-Yw=RtNT2Rwg1w@mail.gmail.com>

On Thu, 14 Jan 2021 at 07:26, Javier Jimenez Shaw <j1 at jimenezshaw.com> wrote:

> - How to finance the development of GDAL? Well, do not forget that Even is also working a lot in PROJ, a library by the way used by GDAL... (should GDAL contribute to PROJ, as QGIS should contribute to GDAL and PROJ?)

For reference -- QGIS indirectly sponsors improvements and fixes in
GDAL and PROJ by employing Even to work on upstream issues which
impact QGIS during the lead up to any QGIS major release. The project
has recently started doing a similar thing with GEOS through
sponsorship of Sandro Santilli.

Fingers crossed we see more upstream (including non-open-source)
applications follow the same model...

Nyall




>
> I want to thank Even for the great work he is doing.
>
> Cheers
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Wed, 13 Jan 2021 at 21:24, David Strip <gdal at stripfamily.net> wrote:
>>
>> Kudos to Howard for his succinct summary of the situation and the call to action. While I have nowhere near his experience with open source, my experience with other volunteer organizations reveals a similar pattern.  One person, or maybe a small number of people, carry the burden of keeping the organization running. This goes on for years until someone burns out. Sometimes new people step before chaos sets in, but too often the organization begins a death spiral.
>>
>> Open source broadly is facing something of a turning point as commercial organizations have learned how to profit from open source, but have not yet learned they have to contribute to the commons. A particularly relevant example is the case of MongoDB where cloud services were offering paid hosting while paying nothing to support the project. Gdal's situation strikes me as similar. Large commercial vendors are embedding gdal in their offerings, either directly in software delivered to users or as part of the infrastructure behind the services they provide. Some of these companies are very profitable and could well afford to pay their way. Unfortunately, it is often the case that the developer who is aware of this reliance on gdal may not be in a position to convince his/her management to ante up for the "free" software.
>>
>> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change. MongoDB created a license class directed at the cloud suppliers who were (morally) abusing the free license terms. gdal could adopt a license that requires those bundling gdal into a commercial product or service to pay their way. As I said, this would no doubt be quite controversial. Then there's the case of "second-order" free-riders. Gdal is critical technology underlying Qgis, another free, open-source project. Should firms that contribute to the qgis foundation also contribute to gdal, or can they rely on the appropriate portion of their "dues"  to be forwarded to gdal?
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From korolevs at msn.com  Wed Jan 13 14:27:22 2021
From: korolevs at msn.com (korolevs at msn.com)
Date: Wed, 13 Jan 2021 17:27:22 -0500
Subject: [gdal-dev] How to get support OPENJPEG 2.1.1 in GDAL 3.1.4 on
 CentOS 7.
Message-ID: <SJ0PR19MB451052D195628F9635118609D0A90@SJ0PR19MB4510.namprd19.prod.outlook.com>

Need help to get support OPENJPEG 2.1.1 in GDAL 3.1.4 on CentOS 7.
Here are my configurations:

openjpeg-configure:

      cmake -DBUILD_THIRDPARTY:BOOL=ON \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX:PATH=$(prefix)/deps \
      -DBUILD_SHARED_LIBS:bool=off)

gdal4-configure

	CPPFLAGS="-I$(proj_prefix)/include -I$(openjpeg_prefix)/include/openjpeg-2.1" \
	LDFLAGS="-L$(proj_prefix)/lib -L$(openjpeg_prefix)/lib/openjpeg-2.1/" \
	./configure --prefix=$(gdal4_prefix) --with-openjpeg \
	--with-static-proj=$(proj_prefix) --disable-all-optional-drivers --with-pic --without-python \
	--without-netcdf --without-sqlite3 --without-pg --enable-driver-grib)

GDAL is now configured for x86_64-pc-linux-gnu
...
OpenJPEG support:  no
?

Supported Formats:
  VRT -raster,multidimensional raster- (rw+v): Virtual Raster
  DERIVED -raster- (ro): Derived datasets using VRT pixel functions
  GTiff -raster- (rw+vs): GeoTIFF
  COG -raster- (wv): Cloud optimized GeoTIFF generator
  HFA -raster- (rw+v): Erdas Imagine Images (.img)
  PNG -raster- (rwv): Portable Network Graphics
  JPEG -raster- (rwv): JPEG JFIF
  MEM -raster,multidimensional raster- (rw+): In Memory Raster
  GIF -raster- (rwv): Graphics Interchange Format (.gif)
  BIGGIF -raster- (rov): Graphics Interchange Format (.gif)
  PCIDSK -raster,vector- (rw+v): PCIDSK Database File
  PCRaster -raster- (rw+): PCRaster Raster File
  GRIB -raster,multidimensional raster- (rwv): GRIdded Binary (.grb, .grb2)

  I need to have 
  JP2OpenJPEG -raster,vector- (rwv): JPEG-2000 driver based on OpenJPEG library


Slav Korolev
korolevs at msn.com

From nyall.dawson at gmail.com  Wed Jan 13 14:28:44 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 14 Jan 2021 08:28:44 +1000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
Message-ID: <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>

On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> wrote:
> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.

I'm pretty clueless regarding licenses -- but this is an interesting
thought. I wonder if any new drivers added to GDAL could be done with
a dual-licensing under both GPL + some other license which requires
ongoing sponsorship of the GDAL project?

Nyall

From howard at hobu.co  Wed Jan 13 14:58:39 2021
From: howard at hobu.co (Howard Butler)
Date: Wed, 13 Jan 2021 16:58:39 -0600
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
Message-ID: <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>



> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> wrote:
> 
> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> wrote:
>> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.
> 
> I'm pretty clueless regarding licenses -- but this is an interesting
> thought. I wonder if any new drivers added to GDAL could be done with
> a dual-licensing under both GPL + some other license which requires
> ongoing sponsorship of the GDAL project?

License monkey business isn't viable in any way with GDAL. It would just create confusion and erode trust, which we can't get back if broken. 

The big organizations running 100,000,000s of CPU hours extracting information from imagery they're reading in COGs with GDAL need to be donating substantial resources into an organization that provides coordination. The last time I did a fund raise with gdalbarn.com <http://gdalbarn.com/> I was called out for naming some of these organizations and expressing my disappointment they couldn't find a way to participate or simply ignored the request.  Maybe they will step forward this time around.

Whether it is in a new foundation or an existing one like NumFocus, substantial resources need to be dumped in a pot that are earmarked for supporting work that generates value for the project. Chasing new feature work to subsidize project maintenance activities is not sustainable in two directions ? burn out for the maintainer and creeping feature-itis for the project. 

It's clear what's happened in the past is a combination of luck and graciousness by both Frank and Even. 

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/843cf010/attachment.html>

From cgodkin at gmail.com  Wed Jan 13 15:07:48 2021
From: cgodkin at gmail.com (Carl Godkin)
Date: Wed, 13 Jan 2021 15:07:48 -0800
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
Message-ID: <CAE=8km==eH0BcLGnB70RaG0Ka=8C92=cmPrHQJ_0QjzOnXYNMQ@mail.gmail.com>

Hi everyone,

Regarding funding, I thought the barn raising that Howard mentioned from a
few years ago was a good thing.  My little company made a donation and I
think we'd do it again were another "barn" proposed.  Tools like GDAL &
PROJ and related projects are worth supporting and periodic donations seem
to be an easy way to pay our part.

Thanks,
carl

On Wed, Jan 13, 2021 at 2:58 PM Howard Butler <howard at hobu.co> wrote:

>
>
> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>
> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> wrote:
>
> What is the path forward?  One path Howard suggests is establishing a
> foundation similar to that behind Qgis. Another alternative, probably far
> more controversial, is a license change.
>
>
> I'm pretty clueless regarding licenses -- but this is an interesting
> thought. I wonder if any new drivers added to GDAL could be done with
> a dual-licensing under both GPL + some other license which requires
> ongoing sponsorship of the GDAL project?
>
>
> License monkey business isn't viable in any way with GDAL. It would just
> create confusion and erode trust, which we can't get back if broken.
>
> The big organizations running 100,000,000s of CPU hours extracting
> information from imagery they're reading in COGs with GDAL need to be
> donating substantial resources into an organization that provides
> coordination. The last time I did a fund raise with gdalbarn.com I was
> called out for naming some of these organizations and expressing my
> disappointment they couldn't find a way to participate or simply ignored
> the request.  Maybe they will step forward this time around.
>
> Whether it is in a new foundation or an existing one like NumFocus,
> substantial resources need to be dumped in a pot that are earmarked for
> supporting work that generates value for the project. Chasing new feature
> work to subsidize project maintenance activities is not sustainable in two
> directions ? burn out for the maintainer and creeping feature-itis for the
> project.
>
> It's clear what's happened in the past is a combination of luck and
> graciousness by both Frank and Even.
>
> Howard
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/86dd19d8/attachment-0001.html>

From sean at mapbox.com  Wed Jan 13 15:37:32 2021
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 13 Jan 2021 16:37:32 -0700
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
Message-ID: <CADPhZXyWM8Uq4aFNb5nx8+mYO7FfpJr-n1A8A_X0D+PgJ8-94w@mail.gmail.com>

Hi Howard and all,

On Wed, Jan 13, 2021 at 3:58 PM Howard Butler <howard at hobu.co> wrote:

>
>
> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>
> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> wrote:
>
> What is the path forward?  One path Howard suggests is establishing a
> foundation similar to that behind Qgis. Another alternative, probably far
> more controversial, is a license change.
>
>
> I'm pretty clueless regarding licenses -- but this is an interesting
> thought. I wonder if any new drivers added to GDAL could be done with
> a dual-licensing under both GPL + some other license which requires
> ongoing sponsorship of the GDAL project?
>
>
> License monkey business isn't viable in any way with GDAL. It would just
> create confusion and erode trust, which we can't get back if broken.
>

> The big organizations running 100,000,000s of CPU hours extracting
> information from imagery they're reading in COGs with GDAL need to be
> donating substantial resources into an organization that provides
> coordination. The last time I did a fund raise with gdalbarn.com I was
> called out for naming some of these organizations and expressing my
> disappointment they couldn't find a way to participate or simply ignored
> the request.  Maybe they will step forward this time around.
>

Maybe? Getting shamed feels bad and makes people bitter. The good news is
that the attrition rate in big organizations is pretty high and those
people may have left and been replaced by new people who we can approach
again. This turnover is also the bad news: people who have been
stakeholders in the past may have moved on as well.


> Whether it is in a new foundation or an existing one like NumFocus,
> substantial resources need to be dumped in a pot that are earmarked for
> supporting work that generates value for the project. Chasing new feature
> work to subsidize project maintenance activities is not sustainable in two
> directions ? burn out for the maintainer and creeping feature-itis for the
> project.
>

Agreed. I'd like to try to improve this situation in 2021.


>
> It's clear what's happened in the past is a combination of luck and
> graciousness by both Frank and Even.
>
> Howard
>

Howard, you're so right. Not every industry enjoys a resource like GDAL.
It's a special project run by uniquely dedicated people.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/ede48fbf/attachment.html>

From runette at gmail.com  Wed Jan 13 15:47:14 2021
From: runette at gmail.com (Paul Harwood)
Date: Wed, 13 Jan 2021 23:47:14 +0000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CAE=8km==eH0BcLGnB70RaG0Ka=8C92=cmPrHQJ_0QjzOnXYNMQ@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <CAE=8km==eH0BcLGnB70RaG0Ka=8C92=cmPrHQJ_0QjzOnXYNMQ@mail.gmail.com>
Message-ID: <CAE8nN5PRkgtkPXL+VaOnoZeZtgBQta1NRAaD9mrYx+1ssVWBTA@mail.gmail.com>

+1 and more to Carl and Howard

That said, having been inside a FAANG I can understand that the contortions
that you have to go through just to get a "charity" payment approved in
terms of proving probity especially post SOX are enormous. I tried to get a
G-normous company to provide network support after the earthquake in Nepal.
It took a 5 minute call to VP to get a 6-figure budget and 6 months to find
a route to get the money or goods delivered! I was told at the time that
the lead time for getting a new not-for-profit organisation approved was 2
- 5 years! And don't even think of trying to get a payment for services
without a service description, PO and invoice from an approved supplier. It
is just physically impossible. They have huge resources in developer time
that they throw around at a moment's notices but exporting cash is
impossible.

I don't know the solution. The usual solution is an existing large,
US-based foundation that has existing dealings with the FAANGS that could
act as a conduit (perfectly legally).

On Wed, 13 Jan 2021 at 23:08, Carl Godkin <cgodkin at gmail.com> wrote:

> Hi everyone,
>
> Regarding funding, I thought the barn raising that Howard mentioned from a
> few years ago was a good thing.  My little company made a donation and I
> think we'd do it again were another "barn" proposed.  Tools like GDAL &
> PROJ and related projects are worth supporting and periodic donations seem
> to be an easy way to pay our part.
>
> Thanks,
> carl
>
> On Wed, Jan 13, 2021 at 2:58 PM Howard Butler <howard at hobu.co> wrote:
>
>>
>>
>> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>>
>> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> wrote:
>>
>> What is the path forward?  One path Howard suggests is establishing a
>> foundation similar to that behind Qgis. Another alternative, probably far
>> more controversial, is a license change.
>>
>>
>> I'm pretty clueless regarding licenses -- but this is an interesting
>> thought. I wonder if any new drivers added to GDAL could be done with
>> a dual-licensing under both GPL + some other license which requires
>> ongoing sponsorship of the GDAL project?
>>
>>
>> License monkey business isn't viable in any way with GDAL. It would just
>> create confusion and erode trust, which we can't get back if broken.
>>
>> The big organizations running 100,000,000s of CPU hours extracting
>> information from imagery they're reading in COGs with GDAL need to be
>> donating substantial resources into an organization that provides
>> coordination. The last time I did a fund raise with gdalbarn.com I was
>> called out for naming some of these organizations and expressing my
>> disappointment they couldn't find a way to participate or simply ignored
>> the request.  Maybe they will step forward this time around.
>>
>> Whether it is in a new foundation or an existing one like NumFocus,
>> substantial resources need to be dumped in a pot that are earmarked for
>> supporting work that generates value for the project. Chasing new
>> feature work to subsidize project maintenance activities is not sustainable
>> in two directions ? burn out for the maintainer and creeping feature-itis
>> for the project.
>>
>> It's clear what's happened in the past is a combination of luck and
>> graciousness by both Frank and Even.
>>
>> Howard
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/e4f74baf/attachment.html>

From nelson.gerald.c at gmail.com  Wed Jan 13 15:49:12 2021
From: nelson.gerald.c at gmail.com (Gerald Nelson)
Date: Wed, 13 Jan 2021 23:49:12 +0000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CAE8nN5PRkgtkPXL+VaOnoZeZtgBQta1NRAaD9mrYx+1ssVWBTA@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <CAE=8km==eH0BcLGnB70RaG0Ka=8C92=cmPrHQJ_0QjzOnXYNMQ@mail.gmail.com>
 <CAE8nN5PRkgtkPXL+VaOnoZeZtgBQta1NRAaD9mrYx+1ssVWBTA@mail.gmail.com>
Message-ID: <MW2PR16MB2172870EE38C3F20B464DF4BADA90@MW2PR16MB2172.namprd16.prod.outlook.com>

How does linux development get funded?

Gerald C. Nelson
Professor Emeritus, UIUC
+1 217-390-7888 (cell)
+1 970-639-2079 (land line)
Skype: jerrynelson
http://bit.ly/1arho7d

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Paul Harwood <runette at gmail.com>
Date: Wednesday, January 13, 2021 at 4:47 PM
To: Carl Godkin <cgodkin at gmail.com>
Cc: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?

+1 and more to Carl and Howard

That said, having been inside a FAANG I can understand that the contortions that you have to go through just to get a "charity" payment approved in terms of proving probity especially post SOX are enormous. I tried to get a G-normous company to provide network support after the earthquake in Nepal. It took a 5 minute call to VP to get a 6-figure budget and 6 months to find a route to get the money or goods delivered! I was told at the time that the lead time for getting a new not-for-profit organisation approved was 2 - 5 years! And don't even think of trying to get a payment for services without a service description, PO and invoice from an approved supplier. It is just physically impossible. They have huge resources in developer time that they throw around at a moment's notices but exporting cash is impossible.

I don't know the solution. The usual solution is an existing large, US-based foundation that has existing dealings with the FAANGS that could act as a conduit (perfectly legally).

On Wed, 13 Jan 2021 at 23:08, Carl Godkin <cgodkin at gmail.com<mailto:cgodkin at gmail.com>> wrote:
Hi everyone,

Regarding funding, I thought the barn raising that Howard mentioned from a few years ago was a good thing.  My little company made a donation and I think we'd do it again were another "barn" proposed.  Tools like GDAL & PROJ and related projects are worth supporting and periodic donations seem to be an easy way to pay our part.

Thanks,
carl

On Wed, Jan 13, 2021 at 2:58 PM Howard Butler <howard at hobu.co<mailto:howard at hobu.co>> wrote:



On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com<mailto:nyall.dawson at gmail.com>> wrote:

On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net<mailto:gdal at stripfamily.net>> wrote:

What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.

I'm pretty clueless regarding licenses -- but this is an interesting
thought. I wonder if any new drivers added to GDAL could be done with
a dual-licensing under both GPL + some other license which requires
ongoing sponsorship of the GDAL project?

License monkey business isn't viable in any way with GDAL. It would just create confusion and erode trust, which we can't get back if broken.

The big organizations running 100,000,000s of CPU hours extracting information from imagery they're reading in COGs with GDAL need to be donating substantial resources into an organization that provides coordination. The last time I did a fund raise with gdalbarn.com<http://gdalbarn.com> I was called out for naming some of these organizations and expressing my disappointment they couldn't find a way to participate or simply ignored the request.  Maybe they will step forward this time around.

Whether it is in a new foundation or an existing one like NumFocus, substantial resources need to be dumped in a pot that are earmarked for supporting work that generates value for the project. Chasing new feature work to subsidize project maintenance activities is not sustainable in two directions ? burn out for the maintainer and creeping feature-itis for the project.

It's clear what's happened in the past is a combination of luck and graciousness by both Frank and Even.

Howard
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/7aa9d6fb/attachment-0001.html>

From gdal at stripfamily.net  Wed Jan 13 16:03:54 2021
From: gdal at stripfamily.net (David Strip)
Date: Wed, 13 Jan 2021 17:03:54 -0700
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
Message-ID: <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/bf854469/attachment.html>

From gdt at lexort.com  Wed Jan 13 16:09:05 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 13 Jan 2021 19:09:05 -0500
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CAE8nN5PRkgtkPXL+VaOnoZeZtgBQta1NRAaD9mrYx+1ssVWBTA@mail.gmail.com>
 (Paul Harwood's message of "Wed, 13 Jan 2021 23:47:14 +0000")
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <CAE=8km==eH0BcLGnB70RaG0Ka=8C92=cmPrHQJ_0QjzOnXYNMQ@mail.gmail.com>
 <CAE8nN5PRkgtkPXL+VaOnoZeZtgBQta1NRAaD9mrYx+1ssVWBTA@mail.gmail.com>
Message-ID: <rmio8hsl6qm.fsf@s1.lexort.com>


Paul Harwood <runette at gmail.com> writes:

> I don't know the solution. The usual solution is an existing large,
> US-based foundation that has existing dealings with the FAANGS that could
> act as a conduit (perfectly legally).

I'd like to thank Howard for speaking so clearly.

One of the really broken things is that big companies seem to have a
hard time making a donation to an open source project.  Yet they can pay
for proprietary software licenses with no effort.  So I wonder if
selling some kind of "gold support contract", would be viable, where all
that they get is to put the gold label on issues on the tracker, but
then it's a "support contract" and thus easy like a license, vs a
"donation".

I don't buy the notion that Sarbanes-Oxley makes this hard.  I think
that's just an excuse, based on my experience.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/41afaa98/attachment.sig>

From gdt at lexort.com  Wed Jan 13 16:31:01 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 13 Jan 2021 19:31:01 -0500
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net> (David
 Strip's message of "Wed, 13 Jan 2021 17:03:54 -0700")
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net>
Message-ID: <rmik0sgl5q2.fsf@s1.lexort.com>


David Strip <gdal at stripfamily.net> writes:

>       License monkey business isn't viable in any way with
>         GDAL. It would just create confusion and erode trust, which we
>         can't get back if broken. 

Strongly agreed.

>     gdal wouldn't be the first project to change it's license, though I
>     really don't know enough about the consequences others have faced
>     for doing so.? Even the revered GPL is a moving target.
>     If the alternative is a burned out lead developer/maintainer and a
>     dead project, that's not a desirable outcome either. 

My impression is that every project that has tried to play games with
open source licenses has basically been a one-company project, and that
this has led to shunning.

>     I'm not sure I agree that changing the license would create
>     confusion and erode trust. Assuming that we (whoever "we" are)
>     actually have the legal right to change the license, let's play a
>     hypothetical.

The only projects that can arbitrarily change license are those in which

  The copyright is held my one company or a small number of people.
  This is why projects that pretend to be open source and ask for
  assignment of rights to a company are problematic.

  There are a small number of contributors who would agree.

  Projects that are e.g BSD licensed that want to move to GPL.  The old
  code remains, but the new code has a copyleft.

>     The new license maintains fees from two classes of users:
>     1. Anyone incorporating gdal into a product that is 
>     ???? a. not completely open source,? and
>     ??? b. charges a license fee (perpetual or subscription), and
>     ??? c. has more than x active licenses (x = 500? 1000?)
>     2. Any for-profit organization utilizing gdal in-house for data
>     analysis, conversion, on-line services,? etc, in excess of x CPU
>     hours per year (where y = 1000? 5000?...)
>     3. Any organization that uses gdal indirectly through a free, open
>     source product (eg, QGIS) or a licensed product covered under 1)
>     above is exempt from 1) and 2). 

That's obviously no longer open source.

>     I don't think I need to name names - you know who the big players
>     are in categories 1 and 2. Only two in category 1 and none in
>     category 2 stepped up with a large (relative to the ask) commitment
>     in the previous barn raising. 

I think you should name names.  It's not helpful to pretend we shouldn't.

>     ?Equally, the vast majority of users will have no question that they
>     continue to operate in the free range. Given that this whole thing
>     started with a suggestion that the only way to make users aware of
>     deprecation of obsolete drivers was to make the drivers stop
>     working, how many users will even be aware of a license change?

This will cause binary gdal packages, and everything that depends on
them, to get kicked out of first-class status or dropped from many
packaging systems.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/a443e9a5/attachment.sig>

From ari.jolma at gmail.com  Wed Jan 13 22:05:51 2021
From: ari.jolma at gmail.com (Ari Jolma)
Date: Thu, 14 Jan 2021 08:05:51 +0200
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <67bb2855-3d07-4027-aad5-64001dcfd78b@mapgears.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <67bb2855-3d07-4027-aad5-64001dcfd78b@mapgears.com>
Message-ID: <43684ece-6cca-b322-53b6-7cf899c0d385@gmail.com>

Thank you Howard, Daniel, Jukka, and others.

When I google for qgis I get its page and six sub pages in the way 
Google does it. One of those is "Donations". When I do the same for 
GDAL, there's no such page. I guess the first and practical thing to do 
would be to make regular donations possible. The second thing would be 
to advocate companies/people to make donations without strings attached. 
That's already much in the domain of OSGeo, but the first thing is quite 
much in the project's domain.

Best regards,

Ari


Daniel Morissette kirjoitti 13.1.2021 klo 21.11:
> Thank you Howard for a great analysis and for pointing out the key 
> problems.
>
> Personally I think the top two problems are:
>
> 1- Bus number: we need to find a way to increase the number of active 
> maintainers to ensure the viability and velocity of the project
>
> 2- Sustainable revenue stream for maintenance activities: as you 
> explained, it is relatively easy to fund features, but profitable 
> companies selling software or services that use GDAL need to realize 
> that it would be an investment for them to contribute even just a 
> fraction of 1% of their sales in "non-string-attached funding" to 
> support non-sexy stuff such as release management, bug fixes, security 
> fixes, dependency upgrades, packaging, docs, etc... not only in GDAL, 
> but in the top-5 open source components that they rely on.
>
> The QGIS approach to managing funding is an option, but it's not the 
> only one. I would tend to go for a more decentralized approach to 
> reduce the risk for the project with a single entity supporting it.
>
> I step up to work with you Howard toward improving the situation. 
> (Actually I had already written personally to Even to discuss some 
> options before seeing your reply)
>
> Daniel
>
>
>
> On 2021-01-13 12:33, Howard Butler wrote:
>>
>>> Is there something fundamentally wrong with the current GDAL? 
>>
>> The project's history is one person doing most of the work. This 
>> person eventually burns out.
>>
>> Here's a table of the top five lifetime commits to the repository as 
>> of December 2020.
>>
>> Even Rouault ??19,838
>> Frank Warmerdam ??11,503
>> Kurt Schwehr ??3,403
>> Andrey Kiselev ??1,320
>> Howard Butler ??768
>>
>> The reason why this person burns out is they are actually doing 
>> *three* jobs, not one. Three, you say?
>>
>> First is the actual maintainer job. You're the clearinghouse for 
>> bugs, the primary authority on the mailing list, the first respondent 
>> in the bug tracker, and the one that organizes and cuts the software 
>> release. When we think of the maintainer for the GDAL project, this 
>> is what we think of. No one organization will pay for just this job.
>>
>> This means you need a revenue stream to make it maintenance your full 
>> time gig. That's easy enough, just get paid for working on GDAL, 
>> right? Well sure, but people don't want to pay for you to fix bugs 
>> that users vaguely provide in the mailing list. They want to pay for 
>> functionality they need to add to their software. So you are in a 
>> spot ? you have to *add* more to the software to earn revenue. For 
>> GDAL, adding more means more drivers and more capabilities for those 
>> drivers (CPL, VSICloud, etc). This creates more bugs and maintenance 
>> load that the original directed funder supports for only a little 
>> while. This second job is in conflict with the first and the 
>> dissonance amplifies as time goes one.
>>
>> The third job is you have to solicit work through the contacts you've 
>> built up to keep the revenue hopper full. Invoicing, statements of 
>> work, negotiation, telecons, and the usual business stuff. People see 
>> you as cheap because you're "open source", and pressure you on price, 
>> scope, and completion time. You eventually orient about a small cadre 
>> of repeat clients with strong trust relationships.
>>
>> How can this be fixed?
>>
>> 1) Burn through the current maintainer and hope another one comes 
>> along. The users of the GDAL project simply got lucky that Even 
>> picked up the torch after Frank moved on. Maybe that happens again on 
>> the next iteration.
>>
>> 2) Refactor the software so that more maintainers can participate. 
>> That's been our current discussion, which doesn't seem to be 
>> converging on any solutions.
>>
>> 3) Provide a revenue stream so the maintainer only has to do the 
>> maintenance job, and not the other two jobs that are in conflict with 
>> the project's maintenance. This person should be paid like the FAANG 
>> senior engineer that's currently taking GDAL and using it to add some 
>> geo widget to their software.
>>
>> OSGeo was supposed to be the answer to #3, but in 15 years of 
>> existence it has shown it is not and never will be. Maybe it is time 
>> to start a GDAL foundation ala QGIS and others and direct corporate 
>> benefactors to fund it directly. Those benefactors would have to 
>> pledge significant resources to at least get to the level of a FAANG 
>> senior engineer as a start.
>>
>> Howard
>>
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>

From lhomme.xavier at gmail.com  Wed Jan 13 22:33:00 2021
From: lhomme.xavier at gmail.com (xavier lhomme)
Date: Thu, 14 Jan 2021 07:33:00 +0100
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <43684ece-6cca-b322-53b6-7cf899c0d385@gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <67bb2855-3d07-4027-aad5-64001dcfd78b@mapgears.com>
 <43684ece-6cca-b322-53b6-7cf899c0d385@gmail.com>
Message-ID: <CACqzBMzG=V7VTJT4Vd4dbY43Wh709eAkNoLzNcZg4YFc-dROhg@mail.gmail.com>

Hello all
 The question of maintaining the old drivers raises a whole bunch of
questions: how to finance the technical debt, how to involve more
developers in this project, how to promote it, ... GDAL is an OSGeo
project. Shouldn't these questions be addressed by OSGeo which should help
in the distribution of funds, help in piloting this project...? Maybe OSGeo
could get closer to an organization like OGC with members funding projects,
initiative projets, testbed ...

Best regards
xlhomme

Le jeu. 14 janv. 2021 ? 07:06, Ari Jolma <ari.jolma at gmail.com> a ?crit :

> Thank you Howard, Daniel, Jukka, and others.
>
> When I google for qgis I get its page and six sub pages in the way
> Google does it. One of those is "Donations". When I do the same for
> GDAL, there's no such page. I guess the first and practical thing to do
> would be to make regular donations possible. The second thing would be
> to advocate companies/people to make donations without strings attached.
> That's already much in the domain of OSGeo, but the first thing is quite
> much in the project's domain.
>
> Best regards,
>
> Ari
>
>
> Daniel Morissette kirjoitti 13.1.2021 klo 21.11:
> > Thank you Howard for a great analysis and for pointing out the key
> > problems.
> >
> > Personally I think the top two problems are:
> >
> > 1- Bus number: we need to find a way to increase the number of active
> > maintainers to ensure the viability and velocity of the project
> >
> > 2- Sustainable revenue stream for maintenance activities: as you
> > explained, it is relatively easy to fund features, but profitable
> > companies selling software or services that use GDAL need to realize
> > that it would be an investment for them to contribute even just a
> > fraction of 1% of their sales in "non-string-attached funding" to
> > support non-sexy stuff such as release management, bug fixes, security
> > fixes, dependency upgrades, packaging, docs, etc... not only in GDAL,
> > but in the top-5 open source components that they rely on.
> >
> > The QGIS approach to managing funding is an option, but it's not the
> > only one. I would tend to go for a more decentralized approach to
> > reduce the risk for the project with a single entity supporting it.
> >
> > I step up to work with you Howard toward improving the situation.
> > (Actually I had already written personally to Even to discuss some
> > options before seeing your reply)
> >
> > Daniel
> >
> >
> >
> > On 2021-01-13 12:33, Howard Butler wrote:
> >>
> >>> Is there something fundamentally wrong with the current GDAL?
> >>
> >> The project's history is one person doing most of the work. This
> >> person eventually burns out.
> >>
> >> Here's a table of the top five lifetime commits to the repository as
> >> of December 2020.
> >>
> >> Even Rouault ? 19,838
> >> Frank Warmerdam ? 11,503
> >> Kurt Schwehr ? 3,403
> >> Andrey Kiselev ? 1,320
> >> Howard Butler ? 768
> >>
> >> The reason why this person burns out is they are actually doing
> >> *three* jobs, not one. Three, you say?
> >>
> >> First is the actual maintainer job. You're the clearinghouse for
> >> bugs, the primary authority on the mailing list, the first respondent
> >> in the bug tracker, and the one that organizes and cuts the software
> >> release. When we think of the maintainer for the GDAL project, this
> >> is what we think of. No one organization will pay for just this job.
> >>
> >> This means you need a revenue stream to make it maintenance your full
> >> time gig. That's easy enough, just get paid for working on GDAL,
> >> right? Well sure, but people don't want to pay for you to fix bugs
> >> that users vaguely provide in the mailing list. They want to pay for
> >> functionality they need to add to their software. So you are in a
> >> spot ? you have to *add* more to the software to earn revenue. For
> >> GDAL, adding more means more drivers and more capabilities for those
> >> drivers (CPL, VSICloud, etc). This creates more bugs and maintenance
> >> load that the original directed funder supports for only a little
> >> while. This second job is in conflict with the first and the
> >> dissonance amplifies as time goes one.
> >>
> >> The third job is you have to solicit work through the contacts you've
> >> built up to keep the revenue hopper full. Invoicing, statements of
> >> work, negotiation, telecons, and the usual business stuff. People see
> >> you as cheap because you're "open source", and pressure you on price,
> >> scope, and completion time. You eventually orient about a small cadre
> >> of repeat clients with strong trust relationships.
> >>
> >> How can this be fixed?
> >>
> >> 1) Burn through the current maintainer and hope another one comes
> >> along. The users of the GDAL project simply got lucky that Even
> >> picked up the torch after Frank moved on. Maybe that happens again on
> >> the next iteration.
> >>
> >> 2) Refactor the software so that more maintainers can participate.
> >> That's been our current discussion, which doesn't seem to be
> >> converging on any solutions.
> >>
> >> 3) Provide a revenue stream so the maintainer only has to do the
> >> maintenance job, and not the other two jobs that are in conflict with
> >> the project's maintenance. This person should be paid like the FAANG
> >> senior engineer that's currently taking GDAL and using it to add some
> >> geo widget to their software.
> >>
> >> OSGeo was supposed to be the answer to #3, but in 15 years of
> >> existence it has shown it is not and never will be. Maybe it is time
> >> to start a GDAL foundation ala QGIS and others and direct corporate
> >> benefactors to fund it directly. Those benefactors would have to
> >> pledge significant resources to at least get to the level of a FAANG
> >> senior engineer as a start.
> >>
> >> Howard
> >>
> >>
> >>
> >> _______________________________________________
> >> gdal-dev mailing list
> >> gdal-dev at lists.osgeo.org
> >> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >>
> >
> >
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/77e4653a/attachment-0001.html>

From gcpp.kalxas at gmail.com  Thu Jan 14 01:00:26 2021
From: gcpp.kalxas at gmail.com (Angelos Tzotsos)
Date: Thu, 14 Jan 2021 11:00:26 +0200
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
Message-ID: <721a8028-858e-58a0-aa82-c9fb1418d004@gmail.com>

Perhaps we could ask some of these organizations to sponsor GDAL through 
https://github.com/sponsors/OSGeo which is a recurring sponsorship ?

Angelos


On 1/14/21 12:58 AM, Howard Butler wrote:
>
>> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>>
>> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> wrote:
>>> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.
>> I'm pretty clueless regarding licenses -- but this is an interesting
>> thought. I wonder if any new drivers added to GDAL could be done with
>> a dual-licensing under both GPL + some other license which requires
>> ongoing sponsorship of the GDAL project?
> License monkey business isn't viable in any way with GDAL. It would just create confusion and erode trust, which we can't get back if broken.
>
> The big organizations running 100,000,000s of CPU hours extracting information from imagery they're reading in COGs with GDAL need to be donating substantial resources into an organization that provides coordination. The last time I did a fund raise with gdalbarn.com <http://gdalbarn.com/> I was called out for naming some of these organizations and expressing my disappointment they couldn't find a way to participate or simply ignored the request.  Maybe they will step forward this time around.
>
> Whether it is in a new foundation or an existing one like NumFocus, substantial resources need to be dumped in a pot that are earmarked for supporting work that generates value for the project. Chasing new feature work to subsidize project maintenance activities is not sustainable in two directions ? burn out for the maintainer and creeping feature-itis for the project.
>
> It's clear what's happened in the past is a combination of luck and graciousness by both Frank and Even.
>
> Howard
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Angelos Tzotsos, PhD
President
Open Source Geospatial Foundation
http://users.ntua.gr/tzotsos

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/ad514207/attachment.html>

From runette at gmail.com  Thu Jan 14 01:23:03 2021
From: runette at gmail.com (Paul Harwood)
Date: Thu, 14 Jan 2021 09:23:03 +0000
Subject: [gdal-dev] Fwd:  Driver maintenance - long-term solution ?
In-Reply-To: <CAE8nN5Pew=OYXq-hDoFBgdVJTj-71GM3VRg1S3oQb7uz9z2aEw@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <CAE=8km==eH0BcLGnB70RaG0Ka=8C92=cmPrHQJ_0QjzOnXYNMQ@mail.gmail.com>
 <CAE8nN5PRkgtkPXL+VaOnoZeZtgBQta1NRAaD9mrYx+1ssVWBTA@mail.gmail.com>
 <rmio8hsl6qm.fsf@s1.lexort.com>
 <CAE8nN5Pew=OYXq-hDoFBgdVJTj-71GM3VRg1S3oQb7uz9z2aEw@mail.gmail.com>
Message-ID: <CAE8nN5Odj8Mc1cWM=3Rkv60vK3AyGh=Thak8r5WwfjZUaQv4Dg@mail.gmail.com>

oops - forgot to reply-all :(

Just to add one example though. I am sure you will find that all FAANGs
have "modern slavery" regulations that mean that anyone they pay has to
able to prove that they are not exploiting workers. I would hope that you
would agree that they SHOULD have modern slavery regulations.

How exactly does open-source software prove that? I am sure there are
established mechanisms but do you know them ... ?

---------- Forwarded message ---------
From: Paul Harwood <runette at gmail.com>
Date: Thu, 14 Jan 2021 at 09:15
Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?
To: Greg Troxel <gdt at lexort.com>




One of the really broken things is that big companies seem to have a
> hard time making a donation to an open source project.  Yet they can pay
> for proprietary software licenses with no effort.  So I wonder if
> selling some kind of "gold support contract", would be viable, where all
> that they get is to put the gold label on issues on the tracker, but
> then it's a "support contract" and thus easy like a license, vs a
> "donation".
>
> I don't buy the notion that Sarbanes-Oxley makes this hard.  I think
> that's just an excuse, based on my experience.
>
> IANAL

I don't think it matters whether it is really SOX or just the way these
companies have implemented SOX, the fact is that the risk management
process that came out of it make it a lot of work for the individuals in
those companies to make this type of payment. That is not a justification
for anything, but we should recognise that the individual in those
companies who wants to support us is not going to get an easy life!

You can see from the lawyers and accountants point of view that a product
with a scope of work, a PO and an invoice is a much easier paper trail to
follow than a donation. It is difficult to prove that a donation is not
patronage. In some countries (possibly most, I don't know) you cannot call
it charity even if it is not-for-profit because you get something back -
the software. You cannot be seen to get any material return from an
organisation you make a charitable donation to. So it is a gratis payment
for no services to an organization that also just happens to provide you
software for free. Say that to lawyer and they will probably ask you
exactly how you are different from the mafia :)

I am not saying that it is not possible - I am sure there are very good
ways to do this. I am just saying that you have to acknowledge it is hard.
You cannot just tell them they are wrong and that they should just give out
some money. Most of the people you are talking to will probably agree with
you but also forget you in about 5 minutes and go and do something that is
possible.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/1877be27/attachment.html>

From runette at gmail.com  Thu Jan 14 01:34:39 2021
From: runette at gmail.com (Paul Harwood)
Date: Thu, 14 Jan 2021 09:34:39 +0000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <721a8028-858e-58a0-aa82-c9fb1418d004@gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <721a8028-858e-58a0-aa82-c9fb1418d004@gmail.com>
Message-ID: <CAE8nN5M44bPv6SG9mAGx-FLvCK=-jOgLQuEyDYoZ61bLDQurEA@mail.gmail.com>

Just a quick question.

Since the FAANGs were the question, do you know if OSGeo has been vetted
and approved as a Foundation by any of the FAANGs?

As I say, when I was involved on the other side for one, they had more than
a 2 year lead time for that process (I don't know if that was universal or
if they solved that problem). If the answer is yes, then that could be a
way forward - and indeed in at least two of FAANGs that I know the
employees have virtual "pots" of both money and time that they can donate
to approved organisations to "give back" - so appealing to the grass
roots could be a way forward.

You might have to spin it as "promoting the value of Geo software to solve
world problems" or some such - since as I say paying for free software is
questionable legal territory.

On Thu, 14 Jan 2021 at 09:00, Angelos Tzotsos <gcpp.kalxas at gmail.com> wrote:

> Perhaps we could ask some of these organizations to sponsor GDAL through
> https://github.com/sponsors/OSGeo which is a recurring sponsorship ?
>
> Angelos
>
>
> On 1/14/21 12:58 AM, Howard Butler wrote:
>
> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> <nyall.dawson at gmail.com> wrote:
>
> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> <gdal at stripfamily.net> wrote:
>
> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.
>
> I'm pretty clueless regarding licenses -- but this is an interesting
> thought. I wonder if any new drivers added to GDAL could be done with
> a dual-licensing under both GPL + some other license which requires
> ongoing sponsorship of the GDAL project?
>
> License monkey business isn't viable in any way with GDAL. It would just create confusion and erode trust, which we can't get back if broken.
>
> The big organizations running 100,000,000s of CPU hours extracting information from imagery they're reading in COGs with GDAL need to be donating substantial resources into an organization that provides coordination. The last time I did a fund raise with gdalbarn.com <http://gdalbarn.com/> <http://gdalbarn.com/> I was called out for naming some of these organizations and expressing my disappointment they couldn't find a way to participate or simply ignored the request.  Maybe they will step forward this time around.
>
> Whether it is in a new foundation or an existing one like NumFocus, substantial resources need to be dumped in a pot that are earmarked for supporting work that generates value for the project. Chasing new feature work to subsidize project maintenance activities is not sustainable in two directions ? burn out for the maintainer and creeping feature-itis for the project.
>
> It's clear what's happened in the past is a combination of luck and graciousness by both Frank and Even.
>
> Howard
>
>
> _______________________________________________
> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> --
> Angelos Tzotsos, PhD
> President
> Open Source Geospatial Foundationhttp://users.ntua.gr/tzotsos
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/f0525442/attachment-0001.html>

From ian at planetmayo.com  Thu Jan 14 01:46:12 2021
From: ian at planetmayo.com (Ian Mayo)
Date: Thu, 14 Jan 2021 09:46:12 +0000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CAE8nN5M44bPv6SG9mAGx-FLvCK=-jOgLQuEyDYoZ61bLDQurEA@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <721a8028-858e-58a0-aa82-c9fb1418d004@gmail.com>
 <CAE8nN5M44bPv6SG9mAGx-FLvCK=-jOgLQuEyDYoZ61bLDQurEA@mail.gmail.com>
Message-ID: <CAHWjJFZFyLx5Ee6=PBvJv4K7rLpGFbink_zQLm-tfecw2taBYQ@mail.gmail.com>

One quick thought on finances that I haven't seen presented in this thread.

We've identified that organisations are willing to fund new features -
frequently since the new feature aligns with some business opportunity
for them.

What if the hourly/daily rates for new features included a
"Maintenance tax" - maybe 20%?  This would go into the pot to fund
maintenance.

The benefits of this are:
- new donors (& donation paths) do not have to be found
- new features incur a cost more indicative of through-life costs

Just a thought.
Ian

On Thu, 14 Jan 2021 at 09:35, Paul Harwood <runette at gmail.com> wrote:
>
> Just a quick question.
>
> Since the FAANGs were the question, do you know if OSGeo has been vetted and approved as a Foundation by any of the FAANGs?
>
> As I say, when I was involved on the other side for one, they had more than a 2 year lead time for that process (I don't know if that was universal or if they solved that problem). If the answer is yes, then that could be a way forward - and indeed in at least two of FAANGs that I know the employees have virtual "pots" of both money and time that they can donate to approved organisations to "give back" - so appealing to the grass roots could be a way forward.
>
> You might have to spin it as "promoting the value of Geo software to solve world problems" or some such - since as I say paying for free software is questionable legal territory.
>
> On Thu, 14 Jan 2021 at 09:00, Angelos Tzotsos <gcpp.kalxas at gmail.com> wrote:
>>
>> Perhaps we could ask some of these organizations to sponsor GDAL through https://github.com/sponsors/OSGeo which is a recurring sponsorship ?
>>
>> Angelos
>>
>>

From even.rouault at spatialys.com  Thu Jan 14 01:51:12 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Jan 2021 10:51:12 +0100
Subject: [gdal-dev] How to get support OPENJPEG 2.1.1 in GDAL 3.1.4 on
 CentOS 7.
In-Reply-To: <SJ0PR19MB451052D195628F9635118609D0A90@SJ0PR19MB4510.namprd19.prod.outlook.com>
References: <SJ0PR19MB451052D195628F9635118609D0A90@SJ0PR19MB4510.namprd19.prod.outlook.com>
Message-ID: <1610627699.MRRnDNCker@even-i700>

On mercredi 13 janvier 2021 17:27:22 CET korolevs at msn.com wrote:
> Need help to get support OPENJPEG 2.1.1 in GDAL 3.1.4 on CentOS 7.
> Here are my configurations:
> 
> openjpeg-configure:
> 
>       cmake -DBUILD_THIRDPARTY:BOOL=ON \
>       -DCMAKE_BUILD_TYPE=Release \
>       -DCMAKE_INSTALL_PREFIX:PATH=$(prefix)/deps \
>       -DBUILD_SHARED_LIBS:bool=off)
> 
> gdal4-configure
> 
> 	CPPFLAGS="-I$(proj_prefix)/include
> -I$(openjpeg_prefix)/include/openjpeg-2.1" \ LDFLAGS="-L$(proj_prefix)/lib
> -L$(openjpeg_prefix)/lib/openjpeg-2.1/" \ ./configure
> --prefix=$(gdal4_prefix) --with-openjpeg \
> 	--with-static-proj=$(proj_prefix) --disable-all-optional-drivers --with-pic
> --without-python \ --without-netcdf --without-sqlite3 --without-pg
> --enable-driver-grib)

try

PKG_CONFIG_PATH=$(openjpeg_prefix)/lib/pkgconfig ./configure ...

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at aitchison.me.uk  Thu Jan 14 02:50:37 2021
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 14 Jan 2021 10:50:37 +0000 (GMT)
Subject: [gdal-dev] Fwd:  Driver maintenance - long-term solution ?
In-Reply-To: <CAE8nN5Odj8Mc1cWM=3Rkv60vK3AyGh=Thak8r5WwfjZUaQv4Dg@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <CAE=8km==eH0BcLGnB70RaG0Ka=8C92=cmPrHQJ_0QjzOnXYNMQ@mail.gmail.com>
 <CAE8nN5PRkgtkPXL+VaOnoZeZtgBQta1NRAaD9mrYx+1ssVWBTA@mail.gmail.com>
 <rmio8hsl6qm.fsf@s1.lexort.com>
 <CAE8nN5Pew=OYXq-hDoFBgdVJTj-71GM3VRg1S3oQb7uz9z2aEw@mail.gmail.com>
 <CAE8nN5Odj8Mc1cWM=3Rkv60vK3AyGh=Thak8r5WwfjZUaQv4Dg@mail.gmail.com>
Message-ID: <ccda1d16-35d5-c0a1-416a-20ca1663b217@aitchison.me.uk>

On Thu, 14 Jan 2021, Paul Harwood wrote:

> oops - forgot to reply-all :(
>
> Just to add one example though. I am sure you will find that all FAANGs
> have "modern slavery" regulations that mean that anyone they pay has to
> able to prove that they are not exploiting workers. I would hope that you
> would agree that they SHOULD have modern slavery regulations.
>
> How exactly does open-source software prove that? I am sure there are
> established mechanisms but do you know them ... ?

Is it true ?
I mean open source developers *are* being exploited at the moment.

Hmm. That means these companies are exploiting us.
How do we talk to their modern slavery auditors ?


> ---------- Forwarded message ---------
> From: Paul Harwood <runette at gmail.com>
> Date: Thu, 14 Jan 2021 at 09:15
> Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?
> To: Greg Troxel <gdt at lexort.com>
>
>
>
>
> One of the really broken things is that big companies seem to have a
>> hard time making a donation to an open source project.  Yet they can pay
>> for proprietary software licenses with no effort.  So I wonder if
>> selling some kind of "gold support contract", would be viable, where all
>> that they get is to put the gold label on issues on the tracker, but
>> then it's a "support contract" and thus easy like a license, vs a
>> "donation".
>>
>> I don't buy the notion that Sarbanes-Oxley makes this hard.  I think
>> that's just an excuse, based on my experience.
>>
>> IANAL
>
> I don't think it matters whether it is really SOX or just the way these
> companies have implemented SOX, the fact is that the risk management
> process that came out of it make it a lot of work for the individuals in
> those companies to make this type of payment. That is not a justification
> for anything, but we should recognise that the individual in those
> companies who wants to support us is not going to get an easy life!
>
> You can see from the lawyers and accountants point of view that a product
> with a scope of work, a PO and an invoice is a much easier paper trail to
> follow than a donation. It is difficult to prove that a donation is not
> patronage. In some countries (possibly most, I don't know) you cannot call
> it charity even if it is not-for-profit because you get something back -
> the software. You cannot be seen to get any material return from an
> organisation you make a charitable donation to. So it is a gratis payment
> for no services to an organization that also just happens to provide you
> software for free. Say that to lawyer and they will probably ask you
> exactly how you are different from the mafia :)
>
> I am not saying that it is not possible - I am sure there are very good
> ways to do this. I am just saying that you have to acknowledge it is hard.
> You cannot just tell them they are wrong and that they should just give out
> some money. Most of the people you are talking to will probably agree with
> you but also forget you in about 5 minutes and go and do something that is
> possible.
>

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From mmfuller at protonmail.com  Thu Jan 14 04:33:01 2021
From: mmfuller at protonmail.com (mmfuller)
Date: Thu, 14 Jan 2021 12:33:01 +0000
Subject: [gdal-dev] gdal-dev Digest, Vol 200, Issue 29
In-Reply-To: <mailman.12943.1610605993.26371.gdal-dev@lists.osgeo.org>
References: <mailman.12943.1610605993.26371.gdal-dev@lists.osgeo.org>
Message-ID: <dEcuf-vhuhqtMRvTx6QPgUZl2APfKMWvb18krf2Ld4_0aiS3PJ_Gkw8TidigPv5mUdqkaAyWTu4yT9RXyhINz2a7xM8zT_yLRwE-bgoNULA=@protonmail.com>

Lurker here,
Having read through several (not all) posts in this thread, I have the feeling that the GDAL team is at a cross-roads.
It seems the main issue is that FAANG and a ton of startups, successful companies, etc are dependent on GDAL, but won't pay to support it.

What some groups do in this situation is to announce the imminent death, sorry, closure, of the repo. "GDAL will no longer be maintained after X date."

Now all those senior engineers run to their managers and say "We are about to lose a critical component of our software, with no available replacement"
"What?!" says the manager. "That is not acceptable! How do we prevent this?" to which the engineer says "We need to fund the GDAL team".

If enough companies have that conversation, realizing they are up sh*ts creek without GDAL, they suddenly find the funds to support it.

At least in theory. So basically, I'm suggesting presenting the software world with an ultimatum. Pay up or lose it.

Unethical? Immoral? Against the FOSS philosophy? Or just practical / realistic?

I don't know but given the current state of things (based on this thread), perhaps it's the only way?

Mike (one of those senior engineers)
PS: apologies if I'm making brash suggestions that have been debated in the past or just seem too outrageous

Sent with ProtonMail Secure Email.

??????? Original Message ???????

On Wednesday, January 13th, 2021 at 11:33 PM, <gdal-dev-request at lists.osgeo.org> wrote:

> Send gdal-dev mailing list submissions to
>
> gdal-dev at lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> or, via email, send a message with subject or body 'help' to
>
> gdal-dev-request at lists.osgeo.org
>
> You can reach the person managing the list at
>
> gdal-dev-owner at lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
>
> than "Re: Contents of gdal-dev digest..."
>
> Today's Topics:
>
> 1.  Re: Driver maintenance - long-term solution ? (David Strip)
> 2.  Re: Driver maintenance - long-term solution ? (Greg Troxel)
> 3.  Re: Driver maintenance - long-term solution ? (Greg Troxel)
> 4.  Re: Driver maintenance - long-term solution ? (Ari Jolma)
> 5.  Re: Driver maintenance - long-term solution ? (xavier lhomme)
>
>
> Message: 1
>
> Date: Wed, 13 Jan 2021 17:03:54 -0700
>
> From: David Strip gdal at stripfamily.net
>
> To: Howard Butler howard at hobu.co, "gdal-dev at lists.osgeo.org"
>
>     <gdal-dev at lists.osgeo.org>
>
>
> Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?
>
> Message-ID: 368fd9fc-e27e-b85c-9543-d74468b4ad8b at stripfamily.net
>
> Content-Type: text/plain; charset="us-ascii"
>
> An HTML attachment was scrubbed...
>
> URL: http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/bf854469/attachment-0001.html
>
> Message: 2
>
> Date: Wed, 13 Jan 2021 19:09:05 -0500
>
> From: Greg Troxel gdt at lexort.com
>
> To: Paul Harwood runette at gmail.com
>
> Cc: Carl Godkin cgodkin at gmail.com, "gdal-dev\@lists.osgeo.org"
>
>     <gdal-dev at lists.osgeo.org>
>
>
> Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?
>
> Message-ID: rmio8hsl6qm.fsf at s1.lexort.com
>
> Content-Type: text/plain; charset="us-ascii"
>
> Paul Harwood runette at gmail.com writes:
>
> > I don't know the solution. The usual solution is an existing large,
> >
> > US-based foundation that has existing dealings with the FAANGS that could
> >
> > act as a conduit (perfectly legally).
>
> I'd like to thank Howard for speaking so clearly.
>
> One of the really broken things is that big companies seem to have a
>
> hard time making a donation to an open source project. Yet they can pay
>
> for proprietary software licenses with no effort. So I wonder if
>
> selling some kind of "gold support contract", would be viable, where all
>
> that they get is to put the gold label on issues on the tracker, but
>
> then it's a "support contract" and thus easy like a license, vs a
>
> "donation".
>
> I don't buy the notion that Sarbanes-Oxley makes this hard. I think
>
> that's just an excuse, based on my experience.
>
> -------------- next part --------------
>
> A non-text attachment was scrubbed...
>
> Name: signature.asc
>
> Type: application/pgp-signature
>
> Size: 194 bytes
>
> Desc: not available
>
> URL: http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/41afaa98/attachment-0001.sig
>
> Message: 3
>
> Date: Wed, 13 Jan 2021 19:31:01 -0500
>
> From: Greg Troxel gdt at lexort.com
>
> To: David Strip gdal at stripfamily.net
>
> Cc: Howard Butler howard at hobu.co, "gdal-dev\@lists.osgeo.org"
>
>     <gdal-dev at lists.osgeo.org>
>
>
> Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?
>
> Message-ID: rmik0sgl5q2.fsf at s1.lexort.com
>
> Content-Type: text/plain; charset="utf-8"
>
> David Strip gdal at stripfamily.net writes:
>
> >       License monkey business isn't viable in any way with
> >         GDAL. It would just create confusion and erode trust, which we
> >         can't get back if broken.
> >
>
> Strongly agreed.
>
> >     gdal wouldn't be the first project to change it's license, though I
> >     really don't know enough about the consequences others have faced
> >     for doing so.? Even the revered GPL is a moving target.
> >     If the alternative is a burned out lead developer/maintainer and a
> >     dead project, that's not a desirable outcome either.
> >
>
> My impression is that every project that has tried to play games with
>
> open source licenses has basically been a one-company project, and that
>
> this has led to shunning.
>
> >     I'm not sure I agree that changing the license would create
> >     confusion and erode trust. Assuming that we (whoever "we" are)
> >     actually have the legal right to change the license, let's play a
> >     hypothetical.
> >
>
> The only projects that can arbitrarily change license are those in which
>
> The copyright is held my one company or a small number of people.
>
> This is why projects that pretend to be open source and ask for
>
> assignment of rights to a company are problematic.
>
> There are a small number of contributors who would agree.
>
> Projects that are e.g BSD licensed that want to move to GPL. The old
>
> code remains, but the new code has a copyleft.
>
> >     The new license maintains fees from two classes of users:
> >     1. Anyone incorporating gdal into a product that is
> >     ???? a. not completely open source,? and
> >     ??? b. charges a license fee (perpetual or subscription), and
> >     ??? c. has more than x active licenses (x = 500? 1000?)
> >     2. Any for-profit organization utilizing gdal in-house for data
> >     analysis, conversion, on-line services,? etc, in excess of x CPU
> >     hours per year (where y = 1000? 5000?...)
> >     3. Any organization that uses gdal indirectly through a free, open
> >     source product (eg, QGIS) or a licensed product covered under 1)
> >     above is exempt from 1) and 2).
> >
>
> That's obviously no longer open source.
>
> >     I don't think I need to name names - you know who the big players
> >     are in categories 1 and 2. Only two in category 1 and none in
> >     category 2 stepped up with a large (relative to the ask) commitment
> >     in the previous barn raising.
> >
>
> I think you should name names. It's not helpful to pretend we shouldn't.
>
> >     ?Equally, the vast majority of users will have no question that they
> >     continue to operate in the free range. Given that this whole thing
> >     started with a suggestion that the only way to make users aware of
> >     deprecation of obsolete drivers was to make the drivers stop
> >     working, how many users will even be aware of a license change?
> >
>
> This will cause binary gdal packages, and everything that depends on
>
> them, to get kicked out of first-class status or dropped from many
>
> packaging systems.
>
> -------------- next part --------------
>
> A non-text attachment was scrubbed...
>
> Name: signature.asc
>
> Type: application/pgp-signature
>
> Size: 194 bytes
>
> Desc: not available
>
> URL: http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210113/a443e9a5/attachment-0001.sig
>
> Message: 4
>
> Date: Thu, 14 Jan 2021 08:05:51 +0200
>
> From: Ari Jolma ari.jolma at gmail.com
>
> To: gdal-dev at lists.osgeo.org
>
> Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?
>
> Message-ID: 43684ece-6cca-b322-53b6-7cf899c0d385 at gmail.com
>
> Content-Type: text/plain; charset=utf-8; format=flowed
>
> Thank you Howard, Daniel, Jukka, and others.
>
> When I google for qgis I get its page and six sub pages in the way
>
> Google does it. One of those is "Donations". When I do the same for
>
> GDAL, there's no such page. I guess the first and practical thing to do
>
> would be to make regular donations possible. The second thing would be
>
> to advocate companies/people to make donations without strings attached.
>
> That's already much in the domain of OSGeo, but the first thing is quite
>
> much in the project's domain.
>
> Best regards,
>
> Ari
>
> Daniel Morissette kirjoitti 13.1.2021 klo 21.11:
>
> > Thank you Howard for a great analysis and for pointing out the key
> >
> > problems.
> >
> > Personally I think the top two problems are:
> >
> > 1- Bus number: we need to find a way to increase the number of active
> >
> > maintainers to ensure the viability and velocity of the project
> >
> > 2- Sustainable revenue stream for maintenance activities: as you
> >
> > explained, it is relatively easy to fund features, but profitable
> >
> > companies selling software or services that use GDAL need to realize
> >
> > that it would be an investment for them to contribute even just a
> >
> > fraction of 1% of their sales in "non-string-attached funding" to
> >
> > support non-sexy stuff such as release management, bug fixes, security
> >
> > fixes, dependency upgrades, packaging, docs, etc... not only in GDAL,
> >
> > but in the top-5 open source components that they rely on.
> >
> > The QGIS approach to managing funding is an option, but it's not the
> >
> > only one. I would tend to go for a more decentralized approach to
> >
> > reduce the risk for the project with a single entity supporting it.
> >
> > I step up to work with you Howard toward improving the situation.
> >
> > (Actually I had already written personally to Even to discuss some
> >
> > options before seeing your reply)
> >
> > Daniel
> >
> > On 2021-01-13 12:33, Howard Butler wrote:
> >
> > > > Is there something fundamentally wrong with the current GDAL?
> > >
> > > The project's history is one person doing most of the work. This
> > >
> > > person eventually burns out.
> > >
> > > Here's a table of the top five lifetime commits to the repository as
> > >
> > > of December 2020.
> > >
> > > Even Rouault ??19,838
> > >
> > > Frank Warmerdam ??11,503
> > >
> > > Kurt Schwehr ??3,403
> > >
> > > Andrey Kiselev ??1,320
> > >
> > > Howard Butler ??768
> > >
> > > The reason why this person burns out is they are actually doing
> > >
> > > three jobs, not one. Three, you say?
> > >
> > > First is the actual maintainer job. You're the clearinghouse for
> > >
> > > bugs, the primary authority on the mailing list, the first respondent
> > >
> > > in the bug tracker, and the one that organizes and cuts the software
> > >
> > > release. When we think of the maintainer for the GDAL project, this
> > >
> > > is what we think of. No one organization will pay for just this job.
> > >
> > > This means you need a revenue stream to make it maintenance your full
> > >
> > > time gig. That's easy enough, just get paid for working on GDAL,
> > >
> > > right? Well sure, but people don't want to pay for you to fix bugs
> > >
> > > that users vaguely provide in the mailing list. They want to pay for
> > >
> > > functionality they need to add to their software. So you are in a
> > >
> > > spot ? you have to add more to the software to earn revenue. For
> > >
> > > GDAL, adding more means more drivers and more capabilities for those
> > >
> > > drivers (CPL, VSICloud, etc). This creates more bugs and maintenance
> > >
> > > load that the original directed funder supports for only a little
> > >
> > > while. This second job is in conflict with the first and the
> > >
> > > dissonance amplifies as time goes one.
> > >
> > > The third job is you have to solicit work through the contacts you've
> > >
> > > built up to keep the revenue hopper full. Invoicing, statements of
> > >
> > > work, negotiation, telecons, and the usual business stuff. People see
> > >
> > > you as cheap because you're "open source", and pressure you on price,
> > >
> > > scope, and completion time. You eventually orient about a small cadre
> > >
> > > of repeat clients with strong trust relationships.
> > >
> > > How can this be fixed?
> > >
> > > 1.  Burn through the current maintainer and hope another one comes
> > >
> > >     along. The users of the GDAL project simply got lucky that Even
> > >
> > >     picked up the torch after Frank moved on. Maybe that happens again on
> > >
> > >     the next iteration.
> > >
> > > 2.  Refactor the software so that more maintainers can participate.
> > >
> > >     That's been our current discussion, which doesn't seem to be
> > >
> > >     converging on any solutions.
> > >
> > > 3.  Provide a revenue stream so the maintainer only has to do the
> > >
> > >     maintenance job, and not the other two jobs that are in conflict with
> > >
> > >     the project's maintenance. This person should be paid like the FAANG
> > >
> > >     senior engineer that's currently taking GDAL and using it to add some
> > >
> > >     geo widget to their software.
> > >
> > >
> > > OSGeo was supposed to be the answer to #3, but in 15 years of
> > >
> > > existence it has shown it is not and never will be. Maybe it is time
> > >
> > > to start a GDAL foundation ala QGIS and others and direct corporate
> > >
> > > benefactors to fund it directly. Those benefactors would have to
> > >
> > > pledge significant resources to at least get to the level of a FAANG
> > >
> > > senior engineer as a start.
> > >
> > > Howard
> > >
> > > gdal-dev mailing list
> > >
> > > gdal-dev at lists.osgeo.org
> > >
> > > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
>
> Message: 5
>
> Date: Thu, 14 Jan 2021 07:33:00 +0100
>
> From: xavier lhomme lhomme.xavier at gmail.com
>
> To: gdal-dev gdal-dev at lists.osgeo.org
>
> Subject: Re: [gdal-dev] Driver maintenance - long-term solution ?
>
> Message-ID:
>
> CACqzBMzG=V7VTJT4Vd4dbY43Wh709eAkNoLzNcZg4YFc-dROhg at mail.gmail.com
>
> Content-Type: text/plain; charset="utf-8"
>
> Hello all
>
> The question of maintaining the old drivers raises a whole bunch of
>
> questions: how to finance the technical debt, how to involve more
>
> developers in this project, how to promote it, ... GDAL is an OSGeo
>
> project. Shouldn't these questions be addressed by OSGeo which should help
>
> in the distribution of funds, help in piloting this project...? Maybe OSGeo
>
> could get closer to an organization like OGC with members funding projects,
>
> initiative projets, testbed ...
>
> Best regards
>
> xlhomme
>
> Le jeu. 14 janv. 2021 ? 07:06, Ari Jolma ari.jolma at gmail.com a ?crit :
>
> > Thank you Howard, Daniel, Jukka, and others.
> >
> > When I google for qgis I get its page and six sub pages in the way
> >
> > Google does it. One of those is "Donations". When I do the same for
> >
> > GDAL, there's no such page. I guess the first and practical thing to do
> >
> > would be to make regular donations possible. The second thing would be
> >
> > to advocate companies/people to make donations without strings attached.
> >
> > That's already much in the domain of OSGeo, but the first thing is quite
> >
> > much in the project's domain.
> >
> > Best regards,
> >
> > Ari
> >
> > Daniel Morissette kirjoitti 13.1.2021 klo 21.11:
> >
> > > Thank you Howard for a great analysis and for pointing out the key
> > >
> > > problems.
> > >
> > > Personally I think the top two problems are:
> > >
> > > 1- Bus number: we need to find a way to increase the number of active
> > >
> > > maintainers to ensure the viability and velocity of the project
> > >
> > > 2- Sustainable revenue stream for maintenance activities: as you
> > >
> > > explained, it is relatively easy to fund features, but profitable
> > >
> > > companies selling software or services that use GDAL need to realize
> > >
> > > that it would be an investment for them to contribute even just a
> > >
> > > fraction of 1% of their sales in "non-string-attached funding" to
> > >
> > > support non-sexy stuff such as release management, bug fixes, security
> > >
> > > fixes, dependency upgrades, packaging, docs, etc... not only in GDAL,
> > >
> > > but in the top-5 open source components that they rely on.
> > >
> > > The QGIS approach to managing funding is an option, but it's not the
> > >
> > > only one. I would tend to go for a more decentralized approach to
> > >
> > > reduce the risk for the project with a single entity supporting it.
> > >
> > > I step up to work with you Howard toward improving the situation.
> > >
> > > (Actually I had already written personally to Even to discuss some
> > >
> > > options before seeing your reply)
> > >
> > > Daniel
> > >
> > > On 2021-01-13 12:33, Howard Butler wrote:
> > >
> > > > > Is there something fundamentally wrong with the current GDAL?
> > > >
> > > > The project's history is one person doing most of the work. This
> > > >
> > > > person eventually burns out.
> > > >
> > > > Here's a table of the top five lifetime commits to the repository as
> > > >
> > > > of December 2020.
> > > >
> > > > Even Rouault ? 19,838
> > > >
> > > > Frank Warmerdam ? 11,503
> > > >
> > > > Kurt Schwehr ? 3,403
> > > >
> > > > Andrey Kiselev ? 1,320
> > > >
> > > > Howard Butler ? 768
> > > >
> > > > The reason why this person burns out is they are actually doing
> > > >
> > > > three jobs, not one. Three, you say?
> > > >
> > > > First is the actual maintainer job. You're the clearinghouse for
> > > >
> > > > bugs, the primary authority on the mailing list, the first respondent
> > > >
> > > > in the bug tracker, and the one that organizes and cuts the software
> > > >
> > > > release. When we think of the maintainer for the GDAL project, this
> > > >
> > > > is what we think of. No one organization will pay for just this job.
> > > >
> > > > This means you need a revenue stream to make it maintenance your full
> > > >
> > > > time gig. That's easy enough, just get paid for working on GDAL,
> > > >
> > > > right? Well sure, but people don't want to pay for you to fix bugs
> > > >
> > > > that users vaguely provide in the mailing list. They want to pay for
> > > >
> > > > functionality they need to add to their software. So you are in a
> > > >
> > > > spot ? you have to add more to the software to earn revenue. For
> > > >
> > > > GDAL, adding more means more drivers and more capabilities for those
> > > >
> > > > drivers (CPL, VSICloud, etc). This creates more bugs and maintenance
> > > >
> > > > load that the original directed funder supports for only a little
> > > >
> > > > while. This second job is in conflict with the first and the
> > > >
> > > > dissonance amplifies as time goes one.
> > > >
> > > > The third job is you have to solicit work through the contacts you've
> > > >
> > > > built up to keep the revenue hopper full. Invoicing, statements of
> > > >
> > > > work, negotiation, telecons, and the usual business stuff. People see
> > > >
> > > > you as cheap because you're "open source", and pressure you on price,
> > > >
> > > > scope, and completion time. You eventually orient about a small cadre
> > > >
> > > > of repeat clients with strong trust relationships.
> > > >
> > > > How can this be fixed?
> > > >
> > > > 1.  Burn through the current maintainer and hope another one comes
> > > >
> > > >     along. The users of the GDAL project simply got lucky that Even
> > > >
> > > >     picked up the torch after Frank moved on. Maybe that happens again on
> > > >
> > > >     the next iteration.
> > > >
> > > > 2.  Refactor the software so that more maintainers can participate.
> > > >
> > > >     That's been our current discussion, which doesn't seem to be
> > > >
> > > >     converging on any solutions.
> > > >
> > > > 3.  Provide a revenue stream so the maintainer only has to do the
> > > >
> > > >     maintenance job, and not the other two jobs that are in conflict with
> > > >
> > > >     the project's maintenance. This person should be paid like the FAANG
> > > >
> > > >     senior engineer that's currently taking GDAL and using it to add some
> > > >
> > > >     geo widget to their software.
> > > >
> > > >
> > > > OSGeo was supposed to be the answer to #3, but in 15 years of
> > > >
> > > > existence it has shown it is not and never will be. Maybe it is time
> > > >
> > > > to start a GDAL foundation ala QGIS and others and direct corporate
> > > >
> > > > benefactors to fund it directly. Those benefactors would have to
> > > >
> > > > pledge significant resources to at least get to the level of a FAANG
> > > >
> > > > senior engineer as a start.
> > > >
> > > > Howard
> > > >
> > > > gdal-dev mailing list
> > > >
> > > > gdal-dev at lists.osgeo.org
> > > >
> > > > https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >
> > gdal-dev mailing list
> >
> > gdal-dev at lists.osgeo.org
> >
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> -------------- next part --------------
>
> An HTML attachment was scrubbed...
>
> URL: http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/77e4653a/attachment.html
>
> Subject: Digest Footer
>
> gdal-dev mailing list
>
> gdal-dev at lists.osgeo.org
>
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> ----------------------------------------------------------------------------------------------------
>
> End of gdal-dev Digest, Vol 200, Issue 29

From cavallini at faunalia.it  Thu Jan 14 07:14:55 2021
From: cavallini at faunalia.it (Paolo Cavallini)
Date: Thu, 14 Jan 2021 16:14:55 +0100
Subject: [gdal-dev] Fwd: Catching many errors of the same record
 (ogr2ogr)
In-Reply-To: <026f9538-3ab5-6108-c713-8b3009103d0f@gmail.com>
References: <2970223.U9Y0CrkEHy@even-i700>
 <026f9538-3ab5-6108-c713-8b3009103d0f@gmail.com>
Message-ID: <25ac0d53-3e96-5f6f-b3b6-421f4abc5a95@faunalia.it>

Hi Even, all,

> On vendredi 8 janvier 2021 15:58:39 CET matteo wrote:
>> Hi all,
>>
>> I've 2 small questions during a syncing from a GPKG to a PG DB with
>> constraints using -skipfailures:
>>
>> * is it possible to show only the constraint error and not also the
>> insert one? Even if there is only a single error, reading the log it
>> seems that there are 2 of them (I know a person should only read....)
>> * is there are 2 errors (e.g. constraints error) BUT in the same record,
>> ogr2ogr shows only the first one and not all of them
> 
> Why not experimenting outside GDAL a bit ?
> 
> $ psql
> 
> # create table foo(bar integer check (bar = 1), baz integer check (baz =
> 1));
> # insert into foo values (2,2);
> ERROR:? new row for relation "foo" violates check constraint
> "foo_bar_check"
> DETAIL:? Failing row contains (2, 2).
> 
> 
> and asking your favorite search engine about
> "postgresql get all constraint violations"
> 
> ==>
> https://stackoverflow.com/questions/23822162/error-message-with-all-constraint-violations-in-postgres

thanks Evan for this reply. The approach you suggested work well for an
interactive session, but not if one wants to write a little script
importing a set of layers and sending all the errors to the user. in
this case:
* reducing verbosity would make things more clear for the user
* listing all errors (non only all failing records, the first error per
record, as -skipfailures does, but all failing values for each record)
would be important to provide the user a list of issues to fix before
resubmitting the layer to import.
I have studied ogr2ogr man, but I do not find a way to solve either of
these problems. From your reply I assume this is a limitation of the pg
provider. Am I wrong? Is there a way to circumvent this?
Thanks a lot.
All the best.

-- 
Paolo Cavallini
www.faunalia.eu - QGIS.org
training, support, development on QGIS, PostGIS and more

From even.rouault at spatialys.com  Thu Jan 14 07:24:02 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Jan 2021 16:24:02 +0100
Subject: [gdal-dev] Fwd: Catching many errors of the same record
 (ogr2ogr)
In-Reply-To: <25ac0d53-3e96-5f6f-b3b6-421f4abc5a95@faunalia.it>
References: <2970223.U9Y0CrkEHy@even-i700>
 <026f9538-3ab5-6108-c713-8b3009103d0f@gmail.com>
 <25ac0d53-3e96-5f6f-b3b6-421f4abc5a95@faunalia.it>
Message-ID: <2730499.rumePxV4Qc@even-i700>

On jeudi 14 janvier 2021 16:14:55 CET Paolo Cavallini wrote:
> Hi Even, all,
> 
> > On vendredi 8 janvier 2021 15:58:39 CET matteo wrote:
> >> Hi all,
> >> 
> >> I've 2 small questions during a syncing from a GPKG to a PG DB with
> >> constraints using -skipfailures:
> >> 
> >> * is it possible to show only the constraint error and not also the
> >> insert one? Even if there is only a single error, reading the log it
> >> seems that there are 2 of them (I know a person should only read....)
> >> * is there are 2 errors (e.g. constraints error) BUT in the same record,
> >> ogr2ogr shows only the first one and not all of them
> > 
> > Why not experimenting outside GDAL a bit ?
> > 
> > $ psql
> > 
> > # create table foo(bar integer check (bar = 1), baz integer check (baz =
> > 1));
> > # insert into foo values (2,2);
> > ERROR:  new row for relation "foo" violates check constraint
> > "foo_bar_check"
> > DETAIL:  Failing row contains (2, 2).
> > 
> > 
> > and asking your favorite search engine about
> > "postgresql get all constraint violations"
> > 
> > ==>
> > https://stackoverflow.com/questions/23822162/error-message-with-all-constr
> > aint-violations-in-postgres
> thanks Evan for this reply. The approach you suggested work well for an
> interactive session,

That was not at all my point :-) The above was supposed to demonstrate that 
even when using PostgreSQL outside of any GDAL context, you cannot do what you 
want (only one violation reported at a time), so you shouldn't expect GDAL to 
be better than PostgreSQL offers.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cavallini at faunalia.it  Thu Jan 14 07:48:20 2021
From: cavallini at faunalia.it (Paolo Cavallini)
Date: Thu, 14 Jan 2021 16:48:20 +0100
Subject: [gdal-dev] Fwd: Catching many errors of the same record
 (ogr2ogr)
In-Reply-To: <2730499.rumePxV4Qc@even-i700>
References: <2970223.U9Y0CrkEHy@even-i700>
 <026f9538-3ab5-6108-c713-8b3009103d0f@gmail.com>
 <25ac0d53-3e96-5f6f-b3b6-421f4abc5a95@faunalia.it>
 <2730499.rumePxV4Qc@even-i700>
Message-ID: <df9bd33b-5b2d-4379-172e-272951805634@faunalia.it>

Hi Even,

Il 14/01/21 16:24, Even Rouault ha scritto:

> That was not at all my point :-) The above was supposed to demonstrate that 
> even when using PostgreSQL outside of any GDAL context, you cannot do what you 
> want (only one violation reported at a time), so you shouldn't expect GDAL to 
> be better than PostgreSQL offers.

OK, so it's a pg limitation, nothing we can do about, at least in the
short term.
Thanks a lot for the clarification.
Cheers.
-- 
Paolo Cavallini
www.faunalia.eu - QGIS.org
training, support, development on QGIS, PostGIS and more

From gdal at stripfamily.net  Thu Jan 14 09:23:37 2021
From: gdal at stripfamily.net (David Strip)
Date: Thu, 14 Jan 2021 10:23:37 -0700
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <rmik0sgl5q2.fsf@s1.lexort.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net>
 <rmik0sgl5q2.fsf@s1.lexort.com>
Message-ID: <a50eb380-d423-ca53-d1d7-c2270d63da30@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/e4c09a72/attachment.html>

From korolevs at msn.com  Thu Jan 14 12:50:55 2021
From: korolevs at msn.com (korolevs at msn.com)
Date: Thu, 14 Jan 2021 15:50:55 -0500
Subject: [gdal-dev] How to get support OPENJPEG 2.1.1 in GDAL 3.1.4 on
 CentOS 7.
In-Reply-To: <1610627699.MRRnDNCker@even-i700>
References: <SJ0PR19MB451052D195628F9635118609D0A90@SJ0PR19MB4510.namprd19.prod.outlook.com>
 <1610627699.MRRnDNCker@even-i700>
Message-ID: <SJ0PR19MB4510E4EA1B698C4B382DF956D0A80@SJ0PR19MB4510.namprd19.prod.outlook.com>

Thank you for help. I?ve changed gdal config like this:

cd $(gdal4_src) && PKG_CONFIG_PATH=$(openjpeg_prefix)/lib/pkgconfig \
	CPPFLAGS="-I$(proj_prefix)/include" LDFLAGS="-L$(proj_prefix)/lib" \
	./configure $(CONFIGURE_FLAGS) --prefix=$(gdal4_prefix) --with-openjpeg \
	--with-static-proj=$(proj_prefix) --disable-all-optional-drivers --with-pic --without-python \
	--without-netcdf --without-sqlite3 --without-pg --enable-driver-grib

Now after make I get:
checking for OPENJPEG? yes
but still:
GDAL is now configured for x86_64-pc-linux-gnu
? OpenJPEG support:          no

and no JP2OpenJPEG in the gdalinfo list of formats.

Slav Korolev
korolevs at msn.com


> On Jan 14, 2021, at 4:51 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> On mercredi 13 janvier 2021 17:27:22 CET korolevs at msn.com <mailto:korolevs at msn.com> wrote:
>> Need help to get support OPENJPEG 2.1.1 in GDAL 3.1.4 on CentOS 7.
>> Here are my configurations:
>> 
>> openjpeg-configure:
>> 
>>      cmake -DBUILD_THIRDPARTY:BOOL=ON \
>>      -DCMAKE_BUILD_TYPE=Release \
>>      -DCMAKE_INSTALL_PREFIX:PATH=$(prefix)/deps \
>>      -DBUILD_SHARED_LIBS:bool=off)
>> 
>> gdal4-configure
>> 
>> 	CPPFLAGS="-I$(proj_prefix)/include
>> -I$(openjpeg_prefix)/include/openjpeg-2.1" \ LDFLAGS="-L$(proj_prefix)/lib
>> -L$(openjpeg_prefix)/lib/openjpeg-2.1/" \ ./configure
>> --prefix=$(gdal4_prefix) --with-openjpeg \
>> 	--with-static-proj=$(proj_prefix) --disable-all-optional-drivers --with-pic
>> --without-python \ --without-netcdf --without-sqlite3 --without-pg
>> --enable-driver-grib)
> 
> try
> 
> PKG_CONFIG_PATH=$(openjpeg_prefix)/lib/pkgconfig ./configure ...
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com <http://www.spatialys.com/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/083b51b8/attachment.html>

From marty.sullivan at cornell.edu  Thu Jan 14 14:09:15 2021
From: marty.sullivan at cornell.edu (Marty J. Sullivan)
Date: Thu, 14 Jan 2021 22:09:15 +0000
Subject: [gdal-dev] gdal_translate receiving "Warning 6: driver GTiff does
 not support creation option WEBP_LOSSLESS"
Message-ID: <4B27714F-8EEF-4815-B4FB-30760211D8E3@contoso.com>

Hello,

I am attempting to create a COG format GeoTIFF with WEBP_LOSSLESS compression using GDAL.

I have compiled GDAL 3.2.1 from source with libwebp 0.4.2 installed from Debian Buster repos (I?ve also tried with libwebp v1.1.0 installed from source, no difference). When I run the ./configure script before compiling, WEBP support is listed as ?Yes?

When I try to create a COG with gdal_translate, and setting QUALITY=100, GDAL returns ?Warning 6: driver GTiff does not support creation option WEBP_LOSSLESS?

I would expect that WEBP_LOSSLESS would work because the documentation for the GTiff driver states ?WEBP_LOSSLESS=True/False: (GDAL >= 2.4.0 and libwebp >= 0.1.4): By default, lossy compression is used. If set to True, lossless compression will be used.?

Here is the command I am running, it works fine when running with another compression (or choosing QUALITY=99 for WEBP)

gdal_translate -of COG -co COMPRESS=WEBP -co QUALITY=100 -co NUM_THREADS=ALL_CPUS -co RESAMPLING=NEAREST -co OVERVIEW_RESAMPLING=NEAREST -co WARP_RESAMPLING=NEAREST -co OVERVIEWS=AUTO -co TILING_SCHEME=CUSTOM -co ZOOM_LEVEL_STRATEGY=UPPER input.tif output.tif

Thanks for any guidance on getting WEBP_LOSSLESS to work!

Marty Sullivan
Cornell University
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210114/f789fd1d/attachment-0001.html>

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jan 14 14:27:57 2021
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 14 Jan 2021 15:27:57 -0700 (MST)
Subject: [gdal-dev] gdal_translate receiving "Warning 6: driver GTiff
 does not support creation option WEBP_LOSSLESS"
In-Reply-To: <4B27714F-8EEF-4815-B4FB-30760211D8E3@contoso.com>
References: <4B27714F-8EEF-4815-B4FB-30760211D8E3@contoso.com>
Message-ID: <1610663277487-0.post@n6.nabble.com>

Hi,

I would also have a try by actually using -co WEBP_LOSSLESS=True even by the
error message it is perhaps automatically applied.

-Jukka Rahkonen-


Marty J. Sullivan wrote
> Hello,
> 
> I am attempting to create a COG format GeoTIFF with WEBP_LOSSLESS
> compression using GDAL.
> 
> I have compiled GDAL 3.2.1 from source with libwebp 0.4.2 installed from
> Debian Buster repos (I?ve also tried with libwebp v1.1.0 installed from
> source, no difference). When I run the ./configure script before
> compiling, WEBP support is listed as ?Yes?
> 
> When I try to create a COG with gdal_translate, and setting QUALITY=100,
> GDAL returns ?Warning 6: driver GTiff does not support creation option
> WEBP_LOSSLESS?
> 
> I would expect that WEBP_LOSSLESS would work because the documentation for
> the GTiff driver states ?WEBP_LOSSLESS=True/False: (GDAL >= 2.4.0 and
> libwebp >= 0.1.4): By default, lossy compression is used. If set to True,
> lossless compression will be used.?
> 
> Here is the command I am running, it works fine when running with another
> compression (or choosing QUALITY=99 for WEBP)
> 
> gdal_translate -of COG -co COMPRESS=WEBP -co QUALITY=100 -co
> NUM_THREADS=ALL_CPUS -co RESAMPLING=NEAREST -co
> OVERVIEW_RESAMPLING=NEAREST -co WARP_RESAMPLING=NEAREST -co OVERVIEWS=AUTO
> -co TILING_SCHEME=CUSTOM -co ZOOM_LEVEL_STRATEGY=UPPER input.tif
> output.tif
> 
> Thanks for any guidance on getting WEBP_LOSSLESS to work!
> 
> Marty Sullivan
> Cornell University
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From marty.sullivan at cornell.edu  Thu Jan 14 14:30:13 2021
From: marty.sullivan at cornell.edu (Marty J. Sullivan)
Date: Thu, 14 Jan 2021 22:30:13 +0000
Subject: [gdal-dev] gdal_translate receiving "Warning 6: driver GTiff
 does not support creation option WEBP_LOSSLESS"
In-Reply-To: <1610663277487-0.post@n6.nabble.com>
References: <4B27714F-8EEF-4815-B4FB-30760211D8E3@contoso.com>
 <1610663277487-0.post@n6.nabble.com>
Message-ID: <A87F99F4-A069-4653-910E-8BD4E2113ED9@cornell.edu>

Thanks for the suggestion. I did actually try to create a plain GTiff and tried with the WEBP_LOSSLESS=TRUE and received the same warning.

It is strange because it does seem to create a WEBP compressed image (I think), gdalinfo seems to suggest that it is, so maybe I should just ignore the warning? It just seems like an odd error to receive if WEBP_LOSSLESS is in fact working.

Marty

?On 1/14/21, 5:28 PM, "gdal-dev on behalf of jratike80" <gdal-dev-bounces at lists.osgeo.org on behalf of jukka.rahkonen at maanmittauslaitos.fi> wrote:

    Hi,

    I would also have a try by actually using -co WEBP_LOSSLESS=True even by the
    error message it is perhaps automatically applied.

    -Jukka Rahkonen-


    Marty J. Sullivan wrote
    > Hello,
    > 
    > I am attempting to create a COG format GeoTIFF with WEBP_LOSSLESS
    > compression using GDAL.
    > 
    > I have compiled GDAL 3.2.1 from source with libwebp 0.4.2 installed from
    > Debian Buster repos (I?ve also tried with libwebp v1.1.0 installed from
    > source, no difference). When I run the ./configure script before
    > compiling, WEBP support is listed as ?Yes?
    > 
    > When I try to create a COG with gdal_translate, and setting QUALITY=100,
    > GDAL returns ?Warning 6: driver GTiff does not support creation option
    > WEBP_LOSSLESS?
    > 
    > I would expect that WEBP_LOSSLESS would work because the documentation for
    > the GTiff driver states ?WEBP_LOSSLESS=True/False: (GDAL >= 2.4.0 and
    > libwebp >= 0.1.4): By default, lossy compression is used. If set to True,
    > lossless compression will be used.?
    > 
    > Here is the command I am running, it works fine when running with another
    > compression (or choosing QUALITY=99 for WEBP)
    > 
    > gdal_translate -of COG -co COMPRESS=WEBP -co QUALITY=100 -co
    > NUM_THREADS=ALL_CPUS -co RESAMPLING=NEAREST -co
    > OVERVIEW_RESAMPLING=NEAREST -co WARP_RESAMPLING=NEAREST -co OVERVIEWS=AUTO
    > -co TILING_SCHEME=CUSTOM -co ZOOM_LEVEL_STRATEGY=UPPER input.tif
    > output.tif
    > 
    > Thanks for any guidance on getting WEBP_LOSSLESS to work!
    > 
    > Marty Sullivan
    > Cornell University
    > 
    > _______________________________________________
    > gdal-dev mailing list

    > gdal-dev at .osgeo

    > https://lists.osgeo.org/mailman/listinfo/gdal-dev





    --
    Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
    _______________________________________________
    gdal-dev mailing list
    gdal-dev at lists.osgeo.org
    https://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Fri Jan 15 04:15:21 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 15 Jan 2021 13:15:21 +0100
Subject: [gdal-dev] OGC KML compliance
Message-ID: <3746979.YTcReOTRsb@even-i700>

Hi,

if anyone cares about GDAL still being mentionned as a OGC KML reference 
implementation, run autotest/kml_generate_test_files.py with GDAL 3.2, submit 
the produced 4 files to the OGC KML 2.2 test harness
(https://cite.opengeospatial.org/teamengine/viewSessions.jsp)
and communicate to Angelos (CC'ed) your CITE user account and the session 
numbers.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From markus.metz.giswork at gmail.com  Fri Jan 15 11:04:42 2021
From: markus.metz.giswork at gmail.com (Markus Metz)
Date: Fri, 15 Jan 2021 20:04:42 +0100
Subject: [gdal-dev] GDAL workshop for FOSSGIS 2021
Message-ID: <CAG+h=FGsHoRiWCv6E1mE6qpEsPZXjaZDjJzAckrcWODCii6uyw@mail.gmail.com>

Hi,

we from mundialis, mainly Markus Neteler and me, are thinking about giving
a 90 minute GDAL workshop during the upcoming FOSSGIS conference in
Switzerland. We are not part of the core GDAL team, but confident that we
are able to give such a workshop for a German-speaking audience. Before we
officially apply for the workshop, I want to ask if this would conflict
with plans from the GDAL team or if you have any objections against us
giving a GDAL workshop. In this case we will not submit a GDAL workshop for
FOSSGIS 2021.

Markus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210115/1bd42be2/attachment.html>

From gdal at stripfamily.net  Fri Jan 15 11:11:16 2021
From: gdal at stripfamily.net (David Strip)
Date: Fri, 15 Jan 2021 12:11:16 -0700
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <a50eb380-d423-ca53-d1d7-c2270d63da30@stripfamily.net>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net>
 <rmik0sgl5q2.fsf@s1.lexort.com>
 <a50eb380-d423-ca53-d1d7-c2270d63da30@stripfamily.net>
Message-ID: <a9efcf04-3746-3558-1814-8cc931b04a50@stripfamily.net>

An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210115/89dc9657/attachment.html>

From jan.heckman at gmail.com  Fri Jan 15 11:39:40 2021
From: jan.heckman at gmail.com (Jan Heckman)
Date: Fri, 15 Jan 2021 20:39:40 +0100
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <a9efcf04-3746-3558-1814-8cc931b04a50@stripfamily.net>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net>
 <rmik0sgl5q2.fsf@s1.lexort.com>
 <a50eb380-d423-ca53-d1d7-c2270d63da30@stripfamily.net>
 <a9efcf04-3746-3558-1814-8cc931b04a50@stripfamily.net>
Message-ID: <CAKMUAtD5QUpZVN07DXxRWY53GFhcezogn+dYx5iV_YxFF0NwMA@mail.gmail.com>

I have none of the financial/organisational knowledge that some of you
have, and this is mere googling.
With that being said, is
https://bigdatastack.eu/european-open-source-initiative a potential?
It has a participation link and explicitly includes individuals and not
only academia and companies.
Jan

On Fri, Jan 15, 2021 at 8:31 PM David Strip <gdal at stripfamily.net> wrote:

> Further evidence of the challenge of getting funds to support gdal from US
> gov't agencies:
> Someone at the USGS privately emailed me to confirm that like Sandia, they
> cannot support gdal through voluntary donations or in-kind contributions
> that are outside the scope of contracted project work. Over the years the
> USGS has contracted through open solicitations for specific projects that
> are returned to the community, but these contracts are driven by
> programmatic USGS requirements which may or may not have utility to the
> broader gdal community.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210115/111a9937/attachment-0001.html>

From stephenwoodbridge37 at gmail.com  Fri Jan 15 14:24:46 2021
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Fri, 15 Jan 2021 17:24:46 -0500
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CAKMUAtD5QUpZVN07DXxRWY53GFhcezogn+dYx5iV_YxFF0NwMA@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net>
 <rmik0sgl5q2.fsf@s1.lexort.com>
 <a50eb380-d423-ca53-d1d7-c2270d63da30@stripfamily.net>
 <a9efcf04-3746-3558-1814-8cc931b04a50@stripfamily.net>
 <CAKMUAtD5QUpZVN07DXxRWY53GFhcezogn+dYx5iV_YxFF0NwMA@mail.gmail.com>
Message-ID: <7c5a91c6-70c0-01fb-eec4-117570ba766d@gmail.com>

So reading through this thread, my cynical side agrees with the "this 
project is dying from lack of funding, ..." approach, but I'm not sure 
that works for the long run as people get tired of hear the "sky is 
falling" and ignore it over time.

A different approach could be something along the lines of what AARP 
does, to get it members to email congress representative to lobby for 
support. OK, this might sound crazy and it would require some 
coordination but might work like this:

1) we get government agencies that use GDAL and more broadly OSGeo push 
up the chain of command the need to support opensource projects and the 
current issues in doing so
2) we put a support web page the allows community members and public to 
email a form letter to their congress people explaining that a large 
number of government agencies (probably need a list of them) need and 
use opensource software but are not able to support the development or 
maintenance of. This is a critical issue around the US being a leader in 
opensource development. If this software becomes unavailable or 
unsupported that it puts these agencies at risk, blah, blah, blah

Apologies to reads in other countries that disagree with the statements 
above, this is an appeal to US congress, so its slanted in their 
direction. No offense is meant here.

Likewise, this could be done in other regions/countries that rely on 
this software.

Commercial companies spend money on lobbying and sales calls so maybe we 
need to find a strategy that works for opensource.

Anyway, it's an idea, maybe it's not workable because we don't have 
funding to put something like this in place or people don't think it is 
of value. I don't think this should be done at the GDAL level, but maybe 
at OSGeo and maybe in coordination with other opensource organizations. 
So just putting another idea out there.

-Steve W

From runette at gmail.com  Sat Jan 16 08:26:19 2021
From: runette at gmail.com (Paul Harwood)
Date: Sat, 16 Jan 2021 16:26:19 +0000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <7c5a91c6-70c0-01fb-eec4-117570ba766d@gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <368fd9fc-e27e-b85c-9543-d74468b4ad8b@stripfamily.net>
 <rmik0sgl5q2.fsf@s1.lexort.com>
 <a50eb380-d423-ca53-d1d7-c2270d63da30@stripfamily.net>
 <a9efcf04-3746-3558-1814-8cc931b04a50@stripfamily.net>
 <CAKMUAtD5QUpZVN07DXxRWY53GFhcezogn+dYx5iV_YxFF0NwMA@mail.gmail.com>
 <7c5a91c6-70c0-01fb-eec4-117570ba766d@gmail.com>
Message-ID: <CAE8nN5Oouu+hgW0W579vEB47Tp0SKedmoekOK-yL54U8hNYYjA@mail.gmail.com>

Having thought about these comments ...

As in most things - we need to be clear about what it is that we actually
want :

- If the thing is that FAANGS (and apparently gov organisations) need to
feed back into the products that they use then the way that they do that
and can easily is to provide tools and services (let's remember that GitHub
is provided free by Microsoft, Bootstrap by twitter, React by Facebook,
Angular by Google, Typescript by MS etc etc etc - Google also provides a
lot of compute time for free using quotas etc etc). They can also pay
individuals who are allowed to contribute to projects. But I don't think
this is the subject of discussion.

- If what we want is that the people running GDAL get paid (I am going to
deliberately talk in the abstract not through ignorance but to avoid the
personal) then we have to understand that this is employment. That comes
with its own set of laws and regulations.

-- One way is to approach the biggest user and propose that they employ the
people involved full-time or part-time on running GDAL. That is actually
relatively easy for them to do inside the team and is done a lot. But - it
is possible that the people involved don't want to work for that company.
It also depends on getting to the right decision-maker to make the case and
indeed on that team caring that the software exists etc etc. However, it is
easy and normal practice with no legal minefields. Think Guido and Python
with Google - then DropBox - then Microsoft etc.

-- If not that then the people involved could get paid for contract work
using the usual well-established mechanisms. But a contract has to have a
scope. That comes back to "they are OK paying for enhancements". Placing a
contract for a company (even if just one person) to create an enhancement
is business as usual for any company.

-- If not that you either create a GDAL company and employ the individuals
and charge the customers (i.e. no longer FOSS) or you create a foundation
and employ the people (either directly or by contract) which then comes
back to Hobu's original question.

Perfectly possible and FAANGs can give donations to foundations. Usually
only (since the FAANGs are US based) if they are based in the US and have
passed 18 months of due diligence vetting! That is just life. A foundation
can do a deal with another foundation - there are actually foundations in
the US that specialise in getting money from FAANGs since they are DD'd up
the wazzoo and then placing contracts with other foundations to fund them.
This is kind of where organisations like OSGeo or NumFocus should come in.
Never seems to work like that.

It should be noted that a Foundation that employs people (directly or
indirectly) is not a simple thing to run. It comes with its own mass of
paperwork.

- If we just want to spread the workload and decrease the bus number, then
by the art of the possible, we should refactor to make it easier for more
people to work on it and then have a proactive campaign aimed at the
individuals and teams in large user organisations to get them involved in
running components. In the FAANGs an engineer could spend 20% of their time
on that without even needing to get permission and more would just be a
team leader decision based on what makes sense for the team. You are, of
course, at the mercy of product deadlines but that is true for the rest of
us as well.

As for the "threaten the end of the project" approach. I would say never
threaten anything that you are not completely willing to follow through on.
If it is true, then it is true, but not otherwise. As a Senior TPM, my
response would have been to fork the code and run it internally using team
resources - you might think of a "gooGDAL". Not out of any wish to be evil
but just from the art of the possible - internal resources are a team level
decision but funding an external FOSS project is not. I am sure we would
even have made the results publicly available - but the new product would
have been run to internal project requirements.

On Fri, 15 Jan 2021 at 22:25, Stephen Woodbridge <
stephenwoodbridge37 at gmail.com> wrote:

> So reading through this thread, my cynical side agrees with the "this
> project is dying from lack of funding, ..." approach, but I'm not sure
> that works for the long run as people get tired of hear the "sky is
> falling" and ignore it over time.
>
> A different approach could be something along the lines of what AARP
> does, to get it members to email congress representative to lobby for
> support. OK, this might sound crazy and it would require some
> coordination but might work like this:
>
> 1) we get government agencies that use GDAL and more broadly OSGeo push
> up the chain of command the need to support opensource projects and the
> current issues in doing so
> 2) we put a support web page the allows community members and public to
> email a form letter to their congress people explaining that a large
> number of government agencies (probably need a list of them) need and
> use opensource software but are not able to support the development or
> maintenance of. This is a critical issue around the US being a leader in
> opensource development. If this software becomes unavailable or
> unsupported that it puts these agencies at risk, blah, blah, blah
>
> Apologies to reads in other countries that disagree with the statements
> above, this is an appeal to US congress, so its slanted in their
> direction. No offense is meant here.
>
> Likewise, this could be done in other regions/countries that rely on
> this software.
>
> Commercial companies spend money on lobbying and sales calls so maybe we
> need to find a strategy that works for opensource.
>
> Anyway, it's an idea, maybe it's not workable because we don't have
> funding to put something like this in place or people don't think it is
> of value. I don't think this should be done at the GDAL level, but maybe
> at OSGeo and maybe in coordination with other opensource organizations.
> So just putting another idea out there.
>
> -Steve W
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210116/3f17c1fc/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Sun Jan 17 07:47:46 2021
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Sun, 17 Jan 2021 08:47:46 -0700 (MST)
Subject: [gdal-dev] GDAL workshop for FOSSGIS 2021
In-Reply-To: <CAG+h=FGsHoRiWCv6E1mE6qpEsPZXjaZDjJzAckrcWODCii6uyw@mail.gmail.com>
References: <CAG+h=FGsHoRiWCv6E1mE6qpEsPZXjaZDjJzAckrcWODCii6uyw@mail.gmail.com>
Message-ID: <1610898466059-0.post@n6.nabble.com>

Hi,

I do not believe that anybody is jealous of you because of the workshop. And
if a rival candidate appears (unlikely) it is up to the organizer to select
the workshop that they consider as the best. We support fair play.

-Jukka Rahkonen-


Markus Metz-3 wrote
> Hi,
> 
> we from mundialis, mainly Markus Neteler and me, are thinking about giving
> a 90 minute GDAL workshop during the upcoming FOSSGIS conference in
> Switzerland. We are not part of the core GDAL team, but confident that we
> are able to give such a workshop for a German-speaking audience. Before we
> officially apply for the workshop, I want to ask if this would conflict
> with plans from the GDAL team or if you have any objections against us
> giving a GDAL workshop. In this case we will not submit a GDAL workshop
> for
> FOSSGIS 2021.
> 
> Markus
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Sun Jan 17 08:55:43 2021
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Sun, 17 Jan 2021 09:55:43 -0700 (MST)
Subject: [gdal-dev] OGC KML compliance
In-Reply-To: <3746979.YTcReOTRsb@even-i700>
References: <3746979.YTcReOTRsb@even-i700>
Message-ID: <1610902543956-0.post@n6.nabble.com>

Done.

Even there should be no need to report the results again (all tests were OK)
I would recommend to try the TEAM Engine just for fun. It was a pleasant
experience for me.

-Jukka Rahkonen-



Even Rouault-2 wrote
> Hi,
> 
> if anyone cares about GDAL still being mentionned as a OGC KML reference 
> implementation, run autotest/kml_generate_test_files.py with GDAL 3.2,
> submit 
> the produced 4 files to the OGC KML 2.2 test harness
> (https://cite.opengeospatial.org/teamengine/viewSessions.jsp)
> and communicate to Angelos (CC'ed) your CITE user account and the session 
> numbers.
> 
> Even
> 
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From loridigia at gmail.com  Tue Jan 19 03:13:56 2021
From: loridigia at gmail.com (Lorenzo Di Giacomo)
Date: Tue, 19 Jan 2021 12:13:56 +0100
Subject: [gdal-dev] Java bindings on OSX and CentOS
Message-ID: <CAERmyNRL5iLQvyu93pvHE++JSYROSJpm9vztQR4Oae1UA6Cmag@mail.gmail.com>

Hi, i installed GDAL on OSX via brew install.
Then i tried to add the dependecy on Maven but when i execute a simple
command like "gdal.Open()", but i get java.lang.UnsatisfiedLinkError:
org.gdal.gdal.gdalJNI.Open__SWIG_1(Ljava/lang/String;)J.
I undertood that i need to set the java bindings, but all the guides that i
found are old and outdated and can't find a way to generate the Java
binding for OSX.

How should i do to use java on Osx? and on Centos? Thx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210119/c4c8e36d/attachment.html>

From j1 at jimenezshaw.com  Tue Jan 19 11:13:22 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 19 Jan 2021 20:13:22 +0100
Subject: [gdal-dev] COG overviews and SPARSE_OK
Message-ID: <CADRrdKsv3tumcSgqpq=FQ0fniJB+v0g=aeJAEZYTNkND-dPSHQ@mail.gmail.com>

Hi all

I know how SPARSE_OK=TRUE option works in a GeoTIFF. My question is if it
is also applied in the Overviews of the COG.
In case it does not, an image of a river (linear structure) can be small in
the "main" resolution because there is a lot of sparse area, but then the
overviews can be really big (if not compressed).

Thank you,
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210119/df622bdb/attachment.html>

From gcpp.kalxas at gmail.com  Wed Jan 20 01:26:12 2021
From: gcpp.kalxas at gmail.com (Angelos Tzotsos)
Date: Wed, 20 Jan 2021 11:26:12 +0200
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <CAE8nN5M44bPv6SG9mAGx-FLvCK=-jOgLQuEyDYoZ61bLDQurEA@mail.gmail.com>
References: <58cbf11686e84e04afbc002b8c9cbed8@maanmittauslaitos.fi>
 <B4727DA3-D86A-4283-9180-E7303F822603@hobu.co>
 <622ac727-cc7d-c68e-948d-ab15bb4bf9a0@stripfamily.net>
 <CAB28AsghTG5DLq6kXOYTo-8o3JdLDFZqAFPeHhJyoR=GddQgnQ@mail.gmail.com>
 <178B608F-104F-4249-9A66-BE4B18057B61@hobu.co>
 <721a8028-858e-58a0-aa82-c9fb1418d004@gmail.com>
 <CAE8nN5M44bPv6SG9mAGx-FLvCK=-jOgLQuEyDYoZ61bLDQurEA@mail.gmail.com>
Message-ID: <5d848001-c412-bf3e-f838-61be247848ae@gmail.com>

Hi,

OSGeo is an approved 501(c)(3) organization.

https://en.wikipedia.org/wiki/501(c)_organization#501.28c.29.284.29
https://www.osgeo.org/about/

The only contact for (in kind) sponsorship was with Microsoft, and that 
did not move forward because they needed another status (401).

Regards,
Angelos

On 1/14/21 11:34 AM, Paul Harwood wrote:
> Just a quick question.
>
> Since the FAANGs were the question, do you know if OSGeo has been vetted
> and approved as a Foundation by any of the FAANGs?
>
> As I say, when I was involved on the other side for one, they had more than
> a 2 year lead time for that process (I don't know if that was universal or
> if they solved that problem). If the answer is yes, then that could be a
> way forward - and indeed in at least two of FAANGs that I know the
> employees have virtual "pots" of both money and time that they can donate
> to approved organisations to "give back" - so appealing to the grass
> roots could be a way forward.
>
> You might have to spin it as "promoting the value of Geo software to solve
> world problems" or some such - since as I say paying for free software is
> questionable legal territory.
>
> On Thu, 14 Jan 2021 at 09:00, Angelos Tzotsos <gcpp.kalxas at gmail.com> wrote:
>
>> Perhaps we could ask some of these organizations to sponsor GDAL through
>> https://github.com/sponsors/OSGeo which is a recurring sponsorship ?
>>
>> Angelos
>>
>>
>> On 1/14/21 12:58 AM, Howard Butler wrote:
>>
>> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> <nyall.dawson at gmail.com> wrote:
>>
>> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> <gdal at stripfamily.net> wrote:
>>
>> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.
>>
>> I'm pretty clueless regarding licenses -- but this is an interesting
>> thought. I wonder if any new drivers added to GDAL could be done with
>> a dual-licensing under both GPL + some other license which requires
>> ongoing sponsorship of the GDAL project?
>>
>> License monkey business isn't viable in any way with GDAL. It would just create confusion and erode trust, which we can't get back if broken.
>>
>> The big organizations running 100,000,000s of CPU hours extracting information from imagery they're reading in COGs with GDAL need to be donating substantial resources into an organization that provides coordination. The last time I did a fund raise with gdalbarn.com <http://gdalbarn.com/> <http://gdalbarn.com/> I was called out for naming some of these organizations and expressing my disappointment they couldn't find a way to participate or simply ignored the request.  Maybe they will step forward this time around.
>>
>> Whether it is in a new foundation or an existing one like NumFocus, substantial resources need to be dumped in a pot that are earmarked for supporting work that generates value for the project. Chasing new feature work to subsidize project maintenance activities is not sustainable in two directions ? burn out for the maintainer and creeping feature-itis for the project.
>>
>> It's clear what's happened in the past is a combination of luck and graciousness by both Frank and Even.
>>
>> Howard
>>
>>
>> _______________________________________________
>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>> --
>> Angelos Tzotsos, PhD
>> President
>> Open Source Geospatial Foundationhttp://users.ntua.gr/tzotsos
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>


-- 
Angelos Tzotsos, PhD
President
Open Source Geospatial Foundation
http://users.ntua.gr/tzotsos


From michael.smith.erdc at gmail.com  Wed Jan 20 03:32:45 2021
From: michael.smith.erdc at gmail.com (michael.smith.erdc at gmail.com)
Date: Wed, 20 Jan 2021 06:32:45 -0500
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <5d848001-c412-bf3e-f838-61be247848ae@gmail.com>
References: <5d848001-c412-bf3e-f838-61be247848ae@gmail.com>
Message-ID: <2BDDE067-B58C-4190-87EB-2CC07AC57362@gmail.com>

Angelos,

OSGeo is a US non profit 501(c)(4), not (c)(3). We can receive donations but they are not tax deductible. 

Michael Smith
OSGeo Treasurer

> On Jan 20, 2021, at 4:27 AM, Angelos Tzotsos <gcpp.kalxas at gmail.com> wrote:
> 
> ?Hi,
> 
> OSGeo is an approved 501(c)(3) organization.
> 
> https://en.wikipedia.org/wiki/501(c)_organization#501.28c.29.284.29
> https://www.osgeo.org/about/
> 
> The only contact for (in kind) sponsorship was with Microsoft, and that did not move forward because they needed another status (401).
> 
> Regards,
> Angelos
> 
>> On 1/14/21 11:34 AM, Paul Harwood wrote:
>> Just a quick question.
>> 
>> Since the FAANGs were the question, do you know if OSGeo has been vetted
>> and approved as a Foundation by any of the FAANGs?
>> 
>> As I say, when I was involved on the other side for one, they had more than
>> a 2 year lead time for that process (I don't know if that was universal or
>> if they solved that problem). If the answer is yes, then that could be a
>> way forward - and indeed in at least two of FAANGs that I know the
>> employees have virtual "pots" of both money and time that they can donate
>> to approved organisations to "give back" - so appealing to the grass
>> roots could be a way forward.
>> 
>> You might have to spin it as "promoting the value of Geo software to solve
>> world problems" or some such - since as I say paying for free software is
>> questionable legal territory.
>> 
>>> On Thu, 14 Jan 2021 at 09:00, Angelos Tzotsos <gcpp.kalxas at gmail.com> wrote:
>>> 
>>> Perhaps we could ask some of these organizations to sponsor GDAL through
>>> https://github.com/sponsors/OSGeo which is a recurring sponsorship ?
>>> 
>>> Angelos
>>> 
>>> 
>>>> On 1/14/21 12:58 AM, Howard Butler wrote:
>>> 
>>>> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> <nyall.dawson at gmail.com> wrote:
>>> 
>>>> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> <gdal at stripfamily.net> wrote:
>>> 
>>> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.
>>> 
>>> I'm pretty clueless regarding licenses -- but this is an interesting
>>> thought. I wonder if any new drivers added to GDAL could be done with
>>> a dual-licensing under both GPL + some other license which requires
>>> ongoing sponsorship of the GDAL project?
>>> 
>>> License monkey business isn't viable in any way with GDAL. It would just create confusion and erode trust, which we can't get back if broken.
>>> 
>>> The big organizations running 100,000,000s of CPU hours extracting information from imagery they're reading in COGs with GDAL need to be donating substantial resources into an organization that provides coordination. The last time I did a fund raise with gdalbarn.com <http://gdalbarn.com/> <http://gdalbarn.com/> I was called out for naming some of these organizations and expressing my disappointment they couldn't find a way to participate or simply ignored the request.  Maybe they will step forward this time around.
>>> 
>>> Whether it is in a new foundation or an existing one like NumFocus, substantial resources need to be dumped in a pot that are earmarked for supporting work that generates value for the project. Chasing new feature work to subsidize project maintenance activities is not sustainable in two directions ? burn out for the maintainer and creeping feature-itis for the project.
>>> 
>>> It's clear what's happened in the past is a combination of luck and graciousness by both Frank and Even.
>>> 
>>> Howard
>>> 
>>> 
>>> _______________________________________________
>>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> 
>>> 
>>> 
>>> --
>>> Angelos Tzotsos, PhD
>>> President
>>> Open Source Geospatial Foundationhttp://users.ntua.gr/tzotsos
>>> 
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>> 
> 
> 
> -- 
> Angelos Tzotsos, PhD
> President
> Open Source Geospatial Foundation
> http://users.ntua.gr/tzotsos
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

From runette at gmail.com  Wed Jan 20 04:13:18 2021
From: runette at gmail.com (Paul Harwood)
Date: Wed, 20 Jan 2021 12:13:18 +0000
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <2BDDE067-B58C-4190-87EB-2CC07AC57362@gmail.com>
References: <5d848001-c412-bf3e-f838-61be247848ae@gmail.com>
 <2BDDE067-B58C-4190-87EB-2CC07AC57362@gmail.com>
Message-ID: <CAE8nN5N-N3GG-qZYNpM6R4r0GcMMbV2vGMcCMkGdWd4BfrfqUg@mail.gmail.com>

Just to be clear IANAL.

That is a good start - but if you want money from Big Tech - then you have
to go through Due Dilligence individually which each one and as you said
with MS - it is painful.

Without that status - it is impossible for any team or manager regardless
of how much they agree with you to pay any money. The only other route is a
PO with a SOW and even then you still need to go through DD for
supplier status.

On Wed, 20 Jan 2021 at 11:32, <michael.smith.erdc at gmail.com> wrote:

> Angelos,
>
> OSGeo is a US non profit 501(c)(4), not (c)(3). We can receive donations
> but they are not tax deductible.
>
> Michael Smith
> OSGeo Treasurer
>
> > On Jan 20, 2021, at 4:27 AM, Angelos Tzotsos <gcpp.kalxas at gmail.com>
> wrote:
> >
> > ?Hi,
> >
> > OSGeo is an approved 501(c)(3) organization.
> >
> > https://en.wikipedia.org/wiki/501(c)_organization#501.28c.29.284.29
> > https://www.osgeo.org/about/
> >
> > The only contact for (in kind) sponsorship was with Microsoft, and that
> did not move forward because they needed another status (401).
> >
> > Regards,
> > Angelos
> >
> >> On 1/14/21 11:34 AM, Paul Harwood wrote:
> >> Just a quick question.
> >>
> >> Since the FAANGs were the question, do you know if OSGeo has been vetted
> >> and approved as a Foundation by any of the FAANGs?
> >>
> >> As I say, when I was involved on the other side for one, they had more
> than
> >> a 2 year lead time for that process (I don't know if that was universal
> or
> >> if they solved that problem). If the answer is yes, then that could be a
> >> way forward - and indeed in at least two of FAANGs that I know the
> >> employees have virtual "pots" of both money and time that they can
> donate
> >> to approved organisations to "give back" - so appealing to the grass
> >> roots could be a way forward.
> >>
> >> You might have to spin it as "promoting the value of Geo software to
> solve
> >> world problems" or some such - since as I say paying for free software
> is
> >> questionable legal territory.
> >>
> >>> On Thu, 14 Jan 2021 at 09:00, Angelos Tzotsos <gcpp.kalxas at gmail.com>
> wrote:
> >>>
> >>> Perhaps we could ask some of these organizations to sponsor GDAL
> through
> >>> https://github.com/sponsors/OSGeo which is a recurring sponsorship ?
> >>>
> >>> Angelos
> >>>
> >>>
> >>>> On 1/14/21 12:58 AM, Howard Butler wrote:
> >>>
> >>>> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> <
> nyall.dawson at gmail.com> wrote:
> >>>
> >>>> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> <
> gdal at stripfamily.net> wrote:
> >>>
> >>> What is the path forward?  One path Howard suggests is establishing a
> foundation similar to that behind Qgis. Another alternative, probably far
> more controversial, is a license change.
> >>>
> >>> I'm pretty clueless regarding licenses -- but this is an interesting
> >>> thought. I wonder if any new drivers added to GDAL could be done with
> >>> a dual-licensing under both GPL + some other license which requires
> >>> ongoing sponsorship of the GDAL project?
> >>>
> >>> License monkey business isn't viable in any way with GDAL. It would
> just create confusion and erode trust, which we can't get back if broken.
> >>>
> >>> The big organizations running 100,000,000s of CPU hours extracting
> information from imagery they're reading in COGs with GDAL need to be
> donating substantial resources into an organization that provides
> coordination. The last time I did a fund raise with gdalbarn.com <
> http://gdalbarn.com/> <http://gdalbarn.com/> I was called out for naming
> some of these organizations and expressing my disappointment they couldn't
> find a way to participate or simply ignored the request.  Maybe they will
> step forward this time around.
> >>>
> >>> Whether it is in a new foundation or an existing one like NumFocus,
> substantial resources need to be dumped in a pot that are earmarked for
> supporting work that generates value for the project. Chasing new feature
> work to subsidize project maintenance activities is not sustainable in two
> directions ? burn out for the maintainer and creeping feature-itis for the
> project.
> >>>
> >>> It's clear what's happened in the past is a combination of luck and
> graciousness by both Frank and Even.
> >>>
> >>> Howard
> >>>
> >>>
> >>> _______________________________________________
> >>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://
> lists.osgeo.org/mailman/listinfo/gdal-dev
> >>>
> >>>
> >>>
> >>> --
> >>> Angelos Tzotsos, PhD
> >>> President
> >>> Open Source Geospatial Foundationhttp://users.ntua.gr/tzotsos
> >>>
> >>> _______________________________________________
> >>> gdal-dev mailing list
> >>> gdal-dev at lists.osgeo.org
> >>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >>>
> >
> >
> > --
> > Angelos Tzotsos, PhD
> > President
> > Open Source Geospatial Foundation
> > http://users.ntua.gr/tzotsos
> >
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210120/70dbab22/attachment-0001.html>

From gcpp.kalxas at gmail.com  Wed Jan 20 04:20:37 2021
From: gcpp.kalxas at gmail.com (Angelos Tzotsos)
Date: Wed, 20 Jan 2021 14:20:37 +0200
Subject: [gdal-dev] Driver maintenance - long-term solution ?
In-Reply-To: <2BDDE067-B58C-4190-87EB-2CC07AC57362@gmail.com>
References: <5d848001-c412-bf3e-f838-61be247848ae@gmail.com>
 <2BDDE067-B58C-4190-87EB-2CC07AC57362@gmail.com>
Message-ID: <5e4ec993-770b-aea0-2214-453ab7fbef36@gmail.com>

Sorry for the typo :)

On 1/20/21 1:32 PM, michael.smith.erdc at gmail.com wrote:
> Angelos,
>
> OSGeo is a US non profit 501(c)(4), not (c)(3). We can receive donations but they are not tax deductible.
>
> Michael Smith
> OSGeo Treasurer
>
>> On Jan 20, 2021, at 4:27 AM, Angelos Tzotsos <gcpp.kalxas at gmail.com> wrote:
>>
>> ?Hi,
>>
>> OSGeo is an approved 501(c)(3) organization.
>>
>> https://en.wikipedia.org/wiki/501(c)_organization#501.28c.29.284.29
>> https://www.osgeo.org/about/
>>
>> The only contact for (in kind) sponsorship was with Microsoft, and that did not move forward because they needed another status (401).
>>
>> Regards,
>> Angelos
>>
>>> On 1/14/21 11:34 AM, Paul Harwood wrote:
>>> Just a quick question.
>>>
>>> Since the FAANGs were the question, do you know if OSGeo has been vetted
>>> and approved as a Foundation by any of the FAANGs?
>>>
>>> As I say, when I was involved on the other side for one, they had more than
>>> a 2 year lead time for that process (I don't know if that was universal or
>>> if they solved that problem). If the answer is yes, then that could be a
>>> way forward - and indeed in at least two of FAANGs that I know the
>>> employees have virtual "pots" of both money and time that they can donate
>>> to approved organisations to "give back" - so appealing to the grass
>>> roots could be a way forward.
>>>
>>> You might have to spin it as "promoting the value of Geo software to solve
>>> world problems" or some such - since as I say paying for free software is
>>> questionable legal territory.
>>>
>>>> On Thu, 14 Jan 2021 at 09:00, Angelos Tzotsos <gcpp.kalxas at gmail.com> wrote:
>>>>
>>>> Perhaps we could ask some of these organizations to sponsor GDAL through
>>>> https://github.com/sponsors/OSGeo which is a recurring sponsorship ?
>>>>
>>>> Angelos
>>>>
>>>>
>>>>> On 1/14/21 12:58 AM, Howard Butler wrote:
>>>>> On Jan 13, 2021, at 4:28 PM, Nyall Dawson <nyall.dawson at gmail.com> <nyall.dawson at gmail.com> wrote:
>>>>> On Thu, 14 Jan 2021 at 06:24, David Strip <gdal at stripfamily.net> <gdal at stripfamily.net> wrote:
>>>> What is the path forward?  One path Howard suggests is establishing a foundation similar to that behind Qgis. Another alternative, probably far more controversial, is a license change.
>>>>
>>>> I'm pretty clueless regarding licenses -- but this is an interesting
>>>> thought. I wonder if any new drivers added to GDAL could be done with
>>>> a dual-licensing under both GPL + some other license which requires
>>>> ongoing sponsorship of the GDAL project?
>>>>
>>>> License monkey business isn't viable in any way with GDAL. It would just create confusion and erode trust, which we can't get back if broken.
>>>>
>>>> The big organizations running 100,000,000s of CPU hours extracting information from imagery they're reading in COGs with GDAL need to be donating substantial resources into an organization that provides coordination. The last time I did a fund raise with gdalbarn.com <http://gdalbarn.com/> <http://gdalbarn.com/> I was called out for naming some of these organizations and expressing my disappointment they couldn't find a way to participate or simply ignored the request.  Maybe they will step forward this time around.
>>>>
>>>> Whether it is in a new foundation or an existing one like NumFocus, substantial resources need to be dumped in a pot that are earmarked for supporting work that generates value for the project. Chasing new feature work to subsidize project maintenance activities is not sustainable in two directions ? burn out for the maintainer and creeping feature-itis for the project.
>>>>
>>>> It's clear what's happened in the past is a combination of luck and graciousness by both Frank and Even.
>>>>
>>>> Howard
>>>>
>>>>
>>>> _______________________________________________
>>>> gdal-dev mailing listgdal-dev at lists.osgeo.orghttps://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>
>>>>
>>>>
>>>> --
>>>> Angelos Tzotsos, PhD
>>>> President
>>>> Open Source Geospatial Foundationhttp://users.ntua.gr/tzotsos
>>>>
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>>
>>
>> -- 
>> Angelos Tzotsos, PhD
>> President
>> Open Source Geospatial Foundation
>> http://users.ntua.gr/tzotsos
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Angelos Tzotsos, PhD
President
Open Source Geospatial Foundation
http://users.ntua.gr/tzotsos


From dmiller at JFTI.com  Wed Jan 20 13:37:53 2021
From: dmiller at JFTI.com (Miller, Doug)
Date: Wed, 20 Jan 2021 21:37:53 +0000
Subject: [gdal-dev] Mapbox Vector Tiles Driver Support for Styles
In-Reply-To: <cba84e485acf450f85b312467ff04a4d@JFTI.com>
References: <cba84e485acf450f85b312467ff04a4d@JFTI.com>
Message-ID: <ed0e31d1ce5940a6af572f209129d6bd@JFTI.com>

How does the Mapbox Vector Tiles Driver take into account styles (i.e. style.json) when reading?  Does it even have that functionality?

From sean at mapbox.com  Wed Jan 20 15:37:37 2021
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 20 Jan 2021 16:37:37 -0700
Subject: [gdal-dev] Mapbox Vector Tiles Driver Support for Styles
In-Reply-To: <ed0e31d1ce5940a6af572f209129d6bd@JFTI.com>
References: <cba84e485acf450f85b312467ff04a4d@JFTI.com>
 <ed0e31d1ce5940a6af572f209129d6bd@JFTI.com>
Message-ID: <CADPhZXzPfVAC1a-0y=Rm_FZEEXuEPST8rATZJr+cs7NaveuXkw@mail.gmail.com>

Hi,

No, the MVT driver is only concerned with features in a protobuf file:
https://github.com/mapbox/vector-tile-spec/tree/master/2.1. It doesn't know
about Mapbox styles.

On Wed, Jan 20, 2021 at 2:53 PM Miller, Doug <dmiller at jfti.com> wrote:

> How does the Mapbox Vector Tiles Driver take into account styles (i.e.
> style.json) when reading?  Does it even have that functionality?


-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210120/d0d91ce1/attachment.html>

From jesus.moran at solute.es  Fri Jan 22 02:02:33 2021
From: jesus.moran at solute.es (jesus.moran at solute.es)
Date: Fri, 22 Jan 2021 11:02:33 +0100
Subject: [gdal-dev] JPEG/PNG 12 bits GDAL python
Message-ID: <001a01d6f0a5$b4d004d0$1e700e70$@solute.es>

Hello and thank you in advance,

 

Im trying to generate png and jpeg 12 bits images from a GTiff single band
file with no success. I know is there a way to generate 12 bits images in
the GDAL command line as I have seen in some examples (?gdal_translate
mandril_rgb.tif -co COMPRESS=JPEG -co PHOTOMETRIC=YCBCR -co NBITS=12
out.tif?) but trying it with my singlebands tif files it only generates a
black image (with PHOTOMETRIC set to MINISBLACK). Is it only a method for
rgb files?

Searching in the python API I only can find gdalconst for 16, 32 and 64 bits
formats. Is there a way to do the same with 12 bits files?

 

Kind regards

 


 <http://www.solute.es/> 


Jes?s Maria Mor?n Rosado
Project Engineer

Av. Cerro del ?guila, 3, 28703 S.S. de los Reyes, Madrid

CONFIDENTIALITY: This e-mail and any attachments are confidential and may be
privileged. If you are not a named recipient, please notify the sender
immediately and do not disclose the contents to another person, use it for
any purpose or store or copy the information in any medium.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210122/8b1d435e/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.gif
Type: image/gif
Size: 1617 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210122/8b1d435e/attachment.gif>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Jan 22 03:14:40 2021
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Fri, 22 Jan 2021 04:14:40 -0700 (MST)
Subject: [gdal-dev] JPEG/PNG 12 bits GDAL python
In-Reply-To: <001a01d6f0a5$b4d004d0$1e700e70$@solute.es>
References: <001a01d6f0a5$b4d004d0$1e700e70$@solute.es>
Message-ID: <1611314080768-0.post@n6.nabble.com>

Hi,

With my GDAL 3.1.4 from OSGeo4W converting a single band Float32 DEM file
into JPEG compressed TIFF and into plain JPEG succeeded with these commands:

gdal_translate L2431.tif -co COMPRESS=JPEG -ot uint16 -co NBITS=12 out.tif
gdal_translate L2431.tif -of JPEG -ot uint16 -co NBITS=12 out.jpg

I have never played with 12 bit JPEGs before. The documentation was not very
clear to me and I am not sure if it is essential to first define the data
type into uint16 and then limit the number of NBITS into 12.
But without using -ot uint16 I got messages like

Warning 6: Only NBITS=16 is supported for data type Float32
Warning 1: NBITS=32 is invalid for data type UInt16. Using NBITS=16
ERROR 1: JPEGSetupEncode:BitsPerSample 16 not allowed for JPEG

Warning 6: driver JPEG does not support creation option NBITS
0Warning 6: JPEG driver doesn't support data type Float32. Only eight and
twelve bit bands supported (Mk1 libjpeg).

I wonder if there is any way for the user to find out if their GDAL is
compiled with 12 bit JPEG support.

-Jukka Rahkonen-



GDAL - Dev mailing list wrote
> Hello and thank you in advance,
> 
>  
> 
> Im trying to generate png and jpeg 12 bits images from a GTiff single band
> file with no success. I know is there a way to generate 12 bits images in
> the GDAL command line as I have seen in some examples (?gdal_translate
> mandril_rgb.tif -co COMPRESS=JPEG -co PHOTOMETRIC=YCBCR -co NBITS=12
> out.tif?) but trying it with my singlebands tif files it only generates a
> black image (with PHOTOMETRIC set to MINISBLACK). Is it only a method for
> rgb files?
> 
> Searching in the python API I only can find gdalconst for 16, 32 and 64
> bits
> formats. Is there a way to do the same with 12 bits files?
> 
>  
> 
> Kind regards
> 
>  
> 
> 
>  &lt;http://www.solute.es/&gt; 
> 
> 
> Jes?s Maria Mor?n Rosado
> Project Engineer
> 
> Av. Cerro del ?guila, 3, 28703 S.S. de los Reyes, Madrid
> 
> CONFIDENTIALITY: This e-mail and any attachments are confidential and may
> be
> privileged. If you are not a named recipient, please notify the sender
> immediately and do not disclose the contents to another person, use it for
> any purpose or store or copy the information in any medium.
> 
>  
> 
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> 
> image001.gif (2K)
> &lt;http://osgeo-org.1560.x6.nabble.com/attachment/5455390/0/image001.gif&gt;





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jesus.moran at solute.es  Fri Jan 22 05:18:03 2021
From: jesus.moran at solute.es (jesus.moran at solute.es)
Date: Fri, 22 Jan 2021 14:18:03 +0100
Subject: [gdal-dev] JPEG/PNG 12 bits GDAL python
In-Reply-To: <1611314080768-0.post@n6.nabble.com>
References: <001a01d6f0a5$b4d004d0$1e700e70$@solute.es>
 <1611314080768-0.post@n6.nabble.com>
Message-ID: <008101d6f0c1$04286980$0c793c80$@solute.es>

Hi,

It work for me too like this!! The -ot uint16 was the key! Thank you a lot Jukka. Im still trying to find the way to do this in python though.



Jes?s Maria Mor?n Rosado
Project Engineer
 
Av. Cerro del ?guila, 3, 28703 S.S. de los Reyes, Madrid
CONFIDENTIALITY: This e-mail and any attachments are confidential and may be privileged. If you are not a named recipient, please notify the sender immediately and do not disclose the contents to another person, use it for any purpose or store or copy the information in any medium.

-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of jratike80
Sent: viernes, 22 de enero de 2021 12:15
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] JPEG/PNG 12 bits GDAL python

Hi,

With my GDAL 3.1.4 from OSGeo4W converting a single band Float32 DEM file into JPEG compressed TIFF and into plain JPEG succeeded with these commands:

gdal_translate L2431.tif -co COMPRESS=JPEG -ot uint16 -co NBITS=12 out.tif gdal_translate L2431.tif -of JPEG -ot uint16 -co NBITS=12 out.jpg

I have never played with 12 bit JPEGs before. The documentation was not very clear to me and I am not sure if it is essential to first define the data type into uint16 and then limit the number of NBITS into 12.
But without using -ot uint16 I got messages like

Warning 6: Only NBITS=16 is supported for data type Float32 Warning 1: NBITS=32 is invalid for data type UInt16. Using NBITS=16 ERROR 1: JPEGSetupEncode:BitsPerSample 16 not allowed for JPEG

Warning 6: driver JPEG does not support creation option NBITS 0Warning 6: JPEG driver doesn't support data type Float32. Only eight and twelve bit bands supported (Mk1 libjpeg).

I wonder if there is any way for the user to find out if their GDAL is compiled with 12 bit JPEG support.

-Jukka Rahkonen-



GDAL - Dev mailing list wrote
> Hello and thank you in advance,
> 
>  
> 
> Im trying to generate png and jpeg 12 bits images from a GTiff single 
> band file with no success. I know is there a way to generate 12 bits 
> images in the GDAL command line as I have seen in some examples 
> (?gdal_translate mandril_rgb.tif -co COMPRESS=JPEG -co 
> PHOTOMETRIC=YCBCR -co NBITS=12
> out.tif?) but trying it with my singlebands tif files it only 
> generates a black image (with PHOTOMETRIC set to MINISBLACK). Is it 
> only a method for rgb files?
> 
> Searching in the python API I only can find gdalconst for 16, 32 and 
> 64 bits formats. Is there a way to do the same with 12 bits files?
> 
>  
> 
> Kind regards
> 
>  
> 
> 
>  &lt;http://www.solute.es/&gt;
> 
> 
> Jes?s Maria Mor?n Rosado
> Project Engineer
> 
> Av. Cerro del ?guila, 3, 28703 S.S. de los Reyes, Madrid
> 
> CONFIDENTIALITY: This e-mail and any attachments are confidential and 
> may be privileged. If you are not a named recipient, please notify the 
> sender immediately and do not disclose the contents to another person, 
> use it for any purpose or store or copy the information in any medium.
> 
>  
> 
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 
> 
> image001.gif (2K)
> &lt;http://osgeo-org.1560.x6.nabble.com/attachment/5455390/0/image001.
> gif&gt;





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev


From s_lewis23 at yahoo.com  Fri Jan 22 09:35:01 2021
From: s_lewis23 at yahoo.com (shannon lewis)
Date: Fri, 22 Jan 2021 17:35:01 +0000 (UTC)
Subject: [gdal-dev] Install error rgdal
References: <194636970.1490896.1611336901541.ref@mail.yahoo.com>
Message-ID: <194636970.1490896.1611336901541@mail.yahoo.com>

I'm getting this error trying to install newer version of rgdal, already have 1.5-16 install and working.

[: ~]$ gdal-config --version3.0.1[: ~]$ geos-config --version3.7.2[: ~]$ proj -VRel. 6.2.0, September 1st, 2019 ?> sessionInfo()R version 4.0.0 (2020-04-24)Platform: x86_64-pc-linux-gnu (64-bit)Running under: Red Hat Enterprise Linux ?Matrix products: defaultBLAS:?? /opt/R/R_4.0.0/lib64/R/lib/libRblas.soLAPACK: /opt/R/R_4.0.0/lib64/R/lib/libRlapack.so ?locale: [1] LC_CTYPE=en_US.UTF-8?????? LC_NUMERIC=C?????????????? LC_TIME=en_US.UTF-8??????? LC_COLLATE=en_US.UTF-8???? LC_MONETARY=en_US.UTF-8??? LC_MESSAGES=en_US.UTF-8??? LC_PAPER=en_US.UTF-8????? ?[8] LC_NAME=C????????????????? LC_ADDRESS=C?????????????? LC_TELEPHONE=C???????????? LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C??????  ?attached base packages:[1] stats???? graphics? grDevices datasets? utils???? methods?? base????  ?loaded via a namespace (and not attached):[1] compiler_4.0.0 tools_4.0.0??? renv_0.12.3? ? ? ? ?/opt/rh/devtoolset-8/root/usr/bin/g++ -std=gnu++11 -I"/opt/R/R_4.0.0/lib64/R/include" -DNDEBUG -I/usr/local/include -DPROJ_H_API -I'/usrfiles/shared-projects/shannon/RSTAN_TESTING/RSTAN_SHARE/renv/staging/3/sp/include' -I/usr/local/include?? -fpic? -g -O2 ?-c proj6.cpp -o proj6.oIn file included from proj6.cpp:5:proj6.cpp: In function ?SEXPREC* get_source_crs(SEXP)?:proj6.cpp:258:58: error: ?PJ_WKT2_2019? was not declared in this scope???????? COPY_TO_USER_STRING(proj_as_wkt(ctx, target_crs, PJ_WKT2_2019, NULL)));????????????????????????????????????????????????????????? ^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39: note: in definition of macro ?COPY_TO_USER_STRING? #define COPY_TO_USER_STRING(x) mkChar(x)????????????????????????????? ?????????^proj6.cpp:258:58: note: suggested alternative: ?PJ_WKT2_2018????????? COPY_TO_USER_STRING(proj_as_wkt(ctx, target_crs, PJ_WKT2_2019, NULL)));????????????????????????????????????????????????????????? ^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39: note: in definition of macro ?COPY_TO_USER_STRING? #define COPY_TO_USER_STRING(x) mkChar(x)?????????????????????????????????????? ^proj6.cpp: In function ?SEXPREC* proj_vis_order(SEXP)?:proj6.cpp:291:58: error: ?PJ_WKT2_2019? was not declared in this scope???????? COPY_TO_USER_STRING(proj_as_wkt(ctx, target_crs, PJ_WKT2_2019, NULL)));????????????????????????????????????????????????????????? ^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39: note: in definition of macro ?COPY_TO_USER_STRING? #define COPY_TO_USER_STRING(x) mkChar(x)?????????????????????????????????????? ^proj6.cpp:291:58: note: suggested alternative: ?PJ_WKT2_2018????????? COPY_TO_USER_STRING(proj_as_wkt(ctx, target_crs, PJ_WKT2_2019, NULL)));???????? ?????????????????????????????????????????????????^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39: note: in definition of macro ?COPY_TO_USER_STRING? #define COPY_TO_USER_STRING(x) mkChar(x)?????????????????????????????????????? ^proj6.cpp: In function ?SEXPREC* P6_SRID_proj(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP)?:proj6.cpp:990:52: error: ?PJ_WKT2_2019? was not declared in this scope???????? if ((pszSRS = proj_as_wkt(ctx, source_crs, PJ_WKT2_2019, NULL))??????????????????????????? ????????????????????????^~~~~~~~~~~~proj6.cpp:990:52: note: suggested alternative: ?PJ_WKT2_2018????????? if ((pszSRS = proj_as_wkt(ctx, source_crs, PJ_WKT2_2019, NULL))??????????????????????????????????????????????????? ^~~~~~~~~~~~?????????????????? ?????????????????????????????????PJ_WKT2_2018make: *** [proj6.o] Error 1ERROR: compilation failed for package ?rgdal?* removing ?/usrfiles/shared-projects/shannon/RSTAN_TESTING/RSTAN_SHARE/renv/staging/3/rgdal?Error: install of package 'rgdal' failedTraceback (most recent calls last):14: install.packages("rgdal")13: install(pkgs)12: renv_install(records, library)11: renv_install_staged(records, library)10: renv_install_default(records, library) 9: handler(package, renv_install_impl(record)) 8: renv_install_impl(record) 7: withCallingHandlers(renv_install_package_local(record), error = function(e) {??????? vwritef("\tFAILED")??????? writef(e$output)??? }) 6: renv_install_package_local(record) 5: renv_install_package_local_impl(package, path, library) 4: r_cmd_install(package, path, library) 3: r_exec(package, args, "install") 2: r_exec_error(package, output, label) 1: stop(error)
Sent from Yahoo Mail on Android
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210122/0856a945/attachment-0001.html>

From Roger.Bivand at nhh.no  Mon Jan 25 02:11:33 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 25 Jan 2021 03:11:33 -0700 (MST)
Subject: [gdal-dev] Install error rgdal
In-Reply-To: <194636970.1490896.1611336901541@mail.yahoo.com>
References: <194636970.1490896.1611336901541@mail.yahoo.com>
Message-ID: <1611569493339-0.post@n6.nabble.com>

This list is for GDAL itself, not the R package rgdal. Please post on
R-sig-geo, in plain text only. Please also state how you installed PROJ and
GDAL (GDAL is old and pre-dates PROJ), and your OS version.

Roger
(rgdal maintainer)



GDAL - Dev mailing list wrote
> I'm getting this error trying to install newer version of rgdal, already
> have 1.5-16 install and working.
> 
> [: ~]$ gdal-config --version3.0.1[: ~]$ geos-config --version3.7.2[: ~]$
> proj -VRel. 6.2.0, September 1st, 2019 ?> sessionInfo()R version 4.0.0
> (2020-04-24)Platform: x86_64-pc-linux-gnu (64-bit)Running under: Red Hat
> Enterprise Linux ?Matrix products: defaultBLAS:??
> /opt/R/R_4.0.0/lib64/R/lib/libRblas.soLAPACK:
> /opt/R/R_4.0.0/lib64/R/lib/libRlapack.so ?locale: [1]
> LC_CTYPE=en_US.UTF-8?????? LC_NUMERIC=C??????????????
> LC_TIME=en_US.UTF-8??????? LC_COLLATE=en_US.UTF-8????
> LC_MONETARY=en_US.UTF-8??? LC_MESSAGES=en_US.UTF-8???
> LC_PAPER=en_US.UTF-8????? ?[8] LC_NAME=C?????????????????
> LC_ADDRESS=C?????????????? LC_TELEPHONE=C????????????
> LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C??????  ?attached base
> packages:[1] stats???? graphics? grDevices datasets? utils???? methods??
> base????  ?loaded via a namespace (and not attached):[1] compiler_4.0.0
> tools_4.0.0??? renv_0.12.3? ? ? ? ?/opt/rh/devtoolset-8/root/usr/bin/g++
> -std=gnu++11 -I"/opt/R/R_4.0.0/lib64/R/include" -DNDEBUG
> -I/usr/local/include -DPROJ_H_API
> -I'/usrfiles/shared-projects/shannon/RSTAN_TESTING/RSTAN_SHARE/renv/staging/3/sp/include'
> -I/usr/local/include?? -fpic? -g -O2 ?-c proj6.cpp -o proj6.oIn file
> included from proj6.cpp:5:proj6.cpp: In function ?SEXPREC*
> get_source_crs(SEXP)?:proj6.cpp:258:58: error: ?PJ_WKT2_2019? was not
> declared in this scope???????? COPY_TO_USER_STRING(proj_as_wkt(ctx,
> target_crs, PJ_WKT2_2019,
> NULL)));?????????????????????????????????????????????????????????
> ^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39: note: in
> definition of macro ?COPY_TO_USER_STRING? #define COPY_TO_USER_STRING(x)
> mkChar(x)????????????????????????????? ?????????^proj6.cpp:258:58: note:
> suggested alternative: ?PJ_WKT2_2018?????????
> COPY_TO_USER_STRING(proj_as_wkt(ctx, target_crs, PJ_WKT2_2019,
> NULL)));?????????????????????????????????????????????????????????
> ^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39: note: in
> definition of macro ?COPY_TO_USER_STRING? #define COPY_TO_USER_STRING(x)
> mkChar(x)?????????????????????????????????????? ^proj6.cpp: In function
> ?SEXPREC* proj_vis_order(SEXP)?:proj6.cpp:291:58: error: ?PJ_WKT2_2019?
> was not declared in this scope????????
> COPY_TO_USER_STRING(proj_as_wkt(ctx, target_crs, PJ_WKT2_2019,
> NULL)));?????????????????????????????????????????????????????????
> ^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39: note: in
> definition of macro ?COPY_TO_USER_STRING? #define COPY_TO_USER_STRING(x)
> mkChar(x)?????????????????????????????????????? ^proj6.cpp:291:58: note:
> suggested alternative: ?PJ_WKT2_2018?????????
> COPY_TO_USER_STRING(proj_as_wkt(ctx, target_crs, PJ_WKT2_2019,
> NULL)));????????
> ?????????????????????????????????????????????????^~~~~~~~~~~~/opt/R/R_4.0.0/lib64/R/include/Rdefines.h:191:39:
> note: in definition of macro ?COPY_TO_USER_STRING? #define
> COPY_TO_USER_STRING(x) mkChar(x)??????????????????????????????????????
> ^proj6.cpp: In function ?SEXPREC* P6_SRID_proj(SEXP, SEXP, SEXP, SEXP,
> SEXP, SEXP)?:proj6.cpp:990:52: error: ?PJ_WKT2_2019? was not declared in
> this scope???????? if ((pszSRS = proj_as_wkt(ctx, source_crs,
> PJ_WKT2_2019, NULL))???????????????????????????
> ????????????????????????^~~~~~~~~~~~proj6.cpp:990:52: note: suggested
> alternative: ?PJ_WKT2_2018????????? if ((pszSRS = proj_as_wkt(ctx,
> source_crs, PJ_WKT2_2019,
> NULL))???????????????????????????????????????????????????
> ^~~~~~~~~~~~??????????????????
> ?????????????????????????????????PJ_WKT2_2018make: *** [proj6.o] Error
> 1ERROR: compilation failed for package ?rgdal?* removing
> ?/usrfiles/shared-projects/shannon/RSTAN_TESTING/RSTAN_SHARE/renv/staging/3/rgdal?Error:
> install of package 'rgdal' failedTraceback (most recent calls last):14:
> install.packages("rgdal")13: install(pkgs)12: renv_install(records,
> library)11: renv_install_staged(records, library)10:
> renv_install_default(records, library) 9: handler(package,
> renv_install_impl(record)) 8: renv_install_impl(record) 7:
> withCallingHandlers(renv_install_package_local(record), error =
> function(e) {??????? vwritef("\tFAILED")??????? writef(e$output)??? }) 6:
> renv_install_package_local(record) 5:
> renv_install_package_local_impl(package, path, library) 4:
> r_cmd_install(package, path, library) 3: r_exec(package, args, "install")
> 2: r_exec_error(package, output, label) 1: stop(error)
> Sent from Yahoo Mail on Android
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





-----
Roger Bivand
NHH Norwegian School of Economics, Bergen, Norway
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From Roger.Bivand at nhh.no  Mon Jan 25 10:08:14 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 25 Jan 2021 11:08:14 -0700 (MST)
Subject: [gdal-dev] Install error rgdal
In-Reply-To: <1611569493339-0.post@n6.nabble.com>
References: <194636970.1490896.1611336901541@mail.yahoo.com>
 <1611569493339-0.post@n6.nabble.com>
Message-ID: <1611598094720-0.post@n6.nabble.com>

When rev. 1101 builds clean on https://r-forge.r-project.org/R/?group_id=884,
use

 install.packages("rgdal", repos="http://R-Forge.R-project.org")

to try to install a provisional development version which may  address the
issue here, that PJ_WKT2_2019 is only defined from PROJ >= 6.3. Please
report back to confirm that the issue is resolved.



-----
Roger Bivand
NHH Norwegian School of Economics, Bergen, Norway
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From Roger.Bivand at nhh.no  Mon Jan 25 10:35:05 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 25 Jan 2021 11:35:05 -0700 (MST)
Subject: [gdal-dev] Install error rgdal
In-Reply-To: <1611598094720-0.post@n6.nabble.com>
References: <194636970.1490896.1611336901541@mail.yahoo.com>
 <1611569493339-0.post@n6.nabble.com> <1611598094720-0.post@n6.nabble.com>
Message-ID: <1611599705861-0.post@n6.nabble.com>

 install.packages("rgdal", repos="http://R-Forge.R-project.org")

can be used now to check rev. 1101 handling PJ_WKT2_2019/PJ_WKT2_2018
defensively.



-----
Roger Bivand
NHH Norwegian School of Economics, Bergen, Norway
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jesus.moran at solute.es  Tue Jan 26 07:17:00 2021
From: jesus.moran at solute.es (jesus.moran at solute.es)
Date: Tue, 26 Jan 2021 16:17:00 +0100
Subject: [gdal-dev] HEIF format driver
Message-ID: <006c01d6f3f6$4b8acba0$e2a062e0$@solute.es>

Hello!

 

Im trying to install the HEIF driver from
https://gdal.org/drivers/raster/heif.html  to be able to export a geotiff
into HEIF format but the steps given there are a bit simple and have no
success with the installation. Have someone ever install this lib and want
to give me any piece of advice to do this properly?

 

Thank you in advance

 


 <http://www.solute.es/> 


Jes?s Maria Mor?n Rosado
Project Engineer

Av. Cerro del ?guila, 3, 28703 S.S. de los Reyes, Madrid

CONFIDENTIALITY: This e-mail and any attachments are confidential and may be
privileged. If you are not a named recipient, please notify the sender
immediately and do not disclose the contents to another person, use it for
any purpose or store or copy the information in any medium.

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210126/13d751f3/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.gif
Type: image/gif
Size: 1617 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210126/13d751f3/attachment.gif>

From evert.etienne at sitemark.com  Tue Jan 26 07:33:24 2021
From: evert.etienne at sitemark.com (Evert Etienne (SITEMARK))
Date: Tue, 26 Jan 2021 15:33:24 +0000
Subject: [gdal-dev] GDAL 3.2.2 release
Message-ID: <13FF7B6A-BB57-4E9C-8741-CEC29DC75283@sitemark.com>

Hey all,

I was wondering if there is someone in the community who is leading or ready to take lead on the 3.2.2 release and if a (rough) release date would already be available?

Many thanks

Evert

From daniele.romagnoli at geo-solutions.it  Wed Jan 27 02:49:19 2021
From: daniele.romagnoli at geo-solutions.it (Daniele Romagnoli)
Date: Wed, 27 Jan 2021 11:49:19 +0100
Subject: [gdal-dev] mosaicking files with partial overlap and binary mask
Message-ID: <CAJaHrDzshx33KZnVVk03Hn0Qe3pYj=mBwTTj_fr6P3tyc0sbyw@mail.gmail.com>

Hi list,
I have some TIFF datasets with partially overlapping edges and embedded
binary masks to keep into account which parts along the edges should be
masked out.
When showing all the images on QGIS it looks good since the binary mask do
its job by making the "black/white" overlapping edge masked out.

Now I need to create a single TIF from all of these images.
I have tried with gdalbuildvrt but it doesn't produce good result.
Checking the doc I saw this:


*If there is some amount of spatial overlapping between files [...]
currently, alpha channel is not taken into account to do alpha compositing
(so a source with alpha=0 appearing on top of another source will override
is content). This might be changed in later versions.  *

So I think it's expected and I have switched to gdal_merge.py.
It works better since it does alpha compositing but it looks like the
result doesn't preserve the binary mask which I still need since I have M
groups of N files which I need to process in 2 passes:
- the inner group of N files get merged using the binary mask to a bigger
file.
- all the M bigger files get mosaicked again to a single huge file.

I will spend some more time in testing different attempts.
In the meantime, do you have any suggestion or past experience on how to
deal with that?
Side note: I have vague memory of gdal_merge being somehow memory bounded,
throwing memory allocation errors when trying to compose big images. This
is why in the past I was using gdalbuildvrt to do composition (without
overlapping).

Thanks in advance.
Regards,
Daniele




-- 
Regards,
Daniele Romagnoli
==
GeoServer Professional Services from the experts! Visit http://goo.gl/it488V
for more information.
==

Ing. Daniele Romagnoli
Senior Software Engineer

GeoSolutions S.A.S.
Via di Montramito 3/A
55054  Massarosa (LU)
Italy
phone: +39 0584 962313
fax:      +39 0584 1660272

http://www.geo-solutions.it
http://twitter.com/geosolutions_it

-------------------------------------------------------

Con riferimento alla normativa sul trattamento dei dati personali (Reg. UE
2016/679 - Regolamento generale sulla protezione dei dati ?GDPR?), si
precisa che ogni circostanza inerente alla presente email (il suo
contenuto, gli eventuali allegati, etc.) ? un dato la cui conoscenza ?
riservata al/i solo/i destinatario/i indicati dallo scrivente. Se il
messaggio Le ? giunto per errore, ? tenuta/o a cancellarlo, ogni altra
operazione ? illecita. Le sarei comunque grato se potesse darmene notizia.

This email is intended only for the person or entity to which it is
addressed and may contain information that is privileged, confidential or
otherwise protected from disclosure. We remind that - as provided by
European Regulation 2016/679 ?GDPR? - copying, dissemination or use of this
e-mail or the information herein by anyone other than the intended
recipient is prohibited. If you have received this email by mistake, please
notify us immediately by telephone or e-mail.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/0e2b6b29/attachment.html>

From thomas.bonfort at gmail.com  Wed Jan 27 03:32:51 2021
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Wed, 27 Jan 2021 12:32:51 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <5660672.59c2uHP61a@even-i700>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
Message-ID: <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>

On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <even.rouault at spatialys.com>
wrote:

>
> The issue with esoteric/legacy drivers is not that much maintenance of the
> actual code of the drivers, in the sense of dealing with bug reports,
> questions, etc. (pretty sure they are none for the ones I listed). Most of
> them must work reasonably well and be feature complete, and most
> vulnerabilities have now been fixed. My concern is that this legacy code
> has
> indirect costs on other GDAL developers and users. The psychological cost
> I
> mentionned. Let's say someone want to turn on higher warning levels, and
> that
> this breaks in tens of drivers. Would he have to ping every maintainer and
> wait for them to address the issue ? Or maybe he will just give up.
> Similarly
> for breaking changes in the driver API. As Sean mentionned, this is
> probably a
> serious obstacle to growing up the core development team.
>

Given that we have a relatively easy way to disable individual drivers at
compile time, could we expand on this mechanism to mark problematic drivers
as "orphaned" in this case? The code would still live in the repo but would
be effectively disabled until someone with sufficient interest invests the
time/money to update the problematic code and re-enable it.
This will of course create some overhead to keep track of which drivers
have been orphaned from one release to the next, create github
issues/labels to list which drivers need work to be re-enabled, etc... But
it shifts the burden of maintaining the codebase of 250 drivers from the
core team over to the people/companies who actually need them. I'd be
willing to contribute the scripts that could ease the process of
orphaning/reintegrating a specific driver.

Regards,
Thomas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/e87bafbb/attachment.html>

From david.brochart at gmail.com  Wed Jan 27 06:26:20 2021
From: david.brochart at gmail.com (David Brochart)
Date: Wed, 27 Jan 2021 15:26:20 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
Message-ID: <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>

I am currently trying to add a Zarr driver to GDAL (see
https://github.com/OSGeo/gdal/pull/3411), but from what I can see the trend
is to remove drivers, so I'm now wondering it I should pursue this effort.
I'm relatively new to GDAL, but from my point of view supporting a lot of
formats is part of GDAL's success, so maybe the real focus should be on
implementing a plugin mechanism that would allow driver development
independently from core GDAL. Again, I might not have enough background to
give valuable feedback.

Regards,

David.

On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <thomas.bonfort at gmail.com>
wrote:

>
>
> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>>
>> The issue with esoteric/legacy drivers is not that much maintenance of
>> the
>> actual code of the drivers, in the sense of dealing with bug reports,
>> questions, etc. (pretty sure they are none for the ones I listed). Most
>> of
>> them must work reasonably well and be feature complete, and most
>> vulnerabilities have now been fixed. My concern is that this legacy code
>> has
>> indirect costs on other GDAL developers and users. The psychological cost
>> I
>> mentionned. Let's say someone want to turn on higher warning levels, and
>> that
>> this breaks in tens of drivers. Would he have to ping every maintainer
>> and
>> wait for them to address the issue ? Or maybe he will just give up.
>> Similarly
>> for breaking changes in the driver API. As Sean mentionned, this is
>> probably a
>> serious obstacle to growing up the core development team.
>>
>
> Given that we have a relatively easy way to disable individual drivers at
> compile time, could we expand on this mechanism to mark problematic drivers
> as "orphaned" in this case? The code would still live in the repo but would
> be effectively disabled until someone with sufficient interest invests the
> time/money to update the problematic code and re-enable it.
> This will of course create some overhead to keep track of which drivers
> have been orphaned from one release to the next, create github
> issues/labels to list which drivers need work to be re-enabled, etc... But
> it shifts the burden of maintaining the codebase of 250 drivers from the
> core team over to the people/companies who actually need them. I'd be
> willing to contribute the scripts that could ease the process of
> orphaning/reintegrating a specific driver.
>
> Regards,
> Thomas
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/5d00d792/attachment.html>

From howard at hobu.co  Wed Jan 27 09:27:10 2021
From: howard at hobu.co (Howard Butler)
Date: Wed, 27 Jan 2021 11:27:10 -0600
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
Message-ID: <F5708881-1EFC-467D-BB90-B6DA65A9872B@hobu.co>

> but from my point of view supporting a lot of formats is part of GDAL's success,

GDAL is a 22 year old software project. It's not just that GDAL supports lots of formats. It is also that the code supporting all of those formats is meticulously maintained, and it maintains *good* support for all of those formats. The bulk of that meticulous maintenance has not been evenly carried by the individuals, organizations, and companies that have been enjoying the benefits from it. GDAL maintenance as currently happen(ed) is unsustainable in all of the ways you read about in handwringing think pieces on the internet about open source software projects.

> so maybe the real focus should be on implementing a plugin mechanism that would allow driver development independently from core GDAL.

As I see it, the project has three potential futures:

1) Continue the current architectural and niche trajectory. A one-stop-shop for geospatial formats that is conveniently distributed in all relevant platforms.
2) Split GDAL/OGR core from the drivers so that each can evolve and be maintained at their own pace according to the attention they can attract.
3) Let GDAL rot as-is with low wattage community maintenance and exist as a zombie gut pile of useful code that organizations continue to pull from and incorporate into their own software. 

I think we as a community want status quo ? #1 ? all of the goodness that GDAL provides by a complete implementation of the geospatial format universe all in one spot. As should be becoming clear by these threads, this scenario is not likely to continue due to the three jobs problem [1] I described earlier in the thread. Our options to maintain this status quo is for the community to provide the revenue stream for someone to do just the maintainer job, effectively split the maintenance activities, or find another Even that wants three jobs :)

The second scenario has the potential to make it easier to share the maintenance burden, but it cleaves off what many see as GDAL's best feature ? universality ? by making support for specific formats be a packager's or a user's burden. It would limit the GDAL platform leverage that vendors currently get by injecting support for their proprietary SDKs for the project to carry, and the impact and station of GDAL is likely to be reduced by this approach. Maybe that could be a good thing.

The third scenario is a common one. Organizations with the need and resources to internally spend will continue to maintain GDAL in their (closed) codebases. The software-based interoperability that GDAL provides the industry will diminish, and the existing tree will reach a kind of stasis with open source distributors until the bugs accumulate in frequency and scope to cause it to get dropped. 


Howard

[1] https://lists.osgeo.org/pipermail/gdal-dev/2021-January/053302.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/fe0e2c8a/attachment-0001.html>

From stephenwoodbridge37 at gmail.com  Wed Jan 27 11:55:33 2021
From: stephenwoodbridge37 at gmail.com (Stephen Woodbridge)
Date: Wed, 27 Jan 2021 14:55:33 -0500
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <F5708881-1EFC-467D-BB90-B6DA65A9872B@hobu.co>
References: <F5708881-1EFC-467D-BB90-B6DA65A9872B@hobu.co>
Message-ID: <528F7014-6C4A-4490-BD29-1C968061AE23@gmail.com>

I think a 4th option is a hybrid approach of moving to a more modular plug-in architecture that allows the core more flexibility to evolve at the same time by moving to a more plug-in driver allows for more independent development, testing and release lets the community participation. This does stop the core from maintaining some of the drivers also. I don?t see value in maintaining obsolete drivers or drivers that only a few people use if it costs us a lot to maintain them. 

That said figuring out the long term funding for the project core is critical. 

Unfortunately I?m only in a position to offer an opinion and not much more so feel free to ignore it. 

Best regards,
-Steve W

Sent from my iPhone

> On Jan 27, 2021, at 12:28 PM, Howard Butler <howard at hobu.co> wrote:
> 
> ?
>> 
>> but from my point of view supporting a lot of formats is part of GDAL's success,
> 
> GDAL is a 22 year old software project. It's not just that GDAL supports lots of formats. It is also that the code supporting all of those formats is meticulously maintained, and it maintains *good* support for all of those formats. The bulk of that meticulous maintenance has not been evenly carried by the individuals, organizations, and companies that have been enjoying the benefits from it. GDAL maintenance as currently happen(ed) is unsustainable in all of the ways you read about in handwringing think pieces on the internet about open source software projects.
> 
>> so maybe the real focus should be on implementing a plugin mechanism that would allow driver development independently from core GDAL.
> 
> As I see it, the project has three potential futures:
> 
> 1) Continue the current architectural and niche trajectory. A one-stop-shop for geospatial formats that is conveniently distributed in all relevant platforms.
> 2) Split GDAL/OGR core from the drivers so that each can evolve and be maintained at their own pace according to the attention they can attract.
> 3) Let GDAL rot as-is with low wattage community maintenance and exist as a zombie gut pile of useful code that organizations continue to pull from and incorporate into their own software. 
> 
> I think we as a community want status quo ? #1 ? all of the goodness that GDAL provides by a complete implementation of the geospatial format universe all in one spot. As should be becoming clear by these threads, this scenario is not likely to continue due to the three jobs problem [1] I described earlier in the thread. Our options to maintain this status quo is for the community to provide the revenue stream for someone to do just the maintainer job, effectively split the maintenance activities, or find another Even that wants three jobs :)
> 
> The second scenario has the potential to make it easier to share the maintenance burden, but it cleaves off what many see as GDAL's best feature ? universality ? by making support for specific formats be a packager's or a user's burden. It would limit the GDAL platform leverage that vendors currently get by injecting support for their proprietary SDKs for the project to carry, and the impact and station of GDAL is likely to be reduced by this approach. Maybe that could be a good thing.
> 
> The third scenario is a common one. Organizations with the need and resources to internally spend will continue to maintain GDAL in their (closed) codebases. The software-based interoperability that GDAL provides the industry will diminish, and the existing tree will reach a kind of stasis with open source distributors until the bugs accumulate in frequency and scope to cause it to get dropped. 
> 
> 
> Howard
> 
> [1] https://lists.osgeo.org/pipermail/gdal-dev/2021-January/053302.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/dd0e72ec/attachment.html>

From szekerest at gmail.com  Wed Jan 27 13:16:52 2021
From: szekerest at gmail.com (Tamas Szekeres)
Date: Wed, 27 Jan 2021 22:16:52 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
Message-ID: <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>

David,

Up to this time the driver writers were highly welcomed to author new
drivers for the project and these effort didn't require a separate RFC in
terms of the Project Management Committee Guidelines
<https://gdal.org/development/rfc/rfc1_pmc.html> document. Adding new
drivers hasn't been considered to be substantial changes or something that
causes to change the API or brings in backwards incompatibility issues.
However in a real deployment situation the drivers may cause issues for the
developers, end users and package maintainers from several aspects like so:

1. The drivers may depend on external libraries and we don't want to link
against those libraries in all cases.
2. The external libraries may cause license incompatibilities, ie linking
against that may change the license terms of the overall project.
3. Not all of the drivers are required in a particular solution (that
applies to the built in drivers, too). In a real situation the application
may use only a limited set of drivers and the existence of the unwanted
drivers may cause some performance degradation.
4. Implementing custom compilations (and omitting unwanted drivers from the
build) may be problematic for most of the users or projects utilizing gdal
as a sub-project.

In my opinion, the current solution of incubating new drivers is fairly
minimalistic, we might probably want to know what kind of format is being
addressed, who is the audience, how amount of user might be of interest,
how the licensing of the dependent project is looking like, is the
dependent project (if any) maintained well enough and can be compiled to
each supported platforms etc.

But replying to the question, I think you shoud continue the effort, but
consider to implement a plugin build for that. There are several existing
drivers are compiled as plugins at the moment, so it should not be so
difficult.


Best regards,

Tamas


David Brochart <david.brochart at gmail.com> ezt ?rta (id?pont: 2021. jan.
27., Sze, 15:29):

> I am currently trying to add a Zarr driver to GDAL (see
> https://github.com/OSGeo/gdal/pull/3411), but from what I can see the
> trend is to remove drivers, so I'm now wondering it I should pursue this
> effort. I'm relatively new to GDAL, but from my point of view supporting a
> lot of formats is part of GDAL's success, so maybe the real focus should be
> on implementing a plugin mechanism that would allow driver development
> independently from core GDAL. Again, I might not have enough background to
> give valuable feedback.
>
> Regards,
>
> David.
>
> On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <thomas.bonfort at gmail.com>
> wrote:
>
>>
>>
>> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <even.rouault at spatialys.com>
>> wrote:
>>
>>>
>>> The issue with esoteric/legacy drivers is not that much maintenance of
>>> the
>>> actual code of the drivers, in the sense of dealing with bug reports,
>>> questions, etc. (pretty sure they are none for the ones I listed). Most
>>> of
>>> them must work reasonably well and be feature complete, and most
>>> vulnerabilities have now been fixed. My concern is that this legacy code
>>> has
>>> indirect costs on other GDAL developers and users. The psychological
>>> cost I
>>> mentionned. Let's say someone want to turn on higher warning levels, and
>>> that
>>> this breaks in tens of drivers. Would he have to ping every maintainer
>>> and
>>> wait for them to address the issue ? Or maybe he will just give up.
>>> Similarly
>>> for breaking changes in the driver API. As Sean mentionned, this is
>>> probably a
>>> serious obstacle to growing up the core development team.
>>>
>>
>> Given that we have a relatively easy way to disable individual drivers at
>> compile time, could we expand on this mechanism to mark problematic drivers
>> as "orphaned" in this case? The code would still live in the repo but would
>> be effectively disabled until someone with sufficient interest invests the
>> time/money to update the problematic code and re-enable it.
>> This will of course create some overhead to keep track of which drivers
>> have been orphaned from one release to the next, create github
>> issues/labels to list which drivers need work to be re-enabled, etc... But
>> it shifts the burden of maintaining the codebase of 250 drivers from the
>> core team over to the people/companies who actually need them. I'd be
>> willing to contribute the scripts that could ease the process of
>> orphaning/reintegrating a specific driver.
>>
>> Regards,
>> Thomas
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/b037b194/attachment.html>

From patrick.mckendree.young at gmail.com  Wed Jan 27 15:02:18 2021
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Wed, 27 Jan 2021 16:02:18 -0700
Subject: [gdal-dev] mosaicking files with partial overlap and binary mask
In-Reply-To: <CAJaHrDzshx33KZnVVk03Hn0Qe3pYj=mBwTTj_fr6P3tyc0sbyw@mail.gmail.com>
References: <CAJaHrDzshx33KZnVVk03Hn0Qe3pYj=mBwTTj_fr6P3tyc0sbyw@mail.gmail.com>
Message-ID: <CADXYQQ5=uSgr+x-3+hNjuWLR=b_Z7+f5iG2FcqvArk0Tgv2qzQ@mail.gmail.com>

Hi Daniele,

Even added this functionality to VRTs just recently, see

https://lists.osgeo.org/pipermail/gdal-dev/2020-December/053178.html

I think it is slated for GDAL 3.3 but you could always build the bleeding
edge.

Patrick

On Wed, Jan 27, 2021 at 3:50 AM Daniele Romagnoli <
daniele.romagnoli at geo-solutions.it> wrote:

> Hi list,
> I have some TIFF datasets with partially overlapping edges and embedded
> binary masks to keep into account which parts along the edges should be
> masked out.
> When showing all the images on QGIS it looks good since the binary mask do
> its job by making the "black/white" overlapping edge masked out.
>
> Now I need to create a single TIF from all of these images.
> I have tried with gdalbuildvrt but it doesn't produce good result.
> Checking the doc I saw this:
>
>
> *If there is some amount of spatial overlapping between files [...]
> currently, alpha channel is not taken into account to do alpha compositing
> (so a source with alpha=0 appearing on top of another source will override
> is content). This might be changed in later versions.  *
>
> So I think it's expected and I have switched to gdal_merge.py.
> It works better since it does alpha compositing but it looks like the
> result doesn't preserve the binary mask which I still need since I have M
> groups of N files which I need to process in 2 passes:
> - the inner group of N files get merged using the binary mask to a bigger
> file.
> - all the M bigger files get mosaicked again to a single huge file.
>
> I will spend some more time in testing different attempts.
> In the meantime, do you have any suggestion or past experience on how to
> deal with that?
> Side note: I have vague memory of gdal_merge being somehow memory bounded,
> throwing memory allocation errors when trying to compose big images. This
> is why in the past I was using gdalbuildvrt to do composition (without
> overlapping).
>
> Thanks in advance.
> Regards,
> Daniele
>
>
>
>
> --
> Regards,
> Daniele Romagnoli
> ==
> GeoServer Professional Services from the experts! Visit
> http://goo.gl/it488V for more information.
> ==
>
> Ing. Daniele Romagnoli
> Senior Software Engineer
>
> GeoSolutions S.A.S.
> Via di Montramito 3/A
> 55054  Massarosa (LU)
> Italy
> phone: +39 0584 962313
> fax:      +39 0584 1660272
>
> http://www.geo-solutions.it
> http://twitter.com/geosolutions_it
>
> -------------------------------------------------------
>
> Con riferimento alla normativa sul trattamento dei dati personali (Reg. UE
> 2016/679 - Regolamento generale sulla protezione dei dati ?GDPR?), si
> precisa che ogni circostanza inerente alla presente email (il suo
> contenuto, gli eventuali allegati, etc.) ? un dato la cui conoscenza ?
> riservata al/i solo/i destinatario/i indicati dallo scrivente. Se il
> messaggio Le ? giunto per errore, ? tenuta/o a cancellarlo, ogni altra
> operazione ? illecita. Le sarei comunque grato se potesse darmene notizia.
>
> This email is intended only for the person or entity to which it is
> addressed and may contain information that is privileged, confidential or
> otherwise protected from disclosure. We remind that - as provided by
> European Regulation 2016/679 ?GDPR? - copying, dissemination or use of this
> e-mail or the information herein by anyone other than the intended
> recipient is prohibited. If you have received this email by mistake, please
> notify us immediately by telephone or e-mail.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/3a04106c/attachment.html>

From gdisk.mike at gmail.com  Wed Jan 27 19:22:18 2021
From: gdisk.mike at gmail.com (gdisk.mike)
Date: Wed, 27 Jan 2021 20:22:18 -0700
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
Message-ID: <CAKTSvBiavuSSbuRa+xPwOhkfm4x9Fmy8fbx6uyDfGCKZY=nW2Q@mail.gmail.com>

Just curious -
Some time ago there was a motion for RFC 76 - OGR Python drivers. Correct
me if I'm wrong, but this sort of makes it easy to add python drivers?
Perhaps this could be a means for others to add/reclaim a driver that gets
dropped?

v/r,
Mike



On Wed, Jan 27, 2021 at 2:17 PM Tamas Szekeres <szekerest at gmail.com> wrote:

> David,
>
> Up to this time the driver writers were highly welcomed to author new
> drivers for the project and these effort didn't require a separate RFC in
> terms of the Project Management Committee Guidelines
> <https://gdal.org/development/rfc/rfc1_pmc.html> document. Adding new
> drivers hasn't been considered to be substantial changes or something that
> causes to change the API or brings in backwards incompatibility issues.
> However in a real deployment situation the drivers may cause issues for
> the developers, end users and package maintainers from several aspects like
> so:
>
> 1. The drivers may depend on external libraries and we don't want to link
> against those libraries in all cases.
> 2. The external libraries may cause license incompatibilities, ie linking
> against that may change the license terms of the overall project.
> 3. Not all of the drivers are required in a particular solution (that
> applies to the built in drivers, too). In a real situation the application
> may use only a limited set of drivers and the existence of the unwanted
> drivers may cause some performance degradation.
> 4. Implementing custom compilations (and omitting unwanted drivers from
> the build) may be problematic for most of the users or projects utilizing
> gdal as a sub-project.
>
> In my opinion, the current solution of incubating new drivers is fairly
> minimalistic, we might probably want to know what kind of format is being
> addressed, who is the audience, how amount of user might be of interest,
> how the licensing of the dependent project is looking like, is the
> dependent project (if any) maintained well enough and can be compiled to
> each supported platforms etc.
>
> But replying to the question, I think you shoud continue the effort, but
> consider to implement a plugin build for that. There are several existing
> drivers are compiled as plugins at the moment, so it should not be so
> difficult.
>
>
> Best regards,
>
> Tamas
>
>
> David Brochart <david.brochart at gmail.com> ezt ?rta (id?pont: 2021. jan.
> 27., Sze, 15:29):
>
>> I am currently trying to add a Zarr driver to GDAL (see
>> https://github.com/OSGeo/gdal/pull/3411), but from what I can see the
>> trend is to remove drivers, so I'm now wondering it I should pursue this
>> effort. I'm relatively new to GDAL, but from my point of view supporting a
>> lot of formats is part of GDAL's success, so maybe the real focus should be
>> on implementing a plugin mechanism that would allow driver development
>> independently from core GDAL. Again, I might not have enough background to
>> give valuable feedback.
>>
>> Regards,
>>
>> David.
>>
>> On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <thomas.bonfort at gmail.com>
>> wrote:
>>
>>>
>>>
>>> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <
>>> even.rouault at spatialys.com> wrote:
>>>
>>>>
>>>> The issue with esoteric/legacy drivers is not that much maintenance of
>>>> the
>>>> actual code of the drivers, in the sense of dealing with bug reports,
>>>> questions, etc. (pretty sure they are none for the ones I listed). Most
>>>> of
>>>> them must work reasonably well and be feature complete, and most
>>>> vulnerabilities have now been fixed. My concern is that this legacy
>>>> code has
>>>> indirect costs on other GDAL developers and users. The psychological
>>>> cost I
>>>> mentionned. Let's say someone want to turn on higher warning levels,
>>>> and that
>>>> this breaks in tens of drivers. Would he have to ping every maintainer
>>>> and
>>>> wait for them to address the issue ? Or maybe he will just give up.
>>>> Similarly
>>>> for breaking changes in the driver API. As Sean mentionned, this is
>>>> probably a
>>>> serious obstacle to growing up the core development team.
>>>>
>>>
>>> Given that we have a relatively easy way to disable individual drivers
>>> at compile time, could we expand on this mechanism to mark problematic
>>> drivers as "orphaned" in this case? The code would still live in the repo
>>> but would be effectively disabled until someone with sufficient interest
>>> invests the time/money to update the problematic code and re-enable it.
>>> This will of course create some overhead to keep track of which drivers
>>> have been orphaned from one release to the next, create github
>>> issues/labels to list which drivers need work to be re-enabled, etc... But
>>> it shifts the burden of maintaining the codebase of 250 drivers from the
>>> core team over to the people/companies who actually need them. I'd be
>>> willing to contribute the scripts that could ease the process of
>>> orphaning/reintegrating a specific driver.
>>>
>>> Regards,
>>> Thomas
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210127/452f2396/attachment-0001.html>

From andrew at aitchison.me.uk  Thu Jan 28 00:27:36 2021
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 28 Jan 2021 08:27:36 +0000 (GMT)
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CAKTSvBiavuSSbuRa+xPwOhkfm4x9Fmy8fbx6uyDfGCKZY=nW2Q@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
 <CAKTSvBiavuSSbuRa+xPwOhkfm4x9Fmy8fbx6uyDfGCKZY=nW2Q@mail.gmail.com>
Message-ID: <691ddaae-1a70-702c-5c98-eb286e231b5b@aitchison.me.uk>

On Wed, 27 Jan 2021, gdisk.mike wrote:

> Just curious -
> Some time ago there was a motion for RFC 76 - OGR Python drivers. Correct
> me if I'm wrong, but this sort of makes it easy to add python drivers?
> Perhaps this could be a means for others to add/reclaim a driver that gets
> dropped?

RFC 76 is only for vector drivers;
most of the formats being discussed are raster formats.

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From daniele.romagnoli at geo-solutions.it  Thu Jan 28 01:12:21 2021
From: daniele.romagnoli at geo-solutions.it (Daniele Romagnoli)
Date: Thu, 28 Jan 2021 10:12:21 +0100
Subject: [gdal-dev] mosaicking files with partial overlap and binary mask
In-Reply-To: <CADXYQQ5=uSgr+x-3+hNjuWLR=b_Z7+f5iG2FcqvArk0Tgv2qzQ@mail.gmail.com>
References: <CAJaHrDzshx33KZnVVk03Hn0Qe3pYj=mBwTTj_fr6P3tyc0sbyw@mail.gmail.com>
 <CADXYQQ5=uSgr+x-3+hNjuWLR=b_Z7+f5iG2FcqvArk0Tgv2qzQ@mail.gmail.com>
Message-ID: <CAJaHrDw2bvOtQkaqM4wJWT=zMD8r8goiDzRHed7iEt7Vn__GoA@mail.gmail.com>

Hi Patrick,
nice!
Thanks for the feedback.

Do you have any info about eventual backports to previous versions?

Regards,
Daniele

On Thu, Jan 28, 2021 at 12:02 AM Patrick Young <
patrick.mckendree.young at gmail.com> wrote:

> Hi Daniele,
>
> Even added this functionality to VRTs just recently, see
>
> https://lists.osgeo.org/pipermail/gdal-dev/2020-December/053178.html
>
> I think it is slated for GDAL 3.3 but you could always build the bleeding
> edge.
>
> Patrick
>
> On Wed, Jan 27, 2021 at 3:50 AM Daniele Romagnoli <
> daniele.romagnoli at geo-solutions.it> wrote:
>
>> Hi list,
>> I have some TIFF datasets with partially overlapping edges and embedded
>> binary masks to keep into account which parts along the edges should be
>> masked out.
>> When showing all the images on QGIS it looks good since the binary mask
>> do its job by making the "black/white" overlapping edge masked out.
>>
>> Now I need to create a single TIF from all of these images.
>> I have tried with gdalbuildvrt but it doesn't produce good result.
>> Checking the doc I saw this:
>>
>>
>> *If there is some amount of spatial overlapping between files [...]
>> currently, alpha channel is not taken into account to do alpha compositing
>> (so a source with alpha=0 appearing on top of another source will override
>> is content). This might be changed in later versions.  *
>>
>> So I think it's expected and I have switched to gdal_merge.py.
>> It works better since it does alpha compositing but it looks like the
>> result doesn't preserve the binary mask which I still need since I have M
>> groups of N files which I need to process in 2 passes:
>> - the inner group of N files get merged using the binary mask to a bigger
>> file.
>> - all the M bigger files get mosaicked again to a single huge file.
>>
>> I will spend some more time in testing different attempts.
>> In the meantime, do you have any suggestion or past experience on how to
>> deal with that?
>> Side note: I have vague memory of gdal_merge being somehow memory
>> bounded, throwing memory allocation errors when trying to compose big
>> images. This is why in the past I was using gdalbuildvrt to do composition
>> (without overlapping).
>>
>> Thanks in advance.
>> Regards,
>> Daniele
>>
>>
>>
>>
>> --
>> Regards,
>> Daniele Romagnoli
>> ==
>> GeoServer Professional Services from the experts! Visit
>> http://goo.gl/it488V for more information.
>> ==
>>
>> Ing. Daniele Romagnoli
>> Senior Software Engineer
>>
>> GeoSolutions S.A.S.
>> Via di Montramito 3/A
>> 55054  Massarosa (LU)
>> Italy
>> phone: +39 0584 962313
>> fax:      +39 0584 1660272
>>
>> http://www.geo-solutions.it
>> http://twitter.com/geosolutions_it
>>
>> -------------------------------------------------------
>>
>> Con riferimento alla normativa sul trattamento dei dati personali (Reg.
>> UE 2016/679 - Regolamento generale sulla protezione dei dati ?GDPR?), si
>> precisa che ogni circostanza inerente alla presente email (il suo
>> contenuto, gli eventuali allegati, etc.) ? un dato la cui conoscenza ?
>> riservata al/i solo/i destinatario/i indicati dallo scrivente. Se il
>> messaggio Le ? giunto per errore, ? tenuta/o a cancellarlo, ogni altra
>> operazione ? illecita. Le sarei comunque grato se potesse darmene notizia.
>>
>> This email is intended only for the person or entity to which it is
>> addressed and may contain information that is privileged, confidential or
>> otherwise protected from disclosure. We remind that - as provided by
>> European Regulation 2016/679 ?GDPR? - copying, dissemination or use of this
>> e-mail or the information herein by anyone other than the intended
>> recipient is prohibited. If you have received this email by mistake, please
>> notify us immediately by telephone or e-mail.
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>

-- 
Regards,
Daniele Romagnoli
==
GeoServer Professional Services from the experts! Visit http://goo.gl/it488V
for more information.
==

Ing. Daniele Romagnoli
Senior Software Engineer

GeoSolutions S.A.S.
Via di Montramito 3/A
55054  Massarosa (LU)
Italy
phone: +39 0584 962313
fax:      +39 0584 1660272

http://www.geo-solutions.it
http://twitter.com/geosolutions_it

-------------------------------------------------------

Con riferimento alla normativa sul trattamento dei dati personali (Reg. UE
2016/679 - Regolamento generale sulla protezione dei dati ?GDPR?), si
precisa che ogni circostanza inerente alla presente email (il suo
contenuto, gli eventuali allegati, etc.) ? un dato la cui conoscenza ?
riservata al/i solo/i destinatario/i indicati dallo scrivente. Se il
messaggio Le ? giunto per errore, ? tenuta/o a cancellarlo, ogni altra
operazione ? illecita. Le sarei comunque grato se potesse darmene notizia.

This email is intended only for the person or entity to which it is
addressed and may contain information that is privileged, confidential or
otherwise protected from disclosure. We remind that - as provided by
European Regulation 2016/679 ?GDPR? - copying, dissemination or use of this
e-mail or the information herein by anyone other than the intended
recipient is prohibited. If you have received this email by mistake, please
notify us immediately by telephone or e-mail.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210128/1f7e0d46/attachment.html>

From patrick.mckendree.young at gmail.com  Thu Jan 28 07:23:33 2021
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Thu, 28 Jan 2021 08:23:33 -0700
Subject: [gdal-dev] mosaicking files with partial overlap and binary mask
In-Reply-To: <CAJaHrDw2bvOtQkaqM4wJWT=zMD8r8goiDzRHed7iEt7Vn__GoA@mail.gmail.com>
References: <CAJaHrDzshx33KZnVVk03Hn0Qe3pYj=mBwTTj_fr6P3tyc0sbyw@mail.gmail.com>
 <CADXYQQ5=uSgr+x-3+hNjuWLR=b_Z7+f5iG2FcqvArk0Tgv2qzQ@mail.gmail.com>
 <CAJaHrDw2bvOtQkaqM4wJWT=zMD8r8goiDzRHed7iEt7Vn__GoA@mail.gmail.com>
Message-ID: <CADXYQQ5UD7VNzU1sF5peZqCwyP+1dMO-YNGtgvzD78N5GM0MJA@mail.gmail.com>

I do not!

If you want to try it out without building latest yourself and can use
docker, you can snag one of the latest containers here and see if it works
for you:

https://hub.docker.com/r/osgeo/gdal/tags?page=1&ordering=last_updated

Best,
Patrick

On Thu, Jan 28, 2021 at 2:12 AM Daniele Romagnoli <
daniele.romagnoli at geo-solutions.it> wrote:

> Hi Patrick,
> nice!
> Thanks for the feedback.
>
> Do you have any info about eventual backports to previous versions?
>
> Regards,
> Daniele
>
> On Thu, Jan 28, 2021 at 12:02 AM Patrick Young <
> patrick.mckendree.young at gmail.com> wrote:
>
>> Hi Daniele,
>>
>> Even added this functionality to VRTs just recently, see
>>
>> https://lists.osgeo.org/pipermail/gdal-dev/2020-December/053178.html
>>
>> I think it is slated for GDAL 3.3 but you could always build the bleeding
>> edge.
>>
>> Patrick
>>
>> On Wed, Jan 27, 2021 at 3:50 AM Daniele Romagnoli <
>> daniele.romagnoli at geo-solutions.it> wrote:
>>
>>> Hi list,
>>> I have some TIFF datasets with partially overlapping edges and embedded
>>> binary masks to keep into account which parts along the edges should be
>>> masked out.
>>> When showing all the images on QGIS it looks good since the binary mask
>>> do its job by making the "black/white" overlapping edge masked out.
>>>
>>> Now I need to create a single TIF from all of these images.
>>> I have tried with gdalbuildvrt but it doesn't produce good result.
>>> Checking the doc I saw this:
>>>
>>>
>>> *If there is some amount of spatial overlapping between files [...]
>>> currently, alpha channel is not taken into account to do alpha compositing
>>> (so a source with alpha=0 appearing on top of another source will override
>>> is content). This might be changed in later versions.  *
>>>
>>> So I think it's expected and I have switched to gdal_merge.py.
>>> It works better since it does alpha compositing but it looks like the
>>> result doesn't preserve the binary mask which I still need since I have M
>>> groups of N files which I need to process in 2 passes:
>>> - the inner group of N files get merged using the binary mask to a
>>> bigger file.
>>> - all the M bigger files get mosaicked again to a single huge file.
>>>
>>> I will spend some more time in testing different attempts.
>>> In the meantime, do you have any suggestion or past experience on how to
>>> deal with that?
>>> Side note: I have vague memory of gdal_merge being somehow memory
>>> bounded, throwing memory allocation errors when trying to compose big
>>> images. This is why in the past I was using gdalbuildvrt to do composition
>>> (without overlapping).
>>>
>>> Thanks in advance.
>>> Regards,
>>> Daniele
>>>
>>>
>>>
>>>
>>> --
>>> Regards,
>>> Daniele Romagnoli
>>> ==
>>> GeoServer Professional Services from the experts! Visit
>>> http://goo.gl/it488V for more information.
>>> ==
>>>
>>> Ing. Daniele Romagnoli
>>> Senior Software Engineer
>>>
>>> GeoSolutions S.A.S.
>>> Via di Montramito 3/A
>>> 55054  Massarosa (LU)
>>> Italy
>>> phone: +39 0584 962313
>>> fax:      +39 0584 1660272
>>>
>>> http://www.geo-solutions.it
>>> http://twitter.com/geosolutions_it
>>>
>>> -------------------------------------------------------
>>>
>>> Con riferimento alla normativa sul trattamento dei dati personali (Reg.
>>> UE 2016/679 - Regolamento generale sulla protezione dei dati ?GDPR?), si
>>> precisa che ogni circostanza inerente alla presente email (il suo
>>> contenuto, gli eventuali allegati, etc.) ? un dato la cui conoscenza ?
>>> riservata al/i solo/i destinatario/i indicati dallo scrivente. Se il
>>> messaggio Le ? giunto per errore, ? tenuta/o a cancellarlo, ogni altra
>>> operazione ? illecita. Le sarei comunque grato se potesse darmene notizia.
>>>
>>> This email is intended only for the person or entity to which it is
>>> addressed and may contain information that is privileged, confidential or
>>> otherwise protected from disclosure. We remind that - as provided by
>>> European Regulation 2016/679 ?GDPR? - copying, dissemination or use of this
>>> e-mail or the information herein by anyone other than the intended
>>> recipient is prohibited. If you have received this email by mistake, please
>>> notify us immediately by telephone or e-mail.
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
>
> --
> Regards,
> Daniele Romagnoli
> ==
> GeoServer Professional Services from the experts! Visit
> http://goo.gl/it488V for more information.
> ==
>
> Ing. Daniele Romagnoli
> Senior Software Engineer
>
> GeoSolutions S.A.S.
> Via di Montramito 3/A
> 55054  Massarosa (LU)
> Italy
> phone: +39 0584 962313
> fax:      +39 0584 1660272
>
> http://www.geo-solutions.it
> http://twitter.com/geosolutions_it
>
> -------------------------------------------------------
>
> Con riferimento alla normativa sul trattamento dei dati personali (Reg. UE
> 2016/679 - Regolamento generale sulla protezione dei dati ?GDPR?), si
> precisa che ogni circostanza inerente alla presente email (il suo
> contenuto, gli eventuali allegati, etc.) ? un dato la cui conoscenza ?
> riservata al/i solo/i destinatario/i indicati dallo scrivente. Se il
> messaggio Le ? giunto per errore, ? tenuta/o a cancellarlo, ogni altra
> operazione ? illecita. Le sarei comunque grato se potesse darmene notizia.
>
> This email is intended only for the person or entity to which it is
> addressed and may contain information that is privileged, confidential or
> otherwise protected from disclosure. We remind that - as provided by
> European Regulation 2016/679 ?GDPR? - copying, dissemination or use of this
> e-mail or the information herein by anyone other than the intended
> recipient is prohibited. If you have received this email by mistake, please
> notify us immediately by telephone or e-mail.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210128/304b47e0/attachment-0001.html>

From sean at mapbox.com  Thu Jan 28 08:39:13 2021
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 28 Jan 2021 09:39:13 -0700
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
Message-ID: <CADPhZXyXcdEKzyMZph8w-f1XcgyYeK5M5zZhWObCA_1U1-AEew@mail.gmail.com>

Hi Tamas,

Are you suggesting that a RFC be required for a new driver? I would support
this 100%.

On Wed, Jan 27, 2021 at 2:17 PM Tamas Szekeres <szekerest at gmail.com> wrote:

> David,
>
> Up to this time the driver writers were highly welcomed to author new
> drivers for the project and these effort didn't require a separate RFC in
> terms of the Project Management Committee Guidelines
> <https://gdal.org/development/rfc/rfc1_pmc.html> document. Adding new
> drivers hasn't been considered to be substantial changes or something that
> causes to change the API or brings in backwards incompatibility issues.
> However in a real deployment situation the drivers may cause issues for
> the developers, end users and package maintainers from several aspects like
> so:
>
> 1. The drivers may depend on external libraries and we don't want to link
> against those libraries in all cases.
> 2. The external libraries may cause license incompatibilities, ie linking
> against that may change the license terms of the overall project.
> 3. Not all of the drivers are required in a particular solution (that
> applies to the built in drivers, too). In a real situation the application
> may use only a limited set of drivers and the existence of the unwanted
> drivers may cause some performance degradation.
> 4. Implementing custom compilations (and omitting unwanted drivers from
> the build) may be problematic for most of the users or projects utilizing
> gdal as a sub-project.
>
> In my opinion, the current solution of incubating new drivers is fairly
> minimalistic, we might probably want to know what kind of format is being
> addressed, who is the audience, how amount of user might be of interest,
> how the licensing of the dependent project is looking like, is the
> dependent project (if any) maintained well enough and can be compiled to
> each supported platforms etc.
>
> But replying to the question, I think you shoud continue the effort, but
> consider to implement a plugin build for that. There are several existing
> drivers are compiled as plugins at the moment, so it should not be so
> difficult.
>
>
> Best regards,
>
> Tamas
>
>
> David Brochart <david.brochart at gmail.com> ezt ?rta (id?pont: 2021. jan.
> 27., Sze, 15:29):
>
>> I am currently trying to add a Zarr driver to GDAL (see
>> https://github.com/OSGeo/gdal/pull/3411), but from what I can see the
>> trend is to remove drivers, so I'm now wondering it I should pursue this
>> effort. I'm relatively new to GDAL, but from my point of view supporting a
>> lot of formats is part of GDAL's success, so maybe the real focus should be
>> on implementing a plugin mechanism that would allow driver development
>> independently from core GDAL. Again, I might not have enough background to
>> give valuable feedback.
>>
>> Regards,
>>
>> David.
>>
>> On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <thomas.bonfort at gmail.com>
>> wrote:
>>
>>>
>>>
>>> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <
>>> even.rouault at spatialys.com> wrote:
>>>
>>>>
>>>> The issue with esoteric/legacy drivers is not that much maintenance of
>>>> the
>>>> actual code of the drivers, in the sense of dealing with bug reports,
>>>> questions, etc. (pretty sure they are none for the ones I listed). Most
>>>> of
>>>> them must work reasonably well and be feature complete, and most
>>>> vulnerabilities have now been fixed. My concern is that this legacy
>>>> code has
>>>> indirect costs on other GDAL developers and users. The psychological
>>>> cost I
>>>> mentionned. Let's say someone want to turn on higher warning levels,
>>>> and that
>>>> this breaks in tens of drivers. Would he have to ping every maintainer
>>>> and
>>>> wait for them to address the issue ? Or maybe he will just give up.
>>>> Similarly
>>>> for breaking changes in the driver API. As Sean mentionned, this is
>>>> probably a
>>>> serious obstacle to growing up the core development team.
>>>>
>>>
>>> Given that we have a relatively easy way to disable individual drivers
>>> at compile time, could we expand on this mechanism to mark problematic
>>> drivers as "orphaned" in this case? The code would still live in the repo
>>> but would be effectively disabled until someone with sufficient interest
>>> invests the time/money to update the problematic code and re-enable it.
>>> This will of course create some overhead to keep track of which drivers
>>> have been orphaned from one release to the next, create github
>>> issues/labels to list which drivers need work to be re-enabled, etc... But
>>> it shifts the burden of maintaining the codebase of 250 drivers from the
>>> core team over to the people/companies who actually need them. I'd be
>>> willing to contribute the scripts that could ease the process of
>>> orphaning/reintegrating a specific driver.
>>>
>>> Regards,
>>> Thomas
>>>
>>
-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210128/5d4af4bd/attachment.html>

From szekerest at gmail.com  Thu Jan 28 11:33:01 2021
From: szekerest at gmail.com (Tamas Szekeres)
Date: Thu, 28 Jan 2021 20:33:01 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CADPhZXyXcdEKzyMZph8w-f1XcgyYeK5M5zZhWObCA_1U1-AEew@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
 <CADPhZXyXcdEKzyMZph8w-f1XcgyYeK5M5zZhWObCA_1U1-AEew@mail.gmail.com>
Message-ID: <CACALY+RNo44VTLAhAhDJqPtErBhyPY7Ns07MrCGQ9GsaGxJT-A@mail.gmail.com>

Hi Sean,

I would also be supportive to formalize the driver submission process.

Best regards,

Tamas


Sean Gillies <sean at mapbox.com> ezt ?rta (id?pont: 2021. jan. 28., Cs,
17:39):

> Hi Tamas,
>
> Are you suggesting that a RFC be required for a new driver? I would
> support this 100%.
>
> On Wed, Jan 27, 2021 at 2:17 PM Tamas Szekeres <szekerest at gmail.com>
> wrote:
>
>> David,
>>
>> Up to this time the driver writers were highly welcomed to author new
>> drivers for the project and these effort didn't require a separate RFC in
>> terms of the Project Management Committee Guidelines
>> <https://gdal.org/development/rfc/rfc1_pmc.html> document. Adding new
>> drivers hasn't been considered to be substantial changes or something that
>> causes to change the API or brings in backwards incompatibility issues.
>> However in a real deployment situation the drivers may cause issues for
>> the developers, end users and package maintainers from several aspects like
>> so:
>>
>> 1. The drivers may depend on external libraries and we don't want to link
>> against those libraries in all cases.
>> 2. The external libraries may cause license incompatibilities, ie linking
>> against that may change the license terms of the overall project.
>> 3. Not all of the drivers are required in a particular solution (that
>> applies to the built in drivers, too). In a real situation the application
>> may use only a limited set of drivers and the existence of the unwanted
>> drivers may cause some performance degradation.
>> 4. Implementing custom compilations (and omitting unwanted drivers from
>> the build) may be problematic for most of the users or projects utilizing
>> gdal as a sub-project.
>>
>> In my opinion, the current solution of incubating new drivers is fairly
>> minimalistic, we might probably want to know what kind of format is being
>> addressed, who is the audience, how amount of user might be of interest,
>> how the licensing of the dependent project is looking like, is the
>> dependent project (if any) maintained well enough and can be compiled to
>> each supported platforms etc.
>>
>> But replying to the question, I think you shoud continue the effort, but
>> consider to implement a plugin build for that. There are several existing
>> drivers are compiled as plugins at the moment, so it should not be so
>> difficult.
>>
>>
>> Best regards,
>>
>> Tamas
>>
>>
>> David Brochart <david.brochart at gmail.com> ezt ?rta (id?pont: 2021. jan.
>> 27., Sze, 15:29):
>>
>>> I am currently trying to add a Zarr driver to GDAL (see
>>> https://github.com/OSGeo/gdal/pull/3411), but from what I can see the
>>> trend is to remove drivers, so I'm now wondering it I should pursue this
>>> effort. I'm relatively new to GDAL, but from my point of view supporting a
>>> lot of formats is part of GDAL's success, so maybe the real focus should be
>>> on implementing a plugin mechanism that would allow driver development
>>> independently from core GDAL. Again, I might not have enough background to
>>> give valuable feedback.
>>>
>>> Regards,
>>>
>>> David.
>>>
>>> On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <
>>> thomas.bonfort at gmail.com> wrote:
>>>
>>>>
>>>>
>>>> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <
>>>> even.rouault at spatialys.com> wrote:
>>>>
>>>>>
>>>>> The issue with esoteric/legacy drivers is not that much maintenance of
>>>>> the
>>>>> actual code of the drivers, in the sense of dealing with bug reports,
>>>>> questions, etc. (pretty sure they are none for the ones I listed).
>>>>> Most of
>>>>> them must work reasonably well and be feature complete, and most
>>>>> vulnerabilities have now been fixed. My concern is that this legacy
>>>>> code has
>>>>> indirect costs on other GDAL developers and users. The psychological
>>>>> cost I
>>>>> mentionned. Let's say someone want to turn on higher warning levels,
>>>>> and that
>>>>> this breaks in tens of drivers. Would he have to ping every maintainer
>>>>> and
>>>>> wait for them to address the issue ? Or maybe he will just give up.
>>>>> Similarly
>>>>> for breaking changes in the driver API. As Sean mentionned, this is
>>>>> probably a
>>>>> serious obstacle to growing up the core development team.
>>>>>
>>>>
>>>> Given that we have a relatively easy way to disable individual drivers
>>>> at compile time, could we expand on this mechanism to mark problematic
>>>> drivers as "orphaned" in this case? The code would still live in the repo
>>>> but would be effectively disabled until someone with sufficient interest
>>>> invests the time/money to update the problematic code and re-enable it.
>>>> This will of course create some overhead to keep track of which drivers
>>>> have been orphaned from one release to the next, create github
>>>> issues/labels to list which drivers need work to be re-enabled, etc... But
>>>> it shifts the burden of maintaining the codebase of 250 drivers from the
>>>> core team over to the people/companies who actually need them. I'd be
>>>> willing to contribute the scripts that could ease the process of
>>>> orphaning/reintegrating a specific driver.
>>>>
>>>> Regards,
>>>> Thomas
>>>>
>>>
> --
> Sean Gillies
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210128/771e8c98/attachment-0001.html>

From howard at hobu.co  Thu Jan 28 13:36:48 2021
From: howard at hobu.co (Howard Butler)
Date: Thu, 28 Jan 2021 15:36:48 -0600
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CACALY+RNo44VTLAhAhDJqPtErBhyPY7Ns07MrCGQ9GsaGxJT-A@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
 <CADPhZXyXcdEKzyMZph8w-f1XcgyYeK5M5zZhWObCA_1U1-AEew@mail.gmail.com>
 <CACALY+RNo44VTLAhAhDJqPtErBhyPY7Ns07MrCGQ9GsaGxJT-A@mail.gmail.com>
Message-ID: <AB9B2B25-7413-4C15-873F-10CAEA1127C7@hobu.co>

I am also supportive of RFC approvals before someone goes and invests the time to develop a driver. Otherwise it is easy to get in the spot where it's not merged because the community didn't want it included. A nice thing the RFC process would ensure is a full document of the expectations of the driver. Specifically, whether it depends on binary-only SDKs, what features it would support, and *who* is on the hook for responding to issues on it. Another feature of this RFC should be to clarify the deprecation and removal process for drivers that are no longer relevant or no longer have someone providing them attention.


> On Jan 28, 2021, at 1:33 PM, Tamas Szekeres <szekerest at gmail.com> wrote:
> 
> Hi Sean,
> 
> I would also be supportive to formalize the driver submission process.
> 
> Best regards,
> 
> Tamas
> 
> 
> Sean Gillies <sean at mapbox.com <mailto:sean at mapbox.com>> ezt ?rta (id?pont: 2021. jan. 28., Cs, 17:39):
> Hi Tamas,
> 
> Are you suggesting that a RFC be required for a new driver? I would support this 100%.
> 
> On Wed, Jan 27, 2021 at 2:17 PM Tamas Szekeres <szekerest at gmail.com <mailto:szekerest at gmail.com>> wrote:
> David,
> 
> Up to this time the driver writers were highly welcomed to author new drivers for the project and these effort didn't require a separate RFC in terms of the Project Management Committee Guidelines <https://gdal.org/development/rfc/rfc1_pmc.html> document. Adding new drivers hasn't been considered to be substantial changes or something that causes to change the API or brings in backwards incompatibility issues.
> However in a real deployment situation the drivers may cause issues for the developers, end users and package maintainers from several aspects like so:
> 
> 1. The drivers may depend on external libraries and we don't want to link against those libraries in all cases.
> 2. The external libraries may cause license incompatibilities, ie linking against that may change the license terms of the overall project.
> 3. Not all of the drivers are required in a particular solution (that applies to the built in drivers, too). In a real situation the application may use only a limited set of drivers and the existence of the unwanted drivers may cause some performance degradation.
> 4. Implementing custom compilations (and omitting unwanted drivers from the build) may be problematic for most of the users or projects utilizing gdal as a sub-project.
> 
> In my opinion, the current solution of incubating new drivers is fairly minimalistic, we might probably want to know what kind of format is being addressed, who is the audience, how amount of user might be of interest, how the licensing of the dependent project is looking like, is the dependent project (if any) maintained well enough and can be compiled to each supported platforms etc.
> 
> But replying to the question, I think you shoud continue the effort, but consider to implement a plugin build for that. There are several existing drivers are compiled as plugins at the moment, so it should not be so difficult.
> 
> 
> Best regards,
> 
> Tamas
> 
> 
> David Brochart <david.brochart at gmail.com <mailto:david.brochart at gmail.com>> ezt ?rta (id?pont: 2021. jan. 27., Sze, 15:29):
> I am currently trying to add a Zarr driver to GDAL (see https://github.com/OSGeo/gdal/pull/3411 <https://github.com/OSGeo/gdal/pull/3411>), but from what I can see the trend is to remove drivers, so I'm now wondering it I should pursue this effort. I'm relatively new to GDAL, but from my point of view supporting a lot of formats is part of GDAL's success, so maybe the real focus should be on implementing a plugin mechanism that would allow driver development independently from core GDAL. Again, I might not have enough background to give valuable feedback.
> 
> Regards,
> 
> David.
> 
> On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <thomas.bonfort at gmail.com <mailto:thomas.bonfort at gmail.com>> wrote:
> 
> 
> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>> wrote:
> 
> The issue with esoteric/legacy drivers is not that much maintenance of the 
> actual code of the drivers, in the sense of dealing with bug reports, 
> questions, etc. (pretty sure they are none for the ones I listed). Most of 
> them must work reasonably well and be feature complete, and most 
> vulnerabilities have now been fixed. My concern is that this legacy code has 
> indirect costs on other GDAL developers and users. The psychological cost I 
> mentionned. Let's say someone want to turn on higher warning levels, and that 
> this breaks in tens of drivers. Would he have to ping every maintainer and 
> wait for them to address the issue ? Or maybe he will just give up. Similarly 
> for breaking changes in the driver API. As Sean mentionned, this is probably a 
> serious obstacle to growing up the core development team.
> 
> Given that we have a relatively easy way to disable individual drivers at compile time, could we expand on this mechanism to mark problematic drivers as "orphaned" in this case? The code would still live in the repo but would be effectively disabled until someone with sufficient interest invests the time/money to update the problematic code and re-enable it.
> This will of course create some overhead to keep track of which drivers have been orphaned from one release to the next, create github issues/labels to list which drivers need work to be re-enabled, etc... But it shifts the burden of maintaining the codebase of 250 drivers from the core team over to the people/companies who actually need them. I'd be willing to contribute the scripts that could ease the process of orphaning/reintegrating a specific driver.
> 
> Regards,
> Thomas
> 
> -- 
> Sean Gillies
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210128/0e822b33/attachment.html>

From schwehr at gmail.com  Thu Jan 28 14:34:59 2021
From: schwehr at gmail.com (Kurt Schwehr)
Date: Thu, 28 Jan 2021 14:34:59 -0800
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <AB9B2B25-7413-4C15-873F-10CAEA1127C7@hobu.co>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
 <CADPhZXyXcdEKzyMZph8w-f1XcgyYeK5M5zZhWObCA_1U1-AEew@mail.gmail.com>
 <CACALY+RNo44VTLAhAhDJqPtErBhyPY7Ns07MrCGQ9GsaGxJT-A@mail.gmail.com>
 <AB9B2B25-7413-4C15-873F-10CAEA1127C7@hobu.co>
Message-ID: <CACmBxytznphhxA+Y14yNOuoTWZiT-j4-Jfgc6iiwfJVXHAARNg@mail.gmail.com>

+1 for RFCs for new drivers.

I took a couple minute run at what a template for the RFC might look like.
It's painfully rough.  Anyone wanting to edit the doc, let me know off list
and I'll give you edit priv.  Or make you own.  You are welcome to take any
or none of my draft text if you make your attempt at a template for a New
Driver RFC.  Should there even be a template?

https://docs.google.com/document/d/e/2PACX-1vTtIU3WJw0APd7fXqfGVAYrBQGgURIzizb9MiXCI1trkj4PxOBZmz9o-Ne_5P7zkymM7dPjVZOCHBXl/pub

On Thu, Jan 28, 2021 at 1:37 PM Howard Butler <howard at hobu.co> wrote:

> I am also supportive of RFC approvals before someone goes and invests the
> time to develop a driver. Otherwise it is easy to get in the spot where
> it's not merged because the community didn't want it included. A nice thing
> the RFC process would ensure is a full document of the expectations of the
> driver. Specifically, whether it depends on binary-only SDKs, what features
> it would support, and *who* is on the hook for responding to issues on it.
> Another feature of this RFC should be to clarify the deprecation and
> removal process for drivers that are no longer relevant or no longer have
> someone providing them attention.
>
>
> On Jan 28, 2021, at 1:33 PM, Tamas Szekeres <szekerest at gmail.com> wrote:
>
> Hi Sean,
>
> I would also be supportive to formalize the driver submission process.
>
> Best regards,
>
> Tamas
>
>
> Sean Gillies <sean at mapbox.com> ezt ?rta (id?pont: 2021. jan. 28., Cs,
> 17:39):
>
>> Hi Tamas,
>>
>> Are you suggesting that a RFC be required for a new driver? I would
>> support this 100%.
>>
>> On Wed, Jan 27, 2021 at 2:17 PM Tamas Szekeres <szekerest at gmail.com>
>> wrote:
>>
>>> David,
>>>
>>> Up to this time the driver writers were highly welcomed to author new
>>> drivers for the project and these effort didn't require a separate RFC in
>>> terms of the Project Management Committee Guidelines
>>> <https://gdal.org/development/rfc/rfc1_pmc.html> document. Adding new
>>> drivers hasn't been considered to be substantial changes or something that
>>> causes to change the API or brings in backwards incompatibility issues.
>>> However in a real deployment situation the drivers may cause issues for
>>> the developers, end users and package maintainers from several aspects like
>>> so:
>>>
>>> 1. The drivers may depend on external libraries and we don't want to
>>> link against those libraries in all cases.
>>> 2. The external libraries may cause license incompatibilities, ie
>>> linking against that may change the license terms of the overall project.
>>> 3. Not all of the drivers are required in a particular solution (that
>>> applies to the built in drivers, too). In a real situation the application
>>> may use only a limited set of drivers and the existence of the unwanted
>>> drivers may cause some performance degradation.
>>> 4. Implementing custom compilations (and omitting unwanted drivers from
>>> the build) may be problematic for most of the users or projects utilizing
>>> gdal as a sub-project.
>>>
>>> In my opinion, the current solution of incubating new drivers is fairly
>>> minimalistic, we might probably want to know what kind of format is being
>>> addressed, who is the audience, how amount of user might be of interest,
>>> how the licensing of the dependent project is looking like, is the
>>> dependent project (if any) maintained well enough and can be compiled to
>>> each supported platforms etc.
>>>
>>> But replying to the question, I think you shoud continue the effort, but
>>> consider to implement a plugin build for that. There are several existing
>>> drivers are compiled as plugins at the moment, so it should not be so
>>> difficult.
>>>
>>>
>>> Best regards,
>>>
>>> Tamas
>>>
>>>
>>> David Brochart <david.brochart at gmail.com> ezt ?rta (id?pont: 2021. jan.
>>> 27., Sze, 15:29):
>>>
>>>> I am currently trying to add a Zarr driver to GDAL (see
>>>> https://github.com/OSGeo/gdal/pull/3411), but from what I can see the
>>>> trend is to remove drivers, so I'm now wondering it I should pursue this
>>>> effort. I'm relatively new to GDAL, but from my point of view supporting a
>>>> lot of formats is part of GDAL's success, so maybe the real focus should be
>>>> on implementing a plugin mechanism that would allow driver development
>>>> independently from core GDAL. Again, I might not have enough background to
>>>> give valuable feedback.
>>>>
>>>> Regards,
>>>>
>>>> David.
>>>>
>>>> On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <
>>>> thomas.bonfort at gmail.com> wrote:
>>>>
>>>>>
>>>>>
>>>>> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <
>>>>> even.rouault at spatialys.com> wrote:
>>>>>
>>>>>>
>>>>>> The issue with esoteric/legacy drivers is not that much maintenance
>>>>>> of the
>>>>>> actual code of the drivers, in the sense of dealing with bug reports,
>>>>>> questions, etc. (pretty sure they are none for the ones I listed).
>>>>>> Most of
>>>>>> them must work reasonably well and be feature complete, and most
>>>>>> vulnerabilities have now been fixed. My concern is that this legacy
>>>>>> code has
>>>>>> indirect costs on other GDAL developers and users. The psychological
>>>>>> cost I
>>>>>> mentionned. Let's say someone want to turn on higher warning levels,
>>>>>> and that
>>>>>> this breaks in tens of drivers. Would he have to ping every
>>>>>> maintainer and
>>>>>> wait for them to address the issue ? Or maybe he will just give up.
>>>>>> Similarly
>>>>>> for breaking changes in the driver API. As Sean mentionned, this is
>>>>>> probably a
>>>>>> serious obstacle to growing up the core development team.
>>>>>>
>>>>>
>>>>> Given that we have a relatively easy way to disable individual drivers
>>>>> at compile time, could we expand on this mechanism to mark problematic
>>>>> drivers as "orphaned" in this case? The code would still live in the repo
>>>>> but would be effectively disabled until someone with sufficient interest
>>>>> invests the time/money to update the problematic code and re-enable it.
>>>>> This will of course create some overhead to keep track of which
>>>>> drivers have been orphaned from one release to the next, create github
>>>>> issues/labels to list which drivers need work to be re-enabled, etc... But
>>>>> it shifts the burden of maintaining the codebase of 250 drivers from the
>>>>> core team over to the people/companies who actually need them. I'd be
>>>>> willing to contribute the scripts that could ease the process of
>>>>> orphaning/reintegrating a specific driver.
>>>>>
>>>>> Regards,
>>>>> Thomas
>>>>>
>>>>
>> --
>> Sean Gillies
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210128/48241089/attachment-0001.html>

From mateusz at loskot.net  Thu Jan 28 14:54:21 2021
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 28 Jan 2021 23:54:21 +0100
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CACmBxytznphhxA+Y14yNOuoTWZiT-j4-Jfgc6iiwfJVXHAARNg@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
 <CADPhZXyXcdEKzyMZph8w-f1XcgyYeK5M5zZhWObCA_1U1-AEew@mail.gmail.com>
 <CACALY+RNo44VTLAhAhDJqPtErBhyPY7Ns07MrCGQ9GsaGxJT-A@mail.gmail.com>
 <AB9B2B25-7413-4C15-873F-10CAEA1127C7@hobu.co>
 <CACmBxytznphhxA+Y14yNOuoTWZiT-j4-Jfgc6iiwfJVXHAARNg@mail.gmail.com>
Message-ID: <CABUeae-vc27FFw1ei7b5sRTqmh07rcRVZ_wZbLUXq97_xcG5Xw@mail.gmail.com>

+1 for RFC

Mateusz Loskot, mateusz at loskot.net
(Sent from mobile, may suffer from top-posting)

On Thu, 28 Jan 2021, 23:35 Kurt Schwehr, <schwehr at gmail.com> wrote:

> +1 for RFCs for new drivers.
>
> I took a couple minute run at what a template for the RFC might look
> like.  It's painfully rough.  Anyone wanting to edit the doc, let me know
> off list and I'll give you edit priv.  Or make you own.  You are welcome to
> take any or none of my draft text if you make your attempt at a template
> for a New Driver RFC.  Should there even be a template?
>
>
> https://docs.google.com/document/d/e/2PACX-1vTtIU3WJw0APd7fXqfGVAYrBQGgURIzizb9MiXCI1trkj4PxOBZmz9o-Ne_5P7zkymM7dPjVZOCHBXl/pub
>
> On Thu, Jan 28, 2021 at 1:37 PM Howard Butler <howard at hobu.co> wrote:
>
>> I am also supportive of RFC approvals before someone goes and invests the
>> time to develop a driver. Otherwise it is easy to get in the spot where
>> it's not merged because the community didn't want it included. A nice thing
>> the RFC process would ensure is a full document of the expectations of the
>> driver. Specifically, whether it depends on binary-only SDKs, what features
>> it would support, and *who* is on the hook for responding to issues on it.
>> Another feature of this RFC should be to clarify the deprecation and
>> removal process for drivers that are no longer relevant or no longer have
>> someone providing them attention.
>>
>>
>> On Jan 28, 2021, at 1:33 PM, Tamas Szekeres <szekerest at gmail.com> wrote:
>>
>> Hi Sean,
>>
>> I would also be supportive to formalize the driver submission process.
>>
>> Best regards,
>>
>> Tamas
>>
>>
>> Sean Gillies <sean at mapbox.com> ezt ?rta (id?pont: 2021. jan. 28., Cs,
>> 17:39):
>>
>>> Hi Tamas,
>>>
>>> Are you suggesting that a RFC be required for a new driver? I would
>>> support this 100%.
>>>
>>> On Wed, Jan 27, 2021 at 2:17 PM Tamas Szekeres <szekerest at gmail.com>
>>> wrote:
>>>
>>>> David,
>>>>
>>>> Up to this time the driver writers were highly welcomed to author new
>>>> drivers for the project and these effort didn't require a separate RFC in
>>>> terms of the Project Management Committee Guidelines
>>>> <https://gdal.org/development/rfc/rfc1_pmc.html> document. Adding new
>>>> drivers hasn't been considered to be substantial changes or something that
>>>> causes to change the API or brings in backwards incompatibility issues.
>>>> However in a real deployment situation the drivers may cause issues for
>>>> the developers, end users and package maintainers from several aspects like
>>>> so:
>>>>
>>>> 1. The drivers may depend on external libraries and we don't want to
>>>> link against those libraries in all cases.
>>>> 2. The external libraries may cause license incompatibilities, ie
>>>> linking against that may change the license terms of the overall project.
>>>> 3. Not all of the drivers are required in a particular solution (that
>>>> applies to the built in drivers, too). In a real situation the application
>>>> may use only a limited set of drivers and the existence of the unwanted
>>>> drivers may cause some performance degradation.
>>>> 4. Implementing custom compilations (and omitting unwanted drivers from
>>>> the build) may be problematic for most of the users or projects utilizing
>>>> gdal as a sub-project.
>>>>
>>>> In my opinion, the current solution of incubating new drivers is fairly
>>>> minimalistic, we might probably want to know what kind of format is being
>>>> addressed, who is the audience, how amount of user might be of interest,
>>>> how the licensing of the dependent project is looking like, is the
>>>> dependent project (if any) maintained well enough and can be compiled to
>>>> each supported platforms etc.
>>>>
>>>> But replying to the question, I think you shoud continue the effort,
>>>> but consider to implement a plugin build for that. There are several
>>>> existing drivers are compiled as plugins at the moment, so it should not be
>>>> so difficult.
>>>>
>>>>
>>>> Best regards,
>>>>
>>>> Tamas
>>>>
>>>>
>>>> David Brochart <david.brochart at gmail.com> ezt ?rta (id?pont: 2021.
>>>> jan. 27., Sze, 15:29):
>>>>
>>>>> I am currently trying to add a Zarr driver to GDAL (see
>>>>> https://github.com/OSGeo/gdal/pull/3411), but from what I can see the
>>>>> trend is to remove drivers, so I'm now wondering it I should pursue this
>>>>> effort. I'm relatively new to GDAL, but from my point of view supporting a
>>>>> lot of formats is part of GDAL's success, so maybe the real focus should be
>>>>> on implementing a plugin mechanism that would allow driver development
>>>>> independently from core GDAL. Again, I might not have enough background to
>>>>> give valuable feedback.
>>>>>
>>>>> Regards,
>>>>>
>>>>> David.
>>>>>
>>>>> On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort <
>>>>> thomas.bonfort at gmail.com> wrote:
>>>>>
>>>>>>
>>>>>>
>>>>>> On Tue, Jan 12, 2021 at 11:36 PM Even Rouault <
>>>>>> even.rouault at spatialys.com> wrote:
>>>>>>
>>>>>>>
>>>>>>> The issue with esoteric/legacy drivers is not that much maintenance
>>>>>>> of the
>>>>>>> actual code of the drivers, in the sense of dealing with bug
>>>>>>> reports,
>>>>>>> questions, etc. (pretty sure they are none for the ones I listed).
>>>>>>> Most of
>>>>>>> them must work reasonably well and be feature complete, and most
>>>>>>> vulnerabilities have now been fixed. My concern is that this legacy
>>>>>>> code has
>>>>>>> indirect costs on other GDAL developers and users. The psychological
>>>>>>> cost I
>>>>>>> mentionned. Let's say someone want to turn on higher warning levels,
>>>>>>> and that
>>>>>>> this breaks in tens of drivers. Would he have to ping every
>>>>>>> maintainer and
>>>>>>> wait for them to address the issue ? Or maybe he will just give up.
>>>>>>> Similarly
>>>>>>> for breaking changes in the driver API. As Sean mentionned, this is
>>>>>>> probably a
>>>>>>> serious obstacle to growing up the core development team.
>>>>>>>
>>>>>>
>>>>>> Given that we have a relatively easy way to disable individual
>>>>>> drivers at compile time, could we expand on this mechanism to mark
>>>>>> problematic drivers as "orphaned" in this case? The code would still live
>>>>>> in the repo but would be effectively disabled until someone with sufficient
>>>>>> interest invests the time/money to update the problematic code and
>>>>>> re-enable it.
>>>>>> This will of course create some overhead to keep track of which
>>>>>> drivers have been orphaned from one release to the next, create github
>>>>>> issues/labels to list which drivers need work to be re-enabled, etc... But
>>>>>> it shifts the burden of maintaining the codebase of 250 drivers from the
>>>>>> core team over to the people/companies who actually need them. I'd be
>>>>>> willing to contribute the scripts that could ease the process of
>>>>>> orphaning/reintegrating a specific driver.
>>>>>>
>>>>>> Regards,
>>>>>> Thomas
>>>>>>
>>>>>
>>> --
>>> Sean Gillies
>>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210128/4991a482/attachment.html>

From jmckenna at gatewaygeomatics.com  Thu Jan 28 18:13:43 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 28 Jan 2021 22:13:43 -0400
Subject: [gdal-dev] Considering drivers removal ?
In-Reply-To: <CABUeae-vc27FFw1ei7b5sRTqmh07rcRVZ_wZbLUXq97_xcG5Xw@mail.gmail.com>
References: <3167316.Bsjxy4uaUB@even-i700>
 <FAC564FE-E838-44A0-9D0A-DFBE77426813@hobu.co>
 <CA+YzLBesO-Dh3nauC9vtLZjuiFT+6K9aC2Qx2nGswHraybOJUg@mail.gmail.com>
 <5660672.59c2uHP61a@even-i700>
 <CAOM3y2jX5igWZu7=w8ZnOSD5U+xVD0V2DZqsX_7hqtJBvrGdrQ@mail.gmail.com>
 <CAEv-cC7pGdWwc7K-H1nSqj-6fQG2JXgGw+5nn1rNSvPpvRdwsg@mail.gmail.com>
 <CACALY+R0bHY+5FMc9nnX_sF3QJWZ816tHUA++C3-Z_uXzWD_xw@mail.gmail.com>
 <CADPhZXyXcdEKzyMZph8w-f1XcgyYeK5M5zZhWObCA_1U1-AEew@mail.gmail.com>
 <CACALY+RNo44VTLAhAhDJqPtErBhyPY7Ns07MrCGQ9GsaGxJT-A@mail.gmail.com>
 <AB9B2B25-7413-4C15-873F-10CAEA1127C7@hobu.co>
 <CACmBxytznphhxA+Y14yNOuoTWZiT-j4-Jfgc6iiwfJVXHAARNg@mail.gmail.com>
 <CABUeae-vc27FFw1ei7b5sRTqmh07rcRVZ_wZbLUXq97_xcG5Xw@mail.gmail.com>
Message-ID: <ff075c70-e21e-7332-7e36-fc1eb351c9b5@gatewaygeomatics.com>

I'm also always surprised at how closely users follow the RFCs, what's 
coming down the pipe, and the logic behind 'why' a driver or change was 
implemented - this is always missing from regular 'official' user docs, 
but users like to know why.

+1 for RFCs

-jeff



On 2021-01-28 6:54 p.m., Mateusz Loskot wrote:
> +1 for RFC
> 
> Mateusz Loskot, mateusz at loskot.net <mailto:mateusz at loskot.net>
> (Sent from mobile, may suffer from top-posting)
> 
> On Thu, 28 Jan 2021, 23:35 Kurt Schwehr, <schwehr at gmail.com 
> <mailto:schwehr at gmail.com>> wrote:
> 
>     +1 for RFCs for new drivers.
> 
>     I took a couple minute run at what a template for the RFC might look
>     like.? It's painfully rough.? Anyone wanting to edit the doc, let me
>     know off list and I'll give you edit priv.? Or make you own.? You
>     are welcome to take any or none of my draft text if you make your
>     attempt at a template for a New Driver RFC.? Should there even be a
>     template?
> 
>     https://docs.google.com/document/d/e/2PACX-1vTtIU3WJw0APd7fXqfGVAYrBQGgURIzizb9MiXCI1trkj4PxOBZmz9o-Ne_5P7zkymM7dPjVZOCHBXl/pub
>     <https://docs.google.com/document/d/e/2PACX-1vTtIU3WJw0APd7fXqfGVAYrBQGgURIzizb9MiXCI1trkj4PxOBZmz9o-Ne_5P7zkymM7dPjVZOCHBXl/pub>
> 
>     On Thu, Jan 28, 2021 at 1:37 PM Howard Butler <howard at hobu.co
>     <mailto:howard at hobu.co>> wrote:
> 
>         I am also supportive of RFC approvals before someone goes and
>         invests the time to develop a driver. Otherwise it is easy to
>         get in the spot where it's not merged because the community
>         didn't want it included. A nice thing the RFC process would
>         ensure is a full document of the expectations of the driver.
>         Specifically, whether it depends on binary-only SDKs, what
>         features it would support, and *who* is on the hook for
>         responding to issues on it. Another feature of this RFC should
>         be to clarify the deprecation and removal process for drivers
>         that are no longer relevant or no longer have someone providing
>         them attention.
> 
> 
>>         On Jan 28, 2021, at 1:33 PM, Tamas Szekeres
>>         <szekerest at gmail.com <mailto:szekerest at gmail.com>> wrote:
>>
>>         Hi Sean,
>>
>>         I would also be supportive to formalize the driver submission
>>         process.
>>
>>         Best regards,
>>
>>         Tamas
>>
>>
>>         Sean Gillies <sean at mapbox.com <mailto:sean at mapbox.com>> ezt
>>         ?rta (id?pont: 2021. jan. 28., Cs, 17:39):
>>
>>             Hi Tamas,
>>
>>             Are you suggesting that a RFC be required for a new
>>             driver? I would support this 100%.
>>
>>             On Wed, Jan 27, 2021 at 2:17 PM Tamas Szekeres
>>             <szekerest at gmail.com <mailto:szekerest at gmail.com>> wrote:
>>
>>                 David,
>>
>>                 Up to this time the driver writers were highly
>>                 welcomed to author new drivers for the project and
>>                 these effort didn't require a separate RFC in terms of
>>                 the Project Management Committee Guidelines
>>                 <https://gdal.org/development/rfc/rfc1_pmc.html>?document.
>>                 Adding new drivers hasn't been considered to be
>>                 substantial changes or something that causes to change
>>                 the API or brings in backwards incompatibility issues.
>>                 However in a real deployment situation the drivers may
>>                 cause issues for the developers, end users and package
>>                 maintainers from several aspects like so:
>>
>>                 1. The drivers may depend on external libraries and we
>>                 don't want to link against those libraries in all cases.
>>                 2. The external libraries may cause license
>>                 incompatibilities, ie linking against that may change
>>                 the license terms of the overall project.
>>                 3. Not all of the drivers are required in a particular
>>                 solution (that applies to the built in drivers, too).
>>                 In a real situation the application may use only a
>>                 limited set of drivers and the existence of the
>>                 unwanted drivers may cause some performance degradation.
>>                 4. Implementing custom compilations (and omitting
>>                 unwanted drivers from the build) may be problematic
>>                 for most of the users or projects utilizing gdal as a
>>                 sub-project.
>>
>>                 In my opinion, the current solution of incubating new
>>                 drivers is fairly minimalistic, we might probably want
>>                 to know what kind of format is being addressed, who is
>>                 the audience, how amount of user might be of interest,
>>                 how the licensing of the dependent project is looking
>>                 like, is the dependent project (if any) maintained
>>                 well enough and can be compiled to each supported
>>                 platforms etc.
>>
>>                 But replying to the question, I think you shoud
>>                 continue the effort, but consider to implement a
>>                 plugin build for that. There are several existing
>>                 drivers are compiled as plugins at the moment, so it
>>                 should not be so difficult.
>>
>>
>>                 Best regards,
>>
>>                 Tamas
>>
>>
>>                 David Brochart <david.brochart at gmail.com
>>                 <mailto:david.brochart at gmail.com>> ezt ?rta (id?pont:
>>                 2021. jan. 27., Sze, 15:29):
>>
>>                     I am currently trying to add a Zarr driver to GDAL
>>                     (see https://github.com/OSGeo/gdal/pull/3411
>>                     <https://github.com/OSGeo/gdal/pull/3411>), but
>>                     from what I can see the trend is to remove
>>                     drivers, so I'm now wondering it I should pursue
>>                     this effort. I'm relatively new to GDAL, but from
>>                     my point?of view supporting a lot of formats is
>>                     part of GDAL's success, so maybe the real focus
>>                     should be on implementing a plugin mechanism that
>>                     would allow driver development independently from
>>                     core GDAL. Again, I might not have enough
>>                     background to give valuable feedback.
>>
>>                     Regards,
>>
>>                     David.
>>
>>                     On Wed, Jan 27, 2021 at 12:34 PM thomas bonfort
>>                     <thomas.bonfort at gmail.com
>>                     <mailto:thomas.bonfort at gmail.com>> wrote:
>>
>>
>>
>>                         On Tue, Jan 12, 2021 at 11:36 PM Even Rouault
>>                         <even.rouault at spatialys.com
>>                         <mailto:even.rouault at spatialys.com>> wrote:
>>
>>
>>                             The issue with esoteric/legacy drivers is
>>                             not that much maintenance of the
>>                             actual code of the drivers, in the sense
>>                             of dealing with bug reports,
>>                             questions, etc. (pretty sure they are none
>>                             for the ones I listed). Most of
>>                             them must work reasonably well and be
>>                             feature complete, and most
>>                             vulnerabilities have now been fixed. My
>>                             concern is that this legacy code has
>>                             indirect costs on other GDAL developers
>>                             and users. The psychological cost I
>>                             mentionned. Let's say someone want to turn
>>                             on higher warning levels, and that
>>                             this breaks in tens of drivers. Would he
>>                             have to ping every maintainer and
>>                             wait for them to address the issue ? Or
>>                             maybe he will just give up. Similarly
>>                             for breaking changes in the driver API. As
>>                             Sean mentionned, this is probably a
>>                             serious obstacle to growing up the core
>>                             development team.
>>
>>
>>                         Given that we have a relatively easy way to
>>                         disable individual drivers at compile time,
>>                         could we expand on this mechanism to mark
>>                         problematic drivers as "orphaned" in this
>>                         case? The code would still live in the repo
>>                         but would be effectively disabled until
>>                         someone with sufficient interest invests the
>>                         time/money to update the problematic code and
>>                         re-enable it.
>>                         This will of course create some overhead to
>>                         keep track of which drivers have been
>>                         orphaned?from one release to the next, create
>>                         github issues/labels to list which drivers
>>                         need work to be re-enabled, etc... But it
>>                         shifts the burden of maintaining the codebase
>>                         of 250 drivers from the core team over to the
>>                         people/companies who actually need them. I'd
>>                         be willing to contribute the scripts that
>>                         could ease the process of
>>                         orphaning/reintegrating a specific driver.
>>
>>                         Regards,
>>                         Thomas
>>
>>
>>             -- 
>>             Sean Gillies
>>
>>         _______________________________________________
>>         gdal-dev mailing list
>>         gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>         <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
> 
>         _______________________________________________
>         gdal-dev mailing list
>         gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>         <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
> 
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>     <https://lists.osgeo.org/mailman/listinfo/gdal-dev>
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 


-- 
Jeff McKenna
GatewayGeo: MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/

From khoslaygr26 at gmail.com  Fri Jan 29 03:43:30 2021
From: khoslaygr26 at gmail.com (Kunal Khosla)
Date: Fri, 29 Jan 2021 11:43:30 +0000
Subject: [gdal-dev] Regarding GDALWarp command
Message-ID: <CAGLwoU3OTzoco6ULELOpyN-JXwee6ckj8wfg+G-A_Y+KyeFe5w@mail.gmail.com>

Hi,

I am developing a programme in C++ which calls GDAL libraries and then uses
the GDALWarp function to output a .tif file. I am linking my programme to a
gdal_i.lib library and my dll files are placed in the PATH environment
variable.

The programme builds correctly, but while executing the same I am getting a
runtime error at GDALWarp and it says the unable to read from gdal301.dll
file.

Any help will be highly appreciated.

Regards
Kunal Khosla
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210129/03d633a5/attachment.html>

From j1 at jimenezshaw.com  Fri Jan 29 09:05:09 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 29 Jan 2021 18:05:09 +0100
Subject: [gdal-dev] validate_cloud_optimized_geotiff.py returns invalid
Message-ID: <CADRrdKvFB=3LuWJgvhcjSSBRE-kvPsmrB0qTN1WFFJrHgVF+bg@mail.gmail.com>

Hi all

I am generating a COG file with GDAL 3.2.0 (compiled in my Ubunut 18.04) in
C++
Nothing strange, just

GDALDriver* driver = GetGDALDriverManager()->GetDriverByName("COG");
driver->CreateCopy(dst.c_str(), srcDataset, true, ...);

where srcDataset is just another geotiff I opened in read mode.

Later, I run the python script to validate, and returns this:

./gdal/swig/python/samples/validate_cloud_optimized_geotiff.py
img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff
img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff is NOT a valid
cloud optimized GeoTIFF.
The following errors were found:
 - The offset of the main IFD should be 226. It is 26010218 instead
 - The offset of the IFD for overview of index 0 is 4016, whereas it should
be greater than the one of the main image, which is at byte 26010218

Am I doing something wrong?

Thank you
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210129/ce1f867e/attachment.html>

From patrick.mckendree.young at gmail.com  Fri Jan 29 13:34:55 2021
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Fri, 29 Jan 2021 14:34:55 -0700
Subject: [gdal-dev] validate_cloud_optimized_geotiff.py returns invalid
In-Reply-To: <CADRrdKvFB=3LuWJgvhcjSSBRE-kvPsmrB0qTN1WFFJrHgVF+bg@mail.gmail.com>
References: <CADRrdKvFB=3LuWJgvhcjSSBRE-kvPsmrB0qTN1WFFJrHgVF+bg@mail.gmail.com>
Message-ID: <CADXYQQ5NfMqEUQjMPMQKSzNm2eKaTKbMFNxhrKds1nGRzkxfRA@mail.gmail.com>

What happens if you run it through "gdalwarp -of COG in.tif out.tif"?

On Fri, Jan 29, 2021 at 10:05 AM Javier Jimenez Shaw <j1 at jimenezshaw.com>
wrote:

> Hi all
>
> I am generating a COG file with GDAL 3.2.0 (compiled in my Ubunut 18.04)
> in C++
> Nothing strange, just
>
> GDALDriver* driver = GetGDALDriverManager()->GetDriverByName("COG");
> driver->CreateCopy(dst.c_str(), srcDataset, true, ...);
>
> where srcDataset is just another geotiff I opened in read mode.
>
> Later, I run the python script to validate, and returns this:
>
> ./gdal/swig/python/samples/validate_cloud_optimized_geotiff.py
> img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff
> img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff is NOT a valid
> cloud optimized GeoTIFF.
> The following errors were found:
>  - The offset of the main IFD should be 226. It is 26010218 instead
>  - The offset of the IFD for overview of index 0 is 4016, whereas it
> should be greater than the one of the main image, which is at byte 26010218
>
> Am I doing something wrong?
>
> Thank you
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210129/ddb88175/attachment.html>

From patrick.mckendree.young at gmail.com  Fri Jan 29 13:35:23 2021
From: patrick.mckendree.young at gmail.com (Patrick Young)
Date: Fri, 29 Jan 2021 14:35:23 -0700
Subject: [gdal-dev] validate_cloud_optimized_geotiff.py returns invalid
In-Reply-To: <CADXYQQ5NfMqEUQjMPMQKSzNm2eKaTKbMFNxhrKds1nGRzkxfRA@mail.gmail.com>
References: <CADRrdKvFB=3LuWJgvhcjSSBRE-kvPsmrB0qTN1WFFJrHgVF+bg@mail.gmail.com>
 <CADXYQQ5NfMqEUQjMPMQKSzNm2eKaTKbMFNxhrKds1nGRzkxfRA@mail.gmail.com>
Message-ID: <CADXYQQ567LALv7fc1hxKb1pGC6s_uBbeHtRkLhw=gkB4qGv4TQ@mail.gmail.com>

Sorry gdal_translate!

On Fri, Jan 29, 2021 at 2:34 PM Patrick Young <
patrick.mckendree.young at gmail.com> wrote:

> What happens if you run it through "gdalwarp -of COG in.tif out.tif"?
>
> On Fri, Jan 29, 2021 at 10:05 AM Javier Jimenez Shaw <j1 at jimenezshaw.com>
> wrote:
>
>> Hi all
>>
>> I am generating a COG file with GDAL 3.2.0 (compiled in my Ubunut 18.04)
>> in C++
>> Nothing strange, just
>>
>> GDALDriver* driver = GetGDALDriverManager()->GetDriverByName("COG");
>> driver->CreateCopy(dst.c_str(), srcDataset, true, ...);
>>
>> where srcDataset is just another geotiff I opened in read mode.
>>
>> Later, I run the python script to validate, and returns this:
>>
>> ./gdal/swig/python/samples/validate_cloud_optimized_geotiff.py
>> img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff
>> img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff is NOT a valid
>> cloud optimized GeoTIFF.
>> The following errors were found:
>>  - The offset of the main IFD should be 226. It is 26010218 instead
>>  - The offset of the IFD for overview of index 0 is 4016, whereas it
>> should be greater than the one of the main image, which is at byte 26010218
>>
>> Am I doing something wrong?
>>
>> Thank you
>> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>> Entre dos pensamientos racionales
>> hay infinitos pensamientos irracionales.
>>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210129/5e0d6705/attachment.html>

From j1 at jimenezshaw.com  Fri Jan 29 14:44:35 2021
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 29 Jan 2021 23:44:35 +0100
Subject: [gdal-dev] validate_cloud_optimized_geotiff.py returns invalid
In-Reply-To: <CADXYQQ567LALv7fc1hxKb1pGC6s_uBbeHtRkLhw=gkB4qGv4TQ@mail.gmail.com>
References: <CADRrdKvFB=3LuWJgvhcjSSBRE-kvPsmrB0qTN1WFFJrHgVF+bg@mail.gmail.com>
 <CADXYQQ5NfMqEUQjMPMQKSzNm2eKaTKbMFNxhrKds1nGRzkxfRA@mail.gmail.com>
 <CADXYQQ567LALv7fc1hxKb1pGC6s_uBbeHtRkLhw=gkB4qGv4TQ@mail.gmail.com>
Message-ID: <CADRrdKvqjm0naKb0xgQcJNHc45ecFCuFbd1i92bct_hcVJikrw@mail.gmail.com>

Thanks for the tip. It works with gdal_translate. There was a mistake in my
side.

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Fri, 29 Jan 2021 at 22:35, Patrick Young <
patrick.mckendree.young at gmail.com> wrote:

> Sorry gdal_translate!
>
> On Fri, Jan 29, 2021 at 2:34 PM Patrick Young <
> patrick.mckendree.young at gmail.com> wrote:
>
>> What happens if you run it through "gdalwarp -of COG in.tif out.tif"?
>>
>> On Fri, Jan 29, 2021 at 10:05 AM Javier Jimenez Shaw <j1 at jimenezshaw.com>
>> wrote:
>>
>>> Hi all
>>>
>>> I am generating a COG file with GDAL 3.2.0 (compiled in my Ubunut 18.04)
>>> in C++
>>> Nothing strange, just
>>>
>>> GDALDriver* driver = GetGDALDriverManager()->GetDriverByName("COG");
>>> driver->CreateCopy(dst.c_str(), srcDataset, true, ...);
>>>
>>> where srcDataset is just another geotiff I opened in read mode.
>>>
>>> Later, I run the python script to validate, and returns this:
>>>
>>> ./gdal/swig/python/samples/validate_cloud_optimized_geotiff.py
>>> img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff
>>> img_2962c146-95ec-4976-a33a-a83a8e659f88.tifcog.jpg.tiff is NOT a valid
>>> cloud optimized GeoTIFF.
>>> The following errors were found:
>>>  - The offset of the main IFD should be 226. It is 26010218 instead
>>>  - The offset of the IFD for overview of index 0 is 4016, whereas it
>>> should be greater than the one of the main image, which is at byte 26010218
>>>
>>> Am I doing something wrong?
>>>
>>> Thank you
>>> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
>>> Entre dos pensamientos racionales
>>> hay infinitos pensamientos irracionales.
>>>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20210129/d509217e/attachment.html>

