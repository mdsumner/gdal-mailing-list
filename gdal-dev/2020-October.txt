From aborruso at gmail.com  Thu Oct  1 07:32:02 2020
From: aborruso at gmail.com (aborruso)
Date: Thu, 1 Oct 2020 07:32:02 -0700 (MST)
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <1601500021654-0.post@n6.nabble.com>
References: <1601474200522-0.post@n6.nabble.com>
 <1601475489037-0.post@n6.nabble.com> <1601482884513-0.post@n6.nabble.com>
 <1601500021654-0.post@n6.nabble.com>
Message-ID: <1601562722972-0.post@n6.nabble.com>

Hi,
if I run

ogrinfo -ro -al
"http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid+%3D+objectid&outfields=*&f=geojson"
-oo FEATURE_SERVER_PAGING=YES

I have only 1000 items.

Is it the same for you Jukka ?

Thank you

Warning 1: GDAL was built against curl 7.70.0, but is running against
7.68.0. Runtime failure is likely !
INFO: Open of
`http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid+%3D+objectid&outfields=*&f=geojson'
      using driver `GeoJSON' successful.

Layer name: file
Geometry: Polygon
Feature Count: 1000
Extent: (13.076989, 36.778145) - (15.266503, 38.143372)
Layer SRS WKT:
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0,
        AUTHORITY["EPSG","8901"]],
    UNIT["degree",0.0174532925199433,
        AUTHORITY["EPSG","9122"]],
    AUTHORITY["EPSG","4326"]]
OBJECTID: Integer (0.0)
fk_dfcnsiincd_id: Integer (0.0)
persupincd: Real (0.0)
addinfo: Integer (0.0)
dateivf: Integer64 (0.0)
fk_ctcacapart_id: Integer (0.0)
foglio: String (0.0)
part: String (0.0)
fk_smlocktable_id: String (0.0)
fk_smopermetadata_id: Integer (0.0)
lotto: String (0.0)
acqscale: Integer (0.0)
code: String (0.0)
geometry_Length: Real (0.0)
geometry_Area: Real (0.0)




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From andrew at aitchison.me.uk  Thu Oct  1 07:57:45 2020
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 1 Oct 2020 15:57:45 +0100 (BST)
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <1601562722972-0.post@n6.nabble.com>
References: <1601474200522-0.post@n6.nabble.com>
 <1601475489037-0.post@n6.nabble.com> <1601482884513-0.post@n6.nabble.com>
 <1601500021654-0.post@n6.nabble.com> <1601562722972-0.post@n6.nabble.com>
Message-ID: <alpine.DEB.2.23.453.2010011555040.390451@warden.aitchison.me.uk>

On Thu, 1 Oct 2020, aborruso wrote:

> Hi,
> if I run
>
> ogrinfo -ro -al
> "http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid+%3D+objectid&outfields=*&f=geojson"
> -oo FEATURE_SERVER_PAGING=YES
>
> I have only 1000 items.

On Ubunmto 20.04 I also get 1000 items,
with or without "-oo FEATURE_SERVER_PAGING=YES"
and with both GDAL 2.4.4 and 3.1.3.

# md5sum aborruso.geojson
6dacb64fbd18c911781acfa132580f7d  aborruso.geojson

-- 
Andrew C. Aitchison					Kendal, UK
 			andrew at aitchison.me.uk

From jukka.rahkonen at maanmittauslaitos.fi  Thu Oct  1 08:17:15 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 1 Oct 2020 08:17:15 -0700 (MST)
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <1601562722972-0.post@n6.nabble.com>
References: <1601474200522-0.post@n6.nabble.com>
 <1601475489037-0.post@n6.nabble.com> <1601482884513-0.post@n6.nabble.com>
 <1601500021654-0.post@n6.nabble.com> <1601562722972-0.post@n6.nabble.com>
Message-ID: <1601565435428-0.post@n6.nabble.com>

Hi,

Yes, the result with ogrinfo is the same but probably it is not the right
tool for testing the paging. With paging GDAL is fetching the first page,
puts it somewhere, asks more pages, and finally builds a combined dataset as
a result. If you let GDAL to do its job and check how it went your should
see bigger feature count.

ogr2ogr out.geojson -f GEOJson
"http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson"
-oo FEATURE_SERVER_PAGING=YES --debug on

Maybe ogrinfo should also collect all the data into temporary storage first.

-Jukka-


aborruso wrote
> Hi,
> if I run
> 
> ogrinfo -ro -al
> "http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid+%3D+objectid&outfields=*&f=geojson"
> -oo FEATURE_SERVER_PAGING=YES
> 
> I have only 1000 items.
> 
> Is it the same for you Jukka ?





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From julien.osman at csgroup.eu  Thu Oct  1 08:17:41 2020
From: julien.osman at csgroup.eu (Julien Osman)
Date: Thu, 1 Oct 2020 17:17:41 +0200
Subject: [gdal-dev] Using GDALRPCTransform with a pre-loaded DEM
In-Reply-To: <CA+YzLBemS-Sp7GzLOdv7WUgN+hCVzKDxBcStkedkzrO6FLK2iw@mail.gmail.com>
References: <4ce7f348-d2ed-a52c-c445-d4bdcabc6e57@csgroup.eu>
 <CA+YzLBemS-Sp7GzLOdv7WUgN+hCVzKDxBcStkedkzrO6FLK2iw@mail.gmail.com>
Message-ID: <7f67421f-ea3a-74e1-5940-ca29888e6f4d@csgroup.eu>

Dear Frank,

Thank you for this great advice. It seems to be the best options.

Nevertheless, I fail to make it work. I use the SRTM DEM, witch consist
of a bunch of files in a directory. So I load each file in a Dataset,
then I build a VRT file that I store as a memory dataset. Then I provide
this dataset to my RPCTransformer. But it doesn't work, I get "ERROR 4:
No such file or directory". If I try to open the VRT file directly with
GDALOpen, I get the same error. I also tried to open the srtm files
using GDALOpenShared, for the same result.

For example :

  std::vector<GDALDatasetH> vrtDatasetList(2);
  vrtDatasetList[0] = GDALOpenShared("srtm1.hgt", GA_ReadOnly);
  vrtDatasetList[1] = GDALOpenShared("srtm2.hgt", GA_ReadOnly);
  GDALBuildVRT("/vsimem/inmemdem.vrt", 2, vrtDatasetList.data(),
nullptr, nullptr, nullptr);
  GDALDataset* poDS = reinterpret_cast<GDALDataset
*>(GDALOpen("/vsimem/inmemdem.vrt", GA_ReadOnly));

When I run this, poDS is nullptr.

Could you guide me to the correct way to do it?

Best regards.
Julien Osman.


From even.rouault at spatialys.com  Thu Oct  1 08:35:20 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 01 Oct 2020 17:35:20 +0200
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <1601565435428-0.post@n6.nabble.com>
References: <1601474200522-0.post@n6.nabble.com>
 <1601562722972-0.post@n6.nabble.com> <1601565435428-0.post@n6.nabble.com>
Message-ID: <3163355.5lHFT8VQkM@even-i700>

On jeudi 1 octobre 2020 08:17:15 CEST jratike80 wrote:
> Hi,
> 
> Yes, the result with ogrinfo is the same but probably it is not the right
> tool for testing the paging. With paging GDAL is fetching the first page,
> puts it somewhere, asks more pages, and finally builds a combined dataset 
as
> a result. If you let GDAL to do its job and check how it went your should
> see bigger feature count.

There was an issue in the GetFeatureCount() implementation. Now fixed

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201001/27e55fa3/attachment.html>

From even.rouault at spatialys.com  Thu Oct  1 08:36:33 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 01 Oct 2020 17:36:33 +0200
Subject: [gdal-dev] Using GDALRPCTransform with a pre-loaded DEM
In-Reply-To: <7f67421f-ea3a-74e1-5940-ca29888e6f4d@csgroup.eu>
References: <4ce7f348-d2ed-a52c-c445-d4bdcabc6e57@csgroup.eu>
 <CA+YzLBemS-Sp7GzLOdv7WUgN+hCVzKDxBcStkedkzrO6FLK2iw@mail.gmail.com>
 <7f67421f-ea3a-74e1-5940-ca29888e6f4d@csgroup.eu>
Message-ID: <1618663.UqxTqrIjVr@even-i700>

On jeudi 1 octobre 2020 17:17:41 CEST Julien Osman wrote:
> Dear Frank,
> 
> Thank you for this great advice. It seems to be the best options.
> 
> Nevertheless, I fail to make it work. I use the SRTM DEM, witch consist
> of a bunch of files in a directory. So I load each file in a Dataset,
> then I build a VRT file that I store as a memory dataset. Then I provide
> this dataset to my RPCTransformer. But it doesn't work, I get "ERROR 4:
> No such file or directory". If I try to open the VRT file directly with
> GDALOpen, I get the same error. I also tried to open the srtm files
> using GDALOpenShared, for the same result.
> 
> For example :
> 
>   std::vector<GDALDatasetH> vrtDatasetList(2);
>   vrtDatasetList[0] = GDALOpenShared("srtm1.hgt", GA_ReadOnly);
>   vrtDatasetList[1] = GDALOpenShared("srtm2.hgt", GA_ReadOnly);
>   GDALBuildVRT("/vsimem/inmemdem.vrt", 2, vrtDatasetList.data(),
> nullptr, nullptr, nullptr);

--> this returns a GDALDatasetH. You need to GDALClose() it before being able to reopen it, 
so that its content gets flushed to storage.

>   GDALDataset* poDS = reinterpret_cast<GDALDataset
> *>(GDALOpen("/vsimem/inmemdem.vrt", GA_ReadOnly));
> 
> When I run this, poDS is nullptr.
> 
> Could you guide me to the correct way to do it?
> 
> Best regards.
> Julien Osman.
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201001/363df356/attachment.html>

From aborruso at gmail.com  Thu Oct  1 08:55:55 2020
From: aborruso at gmail.com (aborruso)
Date: Thu, 1 Oct 2020 08:55:55 -0700 (MST)
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <3163355.5lHFT8VQkM@even-i700>
References: <1601474200522-0.post@n6.nabble.com>
 <1601475489037-0.post@n6.nabble.com> <1601482884513-0.post@n6.nabble.com>
 <1601500021654-0.post@n6.nabble.com> <1601562722972-0.post@n6.nabble.com>
 <1601565435428-0.post@n6.nabble.com> <3163355.5lHFT8VQkM@even-i700>
Message-ID: <1601567755736-0.post@n6.nabble.com>

Hi,
if I run the command below in my "GDAL 2.4.4, released 2020/01/08"

ogr2ogr aout.geojson -f GEOJson
"http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson"
-oo FEATURE_SERVER_PAGING=YES --debug on

I have 1000 geojson items and the below debug messages.

A stupid question sorry: is it normal using GDAL 2.4.4 or should I have all
the items?
Or do I must recompile GDAL 2.4.4?

Thank you to all


GNM: GNMRegisterAllInternal
GNM: RegisterGNMFile
GNM: RegisterGNMdatabase
HTTP:
Fetch(http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson)
HTTP: libcurl/7.68.0 OpenSSL/1.1.1g zlib/1.2.11 brotli/1.0.7 libidn2/2.3.0
libpsl/0.21.0 (+libidn2/2.3.0) libssh2/1.8.0 nghttp2/1.40.0 librtmp/2.3
Warning 1: GDAL was built against curl 7.70.0, but is running against
7.68.0. Runtime failure is likely !
HTTP: These HTTP headers were set: Accept: text/plain, application/json
HTTP:
Fetch(http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson)
HTTP: These HTTP headers were set: Accept: text/plain, application/json
HTTP:
Fetch(http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson)
HTTP: These HTTP headers were set: Accept: text/plain, application/json
CouchDB: GET /_all_dbs
HTTP: Establish persistent session named 'CouchDB:0x565276ca3f40'.
HTTP:
Fetch(http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson/_all_dbs)
HTTP: These POSTFIELDS were sent:
HTTP: These HTTP headers were set: Content-Type: application/json
HTTP: Ended persistent session named 'CouchDB:0x565276ca3f40'.
HTTP:
Fetch(http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson)
GeoJSON: First pass: 100.00 %
GDAL: GDALOpen(/vsimem/http_1/file.dat, this=0x565276daa3b0) succeeds as
GeoJSON.
GDAL:
GDALOpen(http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson,
this=0x565276daa3b0) succeeds as HTTP.
GDAL: GDALDriver::Create(GeoJSON,aout.geojson,0,0,0,Unknown,(nil))
GDALVectorTranslate: 1000 features written in layer 'file'
GDAL:
GDALClose(http://sifweb.regione.sicilia.it/arcgis/rest/services/SIF_INCENDI_EXTENDED/MapServer/13/query?where=objectid>0&outfields=*&f=geojson,
this=0x565276daa3b0)
GDAL: GDALClose(aout.geojson, this=0x565276c8ae20)



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Thu Oct  1 09:46:15 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 01 Oct 2020 18:46:15 +0200
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <1601567755736-0.post@n6.nabble.com>
References: <1601474200522-0.post@n6.nabble.com>
 <3163355.5lHFT8VQkM@even-i700> <1601567755736-0.post@n6.nabble.com>
Message-ID: <8705999.4ioD4SCm8L@even-i700>

> Warning 1: GDAL was built against curl 7.70.0, but is running against
> 7.68.0. Runtime failure is likely !

Warnings are meant to be taken seriously, especially when formulated that 
way!

Your above command works for me on 2.4.4 with a proper build.

You could use a Docker build for example:
https://github.com/OSGeo/gdal/tree/master/gdal/docker

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201001/623ca3c1/attachment.html>

From aborruso at gmail.com  Thu Oct  1 11:04:19 2020
From: aborruso at gmail.com (aborruso)
Date: Thu, 1 Oct 2020 11:04:19 -0700 (MST)
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <8705999.4ioD4SCm8L@even-i700>
References: <1601474200522-0.post@n6.nabble.com>
 <1601475489037-0.post@n6.nabble.com> <1601482884513-0.post@n6.nabble.com>
 <1601500021654-0.post@n6.nabble.com> <1601562722972-0.post@n6.nabble.com>
 <1601565435428-0.post@n6.nabble.com> <3163355.5lHFT8VQkM@even-i700>
 <1601567755736-0.post@n6.nabble.com> <8705999.4ioD4SCm8L@even-i700>
Message-ID: <1601575459842-0.post@n6.nabble.com>

Hi Even,
if you write that it works, it is not necessary for me to verify this using
the gdal docker build.
I'm sure it works.

I have compiled it again using these steps

wget http://download.osgeo.org/gdal/2.4.4/gdal244.zip
unzip gdal244.zip
cd ./gdal-2.4.4
./configure --prefix=/usr/local --with-sqlite3=/usr/local
--with-spatialite=/usr/local --with-static-proj4=/usr/local
--with-geos=/usr/local/bin/geos-config
make
sudo make install

But I have the same curl warning, because I need to correct some curl
problem. But I have no idea on where to start.
Is it useful to uninstall curl and install it again? 
I have Debian GNU/Linux bullseye/sid.

Thank you



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From j1 at jimenezshaw.com  Thu Oct  1 14:19:22 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 1 Oct 2020 23:19:22 +0200
Subject: [gdal-dev] XMP in COG
Message-ID: <CADRrdKsnPuaVAKh7jYhaTUQTLLC7mU5Hf2hEuw-DtvYVMCqdMQ@mail.gmail.com>

Hi

I have seen that XMP is not copied into a COG file when CreateCopy is
called. Actually it is also not done in CreateCopy of GTiff.
Does it make sense to include the copy of this metadata automatically? And
what about other metadata?

Thanks.

Regards
Javier.
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201001/2c64ca7f/attachment.html>

From nik at nikosalexandris.net  Fri Oct  2 03:32:31 2020
From: nik at nikosalexandris.net (Nikos Alexandris)
Date: Fri, 2 Oct 2020 12:32:31 +0200
Subject: [gdal-dev] MOD021KM subdatasets listing identical bands
Message-ID: <20201002103231.k34jff5v6kojnlvc@imap.dreamhost.com>

According to `gdalinfo`, MOD021KM (and MYD021KM for the matter), list
identical bands under two different subdatasets (SDSes).

For example, SDS 3 (see `gdalinfo`'s report on it
https://gitlab.com/thermopolis/public/code/-/snippets/2021406)
and SDS 24 (see `gdalinfo`'s report on it
https://gitlab.com/thermopolis/public/code/-/snippets/2021407),
both contain essentially the same data/bands.

The obvious differences between the two SDSes are the descriptive name
(SDS 3 contains the characteristic, for this product, word 'SWATH') and
the set of ground control points (GCP) (SDS 24 does not list any GCPs
along).

I've search in every related official document I can find on-line about
MOD021KM products. I can't trace anything related to my question so far

(see for example:

- https://ladsweb.modaps.eosdis.nasa.gov/filespec/MODIS/61/MOD021KM
- https://mcst.gsfc.nasa.gov/sites/default/files/file_attachments/M1054E_PUG_2017_0901_V6.2.2_Terra_V6.2.1_Aqua.pdf
- https://mcst.gsfc.nasa.gov/sites/default/files/file_attachments/MODIS_L1B_ATBD_ver8_finalupload.pdf
  (although not the document that would expectedly contain details about
  the subdatasets in MOD02 products)
).

Panoply (https://www.giss.nasa.gov/tools/panoply/), however, contains
only once the set of Emissive bands at 1KM, and the same for the rest of
data (see https://i.imgur.com/llGYVfo.png).

What is the difference between the two SDSes?

Kind regards, Nikos

From even.rouault at spatialys.com  Fri Oct  2 03:58:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 02 Oct 2020 12:58:07 +0200
Subject: [gdal-dev] XMP in COG
In-Reply-To: <CADRrdKsnPuaVAKh7jYhaTUQTLLC7mU5Hf2hEuw-DtvYVMCqdMQ@mail.gmail.com>
References: <CADRrdKsnPuaVAKh7jYhaTUQTLLC7mU5Hf2hEuw-DtvYVMCqdMQ@mail.gmail.com>
Message-ID: <1790087.HOxNqI9doa@even-i700>

On jeudi 1 octobre 2020 23:19:22 CEST Javier Jimenez Shaw wrote:
> Hi
> 
> I have seen that XMP is not copied into a COG file when CreateCopy is
> called. Actually it is also not done in CreateCopy of GTiff.
> Does it make sense to include the copy of this metadata automatically? And
> what about other metadata?

If you want to contribute that, could make sense.
I'd want that gdal_translate to have a new -noxmp flag though. That would cause to go in the 
intermediate VRT code path where XMP isn't currently copied currently: this VRT dataset 
should copy the source XMP, unless -noxmp is specified.

Expected behaviour:
gdal_translate source_with_xmp.tif out.tif  --> XMP copied
gdal_translate source_with_xmp.tif out.tif -srcwin 0 0 1 1  --> XMP copied (I don't think XMP 
captures georeferencing so subsetting shouldn't affect its content, hopefully)
gdal_translate source_with_xmp.tif out.tif -noxmp -->  XMP not copied

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201002/dd35ab59/attachment.html>

From aborruso at gmail.com  Fri Oct  2 05:12:03 2020
From: aborruso at gmail.com (aborruso)
Date: Fri, 2 Oct 2020 05:12:03 -0700 (MST)
Subject: [gdal-dev] How does it work FEATURE_SERVER_PAGING?
In-Reply-To: <1601474200522-0.post@n6.nabble.com>
References: <1601474200522-0.post@n6.nabble.com>
Message-ID: <1601640723235-0.post@n6.nabble.com>

I have solved my curl problem and now it works.

You are a great community, thank you



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From julien.osman at csgroup.eu  Fri Oct  2 06:39:54 2020
From: julien.osman at csgroup.eu (Julien Osman)
Date: Fri, 2 Oct 2020 15:39:54 +0200
Subject: [gdal-dev] Using GDALRPCTransform with a pre-loaded DEM
In-Reply-To: <1618663.UqxTqrIjVr@even-i700>
References: <4ce7f348-d2ed-a52c-c445-d4bdcabc6e57@csgroup.eu>
 <CA+YzLBemS-Sp7GzLOdv7WUgN+hCVzKDxBcStkedkzrO6FLK2iw@mail.gmail.com>
 <7f67421f-ea3a-74e1-5940-ca29888e6f4d@csgroup.eu>
 <1618663.UqxTqrIjVr@even-i700>
Message-ID: <4393620f-6b3d-e62c-226b-ec91482e18bd@csgroup.eu>


 
>
> --> this returns a GDALDatasetH. You need to GDALClose() it before
> being able to reopen it, so that its content gets flushed to storage.
>
Well, I have to say I'm impressed. Everything works smoothly. Thank you
for your help :)

Julien Osman.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201002/90ecddc8/attachment.html>

From kempenep at gmail.com  Fri Oct  2 09:55:22 2020
From: kempenep at gmail.com (Pieter Kempeneers)
Date: Fri, 2 Oct 2020 18:55:22 +0200
Subject: [gdal-dev] rasterize in gdal_alg.h
Message-ID: <CAPa4Yv7t=OSZgm9B45C+dqkESmj2SUX7=0OC-U4BJwojVvLPgw@mail.gmail.com>

I was using GDALRasterizeLayersBuf from gdal_alg.h from the C++ API (on
Linux, version lilbgdal-dev 2.4.0). In the documentation for the different
rasterize functions, it is stated that:

"The output raster may be of any GDAL supported datatype, though currently
internally the burning is done either as GDT_Byte or GDT_Float32. This may
be improved in the future.".

However, after running some tests, it seems to me that it should be either
GDT_Byte or GDT_Float64. Could it be an error in the documentation?

Pieter.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201002/10a2b5ba/attachment.html>

From even.rouault at spatialys.com  Sat Oct  3 05:07:13 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 03 Oct 2020 14:07:13 +0200
Subject: [gdal-dev] rasterize in gdal_alg.h
In-Reply-To: <CAPa4Yv7t=OSZgm9B45C+dqkESmj2SUX7=0OC-U4BJwojVvLPgw@mail.gmail.com>
References: <CAPa4Yv7t=OSZgm9B45C+dqkESmj2SUX7=0OC-U4BJwojVvLPgw@mail.gmail.com>
Message-ID: <3029536.d6O7KaMkhk@even-i700>

On vendredi 2 octobre 2020 18:55:22 CEST Pieter Kempeneers wrote:
> I was using GDALRasterizeLayersBuf from gdal_alg.h from the C++ API (on
> Linux, version lilbgdal-dev 2.4.0). In the documentation for the different
> rasterize functions, it is stated that:
> 
> "The output raster may be of any GDAL supported datatype, though currently
> internally the burning is done either as GDT_Byte or GDT_Float32. This may
> be improved in the future.".
> 
> However, after running some tests, it seems to me that it should be either
> GDT_Byte or GDT_Float64. Could it be an error in the documentation?

Yes was indeed Byte / Float64. This limitation has been removed in GDAL 3.0. I've just 
removed that obsolete mention.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201003/5efb1495/attachment.html>

From momtchil at momtchev.com  Sat Oct  3 09:25:13 2020
From: momtchil at momtchev.com (Momtchil Momtchev)
Date: Sat, 3 Oct 2020 18:25:13 +0200
Subject: [gdal-dev] Thread safety of RasterIO
Message-ID: <4ff36015-4e71-d59b-ce1c-3d0ca0f2e85a@momtchev.com>


Hello,


I am trying to add an async interface to node-gdal (the Node.js bindings 
for GDAL) and I can't find any official statement on the library's 
thread safety. There is an old FAQ on the trac server which states that 
one should not access the same GDALDataset from multiple threads but it 
has a section about GDAL 1.5 and another one about GDAL 2.x, so I guess 
that it is not really up to date.

There is also the RFC 47 that mentions a static global mutex (impacting 
the performance) which makes me think that synchronization is already 
taken care of?

Am I safe calling RasterIO on the same dataset from multiple threads? 
Are there some operations that work and others that do not? From what I 
have encountered so far, simple reading seems to work for me.


-- 
Momtchil Momtchev <momtchil at momtchev.com>


From even.rouault at spatialys.com  Sat Oct  3 09:50:22 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 03 Oct 2020 18:50:22 +0200
Subject: [gdal-dev] Thread safety of RasterIO
In-Reply-To: <4ff36015-4e71-d59b-ce1c-3d0ca0f2e85a@momtchev.com>
References: <4ff36015-4e71-d59b-ce1c-3d0ca0f2e85a@momtchev.com>
Message-ID: <1835847.SxW7y2BzKG@even-i700>

Hi,

> I am trying to add an async interface to node-gdal (the Node.js bindings
> for GDAL) and I can't find any official statement on the library's
> thread safety.

The default for standard C/C++ libraries: you can't use any object/handle concurrently from 
multiple threads, unless it is explicitly mentionned to be safe.

> There is an old FAQ on the trac server which states that
> one should not access the same GDALDataset from multiple threads but it
> has a section about GDAL 1.5 and another one about GDAL 2.x, so I guess
> that it is not really up to date.

Most of what applies to GDAL 2 should still apply in this respect.

> 
> There is also the RFC 47 that mentions a static global mutex (impacting
> the performance) which makes me think that synchronization is already
> taken care of?

RFC 47 was never adopted/implemented. I've modified its title to make it more obvious.

> 
> Am I safe calling RasterIO on the same dataset from multiple threads?

No, you aren't.

> Are there some operations that work and others that do not? From what I
> have encountered so far, simple reading seems to work for me.

You have been just lucky. It could just crash with other drivers, other situations.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201003/45bbb91b/attachment.html>

From andreaerdna at libero.it  Sun Oct  4 12:10:16 2020
From: andreaerdna at libero.it (Andrea Giudiceandrea)
Date: Sun, 4 Oct 2020 12:10:16 -0700 (MST)
Subject: [gdal-dev] OGR fails to open a VRT layer with a remote data
 source if VSI_CACHE=TRUE
In-Reply-To: <1601425023260-0.post@n6.nabble.com>
References: <1601425023260-0.post@n6.nabble.com>
Message-ID: <1601838616709-0.post@n6.nabble.com>

Andrea Giudiceandrea wrote
> Could the issue be caused by a server misconfiguration or not suitable for
> this kind of use, or should it be fixed in GDAL/OGR?

Thank you Even Rouault for fixing the issue in GDAL/OGR, even if it was a
server side bug.


Andrea Giudiceandrea wrote
> Do you think the VSI_CACHE=TRUE 7 years old workaround setting is really
> still required on Windows (OSGeo4W), since in the meantime GDAL/OGR may
> have
> been improved in shapefile reading over network?

Anyway, what do you think about the default setting of VSI_CACHE=TRUE in
OSGeo4W QGIS? Is it really still required?

For reference, see
https://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg18287.html,
https://issues.qgis.org/issues/6448

Best regards.

Andrea Giudiceandrea





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Sun Oct  4 15:22:00 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 05 Oct 2020 00:22:00 +0200
Subject: [gdal-dev] OGR fails to open a VRT layer with a remote data
	source if VSI_CACHE=TRUE
In-Reply-To: <1601838616709-0.post@n6.nabble.com>
References: <1601425023260-0.post@n6.nabble.com>
 <1601838616709-0.post@n6.nabble.com>
Message-ID: <2324962.rBPiSld6co@even-i700>

> Anyway, what do you think about the default setting of VSI_CACHE=TRUE in
> OSGeo4W QGIS? Is it really still required?
> 
> For reference, see
> https://www.mail-archive.com/gdal-dev at lists.osgeo.org/msg18287.html,
> https://issues.qgis.org/issues/6448

Nothing has changed in this regard on GDAL side, so this is probably still 
needed unless something has changed in Windows file share mechanisms 
themselves.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201005/c3e2c030/attachment.html>

From bradh at frogmouth.net  Mon Oct  5 20:36:44 2020
From: bradh at frogmouth.net (Brad Hards)
Date: Tue, 6 Oct 2020 14:36:44 +1100
Subject: [gdal-dev] Handling non-standard character encoding
Message-ID: <01ad01d69b91$e9b08030$bd118090$@frogmouth.net>

While looking at some NITF test data, Ive found a problem in how we handle ECS-A (and ECS) characters. BCS-A (essentially ASCII) is
fine. However MIL-STD-2500C CN2 allows some header fields to be ECS-A, and the test data does this.

Ive also hit TREs with µm, where the µ character is encoded as 0xB5 in ECS-A (UTF-8 would be 0xCE 0xBC) 

 

Id appreciate some guidance on how to best address this. I can see two options  handle it internal to the NITF driver, or
(somehow) modify CPLRecode or iconv to handle this special case. Im currently planning the former.

If something else would be more appropriate, please let me know.

 

Brad

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201006/d2258c46/attachment.html>

From even.rouault at spatialys.com  Tue Oct  6 02:38:14 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 06 Oct 2020 11:38:14 +0200
Subject: [gdal-dev] Handling non-standard character encoding
In-Reply-To: <01ad01d69b91$e9b08030$bd118090$@frogmouth.net>
References: <01ad01d69b91$e9b08030$bd118090$@frogmouth.net>
Message-ID: <7882876.6mCOA2MhQF@even-i700>

On mardi 6 octobre 2020 14:36:44 CEST Brad Hards wrote:
> While looking at some NITF test data, Ive found a problem in how we handle
> ECS-A (and ECS) characters. BCS-A (essentially ASCII) is fine. However
> MIL-STD-2500C CN2 allows some header fields to be ECS-A, and the test data
> does this.
> 
> Ive also hit TREs with µm, where the µ character is encoded as 0xB5 in
> ECS-A (UTF-8 would be 0xCE 0xBC)
> 
> 
> 
> Id appreciate some guidance on how to best address this. I can see two
> options  handle it internal to the NITF driver, or (somehow) modify
> CPLRecode or iconv to handle this special case. Im currently planning the
> former.

Brad,

as I'm not sure we'd have other needs for ECS-A support elsewhere in the codebase, handling 
that in the NITF driver is probably fine

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201006/112f588f/attachment.html>

From Daniel.Evans at jbarisk.com  Tue Oct  6 06:38:06 2020
From: Daniel.Evans at jbarisk.com (Daniel Evans)
Date: Tue, 6 Oct 2020 13:38:06 +0000
Subject: [gdal-dev] GDAL Warp - NUM_THREADS=ALL_CPUS detrimental?
Message-ID: <CWLP123MB2946F06E9B5CDC3C5BE20DA3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>

Hello,

I've found today that when calling gdal.Warp (from Python, though I doubt it matters) with multithreading enabled, setting the option NUM_THREADS=ALL_CPUS results in increased runtime. I find there to be a minimum runtime of ~0.3-0.4s with NUM_THREADS set like this, compared to a runtime of order 0.01-0.03s (measurements aren't particularly accurate) for some tiny test datasets, which is much closer to my expectation.

Is this behaviour expected? It may well be that GDAL has some internal logic to optimise the number of threads, and setting NUM_THREADS=ALL_CPUS is detrimentally overriding that.

I have often seen code examples or guides that suggest setting NUM_THREADS whenever enabling multithreading in GDAL calls. Is this actually poor advice, with GDAL already using the maximum number of available CPUs when it is suitable to do so?

(Runtimes measured in GDAL 3.0.4)

Dr Daniel Evans
Software Developer


[JBA COVID-19 statement]<https://www.jbagroup.co.uk/sites/www.jbagroup.co.uk/files/documents/15-030%20JBA%20Business%20Continuity%20Briefing%20-%20Latest.pdf>

T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png]  [Follow us on Twitter] <https://twitter.com/jbarisk>

Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire, BD23 3FD, Telephone: +441756799919


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201006/46355c60/attachment.html>

From research at arfer.net  Tue Oct  6 06:52:29 2020
From: research at arfer.net (Kodi Arfer)
Date: Tue, 6 Oct 2020 09:52:29 -0400
Subject: [gdal-dev] Reading a DODS file from GrADS Data Server
Message-ID: <64c5def8-fe37-796d-7ddd-5cb9dfb1c21a@arfer.net>

I currently have GDAL 2.2.3. `gdalinfo --formats` includes "DODS -raster- (ro): DAP 3.x servers". However, if I download a small MERRA-2 DODS file from NASA with this OPeNDAP URL

wget 'http://opendap.nccs.nasa.gov/dods/merra2_gmi/tavg1_2d_aer_Nx.dods?pm25[1:3][1:3][1:3]' -O out.dods

then `gdalinfo out.dods` yields "ERROR 4: `out.dods' not recognized as a supported file format." Sadly, this OPeNDAP server software, namely GrADS Data Server, doesn't seem to support any binary output format other than DODS.

Any idea what's going on? Does this work with a newer version of GDAL?

From Daniel.Evans at jbarisk.com  Tue Oct  6 06:54:30 2020
From: Daniel.Evans at jbarisk.com (Daniel Evans)
Date: Tue, 6 Oct 2020 13:54:30 +0000
Subject: [gdal-dev] GDAL Warp - NUM_THREADS=ALL_CPUS detrimental?
In-Reply-To: <CWLP123MB2946F06E9B5CDC3C5BE20DA3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>
References: <CWLP123MB2946F06E9B5CDC3C5BE20DA3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <CWLP123MB2946E85742FF4130A71328F3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>

>From reading the documentation more closely, I notice that NUM_THREADS is a separate bit of functionality from -multithread (which only refers to IO), so any thoughts of load balancing weren't correct.

I suspect GDAL is simply doing exactly as instructed - spawning X threads, even if it won't find work for them. It's therefore up to the user (me!) to measure and work out where the best performance comes from - and blindly throwing in NUM_THREADS=ALL_CPUS is not always a good tactic.

Dr Daniel Evans
Software Developer

From: Daniel Evans
Sent: 06 October 2020 14:38
To: gdal-dev at lists.osgeo.org
Subject: GDAL Warp - NUM_THREADS=ALL_CPUS detrimental?

Hello,

I've found today that when calling gdal.Warp (from Python, though I doubt it matters) with multithreading enabled, setting the option NUM_THREADS=ALL_CPUS results in increased runtime. I find there to be a minimum runtime of ~0.3-0.4s with NUM_THREADS set like this, compared to a runtime of order 0.01-0.03s (measurements aren't particularly accurate) for some tiny test datasets, which is much closer to my expectation.

Is this behaviour expected? It may well be that GDAL has some internal logic to optimise the number of threads, and setting NUM_THREADS=ALL_CPUS is detrimentally overriding that.

I have often seen code examples or guides that suggest setting NUM_THREADS whenever enabling multithreading in GDAL calls. Is this actually poor advice, with GDAL already using the maximum number of available CPUs when it is suitable to do so?

(Runtimes measured in GDAL 3.0.4)

Dr Daniel Evans
Software Developer


[JBA COVID-19 statement]<https://www.jbagroup.co.uk/sites/www.jbagroup.co.uk/files/documents/15-030%20JBA%20Business%20Continuity%20Briefing%20-%20Latest.pdf>

T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png]  [Follow us on Twitter] <https://twitter.com/jbarisk>

Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire, BD23 3FD, Telephone: +441756799919


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201006/ee183ea5/attachment.html>

From even.rouault at spatialys.com  Tue Oct  6 07:12:07 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 06 Oct 2020 16:12:07 +0200
Subject: [gdal-dev] GDAL Warp - NUM_THREADS=ALL_CPUS detrimental?
In-Reply-To: <CWLP123MB2946E85742FF4130A71328F3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>
References: <CWLP123MB2946F06E9B5CDC3C5BE20DA3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>
 <CWLP123MB2946E85742FF4130A71328F3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>
Message-ID: <22279958.nvPHUKySKD@even-i700>

On mardi 6 octobre 2020 13:54:30 CEST Daniel Evans wrote:
> From reading the documentation more closely, I notice that NUM_THREADS is a
> separate bit of functionality from -multithread (which only refers to IO),
> so any thoughts of load balancing weren't correct.
> 
> I suspect GDAL is simply doing exactly as instructed - spawning X threads,
> even if it won't find work for them. It's therefore up to the user (me!) to
> measure and work out where the best performance comes from - and blindly
> throwing in NUM_THREADS=ALL_CPUS is not always a good tactic.

The warper has some logic to avoid spawning threads when it thinks this will not be 
beneficial, but this logic is probably too simplistic. Basically for a given number of output 
pixels to warp, it decides to limit the number of threads to  number_pixels / 65536 , 65536 
being somehow arbitrary (you can actually tune that value with the 
WARP_THREAD_CHUNK_SIZE config option, but this is an internal detail for testing only. 
might be renamed, disappear etc). That is it considers there's no use to spawn a thread if 
there are less than 65536 pixels to warp. This is probably too small. Another factor that might 
come into equation is the initial time to figure out the PROJ coordinate transformation 
pipeline, but the time it might take is quite unpredictable

I'm speaking here about current master behaviour. Didn't check how this was in 3.0.4. This has 
changed a bit "recently"

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201006/220c1095/attachment.html>

From Daniel.Evans at jbarisk.com  Tue Oct  6 07:41:04 2020
From: Daniel.Evans at jbarisk.com (Daniel Evans)
Date: Tue, 6 Oct 2020 14:41:04 +0000
Subject: [gdal-dev] GDAL Warp - NUM_THREADS=ALL_CPUS detrimental?
In-Reply-To: <22279958.nvPHUKySKD@even-i700>
References: <CWLP123MB2946F06E9B5CDC3C5BE20DA3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>
 <CWLP123MB2946E85742FF4130A71328F3950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>
 <22279958.nvPHUKySKD@even-i700>
Message-ID: <CWLP123MB2946D08618653AF1C9FDF768950D0@CWLP123MB2946.GBRP123.PROD.OUTLOOK.COM>

Thanks Even. From a bit of testing, I can see the time scaling linearly with the requested number of threads despite inputting only 9 pixels, so I suspect that feature is newer than 3.0.4. I'll have a look in the changelogs and keep it in mind.

Dr Daniel Evans
Software Developer

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: 06 October 2020 15:12
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL Warp - NUM_THREADS=ALL_CPUS detrimental?


On mardi 6 octobre 2020 13:54:30 CEST Daniel Evans wrote:

> From reading the documentation more closely, I notice that NUM_THREADS is a

> separate bit of functionality from -multithread (which only refers to IO),

> so any thoughts of load balancing weren't correct.

>

> I suspect GDAL is simply doing exactly as instructed - spawning X threads,

> even if it won't find work for them. It's therefore up to the user (me!) to

> measure and work out where the best performance comes from - and blindly

> throwing in NUM_THREADS=ALL_CPUS is not always a good tactic.



The warper has some logic to avoid spawning threads when it thinks this will not be beneficial, but this logic is probably too simplistic. Basically for a given number of output pixels to warp, it decides to limit the number of threads to number_pixels / 65536 , 65536 being somehow arbitrary (you can actually tune that value with the WARP_THREAD_CHUNK_SIZE config option, but this is an internal detail for testing only. might be renamed, disappear etc). That is it considers there's no use to spawn a thread if there are less than 65536 pixels to warp. This is probably too small. Another factor that might come into equation is the initial time to figure out the PROJ coordinate transformation pipeline, but the time it might take is quite unpredictable



I'm speaking here about current master behaviour. Didn't check how this was in 3.0.4. This has changed a bit "recently"



Even



--

Spatialys - Geospatial professional services

http://www.spatialys.com

[JBA COVID-19 statement]<https://www.jbagroup.co.uk/sites/www.jbagroup.co.uk/files/documents/15-030%20JBA%20Business%20Continuity%20Briefing%20-%20Latest.pdf>

T +44 (0) 1756 799919
www.jbarisk.com<http://www.jbarisk.com>

[Visit our website]<http://www.jbarisk.com> [http://www.jbagroup.co.uk/imgstore/JBA-Email-Sig-Icons-LINKEDIN.png]  [Follow us on Twitter] <https://twitter.com/jbarisk>

Find out more about us here: www.jbarisk.com<http://www.jbarisk.com/> and follow us on Twitter @JBARisk<http://twitter.com/JBARisk> and LinkedIn<https://www.linkedin.com/company/2370847?trk=tyah&trkInfo=clickedVertical%3Acompany%2CclickedEntityId%3A2370847%2Cidx%3A2-1-2%2CtarId%3A1447414259786%2Ctas%3AJBA%20RISK%20MANAGEMENT>

The JBA Group supports the JBA Trust.

All JBA Risk Management's email messages contain confidential information and are intended only for the individual(s) named. If you are not the named addressee you should not disseminate, distribute or copy this e-mail.
Please notify the sender immediately by email if you have received this email by mistake and delete this email from your system.


JBA Risk Management Limited is registered in England, company number 07732946, 1 Broughton Park, Old Lane North, Broughton, Skipton, North Yorkshire, BD23 3FD, Telephone: +441756799919


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201006/ba7e2270/attachment-0001.html>

From even.rouault at spatialys.com  Wed Oct  7 03:05:18 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 07 Oct 2020 12:05:18 +0200
Subject: [gdal-dev] 3.2.0 planning
Message-ID: <3688628.I6sUenDdI7@even-i700>

Hi,

As we've decided to try a 6-month cycle for feature releases, this means 3.2.0 at 
beginning of november. 

I see the following steps:
- Oct 19th: feature freeze. Creation of a release/3.2.0 branch, master opened for 
3.3dev
- Oct 26th: cut a 3.2.0 release candidate

Reactions ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201007/2d5ff775/attachment.html>

From jmckenna at gatewaygeomatics.com  Wed Oct  7 04:50:35 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 7 Oct 2020 08:50:35 -0300
Subject: [gdal-dev] 3.2.0 planning
In-Reply-To: <3688628.I6sUenDdI7@even-i700>
References: <3688628.I6sUenDdI7@even-i700>
Message-ID: <0447f7bb-1ba6-268e-4380-e6767e19f57a@gatewaygeomatics.com>

I think that works well, especially as the PROJ 7.2.0 release is planned 
for 1st November.

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/



On 2020-10-07 7:05 a.m., Even Rouault wrote:
> Hi,
> 
> As we've decided to try a 6-month cycle for feature releases, this means 
> 3.2.0 at beginning of november.
> 
> I see the following steps:
> 
> - Oct 19th: feature freeze. Creation of a release/3.2.0 branch, master 
> opened for 3.3dev
> 
> - Oct 26th: cut a 3.2.0 release candidate
> 
> Reactions ?
> 
> Even
> 
> -- 
> 
> Spatialys - Geospatial professional services
> 
> http://www.spatialys.com
> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 


From idan at miara.com  Wed Oct  7 05:33:05 2020
From: idan at miara.com (Idan Miara)
Date: Wed, 7 Oct 2020 15:33:05 +0300
Subject: [gdal-dev] moving swig\python\scripts\* into the osgeo package
Message-ID: <CAEDrt3-qLuc51oe2zzgk6w1otX7QehOeZ6scYvsbt-U-AEDwZA@mail.gmail.com>

Hi all,

I would like to get your opinion about making the code in the python
scripts more reusable so they can be imported as modules.

I'm working on improving gdal_calc.py:
https://github.com/OSGeo/gdal/pull/3016
Eventually I would need to import it as a module, since it's not in a
package it's not possible without copying it into a package.

>From a recent discussion with @Even Rouault <even.rouault at spatialys.com> :
https://github.com/OSGeo/gdal/pull/3016#issuecomment-704563723
The thing is that the scripts in swig/python/scripts are typically
installed in /usr/bin so they must be standalone, or use the content of the
"osgeo" module where the bindings are installed. If you wanted to use
helper methods/scripts, I guess they should go in the "osgeo" module as
well.

We might still need tiny wrapper scripts in swig/python/scripts for
maintaining backwards compatibility.

So I thought a good approach would be making a main function for each
script (as many already do have), For most scripts that was
fairly straightforward*:
https://github.com/OSGeo/gdal/compare/master...talos-gis:python_scripts_organize

* for gdal_retile.py, gdal_merge.py I needed also to replace all the global
variables with local variables so it would be easier to reuse these
functions (apparently I broke some things in  gdal_retile but I'll fix
that).

Then I made the tiny wrappers automatically using an auxiliary script.
https://github.com/OSGeo/gdal/compare/master...talos-gis:python_scripts
So essentially, each wrapper would be like:

from osgeo.gdal import deprecation_warn
deprecation_warn('gdal_calc')
from osgeo.gdal_calc import *
if __name__ == '__main__':
    sys.exit(main(sys.argv))

What do you think?

Idan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201007/f69f6025/attachment.html>

From sean at mapbox.com  Wed Oct  7 07:54:00 2020
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 7 Oct 2020 08:54:00 -0600
Subject: [gdal-dev] moving swig\python\scripts\* into the osgeo package
In-Reply-To: <CAEDrt3-qLuc51oe2zzgk6w1otX7QehOeZ6scYvsbt-U-AEDwZA@mail.gmail.com>
References: <CAEDrt3-qLuc51oe2zzgk6w1otX7QehOeZ6scYvsbt-U-AEDwZA@mail.gmail.com>
Message-ID: <CADPhZXzM5Eekw0JC++AdpyHaSv0jXNGGp6mRxwURF13=bhKV9g@mail.gmail.com>

Hi Idan,

The wrappers are sort of built into Python already. If you declare entry
points for the osgeo.gdal package (see
https://packaging.python.org/specifications/entry-points/) then setuptools
will write the wrappers for you. Here's one as an example. It's defined at
https://github.com/mapbox/rasterio/blob/master/setup.py#L416-L417.

$ cat ~/.local/pipx/venvs/rasterio/bin/rio
#!/home/sean/.local/pipx/venvs/rasterio/bin/python
# -*- coding: utf-8 -*-
import re
import sys
from rasterio.rio.main import main_group
if __name__ == '__main__':
    sys.argv[0] = re.sub(r'(-script\.pyw|\.exe)?$', '', sys.argv[0])
    sys.exit(main_group())



On Wed, Oct 7, 2020 at 6:38 AM Idan Miara <idan at miara.com> wrote:

> Hi all,
>
> I would like to get your opinion about making the code in the python
> scripts more reusable so they can be imported as modules.
>
> I'm working on improving gdal_calc.py:
> https://github.com/OSGeo/gdal/pull/3016
> Eventually I would need to import it as a module, since it's not in a
> package it's not possible without copying it into a package.
>
> From a recent discussion with @Even Rouault <even.rouault at spatialys.com> :
> https://github.com/OSGeo/gdal/pull/3016#issuecomment-704563723
> The thing is that the scripts in swig/python/scripts are typically
> installed in /usr/bin so they must be standalone, or use the content of the
> "osgeo" module where the bindings are installed. If you wanted to use
> helper methods/scripts, I guess they should go in the "osgeo" module as
> well.
>
> We might still need tiny wrapper scripts in swig/python/scripts for
> maintaining backwards compatibility.
>
> So I thought a good approach would be making a main function for each
> script (as many already do have), For most scripts that was
> fairly straightforward*:
>
> https://github.com/OSGeo/gdal/compare/master...talos-gis:python_scripts_organize
>
> * for gdal_retile.py, gdal_merge.py I needed also to replace all the
> global variables with local variables so it would be easier to reuse these
> functions (apparently I broke some things in  gdal_retile but I'll fix
> that).
>
> Then I made the tiny wrappers automatically using an auxiliary script.
> https://github.com/OSGeo/gdal/compare/master...talos-gis:python_scripts
> So essentially, each wrapper would be like:
>
> from osgeo.gdal import deprecation_warn
> deprecation_warn('gdal_calc')
> from osgeo.gdal_calc import *
> if __name__ == '__main__':
>     sys.exit(main(sys.argv))
>
> What do you think?
>
> Idan
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev



-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201007/2b071ec9/attachment.html>

From steve_wealands at essolutions.com.au  Wed Oct  7 18:10:29 2020
From: steve_wealands at essolutions.com.au (srweal)
Date: Wed, 7 Oct 2020 18:10:29 -0700 (MST)
Subject: [gdal-dev] C# - OGR.Feature.GetFieldAsBinary - Unavailable
Message-ID: <1602119429834-0.post@n6.nabble.com>

Hi all,

I'm seeking information about why the GetFieldAsBinary method is missing in
OGR.Feature when accessing data sources using C# binaries (from GIS
Internals). 

I've tried a number of different versions and this is not there.

I'm specifically trying to read binary image data from a FileGDB table of
attachments.

Thanks for any tips, guidance, etc. 

Steve



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From nextstopsun at gmail.com  Thu Oct  8 05:03:54 2020
From: nextstopsun at gmail.com (Next Stop)
Date: Thu, 8 Oct 2020 15:03:54 +0300
Subject: [gdal-dev] Is it possible to use VRTDerivedRasterBand in
	VRTWarpedDataset?
Message-ID: <DBDC73FE-3F5E-4F5F-8D5D-9659A2CD05BD@gmail.com>

Hello,

I have two-band raster dataset, which I need to warp to another CRS, calculate a single band with a pixel function and apply a color lookup table to it, so the result is interpolated RGB color.

The result can be achieved by calling `gdalwarp` then `gdal_calc.py` and then `gdaldem color-relief` with a color LUT. 

But I don't need any intermediate data. So I'm lookig for a way to define the whole workflow in a single VRT. 
Is that possible?


So far I've created a VRTWarpedDataset, but when I try to reduce the number of bands to a single VRTDerivedRasterBand, I get an error:

```
ERROR 5: panDstBands[1] = 2 ... out of range for dataset.
```

When leaving second band, I get 
```
Warning 1: Unable to export color table to GeoTIFF file.  Color tables can only be written to 1 band or 2 bands Byte or UInt16 GeoTIFF files.
```

Also just adding a color table doesn't output 3-band RGB with color interpolation like `gdaldem color-relief`. 
Can such interpolation be set up in VRT?

From momtchil at momtchev.com  Thu Oct  8 08:17:29 2020
From: momtchil at momtchev.com (Momtchil Momtchev)
Date: Thu, 8 Oct 2020 17:17:29 +0200
Subject: [gdal-dev] GDALDatasetDriver->poDriver = NULL
Message-ID: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>


     Hello,


     Is it normal that for this code

int main() {
     GDALAllRegister();
     const char *pszFormat = "GTiff";
     GDALDriver *driver = GetGDALDriverManager()->GetDriverByName(pszFormat);
     if (driver == nullptr) {
         printf("driver is null\n");
         return 1;
     }
     std::string path = "sample.tif";
     GDALAccess access = GA_ReadOnly;
     GDALOpenInfo *open_info = new GDALOpenInfo(path.c_str(), access);
     GDALDataset *ds = driver->pfnOpen(open_info);
     printf("%p\n", ds->GetDriver());
     printf("%s\n", ds->GetDriver()->GetDescription());
}

I get ds->GetDriver = NULL (and a segfault on the following line)? Tried 
on 3.1.2 and 3.1.0


-- 
Momtchil Momtchev <momtchil at momtchev.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201008/255d8700/attachment.html>

From even.rouault at spatialys.com  Thu Oct  8 08:38:03 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 08 Oct 2020 17:38:03 +0200
Subject: [gdal-dev] GDALDatasetDriver->poDriver = NULL
In-Reply-To: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>
References: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>
Message-ID: <1740840.7Ef8zQLyUk@even-i700>

On jeudi 8 octobre 2020 17:17:29 CEST Momtchil Momtchev wrote:
>      Hello,
> 
> 
>      Is it normal that for this code
> 
> int main() {
>      GDALAllRegister();
>      const char *pszFormat = "GTiff";
>      GDALDriver *driver =
> GetGDALDriverManager()->GetDriverByName(pszFormat); if (driver == nullptr)
> {
>          printf("driver is null\n");
>          return 1;
>      }
>      std::string path = "sample.tif";
>      GDALAccess access = GA_ReadOnly;
>      GDALOpenInfo *open_info = new GDALOpenInfo(path.c_str(), access);
>      GDALDataset *ds = driver->pfnOpen(open_info);
>      printf("%p\n", ds->GetDriver());
>      printf("%s\n", ds->GetDriver()->GetDescription());
> }
> 
> I get ds->GetDriver = NULL (and a segfault on the following line)? Tried
> on 3.1.2 and 3.1.0

Yes, you're using an implementation detail when using pfnOpen, that is not supposed to be 
used by user code. You should rather use GDALOpen / GDALOpenEx / GDALDataset::Open 
instead of using directly driver->pfnOpen
Those functions are the ones that set the poDriver member of the GDALDataset

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201008/b822389c/attachment.html>

From mateusz at loskot.net  Thu Oct  8 08:40:57 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 8 Oct 2020 17:40:57 +0200
Subject: [gdal-dev] GDALDatasetDriver->poDriver = NULL
In-Reply-To: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>
References: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>
Message-ID: <CABUeae84BXdZEwW007FDg_-tev+YDgxKh4dN7qaiUSb=3ADDNg@mail.gmail.com>

On Thu, 8 Oct 2020 at 17:17, Momtchil Momtchev <momtchil at momtchev.com> wrote:
>
>     Is it normal that for this code
>
> int main() {
>     GDALAllRegister();
>     const char *pszFormat = "GTiff";
>     GDALDriver *driver = GetGDALDriverManager()->GetDriverByName(pszFormat);
>     if (driver == nullptr) {
>         printf("driver is null\n");
>         return 1;
>     }
>     std::string path = "sample.tif";
>     GDALAccess access = GA_ReadOnly;
>     GDALOpenInfo *open_info = new GDALOpenInfo(path.c_str(), access);
>     GDALDataset *ds = driver->pfnOpen(open_info);
>     printf("%p\n", ds->GetDriver());
>     printf("%s\n", ds->GetDriver()->GetDescription());
> }
>
> I get ds->GetDriver = NULL (and a segfault on the following line)? Tried on 3.1.2 and 3.1.0

Try to open a dataset as presented here

https://gdal.org/tutorials/raster_api_tut.html

Best regards.
-- 
Mateusz Loskot, http://mateusz.loskot.net

From momtchil at momtchev.com  Thu Oct  8 09:16:28 2020
From: momtchil at momtchev.com (Momtchil Momtchev)
Date: Thu, 8 Oct 2020 18:16:28 +0200
Subject: [gdal-dev] GDALDatasetDriver->poDriver = NULL
In-Reply-To: <1740840.7Ef8zQLyUk@even-i700>
References: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>
 <1740840.7Ef8zQLyUk@even-i700>
Message-ID: <ee890d05-4f8d-1228-0358-076fce59ea2d@momtchev.com>

Does a GDALDriver know his own name? GetDescription from GDALMajorObject 
maybe? The problem is that there is a Driver abstraction object in the 
Node.js bindings that supports opening a file through that driver. I 
guess this is the reason the original author used pfnOpen.

On 08/10/2020 17:38, Even Rouault wrote:
>
> Yes, you're using an implementation detail when using pfnOpen, that is 
> not supposed to be used by user code. You should rather use GDALOpen / 
> GDALOpenEx / GDALDataset::Open instead of using directly driver->pfnOpen
>
> Those functions are the ones that set the poDriver member of the 
> GDALDataset
>
> Even
>
> -- 
>
> Spatialys - Geospatial professional services
>
> http://www.spatialys.com
>
-- 
Momtchil Momtchev<momtchil at momtchev.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201008/5badb4eb/attachment-0001.html>

From even.rouault at spatialys.com  Thu Oct  8 09:22:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 08 Oct 2020 18:22:32 +0200
Subject: [gdal-dev] GDALDatasetDriver->poDriver = NULL
In-Reply-To: <15d49e93-1072-6f47-800c-362872f1b0ed@momtchev.com>
References: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>
 <1740840.7Ef8zQLyUk@even-i700>
 <15d49e93-1072-6f47-800c-362872f1b0ed@momtchev.com>
Message-ID: <34119757.QWEEjDFSXj@even-i700>

Adding back the list

> Does a GDALDriver know his own name? GetDescription from GDALMajorObject
> maybe? 

Yes, a GDALDriver knows its name. But the static method implemented by pfnOpen 
doesn't know which driver it comes from, so it doesn't set the poDriver member of the 
GDALDataset* it returns, and let that job to GDALOpen() itself. Which saves to do this in 
hundreds of drivers, and potentially forgetting to do it.

> The problem is that there is a Driver abstraction object in the
> Node.js bindings that supports opening a file through that driver. I
> guess this is the reason the original author used pfnOpen.

They should use GDALOpenEx() instead, which has an option to restrict the candidate 
driver(s).

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201008/7754a650/attachment.html>

From momtchil at momtchev.com  Thu Oct  8 09:28:39 2020
From: momtchil at momtchev.com (Momtchil Momtchev)
Date: Thu, 8 Oct 2020 18:28:39 +0200
Subject: [gdal-dev] GDALDatasetDriver->poDriver = NULL
In-Reply-To: <34119757.QWEEjDFSXj@even-i700>
References: <82e544ca-a7ac-1c08-da07-78c9b2e00c81@momtchev.com>
 <1740840.7Ef8zQLyUk@even-i700>
 <15d49e93-1072-6f47-800c-362872f1b0ed@momtchev.com>
 <34119757.QWEEjDFSXj@even-i700>
Message-ID: <fae26b6b-903c-6ff0-321e-858a2aece1d3@momtchev.com>

On 08/10/2020 18:22, Even Rouault wrote:
>
> > Does a GDALDriver know his own name? GetDescription from GDALMajorObject
>
> > maybe?
>
> Yes, a GDALDriver knows its name. But the static method implemented by 
> pfnOpen doesn't know which driver it comes from, so it doesn't set the 
> poDriver member of the GDALDataset* it returns, and let that job to 
> GDALOpen() itself. Which saves to do this in hundreds of drivers, and 
> potentially forgetting to do it.
>
>
     This the same problem in the Node.js bindings, I am in the static 
Driver.open and I need the driver name from the GDALDriver object to be 
able to construct a GDALOpenEx call.

-- 
Momtchil Momtchev <momtchil at momtchev.com>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201008/38fc3046/attachment.html>

From a.neumann at carto.net  Fri Oct  9 06:06:37 2020
From: a.neumann at carto.net (Andreas Neumann)
Date: Fri, 09 Oct 2020 15:06:37 +0200
Subject: [gdal-dev] WEBP in GEOTIFF
Message-ID: <18866a0aef012ddcd6039aa58908f728@carto.net>

Hi, 

I am using a self-compiled GDAL 3.1.2 version and try to create a GTIFF
file with COMPRESS=WEBP 

libwebp-devel and other webp automatic dependencies are installed on
this ubuntu 18.04 machine. I could also compile against libwebp 

However, when running gdal_translate like 

gdal_translate -b 1 -b 2 -b 3 -b mask -of GTIFF -co COMPRESS=WEBP -co
PHOTOMETRIC=YCBCR -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co BIGTIFF=YES
-co NUM_THREADS=4 -a_srs EPSG:2056 -projwin 2599700 1226200 2602200
1224650 ch.swisstopo.orthofoto_2018.rgb.vrt test_webp_ycbcr.tif

I get the following error output: 

Input file size is 530000, 480000 
Warning 6: 'WEBP' is an unexpected value for COMPRESS creation option of
type string-select. 
ERROR 1: Cannot create TIFF file due to missing codec for WEBP.

Any idea what might be missing in my installation - where do I get this
missing codec for WEBP? 

Thanks, 

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201009/5cc78373/attachment.html>

From thomas.bonfort at gmail.com  Fri Oct  9 06:33:20 2020
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Fri, 9 Oct 2020 15:33:20 +0200
Subject: [gdal-dev] WEBP in GEOTIFF
In-Reply-To: <18866a0aef012ddcd6039aa58908f728@carto.net>
References: <18866a0aef012ddcd6039aa58908f728@carto.net>
Message-ID: <CAOM3y2iw0COSDKrXmQrtaZ_u-qrMQtKZPTqJnZXa60sELSHuBw@mail.gmail.com>

You might need to compile with gdal's internal libtiff so that webp-in-tif
support is enabled (i.e. the system libtiff might not have webp support).
Also note you should probably be adding "-co TILED=YES" to your translate
command.

On Fri, Oct 9, 2020 at 3:07 PM Andreas Neumann <a.neumann at carto.net> wrote:

> Hi,
>
> I am using a self-compiled GDAL 3.1.2 version and try to create a GTIFF
> file with COMPRESS=WEBP
>
> libwebp-devel and other webp automatic dependencies are installed on this
> ubuntu 18.04 machine. I could also compile against libwebp
>
> However, when running gdal_translate like
>
> gdal_translate -b 1 -b 2 -b 3 -b mask -of GTIFF -co COMPRESS=WEBP -co
> PHOTOMETRIC=YCBCR -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co BIGTIFF=YES -co
> NUM_THREADS=4 -a_srs EPSG:2056 -projwin 2599700 1226200 2602200 1224650
> ch.swisstopo.orthofoto_2018.rgb.vrt test_webp_ycbcr.tif
>
> I get the following error output:
>
> Input file size is 530000, 480000
> Warning 6: 'WEBP' is an unexpected value for COMPRESS creation option of
> type string-select.
> ERROR 1: Cannot create TIFF file due to missing codec for WEBP.
>
> Any idea what might be missing in my installation - where do I get this
> missing codec for WEBP?
>
> Thanks,
>
> Andreas
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201009/08914f18/attachment.html>

From a.neumann at carto.net  Fri Oct  9 07:29:51 2020
From: a.neumann at carto.net (Andreas Neumann)
Date: Fri, 09 Oct 2020 16:29:51 +0200
Subject: [gdal-dev] WEBP in GEOTIFF
In-Reply-To: <CAOM3y2iw0COSDKrXmQrtaZ_u-qrMQtKZPTqJnZXa60sELSHuBw@mail.gmail.com>
References: <18866a0aef012ddcd6039aa58908f728@carto.net>
 <CAOM3y2iw0COSDKrXmQrtaZ_u-qrMQtKZPTqJnZXa60sELSHuBw@mail.gmail.com>
Message-ID: <58d3a46ddc38d4f81b67ae9f2ba59cc1@carto.net>

Thanks Thomas, 

Yes, compiling it with libtiff=internal and libgeotiff=internal did the
trick - thanks for the hint! 

Do you recommending using webp instead of jpeg inside GTIFF or COG? It
seems like the WEBP compression produces smaller file sizes than JPEG,
but how does it look speed-wise regarding decompression? 

Thanks, 

Andreas 

On 2020-10-09 15:33, thomas bonfort wrote:

> You might need to compile with gdal's internal libtiff so that webp-in-tif support is enabled (i.e. the system libtiff might not have webp support). Also note you should probably be adding "-co TILED=YES" to your translate command. 
> 
> On Fri, Oct 9, 2020 at 3:07 PM Andreas Neumann <a.neumann at carto.net> wrote: 
> 
>> Hi, 
>> 
>> I am using a self-compiled GDAL 3.1.2 version and try to create a GTIFF file with COMPRESS=WEBP 
>> 
>> libwebp-devel and other webp automatic dependencies are installed on this ubuntu 18.04 machine. I could also compile against libwebp 
>> 
>> However, when running gdal_translate like 
>> 
>> gdal_translate -b 1 -b 2 -b 3 -b mask -of GTIFF -co COMPRESS=WEBP -co PHOTOMETRIC=YCBCR -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co BIGTIFF=YES -co NUM_THREADS=4 -a_srs EPSG:2056 -projwin 2599700 1226200 2602200 1224650 ch.swisstopo.orthofoto_2018.rgb.vrt test_webp_ycbcr.tif
>> 
>> I get the following error output: 
>> 
>> Input file size is 530000, 480000 
>> Warning 6: 'WEBP' is an unexpected value for COMPRESS creation option of type string-select. 
>> ERROR 1: Cannot create TIFF file due to missing codec for WEBP.
>> 
>> Any idea what might be missing in my installation - where do I get this missing codec for WEBP? 
>> 
>> Thanks, 
>> 
>> Andreas 
>> 
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201009/60667cbe/attachment.html>

From thomas.bonfort at gmail.com  Fri Oct  9 08:53:03 2020
From: thomas.bonfort at gmail.com (thomas bonfort)
Date: Fri, 9 Oct 2020 17:53:03 +0200
Subject: [gdal-dev] WEBP in GEOTIFF
In-Reply-To: <58d3a46ddc38d4f81b67ae9f2ba59cc1@carto.net>
References: <18866a0aef012ddcd6039aa58908f728@carto.net>
 <CAOM3y2iw0COSDKrXmQrtaZ_u-qrMQtKZPTqJnZXa60sELSHuBw@mail.gmail.com>
 <58d3a46ddc38d4f81b67ae9f2ba59cc1@carto.net>
Message-ID: <CAOM3y2i4fEryTjq4MrAUrfc36RfdGrHVQvLYWK6beHunUWNUOg@mail.gmail.com>

Andreas,
The size gains compared to JPEG are marginal, at the cost of noticeably
higher compression and decompression times (especially compared to the
optimized turbo jpeg library). WEBP does however support an alpha channel
which can be desirable, as it avoids having to add a mask IFD to the TIFF.
Regards,
Thomas

On Fri, Oct 9, 2020 at 4:30 PM Andreas Neumann <a.neumann at carto.net> wrote:

> Thanks Thomas,
>
> Yes, compiling it with libtiff=internal and libgeotiff=internal did the
> trick - thanks for the hint!
>
> Do you recommending using webp instead of jpeg inside GTIFF or COG? It
> seems like the WEBP compression produces smaller file sizes than JPEG, but
> how does it look speed-wise regarding decompression?
>
> Thanks,
>
> Andreas
>
> On 2020-10-09 15:33, thomas bonfort wrote:
>
> You might need to compile with gdal's internal libtiff so that webp-in-tif
> support is enabled (i.e. the system libtiff might not have webp support).
> Also note you should probably be adding "-co TILED=YES" to your translate
> command.
>
> On Fri, Oct 9, 2020 at 3:07 PM Andreas Neumann <a.neumann at carto.net>
> wrote:
>
> Hi,
>
> I am using a self-compiled GDAL 3.1.2 version and try to create a GTIFF
> file with COMPRESS=WEBP
>
> libwebp-devel and other webp automatic dependencies are installed on this
> ubuntu 18.04 machine. I could also compile against libwebp
>
> However, when running gdal_translate like
>
> gdal_translate -b 1 -b 2 -b 3 -b mask -of GTIFF -co COMPRESS=WEBP -co
> PHOTOMETRIC=YCBCR -co BLOCKXSIZE=512 -co BLOCKYSIZE=512 -co BIGTIFF=YES -co
> NUM_THREADS=4 -a_srs EPSG:2056 -projwin 2599700 1226200 2602200 1224650
> ch.swisstopo.orthofoto_2018.rgb.vrt test_webp_ycbcr.tif
>
> I get the following error output:
>
> Input file size is 530000, 480000
> Warning 6: 'WEBP' is an unexpected value for COMPRESS creation option of
> type string-select.
> ERROR 1: Cannot create TIFF file due to missing codec for WEBP.
>
> Any idea what might be missing in my installation - where do I get this
> missing codec for WEBP?
>
> Thanks,
>
> Andreas
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201009/90de3f18/attachment-0001.html>

From raymond.castonguay at yahoo.com  Fri Oct  9 18:09:18 2020
From: raymond.castonguay at yahoo.com (Raymond Castonguay)
Date: Sat, 10 Oct 2020 01:09:18 +0000 (UTC)
Subject: [gdal-dev] GDAL Open File Help Needed
References: <1581927805.1168.1602292158903.ref@mail.yahoo.com>
Message-ID: <1581927805.1168.1602292158903@mail.yahoo.com>

See code below:
I downloaded GDAL 3.x for Windows from the GISInternals website.
I have Windows 10 64Bit, Visual Studio 2019 C++
The code below loads a data file after calling GDALAllRegister();There are no runtime or GDAL errors reported.But the header results are incorrect and corrupted. See attached Debug Window.I tried loading a 3D TIFF file and a ENVI file, with the same problem. Any Idea what the problem could be?
Note, from the ENVI ascii data File Header, the raster size should be 320x190 with 256 bands for this example.
//------------------- CODEvoid CMFCApplication3Dlg::OnBnClickedButton1(){ CStringA fileName = "C:\\temp\\PC_IT5_G2.bin";
 // C++  GDALDataset* data = (GDALDataset*)GDALOpen(fileName, GA_ReadOnly);
 // C  GDALDatasetH dataH    = GDALOpen(fileName, GA_ReadOnly); GDALDriverH  hDriver = GDALGetDatasetDriver(dataH);
 CStringA NameS = GDALGetDriverShortName(hDriver); CStringA NameL = GDALGetDriverLongName(hDriver);
 int nx = GDALGetRasterXSize(hDriver); int ny = GDALGetRasterYSize(hDriver); int nz = GDALGetRasterCount(hDriver);
 CStringA errMsg = CPLGetLastErrorMsg();
 int i = 0;}
//------------------------  FILE HEADER minus Meta DataENVIacquisition time = 2020-04-29T15:53:46.486+00:0samples = 320lines = 190bands = 256header offset = 0file type = ENVI Standarddata type = 12interleave = bipbyte order = 0wavelength units = Nanometerswavelength = {  948.74, 951.95, 955.16, 958.37,  961.58, 964.79, 968, 971.22,  974.44, 977.65, 980.87, 984.1, ......
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/5684beda/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: GDAL C Error 1d.png
Type: image/png
Size: 62509 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/5684beda/attachment-0001.png>

From a.neumann at carto.net  Sat Oct 10 03:16:15 2020
From: a.neumann at carto.net (Andreas Neumann)
Date: Sat, 10 Oct 2020 12:16:15 +0200
Subject: [gdal-dev] WEBP in GEOTIFF
In-Reply-To: <CAOM3y2i4fEryTjq4MrAUrfc36RfdGrHVQvLYWK6beHunUWNUOg@mail.gmail.com>
References: <18866a0aef012ddcd6039aa58908f728@carto.net>
 <CAOM3y2iw0COSDKrXmQrtaZ_u-qrMQtKZPTqJnZXa60sELSHuBw@mail.gmail.com>
 <58d3a46ddc38d4f81b67ae9f2ba59cc1@carto.net>
 <CAOM3y2i4fEryTjq4MrAUrfc36RfdGrHVQvLYWK6beHunUWNUOg@mail.gmail.com>
Message-ID: <9a2061ba-030f-e6ed-c379-973fcc751247@carto.net>

Hi Thomas,

Interesting - thanks for the hint about turbo-jpeg.

I found out that my gdal is linked against libjpeg.so.8 and not against 
libturbojpeg.so.0 which is also present on my system.

Would I have to tell gdal to compile against libturbojpeg with the 
--with-jpeg= flag in order to benefit from turbo-jpeg?

And yes, the mask thing is what I was struggling with JPEG compression 
and RGB images, but I got the mask to work by using the following 
gdal_translate command:

|gdal_translate -b 1 -b 2 -b 3 -b mask -of COG --config 
GDAL_DISABLE_READDIR_ON_OPEN TRUE\ -co COMPRESS=JPEG -co BIGTIFF=YES -co 
NUM_THREADS=4 -a_srs EPSG:2056\ infile.vrt outfile.tif|

Thanks and greetings,

Andreas

Am 09.10.20 um 17:53 schrieb thomas bonfort:
> Andreas,
> The size gains compared to JPEG are marginal, at the cost of 
> noticeably higher compression and decompression times (especially 
> compared to the optimized turbo jpeg library). WEBP does however 
> support an alpha channel which can be desirable, as it avoids having 
> to add a mask IFD to the TIFF.
> Regards,
> Thomas
>
> On Fri, Oct 9, 2020 at 4:30 PM Andreas Neumann <a.neumann at carto.net 
> <mailto:a.neumann at carto.net>> wrote:
>
>     Thanks Thomas,
>
>     Yes, compiling it with libtiff=internal and libgeotiff=internal
>     did the trick - thanks for the hint!
>
>     Do you recommending using webp instead of jpeg inside GTIFF or
>     COG? It seems like the WEBP compression produces smaller file
>     sizes than JPEG, but how does it look speed-wise regarding
>     decompression?
>
>     Thanks,
>
>     Andreas
>
>     On 2020-10-09 15:33, thomas bonfort wrote:
>
>>     You might need to compile with gdal's internal libtiff so that
>>     webp-in-tif support is enabled (i.e. the system libtiff might not
>>     have webp support). Also note you should probably be adding "-co
>>     TILED=YES" to your translate command.
>>
>>     On Fri, Oct 9, 2020 at 3:07 PM Andreas Neumann
>>     <a.neumann at carto.net <mailto:a.neumann at carto.net>> wrote:
>>
>>         Hi,
>>
>>         I am using a self-compiled GDAL 3.1.2 version and try to
>>         create a GTIFF file with COMPRESS=WEBP
>>
>>         libwebp-devel and other webp automatic dependencies are
>>         installed on this ubuntu 18.04 machine. I could also compile
>>         against libwebp
>>
>>         However, when running gdal_translate like
>>
>>         gdal_translate -b 1 -b 2 -b 3 -b mask -of GTIFF -co
>>         COMPRESS=WEBP -co PHOTOMETRIC=YCBCR -co BLOCKXSIZE=512 -co
>>         BLOCKYSIZE=512 -co BIGTIFF=YES -co NUM_THREADS=4 -a_srs
>>         EPSG:2056 -projwin 2599700 1226200 2602200 1224650
>>         ch.swisstopo.orthofoto_2018.rgb.vrt test_webp_ycbcr.tif
>>
>>         I get the following error output:
>>
>>         Input file size is 530000, 480000
>>         Warning 6: 'WEBP' is an unexpected value for COMPRESS
>>         creation option of type string-select.
>>         ERROR 1: Cannot create TIFF file due to missing codec for WEBP.
>>
>>         Any idea what might be missing in my installation - where do
>>         I get this missing codec for WEBP?
>>
>>         Thanks,
>>
>>         Andreas
>>
>>
>>         _______________________________________________
>>         gdal-dev mailing list
>>         gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/abceeb13/attachment.html>

From even.rouault at spatialys.com  Sat Oct 10 03:41:48 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 10 Oct 2020 12:41:48 +0200
Subject: [gdal-dev] WEBP in GEOTIFF
In-Reply-To: <9a2061ba-030f-e6ed-c379-973fcc751247@carto.net>
References: <18866a0aef012ddcd6039aa58908f728@carto.net>
 <CAOM3y2i4fEryTjq4MrAUrfc36RfdGrHVQvLYWK6beHunUWNUOg@mail.gmail.com>
 <9a2061ba-030f-e6ed-c379-973fcc751247@carto.net>
Message-ID: <2451378.CZ6MF8eqgh@even-i700>

Andreas,

> Interesting - thanks for the hint about turbo-jpeg.
> 
> I found out that my gdal is linked against libjpeg.so.8 and not against
> libturbojpeg.so.0 which is also present on my system.
> 
> Would I have to tell gdal to compile against libturbojpeg with the
> --with-jpeg= flag in order to benefit from turbo-jpeg?

Ubuntu has shipped for a long time libjpeg-turbo as the system libjpeg.so.8. It has the same 
ABI and behaviour as the corresponding IJG version, so it can be used as a complete 
replacement.

If you want to check:
objdump -T /usr/lib/x86_64-linux-gnu/libjpeg.so.8 | grep LIBJPEGTURBO

0000000000000000 g    DO *ABS*	0000000000000000  LIBJPEGTURBO_8.0 
LIBJPEGTURBO_8.0

(libturbojpeg.so uses a slightly different API, that is only useful for applications directly 
targetted at it. Not used by GDAL. More details at
https://libjpeg-turbo.org/About/TurboJPEG)

> 
> And yes, the mask thing is what I was struggling with JPEG compression
> and RGB images, but I got the mask to work by using the following
> 
> gdal_translate command:
> |gdal_translate -b 1 -b 2 -b 3 -b mask -of COG --config
> 
> GDAL_DISABLE_READDIR_ON_OPEN TRUE\ -co COMPRESS=JPEG -co BIGTIFF=YES -co
> NUM_THREADS=4 -a_srs EPSG:2056\ infile.vrt outfile.tif|

Hum, normally the COG driver makes the internal necessary steps to convert an alpha band to 
a mask band when using JPEG compression

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/e3f26a2c/attachment.html>

From even.rouault at spatialys.com  Sat Oct 10 03:44:25 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 10 Oct 2020 12:44:25 +0200
Subject: [gdal-dev] GDAL Open File Help Needed
In-Reply-To: <1581927805.1168.1602292158903@mail.yahoo.com>
References: <1581927805.1168.1602292158903.ref@mail.yahoo.com>
 <1581927805.1168.1602292158903@mail.yahoo.com>
Message-ID: <7248633.MFjFyREUYZ@even-i700>

> int nx = GDALGetRasterXSize(hDriver);
> int ny = GDALGetRasterYSize(hDriver);
> int nz = GDALGetRasterCount(hDriver);

That's the wrong part. You should use the dataH handle.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/53b94da9/attachment-0001.html>

From even.rouault at spatialys.com  Sat Oct 10 04:14:40 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 10 Oct 2020 13:14:40 +0200
Subject: [gdal-dev] WEBP in GEOTIFF
In-Reply-To: <2451378.CZ6MF8eqgh@even-i700>
References: <18866a0aef012ddcd6039aa58908f728@carto.net>
 <9a2061ba-030f-e6ed-c379-973fcc751247@carto.net>
 <2451378.CZ6MF8eqgh@even-i700>
Message-ID: <3003726.PslyyseWe2@even-i700>

> Ubuntu has shipped for a long time libjpeg-turbo as the system libjpeg.so.8.
> It has the same ABI and behaviour as the corresponding IJG version, so it
> can be used as a complete replacement.
> 
> If you want to check:
> objdump -T /usr/lib/x86_64-linux-gnu/libjpeg.so.8 | grep LIBJPEGTURBO
> 
> 0000000000000000 g    DO *ABS*	0000000000000000  LIBJPEGTURBO_8.0
> LIBJPEGTURBO_8.0
> 

For the sake of completness, I should also mention that if you build GDAL
--with-jpeg=internal, it will *NOT* use a libjpeg-turbo copy. The internal copy of libjpeg in 
GDAL is the venerable IJG 6.2b (with one or two security patches), that has no SIMD 
acceleration. For those wondering, upgrading this internal copy to libjpeg-turbo would be 
complicated due to libjpeg-turbo using a few assembly source files, which would 
seriously complicate the GDAL build system.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/21b2ef28/attachment.html>

From raymond.castonguay at yahoo.com  Sat Oct 10 10:03:58 2020
From: raymond.castonguay at yahoo.com (Raymond Castonguay)
Date: Sat, 10 Oct 2020 17:03:58 +0000 (UTC)
Subject: [gdal-dev] GDAL Open File Help Needed
In-Reply-To: <7248633.MFjFyREUYZ@even-i700>
References: <1581927805.1168.1602292158903.ref@mail.yahoo.com>
 <1581927805.1168.1602292158903@mail.yahoo.com> <7248633.MFjFyREUYZ@even-i700>
Message-ID: <1453998550.97491.1602349438405@mail.yahoo.com>

Hi Even,
That fixes the C code, thank you very much.
But what about the C++ line just below the C++ comment? See the previously attached debug image window. The “data” class members are corrupted. 
I started out with C++, and since it did not work I tried C. 
Thank you.

Raymond Castonguay 520-940-3912Raymond.castonguay at yahoo.com
Confidential: This information is intended only for the person or entity to which it is addressed and may contain confidential and/or privileged material.  If you are not the addressee, any disclosure, reproduction, copying, distribution, or other dissemination or use of this communication is strictly prohibited.  If you have received this transmission in error please notify the sender immediately and delete this e-mail.


On Saturday, October 10, 2020, 3:44 AM, Even Rouault <even.rouault at spatialys.com> wrote:

#yiv3386852991 p, #yiv3386852991 li {white-space:pre-wrap;}
> int nx = GDALGetRasterXSize(hDriver);

> int ny = GDALGetRasterYSize(hDriver);

> int nz = GDALGetRasterCount(hDriver);

 

That's the wrong part. You should use the dataH handle.

 

-- 

Spatialys - Geospatial professional services

http://www.spatialys.com



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/f777b007/attachment.html>

From j1 at jimenezshaw.com  Sat Oct 10 13:17:10 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sat, 10 Oct 2020 22:17:10 +0200
Subject: [gdal-dev] Clang-format
Message-ID: <CADRrdKuzNC8hTwOpNH=Jx7hh3AvkhysG3+ojb2Z+HvKWhaB1TA@mail.gmail.com>

Hi

I am trying to make a PR ready for release 3.2 (let's see if I am able to
do it).
However, I found it strange that there is no automatic formatting with
clang-format for C++ code.

In this page
https://gdal.org/development/rfc/rfc69_cplusplus_formatting.html it is
suggesting to use it. That would be great! Enabling it in your favourite
editor makes the code nicer, without any extra work. And more consistent!

About "when" to apply it (reformatting *all* the existing code), I think a
good moment could be just before creating a "big" release branch, like 3.2.
Then the backport of bug fixes would be easy (otherwise it is a nightmare).

What do you think?

Cheers,
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/c1966376/attachment.html>

From even.rouault at spatialys.com  Sat Oct 10 14:39:23 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 10 Oct 2020 23:39:23 +0200
Subject: [gdal-dev] Clang-format
In-Reply-To: <CADRrdKuzNC8hTwOpNH=Jx7hh3AvkhysG3+ojb2Z+HvKWhaB1TA@mail.gmail.com>
References: <CADRrdKuzNC8hTwOpNH=Jx7hh3AvkhysG3+ojb2Z+HvKWhaB1TA@mail.gmail.com>
Message-ID: <4453136.kJGH5N4evv@even-i700>

Hi,

> I am trying to make a PR ready for release 3.2 (let's see if I am able to
> do it).
> However, I found it strange that there is no automatic formatting with
> clang-format for C++ code.
> 
> In this page
> https://gdal.org/development/rfc/rfc69_cplusplus_formatting.html it is
> suggesting to use it. That would be great! Enabling it in your favourite
> editor makes the code nicer, without any extra work. And more consistent!
> 
> About "when" to apply it (reformatting *all* the existing code), I think a
> good moment could be just before creating a "big" release branch, like 3.2.
> Then the backport of bug fixes would be easy (otherwise it is a nightmare).
> 
> What do you think?

Was discussed at that time in
https://lists.osgeo.org/pipermail/gdal-dev/2017-May/thread.html#46560

I would be quite in favor of the principle
A few points I've in mind:
- I'm slightly worried about clang-format output changing between versions of the tool 
(based on my experience with PROJ, I can tell you that they are different between 3.8, which 
is the one we used for PROJ, and 10), which would be an issue as we cannot be certain that 
our set of contributors to have different versions. Not sure if having a custom .clang-format 
file (possibly a 'standard' one that we put in our tree to make output stable) would help ? This 
would have to be investigated & tested.
- We'd have to exclude some files from the reformatting, in particular third-party libraries 
that we import in the GDAL tree (libjpeg, libtiff, libpng, libjson-c, libcsf, degrib, g2clib ...)
- We'd need a scripts/prepare-commit.sh style of script like QGIS to be able to automatically 
reformat files that are in modified state according to git according to the formatting rules
- We'd need a CI test like QGIS to reject pull requests that don't match the formating rules, 
and with nice hint on what's wrong and how to fix it
- The reformatting would have to be done from a dedicated github account
- And someone to implement that

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201010/2150c83a/attachment.html>

From mateusz at loskot.net  Sun Oct 11 09:04:55 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun, 11 Oct 2020 18:04:55 +0200
Subject: [gdal-dev] Clang-format
In-Reply-To: <4453136.kJGH5N4evv@even-i700>
References: <CADRrdKuzNC8hTwOpNH=Jx7hh3AvkhysG3+ojb2Z+HvKWhaB1TA@mail.gmail.com>
 <4453136.kJGH5N4evv@even-i700>
Message-ID: <CABUeae-Joa9GoU_cAHBm3GVkRRmZGsEwUmVZQAbPRiRfKFgpzA@mail.gmail.com>

On Sat, 10 Oct 2020 at 23:39, Even Rouault <even.rouault at spatialys.com> wrote:
>
> > However, I found it strange that there is no automatic formatting with
> > clang-format for C++ code.
> >
> > In this page
> > https://gdal.org/development/rfc/rfc69_cplusplus_formatting.html it is
> > suggesting to use it. That would be great! Enabling it in your favourite
> > editor makes the code nicer, without any extra work. And more consistent!
>
> > About "when" to apply it (reformatting *all* the existing code), I think a
> > good moment could be just before creating a "big" release branch, like 3.2.
> > Then the backport of bug fixes would be easy (otherwise it is a nightmare).
> >
> > What do you think?
>
>
> Was discussed at that time in
> https://lists.osgeo.org/pipermail/gdal-dev/2017-May/thread.html#46560
>
> I would be quite in favor of the principle
>
> A few points I've in mind:
>
> - I'm slightly worried about clang-format output changing between versions of the tool (based on my experience with PROJ, I can tell you that they are different between 3.8, which is the one we used for PROJ, and 10), which would be an issue as we cannot be certain that our set of contributors to have different versions. Not sure if having a custom .clang-format file (possibly a 'standard' one that we put in our tree to make output stable) would help ? This would have to be investigated & tested.

I think, it would require us to stick to a particular clang-format version
that is allowed to (re)format GDAL.
Contributors who want to use clang-format would have to use
the decided version only.

I suspect, higher versions of clang-format systematically suffer
from less and less behaviour discrepancies, so it may be sensible
to pick one of the later versions, instead of 3.8.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From jed.kaplan at arve-research.com  Mon Oct 12 03:17:19 2020
From: jed.kaplan at arve-research.com (Jed O. Kaplan)
Date: Mon, 12 Oct 2020 18:17:19 +0800
Subject: [gdal-dev] ogr2ogr: debugging slow performance when converting .e00
 to other formats
Message-ID: <087FF1D3-D7BA-4012-88A7-8A9D764C86D8@arve-research.com>

Hello all,

I am new to this list, apologies if this type of question has already been asked. I’m using GDAL/OGR version 3.0.4 on a brand new server with 256GB ram.

I have a moderately sized (~110MB) .e00 file I would like to convert to another format. The original file appears to be clean; ogrinfo gives no problems opening the file. 

I’ve tried converting this .e00 to shapefile, sqlite, and gpkg and in all cases it appears to create a file (or files depending on the output format) at the beginning but then little appears to happen after that. After several hours the conversion operation is still running, but the files only grow very, very slowly.

Is there any way to monitor the progress of the ogr2ogr operation or debug what is happening? I feel like there is not a lot more I can do except wait, but the time ogr2ogr is taking seems excessive given the input file size and the slow growth of the output file.

Thanks for your help,

Jed


From even.rouault at spatialys.com  Mon Oct 12 05:07:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 12 Oct 2020 14:07:16 +0200
Subject: [gdal-dev] ogr2ogr: debugging slow performance when converting
	.e00 to other formats
In-Reply-To: <087FF1D3-D7BA-4012-88A7-8A9D764C86D8@arve-research.com>
References: <087FF1D3-D7BA-4012-88A7-8A9D764C86D8@arve-research.com>
Message-ID: <5251392.toPdgXRH9Z@even-i700>

Jed,

There isn't much to debug. AFAIR, this is a limitation of the AVCE00 driver when 
reconstructing linear or polygonal geometries. It has to do lots of seeking in the file, which is 
super slow.

You might possibly try the avcimport utility (
http://avce00.maptools.org/avce00/index.html ) to convert the Ascii coverage to a binary 
one. I would expect the AVCBIN driver to be faster when using binary coverages as input 
dataset of ogr2ogr, but I'm not sure I've even tried this before.

Even

> Hello all,
> 
> I am new to this list, apologies if this type of question has already been
> asked. I’m using GDAL/OGR version 3.0.4 on a brand new server with 256GB
> ram.
> 
> I have a moderately sized (~110MB) .e00 file I would like to convert to
> another format. The original file appears to be clean; ogrinfo gives no
> problems opening the file.
> 
> I’ve tried converting this .e00 to shapefile, sqlite, and gpkg and in all
> cases it appears to create a file (or files depending on the output format)
> at the beginning but then little appears to happen after that. After
> several hours the conversion operation is still running, but the files only
> grow very, very slowly.
> 
> Is there any way to monitor the progress of the ogr2ogr operation or debug
> what is happening? I feel like there is not a lot more I can do except
> wait, but the time ogr2ogr is taking seems excessive given the input file
> size and the slow growth of the output file.
> 
> Thanks for your help,
> 
> Jed
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201012/5222e66c/attachment.html>

From ekeydar at gmail.com  Mon Oct 12 06:32:16 2020
From: ekeydar at gmail.com (Eran Keydar)
Date: Mon, 12 Oct 2020 16:32:16 +0300
Subject: [gdal-dev] Adding custom projection - gdal 3
Message-ID: <CA+se4R6Exm=+T9hVT1qMDFnZ5g2N_2R_QZ9YZ73PDeW29r-wtQ@mail.gmail.com>

Hi.
We need to add a custom projection to our environment.
Up to gdal 3, we did it by changing the /usr/share/proj/epsg file. In gdal
3, this is not relevant any more.
I've tried to google this and also ask a question here
https://gis.stackexchange.com/q/374652/111023, but with no success.
Is there a way to do this?

Thanks.
Eran
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201012/2e481beb/attachment.html>

From mikeflan at att.net  Mon Oct 12 14:48:37 2020
From: mikeflan at att.net (Mike Flannigan)
Date: Mon, 12 Oct 2020 16:48:37 -0500
Subject: [gdal-dev] ogr2ogr: debugging slow performance when converting
 .e00 to other formats
In-Reply-To: <mailman.5.1602529201.24211.gdal-dev@lists.osgeo.org>
References: <mailman.5.1602529201.24211.gdal-dev@lists.osgeo.org>
Message-ID: <59cc780e-695f-46f7-f603-41178bd80c2c@att.net>


I would try the "Geo::E00" module for Perl.
If you can get the file to me, I'll try it
for you.  Or you can install Perl and try it
yourself.

I just checked my files, and surprisingly I have
no E00 files.  I guess I just convert them and throw
them away, because I remember converting quite a few
in the past.  I also remember that the module does
not work on every E00 file, or at least does not
produce what I expect to see.

The "Geo::E00" module at Perl just produces a text file,
which is what I normally want.

Another option is to use QGIS to convert it.
That may be the best option for you.


Mike



On 10/12/20 2:00 PM, gdal-dev-request at lists.osgeo.org wrote:
> Hello all,
>
> I am new to this list, apologies if this type of question has already been asked. I’m using GDAL/OGR version 3.0.4 on a brand new server with 256GB ram.
>
> I have a moderately sized (~110MB) .e00 file I would like to convert to another format. The original file appears to be clean; ogrinfo gives no problems opening the file.
>
> I’ve tried converting this .e00 to shapefile, sqlite, and gpkg and in all cases it appears to create a file (or files depending on the output format) at the beginning but then little appears to happen after that. After several hours the conversion operation is still running, but the files only grow very, very slowly.
>
> Is there any way to monitor the progress of the ogr2ogr operation or debug what is happening? I feel like there is not a lot more I can do except wait, but the time ogr2ogr is taking seems excessive given the input file size and the slow growth of the output file.
>
> Thanks for your help,
>
> Jed



From even.rouault at spatialys.com  Mon Oct 12 16:02:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 13 Oct 2020 01:02:32 +0200
Subject: [gdal-dev] ogr2ogr: debugging slow performance when converting
	.e00 to other formats
In-Reply-To: <59cc780e-695f-46f7-f603-41178bd80c2c@att.net>
References: <mailman.5.1602529201.24211.gdal-dev@lists.osgeo.org>
 <59cc780e-695f-46f7-f603-41178bd80c2c@att.net>
Message-ID: <7870056.lcgL0Hj8cm@even-i700>

> Another option is to use QGIS to convert it.
> That may be the best option for you.

This is unlikely to help. QGIS uses the OGR AVCE00 driver 
underneath.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201013/4d51700f/attachment.html>

From scott.stanie at gmail.com  Mon Oct 12 16:09:56 2020
From: scott.stanie at gmail.com (Scott Staniewicz)
Date: Mon, 12 Oct 2020 18:09:56 -0500
Subject: [gdal-dev] gdalbuildvrt ignoring NoData for complex (CFloat32)
	valued rasters
Message-ID: <CAN4_TO9_0d+qiEqwDmjPpApiLJgwXr636icmCt7Pi1h_mSJFCw@mail.gmail.com>

Hi, I wanted to check here first before reporting this as a bug:


I'm trying to tile 2 together with buildvrtraster. I can make it work with
2 Float32 images that have 0s; however, with the complex images, the last
image always overwrites all of the previous, even where it has 0s and the
nodata is set to 0.

I attached two test rasters (in ROI_PAC format), where one has the top half
= 0, the other has bottom half zeros.

The commands I'm trying:

gdal_edit.py -a_nodata 0 slc1.slc
gdal_edit.py -a_nodata 0 slc2.slc
gdalbuildvrt output.vrt slc*.slc


When I do `gdalinfo -stats output.vrt`, it still tells me half of the image
is invalid (as in, slc2.slc overwrote all of slc1.slc)

I've also tried adding -srcnodata 0 and/or -vrtnodata 0, but same effect.

Is it possible to have a nodata value of 0 for CFloat32 images? Or is it
known that using "0" will get ignored when the CFloat32 is 0 (or really 0.0
+ 0.0j )

Thanks,
Scott
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201012/9893a427/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: slc1.slc.rsc
Type: application/octet-stream
Size: 689 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201012/9893a427/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: slc2.slc.rsc
Type: application/octet-stream
Size: 689 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201012/9893a427/attachment-0005.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: slc1.slc
Type: application/octet-stream
Size: 20000 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201012/9893a427/attachment-0006.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: slc2.slc
Type: application/octet-stream
Size: 20000 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201012/9893a427/attachment-0007.obj>

From jed.kaplan at arve-research.com  Mon Oct 12 18:43:00 2020
From: jed.kaplan at arve-research.com (Jed O. Kaplan)
Date: Tue, 13 Oct 2020 09:43:00 +0800
Subject: [gdal-dev] ogr2ogr: debugging slow performance when converting
 .e00 to other formats
In-Reply-To: <7870056.lcgL0Hj8cm@even-i700>
References: <mailman.5.1602529201.24211.gdal-dev@lists.osgeo.org>
 <59cc780e-695f-46f7-f603-41178bd80c2c@att.net> <7870056.lcgL0Hj8cm@even-i700>
Message-ID: <960DAD61-1CB7-473F-9413-425BCB502453@arve-research.com>

Thanks for the help all.

Using avcimport to convert the .e00 to binary coverages allowed me to convert to other formats in seconds. I should have thought of this.

Thanks again, Jed



> On 13 Oct 2020, at 07:02, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> > Another option is to use QGIS to convert it.
> > That may be the best option for you.
>  
> This is unlikely to help. QGIS uses the OGR AVCE00 driver underneath.
>  
> Even
>  
> -- 
> Spatialys - Geospatial professional services
> http://www.spatialys.com


From nik at nikosalexandris.net  Tue Oct 13 08:08:27 2020
From: nik at nikosalexandris.net (Nikos Alexandris)
Date: Tue, 13 Oct 2020 17:08:27 +0200
Subject: [gdal-dev] MOD021KM subdatasets listing identical bands
In-Reply-To: <20201002103231.k34jff5v6kojnlvc@imap.dreamhost.com>
References: <20201002103231.k34jff5v6kojnlvc@imap.dreamhost.com>
Message-ID: <20201013150827.kv4rxftuvxxxx2gy@imap.dreamhost.com>

* Nikos Alexandris <nik at nikosalexandris.net> [2020-10-02 12:32:31 +0200]:

>According to `gdalinfo`, MOD021KM (and MYD021KM for the matter), list
>identical bands under two different subdatasets (SDSes).
>
>For example, SDS 3 (see `gdalinfo`'s report on it
>https://gitlab.com/thermopolis/public/code/-/snippets/2021406)
>and SDS 24 (see `gdalinfo`'s report on it
>https://gitlab.com/thermopolis/public/code/-/snippets/2021407),
>both contain essentially the same data/bands.
>
>The obvious differences between the two SDSes are the descriptive name
>(SDS 3 contains the characteristic, for this product, word 'SWATH') and
>the set of ground control points (GCP) (SDS 24 does not list any GCPs
>along).
>
>I've search in every related official document I can find on-line about
>MOD021KM products. I can't trace anything related to my question so far
>
>(see for example:
>
>- https://ladsweb.modaps.eosdis.nasa.gov/filespec/MODIS/61/MOD021KM
>- https://mcst.gsfc.nasa.gov/sites/default/files/file_attachments/M1054E_PUG_2017_0901_V6.2.2_Terra_V6.2.1_Aqua.pdf
>- https://mcst.gsfc.nasa.gov/sites/default/files/file_attachments/MODIS_L1B_ATBD_ver8_finalupload.pdf
> (although not the document that would expectedly contain details about
> the subdatasets in MOD02 products)
>).
>
>Panoply (https://www.giss.nasa.gov/tools/panoply/), however, contains
>only once the set of Emissive bands at 1KM, and the same for the rest of
>data (see https://i.imgur.com/llGYVfo.png).
>
>What is the difference between the two SDSes?

I am forwarding NASA's reply on the matter:
"
    Following up to your yesterday's information, we discussed this
    entirely. We do not have access to gdal and would need more effort
    installing and familiarizing with it. Generally, there is only one
    dataset "EV_1KM_Emissive" in MOD021KM/MYD021KM data file, and it resides
    in "MODIS_SWATH_Type_L1B". To our best guess, gdal reads subdataset list
    at swatch layer, grid layer and SDSs. That is why there are duplicated
    subdatasets shown in the list, but they belong to SWATH layer and SDS,
    respectively.

    Regards,
    LAADS User Services


    Ticket Details
    ---------------------------------
    Ticket ID: 108294
    Department: LAADS DAAC
    Type: General
    Status: Waiting for User
    Priority: Low
"

I find it a bit confusing to have duplicate data reported by gdalinfo.
Cheers, Nikos


From pttest68 at gmail.com  Wed Oct 14 02:02:56 2020
From: pttest68 at gmail.com (pt test)
Date: Wed, 14 Oct 2020 12:02:56 +0300
Subject: [gdal-dev] Creating DTM Pyramids with max values,
	and dtm pyramid with min values
Message-ID: <CANfdFKaWQ5mDBU2=rQi2Kh_v21Su9mD3-B8rvNTaFQqqGcnYrA@mail.gmail.com>

Hi
I have a DEM , DTM , file.
I need to create pyramid layers, where the values choses are not the
average, but the max value from the resampled area.
and the same using min value from the resampled area.

There is the gdaladdo application.
I could not find a mode.
Is there some way to do this?

documentation has these modes

-r {nearest,average,gauss,cubic,cubicspline,lanczos,average_magphase,mode}


Is there a way to use them. and how?
Thanks in advance
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201014/96d75010/attachment.html>

From even.rouault at spatialys.com  Wed Oct 14 03:02:38 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 14 Oct 2020 12:02:38 +0200
Subject: [gdal-dev] MOD021KM subdatasets listing identical bands
In-Reply-To: <20201002103231.k34jff5v6kojnlvc@imap.dreamhost.com>
References: <20201002103231.k34jff5v6kojnlvc@imap.dreamhost.com>
Message-ID: <19093851.ZCYTI8VWT2@even-i700>

On vendredi 2 octobre 2020 12:32:31 CEST Nikos Alexandris wrote:
> According to `gdalinfo`, MOD021KM (and MYD021KM for the matter), list
> identical bands under two different subdatasets (SDSes).
> 
> For example, SDS 3 (see `gdalinfo`'s report on it
> https://gitlab.com/thermopolis/public/code/-/snippets/2021406)
> and SDS 24 (see `gdalinfo`'s report on it
> https://gitlab.com/thermopolis/public/code/-/snippets/2021407),
> both contain essentially the same data/bands.
> 
> The obvious differences between the two SDSes are the descriptive name
> (SDS 3 contains the characteristic, for this product, word 'SWATH') and
> the set of ground control points (GCP) (SDS 24 does not list any GCPs
> along).

Fix submitted per https://github.com/OSGeo/gdal/pull/3062

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lars.schylberg at blixtmail.se  Wed Oct 14 06:28:51 2020
From: lars.schylberg at blixtmail.se (lars.schylberg at blixtmail.se)
Date: Wed, 14 Oct 2020 13:28:51 +0000
Subject: [gdal-dev] Creating DTM Pyramids with max values,
 and dtm pyramid with min values
In-Reply-To: <CANfdFKaWQ5mDBU2=rQi2Kh_v21Su9mD3-B8rvNTaFQqqGcnYrA@mail.gmail.com>
References: <CANfdFKaWQ5mDBU2=rQi2Kh_v21Su9mD3-B8rvNTaFQqqGcnYrA@mail.gmail.com>
Message-ID: <ecd49e5b55a2eb1fb0ae9bca702cfcda@blixtmail.se>

Hi,

gdalwarp has an option -r that allows min and max and -tr for output resolution. But the problem remains how to assemble the results in a pyramid the way gdaladdo does.

/Lars S.

14 oktober 2020 kl. 11:03, "pt test" <pttest68 at gmail.com (mailto:pttest68 at gmail.com?to=%22pt%20test%22%20<pttest68 at gmail.com>)> skrev:
Hi
I have a DEM , DTM , file.
I need to create pyramid layers, where the values choses are not the average, but the max value from the resampled area. 
and the same using min value from the resampled area. 
There is the gdaladdo application. 
I could not find a mode. 
Is there some way to do this? 
documentation has these modes 
	-r {nearest,average,gauss,cubic,cubicspline,lanczos,average_magphase,mode} 
Is there a way to use them. and how? 
Thanks in advance
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201014/000c142e/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Fri Oct 16 07:15:49 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Fri, 16 Oct 2020 07:15:49 -0700 (MST)
Subject: [gdal-dev] Creating DTM Pyramids with max values,
 and dtm pyramid with min values
In-Reply-To: <ecd49e5b55a2eb1fb0ae9bca702cfcda@blixtmail.se>
References: <CANfdFKaWQ5mDBU2=rQi2Kh_v21Su9mD3-B8rvNTaFQqqGcnYrA@mail.gmail.com>
 <ecd49e5b55a2eb1fb0ae9bca702cfcda@blixtmail.se>
Message-ID: <1602857749169-0.post@n6.nabble.com>

Hi,

The problem with tailor made overviews can be solved with VRT
https://gdal.org/drivers/raster/vrt.html.

"Overview: This optional element describes one overview level for the band.
It should have a child SourceFilename and SourceBand element. The
SourceFilename may have a relativeToVRT boolean attribute. Multiple elements
may be used to describe multiple overviews."

-Jukka Rahkonen-


Lars Schylberg-4 wrote
> Hi,
> 
> gdalwarp has an option -r that allows min and max and -tr for output
> resolution. But the problem remains how to assemble the results in a
> pyramid the way gdaladdo does.
> 
> /Lars S.





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From njacadieux.gitlab at gmail.com  Fri Oct 16 08:51:17 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Fri, 16 Oct 2020 11:51:17 -0400
Subject: [gdal-dev] Coordinate space to pixel space with image rotation
 in python
In-Reply-To: <1616349b-456e-36aa-3095-a19d25b081e4@archeotec.ca>
References: <9463e0c1-6e31-f215-dfc2-1ed8ee6d9839@archeotec.ca>
 <1619812.2vAKuPPrqJ@even-i700>
 <1616349b-456e-36aa-3095-a19d25b081e4@archeotec.ca>
Message-ID: <4d63d28b-eb93-bddd-aafc-27db4ce3409b@gmail.com>

On 2020-10-16 11:49 a.m., Nicolas Cadieux wrote:
> Hi again! (a few months later...)
>
> What is the best practice for reading a single pixel in the raster?
>
> structval = raster_band.ReadRaster(column, row, 1, 1, 1, 1, 
> raster_band.DataType)
>
> or
>
> structval = raster_band.ReadRaster(int(column), int(row), 1, 1, 1, 1, 
> raster_band.DataType)
>
> Nicolas
>
> On 2020-01-28 12:30 p.m., Even Rouault wrote:
>> Nicolas,
>>
>>> It's easy to go from coordinate space to pixel space in python using
>>> something like.
>>>
>>> pixel_x  =  int(-124114.3  - geo_transform[0])/geo_transform[1])
>>>
>>> What is the trick when there is an image rotation?
>> Compute the inverse geotransform with
>> https://gdal.org/api/raster_c_api.html?highlight=invgeotransform#_CPPv419GDALInvGeoTransformPdPd 
>>
>>
>> (gdal.InvGeoTransform(gt) in Python )
>>
>> And then use the coordinates in coordinate space as the input for 
>> this inverse geotransform
>>
>> column = inv_gt[0] + X * inv_gt[1] + Y * inv_gt[2]
>> row    = inv_gt[3] + X * inv_gt[4] + Y * inv_gt[5]
>>
>>
>>> Also, as a second
>>> very beginner question, what is the difference between geo_transform[2]
>>> and geo_transform[4]?
>> There are defined by the relationships at
>> https://gdal.org/user/raster_data_model.html#affine-geotransform
>>
>> Even
>>

From dhyfb at foxmail.com  Sat Oct 17 00:44:15 2020
From: dhyfb at foxmail.com (=?utf-8?B?WWFuZw==?=)
Date: Sat, 17 Oct 2020 15:44:15 +0800
Subject: [gdal-dev] JNI error for OpenFileGDB driver in Concurrent
	environment
Message-ID: <tencent_56CE128E0D66ED7606676BA41E97EFBA0907@qq.com>

I am using gdal with java binding in my web application to load .gdb data through the OpenFileGDB driver, however I found that for a single request, it will work as expected, but some JNI related error will occur when multiple requests to be served at the same time, like this:
 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1333 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1417 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1333 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1417 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1515 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1515 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1346 ERROR 1: Error occurred in e:\sdk\vc15x64\gdal\gdal\ogr\ogrsf_frmts\openfilegdb\filegdbtable.cpp at line 1417 
Then the whole JVM will crash. And one of the auto-generated crash log file has been uploaded here: https://pastebin.ubuntu.com/p/FBr86Qqnqc/
 
So I wonder if there are any instructions about the usage of gdal java api, for example which resources have to be released at when, and which resources support multiple threads and etc.
 ​
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201017/7aa1d379/attachment.html>

From even.rouault at spatialys.com  Sat Oct 17 03:09:50 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 17 Oct 2020 12:09:50 +0200
Subject: [gdal-dev] JNI error for OpenFileGDB driver in Concurrent
	environment
In-Reply-To: <tencent_56CE128E0D66ED7606676BA41E97EFBA0907@qq.com>
References: <tencent_56CE128E0D66ED7606676BA41E97EFBA0907@qq.com>
Message-ID: <1724624.Tbc2cE3qIB@even-i700>

On samedi 17 octobre 2020 15:44:15 CEST Yang wrote:
> I am using gdal with java binding in my web application to load .gdb data
> through the OpenFileGDB driver, however I found that for a single request,
> it will work as expected, but some JNI related error will occur when
> multiple requests to be served at the same time, like this:

Do you use the same GDAL dataset object concurrently from several threads ? If 
so, that's the reason. No GDAL objects can't be used concurrently. If you want 
to read from several threads, you need to open one dataset object per thread.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Sat Oct 17 08:12:48 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sat, 17 Oct 2020 12:12:48 -0300
Subject: [gdal-dev] Happy 22nd birthday to GDAL !
Message-ID: <489bd366-ffa8-e1c9-6598-0da5bbf789c2@gatewaygeomatics.com>

Happy 22nd birthday to GDAL ! From the first commit on 1998-10-17 from a 
small rural town outside of Ottawa Canada, to a CVS repository, to 
almost every geospatial software installation on the planet (and 
satellites and other planets!) in 22 years. The ultimate example of 
sharing & community.  Please celebrate the wonders of GDAL today, and 
thanks to everyone, who ever used it, contributed code or documentation, 
spoke about it at events, promoted it to their management, distributed 
it, or just plain gave it some love - this couldn't have happened 
without everyone one of you/us.   Thanks and happy birthday GDAL !!!

-jeff




-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/




From xycarto at gmail.com  Sun Oct 18 22:27:45 2020
From: xycarto at gmail.com (Ian Reese)
Date: Mon, 19 Oct 2020 18:27:45 +1300
Subject: [gdal-dev] MVT Driver, Tiling Scheme NZTM
Message-ID: <CAAm=p+sD4_gvtfSw3_vg0OERFgvtYs9rV0wpmP7GX_dapdZ6kA@mail.gmail.com>

I am creating a custom tiling scheme for NZTM, using the MVT driver, and
outputting to a directory.

ogr2ogr -progress -f MVT  wellyDEM_50mContour_nztm_simp
../wellyDEM_contour_50m_simp.shp -dsco MINZOOM=0 -dsco MAXZOOM=8 -dsco
COMPRESS=NO -dsco TILING_SCHEME=EPSG:2193,-1000000,10000000,2293760

In the render, there are no errors and the process completes just fine. If
I use the .pbf files in an NZTM map on Leaflet, everything seems to go fine
until I reach Zoom 8. The grid structure created for the .pbf files no
longer lines up with an NZTM map.  I suspect this is due to the fact that
NZTM does not have a structure where the resolutions half for each zoom
scale and at zoom 8, this is where this first happens.

NZTM Map Tile Resolutions
resolutions =
[8960.0,4480.0,2240.0,1120.0,560.0,280.0,140.0,70.0,28.0,14.0,7.0,2.8,1.4,0.7,0.28,0.14,0.07]

Is there any way I can use the resolutions also when building the tile
cache? If I could, do you think this would this solve the alignment issue?

Cheers,

Ian

-- 
Ian C Reese
https://xycarto.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201019/eeecfe87/attachment.html>

From miurahr at linux.com  Sun Oct 18 22:46:32 2020
From: miurahr at linux.com (=?UTF-8?B?772N772J772V772S772B77yg772M772J772O772V772Y?=)
Date: Mon, 19 Oct 2020 14:46:32 +0900
Subject: [gdal-dev] [Docs] Propose localization of gdal documentation
Message-ID: <1753f651c0c.e6b5b108202096.6374630179882462152@linux.com>

Hi

I'd like to propose to move gdal doc to be i18n-ed.

Now documentations are compiled with sphinx, and sphinx has a good i18n/l10n facility, and it is very easy..
If you are welcome for the move, I'd like to propose some updates for gdal github project.

* How to i18n-ed sphinx documentation.

1. add `locale_dirs = ['locale/']` to `doc/source/conf.py`
2. `$ pip install sphinx-intl`
3. run `$ make gettext` and `$ sphinx-intl update -l ja -l de`
4. Translate generated PO files under `doc/source/locale/<lang>/LC_MESSAGES/`
5. `$ make -Dlanguage=ja html`

When we are ready to provide i18n documentation with translated PO files,
we can produce localized html using sphinx on azure-pipelines.

I'd ike to contribute a Japanese translation of documentations.
So I have a private project to do that using OmegaT CAT tool.

https://github.com/miurahr/gdal_docs_ja

--
Hiroshi




From even.rouault at spatialys.com  Mon Oct 19 01:25:59 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 19 Oct 2020 10:25:59 +0200
Subject: [gdal-dev] MVT Driver, Tiling Scheme NZTM
In-Reply-To: <CAAm=p+sD4_gvtfSw3_vg0OERFgvtYs9rV0wpmP7GX_dapdZ6kA@mail.gmail.com>
References: <CAAm=p+sD4_gvtfSw3_vg0OERFgvtYs9rV0wpmP7GX_dapdZ6kA@mail.gmail.com>
Message-ID: <5593536.GOuUWKKyNj@even-i700>

Ian,

> I am creating a custom tiling scheme for NZTM, using the MVT driver, and
> outputting to a directory.
> 
> ogr2ogr -progress -f MVT  wellyDEM_50mContour_nztm_simp
> ../wellyDEM_contour_50m_simp.shp -dsco MINZOOM=0 -dsco MAXZOOM=8 -dsco
> COMPRESS=NO -dsco TILING_SCHEME=EPSG:2193,-1000000,10000000,2293760
> 
> In the render, there are no errors and the process completes just fine. If
> I use the .pbf files in an NZTM map on Leaflet, everything seems to go fine
> until I reach Zoom 8. The grid structure created for the .pbf files no
> longer lines up with an NZTM map.  I suspect this is due to the fact that
> NZTM does not have a structure where the resolutions half for each zoom
> scale and at zoom 8, this is where this first happens.
> 
> NZTM Map Tile Resolutions
> resolutions =
> [8960.0,4480.0,2240.0,1120.0,560.0,280.0,140.0,70.0,28.0,14.0,7.0,2.8,1.4,0.
> 7,0.28,0.14,0.07]
> 
> Is there any way I can use the resolutions also when building the tile
> cache? If I could, do you think this would this solve the alignment issue?

The MVT driver only supports currently zoom levels varying by a factor of 2, 
which explains the bad rendering starting with zoom 8. The driver could likely 
be extended to support the JSON files that describe a tiling matrix set, that 
are now supported (master / 3.2dev) by the COG and GPKG drivers for their 
TILING_SCHEME creation option.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Oct 19 01:33:03 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 19 Oct 2020 10:33:03 +0200
Subject: [gdal-dev] [Docs] Propose localization of gdal documentation
In-Reply-To: <1753f651c0c.e6b5b108202096.6374630179882462152@linux.com>
References: <1753f651c0c.e6b5b108202096.6374630179882462152@linux.com>
Message-ID: <2743495.MR7GGTK0aG@even-i700>

Hi Hiroshi,

> I'd like to propose to move gdal doc to be i18n-ed.
> 
> Now documentations are compiled with sphinx, and sphinx has a good i18n/l10n
> facility, and it is very easy.. If you are welcome for the move, I'd like
> to propose some updates for gdal github project.
> 
> * How to i18n-ed sphinx documentation.
> 
> 1. add `locale_dirs = ['locale/']` to `doc/source/conf.py`
> 2. `$ pip install sphinx-intl`
> 3. run `$ make gettext` and `$ sphinx-intl update -l ja -l de`
> 4. Translate generated PO files under
> `doc/source/locale/<lang>/LC_MESSAGES/` 5. `$ make -Dlanguage=ja html`
> 
> When we are ready to provide i18n documentation with translated PO files,
> we can produce localized html using sphinx on azure-pipelines.
> 
> I'd ike to contribute a Japanese translation of documentations.
> So I have a private project to do that using OmegaT CAT tool.
> 
> https://github.com/miurahr/gdal_docs_ja

Sounds interesting. I assume you won't translate the ~ 1000 pages of doc we 
have currently, though ?

We'd probably need some instructions somewhere (doc/README.md ?) to explain 
the process on how to create & update translations.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Oct 19 05:41:32 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 19 Oct 2020 14:41:32 +0200
Subject: [gdal-dev] release/3.2 branch created
Message-ID: <1965236.XjqgtJza9S@even-i700>

Hi,

I've now forked a release/3.2 branch from master, per our feature freeze. So 
this branch should receive bug fixes only. It is high time for people to test 
it before the release candidate next week.

See the preliminary
https://github.com/OSGeo/gdal/blob/release/3.2/gdal/NEWS
Please submit pull requests if fixes / changes are needed.

Despite having halved the period for this feature release compared to our 
previous habit, the NEWS for 3.2.0 is still 580 line long (compiled from a raw 
log of ~ 5000 lines), whereas it was ~ 800 lines usually.

Master is for 3.3.0dev.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Oct 19 07:31:16 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 19 Oct 2020 16:31:16 +0200
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
Message-ID: <51721315.vnvDoALjZR@even-i700>

Hi,

So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR 3.1.4 
release candidate, which should be the final one in the 3.1 series.

Pick up an archive among the following ones (by ascending size):

  https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
  https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
  https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip

A snapshot of the gdalautotest suite is also available :

  https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
  https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip

GDAL-GRASS plugin:

  https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz

The NEWS file is here :

  https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS

I'll call for a vote promoting it to final soon if no
serious problems are reported before.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jluis at ualg.pt  Mon Oct 19 15:03:48 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Mon, 19 Oct 2020 22:03:48 +0000
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <51721315.vnvDoALjZR@even-i700>
References: <51721315.vnvDoALjZR@even-i700>
Message-ID: <AM6PR04MB395936AF5037D3527F9453FAA61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>

Even,

I'm puzzled with this but after updating and building GDAL+PROJ today (master) one of my MEX dlls that depend on GDAL and PROJ started to error with

Invalid MEX-file 'C:\progs_cygw\GMTdev\gmt5\compileds\gmt6\VC14_64\bin\gmtmex.mexw64': The specified procedure could not be found.

I managed to trace it to this likely source provided by DependencyWalker. I don't get it  because it seems to indicate that "proj_crs_get_datum_ensemble" is not exported but that is not the case. Any new use of that function?

Joaquim

-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: Monday, October 19, 2020 3:31 PM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] GDAL 3.1.4 RC1 available

Hi,

So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR 3.1.4 release candidate, which should be the final one in the 3.1 series.

Pick up an archive among the following ones (by ascending size):

  https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
  https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
  https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip

A snapshot of the gdalautotest suite is also available :

  https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
  https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip

GDAL-GRASS plugin:

  https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz

The NEWS file is here :

  https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS

I'll call for a vote promoting it to final soon if no serious problems are reported before.

Best regards,

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com _______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
A non-text attachment was scrubbed...
Name: Resized_Image.jpg
Type: image/jpeg
Size: 57977 bytes
Desc: Resized_Image.jpg
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201019/27723027/attachment-0001.jpg>

From jluis at ualg.pt  Mon Oct 19 16:17:05 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Mon, 19 Oct 2020 23:17:05 +0000
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <AM6PR04MB395936AF5037D3527F9453FAA61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
References: <51721315.vnvDoALjZR@even-i700>
 <AM6PR04MB395936AF5037D3527F9453FAA61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
Message-ID: <AM6PR04MB39592A77E611194E18BB9DC3A61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>

Reverting PROJ to 

d1a0d95da549f7d32bcd8be408afe1fca62a6fb2 
(* Database query: add AuthorityFactory::ObjectType::DYNAMIC_GEODETIC_REFERENCE_FRAME and DYNAMIC_VERTICAL_REFERENCE_FRAME, and make corresponding C API work)

Solved the issue.

-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Joaquim Manuel Freire Luís
Sent: Monday, October 19, 2020 11:04 PM
To: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL 3.1.4 RC1 available

Even,

I'm puzzled with this but after updating and building GDAL+PROJ today (master) one of my MEX dlls that depend on GDAL and PROJ started to error with

Invalid MEX-file 'C:\progs_cygw\GMTdev\gmt5\compileds\gmt6\VC14_64\bin\gmtmex.mexw64': The specified procedure could not be found.

I managed to trace it to this likely source provided by DependencyWalker. I don't get it  because it seems to indicate that "proj_crs_get_datum_ensemble" is not exported but that is not the case. Any new use of that function?

Joaquim

-----Original Message-----
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even Rouault
Sent: Monday, October 19, 2020 3:31 PM
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] GDAL 3.1.4 RC1 available

Hi,

So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR 3.1.4 release candidate, which should be the final one in the 3.1 series.

Pick up an archive among the following ones (by ascending size):

  https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
  https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
  https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip

A snapshot of the gdalautotest suite is also available :

  https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
  https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip

GDAL-GRASS plugin:

  https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz

The NEWS file is here :

  https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS

I'll call for a vote promoting it to final soon if no serious problems are reported before.

Best regards,

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com _______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/gdal-dev

From dniven at ucsc.edu  Mon Oct 19 19:34:14 2020
From: dniven at ucsc.edu (Doug Niven)
Date: Mon, 19 Oct 2020 19:34:14 -0700
Subject: [gdal-dev] How to build GDAL 3.1.3 with sqlite3 3.33.0
Message-ID: <B880E573-73D3-4815-BBDE-08D9AC185A27@ucsc.edu>

Hi Folks,

I’m having trouble building GDAL 3.1.3 with sqlite3 3.33.0 in Centos 7.

The compile steps work, but the build does not.

I believe this is because of conflicts between the built-in version of sqlite3 in Centos (3.7.17) and the newer one (3.33.0) I’ve built in /usr/local/ and /usr/local/lib

/usr/local/lib, where the sqlite3 library files are, is in my LD_LIBRARY_PATH 

/usr/local/bin, where sqlite3 is, is also in my PATH

I’m curious how others have successfully managed to build GDAL with the above in mind.

I’d use the “amalgamated” sqlite3 if I could but need to build sqlite3 with ENABLE_COLUMN_METADATA for PostGIS to work.

Thanks in advance,

Doug

From even.rouault at spatialys.com  Tue Oct 20 02:00:57 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Oct 2020 11:00:57 +0200
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <AM6PR04MB39592A77E611194E18BB9DC3A61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
References: <51721315.vnvDoALjZR@even-i700>
 <AM6PR04MB395936AF5037D3527F9453FAA61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <AM6PR04MB39592A77E611194E18BB9DC3A61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
Message-ID: <2327929.fO6iEgKUOz@even-i700>

Joaquim,

Yes GDAL 3.1.4 makes use of the new function proj_crs_get_datum_ensemble() of 
PROJ master (tested by checking PROJ version number to be >= 7.2 since this is 
queued for the PROJ 7.2 release in a few days). So I suspect you might build 
GDAL against the header of a recent PROJ master, but at runtime use an older 
version of the .dll that has not the symbol

Even

> Reverting PROJ to 
> 
> d1a0d95da549f7d32bcd8be408afe1fca62a6fb2 
> (* Database query: add
> AuthorityFactory::ObjectType::DYNAMIC_GEODETIC_REFERENCE_FRAME and
> DYNAMIC_VERTICAL_REFERENCE_FRAME, and make corresponding C API work)
 
> Solved the issue.
> 
> -----Original Message-----
> From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Joaquim
> Manuel Freire Luís
 Sent: Monday, October 19, 2020 11:04 PM
> To: Even Rouault <even.rouault at spatialys.com>; gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] GDAL 3.1.4 RC1 available
> 
> Even,
> 
> I'm puzzled with this but after updating and building GDAL+PROJ today
> (master) one of my MEX dlls that depend on GDAL and PROJ started to error
> with
 
> Invalid MEX-file
> 'C:\progs_cygw\GMTdev\gmt5\compileds\gmt6\VC14_64\bin\gmtmex.mexw64': The
> specified procedure could not be found.
 
> I managed to trace it to this likely source provided by DependencyWalker. I
> don't get it  because it seems to indicate that
> "proj_crs_get_datum_ensemble" is not exported but that is not the case. Any
> new use of that function?
 
> Joaquim
> 
> -----Original Message-----
> From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even Rouault
> Sent: Monday, October 19, 2020 3:31 PM
> To: gdal-dev at lists.osgeo.org
> Subject: [gdal-dev] GDAL 3.1.4 RC1 available
> 
> Hi,
> 
> So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR 3.1.4
> release candidate, which should be the final one in the 3.1 series.
 
> Pick up an archive among the following ones (by ascending size):
> 
>   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
>   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
>   https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>   https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
>   https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip
> 
> GDAL-GRASS plugin:
> 
>   https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz
> 
> The NEWS file is here :
> 
>   https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS
> 
> I'll call for a vote promoting it to final soon if no serious problems are
> reported before.
 
> Best regards,
> 
> Even
> 
> --
> Spatialys - Geospatial professional services http://www.spatialys.com
> _______________________________________________
 gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Tue Oct 20 02:07:31 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 20 Oct 2020 11:07:31 +0200
Subject: [gdal-dev] How to build GDAL 3.1.3 with sqlite3 3.33.0
In-Reply-To: <B880E573-73D3-4815-BBDE-08D9AC185A27@ucsc.edu>
References: <B880E573-73D3-4815-BBDE-08D9AC185A27@ucsc.edu>
Message-ID: <CABUeae_DsDC4w9XMLqesTgN4V=kA0LLpm_psDu-M+N-5HUzctg@mail.gmail.com>

On Tue, 20 Oct 2020 at 04:34, Doug Niven <dniven at ucsc.edu> wrote:
>
> I’m having trouble building GDAL 3.1.3 with sqlite3 3.33.0 in Centos 7.
>
> The compile steps work, but the build does not.
> I believe this is because of conflicts between the built-in version of sqlite3 in Centos (3.7.17) and the newer one (3.33.0) I’ve built in /usr/local/ and /usr/local/lib
> /usr/local/lib, where the sqlite3 library files are, is in my LD_LIBRARY_PATH
> /usr/local/bin, where sqlite3 is, is also in my PATH
>
> I’m curious how others have successfully managed to build GDAL with the above in mind.

As usual:

./configure --help
./configure --help | grep -i sqlite

So, you should be able to
./configure --with-sqlite3=/usr/local

as per
https://github.com/OSGeo/gdal/blob/master/gdal/m4/ax_lib_sqlite3.m4#L36-L37

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Tue Oct 20 03:40:30 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Oct 2020 12:40:30 +0200
Subject: [gdal-dev] 3.1.4 RC2 available [Re:  GDAL 3.1.4 RC1 available]
In-Reply-To: <51721315.vnvDoALjZR@even-i700>
References: <51721315.vnvDoALjZR@even-i700>
Message-ID: <18649585.ZiKg2E4CLc@even-i700>

Hi,

I've generated a RC2 that differs from RC1 with a single bug fix in configure 
regarding Debian and CharLS 2.1 (see https://github.com/OSGeo/gdal/pull/3083)
 
   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.xz
   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.gz
   https://download.osgeo.org/gdal/3.1.4/gdal314rc2.zip
 
Even

> Hi,
> 
> So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR 3.1.4
> release candidate, which should be the final one in the 3.1 series.
> 
> Pick up an archive among the following ones (by ascending size):
> 
>   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
>   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
>   https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>   https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
>   https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip
> 
> GDAL-GRASS plugin:
> 
>   https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz
> 
> The NEWS file is here :
> 
>   https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS
> 
> I'll call for a vote promoting it to final soon if no
> serious problems are reported before.
> 
> Best regards,
> 
> Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jluis at ualg.pt  Tue Oct 20 04:27:13 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Tue, 20 Oct 2020 11:27:13 +0000
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <2327929.fO6iEgKUOz@even-i700>
References: <51721315.vnvDoALjZR@even-i700>
 <AM6PR04MB395936AF5037D3527F9453FAA61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <AM6PR04MB39592A77E611194E18BB9DC3A61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <2327929.fO6iEgKUOz@even-i700>
Message-ID: <AM6PR04MB3959677947CB03EB976235D0A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>

Even,

I don't think that was the case. I use a build system that resemble a bit homebrew. All packages are built in their own directories and SATAY there. Then I have a batch that creates symlinks do a directory that is the only in the computer path for my builds. So when I rebuild any package it gets automatically updated in my machine. Yes I did rebuild PROJ and GDAL from master as I always do and the problem arise but when I reverted PROJ to a commit only 9 days older (d1a0d95da549f7d32bcd8be408afe1fca62a6fb2), the problem disappeared.

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: Tuesday, October 20, 2020 10:01 AM
To: Joaquim Manuel Freire Luís <jluis at ualg.pt>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL 3.1.4 RC1 available

Joaquim,

Yes GDAL 3.1.4 makes use of the new function proj_crs_get_datum_ensemble() of PROJ master (tested by checking PROJ version number to be >= 7.2 since this is queued for the PROJ 7.2 release in a few days). So I suspect you might build GDAL against the header of a recent PROJ master, but at runtime use an older version of the .dll that has not the symbol

Even

> Reverting PROJ to
> 
> d1a0d95da549f7d32bcd8be408afe1fca62a6fb2
> (* Database query: add
> AuthorityFactory::ObjectType::DYNAMIC_GEODETIC_REFERENCE_FRAME and 
> DYNAMIC_VERTICAL_REFERENCE_FRAME, and make corresponding C API work)
 
> Solved the issue.
> 
> -----Original Message-----
> From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Joaquim 
> Manuel Freire Luís
 Sent: Monday, October 19, 2020 11:04 PM
> To: Even Rouault <even.rouault at spatialys.com>; 
> gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] GDAL 3.1.4 RC1 available
> 
> Even,
> 
> I'm puzzled with this but after updating and building GDAL+PROJ today
> (master) one of my MEX dlls that depend on GDAL and PROJ started to 
> error with
 
> Invalid MEX-file
> 'C:\progs_cygw\GMTdev\gmt5\compileds\gmt6\VC14_64\bin\gmtmex.mexw64': 
> The specified procedure could not be found.
 
> I managed to trace it to this likely source provided by 
> DependencyWalker. I don't get it  because it seems to indicate that 
> "proj_crs_get_datum_ensemble" is not exported but that is not the 
> case. Any new use of that function?
 
> Joaquim
> 
> -----Original Message-----
> From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Even 
> Rouault
> Sent: Monday, October 19, 2020 3:31 PM
> To: gdal-dev at lists.osgeo.org
> Subject: [gdal-dev] GDAL 3.1.4 RC1 available
> 
> Hi,
> 
> So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR 
> 3.1.4 release candidate, which should be the final one in the 3.1 series.
 
> Pick up an archive among the following ones (by ascending size):
> 
>   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
>   https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
>   https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip
> 
> A snapshot of the gdalautotest suite is also available :
> 
>   https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
>   https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip
> 
> GDAL-GRASS plugin:
> 
>   https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz
> 
> The NEWS file is here :
> 
>   https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS
> 
> I'll call for a vote promoting it to final soon if no serious problems 
> are reported before.
 
> Best regards,
> 
> Even
> 
> --
> Spatialys - Geospatial professional services http://www.spatialys.com 
> _______________________________________________
 gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev


--
Spatialys - Geospatial professional services http://www.spatialys.com

From pedrongvenancio at gmail.com  Tue Oct 20 05:58:15 2020
From: pedrongvenancio at gmail.com (=?UTF-8?Q?Pedro_Ven=C3=A2ncio?=)
Date: Tue, 20 Oct 2020 13:58:15 +0100
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on NetCDF
Message-ID: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>

Hi all,

Sorry about the cross posting but today, after the update of OSGeo4W to
qgis-dev 3.15.0-82, I get a QGIS crash both with qgis-dev, qgis-ltr-dev
3.10.10-3 and qgis-rel-dev 3.14.16-3.

I've only looked at Desktop updates and so I cannot say what libs were
updated at the same time.

The crash happens when I try to open some NetCDF file (for instance
http://mf2.ipma.pt/downloads/?latest=arome.2m.relative_humidity&region=PT2
) as raster file, as mesh layer or simply when I open a folder with a
NetCDF file inside Browser.

This is something like this one: https://issues.qgis.org/issues/21162

As it only happens with QGIS "-dev" versions, I believe it can be related
with GDAL 3.2.0dev, but I cannot say what version I had before this update,
maybe from one week or two ago.

Can someone reproduce?

Another issue with QGIS "-dev" versions is related to GRASS. I get this
error message on QGIS initialization, and then I cannot, for instance,
create a new mapset with GRASS Plugin:

GRASS init error: Problem in GRASS initialization, GRASS provider and
plugin will not work : Module built against version 8bcecc9a6 but trying to
use version d8fbd49af. You need to rebuild GRASS GIS or untangle multiple
installations.


I can open two different tickets, but I'm not certain about the right place
to open them.


Thanks!


Best regards,

Pedro Venâncio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/239b1060/attachment.html>

From jluis at ualg.pt  Tue Oct 20 06:59:58 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Tue, 20 Oct 2020 13:59:58 +0000
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on
	NetCDF
In-Reply-To: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
References: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
Message-ID: <AM6PR04MB39593EE173D354D416214E1DA61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>

Pedro,

Probably a netcdf lib related issue. I have a very fresh GDAL build (from yesterday’s master) and can access that file. Either from GDAL or GMT, but my nc lib has not been updated for some time (which is not so bad as nc has had a couple of issues in recent past).

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> On Behalf Of Pedro Venâncio
Sent: Tuesday, October 20, 2020 1:58 PM
To: qgis-developer <qgis-developer at lists.osgeo.org>; gdal-dev at lists.osgeo.org
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on NetCDF

Hi all,

Sorry about the cross posting but today, after the update of OSGeo4W to qgis-dev 3.15.0-82, I get a QGIS crash both with qgis-dev, qgis-ltr-dev 3.10.10-3 and qgis-rel-dev 3.14.16-3.

I've only looked at Desktop updates and so I cannot say what libs were updated at the same time.

The crash happens when I try to open some NetCDF file (for instance http://mf2.ipma.pt/downloads/?latest=arome.2m.relative_humidity&region=PT2 ) as raster file, as mesh layer or simply when I open a folder with a NetCDF file inside Browser.

This is something like this one: https://issues.qgis.org/issues/21162

As it only happens with QGIS "-dev" versions, I believe it can be related with GDAL 3.2.0dev, but I cannot say what version I had before this update, maybe from one week or two ago.

Can someone reproduce?

Another issue with QGIS "-dev" versions is related to GRASS. I get this error message on QGIS initialization, and then I cannot, for instance, create a new mapset with GRASS Plugin:


GRASS init error: Problem in GRASS initialization, GRASS provider and plugin will not work : Module built against version 8bcecc9a6 but trying to use version d8fbd49af. You need to rebuild GRASS GIS or untangle multiple installations.



I can open two different tickets, but I'm not certain about the right place to open them.



Thanks!



Best regards,

Pedro Venâncio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/b146ab99/attachment.html>

From even.rouault at spatialys.com  Tue Oct 20 07:07:51 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Oct 2020 16:07:51 +0200
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <AM6PR04MB3959677947CB03EB976235D0A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
References: <51721315.vnvDoALjZR@even-i700> <2327929.fO6iEgKUOz@even-i700>
 <AM6PR04MB3959677947CB03EB976235D0A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
Message-ID: <24298788.jKiaX8i3Aa@even-i700>

On mardi 20 octobre 2020 11:27:13 CEST Joaquim Manuel Freire Luís wrote:
> Even,
> 
> I don't think that was the case. I use a build system that resemble a bit
> homebrew. All packages are built in their own directories and SATAY there.
> Then I have a batch that creates symlinks do a directory that is the only
> in the computer path for my builds. So when I rebuild any package it gets
> automatically updated in my machine. Yes I did rebuild PROJ and GDAL from
> master as I always do and the problem arise but when I reverted PROJ to a
> commit only 9 days older (d1a0d95da549f7d32bcd8be408afe1fca62a6fb2), the
> problem disappeared.

I have no explanation for your issue but
https://github.com/rouault/gdal/runs/1280973974?check_suite_focus=true
( https://github.com/rouault/gdal/blob/
424c570530bc9725cf7391d023ffbb72edf85ebb/.github/workflows/windows_build.yml )
is an example of a successful Windows build with both PROJ and GDAL masters.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jluis at ualg.pt  Tue Oct 20 07:30:28 2020
From: jluis at ualg.pt (=?iso-8859-1?Q?Joaquim_Manuel_Freire_Lu=EDs?=)
Date: Tue, 20 Oct 2020 14:30:28 +0000
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <24298788.jKiaX8i3Aa@even-i700>
References: <51721315.vnvDoALjZR@even-i700> <2327929.fO6iEgKUOz@even-i700>
 <AM6PR04MB3959677947CB03EB976235D0A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <24298788.jKiaX8i3Aa@even-i700>
Message-ID: <AM6PR04MB39593FA5F91D8DE120FF3675A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>

Well,

Mine also built correctly. It was on usage that the problem surfaced.

-----Original Message-----
From: Even Rouault <even.rouault at spatialys.com> 
Sent: Tuesday, October 20, 2020 3:08 PM
To: Joaquim Manuel Freire Luís <jluis at ualg.pt>
Cc: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] GDAL 3.1.4 RC1 available

On mardi 20 octobre 2020 11:27:13 CEST Joaquim Manuel Freire Luís wrote:
> Even,
> 
> I don't think that was the case. I use a build system that resemble a 
> bit homebrew. All packages are built in their own directories and SATAY there.
> Then I have a batch that creates symlinks do a directory that is the 
> only in the computer path for my builds. So when I rebuild any package 
> it gets automatically updated in my machine. Yes I did rebuild PROJ 
> and GDAL from master as I always do and the problem arise but when I 
> reverted PROJ to a commit only 9 days older 
> (d1a0d95da549f7d32bcd8be408afe1fca62a6fb2), the problem disappeared.

I have no explanation for your issue but https://github.com/rouault/gdal/runs/1280973974?check_suite_focus=true
( https://github.com/rouault/gdal/blob/
424c570530bc9725cf7391d023ffbb72edf85ebb/.github/workflows/windows_build.yml ) is an example of a successful Windows build with both PROJ and GDAL masters.

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com

From jluis at ualg.pt  Tue Oct 20 07:36:16 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Tue, 20 Oct 2020 14:36:16 +0000
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on
	NetCDF
In-Reply-To: <AM6PR04MB39593EE173D354D416214E1DA61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
References: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
 <AM6PR04MB39593EE173D354D416214E1DA61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
Message-ID: <AM6PR04MB3959282F02AB512FCA118548A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>

But I do find something strange in that nc file. Mirone (Matlab independent nc loader) errors when trying to load it because of the  “Conventions” attribute and HDF-Explorer says it’s a “4-byte null-terminated ASCII string” when in fact that attribute has 6-bytes
“CF-1.5”

From: Joaquim Manuel Freire Luís
Sent: Tuesday, October 20, 2020 3:00 PM
To: 'Pedro Venâncio' <pedrongvenancio at gmail.com>; qgis-developer <qgis-developer at lists.osgeo.org>; gdal-dev at lists.osgeo.org
Subject: RE: [gdal-dev] QGIS from OSGeo4W crashes with latest update on NetCDF

Pedro,

Probably a netcdf lib related issue. I have a very fresh GDAL build (from yesterday’s master) and can access that file. Either from GDAL or GMT, but my nc lib has not been updated for some time (which is not so bad as nc has had a couple of issues in recent past).

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> On Behalf Of Pedro Venâncio
Sent: Tuesday, October 20, 2020 1:58 PM
To: qgis-developer <qgis-developer at lists.osgeo.org<mailto:qgis-developer at lists.osgeo.org>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on NetCDF

Hi all,

Sorry about the cross posting but today, after the update of OSGeo4W to qgis-dev 3.15.0-82, I get a QGIS crash both with qgis-dev, qgis-ltr-dev 3.10.10-3 and qgis-rel-dev 3.14.16-3.

I've only looked at Desktop updates and so I cannot say what libs were updated at the same time.

The crash happens when I try to open some NetCDF file (for instance http://mf2.ipma.pt/downloads/?latest=arome.2m.relative_humidity&region=PT2 ) as raster file, as mesh layer or simply when I open a folder with a NetCDF file inside Browser.

This is something like this one: https://issues.qgis.org/issues/21162

As it only happens with QGIS "-dev" versions, I believe it can be related with GDAL 3.2.0dev, but I cannot say what version I had before this update, maybe from one week or two ago.

Can someone reproduce?

Another issue with QGIS "-dev" versions is related to GRASS. I get this error message on QGIS initialization, and then I cannot, for instance, create a new mapset with GRASS Plugin:


GRASS init error: Problem in GRASS initialization, GRASS provider and plugin will not work : Module built against version 8bcecc9a6 but trying to use version d8fbd49af. You need to rebuild GRASS GIS or untangle multiple installations.



I can open two different tickets, but I'm not certain about the right place to open them.



Thanks!



Best regards,

Pedro Venâncio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/fe7c376a/attachment.html>

From even.rouault at spatialys.com  Tue Oct 20 07:36:54 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Oct 2020 16:36:54 +0200
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <AM6PR04MB39593FA5F91D8DE120FF3675A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
References: <51721315.vnvDoALjZR@even-i700> <24298788.jKiaX8i3Aa@even-i700>
 <AM6PR04MB39593FA5F91D8DE120FF3675A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
Message-ID: <5574518.RGiWsuiGL8@even-i700>

On mardi 20 octobre 2020 14:30:28 CEST Joaquim Manuel Freire Luís wrote:
> Well,
> 
> Mine also built correctly. It was on usage that the problem surfaced.

The windows CI build I mentionned also runs successfully GDAL autotest suite.

Even

> 
> -----Original Message-----
> From: Even Rouault <even.rouault at spatialys.com>
> Sent: Tuesday, October 20, 2020 3:08 PM
> To: Joaquim Manuel Freire Luís <jluis at ualg.pt>
> Cc: gdal-dev at lists.osgeo.org
> Subject: Re: [gdal-dev] GDAL 3.1.4 RC1 available
> 
> On mardi 20 octobre 2020 11:27:13 CEST Joaquim Manuel Freire Luís wrote:
> > Even,
> > 
> > I don't think that was the case. I use a build system that resemble a
> > bit homebrew. All packages are built in their own directories and SATAY
> > there. Then I have a batch that creates symlinks do a directory that is
> > the only in the computer path for my builds. So when I rebuild any
> > package it gets automatically updated in my machine. Yes I did rebuild
> > PROJ and GDAL from master as I always do and the problem arise but when I
> > reverted PROJ to a commit only 9 days older
> > (d1a0d95da549f7d32bcd8be408afe1fca62a6fb2), the problem disappeared.
> 
> I have no explanation for your issue but
> https://github.com/rouault/gdal/runs/1280973974?check_suite_focus=true (
> https://github.com/rouault/gdal/blob/
> 424c570530bc9725cf7391d023ffbb72edf85ebb/.github/workflows/windows_build.yml
> ) is an example of a successful Windows build with both PROJ and GDAL
> masters.
> 
> Even
> 
> --
> Spatialys - Geospatial professional services http://www.spatialys.com


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From dniven at ucsc.edu  Tue Oct 20 08:11:02 2020
From: dniven at ucsc.edu (Doug Niven)
Date: Tue, 20 Oct 2020 08:11:02 -0700
Subject: [gdal-dev] How to build GDAL 3.1.3 with sqlite3 3.33.0
Message-ID: <5537B81A-3764-4E4A-841F-87FA4770259F@ucsc.edu>

Well that was easy, thanks Mateusz!

I realize now what threw me off was seeing the following after running ‘configure’

  SQLite support:            yes

But the script was seeing the wrong sqlite3

Anyhow, I’m glad I asked the list, thanks again.

Doug

On Tue, 20 Oct 2020 at 04:34, Doug Niven <dniven at ucsc.edu <mailto:dniven at ucsc.edu>> wrote:
> 
> I’m having trouble building GDAL 3.1.3 with sqlite3 3.33.0 in Centos 7.
> 
> The compile steps work, but the build does not.
> I believe this is because of conflicts between the built-in version of sqlite3 in Centos (3.7.17) and the newer one (3.33.0) I’ve built in /usr/local/ and /usr/local/lib
> /usr/local/lib, where the sqlite3 library files are, is in my LD_LIBRARY_PATH
> /usr/local/bin, where sqlite3 is, is also in my PATH
> 
> I’m curious how others have successfully managed to build GDAL with the above in mind.

As usual:

./configure --help
./configure --help | grep -i sqlite

So, you should be able to
./configure --with-sqlite3=/usr/local

as per
https://github.com/OSGeo/gdal/blob/master/gdal/m4/ax_lib_sqlite3.m4#L36-L37 <https://github.com/OSGeo/gdal/blob/master/gdal/m4/ax_lib_sqlite3.m4#L36-L37>

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net <http://mateusz.loskot.net/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/fe785c30/attachment-0001.html>

From pedrongvenancio at gmail.com  Tue Oct 20 08:12:56 2020
From: pedrongvenancio at gmail.com (=?UTF-8?Q?Pedro_Ven=C3=A2ncio?=)
Date: Tue, 20 Oct 2020 16:12:56 +0100
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on
	NetCDF
In-Reply-To: <AM6PR04MB3959282F02AB512FCA118548A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
References: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
 <AM6PR04MB39593EE173D354D416214E1DA61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <AM6PR04MB3959282F02AB512FCA118548A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
Message-ID: <CAMCJChtG++cj-C_b_YCem=FEAiRWbv+ccn7wNZStq-=FQ8dezg@mail.gmail.com>

Hi Joaquim Luís,

This is an IPMA NetCDF, it was working before the update.

And I think it is in fact a HDF5 library version problem:

> gdalinfo AROME_OPER_001_FC_SP_PT2_025_RH_2-HTGL_2020102000.nc

Warning 1: Recode from UTF-8 to CP_ACP failed with the error: "Invalid
argument".
Warning! ***HDF5 library version mismatched error***
The HDF5 header files used to compile this application do not match
the version used by the HDF5 library to which this application is linked.
Data corruption or segmentation faults may occur if the application
continues.
This can happen when an application was compiled by one version of HDF5 but
linked with a different version of static or shared HDF5 library.
You should recompile the application or check your shared library related
settings such as 'LD_LIBRARY_PATH'.
You can, at your own risk, disable this warning by setting the environment
variable 'HDF5_DISABLE_VERSION_CHECK' to a value of '1'.
Setting it to 2 or higher will suppress the warning messages totally.
Headers are 1.10.4, library is 1.10.5
        SUMMARY OF THE HDF5 CONFIGURATION
        =================================

General Information:
-------------------
                   HDF5 Version: 1.10.5
                  Configured on: 2020-10-19
                  Configured by: Visual Studio 14 2015 Win64
                    Host system: Windows-10.0.19041
              Uname information: Windows
                       Byte sex: little-endian
             Installation point:
D:/src/osgeo4w64/src/hdf5/osgeo4w/install-x86_64

Compiling Options:
------------------
                     Build Mode:
              Debugging Symbols:
                        Asserts:
                      Profiling:
             Optimization Level:

Linking Options:
----------------
                      Libraries:
  Statically Linked Executables: OFF
                        LDFLAGS: /machine:x64
                     H5_LDFLAGS:
                     AM_LDFLAGS:
                Extra libraries:
                       Archiver:
                         Ranlib:

Languages:
----------
                              C: yes
                     C Compiler: C:/Program Files (x86)/Microsoft Visual
Studio 14.0/VC/bin/x86_amd64/cl.exe 19.0.24215.1
                       CPPFLAGS:
                    H5_CPPFLAGS:
                    AM_CPPFLAGS:
                         CFLAGS:  /DWIN32 /D_WINDOWS /W3
                      H5_CFLAGS:
                      AM_CFLAGS:
               Shared C Library: YES
               Static C Library: YES

                        Fortran: OFF
               Fortran Compiler:
                  Fortran Flags:
               H5 Fortran Flags:
               AM Fortran Flags:
         Shared Fortran Library: YES
         Static Fortran Library: YES

                            C++: ON
                   C++ Compiler: C:/Program Files (x86)/Microsoft Visual
Studio 14.0/VC/bin/x86_amd64/cl.exe 19.0.24215.1
                      C++ Flags: /DWIN32 /D_WINDOWS /W3 /GR /EHsc
                   H5 C++ Flags:
                   AM C++ Flags:
             Shared C++ Library: YES
             Static C++ Library: YES

                            JAVA: OFF
                   JAVA Compiler:

Features:
---------
                   Parallel HDF5: OFF
Parallel Filtered Dataset Writes:
              Large Parallel I/O:
              High-level library: ON
                    Threadsafety: ON
             Default API mapping: v110
  With deprecated public symbols: ON
          I/O filters (external):  DEFLATE DECODE
                             MPE:
                      Direct VFD:
                         dmalloc:
  Packages w/ extra debug output:
                     API Tracing: OFF
            Using memory checker: OFF
 Memory allocation sanity checks: OFF
          Function Stack Tracing: OFF
       Strict File Format Checks: OFF
    Optimization Instrumentation:
Bye...

Joaquim Manuel Freire Luís <jluis at ualg.pt> escreveu no dia terça,
20/10/2020 à(s) 15:36:

> But I do find something strange in that nc file. Mirone (Matlab
> independent nc loader) errors when trying to load it because of the
>  “Conventions” attribute and HDF-Explorer says it’s a “4-byte
> null-terminated ASCII string” when in fact that attribute has 6-bytes
>
> “CF-1.5”
>
>
>
> *From:* Joaquim Manuel Freire Luís
> *Sent:* Tuesday, October 20, 2020 3:00 PM
> *To:* 'Pedro Venâncio' <pedrongvenancio at gmail.com>; qgis-developer <
> qgis-developer at lists.osgeo.org>; gdal-dev at lists.osgeo.org
> *Subject:* RE: [gdal-dev] QGIS from OSGeo4W crashes with latest update on
> NetCDF
>
>
>
> Pedro,
>
>
>
> Probably a netcdf lib related issue. I have a very fresh GDAL build (from
> yesterday’s master) and can access that file. Either from GDAL or GMT, but
> my nc lib has not been updated for some time (which is not so bad as nc has
> had a couple of issues in recent past).
>
>
>
> *From:* gdal-dev <gdal-dev-bounces at lists.osgeo.org> *On Behalf Of *Pedro
> Venâncio
> *Sent:* Tuesday, October 20, 2020 1:58 PM
> *To:* qgis-developer <qgis-developer at lists.osgeo.org>;
> gdal-dev at lists.osgeo.org
> *Subject:* [gdal-dev] QGIS from OSGeo4W crashes with latest update on
> NetCDF
>
>
>
> Hi all,
>
>
>
> Sorry about the cross posting but today, after the update of OSGeo4W to
> qgis-dev 3.15.0-82, I get a QGIS crash both with qgis-dev, qgis-ltr-dev
> 3.10.10-3 and qgis-rel-dev 3.14.16-3.
>
>
>
> I've only looked at Desktop updates and so I cannot say what libs were
> updated at the same time.
>
>
>
> The crash happens when I try to open some NetCDF file (for instance
> http://mf2.ipma.pt/downloads/?latest=arome.2m.relative_humidity&region=PT2
> ) as raster file, as mesh layer or simply when I open a folder with a
> NetCDF file inside Browser.
>
>
>
> This is something like this one: https://issues.qgis.org/issues/21162
>
>
>
> As it only happens with QGIS "-dev" versions, I believe it can be related
> with GDAL 3.2.0dev, but I cannot say what version I had before this update,
> maybe from one week or two ago.
>
>
>
> Can someone reproduce?
>
>
>
> Another issue with QGIS "-dev" versions is related to GRASS. I get this
> error message on QGIS initialization, and then I cannot, for instance,
> create a new mapset with GRASS Plugin:
>
>
>
> GRASS init error: Problem in GRASS initialization, GRASS provider and
> plugin will not work : Module built against version 8bcecc9a6 but trying to
> use version d8fbd49af. You need to rebuild GRASS GIS or untangle multiple
> installations.
>
>
>
> I can open two different tickets, but I'm not certain about the right
> place to open them.
>
>
>
> Thanks!
>
>
>
> Best regards,
>
> Pedro Venâncio
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/ac276212/attachment.html>

From jmckenna at gatewaygeomatics.com  Tue Oct 20 08:18:19 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Tue, 20 Oct 2020 12:18:19 -0300
Subject: [gdal-dev] 3.1.4 RC2 available [Re: GDAL 3.1.4 RC1 available]
In-Reply-To: <18649585.ZiKg2E4CLc@even-i700>
References: <51721315.vnvDoALjZR@even-i700> <18649585.ZiKg2E4CLc@even-i700>
Message-ID: <4ddee467-7042-fe57-ae8f-99157eff3b30@gatewaygeomatics.com>

Hi Even,

No issues here on Windows with RC2.  More info:

- MS4W build environment
   - VC 2017
   - proj-master, git-master, curl 7.73.0, sqlite 3.33.0, ...
   - no issues building GDAL 3.1.4 documentation with Sphinx 3.1.2 
(other than the usual Sphinx/Doxygen 26 warnings)
   - I just noticed that proj-master is no longer using my PROJ_LIB 
setting properly (instead with network=on the grids are downloaded into 
the obscure Windows user "AppData" directory....I'll definitely have to 
examine why...but that's for another list/day ha

Thanks,

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/


On 2020-10-20 7:40 a.m., Even Rouault wrote:
> Hi,
> 
> I've generated a RC2 that differs from RC1 with a single bug fix in configure
> regarding Debian and CharLS 2.1 (see https://github.com/OSGeo/gdal/pull/3083)
>   
>     https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.xz
>     https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.gz
>     https://download.osgeo.org/gdal/3.1.4/gdal314rc2.zip
>   
> Even
> 
>> Hi,
>>
>> So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR 3.1.4
>> release candidate, which should be the final one in the 3.1 series.
>>
>> Pick up an archive among the following ones (by ascending size):
>>
>>    https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
>>    https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
>>    https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip
>>
>> A snapshot of the gdalautotest suite is also available :
>>
>>    https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
>>    https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip
>>
>> GDAL-GRASS plugin:
>>
>>    https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz
>>
>> The NEWS file is here :
>>
>>    https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS
>>
>> I'll call for a vote promoting it to final soon if no
>> serious problems are reported before.
>>
>> Best regards,
>>
>> Even
> 
> 

From alansnow21 at gmail.com  Tue Oct 20 08:29:00 2020
From: alansnow21 at gmail.com (Alan Snow)
Date: Tue, 20 Oct 2020 10:29:00 -0500
Subject: [gdal-dev] 3.1.4 RC2 available [Re: GDAL 3.1.4 RC1 available]
In-Reply-To: <4ddee467-7042-fe57-ae8f-99157eff3b30@gatewaygeomatics.com>
References: <51721315.vnvDoALjZR@even-i700> <18649585.ZiKg2E4CLc@even-i700>
 <4ddee467-7042-fe57-ae8f-99157eff3b30@gatewaygeomatics.com>
Message-ID: <CAGybdFRNPLYG9wK09N4bGqiCGA9WmY0yWN-6Q-gkxJqunyYtCw@mail.gmail.com>

Hi Jeff,

Sounds like you found the user writable directory in PROJ 7:

https://proj.org/resource_files.html#where-are-proj-resource-files-looked-for

https://proj.org/development/reference/functions.html#_CPPv440proj_context_get_user_writable_directoryP10PJ_CONTEXTi

Hopefully the links are helpful,
Alan

On Tue, Oct 20, 2020, 10:18 AM Jeff McKenna <jmckenna at gatewaygeomatics.com>
wrote:

> Hi Even,
>
> No issues here on Windows with RC2.  More info:
>
> - MS4W build environment
>    - VC 2017
>    - proj-master, git-master, curl 7.73.0, sqlite 3.33.0, ...
>    - no issues building GDAL 3.1.4 documentation with Sphinx 3.1.2
> (other than the usual Sphinx/Doxygen 26 warnings)
>    - I just noticed that proj-master is no longer using my PROJ_LIB
> setting properly (instead with network=on the grids are downloaded into
> the obscure Windows user "AppData" directory....I'll definitely have to
> examine why...but that's for another list/day ha
>
> Thanks,
>
> -jeff
>
>
>
> --
> Jeff McKenna
> MapServer Consulting and Training Services
> co-founder of FOSS4G
> http://gatewaygeo.com/
>
>
> On 2020-10-20 7:40 a.m., Even Rouault wrote:
> > Hi,
> >
> > I've generated a RC2 that differs from RC1 with a single bug fix in
> configure
> > regarding Debian and CharLS 2.1 (see
> https://github.com/OSGeo/gdal/pull/3083)
> >
> >     https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.xz
> >     https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.gz
> >     https://download.osgeo.org/gdal/3.1.4/gdal314rc2.zip
> >
> > Even
> >
> >> Hi,
> >>
> >> So that we can focus on 3.2.0 and onwards, I have prepared a GDAL/OGR
> 3.1.4
> >> release candidate, which should be the final one in the 3.1 series.
> >>
> >> Pick up an archive among the following ones (by ascending size):
> >>
> >>    https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
> >>    https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
> >>    https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip
> >>
> >> A snapshot of the gdalautotest suite is also available :
> >>
> >>    https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
> >>    https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip
> >>
> >> GDAL-GRASS plugin:
> >>
> >>    https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz
> >>
> >> The NEWS file is here :
> >>
> >>    https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS
> >>
> >> I'll call for a vote promoting it to final soon if no
> >> serious problems are reported before.
> >>
> >> Best regards,
> >>
> >> Even
> >
> >
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/86740969/attachment-0001.html>

From jluis at ualg.pt  Tue Oct 20 08:29:19 2020
From: jluis at ualg.pt (=?utf-8?B?Sm9hcXVpbSBNYW51ZWwgRnJlaXJlIEx1w61z?=)
Date: Tue, 20 Oct 2020 15:29:19 +0000
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on
	NetCDF
In-Reply-To: <CAMCJChtG++cj-C_b_YCem=FEAiRWbv+ccn7wNZStq-=FQ8dezg@mail.gmail.com>
References: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
 <AM6PR04MB39593EE173D354D416214E1DA61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <AM6PR04MB3959282F02AB512FCA118548A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <CAMCJChtG++cj-C_b_YCem=FEAiRWbv+ccn7wNZStq-=FQ8dezg@mail.gmail.com>
Message-ID: <AM6PR04MB3959B67A99DB087634FC5559A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>

Yes, I know that and I also had crossed with that HDF error (nc and HDF libs must be in sync building) but that nc file clearly has its issues. Both Matlab and HDF-Explorer confirm that and even GDAL touches it. See

gdalinfo AROME_OPER_001_FC_SP_PT2_025_RH_2-HTGL_2020102000.nc
Warning 1: No UNIDATA NC_GLOBAL:Conventions attribute

Which is not true. The “Conventions” attribute it’s there but something is wrong with its string value (but not only “Conventions”, at least “long_name” suffers from the same).

From: Pedro Venâncio <pedrongvenancio at gmail.com>
Sent: Tuesday, October 20, 2020 4:13 PM
To: Joaquim Manuel Freire Luís <jluis at ualg.pt>
Cc: qgis-developer <qgis-developer at lists.osgeo.org>; gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] QGIS from OSGeo4W crashes with latest update on NetCDF

Hi Joaquim Luís,

This is an IPMA NetCDF, it was working before the update.

And I think it is in fact a HDF5 library version problem:

> gdalinfo AROME_OPER_001_FC_SP_PT2_025_RH_2-HTGL_2020102000.nc

Warning 1: Recode from UTF-8 to CP_ACP failed with the error: "Invalid argument".
Warning! ***HDF5 library version mismatched error***
The HDF5 header files used to compile this application do not match
the version used by the HDF5 library to which this application is linked.
Data corruption or segmentation faults may occur if the application continues.
This can happen when an application was compiled by one version of HDF5 but
linked with a different version of static or shared HDF5 library.
You should recompile the application or check your shared library related
settings such as 'LD_LIBRARY_PATH'.
You can, at your own risk, disable this warning by setting the environment
variable 'HDF5_DISABLE_VERSION_CHECK' to a value of '1'.
Setting it to 2 or higher will suppress the warning messages totally.
Headers are 1.10.4, library is 1.10.5
        SUMMARY OF THE HDF5 CONFIGURATION
        =================================

General Information:
-------------------
                   HDF5 Version: 1.10.5
                  Configured on: 2020-10-19
                  Configured by: Visual Studio 14 2015 Win64
                    Host system: Windows-10.0.19041
              Uname information: Windows
                       Byte sex: little-endian
             Installation point: D:/src/osgeo4w64/src/hdf5/osgeo4w/install-x86_64

Compiling Options:
------------------
                     Build Mode:
              Debugging Symbols:
                        Asserts:
                      Profiling:
             Optimization Level:

Linking Options:
----------------
                      Libraries:
  Statically Linked Executables: OFF
                        LDFLAGS: /machine:x64
                     H5_LDFLAGS:
                     AM_LDFLAGS:
                Extra libraries:
                       Archiver:
                         Ranlib:

Languages:
----------
                              C: yes
                     C Compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe 19.0.24215.1
                       CPPFLAGS:
                    H5_CPPFLAGS:
                    AM_CPPFLAGS:
                         CFLAGS:  /DWIN32 /D_WINDOWS /W3
                      H5_CFLAGS:
                      AM_CFLAGS:
               Shared C Library: YES
               Static C Library: YES

                        Fortran: OFF
               Fortran Compiler:
                  Fortran Flags:
               H5 Fortran Flags:
               AM Fortran Flags:
         Shared Fortran Library: YES
         Static Fortran Library: YES

                            C++: ON
                   C++ Compiler: C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe 19.0.24215.1
                      C++ Flags: /DWIN32 /D_WINDOWS /W3 /GR /EHsc
                   H5 C++ Flags:
                   AM C++ Flags:
             Shared C++ Library: YES
             Static C++ Library: YES

                            JAVA: OFF
                   JAVA Compiler:

Features:
---------
                   Parallel HDF5: OFF
Parallel Filtered Dataset Writes:
              Large Parallel I/O:
              High-level library: ON
                    Threadsafety: ON
             Default API mapping: v110
  With deprecated public symbols: ON
          I/O filters (external):  DEFLATE DECODE
                             MPE:
                      Direct VFD:
                         dmalloc:
  Packages w/ extra debug output:
                     API Tracing: OFF
            Using memory checker: OFF
 Memory allocation sanity checks: OFF
          Function Stack Tracing: OFF
       Strict File Format Checks: OFF
    Optimization Instrumentation:
Bye...

Joaquim Manuel Freire Luís <jluis at ualg.pt<mailto:jluis at ualg.pt>> escreveu no dia terça, 20/10/2020 à(s) 15:36:
But I do find something strange in that nc file. Mirone (Matlab independent nc loader) errors when trying to load it because of the  “Conventions” attribute and HDF-Explorer says it’s a “4-byte null-terminated ASCII string” when in fact that attribute has 6-bytes
“CF-1.5”

From: Joaquim Manuel Freire Luís
Sent: Tuesday, October 20, 2020 3:00 PM
To: 'Pedro Venâncio' <pedrongvenancio at gmail.com<mailto:pedrongvenancio at gmail.com>>; qgis-developer <qgis-developer at lists.osgeo.org<mailto:qgis-developer at lists.osgeo.org>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Subject: RE: [gdal-dev] QGIS from OSGeo4W crashes with latest update on NetCDF

Pedro,

Probably a netcdf lib related issue. I have a very fresh GDAL build (from yesterday’s master) and can access that file. Either from GDAL or GMT, but my nc lib has not been updated for some time (which is not so bad as nc has had a couple of issues in recent past).

From: gdal-dev <gdal-dev-bounces at lists.osgeo.org<mailto:gdal-dev-bounces at lists.osgeo.org>> On Behalf Of Pedro Venâncio
Sent: Tuesday, October 20, 2020 1:58 PM
To: qgis-developer <qgis-developer at lists.osgeo.org<mailto:qgis-developer at lists.osgeo.org>>; gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on NetCDF

Hi all,

Sorry about the cross posting but today, after the update of OSGeo4W to qgis-dev 3.15.0-82, I get a QGIS crash both with qgis-dev, qgis-ltr-dev 3.10.10-3 and qgis-rel-dev 3.14.16-3.

I've only looked at Desktop updates and so I cannot say what libs were updated at the same time.

The crash happens when I try to open some NetCDF file (for instance http://mf2.ipma.pt/downloads/?latest=arome.2m.relative_humidity&region=PT2 ) as raster file, as mesh layer or simply when I open a folder with a NetCDF file inside Browser.

This is something like this one: https://issues.qgis.org/issues/21162

As it only happens with QGIS "-dev" versions, I believe it can be related with GDAL 3.2.0dev, but I cannot say what version I had before this update, maybe from one week or two ago.

Can someone reproduce?

Another issue with QGIS "-dev" versions is related to GRASS. I get this error message on QGIS initialization, and then I cannot, for instance, create a new mapset with GRASS Plugin:


GRASS init error: Problem in GRASS initialization, GRASS provider and plugin will not work : Module built against version 8bcecc9a6 but trying to use version d8fbd49af. You need to rebuild GRASS GIS or untangle multiple installations.



I can open two different tickets, but I'm not certain about the right place to open them.



Thanks!



Best regards,

Pedro Venâncio
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/fb63793b/attachment-0001.html>

From jmckenna at gatewaygeomatics.com  Tue Oct 20 08:33:09 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Tue, 20 Oct 2020 12:33:09 -0300
Subject: [gdal-dev] 3.1.4 RC2 available [Re: GDAL 3.1.4 RC1 available]
In-Reply-To: <CAGybdFS0sHoQqLKn9Uf0pQ+sQfY=0zBRpfZXBL3OESRQip-nmQ@mail.gmail.com>
References: <51721315.vnvDoALjZR@even-i700> <18649585.ZiKg2E4CLc@even-i700>
 <4ddee467-7042-fe57-ae8f-99157eff3b30@gatewaygeomatics.com>
 <CAGybdFS0sHoQqLKn9Uf0pQ+sQfY=0zBRpfZXBL3OESRQip-nmQ@mail.gmail.com>
Message-ID: <535961e1-2b5d-117e-43df-db64fe322598@gatewaygeomatics.com>

On 2020-10-20 12:27 p.m., Alan Snow wrote:
> Hi Jeff,
> 
> Sounds like you found the user writable directory in PROJ 7:
> 
> https://proj.org/resource_files.html#where-are-proj-resource-files-looked-for
> 
> https://proj.org/development/reference/functions.html#_CPPv440proj_context_get_user_writable_directoryP10PJ_CONTEXTi
> 
> Hopefully the links are helpful,
> Alan

Thanks for the response Alan, yes that's exactly the documentation that 
I have open here, for the user writeable directory in PROJ7, that I've 
been following since the PROJ7 release.  You can see there the mention 
of the PROJ_LIB setting as well, I thought this was working with the 
earlier PROJ7 release, but will do more testing, it could be that I 
moved them from APPPDATA into PROJ_LIB after-the-fact.  Will do more 
testing...

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/



> 
> On Tue, Oct 20, 2020, 10:18 AM Jeff McKenna 
> <jmckenna at gatewaygeomatics.com <mailto:jmckenna at gatewaygeomatics.com>> 
> wrote:
> 
>     Hi Even,
> 
>     No issues here on Windows with RC2.  More info:
> 
>     - MS4W build environment
>         - VC 2017
>         - proj-master, git-master, curl 7.73.0, sqlite 3.33.0, ...
>         - no issues building GDAL 3.1.4 documentation with Sphinx 3.1.2
>     (other than the usual Sphinx/Doxygen 26 warnings)
>         - I just noticed that proj-master is no longer using my PROJ_LIB
>     setting properly (instead with network=on the grids are downloaded into
>     the obscure Windows user "AppData" directory....I'll definitely have to
>     examine why...but that's for another list/day ha
> 
>     Thanks,
> 
>     -jeff
> 
> 
> 
>     -- 
>     Jeff McKenna
>     MapServer Consulting and Training Services
>     co-founder of FOSS4G
>     http://gatewaygeo.com/
> 
> 
>     On 2020-10-20 7:40 a.m., Even Rouault wrote:
>      > Hi,
>      >
>      > I've generated a RC2 that differs from RC1 with a single bug fix
>     in configure
>      > regarding Debian and CharLS 2.1 (see
>     https://github.com/OSGeo/gdal/pull/3083)
>      >
>      > https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.xz
>      > https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc2.tar.gz
>      > https://download.osgeo.org/gdal/3.1.4/gdal314rc2.zip
>      >
>      > Even
>      >
>      >> Hi,
>      >>
>      >> So that we can focus on 3.2.0 and onwards, I have prepared a
>     GDAL/OGR 3.1.4
>      >> release candidate, which should be the final one in the 3.1 series.
>      >>
>      >> Pick up an archive among the following ones (by ascending size):
>      >>
>      >> https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.xz
>      >> https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4rc1.tar.gz
>      >> https://download.osgeo.org/gdal/3.1.4/gdal314rc1.zip
>      >>
>      >> A snapshot of the gdalautotest suite is also available :
>      >>
>      >> https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.tar.gz
>      >> https://download.osgeo.org/gdal/3.1.4/gdalautotest-3.1.4rc1.zip
>      >>
>      >> GDAL-GRASS plugin:
>      >>
>      >> https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz
>      >>
>      >> The NEWS file is here :
>      >>
>      >> https://github.com/OSGeo/gdal/blob/v3.1.4RC1/gdal/NEWS
>      >>
>      >> I'll call for a vote promoting it to final soon if no
>      >> serious problems are reported before.
>      >>
>      >> Best regards,
>      >>
>      >> Even
>      >
>      >
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
> 


From sean at mapbox.com  Tue Oct 20 08:43:19 2020
From: sean at mapbox.com (Sean Gillies)
Date: Tue, 20 Oct 2020 09:43:19 -0600
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <2327929.fO6iEgKUOz@even-i700>
References: <51721315.vnvDoALjZR@even-i700>
 <AM6PR04MB395936AF5037D3527F9453FAA61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <AM6PR04MB39592A77E611194E18BB9DC3A61E0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <2327929.fO6iEgKUOz@even-i700>
Message-ID: <CADPhZXwJeKV1VrPag8bznSuYRhTCuWCnDJekVkHATniw4mN=XQ@mail.gmail.com>

Hi Even,

On Tue, Oct 20, 2020 at 3:01 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Joaquim,
>
> Yes GDAL 3.1.4 makes use of the new function proj_crs_get_datum_ensemble()
> of
> PROJ master (tested by checking PROJ version number to be >= 7.2 since
> this is
> queued for the PROJ 7.2 release in a few days). So I suspect you might
> build
> GDAL against the header of a recent PROJ master, but at runtime use an
> older
> version of the .dll that has not the symbol
>
> Even
>

Are you saying that GDAL 3.1.4 requires PROJ 7.2 or only that it uses the
PROJ 7.2 API when available? GDAL 3.1.3 works with PROJ 6.x and it would be
least surprising if GDAL 3.1.4 did as well.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/83138f3f/attachment.html>

From even.rouault at spatialys.com  Tue Oct 20 09:12:14 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Oct 2020 18:12:14 +0200
Subject: [gdal-dev] GDAL 3.1.4 RC1 available
In-Reply-To: <CADPhZXwJeKV1VrPag8bznSuYRhTCuWCnDJekVkHATniw4mN=XQ@mail.gmail.com>
References: <51721315.vnvDoALjZR@even-i700> <2327929.fO6iEgKUOz@even-i700>
 <CADPhZXwJeKV1VrPag8bznSuYRhTCuWCnDJekVkHATniw4mN=XQ@mail.gmail.com>
Message-ID: <1627240.InIONNAER1@even-i700>

On mardi 20 octobre 2020 09:43:19 CEST Sean Gillies wrote:
> Hi Even,
> 
> On Tue, Oct 20, 2020 at 3:01 AM Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > Joaquim,
> > 
> > Yes GDAL 3.1.4 makes use of the new function proj_crs_get_datum_ensemble()
> > of
> > PROJ master (tested by checking PROJ version number to be >= 7.2 since
> > this is
> > queued for the PROJ 7.2 release in a few days). So I suspect you might
> > build
> > GDAL against the header of a recent PROJ master, but at runtime use an
> > older
> > version of the .dll that has not the symbol
> > 
> > Even
> 
> Are you saying that GDAL 3.1.4 requires PROJ 7.2 or only that it uses the
> PROJ 7.2 API when available?

The later. GDAL 3.1.4 can be built with any PROJ >= 6

GDAL 3.1.4 should work fine with most WKT CRS, but will have issues in some 
functions of OGRSpatialReference when dealing with CRS built from new 
WKT2:2019 CRS that use the ENSEMBLE[] structure (such as now generated by 
epsg.org WKT output, or future PROJ 8). See
https://github.com/OSGeo/PROJ/pull/2371

To address that, a new function was added in PROJ 7.2. So GDAL 3.1.4 will work 
best with PROJ 7.2. And with PROJ < 7.2, it will error out (GDAL < 3.1.4 would 
crash) when using CopyGeogCSFrom(), SetGeocCS(), StripTOWGS84IfKnownDatum() 
and CloneGeogCS() (and their callers...) on a CRS with a ENSEMBLE[]

So my advice will be for people updating to latest GDAL and PROJ, to make sure 
to rebuild GDAL against PROJ 7.2 when it will be released.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From j1 at jimenezshaw.com  Tue Oct 20 09:52:29 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 20 Oct 2020 18:52:29 +0200
Subject: [gdal-dev] Compound CRS in shapefile
Message-ID: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>

Hi

When I create a 3D shapefile with GDAL, and I provide as SpatialReference a
compound CRS, it generates the prj file with the COMPD_CS syntax. Ok so far.

However, when I open the shapefile in QGIS, it does not recognize the CRS
at all (neither the horizontal part)

Is that intentional? QGIS is using GDAL to deal with shapefiles, afaik.

I could not find any reference to the prj in the shapefile documentation.

Thanks

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201020/a112f4a0/attachment.html>

From even.rouault at spatialys.com  Tue Oct 20 10:08:10 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Oct 2020 19:08:10 +0200
Subject: [gdal-dev] [QGIS-Developer] QGIS from OSGeo4W crashes with
	latest update on NetCDF
In-Reply-To: <CAMCJChtG++cj-C_b_YCem=FEAiRWbv+ccn7wNZStq-=FQ8dezg@mail.gmail.com>
References: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
 <AM6PR04MB3959282F02AB512FCA118548A61F0@AM6PR04MB3959.eurprd04.prod.outlook.com>
 <CAMCJChtG++cj-C_b_YCem=FEAiRWbv+ccn7wNZStq-=FQ8dezg@mail.gmail.com>
Message-ID: <1709761.s2SrFTqejA@even-i700>

On mardi 20 octobre 2020 16:12:56 CEST Pedro Venâncio wrote:
> Hi Joaquim Luís,
> 
> This is an IPMA NetCDF, it was working before the update.
> 
> And I think it is in fact a HDF5 library version problem:
> > gdalinfo AROME_OPER_001_FC_SP_PT2_025_RH_2-HTGL_2020102000.nc
> 
> Warning 1: Recode from UTF-8 to CP_ACP failed with the error: "Invalid
> argument".
> Warning! ***HDF5 library version mismatched error***

Jürgen told me that he has rebuilt the netCDF lib against the new HDF5 lib, so 
hopefully if you update your OSGeo4W install (to netcdf 4.6.2-2 I think), that 
should work now.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Oct 20 10:24:41 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 20 Oct 2020 19:24:41 +0200
Subject: [gdal-dev] Compound CRS in shapefile
In-Reply-To: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>
References: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>
Message-ID: <1805161.YBV7mhdCHb@even-i700>

Javier,

> When I create a 3D shapefile with GDAL, and I provide as SpatialReference a
> compound CRS, it generates the prj file with the COMPD_CS syntax. Ok so far.

Always be specific: show the content of the .prj

> However, when I open the shapefile in QGIS, it does not recognize the CRS
> at all (neither the horizontal part)

What do you call "recognize" exactly: it doesn't find any CRS information, or 
doesn't retrieve a EPSG code (retrieving a EPSG code from ESRI WKT is deeply 
dark magic so doesn't always work) ?

> Is that intentional? QGIS is using GDAL to deal with shapefiles, afaik.

Probably for QGIS mailing list or tracker then.

I've tested the following:

ogr2ogr out.shp poly.shp -a_srs EPSG:7405

ogrinfo out.shp reports correctly a compoundCRS.

Opening that in QGIS + GDAL + PROJ master shows EPSG:27700 (the horizontal 
part). Looking at QGIS QgsCoordinateReferenceSystem class, it only keeps the 
horizontal part of a CompoundCRS. I guess mostly for compatibility reasons 
with the rest of the code base.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andreaerdna at libero.it  Tue Oct 20 11:20:45 2020
From: andreaerdna at libero.it (Andrea Giudiceandrea)
Date: Tue, 20 Oct 2020 11:20:45 -0700 (MST)
Subject: [gdal-dev] QGIS from OSGeo4W crashes with latest update on
 NetCDF
In-Reply-To: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
References: <CAMCJChuaU2X8ua8J0bW33jmo0_piBp7YKXjv=qOWg-Ofwqf-=w@mail.gmail.com>
Message-ID: <1603218045139-0.post@n6.nabble.com>

Pedro Venâncio-2 wrote
> GRASS init error: Problem in GRASS initialization, GRASS provider and
> plugin will not work : Module built against version 8bcecc9a6 but trying
> to
> use version d8fbd49af. You need to rebuild GRASS GIS or untangle multiple
> installations.

Hi Pedro,
see also a similar report
https://github.com/qgis/QGIS/issues/39310#issuecomment-707006224

Regards.

Andrea



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jlaegel at gbi-info.de  Wed Oct 21 01:17:59 2020
From: jlaegel at gbi-info.de (jlaegel)
Date: Wed, 21 Oct 2020 01:17:59 -0700 (MST)
Subject: [gdal-dev] DXF Writer: Problem with convert the hexadecimal color
Message-ID: <1603268279860-0.post@n6.nabble.com>

Hello,

I use in "ogr_style" following color:  RGB 198,228,211 (HEX: #c6e4d3).

In the created DXf-File the color is the index color 254 (RGB: 214,214,214)
.

But, when i use the color RGB 127,255,127 (#7fff7f, equal to index number
91) it works in the DXF.

Can i use for DXf-Writer only index color values?
OR: How can i use a true color values?




--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Wed Oct 21 03:06:38 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 21 Oct 2020 12:06:38 +0200
Subject: [gdal-dev] Motion: promote GDAL 3.1.4 RC2
Message-ID: <5555499.7xvimdpAiL@even-i700>

Hi,

Motion:

Adopt GDAL 3.1.4 RC2 as final 3.1.4 release

Starting with my +1

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jmckenna at gatewaygeomatics.com  Wed Oct 21 04:15:18 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 21 Oct 2020 08:15:18 -0300
Subject: [gdal-dev] Motion: promote GDAL 3.1.4 RC2
In-Reply-To: <5555499.7xvimdpAiL@even-i700>
References: <5555499.7xvimdpAiL@even-i700>
Message-ID: <2dbe55dd-6676-ee96-3f7a-8ee0e85bfb73@gatewaygeomatics.com>

On 2020-10-21 7:06 a.m., Even Rouault wrote:
> Hi,
> 
> Motion:
> 
> Adopt GDAL 3.1.4 RC2 as final 3.1.4 release
> 
> Starting with my +1
> 

+1 jeff





-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/

From howard at hobu.co  Wed Oct 21 06:38:47 2020
From: howard at hobu.co (Howard Butler)
Date: Wed, 21 Oct 2020 08:38:47 -0500
Subject: [gdal-dev] Motion: promote GDAL 3.1.4 RC2
In-Reply-To: <5555499.7xvimdpAiL@even-i700>
References: <5555499.7xvimdpAiL@even-i700>
Message-ID: <097D4CE5-E395-4F29-9ECB-58423C857626@hobu.co>



> On Oct 21, 2020, at 5:06 AM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> Hi,
> 
> Motion:
> 
> Adopt GDAL 3.1.4 RC2 as final 3.1.4 release
> 
> Starting with my +1

+1

Howard

From jukka.rahkonen at maanmittauslaitos.fi  Wed Oct 21 07:03:37 2020
From: jukka.rahkonen at maanmittauslaitos.fi (Rahkonen Jukka (MML))
Date: Wed, 21 Oct 2020 14:03:37 +0000
Subject: [gdal-dev] How to override WGS84 obligation with IETF GeoJSON?
Message-ID: <bb43ee6dead54a60a7bbfc5793a2e6b1@maanmittauslaitos.fi>

Hi,

We want to use GeoJSON with national coordinate systems like EPSG:3067, EPSG:3046 etc. We can write such GeoJSON with GDAL by using the default GeoJSON 2008 mode. However, in the RFC 7946 specification the rules about the winding order of polygons were clarified and some GeoJSON parsers complain about the polygons (in addition to coordinates).  So we would like to write polygons as in RFC 7946 and make the a prior arrangement as in the RFC 7946 text and use EPSG:3067 coordinates. I mean this text:
"However, where all involved parties have a prior arrangement, alternative coordinate reference systems can be used without risk of data being misinterpreted."

At the moment the GeoJSON driver is missing the option for making this a prior arrangement because it interprets the standard strictly https://gdal.org/drivers/vector/geojson.html
"Coordinates must be geographic over the WGS 84 ellipsoid, hence if the spatial reference system specified at layer creation time is not EPSG:4326, on-the-fly reprojection will be done by the driver."

I guess that there is no hidden switch to override this. What I would like to find is something like "-lco a_prior_arrangement=YES". But would it break anything if the GeoJSON 2008 part of the driver is modified to write the polygons also with counterclockwise external rings, clockwise internal rings?

-Jukka Rahkonen-
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201021/f541ae39/attachment.html>

From j1 at jimenezshaw.com  Wed Oct 21 07:16:45 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 21 Oct 2020 16:16:45 +0200
Subject: [gdal-dev] Compound CRS in shapefile
In-Reply-To: <1805161.YBV7mhdCHb@even-i700>
References: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>
 <1805161.YBV7mhdCHb@even-i700>
Message-ID: <CADRrdKsau0XZ2f_p0nVSRtd2Bnhmg8BLO6TXYnhfDVOd86EzeQ@mail.gmail.com>

Sorry Even for the lack of detail. Let's see if now it is more clear.

I have done this small code example based on
https://gdal.org/tutorials/vector_api_tut.html#writing-to-ogr
but setting a SpatialReference, EPSG:7405 (no checks to make code simpler)

#include "gdal/ogr_spatialref.h"
#include "gdal/ogrsf_frmts.h"

int main()
{
    const char *pszDriverName = "ESRI Shapefile";
    GDALDriver *poDriver;

    GDALAllRegister();

    OGRSpatialReference sr;
    sr.SetFromUserInput("EPSG:7405");

    poDriver = GetGDALDriverManager()->GetDriverByName(pszDriverName );

    GDALDataset *poDS;
    poDS = poDriver->Create( "point_out.shp", 0, 0, 0, GDT_Unknown, NULL );

    OGRLayer *poLayer;
    poLayer = poDS->CreateLayer( "point_out", &sr, wkbPoint, NULL );

    OGRFeature *poFeature;
    poFeature = OGRFeature::CreateFeature( poLayer->GetLayerDefn() );
    OGRPoint pt;
    pt.setX( 0 );
    pt.setY( 1 );
    pt.setZ( 2 );
    poFeature->SetGeometry( &pt );
    OGRFeature::DestroyFeature( poFeature );

    GDALClose( poDS );
    return 0;
}

If I try to open the file point_out.shp in QGIS, it does not recognize the
CRS at all. There is no CRS set to that layer. Not even the horizontal one.
It also displays a question mark in the "Layer" pane.

The content of the .prj file is this:
COMPD_CS["OSGB 1936 / British National Grid + ODN
height",PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Central_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER["Latitude_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]]


Today, inspired by a shapefile created with ArcGIS, I removed the COMPD_CS
tag, leaving just a PROJCS and a VERT_CS separated by a comma. This is
recognized by QGIS as EPSG:27700 :
PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Central_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER["Latitude_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]

If I run
ogr2ogr out.shp point_out.shp -a_srs EPSG:7405
then it creates the out.prj just with the horizontal CRS, not a compound
one, neither adding the VERT_CS after the horizontal:
PROJCS["OSGB_1936_British_National_Grid",GEOGCS["GCS_OSGB
1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",49],PARAMETER["central_meridian",-2],PARAMETER["scale_factor",0.9996012717],PARAMETER["false_easting",400000],PARAMETER["false_northing",-100000],UNIT["Meter",1]]

I was expecting that the method "CreateLayer" was creating a compatible
format. However I do not know which one is the proper one. I would not like
to lose the vertical CRS information.

Thanks

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Tue, 20 Oct 2020 at 19:24, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier,
>
> > When I create a 3D shapefile with GDAL, and I provide as
> SpatialReference a
> > compound CRS, it generates the prj file with the COMPD_CS syntax. Ok so
> far.
>
> Always be specific: show the content of the .prj
>
> > However, when I open the shapefile in QGIS, it does not recognize the CRS
> > at all (neither the horizontal part)
>
> What do you call "recognize" exactly: it doesn't find any CRS information,
> or
> doesn't retrieve a EPSG code (retrieving a EPSG code from ESRI WKT is
> deeply
> dark magic so doesn't always work) ?
>
> > Is that intentional? QGIS is using GDAL to deal with shapefiles, afaik.
>
> Probably for QGIS mailing list or tracker then.
>
> I've tested the following:
>
> ogr2ogr out.shp poly.shp -a_srs EPSG:7405
>
> ogrinfo out.shp reports correctly a compoundCRS.
>
> Opening that in QGIS + GDAL + PROJ master shows EPSG:27700 (the horizontal
> part). Looking at QGIS QgsCoordinateReferenceSystem class, it only keeps
> the
> horizontal part of a CompoundCRS. I guess mostly for compatibility reasons
> with the rest of the code base.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201021/ad72837d/attachment-0001.html>

From j1 at jimenezshaw.com  Wed Oct 21 07:21:16 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Wed, 21 Oct 2020 16:21:16 +0200
Subject: [gdal-dev] Compound CRS in shapefile
In-Reply-To: <CADRrdKsau0XZ2f_p0nVSRtd2Bnhmg8BLO6TXYnhfDVOd86EzeQ@mail.gmail.com>
References: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>
 <1805161.YBV7mhdCHb@even-i700>
 <CADRrdKsau0XZ2f_p0nVSRtd2Bnhmg8BLO6TXYnhfDVOd86EzeQ@mail.gmail.com>
Message-ID: <CADRrdKv8ZUv-dv7mk0fB3O3dpgQiJA34NDJaTx-CYxC68S-abQ@mail.gmail.com>

I forgot a few lines in the C++ code, but they are not needed to reproduce
the problem

        if( poLayer->CreateFeature( poFeature ) != OGRERR_NONE )
        {
            exit( 1 );
        }

.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Wed, 21 Oct 2020 at 16:16, Javier Jimenez Shaw <j1 at jimenezshaw.com>
wrote:

> Sorry Even for the lack of detail. Let's see if now it is more clear.
>
> I have done this small code example based on
> https://gdal.org/tutorials/vector_api_tut.html#writing-to-ogr
> but setting a SpatialReference, EPSG:7405 (no checks to make code simpler)
>
> #include "gdal/ogr_spatialref.h"
> #include "gdal/ogrsf_frmts.h"
>
> int main()
> {
>     const char *pszDriverName = "ESRI Shapefile";
>     GDALDriver *poDriver;
>
>     GDALAllRegister();
>
>     OGRSpatialReference sr;
>     sr.SetFromUserInput("EPSG:7405");
>
>     poDriver = GetGDALDriverManager()->GetDriverByName(pszDriverName );
>
>     GDALDataset *poDS;
>     poDS = poDriver->Create( "point_out.shp", 0, 0, 0, GDT_Unknown, NULL );
>
>     OGRLayer *poLayer;
>     poLayer = poDS->CreateLayer( "point_out", &sr, wkbPoint, NULL );
>
>     OGRFeature *poFeature;
>     poFeature = OGRFeature::CreateFeature( poLayer->GetLayerDefn() );
>     OGRPoint pt;
>     pt.setX( 0 );
>     pt.setY( 1 );
>     pt.setZ( 2 );
>     poFeature->SetGeometry( &pt );
>     OGRFeature::DestroyFeature( poFeature );
>
>     GDALClose( poDS );
>     return 0;
> }
>
> If I try to open the file point_out.shp in QGIS, it does not recognize the
> CRS at all. There is no CRS set to that layer. Not even the horizontal one.
> It also displays a question mark in the "Layer" pane.
>
> The content of the .prj file is this:
> COMPD_CS["OSGB 1936 / British National Grid + ODN
> height",PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Central_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER["Latitude_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
> height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]]
>
>
> Today, inspired by a shapefile created with ArcGIS, I removed the COMPD_CS
> tag, leaving just a PROJCS and a VERT_CS separated by a comma. This is
> recognized by QGIS as EPSG:27700 :
> PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Central_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER["Latitude_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
> height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]
>
> If I run
> ogr2ogr out.shp point_out.shp -a_srs EPSG:7405
> then it creates the out.prj just with the horizontal CRS, not a compound
> one, neither adding the VERT_CS after the horizontal:
> PROJCS["OSGB_1936_British_National_Grid",GEOGCS["GCS_OSGB
> 1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0],UNIT["Degree",0.017453292519943295]],PROJECTION["Transverse_Mercator"],PARAMETER["latitude_of_origin",49],PARAMETER["central_meridian",-2],PARAMETER["scale_factor",0.9996012717],PARAMETER["false_easting",400000],PARAMETER["false_northing",-100000],UNIT["Meter",1]]
>
> I was expecting that the method "CreateLayer" was creating a compatible
> format. However I do not know which one is the proper one. I would not like
> to lose the vertical CRS information.
>
> Thanks
>
> .___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
> Entre dos pensamientos racionales
> hay infinitos pensamientos irracionales.
>
>
>
> On Tue, 20 Oct 2020 at 19:24, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> Javier,
>>
>> > When I create a 3D shapefile with GDAL, and I provide as
>> SpatialReference a
>> > compound CRS, it generates the prj file with the COMPD_CS syntax. Ok so
>> far.
>>
>> Always be specific: show the content of the .prj
>>
>> > However, when I open the shapefile in QGIS, it does not recognize the
>> CRS
>> > at all (neither the horizontal part)
>>
>> What do you call "recognize" exactly: it doesn't find any CRS
>> information, or
>> doesn't retrieve a EPSG code (retrieving a EPSG code from ESRI WKT is
>> deeply
>> dark magic so doesn't always work) ?
>>
>> > Is that intentional? QGIS is using GDAL to deal with shapefiles, afaik.
>>
>> Probably for QGIS mailing list or tracker then.
>>
>> I've tested the following:
>>
>> ogr2ogr out.shp poly.shp -a_srs EPSG:7405
>>
>> ogrinfo out.shp reports correctly a compoundCRS.
>>
>> Opening that in QGIS + GDAL + PROJ master shows EPSG:27700 (the
>> horizontal
>> part). Looking at QGIS QgsCoordinateReferenceSystem class, it only keeps
>> the
>> horizontal part of a CompoundCRS. I guess mostly for compatibility
>> reasons
>> with the rest of the code base.
>>
>> Even
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201021/9b3cb551/attachment.html>

From dmorissette at mapgears.com  Wed Oct 21 07:12:33 2020
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Wed, 21 Oct 2020 10:12:33 -0400
Subject: [gdal-dev] Motion: promote GDAL 3.1.4 RC2
In-Reply-To: <5555499.7xvimdpAiL@even-i700>
References: <5555499.7xvimdpAiL@even-i700>
Message-ID: <75192be1-5495-419d-3d2a-8265ba8af99e@mapgears.com>

+1

Daniel


On 2020-10-21 06:06, Even Rouault wrote:
> Hi,
> 
> Motion:
> 
> Adopt GDAL 3.1.4 RC2 as final 3.1.4 release
> 
> Starting with my +1
> 
> Even
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From even.rouault at spatialys.com  Wed Oct 21 09:17:58 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 21 Oct 2020 18:17:58 +0200
Subject: [gdal-dev] Compound CRS in shapefile
In-Reply-To: <CADRrdKsau0XZ2f_p0nVSRtd2Bnhmg8BLO6TXYnhfDVOd86EzeQ@mail.gmail.com>
References: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>
 <1805161.YBV7mhdCHb@even-i700>
 <CADRrdKsau0XZ2f_p0nVSRtd2Bnhmg8BLO6TXYnhfDVOd86EzeQ@mail.gmail.com>
Message-ID: <1874305.3Or6qrr3Xc@even-i700>

> If I try to open the file point_out.shp in QGIS, it does not recognize the
> CRS at all. There is no CRS set to that layer. Not even the horizontal one.
> It also displays a question mark in the "Layer" pane.
> 
> The content of the .prj file is this:
> COMPD_CS["OSGB 1936 / British National Grid + ODN
> height",PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_
> 1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0]
> ,UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAME
> TER["False_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETE
> R["Central_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER[
> "Latitude_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
> height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]]
> 

Works for me with QGIS, GDAL and PROJ master. Before a yesterday fix in PROJ, 
this was identified as EPSG:27700 (only horizontal part), and now this is 
identified as EPSG:7405

> 
> Today, inspired by a shapefile created with ArcGIS, I removed the COMPD_CS
> tag, leaving just a PROJCS and a VERT_CS separated by a comma. This is
> recognized by QGIS as EPSG:27700 :
> PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SP
> HEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["D
> egree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["Fal
> se_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Centr
> al_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER["Latitud
> e_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
> height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]

Ah, this rings a bell. PROJ doesn't recognized a PROJCS[],VERT_CS[] as a 
compound CRS. It will stop parsing at the end of the PROJCS[]. Perhaps it 
should be improvded to recognize the ArcGIS flavor... Could you paste an exact 
output of a .prj from ArcGIS (since you say the above one is 'inspired from'), 
and the ArcGIS version that outputs it ? And on the reverse, does it like a 
.proj with a COMPD_CS like:

COMPD_CS["OSGB 1936 / British National Grid + ODN 
height",PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",
6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["Degree",
0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",
400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Central_Meridian",-2.0],PARAMETER["Scale_Factor",
0.9996012717],PARAMETER["Latitude_Of_Origin",49.0],UNIT["Meter",
1.0]],VERTCS["Newlyn",VDATUM["Ordnance_Datum_Newlyn"],PARAMETER["Vertical_Shift",
0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]]]

?

> 
> If I run
> ogr2ogr out.shp point_out.shp -a_srs EPSG:7405
> then it creates the out.prj just with the horizontal CRS, not a compound
> one, neither adding the VERT_CS after the horizontal:

I get a COMPD_CS with GDAL and PROJ master

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Wed Oct 21 09:49:02 2020
From: sean at mapbox.com (Sean Gillies)
Date: Wed, 21 Oct 2020 10:49:02 -0600
Subject: [gdal-dev] Motion: promote GDAL 3.1.4 RC2
In-Reply-To: <5555499.7xvimdpAiL@even-i700>
References: <5555499.7xvimdpAiL@even-i700>
Message-ID: <CADPhZXxvsM5D7t9tN13N2vP4iuHb02hq8G3xSc2kRKNXFW7Bwg@mail.gmail.com>

On Wed, Oct 21, 2020 at 4:06 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> Motion:
>
> Adopt GDAL 3.1.4 RC2 as final 3.1.4 release
>
> Starting with my +1
>
> Even
>

Even, thanks for clearing up the question I had yesterday. I've tested RC2
and don't see any new issues with it.

+1

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201021/04d9c56d/attachment.html>

From mmfuller at protonmail.com  Wed Oct 21 09:43:14 2020
From: mmfuller at protonmail.com (mmfuller)
Date: Wed, 21 Oct 2020 16:43:14 +0000
Subject: [gdal-dev] gdaladdo zoom level not supported
Message-ID: <qkdmur69-rvpwGquQk9xXhu90wij2K29ZvuiHuD05eYHmtVg7sqmSvr3T6i2mJ6bj9bN7js9a7aMnEx4FKA6cpvFYRaZbvf9k45W9w8KAE0=@protonmail.com>

I tried to add zoom levels to an mbtiles file using gdaladdo. The mbtiles file was constructed from a large geotiff using gdal_translate.
When I ran gdaladdo, I got an error message about zoom levels:
ERROR 6: zoom_level > 22 not supported

A commenter on stack exchange GIS pointed out that I need to use power-of-two levels.

But they also noted that the error I got is normally for vectors, not rasters.

Also, they felt that the correct message should be "

Only power of two overviews are supported".

What do you think?

FILE CONSTRUCTION STEPS AND DETAILS:

-

construct GTiff from tiff:

gdal_translate -of 'GTiff' -a_srs '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs' -a_ullr -90.473134 31.184680 -90.471041 31.182195 'TLTR.tif' 'TLTR_crs.tif'

-

convert to mbtiles format:

gdal_translate 'TLTR_crs.tif' 'TLTR.mbtiles' -of MBTILES

-

add zoom levels:

gdaladdo -r nearest 'TLTR.mbtiles' 12 14 16 18 20 22

Error message:

`ERROR 6: zoom_level > 22 not supported`

Try without explicit zoom levels: (but I did not clear overviews so this may be expected)

gdaladdo -r nearest 'TLTR.mbtiles'

ERROR 6: zoom_level > 22 not supported

Output from gdalinfo for TLTR.tif and TLTR crs.tif:

gdalinfo TLTR.tif
Warning 1: TIFFFetchNormalTag:Incompatible type for "RichTIFFIPTC"; tag ignored
Driver: GTiff/GeoTIFF
Files: TLTR.tif
Size is 21346, 25128
Coordinate System is `'
Metadata:
  TIFFTAG_DATETIME=2020:10:14 09:52:37
  TIFFTAG_RESOLUTIONUNIT=2 (pixels/inch)
  TIFFTAG_SOFTWARE=Adobe Photoshop 21.2 (Macintosh)
  TIFFTAG_XRESOLUTION=72
  TIFFTAG_YRESOLUTION=72
Image Structure Metadata:
  COMPRESSION=LZW
  INTERLEAVE=PIXEL
Corner Coordinates:
Upper Left  (    0.0,    0.0)
Lower Left  (    0.0,25128.0)
Upper Right (21346.0,    0.0)
Lower Right (21346.0,25128.0)
Center      (10673.0,12564.0)
Band 1 Block=21346x3 Type=Byte, ColorInterp=Red
  Mask Flags: PER_DATASET ALPHA
Band 2 Block=21346x3 Type=Byte, ColorInterp=Green
  Mask Flags: PER_DATASET ALPHA
Band 3 Block=21346x3 Type=Byte, ColorInterp=Blue
  Mask Flags: PER_DATASET ALPHA
Band 4 Block=21346x3 Type=Byte, ColorInterp=Alpha

gdalinfo TLTR_crs.tif
Driver: GTiff/GeoTIFF
Files: TLTR_crs.tif
Size is 21346, 25128
Coordinate System is:
GEOGCS["WGS 84",
    DATUM["WGS_1984",
        SPHEROID["WGS 84",6378137,298.257223563,
            AUTHORITY["EPSG","7030"]],
        AUTHORITY["EPSG","6326"]],
    PRIMEM["Greenwich",0],
    UNIT["degree",0.0174532925199433],
    AUTHORITY["EPSG","4326"]]
Origin = (-90.473134000000002,31.184680000000000)
Pixel Size = (0.000000098051157,-0.000000098893664)
Metadata:
  AREA_OR_POINT=Area
  TIFFTAG_DATETIME=2020:10:14 09:52:37
  TIFFTAG_RESOLUTIONUNIT=2 (pixels/inch)
  TIFFTAG_SOFTWARE=Adobe Photoshop 21.2 (Macintosh)
  TIFFTAG_XRESOLUTION=72
  TIFFTAG_YRESOLUTION=72
Image Structure Metadata:
  INTERLEAVE=PIXEL
Corner Coordinates:
Upper Left  ( -90.4731340,  31.1846800) ( 90d28'23.28"W, 31d11' 4.85"N)
Lower Left  ( -90.4731340,  31.1821950) ( 90d28'23.28"W, 31d10'55.90"N)
Upper Right ( -90.4710410,  31.1846800) ( 90d28'15.75"W, 31d11' 4.85"N)
Lower Right ( -90.4710410,  31.1821950) ( 90d28'15.75"W, 31d10'55.90"N)
Center      ( -90.4720875,  31.1834375) ( 90d28'19.52"W, 31d11' 0.38"N)
Band 1 Block=21346x1 Type=Byte, ColorInterp=Red
  Mask Flags: PER_DATASET ALPHA
Band 2 Block=21346x1 Type=Byte, ColorInterp=Green
  Mask Flags: PER_DATASET ALPHA
Band 3 Block=21346x1 Type=Byte, ColorInterp=Blue
  Mask Flags: PER_DATASET ALPHA
Band 4 Block=21346x1 Type=Byte, ColorInterp=Alpha
(base) dogmat2 gdal results of transformations:
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201021/ee89ca50/attachment-0001.html>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Oct 21 11:10:49 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 21 Oct 2020 11:10:49 -0700 (MST)
Subject: [gdal-dev] gdaladdo zoom level not supported
In-Reply-To: <qkdmur69-rvpwGquQk9xXhu90wij2K29ZvuiHuD05eYHmtVg7sqmSvr3T6i2mJ6bj9bN7js9a7aMnEx4FKA6cpvFYRaZbvf9k45W9w8KAE0=@protonmail.com>
References: <qkdmur69-rvpwGquQk9xXhu90wij2K29ZvuiHuD05eYHmtVg7sqmSvr3T6i2mJ6bj9bN7js9a7aMnEx4FKA6cpvFYRaZbvf9k45W9w8KAE0=@protonmail.com>
Message-ID: <1603303849713-0.post@n6.nabble.com>

The question in gis.stackexchange is this
https://gis.stackexchange.com/questions/376827/gdaladdo-zoom-level-not-supported

-Jukka Rahkonen-



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From jukka.rahkonen at maanmittauslaitos.fi  Wed Oct 21 11:11:46 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 21 Oct 2020 11:11:46 -0700 (MST)
Subject: [gdal-dev] Motion: promote GDAL 3.1.4 RC2
In-Reply-To: <5555499.7xvimdpAiL@even-i700>
References: <5555499.7xvimdpAiL@even-i700>
Message-ID: <1603303906593-0.post@n6.nabble.com>

+1

-Jukka Rahkonen-



Even Rouault-2 wrote
> Hi,
> 
> Motion:
> 
> Adopt GDAL 3.1.4 RC2 as final 3.1.4 release
> 
> Starting with my +1
> 
> Even





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Wed Oct 21 11:41:22 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 21 Oct 2020 20:41:22 +0200
Subject: [gdal-dev] gdaladdo zoom level not supported
In-Reply-To: <qkdmur69-rvpwGquQk9xXhu90wij2K29ZvuiHuD05eYHmtVg7sqmSvr3T6i2mJ6bj9bN7js9a7aMnEx4FKA6cpvFYRaZbvf9k45W9w8KAE0=@protonmail.com>
References: <qkdmur69-rvpwGquQk9xXhu90wij2K29ZvuiHuD05eYHmtVg7sqmSvr3T6i2mJ6bj9bN7js9a7aMnEx4FKA6cpvFYRaZbvf9k45W9w8KAE0=@protonmail.com>
Message-ID: <2528756.h4Xiqm8eRp@even-i700>

> When I ran
> gdaladdo, I got an error message about zoom levels:
> ERROR 6: zoom_level > 22 not supported

You will get it also when doing "gdalinfo TLTR.mbtiles". There is a limitation 
in the driver to zoom_level <= 22, because if the .mbtiles would have world 
coverage, the dimensions would overflow a 32 bit signed integer as used by 
GDAL. For a mbtiles with a smaller extent, that limitation could likely be 
removed, but this is as things are currently in the driver.

But the issue here is that you're translating a tiff file in longlat to 
mbtiles which expects EPSG:3857. So add an intermediate step

gdalwarp TLTR_crs.tif TLTR_crs_3857.tif -t_srs EPSG:3857

and then gdal_translate the result to mbtiles

And for your gdaladdo command just run

gdaladdo TLTR.mbtiles

It will automatically add the needed subsampling factors: 2, 4, 8, 16 etc..

I see you intend to pass zoom levels, but gdaladdo expects subsampling 
factors, so 2^zoom_level.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Wed Oct 21 11:43:21 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 21 Oct 2020 20:43:21 +0200
Subject: [gdal-dev] How to override WGS84 obligation with IETF GeoJSON?
In-Reply-To: <bb43ee6dead54a60a7bbfc5793a2e6b1@maanmittauslaitos.fi>
References: <bb43ee6dead54a60a7bbfc5793a2e6b1@maanmittauslaitos.fi>
Message-ID: <1699086.eB42BYYaCf@even-i700>

On mercredi 21 octobre 2020 14:03:37 CEST Rahkonen Jukka (MML) wrote:
> Hi,
> 
> We want to use GeoJSON with national coordinate systems like EPSG:3067,
> EPSG:3046 etc. We can write such GeoJSON with GDAL by using the default
> GeoJSON 2008 mode. However, in the RFC 7946 specification the rules about
> the winding order of polygons were clarified and some GeoJSON parsers
> complain about the polygons (in addition to coordinates).  So we would like
> to write polygons as in RFC 7946 and make the a prior arrangement as in the
> RFC 7946 text and use EPSG:3067 coordinates. I mean this text: "However,
> where all involved parties have a prior arrangement, alternative coordinate
> reference systems can be used without risk of data being misinterpreted."
> 
> At the moment the GeoJSON driver is missing the option for making this a
> prior arrangement because it interprets the standard strictly
> https://gdal.org/drivers/vector/geojson.html "Coordinates must be
> geographic over the WGS 84 ellipsoid, hence if the spatial reference system
> specified at layer creation time is not EPSG:4326, on-the-fly reprojection
> will be done by the driver."
> 
> I guess that there is no hidden switch to override this. What I would like
> to find is something like "-lco a_prior_arrangement=YES". But would it
> break anything if the GeoJSON 2008 part of the driver is modified to write
> the polygons also with counterclockwise external rings, clockwise internal
> rings?

Probably not, perhaps except a few unit tests.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From matthias at opengis.ch  Wed Oct 21 13:40:07 2020
From: matthias at opengis.ch (Matthias Kuhn)
Date: Wed, 21 Oct 2020 22:40:07 +0200
Subject: [gdal-dev] Apply Vertical Grid Shift to coordinate
Message-ID: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>

Hi

I am trying to apply a vertical grid shift to a coordinate. I am
extrapolating from the example in the documentation at
https://proj.org/operations/transformations/vgridshift.html

The command I am entering is

echo 46.9480 7.4474 590 2020 | cct +proj=vgridshift
+grids=./geoid+HTRANS_ETRS2020.gtx

the result is:

 46.9480000000    7.4474000000          -inf     2020.0000

I was hoping for the altitude being corrected by roughly 50 meters (instead
of being -inf).

The file geoid+HTRANS_ETRS2020.gtx is located in the current directory and
the coordinates should be within the applicable extent. 2020 was just a
random value (current year), but I guess it should not make any difference.

I guess it's just too late and I am missing something obvious. But if
someone could give me a hint to get me up and running, that would be great.

Thanks in advance
Matthias
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201021/e312bee4/attachment.html>

From miurahr at linux.com  Wed Oct 21 21:28:41 2020
From: miurahr at linux.com (=?UTF-8?B?772N772J772V772S772B77yg772M772J772O772V772Y?=)
Date: Thu, 22 Oct 2020 13:28:41 +0900
Subject: [gdal-dev] [Docs] Propose localization of gdal documentation
In-Reply-To: <2743495.MR7GGTK0aG@even-i700>
References: <1753f651c0c.e6b5b108202096.6374630179882462152@linux.com>
 <2743495.MR7GGTK0aG@even-i700>
Message-ID: <1754e90e993.119cd7a7e279531.3442998011688983046@linux.com>

Hi Even,


 



---- 日時 月, 19 10 2020 17:33:03 +0900 Even Rouault <even.rouault at spatialys.com> さんからのメッセージ ----
 > > I'd like to propose to move gdal doc to be i18n-ed.
 > > 
 > > Now documentations are compiled with sphinx, and sphinx has a good i18n/l10n
 > > facility, and it is very easy.. If you are welcome for the move, I'd like
 > > to propose some updates for gdal github project.
 > 
 > Sounds interesting. I assume you won't translate the ~ 1000 pages of doc we 
 > have currently, though ?

Yes, it is quite hard to translate whole pages by single translator.
I've also ask local community (in japan) to help translation project.

When 10 volunteer comes per one language, 100 pages for each volunteer. :)


 > We'd probably need some instructions somewhere (doc/README.md ?) to explain 
 > the process on how to create & update translations.

Yes, ok, I'd like to provide a document for that.

Hiroshi



From even.rouault at spatialys.com  Thu Oct 22 01:41:34 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 22 Oct 2020 10:41:34 +0200
Subject: [gdal-dev] Apply Vertical Grid Shift to coordinate
In-Reply-To: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>
References: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>
Message-ID: <6127515.rgnpiBagWi@even-i700>

Hi Matthias,

(would be more a topic for proj mailing list)

> I am trying to apply a vertical grid shift to a coordinate. I am
> extrapolating from the example in the documentation at
> https://proj.org/operations/transformations/vgridshift.html
> 
> The command I am entering is
> 
> echo 46.9480 7.4474 590 2020 | cct +proj=vgridshift
> +grids=./geoid+HTRANS_ETRS2020.gtx
> 
> the result is:
> 
>  46.9480000000    7.4474000000          -inf     2020.0000
> 
> I was hoping for the altitude being corrected by roughly 50 meters (instead
> of being -inf).

If the coordinate is located at Kornhausplatz in Bern, Switzerland, rather 
than at Dollo in Ethiopia, you'd better switch your 2 first figures ;-)

When using PROJ pipelines, the coordinate order is longitude,latitude / 
easting,northing , unless there are +proj=axisswap operations changing that. 
When using higher level PROJ interfaces like cs2cs or projinfo with EPSG code, 
then you'll have to comply with EPSG axis order.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From j1 at jimenezshaw.com  Thu Oct 22 06:41:53 2020
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 22 Oct 2020 15:41:53 +0200
Subject: [gdal-dev] Compound CRS in shapefile
In-Reply-To: <1874305.3Or6qrr3Xc@even-i700>
References: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>
 <1805161.YBV7mhdCHb@even-i700>
 <CADRrdKsau0XZ2f_p0nVSRtd2Bnhmg8BLO6TXYnhfDVOd86EzeQ@mail.gmail.com>
 <1874305.3Or6qrr3Xc@even-i700>
Message-ID: <CADRrdKufvbm00DYSNDH6EbxOzDTb+Yi-0wNWSZ9a532dWCsoWw@mail.gmail.com>

Oh, I forgot to mention the versions I am using:
to compile and run the C++ code: PROJ 7.0.1, GDAL 3.1.0 (sorry, that is the
environment I had configured).

To run ogr2ogr unfortunately I forgot to change the path to the build
version, and was using the installed one, GDAL 2.2.3. Now repeating with
GDAL 3.1.0, ogr2ogr dumps COMPD_CS..., as yours.

About QGIS, I have not compiled it. So I am testing with the installed
versions in Ubuntu 18.04 (GDAL 2.2.3) and Ubuntu 20.04 (GDAL 3.0.4, PROJ
6.3.1)

The prj that a friend gave me was this:
PROJCS["NAD_1983_2011_StatePlane_Colorado_Central_FIPS_0502_Ft_US",GEOGCS["GCS_NAD_1983_2011",DATUM["D_NAD_1983_2011",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",3000000.000316083],PARAMETER["False_Northing",999999.999996],PARAMETER["Central_Meridian",-105.5],PARAMETER["Standard_Parallel_1",38.45],PARAMETER["Standard_Parallel_2",39.75],PARAMETER["Latitude_Of_Origin",37.83333333333334],UNIT["Foot_US",0.3048006096012192]],VERTCS["CGVD2013_height",VDATUM["Canadian_Geodetic_Vertical_Datum_of_2013"],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]]

He combined NAD83 with Canadian to not be "the normal one" on purpose. This
shapefile is also understood by other software, I guess Civil3D.

Opening the shp file created with the C++ code (that is with COMPD_CS tag),
in ArcGIS ArcMap 10.2.2, gives this info:
Data Type: Shapefile Feature Class
Shapefile: C:\Users\fherl\Desktop\point_out\point_out.shp
Geometry Type: Point
Coordinates have Z values: Yes
Coordinates have measures: Yes

Projected Coordinate System: British_National_Grid
Projection: Transverse_Mercator
False_Easting: 400000,00000000
False_Northing: -100000,00000000
Central_Meridian: -2,00000000
Scale_Factor: 0,99960127
Latitude_Of_Origin: 49,00000000
Linear Unit: Meter

Geographic Coordinate System: GCS_OSGB_1936
Datum: D_OSGB_1936
Prime Meridian: Greenwich
Angular Unit: Degree

Another friend tried in ArcGIS Pro 2.4.3 reading the shapefile created by
the C++ code (that is with COMPD_CS tag) and it recognizes it, with both
horizontal EPSG:27700 and vertical Newlyn EPSG:5701 CRSs

What I am afraid now is... what is the "proper" format for a compound CRS
in the prj file of a shapefile? If GDAL is now exporting it as COMPD_CS,
but not everybody understands it, neither the horizontal part, it becomes a
compatibility problem.

Cheers
Javier
.___ ._ ..._ .. . ._.  .___ .. __ . _. . __..  ... .... ._ .__
Entre dos pensamientos racionales
hay infinitos pensamientos irracionales.



On Wed, 21 Oct 2020 at 18:18, Even Rouault <even.rouault at spatialys.com>
wrote:

> > If I try to open the file point_out.shp in QGIS, it does not recognize
> the
> > CRS at all. There is no CRS set to that layer. Not even the horizontal
> one.
> > It also displays a question mark in the "Layer" pane.
> >
> > The content of the .prj file is this:
> > COMPD_CS["OSGB 1936 / British National Grid + ODN
> >
> height",PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_
> >
> 1936",SPHEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0]
> >
> ,UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAME
> >
> TER["False_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETE
> >
> R["Central_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER[
> > "Latitude_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
> > height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]]
> >
>
> Works for me with QGIS, GDAL and PROJ master. Before a yesterday fix in
> PROJ,
> this was identified as EPSG:27700 (only horizontal part), and now this is
> identified as EPSG:7405
>
> >
> > Today, inspired by a shapefile created with ArcGIS, I removed the
> COMPD_CS
> > tag, leaving just a PROJCS and a VERT_CS separated by a comma. This is
> > recognized by QGIS as EPSG:27700 :
> >
> PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SP
> >
> HEROID["Airy_1830",6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["D
> >
> egree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["Fal
> >
> se_Easting",400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Centr
> >
> al_Meridian",-2.0],PARAMETER["Scale_Factor",0.9996012717],PARAMETER["Latitud
> > e_Of_Origin",49.0],UNIT["Meter",1.0]],VERT_CS["ODN
> > height",VERT_DATUM["Ordnance Datum Newlyn",2005],UNIT["Meter",1.0]]
>
> Ah, this rings a bell. PROJ doesn't recognized a PROJCS[],VERT_CS[] as a
> compound CRS. It will stop parsing at the end of the PROJCS[]. Perhaps it
> should be improvded to recognize the ArcGIS flavor... Could you paste an
> exact
> output of a .prj from ArcGIS (since you say the above one is 'inspired
> from'),
> and the ArcGIS version that outputs it ? And on the reverse, does it like
> a
> .proj with a COMPD_CS like:
>
> COMPD_CS["OSGB 1936 / British National Grid + ODN
>
> height",PROJCS["British_National_Grid",GEOGCS["GCS_OSGB_1936",DATUM["D_OSGB_1936",SPHEROID["Airy_1830",
> 6377563.396,299.3249646]],PRIMEM["Greenwich",0.0],UNIT["Degree",
>
> 0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",
>
> 400000.0],PARAMETER["False_Northing",-100000.0],PARAMETER["Central_Meridian",-2.0],PARAMETER["Scale_Factor",
> 0.9996012717],PARAMETER["Latitude_Of_Origin",49.0],UNIT["Meter",
>
> 1.0]],VERTCS["Newlyn",VDATUM["Ordnance_Datum_Newlyn"],PARAMETER["Vertical_Shift",
> 0.0],PARAMETER["Direction",1.0],UNIT["Meter",1.0]]]
>
> ?
>
> >
> > If I run
> > ogr2ogr out.shp point_out.shp -a_srs EPSG:7405
> > then it creates the out.prj just with the horizontal CRS, not a compound
> > one, neither adding the VERT_CS after the horizontal:
>
> I get a COMPD_CS with GDAL and PROJ master
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201022/72f7cb94/attachment.html>

From laurynasgedminas at gmail.com  Thu Oct 22 08:15:01 2020
From: laurynasgedminas at gmail.com (Laurynas Gedminas)
Date: Thu, 22 Oct 2020 11:15:01 -0400
Subject: [gdal-dev]
	https://stackoverflow.com/questions/61342237/gdal-translate-missing-spatial-reference-system
Message-ID: <CAPJBxMFNnAxWqy5e0AMc-=_k07OeM0i_Nvh=ABXJ33RMozrahA@mail.gmail.com>

I am using the Python GDAL 3.0.2,
facing the issue with the gdal.translate, posted question here as well:
https://stackoverflow.com/questions/64484225/gdal-translate-with-projection

and this person seems to have the same issue:
https://stackoverflow.com/questions/64484225/gdal-translate-with-projection

Thank you,
Laurynas Gedminas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201022/2bd5d01e/attachment-0001.html>

From laurynasgedminas at gmail.com  Thu Oct 22 10:25:59 2020
From: laurynasgedminas at gmail.com (Laurynas Gedminas)
Date: Thu, 22 Oct 2020 13:25:59 -0400
Subject: [gdal-dev]
	https://stackoverflow.com/questions/61342237/gdal-translate-missing-spatial-reference-system
In-Reply-To: <CAPJBxMFNnAxWqy5e0AMc-=_k07OeM0i_Nvh=ABXJ33RMozrahA@mail.gmail.com>
References: <CAPJBxMFNnAxWqy5e0AMc-=_k07OeM0i_Nvh=ABXJ33RMozrahA@mail.gmail.com>
Message-ID: <CAPJBxMHYdjXDJmb87jvhrJZROrO0rteNq+6veN+VeaRC0bpugQ@mail.gmail.com>

Here are the correct posts links:

I am using the Python GDAL 3.0.2,
facing the issue with the gdal.translate, posted question here as well:
https://stackoverflow.com/questions/64484225/gdal-translate-with-projection

and this person seems to have the same issue:
https://stackoverflow.com/questions/61342237/gdal-translate-missing-spatial-reference-system

Thank you,
Laurynas

On Thu, Oct 22, 2020 at 11:15 AM Laurynas Gedminas <
laurynasgedminas at gmail.com> wrote:

> I am using the Python GDAL 3.0.2,
> facing the issue with the gdal.translate, posted question here as well:
> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>
> and this person seems to have the same issue:
> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>
> Thank you,
> Laurynas Gedminas
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201022/588eefe9/attachment.html>

From matthias at opengis.ch  Thu Oct 22 11:28:38 2020
From: matthias at opengis.ch (Matthias Kuhn)
Date: Thu, 22 Oct 2020 20:28:38 +0200
Subject: [gdal-dev] Apply Vertical Grid Shift to coordinate
In-Reply-To: <6127515.rgnpiBagWi@even-i700>
References: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>
 <6127515.rgnpiBagWi@even-i700>
Message-ID: <CAC7zN95GMTrfQaO9XVv1u0d9xhKrDBiUm_Z4R53h_WaJaxxH8A@mail.gmail.com>

Hi Even,

On Thu, Oct 22, 2020 at 10:41 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Matthias,
>
> (would be more a topic for proj mailing list)
>

(noticed just after sending, but immediately after figured that the
audience will likely be similar)


> > I am trying to apply a vertical grid shift to a coordinate. I am
> > extrapolating from the example in the documentation at
> > https://proj.org/operations/transformations/vgridshift.html
> >
> > The command I am entering is
> >
> > echo 46.9480 7.4474 590 2020 | cct +proj=vgridshift
> > +grids=./geoid+HTRANS_ETRS2020.gtx
> >
> > the result is:
> >
> >  46.9480000000    7.4474000000          -inf     2020.0000
> >
> > I was hoping for the altitude being corrected by roughly 50 meters
> (instead
> > of being -inf).
>
> If the coordinate is located at Kornhausplatz in Bern, Switzerland, rather
> than at Dollo in Ethiopia, you'd better switch your 2 first figures ;-)
>

Fair point, I am indeed more interested in Bern results than in Ethiopian
results.
Unfortunately The result doesn't change significantly

echo 7.4474 46.9480 590 2020 | cct +proj=vgridshift
+grids=./geoid+HTRANS_ETRS2020.gtx
  7.4474000000   46.9480000000          -inf     2020.0000


>
> When using PROJ pipelines, the coordinate order is longitude,latitude /
> easting,northing , unless there are +proj=axisswap operations changing
> that.
> When using higher level PROJ interfaces like cs2cs or projinfo with EPSG
> code,
> then you'll have to comply with EPSG axis order.
>

Thanks for the context, good to know !
Matthias


>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201022/029cddf1/attachment.html>

From even.rouault at spatialys.com  Thu Oct 22 12:09:40 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 22 Oct 2020 21:09:40 +0200
Subject: [gdal-dev] Apply Vertical Grid Shift to coordinate
In-Reply-To: <CAC7zN95GMTrfQaO9XVv1u0d9xhKrDBiUm_Z4R53h_WaJaxxH8A@mail.gmail.com>
References: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>
 <6127515.rgnpiBagWi@even-i700>
 <CAC7zN95GMTrfQaO9XVv1u0d9xhKrDBiUm_Z4R53h_WaJaxxH8A@mail.gmail.com>
Message-ID: <8647121.65BU8PWnxr@even-i700>

> echo 7.4474 46.9480 590 2020 | cct +proj=vgridshift
> +grids=./geoid+HTRANS_ETRS2020.gtx
>   7.4474000000   46.9480000000          -inf     2020.0000

Check what "gdalinfo geoid+HTRANS_ETRS2020.gtx" reports as extent (so this now 
becomes relevant to this mailing list ;-))

And if that seems OK, try also:

gdallocationinfo -geoloc geoid+HTRANS_ETRS2020.gtx 7.4474 46.9480

The -inf value is intriguing. Normally if you're out of bounds, cct
shoud report an error message "(point not within available datum shift grids)"

I was wondering if the + in the filename wouldn't confused PROJ, but on a 
quick try with another gtx file, that seems fine.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From matthias at opengis.ch  Thu Oct 22 12:56:14 2020
From: matthias at opengis.ch (Matthias Kuhn)
Date: Thu, 22 Oct 2020 21:56:14 +0200
Subject: [gdal-dev] Apply Vertical Grid Shift to coordinate
In-Reply-To: <8647121.65BU8PWnxr@even-i700>
References: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>
 <6127515.rgnpiBagWi@even-i700>
 <CAC7zN95GMTrfQaO9XVv1u0d9xhKrDBiUm_Z4R53h_WaJaxxH8A@mail.gmail.com>
 <8647121.65BU8PWnxr@even-i700>
Message-ID: <CAC7zN97BRE2N3m_jzY-LCfmXCDuwk1DUvB1oQj+tVPDjim9YTg@mail.gmail.com>

It looks like there is something fishy

$ gdalinfo geoid+HTRANS_ETRS2020.gtx
ERROR 4: `geoid+HTRANS_ETRS2020.gtx' not recognized as a supported file
format.
gdalinfo failed - unable to open 'geoid+HTRANS_ETRS2020.gtx'.

Should this have a different extension maybe?

$ head geoid+HTRANS_ETRS2020.gtx
45.75 5.85  0.00833333333333333333 0.00833333333333333333 253 559
49.4610
49.4649
49.4720
49.4823
49.5021
49.5511
49.5899
49.5819
49.5588

I guess this can safely be left away from the proj mailing list
Matthias

On Thu, Oct 22, 2020 at 9:09 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> > echo 7.4474 46.9480 590 2020 | cct +proj=vgridshift
> > +grids=./geoid+HTRANS_ETRS2020.gtx
> >   7.4474000000   46.9480000000          -inf     2020.0000
>
> Check what "gdalinfo geoid+HTRANS_ETRS2020.gtx" reports as extent (so this
> now
> becomes relevant to this mailing list ;-))
>
> And if that seems OK, try also:
>
> gdallocationinfo -geoloc geoid+HTRANS_ETRS2020.gtx 7.4474 46.9480
>
> The -inf value is intriguing. Normally if you're out of bounds, cct
> shoud report an error message "(point not within available datum shift
> grids)"
>
> I was wondering if the + in the filename wouldn't confused PROJ, but on a
> quick try with another gtx file, that seems fine.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201022/170a4c5e/attachment.html>

From even.rouault at spatialys.com  Thu Oct 22 13:17:24 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 22 Oct 2020 22:17:24 +0200
Subject: [gdal-dev] Apply Vertical Grid Shift to coordinate
In-Reply-To: <CAC7zN97BRE2N3m_jzY-LCfmXCDuwk1DUvB1oQj+tVPDjim9YTg@mail.gmail.com>
References: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>
 <8647121.65BU8PWnxr@even-i700>
 <CAC7zN97BRE2N3m_jzY-LCfmXCDuwk1DUvB1oQj+tVPDjim9YTg@mail.gmail.com>
Message-ID: <1712737.G4rxEo9nZ2@even-i700>

> 
> $ head geoid+HTRANS_ETRS2020.gtx
> 45.75 5.85  0.00833333333333333333 0.00833333333333333333 253 559
> 49.4610
> 49.4649
> 49.4720
> 49.4823
> 49.5021
> 49.5511
> 49.5899
> 49.5819
> 49.5588
> 

This is definitely not a GTX file. GTX is a binary format. I don't think 
there's an existing GDAL driver for the above variant.

You'll have to write your own convertion script or modify the file to look 
like something recognized by GDAL, like a AAIGRID file. Or yell at the person 
who provided that file to you to not use something known by GDAL.

The header line is likely:
south_latitude (I guess for Switzerland)
west_longitude
vertical_resolution (or horizontal_resolution ?)
horizontal_resolution (or vertical_resolution ?)
height_in_pixels (or width_in_pixels ?)
width_in_pixels (or height_in_pixels ?)

If you map that to headers of AAIGRID, that could work. That looks like:
ncols        20
nrows        20
xllcorner    440720.000000000000
yllcorner    3750120.000000000000
cellsize     60.000000000000

You'll perhaps have to do a vertical flip depending on the convention of your 
file (can be done for example by switching top and bottom Y with 
gdal_translate -a_ullr and then gdalwarp) 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From matthias at opengis.ch  Thu Oct 22 13:39:44 2020
From: matthias at opengis.ch (Matthias Kuhn)
Date: Thu, 22 Oct 2020 22:39:44 +0200
Subject: [gdal-dev] Apply Vertical Grid Shift to coordinate
In-Reply-To: <1712737.G4rxEo9nZ2@even-i700>
References: <CAC7zN95H319RRLCgCRhPscswMr5vdiHsvemSGCSqmnd7=mFp6Q@mail.gmail.com>
 <8647121.65BU8PWnxr@even-i700>
 <CAC7zN97BRE2N3m_jzY-LCfmXCDuwk1DUvB1oQj+tVPDjim9YTg@mail.gmail.com>
 <1712737.G4rxEo9nZ2@even-i700>
Message-ID: <CAC7zN94FAZoS3YKLvSLtp+3L+ZbWL1gxM8L781wAXgnRMij5sg@mail.gmail.com>

Thanks a lot for the help, Even.

That just saved me some headache.

I'll respectfully approach the source of this data before trying to figure
out where to put tabs and line breaks and warping.
And then crossing fingers that the national administration open sources the
data in a usable format rather sooner than later to prevent people from
jumping through hoops.

Best wishes !
Matthias

On Thu, Oct 22, 2020 at 10:17 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> >
> > $ head geoid+HTRANS_ETRS2020.gtx
> > 45.75 5.85  0.00833333333333333333 0.00833333333333333333 253 559
> > 49.4610
> > 49.4649
> > 49.4720
> > 49.4823
> > 49.5021
> > 49.5511
> > 49.5899
> > 49.5819
> > 49.5588
> >
>
> This is definitely not a GTX file. GTX is a binary format. I don't think
> there's an existing GDAL driver for the above variant.
>
> You'll have to write your own convertion script or modify the file to look
> like something recognized by GDAL, like a AAIGRID file. Or yell at the
> person
> who provided that file to you to not use something known by GDAL.
>
> The header line is likely:
> south_latitude (I guess for Switzerland)
> west_longitude
> vertical_resolution (or horizontal_resolution ?)
> horizontal_resolution (or vertical_resolution ?)
> height_in_pixels (or width_in_pixels ?)
> width_in_pixels (or height_in_pixels ?)
>
> If you map that to headers of AAIGRID, that could work. That looks like:
> ncols        20
> nrows        20
> xllcorner    440720.000000000000
> yllcorner    3750120.000000000000
> cellsize     60.000000000000
>
> You'll perhaps have to do a vertical flip depending on the convention of
> your
> file (can be done for example by switching top and bottom Y with
> gdal_translate -a_ullr and then gdalwarp)
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201022/5385c380/attachment.html>

From even.rouault at spatialys.com  Fri Oct 23 01:31:55 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 23 Oct 2020 10:31:55 +0200
Subject: [gdal-dev] Compound CRS in shapefile
In-Reply-To: <CADRrdKufvbm00DYSNDH6EbxOzDTb+Yi-0wNWSZ9a532dWCsoWw@mail.gmail.com>
References: <CADRrdKtd6+yi6+Q5FdqfnSoCifu+OZT8n8cSCjEYw5WtGM42JA@mail.gmail.com>
 <1874305.3Or6qrr3Xc@even-i700>
 <CADRrdKufvbm00DYSNDH6EbxOzDTb+Yi-0wNWSZ9a532dWCsoWw@mail.gmail.com>
Message-ID: <12060135.qNuEDjlKne@even-i700>

Javier,

> The prj that a friend gave me was this:
> PROJCS["NAD_1983_2011_StatePlane_Colorado_Central_FIPS_0502_Ft_US",GEOGCS["G
> CS_NAD_1983_2011",DATUM["D_NAD_1983_2011",SPHEROID["GRS_1980",6378137.0,298.
> 257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJE
> CTION["Lambert_Conformal_Conic"],PARAMETER["False_Easting",3000000.000316083
> ],PARAMETER["False_Northing",999999.999996],PARAMETER["Central_Meridian",-10
> 5.5],PARAMETER["Standard_Parallel_1",38.45],PARAMETER["Standard_Parallel_2",
> 39.75],PARAMETER["Latitude_Of_Origin",37.83333333333334],UNIT["Foot_US",0.30
> 48006096012192]],VERTCS["CGVD2013_height",VDATUM["Canadian_Geodetic_Vertical
> _Datum_of_2013"],PARAMETER["Vertical_Shift",0.0],PARAMETER["Direction",1.0],
> UNIT["Meter",1.0]]

OK, so I've verified with another well-informed source that the above 
PROJCS[...],VERTCS[...] is the syntax generated and expected by ESRI software 
for compound CRS.
I've fixed import/export of compound CRS from/into ESRI WKT for upcoming PROJ 
7.2 per https://github.com/OSGeo/PROJ/pull/2389.

> If GDAL is now exporting it as COMPD_CS,
> but not everybody understands it, neither the horizontal part, it becomes a
> compatibility problem.

In the GDAL 2.x series, on output of the Shapefile driver, only the horizontal 
part was exported, due to morphToESRI() stripping the vertical part (not sure 
if it was intented or accidental)
So yes we have a potential compatibility problem for .prj generated by GDAL 3 
using PROJ >= 6.0 and < 7.2 that will emit COMPD_CS

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From cyclotomiq at gmail.com  Fri Oct 23 08:47:51 2020
From: cyclotomiq at gmail.com (Krishna Bhogaonker)
Date: Fri, 23 Oct 2020 11:47:51 -0400
Subject: [gdal-dev] Dirty block GDALRasterBand::IRasterIO error even with
 Libtiff > 4.0 on Windows and Mac but not Linux.
Message-ID: <CAJCmozK1EGhAJLvhM+fT-RbCP-qjBFpfHyxGVXh9uFTC_sBgsA@mail.gmail.com>

Hello folks.
This is my first post to the GDAL list :). So I am running into an error
using `Rasterio` 1.1.7 and `Gdal` 3.1.3 on Windows and Mac, but not Linux.
The code opens a raster GeoTIFF file and compresses the data to some
smaller format. Here is the code below and then a picture of the error
message. Note that the code is written in Python 3.8 with `rasterio` but
the error seems to come from the GDAL call.

The error message is rasterio.errors.RasterioIOError: Read or write failed.
An error occurred while writing a dirty block from
GDALRasterBand::IRasterIO . I googled around and found that I needed to
ensure Libtiff > 4.0 is installed, which I did--but the error still
persists.

One thing to note is that the GeoTIFF is rather large. I am working with
aerial drone imagery for a philanthropic group in Tanzania, so the images
can be like 2-6GB even after compressed. Here is a sample image that I use
for testing
https://github.com/00krishna-tools/nyuki/releases/download/v0.0.1/sample_image_big.tif

import rasterio


dat = 'sample_image_big.tif'
target_file = 'sample_image_big_compressed_jpeg.tif'

with rasterio.Env():

    profile.update(
        compress="JPEG",
        BIGTIFF = "YES")

    with rasterio.open(target_file, 'w', **profile) as dst:
        for ji, window in dat.block_windows(1):
            dst.write(dat.read(window=window), window=window)

I am using "windowed" reads and writes, etc., so that seems to be the
most efficient way to do it.

Here is a picture of the error with traceback:

Traceback (most recent call last):
  File "rasterio/_io.pyx", line 1369, in rasterio._io.DatasetWriterBase.write
  File "rasterio/shim_rasterioex.pxi", line 133, in rasterio._shim.io_multi_band
  File "rasterio/_err.pyx", line 182, in rasterio._err.exc_wrap_int
rasterio._err.CPLE_AppDefinedError: An error occurred while writing a
dirty block from GDALRasterBand::IRasterIODuring handling of the above
exception, another exception occurred:Traceback (most recent call
last):
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/bin/nyuki", line
10, in <module>
    sys.exit(nyuki())
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/click/core.py",
line 829, in __call__
    return self.main(*args, **kwargs)
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/click/core.py",
line 782, in main
    rv = self.invoke(ctx)
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/click/core.py",
line 1259, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/click/core.py",
line 1259, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/click/core.py",
line 1066, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/click/core.py",
line 610, in invoke
    return callback(*args, **kwargs)
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/nyuki/nyuki.py",
line 160, in compress
    compressor(sourcetiff, target_compression, yes)
  File "/Users/user/mdconda/anaconda3/envs/nyuki-env/lib/python3.7/site-packages/nyuki/geotiff_compressor.py",
line 52, in compressor
    dst.write(dat.read(window=window), window=window)
  File "rasterio/_io.pyx", line 1371, in rasterio._io.DatasetWriterBase.write
rasterio.errors.RasterioIOError: Read or write failed. An error
occurred while writing a dirty block from GDALRasterBand::IRasterIO

So the real question is whether there is a workaround for this issue,
or is there something different

I should do with my code? Any suggestions for getting this code to
work on Mac and Windows, as it

works just fine on Linux. Thanks so much for any insights.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201023/e4566224/attachment-0001.html>

From even.rouault at spatialys.com  Fri Oct 23 13:08:17 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 23 Oct 2020 22:08:17 +0200
Subject: [gdal-dev] Motion: promote GDAL 3.1.4 RC2
In-Reply-To: <5555499.7xvimdpAiL@even-i700>
References: <5555499.7xvimdpAiL@even-i700>
Message-ID: <14449980.GexqUJ2fgs@even-i700>

On mercredi 21 octobre 2020 12:06:38 CEST Even Rouault wrote:
> Hi,
> 
> Motion:
> 
> Adopt GDAL 3.1.4 RC2 as final 3.1.4 release
> 
> Starting with my +1

Motion passed with +1 from PSC members HowardB, DanielM, SeanG, JukkaR and 
myself


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Oct 23 13:40:34 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 23 Oct 2020 22:40:34 +0200
Subject: [gdal-dev] GDAL 3.1.4 is released
Message-ID: <2726567.yZ85fPGzQr@even-i700>

Hi,

On behalf of the GDAL/OGR development team, I am pleased to announce the 
release of the GDAL/OGR 3.1.4 bug fix version, presumably the last one in the 
3.1 series.

This version is compatible of PROJ >= 6.0, but should ideally be recompiled 
against PROJ 7.2 once it is released in a few days to be able to benefit from 
a new function.

Consult the release notes for the list of issues addressed :
  https://github.com/OSGeo/gdal/blob/v3.1.4/gdal/NEWS

The sources are available at:

    https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4.tar.xz
    https://download.osgeo.org/gdal/3.1.4/gdal-3.1.4.tar.gz
    https://download.osgeo.org/gdal/3.1.4/gdal314.zip
    https://download.osgeo.org/gdal/3.1.4/gdal-grass-3.1.4.tar.gz

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From saadbaloch444 at gmail.com  Sat Oct 24 00:47:21 2020
From: saadbaloch444 at gmail.com (Arthur Morgan)
Date: Sat, 24 Oct 2020 00:47:21 -0700
Subject: [gdal-dev] DLL load failed: The specified module could not be found
Message-ID: <CANSc-Ptj6Rr+vhCeeB-P9DEGi1z5ZvG4anopWcTKpMVC7LhF_g@mail.gmail.com>

Hello,
I have Anaconda latest 64-bit built on Windows 10, and the current
environment is running on Python 2.7. Now, I installed GDAL via conda
install -c conda-forge gdal

But when the script calls GDAL, it throws the following error:
Traceback (most recent call last):
  File "format_snow_params.py", line 20, in <module>
    from osgeo import gdal
  File
"D:\ProgramData\Anaconda3\envs\py2\lib\site-packages\osgeo\__init__.py",
line 25, in <module>
    _gdal = swig_import_helper()
  File
"D:\ProgramData\Anaconda3\envs\py2\lib\site-packages\osgeo\__init__.py",
line 21, in swig_import_helper
    _mod = imp.load_module('_gdal', fp, pathname, description)
ImportError: DLL load failed: The specified module could not be found.

Please advise what to do?

Kind Regards,
Saad Baloch
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201024/6a73a9cb/attachment.html>

From ivan.lucena at outlook.com  Sat Oct 24 08:09:48 2020
From: ivan.lucena at outlook.com (Ivan Lucena)
Date: Sat, 24 Oct 2020 15:09:48 +0000
Subject: [gdal-dev] DLL load failed: The specified module could not be
 found
In-Reply-To: <CANSc-Ptj6Rr+vhCeeB-P9DEGi1z5ZvG4anopWcTKpMVC7LhF_g@mail.gmail.com>
References: <CANSc-Ptj6Rr+vhCeeB-P9DEGi1z5ZvG4anopWcTKpMVC7LhF_g@mail.gmail.com>
Message-ID: <MN2PR04MB56931D1D2850C6FDA88F9A43F21B0@MN2PR04MB5693.namprd04.prod.outlook.com>

Hi Saad,

You probably have followed the steps to use Python2 on Anaconda3 [https://docs.anaconda.com/anaconda/user-guide/tasks/switch-environment/]

But did you install GDAL on both environments independently? Can you run "gdalinfo --version" while "py2" is activated?

We all know that DLL error messages are very misleading, "DLL load failed" might be related to a third part library. But that message doesn't seem to be 32/64 platform.

Worse thing you can do is to uninstall Anaconda3 to start fresh. The installer is not going to work.

Regards,

Ivan

________________________________
From: gdal-dev <gdal-dev-bounces at lists.osgeo.org> on behalf of Arthur Morgan <saadbaloch444 at gmail.com>
Sent: Saturday, October 24, 2020 3:47 AM
To: gdal-dev at lists.osgeo.org <gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] DLL load failed: The specified module could not be found

Hello,
I have Anaconda latest 64-bit built on Windows 10, and the current environment is running on Python 2.7. Now, I installed GDAL via conda install -c conda-forge gdal

But when the script calls GDAL, it throws the following error:
Traceback (most recent call last):
  File "format_snow_params.py", line 20, in <module>
    from osgeo import gdal
  File "D:\ProgramData\Anaconda3\envs\py2\lib\site-packages\osgeo\__init__.py", line 25, in <module>
    _gdal = swig_import_helper()
  File "D:\ProgramData\Anaconda3\envs\py2\lib\site-packages\osgeo\__init__.py", line 21, in swig_import_helper
    _mod = imp.load_module('_gdal', fp, pathname, description)
ImportError: DLL load failed: The specified module could not be found.

Please advise what to do?

Kind Regards,
Saad Baloch
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201024/ef7f56de/attachment.html>

From plite2012 at gmail.com  Sun Oct 25 10:05:16 2020
From: plite2012 at gmail.com (Paul Li)
Date: Sun, 25 Oct 2020 12:05:16 -0500
Subject: [gdal-dev] ogr2ogr -preserve_fid does not work when dst_datasource
	is SQLite/SpatiaLite
Message-ID: <CAF6=6MpV3sjFJEbMsX908JFEMinz5UXyiN__2JRSLxnyk5nVqA@mail.gmail.com>

Using this option to convert shapefiles to shapefiles (with less columns)
works perfectly fine. However, when dst_datasource is SQLite/SpatiaLite,
this option is not working as expected, and ogc_fid is populated regardless.

When importing the same shapefiles directly into SpatiaLite
using ImportSHP(..., pk_column, ...), the pk_column from source is kept, no
additional fid column is created.

How do you explain the difference here?

Many thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201025/454cf34f/attachment.html>

From kerim.khemraev at mail.ru  Sun Oct 25 09:17:11 2020
From: kerim.khemraev at mail.ru (=?UTF-8?B?0JrQtdGA0LjQvCDQpdC10LzRgNCw0LXQsg==?=)
Date: Sun, 25 Oct 2020 19:17:11 +0300
Subject: [gdal-dev] =?utf-8?q?Get_list_of_standard_coordinate_reference_sy?=
 =?utf-8?q?stem_names?=
Message-ID: <1603642631.160778122@f154.i.mail.ru>


Hi,
 
I just started to explore GDAL and PROJ.
I'm wondering how to get list of standard coordinate reference system names? I suppose there should be something that gives a list of standard coordinate reference system names and their parameters like in the picture attached:
 
Best regards
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201025/7582eaef/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 15679 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201025/7582eaef/attachment-0001.png>

From jukka.rahkonen at maanmittauslaitos.fi  Sun Oct 25 14:30:39 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Sun, 25 Oct 2020 14:30:39 -0700 (MST)
Subject: [gdal-dev] ogr2ogr -preserve_fid does not work when
 dst_datasource is SQLite/SpatiaLite
In-Reply-To: <CAF6=6MpV3sjFJEbMsX908JFEMinz5UXyiN__2JRSLxnyk5nVqA@mail.gmail.com>
References: <CAF6=6MpV3sjFJEbMsX908JFEMinz5UXyiN__2JRSLxnyk5nVqA@mail.gmail.com>
Message-ID: <1603661439102-0.post@n6.nabble.com>

Hi,

Could you give some test data? As far as I know shapefiles do not have any
pk_column that user could select.

-Jukka Rahkonen-


Paul Li wrote
> Using this option to convert shapefiles to shapefiles (with less columns)
> works perfectly fine. However, when dst_datasource is SQLite/SpatiaLite,
> this option is not working as expected, and ogc_fid is populated
> regardless.
> 
> When importing the same shapefiles directly into SpatiaLite
> using ImportSHP(..., pk_column, ...), the pk_column from source is kept,
> no
> additional fid column is created.
> 
> How do you explain the difference here?
> 
> Many thanks.
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From njacadieux.gitlab at gmail.com  Sun Oct 25 18:31:41 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Sun, 25 Oct 2020 21:31:41 -0400
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
Message-ID: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>

Hi,

With the following code, I get an empty string indicating the projection 
is not valid.

from osgeo import gdal, osr
raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
target_ds = 
driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands 
= 1,eType = gdal.GDT_Float32)
(array is a numpty array.)
raster_srs = osr.SpatialReference()
raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
target_ds.SetProjection(raster_srs.ExportToWkt())
target_ds.GetRasterBand(1).WriteArray(array)
raster_ds = None #close dataset
target_ds=None

Below is the result of gdal info from qgis. File appears to have a valid 
projection and is properly georeferenced in QGIS using other data sets. 
   Is this projection wrong or am I missing something in my python 
code?  The goal is to extract the projection from raster_ds set in order 
to apply to target_ds.  I can create the file, apply a geotransform but 
can't get the projection.  Can you help?

Thanks/merci!

Nicolas

QGIS version: 3.14.16-Pi
QGIS code revision: df27394552
Qt version: 5.11.2
GDAL version: 3.0.4
GEOS version: 3.8.1-CAPI-1.13.3
PROJ version: Rel. 6.3.2, May 1st, 2020
Processing algorithm…
Algorithm 'Raster information' starting…
Input parameters:
{ 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' : False, 
'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' : 'TEMPORARY_OUTPUT', 
'STATS' : False }

GDAL command:
gdalinfo C:/temp/180922_WTE3.tif
GDAL command output:
Warning 1: TIFFReadDirectory:Sum of Photometric type-related color 
channels and ExtraSamples doesn't match SamplesPerPixel. Defining 
non-color channels as ExtraSamples.

Driver: GTiff/GeoTIFF
Files: C:/temp/180922_WTE3.tif
Size is 1194, 2783
Coordinate System is:
PROJCRS["WGS 84 / UTM zone 18N",
BASEGEOGCRS["WGS 84",
DATUM["World Geodetic System 1984",
ELLIPSOID["WGS 84",6378137,298.257223563,
LENGTHUNIT["metre",1]]],
PRIMEM["Greenwich",0,
ANGLEUNIT["degree",0.0174532925199433]],
ID["EPSG",4326]],
CONVERSION["UTM zone 18N",
METHOD["Transverse Mercator",
ID["EPSG",9807]],
PARAMETER["Latitude of natural origin",0,
ANGLEUNIT["degree",0.0174532925199433],
ID["EPSG",8801]],
PARAMETER["Longitude of natural origin",-75,
ANGLEUNIT["degree",0.0174532925199433],
ID["EPSG",8802]],
PARAMETER["Scale factor at natural origin",0.9996,
SCALEUNIT["unity",1],
ID["EPSG",8805]],
PARAMETER["False easting",500000,
LENGTHUNIT["metre",1],
ID["EPSG",8806]],
PARAMETER["False northing",0,
LENGTHUNIT["metre",1],
ID["EPSG",8807]]],
CS[Cartesian,2],
AXIS["(E)",east,
ORDER[1],
LENGTHUNIT["metre",1]],
AXIS["(N)",north,
ORDER[2],
LENGTHUNIT["metre",1]],
USAGE[
SCOPE["unknown"],
AREA["World - N hemisphere - 78°W to 72°W - by country"],
BBOX[0,-78,84,-72]],
ID["EPSG",32618]]
Data axis to CRS axis mapping: 1,2
Origin = (459417.200000000011642,5028584.700000000186265)
Pixel Size = (0.050000000000000,-0.050000000000000)
Metadata:
AREA_OR_POINT=Area
TIFFTAG_XRESOLUTION=1
TIFFTAG_YRESOLUTION=1
Image Structure Metadata:
INTERLEAVE=BAND
Corner Coordinates:
Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W, 45d24'34.58"N)
Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W, 45d24'30.07"N)
Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W, 45d24'34.59"N)
Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W, 45d24'30.08"N)
Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
...
Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined




From matthewsbaran at gmail.com  Mon Oct 26 05:31:27 2020
From: matthewsbaran at gmail.com (Matthew Baran)
Date: Mon, 26 Oct 2020 08:31:27 -0400
Subject: [gdal-dev] NITF DES Data
Message-ID: <CAM2JLFmRP5-ZMkZwqaZ-+gZ6UY17zx4YKtU-dpGZriTqz+3LDQ@mail.gmail.com>

Hi All,

I would like to extract NITF data extension segment (DES) data using GDAL's
pre-built python packaging.  I'm aware of nitfdump, but that requires my
downstream users to build from source, so I'm looking for something more
integrated.  I see there is a "DES" metadata domain in the NITF driver, but
it's behind the ESRI_BUILD flag, so not part of the packaged release.  Is
DES data excluded on purpose, or is there a contribution I could make to
flesh out DES access in the NITF driver?

Any help pointing me in the right direction would be appreciated :)

Thanks-

Matt

-- 
Matthew S. Baran
matthewsbaran at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/6f3c5a63/attachment.html>

From even.rouault at spatialys.com  Mon Oct 26 06:35:44 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 26 Oct 2020 14:35:44 +0100
Subject: [gdal-dev] GDAL 3.2.0 RC1 available
Message-ID: <2744290.lB3DOBiyLG@even-i700>

Hi,

I have prepared a GDAL/OGR 3.2.0 release candidate.

Pick up an archive among the following ones (by ascending size):

  https://download.osgeo.org/gdal/3.2.0/gdal-3.2.0rc1.tar.xz
  https://download.osgeo.org/gdal/3.2.0/gdal-3.2.0rc1.tar.gz
  https://download.osgeo.org/gdal/3.2.0/gdal320rc1.zip

A snapshot of the gdalautotest suite is also available :

  https://download.osgeo.org/gdal/3.2.0/gdalautotest-3.2.0rc1.tar.gz
  https://download.osgeo.org/gdal/3.2.0/gdalautotest-3.2.0rc1.zip

A snapshot of the documentation is at:

  https://download.osgeo.org/gdal/3.2.0/gdal320doc.zip

GDAL-GRASS plugin:

  https://download.osgeo.org/gdal/3.2.0/gdal-grass-3.2.0.tar.gz

NEWS at:

  https://github.com/OSGeo/gdal/blob/v3.2.0RC1/gdal/NEWS

I'll call for a vote promoting it to final later this week if no
serious problems are reported before.

Best regards,

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Oct 26 08:51:27 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 26 Oct 2020 16:51:27 +0100
Subject: [gdal-dev] NITF DES Data
In-Reply-To: <CAM2JLFmRP5-ZMkZwqaZ-+gZ6UY17zx4YKtU-dpGZriTqz+3LDQ@mail.gmail.com>
References: <CAM2JLFmRP5-ZMkZwqaZ-+gZ6UY17zx4YKtU-dpGZriTqz+3LDQ@mail.gmail.com>
Message-ID: <2048460.DNhBj4gvMs@even-i700>

Matt,

> I would like to extract NITF data extension segment (DES) data using GDAL's
> pre-built python packaging.  I'm aware of nitfdump, but that requires my
> downstream users to build from source, so I'm looking for something more
> integrated.  I see there is a "DES" metadata domain in the NITF driver, but
> it's behind the ESRI_BUILD flag, so not part of the packaged release.  Is
> DES data excluded on purpose, or is there a contribution I could make to
> flesh out DES access in the NITF driver?

I guess this should be mostly a matter of moving the DES metadata reporting 
part away from their #ifdef ESRI_BUILD , testing that this works, adding test 
and adding documentation. I got confirmation that this is no longer used by 
Esri, so we could potentially change naming / behaviour if needed.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From njacadieux.gitlab at gmail.com  Mon Oct 26 10:53:39 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Mon, 26 Oct 2020 13:53:39 -0400
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
Message-ID: <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>

Hi,

In case mail question was not clear, I have posted the questions about 
this on stackexchange.  I posted a full code that you can run exposing 
my problem and question.

Thanks

Nicolas

https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection

On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
> Hi,
>
> With the following code, I get an empty string indicating the 
> projection is not valid.
>
> from osgeo import gdal, osr
> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
> target_ds = 
> driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands 
> = 1,eType = gdal.GDT_Float32)
> (array is a numpty array.)
> raster_srs = osr.SpatialReference()
> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
> target_ds.SetProjection(raster_srs.ExportToWkt())
> target_ds.GetRasterBand(1).WriteArray(array)
> raster_ds = None #close dataset
> target_ds=None
>
> Below is the result of gdal info from qgis. File appears to have a 
> valid projection and is properly georeferenced in QGIS using other 
> data sets.   Is this projection wrong or am I missing something in my 
> python code?  The goal is to extract the projection from raster_ds set 
> in order to apply to target_ds.  I can create the file, apply a 
> geotransform but can't get the projection.  Can you help?
>
> Thanks/merci!
>
> Nicolas
>
> QGIS version: 3.14.16-Pi
> QGIS code revision: df27394552
> Qt version: 5.11.2
> GDAL version: 3.0.4
> GEOS version: 3.8.1-CAPI-1.13.3
> PROJ version: Rel. 6.3.2, May 1st, 2020
> Processing algorithm…
> Algorithm 'Raster information' starting…
> Input parameters:
> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' : 
> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' : 
> 'TEMPORARY_OUTPUT', 'STATS' : False }
>
> GDAL command:
> gdalinfo C:/temp/180922_WTE3.tif
> GDAL command output:
> Warning 1: TIFFReadDirectory:Sum of Photometric type-related color 
> channels and ExtraSamples doesn't match SamplesPerPixel. Defining 
> non-color channels as ExtraSamples.
>
> Driver: GTiff/GeoTIFF
> Files: C:/temp/180922_WTE3.tif
> Size is 1194, 2783
> Coordinate System is:
> PROJCRS["WGS 84 / UTM zone 18N",
> BASEGEOGCRS["WGS 84",
> DATUM["World Geodetic System 1984",
> ELLIPSOID["WGS 84",6378137,298.257223563,
> LENGTHUNIT["metre",1]]],
> PRIMEM["Greenwich",0,
> ANGLEUNIT["degree",0.0174532925199433]],
> ID["EPSG",4326]],
> CONVERSION["UTM zone 18N",
> METHOD["Transverse Mercator",
> ID["EPSG",9807]],
> PARAMETER["Latitude of natural origin",0,
> ANGLEUNIT["degree",0.0174532925199433],
> ID["EPSG",8801]],
> PARAMETER["Longitude of natural origin",-75,
> ANGLEUNIT["degree",0.0174532925199433],
> ID["EPSG",8802]],
> PARAMETER["Scale factor at natural origin",0.9996,
> SCALEUNIT["unity",1],
> ID["EPSG",8805]],
> PARAMETER["False easting",500000,
> LENGTHUNIT["metre",1],
> ID["EPSG",8806]],
> PARAMETER["False northing",0,
> LENGTHUNIT["metre",1],
> ID["EPSG",8807]]],
> CS[Cartesian,2],
> AXIS["(E)",east,
> ORDER[1],
> LENGTHUNIT["metre",1]],
> AXIS["(N)",north,
> ORDER[2],
> LENGTHUNIT["metre",1]],
> USAGE[
> SCOPE["unknown"],
> AREA["World - N hemisphere - 78°W to 72°W - by country"],
> BBOX[0,-78,84,-72]],
> ID["EPSG",32618]]
> Data axis to CRS axis mapping: 1,2
> Origin = (459417.200000000011642,5028584.700000000186265)
> Pixel Size = (0.050000000000000,-0.050000000000000)
> Metadata:
> AREA_OR_POINT=Area
> TIFFTAG_XRESOLUTION=1
> TIFFTAG_YRESOLUTION=1
> Image Structure Metadata:
> INTERLEAVE=BAND
> Corner Coordinates:
> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W, 45d24'34.58"N)
> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W, 45d24'30.07"N)
> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W, 45d24'34.59"N)
> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W, 45d24'30.08"N)
> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
> ...
> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>
>
>

From njacadieux.gitlab at gmail.com  Mon Oct 26 11:35:46 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Mon, 26 Oct 2020 14:35:46 -0400
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
Message-ID: <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>

New info!

GetProjection works with gdal python 2.2.2 and 2.3.3 but not with with 
gdal 3.0.2.  Is this a change in the gdal library?

Nicolas

On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
> Hi,
>
> In case mail question was not clear, I have posted the questions about 
> this on stackexchange.  I posted a full code that you can run exposing 
> my problem and question.
>
> Thanks
>
> Nicolas
>
> https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection 
>
>
> On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>> Hi,
>>
>> With the following code, I get an empty string indicating the 
>> projection is not valid.
>>
>> from osgeo import gdal, osr
>> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>> target_ds = 
>> driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands 
>> = 1,eType = gdal.GDT_Float32)
>> (array is a numpty array.)
>> raster_srs = osr.SpatialReference()
>> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>> target_ds.SetProjection(raster_srs.ExportToWkt())
>> target_ds.GetRasterBand(1).WriteArray(array)
>> raster_ds = None #close dataset
>> target_ds=None
>>
>> Below is the result of gdal info from qgis. File appears to have a 
>> valid projection and is properly georeferenced in QGIS using other 
>> data sets.   Is this projection wrong or am I missing something in my 
>> python code?  The goal is to extract the projection from raster_ds 
>> set in order to apply to target_ds.  I can create the file, apply a 
>> geotransform but can't get the projection.  Can you help?
>>
>> Thanks/merci!
>>
>> Nicolas
>>
>> QGIS version: 3.14.16-Pi
>> QGIS code revision: df27394552
>> Qt version: 5.11.2
>> GDAL version: 3.0.4
>> GEOS version: 3.8.1-CAPI-1.13.3
>> PROJ version: Rel. 6.3.2, May 1st, 2020
>> Processing algorithm…
>> Algorithm 'Raster information' starting…
>> Input parameters:
>> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' : 
>> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' : 
>> 'TEMPORARY_OUTPUT', 'STATS' : False }
>>
>> GDAL command:
>> gdalinfo C:/temp/180922_WTE3.tif
>> GDAL command output:
>> Warning 1: TIFFReadDirectory:Sum of Photometric type-related color 
>> channels and ExtraSamples doesn't match SamplesPerPixel. Defining 
>> non-color channels as ExtraSamples.
>>
>> Driver: GTiff/GeoTIFF
>> Files: C:/temp/180922_WTE3.tif
>> Size is 1194, 2783
>> Coordinate System is:
>> PROJCRS["WGS 84 / UTM zone 18N",
>> BASEGEOGCRS["WGS 84",
>> DATUM["World Geodetic System 1984",
>> ELLIPSOID["WGS 84",6378137,298.257223563,
>> LENGTHUNIT["metre",1]]],
>> PRIMEM["Greenwich",0,
>> ANGLEUNIT["degree",0.0174532925199433]],
>> ID["EPSG",4326]],
>> CONVERSION["UTM zone 18N",
>> METHOD["Transverse Mercator",
>> ID["EPSG",9807]],
>> PARAMETER["Latitude of natural origin",0,
>> ANGLEUNIT["degree",0.0174532925199433],
>> ID["EPSG",8801]],
>> PARAMETER["Longitude of natural origin",-75,
>> ANGLEUNIT["degree",0.0174532925199433],
>> ID["EPSG",8802]],
>> PARAMETER["Scale factor at natural origin",0.9996,
>> SCALEUNIT["unity",1],
>> ID["EPSG",8805]],
>> PARAMETER["False easting",500000,
>> LENGTHUNIT["metre",1],
>> ID["EPSG",8806]],
>> PARAMETER["False northing",0,
>> LENGTHUNIT["metre",1],
>> ID["EPSG",8807]]],
>> CS[Cartesian,2],
>> AXIS["(E)",east,
>> ORDER[1],
>> LENGTHUNIT["metre",1]],
>> AXIS["(N)",north,
>> ORDER[2],
>> LENGTHUNIT["metre",1]],
>> USAGE[
>> SCOPE["unknown"],
>> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>> BBOX[0,-78,84,-72]],
>> ID["EPSG",32618]]
>> Data axis to CRS axis mapping: 1,2
>> Origin = (459417.200000000011642,5028584.700000000186265)
>> Pixel Size = (0.050000000000000,-0.050000000000000)
>> Metadata:
>> AREA_OR_POINT=Area
>> TIFFTAG_XRESOLUTION=1
>> TIFFTAG_YRESOLUTION=1
>> Image Structure Metadata:
>> INTERLEAVE=BAND
>> Corner Coordinates:
>> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W, 45d24'34.58"N)
>> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W, 45d24'30.07"N)
>> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W, 45d24'34.59"N)
>> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W, 45d24'30.08"N)
>> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
>> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>> ...
>> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>>
>>
>>

From runette at gmail.com  Mon Oct 26 12:44:10 2020
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Oct 2020 19:44:10 +0000
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
Message-ID: <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>

I am not sure why you are using GetProjection and not GetSpatialRef ?
Although, the code snippet you included in your email does not seem to use
either?

I certainly was in the process of working on some code that uses
.GeoSptialRef very successfully on GDAL3.1.3 - so I am sure that it is
working!

On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux <njacadieux.gitlab at gmail.com>
wrote:

> New info!
>
> GetProjection works with gdal python 2.2.2 and 2.3.3 but not with with
> gdal 3.0.2.  Is this a change in the gdal library?
>
> Nicolas
>
> On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
> > Hi,
> >
> > In case mail question was not clear, I have posted the questions about
> > this on stackexchange.  I posted a full code that you can run exposing
> > my problem and question.
> >
> > Thanks
> >
> > Nicolas
> >
> >
> https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
> >
> >
> > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
> >> Hi,
> >>
> >> With the following code, I get an empty string indicating the
> >> projection is not valid.
> >>
> >> from osgeo import gdal, osr
> >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
> >> target_ds =
> >>
> driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>
> >> = 1,eType = gdal.GDT_Float32)
> >> (array is a numpty array.)
> >> raster_srs = osr.SpatialReference()
> >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
> >> target_ds.SetProjection(raster_srs.ExportToWkt())
> >> target_ds.GetRasterBand(1).WriteArray(array)
> >> raster_ds = None #close dataset
> >> target_ds=None
> >>
> >> Below is the result of gdal info from qgis. File appears to have a
> >> valid projection and is properly georeferenced in QGIS using other
> >> data sets.   Is this projection wrong or am I missing something in my
> >> python code?  The goal is to extract the projection from raster_ds
> >> set in order to apply to target_ds.  I can create the file, apply a
> >> geotransform but can't get the projection.  Can you help?
> >>
> >> Thanks/merci!
> >>
> >> Nicolas
> >>
> >> QGIS version: 3.14.16-Pi
> >> QGIS code revision: df27394552
> >> Qt version: 5.11.2
> >> GDAL version: 3.0.4
> >> GEOS version: 3.8.1-CAPI-1.13.3
> >> PROJ version: Rel. 6.3.2, May 1st, 2020
> >> Processing algorithm…
> >> Algorithm 'Raster information' starting…
> >> Input parameters:
> >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' :
> >> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' :
> >> 'TEMPORARY_OUTPUT', 'STATS' : False }
> >>
> >> GDAL command:
> >> gdalinfo C:/temp/180922_WTE3.tif
> >> GDAL command output:
> >> Warning 1: TIFFReadDirectory:Sum of Photometric type-related color
> >> channels and ExtraSamples doesn't match SamplesPerPixel. Defining
> >> non-color channels as ExtraSamples.
> >>
> >> Driver: GTiff/GeoTIFF
> >> Files: C:/temp/180922_WTE3.tif
> >> Size is 1194, 2783
> >> Coordinate System is:
> >> PROJCRS["WGS 84 / UTM zone 18N",
> >> BASEGEOGCRS["WGS 84",
> >> DATUM["World Geodetic System 1984",
> >> ELLIPSOID["WGS 84",6378137,298.257223563,
> >> LENGTHUNIT["metre",1]]],
> >> PRIMEM["Greenwich",0,
> >> ANGLEUNIT["degree",0.0174532925199433]],
> >> ID["EPSG",4326]],
> >> CONVERSION["UTM zone 18N",
> >> METHOD["Transverse Mercator",
> >> ID["EPSG",9807]],
> >> PARAMETER["Latitude of natural origin",0,
> >> ANGLEUNIT["degree",0.0174532925199433],
> >> ID["EPSG",8801]],
> >> PARAMETER["Longitude of natural origin",-75,
> >> ANGLEUNIT["degree",0.0174532925199433],
> >> ID["EPSG",8802]],
> >> PARAMETER["Scale factor at natural origin",0.9996,
> >> SCALEUNIT["unity",1],
> >> ID["EPSG",8805]],
> >> PARAMETER["False easting",500000,
> >> LENGTHUNIT["metre",1],
> >> ID["EPSG",8806]],
> >> PARAMETER["False northing",0,
> >> LENGTHUNIT["metre",1],
> >> ID["EPSG",8807]]],
> >> CS[Cartesian,2],
> >> AXIS["(E)",east,
> >> ORDER[1],
> >> LENGTHUNIT["metre",1]],
> >> AXIS["(N)",north,
> >> ORDER[2],
> >> LENGTHUNIT["metre",1]],
> >> USAGE[
> >> SCOPE["unknown"],
> >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
> >> BBOX[0,-78,84,-72]],
> >> ID["EPSG",32618]]
> >> Data axis to CRS axis mapping: 1,2
> >> Origin = (459417.200000000011642,5028584.700000000186265)
> >> Pixel Size = (0.050000000000000,-0.050000000000000)
> >> Metadata:
> >> AREA_OR_POINT=Area
> >> TIFFTAG_XRESOLUTION=1
> >> TIFFTAG_YRESOLUTION=1
> >> Image Structure Metadata:
> >> INTERLEAVE=BAND
> >> Corner Coordinates:
> >> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W, 45d24'34.58"N)
> >> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W, 45d24'30.07"N)
> >> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W, 45d24'34.59"N)
> >> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W, 45d24'30.08"N)
> >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
> >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
> >> ...
> >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
> >>
> >>
> >>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/d72156d4/attachment.html>

From njacadieux.gitlab at gmail.com  Mon Oct 26 13:08:39 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Mon, 26 Oct 2020 16:08:39 -0400
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
 <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
Message-ID: <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>

Hi,

Thanks for helping.  I will put my code at the end.  The problem seems 
to be between gdal python lib 2.2.2 and 3.0.2.  Under 2.2.2 and < 3,  
GetProjection() works well but return nothing with gdal python lib 
3.0.2.  It's my understanding that .GetSpatialRef is for OGR data 
(vector).  Am I wrong?

I was using GetProjection() because that is the method used in the 
raster_api tutorial. (https://gdal.org/tutorials/raster_api_tut.html)

I understand that gdal 3 now relies on proj 6 for the SpatialRef.  I'am 
trying to figure out if is a problem with proj or with gdal...

Nicolas


code:

# -*- coding: utf-8 -*-
"""
Created on Sun Oct 25 15:09:05 2020

@author: Nicolas
"""
#https://stackoverflow.com/questions/37648439/simplest-way-to-save-array-into-raster-file-in-python


from osgeo import gdal, osr, ogr
import numpy

print (gdal.__version__)

# https://gdal.org/tutorials/raster_api_tut.html
fileformat = "GTiff"
driver = gdal.GetDriverByName(fileformat)
metadata = driver.GetMetadata()
if metadata.get(gdal.DCAP_CREATE) == "YES":
     print("Driver {} supports Create() method.".format(fileformat))

if metadata.get(gdal.DCAP_CREATECOPY) == "YES":
     print("Driver {} supports CreateCopy() method.".format(fileformat))
dst_ds = driver.Create(r"c:\temp\gdal.tif", xsize=512, ysize=512,
                     bands=1, eType=gdal.GDT_Byte)
dst_ds.SetGeoTransform([444720, 30, 0, 3751320, 0, -30])
srs = osr.SpatialReference()
srs.SetUTM(11, 1)
srs.SetWellKnownGeogCS("NAD27")
dst_ds.SetProjection(srs.ExportToWkt())
print ('srs = ',srs)# this is good
raster = numpy.zeros((512, 512), dtype=numpy.uint8)
dst_ds.GetRasterBand(1).WriteArray(raster)
# Once we're done, close properly the dataset
srs = None
dst_ds = None #srs is file and well georeferenced in Qgis.

# 
---------------------------------------------------------------------------
# open dataset try to read srs
# 
---------------------------------------------------------------------------
raster_ds = gdal.Open(r"C:\temp\gdal.tif")
# first try
print("Projection is {}".format(raster_ds.GetProjection()))

# second try
srs = osr.SpatialReference()
srs.ImportFromWkt(raster_ds.GetProjectionRef())
print ('srs =', srs)
# thrid try
srs = osr.SpatialReference()
srs = raster_ds.GetProjection()
print('srs =', srs)
srs = raster_ds.GetProjectionRef()
# forth try
# from gdal_info 
https://github.com/OSGeo/gdal/blob/master/gdal/swig/python/samples/gdalinfo.py
pszProjection = raster_ds.GetProjectionRef()
print(pszProjection)
if pszProjection is not None:
     hSRS = osr.SpatialReference()
     if hSRS.ImportFromWkt(pszProjection) == gdal.CE_None:
         pszPrettyWkt = hSRS.ExportToPrettyWkt(False)
         print("Coordinate System is:\n%s" % pszPrettyWkt)
     else:
         print("Coordinate System is `%s'" % pszProjection)


On 2020-10-26 3:44 p.m., Paul Harwood wrote:
> I am not sure why you are using GetProjection and not GetSpatialRef ? 
> Although, the code snippet you included in your email does not seem to 
> use either?
>
> I certainly was in the process of working on some code that uses 
> .GeoSptialRef very successfully on GDAL3.1.3 - so I am sure that it is 
> working!
>
> On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux 
> <njacadieux.gitlab at gmail.com <mailto:njacadieux.gitlab at gmail.com>> wrote:
>
>     New info!
>
>     GetProjection works with gdal python 2.2.2 and 2.3.3 but not with
>     with
>     gdal 3.0.2.  Is this a change in the gdal library?
>
>     Nicolas
>
>     On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
>     > Hi,
>     >
>     > In case mail question was not clear, I have posted the questions
>     about
>     > this on stackexchange.  I posted a full code that you can run
>     exposing
>     > my problem and question.
>     >
>     > Thanks
>     >
>     > Nicolas
>     >
>     >
>     https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
>
>     >
>     >
>     > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>     >> Hi,
>     >>
>     >> With the following code, I get an empty string indicating the
>     >> projection is not valid.
>     >>
>     >> from osgeo import gdal, osr
>     >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>     >> target_ds =
>     >>
>     driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>
>     >> = 1,eType = gdal.GDT_Float32)
>     >> (array is a numpty array.)
>     >> raster_srs = osr.SpatialReference()
>     >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>     >> target_ds.SetProjection(raster_srs.ExportToWkt())
>     >> target_ds.GetRasterBand(1).WriteArray(array)
>     >> raster_ds = None #close dataset
>     >> target_ds=None
>     >>
>     >> Below is the result of gdal info from qgis. File appears to have a
>     >> valid projection and is properly georeferenced in QGIS using other
>     >> data sets.   Is this projection wrong or am I missing something
>     in my
>     >> python code?  The goal is to extract the projection from raster_ds
>     >> set in order to apply to target_ds.  I can create the file,
>     apply a
>     >> geotransform but can't get the projection.  Can you help?
>     >>
>     >> Thanks/merci!
>     >>
>     >> Nicolas
>     >>
>     >> QGIS version: 3.14.16-Pi
>     >> QGIS code revision: df27394552
>     >> Qt version: 5.11.2
>     >> GDAL version: 3.0.4
>     >> GEOS version: 3.8.1-CAPI-1.13.3
>     >> PROJ version: Rel. 6.3.2, May 1st, 2020
>     >> Processing algorithm…
>     >> Algorithm 'Raster information' starting…
>     >> Input parameters:
>     >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' :
>     >> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' :
>     >> 'TEMPORARY_OUTPUT', 'STATS' : False }
>     >>
>     >> GDAL command:
>     >> gdalinfo C:/temp/180922_WTE3.tif
>     >> GDAL command output:
>     >> Warning 1: TIFFReadDirectory:Sum of Photometric type-related color
>     >> channels and ExtraSamples doesn't match SamplesPerPixel. Defining
>     >> non-color channels as ExtraSamples.
>     >>
>     >> Driver: GTiff/GeoTIFF
>     >> Files: C:/temp/180922_WTE3.tif
>     >> Size is 1194, 2783
>     >> Coordinate System is:
>     >> PROJCRS["WGS 84 / UTM zone 18N",
>     >> BASEGEOGCRS["WGS 84",
>     >> DATUM["World Geodetic System 1984",
>     >> ELLIPSOID["WGS 84",6378137,298.257223563,
>     >> LENGTHUNIT["metre",1]]],
>     >> PRIMEM["Greenwich",0,
>     >> ANGLEUNIT["degree",0.0174532925199433]],
>     >> ID["EPSG",4326]],
>     >> CONVERSION["UTM zone 18N",
>     >> METHOD["Transverse Mercator",
>     >> ID["EPSG",9807]],
>     >> PARAMETER["Latitude of natural origin",0,
>     >> ANGLEUNIT["degree",0.0174532925199433],
>     >> ID["EPSG",8801]],
>     >> PARAMETER["Longitude of natural origin",-75,
>     >> ANGLEUNIT["degree",0.0174532925199433],
>     >> ID["EPSG",8802]],
>     >> PARAMETER["Scale factor at natural origin",0.9996,
>     >> SCALEUNIT["unity",1],
>     >> ID["EPSG",8805]],
>     >> PARAMETER["False easting",500000,
>     >> LENGTHUNIT["metre",1],
>     >> ID["EPSG",8806]],
>     >> PARAMETER["False northing",0,
>     >> LENGTHUNIT["metre",1],
>     >> ID["EPSG",8807]]],
>     >> CS[Cartesian,2],
>     >> AXIS["(E)",east,
>     >> ORDER[1],
>     >> LENGTHUNIT["metre",1]],
>     >> AXIS["(N)",north,
>     >> ORDER[2],
>     >> LENGTHUNIT["metre",1]],
>     >> USAGE[
>     >> SCOPE["unknown"],
>     >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>     >> BBOX[0,-78,84,-72]],
>     >> ID["EPSG",32618]]
>     >> Data axis to CRS axis mapping: 1,2
>     >> Origin = (459417.200000000011642,5028584.700000000186265)
>     >> Pixel Size = (0.050000000000000,-0.050000000000000)
>     >> Metadata:
>     >> AREA_OR_POINT=Area
>     >> TIFFTAG_XRESOLUTION=1
>     >> TIFFTAG_YRESOLUTION=1
>     >> Image Structure Metadata:
>     >> INTERLEAVE=BAND
>     >> Corner Coordinates:
>     >> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W,
>     45d24'34.58"N)
>     >> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W,
>     45d24'30.07"N)
>     >> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W,
>     45d24'34.59"N)
>     >> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W,
>     45d24'30.08"N)
>     >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
>     >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>     >> ...
>     >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>     >>
>     >>
>     >>
>     _______________________________________________
>     gdal-dev mailing list
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/369ef445/attachment-0001.html>

From runette at gmail.com  Mon Oct 26 14:04:04 2020
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Oct 2020 21:04:04 +0000
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
 <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
 <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>
Message-ID: <CAE8nN5Oveu_MFkgLZbvOksdLL3WtXvUWm1q3OFK0vZbfeXVaDA@mail.gmail.com>

GetSpatialRef is OSR based and it is certainly working for me against GDAL
Raster datasets - it would not be a method against the GDAL Dataset if it
was only an OGR thing - OGR has its own objects.

This code is working for me at this very minute and giving me the name of
the CRS for a gtiff

dataset = gdal.Open(str(filepath))
        if dataset:
            proj = "None"
            crs = dataset.GetSpatialRef()
            if crs:
                proj = crs.GetName()
            return {"type": "gdal", "driver":
dataset.GetDriver().ShortName, "proj": proj}

On Mon, 26 Oct 2020 at 20:08, Nicolas Cadieux <njacadieux.gitlab at gmail.com>
wrote:

> Hi,
>
> Thanks for helping.  I will put my code at the end.  The problem seems to
> be between gdal python lib 2.2.2 and 3.0.2.  Under 2.2.2 and < 3,
> GetProjection() works well but return nothing with gdal python lib 3.0.2.
> It's my understanding that .GetSpatialRef is for OGR data (vector).  Am I
> wrong?
>
> I was using GetProjection() because that is the method used in the
> raster_api tutorial.  (https://gdal.org/tutorials/raster_api_tut.html)
>
> I understand that gdal 3 now relies on proj 6 for the SpatialRef.  I'am
> trying to figure out if is a problem with proj or with gdal...
>
> Nicolas
>
>
> code:
>
> # -*- coding: utf-8 -*-
> """
> Created on Sun Oct 25 15:09:05 2020
>
> @author: Nicolas
> """
> #
> https://stackoverflow.com/questions/37648439/simplest-way-to-save-array-into-raster-file-in-python
>
>
> from osgeo import gdal, osr, ogr
> import numpy
>
> print (gdal.__version__)
>
> # https://gdal.org/tutorials/raster_api_tut.html
> fileformat = "GTiff"
> driver = gdal.GetDriverByName(fileformat)
> metadata = driver.GetMetadata()
> if metadata.get(gdal.DCAP_CREATE) == "YES":
>     print("Driver {} supports Create() method.".format(fileformat))
>
> if metadata.get(gdal.DCAP_CREATECOPY) == "YES":
>     print("Driver {} supports CreateCopy() method.".format(fileformat))
> dst_ds = driver.Create(r"c:\temp\gdal.tif", xsize=512, ysize=512,
>                     bands=1, eType=gdal.GDT_Byte)
> dst_ds.SetGeoTransform([444720, 30, 0, 3751320, 0, -30])
> srs = osr.SpatialReference()
> srs.SetUTM(11, 1)
> srs.SetWellKnownGeogCS("NAD27")
> dst_ds.SetProjection(srs.ExportToWkt())
> print ('srs = ',srs)# this is good
> raster = numpy.zeros((512, 512), dtype=numpy.uint8)
> dst_ds.GetRasterBand(1).WriteArray(raster)
> # Once we're done, close properly the dataset
> srs = None
> dst_ds = None #srs is file and well georeferenced in Qgis.
>
> #
> ---------------------------------------------------------------------------
> # open dataset try to read srs
> #
> ---------------------------------------------------------------------------
> raster_ds = gdal.Open(r"C:\temp\gdal.tif")
> # first try
> print("Projection is {}".format(raster_ds.GetProjection()))
>
> # second try
> srs = osr.SpatialReference()
> srs.ImportFromWkt(raster_ds.GetProjectionRef())
> print ('srs =', srs)
> # thrid try
> srs = osr.SpatialReference()
> srs = raster_ds.GetProjection()
> print('srs =', srs)
> srs = raster_ds.GetProjectionRef()
> # forth try
> # from gdal_info
> https://github.com/OSGeo/gdal/blob/master/gdal/swig/python/samples/gdalinfo.py
> pszProjection = raster_ds.GetProjectionRef()
> print(pszProjection)
> if pszProjection is not None:
>     hSRS = osr.SpatialReference()
>     if hSRS.ImportFromWkt(pszProjection) == gdal.CE_None:
>         pszPrettyWkt = hSRS.ExportToPrettyWkt(False)
>         print("Coordinate System is:\n%s" % pszPrettyWkt)
>     else:
>         print("Coordinate System is `%s'" % pszProjection)
>
>
> On 2020-10-26 3:44 p.m., Paul Harwood wrote:
>
> I am not sure why you are using GetProjection and not GetSpatialRef ?
> Although, the code snippet you included in your email does not seem to use
> either?
>
> I certainly was in the process of working on some code that uses
> .GeoSptialRef very successfully on GDAL3.1.3 - so I am sure that it is
> working!
>
> On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux <njacadieux.gitlab at gmail.com>
> wrote:
>
>> New info!
>>
>> GetProjection works with gdal python 2.2.2 and 2.3.3 but not with with
>> gdal 3.0.2.  Is this a change in the gdal library?
>>
>> Nicolas
>>
>> On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
>> > Hi,
>> >
>> > In case mail question was not clear, I have posted the questions about
>> > this on stackexchange.  I posted a full code that you can run exposing
>> > my problem and question.
>> >
>> > Thanks
>> >
>> > Nicolas
>> >
>> >
>> https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
>> >
>> >
>> > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>> >> Hi,
>> >>
>> >> With the following code, I get an empty string indicating the
>> >> projection is not valid.
>> >>
>> >> from osgeo import gdal, osr
>> >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>> >> target_ds =
>> >>
>> driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>>
>> >> = 1,eType = gdal.GDT_Float32)
>> >> (array is a numpty array.)
>> >> raster_srs = osr.SpatialReference()
>> >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>> >> target_ds.SetProjection(raster_srs.ExportToWkt())
>> >> target_ds.GetRasterBand(1).WriteArray(array)
>> >> raster_ds = None #close dataset
>> >> target_ds=None
>> >>
>> >> Below is the result of gdal info from qgis. File appears to have a
>> >> valid projection and is properly georeferenced in QGIS using other
>> >> data sets.   Is this projection wrong or am I missing something in my
>> >> python code?  The goal is to extract the projection from raster_ds
>> >> set in order to apply to target_ds.  I can create the file, apply a
>> >> geotransform but can't get the projection.  Can you help?
>> >>
>> >> Thanks/merci!
>> >>
>> >> Nicolas
>> >>
>> >> QGIS version: 3.14.16-Pi
>> >> QGIS code revision: df27394552
>> >> Qt version: 5.11.2
>> >> GDAL version: 3.0.4
>> >> GEOS version: 3.8.1-CAPI-1.13.3
>> >> PROJ version: Rel. 6.3.2, May 1st, 2020
>> >> Processing algorithm…
>> >> Algorithm 'Raster information' starting…
>> >> Input parameters:
>> >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' :
>> >> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' :
>> >> 'TEMPORARY_OUTPUT', 'STATS' : False }
>> >>
>> >> GDAL command:
>> >> gdalinfo C:/temp/180922_WTE3.tif
>> >> GDAL command output:
>> >> Warning 1: TIFFReadDirectory:Sum of Photometric type-related color
>> >> channels and ExtraSamples doesn't match SamplesPerPixel. Defining
>> >> non-color channels as ExtraSamples.
>> >>
>> >> Driver: GTiff/GeoTIFF
>> >> Files: C:/temp/180922_WTE3.tif
>> >> Size is 1194, 2783
>> >> Coordinate System is:
>> >> PROJCRS["WGS 84 / UTM zone 18N",
>> >> BASEGEOGCRS["WGS 84",
>> >> DATUM["World Geodetic System 1984",
>> >> ELLIPSOID["WGS 84",6378137,298.257223563,
>> >> LENGTHUNIT["metre",1]]],
>> >> PRIMEM["Greenwich",0,
>> >> ANGLEUNIT["degree",0.0174532925199433]],
>> >> ID["EPSG",4326]],
>> >> CONVERSION["UTM zone 18N",
>> >> METHOD["Transverse Mercator",
>> >> ID["EPSG",9807]],
>> >> PARAMETER["Latitude of natural origin",0,
>> >> ANGLEUNIT["degree",0.0174532925199433],
>> >> ID["EPSG",8801]],
>> >> PARAMETER["Longitude of natural origin",-75,
>> >> ANGLEUNIT["degree",0.0174532925199433],
>> >> ID["EPSG",8802]],
>> >> PARAMETER["Scale factor at natural origin",0.9996,
>> >> SCALEUNIT["unity",1],
>> >> ID["EPSG",8805]],
>> >> PARAMETER["False easting",500000,
>> >> LENGTHUNIT["metre",1],
>> >> ID["EPSG",8806]],
>> >> PARAMETER["False northing",0,
>> >> LENGTHUNIT["metre",1],
>> >> ID["EPSG",8807]]],
>> >> CS[Cartesian,2],
>> >> AXIS["(E)",east,
>> >> ORDER[1],
>> >> LENGTHUNIT["metre",1]],
>> >> AXIS["(N)",north,
>> >> ORDER[2],
>> >> LENGTHUNIT["metre",1]],
>> >> USAGE[
>> >> SCOPE["unknown"],
>> >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>> >> BBOX[0,-78,84,-72]],
>> >> ID["EPSG",32618]]
>> >> Data axis to CRS axis mapping: 1,2
>> >> Origin = (459417.200000000011642,5028584.700000000186265)
>> >> Pixel Size = (0.050000000000000,-0.050000000000000)
>> >> Metadata:
>> >> AREA_OR_POINT=Area
>> >> TIFFTAG_XRESOLUTION=1
>> >> TIFFTAG_YRESOLUTION=1
>> >> Image Structure Metadata:
>> >> INTERLEAVE=BAND
>> >> Corner Coordinates:
>> >> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W, 45d24'34.58"N)
>> >> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W, 45d24'30.07"N)
>> >> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W, 45d24'34.59"N)
>> >> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W, 45d24'30.08"N)
>> >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
>> >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>> >> ...
>> >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>> >>
>> >>
>> >>
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/9c57c273/attachment.html>

From njacadieux.gitlab at gmail.com  Mon Oct 26 15:11:02 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Mon, 26 Oct 2020 18:11:02 -0400
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <CAE8nN5Oveu_MFkgLZbvOksdLL3WtXvUWm1q3OFK0vZbfeXVaDA@mail.gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
 <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
 <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>
 <CAE8nN5Oveu_MFkgLZbvOksdLL3WtXvUWm1q3OFK0vZbfeXVaDA@mail.gmail.com>
Message-ID: <e0ab1dc0-1145-8d47-ba44-b593d4d11fdb@gmail.com>

Hi,

Comes back as None for me... :(  I'am working with Anaconda. Could it be 
my environment?

Nicolas

On 2020-10-26 5:04 p.m., Paul Harwood wrote:
> GetSpatialRef is OSR based and it is certainly working for me against 
> GDAL Raster datasets - it would not be a method against the GDAL 
> Dataset if it was only an OGR thing - OGR has its own objects.
>
> This code is working for me at this very minute and giving me the name 
> of the CRS for a gtiff
>
> dataset = gdal.Open(str(filepath))
>         if dataset:
>             proj = "None"
>             crs = dataset.GetSpatialRef()
>             if crs:
>                 proj = crs.GetName()
>             return {"type": "gdal", "driver": 
> dataset.GetDriver().ShortName, "proj": proj}
>
> On Mon, 26 Oct 2020 at 20:08, Nicolas Cadieux 
> <njacadieux.gitlab at gmail.com <mailto:njacadieux.gitlab at gmail.com>> wrote:
>
>     Hi,
>
>     Thanks for helping.  I will put my code at the end.  The problem
>     seems to be between gdal python lib 2.2.2 and 3.0.2.  Under 2.2.2
>     and < 3,  GetProjection() works well but return nothing with gdal
>     python lib 3.0.2.  It's my understanding that .GetSpatialRef is
>     for OGR data (vector).  Am I wrong?
>
>     I was using GetProjection() because that is the method used in the
>     raster_api tutorial.  (https://gdal.org/tutorials/raster_api_tut.html)
>
>     I understand that gdal 3 now relies on proj 6 for the SpatialRef. 
>     I'am trying to figure out if is a problem with proj or with gdal...
>
>     Nicolas
>
>
>     code:
>
>     # -*- coding: utf-8 -*-
>     """
>     Created on Sun Oct 25 15:09:05 2020
>
>     @author: Nicolas
>     """
>     #https://stackoverflow.com/questions/37648439/simplest-way-to-save-array-into-raster-file-in-python
>
>
>     from osgeo import gdal, osr, ogr
>     import numpy
>
>     print (gdal.__version__)
>
>     # https://gdal.org/tutorials/raster_api_tut.html
>     fileformat = "GTiff"
>     driver = gdal.GetDriverByName(fileformat)
>     metadata = driver.GetMetadata()
>     if metadata.get(gdal.DCAP_CREATE) == "YES":
>         print("Driver {} supports Create() method.".format(fileformat))
>
>     if metadata.get(gdal.DCAP_CREATECOPY) == "YES":
>         print("Driver {} supports CreateCopy()
>     method.".format(fileformat))
>     dst_ds = driver.Create(r"c:\temp\gdal.tif", xsize=512, ysize=512,
>                         bands=1, eType=gdal.GDT_Byte)
>     dst_ds.SetGeoTransform([444720, 30, 0, 3751320, 0, -30])
>     srs = osr.SpatialReference()
>     srs.SetUTM(11, 1)
>     srs.SetWellKnownGeogCS("NAD27")
>     dst_ds.SetProjection(srs.ExportToWkt())
>     print ('srs = ',srs)# this is good
>     raster = numpy.zeros((512, 512), dtype=numpy.uint8)
>     dst_ds.GetRasterBand(1).WriteArray(raster)
>     # Once we're done, close properly the dataset
>     srs = None
>     dst_ds = None #srs is file and well georeferenced in Qgis.
>
>     #
>     ---------------------------------------------------------------------------
>     # open dataset try to read srs
>     #
>     ---------------------------------------------------------------------------
>     raster_ds = gdal.Open(r"C:\temp\gdal.tif")
>     # first try
>     print("Projection is {}".format(raster_ds.GetProjection()))
>
>     # second try
>     srs = osr.SpatialReference()
>     srs.ImportFromWkt(raster_ds.GetProjectionRef())
>     print ('srs =', srs)
>     # thrid try
>     srs = osr.SpatialReference()
>     srs = raster_ds.GetProjection()
>     print('srs =', srs)
>     srs = raster_ds.GetProjectionRef()
>     # forth try
>     # from gdal_info
>     https://github.com/OSGeo/gdal/blob/master/gdal/swig/python/samples/gdalinfo.py
>     pszProjection = raster_ds.GetProjectionRef()
>     print(pszProjection)
>     if pszProjection is not None:
>         hSRS = osr.SpatialReference()
>         if hSRS.ImportFromWkt(pszProjection) == gdal.CE_None:
>             pszPrettyWkt = hSRS.ExportToPrettyWkt(False)
>             print("Coordinate System is:\n%s" % pszPrettyWkt)
>         else:
>             print("Coordinate System is `%s'" % pszProjection)
>
>
>     On 2020-10-26 3:44 p.m., Paul Harwood wrote:
>>     I am not sure why you are using GetProjection and not
>>     GetSpatialRef ? Although, the code snippet you included in your
>>     email does not seem to use either?
>>
>>     I certainly was in the process of working on some code that uses
>>     .GeoSptialRef very successfully on GDAL3.1.3 - so I am sure that
>>     it is working!
>>
>>     On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux
>>     <njacadieux.gitlab at gmail.com
>>     <mailto:njacadieux.gitlab at gmail.com>> wrote:
>>
>>         New info!
>>
>>         GetProjection works with gdal python 2.2.2 and 2.3.3 but not
>>         with with
>>         gdal 3.0.2.  Is this a change in the gdal library?
>>
>>         Nicolas
>>
>>         On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
>>         > Hi,
>>         >
>>         > In case mail question was not clear, I have posted the
>>         questions about
>>         > this on stackexchange.  I posted a full code that you can
>>         run exposing
>>         > my problem and question.
>>         >
>>         > Thanks
>>         >
>>         > Nicolas
>>         >
>>         >
>>         https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
>>
>>         >
>>         >
>>         > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>>         >> Hi,
>>         >>
>>         >> With the following code, I get an empty string indicating the
>>         >> projection is not valid.
>>         >>
>>         >> from osgeo import gdal, osr
>>         >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>>         >> target_ds =
>>         >>
>>         driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>>
>>         >> = 1,eType = gdal.GDT_Float32)
>>         >> (array is a numpty array.)
>>         >> raster_srs = osr.SpatialReference()
>>         >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>         >> target_ds.SetProjection(raster_srs.ExportToWkt())
>>         >> target_ds.GetRasterBand(1).WriteArray(array)
>>         >> raster_ds = None #close dataset
>>         >> target_ds=None
>>         >>
>>         >> Below is the result of gdal info from qgis. File appears
>>         to have a
>>         >> valid projection and is properly georeferenced in QGIS
>>         using other
>>         >> data sets.   Is this projection wrong or am I missing
>>         something in my
>>         >> python code?  The goal is to extract the projection from
>>         raster_ds
>>         >> set in order to apply to target_ds.  I can create the
>>         file, apply a
>>         >> geotransform but can't get the projection. Can you help?
>>         >>
>>         >> Thanks/merci!
>>         >>
>>         >> Nicolas
>>         >>
>>         >> QGIS version: 3.14.16-Pi
>>         >> QGIS code revision: df27394552
>>         >> Qt version: 5.11.2
>>         >> GDAL version: 3.0.4
>>         >> GEOS version: 3.8.1-CAPI-1.13.3
>>         >> PROJ version: Rel. 6.3.2, May 1st, 2020
>>         >> Processing algorithm…
>>         >> Algorithm 'Raster information' starting…
>>         >> Input parameters:
>>         >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif',
>>         'MIN_MAX' :
>>         >> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' :
>>         >> 'TEMPORARY_OUTPUT', 'STATS' : False }
>>         >>
>>         >> GDAL command:
>>         >> gdalinfo C:/temp/180922_WTE3.tif
>>         >> GDAL command output:
>>         >> Warning 1: TIFFReadDirectory:Sum of Photometric
>>         type-related color
>>         >> channels and ExtraSamples doesn't match SamplesPerPixel.
>>         Defining
>>         >> non-color channels as ExtraSamples.
>>         >>
>>         >> Driver: GTiff/GeoTIFF
>>         >> Files: C:/temp/180922_WTE3.tif
>>         >> Size is 1194, 2783
>>         >> Coordinate System is:
>>         >> PROJCRS["WGS 84 / UTM zone 18N",
>>         >> BASEGEOGCRS["WGS 84",
>>         >> DATUM["World Geodetic System 1984",
>>         >> ELLIPSOID["WGS 84",6378137,298.257223563,
>>         >> LENGTHUNIT["metre",1]]],
>>         >> PRIMEM["Greenwich",0,
>>         >> ANGLEUNIT["degree",0.0174532925199433]],
>>         >> ID["EPSG",4326]],
>>         >> CONVERSION["UTM zone 18N",
>>         >> METHOD["Transverse Mercator",
>>         >> ID["EPSG",9807]],
>>         >> PARAMETER["Latitude of natural origin",0,
>>         >> ANGLEUNIT["degree",0.0174532925199433],
>>         >> ID["EPSG",8801]],
>>         >> PARAMETER["Longitude of natural origin",-75,
>>         >> ANGLEUNIT["degree",0.0174532925199433],
>>         >> ID["EPSG",8802]],
>>         >> PARAMETER["Scale factor at natural origin",0.9996,
>>         >> SCALEUNIT["unity",1],
>>         >> ID["EPSG",8805]],
>>         >> PARAMETER["False easting",500000,
>>         >> LENGTHUNIT["metre",1],
>>         >> ID["EPSG",8806]],
>>         >> PARAMETER["False northing",0,
>>         >> LENGTHUNIT["metre",1],
>>         >> ID["EPSG",8807]]],
>>         >> CS[Cartesian,2],
>>         >> AXIS["(E)",east,
>>         >> ORDER[1],
>>         >> LENGTHUNIT["metre",1]],
>>         >> AXIS["(N)",north,
>>         >> ORDER[2],
>>         >> LENGTHUNIT["metre",1]],
>>         >> USAGE[
>>         >> SCOPE["unknown"],
>>         >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>>         >> BBOX[0,-78,84,-72]],
>>         >> ID["EPSG",32618]]
>>         >> Data axis to CRS axis mapping: 1,2
>>         >> Origin = (459417.200000000011642,5028584.700000000186265)
>>         >> Pixel Size = (0.050000000000000,-0.050000000000000)
>>         >> Metadata:
>>         >> AREA_OR_POINT=Area
>>         >> TIFFTAG_XRESOLUTION=1
>>         >> TIFFTAG_YRESOLUTION=1
>>         >> Image Structure Metadata:
>>         >> INTERLEAVE=BAND
>>         >> Corner Coordinates:
>>         >> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W,
>>         45d24'34.58"N)
>>         >> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W,
>>         45d24'30.07"N)
>>         >> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W,
>>         45d24'34.59"N)
>>         >> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W,
>>         45d24'30.08"N)
>>         >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W,
>>         45d24'32.33"N)
>>         >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>>         >> ...
>>         >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>>         >>
>>         >>
>>         >>
>>         _______________________________________________
>>         gdal-dev mailing list
>>         gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>         https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/6b6dbbe3/attachment-0001.html>

From runette at gmail.com  Mon Oct 26 15:31:14 2020
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Oct 2020 22:31:14 +0000
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <e0ab1dc0-1145-8d47-ba44-b593d4d11fdb@gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
 <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
 <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>
 <CAE8nN5Oveu_MFkgLZbvOksdLL3WtXvUWm1q3OFK0vZbfeXVaDA@mail.gmail.com>
 <e0ab1dc0-1145-8d47-ba44-b593d4d11fdb@gmail.com>
Message-ID: <CAE8nN5P4o5CNh6vDrksN=fCUBTR0q3LMjYWEGP9v11A_dS-08g@mail.gmail.com>

Me too.

But which conda package for gdal are you using - there are a lot of ones
out there.

Are you using conda install -c conda-forge gdal ?

It should be version 3.1.4 at the moment ?

Also - I don't know if this is part of it but ...

"srs = osr.SpatialReference()
srs.SetUTM(11, 1)
srs.SetWellKnownGeogCS("NAD27")
dst_ds.SetProjection(srs.ExportToWkt())
"

why not just

"srs = osr.SpatialReference()
srs.SetUTM(11, 1)
srs.SetWellKnownGeogCS("NAD27")
dst_ds.SetSpatialRef(srs)
"
??

On Mon, 26 Oct 2020 at 22:11, Nicolas Cadieux <njacadieux.gitlab at gmail.com>
wrote:

> Hi,
>
> Comes back as None for me... :(  I'am working with Anaconda.  Could it be
> my environment?
>
> Nicolas
> On 2020-10-26 5:04 p.m., Paul Harwood wrote:
>
> GetSpatialRef is OSR based and it is certainly working for me against GDAL
> Raster datasets - it would not be a method against the GDAL Dataset if it
> was only an OGR thing - OGR has its own objects.
>
> This code is working for me at this very minute and giving me the name of
> the CRS for a gtiff
>
> dataset = gdal.Open(str(filepath))
>         if dataset:
>             proj = "None"
>             crs = dataset.GetSpatialRef()
>             if crs:
>                 proj = crs.GetName()
>             return {"type": "gdal", "driver":
> dataset.GetDriver().ShortName, "proj": proj}
>
> On Mon, 26 Oct 2020 at 20:08, Nicolas Cadieux <njacadieux.gitlab at gmail.com>
> wrote:
>
>> Hi,
>>
>> Thanks for helping.  I will put my code at the end.  The problem seems to
>> be between gdal python lib 2.2.2 and 3.0.2.  Under 2.2.2 and < 3,
>> GetProjection() works well but return nothing with gdal python lib 3.0.2.
>> It's my understanding that .GetSpatialRef is for OGR data (vector).  Am I
>> wrong?
>>
>> I was using GetProjection() because that is the method used in the
>> raster_api tutorial.  (https://gdal.org/tutorials/raster_api_tut.html)
>>
>> I understand that gdal 3 now relies on proj 6 for the SpatialRef.  I'am
>> trying to figure out if is a problem with proj or with gdal...
>>
>> Nicolas
>>
>>
>> code:
>>
>> # -*- coding: utf-8 -*-
>> """
>> Created on Sun Oct 25 15:09:05 2020
>>
>> @author: Nicolas
>> """
>> #
>> https://stackoverflow.com/questions/37648439/simplest-way-to-save-array-into-raster-file-in-python
>>
>>
>> from osgeo import gdal, osr, ogr
>> import numpy
>>
>> print (gdal.__version__)
>>
>> # https://gdal.org/tutorials/raster_api_tut.html
>> fileformat = "GTiff"
>> driver = gdal.GetDriverByName(fileformat)
>> metadata = driver.GetMetadata()
>> if metadata.get(gdal.DCAP_CREATE) == "YES":
>>     print("Driver {} supports Create() method.".format(fileformat))
>>
>> if metadata.get(gdal.DCAP_CREATECOPY) == "YES":
>>     print("Driver {} supports CreateCopy() method.".format(fileformat))
>> dst_ds = driver.Create(r"c:\temp\gdal.tif", xsize=512, ysize=512,
>>                     bands=1, eType=gdal.GDT_Byte)
>> dst_ds.SetGeoTransform([444720, 30, 0, 3751320, 0, -30])
>> srs = osr.SpatialReference()
>> srs.SetUTM(11, 1)
>> srs.SetWellKnownGeogCS("NAD27")
>> dst_ds.SetProjection(srs.ExportToWkt())
>> print ('srs = ',srs)# this is good
>> raster = numpy.zeros((512, 512), dtype=numpy.uint8)
>> dst_ds.GetRasterBand(1).WriteArray(raster)
>> # Once we're done, close properly the dataset
>> srs = None
>> dst_ds = None #srs is file and well georeferenced in Qgis.
>>
>> #
>> ---------------------------------------------------------------------------
>> # open dataset try to read srs
>> #
>> ---------------------------------------------------------------------------
>> raster_ds = gdal.Open(r"C:\temp\gdal.tif")
>> # first try
>> print("Projection is {}".format(raster_ds.GetProjection()))
>>
>> # second try
>> srs = osr.SpatialReference()
>> srs.ImportFromWkt(raster_ds.GetProjectionRef())
>> print ('srs =', srs)
>> # thrid try
>> srs = osr.SpatialReference()
>> srs = raster_ds.GetProjection()
>> print('srs =', srs)
>> srs = raster_ds.GetProjectionRef()
>> # forth try
>> # from gdal_info
>> https://github.com/OSGeo/gdal/blob/master/gdal/swig/python/samples/gdalinfo.py
>> pszProjection = raster_ds.GetProjectionRef()
>> print(pszProjection)
>> if pszProjection is not None:
>>     hSRS = osr.SpatialReference()
>>     if hSRS.ImportFromWkt(pszProjection) == gdal.CE_None:
>>         pszPrettyWkt = hSRS.ExportToPrettyWkt(False)
>>         print("Coordinate System is:\n%s" % pszPrettyWkt)
>>     else:
>>         print("Coordinate System is `%s'" % pszProjection)
>>
>>
>> On 2020-10-26 3:44 p.m., Paul Harwood wrote:
>>
>> I am not sure why you are using GetProjection and not GetSpatialRef ?
>> Although, the code snippet you included in your email does not seem to use
>> either?
>>
>> I certainly was in the process of working on some code that uses
>> .GeoSptialRef very successfully on GDAL3.1.3 - so I am sure that it is
>> working!
>>
>> On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux <
>> njacadieux.gitlab at gmail.com> wrote:
>>
>>> New info!
>>>
>>> GetProjection works with gdal python 2.2.2 and 2.3.3 but not with with
>>> gdal 3.0.2.  Is this a change in the gdal library?
>>>
>>> Nicolas
>>>
>>> On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
>>> > Hi,
>>> >
>>> > In case mail question was not clear, I have posted the questions about
>>> > this on stackexchange.  I posted a full code that you can run exposing
>>> > my problem and question.
>>> >
>>> > Thanks
>>> >
>>> > Nicolas
>>> >
>>> >
>>> https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
>>> >
>>> >
>>> > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>>> >> Hi,
>>> >>
>>> >> With the following code, I get an empty string indicating the
>>> >> projection is not valid.
>>> >>
>>> >> from osgeo import gdal, osr
>>> >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>>> >> target_ds =
>>> >>
>>> driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>>>
>>> >> = 1,eType = gdal.GDT_Float32)
>>> >> (array is a numpty array.)
>>> >> raster_srs = osr.SpatialReference()
>>> >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>> >> target_ds.SetProjection(raster_srs.ExportToWkt())
>>> >> target_ds.GetRasterBand(1).WriteArray(array)
>>> >> raster_ds = None #close dataset
>>> >> target_ds=None
>>> >>
>>> >> Below is the result of gdal info from qgis. File appears to have a
>>> >> valid projection and is properly georeferenced in QGIS using other
>>> >> data sets.   Is this projection wrong or am I missing something in my
>>> >> python code?  The goal is to extract the projection from raster_ds
>>> >> set in order to apply to target_ds.  I can create the file, apply a
>>> >> geotransform but can't get the projection.  Can you help?
>>> >>
>>> >> Thanks/merci!
>>> >>
>>> >> Nicolas
>>> >>
>>> >> QGIS version: 3.14.16-Pi
>>> >> QGIS code revision: df27394552
>>> >> Qt version: 5.11.2
>>> >> GDAL version: 3.0.4
>>> >> GEOS version: 3.8.1-CAPI-1.13.3
>>> >> PROJ version: Rel. 6.3.2, May 1st, 2020
>>> >> Processing algorithm…
>>> >> Algorithm 'Raster information' starting…
>>> >> Input parameters:
>>> >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' :
>>> >> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' :
>>> >> 'TEMPORARY_OUTPUT', 'STATS' : False }
>>> >>
>>> >> GDAL command:
>>> >> gdalinfo C:/temp/180922_WTE3.tif
>>> >> GDAL command output:
>>> >> Warning 1: TIFFReadDirectory:Sum of Photometric type-related color
>>> >> channels and ExtraSamples doesn't match SamplesPerPixel. Defining
>>> >> non-color channels as ExtraSamples.
>>> >>
>>> >> Driver: GTiff/GeoTIFF
>>> >> Files: C:/temp/180922_WTE3.tif
>>> >> Size is 1194, 2783
>>> >> Coordinate System is:
>>> >> PROJCRS["WGS 84 / UTM zone 18N",
>>> >> BASEGEOGCRS["WGS 84",
>>> >> DATUM["World Geodetic System 1984",
>>> >> ELLIPSOID["WGS 84",6378137,298.257223563,
>>> >> LENGTHUNIT["metre",1]]],
>>> >> PRIMEM["Greenwich",0,
>>> >> ANGLEUNIT["degree",0.0174532925199433]],
>>> >> ID["EPSG",4326]],
>>> >> CONVERSION["UTM zone 18N",
>>> >> METHOD["Transverse Mercator",
>>> >> ID["EPSG",9807]],
>>> >> PARAMETER["Latitude of natural origin",0,
>>> >> ANGLEUNIT["degree",0.0174532925199433],
>>> >> ID["EPSG",8801]],
>>> >> PARAMETER["Longitude of natural origin",-75,
>>> >> ANGLEUNIT["degree",0.0174532925199433],
>>> >> ID["EPSG",8802]],
>>> >> PARAMETER["Scale factor at natural origin",0.9996,
>>> >> SCALEUNIT["unity",1],
>>> >> ID["EPSG",8805]],
>>> >> PARAMETER["False easting",500000,
>>> >> LENGTHUNIT["metre",1],
>>> >> ID["EPSG",8806]],
>>> >> PARAMETER["False northing",0,
>>> >> LENGTHUNIT["metre",1],
>>> >> ID["EPSG",8807]]],
>>> >> CS[Cartesian,2],
>>> >> AXIS["(E)",east,
>>> >> ORDER[1],
>>> >> LENGTHUNIT["metre",1]],
>>> >> AXIS["(N)",north,
>>> >> ORDER[2],
>>> >> LENGTHUNIT["metre",1]],
>>> >> USAGE[
>>> >> SCOPE["unknown"],
>>> >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>>> >> BBOX[0,-78,84,-72]],
>>> >> ID["EPSG",32618]]
>>> >> Data axis to CRS axis mapping: 1,2
>>> >> Origin = (459417.200000000011642,5028584.700000000186265)
>>> >> Pixel Size = (0.050000000000000,-0.050000000000000)
>>> >> Metadata:
>>> >> AREA_OR_POINT=Area
>>> >> TIFFTAG_XRESOLUTION=1
>>> >> TIFFTAG_YRESOLUTION=1
>>> >> Image Structure Metadata:
>>> >> INTERLEAVE=BAND
>>> >> Corner Coordinates:
>>> >> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W, 45d24'34.58"N)
>>> >> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W, 45d24'30.07"N)
>>> >> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W, 45d24'34.59"N)
>>> >> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W, 45d24'30.08"N)
>>> >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
>>> >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>>> >> ...
>>> >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>>> >>
>>> >>
>>> >>
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/e0b80c5a/attachment-0001.html>

From njacadieux.gitlab at gmail.com  Mon Oct 26 16:00:55 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Mon, 26 Oct 2020 19:00:55 -0400
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <CAE8nN5P4o5CNh6vDrksN=fCUBTR0q3LMjYWEGP9v11A_dS-08g@mail.gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
 <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
 <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>
 <CAE8nN5Oveu_MFkgLZbvOksdLL3WtXvUWm1q3OFK0vZbfeXVaDA@mail.gmail.com>
 <e0ab1dc0-1145-8d47-ba44-b593d4d11fdb@gmail.com>
 <CAE8nN5P4o5CNh6vDrksN=fCUBTR0q3LMjYWEGP9v11A_dS-08g@mail.gmail.com>
Message-ID: <142c7181-ddae-27c7-ea8c-1b00ecea644e@gmail.com>

Hi,

I am currently on 3.0.2.  and the Anaconda Navigator does not give me 
higher options.  I will create a new clean environments and try conda 
install.  I will try changing the code I think my version of the code 
probably corresponds to <3 versions of gdal.  It's a cut and paste from 
the gdal tutorial. Can I send you my test file to test on your code?

Thanks, I appreciate the help.

Nicolas

On 2020-10-26 6:31 p.m., Paul Harwood wrote:
> Me too.
>
> But which conda package for gdal are you using - there are a lot of 
> ones out there.
>
> Are you using conda install -c conda-forge gdal ?
>
> It should be version 3.1.4 at the moment ?
>
> Also - I don't know if this is part of it but ...
>
> "srs = osr.SpatialReference()
> srs.SetUTM(11, 1)
> srs.SetWellKnownGeogCS("NAD27")
> dst_ds.SetProjection(srs.ExportToWkt())
> "
>
> why not just
>
> "srs = osr.SpatialReference()
> srs.SetUTM(11, 1)
> srs.SetWellKnownGeogCS("NAD27")
> dst_ds.SetSpatialRef(srs)
> "
> ??
>
> On Mon, 26 Oct 2020 at 22:11, Nicolas Cadieux 
> <njacadieux.gitlab at gmail.com <mailto:njacadieux.gitlab at gmail.com>> wrote:
>
>     Hi,
>
>     Comes back as None for me... :(  I'am working with Anaconda. 
>     Could it be my environment?
>
>     Nicolas
>
>     On 2020-10-26 5:04 p.m., Paul Harwood wrote:
>>     GetSpatialRef is OSR based and it is certainly working for me
>>     against GDAL Raster datasets - it would not be a method against
>>     the GDAL Dataset if it was only an OGR thing - OGR has its own
>>     objects.
>>
>>     This code is working for me at this very minute and giving me the
>>     name of the CRS for a gtiff
>>
>>     dataset = gdal.Open(str(filepath))
>>             if dataset:
>>                 proj = "None"
>>                 crs = dataset.GetSpatialRef()
>>                 if crs:
>>                     proj = crs.GetName()
>>                 return {"type": "gdal", "driver":
>>     dataset.GetDriver().ShortName, "proj": proj}
>>
>>     On Mon, 26 Oct 2020 at 20:08, Nicolas Cadieux
>>     <njacadieux.gitlab at gmail.com
>>     <mailto:njacadieux.gitlab at gmail.com>> wrote:
>>
>>         Hi,
>>
>>         Thanks for helping.  I will put my code at the end.  The
>>         problem seems to be between gdal python lib 2.2.2 and 3.0.2. 
>>         Under 2.2.2 and < 3, GetProjection() works well but return
>>         nothing with gdal python lib 3.0.2.  It's my understanding
>>         that .GetSpatialRef is for OGR data (vector).  Am I wrong?
>>
>>         I was using GetProjection() because that is the method used
>>         in the raster_api tutorial. 
>>         (https://gdal.org/tutorials/raster_api_tut.html)
>>
>>         I understand that gdal 3 now relies on proj 6 for the
>>         SpatialRef.  I'am trying to figure out if is a problem with
>>         proj or with gdal...
>>
>>         Nicolas
>>
>>
>>         code:
>>
>>         # -*- coding: utf-8 -*-
>>         """
>>         Created on Sun Oct 25 15:09:05 2020
>>
>>         @author: Nicolas
>>         """
>>         #https://stackoverflow.com/questions/37648439/simplest-way-to-save-array-into-raster-file-in-python
>>
>>
>>         from osgeo import gdal, osr, ogr
>>         import numpy
>>
>>         print (gdal.__version__)
>>
>>         # https://gdal.org/tutorials/raster_api_tut.html
>>         fileformat = "GTiff"
>>         driver = gdal.GetDriverByName(fileformat)
>>         metadata = driver.GetMetadata()
>>         if metadata.get(gdal.DCAP_CREATE) == "YES":
>>             print("Driver {} supports Create()
>>         method.".format(fileformat))
>>
>>         if metadata.get(gdal.DCAP_CREATECOPY) == "YES":
>>             print("Driver {} supports CreateCopy()
>>         method.".format(fileformat))
>>         dst_ds = driver.Create(r"c:\temp\gdal.tif", xsize=512, ysize=512,
>>                             bands=1, eType=gdal.GDT_Byte)
>>         dst_ds.SetGeoTransform([444720, 30, 0, 3751320, 0, -30])
>>         srs = osr.SpatialReference()
>>         srs.SetUTM(11, 1)
>>         srs.SetWellKnownGeogCS("NAD27")
>>         dst_ds.SetProjection(srs.ExportToWkt())
>>         print ('srs = ',srs)# this is good
>>         raster = numpy.zeros((512, 512), dtype=numpy.uint8)
>>         dst_ds.GetRasterBand(1).WriteArray(raster)
>>         # Once we're done, close properly the dataset
>>         srs = None
>>         dst_ds = None #srs is file and well georeferenced in Qgis.
>>
>>         #
>>         ---------------------------------------------------------------------------
>>         # open dataset try to read srs
>>         #
>>         ---------------------------------------------------------------------------
>>         raster_ds = gdal.Open(r"C:\temp\gdal.tif")
>>         # first try
>>         print("Projection is {}".format(raster_ds.GetProjection()))
>>
>>         # second try
>>         srs = osr.SpatialReference()
>>         srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>         print ('srs =', srs)
>>         # thrid try
>>         srs = osr.SpatialReference()
>>         srs = raster_ds.GetProjection()
>>         print('srs =', srs)
>>         srs = raster_ds.GetProjectionRef()
>>         # forth try
>>         # from gdal_info
>>         https://github.com/OSGeo/gdal/blob/master/gdal/swig/python/samples/gdalinfo.py
>>         pszProjection = raster_ds.GetProjectionRef()
>>         print(pszProjection)
>>         if pszProjection is not None:
>>             hSRS = osr.SpatialReference()
>>             if hSRS.ImportFromWkt(pszProjection) == gdal.CE_None:
>>                 pszPrettyWkt = hSRS.ExportToPrettyWkt(False)
>>                 print("Coordinate System is:\n%s" % pszPrettyWkt)
>>             else:
>>                 print("Coordinate System is `%s'" % pszProjection)
>>
>>
>>         On 2020-10-26 3:44 p.m., Paul Harwood wrote:
>>>         I am not sure why you are using GetProjection and not
>>>         GetSpatialRef ? Although, the code snippet you included in
>>>         your email does not seem to use either?
>>>
>>>         I certainly was in the process of working on some code that
>>>         uses .GeoSptialRef very successfully on GDAL3.1.3 - so I am
>>>         sure that it is working!
>>>
>>>         On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux
>>>         <njacadieux.gitlab at gmail.com
>>>         <mailto:njacadieux.gitlab at gmail.com>> wrote:
>>>
>>>             New info!
>>>
>>>             GetProjection works with gdal python 2.2.2 and 2.3.3 but
>>>             not with with
>>>             gdal 3.0.2.  Is this a change in the gdal library?
>>>
>>>             Nicolas
>>>
>>>             On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
>>>             > Hi,
>>>             >
>>>             > In case mail question was not clear, I have posted the
>>>             questions about
>>>             > this on stackexchange.  I posted a full code that you
>>>             can run exposing
>>>             > my problem and question.
>>>             >
>>>             > Thanks
>>>             >
>>>             > Nicolas
>>>             >
>>>             >
>>>             https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
>>>
>>>             >
>>>             >
>>>             > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>>>             >> Hi,
>>>             >>
>>>             >> With the following code, I get an empty string
>>>             indicating the
>>>             >> projection is not valid.
>>>             >>
>>>             >> from osgeo import gdal, osr
>>>             >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>>>             >> target_ds =
>>>             >>
>>>             driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>>>
>>>             >> = 1,eType = gdal.GDT_Float32)
>>>             >> (array is a numpty array.)
>>>             >> raster_srs = osr.SpatialReference()
>>>             >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>>             >> target_ds.SetProjection(raster_srs.ExportToWkt())
>>>             >> target_ds.GetRasterBand(1).WriteArray(array)
>>>             >> raster_ds = None #close dataset
>>>             >> target_ds=None
>>>             >>
>>>             >> Below is the result of gdal info from qgis. File
>>>             appears to have a
>>>             >> valid projection and is properly georeferenced in
>>>             QGIS using other
>>>             >> data sets.   Is this projection wrong or am I missing
>>>             something in my
>>>             >> python code?  The goal is to extract the projection
>>>             from raster_ds
>>>             >> set in order to apply to target_ds. I can create the
>>>             file, apply a
>>>             >> geotransform but can't get the projection.  Can you help?
>>>             >>
>>>             >> Thanks/merci!
>>>             >>
>>>             >> Nicolas
>>>             >>
>>>             >> QGIS version: 3.14.16-Pi
>>>             >> QGIS code revision: df27394552
>>>             >> Qt version: 5.11.2
>>>             >> GDAL version: 3.0.4
>>>             >> GEOS version: 3.8.1-CAPI-1.13.3
>>>             >> PROJ version: Rel. 6.3.2, May 1st, 2020
>>>             >> Processing algorithm…
>>>             >> Algorithm 'Raster information' starting…
>>>             >> Input parameters:
>>>             >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif',
>>>             'MIN_MAX' :
>>>             >> False, 'NOGCP' : False, 'NO_METADATA' : False,
>>>             'OUTPUT' :
>>>             >> 'TEMPORARY_OUTPUT', 'STATS' : False }
>>>             >>
>>>             >> GDAL command:
>>>             >> gdalinfo C:/temp/180922_WTE3.tif
>>>             >> GDAL command output:
>>>             >> Warning 1: TIFFReadDirectory:Sum of Photometric
>>>             type-related color
>>>             >> channels and ExtraSamples doesn't match
>>>             SamplesPerPixel. Defining
>>>             >> non-color channels as ExtraSamples.
>>>             >>
>>>             >> Driver: GTiff/GeoTIFF
>>>             >> Files: C:/temp/180922_WTE3.tif
>>>             >> Size is 1194, 2783
>>>             >> Coordinate System is:
>>>             >> PROJCRS["WGS 84 / UTM zone 18N",
>>>             >> BASEGEOGCRS["WGS 84",
>>>             >> DATUM["World Geodetic System 1984",
>>>             >> ELLIPSOID["WGS 84",6378137,298.257223563,
>>>             >> LENGTHUNIT["metre",1]]],
>>>             >> PRIMEM["Greenwich",0,
>>>             >> ANGLEUNIT["degree",0.0174532925199433]],
>>>             >> ID["EPSG",4326]],
>>>             >> CONVERSION["UTM zone 18N",
>>>             >> METHOD["Transverse Mercator",
>>>             >> ID["EPSG",9807]],
>>>             >> PARAMETER["Latitude of natural origin",0,
>>>             >> ANGLEUNIT["degree",0.0174532925199433],
>>>             >> ID["EPSG",8801]],
>>>             >> PARAMETER["Longitude of natural origin",-75,
>>>             >> ANGLEUNIT["degree",0.0174532925199433],
>>>             >> ID["EPSG",8802]],
>>>             >> PARAMETER["Scale factor at natural origin",0.9996,
>>>             >> SCALEUNIT["unity",1],
>>>             >> ID["EPSG",8805]],
>>>             >> PARAMETER["False easting",500000,
>>>             >> LENGTHUNIT["metre",1],
>>>             >> ID["EPSG",8806]],
>>>             >> PARAMETER["False northing",0,
>>>             >> LENGTHUNIT["metre",1],
>>>             >> ID["EPSG",8807]]],
>>>             >> CS[Cartesian,2],
>>>             >> AXIS["(E)",east,
>>>             >> ORDER[1],
>>>             >> LENGTHUNIT["metre",1]],
>>>             >> AXIS["(N)",north,
>>>             >> ORDER[2],
>>>             >> LENGTHUNIT["metre",1]],
>>>             >> USAGE[
>>>             >> SCOPE["unknown"],
>>>             >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>>>             >> BBOX[0,-78,84,-72]],
>>>             >> ID["EPSG",32618]]
>>>             >> Data axis to CRS axis mapping: 1,2
>>>             >> Origin = (459417.200000000011642,5028584.700000000186265)
>>>             >> Pixel Size = (0.050000000000000,-0.050000000000000)
>>>             >> Metadata:
>>>             >> AREA_OR_POINT=Area
>>>             >> TIFFTAG_XRESOLUTION=1
>>>             >> TIFFTAG_YRESOLUTION=1
>>>             >> Image Structure Metadata:
>>>             >> INTERLEAVE=BAND
>>>             >> Corner Coordinates:
>>>             >> Upper Left ( 459417.200, 5028584.700) ( 75d31'
>>>             7.03"W, 45d24'34.58"N)
>>>             >> Lower Left ( 459417.200, 5028445.550) ( 75d31'
>>>             6.99"W, 45d24'30.07"N)
>>>             >> Upper Right ( 459476.900, 5028584.700) ( 75d31'
>>>             4.28"W, 45d24'34.59"N)
>>>             >> Lower Right ( 459476.900, 5028445.550) ( 75d31'
>>>             4.24"W, 45d24'30.08"N)
>>>             >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W,
>>>             45d24'32.33"N)
>>>             >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>>>             >> ...
>>>             >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>>>             >>
>>>             >>
>>>             >>
>>>             _______________________________________________
>>>             gdal-dev mailing list
>>>             gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>>             https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/742f27ee/attachment-0001.html>

From steve_wealands at essolutions.com.au  Mon Oct 26 16:07:12 2020
From: steve_wealands at essolutions.com.au (srweal)
Date: Mon, 26 Oct 2020 16:07:12 -0700 (MST)
Subject: [gdal-dev] C# - OGR.Feature.GetFieldAsBinary - Unavailable
In-Reply-To: <1602119429834-0.post@n6.nabble.com>
References: <1602119429834-0.post@n6.nabble.com>
Message-ID: <1603753632798-0.post@n6.nabble.com>

I've not been able to progress this myself. I have posted it as an issue in
GDAL which might be a better place for discussions/ideas - not sure:
https://github.com/OSGeo/gdal/issues/3041



--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From runette at gmail.com  Mon Oct 26 16:18:35 2020
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Oct 2020 23:18:35 +0000
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <142c7181-ddae-27c7-ea8c-1b00ecea644e@gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
 <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
 <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>
 <CAE8nN5Oveu_MFkgLZbvOksdLL3WtXvUWm1q3OFK0vZbfeXVaDA@mail.gmail.com>
 <e0ab1dc0-1145-8d47-ba44-b593d4d11fdb@gmail.com>
 <CAE8nN5P4o5CNh6vDrksN=fCUBTR0q3LMjYWEGP9v11A_dS-08g@mail.gmail.com>
 <142c7181-ddae-27c7-ea8c-1b00ecea644e@gmail.com>
Message-ID: <CAE8nN5Pu71ORAjnuLfqcEaEspMV+bPF-rFVnH8OTnNtYPsVWkQ@mail.gmail.com>

"and the Anaconda Navigator does not give me higher options"

just run the command "conda install -c conda-forge gdal".

It has to come from conda-forge and not conda-main. You can add conda-forge
to the navigator - but it is usually just quicker to use the cli.

Sorry - but I don't really have the time to debug test files.

On Mon, 26 Oct 2020 at 23:00, Nicolas Cadieux <njacadieux.gitlab at gmail.com>
wrote:

> Hi,
>
> I am currently on 3.0.2.  and the Anaconda Navigator does not give me
> higher options.  I will create a new clean environments and try conda
> install.  I will try changing the code I think my version of the code
> probably corresponds to <3 versions of gdal.  It's a cut and paste from the
> gdal tutorial. Can I send you my test file to test on your code?
>
> Thanks, I appreciate the help.
>
> Nicolas
> On 2020-10-26 6:31 p.m., Paul Harwood wrote:
>
> Me too.
>
> But which conda package for gdal are you using - there are a lot of ones
> out there.
>
> Are you using conda install -c conda-forge gdal ?
>
> It should be version 3.1.4 at the moment ?
>
> Also - I don't know if this is part of it but ...
>
> "srs = osr.SpatialReference()
> srs.SetUTM(11, 1)
> srs.SetWellKnownGeogCS("NAD27")
> dst_ds.SetProjection(srs.ExportToWkt())
> "
>
> why not just
>
> "srs = osr.SpatialReference()
> srs.SetUTM(11, 1)
> srs.SetWellKnownGeogCS("NAD27")
> dst_ds.SetSpatialRef(srs)
> "
> ??
>
> On Mon, 26 Oct 2020 at 22:11, Nicolas Cadieux <njacadieux.gitlab at gmail.com>
> wrote:
>
>> Hi,
>>
>> Comes back as None for me... :(  I'am working with Anaconda.  Could it be
>> my environment?
>>
>> Nicolas
>> On 2020-10-26 5:04 p.m., Paul Harwood wrote:
>>
>> GetSpatialRef is OSR based and it is certainly working for me against
>> GDAL Raster datasets - it would not be a method against the GDAL Dataset if
>> it was only an OGR thing - OGR has its own objects.
>>
>> This code is working for me at this very minute and giving me the name of
>> the CRS for a gtiff
>>
>> dataset = gdal.Open(str(filepath))
>>         if dataset:
>>             proj = "None"
>>             crs = dataset.GetSpatialRef()
>>             if crs:
>>                 proj = crs.GetName()
>>             return {"type": "gdal", "driver":
>> dataset.GetDriver().ShortName, "proj": proj}
>>
>> On Mon, 26 Oct 2020 at 20:08, Nicolas Cadieux <
>> njacadieux.gitlab at gmail.com> wrote:
>>
>>> Hi,
>>>
>>> Thanks for helping.  I will put my code at the end.  The problem seems
>>> to be between gdal python lib 2.2.2 and 3.0.2.  Under 2.2.2 and < 3,
>>> GetProjection() works well but return nothing with gdal python lib 3.0.2.
>>> It's my understanding that .GetSpatialRef is for OGR data (vector).  Am I
>>> wrong?
>>>
>>> I was using GetProjection() because that is the method used in the
>>> raster_api tutorial.  (https://gdal.org/tutorials/raster_api_tut.html)
>>>
>>> I understand that gdal 3 now relies on proj 6 for the SpatialRef.  I'am
>>> trying to figure out if is a problem with proj or with gdal...
>>>
>>> Nicolas
>>>
>>>
>>> code:
>>>
>>> # -*- coding: utf-8 -*-
>>> """
>>> Created on Sun Oct 25 15:09:05 2020
>>>
>>> @author: Nicolas
>>> """
>>> #
>>> https://stackoverflow.com/questions/37648439/simplest-way-to-save-array-into-raster-file-in-python
>>>
>>>
>>> from osgeo import gdal, osr, ogr
>>> import numpy
>>>
>>> print (gdal.__version__)
>>>
>>> # https://gdal.org/tutorials/raster_api_tut.html
>>> fileformat = "GTiff"
>>> driver = gdal.GetDriverByName(fileformat)
>>> metadata = driver.GetMetadata()
>>> if metadata.get(gdal.DCAP_CREATE) == "YES":
>>>     print("Driver {} supports Create() method.".format(fileformat))
>>>
>>> if metadata.get(gdal.DCAP_CREATECOPY) == "YES":
>>>     print("Driver {} supports CreateCopy() method.".format(fileformat))
>>> dst_ds = driver.Create(r"c:\temp\gdal.tif", xsize=512, ysize=512,
>>>                     bands=1, eType=gdal.GDT_Byte)
>>> dst_ds.SetGeoTransform([444720, 30, 0, 3751320, 0, -30])
>>> srs = osr.SpatialReference()
>>> srs.SetUTM(11, 1)
>>> srs.SetWellKnownGeogCS("NAD27")
>>> dst_ds.SetProjection(srs.ExportToWkt())
>>> print ('srs = ',srs)# this is good
>>> raster = numpy.zeros((512, 512), dtype=numpy.uint8)
>>> dst_ds.GetRasterBand(1).WriteArray(raster)
>>> # Once we're done, close properly the dataset
>>> srs = None
>>> dst_ds = None #srs is file and well georeferenced in Qgis.
>>>
>>> #
>>> ---------------------------------------------------------------------------
>>> # open dataset try to read srs
>>> #
>>> ---------------------------------------------------------------------------
>>> raster_ds = gdal.Open(r"C:\temp\gdal.tif")
>>> # first try
>>> print("Projection is {}".format(raster_ds.GetProjection()))
>>>
>>> # second try
>>> srs = osr.SpatialReference()
>>> srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>> print ('srs =', srs)
>>> # thrid try
>>> srs = osr.SpatialReference()
>>> srs = raster_ds.GetProjection()
>>> print('srs =', srs)
>>> srs = raster_ds.GetProjectionRef()
>>> # forth try
>>> # from gdal_info
>>> https://github.com/OSGeo/gdal/blob/master/gdal/swig/python/samples/gdalinfo.py
>>> pszProjection = raster_ds.GetProjectionRef()
>>> print(pszProjection)
>>> if pszProjection is not None:
>>>     hSRS = osr.SpatialReference()
>>>     if hSRS.ImportFromWkt(pszProjection) == gdal.CE_None:
>>>         pszPrettyWkt = hSRS.ExportToPrettyWkt(False)
>>>         print("Coordinate System is:\n%s" % pszPrettyWkt)
>>>     else:
>>>         print("Coordinate System is `%s'" % pszProjection)
>>>
>>>
>>> On 2020-10-26 3:44 p.m., Paul Harwood wrote:
>>>
>>> I am not sure why you are using GetProjection and not GetSpatialRef ?
>>> Although, the code snippet you included in your email does not seem to use
>>> either?
>>>
>>> I certainly was in the process of working on some code that uses
>>> .GeoSptialRef very successfully on GDAL3.1.3 - so I am sure that it is
>>> working!
>>>
>>> On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux <
>>> njacadieux.gitlab at gmail.com> wrote:
>>>
>>>> New info!
>>>>
>>>> GetProjection works with gdal python 2.2.2 and 2.3.3 but not with with
>>>> gdal 3.0.2.  Is this a change in the gdal library?
>>>>
>>>> Nicolas
>>>>
>>>> On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
>>>> > Hi,
>>>> >
>>>> > In case mail question was not clear, I have posted the questions
>>>> about
>>>> > this on stackexchange.  I posted a full code that you can run
>>>> exposing
>>>> > my problem and question.
>>>> >
>>>> > Thanks
>>>> >
>>>> > Nicolas
>>>> >
>>>> >
>>>> https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
>>>> >
>>>> >
>>>> > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>>>> >> Hi,
>>>> >>
>>>> >> With the following code, I get an empty string indicating the
>>>> >> projection is not valid.
>>>> >>
>>>> >> from osgeo import gdal, osr
>>>> >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>>>> >> target_ds =
>>>> >>
>>>> driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>>>>
>>>> >> = 1,eType = gdal.GDT_Float32)
>>>> >> (array is a numpty array.)
>>>> >> raster_srs = osr.SpatialReference()
>>>> >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>>> >> target_ds.SetProjection(raster_srs.ExportToWkt())
>>>> >> target_ds.GetRasterBand(1).WriteArray(array)
>>>> >> raster_ds = None #close dataset
>>>> >> target_ds=None
>>>> >>
>>>> >> Below is the result of gdal info from qgis. File appears to have a
>>>> >> valid projection and is properly georeferenced in QGIS using other
>>>> >> data sets.   Is this projection wrong or am I missing something in
>>>> my
>>>> >> python code?  The goal is to extract the projection from raster_ds
>>>> >> set in order to apply to target_ds.  I can create the file, apply a
>>>> >> geotransform but can't get the projection.  Can you help?
>>>> >>
>>>> >> Thanks/merci!
>>>> >>
>>>> >> Nicolas
>>>> >>
>>>> >> QGIS version: 3.14.16-Pi
>>>> >> QGIS code revision: df27394552
>>>> >> Qt version: 5.11.2
>>>> >> GDAL version: 3.0.4
>>>> >> GEOS version: 3.8.1-CAPI-1.13.3
>>>> >> PROJ version: Rel. 6.3.2, May 1st, 2020
>>>> >> Processing algorithm…
>>>> >> Algorithm 'Raster information' starting…
>>>> >> Input parameters:
>>>> >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif', 'MIN_MAX' :
>>>> >> False, 'NOGCP' : False, 'NO_METADATA' : False, 'OUTPUT' :
>>>> >> 'TEMPORARY_OUTPUT', 'STATS' : False }
>>>> >>
>>>> >> GDAL command:
>>>> >> gdalinfo C:/temp/180922_WTE3.tif
>>>> >> GDAL command output:
>>>> >> Warning 1: TIFFReadDirectory:Sum of Photometric type-related color
>>>> >> channels and ExtraSamples doesn't match SamplesPerPixel. Defining
>>>> >> non-color channels as ExtraSamples.
>>>> >>
>>>> >> Driver: GTiff/GeoTIFF
>>>> >> Files: C:/temp/180922_WTE3.tif
>>>> >> Size is 1194, 2783
>>>> >> Coordinate System is:
>>>> >> PROJCRS["WGS 84 / UTM zone 18N",
>>>> >> BASEGEOGCRS["WGS 84",
>>>> >> DATUM["World Geodetic System 1984",
>>>> >> ELLIPSOID["WGS 84",6378137,298.257223563,
>>>> >> LENGTHUNIT["metre",1]]],
>>>> >> PRIMEM["Greenwich",0,
>>>> >> ANGLEUNIT["degree",0.0174532925199433]],
>>>> >> ID["EPSG",4326]],
>>>> >> CONVERSION["UTM zone 18N",
>>>> >> METHOD["Transverse Mercator",
>>>> >> ID["EPSG",9807]],
>>>> >> PARAMETER["Latitude of natural origin",0,
>>>> >> ANGLEUNIT["degree",0.0174532925199433],
>>>> >> ID["EPSG",8801]],
>>>> >> PARAMETER["Longitude of natural origin",-75,
>>>> >> ANGLEUNIT["degree",0.0174532925199433],
>>>> >> ID["EPSG",8802]],
>>>> >> PARAMETER["Scale factor at natural origin",0.9996,
>>>> >> SCALEUNIT["unity",1],
>>>> >> ID["EPSG",8805]],
>>>> >> PARAMETER["False easting",500000,
>>>> >> LENGTHUNIT["metre",1],
>>>> >> ID["EPSG",8806]],
>>>> >> PARAMETER["False northing",0,
>>>> >> LENGTHUNIT["metre",1],
>>>> >> ID["EPSG",8807]]],
>>>> >> CS[Cartesian,2],
>>>> >> AXIS["(E)",east,
>>>> >> ORDER[1],
>>>> >> LENGTHUNIT["metre",1]],
>>>> >> AXIS["(N)",north,
>>>> >> ORDER[2],
>>>> >> LENGTHUNIT["metre",1]],
>>>> >> USAGE[
>>>> >> SCOPE["unknown"],
>>>> >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>>>> >> BBOX[0,-78,84,-72]],
>>>> >> ID["EPSG",32618]]
>>>> >> Data axis to CRS axis mapping: 1,2
>>>> >> Origin = (459417.200000000011642,5028584.700000000186265)
>>>> >> Pixel Size = (0.050000000000000,-0.050000000000000)
>>>> >> Metadata:
>>>> >> AREA_OR_POINT=Area
>>>> >> TIFFTAG_XRESOLUTION=1
>>>> >> TIFFTAG_YRESOLUTION=1
>>>> >> Image Structure Metadata:
>>>> >> INTERLEAVE=BAND
>>>> >> Corner Coordinates:
>>>> >> Upper Left ( 459417.200, 5028584.700) ( 75d31' 7.03"W, 45d24'34.58"N)
>>>> >> Lower Left ( 459417.200, 5028445.550) ( 75d31' 6.99"W, 45d24'30.07"N)
>>>> >> Upper Right ( 459476.900, 5028584.700) ( 75d31' 4.28"W,
>>>> 45d24'34.59"N)
>>>> >> Lower Right ( 459476.900, 5028445.550) ( 75d31' 4.24"W,
>>>> 45d24'30.08"N)
>>>> >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W, 45d24'32.33"N)
>>>> >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>>>> >> ...
>>>> >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>>>> >>
>>>> >>
>>>> >>
>>>> _______________________________________________
>>>> gdal-dev mailing list
>>>> gdal-dev at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/84a54dac/attachment-0001.html>

From njacadieux.gitlab at gmail.com  Mon Oct 26 16:20:25 2020
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Mon, 26 Oct 2020 19:20:25 -0400
Subject: [gdal-dev] GetProjection returns empty string, python 3.7
In-Reply-To: <CAE8nN5P4o5CNh6vDrksN=fCUBTR0q3LMjYWEGP9v11A_dS-08g@mail.gmail.com>
References: <4b3ae1ba-3cb8-0a80-053b-b2630f3454fd@gmail.com>
 <5c5976fe-a586-d2d3-0a0d-50e9fc36f3cc@gmail.com>
 <743eab72-af17-4cf5-26f4-ba2645c9ae4b@gmail.com>
 <CAE8nN5POG7WXyPyLxazxL2FXEnb=669DjVW2LjB_ATeNFME4ww@mail.gmail.com>
 <cca98754-3301-b806-2fbf-c4eff44b0232@gmail.com>
 <CAE8nN5Oveu_MFkgLZbvOksdLL3WtXvUWm1q3OFK0vZbfeXVaDA@mail.gmail.com>
 <e0ab1dc0-1145-8d47-ba44-b593d4d11fdb@gmail.com>
 <CAE8nN5P4o5CNh6vDrksN=fCUBTR0q3LMjYWEGP9v11A_dS-08g@mail.gmail.com>
Message-ID: <876379c0-87ba-b130-aead-fcb3df752c71@gmail.com>

Hi,

Looks like it's an environment thing... Both versions of the code work 
with 3.1.4.

Thanks for your help!

Nicolas

On 2020-10-26 6:31 p.m., Paul Harwood wrote:
> Me too.
>
> But which conda package for gdal are you using - there are a lot of 
> ones out there.
>
> Are you using conda install -c conda-forge gdal ?
>
> It should be version 3.1.4 at the moment ?
>
> Also - I don't know if this is part of it but ...
>
> "srs = osr.SpatialReference()
> srs.SetUTM(11, 1)
> srs.SetWellKnownGeogCS("NAD27")
> dst_ds.SetProjection(srs.ExportToWkt())
> "
>
> why not just
>
> "srs = osr.SpatialReference()
> srs.SetUTM(11, 1)
> srs.SetWellKnownGeogCS("NAD27")
> dst_ds.SetSpatialRef(srs)
> "
> ??
>
> On Mon, 26 Oct 2020 at 22:11, Nicolas Cadieux 
> <njacadieux.gitlab at gmail.com <mailto:njacadieux.gitlab at gmail.com>> wrote:
>
>     Hi,
>
>     Comes back as None for me... :(  I'am working with Anaconda. 
>     Could it be my environment?
>
>     Nicolas
>
>     On 2020-10-26 5:04 p.m., Paul Harwood wrote:
>>     GetSpatialRef is OSR based and it is certainly working for me
>>     against GDAL Raster datasets - it would not be a method against
>>     the GDAL Dataset if it was only an OGR thing - OGR has its own
>>     objects.
>>
>>     This code is working for me at this very minute and giving me the
>>     name of the CRS for a gtiff
>>
>>     dataset = gdal.Open(str(filepath))
>>             if dataset:
>>                 proj = "None"
>>                 crs = dataset.GetSpatialRef()
>>                 if crs:
>>                     proj = crs.GetName()
>>                 return {"type": "gdal", "driver":
>>     dataset.GetDriver().ShortName, "proj": proj}
>>
>>     On Mon, 26 Oct 2020 at 20:08, Nicolas Cadieux
>>     <njacadieux.gitlab at gmail.com
>>     <mailto:njacadieux.gitlab at gmail.com>> wrote:
>>
>>         Hi,
>>
>>         Thanks for helping.  I will put my code at the end.  The
>>         problem seems to be between gdal python lib 2.2.2 and 3.0.2. 
>>         Under 2.2.2 and < 3, GetProjection() works well but return
>>         nothing with gdal python lib 3.0.2.  It's my understanding
>>         that .GetSpatialRef is for OGR data (vector).  Am I wrong?
>>
>>         I was using GetProjection() because that is the method used
>>         in the raster_api tutorial. 
>>         (https://gdal.org/tutorials/raster_api_tut.html)
>>
>>         I understand that gdal 3 now relies on proj 6 for the
>>         SpatialRef.  I'am trying to figure out if is a problem with
>>         proj or with gdal...
>>
>>         Nicolas
>>
>>
>>         code:
>>
>>         # -*- coding: utf-8 -*-
>>         """
>>         Created on Sun Oct 25 15:09:05 2020
>>
>>         @author: Nicolas
>>         """
>>         #https://stackoverflow.com/questions/37648439/simplest-way-to-save-array-into-raster-file-in-python
>>
>>
>>         from osgeo import gdal, osr, ogr
>>         import numpy
>>
>>         print (gdal.__version__)
>>
>>         # https://gdal.org/tutorials/raster_api_tut.html
>>         fileformat = "GTiff"
>>         driver = gdal.GetDriverByName(fileformat)
>>         metadata = driver.GetMetadata()
>>         if metadata.get(gdal.DCAP_CREATE) == "YES":
>>             print("Driver {} supports Create()
>>         method.".format(fileformat))
>>
>>         if metadata.get(gdal.DCAP_CREATECOPY) == "YES":
>>             print("Driver {} supports CreateCopy()
>>         method.".format(fileformat))
>>         dst_ds = driver.Create(r"c:\temp\gdal.tif", xsize=512, ysize=512,
>>                             bands=1, eType=gdal.GDT_Byte)
>>         dst_ds.SetGeoTransform([444720, 30, 0, 3751320, 0, -30])
>>         srs = osr.SpatialReference()
>>         srs.SetUTM(11, 1)
>>         srs.SetWellKnownGeogCS("NAD27")
>>         dst_ds.SetProjection(srs.ExportToWkt())
>>         print ('srs = ',srs)# this is good
>>         raster = numpy.zeros((512, 512), dtype=numpy.uint8)
>>         dst_ds.GetRasterBand(1).WriteArray(raster)
>>         # Once we're done, close properly the dataset
>>         srs = None
>>         dst_ds = None #srs is file and well georeferenced in Qgis.
>>
>>         #
>>         ---------------------------------------------------------------------------
>>         # open dataset try to read srs
>>         #
>>         ---------------------------------------------------------------------------
>>         raster_ds = gdal.Open(r"C:\temp\gdal.tif")
>>         # first try
>>         print("Projection is {}".format(raster_ds.GetProjection()))
>>
>>         # second try
>>         srs = osr.SpatialReference()
>>         srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>         print ('srs =', srs)
>>         # thrid try
>>         srs = osr.SpatialReference()
>>         srs = raster_ds.GetProjection()
>>         print('srs =', srs)
>>         srs = raster_ds.GetProjectionRef()
>>         # forth try
>>         # from gdal_info
>>         https://github.com/OSGeo/gdal/blob/master/gdal/swig/python/samples/gdalinfo.py
>>         pszProjection = raster_ds.GetProjectionRef()
>>         print(pszProjection)
>>         if pszProjection is not None:
>>             hSRS = osr.SpatialReference()
>>             if hSRS.ImportFromWkt(pszProjection) == gdal.CE_None:
>>                 pszPrettyWkt = hSRS.ExportToPrettyWkt(False)
>>                 print("Coordinate System is:\n%s" % pszPrettyWkt)
>>             else:
>>                 print("Coordinate System is `%s'" % pszProjection)
>>
>>
>>         On 2020-10-26 3:44 p.m., Paul Harwood wrote:
>>>         I am not sure why you are using GetProjection and not
>>>         GetSpatialRef ? Although, the code snippet you included in
>>>         your email does not seem to use either?
>>>
>>>         I certainly was in the process of working on some code that
>>>         uses .GeoSptialRef very successfully on GDAL3.1.3 - so I am
>>>         sure that it is working!
>>>
>>>         On Mon, 26 Oct 2020 at 18:36, Nicolas Cadieux
>>>         <njacadieux.gitlab at gmail.com
>>>         <mailto:njacadieux.gitlab at gmail.com>> wrote:
>>>
>>>             New info!
>>>
>>>             GetProjection works with gdal python 2.2.2 and 2.3.3 but
>>>             not with with
>>>             gdal 3.0.2.  Is this a change in the gdal library?
>>>
>>>             Nicolas
>>>
>>>             On 2020-10-26 1:53 p.m., Nicolas Cadieux wrote:
>>>             > Hi,
>>>             >
>>>             > In case mail question was not clear, I have posted the
>>>             questions about
>>>             > this on stackexchange.  I posted a full code that you
>>>             can run exposing
>>>             > my problem and question.
>>>             >
>>>             > Thanks
>>>             >
>>>             > Nicolas
>>>             >
>>>             >
>>>             https://gis.stackexchange.com/questions/377567/cannot-get-projection-from-raster-dataset-using-getprojection
>>>
>>>             >
>>>             >
>>>             > On 2020-10-25 9:31 p.m., Nicolas Cadieux wrote:
>>>             >> Hi,
>>>             >>
>>>             >> With the following code, I get an empty string
>>>             indicating the
>>>             >> projection is not valid.
>>>             >>
>>>             >> from osgeo import gdal, osr
>>>             >> raster_ds = gdal.Open(r"C:\temp\180922_WTE3.tif")
>>>             >> target_ds =
>>>             >>
>>>             driver.Create(r"c:\temp\output.tif",xsize=raster_ds_ncol,ysize=raster_ds_nrow,bands
>>>
>>>             >> = 1,eType = gdal.GDT_Float32)
>>>             >> (array is a numpty array.)
>>>             >> raster_srs = osr.SpatialReference()
>>>             >> raster_srs.ImportFromWkt(raster_ds.GetProjectionRef())
>>>             >> target_ds.SetProjection(raster_srs.ExportToWkt())
>>>             >> target_ds.GetRasterBand(1).WriteArray(array)
>>>             >> raster_ds = None #close dataset
>>>             >> target_ds=None
>>>             >>
>>>             >> Below is the result of gdal info from qgis. File
>>>             appears to have a
>>>             >> valid projection and is properly georeferenced in
>>>             QGIS using other
>>>             >> data sets.   Is this projection wrong or am I missing
>>>             something in my
>>>             >> python code?  The goal is to extract the projection
>>>             from raster_ds
>>>             >> set in order to apply to target_ds. I can create the
>>>             file, apply a
>>>             >> geotransform but can't get the projection.  Can you help?
>>>             >>
>>>             >> Thanks/merci!
>>>             >>
>>>             >> Nicolas
>>>             >>
>>>             >> QGIS version: 3.14.16-Pi
>>>             >> QGIS code revision: df27394552
>>>             >> Qt version: 5.11.2
>>>             >> GDAL version: 3.0.4
>>>             >> GEOS version: 3.8.1-CAPI-1.13.3
>>>             >> PROJ version: Rel. 6.3.2, May 1st, 2020
>>>             >> Processing algorithm…
>>>             >> Algorithm 'Raster information' starting…
>>>             >> Input parameters:
>>>             >> { 'EXTRA' : '', 'INPUT' : 'C:/temp/180922_WTE3.tif',
>>>             'MIN_MAX' :
>>>             >> False, 'NOGCP' : False, 'NO_METADATA' : False,
>>>             'OUTPUT' :
>>>             >> 'TEMPORARY_OUTPUT', 'STATS' : False }
>>>             >>
>>>             >> GDAL command:
>>>             >> gdalinfo C:/temp/180922_WTE3.tif
>>>             >> GDAL command output:
>>>             >> Warning 1: TIFFReadDirectory:Sum of Photometric
>>>             type-related color
>>>             >> channels and ExtraSamples doesn't match
>>>             SamplesPerPixel. Defining
>>>             >> non-color channels as ExtraSamples.
>>>             >>
>>>             >> Driver: GTiff/GeoTIFF
>>>             >> Files: C:/temp/180922_WTE3.tif
>>>             >> Size is 1194, 2783
>>>             >> Coordinate System is:
>>>             >> PROJCRS["WGS 84 / UTM zone 18N",
>>>             >> BASEGEOGCRS["WGS 84",
>>>             >> DATUM["World Geodetic System 1984",
>>>             >> ELLIPSOID["WGS 84",6378137,298.257223563,
>>>             >> LENGTHUNIT["metre",1]]],
>>>             >> PRIMEM["Greenwich",0,
>>>             >> ANGLEUNIT["degree",0.0174532925199433]],
>>>             >> ID["EPSG",4326]],
>>>             >> CONVERSION["UTM zone 18N",
>>>             >> METHOD["Transverse Mercator",
>>>             >> ID["EPSG",9807]],
>>>             >> PARAMETER["Latitude of natural origin",0,
>>>             >> ANGLEUNIT["degree",0.0174532925199433],
>>>             >> ID["EPSG",8801]],
>>>             >> PARAMETER["Longitude of natural origin",-75,
>>>             >> ANGLEUNIT["degree",0.0174532925199433],
>>>             >> ID["EPSG",8802]],
>>>             >> PARAMETER["Scale factor at natural origin",0.9996,
>>>             >> SCALEUNIT["unity",1],
>>>             >> ID["EPSG",8805]],
>>>             >> PARAMETER["False easting",500000,
>>>             >> LENGTHUNIT["metre",1],
>>>             >> ID["EPSG",8806]],
>>>             >> PARAMETER["False northing",0,
>>>             >> LENGTHUNIT["metre",1],
>>>             >> ID["EPSG",8807]]],
>>>             >> CS[Cartesian,2],
>>>             >> AXIS["(E)",east,
>>>             >> ORDER[1],
>>>             >> LENGTHUNIT["metre",1]],
>>>             >> AXIS["(N)",north,
>>>             >> ORDER[2],
>>>             >> LENGTHUNIT["metre",1]],
>>>             >> USAGE[
>>>             >> SCOPE["unknown"],
>>>             >> AREA["World - N hemisphere - 78°W to 72°W - by country"],
>>>             >> BBOX[0,-78,84,-72]],
>>>             >> ID["EPSG",32618]]
>>>             >> Data axis to CRS axis mapping: 1,2
>>>             >> Origin = (459417.200000000011642,5028584.700000000186265)
>>>             >> Pixel Size = (0.050000000000000,-0.050000000000000)
>>>             >> Metadata:
>>>             >> AREA_OR_POINT=Area
>>>             >> TIFFTAG_XRESOLUTION=1
>>>             >> TIFFTAG_YRESOLUTION=1
>>>             >> Image Structure Metadata:
>>>             >> INTERLEAVE=BAND
>>>             >> Corner Coordinates:
>>>             >> Upper Left ( 459417.200, 5028584.700) ( 75d31'
>>>             7.03"W, 45d24'34.58"N)
>>>             >> Lower Left ( 459417.200, 5028445.550) ( 75d31'
>>>             6.99"W, 45d24'30.07"N)
>>>             >> Upper Right ( 459476.900, 5028584.700) ( 75d31'
>>>             4.28"W, 45d24'34.59"N)
>>>             >> Lower Right ( 459476.900, 5028445.550) ( 75d31'
>>>             4.24"W, 45d24'30.08"N)
>>>             >> Center ( 459447.050, 5028515.125) ( 75d31' 5.63"W,
>>>             45d24'32.33"N)
>>>             >> Band 1 Block=1194x1 Type=UInt16, ColorInterp=Red
>>>             >> ...
>>>             >> Band 288 Block=1194x1 Type=UInt16, ColorInterp=Undefined
>>>             >>
>>>             >>
>>>             >>
>>>             _______________________________________________
>>>             gdal-dev mailing list
>>>             gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>>             https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201026/fa7a5d40/attachment-0001.html>

From laurynasgedminas at gmail.com  Tue Oct 27 06:31:40 2020
From: laurynasgedminas at gmail.com (Laurynas Gedminas)
Date: Tue, 27 Oct 2020 09:31:40 -0400
Subject: [gdal-dev]
	https://stackoverflow.com/questions/61342237/gdal-translate-missing-spatial-reference-system
In-Reply-To: <CAPJBxMHYdjXDJmb87jvhrJZROrO0rteNq+6veN+VeaRC0bpugQ@mail.gmail.com>
References: <CAPJBxMFNnAxWqy5e0AMc-=_k07OeM0i_Nvh=ABXJ33RMozrahA@mail.gmail.com>
 <CAPJBxMHYdjXDJmb87jvhrJZROrO0rteNq+6veN+VeaRC0bpugQ@mail.gmail.com>
Message-ID: <CAPJBxMHZcFUWk-GM_UDn9BggOsLRammUABGwCx5gfO0QmdwGWw@mail.gmail.com>

OK, so the issue was related on the GDAL 3.0.2  not able to read raster
spatial reference,
downgraded my installation to 2.4.1 GDAL and the the code:
translateoptions = gdal.TranslateOptions(gdal.ParseCommandLine("-co
TILED=YES -co COMPRESS=JPEG -co JPEG_QUALITY=100 -a_nodata none -co
INTERLEAVE=BAND -scale -ot Byte"))
gdal.Translate(out_img, in_ds, options=translateoptions)

Worked just fine,
Thank you,
Laurynas

On Thu, Oct 22, 2020 at 1:25 PM Laurynas Gedminas <
laurynasgedminas at gmail.com> wrote:

> Here are the correct posts links:
>
> I am using the Python GDAL 3.0.2,
> facing the issue with the gdal.translate, posted question here as well:
> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>
> and this person seems to have the same issue:
>
> https://stackoverflow.com/questions/61342237/gdal-translate-missing-spatial-reference-system
>
> Thank you,
> Laurynas
>
> On Thu, Oct 22, 2020 at 11:15 AM Laurynas Gedminas <
> laurynasgedminas at gmail.com> wrote:
>
>> I am using the Python GDAL 3.0.2,
>> facing the issue with the gdal.translate, posted question here as well:
>>
>> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>>
>> and this person seems to have the same issue:
>>
>> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>>
>> Thank you,
>> Laurynas Gedminas
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201027/a67d6ec7/attachment.html>

From Andre.Vautour at Teledyne.com  Tue Oct 27 10:17:28 2020
From: Andre.Vautour at Teledyne.com (=?iso-8859-1?Q?Vautour=2C_Andr=E9_=28INT=29?=)
Date: Tue, 27 Oct 2020 17:17:28 +0000
Subject: [gdal-dev] Geoid read performance
Message-ID: <YTOPR0101MB0730CE7F611FFC9837253B8C97160@YTOPR0101MB0730.CANPRD01.PROD.OUTLOOK.COM>

Hi all,

I am using GDAL to read some geoid files in order to do some vertical datum transformations. The transformation engine I am using is done point by point transformations and doing a grid lookup for each point, so this means when transforming say a million points, it is doing a two million grid lookups (one for the source, and one for the destination).

After a performance profiling run, it became clear that much of the slowdown is because of mutexing. Most of the Geoid formats are based on the RawDataset, which is mutexing on every read for two different reasons. While one is about the accessing of the block cache, which for obvious reasons cannot be avoided, but, the biggest bottleneck was the CPLGetConfigOption("GDAL_ONE_BIG_READ") call in RawRasterBand::CanUseDirectIO(). I am wondering if it would make sense to move that call to the constructor and store the result for future use? Or, would we expect that setting to change during the lifetime of the raster, and the raster to react dynamically to those option changes?

Since most geoids are really small grids, I opted to try to copy the geoid to a MEMDataset raster. That had the benefit of avoiding the CPLGetConfigOption() bottleneck and also avoiding the block cache. That being said, the memory raster is always set to an access mode of GA_Update. That means that reading will also try to acquire a mutex in GDALDataset::EnterReadWrite. Would it make sense to be able to either specify the access mode of a MEMDataset to GA_ReadOnly or to add a SetAccess() method to it similar to RawRasterBand so that it can be changed to read-only after the initial copy was done?

Keep in mind that I am willing to make and contribute the necessary changes. I just want to get a feel as to what would make sense at the general level if any such changes are required. Also, do you have any other suggestions on how to avoid such mutexes when reading what is essentially static data?

Kind regards,
André Vautour
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201027/1d9b0251/attachment.html>

From jrmorreale_ml at enoreth.net  Tue Oct 27 11:18:36 2020
From: jrmorreale_ml at enoreth.net (Jean-Roc Morreale (ml))
Date: Tue, 27 Oct 2020 19:18:36 +0100
Subject: [gdal-dev] GDAL 3.2.0 RC1 available
In-Reply-To: <2744290.lB3DOBiyLG@even-i700>
References: <2744290.lB3DOBiyLG@even-i700>
Message-ID: <9521e370167e18ecd46e68ca6667372da87c48d6.camel@enoreth.net>

Thank you very much for the detailled release notes, it's always a
worthy read !

The multithreaded overview sampling and jpeg compression will make the
COG way of life even better.


From juliette.behra at umontpellier.fr  Wed Oct 28 01:52:36 2020
From: juliette.behra at umontpellier.fr (Juliette Behra)
Date: Wed, 28 Oct 2020 09:52:36 +0100 (CET)
Subject: [gdal-dev] Opening .dt2 datafiles that do not contain geospatial
	data
Message-ID: <1527855928.275086.1603875156446.JavaMail.zimbra@umontpellier.fr>

Hello, 

I have got black and white image files saved as .dt2 files which I need to open in Python to process some information contained in the image headers. I have installed gdal and related modules to use them in Spyder. When I used the open function, error 4 shows up (saying that the file does not have the right format) and I obtain a NoneType object for the data contained in the file. You will find here a screenshot of how the dataset looks like when open in Notepad++: 
[ https://pasteboard.co/JxI8QWd.jpg | https://pasteboard.co/JxI8QWd.jpg ] 
Is it because the file does not contain geospatial data that gdal cannot open it? If yes, any idea about how I could open such files in Python? If gdal should be able to open this kind of files, can you please help me to do it? 

Many thanks already for your help and answer. 
Kind regards, 

Juliette 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201028/91c16b11/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Wed Oct 28 04:16:23 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Wed, 28 Oct 2020 04:16:23 -0700 (MST)
Subject: [gdal-dev] Opening .dt2 datafiles that do not contain
 geospatial data
In-Reply-To: <1527855928.275086.1603875156446.JavaMail.zimbra@umontpellier.fr>
References: <1527855928.275086.1603875156446.JavaMail.zimbra@umontpellier.fr>
Message-ID: <1603883783196-0.post@n6.nabble.com>

Hi,

What does "gdalinfo your.dt2 --debug on" show? Could you share a problematic
file?

-Jukka Rahkonen-


Juliette Behra wrote
> Hello, 
> 
> I have got black and white image files saved as .dt2 files which I need to
> open in Python to process some information contained in the image headers.
> I have installed gdal and related modules to use them in Spyder. When I
> used the open function, error 4 shows up (saying that the file does not
> have the right format) and I obtain a NoneType object for the data
> contained in the file. You will find here a screenshot of how the dataset
> looks like when open in Notepad++: 
> [ https://pasteboard.co/JxI8QWd.jpg | https://pasteboard.co/JxI8QWd.jpg ] 
> Is it because the file does not contain geospatial data that gdal cannot
> open it? If yes, any idea about how I could open such files in Python? If
> gdal should be able to open this kind of files, can you please help me to
> do it? 
> 
> Many thanks already for your help and answer. 
> Kind regards, 
> 
> Juliette 
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From m.g.aschenbeck at gmail.com  Wed Oct 28 09:35:02 2020
From: m.g.aschenbeck at gmail.com (Mike A)
Date: Wed, 28 Oct 2020 10:35:02 -0600
Subject: [gdal-dev] gdal_translate resampling introduces bias,
	gdalwarp does not
In-Reply-To: <CADGz_tKYAccYKsnpdf=t4WvxkSKSzY=8R9=R_2Tnc1K1Ap5Swg@mail.gmail.com>
References: <CADGz_tKYAccYKsnpdf=t4WvxkSKSzY=8R9=R_2Tnc1K1Ap5Swg@mail.gmail.com>
Message-ID: <CADGz_tLdm9DHTf-Fsd4P+dqDxGo2VGN_3h1TNJH23UQ4AuaxNQ@mail.gmail.com>

Greetings.

I have noticed a difference in gdal_translate vs gdalwarp.  gdal_translate
introduces a slight bias when it resamples.  This seems to be reproducible
when coarsening resolutions by roughly 5-10 percent.

For my specific example, I'm starting with a .5m x .5m UTM image.  I've
seen this in GDAL 2.41 and 3.1.4.  I perform the following calls:
  gdal_translate -r cubic -tr .53 .53 src.tif src_TRANSLATE.tif
  gdalwarp -r cubic -tr .53 .53 src.tif src_WARP.tif
It's hard to quantify the amount of shift, but I would approximate it to be
about a third of a pixel.

I believe gdalwarp is more rigorous than gdal_translate.  However, I
wouldn't expect a visible shift with the latter.  The question is, is this
expected behavior or a bug?

I have some animated gif's illustrating the problem.  These will obviously
go away after some time.
gdal_translate src.tif vs src_TRANSLATE:
https://drive.google.com/file/d/1XeWafUlUzN6somcyUL2dfyvlwS3IOpRP/view?usp=sharing
gdalwarp src.tif vs src_WARP:
https://drive.google.com/file/d/1Zv5ypaRzCEZzVUmfGf01UtTTVoPD7ADL/view?usp=sharing

Thanks in advance,
Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201028/85289bb9/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Thu Oct 29 01:09:45 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 29 Oct 2020 01:09:45 -0700 (MST)
Subject: [gdal-dev]
 https://stackoverflow.com/questions/61342237/gdal-translate-missing-spatial-reference-system
In-Reply-To: <CAPJBxMHZcFUWk-GM_UDn9BggOsLRammUABGwCx5gfO0QmdwGWw@mail.gmail.com>
References: <CAPJBxMFNnAxWqy5e0AMc-=_k07OeM0i_Nvh=ABXJ33RMozrahA@mail.gmail.com>
 <CAPJBxMHYdjXDJmb87jvhrJZROrO0rteNq+6veN+VeaRC0bpugQ@mail.gmail.com>
 <CAPJBxMHZcFUWk-GM_UDn9BggOsLRammUABGwCx5gfO0QmdwGWw@mail.gmail.com>
Message-ID: <1603958985795-0.post@n6.nabble.com>

Hi,

But you did not find out what is special in the spatial reference of your
source image and why GDAL 3.0.2 did not find it while 2.4.1 had no problem.
First step would be to run gdalinfo with 2.4.1 and 3.0.2 and compare the
reports.

-Jukka Rahkonen- 


Laurynas Gedminas wrote
> OK, so the issue was related on the GDAL 3.0.2  not able to read raster
> spatial reference,
> downgraded my installation to 2.4.1 GDAL and the the code:
> translateoptions = gdal.TranslateOptions(gdal.ParseCommandLine("-co
> TILED=YES -co COMPRESS=JPEG -co JPEG_QUALITY=100 -a_nodata none -co
> INTERLEAVE=BAND -scale -ot Byte"))
> gdal.Translate(out_img, in_ds, options=translateoptions)
> 
> Worked just fine,
> Thank you,
> Laurynas
> 
> On Thu, Oct 22, 2020 at 1:25 PM Laurynas Gedminas <

> laurynasgedminas@

>> wrote:
> 
>> Here are the correct posts links:
>>
>> I am using the Python GDAL 3.0.2,
>> facing the issue with the gdal.translate, posted question here as well:
>> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>>
>> and this person seems to have the same issue:
>>
>> https://stackoverflow.com/questions/61342237/gdal-translate-missing-spatial-reference-system
>>
>> Thank you,
>> Laurynas
>>
>> On Thu, Oct 22, 2020 at 11:15 AM Laurynas Gedminas <
>> 

> laurynasgedminas@

>> wrote:
>>
>>> I am using the Python GDAL 3.0.2,
>>> facing the issue with the gdal.translate, posted question here as well:
>>>
>>> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>>>
>>> and this person seems to have the same issue:
>>>
>>> https://stackoverflow.com/questions/64484225/gdal-translate-with-projection
>>>
>>> Thank you,
>>> Laurynas Gedminas
>>>
>>
> 
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From even.rouault at spatialys.com  Thu Oct 29 01:55:15 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 29 Oct 2020 09:55:15 +0100
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
Message-ID: <10094701.IN4IPj3KlC@even-i700>

Hi,

Having heard about no critical ([1]) issues regarding RC1

Motion:

Adopt GDAL 3.2.0 RC1 as final 3.2.0 release

Starting with my +1

Even

[1] The only regression I'm aware of currently is regarding the possibility to 
open raw LERC1 files in the MRF driver that is broken. See
https://github.com/OSGeo/gdal/pull/3109 . A possibility I was hardly aware of. 
Can likely wait for 3.2.1 IMHO

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Thu Oct 29 02:04:53 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 29 Oct 2020 10:04:53 +0100
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <10094701.IN4IPj3KlC@even-i700>
References: <10094701.IN4IPj3KlC@even-i700>
Message-ID: <CABUeae8T71DVfVvAWA_LCz4eBM0SoT2cYJftiiGQjcrOeEx+sw@mail.gmail.com>

+1

Mateusz

On Thu, 29 Oct 2020 at 09:55, Even Rouault <even.rouault at spatialys.com> wrote:
>
> Motion:
> Adopt GDAL 3.2.0 RC1 as final 3.2.0 release
>
> Starting with my +1



-- 
Mateusz Loskot, http://mateusz.loskot.net

From jukka.rahkonen at maanmittauslaitos.fi  Thu Oct 29 02:39:28 2020
From: jukka.rahkonen at maanmittauslaitos.fi (jratike80)
Date: Thu, 29 Oct 2020 02:39:28 -0700 (MST)
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <10094701.IN4IPj3KlC@even-i700>
References: <10094701.IN4IPj3KlC@even-i700>
Message-ID: <1603964368363-0.post@n6.nabble.com>

+1

-Jukka Rahkonen-


Even Rouault-2 wrote
> Hi,
> 
> Having heard about no critical ([1]) issues regarding RC1
> 
> Motion:
> 
> Adopt GDAL 3.2.0 RC1 as final 3.2.0 release
> 
> Starting with my +1
> 
> Even
> 
> [1] The only regression I'm aware of currently is regarding the
> possibility to 
> open raw LERC1 files in the MRF driver that is broken. See
> https://github.com/OSGeo/gdal/pull/3109 . A possibility I was hardly aware
> of. 
> Can likely wait for 3.2.1 IMHO





--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

From norman.barker at gmail.com  Thu Oct 29 08:26:41 2020
From: norman.barker at gmail.com (Norman Barker)
Date: Thu, 29 Oct 2020 10:26:41 -0500
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <1603964368363-0.post@n6.nabble.com>
References: <10094701.IN4IPj3KlC@even-i700>
 <1603964368363-0.post@n6.nabble.com>
Message-ID: <CAN_Dn-FT0kYnAms1w8YLponUsFeFV2CWQK=A2mGmWG4JLj08gA@mail.gmail.com>

+1

Norman

On Thu, Oct 29, 2020 at 4:39 AM jratike80 <
jukka.rahkonen at maanmittauslaitos.fi> wrote:

> +1
>
> -Jukka Rahkonen-
>
>
> Even Rouault-2 wrote
> > Hi,
> >
> > Having heard about no critical ([1]) issues regarding RC1
> >
> > Motion:
> >
> > Adopt GDAL 3.2.0 RC1 as final 3.2.0 release
> >
> > Starting with my +1
> >
> > Even
> >
> > [1] The only regression I'm aware of currently is regarding the
> > possibility to
> > open raw LERC1 files in the MRF driver that is broken. See
> > https://github.com/OSGeo/gdal/pull/3109 . A possibility I was hardly
> aware
> > of.
> > Can likely wait for 3.2.1 IMHO
>
>
>
>
>
> --
> Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201029/1c73cc32/attachment.html>

From sean at mapbox.com  Thu Oct 29 08:36:08 2020
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 29 Oct 2020 09:36:08 -0600
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <10094701.IN4IPj3KlC@even-i700>
References: <10094701.IN4IPj3KlC@even-i700>
Message-ID: <CADPhZXxPpBodq6qgmzxM03s-O6gCrFWgwjuTFbhVxtmikQj5Sw@mail.gmail.com>

Hi Even,

On Thu, Oct 29, 2020 at 2:55 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
>
> Having heard about no critical ([1]) issues regarding RC1
>
> Motion:
>
> Adopt GDAL 3.2.0 RC1 as final 3.2.0 release
>
> Starting with my +1
>
> Even
>
> [1] The only regression I'm aware of currently is regarding the
> possibility to
> open raw LERC1 files in the MRF driver that is broken. See
> https://github.com/OSGeo/gdal/pull/3109 . A possibility I was hardly
> aware of.
> Can likely wait for 3.2.1 IMHO
>

In rasterio's tests I have noticed a change in the order of coordinates in
the interior rings of polygons extracted by GDAL's polygonizer and a change
in the number of polygons extracted, but no other issues. I don't think
these need to hold up the release.

+1

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201029/21f5edfc/attachment.html>

From dmorissette at mapgears.com  Thu Oct 29 08:34:30 2020
From: dmorissette at mapgears.com (Daniel Morissette)
Date: Thu, 29 Oct 2020 11:34:30 -0400
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <10094701.IN4IPj3KlC@even-i700>
References: <10094701.IN4IPj3KlC@even-i700>
Message-ID: <7ffff31e-91a2-677d-a73e-eebc3860e3b8@mapgears.com>

+1

Daniel


On 2020-10-29 04:55, Even Rouault wrote:
> Hi,
> 
> Having heard about no critical ([1]) issues regarding RC1
> 
> Motion:
> 
> Adopt GDAL 3.2.0 RC1 as final 3.2.0 release
> 
> Starting with my +1
> 
> Even
> 
> [1] The only regression I'm aware of currently is regarding the possibility to
> open raw LERC1 files in the MRF driver that is broken. See
> https://github.com/OSGeo/gdal/pull/3109 . A possibility I was hardly aware of.
> Can likely wait for 3.2.1 IMHO
> 


-- 
Daniel Morissette
Mapgears Inc
T: +1 418-696-5056 #201

From even.rouault at spatialys.com  Thu Oct 29 14:15:14 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 29 Oct 2020 22:15:14 +0100
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <CADPhZXxPpBodq6qgmzxM03s-O6gCrFWgwjuTFbhVxtmikQj5Sw@mail.gmail.com>
References: <10094701.IN4IPj3KlC@even-i700>
 <CADPhZXxPpBodq6qgmzxM03s-O6gCrFWgwjuTFbhVxtmikQj5Sw@mail.gmail.com>
Message-ID: <1754175.yeIh2htKjK@even-i700>

Sean,

> In rasterio's tests I have noticed a change in the order of coordinates in
> the interior rings of polygons extracted by GDAL's polygonizer and a change
> in the number of polygons extracted, but no other issues. I don't think
> these need to hold up the release.

Hum, changes in the order of coordinates are expected due to a change in the 
algorithm. GDAL autotest had to be adapted for that
https://github.com/OSGeo/gdal/commits/c3a6bf99e3fd7fec4e11f9d1910e200b82742a5d 
. (testing with GEOSEquals_r() would be even more robust)
But I wouldn't have necessarily expected a change in the number of polygons. 
Does the new result look correct ?

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sean at mapbox.com  Thu Oct 29 15:20:28 2020
From: sean at mapbox.com (Sean Gillies)
Date: Thu, 29 Oct 2020 16:20:28 -0600
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <1754175.yeIh2htKjK@even-i700>
References: <10094701.IN4IPj3KlC@even-i700>
 <CADPhZXxPpBodq6qgmzxM03s-O6gCrFWgwjuTFbhVxtmikQj5Sw@mail.gmail.com>
 <1754175.yeIh2htKjK@even-i700>
Message-ID: <CADPhZXwzuzN8_3i0wFHEwyyY_xiPyQU7LuMTw83W0HPNjEcjdg@mail.gmail.com>

On Thu, Oct 29, 2020 at 3:15 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Sean,
>
> > In rasterio's tests I have noticed a change in the order of coordinates
> in
> > the interior rings of polygons extracted by GDAL's polygonizer and a
> change
> > in the number of polygons extracted, but no other issues. I don't think
> > these need to hold up the release.
>
> Hum, changes in the order of coordinates are expected due to a change in
> the
> algorithm. GDAL autotest had to be adapted for that
>
> https://github.com/OSGeo/gdal/commits/c3a6bf99e3fd7fec4e11f9d1910e200b82742a5d
> . (testing with GEOSEquals_r() would be even more robust)
> But I wouldn't have necessarily expected a change in the number of
> polygons.
> Does the new result look correct ?
>
> Even
>

I misread my pytest output. It was only the JSON formatting of the polygon
that changed, the number of polygons is unchanged. Sorry for the false
alarm.

-- 
Sean Gillies
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201029/4233776e/attachment.html>

From jmckenna at gatewaygeomatics.com  Thu Oct 29 16:05:10 2020
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 29 Oct 2020 20:05:10 -0300
Subject: [gdal-dev] Motion: promote GDAL 3.2.0 RC1
In-Reply-To: <10094701.IN4IPj3KlC@even-i700>
References: <10094701.IN4IPj3KlC@even-i700>
Message-ID: <94389cc5-192a-ab3c-61f3-af236155416c@gatewaygeomatics.com>

On 2020-10-29 5:55 a.m., Even Rouault wrote:
> Hi,
> 
> Having heard about no critical ([1]) issues regarding RC1
> 
> Motion:
> 
> Adopt GDAL 3.2.0 RC1 as final 3.2.0 release
> 

+1

Works well on Windows.
The documentation build now throws 27 Doxygen warnings (with Doxygen 
1.8.20).

-jeff




-- 
Jeff McKenna
MapServer Consulting and Training Services
co-founder of FOSS4G
http://gatewaygeo.com/





From angus at myheat.ca  Thu Oct 29 16:56:31 2020
From: angus at myheat.ca (Angus Dickey)
Date: Thu, 29 Oct 2020 17:56:31 -0600
Subject: [gdal-dev] Reading a VRT file & overview usage
Message-ID: <CABADqymXhQ=ty6m9UkNLexL9Hg6goMdtVj1qznyfR3xRqnWqug@mail.gmail.com>

Hi all,

I am using gdal_translate to read a VRT file made up of COGs stored in S3.
This works great when downsampling using nearest neighbour (GDAL 2.4.2):

$ time gdal_translate /vsis3/bucket/mosaic.vrt /tmp/out.tiff -projwin
-9177335.364031402 5305341.259217514 -9174889.379126277 5302895.274312388
-outsize 256 256 -r nearest
Input file size is 52916, 61539
0...10...20...30...40...50...60...70...80...90...100 - done.

real    0m3.418s
user    0m0.234s
sys     0m0.297s

Takes about 3 seconds to produce a downsampled 256x256 subset. If I switch
the re-sampling method to bilinear:

$ time gdal_translate /vsis3/bucket/mosaic.vrt /tmp/out.tiff -projwin
-9177335.364031402 5305341.259217514 -9174889.379126277 5302895.274312388
-outsize 256 256 -r bilinear
Input file size is 52916, 61539
0...10...20...30...40...50...60...70...80...90...100 - done.

real    0m54.588s
user    0m13.563s
sys     0m3.438s

Takes about a minute. I would assume that any of the re-sampling methods
will take longer than nearest, but 51 seconds longer? That can't just be
the extra processing.

If I turn GDAL debug statements on I can see that the first command uses
the the pre-built COG overviews:

...
GTiff: Opened 1991x30351 overview.
GTiff: Opened 996x15176 overview.
GTiff: Opened 498x7588 overview.
...

But the second command ignores the overviews and downloads the full
resolution imagery leading to very long download times. Is it expected
behaviour that all re-sampling methods except 'nearest neighbour' need to
request the full resolution data? Can't they apply the selected re-sampling
method to the overviews? Is it something to do with the way I created my
VRT file?

The COGs all have internal overviews and gdalbuildvrt is used to create the
VRT file itself.

Any input or suggestions would be appreciated.

Thanks,

Angus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201029/d507c2d0/attachment.html>

From even.rouault at spatialys.com  Fri Oct 30 07:53:35 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 30 Oct 2020 15:53:35 +0100
Subject: [gdal-dev] Reading a VRT file & overview usage
In-Reply-To: <CABADqymXhQ=ty6m9UkNLexL9Hg6goMdtVj1qznyfR3xRqnWqug@mail.gmail.com>
References: <CABADqymXhQ=ty6m9UkNLexL9Hg6goMdtVj1qznyfR3xRqnWqug@mail.gmail.com>
Message-ID: <2544976.hIIP4EiWIH@even-i700>

Angus,

> But the second command ignores the overviews and downloads the full
> resolution imagery leading to very long download times. Is it expected
> behaviour that all re-sampling methods except 'nearest neighbour' need to
> request the full resolution data? Can't they apply the selected re-sampling
> method to the overviews? Is it something to do with the way I created my
> VRT file?

I can't confirm with the following little test

gdal_translate byte.tif test.tif -outsize 2048 2048
gdal_translate test.tif left.tif -srcwin 0 0 1024 2048 -b 1 -b 1 -b 1
gdal_translate test.tif right.tif -srcwin 1024 0 1024 2048  -b 1 -b 1 -b 1
gdalbuildvrt vrt.vrt left.tif right.tif
gdaladdo left.tif
gdaladdo right.tif
python -c "from osgeo import gdal; ds = gdal.Open('left.tif', gdal.GA_Update); 
ds.GetRasterBand(1).GetOverview(2).Fill(0)"

copy left.tif, right.tif and vrt.vrt on S3

gdal_translate /vsis3/mybucket/vrt.vrt out.tif -r bilinear -outsize 128 128

Works fine with GDAL 2.4.4 and master

If you can come up with a minimum reproducing scenario (input files + script/
command to reproduce), please file a ticket on github

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Oct 30 08:02:44 2020
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 30 Oct 2020 16:02:44 +0100
Subject: [gdal-dev] Geoid read performance
In-Reply-To: <YTOPR0101MB0730CE7F611FFC9837253B8C97160@YTOPR0101MB0730.CANPRD01.PROD.OUTLOOK.COM>
References: <YTOPR0101MB0730CE7F611FFC9837253B8C97160@YTOPR0101MB0730.CANPRD01.PROD.OUTLOOK.COM>
Message-ID: <3890839.n2WK0ROGOU@even-i700>

On mardi 27 octobre 2020 17:17:28 CET Vautour, André (INT) wrote:
> Hi all,
> 
> I am using GDAL to read some geoid files in order to do some vertical datum
> transformations. The transformation engine I am using is done point by
> point transformations and doing a grid lookup for each point, so this means
> when transforming say a million points, it is doing a two million grid
> lookups (one for the source, and one for the destination).
> 
> After a performance profiling run, it became clear that much of the slowdown
> is because of mutexing. Most of the Geoid formats are based on the
> RawDataset, which is mutexing on every read for two different reasons.
> While one is about the accessing of the block cache, which for obvious
> reasons cannot be avoided, but, the biggest bottleneck was the
> CPLGetConfigOption("GDAL_ONE_BIG_READ") call in
> RawRasterBand::CanUseDirectIO(). I am wondering if it would make sense to
> move that call to the constructor and store the result for future use? Or,
> would we expect that setting to change during the lifetime of the raster,
> and the raster to react dynamically to those option changes?
> 
> Since most geoids are really small grids, I opted to try to copy the geoid
> to a MEMDataset raster. That had the benefit of avoiding the
> CPLGetConfigOption() bottleneck and also avoiding the block cache. That
> being said, the memory raster is always set to an access mode of GA_Update.
> That means that reading will also try to acquire a mutex in
> GDALDataset::EnterReadWrite. Would it make sense to be able to either
> specify the access mode of a MEMDataset to GA_ReadOnly or to add a
> SetAccess() method to it similar to RawRasterBand so that it can be changed
> to read-only after the initial copy was done?
> 
> Keep in mind that I am willing to make and contribute the necessary changes.
> I just want to get a feel as to what would make sense at the general level
> if any such changes are required. Also, do you have any other suggestions
> on how to avoid such mutexes when reading what is essentially static data?

Clearly the GDAL API isn't made to deliver the ultimate performance when 
extracting points one by one, due to many layers traversed, checks, etc.

If you're at that level of performance tuning, instead of ingesting into a 
MEMDataset, you could probably just ingest into your favorite C++ array 
structure and read directly from it

An a for Linux/Unix users is to use GDALRasterBand::GetVirtualMemAuto(), that 
for RAW datasets will basically use mmap()

See
https://gdal.org/api/gdalrasterband_cpp.html?
_CPPv4N14GDALRasterBand17GetVirtualMemAutoE10GDALRWFlagPiP7GIntBigPPc

and

https://gdal.org/api/cpl.html#_CPPv420CPLVirtualMemGetAddrP13CPLVirtualMem


Even
-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Andre.Vautour at Teledyne.com  Fri Oct 30 08:52:48 2020
From: Andre.Vautour at Teledyne.com (=?iso-8859-1?Q?Vautour=2C_Andr=E9_=28INT=29?=)
Date: Fri, 30 Oct 2020 15:52:48 +0000
Subject: [gdal-dev] Geoid read performance
In-Reply-To: <3890839.n2WK0ROGOU@even-i700>
References: <YTOPR0101MB0730CE7F611FFC9837253B8C97160@YTOPR0101MB0730.CANPRD01.PROD.OUTLOOK.COM>
 <3890839.n2WK0ROGOU@even-i700>
Message-ID: <YTOPR0101MB07309F2168BF09397D0D027697150@YTOPR0101MB0730.CANPRD01.PROD.OUTLOOK.COM>



> -----Original Message-----
> From: Even Rouault <even.rouault at spatialys.com>
> Sent: October 30, 2020 12:03
> To: gdal-dev at lists.osgeo.org
> Cc: Vautour, André (INT) <Andre.Vautour at Teledyne.com>
> Subject: Re: [gdal-dev] Geoid read performance
> 
> ---External Email---
> 
> On mardi 27 octobre 2020 17:17:28 CET Vautour, André (INT) wrote:
> > Hi all,
> >
> > I am using GDAL to read some geoid files in order to do some vertical
> > datum transformations. The transformation engine I am using is done
> > point by point transformations and doing a grid lookup for each point,
> > so this means when transforming say a million points, it is doing a
> > two million grid lookups (one for the source, and one for the destination).
> >
> > After a performance profiling run, it became clear that much of the
> > slowdown is because of mutexing. Most of the Geoid formats are based
> > on the RawDataset, which is mutexing on every read for two different
> reasons.
> > While one is about the accessing of the block cache, which for obvious
> > reasons cannot be avoided, but, the biggest bottleneck was the
> > CPLGetConfigOption("GDAL_ONE_BIG_READ") call in
> > RawRasterBand::CanUseDirectIO(). I am wondering if it would make sense
> > to move that call to the constructor and store the result for future
> > use? Or, would we expect that setting to change during the lifetime of
> > the raster, and the raster to react dynamically to those option changes?
> >
> > Since most geoids are really small grids, I opted to try to copy the
> > geoid to a MEMDataset raster. That had the benefit of avoiding the
> > CPLGetConfigOption() bottleneck and also avoiding the block cache.
> > That being said, the memory raster is always set to an access mode of
> GA_Update.
> > That means that reading will also try to acquire a mutex in
> > GDALDataset::EnterReadWrite. Would it make sense to be able to either
> > specify the access mode of a MEMDataset to GA_ReadOnly or to add a
> > SetAccess() method to it similar to RawRasterBand so that it can be
> > changed to read-only after the initial copy was done?
> >
> > Keep in mind that I am willing to make and contribute the necessary
> changes.
> > I just want to get a feel as to what would make sense at the general
> > level if any such changes are required. Also, do you have any other
> > suggestions on how to avoid such mutexes when reading what is
> essentially static data?
> 
> Clearly the GDAL API isn't made to deliver the ultimate performance when
> extracting points one by one, due to many layers traversed, checks, etc.
> 
> If you're at that level of performance tuning, instead of ingesting into a
> MEMDataset, you could probably just ingest into your favorite C++ array
> structure and read directly from it
> 

Yeah, I had a feeling you might come back with that. That make sense.

> An a for Linux/Unix users is to use GDALRasterBand::GetVirtualMemAuto(),
> that for RAW datasets will basically use mmap()

That is good point, ideally I would be using a memory mapped file for such a performance critical endeavor. I am not sure I would have the time to take that one right now, but regardless, thanks for the suggestions.

André

> 
> See
> https://gdal.org/api/gdalrasterband_cpp.html?
> _CPPv4N14GDALRasterBand17GetVirtualMemAutoE10GDALRWFlagPiP7GInt
> BigPPc
> 
> and
> 
> https://gdal.org/api/cpl.html#_CPPv420CPLVirtualMemGetAddrP13CPLVirtu
> alMem
> 
> 
> Even
> --
> Spatialys - Geospatial professional services http://www.spatialys.com


From dniven at ucsc.edu  Fri Oct 30 09:35:55 2020
From: dniven at ucsc.edu (Doug Niven)
Date: Fri, 30 Oct 2020 09:35:55 -0700
Subject: [gdal-dev] RGDAL + sqlite3 = ld: cannot find -lsqlite3
Message-ID: <606EE2DD-0099-4430-A066-BD3313785CB6@ucsc.edu>

I’m hoping someone might be able to shed some light on how to fix the following message when installing ‘rgdal’:

/opt/rh/devtoolset-8/root/usr/libexec/gcc/x86_64-redhat-linux/8/ld: cannot find -lsqlite3
collect2: error: ld returned 1 exit status

GDAL, PROJ, GEOS, Postgres 9-11, all installed via Yum on Centos 7.

Sqlite3’s lib is in my LD_LIBRARY_PATH:

[root at localhost ~]# echo $LD_LIBRARY_PATH
/usr/sqlite330/lib:/opt/rh/llvm-toolset-7/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib:/opt/rh/devtoolset-8/root/usr/lib64/dyninst:/opt/rh/devtoolset-8/root/usr/lib/dyninst:/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib

And Sqlite3 is on my PATH:

[root at localhost ~]# which sqlite3
/usr/sqlite330/bin/sqlite3

Command to install used in R:

install.packages('rgdal', type = "source", configure.args=c('--with-gdal-config=/usr/gdal31/bin/gdal-config-64','--with-proj-include=/usr/proj71/include','--with-proj-lib=/usr/proj71/lib’))

Many thanks for any assistance with this!

Doug

From mmfuller at protonmail.com  Fri Oct 30 11:41:27 2020
From: mmfuller at protonmail.com (mmfuller)
Date: Fri, 30 Oct 2020 18:41:27 +0000
Subject: [gdal-dev] Does GDAL 3.2 exist?
Message-ID: <RcWZfS-c5UacmmCWnih9tp_xyaFRzEINoFprebo5g5bdjr-9uKH7whrRya9UXsVJu_0O-GdpBsrUJci6-dhp0O2D0lYtjTdvCs0QqXzoNyg=@protonmail.com>

The GDAL docs for gdal2tiles [( https://gdal.org/programs/gdal2tiles.html](https://gdal.org/programs/gdal2tiles.html) ) says that:

"MapML support is new to GDAL 3.2."

But the latest version of GDAL I can find at https://gdal.org/download.html is 3.1.4.

So are the docs referring to an as yet unreleased version?

Mike
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20201030/9f9c6316/attachment.html>

From Roger.Bivand at nhh.no  Fri Oct 30 12:16:30 2020
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 30 Oct 2020 12:16:30 -0700 (MST)
Subject: [gdal-dev] RGDAL + sqlite3 = ld: cannot find -lsqlite3
In-Reply-To: <606EE2DD-0099-4430-A066-BD3313785CB6@ucsc.edu>
References: <606EE2DD-0099-4430-A066-BD3313785CB6@ucsc.edu>
Message-ID: <1604085390021-0.post@n6.nabble.com>

I don't think this is a relevant list. R-sig-geo is a relevant list if you
are subscribed. Both PROJ and GDAL are themselves built using libsqlite3,
and PROJ used by GDAL and many drivers themselves need it. It isn't needed
by rgdal directly, but there was a (short) period when the rgdal configure
script checked its presence. My closest guess is that the rgdal shared
object is compiled and linked correctly with the given configure arguments,
but that it fails when loading is checked because you have multiple copies
og PROJ and/or GDAL in the load path, and one other than those in the
configure arguments is found first.

Please follow up on R-sig-geo

Roger


Doug Niven wrote
> I’m hoping someone might be able to shed some light on how to fix the
> following message when installing ‘rgdal’:
> 
> /opt/rh/devtoolset-8/root/usr/libexec/gcc/x86_64-redhat-linux/8/ld: cannot
> find -lsqlite3
> collect2: error: ld returned 1 exit status
> 
> GDAL, PROJ, GEOS, Postgres 9-11, all installed via Yum on Centos 7.
> 
> Sqlite3’s lib is in my LD_LIBRARY_PATH:
> 
> [root at localhost ~]# echo $LD_LIBRARY_PATH
> /usr/sqlite330/lib:/opt/rh/llvm-toolset-7/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib:/opt/rh/devtoolset-8/root/usr/lib64/dyninst:/opt/rh/devtoolset-8/root/usr/lib/dyninst:/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib
> 
> And Sqlite3 is on my PATH:
> 
> [root at localhost ~]# which sqlite3
> /usr/sqlite330/bin/sqlite3
> 
> Command to install used in R:
> 
> install.packages('rgdal', type = "source",
> configure.args=c('--with-gdal-config=/usr/gdal31/bin/gdal-config-64','--with-proj-include=/usr/proj71/include','--with-proj-lib=/usr/proj71/lib’))
> 
> Many thanks for any assistance with this!
> 
> Doug
> _______________________________________________
> gdal-dev mailing list

> gdal-dev at .osgeo

> https://lists.osgeo.org/mailman/listinfo/gdal-dev





-----
Roger Bivand
NHH Norwegian School of Economics, Bergen, Norway
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GDAL-Dev-f3742093.html

