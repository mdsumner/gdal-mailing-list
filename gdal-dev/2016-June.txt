From damian.dixon at gmail.com  Wed Jun  1 09:17:16 2016
From: damian.dixon at gmail.com (Damian Dixon)
Date: Wed, 1 Jun 2016 17:17:16 +0100
Subject: [gdal-dev] Reading the same OSM data in multiple threads
Message-ID: <CAJjdW1yt-B4s1gG0d4_=4x0+Mtfass1qPdCNfNP8iZLpyLp9Cg@mail.gmail.com>

Hi,

I'm trying to speed up processing of OSM data by opening an OSM file into
multiple datasets in multiple threads. One dataset per thread. Each thread
is processing a separate section of data, basically tiling the data.

I've however run into a scaling issue with the amount of memory allocated
per dataset.

The Open in the OSM driver seems to allocate a lot of memory for buffers
for processing regardless of the size of the data loaded.

So I have a couple of questions:

1. is there away of reducing the memory load when reading OSM in multiple
threads?

2. Could I convert the OSM data into a different format that can be read
efficiently from multiple threads? and what would that format be?

My thought for (2) would be to load the data into a database and read from
the database using ogr. If this is the correct way forward which database
would be recommended (PostGIS, SpatialLite,...) ?

Thanks
Damian
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160601/0185f139/attachment.html>

From andrew at aitchison.me.uk  Wed Jun  1 09:39:38 2016
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Wed, 1 Jun 2016 17:39:38 +0100 (BST)
Subject: [gdal-dev] Reading the same OSM data in multiple threads
In-Reply-To: <CAJjdW1yt-B4s1gG0d4_=4x0+Mtfass1qPdCNfNP8iZLpyLp9Cg@mail.gmail.com>
References: <CAJjdW1yt-B4s1gG0d4_=4x0+Mtfass1qPdCNfNP8iZLpyLp9Cg@mail.gmail.com>
Message-ID: <alpine.LRH.2.20.1606011726360.19480@warden.aitchison.me.uk>

On Wed, 1 Jun 2016, Damian Dixon wrote:

> Hi,
>
> I'm trying to speed up processing of OSM data by opening an OSM file into
> multiple datasets in multiple threads. One dataset per thread. Each thread
> is processing a separate section of data, basically tiling the data.
>
> I've however run into a scaling issue with the amount of memory allocated
> per dataset.
>
> The Open in the OSM driver seems to allocate a lot of memory for buffers
> for processing regardless of the size of the data loaded.
>
> So I have a couple of questions:
>
> 1. is there away of reducing the memory load when reading OSM in multiple
> threads?

GDAL_CACHEMAX should control that
https://trac.osgeo.org/gdal/wiki/ConfigOptions

> 2. Could I convert the OSM data into a different format that can be read
> efficiently from multiple threads? and what would that format be?

If you are going to process it in tiles it might make sense to
store it tiled, eg with gtiff, perhaps generated with
   gdal_translate -of GTiff -co "TILED=YES" in.osm out.tif

You don't say what sort of processing you are doing;
unless the file fits in memory or you do *a lot* of processing
you are probably limited by disk/file access speed, and you might be
better off with *fewer* threads.

-- 
Andrew C Aitchison


From even.rouault at spatialys.com  Wed Jun  1 10:26:23 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 1 Jun 2016 19:26:23 +0200
Subject: [gdal-dev] Reading the same OSM data in multiple threads
In-Reply-To: <CAJjdW1yt-B4s1gG0d4_=4x0+Mtfass1qPdCNfNP8iZLpyLp9Cg@mail.gmail.com>
References: <CAJjdW1yt-B4s1gG0d4_=4x0+Mtfass1qPdCNfNP8iZLpyLp9Cg@mail.gmail.com>
Message-ID: <201606011926.23781.even.rouault@spatialys.com>

Damian,

> 
> I'm trying to speed up processing of OSM data by opening an OSM file into
> multiple datasets in multiple threads. One dataset per thread. Each thread
> is processing a separate section of data, basically tiling the data.
> 
> I've however run into a scaling issue with the amount of memory allocated
> per dataset.
> 
> The Open in the OSM driver seems to allocate a lot of memory for buffers
> for processing regardless of the size of the data loaded.
> 
> So I have a couple of questions:
> 
> 1. is there away of reducing the memory load when reading OSM in multiple
> threads?

You may play with the OSM_MAX_TMPFILE_SIZE config option that defaults to 100 
(MB) / dataset.
If you are brave enough, you can edit ogr/ogrsf_frmts/osm/ogrosmdatasource.cpp 
and reduce the values of the #define MAX_DELAYED_FEATURES, 
MAX_ACCUMULATED_NODES and HASHED_INDEXES_ARRAY_SIZE (and possibly disabling 
ENABLE_NODE_LOOKUP_BY_HASHING in ogr_osm.h)

> 
> 2. Could I convert the OSM data into a different format that can be read
> efficiently from multiple threads? and what would that format be?
> My thought for (2) would be to load the data into a database and read from
> the database using ogr. If this is the correct way forward which database
> would be recommended (PostGIS, SpatialLite,...) ?

Reading the same OSM file from multiple threads is indeed probably an inefficient 
approach as they don't have spatial indices, so you'll end up reading the 
whole file completely for each tile. So prior conversion would probably be 
better for later scaling. SpatiaLite/GPKG are probably good choices.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Wed Jun  1 15:46:06 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 1 Jun 2016 15:46:06 -0700
Subject: [gdal-dev] Starting a discussion on style and coding guidelines
In-Reply-To: <CACJ51z1YJvCpdAmrFX753DWgGK2Ocx8xFXa1gm4F-brSkNaS8g@mail.gmail.com>
References: <CACmBxyvZVV26DJVRCUKpBcLpJ3oLUTCrCqyPjrM=z0RwnbdmFQ@mail.gmail.com>
 <CACmBxytjMQBXFaidPyk3fpW0LWFrNy=r-ShyGxUnncFy9zJLCQ@mail.gmail.com>
 <CACJ51z2YebaiETNPtWREPJce6h_oA-iRxT+g7sN3gsqfgK+CYw@mail.gmail.com>
 <201605052325.11402.even.rouault@spatialys.com>
 <CACmBxyumiemh-VKcpCPQ7i9_eQK4=FpmdTEYyY8ANT0MLOjGhA@mail.gmail.com>
 <CABUeae9F_OdG71X827UaZ=tfowQfLfb27Ed9QzTYOyVfJMempg@mail.gmail.com>
 <CACmBxysZnqmiycd63yYZYD01NZ1WxKqiqf7JYh_yBpq+Paw2yA@mail.gmail.com>
 <CABUeae8dHWLdQWcqwuuwWN9L-r8zyGEDk8A4djE-CY=0yrFhAw@mail.gmail.com>
 <CACmBxyvy6b-QSHd8P09_H9er3ASkiVk5uMyCPWbspO8==UrKfA@mail.gmail.com>
 <CABUeae97NrrtyL5dJ79WP_9v5h-TSpsRiwUWyu9GZbQWzHEVGw@mail.gmail.com>
 <CACmBxyuj4ZrVZXP7H5rm9ZAoSyS_mdKUZd6Toe8Bgon9dpprYw@mail.gmail.com>
 <CABUeae8MEXRnTSjHkDahx1JUDThD9d+Dt4_7N7CTrUJ7ftfKHQ@mail.gmail.com>
 <CACJ51z1YJvCpdAmrFX753DWgGK2Ocx8xFXa1gm4F-brSkNaS8g@mail.gmail.com>
Message-ID: <CACmBxysPp_q9JyR1s=LUDKY_FZ=PWw9dPeoM-o8P+a34w2kb+Q@mail.gmail.com>

https://docs.google.com/document/d/1O1B7LY13L532kXcYcB2EdO65m5LOCsqaqn5R9iJfSPU/pub

The optimized stack .o is 1248 bytes and the on the heap vector is 1600
bytes with gcc 4.8.  The cost of either is pretty small.  So, if there are
100 of these in gdal, we are talking about 30-60K of extra object file size
for all the cases in GDAL.

For stack usage, start thinking about tons of threads spread out over lots
of cores and think about how systems are built...  Google Compute Engine
has 32 core machines.  If you want to get the most out your machines at
scale, you want a small stack.

int anVals[256] = {};  Does initialize everything to the default value
(zeros), but doesn't solve the stack issue.

Making a little class is yet another thing for people to learn when vector
looks to me to work quite well.

On Mon, May 9, 2016 at 1:37 PM, Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

> On Mon, May 9, 2016 at 2:49 PM, Mateusz Loskot <mateusz at loskot.net> wrote:
>
>>
>> Point taken.
>>
>> Although the proposal looks OK, I'd suggest to check what
>> assembler code generates your favourite C++ toolkit,
>> or at least measured times for
>>
>> int anVals[256];
>> memset(anVals, 0, 256*sizeof(int));
>>
>
> Are "we" doing memset anymore in these cases?
>
> int anVals[256] = {};
>
> seems preferable
>
>
>> vs
>>
>> std::vector<int> oVals(256, 0);
>>
>> and compare with:
>>
>> std::vector<char> oVals(256, 0);
>>
>
> Think vector is a bad solution for something that's fixed.  Just write
> something.  But I already suggested that and wrote something... :)
>
> Do you know why they are wedded to a 16K stack?
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160601/819028a5/attachment.html>

From schwehr at gmail.com  Wed Jun  1 15:59:25 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 1 Jun 2016 15:59:25 -0700
Subject: [gdal-dev] RFC: int bFoo -> bool bFoo (simple case)
Message-ID: <CACmBxyv=tRU=qAKZxbHzJYADoJvQQgD+ijXOR_BFdc=r-6couA@mail.gmail.com>

Hi all

The large arrays on the stack RFC discussion was impressive.  Here is a
second RFC.  I tried to use the experience of the first to improve this one.

Thoughts on the simplest case of int bFoo to bool bFoo?

https://goo.gl/hdzhXD

I figure we need to discuss a bunch more of these before considering
touching RFC 8 or adding a new or several new wiki docs.

-kurt
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160601/a3a99bb0/attachment.html>

From even.rouault at spatialys.com  Thu Jun  2 03:20:47 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 2 Jun 2016 12:20:47 +0200
Subject: [gdal-dev] RFC: int bFoo -> bool bFoo (simple case)
In-Reply-To: <CACmBxyv=tRU=qAKZxbHzJYADoJvQQgD+ijXOR_BFdc=r-6couA@mail.gmail.com>
References: <CACmBxyv=tRU=qAKZxbHzJYADoJvQQgD+ijXOR_BFdc=r-6couA@mail.gmail.com>
Message-ID: <201606021220.48140.even.rouault@spatialys.com>


> 
> Thoughts on the simplest case of int bFoo to bool bFoo?
> 
> https://goo.gl/hdzhXD

Looks good to me

You could perhaps have made it a bit more compact for readability (dropping 
e.g. alternatives and the historic remark about bool not being supported by 
ancient C++ compilers) and start with your proposal summed up just at the 
beginning, so that lazy readers don't have to it all the discussion :-))


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Thu Jun  2 03:21:46 2016
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 2 Jun 2016 12:21:46 +0200
Subject: [gdal-dev] RFC: int bFoo -> bool bFoo (simple case)
In-Reply-To: <CACmBxyv=tRU=qAKZxbHzJYADoJvQQgD+ijXOR_BFdc=r-6couA@mail.gmail.com>
References: <CACmBxyv=tRU=qAKZxbHzJYADoJvQQgD+ijXOR_BFdc=r-6couA@mail.gmail.com>
Message-ID: <CABUeae8_UiK8su6A-o=RTNK1qnOfO0OoSyeTWAEjxQRXfN43mw@mail.gmail.com>

On 2 June 2016 at 00:59, Kurt Schwehr <schwehr at gmail.com> wrote:
> Hi all
>
> The large arrays on the stack RFC discussion was impressive.  Here is a
> second RFC.  I tried to use the experience of the first to improve this one.
>
> Thoughts on the simplest case of int bFoo to bool bFoo?
>
> https://goo.gl/hdzhXD

Regarding to the gist, namely, the "Proposed solution", looks good.
Thanks.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Thu Jun  2 03:29:37 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 2 Jun 2016 12:29:37 +0200
Subject: [gdal-dev] Starting a discussion on style and coding guidelines
In-Reply-To: <CACmBxysPp_q9JyR1s=LUDKY_FZ=PWw9dPeoM-o8P+a34w2kb+Q@mail.gmail.com>
References: <CACmBxyvZVV26DJVRCUKpBcLpJ3oLUTCrCqyPjrM=z0RwnbdmFQ@mail.gmail.com>
 <CACJ51z1YJvCpdAmrFX753DWgGK2Ocx8xFXa1gm4F-brSkNaS8g@mail.gmail.com>
 <CACmBxysPp_q9JyR1s=LUDKY_FZ=PWw9dPeoM-o8P+a34w2kb+Q@mail.gmail.com>
Message-ID: <201606021229.37444.even.rouault@spatialys.com>

Le jeudi 02 juin 2016 00:46:06, Kurt Schwehr a écrit :
> https://docs.google.com/document/d/1O1B7LY13L532kXcYcB2EdO65m5LOCsqaqn5R9iJ
> fSPU/pub
> 
> The optimized stack .o is 1248 bytes and the on the heap vector is 1600
> bytes with gcc 4.8.  The cost of either is pretty small.  So, if there are
> 100 of these in gdal, we are talking about 30-60K of extra object file size
> for all the cases in GDAL.

Code size is one thing, but I'd be curious to know about the speed impacts due 
to the heap allocation. Like time several million iterations of each way (and 
make sure to do something non trivial with the arrray so that the compiler 
doesn't optimize the code away). If there's no significant difference, then fine. 
Otherwise we'd have to be careful when the replacements are done in a 
performance sensitive routine (my feeling is that there are not so many such 
places)

> 
> For stack usage, start thinking about tons of threads spread out over lots
> of cores and think about how systems are built...  Google Compute Engine
> has 32 core machines.  If you want to get the most out your machines at
> scale, you want a small stack.
> 
> int anVals[256] = {};  Does initialize everything to the default value
> (zeros), but doesn't solve the stack issue.
> 
> Making a little class is yet another thing for people to learn when vector
> looks to me to work quite well.
> 
> On Mon, May 9, 2016 at 1:37 PM, Andrew Bell <andrew.bell.ia at gmail.com>
> 
> wrote:
> > On Mon, May 9, 2016 at 2:49 PM, Mateusz Loskot <mateusz at loskot.net> wrote:
> >> Point taken.
> >> 
> >> Although the proposal looks OK, I'd suggest to check what
> >> assembler code generates your favourite C++ toolkit,
> >> or at least measured times for
> >> 
> >> int anVals[256];
> >> memset(anVals, 0, 256*sizeof(int));
> > 
> > Are "we" doing memset anymore in these cases?
> > 
> > int anVals[256] = {};
> > 
> > seems preferable
> > 
> >> vs
> >> 
> >> std::vector<int> oVals(256, 0);
> >> 
> >> and compare with:
> >> 
> >> std::vector<char> oVals(256, 0);
> > 
> > Think vector is a bad solution for something that's fixed.  Just write
> > something.  But I already suggested that and wrote something... :)
> > 
> > Do you know why they are wedded to a 16K stack?
> > 
> > --
> > Andrew Bell
> > andrew.bell.ia at gmail.com
> > 
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From damian.dixon at gmail.com  Thu Jun  2 03:58:18 2016
From: damian.dixon at gmail.com (Damian Dixon)
Date: Thu, 02 Jun 2016 10:58:18 +0000
Subject: [gdal-dev] Reading the same OSM data in multiple threads
In-Reply-To: <201606011926.23781.even.rouault@spatialys.com>
References: <CAJjdW1yt-B4s1gG0d4_=4x0+Mtfass1qPdCNfNP8iZLpyLp9Cg@mail.gmail.com>
 <201606011926.23781.even.rouault@spatialys.com>
Message-ID: <CAJjdW1zxgmGafeG2O8M1q-gzMKto2SuPPv-0kQB0q9uWStNPTA@mail.gmail.com>

Thanks for the reply's.

We are doing a lot of processing of the data and need to retain that data
in a vector format.

For now we are disabling the multi-threading for OSM data and bumping up
the memory allowed to be allocated by a significant amount.

We will probably go with converting OSM to SpatialLite when the data is
over a certain size.

Thanks
Damian


On Wed, Jun 1, 2016 at 6:25 PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Damian,
>
> >
> > I'm trying to speed up processing of OSM data by opening an OSM file into
> > multiple datasets in multiple threads. One dataset per thread. Each
> thread
> > is processing a separate section of data, basically tiling the data.
> >
> > I've however run into a scaling issue with the amount of memory allocated
> > per dataset.
> >
> > The Open in the OSM driver seems to allocate a lot of memory for buffers
> > for processing regardless of the size of the data loaded.
> >
> > So I have a couple of questions:
> >
> > 1. is there away of reducing the memory load when reading OSM in multiple
> > threads?
>
> You may play with the OSM_MAX_TMPFILE_SIZE config option that defaults to
> 100
> (MB) / dataset.
> If you are brave enough, you can edit
> ogr/ogrsf_frmts/osm/ogrosmdatasource.cpp
> and reduce the values of the #define MAX_DELAYED_FEATURES,
> MAX_ACCUMULATED_NODES and HASHED_INDEXES_ARRAY_SIZE (and possibly disabling
> ENABLE_NODE_LOOKUP_BY_HASHING in ogr_osm.h)
>
> >
> > 2. Could I convert the OSM data into a different format that can be read
> > efficiently from multiple threads? and what would that format be?
> > My thought for (2) would be to load the data into a database and read
> from
> > the database using ogr. If this is the correct way forward which database
> > would be recommended (PostGIS, SpatialLite,...) ?
>
> Reading the same OSM file from multiple threads is indeed probably an
> inefficient
> approach as they don't have spatial indices, so you'll end up reading the
> whole file completely for each tile. So prior conversion would probably be
> better for later scaling. SpatiaLite/GPKG are probably good choices.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160602/42054b26/attachment-0001.html>

From support at satshot.com  Thu Jun  2 08:59:49 2016
From: support at satshot.com (Avi Blackmore)
Date: Thu, 2 Jun 2016 18:59:49 +0300
Subject: [gdal-dev] =?utf-8?q?=E2=9D=A3_it=27s_really_not_a_joke?=
Message-ID: <00002f6aa3f1$83be79ed$9c2ca293$@satshot.com>

Hi,

You have to see that amazing stuff! I couldn't believe my eyes, that's really not a joke. Just take a look  <http://ntosecheti.thereimannway.net/aeyiz>

Best regards, Avi Blackmore

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160602/cae182d1/attachment.html>

From jgomezdans at gmail.com  Thu Jun  2 11:50:20 2016
From: jgomezdans at gmail.com (Jose Gomez-Dans)
Date: Thu, 2 Jun 2016 19:50:20 +0100
Subject: [gdal-dev] GDAL 2 Python bindings changes
Message-ID: <CAMWde5qP4gTcWpqugKfmu_A1jYL5zajfBgtYyQCr7mNZEnK9pg@mail.gmail.com>

Hello,

I have just installed GDAL 2.1.0 on some test systems. I mostly use the
Python bindings and the shell tools in Unix (e.g. gdalinfo and so on, with
a slant on GDAL, but also use OGR from time to time). Are the changes in
the Python bindings and/or tools going from 1.11.x to 2.1 documented
somewhere? A cursory web search didn't bring anything up.

Many thanks!
Jose
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160602/b573990c/attachment.html>

From even.rouault at spatialys.com  Thu Jun  2 11:56:05 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 2 Jun 2016 20:56:05 +0200
Subject: [gdal-dev] GDAL 2 Python bindings changes
In-Reply-To: <CAMWde5qP4gTcWpqugKfmu_A1jYL5zajfBgtYyQCr7mNZEnK9pg@mail.gmail.com>
References: <CAMWde5qP4gTcWpqugKfmu_A1jYL5zajfBgtYyQCr7mNZEnK9pg@mail.gmail.com>
Message-ID: <201606022056.06069.even.rouault@spatialys.com>

Le jeudi 02 juin 2016 20:50:20, Jose Gomez-Dans a écrit :
> Hello,
> 
> I have just installed GDAL 2.1.0 on some test systems. I mostly use the
> Python bindings and the shell tools in Unix (e.g. gdalinfo and so on, with
> a slant on GDAL, but also use OGR from time to time). Are the changes in
> the Python bindings and/or tools going from 1.11.x to 2.1 documented
> somewhere? A cursory web search didn't bring anything up.

Look at the following sections in the NEWS file in 2.1.0 and 2.0.0 :
https://svn.osgeo.org/gdal/trunk/gdal/NEWS

== SWIG Language Bindings ==
All bindings:
Python bindings:

> 
> Many thanks!
> Jose

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bontepaarden at gmail.com  Fri Jun  3 00:12:25 2016
From: bontepaarden at gmail.com (Paul Meems)
Date: Fri, 3 Jun 2016 09:12:25 +0200
Subject: [gdal-dev] gdalwarp + cutline and change extent
Message-ID: <CAHNf2YT8fQKXV0jbfzn7zCHVyVtwoXDnLUG6R2KHM1r7EavBgw@mail.gmail.com>

Hi,

Currently we're using GDAL v1.10
We need to clip a piece out of a larger tiff file using a shapefile.

When we use this command:
gdalwarp -cutline Field9.shp -crop_to_cutline -wo
"CUTLINE_ALL_TOUCHED=TRUE" input.tif output.tif
We get a nicely cropped tiff-file like we want. But the pixels have shifted
towards the cutline making the input and output tiff files no longer align.

When we use the command without -crop_to_cutline:
gdalwarp -cutline Field9.shp -wo "CUTLINE_ALL_TOUCHED=TRUE" input.tif
output.tif
We get a cut tiff-file which aligns correctly with the pixels of the input
file but all pixels outside the the cutline are set to nodata and the
extent of the output file is the same as the input file.

What is the correct command to keep the pixels aligned AND crop the extent
of the output file.

Thanks,

Paul
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160603/c0cfc46e/attachment.html>

From even.rouault at spatialys.com  Fri Jun  3 02:26:19 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 3 Jun 2016 11:26:19 +0200
Subject: [gdal-dev] gdalwarp + cutline and change extent
In-Reply-To: <CAHNf2YT8fQKXV0jbfzn7zCHVyVtwoXDnLUG6R2KHM1r7EavBgw@mail.gmail.com>
References: <CAHNf2YT8fQKXV0jbfzn7zCHVyVtwoXDnLUG6R2KHM1r7EavBgw@mail.gmail.com>
Message-ID: <201606031126.19437.even.rouault@spatialys.com>

Le vendredi 03 juin 2016 09:12:25, Paul Meems a écrit :
> Hi,
> 
> Currently we're using GDAL v1.10
> We need to clip a piece out of a larger tiff file using a shapefile.
> 
> When we use this command:
> gdalwarp -cutline Field9.shp -crop_to_cutline -wo
> "CUTLINE_ALL_TOUCHED=TRUE" input.tif output.tif
> We get a nicely cropped tiff-file like we want. But the pixels have shifted
> towards the cutline making the input and output tiff files no longer align.
> 
> When we use the command without -crop_to_cutline:
> gdalwarp -cutline Field9.shp -wo "CUTLINE_ALL_TOUCHED=TRUE" input.tif
> output.tif
> We get a cut tiff-file which aligns correctly with the pixels of the input
> file but all pixels outside the the cutline are set to nodata and the
> extent of the output file is the same as the input file.
> 
> What is the correct command to keep the pixels aligned AND crop the extent
> of the output file.

See https://trac.osgeo.org/gdal/ticket/3947

> 
> Thanks,
> 
> Paul

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Fri Jun  3 06:54:24 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Fri, 3 Jun 2016 06:54:24 -0700
Subject: [gdal-dev] Starting a discussion on style and coding guidelines
In-Reply-To: <201606021229.37444.even.rouault@spatialys.com>
References: <CACmBxyvZVV26DJVRCUKpBcLpJ3oLUTCrCqyPjrM=z0RwnbdmFQ@mail.gmail.com>
 <CACJ51z1YJvCpdAmrFX753DWgGK2Ocx8xFXa1gm4F-brSkNaS8g@mail.gmail.com>
 <CACmBxysPp_q9JyR1s=LUDKY_FZ=PWw9dPeoM-o8P+a34w2kb+Q@mail.gmail.com>
 <201606021229.37444.even.rouault@spatialys.com>
Message-ID: <CACmBxytvz6fyEpxLJPiLX1F9VXQ+83HFV2iNWsQ6TM228J84qA@mail.gmail.com>

I would make some of assertions (some just restating what Even wrote)

* The cost to heap allocation is a fair question (but I would suggest we
defer the work until required)

* Any work done on performance critical subroutines should be done
carefully.

* It would help to have a standard comment that people can add to
empirically detected performance critical sections so that we reduce the
chance of performance regressions

* It would be nice to have a very simple performance check system, but that
seems like a separate discussion that will open the whole benchmarking
can-o-worms.

* It would be great to have a set of instructions on how to instrument GDAL
to collect metrics of runs and detect hot spots with open source tools.
It's been a long time since I've done anything like that with generally
available tools.  e.g. https://sourceware.org/binutils/docs/gprof/  And I
need to look more at the gcov output.  I see that mapserver has a start
https://trac.osgeo.org/mapserver/wiki/PerformanceTesting

* The gdal wiki needs to have more of
http://erouault.blogspot.com/2016/01/software-quality-improvements-in-gdal.html
blended in

* https://en.wikiquote.org/wiki/Donald_Knuth "premature optimization is the
root of all evil (or at least most of it) in programming" :)

* I would suggest that with any guideline there will almost always be the
occasional location where that guideline does not make sense.  In that
case, I would expect that a comment would go along with the exception
explaining why it is important.

* The cost of heap versus stack is not well done in a standalone test (but
there is value in standalone examples).  Pressures on caches, TLBs, etc are
difficult to replicate in simple examples.  Moving a large allocate to the
heap helps keep the rest of the stack fast.  Think about the pages required
for the stack with multiple cores and lots of threads.
http://unix.stackexchange.com/questions/128213/how-is-page-size-determined-in-virtual-address-space

* There are also places where heap allocation is just flat out banned after
a process is initialized.  e.g. daemons like gpsd or long running realtime
systems (your car's engine controllers, spacecraft control systems, etc.).
I would argue that it is never going to be a good idea to use GDAL inside
that kind of system / process

In terms of GDAL, I haven't seen any places where heap allocation of large
objects would like be an important fraction of runtime.  I'm sure they are
there, but I would bet they are rare.

On Thu, Jun 2, 2016 at 3:29 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Le jeudi 02 juin 2016 00:46:06, Kurt Schwehr a écrit :
> >
> https://docs.google.com/document/d/1O1B7LY13L532kXcYcB2EdO65m5LOCsqaqn5R9iJ
> > fSPU/pub
> >
> > The optimized stack .o is 1248 bytes and the on the heap vector is 1600
> > bytes with gcc 4.8.  The cost of either is pretty small.  So, if there
> are
> > 100 of these in gdal, we are talking about 30-60K of extra object file
> size
> > for all the cases in GDAL.
>
> Code size is one thing, but I'd be curious to know about the speed impacts
> due
> to the heap allocation. Like time several million iterations of each way
> (and
> make sure to do something non trivial with the arrray so that the compiler
> doesn't optimize the code away). If there's no significant difference,
> then fine.
> Otherwise we'd have to be careful when the replacements are done in a
> performance sensitive routine (my feeling is that there are not so many
> such
> places)
>
> >
> > For stack usage, start thinking about tons of threads spread out over
> lots
> > of cores and think about how systems are built...  Google Compute Engine
> > has 32 core machines.  If you want to get the most out your machines at
> > scale, you want a small stack.
> >
> > int anVals[256] = {};  Does initialize everything to the default value
> > (zeros), but doesn't solve the stack issue.
> >
> > Making a little class is yet another thing for people to learn when
> vector
> > looks to me to work quite well.
> >
> > On Mon, May 9, 2016 at 1:37 PM, Andrew Bell <andrew.bell.ia at gmail.com>
> >
> > wrote:
> > > On Mon, May 9, 2016 at 2:49 PM, Mateusz Loskot <mateusz at loskot.net>
> wrote:
> > >> Point taken.
> > >>
> > >> Although the proposal looks OK, I'd suggest to check what
> > >> assembler code generates your favourite C++ toolkit,
> > >> or at least measured times for
> > >>
> > >> int anVals[256];
> > >> memset(anVals, 0, 256*sizeof(int));
> > >
> > > Are "we" doing memset anymore in these cases?
> > >
> > > int anVals[256] = {};
> > >
> > > seems preferable
> > >
> > >> vs
> > >>
> > >> std::vector<int> oVals(256, 0);
> > >>
> > >> and compare with:
> > >>
> > >> std::vector<char> oVals(256, 0);
> > >
> > > Think vector is a bad solution for something that's fixed.  Just write
> > > something.  But I already suggested that and wrote something... :)
> > >
> > > Do you know why they are wedded to a 16K stack?
> > >
> > > --
> > > Andrew Bell
> > > andrew.bell.ia at gmail.com
> > >
> > > _______________________________________________
> > > gdal-dev mailing list
> > > gdal-dev at lists.osgeo.org
> > > http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160603/b746aad1/attachment.html>

From mateusz at loskot.net  Fri Jun  3 07:31:50 2016
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 3 Jun 2016 16:31:50 +0200
Subject: [gdal-dev] Starting a discussion on style and coding guidelines
In-Reply-To: <CACmBxytvz6fyEpxLJPiLX1F9VXQ+83HFV2iNWsQ6TM228J84qA@mail.gmail.com>
References: <CACmBxyvZVV26DJVRCUKpBcLpJ3oLUTCrCqyPjrM=z0RwnbdmFQ@mail.gmail.com>
 <CACJ51z1YJvCpdAmrFX753DWgGK2Ocx8xFXa1gm4F-brSkNaS8g@mail.gmail.com>
 <CACmBxysPp_q9JyR1s=LUDKY_FZ=PWw9dPeoM-o8P+a34w2kb+Q@mail.gmail.com>
 <201606021229.37444.even.rouault@spatialys.com>
 <CACmBxytvz6fyEpxLJPiLX1F9VXQ+83HFV2iNWsQ6TM228J84qA@mail.gmail.com>
Message-ID: <CABUeae_k=PiuOQP_yxbo20FOJSXXx5_Kg17bEuv=KNpyq5g+Mw@mail.gmail.com>

On 3 June 2016 at 15:54, Kurt Schwehr <schwehr at gmail.com> wrote:
> I would make some of assertions (some just restating what Even wrote)
>
> * The cost to heap allocation is a fair question (but I would suggest we
> defer the work until required)
>
> * Any work done on performance critical subroutines should be done
> carefully.

I would precise:

Any major changes that are supposed to improve performance
should be first backed up by profiling results or complexity analysis
that clearly confirm promised gains.

Such results also could be used as not-slower-than reference
in later benchmarks.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From lluna.nova at gmail.com  Fri Jun  3 11:45:10 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Fri, 3 Jun 2016 20:45:10 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory driver
In-Reply-To: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
Message-ID: <CALAZn4j3=RZ94zv0uYb2FK5qfarfGMW+y+kTxQf1Zaudo3U2hg@mail.gmail.com>

I've posted this question on gis stackexchange, but maybe here is more
appropriate.

I am doing the same as in
http://gis.stackexchange.com/questions/134000/gdal-api-cant-save-image-in-some-formats

That is, saving a `JPEG` image with `GDAL`. I know I'd have to create a
`MEM` buffer and then `CreateCopy` to `JPEG`. However, I'd like to avoid
the allocation of two buffers since my image might be big and I use my own
memory buffer.

Is there a way to pass the data memory address that I'd like to use to the
MEM driver?

I've seen this mysterious article http://www.gdal.org/frmt_mem.html which
references the `DATAPOINTER` option. I've seen another reference [here](
https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
which does


sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYPE=%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype);
    dataset = GDALOpen(filename,GA_Update);

How would this translate to c++? Maybe

        papszOptions = CSLSetNameValue( papszOptions, "DATAPOINTER",
datapointer );

and so on?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160603/53e533a1/attachment-0001.html>

From mateusz at loskot.net  Fri Jun  3 12:10:54 2016
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 3 Jun 2016 21:10:54 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4j3=RZ94zv0uYb2FK5qfarfGMW+y+kTxQf1Zaudo3U2hg@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CALAZn4j3=RZ94zv0uYb2FK5qfarfGMW+y+kTxQf1Zaudo3U2hg@mail.gmail.com>
Message-ID: <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>

On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
> I've seen this mysterious article http://www.gdal.org/frmt_mem.html which
> references the `DATAPOINTER` option. I've seen another reference
> [here](https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> which does
>
>
> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYPE=%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype);
>     dataset = GDALOpen(filename,GA_Update);
>
> How would this translate to c++?

The line above is valid C++, isn't it.
If you followed to Frank's answer [1], you'd see it slightly corrected
but the technique remains the same.

[1] https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From woodbri at swoodbridge.com  Fri Jun  3 18:22:06 2016
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Fri, 3 Jun 2016 21:22:06 -0400
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
Message-ID: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>

Hi All,

I want to convert some HYCOM data into GTiff format and I'm a little 
lost on how to get started, whether I can do what I need just using a 
vrt or if I'm going to have to write code to process the data.

To start with I have placed gdalinfo on one file here:
http://imaptools.com:8080/dl/hycom-gdalinfo.txt

The data comes from http://hycom.org/dataserver/glb-analysis
and I will need to be using GLBa0.08 dataset.

I have two use cases:

1) The simple one is to extract say Band 1 into a georeferenced GTiff 
and apply color to using color ranges without loosing the NODATA. I 
think I can do later using .vrt, correct?

I'm not sure how to deal with the georeferencing, because the download 
site says: "Native hycom .[ab] data converted to NetCDF on native 
Mercator-curvilinear HYCOM horizontal grid" but that does not seem in 
sync with the Metadata in the file.

2) The more complicated case is that there are two files:
    a)  eastward_sea_water_velocity (aka: u, u-velocity)
    b)  northward_sea_water_velocity (aka: v, v-velocity)
that I would like to use to create a grid of vectors with arrowheads 
using u and v to define the vector and where the color of the vector is 
related to the magnitude of its length. Ultimately this data will get 
rendered via mapserver so I'm wondering if I can do this via a GTiff or 
if I will have to resort to creating a massive point shapefile with 
attributes of angle and magnitude and use a symbol. It seems like it 
would be best if I can keep the data as a GTiff and then sample the 
points and render the vectors on the fly for when you zoom in/out.

Interesting data and I'm really pleased to see gdal can access it! Kudos 
on that.

Any guidance would be greatly appreciated.

Thanks,
   -Steve

---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From bboughton at gmail.com  Fri Jun  3 21:16:00 2016
From: bboughton at gmail.com (bboughton)
Date: Fri, 3 Jun 2016 21:16:00 -0700 (PDT)
Subject: [gdal-dev] PostGIS Out of db VRT containing JPEG2000 GDAL 2.1
	OpenJPEG
Message-ID: <1465013760784-5269888.post@n6.nabble.com>

Not sure on 'repost' rules so apologies if this is out of place, but I have
this GDAL/JPEG2000/VRT/POSTGIS problem that I have put up on GIS Stack
Exchange with no interest. I am unsure if it is a bug, incorrect setup or
not even possible.

Essentially my procedure is:
Build GDAL 2.1 with OpenJPEG
Build PostGIS with above GDAL build
Created VRT file with SENTINEL2 Driver / JP2 files. 
Add to POSTGIS as out of db raster
Try to query and get 'Raster offline error'

PostGIS query works fine with of of db GeoTiff and a VRT without JP2 files.

Because of the popularity of GDAL, PostGIS & the Sentinel 2 imagery I
figured this may be a stack that could be required in the future. For the
moment I get around it by converting the JP2 files for GeoTiff but at the
expense of 2x+ the hard disk space.

Link to SE question: 
http://gis.stackexchange.com/questions/195934/postgis-out-of-db-vrt-containing-jpeg2000-gdal-2-1-openjpeg

Would be happy to pay for the Kakadu driver if it meant sorting out this
problem but I don't think that is the issue?

Thanks,
Ben



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/PostGIS-Out-of-db-VRT-containing-JPEG2000-GDAL-2-1-OpenJPEG-tp5269888.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Sat Jun  4 03:38:59 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 4 Jun 2016 12:38:59 +0200
Subject: [gdal-dev] PostGIS Out of db VRT containing JPEG2000 GDAL 2.1
	OpenJPEG
In-Reply-To: <1465013760784-5269888.post@n6.nabble.com>
References: <1465013760784-5269888.post@n6.nabble.com>
Message-ID: <201606041239.00582.even.rouault@spatialys.com>

Le samedi 04 juin 2016 06:16:00, bboughton a écrit :
> Not sure on 'repost' rules so apologies if this is out of place, but I have
> this GDAL/JPEG2000/VRT/POSTGIS problem that I have put up on GIS Stack
> Exchange with no interest. I am unsure if it is a bug, incorrect setup or
> not even possible.
> 
> Essentially my procedure is:
> Build GDAL 2.1 with OpenJPEG
> Build PostGIS with above GDAL build
> Created VRT file with SENTINEL2 Driver / JP2 files.
> Add to POSTGIS as out of db raster
> Try to query and get 'Raster offline error'
> 
> PostGIS query works fine with of of db GeoTiff and a VRT without JP2 files.
> 
> Because of the popularity of GDAL, PostGIS & the Sentinel 2 imagery I
> figured this may be a stack that could be required in the future. For the
> moment I get around it by converting the JP2 files for GeoTiff but at the
> expense of 2x+ the hard disk space.
> 
> Link to SE question:
> http://gis.stackexchange.com/questions/195934/postgis-out-of-db-vrt-contain
> ing-jpeg2000-gdal-2-1-openjpeg

2 things to check that I've in mind:
- check that the VRT works fine. For example with gdal_translate
- check that the JP2OpenJPEG driver is white-listed in PostGIS conf : 
http://postgis.net/docs/postgis_gdal_enabled_drivers.html

> 
> Would be happy to pay for the Kakadu driver if it meant sorting out this
> problem but I don't think that is the issue?

There's no fundamental reason why JP2OpenJPEG wouldn't work.

> 
> Thanks,
> Ben
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/PostGIS-Out-of-db-VRT-containing-JPEG2
> 000-GDAL-2-1-OpenJPEG-tp5269888.html Sent from the GDAL - Dev mailing list
> archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bboughton at gmail.com  Sat Jun  4 03:44:31 2016
From: bboughton at gmail.com (bboughton)
Date: Sat, 4 Jun 2016 03:44:31 -0700 (PDT)
Subject: [gdal-dev] PostGIS Out of db VRT containing JPEG2000 GDAL 2.1
	OpenJPEG
In-Reply-To: <201606041239.00582.even.rouault@spatialys.com>
References: <1465013760784-5269888.post@n6.nabble.com>
 <201606041239.00582.even.rouault@spatialys.com>
Message-ID: <1465037071281-5269922.post@n6.nabble.com>

Thanks for your suggestions. 

SELECT short_name FROM ST_GDALDrivers();
Lists VRT, GTiff, JPEG2000 etc as a supported formats

I am able to use gdal_translate to convert between VRT (created using
Sentinel2 Driver) and GeoTiff


One thing I do remember now - could be a question for PostGIS list - when
building PostGIS I didn't use the latest version of Geos (v3.4 instead of
3.5 as 3.5 was not available as package). According to this
(https://lists.osgeo.org/pipermail/postgis-devel/2015-May/024878.html) post
I don't think it would affect this issue. 



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/PostGIS-Out-of-db-VRT-containing-JPEG2000-GDAL-2-1-OpenJPEG-tp5269888p5269922.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Sat Jun  4 06:29:26 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 4 Jun 2016 15:29:26 +0200
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
In-Reply-To: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
References: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
Message-ID: <201606041529.27008.even.rouault@spatialys.com>

Hi,
> 
> I want to convert some HYCOM data into GTiff format and I'm a little
> lost on how to get started, whether I can do what I need just using a
> vrt or if I'm going to have to write code to process the data.
> 
> To start with I have placed gdalinfo on one file here:
> http://imaptools.com:8080/dl/hycom-gdalinfo.txt
> 
> The data comes from http://hycom.org/dataserver/glb-analysis
> and I will need to be using GLBa0.08 dataset.
> 
> I have two use cases:
> 
> 1) The simple one is to extract say Band 1 into a georeferenced GTiff
> and apply color to using color ranges without loosing the NODATA. I
> think I can do later using .vrt, correct?

gdaldem color-relief can output to a VRT, but given that this netCDF file is 
georeferenced through a geolocation array, you'll likely have first to run 
gdalwarp -geoloc to have something useful at the end.

> 
> I'm not sure how to deal with the georeferencing, because the download
> site says: "Native hycom .[ab] data converted to NetCDF on native
> Mercator-curvilinear HYCOM horizontal grid" but that does not seem in
> sync with the Metadata in the file.
> 
> 2) The more complicated case is that there are two files:
>     a)  eastward_sea_water_velocity (aka: u, u-velocity)
>     b)  northward_sea_water_velocity (aka: v, v-velocity)
> that I would like to use to create a grid of vectors with arrowheads
> using u and v to define the vector and where the color of the vector is
> related to the magnitude of its length. Ultimately this data will get
> rendered via mapserver so I'm wondering if I can do this via a GTiff or
> if I will have to resort to creating a massive point shapefile with
> attributes of angle and magnitude and use a symbol. It seems like it
> would be best if I can keep the data as a GTiff and then sample the
> points and render the vectors on the fly for when you zoom in/out.

See
http://mapserver.org/input/vector/vector_field.html

You don't need to create a vector file.

You'll have to preprocess your file to get the u and v bands in the same 
raster.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From 191980 at niuitmo.ru  Sun Jun  5 01:45:12 2016
From: 191980 at niuitmo.ru (=?utf-8?B?0JHQvtGA0LfRi9GFINCQ0LvQtdC60YHQsNC90LTRgCDQkNC90LTRgNC10LU=?= =?utf-8?B?0LLQuNGH?=)
Date: Sun, 5 Jun 2016 08:45:12 +0000
Subject: [gdal-dev] GSoC GDAL DWG Support [Week 2]
Message-ID: <E6588BC1-C753-4B07-A1D0-0F2AD16700AB@niuitmo.ru>

This week we've changed the development direction with my mentor (Dmitry Baryshnikov). Now, library (libopencad) development is 'freezed' in some kind, and I am starting developing OGR driver.


  1.
This week I've done:

1. Implemented Linetypes reading (but they are not associated with drawing objects still). Implemented google tests for reading large files (with big amount of objects) - for lwpolylines and 3dpolylines.
2. A little code refactoring.

2. Plan on doing next week: Implement linetypes for objects, extend supported geometries list with new ones. Code refactoring.
Write driver 'skeleton', and try to integrate libopencad.

3. Blocking:
None, but since I am not very familiar with OGR driver implementation - I am slowed down by this fact.

Best regards,
Alexandr Borzykh

Links:
Development blog<http://gsoc2016gdaldwg.blogspot.ru/>
libopencad github<https://github.com/sandyre/libopencad>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160605/2d3344e8/attachment.html>

From jukka.rahkonen at maanmittauslaitos.fi  Sun Jun  5 02:00:12 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Sun, 5 Jun 2016 09:00:12 +0000 (UTC)
Subject: [gdal-dev]
	=?utf-8?q?PostGIS_Out_of_db_VRT_containing_JPEG2000_GD?=
	=?utf-8?q?AL_2=2E1=09OpenJPEG?=
References: <1465013760784-5269888.post@n6.nabble.com>
 <201606041239.00582.even.rouault@spatialys.com>
 <1465037071281-5269922.post@n6.nabble.com>
Message-ID: <loom.20160605T105603-51@post.gmane.org>

bboughton <bboughton <at> gmail.com> writes:

> 
> Thanks for your suggestions. 
> 
> SELECT short_name FROM ST_GDALDrivers();
> Lists VRT, GTiff, JPEG2000 etc as a supported formats
> 

Hi,

Driver JPEG2000 means the Jasper driver which is rather useless for
geospatial images http://www.gdal.org/frmt_jpeg2000.html. Do you see also
driver JP2OpenJPEG listed http://www.gdal.org/frmt_jp2openjpeg.html?


-Jukka Rahkonen-


From schwehr at gmail.com  Sun Jun  5 11:04:08 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Sun, 5 Jun 2016 11:04:08 -0700
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
In-Reply-To: <201606041529.27008.even.rouault@spatialys.com>
References: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
 <201606041529.27008.even.rouault@spatialys.com>
Message-ID: <CACmBxyuH488+uArwpr0z6-_-6q_Kz_ga2AkLpCrwKCyMjLROoQ@mail.gmail.com>

Stephen,

Take a look at these two discussions for starters on working with hycom:

http://gis.stackexchange.com/questions/167155/how-can-i-make-geotiffs-of-individual-depth-layers-in-the-hycom-ocean-circulatio

http://gis.stackexchange.com/questions/170882/how-can-a-make-a-netcdf-with-subgroups-smaller

You should start with the regular grids.  e.g.

ftp://ftp.hycom.org/datasets/GLBu0.08/expt_91.1/data/hindcasts/2015/hycom_glb_911_2015093000_t000_uv3z.nc

Make an 80 layer geotiff from the u/v and then use mapserver as Even
suggested.

-kurt


On Sat, Jun 4, 2016 at 6:29 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi,
> >
> > I want to convert some HYCOM data into GTiff format and I'm a little
> > lost on how to get started, whether I can do what I need just using a
> > vrt or if I'm going to have to write code to process the data.
> >
> > To start with I have placed gdalinfo on one file here:
> > http://imaptools.com:8080/dl/hycom-gdalinfo.txt
> >
> > The data comes from http://hycom.org/dataserver/glb-analysis
> > and I will need to be using GLBa0.08 dataset.
> >
> > I have two use cases:
> >
> > 1) The simple one is to extract say Band 1 into a georeferenced GTiff
> > and apply color to using color ranges without loosing the NODATA. I
> > think I can do later using .vrt, correct?
>
> gdaldem color-relief can output to a VRT, but given that this netCDF file
> is
> georeferenced through a geolocation array, you'll likely have first to run
> gdalwarp -geoloc to have something useful at the end.
>
> >
> > I'm not sure how to deal with the georeferencing, because the download
> > site says: "Native hycom .[ab] data converted to NetCDF on native
> > Mercator-curvilinear HYCOM horizontal grid" but that does not seem in
> > sync with the Metadata in the file.
> >
> > 2) The more complicated case is that there are two files:
> >     a)  eastward_sea_water_velocity (aka: u, u-velocity)
> >     b)  northward_sea_water_velocity (aka: v, v-velocity)
> > that I would like to use to create a grid of vectors with arrowheads
> > using u and v to define the vector and where the color of the vector is
> > related to the magnitude of its length. Ultimately this data will get
> > rendered via mapserver so I'm wondering if I can do this via a GTiff or
> > if I will have to resort to creating a massive point shapefile with
> > attributes of angle and magnitude and use a symbol. It seems like it
> > would be best if I can keep the data as a GTiff and then sample the
> > points and render the vectors on the fly for when you zoom in/out.
>
> See
> http://mapserver.org/input/vector/vector_field.html
>
> You don't need to create a vector file.
>
> You'll have to preprocess your file to get the u and v bands in the same
> raster.
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160605/975bb058/attachment.html>

From bboughton at gmail.com  Sun Jun  5 13:42:24 2016
From: bboughton at gmail.com (bboughton)
Date: Sun, 5 Jun 2016 13:42:24 -0700 (PDT)
Subject: [gdal-dev] PostGIS Out of db VRT containing JPEG2000 GDAL
	2.1	OpenJPEG
In-Reply-To: <loom.20160605T105603-51@post.gmane.org>
References: <1465013760784-5269888.post@n6.nabble.com>
 <201606041239.00582.even.rouault@spatialys.com>
 <1465037071281-5269922.post@n6.nabble.com>
 <loom.20160605T105603-51@post.gmane.org>
Message-ID: <1465159344349-5270010.post@n6.nabble.com>

Jukka Rahkonen wrote
> Driver JPEG2000 means the Jasper driver which is rather useless for
> geospatial images http://www.gdal.org/frmt_jpeg2000.html. Do you see also
> driver JP2OpenJPEG listed http://www.gdal.org/frmt_jp2openjpeg.html?

OK so I've built everything from scratch again and can confirm:

JP2OpenJPEG is listed in PostGIS query: "SELECT short_name FROM
ST_GDALDrivers();"

JP2OpenJPEG is available in GDAL by running "gdal_translate --formats"

I can gdal_translate a SENTINEL2 driver created VRT containing .jp2 to GTiff

PostGIS version information:
POSTGIS="2.2.2 r14797" GEOS="3.5.0-CAPI-1.9.0 r4084" PROJ="Rel. 4.8.0, 6
March 2012" GDAL="GDAL 2.1.0, released 2016/04/25" LIBXML="2.9.1"
LIBJSON="0.11.99" TOPOLOGY RASTER

When trying to query raster I now get error:
ERROR:  rt_raster_from_gdal_dataset: Could not get data from GDAL raster
CONTEXT:  PL/pgSQL function st_value(raster,integer,geometry,boolean) line
18 at RETURN

Other notes:
When I run raster2pgdsql with -s [dataset epsg] I get error:
ERROR:  rt_raster_from_gdal_dataset: Could not get data from GDAL raster
CONTEXT:  SQL function "st_transform" statement 1

When I run without -s flag it completes OK with and without tiling. 

So it is clear PostGIS/GDAL having issues reading the VRT file. 

This is all running in a VPS. If someone would like to log in and confirm
all of this I'd be happy to share credentials just send me private email. 

Cheers,
Ben





When I convert one band to GTiff and add as out of db raster 




--
View this message in context: http://osgeo-org.1560.x6.nabble.com/PostGIS-Out-of-db-VRT-containing-JPEG2000-GDAL-2-1-OpenJPEG-tp5269888p5270010.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From bboughton at gmail.com  Sun Jun  5 13:49:38 2016
From: bboughton at gmail.com (bboughton)
Date: Sun, 5 Jun 2016 13:49:38 -0700 (PDT)
Subject: [gdal-dev] PostGIS Out of db VRT containing JPEG2000 GDAL
	2.1	OpenJPEG
In-Reply-To: <1465159344349-5270010.post@n6.nabble.com>
References: <1465013760784-5269888.post@n6.nabble.com>
 <201606041239.00582.even.rouault@spatialys.com>
 <1465037071281-5269922.post@n6.nabble.com>
 <loom.20160605T105603-51@post.gmane.org>
 <1465159344349-5270010.post@n6.nabble.com>
Message-ID: <1465159778548-5270011.post@n6.nabble.com>

UPDATE:
raster2pgsql will let me add a band from the VRT to database as a PostGIS
Raster with -s flag.
Query works.



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/PostGIS-Out-of-db-VRT-containing-JPEG2000-GDAL-2-1-OpenJPEG-tp5269888p5270011.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From woodbri at swoodbridge.com  Sun Jun  5 14:10:36 2016
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Sun, 5 Jun 2016 17:10:36 -0400
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
In-Reply-To: <CACmBxyuH488+uArwpr0z6-_-6q_Kz_ga2AkLpCrwKCyMjLROoQ@mail.gmail.com>
References: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
 <201606041529.27008.even.rouault@spatialys.com>
 <CACmBxyuH488+uArwpr0z6-_-6q_Kz_ga2AkLpCrwKCyMjLROoQ@mail.gmail.com>
Message-ID: <ebe44229-6bed-a4b4-e476-65cb26a950be@swoodbridge.com>

Hi Even, Kurt,

Thank you for the suggestions.

I'm reading through stuff and searching for solutions. I need access to 
the 2d layer which is only available via the GLBa0.08 dataset and not in 
the GLBu0.08 dataset which is easier to deal with. I'll start with the 
GLBu0.08 dataset for the other data following Kurt suggestions.

This page describes the problem of georeferencing the GLBa0.08 dataset 
but the solution is based on windows python script and using ArcGIS, but 
the idea might be adapted to writing some C/C++ or script to handle 
creating those artifacts. I want to script the download and processing 
of the data into geotiff's running on Linux.

http://code.nicholas.duke.edu/projects/mget/wiki/HYCOM

One problem is that the HYCOM site does not have *.grid.[ab] files that 
I can find. They are supposed to be in the topo directory:

Index of ftp://ftp.hycom.org/datasets/GLBa0.08/expt_91.2/topo/

Name 	Size 	Last Modified
depth_GLBa0.08_09.a   57984 KB	8/24/2013 	12:00:00 AM
depth_GLBa0.08_09.b       1 KB	8/24/2013 	12:00:00 AM
depth_GLBa0.08_09.nc 173950 KB	11/12/2013 	12:00:00 AM

and it is not obvious how to read and incorporate these files as I think 
they only work with the HYCOM related executables.

I did notice the the lat/lon info is already in the .nc for the "u" 
dataset which can be seen with ncdump. In fact it is also there for the 
"a" dataset also, but the values 1-3298 and 1-4500 which is the size of 
the file in pixels, so not helpful.

I've looked on the HYCOM forum but that has not been very helpful yet.

Thanks,
   -Steve


On 6/5/2016 2:04 PM, Kurt Schwehr wrote:
> Stephen,
>
> Take a look at these two discussions for starters on working with
> hycom:
>
> http://gis.stackexchange.com/questions/167155/how-can-i-make-geotiffs-of-individual-depth-layers-in-the-hycom-ocean-circulatio
>
>
> http://gis.stackexchange.com/questions/170882/how-can-a-make-a-netcdf-with-subgroups-smaller
>
>  You should start with the regular grids.  e.g.
>
> ftp://ftp.hycom.org/datasets/GLBu0.08/expt_91.1/data/hindcasts/2015/hycom_glb_911_2015093000_t000_uv3z.nc
>
>  Make an 80 layer geotiff from the u/v and then use mapserver as
> Even suggested.
>
> -kurt
>
>
> On Sat, Jun 4, 2016 at 6:29 AM, Even Rouault
> <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>>
> wrote:
>
> Hi,
>>
>> I want to convert some HYCOM data into GTiff format and I'm a
>> little lost on how to get started, whether I can do what I need
>> just using a vrt or if I'm going to have to write code to process
>> the data.
>>
>> To start with I have placed gdalinfo on one file here:
>> http://imaptools.com:8080/dl/hycom-gdalinfo.txt
>>
>> The data comes from http://hycom.org/dataserver/glb-analysis and I
>> will need to be using GLBa0.08 dataset.
>>
>> I have two use cases:
>>
>> 1) The simple one is to extract say Band 1 into a georeferenced
>> GTiff and apply color to using color ranges without loosing the
>> NODATA. I think I can do later using .vrt, correct?
>
> gdaldem color-relief can output to a VRT, but given that this netCDF
> file is georeferenced through a geolocation array, you'll likely have
> first to run gdalwarp -geoloc to have something useful at the end.
>
>>
>> I'm not sure how to deal with the georeferencing, because the
>> download site says: "Native hycom .[ab] data converted to NetCDF on
>> native Mercator-curvilinear HYCOM horizontal grid" but that does
>> not seem in sync with the Metadata in the file.
>>
>> 2) The more complicated case is that there are two files: a)
>> eastward_sea_water_velocity (aka: u, u-velocity) b)
>> northward_sea_water_velocity (aka: v, v-velocity) that I would like
>> to use to create a grid of vectors with arrowheads using u and v to
>> define the vector and where the color of the vector is related to
>> the magnitude of its length. Ultimately this data will get rendered
>> via mapserver so I'm wondering if I can do this via a GTiff or if I
>> will have to resort to creating a massive point shapefile with
>> attributes of angle and magnitude and use a symbol. It seems like
>> it would be best if I can keep the data as a GTiff and then sample
>> the points and render the vectors on the fly for when you zoom
>> in/out.
>
> See http://mapserver.org/input/vector/vector_field.html
>
> You don't need to create a vector file.
>
> You'll have to preprocess your file to get the u and v bands in the
> same raster.
>
> Even
>
> -- Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________ gdal-dev mailing
> list gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
> -- -- http://schwehr.org


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From bboughton at gmail.com  Sun Jun  5 14:12:33 2016
From: bboughton at gmail.com (bboughton)
Date: Sun, 5 Jun 2016 14:12:33 -0700 (PDT)
Subject: [gdal-dev] PostGIS Out of db VRT containing JPEG2000 GDAL
	2.1	OpenJPEG
In-Reply-To: <1465159778548-5270011.post@n6.nabble.com>
References: <1465013760784-5269888.post@n6.nabble.com>
 <201606041239.00582.even.rouault@spatialys.com>
 <1465037071281-5269922.post@n6.nabble.com>
 <loom.20160605T105603-51@post.gmane.org>
 <1465159344349-5270010.post@n6.nabble.com>
 <1465159778548-5270011.post@n6.nabble.com>
Message-ID: <1465161153803-5270015.post@n6.nabble.com>

OK It's working now.

Thanks for all your help.

Solution: 
When generating VRT with GDAL I did not use full path for Sentinel2 xml
file. This is fine for using gdal_translate etc but causes an error inside
PostGIS as full path is required both to the VRT and inside it.

Also I compiled GDAL 2.1 with following configuration:

./configure --with-openjpeg=/usr/local --without-jasper --with-python=yes




--
View this message in context: http://osgeo-org.1560.x6.nabble.com/PostGIS-Out-of-db-VRT-containing-JPEG2000-GDAL-2-1-OpenJPEG-tp5269888p5270015.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From francisco.javier.calzado at ericsson.com  Mon Jun  6 01:16:22 2016
From: francisco.javier.calzado at ericsson.com (Javier Calzado)
Date: Mon, 6 Jun 2016 08:16:22 +0000 (UTC)
Subject: [gdal-dev] New driver implementation with larger block size
Message-ID: <loom.20160606T101551-228@post.gmane.org>

Hi guys,

First of all, congratulations for such a wonderful and useful library. My 
team and I are modernising a huge software legacy tool with an important 
GIS background. We decided to go with GDAL some time ago and we would like 
to get the most out of it. 

I have just finished implementing a new driver for a propietary raster 
format we have been using for years. We plan to release it as open source 
and contribute with the code when it is finished. As a first approach, 
it's been done inheriting from a RawDataset and creating a RawRasterBand. 
However, Raw driver is designed with fixed scanlines as block size. After 
some benchmarking with Google Tests framework, although performance has 
increased a bit, is not as significant as I expected compared to our old 
legacy code. Since our tool is GIS intensive, I would like to push 
performance forward. 

The main concern when comparing GDAL vs our legacy GIS code is the block 
size, we were caching much larger blocks than just a scanline. Is there 
any design reason why RawRasterBand cannot be customized with any desired 
block size? Is there any example of a larger block size driver? Any tips 
performance-wise on how to implement a driver using a different block size 
than a scanline?

Thank you for your help.
Regards,
Javier.


From lluna.nova at gmail.com  Mon Jun  6 01:45:47 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 10:45:47 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CALAZn4j3=RZ94zv0uYb2FK5qfarfGMW+y+kTxQf1Zaudo3U2hg@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
Message-ID: <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>

THanks Mateusz,

You're right. I'm trying it as we speak.

In my case I have a std::vector<GByte*> of the 3 bands, where the GByte*
are allocated in the heap with new GByte[width*height]. I guess that won't
work because the three bands have to be one single memory chunk, am I
right? I guess the only solution is to switch to single band float and
merge rgb to float. I'd prefer not having to refactor the rest of the code.
Is it possible to have a different address for each band?

All this is to support jpg as output. All the operations are done in my
GByte array and it's only at the end that I create the dataset and image.
At the moment I create a Tiff and finally createcopy to jpg.


On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net> wrote:

> On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
> > I've seen this mysterious article http://www.gdal.org/frmt_mem.html
> which
> > references the `DATAPOINTER` option. I've seen another reference
> > [here](
> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> > which does
> >
> >
> >
> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYPE=%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype);
> >     dataset = GDALOpen(filename,GA_Update);
> >
> > How would this translate to c++?
>
> The line above is valid C++, isn't it.
> If you followed to Frank's answer [1], you'd see it slightly corrected
> but the technique remains the same.
>
> [1] https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/0a71eaff/attachment.html>

From even.rouault at spatialys.com  Mon Jun  6 01:45:48 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jun 2016 10:45:48 +0200
Subject: [gdal-dev] New driver implementation with larger block size
In-Reply-To: <loom.20160606T101551-228@post.gmane.org>
References: <loom.20160606T101551-228@post.gmane.org>
Message-ID: <3178793.g8APq20gOt@even-n550jk>

On Monday 06 June 2016 08:16:22 Javier Calzado wrote:
> Hi guys,
> 
> First of all, congratulations for such a wonderful and useful library. My
> team and I are modernising a huge software legacy tool with an important
> GIS background. We decided to go with GDAL some time ago and we would like
> to get the most out of it.
> 
> I have just finished implementing a new driver for a propietary raster
> format we have been using for years. We plan to release it as open source
> and contribute with the code when it is finished. As a first approach,
> it's been done inheriting from a RawDataset and creating a RawRasterBand.
> However, Raw driver is designed with fixed scanlines as block size. After
> some benchmarking with Google Tests framework, although performance has
> increased a bit, is not as significant as I expected compared to our old
> legacy code. Since our tool is GIS intensive, I would like to push
> performance forward.
> 
> The main concern when comparing GDAL vs our legacy GIS code is the block
> size, we were caching much larger blocks than just a scanline. Is there
> any design reason why RawRasterBand cannot be customized with any desired
> block size? 

Probably because it was simpler to implement. Handling larger block height 
should be doable

> Is there any example of a larger block size driver? 

Yes, but I'm not sure that will help you as they handle significantly more 
complex formats than a raw format : GTiff, HFA, VRT, OpenJPEG, NITF...

> Any tips
> performance-wise on how to implement a driver using a different block size
> than a scanline?

You could also try to define the GDAL_ONE_BIG_READ configuration option / 
environment variable to YES that is used by IRasterIO() implementation. This 
should by-pass completely the block cache in most cases ( IReadBlock() is 
rarely directly called )

> 
> Thank you for your help.
> Regards,
> Javier.
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mateusz at loskot.net  Mon Jun  6 01:51:14 2016
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon, 6 Jun 2016 10:51:14 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CALAZn4j3=RZ94zv0uYb2FK5qfarfGMW+y+kTxQf1Zaudo3U2hg@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
 <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
Message-ID: <CABUeae-Q8LjpiydXjuDqgZ3apMzctGodNx3ydZeLdVjzDMV=eA@mail.gmail.com>

On 6 June 2016 at 10:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
>
> In my case I have a std::vector<GByte*> of the 3 bands,  where the GByte* are
> allocated in the heap with new GByte[width*height].
> I guess that won't work
> because the three bands have to be one single memory chunk, am I right?

vector allocates is single continuous block of memory.
...or I don't understand the problem.

> I guess the only solution is to switch to single band float and merge rgb to
> float. I'd prefer not having to refactor the rest of the code. Is it
> possible to have a different address for each band?

I might not know all GDAL tricks, but I don't think it is possible.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From even.rouault at spatialys.com  Mon Jun  6 01:55:13 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jun 2016 10:55:13 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
 <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
Message-ID: <7821454.u6Cx6TlBTs@even-n550jk>

On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
> THanks Mateusz,
> 
> You're right. I'm trying it as we speak.
> 
> In my case I have a std::vector<GByte*> of the 3 bands, where the GByte*
> are allocated in the heap with new GByte[width*height]. I guess that won't
> work because the three bands have to be one single memory chunk, am I
> right? I guess the only solution is to switch to single band float and
> merge rgb to float. I'd prefer not having to refactor the rest of the code.


> Is it possible to have a different address for each band?

Yes, create a dataset with 0 band and then add each band with the 
GDALDataset::AddBand() method

See http://gdal.org/frmt_mem.html :
"""The MEM format is one of the few that supports the AddBand() method. The 
AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET options to 
reference an existing memory array."""

> 
> All this is to support jpg as output. All the operations are done in my
> GByte array and it's only at the end that I create the dataset and image.
> At the moment I create a Tiff and finally createcopy to jpg.
> 
> On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net> wrote:
> > On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
> > > I've seen this mysterious article http://www.gdal.org/frmt_mem.html
> > 
> > which
> > 
> > > references the `DATAPOINTER` option. I've seen another reference
> > > [here](
> > 
> > https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> > 
> > > which does
> > 
> > sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYPE
> > 
=%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype);> 
> > >     dataset = GDALOpen(filename,GA_Update);
> > > 
> > > How would this translate to c++?
> > 
> > The line above is valid C++, isn't it.
> > If you followed to Frank's answer [1], you'd see it slightly corrected
> > but the technique remains the same.
> > 
> > [1] https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
> > 
> > Best regards,
> > --
> > Mateusz Loskot, http://mateusz.loskot.net

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lluna.nova at gmail.com  Mon Jun  6 01:57:30 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 10:57:30 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CABUeae-Q8LjpiydXjuDqgZ3apMzctGodNx3ydZeLdVjzDMV=eA@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CALAZn4j3=RZ94zv0uYb2FK5qfarfGMW+y+kTxQf1Zaudo3U2hg@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
 <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
 <CABUeae-Q8LjpiydXjuDqgZ3apMzctGodNx3ydZeLdVjzDMV=eA@mail.gmail.com>
Message-ID: <CALAZn4gVK9BtuZtgyT1ED7uY4BmnO5HpKJ=mZ3V=2U+M00ercA@mail.gmail.com>

On Mon, Jun 6, 2016 at 10:51 AM, Mateusz Loskot <mateusz at loskot.net> wrote:

> On 6 June 2016 at 10:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
> >
> > In my case I have a std::vector<GByte*> of the 3 bands,  where the
> GByte* are
> > allocated in the heap with new GByte[width*height].
> > I guess that won't work
> > because the three bands have to be one single memory chunk, am I right?
>
> vector allocates is single continuous block of memory.
> ...or I don't understand the problem.
>

The std::vector has 3 GByte* elements. The three pointers will reside
contiguous, but the memory they are pointing to (containing the R,G and B
data) don't necessarily have to be.

I guess BANDS=3 makes the bands contiguous in memory


>
> > I guess the only solution is to switch to single band float and merge
> rgb to
> > float. I'd prefer not having to refactor the rest of the code. Is it
> > possible to have a different address for each band?
>
> I might not know all GDAL tricks, but I don't think it is possible.
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/4155fa96/attachment.html>

From lluna.nova at gmail.com  Mon Jun  6 01:58:44 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 10:58:44 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <7821454.u6Cx6TlBTs@even-n550jk>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
 <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
 <7821454.u6Cx6TlBTs@even-n550jk>
Message-ID: <CALAZn4ivCRCU=1h4Ugzb6mJvV_kT55B7i=GQk0ju_=tamyL-xg@mail.gmail.com>

>
> The MEM format is one of the few that supports the AddBand() method. The
> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET options
> to reference an existing memory array.
>

Thanks Even, you've cured me from my blindness. That's exactly what I need.
Thanks to all of you, this is perfect.

On Mon, Jun 6, 2016 at 10:55 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
> > THanks Mateusz,
> >
> > You're right. I'm trying it as we speak.
> >
> > In my case I have a std::vector<GByte*> of the 3 bands, where the GByte*
> > are allocated in the heap with new GByte[width*height]. I guess that
> won't
> > work because the three bands have to be one single memory chunk, am I
> > right? I guess the only solution is to switch to single band float and
> > merge rgb to float. I'd prefer not having to refactor the rest of the
> code.
>
>
> > Is it possible to have a different address for each band?
>
> Yes, create a dataset with 0 band and then add each band with the
> GDALDataset::AddBand() method
>
> See http://gdal.org/frmt_mem.html :
> """The MEM format is one of the few that supports the AddBand() method. The
> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET options
> to
> reference an existing memory array."""
>
> >
> > All this is to support jpg as output. All the operations are done in my
> > GByte array and it's only at the end that I create the dataset and image.
> > At the moment I create a Tiff and finally createcopy to jpg.
> >
> > On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net>
> wrote:
> > > On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
> > > > I've seen this mysterious article http://www.gdal.org/frmt_mem.html
> > >
> > > which
> > >
> > > > references the `DATAPOINTER` option. I've seen another reference
> > > > [here](
> > >
> > > https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> > >
> > > > which does
> > >
> > >
> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYPE
> > >
> =%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype);>
> > > >     dataset = GDALOpen(filename,GA_Update);
> > > >
> > > > How would this translate to c++?
> > >
> > > The line above is valid C++, isn't it.
> > > If you followed to Frank's answer [1], you'd see it slightly corrected
> > > but the technique remains the same.
> > >
> > > [1]
> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
> > >
> > > Best regards,
> > > --
> > > Mateusz Loskot, http://mateusz.loskot.net
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/b94ea2e5/attachment.html>

From mateusz at loskot.net  Mon Jun  6 02:05:09 2016
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon, 6 Jun 2016 11:05:09 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4gVK9BtuZtgyT1ED7uY4BmnO5HpKJ=mZ3V=2U+M00ercA@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CALAZn4j3=RZ94zv0uYb2FK5qfarfGMW+y+kTxQf1Zaudo3U2hg@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
 <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
 <CABUeae-Q8LjpiydXjuDqgZ3apMzctGodNx3ydZeLdVjzDMV=eA@mail.gmail.com>
 <CALAZn4gVK9BtuZtgyT1ED7uY4BmnO5HpKJ=mZ3V=2U+M00ercA@mail.gmail.com>
Message-ID: <CABUeae_zhLd9uMt0-_ZLf1LXW6AHnvdGmFwA8ZJ7=EAMh8=5qA@mail.gmail.com>

On 6 June 2016 at 10:57, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
> On Mon, Jun 6, 2016 at 10:51 AM, Mateusz Loskot <mateusz at loskot.net> wrote:
>>
>> On 6 June 2016 at 10:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
>> >
>> > In my case I have a std::vector<GByte*> of the 3 bands,  where the
>> > GByte* are
>> > allocated in the heap with new GByte[width*height].
>> > I guess that won't work
>> > because the three bands have to be one single memory chunk, am I right?
>>
>> vector allocates is single continuous block of memory.
>> ...or I don't understand the problem.
>
>
> The std::vector has 3 GByte* elements.

My apologies for sloppy reading, I missed the '*' and read as vector<GByte>

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From ari.jolma at gmail.com  Mon Jun  6 02:10:56 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Mon, 6 Jun 2016 12:10:56 +0300
Subject: [gdal-dev] New list admin
Message-ID: <57553E20.5000107@gmail.com>

Folks,

I've added myself to the list admins, previously it was only w.. at 
pobox.com. I'll clear the admin requests list, which has got a bit long. 
Many of those are "message too big". I'll keep the current policy, i.e., 
won't let them through in the future, so people should use some other 
means of letting other people on the list to download their data etc.

Also, the list is pretty open (only confirm to subscribe and new users 
are not moderated) so there may be spam incidents. In the case of spam, 
the spammer may be put on moderation etc.

Best regards,

Ari Jolma


From jamessramm at gmail.com  Mon Jun  6 02:00:03 2016
From: jamessramm at gmail.com (jramm)
Date: Mon, 6 Jun 2016 02:00:03 -0700 (PDT)
Subject: [gdal-dev] Read data without reading 'null data'
In-Reply-To: <201602191113.28134.even.rouault@spatialys.com>
References: <1455875330714-5251626.post@n6.nabble.com>
 <201602191113.28134.even.rouault@spatialys.com>
Message-ID: <1465203603764-5270080.post@n6.nabble.com>

Hi 
I am having a few problems with using this (via python).

I have a test dataset with a 16 x 16 blocksize. In the below examples, bnd =
ds.GetRasterBand(1)

First, I try getting the blocksizes using the metadata:



This gives:



None of the first 10 blocks are empty - this is strange as it is a
handwritten dataset and i made sure there were some empty blocks.

So, I try reading each block and then getting the number of elements that
are not equal to the no data value, using numpy:


This gives:


blocks 9 and 10 are empty, furthermore, the non empty sizes are completely
different...what size is the metadata reporting here?
Am I calculating offsets wrong?
Even if that is the case, a full block should never be larger than 256. 
returns 




--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Read-data-without-reading-null-data-tp5251626p5270080.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From jamessramm at gmail.com  Mon Jun  6 02:23:24 2016
From: jamessramm at gmail.com (jramm)
Date: Mon, 6 Jun 2016 02:23:24 -0700 (PDT)
Subject: [gdal-dev] Read data without reading 'null data'
In-Reply-To: <1465203603764-5270080.post@n6.nabble.com>
References: <1455875330714-5251626.post@n6.nabble.com>
 <201602191113.28134.even.rouault@spatialys.com>
 <1465203603764-5270080.post@n6.nabble.com>
Message-ID: <1465205004846-5270084.post@n6.nabble.com>

This is my mistake. 
I had not truly created a sparse raster! I keep forgetting that the gdal
tools (gdal_translate) will still write the sparse blocks and the sparse
creation option is just to indicate that FillEmptyBlocks should be skipped. 
Creating the sparse file by hand correctly sets the block metadata. 

I can see that BLOCK_SIZE_{0}_{1} will return the size in bytes, or null.
What is interesting then is that if the raster isnt sparse (As in the first
example), BLOCK_SIZE_{0}_{1} appears to be returning garbage...



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Read-data-without-reading-null-data-tp5251626p5270084.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From ahuarte47 at yahoo.es  Sun Jun  5 15:10:06 2016
From: ahuarte47 at yahoo.es (Qgis-psc)
Date: Mon, 6 Jun 2016 01:10:06 +0300
Subject: [gdal-dev] Give it a try
Message-ID: <00000b5246eb$0696425d$1d9f052b$@yahoo.es>

Hello,
I think you have to try this thing, it's so hilarious, take a look at <http://phynketame.openela.com/xyoeca>

Sent from my iPhone, Qgis-psc

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/bc1bd11d/attachment.html>

From even.rouault at spatialys.com  Mon Jun  6 03:06:21 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jun 2016 12:06:21 +0200
Subject: [gdal-dev] Read data without reading 'null data'
In-Reply-To: <1465205004846-5270084.post@n6.nabble.com>
References: <1455875330714-5251626.post@n6.nabble.com>
 <1465203603764-5270080.post@n6.nabble.com>
 <1465205004846-5270084.post@n6.nabble.com>
Message-ID: <2502832.EvHxRhqkXL@even-n550jk>

On Monday 06 June 2016 02:23:24 jramm wrote:
> This is my mistake.
> I had not truly created a sparse raster! I keep forgetting that the gdal
> tools (gdal_translate) will still write the sparse blocks and the sparse
> creation option is just to indicate that FillEmptyBlocks should be skipped.
> Creating the sparse file by hand correctly sets the block metadata.
> 
> I can see that BLOCK_SIZE_{0}_{1} will return the size in bytes, or null.
> What is interesting then is that if the raster isnt sparse (As in the first
> example), BLOCK_SIZE_{0}_{1} appears to be returning garbage...

Your code didn't go through your email.

In https://svn.osgeo.org/gdal/trunk/autotest/gcore/tiff_read.py , you can find 
in tiff_read_tiff_metadata() examples of reading BLOCK_SIZE_ on non-sparse files.

> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/Read-data-without-reading-null-data-tp5
> 251626p5270084.html Sent from the GDAL - Dev mailing list archive at
> Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lluna.nova at gmail.com  Mon Jun  6 03:35:54 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 12:35:54 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <7821454.u6Cx6TlBTs@even-n550jk>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
 <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
 <7821454.u6Cx6TlBTs@even-n550jk>
Message-ID: <CALAZn4hG4C_sFvzyb+ENkgEO9W3S4gQ8cyM+bNP55vYv5Z_gQw@mail.gmail.com>

Just one more question,

If i set the option BAND=0, what should the DATAPOINTER be? Does it become
optional?

Cheers

On Mon, Jun 6, 2016 at 10:55 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
> > THanks Mateusz,
> >
> > You're right. I'm trying it as we speak.
> >
> > In my case I have a std::vector<GByte*> of the 3 bands, where the GByte*
> > are allocated in the heap with new GByte[width*height]. I guess that
> won't
> > work because the three bands have to be one single memory chunk, am I
> > right? I guess the only solution is to switch to single band float and
> > merge rgb to float. I'd prefer not having to refactor the rest of the
> code.
>
>
> > Is it possible to have a different address for each band?
>
> Yes, create a dataset with 0 band and then add each band with the
> GDALDataset::AddBand() method
>
> See http://gdal.org/frmt_mem.html :
> """The MEM format is one of the few that supports the AddBand() method. The
> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET options
> to
> reference an existing memory array."""
>
> >
> > All this is to support jpg as output. All the operations are done in my
> > GByte array and it's only at the end that I create the dataset and image.
> > At the moment I create a Tiff and finally createcopy to jpg.
> >
> > On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net>
> wrote:
> > > On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com> wrote:
> > > > I've seen this mysterious article http://www.gdal.org/frmt_mem.html
> > >
> > > which
> > >
> > > > references the `DATAPOINTER` option. I've seen another reference
> > > > [here](
> > >
> > > https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> > >
> > > > which does
> > >
> > >
> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYPE
> > >
> =%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype);>
> > > >     dataset = GDALOpen(filename,GA_Update);
> > > >
> > > > How would this translate to c++?
> > >
> > > The line above is valid C++, isn't it.
> > > If you followed to Frank's answer [1], you'd see it slightly corrected
> > > but the technique remains the same.
> > >
> > > [1]
> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
> > >
> > > Best regards,
> > > --
> > > Mateusz Loskot, http://mateusz.loskot.net
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/f24b88ef/attachment.html>

From schwehr at gmail.com  Mon Jun  6 04:18:15 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 6 Jun 2016 04:18:15 -0700
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
In-Reply-To: <ebe44229-6bed-a4b4-e476-65cb26a950be@swoodbridge.com>
References: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
 <201606041529.27008.even.rouault@spatialys.com>
 <CACmBxyuH488+uArwpr0z6-_-6q_Kz_ga2AkLpCrwKCyMjLROoQ@mail.gmail.com>
 <ebe44229-6bed-a4b4-e476-65cb26a950be@swoodbridge.com>
Message-ID: <CACmBxys3DigkzORS5DjbXouVZq0owrPq9c_GQSFGKRy0oK7mqg@mail.gmail.com>

Hi Stephen,

I sounds like you should be asking on
https://groups.google.com/a/hycom.org/forum/#!forum/forum rather than
gdal-dev.

-kurt

On Sun, Jun 5, 2016 at 2:10 PM, Stephen Woodbridge <woodbri at swoodbridge.com>
wrote:

> Hi Even, Kurt,
>
> Thank you for the suggestions.
>
> I'm reading through stuff and searching for solutions. I need access to
> the 2d layer which is only available via the GLBa0.08 dataset and not in
> the GLBu0.08 dataset which is easier to deal with. I'll start with the
> GLBu0.08 dataset for the other data following Kurt suggestions.
>
> This page describes the problem of georeferencing the GLBa0.08 dataset but
> the solution is based on windows python script and using ArcGIS, but the
> idea might be adapted to writing some C/C++ or script to handle creating
> those artifacts. I want to script the download and processing of the data
> into geotiff's running on Linux.
>
> http://code.nicholas.duke.edu/projects/mget/wiki/HYCOM
>
> One problem is that the HYCOM site does not have *.grid.[ab] files that I
> can find. They are supposed to be in the topo directory:
>
> Index of ftp://ftp.hycom.org/datasets/GLBa0.08/expt_91.2/topo/
>
> Name    Size    Last Modified
> depth_GLBa0.08_09.a   57984 KB  8/24/2013       12:00:00 AM
> depth_GLBa0.08_09.b       1 KB  8/24/2013       12:00:00 AM
> depth_GLBa0.08_09.nc 173950 KB  11/12/2013      12:00:00 AM
>
> and it is not obvious how to read and incorporate these files as I think
> they only work with the HYCOM related executables.
>
> I did notice the the lat/lon info is already in the .nc for the "u"
> dataset which can be seen with ncdump. In fact it is also there for the "a"
> dataset also, but the values 1-3298 and 1-4500 which is the size of the
> file in pixels, so not helpful.
>
> I've looked on the HYCOM forum but that has not been very helpful yet.
>
> Thanks,
>   -Steve
>
>
> On 6/5/2016 2:04 PM, Kurt Schwehr wrote:
>
>> Stephen,
>>
>> Take a look at these two discussions for starters on working with
>> hycom:
>>
>>
>> http://gis.stackexchange.com/questions/167155/how-can-i-make-geotiffs-of-individual-depth-layers-in-the-hycom-ocean-circulatio
>>
>>
>>
>> http://gis.stackexchange.com/questions/170882/how-can-a-make-a-netcdf-with-subgroups-smaller
>>
>>  You should start with the regular grids.  e.g.
>>
>>
>> ftp://ftp.hycom.org/datasets/GLBu0.08/expt_91.1/data/hindcasts/2015/hycom_glb_911_2015093000_t000_uv3z.nc
>>
>>  Make an 80 layer geotiff from the u/v and then use mapserver as
>> Even suggested.
>>
>> -kurt
>>
>>
>> On Sat, Jun 4, 2016 at 6:29 AM, Even Rouault
>> <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>>
>>
>> wrote:
>>
>> Hi,
>>
>>>
>>> I want to convert some HYCOM data into GTiff format and I'm a
>>> little lost on how to get started, whether I can do what I need
>>> just using a vrt or if I'm going to have to write code to process
>>> the data.
>>>
>>> To start with I have placed gdalinfo on one file here:
>>> http://imaptools.com:8080/dl/hycom-gdalinfo.txt
>>>
>>> The data comes from http://hycom.org/dataserver/glb-analysis and I
>>> will need to be using GLBa0.08 dataset.
>>>
>>> I have two use cases:
>>>
>>> 1) The simple one is to extract say Band 1 into a georeferenced
>>> GTiff and apply color to using color ranges without loosing the
>>> NODATA. I think I can do later using .vrt, correct?
>>>
>>
>> gdaldem color-relief can output to a VRT, but given that this netCDF
>> file is georeferenced through a geolocation array, you'll likely have
>> first to run gdalwarp -geoloc to have something useful at the end.
>>
>>
>>> I'm not sure how to deal with the georeferencing, because the
>>> download site says: "Native hycom .[ab] data converted to NetCDF on
>>> native Mercator-curvilinear HYCOM horizontal grid" but that does
>>> not seem in sync with the Metadata in the file.
>>>
>>> 2) The more complicated case is that there are two files: a)
>>> eastward_sea_water_velocity (aka: u, u-velocity) b)
>>> northward_sea_water_velocity (aka: v, v-velocity) that I would like
>>> to use to create a grid of vectors with arrowheads using u and v to
>>> define the vector and where the color of the vector is related to
>>> the magnitude of its length. Ultimately this data will get rendered
>>> via mapserver so I'm wondering if I can do this via a GTiff or if I
>>> will have to resort to creating a massive point shapefile with
>>> attributes of angle and magnitude and use a symbol. It seems like
>>> it would be best if I can keep the data as a GTiff and then sample
>>> the points and render the vectors on the fly for when you zoom
>>> in/out.
>>>
>>
>> See http://mapserver.org/input/vector/vector_field.html
>>
>> You don't need to create a vector file.
>>
>> You'll have to preprocess your file to get the u and v bands in the
>> same raster.
>>
>> Even
>>
>> -- Spatialys - Geospatial professional services
>> http://www.spatialys.com
>> _______________________________________________ gdal-dev mailing
>> list gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>>
>> -- -- http://schwehr.org
>>
>
>
> ---
> This email has been checked for viruses by Avast antivirus software.
> https://www.avast.com/antivirus
>
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/906596df/attachment-0001.html>

From lluna.nova at gmail.com  Mon Jun  6 05:53:46 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 14:53:46 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4hG4C_sFvzyb+ENkgEO9W3S4gQ8cyM+bNP55vYv5Z_gQw@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CABUeae91d9kYTneK4yQgr9w4bW44aCcnqaH5iXs6rN7UfCxraA@mail.gmail.com>
 <CALAZn4ggQe107u2qRcGSkR2K2C_ZsGm-oWsim0e9jGVaj9=Lqw@mail.gmail.com>
 <7821454.u6Cx6TlBTs@even-n550jk>
 <CALAZn4hG4C_sFvzyb+ENkgEO9W3S4gQ8cyM+bNP55vYv5Z_gQw@mail.gmail.com>
Message-ID: <CALAZn4jemgPhnyqWrZHL4+bFcCB6517nn1px4n=rs3eRr3dfKg@mail.gmail.com>

Let's jump to particulars, at the end, the code.

If I set the DATAPOINTER to NULL the program crashes at CreateCopy with
access violation. Same if I set it to the datapointer to &abyRaster[0] and
add the remaining two bands.

The abyRasters are initialized to white color with memset. SO this piece of
code should give me a white jpg square of widthxheight. I could set a
complete MWE if necessary.

And, the code:

        char* filename = (char*) malloc(1024);

        sprintf(filename, "MEM:::DATAPOINTER=%p,PIXELS=%d,LINES=%d,BANDS=0",

                NULL, width, height);

        poDstDS = (GDALDataset *) GDALOpen(filename,GA_Update);


        free(filename);


        for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)

        {

            //assert(sizeof(long) == sizeof(void*));

            const void * address = static_cast<const void*>(&abyRasters[b]);

            std::stringstream ss;

            ss << address;

            const char * datapointer = ss.str().c_str();

            std::cout << "datapointer: " << datapointer << std::endl;

            papszOptions = CSLSetNameValue( papszOptions,
"DATAPOINTER", datapointer );

            poDstDS->AddBand(GDT_Byte, papszOptions);


        }

        char **papszOptions2 = NULL;

        papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY", "40" );


        std::cout << "Copying to " << filepath << std::endl;

        GDALDriver* jpegDriver =
GetGDALDriverManager()->GetDriverByName("JPEG");

        GDALDataset* jpeg_ds =
jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
papszOptions2, GDALDummyProgress, NULL);

        if(jpeg_ds == NULL)

        {

            std::cout << "Failure when creating output orthoimage " <<
filepath << std::endl;

            return -5;

        }

The abyRasters are allocated with

        for(int b = 0; b < RGBRasterBands::NUMBANDS; b++)
        {
            abyRasters.push_back(new
GByte[rasterMemoryDimensions.width*rasterMemoryDimensions.height]());
            memset(&abyRasters[b][0],QuickDrop::NODATAVALUE,sizeof(GByte)*rasterMemoryDimensions.width*rasterMemoryDimensions.height);
        }


On Mon, Jun 6, 2016 at 12:35 PM, Pol Monsó Purtí <lluna.nova at gmail.com>
wrote:

> Just one more question,
>
> If i set the option BAND=0, what should the DATAPOINTER be? Does it become
> optional?
>
> Cheers
>
> On Mon, Jun 6, 2016 at 10:55 AM, Even Rouault <even.rouault at spatialys.com>
> wrote:
>
>> On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
>> > THanks Mateusz,
>> >
>> > You're right. I'm trying it as we speak.
>> >
>> > In my case I have a std::vector<GByte*> of the 3 bands, where the GByte*
>> > are allocated in the heap with new GByte[width*height]. I guess that
>> won't
>> > work because the three bands have to be one single memory chunk, am I
>> > right? I guess the only solution is to switch to single band float and
>> > merge rgb to float. I'd prefer not having to refactor the rest of the
>> code.
>>
>>
>> > Is it possible to have a different address for each band?
>>
>> Yes, create a dataset with 0 band and then add each band with the
>> GDALDataset::AddBand() method
>>
>> See http://gdal.org/frmt_mem.html :
>> """The MEM format is one of the few that supports the AddBand() method.
>> The
>> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET options
>> to
>> reference an existing memory array."""
>>
>> >
>> > All this is to support jpg as output. All the operations are done in my
>> > GByte array and it's only at the end that I create the dataset and
>> image.
>> > At the moment I create a Tiff and finally createcopy to jpg.
>> >
>> > On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net>
>> wrote:
>> > > On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com>
>> wrote:
>> > > > I've seen this mysterious article http://www.gdal.org/frmt_mem.html
>> > >
>> > > which
>> > >
>> > > > references the `DATAPOINTER` option. I've seen another reference
>> > > > [here](
>> > >
>> > > https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
>> > >
>> > > > which does
>> > >
>> > >
>> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYPE
>> > >
>>
>> =%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype);>
>> > > >     dataset = GDALOpen(filename,GA_Update);
>> > > >
>> > > > How would this translate to c++?
>> > >
>> > > The line above is valid C++, isn't it.
>> > > If you followed to Frank's answer [1], you'd see it slightly corrected
>> > > but the technique remains the same.
>> > >
>> > > [1]
>> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
>> > >
>> > > Best regards,
>> > > --
>> > > Mateusz Loskot, http://mateusz.loskot.net
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/f6f3a5f9/attachment.html>

From even.rouault at spatialys.com  Mon Jun  6 05:58:15 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jun 2016 14:58:15 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4jemgPhnyqWrZHL4+bFcCB6517nn1px4n=rs3eRr3dfKg@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CALAZn4hG4C_sFvzyb+ENkgEO9W3S4gQ8cyM+bNP55vYv5Z_gQw@mail.gmail.com>
 <CALAZn4jemgPhnyqWrZHL4+bFcCB6517nn1px4n=rs3eRr3dfKg@mail.gmail.com>
Message-ID: <3138686.2Fkk6FhRty@even-n550jk>

On Monday 06 June 2016 14:53:46 Pol Monsó Purtí wrote:
> Let's jump to particulars, at the end, the code.
> 
> If I set the DATAPOINTER to NULL the program crashes at CreateCopy with
> access violation. Same if I set it to the datapointer to &abyRaster[0] and
> add the remaining two bands.

Use the Create() method of GDALDriver with 0 bands and no options. I'm not 
sure how Open() and AddBand() play together.

> 
> The abyRasters are initialized to white color with memset. SO this piece of
> code should give me a white jpg square of widthxheight. I could set a
> complete MWE if necessary.
> 
> And, the code:
> 
>         char* filename = (char*) malloc(1024);
> 
>         sprintf(filename, "MEM:::DATAPOINTER=%p,PIXELS=%d,LINES=%d,BANDS=0",
> 
>                 NULL, width, height);
> 
>         poDstDS = (GDALDataset *) GDALOpen(filename,GA_Update);
> 
> 
>         free(filename);
> 
> 
>         for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> 
>         {
> 
>             //assert(sizeof(long) == sizeof(void*));
> 
>             const void * address = static_cast<const void*>(&abyRasters[b]);
> 
>             std::stringstream ss;
> 
>             ss << address;
> 
>             const char * datapointer = ss.str().c_str();
> 
>             std::cout << "datapointer: " << datapointer << std::endl;
> 
>             papszOptions = CSLSetNameValue( papszOptions,
> "DATAPOINTER", datapointer );
> 
>             poDstDS->AddBand(GDT_Byte, papszOptions);
> 
> 
>         }
> 
>         char **papszOptions2 = NULL;
> 
>         papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY", "40" );
> 
> 
>         std::cout << "Copying to " << filepath << std::endl;
> 
>         GDALDriver* jpegDriver =
> GetGDALDriverManager()->GetDriverByName("JPEG");
> 
>         GDALDataset* jpeg_ds =
> jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
> papszOptions2, GDALDummyProgress, NULL);
> 
>         if(jpeg_ds == NULL)
> 
>         {
> 
>             std::cout << "Failure when creating output orthoimage " <<
> filepath << std::endl;
> 
>             return -5;
> 
>         }
> 
> The abyRasters are allocated with
> 
>         for(int b = 0; b < RGBRasterBands::NUMBANDS; b++)
>         {
>             abyRasters.push_back(new
> GByte[rasterMemoryDimensions.width*rasterMemoryDimensions.height]());
>            
> memset(&abyRasters[b][0],QuickDrop::NODATAVALUE,sizeof(GByte)*rasterMemoryD
> imensions.width*rasterMemoryDimensions.height); }
> 
> 
> On Mon, Jun 6, 2016 at 12:35 PM, Pol Monsó Purtí <lluna.nova at gmail.com>
> 
> wrote:
> > Just one more question,
> > 
> > If i set the option BAND=0, what should the DATAPOINTER be? Does it become
> > optional?
> > 
> > Cheers
> > 
> > On Mon, Jun 6, 2016 at 10:55 AM, Even Rouault <even.rouault at spatialys.com>
> > 
> > wrote:
> >> On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
> >> > THanks Mateusz,
> >> > 
> >> > You're right. I'm trying it as we speak.
> >> > 
> >> > In my case I have a std::vector<GByte*> of the 3 bands, where the
> >> > GByte*
> >> > are allocated in the heap with new GByte[width*height]. I guess that
> >> 
> >> won't
> >> 
> >> > work because the three bands have to be one single memory chunk, am I
> >> > right? I guess the only solution is to switch to single band float and
> >> > merge rgb to float. I'd prefer not having to refactor the rest of the
> >> 
> >> code.
> >> 
> >> > Is it possible to have a different address for each band?
> >> 
> >> Yes, create a dataset with 0 band and then add each band with the
> >> GDALDataset::AddBand() method
> >> 
> >> See http://gdal.org/frmt_mem.html :
> >> """The MEM format is one of the few that supports the AddBand() method.
> >> The
> >> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET options
> >> to
> >> reference an existing memory array."""
> >> 
> >> > All this is to support jpg as output. All the operations are done in my
> >> > GByte array and it's only at the end that I create the dataset and
> >> 
> >> image.
> >> 
> >> > At the moment I create a Tiff and finally createcopy to jpg.
> >> > 
> >> > On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net>
> >> 
> >> wrote:
> >> > > On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com>
> >> 
> >> wrote:
> >> > > > I've seen this mysterious article http://www.gdal.org/frmt_mem.html
> >> > > 
> >> > > which
> >> > > 
> >> > > > references the `DATAPOINTER` option. I've seen another reference
> >> > > > [here](
> >> > > 
> >> > > https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> >> > > 
> >> > > > which does
> >> 
> >> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYP
> >> E
> >> 
> >> 
> >> =%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype)
> >> ;>
> >> 
> >> > > >     dataset = GDALOpen(filename,GA_Update);
> >> > > > 
> >> > > > How would this translate to c++?
> >> > > 
> >> > > The line above is valid C++, isn't it.
> >> > > If you followed to Frank's answer [1], you'd see it slightly
> >> > > corrected
> >> > > but the technique remains the same.
> >> > > 
> >> > > [1]
> >> 
> >> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
> >> 
> >> > > Best regards,
> >> > > --
> >> > > Mateusz Loskot, http://mateusz.loskot.net
> >> 
> >> --
> >> Spatialys - Geospatial professional services
> >> http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lluna.nova at gmail.com  Mon Jun  6 07:00:55 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 16:00:55 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <3138686.2Fkk6FhRty@even-n550jk>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <CALAZn4hG4C_sFvzyb+ENkgEO9W3S4gQ8cyM+bNP55vYv5Z_gQw@mail.gmail.com>
 <CALAZn4jemgPhnyqWrZHL4+bFcCB6517nn1px4n=rs3eRr3dfKg@mail.gmail.com>
 <3138686.2Fkk6FhRty@even-n550jk>
Message-ID: <CALAZn4jo8Br0uv-k+k4M4K4rYkcERPyVjMsPJ4sRhP1z_XfdDA@mail.gmail.com>

Same result.

The code:


    GDALDriver *poDriver  = GetGDALDriverManager()->GetDriverByName(pszFormat);


    if(!poDriver)

    {

        std::cerr << "Driver " << pszFormat << " couldn't be loaded."
<< std::endl;

        return -4;

    }


    poDstDS = poDriver->Create(
auxfilepath.string().c_str(),(int)width, (int)height,

                                numbands, GDT_Byte, papszOptions);


    if(poDstDS == NULL)

    {


std::cerr << "Failure when creating output orthoimage " << auxfilepath <<
std::endl;

            return -5;

        }


if(filepath.extension() == ".jpg")

    {

        char **papszOptions2 = NULL;

        for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)

        {

            char* opts = (char*) malloc(1024);

            sprintf(opts, "%p",&abyRasters[b]);

            papszOptions2 = CSLSetNameValue( papszOptions2,
"DATAPOINTER", opts );

            poDstDS->AddBand(GDT_Byte, papszOptions2);

            free(opts);

        }

    }


    //jpeg write test:

    char **papszOptions2 = NULL;

    papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY", "40" );

    std::cout << "Copying to " << filepath << std::endl;

    GDALDriver* jpegDriver = GetGDALDriverManager()->GetDriverByName("JPEG");

    GDALDataset* jpeg_ds =
jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
papszOptions2, GDALDummyProgress, NULL);

    if(jpeg_ds == NULL)

    {

        std::cout << "Failure when creating output orthoimage " <<
filepath << std::endl;

        return -5;

    }



On Mon, Jun 6, 2016 at 2:58 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> On Monday 06 June 2016 14:53:46 Pol Monsó Purtí wrote:
> > Let's jump to particulars, at the end, the code.
> >
> > If I set the DATAPOINTER to NULL the program crashes at CreateCopy with
> > access violation. Same if I set it to the datapointer to &abyRaster[0]
> and
> > add the remaining two bands.
>
> Use the Create() method of GDALDriver with 0 bands and no options. I'm not
> sure how Open() and AddBand() play together.
>
> >
> > The abyRasters are initialized to white color with memset. SO this piece
> of
> > code should give me a white jpg square of widthxheight. I could set a
> > complete MWE if necessary.
> >
> > And, the code:
> >
> >         char* filename = (char*) malloc(1024);
> >
> >         sprintf(filename,
> "MEM:::DATAPOINTER=%p,PIXELS=%d,LINES=%d,BANDS=0",
> >
> >                 NULL, width, height);
> >
> >         poDstDS = (GDALDataset *) GDALOpen(filename,GA_Update);
> >
> >
> >         free(filename);
> >
> >
> >         for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> >
> >         {
> >
> >             //assert(sizeof(long) == sizeof(void*));
> >
> >             const void * address = static_cast<const
> void*>(&abyRasters[b]);
> >
> >             std::stringstream ss;
> >
> >             ss << address;
> >
> >             const char * datapointer = ss.str().c_str();
> >
> >             std::cout << "datapointer: " << datapointer << std::endl;
> >
> >             papszOptions = CSLSetNameValue( papszOptions,
> > "DATAPOINTER", datapointer );
> >
> >             poDstDS->AddBand(GDT_Byte, papszOptions);
> >
> >
> >         }
> >
> >         char **papszOptions2 = NULL;
> >
> >         papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY", "40"
> );
> >
> >
> >         std::cout << "Copying to " << filepath << std::endl;
> >
> >         GDALDriver* jpegDriver =
> > GetGDALDriverManager()->GetDriverByName("JPEG");
> >
> >         GDALDataset* jpeg_ds =
> > jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
> > papszOptions2, GDALDummyProgress, NULL);
> >
> >         if(jpeg_ds == NULL)
> >
> >         {
> >
> >             std::cout << "Failure when creating output orthoimage " <<
> > filepath << std::endl;
> >
> >             return -5;
> >
> >         }
> >
> > The abyRasters are allocated with
> >
> >         for(int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> >         {
> >             abyRasters.push_back(new
> > GByte[rasterMemoryDimensions.width*rasterMemoryDimensions.height]());
> >
> >
> memset(&abyRasters[b][0],QuickDrop::NODATAVALUE,sizeof(GByte)*rasterMemoryD
> > imensions.width*rasterMemoryDimensions.height); }
> >
> >
> > On Mon, Jun 6, 2016 at 12:35 PM, Pol Monsó Purtí <lluna.nova at gmail.com>
> >
> > wrote:
> > > Just one more question,
> > >
> > > If i set the option BAND=0, what should the DATAPOINTER be? Does it
> become
> > > optional?
> > >
> > > Cheers
> > >
> > > On Mon, Jun 6, 2016 at 10:55 AM, Even Rouault <
> even.rouault at spatialys.com>
> > >
> > > wrote:
> > >> On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
> > >> > THanks Mateusz,
> > >> >
> > >> > You're right. I'm trying it as we speak.
> > >> >
> > >> > In my case I have a std::vector<GByte*> of the 3 bands, where the
> > >> > GByte*
> > >> > are allocated in the heap with new GByte[width*height]. I guess that
> > >>
> > >> won't
> > >>
> > >> > work because the three bands have to be one single memory chunk, am
> I
> > >> > right? I guess the only solution is to switch to single band float
> and
> > >> > merge rgb to float. I'd prefer not having to refactor the rest of
> the
> > >>
> > >> code.
> > >>
> > >> > Is it possible to have a different address for each band?
> > >>
> > >> Yes, create a dataset with 0 band and then add each band with the
> > >> GDALDataset::AddBand() method
> > >>
> > >> See http://gdal.org/frmt_mem.html :
> > >> """The MEM format is one of the few that supports the AddBand()
> method.
> > >> The
> > >> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET
> options
> > >> to
> > >> reference an existing memory array."""
> > >>
> > >> > All this is to support jpg as output. All the operations are done
> in my
> > >> > GByte array and it's only at the end that I create the dataset and
> > >>
> > >> image.
> > >>
> > >> > At the moment I create a Tiff and finally createcopy to jpg.
> > >> >
> > >> > On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net>
> > >>
> > >> wrote:
> > >> > > On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com>
> > >>
> > >> wrote:
> > >> > > > I've seen this mysterious article
> http://www.gdal.org/frmt_mem.html
> > >> > >
> > >> > > which
> > >> > >
> > >> > > > references the `DATAPOINTER` option. I've seen another reference
> > >> > > > [here](
> > >> > >
> > >> > >
> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> > >> > >
> > >> > > > which does
> > >>
> > >>
> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYP
> > >> E
> > >>
> > >>
> > >>
> =%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype)
> > >> ;>
> > >>
> > >> > > >     dataset = GDALOpen(filename,GA_Update);
> > >> > > >
> > >> > > > How would this translate to c++?
> > >> > >
> > >> > > The line above is valid C++, isn't it.
> > >> > > If you followed to Frank's answer [1], you'd see it slightly
> > >> > > corrected
> > >> > > but the technique remains the same.
> > >> > >
> > >> > > [1]
> > >>
> > >> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
> > >>
> > >> > > Best regards,
> > >> > > --
> > >> > > Mateusz Loskot, http://mateusz.loskot.net
> > >>
> > >> --
> > >> Spatialys - Geospatial professional services
> > >> http://www.spatialys.com
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/c062de1d/attachment-0001.html>

From lucadeluge at gmail.com  Mon Jun  6 07:06:01 2016
From: lucadeluge at gmail.com (Luca Delucchi)
Date: Mon, 6 Jun 2016 16:06:01 +0200
Subject: [gdal-dev] geospatialPDF DPI and EXTRA_IMAGES
In-Reply-To: <2344761.atvNhdjgl4@even-n550jk>
References: <CAK4m-3ynQUeSse+TwXYknToQjbT4BS5cPQJMMszh=4Yb_UVncA@mail.gmail.com>
 <201605251712.51859.even.rouault@spatialys.com>
 <CAK4m-3z2a_DVzb9SKAUgLKiBPryS_wn_xt5tBYNOJOA70=X+uw@mail.gmail.com>
 <2344761.atvNhdjgl4@even-n550jk>
Message-ID: <CAK4m-3y_V+HB1WYbg7KtFAxmzsM84bJeHCj1trM1tMKhkqFetg@mail.gmail.com>

On 26 May 2016 at 17:23, Even Rouault <even.rouault at spatialys.com> wrote:

>
> Ah ok, so you create a vector dataset then ?
>

it could be both

> Here's the relevant code in pdfwritabledataset.cpp:
>
>     double dfRatio = (sGlobalExtent.MaxY - sGlobalExtent.MinY) /
> (sGlobalExtent.MaxX - sGlobalExtent.MinX);
>
>     int nWidth, nHeight;
>
>     if (dfRatio < 1)
>     {
>         nWidth = 1024;
>         nHeight = static_cast<int>(nWidth * dfRatio);
>     }
>     else
>     {
>         nHeight = 1024;
>         nWidth = static_cast<int>(nHeight / dfRatio);
>     }
>
> where sGlobalExtent is the georeferenced extent of the vectors added in the
> PDF vector layer.
>

thanks a lot, I was able to fix both raster and vector

> Even
>


-- 
ciao
Luca

www.lucadelu.org

From even.rouault at spatialys.com  Mon Jun  6 07:10:50 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jun 2016 16:10:50 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4jo8Br0uv-k+k4M4K4rYkcERPyVjMsPJ4sRhP1z_XfdDA@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <3138686.2Fkk6FhRty@even-n550jk>
 <CALAZn4jo8Br0uv-k+k4M4K4rYkcERPyVjMsPJ4sRhP1z_XfdDA@mail.gmail.com>
Message-ID: <3158636.Lm5j2NWOCo@even-n550jk>

See comments inline below

> 
> The code:
> 
> 
>     GDALDriver *poDriver  =
> GetGDALDriverManager()->GetDriverByName(pszFormat);
> 
> 
>     if(!poDriver)
> 
>     {
> 
>         std::cerr << "Driver " << pszFormat << " couldn't be loaded."
> << std::endl;
> 
>         return -4;
> 
>     }
> 
> 
>     poDstDS = poDriver->Create(
> auxfilepath.string().c_str(),(int)width, (int)height,
> 
>                                 numbands, GDT_Byte, papszOptions);


--> numbands should be replaced by 0, since you add the bands afterwards

> 
> 
>     if(poDstDS == NULL)
> 
>     {
> 
> 
> std::cerr << "Failure when creating output orthoimage " << auxfilepath <<
> std::endl;
> 
>             return -5;
> 
>         }
> 
> 
> if(filepath.extension() == ".jpg")
> 
>     {
> 
>         char **papszOptions2 = NULL;
> 
>         for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> 
>         {
> 
>             char* opts = (char*) malloc(1024);
> 
>             sprintf(opts, "%p",&abyRasters[b]);

For portability, rather use CPLPrintPointer( char *pszBuffer, void *pValue, int 
nMaxLen ). See https://svn.osgeo.org/gdal/trunk/gdal/frmts/vrt/vrtdriver.cpp 
for an example how to use it

> 
>             papszOptions2 = CSLSetNameValue( papszOptions2,
> "DATAPOINTER", opts );
> 
>             poDstDS->AddBand(GDT_Byte, papszOptions2);


Missing CSLDestroy(papszOptions2)

> 
>             free(opts);
> 
>         }
> 
>     }
> 
> 
>     //jpeg write test:
> 
>     char **papszOptions2 = NULL;
> 
>     papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY", "40" );
> 
>     std::cout << "Copying to " << filepath << std::endl;
> 
>     GDALDriver* jpegDriver =
> GetGDALDriverManager()->GetDriverByName("JPEG");
> 
>     GDALDataset* jpeg_ds =
> jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
> papszOptions2, GDALDummyProgress, NULL);

Missing CSLDestroy(papszOptions2)

> 
>     if(jpeg_ds == NULL)
> 
>     {
> 
>         std::cout << "Failure when creating output orthoimage " <<
> filepath << std::endl;
> 
>         return -5;
> 
>     }
> 
> 
> 
> On Mon, Jun 6, 2016 at 2:58 PM, Even Rouault <even.rouault at spatialys.com>
> 
> wrote:
> > On Monday 06 June 2016 14:53:46 Pol Monsó Purtí wrote:
> > > Let's jump to particulars, at the end, the code.
> > > 
> > > If I set the DATAPOINTER to NULL the program crashes at CreateCopy with
> > > access violation. Same if I set it to the datapointer to &abyRaster[0]
> > 
> > and
> > 
> > > add the remaining two bands.
> > 
> > Use the Create() method of GDALDriver with 0 bands and no options. I'm not
> > sure how Open() and AddBand() play together.
> > 
> > > The abyRasters are initialized to white color with memset. SO this piece
> > 
> > of
> > 
> > > code should give me a white jpg square of widthxheight. I could set a
> > > complete MWE if necessary.
> > > 
> > > And, the code:
> > >         char* filename = (char*) malloc(1024);
> > >         
> > >         sprintf(filename,
> > 
> > "MEM:::DATAPOINTER=%p,PIXELS=%d,LINES=%d,BANDS=0",
> > 
> > >                 NULL, width, height);
> > >         
> > >         poDstDS = (GDALDataset *) GDALOpen(filename,GA_Update);
> > >         
> > >         
> > >         free(filename);
> > >         
> > >         
> > >         for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> > >         
> > >         {
> > >         
> > >             //assert(sizeof(long) == sizeof(void*));
> > >             
> > >             const void * address = static_cast<const
> > 
> > void*>(&abyRasters[b]);
> > 
> > >             std::stringstream ss;
> > >             
> > >             ss << address;
> > >             
> > >             const char * datapointer = ss.str().c_str();
> > >             
> > >             std::cout << "datapointer: " << datapointer << std::endl;
> > >             
> > >             papszOptions = CSLSetNameValue( papszOptions,
> > > 
> > > "DATAPOINTER", datapointer );
> > > 
> > >             poDstDS->AddBand(GDT_Byte, papszOptions);
> > >         
> > >         }
> > >         
> > >         char **papszOptions2 = NULL;
> > >         
> > >         papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY", "40"
> > 
> > );
> > 
> > >         std::cout << "Copying to " << filepath << std::endl;
> > >         
> > >         GDALDriver* jpegDriver =
> > > 
> > > GetGDALDriverManager()->GetDriverByName("JPEG");
> > > 
> > >         GDALDataset* jpeg_ds =
> > > 
> > > jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
> > > papszOptions2, GDALDummyProgress, NULL);
> > > 
> > >         if(jpeg_ds == NULL)
> > >         
> > >         {
> > >         
> > >             std::cout << "Failure when creating output orthoimage " <<
> > > 
> > > filepath << std::endl;
> > > 
> > >             return -5;
> > >         
> > >         }
> > > 
> > > The abyRasters are allocated with
> > > 
> > >         for(int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> > >         {
> > >         
> > >             abyRasters.push_back(new
> > > 
> > > GByte[rasterMemoryDimensions.width*rasterMemoryDimensions.height]());
> > 
> > memset(&abyRasters[b][0],QuickDrop::NODATAVALUE,sizeof(GByte)*rasterMemory
> > D
> > 
> > > imensions.width*rasterMemoryDimensions.height); }
> > > 
> > > 
> > > On Mon, Jun 6, 2016 at 12:35 PM, Pol Monsó Purtí <lluna.nova at gmail.com>
> > > 
> > > wrote:
> > > > Just one more question,
> > > > 
> > > > If i set the option BAND=0, what should the DATAPOINTER be? Does it
> > 
> > become
> > 
> > > > optional?
> > > > 
> > > > Cheers
> > > > 
> > > > On Mon, Jun 6, 2016 at 10:55 AM, Even Rouault <
> > 
> > even.rouault at spatialys.com>
> > 
> > > > wrote:
> > > >> On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
> > > >> > THanks Mateusz,
> > > >> > 
> > > >> > You're right. I'm trying it as we speak.
> > > >> > 
> > > >> > In my case I have a std::vector<GByte*> of the 3 bands, where the
> > > >> > GByte*
> > > >> > are allocated in the heap with new GByte[width*height]. I guess
> > > >> > that
> > > >> 
> > > >> won't
> > > >> 
> > > >> > work because the three bands have to be one single memory chunk, am
> > 
> > I
> > 
> > > >> > right? I guess the only solution is to switch to single band float
> > 
> > and
> > 
> > > >> > merge rgb to float. I'd prefer not having to refactor the rest of
> > 
> > the
> > 
> > > >> code.
> > > >> 
> > > >> > Is it possible to have a different address for each band?
> > > >> 
> > > >> Yes, create a dataset with 0 band and then add each band with the
> > > >> GDALDataset::AddBand() method
> > > >> 
> > > >> See http://gdal.org/frmt_mem.html :
> > > >> """The MEM format is one of the few that supports the AddBand()
> > 
> > method.
> > 
> > > >> The
> > > >> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET
> > 
> > options
> > 
> > > >> to
> > > >> reference an existing memory array."""
> > > >> 
> > > >> > All this is to support jpg as output. All the operations are done
> > 
> > in my
> > 
> > > >> > GByte array and it's only at the end that I create the dataset and
> > > >> 
> > > >> image.
> > > >> 
> > > >> > At the moment I create a Tiff and finally createcopy to jpg.
> > > >> > 
> > > >> > On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <mateusz at loskot.net>
> > > >> 
> > > >> wrote:
> > > >> > > On 3 June 2016 at 20:45, Pol Monsó Purtí <lluna.nova at gmail.com>
> > > >> 
> > > >> wrote:
> > > >> > > > I've seen this mysterious article
> > 
> > http://www.gdal.org/frmt_mem.html
> > 
> > > >> > > which
> > > >> > > 
> > > >> > > > references the `DATAPOINTER` option. I've seen another
> > > >> > > > reference
> > > >> > > > [here](
> > 
> > https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> > 
> > > >> > > > which does
> > 
> > sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYP
> > 
> > > >> E
> > 
> > =%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype)
> > 
> > > >> ;>
> > > >> 
> > > >> > > >     dataset = GDALOpen(filename,GA_Update);
> > > >> > > > 
> > > >> > > > How would this translate to c++?
> > > >> > > 
> > > >> > > The line above is valid C++, isn't it.
> > > >> > > If you followed to Frank's answer [1], you'd see it slightly
> > > >> > > corrected
> > > >> > > but the technique remains the same.
> > > >> > > 
> > > >> > > [1]
> > > >> 
> > > >> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
> > > >> 
> > > >> > > Best regards,
> > > >> > > --
> > > >> > > Mateusz Loskot, http://mateusz.loskot.net
> > > >> 
> > > >> --
> > > >> Spatialys - Geospatial professional services
> > > >> http://www.spatialys.com
> > 
> > --
> > Spatialys - Geospatial professional services
> > http://www.spatialys.com

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From lluna.nova at gmail.com  Mon Jun  6 07:16:42 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 16:16:42 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <3158636.Lm5j2NWOCo@even-n550jk>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <3138686.2Fkk6FhRty@even-n550jk>
 <CALAZn4jo8Br0uv-k+k4M4K4rYkcERPyVjMsPJ4sRhP1z_XfdDA@mail.gmail.com>
 <3158636.Lm5j2NWOCo@even-n550jk>
Message-ID: <CALAZn4jehZD4jqMKVb7cAHP2WHN7QoRrzhuanHAy2QObfdW_pw@mail.gmail.com>

Thanks Even, the previous message was prematurely sent by error and the
corrected version held because it was to big (? probably a mishap with the
mail headers)

Yeah the numbands are 0. I stripped out irrellevant parts of code and I
missed to add that. To be sure I checked with the debugger, the dataset
object holds 0 then 3 after the addition.

My comment on the previous message was:

Premature sent with bad formatting.

Same result. Maybe something wrong with the rasters? I'll try initialising
them right there on the same function to be sure.

The access violation says Read access violation at 0x0. Does it mean I have
a null pointer somewhere? Should I pass more options to the addBand?

I've inspected the dataset, as well as its band member. Where should I find
the data pointer? The dimensions are correct.

What else could I check? maybe a data write to the mem driver?


I've indeed skipped all the memory leaks,  I'll add them and get back to
you if I get a different message.



On Mon, Jun 6, 2016 at 4:10 PM, Even Rouault <even.rouault at spatialys.com>
wrote:

> See comments inline below
>
> >
> > The code:
> >
> >
> >     GDALDriver *poDriver  =
> > GetGDALDriverManager()->GetDriverByName(pszFormat);
> >
> >
> >     if(!poDriver)
> >
> >     {
> >
> >         std::cerr << "Driver " << pszFormat << " couldn't be loaded."
> > << std::endl;
> >
> >         return -4;
> >
> >     }
> >
> >
> >     poDstDS = poDriver->Create(
> > auxfilepath.string().c_str(),(int)width, (int)height,
> >
> >                                 numbands, GDT_Byte, papszOptions);
>
>
> --> numbands should be replaced by 0, since you add the bands afterwards
>
> >
> >
> >     if(poDstDS == NULL)
> >
> >     {
> >
> >
> > std::cerr << "Failure when creating output orthoimage " << auxfilepath <<
> > std::endl;
> >
> >             return -5;
> >
> >         }
> >
> >
> > if(filepath.extension() == ".jpg")
> >
> >     {
> >
> >         char **papszOptions2 = NULL;
> >
> >         for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> >
> >         {
> >
> >             char* opts = (char*) malloc(1024);
> >
> >             sprintf(opts, "%p",&abyRasters[b]);
>
> For portability, rather use CPLPrintPointer( char *pszBuffer, void
> *pValue, int
> nMaxLen ). See
> https://svn.osgeo.org/gdal/trunk/gdal/frmts/vrt/vrtdriver.cpp
> for an example how to use it
>
> >
> >             papszOptions2 = CSLSetNameValue( papszOptions2,
> > "DATAPOINTER", opts );
> >
> >             poDstDS->AddBand(GDT_Byte, papszOptions2);
>
>
> Missing CSLDestroy(papszOptions2)
>
> >
> >             free(opts);
> >
> >         }
> >
> >     }
> >
> >
> >     //jpeg write test:
> >
> >     char **papszOptions2 = NULL;
> >
> >     papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY", "40" );
> >
> >     std::cout << "Copying to " << filepath << std::endl;
> >
> >     GDALDriver* jpegDriver =
> > GetGDALDriverManager()->GetDriverByName("JPEG");
> >
> >     GDALDataset* jpeg_ds =
> > jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
> > papszOptions2, GDALDummyProgress, NULL);
>
> Missing CSLDestroy(papszOptions2)
>
> >
> >     if(jpeg_ds == NULL)
> >
> >     {
> >
> >         std::cout << "Failure when creating output orthoimage " <<
> > filepath << std::endl;
> >
> >         return -5;
> >
> >     }
> >
> >
> >
> > On Mon, Jun 6, 2016 at 2:58 PM, Even Rouault <even.rouault at spatialys.com
> >
> >
> > wrote:
> > > On Monday 06 June 2016 14:53:46 Pol Monsó Purtí wrote:
> > > > Let's jump to particulars, at the end, the code.
> > > >
> > > > If I set the DATAPOINTER to NULL the program crashes at CreateCopy
> with
> > > > access violation. Same if I set it to the datapointer to
> &abyRaster[0]
> > >
> > > and
> > >
> > > > add the remaining two bands.
> > >
> > > Use the Create() method of GDALDriver with 0 bands and no options. I'm
> not
> > > sure how Open() and AddBand() play together.
> > >
> > > > The abyRasters are initialized to white color with memset. SO this
> piece
> > >
> > > of
> > >
> > > > code should give me a white jpg square of widthxheight. I could set a
> > > > complete MWE if necessary.
> > > >
> > > > And, the code:
> > > >         char* filename = (char*) malloc(1024);
> > > >
> > > >         sprintf(filename,
> > >
> > > "MEM:::DATAPOINTER=%p,PIXELS=%d,LINES=%d,BANDS=0",
> > >
> > > >                 NULL, width, height);
> > > >
> > > >         poDstDS = (GDALDataset *) GDALOpen(filename,GA_Update);
> > > >
> > > >
> > > >         free(filename);
> > > >
> > > >
> > > >         for(unsigned int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> > > >
> > > >         {
> > > >
> > > >             //assert(sizeof(long) == sizeof(void*));
> > > >
> > > >             const void * address = static_cast<const
> > >
> > > void*>(&abyRasters[b]);
> > >
> > > >             std::stringstream ss;
> > > >
> > > >             ss << address;
> > > >
> > > >             const char * datapointer = ss.str().c_str();
> > > >
> > > >             std::cout << "datapointer: " << datapointer << std::endl;
> > > >
> > > >             papszOptions = CSLSetNameValue( papszOptions,
> > > >
> > > > "DATAPOINTER", datapointer );
> > > >
> > > >             poDstDS->AddBand(GDT_Byte, papszOptions);
> > > >
> > > >         }
> > > >
> > > >         char **papszOptions2 = NULL;
> > > >
> > > >         papszOptions2 = CSLSetNameValue( papszOptions2, "QUALITY",
> "40"
> > >
> > > );
> > >
> > > >         std::cout << "Copying to " << filepath << std::endl;
> > > >
> > > >         GDALDriver* jpegDriver =
> > > >
> > > > GetGDALDriverManager()->GetDriverByName("JPEG");
> > > >
> > > >         GDALDataset* jpeg_ds =
> > > >
> > > > jpegDriver->CreateCopy(filepath.string().c_str(), poDstDS, false,
> > > > papszOptions2, GDALDummyProgress, NULL);
> > > >
> > > >         if(jpeg_ds == NULL)
> > > >
> > > >         {
> > > >
> > > >             std::cout << "Failure when creating output orthoimage "
> <<
> > > >
> > > > filepath << std::endl;
> > > >
> > > >             return -5;
> > > >
> > > >         }
> > > >
> > > > The abyRasters are allocated with
> > > >
> > > >         for(int b = 0; b < RGBRasterBands::NUMBANDS; b++)
> > > >         {
> > > >
> > > >             abyRasters.push_back(new
> > > >
> > > > GByte[rasterMemoryDimensions.width*rasterMemoryDimensions.height]());
> > >
> > >
> memset(&abyRasters[b][0],QuickDrop::NODATAVALUE,sizeof(GByte)*rasterMemory
> > > D
> > >
> > > > imensions.width*rasterMemoryDimensions.height); }
> > > >
> > > >
> > > > On Mon, Jun 6, 2016 at 12:35 PM, Pol Monsó Purtí <
> lluna.nova at gmail.com>
> > > >
> > > > wrote:
> > > > > Just one more question,
> > > > >
> > > > > If i set the option BAND=0, what should the DATAPOINTER be? Does it
> > >
> > > become
> > >
> > > > > optional?
> > > > >
> > > > > Cheers
> > > > >
> > > > > On Mon, Jun 6, 2016 at 10:55 AM, Even Rouault <
> > >
> > > even.rouault at spatialys.com>
> > >
> > > > > wrote:
> > > > >> On Monday 06 June 2016 10:45:47 Pol Monsó Purtí wrote:
> > > > >> > THanks Mateusz,
> > > > >> >
> > > > >> > You're right. I'm trying it as we speak.
> > > > >> >
> > > > >> > In my case I have a std::vector<GByte*> of the 3 bands, where
> the
> > > > >> > GByte*
> > > > >> > are allocated in the heap with new GByte[width*height]. I guess
> > > > >> > that
> > > > >>
> > > > >> won't
> > > > >>
> > > > >> > work because the three bands have to be one single memory
> chunk, am
> > >
> > > I
> > >
> > > > >> > right? I guess the only solution is to switch to single band
> float
> > >
> > > and
> > >
> > > > >> > merge rgb to float. I'd prefer not having to refactor the rest
> of
> > >
> > > the
> > >
> > > > >> code.
> > > > >>
> > > > >> > Is it possible to have a different address for each band?
> > > > >>
> > > > >> Yes, create a dataset with 0 band and then add each band with the
> > > > >> GDALDataset::AddBand() method
> > > > >>
> > > > >> See http://gdal.org/frmt_mem.html :
> > > > >> """The MEM format is one of the few that supports the AddBand()
> > >
> > > method.
> > >
> > > > >> The
> > > > >> AddBand() method supports DATAPOINTER, PIXELOFFSET and LINEOFFSET
> > >
> > > options
> > >
> > > > >> to
> > > > >> reference an existing memory array."""
> > > > >>
> > > > >> > All this is to support jpg as output. All the operations are
> done
> > >
> > > in my
> > >
> > > > >> > GByte array and it's only at the end that I create the dataset
> and
> > > > >>
> > > > >> image.
> > > > >>
> > > > >> > At the moment I create a Tiff and finally createcopy to jpg.
> > > > >> >
> > > > >> > On Fri, Jun 3, 2016 at 9:10 PM, Mateusz Loskot <
> mateusz at loskot.net>
> > > > >>
> > > > >> wrote:
> > > > >> > > On 3 June 2016 at 20:45, Pol Monsó Purtí <
> lluna.nova at gmail.com>
> > > > >>
> > > > >> wrote:
> > > > >> > > > I've seen this mysterious article
> > >
> > > http://www.gdal.org/frmt_mem.html
> > >
> > > > >> > > which
> > > > >> > >
> > > > >> > > > references the `DATAPOINTER` option. I've seen another
> > > > >> > > > reference
> > > > >> > > > [here](
> > >
> > > https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010583.html)
> > >
> > > > >> > > > which does
> > >
> > >
> sprintf(filename,"MEM:::DATAPOINTER=%d,PIXELS=%d,LINES=%d,BANDS=1,DATATYP
> > >
> > > > >> E
> > >
> > >
> =%d,PIXELOFFSET=0,LINEOFFSET=0,BANDOFFSET=0",datpt,pixels,lines,datatype)
> > >
> > > > >> ;>
> > > > >>
> > > > >> > > >     dataset = GDALOpen(filename,GA_Update);
> > > > >> > > >
> > > > >> > > > How would this translate to c++?
> > > > >> > >
> > > > >> > > The line above is valid C++, isn't it.
> > > > >> > > If you followed to Frank's answer [1], you'd see it slightly
> > > > >> > > corrected
> > > > >> > > but the technique remains the same.
> > > > >> > >
> > > > >> > > [1]
> > > > >>
> > > > >>
> https://lists.osgeo.org/pipermail/gdal-dev/2006-November/010603.html
> > > > >>
> > > > >> > > Best regards,
> > > > >> > > --
> > > > >> > > Mateusz Loskot, http://mateusz.loskot.net
> > > > >>
> > > > >> --
> > > > >> Spatialys - Geospatial professional services
> > > > >> http://www.spatialys.com
> > >
> > > --
> > > Spatialys - Geospatial professional services
> > > http://www.spatialys.com
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/06f35502/attachment-0001.html>

From lluna.nova at gmail.com  Mon Jun  6 07:52:09 2016
From: lluna.nova at gmail.com (=?UTF-8?B?UG9sIE1vbnPDsyBQdXJ0w60=?=)
Date: Mon, 6 Jun 2016 16:52:09 +0200
Subject: [gdal-dev] Fwd: How to reuse memory pointer of GDAL Memory
	driver
In-Reply-To: <CALAZn4jehZD4jqMKVb7cAHP2WHN7QoRrzhuanHAy2QObfdW_pw@mail.gmail.com>
References: <CALAZn4ivHdUyssz6K1m0EhMPkedpDseKQWtEF5crrofsSBWH3A@mail.gmail.com>
 <3138686.2Fkk6FhRty@even-n550jk>
 <CALAZn4jo8Br0uv-k+k4M4K4rYkcERPyVjMsPJ4sRhP1z_XfdDA@mail.gmail.com>
 <3158636.Lm5j2NWOCo@even-n550jk>
 <CALAZn4jehZD4jqMKVb7cAHP2WHN7QoRrzhuanHAy2QObfdW_pw@mail.gmail.com>
Message-ID: <CALAZn4hA+DXbQeH+hf1oDCM8h2QjTgNGgF=Nos6F6Gt8wjh0pw@mail.gmail.com>

Hello Even,

The CPLPrintPointer did the trick!

Everything is working, excellent!

You resolved the issue. And moreover I'm more comfortable with the Create
function rather than the CPLOpen.

I am very grateful for your help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/4e6de3e6/attachment.html>

From schwehr at gmail.com  Mon Jun  6 10:25:05 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 6 Jun 2016 10:25:05 -0700
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
In-Reply-To: <f6c63474-96af-4673-4a99-8f6656c911c0@swoodbridge.com>
References: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
 <201606041529.27008.even.rouault@spatialys.com>
 <CACmBxyuH488+uArwpr0z6-_-6q_Kz_ga2AkLpCrwKCyMjLROoQ@mail.gmail.com>
 <f6c63474-96af-4673-4a99-8f6656c911c0@swoodbridge.com>
Message-ID: <CACmBxysNiyyiqYSk4KfMsuUm=px_Gv48sPiT71UjvJY4t8Lsag@mail.gmail.com>

+gdal-dev

Some hackish test code I had laying around from last year...

https://gist.github.com/schwehr/01f6604afc7757ea0a676f0eb28be582

You might also be able to just write 80 layers of u-v, pick out pairs for
each depth layer and have the rendering system do the conversion(s).  You
could use whatever you want once you have a geotiff.  In this screenshot, I
made an 80-layer geotiff of u and v alternating layers and uploaded that to
Earth Engine.  It's been a long time since I heavily used mapserver, but
you could probably do the same there.

https://www.flickr.com/photos/schwehr/26895009754/

On Mon, Jun 6, 2016 at 7:51 AM, Stephen Woodbridge <woodbri at swoodbridge.com>
wrote:

> On 6/5/2016 2:04 PM, Kurt Schwehr wrote:
>
>> Stephen,
>>
>> Take a look at these two discussions for starters on working with hycom:
>>
>>
>> http://gis.stackexchange.com/questions/167155/how-can-i-make-geotiffs-of-individual-depth-layers-in-the-hycom-ocean-circulatio
>>
>
> Hi Kurt,
>
> In the link above you mention:
>
> I've got some code written the does things like calculate the speed
>> inm/s from the UV and creates a geotiff, etc
>>
>
> Can you share this code, it sounds like exactly what I need for the
> current vectors? And I'm interested in figuring out how to read/write and
> work with the netcdf files.
>
> I think for now I'll work with the "u" datasets as they seem that they
> will be much easier place to start.
>
> Thanks,
>   -Steve
>
>
>
>> http://gis.stackexchange.com/questions/170882/how-can-a-make-a-netcdf-with-subgroups-smaller
>>
>> You should start with the regular grids.  e.g.
>>
>>
>> ftp://ftp.hycom.org/datasets/GLBu0.08/expt_91.1/data/hindcasts/2015/hycom_glb_911_2015093000_t000_uv3z.nc
>>
>> Make an 80 layer geotiff from the u/v and then use mapserver as Even
>> suggested.
>>
>> -kurt
>>
>>
>> On Sat, Jun 4, 2016 at 6:29 AM, Even Rouault <even.rouault at spatialys.com
>> <mailto:even.rouault at spatialys.com>> wrote:
>>
>>     Hi,
>>     >
>>     > I want to convert some HYCOM data into GTiff format and I'm a little
>>     > lost on how to get started, whether I can do what I need just using
>> a
>>     > vrt or if I'm going to have to write code to process the data.
>>     >
>>     > To start with I have placed gdalinfo on one file here:
>>     > http://imaptools.com:8080/dl/hycom-gdalinfo.txt
>>     >
>>     > The data comes from http://hycom.org/dataserver/glb-analysis
>>     > and I will need to be using GLBa0.08 dataset.
>>     >
>>     > I have two use cases:
>>     >
>>     > 1) The simple one is to extract say Band 1 into a georeferenced
>> GTiff
>>     > and apply color to using color ranges without loosing the NODATA. I
>>     > think I can do later using .vrt, correct?
>>
>>     gdaldem color-relief can output to a VRT, but given that this netCDF
>>     file is
>>     georeferenced through a geolocation array, you'll likely have first
>>     to run
>>     gdalwarp -geoloc to have something useful at the end.
>>
>>     >
>>     > I'm not sure how to deal with the georeferencing, because the
>> download
>>     > site says: "Native hycom .[ab] data converted to NetCDF on native
>>     > Mercator-curvilinear HYCOM horizontal grid" but that does not seem
>> in
>>     > sync with the Metadata in the file.
>>     >
>>     > 2) The more complicated case is that there are two files:
>>     >     a)  eastward_sea_water_velocity (aka: u, u-velocity)
>>     >     b)  northward_sea_water_velocity (aka: v, v-velocity)
>>     > that I would like to use to create a grid of vectors with arrowheads
>>     > using u and v to define the vector and where the color of the
>> vector is
>>     > related to the magnitude of its length. Ultimately this data will
>> get
>>     > rendered via mapserver so I'm wondering if I can do this via a
>> GTiff or
>>     > if I will have to resort to creating a massive point shapefile with
>>     > attributes of angle and magnitude and use a symbol. It seems like it
>>     > would be best if I can keep the data as a GTiff and then sample the
>>     > points and render the vectors on the fly for when you zoom in/out.
>>
>>     See
>>     http://mapserver.org/input/vector/vector_field.html
>>
>>     You don't need to create a vector file.
>>
>>     You'll have to preprocess your file to get the u and v bands in the
>> same
>>     raster.
>>
>>     Even
>>
>>     --
>>     Spatialys - Geospatial professional services
>>     http://www.spatialys.com
>>     _______________________________________________
>>     gdal-dev mailing list
>>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>     http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>>
>> --
>> --
>> http://schwehr.org
>>
>
>
> ---
> This email has been checked for viruses by Avast antivirus software.
> https://www.avast.com/antivirus
>
>


-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160606/f7197c68/attachment.html>

From woodbri at swoodbridge.com  Mon Jun  6 11:29:05 2016
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Mon, 6 Jun 2016 14:29:05 -0400
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
In-Reply-To: <CACmBxysNiyyiqYSk4KfMsuUm=px_Gv48sPiT71UjvJY4t8Lsag@mail.gmail.com>
References: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
 <201606041529.27008.even.rouault@spatialys.com>
 <CACmBxyuH488+uArwpr0z6-_-6q_Kz_ga2AkLpCrwKCyMjLROoQ@mail.gmail.com>
 <f6c63474-96af-4673-4a99-8f6656c911c0@swoodbridge.com>
 <CACmBxysNiyyiqYSk4KfMsuUm=px_Gv48sPiT71UjvJY4t8Lsag@mail.gmail.com>
Message-ID: <9ebf08e3-abc4-5709-cf07-3b73561298b7@swoodbridge.com>

On 6/6/2016 1:25 PM, Kurt Schwehr wrote:
> +gdal-dev
>
> Some hackish test code I had laying around from last year...
>
> https://gist.github.com/schwehr/01f6604afc7757ea0a676f0eb28be582
>

Thank you! I have it running, so next I'll play with the code.

> You might also be able to just write 80 layers of u-v, pick out pairs
> for each depth layer and have the rendering system do the
> conversion(s).  You could use whatever you want once you have a
> geotiff.  In this screenshot, I made an 80-layer geotiff of u and v
> alternating layers and uploaded that to Earth Engine.  It's been a long
> time since I heavily used mapserver, but you could probably do the same
> there.
>
> https://www.flickr.com/photos/schwehr/26895009754/

Very cool picture!

This really helps to get me started.

Thanks,
   -Steve

> On Mon, Jun 6, 2016 at 7:51 AM, Stephen Woodbridge
> <woodbri at swoodbridge.com <mailto:woodbri at swoodbridge.com>> wrote:
>
>     On 6/5/2016 2:04 PM, Kurt Schwehr wrote:
>
>         Stephen,
>
>         Take a look at these two discussions for starters on working
>         with hycom:
>
>         http://gis.stackexchange.com/questions/167155/how-can-i-make-geotiffs-of-individual-depth-layers-in-the-hycom-ocean-circulatio
>
>
>     Hi Kurt,
>
>     In the link above you mention:
>
>         I've got some code written the does things like calculate the speed
>         inm/s from the UV and creates a geotiff, etc
>
>
>     Can you share this code, it sounds like exactly what I need for the
>     current vectors? And I'm interested in figuring out how to
>     read/write and work with the netcdf files.
>
>     I think for now I'll work with the "u" datasets as they seem that
>     they will be much easier place to start.
>
>     Thanks,
>       -Steve
>
>
>         http://gis.stackexchange.com/questions/170882/how-can-a-make-a-netcdf-with-subgroups-smaller
>
>         You should start with the regular grids.  e.g.
>
>         ftp://ftp.hycom.org/datasets/GLBu0.08/expt_91.1/data/hindcasts/2015/hycom_glb_911_2015093000_t000_uv3z.nc
>
>         Make an 80 layer geotiff from the u/v and then use mapserver as Even
>         suggested.
>
>         -kurt
>
>
>         On Sat, Jun 4, 2016 at 6:29 AM, Even Rouault
>         <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>
>         <mailto:even.rouault at spatialys.com
>         <mailto:even.rouault at spatialys.com>>> wrote:
>
>             Hi,
>             >
>             > I want to convert some HYCOM data into GTiff format and
>         I'm a little
>             > lost on how to get started, whether I can do what I need
>         just using a
>             > vrt or if I'm going to have to write code to process the data.
>             >
>             > To start with I have placed gdalinfo on one file here:
>             > http://imaptools.com:8080/dl/hycom-gdalinfo.txt
>             >
>             > The data comes from http://hycom.org/dataserver/glb-analysis
>             > and I will need to be using GLBa0.08 dataset.
>             >
>             > I have two use cases:
>             >
>             > 1) The simple one is to extract say Band 1 into a
>         georeferenced GTiff
>             > and apply color to using color ranges without loosing the
>         NODATA. I
>             > think I can do later using .vrt, correct?
>
>             gdaldem color-relief can output to a VRT, but given that
>         this netCDF
>             file is
>             georeferenced through a geolocation array, you'll likely
>         have first
>             to run
>             gdalwarp -geoloc to have something useful at the end.
>
>             >
>             > I'm not sure how to deal with the georeferencing, because
>         the download
>             > site says: "Native hycom .[ab] data converted to NetCDF on
>         native
>             > Mercator-curvilinear HYCOM horizontal grid" but that does
>         not seem in
>             > sync with the Metadata in the file.
>             >
>             > 2) The more complicated case is that there are two files:
>             >     a)  eastward_sea_water_velocity (aka: u, u-velocity)
>             >     b)  northward_sea_water_velocity (aka: v, v-velocity)
>             > that I would like to use to create a grid of vectors with
>         arrowheads
>             > using u and v to define the vector and where the color of
>         the vector is
>             > related to the magnitude of its length. Ultimately this
>         data will get
>             > rendered via mapserver so I'm wondering if I can do this
>         via a GTiff or
>             > if I will have to resort to creating a massive point
>         shapefile with
>             > attributes of angle and magnitude and use a symbol. It
>         seems like it
>             > would be best if I can keep the data as a GTiff and then
>         sample the
>             > points and render the vectors on the fly for when you zoom
>         in/out.
>
>             See
>             http://mapserver.org/input/vector/vector_field.html
>
>             You don't need to create a vector file.
>
>             You'll have to preprocess your file to get the u and v bands
>         in the same
>             raster.
>
>             Even
>
>             --
>             Spatialys - Geospatial professional services
>             http://www.spatialys.com
>             _______________________________________________
>             gdal-dev mailing list
>             gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>         <mailto:gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>>
>             http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
>         --
>         --
>         http://schwehr.org
>
>
>
>     ---
>     This email has been checked for viruses by Avast antivirus software.
>     https://www.avast.com/antivirus
>
>
>
>
> --
> --
> http://schwehr.org


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From jamessramm at gmail.com  Mon Jun  6 13:14:44 2016
From: jamessramm at gmail.com (jramm)
Date: Mon, 6 Jun 2016 13:14:44 -0700 (PDT)
Subject: [gdal-dev] Discover whether a GDALDataset is raster or vector?
Message-ID: <1465244084078-5270223.post@n6.nabble.com>

Hi
Given a GDALDataset pointer, which has been opened using GDALOpenEx(...),
what is the best way to discover whether the dataset is raster or vector?

I have thought of checking the drivers' metadata for GDAL_DCAP_OF_RASTER or
VECTOR, but this could potentially return YES for both if it is e.g the
geopackage driver?





--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Discover-whether-a-GDALDataset-is-raster-or-vector-tp5270223.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Mon Jun  6 13:32:59 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 06 Jun 2016 22:32:59 +0200
Subject: [gdal-dev] Discover whether a GDALDataset is raster or vector?
In-Reply-To: <1465244084078-5270223.post@n6.nabble.com>
References: <1465244084078-5270223.post@n6.nabble.com>
Message-ID: <488442879.4cTvIzTTQ1@even-n550jk>

On Monday 06 June 2016 13:14:44 jramm wrote:
> Hi
> Given a GDALDataset pointer, which has been opened using GDALOpenEx(...),
> what is the best way to discover whether the dataset is raster or vector?

GetRasterCount() != 0 for raster
GetLayerCount() != 0 for vector

> 
> I have thought of checking the drivers' metadata for GDAL_DCAP_OF_RASTER or
> VECTOR, but this could potentially return YES for both if it is e.g the
> geopackage driver?
> 
> 
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/Discover-whether-a-GDALDataset-is-raste
> r-or-vector-tp5270223.html Sent from the GDAL - Dev mailing list archive at
> Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From woodbri at swoodbridge.com  Mon Jun  6 18:23:30 2016
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Mon, 6 Jun 2016 21:23:30 -0400
Subject: [gdal-dev] Questions on working with HYCOM data in netcdf format
In-Reply-To: <9ebf08e3-abc4-5709-cf07-3b73561298b7@swoodbridge.com>
References: <40225acd-bd9a-39c8-ce38-f2fddbbbc523@swoodbridge.com>
 <201606041529.27008.even.rouault@spatialys.com>
 <CACmBxyuH488+uArwpr0z6-_-6q_Kz_ga2AkLpCrwKCyMjLROoQ@mail.gmail.com>
 <f6c63474-96af-4673-4a99-8f6656c911c0@swoodbridge.com>
 <CACmBxysNiyyiqYSk4KfMsuUm=px_Gv48sPiT71UjvJY4t8Lsag@mail.gmail.com>
 <9ebf08e3-abc4-5709-cf07-3b73561298b7@swoodbridge.com>
Message-ID: <aa155741-39da-aa6c-2ec3-669886250977@swoodbridge.com>

Kurt, Even,

Progress! Check this out:

http://imaptools.com:8080/demo/tiger-hycom.html?zoom=8&lat=31.42299&lon=-79.78765&layers=BTT

I tweaked your script, to copy both the water_u and water_v as separate 
bands (so back to 80 bands), I actually only need a few depths so 
eventually I'll cut that down.

If you zoom out there are lots of blank areas with no currents. I'm not 
sure if this is normal or what.

https://gist.github.com/woodbri/ad0984675b17c45739dbb592bde6639a#file-hycom_uv_netcdf_to_uv_gtiff-py

Here are the mapfile bits:

https://gist.github.com/woodbri/ad0984675b17c45739dbb592bde6639a#file-mapfile-for-hycom-ocean-currents-map

Thanks for the help!

-Steve

On 6/6/2016 2:29 PM, Stephen Woodbridge wrote:
> On 6/6/2016 1:25 PM, Kurt Schwehr wrote:
>> +gdal-dev
>>
>> Some hackish test code I had laying around from last year...
>>
>> https://gist.github.com/schwehr/01f6604afc7757ea0a676f0eb28be582
>>
>
> Thank you! I have it running, so next I'll play with the code.
>
>> You might also be able to just write 80 layers of u-v, pick out pairs
>> for each depth layer and have the rendering system do the
>> conversion(s).  You could use whatever you want once you have a
>> geotiff.  In this screenshot, I made an 80-layer geotiff of u and v
>> alternating layers and uploaded that to Earth Engine.  It's been a long
>> time since I heavily used mapserver, but you could probably do the same
>> there.
>>
>> https://www.flickr.com/photos/schwehr/26895009754/
>
> Very cool picture!
>
> This really helps to get me started.
>
> Thanks,
>   -Steve
>
>> On Mon, Jun 6, 2016 at 7:51 AM, Stephen Woodbridge
>> <woodbri at swoodbridge.com <mailto:woodbri at swoodbridge.com>> wrote:
>>
>>     On 6/5/2016 2:04 PM, Kurt Schwehr wrote:
>>
>>         Stephen,
>>
>>         Take a look at these two discussions for starters on working
>>         with hycom:
>>
>>
>> http://gis.stackexchange.com/questions/167155/how-can-i-make-geotiffs-of-individual-depth-layers-in-the-hycom-ocean-circulatio
>>
>>
>>
>>     Hi Kurt,
>>
>>     In the link above you mention:
>>
>>         I've got some code written the does things like calculate the
>> speed
>>         inm/s from the UV and creates a geotiff, etc
>>
>>
>>     Can you share this code, it sounds like exactly what I need for the
>>     current vectors? And I'm interested in figuring out how to
>>     read/write and work with the netcdf files.
>>
>>     I think for now I'll work with the "u" datasets as they seem that
>>     they will be much easier place to start.
>>
>>     Thanks,
>>       -Steve
>>
>>
>>
>> http://gis.stackexchange.com/questions/170882/how-can-a-make-a-netcdf-with-subgroups-smaller
>>
>>
>>         You should start with the regular grids.  e.g.
>>
>>
>> ftp://ftp.hycom.org/datasets/GLBu0.08/expt_91.1/data/hindcasts/2015/hycom_glb_911_2015093000_t000_uv3z.nc
>>
>>
>>         Make an 80 layer geotiff from the u/v and then use mapserver
>> as Even
>>         suggested.
>>
>>         -kurt
>>
>>
>>         On Sat, Jun 4, 2016 at 6:29 AM, Even Rouault
>>         <even.rouault at spatialys.com <mailto:even.rouault at spatialys.com>
>>         <mailto:even.rouault at spatialys.com
>>         <mailto:even.rouault at spatialys.com>>> wrote:
>>
>>             Hi,
>>             >
>>             > I want to convert some HYCOM data into GTiff format and
>>         I'm a little
>>             > lost on how to get started, whether I can do what I need
>>         just using a
>>             > vrt or if I'm going to have to write code to process the
>> data.
>>             >
>>             > To start with I have placed gdalinfo on one file here:
>>             > http://imaptools.com:8080/dl/hycom-gdalinfo.txt
>>             >
>>             > The data comes from
>> http://hycom.org/dataserver/glb-analysis
>>             > and I will need to be using GLBa0.08 dataset.
>>             >
>>             > I have two use cases:
>>             >
>>             > 1) The simple one is to extract say Band 1 into a
>>         georeferenced GTiff
>>             > and apply color to using color ranges without loosing the
>>         NODATA. I
>>             > think I can do later using .vrt, correct?
>>
>>             gdaldem color-relief can output to a VRT, but given that
>>         this netCDF
>>             file is
>>             georeferenced through a geolocation array, you'll likely
>>         have first
>>             to run
>>             gdalwarp -geoloc to have something useful at the end.
>>
>>             >
>>             > I'm not sure how to deal with the georeferencing, because
>>         the download
>>             > site says: "Native hycom .[ab] data converted to NetCDF on
>>         native
>>             > Mercator-curvilinear HYCOM horizontal grid" but that does
>>         not seem in
>>             > sync with the Metadata in the file.
>>             >
>>             > 2) The more complicated case is that there are two files:
>>             >     a)  eastward_sea_water_velocity (aka: u, u-velocity)
>>             >     b)  northward_sea_water_velocity (aka: v, v-velocity)
>>             > that I would like to use to create a grid of vectors with
>>         arrowheads
>>             > using u and v to define the vector and where the color of
>>         the vector is
>>             > related to the magnitude of its length. Ultimately this
>>         data will get
>>             > rendered via mapserver so I'm wondering if I can do this
>>         via a GTiff or
>>             > if I will have to resort to creating a massive point
>>         shapefile with
>>             > attributes of angle and magnitude and use a symbol. It
>>         seems like it
>>             > would be best if I can keep the data as a GTiff and then
>>         sample the
>>             > points and render the vectors on the fly for when you zoom
>>         in/out.
>>
>>             See
>>             http://mapserver.org/input/vector/vector_field.html
>>
>>             You don't need to create a vector file.
>>
>>             You'll have to preprocess your file to get the u and v bands
>>         in the same
>>             raster.
>>
>>             Even
>>
>>             --
>>             Spatialys - Geospatial professional services
>>             http://www.spatialys.com
>>             _______________________________________________
>>             gdal-dev mailing list
>>             gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>>         <mailto:gdal-dev at lists.osgeo.org
>> <mailto:gdal-dev at lists.osgeo.org>>
>>             http://lists.osgeo.org/mailman/listinfo/gdal-dev
>>
>>
>>
>>
>>         --
>>         --
>>         http://schwehr.org
>>
>>
>>
>>     ---
>>     This email has been checked for viruses by Avast antivirus software.
>>     https://www.avast.com/antivirus
>>
>>
>>
>>
>> --
>> --
>> http://schwehr.org
>
>
> ---
> This email has been checked for viruses by Avast antivirus software.
> https://www.avast.com/antivirus
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev


---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From francisco.javier.calzado at ericsson.com  Tue Jun  7 00:01:20 2016
From: francisco.javier.calzado at ericsson.com (Javier Calzado)
Date: Tue, 7 Jun 2016 07:01:20 +0000 (UTC)
Subject: [gdal-dev] New driver implementation with larger block size
References: <loom.20160606T101551-228@post.gmane.org>
 <3178793.g8APq20gOt@even-n550jk>
Message-ID: <loom.20160607T085027-159@post.gmane.org>

Thanks for your answer Even,

I knew about GDAL_ONE_BIG_READ, but given that our tool will access 
several raster simultaneously and will perform intensive operations with 
them, I like the idea of allowing GDAL caching blocks, as long as cache 
hits rate is high, this will increase performance I guess. GDAL cache is 
pretty smart and well done, this way we avoid re-implementing our own 
custom cache system. Besides that, we will do intensive access to raster 
on a pixel basis, and it seems that performance, according to some tests I 
did, is highly improved using direct block pointers (GetLockedBlockRef) 
over RasterIO pixel access. So, unless I am missing something with 
RasterIO, I think we will go for the cached block access method.

So, I guess the only way to accomplish larger block sizes in my new driver 
is to implement a custom rasterband derived from GDALRasterBand and 
implement IReadBlock/IWriteBlock methods, right?

My concern in that case is ... what would happen with blocks that cannot 
be completely filled with raster data? I mean, given a 150x150px raster 
for example, if a define block size as 150x100, the second block will have 
the last 50 scanlines empty, does GDAL internally handle this situation 
properly?



From jukka.rahkonen at maanmittauslaitos.fi  Tue Jun  7 00:54:04 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Tue, 7 Jun 2016 07:54:04 +0000 (UTC)
Subject: [gdal-dev] New driver implementation with larger block size
References: <loom.20160606T101551-228@post.gmane.org>
 <3178793.g8APq20gOt@even-n550jk> <loom.20160607T085027-159@post.gmane.org>
Message-ID: <loom.20160607T095107-209@post.gmane.org>

Javier Calzado <francisco.javier.calzado <at> ericsson.com> writes:

> 
> Thanks for your answer Even,
> 
> I knew about GDAL_ONE_BIG_READ, but given that our tool will access 
> several raster simultaneously and will perform intensive operations with 
> them, I like the idea of allowing GDAL caching blocks, as long as cache 
> hits rate is high, this will increase performance I guess. GDAL cache is 
> pretty smart and well done, this way we avoid re-implementing our own 
> custom cache system. Besides that, we will do intensive access to raster 
> on a pixel basis, and it seems that performance, according to some tests I 
> did, is highly improved using direct block pointers (GetLockedBlockRef) 
> over RasterIO pixel access. So, unless I am missing something with 
> RasterIO, I think we will go for the cached block access method.
> 
> So, I guess the only way to accomplish larger block sizes in my new driver 
> is to implement a custom rasterband derived from GDALRasterBand and 
> implement IReadBlock/IWriteBlock methods, right?
> 
> My concern in that case is ... what would happen with blocks that cannot 
> be completely filled with raster data? I mean, given a 150x150px raster 
> for example, if a define block size as 150x100, the second block will have 
> the last 50 scanlines empty, does GDAL internally handle this situation 
> properly?

Hi,

Unfortunately I do not really understand what you are talking about but when
I saw words "blocks" and "caching" I started to think that the same words
appear in Ari Jolma's raster algebra
https://trac.osgeo.org/gdal/wiki/rfc62_raster_algebra

Could there be some overlaps?

-Jukka Rahkonen-


From ari.jolma at gmail.com  Tue Jun  7 01:06:52 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 7 Jun 2016 11:06:52 +0300
Subject: [gdal-dev] New driver implementation with larger block size
In-Reply-To: <loom.20160607T095107-209@post.gmane.org>
References: <loom.20160606T101551-228@post.gmane.org>
 <3178793.g8APq20gOt@even-n550jk> <loom.20160607T085027-159@post.gmane.org>
 <loom.20160607T095107-209@post.gmane.org>
Message-ID: <5756809C.70901@gmail.com>

07.06.2016, 10:54, Jukka Rahkonen kirjoitti:
> Javier Calzado <francisco.javier.calzado <at> ericsson.com> writes:
>
>> Thanks for your answer Even,
>>
>> I knew about GDAL_ONE_BIG_READ, but given that our tool will access
>> several raster simultaneously and will perform intensive operations with
>> them, I like the idea of allowing GDAL caching blocks, as long as cache
>> hits rate is high, this will increase performance I guess. GDAL cache is
>> pretty smart and well done, this way we avoid re-implementing our own
>> custom cache system. Besides that, we will do intensive access to raster
>> on a pixel basis, and it seems that performance, according to some tests I
>> did, is highly improved using direct block pointers (GetLockedBlockRef)
>> over RasterIO pixel access. So, unless I am missing something with
>> RasterIO, I think we will go for the cached block access method.
>>
>> So, I guess the only way to accomplish larger block sizes in my new driver
>> is to implement a custom rasterband derived from GDALRasterBand and
>> implement IReadBlock/IWriteBlock methods, right?
>>
>> My concern in that case is ... what would happen with blocks that cannot
>> be completely filled with raster data? I mean, given a 150x150px raster
>> for example, if a define block size as 150x100, the second block will have
>> the last 50 scanlines empty, does GDAL internally handle this situation
>> properly?
> Hi,
>
> Unfortunately I do not really understand what you are talking about but when
> I saw words "blocks" and "caching" I started to think that the same words
> appear in Ari Jolma's raster algebra
> https://trac.osgeo.org/gdal/wiki/rfc62_raster_algebra
>
> Could there be some overlaps?

Yes. But mainly for me to learn :)

I actually did not know / realize about the GetLockedBlockRef / 
GDALRasterBlock class and it seems that it will speed up the raster 
algebra methods since I've been copying the blocks to an intermediary cache.

Also, Javier is concerned about how to make the GDAL raster block cache 
system work for one driver and I'm concerned how to make the cache 
system work for application code - we're so to speak on opposite sides 
of the cache system.

To use this space for some comments on the raster algebra code. I've 
done some research and profiling and I'm going to test using non-native 
blocks as an option. That's because I realized that when more than one 
band is involved in a raster algebra method at the same time it is very 
beneficial to have the same block size in all bands. The QGIS raster 
calculator uses that approach.

Ari

>
> -Jukka Rahkonen-
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From even.rouault at spatialys.com  Tue Jun  7 02:00:17 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 07 Jun 2016 11:00:17 +0200
Subject: [gdal-dev] New driver implementation with larger block size
In-Reply-To: <loom.20160607T085027-159@post.gmane.org>
References: <loom.20160606T101551-228@post.gmane.org>
 <3178793.g8APq20gOt@even-n550jk> <loom.20160607T085027-159@post.gmane.org>
Message-ID: <16308820.k5S5oTTuRk@even-n550jk>

On Tuesday 07 June 2016 07:01:20 Javier Calzado wrote:
> Thanks for your answer Even,
> 
> I knew about GDAL_ONE_BIG_READ, but given that our tool will access
> several raster simultaneously and will perform intensive operations with
> them, I like the idea of allowing GDAL caching blocks, as long as cache
> hits rate is high, this will increase performance I guess. GDAL cache is
> pretty smart and well done, this way we avoid re-implementing our own
> custom cache system. Besides that, we will do intensive access to raster
> on a pixel basis, and it seems that performance, according to some tests I
> did, is highly improved using direct block pointers (GetLockedBlockRef)
> over RasterIO pixel access. So, unless I am missing something with
> RasterIO, I think we will go for the cached block access method.
> 
> So, I guess the only way to accomplish larger block sizes in my new driver
> is to implement a custom rasterband derived from GDALRasterBand and
> implement IReadBlock/IWriteBlock methods, right?

Yes, or modify RawRasterBand to work with any nBlockYSize value

> 
> My concern in that case is ... what would happen with blocks that cannot
> be completely filled with raster data? I mean, given a 150x150px raster
> for example, if a define block size as 150x100, the second block will have
> the last 50 scanlines empty, does GDAL internally handle this situation
> properly?

Yes, this is a common situation in a number of formats. Blocks maintained by 
the block cache have all the same size nBlockXSize x nBlockYSize. It is up to 
the implementation of IReadBlock() / IWriteBlock() to handle properly the 
potential padding at the right and/or bottom of blocks at right/bottom edges 
of the raster.


> 
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From n.baraldo at iconsulting.biz  Tue Jun  7 05:19:51 2016
From: n.baraldo at iconsulting.biz (Nicola Baraldo (ICONSULTING))
Date: Tue, 7 Jun 2016 12:19:51 +0000
Subject: [gdal-dev] Problem using ogrlineref
In-Reply-To: <VI1PR0201MB1790A57E72651121E1A30E5AE75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
References: <VI1PR0201MB1790A57E72651121E1A30E5AE75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
Message-ID: <VI1PR0201MB1790F62976FCB86846906BD3E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>

Hi guys,

I am trying to split some routes into segments of the same length (dynamic segmentation) using ogrlineref command.
My data is stored in a shapefile containing a set of paths, for each path I know the length in meters.

I have tried ogrlineref with –create, –get_coord and - get_subline.
For the first option I don’t have a reper datasource to provide because I don’t have mile-stones, are they really necessaries?
The second and third options give me the following error for each path contained in the input shapefile; with –get_coord I have tried both options “–m 0” and “–m 1000”, with –get_subline I have tried “-mb 0 -me 1” options.

[cid:image002.png at 01D1C0B2.95D5BF20]

Can someone help me using this command? Is there a better way to perform dynamic segmentation using GDAL?
Moreover my shapefile contains also a lot of other fields, there is a way to keep these information also in the output file?

Thanks,
Nicola
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160607/ad56d70a/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.png
Type: image/png
Size: 24691 bytes
Desc: image002.png
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160607/ad56d70a/attachment-0001.png>

From bishop.dev at gmail.com  Tue Jun  7 07:16:26 2016
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Tue, 7 Jun 2016 17:16:26 +0300
Subject: [gdal-dev] Problem using ogrlineref
In-Reply-To: <VI1PR0201MB1790F62976FCB86846906BD3E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
References: <VI1PR0201MB1790A57E72651121E1A30E5AE75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
 <VI1PR0201MB1790F62976FCB86846906BD3E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
Message-ID: <5756D73A.70202@gmail.com>

Hi Nicola,

The idea of ogrlineref was follow:
1. You have layer with some lines and some reper points with known 
linear coordinates
2. The reper points divide lines on equal parts (e.i. 1000 m) - this is 
important that parts should be equal
3. The result file will have special structure (required fields: beg, 
end, scale, and some optional)
4. During referencing  ogrlineref make attribute query and get needed 
part based on beg and end fields (which is rather fast), and than calc 
point position inside this part.

In your case, the simple way is to extract begin and end point of your 
lines and make them reper points. After that all steps are usual.

There is no sense to move other fields into the parts file from your 
original datasource. But you can use -lf option to store some value and 
use it in future for join with your original data.

Best regards,
     Dmitry

07.06.2016 15:19, Nicola Baraldo (ICONSULTING) пишет:
>
> Hi guys,
>
> I am trying to split some routes into segments of the same length 
> (dynamic segmentation) using ogrlineref command.
>
> My data is stored in a shapefile containing a set of paths, for each 
> path I know the length in meters.
>
> I have tried ogrlineref with –create, –get_coord and - get_subline.
>
> For the first option I don’t have a reper datasource to provide 
> because I don’t have mile-stones, are they really necessaries?
>
> The second and third options give me the following error for each path 
> contained in the input shapefile; with –get_coord I have tried both 
> options “–m 0” and “–m 1000”, with –get_subline I have tried “-mb 0 
> -me 1” options.
>

> Can someone help me using this command? Is there a better way to 
> perform dynamic segmentation using GDAL?
>
> Moreover my shapefile contains also a lot of other fields, there is a 
> way to keep these information also in the output file?
>
> Thanks,
>
> Nicola
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160607/4821150a/attachment.html>

From n.baraldo at iconsulting.biz  Tue Jun  7 08:25:01 2016
From: n.baraldo at iconsulting.biz (Nicola Baraldo (ICONSULTING))
Date: Tue, 7 Jun 2016 15:25:01 +0000
Subject: [gdal-dev] R:  Problem using ogrlineref
In-Reply-To: <5756D73A.70202@gmail.com>
References: <VI1PR0201MB1790A57E72651121E1A30E5AE75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
 <VI1PR0201MB1790F62976FCB86846906BD3E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
 <5756D73A.70202@gmail.com>
Message-ID: <VI1PR0201MB1790D008D519A34D67561552E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>

Hi Dmitry,

thank you for you response. There is a way to do the step 2 using GDAL?
Moreover, if the path lengths are not multiple of the split size (e.g. 1000m), how the last segment is handled?

Best regards,
Nicola

Da: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] Per conto di Dmitry Baryshnikov
Inviato: martedì 7 giugno 2016 16:16
A: gdal-dev at lists.osgeo.org
Oggetto: Re: [gdal-dev] Problem using ogrlineref

Hi Nicola,

The idea of ogrlineref was follow:
1. You have layer with some lines and some reper points with known linear coordinates
2. The reper points divide lines on equal parts (e.i. 1000 m) - this is important that parts should be equal
3. The result file will have special structure (required fields: beg, end, scale, and some optional)
4. During referencing  ogrlineref make attribute query and get needed part based on beg and end fields (which is rather fast), and than calc point position inside this part.

In your case, the simple way is to extract begin and end point of your lines and make them reper points. After that all steps are usual.

There is no sense to move other fields into the parts file from your original datasource. But you can use -lf option to store some value and use it in future for join with your original data.


Best regards,

    Dmitry
07.06.2016 15:19, Nicola Baraldo (ICONSULTING) пишет:
Hi guys,

I am trying to split some routes into segments of the same length (dynamic segmentation) using ogrlineref command.
My data is stored in a shapefile containing a set of paths, for each path I know the length in meters.

I have tried ogrlineref with –create, –get_coord and - get_subline.
For the first option I don’t have a reper datasource to provide because I don’t have mile-stones, are they really necessaries?
The second and third options give me the following error for each path contained in the input shapefile; with –get_coord I have tried both options “–m 0” and “–m 1000”, with –get_subline I have tried “-mb 0 -me 1” options.


Can someone help me using this command? Is there a better way to perform dynamic segmentation using GDAL?
Moreover my shapefile contains also a lot of other fields, there is a way to keep these information also in the output file?

Thanks,
Nicola



_______________________________________________

gdal-dev mailing list

gdal-dev at lists.osgeo.org<mailto:gdal-dev at lists.osgeo.org>

http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160607/2261b85f/attachment-0001.html>

From bishop.dev at gmail.com  Tue Jun  7 09:25:50 2016
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Tue, 7 Jun 2016 19:25:50 +0300
Subject: [gdal-dev] R: Problem using ogrlineref
In-Reply-To: <VI1PR0201MB1790D008D519A34D67561552E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
References: <VI1PR0201MB1790A57E72651121E1A30E5AE75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
 <VI1PR0201MB1790F62976FCB86846906BD3E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
 <5756D73A.70202@gmail.com>
 <VI1PR0201MB1790D008D519A34D67561552E75D0@VI1PR0201MB1790.eurprd02.prod.outlook.com>
Message-ID: <5756F58E.6030801@gmail.com>

Hi Nicola,

The first and last segments usually have beg and end fields value not a 
multiple of 1000.
I.e. begin = 576 m, end 1000 m or begin 76200 m, end 76234 m
This is ok, and ogrlineref correctly woks with this case.

I think, that you can try to play with your data without equal parts 
sizes. But ogrlineref need - beg (double), end(double) and scale 
(double) fields.
Scale - is spatial length of you part divided on linear lenght.
I.e. scale = part.get_Length() / (end - beg)

Best regards,
     Dmitry

07.06.2016 18:25, Nicola Baraldo (ICONSULTING) пишет:
>
> Hi Dmitry,
>
> thank you for you response. There is a way to do the step 2 using GDAL?
>
> Moreover, if the path lengths are not multiple of the split size (e.g. 
> 1000m), how the last segment is handled?
>
> Best regards,
>
> Nicola
>
> *Da:*gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] *Per conto di 
> *Dmitry Baryshnikov
> *Inviato:* martedì 7 giugno 2016 16:16
> *A:* gdal-dev at lists.osgeo.org
> *Oggetto:* Re: [gdal-dev] Problem using ogrlineref
>
> Hi Nicola,
>
> The idea of ogrlineref was follow:
> 1. You have layer with some lines and some reper points with known 
> linear coordinates
> 2. The reper points divide lines on equal parts (e.i. 1000 m) - this 
> is important that parts should be equal
> 3. The result file will have special structure (required fields: beg, 
> end, scale, and some optional)
> 4. During referencing  ogrlineref make attribute query and get needed 
> part based on beg and end fields (which is rather fast), and than calc 
> point position inside this part.
>
> In your case, the simple way is to extract begin and end point of your 
> lines and make them reper points. After that all steps are usual.
>
> There is no sense to move other fields into the parts file from your 
> original datasource. But you can use -lf option to store some value 
> and use it in future for join with your original data.
>
> Best regards,
>      Dmitry
>
> 07.06.2016 15:19, Nicola Baraldo (ICONSULTING) пишет:
>
>     Hi guys,
>
>     I am trying to split some routes into segments of the same length
>     (dynamic segmentation) using ogrlineref command.
>
>     My data is stored in a shapefile containing a set of paths, for
>     each path I know the length in meters.
>
>     I have tried ogrlineref with –create, –get_coord and - get_subline.
>
>     For the first option I don’t have a reper datasource to provide
>     because I don’t have mile-stones, are they really necessaries?
>
>     The second and third options give me the following error for each
>     path contained in the input shapefile; with –get_coord I have
>     tried both options “–m 0” and “–m 1000”, with –get_subline I have
>     tried “-mb 0 -me 1” options.
>
>
>
>     Can someone help me using this command? Is there a better way to
>     perform dynamic segmentation using GDAL?
>
>     Moreover my shapefile contains also a lot of other fields, there
>     is a way to keep these information also in the output file?
>
>     Thanks,
>
>     Nicola
>
>
>
>     _______________________________________________
>
>     gdal-dev mailing list
>
>     gdal-dev at lists.osgeo.org <mailto:gdal-dev at lists.osgeo.org>
>
>     http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160607/1ce663d2/attachment.html>

From gunnarblom at mail.com  Tue Jun  7 12:17:58 2016
From: gunnarblom at mail.com (gunnarblom)
Date: Tue, 7 Jun 2016 12:17:58 -0700 (PDT)
Subject: [gdal-dev] MBTiles creation problems on some iOS devices
Message-ID: <1465327078414-5270469.post@n6.nabble.com>

Hi.

I'm using GDALTranslate() in C++ to convert GTiffs (5k*5k pixels) to MBTiles
(resulting size: ~60mb) on iOS.

It works good on iPhone 6 (1GB ram), iPhone 6S (2GB ram, peaks GDAL usage at
160mb) and iPad Mini 3 (1GB ram) and takes around 1-3 minutes. But on e.g.
iPhone 5S (1GB ram), iPad 3 (1GB ram) and iPad 4 (1GB ram), it takes forever
(never succeeded with it so far, takes too long).

What is happening is that on the older devices, GDAL starts to write a lot
to the disk for some reason. It starts normally and with CPU at 100% for a
while. Then the writing to disk starts and the CPU goes up and down a lot
but never at consistent high levels. When I stopped it at 50% progress, it
had written ~5GB to disk. The iPhone 6S writes  less than 100MB and keeps
CPU at 100% all the way. All devices have a couple of hundred MB free ram
during the whole process.

If I add GDALSetCacheMax(1000 * 1024 * 1024) before converting on iPad 3, it
succeeds but after a long time and still writes ~1GB of data that slows the
process a lot (and peaks GDAL memory usage at 250mb, compared to iPhone 6S
that peaks at 160mb GDAL ram usage).

1) What might be wrong here? What situation triggers GDAL to write so much
to disk even if the RAM seems at good free levels?
2) I can set the disk cache with GDALSetCacheMax, any way to set the other
memory used by this function? (memory for the actual conversion)


Br,
Gunnar Blom



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/MBTiles-creation-problems-on-some-iOS-devices-tp5270469.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Wed Jun  8 06:21:24 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 08 Jun 2016 15:21:24 +0200
Subject: [gdal-dev] MBTiles creation problems on some iOS devices
In-Reply-To: <1465327078414-5270469.post@n6.nabble.com>
References: <1465327078414-5270469.post@n6.nabble.com>
Message-ID: <4928796.WXzMaVZV05@even-n550jk>

On Tuesday 07 June 2016 12:17:58 gunnarblom wrote:
> Hi.
> 
> I'm using GDALTranslate() in C++ to convert GTiffs (5k*5k pixels) to MBTiles
> (resulting size: ~60mb) on iOS.
> 
> It works good on iPhone 6 (1GB ram), iPhone 6S (2GB ram, peaks GDAL usage at
> 160mb) and iPad Mini 3 (1GB ram) and takes around 1-3 minutes. But on e.g.
> iPhone 5S (1GB ram), iPad 3 (1GB ram) and iPad 4 (1GB ram), it takes
> forever (never succeeded with it so far, takes too long).
> 
> What is happening is that on the older devices, GDAL starts to write a lot
> to the disk for some reason. It starts normally and with CPU at 100% for a
> while. Then the writing to disk starts and the CPU goes up and down a lot
> but never at consistent high levels. When I stopped it at 50% progress, it
> had written ~5GB to disk. The iPhone 6S writes  less than 100MB and keeps
> CPU at 100% all the way. All devices have a couple of hundred MB free ram
> during the whole process.
> 
> If I add GDALSetCacheMax(1000 * 1024 * 1024) before converting on iPad 3, it
> succeeds but after a long time and still writes ~1GB of data that slows the
> process a lot (and peaks GDAL memory usage at 250mb, compared to iPhone 6S
> that peaks at 160mb GDAL ram usage).
> 
> 1) What might be wrong here? What situation triggers GDAL to write so much
> to disk even if the RAM seems at good free levels?
> 2) I can set the disk cache with GDALSetCacheMax, any way to set the other
> memory used by this function? (memory for the actual conversion)

Wen creating a MBTiles (or GeoPackage) dataset, there's an heuristics to avoid 
the temporary database (used to handle the fact that GDAL blocks are generally 
not aligned with MBTiles tiles) small enough, and to flush it regularly to the 
main database. One of the condition to trigger  flush is if the remaining free 
space on the device is below 1 GB. You could enable GDAL debugging ( 
CPL_DEBUG=ON as environment variable ) and if that was the case I mentionned 
you would see messages "Free space below 1GB. Flushing part of partial tiles". 
But I wouldn't expect that frequent flushes cause the main DB to grow out of 
control.

Even


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gunnarblom at mail.com  Wed Jun  8 10:26:00 2016
From: gunnarblom at mail.com (gunnarblom)
Date: Wed, 8 Jun 2016 10:26:00 -0700 (PDT)
Subject: [gdal-dev] MBTiles creation problems on some iOS devices
In-Reply-To: <4928796.WXzMaVZV05@even-n550jk>
References: <1465327078414-5270469.post@n6.nabble.com>
 <4928796.WXzMaVZV05@even-n550jk>
Message-ID: <1465406760354-5270695.post@n6.nabble.com>

Thanks, appreciate the response!I tried it with CPL_DEBUG=ON, but it doesn't
say anything about low disk space.Here are the logs, where you can see the
writing behaviour differ a lot for an unknown reason. This is with
GDAL_CACHEMAX on Auto. (I also tried limiting GDAL_CACHEMAX to 49mb on the
iPhone 6S as on the iPad 3 with Auto, but it was still similar output.)Do
you know what could trigger this difference?*iPhone 6S log*:Input file size
is 5000, 5000GDAL: GDAL_CACHEMAX = 100 MBGDAL:
GDALWarpKernel()::GWKGeneralCase()Src=0,0,2346x1151 Dst=0,0,3328x1536GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=2291,0,1460x2389
Dst=3328,0,1792x3328GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=3622,0,1378x2324
Dst=5120,0,1834x3328GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=0,1046,2407x1445
Dst=0,1536,3328x1792GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=0,2386,2468x1452
Dst=0,3328,3328x1792GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=2404,2321,1415x1414
Dst=3328,3328,1792x1792GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=3748,2248,1252x1422
Dst=5120,3328,1834x1792GPKG: Partial tiles DB is 46387200 bytes. Flushing
part of partial tilesGPKG: Active partial tiles before flush: 91GPKG:
Flushed 45 tilesGDAL: GDALWarpKernel()::GWKGeneralCase()Src=0,3732,2531x1268
Dst=0,5120,3328x1841GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=2465,3667,1424x1333
Dst=3328,5120,1792x1841GDAL: Potential thrashing on band 1 of
/xxx/xxx.tif.GDAL: GDALWarpKernel()::GWKGeneralCase()Src=3816,3594,1184x1406
Dst=5120,5120,1834x1841*iPad 3 log*:Input file size is 5000, 5000GDAL:
GDAL_CACHEMAX = 49 MBGDAL:
GDALWarpKernel()::GWKGeneralCase()Src=0,0,2395x1172 Dst=0,0,3328x1536GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=2340,0,1290x2435
Dst=3328,0,1536x3328GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=3503,0,1497x1016
Dst=4864,0,1960x1536GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=0,1067,2457x1470
Dst=0,1536,3328x1792GPKG: Partial tiles DB is 30109696 bytes. Flushing part
of partial tilesGPKG: Active partial tiles before flush: 129GPKG: Flushed 30
tiles. Target was 64GDAL:
GDALWarpKernel()::GWKGeneralCase()Src=3560,935,1440x1445
Dst=4864,1536,1960x1792GPKG: Partial tiles DB is 40747008 bytes. Flushing
part of partial tilesGPKG: Active partial tiles before flush: 139GPKG:
Flushed 25 tiles. Target was 69GPKG: Partial tiles DB is 32829440 bytes.
Flushing part of partial tilesGPKG: Active partial tiles before flush:
195GPKG: Flushed 3 tiles. Target was 97GPKG: Partial tiles DB is 40763392
bytes. Flushing part of partial tilesGPKG: Active partial tiles before
flush: 206GPKG: Flushed 14 tiles. Target was 103GPKG: Partial tiles DB is
39051264 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 39247872 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 40558592 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 40558592 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 40558592 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 40624128 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 41672704 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43180032 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43245568 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43180032 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43245568 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43180032 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43180032 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43053056 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 193GPKG: Flushed 1 tiles. Target was 96GPKG: Partial tiles DB
is 43053056 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 193GPKG: Flushed 1 tiles. Target was 96GPKG: Partial tiles DB
is 43180032 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43180032 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43315200 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 194GPKG: Flushed 2 tiles. Target was 97GPKG: Partial tiles DB
is 43180032 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 192GPKG: Flushed 0 tiles. Target was 96GPKG: Partial tiles DB
is 43974656 bytes. Flushing part of partial tilesGPKG: Active partial tiles
before flush: 203GPKG: Flushed 11 tiles. Target was 101GPKG: Partial tiles
DB is 43053056 bytes. Flushing part of partial tilesGPKG: Active partial
tiles before flush: 193GPKG: Flushed 1 tiles. Target was 96GPKG: Partial
tiles DB is 43053056 bytes. Flushing part of partial tilesGPKG: Active
partial tiles before flush: 193GPKG: Flushed 1 tiles. Target was 96GPKG:
Partial tiles DB is 43180032 bytes. Flushing part of partial tilesGPKG:
Active partial tiles before flush: 192GPKG: Flushed 0 tiles. Target was
96GPKG: Partial tiles DB is 43245568 bytes. Flushing part of partial
tilesGPKG: Active partial tiles before flush: 192GPKG: Flushed 0 tiles.
Target was 96GPKG: Partial tiles DB is 43114496 bytes. Flushing part of
partial tilesGPKG: Active partial tiles before flush: 192GPKG: Flushed 0
tiles. Target was 96GPKG: Partial tiles DB is 43118592 bytes. Flushing part
of partial tilesGPKG: Active partial tiles before flush: 193GPKG: Flushed 0
tiles. Target was 96GPKG: Partial tiles DB is 43380736 bytes. Flushing part
of partial tilesGPKG: Active partial tiles before flush: 193GPKG: Flushed 0
tiles. Target was 96*** STOPPED IT AS IT TOOK A LONG TIME AND HAD WRITTEN
~3GB ALREADY ***



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/MBTiles-creation-problems-on-some-iOS-devices-tp5270469p5270695.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160608/9813389f/attachment.html>

From gunnarblom at mail.com  Wed Jun  8 10:32:06 2016
From: gunnarblom at mail.com (gunnarblom)
Date: Wed, 8 Jun 2016 10:32:06 -0700 (PDT)
Subject: [gdal-dev] MBTiles creation problems on some iOS devices
In-Reply-To: <4928796.WXzMaVZV05@even-n550jk>
References: <1465327078414-5270469.post@n6.nabble.com>
 <4928796.WXzMaVZV05@even-n550jk>
Message-ID: <1465407126559-5270696.post@n6.nabble.com>

Thanks, appreciate the response!

I tried it with CPL_DEBUG=ON, but it doesn't say anything about low disk
space. Here are the logs, where you can see the writing behaviour differ a
lot for an unknown reason. This is with GDAL_CACHEMAX on Auto. (I also tried
limiting GDAL_CACHEMAX to 49mb on the iPhone 6S as on the iPad 3 with Auto,
but it was still similar output.)

Do you know what could trigger this difference?

iPhone 6S log:

Input file size is 5000, 5000
GDAL: GDAL_CACHEMAX = 100 MB
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,0,2346x1151 Dst=0,0,3328x1536
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=2291,0,1460x2389 Dst=3328,0,1792x3328
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3622,0,1378x2324 Dst=5120,0,1834x3328
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,1046,2407x1445 Dst=0,1536,3328x1792
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,2386,2468x1452 Dst=0,3328,3328x1792
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=2404,2321,1415x1414 Dst=3328,3328,1792x1792
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3748,2248,1252x1422 Dst=5120,3328,1834x1792
GPKG: Partial tiles DB is 46387200 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 91
GPKG: Flushed 45 tiles
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,3732,2531x1268 Dst=0,5120,3328x1841
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=2465,3667,1424x1333 Dst=3328,5120,1792x1841
GDAL: Potential thrashing on band 1 of /xxx/xxx.tif.
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3816,3594,1184x1406 Dst=5120,5120,1834x1841

iPad 3 log:

Input file size is 5000, 5000
GDAL: GDAL_CACHEMAX = 49 MB
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,0,2395x1172 Dst=0,0,3328x1536
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=2340,0,1290x2435 Dst=3328,0,1536x3328
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3503,0,1497x1016 Dst=4864,0,1960x1536
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,1067,2457x1470 Dst=0,1536,3328x1792
GPKG: Partial tiles DB is 30109696 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 129
GPKG: Flushed 30 tiles. Target was 64
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3560,935,1440x1445 Dst=4864,1536,1960x1792
GPKG: Partial tiles DB is 40747008 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 139
GPKG: Flushed 25 tiles. Target was 69
GPKG: Partial tiles DB is 32829440 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 195
GPKG: Flushed 3 tiles. Target was 97
GPKG: Partial tiles DB is 40763392 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 206
GPKG: Flushed 14 tiles. Target was 103
GPKG: Partial tiles DB is 39051264 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 39247872 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 40558592 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 40558592 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 40558592 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 40624128 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 41672704 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43245568 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43245568 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43053056 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 193
GPKG: Flushed 1 tiles. Target was 96
GPKG: Partial tiles DB is 43053056 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 193
GPKG: Flushed 1 tiles. Target was 96
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43315200 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 194
GPKG: Flushed 2 tiles. Target was 97
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43974656 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 203
GPKG: Flushed 11 tiles. Target was 101
GPKG: Partial tiles DB is 43053056 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 193
GPKG: Flushed 1 tiles. Target was 96
GPKG: Partial tiles DB is 43053056 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 193
GPKG: Flushed 1 tiles. Target was 96
GPKG: Partial tiles DB is 43180032 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43245568 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43114496 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 192
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43118592 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 193
GPKG: Flushed 0 tiles. Target was 96
GPKG: Partial tiles DB is 43380736 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 193
GPKG: Flushed 0 tiles. Target was 96
*** STOPPED IT AS IT TOOK A LONG TIME AND HAD WRITTEN ~3GB ALREADY ***



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/MBTiles-creation-problems-on-some-iOS-devices-tp5270469p5270696.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From gunnarblom at mail.com  Wed Jun  8 11:31:14 2016
From: gunnarblom at mail.com (gunnarblom)
Date: Wed, 8 Jun 2016 11:31:14 -0700 (PDT)
Subject: [gdal-dev] MBTiles creation problems on some iOS devices
In-Reply-To: <1465407126559-5270696.post@n6.nabble.com>
References: <1465327078414-5270469.post@n6.nabble.com>
 <4928796.WXzMaVZV05@even-n550jk> <1465407126559-5270696.post@n6.nabble.com>
Message-ID: <1465410674841-5270704.post@n6.nabble.com>

Some additional info. What is weird is that I now tried it on the most low
end device, iPhone 4S with 512mb ram and that by default uses 25mb cache.

It works pretty well, with some disk writing, but seems on healthy levels.
The difference in patterns I see is that on iPad 3 it is writing "Flushed 0
tiles" and "Flushed 1 tiles" a lot, which seems pretty unhealthy? In either
case, that seems to be the big difference that is causing it to stall the
whole process.

Any ideas?

iPhone 4S log (25mb cache):

Input file size is 5000, 5000
GDAL: GDAL_CACHEMAX = 25 MB
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,0,2395x1172 Dst=0,0,3328x1536
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=2340,0,1290x2435 Dst=3328,0,1536x3328
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3503,0,1497x1016 Dst=4864,0,1960x1536
GPKG: Partial tiles DB is 28405760 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 129
GPKG: Flushed 43 tiles. Target was 64
GPKG: Partial tiles DB is 39493632 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 123
GPKG: Flushed 44 tiles. Target was 61
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,1067,2457x1470 Dst=0,1536,3328x1792
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3560,935,1440x1445 Dst=4864,1536,1960x1792
GPKG: Partial tiles DB is 32014336 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 144
GPKG: Flushed 43 tiles. Target was 72
GPKG: Partial tiles DB is 30134272 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 181
GPKG: Flushed 32 tiles. Target was 90
GPKG: Partial tiles DB is 34451456 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 165
GPKG: Flushed 16 tiles. Target was 82
GPKG: Partial tiles DB is 35696640 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 145
GPKG: Flushed 29 tiles. Target was 72
GDAL: Potential thrashing on band 1 of
/var/containers/Bundle/Application/3477D684-F817-4DA9-853A-98B988AF419B/fjallkartan.app/fjallkarta/vf73_6_50.tif.
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,2432,2509x1280 Dst=0,3328,3328x1536
GPKG: Partial tiles DB is 29904896 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 90
GPKG: Flushed 35 tiles. Target was 45
GPKG: Partial tiles DB is 35098624 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 106
GPKG: Flushed 53 tiles
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=2454,2299,2546x1310 Dst=3328,3328,3496x1536
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=0,3664,1194x1336 Dst=0,4864,1536x1967
GPKG: Partial tiles DB is 34304000 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 92
GPKG: Flushed 46 tiles
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=1131,3606,1446x1394 Dst=1536,4864,1792x1967
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=2506,3551,1256x1449 Dst=3328,4864,1536x1967
GPKG: Partial tiles DB is 30826496 bytes. Flushing part of partial tiles
GPKG: Active partial tiles before flush: 118
GPKG: Flushed 57 tiles. Target was 59
GDAL: GDALWarpKernel()::GWKGeneralCase()
Src=3685,3473,1315x1527 Dst=4864,4864,1960x1967



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/MBTiles-creation-problems-on-some-iOS-devices-tp5270469p5270704.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From gane.prog at gmail.com  Fri Jun 10 12:07:34 2016
From: gane.prog at gmail.com (Gane R)
Date: Sat, 11 Jun 2016 00:37:34 +0530
Subject: [gdal-dev] Build GDAL for android via NDK
Message-ID: <CALMrLdBJ6f1H1gFhdqCiOSe-c7ZgALgY-z0W=F=nd7Xb4hzFuQ@mail.gmail.com>

Hi all,

I saw a link for Building GDAL for android on linux

https://trac.osgeo.org/gdal/wiki/BuildingForAndroid

Is it updated ?, I tried to build on centOS, It took the android linux
compiler. The make resulted in a error. gdal 2.1.0

Is there any updated document or any one having personal experience in
building GDAL for android or any documentation that has worked will be of
great help.


Gane
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160611/bc71637a/attachment.html>

From bradh at frogmouth.net  Fri Jun 10 19:19:07 2016
From: bradh at frogmouth.net (Brad Hards)
Date: Sat, 11 Jun 2016 12:19:07 +1000
Subject: [gdal-dev] Build GDAL for android via NDK
In-Reply-To: <CALMrLdBJ6f1H1gFhdqCiOSe-c7ZgALgY-z0W=F=nd7Xb4hzFuQ@mail.gmail.com>
References: <CALMrLdBJ6f1H1gFhdqCiOSe-c7ZgALgY-z0W=F=nd7Xb4hzFuQ@mail.gmail.com>
Message-ID: <025a01d1c387$a2dbcc50$e89364f0$@frogmouth.net>

No personal experience building on Android, but you may wish to post the error.

Brad


From 191980 at niuitmo.ru  Sat Jun 11 10:38:49 2016
From: 191980 at niuitmo.ru (=?utf-8?B?0JHQvtGA0LfRi9GFINCQ0LvQtdC60YHQsNC90LTRgCDQkNC90LTRgNC10LU=?= =?utf-8?B?0LLQuNGH?=)
Date: Sat, 11 Jun 2016 17:38:49 +0000
Subject: [gdal-dev] GSoC GDAL DWG Support  [Week 3]
Message-ID: <FBF5B3E0-57EA-4CC7-B3F3-74B3C0C78C4A@niuitmo.ru>

<http://gsoc2016gdaldwg.blogspot.ru/2016/06/1.html>Full report is in my blog post.<http://gsoc2016gdaldwg.blogspot.ru/2016/06/1.html>

1. This week I've done:
Implemented CAD OGR Driver skeleton, now it can read points/lines/circles received from libopencad. Pool of geometries will be increased next week.
Since libopencad is written in C++11, I’ve added a check in configure tool which tests whether C++ compiler supports C++11. If it does, CAD driver will be built in, or skipped if no support is provided.

2. Plan on doing next week:
Rewrite libopencad’s file I/O with VSIF functions («out of the box» it uses fstream).
Increase driver geometries pool with ellipses, lwpolylines, 3dpolylines. Start implementing doxygen to libopencad.

3. Blocking:
None.

Best regards,
Alexandr Borzykh

Links:
Development blog<http://gsoc2016gdaldwg.blogspot.ru/>
libopencad github<https://github.com/sandyre/libopencad>
gdal + libopencad fork github<https://github.com/sandyre/gdal_libopencad>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160611/74225fb9/attachment.html>

From bishop.dev at gmail.com  Sun Jun 12 06:32:25 2016
From: bishop.dev at gmail.com (Dmitry Baryshnikov)
Date: Sun, 12 Jun 2016 16:32:25 +0300
Subject: [gdal-dev] Build GDAL for android via NDK
In-Reply-To: <CALMrLdBJ6f1H1gFhdqCiOSe-c7ZgALgY-z0W=F=nd7Xb4hzFuQ@mail.gmail.com>
References: <CALMrLdBJ6f1H1gFhdqCiOSe-c7ZgALgY-z0W=F=nd7Xb4hzFuQ@mail.gmail.com>
Message-ID: <575D6469.2060009@gmail.com>

Hi Gane,

I build GDAL 2.1 using NDK and borsch build system, based on CMake.
There are some limitations - I only need GDAL in my own c++ library. So 
I created swig bindings for my own library, not use GDAL Java bindings 
(GDAL java binding is not ready yet).
Here it is the link for library which build GDAL and dependency 
libraries - https://github.com/nextgis/nextgis_datastore (especially 
https://github.com/nextgis/nextgis_datastore/blob/master/cmake/extlib.cmake)
Here it is an example of using such library - 
https://github.com/nextgis/android_maplib/tree/ndk (fixed gradle build 
script https://github.com/nextgis/android_maplib/blob/ndk/build.gradle 
and NDK makefiles 
https://github.com/nextgis/android_maplib/tree/ndk/src/main/jni)
Everything works in Android Studio - GDAL and dependencies downloaded 
from github, and build (rather long as build done for each ABI), results 
*.so files and headers copied to jni directory and swig bindings too. 
The exported functions are ready and work in android application.

This is not finished solution, but I hope it will be helpful.

Best regards,
     Dmitry

10.06.2016 22:07, Gane R пишет:
> Hi all,
>
> I saw a link for Building GDAL for android on linux
>
> https://trac.osgeo.org/gdal/wiki/BuildingForAndroid
>
> Is it updated ?, I tried to build on centOS, It took the android linux 
> compiler. The make resulted in a error. gdal 2.1.0
>
> Is there any updated document or any one having personal experience in 
> building GDAL for android or any documentation that has worked will be 
> of great help.
>
>
> Gane
>
>
>
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160612/853c82f4/attachment.html>

From jamessramm at gmail.com  Mon Jun 13 03:57:31 2016
From: jamessramm at gmail.com (jramm)
Date: Mon, 13 Jun 2016 03:57:31 -0700 (PDT)
Subject: [gdal-dev] Pass clipsrc to VectorTranslateOptions
Message-ID: <1465815451985-5271367.post@n6.nabble.com>

Im using VectorTranslate and VectorTranslateOptions in python bindings.

It seems like there is nothing equivalent to the ogr2ogr -clipsrc option in
VectorTranslateOptions.

Is there another way of passing this in?



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Pass-clipsrc-to-VectorTranslateOptions-tp5271367.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Mon Jun 13 04:20:40 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 13 Jun 2016 13:20:40 +0200
Subject: [gdal-dev] Pass clipsrc to VectorTranslateOptions
In-Reply-To: <1465815451985-5271367.post@n6.nabble.com>
References: <1465815451985-5271367.post@n6.nabble.com>
Message-ID: <201606131320.40413.even.rouault@spatialys.com>

Le lundi 13 juin 2016 12:57:31, jramm a écrit :
> Im using VectorTranslate and VectorTranslateOptions in python bindings.
> 
> It seems like there is nothing equivalent to the ogr2ogr -clipsrc option in
> VectorTranslateOptions.
> 
> Is there another way of passing this in?

Yes, you can use any option available in the command line with the 'options' 
parameter

gdal.VectorTranslate(out_ds, in_ds, options = '-clipsrc ....')

or

gdal.VectorTranslate(out_ds, in_ds, options = ['-clipsrc', ...] )

> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/Pass-clipsrc-to-VectorTranslateOptions
> -tp5271367.html Sent from the GDAL - Dev mailing list archive at
> Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Jun 14 02:29:40 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 14 Jun 2016 11:29:40 +0200
Subject: [gdal-dev] libtool numbering policy
Message-ID: <201606141129.40619.even.rouault@spatialys.com>

Hi,

A ticket ( https://trac.osgeo.org/gdal/ticket/6542 ) has been raised about 
libtool SONAME having not changed between GDAL 2.0.X and GDAL 2.1.0 due to 
incrementing both LIBGDAL_CURRENT and LIBGDAL_AGE .
This was raised also in https://trac.osgeo.org/gdal/ticket/4543

Our, more or less implicit, policy up to now was to take just into account the 
C ABI, and not the C++ one. Any opinion if we should change it to take into 
account the C++ ABI as well ?

If doing that, I can see
- pros: new policy would match the expectations of the C++ API users
- cons: C API users would see soname changes that don't affect them, requiring 
recompilation/relinking

Another approach would be to have a libgdal_c.so with C ABI only and 
libgdal.so with the rest, ala GEOS, but it is not obvious that the cost to 
restructure the GDAL code to implement that, and to existing external code to 
adapt for this change, would be worth the advantages.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Tue Jun 14 03:13:49 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 14 Jun 2016 12:13:49 +0200
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <201606141129.40619.even.rouault@spatialys.com>
References: <201606141129.40619.even.rouault@spatialys.com>
Message-ID: <f90b4ea4ff9e7cfbff4b77c078de43d2@xs4all.nl>

On 2016-06-14 11:29, Even Rouault wrote:
> A ticket ( https://trac.osgeo.org/gdal/ticket/6542 ) has been raised 
> about
> libtool SONAME having not changed between GDAL 2.0.X and GDAL 2.1.0 due 
> to
> incrementing both LIBGDAL_CURRENT and LIBGDAL_AGE .
> This was raised also in https://trac.osgeo.org/gdal/ticket/4543
> 
> Our, more or less implicit, policy up to now was to take just into 
> account the
> C ABI, and not the C++ one. Any opinion if we should change it to take 
> into
> account the C++ ABI as well ?
> 
> If doing that, I can see
> - pros: new policy would match the expectations of the C++ API users
> - cons: C API users would see soname changes that don't affect them, 
> requiring
> recompilation/relinking

As long as the C & C++ APIs are provided by a single library, it makes 
sense to base the libtool versioning on the C++ API since that changes 
most often.

In Debian we mark the libgdal C++ symbols and add a dependency on the 
version specific virtual ABI package provided by the libgdal20 package 
to all packages that use any of the C++ symbols. Most reverse 
dependencies of GDAL use (some) C++ symbols, requiring a rebuild of 
these packages for every new release of GDAL uploaded to Debian. Only 
the gmt, imposm, mapcache, mapserver, ncl, osmium, postgis, xastir, 
grass & pyosmium packages don't use any C++ symbols (10 out of 37).

It would be great if the other reverse dependencies would limited 
themselves to the C API, but that seems an unrealistic desire. GEOS 
reverse dependencies don't manage that either, although most GEOS rdeps 
use the C API with a few that (also) require the C++ API.

> Another approach would be to have a libgdal_c.so with C ABI only and
> libgdal.so with the rest, ala GEOS, but it is not obvious that the cost 
> to
> restructure the GDAL code to implement that, and to existing external 
> code to
> adapt for this change, would be worth the advantages.

It is a cleaner approach, but because it's so invasive I would postpone 
that change to GDAL 3.0 making it of no use in the short term.

I'm generally in favour of this option as the proper long term solution. 
It will simplify the packaging by removing the need for the virtual ABI 
package.

Kind Regards,

Bas

From gdt at ir.bbn.com  Tue Jun 14 05:16:51 2016
From: gdt at ir.bbn.com (Greg Troxel)
Date: Tue, 14 Jun 2016 08:16:51 -0400
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <201606141129.40619.even.rouault@spatialys.com> (Even Rouault's
 message of "Tue, 14 Jun 2016 11:29:40 +0200")
References: <201606141129.40619.even.rouault@spatialys.com>
Message-ID: <rmia8iohsng.fsf@fnord.ir.bbn.com>


Even Rouault <even.rouault at spatialys.com> writes:

> A ticket ( https://trac.osgeo.org/gdal/ticket/6542 ) has been raised about 
> libtool SONAME having not changed between GDAL 2.0.X and GDAL 2.1.0 due to 
> incrementing both LIBGDAL_CURRENT and LIBGDAL_AGE .
> This was raised also in https://trac.osgeo.org/gdal/ticket/4543
>
> Our, more or less implicit, policy up to now was to take just into account the 
> C ABI, and not the C++ one. Any opinion if we should change it to take into 
> account the C++ ABI as well ?

I can see the point, but the other half of the situation is that
packages do (or should) make a significant effort not to have ABI
changes.  With C ABIs, that seems to work pretty well.   I have the
impression that C++ ABIs are much more unstable, and they also seem to
change in practice when changing compilers.  So I am left wondering how
much stability benefit there really is for C++ by adopting such a
change.

Would you expect a C++ ABI change every release?  Or is that an
occasional thing?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 180 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160614/2e965023/attachment.sig>

From even.rouault at spatialys.com  Tue Jun 14 06:51:47 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 14 Jun 2016 15:51:47 +0200
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <f90b4ea4ff9e7cfbff4b77c078de43d2@xs4all.nl>
References: <201606141129.40619.even.rouault@spatialys.com>
 <f90b4ea4ff9e7cfbff4b77c078de43d2@xs4all.nl>
Message-ID: <201606141551.48040.even.rouault@spatialys.com>

Le mardi 14 juin 2016 12:13:49, Bas Couwenberg a écrit :
> On 2016-06-14 11:29, Even Rouault wrote:
> > A ticket ( https://trac.osgeo.org/gdal/ticket/6542 ) has been raised
> > about
> > libtool SONAME having not changed between GDAL 2.0.X and GDAL 2.1.0 due
> > to
> > incrementing both LIBGDAL_CURRENT and LIBGDAL_AGE .
> > This was raised also in https://trac.osgeo.org/gdal/ticket/4543
> > 
> > Our, more or less implicit, policy up to now was to take just into
> > account the
> > C ABI, and not the C++ one. Any opinion if we should change it to take
> > into
> > account the C++ ABI as well ?
> > 
> > If doing that, I can see
> > - pros: new policy would match the expectations of the C++ API users
> > - cons: C API users would see soname changes that don't affect them,
> > requiring
> > recompilation/relinking
> 
> As long as the C & C++ APIs are provided by a single library, it makes
> sense to base the libtool versioning on the C++ API since that changes
> most often.
> 
> In Debian we mark the libgdal C++ symbols and add a dependency on the
> version specific virtual ABI package provided by the libgdal20 package
> to all packages that use any of the C++ symbols. Most reverse
> dependencies of GDAL use (some) C++ symbols, requiring a rebuild of
> these packages for every new release of GDAL uploaded to Debian. Only
> the gmt, imposm, mapcache, mapserver, ncl, osmium, postgis, xastir,
> grass & pyosmium packages don't use any C++ symbols (10 out of 37).

Side remark: I'm surprised to not see QGIS listed in the C API only users. 
I've never seen use of the GDAL C++ API in it.
Same for Fiona & RasterIO

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From ari.jolma at gmail.com  Tue Jun 14 07:02:14 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Tue, 14 Jun 2016 17:02:14 +0300
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <201606141551.48040.even.rouault@spatialys.com>
References: <201606141129.40619.even.rouault@spatialys.com>
 <f90b4ea4ff9e7cfbff4b77c078de43d2@xs4all.nl>
 <201606141551.48040.even.rouault@spatialys.com>
Message-ID: <57600E66.4030504@gmail.com>

14.06.2016, 16:51, Even Rouault kirjoitti:
> Side remark: I'm surprised to not see QGIS listed in the C API only users.
> I've never seen use of the GDAL C++ API in it.

At least heatmap.cpp seems to include gdal_priv.h

I don't have deeper knowledge why.

Ari

> Same for Fiona & RasterIO
>


From even.rouault at spatialys.com  Tue Jun 14 07:13:13 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 14 Jun 2016 16:13:13 +0200
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <rmia8iohsng.fsf@fnord.ir.bbn.com>
References: <201606141129.40619.even.rouault@spatialys.com>
 <rmia8iohsng.fsf@fnord.ir.bbn.com>
Message-ID: <201606141613.13661.even.rouault@spatialys.com>

Le mardi 14 juin 2016 14:16:51, Greg Troxel a écrit :
> Even Rouault <even.rouault at spatialys.com> writes:
> > A ticket ( https://trac.osgeo.org/gdal/ticket/6542 ) has been raised
> > about libtool SONAME having not changed between GDAL 2.0.X and GDAL
> > 2.1.0 due to incrementing both LIBGDAL_CURRENT and LIBGDAL_AGE .
> > This was raised also in https://trac.osgeo.org/gdal/ticket/4543
> > 
> > Our, more or less implicit, policy up to now was to take just into
> > account the C ABI, and not the C++ one. Any opinion if we should change
> > it to take into account the C++ ABI as well ?
> 
> I can see the point, but the other half of the situation is that
> packages do (or should) make a significant effort not to have ABI
> changes.  With C ABIs, that seems to work pretty well.   I have the
> impression that C++ ABIs are much more unstable, and they also seem to
> change in practice when changing compilers.  So I am left wondering how
> much stability benefit there really is for C++ by adopting such a
> change.
> 
> Would you expect a C++ ABI change every release? 

Except for bugfixes releases, in practice yes for the yearly "feature" release 
("feature" meaning here a change of major or minor in the "GDAL 
major.minor.micro" scheme), as adding a new capability / virtual method, or a 
new optional parmeter, etc... changes the C++ ABI.

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Tue Jun 14 07:22:53 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 14 Jun 2016 16:22:53 +0200
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <57600E66.4030504@gmail.com>
References: <201606141129.40619.even.rouault@spatialys.com>
 <201606141551.48040.even.rouault@spatialys.com> <57600E66.4030504@gmail.com>
Message-ID: <201606141622.54142.even.rouault@spatialys.com>

Le mardi 14 juin 2016 16:02:14, Ari Jolma a écrit :
> 14.06.2016, 16:51, Even Rouault kirjoitti:
> > Side remark: I'm surprised to not see QGIS listed in the C API only
> > users. I've never seen use of the GDAL C++ API in it.
> 
> At least heatmap.cpp seems to include gdal_priv.h
> 
> I don't have deeper knowledge why.

Good point (heatmapgui.cpp as well). Skimming quickly through it, it seems it 
could just be trivially converted to using C API only. Probably just a design 
shortcoming.
I've created https://hub.qgis.org/issues/15028

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sebastic at xs4all.nl  Tue Jun 14 07:33:04 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 14 Jun 2016 16:33:04 +0200
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <201606141551.48040.even.rouault@spatialys.com>
References: <201606141129.40619.even.rouault@spatialys.com>
 <f90b4ea4ff9e7cfbff4b77c078de43d2@xs4all.nl>
 <201606141551.48040.even.rouault@spatialys.com>
Message-ID: <6f6351e6e2e31116c547ae5f27a9765c@xs4all.nl>

On 2016-06-14 15:51, Even Rouault wrote:
> Le mardi 14 juin 2016 12:13:49, Bas Couwenberg a écrit :
>> In Debian we mark the libgdal C++ symbols and add a dependency on the
>> version specific virtual ABI package provided by the libgdal20 package
>> to all packages that use any of the C++ symbols. Most reverse
>> dependencies of GDAL use (some) C++ symbols, requiring a rebuild of
>> these packages for every new release of GDAL uploaded to Debian. Only
>> the gmt, imposm, mapcache, mapserver, ncl, osmium, postgis, xastir,
>> grass & pyosmium packages don't use any C++ symbols (10 out of 37).
> 
> Side remark: I'm surprised to not see QGIS listed in the C API only 
> users.
> I've never seen use of the GDAL C++ API in it.
> Same for Fiona & RasterIO

RasterIO uses several C++ classes in rasterio/_warp.pyx, 
GDALWarpOperation & OGRCoordinateTransformation for example.

Fiona also uses several C++ classes in fiona/_transform.pyx, like 
RasterIO OGRCoordinateTransformation is one of them.

Kind Regards,

Bas

From even.rouault at spatialys.com  Tue Jun 14 07:46:05 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 14 Jun 2016 16:46:05 +0200
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <6f6351e6e2e31116c547ae5f27a9765c@xs4all.nl>
References: <201606141129.40619.even.rouault@spatialys.com>
 <201606141551.48040.even.rouault@spatialys.com>
 <6f6351e6e2e31116c547ae5f27a9765c@xs4all.nl>
Message-ID: <201606141646.05652.even.rouault@spatialys.com>

Le mardi 14 juin 2016 16:33:04, Bas Couwenberg a écrit :
> On 2016-06-14 15:51, Even Rouault wrote:
> > Le mardi 14 juin 2016 12:13:49, Bas Couwenberg a écrit :
> >> In Debian we mark the libgdal C++ symbols and add a dependency on the
> >> version specific virtual ABI package provided by the libgdal20 package
> >> to all packages that use any of the C++ symbols. Most reverse
> >> dependencies of GDAL use (some) C++ symbols, requiring a rebuild of
> >> these packages for every new release of GDAL uploaded to Debian. Only
> >> the gmt, imposm, mapcache, mapserver, ncl, osmium, postgis, xastir,
> >> grass & pyosmium packages don't use any C++ symbols (10 out of 37).
> > 
> > Side remark: I'm surprised to not see QGIS listed in the C API only
> > users.
> > I've never seen use of the GDAL C++ API in it.
> > Same for Fiona & RasterIO
> 
> RasterIO uses several C++ classes in rasterio/_warp.pyx,
> GDALWarpOperation & OGRCoordinateTransformation for example.

Interesting... (so in what you wrote above, I assume you've an automated 
script to figure out if C++ symbols are used ?)

For the GDALWarpOperation case, at first sight, it seems that there should be 
everything needed in the C API.

For OGRCoordinateTransformation case, it seems to be related to the use of 
OGRGeometryFactory::transformWithOptions() which is indeed C++ only.

> 
> Fiona also uses several C++ classes in fiona/_transform.pyx, like
> RasterIO OGRCoordinateTransformation is one of them.

Same as above. Use of OGRGeometryFactory::transformWithOptions()

> 
> Kind Regards,
> 
> Bas
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From julien.michel at cnes.fr  Tue Jun 14 08:27:01 2016
From: julien.michel at cnes.fr (Julien Michel)
Date: Tue, 14 Jun 2016 17:27:01 +0200
Subject: [gdal-dev] Programmatic creation of VRT
Message-ID: <57602245.6000001@cnes.fr>

Dear all,

Quick question about VRT programmatic creation. I have a list of files 
corresponding to different tiles of an image and I am writing some code 
to generate a mosaic VRT. For now I do it by directly writing XML to 
iostream but I saw that there is actually an API to do this in GDAL. 
This would be more convenient to report correctly metadata, geotransform 
and wkt ... Thing is, from the doxygen of VRTRasterBand and VRTDataset, 
it is not obvious if and how this can be done, and the VRT tutorial does 
not help much (my use case does not correspond to any of those 
presented). Does somebody know how to do this, or shall I stick to 
writing my own XML stuff to iostream ?

Thanks for your help,

Regards,

Julien

-- 
Julien MICHEL
CNES - DCT/SI/AP


From sebastic at xs4all.nl  Tue Jun 14 08:30:06 2016
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Tue, 14 Jun 2016 17:30:06 +0200
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <201606141646.05652.even.rouault@spatialys.com>
References: <201606141129.40619.even.rouault@spatialys.com>
 <201606141551.48040.even.rouault@spatialys.com>
 <6f6351e6e2e31116c547ae5f27a9765c@xs4all.nl>
 <201606141646.05652.even.rouault@spatialys.com>
Message-ID: <90dfb6e4e8a9b6ec308b2b12740292b4@xs4all.nl>

On 2016-06-14 16:46, Even Rouault wrote:
> Le mardi 14 juin 2016 16:33:04, Bas Couwenberg a écrit :
>> On 2016-06-14 15:51, Even Rouault wrote:
>> > Le mardi 14 juin 2016 12:13:49, Bas Couwenberg a écrit :
>> >> In Debian we mark the libgdal C++ symbols and add a dependency on the
>> >> version specific virtual ABI package provided by the libgdal20 package
>> >> to all packages that use any of the C++ symbols. Most reverse
>> >> dependencies of GDAL use (some) C++ symbols, requiring a rebuild of
>> >> these packages for every new release of GDAL uploaded to Debian. Only
>> >> the gmt, imposm, mapcache, mapserver, ncl, osmium, postgis, xastir,
>> >> grass & pyosmium packages don't use any C++ symbols (10 out of 37).
>> >
>> > Side remark: I'm surprised to not see QGIS listed in the C API only
>> > users.
>> > I've never seen use of the GDAL C++ API in it.
>> > Same for Fiona & RasterIO
>> 
>> RasterIO uses several C++ classes in rasterio/_warp.pyx,
>> GDALWarpOperation & OGRCoordinateTransformation for example.
> 
> Interesting... (so in what you wrote above, I assume you've an 
> automated
> script to figure out if C++ symbols are used ?)

For the Debian package the dpkg-gensymbols utility is used to generate 
the symbols provided by libgdal. Because the C++ symbols can differ per 
architecture, separate symbols files are used for every architecture. 
The gdal-symbols.pl script [0] is used to update the symbols files for 
new releases, it includes splitting the C & C++ symbols for which it 
relies on c++filt to determine which symbols are for C++ code based on 
the diff between the c++filt output and the unmodified symbols file.

[0] 
https://anonscm.debian.org/cgit/pkg-grass/gdal.git/tree/debian/gdal-symbols.pl

To find out why fiona & rasterio were not listed among the C API only 
users, I grepped their sources for classes listed in the C++ symbols 
file for am64 [1] which revealed the "cdef cppclass" results.

[1] 
https://anonscm.debian.org/cgit/pkg-grass/gdal.git/tree/debian/libgdal20.symbols.amd64

Kind Regards,

Bas

From even.rouault at spatialys.com  Tue Jun 14 08:37:46 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 14 Jun 2016 17:37:46 +0200
Subject: [gdal-dev] Programmatic creation of VRT
In-Reply-To: <57602245.6000001@cnes.fr>
References: <57602245.6000001@cnes.fr>
Message-ID: <201606141737.46614.even.rouault@spatialys.com>

Le mardi 14 juin 2016 17:27:01, Julien Michel a écrit :
> Dear all,
> 
> Quick question about VRT programmatic creation. I have a list of files
> corresponding to different tiles of an image and I am writing some code
> to generate a mosaic VRT. For now I do it by directly writing XML to
> iostream but I saw that there is actually an API to do this in GDAL.
> This would be more convenient to report correctly metadata, geotransform
> and wkt ... Thing is, from the doxygen of VRTRasterBand and VRTDataset,
> it is not obvious if and how this can be done, and the VRT tutorial does
> not help much (my use case does not correspond to any of those
> presented). Does somebody know how to do this, or shall I stick to
> writing my own XML stuff to iostream ?

Julien,

Since GDAL 2.1, if your need is basically what gdalbuildvrt does, you could 
call GDALBuildVRT() :
http://gdal.org/gdal__utils_8h.html#a057aaea8b0ed0476809a781ffa377ea4

Otherwise, you can study how VRTBuilder::CreateVRTNonSeparate() uses the 
VRTDataset/Band API :
https://github.com/OSGeo/gdal/blob/trunk/gdal/apps/gdalbuildvrt_lib.cpp#L848

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gdt at ir.bbn.com  Tue Jun 14 08:47:34 2016
From: gdt at ir.bbn.com (Greg Troxel)
Date: Tue, 14 Jun 2016 11:47:34 -0400
Subject: [gdal-dev] libtool numbering policy
In-Reply-To: <201606141613.13661.even.rouault@spatialys.com> (Even Rouault's
 message of "Tue, 14 Jun 2016 16:13:13 +0200")
References: <201606141129.40619.even.rouault@spatialys.com>
 <rmia8iohsng.fsf@fnord.ir.bbn.com>
 <201606141613.13661.even.rouault@spatialys.com>
Message-ID: <rmishwfg4bt.fsf@fnord.ir.bbn.com>


Even Rouault <even.rouault at spatialys.com> writes:

>> Would you expect a C++ ABI change every release? 
>
> Except for bugfixes releases, in practice yes for the yearly "feature" release 
> ("feature" meaning here a change of major or minor in the "GDAL 
> major.minor.micro" scheme), as adding a new capability / virtual method, or a 
> new optional parmeter, etc... changes the C++ ABI.

This seems to be the collision between C ABI stability and C++ ABIs that
I expected.  I think that argues for separating them; things in C++ seem
to essentially have to rebuild on most changes, where C isn't like that.

(I tend to look after gdal in pkgsrc, but I haven't run into this yet.)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 180 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160614/04f56dc6/attachment.sig>

From tomerlieber at gmail.com  Tue Jun 14 11:16:58 2016
From: tomerlieber at gmail.com (Tomer)
Date: Tue, 14 Jun 2016 11:16:58 -0700 (PDT)
Subject: [gdal-dev] SetSpatialFilter and Spatial Index
Message-ID: <1465928218913-5271637.post@n6.nabble.com>

Hi,

If I use the function SetSpatialFilter on a layer of a shp file with spatial
index(.qix), will the function use the index to decide which features are
suitable?

Thanks,
Tomer



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/SetSpatialFilter-and-Spatial-Index-tp5271637.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From jukka.rahkonen at maanmittauslaitos.fi  Wed Jun 15 03:40:57 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Wed, 15 Jun 2016 10:40:57 +0000 (UTC)
Subject: [gdal-dev] =?utf-8?q?Is_option_--utility=5Fversion_documented=3F?=
Message-ID: <loom.20160615T123446-51@post.gmane.org>

Hi,

I noticed an utility program option --utility_version from
https://trac.osgeo.org/gdal/changeset/34340.

Am I right that this option does not appear in any user documentation? If
not I would like to add it into http://gdal.org/ogr_utilities.html and
http://gdal.org/gdal_utilities.html

Option returns for example
"gdalinfo was compiled against GDAL 2.1.0dev and is running against GDAL
2.1.0dev"

Is it possible the compile and runtime versions are different? What can lead
to such situation, and what trouble it makes?

-Jukka Rahkonen-


From even.rouault at spatialys.com  Wed Jun 15 03:53:26 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 15 Jun 2016 12:53:26 +0200
Subject: [gdal-dev] Is option --utility_version documented?
In-Reply-To: <loom.20160615T123446-51@post.gmane.org>
References: <loom.20160615T123446-51@post.gmane.org>
Message-ID: <201606151253.26747.even.rouault@spatialys.com>

Hi Jukka,
> 
> I noticed an utility program option --utility_version from
> https://trac.osgeo.org/gdal/changeset/34340.
> 
> Am I right that this option does not appear in any user documentation? If
> not I would like to add it into http://gdal.org/ogr_utilities.html and
> http://gdal.org/gdal_utilities.html

I'm not completely sure it is really needed to document it, at least not in a 
prominent way. This is mostly an advanced option to help diagnosing issues.

> 
> Option returns for example
> "gdalinfo was compiled against GDAL 2.1.0dev and is running against GDAL
> 2.1.0dev"
> 
> Is it possible the compile and runtime versions are different? 

Yes, that could potentially happen. If you look at the "About" dialog of QGIS, 
you will see similar things.

> What can
> lead to such situation, 

PATH / LD_LIBRARY_PATH issues

> and what trouble it makes?

It depends on the utility. If it uses the C API and it has been compiled 
against version X and is running against libgdal Y > X, then it is likely to 
work. Otherwise there's a high chance it results in crashing.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From darren.ives at km.kongsberg.com  Wed Jun 15 07:51:30 2016
From: darren.ives at km.kongsberg.com (Darren Ives)
Date: Wed, 15 Jun 2016 14:51:30 +0000
Subject: [gdal-dev] OGR s57 reader possible expansion to read Inland ENCs
Message-ID: <dfd2005f4462499890d471e8a42fd0a7@exchmbnodat10.kongsberg.master.int>

Hello,

Currently we are using the s57 reader from OGR in a project, it is used to import s57 files and for that it works perfectly.  We would like to import Inland ENC files (http://ienc.openecdis.org/ Wikipedia: Inland_Electronic_Navigational_Charts<https://en.wikipedia.org/wiki/Inland_Electronic_Navigational_Charts>), which is essentially an extended s57 format (more detailed, extra objects and their attributes etc).

I have searched through the gdal-dev archives, looking for any previous reference to Inland ENCs but have found none.  Has anyone looked at this before?

I am guessing that it hasn't be implemented and, as such, I would like to give it a try.  Our theory is that by expanding the csv files (s57attritubes s57objectclasses whatever) to add the Inland ENC attributes etc it would be enough to read the Inland ENC files.  Does anyone know if this could be the solution?

Any further information would be gratefully received.


Thanks,

Darren Ives

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160615/36929f56/attachment.html>

From trajce.nikolov.nick at gmail.com  Wed Jun 15 09:27:33 2016
From: trajce.nikolov.nick at gmail.com (Trajce Nikolov NICK)
Date: Wed, 15 Jun 2016 18:27:33 +0200
Subject: [gdal-dev] supportive data files for re-projection
Message-ID: <CAO-+zi=0p+DDZ94pcnR4tEBGa7msAmc=3kbXLv89QefVhFjtUg@mail.gmail.com>

Hi Community,

I am new in town ;-). But using gdal for a decade or so. Never been in
situation as now, when I have to filter the data/files that come with gdal
for the installer of the software from our company.

There are bunch of files located in the gdal/data folder and I need to know
which are the ones that are needed for re-projecting of source files
(elevation, vector files)

Thanks a bunch for any hint!

Cheers,
Nick

-- 
trajce nikolov nick
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160615/03f013f9/attachment.html>

From even.rouault at spatialys.com  Wed Jun 15 10:13:51 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 15 Jun 2016 19:13:51 +0200
Subject: [gdal-dev] supportive data files for re-projection
In-Reply-To: <CAO-+zi=0p+DDZ94pcnR4tEBGa7msAmc=3kbXLv89QefVhFjtUg@mail.gmail.com>
References: <CAO-+zi=0p+DDZ94pcnR4tEBGa7msAmc=3kbXLv89QefVhFjtUg@mail.gmail.com>
Message-ID: <201606151913.52098.even.rouault@spatialys.com>

Le mercredi 15 juin 2016 18:27:33, Trajce Nikolov NICK a écrit :
> Hi Community,
> 
> I am new in town ;-). But using gdal for a decade or so. Never been in
> situation as now, when I have to filter the data/files that come with gdal
> for the installer of the software from our company.
> 
> There are bunch of files located in the gdal/data folder and I need to know
> which are the ones that are needed for re-projecting of source files
> (elevation, vector files)

Foreword notice: you break the warranty by cherry picking some of the data 
files
Foreword notice 2: GDAL comes without any warranty (unless you pay a service 
provider)

That said, those ones should be sufficient :

$ grep CSVFilename ogr/ogr_fromepsg.cpp
    const char *pszFilename = CSVFilename( "unit_of_measure.csv" );
    const char *uom_filename = CSVFilename( "unit_of_measure.csv" );
    const char *pszFilename = CSVFilename("gcs.override.csv");
        pszFilename = CSVFilename("gcs.csv");
    const char *PM_FILENAME = CSVFilename("prime_meridian.csv");
    const char  *pszFilename = CSVFilename("gcs.override.csv");
        pszFilename = CSVFilename("gcs.csv");
        CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
    const int nUOMLength = atoi(CSVGetField( CSVFilename("ellipsoid.csv" ),
            CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
                CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
            CPLStrdup(CSVGetField( CSVFilename("ellipsoid.csv" ),
    CPLString osFilename = CSVFilename( "pcs.override.csv" );
        osFilename = CSVFilename( "pcs.csv" );
    const char *pszFilename = CSVFilename( "pcs.override.csv" );
        pszFilename = CSVFilename( "pcs.csv" );
    const char *pszFilename = CSVFilename( "coordinate_axis.csv" );
    const char  *pszFilename = CSVFilename( "vertcs.override.csv" );
        pszFilename = CSVFilename( "vertcs.csv" );
//    pszFilename = CSVFilename( "compdcs.override.csv" );
    const char  *pszFilename = CSVFilename( "compdcs.csv" );
//    pszFilename = CSVFilename( "compdcs.override.csv" );
    const char *pszFilename = CSVFilename( "geoccs.csv" );
    if( CSVScanFileByName( CSVFilename( "gcs.csv" ),
                  CSVFilename( "gcs.csv" ) );
        atoi( CSVGetField( CSVFilename( "stateplane.csv" ),

gdal_datum.csv might also be needed for shapefiles

If you just need to handle a few projections, you could strip much of the 
information from the above files, but that requires some knowledge...

( you may also need the grids from proj.4 data files )

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From schwehr at gmail.com  Wed Jun 15 11:06:40 2016
From: schwehr at gmail.com (Kurt Schwehr)
Date: Wed, 15 Jun 2016 11:06:40 -0700
Subject: [gdal-dev] supportive data files for re-projection
In-Reply-To: <201606151913.52098.even.rouault@spatialys.com>
References: <CAO-+zi=0p+DDZ94pcnR4tEBGa7msAmc=3kbXLv89QefVhFjtUg@mail.gmail.com>
 <201606151913.52098.even.rouault@spatialys.com>
Message-ID: <CACmBxysFOmLyNcBdCBTzMECuuxBTOsK2KqirUBhG=gsN_NhGkw@mail.gmail.com>

Nick,

What Even said and here is the list of files I use for a very restricted
build of GDAL with just a minimum of drivers.  e.g. I don't build support
for S57, so I don't include the S57 only data files.  But if you include
GML, you might need gml_registry.xml and the files that the xml references.

-kurt

Not used only applies to my very funky build env.

    "compdcs.csv",          // Used by ogr_fromepsg.cpp.
    "coordinate_axis.csv",  // Used by ogr_fromepsg.cpp, gt_wkt_srs.cpp.
    "cubewerx_extra.wkt",   // Used by epsg.wkt.
    // "datum_shift.csv",   // Not used.
    "ecw_cs.wkt",           // Used by ogr_srs_erm.cpp, ecwdataset.cpp.
    "ellipsoid.csv",        // Used by geo_normalize.c, ogr_fromepsg.cpp.
    "epsg.wkt",             // Used by ogr_fromepsg.cpp.
    "esri_extra.wkt",       // Used by epsg.wkt.
    "esri_StatePlane_extra.wkt",  // Used by ogr_srs_esri.cpp.
    "esri_Wisconsin_extra.wkt",   // Used by ogr_srs_esri.cpp.
    "gcs.csv",              // Used by geo_normalize.c, ogr_fromepsg.cpp,
                            // ogr_srs_esri.cpp, sqlite.
    "gcs.override.csv",     // Used by  geo_normalize.c, ogr_fromepsg.cpp.
    "gdal_datum.csv",       // Used by geo_normalize.c, ogr_srs_esri.cpp,
                            // gt_wkt_srs.cpp.
    "geoccs.csv",           // Used by ogr_fromepsg.cpp.
    "gml_registry.xml",     // Used by gmlregistry.cpp,
ogrgmldatasource.cpp.
    "gt_datum.csv",         // Used by nitfdataset.cpp.
    "gt_ellips.csv",        // Used by nitfdataset.cpp.
    // "header.dxf",        // Used by ogrdxfwriterds.cpp, which is not
used.
    "inspire_cp_BasicPropertyUnit.gfs",  // Used by gml_registry.xml.
    "inspire_cp_CadastralBoundary.gfs",  // Used by gml_registry.xml.
    "inspire_cp_CadastralParcel.gfs",    // Used by gml_registry.xml.
    "inspire_cp_CadastralZoning.gfs",    // Used by gml_registry.xml.
    "nitf_spec.xml",        // Used by nitffile.c.
    // "nitf_spec.xsd",     // Used by nitf_spec.xml, which is not used.
    // "osmconf.ini",       // Used by ogrosmdatasource.cpp, which is not
used.
    "ogrvrt.xsd",           // Used by ogrvrtdriver.cpp.
    "ozi_datum.csv",        // Used by ogr_srs_ozi.cpp.
    "ozi_ellips.csv",       // Used by ogr_srs_ozi.cpp.
    "pci_datum.txt",        // Used by ogr_srs_pci.cpp.
    "pci_ellips.txt",       // Used by ogr_srs_pci.cpp.
    "pcs.csv",              // Used by  geo_normalize.c, ogr_fromepsg.cpp.
    "pcs.override.csv",     // Used by geo_normalize.c, ogr_fromepsg.cpp.
    "prime_meridian.csv",   // Used by geo_normalize.c, ogr_fromepsg.cpp,
rgdal.
    "projop_wparm.csv",     // Used by geo_normalize.c.
    "ruian_vf_ob_v1.gfs",   // Used by gml_registry.xml.
    "ruian_vf_st_uvoh_v1.gfs",  // Used by gml_registry.xml.
    "ruian_vf_st_v1.gfs",   // Used by gml_registry.xml.
    "ruian_vf_v1.gfs",      // Used by gml_registry.xml.
    // S57 driver.
    // "s57agencies.csv",   // Not used.
    // "s57attributes_aml.csv",     // Not used.
    // "s57attributes.csv",         // Not used.
    // "s57attributes_iw.csv",      // Not used.
    // "s57expectedinput.csv",      // Not used.
    // "s57objectclasses_aml.csv",  // Not used.
    // "s57objectclasses.csv",      // Not used.
    // "s57objectclasses_iw.csv",   // Not used.
    // "seed_2d.dgn",       // DGN driver, not used.
    // "seed_3d.dgn",       // DGN driver, not used.
    "stateplane.csv",       // Used by ogr_fromepsg.cpp and IDRISI driver.
    // "trailer.dxf",       // DXF driver, not used.
    "unit_of_measure.csv",  // Used by geo_normalize.c, ogr_fromepsg.cpp,
etc.
    "vertcs.csv",           // Used by gt_wkt_srs.cpp and ogr_fromepsg.cpp.
    "vertcs.override.csv",  // Used by ogr_fromepsg.cpp.


On Wed, Jun 15, 2016 at 10:13 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Le mercredi 15 juin 2016 18:27:33, Trajce Nikolov NICK a écrit :
> > Hi Community,
> >
> > I am new in town ;-). But using gdal for a decade or so. Never been in
> > situation as now, when I have to filter the data/files that come with
> gdal
> > for the installer of the software from our company.
> >
> > There are bunch of files located in the gdal/data folder and I need to
> know
> > which are the ones that are needed for re-projecting of source files
> > (elevation, vector files)
>
> Foreword notice: you break the warranty by cherry picking some of the data
> files
> Foreword notice 2: GDAL comes without any warranty (unless you pay a
> service
> provider)
>
> That said, those ones should be sufficient :
>
> $ grep CSVFilename ogr/ogr_fromepsg.cpp
>     const char *pszFilename = CSVFilename( "unit_of_measure.csv" );
>     const char *uom_filename = CSVFilename( "unit_of_measure.csv" );
>     const char *pszFilename = CSVFilename("gcs.override.csv");
>         pszFilename = CSVFilename("gcs.csv");
>     const char *PM_FILENAME = CSVFilename("prime_meridian.csv");
>     const char  *pszFilename = CSVFilename("gcs.override.csv");
>         pszFilename = CSVFilename("gcs.csv");
>         CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>     const int nUOMLength = atoi(CSVGetField( CSVFilename("ellipsoid.csv" ),
>             CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>                 CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>             CPLStrdup(CSVGetField( CSVFilename("ellipsoid.csv" ),
>     CPLString osFilename = CSVFilename( "pcs.override.csv" );
>         osFilename = CSVFilename( "pcs.csv" );
>     const char *pszFilename = CSVFilename( "pcs.override.csv" );
>         pszFilename = CSVFilename( "pcs.csv" );
>     const char *pszFilename = CSVFilename( "coordinate_axis.csv" );
>     const char  *pszFilename = CSVFilename( "vertcs.override.csv" );
>         pszFilename = CSVFilename( "vertcs.csv" );
> //    pszFilename = CSVFilename( "compdcs.override.csv" );
>     const char  *pszFilename = CSVFilename( "compdcs.csv" );
> //    pszFilename = CSVFilename( "compdcs.override.csv" );
>     const char *pszFilename = CSVFilename( "geoccs.csv" );
>     if( CSVScanFileByName( CSVFilename( "gcs.csv" ),
>                   CSVFilename( "gcs.csv" ) );
>         atoi( CSVGetField( CSVFilename( "stateplane.csv" ),
>
> gdal_datum.csv might also be needed for shapefiles
>
> If you just need to handle a few projections, you could strip much of the
> information from the above files, but that requires some knowledge...
>
> ( you may also need the grids from proj.4 data files )
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160615/fd4a5b72/attachment-0001.html>

From trajce.nikolov.nick at gmail.com  Wed Jun 15 11:12:34 2016
From: trajce.nikolov.nick at gmail.com (Trajce Nikolov NICK)
Date: Wed, 15 Jun 2016 20:12:34 +0200
Subject: [gdal-dev] supportive data files for re-projection
In-Reply-To: <CACmBxysFOmLyNcBdCBTzMECuuxBTOsK2KqirUBhG=gsN_NhGkw@mail.gmail.com>
References: <CAO-+zi=0p+DDZ94pcnR4tEBGa7msAmc=3kbXLv89QefVhFjtUg@mail.gmail.com>
 <201606151913.52098.even.rouault@spatialys.com>
 <CACmBxysFOmLyNcBdCBTzMECuuxBTOsK2KqirUBhG=gsN_NhGkw@mail.gmail.com>
Message-ID: <CAO-+zin08b9nBSPwuP1S-weWpiBcffqGUaZvMxE80gM7jeBtRg@mail.gmail.com>

Thanks Kurt , Even .. This is exactly what I need !

Thanks a bunch again!

Cheers,
Nick

On Wed, Jun 15, 2016 at 8:06 PM, Kurt Schwehr <schwehr at gmail.com> wrote:

> Nick,
>
> What Even said and here is the list of files I use for a very restricted
> build of GDAL with just a minimum of drivers.  e.g. I don't build support
> for S57, so I don't include the S57 only data files.  But if you include
> GML, you might need gml_registry.xml and the files that the xml references.
>
> -kurt
>
> Not used only applies to my very funky build env.
>
>     "compdcs.csv",          // Used by ogr_fromepsg.cpp.
>     "coordinate_axis.csv",  // Used by ogr_fromepsg.cpp, gt_wkt_srs.cpp.
>     "cubewerx_extra.wkt",   // Used by epsg.wkt.
>     // "datum_shift.csv",   // Not used.
>     "ecw_cs.wkt",           // Used by ogr_srs_erm.cpp, ecwdataset.cpp.
>     "ellipsoid.csv",        // Used by geo_normalize.c, ogr_fromepsg.cpp.
>     "epsg.wkt",             // Used by ogr_fromepsg.cpp.
>     "esri_extra.wkt",       // Used by epsg.wkt.
>     "esri_StatePlane_extra.wkt",  // Used by ogr_srs_esri.cpp.
>     "esri_Wisconsin_extra.wkt",   // Used by ogr_srs_esri.cpp.
>     "gcs.csv",              // Used by geo_normalize.c, ogr_fromepsg.cpp,
>                             // ogr_srs_esri.cpp, sqlite.
>     "gcs.override.csv",     // Used by  geo_normalize.c, ogr_fromepsg.cpp.
>     "gdal_datum.csv",       // Used by geo_normalize.c, ogr_srs_esri.cpp,
>                             // gt_wkt_srs.cpp.
>     "geoccs.csv",           // Used by ogr_fromepsg.cpp.
>     "gml_registry.xml",     // Used by gmlregistry.cpp,
> ogrgmldatasource.cpp.
>     "gt_datum.csv",         // Used by nitfdataset.cpp.
>     "gt_ellips.csv",        // Used by nitfdataset.cpp.
>     // "header.dxf",        // Used by ogrdxfwriterds.cpp, which is not
> used.
>     "inspire_cp_BasicPropertyUnit.gfs",  // Used by gml_registry.xml.
>     "inspire_cp_CadastralBoundary.gfs",  // Used by gml_registry.xml.
>     "inspire_cp_CadastralParcel.gfs",    // Used by gml_registry.xml.
>     "inspire_cp_CadastralZoning.gfs",    // Used by gml_registry.xml.
>     "nitf_spec.xml",        // Used by nitffile.c.
>     // "nitf_spec.xsd",     // Used by nitf_spec.xml, which is not used.
>     // "osmconf.ini",       // Used by ogrosmdatasource.cpp, which is not
> used.
>     "ogrvrt.xsd",           // Used by ogrvrtdriver.cpp.
>     "ozi_datum.csv",        // Used by ogr_srs_ozi.cpp.
>     "ozi_ellips.csv",       // Used by ogr_srs_ozi.cpp.
>     "pci_datum.txt",        // Used by ogr_srs_pci.cpp.
>     "pci_ellips.txt",       // Used by ogr_srs_pci.cpp.
>     "pcs.csv",              // Used by  geo_normalize.c, ogr_fromepsg.cpp.
>     "pcs.override.csv",     // Used by geo_normalize.c, ogr_fromepsg.cpp.
>     "prime_meridian.csv",   // Used by geo_normalize.c, ogr_fromepsg.cpp,
> rgdal.
>     "projop_wparm.csv",     // Used by geo_normalize.c.
>     "ruian_vf_ob_v1.gfs",   // Used by gml_registry.xml.
>     "ruian_vf_st_uvoh_v1.gfs",  // Used by gml_registry.xml.
>     "ruian_vf_st_v1.gfs",   // Used by gml_registry.xml.
>     "ruian_vf_v1.gfs",      // Used by gml_registry.xml.
>     // S57 driver.
>     // "s57agencies.csv",   // Not used.
>     // "s57attributes_aml.csv",     // Not used.
>     // "s57attributes.csv",         // Not used.
>     // "s57attributes_iw.csv",      // Not used.
>     // "s57expectedinput.csv",      // Not used.
>     // "s57objectclasses_aml.csv",  // Not used.
>     // "s57objectclasses.csv",      // Not used.
>     // "s57objectclasses_iw.csv",   // Not used.
>     // "seed_2d.dgn",       // DGN driver, not used.
>     // "seed_3d.dgn",       // DGN driver, not used.
>     "stateplane.csv",       // Used by ogr_fromepsg.cpp and IDRISI driver.
>     // "trailer.dxf",       // DXF driver, not used.
>     "unit_of_measure.csv",  // Used by geo_normalize.c, ogr_fromepsg.cpp,
> etc.
>     "vertcs.csv",           // Used by gt_wkt_srs.cpp and ogr_fromepsg.cpp.
>     "vertcs.override.csv",  // Used by ogr_fromepsg.cpp.
>
>
> On Wed, Jun 15, 2016 at 10:13 AM, Even Rouault <even.rouault at spatialys.com
> > wrote:
>
>> Le mercredi 15 juin 2016 18:27:33, Trajce Nikolov NICK a écrit :
>> > Hi Community,
>> >
>> > I am new in town ;-). But using gdal for a decade or so. Never been in
>> > situation as now, when I have to filter the data/files that come with
>> gdal
>> > for the installer of the software from our company.
>> >
>> > There are bunch of files located in the gdal/data folder and I need to
>> know
>> > which are the ones that are needed for re-projecting of source files
>> > (elevation, vector files)
>>
>> Foreword notice: you break the warranty by cherry picking some of the data
>> files
>> Foreword notice 2: GDAL comes without any warranty (unless you pay a
>> service
>> provider)
>>
>> That said, those ones should be sufficient :
>>
>> $ grep CSVFilename ogr/ogr_fromepsg.cpp
>>     const char *pszFilename = CSVFilename( "unit_of_measure.csv" );
>>     const char *uom_filename = CSVFilename( "unit_of_measure.csv" );
>>     const char *pszFilename = CSVFilename("gcs.override.csv");
>>         pszFilename = CSVFilename("gcs.csv");
>>     const char *PM_FILENAME = CSVFilename("prime_meridian.csv");
>>     const char  *pszFilename = CSVFilename("gcs.override.csv");
>>         pszFilename = CSVFilename("gcs.csv");
>>         CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>>     const int nUOMLength = atoi(CSVGetField( CSVFilename("ellipsoid.csv"
>> ),
>>             CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>>                 CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>>             CPLStrdup(CSVGetField( CSVFilename("ellipsoid.csv" ),
>>     CPLString osFilename = CSVFilename( "pcs.override.csv" );
>>         osFilename = CSVFilename( "pcs.csv" );
>>     const char *pszFilename = CSVFilename( "pcs.override.csv" );
>>         pszFilename = CSVFilename( "pcs.csv" );
>>     const char *pszFilename = CSVFilename( "coordinate_axis.csv" );
>>     const char  *pszFilename = CSVFilename( "vertcs.override.csv" );
>>         pszFilename = CSVFilename( "vertcs.csv" );
>> //    pszFilename = CSVFilename( "compdcs.override.csv" );
>>     const char  *pszFilename = CSVFilename( "compdcs.csv" );
>> //    pszFilename = CSVFilename( "compdcs.override.csv" );
>>     const char *pszFilename = CSVFilename( "geoccs.csv" );
>>     if( CSVScanFileByName( CSVFilename( "gcs.csv" ),
>>                   CSVFilename( "gcs.csv" ) );
>>         atoi( CSVGetField( CSVFilename( "stateplane.csv" ),
>>
>> gdal_datum.csv might also be needed for shapefiles
>>
>> If you just need to handle a few projections, you could strip much of the
>> information from the above files, but that requires some knowledge...
>>
>> ( you may also need the grids from proj.4 data files )
>>
>> Even
>>
>> --
>> Spatialys - Geospatial professional services
>> http://www.spatialys.com
>> _______________________________________________
>> gdal-dev mailing list
>> gdal-dev at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>
>
>
>
> --
> --
> http://schwehr.org
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
>



-- 
trajce nikolov nick
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160615/6b6a6403/attachment.html>

From laebe at geomapping.de  Wed Jun 15 22:57:58 2016
From: laebe at geomapping.de (=?utf-8?B?TMOkYmUsIEhvbGdlcg==?=)
Date: Thu, 16 Jun 2016 05:57:58 +0000
Subject: [gdal-dev] OGR s57 reader possible expansion to read Inland
Message-ID: <91e176544eea4e2f922640dd3c98c1bb@EX132MBOX1A.de2.local>

Darren,
reading Inland ENC is well supported. In GDAL_DATA folder you should find s57*_iw.csv files. "iw" means Inland Waterways.

In order to use these you can set S57_PROFILE to "iw".

The csv might be outdated, depending on you IENC data  version.

Holger 

-----Ursprüngliche Nachricht-----
Von: gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] Im Auftrag von gdal-dev-request at lists.osgeo.org
Gesendet: Mittwoch, 15. Juni 2016 20:07
An: gdal-dev at lists.osgeo.org
Betreff: gdal-dev Digest, Vol 145, Issue 25

Send gdal-dev mailing list submissions to
	gdal-dev at lists.osgeo.org

To subscribe or unsubscribe via the World Wide Web, visit
	http://lists.osgeo.org/mailman/listinfo/gdal-dev
or, via email, send a message with subject or body 'help' to
	gdal-dev-request at lists.osgeo.org

You can reach the person managing the list at
	gdal-dev-owner at lists.osgeo.org

When replying, please edit your Subject line so it is more specific than "Re: Contents of gdal-dev digest..."


Today's Topics:

   1. Is option --utility_version documented? (Jukka Rahkonen)
   2. Re: Is option --utility_version documented? (Even Rouault)
   3. OGR s57 reader possible expansion to read Inland ENCs
      (Darren Ives)
   4. supportive data files for re-projection (Trajce Nikolov NICK)
   5. Re: supportive data files for re-projection (Even Rouault)
   6. Re: supportive data files for re-projection (Kurt Schwehr)


----------------------------------------------------------------------

Message: 1
Date: Wed, 15 Jun 2016 10:40:57 +0000 (UTC)
From: Jukka Rahkonen <jukka.rahkonen at maanmittauslaitos.fi>
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] Is option --utility_version documented?
Message-ID: <loom.20160615T123446-51 at post.gmane.org>
Content-Type: text/plain; charset=us-ascii

Hi,

I noticed an utility program option --utility_version from https://trac.osgeo.org/gdal/changeset/34340.

Am I right that this option does not appear in any user documentation? If not I would like to add it into http://gdal.org/ogr_utilities.html and http://gdal.org/gdal_utilities.html

Option returns for example
"gdalinfo was compiled against GDAL 2.1.0dev and is running against GDAL 2.1.0dev"

Is it possible the compile and runtime versions are different? What can lead to such situation, and what trouble it makes?

-Jukka Rahkonen-



------------------------------

Message: 2
Date: Wed, 15 Jun 2016 12:53:26 +0200
From: Even Rouault <even.rouault at spatialys.com>
To: gdal-dev at lists.osgeo.org
Cc: Jukka Rahkonen <jukka.rahkonen at maanmittauslaitos.fi>
Subject: Re: [gdal-dev] Is option --utility_version documented?
Message-ID: <201606151253.26747.even.rouault at spatialys.com>
Content-Type: Text/Plain;  charset="utf-8"

Hi Jukka,
> 
> I noticed an utility program option --utility_version from 
> https://trac.osgeo.org/gdal/changeset/34340.
> 
> Am I right that this option does not appear in any user documentation? 
> If not I would like to add it into http://gdal.org/ogr_utilities.html 
> and http://gdal.org/gdal_utilities.html

I'm not completely sure it is really needed to document it, at least not in a prominent way. This is mostly an advanced option to help diagnosing issues.

> 
> Option returns for example
> "gdalinfo was compiled against GDAL 2.1.0dev and is running against 
> GDAL 2.1.0dev"
> 
> Is it possible the compile and runtime versions are different? 

Yes, that could potentially happen. If you look at the "About" dialog of QGIS, you will see similar things.

> What can
> lead to such situation,

PATH / LD_LIBRARY_PATH issues

> and what trouble it makes?

It depends on the utility. If it uses the C API and it has been compiled against version X and is running against libgdal Y > X, then it is likely to work. Otherwise there's a high chance it results in crashing.

Even

--
Spatialys - Geospatial professional services http://www.spatialys.com


------------------------------

Message: 3
Date: Wed, 15 Jun 2016 14:51:30 +0000
From: Darren Ives <darren.ives at km.kongsberg.com>
To: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: [gdal-dev] OGR s57 reader possible expansion to read Inland
	ENCs
Message-ID:
	<dfd2005f4462499890d471e8a42fd0a7 at exchmbnodat10.kongsberg.master.int>
Content-Type: text/plain; charset="utf-8"

Hello,

Currently we are using the s57 reader from OGR in a project, it is used to import s57 files and for that it works perfectly.  We would like to import Inland ENC files (http://ienc.openecdis.org/ Wikipedia: Inland_Electronic_Navigational_Charts<https://en.wikipedia.org/wiki/Inland_Electronic_Navigational_Charts>), which is essentially an extended s57 format (more detailed, extra objects and their attributes etc).

I have searched through the gdal-dev archives, looking for any previous reference to Inland ENCs but have found none.  Has anyone looked at this before?

I am guessing that it hasn't be implemented and, as such, I would like to give it a try.  Our theory is that by expanding the csv files (s57attritubes s57objectclasses whatever) to add the Inland ENC attributes etc it would be enough to read the Inland ENC files.  Does anyone know if this could be the solution?

Any further information would be gratefully received.


Thanks,

Darren Ives

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160615/36929f56/attachment-0001.html>

------------------------------

Message: 4
Date: Wed, 15 Jun 2016 18:27:33 +0200
From: Trajce Nikolov NICK <trajce.nikolov.nick at gmail.com>
To: gdal-dev at lists.osgeo.org
Subject: [gdal-dev] supportive data files for re-projection
Message-ID:
	<CAO-+zi=0p+DDZ94pcnR4tEBGa7msAmc=3kbXLv89QefVhFjtUg at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

Hi Community,

I am new in town ;-). But using gdal for a decade or so. Never been in
situation as now, when I have to filter the data/files that come with gdal
for the installer of the software from our company.

There are bunch of files located in the gdal/data folder and I need to know
which are the ones that are needed for re-projecting of source files
(elevation, vector files)

Thanks a bunch for any hint!

Cheers,
Nick

-- 
trajce nikolov nick
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160615/03f013f9/attachment-0001.html>

------------------------------

Message: 5
Date: Wed, 15 Jun 2016 19:13:51 +0200
From: Even Rouault <even.rouault at spatialys.com>
To: gdal-dev at lists.osgeo.org
Subject: Re: [gdal-dev] supportive data files for re-projection
Message-ID: <201606151913.52098.even.rouault at spatialys.com>
Content-Type: Text/Plain;  charset="utf-8"

Le mercredi 15 juin 2016 18:27:33, Trajce Nikolov NICK a écrit :
> Hi Community,
> 
> I am new in town ;-). But using gdal for a decade or so. Never been in
> situation as now, when I have to filter the data/files that come with gdal
> for the installer of the software from our company.
> 
> There are bunch of files located in the gdal/data folder and I need to know
> which are the ones that are needed for re-projecting of source files
> (elevation, vector files)

Foreword notice: you break the warranty by cherry picking some of the data 
files
Foreword notice 2: GDAL comes without any warranty (unless you pay a service 
provider)

That said, those ones should be sufficient :

$ grep CSVFilename ogr/ogr_fromepsg.cpp
    const char *pszFilename = CSVFilename( "unit_of_measure.csv" );
    const char *uom_filename = CSVFilename( "unit_of_measure.csv" );
    const char *pszFilename = CSVFilename("gcs.override.csv");
        pszFilename = CSVFilename("gcs.csv");
    const char *PM_FILENAME = CSVFilename("prime_meridian.csv");
    const char  *pszFilename = CSVFilename("gcs.override.csv");
        pszFilename = CSVFilename("gcs.csv");
        CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
    const int nUOMLength = atoi(CSVGetField( CSVFilename("ellipsoid.csv" ),
            CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
                CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
            CPLStrdup(CSVGetField( CSVFilename("ellipsoid.csv" ),
    CPLString osFilename = CSVFilename( "pcs.override.csv" );
        osFilename = CSVFilename( "pcs.csv" );
    const char *pszFilename = CSVFilename( "pcs.override.csv" );
        pszFilename = CSVFilename( "pcs.csv" );
    const char *pszFilename = CSVFilename( "coordinate_axis.csv" );
    const char  *pszFilename = CSVFilename( "vertcs.override.csv" );
        pszFilename = CSVFilename( "vertcs.csv" );
//    pszFilename = CSVFilename( "compdcs.override.csv" );
    const char  *pszFilename = CSVFilename( "compdcs.csv" );
//    pszFilename = CSVFilename( "compdcs.override.csv" );
    const char *pszFilename = CSVFilename( "geoccs.csv" );
    if( CSVScanFileByName( CSVFilename( "gcs.csv" ),
                  CSVFilename( "gcs.csv" ) );
        atoi( CSVGetField( CSVFilename( "stateplane.csv" ),

gdal_datum.csv might also be needed for shapefiles

If you just need to handle a few projections, you could strip much of the 
information from the above files, but that requires some knowledge...

( you may also need the grids from proj.4 data files )

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com


------------------------------

Message: 6
Date: Wed, 15 Jun 2016 11:06:40 -0700
From: Kurt Schwehr <schwehr at gmail.com>
To: Even Rouault <even.rouault at spatialys.com>
Cc: gdal dev <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] supportive data files for re-projection
Message-ID:
	<CACmBxysFOmLyNcBdCBTzMECuuxBTOsK2KqirUBhG=gsN_NhGkw at mail.gmail.com>
Content-Type: text/plain; charset="utf-8"

Nick,

What Even said and here is the list of files I use for a very restricted
build of GDAL with just a minimum of drivers.  e.g. I don't build support
for S57, so I don't include the S57 only data files.  But if you include
GML, you might need gml_registry.xml and the files that the xml references.

-kurt

Not used only applies to my very funky build env.

    "compdcs.csv",          // Used by ogr_fromepsg.cpp.
    "coordinate_axis.csv",  // Used by ogr_fromepsg.cpp, gt_wkt_srs.cpp.
    "cubewerx_extra.wkt",   // Used by epsg.wkt.
    // "datum_shift.csv",   // Not used.
    "ecw_cs.wkt",           // Used by ogr_srs_erm.cpp, ecwdataset.cpp.
    "ellipsoid.csv",        // Used by geo_normalize.c, ogr_fromepsg.cpp.
    "epsg.wkt",             // Used by ogr_fromepsg.cpp.
    "esri_extra.wkt",       // Used by epsg.wkt.
    "esri_StatePlane_extra.wkt",  // Used by ogr_srs_esri.cpp.
    "esri_Wisconsin_extra.wkt",   // Used by ogr_srs_esri.cpp.
    "gcs.csv",              // Used by geo_normalize.c, ogr_fromepsg.cpp,
                            // ogr_srs_esri.cpp, sqlite.
    "gcs.override.csv",     // Used by  geo_normalize.c, ogr_fromepsg.cpp.
    "gdal_datum.csv",       // Used by geo_normalize.c, ogr_srs_esri.cpp,
                            // gt_wkt_srs.cpp.
    "geoccs.csv",           // Used by ogr_fromepsg.cpp.
    "gml_registry.xml",     // Used by gmlregistry.cpp,
ogrgmldatasource.cpp.
    "gt_datum.csv",         // Used by nitfdataset.cpp.
    "gt_ellips.csv",        // Used by nitfdataset.cpp.
    // "header.dxf",        // Used by ogrdxfwriterds.cpp, which is not
used.
    "inspire_cp_BasicPropertyUnit.gfs",  // Used by gml_registry.xml.
    "inspire_cp_CadastralBoundary.gfs",  // Used by gml_registry.xml.
    "inspire_cp_CadastralParcel.gfs",    // Used by gml_registry.xml.
    "inspire_cp_CadastralZoning.gfs",    // Used by gml_registry.xml.
    "nitf_spec.xml",        // Used by nitffile.c.
    // "nitf_spec.xsd",     // Used by nitf_spec.xml, which is not used.
    // "osmconf.ini",       // Used by ogrosmdatasource.cpp, which is not
used.
    "ogrvrt.xsd",           // Used by ogrvrtdriver.cpp.
    "ozi_datum.csv",        // Used by ogr_srs_ozi.cpp.
    "ozi_ellips.csv",       // Used by ogr_srs_ozi.cpp.
    "pci_datum.txt",        // Used by ogr_srs_pci.cpp.
    "pci_ellips.txt",       // Used by ogr_srs_pci.cpp.
    "pcs.csv",              // Used by  geo_normalize.c, ogr_fromepsg.cpp.
    "pcs.override.csv",     // Used by geo_normalize.c, ogr_fromepsg.cpp.
    "prime_meridian.csv",   // Used by geo_normalize.c, ogr_fromepsg.cpp,
rgdal.
    "projop_wparm.csv",     // Used by geo_normalize.c.
    "ruian_vf_ob_v1.gfs",   // Used by gml_registry.xml.
    "ruian_vf_st_uvoh_v1.gfs",  // Used by gml_registry.xml.
    "ruian_vf_st_v1.gfs",   // Used by gml_registry.xml.
    "ruian_vf_v1.gfs",      // Used by gml_registry.xml.
    // S57 driver.
    // "s57agencies.csv",   // Not used.
    // "s57attributes_aml.csv",     // Not used.
    // "s57attributes.csv",         // Not used.
    // "s57attributes_iw.csv",      // Not used.
    // "s57expectedinput.csv",      // Not used.
    // "s57objectclasses_aml.csv",  // Not used.
    // "s57objectclasses.csv",      // Not used.
    // "s57objectclasses_iw.csv",   // Not used.
    // "seed_2d.dgn",       // DGN driver, not used.
    // "seed_3d.dgn",       // DGN driver, not used.
    "stateplane.csv",       // Used by ogr_fromepsg.cpp and IDRISI driver.
    // "trailer.dxf",       // DXF driver, not used.
    "unit_of_measure.csv",  // Used by geo_normalize.c, ogr_fromepsg.cpp,
etc.
    "vertcs.csv",           // Used by gt_wkt_srs.cpp and ogr_fromepsg.cpp.
    "vertcs.override.csv",  // Used by ogr_fromepsg.cpp.


On Wed, Jun 15, 2016 at 10:13 AM, Even Rouault <even.rouault at spatialys.com>
wrote:

> Le mercredi 15 juin 2016 18:27:33, Trajce Nikolov NICK a écrit :
> > Hi Community,
> >
> > I am new in town ;-). But using gdal for a decade or so. Never been in
> > situation as now, when I have to filter the data/files that come with
> gdal
> > for the installer of the software from our company.
> >
> > There are bunch of files located in the gdal/data folder and I need to
> know
> > which are the ones that are needed for re-projecting of source files
> > (elevation, vector files)
>
> Foreword notice: you break the warranty by cherry picking some of the data
> files
> Foreword notice 2: GDAL comes without any warranty (unless you pay a
> service
> provider)
>
> That said, those ones should be sufficient :
>
> $ grep CSVFilename ogr/ogr_fromepsg.cpp
>     const char *pszFilename = CSVFilename( "unit_of_measure.csv" );
>     const char *uom_filename = CSVFilename( "unit_of_measure.csv" );
>     const char *pszFilename = CSVFilename("gcs.override.csv");
>         pszFilename = CSVFilename("gcs.csv");
>     const char *PM_FILENAME = CSVFilename("prime_meridian.csv");
>     const char  *pszFilename = CSVFilename("gcs.override.csv");
>         pszFilename = CSVFilename("gcs.csv");
>         CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>     const int nUOMLength = atoi(CSVGetField( CSVFilename("ellipsoid.csv" ),
>             CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>                 CPLAtof(CSVGetField( CSVFilename("ellipsoid.csv" ),
>             CPLStrdup(CSVGetField( CSVFilename("ellipsoid.csv" ),
>     CPLString osFilename = CSVFilename( "pcs.override.csv" );
>         osFilename = CSVFilename( "pcs.csv" );
>     const char *pszFilename = CSVFilename( "pcs.override.csv" );
>         pszFilename = CSVFilename( "pcs.csv" );
>     const char *pszFilename = CSVFilename( "coordinate_axis.csv" );
>     const char  *pszFilename = CSVFilename( "vertcs.override.csv" );
>         pszFilename = CSVFilename( "vertcs.csv" );
> //    pszFilename = CSVFilename( "compdcs.override.csv" );
>     const char  *pszFilename = CSVFilename( "compdcs.csv" );
> //    pszFilename = CSVFilename( "compdcs.override.csv" );
>     const char *pszFilename = CSVFilename( "geoccs.csv" );
>     if( CSVScanFileByName( CSVFilename( "gcs.csv" ),
>                   CSVFilename( "gcs.csv" ) );
>         atoi( CSVGetField( CSVFilename( "stateplane.csv" ),
>
> gdal_datum.csv might also be needed for shapefiles
>
> If you just need to handle a few projections, you could strip much of the
> information from the above files, but that requires some knowledge...
>
> ( you may also need the grids from proj.4 data files )
>
> Even
>
> --
> Spatialys - Geospatial professional services
> http://www.spatialys.com
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev




-- 
--
http://schwehr.org
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160615/fd4a5b72/attachment.html>

------------------------------

Subject: Digest Footer

_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev

------------------------------

End of gdal-dev Digest, Vol 145, Issue 25
*****************************************

From jamessramm at gmail.com  Thu Jun 16 03:49:33 2016
From: jamessramm at gmail.com (jramm)
Date: Thu, 16 Jun 2016 03:49:33 -0700 (PDT)
Subject: [gdal-dev] Create standalone PAM datasets?
Message-ID: <1466074173678-5272004.post@n6.nabble.com>

Does GDAL offer any functionality (in the python bindings) to create a PAM
dataset (.aux.xml file) without a 'main' dataset attached?

This is a useful metadata container that we would like to use for other
formats (e.g. non spatial CSV file, which might share the same custom
metadata as a geotiff) we derive from spatial data.





--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Create-standalone-PAM-datasets-tp5272004.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From frank.broniewski at gmail.com  Thu Jun 16 04:27:22 2016
From: frank.broniewski at gmail.com (Frank Broniewski)
Date: Thu, 16 Jun 2016 13:27:22 +0200
Subject: [gdal-dev] GeoPDF
In-Reply-To: <573C811B.8000801@gmail.com>
References: <573C811B.8000801@gmail.com>
Message-ID: <57628D1A.7010404@gmail.com>

Ok, finally l found some time to investigate into making GeoPDF files 
from QGIS map composer PDFs. I've created a small python script to aid 
me in the creation of the GeoPDF 
(https://github.com/frankbroniewski/GeoPDF). It basically takes 
parameters from QGIS (map position in the page, map extent) and writes 
them to the PDF. There are 2 screenshots in the git which show the 
current data values for my test.pdf test subject. The map-composer.png 
shows the map in the QGIS map composer with the important values for 
georeferencing at the right side. layer-in-qgis.png shows the 
(unfortunately misaligned) GeoPDF in the QGIS main window.
My gdal_edit call is as follows:

gdal_edit.bat -mo "NEATLINE=POLYGON((30 30, 30 170, 220 170, 220 30, 30 
30))" -a_srs "EPSG:31466" -a_ullr 2549800.000 5491000.000 2555800.000 
5486600.000 test.pdf

 From reading the docs (the OGC ones) I thought creating a neatline and 
adding coordinates to it would be more or less sufficient. Looking at 
layer-in-qgis.png shows that gdal_edit did not (as what I expected at 
first) write the coordinates to the neatline but to the whole page area.

Is there a way to add the coordinates to the neatline instead of the 
whole PDF page? I could calculate the page's extent and use these 
values, but maybe there's a more clever approach?

I've also noticed that Adobe Acrobat Reader does not display any 
coordinates when using the measurement tool. Any ideas why this is not 
working?

The python script (polygon.py - the name's somewhat stupid) is atm only 
used to assemble the gdal_edit call while taking the map extent and map 
frame aka neatline position along with an epsg code. I'm on windows 
(osgeo4w64) and using subprocess.call on gdal_edit causes an error with 
the -a_ullr switch. Probably some parsing errors or whatnot. Anyway, 
copy&paste is as good for the moment.

So, any comments on how to proceed with the neatline are greatly 
appreciated.  I will continue to do my own research and report back on 
any successful steps achieved.

Frank


Am 18.05.2016 um 16:50 schrieb Frank Broniewski:
> Hi,
>
> I want to turn my QGIS map composer PDF into a GeoPDF or a geospatial 
> PDF. Unfortunately that is not supported, just on a per layer basis 
> from within the main program. I could export my map to TIFF with a 
> world file and use GDAL on that, but I'd like to maintain the vectors 
> and text in the output.
> Since GDAL supports the creation of GeoPDF, I'd like to ask if there 
> is some kind of documentation on the web where the standard is 
> described of if someone knows an OpenSource library which supports the 
> creation of GeoPDF.
> I thought of writing a, preferable in Python, program which would add 
> the necessary tags and data to the PDF in order to turn it into a 
> GeoPDF. But I am already stuck at the beginning, because I simply 
> cannot find a good standard documentation. What does GDAL do to turn a 
> raster file into a GeoPDF? I guess I could read the source, but I have 
> no clue on the C-language so I thought I ask here beforehand.
>
> Thanks,
>
> Frank 

From nyall.dawson at gmail.com  Thu Jun 16 04:32:42 2016
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Thu, 16 Jun 2016 21:32:42 +1000
Subject: [gdal-dev] GeoPDF
In-Reply-To: <57628D1A.7010404@gmail.com>
References: <573C811B.8000801@gmail.com>
	<57628D1A.7010404@gmail.com>
Message-ID: <CAB28AsiEr+Z2twZ3duj2jtg2hWkcz256HL8DqJU-0q2_b-B47w@mail.gmail.com>

On 16 Jun 2016 21:27, "Frank Broniewski" <frank.broniewski at gmail.com> wrote:
>
> Ok, finally l found some time to investigate into making GeoPDF files
from QGIS map composer PDFs. I've created a small python script to aid me
in the creation of the GeoPDF (https://github.com/frankbroniewski/GeoPDF).
It basically takes parameters from QGIS (map position in the page, map
extent) and writes them to the PDF. There are 2 screenshots in the git
which show the current data values for my test.pdf test subject. The
map-composer.png shows the map in the QGIS map composer with the important
values for georeferencing at the right side. layer-in-qgis.png shows the
(unfortunately misaligned) GeoPDF in the QGIS main window.
> My gdal_edit call is as follows:
>
> gdal_edit.bat -mo "NEATLINE=POLYGON((30 30, 30 170, 220 170, 220 30, 30
30))" -a_srs "EPSG:31466" -a_ullr 2549800.000 5491000.000 2555800.000
5486600.000 test.pdf
>
> From reading the docs (the OGC ones) I thought creating a neatline and
adding coordinates to it would be more or less sufficient. Looking at
layer-in-qgis.png shows that gdal_edit did not (as what I expected at
first) write the coordinates to the neatline but to the whole page area.
>
> Is there a way to add the coordinates to the neatline instead of the
whole PDF page? I could calculate the page's extent and use these values,
but maybe there's a more clever approach?

I can't help with this, but you may be interested to know that QGIS 2.16
will natively georeference composer PDF outputs. This feature was added
during the recent hackfest in Girona.

Cheers,
Nyall

>
> I've also noticed that Adobe Acrobat Reader does not display any
coordinates when using the measurement tool. Any ideas why this is not
working?
>
> The python script (polygon.py - the name's somewhat stupid) is atm only
used to assemble the gdal_edit call while taking the map extent and map
frame aka neatline position along with an epsg code. I'm on windows
(osgeo4w64) and using subprocess.call on gdal_edit causes an error with the
-a_ullr switch. Probably some parsing errors or whatnot. Anyway, copy&paste
is as good for the moment.
>
> So, any comments on how to proceed with the neatline are greatly
appreciated.  I will continue to do my own research and report back on any
successful steps achieved.
>
> Frank
>
>
>
> Am 18.05.2016 um 16:50 schrieb Frank Broniewski:
>>
>> Hi,
>>
>> I want to turn my QGIS map composer PDF into a GeoPDF or a geospatial
PDF. Unfortunately that is not supported, just on a per layer basis from
within the main program. I could export my map to TIFF with a world file
and use GDAL on that, but I'd like to maintain the vectors and text in the
output.
>> Since GDAL supports the creation of GeoPDF, I'd like to ask if there is
some kind of documentation on the web where the standard is described of if
someone knows an OpenSource library which supports the creation of GeoPDF.
>> I thought of writing a, preferable in Python, program which would add
the necessary tags and data to the PDF in order to turn it into a GeoPDF.
But I am already stuck at the beginning, because I simply cannot find a
good standard documentation. What does GDAL do to turn a raster file into a
GeoPDF? I guess I could read the source, but I have no clue on the
C-language so I thought I ask here beforehand.
>>
>> Thanks,
>>
>> Frank
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160616/c6f9a9e5/attachment.html>

From gdemmy at gmail.com  Thu Jun 16 08:34:57 2016
From: gdemmy at gmail.com (George Demmy)
Date: Thu, 16 Jun 2016 11:34:57 -0400
Subject: [gdal-dev] GeoPDF
In-Reply-To: <57628D1A.7010404@gmail.com>
References: <573C811B.8000801@gmail.com> <57628D1A.7010404@gmail.com>
Message-ID: <CA+7PDU3C5gS+FMe7Pr-eu-1yuD3XbG+VoNu-fQSNEAbkue-rOQ@mail.gmail.com>

On Thu, Jun 16, 2016 at 7:27 AM, Frank Broniewski
<frank.broniewski at gmail.com> wrote:
> Ok, finally l found some time to investigate into making GeoPDF files from
> QGIS map composer PDFs. I've created a small python script to aid me in the
> creation of the GeoPDF (https://github.com/frankbroniewski/GeoPDF). It
> basically takes parameters from QGIS (map position in the page, map extent)
> and writes them to the PDF. There are 2 screenshots in the git which show
> the current data values for my test.pdf test subject. The map-composer.png
> shows the map in the QGIS map composer with the important values for
> georeferencing at the right side. layer-in-qgis.png shows the (unfortunately
> misaligned) GeoPDF in the QGIS main window.
> My gdal_edit call is as follows:
>
> gdal_edit.bat -mo "NEATLINE=POLYGON((30 30, 30 170, 220 170, 220 30, 30
> 30))" -a_srs "EPSG:31466" -a_ullr 2549800.000 5491000.000 2555800.000
> 5486600.000 test.pdf
>
> From reading the docs (the OGC ones) I thought creating a neatline and
> adding coordinates to it would be more or less sufficient. Looking at
> layer-in-qgis.png shows that gdal_edit did not (as what I expected at first)
> write the coordinates to the neatline but to the whole page area.
>
> Is there a way to add the coordinates to the neatline instead of the whole
> PDF page? I could calculate the page's extent and use these values, but
> maybe there's a more clever approach?
>
> I've also noticed that Adobe Acrobat Reader does not display any coordinates
> when using the measurement tool. Any ideas why this is not working?
>
> The python script (polygon.py - the name's somewhat stupid) is atm only used
> to assemble the gdal_edit call while taking the map extent and map frame aka
> neatline position along with an epsg code. I'm on windows (osgeo4w64) and
> using subprocess.call on gdal_edit causes an error with the -a_ullr switch.
> Probably some parsing errors or whatnot. Anyway, copy&paste is as good for
> the moment.
>
> So, any comments on how to proceed with the neatline are greatly
> appreciated.  I will continue to do my own research and report back on any
> successful steps achieved.
>
> Frank

Hi Frank

Forgive me if I don't have any answers for you, but perhaps I've got
some clues. The reason your PDF won't display coordinates in Reader is
because the georegistration metadata has some nonsensical values. The
utility is writing the georegistration metadata in using the ISO-style
encoding, which is fine, but the OGC docs won't help much there. ISO
georegistration is documented here:

http://wwwimages.adobe.com/content/dam/Adobe/en/devnet/pdf/pdfs/adobe_supplement_iso32000.pdf

One of the pieces of metadata in the ISO specification is the BBOX,
which describes the portion of the PDF page which is georegistered.
The BBOX is specified in PDF points. A point is 1/72 of an inch, and
your PDF is 842 points wide and 595 points high. However, the BBOX
entry is (I've truncated some of the trailing digits for clarity):

[ -357783.72 -742183.28 -357757.06 -742164.34 ]

Those could be eastings and northings, I suppose, but usually
projections are set up to keep those values positive, so even if they
are, they're probably based on bogus longitudes and latitudes. For the
portion of the page containing the map, the BBOX values should look
something more like this:

[ 86 86 620 511 ]

These numbers are just approximate, but they are close.

The next clue is the GPTS entry, which contain latitude-longitude
pairs that correspond to the LPTS entry, which is in relative
coordinates for the bounding box. The LPTS entry is:

[ 0 1 0 0 1 0 1 1 ]

Which says the GPTS will correspond to the upper left, lower left,
lower right, and upper right corners respectively. Here's the GPTS
entry:

[ 0.0014258201441901 -15.902408231200148
  0.0002516153195675 -15.902408224328752
  0.0002516181359381 -15.900825314290767
  0.0014258361036234 -15.900825321161765 ]

Those values are in the middle of the Atlantic near the equator, which
is surely not your intent. The Gauss–Krüger zone 2 you've specified is
centered on 6 degrees East longitude, so, somehow something is getting
lost in translation. Taking the values you entered in the command as
GK zone 2 easting/northings, the GPTS should look something closer to:

[ 49.6 5.3
  49.5 5.3
  49.5 5.4
  49.6 5.4 ]

Again, this is just illustrative, those aren't what the actual values
should be (there would be lots more trailing digits and they'd be
"closer together"), but they're ballpark and show the proper
orientation. I hand edited your PDF with these values to show that the
georegistration is otherwise OK and is compatible with Adobe Acrobat
Reader. It's available at:

https://www.dropbox.com/s/5n297s4l0r2d1wz/epsg-31466.pdf?dl=0

Perhaps this information can help give some of the GDAL command-line
ninjas some ideas for pointers for you from the toolset side.

Please let me know if you have any further questions about the
georegistration metadata or PDF -- that's the stuff I know.

Kindest regards,

George

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jun 16 10:18:16 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Thu, 16 Jun 2016 17:18:16 +0000 (UTC)
Subject: [gdal-dev] How to escape "desc" with OGR SQL?
Message-ID: <loom.20160616T185818-902@post.gmane.org>

Hi,

I had a need to convert  some data into GPX format and populate the GPX
attributes "name" and "desc". Name was not any problem as can be tested with
ogrinfo -sql "select attr_1 as name from test" test.shp

However, "desc" is a SQL keyword for descending order and all my trials with
OGR SQL failed like this:
ogrinfo -sql "select attr_2 as "desc" from test" test.shp 
ERROR 1: SQL Expression Parsing Error: syntax error, unexpected DESC,
expecting identifier. Occurred around :
select attr_2 as desc from test
                 ^
I managed to do the job with SQLite dialect but I wonder if I found a bug
with using "desc" as an identifier.

-Jukka Rahkonen-


From even.rouault at spatialys.com  Thu Jun 16 10:27:14 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 16 Jun 2016 19:27:14 +0200
Subject: [gdal-dev] How to escape "desc" with OGR SQL?
In-Reply-To: <loom.20160616T185818-902@post.gmane.org>
References: <loom.20160616T185818-902@post.gmane.org>
Message-ID: <201606161927.14693.even.rouault@spatialys.com>

Le jeudi 16 juin 2016 19:18:16, Jukka Rahkonen a écrit :
> Hi,
> 
> I had a need to convert  some data into GPX format and populate the GPX
> attributes "name" and "desc". Name was not any problem as can be tested
> with ogrinfo -sql "select attr_1 as name from test" test.shp
> 
> However, "desc" is a SQL keyword for descending order and all my trials
> with OGR SQL failed like this:
> ogrinfo -sql "select attr_2 as "desc" from test" test.shp

On Windows shell I suppose ? Perhaps with \" (not tried)

ogrinfo -sql "select attr_2 as \"desc\" from test" test.shp


On Linux bash the following - using single quote for the full SQL - also works 
(not sure on Windows)

ogrinfo -sql 'select attr_2 as "desc" from test' test.shp


> ERROR 1: SQL Expression Parsing Error: syntax error, unexpected DESC,
> expecting identifier. Occurred around :
> select attr_2 as desc from test
>                  ^
> I managed to do the job with SQLite dialect but I wonder if I found a bug
> with using "desc" as an identifier.

Probably SQLite is more tolerant about using reserved keywords in non-
ambiguous situations.

> 
> -Jukka Rahkonen-
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Thu Jun 16 10:59:26 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Thu, 16 Jun 2016 17:59:26 +0000 (UTC)
Subject: [gdal-dev] How to escape "desc" with OGR SQL?
References: <loom.20160616T185818-902@post.gmane.org>
 <201606161927.14693.even.rouault@spatialys.com>
Message-ID: <loom.20160616T193012-928@post.gmane.org>

Even Rouault <even.rouault <at> spatialys.com> writes:

 
> On Windows shell I suppose ? Perhaps with \" (not tried)
> 
> ogrinfo -sql "select attr_2 as \"desc\" from test" test.shp

This really works for me on Windows.


> On Linux bash the following - using single quote for the full SQL - also
works 
> (not sure on Windows)

For sure does not work on Windows.

> ogrinfo -sql 'select attr_2 as "desc" from test' test.shp
> 
> > ERROR 1: SQL Expression Parsing Error: syntax error, unexpected DESC,
> > expecting identifier. Occurred around :
> > select attr_2 as desc from test
> >                  ^
> > I managed to do the job with SQLite dialect but I wonder if I found a bug
> > with using "desc" as an identifier.
> 
> Probably SQLite is more tolerant about using reserved keywords in non-
> ambiguous situations.

Ahh, I understand now. If I write just "desc" the double quotes are actually
removed but SQLite does not care in this case.  But I can't do select... as
"union" because now SQLite complains 
ERROR 1: In ExecuteSQL(): sqlite3_prepare(select attr_2 as union from test):
  near "union": syntax error

I must write it escaped select... as \"union\" instead so that double quotes
are protected. 

Are there other characters than " which may need escaping? I guess % and _
but probably there are more.

-Jukka Rahkonen-


From jgrn at illinois.edu  Thu Jun 16 13:00:51 2016
From: jgrn at illinois.edu (Jonathan Greenberg)
Date: Thu, 16 Jun 2016 20:00:51 +0000
Subject: [gdal-dev] gdalbuildvrt for multiband files?
Message-ID: <CABG0rfuAeryVh9jGSVZ8y2g5Kwf+Xr7rmhJ=4SqYnNV3BqpPqQ@mail.gmail.com>

Folks:

Is there any trick to "stacking" multiple *multiband* files via
gdalbuildvrt for further use with e.g. gdal_translate?  Basically, this
restriction using "separate":

"In that case, only the first band of each dataset will be placed into a
new band."

Is causing problems -- I want to have ALL of the bands in my multiband
files stacked up.  Thanks!

--j
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160616/68fe1f18/attachment.html>

From tomerlieber at gmail.com  Thu Jun 16 13:04:39 2016
From: tomerlieber at gmail.com (Tomer)
Date: Thu, 16 Jun 2016 13:04:39 -0700 (PDT)
Subject: [gdal-dev] SetSpatialFilter and Spatial Index
In-Reply-To: <1465928218913-5271637.post@n6.nabble.com>
References: <1465928218913-5271637.post@n6.nabble.com>
Message-ID: <1466107479380-5272096.post@n6.nabble.com>

Or maybe the question need to be if I set geometry as spatial filter using
the "SetSpatialFilter" function and then I use the function "GetNextFeature"
on a layer with spatial index, for instance shp file with qix. It will
consider the spatial index when fetch the next available feature from this
layer?

Thanks again,
Tomer



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/SetSpatialFilter-and-Spatial-Index-tp5271637p5272096.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From lucadeluge at gmail.com  Thu Jun 16 15:02:27 2016
From: lucadeluge at gmail.com (Luca Delucchi)
Date: Fri, 17 Jun 2016 00:02:27 +0200
Subject: [gdal-dev] GeoPDF
In-Reply-To: <CAB28AsiEr+Z2twZ3duj2jtg2hWkcz256HL8DqJU-0q2_b-B47w@mail.gmail.com>
References: <573C811B.8000801@gmail.com> <57628D1A.7010404@gmail.com>
 <CAB28AsiEr+Z2twZ3duj2jtg2hWkcz256HL8DqJU-0q2_b-B47w@mail.gmail.com>
Message-ID: <CAK4m-3xwm6Zy-CH8erP6CEDt8k9MZVx=Eb=pYzui--6CisWcQA@mail.gmail.com>

On 16 June 2016 at 13:32, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>
>
> I can't help with this, but you may be interested to know that QGIS 2.16
> will natively georeference composer PDF outputs. This feature was added
> during the recent hackfest in Girona.
>

this is cool, do you know if it export the vector as vector or as raster?

> Cheers,
> Nyall
>


-- 
ciao
Luca

www.lucadelu.org

From ari.jolma at gmail.com  Thu Jun 16 23:22:39 2016
From: ari.jolma at gmail.com (Ari Jolma)
Date: Fri, 17 Jun 2016 09:22:39 +0300
Subject: [gdal-dev] SetSpatialFilter and Spatial Index
In-Reply-To: <1466107479380-5272096.post@n6.nabble.com>
References: <1465928218913-5271637.post@n6.nabble.com>
 <1466107479380-5272096.post@n6.nabble.com>
Message-ID: <5763972F.90801@gmail.com>

The Shapefile driver supports spatial index from .qix file 
(http://gdal.org/drv_shapefile.html), so assumably the spatial filter 
set by SetSpatialFilter takes advantage of it.

Best regards,

Ari

16.06.2016, 23:04, Tomer kirjoitti:
> Or maybe the question need to be if I set geometry as spatial filter using
> the "SetSpatialFilter" function and then I use the function "GetNextFeature"
> on a layer with spatial index, for instance shp file with qix. It will
> consider the spatial index when fetch the next available feature from this
> layer?
>
> Thanks again,
> Tomer
>
>
>
> --
> View this message in context: http://osgeo-org.1560.x6.nabble.com/SetSpatialFilter-and-Spatial-Index-tp5271637p5272096.html
> Sent from the GDAL - Dev mailing list archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev


From frank.broniewski at gmail.com  Thu Jun 16 23:23:00 2016
From: frank.broniewski at gmail.com (Frank Broniewski)
Date: Fri, 17 Jun 2016 08:23:00 +0200
Subject: [gdal-dev] GeoPDF
In-Reply-To: <CAK4m-3xwm6Zy-CH8erP6CEDt8k9MZVx=Eb=pYzui--6CisWcQA@mail.gmail.com>
References: <573C811B.8000801@gmail.com> <57628D1A.7010404@gmail.com>
 <CAB28AsiEr+Z2twZ3duj2jtg2hWkcz256HL8DqJU-0q2_b-B47w@mail.gmail.com>
 <CAK4m-3xwm6Zy-CH8erP6CEDt8k9MZVx=Eb=pYzui--6CisWcQA@mail.gmail.com>
Message-ID: <57639744.50904@gmail.com>

I just have to agree :) If I read the qgis homepage correctly, 2.16 is 
due on the beginning of july (2016-07-08)

Am 17.06.2016 um 00:02 schrieb Luca Delucchi:
> On 16 June 2016 at 13:32, Nyall Dawson <nyall.dawson at gmail.com> wrote:
>>
>> I can't help with this, but you may be interested to know that QGIS 2.16
>> will natively georeference composer PDF outputs. This feature was added
>> during the recent hackfest in Girona.
>>
> this is cool, do you know if it export the vector as vector or as raster?
>
>> Cheers,
>> Nyall
>>
>

-- 
Waldhölzbacher Str. 51
66679 Losheim am See

(+49) 0177 30 21 791


From frank.broniewski at gmail.com  Thu Jun 16 23:32:43 2016
From: frank.broniewski at gmail.com (Frank Broniewski)
Date: Fri, 17 Jun 2016 08:32:43 +0200
Subject: [gdal-dev] GeoPDF
In-Reply-To: <CA+7PDU3C5gS+FMe7Pr-eu-1yuD3XbG+VoNu-fQSNEAbkue-rOQ@mail.gmail.com>
References: <573C811B.8000801@gmail.com> <57628D1A.7010404@gmail.com>
 <CA+7PDU3C5gS+FMe7Pr-eu-1yuD3XbG+VoNu-fQSNEAbkue-rOQ@mail.gmail.com>
Message-ID: <5763998B.9090807@gmail.com>

Hello George,

wow, thank you for your very helpful answer! I must admit I am more of a 
trial-and-error person and when I saw all the docs and the sheer amount 
of content I just went ahead and tried something. But obviously there's 
a lot more to learn about on how to make a GeoPDF. I'll go through your 
email step by step and see what I can do about your mentioned problems 
in the PDF.

Thanks a lot, again!
Frank

Am 16.06.2016 um 17:34 schrieb George Demmy:
> On Thu, Jun 16, 2016 at 7:27 AM, Frank Broniewski
> <frank.broniewski at gmail.com> wrote:
>> Ok, finally l found some time to investigate into making GeoPDF files from
>> QGIS map composer PDFs. I've created a small python script to aid me in the
>> creation of the GeoPDF (https://github.com/frankbroniewski/GeoPDF). It
>> basically takes parameters from QGIS (map position in the page, map extent)
>> and writes them to the PDF. There are 2 screenshots in the git which show
>> the current data values for my test.pdf test subject. The map-composer.png
>> shows the map in the QGIS map composer with the important values for
>> georeferencing at the right side. layer-in-qgis.png shows the (unfortunately
>> misaligned) GeoPDF in the QGIS main window.
>> My gdal_edit call is as follows:
>>
>> gdal_edit.bat -mo "NEATLINE=POLYGON((30 30, 30 170, 220 170, 220 30, 30
>> 30))" -a_srs "EPSG:31466" -a_ullr 2549800.000 5491000.000 2555800.000
>> 5486600.000 test.pdf
>>
>>  From reading the docs (the OGC ones) I thought creating a neatline and
>> adding coordinates to it would be more or less sufficient. Looking at
>> layer-in-qgis.png shows that gdal_edit did not (as what I expected at first)
>> write the coordinates to the neatline but to the whole page area.
>>
>> Is there a way to add the coordinates to the neatline instead of the whole
>> PDF page? I could calculate the page's extent and use these values, but
>> maybe there's a more clever approach?
>>
>> I've also noticed that Adobe Acrobat Reader does not display any coordinates
>> when using the measurement tool. Any ideas why this is not working?
>>
>> The python script (polygon.py - the name's somewhat stupid) is atm only used
>> to assemble the gdal_edit call while taking the map extent and map frame aka
>> neatline position along with an epsg code. I'm on windows (osgeo4w64) and
>> using subprocess.call on gdal_edit causes an error with the -a_ullr switch.
>> Probably some parsing errors or whatnot. Anyway, copy&paste is as good for
>> the moment.
>>
>> So, any comments on how to proceed with the neatline are greatly
>> appreciated.  I will continue to do my own research and report back on any
>> successful steps achieved.
>>
>> Frank
> Hi Frank
>
> Forgive me if I don't have any answers for you, but perhaps I've got
> some clues. The reason your PDF won't display coordinates in Reader is
> because the georegistration metadata has some nonsensical values. The
> utility is writing the georegistration metadata in using the ISO-style
> encoding, which is fine, but the OGC docs won't help much there. ISO
> georegistration is documented here:
>
> http://wwwimages.adobe.com/content/dam/Adobe/en/devnet/pdf/pdfs/adobe_supplement_iso32000.pdf
>
> One of the pieces of metadata in the ISO specification is the BBOX,
> which describes the portion of the PDF page which is georegistered.
> The BBOX is specified in PDF points. A point is 1/72 of an inch, and
> your PDF is 842 points wide and 595 points high. However, the BBOX
> entry is (I've truncated some of the trailing digits for clarity):
>
> [ -357783.72 -742183.28 -357757.06 -742164.34 ]
>
> Those could be eastings and northings, I suppose, but usually
> projections are set up to keep those values positive, so even if they
> are, they're probably based on bogus longitudes and latitudes. For the
> portion of the page containing the map, the BBOX values should look
> something more like this:
>
> [ 86 86 620 511 ]
>
> These numbers are just approximate, but they are close.
>
> The next clue is the GPTS entry, which contain latitude-longitude
> pairs that correspond to the LPTS entry, which is in relative
> coordinates for the bounding box. The LPTS entry is:
>
> [ 0 1 0 0 1 0 1 1 ]
>
> Which says the GPTS will correspond to the upper left, lower left,
> lower right, and upper right corners respectively. Here's the GPTS
> entry:
>
> [ 0.0014258201441901 -15.902408231200148
>    0.0002516153195675 -15.902408224328752
>    0.0002516181359381 -15.900825314290767
>    0.0014258361036234 -15.900825321161765 ]
>
> Those values are in the middle of the Atlantic near the equator, which
> is surely not your intent. The Gauss–Krüger zone 2 you've specified is
> centered on 6 degrees East longitude, so, somehow something is getting
> lost in translation. Taking the values you entered in the command as
> GK zone 2 easting/northings, the GPTS should look something closer to:
>
> [ 49.6 5.3
>    49.5 5.3
>    49.5 5.4
>    49.6 5.4 ]
>
> Again, this is just illustrative, those aren't what the actual values
> should be (there would be lots more trailing digits and they'd be
> "closer together"), but they're ballpark and show the proper
> orientation. I hand edited your PDF with these values to show that the
> georegistration is otherwise OK and is compatible with Adobe Acrobat
> Reader. It's available at:
>
> https://www.dropbox.com/s/5n297s4l0r2d1wz/epsg-31466.pdf?dl=0
>
> Perhaps this information can help give some of the GDAL command-line
> ninjas some ideas for pointers for you from the toolset side.
>
> Please let me know if you have any further questions about the
> georegistration metadata or PDF -- that's the stuff I know.
>
> Kindest regards,
>
> George

-- 
Waldhölzbacher Str. 51
66679 Losheim am See

(+49) 0177 30 21 791


From mj10777 at googlemail.com  Fri Jun 17 00:01:43 2016
From: mj10777 at googlemail.com (Mark Johnson)
Date: Fri, 17 Jun 2016 09:01:43 +0200
Subject: [gdal-dev] convert Grayscale to RGB and, after georeferencing, back
Message-ID: <CAEEbjBjXRqDYOUaEtcg03-FdiNhN6UqY7jT0PcKkyhYN8NLW0w@mail.gmail.com>

During the process georeferencing a Grayscale image, the image must be
converted to a RGB image (-expand rgb -ot Byte) before calling
gdal_translate setting the GCP's.

After gdalwarp, the image is of course then RGB (3 Bands)
- and is rendered looking as a Grayscale image in QGIS

My question is: how to convert this back to the original Grayscale?

I assume, during the '-expand', the gray values have been separated into
the 3 bands according to some default logic so that it renders as a
Grayscale image when viewed.

I have seen samples of converting a (truly) coloured image to Grayscale:
gdal_calc.py -A input.tif --A_band=1 -B input.tif --B_band=2 -C input.tif
--C_band=3 --outfile=result.tif --calc="A*0.2989+B*0.5870+C*0.1140"

Would it be something in this form?

Mark Johnson, Berlin, Germany
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160617/99559b5a/attachment-0001.html>

From frank.broniewski at gmail.com  Fri Jun 17 00:20:43 2016
From: frank.broniewski at gmail.com (Frank Broniewski)
Date: Fri, 17 Jun 2016 09:20:43 +0200
Subject: [gdal-dev] How to escape "desc" with OGR SQL?
In-Reply-To: <loom.20160616T193012-928@post.gmane.org>
References: <loom.20160616T185818-902@post.gmane.org>
 <201606161927.14693.even.rouault@spatialys.com>
 <loom.20160616T193012-928@post.gmane.org>
Message-ID: <5763A4CB.2000105@gmail.com>

Hi Jukka,

you will need to escape anything that can be interpreted as a control 
character on the command line. But it really depends on the 
interpretation context (console), but backslashes often need escaping as 
well like \n for a newline. This may even happen if you write something 
like \newspaper ... but for sql strings on the command line there's 
usually just the double quotes where you have to pay attention.
The problem you have here is that you are using sql keywords (desc and 
union) for your table aliases so you have to put double quotes around 
them. One way around this would be to not use sql keywords as table 
aliases at all. The next best solution would be to enclose your sql 
string into single quotes like Even already mentioned. Your double 
quotes don't "break" the sql string because they are different. But if 
you intend to use only double quotes for your sql string and your 
keywords you will need to escape the quotes around the keywords because 
otherwise they would break or signal an end to the sql string like it 
would on a normal sententence:
"I have " written "a sql string"
wouldn't be a correctly encapsulated sentence, would it? A backslash \" 
would remove the meaning of the " and not terminating the string.

HTH

Frank

Am 16.06.2016 um 19:59 schrieb Jukka Rahkonen:
> Even Rouault <even.rouault <at> spatialys.com> writes:
>
>   
>> On Windows shell I suppose ? Perhaps with \" (not tried)
>>
>> ogrinfo -sql "select attr_2 as \"desc\" from test" test.shp
> This really works for me on Windows.
>
>
>> On Linux bash the following - using single quote for the full SQL - also
> works
>> (not sure on Windows)
> For sure does not work on Windows.
>
>> ogrinfo -sql 'select attr_2 as "desc" from test' test.shp
>>
>>> ERROR 1: SQL Expression Parsing Error: syntax error, unexpected DESC,
>>> expecting identifier. Occurred around :
>>> select attr_2 as desc from test
>>>                   ^
>>> I managed to do the job with SQLite dialect but I wonder if I found a bug
>>> with using "desc" as an identifier.
>> Probably SQLite is more tolerant about using reserved keywords in non-
>> ambiguous situations.
> Ahh, I understand now. If I write just "desc" the double quotes are actually
> removed but SQLite does not care in this case.  But I can't do select... as
> "union" because now SQLite complains
> ERROR 1: In ExecuteSQL(): sqlite3_prepare(select attr_2 as union from test):
>    near "union": syntax error
>
> I must write it escaped select... as \"union\" instead so that double quotes
> are protected.
>
> Are there other characters than " which may need escaping? I guess % and _
> but probably there are more.
>
> -Jukka Rahkonen-
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Waldhölzbacher Str. 51
66679 Losheim am See

(+49) 0177 30 21 791


From even.rouault at spatialys.com  Fri Jun 17 01:10:03 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 17 Jun 2016 10:10:03 +0200
Subject: [gdal-dev] convert Grayscale to RGB and, after georeferencing,
	back
In-Reply-To: <CAEEbjBjXRqDYOUaEtcg03-FdiNhN6UqY7jT0PcKkyhYN8NLW0w@mail.gmail.com>
References: <CAEEbjBjXRqDYOUaEtcg03-FdiNhN6UqY7jT0PcKkyhYN8NLW0w@mail.gmail.com>
Message-ID: <201606171010.04533.even.rouault@spatialys.com>

Le vendredi 17 juin 2016 09:01:43, Mark Johnson a écrit :
> During the process georeferencing a Grayscale image, the image must be
> converted to a RGB image (-expand rgb -ot Byte) before calling
> gdal_translate setting the GCP's.

You can run gdal_translate and gdalwarp directly on your greyscale image. No 
need for the RGB intermediate.

> 
> After gdalwarp, the image is of course then RGB (3 Bands)
> - and is rendered looking as a Grayscale image in QGIS
> 
> My question is: how to convert this back to the original Grayscale?

gdal_translate rgb.tif grey.tif -b 1

> 
> I assume, during the '-expand', the gray values have been separated into
> the 3 bands according to some default logic so that it renders as a
> Grayscale image when viewed.

The logic of -expand rgb , from a greyscale image, is just to replicate each 
grey value on the R,G,B channels :-)

> 
> I have seen samples of converting a (truly) coloured image to Grayscale:
> gdal_calc.py -A input.tif --A_band=1 -B input.tif --B_band=2 -C input.tif
> --C_band=3 --outfile=result.tif --calc="A*0.2989+B*0.5870+C*0.1140"
> 
> Would it be something in this form?

You can do this but as A=B=C, gdal_translate -b 1 will do the same more 
efficiently :-)

> 
> Mark Johnson, Berlin, Germany

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jukka.rahkonen at maanmittauslaitos.fi  Fri Jun 17 01:18:56 2016
From: jukka.rahkonen at maanmittauslaitos.fi (Jukka Rahkonen)
Date: Fri, 17 Jun 2016 08:18:56 +0000 (UTC)
Subject: [gdal-dev] How to escape "desc" with OGR SQL?
References: <loom.20160616T185818-902@post.gmane.org>
 <201606161927.14693.even.rouault@spatialys.com>
 <loom.20160616T193012-928@post.gmane.org> <5763A4CB.2000105@gmail.com>
Message-ID: <loom.20160617T094133-670@post.gmane.org>

Frank Broniewski <frank.broniewski <at> gmail.com> writes:

> 
> Hi Jukka,
> 
> you will need to escape anything that can be interpreted as a control 
> character on the command line. But it really depends on the 
> interpretation context (console), but backslashes often need escaping as 
> well like \n for a newline. This may even happen if you write something 
> like \newspaper ... but for sql strings on the command line there's 
> usually just the double quotes where you have to pay attention.
> The problem you have here is that you are using sql keywords (desc and 
> union) for your table aliases so you have to put double quotes around 
> them. One way around this would be to not use sql keywords as table 
> aliases at all.

Yes, but if you want to utilize SQL for inserting some contents into the
description field of GPX which is nailed to have a name "desc" you can't
avoid that. 

> The next best solution would be to enclose your sql 
> string into single quotes like Even already mentioned.

Yes, but that works only on Linux. On Windows you will see - Surprise! - this:
ogrinfo -sql 'select attr_1 as "desc" from test' test.shp
FAILURE:
Unable to open datasource `attr_1' with the following drivers.

> Your double 
> quotes don't "break" the sql string because they are different. But if 
> you intend to use only double quotes for your sql string and your 
> keywords you will need to escape the quotes around the keywords because 
> otherwise they would break or signal an end to the sql string like it 
> would on a normal sententence:
> "I have " written "a sql string"
> wouldn't be a correctly encapsulated sentence, would it? A backslash \" 
> would remove the meaning of the " and not terminating the string.

I am trying to think how and where we could document this for the users. We
did not remember to think this case in
https://trac.osgeo.org/gdal/wiki/rfc52_strict_sql_quoting

Ogr2ogr documentation does not mention that SQL that is OK when executed
with pgAdmin, spatialite-gui or other direct database tools may not work as
is when used in the -sql parameter.

http://www.gdal.org/ogr2ogr.html
-sql sql_statement:
    SQL statement to execute. The resulting table/layer will be saved to the
output. Starting with GDAL 2.1, the syntax can be used to indicate that the
content is in the pointed filename. 

Good thing is that at least we have now the need to use \" sometimes on
Windows documented in the mail archives.

-Jukka-
 
> HTH
> 
> Frank



From jerome.siot at maxsea.fr  Fri Jun 17 02:09:38 2016
From: jerome.siot at maxsea.fr (Jerome Siot)
Date: Fri, 17 Jun 2016 09:09:38 +0000
Subject: [gdal-dev] How to open VPF DNC's Notes ?
Message-ID: <1F69DB3E166E714BAD00B83D3FB08774025D5DA93B@EXCH2010.informatique-mer.fr>

Hello
I use a compiled version of GDAL, including OGDI lib :

-          GDAL 2.0.1

-          OGDI 3.1.6

I can open DNC Charts and retrieve layers / features.

Problem : I'm not able to retrieve notes which can be found in NOTES.RAT and NOTES.NJT, like explained in this VPF specification :

http://earth-info.nga.mil/publications/specs/printed/vpf/int_milprf0089049.pdf
3.16.4.2.1.1 Notes related attribute tables


Have you got ideas about this question ?

--
Thank you, Jérome Siot

(Excuse me for my awful English, I'm French !)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160617/38bb67d2/attachment.html>

From darren.ives at km.kongsberg.com  Fri Jun 17 03:06:21 2016
From: darren.ives at km.kongsberg.com (Darren Ives)
Date: Fri, 17 Jun 2016 10:06:21 +0000
Subject: [gdal-dev]
 =?utf-8?q?OGR_s57_reader_possible_expansion_to_read_In?=
 =?utf-8?b?bGFuZCBbTMOkYmVd?=
Message-ID: <91cf16400d7a48bda2628b466be01d2f@exchmbnodat10.kongsberg.master.int>

Thanks for the reply, Holger.

I'll take a look into that, cheers.

Darren


Message: 1
Date: Thu, 16 Jun 2016 05:57:58 +0000
From: Läbe, Holger <laebe at geomapping.de>
To: "gdal-dev at lists.osgeo.org" <gdal-dev at lists.osgeo.org>
Subject: Re: [gdal-dev] OGR s57 reader possible expansion to read
	Inland
Message-ID: <91e176544eea4e2f922640dd3c98c1bb at EX132MBOX1A.de2.local>
Content-Type: text/plain; charset="utf-8"

Darren,
reading Inland ENC is well supported. In GDAL_DATA folder you should find s57*_iw.csv files. "iw" means Inland Waterways.

In order to use these you can set S57_PROFILE to "iw".

The csv might be outdated, depending on you IENC data  version.

Holger 



From jmckenna at gatewaygeomatics.com  Fri Jun 17 05:17:04 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 17 Jun 2016 09:17:04 -0300
Subject: [gdal-dev] How to escape "desc" with OGR SQL?
In-Reply-To: <loom.20160617T094133-670@post.gmane.org>
References: <loom.20160616T185818-902@post.gmane.org>
 <201606161927.14693.even.rouault@spatialys.com>
 <loom.20160616T193012-928@post.gmane.org> <5763A4CB.2000105@gmail.com>
 <loom.20160617T094133-670@post.gmane.org>
Message-ID: <7edbf291-4b53-f22b-87a8-f7d7d544aeba@gatewaygeomatics.com>

On 2016-06-17 5:18 AM, Jukka Rahkonen wrote:
>
> Good thing is that at least we have now the need to use \" sometimes on
> Windows documented in the mail archives.
>

How about taking the time to create a new wiki page (at 
https://trac.osgeo.org/gdal/) and document all of the -sql hints you've 
found through this, with examples?  Digging through mail archives is 
impossible for new users.

Thanks,

-jeff


-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/





From woodbri at swoodbridge.com  Sat Jun 18 10:01:26 2016
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Sat, 18 Jun 2016 13:01:26 -0400
Subject: [gdal-dev] Question on writing a GTiff using python
Message-ID: <d62737b2-2b1b-3601-4c15-42a1132992b2@swoodbridge.com>

Hi all,

I'm writing a GTiff using GDAL/Python and it is mostly working. The 
source data is coming from a NETCDF file that is georeferenced in 
Longitude from 74.1600037 to 434.160 degrees

If I use this I get:

Size is 4500, 1782
Coordinate System is:
GEOGCS["WGS 84",
     DATUM["WGS_1984",
         SPHEROID["WGS 84",6378137,298.257223563,
             AUTHORITY["EPSG","7030"]],
         AUTHORITY["EPSG","6326"]],
     PRIMEM["Greenwich",0],
     UNIT["degree",0.0174532925199433],
     AUTHORITY["EPSG","4326"]]
Origin = (74.160003662109375,46.987300872802734)
Pixel Size = (0.079999959309896,0.079999959309896)

Corner Coordinates:
Upper Left  (  74.1600037,  46.9873009) ( 74d 9'36.01"E, 46d59'14.28"N)
Lower Left  (      74.160,     189.547) ( 74d 9'36.01"E,189d32'50.02"N)
Upper Right (     434.160,      46.987) (Invalid angle, 46d59'14.28"N)
Lower Right (     434.160,     189.547) (Invalid angle,189d32'50.02"N)
Center      (     254.160,     118.267) (254d 9'35.68"E,118d16' 2.15"N)

Looks like I also need to flip the Y axis, but ignore that for the moment.

Do I need to reorganize the pixels to be in the range of -180 to 180?
What is the best way t do this?
I can probably slice and splice the numpy array for each row as I copy 
it. Other options?

Thanks,
   -Steve

---
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus


From even.rouault at spatialys.com  Sat Jun 18 10:52:07 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 18 Jun 2016 19:52:07 +0200
Subject: [gdal-dev] Question on writing a GTiff using python
In-Reply-To: <d62737b2-2b1b-3601-4c15-42a1132992b2@swoodbridge.com>
References: <d62737b2-2b1b-3601-4c15-42a1132992b2@swoodbridge.com>
Message-ID: <201606181952.08087.even.rouault@spatialys.com>

Le samedi 18 juin 2016 19:01:26, Stephen Woodbridge a écrit :
> Hi all,
> 
> I'm writing a GTiff using GDAL/Python and it is mostly working. The
> source data is coming from a NETCDF file that is georeferenced in
> Longitude from 74.1600037 to 434.160 degrees
> 
> If I use this I get:
> 
> Size is 4500, 1782
> Coordinate System is:
> GEOGCS["WGS 84",
>      DATUM["WGS_1984",
>          SPHEROID["WGS 84",6378137,298.257223563,
>              AUTHORITY["EPSG","7030"]],
>          AUTHORITY["EPSG","6326"]],
>      PRIMEM["Greenwich",0],
>      UNIT["degree",0.0174532925199433],
>      AUTHORITY["EPSG","4326"]]
> Origin = (74.160003662109375,46.987300872802734)
> Pixel Size = (0.079999959309896,0.079999959309896)
> 
> Corner Coordinates:
> Upper Left  (  74.1600037,  46.9873009) ( 74d 9'36.01"E, 46d59'14.28"N)
> Lower Left  (      74.160,     189.547) ( 74d 9'36.01"E,189d32'50.02"N)
> Upper Right (     434.160,      46.987) (Invalid angle, 46d59'14.28"N)
> Lower Right (     434.160,     189.547) (Invalid angle,189d32'50.02"N)
> Center      (     254.160,     118.267) (254d 9'35.68"E,118d16' 2.15"N)
> 
> Looks like I also need to flip the Y axis, but ignore that for the moment.

You can perhaps try the GDAL_NETCDF_BOTTOMUP=YES/NO configuration option.

> 
> Do I need to reorganize the pixels to be in the range of -180 to 180?

Not necessarily. GeoTIFF will accept any georeferencing. The choice of 
reorganizing the pixels or not depends on the expectations of the 
people/software using your GeoTIFF.

> What is the best way t do this?
> I can probably slice and splice the numpy array for each row as I copy
> it. Other options?

That's a reasonable option.

> 
> Thanks,
>    -Steve
> 
> ---
> This email has been checked for viruses by Avast antivirus software.
> https://www.avast.com/antivirus
> 
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From 191980 at niuitmo.ru  Sun Jun 19 04:07:47 2016
From: 191980 at niuitmo.ru (=?utf-8?B?0JHQvtGA0LfRi9GFINCQ0LvQtdC60YHQsNC90LTRgCDQkNC90LTRgNC10LU=?= =?utf-8?B?0LLQuNGH?=)
Date: Sun, 19 Jun 2016 11:07:47 +0000
Subject: [gdal-dev] GSoC GDAL DWG Support [Week 4]
Message-ID: <8FA947CC-6986-4BD4-A591-6CDAD8FF2383@niuitmo.ru>

Last week I had a lot of university studies, and have not achieved one task (polylines support in driver) - I am taking it for next week, sorry about that.

Also, I would like to know which DWG file things would devs like to see in Feature attributes fields? Now it contains Thickness, Color (RGB), CADGeometryType, ExtendedEntityData (not supported by library yet).


Blogpost is here<http://gsoc2016gdaldwg.blogspot.ru/2016/06/week-4-report.html>.


1. This week I've done:


Libopencad is extended with:

- 2 new geometry types: ATTDEF and ATTRIB.

- Color is now a geometry attribute, so, it can be got by calling CADGeometry->getColor() (returns RGBColor struct).

- Libopencad docs prototype can be seen there<http://sandyre.github.io/libopencad/docs/html/index.html> (a lot of things are missed).


OGR CAD Driver extended with:

- All libopencad's file I/O was rewritten using VSIF.

- Arc, Face3D geometries.

- Now geometry color is attribute (given as IntegerList in RGB format).


2. Plan on doing next week:

Previous week tasks: add Polyline3D, LWPolyline, Ellipse support to CAD Driver.

Add hatch geometry to libopencad. Implement dimensions library output representation. Start working on R13-R14 DWG support.


3. Blocking:

None.


Links:

libopencad github<https://github.com/sandyre/libopencad>

gdal + libopencad fork github<https://github.com/sandyre/gdal_libopencad>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160619/1c836699/attachment.html>

From even.rouault at spatialys.com  Sun Jun 19 06:57:33 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 19 Jun 2016 15:57:33 +0200
Subject: [gdal-dev] GSoC GDAL DWG Support [Week 4]
In-Reply-To: <8FA947CC-6986-4BD4-A591-6CDAD8FF2383@niuitmo.ru>
References: <8FA947CC-6986-4BD4-A591-6CDAD8FF2383@niuitmo.ru>
Message-ID: <201606191557.33956.even.rouault@spatialys.com>

Александр,

Great to see your progress.

Here's a commit to fix a compilation issue:
https://github.com/rouault/gdal_libopencad/commit/0f2a5205ad5e4aaa55283c43c134a3683a60c8b6

> 
> Also, I would like to know which DWG file things would devs like to see in
> Feature attributes fields? Now it contains Thickness, Color (RGB),
> CADGeometryType, ExtendedEntityData (not supported by library yet).

Regarding styling, do you intend exposing it as attributes or using OGR 
feature style strings like in the DXF or the Teigha DWG driver ?
> 
> - All libopencad's file I/O was rewritten using VSIF.

I tried the following :

from osgeo import gdal, ogr
data = open('libopencad/tests/data/r2000/triple_circles.dwg').read()
gdal.FileFromMemBuffer('/vsimem/foo.dwg', data)
ds =ogr.Open('/vsimem/foo.dwg')

and got a crash :

Program received signal SIGSEGV, Segmentation fault.
_IO_fread (buf=0x7fffffffd5b0, size=1, count=6, fp=0x0) at iofread.c:43
43	iofread.c: Aucun fichier ou dossier de ce type.
	in iofread.c
(gdb) 
(gdb) bt
#0  _IO_fread (buf=0x7fffffffd5b0, size=1, count=6, fp=0x0) at iofread.c:43
#1  0x00007ffff52fb13c in VSIFRead (pBuffer=0x7fffffffd5b0, nSize=1, nCount=6, 
fp=0x0) at cpl_vsisimple.cpp:230
#2  0x00007ffff5433a79 in CADFileStreamIO::Read (this=0xa48750, ptr=0x7fffffffd5b0, 
size=6) at cadfilestreamio.cpp:109

So I saw you indeed use the VSIF API, and not the VSIF*L API (VSIFOpenL(), 
etc....). The former is just a wrapper around the C standard FILE operations, 
while the later uses the GDAL virtual file system handlers to have in-memory 
file (/vsimem/), compressed file (/vsizip/, /vsitar/) or remote files (/vsicurl/)

Other things I've tried :

* numerous compiler warnings.

* "valgrind --leak-check=full ogrinfo -ro -al -q 
libopencad/tests/data/r2000/triple_circles.dwg" shows some memory leaks

* "test_ogrsf -ro libopencad/tests/data/r2000/triple_circles.dwg": a number of 
errors regarding taking into attribute & spatial filters (see 
OGRDXFLayer::GetNextFeature() for the usual way of taking into account 
filters), and finally a crash. test_ogrsf is a kind of "conformance" testing for 
OGR drivers. You need to "cd apps; make test_ogrsf" to build it.


Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From jamessramm at gmail.com  Mon Jun 20 03:44:51 2016
From: jamessramm at gmail.com (jramm)
Date: Mon, 20 Jun 2016 03:44:51 -0700 (PDT)
Subject: [gdal-dev] gdalbuildvrt for multiband files?
In-Reply-To: <CABG0rfuAeryVh9jGSVZ8y2g5Kwf+Xr7rmhJ=4SqYnNV3BqpPqQ@mail.gmail.com>
References: <CABG0rfuAeryVh9jGSVZ8y2g5Kwf+Xr7rmhJ=4SqYnNV3BqpPqQ@mail.gmail.com>
Message-ID: <1466419491209-5272472.post@n6.nabble.com>

Two options:

1. Use the xml module in python to build up the VRT file. You would create a
VRTRasterBand node for each band of each file. Note you will need to figure
out the maximum extent and raster size (in pixels) first, so this will be
easiest if you enforce the same pixel size and projection on your inputs

2. Create using the GDAL library. Something along the lines of

   drv = gdal.GetDriverByName("VRT")
   dst =  drv.Create(....)
   for src in src_list:
       for i in range(src.RasterCount):
          dst.AddBand(...)

Again, you would need to work out the size of the final raster beforehand.

The start of a very naive python implementation using xml is below. Look at
http://www.gdal.org/gdal_vrttut.html
to see what further nodes and attributes need creating 

from xml.etree.ElementTree import *
def stack(src_list):    
    # Get the maximum extent
    ulx = []
    uly = []
    lrx = []
    lry = []
    xres = []
    yres = []
    for src in src_list:
       gt = src.GetGeoTransform()
       ulx.append(gt[0])
       uly.append(gt[3])
       lrx.append(gt[0] + (gt[1] * src.RasterXSize))
       lry.append(gt[3] + (gt[5] * src.RasterYSize))
       xres.append(xres)
       yres.append(yres)
       # Dont handle skewed images
       assert gt[2] == gt[4] == 0

   # Check resolutions are all the same
   assert xres.count(xres[0]) == len(xres)
   assert yres.count(yres[0]) == len(yres)

   dst_ulx = min(ulx)
   dst_lrx = max(lrx)
   dst_uly = max(uly) # for north up image
   dst_lry = min(lry)
   nxpixels = int((dst_lrx - dst_ulx) / xres[0])
   nypixels = int((dst_lry - dst_uly) / yres[0])    

    root = Element("VRTDataset")
    root.set("RasterXSize", str(nxpixels))
    root.set("RasterYSize", str(nypixels))

    gt_node = SubElement(root, "GeoTransform")
    gt_node.text = ", ".join([dst_ulx, xres[0], 0, dst_uly, 0, yres[0]])

    for src in src_list:
       for i in range(src.RasterCount):
           bnd_node = SubElement(root, "VRTRasterBand")
           src_node = SubElement(bnd_node, "SimpleSource")
           pth_node = SubElement(src_node, "SourceFilename")
           pth_node.text = src.GetDescription()
           srcbnd_node = SubElement(src_node, "SourceBand")
           srcbnd_node.text = str(i+1)
  
A possibly simpler option would be to use gdalbuildvrt to create a VRT for
the first band of each dataset, then read the VRT using python and duplicate
the relevant nodes to add in new bands, then write it out again.





--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-gdalbuildvrt-for-multiband-files-tp5272094p5272472.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From 191980 at niuitmo.ru  Wed Jun 22 15:14:15 2016
From: 191980 at niuitmo.ru (=?utf-8?B?0JHQvtGA0LfRi9GFINCQ0LvQtdC60YHQsNC90LTRgCDQkNC90LTRgNC10LU=?= =?utf-8?B?0LLQuNGH?=)
Date: Wed, 22 Jun 2016 22:14:15 +0000
Subject: [gdal-dev] GSoC GDAL DWG Support [Week 4]
In-Reply-To: <201606191557.33956.even.rouault@spatialys.com>
References: <8FA947CC-6986-4BD4-A591-6CDAD8FF2383@niuitmo.ru>
 <201606191557.33956.even.rouault@spatialys.com>
Message-ID: <A5D43F8A-FFE9-49F2-AA87-A8BA58ECA272@niuitmo.ru>

Hello, Even
Sorry for late response. I have been working on tasks you have listed, but didn’t manage to answer your question:

Part of geometry attributes will be in OGR Simple style, and things that can’t be fitted there - will be just as feature style strings (as DXF driver does).

By the way, I have applied your fix to build on gcc 4.7, replaced VSI... Functions with VSI…L instead.

Best regards,
Alexandr Borzykh




>Александр,
>
>Great to see your progress.
>
>Here's a commit to fix a compilation issue:
>https://github.com/rouault/gdal_libopencad/commit/0f2a5205ad5e4aaa55283c43c134a3683a60c8b6
>
>> 
>> Also, I would like to know which DWG file things would devs like to see in
>> Feature attributes fields? Now it contains Thickness, Color (RGB),
>> CADGeometryType, ExtendedEntityData (not supported by library yet).
>
>Regarding styling, do you intend exposing it as attributes or using OGR 
>feature style strings like in the DXF or the Teigha DWG driver ?
>> 
>> - All libopencad's file I/O was rewritten using VSIF.
>
>I tried the following :
>
>from osgeo import gdal, ogr
>data = open('libopencad/tests/data/r2000/triple_circles.dwg').read()
>gdal.FileFromMemBuffer('/vsimem/foo.dwg', data)
>ds =ogr.Open('/vsimem/foo.dwg')
>
>and got a crash :
>
>Program received signal SIGSEGV, Segmentation fault.
>_IO_fread (buf=0x7fffffffd5b0, size=1, count=6, fp=0x0) at iofread.c:43
>43	iofread.c: Aucun fichier ou dossier de ce type.
>	in iofread.c
>(gdb) 
>(gdb) bt
>#0  _IO_fread (buf=0x7fffffffd5b0, size=1, count=6, fp=0x0) at iofread.c:43
>#1  0x00007ffff52fb13c in VSIFRead (pBuffer=0x7fffffffd5b0, nSize=1, nCount=6, 
>fp=0x0) at cpl_vsisimple.cpp:230
>#2  0x00007ffff5433a79 in CADFileStreamIO::Read (this=0xa48750, ptr=0x7fffffffd5b0, 
>size=6) at cadfilestreamio.cpp:109
>
>So I saw you indeed use the VSIF API, and not the VSIF*L API (VSIFOpenL(), 
>etc....). The former is just a wrapper around the C standard FILE operations, 
>while the later uses the GDAL virtual file system handlers to have in-memory 
>file (/vsimem/), compressed file (/vsizip/, /vsitar/) or remote files (/vsicurl/)
>
>Other things I've tried :
>
>* numerous compiler warnings.
>
>* "valgrind --leak-check=full ogrinfo -ro -al -q 
>libopencad/tests/data/r2000/triple_circles.dwg" shows some memory leaks
>
>* "test_ogrsf -ro libopencad/tests/data/r2000/triple_circles.dwg": a number of 
>errors regarding taking into attribute & spatial filters (see 
>OGRDXFLayer::GetNextFeature() for the usual way of taking into account 
>filters), and finally a crash. test_ogrsf is a kind of "conformance" testing for 
>OGR drivers. You need to "cd apps; make test_ogrsf" to build it.
>
>
>Even
>
>-- 
>Spatialys - Geospatial professional services
>http://www.spatialys.com

From sablok at amazon.com  Wed Jun 22 17:09:16 2016
From: sablok at amazon.com (sablok)
Date: Wed, 22 Jun 2016 17:09:16 -0700 (PDT)
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
Message-ID: <1466640556419-5272915.post@n6.nabble.com>

I am trying to compile gdal-2.0.2 from source using this tarball
https://trac.osgeo.org/gdal/wiki/DownloadSource I have tried to navigate
through every conceivable error on this mailing list archive to resolve the
issues I have encountered while compiling it from source. The set of
commands I am using to compile it are as follows -:

/export GDAL_BUILD_VERSION=2.0.2
cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && ./configure
--prefix=${build_root} --without-xml2
cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && make clean
cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && make
cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && make install/

and this keeps on failing with the following error -:

/config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_create_module_v2'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_malloc'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_vfs_register'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_prepare_v2'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_realloc'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_open_v2'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_declare_vtab'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_vfs_unregister'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_vfs_find'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_auto_extension'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_create_module'
config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to
`sqlite3_clear_bindings'
collect2: ld returned 1 exit status
make[1]: *** [gdalinfo] Error 1
make[1]: Leaving directory `config/gdal/gdal-2.0.2/apps'
make: *** [apps-target] Error 2/

I have no clue as to why is this happening as this is kinda my first
experience installing gdal from source and with gdal as well. It would be
great if someone can help me out with this issue as this is kinda important.

Thanks in advance.



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Not-able-to-build-GDAL-on-RHEL-5-64-bit-tp5272915.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From andrew at aitchison.me.uk  Wed Jun 22 22:07:06 2016
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Thu, 23 Jun 2016 06:07:06 +0100 (BST)
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
In-Reply-To: <1466640556419-5272915.post@n6.nabble.com>
References: <1466640556419-5272915.post@n6.nabble.com>
Message-ID: <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>

On Wed, 22 Jun 2016, sablok wrote:

> I am trying to compile gdal-2.0.2 from source using this tarball
> https://trac.osgeo.org/gdal/wiki/DownloadSource I have tried to navigate
> through every conceivable error on this mailing list archive to resolve the
> issues I have encountered while compiling it from source. The set of
> commands I am using to compile it are as follows -:
>
> /export GDAL_BUILD_VERSION=2.0.2
> cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && ./configure
> --prefix=${build_root} --without-xml2
> cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && make clean
> cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && make
> cd ${path}/config/gdal/gdal-$GDAL_BUILD_VERSION && make install/
>
> and this keeps on failing with the following error -:
>
> /config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_create_module_v2'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_malloc'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_vfs_register'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_prepare_v2'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_realloc'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_open_v2'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_declare_vtab'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_vfs_unregister'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_vfs_find'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_auto_extension'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_create_module'
> config/gdal/gdal-2.0.2/.libs/libgdal.so: undefined reference to `sqlite3_clear_bindings'
> collect2: ld returned 1 exit status
> make[1]: *** [gdalinfo] Error 1
> make[1]: Leaving directory `config/gdal/gdal-2.0.2/apps'
> make: *** [apps-target] Error 2/

The version (3.3.6) of sqlite in RHEL_5 does not appear to include those functions
(RHEL_6 has sqlite version 3.6.20 which does contain those functions).

You *may* be able to build gdal without sqlite but I have never tried.

-- 
Andrew C Aitchison

From even.rouault at spatialys.com  Wed Jun 22 23:16:42 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 23 Jun 2016 08:16:42 +0200
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
In-Reply-To: <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>
References: <1466640556419-5272915.post@n6.nabble.com>
 <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>
Message-ID: <201606230817.04001.even.rouault@spatialys.com>

> The version (3.3.6) of sqlite in RHEL_5 does not appear to include those
> functions (RHEL_6 has sqlite version 3.6.20 which does contain those
> functions).
> 
> You *may* be able to build gdal without sqlite but I have never tried.

"./configure --without-sqlite" does work (make sure to "make clean" before 
rebuilding). You'll loose a number of drivers of course.

Another option might be to compile a more recent sqlite version and build GDAL 
against it.

Older GDAL versions (1.10, 1.11? perhaps) used to build against SQLite 3.3 but 
we have not keep up apparently.


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Fri Jun 24 06:47:11 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 Jun 2016 15:47:11 +0200
Subject: [gdal-dev] Next maintenance releases
In-Reply-To: <201605312220.56652.even.rouault@spatialys.com>
References: <201605312220.56652.even.rouault@spatialys.com>
Message-ID: <201606241547.12084.even.rouault@spatialys.com>

Hi,

Just a remainder I intend doing RCs end of next week.

Even

> Hi,
> 
> Looking at https://trac.osgeo.org/gdal/roadmap, I thought we could issue
> RCs for 1.11.5, 2.0.4 and 2.1.1 for end of June.
> As the transition to 2.X is well engaged in depending apps/libs, 1.11.5
> will probably be the last one in the 1.11 series.
> 
> Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sablok at amazon.com  Fri Jun 24 08:58:30 2016
From: sablok at amazon.com (sablok)
Date: Fri, 24 Jun 2016 08:58:30 -0700 (PDT)
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
In-Reply-To: <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>
References: <1466640556419-5272915.post@n6.nabble.com>
 <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>
Message-ID: <1466783910847-5273234.post@n6.nabble.com>

What should one be doing if there is no option to move to RHEL_6, its kinda
strict requirement for my system?



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Not-able-to-build-GDAL-on-RHEL-5-64-bit-tp5272915p5273234.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Fri Jun 24 09:48:28 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 Jun 2016 18:48:28 +0200
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
In-Reply-To: <1466783910847-5273234.post@n6.nabble.com>
References: <1466640556419-5272915.post@n6.nabble.com>
 <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>
 <1466783910847-5273234.post@n6.nabble.com>
Message-ID: <201606241848.28582.even.rouault@spatialys.com>

Le vendredi 24 juin 2016 17:58:30, sablok a écrit :
> What should one be doing if there is no option to move to RHEL_6, its kinda
> strict requirement for my system?

What about the options I suggested in
https://lists.osgeo.org/pipermail/gdal-dev/2016-June/044633.html ?

(anyway, in a few months, RHEL 5 will be end of life if I trust 
https://linuxlifecycle.com/ )

> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/Not-able-to-build-GDAL-on-RHEL-5-64-bi
> t-tp5272915p5273234.html Sent from the GDAL - Dev mailing list archive at
> Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From sablok at amazon.com  Fri Jun 24 10:13:56 2016
From: sablok at amazon.com (sablok)
Date: Fri, 24 Jun 2016 10:13:56 -0700 (PDT)
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
In-Reply-To: <201606241848.28582.even.rouault@spatialys.com>
References: <1466640556419-5272915.post@n6.nabble.com>
 <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>
 <1466783910847-5273234.post@n6.nabble.com>
 <201606241848.28582.even.rouault@spatialys.com>
Message-ID: <1466788436110-5273253.post@n6.nabble.com>

The options --without-sqlite doesn't work :( and I am the point of
frustration now, even though I have all the libraries for sqlite3 in my
build path all the sqlite2 so's even tried changing the LD_LIBRARY_PATH
environment variable nothing works.



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Not-able-to-build-GDAL-on-RHEL-5-64-bit-tp5272915p5273253.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Fri Jun 24 10:37:40 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 Jun 2016 19:37:40 +0200
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
In-Reply-To: <1466788436110-5273253.post@n6.nabble.com>
References: <1466640556419-5272915.post@n6.nabble.com>
 <201606241848.28582.even.rouault@spatialys.com>
 <1466788436110-5273253.post@n6.nabble.com>
Message-ID: <201606241937.40928.even.rouault@spatialys.com>

Le vendredi 24 juin 2016 19:13:56, sablok a écrit :
> The options --without-sqlite doesn't work :( 

Sorry the correct name is --without-sqlite3

> and I am the point of
> frustration now, even though I have all the libraries for sqlite3 in my
> build path all the sqlite2 so's even tried changing the LD_LIBRARY_PATH
> environment variable nothing works

$ ./configure --help | grep sqlite
  --with-sqlite3=[ARG]    use SQLite 3 library [default=yes], optionally
                          specify the prefix for sqlite3 library

So if you configured sqlite3 to be installed in /opt/modern-sqlite3, you have 
to run GDAL configure --with-sqlite3=/opt/modern-sqlite3

LD_LIBRARY_PATH should only be needed at runtime.

> .
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/Not-able-to-build-GDAL-on-RHEL-5-64-bi
> t-tp5272915p5273253.html Sent from the GDAL - Dev mailing list archive at
> Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Blumentrath at nina.no  Fri Jun 24 12:56:15 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Fri, 24 Jun 2016 19:56:15 +0000
Subject: [gdal-dev] Next maintenance releases
In-Reply-To: <201606241547.12084.even.rouault@spatialys.com>
References: <201605312220.56652.even.rouault@spatialys.com>
 <201606241547.12084.even.rouault@spatialys.com>
Message-ID: <2c97e4da69b4479ab45d388953c7fb4b@NINSRV23.nina.no>

> Just a remainder I intend doing RCs end of next week.
>
> Even

Hei Even,

Unfortunately, I did not see earlier that you fixed https://trac.osgeo.org/gdal/ticket/6503 in trunk.
(Seems I have to add myself to cc also for tickets reported by me, if I want to follow them?)

Not sure if I manage to recover my old Windows build environment, in order to test the changes on Windows. In case I should work: I would be very happy if the geometry-type-bug-fix could be included in the next 2.1 release...

Cheers
Stefan

From even.rouault at spatialys.com  Fri Jun 24 13:03:03 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 Jun 2016 22:03:03 +0200
Subject: [gdal-dev] Next maintenance releases
In-Reply-To: <2c97e4da69b4479ab45d388953c7fb4b@NINSRV23.nina.no>
References: <201605312220.56652.even.rouault@spatialys.com>
 <201606241547.12084.even.rouault@spatialys.com>
 <2c97e4da69b4479ab45d388953c7fb4b@NINSRV23.nina.no>
Message-ID: <201606242203.03762.even.rouault@spatialys.com>

Stefan,

> 
> Unfortunately, I did not see earlier that you fixed
> https://trac.osgeo.org/gdal/ticket/6503 in trunk. (Seems I have to add
> myself to cc also for tickets reported by me, if I want to follow them?)

Check that your email address is still defined in 
https://trac.osgeo.org/gdal/prefs (applies to everyone that hasn't checked 
recently). It has been reset a few weeks ago due to a Trac upgrade apparently.

> 
> Not sure if I manage to recover my old Windows build environment, in order
> to test the changes on Windows. In case I should work: I would be very
> happy if the geometry-type-bug-fix could be included in the next 2.1
> release...
I'd prefer that someone confirms that Windows build still work before 
backporting.
Actually looking at https://trac.osgeo.org/gdal/changeset/34200, I can see 
that fyba_melding.cpp is compiled on Windows, but not on Unix (but that was 
already the case before). A bit strange...

> 
> Cheers
> Stefan

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Blumentrath at nina.no  Fri Jun 24 13:55:03 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Fri, 24 Jun 2016 20:55:03 +0000
Subject: [gdal-dev] Next maintenance releases
In-Reply-To: <201606242203.03762.even.rouault@spatialys.com>
References: <201605312220.56652.even.rouault@spatialys.com>
 <201606241547.12084.even.rouault@spatialys.com>
 <2c97e4da69b4479ab45d388953c7fb4b@NINSRV23.nina.no>
 <201606242203.03762.even.rouault@spatialys.com>
Message-ID: <a844c42b596b4dacb31b4d4fc868073c@NINSRV23.nina.no>

Hi again,

And thanks for your swift reply.

After removing the dust from my MSVC 2010 express, I managed to build the trunk version of GDAL on Win 7 Pro (happy that I wrote down the build procedure here: https://trac.osgeo.org/gdal/wiki/SOSI).

The Windows build went fine too and I can now open the SOSI file with a curved geometry, which crashed before.

However, for completeness: I got two SOSI related warnings:
C:\gdal-svn-trunk-2016.06.r\ogrsf_frmts\sosi\ogrsosilayer.cpp(332) : warning C4244: 'argument' : conversion from 'int' to 'float', possible loss of data
C:\gdal-svn-trunk-2016.06.r\ogrsf_frmts\sosi\ogrsosidatatypes.cpp(58) : warning C4244: 'return' : conversion from 'double' to 'float', possible loss of data

> Check that your email address is still defined in https://trac.osgeo.org/gdal/prefs (applies to everyone that hasn't checked recently).
Thanks, the email was missing, I added it now.

> Actually looking at https://trac.osgeo.org/gdal/changeset/34200, I can see that fyba_melding.cpp is compiled on Windows, but not on Unix (but 
> that was already the case before). A bit strange...
Might be a Windows-bias at Kartverket...

Kind regards,
Stefan




From even.rouault at spatialys.com  Fri Jun 24 14:09:50 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 24 Jun 2016 23:09:50 +0200
Subject: [gdal-dev] Next maintenance releases
In-Reply-To: <a844c42b596b4dacb31b4d4fc868073c@NINSRV23.nina.no>
References: <201605312220.56652.even.rouault@spatialys.com>
 <201606242203.03762.even.rouault@spatialys.com>
 <a844c42b596b4dacb31b4d4fc868073c@NINSRV23.nina.no>
Message-ID: <201606242309.50706.even.rouault@spatialys.com>

Le vendredi 24 juin 2016 22:55:03, Blumentrath, Stefan a écrit :
> Hi again,
> 
> And thanks for your swift reply.
> 
> After removing the dust from my MSVC 2010 express, I managed to build the
> trunk version of GDAL on Win 7 Pro (happy that I wrote down the build
> procedure here: https://trac.osgeo.org/gdal/wiki/SOSI).
> 
> The Windows build went fine too and I can now open the SOSI file with a
> curved geometry, which crashed before.
> 
> However, for completeness: I got two SOSI related warnings:
> C:\gdal-svn-trunk-2016.06.r\ogrsf_frmts\sosi\ogrsosilayer.cpp(332) :
> warning C4244: 'argument' : conversion from 'int' to 'float', possible
> loss of data
> C:\gdal-svn-trunk-2016.06.r\ogrsf_frmts\sosi\ogrsosidatatypes.cpp(58) :
> warning C4244: 'return' : conversion from 'double' to 'float', possible
> loss of data

Should be fixed by r34419

Whole driver now backported to 2.1

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From Stefan.Blumentrath at nina.no  Fri Jun 24 14:11:51 2016
From: Stefan.Blumentrath at nina.no (Blumentrath, Stefan)
Date: Fri, 24 Jun 2016 21:11:51 +0000
Subject: [gdal-dev] Next maintenance releases
In-Reply-To: <201606242309.50706.even.rouault@spatialys.com>
References: <201605312220.56652.even.rouault@spatialys.com>
 <201606242203.03762.even.rouault@spatialys.com>
 <a844c42b596b4dacb31b4d4fc868073c@NINSRV23.nina.no>
 <201606242309.50706.even.rouault@spatialys.com>
Message-ID: <e03cb310b2d549dbb83191532a6d4d46@NINSRV23.nina.no>

> Should be fixed by r34419
>
> Whole driver now backported to 2.1

Very cool! Thank you so much!

From sablok at amazon.com  Fri Jun 24 15:23:52 2016
From: sablok at amazon.com (sablok)
Date: Fri, 24 Jun 2016 15:23:52 -0700 (PDT)
Subject: [gdal-dev] Not able to build GDAL on RHEL_5 64 bit?
In-Reply-To: <201606241937.40928.even.rouault@spatialys.com>
References: <1466640556419-5272915.post@n6.nabble.com>
 <alpine.LRH.2.20.1606230549050.17801@warden.aitchison.me.uk>
 <1466783910847-5273234.post@n6.nabble.com>
 <201606241848.28582.even.rouault@spatialys.com>
 <1466788436110-5273253.post@n6.nabble.com>
 <201606241937.40928.even.rouault@spatialys.com>
Message-ID: <1466807032411-5273284.post@n6.nabble.com>

That worked thanks a lot :)



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Not-able-to-build-GDAL-on-RHEL-5-64-bit-tp5272915p5273284.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Sat Jun 25 10:20:21 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 25 Jun 2016 19:20:21 +0200
Subject: [gdal-dev] Requesting new driver?
In-Reply-To: <CABG0rftNsnPjhT0Qv7ehh+dOQMPcm1=s+fydcaYw6M+cUtA5_A@mail.gmail.com>
References: <CABG0rftNsnPjhT0Qv7ehh+dOQMPcm1=s+fydcaYw6M+cUtA5_A@mail.gmail.com>
Message-ID: <201606251920.21497.even.rouault@spatialys.com>

Le mardi 01 décembre 2015 20:34:10, Jonathan Greenberg a écrit :
> GDAL Developers:
> 
> How do I go about requesting a new driver?  R's "raster" format is a pretty
> straightforward flat binary/header format (very similar to ENVI's).  The
> specifications are laid out in:
> 
> https://cran.r-project.org/web/packages/raster/vignettes/rasterfile.pdf
> 
> I think this would be a nice addition, to allow more fluid work between R
> and the various gdal utilities.
> 
> I'm cc'ing the developer of the format on this email, as an FYI.  Cheers!

I've added read support for that format in GDAL trunk :
https://trac.osgeo.org/gdal/ticket/6249

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From mwtoews at gmail.com  Sat Jun 25 16:00:52 2016
From: mwtoews at gmail.com (Mike Toews)
Date: Sun, 26 Jun 2016 11:00:52 +1200
Subject: [gdal-dev] VRT raster for reading formatted files?
Message-ID: <CAM2FmMpmgUaF9ZqqpNpjiwtDO54NP991BmEX041dyJsWGsMFTw@mail.gmail.com>

Hi all,

I've been using the VRTRawRasterBand feature of the VRT format to read
unformatted (so-called "BINARY") 2D grid data, which has been very
successful to adapt to obscure formats.

However, I would like to know if there is a similar feature of the VRT
format to read formatted values (so-called "ASCII") from a
SourceFilename.

There are already a few GDAL drivers that do this already,
specifically AAIGrid / GRASSASCIIGrid and GSAG. Possibly others. But
it would be great to see if there is a generic approach with VRT.

An example of a SourceFilename is at:
https://github.com/mwtoews/MODFLOW-2005/blob/release/test-run/etsdrt.bas

With this example there are two formatted 2D arrays (integer and
float), which of course start on different line numbers (4 and 17).
Other parts of this file have a specific format, and are out of scope.
Similar to VRTRawRasterBand, all of other metadata, including grid
size, are provided elsewhere.

Cheers,
-Mike

From even.rouault at spatialys.com  Sat Jun 25 17:00:25 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Sun, 26 Jun 2016 02:00:25 +0200
Subject: [gdal-dev] VRT raster for reading formatted files?
In-Reply-To: <CAM2FmMpmgUaF9ZqqpNpjiwtDO54NP991BmEX041dyJsWGsMFTw@mail.gmail.com>
References: <CAM2FmMpmgUaF9ZqqpNpjiwtDO54NP991BmEX041dyJsWGsMFTw@mail.gmail.com>
Message-ID: <201606260200.25085.even.rouault@spatialys.com>

Le dimanche 26 juin 2016 01:00:52, Mike Toews a écrit :
> Hi all,
> 
> I've been using the VRTRawRasterBand feature of the VRT format to read
> unformatted (so-called "BINARY") 2D grid data, which has been very
> successful to adapt to obscure formats.
> 
> However, I would like to know if there is a similar feature of the VRT
> format to read formatted values (so-called "ASCII") from a
> SourceFilename.

No.

One workaround I can think of would be to use a /vsisparse/ file to do that. 
See http://gdal.org/cpl__vsi_8h.html#ab79aed725b28eb22471a8b6733405843

You would create a AAIGRID header for the first region, and point to your .bas 
for the data part.

But at that point you could probably just create a AAIGRID file by copy&pasting 
from your .bas...

> 
> There are already a few GDAL drivers that do this already,
> specifically AAIGrid / GRASSASCIIGrid and GSAG. Possibly others. But
> it would be great to see if there is a generic approach with VRT.
> 
> An example of a SourceFilename is at:
> https://github.com/mwtoews/MODFLOW-2005/blob/release/test-run/etsdrt.bas
> 
> With this example there are two formatted 2D arrays (integer and
> float), which of course start on different line numbers (4 and 17).
> Other parts of this file have a specific format, and are out of scope.
> Similar to VRTRawRasterBand, all of other metadata, including grid
> size, are provided elsewhere.
> 
> Cheers,
> -Mike
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From 191980 at niuitmo.ru  Sun Jun 26 06:14:06 2016
From: 191980 at niuitmo.ru (=?utf-8?B?0JHQvtGA0LfRi9GFINCQ0LvQtdC60YHQsNC90LTRgCDQkNC90LTRgNC10LU=?= =?utf-8?B?0LLQuNGH?=)
Date: Sun, 26 Jun 2016 13:14:06 +0000
Subject: [gdal-dev] GSoC GDAL DWG Support [Week 5]
Message-ID: <8D65858E-9C21-4C7F-ABA9-4A0C6FE9DB30@niuitmo.ru>

Blogpost link<http://gsoc2016gdaldwg.blogspot.ru/2016/06/week-5-report.html>.


I have declined the idea of starting implementing R13-14 support because R15 still misses some necessary capabilities, and they should be done earlier than adding support for a new version. Also, the differences between R15 and R13/R14 are pretty small, and implementing them will not be a difficult task.


1. This week I've done:

Libopencad changes:

- Fixed failing on geometry reading tests (if library was compiled with GCC).

- Fixed Travis-CI build (now it works properly).


OGR CAD Driver changes:

- Added LWPolyline, Polyline3D (polylines does not support 'tesselation' yet), Text, MText (texts are presented as single point with filled "Text" attribute field), Ellipse support.

- Changed VSIF...() functions calls to VSIF...L().


2. Plan on doing next week:

Implement methods to extract info about coordinate system from file, or from associated .prj file.

Add tesselation to polylines. Add spline geometry support in driver. Start on implementing reading of ExtendedEntityData and adding its support to CAD Driver.


3. Blocking:

None, but Hatch geometry is pretty complex to implement, I am still working on it (will be done in next 2-3 days). Also, WIPEOUT geometry (which sometimes can be seen in DWG files) has no description in ODA DWG Specs.


Links:

libopencad github<https://github.com/sandyre/libopencad>

gdal + libopencad fork github<https://github.com/sandyre/gdal_libopencad>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160626/a9dd2162/attachment.html>

From support at satshot.com  Sun Jun 26 14:52:38 2016
From: support at satshot.com (Neil Oster)
Date: Mon, 27 Jun 2016 00:52:38 +0300
Subject: [gdal-dev] =?utf-8?q?=28no_subject=29?=
Message-ID: <000083533d8d$7dedfbb6$bb29a67d$@satshot.com>



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160627/af5507a3/attachment.html>

From andrew at dcs.bbk.ac.uk  Mon Jun 27 03:44:07 2016
From: andrew at dcs.bbk.ac.uk (Andrew Watkins)
Date: Mon, 27 Jun 2016 11:44:07 +0100
Subject: [gdal-dev] Building gdal on solaris 11
Message-ID: <06369078-2641-3179-dd38-51ab61b109dd@dcs.bbk.ac.uk>


Hello,

I am trying to build postgis on Solaris 11, but having problems with 
gdal part.

I have seen people have said they have compiled it, but worst luck they 
have never given any details.

I have tried old and new versions but no luck. Any ideas?

gdal 2.1.0
==========
# CFLAGS="-m64" CXXFLAGS="-m64" LDFLAGS="-m64" ./configure
# gmake

libtool: compile:  g++ -I/export/src/databases/gdal-2.1.0/port 
-I/export/src/databases/gdal-2.1.0/gcore 
-I/export/src/databases/gdal-2.1.0/alg 
-I/export/src/databases/gdal-2.1.0/ogr 
-I/export/src/databases/gdal-2.1.0/ogr/ogrsf_frmts 
-I/export/src/databases/gdal-2.1.0/gnm 
-I/export/src/databases/gdal-2.1.0/apps -m64 -Wall -Wextra -Winit-self 
-Wunused-parameter -Wformat -Werror=format-security 
-Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla 
-Wmissing-declarations -Wnon-virtual-dtor -Woverloaded-virtual 
-fno-operator-names -DLERC -I libLERC 
-I/export/src/databases/gdal-2.1.0/port 
-I/export/src/databases/gdal-2.1.0/gcore 
-I/export/src/databases/gdal-2.1.0/alg 
-I/export/src/databases/gdal-2.1.0/ogr 
-I/export/src/databases/gdal-2.1.0/ogr/ogrsf_frmts 
-I/export/src/databases/gdal-2.1.0/gnm 
-I/export/src/databases/gdal-2.1.0/apps -DOGR_ENABLED 
-I/export/src/databases/gdal-2.1.0/port -DGDAL_COMPILATION -c 
marfa_dataset.cpp  -fPIC -DPIC -o ../o/.libs/marfa_dataset.o
marfa_dataset.cpp: In member function 'CPLXMLNode* 
GDAL_MRF::GDALMRFDataset::BuildConfig()':
marfa_dataset.cpp:1072:14: error: expected unqualified-id before numeric 
constant
marfa_dataset.cpp:1072:14: error: expected initializer before numeric 
constant
marfa_dataset.cpp:1074:66: error: invalid conversion from 'int' to 
'CPLXMLNode*'
marfa_dataset.cpp:1074:66: error:   initializing argument 1 of 
'CPLXMLNode* CPLCreateXMLElementAndValue(CPLXMLNode*, const char*, const 
char*)'
gmake[2]: *** [../o/marfa_dataset.lo] Error 1
gmake[2]: Leaving directory `/export/src/databases/gdal-2.1.0/frmts/mrf'
gmake[1]: *** [mrf-install-obj] Error 2
gmake[1]: Leaving directory `/export/src/databases/gdal-2.1.0/frmts'
gmake: *** [frmts-target] Error 2


gdal 1.11.4
===========
# CFLAGS="-m64" CXXFLAGS="-m64" LDFLAGS="-m64" ./configure
# gmake

/bin/sh /export/src/databases/gdal-1.11.4/libtool --mode=compile 
--tag=CC gcc -m64 -DHAVE_SSE_AT_COMPILE_TIME  -Wall 
-Wdeclaration-after-statement -I/export/src/databases/gdal-1.11.4/port 
-I/export/src/databases/gdal-1.11.4/gcore 
-I/export/src/databases/gdal-1.11.4/alg 
-I/export/src/databases/gdal-1.11.4/ogr 
-I/export/src/databases/gdal-1.11.4/ogr/ogrsf_frmts 
-I/export/src/databases/gdal-1.11.4/frmts/vrt -DOGR_ENABLED 
-I/export/src/databases/gdal-1.11.4/port  -c -o gdalserver.lo gdalserver.c
libtool: compile:  gcc -m64 -DHAVE_SSE_AT_COMPILE_TIME -Wall 
-Wdeclaration-after-statement -I/export/src/databases/gdal-1.11.4/port 
-I/export/src/databases/gdal-1.11.4/gcore 
-I/export/src/databases/gdal-1.11.4/alg 
-I/export/src/databases/gdal-1.11.4/ogr 
-I/export/src/databases/gdal-1.11.4/ogr/ogrsf_frmts 
-I/export/src/databases/gdal-1.11.4/frmts/vrt -DOGR_ENABLED 
-I/export/src/databases/gdal-1.11.4/port -c gdalserver.c  -fPIC -DPIC -o 
.libs/gdalserver.o
In file included from /usr/include/stdio.h:15:0,
                  from 
/export/src/databases/gdal-1.11.4/port/cpl_port.h:144,
                  from gdalserver.c:33:
/usr/include/sys/feature_tests.h:358:2: error: #error "Compiler or 
options invalid; UNIX 03 and POSIX.1-2001 applications     require the 
use of c99"
gmake[1]: *** [gdalserver.lo] Error 1
gmake[1]: Leaving directory `/export/src/databases/gdal-1.11.4/apps'
gmake: *** [apps-target] Error 2



Thanks,

Andrew

-- 
Andrew Watkins * Birkbeck, University of London * Computer Science *
* http://notallmicrosoft.blogspot.com *
* UKOUG Systems SIG Chair *
* UKOUG Tech committee *
* tel: 020 7631 6720 *

  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160627/cd560a8f/attachment.html>

From robin at rtwilson.com  Mon Jun 27 04:21:23 2016
From: robin at rtwilson.com (Robin Wilson)
Date: Mon, 27 Jun 2016 12:21:23 +0100
Subject: [gdal-dev] wrapper_GDALWarpDestName returned NULL without setting
	an error - from Python gdalwarp interface
Message-ID: <CA339910-1284-4199-AA99-BE0CA9827D41@rtwilson.com>

Hi,

I'm very much enjoying the new feature in GDAL that gives programmatic access to the command-line tools. However, I've run into a problem using gdal.Warp from within Python.

In the example IPython session below, you can see that I try to run gdal.Warp and get an error, but using the equivalent parameters for the command-line (run with the ! at the beginning from within IPython), it works fine.


In [15]: gdal.Warp('data.vrt', 'robin2.tif', srcSRS = 'EPSG:4326', dstSRS = 'EPSG:27700', geoloc=True)
---------------------------------------------------------------------------
SystemError                               Traceback (most recent call last)
<ipython-input-15-279de83a9634> in <module>()
----> 1 gdal.Warp('data.vrt', 'robin2.tif', srcSRS = 'EPSG:4326', dstSRS = 'EPSG:27700', geoloc=True)

/Users/robin/anaconda3/lib/python3.5/site-packages/osgeo/gdal.py in Warp(destNameOrDestDS, srcDSOrSrcDSTab, **kwargs)
    547 
    548     if _is_str_or_unicode(destNameOrDestDS):
--> 549         return wrapper_GDALWarpDestName(destNameOrDestDS, srcDSTab, opts, callback, callback_data)
    550     else:
    551         return wrapper_GDALWarpDestDS(destNameOrDestDS, srcDSTab, opts, callback, callback_data)

SystemError: <built-in function wrapper_GDALWarpDestName> returned NULL without setting an error

In [16]: !gdalwarp data.vrt robin2.tif -geoloc -s_srs "EPSG:4326" -t_srs "EPSG:27700"
Creating output file that is 1240P x 1162L.
Processing input file data.vrt.
0...10...20...30...40...50...60...70...80...90...100 - done.

Am I doing something wrong here in how I set the parameters for the gdal.Warp call?

Thanks,

Robin

Dr Robin Wilson
Research Fellow
University of Southampton, UK

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160627/cf1e8f09/attachment.html>

From even.rouault at spatialys.com  Mon Jun 27 04:42:45 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jun 2016 13:42:45 +0200
Subject: [gdal-dev] wrapper_GDALWarpDestName returned NULL without
	setting an error - from Python gdalwarp interface
In-Reply-To: <CA339910-1284-4199-AA99-BE0CA9827D41@rtwilson.com>
References: <CA339910-1284-4199-AA99-BE0CA9827D41@rtwilson.com>
Message-ID: <201606271342.45938.even.rouault@spatialys.com>

Robin,

> 
> Am I doing something wrong here in how I set the parameters for the
> gdal.Warp call?

Yes. All "librarified" command line utilities have been designed with the 
gdal.XXXX(dest, source, ....) convention (similarly to Dataset.CreateCopy() 
for example), so if you switch your 2 first arguments that should work.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From even.rouault at spatialys.com  Mon Jun 27 04:50:25 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jun 2016 13:50:25 +0200
Subject: [gdal-dev] Building gdal on solaris 11
In-Reply-To: <06369078-2641-3179-dd38-51ab61b109dd@dcs.bbk.ac.uk>
References: <06369078-2641-3179-dd38-51ab61b109dd@dcs.bbk.ac.uk>
Message-ID: <201606271350.25113.even.rouault@spatialys.com>

Le lundi 27 juin 2016 12:44:07, Andrew Watkins a écrit :
> Hello,
> 
> I am trying to build postgis on Solaris 11, but having problems with
> gdal part.
> 
> I have seen people have said they have compiled it, but worst luck they
> have never given any details.
> 
> I have tried old and new versions but no luck. Any ideas?
> 
> gdal 2.1.0
> ==========
> # CFLAGS="-m64" CXXFLAGS="-m64" LDFLAGS="-m64" ./configure
> # gmake
> 
> libtool: compile:  g++ -I/export/src/databases/gdal-2.1.0/port
> -I/export/src/databases/gdal-2.1.0/gcore
> -I/export/src/databases/gdal-2.1.0/alg
> -I/export/src/databases/gdal-2.1.0/ogr
> -I/export/src/databases/gdal-2.1.0/ogr/ogrsf_frmts
> -I/export/src/databases/gdal-2.1.0/gnm
> -I/export/src/databases/gdal-2.1.0/apps -m64 -Wall -Wextra -Winit-self
> -Wunused-parameter -Wformat -Werror=format-security
> -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla
> -Wmissing-declarations -Wnon-virtual-dtor -Woverloaded-virtual
> -fno-operator-names -DLERC -I libLERC
> -I/export/src/databases/gdal-2.1.0/port
> -I/export/src/databases/gdal-2.1.0/gcore
> -I/export/src/databases/gdal-2.1.0/alg
> -I/export/src/databases/gdal-2.1.0/ogr
> -I/export/src/databases/gdal-2.1.0/ogr/ogrsf_frmts
> -I/export/src/databases/gdal-2.1.0/gnm
> -I/export/src/databases/gdal-2.1.0/apps -DOGR_ENABLED
> -I/export/src/databases/gdal-2.1.0/port -DGDAL_COMPILATION -c
> marfa_dataset.cpp  -fPIC -DPIC -o ../o/.libs/marfa_dataset.o
> marfa_dataset.cpp: In member function 'CPLXMLNode*
> GDAL_MRF::GDALMRFDataset::BuildConfig()':
> marfa_dataset.cpp:1072:14: error: expected unqualified-id before numeric
> constant
> marfa_dataset.cpp:1072:14: error: expected initializer before numeric
> constant
> marfa_dataset.cpp:1074:66: error: invalid conversion from 'int' to
> 'CPLXMLNode*'
> marfa_dataset.cpp:1074:66: error:   initializing argument 1 of
> 'CPLXMLNode* CPLCreateXMLElementAndValue(CPLXMLNode*, const char*, const
> char*)'

Interesting... Wondering if "CS" might not be defined in a Solaris header. 
could you try replacing CS at line 1072 and 1074 of 
frmts/mrf/marfa_dataset.cpp with "cachedSource" for example ?

So :
	CPLXMLNode *cachedSource = CPLCreateXMLNode(config, CXT_Element, 
"CachedSource");
	// Should wrap the string in CDATA, in case it is XML
	CPLXMLNode *S = CPLCreateXMLElementAndValue(cachedSource, "Source", 
source);

You can also disable the MRF driver with ./configure --without-mrf


> gmake[2]: *** [../o/marfa_dataset.lo] Error 1
> gmake[2]: Leaving directory `/export/src/databases/gdal-2.1.0/frmts/mrf'
> gmake[1]: *** [mrf-install-obj] Error 2
> gmake[1]: Leaving directory `/export/src/databases/gdal-2.1.0/frmts'
> gmake: *** [frmts-target] Error 2
> 
> 
> gdal 1.11.4
> ===========
> # CFLAGS="-m64" CXXFLAGS="-m64" LDFLAGS="-m64" ./configure
> # gmake
> 
> /bin/sh /export/src/databases/gdal-1.11.4/libtool --mode=compile
> --tag=CC gcc -m64 -DHAVE_SSE_AT_COMPILE_TIME  -Wall
> -Wdeclaration-after-statement -I/export/src/databases/gdal-1.11.4/port
> -I/export/src/databases/gdal-1.11.4/gcore
> -I/export/src/databases/gdal-1.11.4/alg
> -I/export/src/databases/gdal-1.11.4/ogr
> -I/export/src/databases/gdal-1.11.4/ogr/ogrsf_frmts
> -I/export/src/databases/gdal-1.11.4/frmts/vrt -DOGR_ENABLED
> -I/export/src/databases/gdal-1.11.4/port  -c -o gdalserver.lo gdalserver.c
> libtool: compile:  gcc -m64 -DHAVE_SSE_AT_COMPILE_TIME -Wall
> -Wdeclaration-after-statement -I/export/src/databases/gdal-1.11.4/port
> -I/export/src/databases/gdal-1.11.4/gcore
> -I/export/src/databases/gdal-1.11.4/alg
> -I/export/src/databases/gdal-1.11.4/ogr
> -I/export/src/databases/gdal-1.11.4/ogr/ogrsf_frmts
> -I/export/src/databases/gdal-1.11.4/frmts/vrt -DOGR_ENABLED
> -I/export/src/databases/gdal-1.11.4/port -c gdalserver.c  -fPIC -DPIC -o
> .libs/gdalserver.o
> In file included from /usr/include/stdio.h:15:0,
>                   from
> /export/src/databases/gdal-1.11.4/port/cpl_port.h:144,
>                   from gdalserver.c:33:
> /usr/include/sys/feature_tests.h:358:2: error: #error "Compiler or
> options invalid; UNIX 03 and POSIX.1-2001 applications     require the
> use of c99"
> gmake[1]: *** [gdalserver.lo] Error 1
> gmake[1]: Leaving directory `/export/src/databases/gdal-1.11.4/apps'
> gmake: *** [apps-target] Error 2

I see that in GDAL 2.1.0, I've done a related fix :
https://trac.osgeo.org/gdal/changeset/32152 . I guess this was before the 
inclusion of the MRF driver.

> 
> 
> 
> Thanks,
> 
> Andrew

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From andrew at dcs.bbk.ac.uk  Mon Jun 27 07:38:49 2016
From: andrew at dcs.bbk.ac.uk (Andrew Watkins)
Date: Mon, 27 Jun 2016 15:38:49 +0100
Subject: [gdal-dev] Building gdal on solaris 11
In-Reply-To: <201606271350.25113.even.rouault@spatialys.com>
References: <06369078-2641-3179-dd38-51ab61b109dd@dcs.bbk.ac.uk>
 <201606271350.25113.even.rouault@spatialys.com>
Message-ID: <83756b08-7b0b-0a1a-c1e6-9164d4575ea4@dcs.bbk.ac.uk>

On 06/27/16 12:50, Even Rouault wrote:
> Le lundi 27 juin 2016 12:44:07, Andrew Watkins a écrit :
>> Hello,
>>
>> I am trying to build postgis on Solaris 11, but having problems with
>> gdal part.
>>
>> I have seen people have said they have compiled it, but worst luck they
>> have never given any details.
>>
>> I have tried old and new versions but no luck. Any ideas?
>>
>> gdal 2.1.0
>> ==========
>> # CFLAGS="-m64" CXXFLAGS="-m64" LDFLAGS="-m64" ./configure
>> # gmake
>>
>> libtool: compile:  g++ -I/export/src/databases/gdal-2.1.0/port
>> -I/export/src/databases/gdal-2.1.0/gcore
>> -I/export/src/databases/gdal-2.1.0/alg
>> -I/export/src/databases/gdal-2.1.0/ogr
>> -I/export/src/databases/gdal-2.1.0/ogr/ogrsf_frmts
>> -I/export/src/databases/gdal-2.1.0/gnm
>> -I/export/src/databases/gdal-2.1.0/apps -m64 -Wall -Wextra -Winit-self
>> -Wunused-parameter -Wformat -Werror=format-security
>> -Wno-format-nonliteral -Wlogical-op -Wshadow -Werror=vla
>> -Wmissing-declarations -Wnon-virtual-dtor -Woverloaded-virtual
>> -fno-operator-names -DLERC -I libLERC
>> -I/export/src/databases/gdal-2.1.0/port
>> -I/export/src/databases/gdal-2.1.0/gcore
>> -I/export/src/databases/gdal-2.1.0/alg
>> -I/export/src/databases/gdal-2.1.0/ogr
>> -I/export/src/databases/gdal-2.1.0/ogr/ogrsf_frmts
>> -I/export/src/databases/gdal-2.1.0/gnm
>> -I/export/src/databases/gdal-2.1.0/apps -DOGR_ENABLED
>> -I/export/src/databases/gdal-2.1.0/port -DGDAL_COMPILATION -c
>> marfa_dataset.cpp  -fPIC -DPIC -o ../o/.libs/marfa_dataset.o
>> marfa_dataset.cpp: In member function 'CPLXMLNode*
>> GDAL_MRF::GDALMRFDataset::BuildConfig()':
>> marfa_dataset.cpp:1072:14: error: expected unqualified-id before numeric
>> constant
>> marfa_dataset.cpp:1072:14: error: expected initializer before numeric
>> constant
>> marfa_dataset.cpp:1074:66: error: invalid conversion from 'int' to
>> 'CPLXMLNode*'
>> marfa_dataset.cpp:1074:66: error:   initializing argument 1 of
>> 'CPLXMLNode* CPLCreateXMLElementAndValue(CPLXMLNode*, const char*, const
>> char*)'
> Interesting... Wondering if "CS" might not be defined in a Solaris header.
> could you try replacing CS at line 1072 and 1074 of
> frmts/mrf/marfa_dataset.cpp with "cachedSource" for example ?
>
> So :
> 	CPLXMLNode *cachedSource = CPLCreateXMLNode(config, CXT_Element,
> "CachedSource");
> 	// Should wrap the string in CDATA, in case it is XML
> 	CPLXMLNode *S = CPLCreateXMLElementAndValue(cachedSource, "Source",
> source);
>
> You can also disable the MRF driver with ./configure --without-mrf
>
>
>> gmake[2]: *** [../o/marfa_dataset.lo] Error 1
>> gmake[2]: Leaving directory `/export/src/databases/gdal-2.1.0/frmts/mrf'
>> gmake[1]: *** [mrf-install-obj] Error 2
>> gmake[1]: Leaving directory `/export/src/databases/gdal-2.1.0/frmts'
>> gmake: *** [frmts-target] Error 2
>>
>>
>> gdal 1.11.4
>> ===========
>> # CFLAGS="-m64" CXXFLAGS="-m64" LDFLAGS="-m64" ./configure
>> # gmake
>>
>> /bin/sh /export/src/databases/gdal-1.11.4/libtool --mode=compile
>> --tag=CC gcc -m64 -DHAVE_SSE_AT_COMPILE_TIME  -Wall
>> -Wdeclaration-after-statement -I/export/src/databases/gdal-1.11.4/port
>> -I/export/src/databases/gdal-1.11.4/gcore
>> -I/export/src/databases/gdal-1.11.4/alg
>> -I/export/src/databases/gdal-1.11.4/ogr
>> -I/export/src/databases/gdal-1.11.4/ogr/ogrsf_frmts
>> -I/export/src/databases/gdal-1.11.4/frmts/vrt -DOGR_ENABLED
>> -I/export/src/databases/gdal-1.11.4/port  -c -o gdalserver.lo gdalserver.c
>> libtool: compile:  gcc -m64 -DHAVE_SSE_AT_COMPILE_TIME -Wall
>> -Wdeclaration-after-statement -I/export/src/databases/gdal-1.11.4/port
>> -I/export/src/databases/gdal-1.11.4/gcore
>> -I/export/src/databases/gdal-1.11.4/alg
>> -I/export/src/databases/gdal-1.11.4/ogr
>> -I/export/src/databases/gdal-1.11.4/ogr/ogrsf_frmts
>> -I/export/src/databases/gdal-1.11.4/frmts/vrt -DOGR_ENABLED
>> -I/export/src/databases/gdal-1.11.4/port -c gdalserver.c  -fPIC -DPIC -o
>> .libs/gdalserver.o
>> In file included from /usr/include/stdio.h:15:0,
>>                    from
>> /export/src/databases/gdal-1.11.4/port/cpl_port.h:144,
>>                    from gdalserver.c:33:
>> /usr/include/sys/feature_tests.h:358:2: error: #error "Compiler or
>> options invalid; UNIX 03 and POSIX.1-2001 applications     require the
>> use of c99"
>> gmake[1]: *** [gdalserver.lo] Error 1
>> gmake[1]: Leaving directory `/export/src/databases/gdal-1.11.4/apps'
>> gmake: *** [apps-target] Error 2
> I see that in GDAL 2.1.0, I've done a related fix :
> https://trac.osgeo.org/gdal/changeset/32152 . I guess this was before the
> inclusion of the MRF driver.
>
>>
>>
>> Thanks,
>>
>> Andrew

That worked like a dream!

> Interesting... Wondering if "CS" might not be defined in a Solaris header.
> could you try replacing CS at line 1072 and 1074 of
> frmts/mrf/marfa_dataset.cpp with "cachedSource" for example ?
>
> So :
> 	CPLXMLNode *cachedSource = CPLCreateXMLNode(config, CXT_Element,
> "CachedSource");
> 	// Should wrap the string in CDATA, in case it is XML
> 	CPLXMLNode *S = CPLCreateXMLElementAndValue(cachedSource, "Source",
> source);
Replacing "CS" with "cachedSource" solved the problem.

Cheers.

Andrew

-- 
Andrew Watkins * Birkbeck, University of London * Computer Science *
* http://notallmicrosoft.blogspot.com *
* UKOUG Systems SIG Chair *
* UKOUG Tech committee *
* tel: 020 7631 6720 *

  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160627/f8e74121/attachment.html>

From even.rouault at spatialys.com  Mon Jun 27 07:58:12 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jun 2016 16:58:12 +0200
Subject: [gdal-dev] Building gdal on solaris 11
In-Reply-To: <83756b08-7b0b-0a1a-c1e6-9164d4575ea4@dcs.bbk.ac.uk>
References: <06369078-2641-3179-dd38-51ab61b109dd@dcs.bbk.ac.uk>
 <201606271350.25113.even.rouault@spatialys.com>
 <83756b08-7b0b-0a1a-c1e6-9164d4575ea4@dcs.bbk.ac.uk>
Message-ID: <201606271658.13066.even.rouault@spatialys.com>


> Replacing "CS" with "cachedSource" solved the problem.

Great. Fixed per https://trac.osgeo.org/gdal/ticket/6559


-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From bdeschamps.home at gmail.com  Mon Jun 27 08:42:23 2016
From: bdeschamps.home at gmail.com (Benjamin Deschamps)
Date: Mon, 27 Jun 2016 11:42:23 -0400
Subject: [gdal-dev] gdalwarp RPC_DEM NoData value
Message-ID: <CAMGmV3sBwOgfnfVrHvv=Y4kQoa-TSoan-3tjXALM2xG_X2TcwA@mail.gmail.com>

Hi,

In reference to this older thread:
https://lists.osgeo.org/pipermail/gdal-dev/2012-April/032343.html

I encountered the same issue; I'm fairly certain that the issue is due to
invalid RPC_DEM values, in my case, NoData values of -32768. Setting the
NoData value in the GeoTiff has no effect either, gdalwarp still attempts
to apply the RPC model to these points. If I replace all these values with
"0", the RPC orthorectification is successful, probably because zero is a
more sensible elevation.

Is there a way to consider NoData pixels in the RPC_DEM, and preventing
them from being used for locating the output extents?

Example command:

gdalwarp -r cubic -rpc -overwrite -to "RPC_DEM=dem.tif" -tr 30 30 -t_srs
"+proj=aea +lat_1=44.75 +lat_2=55.75 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0
+ellps=WGS84 +datum=WGS84 +units=m +no_defs" image_with_rpc_metadata.tif
ortho_output.tif


Thanks,

Benjamin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160627/456848d6/attachment.html>

From even.rouault at spatialys.com  Mon Jun 27 09:00:05 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 27 Jun 2016 18:00:05 +0200
Subject: [gdal-dev] gdalwarp RPC_DEM NoData value
In-Reply-To: <CAMGmV3sBwOgfnfVrHvv=Y4kQoa-TSoan-3tjXALM2xG_X2TcwA@mail.gmail.com>
References: <CAMGmV3sBwOgfnfVrHvv=Y4kQoa-TSoan-3tjXALM2xG_X2TcwA@mail.gmail.com>
Message-ID: <201606271800.05274.even.rouault@spatialys.com>

Le lundi 27 juin 2016 17:42:23, Benjamin Deschamps a écrit :
> Hi,
> 
> In reference to this older thread:
> https://lists.osgeo.org/pipermail/gdal-dev/2012-April/032343.html
> 
> I encountered the same issue; I'm fairly certain that the issue is due to
> invalid RPC_DEM values, in my case, NoData values of -32768. Setting the
> NoData value in the GeoTiff has no effect either, gdalwarp still attempts
> to apply the RPC model to these points. If I replace all these values with
> "0", the RPC orthorectification is successful, probably because zero is a
> more sensible elevation.
> 
> Is there a way to consider NoData pixels in the RPC_DEM, and preventing
> them from being used for locating the output extents?

Benjamin,

You can use the RPC_DEM_MISSING_VALUE warping option :
http://www.gdal.org/gdal__alg_8h.html#af4c3c0d4c79218995b3a1f0bac3700a0

However that probably doesn't cover your "preventing them from being used for 
locating the output extents" requirement.

So filling nodata values as you did is probably the only option. You can also 
do it with a VRT file with :
gdalbuildvrt -hidenodata -vrtnodata 0 nodata_replaced_with_zero.vrt nodata.tif 

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kai.muehlbauer at uni-bonn.de  Mon Jun 27 11:49:23 2016
From: kai.muehlbauer at uni-bonn.de (=?UTF-8?Q?Kai_M=c3=bchlbauer?=)
Date: Mon, 27 Jun 2016 20:49:23 +0200
Subject: [gdal-dev] building gdal with python and libtool
Message-ID: <57717533.4010500@uni-bonn.de>

Hi all,

while trying to build gdal on linux (on CircleCi in a CentOS based 
docker image using conda/conda-forge) like this:

------------------------------------------------------------
export CC=gcc
export CXX=g++
export CFLAGS="${CFLAGS}"
export CXXFLAGS="${CXXFLAGS} -DBOOST_MATH_DISABLE_FLOAT128"
export LDFLAGS="${LDFLAGS}"
export LINKFLAGS="${LDFLAGS}"
export CFLAGS="${CFLAGS} -m${ARCH}"
export CXXFLAGS="${CXXFLAGS} -m${ARCH}"

export LDFLAGS="$LDFLAGS -L$PREFIX/lib"
export CPPFLAGS="$CPPFLAGS -I$PREFIX/include"

./configure --prefix=$PREFIX \
             --with-hdf4=$PREFIX \
             --with-hdf5=$PREFIX \
             --with-xerces=$PREFIX \
             --with-netcdf=$PREFIX \
             --with-geos=$PREFIX/bin/geos-config \
             --with-kea=$PREFIX/bin/kea-config \
             --with-static-proj4=$PREFIX \
             --with-libz=$PREFIX \
             --with-png=$PREFIX \
             --with-jpeg=$PREFIX \
             --with-libjson-c=$PREFIX \
             --with-expat=$PREFIX \
             --with-freexl=$PREFIX \
             --with-libtiff=$PREFIX \
             --with-xml2=$PREFIX \
             --with-openjpeg=$PREFIX \
             --with-spatialite=$PREFIX \
             --with-pg=$PREFIX/bin/pg_config \
             --with-sqlite3=$PREFIX \
             --with-curl \
             --with-python \
             --disable-rpath

make
make install
-----------------------------------------------------------

we are experiencing the same issue like posted here:

http://www.michael-joost.de/gdal_install.html

Everything works OK, until the build descends into the swig/python 
subdir, then the two compile commands work using libtool. But when it 
comes to linking, we get this error:

/bin/bash -pthread -shared -L/home/sam/miniconda3/envs/_build/lib 
-Wl,-rpath=/home/sam/miniconda3/envs/_build/lib,--no-as-needed 
-L/home/sam/miniconda3/envs/_build/lib 
-L/home/sam/miniconda3/envs/_build/lib -m64 -Wall 
-Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter 
-Wmissing-prototypes -Wmissing-declarations -Wformat 
-Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow 
-Werror=vla -Wdeclaration-after-statement -DOGR_ENABLED 
-I/home/sam/miniconda3/envs/_build/include 
-I/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/port 
-I/home/sam/miniconda3/envs/_build/include 
-I/home/sam/miniconda3/envs/_build/include 
-I/home/sam/miniconda3/envs/_build 
-I/home/sam/miniconda3/envs/_build/include 
-I/home/sam/miniconda3/envs/_build/include 
-I/home/sam/miniconda3/envs/_build 
-I/home/sam/miniconda3/envs/_build/include 
-I/home/sam/miniconda3/envs/_build 
-I/home/sam/miniconda3/envs/_build/include -DGDAL_COMPILATION 
build/temp.linux-x86_64-3.4/extensions/gdal_wrap.o -L../../.libs 
-L../../ -L/home/sam/miniconda3/envs/_build/lib 
-L/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/lib -lpython3.4m -lgdal 
-o build/lib.linux-x86_64-3.4/osgeo/_gdal.cpython-34m.so
/bin/bash: -d: invalid option
error: command '/bin/bash' failed with exit status 1
make[2]: *** [build] Error 1
make[2]: Leaving directory 
`/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/swig/python'
make[1]: *** [build] Error 2
make[1]: Leaving directory 
`/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/swig'

Using internet search I found that it could be related to wrongly set 
environment variables. But I can't find any problems so far. Using 
configure with --without-libtool leads to stable build without errors.

Although we can build gdal this way, we like to find the root cause of 
this libtool-problem. Any hints appreciated!

Cheers,
Kai

From andrew at aitchison.me.uk  Mon Jun 27 13:54:53 2016
From: andrew at aitchison.me.uk (Andrew C Aitchison)
Date: Mon, 27 Jun 2016 21:54:53 +0100 (BST)
Subject: [gdal-dev] building gdal with python and libtool
In-Reply-To: <57717533.4010500@uni-bonn.de>
References: <57717533.4010500@uni-bonn.de>
Message-ID: <alpine.LRH.2.20.1606272149280.12644@warden.aitchison.me.uk>

On Mon, 27 Jun 2016, Kai Mühlbauer wrote:

> Hi all,
>
> while trying to build gdal on linux (on CircleCi in a CentOS based docker 
> image using conda/conda-forge) like this:

> /bin/bash -pthread -shared -L/home/sam/miniconda3/envs/_build/lib 
> -Wl,-rpath=/home/sam/miniconda3/envs/_build/lib,--no-as-needed 
> -L/home/sam/miniconda3/envs/_build/lib -L/home/sam/miniconda3/envs/_build/lib 
> -m64 -Wall -Wdeclaration-after-statement -Wextra -Winit-self 
> -Wunused-parameter -Wmissing-prototypes -Wmissing-declarations -Wformat 
> -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow 
> -Werror=vla -Wdeclaration-after-statement -DOGR_ENABLED 
> -I/home/sam/miniconda3/envs/_build/include 
> -I/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/port 
> -I/home/sam/miniconda3/envs/_build/include 
> -I/home/sam/miniconda3/envs/_build/include -I/home/sam/miniconda3/envs/_build 
> -I/home/sam/miniconda3/envs/_build/include 
> -I/home/sam/miniconda3/envs/_build/include -I/home/sam/miniconda3/envs/_build 
> -I/home/sam/miniconda3/envs/_build/include -I/home/sam/miniconda3/envs/_build 
> -I/home/sam/miniconda3/envs/_build/include -DGDAL_COMPILATION 
> build/temp.linux-x86_64-3.4/extensions/gdal_wrap.o -L../../.libs -L../../ 
> -L/home/sam/miniconda3/envs/_build/lib 
> -L/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/lib -lpython3.4m -lgdal -o 
> build/lib.linux-x86_64-3.4/osgeo/_gdal.cpython-34m.so
> /bin/bash: -d: invalid option
> error: command '/bin/bash' failed with exit status 1
> make[2]: *** [build] Error 1
> make[2]: Leaving directory 
> `/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/swig/python'
> make[1]: *** [build] Error 2
> make[1]: Leaving directory 
> `/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/swig'

I'm surprised to see python3.4 on a CentOS system;
I'd be very suprised if it is the default python (as
opposed to an additional python from SCL).
If I'm right, I'd guess python34 needs extra environment variables,
perhaps set with something like "scl python34 ..."

But, I'm not sure how that would make bash fail like that.

From kai.muehlbauer at uni-bonn.de  Mon Jun 27 14:12:45 2016
From: kai.muehlbauer at uni-bonn.de (=?UTF-8?Q?Kai_M=c3=bchlbauer?=)
Date: Mon, 27 Jun 2016 23:12:45 +0200
Subject: [gdal-dev] building gdal with python and libtool
In-Reply-To: <alpine.LRH.2.20.1606272149280.12644@warden.aitchison.me.uk>
References: <57717533.4010500@uni-bonn.de>
 <alpine.LRH.2.20.1606272149280.12644@warden.aitchison.me.uk>
Message-ID: <577196CD.6070206@uni-bonn.de>

Thanks Andrew,

Am 27.06.2016 um 22:54 schrieb Andrew C Aitchison:
 > On Mon, 27 Jun 2016, Kai Mühlbauer wrote:
 >
 >> Hi all,
 >>
 >> while trying to build gdal on linux (on CircleCi in a CentOS based
 >> docker image using conda/conda-forge) like this:
 >
 >> /bin/bash -pthread -shared -L/home/sam/miniconda3/envs/_build/lib
 >> -Wl,-rpath=/home/sam/miniconda3/envs/_build/lib,--no-as-needed
 >> -L/home/sam/miniconda3/envs/_build/lib
 >> -L/home/sam/miniconda3/envs/_build/lib -m64 -Wall
 >> -Wdeclaration-after-statement -Wextra -Winit-self -Wunused-parameter
 >> -Wmissing-prototypes -Wmissing-declarations -Wformat
 >> -Werror=format-security -Wno-format-nonliteral -Wlogical-op -Wshadow
 >> -Werror=vla -Wdeclaration-after-statement -DOGR_ENABLED
 >> -I/home/sam/miniconda3/envs/_build/include
 >> -I/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/port
 >> -I/home/sam/miniconda3/envs/_build/include
 >> -I/home/sam/miniconda3/envs/_build/include
 >> -I/home/sam/miniconda3/envs/_build
 >> -I/home/sam/miniconda3/envs/_build/include
 >> -I/home/sam/miniconda3/envs/_build/include
 >> -I/home/sam/miniconda3/envs/_build
 >> -I/home/sam/miniconda3/envs/_build/include
 >> -I/home/sam/miniconda3/envs/_build
 >> -I/home/sam/miniconda3/envs/_build/include -DGDAL_COMPILATION
 >> build/temp.linux-x86_64-3.4/extensions/gdal_wrap.o -L../../.libs
 >> -L../../ -L/home/sam/miniconda3/envs/_build/lib
 >> -L/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/lib -lpython3.4m
 >> -lgdal -o build/lib.linux-x86_64-3.4/osgeo/_gdal.cpython-34m.so
 >> /bin/bash: -d: invalid option
 >> error: command '/bin/bash' failed with exit status 1
 >> make[2]: *** [build] Error 1
 >> make[2]: Leaving directory
 >> `/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/swig/python'
 >> make[1]: *** [build] Error 2
 >> make[1]: Leaving directory
 >> `/home/sam/miniconda3/conda-bld/work/gdal-2.1.0/swig'
 >
 > I'm surprised to see python3.4 on a CentOS system;
 > I'd be very suprised if it is the default python (as
 > opposed to an additional python from SCL).
 > If I'm right, I'd guess python34 needs extra environment variables,
 > perhaps set with something like "scl python34 ..."

This is done in a conda build environment within a CentOS docker 
container. We build gdal for python 2.7, 3.4 and 3.5, IIRC. The same 
error happens with python 2.7. I can upload the complete build logs for 
all versions, if necessary.

 > But, I'm not sure how that would make bash fail like that.

The error is indicating that bash is failing, but that's a red herring. 
Between "/bin/bash" and "-pthread" the full path/filename of libtool is 
missing. I do not know why it is suddenly missing, but somehow it is. It 
worked all the time until diving into swig/python. To add more 
weirdness, the first two calls of libtool (compiling gdal_wrap.c) are 
working, but the linking command gets wrong (with the above error message).

So any help in sorting this out is appreciated.

Cheers,
Kai


From Julien.Michel at cnes.fr  Tue Jun 28 01:53:58 2016
From: Julien.Michel at cnes.fr (Michel Julien)
Date: Tue, 28 Jun 2016 08:53:58 +0000
Subject: [gdal-dev] Amplitude virtual bands for complex datasets ?
Message-ID: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>

Dear Gdal developers,

I would like to discuss an idea that I think would be of great interest for those using Gdal to access complex dataset, such as SLC SAR products. Usually, when one want to visualize such data, looking at the real or imaginary part of the signal does not make much sense. People will compute amplitude, intensity, or even log-intensity and that is what they will look at (phase is to my best knowledge not very useful for visualization, but has a lot of value for processing).

Computing amplitude and phase from the complex value could be left to the end-user software, but :
- Most software do not provide such features (think of Qgis for instance, or MapServer),
- If overviews are generated from the real/imaginary image values with interpolation (nearest neighbor would be fine), then the generated overviews will be wrong, because you cannot interpolate complex data this way.

I think that Gdal could greatly ease the pain by exposing to the user virtual subdatasets corresponding to the amplitude, phase, intensity and log-intensity, for all complex datasets. In the case of multi-band complex datasets, those virtual subdatasets should also be multi-band, so that polarimetric data could be accessed directly as a multi-band amplitude image for instance.

>From what I know from Gdal capabilities this is not much work. I could try to do it myself, but I would like to get your feedback first (and some hints on where to start would be useful to me).

Regards,

Julien


From even.rouault at spatialys.com  Tue Jun 28 03:39:24 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jun 2016 12:39:24 +0200
Subject: [gdal-dev] Amplitude virtual bands for complex datasets ?
In-Reply-To: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>
References: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>
Message-ID: <201606281239.25031.even.rouault@spatialys.com>

Hi Julien,

> 
> I would like to discuss an idea that I think would be of great interest for
> those using Gdal to access complex dataset, such as SLC SAR products.
> Usually, when one want to visualize such data, looking at the real or
> imaginary part of the signal does not make much sense. People will compute
> amplitude, intensity, or even log-intensity and that is what they will
> look at (phase is to my best knowledge not very useful for visualization,
> but has a lot of value for processing).

Which definition do you give to intensity : amplitude^2 ?

> 
> Computing amplitude and phase from the complex value could be left to the
> end-user software, but : - Most software do not provide such features
> (think of Qgis for instance, or MapServer), - If overviews are generated
> from the real/imaginary image values with interpolation (nearest neighbor
> would be fine), then the generated overviews will be wrong, because you
> cannot interpolate complex data this way.

AFAICS in the code, GDAL currently implements for complex data types : nearest 
neighbour, average on both real and imaginary terms, and AVERAGE_MAGPHASE 
which is average but with renormalization of the amplitude so that the  
AVERAGE_MAGPHASE'ed amplitude is the average of the source amplitudes.

> 
> I think that Gdal could greatly ease the pain by exposing to the user
> virtual subdatasets corresponding to the amplitude, phase, intensity and
> log-intensity, for all complex datasets. In the case of multi-band complex
> datasets, those virtual subdatasets should also be multi-band, so that
> polarimetric data could be accessed directly as a multi-band amplitude
> image for instance.

One of my fear for exposing such computed subdatasets is that there could be a 
confusion between products that are made of "natural" subdatasets (several 
images of different size/resolution in the same container), and those computed 
subdatasets. For example if you use gdal_translate -sds, you probably only 
want "natural" subdatasets to be converted.
Could also get tricky to implement for drivers that can support "natural" 
subdatasets and complex data. Sentinel1 SLC products for example.

In your idea would the generation of those virtual subdatasets would/could be 
done in GDAL core, or should that be enabled per-driver ? Because of the 
example I gave with Sentinel1, I'm not sure a completely generic solution can 
be found. Perhaps something mix with a generic part & per-driver adaptations 
to "merge" natural and derived subdatasets.

Another solution would be to use VRT derived bands (see "Using Derived Bands" 
in http://www.gdal.org/gdal_vrttut.html) and provide a few hard-coded pixel 
functions to compute amplitude, phase, etc...
and have API facilities like
GDALRasterBandH GDALCreateDerivedBand( GDALRasterBandH hSrCband, const char* 
pszPixelFunction [, GDALDataType eTargetDT ?] ) that would create the in-
memory VRT. But I'm aware that doesn't address your idea of using unmodified 
QGIS, MapServer, etc...

> 
> From what I know from Gdal capabilities this is not much work. I could try
> to do it myself, but I would like to get your feedback first (and some
> hints on where to start would be useful to me).

There would be likely changes to do in:
- GDALOpen(), to detect a syntax like 
"DERIVED_SUBDATASET:Amplitude:original_datasetname" and create the appropriate 
dataset. Hum, or perhaps better, instead of hacking GDALOpen(), having a 
driver that would recognize this syntax and instanciate the proper derived 
dataset.
- GDALDataset::GetMetadata( pszDomain ) when pszDomain equals "SUBDATASETS"
-> with the issue I mentionned for drivers that already implement subdatasets 
and will not call the base method.


Hum, or perhaps a better solution would be to have a new metadata domain 
"DERIVED_SUBDATASETS". Would solve the potential confusion between "natural" 
and derived subdatasets, and would probably require little/no changes in 
drivers. Would not confuse gdal_translate -sds. Could be used by mapserver 
unmodified. But would require QGIS querying this new metadata domain.

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From thare at usgs.gov  Tue Jun 28 09:13:35 2016
From: thare at usgs.gov (Hare, Trent)
Date: Tue, 28 Jun 2016 09:13:35 -0700
Subject: [gdal-dev] pyramids on vrt or individual tiffs?
Message-ID: <CAB6t5t_C6yUu6qGJzhruROOPZB2YBZeX8LMr0s2R+a5u0Dp6Gw@mail.gmail.com>

All,
    Quick question. I am building a vrt (gdalbuildvrt) from high-resolution
tiffs which are regionally very discrete (islands). Should I (1) build
pyramids on the vrt which would be very large given the amount of nodata
between the images or (2) build pyramids on the Tiffs. For the second case,
will program like mapserver use the pyramids from the individual Tiffs when
accessing the vrt?

thanks,
Trent
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20160628/b188b03c/attachment.html>

From even.rouault at spatialys.com  Tue Jun 28 09:42:48 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 28 Jun 2016 18:42:48 +0200
Subject: [gdal-dev] pyramids on vrt or individual tiffs?
In-Reply-To: <CAB6t5t_C6yUu6qGJzhruROOPZB2YBZeX8LMr0s2R+a5u0Dp6Gw@mail.gmail.com>
References: <CAB6t5t_C6yUu6qGJzhruROOPZB2YBZeX8LMr0s2R+a5u0Dp6Gw@mail.gmail.com>
Message-ID: <201606281842.48291.even.rouault@spatialys.com>

Hi Trent,

>     Quick question. I am building a vrt (gdalbuildvrt) from high-resolution
> tiffs which are regionally very discrete (islands). Should I (1) build
> pyramids on the vrt which would be very large given the amount of nodata
> between the images or (2) build pyramids on the Tiffs.

> For the second case,
> will program like mapserver use the pyramids from the individual Tiffs when
> accessing the vrt?

Yes (that will be handled transparently by GDAL to be more exact)

(2) will save you a lot of storage space, but if you unzoom a lot, up to the point of
having all individual tiffs in the view extent, they will have to opened all to get the few pixels
needed to make the mosaic, which might be slow if there are many individual tiffs.

A better solution would be a (1'), that will be the GeoTIFF driver improved to be able
to create sparse tiles

Or with some scripting, you could :
- create an empty .vrt.ovr that is a TIFF of VRT_width/2 x VRT_height/2 with -co SPARSE_OK=YES
- gdalwarp each tiff into it with -wo SKIP_NOSOURCE=YES
- repeat for each overview level : .vrt.ovr.ovr for ovr_factor = 4, .vrt.ovr.ovr.ovr for 8, etc...

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From antonio.valentino at tiscali.it  Tue Jun 28 13:50:14 2016
From: antonio.valentino at tiscali.it (Antonio Valentino)
Date: Tue, 28 Jun 2016 22:50:14 +0200
Subject: [gdal-dev] Amplitude virtual bands for complex datasets ?
In-Reply-To: <201606281239.25031.even.rouault@spatialys.com>
References: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>
 <201606281239.25031.even.rouault@spatialys.com>
Message-ID: <5772E306.3090504@tiscali.it>

Hi Even, hi Julien,

Il 28/06/2016 12:39, Even Rouault ha scritto:
> Hi Julien,
> 
>>
>> I would like to discuss an idea that I think would be of great interest for
>> those using Gdal to access complex dataset, such as SLC SAR products.
>> Usually, when one want to visualize such data, looking at the real or
>> imaginary part of the signal does not make much sense. People will compute
>> amplitude, intensity, or even log-intensity and that is what they will
>> look at (phase is to my best knowledge not very useful for visualization,
>> but has a lot of value for processing).
> 
> Which definition do you give to intensity : amplitude^2 ?
> 
>>
>> Computing amplitude and phase from the complex value could be left to the
>> end-user software, but : - Most software do not provide such features
>> (think of Qgis for instance, or MapServer), - If overviews are generated
>> from the real/imaginary image values with interpolation (nearest neighbor
>> would be fine), then the generated overviews will be wrong, because you
>> cannot interpolate complex data this way.
> 
> AFAICS in the code, GDAL currently implements for complex data types : nearest 
> neighbour, average on both real and imaginary terms, and AVERAGE_MAGPHASE 
> which is average but with renormalization of the amplitude so that the  
> AVERAGE_MAGPHASE'ed amplitude is the average of the source amplitudes.
> 
>>
>> I think that Gdal could greatly ease the pain by exposing to the user
>> virtual subdatasets corresponding to the amplitude, phase, intensity and
>> log-intensity, for all complex datasets. In the case of multi-band complex
>> datasets, those virtual subdatasets should also be multi-band, so that
>> polarimetric data could be accessed directly as a multi-band amplitude
>> image for instance.

[CUT]


> Another solution would be to use VRT derived bands (see "Using Derived Bands" 
> in http://www.gdal.org/gdal_vrttut.html) and provide a few hard-coded pixel 
> functions to compute amplitude, phase, etc...
> and have API facilities like
> GDALRasterBandH GDALCreateDerivedBand( GDALRasterBandH hSrCband, const char* 
> pszPixelFunction [, GDALDataType eTargetDT ?] ) that would create the in-
> memory VRT. But I'm aware that doesn't address your idea of using unmodified 
> QGIS, MapServer, etc...
> 

Sometime ago I proposed to include in gdal a small set of pixel
function.  My use case at the time was mainly relater to SAR SLC data
visualization.

There is an open ticket #3367 [1] an also a git repo with pixel
functions implemented as gdal plugin [2]


[1] https://trac.osgeo.org/gdal/ticket/3367
[2] https://github.com/avalentino/gdal-pixfun-plugin

I hope this can help is some way.
It would be very nice to have an improved support for SAR complex data.

>> From what I know from Gdal capabilities this is not much work. I could try
>> to do it myself, but I would like to get your feedback first (and some
>> hints on where to start would be useful to me).
> 
> There would be likely changes to do in:
> - GDALOpen(), to detect a syntax like 
> "DERIVED_SUBDATASET:Amplitude:original_datasetname" and create the appropriate 
> dataset. Hum, or perhaps better, instead of hacking GDALOpen(), having a 
> driver that would recognize this syntax and instanciate the proper derived 
> dataset.
> - GDALDataset::GetMetadata( pszDomain ) when pszDomain equals "SUBDATASETS"
> -> with the issue I mentionned for drivers that already implement subdatasets 
> and will not call the base method.
> 
> 
> Hum, or perhaps a better solution would be to have a new metadata domain 
> "DERIVED_SUBDATASETS". Would solve the potential confusion between "natural" 
> and derived subdatasets, and would probably require little/no changes in 
> drivers. Would not confuse gdal_translate -sds. Could be used by mapserver 
> unmodified. But would require QGIS querying this new metadata domain.
> 
> Even
> 

ciao

-- 
Antonio Valentino

From Julien.Michel at cnes.fr  Wed Jun 29 00:32:26 2016
From: Julien.Michel at cnes.fr (Michel Julien)
Date: Wed, 29 Jun 2016 07:32:26 +0000
Subject: [gdal-dev] Amplitude virtual bands for complex datasets ?
In-Reply-To: <5772E306.3090504@tiscali.it>
References: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>
 <201606281239.25031.even.rouault@spatialys.com> <5772E306.3090504@tiscali.it>
Message-ID: <E0377F749DE181469BADAAA718213DF761F042DE@TW-MBX-P01.cnesnet.ad.cnes.fr>

Hi Even, Hi Antonio,

The VRT with custom PixelFunction was actually the first thing I thought of. However, if I understand well those function need to be registered to gdal before opening the VRT, and this must be done in client code, so it will not allow support in Qgis or MapServer for instance. Of course, if Gdal could ship a set of standard pixel functions, the VRT solution would be a solid first step. Maybe this is simpler than derived datasets ? I still think the latter would be nicer, even if I understand that Gdal must avoid mixing natural and derived subdatatsets.

Thanks a lot for your answers,

Julien



-----Message d'origine-----
De : gdal-dev [mailto:gdal-dev-bounces at lists.osgeo.org] De la part de Antonio Valentino
Envoyé : mardi 28 juin 2016 22:50
À : gdal-dev at lists.osgeo.org
Objet : Re: [gdal-dev] Amplitude virtual bands for complex datasets ?

Hi Even, hi Julien,

Il 28/06/2016 12:39, Even Rouault ha scritto:
> Hi Julien,
> 
>>
>> I would like to discuss an idea that I think would be of great 
>> interest for those using Gdal to access complex dataset, such as SLC SAR products.
>> Usually, when one want to visualize such data, looking at the real or 
>> imaginary part of the signal does not make much sense. People will 
>> compute amplitude, intensity, or even log-intensity and that is what 
>> they will look at (phase is to my best knowledge not very useful for 
>> visualization, but has a lot of value for processing).
> 
> Which definition do you give to intensity : amplitude^2 ?
> 
>>
>> Computing amplitude and phase from the complex value could be left to 
>> the end-user software, but : - Most software do not provide such 
>> features (think of Qgis for instance, or MapServer), - If overviews 
>> are generated from the real/imaginary image values with interpolation 
>> (nearest neighbor would be fine), then the generated overviews will 
>> be wrong, because you cannot interpolate complex data this way.
> 
> AFAICS in the code, GDAL currently implements for complex data types : 
> nearest neighbour, average on both real and imaginary terms, and 
> AVERAGE_MAGPHASE which is average but with renormalization of the 
> amplitude so that the AVERAGE_MAGPHASE'ed amplitude is the average of the source amplitudes.
> 
>>
>> I think that Gdal could greatly ease the pain by exposing to the user 
>> virtual subdatasets corresponding to the amplitude, phase, intensity 
>> and log-intensity, for all complex datasets. In the case of 
>> multi-band complex datasets, those virtual subdatasets should also be 
>> multi-band, so that polarimetric data could be accessed directly as a 
>> multi-band amplitude image for instance.

[CUT]


> Another solution would be to use VRT derived bands (see "Using Derived Bands" 
> in http://www.gdal.org/gdal_vrttut.html) and provide a few hard-coded 
> pixel functions to compute amplitude, phase, etc...
> and have API facilities like
> GDALRasterBandH GDALCreateDerivedBand( GDALRasterBandH hSrCband, const 
> char* pszPixelFunction [, GDALDataType eTargetDT ?] ) that would 
> create the in- memory VRT. But I'm aware that doesn't address your 
> idea of using unmodified QGIS, MapServer, etc...
> 

Sometime ago I proposed to include in gdal a small set of pixel function.  My use case at the time was mainly relater to SAR SLC data visualization.

There is an open ticket #3367 [1] an also a git repo with pixel functions implemented as gdal plugin [2]


[1] https://trac.osgeo.org/gdal/ticket/3367
[2] https://github.com/avalentino/gdal-pixfun-plugin

I hope this can help is some way.
It would be very nice to have an improved support for SAR complex data.

>> From what I know from Gdal capabilities this is not much work. I 
>> could try to do it myself, but I would like to get your feedback 
>> first (and some hints on where to start would be useful to me).
> 
> There would be likely changes to do in:
> - GDALOpen(), to detect a syntax like 
> "DERIVED_SUBDATASET:Amplitude:original_datasetname" and create the 
> appropriate dataset. Hum, or perhaps better, instead of hacking 
> GDALOpen(), having a driver that would recognize this syntax and 
> instanciate the proper derived dataset.
> - GDALDataset::GetMetadata( pszDomain ) when pszDomain equals "SUBDATASETS"
> -> with the issue I mentionned for drivers that already implement 
> -> subdatasets
> and will not call the base method.
> 
> 
> Hum, or perhaps a better solution would be to have a new metadata 
> domain "DERIVED_SUBDATASETS". Would solve the potential confusion between "natural"
> and derived subdatasets, and would probably require little/no changes 
> in drivers. Would not confuse gdal_translate -sds. Could be used by 
> mapserver unmodified. But would require QGIS querying this new metadata domain.
> 
> Even
> 

ciao

--
Antonio Valentino
_______________________________________________
gdal-dev mailing list
gdal-dev at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/gdal-dev

From ocirne94 at gmail.com  Wed Jun 29 15:08:49 2016
From: ocirne94 at gmail.com (Enrico Mattea)
Date: Thu, 30 Jun 2016 00:08:49 +0200
Subject: [gdal-dev] Pansharpening produces grayscale image?
Message-ID: <577446F1.9060905@gmail.com>

Hello all,
I'm trying to perform pansharpening of Landsat 8 images using the 
gdal_pansharpen.py script from 
https://svn.osgeo.org/gdal/trunk/gdal/swig/python/scripts/gdal_pansharpen.py, 
with mixed luck.

The command
gdal_pansharpen.py 8.tif 4.tif 3.tif 2.tif ps.tif,
where the tifs are the 16-bits original landsat bands, runs with no 
errors but the resulting image is - according to both imagemagick and 
the gimp - a 16-bits *grayscale* image instead of the expected 16-bits 
rgb image.

The tile I'm specifically working on is LC81950282016101LGN00.

What am I missing here?
Thank you very much,
Enrico

From ocirne94 at gmail.com  Wed Jun 29 15:09:04 2016
From: ocirne94 at gmail.com (Enrico Mattea)
Date: Thu, 30 Jun 2016 00:09:04 +0200
Subject: [gdal-dev] Pansharpening produces grayscale image?
Message-ID: <57744700.8070707@gmail.com>

Hello all,
I'm trying to perform pansharpening of Landsat 8 images using the 
gdal_pansharpen.py script from 
https://svn.osgeo.org/gdal/trunk/gdal/swig/python/scripts/gdal_pansharpen.py, 
with mixed luck.

The command
gdal_pansharpen.py 8.tif 4.tif 3.tif 2.tif ps.tif,
where the tifs are the 16-bits original landsat bands, runs with no 
errors but the resulting image is - according to both imagemagick and 
the gimp - a 16-bits *grayscale* image instead of the expected 16-bits 
rgb image.

The tile I'm specifically working on is LC81950282016101LGN00, on ubuntu 
16.04.

What am I missing here?
Thank you very much,
Enrico

From even.rouault at spatialys.com  Wed Jun 29 15:15:18 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jun 2016 00:15:18 +0200
Subject: [gdal-dev] Pansharpening produces grayscale image?
In-Reply-To: <57744700.8070707@gmail.com>
References: <57744700.8070707@gmail.com>
Message-ID: <201606300015.18870.even.rouault@spatialys.com>

Le jeudi 30 juin 2016 00:09:04, Enrico Mattea a écrit :
> Hello all,
> I'm trying to perform pansharpening of Landsat 8 images using the
> gdal_pansharpen.py script from
> https://svn.osgeo.org/gdal/trunk/gdal/swig/python/scripts/gdal_pansharpen.p
> y, with mixed luck.
> 
> The command
> gdal_pansharpen.py 8.tif 4.tif 3.tif 2.tif ps.tif,
> where the tifs are the 16-bits original landsat bands, runs with no
> errors but the resulting image is - according to both imagemagick and
> the gimp - a 16-bits *grayscale* image instead of the expected 16-bits
> rgb image.

Enrico,

Add -co PHOTOMETRIC=RGB

Even

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From kassies at gmail.com  Thu Jun 30 00:15:33 2016
From: kassies at gmail.com (Rutger)
Date: Thu, 30 Jun 2016 00:15:33 -0700 (PDT)
Subject: [gdal-dev] Pansharpening produces grayscale image?
In-Reply-To: <201606300015.18870.even.rouault@spatialys.com>
References: <57744700.8070707@gmail.com>
 <201606300015.18870.even.rouault@spatialys.com>
Message-ID: <1467270933347-5274102.post@n6.nabble.com>

Does GDAL account for the alignment of the Landsat 8 bands? The center of a
low-res pixel has the same location as the center of a pan-pixel (and thus
other pan-pixels have their center over four corners of low-res pixels.) 

Or is this a pre-processing step the user has to do? You could for example
upsample the pan-band to 7.5m and then average again while changing the
extent. 

Regards,
Rutger



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Pansharpening-produces-grayscale-image-tp5274075p5274102.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From even.rouault at spatialys.com  Thu Jun 30 00:45:49 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 30 Jun 2016 09:45:49 +0200
Subject: [gdal-dev] Pansharpening produces grayscale image?
In-Reply-To: <1467270933347-5274102.post@n6.nabble.com>
References: <57744700.8070707@gmail.com>
 <201606300015.18870.even.rouault@spatialys.com>
 <1467270933347-5274102.post@n6.nabble.com>
Message-ID: <201606300945.49138.even.rouault@spatialys.com>

Le jeudi 30 juin 2016 09:15:33, Rutger a écrit :
> Does GDAL account for the alignment of the Landsat 8 bands? The center of a
> low-res pixel has the same location as the center of a pan-pixel (and thus
> other pan-pixels have their center over four corners of low-res pixels.)
> 
> Or is this a pre-processing step the user has to do? You could for example
> upsample the pan-band to 7.5m and then average again while changing the
> extent.

Rutger,

The behaviour of the pansharpening processing is described at :
http://www.gdal.org/gdal_vrttut.html#gdal_vrttut_pansharpen

To answer more precisely your question, this depends if the bands come with 
georegistration. If so, then the pansharpening should do the right thing. 
Otherwise you'll have to attach to them prior to pansharpening, for example 
with gdal_translate -a_ullr (-of VRT). You can use pixel units if needed to 
just describe the shift. Do not forget that GDAL convention for registration 
is the coordinates of the corner of pixels .

Even

> 
> Regards,
> Rutger
> 
> 
> 
> --
> View this message in context:
> http://osgeo-org.1560.x6.nabble.com/gdal-dev-Pansharpening-produces-graysc
> ale-image-tp5274075p5274102.html Sent from the GDAL - Dev mailing list
> archive at Nabble.com.
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From gis.gn at libero.it  Thu Jun 30 06:25:49 2016
From: gis.gn at libero.it (Gabriele N.)
Date: Thu, 30 Jun 2016 06:25:49 -0700 (PDT)
Subject: [gdal-dev] gdal_calc.py IF ELSE Condition
Message-ID: <1467293149111-5274166.post@n6.nabble.com>

Hi all,

my goal is to apply the following condition:

if map A > 0 then MAP C = arctan((A/B)+180  ELSE MAP C = 90-arctan(A/B)

I tried in several ways, including this:

gdal_calc.py -A u-wind$DATE.tif -B  v-wind$DATE.tif
--outfile=dir_wind_$DATE.tif --calc="arctan(A/B)+180*(A>0)
w_dir=90-arctan(A/B))" 

but I can not fix it

Thanks for help



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-calc-py-IF-ELSE-Condition-tp5274166.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From afalciano at yahoo.it  Thu Jun 30 06:50:16 2016
From: afalciano at yahoo.it (Antonio Falciano)
Date: Thu, 30 Jun 2016 15:50:16 +0200
Subject: [gdal-dev] gdal_calc.py IF ELSE Condition
In-Reply-To: <1467293149111-5274166.post@n6.nabble.com>
References: <1467293149111-5274166.post@n6.nabble.com>
Message-ID: <717302eb-af8f-a49f-da32-e869ddf92d4a@yahoo.it>

Il 30/06/2016 15:25, Gabriele N. ha scritto:
> Hi all,
>
> my goal is to apply the following condition:
>
> if map A > 0 then MAP C = arctan((A/B)+180  ELSE MAP C = 90-arctan(A/B)
>
> I tried in several ways, including this:
>
> gdal_calc.py -A u-wind$DATE.tif -B  v-wind$DATE.tif
> --outfile=dir_wind_$DATE.tif --calc="arctan(A/B)+180*(A>0)
> w_dir=90-arctan(A/B))"

Ciao Gabriele,
try with (not tested):

--calc="arctan(A/B)*180/3.141592+180*(A>0)+(3.141592-arctan(A/B))*(A<=0)"

where arctan could be atan or something similar.

Antonio

-- 
Antonio Falciano
http://www.linkedin.com/in/antoniofalciano

From gis.gn at libero.it  Thu Jun 30 06:47:16 2016
From: gis.gn at libero.it (Gabriele N.)
Date: Thu, 30 Jun 2016 06:47:16 -0700 (PDT)
Subject: [gdal-dev] gdal_calc.py IF ELSE Condition
In-Reply-To: <717302eb-af8f-a49f-da32-e869ddf92d4a@yahoo.it>
References: <1467293149111-5274166.post@n6.nabble.com>
 <717302eb-af8f-a49f-da32-e869ddf92d4a@yahoo.it>
Message-ID: <1467294436556-5274178.post@n6.nabble.com>

Ciao Antonio.

@arctan I think is ok.
It works but there are many negative values...I must investigate :)

Meanwhile .... thanks 

Gabrlele



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-calc-py-IF-ELSE-Condition-tp5274166p5274178.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From philippe.ghesquiere at airbus.com  Thu Jun 30 08:16:27 2016
From: philippe.ghesquiere at airbus.com (Bugbuster)
Date: Thu, 30 Jun 2016 08:16:27 -0700 (PDT)
Subject: [gdal-dev] Amplitude virtual bands for complex datasets ?
In-Reply-To: <5772E306.3090504@tiscali.it>
References: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>
 <201606281239.25031.even.rouault@spatialys.com> <5772E306.3090504@tiscali.it>
Message-ID: <1467299787210-5274192.post@n6.nabble.com>

Dear Antonio, dear Even

I have used the PIXFUN plugin a while ago under Linux, and as far as I
remember, it *worked pretty well*  .
I have downloaded the last version a few days ago because I need to run some
tests under *Windows*. I had to add the export instruction for the DLL
compilation (CPL_DLL macro defined in gdal_port.h). The plugin compiles
correctly, it is registered at startup.
However, it seems not to work correctly. I tested the real(), imag() and
mod() functions. Each time, the number of source rasters (/nSources/) is
zero (I added a few log to find this out)
Do you have any idea what could cause this weird behavior ?

Thanks
Philippe



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Amplitude-virtual-bands-for-complex-datasets-tp5273713p5274192.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

From afalciano at yahoo.it  Thu Jun 30 10:33:00 2016
From: afalciano at yahoo.it (Antonio Falciano)
Date: Thu, 30 Jun 2016 19:33:00 +0200
Subject: [gdal-dev] gdal_calc.py IF ELSE Condition
In-Reply-To: <1467294436556-5274178.post@n6.nabble.com>
References: <1467293149111-5274166.post@n6.nabble.com>
 <717302eb-af8f-a49f-da32-e869ddf92d4a@yahoo.it>
 <1467294436556-5274178.post@n6.nabble.com>
Message-ID: <bd6aafaa-3f37-5a61-f675-39af7a0b7bb8@yahoo.it>

Il 30/06/2016 15:47, Gabriele N. ha scritto:
> Ciao Antonio.
>
> @arctan I think is ok.
> It works but there are many negative values...I must investigate :)
>
> Meanwhile .... thanks

Gabriele,
the previous expression has some errors yet: two parenthesis and a
conversion are missing. This should be the right one:

--calc="(degrees(arctan(A/B))+180)*(A>0)+(90-degrees(arctan(A/B)))*(A<=0)"

where the numpy "degrees" function is used to convert from radians to
degrees more elegantly than before. Tested on GDAL 2.1.0.

ciao
Antonio

-- 
Antonio Falciano
http://www.linkedin.com/in/antoniofalciano

From antonio.valentino at tiscali.it  Thu Jun 30 10:34:52 2016
From: antonio.valentino at tiscali.it (Antonio Valentino)
Date: Thu, 30 Jun 2016 19:34:52 +0200
Subject: [gdal-dev] Amplitude virtual bands for complex datasets ?
In-Reply-To: <1467299787210-5274192.post@n6.nabble.com>
References: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>
 <201606281239.25031.even.rouault@spatialys.com> <5772E306.3090504@tiscali.it>
 <1467299787210-5274192.post@n6.nabble.com>
Message-ID: <5775583C.7090802@tiscali.it>

Hi Bugbuster,

Il 30/06/2016 17:16, Bugbuster ha scritto:
> Dear Antonio, dear Even
> 
> I have used the PIXFUN plugin a while ago under Linux, and as far as I
> remember, it *worked pretty well*  .
> I have downloaded the last version a few days ago because I need to run some
> tests under *Windows*. I had to add the export instruction for the DLL
> compilation (CPL_DLL macro defined in gdal_port.h). The plugin compiles
> correctly, it is registered at startup.
> However, it seems not to work correctly. I tested the real(), imag() and
> mod() functions. Each time, the number of source rasters (/nSources/) is
> zero (I added a few log to find this out)
> Do you have any idea what could cause this weird behavior ?

the package on githib also contains a test suite
Can you please add a test that triggers the issue on windows?
I will try to look into it.

Also the patch with the CPL_DLL would be appreciated


cheers

-- 
Antonio Valentino

From philippe.ghesquiere at airbus.com  Thu Jun 30 23:52:10 2016
From: philippe.ghesquiere at airbus.com (Bugbuster)
Date: Thu, 30 Jun 2016 23:52:10 -0700 (PDT)
Subject: [gdal-dev] Amplitude virtual bands for complex datasets ?
In-Reply-To: <5775583C.7090802@tiscali.it>
References: <E0377F749DE181469BADAAA718213DF761F03F27@TW-MBX-P01.cnesnet.ad.cnes.fr>
 <201606281239.25031.even.rouault@spatialys.com> <5772E306.3090504@tiscali.it>
 <1467299787210-5274192.post@n6.nabble.com> <5775583C.7090802@tiscali.it>
Message-ID: <1467355930076-5274296.post@n6.nabble.com>

Hi Antonio,

I did try the test suite you provided. I tried to convert all VRT images to
GTiff with the simple command :


None of them gave any results.
In each function, I added a debug message when testing the number of source
rasters :

I always get :


If you have any ideas, I would be very grateful to you :-)
Thanks
Philippe



--
View this message in context: http://osgeo-org.1560.x6.nabble.com/gdal-dev-Amplitude-virtual-bands-for-complex-datasets-tp5273713p5274296.html
Sent from the GDAL - Dev mailing list archive at Nabble.com.

