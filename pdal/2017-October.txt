From falcone.giuseppe at gmail.com  Mon Oct  2 03:50:59 2017
From: falcone.giuseppe at gmail.com (Giuseppe Falcone)
Date: Mon, 2 Oct 2017 12:50:59 +0200
Subject: [pdal] filtering pipeline result
Message-ID: <CAG04Ot8Nx5uYKqkY4sdVtN_J1A8itfqGj96tpb58cf8VDCDTrw@mail.gmail.com>

Hi to all,

I have a pipe that elaborate a las file. on the pipe.arrays[0] command I
have, as result, a ndarray.
I want to split this array in twa subarray: the first with element that
have ReturnNumber dimension = 1 and the second with all others elements.

There is an efficient way to do this?
Thanks.

Giuseppe
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171002/db903f70/attachment.html>

From andrew.bell.ia at gmail.com  Mon Oct  2 05:48:00 2017
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 2 Oct 2017 08:48:00 -0400
Subject: [pdal] filtering pipeline result
In-Reply-To: <CAG04Ot8Nx5uYKqkY4sdVtN_J1A8itfqGj96tpb58cf8VDCDTrw@mail.gmail.com>
References: <CAG04Ot8Nx5uYKqkY4sdVtN_J1A8itfqGj96tpb58cf8VDCDTrw@mail.gmail.com>
Message-ID: <CACJ51z3zU+K2D5NdbSw=+_dvOdNZb_v64VTdW=UiZ4W0uVVnvA@mail.gmail.com>

This is a python question unless you're trying to add a new dimension to
the PDAL pipeline for processing later.  If this is the case, here's an
example from the tests that adds an AddedIntensity and AddedPointSourceId
dimension.

import numpy
def myfunc(ins,outs):
    outs['AddedIntensity'] = np.zeros(ins['X'].size, dtype=numpy.double)
    outs['AddedPointSourceId'] = np.zeros(ins['X'].size, dtype=numpy.double)
    return True


On Mon, Oct 2, 2017 at 6:50 AM, Giuseppe Falcone <falcone.giuseppe at gmail.com
> wrote:

> Hi to all,
>
> I have a pipe that elaborate a las file. on the pipe.arrays[0] command I
> have, as result, a ndarray.
> I want to split this array in twa subarray: the first with element that
> have ReturnNumber dimension = 1 and the second with all others elements.
>
> There is an efficient way to do this?
> Thanks.
>
> Giuseppe
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171002/a0bd54f5/attachment.html>

From howard at hobu.co  Mon Oct  2 06:52:02 2017
From: howard at hobu.co (Howard Butler)
Date: Mon, 2 Oct 2017 08:52:02 -0500
Subject: [pdal] filtering pipeline result
In-Reply-To: <CAG04Ot8Nx5uYKqkY4sdVtN_J1A8itfqGj96tpb58cf8VDCDTrw@mail.gmail.com>
References: <CAG04Ot8Nx5uYKqkY4sdVtN_J1A8itfqGj96tpb58cf8VDCDTrw@mail.gmail.com>
Message-ID: <43DFC489-CA1A-4AAB-A06C-21E31E1BE1E0@hobu.co>


> On Oct 2, 2017, at 5:50 AM, Giuseppe Falcone <falcone.giuseppe at gmail.com> wrote:
> 
> Hi to all,
> 
> I have a pipe that elaborate a las file. on the pipe.arrays[0] command I have, as result, a ndarray.
> I want to split this array in twa subarray: the first with element that have ReturnNumber dimension = 1 and the second with all others elements.
> 
> There is an efficient way to do this?

numpy.where is probably the cleanest way to do this purely in python https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.where.html <https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.where.html>

> return_nos = pipe.arrays[0]['ReturnNumber']
> firsts = np.where(return_nos < 2)

Another way would be to write a pipeline with two readers.las, two filters.range, and a filters.merge. Both readers.las would read the same file, and each filters.range would define the range [1] of ReturnNumber you wanted in each set. Then you would use a filters.merge to bring them back together into two separate arrays. This approach is less than ideal due to the fact that you end up reading the same file twice.

Howard

[1] https://www.pdal.io/stages/filters.range.html#ranges <https://www.pdal.io/stages/filters.range.html#ranges>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171002/cbdf92fa/attachment.html>

From falcone.giuseppe at gmail.com  Mon Oct  2 07:00:41 2017
From: falcone.giuseppe at gmail.com (Giuseppe Falcone)
Date: Mon, 2 Oct 2017 16:00:41 +0200
Subject: [pdal] filtering pipeline result
In-Reply-To: <43DFC489-CA1A-4AAB-A06C-21E31E1BE1E0@hobu.co>
References: <CAG04Ot8Nx5uYKqkY4sdVtN_J1A8itfqGj96tpb58cf8VDCDTrw@mail.gmail.com>
 <43DFC489-CA1A-4AAB-A06C-21E31E1BE1E0@hobu.co>
Message-ID: <CAG04Ot8rLr3vmn8BcDnS-CVqNFRF8TOXChUvc3PXeOfb=Dhm+A@mail.gmail.com>

Thanks for the response, but maybe I didn't explain well what I want.

The pipeline result is like this:

[( 626708.60087012,  4481781.14910498,  7.478, 0, 2, 2, 1, 0, 4, -11., 0,
0,  0.,  7.478),( 626708.34087012,  4481780.92910498,  5.418, 0, 1, 3, 1,
0, 4, -11., 0, 0,  0.,  5.418),....]

the name of dimensions are:
 (u'X', u'Y', u'Z', u'Intensity', u'ReturnNumber', u'NumberOfReturns',
u'ScanDirectionFlag', u'EdgeOfFlightLine', u'Classification',
u'ScanAngleRank', u'UserData', u'PointSourceId', u'GpsTime',
u'HeightAboveGround')

I want to split this array in two subarray: the first with element that
have ReturnNumber (fifth value) dimension = 1 and the second with all
others elements.

So, I have:

1st  subarray -> [( 626708.60087012,  4481781.14910498,  7.478, 0, 2, 2, 1,
0, 4, -11., 0, 0,  0.,  7.478), ....]
2nd subarray -> [( 626708.34087012,  4481780.92910498,  5.418, 0, 1, 3, 1,
0, 4, -11., 0, 0,  0.,  5.418), ....]

Thanks

Giuseppe

2017-10-02 15:52 GMT+02:00 Howard Butler <howard at hobu.co>:

>
> On Oct 2, 2017, at 5:50 AM, Giuseppe Falcone <falcone.giuseppe at gmail.com>
> wrote:
>
> Hi to all,
>
> I have a pipe that elaborate a las file. on the pipe.arrays[0] command I
> have, as result, a ndarray.
> I want to split this array in twa subarray: the first with element that
> have ReturnNumber dimension = 1 and the second with all others elements.
>
> There is an efficient way to do this?
>
>
> numpy.where is probably the cleanest way to do this purely in python
> https://docs.scipy.org/doc/numpy-1.13.0/reference/
> generated/numpy.where.html
>
> return_nos = pipe.arrays[0]['ReturnNumber']
> firsts = np.where(return_nos < 2)
>
>
> Another way would be to write a pipeline with two readers.las, two
> filters.range, and a filters.merge. Both readers.las would read the same
> file, and each filters.range would define the range [1] of ReturnNumber you
> wanted in each set. Then you would use a filters.merge to bring them back
> together into two separate arrays. This approach is less than ideal due to
> the fact that you end up reading the same file twice.
>
> Howard
>
> [1] https://www.pdal.io/stages/filters.range.html#ranges
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171002/c8d8df2a/attachment.html>

From brad.chambers at gmail.com  Mon Oct  2 07:36:11 2017
From: brad.chambers at gmail.com (Bradley Chambers)
Date: Mon, 02 Oct 2017 14:36:11 +0000
Subject: [pdal] filtering pipeline result
In-Reply-To: <CAG04Ot8rLr3vmn8BcDnS-CVqNFRF8TOXChUvc3PXeOfb=Dhm+A@mail.gmail.com>
References: <CAG04Ot8Nx5uYKqkY4sdVtN_J1A8itfqGj96tpb58cf8VDCDTrw@mail.gmail.com>
 <43DFC489-CA1A-4AAB-A06C-21E31E1BE1E0@hobu.co>
 <CAG04Ot8rLr3vmn8BcDnS-CVqNFRF8TOXChUvc3PXeOfb=Dhm+A@mail.gmail.com>
Message-ID: <CAJyqqPw78jNFc-PX3V1BD0qSn88TsL9ftmN8rzcwvwrcYTj7uQ@mail.gmail.com>

Giuseppe,

I've been playing around with some ways you could do this in the PDAL
pipeline. It seems we've got lots of things that would be very close, but
not exactly what you'd want. Still looking though.

Pandas and numpy will both do what you want though, with just a slightly
different syntax.

import numpy as np
data = p.arrays[0]
firsts = data[np.where(data['ReturnNumber']==1)]
others = data[np.where(data['ReturnNumber']!=1)]

import pandas as pd
data = p.arrays[0]
df = pd.DataFrame(data)
firsts = df[df['ReturnNumber']==1]
others = df[df['ReturnNumber']!=1]

Do either of these produce the results you are expecting? If so, do you
really need to do it in PDAL, or is the Python-based solution sufficient?

Brad

On Mon, Oct 2, 2017 at 10:00 AM Giuseppe Falcone <falcone.giuseppe at gmail.com>
wrote:

> Thanks for the response, but maybe I didn't explain well what I want.
>
> The pipeline result is like this:
>
> [( 626708.60087012,  4481781.14910498,  7.478, 0, 2, 2, 1, 0, 4, -11., 0,
> 0,  0.,  7.478),( 626708.34087012,  4481780.92910498,  5.418, 0, 1, 3, 1,
> 0, 4, -11., 0, 0,  0.,  5.418),....]
>
> the name of dimensions are:
>  (u'X', u'Y', u'Z', u'Intensity', u'ReturnNumber', u'NumberOfReturns',
> u'ScanDirectionFlag', u'EdgeOfFlightLine', u'Classification',
> u'ScanAngleRank', u'UserData', u'PointSourceId', u'GpsTime',
> u'HeightAboveGround')
>
> I want to split this array in two subarray: the first with element that
> have ReturnNumber (fifth value) dimension = 1 and the second with all
> others elements.
>
> So, I have:
>
> 1st  subarray -> [( 626708.60087012,  4481781.14910498,  7.478, 0, 2, 2,
> 1, 0, 4, -11., 0, 0,  0.,  7.478), ....]
> 2nd subarray -> [( 626708.34087012,  4481780.92910498,  5.418, 0, 1, 3, 1,
> 0, 4, -11., 0, 0,  0.,  5.418), ....]
>
> Thanks
>
> Giuseppe
>
> 2017-10-02 15:52 GMT+02:00 Howard Butler <howard at hobu.co>:
>
>>
>> On Oct 2, 2017, at 5:50 AM, Giuseppe Falcone <falcone.giuseppe at gmail.com>
>> wrote:
>>
>> Hi to all,
>>
>> I have a pipe that elaborate a las file. on the pipe.arrays[0] command I
>> have, as result, a ndarray.
>> I want to split this array in twa subarray: the first with element that
>> have ReturnNumber dimension = 1 and the second with all others elements.
>>
>> There is an efficient way to do this?
>>
>>
>> numpy.where is probably the cleanest way to do this purely in python
>> https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.where.html
>>
>> return_nos = pipe.arrays[0]['ReturnNumber']
>> firsts = np.where(return_nos < 2)
>>
>>
>> Another way would be to write a pipeline with two readers.las, two
>> filters.range, and a filters.merge. Both readers.las would read the same
>> file, and each filters.range would define the range [1] of ReturnNumber you
>> wanted in each set. Then you would use a filters.merge to bring them back
>> together into two separate arrays. This approach is less than ideal due to
>> the fact that you end up reading the same file twice.
>>
>> Howard
>>
>> [1] https://www.pdal.io/stages/filters.range.html#ranges
>>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171002/6459879d/attachment-0001.html>

From falcone.giuseppe at gmail.com  Tue Oct  3 06:38:41 2017
From: falcone.giuseppe at gmail.com (Giuseppe Falcone)
Date: Tue, 3 Oct 2017 15:38:41 +0200
Subject: [pdal] pdal pipeline error
Message-ID: <CAG04Ot9tNb9O82a1Jk1PkqGtV3ryVtJEpgiLC8JA3Bd+XmoGaA@mail.gmail.com>

Hi to all,

I have a problem with a simple pdal pipeline.
I have to filter point from las file that are into a 13m radius buffer from
given point.

json = u'''{  "pipeline":[    "data.las",

    {
      "distance": 13,
      "type": "filters.crop",
      "point": "POINT(626715,4481770,155)"
    }}''


p = pdal.Pipeline(json)p.validate() p.loglevel = 4count =
p.execute()data = p.arrays[0]


data is an array of 5321 element.


If I elaborate data with arcmap (view las data a clip with circle),

I have 6203 element into point buffer.

I rewrite same code with R and I have also 6203 element as intersection result.


Where is the error with pdal pipeline?

I have compiled pdal 1.5.0 with pcl 1.8.1 on ubuntu 16.04 LTS and
using it with python 2.7.12


Thanks.


Giuseppe
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171003/66a9a2ff/attachment.html>

From howard at hobu.co  Tue Oct  3 06:40:58 2017
From: howard at hobu.co (Howard Butler)
Date: Tue, 3 Oct 2017 08:40:58 -0500
Subject: [pdal] pdal pipeline error
In-Reply-To: <CAG04Ot9tNb9O82a1Jk1PkqGtV3ryVtJEpgiLC8JA3Bd+XmoGaA@mail.gmail.com>
References: <CAG04Ot9tNb9O82a1Jk1PkqGtV3ryVtJEpgiLC8JA3Bd+XmoGaA@mail.gmail.com>
Message-ID: <21DC04AD-B892-46D3-ADD2-3E863AD53D1D@hobu.co>

Can you post example data? Presumably there is an issue with how the buffer is generated from the point.

Howard

> On Oct 3, 2017, at 8:38 AM, Giuseppe Falcone <falcone.giuseppe at gmail.com> wrote:
> 
> Hi to all,
> 
> I have a problem with a simple pdal pipeline.
> I have to filter point from las file that are into a 13m radius buffer from given point.
> 
> json = u'''
> {
>   "pipeline":[
>     "data.las",
>     {
>       "distance": 13,
>       "type": "filters.crop",
>       "point": "POINT(626715,4481770,155)"
>     }
> }''
> 
> p = pdal.Pipeline(json)
> p.validate() 
> p.loglevel = 4
> count = p.execute()
> data = p.arrays[0]
> 
> data is an array of 5321 element.
> 
> If I elaborate data with arcmap (view las data a clip with circle),
> I have 6203 element into point buffer.
> I rewrite same code with R and I have also 6203 element as intersection result.
> 
> Where is the error with pdal pipeline?
> I have compiled pdal 1.5.0 with pcl 1.8.1 on ubuntu 16.04 LTS and using it with python 2.7.12
> 
> Thanks.
> 
> Giuseppe
> 
> 
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171003/2fc24b52/attachment.html>

From howard at hobu.co  Tue Oct  3 07:21:36 2017
From: howard at hobu.co (Howard Butler)
Date: Tue, 3 Oct 2017 09:21:36 -0500
Subject: [pdal] pdal pipeline error
In-Reply-To: <21DC04AD-B892-46D3-ADD2-3E863AD53D1D@hobu.co>
References: <CAG04Ot9tNb9O82a1Jk1PkqGtV3ryVtJEpgiLC8JA3Bd+XmoGaA@mail.gmail.com>
 <21DC04AD-B892-46D3-ADD2-3E863AD53D1D@hobu.co>
Message-ID: <5665FF9F-B2D2-4733-BADE-79053984F188@hobu.co>

Thanks for the data.

PDAL filters.crop doesn't first buffer the point and then do point in polygon on that buffered polygon. It instead computes the circular (2d) or spherical (3d) distance. See https://github.com/PDAL/PDAL/blob/master/filters/CropFilter.cpp#L255 <https://github.com/PDAL/PDAL/blob/master/filters/CropFilter.cpp#L255> for more information on what's done. 

If you want to use a buffer, you'll need to pass one explicitly. 

Presumably, this is the reason for the discrepancy. I will update our docs to be more explicit about this behavior.

Howard


> On Oct 3, 2017, at 8:40 AM, Howard Butler <howard at hobu.co> wrote:
> 
> Can you post example data? Presumably there is an issue with how the buffer is generated from the point.
> 
> Howard
> 
>> On Oct 3, 2017, at 8:38 AM, Giuseppe Falcone <falcone.giuseppe at gmail.com <mailto:falcone.giuseppe at gmail.com>> wrote:
>> 
>> Hi to all,
>> 
>> I have a problem with a simple pdal pipeline.
>> I have to filter point from las file that are into a 13m radius buffer from given point.
>> 
>> json = u'''
>> {
>>   "pipeline":[
>>     "data.las",
>>     {
>>       "distance": 13,
>>       "type": "filters.crop",
>>       "point": "POINT(626715,4481770,155)"
>>     }
>> }''
>> 
>> p = pdal.Pipeline(json)
>> p.validate() 
>> p.loglevel = 4
>> count = p.execute()
>> data = p.arrays[0]
>> 
>> data is an array of 5321 element.
>> 
>> If I elaborate data with arcmap (view las data a clip with circle),
>> I have 6203 element into point buffer.
>> I rewrite same code with R and I have also 6203 element as intersection result.
>> 
>> Where is the error with pdal pipeline?
>> I have compiled pdal 1.5.0 with pcl 1.8.1 on ubuntu 16.04 LTS and using it with python 2.7.12
>> 
>> Thanks.
>> 
>> Giuseppe
>> 
>> 
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org <mailto:pdal at lists.osgeo.org>
>> https://lists.osgeo.org/mailman/listinfo/pdal
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171003/413a77cf/attachment-0001.html>

From anfla at sdfe.dk  Wed Oct  4 03:54:56 2017
From: anfla at sdfe.dk (Andrew Flatman)
Date: Wed, 4 Oct 2017 10:54:56 +0000
Subject: [pdal] assign a constant class to las imported fra tiff
Message-ID: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>

Hi,
I am reading a DEM from a tiff file and writing it as las. My problem is that I cannot set the class. I have tried adding the dimension Classification in the filter.ferry part:

    {
        "type": "filters.ferry",
        "dimensions": "band-1=Z, 2=Classification"
    },
Which gives the error: PDAL: filters.ferry: Can't ferry dimension '2'. Dimension doesn't exist.

I have tried this: "dimensions": "band-1=Z, Classification[:]=2"

Which gives the error: PDAL: filters.ferry: Can't ferry dimension 'Classification[:]'. Dimension doesn't exist.


I have also tried assigning the classification using the filter.assign:
    {
          "type":"filters.assign",
          "assignment" : "Classification[:]=2"
    },

Which gives the error:  PDAL: filters.assign: Invalid dimension name in 'values' option: 'Classification'.


Any Ideas as to how I can set all the values to specific class?

Thanks,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/52706f8c/attachment.html>

From andrew.bell.ia at gmail.com  Wed Oct  4 04:21:12 2017
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 4 Oct 2017 07:21:12 -0400
Subject: [pdal] assign a constant class to las imported fra tiff
In-Reply-To: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
References: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
Message-ID: <CACJ51z3dT0-kG41UcUNKeki739S-4F+CBf=pk2c2y9sZr2_85A@mail.gmail.com>

On Wed, Oct 4, 2017 at 6:54 AM, Andrew Flatman <anfla at sdfe.dk> wrote:

> Hi,
>
> I am reading a DEM from a tiff file and writing it as las. My problem is
> that I cannot set the class. I have tried adding the dimension
> Classification in the filter.ferry part:
>
>
>
>     {
>
>         "type": "filters.ferry",
>
>         "dimensions": "band-1=Z, 2=Classification"
>
>     },
>
> Which gives the error: PDAL: filters.ferry: Can't ferry dimension '2'.
> Dimension doesn't exist.
>

The bands are named "band-1", "band-2", "band-3" and so on.
 "band-2=Classification" should get you what you want. The assignment below
should then work.

 I have also tried assigning the classification using the filter.assign:
>
>     {
>
>           "type":"filters.assign",
>
>           "assignment" : "Classification[:]=2"
>
>     },
>

>
> Which gives the error:  PDAL: filters.assign: Invalid dimension name in
> 'values' option: 'Classification'.
>

You can't assign to a dimension that doesn't exist.
-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/c62fcf77/attachment.html>

From kreve at sdfe.dk  Wed Oct  4 04:20:12 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 4 Oct 2017 11:20:12 +0000
Subject: [pdal] assign a constant class to las imported fra tiff
In-Reply-To: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
References: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAEA7A158@S000014.PROD.SITAD.DK>

Hi Andrew,

Try this:

{
    "pipeline":[
        {
            "type": "readers.gdal",
            "filename":"in.tif"
        },
        {
            "type": "filters.ferry",
            "dimensions": "band-1=Z, band-1=Classification"
        },
        {
            "type": "filters.assign",
            "assignment" : "Classification[:]=2"
        },
        {
            "type": "writers.las",
            "filename": "out.las"
        }
    ]
}

The problem with your first try is that "2" is not a known dimension to PDAL. In the second try you haven't yet created a "Classification" dimension. In the above pipeline I start by creating the Classification dimension with scratch data from the first raster band. Afterwards I overwrite the data in Classification an assign 2 to all points.


/Kristian

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Andrew Flatman
Sendt: 4. oktober 2017 12:55
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org>
Emne: [pdal] assign a constant class to las imported fra tiff

Hi,
I am reading a DEM from a tiff file and writing it as las. My problem is that I cannot set the class. I have tried adding the dimension Classification in the filter.ferry part:

    {
        "type": "filters.ferry",
        "dimensions": "band-1=Z, 2=Classification"
    },
Which gives the error: PDAL: filters.ferry: Can't ferry dimension '2'. Dimension doesn't exist.

I have tried this: "dimensions": "band-1=Z, Classification[:]=2"

Which gives the error: PDAL: filters.ferry: Can't ferry dimension 'Classification[:]'. Dimension doesn't exist.


I have also tried assigning the classification using the filter.assign:
    {
          "type":"filters.assign",
          "assignment" : "Classification[:]=2"
    },

Which gives the error:  PDAL: filters.assign: Invalid dimension name in 'values' option: 'Classification'.


Any Ideas as to how I can set all the values to specific class?

Thanks,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/b75fd818/attachment-0001.html>

From anfla at sdfe.dk  Wed Oct  4 04:45:32 2017
From: anfla at sdfe.dk (Andrew Flatman)
Date: Wed, 4 Oct 2017 11:45:32 +0000
Subject: [pdal] assign a constant class to las imported fra tiff
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAEA7A158@S000014.PROD.SITAD.DK>
References: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
 <2E885BB293AF0448A0181138489E9A0EAEA7A158@S000014.PROD.SITAD.DK>
Message-ID: <A5D59143CFE6C4458A06FF5B4E4499D8DD959FBF@S000014.PROD.SITAD.DK>

Hi guys,
Both good ideas, my problem is if I set it to:    "dimensions": "band-1=Z, band-2=Classification"
I get: PDAL: filters.ferry: Can't ferry dimension 'band-2'. Dimension doesn't exist.

If I set it to: "dimensions": "band-1=Z, band-1=Classification"
Then no elevations are passed to the LAS file, only classes.

/Andrew

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Kristian Evers
Sendt: 4. oktober 2017 13:20
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org>
Emne: Re: [pdal] assign a constant class to las imported fra tiff

Hi Andrew,

Try this:

{
    "pipeline":[
        {
            "type": "readers.gdal",
            "filename":"in.tif"
        },
        {
            "type": "filters.ferry",
            "dimensions": "band-1=Z, band-1=Classification"
        },
        {
            "type": "filters.assign",
            "assignment" : "Classification[:]=2"
        },
        {
            "type": "writers.las",
            "filename": "out.las"
        }
    ]
}

The problem with your first try is that "2" is not a known dimension to PDAL. In the second try you haven't yet created a "Classification" dimension. In the above pipeline I start by creating the Classification dimension with scratch data from the first raster band. Afterwards I overwrite the data in Classification an assign 2 to all points.


/Kristian

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Andrew Flatman
Sendt: 4. oktober 2017 12:55
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>>
Emne: [pdal] assign a constant class to las imported fra tiff

Hi,
I am reading a DEM from a tiff file and writing it as las. My problem is that I cannot set the class. I have tried adding the dimension Classification in the filter.ferry part:

    {
        "type": "filters.ferry",
        "dimensions": "band-1=Z, 2=Classification"
    },
Which gives the error: PDAL: filters.ferry: Can't ferry dimension '2'. Dimension doesn't exist.

I have tried this: "dimensions": "band-1=Z, Classification[:]=2"

Which gives the error: PDAL: filters.ferry: Can't ferry dimension 'Classification[:]'. Dimension doesn't exist.


I have also tried assigning the classification using the filter.assign:
    {
          "type":"filters.assign",
          "assignment" : "Classification[:]=2"
    },

Which gives the error:  PDAL: filters.assign: Invalid dimension name in 'values' option: 'Classification'.


Any Ideas as to how I can set all the values to specific class?

Thanks,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/d1f729ef/attachment.html>

From kreve at sdfe.dk  Wed Oct  4 04:56:21 2017
From: kreve at sdfe.dk (Kristian Evers)
Date: Wed, 4 Oct 2017 11:56:21 +0000
Subject: [pdal] assign a constant class to las imported fra tiff
In-Reply-To: <A5D59143CFE6C4458A06FF5B4E4499D8DD959FBF@S000014.PROD.SITAD.DK>
References: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
 <2E885BB293AF0448A0181138489E9A0EAEA7A158@S000014.PROD.SITAD.DK>
 <A5D59143CFE6C4458A06FF5B4E4499D8DD959FBF@S000014.PROD.SITAD.DK>
Message-ID: <2E885BB293AF0448A0181138489E9A0EAEA7A2D8@S000014.PROD.SITAD.DK>

Ah, I didn't notice that. Instead try this:

            "dimensions": "band-1=Z, Z=Classification"

Seems to work for me.

/Kristian

Fra: Andrew Flatman
Sendt: 4. oktober 2017 13:46
Til: Kristian Evers <kreve at sdfe.dk>; 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org>
Emne: SV: assign a constant class to las imported fra tiff

Hi guys,
Both good ideas, my problem is if I set it to:    "dimensions": "band-1=Z, band-2=Classification"
I get: PDAL: filters.ferry: Can't ferry dimension 'band-2'. Dimension doesn't exist.

If I set it to: "dimensions": "band-1=Z, band-1=Classification"
Then no elevations are passed to the LAS file, only classes.

/Andrew

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Kristian Evers
Sendt: 4. oktober 2017 13:20
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>>
Emne: Re: [pdal] assign a constant class to las imported fra tiff

Hi Andrew,

Try this:

{
    "pipeline":[
        {
            "type": "readers.gdal",
            "filename":"in.tif"
        },
        {
            "type": "filters.ferry",
            "dimensions": "band-1=Z, band-1=Classification"
        },
        {
            "type": "filters.assign",
            "assignment" : "Classification[:]=2"
        },
        {
            "type": "writers.las",
            "filename": "out.las"
        }
    ]
}

The problem with your first try is that "2" is not a known dimension to PDAL. In the second try you haven't yet created a "Classification" dimension. In the above pipeline I start by creating the Classification dimension with scratch data from the first raster band. Afterwards I overwrite the data in Classification an assign 2 to all points.


/Kristian

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Andrew Flatman
Sendt: 4. oktober 2017 12:55
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>>
Emne: [pdal] assign a constant class to las imported fra tiff

Hi,
I am reading a DEM from a tiff file and writing it as las. My problem is that I cannot set the class. I have tried adding the dimension Classification in the filter.ferry part:

    {
        "type": "filters.ferry",
        "dimensions": "band-1=Z, 2=Classification"
    },
Which gives the error: PDAL: filters.ferry: Can't ferry dimension '2'. Dimension doesn't exist.

I have tried this: "dimensions": "band-1=Z, Classification[:]=2"

Which gives the error: PDAL: filters.ferry: Can't ferry dimension 'Classification[:]'. Dimension doesn't exist.


I have also tried assigning the classification using the filter.assign:
    {
          "type":"filters.assign",
          "assignment" : "Classification[:]=2"
    },

Which gives the error:  PDAL: filters.assign: Invalid dimension name in 'values' option: 'Classification'.


Any Ideas as to how I can set all the values to specific class?

Thanks,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/2e4ff7f2/attachment-0001.html>

From anfla at sdfe.dk  Wed Oct  4 04:59:49 2017
From: anfla at sdfe.dk (Andrew Flatman)
Date: Wed, 4 Oct 2017 11:59:49 +0000
Subject: [pdal] assign a constant class to las imported fra tiff
In-Reply-To: <2E885BB293AF0448A0181138489E9A0EAEA7A2D8@S000014.PROD.SITAD.DK>
References: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
 <2E885BB293AF0448A0181138489E9A0EAEA7A158@S000014.PROD.SITAD.DK>
 <A5D59143CFE6C4458A06FF5B4E4499D8DD959FBF@S000014.PROD.SITAD.DK>
 <2E885BB293AF0448A0181138489E9A0EAEA7A2D8@S000014.PROD.SITAD.DK>
Message-ID: <A5D59143CFE6C4458A06FF5B4E4499D8DD95A050@S000014.PROD.SITAD.DK>

Hep,
And we have a solution!

"dimensions": "band-1=Z, Z=Classification"    does the trick.

Thanks guys!

/Andrew

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Kristian Evers
Sendt: 4. oktober 2017 13:56
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org>
Emne: Re: [pdal] assign a constant class to las imported fra tiff

Ah, I didn't notice that. Instead try this:

            "dimensions": "band-1=Z, Z=Classification"

Seems to work for me.

/Kristian

Fra: Andrew Flatman
Sendt: 4. oktober 2017 13:46
Til: Kristian Evers <kreve at sdfe.dk<mailto:kreve at sdfe.dk>>; 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>>
Emne: SV: assign a constant class to las imported fra tiff

Hi guys,
Both good ideas, my problem is if I set it to:    "dimensions": "band-1=Z, band-2=Classification"
I get: PDAL: filters.ferry: Can't ferry dimension 'band-2'. Dimension doesn't exist.

If I set it to: "dimensions": "band-1=Z, band-1=Classification"
Then no elevations are passed to the LAS file, only classes.

/Andrew

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Kristian Evers
Sendt: 4. oktober 2017 13:20
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>>
Emne: Re: [pdal] assign a constant class to las imported fra tiff

Hi Andrew,

Try this:

{
    "pipeline":[
        {
            "type": "readers.gdal",
            "filename":"in.tif"
        },
        {
            "type": "filters.ferry",
            "dimensions": "band-1=Z, band-1=Classification"
        },
        {
            "type": "filters.assign",
            "assignment" : "Classification[:]=2"
        },
        {
            "type": "writers.las",
            "filename": "out.las"
        }
    ]
}

The problem with your first try is that "2" is not a known dimension to PDAL. In the second try you haven't yet created a "Classification" dimension. In the above pipeline I start by creating the Classification dimension with scratch data from the first raster band. Afterwards I overwrite the data in Classification an assign 2 to all points.


/Kristian

Fra: pdal [mailto:pdal-bounces at lists.osgeo.org] På vegne af Andrew Flatman
Sendt: 4. oktober 2017 12:55
Til: 'pdal at lists.osgeo.org' <pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>>
Emne: [pdal] assign a constant class to las imported fra tiff

Hi,
I am reading a DEM from a tiff file and writing it as las. My problem is that I cannot set the class. I have tried adding the dimension Classification in the filter.ferry part:

    {
        "type": "filters.ferry",
        "dimensions": "band-1=Z, 2=Classification"
    },
Which gives the error: PDAL: filters.ferry: Can't ferry dimension '2'. Dimension doesn't exist.

I have tried this: "dimensions": "band-1=Z, Classification[:]=2"

Which gives the error: PDAL: filters.ferry: Can't ferry dimension 'Classification[:]'. Dimension doesn't exist.


I have also tried assigning the classification using the filter.assign:
    {
          "type":"filters.assign",
          "assignment" : "Classification[:]=2"
    },

Which gives the error:  PDAL: filters.assign: Invalid dimension name in 'values' option: 'Classification'.


Any Ideas as to how I can set all the values to specific class?

Thanks,
Andrew
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/3a1b8093/attachment.html>

From andrew.bell.ia at gmail.com  Wed Oct  4 05:02:27 2017
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 4 Oct 2017 08:02:27 -0400
Subject: [pdal] assign a constant class to las imported fra tiff
In-Reply-To: <A5D59143CFE6C4458A06FF5B4E4499D8DD959FBF@S000014.PROD.SITAD.DK>
References: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
 <2E885BB293AF0448A0181138489E9A0EAEA7A158@S000014.PROD.SITAD.DK>
 <A5D59143CFE6C4458A06FF5B4E4499D8DD959FBF@S000014.PROD.SITAD.DK>
Message-ID: <CACJ51z2mVVA2BO1U9UkeqiyMC3TxY8Ff6-=kyHNgyj6Udjfdag@mail.gmail.com>

On Wed, Oct 4, 2017 at 7:45 AM, Andrew Flatman <anfla at sdfe.dk> wrote:

> Hi guys,
>
> Both good ideas, my problem is if I set it to:    "dimensions":
> "band-1=Z, band-2=Classification"
>
> I get: PDAL: filters.ferry: Can't ferry dimension 'band-2'. Dimension
> doesn't exist.
>
>
>
> If I set it to: "dimensions": "band-1=Z, band-1=Classification"
>
> Then no elevations are passed to the LAS file, only classes.
>

This is in my mind a bug in filters.ferry.  There's no reason for it not to
create multiple desitnation dimensions from a source dimension, or to
create one from nothing.

I'll fix this shortly.

P.S. - Although it's kludgy, you can create a dimension by reading in a
text file in addition to your tiff file.  Just create a text file that has
nothing in it but a header line.  You can stick whatever dimensions you
want in there.  In your case, the file can just contain the text
"Classification".  So your pipeline would look like:

{

    "pipeline":[

        "test.txt",

        {

            "type": "readers.gdal",

            "filename":"in.tif"

        },

        {

            "type": "filters.assign",

            "assignment" : "Classification[:]=2"

        },

        {

            "type": "writers.las",

            "filename": "out.las"

        }

    ]
}

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/75a29eb0/attachment-0001.html>

From anfla at sdfe.dk  Wed Oct  4 05:19:31 2017
From: anfla at sdfe.dk (Andrew Flatman)
Date: Wed, 4 Oct 2017 12:19:31 +0000
Subject: [pdal] assign a constant class to las imported fra tiff
In-Reply-To: <CACJ51z2mVVA2BO1U9UkeqiyMC3TxY8Ff6-=kyHNgyj6Udjfdag@mail.gmail.com>
References: <A5D59143CFE6C4458A06FF5B4E4499D8DD959F43@S000014.PROD.SITAD.DK>
 <2E885BB293AF0448A0181138489E9A0EAEA7A158@S000014.PROD.SITAD.DK>
 <A5D59143CFE6C4458A06FF5B4E4499D8DD959FBF@S000014.PROD.SITAD.DK>
 <CACJ51z2mVVA2BO1U9UkeqiyMC3TxY8Ff6-=kyHNgyj6Udjfdag@mail.gmail.com>
Message-ID: <A5D59143CFE6C4458A06FF5B4E4499D8DD95A0BB@S000014.PROD.SITAD.DK>

Thanks for the idea about the text file, good to know.

Greatly appreciated!

/Andrew

Fra: Andrew Bell [mailto:andrew.bell.ia at gmail.com]
Sendt: 4. oktober 2017 14:02
Til: Andrew Flatman <anfla at sdfe.dk>
Cc: Kristian Evers <kreve at sdfe.dk>; pdal at lists.osgeo.org
Emne: Re: [pdal] assign a constant class to las imported fra tiff

On Wed, Oct 4, 2017 at 7:45 AM, Andrew Flatman <anfla at sdfe.dk<mailto:anfla at sdfe.dk>> wrote:
Hi guys,
Both good ideas, my problem is if I set it to:    "dimensions": "band-1=Z, band-2=Classification"
I get: PDAL: filters.ferry: Can't ferry dimension 'band-2'. Dimension doesn't exist.

If I set it to: "dimensions": "band-1=Z, band-1=Classification"
Then no elevations are passed to the LAS file, only classes.

This is in my mind a bug in filters.ferry.  There's no reason for it not to create multiple desitnation dimensions from a source dimension, or to create one from nothing.

I'll fix this shortly.

P.S. - Although it's kludgy, you can create a dimension by reading in a text file in addition to your tiff file.  Just create a text file that has nothing in it but a header line.  You can stick whatever dimensions you want in there.  In your case, the file can just contain the text "Classification".  So your pipeline would look like:

{
    "pipeline":[
        "test.txt",
        {
            "type": "readers.gdal",
            "filename":"in.tif"
        },
        {
            "type": "filters.assign",
            "assignment" : "Classification[:]=2"
        },
        {
            "type": "writers.las",
            "filename": "out.las"
        }
    ]
}

--
Andrew Bell
andrew.bell.ia at gmail.com<mailto:andrew.bell.ia at gmail.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171004/8c11787b/attachment.html>

From michael.rosen at gmail.com  Wed Oct 11 09:48:15 2017
From: michael.rosen at gmail.com (Michael Rosen)
Date: Wed, 11 Oct 2017 09:48:15 -0700
Subject: [pdal] Colorization using a large VRT raster is slow,
 but using a small VRT raster is fast ... but why?
Message-ID: <CAAhorQkYCfG_-igs1RYQo=QBnjd55YTV5ykCpHWy6OgpovdN6A@mail.gmail.com>

I am using the filters.colorization with a .vrt built by gdalbuiltvrt.  The
raster dataset actually contains 2200 files which I believe are all
correctly georeferenced and non-overlapping.  Of those, there are only 19
that actually intersect the point cloud being colorized.

What I'm observing is that if I build the vrt with only the 19 files, the
colorization runs in less than two minutes.  However, if build the vrt with
all of them, then it takes an unacceptably long time (I've not watched it
finish but I'm keeping an eye on the open file handles ... it's finding
right files but it's just moving through them really slowly).

I would expect that the VRT would be able to immediately provide the pixels
from the right raster tile, making the number of tiles in the mosaic
irrelevant.  That's clearly not the case (does it not do some sort of
indexing here?).  Can anyone offer an explanation / fix?  This is important
because I actually have many LAS tiles to colorize and while all of them
are contained in the bounds of the large mosaic, they each have a different
extent.

I guess a work around would be to build small VRTs based on the geographic
extent of each LAS tile.  But how?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171011/6e7cec10/attachment.html>

From michael.smith.erdc at gmail.com  Wed Oct 11 09:51:03 2017
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Wed, 11 Oct 2017 12:51:03 -0400
Subject: [pdal] Colorization using a large VRT raster is slow,
 but using a small VRT raster is fast ... but why?
In-Reply-To: <CAAhorQkYCfG_-igs1RYQo=QBnjd55YTV5ykCpHWy6OgpovdN6A@mail.gmail.com>
References: <CAAhorQkYCfG_-igs1RYQo=QBnjd55YTV5ykCpHWy6OgpovdN6A@mail.gmail.com>
Message-ID: <D603C3E4.102A2F%michael.smith.erdc@gmail.com>

Michael,

VRTs are not spatial indexed. I wonder if you did a tileindex and created a
vrt on that (as pdal wouldn't open a tileindex directly) if it would work a
lot faster since a tileindex is spatially indexed.

Mike

-- 
Michael Smith
Remote Sensing/GIS Center
US Army Corps of Engineers

From:  pdal <pdal-bounces at lists.osgeo.org> on behalf of Michael Rosen
<michael.rosen at gmail.com>
Date:  Wednesday, October 11, 2017 at  12:48 PM
To:  pdal <pdal at lists.osgeo.org>
Subject:  [pdal] Colorization using a large VRT raster is slow, but using a
small VRT raster is fast ... but why?

> 
> 
> 
> I am using the filters.colorization with a .vrt built by gdalbuiltvrt.  The
> raster dataset actually contains 2200 files which I believe are all correctly
> georeferenced and non-overlapping.  Of those, there are only 19 that actually
> intersect the point cloud being colorized.
> 
> What I'm observing is that if I build the vrt with only the 19 files, the
> colorization runs in less than two minutes.  However, if build the vrt with
> all of them, then it takes an unacceptably long time (I've not watched it
> finish but I'm keeping an eye on the open file handles ... it's finding right
> files but it's just moving through them really slowly).
> 
> I would expect that the VRT would be able to immediately provide the pixels
> from the right raster tile, making the number of tiles in the mosaic
> irrelevant.  That's clearly not the case (does it not do some sort of indexing
> here?).  Can anyone offer an explanation / fix?  This is important because I
> actually have many LAS tiles to colorize and while all of them are contained
> in the bounds of the large mosaic, they each have a different extent.
> 
> I guess a work around would be to build small VRTs based on the geographic
> extent of each LAS tile.  But how?
> _______________________________________________ pdal mailing list
> pdal at lists.osgeo.org https://lists.osgeo.org/mailman/listinfo/pdal


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171011/bcef09f4/attachment.html>

From andrew.bell.ia at gmail.com  Wed Oct 11 09:56:59 2017
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 11 Oct 2017 12:56:59 -0400
Subject: [pdal] Colorization using a large VRT raster is slow,
 but using a small VRT raster is fast ... but why?
In-Reply-To: <CAAhorQkYCfG_-igs1RYQo=QBnjd55YTV5ykCpHWy6OgpovdN6A@mail.gmail.com>
References: <CAAhorQkYCfG_-igs1RYQo=QBnjd55YTV5ykCpHWy6OgpovdN6A@mail.gmail.com>
Message-ID: <CACJ51z0eJH0MaQYjQV6pfY_iH4YyhGNa=OMkcA-hsQ4HnUeDwg@mail.gmail.com>

PDAL reads the entire raster into memory, assuming that it pretty much
matches the extent of the point set that you're coloring.  Seems that this
is a bad assumption in your case.  The code would have to be changed to
limit the portion of the raster that you've created that gets read.  Feel
free to create a ticket.

On Wed, Oct 11, 2017 at 12:48 PM, Michael Rosen <michael.rosen at gmail.com>
wrote:

>
>
>
> I am using the filters.colorization with a .vrt built by gdalbuiltvrt.
> The raster dataset actually contains 2200 files which I believe are all
> correctly georeferenced and non-overlapping.  Of those, there are only 19
> that actually intersect the point cloud being colorized.
>
> What I'm observing is that if I build the vrt with only the 19 files, the
> colorization runs in less than two minutes.  However, if build the vrt with
> all of them, then it takes an unacceptably long time (I've not watched it
> finish but I'm keeping an eye on the open file handles ... it's finding
> right files but it's just moving through them really slowly).
>
> I would expect that the VRT would be able to immediately provide the
> pixels from the right raster tile, making the number of tiles in the mosaic
> irrelevant.  That's clearly not the case (does it not do some sort of
> indexing here?).  Can anyone offer an explanation / fix?  This is important
> because I actually have many LAS tiles to colorize and while all of them
> are contained in the bounds of the large mosaic, they each have a different
> extent.
>
> I guess a work around would be to build small VRTs based on the geographic
> extent of each LAS tile.  But how?
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171011/a6b7ecc8/attachment.html>

From andrew.bell.ia at gmail.com  Wed Oct 11 11:04:30 2017
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 11 Oct 2017 14:04:30 -0400
Subject: [pdal] Colorization using a large VRT raster is slow,
 but using a small VRT raster is fast ... but why?
In-Reply-To: <CACJ51z0eJH0MaQYjQV6pfY_iH4YyhGNa=OMkcA-hsQ4HnUeDwg@mail.gmail.com>
References: <CAAhorQkYCfG_-igs1RYQo=QBnjd55YTV5ykCpHWy6OgpovdN6A@mail.gmail.com>
 <CACJ51z0eJH0MaQYjQV6pfY_iH4YyhGNa=OMkcA-hsQ4HnUeDwg@mail.gmail.com>
Message-ID: <CACJ51z0B=Oqw6TofCTxiv=bqi_Gthbqq2qcpac9JAadyBavMbw@mail.gmail.com>

Correcting myself here.  I'm wrong that we read the entire raster.  We let
GDAL do all the work and assume it's efficient.

On Wed, Oct 11, 2017 at 12:56 PM, Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

> PDAL reads the entire raster into memory, assuming that it pretty much
> matches the extent of the point set that you're coloring.  Seems that this
> is a bad assumption in your case.  The code would have to be changed to
> limit the portion of the raster that you've created that gets read.  Feel
> free to create a ticket.
>
> On Wed, Oct 11, 2017 at 12:48 PM, Michael Rosen <michael.rosen at gmail.com>
> wrote:
>
>>
>>
>>
>> I am using the filters.colorization with a .vrt built by gdalbuiltvrt.
>> The raster dataset actually contains 2200 files which I believe are all
>> correctly georeferenced and non-overlapping.  Of those, there are only 19
>> that actually intersect the point cloud being colorized.
>>
>> What I'm observing is that if I build the vrt with only the 19 files, the
>> colorization runs in less than two minutes.  However, if build the vrt with
>> all of them, then it takes an unacceptably long time (I've not watched it
>> finish but I'm keeping an eye on the open file handles ... it's finding
>> right files but it's just moving through them really slowly).
>>
>> I would expect that the VRT would be able to immediately provide the
>> pixels from the right raster tile, making the number of tiles in the mosaic
>> irrelevant.  That's clearly not the case (does it not do some sort of
>> indexing here?).  Can anyone offer an explanation / fix?  This is important
>> because I actually have many LAS tiles to colorize and while all of them
>> are contained in the bounds of the large mosaic, they each have a different
>> extent.
>>
>> I guess a work around would be to build small VRTs based on the
>> geographic extent of each LAS tile.  But how?
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>>
>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171011/78e9e61c/attachment-0001.html>

From howard at hobu.co  Wed Oct 11 11:15:22 2017
From: howard at hobu.co (Howard Butler)
Date: Wed, 11 Oct 2017 13:15:22 -0500
Subject: [pdal] Colorization using a large VRT raster is slow,
 but using a small VRT raster is fast ... but why?
In-Reply-To: <CACJ51z0B=Oqw6TofCTxiv=bqi_Gthbqq2qcpac9JAadyBavMbw@mail.gmail.com>
References: <CAAhorQkYCfG_-igs1RYQo=QBnjd55YTV5ykCpHWy6OgpovdN6A@mail.gmail.com>
 <CACJ51z0eJH0MaQYjQV6pfY_iH4YyhGNa=OMkcA-hsQ4HnUeDwg@mail.gmail.com>
 <CACJ51z0B=Oqw6TofCTxiv=bqi_Gthbqq2qcpac9JAadyBavMbw@mail.gmail.com>
Message-ID: <7AA95347-B63B-4635-AD9D-433F8AE6F0A9@hobu.co>

Another sensitivity is PDAL reads single pixels for each point. If your data are organized in a way that has them being read in an order that scatters reads all over the raster, it wrecks the efficiency of GDAL's default raster cache. A way to overcome that is to adjust GDAL's GDAL_CACHEMAX variable as https://www.pdal.io/stages/filters.colorization.html#considerations <https://www.pdal.io/stages/filters.colorization.html#considerations> talks about.

That won't do much for your huge VRT scenario, but increasing it is likely to significantly speed up your 19 file one.

Your huge VRT scenario should be attacked with a GDAL tileindex http://www.gdal.org/gdaltindex.html <http://www.gdal.org/gdaltindex.html> like Mike describes. 

> On Oct 11, 2017, at 1:04 PM, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
> 
> Correcting myself here.  I'm wrong that we read the entire raster.  We let GDAL do all the work and assume it's efficient.
> 
> On Wed, Oct 11, 2017 at 12:56 PM, Andrew Bell <andrew.bell.ia at gmail.com <mailto:andrew.bell.ia at gmail.com>> wrote:
> PDAL reads the entire raster into memory, assuming that it pretty much matches the extent of the point set that you're coloring.  Seems that this is a bad assumption in your case.  The code would have to be changed to limit the portion of the raster that you've created that gets read.  Feel free to create a ticket.
> 
> On Wed, Oct 11, 2017 at 12:48 PM, Michael Rosen <michael.rosen at gmail.com <mailto:michael.rosen at gmail.com>> wrote:
> 
> 
> 
> I am using the filters.colorization with a .vrt built by gdalbuiltvrt.  The raster dataset actually contains 2200 files which I believe are all correctly georeferenced and non-overlapping.  Of those, there are only 19 that actually intersect the point cloud being colorized.
> 
> What I'm observing is that if I build the vrt with only the 19 files, the colorization runs in less than two minutes.  However, if build the vrt with all of them, then it takes an unacceptably long time (I've not watched it finish but I'm keeping an eye on the open file handles ... it's finding right files but it's just moving through them really slowly).
> 
> I would expect that the VRT would be able to immediately provide the pixels from the right raster tile, making the number of tiles in the mosaic irrelevant.  That's clearly not the case (does it not do some sort of indexing here?).  Can anyone offer an explanation / fix?  This is important because I actually have many LAS tiles to colorize and while all of them are contained in the bounds of the large mosaic, they each have a different extent.
> 
> I guess a work around would be to build small VRTs based on the geographic extent of each LAS tile.  But how?
> 
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org <mailto:pdal at lists.osgeo.org>
> https://lists.osgeo.org/mailman/listinfo/pdal <https://lists.osgeo.org/mailman/listinfo/pdal>
> 
> 
> 
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com <mailto:andrew.bell.ia at gmail.com>
> 
> 
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com <mailto:andrew.bell.ia at gmail.com>_______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171011/fff782de/attachment.html>

From howard at hobu.co  Fri Oct 13 10:47:09 2017
From: howard at hobu.co (Howard Butler)
Date: Fri, 13 Oct 2017 12:47:09 -0500
Subject: [pdal] PDAL 1.6.0 Released
Message-ID: <933A40FC-BA4F-4690-9CE3-257782BFD163@hobu.co>

All,

I am pleased to announce the release of PDAL 1.6.

The full release notes are available at https://github.com/PDAL/PDAL/releases/tag/1.6 <https://github.com/PDAL/PDAL/releases/tag/1.6>

Download from https://www.pdal.io/download.html <https://www.pdal.io/download.html> or OSGeo4W64.

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171013/82376927/attachment.html>

From michael.rosen at gmail.com  Fri Oct 20 11:30:53 2017
From: michael.rosen at gmail.com (Michael Rosen)
Date: Fri, 20 Oct 2017 11:30:53 -0700
Subject: [pdal] capturing local geometry descriptors
Message-ID: <CAAhorQkJmS=ZU_Z7SxvZAtUqct3VOx-34tEzVGvrSE+wH0oTRA@mail.gmail.com>

Hi PDALers,

I continue investigation into aerial lidar classification prediction. I'm
interested in calculating metrics over a known local volume for each point.
The specific examples I'm considering:

- Normals. Filters.normal allow us to specify how many nearest neighbors go
into the calculation but without consideration to how far away they are.
Does does it make sense to specify a radius in addition to the number of
neighbors? So, perhaps calculate normals based on all points at most 3
meters away:

{

"type":"filters.normal",

"radius":3

}

- Normal variance. HeightAboveGround variance. Along the same lines, I'd
like to augument each point with the magnitude of local normal-variance and
local HAG-variance. Perhaps

{

"type":"filters:variance",

"radius":3,

"dimensions":"NormalX, NormalY, NormalZ, HeightAboveGround"

}



Does anyone have thoughts on how to proceed?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20171020/68bcfd74/attachment.html>

