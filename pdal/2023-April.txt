From kirk.waters at noaa.gov  Mon Apr  3 03:50:54 2023
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Mon, 3 Apr 2023 06:50:54 -0400
Subject: [pdal] not streaming from EPT to LAZ
Message-ID: <CADm=QrSG0a6mbcX62zueBkANdg7h8nFzX6R5KcSHYUsdmYLkWw@mail.gmail.com>

I must be doing something wrong in this pipeline that pulls data from an
EPT and outputs an LAZ. It ends up exceeding 70Gb of RAM and getting killed
by the system. I don't see anything that would cause it to use standard
mode instead of streaming mode. Would the switch to LAS 1.4 cause standard
mode? Here's the pipeline:
[{
"requests": "6",
"type": "readers.ept",
"bounds": "([-9080833.61616794, -9050564.55208689], [4013331.20703169,
4035337.95504148])",
"filename": "
https://s3-us-west-2.amazonaws.com/usgs-lidar-public/SC_SavannahPeeDee_2_2019/ept.json
"
}, {
"limits": "Classification[2:2]",
"type": "filters.range"
}, {
"out_srs": "EPSG:6318",
"type": "filters.reprojection",
"in_srs": "EPSG:3857"
}, {
"compression": "lasperf",
"type": "writers.las",
"offset_x": "auto",
"scale_y": "0.0000001",
"minor_version": 4,
"scale_x": "0.0000001",
"offset_z": "auto",
"filename": "extractept2.laz",
"dataformat_id": 7,
"offset_y": "auto"
}]

This failed in PDAL 2.3.0. I'm trying PDAL 2.4.2 now and it looks like it
is doing the same thing. Is there anything in that pipeline that would
prevent streaming?

Thanks!

Kirk Waters, PhD
NOAA Office for Coastal Management
Applied Sciences Program
?Phone: 843-284-6962? (email preferred)
coast.noaa.gov/digitalcoast
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20230403/b4ed698a/attachment.htm>

From howard at hobu.co  Thu Apr 13 11:26:01 2023
From: howard at hobu.co (Howard Butler)
Date: Thu, 13 Apr 2023 13:26:01 -0500
Subject: [pdal] PDAL 2.5.3 Released
Message-ID: <9DAE5408-79F8-4BFC-B1F6-0A5FF596A58E@hobu.co>

All,

PDAL 2.5.3 is now available. It just fixes a few more bugs. Maybe some of them were yours :)

https://github.com/PDAL/PDAL/releases/tag/2.5.3

Howard

From raivo at r-systems.ee  Sun Apr 23 06:51:55 2023
From: raivo at r-systems.ee (Raivo Rebane)
Date: Sun, 23 Apr 2023 16:51:55 +0300
Subject: [pdal] How to convert Lidar file to multiframe pcd
Message-ID: <b2eba249-c7cd-6e79-69ea-15d89335434c@r-systems.ee>

Hello

I concert lida file las into pcd format file, bu PDAL converts all data 
into 1 frame.

I need lidar scans in pcd file as multi frame.

How can I obtain this file

Regards

Raivo


From howard at hobu.co  Mon Apr 24 09:32:09 2023
From: howard at hobu.co (Howard Butler)
Date: Mon, 24 Apr 2023 11:32:09 -0500
Subject: [pdal] How to convert Lidar file to multiframe pcd
In-Reply-To: <b2eba249-c7cd-6e79-69ea-15d89335434c@r-systems.ee>
References: <b2eba249-c7cd-6e79-69ea-15d89335434c@r-systems.ee>
Message-ID: <C194A2A9-61FB-4B63-958B-171CCC9A39E5@hobu.co>



> On Apr 23, 2023, at 8:51 AM, Raivo Rebane <raivo at r-systems.ee> wrote:
> 
> Hello
> 
> I concert lida file las into pcd format file, bu PDAL converts all data into 1 frame.
> 
> I need lidar scans in pcd file as multi frame.
> 
> How can I obtain this file

There is no support for multi-frame PCD files in PDAL's PCD writer. We would be happy to incorporate a patch (with tests) if your organization completed the effort to support it.

Howard

From raivo at r-systems.ee  Mon Apr 24 23:24:45 2023
From: raivo at r-systems.ee (Raivo Rebane)
Date: Tue, 25 Apr 2023 09:24:45 +0300
Subject: [pdal] How to convert Lidar file to multiframe pcd
In-Reply-To: <C194A2A9-61FB-4B63-958B-171CCC9A39E5@hobu.co>
References: <b2eba249-c7cd-6e79-69ea-15d89335434c@r-systems.ee>
 <C194A2A9-61FB-4B63-958B-171CCC9A39E5@hobu.co>
Message-ID: <99bc910f-228a-735b-df70-0fbaf32b8f69@r-systems.ee>

Hello

but chat.openai.com said to me that earlier versions had plugins for this.

Raivo

On 24.04.23 19:32, Howard Butler wrote:
>
>> On Apr 23, 2023, at 8:51 AM, Raivo Rebane <raivo at r-systems.ee> wrote:
>>
>> Hello
>>
>> I concert lida file las into pcd format file, bu PDAL converts all data into 1 frame.
>>
>> I need lidar scans in pcd file as multi frame.
>>
>> How can I obtain this file
> There is no support for multi-frame PCD files in PDAL's PCD writer. We would be happy to incorporate a patch (with tests) if your organization completed the effort to support it.
>
> Howard

From howard at hobu.co  Tue Apr 25 04:50:47 2023
From: howard at hobu.co (Howard Butler)
Date: Tue, 25 Apr 2023 06:50:47 -0500
Subject: [pdal] How to convert Lidar file to multiframe pcd
In-Reply-To: <99bc910f-228a-735b-df70-0fbaf32b8f69@r-systems.ee>
References: <b2eba249-c7cd-6e79-69ea-15d89335434c@r-systems.ee>
 <C194A2A9-61FB-4B63-958B-171CCC9A39E5@hobu.co>
 <99bc910f-228a-735b-df70-0fbaf32b8f69@r-systems.ee>
Message-ID: <86CEDBC6-70E1-43EB-93EF-09BE74AAA210@hobu.co>

*sarcasm warning*

Why are you asking questions on a mailing list if you have GPT? 

We are not your LLM validators.

Howard

> On Apr 25, 2023, at 1:24 AM, Raivo Rebane <raivo at r-systems.ee> wrote:
> 
> Hello
> 
> but chat.openai.com said to me that earlier versions had plugins for this.
> 
> Raivo
> 
> On 24.04.23 19:32, Howard Butler wrote:
>> 
>>> On Apr 23, 2023, at 8:51 AM, Raivo Rebane <raivo at r-systems.ee> wrote:
>>> 
>>> Hello
>>> 
>>> I concert lida file las into pcd format file, bu PDAL converts all data into 1 frame.
>>> 
>>> I need lidar scans in pcd file as multi frame.
>>> 
>>> How can I obtain this file
>> There is no support for multi-frame PCD files in PDAL's PCD writer. We would be happy to incorporate a patch (with tests) if your organization completed the effort to support it.
>> 
>> Howard


From cole.speed at beg.utexas.edu  Thu Apr 27 09:49:37 2023
From: cole.speed at beg.utexas.edu (Speed, Cole M)
Date: Thu, 27 Apr 2023 16:49:37 +0000
Subject: [pdal] 'pdal info' VLR error troubleshooting
Message-ID: <CY4PR06MB31747E70671B3671B82216A1AC6A9@CY4PR06MB3174.namprd06.prod.outlook.com>

Hello all,

I am using 'pdal info' to view the metadata for a few laz files. For several of the files, pdal info returns the error:


PDAL: readers.las: VLR 1(SF/0) size too large -- flows into point data.

I believe this may indicate that the header/VLR s longer than is expected, causing the metadata information to be misinterpreted. Attempting to troubleshoot the issue by having a look at the lasreader source code (https://github.com/PDAL/PDAL/blob/master/io/LasReader.cpp), I see the below code snippet:

        if ((uint64_t)stream->tellg() + vlr.promisedDataSize > d->header.pointOffset)
            throwError("VLR " + std::to_string(i + 1) +
                "(" + vlr.userId + "/" + std::to_string(vlr.recordId) + ") "
                "size too large -- flows into point data.");

I interpret this to indicate an underlying issue related to the laz header/VLR, but I am unsure what specifically this means or how to resolve it. The files are also unreadable by QGIS (Error: 'readers.las: Invalid VLR - exceeds specified file range'). Insight from anyone who has encountered these errors or has any thoughts as to what specifically they imply about the header/VLR formatting of these laz files would be greatly appreciated. Thanks in advance!

Cole Speed

---------------------
Cole M. Speed
Ph.D. Candidate
Jackson School of Geosciences, University of Texas at Austin

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20230427/ac534752/attachment.htm>

From andrew.bell.ia at gmail.com  Thu Apr 27 11:28:45 2023
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 27 Apr 2023 20:28:45 +0200
Subject: [pdal] 'pdal info' VLR error troubleshooting
In-Reply-To: <CY4PR06MB31747E70671B3671B82216A1AC6A9@CY4PR06MB3174.namprd06.prod.outlook.com>
References: <CY4PR06MB31747E70671B3671B82216A1AC6A9@CY4PR06MB3174.namprd06.prod.outlook.com>
Message-ID: <CACJ51z19UOEXbFWj3tVPGWwMBRc10J5DQbCBe-TSccKoaOwqGA@mail.gmail.com>

Each las vlr has a length. The length indicated in your vlr is incorrect in
that it would encroach into point data. Contact your data provider to get a
corrected file.

On Thu, Apr 27, 2023, 6:56 PM Speed, Cole M <cole.speed at beg.utexas.edu>
wrote:

> Hello all,
>
> I am using 'pdal info' to view the metadata for a few laz files. For
> several of the files, pdal info returns the error:
>
> PDAL: readers.las: VLR 1(SF/0) size too large -- flows into point data.
>
> I believe this may indicate that the header/VLR s longer than is expected,
> causing the metadata information to be misinterpreted. Attempting to
> troubleshoot the issue by having a look at the lasreader source code (
> https://github.com/PDAL/PDAL/blob/master/io/LasReader.cpp), I see the
> below code snippet:
>
>         if ((uint64_t)stream->tellg() + vlr.promisedDataSize >
> d->header.pointOffset)
>             throwError("VLR " + std::to_string(i + 1) +
>                 "(" + vlr.userId + "/" + std::to_string(vlr.recordId) + ")
> "
>                 "size too large -- flows into point data.");
>
> I interpret this to indicate an underlying issue related to the laz
> header/VLR, but I am unsure what specifically this means or how to resolve
> it. The files are also unreadable by QGIS (Error: 'readers.las: Invalid VLR
> - exceeds specified file range'). Insight from anyone who has encountered
> these errors or has any thoughts as to what specifically they imply about
> the header/VLR formatting of these laz files would be greatly appreciated. Thanks
> in advance!
>
> Cole Speed
>
> ---------------------
> Cole M. Speed
> Ph.D. Candidate
> Jackson School of Geosciences, University of Texas at Austin
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20230427/7220afaf/attachment-0001.htm>

From matt.beckley at earthscope.org  Thu Apr 27 11:48:34 2023
From: matt.beckley at earthscope.org (Matt Beckley)
Date: Thu, 27 Apr 2023 12:48:34 -0600
Subject: [pdal] proper syntax for applying a geoid in newer PDAL versions
Message-ID: <CANpK7S+zC8w2ALFFiTZRvmDWTJ_pH00CXP0MZM2jQ94ua4SNQw@mail.gmail.com>

Hello,

In older versions of PDAL I used to be able to run a pipeline like:

*{"pipeline": [{"type" : "readers.las",*
*                  "filename": "input_Ellipsoidal.laz"},*
*                 {"type":"filters.reprojection",*
*                  "in_srs":"EPSG:32611",*
*                  "out_srs":"+init=EPSG:32611
+geoidgrids=g2003conus.gtx"},*
*                 {"type" : "writers.las",*
*                  "filename": "output_withGeoid.laz",*
*                  "compression": "laszip",*
*                  "a_srs": "EPSG:32611+5703"*
*                 }]}*


This would run fine, and the output would have the geoid properly applied.

However, newer versions of PDAL (e.g. 2.5.3) uses newer version of PROJ,
which no longer likes its string in the form, "+init=epsg:XXXX".  It will
give the warning:
"Warning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS
with a non-EPSG compliant axis order."  When running the above pipeline in
newer versions of PDAL, I get the above warning, and the output grid does
not have the geoid applied.

I tried adjusting the PROJ string to remove this convention:

*{"pipeline": [{"type" : "readers.las",*
*                  "filename": "input_Ellipsoidal.laz"},*
*                 {"type":"filters.reprojection",*
*                  "in_srs":"EPSG:32611",*
*                  "out_srs":"*+proj=utm +zone=11 +type=crs
* +geoidgrids=g2003conus.gtx"},*
*                 {"type" : "writers.las",*
*                  "filename": "output_withGeoid.laz",*
*                  "compression": "laszip",*
*                  "a_srs": "EPSG:32611+5703"*
*                 }]}*

This runs without warning or errors, but again, the output grid does
not have the geoid applied.  Most of the documentation on this type of
operation I've seen still refers to the older PROJ syntax of,
"+init=epsg:XXXX".

Is there a way to apply a geoid with the new PROJ syntax, and hopefully I
am just missing something with the proper syntax to do this operation on
the newer versions of PDAL?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20230427/42655a7e/attachment.htm>

From matt.beckley at earthscope.org  Tue Apr 25 15:35:40 2023
From: matt.beckley at earthscope.org (Matt Beckley)
Date: Tue, 25 Apr 2023 16:35:40 -0600
Subject: [pdal] proper syntax for applying a geoid in newer versions
Message-ID: <CANpK7SLbbqJu+_ZCZNLGF5dGv+Lt+-Tsz48NcKQJ4BYi_mG3Ow@mail.gmail.com>

Hello,

In older versions of PDAL I used to be able to run a pipeline like:

*{"pipeline": [{"type" : "readers.las",*
*                  "filename": "input_Ellipsoidal.laz"},*
*                 {"type":"filters.reprojection",*
*                  "in_srs":"EPSG:32611",*
*                  "out_srs":"+init=EPSG:32611
+geoidgrids=g2003conus.gtx"},*
*                 {"type" : "writers.las",*
*                  "filename": "output_Geoid.laz",*
*                  "compression": "laszip",*
*                  "a_srs": "EPSG:32611+5703"*
*                 }]}*


This would run fine, and the output would have the geoid properly applied.

However, newer versions of PDAL (e.g. 2.5.3) uses newer version of PROJ,
which no longer likes its string in the form, "+init=epsg:XXXX".  It will
give the warning:
"Warning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS
with a non-EPSG compliant axis order."

I adjusted the PROJ string to remove this convention:

*{"pipeline": [{"type" : "readers.las",*
*                  "filename": "input_Ellipsoidal.laz"},*
*                 {"type":"filters.reprojection",*
*                  "in_srs":"EPSG:32611",*
*                  "out_srs":"*+proj=utm +zone=11 +type=crs
* +geoidgrids=g2003conus.gtx"},*
*                 {"type" : "writers.las",*
*                  "filename": "output_Geoid.laz",*
*                  "compression": "laszip",*
*                  "a_srs": "EPSG:32611+5703"*
*                 }]}*

This runs without warning or errors, but the output grid *does not* have
the geoid applied.  Most of the documentation on this type of operation
I've seen still refers to the older PROJ syntax of, "+init=epsg:XXXX".

Is there a way to apply a geoid with the new PROJ syntax, and hopefully I
am just missing something with the proper syntax to do this operation on
the newer versions of PDAL?

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20230425/bd603ad1/attachment.htm>

From jeffbourdier at gmail.com  Fri Apr 28 12:24:25 2023
From: jeffbourdier at gmail.com (Jeff Bourdier)
Date: Fri, 28 Apr 2023 14:24:25 -0500
Subject: [pdal] proper syntax for applying a geoid in newer versions
In-Reply-To: <CANpK7SLbbqJu+_ZCZNLGF5dGv+Lt+-Tsz48NcKQJ4BYi_mG3Ow@mail.gmail.com>
References: <CANpK7SLbbqJu+_ZCZNLGF5dGv+Lt+-Tsz48NcKQJ4BYi_mG3Ow@mail.gmail.com>
Message-ID: <CAHG9fPkSKi=aQR4g_=z7i0H76N8HqUnAk5chhHMOMRJSLcLVkA@mail.gmail.com>

Instead of "+init=EPSG:32611" or "+proj=utm +zone=11 +type=crs", you might
try the fully expanded PROJ string
<https://spatialreference.org/ref/epsg/32611/proj4/>:

+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs


So your pipeline would be:

*{"pipeline": [{"type" : "readers.las",*
*                  "filename": "input_Ellipsoidal.laz"},*
*                 {"type":"filters.reprojection",*
*                  "in_srs":"EPSG:32611",*
*                  "out_srs":"*+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84
+units=m +no_defs* +geoidgrids=g2003conus.gtx"},*
*                 {"type" : "writers.las",*
*                  "filename": "output_Geoid.laz",*
*                  "compression": "laszip",*
*                  "a_srs": "EPSG:32611+5703"*
*                 }]}*



On Fri, Apr 28, 2023 at 10:09?AM Matt Beckley <matt.beckley at earthscope.org>
wrote:

> Hello,
>
> In older versions of PDAL I used to be able to run a pipeline like:
>
> *{"pipeline": [{"type" : "readers.las",*
> *                  "filename": "input_Ellipsoidal.laz"},*
> *                 {"type":"filters.reprojection",*
> *                  "in_srs":"EPSG:32611",*
> *                  "out_srs":"+init=EPSG:32611
> +geoidgrids=g2003conus.gtx"},*
> *                 {"type" : "writers.las",*
> *                  "filename": "output_Geoid.laz",*
> *                  "compression": "laszip",*
> *                  "a_srs": "EPSG:32611+5703"*
> *                 }]}*
>
>
> This would run fine, and the output would have the geoid properly applied.
>
> However, newer versions of PDAL (e.g. 2.5.3) uses newer version of PROJ,
> which no longer likes its string in the form, "+init=epsg:XXXX".  It will
> give the warning:
> "Warning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS
> with a non-EPSG compliant axis order."
>
> I adjusted the PROJ string to remove this convention:
>
> *{"pipeline": [{"type" : "readers.las",*
> *                  "filename": "input_Ellipsoidal.laz"},*
> *                 {"type":"filters.reprojection",*
> *                  "in_srs":"EPSG:32611",*
> *                  "out_srs":"*+proj=utm +zone=11 +type=crs
> * +geoidgrids=g2003conus.gtx"},*
> *                 {"type" : "writers.las",*
> *                  "filename": "output_Geoid.laz",*
> *                  "compression": "laszip",*
> *                  "a_srs": "EPSG:32611+5703"*
> *                 }]}*
>
> This runs without warning or errors, but the output grid *does not* have
> the geoid applied.  Most of the documentation on this type of operation
> I've seen still refers to the older PROJ syntax of, "+init=epsg:XXXX".
>
> Is there a way to apply a geoid with the new PROJ syntax, and hopefully I
> am just missing something with the proper syntax to do this operation on
> the newer versions of PDAL?
>
> Thanks!
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20230428/e539cc9d/attachment.htm>

From michael.smith.erdc at gmail.com  Fri Apr 28 13:11:37 2023
From: michael.smith.erdc at gmail.com (Michael Smith)
Date: Fri, 28 Apr 2023 16:11:37 -0400
Subject: [pdal] proper syntax for applying a geoid in newer versions
In-Reply-To: <CAHG9fPkSKi=aQR4g_=z7i0H76N8HqUnAk5chhHMOMRJSLcLVkA@mail.gmail.com>
References: <CANpK7SLbbqJu+_ZCZNLGF5dGv+Lt+-Tsz48NcKQJ4BYi_mG3Ow@mail.gmail.com>
 <CAHG9fPkSKi=aQR4g_=z7i0H76N8HqUnAk5chhHMOMRJSLcLVkA@mail.gmail.com>
Message-ID: <10480F09-7B27-4F72-A69B-A7A3B59A9464@gmail.com>

Rather than a proj string, it would be better to use WKT2 or PROJJSON. You should use projinfo to generate the output srs. 

 

Mike

 

 

-- 

Michael Smith

US Army Corps / Remote Sensing GIS Center

 

 

 

From: pdal <pdal-bounces at lists.osgeo.org> on behalf of Jeff Bourdier <jeffbourdier at gmail.com>
Date: Friday, April 28, 2023 at 3:24 PM
To: pdal <pdal at lists.osgeo.org>
Subject: Re: [pdal] proper syntax for applying a geoid in newer versions

 

Instead of "+init=EPSG:32611" or "+proj=utm +zone=11 +type=crs", you might try the fully expanded PROJ string:

 

+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs

 

So your pipeline would be:

 

{"pipeline": [{"type" : "readers.las",

                  "filename": "input_Ellipsoidal.laz"},

                 {"type":"filters.reprojection",

                  "in_srs":"EPSG:32611",

                  "out_srs":"+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs +geoidgrids=g2003conus.gtx"},

                 {"type" : "writers.las",

                  "filename": "output_Geoid.laz",

                  "compression": "laszip",

                  "a_srs": "EPSG:32611+5703"

                 }]}

 

 

On Fri, Apr 28, 2023 at 10:09?AM Matt Beckley <matt.beckley at earthscope.org> wrote:

Hello,

 

In older versions of PDAL I used to be able to run a pipeline like:

 

{"pipeline": [{"type" : "readers.las",

                  "filename": "input_Ellipsoidal.laz"},

                 {"type":"filters.reprojection",

                  "in_srs":"EPSG:32611",

                  "out_srs":"+init=EPSG:32611 +geoidgrids=g2003conus.gtx"},

                 {"type" : "writers.las",

                  "filename": "output_Geoid.laz",

                  "compression": "laszip",

                  "a_srs": "EPSG:32611+5703"

                 }]}

 

This would run fine, and the output would have the geoid properly applied.

 

However, newer versions of PDAL (e.g. 2.5.3) uses newer version of PROJ, which no longer likes its string in the form, "+init=epsg:XXXX".  It will give the warning:

"Warning 1: +init=epsg:XXXX syntax is deprecated. It might return a CRS with a non-EPSG compliant axis order." 

 

I adjusted the PROJ string to remove this convention:

 

{"pipeline": [{"type" : "readers.las",

                  "filename": "input_Ellipsoidal.laz"},

                 {"type":"filters.reprojection",

                  "in_srs":"EPSG:32611",

                  "out_srs":"+proj=utm +zone=11 +type=crs +geoidgrids=g2003conus.gtx"},

                 {"type" : "writers.las",

                  "filename": "output_Geoid.laz",

                  "compression": "laszip",

                  "a_srs": "EPSG:32611+5703"

                 }]}

 

This runs without warning or errors, but the output grid does not have the geoid applied.  Most of the documentation on this type of operation I've seen still refers to the older PROJ syntax of, "+init=epsg:XXXX".

 

Is there a way to apply a geoid with the new PROJ syntax, and hopefully I am just missing something with the proper syntax to do this operation on the newer versions of PDAL?

 

Thanks!

_______________________________________________
pdal mailing list
pdal at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/pdal

_______________________________________________ pdal mailing list pdal at lists.osgeo.org https://lists.osgeo.org/mailman/listinfo/pdal 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20230428/537a9de2/attachment-0001.htm>

