From laasunde at hotmail.com  Tue Jul  3 04:21:43 2018
From: laasunde at hotmail.com (Lars)
Date: Tue, 3 Jul 2018 11:21:43 +0000
Subject: [pdal] Writer.GDAL create or expand
Message-ID: <HE1PR03MB133887CE14B6F57D3094DD18CA420@HE1PR03MB1338.eurprd03.prod.outlook.com>

Hello folks,

We have setup a pipeline with text reader, chipper and gdal writer. The text file contains XYZ data and roughly 5 million points. Running the pipeline produces a number of files where the files size and coverage area is increasing. The first tiff file is 71 kb, the second is 217 kb, the 20th is 1,8 MB, the 100th is 6,7 MB, the 600th is 47 MB etc.

We expected this pipeline to produce similar size tiff files. We have tried using a different reader but get the same output. From our point of view is appears to be an issue with the GDAL writer.

Taking a look at the source code it appears the GDALWriter::readyFile method uses the "bounds" parameter validity to decide whether to create a new grid or not. I am not sure a not specified "bounds" parameter is valid. This is just an observation.

The pipeline is attached.

Using PDAL 1.7.1 on Windows 10
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180703/d7dacf7d/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pipeline.json
Type: application/json
Size: 349 bytes
Desc: pipeline.json
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180703/d7dacf7d/attachment.json>

From howard at hobu.co  Tue Jul  3 07:23:01 2018
From: howard at hobu.co (Howard Butler)
Date: Tue, 3 Jul 2018 09:23:01 -0500
Subject: [pdal] Writer.GDAL create or expand
In-Reply-To: <HE1PR03MB133887CE14B6F57D3094DD18CA420@HE1PR03MB1338.eurprd03.prod.outlook.com>
References: <HE1PR03MB133887CE14B6F57D3094DD18CA420@HE1PR03MB1338.eurprd03.prod.outlook.com>
Message-ID: <5dc2b646-3fca-3994-0fd3-f601d8f3a480@hobu.co>

Lars,


Can you file a bug with this?


Thanks so much,


Howard


On 7/3/18 6:21 AM, Lars wrote:
> Hello folks,
>
> We have setup a pipeline with text reader, chipper and gdal writer. The text file contains XYZ data and roughly 5 million points. Running the pipeline produces a number of files where the files size and coverage area is increasing. The first tiff file is 71 kb, the second is 217 kb, the 20th is 1,8 MB, the 100th is 6,7 MB, the 600th is 47 MB etc.
>
> We expected this pipeline to produce similar size tiff files. We have tried using a different reader but get the same output. From our point of view is appears to be an issue with the GDAL writer.
>
> Taking a look at the source code it appears the GDALWriter::readyFile method uses the "bounds" parameter validity to decide whether to create a new grid or not. I am not sure a not specified "bounds" parameter is valid. This is just an observation.
>
> The pipeline is attached.
>
> Using PDAL 1.7.1 on Windows 10
>
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180703/f536494f/attachment.sig>

From laasunde at hotmail.com  Tue Jul  3 10:53:50 2018
From: laasunde at hotmail.com (Lars)
Date: Tue, 3 Jul 2018 17:53:50 +0000
Subject: [pdal] Writer.GDAL create or expand
In-Reply-To: <5dc2b646-3fca-3994-0fd3-f601d8f3a480@hobu.co>
References: <HE1PR03MB133887CE14B6F57D3094DD18CA420@HE1PR03MB1338.eurprd03.prod.outlook.com>,
 <5dc2b646-3fca-3994-0fd3-f601d8f3a480@hobu.co>
Message-ID: <HE1PR03MB13388A6E218A62C12C3EABA1CA420@HE1PR03MB1338.eurprd03.prod.outlook.com>

Wanted to check this was an issue prior to creating a ticket.

Ticket now created;
https://github.com/PDAL/PDAL/issues/2074



________________________________
Fra: pdal <pdal-bounces at lists.osgeo.org> p√• vegne av Howard Butler <howard at hobu.co>
Sendt: tirsdag 3. juli 2018 16.23
Til: pdal at lists.osgeo.org
Emne: Re: [pdal] Writer.GDAL create or expand

Lars,


Can you file a bug with this?


Thanks so much,


Howard


On 7/3/18 6:21 AM, Lars wrote:
> Hello folks,
>
> We have setup a pipeline with text reader, chipper and gdal writer. The text file contains XYZ data and roughly 5 million points. Running the pipeline produces a number of files where the files size and coverage area is increasing. The first tiff file is 71 kb, the second is 217 kb, the 20th is 1,8 MB, the 100th is 6,7 MB, the 600th is 47 MB etc.
>
> We expected this pipeline to produce similar size tiff files. We have tried using a different reader but get the same output. From our point of view is appears to be an issue with the GDAL writer.
>
> Taking a look at the source code it appears the GDALWriter::readyFile method uses the "bounds" parameter validity to decide whether to create a new grid or not. I am not sure a not specified "bounds" parameter is valid. This is just an observation.
>
> The pipeline is attached.
>
> Using PDAL 1.7.1 on Windows 10
>
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180703/5d0890c3/attachment.html>

From laasunde at hotmail.com  Fri Jul  6 04:33:27 2018
From: laasunde at hotmail.com (Lars)
Date: Fri, 6 Jul 2018 11:33:27 +0000
Subject: [pdal] Pgpointcloud writer SRID
Message-ID: <HE1PR03MB1338EF719ABE65D1CBC22392CA470@HE1PR03MB1338.eurprd03.prod.outlook.com>

Hello,

We used a pipeline (see attched file) to read a laz file and write it to pgpointcloud. The pipeline was able to write data to database but we notice the SRID was incorrect. Turns out the laz was using UTM Zone and pgpointcloud used 4326 (the default). By adding a reprojection filter to the pipeline we were able to fix the issue.

We mistakenly thought that pgpointcloud would "reproject" the input data to srid 4326 but it makes sense the this task belongs in a filter.

It is unfortunte that PDAL allowed us to create what I consider is invalid data which could have been prevented. The "srid" parameter used in the pipeline appears to be a string with sole purpose of being added to the pointcloud_formats table. In pgpointcloud witer, would it be possible to use input-srid (in_srs) as default if available instead of always using 4326? Another option could be to give the user a warning if input-srs does not match the "srid" specified for pgpointcloud writer.

It might be worth adding more information about pgpointcloud writer "srid" to the documentation to help others.

Kind regards, Lars

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180706/daa44d2a/attachment.html>

From andrew.bell.ia at gmail.com  Fri Jul  6 07:06:24 2018
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Fri, 6 Jul 2018 10:06:24 -0400
Subject: [pdal] Pgpointcloud writer SRID
In-Reply-To: <HE1PR03MB1338EF719ABE65D1CBC22392CA470@HE1PR03MB1338.eurprd03.prod.outlook.com>
References: <HE1PR03MB1338EF719ABE65D1CBC22392CA470@HE1PR03MB1338.eurprd03.prod.outlook.com>
Message-ID: <CACJ51z3+NZfGZTirN8WAxowzWExE640F7+cEt30XsMQHhrAV9Q@mail.gmail.com>

There is no attached file, so it's hard to see what the issue might be.
Please just reply with the pipeline in question.

Thanks,

On Fri, Jul 6, 2018 at 7:33 AM, Lars <laasunde at hotmail.com> wrote:

> Hello,
>
> We used a pipeline (see attched file) to read a laz file and write it to
> pgpointcloud. The pipeline was able to write data to database but we notice
> the SRID was incorrect. Turns out the laz was using UTM Zone and
> pgpointcloud used 4326 (the default). By adding a reprojection filter to
> the pipeline we were able to fix the issue.
>
> We mistakenly thought that pgpointcloud would "reproject" the input data
> to srid 4326 but it makes sense the this task belongs in a filter.
>
> It is unfortunte that PDAL allowed us to create what I consider is invalid
> data which could have been prevented. The "srid" parameter used in the
> pipeline appears to be a string with sole purpose of being added to the
> pointcloud_formats table. In pgpointcloud witer, would it be possible to
> use input-srid (in_srs) as default if available instead of always using
> 4326? Another option could be to give the user a warning if input-srs does
> not match the "srid" specified for pgpointcloud writer.
>
> It might be worth adding more information about pgpointcloud writer "srid"
> to the documentation to help others.
>
> Kind regards, Lars
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180706/5fba6d0e/attachment.html>

From daniel at georepublic.de  Mon Jul  9 16:45:05 2018
From: daniel at georepublic.de (Daniel Kastl)
Date: Tue, 10 Jul 2018 08:45:05 +0900
Subject: [pdal] =?utf-8?q?=28no_subject=29?=
Message-ID: <CABXBSH8La8gAU1tepvDmP826i8JWYPB7cUb3nKyPxPqYx25_Ow@mail.gmail.com>

Hi Connor (or Howard),

We found, that in the EPT format you switched from a list of oct-tree
numbers to to a depth-x-y-z format:
https://github.com/connormanning/ept#hierarchy

I would be interested to know about the reason for this change (advantages
of the new hierarchy/disadvantages of the previous one). I'm not against
the change, just curious to learn about the reasons.

Best regards,
Daniel




-- 
Georepublic UG & Georepublic Japan
eMail: daniel.kastl at georepublic.de
Web: https://georepublic.info
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180710/e4ba6e2b/attachment.html>

From connor at hobu.co  Tue Jul 10 08:02:49 2018
From: connor at hobu.co (Connor Manning)
Date: Tue, 10 Jul 2018 10:02:49 -0500
Subject: [pdal] (no subject)
In-Reply-To: <CABXBSH8La8gAU1tepvDmP826i8JWYPB7cUb3nKyPxPqYx25_Ow@mail.gmail.com>
References: <CABXBSH8La8gAU1tepvDmP826i8JWYPB7cUb3nKyPxPqYx25_Ow@mail.gmail.com>
Message-ID: <CAO=FyjL5XdkVLELv5ffgrV9nV3yN3KEUyGT3Yri+s--rWo+LLg@mail.gmail.com>

This choice was made because to access the new static EPT format, you must
use DXYZ keying to read the data files.  Therefore it seemed fitting to
match the hierarchy notation to the data storage notation.  Also, with the
new data keying format being a slippy-map tiling, it seemed sensible to
avoid mixing it with the old octree-node relative addressing.

Comments/criticisms on the format in general are welcome - and feel free to
submit issues on that `ept` repository in that regard.

Cheers,
Connor

On Mon, Jul 9, 2018 at 6:45 PM Daniel Kastl <daniel at georepublic.de> wrote:

> Hi Connor (or Howard),
>
> We found, that in the EPT format you switched from a list of oct-tree
> numbers to to a depth-x-y-z format:
> https://github.com/connormanning/ept#hierarchy
>
> I would be interested to know about the reason for this change (advantages
> of the new hierarchy/disadvantages of the previous one). I'm not against
> the change, just curious to learn about the reasons.
>
> Best regards,
> Daniel
>
>
>
>
> --
> Georepublic UG & Georepublic Japan
> eMail: daniel.kastl at georepublic.de
> Web: https://georepublic.info
>
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180710/6362ec77/attachment.html>

From laasunde at hotmail.com  Tue Jul 10 23:39:07 2018
From: laasunde at hotmail.com (Lars)
Date: Wed, 11 Jul 2018 06:39:07 +0000
Subject: [pdal] Pgpointcloud writer SRID
In-Reply-To: <CACJ51z3+NZfGZTirN8WAxowzWExE640F7+cEt30XsMQHhrAV9Q@mail.gmail.com>
References: <HE1PR03MB1338EF719ABE65D1CBC22392CA470@HE1PR03MB1338.eurprd03.prod.outlook.com>,
 <CACJ51z3+NZfGZTirN8WAxowzWExE640F7+cEt30XsMQHhrAV9Q@mail.gmail.com>
Message-ID: <HE1PR03MB1338E8CCA6B3B3880E573B03CA5A0@HE1PR03MB1338.eurprd03.prod.outlook.com>

{
  "pipeline": [
    {
      "type": "readers.las",
      "filename": "c:\\tmp\input.laz"
    },
    {
      "type":"filters.chipper",
      "capacity":5000
    },
    {
      "type": "writers.pgpointcloud",
      "connection": "host=...",
      "table": "test_1",
      "compression":"none",
      "output_dims":"X,Y,Z"
    }
  ]
}


________________________________
Fra: Andrew Bell <andrew.bell.ia at gmail.com>
Sendt: fredag 6. juli 2018 16.06
Til: Lars
Kopi: pdal at lists.osgeo.org
Emne: Re: [pdal] Pgpointcloud writer SRID

There is no attached file, so it's hard to see what the issue might be.  Please just reply with the pipeline in question.

Thanks,

On Fri, Jul 6, 2018 at 7:33 AM, Lars <laasunde at hotmail.com<mailto:laasunde at hotmail.com>> wrote:
Hello,

We used a pipeline (see attched file) to read a laz file and write it to pgpointcloud. The pipeline was able to write data to database but we notice the SRID was incorrect. Turns out the laz was using UTM Zone and pgpointcloud used 4326 (the default). By adding a reprojection filter to the pipeline we were able to fix the issue.

We mistakenly thought that pgpointcloud would "reproject" the input data to srid 4326 but it makes sense the this task belongs in a filter.

It is unfortunte that PDAL allowed us to create what I consider is invalid data which could have been prevented. The "srid" parameter used in the pipeline appears to be a string with sole purpose of being added to the pointcloud_formats table. In pgpointcloud witer, would it be possible to use input-srid (in_srs) as default if available instead of always using 4326? Another option could be to give the user a warning if input-srs does not match the "srid" specified for pgpointcloud writer.

It might be worth adding more information about pgpointcloud writer "srid" to the documentation to help others.

Kind regards, Lars


_______________________________________________
pdal mailing list
pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/pdal



--
Andrew Bell
andrew.bell.ia at gmail.com<mailto:andrew.bell.ia at gmail.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180711/f280b741/attachment.html>

From howard at hobu.co  Wed Jul 11 06:24:44 2018
From: howard at hobu.co (Howard Butler)
Date: Wed, 11 Jul 2018 08:24:44 -0500
Subject: [pdal] Pgpointcloud writer SRID
In-Reply-To: <HE1PR03MB1338E8CCA6B3B3880E573B03CA5A0@HE1PR03MB1338.eurprd03.prod.outlook.com>
References: <HE1PR03MB1338EF719ABE65D1CBC22392CA470@HE1PR03MB1338.eurprd03.prod.outlook.com>
 <CACJ51z3+NZfGZTirN8WAxowzWExE640F7+cEt30XsMQHhrAV9Q@mail.gmail.com>
 <HE1PR03MB1338E8CCA6B3B3880E573B03CA5A0@HE1PR03MB1338.eurprd03.prod.outlook.com>
Message-ID: <1a9c0c84-646c-cb1a-846a-dee7b3ed4eb8@hobu.co>



On 7/11/18 1:39 AM, Lars wrote:
> We used a pipeline (see attched file) to read a laz file and write it to pgpointcloud. The pipeline was able to write data to database but we notice the SRID was incorrect. Turns out the laz was using UTM Zone and pgpointcloud used 4326 (the default). By adding a reprojection filter to the pipeline we were able to fix the issue.

PDAL refuses the temptation to guess. It is very difficult to detect
that two coordinate systems are "different", and automatically infer
your intention, even in this scenario.

> We mistakenly thought that pgpointcloud would "reproject" the input data to srid 4326 but it makes sense the this task belongs in a filter.
>
> It is unfortunte that PDAL allowed us to create what I consider is invalid data which could have been prevented. The "srid" parameter used in the pipeline appears to be a string with sole purpose of being added to the pointcloud_formats table. In pgpointcloud witer, would it be possible to use input-srid (in_srs) as default if available instead of always using 4326? Another option could be to give the user a warning if input-srs does not match the "srid" specified for pgpointcloud writer.

Deconstructing a coordinate system defined by WKT or GeoTIFF keys to a
single authoritative EPSG code is a task that is rarely successful in an
automated fashion. We are unable to take the SRS and assign a single
value for the "srid" to the output data. Again, we refuse the temptation
to guess, and that is why there's a parameter on the writer for users to
assign what they need.¬† Maybe some more docs related to the topic would
help, but this is a challenge for all of PDAL's writers, not just
pgpointcloud.

> It might be worth adding more information about pgpointcloud writer "srid" to the documentation to help others.

We would be happy to merge a patch that added such experience and
documentation. Please file a ticket with language you think would be
most helpful.

Howard


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180711/db82f65d/attachment.sig>

