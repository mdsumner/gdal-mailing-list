From howard at hobu.co  Tue Sep  4 09:33:40 2018
From: howard at hobu.co (Howard Butler)
Date: Tue, 4 Sep 2018 11:33:40 -0500
Subject: [pdal] OGC Point Cloud Survey
Message-ID: <3959FC6A-464F-4478-9583-1A4C333F3FA1@hobu.co>

All,

As part of my support of ongoing OGC Testbed-14 activities, I have iterated another version of the Point Cloud Survey that OGC first released in 2016. This version repeats some questions from that version, and it includes some more focused on web services, formats, and compression. If you could take a few moments to fill it in, we would greatly appreciate your input.

https://goo.gl/VpsGxp <https://goo.gl/VpsGxp>

Pertinent details:

* Survey closes 15 SEP 2018
* Results will be released as part of OGC Testbed-14 Point Cloud Engineering Report
* Valid email addresses requested, but they will not be released, spammed, or used.

Thanks.

Howard Butler

OGC Testbed-14 Point Cloud Engineering Report Editor
ASPRS LAS Committee Member
PDAL https://pdal.io <https://pdal.io/> Development Lead
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180904/424ddf48/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180904/424ddf48/attachment.sig>

From l.ulferts at hs-osnabrueck.de  Wed Sep  5 06:34:44 2018
From: l.ulferts at hs-osnabrueck.de (Lothar Ulferts)
Date: Wed, 5 Sep 2018 15:34:44 +0200
Subject: [pdal] pdal.pipeline.array to 2D np.ndarray
Message-ID: <9e146b33-b160-c0b7-dd35-31e2c346c977@hs-osnabrueck.de>

Hy,

I want to transform the points of multiple LAS files from cartesian 
coordinates to polar coordinates. The transformation is done with numpy 
in a two-dimensional /numpy.ndarray/.

But how do I get a 2D numpy.ndarray from the data of the PDAL pipeline 
(in the PDAL Python example the /pipeline.arrays/ )? From the PDAL 
Python example I changed the JSON expression:

pipe_reader = """
{
   "pipeline":[
     {
       "type":"readers.las",
       "filename":"%s"
     }
   ]
}
}"""%lasinput

/pipeline.arrays/ does not return an array, but a /list/ containing a 
one-dimensional /numpy.ndarray/. Each row of this array is a 
/numpy.void/ with the values of a point. My current solution is a 
listcomprehension:

arr_voids = arrays[0]
points = np.array([list(i) for i in arr_voids], dtype= arr_voids.dtype)

This way is too slow, too memory intensive  and not a "numpyical-way". 
But how do I get there with numpy or pdal? Perhaps I‘ve already chosen 
the wrong approach?

Thanks!
Lothar
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180905/a1512cde/attachment.html>

From laasunde at hotmail.com  Mon Sep 10 00:47:46 2018
From: laasunde at hotmail.com (Lars)
Date: Mon, 10 Sep 2018 07:47:46 +0000
Subject: [pdal] Python and chipper filter
Message-ID: <HE1PR03MB133843C1FDFE06309E9F88B2CA050@HE1PR03MB1338.eurprd03.prod.outlook.com>

Hello,

We have created a pipeline with a python script but are seeing some unexpected behaviour. The python script currently does nothing to exclude the script as culprit.

Running the script with 10k count and pipeline is completed in less than a seconds. Increasing to 50k count and it takes to 2 seconds but increasing to 80k count suddenly it takes 150 seconds!!! Attempting to use 90k count and after 25 minutes it is still not finished (pdal is constantly using 12,5% --> one core).

If we changed the order of the filters (python first and then chipper), then 10k count took less then a second and 100k takes 4 seconds.

If we remove the python filter then 10k count took less then a second and 100k takes 4 seconds.

This appears to be related to the python filter.

Why is the the attached pipeline so slow? Is this a software issue or poorly designed pipeline?

Using PDAL 1.7.2 on Windows 10.

kind regards, Lars
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180910/2cc40ac1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: my_script.py
Type: application/octet-stream
Size: 62 bytes
Desc: my_script.py
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180910/2cc40ac1/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: pipeline.json
Type: application/json
Size: 538 bytes
Desc: pipeline.json
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180910/2cc40ac1/attachment.json>

From adam.d.steer at gmail.com  Mon Sep 10 03:45:59 2018
From: adam.d.steer at gmail.com (adam steer)
Date: Mon, 10 Sep 2018 20:45:59 +1000
Subject: [pdal] Python and chipper filter
In-Reply-To: <HE1PR03MB133843C1FDFE06309E9F88B2CA050@HE1PR03MB1338.eurprd03.prod.outlook.com>
References: <HE1PR03MB133843C1FDFE06309E9F88B2CA050@HE1PR03MB1338.eurprd03.prod.outlook.com>
Message-ID: <CAFORoygb_r5doK_6gBC_TfXmXx2Bn853-xMpz3gAqCSrb+mVrw@mail.gmail.com>

Hi Lars

I can’t comment on why your pipeline is slow, but reading the function name
of your python script, and picking up on your comment about the python
filter, you can achieve (maybe) same result (inverting the Z axis) using:

{
"type":"filters.transformation",
"matrix": "1 0 0 0 0 1 0 0 0 0 -1 0 0 0 0 1"
},

…without going to Python. It’s pretty fast, I did a bunch of processing on
the GA MH370 survey with it (4 billion points, very similar - read ASCII,
reproject, clean, invert Z, assign all points to ground, write out as LAZ
in my case, but could have been pgpointcloud).

So - you could try that and avoid Python in this case.

Also - Intuitively, I’d do the inversion of the Z coordinate before
chipping.

Finally, I wonder if there’s a way to test how fast things can be stuffed
into your database - to see whether the bottleneck is PDAL or writing to
the DB.

Hope that helps, sorry I haven’t directly answered your question, and I’d
love to hear anyone else’s thoughts on PDAL processing speed and the python
filter.

Adam





On Mon, 10 Sep 2018 at 17:47, Lars <laasunde at hotmail.com> wrote:

>
> This appears to be related to the python filter.
>
> Why is the the attached pipeline so slow? Is this a software issue or
> poorly designed pipeline?
>
> --
Adam Steer
https://www.researchgate.net/profile/Adam_Steer
http://au.linkedin.com/in/adamsteer
http://orcid.org/0000-0003-0046-7236
+61 427 091 712
skype: adam.d.steer
tweet: @adamdsteer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180910/bc37b5ea/attachment.html>

From andrew.bell.ia at gmail.com  Wed Sep 12 06:41:10 2018
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 12 Sep 2018 09:41:10 -0400
Subject: [pdal] Python and chipper filter
In-Reply-To: <HE1PR03MB133843C1FDFE06309E9F88B2CA050@HE1PR03MB1338.eurprd03.prod.outlook.com>
References: <HE1PR03MB133843C1FDFE06309E9F88B2CA050@HE1PR03MB1338.eurprd03.prod.outlook.com>
Message-ID: <CACJ51z3=wdAD8wjDhgO24_7-Cn8b4JrNKQbbQgz1Vh=W+_u7Hw@mail.gmail.com>

The chipper filter creates sets of points for each tile.  These sets
(called point views) pass through the pipeline individually and are
processed separately by each downstream filter.  In your case, the chipper
should create two or three point views (since the count limit on the points
is 10,000 and the capacity limit on the chipper is 5000 points).  This
essentially means that the python filter gets invoked two (or three)
times.  When you reverse the order of the python filter and the chipper,
the python filter is only invoked once, since at that point in the
processing, only one point view exists.

All that said, the differences you're seeing seem extreme and I think it
would take more investigation to figure out the root cause of the timing
differences.

On Mon, Sep 10, 2018 at 3:47 AM Lars <laasunde at hotmail.com> wrote:

> Hello,
>
> We have created a pipeline with a python script but are seeing some
> unexpected behaviour. The python script currently does nothing to exclude
> the script as culprit.
>
> Running the script with 10k count and pipeline is completed in less than a
> seconds. Increasing to 50k count and it takes to 2 seconds but increasing
> to 80k count suddenly it takes 150 seconds!!! Attempting to use 90k count
> and after 25 minutes it is still not finished (pdal is constantly using
> 12,5% --> one core).
>
> If we changed the order of the filters (python first and then chipper),
> then 10k count took less then a second and 100k takes 4 seconds.
>
> If we remove the python filter then 10k count took less then a second and
> 100k takes 4 seconds.
>
> This appears to be related to the python filter.
>
> Why is the the attached pipeline so slow? Is this a software issue or
> poorly designed pipeline?
>
> Using PDAL 1.7.2 on Windows 10.
>
> kind regards, Lars
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180912/c019098d/attachment.html>

From metazool at fastmail.net  Wed Sep 12 08:16:11 2018
From: metazool at fastmail.net (Jo Walsh)
Date: Wed, 12 Sep 2018 16:16:11 +0100
Subject: [pdal] Point cloud generalisation and feature extraction
Message-ID: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>

Good evening PDAL list,

I've been at a seminar focusing on machine learning applications for palaeontology, thinking of PDAL and not quite sure why. Various folks here have very high resolution laser or LED scans of very small objects and are interested in doing 3D model classification. 

Is there a moral equivalent of GDAL's Polygonize function in PDAL or a Douglas-Peucker like algorithm for point cloud simplification? Is anyone on this list looking at this sort of problem domain? Am I talking out my hat?

Cheers,


Jo
-- 
  Jo Walsh
  metazool at fastmail.net

From doug_newcomb at fws.gov  Wed Sep 12 08:35:30 2018
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Wed, 12 Sep 2018 11:35:30 -0400
Subject: [pdal] [EXTERNAL] Point cloud generalisation and feature
	extraction
In-Reply-To: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>
References: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>
Message-ID: <CALQGVr1r2yWLOCU5z0yYMMOLz6jLWDTKP+8zAdgTx4vX9NxhiQ@mail.gmail.com>

Jo,
Not sure about pdal, but you might want to contact Vaclav Petras about
v.decimate in GRASS, https://grass.osgeo.org/grass74/manuals/v.decimate.html

https://grasswiki.osgeo.org/wiki/Processing_lidar_and_UAV_point_clouds_in_GRASS_GIS_(workshop_at_FOSS4G_Boston_2017)

Doug

On Wed, Sep 12, 2018 at 11:16 AM Jo Walsh <metazool at fastmail.net> wrote:

> Good evening PDAL list,
>
> I've been at a seminar focusing on machine learning applications for
> palaeontology, thinking of PDAL and not quite sure why. Various folks here
> have very high resolution laser or LED scans of very small objects and are
> interested in doing 3D model classification.
>
> Is there a moral equivalent of GDAL's Polygonize function in PDAL or a
> Douglas-Peucker like algorithm for point cloud simplification? Is anyone on
> this list looking at this sort of problem domain? Am I talking out my hat?
>
> Cheers,
>
>
> Jo
> --
>   Jo Walsh
>   metazool at fastmail.net
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Doug Newcomb - Cartographer
USFWS
551F Pylon Dr
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov
---------------------------------------------------------------------------------------------------------

*NOTE: This email correspondence and any attachments to and from this
sender is subject to the Freedom of Information Act (FOIA) and may be
disclosed to third parties.*​
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180912/dfbc3173/attachment.html>

From andrew.bell.ia at gmail.com  Wed Sep 12 08:38:47 2018
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 12 Sep 2018 11:38:47 -0400
Subject: [pdal] Point cloud generalisation and feature extraction
In-Reply-To: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>
References: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>
Message-ID: <CACJ51z3+4wM1mYZGzeb88r35ukySo557pRY=VLzGX6d8ScSXxQ@mail.gmail.com>

Hi Jo,

There are quite a few algorithms implemented in PDAL to do data reduction
and feature extraction -- it really depends on your needs and the details
of your data.  Take a look at the filters listed here:
https://pdal.io/stages/filters.html#create

On Wed, Sep 12, 2018 at 11:16 AM Jo Walsh <metazool at fastmail.net> wrote:

> Good evening PDAL list,
>
> I've been at a seminar focusing on machine learning applications for
> palaeontology, thinking of PDAL and not quite sure why. Various folks here
> have very high resolution laser or LED scans of very small objects and are
> interested in doing 3D model classification.
>
> Is there a moral equivalent of GDAL's Polygonize function in PDAL or a
> Douglas-Peucker like algorithm for point cloud simplification? Is anyone on
> this list looking at this sort of problem domain? Am I talking out my hat?
>
> Cheers,
>
>
> Jo
> --
>   Jo Walsh
>   metazool at fastmail.net
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180912/b194b55b/attachment.html>

From andrew.bell.ia at gmail.com  Wed Sep 12 08:40:11 2018
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 12 Sep 2018 11:40:11 -0400
Subject: [pdal] Point cloud generalisation and feature extraction
In-Reply-To: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>
References: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>
Message-ID: <CACJ51z2VbYnFK0oKhfgbKuT6gAHDei1roQegoRKT4bwETAU0dA@mail.gmail.com>

Should have also mentioned these filters which are designed for data
reduction: https://pdal.io/stages/filters.html#cull

On Wed, Sep 12, 2018 at 11:16 AM Jo Walsh <metazool at fastmail.net> wrote:

> Good evening PDAL list,
>
> I've been at a seminar focusing on machine learning applications for
> palaeontology, thinking of PDAL and not quite sure why. Various folks here
> have very high resolution laser or LED scans of very small objects and are
> interested in doing 3D model classification.
>
> Is there a moral equivalent of GDAL's Polygonize function in PDAL or a
> Douglas-Peucker like algorithm for point cloud simplification? Is anyone on
> this list looking at this sort of problem domain? Am I talking out my hat?
>
> Cheers,
>
>
> Jo
> --
>   Jo Walsh
>   metazool at fastmail.net
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180912/779c9902/attachment-0001.html>

From howard at hobu.co  Wed Sep 12 08:45:41 2018
From: howard at hobu.co (Howard Butler)
Date: Wed, 12 Sep 2018 10:45:41 -0500
Subject: [pdal] Point cloud generalisation and feature extraction
In-Reply-To: <CACJ51z2VbYnFK0oKhfgbKuT6gAHDei1roQegoRKT4bwETAU0dA@mail.gmail.com>
References: <1536765371.1875743.1505693824.533AA998@webmail.messagingengine.com>
 <CACJ51z2VbYnFK0oKhfgbKuT6gAHDei1roQegoRKT4bwETAU0dA@mail.gmail.com>
Message-ID: <B80968A8-97EC-487A-9053-2F3829EA23C9@hobu.co>

Jo,


I would say there probably isn't, as the problem is very loosely defined. Both of your examples leak too, but not so bad that people can't come up with a 'good enough' solution that most people are satisfied with.

What do you mean by simplification? Do you mean decimated points (TIN-style, grid-style, others)? Do you mean simplified by having 'similar' points be segmented together?  Do you mean transformed into 3D surfaces with volumes or edges? Andrew gave pointers to all of the possibilities.

You'll need to be more explicit about what you mean by 'simplified' :)

Howard

PS. Sorry to have missed you in Madison, Wisconsin! Next time you are in the neighborhood, plan to stop by.

> On Sep 12, 2018, at 10:40 AM, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
> 
> Should have also mentioned these filters which are designed for data reduction: https://pdal.io/stages/filters.html#cull <https://pdal.io/stages/filters.html#cull>
> On Wed, Sep 12, 2018 at 11:16 AM Jo Walsh <metazool at fastmail.net <mailto:metazool at fastmail.net>> wrote:
> Good evening PDAL list,
> 
> I've been at a seminar focusing on machine learning applications for palaeontology, thinking of PDAL and not quite sure why. Various folks here have very high resolution laser or LED scans of very small objects and are interested in doing 3D model classification.
> 
> Is there a moral equivalent of GDAL's Polygonize function in PDAL or a Douglas-Peucker like algorithm for point cloud simplification? Is anyone on this list looking at this sort of problem domain? Am I talking out my hat?


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180912/2e9dece1/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: Message signed with OpenPGP
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180912/2e9dece1/attachment.sig>

From laasunde at hotmail.com  Sun Sep 16 23:32:59 2018
From: laasunde at hotmail.com (Lars)
Date: Mon, 17 Sep 2018 06:32:59 +0000
Subject: [pdal] Python and chipper filter
In-Reply-To: <CAFORoygb_r5doK_6gBC_TfXmXx2Bn853-xMpz3gAqCSrb+mVrw@mail.gmail.com>
References: <HE1PR03MB133843C1FDFE06309E9F88B2CA050@HE1PR03MB1338.eurprd03.prod.outlook.com>,
 <CAFORoygb_r5doK_6gBC_TfXmXx2Bn853-xMpz3gAqCSrb+mVrw@mail.gmail.com>
Message-ID: <HE1PR03MB13381ADE2C2486081F572BA9CA1E0@HE1PR03MB1338.eurprd03.prod.outlook.com>

Hi Adam,

Thanks for a very good suggestion. Will consider changing 😊

A quick comparison showed that they (python and transformation) needed roughly the same time to complete the pipeline.

Regards, Lars

________________________________
Fra: adam steer <adam.d.steer at gmail.com>
Sendt: mandag 10. september 2018 12.45
Til: Lars
Kopi: pdal
Emne: Re: [pdal] Python and chipper filter

Hi Lars

I can’t comment on why your pipeline is slow, but reading the function name of your python script, and picking up on your comment about the python filter, you can achieve (maybe) same result (inverting the Z axis) using:

{
"type":"filters.transformation",
"matrix": "1 0 0 0 0 1 0 0 0 0 -1 0 0 0 0 1"
},

…without going to Python. It’s pretty fast, I did a bunch of processing on the GA MH370 survey with it (4 billion points, very similar - read ASCII, reproject, clean, invert Z, assign all points to ground, write out as LAZ in my case, but could have been pgpointcloud).

So - you could try that and avoid Python in this case.

Also - Intuitively, I’d do the inversion of the Z coordinate before chipping.

Finally, I wonder if there’s a way to test how fast things can be stuffed into your database - to see whether the bottleneck is PDAL or writing to the DB.

Hope that helps, sorry I haven’t directly answered your question, and I’d love to hear anyone else’s thoughts on PDAL processing speed and the python filter.

Adam





On Mon, 10 Sep 2018 at 17:47, Lars <laasunde at hotmail.com<mailto:laasunde at hotmail.com>> wrote:

This appears to be related to the python filter.

Why is the the attached pipeline so slow? Is this a software issue or poorly designed pipeline?

--
Adam Steer
https://www.researchgate.net/profile/Adam_Steer
http://au.linkedin.com/in/adamsteer
http://orcid.org/0000-0003-0046-7236
+61 427 091 712
skype: adam.d.steer
tweet: @adamdsteer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180917/9edc27f9/attachment.html>

From laasunde at hotmail.com  Sun Sep 16 23:39:02 2018
From: laasunde at hotmail.com (Lars)
Date: Mon, 17 Sep 2018 06:39:02 +0000
Subject: [pdal] Python and chipper filter
In-Reply-To: <CACJ51z3=wdAD8wjDhgO24_7-Cn8b4JrNKQbbQgz1Vh=W+_u7Hw@mail.gmail.com>
References: <HE1PR03MB133843C1FDFE06309E9F88B2CA050@HE1PR03MB1338.eurprd03.prod.outlook.com>,
 <CACJ51z3=wdAD8wjDhgO24_7-Cn8b4JrNKQbbQgz1Vh=W+_u7Hw@mail.gmail.com>
Message-ID: <HE1PR03MB1338B0F60ABC7414569D0ABACA1E0@HE1PR03MB1338.eurprd03.prod.outlook.com>

Andrew,

Appreciate the explanation.

It would be useful to understand why this issue occurred. Does appear to be reproducible 😊

Regards, Lars

________________________________
Fra: Andrew Bell <andrew.bell.ia at gmail.com>
Sendt: onsdag 12. september 2018 15.41
Til: Lars
Kopi: pdal at lists.osgeo.org
Emne: Re: [pdal] Python and chipper filter

The chipper filter creates sets of points for each tile.  These sets (called point views) pass through the pipeline individually and are processed separately by each downstream filter.  In your case, the chipper should create two or three point views (since the count limit on the points is 10,000 and the capacity limit on the chipper is 5000 points).  This essentially means that the python filter gets invoked two (or three) times.  When you reverse the order of the python filter and the chipper, the python filter is only invoked once, since at that point in the processing, only one point view exists.

All that said, the differences you're seeing seem extreme and I think it would take more investigation to figure out the root cause of the timing differences.

On Mon, Sep 10, 2018 at 3:47 AM Lars <laasunde at hotmail.com<mailto:laasunde at hotmail.com>> wrote:
Hello,

We have created a pipeline with a python script but are seeing some unexpected behaviour. The python script currently does nothing to exclude the script as culprit.

Running the script with 10k count and pipeline is completed in less than a seconds. Increasing to 50k count and it takes to 2 seconds but increasing to 80k count suddenly it takes 150 seconds!!! Attempting to use 90k count and after 25 minutes it is still not finished (pdal is constantly using 12,5% --> one core).

If we changed the order of the filters (python first and then chipper), then 10k count took less then a second and 100k takes 4 seconds.

If we remove the python filter then 10k count took less then a second and 100k takes 4 seconds.

This appears to be related to the python filter.

Why is the the attached pipeline so slow? Is this a software issue or poorly designed pipeline?

Using PDAL 1.7.2 on Windows 10.

kind regards, Lars
_______________________________________________
pdal mailing list
pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/pdal


--
Andrew Bell
andrew.bell.ia at gmail.com<mailto:andrew.bell.ia at gmail.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180917/dfd5d0ef/attachment-0001.html>

From beckley at unavco.org  Mon Sep 24 11:24:52 2018
From: beckley at unavco.org (Matt Beckley)
Date: Mon, 24 Sep 2018 12:24:52 -0600
Subject: [pdal] translating coordinated
Message-ID: <CACrek766fAHS_WHr7v5RKAiaSAmWAz46nnY-XvCCD=RWQeHQjg@mail.gmail.com>

Hello,

I have a las file that I am trying to work with using PDAL.  I am able to
georeference the file using lastools with the "reoffset" and
"translate_xyz" parameters:

las2las.exe -i input.laz -reoffset 357200 4742000 2150 -translate_xyz
357200 4742000 2150 -o output.laz

However, when I try to do this with PDAL, it doesn't seem to work.  I've
tried variants on a pipeline of:

{
            "type" : "writers.las",
            "offset_x":"357200",
            "offset_y":"4742000",
            "offset_z":"2150",
    "scale_x":"0.001",
    "scale_y":"0.001",
    "scale_z":"0.001"
}

But the coordinates are never properly translated.  I've tried playing with
the scale, but nothing works.  There doesn't seem to be a way to add a
fixed offset to the coordinates?

The file is in UTM 33N coordinates, so a valid coordinate would be
357200,4742000 - for example.   I tried a scale of 1, but that also didn't
work.

Any ideas would be appreciated.

Thanks!
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180924/833dc7d8/attachment.html>

From andrew.bell.ia at gmail.com  Mon Sep 24 11:31:11 2018
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 24 Sep 2018 14:31:11 -0400
Subject: [pdal] translating coordinated
In-Reply-To: <CACrek766fAHS_WHr7v5RKAiaSAmWAz46nnY-XvCCD=RWQeHQjg@mail.gmail.com>
References: <CACrek766fAHS_WHr7v5RKAiaSAmWAz46nnY-XvCCD=RWQeHQjg@mail.gmail.com>
Message-ID: <CACJ51z0zoqTA0KABO-NnefEq0rGkiNSOpRTXwnyBzg9tyTd+AQ@mail.gmail.com>

On Mon, Sep 24, 2018 at 2:25 PM Matt Beckley <beckley at unavco.org> wrote:

> Hello,
>
> I have a las file that I am trying to work with using PDAL.  I am able to
> georeference the file using lastools with the "reoffset" and
> "translate_xyz" parameters:
>
> las2las.exe -i input.laz -reoffset 357200 4742000 2150 -translate_xyz
> 357200 4742000 2150 -o output.laz
>
> However, when I try to do this with PDAL, it doesn't seem to work.  I've
> tried variants on a pipeline of:
>
> {
>             "type" : "writers.las",
>             "offset_x":"357200",
>             "offset_y":"4742000",
>             "offset_z":"2150",
>     "scale_x":"0.001",
>     "scale_y":"0.001",
>     "scale_z":"0.001"
> }
>
> But the coordinates are never properly translated.  I've tried playing
> with the scale, but nothing works.  There doesn't seem to be a way to add a
> fixed offset to the coordinates?
>
> The file is in UTM 33N coordinates, so a valid coordinate would be
> 357200,4742000 - for example.   I tried a scale of 1, but that also didn't
> work.
>

Hi Matt,

You need to read the PDAL documentation.  PDAL isn't lastools.

You'll need to put a reprojection filter in between the reader and the LAS
writer order to facilitate reprojection.  See:

https://pdal.io/stages/filters.reprojection.html

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180924/f09ad9d9/attachment.html>

From andrew.bell.ia at gmail.com  Mon Sep 24 11:43:23 2018
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 24 Sep 2018 14:43:23 -0400
Subject: [pdal] translating coordinated
In-Reply-To: <CACJ51z0zoqTA0KABO-NnefEq0rGkiNSOpRTXwnyBzg9tyTd+AQ@mail.gmail.com>
References: <CACrek766fAHS_WHr7v5RKAiaSAmWAz46nnY-XvCCD=RWQeHQjg@mail.gmail.com>
 <CACJ51z0zoqTA0KABO-NnefEq0rGkiNSOpRTXwnyBzg9tyTd+AQ@mail.gmail.com>
Message-ID: <CACJ51z37_XKGOQ3V=SJqiDO_bPTEuqCJ0ZgYEZM2awxkS07nuw@mail.gmail.com>

Hi Matt,

Perhaps I didn't understand what you were trying to do.  If you're trying
to translate coordinates, you can use

https://pdal.io/stages/filters.transformation.html

Here's a wiki reference that might also help:
https://en.wikipedia.org/wiki/Translation_(geometry)



On Mon, Sep 24, 2018 at 2:31 PM Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

> On Mon, Sep 24, 2018 at 2:25 PM Matt Beckley <beckley at unavco.org> wrote:
>
>> Hello,
>>
>> I have a las file that I am trying to work with using PDAL.  I am able to
>> georeference the file using lastools with the "reoffset" and
>> "translate_xyz" parameters:
>>
>> las2las.exe -i input.laz -reoffset 357200 4742000 2150 -translate_xyz
>> 357200 4742000 2150 -o output.laz
>>
>> However, when I try to do this with PDAL, it doesn't seem to work.  I've
>> tried variants on a pipeline of:
>>
>> {
>>             "type" : "writers.las",
>>             "offset_x":"357200",
>>             "offset_y":"4742000",
>>             "offset_z":"2150",
>>     "scale_x":"0.001",
>>     "scale_y":"0.001",
>>     "scale_z":"0.001"
>> }
>>
>> But the coordinates are never properly translated.  I've tried playing
>> with the scale, but nothing works.  There doesn't seem to be a way to add a
>> fixed offset to the coordinates?
>>
>> The file is in UTM 33N coordinates, so a valid coordinate would be
>> 357200,4742000 - for example.   I tried a scale of 1, but that also didn't
>> work.
>>
>
> Hi Matt,
>
> You need to read the PDAL documentation.  PDAL isn't lastools.
>
> You'll need to put a reprojection filter in between the reader and the LAS
> writer order to facilitate reprojection.  See:
>
> https://pdal.io/stages/filters.reprojection.html
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180924/29e5b58d/attachment.html>

From howard at hobu.co  Mon Sep 24 11:53:33 2018
From: howard at hobu.co (Howard Butler)
Date: Mon, 24 Sep 2018 13:53:33 -0500
Subject: [pdal] translating coordinated
In-Reply-To: <CACrek766fAHS_WHr7v5RKAiaSAmWAz46nnY-XvCCD=RWQeHQjg@mail.gmail.com>
References: <CACrek766fAHS_WHr7v5RKAiaSAmWAz46nnY-XvCCD=RWQeHQjg@mail.gmail.com>
Message-ID: <4232b829-c870-1c51-f7e5-1c8935a34f69@hobu.co>



On 9/24/18 1:24 PM, Matt Beckley wrote:
> However, when I try to do this with PDAL, it doesn't seem to work.  I've
> tried variants on a pipeline of:
>
> {
>             "type" : "writers.las",
>             "offset_x":"357200",
>             "offset_y":"4742000",
>             "offset_z":"2150",
>     "scale_x":"0.001",
>     "scale_y":"0.001",
>     "scale_z":"0.001"
> }
>
> But the coordinates are never properly translated.  I've tried playing with
> the scale, but nothing works.  There doesn't seem to be a way to add a
> fixed offset to the coordinates?
Are you using 'pdal translate' or 'pdal pipeline' here? 'pdal translate'
is going to ignore any reader and writer options in the pipeline and
take those from your command line.


The following pipeline works for me (the offset/scale on my new foo.las
file matches my options) by issuing 'pdal pipeline offset.json':

> {
>   "pipeline":[
>       "test/data/autzen/autzen.las",
>       {
>             "type" : "writers.las",
>             "offset_x":"357200",
>             "offset_y":"4742000",
>             "offset_z":"2150",
>     "scale_x":"0.1",
>     "scale_y":"0.1",
>     "scale_z":"0.1",
>     "filename":"foo.las"
> }
>   ]
> }


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 528 bytes
Desc: OpenPGP digital signature
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20180924/3f349188/attachment.sig>

