From andreas at yank.to  Wed Apr  7 12:34:35 2021
From: andreas at yank.to (Andreas Yankopolus)
Date: Wed, 7 Apr 2021 15:34:35 -0400
Subject: [pdal] Writing multi-band rasters
Message-ID: <424E1FCC-EE7C-4E19-87D4-5E6E73FF3400@yank.to>

Is it possible to write multiple dimensions to a raster such as a GeoTIFF? For example: Z, Classification, Intensity, Red, Green, and Blue.

If not, is there a different format (IMG, etc.) that supports doing so?

Thanks,

Andreas

From doug_newcomb at fws.gov  Wed Apr  7 12:53:46 2021
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Wed, 7 Apr 2021 19:53:46 +0000
Subject: [pdal] [EXTERNAL]  Writing multi-band rasters
In-Reply-To: <424E1FCC-EE7C-4E19-87D4-5E6E73FF3400@yank.to>
References: <424E1FCC-EE7C-4E19-87D4-5E6E73FF3400@yank.to>
Message-ID: <BLAPR09MB67869EFF85B1725E87BCFECDF1759@BLAPR09MB6786.namprd09.prod.outlook.com>

Andreas,
Geotiff supports multiple bands.  If your workflow is set up to generate a single band at a time, you can use gdalbuildvrt https://gdal.org/programs/gdalbuildvrt.html to make a virtual multiband raster of the individual bands , then gdal_translate , https://gdal.org/programs/gdal_translate.html#gdal-translate to convert your virtual multiband raster into a multiband geotiff.
This would be the brute force wayt of doing things, it could be made more elegant using python.

Doug
________________________________
From: pdal <pdal-bounces at lists.osgeo.org> on behalf of Andreas Yankopolus <andreas at yank.to>
Sent: Wednesday, April 7, 2021 3:34 PM
To: pdal at lists.osgeo.org <pdal at lists.osgeo.org>
Subject: [EXTERNAL] [pdal] Writing multi-band rasters



 This email has been received from outside of DOI - Use caution before clicking on links, opening attachments, or responding.



Is it possible to write multiple dimensions to a raster such as a GeoTIFF? For example: Z, Classification, Intensity, Red, Green, and Blue.

If not, is there a different format (IMG, etc.) that supports doing so?

Thanks,

Andreas
_______________________________________________
pdal mailing list
pdal at lists.osgeo.org
https://gcc02.safelinks.protection.outlook.com/?url=https%3A%2F%2Flists.osgeo.org%2Fmailman%2Flistinfo%2Fpdal&amp;data=04%7C01%7Cdoug_newcomb%40fws.gov%7Ce0576150eda641b64a0e08d8f9fdf663%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637534216444777765%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&amp;sdata=fybmqp9RrDkTjpYdjORTles%2BWeV%2FzOlOVD1527aSmL4%3D&amp;reserved=0
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210407/c94d5b05/attachment.html>

From andreas at yank.to  Wed Apr  7 13:10:51 2021
From: andreas at yank.to (Andreas Yankopolus)
Date: Wed, 7 Apr 2021 16:10:51 -0400
Subject: [pdal] Writing multi-band rasters
In-Reply-To: <BLAPR09MB67869EFF85B1725E87BCFECDF1759@BLAPR09MB6786.namprd09.prod.outlook.com>
References: <424E1FCC-EE7C-4E19-87D4-5E6E73FF3400@yank.to>
 <BLAPR09MB67869EFF85B1725E87BCFECDF1759@BLAPR09MB6786.namprd09.prod.outlook.com>
Message-ID: <CC8C7F34-8BEB-480C-9CD7-1B8F7F8AC234@yank.to>

Doug,

> Geotiff supports multiple bands. If your workflow is set up to generate a single band at a time, you can use gdalbuildvrt https://gdal.org/programs/gdalbuildvrt.html <https://gdal.org/programs/gdalbuildvrt.html> to make a virtual multiband raster of the individual bands , then gdal_translate , https://gdal.org/programs/gdal_translate.html#gdal-translate <https://gdal.org/programs/gdal_translate.html#gdal-translate> to convert your virtual multiband raster into a multiband geotiff.

I?m seeing that I could create one PDAL pipeline per dimension, so that if the target GeoTIFF had six dimensions, I?d have six JSON files writing six GeoTIFFs, then use GDAL to perform the merge and output a six-band GeoTIFF.

Is there a more elegant way to do this in PDAL, creating a single pipeline that processes six dimensions of data and writes it to a multi-band raster? My end goal is converting LAS files into rasters with separate bands for terrain height, surface height, and surface characteristics (ground, foliage, structure, etc).

I can get around well in GDAL, particularly the C++ API, but am new to PDAL Hence I don?t have a good sense on how it?s typically employed for more complex processing tasks.

Thanks,

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210407/2e234e94/attachment.html>

From andrew.bell.ia at gmail.com  Wed Apr  7 13:50:59 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 7 Apr 2021 16:50:59 -0400
Subject: [pdal] Writing multi-band rasters
In-Reply-To: <424E1FCC-EE7C-4E19-87D4-5E6E73FF3400@yank.to>
References: <424E1FCC-EE7C-4E19-87D4-5E6E73FF3400@yank.to>
Message-ID: <CACJ51z2gLx0E7cOLxQZcM5e7rX2b-f8u07MVo9CzNY06uoVe4w@mail.gmail.com>

On Wed, Apr 7, 2021 at 3:46 PM Andreas Yankopolus <andreas at yank.to> wrote:

> Is it possible to write multiple dimensions to a raster such as a GeoTIFF?
> For example: Z, Classification, Intensity, Red, Green, and Blue.
>

PDAL doesn't support this, but you can chain writers to get separate
rasters. I assume GDAL has some VRT magic to merge the separate tiffs into
a multi-band:

[
    "/pdal/test/data/las/autzen_trim.las",
    {
        "type":"writers.gdal",
        "dimension": "Red",
        "filename": "red.tif",
        "output_type": "idw",
        "resolution": 100
    },
    {
        "type":"writers.gdal",
        "dimension": "Green",
        "filename": "green.tif",
        "output_type": "idw",
        "resolution": 100
    }
]

--
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210407/453f46ca/attachment-0001.html>

From andreas at yank.to  Wed Apr  7 14:04:00 2021
From: andreas at yank.to (Andreas Yankopolus)
Date: Wed, 7 Apr 2021 17:04:00 -0400
Subject: [pdal] Writing multi-band rasters
In-Reply-To: <CACJ51z2gLx0E7cOLxQZcM5e7rX2b-f8u07MVo9CzNY06uoVe4w@mail.gmail.com>
References: <424E1FCC-EE7C-4E19-87D4-5E6E73FF3400@yank.to>
 <CACJ51z2gLx0E7cOLxQZcM5e7rX2b-f8u07MVo9CzNY06uoVe4w@mail.gmail.com>
Message-ID: <2408E91E-FFCC-4065-A972-4A7C75FB3205@yank.to>

Andrew,

> PDAL doesn't support this, but you can chain writers to get separate rasters. I assume GDAL has some VRT magic to merge the separate tiffs into a multi-band:

This is perfect. I can put the PDAL command inside a bash script that also calls GDAL to merge the scratch rasters into the multi-band final raster before cleaning them up.

Cheers,

Andreas

From njacadieux.gitlab at gmail.com  Wed Apr  7 18:51:30 2021
From: njacadieux.gitlab at gmail.com (Nicolas Cadieux)
Date: Wed, 7 Apr 2021 21:51:30 -0400
Subject: [pdal] Writing multi-band rasters
In-Reply-To: <2408E91E-FFCC-4065-A972-4A7C75FB3205@yank.to>
References: <2408E91E-FFCC-4065-A972-4A7C75FB3205@yank.to>
Message-ID: <6E546082-7627-472D-97B0-8281A84EA42B@gmail.com>

Hi,
You will find a Gdal example here. This script fuses a point cloud with hyperspectral data and vice versa. 

https://gitlab.com/njacadieux/3dcloud-hyperspectralfusion

Nicolas Cadieux
https://gitlab.com/njacadieux

> Le 7 avr. 2021 ? 17:04, Andreas Yankopolus <andreas at yank.to> a ?crit :
> 
> ?Andrew,
> 
>> PDAL doesn't support this, but you can chain writers to get separate rasters. I assume GDAL has some VRT magic to merge the separate tiffs into a multi-band:
> 
> This is perfect. I can put the PDAL command inside a bash script that also calls GDAL to merge the scratch rasters into the multi-band final raster before cleaning them up.
> 
> Cheers,
> 
> Andreas
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210407/9809e8fa/attachment.html>

From andreas at yank.to  Mon Apr 12 15:35:15 2021
From: andreas at yank.to (Andreas Yankopolus)
Date: Mon, 12 Apr 2021 18:35:15 -0400
Subject: [pdal] Specifying SRS of output GeoTIFF
Message-ID: <866BCA10-F235-40BE-8FE7-358DEE60031B@yank.to>

I?m trying to perform PDAL operations and write the resulting GeoTIFF in WGS84 (EPSG:4326

Using this sample data for example: http://fatra.cnr.ncsu.edu/foss4g2017/nc_tile_0793_016_spm.zip

This is my pipeline:

{
  "pipeline": [
    "nc_tile_0793_016_spm.las",
    {
      "type": "filters.range",
      "limits": "Classification[2:2]"
    },
    {
      "type": "filters.reprojection",
      "out_srs": "EPSG:4326"
    },
    {
      "type": "writers.gdal"
      "filename": "nc_ground.tiff",
      "gdaldriver": "GTiff",
      "dimension": "Z",
      "output_type": "idw",
      "resolution": "1.0",
    }
  ]
}

I don?t get a sensible TIFF with the reprojection filter in place. Without it, output is as expected in the point cloud?s SRS of ESPG:32119. Am I thinking about the reprojection filter incorrectly? Maybe it needs to be integrated into the writers.gdal block?

Thanks,

Andreas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210412/19e4247c/attachment.html>

From howard at hobu.co  Mon Apr 12 15:56:51 2021
From: howard at hobu.co (Howard Butler)
Date: Mon, 12 Apr 2021 17:56:51 -0500
Subject: [pdal] Specifying SRS of output GeoTIFF
In-Reply-To: <866BCA10-F235-40BE-8FE7-358DEE60031B@yank.to>
References: <866BCA10-F235-40BE-8FE7-358DEE60031B@yank.to>
Message-ID: <A98482BF-BCB4-4FDC-8302-B299E975DEEF@hobu.co>

The output units of the nc_ground.tiff 'resolution' parameter is now going to be in degrees. A value of '1.0' is probably not going to be what you want.

Write your raster in UTM and then use gdalwarp to put it into whatever coordinate system you want.

> On Apr 12, 2021, at 5:35 PM, Andreas Yankopolus <andreas at yank.to> wrote:
> 
> I?m trying to perform PDAL operations and write the resulting GeoTIFF in WGS84 (EPSG:4326
> 
> Using this sample data for example: http://fatra.cnr.ncsu.edu/foss4g2017/nc_tile_0793_016_spm.zip
> 
> This is my pipeline:
> 
> {
>   "pipeline": [
>     "nc_tile_0793_016_spm.las",
>     {
>       "type": "filters.range",
>       "limits": "Classification[2:2]"
>     },
>     {
>       "type": "filters.reprojection",
>       "out_srs": "EPSG:4326"
>     },
>     {
>       "type": "writers.gdal"
>       "filename": "nc_ground.tiff",
>       "gdaldriver": "GTiff",
>       "dimension": "Z",
>       "output_type": "idw",
>       "resolution": "1.0",
>     }
>   ]
> }
> 
> I don?t get a sensible TIFF with the reprojection filter in place. Without it, output is as expected in the point cloud?s SRS of ESPG:32119. Am I thinking about the reprojection filter incorrectly? Maybe it needs to be integrated into the writers.gdal block?
> 
> Thanks,
> 
> Andreas
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal


From andreas at yank.to  Mon Apr 12 16:13:57 2021
From: andreas at yank.to (Andreas Yankopolus)
Date: Mon, 12 Apr 2021 19:13:57 -0400
Subject: [pdal] Specifying SRS of output GeoTIFF
In-Reply-To: <A98482BF-BCB4-4FDC-8302-B299E975DEEF@hobu.co>
References: <866BCA10-F235-40BE-8FE7-358DEE60031B@yank.to>
 <A98482BF-BCB4-4FDC-8302-B299E975DEEF@hobu.co>
Message-ID: <4C60A2D2-78BD-42DA-9362-C836F8B0B949@yank.to>

Howard,

> The output units of the nc_ground.tiff 'resolution' parameter is now going to be in degrees. A value of '1.0' is probably not going to be what you want.

This explains everything about how the resulting file looked. Thanks!

Cheers,

Andreas




From kirk.waters at noaa.gov  Wed Apr 14 04:48:22 2021
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Wed, 14 Apr 2021 07:48:22 -0400
Subject: [pdal] Entwine build failure
Message-ID: <CADm=QrQH2pZnyQ5XbuEhnpyX3-+fyzs+0njb_N-_GExhQu3PvQ@mail.gmail.com>

While I've been able to build most of my datasets with Entwine, I've run
into issues with one in particular. I don't know if it's related to the
number of input files, the geographic extent, or just the total volume.
After making it through 80% of the files, it starts getting an exception
that it can't open a file for output. This is after running for 128 hours
with 10 threads. The logs look like this where things start to go bad:

Adding 31830 -
/san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166500e_3749500n.laz
        Done 31828
Adding 31831 -
/san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166000e_3749000n.laz
128:20:20 - 80% - 201,421,974,813 - 1,569(1,131)M/h - 216W - 46R - 396A
128:20:30 - 80% - 201,426,046,237 - 1,569(1,465)M/h - 0W - 87R - 605A
128:20:40 - 80% - 201,430,682,909 - 1,569(1,669)M/h - 30W - 43R - 700A
Exception in pool task: writers.las: Couldn't open file
'/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21598-65505.laz' for
output.
Exception in pool task: writers.las: Couldn't open file
'/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24379-21589-65505.laz' for
output.
Exception in pool task: writers.las: Couldn't open file
'/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21597-65505.laz' for
output.

After that, it's all exceptions and exit with a -9 return code. It might be
an issue of the output directory size. The ept-data directory has a size of
over 335Mb and contains over 4 million files. It's possible that it's
taking so long to work with that directory that something times out.
Another possibility is that I'm running out of inodes on the output drive
(that directory is taking over 20% of the total inodes possible on the
drive). There's definitely space on the drive. This may not be an issue for
the software to solve. Is there a troubleshooting guide somewhere that I
missed?

Kirk Waters, PhD, BJCP          | NOAA Office for Coastal Management
Applied Sciences Program      | 2234 South Hobson Ave
843-740-1227 (empty office)   | Charleston, SC 29405
843-324-2203 (cell during COVID)
coast.noaa.gov/digitalcoast
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210414/82af7a6b/attachment.html>

From doug_newcomb at fws.gov  Wed Apr 14 05:16:11 2021
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Wed, 14 Apr 2021 12:16:11 +0000
Subject: [pdal] [EXTERNAL]  Entwine build failure
In-Reply-To: <CADm=QrQH2pZnyQ5XbuEhnpyX3-+fyzs+0njb_N-_GExhQu3PvQ@mail.gmail.com>
References: <CADm=QrQH2pZnyQ5XbuEhnpyX3-+fyzs+0njb_N-_GExhQu3PvQ@mail.gmail.com>
Message-ID: <BLAPR09MB6786F9B4E5D4AAEC0C6726F4F14E9@BLAPR09MB6786.namprd09.prod.outlook.com>

Kirk,
Ran across this. Assuming you are using a linux box to store.
https://www.ctrl.blog/entry/how-to-all-out-of-inodes.html#:~:text=That%20default%20depends%20on%20your,16%20KiB%20of%20disk%20space.&text=If%20you've%20a%20small,3%20million%20files%20and%20directories.

Doug
________________________________
From: pdal <pdal-bounces at lists.osgeo.org> on behalf of Kirk Waters - NOAA Federal <kirk.waters at noaa.gov>
Sent: Wednesday, April 14, 2021 7:48 AM
To: pdal <pdal at lists.osgeo.org>
Subject: [EXTERNAL] [pdal] Entwine build failure




 This email has been received from outside of DOI - Use caution before clicking on links, opening attachments, or responding.



While I've been able to build most of my datasets with Entwine, I've run into issues with one in particular. I don't know if it's related to the number of input files, the geographic extent, or just the total volume. After making it through 80% of the files, it starts getting an exception that it can't open a file for output. This is after running for 128 hours with 10 threads. The logs look like this where things start to go bad:

Adding 31830 - /san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166500e_3749500n.laz
        Done 31828
Adding 31831 - /san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166000e_3749000n.laz
128:20:20 - 80% - 201,421,974,813 - 1,569(1,131)M/h - 216W - 46R - 396A
128:20:30 - 80% - 201,426,046,237 - 1,569(1,465)M/h - 0W - 87R - 605A
128:20:40 - 80% - 201,430,682,909 - 1,569(1,669)M/h - 30W - 43R - 700A
Exception in pool task: writers.las: Couldn't open file '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21598-65505.laz' for output.
Exception in pool task: writers.las: Couldn't open file '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24379-21589-65505.laz' for output.
Exception in pool task: writers.las: Couldn't open file '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21597-65505.laz' for output.

After that, it's all exceptions and exit with a -9 return code. It might be an issue of the output directory size. The ept-data directory has a size of over 335Mb and contains over 4 million files. It's possible that it's taking so long to work with that directory that something times out. Another possibility is that I'm running out of inodes on the output drive (that directory is taking over 20% of the total inodes possible on the drive). There's definitely space on the drive. This may not be an issue for the software to solve. Is there a troubleshooting guide somewhere that I missed?

Kirk Waters, PhD, BJCP          | NOAA Office for Coastal Management
Applied Sciences Program      | 2234 South Hobson Ave
843-740-1227 (empty office)   | Charleston, SC 29405
843-324-2203 (cell during COVID)
coast.noaa.gov/digitalcoast<https://gcc02.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcoast.noaa.gov%2Fdigitalcoast&data=04%7C01%7Cdoug_newcomb%40fws.gov%7C6ad450199b9c44e2df5908d8ff3d4b89%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637539986664301396%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&sdata=4EJy6GLJWxgnVTw4dXqqAOneTShNQaPzwRV5I7VTVFw%3D&reserved=0>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210414/1c4f6373/attachment.html>

From kirk.waters at noaa.gov  Wed Apr 14 06:04:21 2021
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Wed, 14 Apr 2021 09:04:21 -0400
Subject: [pdal] [EXTERNAL]  Entwine build failure
In-Reply-To: <BLAPR09MB6786F9B4E5D4AAEC0C6726F4F14E9@BLAPR09MB6786.namprd09.prod.outlook.com>
References: <CADm=QrQH2pZnyQ5XbuEhnpyX3-+fyzs+0njb_N-_GExhQu3PvQ@mail.gmail.com>
 <BLAPR09MB6786F9B4E5D4AAEC0C6726F4F14E9@BLAPR09MB6786.namprd09.prod.outlook.com>
Message-ID: <CADm=QrT3kwj4cOoRnmo5ZeP-NuE8QcLbA3abiNF8gwQ4zuqySw@mail.gmail.com>

Doug,
Linux box is doing the writing. Output disk in a storage area network
device, so all I get for disk type is nfs. The inode limit is 21 million
and I suspect a significant portion of that is already taken up with the
more permanent disk contents.

Kirk


On Wed, Apr 14, 2021 at 8:16 AM Newcomb, Doug <doug_newcomb at fws.gov> wrote:

> Kirk,
> Ran across this. Assuming you are using a linux box to store.
>
> https://www.ctrl.blog/entry/how-to-all-out-of-inodes.html#:~:text=That%20default%20depends%20on%20your,16%20KiB%20of%20disk%20space.&text=If%20you've%20a%20small,3%20million%20files%20and%20directories.
>
> Doug
> ------------------------------
> *From:* pdal <pdal-bounces at lists.osgeo.org> on behalf of Kirk Waters -
> NOAA Federal <kirk.waters at noaa.gov>
> *Sent:* Wednesday, April 14, 2021 7:48 AM
> *To:* pdal <pdal at lists.osgeo.org>
> *Subject:* [EXTERNAL] [pdal] Entwine build failure
>
>
>
>
> * This email has been received from outside of DOI - Use caution before
> clicking on links, opening attachments, or responding.  *
>
>
>
> While I've been able to build most of my datasets with Entwine, I've run
> into issues with one in particular. I don't know if it's related to the
> number of input files, the geographic extent, or just the total volume.
> After making it through 80% of the files, it starts getting an exception
> that it can't open a file for output. This is after running for 128 hours
> with 10 threads. The logs look like this where things start to go bad:
>
> Adding 31830 -
> /san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166500e_3749500n.laz
>         Done 31828
> Adding 31831 -
> /san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166000e_3749000n.laz
> 128:20:20 - 80% - 201,421,974,813 - 1,569(1,131)M/h - 216W - 46R - 396A
> 128:20:30 - 80% - 201,426,046,237 - 1,569(1,465)M/h - 0W - 87R - 605A
> 128:20:40 - 80% - 201,430,682,909 - 1,569(1,669)M/h - 30W - 43R - 700A
> Exception in pool task: writers.las: Couldn't open file
> '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21598-65505.laz' for
> output.
> Exception in pool task: writers.las: Couldn't open file
> '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24379-21589-65505.laz' for
> output.
> Exception in pool task: writers.las: Couldn't open file
> '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21597-65505.laz' for
> output.
>
> After that, it's all exceptions and exit with a -9 return code. It might
> be an issue of the output directory size. The ept-data directory has a size
> of over 335Mb and contains over 4 million files. It's possible that it's
> taking so long to work with that directory that something times out.
> Another possibility is that I'm running out of inodes on the output drive
> (that directory is taking over 20% of the total inodes possible on the
> drive). There's definitely space on the drive. This may not be an issue for
> the software to solve. Is there a troubleshooting guide somewhere that I
> missed?
>
> Kirk Waters, PhD, BJCP          | NOAA Office for Coastal Management
> Applied Sciences Program      | 2234 South Hobson Ave
> 843-740-1227 (empty office)   | Charleston, SC 29405
> 843-324-2203 (cell during COVID)
> coast.noaa.gov/digitalcoast
> <https://gcc02.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcoast.noaa.gov%2Fdigitalcoast&data=04%7C01%7Cdoug_newcomb%40fws.gov%7C6ad450199b9c44e2df5908d8ff3d4b89%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637539986664301396%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&sdata=4EJy6GLJWxgnVTw4dXqqAOneTShNQaPzwRV5I7VTVFw%3D&reserved=0>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210414/c97c6460/attachment-0001.html>

From runette at gmail.com  Mon Apr 26 01:16:20 2021
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Apr 2021 09:16:20 +0100
Subject: [pdal] Delaunay triangulation and python
Message-ID: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>

Ok

So I know that I can get a Delaunay triangulation from a ground mesh and
save that as a .PLY. I have been using that with great success for some
time.

What I have not worked out is how to get the faces into python directly. If
you execute the pipeline, you get back a Pointview with the vertices but I
cannot work out how to get to the faces.

Is this possible? Does anyone know how?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210426/a25fdba7/attachment.html>

From andrew.bell.ia at gmail.com  Mon Apr 26 04:00:10 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 26 Apr 2021 07:00:10 -0400
Subject: [pdal] Delaunay triangulation and python
In-Reply-To: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
References: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
Message-ID: <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>

On Mon, Apr 26, 2021 at 4:16 AM Paul Harwood <runette at gmail.com> wrote:

> Ok
>
> So I know that I can get a Delaunay triangulation from a ground mesh and
> save that as a .PLY. I have been using that with great success for some
> time.
>
> What I have not worked out is how to get the faces into python directly.
> If you execute the pipeline, you get back a Pointview with the vertices but
> I cannot work out how to get to the faces.
>
> Is this possible? Does anyone know how?
>

This is not currently part of the Python interface.

--
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210426/bd6185e0/attachment.html>

From kirk.waters at noaa.gov  Mon Apr 26 04:33:15 2021
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Mon, 26 Apr 2021 07:33:15 -0400
Subject: [pdal] [EXTERNAL]  Entwine build failure
In-Reply-To: <CADm=QrT3kwj4cOoRnmo5ZeP-NuE8QcLbA3abiNF8gwQ4zuqySw@mail.gmail.com>
References: <CADm=QrQH2pZnyQ5XbuEhnpyX3-+fyzs+0njb_N-_GExhQu3PvQ@mail.gmail.com>
 <BLAPR09MB6786F9B4E5D4AAEC0C6726F4F14E9@BLAPR09MB6786.namprd09.prod.outlook.com>
 <CADm=QrT3kwj4cOoRnmo5ZeP-NuE8QcLbA3abiNF8gwQ4zuqySw@mail.gmail.com>
Message-ID: <CADm=QrQrbELAW-hPgmbqx74bO3sfO2KG98zuQKjcGkikmd6D3w@mail.gmail.com>

Dear PDAL,
Are there any suggestions regarding what I might check or alternative
approaches? I tried building the EPT set again and it again died at 80%
done. This time it was outputting to a different disk and definitely did
not run out of inodes. Same errors that look like: Exception in pool task:
writers.las: Couldn't open file
'/san1/lidar4_p/entwine/geoid18/4800/ept-data/16-24448-21619-65505.laz' for
output. The input dataset has over 40K files. The docs for entwine build
suggest that hierarchyStep might be useful, but also says it shouldn't be
necessary. Would subset be a useful option? It's a little unclear how to
make that work.

Kirk


On Wed, Apr 14, 2021 at 9:04 AM Kirk Waters - NOAA Federal <
kirk.waters at noaa.gov> wrote:

> Doug,
> Linux box is doing the writing. Output disk in a storage area network
> device, so all I get for disk type is nfs. The inode limit is 21 million
> and I suspect a significant portion of that is already taken up with the
> more permanent disk contents.
>
> Kirk
>
>
> On Wed, Apr 14, 2021 at 8:16 AM Newcomb, Doug <doug_newcomb at fws.gov>
> wrote:
>
>> Kirk,
>> Ran across this. Assuming you are using a linux box to store.
>>
>> https://www.ctrl.blog/entry/how-to-all-out-of-inodes.html#:~:text=That%20default%20depends%20on%20your,16%20KiB%20of%20disk%20space.&text=If%20you've%20a%20small,3%20million%20files%20and%20directories.
>>
>> Doug
>> ------------------------------
>> *From:* pdal <pdal-bounces at lists.osgeo.org> on behalf of Kirk Waters -
>> NOAA Federal <kirk.waters at noaa.gov>
>> *Sent:* Wednesday, April 14, 2021 7:48 AM
>> *To:* pdal <pdal at lists.osgeo.org>
>> *Subject:* [EXTERNAL] [pdal] Entwine build failure
>>
>>
>>
>>
>> * This email has been received from outside of DOI - Use caution before
>> clicking on links, opening attachments, or responding.  *
>>
>>
>>
>> While I've been able to build most of my datasets with Entwine, I've run
>> into issues with one in particular. I don't know if it's related to the
>> number of input files, the geographic extent, or just the total volume.
>> After making it through 80% of the files, it starts getting an exception
>> that it can't open a file for output. This is after running for 128 hours
>> with 10 threads. The logs look like this where things start to go bad:
>>
>> Adding 31830 -
>> /san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166500e_3749500n.laz
>>         Done 31828
>> Adding 31831 -
>> /san1/reef/lidar4_z/geoid18/data/4800/Block_010/20140122_166000e_3749000n.laz
>> 128:20:20 - 80% - 201,421,974,813 - 1,569(1,131)M/h - 216W - 46R - 396A
>> 128:20:30 - 80% - 201,426,046,237 - 1,569(1,465)M/h - 0W - 87R - 605A
>> 128:20:40 - 80% - 201,430,682,909 - 1,569(1,669)M/h - 30W - 43R - 700A
>> Exception in pool task: writers.las: Couldn't open file
>> '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21598-65505.laz' for
>> output.
>> Exception in pool task: writers.las: Couldn't open file
>> '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24379-21589-65505.laz' for
>> output.
>> Exception in pool task: writers.las: Couldn't open file
>> '/san1/dem1_z/entwine/geoid18/4800/ept-data/16-24378-21597-65505.laz' for
>> output.
>>
>> After that, it's all exceptions and exit with a -9 return code. It might
>> be an issue of the output directory size. The ept-data directory has a size
>> of over 335Mb and contains over 4 million files. It's possible that it's
>> taking so long to work with that directory that something times out.
>> Another possibility is that I'm running out of inodes on the output drive
>> (that directory is taking over 20% of the total inodes possible on the
>> drive). There's definitely space on the drive. This may not be an issue for
>> the software to solve. Is there a troubleshooting guide somewhere that I
>> missed?
>>
>> Kirk Waters, PhD, BJCP          | NOAA Office for Coastal Management
>> Applied Sciences Program      | 2234 South Hobson Ave
>> 843-740-1227 (empty office)   | Charleston, SC 29405
>> 843-324-2203 (cell during COVID)
>> coast.noaa.gov/digitalcoast
>> <https://gcc02.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcoast.noaa.gov%2Fdigitalcoast&data=04%7C01%7Cdoug_newcomb%40fws.gov%7C6ad450199b9c44e2df5908d8ff3d4b89%7C0693b5ba4b184d7b9341f32f400a5494%7C0%7C0%7C637539986664301396%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C2000&sdata=4EJy6GLJWxgnVTw4dXqqAOneTShNQaPzwRV5I7VTVFw%3D&reserved=0>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210426/ec5b8957/attachment.html>

From runette at gmail.com  Mon Apr 26 05:21:10 2021
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Apr 2021 13:21:10 +0100
Subject: [pdal] Delaunay triangulation and python
In-Reply-To: <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>
References: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
 <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>
Message-ID: <CAE8nN5PsW0X9hFXFqsH4_qrk7dmNTZ_Wxfi2iV6-PKztdi70Gg@mail.gmail.com>

That is a shame.

Do you know what would be required? If it is not too complicated - I might
give it a go.

On Mon, 26 Apr 2021 at 12:00, Andrew Bell <andrew.bell.ia at gmail.com> wrote:

> On Mon, Apr 26, 2021 at 4:16 AM Paul Harwood <runette at gmail.com> wrote:
>
>> Ok
>>
>> So I know that I can get a Delaunay triangulation from a ground mesh and
>> save that as a .PLY. I have been using that with great success for some
>> time.
>>
>> What I have not worked out is how to get the faces into python directly.
>> If you execute the pipeline, you get back a Pointview with the vertices but
>> I cannot work out how to get to the faces.
>>
>> Is this possible? Does anyone know how?
>>
>
> This is not currently part of the Python interface.
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210426/21c7b811/attachment.html>

From howard at hobu.co  Mon Apr 26 05:40:06 2021
From: howard at hobu.co (Howard Butler)
Date: Mon, 26 Apr 2021 07:40:06 -0500
Subject: [pdal] Delaunay triangulation and python
In-Reply-To: <CAE8nN5PsW0X9hFXFqsH4_qrk7dmNTZ_Wxfi2iV6-PKztdi70Gg@mail.gmail.com>
References: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
 <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>
 <CAE8nN5PsW0X9hFXFqsH4_qrk7dmNTZ_Wxfi2iV6-PKztdi70Gg@mail.gmail.com>
Message-ID: <89816FC4-1F2A-4BC6-B430-E514EDE8A4FE@hobu.co>



> On Apr 26, 2021, at 7:21 AM, Paul Harwood <runette at gmail.com> wrote:
> 
> That is a shame.
> 
> Do you know what would be required? If it is not too complicated - I might give it a go.

* capture references or copies of the faces in the Python binding's getArrays method [1] 
* provide a method to Python to access them
* add Cython binding to use that method to reflect them as something useful in Python.

This would be a nice addition. I would also add that the Python bindings no longer release at PDAL's release cadence. It is quite simple to tick another release to PyPI once contributions like this one are incorporated.


[1] https://github.com/PDAL/python/blob/master/pdal/PyPipeline.cpp#L160


From runette at gmail.com  Mon Apr 26 06:02:53 2021
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Apr 2021 14:02:53 +0100
Subject: [pdal] Delaunay triangulation and python
In-Reply-To: <89816FC4-1F2A-4BC6-B430-E514EDE8A4FE@hobu.co>
References: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
 <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>
 <CAE8nN5PsW0X9hFXFqsH4_qrk7dmNTZ_Wxfi2iV6-PKztdi70Gg@mail.gmail.com>
 <89816FC4-1F2A-4BC6-B430-E514EDE8A4FE@hobu.co>
Message-ID: <CAE8nN5NOjMEwMOKVHwyLQ44Xk=CwJ33uFFpu7AzEONu1bBCfnA@mail.gmail.com>

Thanks Howard

One more question ... any pointers about to access the face data in the cpp
API?

On Mon, 26 Apr 2021 at 13:40, Howard Butler <howard at hobu.co> wrote:

>
>
> > On Apr 26, 2021, at 7:21 AM, Paul Harwood <runette at gmail.com> wrote:
> >
> > That is a shame.
> >
> > Do you know what would be required? If it is not too complicated - I
> might give it a go.
>
> * capture references or copies of the faces in the Python binding's
> getArrays method [1]
> * provide a method to Python to access them
> * add Cython binding to use that method to reflect them as something
> useful in Python.
>
> This would be a nice addition. I would also add that the Python bindings
> no longer release at PDAL's release cadence. It is quite simple to tick
> another release to PyPI once contributions like this one are incorporated.
>
>
> [1] https://github.com/PDAL/python/blob/master/pdal/PyPipeline.cpp#L160
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210426/60b6e160/attachment.html>

From andrew.bell.ia at gmail.com  Mon Apr 26 06:15:16 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 26 Apr 2021 09:15:16 -0400
Subject: [pdal] Delaunay triangulation and python
In-Reply-To: <CAE8nN5NOjMEwMOKVHwyLQ44Xk=CwJ33uFFpu7AzEONu1bBCfnA@mail.gmail.com>
References: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
 <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>
 <CAE8nN5PsW0X9hFXFqsH4_qrk7dmNTZ_Wxfi2iV6-PKztdi70Gg@mail.gmail.com>
 <89816FC4-1F2A-4BC6-B430-E514EDE8A4FE@hobu.co>
 <CAE8nN5NOjMEwMOKVHwyLQ44Xk=CwJ33uFFpu7AzEONu1bBCfnA@mail.gmail.com>
Message-ID: <CACJ51z2aW47KhB3KHamuPjCE=A_+=PQWjZ3NdXE6sWPm8-6ZKg@mail.gmail.com>

On Mon, Apr 26, 2021 at 9:03 AM Paul Harwood <runette at gmail.com> wrote:

> Thanks Howard
>
> One more question ... any pointers about to access the face data in the
> cpp API?
>

PointView::mesh()

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210426/a4918c93/attachment.html>

From runette at gmail.com  Mon Apr 26 06:24:02 2021
From: runette at gmail.com (Paul Harwood)
Date: Mon, 26 Apr 2021 14:24:02 +0100
Subject: [pdal] Delaunay triangulation and python
In-Reply-To: <CACJ51z2aW47KhB3KHamuPjCE=A_+=PQWjZ3NdXE6sWPm8-6ZKg@mail.gmail.com>
References: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
 <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>
 <CAE8nN5PsW0X9hFXFqsH4_qrk7dmNTZ_Wxfi2iV6-PKztdi70Gg@mail.gmail.com>
 <89816FC4-1F2A-4BC6-B430-E514EDE8A4FE@hobu.co>
 <CAE8nN5NOjMEwMOKVHwyLQ44Xk=CwJ33uFFpu7AzEONu1bBCfnA@mail.gmail.com>
 <CACJ51z2aW47KhB3KHamuPjCE=A_+=PQWjZ3NdXE6sWPm8-6ZKg@mail.gmail.com>
Message-ID: <CAE8nN5NWDwr7P6miYGZvusfSk=6TKc7jwF2uJ6p1dgKgsRViYg@mail.gmail.com>

Thanks - found it.

On Mon, 26 Apr 2021 at 14:15, Andrew Bell <andrew.bell.ia at gmail.com> wrote:

>
>
> On Mon, Apr 26, 2021 at 9:03 AM Paul Harwood <runette at gmail.com> wrote:
>
>> Thanks Howard
>>
>> One more question ... any pointers about to access the face data in the
>> cpp API?
>>
>
> PointView::mesh()
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210426/ff5a609d/attachment.html>

From peter.lim at gpslands.com  Tue Apr 27 02:36:00 2021
From: peter.lim at gpslands.com (Peter Lim)
Date: Tue, 27 Apr 2021 17:36:00 +0800
Subject: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
 coordinate operations from
Message-ID: <005101d73b48$c1b3a920$451afb60$@lim@gpslands.com>

Hi,

 

I'm trying to crop a LAS file using filters.crop but I get this error:

 

(pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations
from `EPSG:32648' to
`ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTH
UNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre
",1,ID["EPSG",9001]]]]'

PDAL: filters.crop: Unable to reproject bounds.

 

I'm using the following pipeline:

 

[

    {

        "type":"readers.las",

        "filename":"*.las",

        "default_srs":"EPSG:32648"


    },

    {

        "type": "filters.merge"

    },                         

    {

        "type":"filters.crop",

        "bounds":"([364035,364085],[142446,142486],[-1000, 1000])",

        "a_srs":"EPSG:32648"

    },

    {

        "type":"writers.las",

        "filename":"output.las",

        "a_srs":"EPSG:32648"

    }

]

 

 

Please advise

 

Thank you.

 

Best Regards,

 

Peter Lim

 



-- 
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210427/841dc20d/attachment.html>

From Peder.Axensten at slu.se  Tue Apr 27 03:46:42 2021
From: Peder.Axensten at slu.se (Peder Axensten)
Date: Tue, 27 Apr 2021 10:46:42 +0000
Subject: [pdal] Intermittent crash calling LasReader::execute( PointTable )
Message-ID: <9ED6476D-49BC-4AA6-8139-C8859B4968A7@slu.se>

Hi,

I?m in the process of changing from liblas to pdal and all our tools but one have now ? with great help from this list! ? been converted into pdal filters. The remaining tool reads all las/laz-files in a given directory. I have not yet figured out a good way to make it fit into the pdal filter paradigm, so for now I?ll keep the tool, but switch the file reading from liblas to pdal. I found information on how to do this at https://pdal.io/api/transition/index.html. I put the specific code into the class Point_file_reader, as seen below. It runs perfectly on OS X, but we process data in Ubuntu under Docker and this crashes under certain circumstances...

If I simply construct a Point_file_reader object all works fine also in Ubuntu, but used in the processing environment it crashes with SIGSEGV - Segmentation violation signal. I really can not see how the processing environment could affect this isolated code as there are no apparent dependencies apart from the file path, but I?m obviously wrong. My next step will be to simplify until the crash goes away, but as this is rather cumbersome I first want to ask this list if someone have had similar experiences?

The crash happens in laszip, called by pdal (as seen further below). In OS X I use clang, in Ubuntu I use gcc. The versions of pdal and laszip are as of last week.

Any insights or ideas will be much appreciated!

==============================
#pragma once

#include <filesystem>
#include <memory>
#include <pdal/PointTable.hpp>
#include <pdal/PointView.hpp>
#include <pdal/io/LasHeader.hpp>
#include <pdal/io/LasReader.hpp>
#include <pdal/Options.hpp>

namespace pax {

/// Open an aprs las file (possibly compressed).
/** Code from https://pdal.io/api/transition/index.html**/
class Point_file_reader {
pdal::LasReaderm_reader{};
pdal::PointTablem_table{};
pdal::PointViewSetm_point_view_set{};
pdal::PointViewPtrm_point_view{};

public:
using point_type  = pdal::PointRef;
using header_type  = pdal::LasHeader;
using Id  = pdal::Dimension::Id;

Point_file_reader( const std::filesystem::path & file_ ) {
pdal::Optionoption( "filename", file_.native() );
pdal::Optionsoptions;
options.add( option );
m_reader.setOptions( options );
m_reader.prepare( m_table );

// Next line in Ubuntu 20.10 under Docker: SIGSEGV - Segmentation violation signal
m_point_view_set  = pdal::PointViewSet{ m_reader.execute( m_table ) };

m_point_view  = pdal::PointViewPtr{ *m_point_view_set.begin() };
}

const header_type & header() const {return m_reader.header();}
auto begin() const {return m_point_view->begin();}
auto end() const {return m_point_view->end();}
bool has_dim( const Id dim_)const {return m_point_view->hasDim( dim_ );}
};

}//namespace pax
==============================

I?ve installed gdb in the Docker environment, but I?m not very familiar with it. This is what I get:

==============================
(gdb) run
Starting program: /pax/build/Linux/point-cloud
warning: Error disabling address space randomization: Operation not permitted
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[doctest] run with "--help" for options

Program received signal SIGSEGV, Segmentation fault.
0x00007f55095c5cbd in std::istream::read(char*, long) () from /lib/x86_64-linux-gnu/libstdc++.so.6
(gdb) up
#1  0x00007f5509118ee3 in ByteStreamInIstream::getBytes(unsigned char*, unsigned int) () from /usr/local/lib/liblaszip.so.6
(gdb) up
#2  0x00007f5506055b73 in laszip_read_header (laszip_dll=0x557806355e30, is_compressed=0x7ffd6e735354) at /tmp/LASzip/src/laszip_dll.cpp:3454
3454  try { laszip_dll->streamin->getBytes((U8*)file_signature, 4); } catch(...)
(gdb) up
#3  0x00007f5506059c44 in laszip_open_reader_stream (pointer=0x557806355e30, stream=..., is_compressed=is_compressed at entry=0x7ffd6e735354)
    at /tmp/LASzip/src/laszip_dll.cpp:4810
4810    return laszip_read_header(laszip_dll, is_compressed);
(gdb) up
#4  0x00007f5509a817d0 in pdal::LasReader::ready (this=0x7ffd6e7359c0, table=...) at /usr/include/c++/10/bits/unique_ptr.h:421
421      get() const noexcept
(gdb) up
#5  0x00007f5509bb75c9 in pdal::Stage::execute (this=0x7ffd6e735ac0, table=..., views=std::set with 1 element = {...}) at /usr/include/c++/10/ext/atomicity.h:84
84      return __exchange_and_add(__mem, __val);
(gdb) up
#6  0x00007f5509bb7d7d in pdal::Stage::execute (this=<optimized out>, table=...) at /tmp/PDAL/pdal/Stage.cpp:235
235        outViews = si.m_stage->execute(table, inViews);
(gdb) up
#7  0x0000557805cad5c8 in pax::Process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u, pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u, pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float, pax::filter::All_ge_level_filter, std::allocator<float> > > >::process_file (this=this at entry=0x7ffd6e735e80,
    file_=filesystem::path "../../doctests-data/point-cloud/original/09D037_68200_5175_25.laz" = {...}) at /usr/include/c++/10/ostream:517
517    operator<<(basic_ostream<char, _Traits>& __out, char __c)
(gdb) up
#8  0x0000557805caf12e in pax::Process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u, pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u, pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float, pax::filter::All_ge_level_filter, std::allocator<float> > > >::process_directory (this=this at entry=0x7ffd6e735e80,
    pc_directory_=filesystem::path "../../doctests-data/point-cloud/original" = {...}) at /usr/include/c++/10/bits/fs_dir.h:161
161    operator const filesystem::path& () const noexcept { return _M_path; }
(gdb) up
#9  0x0000557805caf5c5 in pax::process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u, pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u, pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float, pax::filter::All_ge_level_filter, std::allocator<float> > > > (pc_count_=0, do_progress_=<optimized out>,
    nilsson_=<optimized out>, pc_directory_=filesystem::path "../../doctests-data/point-cloud/original" = {...},
    plots_dest_=filesystem::path "/tmp/plots_result.csv" = {...}, plots_source_=filesystem::path "/tmp/plots_result.csv" = {...}, accessor_set_=...)
    at /pax/include/point-cloud/process/plot-metrics-implementation.hpp:190
190Json_value process_plots(
(gdb) up
#10 pax::process_plots<std::filesystem::__cxx11::path const&, std::filesystem::__cxx11::path const&, std::filesystem::__cxx11::path const&, double, bool> (
    accessor_ref_set_=...) at /pax/include/point-cloud/process/plot-metrics-implementation.hpp:219
219return process_plots( std::move( accessor_set ), std::forward< Args >( args_ )... );
(gdb) up
#11 0x0000557805c7f877 in pax::_DOCTEST_ANON_FUNC_4 () at /usr/include/c++/10/bits/stl_iterator.h:953
953      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
(gdb) up
#12 0x0000557805cc89b8 in doctest::Context::run (this=0x7ffd6e736980) at /pax/include/3rd-party/doctest/doctest.h:6486
6486                    tc.m_test();
(gdb) up
#13 0x0000557805bf059c in main (argc=1, argv=0x7ffd6e736a98) at /pax/doctests-src/main.doctest.cpp:42
42const auto test_result = context.run();
(gdb) up
Initial frame selected; you cannot go up.
==============================


Best regards,

Peder Axensten
Research engineer

Remote Sensing
Department of Forest Resource Management
Swedish University of Agricultural Sciences
SE-901 83 Ume?
Visiting address: Skogsmarksgr?nd
Phone: +46 90 786 85 00
peder.axensten at slu.se, www.slu.se/srh

The Department of Forest Resource Management is environmentally certified in accordance with ISO 14001.

---
N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>

From andrew.bell.ia at gmail.com  Tue Apr 27 04:42:38 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Tue, 27 Apr 2021 07:42:38 -0400
Subject: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
 coordinate operations from
In-Reply-To: <6087de99.1c69fb81.892da.2058SMTPIN_ADDED_BROKEN@mx.google.com>
References: <6087de99.1c69fb81.892da.2058SMTPIN_ADDED_BROKEN@mx.google.com>
Message-ID: <CACJ51z28ec=mzNXD8EKQP6QK9kXeEVncAp7rQkT1GFRA+jo5ww@mail.gmail.com>

On Tue, Apr 27, 2021 at 5:51 AM Peter Lim <peter.lim at gpslands.com> wrote:

> Hi,
>
>
>
> I?m trying to crop a LAS file using filters.crop but I get this error:
>
>
>
> (pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations
> from `EPSG:32648' to
> `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
>
> PDAL: filters.crop: Unable to reproject bounds.
>

Your data seems to be in a custom engineering CRS. PDAL can't convert your
crop boundary from EPSG:32648 to your custom CRS because no transformation
exists in PROJ, the library used for this purpose. You might ask on the
PROJ list or perhaps someone else on this list will know how to deal
with this.

 I?m using the following pipeline:
>
>
>
> [
>
>     {
>
>         "type":"readers.las",
>
>         "filename":"*.las",
>
>
> "default_srs":"EPSG:32648"
>
>
>     },
>
>     {
>
>         "type": "filters.merge"
>
>     },
>
>     {
>
>         "type":"filters.crop",
>
>         "bounds":"([364035,364085],[142446,142486],[-1000, 1000])",
>
>         "a_srs":"EPSG:32648"
>
>     },
>
>     {
>
>         "type":"writers.las",
>
>         "filename":"output.las",
>
>         "a_srs":"EPSG:32648"
>
>     }
>
> ]
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210427/ff84101c/attachment-0001.html>

From andrew.bell.ia at gmail.com  Tue Apr 27 04:47:08 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Tue, 27 Apr 2021 07:47:08 -0400
Subject: [pdal] Intermittent crash calling LasReader::execute(
 PointTable )
In-Reply-To: <9ED6476D-49BC-4AA6-8139-C8859B4968A7@slu.se>
References: <9ED6476D-49BC-4AA6-8139-C8859B4968A7@slu.se>
Message-ID: <CACJ51z0OduATSc-dNS-PfbL1ENNox1tnGphxBCPZAJsd-VmXGA@mail.gmail.com>

If your code runs on OSX but fails on Linux, it's likely you have an issue
accessing invalid memory. You should run valgrind or compile with
-fsanitize=address to help you find your error. There are also many working
example and test programs as part of the PDAL distribution that may help.

On Tue, Apr 27, 2021 at 6:46 AM Peder Axensten <Peder.Axensten at slu.se>
wrote:

> Hi,
>
> I?m in the process of changing from liblas to pdal and all our tools but
> one have now ? with great help from this list! ? been converted into pdal
> filters. The remaining tool reads all las/laz-files in a given directory. I
> have not yet figured out a good way to make it fit into the pdal filter
> paradigm, so for now I?ll keep the tool, but switch the file reading from
> liblas to pdal. I found information on how to do this at
> https://pdal.io/api/transition/index.html. I put the specific code into
> the class Point_file_reader, as seen below. It runs perfectly on OS X, but
> we process data in Ubuntu under Docker and this crashes under certain
> circumstances...
>
> If I simply construct a Point_file_reader object all works fine also in
> Ubuntu, but used in the processing environment it crashes with SIGSEGV -
> Segmentation violation signal. I really can not see how the processing
> environment could affect this isolated code as there are no apparent
> dependencies apart from the file path, but I?m obviously wrong. My next
> step will be to simplify until the crash goes away, but as this is rather
> cumbersome I first want to ask this list if someone have had similar
> experiences?
>
> The crash happens in laszip, called by pdal (as seen further below). In OS
> X I use clang, in Ubuntu I use gcc. The versions of pdal and laszip are as
> of last week.
>
> Any insights or ideas will be much appreciated!
>
> ==============================
> #pragma once
>
> #include <filesystem>
> #include <memory>
> #include <pdal/PointTable.hpp>
> #include <pdal/PointView.hpp>
> #include <pdal/io/LasHeader.hpp>
> #include <pdal/io/LasReader.hpp>
> #include <pdal/Options.hpp>
>
> namespace pax {
>
> /// Open an aprs las file (possibly compressed).
> /** Code from https://pdal.io/api/transition/index.html**/
> class Point_file_reader {
> pdal::LasReaderm_reader{};
> pdal::PointTablem_table{};
> pdal::PointViewSetm_point_view_set{};
> pdal::PointViewPtrm_point_view{};
>
> public:
> using point_type  = pdal::PointRef;
> using header_type  = pdal::LasHeader;
> using Id  = pdal::Dimension::Id;
>
> Point_file_reader( const std::filesystem::path & file_ ) {
> pdal::Optionoption( "filename", file_.native() );
> pdal::Optionsoptions;
> options.add( option );
> m_reader.setOptions( options );
> m_reader.prepare( m_table );
>
> // Next line in Ubuntu 20.10 under Docker: SIGSEGV - Segmentation
> violation signal
> m_point_view_set  = pdal::PointViewSet{ m_reader.execute( m_table ) };
>
> m_point_view  = pdal::PointViewPtr{ *m_point_view_set.begin() };
> }
>
> const header_type & header() const {return m_reader.header();}
> auto begin() const {return m_point_view->begin();}
> auto end() const {return m_point_view->end();}
> bool has_dim( const Id dim_)const {return m_point_view->hasDim( dim_ );}
> };
>
> }//namespace pax
> ==============================
>
> I?ve installed gdb in the Docker environment, but I?m not very familiar
> with it. This is what I get:
>
> ==============================
> (gdb) run
> Starting program: /pax/build/Linux/point-cloud
> warning: Error disabling address space randomization: Operation not
> permitted
> [Thread debugging using libthread_db enabled]
> Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
> [doctest] run with "--help" for options
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x00007f55095c5cbd in std::istream::read(char*, long) () from
> /lib/x86_64-linux-gnu/libstdc++.so.6
> (gdb) up
> #1  0x00007f5509118ee3 in ByteStreamInIstream::getBytes(unsigned char*,
> unsigned int) () from /usr/local/lib/liblaszip.so.6
> (gdb) up
> #2  0x00007f5506055b73 in laszip_read_header (laszip_dll=0x557806355e30,
> is_compressed=0x7ffd6e735354) at /tmp/LASzip/src/laszip_dll.cpp:3454
> 3454  try { laszip_dll->streamin->getBytes((U8*)file_signature, 4); }
> catch(...)
> (gdb) up
> #3  0x00007f5506059c44 in laszip_open_reader_stream
> (pointer=0x557806355e30, stream=..., is_compressed=is_compressed at entry
> =0x7ffd6e735354)
>     at /tmp/LASzip/src/laszip_dll.cpp:4810
> 4810    return laszip_read_header(laszip_dll, is_compressed);
> (gdb) up
> #4  0x00007f5509a817d0 in pdal::LasReader::ready (this=0x7ffd6e7359c0,
> table=...) at /usr/include/c++/10/bits/unique_ptr.h:421
> 421      get() const noexcept
> (gdb) up
> #5  0x00007f5509bb75c9 in pdal::Stage::execute (this=0x7ffd6e735ac0,
> table=..., views=std::set with 1 element = {...}) at
> /usr/include/c++/10/ext/atomicity.h:84
> 84      return __exchange_and_add(__mem, __val);
> (gdb) up
> #6  0x00007f5509bb7d7d in pdal::Stage::execute (this=<optimized out>,
> table=...) at /tmp/PDAL/pdal/Stage.cpp:235
> 235        outViews = si.m_stage->execute(table, inViews);
> (gdb) up
> #7  0x0000557805cad5c8 in
> pax::Process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u,
> pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u,
> pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u,
> pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u,
> pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float,
> pax::filter::All_ge_level_filter, std::allocator<float> > > >::process_file
> (this=this at entry=0x7ffd6e735e80,
>     file_=filesystem::path
> "../../doctests-data/point-cloud/original/09D037_68200_5175_25.laz" =
> {...}) at /usr/include/c++/10/ostream:517
> 517    operator<<(basic_ostream<char, _Traits>& __out, char __c)
> (gdb) up
> #8  0x0000557805caf12e in
> pax::Process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u,
> pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u,
> pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u,
> pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u,
> pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float,
> pax::filter::All_ge_level_filter, std::allocator<float> > >
> >::process_directory (this=this at entry=0x7ffd6e735e80,
>     pc_directory_=filesystem::path
> "../../doctests-data/point-cloud/original" = {...}) at
> /usr/include/c++/10/bits/fs_dir.h:161
> 161    operator const filesystem::path& () const noexcept { return
> _M_path; }
> (gdb) up
> #9  0x0000557805caf5c5 in
> pax::process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u,
> pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u,
> pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u,
> pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u,
> pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float,
> pax::filter::All_ge_level_filter, std::allocator<float> > > > (pc_count_=0,
> do_progress_=<optimized out>,
>     nilsson_=<optimized out>, pc_directory_=filesystem::path
> "../../doctests-data/point-cloud/original" = {...},
>     plots_dest_=filesystem::path "/tmp/plots_result.csv" = {...},
> plots_source_=filesystem::path "/tmp/plots_result.csv" = {...},
> accessor_set_=...)
>     at /pax/include/point-cloud/process/plot-metrics-implementation.hpp:190
> 190Json_value process_plots(
> (gdb) up
> #10 pax::process_plots<std::filesystem::__cxx11::path const&,
> std::filesystem::__cxx11::path const&, std::filesystem::__cxx11::path
> const&, double, bool> (
>     accessor_ref_set_=...) at
> /pax/include/point-cloud/process/plot-metrics-implementation.hpp:219
> 219return process_plots( std::move( accessor_set ), std::forward< Args >(
> args_ )... );
> (gdb) up
> #11 0x0000557805c7f877 in pax::_DOCTEST_ANON_FUNC_4 () at
> /usr/include/c++/10/bits/stl_iterator.h:953
> 953      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
> (gdb) up
> #12 0x0000557805cc89b8 in doctest::Context::run (this=0x7ffd6e736980) at
> /pax/include/3rd-party/doctest/doctest.h:6486
> 6486                    tc.m_test();
> (gdb) up
> #13 0x0000557805bf059c in main (argc=1, argv=0x7ffd6e736a98) at
> /pax/doctests-src/main.doctest.cpp:42
> 42const auto test_result = context.run();
> (gdb) up
> Initial frame selected; you cannot go up.
> ==============================
>
>
> Best regards,
>
> Peder Axensten
> Research engineer
>
> Remote Sensing
> Department of Forest Resource Management
> Swedish University of Agricultural Sciences
> SE-901 83 Ume?
> Visiting address: Skogsmarksgr?nd
> Phone: +46 90 786 85 00
> peder.axensten at slu.se, www.slu.se/srh
>
> The Department of Forest Resource Management is environmentally certified
> in accordance with ISO 14001.
>
> ---
> N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina
> personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <
> https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
> E-mailing SLU will result in SLU processing your personal data. For more
> information on how this is done, click here <
> https://www.slu.se/en/about-slu/contact-slu/personal-data/>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210427/b491e4b8/attachment.html>

From kirk.waters at noaa.gov  Tue Apr 27 05:59:08 2021
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Tue, 27 Apr 2021 08:59:08 -0400
Subject: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
 coordinate operations from
In-Reply-To: <CACJ51z28ec=mzNXD8EKQP6QK9kXeEVncAp7rQkT1GFRA+jo5ww@mail.gmail.com>
References: <6087de99.1c69fb81.892da.2058SMTPIN_ADDED_BROKEN@mx.google.com>
 <CACJ51z28ec=mzNXD8EKQP6QK9kXeEVncAp7rQkT1GFRA+jo5ww@mail.gmail.com>
Message-ID: <CADm=QrT28ZSOTvDGMfDwZOiWBueKBnZ+5W=8r2tT-SDm+h3_8A@mail.gmail.com>

Perhaps I'm missing it, but it doesn't look like there is a transform to be
done. The input and output codes are the same. Couldn't he just skip
specifying the SRS?

Kirk


On Tue, Apr 27, 2021 at 7:43 AM Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

>
>
> On Tue, Apr 27, 2021 at 5:51 AM Peter Lim <peter.lim at gpslands.com> wrote:
>
>> Hi,
>>
>>
>>
>> I?m trying to crop a LAS file using filters.crop but I get this error:
>>
>>
>>
>> (pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations
>> from `EPSG:32648' to
>> `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
>>
>> PDAL: filters.crop: Unable to reproject bounds.
>>
>
> Your data seems to be in a custom engineering CRS. PDAL can't convert your
> crop boundary from EPSG:32648 to your custom CRS because no transformation
> exists in PROJ, the library used for this purpose. You might ask on the
> PROJ list or perhaps someone else on this list will know how to deal
> with this.
>
>  I?m using the following pipeline:
>>
>>
>>
>> [
>>
>>     {
>>
>>         "type":"readers.las",
>>
>>         "filename":"*.las",
>>
>>
>> "default_srs":"EPSG:32648"
>>
>>
>>     },
>>
>>     {
>>
>>         "type": "filters.merge"
>>
>>     },
>>
>>     {
>>
>>         "type":"filters.crop",
>>
>>         "bounds":"([364035,364085],[142446,142486],[-1000, 1000])",
>>
>>         "a_srs":"EPSG:32648"
>>
>>     },
>>
>>     {
>>
>>         "type":"writers.las",
>>
>>         "filename":"output.las",
>>
>>         "a_srs":"EPSG:32648"
>>
>>     }
>>
>> ]
>>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210427/8df2cb6d/attachment-0001.html>

From andrew.bell.ia at gmail.com  Tue Apr 27 06:36:10 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Tue, 27 Apr 2021 09:36:10 -0400
Subject: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
 coordinate operations from
In-Reply-To: <CADm=QrT28ZSOTvDGMfDwZOiWBueKBnZ+5W=8r2tT-SDm+h3_8A@mail.gmail.com>
References: <6087de99.1c69fb81.892da.2058SMTPIN_ADDED_BROKEN@mx.google.com>
 <CACJ51z28ec=mzNXD8EKQP6QK9kXeEVncAp7rQkT1GFRA+jo5ww@mail.gmail.com>
 <CADm=QrT28ZSOTvDGMfDwZOiWBueKBnZ+5W=8r2tT-SDm+h3_8A@mail.gmail.com>
Message-ID: <CACJ51z1jQa4yH+WjwLr=Qx8juHPUk7ShWG8xSBvOOo0viubFHQ@mail.gmail.com>

On Tue, Apr 27, 2021 at 8:59 AM Kirk Waters - NOAA Federal <
kirk.waters at noaa.gov> wrote:

> Perhaps I'm missing it, but it doesn't look like there is a transform to
> be done. The input and output codes are the same. Couldn't he just skip
> specifying the SRS?
>

No, the input SRS is some ENGCRS. The option "default_srs" that's being
used in readers.las only applies if the data doesn't already have an SRS.
You can override the data SRS by using "override_srs", but I'm not sure if
that's correct or what's intended in this case.

Your data seems to be in a custom engineering CRS. PDAL can't convert your
>> crop boundary from EPSG:32648 to your custom CRS because no transformation
>> exists in PROJ, the library used for this purpose. You might ask on the
>> PROJ list or perhaps someone else on this list will know how to deal
>> with this.
>>
>>  I?m using the following pipeline:
>>>
>>>
>>>
>>> [
>>>
>>>     {
>>>
>>>         "type":"readers.las",
>>>
>>>         "filename":"*.las",
>>>
>>>
>>> "default_srs":"EPSG:32648"
>>>
>>>
>>>     },
>>>
>> ... snipped ...

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210427/74c0a49d/attachment.html>

From Peder.Axensten at slu.se  Tue Apr 27 07:58:41 2021
From: Peder.Axensten at slu.se (Peder Axensten)
Date: Tue, 27 Apr 2021 14:58:41 +0000
Subject: [pdal] Intermittent crash calling LasReader::execute(
 PointTable )
In-Reply-To: <CACJ51z0OduATSc-dNS-PfbL1ENNox1tnGphxBCPZAJsd-VmXGA@mail.gmail.com>
References: <9ED6476D-49BC-4AA6-8139-C8859B4968A7@slu.se>
 <CACJ51z0OduATSc-dNS-PfbL1ENNox1tnGphxBCPZAJsd-VmXGA@mail.gmail.com>
Message-ID: <CA407A30-E159-4471-AD60-5B3763B73A02@slu.se>

Thank you for a valuable tip, Andrew!
I will run through all tests using this option.

Best regards,

Peder Axensten
Research engineer

Remote Sensing
Department of Forest Resource Management
Swedish University of Agricultural Sciences
SE-901 83 Ume?
Visiting address: Skogsmarksgr?nd
Phone: +46 90 786 85 00
peder.axensten at slu.se, www.slu.se/srh

The Department of Forest Resource Management is environmentally certified in accordance with ISO 14001.

> On 27 Apr 2021, at 13:47, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
>
> If your code runs on OSX but fails on Linux, it's likely you have an issue accessing invalid memory. You should run valgrind or compile with -fsanitize=address to help you find your error. There are also many working example and test programs as part of the PDAL distribution that may help.
>
> On Tue, Apr 27, 2021 at 6:46 AM Peder Axensten <Peder.Axensten at slu.se> wrote:
> Hi,
>
> I?m in the process of changing from liblas to pdal and all our tools but one have now ? with great help from this list! ? been converted into pdal filters. The remaining tool reads all las/laz-files in a given directory. I have not yet figured out a good way to make it fit into the pdal filter paradigm, so for now I?ll keep the tool, but switch the file reading from liblas to pdal. I found information on how to do this at https://pdal.io/api/transition/index.html. I put the specific code into the class Point_file_reader, as seen below. It runs perfectly on OS X, but we process data in Ubuntu under Docker and this crashes under certain circumstances...
>
> If I simply construct a Point_file_reader object all works fine also in Ubuntu, but used in the processing environment it crashes with SIGSEGV - Segmentation violation signal. I really can not see how the processing environment could affect this isolated code as there are no apparent dependencies apart from the file path, but I?m obviously wrong. My next step will be to simplify until the crash goes away, but as this is rather cumbersome I first want to ask this list if someone have had similar experiences?
>
> The crash happens in laszip, called by pdal (as seen further below). In OS X I use clang, in Ubuntu I use gcc. The versions of pdal and laszip are as of last week.
>
> Any insights or ideas will be much appreciated!
>
> ==============================
> #pragma once
>
> #include <filesystem>
> #include <memory>
> #include <pdal/PointTable.hpp>
> #include <pdal/PointView.hpp>
> #include <pdal/io/LasHeader.hpp>
> #include <pdal/io/LasReader.hpp>
> #include <pdal/Options.hpp>
>
> namespace pax {
>
> /// Open an aprs las file (possibly compressed).
> /** Code from https://pdal.io/api/transition/index.html**/
> class Point_file_reader {
> pdal::LasReaderm_reader{};
> pdal::PointTablem_table{};
> pdal::PointViewSetm_point_view_set{};
> pdal::PointViewPtrm_point_view{};
>
> public:
> using point_type  = pdal::PointRef;
> using header_type  = pdal::LasHeader;
> using Id  = pdal::Dimension::Id;
>
> Point_file_reader( const std::filesystem::path & file_ ) {
> pdal::Optionoption( "filename", file_.native() );
> pdal::Optionsoptions;
> options.add( option );
> m_reader.setOptions( options );
> m_reader.prepare( m_table );
>
> // Next line in Ubuntu 20.10 under Docker: SIGSEGV - Segmentation violation signal
> m_point_view_set  = pdal::PointViewSet{ m_reader.execute( m_table ) };
>
> m_point_view  = pdal::PointViewPtr{ *m_point_view_set.begin() };
> }
>
> const header_type & header() const {return m_reader.header();}
> auto begin() const {return m_point_view->begin();}
> auto end() const {return m_point_view->end();}
> bool has_dim( const Id dim_)const {return m_point_view->hasDim( dim_ );}
> };
>
> }//namespace pax
> ==============================
>
> I?ve installed gdb in the Docker environment, but I?m not very familiar with it. This is what I get:
>
> ==============================
> (gdb) run
> Starting program: /pax/build/Linux/point-cloud
> warning: Error disabling address space randomization: Operation not permitted
> [Thread debugging using libthread_db enabled]
> Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
> [doctest] run with "--help" for options
>
> Program received signal SIGSEGV, Segmentation fault.
> 0x00007f55095c5cbd in std::istream::read(char*, long) () from /lib/x86_64-linux-gnu/libstdc++.so.6
> (gdb) up
> #1  0x00007f5509118ee3 in ByteStreamInIstream::getBytes(unsigned char*, unsigned int) () from /usr/local/lib/liblaszip.so.6
> (gdb) up
> #2  0x00007f5506055b73 in laszip_read_header (laszip_dll=0x557806355e30, is_compressed=0x7ffd6e735354) at /tmp/LASzip/src/laszip_dll.cpp:3454
> 3454  try { laszip_dll->streamin->getBytes((U8*)file_signature, 4); } catch(...)
> (gdb) up
> #3  0x00007f5506059c44 in laszip_open_reader_stream (pointer=0x557806355e30, stream=..., is_compressed=is_compressed at entry=0x7ffd6e735354)
>     at /tmp/LASzip/src/laszip_dll.cpp:4810
> 4810    return laszip_read_header(laszip_dll, is_compressed);
> (gdb) up
> #4  0x00007f5509a817d0 in pdal::LasReader::ready (this=0x7ffd6e7359c0, table=...) at /usr/include/c++/10/bits/unique_ptr.h:421
> 421      get() const noexcept
> (gdb) up
> #5  0x00007f5509bb75c9 in pdal::Stage::execute (this=0x7ffd6e735ac0, table=..., views=std::set with 1 element = {...}) at /usr/include/c++/10/ext/atomicity.h:84
> 84      return __exchange_and_add(__mem, __val);
> (gdb) up
> #6  0x00007f5509bb7d7d in pdal::Stage::execute (this=<optimized out>, table=...) at /tmp/PDAL/pdal/Stage.cpp:235
> 235        outViews = si.m_stage->execute(table, inViews);
> (gdb) up
> #7  0x0000557805cad5c8 in pax::Process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u, pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u, pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float, pax::filter::All_ge_level_filter, std::allocator<float> > > >::process_file (this=this at entry=0x7ffd6e735e80,
>     file_=filesystem::path "../../doctests-data/point-cloud/original/09D037_68200_5175_25.laz" = {...}) at /usr/include/c++/10/ostream:517
> 517    operator<<(basic_ostream<char, _Traits>& __out, char __c)
> (gdb) up
> #8  0x0000557805caf12e in pax::Process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u, pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u, pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float, pax::filter::All_ge_level_filter, std::allocator<float> > > >::process_directory (this=this at entry=0x7ffd6e735e80,
>     pc_directory_=filesystem::path "../../doctests-data/point-cloud/original" = {...}) at /usr/include/c++/10/bits/fs_dir.h:161
> 161    operator const filesystem::path& () const noexcept { return _M_path; }
> (gdb) up
> #9  0x0000557805caf5c5 in pax::process_plots<pax::Aggregator_set<pax::Filtered_summary<float, 0u, pax::filter::Pass_all_filter>, pax::Filtered_summary<float, 4u, pax::filter::All_ge_level_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_filter>, pax::Filtered_summary<float, 0u, pax::filter::First_return_ge_level_filter>, pax::Filtered_ordered<float, pax::filter::All_ge_level_filter, std::allocator<float> > > > (pc_count_=0, do_progress_=<optimized out>,
>     nilsson_=<optimized out>, pc_directory_=filesystem::path "../../doctests-data/point-cloud/original" = {...},
>     plots_dest_=filesystem::path "/tmp/plots_result.csv" = {...}, plots_source_=filesystem::path "/tmp/plots_result.csv" = {...}, accessor_set_=...)
>     at /pax/include/point-cloud/process/plot-metrics-implementation.hpp:190
> 190Json_value process_plots(
> (gdb) up
> #10 pax::process_plots<std::filesystem::__cxx11::path const&, std::filesystem::__cxx11::path const&, std::filesystem::__cxx11::path const&, double, bool> (
>     accessor_ref_set_=...) at /pax/include/point-cloud/process/plot-metrics-implementation.hpp:219
> 219return process_plots( std::move( accessor_set ), std::forward< Args >( args_ )... );
> (gdb) up
> #11 0x0000557805c7f877 in pax::_DOCTEST_ANON_FUNC_4 () at /usr/include/c++/10/bits/stl_iterator.h:953
> 953      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
> (gdb) up
> #12 0x0000557805cc89b8 in doctest::Context::run (this=0x7ffd6e736980) at /pax/include/3rd-party/doctest/doctest.h:6486
> 6486                    tc.m_test();
> (gdb) up
> #13 0x0000557805bf059c in main (argc=1, argv=0x7ffd6e736a98) at /pax/doctests-src/main.doctest.cpp:42
> 42const auto test_result = context.run();
> (gdb) up
> Initial frame selected; you cannot go up.
> ==============================
>
>
> Best regards,
>
> Peder Axensten
> Research engineer
>
> Remote Sensing
> Department of Forest Resource Management
> Swedish University of Agricultural Sciences
> SE-901 83 Ume?
> Visiting address: Skogsmarksgr?nd
> Phone: +46 90 786 85 00
> peder.axensten at slu.se, www.slu.se/srh
>
> The Department of Forest Resource Management is environmentally certified in accordance with ISO 14001.
>
> ---
> N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
> E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com

---
N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>

From andreas at yank.to  Tue Apr 27 14:11:19 2021
From: andreas at yank.to (Andreas Yankopolus)
Date: Tue, 27 Apr 2021 17:11:19 -0400
Subject: [pdal] Surface modeling
Message-ID: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>

I?m trying to convert LPC data into surface-height and surface-type rasters, where the surface height captures building/tree height and surface type differentiates between natural and man-made surfaces (similar to the USGS NLCD, but higher resolution). The goal is to use these rasters for radio propagation prediction. I?m using USGS 3DEP LPC data, which has tagged ground returns.

I?m looking at the first return for surface height, but it clearly needs filtering to remove birds, power lines, and other spurious data. Perhaps there are metrics on return strength, covariance, etc. that could be a basis for removing initial returns.

The dimensionality features seem a possibility for differentiating trees and buildings. Worst case, I can use NLCD data here.

Is there previous work in these areas that I can build on with PDAL? I?m also looking at LAStools, which appears to have binaries that could be replicated with PDAL pipelines.

Ground detection with PDAL and void filling with gdal_fillnodata is giving me a reasonable terrain-height raster. That?s the easiest part of the problem.

Cheers,

Andreas

From peter.lim at gpslands.com  Tue Apr 27 18:33:33 2021
From: peter.lim at gpslands.com (Peter Lim)
Date: Wed, 28 Apr 2021 09:33:33 +0800
Subject: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
 coordinate operations from
In-Reply-To: <CACJ51z1jQa4yH+WjwLr=Qx8juHPUk7ShWG8xSBvOOo0viubFHQ@mail.gmail.com>
References: <6087de99.1c69fb81.892da.2058SMTPIN_ADDED_BROKEN@mx.google.com>
 <CACJ51z28ec=mzNXD8EKQP6QK9kXeEVncAp7rQkT1GFRA+jo5ww@mail.gmail.com>
 <CADm=QrT28ZSOTvDGMfDwZOiWBueKBnZ+5W=8r2tT-SDm+h3_8A@mail.gmail.com>
 <CACJ51z1jQa4yH+WjwLr=Qx8juHPUk7ShWG8xSBvOOo0viubFHQ@mail.gmail.com>
Message-ID: <000f01d73bce$868abce0$93a036a0$@lim@gpslands.com>

Hi ,

 

When I removed all the srs from the pipeline, I got this error:

 

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: CRS has no geodetic CRS

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: Object is not a CRS or GeodeticReferenceFrame

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: CRS has no geodetic CRS

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: Object is not a CRS or GeodeticReferenceFrame

(pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations from `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]' to `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'

PDAL: filters.crop: Unable to reproject bounds.

 

 

Modified pipeline:

[

    {

        "type":"readers.las",

        "filename":"*.las"

    },

    {

        "type": "filters.merge"

    },                         

    {

        "type":"filters.crop",

        "bounds":"([364035,364085],[142446,142486],[-1000, 1000])"

    },

    {

        "type":"writers.las",

        "filename":"output.las"

    }

]

 

Please advise.

 

Thank you.

 

Best Regards,

 

Peter Lim

GPS Lands (S) Pte Ltd

 

From: Andrew Bell [mailto:andrew.bell.ia at gmail.com] 
Sent: Tuesday, 27 April 2021 9:36 pm
To: Kirk Waters - NOAA Federal
Cc: Peter Lim; pdal
Subject: Re: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations from

 

 

On Tue, Apr 27, 2021 at 8:59 AM Kirk Waters - NOAA Federal <kirk.waters at noaa.gov> wrote:

Perhaps I'm missing it, but it doesn't look like there is a transform to be done. The input and output codes are the same. Couldn't he just skip specifying the SRS?

 

No, the input SRS is some ENGCRS. The option "default_srs" that's being used in readers.las only applies if the data doesn't already have an SRS. You can override the data SRS by using "override_srs", but I'm not sure if that's correct or what's intended in this case.

 

Your data seems to be in a custom engineering CRS. PDAL can't convert your crop boundary from EPSG:32648 to your custom CRS because no transformation exists in PROJ, the library used for this purpose. You might ask on the PROJ list or perhaps someone else on this list will know how to deal with this.

 

 I?m using the following pipeline:

 

[

    {

        "type":"readers.las",

        "filename":"*.las",

        "default_srs":"EPSG:32648"                                                                

    },

... snipped ...

 

-- 

Andrew Bell
andrew.bell.ia at gmail.com



-- 
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210428/5506a26f/attachment.html>

From peter.lim at gpslands.com  Tue Apr 27 19:35:05 2021
From: peter.lim at gpslands.com (Peter Lim)
Date: Wed, 28 Apr 2021 10:35:05 +0800
Subject: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
 coordinate operations from
References: <6087de99.1c69fb81.892da.2058SMTPIN_ADDED_BROKEN@mx.google.com>
 <CACJ51z28ec=mzNXD8EKQP6QK9kXeEVncAp7rQkT1GFRA+jo5ww@mail.gmail.com>
 <CADm=QrT28ZSOTvDGMfDwZOiWBueKBnZ+5W=8r2tT-SDm+h3_8A@mail.gmail.com>
 <CACJ51z1jQa4yH+WjwLr=Qx8juHPUk7ShWG8xSBvOOo0viubFHQ@mail.gmail.com> 
Message-ID: <001a01d73bd7$19618d70$4c24a850$@lim@gpslands.com>

Hi,

 

In addition, when I tried to show the info 1 of the file using:

pdal info las\file.las

 

It gave this error:

PDAL: Geometry::transform() failed.  NULL source SRS.

 

 

Pls. advise.

 

Thank you.

 

Best Regards,

 

Peter Lim

GPS Lands (S) Pte Ltd

 

From: Peter Lim [mailto:peter.lim at gpslands.com] 
Sent: Wednesday, 28 April 2021 9:34 am
To: 'Andrew Bell'; 'Kirk Waters - NOAA Federal'
Cc: 'pdal'
Subject: RE: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations from

 

Hi ,

 

When I removed all the srs from the pipeline, I got this error:

 

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: CRS has no geodetic CRS

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: Object is not a CRS or GeodeticReferenceFrame

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: CRS has no geodetic CRS

(pdal pipeline writers.las Error) GDAL failure (1) PROJ: proj_get_ellipsoid: Object is not a CRS or GeodeticReferenceFrame

(pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations from `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]' to `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'

PDAL: filters.crop: Unable to reproject bounds.

 

 

Modified pipeline:

[

    {

        "type":"readers.las",

        "filename":"*.las"

    },

    {

        "type": "filters.merge"

    },                         

    {

        "type":"filters.crop",

        "bounds":"([364035,364085],[142446,142486],[-1000, 1000])"

    },

    {

        "type":"writers.las",

        "filename":"output.las"

    }

]

 

Please advise.

 

Thank you.

 

Best Regards,

 

Peter Lim

GPS Lands (S) Pte Ltd

 

From: Andrew Bell [mailto:andrew.bell.ia at gmail.com] 
Sent: Tuesday, 27 April 2021 9:36 pm
To: Kirk Waters - NOAA Federal
Cc: Peter Lim; pdal
Subject: Re: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations from

 

 

On Tue, Apr 27, 2021 at 8:59 AM Kirk Waters - NOAA Federal <kirk.waters at noaa.gov> wrote:

Perhaps I'm missing it, but it doesn't look like there is a transform to be done. The input and output codes are the same. Couldn't he just skip specifying the SRS?

 

No, the input SRS is some ENGCRS. The option "default_srs" that's being used in readers.las only applies if the data doesn't already have an SRS. You can override the data SRS by using "override_srs", but I'm not sure if that's correct or what's intended in this case.

 

Your data seems to be in a custom engineering CRS. PDAL can't convert your crop boundary from EPSG:32648 to your custom CRS because no transformation exists in PROJ, the library used for this purpose. You might ask on the PROJ list or perhaps someone else on this list will know how to deal with this.

 

 I?m using the following pipeline:

 

[

    {

        "type":"readers.las",

        "filename":"*.las",

        "default_srs":"EPSG:32648"                                                                

    },

... snipped ...

 

-- 

Andrew Bell
andrew.bell.ia at gmail.com



-- 
This email has been checked for viruses by Avast antivirus software.
https://www.avast.com/antivirus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210428/cb257156/attachment-0001.html>

From andrew.bell.ia at gmail.com  Wed Apr 28 06:10:27 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 28 Apr 2021 09:10:27 -0400
Subject: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
 coordinate operations from
In-Reply-To: <6088bb79.1c69fb81.22422.8704SMTPIN_ADDED_BROKEN@mx.google.com>
References: <6087de99.1c69fb81.892da.2058SMTPIN_ADDED_BROKEN@mx.google.com>
 <CACJ51z28ec=mzNXD8EKQP6QK9kXeEVncAp7rQkT1GFRA+jo5ww@mail.gmail.com>
 <CADm=QrT28ZSOTvDGMfDwZOiWBueKBnZ+5W=8r2tT-SDm+h3_8A@mail.gmail.com>
 <CACJ51z1jQa4yH+WjwLr=Qx8juHPUk7ShWG8xSBvOOo0viubFHQ@mail.gmail.com>
 <6088bb79.1c69fb81.22422.8704SMTPIN_ADDED_BROKEN@mx.google.com>
Message-ID: <CACJ51z1esGbVv49xi7Si0mR8GY+kbgws9s+tqiS-ALkfh+ES_Q@mail.gmail.com>

Peter,

If you have a single file that will cause this behavior I can investigate.
I doubt anything is wrong, but it would be good to understand in detail.

Thanks,

On Tue, Apr 27, 2021 at 9:33 PM Peter Lim <peter.lim at gpslands.com> wrote:

> Hi ,
>
>
>
> When I removed all the srs from the pipeline, I got this error:
>
>
>
> (pdal pipeline writers.las Error) GDAL failure (1) PROJ:
> proj_get_ellipsoid: CRS has no geodetic CRS
>
> (pdal pipeline writers.las Error) GDAL failure (1) PROJ:
> proj_get_ellipsoid: Object is not a CRS or GeodeticReferenceFrame
>
> (pdal pipeline writers.las Error) GDAL failure (1) PROJ:
> proj_get_ellipsoid: CRS has no geodetic CRS
>
> (pdal pipeline writers.las Error) GDAL failure (1) PROJ:
> proj_get_ellipsoid: Object is not a CRS or GeodeticReferenceFrame
>
> (pdal pipeline Error) GDAL failure (6) Cannot find coordinate operations
> from
> `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
> to
> `ENGCRS["unnamed",EDATUM[""],CS[Cartesian,2],AXIS["(E)",east,ORDER[1],LENGTHUNIT["metre",1,ID["EPSG",9001]]],AXIS["(N)",north,ORDER[2],LENGTHUNIT["metre",1,ID["EPSG",9001]]]]'
>
> PDAL: filters.crop: Unable to reproject bounds.
>
>
>
>
>
> Modified pipeline:
>
> [
>
>     {
>
>         "type":"readers.las",
>
>         "filename":"*.las"
>
>     },
>
>     {
>
>         "type": "filters.merge"
>
>     },
>
>     {
>
>         "type":"filters.crop",
>
>         "bounds":"([364035,364085],[142446,142486],[-1000, 1000])"
>
>     },
>
>     {
>
>         "type":"writers.las",
>
>         "filename":"output.las"
>
>     }
>
> ]
>
>
>
> Please advise.
>
>
>
> Thank you.
>
>
>
> Best Regards,
>
>
>
> Peter Lim
>
> *GPS Lands (S) Pte Ltd*
>
>
>
> *From:* Andrew Bell [mailto:andrew.bell.ia at gmail.com]
> *Sent:* Tuesday, 27 April 2021 9:36 pm
> *To:* Kirk Waters - NOAA Federal
> *Cc:* Peter Lim; pdal
> *Subject:* Re: [pdal] (pdal pipeline Error) GDAL failure (6) Cannot find
> coordinate operations from
>
>
>
>
>
> On Tue, Apr 27, 2021 at 8:59 AM Kirk Waters - NOAA Federal <
> kirk.waters at noaa.gov> wrote:
>
> Perhaps I'm missing it, but it doesn't look like there is a transform to
> be done. The input and output codes are the same. Couldn't he just skip
> specifying the SRS?
>
>
>
> No, the input SRS is some ENGCRS. The option "default_srs" that's being
> used in readers.las only applies if the data doesn't already have an SRS.
> You can override the data SRS by using "override_srs", but I'm not sure if
> that's correct or what's intended in this case.
>
>
>
> Your data seems to be in a custom engineering CRS. PDAL can't convert your
> crop boundary from EPSG:32648 to your custom CRS because no transformation
> exists in PROJ, the library used for this purpose. You might ask on the
> PROJ list or perhaps someone else on this list will know how to deal
> with this.
>
>
>
>  I?m using the following pipeline:
>
>
>
> [
>
>     {
>
>         "type":"readers.las",
>
>         "filename":"*.las",
>
>
> "default_srs":"EPSG:32648"
>
>
>     },
>
> ... snipped ...
>
>
>
> --
>
> Andrew Bell
> andrew.bell.ia at gmail.com
>
>
> <https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=emailclient> Virus-free.
> www.avast.com
> <https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=emailclient>
> <#m_-658076429685796966_DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210428/16f22211/attachment.html>

From howard at hobu.co  Wed Apr 28 07:34:26 2021
From: howard at hobu.co (Howard Butler)
Date: Wed, 28 Apr 2021 09:34:26 -0500
Subject: [pdal] Surface modeling
In-Reply-To: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>
References: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>
Message-ID: <062D7228-116C-4844-8E2F-E9F28B3024CF@hobu.co>



> On Apr 27, 2021, at 4:11 PM, Andreas Yankopolus <andreas at yank.to> wrote:
> 
> I?m trying to convert LPC data into surface-height and surface-type rasters, where the surface height captures building/tree height and surface type differentiates between natural and man-made surfaces (similar to the USGS NLCD, but higher resolution). The goal is to use these rasters for radio propagation prediction. I?m using USGS 3DEP LPC data, which has tagged ground returns.
> 
> I?m looking at the first return for surface height, but it clearly needs filtering to remove birds, power lines, and other spurious data. Perhaps there are metrics on return strength, covariance, etc. that could be a basis for removing initial returns.

There are multiple "noise" filters in PDAL that are sensitive to a bunch of different configurations. https://pdal.io/stages/filters.html#noise Combined with filters like filters.iqr, filters.mad,  filters.range and filters.covariancefeatures, you could construct some very sophisticated processing to suss out the kinds of noise that you care to be sensitive too.


> The dimensionality features seem a possibility for differentiating trees and buildings. Worst case, I can use NLCD data here.

One of the HAG filters combined the many neighborhood-type filters would be a good place to start here. 

> Is there previous work in these areas that I can build on with PDAL? I?m also looking at LAStools, which appears to have binaries that could be replicated with PDAL pipelines.

I like to say that "PDAL is something you can use to build LAStools" about its scope in relation to that product. PDAL isn't pre-canned workflows for attacking a few kinds of LiDAR processing challenges. It's a bunch of building blocks for processing point cloud data in the context of ETL pipelines. 

That said, once constructed, those workflows can be quite valuable. Fancy classification pipelines haven't typically been shared freely, however. 

> Ground detection with PDAL and void filling with gdal_fillnodata is giving me a reasonable terrain-height raster. That?s the easiest part of the problem.

filters.smrf is another way to give you a good ground surface if you don't believe the classifications in the 3DEP data. You shouldn't believe the classifications in older 3DEP data ;)

Howard

From runette at gmail.com  Wed Apr 28 08:03:26 2021
From: runette at gmail.com (Paul Harwood)
Date: Wed, 28 Apr 2021 16:03:26 +0100
Subject: [pdal] Delaunay triangulation and python
In-Reply-To: <CAE8nN5NWDwr7P6miYGZvusfSk=6TKc7jwF2uJ6p1dgKgsRViYg@mail.gmail.com>
References: <CAE8nN5OfXK8rGAejE2cib-h8CpAof5=N=RY5se4vZCN2f1sfMQ@mail.gmail.com>
 <CACJ51z3oKbhsEHjtbNBUgqVON34ybG3KxLJDFPRiW1WJKx97ww@mail.gmail.com>
 <CAE8nN5PsW0X9hFXFqsH4_qrk7dmNTZ_Wxfi2iV6-PKztdi70Gg@mail.gmail.com>
 <89816FC4-1F2A-4BC6-B430-E514EDE8A4FE@hobu.co>
 <CAE8nN5NOjMEwMOKVHwyLQ44Xk=CwJ33uFFpu7AzEONu1bBCfnA@mail.gmail.com>
 <CACJ51z2aW47KhB3KHamuPjCE=A_+=PQWjZ3NdXE6sWPm8-6ZKg@mail.gmail.com>
 <CAE8nN5NWDwr7P6miYGZvusfSk=6TKc7jwF2uJ6p1dgKgsRViYg@mail.gmail.com>
Message-ID: <CAE8nN5Oq5=QsNfYgacfXP8qWGMBf7kZX4QUyfK31mbvePvA-1w@mail.gmail.com>

I created a PR with these features. https://github.com/PDAL/python/pull/82

It is WIP - I have not fully tested, have not created any tests and have
nor documented it yet.

But I wanted to get your code review before I go further

Details in the PR https://github.com/PDAL/python/pull/82

I would appreciate all and any comments.

On Mon, 26 Apr 2021 at 14:24, Paul Harwood <runette at gmail.com> wrote:

> Thanks - found it.
>
> On Mon, 26 Apr 2021 at 14:15, Andrew Bell <andrew.bell.ia at gmail.com>
> wrote:
>
>>
>>
>> On Mon, Apr 26, 2021 at 9:03 AM Paul Harwood <runette at gmail.com> wrote:
>>
>>> Thanks Howard
>>>
>>> One more question ... any pointers about to access the face data in the
>>> cpp API?
>>>
>>
>> PointView::mesh()
>>
>> --
>> Andrew Bell
>> andrew.bell.ia at gmail.com
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210428/c9895efd/attachment-0001.html>

From brad.chambers at gmail.com  Wed Apr 28 08:44:53 2021
From: brad.chambers at gmail.com (Bradley Chambers)
Date: Wed, 28 Apr 2021 10:44:53 -0500
Subject: [pdal] Surface modeling
In-Reply-To: <062D7228-116C-4844-8E2F-E9F28B3024CF@hobu.co>
References: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>
 <062D7228-116C-4844-8E2F-E9F28B3024CF@hobu.co>
Message-ID: <CAJyqqPz+5W1dtkKHc4ANAS7nSPk5NK+-ms+ujcQaGO6K4tVY6g@mail.gmail.com>

On Wed, Apr 28, 2021 at 9:34 AM Howard Butler <howard at hobu.co> wrote:

>
> > On Apr 27, 2021, at 4:11 PM, Andreas Yankopolus <andreas at yank.to> wrote:
>
> > Is there previous work in these areas that I can build on with PDAL? I?m
> also looking at LAStools, which appears to have binaries that could be
> replicated with PDAL pipelines.
>
> I like to say that "PDAL is something you can use to build LAStools" about
> its scope in relation to that product. PDAL isn't pre-canned workflows for
> attacking a few kinds of LiDAR processing challenges. It's a bunch of
> building blocks for processing point cloud data in the context of ETL
> pipelines.
>
> That said, once constructed, those workflows can be quite valuable. Fancy
> classification pipelines haven't typically been shared freely, however.


Your mileage will certainly vary, but one pipeline that was derived from
this notebook (
https://github.com/rockestate/point-cloud-processing/blob/master/notebooks/point-cloud-processing.ipynb)
is shared below. It classifies noise, ground, vegetation, and building
returns. In my experience, it does a reasonable job but can still require
fine tuning of the parameters.

[
    {
        "type": "filters.assign",
        "assignment": "Classification[:]=0"
    },
    {
        "type": "filters.elm"
    },
    {
        "type": "filters.smrf",
        "where": "Classification != 7"
    },
    {
        "type": "filters.hag_delaunay"
    },
    {
        "type": "filters.outlier",
        "multiplier": 16,
        "class": 18,
        "where": "!(Classification==2 || Classification==7)"
    },
    {
        "type": "filters.approximatecoplanar",
        "where": "HeightAboveGround >= 2 && !(Classification==2 ||
Classification==7 || Classification==18)"
    },
    {
        "type": "filters.outlier",
        "class": 18,
        "where": "!(Classification==2 || Classification==7 ||
Classification==18) && Coplanar == 1"
    },
    {
        "type": "filters.assign",
        "value": "Classification=6 WHERE (Coplanar == 1 && !(Classification
== 7 || Classification==18))"
    },
    {
        "type": "filters.covariancefeatures",
        "mode": "normalized",
        "feature_set": "Dimensionality",
        "knn": 45
    },
    {
        "type": "filters.assign",
        "value": "Classification=4 WHERE (!(Classification==2 ||
Classification==6) && HeightAboveGround >= 3.0 && Planarity < 0.8 &&
Scattering > 0.1 && Verticality > 0.1)"
    }
]
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210428/cc868544/attachment.html>

From andreas at yank.to  Thu Apr 29 14:00:43 2021
From: andreas at yank.to (Andreas Yankopolus)
Date: Thu, 29 Apr 2021 17:00:43 -0400
Subject: [pdal] Surface modeling
In-Reply-To: <CAJyqqPz+5W1dtkKHc4ANAS7nSPk5NK+-ms+ujcQaGO6K4tVY6g@mail.gmail.com>
References: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>
 <062D7228-116C-4844-8E2F-E9F28B3024CF@hobu.co>
 <CAJyqqPz+5W1dtkKHc4ANAS7nSPk5NK+-ms+ujcQaGO6K4tVY6g@mail.gmail.com>
Message-ID: <D0DE86DD-76F0-4EE9-BFA3-E895F2272E7A@yank.to>

Bradley,

Thanks for your example pipeline. Running it here with pdal 2.2.0, it prints ?Parser error = !? when sent a pipeline with these statements. I?ve tracked the error messages to the blocks with "Classification = 6 WHERE ?? and "Classification = 4 WHERE  ??.

These blocks look valid based one the filters.assign description: https://pdal.io/stages/filters.assign.html

For generating the surface height raster, I?d think to write the point with the highest Z value for the raster pixel. For surface type, perhaps label the raster pixel with the most common point classification. I?ll post a first cut.

Cheers,

Andreas


> On Apr 28, 2021, at 11:44, Bradley Chambers <brad.chambers at gmail.com> wrote:
> 
> On Wed, Apr 28, 2021 at 9:34 AM Howard Butler <howard at hobu.co <mailto:howard at hobu.co>> wrote:
> 
> > On Apr 27, 2021, at 4:11 PM, Andreas Yankopolus <andreas at yank.to <mailto:andreas at yank.to>> wrote:
> 
> > Is there previous work in these areas that I can build on with PDAL? I?m also looking at LAStools, which appears to have binaries that could be replicated with PDAL pipelines.
> 
> I like to say that "PDAL is something you can use to build LAStools" about its scope in relation to that product. PDAL isn't pre-canned workflows for attacking a few kinds of LiDAR processing challenges. It's a bunch of building blocks for processing point cloud data in the context of ETL pipelines. 
> 
> That said, once constructed, those workflows can be quite valuable. Fancy classification pipelines haven't typically been shared freely, however.
> 
> Your mileage will certainly vary, but one pipeline that was derived from this notebook (https://github.com/rockestate/point-cloud-processing/blob/master/notebooks/point-cloud-processing.ipynb <https://github.com/rockestate/point-cloud-processing/blob/master/notebooks/point-cloud-processing.ipynb>) is shared below. It classifies noise, ground, vegetation, and building returns. In my experience, it does a reasonable job but can still require fine tuning of the parameters.
> 
> [
>     {
>         "type": "filters.assign",
>         "assignment": "Classification[:]=0"
>     },
>     {
>         "type": "filters.elm"
>     },
>     {
>         "type": "filters.smrf",
>         "where": "Classification != 7"
>     },
>     {
>         "type": "filters.hag_delaunay"
>     },
>     {
>         "type": "filters.outlier",
>         "multiplier": 16,
>         "class": 18,
>         "where": "!(Classification==2 || Classification==7)"
>     },
>     {
>         "type": "filters.approximatecoplanar",
>         "where": "HeightAboveGround >= 2 && !(Classification==2 || Classification==7 || Classification==18)"
>     },
>     {
>         "type": "filters.outlier",
>         "class": 18,
>         "where": "!(Classification==2 || Classification==7 || Classification==18) && Coplanar == 1"
>     },
>     {
>         "type": "filters.assign",
>         "value": "Classification=6 WHERE (Coplanar == 1 && !(Classification == 7 || Classification==18))"
>     },
>     {
>         "type": "filters.covariancefeatures",
>         "mode": "normalized",
>         "feature_set": "Dimensionality",
>         "knn": 45
>     },
>     {
>         "type": "filters.assign",
>         "value": "Classification=4 WHERE (!(Classification==2 || Classification==6) && HeightAboveGround >= 3.0 && Planarity < 0.8 && Scattering > 0.1 && Verticality > 0.1)"
>     }
> ]

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210429/65be3b52/attachment.html>

From andrew.bell.ia at gmail.com  Thu Apr 29 14:15:25 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 29 Apr 2021 17:15:25 -0400
Subject: [pdal] Surface modeling
In-Reply-To: <D0DE86DD-76F0-4EE9-BFA3-E895F2272E7A@yank.to>
References: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>
 <062D7228-116C-4844-8E2F-E9F28B3024CF@hobu.co>
 <CAJyqqPz+5W1dtkKHc4ANAS7nSPk5NK+-ms+ujcQaGO6K4tVY6g@mail.gmail.com>
 <D0DE86DD-76F0-4EE9-BFA3-E895F2272E7A@yank.to>
Message-ID: <CACJ51z0b8Ztn_5uM9_35aqe_hsLDNUAQZ9YZs=kKHjy_y9vbhQ@mail.gmail.com>

Andreas,

You'd need to open a ticket and include your exact pipeline in order to
debug this, but I suspect there is an error in your syntax. Still, the
error you're getting seems odd.

On Thu, Apr 29, 2021 at 5:01 PM Andreas Yankopolus <andreas at yank.to> wrote:

> Bradley,
>
> Thanks for your example pipeline. Running it here with pdal 2.2.0, it
> prints ?Parser error = !? when sent a pipeline with these statements. I?ve
> tracked the error messages to the blocks with "Classification = 6 WHERE ??
> and "Classification = 4 WHERE  ??.
>
> These blocks look valid based one the filters.assign description:
> https://pdal.io/stages/filters.assign.html
>
> For generating the surface height raster, I?d think to write the point
> with the highest Z value for the raster pixel. For surface type, perhaps
> label the raster pixel with the most common point classification. I?ll post
> a first cut.
>
> Cheers,
>
> Andreas
>
>
> On Apr 28, 2021, at 11:44, Bradley Chambers <brad.chambers at gmail.com>
> wrote:
>
> On Wed, Apr 28, 2021 at 9:34 AM Howard Butler <howard at hobu.co> wrote:
>
>>
>> > On Apr 27, 2021, at 4:11 PM, Andreas Yankopolus <andreas at yank.to>
>> wrote:
>>
>> > Is there previous work in these areas that I can build on with PDAL?
>> I?m also looking at LAStools, which appears to have binaries that could be
>> replicated with PDAL pipelines.
>>
>> I like to say that "PDAL is something you can use to build LAStools"
>> about its scope in relation to that product. PDAL isn't pre-canned
>> workflows for attacking a few kinds of LiDAR processing challenges. It's a
>> bunch of building blocks for processing point cloud data in the context of
>> ETL pipelines.
>>
>> That said, once constructed, those workflows can be quite valuable. Fancy
>> classification pipelines haven't typically been shared freely, however.
>
>
> Your mileage will certainly vary, but one pipeline that was derived from
> this notebook (
> https://github.com/rockestate/point-cloud-processing/blob/master/notebooks/point-cloud-processing.ipynb)
> is shared below. It classifies noise, ground, vegetation, and building
> returns. In my experience, it does a reasonable job but can still require
> fine tuning of the parameters.
>
> [
>     {
>         "type": "filters.assign",
>         "assignment": "Classification[:]=0"
>     },
>     {
>         "type": "filters.elm"
>     },
>     {
>         "type": "filters.smrf",
>         "where": "Classification != 7"
>     },
>     {
>         "type": "filters.hag_delaunay"
>     },
>     {
>         "type": "filters.outlier",
>         "multiplier": 16,
>         "class": 18,
>         "where": "!(Classification==2 || Classification==7)"
>     },
>     {
>         "type": "filters.approximatecoplanar",
>         "where": "HeightAboveGround >= 2 && !(Classification==2 ||
> Classification==7 || Classification==18)"
>     },
>     {
>         "type": "filters.outlier",
>         "class": 18,
>         "where": "!(Classification==2 || Classification==7 ||
> Classification==18) && Coplanar == 1"
>     },
>     {
>         "type": "filters.assign",
>         "value": "Classification=6 WHERE (Coplanar == 1 &&
> !(Classification == 7 || Classification==18))"
>     },
>     {
>         "type": "filters.covariancefeatures",
>         "mode": "normalized",
>         "feature_set": "Dimensionality",
>         "knn": 45
>     },
>     {
>         "type": "filters.assign",
>         "value": "Classification=4 WHERE (!(Classification==2 ||
> Classification==6) && HeightAboveGround >= 3.0 && Planarity < 0.8 &&
> Scattering > 0.1 && Verticality > 0.1)"
>     }
> ]
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210429/089de789/attachment.html>

From brad.chambers at gmail.com  Thu Apr 29 14:21:45 2021
From: brad.chambers at gmail.com (Bradley Chambers)
Date: Thu, 29 Apr 2021 16:21:45 -0500
Subject: [pdal] Surface modeling
In-Reply-To: <CACJ51z0b8Ztn_5uM9_35aqe_hsLDNUAQZ9YZs=kKHjy_y9vbhQ@mail.gmail.com>
References: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>
 <062D7228-116C-4844-8E2F-E9F28B3024CF@hobu.co>
 <CAJyqqPz+5W1dtkKHc4ANAS7nSPk5NK+-ms+ujcQaGO6K4tVY6g@mail.gmail.com>
 <D0DE86DD-76F0-4EE9-BFA3-E895F2272E7A@yank.to>
 <CACJ51z0b8Ztn_5uM9_35aqe_hsLDNUAQZ9YZs=kKHjy_y9vbhQ@mail.gmail.com>
Message-ID: <CAJyqqPzR6Mmjr8gO8LMGhOAVWx-w95VjP734ge1Op0zGyVB0tg@mail.gmail.com>

This may be an error. Do please open a ticket. Still, check your output. I
think I saw this too and noted that it wasn?t actually a fatal error, and
that I actually got the output I expected. Something that needs to be
cleaned up regardless.

On Thu, Apr 29, 2021 at 16:15 Andrew Bell <andrew.bell.ia at gmail.com> wrote:

> Andreas,
>
> You'd need to open a ticket and include your exact pipeline in order to
> debug this, but I suspect there is an error in your syntax. Still, the
> error you're getting seems odd.
>
> On Thu, Apr 29, 2021 at 5:01 PM Andreas Yankopolus <andreas at yank.to>
> wrote:
>
>> Bradley,
>>
>> Thanks for your example pipeline. Running it here with pdal 2.2.0, it
>> prints ?Parser error = !? when sent a pipeline with these statements. I?ve
>> tracked the error messages to the blocks with "Classification = 6 WHERE ??
>> and "Classification = 4 WHERE  ??.
>>
>> These blocks look valid based one the filters.assign description:
>> https://pdal.io/stages/filters.assign.html
>>
>> For generating the surface height raster, I?d think to write the point
>> with the highest Z value for the raster pixel. For surface type, perhaps
>> label the raster pixel with the most common point classification. I?ll post
>> a first cut.
>>
>> Cheers,
>>
>> Andreas
>>
>>
>> On Apr 28, 2021, at 11:44, Bradley Chambers <brad.chambers at gmail.com>
>> wrote:
>>
>> On Wed, Apr 28, 2021 at 9:34 AM Howard Butler <howard at hobu.co> wrote:
>>
>>>
>>> > On Apr 27, 2021, at 4:11 PM, Andreas Yankopolus <andreas at yank.to>
>>> wrote:
>>>
>>> > Is there previous work in these areas that I can build on with PDAL?
>>> I?m also looking at LAStools, which appears to have binaries that could be
>>> replicated with PDAL pipelines.
>>>
>>> I like to say that "PDAL is something you can use to build LAStools"
>>> about its scope in relation to that product. PDAL isn't pre-canned
>>> workflows for attacking a few kinds of LiDAR processing challenges. It's a
>>> bunch of building blocks for processing point cloud data in the context of
>>> ETL pipelines.
>>>
>>> That said, once constructed, those workflows can be quite valuable.
>>> Fancy classification pipelines haven't typically been shared freely,
>>> however.
>>
>>
>> Your mileage will certainly vary, but one pipeline that was derived from
>> this notebook (
>> https://github.com/rockestate/point-cloud-processing/blob/master/notebooks/point-cloud-processing.ipynb)
>> is shared below. It classifies noise, ground, vegetation, and building
>> returns. In my experience, it does a reasonable job but can still require
>> fine tuning of the parameters.
>>
>> [
>>     {
>>         "type": "filters.assign",
>>         "assignment": "Classification[:]=0"
>>     },
>>     {
>>         "type": "filters.elm"
>>     },
>>     {
>>         "type": "filters.smrf",
>>         "where": "Classification != 7"
>>     },
>>     {
>>         "type": "filters.hag_delaunay"
>>     },
>>     {
>>         "type": "filters.outlier",
>>         "multiplier": 16,
>>         "class": 18,
>>         "where": "!(Classification==2 || Classification==7)"
>>     },
>>     {
>>         "type": "filters.approximatecoplanar",
>>         "where": "HeightAboveGround >= 2 && !(Classification==2 ||
>> Classification==7 || Classification==18)"
>>     },
>>     {
>>         "type": "filters.outlier",
>>         "class": 18,
>>         "where": "!(Classification==2 || Classification==7 ||
>> Classification==18) && Coplanar == 1"
>>     },
>>     {
>>         "type": "filters.assign",
>>         "value": "Classification=6 WHERE (Coplanar == 1 &&
>> !(Classification == 7 || Classification==18))"
>>     },
>>     {
>>         "type": "filters.covariancefeatures",
>>         "mode": "normalized",
>>         "feature_set": "Dimensionality",
>>         "knn": 45
>>     },
>>     {
>>         "type": "filters.assign",
>>         "value": "Classification=4 WHERE (!(Classification==2 ||
>> Classification==6) && HeightAboveGround >= 3.0 && Planarity < 0.8 &&
>> Scattering > 0.1 && Verticality > 0.1)"
>>     }
>> ]
>>
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210429/1d79b1df/attachment-0001.html>

From andrew.bell.ia at gmail.com  Thu Apr 29 14:38:53 2021
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 29 Apr 2021 17:38:53 -0400
Subject: [pdal] Surface modeling
In-Reply-To: <CAJyqqPzR6Mmjr8gO8LMGhOAVWx-w95VjP734ge1Op0zGyVB0tg@mail.gmail.com>
References: <D0A6B66F-3A5A-4010-BA60-33FAA93DBD17@yank.to>
 <062D7228-116C-4844-8E2F-E9F28B3024CF@hobu.co>
 <CAJyqqPz+5W1dtkKHc4ANAS7nSPk5NK+-ms+ujcQaGO6K4tVY6g@mail.gmail.com>
 <D0DE86DD-76F0-4EE9-BFA3-E895F2272E7A@yank.to>
 <CACJ51z0b8Ztn_5uM9_35aqe_hsLDNUAQZ9YZs=kKHjy_y9vbhQ@mail.gmail.com>
 <CAJyqqPzR6Mmjr8gO8LMGhOAVWx-w95VjP734ge1Op0zGyVB0tg@mail.gmail.com>
Message-ID: <CACJ51z3=t1kcv53-jjvt_DZPGjiXJP1F+h5Kqf5VHgWiSrjXCg@mail.gmail.com>

For the record, I ran the posted pipeline with no error.

On Thu, Apr 29, 2021 at 5:21 PM Bradley Chambers <brad.chambers at gmail.com>
wrote:

> This may be an error. Do please open a ticket. Still, check your output. I
> think I saw this too and noted that it wasn?t actually a fatal error, and
> that I actually got the output I expected. Something that needs to be
> cleaned up regardless.
>
> On Thu, Apr 29, 2021 at 16:15 Andrew Bell <andrew.bell.ia at gmail.com>
> wrote:
>
>> Andreas,
>>
>> You'd need to open a ticket and include your exact pipeline in order to
>> debug this, but I suspect there is an error in your syntax. Still, the
>> error you're getting seems odd.
>>
>> On Thu, Apr 29, 2021 at 5:01 PM Andreas Yankopolus <andreas at yank.to>
>> wrote:
>>
>>> Bradley,
>>>
>>> Thanks for your example pipeline. Running it here with pdal 2.2.0, it
>>> prints ?Parser error = !? when sent a pipeline with these statements. I?ve
>>> tracked the error messages to the blocks with "Classification = 6 WHERE ??
>>> and "Classification = 4 WHERE  ??.
>>>
>>> These blocks look valid based one the filters.assign description:
>>> https://pdal.io/stages/filters.assign.html
>>>
>>> For generating the surface height raster, I?d think to write the point
>>> with the highest Z value for the raster pixel. For surface type, perhaps
>>> label the raster pixel with the most common point classification. I?ll post
>>> a first cut.
>>>
>>> Cheers,
>>>
>>> Andreas
>>>
>>>
>>> On Apr 28, 2021, at 11:44, Bradley Chambers <brad.chambers at gmail.com>
>>> wrote:
>>>
>>> On Wed, Apr 28, 2021 at 9:34 AM Howard Butler <howard at hobu.co> wrote:
>>>
>>>>
>>>> > On Apr 27, 2021, at 4:11 PM, Andreas Yankopolus <andreas at yank.to>
>>>> wrote:
>>>>
>>>> > Is there previous work in these areas that I can build on with PDAL?
>>>> I?m also looking at LAStools, which appears to have binaries that could be
>>>> replicated with PDAL pipelines.
>>>>
>>>> I like to say that "PDAL is something you can use to build LAStools"
>>>> about its scope in relation to that product. PDAL isn't pre-canned
>>>> workflows for attacking a few kinds of LiDAR processing challenges. It's a
>>>> bunch of building blocks for processing point cloud data in the context of
>>>> ETL pipelines.
>>>>
>>>> That said, once constructed, those workflows can be quite valuable.
>>>> Fancy classification pipelines haven't typically been shared freely,
>>>> however.
>>>
>>>
>>> Your mileage will certainly vary, but one pipeline that was derived from
>>> this notebook (
>>> https://github.com/rockestate/point-cloud-processing/blob/master/notebooks/point-cloud-processing.ipynb)
>>> is shared below. It classifies noise, ground, vegetation, and building
>>> returns. In my experience, it does a reasonable job but can still require
>>> fine tuning of the parameters.
>>>
>>> [
>>>     {
>>>         "type": "filters.assign",
>>>         "assignment": "Classification[:]=0"
>>>     },
>>>     {
>>>         "type": "filters.elm"
>>>     },
>>>     {
>>>         "type": "filters.smrf",
>>>         "where": "Classification != 7"
>>>     },
>>>     {
>>>         "type": "filters.hag_delaunay"
>>>     },
>>>     {
>>>         "type": "filters.outlier",
>>>         "multiplier": 16,
>>>         "class": 18,
>>>         "where": "!(Classification==2 || Classification==7)"
>>>     },
>>>     {
>>>         "type": "filters.approximatecoplanar",
>>>         "where": "HeightAboveGround >= 2 && !(Classification==2 ||
>>> Classification==7 || Classification==18)"
>>>     },
>>>     {
>>>         "type": "filters.outlier",
>>>         "class": 18,
>>>         "where": "!(Classification==2 || Classification==7 ||
>>> Classification==18) && Coplanar == 1"
>>>     },
>>>     {
>>>         "type": "filters.assign",
>>>         "value": "Classification=6 WHERE (Coplanar == 1 &&
>>> !(Classification == 7 || Classification==18))"
>>>     },
>>>     {
>>>         "type": "filters.covariancefeatures",
>>>         "mode": "normalized",
>>>         "feature_set": "Dimensionality",
>>>         "knn": 45
>>>     },
>>>     {
>>>         "type": "filters.assign",
>>>         "value": "Classification=4 WHERE (!(Classification==2 ||
>>> Classification==6) && HeightAboveGround >= 3.0 && Planarity < 0.8 &&
>>> Scattering > 0.1 && Verticality > 0.1)"
>>>     }
>>> ]
>>>
>>>
>>> _______________________________________________
>>> pdal mailing list
>>> pdal at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>>
>>
>>
>> --
>> Andrew Bell
>> andrew.bell.ia at gmail.com
>>
>

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20210429/ebc9783e/attachment.html>

