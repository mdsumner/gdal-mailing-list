From doug_newcomb at fws.gov  Tue Feb  4 09:26:20 2014
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Tue, 4 Feb 2014 12:26:20 -0500
Subject: [pdal] Tagged releases for Hexer and Nitro
In-Reply-To: <4C27B3FC-993D-43D3-8A06-1533EF956CEF@hobu.co>
References: <CA+nQOR9oi4EnEofOuxSUmkjGhot+4OTSJDa8pppk5kTLDs+S+w@mail.gmail.com>
	<4C27B3FC-993D-43D3-8A06-1533EF956CEF@hobu.co>
Message-ID: <CALQGVr3WHogc=dm+uOVjuKwmx0UEA=x7D-6ToZhbutEP2pGpzQ@mail.gmail.com>

Howard,
So, which would you use for large lidar data files  (3 billion + points)
that you want to alter with information from an elevation raster?
Laspy, trying to work around it's desire to load all of the points in
memory at the same time, or the plang option in pdal with pipelines.

Doug




On Wed, Jan 29, 2014 at 12:46 PM, Howard Butler <howard at hobu.co> wrote:

>
> On Jan 29, 2014, at 11:26 AM, Larry Shaffer <larrys at dakotacarto.com>
> wrote:
>
> > Hello,
> >
> > First off, thanks for all your work on PDAL. I especially look forward
> to trying out the new Postgres/PostGIS integration.
>
> Paul Ramsey did all the Postgres work. I have done some work recently to
> speed up the Postgresql stuff with some surprising results. I hope to cook
> up an email to the list or update the pg docs for posterity in the future
> on that item once I'm done.
>
> >
> > After a recent (and ongoing) discussion about somehow integrating LiDAR
> data into QGIS on the QGIS-dev mailing list [0], I went about revamping the
> minimal Mac Homebrew PDAL formula [1] to include many more options [2] and
> added formulae for Hexer [3] and Nitro [4].
>
> I have joined the list and when more questions come up about PDAL, I'd be
> happy to join in. I must admit that PDAL is intended to be useful for GUI
> developers, but only in the sense of a data access/translation and light
> duty processing library. In practice, it is very possible there are sticky
> points for people looking to use PDAL inside of GUI apps due to the fact
> that most of my development is focused on processing/translation pipelines
> rather than feeding data to a window. That said, I hope it to be useful for
> those tasks, and as more people jump in and start using PDAL, I expect that
> aspect of it to get beefier.
>
> I read on the lists logs about some questions about libLAS, LASlib, and
> PDAL. I hope to clarify some of that murkiness. PDAL is the successor to
> libLAS, which itself was a reaction to LASlib not being available under an
> open source license at the time. libLAS is essentially a maintenance-only
> library at this time, and PDAL contains nearly all the functionality that
> libLAS had, except for the ability to manipulate LAS data with Python. That
> feature's now covered much better by http://www.laspy.org.  PDAL is very
> much intended to be like GDAL except in the point cloud format domain.
> LASlib is now straight LGPL and has a fantastic toolbox of functionality
> that is poorly integrated into existing systems. It also has no release
> mechanism, github repository, or other open source accouterments.  PDAL
> aims to stay out of LASlib's niche to provide data access and format
> translation as its primary capability.
>
> >
> > Currently, Hexer and Nitro do not have any tagged releases. This
> presents a roadblock for submitting their formulae upstream to the main
> Homebrew repository (aka a 'tap'), since one of the 'acceptable formula'
> criteria is that the formula not be HEAD-only. From the CMakeLists.txt for
> Hexer I see it is set to a 1.0.1 version, while Nitro appears to be at 2.7
> (?).
>
> PDAL is *very* close to a 1.0.0 release. I have a few more items that I
> want to clean up before I release 1.0.0 and signal that I'm interested in
> folks coming along for real and kicking the tires. I appreciate the PDAL
> homebrew update. I had been meaning to do that but have't had time yet.
>
> I'll create a hexer 1.0.1 tag today and make sure that the CMake
> configuration is up to date with it.
>
> Nitro is not something that is generally needed. Nitro is for reading NITF
> files, and there is a DoD lidar format that stores LAS files inside of NITF
> containers (it is as awful as you think it would be). The PDAL Nitro
> configuration is for that specific format. I don't know how generally
> useful it would be. The Nitro fork that I maintain is due to the fact that
> the maintainer wasn't interested in either collaborating on github or in
> cmake configuration for the library. I do not wish to materially fork the
> library in any way except to make the integration easier with my own
> CMake-based metabuild system.
>
>
> > Could you possibly tag both of those repos so that those formula can be
> submitted upstream?
> >
> >
> > Btw, any input to the QGIS-dev mailing list on how PDAL might be used
> with QGIS would be appreciated. The three main options would be: via GDAL
> support, as a separate data provider, and/or utilizing its command line
> utilities via the Processing plugin provider.
>
> I'll be happy to answer a question on that via the qgis list.
>
> >
> > The Processing plugin provider is straightforward to do, as it only
> requires modest Python scripting to implement [5]. LASTools and Fusion have
> been incorporated already [6], but they are basically Windows-only
> utilities, having very limited functionality on other platforms.
> >
> >
> > [0]
> http://osgeo-org.1560.x6.nabble.com/Lidar-data-into-QGIS-td5100547.html
> >
> > [1]
> https://github.com/Homebrew/homebrew/blob/master/Library/Formula/pdal.rb
> > [2]
> https://github.com/dakcarto/homebrew-osgeo4mac/blob/master/Formula/pdal.rb(work in progress)
> > [3]
> https://github.com/dakcarto/homebrew-osgeo4mac/blob/master/Formula/hexer.rb
> > [4]
> https://github.com/dakcarto/homebrew-osgeo4mac/blob/master/Formula/nitro.rb
> >
> > [5]
> https://github.com/qgis/QGIS/tree/master/python/plugins/processing/exampleprovider
> > [6]
> https://github.com/qgis/QGIS/tree/master/python/plugins/processing/lidar
> >
> > Best regards,
> >
> > Larry Shaffer
> > Dakota Cartography
> > Black Hills, South Dakota
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/pdal
>



-- 
Doug Newcomb
USFWS
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov
---------------------------------------------------------------------------------------------------------
The opinions I express are my own and are not representative of the
official policy of the U.S.Fish and Wildlife Service or Dept. of the
Interior.   Life is too short for undocumented, proprietary data formats.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20140204/5379ffd1/attachment.html>

From doug_newcomb at fws.gov  Wed Feb  5 05:13:41 2014
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Wed, 5 Feb 2014 08:13:41 -0500
Subject: [pdal] Tagged releases for Hexer and Nitro
In-Reply-To: <CALQGVr3WHogc=dm+uOVjuKwmx0UEA=x7D-6ToZhbutEP2pGpzQ@mail.gmail.com>
References: <CA+nQOR9oi4EnEofOuxSUmkjGhot+4OTSJDa8pppk5kTLDs+S+w@mail.gmail.com>
	<4C27B3FC-993D-43D3-8A06-1533EF956CEF@hobu.co>
	<CALQGVr3WHogc=dm+uOVjuKwmx0UEA=x7D-6ToZhbutEP2pGpzQ@mail.gmail.com>
Message-ID: <CALQGVr1gRba18qkwGTLc_4v9KWAz2rQ_Ay7PdcARyLREuCTYJA@mail.gmail.com>

Sorry about that,
I appreciate all of the great work done on creating the liblas,laspy, and
pdal software.  As an occasional python scripter, I'm still trying to work
my way through the documentation.

Doug


On Tue, Feb 4, 2014 at 12:26 PM, Newcomb, Doug <doug_newcomb at fws.gov> wrote:

> Howard,
> So, which would you use for large lidar data files  (3 billion + points)
> that you want to alter with information from an elevation raster?
> Laspy, trying to work around it's desire to load all of the points in
> memory at the same time, or the plang option in pdal with pipelines.
>
> Doug
>
>
>
>
> On Wed, Jan 29, 2014 at 12:46 PM, Howard Butler <howard at hobu.co> wrote:
>
>>
>> On Jan 29, 2014, at 11:26 AM, Larry Shaffer <larrys at dakotacarto.com>
>> wrote:
>>
>> > Hello,
>> >
>> > First off, thanks for all your work on PDAL. I especially look forward
>> to trying out the new Postgres/PostGIS integration.
>>
>> Paul Ramsey did all the Postgres work. I have done some work recently to
>> speed up the Postgresql stuff with some surprising results. I hope to cook
>> up an email to the list or update the pg docs for posterity in the future
>> on that item once I'm done.
>>
>> >
>> > After a recent (and ongoing) discussion about somehow integrating LiDAR
>> data into QGIS on the QGIS-dev mailing list [0], I went about revamping the
>> minimal Mac Homebrew PDAL formula [1] to include many more options [2] and
>> added formulae for Hexer [3] and Nitro [4].
>>
>> I have joined the list and when more questions come up about PDAL, I'd be
>> happy to join in. I must admit that PDAL is intended to be useful for GUI
>> developers, but only in the sense of a data access/translation and light
>> duty processing library. In practice, it is very possible there are sticky
>> points for people looking to use PDAL inside of GUI apps due to the fact
>> that most of my development is focused on processing/translation pipelines
>> rather than feeding data to a window. That said, I hope it to be useful for
>> those tasks, and as more people jump in and start using PDAL, I expect that
>> aspect of it to get beefier.
>>
>> I read on the lists logs about some questions about libLAS, LASlib, and
>> PDAL. I hope to clarify some of that murkiness. PDAL is the successor to
>> libLAS, which itself was a reaction to LASlib not being available under an
>> open source license at the time. libLAS is essentially a maintenance-only
>> library at this time, and PDAL contains nearly all the functionality that
>> libLAS had, except for the ability to manipulate LAS data with Python. That
>> feature's now covered much better by http://www.laspy.org.  PDAL is very
>> much intended to be like GDAL except in the point cloud format domain.
>> LASlib is now straight LGPL and has a fantastic toolbox of functionality
>> that is poorly integrated into existing systems. It also has no release
>> mechanism, github repository, or other open source accouterments.  PDAL
>> aims to stay out of LASlib's niche to provide data access and format
>> translation as its primary capability.
>>
>> >
>> > Currently, Hexer and Nitro do not have any tagged releases. This
>> presents a roadblock for submitting their formulae upstream to the main
>> Homebrew repository (aka a 'tap'), since one of the 'acceptable formula'
>> criteria is that the formula not be HEAD-only. From the CMakeLists.txt for
>> Hexer I see it is set to a 1.0.1 version, while Nitro appears to be at 2.7
>> (?).
>>
>> PDAL is *very* close to a 1.0.0 release. I have a few more items that I
>> want to clean up before I release 1.0.0 and signal that I'm interested in
>> folks coming along for real and kicking the tires. I appreciate the PDAL
>> homebrew update. I had been meaning to do that but have't had time yet.
>>
>> I'll create a hexer 1.0.1 tag today and make sure that the CMake
>> configuration is up to date with it.
>>
>> Nitro is not something that is generally needed. Nitro is for reading
>> NITF files, and there is a DoD lidar format that stores LAS files inside of
>> NITF containers (it is as awful as you think it would be). The PDAL Nitro
>> configuration is for that specific format. I don't know how generally
>> useful it would be. The Nitro fork that I maintain is due to the fact that
>> the maintainer wasn't interested in either collaborating on github or in
>> cmake configuration for the library. I do not wish to materially fork the
>> library in any way except to make the integration easier with my own
>> CMake-based metabuild system.
>>
>>
>> > Could you possibly tag both of those repos so that those formula can be
>> submitted upstream?
>> >
>> >
>> > Btw, any input to the QGIS-dev mailing list on how PDAL might be used
>> with QGIS would be appreciated. The three main options would be: via GDAL
>> support, as a separate data provider, and/or utilizing its command line
>> utilities via the Processing plugin provider.
>>
>> I'll be happy to answer a question on that via the qgis list.
>>
>> >
>> > The Processing plugin provider is straightforward to do, as it only
>> requires modest Python scripting to implement [5]. LASTools and Fusion have
>> been incorporated already [6], but they are basically Windows-only
>> utilities, having very limited functionality on other platforms.
>> >
>> >
>> > [0]
>> http://osgeo-org.1560.x6.nabble.com/Lidar-data-into-QGIS-td5100547.html
>> >
>> > [1]
>> https://github.com/Homebrew/homebrew/blob/master/Library/Formula/pdal.rb
>> > [2]
>> https://github.com/dakcarto/homebrew-osgeo4mac/blob/master/Formula/pdal.rb(work in progress)
>> > [3]
>> https://github.com/dakcarto/homebrew-osgeo4mac/blob/master/Formula/hexer.rb
>> > [4]
>> https://github.com/dakcarto/homebrew-osgeo4mac/blob/master/Formula/nitro.rb
>> >
>> > [5]
>> https://github.com/qgis/QGIS/tree/master/python/plugins/processing/exampleprovider
>> > [6]
>> https://github.com/qgis/QGIS/tree/master/python/plugins/processing/lidar
>> >
>> > Best regards,
>> >
>> > Larry Shaffer
>> > Dakota Cartography
>> > Black Hills, South Dakota
>>
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/pdal
>>
>
>
>
> --
> Doug Newcomb
> USFWS
> Raleigh, NC
> 919-856-4520 ext. 14 doug_newcomb at fws.gov
>
> ---------------------------------------------------------------------------------------------------------
> The opinions I express are my own and are not representative of the
> official policy of the U.S.Fish and Wildlife Service or Dept. of the
> Interior.   Life is too short for undocumented, proprietary data formats.
>



-- 
Doug Newcomb
USFWS
Raleigh, NC
919-856-4520 ext. 14 doug_newcomb at fws.gov
---------------------------------------------------------------------------------------------------------
The opinions I express are my own and are not representative of the
official policy of the U.S.Fish and Wildlife Service or Dept. of the
Interior.   Life is too short for undocumented, proprietary data formats.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20140205/dd40fb47/attachment.html>

From howard at hobu.co  Wed Feb  5 06:47:17 2014
From: howard at hobu.co (Howard Butler)
Date: Wed, 5 Feb 2014 08:47:17 -0600
Subject: [pdal] Tagged releases for Hexer and Nitro
In-Reply-To: <CALQGVr1gRba18qkwGTLc_4v9KWAz2rQ_Ay7PdcARyLREuCTYJA@mail.gmail.com>
References: <CA+nQOR9oi4EnEofOuxSUmkjGhot+4OTSJDa8pppk5kTLDs+S+w@mail.gmail.com>
	<4C27B3FC-993D-43D3-8A06-1533EF956CEF@hobu.co>
	<CALQGVr3WHogc=dm+uOVjuKwmx0UEA=x7D-6ToZhbutEP2pGpzQ@mail.gmail.com>
	<CALQGVr1gRba18qkwGTLc_4v9KWAz2rQ_Ay7PdcARyLREuCTYJA@mail.gmail.com>
Message-ID: <CB11D8DD-C2DB-4E0D-B560-D7A312413DAB@hobu.co>

Hmm, I don't know what you're sorry about :)

I think it should be possible to do this through a filters.programmable that modifies the Z values with a (raw) value fetched from a GDAL raster through gdal.py. It's definitely not going to be fast, but it should be possible.

Howard

On Feb 5, 2014, at 7:13 AM, Newcomb, Doug <doug_newcomb at fws.gov> wrote:

> Sorry about that,
> I appreciate all of the great work done on creating the liblas,laspy, and pdal software.  As an occasional python scripter, I'm still trying to work my way through the documentation.
> 
> Doug
> 
> 
> On Tue, Feb 4, 2014 at 12:26 PM, Newcomb, Doug <doug_newcomb at fws.gov> wrote:
> Howard,
> So, which would you use for large lidar data files  (3 billion + points) that you want to alter with information from an elevation raster?
> Laspy, trying to work around it's desire to load all of the points in memory at the same time, or the plang option in pdal with pipelines.  


From howard at hobu.co  Mon Feb 10 09:38:22 2014
From: howard at hobu.co (Howard Butler)
Date: Mon, 10 Feb 2014 11:38:22 -0600
Subject: [pdal] [pgpointcloud] Overlapping patches
In-Reply-To: <1028A438A413864986A56156E3C5770001096937AD@EXMBX1.hrw-uk.local>
References: <1028A438A413864986A56156E3C577000109691A92@EXMBX1.hrw-uk.local>
	<etPan.52ea7433.628c895d.11035@Butterfly.local>
	<1028A438A413864986A56156E3C577000109691C29@EXMBX1.hrw-uk.local>
	<0F174520-9273-4B2D-8B70-C587E8C6C2D4@hobu.co>
	<1028A438A413864986A56156E3C577000109691D05@EXMBX1.hrw-uk.local>
	<CB3D519F-2D1F-4964-8E7A-D809A26CA781@hobu.co>
	<1028A438A413864986A56156E3C5770001096937AD@EXMBX1.hrw-uk.local>
Message-ID: <9C1761B5-EDC0-4AE7-B46C-C31D9FD82876@hobu.co>


On Feb 10, 2014, at 11:35 AM, Nilesh Vyavahare <Nilesh.Vyavahare at SeaZone.com> wrote:

> Hi Howard,
> 
> Sorry for the delayed reply. I was away for a week.
> 
> Your guess is absolutely right. The scaling and selector filters are causing the overlapping patches. I ran the pipeline again for a pc schema that holds all the attributes without the selector and scaling filter in the pipeline and the resultant patches are non-overlapping!
> 
> I am not sure what the best around this problem is. The one I could think of for now is, I might have to load the las file into some temporary table with all the dimensions which points to default pc schema  and them transfer each patch into my destination table with selected dimensions.

One option is to use a filters.selector to force a bunch of files of different schemas to a common one to load into pgpointcloud.  Please take a step back and try to describe what you're trying to do, and I'll try to give you a pipeline scenario that can do what you want.

Howard
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20140210/bac02177/attachment.pgp>

From howard at hobu.co  Mon Feb 10 10:54:39 2014
From: howard at hobu.co (Howard Butler)
Date: Mon, 10 Feb 2014 12:54:39 -0600
Subject: [pdal] Embedded Boost is now off by default
Message-ID: <22D8CD05-F469-4677-86BD-9F5C2D738182@hobu.co>

All,

This note is mostly for posterity, but as we march toward the impending release date of PDAL 1.0.0, I wanted to make a policy change in PDAL's embedded Boost usage. Previously by default, PDAL used its embedded and namespaced Boost copy when building from source. This is super convenient, especially in Windows land, but other places as well. 

There is some problems with it, however. If any library that wishes to link PDAL uses its own or system Boost, there can be significant clashes because of mismatches in include files. There's no clean way to tell the person doing the linking what they should do and how they should link to PDAL to get all of the symbols they might need. Because of this hassle, the default PDAL build configuration is to *not* build with the embedded Boost. You should use the embedded Boost configuration when you want to get going quickly, or when you want to use PDAL for essentially the command-line utilities only where no external linking of PDAL will happen. 

Howard
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20140210/a99e27b0/attachment.pgp>

