From mateusz at loskot.net  Fri Jul  1 12:12:58 2016
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 1 Jul 2016 21:12:58 +0200
Subject: [pdal] PDAL 1.2 compilation on Windows
In-Reply-To: <2E885BB293AF0448A0181138489E9A0E79E64086@S000014.PROD.SITAD.DK>
References: <DBXPR04MB4641EABDFD5F38124BB20D3CE240@DBXPR04MB464.eurprd04.prod.outlook.com>
 <CABUeae8Xrs7Fibq0p6ZTFTFYcUAXAi9dCidDa=17tKy+GVqn1g@mail.gmail.com>
 <2E885BB293AF0448A0181138489E9A0E79E64086@S000014.PROD.SITAD.DK>
Message-ID: <CABUeae_9bgWRU-Xx58QVDeTmCVDVnr5wz9MCRKu-f+ScOj2ttQ@mail.gmail.com>

On 30 June 2016 at 13:10, Kristian Evers <kreve at sdfe.dk> wrote:
> Generally the windows build documentation could use a big overhaul.

I'm sure PR would be very welcomed. Meanwhile,...

> 1. Minor details:
>     a. Thereâ€™s no â€™gdal-devâ€™ package at this time in OSGeo4W64.

developers may refer to which builds using VS2015 and OSGeo4W64
https://github.com/PDAL/PDAL/blob/master/appveyor.yml
Specifically, line 46 shows list of essential packages:

- C:\temp\osgeo4w-setup.exe -q -k -r -A -s
http://download.osgeo.org/osgeo4w/ -a x86_64 -P
boost-devel,eigen,gdal,geos,hexer,iconv,laszip,libgeotiff,libpq,libtiff,libxml2,nitro,pcl,points2grid,proj,python-numpy,zlib
-R %OSGEO4W_ROOT% > NUL

Notice, it is gdal, not gdal-dev.

> 2. No problem
>
> 3. Some problems:
>     a. mkdir PDAL\build
>     b. Remember to initialize vsvars32.bat

No need, if you launch the proper command prompt, for example
"VS2015 x64 Native Tools Command Prompt"

>     c. call ./cmake/examples/hobu-windows.bat
>     d. No CXX and C compiler: Need to make sure that Visual Studio is compiled with C++ libraries!

"Visual Studio is compiled with C++ libraries!" that sounds a bit
confusing to me.


>    f.  Boost libraries in OSGeo4W64 does not work with VS2015. Most recent boost does not play well with cmake. Boost 1.59 seems to be the best option.

This should not be an issue, see appveyor.yml and the actual builds:
https://ci.appveyor.com/project/hobu/pdal
Besides, PDAL hosts copy of required Boost libraries in pdal/vendor/pdalboost


> And thatâ€™s as far as I got at the time. It might not be relevant anymore, but I'm sharing it here in case it helps someone.

Thanks for that indeed, but PR would be a better fit.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From kreve at sdfe.dk  Fri Jul  1 14:55:04 2016
From: kreve at sdfe.dk (Kristian Evers)
Date: Fri, 1 Jul 2016 21:55:04 +0000
Subject: [pdal] PDAL 1.2 compilation on Windows
In-Reply-To: <CABUeae_9bgWRU-Xx58QVDeTmCVDVnr5wz9MCRKu-f+ScOj2ttQ@mail.gmail.com>
References: <DBXPR04MB4641EABDFD5F38124BB20D3CE240@DBXPR04MB464.eurprd04.prod.outlook.com>
 <CABUeae8Xrs7Fibq0p6ZTFTFYcUAXAi9dCidDa=17tKy+GVqn1g@mail.gmail.com>
 <2E885BB293AF0448A0181138489E9A0E79E64086@S000014.PROD.SITAD.DK>,
 <CABUeae_9bgWRU-Xx58QVDeTmCVDVnr5wz9MCRKu-f+ScOj2ttQ@mail.gmail.com>
Message-ID: <2E885BB293AF0448A0181138489E9A0E79E6473F@S000014.PROD.SITAD.DK>

Sure, a PR would be lovely, but since I never got to a point where that would make sense i didn't do one :) Since then I haven't had the time and motivation to carry one with this. 

Regarding the "Visual Studio compiled with C++ libraries", I must been very frustrated at the time and written the completely wrong word. What I meant was "make sure to check off C++ libraries when installing Visual Studio". I forgot to do that at first, and was confused by the missing C++ abilities.

The rest of your comments should make it easier to succeed with windows compilation. If I ever give a go again I'll make sure to write a new version of the windows build instructions.

/Kristian
________________________________________
Fra: Mateusz Loskot [mateusz at loskot.net]
Sendt: 1. juli 2016 21:12
Til: Kristian Evers
Cc: pdal at lists.osgeo.org
Emne: Re: [pdal] PDAL 1.2 compilation on Windows

On 30 June 2016 at 13:10, Kristian Evers <kreve at sdfe.dk> wrote:
> Generally the windows build documentation could use a big overhaul.

I'm sure PR would be very welcomed. Meanwhile,...

> 1. Minor details:
>     a. Thereâ€™s no â€™gdal-devâ€™ package at this time in OSGeo4W64.

developers may refer to which builds using VS2015 and OSGeo4W64
https://github.com/PDAL/PDAL/blob/master/appveyor.yml
Specifically, line 46 shows list of essential packages:

- C:\temp\osgeo4w-setup.exe -q -k -r -A -s
http://download.osgeo.org/osgeo4w/ -a x86_64 -P
boost-devel,eigen,gdal,geos,hexer,iconv,laszip,libgeotiff,libpq,libtiff,libxml2,nitro,pcl,points2grid,proj,python-numpy,zlib
-R %OSGEO4W_ROOT% > NUL

Notice, it is gdal, not gdal-dev.

> 2. No problem
>
> 3. Some problems:
>     a. mkdir PDAL\build
>     b. Remember to initialize vsvars32.bat

No need, if you launch the proper command prompt, for example
"VS2015 x64 Native Tools Command Prompt"

>     c. call ./cmake/examples/hobu-windows.bat
>     d. No CXX and C compiler: Need to make sure that Visual Studio is compiled with C++ libraries!

"Visual Studio is compiled with C++ libraries!" that sounds a bit
confusing to me.


>    f.  Boost libraries in OSGeo4W64 does not work with VS2015. Most recent boost does not play well with cmake. Boost 1.59 seems to be the best option.

This should not be an issue, see appveyor.yml and the actual builds:
https://ci.appveyor.com/project/hobu/pdal
Besides, PDAL hosts copy of required Boost libraries in pdal/vendor/pdalboost


> And thatâ€™s as far as I got at the time. It might not be relevant anymore, but I'm sharing it here in case it helps someone.

Thanks for that indeed, but PR would be a better fit.

Best regards,
--
Mateusz Loskot, http://mateusz.loskot.net

From o.rubi at esciencecenter.nl  Tue Jul  5 01:26:15 2016
From: o.rubi at esciencecenter.nl (Oscar Martinez Rubi)
Date: Tue, 5 Jul 2016 08:26:15 +0000
Subject: [pdal] las2pg and las2col
Message-ID: <HE1PR04MB1178217839D5719140E82C0181390@HE1PR04MB1178.eurprd04.prod.outlook.com>

Hi,

We have added in liblas (master branch in github) two new tools that maybe useful for DB users:


-          las2pg: converts a LAS/LAZ into PostgreSQL binary dump format. It can be used for faster flat (1 point per row) data insertion in PostgreSQL. This is useful when you use flat tables for your point clouds (not recommended for large point clouds) of if you want to create pc_patches in a custom manner (other than what PDAL does). It is the alternative to making the insert with las2txt (essentially binary is faster than ASCII). Example of usage:

psql -c "create table flat (x double precision, y double precision, z double precision, r integer, g integer, b integer, i integer)"
las2pg -i 1.2-with-color.laz --parse xyzRGBi --stdout | psql -c "copy flat from stdin with binary"



-          las2col: similarly to las2pg, this tool converts a LAS/LAZ into binary columnar files to be imported in the column-store MonetDB (https://www.monetdb.org/). Example of usage:

las2col -i 1.2-with-color.laz -o out --parse XYZi
mclient <db_name> -s "create table flat (x decimal(8,2), y decimal(8,2), z decimal(8,2), i smallint)"
mclient <db_name> -s "COPY BINARY INTO flat FROM ('<full_parent_path>/out_col_x.dat','<full_parent_path>/out_col_y.dat','<full_parent_path>/out_col_z.dat','<full_parent_path>/out_col_i.dat')"

If time permits, we will add similar writers in PDAL, so the same functionality is available through PDAL ðŸ˜Š

Kind Regards,

O.

| 4th National eScience Symposium | Science in a Digital World |
| 13 October 2016 | https://www.esciencecenter.nl/event/4th-national-escience-symposium |

| Oscar Martinez Rubi | eScience Engineer | o.rubi at esciencecenter.nl |
| Netherlands eScience Center | http://www.esciencecenter.nl | T +31 (0) 6-10363806 |

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20160705/bdb64ba2/attachment.html>

From remi.cura at gmail.com  Tue Jul  5 05:08:57 2016
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Tue, 5 Jul 2016 14:08:57 +0200
Subject: [pdal] las2pg and las2col
In-Reply-To: <HE1PR04MB1178217839D5719140E82C0181390@HE1PR04MB1178.eurprd04.prod.outlook.com>
References: <HE1PR04MB1178217839D5719140E82C0181390@HE1PR04MB1178.eurprd04.prod.outlook.com>
Message-ID: <CAJvUf_t-_JeaaM6dD5=8pBJtnS_+jc3fYPDDVxo-d3GfMKcoiw@mail.gmail.com>

Hey,
this is a really great functionality !
I wonder how much faster it is (you said about 10x, which is super cool).

Cheers,
RÃ©mi-C

2016-07-05 10:26 GMT+02:00 Oscar Martinez Rubi <o.rubi at esciencecenter.nl>:

> Hi,
>
>
>
> We have added in liblas (master branch in github) two new tools that maybe
> useful for DB users:
>
>
>
> -          las2pg: converts a LAS/LAZ into PostgreSQL binary dump format.
> It can be used for faster flat (1 point per row) data insertion in
> PostgreSQL. This is useful when you use flat tables for your point clouds
> (not recommended for large point clouds) of if you want to create
> pc_patches in a custom manner (other than what PDAL does). It is the
> alternative to making the insert with las2txt (essentially binary is faster
> than ASCII). Example of usage:
>
>
>
> psql -c "create table flat (x double precision, y double precision, z
> double precision, r integer, g integer, b integer, i integer)"
>
> las2pg -i 1.2-with-color.laz --parse xyzRGBi --stdout | psql -c "copy flat
> from stdin with binary"
>
>
>
>
>
> -          las2col: similarly to las2pg, this tool converts a LAS/LAZ
> into binary columnar files to be imported in the column-store MonetDB (
> https://www.monetdb.org/). Example of usage:
>
>
>
> las2col -i 1.2-with-color.laz -o out --parse XYZi
>
> mclient <db_name> -s "create table flat (x decimal(8,2), y decimal(8,2), z
> decimal(8,2), i smallint)"
>
> mclient <db_name> -s "COPY BINARY INTO flat FROM
> ('<full_parent_path>/out_col_x.dat','<full_parent_path>/out_col_y.dat','<full_parent_path>/out_col_z.dat','<full_parent_path>/out_col_i.dat')"
>
>
>
> If time permits, we will add similar writers in PDAL, so the same
> functionality is available through PDAL ðŸ˜Š
>
>
>
> Kind Regards,
>
>
>
> O.
>
>
>
> | 4th National eScience Symposium | Science in a Digital World |
> | 13 October 2016 |
> https://www.esciencecenter.nl/event/4th-national-escience-symposium |
>
> | Oscar Martinez Rubi | eScience Engineer | o.rubi at esciencecenter.nl |
> | Netherlands eScience Center | http://www.esciencecenter.nl | T +31 (0)
> 6-10363806 |
>
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20160705/a6503dc8/attachment.html>

From howard at hobu.co  Wed Jul  6 08:04:22 2016
From: howard at hobu.co (Howard Butler)
Date: Wed, 6 Jul 2016 10:04:22 -0500
Subject: [pdal] lazperf Python support
Message-ID: <9C68F5D3-F773-4008-B089-29172BF9A8E5@hobu.co>

All,

Hopefully this topic is interesting to you. In an effort to make it more convenient to use LAZ-style compression with other formats, we have developed a library that provides an alternate implementation of LAZ called lazperf. We have been using this for compression with PDAL database drivers [1] and over-the-wire compression of HTTP requests with Greyhound [2]. 

lazperf is also available in JavaScript and C++, and the addition of a Python implementation rounds out the ecosystem to make it convenient for people to use it. Think of this style of compression as LAZ minus the LAS model. It isn't as efficient as LAZ, but it does about the same as LZMA in space in addition to being significantly faster [3]. 

I hope to add actual LAZ support via this mechanism to the Python bindings to allow libraries such as laspy [4] to take advantage. There's a bit more work to do on that topic, however. See the test suite [4] for examples how to use it, and happy compressing!

Howard

[1] http://www.pdal.io/stages/writers.oci.html
[2] https://github.com/hobu/greyhound
[3] https://github.com/pgpointcloud/pointcloud/pull/105#issuecomment-225012856
[4] https://github.com/hobu/laz-perf/blob/master/python/test/test_lazperf.py

From j.chatillon at aerodata-surveys.com  Thu Jul  7 03:03:16 2016
From: j.chatillon at aerodata-surveys.com (=?utf-8?B?SsOpcsO0bWUgQ2hhdGlsbG9u?=)
Date: Thu, 7 Jul 2016 10:03:16 +0000
Subject: [pdal] PDAL 1.2 compilation on Windows
Message-ID: <DB6PR0401MB264614E127A38B335833F17ECE3B0@DB6PR0401MB2646.eurprd04.prod.outlook.com>

Hi,

So, if I understand you right, it would be possible to compile PDAL 1.2 with Visual Studio 2015 64bits (MSVC++ 14.0, _MSC_VER=1900) using the dependencies libraries provided by OSGE04W64 ?

I didn't dare to try fearing the famous message: "error: LNK2038: mismatch detected for _MSC_VER"...

If not, I need to have all dependencies compile with Visual Studio 2015 64bits (MSVC++ 14.0, _MSC_VER=1900), Right ? Is it me or it's a hell of a job ? :'(

Jerome

-----Original Message-----
From: pdal [mailto:pdal-bounces at lists.osgeo.org] On Behalf Of pdal-request at lists.osgeo.org
Sent: 02 July 2016 21:00
To: pdal at lists.osgeo.org
Subject: pdal Digest, Vol 55, Issue 1

Send pdal mailing list submissions to
	pdal at lists.osgeo.org

To subscribe or unsubscribe via the World Wide Web, visit
	http://lists.osgeo.org/mailman/listinfo/pdal
or, via email, send a message with subject or body 'help' to
	pdal-request at lists.osgeo.org

You can reach the person managing the list at
	pdal-owner at lists.osgeo.org

When replying, please edit your Subject line so it is more specific than "Re: Contents of pdal digest..."


Today's Topics:

   1. Re: PDAL 1.2 compilation on Windows (Mateusz Loskot)
   2. Re: PDAL 1.2 compilation on Windows (Kristian Evers)


----------------------------------------------------------------------

Message: 1
Date: Fri, 1 Jul 2016 21:12:58 +0200
From: Mateusz Loskot <mateusz at loskot.net>
To: Kristian Evers <kreve at sdfe.dk>
Cc: "pdal at lists.osgeo.org" <pdal at lists.osgeo.org>
Subject: Re: [pdal] PDAL 1.2 compilation on Windows
Message-ID:
	<CABUeae_9bgWRU-Xx58QVDeTmCVDVnr5wz9MCRKu-f+ScOj2ttQ at mail.gmail.com>
Content-Type: text/plain; charset=UTF-8

On 30 June 2016 at 13:10, Kristian Evers <kreve at sdfe.dk> wrote:
> Generally the windows build documentation could use a big overhaul.

I'm sure PR would be very welcomed. Meanwhile,...

> 1. Minor details:
>     a. Thereâ€™s no â€™gdal-devâ€™ package at this time in OSGeo4W64.

developers may refer to which builds using VS2015 and OSGeo4W64 https://github.com/PDAL/PDAL/blob/master/appveyor.yml
Specifically, line 46 shows list of essential packages:

- C:\temp\osgeo4w-setup.exe -q -k -r -A -s http://download.osgeo.org/osgeo4w/ -a x86_64 -P boost-devel,eigen,gdal,geos,hexer,iconv,laszip,libgeotiff,libpq,libtiff,libxml2,nitro,pcl,points2grid,proj,python-numpy,zlib
-R %OSGEO4W_ROOT% > NUL

Notice, it is gdal, not gdal-dev.

> 2. No problem
>
> 3. Some problems:
>     a. mkdir PDAL\build
>     b. Remember to initialize vsvars32.bat

No need, if you launch the proper command prompt, for example
"VS2015 x64 Native Tools Command Prompt"

>     c. call ./cmake/examples/hobu-windows.bat
>     d. No CXX and C compiler: Need to make sure that Visual Studio is compiled with C++ libraries!

"Visual Studio is compiled with C++ libraries!" that sounds a bit confusing to me.


>    f.  Boost libraries in OSGeo4W64 does not work with VS2015. Most recent boost does not play well with cmake. Boost 1.59 seems to be the best option.

This should not be an issue, see appveyor.yml and the actual builds:
https://ci.appveyor.com/project/hobu/pdal
Besides, PDAL hosts copy of required Boost libraries in pdal/vendor/pdalboost


> And thatâ€™s as far as I got at the time. It might not be relevant anymore, but I'm sharing it here in case it helps someone.

Thanks for that indeed, but PR would be a better fit.

Best regards,
--
Mateusz Loskot, http://mateusz.loskot.net


------------------------------

Message: 2
Date: Fri, 1 Jul 2016 21:55:04 +0000
From: Kristian Evers <kreve at sdfe.dk>
To: "pdal at lists.osgeo.org" <pdal at lists.osgeo.org>
Subject: Re: [pdal] PDAL 1.2 compilation on Windows
Message-ID:
	<2E885BB293AF0448A0181138489E9A0E79E6473F at S000014.PROD.SITAD.DK>
Content-Type: text/plain; charset="Windows-1252"

Sure, a PR would be lovely, but since I never got to a point where that would make sense i didn't do one :) Since then I haven't had the time and motivation to carry one with this. 

Regarding the "Visual Studio compiled with C++ libraries", I must been very frustrated at the time and written the completely wrong word. What I meant was "make sure to check off C++ libraries when installing Visual Studio". I forgot to do that at first, and was confused by the missing C++ abilities.

The rest of your comments should make it easier to succeed with windows compilation. If I ever give a go again I'll make sure to write a new version of the windows build instructions.

/Kristian
________________________________________
Fra: Mateusz Loskot [mateusz at loskot.net]
Sendt: 1. juli 2016 21:12
Til: Kristian Evers
Cc: pdal at lists.osgeo.org
Emne: Re: [pdal] PDAL 1.2 compilation on Windows

On 30 June 2016 at 13:10, Kristian Evers <kreve at sdfe.dk> wrote:
> Generally the windows build documentation could use a big overhaul.

I'm sure PR would be very welcomed. Meanwhile,...

> 1. Minor details:
>     a. Thereâ€™s no â€™gdal-devâ€™ package at this time in OSGeo4W64.

developers may refer to which builds using VS2015 and OSGeo4W64
https://github.com/PDAL/PDAL/blob/master/appveyor.yml
Specifically, line 46 shows list of essential packages:

- C:\temp\osgeo4w-setup.exe -q -k -r -A -s
http://download.osgeo.org/osgeo4w/ -a x86_64 -P
boost-devel,eigen,gdal,geos,hexer,iconv,laszip,libgeotiff,libpq,libtiff,libxml2,nitro,pcl,points2grid,proj,python-numpy,zlib
-R %OSGEO4W_ROOT% > NUL

Notice, it is gdal, not gdal-dev.

> 2. No problem
>
> 3. Some problems:
>     a. mkdir PDAL\build
>     b. Remember to initialize vsvars32.bat

No need, if you launch the proper command prompt, for example
"VS2015 x64 Native Tools Command Prompt"

>     c. call ./cmake/examples/hobu-windows.bat
>     d. No CXX and C compiler: Need to make sure that Visual Studio is compiled with C++ libraries!

"Visual Studio is compiled with C++ libraries!" that sounds a bit
confusing to me.


>    f.  Boost libraries in OSGeo4W64 does not work with VS2015. Most recent boost does not play well with cmake. Boost 1.59 seems to be the best option.

This should not be an issue, see appveyor.yml and the actual builds:
https://ci.appveyor.com/project/hobu/pdal
Besides, PDAL hosts copy of required Boost libraries in pdal/vendor/pdalboost


> And thatâ€™s as far as I got at the time. It might not be relevant anymore, but I'm sharing it here in case it helps someone.

Thanks for that indeed, but PR would be a better fit.

Best regards,
--
Mateusz Loskot, http://mateusz.loskot.net


------------------------------

Subject: Digest Footer

_______________________________________________
pdal mailing list
pdal at lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/pdal

------------------------------

End of pdal Digest, Vol 55, Issue 1
***********************************

From howard at hobu.co  Thu Jul  7 12:44:22 2016
From: howard at hobu.co (Howard Butler)
Date: Thu, 7 Jul 2016 14:44:22 -0500
Subject: [pdal] PDAL 1.2 compilation on Windows
In-Reply-To: <DB6PR0401MB264614E127A38B335833F17ECE3B0@DB6PR0401MB2646.eurprd04.prod.outlook.com>
References: <DB6PR0401MB264614E127A38B335833F17ECE3B0@DB6PR0401MB2646.eurprd04.prod.outlook.com>
Message-ID: <B7276694-7DC4-4B28-B5A6-1D681D4CC53A@hobu.co>


> On Jul 7, 2016, at 5:03 AM, JÃ©rÃ´me Chatillon <J.Chatillon at aerodata-surveys.com> wrote:
> 
> Hi,
> 
> So, if I understand you right, it would be possible to compile PDAL 1.2 with Visual Studio 2015 64bits (MSVC++ 14.0, _MSC_VER=1900) using the dependencies libraries provided by OSGE04W64 ?
> 
> I didn't dare to try fearing the famous message: "error: LNK2038: mismatch detected for _MSC_VER"...
> 
> If not, I need to have all dependencies compile with Visual Studio 2015 64bits (MSVC++ 14.0, _MSC_VER=1900), Right ? Is it me or it's a hell of a job ? :'(

It is a hell of a job, but it's already been done for you :)

PDAL is built with 2015 x86_64 on AppVeyor with every commit. See https://ci.appveyor.com/project/hobu/pdal/history for build status

Take a look at https://github.com/PDAL/PDAL/tree/master/scripts/appveyor and especially https://github.com/PDAL/PDAL/blob/master/appveyor.yml for inspiration to steal from to bootstrap your own environment.

Howard

