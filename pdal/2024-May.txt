From wong.shek at outlook.com  Fri May 10 19:29:34 2024
From: wong.shek at outlook.com (wong shek)
Date: Sat, 11 May 2024 02:29:34 +0000
Subject: [pdal] How to set proj search path using PDAL c++ API
Message-ID: <LV3P222MB103690740BB882786D58C35DF6E02@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>

In GDAL, I can set the PROJ search paths using OSRSetPROJSearchPaths, but I can't find a similar method in PDAL. I prefer not to use the approach of setting the PROJ_LIB environment variable because it's not thread-safe.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240511/9f14c5bc/attachment.htm>

From wong.shek at outlook.com  Fri May 10 20:02:59 2024
From: wong.shek at outlook.com (wong shek)
Date: Sat, 11 May 2024 03:02:59 +0000
Subject: [pdal] How to set proj search path using PDAL c++ API
Message-ID: <LV3P222MB103641A18E88FF34318EC0B3F6E02@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>

In GDAL, I can set the PROJ search paths using OSRSetPROJSearchPaths, but I can't find a similar method in PDAL. I prefer not to use the approach of setting the PROJ_LIB environment variable because it's not thread-safe.


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240511/28585898/attachment.htm>

From howard at hobu.co  Mon May 13 15:28:57 2024
From: howard at hobu.co (Howard Butler)
Date: Mon, 13 May 2024 17:28:57 -0500
Subject: [pdal] How to set proj search path using PDAL c++ API
In-Reply-To: <LV3P222MB103641A18E88FF34318EC0B3F6E02@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>
References: <LV3P222MB103641A18E88FF34318EC0B3F6E02@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>
Message-ID: <D0EDB83A-8973-4BD1-9F63-248820DE1CE4@hobu.co>



> On May 10, 2024, at 10:02?PM, wong shek via pdal <pdal at lists.osgeo.org> wrote:
> 
> In GDAL, I can set the PROJ search paths using OSRSetPROJSearchPaths, but I can't find a similar method in PDAL. I prefer not to use the approach of setting the PROJ_LIB environment variable because it's not thread-safe.

I'm not sure what you mean by not thread-safe here. Are you changing the search path location per-thread? IIRC, the paths are loaded in thread-local storage when they are set via the environment variables. I don't understand what you mean by a thread-safe issue in regards to setting the PROJ_LIB (you should use PROJ_DATA going forward, it was relabeled to align with GDAL_DATA and to make it clear it was pointing at support data and not the PROJ .so). 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240513/05cad4d4/attachment.htm>

From andrew.bell.ia at gmail.com  Mon May 13 18:01:37 2024
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 13 May 2024 21:01:37 -0400
Subject: [pdal] How to set proj search path using PDAL c++ API
In-Reply-To: <LV3P222MB103690740BB882786D58C35DF6E02@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>
References: <LV3P222MB103690740BB882786D58C35DF6E02@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>
Message-ID: <CACJ51z04mL6jYUzO1T78tLZV62zF3eXCkUVup+G7cPz-+jBLFw@mail.gmail.com>

I don't know why you couldn't make the same call. You will probably have to
explicitly link PROJ.

On Mon, May 13, 2024 at 6:21?PM wong shek via pdal <pdal at lists.osgeo.org>
wrote:

> In GDAL, I can set the PROJ search paths using OSRSetPROJSearchPaths, but
> I can't find a similar method in PDAL. I prefer not to use the approach of
> setting the PROJ_LIB environment variable because it's not thread-safe.
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240513/84e6d34c/attachment.htm>

From howard at hobu.co  Wed May 15 06:20:06 2024
From: howard at hobu.co (Howard Butler)
Date: Wed, 15 May 2024 08:20:06 -0500
Subject: [pdal] How to set proj search path using PDAL c++ API
In-Reply-To: <LV3P222MB10361E52F2A06415D5ABD037F6EC2@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>
References: <LV3P222MB103641A18E88FF34318EC0B3F6E02@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>
 <D0EDB83A-8973-4BD1-9F63-248820DE1CE4@hobu.co>
 <LV3P222MB10361E52F2A06415D5ABD037F6EC2@LV3P222MB1036.NAMP222.PROD.OUTLOOK.COM>
Message-ID: <F1E06600-2C9F-4C84-9955-1B7C697FA14E@hobu.co>

I'm still confused. If you set PROJ_DATA *before your process starts* in your execution environment and you never need to change it during the execution of the PDAL library there will be no threading issue.

If you are running PDAL in your own C++ program and using the library, call this function yourself from GDAL. There isn't a natural place in the PDAL API to put such a bookkeeping call.

Howard


> On May 14, 2024, at 8:37?PM, wong shek <wong.shek at outlook.com> wrote:
> 
> Thank you for your response. I am unlikely to modify the PROJ_DATA environment variable across different threads simultaneously, but I still prefer a thread-safe solution, similar to OSRSetPROJSearchPaths. The function putenv/putenv_s used to set environment variables in C++ is likely not thread-safe, though it is process-safe.
> 
> PS: OSRSetPROJSearchPaths function in GDAL
> ???: Howard Butler <howard at hobu.co>
> ????: 2024?5?14? 6:28
> ???: wong shek <wong.shek at outlook.com>
> ??: pdal at lists.osgeo.org <pdal at lists.osgeo.org>
> ??: Re: [pdal] How to set proj search path using PDAL c++ API
>  
> 
> 
>> On May 10, 2024, at 10:02?PM, wong shek via pdal <pdal at lists.osgeo.org> wrote:
>> 
>> In GDAL, I can set the PROJ search paths using OSRSetPROJSearchPaths, but I can't find a similar method in PDAL. I prefer not to use the approach of setting the PROJ_LIB environment variable because it's not thread-safe.
> 
> I'm not sure what you mean by not thread-safe here. Are you changing the search path location per-thread? IIRC, the paths are loaded in thread-local storage when they are set via the environment variables. I don't understand what you mean by a thread-safe issue in regards to setting the PROJ_LIB (you should use PROJ_DATA going forward, it was relabeled to align with GDAL_DATA and to make it clear it was pointing at support data and not the PROJ .so). 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240515/d388053f/attachment.htm>

From dmullins78 at gmail.com  Mon May 20 23:57:59 2024
From: dmullins78 at gmail.com (Dan Mullins)
Date: Mon, 20 May 2024 22:57:59 -0800
Subject: [pdal] Performance Question
Message-ID: <CAHCKpoZgS4BK+GpX=jz-5p85KPT-sdsGckHe3RGd+R1BHraaeg@mail.gmail.com>

Hello -

We would like to store our data (points + point specific data) in an
Entwine point cloud. We've been testing a subset (~35m points) and noticed
some strange performance. When we give the reader.ept a polygon, the
response time for just X/Y/Z data is really fast. It returns ~15k points in
1s. When we create the ept with our additional data attributes (8 total),
it slows down to 6s. Is this expected? If so, are there ways to improve the
performance? Can we pick which columns of data we want returned?

Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240520/16b74424/attachment.htm>

From howard at hobu.co  Tue May 21 08:57:53 2024
From: howard at hobu.co (Howard Butler)
Date: Tue, 21 May 2024 10:57:53 -0500
Subject: [pdal] Performance Question
In-Reply-To: <CAHCKpoZgS4BK+GpX=jz-5p85KPT-sdsGckHe3RGd+R1BHraaeg@mail.gmail.com>
References: <CAHCKpoZgS4BK+GpX=jz-5p85KPT-sdsGckHe3RGd+R1BHraaeg@mail.gmail.com>
Message-ID: <942E3AF7-32F4-4B6F-BF63-A08B42956145@hobu.co>



> On May 21, 2024, at 1:57?AM, Dan Mullins via pdal <pdal at lists.osgeo.org> wrote:
> 
> Hello - 
> 
> We would like to store our data (points + point specific data) in an Entwine point cloud. We've been testing a subset (~35m points) and noticed some strange performance. When we give the reader.ept a polygon, the response time for just X/Y/Z data is really fast. It returns ~15k points in 1s. When we create the ept with our additional data attributes (8 total), it slows down to 6s. Is this expected? If so, are there ways to improve the performance?

Extra byte dimensions in LAZ are poorly compressed, so it might be that you're simply fetching a lot more bytes. Maybe it makes more sense to use EPT Addons https://pdal.io/en/latest/stages/writers.ept_addon.html instead of extra byte dimensions.

> Can we pick which columns of data we want returned?

Selective access and decompression is something that's possible but not yet implemented. 

Howard

PS, do note that you are going to quite quickly move from help-us-with-open-source-software to consult-with-us-to-tell-us-how-to-exploit-this-software-the-best with this topic. 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240521/0e370673/attachment.htm>

From dmullins78 at gmail.com  Tue May 28 09:59:37 2024
From: dmullins78 at gmail.com (Dan Mullins)
Date: Tue, 28 May 2024 08:59:37 -0800
Subject: [pdal] Performance Question
In-Reply-To: <942E3AF7-32F4-4B6F-BF63-A08B42956145@hobu.co>
References: <CAHCKpoZgS4BK+GpX=jz-5p85KPT-sdsGckHe3RGd+R1BHraaeg@mail.gmail.com>
 <942E3AF7-32F4-4B6F-BF63-A08B42956145@hobu.co>
Message-ID: <CAHCKpoaBHzpQ5qrhR_9FosJbf1-AesVSJ7-aQ8dYUb84Oi6uNg@mail.gmail.com>

Thanks for the reply and information. I'll do my best to keep it general
and avoid free solutioning.

I've read the addon section about a dozen times and can't wrap my head
around it. In the example, "~/entwine/addons/autzen/smrf" looks like a
file, but I don't know what's in it. Is there documentation on how to
create your own addon?

Dan


On Tue, May 21, 2024 at 7:58?AM Howard Butler <howard at hobu.co> wrote:

>
>
> On May 21, 2024, at 1:57?AM, Dan Mullins via pdal <pdal at lists.osgeo.org>
> wrote:
>
> Hello -
>
> We would like to store our data (points + point specific data) in an
> Entwine point cloud. We've been testing a subset (~35m points) and noticed
> some strange performance. When we give the reader.ept a polygon, the
> response time for just X/Y/Z data is really fast. It returns ~15k points in
> 1s. When we create the ept with our additional data attributes (8 total),
> it slows down to 6s. Is this expected? If so, are there ways to improve the
> performance?
>
>
> Extra byte dimensions in LAZ are poorly compressed, so it might be that
> you're simply fetching a lot more bytes. Maybe it makes more sense to use
> EPT Addons https://pdal.io/en/latest/stages/writers.ept_addon.html instead
> of extra byte dimensions.
>
> Can we pick which columns of data we want returned?
>
>
> Selective access and decompression is something that's possible but not
> yet implemented.
>
> Howard
>
> PS, do note that you are going to quite quickly move from
> help-us-with-open-source-software to
> consult-with-us-to-tell-us-how-to-exploit-this-software-the-best with this
> topic.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20240528/1d105ed7/attachment.htm>

