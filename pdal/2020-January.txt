From RPhillips at linz.govt.nz  Sun Jan  5 15:09:30 2020
From: RPhillips at linz.govt.nz (Rose Phillips)
Date: Sun, 5 Jan 2020 23:09:30 +0000
Subject: [pdal] pdal pipeline - defining filesource_id header while using
 "forward": "all"
Message-ID: <DB6C9333CF905C418FCA62058C67818904AEFA40@prdassexch01.ad.linz.govt.nz>

Hi guys,
I have a collection of LAS files in a directory, from the same project with a mixture of filesource_ids and minor_version, which I want to clean up with one value for each header respectively.
I used pdal pipeline to modify these headers and used the following json notation;
{
  "pipeline" : [
   {
        "type" : "readers.las",
        "filename" : "input.laz"
   },

    {
        "type" : "writers.las",
        "minor_version" : 3,
        "filesource_id" : 0,
        "a_srs" : "EPSG:2193+7839",
        "forward": "all",
        "filename" : "output.laz"
    }
  ]
}

The following error was raised -: PDAL: writers.las: Unexpected argument 'filesource_id' . This was for a file which already had the default value (0) for that header.
I was able to solve this issue by  removing the code <<"filesource_id":0>> from json notation and was still able to change the "minor_version", even though it is written the same way as the "filesource_id" header?
I'm wondering am I missing something or is this a bug?
I tried the following methology and got the same error -: PDAL: writers.las: Unexpected argument 'filesource_id'
{
  "pipeline" : [
   {
        "type" : "readers.las",
        "filename" : "input.laz"
   },

    {
        "type" : "writers.las",
        "minor_version" : 3,
        "filesource_id" : 0,
        "a_srs" : "EPSG:2193+7839",
        "forward": "major_version, global_encoding, project_id, system_id, software_id, creation_doy, creation_year, scale, offset",
        "filename" : "output.laz"
    }
  ]
}

I understand that I could fix this issue by sorting my point cloud files by these headers then processing them in these 'batches' but I'm trying to avoid that extra step as I'm planning to process hundreds of thousands of files.
Many thanks,
Rose Phillips


________________________________

This message contains information, which may be in confidence and may be subject to legal privilege. If you are not the intended recipient, you must not peruse, use, disseminate, distribute or copy this message. If you have received this message in error, please notify us immediately (Phone 0800 665 463 or info at linz.govt.nz) and destroy the original message. LINZ accepts no responsibility for changes to this email, or for any attachments, after its transmission from LINZ. Thank You.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200105/a0580b19/attachment.html>

From andrew.bell.ia at gmail.com  Mon Jan  6 06:25:42 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 6 Jan 2020 09:25:42 -0500
Subject: [pdal] pdal pipeline - defining filesource_id header while
 using "forward": "all"
In-Reply-To: <DB6C9333CF905C418FCA62058C67818904AEFA40@prdassexch01.ad.linz.govt.nz>
References: <DB6C9333CF905C418FCA62058C67818904AEFA40@prdassexch01.ad.linz.govt.nz>
Message-ID: <CACJ51z0-PKJ0aFcbxt61=sYZaXKrMAg_yn=3vUjDx+jM43auoQ@mail.gmail.com>

I've opened an issue to address this problem:
https://github.com/PDAL/PDAL/issues/2862

On Sun, Jan 5, 2020 at 6:16 PM Rose Phillips <RPhillips at linz.govt.nz> wrote:

> Hi guys,
>
> I have a collection of LAS files in a directory, from the same project
> with a mixture of filesource_ids and minor_version, which I want to clean
> up with one value for each header respectively.
>
> I used pdal pipeline to modify these headers and used the following json
> notation;
>
> {
>
>   *"pipeline"* : [
>
>    {
>
>         *"type"* : "readers.las",
>
>         *"filename"* : "input.laz"
>
>    },
>
>
>
>     {
>
>         *"type"* : "writers.las",
>
>         *"minor_version"* : 3,
>
>         *"filesource_id"* : 0,
>
>         *"a_srs"* : "EPSG:2193+7839",
>
>         *"forward"*: "all",
>
>         *"filename"* : "output.laz"
>
>     }
>
>   ]
>
> }
>
>
>
> The following error was raised -: PDAL: writers.las: Unexpected argument
> 'filesource_id' . This was for a file which already had the default value
> (0) for that header.
>
> I was able to solve this issue by  removing the code <<“filesource_id”:0>>
> from json notation and was still able to change the “minor_version”, even
> though it is written the same way as the “filesource_id” header?
>
> I’m wondering am I missing something or is this a bug?
>
> I tried the following methology and got the same error -: PDAL:
> writers.las: Unexpected argument 'filesource_id'
>
> {
>
>   *"pipeline"* : [
>
>    {
>
>         *"type"* : "readers.las",
>
>         *"filename"* : "input.laz"
>
>    },
>
>
>
>     {
>
>         *"type"* : "writers.las",
>
>         *"minor_version"* : 3,
>
>         *"filesource_id"* : 0,
>
>         *"a_srs"* : "EPSG:2193+7839",
>
>         *"forward"*:
> "major_version, global_encoding, project_id, system_id, software_id, creation_doy, creation_year, scale, offset"
> ,
>
>         *"filename"* : "output.laz"
>
>     }
>
>   ]
>
> }
>
>
>
> I understand that I could fix this issue by sorting my point cloud files
> by these headers then processing them in these ‘batches’ but I’m trying to
> avoid that extra step as I’m planning to process hundreds of thousands of
> files.
>
> Many thanks,
>
> Rose Phillips
>
>
>
> ------------------------------
>
> This message contains information, which may be in confidence and may be
> subject to legal privilege. If you are not the intended recipient, you must
> not peruse, use, disseminate, distribute or copy this message. If you have
> received this message in error, please notify us immediately (Phone 0800
> 665 463 or info at linz.govt.nz) and destroy the original message. LINZ
> accepts no responsibility for changes to this email, or for any
> attachments, after its transmission from LINZ. Thank You.
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200106/cc51da9c/attachment-0001.html>

From howard at hobu.co  Tue Jan 14 07:12:15 2020
From: howard at hobu.co (Howard Butler)
Date: Tue, 14 Jan 2020 09:12:15 -0600
Subject: [pdal] Proposal: Move all Python support to the Python extension in
	PDAL 2.1
Message-ID: <CEFACDFA-9EC1-426A-884E-D2E1CF0CE7A7@hobu.co>

All,

This proposal is to solicit feedback on moving readers.numpy and filters.python out of the main PDAL library and into the PDAL Python extension going forward.  The case for doing so is a number of factors:

* Python modules can evolve at their own (maybe faster) pace
* The current approach pins the main PDAL library to a specific Python version which complicates packaging
* Current CMake config for install of Python plugins is not aware of virtualenvironment specifics unless you are using very current CMake versions.

PDAL: https://github.com/PDAL/PDAL <https://github.com/PDAL/PDAL> 
PDAL-python: https://github.com/PDAL/python/ <https://github.com/PDAL/python/>

The prototype implementation removes all embedded Python plugins (readers.numpy and filters.python)  from the main PDAL library. It moves them to PDAL-python, which are then installed in PDAL_DRIVER_PATH when setup.py install is executed. If no PDAL_DRIVER_PATH is set in the environment or found via pdal-config, the plugins will be installed in the Python library path and PDAL users will have to append or set that path to the PDAL_DRIVER_PATH location.

I am interested to hear feedback on whether or not this proposal will cause trouble with existing deployments. While it might reduce some user convenience, I think it is prudent to make PDAL behave like any other library in regard to language extensions, which will also have the benefit of allowing the language extensions to evolve at their own pace.

Please reply to describe how this new arrangement could cause you challenges. If possible, we can try to accommodate if we know what they might be.

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200114/36886961/attachment.html>

From luipir at gmail.com  Tue Jan 14 07:47:04 2020
From: luipir at gmail.com (Luigi Pirelli)
Date: Tue, 14 Jan 2020 16:47:04 +0100
Subject: [pdal] Proposal: Move all Python support to the Python
 extension in PDAL 2.1
In-Reply-To: <CEFACDFA-9EC1-426A-884E-D2E1CF0CE7A7@hobu.co>
References: <CEFACDFA-9EC1-426A-884E-D2E1CF0CE7A7@hobu.co>
Message-ID: <CAFO80_pbTeqBsOZeOV32AwF+uvsh12HKVSuJzEa2WyCYLzzdjQ@mail.gmail.com>

yes please :)

Luigi Pirelli

**************************************************************************************************
* LinkedIn: https://www.linkedin.com/in/luigipirelli
* Stackexchange: http://gis.stackexchange.com/users/19667/luigi-pirelli
* GitHub: https://github.com/luipir
* Book: Mastering QGIS3 - 3rd Edition
<https://www.packtpub.com/eu/application-development/mastering-geospatial-development-qgis-3x-third-edition>
* Hire a team: http://www.qcooperative.net
**************************************************************************************************


On Tue, 14 Jan 2020 at 16:12, Howard Butler <howard at hobu.co> wrote:

> All,
>
> This proposal is to solicit feedback on moving readers.numpy and
> filters.python out of the main PDAL library and into the PDAL Python
> extension going forward.  The case for doing so is a number of factors:
>
> * Python modules can evolve at their own (maybe faster) pace
> * The current approach pins the main PDAL library to a specific Python
> version which complicates packaging
> * Current CMake config for install of Python plugins is not aware of
> virtualenvironment specifics unless you are using very current CMake
> versions.
>
> PDAL: https://github.com/PDAL/PDAL
> PDAL-python: https://github.com/PDAL/python/
>
> The prototype implementation removes all embedded Python plugins
> (readers.numpy and filters.python)  from the main PDAL library. It moves
> them to PDAL-python, which are then installed in PDAL_DRIVER_PATH when
> setup.py install is executed. If no PDAL_DRIVER_PATH is set in the
> environment or found via pdal-config, the plugins will be installed in the
> Python library path and PDAL users will have to append or set that path to
> the PDAL_DRIVER_PATH location.
>
> I am interested to hear feedback on whether or not this proposal will
> cause trouble with existing deployments. While it might reduce some user
> convenience, I think it is prudent to make PDAL behave like any other
> library in regard to language extensions, which will also have the benefit
> of allowing the language extensions to evolve at their own pace.
>
> Please reply to describe how this new arrangement could cause you
> challenges. If possible, we can try to accommodate if we know what they
> might be.
>
> Howard
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200114/dad0eda5/attachment.html>

From newcomb.ttg at gmail.com  Wed Jan 15 14:54:33 2020
From: newcomb.ttg at gmail.com (Doug Newcomb)
Date: Wed, 15 Jan 2020 17:54:33 -0500
Subject: [pdal] Proposal: Move all Python support to the Python
 extension in PDAL 2.1
In-Reply-To: <CEFACDFA-9EC1-426A-884E-D2E1CF0CE7A7@hobu.co>
References: <CEFACDFA-9EC1-426A-884E-D2E1CF0CE7A7@hobu.co>
Message-ID: <CADTwh61nQBY2FBHQ1=1UtaxRhD07Xc3F_gEm-Cc85wCJPQ3obw@mail.gmail.com>

That sounds like it will give more flexibility going forward.
Doug

On Tue, Jan 14, 2020 at 10:12 AM Howard Butler <howard at hobu.co> wrote:

> All,
>
> This proposal is to solicit feedback on moving readers.numpy and
> filters.python out of the main PDAL library and into the PDAL Python
> extension going forward.  The case for doing so is a number of factors:
>
> * Python modules can evolve at their own (maybe faster) pace
> * The current approach pins the main PDAL library to a specific Python
> version which complicates packaging
> * Current CMake config for install of Python plugins is not aware of
> virtualenvironment specifics unless you are using very current CMake
> versions.
>
> PDAL: https://github.com/PDAL/PDAL
> PDAL-python: https://github.com/PDAL/python/
>
> The prototype implementation removes all embedded Python plugins
> (readers.numpy and filters.python)  from the main PDAL library. It moves
> them to PDAL-python, which are then installed in PDAL_DRIVER_PATH when
> setup.py install is executed. If no PDAL_DRIVER_PATH is set in the
> environment or found via pdal-config, the plugins will be installed in the
> Python library path and PDAL users will have to append or set that path to
> the PDAL_DRIVER_PATH location.
>
> I am interested to hear feedback on whether or not this proposal will
> cause trouble with existing deployments. While it might reduce some user
> convenience, I think it is prudent to make PDAL behave like any other
> library in regard to language extensions, which will also have the benefit
> of allowing the language extensions to evolve at their own pace.
>
> Please reply to describe how this new arrangement could cause you
> challenges. If possible, we can try to accommodate if we know what they
> might be.
>
> Howard
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200115/a9215618/attachment.html>

From adam.d.steer at gmail.com  Wed Jan 15 15:12:38 2020
From: adam.d.steer at gmail.com (adam steer)
Date: Thu, 16 Jan 2020 10:12:38 +1100
Subject: [pdal] Proposal: Move all Python support to the Python
 extension in PDAL 2.1
In-Reply-To: <CADTwh61nQBY2FBHQ1=1UtaxRhD07Xc3F_gEm-Cc85wCJPQ3obw@mail.gmail.com>
References: <CEFACDFA-9EC1-426A-884E-D2E1CF0CE7A7@hobu.co>
 <CADTwh61nQBY2FBHQ1=1UtaxRhD07Xc3F_gEm-Cc85wCJPQ3obw@mail.gmail.com>
Message-ID: <CAFORoyieU0E-J7KbHUP-eDcJuVNHA2AP0igSYyjRKkHSWXa1Wg@mail.gmail.com>

Hi Howard

I’m reading that in future, filters.python and readers.numpy will still
exist, they will just require installing PDAL-python and configuring
PDAL_DRIVER_PATH correctly.

That sounds all good to me.

Regards,

Adam
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200116/b102faef/attachment.html>

From howard at hobu.co  Thu Jan 16 06:37:56 2020
From: howard at hobu.co (Howard Butler)
Date: Thu, 16 Jan 2020 08:37:56 -0600
Subject: [pdal] Proposal: Move all Python support to the Python
 extension in PDAL 2.1
In-Reply-To: <CAFORoyieU0E-J7KbHUP-eDcJuVNHA2AP0igSYyjRKkHSWXa1Wg@mail.gmail.com>
References: <CEFACDFA-9EC1-426A-884E-D2E1CF0CE7A7@hobu.co>
 <CADTwh61nQBY2FBHQ1=1UtaxRhD07Xc3F_gEm-Cc85wCJPQ3obw@mail.gmail.com>
 <CAFORoyieU0E-J7KbHUP-eDcJuVNHA2AP0igSYyjRKkHSWXa1Wg@mail.gmail.com>
Message-ID: <65C7E2D0-3FBB-493A-B6DA-A7575F69C61E@hobu.co>



> On Jan 15, 2020, at 5:12 PM, adam steer <adam.d.steer at gmail.com> wrote:
> 
> Hi Howard
> 
> I’m reading that in future, filters.python and readers.numpy will still exist, they will just require installing PDAL-python and configuring PDAL_DRIVER_PATH correctly.

Correct. If you have PDAL_DRIVER_PATH already set, or it can be found by the python setup.py script by issuing 'pdal-config --plugin-dir', they will be installed there for you and should just work without intervention.

Howard

From howard at hobu.co  Fri Jan 24 08:59:26 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 24 Jan 2020 10:59:26 -0600
Subject: [pdal] Remove MSVC 2015 Support?
Message-ID: <DC3AF7C9-B7ED-4BD9-9009-3A49FB3CC94D@hobu.co>

Mateusz,

We received a notice today that Azure Pipelines, which PDAL uses for CI, is removing its MSVC 2015 image. It has me wondering if the world has moved on to MSVC 2017+ and PDAL could move forward with requiring that (and using C++17 in the process).

Since you are our resident Windows expert, what do you think?

Howard

From mateusz at loskot.net  Fri Jan 24 09:37:31 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 24 Jan 2020 17:37:31 +0000
Subject: [pdal] Remove MSVC 2015 Support?
In-Reply-To: <DC3AF7C9-B7ED-4BD9-9009-3A49FB3CC94D@hobu.co>
References: <DC3AF7C9-B7ED-4BD9-9009-3A49FB3CC94D@hobu.co>
Message-ID: <CABUeae_7gWRS042UsxNG-6cxqhDcGQ43yvWY4GbAhikcX++WbA@mail.gmail.com>

On Fri, 24 Jan 2020 at 16:59, Howard Butler <howard at hobu.co> wrote:
> Mateusz,
>
> We received a notice today that Azure Pipelines, which PDAL uses for CI,
> is removing its MSVC 2015 image.
> It has me wondering if the world has moved on to MSVC 2017+ and
> PDAL could move forward with requiring that (and using C++17 in the process).
>
> Since you are our resident Windows expert, what do you think?

Given that
- Visual Studio 2015 Update 3 default is C++14 [1]
- Visual Studio 2017 default is C++14 too [2]
I'd say that if a user already builds with VS2015, then she can
equally build with VS2017.
IOW, there is a common C++ version denominator provided by the two and
there is little-to-none reasons to keep using VS2015.

Given the default C++ version in VS2017 is C++14, not C++17, technically,
the switch does not mean PDAL would have to switch to C++17, just C++14.

However, some say (common among Boost'ers) if a project considers
switch to C++14 then it should just jump to C++17.
IOW, the recommended jumps are to C++11, then to C++17, then to C++20.

I hope it helps.

[1] https://devblogs.microsoft.com/cppblog/standards-version-switches-in-the-compiler/
[2] https://docs.microsoft.com/en-us/cpp/build/reference/std-specify-language-standard-version

Best regards,
--
Mateusz Loskot, http://mateusz.loskot.net

From howard at hobu.co  Fri Jan 24 10:58:06 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 24 Jan 2020 12:58:06 -0600
Subject: [pdal] Remove MSVC 2015 Support?
In-Reply-To: <CABUeae_7gWRS042UsxNG-6cxqhDcGQ43yvWY4GbAhikcX++WbA@mail.gmail.com>
References: <DC3AF7C9-B7ED-4BD9-9009-3A49FB3CC94D@hobu.co>
 <CABUeae_7gWRS042UsxNG-6cxqhDcGQ43yvWY4GbAhikcX++WbA@mail.gmail.com>
Message-ID: <976D7F33-B325-4432-9ECF-6F2D6E49DB34@hobu.co>



> On Jan 24, 2020, at 11:37 AM, Mateusz Loskot <mateusz at loskot.net> wrote:
> 
> Given the default C++ version in VS2017 is C++14, not C++17, technically,
> the switch does not mean PDAL would have to switch to C++17, just C++14.

Does /std:c++17 work in VS2017? Specifically in regard to filesystem, which is the only bcp'd bits we have left in the PDAL tree.

Howard

From mateusz at loskot.net  Fri Jan 24 11:06:34 2020
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 24 Jan 2020 19:06:34 +0000
Subject: [pdal] Remove MSVC 2015 Support?
In-Reply-To: <976D7F33-B325-4432-9ECF-6F2D6E49DB34@hobu.co>
References: <DC3AF7C9-B7ED-4BD9-9009-3A49FB3CC94D@hobu.co>
 <CABUeae_7gWRS042UsxNG-6cxqhDcGQ43yvWY4GbAhikcX++WbA@mail.gmail.com>
 <976D7F33-B325-4432-9ECF-6F2D6E49DB34@hobu.co>
Message-ID: <CABUeae8s8wpP4K1j7KTn5e0u_Uhn5gVd1sw59HF6eEygEjYh7w@mail.gmail.com>

On Fri, 24 Jan 2020, 18:58 Howard Butler, <howard at hobu.co> wrote:

>
>
> > On Jan 24, 2020, at 11:37 AM, Mateusz Loskot <mateusz at loskot.net> wrote:
> >
> > Given the default C++ version in VS2017 is C++14, not C++17, technically,
> > the switch does not mean PDAL would have to switch to C++17, just C++14.
>
> Does /std:c++17 work in VS2017? Specifically in regard to filesystem,
> which is the only bcp'd bits we have left in the PDAL tree.
>


Yes, it does.
I always default projects to /std:c++17 if I can decide.

ML
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200124/58094e27/attachment.html>

From jrhickey6 at gmail.com  Fri Jan 24 11:48:06 2020
From: jrhickey6 at gmail.com (JR Hickey)
Date: Fri, 24 Jan 2020 14:48:06 -0500
Subject: [pdal] Deleting points from an Entwine dataset
Message-ID: <CAJgzRTbKnWgcaWQcrU6wg0kTBygPNGTJq4TpWJ_S4zZSwjw=7A@mail.gmail.com>

I have a quick question and can't seem to find the answer anywhere.
I would like to delete some data from my ENTWINE dataset using a polygon.
Sort of like a clip.
How would I go about doing this? Or is this not really possible?

Thanks for any info!
JR
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200124/e01df033/attachment.html>

From howard at hobu.co  Fri Jan 24 13:55:14 2020
From: howard at hobu.co (Howard Butler)
Date: Fri, 24 Jan 2020 15:55:14 -0600
Subject: [pdal] Deleting points from an Entwine dataset
In-Reply-To: <CAJgzRTbKnWgcaWQcrU6wg0kTBygPNGTJq4TpWJ_S4zZSwjw=7A@mail.gmail.com>
References: <CAJgzRTbKnWgcaWQcrU6wg0kTBygPNGTJq4TpWJ_S4zZSwjw=7A@mail.gmail.com>
Message-ID: <126C7131-3AEA-4F2D-9576-F897EEFD4468@hobu.co>



> On Jan 24, 2020, at 1:48 PM, JR Hickey <jrhickey6 at gmail.com> wrote:
> 
> I have a quick question and can't seem to find the answer anywhere.
> I would like to delete some data from my ENTWINE dataset using a polygon. Sort of like a clip.
> How would I go about doing this? Or is this not really possible? 

Actual deletion isn't supported at this time, and I'd recommend re-building your dataset in that case. It could be a feature to explore if resources were available.

If you simply want to mark points in a polygon as water (or deleted), use addons to add your "deleted" dimension and then filter them out in your pipelines.

Howard

