From mpg at flaxen.com  Thu Feb  2 11:51:09 2012
From: mpg at flaxen.com (Michael P. Gerlek)
Date: Thu Feb  2 11:51:49 2012
Subject: [pdal] Boost versioning
Message-ID: <05fd01cce1ca$ddb100f0$991302d0$@flaxen.com>

Yesterday Mr. Rosen found yet another problem with Boost compatibility (1.47.x against VS2010)

This is a topic for the Sprint next week, but maybe we can jump start it here...

- We need to support whatever version the major linux distros are using
- We want to support the (relatively) latest-and-greatest release (so we get nifty stuff we can gratuitously splatter all over the codebase :-)

Can we then cut this problem down to just supporting two versions?  Or are there other concerns?  (like, which boost do the Mac fanboys use?)

-mpg


From hobu.inc at gmail.com  Thu Feb  2 12:28:39 2012
From: hobu.inc at gmail.com (Howard Butler)
Date: Thu Feb  2 12:28:46 2012
Subject: [pdal] Boost versioning
In-Reply-To: <05fd01cce1ca$ddb100f0$991302d0$@flaxen.com>
References: <05fd01cce1ca$ddb100f0$991302d0$@flaxen.com>
Message-ID: <3656E324-189C-46B1-8785-117013C10F34@gmail.com>


On Feb 2, 2012, at 10:51 AM, Michael P. Gerlek wrote:

> Yesterday Mr. Rosen found yet another problem with Boost compatibility (1.47.x against VS2010)
> 
> This is a topic for the Sprint next week, but maybe we can jump start it here...

Near as I can tell, Boost's compatibility story is such a mess that projects simply give up and embed the version they need.  In fact there's tools to make that scenario easier.  Active projects like PCL, Mapnik, et. al seem to "use the latest release" at the developer level, and then expect that packagers take care of compilation issues

> 
> - We need to support whatever version the major linux distros are using

RHEL 6.1 is Boost 1.41, I believe.  I think Debian is about at that too.  It's too old for a lot of stuff.

> - We want to support the (relatively) latest-and-greatest release (so we get nifty stuff we can gratuitously splatter all over the codebase :-)

There's a couple of big discontinuities that affect us:

- Boost filesystem changed from 2 to 3, and the transition is painful and requires #ifdefs
- Boost random in 1.48 has some fancy stuff I'd like to use for pdal::filters::Stats
- Boost spirit, to be used for our expression parser, has had some changes in the 1.44-1.46 timeframe.

> Can we then cut this problem down to just supporting two versions?  Or are there other concerns?  (like, which boost do the Mac fanboys use?)

we quickly get to the point where it's easier to embed the things we want and not depend on getting screwed by the system boost...
From mpg at flaxen.com  Thu Feb  2 13:16:39 2012
From: mpg at flaxen.com (Michael P. Gerlek)
Date: Thu Feb  2 13:17:04 2012
Subject: [pdal] Boost versioning
In-Reply-To: <3656E324-189C-46B1-8785-117013C10F34@gmail.com>
References: <05fd01cce1ca$ddb100f0$991302d0$@flaxen.com>
	<3656E324-189C-46B1-8785-117013C10F34@gmail.com>
Message-ID: <061b01cce1d6$cfb09950$6f11cbf0$@flaxen.com>

What tools do they provide for this?

-mpg


> -----Original Message-----
> From: Howard Butler [mailto:hobu.inc@gmail.com]
> Sent: Thursday, February 02, 2012 9:29 AM
> To: mpg@flaxen.com
> Cc: pdal@lists.osgeo.org
> Subject: Re: [pdal] Boost versioning
> 
> 
> On Feb 2, 2012, at 10:51 AM, Michael P. Gerlek wrote:
> 
> > Yesterday Mr. Rosen found yet another problem with Boost compatibility (1.47.x against VS2010)
> >
> > This is a topic for the Sprint next week, but maybe we can jump start it here...
> 
> Near as I can tell, Boost's compatibility story is such a mess that projects simply give up and embed the version they need.  In fact
> there's tools to make that scenario easier.  Active projects like PCL, Mapnik, et. al seem to "use the latest release" at the developer
> level, and then expect that packagers take care of compilation issues
> 
> >
> > - We need to support whatever version the major linux distros are using
> 
> RHEL 6.1 is Boost 1.41, I believe.  I think Debian is about at that too.  It's too old for a lot of stuff.
> 
> > - We want to support the (relatively) latest-and-greatest release (so we get nifty stuff we can gratuitously splatter all over the
> codebase :-)
> 
> There's a couple of big discontinuities that affect us:
> 
> - Boost filesystem changed from 2 to 3, and the transition is painful and requires #ifdefs
> - Boost random in 1.48 has some fancy stuff I'd like to use for pdal::filters::Stats
> - Boost spirit, to be used for our expression parser, has had some changes in the 1.44-1.46 timeframe.
> 
> > Can we then cut this problem down to just supporting two versions?  Or are there other concerns?  (like, which boost do the Mac
> fanboys use?)
> 
> we quickly get to the point where it's easier to embed the things we want and not depend on getting screwed by the system boost...=

From hobu.inc at gmail.com  Fri Feb  3 10:50:16 2012
From: hobu.inc at gmail.com (Howard Butler)
Date: Fri Feb  3 10:50:49 2012
Subject: [pdal] Boost versioning
In-Reply-To: <061b01cce1d6$cfb09950$6f11cbf0$@flaxen.com>
References: <05fd01cce1ca$ddb100f0$991302d0$@flaxen.com>
	<3656E324-189C-46B1-8785-117013C10F34@gmail.com>
	<061b01cce1d6$cfb09950$6f11cbf0$@flaxen.com>
Message-ID: <CC88F4F4-37A0-41A7-9AE2-3E34C7D5209D@gmail.com>

bcp

http://www.boost.org/doc/libs/1_48_0/tools/bcp/doc/html/index.html

On Feb 2, 2012, at 12:16 PM, Michael P. Gerlek wrote:

> What tools do they provide for this?
> 
> -mpg
> 
> 
>> -----Original Message-----
>> From: Howard Butler [mailto:hobu.inc@gmail.com]
>> Sent: Thursday, February 02, 2012 9:29 AM
>> To: mpg@flaxen.com
>> Cc: pdal@lists.osgeo.org
>> Subject: Re: [pdal] Boost versioning
>> 
>> 
>> On Feb 2, 2012, at 10:51 AM, Michael P. Gerlek wrote:
>> 
>>> Yesterday Mr. Rosen found yet another problem with Boost compatibility (1.47.x against VS2010)
>>> 
>>> This is a topic for the Sprint next week, but maybe we can jump start it here...
>> 
>> Near as I can tell, Boost's compatibility story is such a mess that projects simply give up and embed the version they need.  In fact
>> there's tools to make that scenario easier.  Active projects like PCL, Mapnik, et. al seem to "use the latest release" at the developer
>> level, and then expect that packagers take care of compilation issues
>> 
>>> 
>>> - We need to support whatever version the major linux distros are using
>> 
>> RHEL 6.1 is Boost 1.41, I believe.  I think Debian is about at that too.  It's too old for a lot of stuff.
>> 
>>> - We want to support the (relatively) latest-and-greatest release (so we get nifty stuff we can gratuitously splatter all over the
>> codebase :-)
>> 
>> There's a couple of big discontinuities that affect us:
>> 
>> - Boost filesystem changed from 2 to 3, and the transition is painful and requires #ifdefs
>> - Boost random in 1.48 has some fancy stuff I'd like to use for pdal::filters::Stats
>> - Boost spirit, to be used for our expression parser, has had some changes in the 1.44-1.46 timeframe.
>> 
>>> Can we then cut this problem down to just supporting two versions?  Or are there other concerns?  (like, which boost do the Mac
>> fanboys use?)
>> 
>> we quickly get to the point where it's easier to embed the things we want and not depend on getting screwed by the system boost...=
> 

From mpg at flaxen.com  Fri Feb  3 19:01:34 2012
From: mpg at flaxen.com (Michael P. Gerlek)
Date: Fri Feb  3 19:02:31 2012
Subject: [pdal] Boost versioning
In-Reply-To: <CC88F4F4-37A0-41A7-9AE2-3E34C7D5209D@gmail.com>
References: <05fd01cce1ca$ddb100f0$991302d0$@flaxen.com>
	<3656E324-189C-46B1-8785-117013C10F34@gmail.com>
	<061b01cce1d6$cfb09950$6f11cbf0$@flaxen.com>
	<CC88F4F4-37A0-41A7-9AE2-3E34C7D5209D@gmail.com>
Message-ID: <074a01cce2d0$292cd260$7b867720$@flaxen.com>

/me is impressed

-mpg


> -----Original Message-----
> From: Howard Butler [mailto:hobu.inc@gmail.com]
> Sent: Friday, February 03, 2012 7:50 AM
> To: mpg@flaxen.com
> Cc: pdal@lists.osgeo.org
> Subject: Re: [pdal] Boost versioning
> 
> bcp
> 
> http://www.boost.org/doc/libs/1_48_0/tools/bcp/doc/html/index.html
> 
> On Feb 2, 2012, at 12:16 PM, Michael P. Gerlek wrote:
> 
> > What tools do they provide for this?
> >
> > -mpg
> >
> >
> >> -----Original Message-----
> >> From: Howard Butler [mailto:hobu.inc@gmail.com]
> >> Sent: Thursday, February 02, 2012 9:29 AM
> >> To: mpg@flaxen.com
> >> Cc: pdal@lists.osgeo.org
> >> Subject: Re: [pdal] Boost versioning
> >>
> >>
> >> On Feb 2, 2012, at 10:51 AM, Michael P. Gerlek wrote:
> >>
> >>> Yesterday Mr. Rosen found yet another problem with Boost compatibility (1.47.x against VS2010)
> >>>
> >>> This is a topic for the Sprint next week, but maybe we can jump start it here...
> >>
> >> Near as I can tell, Boost's compatibility story is such a mess that projects simply give up and embed the version they need.  In fact
> >> there's tools to make that scenario easier.  Active projects like PCL, Mapnik, et. al seem to "use the latest release" at the developer
> >> level, and then expect that packagers take care of compilation issues
> >>
> >>>
> >>> - We need to support whatever version the major linux distros are using
> >>
> >> RHEL 6.1 is Boost 1.41, I believe.  I think Debian is about at that too.  It's too old for a lot of stuff.
> >>
> >>> - We want to support the (relatively) latest-and-greatest release (so we get nifty stuff we can gratuitously splatter all over the
> >> codebase :-)
> >>
> >> There's a couple of big discontinuities that affect us:
> >>
> >> - Boost filesystem changed from 2 to 3, and the transition is painful and requires #ifdefs
> >> - Boost random in 1.48 has some fancy stuff I'd like to use for pdal::filters::Stats
> >> - Boost spirit, to be used for our expression parser, has had some changes in the 1.44-1.46 timeframe.
> >>
> >>> Can we then cut this problem down to just supporting two versions?  Or are there other concerns?  (like, which boost do the Mac
> >> fanboys use?)
> >>
> >> we quickly get to the point where it's easier to embed the things we want and not depend on getting screwed by the system
> boost...=
> >

From rschwarz at riegl.co.at  Mon Feb  6 02:23:37 2012
From: rschwarz at riegl.co.at (Roland Schwarz)
Date: Mon Feb  6 15:34:04 2012
Subject: [pdal] Boost versioning
In-Reply-To: <CC88F4F4-37A0-41A7-9AE2-3E34C7D5209D@gmail.com>
References: <05fd01cce1ca$ddb100f0$991302d0$@flaxen.com>
	<3656E324-189C-46B1-8785-117013C10F34@gmail.com>
	<061b01cce1d6$cfb09950$6f11cbf0$@flaxen.com>
	<CC88F4F4-37A0-41A7-9AE2-3E34C7D5209D@gmail.com>
Message-ID: <4F2F7FF9.6090702@riegl.co.at>

Am 03.02.2012 16:50, schrieb Howard Butler:
> bcp
>
> http://www.boost.org/doc/libs/1_48_0/tools/bcp/doc/html/index.html
>
> On Feb 2, 2012, at 12:16 PM, Michael P. Gerlek wrote:
>
>> What tools do they provide for this?
>>

This is an interesting tool indeed! I am using a similar aproach for 
quite some time now: I wrote a little perl script called renamespace.pl 
which allows me to pinpoint a specific boost version.

However some care has to be taken: One must make sure, that no part of 
the embedded boost version will leak out of the API. This can easily 
happen, e.g. if you expose a shared_ptr through a client visible header 
file.

Altough this problem might be not so severe in an open source project as 
it is when one has to distribute binary only libraries.

Just my 5 cents,
Roland

-- 
Dipl. Ing. Roland Schwarz
Senior Research Assistant
___________________________

mailto:rschwarz@riegl.co.at
http://www.riegl.com
phone:+4329824211
_____________________________________________

RIEGL Laser Measurement Systems GmbH
Riedenburgstra?e 48, 3580 Horn, Austria
Registered at Landesgericht Krems, FN 40233 t

________________________________ Disclaimer _______________________________

This email and any files attached  are intended for the  addressee  and may
contain  information of a confidential  nature. If you are not the intended
recipient, be aware that this email was sent to you in error and you should
not disclose,  distribute, print,  copy or make  other use of this email or
its attachments.  In that case please  notify us by return email, and erase
all copies of the message and attachments. Thank you.
RIEGL  reserves the right to monitor  (and examine for viruses)  all emails
and email  attachments, both inbound and outbound. Email communications and
their attachments  may not be secure or error- or  virus- free and the com-
pany does not accept  liability or  responsibility for such  matters or the
consequences thereof.
From hobu.inc at gmail.com  Tue Feb  7 18:08:03 2012
From: hobu.inc at gmail.com (Howard Butler)
Date: Tue Feb  7 18:08:14 2012
Subject: [pdal] OSGeo #islandwood Sprint Activities Update
Message-ID: <5C8CFD96-5E50-4409-977A-C40B2A4224C9@gmail.com>

All,

I just wanted to give you an update on what's been done at the OSGeo #islandwood code sprint thus far.  

I have implemented a drivers.text.writer driver that tries to be smart about output types based on what is given in the dimension (floats with precision, integer types).  Delimiter and quoting are configurable. Dimension selectivity is not, however, as this will come from another filter yet to be developed that allows a user to mark dimensions as active or not.  I hope to have that done by the end of sprinting tomorrow.

Pete Gadomski stood up a Jenkins [1] build bot for us at http://jenkins.pointcloud.org  We now have tests running for every push to github, and notifications are sent to both the pdal-commits email as well as #pdal on irc.freenode.net.  Thanks Pete!

Kirk McKelvey has been making huge progress on getting a Boost embedding strategy working with bcp as was discussed earlier.  The plan is to (hopefully) allow users to build with either a (newish) system boost, or the custom one that was extracted by bcp and shipped with PDAL. There may be some rough edges, but this stuff should be close by the end one the sprint.  I'm really excited by this -- compressing one developer's intense Boost deployment pain so all of us can benefit.  Great work Kirk!

Howard

[1] http://jenkins-ci.org
From michael.rosen at gmail.com  Thu Feb  9 18:48:47 2012
From: michael.rosen at gmail.com (Michael Rosen)
Date: Thu Feb  9 18:49:12 2012
Subject: [pdal] Boost compile failure under MSVC 2010 : droppable
 accumulator (boost ticket 6535)
Message-ID: <CAAhorQk5VjTr60W3A+zFueKux-_4S3=DaZNjioRsL0GNvoKZvw@mail.gmail.com>

Just got back from the codesprint at Islandwood.  One thing we found out is
that you could not build under windows.  We've got a work around checked
into include/pdal/filters/Stats.hpp but that's not fixing the problem.

I'm re-posting here in the hopes that someone (Mateuz?) could offer some
insight into this:

https://svn.boost.org/trac/boost/ticket/6535

We are using Boost 1.48.0 and found a compilation failure on Windows using
VS 2010. The project builds properly on Linux and OSX. I've provided a
concise repro below. In short

   - a plain density accumulator is OK
   - a droppable density accumulator fails to compile (missing operator)
   - a droppable sum accumulator is OK.


#include <boost/accumulators/accumulators.hpp>
#include <boost/accumulators/statistics/density.hpp>
#include <boost/accumulators/statistics/stats.hpp>
#include <boost/accumulators/statistics/sum.hpp>
using namespace boost;
using namespace accumulators;
// OK.  Plain density accumulator.  Compiles fine on VStudio 2010, boost v1.48.0
//typedef accumulator_set<double, features<tag::density> > DensityAcc;

// NG.  Droppable density accumulator causes "error C2676: binary '['
: 'const boost::accumulators::droppable_accumulator<Accumulator>' does
not define this operator or a conversion to a type acceptable to the
predefined operator"
typedef accumulator_set<double, features< droppable<tag::density>> > DensityAcc;

// OK.  Droppable sum accumulator seems OK.
// typedef accumulator_set<double, features< droppable<tag::sum>> > SumAcc;

int main()
{
  DensityAcc myAccumulator( tag::density::num_bins = 20,
tag::density::cache_size = 10);
  //SumAcc myAccumulator;
  return 0;
}
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/pdal/attachments/20120209/4425ffad/attachment.html
