From antonio.molina at nmgroup.com  Mon Mar  2 08:25:11 2020
From: antonio.molina at nmgroup.com (Antonio Molina)
Date: Mon, 2 Mar 2020 16:25:11 +0000
Subject: [pdal] RGB colors by intesity
Message-ID: <CAAJ=AARcA3ZtFgmZinz5ogrmmyOQLh0vHe+DOd1Mo3ib+L9c9g@mail.gmail.com>

Hello,

I am new with PDAL. I have been using the last three years LAStools and I
have now a problem that I don't know how to solve with LAStools, so I am
exploring other tools/libraries/software.

I want to RGB colourise a point cloud but using Intensity values of each
point to blend the colours.

So, for example, let's say that I have the vegetation RGB colourise
monochromatically like R0 G255 B0. My goal is to multiply the RGB values of
each point by the intensity value of each point (I have already set the
intensity values between 0 and 255). So doing it, I will get a brighter
green where the intensity is higher and a darker green where intensity is
lower. My RGB will be then scaled up to 16 bit which is not a problem for
me.

Does it sound possible to you using PDAL??

Thank you very much


Kind regards

Antonio Javier Soto Molina



<https://www.linkedin.com/company/nmgroup/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200302/59551ff0/attachment.html>

From doug_newcomb at fws.gov  Mon Mar  2 08:33:03 2020
From: doug_newcomb at fws.gov (Newcomb, Doug)
Date: Mon, 2 Mar 2020 16:33:03 +0000
Subject: [pdal] [EXTERNAL]  RGB colors by intesity
In-Reply-To: <CAAJ=AARcA3ZtFgmZinz5ogrmmyOQLh0vHe+DOd1Mo3ib+L9c9g@mail.gmail.com>
References: <CAAJ=AARcA3ZtFgmZinz5ogrmmyOQLh0vHe+DOd1Mo3ib+L9c9g@mail.gmail.com>
Message-ID: <DM6PR09MB544801FAC59733E5C97E06A0F1E70@DM6PR09MB5448.namprd09.prod.outlook.com>

Antonio,
This sounds interesting, but I have not found Intensity to be a calibrated metric.  It can vary from collection to collection.

Doug
________________________________
From: pdal <pdal-bounces at lists.osgeo.org> on behalf of Antonio Molina <antonio.molina at nmgroup.com>
Sent: Monday, March 2, 2020 11:25 AM
To: pdal at lists.osgeo.org <pdal at lists.osgeo.org>
Subject: [EXTERNAL] [pdal] RGB colors by intesity

Hello,

I am new with PDAL. I have been using the last three years LAStools and I have now a problem that I don't know how to solve with LAStools, so I am exploring other tools/libraries/software.

I want to RGB colourise a point cloud but using Intensity values of each point to blend the colours.

So, for example, let's say that I have the vegetation RGB colourise monochromatically like R0 G255 B0. My goal is to multiply the RGB values of each point by the intensity value of each point (I have already set the intensity values between 0 and 255). So doing it, I will get a brighter green where the intensity is higher and a darker green where intensity is lower. My RGB will be then scaled up to 16 bit which is not a problem for me.

Does it sound possible to you using PDAL??

Thank you very much


Kind regards

Antonio Javier Soto Molina



<https://www.linkedin.com/company/nmgroup/>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200302/13678976/attachment.html>

From connor at hobu.co  Mon Mar  2 09:08:46 2020
From: connor at hobu.co (Connor Manning)
Date: Mon, 2 Mar 2020 11:08:46 -0600
Subject: [pdal] RGB colors by intesity
In-Reply-To: <CAAJ=AARcA3ZtFgmZinz5ogrmmyOQLh0vHe+DOd1Mo3ib+L9c9g@mail.gmail.com>
References: <CAAJ=AARcA3ZtFgmZinz5ogrmmyOQLh0vHe+DOd1Mo3ib+L9c9g@mail.gmail.com>
Message-ID: <CAO=Fyj+k=qQ2R9RSdKs+fvG25a6L5+TeE1_LkCs9iFASPWLJJw@mail.gmail.com>

I would recommend the Python filter:
https://pdal.io/stages/filters.python.html

On Mon, Mar 2, 2020 at 10:25 AM Antonio Molina <antonio.molina at nmgroup.com>
wrote:

> Hello,
>
> I am new with PDAL. I have been using the last three years LAStools and I
> have now a problem that I don't know how to solve with LAStools, so I am
> exploring other tools/libraries/software.
>
> I want to RGB colourise a point cloud but using Intensity values of each
> point to blend the colours.
>
> So, for example, let's say that I have the vegetation RGB colourise
> monochromatically like R0 G255 B0. My goal is to multiply the RGB values of
> each point by the intensity value of each point (I have already set the
> intensity values between 0 and 255). So doing it, I will get a brighter
> green where the intensity is higher and a darker green where intensity is
> lower. My RGB will be then scaled up to 16 bit which is not a problem for
> me.
>
> Does it sound possible to you using PDAL??
>
> Thank you very much
>
>
> Kind regards
>
> Antonio Javier Soto Molina
>
>
>
> <https://www.linkedin.com/company/nmgroup/>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200302/6528be6d/attachment.html>

From npowell at aero-graphics.com  Thu Mar  5 14:15:43 2020
From: npowell at aero-graphics.com (Nigel Powell)
Date: Thu, 5 Mar 2020 22:15:43 +0000
Subject: [pdal] Error Writing VLRS
Message-ID: <55cafa6fc0904fc68d0f22b0b065a3f8@Mail13.ads.aero-graphics.com>

Hi Pdal'ers.
I'm having an issue writing VLRS to a las file using a pipeline.
The interesting thing is that if I cut-n-paste the example from the pdal web site the json file still does not validate...

Any thoughts?

I'm running pdal 2.0.1 on a M$ Windows 10 workstation, install via Anaconda.

Vlrs.json contains the following [cut-n-paste from the web site]
[
    {
        "type":"readers.las",
        "filename":"inputfile.las"
    },
    {
        "type":"writers.las",
        "vlrs": [{
            "description": "A description under 32 bytes",
            "record_id": 42,
            "user_id": "hobu",
            "data": "dGhpcyBpcyBzb21lIHRleHQ="
            },
            {
            "description": "A description under 32 bytes",
            "record_id": 43,
            "user_id": "hobu",
            "data": "dGhpcyBpcyBzb21lIG1vcmUgdGV4dA=="
            }],
        "filename":"outputfile.las"
    }
]

Pdal -version
--------------------------------------------------------------------------------
pdal 2.0.1 (git-version: Release)
--------------------------------------------------------------------------------

pdal pipeline vlrs.json --validate
{
    "error_detail": "JSON pipeline: Invalid value type for option list 'vlrs'.",
    "streamable": false,
    "valid": false
}

Obviously I'm not trying to write those VLRs into my las file but when my actual pipeline file was throwing an error I tried the example to see what the difference might be.. so it would appear that either the example is wrong/out dated or we have a small undocumented feature in pdal.

Many thanks,
Nigel Powell

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200305/ff83b2c4/attachment.html>

From andrew.bell.ia at gmail.com  Thu Mar  5 14:45:27 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 5 Mar 2020 17:45:27 -0500
Subject: [pdal] Error Writing VLRS
In-Reply-To: <55cafa6fc0904fc68d0f22b0b065a3f8@Mail13.ads.aero-graphics.com>
References: <55cafa6fc0904fc68d0f22b0b065a3f8@Mail13.ads.aero-graphics.com>
Message-ID: <CACJ51z2SwD73njYGEaThqToZJWAKTrw6QAQdRiJiVH3ZbaXsDQ@mail.gmail.com>

I believe that this was recently fixed:

https://github.com/PDAL/PDAL/issues/2937

On Thu, Mar 5, 2020 at 5:21 PM Nigel Powell <npowell at aero-graphics.com>
wrote:

> Hi Pdal’ers.
>
> I’m having an issue writing VLRS to a las file using a pipeline.
>
> The interesting thing is that if I cut-n-paste the example from the pdal
> web site the json file still does not validate…
>
>
>
> Any thoughts?
>
>
>
> I’m running pdal 2.0.1 on a M$ Windows 10 workstation, install via
> Anaconda.
>
>
>
> Vlrs.json contains the following [cut-n-paste from the web site]
>
> [
>
>     {
>
>         "type":"readers.las",
>
>         "filename":"inputfile.las"
>
>     },
>
>     {
>
>         "type":"writers.las",
>
>         "vlrs": [{
>
>             "description": "A description under 32 bytes",
>
>             "record_id": 42,
>
>             "user_id": "hobu",
>
>             "data": "dGhpcyBpcyBzb21lIHRleHQ="
>
>             },
>
>             {
>
>             "description": "A description under 32 bytes",
>
>             "record_id": 43,
>
>             "user_id": "hobu",
>
>             "data": "dGhpcyBpcyBzb21lIG1vcmUgdGV4dA=="
>
>             }],
>
>         "filename":"outputfile.las"
>
>     }
>
> ]
>
>
>
> Pdal –version
>
>
> --------------------------------------------------------------------------------
>
> pdal 2.0.1 (git-version: Release)
>
>
> --------------------------------------------------------------------------------
>
>
>
> pdal pipeline vlrs.json --validate
>
> {
>
>     "error_detail": "JSON pipeline: Invalid value type for option list
> 'vlrs'.",
>
>     "streamable": false,
>
>     "valid": false
>
> }
>
>
>
> Obviously I’m not trying to write those VLRs into my las file but when my
> actual pipeline file was throwing an error I tried the example to see what
> the difference might be.. so it would appear that either the example is
> wrong/out dated or we have a small undocumented feature in pdal.
>
>
>
> Many thanks,
>
> *Nigel Powell*
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200305/5c4b4f30/attachment.html>

From klassen.js at gmail.com  Thu Mar  5 15:36:53 2020
From: klassen.js at gmail.com (Jim Klassen)
Date: Thu, 5 Mar 2020 17:36:53 -0600
Subject: [pdal] filters.icp transformation
In-Reply-To: <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
Message-ID: <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>

I am trying to do something similar (apply ICP on a subset of a large 
dataset) and am running into confusion over the transformation matrix in 
the metadata.

The point cloud output of the ICP filter on the subset looks good. 
However when I try to use the resulting "transform" metadata as a input 
into filters.transformation.matrix over the full dataset, the resulting 
transformation moves the points wildly out of position.

Looking at the code, in IterativeClosestPoint.cpp, it looks like the 
transformation matrix (T) is applied after shifting the point cloud to 
the centroid of the reference point cloud (C), and the shifted back to 
regular coordinates.

So something like Pout = ((P - C) * T) + C

Where P is a 4 element input point vector (x,y,z,1), Pout is the output 
point vector, C is the centroid vector (x,y,z,0), T is the 4x4 
transformation matrix found by ICP.

T is reported in the metadata for the stage, however, C is not reported 
in the metadata.

But the transformation matrix that filters.transformation expects 
something more like

Pout = P * T'

If C is not (0,0,0) then T and T' will be different.

I modified IterativeClosestPoint.cpp to also export the centroid to the 
metadata and then created a pipeline with three transformations, first 
shifting by the negative of the centroid, then applying T, then shifting 
back by the centroid and that produced the expected results.


On 2/18/20 7:24 PM, Bradley Chambers wrote:
> The options are very heavily borrowed from the PCL library, where this 
> was a squared value. Also, keep in mind that the default values may be 
> better suited for terrestrial/robotics applications (as opposed to 
> aerial), and will very likely need some tweaking.
>
> The reported transformation should also be reported in row major 
> order, like the transformation filter. If you find it is not, I’d 
> consider that a bug, so feel free to file a ticket.
>
> PRs are always welcome, especially for documentation!
>
> Brad
>


From andrew.bell.ia at gmail.com  Thu Mar  5 15:41:29 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 5 Mar 2020 18:41:29 -0500
Subject: [pdal] filters.icp transformation
In-Reply-To: <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
Message-ID: <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>

This seems the same as this already reported bug:

https://github.com/PDAL/PDAL/issues/2939

If you want to submit a PR, I'll look it over.

Thanks!


On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com> wrote:

> I am trying to do something similar (apply ICP on a subset of a large
> dataset) and am running into confusion over the transformation matrix in
> the metadata.
>
> The point cloud output of the ICP filter on the subset looks good.
> However when I try to use the resulting "transform" metadata as a input
> into filters.transformation.matrix over the full dataset, the resulting
> transformation moves the points wildly out of position.
>
> Looking at the code, in IterativeClosestPoint.cpp, it looks like the
> transformation matrix (T) is applied after shifting the point cloud to
> the centroid of the reference point cloud (C), and the shifted back to
> regular coordinates.
>
> So something like Pout = ((P - C) * T) + C
>
> Where P is a 4 element input point vector (x,y,z,1), Pout is the output
> point vector, C is the centroid vector (x,y,z,0), T is the 4x4
> transformation matrix found by ICP.
>
> T is reported in the metadata for the stage, however, C is not reported
> in the metadata.
>
> But the transformation matrix that filters.transformation expects
> something more like
>
> Pout = P * T'
>
> If C is not (0,0,0) then T and T' will be different.
>
> I modified IterativeClosestPoint.cpp to also export the centroid to the
> metadata and then created a pipeline with three transformations, first
> shifting by the negative of the centroid, then applying T, then shifting
> back by the centroid and that produced the expected results.
>
>
> On 2/18/20 7:24 PM, Bradley Chambers wrote:
> > The options are very heavily borrowed from the PCL library, where this
> > was a squared value. Also, keep in mind that the default values may be
> > better suited for terrestrial/robotics applications (as opposed to
> > aerial), and will very likely need some tweaking.
> >
> > The reported transformation should also be reported in row major
> > order, like the transformation filter. If you find it is not, I’d
> > consider that a bug, so feel free to file a ticket.
> >
> > PRs are always welcome, especially for documentation!
> >
> > Brad
> >
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200305/4d6ccd58/attachment-0001.html>

From klassen.js at gmail.com  Thu Mar  5 15:53:38 2020
From: klassen.js at gmail.com (Jim Klassen)
Date: Thu, 5 Mar 2020 17:53:38 -0600
Subject: [pdal] filters.icp transformation
In-Reply-To: <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
 <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
Message-ID: <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>

Does a strategy of adding the centroid to the filters.icp metadata and 
updating filters.icp documentation with the pipeline to apply it sound good?

On 3/5/20 5:41 PM, Andrew Bell wrote:
> This seems the same as this already reported bug:
>
> https://github.com/PDAL/PDAL/issues/2939
>
> If you want to submit a PR, I'll look it over.
>
> Thanks!
>
>
> On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com 
> <mailto:klassen.js at gmail.com>> wrote:
>
>     I am trying to do something similar (apply ICP on a subset of a large
>     dataset) and am running into confusion over the transformation
>     matrix in
>     the metadata.
>
>     The point cloud output of the ICP filter on the subset looks good.
>     However when I try to use the resulting "transform" metadata as a
>     input
>     into filters.transformation.matrix over the full dataset, the
>     resulting
>     transformation moves the points wildly out of position.
>
>     Looking at the code, in IterativeClosestPoint.cpp, it looks like the
>     transformation matrix (T) is applied after shifting the point
>     cloud to
>     the centroid of the reference point cloud (C), and the shifted
>     back to
>     regular coordinates.
>
>     So something like Pout = ((P - C) * T) + C
>
>     Where P is a 4 element input point vector (x,y,z,1), Pout is the
>     output
>     point vector, C is the centroid vector (x,y,z,0), T is the 4x4
>     transformation matrix found by ICP.
>
>     T is reported in the metadata for the stage, however, C is not
>     reported
>     in the metadata.
>
>     But the transformation matrix that filters.transformation expects
>     something more like
>
>     Pout = P * T'
>
>     If C is not (0,0,0) then T and T' will be different.
>
>     I modified IterativeClosestPoint.cpp to also export the centroid
>     to the
>     metadata and then created a pipeline with three transformations,
>     first
>     shifting by the negative of the centroid, then applying T, then
>     shifting
>     back by the centroid and that produced the expected results.
>
>
>     On 2/18/20 7:24 PM, Bradley Chambers wrote:
>     > The options are very heavily borrowed from the PCL library,
>     where this
>     > was a squared value. Also, keep in mind that the default values
>     may be
>     > better suited for terrestrial/robotics applications (as opposed to
>     > aerial), and will very likely need some tweaking.
>     >
>     > The reported transformation should also be reported in row major
>     > order, like the transformation filter. If you find it is not, I’d
>     > consider that a bug, so feel free to file a ticket.
>     >
>     > PRs are always welcome, especially for documentation!
>     >
>     > Brad
>     >
>
>     _______________________________________________
>     pdal mailing list
>     pdal at lists.osgeo.org <mailto:pdal at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/pdal
>
>
>
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com <mailto:andrew.bell.ia at gmail.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200305/d838d2a7/attachment.html>

From brad.chambers at gmail.com  Fri Mar  6 06:47:34 2020
From: brad.chambers at gmail.com (Bradley Chambers)
Date: Fri, 6 Mar 2020 09:47:34 -0500
Subject: [pdal] filters.icp transformation
In-Reply-To: <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
 <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
 <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>
Message-ID: <CAJyqqPzWjvZvMiig8gJMLM+vsbVJqWgXrPqxqfoBmS1jKZRc+Q@mail.gmail.com>

I’m wondering if it would make more sense to simply compose the three steps
into a single output transformation. Making the user do the three steps
themselves seems overly complicated. Is there a scenario in which we only
want the transformation of the centered clouds (current state of the code)?
Your use case is probably more common.

On Thu, Mar 5, 2020 at 18:53 Jim Klassen <klassen.js at gmail.com> wrote:

> Does a strategy of adding the centroid to the filters.icp metadata and
> updating filters.icp documentation with the pipeline to apply it sound good?
> On 3/5/20 5:41 PM, Andrew Bell wrote:
>
> This seems the same as this already reported bug:
>
> https://github.com/PDAL/PDAL/issues/2939
>
> If you want to submit a PR, I'll look it over.
>
> Thanks!
>
>
> On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com> wrote:
>
>> I am trying to do something similar (apply ICP on a subset of a large
>> dataset) and am running into confusion over the transformation matrix in
>> the metadata.
>>
>> The point cloud output of the ICP filter on the subset looks good.
>> However when I try to use the resulting "transform" metadata as a input
>> into filters.transformation.matrix over the full dataset, the resulting
>> transformation moves the points wildly out of position.
>>
>> Looking at the code, in IterativeClosestPoint.cpp, it looks like the
>> transformation matrix (T) is applied after shifting the point cloud to
>> the centroid of the reference point cloud (C), and the shifted back to
>> regular coordinates.
>>
>> So something like Pout = ((P - C) * T) + C
>>
>> Where P is a 4 element input point vector (x,y,z,1), Pout is the output
>> point vector, C is the centroid vector (x,y,z,0), T is the 4x4
>> transformation matrix found by ICP.
>>
>> T is reported in the metadata for the stage, however, C is not reported
>> in the metadata.
>>
>> But the transformation matrix that filters.transformation expects
>> something more like
>>
>> Pout = P * T'
>>
>> If C is not (0,0,0) then T and T' will be different.
>>
>> I modified IterativeClosestPoint.cpp to also export the centroid to the
>> metadata and then created a pipeline with three transformations, first
>> shifting by the negative of the centroid, then applying T, then shifting
>> back by the centroid and that produced the expected results.
>>
>>
>> On 2/18/20 7:24 PM, Bradley Chambers wrote:
>> > The options are very heavily borrowed from the PCL library, where this
>> > was a squared value. Also, keep in mind that the default values may be
>> > better suited for terrestrial/robotics applications (as opposed to
>> > aerial), and will very likely need some tweaking.
>> >
>> > The reported transformation should also be reported in row major
>> > order, like the transformation filter. If you find it is not, I’d
>> > consider that a bug, so feel free to file a ticket.
>> >
>> > PRs are always welcome, especially for documentation!
>> >
>> > Brad
>> >
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200306/eaf1d570/attachment.html>

From klassen.js at gmail.com  Fri Mar  6 07:24:30 2020
From: klassen.js at gmail.com (Jim Klassen)
Date: Fri, 6 Mar 2020 09:24:30 -0600
Subject: [pdal] filters.icp transformation
In-Reply-To: <CAJyqqPzWjvZvMiig8gJMLM+vsbVJqWgXrPqxqfoBmS1jKZRc+Q@mail.gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
 <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
 <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>
 <CAJyqqPzWjvZvMiig8gJMLM+vsbVJqWgXrPqxqfoBmS1jKZRc+Q@mail.gmail.com>
Message-ID: <18092324-6c22-c219-9c07-c3e848eb9a14@gmail.com>

I suspect we could compose it three operations into a single transform matrix, but probably at a loss of precision. (I suspect preserving precision this is why filters.icp bothers with calculating and shifting to the centroid in the first place).

Alternatively, it might be simpler for the user if the centroid value and matrix could be passed directly into filters.transform (instead of needing three filters.transforms in the pipeline).

In my opinion, the current workflow of saving the metadata, manually parsing it, and then constructing a new pipeline with values from the metadata isn't very user friendly in general. If this was something I was doing regularly, I would certainly write a script do those steps for me (probably as part of a larger workflow).  And if a script is generating the second pipeline, it doesn't really matter to me if the second pipeline is one stage or three stages.

I have a first pass at a PR here:
https://github.com/PDAL/PDAL/pull/2962

On Fri, Mar 6, 2020, 08:47 Bradley Chambers <brad.chambers at gmail.com <mailto:brad.chambers at gmail.com>> wrote:

    I’m wondering if it would make more sense to simply compose the three steps into a single output transformation. Making the user do the three steps themselves seems overly complicated. Is there a scenario in which we only want the transformation of the centered clouds (current state of the code)? Your use case is probably more common.

    On Thu, Mar 5, 2020 at 18:53 Jim Klassen <klassen.js at gmail.com <mailto:klassen.js at gmail.com>> wrote:

        Does a strategy of adding the centroid to the filters.icp metadata and updating filters.icp documentation with the pipeline to apply it sound good?

        On 3/5/20 5:41 PM, Andrew Bell wrote:
>         This seems the same as this already reported bug:
>
>         https://github.com/PDAL/PDAL/issues/2939
>
>         If you want to submit a PR, I'll look it over.
>
>         Thanks!
>
>
>         On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com <mailto:klassen.js at gmail.com>> wrote:
>
>             I am trying to do something similar (apply ICP on a subset of a large
>             dataset) and am running into confusion over the transformation matrix in
>             the metadata.
>
>             The point cloud output of the ICP filter on the subset looks good.
>             However when I try to use the resulting "transform" metadata as a input
>             into filters.transformation.matrix over the full dataset, the resulting
>             transformation moves the points wildly out of position.
>
>             Looking at the code, in IterativeClosestPoint.cpp, it looks like the
>             transformation matrix (T) is applied after shifting the point cloud to
>             the centroid of the reference point cloud (C), and the shifted back to
>             regular coordinates.
>
>             So something like Pout = ((P - C) * T) + C
>
>             Where P is a 4 element input point vector (x,y,z,1), Pout is the output
>             point vector, C is the centroid vector (x,y,z,0), T is the 4x4
>             transformation matrix found by ICP.
>
>             T is reported in the metadata for the stage, however, C is not reported
>             in the metadata.
>
>             But the transformation matrix that filters.transformation expects
>             something more like
>
>             Pout = P * T'
>
>             If C is not (0,0,0) then T and T' will be different.
>
>             I modified IterativeClosestPoint.cpp to also export the centroid to the
>             metadata and then created a pipeline with three transformations, first
>             shifting by the negative of the centroid, then applying T, then shifting
>             back by the centroid and that produced the expected results.
>
>
>             On 2/18/20 7:24 PM, Bradley Chambers wrote:
>             > The options are very heavily borrowed from the PCL library, where this
>             > was a squared value. Also, keep in mind that the default values may be
>             > better suited for terrestrial/robotics applications (as opposed to
>             > aerial), and will very likely need some tweaking.
>             >
>             > The reported transformation should also be reported in row major
>             > order, like the transformation filter. If you find it is not, I’d
>             > consider that a bug, so feel free to file a ticket.
>             >
>             > PRs are always welcome, especially for documentation!
>             >
>             > Brad
>             >
>
>             _______________________________________________
>             pdal mailing list
>             pdal at lists.osgeo.org <mailto:pdal at lists.osgeo.org>
>             https://lists.osgeo.org/mailman/listinfo/pdal
>
>
>
>         -- 
>         Andrew Bell
>         andrew.bell.ia at gmail.com <mailto:andrew.bell.ia at gmail.com>
        _______________________________________________
        pdal mailing list
        pdal at lists.osgeo.org <mailto:pdal at lists.osgeo.org>
        https://lists.osgeo.org/mailman/listinfo/pdal

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200306/27f296ad/attachment-0001.html>

From brad.chambers at gmail.com  Fri Mar  6 07:39:22 2020
From: brad.chambers at gmail.com (Bradley Chambers)
Date: Fri, 6 Mar 2020 10:39:22 -0500
Subject: [pdal] filters.icp transformation
In-Reply-To: <18092324-6c22-c219-9c07-c3e848eb9a14@gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
 <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
 <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>
 <CAJyqqPzWjvZvMiig8gJMLM+vsbVJqWgXrPqxqfoBmS1jKZRc+Q@mail.gmail.com>
 <18092324-6c22-c219-9c07-c3e848eb9a14@gmail.com>
Message-ID: <CAJyqqPydE5p9D9+T=4PQSj7nxVryUR0MvZgsOWdCtegiYLPvvw@mail.gmail.com>

Jim, do you have any thoughts on how you'd rather communicate the
transformation result of ICP (whatever we settle on)? What would be more
user friendly?

On Fri, Mar 6, 2020 at 10:24 AM Jim Klassen <klassen.js at gmail.com> wrote:

> I suspect we could compose it three operations into a single transform
> matrix, but probably at a loss of precision.  (I suspect preserving
> precision this is why filters.icp bothers with calculating and shifting to
> the centroid in the first place).
>
> Alternatively, it might be simpler for the user if the centroid value and
> matrix could be passed directly into filters.transform (instead of needing
> three filters.transforms in the pipeline).
>
> In my opinion, the current workflow of saving the metadata, manually
> parsing it, and then constructing a new pipeline with values from the
> metadata isn't very user friendly in general.  If this was something I was
> doing regularly, I would certainly write a script do those steps for me
> (probably as part of a larger workflow).  And if a script is generating the
> second pipeline, it doesn't really matter to me if the second pipeline is
> one stage or three stages.
>
> I have a first pass at a PR here:
> https://github.com/PDAL/PDAL/pull/2962
>
> On Fri, Mar 6, 2020, 08:47 Bradley Chambers <brad.chambers at gmail.com>
> wrote:
>
>> I’m wondering if it would make more sense to simply compose the three
>> steps into a single output transformation. Making the user do the three
>> steps themselves seems overly complicated. Is there a scenario in which we
>> only want the transformation of the centered clouds (current state of the
>> code)? Your use case is probably more common.
>>
>> On Thu, Mar 5, 2020 at 18:53 Jim Klassen <klassen.js at gmail.com> wrote:
>>
>>> Does a strategy of adding the centroid to the filters.icp metadata and
>>> updating filters.icp documentation with the pipeline to apply it sound good?
>>> On 3/5/20 5:41 PM, Andrew Bell wrote:
>>>
>>> This seems the same as this already reported bug:
>>>
>>> https://github.com/PDAL/PDAL/issues/2939
>>>
>>> If you want to submit a PR, I'll look it over.
>>>
>>> Thanks!
>>>
>>>
>>> On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com> wrote:
>>>
>>>> I am trying to do something similar (apply ICP on a subset of a large
>>>> dataset) and am running into confusion over the transformation matrix
>>>> in
>>>> the metadata.
>>>>
>>>> The point cloud output of the ICP filter on the subset looks good.
>>>> However when I try to use the resulting "transform" metadata as a input
>>>> into filters.transformation.matrix over the full dataset, the resulting
>>>> transformation moves the points wildly out of position.
>>>>
>>>> Looking at the code, in IterativeClosestPoint.cpp, it looks like the
>>>> transformation matrix (T) is applied after shifting the point cloud to
>>>> the centroid of the reference point cloud (C), and the shifted back to
>>>> regular coordinates.
>>>>
>>>> So something like Pout = ((P - C) * T) + C
>>>>
>>>> Where P is a 4 element input point vector (x,y,z,1), Pout is the output
>>>> point vector, C is the centroid vector (x,y,z,0), T is the 4x4
>>>> transformation matrix found by ICP.
>>>>
>>>> T is reported in the metadata for the stage, however, C is not reported
>>>> in the metadata.
>>>>
>>>> But the transformation matrix that filters.transformation expects
>>>> something more like
>>>>
>>>> Pout = P * T'
>>>>
>>>> If C is not (0,0,0) then T and T' will be different.
>>>>
>>>> I modified IterativeClosestPoint.cpp to also export the centroid to the
>>>> metadata and then created a pipeline with three transformations, first
>>>> shifting by the negative of the centroid, then applying T, then
>>>> shifting
>>>> back by the centroid and that produced the expected results.
>>>>
>>>>
>>>> On 2/18/20 7:24 PM, Bradley Chambers wrote:
>>>> > The options are very heavily borrowed from the PCL library, where
>>>> this
>>>> > was a squared value. Also, keep in mind that the default values may
>>>> be
>>>> > better suited for terrestrial/robotics applications (as opposed to
>>>> > aerial), and will very likely need some tweaking.
>>>> >
>>>> > The reported transformation should also be reported in row major
>>>> > order, like the transformation filter. If you find it is not, I’d
>>>> > consider that a bug, so feel free to file a ticket.
>>>> >
>>>> > PRs are always welcome, especially for documentation!
>>>> >
>>>> > Brad
>>>> >
>>>>
>>>> _______________________________________________
>>>> pdal mailing list
>>>> pdal at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>>
>>>
>>>
>>> --
>>> Andrew Bell
>>> andrew.bell.ia at gmail.com
>>>
>>> _______________________________________________
>>> pdal mailing list
>>> pdal at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200306/0e223f51/attachment.html>

From j.meyer at utah.edu  Fri Mar  6 07:42:02 2020
From: j.meyer at utah.edu (Joachim Meyer)
Date: Fri, 6 Mar 2020 15:42:02 +0000
Subject: [pdal] filters.icp transformation
In-Reply-To: <CAJyqqPydE5p9D9+T=4PQSj7nxVryUR0MvZgsOWdCtegiYLPvvw@mail.gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
 <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
 <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>
 <CAJyqqPzWjvZvMiig8gJMLM+vsbVJqWgXrPqxqfoBmS1jKZRc+Q@mail.gmail.com>
 <18092324-6c22-c219-9c07-c3e848eb9a14@gmail.com>
 <CAJyqqPydE5p9D9+T=4PQSj7nxVryUR0MvZgsOWdCtegiYLPvvw@mail.gmail.com>
Message-ID: <F4C17CA1-3F8F-435B-9CA3-D696F2EBE482@utah.edu>

I would be happy to apply Jim’s solution to my use case. At least for the first pass and to be able to use PDAL in all my point cloud manipulations.

Also commented that on his opened PR.


> On Mar 6, 2020, at 8:39 AM, Bradley Chambers <brad.chambers at gmail.com> wrote:
> 
> Jim, do you have any thoughts on how you'd rather communicate the transformation result of ICP (whatever we settle on)? What would be more user friendly?
> 
> On Fri, Mar 6, 2020 at 10:24 AM Jim Klassen <klassen.js at gmail.com> wrote:
> I suspect we could compose it three operations into a single transform matrix, but probably at a loss of precision.  (I suspect preserving precision this is why filters.icp bothers with calculating and shifting to the centroid in the first place).
> 
> Alternatively, it might be simpler for the user if the centroid value and matrix could be passed directly into filters.transform (instead of needing three filters.transforms in the pipeline).
> 
> In my opinion, the current workflow of saving the metadata, manually parsing it, and then constructing a new pipeline with values from the metadata isn't very user friendly in general.  If this was something I was doing regularly, I would certainly write a script do those steps for me (probably as part of a larger workflow).  And if a script is generating the second pipeline, it doesn't really matter to me if the second pipeline is one stage or three stages.
> 
> I have a first pass at a PR here:
> https://github.com/PDAL/PDAL/pull/2962
> 
> On Fri, Mar 6, 2020, 08:47 Bradley Chambers <brad.chambers at gmail.com> wrote:
> I’m wondering if it would make more sense to simply compose the three steps into a single output transformation. Making the user do the three steps themselves seems overly complicated. Is there a scenario in which we only want the transformation of the centered clouds (current state of the code)? Your use case is probably more common. 
> 
> On Thu, Mar 5, 2020 at 18:53 Jim Klassen <klassen.js at gmail.com> wrote:
> Does a strategy of adding the centroid to the filters.icp metadata and updating filters.icp documentation with the pipeline to apply it sound good?
> 
> On 3/5/20 5:41 PM, Andrew Bell wrote:
>> This seems the same as this already reported bug:
>> 
>> https://github.com/PDAL/PDAL/issues/2939
>> 
>> If you want to submit a PR, I'll look it over.
>> 
>> Thanks!
>> 
>> 
>> On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com> wrote:
>> I am trying to do something similar (apply ICP on a subset of a large 
>> dataset) and am running into confusion over the transformation matrix in 
>> the metadata.
>> 
>> The point cloud output of the ICP filter on the subset looks good. 
>> However when I try to use the resulting "transform" metadata as a input 
>> into filters.transformation.matrix over the full dataset, the resulting 
>> transformation moves the points wildly out of position.
>> 
>> Looking at the code, in IterativeClosestPoint.cpp, it looks like the 
>> transformation matrix (T) is applied after shifting the point cloud to 
>> the centroid of the reference point cloud (C), and the shifted back to 
>> regular coordinates.
>> 
>> So something like Pout = ((P - C) * T) + C
>> 
>> Where P is a 4 element input point vector (x,y,z,1), Pout is the output 
>> point vector, C is the centroid vector (x,y,z,0), T is the 4x4 
>> transformation matrix found by ICP.
>> 
>> T is reported in the metadata for the stage, however, C is not reported 
>> in the metadata.
>> 
>> But the transformation matrix that filters.transformation expects 
>> something more like
>> 
>> Pout = P * T'
>> 
>> If C is not (0,0,0) then T and T' will be different.
>> 
>> I modified IterativeClosestPoint.cpp to also export the centroid to the 
>> metadata and then created a pipeline with three transformations, first 
>> shifting by the negative of the centroid, then applying T, then shifting 
>> back by the centroid and that produced the expected results.
>> 
>> 
>> On 2/18/20 7:24 PM, Bradley Chambers wrote:
>> > The options are very heavily borrowed from the PCL library, where this 
>> > was a squared value. Also, keep in mind that the default values may be 
>> > better suited for terrestrial/robotics applications (as opposed to 
>> > aerial), and will very likely need some tweaking.
>> >
>> > The reported transformation should also be reported in row major 
>> > order, like the transformation filter. If you find it is not, I’d 
>> > consider that a bug, so feel free to file a ticket.
>> >
>> > PRs are always welcome, especially for documentation!
>> >
>> > Brad
>> >
>> 
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>> 
>> 
>> -- 
>> Andrew Bell
>> andrew.bell.ia at gmail.com
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal


From klassen.js at gmail.com  Fri Mar  6 08:49:55 2020
From: klassen.js at gmail.com (James Klassen)
Date: Fri, 6 Mar 2020 10:49:55 -0600
Subject: [pdal] filters.icp transformation
In-Reply-To: <CAJyqqPydE5p9D9+T=4PQSj7nxVryUR0MvZgsOWdCtegiYLPvvw@mail.gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
 <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
 <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>
 <CAJyqqPzWjvZvMiig8gJMLM+vsbVJqWgXrPqxqfoBmS1jKZRc+Q@mail.gmail.com>
 <18092324-6c22-c219-9c07-c3e848eb9a14@gmail.com>
 <CAJyqqPydE5p9D9+T=4PQSj7nxVryUR0MvZgsOWdCtegiYLPvvw@mail.gmail.com>
Message-ID: <CAHqX796YY=rKUyJTnSped707CeHGRZZbqAA_XMqCY+jCO5Tz6Q@mail.gmail.com>

Some ideas:

Add a centroid (or center?) option to filters.transformation so this can be
done in one filters.transform stage.

It would be slightly simpler if filters.transformation (or a maybe a
different filter) could read the filters.icp metadata file directly instead
of having to separately shuttle the values across to a second pipeline.
This could get complicated if the filters.icp was part of a more complex
pipeline (possibly with multiple filters.icp operations).

If the goal is just to run ICP on a sub-sampled dataset (for performance
reasons) and the apply the resulting transformation to the whole dataset, a
parameter could be added to filters.icp so that it does the sub-sampling
internally for the ICP stage and then uses the full dataset when it applies
the transformation.  This only helps a very specific use case though and
leaves questions as to how the sample should be created and assumes that
the transformation only needs to be applied once (vs to many tiles, etc.)
This might make examples simpler, but in general, on real data, I'm not
sure this would help.  (This is made worse because filters.icp doesn't
support streaming, and so even if the ICP part is only done on a subset of
the date, it will still be limited in total dataset size, while using a
separate filters.transformation supports streaming and wouldn't be limited).

Overall: With the PR, it is good enough for me.


On Fri, Mar 6, 2020 at 9:39 AM Bradley Chambers <brad.chambers at gmail.com>
wrote:

> Jim, do you have any thoughts on how you'd rather communicate the
> transformation result of ICP (whatever we settle on)? What would be more
> user friendly?
>
> On Fri, Mar 6, 2020 at 10:24 AM Jim Klassen <klassen.js at gmail.com> wrote:
>
>> I suspect we could compose it three operations into a single transform
>> matrix, but probably at a loss of precision.  (I suspect preserving
>> precision this is why filters.icp bothers with calculating and shifting to
>> the centroid in the first place).
>>
>> Alternatively, it might be simpler for the user if the centroid value and
>> matrix could be passed directly into filters.transform (instead of needing
>> three filters.transforms in the pipeline).
>>
>> In my opinion, the current workflow of saving the metadata, manually
>> parsing it, and then constructing a new pipeline with values from the
>> metadata isn't very user friendly in general.  If this was something I was
>> doing regularly, I would certainly write a script do those steps for me
>> (probably as part of a larger workflow).  And if a script is generating the
>> second pipeline, it doesn't really matter to me if the second pipeline is
>> one stage or three stages.
>>
>> I have a first pass at a PR here:
>> https://github.com/PDAL/PDAL/pull/2962
>>
>> On Fri, Mar 6, 2020, 08:47 Bradley Chambers <brad.chambers at gmail.com>
>> wrote:
>>
>>> I’m wondering if it would make more sense to simply compose the three
>>> steps into a single output transformation. Making the user do the three
>>> steps themselves seems overly complicated. Is there a scenario in which we
>>> only want the transformation of the centered clouds (current state of the
>>> code)? Your use case is probably more common.
>>>
>>> On Thu, Mar 5, 2020 at 18:53 Jim Klassen <klassen.js at gmail.com> wrote:
>>>
>>>> Does a strategy of adding the centroid to the filters.icp metadata and
>>>> updating filters.icp documentation with the pipeline to apply it sound good?
>>>> On 3/5/20 5:41 PM, Andrew Bell wrote:
>>>>
>>>> This seems the same as this already reported bug:
>>>>
>>>> https://github.com/PDAL/PDAL/issues/2939
>>>>
>>>> If you want to submit a PR, I'll look it over.
>>>>
>>>> Thanks!
>>>>
>>>>
>>>> On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com>
>>>> wrote:
>>>>
>>>>> I am trying to do something similar (apply ICP on a subset of a large
>>>>> dataset) and am running into confusion over the transformation matrix
>>>>> in
>>>>> the metadata.
>>>>>
>>>>> The point cloud output of the ICP filter on the subset looks good.
>>>>> However when I try to use the resulting "transform" metadata as a
>>>>> input
>>>>> into filters.transformation.matrix over the full dataset, the
>>>>> resulting
>>>>> transformation moves the points wildly out of position.
>>>>>
>>>>> Looking at the code, in IterativeClosestPoint.cpp, it looks like the
>>>>> transformation matrix (T) is applied after shifting the point cloud to
>>>>> the centroid of the reference point cloud (C), and the shifted back to
>>>>> regular coordinates.
>>>>>
>>>>> So something like Pout = ((P - C) * T) + C
>>>>>
>>>>> Where P is a 4 element input point vector (x,y,z,1), Pout is the
>>>>> output
>>>>> point vector, C is the centroid vector (x,y,z,0), T is the 4x4
>>>>> transformation matrix found by ICP.
>>>>>
>>>>> T is reported in the metadata for the stage, however, C is not
>>>>> reported
>>>>> in the metadata.
>>>>>
>>>>> But the transformation matrix that filters.transformation expects
>>>>> something more like
>>>>>
>>>>> Pout = P * T'
>>>>>
>>>>> If C is not (0,0,0) then T and T' will be different.
>>>>>
>>>>> I modified IterativeClosestPoint.cpp to also export the centroid to
>>>>> the
>>>>> metadata and then created a pipeline with three transformations, first
>>>>> shifting by the negative of the centroid, then applying T, then
>>>>> shifting
>>>>> back by the centroid and that produced the expected results.
>>>>>
>>>>>
>>>>> On 2/18/20 7:24 PM, Bradley Chambers wrote:
>>>>> > The options are very heavily borrowed from the PCL library, where
>>>>> this
>>>>> > was a squared value. Also, keep in mind that the default values may
>>>>> be
>>>>> > better suited for terrestrial/robotics applications (as opposed to
>>>>> > aerial), and will very likely need some tweaking.
>>>>> >
>>>>> > The reported transformation should also be reported in row major
>>>>> > order, like the transformation filter. If you find it is not, I’d
>>>>> > consider that a bug, so feel free to file a ticket.
>>>>> >
>>>>> > PRs are always welcome, especially for documentation!
>>>>> >
>>>>> > Brad
>>>>> >
>>>>>
>>>>> _______________________________________________
>>>>> pdal mailing list
>>>>> pdal at lists.osgeo.org
>>>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>>>
>>>>
>>>>
>>>> --
>>>> Andrew Bell
>>>> andrew.bell.ia at gmail.com
>>>>
>>>> _______________________________________________
>>>> pdal mailing list
>>>> pdal at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>>
>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200306/37e76287/attachment-0001.html>

From brad.chambers at gmail.com  Fri Mar  6 08:51:55 2020
From: brad.chambers at gmail.com (Bradley Chambers)
Date: Fri, 6 Mar 2020 11:51:55 -0500
Subject: [pdal] filters.icp transformation
In-Reply-To: <CAHqX796YY=rKUyJTnSped707CeHGRZZbqAA_XMqCY+jCO5Tz6Q@mail.gmail.com>
References: <8F6BC657-2C0A-466E-BF82-67D080C2B2A0@utah.edu>
 <CAJyqqPxBWseWgquRA0BGHznzybwgLpD5Zju7NoFeN7B=RqcqcQ@mail.gmail.com>
 <724eca78-37cb-3e8f-3a46-81ada3d2771b@gmail.com>
 <CACJ51z1=LVQjV3rrA8p7aqtxeL6+kvN6nFmv9dLHWEeVsmmqoQ@mail.gmail.com>
 <fefe453d-593f-0b85-4242-00ef0d87151e@gmail.com>
 <CAJyqqPzWjvZvMiig8gJMLM+vsbVJqWgXrPqxqfoBmS1jKZRc+Q@mail.gmail.com>
 <18092324-6c22-c219-9c07-c3e848eb9a14@gmail.com>
 <CAJyqqPydE5p9D9+T=4PQSj7nxVryUR0MvZgsOWdCtegiYLPvvw@mail.gmail.com>
 <CAHqX796YY=rKUyJTnSped707CeHGRZZbqAA_XMqCY+jCO5Tz6Q@mail.gmail.com>
Message-ID: <CAJyqqPyCLJMVByMkjjpRWV_rQzH14ikya7B+kTTi8ZJUBCqS6Q@mail.gmail.com>

See my latest comment in the PR. I think the way to go is to remove the
centering step altogether. It doesn't address the ease of use, but that's
really a separate issue anyway.

On Fri, Mar 6, 2020 at 11:50 AM James Klassen <klassen.js at gmail.com> wrote:

> Some ideas:
>
> Add a centroid (or center?) option to filters.transformation so this can
> be done in one filters.transform stage.
>
> It would be slightly simpler if filters.transformation (or a maybe a
> different filter) could read the filters.icp metadata file directly instead
> of having to separately shuttle the values across to a second pipeline.
> This could get complicated if the filters.icp was part of a more complex
> pipeline (possibly with multiple filters.icp operations).
>
> If the goal is just to run ICP on a sub-sampled dataset (for performance
> reasons) and the apply the resulting transformation to the whole dataset, a
> parameter could be added to filters.icp so that it does the sub-sampling
> internally for the ICP stage and then uses the full dataset when it applies
> the transformation.  This only helps a very specific use case though and
> leaves questions as to how the sample should be created and assumes that
> the transformation only needs to be applied once (vs to many tiles, etc.)
> This might make examples simpler, but in general, on real data, I'm not
> sure this would help.  (This is made worse because filters.icp doesn't
> support streaming, and so even if the ICP part is only done on a subset of
> the date, it will still be limited in total dataset size, while using a
> separate filters.transformation supports streaming and wouldn't be limited).
>
> Overall: With the PR, it is good enough for me.
>
>
> On Fri, Mar 6, 2020 at 9:39 AM Bradley Chambers <brad.chambers at gmail.com>
> wrote:
>
>> Jim, do you have any thoughts on how you'd rather communicate the
>> transformation result of ICP (whatever we settle on)? What would be more
>> user friendly?
>>
>> On Fri, Mar 6, 2020 at 10:24 AM Jim Klassen <klassen.js at gmail.com> wrote:
>>
>>> I suspect we could compose it three operations into a single transform
>>> matrix, but probably at a loss of precision.  (I suspect preserving
>>> precision this is why filters.icp bothers with calculating and shifting to
>>> the centroid in the first place).
>>>
>>> Alternatively, it might be simpler for the user if the centroid value
>>> and matrix could be passed directly into filters.transform (instead of
>>> needing three filters.transforms in the pipeline).
>>>
>>> In my opinion, the current workflow of saving the metadata, manually
>>> parsing it, and then constructing a new pipeline with values from the
>>> metadata isn't very user friendly in general.  If this was something I was
>>> doing regularly, I would certainly write a script do those steps for me
>>> (probably as part of a larger workflow).  And if a script is generating the
>>> second pipeline, it doesn't really matter to me if the second pipeline is
>>> one stage or three stages.
>>>
>>> I have a first pass at a PR here:
>>> https://github.com/PDAL/PDAL/pull/2962
>>>
>>> On Fri, Mar 6, 2020, 08:47 Bradley Chambers <brad.chambers at gmail.com>
>>> wrote:
>>>
>>>> I’m wondering if it would make more sense to simply compose the three
>>>> steps into a single output transformation. Making the user do the three
>>>> steps themselves seems overly complicated. Is there a scenario in which we
>>>> only want the transformation of the centered clouds (current state of the
>>>> code)? Your use case is probably more common.
>>>>
>>>> On Thu, Mar 5, 2020 at 18:53 Jim Klassen <klassen.js at gmail.com> wrote:
>>>>
>>>>> Does a strategy of adding the centroid to the filters.icp metadata and
>>>>> updating filters.icp documentation with the pipeline to apply it sound good?
>>>>> On 3/5/20 5:41 PM, Andrew Bell wrote:
>>>>>
>>>>> This seems the same as this already reported bug:
>>>>>
>>>>> https://github.com/PDAL/PDAL/issues/2939
>>>>>
>>>>> If you want to submit a PR, I'll look it over.
>>>>>
>>>>> Thanks!
>>>>>
>>>>>
>>>>> On Thu, Mar 5, 2020 at 6:36 PM Jim Klassen <klassen.js at gmail.com>
>>>>> wrote:
>>>>>
>>>>>> I am trying to do something similar (apply ICP on a subset of a large
>>>>>> dataset) and am running into confusion over the transformation matrix
>>>>>> in
>>>>>> the metadata.
>>>>>>
>>>>>> The point cloud output of the ICP filter on the subset looks good.
>>>>>> However when I try to use the resulting "transform" metadata as a
>>>>>> input
>>>>>> into filters.transformation.matrix over the full dataset, the
>>>>>> resulting
>>>>>> transformation moves the points wildly out of position.
>>>>>>
>>>>>> Looking at the code, in IterativeClosestPoint.cpp, it looks like the
>>>>>> transformation matrix (T) is applied after shifting the point cloud
>>>>>> to
>>>>>> the centroid of the reference point cloud (C), and the shifted back
>>>>>> to
>>>>>> regular coordinates.
>>>>>>
>>>>>> So something like Pout = ((P - C) * T) + C
>>>>>>
>>>>>> Where P is a 4 element input point vector (x,y,z,1), Pout is the
>>>>>> output
>>>>>> point vector, C is the centroid vector (x,y,z,0), T is the 4x4
>>>>>> transformation matrix found by ICP.
>>>>>>
>>>>>> T is reported in the metadata for the stage, however, C is not
>>>>>> reported
>>>>>> in the metadata.
>>>>>>
>>>>>> But the transformation matrix that filters.transformation expects
>>>>>> something more like
>>>>>>
>>>>>> Pout = P * T'
>>>>>>
>>>>>> If C is not (0,0,0) then T and T' will be different.
>>>>>>
>>>>>> I modified IterativeClosestPoint.cpp to also export the centroid to
>>>>>> the
>>>>>> metadata and then created a pipeline with three transformations,
>>>>>> first
>>>>>> shifting by the negative of the centroid, then applying T, then
>>>>>> shifting
>>>>>> back by the centroid and that produced the expected results.
>>>>>>
>>>>>>
>>>>>> On 2/18/20 7:24 PM, Bradley Chambers wrote:
>>>>>> > The options are very heavily borrowed from the PCL library, where
>>>>>> this
>>>>>> > was a squared value. Also, keep in mind that the default values may
>>>>>> be
>>>>>> > better suited for terrestrial/robotics applications (as opposed to
>>>>>> > aerial), and will very likely need some tweaking.
>>>>>> >
>>>>>> > The reported transformation should also be reported in row major
>>>>>> > order, like the transformation filter. If you find it is not, I’d
>>>>>> > consider that a bug, so feel free to file a ticket.
>>>>>> >
>>>>>> > PRs are always welcome, especially for documentation!
>>>>>> >
>>>>>> > Brad
>>>>>> >
>>>>>>
>>>>>> _______________________________________________
>>>>>> pdal mailing list
>>>>>> pdal at lists.osgeo.org
>>>>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Andrew Bell
>>>>> andrew.bell.ia at gmail.com
>>>>>
>>>>> _______________________________________________
>>>>> pdal mailing list
>>>>> pdal at lists.osgeo.org
>>>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>>>
>>>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200306/9f699454/attachment.html>

From jedfrechette at gmail.com  Fri Mar  6 12:40:18 2020
From: jedfrechette at gmail.com (Jed Frechette)
Date: Fri, 6 Mar 2020 13:40:18 -0700
Subject: [pdal] filters.icp transformation
In-Reply-To: <mailman.21.1583524802.5296.pdal@lists.osgeo.org>
References: <mailman.21.1583524802.5296.pdal@lists.osgeo.org>
Message-ID: <CAACeADZMTKAAit0zuMpb7fyU21a97Z_29fbpa1iYhZPNG+tAUg@mail.gmail.com>

On Fri, 6 Mar 2020 11:51:55 -0500 Bradley Chambers wrote:

> See my latest comment in the PR. I think the way to go is to remove the
> centering step altogether. It doesn't address the ease of use, but that's
> really a separate issue anyway.

As a user this would be my preference as well.

A lot of our workflows involve using 4x4 matrices to move
transformation information around. The results of something like an
ICP alignment might be applied to the original data, or some other
derivative data object in a completely different application. A
transform history might also be stored as a series of 4x4 matrices.

Even if filters.icp was using floats and precision was a concern for
large numbers I would prefer to handle the centering myself as a
pretransform rather than have the ICP filter calculate separate
centering values. Typically if we're working on something in a large
number coordinate system, but need to use software without the
required coordinate precision we'll choose a standard global
translation to use for the asset throughout it's lifetime. Unless it
is completely hidden from the user, having filters.icp calculate it's
own translation just adds more bookkeeping we need to keep track of.

In short, all I would want to get out of filters.icp or filters.cpd is
a single transform matrix that can be applied directly with
filters.transformation. For our use case, even getting the transformed
points isn't really needed. More often than not we're applying the
transform to a modified version of the original points so we would
just discard the points output by filters.icp anyway.

Best wishes,

-- 
Jed Frechette

From klassen.js at gmail.com  Fri Mar  6 16:53:39 2020
From: klassen.js at gmail.com (Jim Klassen)
Date: Fri, 6 Mar 2020 18:53:39 -0600
Subject: [pdal] filters.icp transformation
In-Reply-To: <CAACeADZMTKAAit0zuMpb7fyU21a97Z_29fbpa1iYhZPNG+tAUg@mail.gmail.com>
References: <mailman.21.1583524802.5296.pdal@lists.osgeo.org>
 <CAACeADZMTKAAit0zuMpb7fyU21a97Z_29fbpa1iYhZPNG+tAUg@mail.gmail.com>
Message-ID: <d4d384f3-5512-b36a-dcf5-6079bb8d2204@gmail.com>



On 3/6/20 2:40 PM, Jed Frechette wrote:
> On Fri, 6 Mar 2020 11:51:55 -0500 Bradley Chambers wrote:
>
>> See my latest comment in the PR. I think the way to go is to remove the
>> centering step altogether. It doesn't address the ease of use, but that's
>> really a separate issue anyway.
> As a user this would be my preference as well.
>
> A lot of our workflows involve using 4x4 matrices to move
> transformation information around. The results of something like an
> ICP alignment might be applied to the original data, or some other
> derivative data object in a completely different application. A
> transform history might also be stored as a series of 4x4 matrices.
>
> Even if filters.icp was using floats and precision was a concern for
> large numbers I would prefer to handle the centering myself as a
> pretransform rather than have the ICP filter calculate separate
> centering values. Typically if we're working on something in a large
> number coordinate system, but need to use software without the
> required coordinate precision we'll choose a standard global
> translation to use for the asset throughout it's lifetime. Unless it
> is completely hidden from the user, having filters.icp calculate it's
> own translation just adds more bookkeeping we need to keep track of.
>
> In short, all I would want to get out of filters.icp or filters.cpd is
> a single transform matrix that can be applied directly with
> filters.transformation. For our use case, even getting the transformed
> points isn't really needed. More often than not we're applying the
> transform to a modified version of the original points so we would
> just discard the points output by filters.icp anyway.
>
> Best wishes,
>
You make a very good point.

From B.Dukai at tudelft.nl  Mon Mar 16 05:27:33 2020
From: B.Dukai at tudelft.nl (=?UTF-8?Q?Bal=c3=a1zs_Dukai?=)
Date: Mon, 16 Mar 2020 13:27:33 +0100
Subject: [pdal] EPT polygon query and octree in memory
Message-ID: <55083019-2da1-1544-ea49-77fdd4b11404@tudelft.nl>

Hello,

I'm using PDAL's C++ API (v2.0.1) to query an EPT and get the point 
cloud within a polygon. I do this for millions of polygons that are 
often adjacent (building footprints), and the EPT covers a whole 
country. The EPT is stored as LAZ.

I noticed that there was a relatively large increase in memory use 
(cannot tell exactly, sorry ) after switching to PDAL+EPT. This made me 
wonder what exactly is read into memory when doing a polygon query from 
EPT? I made a drawing of what I think is happening , could someone 
confirm or reject this? See 
https://www.dropbox.com/s/ppa24o666ulunxc/ept_octree.jpg?dl=0.

In the image you'll see an octree of an EPT, with the root cell on the 
top and the leaf that contains the polygon on the bottom. The red 
splotch is the polygon. The darker blue cubes are the octree cells of 
the EPT that I think are kept completely in memory in order to get all 
the points within that red polygon. Is that correct?

Then if this is the case, how could I reduce the memory use in PDAL? And 
speed up extracting the polygon-extents from the EPT?

Many thanks,

Balázs Dukai


From andrew.bell.ia at gmail.com  Mon Mar 16 05:50:50 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 16 Mar 2020 08:50:50 -0400
Subject: [pdal] EPT polygon query and octree in memory
In-Reply-To: <55083019-2da1-1544-ea49-77fdd4b11404@tudelft.nl>
References: <55083019-2da1-1544-ea49-77fdd4b11404@tudelft.nl>
Message-ID: <CACJ51z1=U3FdvkY9HQSGgmpca_Yh4xXcEef-otX7TsEAqx=LVA@mail.gmail.com>

There are many changes that are coming shortly in the EPT reader for
version 2.1 that should reduce the number of points retained.  In the more
recent code, we're trying to store the minimum number of points necessary
to meet the query.  That said, without knowing exactly what you're doing
and what you were doing before, it's hard to comment.  I think I would wait
and see if things are improved in version 2.1 before worrying too much
about taking other steps.

On Mon, Mar 16, 2020 at 8:27 AM Balázs Dukai <B.Dukai at tudelft.nl> wrote:

> Hello,
>
> I'm using PDAL's C++ API (v2.0.1) to query an EPT and get the point
> cloud within a polygon. I do this for millions of polygons that are
> often adjacent (building footprints), and the EPT covers a whole
> country. The EPT is stored as LAZ.
>
> I noticed that there was a relatively large increase in memory use
> (cannot tell exactly, sorry ) after switching to PDAL+EPT. This made me
> wonder what exactly is read into memory when doing a polygon query from
> EPT? I made a drawing of what I think is happening , could someone
> confirm or reject this? See
> https://www.dropbox.com/s/ppa24o666ulunxc/ept_octree.jpg?dl=0.
>
> In the image you'll see an octree of an EPT, with the root cell on the
> top and the leaf that contains the polygon on the bottom. The red
> splotch is the polygon. The darker blue cubes are the octree cells of
> the EPT that I think are kept completely in memory in order to get all
> the points within that red polygon. Is that correct?
>
> Then if this is the case, how could I reduce the memory use in PDAL? And
> speed up extracting the polygon-extents from the EPT?
>
> Many thanks,
>
> Balázs Dukai
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200316/cb5fb54b/attachment.html>

From paul at dgi.com  Wed Mar 18 15:00:44 2020
From: paul at dgi.com (Paul White)
Date: Wed, 18 Mar 2020 16:00:44 -0600
Subject: [pdal] z-units conversion
Message-ID: <a156a962-49c9-031b-751e-71ba8ebe6680@dgi.com>

I have an input .las which is UTM 18 N-- x/y units are in meters and 
z-units are in 'Linear_Foot_US_Survey'.
When process the input .las through any PDAL filters, the output z-units 
are renamed to 'Linear_Meter'.
How can I designate the z-units to remain in feet?


From andrew.bell.ia at gmail.com  Thu Mar 19 09:31:55 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 19 Mar 2020 12:31:55 -0400
Subject: [pdal] z-units conversion
In-Reply-To: <a156a962-49c9-031b-751e-71ba8ebe6680@dgi.com>
References: <a156a962-49c9-031b-751e-71ba8ebe6680@dgi.com>
Message-ID: <CACJ51z13CZcXT+Hiec9ix+0ZhuCui2B+Cgr7O-jYJQ_fXrRGcQ@mail.gmail.com>

Without seeing your pipeline it's hard to answer.  You can assign any SRS
you like at output with the a_srs option, but I'm not sure what else might
be going on.

On Wed, Mar 18, 2020 at 6:08 PM Paul White <paul at dgi.com> wrote:

> I have an input .las which is UTM 18 N-- x/y units are in meters and
> z-units are in 'Linear_Foot_US_Survey'.
> When process the input .las through any PDAL filters, the output z-units
> are renamed to 'Linear_Meter'.
> How can I designate the z-units to remain in feet?
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200319/0d94d72a/attachment.html>

From andrew.bell.ia at gmail.com  Thu Mar 19 09:32:39 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 19 Mar 2020 12:32:39 -0400
Subject: [pdal] z-units conversion
In-Reply-To: <CACJ51z13CZcXT+Hiec9ix+0ZhuCui2B+Cgr7O-jYJQ_fXrRGcQ@mail.gmail.com>
References: <a156a962-49c9-031b-751e-71ba8ebe6680@dgi.com>
 <CACJ51z13CZcXT+Hiec9ix+0ZhuCui2B+Cgr7O-jYJQ_fXrRGcQ@mail.gmail.com>
Message-ID: <CACJ51z3dptjhUn2LXLoZxzjE6nTBq8Z8WJ5t72kF3TGkR74Rtw@mail.gmail.com>

I believe that there was a bug in some versions of GDAL that would cause
this problem.  You might look into that, too.

On Thu, Mar 19, 2020 at 12:31 PM Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

> Without seeing your pipeline it's hard to answer.  You can assign any SRS
> you like at output with the a_srs option, but I'm not sure what else might
> be going on.
>
> On Wed, Mar 18, 2020 at 6:08 PM Paul White <paul at dgi.com> wrote:
>
>> I have an input .las which is UTM 18 N-- x/y units are in meters and
>> z-units are in 'Linear_Foot_US_Survey'.
>> When process the input .las through any PDAL filters, the output z-units
>> are renamed to 'Linear_Meter'.
>> How can I designate the z-units to remain in feet?
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200319/256d7112/attachment.html>

From paul at dgi.com  Thu Mar 19 10:53:00 2020
From: paul at dgi.com (Paul White)
Date: Thu, 19 Mar 2020 11:53:00 -0600
Subject: [pdal] Fwd: Re:  z-units conversion
In-Reply-To: <63150fe7-b812-8f11-40ce-4a28ec673674@dgi.com>
References: <63150fe7-b812-8f11-40ce-4a28ec673674@dgi.com>
Message-ID: <8517770d-bb22-3c62-5320-139ff4f503a9@dgi.com>


Subject: 	Re: [pdal] z-units conversion
Date: 	Thu, 19 Mar 2020 11:09:42 -0600
From: 	Paul White <paul at dgi.com>
To: 	Andrew Bell <andrew.bell.ia at gmail.com>


Hi Andrew,

Thanks for your reply.

On 3/19/2020 10:31 AM, Andrew Bell wrote:
> Without seeing your pipeline it's hard to answer.
Here's my .json file:

[
     "Job520660_36076_92_01.laz",
     {
     "type":"filters.colorization",
     "raster":"google_wms_satellite_1478.tif"
     },
     "pdal_colorization_Job520660_36076_92_01.laz"
]

and I execute it like this in a Anaconda3 Prompt window:

pdal pipeline colorize.json


> You can assign any SRS you like at output with the a_srs option,
Yes, I'm aware of that, using 'spatialreference', 
'filters.reprojection', 'in_srs', 'out_srs', etc.
In this use case, the SRS of the input .laz is "EPSG: 32618". In the 
case of EPSG:32618,
it is a UTM projection and by definition, the x/y units are in meters. 
All well and good...

However, SRS definitions do not assign a unit value to Z.

My input .laz file (shown above) has the z-units in feet (actually, they 
are identified
in the .laz as "Linear_Foot_US_Survey"). Here is the result of running 
lasinfo on the
original .laz:

    Keyed_Information:
       GTModelTypeGeoKey (Short,1): ModelTypeProjected
       ProjectedCSTypeGeoKey (Short,1): PCS_WGS84_UTM_zone_18N
       ProjLinearUnitsGeoKey (Short,1): Linear_Meter
       VerticalCSTypeGeoKey (Short,1): Unknown-3855
*VerticalUnitsGeoKey (Short,1): Linear_Foot_US_Survey*
       End_Of_Keys.

After the 'filters.colorization' step, the z-units are changed/renamed 
to "Linear_Meter":

    Keyed_Information:
       GTModelTypeGeoKey (Short,1): ModelTypeProjected
       GTRasterTypeGeoKey (Short,1): RasterPixelIsArea
       GTCitationGeoKey (Ascii,8): "unknown"
       GeogCitationGeoKey (Ascii,7): "WGS 84"
       GeogAngularUnitsGeoKey (Short,1): Angular_Degree
       ProjectedCSTypeGeoKey (Short,1): PCS_WGS84_UTM_zone_18N
       ProjLinearUnitsGeoKey (Short,1): Linear_Meter
       VerticalCSTypeGeoKey (Short,1): Unknown-3855
       VerticalCitationGeoKey (Ascii,15): "EGM2008 height"
       VerticalDatumGeoKey (Short,1): Unknown-1027
*VerticalUnitsGeoKey (Short,1): Linear_Meter*
       End_Of_Keys.


As you can see, the 'VerticalUnitsGeoKey' has been changed to meters.

This renders the 'colorized' .laz incompatible with all of my other data 
sources
(DEM's, DSM's, shapefiles and other 3D data types, etc.) in a 3D/4D 
co-visualized
application environment.

I'm looking for a PDAL filter to either leave the 'VerticalUnitsGeoKey' 
alone (output
.laz same as input .laz) or set/name it to 'Linear_Foot_US_Survey' or 
even just plain 'Feet'.

Any suggestions would be most helpful.

Thanks for your time,
Paul



> but I'm not sure what else might be going on.
>
> On Wed, Mar 18, 2020 at 6:08 PM Paul White <paul at dgi.com 
> <mailto:paul at dgi.com>> wrote:
>
>     I have an input .las which is UTM 18 N-- x/y units are in meters and
>     z-units are in 'Linear_Foot_US_Survey'.
>     When process the input .las through any PDAL filters, the output
>     z-units
>     are renamed to 'Linear_Meter'.
>     How can I designate the z-units to remain in feet?
>
>     _______________________________________________
>     pdal mailing list
>     pdal at lists.osgeo.org <mailto:pdal at lists.osgeo.org>
>     https://lists.osgeo.org/mailman/listinfo/pdal
>
>
>
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com <mailto:andrew.bell.ia at gmail.com>
> ------------------------------------------------------------------------
> NOTE: This message was trained as non-spam. If this is wrong, please 
> correct the training as soon as possible.
> Spam <https://rio.dgi.com:8443/b.php?c=s&i=012ggw7io&m=d965d3c93268>
> Not spam <https://rio.dgi.com:8443/b.php?c=n&i=012ggw7io&m=d965d3c93268>
> Forget previous vote 
> <https://rio.dgi.com:8443/b.php?c=f&i=012ggw7io&m=d965d3c93268>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200319/57b08754/attachment.html>

From cgodkin at gmail.com  Thu Mar 19 11:40:25 2020
From: cgodkin at gmail.com (Carl Godkin)
Date: Thu, 19 Mar 2020 11:40:25 -0700
Subject: [pdal] Trouble reading CyArk .e57 point clouds
Message-ID: <CAE=8kmnQtuGa5EECGgUmHWuUyHx+j7cbzisAnmZLgi7f=ZcfWA@mail.gmail.com>

Hi,

I am new to PDAL so I hope this isn't a seriously dumb question.  I looked
in the mailing list archives and under Issues on GitHub so maybe it's not.

CyArk makes their data available in .e57 format and I was hoping to use
PDAL to play with some of them.

However, for both of the .e57 files I've downloaded so far, "pdal info"
says simply

PDAL: readers.e57: 21 : fileName=USP_USS_Pampanito_Complete.e57 offset=0
whence=2 result=-2118361088

and exits.  I tried "pdal translate" also and its verbose flag tells me
that the "libpdal_plugin_reader_e57.dll" is loaded and initialized before
exiting with the same message.

My environment is Windows 10 with PDAL installed following the instructions
under the "Workshop" section on the pdal.io site.  (Using miniconda,
created a virtual environment, installing PDAL, etc.)

pdal --version is "pdal 2.0.1 (git-version: Release)"

These files are really big by the way.  The downloads are .zip files which
expand to 7Gb and up!

I was able to open this file in Cloud Compare so it's not corrupt, and I've
tried another file from their site as well with the same results.

Any ideas?  Thanks a lot!

carl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200319/e5778b18/attachment-0001.html>

From andrew.bell.ia at gmail.com  Thu Mar 19 12:16:13 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Thu, 19 Mar 2020 15:16:13 -0400
Subject: [pdal] Trouble reading CyArk .e57 point clouds
In-Reply-To: <CAE=8kmnQtuGa5EECGgUmHWuUyHx+j7cbzisAnmZLgi7f=ZcfWA@mail.gmail.com>
References: <CAE=8kmnQtuGa5EECGgUmHWuUyHx+j7cbzisAnmZLgi7f=ZcfWA@mail.gmail.com>
Message-ID: <CACJ51z2H6E2Sn5TMi9J_CJg_iJTfp7b6qJtCzxSrgDM=7FZEjQ@mail.gmail.com>

If you can make a smaller version of a file available, I'll take a look.

On Thu, Mar 19, 2020 at 2:40 PM Carl Godkin <cgodkin at gmail.com> wrote:

> Hi,
>
> I am new to PDAL so I hope this isn't a seriously dumb question.  I looked
> in the mailing list archives and under Issues on GitHub so maybe it's not.
>
> CyArk makes their data available in .e57 format and I was hoping to use
> PDAL to play with some of them.
>
> However, for both of the .e57 files I've downloaded so far, "pdal info"
> says simply
>
> PDAL: readers.e57: 21 : fileName=USP_USS_Pampanito_Complete.e57 offset=0
> whence=2 result=-2118361088
>
> and exits.  I tried "pdal translate" also and its verbose flag tells me
> that the "libpdal_plugin_reader_e57.dll" is loaded and initialized before
> exiting with the same message.
>
> My environment is Windows 10 with PDAL installed following the
> instructions under the "Workshop" section on the pdal.io site.  (Using
> miniconda, created a virtual environment, installing PDAL, etc.)
>
> pdal --version is "pdal 2.0.1 (git-version: Release)"
>
> These files are really big by the way.  The downloads are .zip files which
> expand to 7Gb and up!
>
> I was able to open this file in Cloud Compare so it's not corrupt, and
> I've tried another file from their site as well with the same results.
>
> Any ideas?  Thanks a lot!
>
> carl
>
>
>
>
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200319/caf3441b/attachment.html>

From cgodkin at gmail.com  Thu Mar 19 14:39:57 2020
From: cgodkin at gmail.com (Carl Godkin)
Date: Thu, 19 Mar 2020 14:39:57 -0700
Subject: [pdal] Trouble reading CyArk .e57 point clouds
In-Reply-To: <CACJ51z2H6E2Sn5TMi9J_CJg_iJTfp7b6qJtCzxSrgDM=7FZEjQ@mail.gmail.com>
References: <CAE=8kmnQtuGa5EECGgUmHWuUyHx+j7cbzisAnmZLgi7f=ZcfWA@mail.gmail.com>
 <CACJ51z2H6E2Sn5TMi9J_CJg_iJTfp7b6qJtCzxSrgDM=7FZEjQ@mail.gmail.com>
Message-ID: <CAE=8kmmx7RjaZ9TE_yiUYtfzAVXdtvdA5boj2tg9ZVGqw=sSvw@mail.gmail.com>

Hi Andrew,

Thanks for the reply.

As I mentioned, I found that most of the projects are very big (10's of GB
to over 100 Gb!) but I found one relatively small one (~900 MB) but "pdal
info" was happy with it.  I found another one that's just over a 1Gb and
PDAL could read that too.

Could there be some sort of size assumption in PDAL or readers.e57, like
maybe a 32-bit size or offset somewhere?  The readers.e57 page in the docs
mentions a couple of caveats about this format but I imagine the tools
would warn if one of these problems was encountered, right?

I randomly tried another relatively small (for CyArk; ~4 GB) file and "pdal
info <file> --metadata" returned a different error:

>pdal info kz88-9d21_lidar_photogrammetry.e57 --metadata
PDAL: readers.e57: 29 : fileName=kz88-9d21_lidar_photogrammetry.e57
header.filePhysicalLength=4803256320 file->length=508289024

Anyone may download it by starting at
https://openheritage3d.org/project_thankyou.php?id=ck42-e122 and following
the "Download" link (which leads to a form and then they mail you a real
link to a .zip.)

Thanks for any ideas,

carl



On Thu, Mar 19, 2020 at 12:16 PM Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

> If you can make a smaller version of a file available, I'll take a look.
>
> On Thu, Mar 19, 2020 at 2:40 PM Carl Godkin <cgodkin at gmail.com> wrote:
>
>> Hi,
>>
>> I am new to PDAL so I hope this isn't a seriously dumb question.  I
>> looked in the mailing list archives and under Issues on GitHub so maybe
>> it's not.
>>
>> CyArk makes their data available in .e57 format and I was hoping to use
>> PDAL to play with some of them.
>>
>> However, for both of the .e57 files I've downloaded so far, "pdal info"
>> says simply
>>
>> PDAL: readers.e57: 21 : fileName=USP_USS_Pampanito_Complete.e57 offset=0
>> whence=2 result=-2118361088
>>
>> and exits.  I tried "pdal translate" also and its verbose flag tells me
>> that the "libpdal_plugin_reader_e57.dll" is loaded and initialized before
>> exiting with the same message.
>>
>> My environment is Windows 10 with PDAL installed following the
>> instructions under the "Workshop" section on the pdal.io site.  (Using
>> miniconda, created a virtual environment, installing PDAL, etc.)
>>
>> pdal --version is "pdal 2.0.1 (git-version: Release)"
>>
>> These files are really big by the way.  The downloads are .zip files
>> which expand to 7Gb and up!
>>
>> I was able to open this file in Cloud Compare so it's not corrupt, and
>> I've tried another file from their site as well with the same results.
>>
>> Any ideas?  Thanks a lot!
>>
>> carl
>>
>>
>>
>>
>>
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200319/bc3a8bc6/attachment.html>

From andrew.bell.ia at gmail.com  Fri Mar 20 14:31:58 2020
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Fri, 20 Mar 2020 17:31:58 -0400
Subject: [pdal] PDAL Version 2.1 Release
Message-ID: <CACJ51z2xZE=Lcx19CqNjSREo9JcjkoT991MJ2NW-qktUid-XpA@mail.gmail.com>

Hello,

Despite the global pandemic, we've managed to scrape together version 2.1
of PDAL.  It includes many new filters for use in your point
cloud analysis.  Please note that python support has been removed from the
main PDAL package and is now in a separate package that must be installed
in order to use Python with PDAL.  Complete release notes can be found by
following the link below.

PDAL release: https://github.com/PDAL/PDAL/releases
PDAL Python package: https://github.com/PDAL/python

Please write with questions or problems that aren't already logged in our
github issue tracker.

Have a great weekend,

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200320/9139f821/attachment.html>

From sebastic at xs4all.nl  Fri Mar 20 23:50:43 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Sat, 21 Mar 2020 07:50:43 +0100
Subject: [pdal] PDAL Version 2.1 Release
In-Reply-To: <CACJ51z2xZE=Lcx19CqNjSREo9JcjkoT991MJ2NW-qktUid-XpA@mail.gmail.com>
References: <CACJ51z2xZE=Lcx19CqNjSREo9JcjkoT991MJ2NW-qktUid-XpA@mail.gmail.com>
Message-ID: <66abe1e9-2004-905e-ac8e-1ea9dff9cb2a@xs4all.nl>

Will there also be a new release of the Python package?

Both the git repo and PyPI still have 2.2.2.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From luipir at gmail.com  Sat Mar 21 01:33:16 2020
From: luipir at gmail.com (Luigi Pirelli)
Date: Sat, 21 Mar 2020 09:33:16 +0100
Subject: [pdal] PDAL Version 2.1 Release
In-Reply-To: <CACJ51z2xZE=Lcx19CqNjSREo9JcjkoT991MJ2NW-qktUid-XpA@mail.gmail.com>
References: <CACJ51z2xZE=Lcx19CqNjSREo9JcjkoT991MJ2NW-qktUid-XpA@mail.gmail.com>
Message-ID: <CAFO80_o_wPf-6FfCYYbWJC9kxVOMTXNtSdvaGSw4Y=VB8c2Y=w@mail.gmail.com>

waiting for a tweet announcement to retweet

tnx

Luigi Pirelli

**************************************************************************************************
* LinkedIn: https://www.linkedin.com/in/luigipirelli
* Stackexchange: http://gis.stackexchange.com/users/19667/luigi-pirelli
* GitHub: https://github.com/luipir
* Book: Mastering QGIS3 - 3rd Edition
<https://www.packtpub.com/eu/application-development/mastering-geospatial-development-qgis-3x-third-edition>
* Hire a team: http://www.qcooperative.net
**************************************************************************************************


On Fri, 20 Mar 2020 at 22:32, Andrew Bell <andrew.bell.ia at gmail.com> wrote:

> Hello,
>
> Despite the global pandemic, we've managed to scrape together version 2.1
> of PDAL.  It includes many new filters for use in your point
> cloud analysis.  Please note that python support has been removed from the
> main PDAL package and is now in a separate package that must be installed
> in order to use Python with PDAL.  Complete release notes can be found by
> following the link below.
>
> PDAL release: https://github.com/PDAL/PDAL/releases
> PDAL Python package: https://github.com/PDAL/python
>
> Please write with questions or problems that aren't already logged in our
> github issue tracker.
>
> Have a great weekend,
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20200321/b94ce0c8/attachment.html>

From howard at hobu.co  Sat Mar 21 06:32:17 2020
From: howard at hobu.co (Howard Butler)
Date: Sat, 21 Mar 2020 08:32:17 -0500
Subject: [pdal] PDAL Version 2.1 Release
In-Reply-To: <66abe1e9-2004-905e-ac8e-1ea9dff9cb2a@xs4all.nl>
References: <CACJ51z2xZE=Lcx19CqNjSREo9JcjkoT991MJ2NW-qktUid-XpA@mail.gmail.com>
 <66abe1e9-2004-905e-ac8e-1ea9dff9cb2a@xs4all.nl>
Message-ID: <BCC6288F-CCEB-47D9-94DA-EA3492A07048@hobu.co>



> On Mar 21, 2020, at 1:50 AM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> Will there also be a new release of the Python package?

Yes, although I'm still having trouble getting the build scenarios of filters.python and readers.numpy correct on all platforms with setup.py. Specifically, Python the combo of static/dynamic linking of Python itself and the use by the embedded plugins. There doesn't seem to be high-level Python distutils support for building "normal shared objects", and so I have had to build a lot of my own. I expect there to be some bugs when I do roll it out.

I was hoping to polish it this next week. The nice thing about the Python stuff being removed, is it can be released at its own pace. That pace is likely to be much faster than PDAL itself going forward.

Howard

From sebastic at xs4all.nl  Tue Mar 31 21:03:25 2020
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Wed, 1 Apr 2020 06:03:25 +0200
Subject: [pdal] PDAL Version 2.1 Release
In-Reply-To: <BCC6288F-CCEB-47D9-94DA-EA3492A07048@hobu.co>
References: <CACJ51z2xZE=Lcx19CqNjSREo9JcjkoT991MJ2NW-qktUid-XpA@mail.gmail.com>
 <66abe1e9-2004-905e-ac8e-1ea9dff9cb2a@xs4all.nl>
 <BCC6288F-CCEB-47D9-94DA-EA3492A07048@hobu.co>
Message-ID: <97540c04-3d69-881e-895e-0893d5759811@xs4all.nl>

On 3/21/20 2:32 PM, Howard Butler wrote:
>> On Mar 21, 2020, at 1:50 AM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
>>
>> Will there also be a new release of the Python package?
> 
> Yes, although I'm still having trouble getting the build scenarios of filters.python and readers.numpy correct on all platforms with setup.py. Specifically, Python the combo of static/dynamic linking of Python itself and the use by the embedded plugins. There doesn't seem to be high-level Python distutils support for building "normal shared objects", and so I have had to build a lot of my own. I expect there to be some bugs when I do roll it out.
> 
> I was hoping to polish it this next week. The nice thing about the Python stuff being removed, is it can be released at its own pace. That pace is likely to be much faster than PDAL itself going forward.

Version 2.3.0 requires scikit-build which is not packaged for Debian and
hence blocks the update of python-pdal.

Why can't just cython & setuptools do the job?

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

