From Peder.Axensten at slu.se  Tue Jul  5 07:50:36 2022
From: Peder.Axensten at slu.se (Peder Axensten)
Date: Tue, 5 Jul 2022 14:50:36 +0000
Subject: [pdal] How to get las header info?
In-Reply-To: <CACJ51z0dKCOd7BqwxC7WZsrJb-7ByfSCv+NpVZyQms6+9KWVXw@mail.gmail.com>
References: <11AF6E0C-4ABA-43AA-A700-12453DF53784@slu.se>
 <CACJ51z0dKCOd7BqwxC7WZsrJb-7ByfSCv+NpVZyQms6+9KWVXw@mail.gmail.com>
Message-ID: <6E83DB9B-A42E-46B8-A3FD-A69B6337C119@slu.se>

Hello again,

I tried the 2.4.2 version and I notice that the copy and move constructors (and operators) are now implemented.
But pdal::LasHeader now lacks the default constructor, so this code still does not work:

    pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
        pdal::LasHeader          header{};   // error: no matching constructor for initialization of 'pdal::LasHeader'
        pdal::ILeStream          input{ path_.native() };
        input >> header;
        return header;
    }

What would be the correct way to read the header information from my code?
It would be nice to do it for any point cloud file, but I?m happy to settle for las/laz files.

Best regards,

Peder Axensten
Systems Developer

Remote Sensing
Department of Forest Resource Management
Swedish University of Agricultural Sciences
SE-901 83 Ume?
Visiting address: Skogsmarksgr?nd
Phone: +46 90 786 85 00
peder.axensten at slu.se, www.slu.se/srh

The Department of Forest Resource Management is environmentally certified in accordance with ISO 14001.

> On 23 Mar 2022, at 12:34, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
>
> On Wed, Mar 23, 2022 at 5:14 AM Peder Axensten <Peder.Axensten at slu.se> wrote:
> Dear list,
>
> Previously, I could obtain a pdal::LasHeader through:
>
> inline pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
> pdal::LasHeader header;
> pdal::ILeStream input{ path_.native() };
> input >> header;
> return header;
> }
>
> But in the latest version of pdal the header copy constructor is implicitly deleted.
>
> This issue has already been reported and fixed and will be included in the final 2.4 release:
>
>  https://github.com/PDAL/PDAL/pull/3713
>
> The tool needs to process all las-files of a specified directory (and its sud-directories). If I need to read the contents of files that could actually be ignored, it would increase processing time probably tenfolds. Is there a way to avoid this?
>     Maybe a previous stage in the pipeline to filter files based only on their header (bounding box) info?
>     If I implement it as a streaming operation, could I get the bounding box from header info and possibly not stream anything?
>
> The bounding box of a LAS file is always stored at offsets 179-226, so you can read them directly if you like, but as I said above, I have re-enabled copying of LasHeader.
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com

---
N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>

From andrew.bell.ia at gmail.com  Tue Jul  5 08:03:45 2022
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Tue, 5 Jul 2022 11:03:45 -0400
Subject: [pdal] How to get las header info?
In-Reply-To: <6E83DB9B-A42E-46B8-A3FD-A69B6337C119@slu.se>
References: <11AF6E0C-4ABA-43AA-A700-12453DF53784@slu.se>
 <CACJ51z0dKCOd7BqwxC7WZsrJb-7ByfSCv+NpVZyQms6+9KWVXw@mail.gmail.com>
 <6E83DB9B-A42E-46B8-A3FD-A69B6337C119@slu.se>
Message-ID: <CACJ51z3WEsxpj7zaLz7+D4i-zdQbP+NuHRBWOTtUeWKJapB1Bw@mail.gmail.com>

LasReader provides the header() function that returns a reference to the
LasHeader.

On Tue, Jul 5, 2022 at 10:50 AM Peder Axensten <Peder.Axensten at slu.se>
wrote:

> Hello again,
>
> I tried the 2.4.2 version and I notice that the copy and move constructors
> (and operators) are now implemented.
> But pdal::LasHeader now lacks the default constructor, so this code still
> does not work:
>
>     pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
>         pdal::LasHeader          header{};   // error: no matching
> constructor for initialization of 'pdal::LasHeader'
>         pdal::ILeStream          input{ path_.native() };
>         input >> header;
>         return header;
>     }
>
> What would be the correct way to read the header information from my code?
> It would be nice to do it for any point cloud file, but I?m happy to
> settle for las/laz files.
>
> Best regards,
>
> Peder Axensten
> Systems Developer
>
> Remote Sensing
> Department of Forest Resource Management
> Swedish University of Agricultural Sciences
> SE-901 83 Ume?
> Visiting address: Skogsmarksgr?nd
> Phone: +46 90 786 85 00
> peder.axensten at slu.se, www.slu.se/srh
>
> The Department of Forest Resource Management is environmentally certified
> in accordance with ISO 14001.
>
> > On 23 Mar 2022, at 12:34, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
> >
> > On Wed, Mar 23, 2022 at 5:14 AM Peder Axensten <Peder.Axensten at slu.se>
> wrote:
> > Dear list,
> >
> > Previously, I could obtain a pdal::LasHeader through:
> >
> > inline pdal::LasHeader get_header( const std::filesystem::path & path_ )
> {
> > pdal::LasHeader header;
> > pdal::ILeStream input{ path_.native() };
> > input >> header;
> > return header;
> > }
> >
> > But in the latest version of pdal the header copy constructor is
> implicitly deleted.
> >
> > This issue has already been reported and fixed and will be included in
> the final 2.4 release:
> >
> >  https://github.com/PDAL/PDAL/pull/3713
> >
> > The tool needs to process all las-files of a specified directory (and
> its sud-directories). If I need to read the contents of files that could
> actually be ignored, it would increase processing time probably tenfolds.
> Is there a way to avoid this?
> >     Maybe a previous stage in the pipeline to filter files based only on
> their header (bounding box) info?
> >     If I implement it as a streaming operation, could I get the bounding
> box from header info and possibly not stream anything?
> >
> > The bounding box of a LAS file is always stored at offsets 179-226, so
> you can read them directly if you like, but as I said above, I have
> re-enabled copying of LasHeader.
> >
> > --
> > Andrew Bell
> > andrew.bell.ia at gmail.com
>
> ---
> N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina
> personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <
> https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
> E-mailing SLU will result in SLU processing your personal data. For more
> information on how this is done, click here <
> https://www.slu.se/en/about-slu/contact-slu/personal-data/>
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220705/b02ccead/attachment.htm>

From Peder.Axensten at slu.se  Tue Jul  5 10:06:43 2022
From: Peder.Axensten at slu.se (Peder Axensten)
Date: Tue, 5 Jul 2022 17:06:43 +0000
Subject: [pdal] How to get las header info?
In-Reply-To: <CACJ51z3WEsxpj7zaLz7+D4i-zdQbP+NuHRBWOTtUeWKJapB1Bw@mail.gmail.com>
References: <11AF6E0C-4ABA-43AA-A700-12453DF53784@slu.se>
 <CACJ51z0dKCOd7BqwxC7WZsrJb-7ByfSCv+NpVZyQms6+9KWVXw@mail.gmail.com>
 <6E83DB9B-A42E-46B8-A3FD-A69B6337C119@slu.se>
 <CACJ51z3WEsxpj7zaLz7+D4i-zdQbP+NuHRBWOTtUeWKJapB1Bw@mail.gmail.com>
Message-ID: <459657B7-8B1D-4D87-AB50-4902B042E602@slu.se>

I tried that too. :-)
I tried the following, inspired by code on https://pdal.io/api/transition/index.html:

    pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
        pdal::Option              las_opt( "filename", path_.native() );
        pdal::Options             las_opts;
        las_opts.add( las_opt );

        pdal::PointTable          table;
        pdal::LasReader           las_reader;
        las_reader.setOptions( las_opts );
        las_reader.prepare( table );

        pdal::PointViewSet        point_view_set = las_reader.execute( table );
        pdal::PointViewPtr        point_view = *point_view_set.begin();
        pdal::Dimension::IdList   dims = point_view->dims();
        return las_reader.header();
    }

However, no header info seems to actually be read ? I get bogus information. No error or exception, just bogus info.
What am I missing?

Best regards,

Peder Axensten
Systems Developer

Remote Sensing
Department of Forest Resource Management
Swedish University of Agricultural Sciences
SE-901 83 Ume?
Visiting address: Skogsmarksgr?nd
Phone: +46 90 786 85 00
peder.axensten at slu.se, www.slu.se/srh

The Department of Forest Resource Management is environmentally certified in accordance with ISO 14001.

> On 5 Jul 2022, at 17:03, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
>
>
> CAUTION: This email originated from outside of the organization. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> LasReader provides the header() function that returns a reference to the LasHeader.
>
> On Tue, Jul 5, 2022 at 10:50 AM Peder Axensten <Peder.Axensten at slu.se> wrote:
> Hello again,
>
> I tried the 2.4.2 version and I notice that the copy and move constructors (and operators) are now implemented.
> But pdal::LasHeader now lacks the default constructor, so this code still does not work:
>
>     pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
>         pdal::LasHeader          header{};   // error: no matching constructor for initialization of 'pdal::LasHeader'
>         pdal::ILeStream          input{ path_.native() };
>         input >> header;
>         return header;
>     }
>
> What would be the correct way to read the header information from my code?
> It would be nice to do it for any point cloud file, but I?m happy to settle for las/laz files.
>
> Best regards,
>
> Peder Axensten
> Systems Developer
>
> Remote Sensing
> Department of Forest Resource Management
> Swedish University of Agricultural Sciences
> SE-901 83 Ume?
> Visiting address: Skogsmarksgr?nd
> Phone: +46 90 786 85 00
> peder.axensten at slu.se, www.slu.se/srh
>
> The Department of Forest Resource Management is environmentally certified in accordance with ISO 14001.
>
> > On 23 Mar 2022, at 12:34, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
> >
> > On Wed, Mar 23, 2022 at 5:14 AM Peder Axensten <Peder.Axensten at slu.se> wrote:
> > Dear list,
> >
> > Previously, I could obtain a pdal::LasHeader through:
> >
> > inline pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
> > pdal::LasHeader header;
> > pdal::ILeStream input{ path_.native() };
> > input >> header;
> > return header;
> > }
> >
> > But in the latest version of pdal the header copy constructor is implicitly deleted.
> >
> > This issue has already been reported and fixed and will be included in the final 2.4 release:
> >
> >  https://github.com/PDAL/PDAL/pull/3713
> >
> > The tool needs to process all las-files of a specified directory (and its sud-directories). If I need to read the contents of files that could actually be ignored, it would increase processing time probably tenfolds. Is there a way to avoid this?
> >     Maybe a previous stage in the pipeline to filter files based only on their header (bounding box) info?
> >     If I implement it as a streaming operation, could I get the bounding box from header info and possibly not stream anything?
> >
> > The bounding box of a LAS file is always stored at offsets 179-226, so you can read them directly if you like, but as I said above, I have re-enabled copying of LasHeader.
> >
> > --
> > Andrew Bell
> > andrew.bell.ia at gmail.com
>
> ---
> N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
> E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>
>
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com

---
N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>

From mateusz at loskot.net  Tue Jul  5 15:05:45 2022
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 6 Jul 2022 00:05:45 +0200
Subject: [pdal] How to get las header info?
In-Reply-To: <459657B7-8B1D-4D87-AB50-4902B042E602@slu.se>
References: <11AF6E0C-4ABA-43AA-A700-12453DF53784@slu.se>
 <CACJ51z0dKCOd7BqwxC7WZsrJb-7ByfSCv+NpVZyQms6+9KWVXw@mail.gmail.com>
 <6E83DB9B-A42E-46B8-A3FD-A69B6337C119@slu.se>
 <CACJ51z3WEsxpj7zaLz7+D4i-zdQbP+NuHRBWOTtUeWKJapB1Bw@mail.gmail.com>
 <459657B7-8B1D-4D87-AB50-4902B042E602@slu.se>
Message-ID: <CABUeae_pDJE0AOf59cn6+g1EVchUFrcJVPVAPfyeG0YCn3hApA@mail.gmail.com>

On Tue, 5 Jul 2022 at 19:06, Peder Axensten <Peder.Axensten at slu.se> wrote:
>
> I tried that too. :-)
> I tried the following, inspired by code on https://pdal.io/api/transition/index.html:
>
>     pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
>         pdal::Option              las_opt( "filename", path_.native() );
>         pdal::Options             las_opts;
>         las_opts.add( las_opt );
>
>         pdal::PointTable          table;
>         pdal::LasReader           las_reader;
>         las_reader.setOptions( las_opts );
>         las_reader.prepare( table );
>
>         pdal::PointViewSet        point_view_set = las_reader.execute( table );
>         pdal::PointViewPtr        point_view = *point_view_set.begin();
>         pdal::Dimension::IdList   dims = point_view->dims();
>         return las_reader.header();

You observe garbage header because it actually is destroyed at exit
from get_header.
You must keep LasReader object alive for as long as you refer to its
LasHeader object.
The LasHeader is NOT a value type, but a thin 'view' over internal object.

The bug in your code is somewhat equivalent to this

auto foo()
{
    std::vector<int> v;
    return v.begin();
}

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From Peder.Axensten at slu.se  Wed Jul  6 04:30:16 2022
From: Peder.Axensten at slu.se (Peder Axensten)
Date: Wed, 6 Jul 2022 11:30:16 +0000
Subject: [pdal] How to get las header info?
In-Reply-To: <CABUeae_pDJE0AOf59cn6+g1EVchUFrcJVPVAPfyeG0YCn3hApA@mail.gmail.com>
References: <11AF6E0C-4ABA-43AA-A700-12453DF53784@slu.se>
 <CACJ51z0dKCOd7BqwxC7WZsrJb-7ByfSCv+NpVZyQms6+9KWVXw@mail.gmail.com>
 <6E83DB9B-A42E-46B8-A3FD-A69B6337C119@slu.se>
 <CACJ51z3WEsxpj7zaLz7+D4i-zdQbP+NuHRBWOTtUeWKJapB1Bw@mail.gmail.com>
 <459657B7-8B1D-4D87-AB50-4902B042E602@slu.se>
 <CABUeae_pDJE0AOf59cn6+g1EVchUFrcJVPVAPfyeG0YCn3hApA@mail.gmail.com>
Message-ID: <FC43838F-2BDD-4143-8C43-6747FCC8C898@slu.se>

Thank you very much, Mateusz.
I should?ve suspected it. :-)
My own convention is to give such classes a ?_view? suffix.

I attach my solution in case someone else has a similar problem. Since a LasHeader object is contained in LasReader it is better just to save the LasReader object and ask for header() when needed. But I had constructed my code around a header type, so I implemented a LasHeader subclass with a shared_ptr to the LasReader object.


class LasHeader_stable : public pdal::LasHeader {
using Reader_ptr = std::shared_ptr< pdal::LasReader >;

static Reader_ptr get_reader_ptr( const std::filesystem::path & path_ ) {
//From https://pdal.io/api/transition/index.html
pdal::Optionslas_opts;
las_opts.add( pdal::Option( "filename", path_.native() ) );

Reader_ptrreader_ptr{ std::make_shared< pdal::LasReader >() };
reader_ptr->setOptions( las_opts );
pdal::PointTabletable;
reader_ptr->prepare( table );

return reader_ptr;
}

Reader_ptrm_reader_ptr;

public:
LasHeader_stable( Reader_ptr reader_ptr ) :
pdal::LasHeader{ reader_ptr->header() },
m_reader_ptr{ reader_ptr }
{}

LasHeader_stable( const std::filesystem::path & path_ ) :
LasHeader_stable( get_reader_ptr( path_ ) )
{}

LasHeader_stable( const LasHeader_stable & )= default;
LasHeader_stable( LasHeader_stable && )= default;
LasHeader_stable & operator=( const LasHeader_stable & )= default;
LasHeader_stable & operator=( LasHeader_stable && )= default;
};


inline auto get_header( const std::filesystem::path & path_ ) {
//In Port, to list all installed PDAL versions, use "port installed pdal".
//In port, to change the PDAL version, use e.g. "sudo port activate PDAL @2.3.0_2+postgresql13+python39".
#if ( PDAL_VERSION_MAJOR == 2 ) && ( PDAL_VERSION_MINOR >= 4 )
return LasHeader_stable{ path_ };
#else
pdal::LasHeaderheader{};
pdal::ILeStreaminput{ path_.native() };
input >> header;
return header;
#endif
}



Best regards,

Peder Axensten
Systems Developer

Remote Sensing
Department of Forest Resource Management
Swedish University of Agricultural Sciences
SE-901 83 Ume?
Visiting address: Skogsmarksgr?nd
Phone: +46 90 786 85 00
peder.axensten at slu.se, www.slu.se/srh

The Department of Forest Resource Management is environmentally certified in accordance with ISO 14001.

> On 6 Jul 2022, at 00:05, Mateusz Loskot <mateusz at loskot.net> wrote:
>
> CAUTION: This email originated from outside of the organization. Do not click links or open attachments unless you recognize the sender and know the content is safe.
>
>
> On Tue, 5 Jul 2022 at 19:06, Peder Axensten <Peder.Axensten at slu.se> wrote:
>>
>> I tried that too. :-)
>> I tried the following, inspired by code on https://pdal.io/api/transition/index.html:
>>
>>    pdal::LasHeader get_header( const std::filesystem::path & path_ ) {
>>        pdal::Option              las_opt( "filename", path_.native() );
>>        pdal::Options             las_opts;
>>        las_opts.add( las_opt );
>>
>>        pdal::PointTable          table;
>>        pdal::LasReader           las_reader;
>>        las_reader.setOptions( las_opts );
>>        las_reader.prepare( table );
>>
>>        pdal::PointViewSet        point_view_set = las_reader.execute( table );
>>        pdal::PointViewPtr        point_view = *point_view_set.begin();
>>        pdal::Dimension::IdList   dims = point_view->dims();
>>        return las_reader.header();
>
> You observe garbage header because it actually is destroyed at exit
> from get_header.
> You must keep LasReader object alive for as long as you refer to its
> LasHeader object.
> The LasHeader is NOT a value type, but a thin 'view' over internal object.
>
> The bug in your code is somewhat equivalent to this
>
> auto foo()
> {
>    std::vector<int> v;
>    return v.begin();
> }
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal

---
N?r du skickar e-post till SLU s? inneb?r detta att SLU behandlar dina personuppgifter. F?r att l?sa mer om hur detta g?r till, klicka h?r <https://www.slu.se/om-slu/kontakta-slu/personuppgifter/>
E-mailing SLU will result in SLU processing your personal data. For more information on how this is done, click here <https://www.slu.se/en/about-slu/contact-slu/personal-data/>

From kdhcjswo12 at gmail.com  Fri Jul  8 03:36:11 2022
From: kdhcjswo12 at gmail.com (=?UTF-8?B?6rmA64+Z7ZiE?=)
Date: Fri, 8 Jul 2022 19:36:11 +0900
Subject: [pdal] hi hg_delaunay and litree error..!
Message-ID: <CAG32XnBWdu5Y6Q4A87f3y5dbTO78TONe+6ALNB64yGq5nE1WUw@mail.gmail.com>

 test_las.las
<https://drive.google.com/file/d/1Ut4GIF1tzfG_4B-OgCpiys8iS1uC2PSp/view?usp=drive_web>
hello

i'm donghyeon, kim from south korea

i'm used the pdal lib. and pdal is very powerful code for analysis forest
inventory

but i have a issue when i do segment the hg_delaunay and litree

error code is All points collinear..!

my work process is here:

1. subsampling (filters.voxelcentroidnearestneighbor)
2. outlier remove (filters.outlier)
3. ground segment (smrf)
4. DEM extraction (hg_delaunay) -> error: all points collinear
5. tree segmentation (litree) -> error: all points collinear

it's probably collinear in the delaunay phase...!
it i extract the raster after using hg_nn or dem and run litree, no
error occurs. But it reacts like it's going on forever...

Please help me..!

this is my json code and las file
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220708/98503d5f/attachment.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: treeSeg_litree.json
Type: application/json
Size: 433 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220708/98503d5f/attachment.json>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: outlier_removal.json
Type: application/json
Size: 292 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220708/98503d5f/attachment-0001.json>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: groundfilter_smrf.json
Type: application/json
Size: 394 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220708/98503d5f/attachment-0002.json>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: hg_delaunay.json
Type: application/json
Size: 232 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220708/98503d5f/attachment-0003.json>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: subsampling.json
Type: application/json
Size: 136 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220708/98503d5f/attachment-0004.json>

From calba at lillemetropole.fr  Tue Jul 12 06:51:37 2022
From: calba at lillemetropole.fr (=?iso-8859-1?Q?ALBA_Cl=E9ment?=)
Date: Tue, 12 Jul 2022 13:51:37 +0000
Subject: [pdal] Presentation of pdal-parallelizer (new tool !)
Message-ID: <10687b9f00a54ee0ae2141b9688aac1f@lillemetropole.fr>

Hi,

pdal-parallelizer is a command-line application that will allow you to parallelize your pdal processing with Dask, it can replace tools like rush or GNU Parallel.

It contains two functions :
- process-pipelines: it allows you to process treatments on collection of .las files
- process-copc: it allows you to process treatments on a large copc file by splitting it

For these two functions, there is a serialization system to anticipate possible problems during execution. For example, if you have processed 100 tiles of your copc and your computer shuts down during execution, you will not have to start processing the copc again from the beginning: you will pick up where the execution left off.

The documentation and code are available on this github repository: https://github.com/meldig/pdal-parallelizer

You also have example pipelines and example config files to use the tool.

The improvement of pdal-parallelizer is not finished. Here are the further improvement :

- Use the network aspect of dask to run treatments on a cluster of machines
- Use buffers in copc processing
- Integrate the process-copc function in the process-pipelines function
- Vary the reader formats

Of course, if you have any improvement recommendation or any problem with pdal-parallelizer, you can open an issue on the github repository.

Regards,
Cl?ment Alba
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/22bd935c/attachment.htm>

From nicholas.stanley at luminartech.com  Tue Jul 12 13:41:14 2022
From: nicholas.stanley at luminartech.com (Nicholas Stanley)
Date: Tue, 12 Jul 2022 13:41:14 -0700
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
Message-ID: <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>

Greetings,

My goal is to reproject/align a third party GRS80 point cloud data 
source to an existing UTM10 WGS84 (EPSG 32610) georeferenced point cloud 
file/"ground truth".

Running Lasinfo on the third party data source (to be 
corrected/reprojected/aligned to Ground Truth) shows the following:


/// 'OGC Transformation Record'//
//??? WKT OGC COORDINATE SYSTEM://
//??? COMPD_CS["NAD83(2011) / Conus Albers + NAVD88 
height",PROJCS["NAD83(2011) / Conus 
Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference 
System 2011)",SPHEROID["GRS 
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88 
height",VERT_DATUM["North American Vertical Datum 
1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]] 
///


I am able to successfully reproject the file in PDAL so that the 
relative 2D alignment in Easting/Northing is corrected - using a command 
like this:

///pdal translate filename.laz filename_utm.laz reprojection 
--filters.reprojection.out_srs="EPSG:32610"///


*Reviewing the output, this shows proper 2D Grid alignment between 
ground truth and third party data, but a delta of ~30M in elevation 
between the ground planes. **This needs to be rectified.
*

*I've recently found this site describing a process to reproject a .las 
file in respect to various vertical datums.*


http://www.gadom.ski/2017/05/31/vdatum-with-pdal.html

///In order to use//PDAL <https://www.pdal.io/>//to convert vertical 
coordinates to a new vertical datum, we?ll need to fetch the appropriate 
geoid. PDAL uses//proj.4 <http://proj4.org/>//under the hood, and proj.4 
accepts geoid?s in NOAA VDatum?s//|gtx|//file format. We can fetch the 
12B geoid from the//VDatum download website 
<https://vdatum.noaa.gov/download.php>//. Inside the 12B zipfile there 
is a file called//|g2012b_conus.gtx|//; this is the geoid for the 
Continental United States (CONUS). We?ll use this file to convert our 
data.///


I've downloaded the VDatum collection as stated - That said, I've been 
unable to get the process to work properly.

///pdal translate filename.laz filename_utm.laz reprojection 
--filters.reprojection.out_srs="+init=EPSG:32610 
+geoidgrids=~/Downloads/vdatum/g2012b_conus.gtx" 
--writers.las.a_srs=EPSG:32610+4326//
//(pdal translate Error) GDAL failure (1) SetCompoundCS() fails, 
vertical component is not VERT_CS.//
//(pdal translate writers.las Error) GDAL failure (1) PROJ: 
proj_crs_get_coordinate_system: Object is not a SingleCRS///


Does anyone have any Tips/Pointers as to how to resolve/debug this issue?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/5aff22f1/attachment.htm>

From klassen.js at gmail.com  Tue Jul 12 14:03:31 2022
From: klassen.js at gmail.com (Jim Klassen)
Date: Tue, 12 Jul 2022 16:03:31 -0500
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
Message-ID: <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>



On 7/12/22 15:41, Nicholas Stanley wrote:
>
> Greetings,
>
> My goal is to reproject/align a third party GRS80 point cloud data source to an existing UTM10 WGS84 (EPSG 32610) georeferenced point cloud file/"ground truth".
>
> Running Lasinfo on the third party data source (to be corrected/reprojected/aligned to Ground Truth) shows the following:
>
>
> /// 'OGC Transformation Record'//
> //??? WKT OGC COORDINATE SYSTEM://
> //??? COMPD_CS["NAD83(2011) / Conus Albers + NAVD88 height",PROJCS["NAD83(2011) / Conus Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference System 2011)",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88 height",VERT_DATUM["North American Vertical Datum 1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]] ///
>
>
> I am able to successfully reproject the file in PDAL so that the relative 2D alignment in Easting/Northing is corrected - using a command like this:
>
> /???????????????????????? //pdal translate filename.laz filename_utm.laz reprojection --filters.reprojection.out_srs="EPSG:32610"///
>
>
> *Reviewing the output, this shows proper 2D Grid alignment between ground truth and third party data, but a delta of ~30M in elevation between the ground planes. **This needs to be rectified.
> *
>
> *I've recently found this site describing a process to reproject a .las file in respect to various vertical datums.*
>
>
> http://www.gadom.ski/2017/05/31/vdatum-with-pdal.html
>
> ///In order to use//PDAL <https://www.pdal.io/>//to convert vertical coordinates to a new vertical datum, we?ll need to fetch the appropriate geoid. PDAL uses//proj.4 <http://proj4.org/>//under the hood, and proj.4 accepts geoid?s in NOAA VDatum?s//|gtx|//file format. We can fetch the 12B geoid from the//VDatum download website <https://vdatum.noaa.gov/download.php>//. Inside the 12B zipfile there is a file called//|g2012b_conus.gtx|//; this is the geoid for the Continental United States (CONUS). We?ll use this file to convert our data.///
>
>
> I've downloaded the VDatum collection as stated - That said, I've been unable to get the process to work properly.
>
> ///pdal translate filename.laz filename_utm.laz reprojection --filters.reprojection.out_srs="+init=EPSG:32610 +geoidgrids=~/Downloads/vdatum/g2012b_conus.gtx" --writers.las.a_srs=EPSG:32610+4326//
> //(pdal translate Error) GDAL failure (1) SetCompoundCS() fails, vertical component is not VERT_CS.//
> //(pdal translate writers.las Error) GDAL failure (1) PROJ: proj_crs_get_coordinate_system: Object is not a SingleCRS///
>
>
> Does anyone have any Tips/Pointers as to how to resolve/debug this issue?
>
> Thanks.
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal


--writers.las.a_srs=EPSG:32610+4326

There may be more going on here, but "+4326" is likely not correct. You need a vert_cs, something like 5703, there.? 4326 is a horizontal CS.? I'm not sure if there is a way to explicitly state you want ellipsoid heights.? In my experience that's the default if a separate vertical component isn't given./

/Also if you have recent PDAL built against recent PROJ (6+) you probably want to pull the TIFF files from cdn.proj.org (instead of gtx) for the vertical datum conversion./

/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/e669c345/attachment-0001.htm>

From nicholas.stanley at luminartech.com  Tue Jul 12 14:12:49 2022
From: nicholas.stanley at luminartech.com (Nicholas Stanley)
Date: Tue, 12 Jul 2022 14:12:49 -0700
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
Message-ID: <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>

Thanks,

Yes, that was an oversight in respect to the +4326 - thanks.

To reiterate:

I am trying to get the /NAD83(2011) / Conus Albers + NAVD88 height/ data 
*out* of its native elevation model, converted *into* a wgs84 EPSG 32610 
ellipsoidal projection.

When I run the conversion command /? //pdal translate filename.laz 
filename_utm.laz reprojection --filters.reprojection.out_srs="EPSG:32610"//

/The resulting file lines up in Easting/Northing precisely, but seems to 
have retained the old elevation data (which is ~30M+ above our UTM10 
WGS84 "Ground Truth")

On 7/12/22 14:03, Jim Klassen wrote:
>
>
> On 7/12/22 15:41, Nicholas Stanley wrote:
>>
>> Greetings,
>>
>> My goal is to reproject/align a third party GRS80 point cloud data 
>> source to an existing UTM10 WGS84 (EPSG 32610) georeferenced point 
>> cloud file/"ground truth".
>>
>> Running Lasinfo on the third party data source (to be 
>> corrected/reprojected/aligned to Ground Truth) shows the following:
>>
>>
>> /// 'OGC Transformation Record'//
>> //??? WKT OGC COORDINATE SYSTEM://
>> //??? COMPD_CS["NAD83(2011) / Conus Albers + NAVD88 
>> height",PROJCS["NAD83(2011) / Conus 
>> Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference 
>> System 2011)",SPHEROID["GRS 
>> 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88 
>> height",VERT_DATUM["North American Vertical Datum 
>> 1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]] 
>> ///
>>
>>
>> I am able to successfully reproject the file in PDAL so that the 
>> relative 2D alignment in Easting/Northing is corrected - using a 
>> command like this:
>>
>> ///pdal translate filename.laz filename_utm.laz reprojection 
>> --filters.reprojection.out_srs="EPSG:32610"///
>>
>>
>> *Reviewing the output, this shows proper 2D Grid alignment between 
>> ground truth and third party data, but a delta of ~30M in elevation 
>> between the ground planes. **This needs to be rectified.
>> *
>>
>> *I've recently found this site describing a process to reproject a 
>> .las file in respect to various vertical datums.*
>>
>>
>> http://www.gadom.ski/2017/05/31/vdatum-with-pdal.html
>>
>> ///In order to use//PDAL <https://www.pdal.io/>//to convert vertical 
>> coordinates to a new vertical datum, we?ll need to fetch the 
>> appropriate geoid. PDAL uses//proj.4 <http://proj4.org/>//under the 
>> hood, and proj.4 accepts geoid?s in NOAA VDatum?s//|gtx|//file 
>> format. We can fetch the 12B geoid from the//VDatum download website 
>> <https://vdatum.noaa.gov/download.php>//. Inside the 12B zipfile 
>> there is a file called//|g2012b_conus.gtx|//; this is the geoid for 
>> the Continental United States (CONUS). We?ll use this file to convert 
>> our data.///
>>
>>
>> I've downloaded the VDatum collection as stated - That said, I've 
>> been unable to get the process to work properly.
>>
>> ///pdal translate filename.laz filename_utm.laz reprojection 
>> --filters.reprojection.out_srs="+init=EPSG:32610 
>> +geoidgrids=~/Downloads/vdatum/g2012b_conus.gtx" 
>> --writers.las.a_srs=EPSG:32610+4326//
>> //(pdal translate Error) GDAL failure (1) SetCompoundCS() fails, 
>> vertical component is not VERT_CS.//
>> //(pdal translate writers.las Error) GDAL failure (1) PROJ: 
>> proj_crs_get_coordinate_system: Object is not a SingleCRS///
>>
>>
>> Does anyone have any Tips/Pointers as to how to resolve/debug this 
>> issue?
>>
>> Thanks.
>>
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>
>
> --writers.las.a_srs=EPSG:32610+4326
>
> There may be more going on here, but "+4326" is likely not correct.? 
> You need a vert_cs, something like 5703, there.? 4326 is a horizontal 
> CS.? I'm not sure if there is a way to explicitly state you want 
> ellipsoid heights.? In my experience that's the default if a separate 
> vertical component isn't given./
>
> /Also if you have recent PDAL built against recent PROJ (6+) you 
> probably want to pull the TIFF files from cdn.proj.org (instead of 
> gtx) for the vertical datum conversion./
>
> /
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/23403396/attachment.htm>

From klassen.js at gmail.com  Tue Jul 12 14:43:08 2022
From: klassen.js at gmail.com (Jim Klassen)
Date: Tue, 12 Jul 2022 16:43:08 -0500
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
Message-ID: <4e6871d1-250c-5731-85cf-092967dfac74@gmail.com>

The following have worked for me in the past with PDAL 2.3.0, GDAL 3.4, Proj 8.2.0 (although I have edited it since I was going from EPSG:6344+5703 to EPSG:4326 at the time):

--filter filters.reprojection --filters.reprojection.out_srs="EPSG:32610"

or

--filter filters.reprojection --filters.reprojection.in_srs="+init=epsg:6350 +geoidgrids=us_noaa_g2018u0.tif" --filters.reprojection.out_srs="+init=epsg:32610"

or

--filter filters.reprojection --filters.reprojection.in_srs="+init=epsg:6350 +geoidgrids=us_noaa_g2012bu0.tif" --filters.reprojection.out_srs="+init=epsg:32610"

All three shifted the data about 28m "lower" in Z (in Minnesota).

On 7/12/22 16:12, Nicholas Stanley wrote:
>
> Thanks,
>
> Yes, that was an oversight in respect to the +4326 - thanks.
>
> To reiterate:
>
> I am trying to get the /NAD83(2011) / Conus Albers + NAVD88 height/ data *out* of its native elevation model, converted *into* a wgs84 EPSG 32610 ellipsoidal projection.
>
> When I run the conversion command /? //pdal translate filename.laz filename_utm.laz reprojection --filters.reprojection.out_srs="EPSG:32610"//
>
> /The resulting file lines up in Easting/Northing precisely, but seems to have retained the old elevation data (which is ~30M+ above our UTM10 WGS84 "Ground Truth")
>
> On 7/12/22 14:03, Jim Klassen wrote:
>>
>>
>> On 7/12/22 15:41, Nicholas Stanley wrote:
>>>
>>> Greetings,
>>>
>>> My goal is to reproject/align a third party GRS80 point cloud data source to an existing UTM10 WGS84 (EPSG 32610) georeferenced point cloud file/"ground truth".
>>>
>>> Running Lasinfo on the third party data source (to be corrected/reprojected/aligned to Ground Truth) shows the following:
>>>
>>>
>>> /// 'OGC Transformation Record'//
>>> //??? WKT OGC COORDINATE SYSTEM://
>>> //??? COMPD_CS["NAD83(2011) / Conus Albers + NAVD88 height",PROJCS["NAD83(2011) / Conus Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference System 2011)",SPHEROID["GRS 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88 height",VERT_DATUM["North American Vertical Datum 1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]] ///
>>>
>>>
>>> I am able to successfully reproject the file in PDAL so that the relative 2D alignment in Easting/Northing is corrected - using a command like this:
>>>
>>> ///pdal translate filename.laz filename_utm.laz reprojection --filters.reprojection.out_srs="EPSG:32610"///
>>>
>>>
>>> *Reviewing the output, this shows proper 2D Grid alignment between ground truth and third party data, but a delta of ~30M in elevation between the ground planes. **This needs to be rectified.
>>> *
>>>
>>> *I've recently found this site describing a process to reproject a .las file in respect to various vertical datums.*
>>>
>>>
>>> http://www.gadom.ski/2017/05/31/vdatum-with-pdal.html
>>>
>>> ///In order to use//PDAL <https://www.pdal.io/>//to convert vertical coordinates to a new vertical datum, we?ll need to fetch the appropriate geoid. PDAL uses//proj.4 <http://proj4.org/>//under the hood, and proj.4 accepts geoid?s in NOAA VDatum?s//|gtx|//file format. We can fetch the 12B geoid from the//VDatum download website <https://vdatum.noaa.gov/download.php>//. Inside the 12B zipfile there is a file called//|g2012b_conus.gtx|//; this is the geoid for the Continental United States (CONUS). We?ll use this file to convert our data.///
>>>
>>>
>>> I've downloaded the VDatum collection as stated - That said, I've been unable to get the process to work properly.
>>>
>>> ///pdal translate filename.laz filename_utm.laz reprojection --filters.reprojection.out_srs="+init=EPSG:32610 +geoidgrids=~/Downloads/vdatum/g2012b_conus.gtx" --writers.las.a_srs=EPSG:32610+4326//
>>> //(pdal translate Error) GDAL failure (1) SetCompoundCS() fails, vertical component is not VERT_CS.//
>>> //(pdal translate writers.las Error) GDAL failure (1) PROJ: proj_crs_get_coordinate_system: Object is not a SingleCRS///
>>>
>>>
>>> Does anyone have any Tips/Pointers as to how to resolve/debug this issue?
>>>
>>> Thanks.
>>>
>>>
>>> _______________________________________________
>>> pdal mailing list
>>> pdal at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>
>>
>> --writers.las.a_srs=EPSG:32610+4326
>>
>> There may be more going on here, but "+4326" is likely not correct.? You need a vert_cs, something like 5703, there.? 4326 is a horizontal CS.? I'm not sure if there is a way to explicitly state you want ellipsoid heights.? In my experience that's the default if a separate vertical component isn't given./
>>
>> /Also if you have recent PDAL built against recent PROJ (6+) you probably want to pull the TIFF files from cdn.proj.org (instead of gtx) for the vertical datum conversion./
>>
>> /
>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/6d499ead/attachment-0001.htm>

From gdt at lexort.com  Tue Jul 12 14:45:07 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 12 Jul 2022 17:45:07 -0400
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com> (Nicholas
 Stanley's message of "Tue, 12 Jul 2022 14:12:49 -0700")
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
Message-ID: <rmio7xugg4c.fsf@s1.lexort.com>


Nicholas Stanley <nicholas.stanley at luminartech.com> writes:

> I am trying to get the /NAD83(2011) / Conus Albers + NAVD88 height/
> data *out* of its native elevation model, converted *into* a wgs84
> EPSG 32610 ellipsoidal projection.
>
> When I run the conversion command /? //pdal translate filename.laz
> filename_utm.laz reprojection
> --filters.reprojection.out_srs="EPSG:32610"//
>
> /The resulting file lines up in Easting/Northing precisely, but seems
> to have retained the old elevation data (which is ~30M+ above our
> UTM10 WGS84 "Ground Truth")

I would suggest using ITRF2008 or ITRF2014 as a destination, because
WGS84 is an ensemble, and those match the last two membres (and are very
close to each other).  In the proj world, NAD83/WGS84 transforms end up
using a null transform, which is arguably pedantically reasonable, but
IMHO in almost all cases the wrong approach.

Strictly, you should be talking about epoch in WGS84(Gnnnn)/ITRFyyyy.
But that's 20-30cm very issh, if you're not in CA.

30M is suspiciously close to a geoid height.  So:

  You say you have "WGS84" ground truth.  Are you clear on whether the
  vertical component is "WGS84 Ellipsoidal Height", which is implied by
  what you just said, or "WGS84 Orthometric Height"?  The two are
  related by the EGM2008 gravity model, also published by NGA.

  To convert from NAVD88 to WGS84 ellipsoidal height, you have to first
  convert to NAD83(2011) ellipsoidal height, using an NGS-published
  geoid model such as GEOID18, and then to WGS84/ITRF using a datum
  transformation.  If you want to go to WGS84 Orthometric Height you
  have to do the previous and then apply EGM2008.


FWIW, I have measured NAD83(2011) epoch 2010.0 HAE on a benchmark via
RTK and transformed to NAVD88 and gotten agreement at the 10 cm level.
However this was via looking up GEOID18 on NGS's website and doing it
manually.

I would suggest manually transforming a point to verify your
understanding of what you are dealing with.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/85ee1f0e/attachment.sig>

From nicholas.stanley at luminartech.com  Tue Jul 12 15:53:42 2022
From: nicholas.stanley at luminartech.com (Nicholas Stanley)
Date: Tue, 12 Jul 2022 15:53:42 -0700
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <rmio7xugg4c.fsf@s1.lexort.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
 <rmio7xugg4c.fsf@s1.lexort.com>
Message-ID: <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com>

Our "ground truth" is using WGS84 Ellipsoidal Height. The survey was 
created in ~2017, but unfortunately I don't have much additional info 
about the Epoch.

Technically, yes, I am in California - is it fair to say this 
complicates things somewhat? The data for conversion is a USGS survey of 
the San Francisco Bay Area.

Following the logic of your process:

*Step 1: Convert the **/NAD83(2011) / Conus Albers + NAVD88 height /**to 
NAD83 Ellipsoidal using GEOID18 *


E.G.: pdal translate USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz 
Step1_NAD83.laz reprojection 
--filters.reprojection.out_srs="+init=EPSG:xxxx 
+geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx" 
--writers.las.a_srs=EPSG:xxxx

(Not sure which EPSG codes to use here - any guess?)

*Step 2. Convert resulting Step 1. file into destination projection 
(WGS84 UTM 10 Ellipsoidal https://epsg.io/32610, or alternatively, 
https://epsg.io/7789 ITRF 2014)

*

On 7/12/22 14:45, Greg Troxel wrote:

E.G.: pdal translate USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz 
Step1_NAD83.laz reprojection 
--filters.reprojection.out_srs="+init=EPSG:xxxx 
+geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx" 
--writers.las.a_srs=EPSG:xxxx




> Nicholas Stanley<nicholas.stanley at luminartech.com>  writes:
>
>> I am trying to get the /NAD83(2011) / Conus Albers + NAVD88 height/
>> data *out* of its native elevation model, converted *into* a wgs84
>> EPSG 32610 ellipsoidal projection.
>>
>> When I run the conversion command /? //pdal translate filename.laz
>> filename_utm.laz reprojection
>> --filters.reprojection.out_srs="EPSG:32610"//
>>
>> /The resulting file lines up in Easting/Northing precisely, but seems
>> to have retained the old elevation data (which is ~30M+ above our
>> UTM10 WGS84 "Ground Truth")
> I would suggest using ITRF2008 or ITRF2014 as a destination, because
> WGS84 is an ensemble, and those match the last two membres (and are very
> close to each other).  In the proj world, NAD83/WGS84 transforms end up
> using a null transform, which is arguably pedantically reasonable, but
> IMHO in almost all cases the wrong approach.
>
> Strictly, you should be talking about epoch in WGS84(Gnnnn)/ITRFyyyy.
> But that's 20-30cm very issh, if you're not in CA.
>
> 30M is suspiciously close to a geoid height.  So:
>
>    You say you have "WGS84" ground truth.  Are you clear on whether the
>    vertical component is "WGS84 Ellipsoidal Height", which is implied by
>    what you just said, or "WGS84 Orthometric Height"?  The two are
>    related by the EGM2008 gravity model, also published by NGA.
>
>    To convert from NAVD88 to WGS84 ellipsoidal height, you have to first
>    convert to NAD83(2011) ellipsoidal height, using an NGS-published
>    geoid model such as GEOID18, and then to WGS84/ITRF using a datum
>    transformation.  If you want to go to WGS84 Orthometric Height you
>    have to do the previous and then apply EGM2008.
>
>
> FWIW, I have measured NAD83(2011) epoch 2010.0 HAE on a benchmark via
> RTK and transformed to NAVD88 and gotten agreement at the 10 cm level.
> However this was via looking up GEOID18 on NGS's website and doing it
> manually.
>
> I would suggest manually transforming a point to verify your
> understanding of what you are dealing with.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/81be5024/attachment.htm>

From gdt at lexort.com  Tue Jul 12 16:35:12 2022
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 12 Jul 2022 19:35:12 -0400
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com> (Nicholas
 Stanley's message of "Tue, 12 Jul 2022 15:53:42 -0700")
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
 <rmio7xugg4c.fsf@s1.lexort.com>
 <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com>
Message-ID: <rmi35f5hplb.fsf@s1.lexort.com>


Nicholas Stanley <nicholas.stanley at luminartech.com> writes:

> Our "ground truth" is using WGS84 Ellipsoidal Height. The survey was
> created in ~2017, but unfortunately I don't have much additional info
> about the Epoch.

One would assume that the coordinate epoch is the date of the
observations.

I am very curious about this survey and how it was done.  I do not know
of any mechanisms to obtain precise coordinates in WGS84 (assuming you
aren't working within NGA).   If it's uncorrected data I don't see how
it would be that useful.   If it's RTK or static carrier phase, I don't
see how it could be in WGS84.

> Technically, yes, I am in California - is it fair to say this
> complicates things somewhat? The data for conversion is a USGS survey
> of the San Francisco Bay Area.

As you know California is unstable :-) Most stations in the US are
located on the North American plate and their NAD83 velocities are low,
on the order of a few mm/year.  Parts of CA are on the Pacific plate and
have much higher velocities.  And, NAD83 has a velocity relative to
WGS84/ITRF.  So if you are trying to get things right at the 10 cm
level, you'll have to be careful about this.  NGS has lots of
information about seismic/plate-motion coordinate changes.  I don't
really understand the details as I'm in Massachusetts, far from a plate
boundary.  But, if you are going from NAD83(2011) epoch 2010.0 to ITRF,
I think the Pacific plate issues won't be that much trouble.

> Following the logic of your process:
>
> *Step 1: Convert the **/NAD83(2011) / Conus Albers + NAVD88 height
> /**to NAD83 Ellipsoidal using GEOID18 *
>

> E.G.: pdal translate
> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
> --writers.las.a_srs=EPSG:xxxx

v2018prvi looks like a grid for the Puerto Rico region.   Is there a
v2018conus.gtx?  Why are you using the prvi one?

If you run pdalinfo on the .laz file, does it output a CRS, and does
that CRS match the documented CRS for the LIDAR data?

What I am also suggesting is that you obtain a point manually (some
lat/lon and the height) from your dataset, at one of the ground truth
dataset points, and then take that and do the various conversions
manually using NGS and other tools, such as
  https://www.ngs.noaa.gov/NCAT/
  https://www.ngs.noaa.gov/GEOID/GEOID18/
  https://www.ngs.noaa.gov/GEOID/GEOID18/computation.html
  https://geographiclib.sourceforge.io/cgi-bin/GeoidEval

> (Not sure which EPSG codes to use here - any guess?)

I don't think you can assume that there is an EPSG code for a compound
CRS that's e.g. a combination of a UTM zone and a height.

> *Step 2. Convert resulting Step 1. file into destination projection
> (WGS84 UTM 10 Ellipsoidal https://epsg.io/32610, or alternatively,
> https://epsg.io/7789 ITRF 2014)
>
> E.G.: pdal translate
> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
> --writers.las.a_srs=EPSG:xxxx

I think you need to define a compound CRS that includes height and avoid
handling 3D data with a 2D CRS.

I am not really familiar with pdal translate options; your arguments
look like old-style proj rather than modern proj which lets you query
for transformations and see them.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/0343925a/attachment.sig>

From nicholas.stanley at luminartech.com  Tue Jul 12 22:32:59 2022
From: nicholas.stanley at luminartech.com (Nicholas Stanley)
Date: Tue, 12 Jul 2022 22:32:59 -0700
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <rmi35f5hplb.fsf@s1.lexort.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
 <rmio7xugg4c.fsf@s1.lexort.com>
 <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com>
 <rmi35f5hplb.fsf@s1.lexort.com>
Message-ID: <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com>

*
For the fun of it, here's a link to the Ground Truth and Data to be 
reprojected in alignment to it. If Someone thinks they can crack this, 
please give it a shot!

https://drive.google.com/drive/folders/1KdUc1xnOtNl0RkWfr1-C_gh7jzU7q9U1?usp=sharing


*

*The Source Materials (to be corrected) are described here:* 
https://www.fisheries.noaa.gov/inport/item/59131


Coordinate Reference System
CRS Type:??? Geographic 3D
*EPSG Code:??? EPSG:6319*
EPSG Name:??? NAD83(2011)
Datum Name:??? NAD83 (National Spatial Reference System 2011)
Ellipsoid:??? GRS 1980
Semimajor Axis:??? 6378137.0
Flattening Ratio:??? 298.257222101
*"ldrgeoid" : "GEOID 12B",*

*That said, when i run pdal info on the file, i see the following:*

"file_size": 10024109,
 ? "filename": "USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz",
 ? "now": "2022-07-12T21:37:52-0700",
 ? "pdal_version": "2.2.0 (git-version: Release)",
 ? "reader": "readers.las",
 ? "stats":
 ? {
 ??? "bbox":
 ??? {
*? "EPSG:4326":*
 ????? {
 ??????? "bbox":
 ??????? {
 ????????? "maxx": -122.4022284,
 ????????? "maxy": 37.81572701,
 ????????? "maxz": 99.83,
 ????????? "minx": -122.4164013,
 ????????? "miny": 37.80469945,
 ????????? "minz": -70.28
 ??????? },
 ??????? "boundary": { "type": "Polygon", "coordinates": [ [ [ 
-122.413254958928221, 37.804699453399095, -70.28 ], [ 
-122.416401346373235, 37.813279215545926, -70.28 ], [ 
-122.405373596515062, 37.815727007213006, 99.83 ], [ 
-122.402228384472423, 37.807146965417473, 99.83 ], [ 
-122.413254958928221, 37.804699453399095, -70.28 ] ] ] }
 ????? },
 ????? "native":
 ????? {
 ??????? "bbox":
 ??????? {
 ????????? "maxx": -2273000,
 ????????? "maxy": 1959999.99,
 ????????? "maxz": 99.83,
 ????????? "minx": -2273999.99,
 ????????? "miny": 1959000,
 ????????? "minz": -70.28
 ??????? },
 ??????? "boundary": { "type": "Polygon", "coordinates": [ [ [ 
-2273999.990000000223517, 1959000.0, -70.28 ], [ 
-2273999.990000000223517, 1959999.99, -70.28 ], [ -2273000.0, 
1959999.99, 99.83 ], [ -2273000.0, 1959000.0, 99.83 ], [ 
-2273999.990000000223517, 1959000.0, -70.28 ] ] ] }
 ????? }
 ??? },


*EPSG 4326 is a WGS84 code, but this is merely defining the bounding box 
container it seems.

*
*Lasinfo shows:

 ? description????????? 'OGC Transformation Record'
 ??? WKT OGC COORDINATE SYSTEM:
 ??? COMPD_CS["NAD83(2011) / Conus Albers + NAVD88 
height",PROJCS["NAD83(2011) / Conus 
Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference 
System 2011)",SPHEROID["GRS 
1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88 
height",VERT_DATUM["North American Vertical Datum 
1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]]
variable length header record 4 of 4:
*
---------

///What I am also suggesting is that you obtain a point manually (some 
lat/lon and the height) from your dataset, at one of the ground truth 
dataset points, and then take that and do the various conversions 
manually using NGS and other tools, such as///

//

Having done this, I see coordinates that more closely align in Elevation 
to our ground Truth (although they still appear to be off by ~2-3 
meters, not 30)


    Output from GEOID18

                                          latitude        longitude       N         error (95% confidence interval)
Station Name                            ddd mm ss.sssss ddd mm ss.sssss  meters    meters
USER LOCATION                            37 48 25.00920 237 35 38.63040  -32.486    0.031

Our "Ground Truth" in this area shows an Elevation at -29.17m.



On 7/12/22 16:35, Greg Troxel wrote:
> Nicholas Stanley<nicholas.stanley at luminartech.com>  writes:
>
>> Our "ground truth" is using WGS84 Ellipsoidal Height. The survey was
>> created in ~2017, but unfortunately I don't have much additional info
>> about the Epoch.
> One would assume that the coordinate epoch is the date of the
> observations.
>
> I am very curious about this survey and how it was done.  I do not know
> of any mechanisms to obtain precise coordinates in WGS84 (assuming you
> aren't working within NGA).   If it's uncorrected data I don't see how
> it would be that useful.   If it's RTK or static carrier phase, I don't
> see how it could be in WGS84.
>
>> Technically, yes, I am in California - is it fair to say this
>> complicates things somewhat? The data for conversion is a USGS survey
>> of the San Francisco Bay Area.
> As you know California is unstable :-) Most stations in the US are
> located on the North American plate and their NAD83 velocities are low,
> on the order of a few mm/year.  Parts of CA are on the Pacific plate and
> have much higher velocities.  And, NAD83 has a velocity relative to
> WGS84/ITRF.  So if you are trying to get things right at the 10 cm
> level, you'll have to be careful about this.  NGS has lots of
> information about seismic/plate-motion coordinate changes.  I don't
> really understand the details as I'm in Massachusetts, far from a plate
> boundary.  But, if you are going from NAD83(2011) epoch 2010.0 to ITRF,
> I think the Pacific plate issues won't be that much trouble.
>
>> Following the logic of your process:
>>
>> *Step 1: Convert the **/NAD83(2011) / Conus Albers + NAVD88 height
>> /**to NAD83 Ellipsoidal using GEOID18 *
>>
>> E.G.: pdal translate
>> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
>> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
>> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
>> --writers.las.a_srs=EPSG:xxxx
> v2018prvi looks like a grid for the Puerto Rico region.   Is there a
> v2018conus.gtx?  Why are you using the prvi one?
>
> If you run pdalinfo on the .laz file, does it output a CRS, and does
> that CRS match the documented CRS for the LIDAR data?
>
> What I am also suggesting is that you obtain a point manually (some
> lat/lon and the height) from your dataset, at one of the ground truth
> dataset points, and then take that and do the various conversions
> manually using NGS and other tools, such as
>    https://www.ngs.noaa.gov/NCAT/
>    https://www.ngs.noaa.gov/GEOID/GEOID18/
>    https://www.ngs.noaa.gov/GEOID/GEOID18/computation.html
>    https://geographiclib.sourceforge.io/cgi-bin/GeoidEval
>
>> (Not sure which EPSG codes to use here - any guess?)
> I don't think you can assume that there is an EPSG code for a compound
> CRS that's e.g. a combination of a UTM zone and a height.
>
>> *Step 2. Convert resulting Step 1. file into destination projection
>> (WGS84 UTM 10 Ellipsoidalhttps://epsg.io/32610, or alternatively,
>> https://epsg.io/7789  ITRF 2014)
>>
>> E.G.: pdal translate
>> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
>> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
>> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
>> --writers.las.a_srs=EPSG:xxxx
> I think you need to define a compound CRS that includes height and avoid
> handling 3D data with a 2D CRS.
>
> I am not really familiar with pdal translate options; your arguments
> look like old-style proj rather than modern proj which lets you query
> for transformations and see them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220712/360d1b10/attachment-0001.htm>

From runette at gmail.com  Tue Jul 12 23:34:22 2022
From: runette at gmail.com (Paul Harwood)
Date: Wed, 13 Jul 2022 07:34:22 +0100
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
 <rmio7xugg4c.fsf@s1.lexort.com>
 <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com>
 <rmi35f5hplb.fsf@s1.lexort.com>
 <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com>
Message-ID: <CAE8nN5N6-J6RHf0S-bLT7569yvMBgpo-6M5xDErd1KQwED0Thw@mail.gmail.com>

Pdalinfo reports the bbox in the native CRS AND 4326 - so that 4326 tag is
created by pdal and is not in the original. Look at the "native" tag under
bbox.

On Wed, 13 Jul 2022, 06:33 Nicholas Stanley, <
nicholas.stanley at luminartech.com> wrote:

>
>
>
>
>
>
> * For the fun of it, here's a link to the Ground Truth and Data to be
> reprojected in alignment to it. If Someone thinks they can crack this,
> please give it a shot!
> https://drive.google.com/drive/folders/1KdUc1xnOtNl0RkWfr1-C_gh7jzU7q9U1?usp=sharing
> <https://drive.google.com/drive/folders/1KdUc1xnOtNl0RkWfr1-C_gh7jzU7q9U1?usp=sharing>
> *
>
> *The Source Materials (to be corrected) are described here:*
> https://www.fisheries.noaa.gov/inport/item/59131
>
>
> Coordinate Reference System
> CRS Type:    Geographic 3D
> *EPSG Code:    EPSG:6319*
> EPSG Name:    NAD83(2011)
> Datum Name:    NAD83 (National Spatial Reference System 2011)
> Ellipsoid:    GRS 1980
> Semimajor Axis:    6378137.0
> Flattening Ratio:    298.257222101
> *"ldrgeoid" : "GEOID 12B",*
>
> *That said, when i run pdal info on the file, i see the following:*
>
> "file_size": 10024109,
>   "filename": "USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz",
>   "now": "2022-07-12T21:37:52-0700",
>   "pdal_version": "2.2.0 (git-version: Release)",
>   "reader": "readers.las",
>   "stats":
>   {
>     "bbox":
>     {
>     *  "EPSG:4326":*
>       {
>         "bbox":
>         {
>           "maxx": -122.4022284,
>           "maxy": 37.81572701,
>           "maxz": 99.83,
>           "minx": -122.4164013,
>           "miny": 37.80469945,
>           "minz": -70.28
>         },
>         "boundary": { "type": "Polygon", "coordinates": [ [ [
> -122.413254958928221, 37.804699453399095, -70.28 ], [ -122.416401346373235,
> 37.813279215545926, -70.28 ], [ -122.405373596515062, 37.815727007213006,
> 99.83 ], [ -122.402228384472423, 37.807146965417473, 99.83 ], [
> -122.413254958928221, 37.804699453399095, -70.28 ] ] ] }
>       },
>       "native":
>       {
>         "bbox":
>         {
>           "maxx": -2273000,
>           "maxy": 1959999.99,
>           "maxz": 99.83,
>           "minx": -2273999.99,
>           "miny": 1959000,
>           "minz": -70.28
>         },
>         "boundary": { "type": "Polygon", "coordinates": [ [ [
> -2273999.990000000223517, 1959000.0, -70.28 ], [ -2273999.990000000223517,
> 1959999.99, -70.28 ], [ -2273000.0, 1959999.99, 99.83 ], [ -2273000.0,
> 1959000.0, 99.83 ], [ -2273999.990000000223517, 1959000.0, -70.28 ] ] ] }
>       }
>     },
>
>
>
>
> *EPSG 4326 is a WGS84 code, but this is merely defining the bounding box
> container it seems. *
>
>
>
>
>
>
> *Lasinfo shows:   description          'OGC Transformation Record'     WKT
> OGC COORDINATE SYSTEM:     COMPD_CS["NAD83(2011) / Conus Albers + NAVD88
> height",PROJCS["NAD83(2011) / Conus
> Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference
> System 2011)",SPHEROID["GRS
> 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88
> height",VERT_DATUM["North American Vertical Datum
> 1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]]
> variable length header record 4 of 4: *
> ---------
>
> *//What I am also suggesting is that you obtain a point manually (some
> lat/lon and the height) from your dataset, at one of the ground truth
> dataset points, and then take that and do the various conversions
> manually using NGS and other tools, such as//*
>
> Having done this, I see coordinates that more closely align in Elevation
> to our ground Truth (although they still appear to be off by ~2-3 meters,
> not 30)
>
> Output from GEOID18
>
>                                          latitude        longitude       N         error (95% confidence interval)
> Station Name                            ddd mm ss.sssss ddd mm ss.sssss  meters    meters
> USER LOCATION                            37 48 25.00920 237 35 38.63040  -32.486    0.031
>
> Our "Ground Truth" in this area shows an Elevation at -29.17m.
>
>
>
> On 7/12/22 16:35, Greg Troxel wrote:
>
>
> Nicholas Stanley <nicholas.stanley at luminartech.com> <nicholas.stanley at luminartech.com> writes:
>
>
> Our "ground truth" is using WGS84 Ellipsoidal Height. The survey was
> created in ~2017, but unfortunately I don't have much additional info
> about the Epoch.
>
>
> One would assume that the coordinate epoch is the date of the
> observations.
>
> I am very curious about this survey and how it was done.  I do not know
> of any mechanisms to obtain precise coordinates in WGS84 (assuming you
> aren't working within NGA).   If it's uncorrected data I don't see how
> it would be that useful.   If it's RTK or static carrier phase, I don't
> see how it could be in WGS84.
>
>
> Technically, yes, I am in California - is it fair to say this
> complicates things somewhat? The data for conversion is a USGS survey
> of the San Francisco Bay Area.
>
>
> As you know California is unstable :-) Most stations in the US are
> located on the North American plate and their NAD83 velocities are low,
> on the order of a few mm/year.  Parts of CA are on the Pacific plate and
> have much higher velocities.  And, NAD83 has a velocity relative to
> WGS84/ITRF.  So if you are trying to get things right at the 10 cm
> level, you'll have to be careful about this.  NGS has lots of
> information about seismic/plate-motion coordinate changes.  I don't
> really understand the details as I'm in Massachusetts, far from a plate
> boundary.  But, if you are going from NAD83(2011) epoch 2010.0 to ITRF,
> I think the Pacific plate issues won't be that much trouble.
>
>
> Following the logic of your process:
>
> *Step 1: Convert the **/NAD83(2011) / Conus Albers + NAVD88 height
> /**to NAD83 Ellipsoidal using GEOID18 *
>
>
>  E.G.: pdal translate
> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
> --writers.las.a_srs=EPSG:xxxx
>
>
> v2018prvi looks like a grid for the Puerto Rico region.   Is there a
> v2018conus.gtx?  Why are you using the prvi one?
>
> If you run pdalinfo on the .laz file, does it output a CRS, and does
> that CRS match the documented CRS for the LIDAR data?
>
> What I am also suggesting is that you obtain a point manually (some
> lat/lon and the height) from your dataset, at one of the ground truth
> dataset points, and then take that and do the various conversions
> manually using NGS and other tools, such as
>   https://www.ngs.noaa.gov/NCAT/
>   https://www.ngs.noaa.gov/GEOID/GEOID18/
>   https://www.ngs.noaa.gov/GEOID/GEOID18/computation.html
>   https://geographiclib.sourceforge.io/cgi-bin/GeoidEval
>
> (Not sure which EPSG codes to use here - any guess?)
>
>
> I don't think you can assume that there is an EPSG code for a compound
> CRS that's e.g. a combination of a UTM zone and a height.
>
>
> *Step 2. Convert resulting Step 1. file into destination projection
> (WGS84 UTM 10 Ellipsoidal https://epsg.io/32610, or alternatively,https://epsg.io/7789 ITRF 2014)
>
> E.G.: pdal translate
> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
> --writers.las.a_srs=EPSG:xxxx
>
>
> I think you need to define a compound CRS that includes height and avoid
> handling 3D data with a 2D CRS.
>
> I am not really familiar with pdal translate options; your arguments
> look like old-style proj rather than modern proj which lets you query
> for transformations and see them.
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220713/523ebd60/attachment.htm>

From kirk.waters at noaa.gov  Wed Jul 13 05:16:48 2022
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Wed, 13 Jul 2022 08:16:48 -0400
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com>
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
 <rmio7xugg4c.fsf@s1.lexort.com>
 <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com>
 <rmi35f5hplb.fsf@s1.lexort.com>
 <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com>
Message-ID: <CADm=QrS_yrbtGxMc4WuD0URj8reG3raX-tTNs8-YdFV3cq-44w@mail.gmail.com>

Nicholas,
Based on your link to the metadata, it looks like you have at least found a
reference to the data on the NOAA system. That link describes the data as
it exists in the backend of the Data Access Viewer
<https://coast.noaa.gov/dataviewer/#/lidar/search/where:ID=9067> (the link
will zoom to that data set). But, if your original data is in Albers, it
sounds like you picked up the data from USGS. The quick cheat is to use the
Data Access Viewer and request the data in WGS84/ITRF ellipsoid heights for
the area you care about.

I think your primary issue is that the geoid model isn't getting removed.
As mentioned, you have to specify the grid to use in PDAL. The CONUS area
is split into 8 grids as distributed, though it's possible that someone has
combined them. You'll need to make sure you specify the right grid. Looking
at the metadata you linked, I see that we removed GEOID12B, so you need to
make sure that's the grid set you use (not GEOID18). The gird name will
likely look like g2012buX.gtx where X is a number from 1 to 8. The u is
what is indicating that it is CONUS. PDAL may allow you to specify multiple
grids at a time so you don't have to figure out which of the 8 it is. I
suspect it is either grid 1 or 2 for California. I noticed that VDatum also
has a g2012bu0.gtx which appears to be all 8 grids combined, so that would
be an easy pick.

Once your sure you've got the geoid taken care of, I think there are still
some other issues. As was mentioned by others, you need to specify that
you're going to transform to ITRF2008 or ITRF2014 instead of simply WGS84.
That's because PROJ is using a ballpark offset to convert to WGS84 (you can
see that with projinfo -s EPSG:6318 -t EPSG:4326) with an accuracy around 2
meters. I suspect it's using the NAD83(86) to WGS84(Transit), but doesn't
have a way to convert NAD83(2011) to NAD83(86) because the only published
way is a multi-grid hop. Something like
NAD83(2011)->NAD83(2007)->NAD83(HARN)->NAD83(86), but I might have missed a
hop in there. However, there are published Helmert transforms from
NAD83(2011) to ITRF(2008) and ITRF(2014). The accuracy of those transforms
will be much better.

One last issue. It can be hard to get the georeferencing right for
ellipsoid heights. There is no vertical code in EPSG for it. There isn't,
AFAIK, either a convenient compound CRS EPSG code or a combination of
horizontal and vertical codes to give for what you want as your output. You
can get to geographic coordinates and ellipsoid heights using the 3D codes
(e.g. for ITRF2014 it's EPSG:7912), but not projected coordinates. You may
need to specify your transform in pdal to go to 7912 and then transform to
UTM while avoiding a vertical transformation. The file georeferencing on
your output may be missing the vertical, though I haven't tried it.

Kirk Waters, PhD
NOAA Office for Coastal Management
Applied Sciences Program
?Phone: 843-284-6962? (New as of 2022)
coast.noaa.gov/digitalcoast

Thunder is good, thunder is impressive; but it is lightning that does the
work - Mark Twain




On Wed, Jul 13, 2022 at 1:33 AM Nicholas Stanley <
nicholas.stanley at luminartech.com> wrote:

>
>
>
>
>
>
> * For the fun of it, here's a link to the Ground Truth and Data to be
> reprojected in alignment to it. If Someone thinks they can crack this,
> please give it a shot!
> https://drive.google.com/drive/folders/1KdUc1xnOtNl0RkWfr1-C_gh7jzU7q9U1?usp=sharing
> <https://drive.google.com/drive/folders/1KdUc1xnOtNl0RkWfr1-C_gh7jzU7q9U1?usp=sharing>
> *
>
> *The Source Materials (to be corrected) are described here:*
> https://www.fisheries.noaa.gov/inport/item/59131
>
>
> Coordinate Reference System
> CRS Type:    Geographic 3D
> *EPSG Code:    EPSG:6319*
> EPSG Name:    NAD83(2011)
> Datum Name:    NAD83 (National Spatial Reference System 2011)
> Ellipsoid:    GRS 1980
> Semimajor Axis:    6378137.0
> Flattening Ratio:    298.257222101
> *"ldrgeoid" : "GEOID 12B",*
>
> *That said, when i run pdal info on the file, i see the following:*
>
> "file_size": 10024109,
>   "filename": "USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz",
>   "now": "2022-07-12T21:37:52-0700",
>   "pdal_version": "2.2.0 (git-version: Release)",
>   "reader": "readers.las",
>   "stats":
>   {
>     "bbox":
>     {
>     *  "EPSG:4326":*
>       {
>         "bbox":
>         {
>           "maxx": -122.4022284,
>           "maxy": 37.81572701,
>           "maxz": 99.83,
>           "minx": -122.4164013,
>           "miny": 37.80469945,
>           "minz": -70.28
>         },
>         "boundary": { "type": "Polygon", "coordinates": [ [ [
> -122.413254958928221, 37.804699453399095, -70.28 ], [ -122.416401346373235,
> 37.813279215545926, -70.28 ], [ -122.405373596515062, 37.815727007213006,
> 99.83 ], [ -122.402228384472423, 37.807146965417473, 99.83 ], [
> -122.413254958928221, 37.804699453399095, -70.28 ] ] ] }
>       },
>       "native":
>       {
>         "bbox":
>         {
>           "maxx": -2273000,
>           "maxy": 1959999.99,
>           "maxz": 99.83,
>           "minx": -2273999.99,
>           "miny": 1959000,
>           "minz": -70.28
>         },
>         "boundary": { "type": "Polygon", "coordinates": [ [ [
> -2273999.990000000223517, 1959000.0, -70.28 ], [ -2273999.990000000223517,
> 1959999.99, -70.28 ], [ -2273000.0, 1959999.99, 99.83 ], [ -2273000.0,
> 1959000.0, 99.83 ], [ -2273999.990000000223517, 1959000.0, -70.28 ] ] ] }
>       }
>     },
>
>
>
>
> *EPSG 4326 is a WGS84 code, but this is merely defining the bounding box
> container it seems. *
>
>
>
>
>
>
> *Lasinfo shows:   description          'OGC Transformation Record'     WKT
> OGC COORDINATE SYSTEM:     COMPD_CS["NAD83(2011) / Conus Albers + NAVD88
> height",PROJCS["NAD83(2011) / Conus
> Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference
> System 2011)",SPHEROID["GRS
> 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88
> height",VERT_DATUM["North American Vertical Datum
> 1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]]
> variable length header record 4 of 4: *
> ---------
>
> *//What I am also suggesting is that you obtain a point manually (some
> lat/lon and the height) from your dataset, at one of the ground truth
> dataset points, and then take that and do the various conversions
> manually using NGS and other tools, such as//*
>
> Having done this, I see coordinates that more closely align in Elevation
> to our ground Truth (although they still appear to be off by ~2-3 meters,
> not 30)
>
> Output from GEOID18
>
>                                          latitude        longitude       N         error (95% confidence interval)
> Station Name                            ddd mm ss.sssss ddd mm ss.sssss  meters    meters
> USER LOCATION                            37 48 25.00920 237 35 38.63040  -32.486    0.031
>
> Our "Ground Truth" in this area shows an Elevation at -29.17m.
>
>
>
> On 7/12/22 16:35, Greg Troxel wrote:
>
> Nicholas Stanley <nicholas.stanley at luminartech.com> <nicholas.stanley at luminartech.com> writes:
>
>
> Our "ground truth" is using WGS84 Ellipsoidal Height. The survey was
> created in ~2017, but unfortunately I don't have much additional info
> about the Epoch.
>
> One would assume that the coordinate epoch is the date of the
> observations.
>
> I am very curious about this survey and how it was done.  I do not know
> of any mechanisms to obtain precise coordinates in WGS84 (assuming you
> aren't working within NGA).   If it's uncorrected data I don't see how
> it would be that useful.   If it's RTK or static carrier phase, I don't
> see how it could be in WGS84.
>
>
> Technically, yes, I am in California - is it fair to say this
> complicates things somewhat? The data for conversion is a USGS survey
> of the San Francisco Bay Area.
>
> As you know California is unstable :-) Most stations in the US are
> located on the North American plate and their NAD83 velocities are low,
> on the order of a few mm/year.  Parts of CA are on the Pacific plate and
> have much higher velocities.  And, NAD83 has a velocity relative to
> WGS84/ITRF.  So if you are trying to get things right at the 10 cm
> level, you'll have to be careful about this.  NGS has lots of
> information about seismic/plate-motion coordinate changes.  I don't
> really understand the details as I'm in Massachusetts, far from a plate
> boundary.  But, if you are going from NAD83(2011) epoch 2010.0 to ITRF,
> I think the Pacific plate issues won't be that much trouble.
>
>
> Following the logic of your process:
>
> *Step 1: Convert the **/NAD83(2011) / Conus Albers + NAVD88 height
> /**to NAD83 Ellipsoidal using GEOID18 *
>
>
> E.G.: pdal translate
> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
> --writers.las.a_srs=EPSG:xxxx
>
> v2018prvi looks like a grid for the Puerto Rico region.   Is there a
> v2018conus.gtx?  Why are you using the prvi one?
>
> If you run pdalinfo on the .laz file, does it output a CRS, and does
> that CRS match the documented CRS for the LIDAR data?
>
> What I am also suggesting is that you obtain a point manually (some
> lat/lon and the height) from your dataset, at one of the ground truth
> dataset points, and then take that and do the various conversions
> manually using NGS and other tools, such as
>   https://www.ngs.noaa.gov/NCAT/
>   https://www.ngs.noaa.gov/GEOID/GEOID18/
>   https://www.ngs.noaa.gov/GEOID/GEOID18/computation.html
>   https://geographiclib.sourceforge.io/cgi-bin/GeoidEval
>
> (Not sure which EPSG codes to use here - any guess?)
>
> I don't think you can assume that there is an EPSG code for a compound
> CRS that's e.g. a combination of a UTM zone and a height.
>
>
> *Step 2. Convert resulting Step 1. file into destination projection
> (WGS84 UTM 10 Ellipsoidal https://epsg.io/32610, or alternatively,https://epsg.io/7789 ITRF 2014)
>
> E.G.: pdal translate
> USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz Step1_NAD83.laz
> reprojection --filters.reprojection.out_srs="+init=EPSG:xxxx
> +geoidgrids=~/Downloads/vdatum/core/geoid18/v2018prvi.gtx"
> --writers.las.a_srs=EPSG:xxxx
>
> I think you need to define a compound CRS that includes height and avoid
> handling 3D data with a 2D CRS.
>
> I am not really familiar with pdal translate options; your arguments
> look like old-style proj rather than modern proj which lets you query
> for transformations and see them.
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220713/2042dc4f/attachment-0001.htm>

From gdt at lexort.com  Wed Jul 13 05:38:01 2022
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 13 Jul 2022 08:38:01 -0400
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com> (Nicholas
 Stanley's message of "Tue, 12 Jul 2022 22:32:59 -0700")
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
 <rmio7xugg4c.fsf@s1.lexort.com>
 <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com>
 <rmi35f5hplb.fsf@s1.lexort.com>
 <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com>
Message-ID: <rmio7xtdw7q.fsf@s1.lexort.com>


Nicholas Stanley <nicholas.stanley at luminartech.com> writes:

> *The Source Materials (to be corrected) are described here:*
> https://www.fisheries.noaa.gov/inport/item/59131

Two interesting things:

  - It says vertical is NAVD88, but it also says GEOID12B.  That's a
    clue that they did their control in NAD83 lat/lon/HAE and then
    transformed to NAVD88 via GEOID12B (as one would expect given the
    publication date of the dataset).  So if you are trying to transform
    back to HAE, you should use GEOID12B rather than GEOID18.  But I
    suspect the differences between 12/18 are mostly less than 10cm, and
    they certainly won't be 2m.

  - They did ground control to reference the data, and then check
    points.  Their data quality statement claims RMS vertical errors
    better than 10 cm.

As a data point, the Massachusetts state GIS (MassGIS) has orthoimagery
(captured in conjunction with USGS), and has a similar control statement
about check points and RMS horizontal errors.  My own observations are
consistent with the published accuracy statement.  So I think it's very
likely this data set meets the quality standards it claims to.

It sounds like you have some additional data points of lat/lon/HAE or
lat/lon/orthometric-height, collected somehow, that you are calling
"ground truth", and you are trying to compare to verify the LIDAR
imagery.  You haven't explained what the collection methodology was, and
you haven't answered my question about how it can be both accurate and
in "WGS84".

> Coordinate Reference System
> CRS Type:??? Geographic 3D
> *EPSG Code:??? EPSG:6319*
> EPSG Name:??? NAD83(2011)
> Datum Name:??? NAD83 (National Spatial Reference System 2011)
> Ellipsoid:??? GRS 1980
> Semimajor Axis:??? 6378137.0
> Flattening Ratio:??? 298.257222101
> *"ldrgeoid" : "GEOID 12B",*

So that says 6319 which implies HAE and then gives a GEOID, which means
it isn't really 6319 but really EPSG:6349.  And it's projected, which
means the horizontal is EPSG:6350.  I am unable to find an EPSG code for
6350+NAVD88.

Somehow, you have to ensure that pdal uses the right CRS, and that may
involve defining your own compound CRS and specifying it. 

> *That said, when i run pdal info on the file, i see the following:*
>
> "file_size": 10024109,
> ? "filename": "USGS_LPC_CA_NoCAL_Wildfires_B5b_2018_w2274n1959.laz",
> ? "now": "2022-07-12T21:37:52-0700",
> ? "pdal_version": "2.2.0 (git-version: Release)",
> ? "reader": "readers.las",
> ? "stats":
> ? {
> ??? "bbox":
> ??? },

bbox elided, but there is no CRS for the file shown.  I don't know why,
and where the problem is.  (I acknowledge the comment about bbox being
in WGS84 and native both, and wonder if that's in the file or from
pdalinfo.)

> *Lasinfo shows:
>
> ? description????????? 'OGC Transformation Record'
> ??? WKT OGC COORDINATE SYSTEM:
> ??? COMPD_CS["NAD83(2011) / Conus Albers + NAVD88
> height",PROJCS["NAD83(2011) / Conus
> Albers",GEOGCS["NAD83(2011)",DATUM["NAD83 (National Spatial Reference
> System 2011)",SPHEROID["GRS
> 1980",6378137,298.257222101,AUTHORITY["EPSG","7019"]],AUTHORITY["EPSG","1116"]],PRIMEM["Greenwich",0,AUTHORITY["EPSG","8901"]],UNIT["degree",0.0174532925199433,AUTHORITY["EPSG","9122"]],AUTHORITY["EPSG","6318"]],PROJECTION["Albers_Conic_Equal_Area"],PARAMETER["standard_parallel_1",29.5],PARAMETER["standard_parallel_2",45.5],PARAMETER["latitude_of_center",23],PARAMETER["longitude_of_center",-96],PARAMETER["false_easting",0],PARAMETER["false_northing",0],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["X",EAST],AXIS["Y",NORTH],AUTHORITY["EPSG","6350"]],VERT_CS["NAVD88
> height",VERT_DATUM["North American Vertical Datum
> 1988",2005,AUTHORITY["EPSG","5103"]],UNIT["meter",1,AUTHORITY["EPSG","9001"]],AXIS["Up",UP],AUTHORITY["EPSG","5703"]]]

Well, that is the compound CRS I was talking about!
It looks like pdalinfo isn't printing the CRS.

> ///What I am also suggesting is that you obtain a point manually (some
> lat/lon and the height) from your dataset, at one of the ground truth
> dataset points, and then take that and do the various conversions
> manually using NGS and other tools, such as///
>
> //
>
> Having done this, I see coordinates that more closely align in
> Elevation to our ground Truth (although they still appear to be off by
> ~2-3 
> meters, not 30)
>
>    Output from GEOID18
>
>                                          latitude        longitude       N         error (95% confidence interval)
> Station Name                            ddd mm ss.sssss ddd mm ss.sssss  meters    meters
> USER LOCATION                            37 48 25.00920 237 35 38.63040  -32.486    0.031

That output is in NAD83(2011) epoch 2010.0 lat/lon/HAE.

> Our "Ground Truth" in this area shows an Elevation at -29.17m.

But you said that your "Ground Truth" is in WGS84.  WGS84 HAE and NAD83
HAE are different, and you didn't transform from one to the other.  3m
seems high for a delta there, but 2m wouldn't surprise me.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220713/54bb2e3f/attachment.sig>

From gdt at lexort.com  Wed Jul 13 05:58:42 2022
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 13 Jul 2022 08:58:42 -0400
Subject: [pdal] Regarding Reprojection Between Vertical Datums
In-Reply-To: <CADm=QrS_yrbtGxMc4WuD0URj8reG3raX-tTNs8-YdFV3cq-44w@mail.gmail.com>
 (Kirk Waters's message of "Wed, 13 Jul 2022 08:16:48 -0400")
References: <0aff6851-bfa5-a44a-916a-5364d0f2d6c2@luminartech.com>
 <5edd3470-3ceb-dbb9-eea7-9ad50bd74306@luminartech.com>
 <58fcd96b-800b-9f6b-4d55-760190dd4b51@gmail.com>
 <daf7c277-bb2c-a4ea-3af3-30f0a31e1aa1@luminartech.com>
 <rmio7xugg4c.fsf@s1.lexort.com>
 <db9921c7-d56f-046a-0ad6-c621164aa29c@luminartech.com>
 <rmi35f5hplb.fsf@s1.lexort.com>
 <09080274-c2f0-364c-02d2-6805b1806fee@luminartech.com>
 <CADm=QrS_yrbtGxMc4WuD0URj8reG3raX-tTNs8-YdFV3cq-44w@mail.gmail.com>
Message-ID: <rmik08hdv99.fsf@s1.lexort.com>


Kirk Waters - NOAA Federal <kirk.waters at noaa.gov> writes:

> That's because PROJ is using a ballpark offset to convert to WGS84 (you can
> see that with projinfo -s EPSG:6318 -t EPSG:4326) with an accuracy around 2
> meters. I suspect it's using the NAD83(86) to WGS84(Transit), but doesn't
> have a way to convert NAD83(2011) to NAD83(86) because the only published
> way is a multi-grid hop. Something like
> NAD83(2011)->NAD83(2007)->NAD83(HARN)->NAD83(86), but I might have missed a
> hop in there. However, there are published Helmert transforms from
> NAD83(2011) to ITRF(2008) and ITRF(2014). The accuracy of those transforms
> will be much better.

proj is using a nop to convert NAD83->WGS84, on the theory that the
WGS84 ensemble has an intrinsic accuracy limit of ~2m.  That amounts to
a null transform from NAD83(2011) to NAD83(1986) (which isn't
unreasonable), a null transform from NAD83(1986) to WGS84(Transit)
(arguably correct) and then representing the answer as "WGS84", which is
not ok because people expect that to be "non-ancient WGS84".  (Except,
NAD83(19860 is a 2D CRS, so you can't really use it as a steppingstone
to getting WGS84 LLh from 6319.)

Or it amounts to "because the intrinsic accuracy of WGS84 is 2m, it's ok
to just use a null transform if that's known to have an error on the
order of 2m".

Which really means: if you care about < 2m, you cannot use "WGS84" as a
CRS.

Not really on topic here, but I think ensemble transforms should be done
by assuming that data in each ensemble is in the most recent ensemble
member.  Thus "NAD83->WGS84" would be done by "assume 6319, and convert
to WGS84(G2159) (which is ITRF2014)".  Transforming to NAD83(2011), then
to ITRF2014 and finally to WGS84 achieves this with the current
software, using the better transforms that you reference.

(Kirk: I know you understand all of this), but for Nicholas and others:
the basic problem is that WGS84(Transit) is quite different from later
WGS84 realizations.  NAD83 (and ~everyone else at the time) misestimated
the center of mass of the earth by roughly 2m.  Later realizations of
WGS84 have used better estimates of the center of mass, and thus more
recent WGS84 is basically the same as more recent ITRF.  But later NAD83
is, more or less, aligned with earlier NAD83.  With modern sub-meter
accuracy, NAD83 and modern WGS84 cannot be treated as equal.

Greg


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220713/2e8a7158/attachment.sig>

From Karl.Keller at kci.com  Tue Jul 19 07:47:28 2022
From: Karl.Keller at kci.com (Karl Keller)
Date: Tue, 19 Jul 2022 14:47:28 +0000
Subject: [pdal] Hello Intro
Message-ID: <SJ1PR12MB6026C165AB6DAECC0B9A95EEF78F9@SJ1PR12MB6026.namprd12.prod.outlook.com>

Hello PDAL community members.  Not sure how to get started so I'll tell you about my interest in PDAL.

I'm using PDAL with the aim of building pipelines for various LIDAR processing workflows.  As a first step, I've been trying to use ICP registration without a lot of luck.  I've spent time following PJHartzell's work on this to try and get a leg up.  If anyone has guidance in fast ways to automatically register relatively dense clouds in the 20M point range, I would be grateful.  Right now, I use sampling before registration to get a transform (quickly) and apply it to the full cloud.  Unfortunately, I'm not achieving < 300 mm accuracy and have yet to get convergence.

Looking forward to interacting with this group.


  *   Karl

Karl S Keller
Senior Systems Engineer

[cid:image001.png at 01D89B5B.4192D260]

KCI TECHNOLOGIES INC.
936 Ridgebrook Road | Sparks, MD | 21152
Karl.Keller at kci.com<mailto:Karl.Keller at kci.com>
m: 540-827-7786
www.kci.com<http://www.kci.com/>

[cid:image002.jpg at 01D89B5B.4192D260]

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220719/766c6cc9/attachment.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 2100 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220719/766c6cc9/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.jpg
Type: image/jpeg
Size: 2025 bytes
Desc: image002.jpg
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220719/766c6cc9/attachment.jpg>

From andrew.bell.ia at gmail.com  Wed Jul 20 05:22:14 2022
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 20 Jul 2022 08:22:14 -0400
Subject: [pdal] Hello Intro
In-Reply-To: <SJ1PR12MB6026C165AB6DAECC0B9A95EEF78F9@SJ1PR12MB6026.namprd12.prod.outlook.com>
References: <SJ1PR12MB6026C165AB6DAECC0B9A95EEF78F9@SJ1PR12MB6026.namprd12.prod.outlook.com>
Message-ID: <CACJ51z1caa5kZSHjw_hC+JrzskEgnEaoEWNNcw7zHGHUfth6Pg@mail.gmail.com>

ICP for 20M points is likely to take a really, really long time. You will
probably have to do something else. You're only getting out a single
transformation anyway. Perhaps you should look at the various methods
provided by Open3D:

http://www.open3d.org/docs/release/tutorial/pipelines/index.html

On Tue, Jul 19, 2022 at 10:54 AM Karl Keller <Karl.Keller at kci.com> wrote:

> Hello PDAL community members.  Not sure how to get started so I?ll tell
> you about my interest in PDAL.
>
>
>
> I?m using PDAL with the aim of building pipelines for various LIDAR
> processing workflows.  As a first step, I?ve been trying to use ICP
> registration without a lot of luck.  I?ve spent time following PJHartzell?s
> work on this to try and get a leg up.  If anyone has guidance in fast ways
> to automatically register relatively dense clouds in the 20M point range, I
> would be grateful.  Right now, I use sampling before registration to get a
> transform (quickly) and apply it to the full cloud.  Unfortunately, I?m not
> achieving < 300 mm accuracy and have yet to get convergence.
>
>
>
> Looking forward to interacting with this group.
>
>
>
>    - Karl
>
>
>
> *Karl S Keller*
>
> *Senior Systems Engineer*
>
>
>
>
>
>
>
> *KCI TECHNOLOGIES INC. *
>
> 936 Ridgebrook Road | Sparks, MD | 21152
>
> Karl.Keller at kci.com
>
> m: 540-827-7786
>
> www.kci.com
>
>
>
>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>


-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220720/6284c84b/attachment.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 2100 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220720/6284c84b/attachment.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.jpg
Type: image/jpeg
Size: 2025 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220720/6284c84b/attachment.jpg>

From howard at hobu.co  Wed Jul 20 05:23:09 2022
From: howard at hobu.co (Howard Butler)
Date: Wed, 20 Jul 2022 07:23:09 -0500
Subject: [pdal] Bad allocation error
In-Reply-To: <2B06B387-B331-4080-A0CF-A89933792C64@hobu.co>
References: <0a3412b528ff43e49256038778665cb7@zi-mannheim.de>
 <2B06B387-B331-4080-A0CF-A89933792C64@hobu.co>
Message-ID: <CA52CD7C-3144-4936-A17E-99EE5FBF29C4@hobu.co>



> On Jun 29, 2022, at 2:39 PM, Howard Butler <howard at hobu.co> wrote:
> 
> 
> 
>> On Jun 22, 2022, at 6:50 AM, Krasovec, Nina <Nina.Krasovec at zi-mannheim.de> wrote:
>> 
>> Hello everyone,
>> 
>> I would like to assign a value from polygons (stored in a column ?class?) to a Classification attribute in a point cloud. Both, point cloud and geopackage are split into tiles, which means that the point clouds usually contain ~15 million points and geopackages contain ~35,000 polygons or less. I tried to process multiple point clouds and one of them worked, while the other ones always throw an error ?PDAL: bad allocation?. All the files have approximately the same size and I also tested it with a lot smaller area and smaller gpkg and it still did not work. The only thing that worked was splitting geopackages to very small files. The LAZ file that was successfully processed used around 15 GB of RAM, while the other files went up to 256 GB and it still wasn?t sufficient. Do you have a suggestion what could be the reason for such an enormous use of memory?
>> Here is an example of a pipeline:
>> 
>> [
>>      {
>>            "type":"readers.las",
>>            "use_eb_vlr":"true",
>>            "filename":"D:/User/Nina/460000_5477000.laz"
>>      },
>>    {
>>        "type":"filters.overlay",
>>        "dimension":"Classification",
>>        "datasource":" D:/User/Nina/460000_5477000.gpkg",
>>            "column": "class",
>>            "where": "Classification == 8"
>>    },
>>      {
>>        "type":"writers.las",
>>            "compression": "true",
>>            "a_srs": "EPSG:25832",
>>            "extra_dims":"all",
>>        "filename":" D:/User/Nina/460000_5477000.laz"
>>    }
>> ]
>> 
> 
> Nina,
> 
> I don't know the specifics of your scenario, but I should think you will want to break your processing up into something more specific. Make a loop that iterates each geometry in the geopackage and runs a pipeline for each that produces your classified las file and then merge them altogether at the end.
> 
> 1) Convert your data to COPC.io format using writers.copc. 
> 2) Read each geometry in the geopackage and get its bounds
> 3) Write a pipeline (or use the Python bindings) to set the 'bounds' object of readers.copc to it
> 4) Permute the writers.las.filename to correspond to your feature id
> 5) Merge all of the files together once complete.
> 
> This model means that you should only read the points that matter for each polygon you are selecting. It should also parallelize conveniently using whatever batching approach you desire (I see you are on windows so that might be some powershell magic, IDK). 
> 
> It would just be speculation to explain why things are going haywire without your data and a test scenario.
> 
> Howard   
> 

Nina provided me some example data and the issue is her GeoPackage has 33k polygons in it. The way PDAL's polygon/overlay code works is to test every one of these polygons and edges. There is no index that pre-filters the query.

Luckily, OGR can do this for us, but that capability wasn't exposed to PDAL. I have since added a 'bounds' option to filters.overlay to allow the user to use OGR to pre-filter the polygons. This will be generally available when PDAL 2.5.0 is released.

Howard

https://github.com/PDAL/PDAL/pull/3815


From howard at hobu.co  Wed Jul 20 07:19:28 2022
From: howard at hobu.co (Howard Butler)
Date: Wed, 20 Jul 2022 09:19:28 -0500
Subject: [pdal] Hello Intro
In-Reply-To: <CACJ51z1caa5kZSHjw_hC+JrzskEgnEaoEWNNcw7zHGHUfth6Pg@mail.gmail.com>
References: <SJ1PR12MB6026C165AB6DAECC0B9A95EEF78F9@SJ1PR12MB6026.namprd12.prod.outlook.com>
 <CACJ51z1caa5kZSHjw_hC+JrzskEgnEaoEWNNcw7zHGHUfth6Pg@mail.gmail.com>
Message-ID: <3CD47CD7-D08E-46E3-B298-F48D1374E9DF@hobu.co>

Karl,

You also don't probably need full density data to compute the transforms. A common approach to this is to divide and conquer by running ICP over smaller patches. Both EPT and COPC would allow you to have a data source that is amenable to controlling how to process across all of the data.

As always, parallelization is not PDAL's prerogative. Running PDAL filters with computational complexities that vary widely based on their settings is tough. PDAL doesn't know your data and cant do that adaptation in parallel. 

Howard

> On Jul 20, 2022, at 7:22 AM, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
> 
> ICP for 20M points is likely to take a really, really long time. You will probably have to do something else. You're only getting out a single transformation anyway. Perhaps you should look at the various methods provided by Open3D:
> 
> http://www.open3d.org/docs/release/tutorial/pipelines/index.html
> 
> On Tue, Jul 19, 2022 at 10:54 AM Karl Keller <Karl.Keller at kci.com> wrote:
> Hello PDAL community members.  Not sure how to get started so I?ll tell you about my interest in PDAL.
> 
>  
> 
> I?m using PDAL with the aim of building pipelines for various LIDAR processing workflows.  As a first step, I?ve been trying to use ICP registration without a lot of luck.  I?ve spent time following PJHartzell?s work on this to try and get a leg up.  If anyone has guidance in fast ways to automatically register relatively dense clouds in the 20M point range, I would be grateful.  Right now, I use sampling before registration to get a transform (quickly) and apply it to the full cloud.  Unfortunately, I?m not achieving < 300 mm accuracy and have yet to get convergence.
> 
>  
> 
> Looking forward to interacting with this group.
> 
>  
> 
> 	? Karl
>  
> 
> Karl S Keller
> 
> Senior Systems Engineer
> 
>  
> 
> <image001.png> 
> 
>  
> 
> KCI TECHNOLOGIES INC.
> 
> 936 Ridgebrook Road | Sparks, MD | 21152
> 
> Karl.Keller at kci.com
> 
> m: 540-827-7786
> 
> www.kci.com
> 
>  
> 
> <image002.jpg>
> 
>  
> 
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
> 
> 
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal


From Karl.Keller at kci.com  Wed Jul 20 09:51:22 2022
From: Karl.Keller at kci.com (Karl Keller)
Date: Wed, 20 Jul 2022 16:51:22 +0000
Subject: [pdal] Hello Intro
In-Reply-To: <CACJ51z1caa5kZSHjw_hC+JrzskEgnEaoEWNNcw7zHGHUfth6Pg@mail.gmail.com>
References: <SJ1PR12MB6026C165AB6DAECC0B9A95EEF78F9@SJ1PR12MB6026.namprd12.prod.outlook.com>
 <CACJ51z1caa5kZSHjw_hC+JrzskEgnEaoEWNNcw7zHGHUfth6Pg@mail.gmail.com>
Message-ID: <SJ1PR12MB602665ED1022DBA68CCBEB17F78E9@SJ1PR12MB6026.namprd12.prod.outlook.com>

Thanks Andrew ? looks like registration is their specialty.  Thanks for the hint.

From: Andrew Bell <andrew.bell.ia at gmail.com>
Sent: Wednesday, July 20, 2022 8:22 AM
To: Karl Keller <Karl.Keller at kci.com>
Cc: pdal at lists.osgeo.org
Subject: Re: [pdal] Hello Intro

ICP for 20M points is likely to take a really, really long time. You will probably have to do something else. You're only getting out a single transformation anyway. Perhaps you should look at the various methods provided by Open3D:

http://www.open3d.org/docs/release/tutorial/pipelines/index.html<http://www.open3d.org/docs/release/tutorial/pipelines/index.html>

On Tue, Jul 19, 2022 at 10:54 AM Karl Keller <Karl.Keller at kci.com<mailto:Karl.Keller at kci.com>> wrote:
Hello PDAL community members.  Not sure how to get started so I?ll tell you about my interest in PDAL.

I?m using PDAL with the aim of building pipelines for various LIDAR processing workflows.  As a first step, I?ve been trying to use ICP registration without a lot of luck.  I?ve spent time following PJHartzell?s work on this to try and get a leg up.  If anyone has guidance in fast ways to automatically register relatively dense clouds in the 20M point range, I would be grateful.  Right now, I use sampling before registration to get a transform (quickly) and apply it to the full cloud.  Unfortunately, I?m not achieving < 300 mm accuracy and have yet to get convergence.

Looking forward to interacting with this group.


  *   Karl

Karl S Keller
Senior Systems Engineer

[cid:image001.png at 01D89C35.B2988790]

KCI TECHNOLOGIES INC.
936 Ridgebrook Road | Sparks, MD | 21152
Karl.Keller at kci.com<mailto:Karl.Keller at kci.com>
m: 540-827-7786
www.kci.com<http://www.kci.com>

[cid:image002.jpg at 01D89C35.B2988790]

_______________________________________________
pdal mailing list
pdal at lists.osgeo.org<mailto:pdal at lists.osgeo.org>
https://lists.osgeo.org/mailman/listinfo/pdal<https://lists.osgeo.org/mailman/listinfo/pdal>


--
Andrew Bell
andrew.bell.ia at gmail.com<mailto:andrew.bell.ia at gmail.com>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220720/07a79acd/attachment-0001.htm>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image001.png
Type: image/png
Size: 2100 bytes
Desc: image001.png
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220720/07a79acd/attachment-0001.png>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image002.jpg
Type: image/jpeg
Size: 2025 bytes
Desc: image002.jpg
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20220720/07a79acd/attachment-0001.jpg>

From Karl.Keller at kci.com  Wed Jul 20 10:15:27 2022
From: Karl.Keller at kci.com (Karl Keller)
Date: Wed, 20 Jul 2022 17:15:27 +0000
Subject: [pdal] Hello Intro
In-Reply-To: <3CD47CD7-D08E-46E3-B298-F48D1374E9DF@hobu.co>
References: <SJ1PR12MB6026C165AB6DAECC0B9A95EEF78F9@SJ1PR12MB6026.namprd12.prod.outlook.com>
 <CACJ51z1caa5kZSHjw_hC+JrzskEgnEaoEWNNcw7zHGHUfth6Pg@mail.gmail.com>
 <3CD47CD7-D08E-46E3-B298-F48D1374E9DF@hobu.co>
Message-ID: <SJ1PR12MB6026742E829F29B60AF55227F78E9@SJ1PR12MB6026.namprd12.prod.outlook.com>

I came across the point reduction approach on the Matlab site initially, saw it a couple of other places, and put other elements of PDAL to good use slicing and dicing my source and target scan worlds.  It's certainly fast enough - we typically have 50-100 scan worlds to align and those registrations were very fast.  So, hope was in full bloom!  I was planning on getting the transformation from the first, low density registration and then apply it to create a transformed dense target, use that transformed dense scan as source for the next registration, etc.  The transformations surprised me.  In the metadata I was getting a lot of non-converged registrations that were close but not close enough - fitness of ~.5.  Also, the transformations had multiple x,y,z components in the transformation attribute of the meta file.  I made the assumption this was the non-converged aspect of the solution, played around with it a bit to transform the dense clouds but all were bad alignments.  Anyway, I'm willing to admit that perhaps 50% of this is user error and the other 50% wrong expectations.

The vision was to have the daisy-chained registrations feeding into pipelines for producing a joined mesh, using EPT/Potree to visualize, and then get on with the analysis tasks on the merged cloud.  Parallelism seemed like a non-starter in this although I did consider doing a task breakdown with autoscaling similar to the ODM/OpenSFM approach.  For instance, register individual rows of scans in parallel, then join up the head and tail scans. But truthfully, if the whole thing took 7 hrs and was unaided - that would have been a big win.

-----Original Message-----
From: Howard Butler <howard at hobu.co> 
Sent: Wednesday, July 20, 2022 10:19 AM
To: pdal at lists.osgeo.org
Cc: Karl Keller <Karl.Keller at kci.com>
Subject: Re: [pdal] Hello Intro

Karl,

You also don't probably need full density data to compute the transforms. A common approach to this is to divide and conquer by running ICP over smaller patches. Both EPT and COPC would allow you to have a data source that is amenable to controlling how to process across all of the data.

As always, parallelization is not PDAL's prerogative. Running PDAL filters with computational complexities that vary widely based on their settings is tough. PDAL doesn't know your data and cant do that adaptation in parallel. 

Howard

> On Jul 20, 2022, at 7:22 AM, Andrew Bell <andrew.bell.ia at gmail.com> wrote:
> 
> ICP for 20M points is likely to take a really, really long time. You will probably have to do something else. You're only getting out a single transformation anyway. Perhaps you should look at the various methods provided by Open3D:
> 
> http://www.open3d.org/docs/release/tutorial/pipelines/index.html
> 
> On Tue, Jul 19, 2022 at 10:54 AM Karl Keller <Karl.Keller at kci.com> wrote:
> Hello PDAL community members.  Not sure how to get started so I?ll tell you about my interest in PDAL.
> 
>  
> 
> I?m using PDAL with the aim of building pipelines for various LIDAR processing workflows.  As a first step, I?ve been trying to use ICP registration without a lot of luck.  I?ve spent time following PJHartzell?s work on this to try and get a leg up.  If anyone has guidance in fast ways to automatically register relatively dense clouds in the 20M point range, I would be grateful.  Right now, I use sampling before registration to get a transform (quickly) and apply it to the full cloud.  Unfortunately, I?m not achieving < 300 mm accuracy and have yet to get convergence.
> 
>  
> 
> Looking forward to interacting with this group.
> 
>  
> 
> 	? Karl
>  
> 
> Karl S Keller
> 
> Senior Systems Engineer
> 
>  
> 
> <image001.png> 
> 
>  
> 
> KCI TECHNOLOGIES INC.
> 
> 936 Ridgebrook Road | Sparks, MD | 21152
> 
> Karl.Keller at kci.com
> 
> m: 540-827-7786
> 
> http://www.kci.com
> 
>  
> 
> <image002.jpg>
> 
>  
> 
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
> 
> 
> -- 
> Andrew Bell
> andrew.bell.ia at gmail.com
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal


From howard at hobu.co  Fri Jul 22 05:49:09 2022
From: howard at hobu.co (Howard Butler)
Date: Fri, 22 Jul 2022 07:49:09 -0500
Subject: [pdal] PDAL Website Migrating to ReadTheDocs
Message-ID: <11FD326A-643D-42B3-91D1-A75DD3588218@hobu.co>

Thanks to Ogi Moore, PDAL will be migrating its homespun documentation infrastructure to ReadTheDocs after the PDAL 2.4.3 release, which is expected before the end of the month. 

You can see a preview of it at https://pdal.dev/ 

One useful feature of the migration is PDAL will now have multi-version docs. Another will be faster documentation builds that are rendered into PR checks with each commit. If you see any significant issues with the new site, please file a ticket.

Howard

