From andrewmcunliffe at gmail.com  Fri Nov  8 08:19:11 2019
From: andrewmcunliffe at gmail.com (Andrew Cunliffe)
Date: Fri, 8 Nov 2019 16:19:11 +0000
Subject: [pdal] Syntax for implementing new filters.hag relative to TIN
Message-ID: <CAM1p0+HXqb6tvUBGFBx42BSamK1+fJBx7KiShyMT8MogcfP1Jg@mail.gmail.com>

Can anyone help with the syntax to calculate HAG (height above ground)
relative to an interpolated surface (following James McClain’s
contribution, #2520 <https://github.com/PDAL/PDAL/pull/2520>)?


I’ve tried:

{

    "type": "filters.hag",

    "delaunay": True

},



But the output HAG is clearly still being computed relative to the nearest
neighbour, rather than an interpolated surface as desired.  I’ve tried
*"delaunay_fan":
True*, and also including *“count”: 4* arguments, and have been looking
through GitHub (which led me to “delauney” rather "delaunay_fan") but still
haven’t succeeded.


What am I missing?


Thanks,

Andy
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20191108/b73dab83/attachment.html>

From andrew.bell.ia at gmail.com  Fri Nov  8 10:51:30 2019
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Fri, 8 Nov 2019 13:51:30 -0500
Subject: [pdal] Syntax for implementing new filters.hag relative to TIN
In-Reply-To: <CAM1p0+HXqb6tvUBGFBx42BSamK1+fJBx7KiShyMT8MogcfP1Jg@mail.gmail.com>
References: <CAM1p0+HXqb6tvUBGFBx42BSamK1+fJBx7KiShyMT8MogcfP1Jg@mail.gmail.com>
Message-ID: <CACJ51z3gkWTdDROrs-XuFzj9CdkKpwiVp=o8ZPBYau3m1izwLg@mail.gmail.com>

On Fri, Nov 8, 2019 at 11:18 AM Andrew Cunliffe <andrewmcunliffe at gmail.com>
wrote:

> Can anyone help with the syntax to calculate HAG (height above ground)
> relative to an interpolated surface (following James McClain’s
> contribution, #2520 <https://github.com/PDAL/PDAL/pull/2520>)?
>
>
> I’ve tried:
>
> {
>
>     "type": "filters.hag",
>
>     "delaunay": True
>
> },
>
>
>
> But the output HAG is clearly still being computed relative to the nearest
> neighbour, rather than an interpolated surface as desired.  I’ve tried *"delaunay_fan":
> True*, and also including *“count”: 4* arguments, and have been looking
> through GitHub (which led me to “delauney” rather "delaunay_fan") but still
> haven’t succeeded.
>

The option is "delaunay", as you've specified, though the constant 'true'
must be specified in lowercase to be valid JSON.

> What am I missing?
>
Looking at the code, it appears that you also need to set "count" to some
reasonable value in order to get this interpolation method to work.  The
code builds a delaunay triangulation of <count> neighbors and then
interpolates attempts to use that triangulation to determine a Z value for
the point in question.  I'd have to look through the math more closely to
give you better information.  It appears that things haven't been
documented.  I'll take a stab at that before long.

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20191108/a07e2d98/attachment.html>

From andrewmcunliffe at gmail.com  Mon Nov 11 03:12:52 2019
From: andrewmcunliffe at gmail.com (Andrew Cunliffe)
Date: Mon, 11 Nov 2019 11:12:52 +0000
Subject: [pdal] Syntax for implementing new filters.hag relative to TIN
In-Reply-To: <CACJ51z3gkWTdDROrs-XuFzj9CdkKpwiVp=o8ZPBYau3m1izwLg@mail.gmail.com>
References: <CAM1p0+HXqb6tvUBGFBx42BSamK1+fJBx7KiShyMT8MogcfP1Jg@mail.gmail.com>
 <CACJ51z3gkWTdDROrs-XuFzj9CdkKpwiVp=o8ZPBYau3m1izwLg@mail.gmail.com>
Message-ID: <CAM1p0+HFLpSfMK8EZWYFEJqXh651PzEUEao0SXKkFAiWN6yQQg@mail.gmail.com>

Thanks for the help Andrew,

Unfortunately this pipeline {"type": "filters.hag", "count": 4, "delaunay":
'true'}, is still throwing exceptions (non-zero Python exit code).

I can imagine setting a larger count (e.g. 20-30) reduces the likelihood
that the point under consideration lies beyond the interpolated TIN
surface, but is it not possible to create a TIN from  ≥ 3 ground points?
(Shouldn't this be fine as long as all the non-ground points lie within the
extent of the triangle?)

In my application, all non-ground points lie within an area bounded by 4
ground points (after filters.crop). Supplying {"type": "filters.hag",
"count": 1,  "delaunay": 'true' } executes nearest neighbour (which is
logical), but any other number of count (2, 3, 4, 5, 10 ,20, 30) returns a
non-zero exit code.

Thanks for any more tips,
Andy





On Fri, 8 Nov 2019 at 18:51, Andrew Bell <andrew.bell.ia at gmail.com> wrote:

>
>
> On Fri, Nov 8, 2019 at 11:18 AM Andrew Cunliffe <andrewmcunliffe at gmail.com>
> wrote:
>
>> Can anyone help with the syntax to calculate HAG (height above ground)
>> relative to an interpolated surface (following James McClain’s
>> contribution, #2520 <https://github.com/PDAL/PDAL/pull/2520>)?
>>
>>
>> I’ve tried:
>>
>> {
>>
>>     "type": "filters.hag",
>>
>>     "delaunay": True
>>
>> },
>>
>>
>>
>> But the output HAG is clearly still being computed relative to the
>> nearest neighbour, rather than an interpolated surface as desired.  I’ve
>> tried *"delaunay_fan": True*, and also including *“count”: 4* arguments,
>> and have been looking through GitHub (which led me to “delauney” rather
>> "delaunay_fan") but still haven’t succeeded.
>>
>
> The option is "delaunay", as you've specified, though the constant 'true'
> must be specified in lowercase to be valid JSON.
>
>> What am I missing?
>>
> Looking at the code, it appears that you also need to set "count" to some
> reasonable value in order to get this interpolation method to work.  The
> code builds a delaunay triangulation of <count> neighbors and then
> interpolates attempts to use that triangulation to determine a Z value for
> the point in question.  I'd have to look through the math more closely to
> give you better information.  It appears that things haven't been
> documented.  I'll take a stab at that before long.
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>


-- 
Dr Andrew Cunliffe

Research Fellow in Dryland Carbon Dynamics
School of Geography, College of Life and Environmental Science,
University of Exeter

UoEx Profile
<http://geography.exeter.ac.uk/staff/index.php?web_id=Andy_cunliffe>
Google Scholar
<https://scholar.google.co.uk/citations?user=GEfm3PIAAAAJ&hl=en>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20191111/4dbd747b/attachment.html>

From andrew.bell.ia at gmail.com  Mon Nov 11 04:52:12 2019
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Mon, 11 Nov 2019 07:52:12 -0500
Subject: [pdal] Syntax for implementing new filters.hag relative to TIN
In-Reply-To: <CAM1p0+HFLpSfMK8EZWYFEJqXh651PzEUEao0SXKkFAiWN6yQQg@mail.gmail.com>
References: <CAM1p0+HXqb6tvUBGFBx42BSamK1+fJBx7KiShyMT8MogcfP1Jg@mail.gmail.com>
 <CACJ51z3gkWTdDROrs-XuFzj9CdkKpwiVp=o8ZPBYau3m1izwLg@mail.gmail.com>
 <CAM1p0+HFLpSfMK8EZWYFEJqXh651PzEUEao0SXKkFAiWN6yQQg@mail.gmail.com>
Message-ID: <CACJ51z3ap96u9md8YA_gnZGrV3FXQwSz_he3jEXOMxmPBRxKzg@mail.gmail.com>

On Mon, Nov 11, 2019, 06:12 Andrew Cunliffe <andrewmcunliffe at gmail.com>
wrote:

> Thanks for the help Andrew,
>
> Unfortunately this pipeline {"type": "filters.hag", "count": 4,
> "delaunay": 'true'}, is still throwing exceptions (non-zero Python exit
> code).
>
> I can imagine setting a larger count (e.g. 20-30) reduces the likelihood
> that the point under consideration lies beyond the interpolated TIN
> surface, but is it not possible to create a TIN from  ≥ 3 ground points?
> (Shouldn't this be fine as long as all the non-ground points lie within the
> extent of the triangle?)
>

Yes, but you have to choose the"right" points. I may be able to change
things so that this parameter isn't necessary. If you can share your data,
I'd love to use it as a test case and to experiment with the issue you're
having.

>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20191111/75417a9a/attachment.html>

From jmcclain at azavea.com  Mon Nov 11 06:58:50 2019
From: jmcclain at azavea.com (James McClain)
Date: Mon, 11 Nov 2019 09:58:50 -0500
Subject: [pdal] Syntax for implementing new filters.hag relative to TIN
In-Reply-To: <CACJ51z3ap96u9md8YA_gnZGrV3FXQwSz_he3jEXOMxmPBRxKzg@mail.gmail.com>
References: <CAM1p0+HXqb6tvUBGFBx42BSamK1+fJBx7KiShyMT8MogcfP1Jg@mail.gmail.com>
 <CACJ51z3gkWTdDROrs-XuFzj9CdkKpwiVp=o8ZPBYau3m1izwLg@mail.gmail.com>
 <CAM1p0+HFLpSfMK8EZWYFEJqXh651PzEUEao0SXKkFAiWN6yQQg@mail.gmail.com>
 <CACJ51z3ap96u9md8YA_gnZGrV3FXQwSz_he3jEXOMxmPBRxKzg@mail.gmail.com>
Message-ID: <CADWHhRjPra2RXcaT-_p0jnw5PSFW7rDAOPRcGvGeMbZHG3c2sg@mail.gmail.com>

Hello,

It isn't necessarily the case that the parameter will be low for any given
dataset.  For example, if you have a dataset with recognizable scan lines
with a relatively small distance between subsequent samples, but the scan
lines are relatively far apart.

A workable parameter-free approach would definitely be superior to what is
currently there, though.

Sincerely,
James McClain



On Mon, Nov 11, 2019 at 7:52 AM Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

>
>
> On Mon, Nov 11, 2019, 06:12 Andrew Cunliffe <andrewmcunliffe at gmail.com>
> wrote:
>
>> Thanks for the help Andrew,
>>
>> Unfortunately this pipeline {"type": "filters.hag", "count": 4,
>> "delaunay": 'true'}, is still throwing exceptions (non-zero Python exit
>> code).
>>
>> I can imagine setting a larger count (e.g. 20-30) reduces the likelihood
>> that the point under consideration lies beyond the interpolated TIN
>> surface, but is it not possible to create a TIN from  ≥ 3 ground points?
>> (Shouldn't this be fine as long as all the non-ground points lie within the
>> extent of the triangle?)
>>
>
> Yes, but you have to choose the"right" points. I may be able to change
> things so that this parameter isn't necessary. If you can share your data,
> I'd love to use it as a test case and to experiment with the issue you're
> having.
>
>>
>> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal



-- 
James McClain
Software Developer
Azavea  |  990 Spring Garden Street, 5th Floor, Philadelphia, PA 19123
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20191111/83b146ac/attachment.html>

From norman.barker at gmail.com  Fri Nov 22 13:58:08 2019
From: norman.barker at gmail.com (Norman Barker)
Date: Fri, 22 Nov 2019 15:58:08 -0600
Subject: [pdal] variable argument names
Message-ID: <CAN_Dn-ETNcmTKJQ5i5wH39tMg9ADwUdoH3DQ-k2Trn+d93WD-w@mail.gmail.com>

Hi,

when configuring a pipeline stage we can add named arguments to the plugin,
e.g. TileDBWriter we can set a `compression` property.

How would I define a map of properties, e.g. I have a named property called
compression and within that I have a map (json object) of the compression
type per attribute name? Currently ProgramArgs supports lists but not maps.

I can hack something for review, but I thought I would ask first for ideas.

Norman
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20191122/6d4c9fd9/attachment.html>

From howard at hobu.co  Fri Nov 22 14:00:25 2019
From: howard at hobu.co (Howard Butler)
Date: Fri, 22 Nov 2019 17:00:25 -0500
Subject: [pdal] variable argument names
In-Reply-To: <CAN_Dn-ETNcmTKJQ5i5wH39tMg9ADwUdoH3DQ-k2Trn+d93WD-w@mail.gmail.com>
References: <CAN_Dn-ETNcmTKJQ5i5wH39tMg9ADwUdoH3DQ-k2Trn+d93WD-w@mail.gmail.com>
Message-ID: <9F430C29-B257-46B5-8778-14DBB991BB73@hobu.co>

ProgramArgs can bind to a nl::json. See readers.ept for inspiration. 

> On Nov 22, 2019, at 4:58 PM, Norman Barker <norman.barker at gmail.com> wrote:
> 
> ﻿
> Hi,
> 
> when configuring a pipeline stage we can add named arguments to the plugin, e.g. TileDBWriter we can set a `compression` property.
> 
> How would I define a map of properties, e.g. I have a named property called compression and within that I have a map (json object) of the compression type per attribute name? Currently ProgramArgs supports lists but not maps.
> 
> I can hack something for review, but I thought I would ask first for ideas.
> 
> Norman
> 
> 
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal

