From geos-trac at osgeo.org  Fri Jan 15 02:49:45 2016
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 15 Jan 2016 10:49:45 -0000
Subject: [geos-devel] [GEOS] #762: Compiling error on cygwin
Message-ID: <045.76a3baaa9990be48a943bc4be92c047f@osgeo.org>

#762: Compiling error on cygwin
------------------------+--------------------------
 Reporter:  jingsam     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.5.1
Component:  Default     |    Version:  3.5.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 When I tried to compile geos on cygwin, errors occur:

 geos_ts_c.cpp: in fucntion ‘void
 GEOSContextHandle_HS::NOTICE_MESSAGE(std::string, ...)’:
 geos_ts_c.cpp:228:81: error：‘vsnprintf’ undeclared in the context
        int result = vsnprintf(msgBuffer, sizeof(msgBuffer) - 1,
 fmt.c_str(), args);
 ^
 geos_ts_c.cpp: in function ‘void
 GEOSContextHandle_HS::ERROR_MESSAGE(std::string, ...)’中:
 geos_ts_c.cpp:249:81: error：‘vsnprintf’ undeclared in the context
        int result = vsnprintf(msgBuffer, sizeof(msgBuffer) - 1,
 fmt.c_str(), args);


 That may be caused by the non-existence of vsnprintf() which is a c++11
 function.

 g++ version: 4.9.3

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/762>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Jan 16 02:47:43 2016
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 16 Jan 2016 10:47:43 -0000
Subject: [geos-devel] [GEOS] #762: Compiling error on cygwin
In-Reply-To: <045.76a3baaa9990be48a943bc4be92c047f@osgeo.org>
References: <045.76a3baaa9990be48a943bc4be92c047f@osgeo.org>
Message-ID: <060.9ebb2c5b8a99c9b88191edfb038a6aed@osgeo.org>

#762: Compiling error on cygwin
------------------------+---------------------------
 Reporter:  jingsam     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 According to the man page:

    snprintf(), vsnprintf():
        _BSD_SOURCE || _XOPEN_SOURCE >= 500 || _ISOC99_SOURCE ||
 _POSIX_C_SOURCE >= 200112L; or cc -std=c99


    #include <stdio.h>
    #include <stdlib.h>
    #include <stdarg.h>

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/762#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Jan 16 07:59:56 2016
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 16 Jan 2016 15:59:56 -0000
Subject: [geos-devel] [GEOS] #762: Compiling error on cygwin
In-Reply-To: <045.76a3baaa9990be48a943bc4be92c047f@osgeo.org>
References: <045.76a3baaa9990be48a943bc4be92c047f@osgeo.org>
Message-ID: <060.75f402f701309aee4d1026fd0b1dbdd5@osgeo.org>

#762: Compiling error on cygwin
------------------------+---------------------------
 Reporter:  jingsam     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by jingsam):

 I got it.
 I checked the compiling command as fellows:

 g++ -DHAVE_CONFIG_H -I. -I../include -I../include/geos -I../include
 -DGEOS_CAPI_VERSION=\"3.5.0-CAPI-1.9.0\" -DGEOS_JTS_PORT=\"1.13.0\"
 -DGEOS_INLINE -pedantic -Wall '''-ansi''' -Wno-long-long -ffloat-store -g
 -O2 -MT libgeos_c_la-geos_ts_c.lo -MD -MP -MF .deps/libgeos_c_la-
 geos_ts_c.Tpo -c geos_ts_c.cpp  -DDLL_EXPORT -DPIC -o .libs/libgeos_c_la-
 geos_ts_c.o

 The tag "-ansi" is equivalent to "-std=c++98". The function "vsnprintf()"
 is not implemented in ansi standard. I think GEOS should adjust the
 compiling command.

--
Ticket URL: <http://trac.osgeo.org/geos/ticket/762#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Jan 16 18:43:52 2016
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 17 Jan 2016 02:43:52 -0000
Subject: [geos-devel] [GEOS] #763: Overlay operator crash
Message-ID: <045.3f4706b77c4bbdcb698bd9bc5ebcee73@osgeo.org>

#763: Overlay operator crash
------------------------+--------------------------
 Reporter:  pramsey     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.5.1
Component:  Default     |    Version:  3.5.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 This was reported by a postgis user:
 {{{
 with a as(select ST_GeomFromText('LINESTRING(1031866.54
 248543.54,1031876.58 248482.73,1031835.96 248503.82)') as geom  )
 select
   St_difference(
     ST_EXTERIORRING (ST_Buffer( geom, 25 ,  'endcap=flat join=round' )),
     ST_collect(
       ST_OffsetCurve(geom, 25, 'join=round'),
       ST_OffsetCurve(geom, -25, 'join=round')
     )
   )  as geom
  from a
 }}}
 Unfortunately it requires all the operations to get to the crash, which
 doesn't occur until the final difference.
 {{{
 * thread #1: tid = 0x1385b22, 0x00000001153ea548
 libgeos-3.5.0dev.dylib`geos::geom::Coordinate::equals2D(this=0x00007fc70ad029f0,
 other=0x0000000000000000) const + 24 at Coordinate.inl:52, queue =
 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1,
 address=0x0)
   * frame #0: 0x00000001153ea548
 libgeos-3.5.0dev.dylib`geos::geom::Coordinate::equals2D(this=0x00007fc70ad029f0,
 other=0x0000000000000000) const + 24 at Coordinate.inl:52
     frame #1: 0x00000001153e9f4d
 libgeos-3.5.0dev.dylib`geos::geom::operator==(a=0x00007fc70ad029f0,
 b=0x0000000000000000) + 29 at Coordinate.inl:123
     frame #2: 0x00000001154094bb
 libgeos-3.5.0dev.dylib`geos::algorithm::PointLocator::locate(this=0x00007fff54434ee8,
 p=0x00007fc70ad029f0, l=0x00007fc70ad01f50) + 91 at PointLocator.cpp:118
     frame #3: 0x0000000115409a70
 libgeos-3.5.0dev.dylib`geos::algorithm::PointLocator::computeLocation(this=0x00007fff54434ee8,
 p=0x00007fc70ad029f0, geom=0x00007fc70ad01fc0) + 720 at
 PointLocator.cpp:78
     frame #4: 0x00000001154093f8
 libgeos-3.5.0dev.dylib`geos::algorithm::PointLocator::locate(this=0x00007fff54434ee8,
 p=0x00007fc70ad029f0, geom=0x00007fc70ad01fc0) + 376 at
 PointLocator.cpp:54
     frame #5: 0x00000001155716cf
 libgeos-3.5.0dev.dylib`geos::operation::overlay::OverlayOp::labelIncompleteNode(this=0x00007fff54434e48,
 n=0x00007fc70ad029b0, targetIndex=1) + 127 at OverlayOp.cpp:412
     frame #6: 0x0000000115571516
 libgeos-3.5.0dev.dylib`geos::operation::overlay::OverlayOp::labelIncompleteNodes(this=0x00007fff54434e48)
 + 1126 at OverlayOp.cpp:390
     frame #7: 0x000000011556f032
 libgeos-3.5.0dev.dylib`geos::operation::overlay::OverlayOp::computeOverlay(this=0x00007fff54434e48,
 opCode=opDIFFERENCE) + 2258 at OverlayOp.cpp:794
     frame #8: 0x000000011556dc8f
 libgeos-3.5.0dev.dylib`geos::operation::overlay::OverlayOp::getResultGeometry(this=0x00007fff54434e48,
 funcCode=opDIFFERENCE) + 31 at OverlayOp.cpp:187
     frame #9: 0x000000011556dbc0
 libgeos-3.5.0dev.dylib`geos::operation::overlay::OverlayOp::overlayOp(geom0=0x00007fc70ad02030,
 geom1=0x00007fc70ad01fc0, opCode=opDIFFERENCE) + 64 at OverlayOp.cpp:93
     frame #10: 0x000000011542ee87
 libgeos-3.5.0dev.dylib`geos::operation::overlay::overlayOp::operator(this=0x00007fff54435470,
 g0=0x00007fc70ad02030, g1=0x00007fc70ad01fc0)(geos::geom::Geometry const*,
 geos::geom::Geometry const*) + 39 at OverlayOp.h:388
     frame #11: 0x0000000115427d7e
 libgeos-3.5.0dev.dylib`std::__1::auto_ptr<geos::geom::Geometry>
 geos::geom::BinaryOp<geos::operation::overlay::overlayOp>(g0=0x00007fc70ad02030,
 g1=0x00007fc70ad01fc0, _Op=(opCode = opDIFFERENCE)) + 158 at
 BinaryOp.h:322
     frame #12: 0x000000011542602a
 libgeos-3.5.0dev.dylib`geos::geom::Geometry::difference(this=0x00007fc70ad02030,
 other=0x00007fc70ad01fc0) const + 218 at Geometry.cpp:605
     frame #13: 0x000000010c59f1ef
 libgeos_c.1.dylib`::GEOSDifference_r(extHandle=0x00007fc70b834000,
 g1=0x00007fc70ad02030, g2=0x00007fc70ad01fc0) + 159 at geos_ts_c.cpp:2098
     frame #14: 0x000000010c58f414
 libgeos_c.1.dylib`::GEOSDifference(g1=0x00007fc70ad02030,
 g2=0x00007fc70ad01fc0) + 36 at geos_c.cpp:454
     frame #15: 0x000000010c510cc0 postgis-2.3.so`lwgeom_difference + 352
     frame #16: 0x000000010c489168 postgis-2.3.so`geos_difference + 88
     frame #17: 0x000000010c48f1c8 postgis-2.3.so`difference + 40
     frame #18: 0x000000010ba3c3e9
 postgres`ExecMakeFunctionResultNoSets(fcache=0x00007fc70b82b898,
 econtext=0x00007fc70b82b7a0, isNull="", isDone=0x00007fc70b843970) + 361
 at execQual.c:2026
     frame #19: 0x000000010ba35afd
 postgres`ExecEvalFunc(fcache=0x00007fc70b82b898,
 econtext=0x00007fc70b82b7a0, isNull="", isDone=0x00007fc70b843970) + 205
 at execQual.c:2417
     frame #20: 0x000000010ba3b1a5
 postgres`ExecTargetList(targetlist=0x00007fc70b843938,
 econtext=0x00007fc70b82b7a0, values=0x00007fc70b843810, isnull="",
 itemIsDone=0x00007fc70b843970, isDone=0x00007fff54435ea4) + 181 at
 execQual.c:5307
     frame #21: 0x000000010ba3b0ba
 postgres`ExecProject(projInfo=0x00007fc70b843850,
 isDone=0x00007fff54435ea4) + 778 at execQual.c:5522
     frame #22: 0x000000010ba3c95d
 postgres`ExecScan(node=0x00007fc70b82b458, accessMtd=(postgres`CteScanNext
 at nodeCtescan.c:32), recheckMtd=(postgres`CteScanRecheck at
 nodeCtescan.c:139)) + 493 at execScan.c:207
     frame #23: 0x000000010ba5e849
 postgres`ExecCteScan(node=0x00007fc70b82b458) + 41 at nodeCtescan.c:155
     frame #24: 0x000000010ba2ec61
 postgres`ExecProcNode(node=0x00007fc70b82b458) + 433 at execProcnode.c:434
     frame #25: 0x000000010ba2a426
 postgres`ExecutePlan(estate=0x00007fc70b82ac38,
 planstate=0x00007fc70b82b458, operation=CMD_SELECT, sendTuples='\x01',
 numberTuples=0, direction=ForwardScanDirection, dest=0x00007fc70b836c78) +
 118 at execMain.c:1490
     frame #26: 0x000000010ba2a34b
 postgres`standard_ExecutorRun(queryDesc=0x00007fc70b824838,
 direction=ForwardScanDirection, count=0) + 523 at execMain.c:319
     frame #27: 0x000000010ba2a12d
 postgres`ExecutorRun(queryDesc=0x00007fc70b824838,
 direction=ForwardScanDirection, count=0) + 77 at execMain.c:267
     frame #28: 0x000000010bbec909
 postgres`PortalRunSelect(portal=0x00007fc70b828c38, forward='\x01',
 count=0, dest=0x00007fc70b836c78) + 329 at pquery.c:942
     frame #29: 0x000000010bbec2d0
 postgres`PortalRun(portal=0x00007fc70b828c38, count=9223372036854775807,
 isTopLevel='\x01', dest=0x00007fc70b836c78, altdest=0x00007fc70b836c78,
 completionTag="") + 704 at pquery.c:786
     frame #30: 0x000000010bbe798a
 postgres`exec_simple_query(query_string="with a as(select
 ST_GeomFromText('LINESTRING(1031866.54 248543.54,1031876.58
 248482.73,1031835.96 248503.82)') as geom  )\nselect  St_difference(
 ST_EXTERIORRING (ST_Buffer( geom, 25 ,  'endcap=flat join=round' )),\n
 ST_collect(ST_OffsetCurve(geom, 25, 'join=round'), ST_OffsetCurve(geom,
 -25, 'join=round'))  )  as geom\n from a\n;") + 1258 at postgres.c:1072
     frame #31: 0x000000010bbe6c74 postgres`PostgresMain(argc=1,
 argv=0x00007fc70b003cb0, dbname="postgis23", username="pramsey") + 2868 at
 postgres.c:4079
 }}}

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/763>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From dark.panda+lists at gmail.com  Tue Jan 19 09:58:48 2016
From: dark.panda+lists at gmail.com (J Smith)
Date: Tue, 19 Jan 2016 12:58:48 -0500
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
Message-ID: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>

G'day geos-devel.

I'm working on a PHP project that requires the use of the GEOS PHP
extension. The GEOS PHP extension is rather tightly coupled with the
GEOS build system itself, and it makes it a bit cumbersome to use on
systems where there's already a GEOS package available but no separate
package for the PHP extension. This usually means you have to compile
a local version of GEOS and enable the PHP extension, or build a
custom system package, or whatever the case may be.

I've extracted the necessary files from the GEOS source distribution
and created a PECL-style standalone package for the library and was
wondering if it would be cool to publish this via PHP's PECL system.
It would be nice to be able to do a straight install of the GEOS PHP
extension via the normal PHP extension methods, and it might also be
nice to decouple the PHP extension from GEOS proper and allow it to be
modified and released without having to do a full GEOS release. This
could also lead to move rapid development of the PHP extension, as it
might lower the barrier to entry for enterprising PHP developers
knowing that they can install and work with the extension without
setting up an entire GEOS development environment. At the very least,
I could work towards keeping the PECL repository in sync with the
upstream GEOS repo, although some work would have to be done with some
library detection and config.h to ensure that various CAPI functions
are available to provide PHP features, but that's another matter.

I have pushed an initial version of the extension to Github at
https://github.com/dark-panda/php-geos-native for review. If given the
blessing, I can start the process of hopefully getting it included
into PECL, or at least leave it on Github so that it can be installed
via Pickle, which appears to be a Composer-like package manager for
native PHP extensions.

It's been a long time since I've done any PHP development and I'm
really just getting back to it now after a decade-long hiatus.
However, in that time, I've used GEOS extensively, and have written
ffi-geos, geos-extensions, and a handful of other GEOS-based libraries
for Ruby, so this isn't my first kick at the can when it comes to
managing GEOS language interface libraries.

Questions, comments, etc. welcomed.

Cheers

From geos-trac at osgeo.org  Tue Jan 19 16:03:43 2016
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 20 Jan 2016 00:03:43 -0000
Subject: [geos-devel] [GEOS] #757: IsValid memory exhaustion with
 degenerate multipolygon
In-Reply-To: <045.46f8a87cb90ea89c963b5a64d2f20622@osgeo.org>
References: <045.46f8a87cb90ea89c963b5a64d2f20622@osgeo.org>
Message-ID: <060.1ffe1a4bd4ef676bf3a8c2876407b481@osgeo.org>

#757: IsValid memory exhaustion with degenerate multipolygon
------------------------+---------------------------
 Reporter:  pramsey     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 Fixed in 3.5 at r4140, trunk at r4141, porting fix from upstream,
 http://sourceforge.net/p/jts-topo-suite/code/1126/

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/757#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Jan 19 17:52:56 2016
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 20 Jan 2016 01:52:56 -0000
Subject: [geos-devel] [GEOS] #764: PreparedPoint::intersects gives incorrect
 results for MultiPoint
Message-ID: <045.4778815bc890669033dffd336a3b9bf6@osgeo.org>

#764: PreparedPoint::intersects gives incorrect results for MultiPoint
------------------------+--------------------------
 Reporter:  dbaston     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.5.1
Component:  Default     |    Version:  3.5.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 It seems that if a PreparedPoint is build from a MultiPoint, intersects()
 will return false for any point, for two independent reasons.

 a) PreparedPoint::intersects short-circuits to an equality test.  It looks
 like this was introduced at r4081 / r4132.

 b) the isAnyTargetComponentInTest method does its work using a
 PointLocator, which seems to have no implementation for a Point.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/764>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Jan 19 17:54:32 2016
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 20 Jan 2016 01:54:32 -0000
Subject: [geos-devel] [GEOS] #764: PreparedPoint::intersects gives
 incorrect results for MultiPoint
In-Reply-To: <045.4778815bc890669033dffd336a3b9bf6@osgeo.org>
References: <045.4778815bc890669033dffd336a3b9bf6@osgeo.org>
Message-ID: <060.f2130ca3c067acab93a4e064bb258c75@osgeo.org>

#764: PreparedPoint::intersects gives incorrect results for MultiPoint
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by dbaston):

 See also: https://trac.osgeo.org/postgis/ticket/3433

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/764#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Jan 19 18:04:40 2016
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 20 Jan 2016 02:04:40 -0000
Subject: [geos-devel] [GEOS] #764: PreparedPoint::intersects gives
 incorrect results for MultiPoint
In-Reply-To: <045.4778815bc890669033dffd336a3b9bf6@osgeo.org>
References: <045.4778815bc890669033dffd336a3b9bf6@osgeo.org>
Message-ID: <060.2bd5c8e5c89828ad02d25a6139c5d227@osgeo.org>

#764: PreparedPoint::intersects gives incorrect results for MultiPoint
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by dbaston):

 PR for testing at https://github.com/libgeos/libgeos/pull/60

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/764#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Jan 20 00:37:29 2016
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 20 Jan 2016 08:37:29 -0000
Subject: [geos-devel] [GEOS] #757: IsValid memory exhaustion with
 degenerate multipolygon
In-Reply-To: <045.46f8a87cb90ea89c963b5a64d2f20622@osgeo.org>
References: <045.46f8a87cb90ea89c963b5a64d2f20622@osgeo.org>
Message-ID: <060.0a1d95509f0ae09a749b9d7b15c9950e@osgeo.org>

#757: IsValid memory exhaustion with degenerate multipolygon
------------------------+---------------------------
 Reporter:  pramsey     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Paul: you should find in the header of each .cpp and .h file a reference
 to the last JTS revision being ported.

 Could you please also update that value (or add if missing in those
 specific files) so we know where we are, on next port drive ?

 TIA

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/757#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at keybit.net  Wed Jan 20 01:48:05 2016
From: strk at keybit.net (Sandro Santilli)
Date: Wed, 20 Jan 2016 10:48:05 +0100
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
Message-ID: <20160120094805.GB4697@localhost>

G'day Dark Panda !

On Tue, Jan 19, 2016 at 12:58:48PM -0500, J Smith wrote:

> I have pushed an initial version of the extension to Github at
> https://github.com/dark-panda/php-geos-native for review. If given the
> blessing, I can start the process of hopefully getting it included
> into PECL, or at least leave it on Github so that it can be installed
> via Pickle, which appears to be a Composer-like package manager for
> native PHP extensions.

I'm happy with both decoupling the PHP bindings from core and
publishing into PECL.

And I'm also ok with the code being on github (maybe under "libgeos"
organization), althought if I'd prefer the "official" source of GEOS
to be hosted by OSGeo infrastructure (not ready yet to do git).

Does "Pickle" need "GitHub" specifically or could it fetch code
from any git (or SVN) repository ?

--strk;

From dark.panda+lists at gmail.com  Wed Jan 20 07:31:54 2016
From: dark.panda+lists at gmail.com (J Smith)
Date: Wed, 20 Jan 2016 10:31:54 -0500
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <20160120094805.GB4697@localhost>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
Message-ID: <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>

G'day Sandro.

I'm a bit new to all of the recent developments in PHP extension
packaging so I'll have to investigate a few things I suppose. I did
some PHP development ages ago and I have a decade of catching up to
do, but back in the day, there was basically the `pear` command and
that was the official infrastructure for installing PHP packages. I
think PECL, the PHP Extension Community Library, was wrapped within
that infrastructure. These days, `pear` and a lot of that
infrastructure has been superseded by Composer, which is a PHP package
manager akin to Ruby's gem, Node's npm, etc., and it's
still-in-development cousin Pickle, which handles the native
extensions as PECL used to do. Pickle itself is built around PECL in
the sense that PECL appears to provide the repository for packages
while Pickle aims to provide the package management tools. I don't
know if Pickle is in production yet, as the docs seem to indicate that
the aim is to merge it with Composer. I only ran across Pickle
yesterday, so it's pretty new to me -- again, just getting back into
PHP land for a client.

Now, if I've gotten all that correctly, I think the main gist of
things is that the actual hosting of the PHP extension can be done
anywhere, as I see various projects within PECL are hosted on a
combination of Github, PHP's own SVN tree, Google Code, so I don't
think that the location of the source code makes much of a difference.
To be included on the PECL page and within the PECL infrastructure,
you merely need to submit the extension for inclusion and have it
accepted.

Personally, it doesn't much matter to me where the hosting is done,
I'm just interested in getting the thing running and to make it more
easily accessible. Worst case scenario, a Github mirror could be
created for the sake of any interoperability issues, the but master
repo could be anywhere.

A few things I notice after reviewing the PECL documentation:

- "We strongly encourage contributors to choose the PHP License 3.01
for their extensions, in order to avoid possible troubles for
end-users of the extension. Other solid options are BSD and Apache
type licenses." I've never been completely comfortable with licensing
my own software under the PHP license because the terms of the license
seem to imply you have to re-assign copyright to the PHP Group. (I
think? The license itself says "Copyright (c) 1999 - 2014 The PHP
Group".) I prefer to license things under BSD or MIT licenses. For the
current example project I posted, I used a hybrid license to this end
-- the code extracted from the GEOS source is under the LGPLv2, while
the packaging itself is MIT.

- "Note: wrappers for GPL (all versions) or LGPLv3 libraries will not
be accepted. Wrappers for libraries licensed under LGPLv2 are however
allowed while being discouraged." I'm assuming since GEOS is LGPLv2
there shouldn't be any problems here, but there might be some
grumbling from PECL potentially.

If that all sounds sane, I think this would be do-able. A longer-term
goal might be to do similar extractions for the Python and Ruby SWIG
wrappers, but I'll leave that for another day.

Cheers


On Wed, Jan 20, 2016 at 4:48 AM, Sandro Santilli <strk at keybit.net> wrote:
> G'day Dark Panda !
>
> On Tue, Jan 19, 2016 at 12:58:48PM -0500, J Smith wrote:
>
>> I have pushed an initial version of the extension to Github at
>> https://github.com/dark-panda/php-geos-native for review. If given the
>> blessing, I can start the process of hopefully getting it included
>> into PECL, or at least leave it on Github so that it can be installed
>> via Pickle, which appears to be a Composer-like package manager for
>> native PHP extensions.
>
> I'm happy with both decoupling the PHP bindings from core and
> publishing into PECL.
>
> And I'm also ok with the code being on github (maybe under "libgeos"
> organization), althought if I'd prefer the "official" source of GEOS
> to be hosted by OSGeo infrastructure (not ready yet to do git).
>
> Does "Pickle" need "GitHub" specifically or could it fetch code
> from any git (or SVN) repository ?
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From mohammedrashadkm at gmail.com  Wed Jan 20 10:01:38 2016
From: mohammedrashadkm at gmail.com (Rashad Kanavath)
Date: Wed, 20 Jan 2016 19:01:38 +0100
Subject: [geos-devel] old mailingglist thread about adding C API
Message-ID: <CANNqv9cCzwbjYfTW7ySzL-z01GU-4_382tvOEBU7_ZFnMKa8zg@mail.gmail.com>

Hello all,

Where I can find the thread about "adding C api" in goes. I know the reason
why geos moved to C api and recommends it over c++. I searched on list for
a discussion where it all started. There is also no information on the wiki
page.

Thanks in advance.

-- 
Regards,
   Rashad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20160120/ac4de42e/attachment.html>

From robert.coup at onetrackmind.co.nz  Wed Jan 20 11:57:18 2016
From: robert.coup at onetrackmind.co.nz (Robert Coup)
Date: Wed, 20 Jan 2016 19:57:18 +0000
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <20160120094805.GB4697@localhost>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
Message-ID: <CAFLLRpLaFv0C0aTUcojuOTFzUgyxA9k83ZjAQ-AecbX5Lvsx0g@mail.gmail.com>

Hi,

On 20 January 2016 at 09:48, Sandro Santilli <strk at keybit.net> wrote:

>
> And I'm also ok with the code being on github (maybe under "libgeos"
> organization), althought if I'd prefer the "official" source of GEOS
> to be hosted by OSGeo infrastructure (not ready yet to do git).
>

FWIW there's an official OSGeo Github org, for hosting or mirrors or
whatever... any of these folks can create repos if you ask:
https://github.com/orgs/OSGeo/people?utf8=%E2%9C%93&query=role%3Aowner

eg. GDALs official version control is subversion on OSGeo infrastructure,
but there's a live mirror athttps://github.com/OSGeo/gdal

Rob :)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20160120/15001de5/attachment-0001.html>

From jef at norbit.de  Wed Jan 20 12:05:08 2016
From: jef at norbit.de (=?iso-8859-1?B?SvxyZ2VuIEUu?= Fischer)
Date: Wed, 20 Jan 2016 21:05:08 +0100
Subject: [geos-devel] old mailingglist thread about adding C API
In-Reply-To: <CANNqv9cCzwbjYfTW7ySzL-z01GU-4_382tvOEBU7_ZFnMKa8zg@mail.gmail.com>
References: <CANNqv9cCzwbjYfTW7ySzL-z01GU-4_382tvOEBU7_ZFnMKa8zg@mail.gmail.com>
Message-ID: <20160120200508.GB20647@norbit.de>

Hi Rashad,

On Wed, 20. Jan 2016 at 19:01:38 +0100, Rashad Kanavath wrote:
> Where I can find the thread about "adding C api" in goes. I know the reason
> why geos moved to C api and recommends it over c++. I searched on list for
> a discussion where it all started. There is also no information on the wiki

https://lists.osgeo.org/pipermail/geos-devel/2005-September/001574.html


Jürgen

-- 
Jürgen E. Fischer           norBIT GmbH             Tel. +49-4931-918175-31
Dipl.-Inf. (FH)             Rheinstraße 13          Fax. +49-4931-918175-50
Software Engineer           D-26506 Norden             http://www.norbit.de
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 827 bytes
Desc: Digital signature
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20160120/040ec731/attachment.sig>

From strk at keybit.net  Wed Jan 20 12:40:45 2016
From: strk at keybit.net (Sandro Santilli)
Date: Wed, 20 Jan 2016 21:40:45 +0100
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
 <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>
Message-ID: <20160120204045.GA5099@localhost>

On Wed, Jan 20, 2016 at 10:31:54AM -0500, J Smith wrote:

> - "We strongly encourage contributors to choose the PHP License 3.01
> for their extensions, in order to avoid possible troubles for
> end-users of the extension. Other solid options are BSD and Apache
> type licenses."

I don't envision changing the license, other than maybe upgrading
to LGPLv3.

> I've never been completely comfortable with licensing
> my own software under the PHP license because the terms of the license
> seem to imply you have to re-assign copyright to the PHP Group. (I
> think? The license itself says "Copyright (c) 1999 - 2014 The PHP
> Group".)

That probably covers the license text itself.

> I prefer to license things under BSD or MIT licenses. For the
> current example project I posted, I used a hybrid license to this end
> -- the code extracted from the GEOS source is under the LGPLv2, while
> the packaging itself is MIT.

I see no problem with that.

> - "Note: wrappers for GPL (all versions) or LGPLv3 libraries will not
> be accepted. Wrappers for libraries licensed under LGPLv2 are however
> allowed while being discouraged." I'm assuming since GEOS is LGPLv2
> there shouldn't be any problems here, but there might be some
> grumbling from PECL potentially.

GEOS being LGPL (no specific version is specified in the source code
headers, so would be v2 or later) the wrappers should also be LGPL
(or GPL).

> If that all sounds sane, I think this would be do-able. A longer-term
> goal might be to do similar extractions for the Python and Ruby SWIG
> wrappers, but I'll leave that for another day.

+1

So, to get you moved, I created a new "php-geos" git
repository with "git subtree" from the official git
mirror of GEOS.

I've pushed this new repo on both github and gitlab,
currently hosting mirror of the whole codebase:

 https://github.com/libgeos/php-geos
 https://gitlab.com/geos/php-geos

If you could re-base your changes to one of these
and send a pull-request I'll be happy to try at
importing them back to SVN.

In a second moment (possibly soon, if this gets too
convoluted) we could decide to "bless" of of these
places as the official one.

--strk;

From dark.panda+lists at gmail.com  Wed Jan 20 13:58:56 2016
From: dark.panda+lists at gmail.com (J Smith)
Date: Wed, 20 Jan 2016 16:58:56 -0500
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <20160120204045.GA5099@localhost>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
 <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>
 <20160120204045.GA5099@localhost>
Message-ID: <CADFUPgcp69hGjKKehzi9e8sxezBXjpNSjH0d=ma8Dmn7zEK8Vg@mail.gmail.com>

On Wed, Jan 20, 2016 at 3:40 PM, Sandro Santilli <strk at keybit.net> wrote:
> On Wed, Jan 20, 2016 at 10:31:54AM -0500, J Smith wrote:
>
>> - "We strongly encourage contributors to choose the PHP License 3.01
>> for their extensions, in order to avoid possible troubles for
>> end-users of the extension. Other solid options are BSD and Apache
>> type licenses."
>
> I don't envision changing the license, other than maybe upgrading
> to LGPLv3.

Yeah, I don't think the underlying library license would make much of
a difference in this case, except for their strong wording about
LGPLv3 and GPLv3. On the plus side, there seems to be a move away from
PECL in general for hosting PHP extensions, so perhaps inclusion there
will become less mandatory.

>> I've never been completely comfortable with licensing
>> my own software under the PHP license because the terms of the license
>> seem to imply you have to re-assign copyright to the PHP Group. (I
>> think? The license itself says "Copyright (c) 1999 - 2014 The PHP
>> Group".)
>
> That probably covers the license text itself.

Could be, although I had a run-in years ago with a similar matter that
lead to some unpleasantness. But yeah, this might just be a copyright
on the license itself.

>> I prefer to license things under BSD or MIT licenses. For the
>> current example project I posted, I used a hybrid license to this end
>> -- the code extracted from the GEOS source is under the LGPLv2, while
>> the packaging itself is MIT.
>
> I see no problem with that.

Cool.

>> - "Note: wrappers for GPL (all versions) or LGPLv3 libraries will not
>> be accepted. Wrappers for libraries licensed under LGPLv2 are however
>> allowed while being discouraged." I'm assuming since GEOS is LGPLv2
>> there shouldn't be any problems here, but there might be some
>> grumbling from PECL potentially.
>
> GEOS being LGPL (no specific version is specified in the source code
> headers, so would be v2 or later) the wrappers should also be LGPL
> (or GPL).

Yeah, there would be no additional wrappers here, so the GEOS-owned
code itself would remain LGPL, but the build files themselves as a
package (config.m4, etc.) could be MIT or BSD. I'm not really too
concerned about the finer details here, more concerned with getting an
implementation out the door.

>> If that all sounds sane, I think this would be do-able. A longer-term
>> goal might be to do similar extractions for the Python and Ruby SWIG
>> wrappers, but I'll leave that for another day.
>
> +1
>
> So, to get you moved, I created a new "php-geos" git
> repository with "git subtree" from the official git
> mirror of GEOS.
>
> I've pushed this new repo on both github and gitlab,
> currently hosting mirror of the whole codebase:
>
>  https://github.com/libgeos/php-geos
>  https://gitlab.com/geos/php-geos
>
> If you could re-base your changes to one of these
> and send a pull-request I'll be happy to try at
> importing them back to SVN.
>
> In a second moment (possibly soon, if this gets too
> convoluted) we could decide to "bless" of of these
> places as the official one.
>

Cool, I'll take my repository and merge it into the Github one, then
I'll take down my php-geos-native repo once the new one is working
correctly. I'll add a README or something with a disclaimer stating
that this is experimental and all that, until it gets stable enough to
be releasable. I have set it up on a few of my client's dev machines
on OSX and several linux distros and it's actually working fine from
all indications, so that's a good sign.

I'll let you know when I've made the necessary changes and merged my
repo into this one. I'll also fix up the test files so they run as
phpt tests and make sure they're running. They all ran on my machine
with a bit of tweaking, but I'll take a look at some other extensions
and see how they run their tests and modify accordingly.

Cheers

From strk at keybit.net  Wed Jan 20 14:29:43 2016
From: strk at keybit.net (Sandro Santilli)
Date: Wed, 20 Jan 2016 23:29:43 +0100
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <CADFUPgcp69hGjKKehzi9e8sxezBXjpNSjH0d=ma8Dmn7zEK8Vg@mail.gmail.com>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
 <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>
 <20160120204045.GA5099@localhost>
 <CADFUPgcp69hGjKKehzi9e8sxezBXjpNSjH0d=ma8Dmn7zEK8Vg@mail.gmail.com>
Message-ID: <20160120222943.GB19289@localhost>

On Wed, Jan 20, 2016 at 04:58:56PM -0500, J Smith wrote:
> On Wed, Jan 20, 2016 at 3:40 PM, Sandro Santilli <strk at keybit.net> wrote:

> >  https://github.com/libgeos/php-geos
> >  https://gitlab.com/geos/php-geos

> I'll let you know when I've made the necessary changes and merged my
> repo into this one. I'll also fix up the test files so they run as
> phpt tests and make sure they're running. They all ran on my machine
> with a bit of tweaking, but I'll take a look at some other extensions
> and see how they run their tests and modify accordingly.

FYI: I've also set-up an experimental git repo on osgeo, if
you want to set it as a remote too:

  git://git.osgeo.org/php-geos

No trac instance was setup to go with it though, as I plan to experiment
hooking it up the existing GEOS trac instance.

--strk;

From dark.panda+lists at gmail.com  Mon Jan 25 15:24:00 2016
From: dark.panda+lists at gmail.com (J Smith)
Date: Mon, 25 Jan 2016 18:24:00 -0500
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <20160120222943.GB19289@localhost>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
 <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>
 <20160120204045.GA5099@localhost>
 <CADFUPgcp69hGjKKehzi9e8sxezBXjpNSjH0d=ma8Dmn7zEK8Vg@mail.gmail.com>
 <20160120222943.GB19289@localhost>
Message-ID: <CADFUPgfLmQL1ttuAuj9oTHqDTV-rhfi7HdN6e_TTit025RkZBg@mail.gmail.com>

Quick update on the PHP extraction folks...

I've pushed a first pass to
https://github.com/libgeos/php-geos/tree/phpize . This branch contains
the following:

- build files that work with the phpize command.

- PECL/PEAR-style packaging files.

- geos.c has been updated to use #ifdefs to work with GEOS features as
detected by configure. This allows a single PHP extension to handle
versions of GEOS from 3.3 right up to the current svn trunk. The tests
have likewise been modified to skip any features not found in the
current library version, although they haven't been re-written to
accommodate missing features used directly in testing, like
setRoundingPrecision and setTrim and the like. Those features could
perhaps be emulated for the sake of testing, but as it is, they are
currently not working. Note that 3.2 isn't working yet, as it relies
on some more recent features like GEOSBufferParams which would need to
be emulated or otherwise avoided altogether to compile. When I have
time I'll look into this. For ffi-geos, I basically emulated the
options hash interface if GEOSBufferParams didn't exist in the library
being used, so that could likely be done here.

- I noticed in the TODO file an entry for "Use the re-entrant C-API
interface" so I've switched over to that using PHP's thread safe
runtime manager. I haven't had an opportunity to test this out yet in
a multithreaded environment, just on the CLI, but the code runs and
the tests all pass for that particular target.

That's all for now. Cheers.

From foss4g at osgeo.org  Mon Jan 25 23:34:57 2016
From: foss4g at osgeo.org (foss4g at osgeo.org)
Date: Tue, 26 Jan 2016 08:34:57 +0100
Subject: [geos-devel] FOSS4G 2016 Code Sprint Bonn August
Message-ID: <8765c50291ccbaa417a6e1d1072ffbf8@foss4g2016.org>

Dear developers,

this year, once again, we are following the old tradition of hosting a 
codesprint on the FOSS4G. More precisely, we offer a setting so that  
individual projects can meet for their codesprint. Since projects 
benefit from each other as well, the codesprint will naturally be held 
conjointly at one place.
Unfortunately, circumstances have forced us to divide the codesprint 
timetable-wise.

The first part is scheduled to take place directly before the 
conference, the second immediately after. The first two and a half days 
start on Sunday, August 21, 2016 at around noon and are scheduled to end 
on Tuesday, August 23, 2016 (open end). The 2nd part starts in the 
morning of Saturday, August 27, 2016 and ends on Sunday at 12 pm.

We are happy to have found a really awesome location for you. Codesprint 
and accommodations are combined in one hall. Check out  
http://www.basecamp-bonn.com/ for details about the venue.
Working zones will be created for you in the breakfast area and 
hallways. There’s the option of finding relatively inexpensive sleeping 
accommodations in train sleeping cars, camping buses, classic cars and 
more. Additionally, an outdoor area is available for you to enjoy Bonn’s 
summer weather in August, while working. Healthy and not-so-healthy 
catering of drinks and snacks will be provided by us. Participation in 
codesprint is free of charge. However, overnight stays will have to be 
reserved and paid for by you.

Another hint: the BaseCamp is within walking distance from the 
conference venue (WCCB) and has good access to public transportation –  
the Icebreaker takes place here, too.
You see, it’s worthwhile booking here!

As the accommodations are available to all FOSS4G participants, we will 
make an effort to make advance booking possible for you a few days 
ahead, to ensure you have the opportunity to sleep on-site and wrap up 
the evenings jointly. For that, it’s necessary for you to sign up 
(https://wiki.osgeo.org/wiki/FOSS4G_2016_Code_Sprint) and leave your 
email address so that we can contact you immediately accomodation 
booking is available. We need your sign-up for the planning of snacks 
and drinks, too!

This is open to all who wish to participate in one or more projects. 
There’s always plenty to do – it’s not all about programming. 
Translation, documentation, feedback, discussions, testing – all this is 
also important for  project so everyone is cordially invited to attend 
the codesprints! Registration with the conference is not a prerequisite 
for participation in codesprint.

One thing we’d like to ask you: with an approx. 120 participants 
anticipated, the WLAN capacity will naturally be exhausted at some 
point. Please be sure to avoid huge on-site downloads of data, as this 
could impact the work of others. Thank you!

The Codesprint Organizing Team is looking forward to your coming!

Summarily:

When:
  Part I: Sun 2016-08-21 12:00 noon - Tue 2016-08-23 (open end)
  Part II: Sat 2016-08-27 - Sun 2016-08-28 12:00 noon

Where:

  Venue & Accommodation: BaseCamp. (For more informations: 
http://www.basecamp-bonn.com/)
  Nearby Hotel: Bonnox (http://www.bonnox.de/en/)

Questions/Comments/Ideas

  If you have questions/comments/ideas please let us know. Send an email 
to codesprint at foss4g2016.org. You are welcome!

From jmckenna at gatewaygeomatics.com  Wed Jan 27 10:06:12 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 27 Jan 2016 14:06:12 -0400
Subject: [geos-devel] Build errors in StringTokenizer.cpp with
	3.5.0/trunk/branch-3.5
Message-ID: <56A90714.9060202@gatewaygeomatics.com>

Hello everyone,

Compiling on Windows with Visual Studio 2008 I get the same errors with 
the 3.5.0 release, SVN trunk, and branch 3.5, but I can't find any 
mention of this problem in Trac or on this list.  Here is the error:

****
StringTokenizer.cpp
io\StringTokenizer.cpp(60) : error C2039: 'numeric_limits' : is not a 
member of 'std'
io\StringTokenizer.cpp(60) : error C2065: 'numeric_limits' : undeclared 
identifier
io\StringTokenizer.cpp(60) : error C2062: type 'double' unexpected
io\StringTokenizer.cpp(60) : error C2039: 'infinity' : is not a member 
of '`global namespa
ce''
io\StringTokenizer.cpp(62) : error C2039: 'numeric_limits' : is not a 
member of 'std'
io\StringTokenizer.cpp(62) : error C2065: 'numeric_limits' : undeclared 
identifier
io\StringTokenizer.cpp(62) : error C2062: type 'double' unexpected
io\StringTokenizer.cpp(62) : error C2039: 'infinity' : is not a member 
of '`global namespa
ce''
io\StringTokenizer.cpp(67) : error C2039: 'numeric_limits' : is not a 
member of 'std'
io\StringTokenizer.cpp(67) : error C2065: 'numeric_limits' : undeclared 
identifier
io\StringTokenizer.cpp(67) : error C2062: type 'double' unexpected
io\StringTokenizer.cpp(67) : error C2039: 'quiet_NaN' : is not a member 
of '`global namesp
ace''
NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
9.0\VC\BIN\cl.EXE"'
: return code '0x2'
Stop.
NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
9.0\VC\BIN\nmake.EXE
"' : return code '0x2'
Stop.
****

If I had to guess, I would guess that these are C89 issues (not 
declaring variables at beginning of the block).

-jeff



-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/





From even.rouault at spatialys.com  Wed Jan 27 10:52:18 2016
From: even.rouault at spatialys.com (Even Rouault)
Date: Wed, 27 Jan 2016 19:52:18 +0100
Subject: [geos-devel] Build errors in StringTokenizer.cpp with
	3.5.0/trunk/branch-3.5
In-Reply-To: <56A90714.9060202@gatewaygeomatics.com>
References: <56A90714.9060202@gatewaygeomatics.com>
Message-ID: <201601271952.18162.even.rouault@spatialys.com>

Le mercredi 27 janvier 2016 19:06:12, Jeff McKenna a écrit :
> Hello everyone,
> 
> Compiling on Windows with Visual Studio 2008 I get the same errors with
> the 3.5.0 release, SVN trunk, and branch 3.5, but I can't find any
> mention of this problem in Trac or on this list.  Here is the error:
> 
> ****
> StringTokenizer.cpp
> io\StringTokenizer.cpp(60) : error C2039: 'numeric_limits' : is not a
> member of 'std'
> io\StringTokenizer.cpp(60) : error C2065: 'numeric_limits' : undeclared
> identifier
> io\StringTokenizer.cpp(60) : error C2062: type 'double' unexpected
> io\StringTokenizer.cpp(60) : error C2039: 'infinity' : is not a member
> of '`global namespa
> ce''
> io\StringTokenizer.cpp(62) : error C2039: 'numeric_limits' : is not a
> member of 'std'
> io\StringTokenizer.cpp(62) : error C2065: 'numeric_limits' : undeclared
> identifier
> io\StringTokenizer.cpp(62) : error C2062: type 'double' unexpected
> io\StringTokenizer.cpp(62) : error C2039: 'infinity' : is not a member
> of '`global namespa
> ce''
> io\StringTokenizer.cpp(67) : error C2039: 'numeric_limits' : is not a
> member of 'std'
> io\StringTokenizer.cpp(67) : error C2065: 'numeric_limits' : undeclared
> identifier
> io\StringTokenizer.cpp(67) : error C2062: type 'double' unexpected
> io\StringTokenizer.cpp(67) : error C2039: 'quiet_NaN' : is not a member
> of '`global namesp
> ace''
> NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio
> 9.0\VC\BIN\cl.EXE"'
> 
> : return code '0x2'
> 
> Stop.
> NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio
> 9.0\VC\BIN\nmake.EXE
> "' : return code '0x2'
> Stop.
> ****
> 
> If I had to guess, I would guess that these are C89 issues (not
> declaring variables at beginning of the block).

C89 and .cpp file, no ;-) I'd rather bet that #include <limits> would fix that

> 
> -jeff

-- 
Spatialys - Geospatial professional services
http://www.spatialys.com

From geos-trac at osgeo.org  Wed Jan 27 11:25:15 2016
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 27 Jan 2016 19:25:15 -0000
Subject: [geos-devel] [GEOS] #766: Patch for StringTokenizer.cpp to include
	std::numeric
Message-ID: <046.f8346f90abcefc068138db4f25bab293@osgeo.org>

#766: Patch for StringTokenizer.cpp to include std::numeric
------------------------+--------------------------
 Reporter:  jmckenna    |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.5.1
Component:  Default     |    Version:  3.5.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 The following compile error occurs on Windows with Visual Studio 2008,
 with the GEOS 3.5.0 release, with trunk, and with branch 3.5:

 {{{
 StringTokenizer.cpp
 io\StringTokenizer.cpp(60) : error C2039: 'numeric_limits' : is not a
 member of 'std'
 io\StringTokenizer.cpp(60) : error C2065: 'numeric_limits' : undeclared
 identifier
 io\StringTokenizer.cpp(60) : error C2062: type 'double' unexpected
 io\StringTokenizer.cpp(60) : error C2039: 'infinity' : is not a member of
 '`global namespa
 ce''
 io\StringTokenizer.cpp(62) : error C2039: 'numeric_limits' : is not a
 member of 'std'
 io\StringTokenizer.cpp(62) : error C2065: 'numeric_limits' : undeclared
 identifier
 io\StringTokenizer.cpp(62) : error C2062: type 'double' unexpected
 io\StringTokenizer.cpp(62) : error C2039: 'infinity' : is not a member of
 '`global namespa
 ce''
 io\StringTokenizer.cpp(67) : error C2039: 'numeric_limits' : is not a
 member of 'std'
 io\StringTokenizer.cpp(67) : error C2065: 'numeric_limits' : undeclared
 identifier
 io\StringTokenizer.cpp(67) : error C2062: type 'double' unexpected
 io\StringTokenizer.cpp(67) : error C2039: 'quiet_NaN' : is not a member of
 '`global namesp
 ace''
 NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio
 9.0\VC\BIN\cl.EXE"'
 : return code '0x2'
 Stop.
 NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio
 9.0\VC\BIN\nmake.EXE
 "' : return code '0x2'
 Stop.
 }}}

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/766>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Jan 27 11:26:17 2016
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 27 Jan 2016 19:26:17 -0000
Subject: [geos-devel] [GEOS] #766: Patch for StringTokenizer.cpp to
 include std::numeric
In-Reply-To: <046.f8346f90abcefc068138db4f25bab293@osgeo.org>
References: <046.f8346f90abcefc068138db4f25bab293@osgeo.org>
Message-ID: <061.f64a00fb49259c4ce129490f875f75df@osgeo.org>

#766: Patch for StringTokenizer.cpp to include std::numeric
------------------------+---------------------------
 Reporter:  jmckenna    |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by jmckenna):

 * Attachment "stringtokenizer.patch" added.

 add <limits> header

--
Ticket URL: <http://trac.osgeo.org/geos/ticket/766>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From jmckenna at gatewaygeomatics.com  Wed Jan 27 11:29:23 2016
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 27 Jan 2016 15:29:23 -0400
Subject: [geos-devel] Build errors in StringTokenizer.cpp with
 3.5.0/trunk/branch-3.5
In-Reply-To: <201601271934.25588.even.rouault@spatialys.com>
References: <56A90714.9060202@gatewaygeomatics.com>
 <201601271934.25588.even.rouault@spatialys.com>
Message-ID: <56A91A93.1020203@gatewaygeomatics.com>

On 2016-01-27 2:34 PM, Even Rouault wrote:
>
>
> C89 and .cpp file, no ;-) I'd rather bet that #include <limits> would fix that

Thanks, you are right of course.  Thanks (humbled again, ha!).  I've 
filed the little patch.  https://trac.osgeo.org/geos/ticket/766

-jeff




-- 
Jeff McKenna
MapServer Consulting and Training Services
http://www.gatewaygeomatics.com/



From geos-trac at osgeo.org  Thu Jan 28 00:44:09 2016
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 28 Jan 2016 08:44:09 -0000
Subject: [geos-devel] [GEOS] #757: IsValid memory exhaustion with
 degenerate multipolygon
In-Reply-To: <045.46f8a87cb90ea89c963b5a64d2f20622@osgeo.org>
References: <045.46f8a87cb90ea89c963b5a64d2f20622@osgeo.org>
Message-ID: <060.bd65adc0c0e557f8d264b9507622ef94@osgeo.org>

#757: IsValid memory exhaustion with degenerate multipolygon
------------------------+---------------------------
 Reporter:  pramsey     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  reopened
 Priority:  major       |   Milestone:  3.5.1
Component:  Default     |     Version:  3.5.0
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * status:  closed => reopened
 * resolution:  fixed =>


Comment:

 reopening to ensure port info is added before release

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/757#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at keybit.net  Thu Jan 28 00:49:27 2016
From: strk at keybit.net (Sandro Santilli)
Date: Thu, 28 Jan 2016 09:49:27 +0100
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <CADFUPgfLmQL1ttuAuj9oTHqDTV-rhfi7HdN6e_TTit025RkZBg@mail.gmail.com>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
 <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>
 <20160120204045.GA5099@localhost>
 <CADFUPgcp69hGjKKehzi9e8sxezBXjpNSjH0d=ma8Dmn7zEK8Vg@mail.gmail.com>
 <20160120222943.GB19289@localhost>
 <CADFUPgfLmQL1ttuAuj9oTHqDTV-rhfi7HdN6e_TTit025RkZBg@mail.gmail.com>
Message-ID: <20160128084927.GA5197@localhost>

Great work, thanks!
The branch was merged to master and pushed to

  git://git.osgeo.org/php-geos

Supposedly, this should result in the github and gitlab mirrors
to be updated shortly.

NOTE: I've added an ./autogen.sh call so things sound familiar.

I guess next stop would be having a "make check" in place,
and then enabling build bots on github/gitlab (and possibly
also jenkins, if Regina wants to help there).

--strk;

On Mon, Jan 25, 2016 at 06:24:00PM -0500, J Smith wrote:
> Quick update on the PHP extraction folks...
> 
> I've pushed a first pass to
> https://github.com/libgeos/php-geos/tree/phpize . This branch contains
> the following:
> 
> - build files that work with the phpize command.
> 
> - PECL/PEAR-style packaging files.
> 
> - geos.c has been updated to use #ifdefs to work with GEOS features as
> detected by configure. This allows a single PHP extension to handle
> versions of GEOS from 3.3 right up to the current svn trunk. The tests
> have likewise been modified to skip any features not found in the
> current library version, although they haven't been re-written to
> accommodate missing features used directly in testing, like
> setRoundingPrecision and setTrim and the like. Those features could
> perhaps be emulated for the sake of testing, but as it is, they are
> currently not working. Note that 3.2 isn't working yet, as it relies
> on some more recent features like GEOSBufferParams which would need to
> be emulated or otherwise avoided altogether to compile. When I have
> time I'll look into this. For ffi-geos, I basically emulated the
> options hash interface if GEOSBufferParams didn't exist in the library
> being used, so that could likely be done here.
> 
> - I noticed in the TODO file an entry for "Use the re-entrant C-API
> interface" so I've switched over to that using PHP's thread safe
> runtime manager. I haven't had an opportunity to test this out yet in
> a multithreaded environment, just on the CLI, but the code runs and
> the tests all pass for that particular target.
> 
> That's all for now. Cheers.
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From dark.panda+lists at gmail.com  Thu Jan 28 07:05:51 2016
From: dark.panda+lists at gmail.com (J Smith)
Date: Thu, 28 Jan 2016 10:05:51 -0500
Subject: [geos-devel] Extraction of PHP extension into PECL-style package
In-Reply-To: <20160128084927.GA5197@localhost>
References: <CADFUPgdk1z0X4qJVfM3hprFR2bZQYOnt+mqwzBGjnWy27cDADQ@mail.gmail.com>
 <20160120094805.GB4697@localhost>
 <CADFUPgdN4f04upY4Z80JpeoZ-e04Uh51h4dKwq85GcxKb1w2HA@mail.gmail.com>
 <20160120204045.GA5099@localhost>
 <CADFUPgcp69hGjKKehzi9e8sxezBXjpNSjH0d=ma8Dmn7zEK8Vg@mail.gmail.com>
 <20160120222943.GB19289@localhost>
 <CADFUPgfLmQL1ttuAuj9oTHqDTV-rhfi7HdN6e_TTit025RkZBg@mail.gmail.com>
 <20160128084927.GA5197@localhost>
Message-ID: <CADFUPgdMSNGtNY_F3UENVXdXh=7jJ+54hjhJWrLGN19+s44B=g@mail.gmail.com>

The standard PHP build for extensions comes with a `make test` target,
I'll have to check on `make check`. Would `make test` itself work? I
think some work could be done to make the tests a bit more
PEAR-friendly, but as a start, would `make test` work?

On Thu, Jan 28, 2016 at 3:49 AM, Sandro Santilli <strk at keybit.net> wrote:
> Great work, thanks!
> The branch was merged to master and pushed to
>
>   git://git.osgeo.org/php-geos
>
> Supposedly, this should result in the github and gitlab mirrors
> to be updated shortly.
>
> NOTE: I've added an ./autogen.sh call so things sound familiar.
>
> I guess next stop would be having a "make check" in place,
> and then enabling build bots on github/gitlab (and possibly
> also jenkins, if Regina wants to help there).
>
> --strk;
>
> On Mon, Jan 25, 2016 at 06:24:00PM -0500, J Smith wrote:
>> Quick update on the PHP extraction folks...
>>
>> I've pushed a first pass to
>> https://github.com/libgeos/php-geos/tree/phpize . This branch contains
>> the following:
>>
>> - build files that work with the phpize command.
>>
>> - PECL/PEAR-style packaging files.
>>
>> - geos.c has been updated to use #ifdefs to work with GEOS features as
>> detected by configure. This allows a single PHP extension to handle
>> versions of GEOS from 3.3 right up to the current svn trunk. The tests
>> have likewise been modified to skip any features not found in the
>> current library version, although they haven't been re-written to
>> accommodate missing features used directly in testing, like
>> setRoundingPrecision and setTrim and the like. Those features could
>> perhaps be emulated for the sake of testing, but as it is, they are
>> currently not working. Note that 3.2 isn't working yet, as it relies
>> on some more recent features like GEOSBufferParams which would need to
>> be emulated or otherwise avoided altogether to compile. When I have
>> time I'll look into this. For ffi-geos, I basically emulated the
>> options hash interface if GEOSBufferParams didn't exist in the library
>> being used, so that could likely be done here.
>>
>> - I noticed in the TODO file an entry for "Use the re-entrant C-API
>> interface" so I've switched over to that using PHP's thread safe
>> runtime manager. I haven't had an opportunity to test this out yet in
>> a multithreaded environment, just on the CLI, but the code runs and
>> the tests all pass for that particular target.
>>
>> That's all for now. Cheers.
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From foss4g at osgeo.org  Mon Jan 25 23:38:02 2016
From: foss4g at osgeo.org (foss4g at osgeo.org)
Date: Tue, 26 Jan 2016 08:38:02 +0100
Subject: [geos-devel] FOSS4G 2016 Code Sprint Bonn August
Message-ID: <931dabbca421308c049c8b35f7ff8ebe@foss4g2016.org>

Dear developers,

this year, once again, we are following the old tradition of hosting a 
codesprint on the FOSS4G. More precisely, we offer a setting so that  
individual projects can meet for their codesprint. Since projects 
benefit from each other as well, the codesprint will naturally be held 
conjointly at one place.
Unfortunately, circumstances have forced us to divide the codesprint 
timetable-wise.

The first part is scheduled to take place directly before the 
conference, the second immediately after. The first two and a half days 
start on Sunday, August 21, 2016 at around noon and are scheduled to end 
on Tuesday, August 23, 2016 (open end). The 2nd part starts in the 
morning of Saturday, August 27, 2016 and ends on Sunday at 12 pm.

We are happy to have found a really awesome location for you. Codesprint 
and accommodations are combined in one hall. Check out  
http://www.basecamp-bonn.com/ for details about the venue.
Working zones will be created for you in the breakfast area and 
hallways. There’s the option of finding relatively inexpensive sleeping 
accommodations in train sleeping cars, camping buses, classic cars and 
more. Additionally, an outdoor area is available for you to enjoy Bonn’s 
summer weather in August, while working. Healthy and not-so-healthy 
catering of drinks and snacks will be provided by us. Participation in 
codesprint is free of charge. However, overnight stays will have to be 
reserved and paid for by you.

Another hint: the BaseCamp is within walking distance from the 
conference venue (WCCB) and has good access to public transportation –  
the Icebreaker takes place here, too.
You see, it’s worthwhile booking here!

As the accommodations are available to all FOSS4G participants, we will 
make an effort to make advance booking possible for you a few days 
ahead, to ensure you have the opportunity to sleep on-site and wrap up 
the evenings jointly. For that, it’s necessary for you to sign up 
(https://wiki.osgeo.org/wiki/FOSS4G_2016_Code_Sprint) and leave your 
email address so that we can contact you immediately accomodation 
booking is available. We need your sign-up for the planning of snacks 
and drinks, too!

This is open to all who wish to participate in one or more projects. 
There’s always plenty to do – it’s not all about programming. 
Translation, documentation, feedback, discussions, testing – all this is 
also important for  project so everyone is cordially invited to attend 
the codesprints! Registration with the conference is not a prerequisite 
for participation in codesprint.

One thing we’d like to ask you: with an approx. 120 participants 
anticipated, the WLAN capacity will naturally be exhausted at some 
point. Please be sure to avoid huge on-site downloads of data, as this 
could impact the work of others. Thank you!

The Codesprint Organizing Team is looking forward to your coming!

Summarily:

When:
  Part I: Sun 2016-⁠08-⁠21 12:00 noon -⁠ Tue 2016-⁠08-⁠23 (open end)
  Part II: Sat 2016-⁠08-⁠27 -⁠ Sun 2016-⁠08-⁠28 12:00 noon

Where:

  Venue & Accommodation: BaseCamp. (For more informations: 
http://www.basecamp-bonn.com/)
  Nearby Hotel: Bonnox (http://www.bonnox.de/en/)

Questions/⁠Comments/⁠Ideas

  If you have questions/comments/ideas please let us know. Send an email 
to codesprint at foss4g2016.org. You are welcome!

