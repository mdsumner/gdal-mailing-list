From mateusz at loskot.net  Sat Apr  1 21:58:51 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel]createEmptyGeometry()
In-Reply-To: <20060331103512.GU21841@keybit.net>
References: <5A94289A9268514C8D6C0F1FF44BA02796D9CE@venus.VividSolutions.com>	<442C67D3.50408@loskot.net>
	<20060331103512.GU21841@keybit.net>
Message-ID: <442F3DEB.6080301@loskot.net>

strk@refractions.net wrote:
> On Fri, Mar 31, 2006 at 01:20:51AM +0200, Mateusz ?oskot wrote:
>> Martin Davis wrote:
>>> I thought about this, but on the principal of Occam's Razor 
>>> decided just to use an empty GC.  This has the advantage that 
>>> there are fewer cases to handle for both developers and clients.
>> That's clear for me.
>> 
>> strk: The only thing I'd do is to review current impl. of GEOS and 
>> see if there are any possible runtime bugs.
> 
> Code is FULL of assumption about the fact that geometries are not 
> EMTPY... just took a look at LineString.cpp, and the 
> CoordinateSequence pointer is dereferenced always w/out checks.


Do you mean that e.g. LineString::getCoordinates() and
getCoordinatesN(int n) do not check if points collection is not NULL or
index passed to the getCoordinatesN() is not our of range?

Yes, I think it's quite danger. First, getCoordinates() should check if
points collection is null.
Second, in case of getCoordinatesN() we could take similar approach as
used by STL's std::vector:

There are two acccesors:
vector::operator[]()
and
vector::at()

The first one is faster but less safe: if index passed to the subscript
operator is out of range then undefined behaviour occurs, no exception
is thrown.

The second - at() - accessor is safer but slower, because it checks if
index passed is in range and if it isn't then it throws exception of
type of std::out_of_range.

So, my suggestion is to follow this guideline for interface of every
random-access sequence in GEOS.

> Note that the same happens with JTS. Example:
> 
> public Coordinate[] getCoordinates() { return 
> points.toCoordinateArray(); }
> 
> 'points' is not checked for being NULL. In other places it is.
> 
> Now, what does this comport in Java I don't know, but doesn't look 
> correct to me.

Here, in getCoordinates(), it is not required to check for null, because
if points object is null, then NullPointerException is thrown, so no
undefined behaviour occurs and execution state can be fixed properly.

This behaviour is quite different in C++ where dereferencing null
pointer is undefined.

> BTW, still we're all learning something, what would happen by 
> dereferencing a NULL shared_ptr<> ?

Smart pointers do not make any checks here.
This makes them as fast as native pointers.

boost::shared_ptr<Foo> ptr; // default = null pointer of type of Foo
if (0 == ptr)
{
   std::cout << "I'm null! \n";
}
else
{
   std::cout << "Here, I'm cool! \n";
}

> Example: boost::shared_ptr<Geometry> g; g->isEmpty();
> 
> Is an exception thrown ?

No.
Boost Smart pointers introduce exception safety for program execution,
but they also have to perform as good (almost) as native pointers:

http://boost.org/libs/smart_ptr/smart_ptr.htm#Exception_Safety

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sat Apr  1 22:01:08 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel]createEmptyGeometry()
In-Reply-To: <20060331104328.GX21841@keybit.net>
References: <5A94289A9268514C8D6C0F1FF44BA02796D9CE@venus.VividSolutions.com>	<442C67D3.50408@loskot.net>
	<20060331103512.GU21841@keybit.net>
	<20060331104328.GX21841@keybit.net>
Message-ID: <442F3E74.8090204@loskot.net>

strk@refractions.net wrote:
> On Fri, Mar 31, 2006 at 12:35:12PM +0200, strk@refractions.net wrote:
>
>> Note that the same happens with JTS. Example:
>>
>>   public Coordinate[] getCoordinates() {
>>     return points.toCoordinateArray();
>>  }
>>
>> 'points' is not checked for being NULL.
>> In other places it is.
> 
> ...
> 
> Sorry, I had a closer look, at it seems that
> LineString refuses to be contructed with a NULL
> CoordinateSequence. It creates an *empty*
> CoordinateSequence when passed NULL as arg.
> 
> Yet another useless waste of memory, similar
> to the NULL Envelope and NULL Coordinate representations...

Hmm, what is the plan to fix/handle those cases?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Sun Apr  2 01:22:25 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel]createEmptyGeometry()
In-Reply-To: <442F3DEB.6080301@loskot.net>
References: <5A94289A9268514C8D6C0F1FF44BA02796D9CE@venus.VividSolutions.com>
	<442C67D3.50408@loskot.net> <20060331103512.GU21841@keybit.net>
	<442F3DEB.6080301@loskot.net>
Message-ID: <20060402062225.GA51034@keybit.net>

Sorry for the confusion.
I checked again and LineString *refuses* to construct
w/out a CoordinateSequence pointer.
If arg is NULL it creates an EMPTY CoordinateSequence.
So there's no problem in the missing checks.

About general plan. I'm adding assertion checking
for Out-Of-Bounds condition in the random 
access operators. The idea is to abort on developers
errors and throw exceptions on malformed input or
when we can do something about it (like TopologyException 
case).
Note that I'm not proceeding with full code scan, but
adding assertions whenever I review a single file for
some other reason.

Thanks for info on shared_ptr.

--strk;

On Sun, Apr 02, 2006 at 04:58:51AM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > On Fri, Mar 31, 2006 at 01:20:51AM +0200, Mateusz ??oskot wrote:
> >> Martin Davis wrote:
> >>> I thought about this, but on the principal of Occam's Razor 
> >>> decided just to use an empty GC.  This has the advantage that 
> >>> there are fewer cases to handle for both developers and clients.
> >> That's clear for me.
> >> 
> >> strk: The only thing I'd do is to review current impl. of GEOS and 
> >> see if there are any possible runtime bugs.
> > 
> > Code is FULL of assumption about the fact that geometries are not 
> > EMTPY... just took a look at LineString.cpp, and the 
> > CoordinateSequence pointer is dereferenced always w/out checks.
> 
> 
> Do you mean that e.g. LineString::getCoordinates() and
> getCoordinatesN(int n) do not check if points collection is not NULL or
> index passed to the getCoordinatesN() is not our of range?
> 
> Yes, I think it's quite danger. First, getCoordinates() should check if
> points collection is null.
> Second, in case of getCoordinatesN() we could take similar approach as
> used by STL's std::vector:
> 
> There are two acccesors:
> vector::operator[]()
> and
> vector::at()
> 
> The first one is faster but less safe: if index passed to the subscript
> operator is out of range then undefined behaviour occurs, no exception
> is thrown.
> 
> The second - at() - accessor is safer but slower, because it checks if
> index passed is in range and if it isn't then it throws exception of
> type of std::out_of_range.
> 
> So, my suggestion is to follow this guideline for interface of every
> random-access sequence in GEOS.
> 
> > Note that the same happens with JTS. Example:
> > 
> > public Coordinate[] getCoordinates() { return 
> > points.toCoordinateArray(); }
> > 
> > 'points' is not checked for being NULL. In other places it is.
> > 
> > Now, what does this comport in Java I don't know, but doesn't look 
> > correct to me.
> 
> Here, in getCoordinates(), it is not required to check for null, because
> if points object is null, then NullPointerException is thrown, so no
> undefined behaviour occurs and execution state can be fixed properly.
> 
> This behaviour is quite different in C++ where dereferencing null
> pointer is undefined.
> 
> > BTW, still we're all learning something, what would happen by 
> > dereferencing a NULL shared_ptr<> ?
> 
> Smart pointers do not make any checks here.
> This makes them as fast as native pointers.
> 
> boost::shared_ptr<Foo> ptr; // default = null pointer of type of Foo
> if (0 == ptr)
> {
>    std::cout << "I'm null! \n";
> }
> else
> {
>    std::cout << "Here, I'm cool! \n";
> }
> 
> > Example: boost::shared_ptr<Geometry> g; g->isEmpty();
> > 
> > Is an exception thrown ?
> 
> No.
> Boost Smart pointers introduce exception safety for program execution,
> but they also have to perform as good (almost) as native pointers:
> 
> http://boost.org/libs/smart_ptr/smart_ptr.htm#Exception_Safety
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Sun Apr  2 01:26:27 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel]createEmptyGeometry()
In-Reply-To: <442F3E74.8090204@loskot.net>
References: <5A94289A9268514C8D6C0F1FF44BA02796D9CE@venus.VividSolutions.com>
	<442C67D3.50408@loskot.net> <20060331103512.GU21841@keybit.net>
	<20060331104328.GX21841@keybit.net> <442F3E74.8090204@loskot.net>
Message-ID: <20060402062627.GB51034@keybit.net>

On Sun, Apr 02, 2006 at 05:01:08AM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > On Fri, Mar 31, 2006 at 12:35:12PM +0200, strk@refractions.net wrote:
> >
> >> Note that the same happens with JTS. Example:
> >>
> >>   public Coordinate[] getCoordinates() {
> >>     return points.toCoordinateArray();
> >>  }
> >>
> >> 'points' is not checked for being NULL.
> >> In other places it is.
> > 
> > ...
> > 
> > Sorry, I had a closer look, at it seems that
> > LineString refuses to be contructed with a NULL
> > CoordinateSequence. It creates an *empty*
> > CoordinateSequence when passed NULL as arg.
> > 
> > Yet another useless waste of memory, similar
> > to the NULL Envelope and NULL Coordinate representations...
> 
> Hmm, what is the plan to fix/handle those cases?

Not considering it a bug as far as JTS does the same.
Priority is on correctness. Performance and scalability
comes next, and I think should start from inside (less
closer to API). Good places to look at for memory usage
reduction is in geomgraph namespace, classes like Edge
and SegmentString, for example, currently keeping own
copies of the polymorphic CoordinateSequence, in turn
keeping own copies of Coordinates, could use pointers
to existing Coordinates instead.

Let's have the Unit tests first, I'd go on with finishing
port of JTS-1.7 (Simplify package).
When we're happy with correctness and completeness we
can talk about performance tuning.

--strk;

From mateusz at loskot.net  Sun Apr  2 10:31:15 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] GeometryFactory - call for explanation
In-Reply-To: <20060331103639.GV21841@keybit.net>
References: <442C8155.9060108@loskot.net>
	<442C83FA.3000503@interserv.com>	<20060331080604.GL21841@keybit.net>
	<442CE8E5.2080601@loskot.net> <20060331103639.GV21841@keybit.net>
Message-ID: <442FE033.1050306@loskot.net>

strk@refractions.net wrote:
> On Fri, Mar 31, 2006 at 10:31:33AM +0200, Mateusz ??oskot wrote:
>> strk@refractions.net wrote:
>>> I'm in favour of this, but it would be an immutable instance, 
>>> using a FLOATING PrecisionModel.
>> Do you mean you want to provide single global common factory?
> 
> Yes, but not preventing the construction of new ones. BTW, in case we
>  use shared_ptr<> should we prevent direct construction by using the
>  'named construction idiom' ?
> 

Do you mean to prevent user from creating instance of factory using new
operator?

Foo* p = new Foo();

AFAIK there is no special recommendation to use named ctor idiom when
using smart pointers.
It depends on the design but what we can be sure of is explicit
construction of every shared_ptr. Does mean, you will get compiler
errors when trying to do something like this:

void foo(boost::shared_ptr<Foo> p);

// Somewhere in the program
Foo* p = new Foo(2);
foo(p);
delete p;

error: cannot convert parameter 1 from 'Foo *' to 'boost::shared_ptr<T>'
Constructor for class 'boost::shared_ptr<T>' is declared 'explicit'

Another question is if objects we are going to manage with smart
pointers will always live on the heap.
If they will, then it's a good practice to make ctor private/protected
and expose only named ctor e.g. Foo::create()
Certainly, the create() constructor should return shared_ptr.

Please, not, there are quite many possibilities, so I'd prefer to
discuss every such in details than to answer "what to do in general" :-)

Here is small example ready to experiment with:

/////////////////////////////////////////////////////////////////
#include <iostream>
#include <boost/shared_ptr.hpp>
using namespace std;

class Foo
{
public:
   ~Foo() { cout << "Foo::~Foo()\n"; }
   static boost::shared_ptr<Foo> create(int x)
   {
      boost::shared_ptr<Foo> ps(new Foo(x));
      return ps;
   }
   int x() const { return x_; }

private:
   int x_;
   Foo() : x_(0)  { cout << "Foo::Foo()\n"; }
   Foo(int x) : x_(x)  { cout << "Foo::Foo(int x)\n"; }
};

int main()
{
   boost::shared_ptr<Foo> ptr = Foo::create(8);
   cout << ptr->x() << endl;

   return 0;
}
/////////////////////////////////////////////////////////////////

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From bartvde at xs4all.nl  Sun Apr  2 11:24:53 2006
From: bartvde at xs4all.nl (Bart van den Eijnden (OSGIS))
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
Message-ID: <442FECC5.7020603@xs4all.nl>

Hi list,

I've got a problem trying to compile geos 2.2.1 (which is part of 
Mapserver's buildkit for Windows) using Visual Studio 8:

RepeatedPointTester.obj : error LNK2001: unresolved external symbol 
__imp_?name@
type_info@@QBEPBDXZ
planarDirectedEdge.obj : error LNK2001: unresolved external symbol 
__imp_?name@t
ype_info@@QBEPBDXZ
Geometry.obj : error LNK2019: unresolved external symbol 
__imp_?name@type_info@@
QBEPBDXZ referenced in function "private: virtual int __thiscall 
geos::Geometry:
:getClassSortIndex(void)const " (?getClassSortIndex@Geometry@geos@@EBEHXZ)
GeometryFactory.obj : error LNK2001: unresolved external symbol 
__imp_?name@type
_info@@QBEPBDXZ
GeometryGraph.obj : error LNK2001: unresolved external symbol 
__imp_?name@type_i
nfo@@QBEPBDXZ
OffsetCurveSetBuilder.obj : error LNK2001: unresolved external symbol 
__imp_?nam
e@type_info@@QBEPBDXZ
geos.dll : fatal error LNK1120: 1 unresolved externals
NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
8\VC\BIN\l
ink.exe"' : return code '0x460'
Stop.

Is anybody able to help? Thanks in advance.

Best regards,
Bart

-- 
Bart van den Eijnden
OSGIS, Open Source GIS
http://www.osgis.nl


From strk at refractions.net  Sun Apr  2 13:07:27 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <442FECC5.7020603@xs4all.nl>
References: <442FECC5.7020603@xs4all.nl>
Message-ID: <20060402170727.GA58761@keybit.net>

We're about to release 2.2.2.
Could you test current candidate from CVS ?
You should access the 'branch-2-2' tag.

TIA

--strk;

On Sun, Apr 02, 2006 at 05:24:53PM +0200, Bart van den Eijnden (OSGIS) wrote:
> Hi list,
> 
> I've got a problem trying to compile geos 2.2.1 (which is part of 
> Mapserver's buildkit for Windows) using Visual Studio 8:
> 
> RepeatedPointTester.obj : error LNK2001: unresolved external symbol 
> __imp_?name@
> type_info@@QBEPBDXZ
> planarDirectedEdge.obj : error LNK2001: unresolved external symbol 
> __imp_?name@t
> ype_info@@QBEPBDXZ
> Geometry.obj : error LNK2019: unresolved external symbol 
> __imp_?name@type_info@@
> QBEPBDXZ referenced in function "private: virtual int __thiscall 
> geos::Geometry:
> :getClassSortIndex(void)const " (?getClassSortIndex@Geometry@geos@@EBEHXZ)
> GeometryFactory.obj : error LNK2001: unresolved external symbol 
> __imp_?name@type
> _info@@QBEPBDXZ
> GeometryGraph.obj : error LNK2001: unresolved external symbol 
> __imp_?name@type_i
> nfo@@QBEPBDXZ
> OffsetCurveSetBuilder.obj : error LNK2001: unresolved external symbol 
> __imp_?nam
> e@type_info@@QBEPBDXZ
> geos.dll : fatal error LNK1120: 1 unresolved externals
> NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
> 8\VC\BIN\l
> ink.exe"' : return code '0x460'
> Stop.
> 
> Is anybody able to help? Thanks in advance.
> 
> Best regards,
> Bart
> 
> -- 
> Bart van den Eijnden
> OSGIS, Open Source GIS
> http://www.osgis.nl
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Sun Apr  2 13:08:34 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] GeometryFactory - call for explanation
In-Reply-To: <442FE033.1050306@loskot.net>
References: <442C8155.9060108@loskot.net> <442C83FA.3000503@interserv.com>
	<20060331080604.GL21841@keybit.net> <442CE8E5.2080601@loskot.net>
	<20060331103639.GV21841@keybit.net> <442FE033.1050306@loskot.net>
Message-ID: <20060402170834.GB58761@keybit.net>

On Sun, Apr 02, 2006 at 04:31:15PM +0200, Mateusz ??oskot wrote:
...
> Another question is if objects we are going to manage with smart
> pointers will always live on the heap.
> If they will, then it's a good practice to make ctor private/protected
> and expose only named ctor e.g. Foo::create()
> Certainly, the create() constructor should return shared_ptr.
> 
> Please, not, there are quite many possibilities, so I'd prefer to
> discuss every such in details than to answer "what to do in general" :-)

Right. Let's discuss this *after* we complete port 
and unit tests.

--strk;

From listv at rsc.fomi.hu  Sun Apr  2 14:42:06 2006
From: listv at rsc.fomi.hu (Laszlo Istvan)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] "Hard" topology test case
Message-ID: <Pine.LNX.4.64.0604022041290.5087@twinpix2>


Hi, Paul,

To continue our former discussion with a wider audience: I have 
found a small example which still causes GEOS Intersection to 
generate invalid (self-intersecting) output from valid input.

PostgreSQL 8.0.1 on i686-pc-linux-gnu

POSTGIS="1.1.2" GEOS="3.0.0cvs-CAPI-1.1.1"
PROJ="Rel. 4.4.9, 29 Oct 2004" USE_STATS

Both PostGIS and GEOS are the CVS version of 31 March.

I have included below the WKB of the two polygons (broken at 
every 80th characters). They intersect along a rather narrow 
strip.

I hope it helps in the debugging and improving the topology 
code, and I will try to find further samples of acceptable 
sizes.

Best regards,
Istvan Laszlo

On Tue, 21 Mar 2006, Paul Ramsey wrote:

> By all means, open the discussion. At this point we are really trying to get 
> as many cases as possible in our "library of really hard things".
> P
>

01030000000100000008000000AC86FF1FC6F8254100000000E89D0041380EF9FE79F925416F9092
F857A20041E6ADF7FE4BFA25417E7C8BF88FA60041A919EAFE6302264172D74AF817CD0041FB3EE8
4F640626410000000068DC004100000000DA0626410000000068DC004100000000DA062641000000
00E89D0041AC86FF1FC6F8254100000000E89D0041

01030000000100000018000000168BC5A2D7FE25410000000068C3004100000000FCFE2541000000
C0C8C20041000000E027FF25410000004065C20041000000A047FF2541000000A034C20041000000
605EFF2541000000C0EEC1004100000000BAFF2541000000A0A5C0004160E9E55DC1FF25414D5FB9
518CC0004198536655CAFF254170C769846DC00041000000209BFF2541000000A0A5BF0041000000
A076FF254100000080FEBE00410000000041FF2541000000C020BE00410000004039FF2541000000
8000BE0041000000E020FF2541000000E089BD0041F9E006050BFF25416B82F03B28BD0041000000
E0EAFE2541000000A098BC00419827B70BC3FE2541BA1E1398D1BB00410000004069FE2541000000
E010BA00410000000030FE25410000006015B9004183C61E772FFE2541271E1A0513B900411F2E34
7D17FE25414446286AA9B80041000000400FFE25410000002085B80041000000007AFD25417AAC21
E649BA0041000000007AFD25410000000068C30041168BC5A2D7FE25410000000068C30041


From mateusz at loskot.net  Sun Apr  2 16:10:07 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <442FECC5.7020603@xs4all.nl>
References: <442FECC5.7020603@xs4all.nl>
Message-ID: <44302F9F.5070205@loskot.net>

Bart van den Eijnden (OSGIS) wrote:
> Hi list,
> 
> I've got a problem trying to compile geos 2.2.1 (which is part of 
> Mapserver's buildkit for Windows) using Visual Studio 8:
> 
> RepeatedPointTester.obj : error LNK2001: unresolved external symbol 
> __imp_?name@ type_info@@QBEPBDXZ planarDirectedEdge.obj : error
> LNK2001: unresolved external symbol __imp_?name@t ype_info@@QBEPBDXZ 
> Geometry.obj : error LNK2019: unresolved external symbol 
> __imp_?name@type_info@@ QBEPBDXZ referenced in function "private:
> virtual int __thiscall geos::Geometry: :getClassSortIndex(void)const
> " (?getClassSortIndex@Geometry@geos@@EBEHXZ) GeometryFactory.obj :
> error LNK2001: unresolved external symbol __imp_?name@type 
> _info@@QBEPBDXZ GeometryGraph.obj : error LNK2001: unresolved
> external symbol __imp_?name@type_i nfo@@QBEPBDXZ 
> OffsetCurveSetBuilder.obj : error LNK2001: unresolved external symbol
>  __imp_?nam e@type_info@@QBEPBDXZ geos.dll : fatal error LNK1120: 1
> unresolved externals NMAKE : fatal error U1077: '"C:\Program
> Files\Microsoft Visual Studio 8\VC\BIN\l ink.exe"' : return code
> '0x460' Stop.
> 
> Is anybody able to help? Thanks in advance.
> 

Please, try to build using my version if makefile.vc + platform,h and
vesrion.h files:

http://mateusz.loskot.net/projects/geos/

AFAIK it did help some users to build GEOS 2.2.1 using VC++ 8.0.

Please, let me know if you've managed or not to build.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 16:38:09 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] GeometryFactory - call for explanation
In-Reply-To: <20060402170834.GB58761@keybit.net>
References: <442C8155.9060108@loskot.net>
	<442C83FA.3000503@interserv.com>	<20060331080604.GL21841@keybit.net>
	<442CE8E5.2080601@loskot.net>	<20060331103639.GV21841@keybit.net>
	<442FE033.1050306@loskot.net> <20060402170834.GB58761@keybit.net>
Message-ID: <44303631.50805@loskot.net>

strk@refractions.net wrote:
> On Sun, Apr 02, 2006 at 04:31:15PM +0200, Mateusz ??oskot wrote:
> ...
>> Another question is if objects we are going to manage with smart
>> pointers will always live on the heap.
>> If they will, then it's a good practice to make ctor private/protected
>> and expose only named ctor e.g. Foo::create()
>> Certainly, the create() constructor should return shared_ptr.
>>
>> Please, not, there are quite many possibilities, so I'd prefer to
>> discuss every such in details than to answer "what to do in general" :-)
> 
> Right. Let's discuss this *after* we complete port 
> and unit tests.

Yes.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Sun Apr  2 17:44:12 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <20060402170727.GA58761@keybit.net>
References: <442FECC5.7020603@xs4all.nl> <20060402170727.GA58761@keybit.net>
Message-ID: <443045AC.4080204@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060402/868dc79d/smime.bin
From cfis at interserv.com  Sun Apr  2 18:03:47 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] Geos 2.2.2 tests broken
Message-ID: <44304A43.4060700@interserv.com>

The Geos 2.2.2 XmlTester doesn't compile on MinGW.

Offending code is in indexSweepline.h, line 62.

class indexSweepLineEvent {
public:
    enum {
        INSERT = 1,
        DELETE             <------- Breaks
    };

The error:

In file included from ../..//source/headers/geos/opValid.h:67,
                 from XMLTester.cpp:41:
../..//source/headers/geos/indexSweepline.h:62: error: expected 
identifier before numeric constant

Not sure if this is important, but thought I'd bring it up.  I'm using 
g++ 3.4.5 on Windows XP under MingW.

Thanks,

Charlie

-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060402/46579ae7/smime.bin
From cfis at interserv.com  Sun Apr  2 18:05:09 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44302F9F.5070205@loskot.net>
References: <442FECC5.7020603@xs4all.nl> <44302F9F.5070205@loskot.net>
Message-ID: <44304A95.6030406@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060402/23f5c40e/smime.bin
From mateusz at loskot.net  Sun Apr  2 18:48:31 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44304A95.6030406@interserv.com>
References: <442FECC5.7020603@xs4all.nl> <44302F9F.5070205@loskot.net>
	<44304A95.6030406@interserv.com>
Message-ID: <443054BF.7050503@loskot.net>

Charlie Savage wrote:
> No problems here - but I'm using my own Visual Studio 8 project file
> (the one shipped is broken).
> 

Yes, I use my own project solution too.

For those looking for VC++ project files for GEOS 3.0.0 (CVS),
here is latest version:

http://mateusz.loskot.net/projects/geos/

It includes following projects:
- geos_lib - GEOS static library
- geos_unit - unit tests
- geos_xmltester - xmltester app

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 18:52:14 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] Geos 2.2.2 tests broken
In-Reply-To: <44304A43.4060700@interserv.com>
References: <44304A43.4060700@interserv.com>
Message-ID: <4430559E.5000504@loskot.net>

Charlie Savage wrote:
> The Geos 2.2.2 XmlTester doesn't compile on MinGW.
> 
> Offending code is in indexSweepline.h, line 62.
> 
> class indexSweepLineEvent { public: enum { INSERT = 1, DELETE
> <------- Breaks };
> 
> The error:
> 
> In file included from ../..//source/headers/geos/opValid.h:67, from
> XMLTester.cpp:41: ../..//source/headers/geos/indexSweepline.h:62:
> error: expected identifier before numeric constant
> 
> Not sure if this is important, but thought I'd bring it up.  I'm
> using g++ 3.4.5 on Windows XP under MingW.

Yup, this is known bug.
It has been fixed in GEOS CVS.
The problem is with DELETE enumerator name.
DELETE is used by Windows Platform SDK headers - winnt.h - where it is
defined as:

#define DELETE (0x00010000L)

This is problem with macro evil, so it was fixed about month ago:

SweepLineEvent.cpp
Revision 1.8  2006/03/02 14:53:40  strk
SweepLineEvent::DELETE=>DELETE_EVENT, INSERT=>INSERT_EVENT (#45)

NOTE:
I'd suggest to rename it in GEOS 2.2.0 too as a backport fix.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Sun Apr  2 19:05:10 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] Geos 2.2.2 tests broken
In-Reply-To: <4430559E.5000504@loskot.net>
References: <44304A43.4060700@interserv.com> <4430559E.5000504@loskot.net>
Message-ID: <443058A6.2090706@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060402/e493a613/smime.bin
From mateusz at loskot.net  Sun Apr  2 19:29:32 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] GeometryFactory - call for explanation
In-Reply-To: <44303748.8030107@loskot.net>
References: <4430370B.4060501@loskot.net> <44303748.8030107@loskot.net>
Message-ID: <44305E5C.9010105@loskot.net>

Mateusz ?oskot wrote:
> strk@refractions.net wrote: On Fri, Mar 31, 2006 at 03:45:25AM +0200,
>  Mateusz ?oskot wrote:
> 
>> I'd suggest to use "Shared Smart Pointer" semantic to manage 
>> geometry factories and their relations to geometry objects. One 
>> possibility is to use boost::shared_ptr (no linking to ext. libs 
>> required, just including one header, as <vector> or <list>).
> 
> I agree on using shared pointer, but I don't think it takes a single
>  header.

You are right that smart pointer need more than single file to be
shipped with them, but only one file needs to be included in client code.

I have extracted Boost's smart pointers and it contains *only* headers.
It's not so small package, around 2.7 MB, but if you want to use e.g.
shared_ptr you need to inclyde *only* <boost/shared_ptr.hpp> file.

So, for now, it is possible to include smart pointesr to GEOS source
tree if you don't want to force users to download/install them theirself.

> If you want to inspect this please do, and also remember Frank 
> request of making it possible for builders to choose between the 
> GEOS-embedded version and an external version of them (acting on the
>  -I switch would be enough).

Yes, that's what I'm talking about.
Boost provides tool called BCP. You can use this tool to extract a
subset of libraries you want to use and ship them to users.

>> Why not to use singleton or when to use it?
>> 
>> Singleton is another option but *does* *not* apply to the current 
>> design, according to assumptions already confirmed.
> 
> I might have used the wrong term, but by Singleton I meant a 
> "default" instance of a GeometryFactory, for use by calls w/out an 
> explicit provision of it. I don't know if it's worth the trouble, 
> when using shared_ptr. Probably not.


Obsiously, well known is that Singleton is a single
instance of some class.

What I understand as a default factory that is not a Singleton?

My understanding of the idea of default factory that is not a
singleton is that it is not a single instance shared between geometries
but it is represented as one-or-more factories having the same default
state.

It is a factory that is created with well known and well defined state.
Such factory can be created many times for many geometries, e.g.:

default_factory1 ---> geometry1

default_factory2 ---> geometry2

default_factory3 ---> geometry3

All three default factories are created separately and are separate
objects. They just has the same state and provide same conditions for
creating geoemtries.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 20:45:56 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel]createEmptyGeometry()
In-Reply-To: <20060402062627.GB51034@keybit.net>
References: <5A94289A9268514C8D6C0F1FF44BA02796D9CE@venus.VividSolutions.com>	<442C67D3.50408@loskot.net>
	<20060331103512.GU21841@keybit.net>	<20060331104328.GX21841@keybit.net>
	<442F3E74.8090204@loskot.net> <20060402062627.GB51034@keybit.net>
Message-ID: <44307044.9050904@loskot.net>

strk@refractions.net wrote:
> On Sun, Apr 02, 2006 at 05:01:08AM +0200, Mateusz ??oskot wrote:
>> strk@refractions.net wrote:
>>> On Fri, Mar 31, 2006 at 12:35:12PM +0200, strk@refractions.net 
>>> wrote:
>>> 
>>>> Note that the same happens with JTS. Example:
>>>> 
>>>> public Coordinate[] getCoordinates() { return 
>>>> points.toCoordinateArray(); }
>>>> 
>>>> 'points' is not checked for being NULL. In other places it is.
>>> ...
>>> 
>>> Sorry, I had a closer look, at it seems that LineString refuses 
>>> to be contructed with a NULL CoordinateSequence. It creates an 
>>> *empty* CoordinateSequence when passed NULL as arg.
>>> 
>>> Yet another useless waste of memory, similar to the NULL Envelope
>>>  and NULL Coordinate representations...
>> Hmm, what is the plan to fix/handle those cases?
> 
> Not considering it a bug as far as JTS does the same. Priority is on 
> correctness. Performance and scalability comes next, and I think 
> should start from inside (less closer to API). Good places to look at
>  for memory usage reduction is in geomgraph namespace, classes like 
> Edge and SegmentString, for example, currently keeping own copies of 
> the polymorphic CoordinateSequence, in turn keeping own copies of 
> Coordinates, could use pointers to existing Coordinates instead.
> 
> Let's have the Unit tests first,


Agreed. I revealed it as a quite big piece of code to be written, so
I've not finished yet. I'm doing my best. I estimate Wednesday as a
deadline.

> I'd go on with finishing port of JTS-1.7 (Simplify package). When
> we're happy with correctness and completeness we can talk about
> performance tuning.

Agreed.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 20:47:05 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel]createEmptyGeometry()
In-Reply-To: <20060402062225.GA51034@keybit.net>
References: <5A94289A9268514C8D6C0F1FF44BA02796D9CE@venus.VividSolutions.com>	<442C67D3.50408@loskot.net>
	<20060331103512.GU21841@keybit.net>	<442F3DEB.6080301@loskot.net>
	<20060402062225.GA51034@keybit.net>
Message-ID: <44307089.1070506@loskot.net>

strk@refractions.net wrote:
> Sorry for the confusion.
> I checked again and LineString *refuses* to construct
> w/out a CoordinateSequence pointer.
> If arg is NULL it creates an EMPTY CoordinateSequence.
> So there's no problem in the missing checks.

OK.

> About general plan. I'm adding assertion checking
> for Out-Of-Bounds condition in the random 
> access operators. The idea is to abort on developers
> errors and throw exceptions on malformed input or
> when we can do something about it (like TopologyException 
> case).

Good plan :-)

> Note that I'm not proceeding with full code scan, but
> adding assertions whenever I review a single file for
> some other reason.

OK.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 21:08:52 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] GeometryFactory - call for explanation
In-Reply-To: <20060331101240.GP21841@keybit.net>
References: <442C8155.9060108@loskot.net>
	<20060331080727.GM21841@keybit.net>	<442CEA6C.2010907@loskot.net>
	<20060331101240.GP21841@keybit.net>
Message-ID: <443075A4.5070005@loskot.net>

strk@refractions.net wrote:
> On Fri, Mar 31, 2006 at 10:38:04AM +0200, Mateusz ??oskot wrote:
>> strk@refractions.net wrote:
>>> All three assumptions are correct. I'd add in (1) that each 
>>> instance MUST have a GeometryFactory assigned.
>> 
>> OK, so let default constructor(s) of geometry class(es) get 
>> factorry from external source - passed as a ctor param - or if no 
>> factory is passed, then Geometry ctor calls 
>> GeometryFactory::defaultFactory().
> 
> Yes, this is how I think it should work.

It should work well.

> Note, though, that I'm not sure this is the right time for it. I 
> prepared the road for these kind of changes by providing a C api, but
>  not everybody switched yet. [...]

I understand and agree.
As you said, first we should focus on basic refactoring, ad'hoc fixes of
serious bugs we'll find and finishing Unit Tests.
I believe this week the plan will be finished regarding Unit Tests.

Next, we could create a branch for next step of refactoring that will
include deeper changes like incorporating smatr pointers, changing the
GeometryFactory etc.

Regarding the branch. May be it could be good time (after the first
stage we are in now, but before the next step) to switch to SVN?

> For example: do you guys think Geometry and subclasses should have 
> PRIVATE (or protected) constructors ? If we can guarantee that no 
> clients build geometry by their constructors, but keep using the 
> Factory idiom, we have no problem changing the constructors.

The main idea behind the "named constructor idiom" I know is to prevent
user from creating object directly, on stack or heap, using common
constructors. The second idea is to prevent users from creating object
on the stack, if we wish because of some design decisions.
Then, named ctor can assure the object will be created only on the heap.

In our case (yet another option), we could prevent user from creating
Geometry directly but only using GeometryFactory.

What is the best solution for GEOS?
What are the design decisions we should follow?
I'm not sure for now, because of lack of knowledge behind JTS design.

> Also, how can a GeometryFactory know where is shared_ptr is in order
>  to pass it to a Geometry Constructor ? I mean, making *this* change
>  likely breaks *every* GEOS client.

I don't understand.

In general, shared_ptr idea is to free users from knowning *where* is
the object and *who* is using it. Simply, object managed by shared_ptr
is there where it is use and it will live as long as it is required.

So, as the name suggests, object managed by shared pointer is shared
between a number of objects. So, those client objet also share the state
of object managed by shared pointer. If this state changes, then all
clients see that change.

So, how those rules apply to the problem above?

> There are a lot of other places that could take advantage of 
> boost::shared_ptr<>, and many are to be considered "internal". So my
>  strategy is to first "reduce" the API to be able to tell what's 
> "external" and what's "internal". Then, introduce shared_ptr in the 
> "internal" part, and "finally" reach the API, likey reintroducing a 
> form of ABI compatibility control.

Good idea.

> About the ABI comp. control: what I decided some time ago was to ship
>  libgeos-Maj.min.mic.so, practically making *every* release unused by
>  existing code. This is what I call "drop" the ABI compatibility 
> control.
> 
> The alternative would be shipping next release as libgeos.so.3.0.0.so
>  and "defend" the ABI. Since it seems there are more people involved
>  in development now, do you really think this would be possible in 2
>  months ?

I understand it but I think GEOS users are able to answer it best.
>From my point of view (a library hacker) the situation is less complex.

> To state it more clearly: do you think 2 months are enough to give 
> geos a *new* *backward-incompatible* but *abi-stable* interface ? I'm
>  personally NOT sure, and I think *reducing* the interface would 
> already be a good step forward.

Hmm, it depends on how many people could work on it.
I don't know how many developers work on GEOS currently.

Now, I'm not able to work on it in full time, so as you - Sandro - can
see, there may be some delays as with e.g. Unit Tests that should be
finished 1-2 weeks ago as we talked.
If I would be able to work on GEOS 8-10 hours a day, then it was
finished in 3-4 days.

Similarly, if there are 2-3 developers able to work on GEOS 8 hours a
day, then that 2 months period could be anough to make next generation
of GEOS stable.

I think GEOS PSC can decide.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 22:23:18 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] Envelope of empty Polygon
In-Reply-To: <20060331102144.GR21841@keybit.net>
References: <442CC8AB.3070205@loskot.net> <20060331102144.GR21841@keybit.net>
Message-ID: <44308716.5070101@loskot.net>

strk@refractions.net wrote:
> On Fri, Mar 31, 2006 at 08:14:03AM +0200, Mateusz ??oskot wrote:
>> Hi,
>>
>> I'm bringing next subject to discuss.
>>
>> The main question is what should be returned by getEnvelope()
>> called on empty polygon?
>>
>> Here is simple use case:
>>
>> GeometryFactory factory(...);
>> //...
>>
>> // create empty polygon
>> Polygon* poly = factory.createPolygon();
>>
>> // request for its envelope
>> Geometry* geo = 0;
>> geo = poly->getEnvelope();
>> geo->isEmpty(); // <--- THE PROBLEM
>>
>>
>> As I revealed, when exterior ring is empty geometry,
>> getEnvelope() returns or creates instance of envelope object.
>> This object is initialized by Envelope::setToNull().
>> So, returned envelope for empty polygon has following coordinates:
>> minx = -1.0
>> maxx = 0.0
>> miny = -1.0
>> maxx = 0.0
>>
>> Is this correct behaviour?
>> Is empty polygon assumed to return non-empty envelope as above?
> 
> Doens't seem correct.
> Envelope does have a NULL representation, which is
> minx > maxx
> miny > maxy
> See Envelope::isNull()


Ups! It was my fail.
As I see, Envelope::setToNull() seems to be ok, as you said above:

void Envelope::setToNull()
{
   minx=0;
   maxx=-1;
   miny=0;
   maxy=-1;
}


> Generally speaking I'm sure NULL pointers would be much more
> appropriately used.

Yes, I think so.

> Also, for Geometry, check out  getEnvelopeInternal().
> That should return a pointer to internal cache, thus caller
> wouldn't need to free the result.
> JTS getEnvelope() is really what getEnvelopeInternal() is for
> GEOS.
> I'd drop the copying one and rename the *Internal() one.

Here, shared_ptr could be nice.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 22:25:52 2006
From: mateusz at loskot.net (=?ISO-8859-2?Q?Mateusz_=A3oskot?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] Envelope of empty Polygon
In-Reply-To: <5A94289A9268514C8D6C0F1FF44BA02796D9DB@venus.VividSolutions.com>
References: <5A94289A9268514C8D6C0F1FF44BA02796D9DB@venus.VividSolutions.com>
Message-ID: <443087B0.50307@loskot.net>

Martin Davis wrote:
> JTS defines a concept of a null Envelope object state for precisely
> this reason.
> 
> The reason for returning a null Envelope object rather than null is
> that in my experience most callers of getEnvelopeInternal want
> something they can test against.  If null was returned calling code
> would need a special check for every call.
> 
> This is the same reason that empty Geometries are defined.  Often it
> simplifies code if there is something there, rather than null.

I understand it.
This rationale sounds good.

strk:
So, I'd cancel my agreement to return null pointer.
Martin's explanation is clear and I'd stick to operate on empty
Geometries rather than null pointers.
What do you think?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr  2 22:28:26 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] Envelope of empty Polygon
In-Reply-To: <20060331175602.GA35635@keybit.net>
References: <442CC8AB.3070205@loskot.net> <20060331102144.GR21841@keybit.net>
	<20060331175602.GA35635@keybit.net>
Message-ID: <4430884A.9030306@loskot.net>

strk@refractions.net wrote:
> On Fri, Mar 31, 2006 at 12:21:44PM +0200, strk@refractions.net wrote:
> 
>> Also, for Geometry, check out  getEnvelopeInternal().
>> That should return a pointer to internal cache, thus caller
>> wouldn't need to free the result.
>> JTS getEnvelope() is really what getEnvelopeInternal() is for
>> GEOS.
>> I'd drop the copying one and rename the *Internal() one.
> 
> ERRATA CORRIGE.
> 
> getEnvelopeInternal *is* a JTS method.
> It returns a cached Envelope.
> Always, never a NULL pointer
> (rather its NULL representation for EMPTY geoms).

Yes.

> Note that a NULL pointer, in this case
> is used to detect a not-yet-computed
> cache.

But null pointer should not cross API boundaries.
I mean, user is not required to check for null pointers regarding
Envelope, right?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Sun Apr  2 22:50:08 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:08 2007
Subject: [geos-devel] Geos 3 build issues on Windows
Message-ID: <44308D60.6000109@interserv.com>

Some geos 3 build issues on Windows with VC++ 8.0 (using latest CVS head)

1.  source/noding/snapround/MCIndexSnapRounder.cpp needs to #include 
<algorithm> for the std::for_each method on line 92

2.  source/index/strtree/STRtree.cpp needs to include #include 
<algorithm> for the std::sort method on line 208.

3.  RobustLineIntersector and NonRobustLineIntersector define classes 
that are not declared anywhere.

4.  There are various files that appear to do nothing:

PolygonExtracter.obj : warning LNK4221: no public symbols found; archive 
member will be inaccessible
PointExtracter.obj : warning LNK4221: no public symbols found; archive 
member will be inaccessible
LinearComponentExtracter.obj : warning LNK4221: no public symbols found; 
archive member will be inaccessible
CoordinateSequenceFactory.obj : warning LNK4221: no public symbols 
found; archive member will be inaccessible
UnsupportedOperationException.obj : warning LNK4221: no public symbols 
found; archive member will be inaccessible
IllegalArgumentException.obj : warning LNK4221: no public symbols found; 
archive member will be inaccessible
AssertionFailedException.obj : warning LNK4221: no public symbols found; 
archive member will be inaccessible

For MinGw - still doesn't build.  Same link error:

c:\Development\MinGW\mingw32\bin\ld.exe: BFD 2.16.91 20060119 assertion 
fail ../../src/bfd/cofflink.c:1926
make[2]: *** [libgeos.la] Error 5
make[2]: Leaving directory `/usr/src/geos/source'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/usr/src/geos/source'
make: *** [all-recursive] Error 1

Causes ld to have a segmentation fault.

Thanks,

Charlie


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060402/e3481285/smime.bin
From mateusz at loskot.net  Sun Apr  2 23:08:04 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <44308D60.6000109@interserv.com>
References: <44308D60.6000109@interserv.com>
Message-ID: <44309194.20509@loskot.net>

Hi Charlie,

By the way, there is a Bug Tracker for GEOS that is a better place to
report bugs because then it will be guaranteed to
not to forgot about them ;-)

http://postgis.refractions.net/bugs/

Charlie Savage wrote:
> Some geos 3 build issues on Windows with VC++ 8.0 (using latest CVS
> head)
> 
> 1.  source/noding/snapround/MCIndexSnapRounder.cpp needs to #include 
> <algorithm> for the std::for_each method on line 92
> 
> 2.  source/index/strtree/STRtree.cpp needs to include #include 
> <algorithm> for the std::sort method on line 208.

Are you sure those files do not include <algorithm> in latest CVS?
I did update (cvs update -P -d) my sandbox today and GEOS compiles well.
Here you can see that those files include (revision nr visible):

http://mateusz.loskot.net/chwila/MCIndexSnapRounder.png
http://mateusz.loskot.net/chwila/STRtree.png


> 3.  RobustLineIntersector and NonRobustLineIntersector define classes
>  that are not declared anywhere.

Yes. You have to remove those files from your project. Those files have
been left for some archive reason but should not be compiled.


> 4.  There are various files that appear to do nothing:
> 
> PolygonExtracter.obj : warning LNK4221: no public symbols found;
> archive member will be inaccessible PointExtracter.obj : warning
> LNK4221: no public symbols found; archive member will be inaccessible
>  LinearComponentExtracter.obj : warning LNK4221: no public symbols
> found; archive member will be inaccessible 
> [...]

You're right. Those files are empty and look like this:

namespace geos {
namespace geom { // geos.geom
namespace util { // geos.geom.util

} // namespace geos.geom.util
} // namespace geos.geom
} // namespace geos

strk:
Will those files be used for any purpose?

> For MinGw - still doesn't build.  Same link error:
> 
> c:\Development\MinGW\mingw32\bin\ld.exe: BFD 2.16.91 20060119
> assertion fail ../../src/bfd/cofflink.c:1926 make[2]: ***
> [libgeos.la] Error 5 make[2]: Leaving directory
> `/usr/src/geos/source' make[1]: *** [all-recursive] Error 1 make[1]:
> Leaving directory `/usr/src/geos/source' make: *** [all-recursive]
> Error 1
> 
> Causes ld to have a segmentation fault.

I have no idea :-(
May be those empty files for which VC++ gives warnings cause those errors?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Mon Apr  3 00:56:51 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Petition for a 2.2.2 release
In-Reply-To: <20060330092148.GC16421@keybit.net>
References: <D4AF574B-8B7D-4B8D-A0E1-31CC211205CE@frii.com>	<20060228155731.GA12685@keybit.net>	<51E32BA9-9342-48A2-9F35-A864ED777277@frii.com>	<20060324095242.GC35448@keybit.net>	<44246634.4090008@interserv.com>	<20060327090758.GC74063@keybit.net>	<422DAC7A-5649-4518-83E3-316D2A8657EB@frii.com>	<44285433.4060802@interserv.com>	<20060328082613.GA87797@keybit.net>
	<442ADE34.20806@interserv.com> <20060330092148.GC16421@keybit.net>
Message-ID: <4430AB13.7090400@interserv.com>

Hi Strk,
> As a sit-on-the-pants guess you'd need:
> 	Geometry.h
> 	GeometryFactory.h
> 	PrecisionModel.h
> 	CoordinateSequenceFactory.h
> 	Coordinate.h
> 	CoordinateSequence.h
> 	WKB{Reader,Writer}.h
> 	WKT{Reader,Writer}.h
> 	GEOSException.h 
> 	(actually derived from std::exception, so possibly
> 	 not even needed)
>
> If you need access to Geometry derivates please use the
> specific headers:
> 	Point.h
> 	LineString.h
> 	LinearRing.h
> 	Polygon.h
> 	MultiPoint.h
> 	MultiLineString.h
> 	MultiPolygon.h
> 	GeometryCollection.h
>
>
>   
Thanks, just what I needed to know.  I had to include all the headers 
above, plus:

Envelope.h
CoordinateArraySequence.h
GeometricShapeFactory.h

Sending you a patch now.

Thanks,

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060402/43d4b3fc/smime.bin
From strk at refractions.net  Mon Apr  3 06:24:48 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] DouglasPeuckerLineSimplifier port
Message-ID: <20060403102448.GA61910@keybit.net>

Since I'm porting the new geos::simplify package
it might be worth discussing it a little bit making
it a case study for further refactoring.

The DouglasPeuckerLineSimplifier class takes a 
list of Coordinates and returns a 'simplified'
form of it, using the well known DP algorithm.

The resulting point set is a subset of the input
point set: no new points are added.

In Java (JTS), both input and output are of type 
Coordinate[], with the return being a newly allocated
list of newly allocated Coordinates.

My first attempt at modelling this in C++ has been
using std::vector<Coordinate> for both input and 
output, with return wrapped in an std::auto_ptr 
to model ownership transfer from the allocating
class to the caller, and input being defined
as 'const', to forbid modification of input.

I committed it, so if anyone wants to take
a look at possibly different implementation
before proceeding that'd be appreciated.

Note1: a possible improvement that comes
into my mind at first is using Coordinate
pointers rather then values, and maybe
organized in a list rather then in a vector
modifying input instead of allocating
a new container and new values for output.

Note2: every Geometry type has a
CoordinateSequence as it's lowest level
component. Current default implementation
for that interface is CoordinateArraySequence,
which is a vector of Coordinate values.
The CoordinateSequence interface provides a
toVector() function that returns that vector
of Coordinates values as a const pointer.
Wheter converting this "abstract" type
to a more 'simplify-friendly' one is worth
the conversion cost is not easy to tell
as the CoordinateSequence implementation
is opaque.

Note3: the new class might as well directly
work on CoordinateSequence. Will incurr
in virtual calls penalty, but won't suffer
from the 'conversion' problem in note2.

That's all for now, I'll be debugging other
parts of the code.

--strk; 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Mon Apr  3 06:52:59 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <44308D60.6000109@interserv.com>
References: <44308D60.6000109@interserv.com>
Message-ID: <20060403105259.GB61910@keybit.net>

Applied patch for 1 and 2.
For 3: those classes are obsoleted.
For 4: those classes are fully inlined,
       I'll drop them from automake config.

--strk;

On Sun, Apr 02, 2006 at 08:50:08PM -0600, Charlie Savage wrote:
> Some geos 3 build issues on Windows with VC++ 8.0 (using latest CVS head)
> 
> 1.  source/noding/snapround/MCIndexSnapRounder.cpp needs to #include 
> <algorithm> for the std::for_each method on line 92
> 
> 2.  source/index/strtree/STRtree.cpp needs to include #include 
> <algorithm> for the std::sort method on line 208.
> 
> 3.  RobustLineIntersector and NonRobustLineIntersector define classes 
> that are not declared anywhere.
> 
> 4.  There are various files that appear to do nothing:
> 
> PolygonExtracter.obj : warning LNK4221: no public symbols found; archive 
> member will be inaccessible
> PointExtracter.obj : warning LNK4221: no public symbols found; archive 
> member will be inaccessible
> LinearComponentExtracter.obj : warning LNK4221: no public symbols found; 
> archive member will be inaccessible
> CoordinateSequenceFactory.obj : warning LNK4221: no public symbols 
> found; archive member will be inaccessible
> UnsupportedOperationException.obj : warning LNK4221: no public symbols 
> found; archive member will be inaccessible
> IllegalArgumentException.obj : warning LNK4221: no public symbols found; 
> archive member will be inaccessible
> AssertionFailedException.obj : warning LNK4221: no public symbols found; 
> archive member will be inaccessible
> 
> For MinGw - still doesn't build.  Same link error:
> 
> c:\Development\MinGW\mingw32\bin\ld.exe: BFD 2.16.91 20060119 assertion 
> fail ../../src/bfd/cofflink.c:1926
> make[2]: *** [libgeos.la] Error 5
> make[2]: Leaving directory `/usr/src/geos/source'
> make[1]: *** [all-recursive] Error 1
> make[1]: Leaving directory `/usr/src/geos/source'
> make: *** [all-recursive] Error 1
> 
> Causes ld to have a segmentation fault.
> 
> Thanks,
> 
> Charlie
> 
> 



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Mon Apr  3 07:05:53 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 2.2.2 tests broken
In-Reply-To: <4430559E.5000504@loskot.net>
References: <44304A43.4060700@interserv.com> <4430559E.5000504@loskot.net>
Message-ID: <20060403110553.GC61910@keybit.net>

Applied to 2.2. branch.

--strk;

On Mon, Apr 03, 2006 at 12:52:14AM +0200, Mateusz ??oskot wrote:
> Charlie Savage wrote:
> > The Geos 2.2.2 XmlTester doesn't compile on MinGW.
> > 
> > Offending code is in indexSweepline.h, line 62.
> > 
> > class indexSweepLineEvent { public: enum { INSERT = 1, DELETE
> > <------- Breaks };
> > 
> > The error:
> > 
> > In file included from ../..//source/headers/geos/opValid.h:67, from
> > XMLTester.cpp:41: ../..//source/headers/geos/indexSweepline.h:62:
> > error: expected identifier before numeric constant
> > 
> > Not sure if this is important, but thought I'd bring it up.  I'm
> > using g++ 3.4.5 on Windows XP under MingW.
> 
> Yup, this is known bug.
> It has been fixed in GEOS CVS.
> The problem is with DELETE enumerator name.
> DELETE is used by Windows Platform SDK headers - winnt.h - where it is
> defined as:
> 
> #define DELETE (0x00010000L)
> 
> This is problem with macro evil, so it was fixed about month ago:
> 
> SweepLineEvent.cpp
> Revision 1.8  2006/03/02 14:53:40  strk
> SweepLineEvent::DELETE=>DELETE_EVENT, INSERT=>INSERT_EVENT (#45)
> 
> NOTE:
> I'd suggest to rename it in GEOS 2.2.0 too as a backport fix.
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Mon Apr  3 07:07:14 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <443045AC.4080204@interserv.com>
References: <442FECC5.7020603@xs4all.nl> <20060402170727.GA58761@keybit.net>
	<443045AC.4080204@interserv.com>
Message-ID: <20060403110714.GD61910@keybit.net>

I'm not personally interested, but I'm sure others are :)
I'd be more comfortable if someone else takes the
responsibility to keep win32 scripts up-to-date, as I'm
not able to test them.

--strk;

On Sun, Apr 02, 2006 at 03:44:12PM -0600, Charlie Savage wrote:
> Strk,
> 
> The project files checked in with GEOS 2.2.2 don't actually work last 
> time I checked.  I have a project file for VC++ 8 that works, plus adds 
> in compiling for the C library.  I can provide a patch if you're interested.
> 
> Charlie
> 
> strk@refractions.net wrote:
> >We're about to release 2.2.2.
> >Could you test current candidate from CVS ?
> >You should access the 'branch-2-2' tag.
> >
> >TIA
> >
> >--strk;
> >
> >On Sun, Apr 02, 2006 at 05:24:53PM +0200, Bart van den Eijnden (OSGIS) 
> >wrote:
> >  
> >>Hi list,
> >>
> >>I've got a problem trying to compile geos 2.2.1 (which is part of 
> >>Mapserver's buildkit for Windows) using Visual Studio 8:
> >>
> >>RepeatedPointTester.obj : error LNK2001: unresolved external symbol 
> >>__imp_?name@
> >>type_info@@QBEPBDXZ
> >>planarDirectedEdge.obj : error LNK2001: unresolved external symbol 
> >>__imp_?name@t
> >>ype_info@@QBEPBDXZ
> >>Geometry.obj : error LNK2019: unresolved external symbol 
> >>__imp_?name@type_info@@
> >>QBEPBDXZ referenced in function "private: virtual int __thiscall 
> >>geos::Geometry:
> >>:getClassSortIndex(void)const " (?getClassSortIndex@Geometry@geos@@EBEHXZ)
> >>GeometryFactory.obj : error LNK2001: unresolved external symbol 
> >>__imp_?name@type
> >>_info@@QBEPBDXZ
> >>GeometryGraph.obj : error LNK2001: unresolved external symbol 
> >>__imp_?name@type_i
> >>nfo@@QBEPBDXZ
> >>OffsetCurveSetBuilder.obj : error LNK2001: unresolved external symbol 
> >>__imp_?nam
> >>e@type_info@@QBEPBDXZ
> >>geos.dll : fatal error LNK1120: 1 unresolved externals
> >>NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
> >>8\VC\BIN\l
> >>ink.exe"' : return code '0x460'
> >>Stop.
> >>
> >>Is anybody able to help? Thanks in advance.
> >>
> >>Best regards,
> >>Bart
> >>
> >>-- 
> >>Bart van den Eijnden
> >>OSGIS, Open Source GIS
> >>http://www.osgis.nl
> >>
> >>_______________________________________________
> >>geos-devel mailing list
> >>geos-devel@geos.refractions.net
> >>http://geos.refractions.net/mailman/listinfo/geos-devel
> >>    
> >
> >  



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From mateusz at loskot.net  Mon Apr  3 09:48:36 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <20060403110714.GD61910@keybit.net>
References: <442FECC5.7020603@xs4all.nl>
	<20060402170727.GA58761@keybit.net>	<443045AC.4080204@interserv.com>
	<20060403110714.GD61910@keybit.net>
Message-ID: <443127B4.4030906@loskot.net>

strk@refractions.net wrote:
> I'm not personally interested, but I'm sure others are :)

That's why I put VC++ projects on my personal website, just to not to
mess the official mainstream of project.
As you may noticed, I called it as unofficial resources, to make things
clear.

> I'd be more comfortable if someone else takes the responsibility to 
> keep win32 scripts up-to-date, as I'm not able to test them.

Charlie:
We can work together on it if you like.
I mean, to use the same VC++ projects and keep it up to date togther.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From sgillies at frii.com  Mon Apr  3 10:09:46 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <443127B4.4030906@loskot.net>
References: <442FECC5.7020603@xs4all.nl>
	<20060402170727.GA58761@keybit.net>	<443045AC.4080204@interserv.com>
	<20060403110714.GD61910@keybit.net> <443127B4.4030906@loskot.net>
Message-ID: <E5BC2C33-1523-4F6D-9A0A-5B75007B55F2@frii.com>


On Apr 3, 2006, at 7:48 AM, Mateusz ?oskot wrote:

> strk@refractions.net wrote:
>> I'm not personally interested, but I'm sure others are :)
>
> That's why I put VC++ projects on my personal website, just to not to
> mess the official mainstream of project.
> As you may noticed, I called it as unofficial resources, to make  
> things
> clear.
>
>> I'd be more comfortable if someone else takes the responsibility to
>> keep win32 scripts up-to-date, as I'm not able to test them.
>
> Charlie:
> We can work together on it if you like.
> I mean, to use the same VC++ projects and keep it up to date togther.
>
> Cheers
> -- 
> Mateusz ?oskot
> http://mateusz.loskot.net

Mateusz,

The VC++ project was contributed by another and checked in by me. Is  
it better that I revert and remove it?

Sean

---
Sean Gillies
http://zcologia.com




From mateusz at loskot.net  Mon Apr  3 10:29:33 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <E5BC2C33-1523-4F6D-9A0A-5B75007B55F2@frii.com>
References: <442FECC5.7020603@xs4all.nl>	<20060402170727.GA58761@keybit.net>	<443045AC.4080204@interserv.com>	<20060403110714.GD61910@keybit.net>
	<443127B4.4030906@loskot.net>
	<E5BC2C33-1523-4F6D-9A0A-5B75007B55F2@frii.com>
Message-ID: <4431314D.1080300@loskot.net>

Sean Gillies wrote:
> 
> On Apr 3, 2006, at 7:48 AM, Mateusz ?oskot wrote:
> 
>> strk@refractions.net wrote:
>>> I'm not personally interested, but I'm sure others are :)
>>
>> That's why I put VC++ projects on my personal website, just to not to
>> mess the official mainstream of project.
>> As you may noticed, I called it as unofficial resources, to make things
>> clear.
>>
>>> I'd be more comfortable if someone else takes the responsibility to
>>> keep win32 scripts up-to-date, as I'm not able to test them.
>>
>> Charlie:
>> We can work together on it if you like.
>> I mean, to use the same VC++ projects and keep it up to date togther.
>>
> 
> Mateusz,
> 
> The VC++ project was contributed by another and checked in by me. Is it
> better that I revert and remove it?

Sean,

Hmm, I don't have any idea if it would be better or not.
I have my own GEOS project for VC++, and I keep it up to date
(add/remove files, etc.) for last 2 months.
So, I could provide it as well.

Note: this is Static Library project, because I'm interested in C++ API,
mainly.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net


From strk at refractions.net  Mon Apr  3 10:36:51 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] "Hard" topology test case
In-Reply-To: <Pine.LNX.4.64.0604022041290.5087@twinpix2>
References: <Pine.LNX.4.64.0604022041290.5087@twinpix2>
Message-ID: <20060403143651.GD71467@keybit.net>

Thanks Istvan (or Laszlo?)
I'm testing this with weird results.
Checking validity of intersection output from XMLTester
reports it to be clean. Checking it from postgis/CAPI
reports it to be invalid.

It's a couple of weeks I'm trying to track these 
kind of bug so it's nothing really new.
Thank you for reporting this , so we have a bigger
library of interesting cases.

--strk;

On Sun, Apr 02, 2006 at 08:42:06PM +0200, Laszlo Istvan wrote:
> 
> Hi, Paul,
> 
> To continue our former discussion with a wider audience: I have 
> found a small example which still causes GEOS Intersection to 
> generate invalid (self-intersecting) output from valid input.
> 
> PostgreSQL 8.0.1 on i686-pc-linux-gnu
> 
> POSTGIS="1.1.2" GEOS="3.0.0cvs-CAPI-1.1.1"
> PROJ="Rel. 4.4.9, 29 Oct 2004" USE_STATS
> 
> Both PostGIS and GEOS are the CVS version of 31 March.
> 
> I have included below the WKB of the two polygons (broken at 
> every 80th characters). They intersect along a rather narrow 
> strip.
> 
> I hope it helps in the debugging and improving the topology 
> code, and I will try to find further samples of acceptable 
> sizes.
> 
> Best regards,
> Istvan Laszlo
> 
> On Tue, 21 Mar 2006, Paul Ramsey wrote:
> 
> >By all means, open the discussion. At this point we are really trying to 
> >get as many cases as possible in our "library of really hard things".
> >P
> >
> 
> 01030000000100000008000000AC86FF1FC6F8254100000000E89D0041380EF9FE79F925416F9092
> F857A20041E6ADF7FE4BFA25417E7C8BF88FA60041A919EAFE6302264172D74AF817CD0041FB3EE8
> 4F640626410000000068DC004100000000DA0626410000000068DC004100000000DA062641000000
> 00E89D0041AC86FF1FC6F8254100000000E89D0041
> 
> 01030000000100000018000000168BC5A2D7FE25410000000068C3004100000000FCFE2541000000
> C0C8C20041000000E027FF25410000004065C20041000000A047FF2541000000A034C20041000000
> 605EFF2541000000C0EEC1004100000000BAFF2541000000A0A5C0004160E9E55DC1FF25414D5FB9
> 518CC0004198536655CAFF254170C769846DC00041000000209BFF2541000000A0A5BF0041000000
> A076FF254100000080FEBE00410000000041FF2541000000C020BE00410000004039FF2541000000
> 8000BE0041000000E020FF2541000000E089BD0041F9E006050BFF25416B82F03B28BD0041000000
> E0EAFE2541000000A098BC00419827B70BC3FE2541BA1E1398D1BB00410000004069FE2541000000
> E010BA00410000000030FE25410000006015B9004183C61E772FFE2541271E1A0513B900411F2E34
> 7D17FE25414446286AA9B80041000000400FFE25410000002085B80041000000007AFD25417AAC21
> E649BA0041000000007AFD25410000000068C30041168BC5A2D7FE25410000000068C30041
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From bartvde at xs4all.nl  Mon Apr  3 11:56:00 2006
From: bartvde at xs4all.nl (Bart van den Eijnden (OSGIS))
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44302F9F.5070205@loskot.net>
References: <442FECC5.7020603@xs4all.nl> <44302F9F.5070205@loskot.net>
Message-ID: <44314590.2030601@xs4all.nl>

Hi Mateusz,

I tried it using your files, but now get:

        cl -Iheaders /EHsc /MD /GR /nologo  
bigtest\TestSweepLineSpeed.obj  bigt
est\GeometryTestFactory.obj  geos.lib
geos.lib(GeometryFactory.obj) : error LNK2019: unresolved external 
symbol __imp_
?name@type_info@@QBEPBDXZ referenced in function "public: class 
geos::Geometry *
 __thiscall geos::GeometryFactory::buildGeometry(class std::vector<class 
geos::G
eometry *,class std::allocator<class geos::Geometry *> > *)const " 
(?buildGeomet
ry@GeometryFactory@geos@@QBEPAVGeometry@2@PAV?$vector@PAVGeometry@geos@@V?$alloc
ator@PAVGeometry@geos@@@std@@@std@@@Z)
geos.lib(Geometry.obj) : error LNK2001: unresolved external symbol 
__imp_?name@t
ype_info@@QBEPBDXZ
geos.lib(GeometryGraph.obj) : error LNK2001: unresolved external symbol 
__imp_?n
ame@type_info@@QBEPBDXZ
geos.lib(OffsetCurveSetBuilder.obj) : error LNK2001: unresolved external 
symbol
__imp_?name@type_info@@QBEPBDXZ
TestSweepLineSpeed.exe : fatal error LNK1120: 1 unresolved externals
NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
8\VC\BIN\c
l.exe"' : return code '0x2'
Stop.

Any ideas? Thanks in advance.

Best regards,
Bart

Mateusz ?oskot wrote:

>Bart van den Eijnden (OSGIS) wrote:
>  
>
>>Hi list,
>>
>>I've got a problem trying to compile geos 2.2.1 (which is part of 
>>Mapserver's buildkit for Windows) using Visual Studio 8:
>>
>>RepeatedPointTester.obj : error LNK2001: unresolved external symbol 
>>__imp_?name@ type_info@@QBEPBDXZ planarDirectedEdge.obj : error
>>LNK2001: unresolved external symbol __imp_?name@t ype_info@@QBEPBDXZ 
>>Geometry.obj : error LNK2019: unresolved external symbol 
>>__imp_?name@type_info@@ QBEPBDXZ referenced in function "private:
>>virtual int __thiscall geos::Geometry: :getClassSortIndex(void)const
>>" (?getClassSortIndex@Geometry@geos@@EBEHXZ) GeometryFactory.obj :
>>error LNK2001: unresolved external symbol __imp_?name@type 
>>_info@@QBEPBDXZ GeometryGraph.obj : error LNK2001: unresolved
>>external symbol __imp_?name@type_i nfo@@QBEPBDXZ 
>>OffsetCurveSetBuilder.obj : error LNK2001: unresolved external symbol
>> __imp_?nam e@type_info@@QBEPBDXZ geos.dll : fatal error LNK1120: 1
>>unresolved externals NMAKE : fatal error U1077: '"C:\Program
>>Files\Microsoft Visual Studio 8\VC\BIN\l ink.exe"' : return code
>>'0x460' Stop.
>>
>>Is anybody able to help? Thanks in advance.
>>
>>    
>>
>
>Please, try to build using my version if makefile.vc + platform,h and
>vesrion.h files:
>
>http://mateusz.loskot.net/projects/geos/
>
>AFAIK it did help some users to build GEOS 2.2.1 using VC++ 8.0.
>
>Please, let me know if you've managed or not to build.
>
>Cheers
>  
>


-- 
Bart van den Eijnden
OSGIS, Open Source GIS
http://www.osgis.nl


From bartvde at xs4all.nl  Mon Apr  3 12:08:11 2006
From: bartvde at xs4all.nl (Bart van den Eijnden (OSGIS))
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <20060402170727.GA58761@keybit.net>
References: <442FECC5.7020603@xs4all.nl> <20060402170727.GA58761@keybit.net>
Message-ID: <4431486B.1070102@xs4all.nl>

Just tested the 2.2 branch from CVS using the additions from Mateusz, I get:

MarkupSTL.cpp
io\markup\MarkupSTL.cpp(50) : warning C4018: '<' : signed/unsigned mismatch
io\markup\MarkupSTL.cpp(88) : warning C4996: 'fopen' was declared deprecated
        C:\Program Files\Microsoft Visual Studio 
8\VC\INCLUDE\stdio.h(235) : see
 declaration of 'fopen'
io\markup\MarkupSTL.cpp(117) : warning C4996: 'fopen' was declared 
deprecated
        C:\Program Files\Microsoft Visual Studio 
8\VC\INCLUDE\stdio.h(235) : see
 declaration of 'fopen'
io\markup\MarkupSTL.cpp(339) : warning C4996: 'sprintf' was declared 
deprecated
        C:\Program Files\Microsoft Visual Studio 
8\VC\INCLUDE\stdio.h(317) : see
 declaration of 'sprintf'
io\markup\MarkupSTL.cpp(556) : warning C4018: '<' : signed/unsigned mismatch
io\markup\MarkupSTL.cpp(749) : warning C4018: '<' : signed/unsigned mismatch
io\markup\MarkupSTL.cpp(757) : warning C4996: 'sprintf' was declared 
deprecated
        C:\Program Files\Microsoft Visual Studio 
8\VC\INCLUDE\stdio.h(317) : see
 declaration of 'sprintf'
io\markup\MarkupSTL.cpp(916) : error C2440: '=' : cannot convert from 
'const cha
r *' to 'char *'
        Conversion loses qualifiers
NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
8\VC\BIN\c
l.exe"' : return code '0x2'
Stop.

Best regards,
Bart

strk@refractions.net wrote:

>We're about to release 2.2.2.
>Could you test current candidate from CVS ?
>You should access the 'branch-2-2' tag.
>
>TIA
>
>--strk;
>
>On Sun, Apr 02, 2006 at 05:24:53PM +0200, Bart van den Eijnden (OSGIS) wrote:
>  
>
>>Hi list,
>>
>>I've got a problem trying to compile geos 2.2.1 (which is part of 
>>Mapserver's buildkit for Windows) using Visual Studio 8:
>>
>>RepeatedPointTester.obj : error LNK2001: unresolved external symbol 
>>__imp_?name@
>>type_info@@QBEPBDXZ
>>planarDirectedEdge.obj : error LNK2001: unresolved external symbol 
>>__imp_?name@t
>>ype_info@@QBEPBDXZ
>>Geometry.obj : error LNK2019: unresolved external symbol 
>>__imp_?name@type_info@@
>>QBEPBDXZ referenced in function "private: virtual int __thiscall 
>>geos::Geometry:
>>:getClassSortIndex(void)const " (?getClassSortIndex@Geometry@geos@@EBEHXZ)
>>GeometryFactory.obj : error LNK2001: unresolved external symbol 
>>__imp_?name@type
>>_info@@QBEPBDXZ
>>GeometryGraph.obj : error LNK2001: unresolved external symbol 
>>__imp_?name@type_i
>>nfo@@QBEPBDXZ
>>OffsetCurveSetBuilder.obj : error LNK2001: unresolved external symbol 
>>__imp_?nam
>>e@type_info@@QBEPBDXZ
>>geos.dll : fatal error LNK1120: 1 unresolved externals
>>NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio 
>>8\VC\BIN\l
>>ink.exe"' : return code '0x460'
>>Stop.
>>
>>Is anybody able to help? Thanks in advance.
>>
>>Best regards,
>>Bart
>>
>>-- 
>>Bart van den Eijnden
>>OSGIS, Open Source GIS
>>http://www.osgis.nl
>>
>>_______________________________________________
>>geos-devel mailing list
>>geos-devel@geos.refractions.net
>>http://geos.refractions.net/mailman/listinfo/geos-devel
>>    
>>
>
>  
>


-- 
Bart van den Eijnden
OSGIS, Open Source GIS
http://www.osgis.nl


From mateusz at loskot.net  Mon Apr  3 12:11:09 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <4431486B.1070102@xs4all.nl>
References: <442FECC5.7020603@xs4all.nl> <20060402170727.GA58761@keybit.net>
	<4431486B.1070102@xs4all.nl>
Message-ID: <4431491D.2000504@loskot.net>

Bart van den Eijnden (OSGIS) wrote:
>
> io\markup\MarkupSTL.cpp(916) : error C2440: '=' : cannot convert from
> 'const cha
> r *' to 'char *'
>        Conversion loses qualifiers

Home made fix is:

go to io\markup\MarkupSTL.cpp file, move to line 913:

char* pFound;

and change it to read:

const char* pFound;

Now it should work.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Mon Apr  3 12:16:01 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <443127B4.4030906@loskot.net>
References: <442FECC5.7020603@xs4all.nl>	<20060402170727.GA58761@keybit.net>	<443045AC.4080204@interserv.com>	<20060403110714.GD61910@keybit.net>
	<443127B4.4030906@loskot.net>
Message-ID: <44314A41.3090809@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060403/f0096d97/smime.bin
From mateusz at loskot.net  Mon Apr  3 12:16:38 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44314590.2030601@xs4all.nl>
References: <442FECC5.7020603@xs4all.nl> <44302F9F.5070205@loskot.net>
	<44314590.2030601@xs4all.nl>
Message-ID: <44314A66.1090908@loskot.net>

Bart van den Eijnden (OSGIS) wrote:
> Hi Mateusz,
> 
> I tried it using your files, but now get:
> 
> [...]
> 
> Any ideas? Thanks in advance.
> 

Hi Bart,

First, are you using makefile.vc for GEOS 2.2.1 from my website?
Second, are you trying to build with this makefile.vc GEOS 2.2.1 or GEOS
 from CVS?

I think there may be some files missing from makefile.vc or some files
redundant. Simply, this makefile.vc needs to be updated
I'll take a look at it in an hour or two.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Mon Apr  3 12:21:16 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44314A41.3090809@interserv.com>
References: <442FECC5.7020603@xs4all.nl>	<20060402170727.GA58761@keybit.net>	<443045AC.4080204@interserv.com>	<20060403110714.GD61910@keybit.net>	<443127B4.4030906@loskot.net>
	<44314A41.3090809@interserv.com>
Message-ID: <44314B7C.9050504@loskot.net>

Charlie Savage wrote:
> That would be great.

Great!

> Do you have project files for 2.2.2 and 3.0? Or just 3.0?

I have both. Here you can find what I have exactly:

http://mateusz.loskot.net/projects/geos/

Note the "last update" date, some files need to be updated (e.g.
makefile.vc for GEOS 3.0.0 CVS).

VC++ project include geos_unit project for Unit Tests, but I'd suggest
to exclude it from build because the work is in progress ;-)

Do you have DLL or Static Library project?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From bartvde at xs4all.nl  Mon Apr  3 12:23:33 2006
From: bartvde at xs4all.nl (Bart van den Eijnden (OSGIS))
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44314A66.1090908@loskot.net>
References: <442FECC5.7020603@xs4all.nl>
	<44302F9F.5070205@loskot.net>	<44314590.2030601@xs4all.nl>
	<44314A66.1090908@loskot.net>
Message-ID: <44314C05.1080207@xs4all.nl>

Hi Mateusz,

with respect to this post, I was using 2.2.1 and your makefile for 2.2.1.

Later on, as I said in a next post, I tried the 2.2.2 branch using your 
makefile. I'll try the homemade fix and see if it gets any further with 
building ....

Thanks.

Best regards,
Bart

Mateusz ?oskot wrote:

>Bart van den Eijnden (OSGIS) wrote:
>  
>
>>Hi Mateusz,
>>
>>I tried it using your files, but now get:
>>
>>[...]
>>
>>Any ideas? Thanks in advance.
>>
>>    
>>
>
>Hi Bart,
>
>First, are you using makefile.vc for GEOS 2.2.1 from my website?
>Second, are you trying to build with this makefile.vc GEOS 2.2.1 or GEOS
> from CVS?
>
>I think there may be some files missing from makefile.vc or some files
>redundant. Simply, this makefile.vc needs to be updated
>I'll take a look at it in an hour or two.
>
>Cheers
>  
>


-- 
Bart van den Eijnden
OSGIS, Open Source GIS
http://www.osgis.nl


From cfis at interserv.com  Mon Apr  3 12:32:00 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44314B7C.9050504@loskot.net>
References: <442FECC5.7020603@xs4all.nl>	<20060402170727.GA58761@keybit.net>	<443045AC.4080204@interserv.com>	<20060403110714.GD61910@keybit.net>	<443127B4.4030906@loskot.net>	<44314A41.3090809@interserv.com>
	<44314B7C.9050504@loskot.net>
Message-ID: <44314E00.9050907@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060403/7ed3cb9b/smime.bin
From mateusz at loskot.net  Mon Apr  3 12:37:30 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44314C05.1080207@xs4all.nl>
References: <442FECC5.7020603@xs4all.nl>	<44302F9F.5070205@loskot.net>	<44314590.2030601@xs4all.nl>	<44314A66.1090908@loskot.net>
	<44314C05.1080207@xs4all.nl>
Message-ID: <44314F4A.3060607@loskot.net>

Bart van den Eijnden (OSGIS) wrote:
> Hi Mateusz,
> 
> with respect to this post, I was using 2.2.1 and your makefile for 
> 2.2.1.

OK, so I've just tested, downloaded GEOS 2.2.1, put my makefile.vc,
platform.h and version.h and did complete build.
The result is it works. I got no errors.
I put this makefile.vc I used on my website:

http://mateusz.loskot.net/download/projects/geos/makefile.vc-for-geos-2.2.1.zip

> Later on, as I said in a next post, I tried the 2.2.2 branch using 
> your makefile. I'll try the homemade fix and see if it gets any 
> further with building ....

I've never tried to build GEOS 2.2.2 using this makefile.vc, so there
may be some problems, or not, I don't know.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From bartvde at xs4all.nl  Mon Apr  3 12:39:10 2006
From: bartvde at xs4all.nl (Bart van den Eijnden (OSGIS))
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <4431491D.2000504@loskot.net>
References: <442FECC5.7020603@xs4all.nl>
	<20060402170727.GA58761@keybit.net>	<4431486B.1070102@xs4all.nl>
	<4431491D.2000504@loskot.net>
Message-ID: <44314FAE.2020801@xs4all.nl>

Hi list,

after applying this change the makefile from Mateusz does build a 
geos.lib successfully using the 2.2 branch.

If I use all the 2.2 stuff from CVS (so CVS makefile), it builds a 
geos.dll successfully as well.

Clean does not work though using the CVS makefile: too long. Stop.

Best regards,
Bart

Mateusz ?oskot wrote:

>Bart van den Eijnden (OSGIS) wrote:
>  
>
>>io\markup\MarkupSTL.cpp(916) : error C2440: '=' : cannot convert from
>>'const cha
>>r *' to 'char *'
>>       Conversion loses qualifiers
>>    
>>
>
>Home made fix is:
>
>go to io\markup\MarkupSTL.cpp file, move to line 913:
>
>char* pFound;
>
>and change it to read:
>
>const char* pFound;
>
>Now it should work.
>
>Cheers
>  
>


-- 
Bart van den Eijnden
OSGIS, Open Source GIS
http://www.osgis.nl


From mateusz at loskot.net  Mon Apr  3 13:50:58 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] building geos 2.2.1 using Visual Studio 8
In-Reply-To: <44314E00.9050907@interserv.com>
References: <442FECC5.7020603@xs4all.nl>	<20060402170727.GA58761@keybit.net>	<443045AC.4080204@interserv.com>	<20060403110714.GD61910@keybit.net>	<443127B4.4030906@loskot.net>	<44314A41.3090809@interserv.com>	<44314B7C.9050504@loskot.net>
	<44314E00.9050907@interserv.com>
Message-ID: <44316082.1050301@loskot.net>

Charlie Savage wrote:
> I have a static library since my main goal is to build python and
> ruby extensions using SWIG - thus I need access to the C++ api. 

I see. I use Static Library for simplicity when working with Unit Tests.

> Unfortunately, at least 2.2.2, doesn't expose classes via declspec.
> I once had a def file I manually generated (which you can use
> instead) but it was a bit of pain to keep it up to date.  I guess I
> could regenerate it for 2.2.2 which is stable.

Yes.

> When I get a chance I'll take a look and we can compare notes.

OK. Then I will put my comments and we can work out common vc++ project.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Mon Apr  3 15:26:16 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 2.2.2 SWIG patches/updates
Message-ID: <443176D8.201@interserv.com>

Hi everyone,

Over the weekend I sent a patch to Strk for the Geos 2.2.2 SWIG 
bindings.  It basically back ports the work I've done on GEOS head. 
I've included the updated geos.i below for people who are interested in 
reviewing it.

What the patch does:

* Updates memory handling, you can now run the equivalent of example.cpp
in python / ruby without causing segmentation faults

* Updates methods like WKBReader.read so that they return the
appropriate geometry type (point, line, etc.) as opposed to
Geos::Geometry.

* Limits the exposed api.  Only exposes geom.h, version.h, util.h, io.h

* Exposes WKBReader.read/write and WKTReader.read/write and 
WKBWriter.read/write and WKTWriter.read/write which were not previously 
available from scripting languages

* Adds Ruby support, with test cases


So from a scripting standpoint the bindings expose more functionality 
and should me more stable.  There are two API changes:

* Instead of geometry.getSRID()/setSRID() you can now do geometer.srid

* Instead of coordinate.getX()/getY() you can now do coordinate.x

I made those changes since it seemed a much more natural way of working 
with the bindings.  However, if this causes issues on the Python side I 
will move them just to he Ruby bindings - its literally cut/paste 4 
lines of SWIG code.

Comments/feedback welcome.

Thanks,

Charlie



Index: swig/geos.i
===================================================================
RCS file: /home/cvs/postgis/geos/swig/geos.i,v
retrieving revision 1.3
diff -u -r1.3 geos.i
--- swig/geos.i	26 Jul 2004 18:53:38 -0000	1.3
+++ swig/geos.i	2 Apr 2006 23:56:41 -0000
@@ -4,8 +4,10 @@
   * geos.i
   *
   * Copyright 2004 Sean Gillies, sgillies@frii.com
+ * Updated 2005 Charlie Savage, cfis@interserv.coma
   *
- * Interface for a SWIG generated geos module.
+ * Interface for a SWIG generated geos module.  Depends on
+ * SWIG 1.3.29 and higher.
   *
   * This is free software; you can redistribute and/or modify it under
   * the terms of the GNU Lesser General Public Licence as published
@@ -13,33 +15,311 @@
   * See the COPYING file for more information.
   *
   * 
========================================================================= */
-
+
  %module geos
-%include "std_string.i"
  %include "exception.i"
+%include "std_string.i"
+%include "std_vector.i"
+%include "std_except.i"
+%include "factory.i"

  %{
-#include "../../source/headers/geos.h"
+#include "geos.h"
+#include "geos/version.h"
+#include "geos/planargraph.h"
+#include "geos/opLinemerge.h"
+#include "geos/opPolygonize.h"
+#include <sstream>
  %}

-// Following methods are prototypes but unimplemented and are to be ignored
-%ignore geos::MultiPoint::isClosed;
+/* ================= Shadowed Methods ============== */
+
+/* The overloaded C++ methods cannot be disambiguated by
+   SWIG.  For example:
+
+	geos::GeometryFactory::createPoint(CoordinateSequence *) const;
+	geos::GeometryFactory::createPoint(const CoordinateSequence&) const;
+
+   For each pair of methods, one will take ownership
+   of the parameter (thus it is passed as a pointer) while
+   the other one will not (thus is passed as a const reference).
+   To be on the safe-side, we tell SWIG to ignore the method
+   that takes over ownership.  To expose these ignored methods
+   to a scripting language requires renaming the method to
+   something else.  This can be done in each language module
+   as it is loaded below.*/
+
+%ignore geos::GeometryFactory::buildGeometry(vector<Geometry * > *) const;
+%ignore geos::GeometryFactory::createGeometryCollection(vector<Geometry 
* > *) const;
+%ignore geos::GeometryFactory::createLinearRing(CoordinateSequence *) 
const;
+%ignore geos::GeometryFactory::createLineString(CoordinateSequence *) 
const;
+%ignore geos::GeometryFactory::createMultiLineString(vector<Geometry * 
 > *) const;
+%ignore geos::GeometryFactory::createMultiPoint(vector<Geometry * > *) 
const;
+%ignore geos::GeometryFactory::createMultiPolygon(vector<Geometry * > 
*) const;
+%ignore geos::GeometryFactory::createPoint(CoordinateSequence *) const;
+%ignore geos::GeometryFactory::createPolygon(LinearRing 
*,vector<Geometry * > *) const;
+
+/* For scripting languages the CoordinateSequence::add method is ambigious
+   since there are two overloaded versions that are the same except
+   a const declaration.  However, one of them is available only for
+   backwards compatibility so hide that one.*/
+%ignore geos::CoordinateSequence::add(CoordinateSequence *cl,bool 
allowRepeated,bool direction);
+
+
+/* ================= Typemaps ============== */
+
+/* These typemaps allows scripting languages to call methods that take
+   iostreams and ostreams, such as WKTWriter.printHEX and WKBWriter.write.
+   The results are returned from the method as a string object in the
+   scripting language.*/
+
+/* Get rid of the ostream parameter by setting numinputs to 0 */
+%typemap(in,numinputs=0) ostream& (std::ostringstream stream)
+{
+  $1 = &stream;
+}
+
+/* Return the results as a string object in the scripting language */
+%typemap(argout) ostream&
+{
+	std::string str = stream$argnum.str();	
+	$result = SWIG_FromCharPtrAndSize(str.data(), str.size());
+}
+
+/* This typemap allows the scripting language to pass in a string
+   which will be converted to an istringstream for GEOS */
+%typemap(in) istream& (char *buf = 0, size_t size = 0, int alloc = 0, 
std::stringstream stream)
+{
+  /* Convert from scripting language string to char* */
+  if (SWIG_AsCharPtrAndSize($input, &buf, &size, &alloc) != SWIG_OK)
+  {
+    %argument_fail(SWIG_TypeError, "(TYPEMAP, SIZE)", $symname, $argnum);
+  }
+
+  /* Write data to the stream.  Note that the returned size includes
+     the last character, which is a null character.  We do not want
+     to write that to the stream so subtract one from its size. */
+  stream.write(buf, size - 1);
+
+  $1 = &stream;
+}
+
+/* Free allocated buffer created in the (in) typemap */
+%typemap(freearg) istream&
+{
+  if (alloc$argnum == SWIG_NEWOBJ) %delete_array(buf$argnum);
+}
+
+
+/* ==============  Language Specific Files ============ */
+
+/* Import language specific SWIG files.  This allows each language
+   to define its own renames as well as any special functionality
+   such as language specific iterators for collections. Note
+   that %include allows the included files to generate interface
+   wrapper code while %import does not.  Thus use %include since
+   this is an important feature (for example, Ruby needs it to #undef
+   the select macro) */
+
+
+#ifdef SWIGPYTHON
+%include ../python/python.i
+#endif
+
+#ifdef SWIGRUBY
+%include ../ruby/ruby.i
+#endif
+
+
+/* ================= Ownership Rules ============== */

-// Required renaming
-%rename(Coordinate_Coordinate) Coordinate::Coordinate;
+/* These disown definitions are not correct in all cases -
+   needs to be fixed */
+%apply SWIGTYPE *DISOWN { geos::CoordinateSequence * };
+%apply SWIGTYPE *DISOWN { geos::LinearRing * };
+%apply SWIGTYPE *DISOWN { std::vector<geos::Geometry * > * };
+%apply SWIGTYPE *DISOWN { std::vector<geos::Coordinate> * };
+
+
+// These methods create new objects
+namespace geos {
+
+%newobject *::clone;
+%newobject *::getCoordinates;
+
+%newobject CoordinateArraySequence::create;
+%newobject GeometryFactory::createPointFromInternalCoord;
+%newobject GeometryFactory::toGeometry;
+%newobject GeometryFactory::createPoint;
+%newobject GeometryFactory::createGeometryCollection;
+%newobject GeometryFactory::createMultiLineString;
+%newobject GeometryFactory::createMultiPolygon;
+%newobject GeometryFactory::createLinearRing;
+%newobject GeometryFactory::createMultiPoint;
+%newobject GeometryFactory::createPolygon;
+%newobject GeometryFactory::createLineString;
+%newobject GeometryFactory::buildGeometry;
+%newobject GeometryFactory::createGeometry;
+%newobject GeometricShapeFactory::getEnvelope;
+
+%newobject WKBReader::read;
+%newobject WKBReader::readHEX;
+%newobject WKTReader::read;
+}
+
+/* Surface methods that return Geometry* so that they
+	 return the actual geometry object (point, linestring, etc.)
+	 instead of a generic geometry object.  Make sure the checks
+	 go from child class to parent class so we get the right one.*/
+%factory(geos::Geometry * geos::WKTReader::read, geos::Point,
+				 geos::LinearRing, geos::LineString,
+				 geos::Polygon,
+				 geos::MultiPoint, geos::MultiLineString,
+				 geos::MultiPolygon, geos::GeometryCollection);
+
+%factory(geos::Geometry * geos::WKBReader::read, geos::Point,
+				 geos::LinearRing, geos::LineString,
+				 geos::Polygon,
+				 geos::MultiPoint, geos::MultiLineString,
+				 geos::MultiPolygon, geos::GeometryCollection);
+
+%factory(geos::Geometry * geos::WKBReader::readHEX, geos::Point,
+				 geos::LinearRing, geos::LineString,
+				 geos::Polygon,
+				 geos::MultiPoint, geos::MultiLineString,
+				 geos::MultiPolygon, geos::GeometryCollection);
+
+%factory(geos::Geometry * geos::Geometry::downcast, geos::Point,
+				 geos::LinearRing, geos::LineString,
+				 geos::Polygon,
+				 geos::MultiPoint, geos::MultiLineString,
+				 geos::MultiPolygon, geos::GeometryCollection);
+
+%newobject geos::Geometry::fromWKT;
+%factory(geos::Geometry * geos::Geometry::fromWKT, geos::Point,
+				 geos::LinearRing, geos::LineString,
+				 geos::Polygon,
+				 geos::MultiPoint, geos::MultiLineString,
+				 geos::MultiPolygon, geos::GeometryCollection);
+
+%newobject geos::Geometry::fromHEX;
+%factory(geos::Geometry * geos::Geometry::fromHEX, geos::Point,
+				 geos::LinearRing, geos::LineString,
+				 geos::Polygon,
+				 geos::MultiPoint, geos::MultiLineString,
+				 geos::MultiPolygon, geos::GeometryCollection);
+
+/* ================= Operators  ============== */
+/* Ignore these for now - if we don't SWIG will create
+   names with the same methods, which doesn't work out very well.
+
+	 std::ostream& operator<<(std::ostream& os, const planarNode& n);
+   std::ostream& operator<<(std::ostream& os, const planarEdge& n);
+   std::ostream& operator<<(std::ostream& os, const planarNode& n);
+   std::ostream& operator<< (std::ostream& os, const Coordinate& c);
+   std::ostream& operator<< (std::ostream& o, const LineSegment& l);
+   std::ostream& operator<< (std::ostream& os, const Coordinate& c); */
+%ignore geos::operator<<;
+
+
+/* ================= Exception Handling  ============== */
+
+/* Mark these classes as exception classes */
+%exceptionclass geos::GEOSException;
+
+/* These are all subclasses of GEOSException */
+%exceptionclass geos::AssertionFailedException;
+%exceptionclass geos::IllegalArgumentException;
+%exceptionclass geos::ParseException;
+%exceptionclass geos::TopologyException;
+%exceptionclass geos::UnsupportedOperationException;
+
+/* This exception class is not surfaced to SWIG
+%exceptionclass geos::NotRepresentableException;*/
+
+/* Setup up generalized exception handling.  Note that GEOS
+   2 series throws classes that are allocated on the heap
+	 so we need to catch them by pointer and are responsible
+	 for freeing them.  To do this we'll just pass the object
+	 along the scripting language (wrapped of course) and make
+	 it responsbile for freeing the object via the
+   use of the SWIG_POINTER_OWN flag.*/

  %exception {
      try {
          $action
      }
+  catch (geos::AssertionFailedException *e) {
+			%raise(SWIG_NewPointerObj(e, 
SWIGTYPE_p_geos__AssertionFailedException, SWIG_POINTER_OWN), 
"geos::AssertionFailedException", 
SWIGTYPE_p_geos__AssertionFailedException);
+  }
+  catch (geos::IllegalArgumentException *e) {
+			%raise(SWIG_NewPointerObj(e, 
SWIGTYPE_p_geos__IllegalArgumentException, SWIG_POINTER_OWN), 
"geos::IllegalArgumentException", 
SWIGTYPE_p_geos__IllegalArgumentException);
+  }
+  catch (geos::ParseException *e) {
+			%raise(SWIG_NewPointerObj(e, SWIGTYPE_p_geos__ParseException, 
SWIG_POINTER_OWN), "geos::ParseException", SWIGTYPE_p_geos__ParseException);
+  }
+  catch (geos::TopologyException *e) {
+			%raise(SWIG_NewPointerObj(e, SWIGTYPE_p_geos__TopologyException, 
SWIG_POINTER_OWN), "geos::TopologyException", 
SWIGTYPE_p_geos__TopologyException);
+  }
+  catch (geos::UnsupportedOperationException *e) {
+			%raise(SWIG_NewPointerObj(e, 
SWIGTYPE_p_geos__UnsupportedOperationException, SWIG_POINTER_OWN), 
"geos::UnsupportedOperationException", 
SWIGTYPE_p_geos__UnsupportedOperationException);
+  }
      catch (geos::GEOSException *e) {
-        SWIG_exception(SWIG_RuntimeError, e->toString().data());
+			%raise(SWIG_NewPointerObj(e, SWIGTYPE_p_geos__GEOSException, 
SWIG_POINTER_OWN), "geos::GEOSException", SWIGTYPE_p_geos__GEOSException);
+  }
+  catch (...) {
+      SWIG_exception(SWIG_RuntimeError, "Unknown exception took place 
in the method: $symname.");
      }
  }


-// Now include the headers to be wrapped
+/* =============  Define Attributes ============ */
+%include <attribute.i>
+%attribute(geos::Point, double, x, getX);
+%attribute(geos::Point, double, y, getY);
+%attribute(geos::Geometry, double, srid, getSRID, setSRID);
+
+
+/* ===========  Headers To Wrap  ================ */
  %include "../../source/headers/geos/geom.h"
+%include "../../source/headers/geos/version.h"
  %include "../../source/headers/geos/util.h"
  %include "../../source/headers/geos/io.h"

+/* ===========  Global Factory  ================ */
+/* When creating geometries GEOS needs to use a factory.
+   The created geometries have back references to the
+	 factory and thus the factory should not be deleted.
+	 However, this becomes hard when unmarshalling serialized
+	 objects.  So create a global factory.*/
+
+/* Add some helper methods to geometries */
+%extend geos::Geometry {
+	static geos::GeometryFactory& factory()
+	{
+		static geos::GeometryFactory factory;
+		return factory;
+	}
+
+	static geos::WKBReader& reader()
+	{
+		#if GEOS_VERSION_MAJOR == 2
+		static geos::WKBReader reader(geos_Geometry_factory());
+		#else
+		static geos::io::WKBReader reader(geos_Geometry_factory());
+		#endif
+		return reader;
+	}
+
+	static Geometry* fromWKT(std::string wkt)
+	{
+		std::stringstream in(wkt);
+		return geos_Geometry_reader().read(in);
+	}
+	
+	static Geometry* fromHEX(std::string hex)
+	{
+		std::stringstream in(hex);
+		return geos_Geometry_reader().readHEX(in);
+	}
+};


-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060403/d5bfdd85/smime.bin
From mateusz at loskot.net  Mon Apr  3 18:09:59 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
Message-ID: <44319D37.3020602@loskot.net>

Hi,

GEOSException class and all its derivatives is incompatible with
std::exception.
GEOSException is derived from std::exception but it does not make much
sense. It even introduces many confusions.

GEOSException has its own member to store message GEOSException::txt.
But std::exception has it's own member storing exception message.
It also has it's own version of what() function that returns
GEOSException::txt but this what() has nothing to do with that one
provided by std::exception.

The main problem is that exception details are not available through
std::exception interface.
Simply, this structure is a kind of two types in one, but every of this
participator is completely separated from another one.

Here is illustration of the problem:

try
{
   throw geos::util::GEOSException("This is a message from GEOS.");
}
catch (std::exception const& e)
{
   std::string msg = e.what();
   std::cout << msg << std::endl; <--- BUM! BUM! BUM!
}

In the example above, exceptions are catched through base
std::exception. It's very common situation.
The problem is that e.what() returns null pointer.
std::exception member of string message is not initialized during
construction of GEOSException. This is a bug.

This example illustrates that deriving GEOSException from std::exception
has no effect at all. std::exception type is completely unused.

My suggestions are:
1. To remove GEOSException::txt

2. To use std::exception buffer member for message (in VC++ version of
STL it's private member std::exception::_m_what declared as:
const char *_m_what;

3. To initialize call base class (std::exception) constructor during
construction of GEOSException using initializers list:

class GEOSException : public std::exception
{
public:
   GEOSException(char const* msg) : std::exception(msg) {}
   GEOSException(std::string const& msg)
      : std::exception(msg.c_str())
   {}
   virtual ~GEOSException() {}
};

4. Use initializers list in every class derived from GEOSException,
so every time std::exception's message member will be initialized.

Here is usage example that proofs it fixes the problem I introduced:

///////////////////////////////////////////////////////////
#include <iostream>
#include <string>
#include <exception>

class GEOSException : public std::exception
{
public:
   GEOSException(char const* msg) : std::exception(msg) {}
   GEOSException(std::string const& msg)
      : std::exception(msg.c_str())
   {}
   virtual ~GEOSException() {}
};

int main()
{
   try
   {
      throw GEOSException("This is a message from GEOS.");
   }
   catch (std::exception const& e)
   {
      std::string msg = e.what();
      std::cout << msg << std::endl;
   }

   try
   {
      std::string msg("This is a std::string message from GEOS.");
      throw GEOSException(msg);
   }
   catch (std::exception const& e)
   {
      std::string msg = e.what();
      std::cout << msg << std::endl;
   }

   return 0;
}
///////////////////////////////////////////////////////////


Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net


From mateusz at loskot.net  Mon Apr  3 18:33:19 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Using static values in Unit Tests
Message-ID: <4431A2AF.1090006@loskot.net>

Hi,

Simply question, do you think it is safe to use static values for
results comparison in Unit Tests.
In example, I want to test length/area calculations, so I need to
compare result with some well known value.

The simplest solution is to use:
// ...
const double length = 14.142135623730951;

line.getLength() == length

Is this safe regarding double prec. numbers representation
on different architectures?

Another option is to to check the closure of expected result.
A little descriptive example of this concept:

// value of result returned by getLength or getArea
double result = 14.13873095113561;

// well-known and expected result for some test case
const double expected = 14.142135623730951;

// Check equality with accuracy of 0.001
double ab = fabs(result - expected);
if (ab > 0.001)
   cout << "EQUAL\n";
else
   cout << "NOT EQUAL\n";

or something similar.

What approach would you recommend?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Mon Apr  3 20:03:33 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] I'm lost with LineString
Message-ID: <4431B7D5.3020308@loskot.net>

Hi,

May be it's an extremely trivial problem or it's quite late and I should
get to bad, but please help me :-)))

The question is:
how to add/remove point from existing instance of LineString class?

I created LineString assigning to it object of type of
CoordinateArraySequence with some points.
Now, I'd like to add/remove points from this sequence assigned to
linestring.

How can I achive this simple functionality?

I'm sure it's very simple, but I can not find it.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From hobu at iastate.edu  Mon Apr  3 21:47:47 2006
From: hobu at iastate.edu (Howard Butler)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOS Buildbot
In-Reply-To: <4431B7D5.3020308@loskot.net>
References: <4431B7D5.3020308@loskot.net>
Message-ID: <p06200707c0577f73cc44@[192.168.11.4]>

All,

I have setup a Buildbot instance for GEOS HEAD at 
http://geos.builds.hobu.net  There is a Linux FC4 box (with gcc 
4.0.2), a Mac OSX box (with gcc 4.0.2 and configured to use GNU 
libtool), and a Windows XP box (with MSVC 7.1).

The buildbot is also available on the #postgis IRC channel under the 
handle "geosbuildbot".  It is setup to build nightly for all three 
slaves, and you can manually invoke a build by going to the webpage, 
clicking on a slave, and hitting the "build" button, or by giving the 
bot in IRC a build command (geosbuildbot: commands).

Here's to an excellent, well-tested, and multi-platform GEOS 3.0 release!

Howard

From woodbri at swoodbridge.com  Mon Apr  3 20:50:07 2006
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] I'm lost with LineString
In-Reply-To: <4431B7D5.3020308@loskot.net>
References: <4431B7D5.3020308@loskot.net>
Message-ID: <4431C2BF.1070404@swoodbridge.com>

Mateusz,

AddPoint(linestring, point, [<position>])

I don't think you can easily remove a point. Dump(geometry) might allow 
you to do it, but I'm not sure how it works.

I STRONGLY believe that there should be set of functions that allow 
versatile construction, editing and deconstruction of geometries. I 
think we have a good start at these, and it probably my limited 
knowledge that prevents me from see how to do the others :)

-Steve

Mateusz ?oskot wrote:
> Hi,
> 
> May be it's an extremely trivial problem or it's quite late and I should
> get to bad, but please help me :-)))
> 
> The question is:
> how to add/remove point from existing instance of LineString class?
> 
> I created LineString assigning to it object of type of
> CoordinateArraySequence with some points.
> Now, I'd like to add/remove points from this sequence assigned to
> linestring.
> 
> How can I achive this simple functionality?
> 
> I'm sure it's very simple, but I can not find it.
> 
> Cheers


From mateusz at loskot.net  Mon Apr  3 21:17:24 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] I'm lost with LineString
In-Reply-To: <4431C2BF.1070404@swoodbridge.com>
References: <4431B7D5.3020308@loskot.net> <4431C2BF.1070404@swoodbridge.com>
Message-ID: <4431C924.7080605@loskot.net>

Hi Stephen,

Stephen Woodbridge wrote:
> Mateusz,
> 
> AddPoint(linestring, point, [<position>])

Hmm, am I missing something or there is no AddPoint symbol in GEOS?

I grepped through all sources:

d:\geos\source>find . -type f -name *.cpp | xargs grep AddPoint

d:\geos\source>find . -type f -name *.h | xargs grep AddPoint


and I don't see any symbol named as AddPoint :-)

Strange.

> I don't think you can easily remove a point. 

I'm curious if there is any rationale to not to provide such function.

> I STRONGLY believe that there should be set of functions that allow 
> versatile construction, editing and deconstruction of geometries.

I believe too.
May be it's a good time to discuss it in details.
GEOS Team & Users: What do you think?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From dblasby at openplans.org  Mon Apr  3 22:56:46 2006
From: dblasby at openplans.org (David Blasby)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] DouglasPeuckerLineSimplifier port
In-Reply-To: <20060403102448.GA61910@keybit.net>
References: <20060403102448.GA61910@keybit.net>
Message-ID: <4431E06E.8050205@openplans.org>

Strk, you mentioned DouglasPeuckerLineSimplifier so I thought I'd 
mention that I find JTS's TopologyPreservingSimplifier to be extreamly 
useful if you're simplifying polygons.  Is this in GEOS?

dave

From woodbri at swoodbridge.com  Mon Apr  3 23:11:07 2006
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] I'm lost with LineString
In-Reply-To: <4431C924.7080605@loskot.net>
References: <4431B7D5.3020308@loskot.net> <4431C2BF.1070404@swoodbridge.com>
	<4431C924.7080605@loskot.net>
Message-ID: <4431E3CB.705@swoodbridge.com>

Oops, my bad! AddPoint() is part of postGIS not GEOS.

So maybe I have been up too late also and should go to bed.

-Steve

Mateusz ?oskot wrote:
> Hi Stephen,
> 
> Stephen Woodbridge wrote:
> 
>>Mateusz,
>>
>>AddPoint(linestring, point, [<position>])
> 
> 
> Hmm, am I missing something or there is no AddPoint symbol in GEOS?
> 
> I grepped through all sources:
> 
> d:\geos\source>find . -type f -name *.cpp | xargs grep AddPoint
> 
> d:\geos\source>find . -type f -name *.h | xargs grep AddPoint
> 
> 
> and I don't see any symbol named as AddPoint :-)
> 
> Strange.
> 
> 
>>I don't think you can easily remove a point. 
> 
> 
> I'm curious if there is any rationale to not to provide such function.
> 
> 
>>I STRONGLY believe that there should be set of functions that allow 
>>versatile construction, editing and deconstruction of geometries.
> 
> 
> I believe too.
> May be it's a good time to discuss it in details.
> GEOS Team & Users: What do you think?
> 
> Cheers


From strk at refractions.net  Tue Apr  4 02:44:28 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] DouglasPeuckerLineSimplifier port
In-Reply-To: <4431E06E.8050205@openplans.org>
References: <20060403102448.GA61910@keybit.net>
	<4431E06E.8050205@openplans.org>
Message-ID: <20060404064428.GB76252@keybit.net>

On Mon, Apr 03, 2006 at 07:56:46PM -0700, David Blasby wrote:
> Strk, you mentioned DouglasPeuckerLineSimplifier so I thought I'd 
> mention that I find JTS's TopologyPreservingSimplifier to be extreamly 
> useful if you're simplifying polygons.  Is this in GEOS?

Not yet, I just started with the 'simplify' package
and before proceeding I'd like to gather feedback
on porting process. Meanwhile I'm busy hunting for
instability bugs.

--strk;

From strk at refractions.net  Tue Apr  4 03:08:59 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
In-Reply-To: <44319D37.3020602@loskot.net>
References: <44319D37.3020602@loskot.net>
Message-ID: <20060404070859.GC76252@keybit.net>

Good catch Mateus, anyway there's no std::exception(const char*)
interface in my STL implementation (GCC 3.3).

Here it is:

  /**
   *  @brief Base class for all library exceptions.
   *
   *  This is the base class for all exceptions thrown by the standard
   *  library, and by certain language expressions.  You are free to derive
   *  your own %exception classes, or use a different hierarchy, or to
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() throw() { }
    virtual ~exception() throw();
    /** Returns a C-style character string describing the general cause
     *  of the current error.  */
    virtual const char* what() const throw();
  };

We can pick one of the derivated classes like runtime_exception
insted. That one allows contruction taking 'const string&'.
It's defined in <stdexcept>.
What do you think ?

--strk;
 
On Tue, Apr 04, 2006 at 12:09:59AM +0200, Mateusz ??oskot wrote:
> Hi,
> 
> GEOSException class and all its derivatives is incompatible with
> std::exception.
> GEOSException is derived from std::exception but it does not make much
> sense. It even introduces many confusions.
> 
> GEOSException has its own member to store message GEOSException::txt.
> But std::exception has it's own member storing exception message.
> It also has it's own version of what() function that returns
> GEOSException::txt but this what() has nothing to do with that one
> provided by std::exception.
> 
> The main problem is that exception details are not available through
> std::exception interface.
> Simply, this structure is a kind of two types in one, but every of this
> participator is completely separated from another one.
> 
> Here is illustration of the problem:
> 
> try
> {
>    throw geos::util::GEOSException("This is a message from GEOS.");
> }
> catch (std::exception const& e)
> {
>    std::string msg = e.what();
>    std::cout << msg << std::endl; <--- BUM! BUM! BUM!
> }
> 
> In the example above, exceptions are catched through base
> std::exception. It's very common situation.
> The problem is that e.what() returns null pointer.
> std::exception member of string message is not initialized during
> construction of GEOSException. This is a bug.
> 
> This example illustrates that deriving GEOSException from std::exception
> has no effect at all. std::exception type is completely unused.
> 
> My suggestions are:
> 1. To remove GEOSException::txt
> 
> 2. To use std::exception buffer member for message (in VC++ version of
> STL it's private member std::exception::_m_what declared as:
> const char *_m_what;
> 
> 3. To initialize call base class (std::exception) constructor during
> construction of GEOSException using initializers list:
> 
> class GEOSException : public std::exception
> {
> public:
>    GEOSException(char const* msg) : std::exception(msg) {}
>    GEOSException(std::string const& msg)
>       : std::exception(msg.c_str())
>    {}
>    virtual ~GEOSException() {}
> };
> 
> 4. Use initializers list in every class derived from GEOSException,
> so every time std::exception's message member will be initialized.
> 
> Here is usage example that proofs it fixes the problem I introduced:
> 
> ///////////////////////////////////////////////////////////
> #include <iostream>
> #include <string>
> #include <exception>
> 
> class GEOSException : public std::exception
> {
> public:
>    GEOSException(char const* msg) : std::exception(msg) {}
>    GEOSException(std::string const& msg)
>       : std::exception(msg.c_str())
>    {}
>    virtual ~GEOSException() {}
> };
> 
> int main()
> {
>    try
>    {
>       throw GEOSException("This is a message from GEOS.");
>    }
>    catch (std::exception const& e)
>    {
>       std::string msg = e.what();
>       std::cout << msg << std::endl;
>    }
> 
>    try
>    {
>       std::string msg("This is a std::string message from GEOS.");
>       throw GEOSException(msg);
>    }
>    catch (std::exception const& e)
>    {
>       std::string msg = e.what();
>       std::cout << msg << std::endl;
>    }
> 
>    return 0;
> }
> ///////////////////////////////////////////////////////////
> 
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Tue Apr  4 03:15:10 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Using static values in Unit Tests
In-Reply-To: <4431A2AF.1090006@loskot.net>
References: <4431A2AF.1090006@loskot.net>
Message-ID: <20060404071510.GD76252@keybit.net>

I'd go with a tolerance value, but rather then
set it immediately I'll leave it for later, when
we detect differences. I'd start with a tolerance of 0.

--strk;

On Tue, Apr 04, 2006 at 12:33:19AM +0200, Mateusz ??oskot wrote:
> Hi,
> 
> Simply question, do you think it is safe to use static values for
> results comparison in Unit Tests.
> In example, I want to test length/area calculations, so I need to
> compare result with some well known value.
> 
> The simplest solution is to use:
> // ...
> const double length = 14.142135623730951;
> 
> line.getLength() == length
> 
> Is this safe regarding double prec. numbers representation
> on different architectures?
> 
> Another option is to to check the closure of expected result.
> A little descriptive example of this concept:
> 
> // value of result returned by getLength or getArea
> double result = 14.13873095113561;
> 
> // well-known and expected result for some test case
> const double expected = 14.142135623730951;
> 
> // Check equality with accuracy of 0.001
> double ab = fabs(result - expected);
> if (ab > 0.001)
>    cout << "EQUAL\n";
> else
>    cout << "NOT EQUAL\n";
> 
> or something similar.
> 
> What approach would you recommend?
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Tue Apr  4 03:30:11 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] I'm lost with LineString
In-Reply-To: <4431B7D5.3020308@loskot.net>
References: <4431B7D5.3020308@loskot.net>
Message-ID: <20060404073011.GE76252@keybit.net>

There's no way to edit GEOS Geometries, except by 
constructing new ones. The GeometryEditor class
should do just that
(See headers/geos/geom/util/GeometryEditor.h)

--strk;


On Tue, Apr 04, 2006 at 02:03:33AM +0200, Mateusz ??oskot wrote:
> Hi,
> 
> May be it's an extremely trivial problem or it's quite late and I should
> get to bad, but please help me :-)))
> 
> The question is:
> how to add/remove point from existing instance of LineString class?
> 
> I created LineString assigning to it object of type of
> CoordinateArraySequence with some points.
> Now, I'd like to add/remove points from this sequence assigned to
> linestring.
> 
> How can I achive this simple functionality?
> 
> I'm sure it's very simple, but I can not find it.
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Tue Apr  4 04:38:56 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
In-Reply-To: <20060404070859.GC76252@keybit.net>
References: <44319D37.3020602@loskot.net> <20060404070859.GC76252@keybit.net>
Message-ID: <20060404083856.GB83781@keybit.net>

I've changed GEOSException to derive from std::runtime_exception
and to use initialization list for construction.
Unfortunately I still get the 'unstable' bug.

If other people wants to test this, one of the sympthoms
can be seen by running ./XMLTester TestValid.xml with
and w/out valgrind.

The 'valgrind-equipped' run will result in NO failures.
The 'valgrind-less' run will result in 2 failures (at least here).

Other cases are welcome.

--strk;


On Tue, Apr 04, 2006 at 09:08:59AM +0200, strk@refractions.net wrote:
> Good catch Mateus, anyway there's no std::exception(const char*)
> interface in my STL implementation (GCC 3.3).
> 
> Here it is:
> 
>   /**
>    *  @brief Base class for all library exceptions.
>    *
>    *  This is the base class for all exceptions thrown by the standard
>    *  library, and by certain language expressions.  You are free to derive
>    *  your own %exception classes, or use a different hierarchy, or to
>    *  throw non-class data (e.g., fundamental types).
>    */
>   class exception
>   {
>   public:
>     exception() throw() { }
>     virtual ~exception() throw();
>     /** Returns a C-style character string describing the general cause
>      *  of the current error.  */
>     virtual const char* what() const throw();
>   };
> 
> We can pick one of the derivated classes like runtime_exception
> insted. That one allows contruction taking 'const string&'.
> It's defined in <stdexcept>.
> What do you think ?
> 
> --strk;
>  
> On Tue, Apr 04, 2006 at 12:09:59AM +0200, Mateusz ??oskot wrote:
> > Hi,
> > 
> > GEOSException class and all its derivatives is incompatible with
> > std::exception.
> > GEOSException is derived from std::exception but it does not make much
> > sense. It even introduces many confusions.
> > 
> > GEOSException has its own member to store message GEOSException::txt.
> > But std::exception has it's own member storing exception message.
> > It also has it's own version of what() function that returns
> > GEOSException::txt but this what() has nothing to do with that one
> > provided by std::exception.
> > 
> > The main problem is that exception details are not available through
> > std::exception interface.
> > Simply, this structure is a kind of two types in one, but every of this
> > participator is completely separated from another one.
> > 
> > Here is illustration of the problem:
> > 
> > try
> > {
> >    throw geos::util::GEOSException("This is a message from GEOS.");
> > }
> > catch (std::exception const& e)
> > {
> >    std::string msg = e.what();
> >    std::cout << msg << std::endl; <--- BUM! BUM! BUM!
> > }
> > 
> > In the example above, exceptions are catched through base
> > std::exception. It's very common situation.
> > The problem is that e.what() returns null pointer.
> > std::exception member of string message is not initialized during
> > construction of GEOSException. This is a bug.
> > 
> > This example illustrates that deriving GEOSException from std::exception
> > has no effect at all. std::exception type is completely unused.
> > 
> > My suggestions are:
> > 1. To remove GEOSException::txt
> > 
> > 2. To use std::exception buffer member for message (in VC++ version of
> > STL it's private member std::exception::_m_what declared as:
> > const char *_m_what;
> > 
> > 3. To initialize call base class (std::exception) constructor during
> > construction of GEOSException using initializers list:
> > 
> > class GEOSException : public std::exception
> > {
> > public:
> >    GEOSException(char const* msg) : std::exception(msg) {}
> >    GEOSException(std::string const& msg)
> >       : std::exception(msg.c_str())
> >    {}
> >    virtual ~GEOSException() {}
> > };
> > 
> > 4. Use initializers list in every class derived from GEOSException,
> > so every time std::exception's message member will be initialized.
> > 
> > Here is usage example that proofs it fixes the problem I introduced:
> > 
> > ///////////////////////////////////////////////////////////
> > #include <iostream>
> > #include <string>
> > #include <exception>
> > 
> > class GEOSException : public std::exception
> > {
> > public:
> >    GEOSException(char const* msg) : std::exception(msg) {}
> >    GEOSException(std::string const& msg)
> >       : std::exception(msg.c_str())
> >    {}
> >    virtual ~GEOSException() {}
> > };
> > 
> > int main()
> > {
> >    try
> >    {
> >       throw GEOSException("This is a message from GEOS.");
> >    }
> >    catch (std::exception const& e)
> >    {
> >       std::string msg = e.what();
> >       std::cout << msg << std::endl;
> >    }
> > 
> >    try
> >    {
> >       std::string msg("This is a std::string message from GEOS.");
> >       throw GEOSException(msg);
> >    }
> >    catch (std::exception const& e)
> >    {
> >       std::string msg = e.what();
> >       std::cout << msg << std::endl;
> >    }
> > 
> >    return 0;
> > }
> > ///////////////////////////////////////////////////////////
> > 
> > 
> > Cheers
> > -- 
> > Mateusz ??oskot
> > http://mateusz.loskot.net
> > 
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> 
> -- 
> 
>  /"\    ASCII Ribbon Campaign
>  \ /    Respect for low technology.
>   X     Keep e-mail messages readable by any computer system.
>  / \    Keep it ASCII. 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Tue Apr  4 05:17:38 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 2.2.2 SWIG patches/updates
In-Reply-To: <443176D8.201@interserv.com>
References: <443176D8.201@interserv.com>
Message-ID: <20060404091738.GA84351@keybit.net>

On Mon, Apr 03, 2006 at 01:26:16PM -0600, Charlie Savage wrote:
> Hi everyone,
> 
> Over the weekend I sent a patch to Strk for the Geos 2.2.2 SWIG 
> bindings.  It basically back ports the work I've done on GEOS head. 
> I've included the updated geos.i below for people who are interested in 
> reviewing it.

I've applied your patches to the 2.2. branch.
Note that I modified the Makefile.am to avoid
attempts at automatically building the SWIG
wrappers.

Also, I didn't include the generated geos_wrapper.cxx
file.

Tests welcome.

--strk;

From strk at refractions.net  Tue Apr  4 06:00:34 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOS Buildbot
In-Reply-To: <p06200707c0577f73cc44@[192.168.11.4]>
References: <4431B7D5.3020308@loskot.net>
	<p06200707c0577f73cc44@[192.168.11.4]>
Message-ID: <20060404100034.GB84351@keybit.net>

Thanks a lot Hobu!
It's being very useful.
--strk;

On Mon, Apr 03, 2006 at 07:47:47PM -0600, Howard Butler wrote:
> All,
> 
> I have setup a Buildbot instance for GEOS HEAD at 
> http://geos.builds.hobu.net  There is a Linux FC4 box (with gcc 
> 4.0.2), a Mac OSX box (with gcc 4.0.2 and configured to use GNU 
> libtool), and a Windows XP box (with MSVC 7.1).
> 
> The buildbot is also available on the #postgis IRC channel under the 
> handle "geosbuildbot".  It is setup to build nightly for all three 
> slaves, and you can manually invoke a build by going to the webpage, 
> clicking on a slave, and hitting the "build" button, or by giving the 
> bot in IRC a build command (geosbuildbot: commands).
> 
> Here's to an excellent, well-tested, and multi-platform GEOS 3.0 release!
> 
> Howard

From strk at refractions.net  Tue Apr  4 07:16:17 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] FINITE() vs. finite()
Message-ID: <20060404111617.GE84351@keybit.net>

I can't remember why, but the FINITE()
macro in platform.h.in is not using finite()
call from <cmath> anymore. Should it ?

I just found a bug in the HCoordinate class
which would throw an exception if FINITE()
doesn't evaluate to true, but is failing
to catch -inf and +inf values due to
absence of the finite() call.

So, the question is:
	- Should FINITE() macro check for finite() ?
	OR
	- Should HCoordinate use finite() instead
	  of FINITE() macro ?

Comments welcome.

--strk;

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From mateusz at loskot.net  Tue Apr  4 10:44:31 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
In-Reply-To: <20060404070859.GC76252@keybit.net>
References: <44319D37.3020602@loskot.net> <20060404070859.GC76252@keybit.net>
Message-ID: <4432864F.8020306@loskot.net>

strk@refractions.net wrote:
> Good catch Mateus, anyway there's no std::exception(const char*)
> interface in my STL implementation (GCC 3.3).
> [...]

Yes, sorry, that's my fault.
I used unstandard STL.

Let's make it clear. Standard version of exception class is:

class exception {
public:
    exception() throw();
    exception(const exception& right) throw();
    exception& operator=(const exception& right) throw();
    virtual ~exception() throw();
    virtual const char *what() const throw();
    };

what() is virtual, so next we have many derived classes:

class logic_error : public exception {
public:
    logic_error(const string& message);
    };

Here, logic_error has it's own version of message member, but becasue
what() is virtual, proper string is returned.


> We can pick one of the derivated classes like runtime_exception
> insted. That one allows contruction taking 'const string&'.
> It's defined in <stdexcept>.

Yes, as I corrected myself above.

> What do you think ?

Honestly, I don't think al GEOS exceptions can be categorized as
runtime_exception, some are logical e.g. IllegalArgumentException.
GEOSException is a general geos exception and I think it should be
derived directly from std::exception.
GEOSException could be defined similarly as those exceptions in
<stdexcept> file.

What do you think?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Tue Apr  4 10:55:44 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Using static values in Unit Tests
In-Reply-To: <20060404071510.GD76252@keybit.net>
References: <4431A2AF.1090006@loskot.net> <20060404071510.GD76252@keybit.net>
Message-ID: <443288F0.2050203@loskot.net>

strk@refractions.net wrote:
> I'd go with a tolerance value, but rather then
> set it immediately I'll leave it for later, when
> we detect differences. I'd start with a tolerance of 0.

Ok, but I'm not sure I understand the idea correctly.
Do you mean to loop starting from tolerance = 0 and check if values are
equal, if not, tolerance is increased e.g. 0 + 0.001 and results are
compared again. Loop ends when results comparison = true.

Is this the idea?

Cheers

-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Tue Apr  4 10:56:36 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] I'm lost with LineString
In-Reply-To: <20060404073011.GE76252@keybit.net>
References: <4431B7D5.3020308@loskot.net> <20060404073011.GE76252@keybit.net>
Message-ID: <44328924.4050003@loskot.net>

strk@refractions.net wrote:
> There's no way to edit GEOS Geometries, except by 
> constructing new ones.

Could you tell me what is the reason of this concept?
I'm just curious.

> The GeometryEditor class
> should do just that
> (See headers/geos/geom/util/GeometryEditor.h)

OK, I'll check it.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Tue Apr  4 11:37:34 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <44308D60.6000109@interserv.com>
References: <44308D60.6000109@interserv.com>
Message-ID: <20060404153734.GC88938@keybit.net>

On Sun, Apr 02, 2006 at 08:50:08PM -0600, Charlie Savage wrote:

> For MinGw - still doesn't build.  Same link error:
> 
> c:\Development\MinGW\mingw32\bin\ld.exe: BFD 2.16.91 20060119 assertion 
> fail ../../src/bfd/cofflink.c:1926
> make[2]: *** [libgeos.la] Error 5
> make[2]: Leaving directory `/usr/src/geos/source'
> make[1]: *** [all-recursive] Error 1
> make[1]: Leaving directory `/usr/src/geos/source'
> make: *** [all-recursive] Error 1
> 
> Causes ld to have a segmentation fault.

Charlie, could you try adding -lstdc++ to
libgeos_la_LDFLAGS in source/Makefile.am ?

--strk;

From strk at refractions.net  Tue Apr  4 11:40:52 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
In-Reply-To: <4432864F.8020306@loskot.net>
References: <44319D37.3020602@loskot.net> <20060404070859.GC76252@keybit.net>
	<4432864F.8020306@loskot.net>
Message-ID: <20060404154052.GD88938@keybit.net>

On Tue, Apr 04, 2006 at 04:44:31PM +0200, Mateusz ??oskot wrote:

> Honestly, I don't think al GEOS exceptions can be categorized as
> runtime_exception, some are logical e.g. IllegalArgumentException.
> GEOSException is a general geos exception and I think it should be
> derived directly from std::exception.
> GEOSException could be defined similarly as those exceptions in
> <stdexcept> file.
> 
> What do you think?

That's fine with me.
Anyway, I think this was previous layout.
Maybe the problem was GEOSException didn't define
what() as a 'const' method (thus NOT overriding
the non-const version) ?

--strk;


From strk at refractions.net  Tue Apr  4 11:43:36 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Using static values in Unit Tests
In-Reply-To: <443288F0.2050203@loskot.net>
References: <4431A2AF.1090006@loskot.net> <20060404071510.GD76252@keybit.net>
	<443288F0.2050203@loskot.net>
Message-ID: <20060404154335.GE88938@keybit.net>

On Tue, Apr 04, 2006 at 04:55:44PM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > I'd go with a tolerance value, but rather then
> > set it immediately I'll leave it for later, when
> > we detect differences. I'd start with a tolerance of 0.
> 
> Ok, but I'm not sure I understand the idea correctly.
> Do you mean to loop starting from tolerance = 0 and check if values are
> equal, if not, tolerance is increased e.g. 0 + 0.001 and results are
> compared again. Loop ends when results comparison = true.
> 
> Is this the idea?

The idea is just to use a "global" tolerance value, to try
at keeping it as small as possible. An automated loop could
help finding out the minimum tolerance, but I'm not sure
the complexity makes it worth.

--strk;

From mateusz at loskot.net  Tue Apr  4 12:29:01 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Using static values in Unit Tests
In-Reply-To: <20060404154335.GE88938@keybit.net>
References: <4431A2AF.1090006@loskot.net>
	<20060404071510.GD76252@keybit.net>	<443288F0.2050203@loskot.net>
	<20060404154335.GE88938@keybit.net>
Message-ID: <44329ECD.1020405@loskot.net>

strk@refractions.net wrote:
> On Tue, Apr 04, 2006 at 04:55:44PM +0200, Mateusz ??oskot wrote:
>> strk@refractions.net wrote:
>>> I'd go with a tolerance value, but rather then
>>> set it immediately I'll leave it for later, when
>>> we detect differences. I'd start with a tolerance of 0.
>> Ok, but I'm not sure I understand the idea correctly.
>> Do you mean to loop starting from tolerance = 0 and check if values are
>> equal, if not, tolerance is increased e.g. 0 + 0.001 and results are
>> compared again. Loop ends when results comparison = true.
>>
>> Is this the idea?
> 
> The idea is just to use a "global" tolerance value, to try
> at keeping it as small as possible. An automated loop could
> help finding out the minimum tolerance, but I'm not sure
> the complexity makes it worth.

I understand.
OK, I'll do some tests after I release UT.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Tue Apr  4 12:55:36 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <20060404153734.GC88938@keybit.net>
References: <44308D60.6000109@interserv.com>
	<20060404153734.GC88938@keybit.net>
Message-ID: <4432A508.7040008@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060404/ec31ca70/smime.bin
From mateusz at loskot.net  Tue Apr  4 12:59:20 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
In-Reply-To: <20060404154052.GD88938@keybit.net>
References: <44319D37.3020602@loskot.net>
	<20060404070859.GC76252@keybit.net>	<4432864F.8020306@loskot.net>
	<20060404154052.GD88938@keybit.net>
Message-ID: <4432A5E8.1080406@loskot.net>

strk@refractions.net wrote:
> On Tue, Apr 04, 2006 at 04:44:31PM +0200, Mateusz ??oskot wrote:
> 
>> Honestly, I don't think al GEOS exceptions can be categorized as 
>> runtime_exception, some are logical e.g. IllegalArgumentException. 
>> GEOSException is a general geos exception and I think it should be 
>> derived directly from std::exception. GEOSException could be
>> defined similarly as those exceptions in <stdexcept> file.
>> 
>> What do you think?
> 
> That's fine with me. Anyway, I think this was previous layout.

Yes, indeed.
But there were no what() accessor, so that's why the problem occured.

> Maybe the problem was GEOSException didn't define what() as a 'const'
> method (thus NOT overriding the non-const version) ?

Yes, I think so.
I've just tested it again and here is my final proposal:

1. GEOSException derives from std::exception
2. GEOSException has it's own member to store the message,
similarly to standard exception classes derived from std::exception
3. GEOSException overrides virtual member declared in
std::exception::what() to return the message stored in the local buffer

Does it make sense?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From hobu at iastate.edu  Tue Apr  4 12:59:39 2006
From: hobu at iastate.edu (Howard Butler)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <4432A508.7040008@interserv.com>
References: <44308D60.6000109@interserv.com>
	<20060404153734.GC88938@keybit.net>
	<4432A508.7040008@interserv.com>
Message-ID: <6.2.3.4.2.20060404115919.0270cb90@hobu.mail.iastate.edu>

OSX does this as well (uses gcc instead of g++).



At 11:55 AM 4/4/2006, Charlie Savage wrote:
>Well, that brings up another error - on MinGW the geos autoconf 
>scripts use gcc not g++.  I posted a bug a message about that back 
>in February I think it was.  I'll dig it up and put it in the bug database.
>
>Thus, I always manually edit the generated Make file and use 
>g++.  That include libstdc++ by default - otherwise you can't even 
>compile geos.
>
>Charlie
>
><mailto:strk@refractions.net>strk@refractions.net wrote:
>>
>>On Sun, Apr 02, 2006 at 08:50:08PM -0600, Charlie Savage wrote:
>>
>>
>>>
>>>For MinGw - still doesn't build.  Same link error:
>>>
>>>c:\Development\MinGW\mingw32\bin\ld.exe: BFD 2.16.91 20060119 assertion
>>>fail ../../src/bfd/cofflink.c:1926
>>>make[2]: *** [libgeos.la] Error 5
>>>make[2]: Leaving directory `/usr/src/geos/source'
>>>make[1]: *** [all-recursive] Error 1
>>>make[1]: Leaving directory `/usr/src/geos/source'
>>>make: *** [all-recursive] Error 1
>>>
>>>Causes ld to have a segmentation fault.
>>>
>>
>>
>>Charlie, could you try adding -lstdc++ to
>>libgeos_la_LDFLAGS in source/Makefile.am ?
>>
>>--strk;
>>
>>
>>
>
>_______________________________________________
>geos-devel mailing list
>geos-devel@geos.refractions.net
>http://geos.refractions.net/mailman/listinfo/geos-devel


From cfis at interserv.com  Tue Apr  4 12:59:53 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 2.2.2 SWIG patches/updates
In-Reply-To: <20060404091738.GA84351@keybit.net>
References: <443176D8.201@interserv.com> <20060404091738.GA84351@keybit.net>
Message-ID: <4432A609.4060809@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060404/e648afed/smime.bin
From cfis at interserv.com  Tue Apr  4 13:07:01 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <6.2.3.4.2.20060404115919.0270cb90@hobu.mail.iastate.edu>
References: <44308D60.6000109@interserv.com>
	<20060404153734.GC88938@keybit.net>
	<4432A508.7040008@interserv.com>
	<6.2.3.4.2.20060404115919.0270cb90@hobu.mail.iastate.edu>
Message-ID: <4432A7B5.20005@interserv.com>

Interesting.

Here is the post where I originally brought up the issue and why its 
happening:

http://geos.refractions.net/pipermail/geos-devel/2006-February/001707.html

And here is a bug report I just entered:

http://postgis.refractions.net/bugs/bug.php?op=show&bugid=85&pos=23

Charlie

Howard Butler wrote:
> OSX does this as well (uses gcc instead of g++).
>
>
>
> At 11:55 AM 4/4/2006, Charlie Savage wrote:
>> Well, that brings up another error - on MinGW the geos autoconf 
>> scripts use gcc not g++.  I posted a bug a message about that back in 
>> February I think it was.  I'll dig it up and put it in the bug database.
>>
>> Thus, I always manually edit the generated Make file and use g++.  
>> That include libstdc++ by default - otherwise you can't even compile 
>> geos.
>>
>> Charlie
>>
>> <mailto:strk@refractions.net>strk@refractions.net wrote:
>>>
>>> On Sun, Apr 02, 2006 at 08:50:08PM -0600, Charlie Savage wrote:
>>>
>>>
>>>>
>>>> For MinGw - still doesn't build.  Same link error:
>>>>
>>>> c:\Development\MinGW\mingw32\bin\ld.exe: BFD 2.16.91 20060119 
>>>> assertion
>>>> fail ../../src/bfd/cofflink.c:1926
>>>> make[2]: *** [libgeos.la] Error 5
>>>> make[2]: Leaving directory `/usr/src/geos/source'
>>>> make[1]: *** [all-recursive] Error 1
>>>> make[1]: Leaving directory `/usr/src/geos/source'
>>>> make: *** [all-recursive] Error 1
>>>>
>>>> Causes ld to have a segmentation fault.
>>>>
>>>
>>>
>>> Charlie, could you try adding -lstdc++ to
>>> libgeos_la_LDFLAGS in source/Makefile.am ?
>>>
>>> --strk;
>>>
>>>
>>>
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@geos.refractions.net
>> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>
>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060404/10f677bd/smime.bin
From nhv at cape.com  Tue Apr  4 13:25:46 2006
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <4432A7B5.20005@interserv.com>
Message-ID: <EKEJIKAILPONGGENMBGAAEFOPNAA.nhv@cape.com>

Charlie Savage writes:
> 
> Here is the post where I originally brought up the issue and why its 
> happening:
> 
> http://geos.refractions.net/pipermail/geos-devel/2006-February/001707.html


Charlie

try
./configure --with-tag=CXX

then hand edit $GEOS / source / Makefile

about line 78

change
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
to
LINK = $(LIBTOOL) --tag=CXX --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \

and see if this helps

Norman



> 
> Howard Butler wrote:
> > OSX does this as well (uses gcc instead of g++).
> >
> >
> >
> > At 11:55 AM 4/4/2006, Charlie Savage wrote:
> >> Well, that brings up another error - on MinGW the geos autoconf 
> >> scripts use gcc not g++.  I posted a bug a message about that back in 
> >> February I think it was.  I'll dig it up and put it in the bug database.
> >>
> >> Thus, I always manually edit the generated Make file and use g++.  
> >> That include libstdc++ by default - otherwise you can't even compile 
> >> geos.
> >>
> >> Charlie
> >>
> >> <mailto:strk@refractions.net>strk@refractions.net wrote:
> >>>
> >>> On Sun, Apr 02, 2006 at 08:50:08PM -0600, Charlie Savage wrote:
> >>>
> >>>
> >>>>
> >>>> For MinGw - still doesn't build.  Same link error:
> >>>>
> >>>> c:\Development\MinGW\mingw32\bin\ld.exe: BFD 2.16.91 20060119 
> >>>> assertion
> >>>> fail ../../src/bfd/cofflink.c:1926
> >>>> make[2]: *** [libgeos.la] Error 5
> >>>> make[2]: Leaving directory `/usr/src/geos/source'
> >>>> make[1]: *** [all-recursive] Error 1
> >>>> make[1]: Leaving directory `/usr/src/geos/source'
> >>>> make: *** [all-recursive] Error 1
> >>>>
> >>>> Causes ld to have a segmentation fault.
> >>>>
> >>>
> >>>
> >>> Charlie, could you try adding -lstdc++ to
> >>> libgeos_la_LDFLAGS in source/Makefile.am ?
> >>>
> >>> --strk;
> >>>
> >>>
> >>>
> >>
> >> _______________________________________________
> >> geos-devel mailing list
> >> geos-devel@geos.refractions.net
> >> http://geos.refractions.net/mailman/listinfo/geos-devel
> >
> >
> >
> 

From mateusz at loskot.net  Tue Apr  4 13:27:14 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] [ANN] Bug #86 - Possible memory leaks caused by
	LineString constructor
Message-ID: <4432AC72.6030705@loskot.net>

Hi,

I've just reported new bug, quite serious because it potentially causes
memory leaks when incomplete linesting is created.
So, I (re)report it here because it may need some discussion.

Here is the story:

http://postgis.refractions.net/bugs/bug.php?op=show&bugid=86&pos=3

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From nhv at cape.com  Tue Apr  4 13:33:36 2006
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Geos 3 build issues on Windows
In-Reply-To: <EKEJIKAILPONGGENMBGAAEFOPNAA.nhv@cape.com>
Message-ID: <EKEJIKAILPONGGENMBGAOEFOPNAA.nhv@cape.com>

Norman Vine  wrote:
> 
> Charlie
> 
> try
> ./configure --with-tag=CXX

OOPS

--with-tags=CXX

> 
> then hand edit $GEOS / source / Makefile
> 
> about line 78
> 
> change
> LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
> to
> LINK = $(LIBTOOL) --tag=CXX --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
> 
> and see if this helps
> 
> Norman
 

From mateusz at loskot.net  Tue Apr  4 16:38:12 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] [ANN] Bug #87 - Strange result of isValid() for
	LinearRing
Message-ID: <4432D934.5080307@loskot.net>

Hi,

I've reported new bug on the BT:

http://postgis.refractions.net/bugs/bug.php?op=show&bugid=87&pos=4

I think it may need some wider discussion.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From woodbri at swoodbridge.com  Tue Apr  4 19:32:46 2006
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] [ANN] Bug #87 - Strange result of isValid() for
	LinearRing
In-Reply-To: <4432D934.5080307@loskot.net>
References: <4432D934.5080307@loskot.net>
Message-ID: <4433021E.2030102@swoodbridge.com>

Mateusz ?oskot wrote:
> Hi,
> 
> I've reported new bug on the BT:
> 
> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=87&pos=4
> 
> I think it may need some wider discussion.
> 
> Cheers

Hey Mateusz,

I think your test case is bad.

/ 2. Add 4 points to get closed ring
pseq->add(Coordinate(0, 0, 0));
pseq->add(Coordinate(5, 5, 5));
pseq->add(Coordinate(10, 10, 10));
pseq->add(Coordinate(0, 0, 0)); // <--- [1]

The points (0,0,0), (5,5,5), (10,10,10) are all in a straight line (ie: 
they are co-linear) and then you return to the start point which falls 
on  top of the first two segments so you have a case of a collapsed ring 
where all the point of the ring fall on a single line in space.

This is indeed self intersecting. and isValid() should report it as false.

-Steve

From mateusz at loskot.net  Tue Apr  4 20:07:26 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] [ANN] Bug #87 - Strange result of isValid() for
	LinearRing
In-Reply-To: <4433021E.2030102@swoodbridge.com>
References: <4432D934.5080307@loskot.net> <4433021E.2030102@swoodbridge.com>
Message-ID: <44330A3E.1000001@loskot.net>

Stephen Woodbridge wrote:
> Mateusz ?oskot wrote:
>>
>> I've reported new bug on the BT:
>>
>> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=87&pos=4
>>
>> I think it may need some wider discussion.
>>
> 
> I think your test case is bad.
> 
> / 2. Add 4 points to get closed ring
> pseq->add(Coordinate(0, 0, 0));
> pseq->add(Coordinate(5, 5, 5));
> pseq->add(Coordinate(10, 10, 10));
> pseq->add(Coordinate(0, 0, 0)); // <--- [1]
> 
> The points (0,0,0), (5,5,5), (10,10,10) are all in a straight line (ie:
> they are co-linear) and then you return to the start point which falls
> on  top of the first two segments so you have a case of a collapsed ring
> where all the point of the ring fall on a single line in space.
> 
> This is indeed self intersecting. and isValid() should report it as false.

Yes, you're definitely right! It's my fault, shame on me.
It seems to be a copy-paste mistake, because I took this example from
test of LineString class and pasted to LinearRing test.
So, it's a bug in test ;-)

Thanks!
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Tue Apr  4 21:53:31 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Envelope of empty Polygon
In-Reply-To: <44308716.5070101@loskot.net>
References: <442CC8AB.3070205@loskot.net> <20060331102144.GR21841@keybit.net>
	<44308716.5070101@loskot.net>
Message-ID: <4433231B.7010203@loskot.net>

Mateusz ?oskot wrote:
> strk@refractions.net wrote:
>>> 
>>> Is this correct behaviour? Is empty polygon assumed to return 
>>> non-empty envelope as above?
>> Doens't seem correct. Envelope does have a NULL representation, 
>> which is minx > maxx miny > maxy See Envelope::isNull()
> 
> 
> Ups! It was my fail. As I see, Envelope::setToNull() seems to be ok, 
> as you said above:
> 
> void Envelope::setToNull() { minx=0; maxx=-1; miny=0; maxy=-1; }

Actually, it seems the getEnvelope() for (some?) empty geometries does
not work correctly.
I investigated it in details and here is what I see.
I have empty polygon.
I call Polygon::getEnvelope().
This function calls Geometry::getEnvelope() which subsequently calls
Geometry::computeEnvelopeInternal().
The Geometry::computeEnvelopeInternal() function allocates new Envelope:

new Envelope(*(shell->getEnvelopeInternal())); // <--- [1]

using Envelope's copy constructor and passes Envelope returned by
Geometry::getEnvelopeInternal() call.
In fact, for polygon LineString::computeEnvelopeInternal() is called
which checks if LineString (LinearRing in fact) is empty:
// LineString.cpp:229
if (isEmpty()) {
   // Should return NULL instead ?
   return new Envelope();
}

and returns new empty Envelope initialized by Envelope::setToNull(), so
Envelope corners have following values:

minx = 0;
maxx = -1;
miny = 0;
maxy = -1;

NOTE: Everything works correctly, so far.

Now, let's move back to the Envelope's copy ctor from called in [1]:

new Envelope(*(shell->getEnvelopeInternal()));

Here, empty envelope is returned by getEnvelopeInternal() and is
immediately passed to copy ctor of Envelope class.
AND HERE TROUBLES BEGIN.

Envelope::Envelope(const Envelope &env)
{
   init(env.minx, env.maxx, env.miny, env.maxy);
}

As you see above, copy ctor calls init() passing 'env' - a null Envelope
returned from getEnvelopeInternal() call.

But the
Envelope::init(double x1, double x2, double y1, double y2)
call reorganizes min/max values of corners to make Envelope properly
oriented. This reorganizations brokes the state of Envelope - null
state. So, null Envelope stops to be null with some magic :-)

Here is the screenshot from debugging session under VC++:
http://mateusz.loskot.net/chwila/geos-empty-polygon-getenvelope-notempty.jpg

You can see the state of input/output envelope just after init()
execution has been left. I hope it presents the problem very well.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Wed Apr  5 04:26:59 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Envelope of empty Polygon
In-Reply-To: <4433231B.7010203@loskot.net>
References: <442CC8AB.3070205@loskot.net> <20060331102144.GR21841@keybit.net>
	<44308716.5070101@loskot.net> <4433231B.7010203@loskot.net>
Message-ID: <20060405082659.GB99038@keybit.net>

Mateusz ??oskot wrote:

> As you see above, copy ctor calls init() passing 'env' - a null Envelope
> returned from getEnvelopeInternal() call.
> 
> But the
> Envelope::init(double x1, double x2, double y1, double y2)
> call reorganizes min/max values of corners to make Envelope properly
> oriented. This reorganizations brokes the state of Envelope - null
> state. So, null Envelope stops to be null with some magic :-)

Good report Mateus!
I guess the solution here is to just remove explicit
definition of the copy ctor and let compiler syntetize
it for us (Envelope doesn't contain any pointer).
What do you think ?

--strk;

From mateusz at loskot.net  Wed Apr  5 04:52:14 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Envelope of empty Polygon
In-Reply-To: <20060405082659.GB99038@keybit.net>
References: <442CC8AB.3070205@loskot.net>
	<20060331102144.GR21841@keybit.net>	<44308716.5070101@loskot.net>
	<4433231B.7010203@loskot.net> <20060405082659.GB99038@keybit.net>
Message-ID: <4433853E.90502@loskot.net>

strk@refractions.net wrote:
> Mateusz ??oskot wrote:
> 
>> As you see above, copy ctor calls init() passing 'env' - a null 
>> Envelope returned from getEnvelopeInternal() call.
>> 
>> But the Envelope::init(double x1, double x2, double y1, double y2)
>>  call reorganizes min/max values of corners to make Envelope 
>> properly oriented. This reorganizations brokes the state of 
>> Envelope - null state. So, null Envelope stops to be null with some
>>  magic :-)
> 
> Good report Mateus! I guess the solution here is to just remove 
> explicit definition of the copy ctor and let compiler syntetize it 
> for us (Envelope doesn't contain any pointer). What do you think ?

Yes, this approach would be better.
Now, copy constructor causes a kind of side effect - Envelope
normalization. But it should just make a copy, even if Envelope is not
normalized/oriented correctly.

I see two choices:
1. Let compiler to generate copy ctor for us. It should work because it
have to copy 4 members field-by-field.
2. We can define this copy ctor, even if it's a bit trivial. This will
help us to have it under control for debugging, etc.

Additional suggestion:
Copy contructor is a kind of twin with assignment operator, so it is a
good practice to define them both (rule: if there is copy ctor,
assignment op should be defined, and vice versa).
This will make the type well copyable.

Assignment operator (mostly) has the same semantic as copy ctor (same
implementation).

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Wed Apr  5 05:19:10 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] [ANN] Bug #86 - Possible memory leaks caused by
	LineString constructor
In-Reply-To: <4432AC72.6030705@loskot.net>
References: <4432AC72.6030705@loskot.net>
Message-ID: <20060405091910.GC99038@keybit.net>

On Tue, Apr 04, 2006 at 07:27:14PM +0200, Mateusz ??oskot wrote:
> Hi,
> 
> I've just reported new bug, quite serious because it potentially causes
> memory leaks when incomplete linesting is created.
> So, I (re)report it here because it may need some discussion.
> 
> Here is the story:
> 
> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=86&pos=3

I think there are more then one such cases.
The rationale for avoiding deletion is that caller might
want to add an additional point and try construction again.
Anyway, it's probably cleaner to always take full ownership
of the passed argument and destroy it when unable to
construct. So I'd proceed with your suggested solution.

--strk;

From strk at refractions.net  Wed Apr  5 05:35:16 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
In-Reply-To: <4432A5E8.1080406@loskot.net>
References: <44319D37.3020602@loskot.net> <20060404070859.GC76252@keybit.net>
	<4432864F.8020306@loskot.net> <20060404154052.GD88938@keybit.net>
	<4432A5E8.1080406@loskot.net>
Message-ID: <20060405093516.GD99038@keybit.net>

On Tue, Apr 04, 2006 at 06:59:20PM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > On Tue, Apr 04, 2006 at 04:44:31PM +0200, Mateusz ?
?oskot wrote:
> > 
> >> Honestly, I don't think al GEOS exceptions can be categorized as 
> >> runtime_exception, some are logical e.g. IllegalArgumentException. 
> >> GEOSException is a general geos exception and I think it should be 
> >> derived directly from std::exception. GEOSException could be
> >> defined similarly as those exceptions in <stdexcept> file.
> >> 
> >> What do you think?
> > 
> > That's fine with me. Anyway, I think this was previous layout.
> 
> Yes, indeed.
> But there were no what() accessor, so that's why the problem occured.
> 
> > Maybe the problem was GEOSException didn't define what() as a 'const'
> > method (thus NOT overriding the non-const version) ?
> 
> Yes, I think so.
> I've just tested it again and here is my final proposal:
> 
> 1. GEOSException derives from std::exception
> 2. GEOSException has it's own member to store the message,
> similarly to standard exception classes derived from std::exception
> 3. GEOSException overrides virtual member declared in
> std::exception::what() to return the message stored in the local buffer
> 
> Does it make sense?

I committed a patch in this direction.
Could you test current CVS with your existing tests please ?

--strk;

From strk at refractions.net  Wed Apr  5 10:05:07 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Envelope of empty Polygon
In-Reply-To: <4433853E.90502@loskot.net>
References: <442CC8AB.3070205@loskot.net> <20060331102144.GR21841@keybit.net>
	<44308716.5070101@loskot.net> <4433231B.7010203@loskot.net>
	<20060405082659.GB99038@keybit.net> <4433853E.90502@loskot.net>
Message-ID: <20060405140507.GA1200@keybit.net>

Copy ctor fixed, assignment operator added.
Profited to remove init(Envelope&) method,
add proper doxygen comments and various cleanups.

--strk;

On Wed, Apr 05, 2006 at 10:52:14AM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > Mateusz ?
??oskot wrote:
> > 
> >> As you see above, copy ctor calls init() passing 'env' - a null 
> >> Envelope returned from getEnvelopeInternal() call.
> >> 
> >> But the Envelope::init(double x1, double x2, double y1, double y2)
> >>  call reorganizes min/max values of corners to make Envelope 
> >> properly oriented. This reorganizations brokes the state of 
> >> Envelope - null state. So, null Envelope stops to be null with some
> >>  magic :-)
> > 
> > Good report Mateus! I guess the solution here is to just remove 
> > explicit definition of the copy ctor and let compiler syntetize it 
> > for us (Envelope doesn't contain any pointer). What do you think ?
> 
> Yes, this approach would be better.
> Now, copy constructor causes a kind of side effect - Envelope
> normalization. But it should just make a copy, even if Envelope is not
> normalized/oriented correctly.
> 
> I see two choices:
> 1. Let compiler to generate copy ctor for us. It should work because it
> have to copy 4 members field-by-field.
> 2. We can define this copy ctor, even if it's a bit trivial. This will
> help us to have it under control for debugging, etc.
> 
> Additional suggestion:
> Copy contructor is a kind of twin with assignment operator, so it is a
> good practice to define them both (rule: if there is copy ctor,
> assignment op should be defined, and vice versa).
> This will make the type well copyable.
> 
> Assignment operator (mostly) has the same semantic as copy ctor (same
> implementation).
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From mateusz at loskot.net  Wed Apr  5 16:24:39 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] GEOSException is incompatible with std::exception
In-Reply-To: <20060405093516.GD99038@keybit.net>
References: <44319D37.3020602@loskot.net>
	<20060404070859.GC76252@keybit.net>	<4432864F.8020306@loskot.net>
	<20060404154052.GD88938@keybit.net>	<4432A5E8.1080406@loskot.net>
	<20060405093516.GD99038@keybit.net>
Message-ID: <44342787.6020006@loskot.net>

strk@refractions.net wrote:
> On Tue, Apr 04, 2006 at 06:59:20PM +0200, Mateusz ??oskot wrote:
>> strk@refractions.net wrote:
>>> On Tue, Apr 04, 2006 at 04:44:31PM +0200, Mateusz ???oskot wrote:
>>>
>>>> Honestly, I don't think al GEOS exceptions can be categorized as 
>>>> runtime_exception, some are logical e.g. IllegalArgumentException. 
>>>> GEOSException is a general geos exception and I think it should be 
>>>> derived directly from std::exception. GEOSException could be
>>>> defined similarly as those exceptions in <stdexcept> file.
>>>>
>>>> What do you think?
>>> That's fine with me. Anyway, I think this was previous layout.
>> Yes, indeed.
>> But there were no what() accessor, so that's why the problem occured.
>>
>>> Maybe the problem was GEOSException didn't define what() as a 'const'
>>> method (thus NOT overriding the non-const version) ?
>> Yes, I think so.
>> I've just tested it again and here is my final proposal:
>>
>> 1. GEOSException derives from std::exception
>> 2. GEOSException has it's own member to store the message,
>> similarly to standard exception classes derived from std::exception
>> 3. GEOSException overrides virtual member declared in
>> std::exception::what() to return the message stored in the local buffer
>>
>> Does it make sense?
> 
> I committed a patch in this direction.
> Could you test current CVS with your existing tests please ?

It works.
All GEOS exceptions I catch in Unit Tests have valid message returned by
what().

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Wed Apr  5 20:47:49 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] [ANN] Bug #86 - Possible memory leaks caused by
	LineString constructor
In-Reply-To: <20060405091910.GC99038@keybit.net>
References: <4432AC72.6030705@loskot.net> <20060405091910.GC99038@keybit.net>
Message-ID: <44346535.3040304@loskot.net>

strk@refractions.net wrote:
> On Tue, Apr 04, 2006 at 07:27:14PM +0200, Mateusz ??oskot wrote:
>> Hi,
>>
>> I've just reported new bug, quite serious because it potentially causes
>> memory leaks when incomplete linesting is created.
>> So, I (re)report it here because it may need some discussion.
>>
>> Here is the story:
>>
>> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=86&pos=3
> 
> I think there are more then one such cases.
> The rationale for avoiding deletion is that caller might
> want to add an additional point and try construction again.
> Anyway, it's probably cleaner to always take full ownership
> of the passed argument and destroy it when unable to
> construct. So I'd proceed with your suggested solution.

I reopened this bug. As explained in the bug description, the problem is
not solved using this small fix. So, it applies to Bug #86  and Bug #89.

See the thread titled as "Exception-safety".

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Wed Apr  5 21:39:56 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Exception-safety (230KB)
Message-ID: <4434716C.4090101@loskot.net>

Hi,

Recently, I reported some problems about possible memory leaks that can
occur when Geometries construction is interrupted by exception.
Until now, I reported bugs #86 and #89 related to LineString class and
Point class. But I expect there are more similar places because current
approach of constructor implementation is a kind of "common pattern"
widely used in GEOS.

The problem applies only to situation when constructor throws an
exception (as in LineString or Point class). In this situation
destructor is never called and dynamically allocated resources, like
LineString::points sequence, are not deallocated.
Reference:
http://www.parashift.com/c++-faq-lite/exceptions.html#faq-17.4

So, I'd like to provoke small discussion about how to achieve
exception-safety in geos. IMHO, Exception-safety is pretty important
step to stability.

I see two obvious ways to promise exception safety
and avoid memory leaks (examples are a bit pseudocode):

1. Find unsafe places and put "delete XXX;" before every "throw"
instruction in constructors:

Foo::p_ - internal data

Foo::Foo(Bar* p) : p_(p)
{
   if (something)
   {
      delete p_; // For our safety
      throw std::exception();
   }
}

2. Second solution and, honestly, my favourite is to use smart pointers.
If Foo::p_ would be "a smart pointer" instead of raw pointer, then the
code is simplier and developer is not required to remember about all
those manual deallocations:

Foo::Foo(BarSmartPtr p) : p_(p)
{
   if (something)
      throw std::exception();
}

That's all.

I prepare small example program to test exceptions
not-safety and safety in real code.
I attached it to this post, file exception-safety-test.tar.gz
Inside the package, you will find README.txt file with short
instruction how to build it with VC++ and GCC.
NOTE: You don't need a Boost. I included Boost's smart pointers to the
package, so just read the README.txt and have fun :-)

There are two tests:

1) test_ctor_exception (presents unsafety of raw pointers)

------ test_ctor_exception - start ------
   noleak: Foo::Foo()
not-throwing: A::A()
not-throwing: A::~A()
   noleak: Foo::~Foo()

   bigleak: Foo::Foo()
throwing: A::A()
throwing: ctor says hello but dctor won't have any chance to say it!
We are NOT cool!
------ test_ctor_exception - end ------


PROBLEM: bigleak is not destroyed in the second case

2) test_ctor_exception_smart_ptr (presents how to get rid of unsafety
with shared_ptr).

------ test_ctor_exception_smart_ptr - start ------
   noleak1: Bar::Bar()
not-throwing: B::B()
not-throwing: B::~B()
   noleak1: Bar::~Bar()

   noleak2: Bar::Bar()
throwing: B::B()
throwing: ctor says hello AND dctors of B and Bar also say hello!
   noleak2: Bar::~Bar()
We are VERY cool!
------ test_ctor_exception_smart_ptr - end ------



Conclusion

Discussions about smart pointers and Boost appear and disappear from
time to time.
I think it's worth to take some decision.
I'd really recommend to start using "Smart Pointer" idioms.
Smart Pointers does not mean we should use Boost's smart pointers, we
can write our own simple smart pointers but the question is if it's
worth of the effort.
Boost's smart pointers are well tested and well working,
so why not to use them?

I'd summary my opinion as follows:
There should be no question if GEOS should use smart pointers or not,
because smart pointers can bring invaluable help; the only question I
see is which smart pointers implementation to use: Boost, our own, ...
Next, smart pointers can help not only to fix the problems
described in this post but much more.

NOTE: It is NOT required to build any Boost library to use smart
pointers. As you can see in the example I attached, they are just
simple headers.
We don't have to force users to install complete Boost.
We can extract every library we wish to use just as I did so with smart
pointers in the attached example. There is a special tool called bcp.
It is not perfect but works well. The only imperfection I know is that
it extracts quite big amount of files (e.g. for smart pointer, 2.7MB).
Doing it manually makes it possible to get much smaller package.
But I think the disc space is not a problem today :-)


One more Boost digression

Boost will be included in the C++ Library soon.
Recently, shared_ptr became a part of C++ Library Technical Report 1:
http://boost.org/libs/smart_ptr/shared_ptr.htm#Introduction

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net
-------------- next part --------------
A non-text attachment was scrubbed...
Name: exception-safety-test.tar.gz
Type: application/gzip
Size: 231941 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060406/94e2a44c/exception-safety-test.tar.bin
From mbdavis at VividSolutions.com  Thu Apr  6 11:46:04 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] I'm lost with LineString
Message-ID: <5A94289A9268514C8D6C0F1FF44BA02796DA22@venus.VividSolutions.com>

The paradigm followed in JTS, and hence GEOS, is that Geometries are immutable once constructed.  This gives the implementor more freedom to optimize within a Geometry.  It also prevents aliasing errors (multiple references to the same geometry are very common in JTS usage - I'm not as familiar with how people are using GEOS).

IMO, this pattern should continue to be followed in GEOS.  To accomplish geometry editing, Geometries must be re-written.  This can be assisted by helper classes, of course - GeometryEditor is an example of this.

That said, it might be a useful (but major) enhancement to completely virtualize the Geometry interfaces, and allow multiple implementations of each Geometry type.   With that kind of design, you could provide both immutable and mutable Geometries easily and transparently.  This isn't too hard to do in JTS, but I have no idea about the implications for C++.

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: geos-devel-bounces@geos.refractions.net 
> [mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of 
> Mateusz Loskot
> Sent: April 3, 2006 5:04 PM
> To: GEOS Development List
> Subject: [geos-devel] I'm lost with LineString
> 
> 
> Hi,
> 
> May be it's an extremely trivial problem or it's quite late 
> and I should get to bad, but please help me :-)))
> 
> The question is:
> how to add/remove point from existing instance of LineString class?
> 
> I created LineString assigning to it object of type of 
> CoordinateArraySequence with some points. Now, I'd like to 
> add/remove points from this sequence assigned to linestring.
> 
> How can I achive this simple functionality?
> 
> I'm sure it's very simple, but I can not find it.
> 
> Cheers
> -- 
> Mateusz ?oskot
> http://mateusz.loskot.net 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net 
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 

From strk at refractions.net  Fri Apr  7 04:23:47 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Exception-safety (230KB)
In-Reply-To: <4434716C.4090101@loskot.net>
References: <4434716C.4090101@loskot.net>
Message-ID: <20060407082347.GA25800@keybit.net>

I've made some tests with auto_ptr<> and I'm pretty satisfied with it.
Semantic for auto_ptr<> is that whenever it's copied ownership of
the contained pointer is transferred. Seems perfect for our
ownership-taking Geometry constructors. It's exception safe and
is provided by the standard template library.

We can keep the existing interface (would initialize the auto_ptr<>
by the given 'raw' pointers) plus add constructors taking auto_ptr<>.

Objections ?

--strk;


On Thu, Apr 06, 2006 at 03:39:56AM +0200, Mateusz ??oskot wrote:
> Hi,
> 
> Recently, I reported some problems about possible memory leaks that can
> occur when Geometries construction is interrupted by exception.
> Until now, I reported bugs #86 and #89 related to LineString class and
> Point class. But I expect there are more similar places because current
> approach of constructor implementation is a kind of "common pattern"
> widely used in GEOS.
> 
> The problem applies only to situation when constructor throws an
> exception (as in LineString or Point class). In this situation
> destructor is never called and dynamically allocated resources, like
> LineString::points sequence, are not deallocated.
> Reference:
> http://www.parashift.com/c++-faq-lite/exceptions.html#faq-17.4
> 
> So, I'd like to provoke small discussion about how to achieve
> exception-safety in geos. IMHO, Exception-safety is pretty important
> step to stability.
> 
> I see two obvious ways to promise exception safety
> and avoid memory leaks (examples are a bit pseudocode):
> 
> 1. Find unsafe places and put "delete XXX;" before every "throw"
> instruction in constructors:
> 
> Foo::p_ - internal data
> 
> Foo::Foo(Bar* p) : p_(p)
> {
>    if (something)
>    {
>       delete p_; // For our safety
>       throw std::exception();
>    }
> }
> 
> 2. Second solution and, honestly, my favourite is to use smart pointers.
> If Foo::p_ would be "a smart pointer" instead of raw pointer, then the
> code is simplier and developer is not required to remember about all
> those manual deallocations:
> 
> Foo::Foo(BarSmartPtr p) : p_(p)
> {
>    if (something)
>       throw std::exception();
> }
> 
> That's all.
> 
> I prepare small example program to test exceptions
> not-safety and safety in real code.
> I attached it to this post, file exception-safety-test.tar.gz
> Inside the package, you will find README.txt file with short
> instruction how to build it with VC++ and GCC.
> NOTE: You don't need a Boost. I included Boost's smart pointers to the
> package, so just read the README.txt and have fun :-)
> 
> There are two tests:
> 
> 1) test_ctor_exception (presents unsafety of raw pointers)
> 
> ------ test_ctor_exception - start ------
>    noleak: Foo::Foo()
> not-throwing: A::A()
> not-throwing: A::~A()
>    noleak: Foo::~Foo()
> 
>    bigleak: Foo::Foo()
> throwing: A::A()
> throwing: ctor says hello but dctor won't have any chance to say it!
> We are NOT cool!
> ------ test_ctor_exception - end ------
> 
> 
> PROBLEM: bigleak is not destroyed in the second case
> 
> 2) test_ctor_exception_smart_ptr (presents how to get rid of unsafety
> with shared_ptr).
> 
> ------ test_ctor_exception_smart_ptr - start ------
>    noleak1: Bar::Bar()
> not-throwing: B::B()
> not-throwing: B::~B()
>    noleak1: Bar::~Bar()
> 
>    noleak2: Bar::Bar()
> throwing: B::B()
> throwing: ctor says hello AND dctors of B and Bar also say hello!
>    noleak2: Bar::~Bar()
> We are VERY cool!
> ------ test_ctor_exception_smart_ptr - end ------
> 
> 
> 
> Conclusion
> 
> Discussions about smart pointers and Boost appear and disappear from
> time to time.
> I think it's worth to take some decision.
> I'd really recommend to start using "Smart Pointer" idioms.
> Smart Pointers does not mean we should use Boost's smart pointers, we
> can write our own simple smart pointers but the question is if it's
> worth of the effort.
> Boost's smart pointers are well tested and well working,
> so why not to use them?
> 
> I'd summary my opinion as follows:
> There should be no question if GEOS should use smart pointers or not,
> because smart pointers can bring invaluable help; the only question I
> see is which smart pointers implementation to use: Boost, our own, ...
> Next, smart pointers can help not only to fix the problems
> described in this post but much more.
> 
> NOTE: It is NOT required to build any Boost library to use smart
> pointers. As you can see in the example I attached, they are just
> simple headers.
> We don't have to force users to install complete Boost.
> We can extract every library we wish to use just as I did so with smart
> pointers in the attached example. There is a special tool called bcp.
> It is not perfect but works well. The only imperfection I know is that
> it extracts quite big amount of files (e.g. for smart pointer, 2.7MB).
> Doing it manually makes it possible to get much smaller package.
> But I think the disc space is not a problem today :-)
> 
> 
> One more Boost digression
> 
> Boost will be included in the C++ Library soon.
> Recently, shared_ptr became a part of C++ Library Technical Report 1:
> http://boost.org/libs/smart_ptr/shared_ptr.htm#Introduction
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net


> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Fri Apr  7 11:49:00 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Node invariant
Message-ID: <20060407154900.GA32419@keybit.net>

I'm debugging memory instabilities in GEOS
and came to a question about Node.

Node constructor in JTS takes an EdgeEndStar
argument and assigns to this.edges.

Later on, this.edges is used as a fully
constructed object [ see Node#add(EdgeEnd) ]

Does this mean that the given EdgeEndStar
*must* be NOT NULL ? Or should Node#add(EdgeEnd)
check for it ? Or isn't there anything such
a NULL object in Java ?

--strk; 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Fri Apr  7 12:04:40 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] 2.2.2
Message-ID: <20060407160440.GB32419@keybit.net>

Is there any pending issue before we release GEOS-2.2.2 ?

Changes since 2.2.1 are:

- Added GEOSArea(), GEOSLength(), GEOSEnvelope(), and GEOSGeomType() to the
  C API
- Cleanups in C-API
- Support for gcc-4
- Fixed Polygon::equalsExact
- Improved XMLTester
- Fixed bug in NULL-factory Geometry constructor
- Cleanups in SWIG wrappers
- New Ruby bindings
- Enumerated SweepLineEvent's DELETE and INSERT labels
  renamed to DELETE_EVENT and INSERT_EVENT.

It will ship with C-API version 1.1.0

--strk;

From mbdavis at VividSolutions.com  Fri Apr  7 12:07:32 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] FW: [jts-devel] Node invariant
Message-ID: <5A94289A9268514C8D6C0F1FF44BA02796DA38@venus.VividSolutions.com>


You're right, Node assumes that the EdgeEndStar argument is non-null.
(By the way, there definitely is a concept of null in Java, and it's
used in exactly the same way that a null pointer is used in C++)

Node was never written to be a general-purpose class, so not too much
attention was paid to hand-holding.  It is assumed that the client uses
the class correctly.  In Java this is self-detecting, since any use of a
null pointer will cause a nice exception to be thrown.  I guess this
isn't the case in C++, so maybe you need to check for null.  (However,
there maybe be valid uses of node which have a null edges reference, so
you'll have to check for it on use, not construction)

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: jts-devel-bounces@lists.jump-project.org
> [mailto:jts-devel-bounces@lists.jump-project.org] On Behalf 
> Of strk@refractions.net
> Sent: April 7, 2006 8:49 AM
> To: jts-devel@lists.jump-project.org
> Cc: geos-devel@geos.refractions.net
> Subject: [jts-devel] Node invariant
> 
> 
> I'm debugging memory instabilities in GEOS
> and came to a question about Node.
> 
> Node constructor in JTS takes an EdgeEndStar
> argument and assigns to this.edges.
> 
> Later on, this.edges is used as a fully
> constructed object [ see Node#add(EdgeEnd) ]
> 
> Does this mean that the given EdgeEndStar
> *must* be NOT NULL ? Or should Node#add(EdgeEnd)
> check for it ? Or isn't there anything such
> a NULL object in Java ?
> 
> --strk;
> 
>  /"\    ASCII Ribbon Campaign
>  \ /    Respect for low technology.
>   X     Keep e-mail messages readable by any computer system.
>  / \    Keep it ASCII. 
> 
> _______________________________________________
> jts-devel mailing list
> jts-devel@lists.jump-project.org
> http://lists.refractions.net/mailman/listinfo/jts-devel
> 
_______________________________________________
jts-devel mailing list
jts-devel@lists.jump-project.org
http://lists.refractions.net/mailman/listinfo/jts-devel

From mateusz at loskot.net  Sat Apr  8 14:15:11 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Using JTS Documentation
Message-ID: <4437FDAF.8070201@loskot.net>

Hi,

I have a question related to some legal issues.
I know we live in Open Source here, but just in case :-)

I'd like to complete GEOS documentation of classes that I'm preparing
Unit Test for. So, my idea is to use JTS documentation which is an
excelent source of knowledge that is useful for GEOS users as well.

So, am I allowed to copy JTS docs & modify if required & paste to GEOS?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sat Apr  8 23:50:05 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Inlining
Message-ID: <4438846D.1030404@loskot.net>

Hi,

I have short question, why GEOS uses it's own with/without inline 
compilation guards (*.inl files, USE_INLINE file) instead of copilint 
with or without -no-inline switch?
Is this swith not working well?

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Sun Apr  9 18:24:51 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060407160440.GB32419@keybit.net>
References: <20060407160440.GB32419@keybit.net>
Message-ID: <443989B3.50400@interserv.com>

Hi Strk,

A couple things from me:

1.  The branch doesn't build on Linux.  Its missing geos/ChangeLog, 
which causes ./autogen.sh to only partially complete, which then causes 
configure not to work.  Fix is simple, add a ChangeLog (maybe its not 
tagged with the branch?)

2.  Could you apply the patch for the SRID bug:

http://postgis.refractions.net/bugs/bug.php?op=show&bugid=97

I.E. - this is the patch that changes WKBReader so that it sets the SRID 
on newly created geometries as opposed to throwing away the SRID value. 
I've extracted it out of the patches that I sent to you last week.  This 
patch does not make any changes to any GEOS apis so won't break ABI 
compatibility.  Note I've been using it for the last four months are so 
and have unit tests in the Ruby test suite, so it should be well tested.

I will retest the SWIG build this evening on VC++, msys and linux and 
report back any issues.

Thanks,

Charlie


strk@refractions.net wrote:
> Is there any pending issue before we release GEOS-2.2.2 ?
>
> Changes since 2.2.1 are:
>
> - Added GEOSArea(), GEOSLength(), GEOSEnvelope(), and GEOSGeomType() to the
>   C API
> - Cleanups in C-API
> - Support for gcc-4
> - Fixed Polygon::equalsExact
> - Improved XMLTester
> - Fixed bug in NULL-factory Geometry constructor
> - Cleanups in SWIG wrappers
> - New Ruby bindings
> - Enumerated SweepLineEvent's DELETE and INSERT labels
>   renamed to DELETE_EVENT and INSERT_EVENT.
>
> It will ship with C-API version 1.1.0
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060409/2ecf45f5/smime.bin
From mateusz at loskot.net  Sun Apr  9 22:31:02 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] FW: [jts-devel] Node invariant
In-Reply-To: <5A94289A9268514C8D6C0F1FF44BA02796DA38@venus.VividSolutions.com>
References: <5A94289A9268514C8D6C0F1FF44BA02796DA38@venus.VividSolutions.com>
Message-ID: <4439C366.8010904@loskot.net>

Martin Davis wrote:
> You're right, Node assumes that the EdgeEndStar argument is non-null.
>  (By the way, there definitely is a concept of null in Java, and it's
>  used in exactly the same way that a null pointer is used in C++)

Yup, null pointer is similar to null reference.

> Node was never written to be a general-purpose class, so not too much
>  attention was paid to hand-holding. It is assumed that the client
> uses the class correctly.

So, it's similar std::vector or many other classes, which expec their
client uses them in reasonable way. And the client is responsible to
test data it is going to send to the instance of this class.

> In Java this is self-detecting, since any use of a null pointer will
> cause a nice exception to be thrown.  I guess this isn't the case in
> C++, so maybe you need to check for null.  (However, there maybe be
> valid uses of node which have a null edges reference, so you'll have
> to check for it on use, not construction)

So, I'd leave Node as is but *make sure* that every its client does the
job and checks all data it is going to send to the Node.
This will make it possible that some clients will send only-valid 
objects but some - what's correct according to particular semantic - 
will be able to send null-pointer.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Mon Apr 10 04:49:37 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Inlining
In-Reply-To: <4438846D.1030404@loskot.net>
References: <4438846D.1030404@loskot.net>
Message-ID: <20060410084937.GD66560@keybit.net>

The rational would be, for a default build, to
have inlines used by core library, but non-inlined
functions to be available for clients.
I dunno if there's any standard compiler switch for
this, but we might reproduce it with the custom mechanism.
For example, we might have an inline.cpp file including
all of the .inl files with GEOS_INLINE undefined.
I haven't tested this yet, though.

--strk;

On Sun, Apr 09, 2006 at 05:50:05AM +0200, Mateusz ??oskot wrote:
> Hi,
> 
> I have short question, why GEOS uses it's own with/without inline 
> compilation guards (*.inl files, USE_INLINE file) instead of copilint 
> with or without -no-inline switch?
> Is this swith not working well?
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net

From strk at refractions.net  Mon Apr 10 04:55:01 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <443989B3.50400@interserv.com>
References: <20060407160440.GB32419@keybit.net> <443989B3.50400@interserv.com>
Message-ID: <20060410085501.GF66560@keybit.net>

I back ported the SRID patch and added a 'cvs2cl' generated
ChangeLog in 2.2. branch. 

--strk;

On Sun, Apr 09, 2006 at 04:24:51PM -0600, Charlie Savage wrote:
> Hi Strk,
> 
> A couple things from me:
> 
> 1.  The branch doesn't build on Linux.  Its missing geos/ChangeLog, 
> which causes ./autogen.sh to only partially complete, which then causes 
> configure not to work.  Fix is simple, add a ChangeLog (maybe its not 
> tagged with the branch?)
> 
> 2.  Could you apply the patch for the SRID bug:
> 
> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=97
> 
> I.E. - this is the patch that changes WKBReader so that it sets the SRID 
> on newly created geometries as opposed to throwing away the SRID value. 
> I've extracted it out of the patches that I sent to you last week.  This 
> patch does not make any changes to any GEOS apis so won't break ABI 
> compatibility.  Note I've been using it for the last four months are so 
> and have unit tests in the Ruby test suite, so it should be well tested.
> 
> I will retest the SWIG build this evening on VC++, msys and linux and 
> report back any issues.
> 
> Thanks,
> 
> Charlie
> 
> 
> strk@refractions.net wrote:
> >Is there any pending issue before we release GEOS-2.2.2 ?
> >
> >Changes since 2.2.1 are:
> >
> >- Added GEOSArea(), GEOSLength(), GEOSEnvelope(), and GEOSGeomType() to the
> >  C API
> >- Cleanups in C-API
> >- Support for gcc-4
> >- Fixed Polygon::equalsExact
> >- Improved XMLTester
> >- Fixed bug in NULL-factory Geometry constructor
> >- Cleanups in SWIG wrappers
> >- New Ruby bindings
> >- Enumerated SweepLineEvent's DELETE and INSERT labels
> >  renamed to DELETE_EVENT and INSERT_EVENT.
> >
> >It will ship with C-API version 1.1.0
> >
> >--strk;
> >_______________________________________________
> >geos-devel mailing list
> >geos-devel@geos.refractions.net
> >http://geos.refractions.net/mailman/listinfo/geos-devel
> >
> >
> >  



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From mateusz at loskot.net  Mon Apr 10 05:05:26 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Inlining
In-Reply-To: <20060410084937.GD66560@keybit.net>
References: <4438846D.1030404@loskot.net> <20060410084937.GD66560@keybit.net>
Message-ID: <443A1FD6.8080903@loskot.net>

strk@refractions.net wrote:
> The rational would be, for a default build, to
> have inlines used by core library, but non-inlined

Why not to use compiler switches to achive this behaviour?

> functions to be available for clients.
> I dunno if there's any standard compiler switch for
> this, but we might reproduce it with the custom mechanism.

I think it's much simplier to use compiler switches instead of custom
mechanism. Here are two that should provide this behaviour:
-fno-inline
-fno-default-inline

> For example, we might have an inline.cpp file including
> all of the .inl files with GEOS_INLINE undefined.
> I haven't tested this yet, though.

If I could comment this approach, I don't like it.
This will scatter code too much, what make maintenance harder.
It'll be hard to navigate, remember which class member is inlined and
which is not, etc.

Cheers

-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Mon Apr 10 05:34:44 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Inlining
In-Reply-To: <443A1FD6.8080903@loskot.net>
References: <4438846D.1030404@loskot.net> <20060410084937.GD66560@keybit.net>
	<443A1FD6.8080903@loskot.net>
Message-ID: <20060410093443.GG66560@keybit.net>

On Mon, Apr 10, 2006 at 11:05:26AM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > The rational would be, for a default build, to
> > have inlines used by core library, but non-inlined
> 
> Why not to use compiler switches to achive this behaviour?

Is there such a switch for all compilers ?
Or should we make GCC a requirement ?

> > functions to be available for clients.
> > I dunno if there's any standard compiler switch for
> > this, but we might reproduce it with the custom mechanism.
> 
> I think it's much simplier to use compiler switches instead of custom
> mechanism. Here are two that should provide this behaviour:
> -fno-inline
> -fno-default-inline

It's surely simpler for developers, but we want a consistent
behaviour for builders.

Note that I'm not happy with shipping the .inl and to require
GEOS_INLINE to be defined... so I'm open to discussion.

> > For example, we might have an inline.cpp file including
> > all of the .inl files with GEOS_INLINE undefined.
> > I haven't tested this yet, though.
> 
> If I could comment this approach, I don't like it.
> This will scatter code too much, what make maintenance harder.
> It'll be hard to navigate, remember which class member is inlined and
> which is not, etc.

CLASS=geom/Coordinate
vi -o source/$CLASS.cpp source/headers/geos/$CLASS.{h,inl}

--strk;

From mateusz at loskot.net  Mon Apr 10 05:46:39 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Inlining
In-Reply-To: <20060410093443.GG66560@keybit.net>
References: <4438846D.1030404@loskot.net>
	<20060410084937.GD66560@keybit.net>	<443A1FD6.8080903@loskot.net>
	<20060410093443.GG66560@keybit.net>
Message-ID: <443A297F.5020709@loskot.net>

strk@refractions.net wrote:
> On Mon, Apr 10, 2006 at 11:05:26AM +0200, Mateusz ??oskot wrote:
>>strk@refractions.net wrote:
>>
>>>The rational would be, for a default build, to
>>>have inlines used by core library, but non-inlined
>>
>>Why not to use compiler switches to achive this behaviour?
> 
> 
> Is there such a switch for all compilers ?
> Or should we make GCC a requirement ?

Yes, every good and modern compiler provide options to control inlining.
I'd say it's a must.

In example, Microsoft VC++ provides:
http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vccore/html/_core_.2f.ob.asp

(I have only GCC and VC++, so I can't check it in other compilers)

>>>functions to be available for clients.
>>>I dunno if there's any standard compiler switch for
>>>this, but we might reproduce it with the custom mechanism.
>>
>>I think it's much simplier to use compiler switches instead of custom
>>mechanism. Here are two that should provide this behaviour:
>>-fno-inline
>>-fno-default-inline
> 
> 
> It's surely simpler for developers, but we want a consistent
> behaviour for builders.

Makefiles should include those options by default for debug building.
Next, configure script should provide a possibility to turn it on/off.

> Note that I'm not happy with shipping the .inl and to require
> GEOS_INLINE to be defined... so I'm open to discussion.

I feel it. So, that's why I'm looking for native and life-saving solution.

>>>For example, we might have an inline.cpp file including
>>>all of the .inl files with GEOS_INLINE undefined.
>>>I haven't tested this yet, though.
>>
>>If I could comment this approach, I don't like it.
>>This will scatter code too much, what make maintenance harder.
>>It'll be hard to navigate, remember which class member is inlined and
>>which is not, etc.
> 
> 
> CLASS=geom/Coordinate
> vi -o source/$CLASS.cpp source/headers/geos/$CLASS.{h,inl}

IMHO, it's not a solution at all.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Mon Apr 10 08:19:25 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Inlining + MingW builds
In-Reply-To: <443A297F.5020709@loskot.net>
References: <4438846D.1030404@loskot.net> <20060410084937.GD66560@keybit.net>
	<443A1FD6.8080903@loskot.net> <20060410093443.GG66560@keybit.net>
	<443A297F.5020709@loskot.net>
Message-ID: <20060410121925.GH66560@keybit.net>

I've given my 'outlined' inlines replication
mechanism a try. Basically there's now a new
implementation file which includes all of
.inl files undefining GEOS_INLINE.

I've tested it and w/out special switches
client code can now link against an INLINED
build of GEOS and run successfully.

This let us drop the -DGEOS_INLINE switch
from geos-config, with which I was pretty
uncomfortable.

A side effect is this should fix MingW,
Cygwin and OSX builds.

Tests welcome.

--strk;

On Mon, Apr 10, 2006 at 11:46:39AM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > On Mon, Apr 10, 2006 at 11:05:26AM +0200, Mateusz ?
?oskot wrote:
> >>strk@refractions.net wrote:
> >>
> >>>The rational would be, for a default build, to
> >>>have inlines used by core library, but non-inlined
> >>
> >>Why not to use compiler switches to achive this behaviour?
> > 
> > 
> > Is there such a switch for all compilers ?
> > Or should we make GCC a requirement ?
> 
> Yes, every good and modern compiler provide options to control inlining.
> I'd say it's a must.
> 
> In example, Microsoft VC++ provides:
> http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vccore/html/_core_.2f.ob.asp
> 
> (I have only GCC and VC++, so I can't check it in other compilers)
> 
> >>>functions to be available for clients.
> >>>I dunno if there's any standard compiler switch for
> >>>this, but we might reproduce it with the custom mechanism.
> >>
> >>I think it's much simplier to use compiler switches instead of custom
> >>mechanism. Here are two that should provide this behaviour:
> >>-fno-inline
> >>-fno-default-inline
> > 
> > 
> > It's surely simpler for developers, but we want a consistent
> > behaviour for builders.
> 
> Makefiles should include those options by default for debug building.
> Next, configure script should provide a possibility to turn it on/off.
> 
> > Note that I'm not happy with shipping the .inl and to require
> > GEOS_INLINE to be defined... so I'm open to discussion.
> 
> I feel it. So, that's why I'm looking for native and life-saving solution.
> 
> >>>For example, we might have an inline.cpp file including
> >>>all of the .inl files with GEOS_INLINE undefined.
> >>>I haven't tested this yet, though.
> >>
> >>If I could comment this approach, I don't like it.
> >>This will scatter code too much, what make maintenance harder.
> >>It'll be hard to navigate, remember which class member is inlined and
> >>which is not, etc.
> > 
> > 
> > CLASS=geom/Coordinate
> > vi -o source/$CLASS.cpp source/headers/geos/$CLASS.{h,inl}
> 
> IMHO, it's not a solution at all.
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Mon Apr 10 09:40:28 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] ChangeLog
Message-ID: <20060410134028.GI66560@keybit.net>

I think we should start manually editing the ChangeLog.
I'd start with a cvs2cl generated one for HEAD and
go on with manual edits. Ok for everyone ?

--strk; 

From mateusz at loskot.net  Mon Apr 10 09:45:53 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] ChangeLog
In-Reply-To: <20060410134028.GI66560@keybit.net>
References: <20060410134028.GI66560@keybit.net>
Message-ID: <443A6191.8050202@loskot.net>

strk@refractions.net wrote:
> I think we should start manually editing the ChangeLog.
> I'd start with a cvs2cl generated one for HEAD and
> go on with manual edits. Ok for everyone ?

Should we follow GNU guidelines?
http://www.gnu.org/prep/standards/html_node/Change-Logs.html

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Mon Apr 10 10:23:19 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] ChangeLog
In-Reply-To: <443A6191.8050202@loskot.net>
References: <20060410134028.GI66560@keybit.net> <443A6191.8050202@loskot.net>
Message-ID: <20060410142319.GJ66560@keybit.net>

On Mon, Apr 10, 2006 at 03:45:53PM +0200, Mateusz ??oskot wrote:
> strk@refractions.net wrote:
> > I think we should start manually editing the ChangeLog.
> > I'd start with a cvs2cl generated one for HEAD and
> > go on with manual edits. Ok for everyone ?
> 
> Should we follow GNU guidelines?
> http://www.gnu.org/prep/standards/html_node/Change-Logs.html

I think we should, yes.

--strk;

From mateusz at loskot.net  Mon Apr 10 10:25:35 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] ChangeLog
In-Reply-To: <20060410142319.GJ66560@keybit.net>
References: <20060410134028.GI66560@keybit.net> <443A6191.8050202@loskot.net>
	<20060410142319.GJ66560@keybit.net>
Message-ID: <443A6ADF.6020404@loskot.net>

strk@refractions.net wrote:
> On Mon, Apr 10, 2006 at 03:45:53PM +0200, Mateusz ??oskot wrote:
> 
>>strk@refractions.net wrote:
>>
>>>I think we should start manually editing the ChangeLog.
>>>I'd start with a cvs2cl generated one for HEAD and
>>>go on with manual edits. Ok for everyone ?
>>
>>Should we follow GNU guidelines?
>>http://www.gnu.org/prep/standards/html_node/Change-Logs.html
> 
> 
> I think we should, yes.

OK, clear.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Mon Apr 10 11:18:34 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Inlining + MingW builds
In-Reply-To: <20060410121925.GH66560@keybit.net>
References: <4438846D.1030404@loskot.net>
	<20060410084937.GD66560@keybit.net>	<443A1FD6.8080903@loskot.net>
	<20060410093443.GG66560@keybit.net>	<443A297F.5020709@loskot.net>
	<20060410121925.GH66560@keybit.net>
Message-ID: <443A774A.2020500@interserv.com>


> A side effect is this should fix MingW,
> Cygwin and OSX builds.
>
> Tests welcome.
>
>   
That would be excellent.  I'll give it a try.  I assume VC++ still works?

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060410/ed9f000e/smime.bin
From cfis at interserv.com  Mon Apr 10 11:23:14 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060410085501.GF66560@keybit.net>
References: <20060407160440.GB32419@keybit.net> <443989B3.50400@interserv.com>
	<20060410085501.GF66560@keybit.net>
Message-ID: <443A7862.4050301@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060410/0508426e/smime.bin
From cfis at interserv.com  Mon Apr 10 11:24:04 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060410085501.GF66560@keybit.net>
References: <20060407160440.GB32419@keybit.net> <443989B3.50400@interserv.com>
	<20060410085501.GF66560@keybit.net>
Message-ID: <443A7894.8060005@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060410/ef8e2152/smime.bin
From cfis at interserv.com  Mon Apr 10 11:25:07 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060410085501.GF66560@keybit.net>
References: <20060407160440.GB32419@keybit.net> <443989B3.50400@interserv.com>
	<20060410085501.GF66560@keybit.net>
Message-ID: <443A78D3.3010408@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060410/ded0db0e/smime.bin
From strk at refractions.net  Mon Apr 10 13:09:20 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:09 2007
Subject: [geos-devel] Private Geometry ctors
Message-ID: <20060410170920.GA72185@keybit.net>

Martin, would it be correct to forbid direct
contruction of Geometry classes, forcing
clients to use a GeometryFactory ?

--strk; 

From cfis at interserv.com  Mon Apr 10 13:53:11 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060407160440.GB32419@keybit.net>
References: <20060407160440.GB32419@keybit.net>
Message-ID: <443A9B87.7090104@interserv.com>

MinGW Build still fails on XmlTester:

make[2]: Entering directory `/usr/src/geos-2.2.2/source/test'
if g++ -DHAVE_CONFIG_H -I. -I. -I../..//source/headers 
-I../..//source/headers/geos -I../../source/headers 
-I../../source/io/markup    -g -O2 -MT XMLTester.o -MD -MP -MF 
".deps/XMLTester.Tpo" -c -o XMLTester.o XMLTester.cpp; \
then mv -f ".deps/XMLTester.Tpo" ".deps/XMLTester.Po"; else rm -f 
".deps/XMLTester.Tpo"; exit 1; fi
In file included from XMLTester.cpp:41:
../..//source/headers/geos/opValid.h:100: error: expected identifier 
before numeric constant
../..//source/headers/geos/opValid.h:100: error: expected `}' before 
numeric constant
../..//source/headers/geos/opValid.h:100: error: expected unqualified-id 
before numeric constant
../..//source/headers/geos/opValid.h:113: error: expected unqualified-id 
before "int"
../..//source/headers/geos/opValid.h:113: error: expected `)' before "int"
../..//source/headers/geos/opValid.h:114: error: expected unqualified-id 
before "int"
../..//source/headers/geos/opValid.h:114: error: expected `)' before "int"
../..//source/headers/geos/opValid.h:119: error: expected unqualified-id 
before "private"

Charlie


strk@refractions.net wrote:
> Is there any pending issue before we release GEOS-2.2.2 ?
>
> Changes since 2.2.1 are:
>
> - Added GEOSArea(), GEOSLength(), GEOSEnvelope(), and GEOSGeomType() to the
>   C API
> - Cleanups in C-API
> - Support for gcc-4
> - Fixed Polygon::equalsExact
> - Improved XMLTester
> - Fixed bug in NULL-factory Geometry constructor
> - Cleanups in SWIG wrappers
> - New Ruby bindings
> - Enumerated SweepLineEvent's DELETE and INSERT labels
>   renamed to DELETE_EVENT and INSERT_EVENT.
>
> It will ship with C-API version 1.1.0
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>
>   
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060410/4ebc9310/smime.bin
From mbdavis at VividSolutions.com  Mon Apr 10 17:01:08 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Using JTS Documentation
Message-ID: <5A94289A9268514C8D6C0F1FF44BA02796DA5C@venus.VividSolutions.com>

I don't see any problem with continuing to use the JTS doc.  

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: geos-devel-bounces@geos.refractions.net 
> [mailto:geos-devel-bounces@geos.refractions.net] On Behalf Of 
> Mateusz Loskot
> Sent: April 8, 2006 11:15 AM
> To: GEOS Development List
> Subject: [geos-devel] Using JTS Documentation
> 
> 
> Hi,
> 
> I have a question related to some legal issues.
> I know we live in Open Source here, but just in case :-)
> 
> I'd like to complete GEOS documentation of classes that I'm 
> preparing Unit Test for. So, my idea is to use JTS 
> documentation which is an excelent source of knowledge that 
> is useful for GEOS users as well.
> 
> So, am I allowed to copy JTS docs & modify if required & 
> paste to GEOS?
> 
> Cheers
> -- 
> Mateusz ?oskot
> http://mateusz.loskot.net 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net 
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 

From mateusz at loskot.net  Mon Apr 10 23:05:58 2006
From: mateusz at loskot.net (=?ISO-8859-2?Q?Mateusz_=A3oskot?=)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Using JTS Documentation
In-Reply-To: <5A94289A9268514C8D6C0F1FF44BA02796DA5C@venus.VividSolutions.com>
References: <5A94289A9268514C8D6C0F1FF44BA02796DA5C@venus.VividSolutions.com>
Message-ID: <443B1D16.5080604@loskot.net>

Martin Davis wrote:
> I don't see any problem with continuing to use the JTS doc.  
> 

Good! Thank you.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From strk at refractions.net  Tue Apr 11 03:59:42 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <443A9B87.7090104@interserv.com>
References: <20060407160440.GB32419@keybit.net>
	<443A9B87.7090104@interserv.com>
Message-ID: <20060411075942.GG72185@keybit.net>

Please try giving the enum a name. See head
branch for reference. Actually, in HEAD symbolic
names have also changed:

        enum errorEnum {
                eError,
                eRepeatedPoint,
                eHoleOutsideShell,
                eNestedHoles,
                eDisconnectedInterior,
                eSelfIntersection,
                eRingSelfIntersection,
                eNestedShells,
                eDuplicatedRings,
                eTooFewPoints,
                eInvalidCoordinate,
                eRingNotClosed
        };

I dunno if this is acceptable for 2.2 branch.
Comments ?

--strk;

On Mon, Apr 10, 2006 at 11:53:11AM -0600, Charlie Savage wrote:
> MinGW Build still fails on XmlTester:
> 
> make[2]: Entering directory `/usr/src/geos-2.2.2/source/test'
> if g++ -DHAVE_CONFIG_H -I. -I. -I../..//source/headers 
> -I../..//source/headers/geos -I../../source/headers 
> -I../../source/io/markup    -g -O2 -MT XMLTester.o -MD -MP -MF 
> ".deps/XMLTester.Tpo" -c -o XMLTester.o XMLTester.cpp; \
> then mv -f ".deps/XMLTester.Tpo" ".deps/XMLTester.Po"; else rm -f 
> ".deps/XMLTester.Tpo"; exit 1; fi
> In file included from XMLTester.cpp:41:
> ../..//source/headers/geos/opValid.h:100: error: expected identifier 
> before numeric constant
> ../..//source/headers/geos/opValid.h:100: error: expected `}' before 
> numeric constant
> ../..//source/headers/geos/opValid.h:100: error: expected unqualified-id 
> before numeric constant
> ../..//source/headers/geos/opValid.h:113: error: expected unqualified-id 
> before "int"
> ../..//source/headers/geos/opValid.h:113: error: expected `)' before "int"
> ../..//source/headers/geos/opValid.h:114: error: expected unqualified-id 
> before "int"
> ../..//source/headers/geos/opValid.h:114: error: expected `)' before "int"
> ../..//source/headers/geos/opValid.h:119: error: expected unqualified-id 
> before "private"
> 
> Charlie
> 
> 
> strk@refractions.net wrote:
> >Is there any pending issue before we release GEOS-2.2.2 ?
> >
> >Changes since 2.2.1 are:
> >
> >- Added GEOSArea(), GEOSLength(), GEOSEnvelope(), and GEOSGeomType() to the
> >  C API
> >- Cleanups in C-API
> >- Support for gcc-4
> >- Fixed Polygon::equalsExact
> >- Improved XMLTester
> >- Fixed bug in NULL-factory Geometry constructor
> >- Cleanups in SWIG wrappers
> >- New Ruby bindings
> >- Enumerated SweepLineEvent's DELETE and INSERT labels
> >  renamed to DELETE_EVENT and INSERT_EVENT.
> >
> >It will ship with C-API version 1.1.0
> >
> >--strk;
> >_______________________________________________
> >geos-devel mailing list
> >geos-devel@geos.refractions.net
> >http://geos.refractions.net/mailman/listinfo/geos-devel
> >
> >
> >  



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From cfis at interserv.com  Tue Apr 11 04:43:21 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060411075942.GG72185@keybit.net>
References: <20060407160440.GB32419@keybit.net>	<443A9B87.7090104@interserv.com>
	<20060411075942.GG72185@keybit.net>
Message-ID: <443B6C29.10103@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060411/945cea28/smime.bin
From strk at refractions.net  Tue Apr 11 05:29:10 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <443B6C29.10103@interserv.com>
References: <20060407160440.GB32419@keybit.net>
	<443A9B87.7090104@interserv.com>
	<20060411075942.GG72185@keybit.net> <443B6C29.10103@interserv.com>
Message-ID: <20060411092910.GI72185@keybit.net>

On Tue, Apr 11, 2006 at 02:43:21AM -0600, Charlie Savage wrote:
> Sorry, that didn't work (adding errorEnum).  Same error.  Not sure why, 
> but unfortunately I don't have more time to investigate at the moment.

Could be also the symbols names already available trhough
some other header. That's why in HEAD symbolic names
has been changed to that mixedCase version.
I'll wait for you to inspect before releasing 2.2.2 :)

--strk;

> 
> By the way, this is g++ 3.4.5 on MingW.
> 
> Charlie
> 
> strk@refractions.net wrote:
> >Please try giving the enum a name. See head
> >branch for reference. Actually, in HEAD symbolic
> >names have also changed:
> >
> >        enum errorEnum {
> >                eError,
> >                eRepeatedPoint,
> >                eHoleOutsideShell,
> >                eNestedHoles,
> >                eDisconnectedInterior,
> >                eSelfIntersection,
> >                eRingSelfIntersection,
> >                eNestedShells,
> >                eDuplicatedRings,
> >                eTooFewPoints,
> >                eInvalidCoordinate,
> >                eRingNotClosed
> >        };
> >
> >I dunno if this is acceptable for 2.2 branch.
> >Comments ?
> >
> >--strk;
> >
> >On Mon, Apr 10, 2006 at 11:53:11AM -0600, Charlie Savage wrote:
> >  
> >>MinGW Build still fails on XmlTester:
> >>
> >>make[2]: Entering directory `/usr/src/geos-2.2.2/source/test'
> >>if g++ -DHAVE_CONFIG_H -I. -I. -I../..//source/headers 
> >>-I../..//source/headers/geos -I../../source/headers 
> >>-I../../source/io/markup    -g -O2 -MT XMLTester.o -MD -MP -MF 
> >>".deps/XMLTester.Tpo" -c -o XMLTester.o XMLTester.cpp; \
> >>then mv -f ".deps/XMLTester.Tpo" ".deps/XMLTester.Po"; else rm -f 
> >>".deps/XMLTester.Tpo"; exit 1; fi
> >>In file included from XMLTester.cpp:41:
> >>../..//source/headers/geos/opValid.h:100: error: expected identifier 
> >>before numeric constant
> >>../..//source/headers/geos/opValid.h:100: error: expected `}' before 
> >>numeric constant
> >>../..//source/headers/geos/opValid.h:100: error: expected unqualified-id 
> >>before numeric constant
> >>../..//source/headers/geos/opValid.h:113: error: expected unqualified-id 
> >>before "int"
> >>../..//source/headers/geos/opValid.h:113: error: expected `)' before "int"
> >>../..//source/headers/geos/opValid.h:114: error: expected unqualified-id 
> >>before "int"
> >>../..//source/headers/geos/opValid.h:114: error: expected `)' before "int"
> >>../..//source/headers/geos/opValid.h:119: error: expected unqualified-id 
> >>before "private"
> >>
> >>Charlie

From mateusz at loskot.net  Tue Apr 11 07:02:11 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <443B6C29.10103@interserv.com>
References: <20060407160440.GB32419@keybit.net>	<443A9B87.7090104@interserv.com>	<20060411075942.GG72185@keybit.net>
	<443B6C29.10103@interserv.com>
Message-ID: <443B8CB3.10209@loskot.net>

Charlie Savage wrote:
> Sorry, that didn't work (adding errorEnum).  Same error.  Not sure
> why, but unfortunately I don't have more time to investigate at the
> moment.

I suppose the problem is with the enumerator called ERROR in the unnamed
 enum in the TopologyValidationError class.

ERROR is defined as #define ERROR... by Win32 SDK.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From cfis at interserv.com  Tue Apr 11 12:19:01 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060411075942.GG72185@keybit.net>
References: <20060407160440.GB32419@keybit.net>	<443A9B87.7090104@interserv.com>
	<20060411075942.GG72185@keybit.net>
Message-ID: <443BD6F5.9020607@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060411/9c6110ba/smime.bin
From strk at refractions.net  Tue Apr 11 12:49:36 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <443BD6F5.9020607@interserv.com>
References: <20060407160440.GB32419@keybit.net>
	<443A9B87.7090104@interserv.com>
	<20060411075942.GG72185@keybit.net>
	<443BD6F5.9020607@interserv.com>
Message-ID: <20060411164936.GN72185@keybit.net>

On Tue, Apr 11, 2006 at 10:19:01AM -0600, Charlie Savage wrote:
> Okay, I took the path of least resistance.  Added errorEnum and changed 
> ERROR to eError.  That works.   Let me know if I should change the rest, 
> and then I'll provide a patch.

You should search all of GEOS .cpp and .h files for occurrences of
the label 'ERROR'  and update them to eError.
Keep your finger crossed in doing so.

Note that existing client source code might fail to build
against 2.2.2 due to this change, while already compiled
code should keep working. Acceptable for a micro upgrade ?

--strk;

From cfis at interserv.com  Tue Apr 11 14:02:38 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060411164936.GN72185@keybit.net>
References: <20060407160440.GB32419@keybit.net>	<443A9B87.7090104@interserv.com>	<20060411075942.GG72185@keybit.net>	<443BD6F5.9020607@interserv.com>
	<20060411164936.GN72185@keybit.net>
Message-ID: <443BEF3E.6070901@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060411/141800fc/smime.bin
From strk at refractions.net  Tue Apr 11 14:06:45 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <443BEF3E.6070901@interserv.com>
References: <20060407160440.GB32419@keybit.net>
	<443A9B87.7090104@interserv.com>
	<20060411075942.GG72185@keybit.net>
	<443BD6F5.9020607@interserv.com>
	<20060411164936.GN72185@keybit.net>
	<443BEF3E.6070901@interserv.com>
Message-ID: <20060411180645.GC87859@keybit.net>

On Tue, Apr 11, 2006 at 12:02:38PM -0600, Charlie Savage wrote:
> There are no other occurrences that I see - it appears to be unused.  
> Also, everything compiles fine.

Be aware that successful build is not sign of
correctness (you have ERROR defined somewhere else).

If you actually seeked in sourcecode that's enough
for me (error shouldn't really be used, it's a generic
error rather then a specific one).

--strk;

From cfis at interserv.com  Tue Apr 11 14:16:43 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060411180645.GC87859@keybit.net>
References: <20060407160440.GB32419@keybit.net>	<443A9B87.7090104@interserv.com>	<20060411075942.GG72185@keybit.net>	<443BD6F5.9020607@interserv.com>	<20060411164936.GN72185@keybit.net>	<443BEF3E.6070901@interserv.com>
	<20060411180645.GC87859@keybit.net>
Message-ID: <443BF28B.6020805@interserv.com>

Be aware that successful build is not sign of
> correctness (you have ERROR defined somewhere else).
>
> If you actually seeked in sourcecode that's enough
> for me (error shouldn't really be used, it's a generic
> error rather then a specific one).
>   
Hi Strk,

Yes, I searched through the full source tree (headers and cpp files) and 
found no occurrences of ERROR except where it is defined.  So the code I 
now have is:

    enum errorEnum {
        eError,
        REPEATED_POINT,
        HOLE_OUTSIDE_SHELL,
        NESTED_HOLES,
        DISCONNECTED_INTERIOR,
        SELF_INTERSECTION,
        RING_SELF_INTERSECTION,
        NESTED_SHELLS,
        DUPLICATE_RINGS,
        TOO_FEW_POINTS,
        INVALID_COORDINATE
    };

Thanks,

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060411/feb0f09a/smime.bin
From cfis at interserv.com  Wed Apr 12 04:50:19 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Some Ruby documentation
Message-ID: <443CBF4B.8040707@interserv.com>

For lack of a better place to put it, I've documented how to build the 
Ruby extension at 
http://cfis.savagexi.com/articles/2006/04/12/ruby-bindings-for-geos.

If someone wants to move this to a more official place please feel free 
to cut and paste.

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060412/12b1b3fa/smime.bin
From Silke.Reimer at intevation.de  Wed Apr 12 06:43:37 2006
From: Silke.Reimer at intevation.de (Silke Reimer)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Actual CVS version of geos does not build
Message-ID: <20060412104337.GH27881@intevation.de>


Hallo!

I just tried to build the actual geos CVS version on a 64-bit architecture
but I don't get it working:

# tar xjf geos-cvs.tar.bz2
# cd geos-3.0.0cvs/
# ./configure
# make

leads to 

[...]
Making all in util
make[3]: Entering directory `/home/silke/geos-3.0.0cvs/source/geom/util'
if /bin/sh ../../../libtool --mode=compile --tag=CXX g++ -DHAVE_CONFIG_H -I. -I. -I../../../source/headers -I../../../source/headers/geos -I../../../source/headers     -g -O2 -DGEOS_INLINE -MT GeometryEditor.lo -MD -MP -MF ".deps/GeometryEditor.Tpo" -c -o GeometryEditor.lo GeometryEditor.cpp; \
then mv -f ".deps/GeometryEditor.Tpo" ".deps/GeometryEditor.Plo"; else rm -f ".deps/GeometryEditor.Tpo"; exit 1; fi
mkdir .libs
 g++ -DHAVE_CONFIG_H -I. -I. -I../../../source/headers -I../../../source/headers/geos -I../../../source/headers -g -O2 -DGEOS_INLINE -MT GeometryEditor.lo -MD -MP -MF .deps/GeometryEditor.Tpo -c GeometryEditor.cpp  -fPIC -DPIC -o .libs/GeometryEditor.o
In file included from ../../../source/headers/geos/geom/Geometry.h:649,
                 from ../../../source/headers/geos/geom/GeometryFactory.h:20,
                 from GeometryEditor.cpp:23:
../../../source/headers/geos/geom/Geometry.inl: In member function `const
   geos::geom::PrecisionModel* geos::geom::Geometry::getPrecisionModel() const
   ':
../../../source/headers/geos/geom/Geometry.inl:28: error: `getPrecisionModel'
   undeclared (first use this function)
../../../source/headers/geos/geom/Geometry.inl:28: error: (Each undeclared
   identifier is reported only once for each function it appears in.)
make[3]: *** [GeometryEditor.lo] Fehler 1
make[3]: Leaving directory `/home/silke/geos-3.0.0cvs/source/geom/util'
make[2]: *** [all-recursive] Fehler 1
make[2]: Leaving directory `/home/silke/geos-3.0.0cvs/source/geom'
make[1]: *** [all-recursive] Fehler 1
make[1]: Leaving directory `/home/silke/geos-3.0.0cvs/source'
make: *** [all-recursive] Fehler 1


Do you have any idea what's going wrong?

Please let me know if you need additional information.

Many greetings,

    Silke

-- 
Silke Reimer   : www.intevation.de/~silke | GISpatcher: www.gispatcher.de
Intevation GmbH: www.intevation.de        | Thuban    : thuban.intevation.org
Georgstr.4     : 49074 Osnabr?ck          | FreeGIS   : www.freegis.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060412/cda7e19c/attachment.bin
From strk at refractions.net  Wed Apr 12 07:40:35 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Actual CVS version of geos does not build
In-Reply-To: <20060412104337.GH27881@intevation.de>
References: <20060412104337.GH27881@intevation.de>
Message-ID: <20060412114035.GA88522@keybit.net>

This was a case of circular dependency introduced 
to have some GeometryFactory functions return
auto_ptr<Geometry>. I avoided use of the typedefs
defined in Geometry.h and removed that include
from GeometryFactory.h. Works for me now.

--strk;

On Wed, Apr 12, 2006 at 12:43:37PM +0200, Silke Reimer wrote:
> 
> Hallo!
> 
> I just tried to build the actual geos CVS version on a 64-bit architecture
> but I don't get it working:
> 
> # tar xjf geos-cvs.tar.bz2
> # cd geos-3.0.0cvs/
> # ./configure
> # make
> 
> leads to 
> 
> [...]
> Making all in util
> make[3]: Entering directory `/home/silke/geos-3.0.0cvs/source/geom/util'
> if /bin/sh ../../../libtool --mode=compile --tag=CXX g++ -DHAVE_CONFIG_H -I. -I. -I../../../source/headers -I../../../source/headers/geos -I../../../source/headers     -g -O2 -DGEOS_INLINE -MT GeometryEditor.lo -MD -MP -MF ".deps/GeometryEditor.Tpo" -c -o GeometryEditor.lo GeometryEditor.cpp; \
> then mv -f ".deps/GeometryEditor.Tpo" ".deps/GeometryEditor.Plo"; else rm -f ".deps/GeometryEditor.Tpo"; exit 1; fi
> mkdir .libs
>  g++ -DHAVE_CONFIG_H -I. -I. -I../../../source/headers -I../../../source/headers/geos -I../../../source/headers -g -O2 -DGEOS_INLINE -MT GeometryEditor.lo -MD -MP -MF .deps/GeometryEditor.Tpo -c GeometryEditor.cpp  -fPIC -DPIC -o .libs/GeometryEditor.o
> In file included from ../../../source/headers/geos/geom/Geometry.h:649,
>                  from ../../../source/headers/geos/geom/GeometryFactory.h:20,
>                  from GeometryEditor.cpp:23:
> ../../../source/headers/geos/geom/Geometry.inl: In member function `const
>    geos::geom::PrecisionModel* geos::geom::Geometry::getPrecisionModel() const
>    ':
> ../../../source/headers/geos/geom/Geometry.inl:28: error: `getPrecisionModel'
>    undeclared (first use this function)
> ../../../source/headers/geos/geom/Geometry.inl:28: error: (Each undeclared
>    identifier is reported only once for each function it appears in.)
> make[3]: *** [GeometryEditor.lo] Fehler 1
> make[3]: Leaving directory `/home/silke/geos-3.0.0cvs/source/geom/util'
> make[2]: *** [all-recursive] Fehler 1
> make[2]: Leaving directory `/home/silke/geos-3.0.0cvs/source/geom'
> make[1]: *** [all-recursive] Fehler 1
> make[1]: Leaving directory `/home/silke/geos-3.0.0cvs/source'
> make: *** [all-recursive] Fehler 1
> 
> 
> Do you have any idea what's going wrong?
> 
> Please let me know if you need additional information.
> 
> Many greetings,
> 
>     Silke
> 
> -- 
> Silke Reimer   : www.intevation.de/~silke | GISpatcher: www.gispatcher.de
> Intevation GmbH: www.intevation.de        | Thuban    : thuban.intevation.org
> Georgstr.4     : 49074 Osnabr?ck          | FreeGIS   : www.freegis.org



> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Wed Apr 12 07:41:53 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Some Ruby documentation
In-Reply-To: <443CBF4B.8040707@interserv.com>
References: <443CBF4B.8040707@interserv.com>
Message-ID: <20060412114153.GB88522@keybit.net>

On Wed, Apr 12, 2006 at 02:50:19AM -0600, Charlie Savage wrote:
> For lack of a better place to put it, I've documented how to build the 
> Ruby extension at 
> http://cfis.savagexi.com/articles/2006/04/12/ruby-bindings-for-geos.
> 
> If someone wants to move this to a more official place please feel free 
> to cut and paste.

I started a GEOS section on postgis wiki:
http://www.postgis.org/support/wiki/index.php?GEOS

--strk;

From Silke.Reimer at intevation.de  Wed Apr 12 08:51:47 2006
From: Silke.Reimer at intevation.de (Silke Reimer)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Actual CVS version of geos does not build
In-Reply-To: <20060412114035.GA88522@keybit.net>
References: <20060412104337.GH27881@intevation.de>
	<20060412114035.GA88522@keybit.net>
Message-ID: <20060412125147.GL27881@intevation.de>

On Wed, Apr 12, 2006 at 01:40:35PM +0200, strk@refractions.net wrote:
> This was a case of circular dependency introduced 
> to have some GeometryFactory functions return
> auto_ptr<Geometry>. I avoided use of the typedefs
> defined in Geometry.h and removed that include
> from GeometryFactory.h. Works for me now.

And for me as well. Thanks for help,

    Silke

-- 
Silke Reimer   : www.intevation.de/~silke | GISpatcher: www.gispatcher.de
Intevation GmbH: www.intevation.de        | Thuban    : thuban.intevation.org
Georgstr.4     : 49074 Osnabr?ck          | FreeGIS   : www.freegis.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060412/2cf141e3/attachment.bin
From strk at keybit.net  Wed Apr 12 12:19:04 2006
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] TaggedLineSegment
Message-ID: <20060412161904.GB99679@keybit.net>

Martin, I'm porting the jts.simplify package
to GEOS and I have a design question.

Is it a problem if we avoid to have TaggedLineSegment
derive from LineSegment ? This is probably not a problem
with JTS, but in GEOS LineSegment is composed by 2 real
Coordinates rather then pointers and we probably don't
need the overhead associated with this. Moreover this
would require LineSegment to become a polymorphic class
whereas currently it is not (in head at least, this would
be the first derivate of it). 


--strk;

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From cfis at interserv.com  Wed Apr 12 12:48:24 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Some Ruby documentation
In-Reply-To: <20060412114153.GB88522@keybit.net>
References: <443CBF4B.8040707@interserv.com>
	<20060412114153.GB88522@keybit.net>
Message-ID: <443D2F58.8060000@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060412/284e4a76/smime.bin
From strk at refractions.net  Wed Apr 12 13:13:10 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Some Ruby documentation
In-Reply-To: <443D2F58.8060000@interserv.com>
References: <443CBF4B.8040707@interserv.com>
	<20060412114153.GB88522@keybit.net>
	<443D2F58.8060000@interserv.com>
Message-ID: <20060412171310.GD99679@keybit.net>

On Wed, Apr 12, 2006 at 10:48:24AM -0600, Charlie Savage wrote:
> Great.  I'll move the info there also.

Use wiki/wiki for authentication (anti-spam measure).

--strk;

From cfis at interserv.com  Thu Apr 13 17:01:26 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <20060411180645.GC87859@keybit.net>
References: <20060407160440.GB32419@keybit.net>	<443A9B87.7090104@interserv.com>	<20060411075942.GG72185@keybit.net>	<443BD6F5.9020607@interserv.com>	<20060411164936.GN72185@keybit.net>	<443BEF3E.6070901@interserv.com>
	<20060411180645.GC87859@keybit.net>
Message-ID: <443EBC26.4050007@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3166 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060413/e06f3e98/smime.bin
From strk at refractions.net  Thu Apr 13 17:10:11 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] 2.2.2
In-Reply-To: <443EBC26.4050007@interserv.com>
References: <20060407160440.GB32419@keybit.net>
	<443A9B87.7090104@interserv.com>
	<20060411075942.GG72185@keybit.net>
	<443BD6F5.9020607@interserv.com>
	<20060411164936.GN72185@keybit.net>
	<443BEF3E.6070901@interserv.com>
	<20060411180645.GC87859@keybit.net>
	<443EBC26.4050007@interserv.com>
Message-ID: <20060413211011.GB14895@keybit.net>

On Thu, Apr 13, 2006 at 03:01:26PM -0600, Charlie Savage wrote:
> So, are we ready for a geos 2.2.2 release?  Do you want me to provide a 
> patch for the issue below, or do you just want to change it directly strk?

I'm pretty busy these days guys, sorry.
2.2.2. will have to wait unless somebody else
steps in and put it in good shape.

--strk;

From strk at refractions.net  Thu Apr 13 18:00:20 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] simplify package port
Message-ID: <20060413220020.GD14895@keybit.net>

simplify package has been ported to GEOS.
Also, interfaces to it are available trough
the C-API. Tests welcome. HEAD branch.

--strk; 

From strk at refractions.net  Sat Apr 15 08:34:18 2006
From: strk at refractions.net (Sandro Santilli)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Re: std::transform
In-Reply-To: <4440DBC9.6040805@loskot.net>
References: <4440DBC9.6040805@loskot.net>
Message-ID: <20060415123418.GB26795@keybit.net>

On Sat, Apr 15, 2006 at 01:40:57PM +0200, Mateusz ??oskot wrote:

> Hi Sandro,
> I started to become I'm impressed every day I read #postgis logs :-)
> I saw you're are considering std::transform algorithm in some manner.
> Is that right?

Yes, I've actually started trying to use standard algorithms
whenever appropriate. for_each() is usually also very appropriate.

> Simply, std::transform is the main algo I'm considering that would be
> helpful in many places in GEOS.
> So, if that's your point too, we could connect our efforts.
> 
> What do you think?

Sure. Remember that I'm not approaching complete refactoring,
just trying out some new ways of doing things when seeing an
easy way toward them.

There are still bugs in the code, so unit testing should have
the highest priority, with noding::snapround and geom::simplify
namespaces really requiring deep testing.

> p.s. do you mind to discuss it on the list?

geos-devel added to recipients list.

--strk;

> Cheers
> - --
> Mateusz ??oskot
> http://mateusz.loskot.net

From mateusz at loskot.net  Tue Apr 18 12:44:10 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Is LineString definition in SFS for SQL correct?
Message-ID: <4445175A.1000600@loskot.net>

Hi,

I've just sent my new question to OGC Forum about ambiguity I observed
in SFS for SQL r1.1 document:

http://feature.opengeospatial.org/forumbb/viewtopic.php?t=326

I'm not sure if my observations are correct,
so I'd be thankful for some review.

I think it may be interseting for GDAL/GEOS/JTS Communities,
so I hope you don't mind I'm sending copy of this post to following
mailing lists (addresses included in e-mail headers):

geos-devel@geos.refractions.net
gdal-dev@lists.maptools.org
jts-devel@lists.jump-project.org

BTW, there is another my post about WKT syntax that may be intersting:
http://feature.opengeospatial.org/forumbb/viewtopic.php?t=325

Best regards
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mbdavis at VividSolutions.com  Wed Apr 19 13:53:53 2006
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] RE: TaggedLineSegment
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0279C3F43@venus.VividSolutions.com>

I probably did this for simplicity of programming.  I would think you
can replace the subclass relationship with a uses relationship.

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.      www.vividsolutions.com
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: strk [mailto:strk@keybit.net] 
> Sent: April 12, 2006 9:19 AM
> To: Martin Davis
> Cc: geos-devel@geos.refractions.net
> Subject: TaggedLineSegment
> 
> 
> Martin, I'm porting the jts.simplify package
> to GEOS and I have a design question.
> 
> Is it a problem if we avoid to have TaggedLineSegment
> derive from LineSegment ? This is probably not a problem
> with JTS, but in GEOS LineSegment is composed by 2 real 
> Coordinates rather then pointers and we probably don't need 
> the overhead associated with this. Moreover this would 
> require LineSegment to become a polymorphic class whereas 
> currently it is not (in head at least, this would be the 
> first derivate of it). 
> 
> 
> --strk;
> 
>  /"\    ASCII Ribbon Campaign
>  \ /    Respect for low technology.
>   X     Keep e-mail messages readable by any computer system.
>  / \    Keep it ASCII. 
> 
> 

From mateusz at loskot.net  Sat Apr 22 15:53:09 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Using std::vector<bool> container
Message-ID: <444A89A5.5050503@loskot.net>

Hi,

Today, I noticed GEOS uses containers with elements of type of bool:
std::vector<bool>.

I reported those cases as a bug on the GEOS Bug Tracker with quite
detailed explanation, also giving references for further reading:

http://postgis.refractions.net/bugs/bug.php?op=show&bugid=101&pos=11

Simply, despite that using vector of bools is a bad idea from technical
point of view, it also does not make any sense.

What is following code suppose to do?

vector<bool> v;
bool* pv = &v[0];

Does it mean we retrieve address of single bit?
So, this code is compilable but only because of std::vector<bool> is e
pseudo-container, specialized by STL (C++ Language Standard, Chapter
23.2.5).
Complete explanation of this issue is available in Scott Meyers' book
(see report #101).

I think it's quite important to write about it here, just to warn
developers before using std::vector<bool> in future.

I refer interested developers to documents presented in bug report #101.

Instead of using std::vector<bool>, it's safe and recommended to use
deque<bool> or bitset. bitset is not a part of STL but is part of C++
Standard Library (CSL), so it's not an external dependency.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr 23 10:48:58 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] DrC's Inline Debugger
Message-ID: <444B93DA.2000802@loskot.net>

Hi,

As I remember, Sandro was looking for some debugging utility library to
instrument GEOS code with.
I've just found something not mentioned yet in this discussion.

It's DrC's Inline Debugger
http://mysite.verizon.net/astronaut/drchipdbg/index.html

Yet, another tool to consider.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net


From Silke.Reimer at intevation.de  Tue Apr 25 12:24:50 2006
From: Silke.Reimer at intevation.de (Silke Reimer)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] geos on SLES9 64-bit
Message-ID: <20060425162450.GY24454@intevation.de>


Hallo,

Those of you that are on the postgis-devel list as well might be reminded to an
email I just sent there. I had a rather similar problem with geos as well:

I came across a problem with the configuration of geos during the build process
on a SLES9 based 64-bit architecture. The problem is that the libdir in SLES9
is $prefix/lib64 and not, as it is assumed for geos configuration $prefix/lib.
(Perhaps this problem occurs on other systems on 64-bit architectures as well,
I don't know).

Within geos-config the libdir is been defined as $prefix/lib which obviously is
wrong when working the SLES9 64-bit system. The problem can be solved rather
easily by means of the following patch. It would be nice if you could apply it
to the current geos CVS version.

Many greetings,

    Silke

--- tools/geos-config.in.orig   2006-04-24 12:12:23.102103384 +0200
+++ tools/geos-config.in        2006-04-24 12:13:00.922353832 +0200
@@ -35,10 +35,10 @@
     echo -I@prefix@/include
       ;;
     --libs)
-      echo -L@prefix@/lib -lgeos
+      echo -L@libdir@ -lgeos
       ;;
     --ldflags)
-      echo -L@prefix@/lib
+      echo -L@libdir@
       ;;
     --includes)
       echo @prefix@/include

-- 
Silke Reimer   : www.intevation.de/~silke | GISpatcher: www.gispatcher.de
Intevation GmbH: www.intevation.de        | Thuban    : thuban.intevation.org
Georgstr.4     : 49074 Osnabr?ck          | FreeGIS   : www.freegis.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060425/f9846369/attachment.bin
From strk at refractions.net  Wed Apr 26 06:17:57 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Numeric stability
Message-ID: <20060426101757.GD55765@keybit.net>

Being fighting with dragons in the last few weeks
I thought I'd share some observations with the community :)

I produced a small testcase to clearly show what the
problem is. Call it unstable.cpp, here's the code:

---8<---------------------------------------------------------

#include <vector>
#include <cassert>

using namespace std;

vector<double> v;
double tot=0;

void add(double d) {
        v.push_back(d);
        tot+=d;
}

void check() {
        double tot_check=0;
        for (size_t i=0; i<v.size(); i++) {
                tot_check+=v[i];
        }
        assert(tot_check==tot);
}

int main()
{
        add(3.4200000000000001);
        add(1.51000000000000000000000001);
        check();
        return 0;
}

---8<---------------------------------------------------------

You will notice that depending on optimization used, FP
unit and inline strategy you'll get different results
(ie: the assertion failing or succeeding).

A few examples:

// These builds make assertion fail:
// g++  -O3   unstable.cpp
// g++  -O2   unstable.cpp
// g++  -O1   unstable.cpp
//
// These builds make assertion succeed:
// g++  -O0   unstable.cpp
// g++  -ffloat-store -O1   unstable.cpp
// g++  -ffloat-store -O2   unstable.cpp
// g++  -ffloat-store -O3   unstable.cpp
// g++ -march=pentium4 -mfpmath=sse -msse2 -O1 unstable.cpp
// g++ -march=pentium4 -mfpmath=sse -msse2 -O2 unstable.cpp
// g++ -march=pentium4 -mfpmath=sse -msse2 -O3 unstable.cpp

I haven't tried messing with 'inlined' funx, but
that has been part of my dragon's fights with the
real codebase, so I experienced that inlined/outlined
versions of the same function can also influence
rounding of floating point numbers.
Having done some research on the web, it looks like
that also the exactly same assembly code can result
in different results based on the actual processor
used, when it comes to floating point computations,
this has starterd to be taken into consideration by
new processors providing 'scalar floating
point instructions' (pentium4 and up)

Here is an excerpt from g++ manual page (-mfpmath):

   sse Use scalar floating point instructions present in the SSE
       instruction set.  This instruction set is supported by Pentium3 and
       newer chips, in the AMD line by Athlon-4, Athlon-xp and Athlon-mp
       chips.  The earlier version of SSE instruction set supports
       only single precision arithmetics, thus the double and extended
       precision arithmetics is still done using 387.  Later version,
       present only in Pentium4 and the future AMD x86-64 chips supports
       double precision arithmetics too.

       For i387 you need to use -march=cpu-type, -msse or -msse2
       switches to enable SSE extensions and make this option effective.
       For x86-64 compiler, these extensions are enabled by default.

       The resulting code should be considerably faster in the majority of
       cases and avoid the numerical instability problems of 387 code, but
       may break some existing code that expects temporaries to be 80bit.

       This is the default choice for the x86-64 compiler.

So, basically, the only way to work predictably with doubles (building
blocks for our Coordinates) would be having a modern processor providing
SSE instructions set. Or at least this is what I understood.

Alternatively, I read some reports on the web about taking care
of the way things are coded to augment the predictability of
results. This would include having NO inlined code compute ops
on floating points and have *every* complex computation be split
in atomic operations where all intermediate value is assigned
to a variable. I wouldn't be surprised if we'd also need to disable
optimization in order to make this effective. Sounds a big work
and probably a loss of performance as well.

Ok. This is it for now, as I don't have any practical solution yet.
I just wanted to share these thoughts with you in case anyone has
more experience on the subject.

Comments highly welcome, as are reports of run of that testcase.

--strk;

From strk at refractions.net  Wed Apr 26 06:28:13 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] geos on SLES9 64-bit
In-Reply-To: <20060425162450.GY24454@intevation.de>
References: <20060425162450.GY24454@intevation.de>
Message-ID: <20060426102813.GE55765@keybit.net>

Applied a slightly modified version. Thanks.

--strk;

On Tue, Apr 25, 2006 at 06:24:50PM +0200, Silke Reimer wrote:

> Within geos-config the libdir is been defined as $prefix/lib which obviously is
> wrong when working the SLES9 64-bit system. The problem can be solved rather
> easily by means of the following patch. It would be nice if you could apply it
> to the current geos CVS version.

From strk at refractions.net  Wed Apr 26 06:36:19 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Using std::vector<bool> container
In-Reply-To: <444A89A5.5050503@loskot.net>
References: <444A89A5.5050503@loskot.net>
Message-ID: <20060426103619.GF55765@keybit.net>

Mateusz, the role of vector<bool> used there is to "tag" each
vertex in a CoordinateSequence telling wheter or not it is going
to be into the result. Size of the CoordinateSequence is not
known at compile-time, and we need a random access iterator 
to couple each vertex with this information. 
If we want to keep tracking JTS as close as possible I'd
use small integers instead of bools and still use a vector.
Does it make sense ?

--strk;


On Sat, Apr 22, 2006 at 09:53:09PM +0200, Mateusz ??oskot wrote:
> Hi,
> 
> Today, I noticed GEOS uses containers with elements of type of bool:
> std::vector<bool>.
> 
> I reported those cases as a bug on the GEOS Bug Tracker with quite
> detailed explanation, also giving references for further reading:
> 
> http://postgis.refractions.net/bugs/bug.php?op=show&bugid=101&pos=11
> 
> Simply, despite that using vector of bools is a bad idea from technical
> point of view, it also does not make any sense.
> 
> What is following code suppose to do?
> 
> vector<bool> v;
> bool* pv = &v[0];
> 
> Does it mean we retrieve address of single bit?
> So, this code is compilable but only because of std::vector<bool> is e
> pseudo-container, specialized by STL (C++ Language Standard, Chapter
> 23.2.5).
> Complete explanation of this issue is available in Scott Meyers' book
> (see report #101).
> 
> I think it's quite important to write about it here, just to warn
> developers before using std::vector<bool> in future.
> 
> I refer interested developers to documents presented in bug report #101.
> 
> Instead of using std::vector<bool>, it's safe and recommended to use
> deque<bool> or bitset. bitset is not a part of STL but is part of C++
> Standard Library (CSL), so it's not an external dependency.
> 
> Cheers
> -- 
> Mateusz ??oskot
> http://mateusz.loskot.net

From sgillies at frii.com  Thu Apr 27 22:15:54 2006
From: sgillies at frii.com (Sean Gillies)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] LinearRing::clone?
Message-ID: <589D124C-79DE-4A0B-B2EE-19BD89E7A24D@frii.com>

Currently (branch 2-2, maybe HEAD too), LinearRing::clone (inherited  
from LineString) returns a LineString. I'd like to add a clone method  
to LinearRing that returns LinearRing. Any objection?

---
Sean Gillies
http://zcologia.com




From strk at refractions.net  Fri Apr 28 03:23:32 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] LinearRing::clone?
In-Reply-To: <589D124C-79DE-4A0B-B2EE-19BD89E7A24D@frii.com>
References: <589D124C-79DE-4A0B-B2EE-19BD89E7A24D@frii.com>
Message-ID: <20060428072332.GA6125@keybit.net>

On Thu, Apr 27, 2006 at 08:15:54PM -0600, Sean Gillies wrote:
> Currently (branch 2-2, maybe HEAD too), LinearRing::clone (inherited  
> from LineString) returns a LineString. I'd like to add a clone method  
> to LinearRing that returns LinearRing. Any objection?

This was fixed in head a long time ago, I didn't backport
to 2.2. because it would be an API change. If I'm the
only one concerned I'll give up :)

--strk;

From strk at refractions.net  Fri Apr 28 07:15:19 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Protected Geometry ctors
Message-ID: <20060428111519.GB11184@keybit.net>

I've committed a change in HEAD that makes Geometry
constructors protected. This is to enforce construction
trough GeometryFactory, which is the only friend class
of the whole Geometry hierarchy now.

Destructors are still public, to allow for use in auto_ptr.

Unit tests have been updated to allow build.

--strk;

 /"\    ASCII Ribbon Campaign
 \ /    Respect for low technology.
  X     Keep e-mail messages readable by any computer system.
 / \    Keep it ASCII. 


From strk at refractions.net  Fri Apr 28 07:30:42 2006
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] RE: TaggedLineSegment
In-Reply-To: <5A94289A9268514C8D6C0F1FF44BA0279C3F43@venus.VividSolutions.com>
References: <5A94289A9268514C8D6C0F1FF44BA0279C3F43@venus.VividSolutions.com>
Message-ID: <20060428113042.GC11184@keybit.net>

On Wed, Apr 19, 2006 at 10:53:53AM -0700, Martin Davis wrote:
> I probably did this for simplicity of programming.  I would think you
> can replace the subclass relationship with a uses relationship.

This won't remove the overhead associated with copying coordinates.
I'll leave it as it is for now, but this is a place that really
calls for shared_ptr<> usage...
Using pointers would be ok too, but I'm kind of scared of keeping
pointers to Coordinates returned from CoordinateSequence as 
references, it's hard to ensure memory integrity that way
(adding a point to the source CoordinateSequence could trigger
a complete reallocation of the underlying vector)

--strk;

> > -----Original Message-----
> > From: strk [mailto:strk@keybit.net] 
> > Sent: April 12, 2006 9:19 AM
> > To: Martin Davis
> > Cc: geos-devel@geos.refractions.net
> > Subject: TaggedLineSegment
> > 
> > 
> > Martin, I'm porting the jts.simplify package
> > to GEOS and I have a design question.
> > 
> > Is it a problem if we avoid to have TaggedLineSegment
> > derive from LineSegment ? This is probably not a problem
> > with JTS, but in GEOS LineSegment is composed by 2 real 
> > Coordinates rather then pointers and we probably don't need 
> > the overhead associated with this. Moreover this would 
> > require LineSegment to become a polymorphic class whereas 
> > currently it is not (in head at least, this would be the 
> > first derivate of it). 

From cfis at interserv.com  Fri Apr 28 15:48:34 2006
From: cfis at interserv.com (Charlie Savage)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] LinearRing::clone?
In-Reply-To: <20060428072332.GA6125@keybit.net>
References: <589D124C-79DE-4A0B-B2EE-19BD89E7A24D@frii.com>
	<20060428072332.GA6125@keybit.net>
Message-ID: <44527192.9020000@interserv.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3241 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20060428/a68e5d4a/smime.bin
From jearly at alum.ups.edu  Sun Apr 30 00:19:39 2006
From: jearly at alum.ups.edu (Jeffrey J. Early)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] WKBReader Endian detection fails
Message-ID: <C07988EB.D8F0%jearly@alum.ups.edu>

I'm running GEOS 2.2.1 on a big endian machine (macosx, ppc) and encountered
troubles when trying to use the c -interface function GEOSGeomFromWKB_buf.
Specifically it fails to properly set the internal byte ordering to big
endian. In the file WKBReader.cpp I took the lines (68-70):

    // default is machine endian
    if (byteOrder == WKBConstants::wkbNDR)
        dis.setOrder(ByteOrderValues::ENDIAN_LITTLE);

And added,

    else
        dis.setOrder(ByteOrderValues::ENDIAN_BIG);

after it. This solved the problem.

I discovered this problem reading some WKB data from a Postgresql database
via PostGIS and tried to dump it to GEOSGeomFromWKB_buf. This failed with
the error message "Unknown WKB type ". I was pretty sure the data was valid
having written my own WKB parser which worked successfully on the same data.

I can't get the CVS code to compile, so I don't know if it's been fixed
already -- but glancing at the WKBReader.cpp file in CVS I don't see an
obvious change.

Should this be patched? Or is something else possibly causing this problem?

Jeffrey



From mateusz at loskot.net  Sun Apr 30 18:25:22 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] RE: TaggedLineSegment
In-Reply-To: <20060428113042.GC11184@keybit.net>
References: <5A94289A9268514C8D6C0F1FF44BA0279C3F43@venus.VividSolutions.com>
	<20060428113042.GC11184@keybit.net>
Message-ID: <44553952.3000208@loskot.net>

strk@refractions.net wrote:
> On Wed, Apr 19, 2006 at 10:53:53AM -0700, Martin Davis wrote:
> 
>> I probably did this for simplicity of programming.  I would think
>> you can replace the subclass relationship with a uses relationship.
>> 
> 
> 
> This won't remove the overhead associated with copying coordinates.

Hmm, TaggedLineSegment seems to be non-copyable type, so the only
overhead I can see during construction.

> I'll leave it as it is for now, but this is a place that really calls
> for shared_ptr<> usage... 

Yup, that's the solution.

> Using pointers would be ok too, but I'm
> kind of scared of keeping pointers to Coordinates returned from
> CoordinateSequence as references, it's hard to ensure memory
> integrity that way (adding a point to the source CoordinateSequence
> could trigger a complete reallocation of the underlying vector)

You're 100% right, returning such object by-ref can cause real troubles.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

From mateusz at loskot.net  Sun Apr 30 18:27:36 2006
From: mateusz at loskot.net (=?UTF-8?B?TWF0ZXVzeiDFgW9za290?=)
Date: Fri Nov  2 20:53:10 2007
Subject: [geos-devel] Protected Geometry ctors
In-Reply-To: <20060428111519.GB11184@keybit.net>
References: <20060428111519.GB11184@keybit.net>
Message-ID: <445539D8.5020300@loskot.net>

strk@refractions.net wrote:
> I've committed a change in HEAD that makes Geometry constructors
> protected. This is to enforce construction trough GeometryFactory,
> which is the only friend class of the whole Geometry hierarchy now.

But, protected ctor won't prevent users from contstructing object using
derieved types directly.

Cheers
-- 
Mateusz ?oskot
http://mateusz.loskot.net

