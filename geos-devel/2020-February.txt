From geos-trac at osgeo.org  Wed Feb  5 10:43:41 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 05 Feb 2020 18:43:41 -0000
Subject: [geos-devel] [GEOS] #1013: MultiLineString::reverse should not
 change component order
In-Reply-To: <045.a67f2786ca38a2cc0f16a8f9745beb80@osgeo.org>
References: <045.a67f2786ca38a2cc0f16a8f9745beb80@osgeo.org>
Message-ID: <060.2379abc4e6705e3cf95310c5460c871b@osgeo.org>

#1013: MultiLineString::reverse should not change component order
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.7.3
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by Dan Baston <dbaston@…>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"c01c8c1c30091d655ba888790c2daeec1f33bae3/git" c01c8c1/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="c01c8c1c30091d655ba888790c2daeec1f33bae3"
 Retain component order in MultiLineString::reverse

 Updated for consistency with the behavior of other geometry types (as
 changed in https://github.com/locationtech/jts/pull/513)

 Fixes #1013
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1013#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Feb  5 10:57:38 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 05 Feb 2020 18:57:38 -0000
Subject: [geos-devel] [GEOS] #1013: MultiLineString::reverse should not
 change component order
In-Reply-To: <045.a67f2786ca38a2cc0f16a8f9745beb80@osgeo.org>
References: <045.a67f2786ca38a2cc0f16a8f9745beb80@osgeo.org>
Message-ID: <060.ef8cba39bf2acc8936e1d020caf96d77@osgeo.org>

#1013: MultiLineString::reverse should not change component order
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.7.3
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by Dan Baston <dbaston@…>):

 In [changeset:"45b28eb41288e31c7d489ee765ae633034efee94/git" 45b28eb/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="45b28eb41288e31c7d489ee765ae633034efee94"
 Retain component order in MultiLineString::reverse

 Updated for consistency with the behavior of other geometry types (as
 changed in https://github.com/locationtech/jts/pull/513)

 Fixes #1013
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1013#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Wed Feb 12 00:59:45 2020
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 12 Feb 2020 09:59:45 +0100
Subject: [geos-devel] github issues ?
Message-ID: <20200212085945.GA20428@liz>

Since when are we accepting issue reports on GitHub ?
I was surprised to see them, as I'm pretty sure I had
them disabled when I first started the mirror ?

--strk; 

From dbaston at gmail.com  Wed Feb 12 14:02:53 2020
From: dbaston at gmail.com (Daniel Baston)
Date: Wed, 12 Feb 2020 17:02:53 -0500
Subject: [geos-devel] github issues ?
In-Reply-To: <20200212085945.GA20428@liz>
References: <20200212085945.GA20428@liz>
Message-ID: <CA+K_q_qano4FRP+kBjvO-cN6mQqr2dBu-QH2QYi94+E7ViSdBg@mail.gmail.com>

I enabled them after some discussion on IRC in November. The thought was
they are a harmless way to collect user feedback, and a preferable
alternative to ignoring users that do not have an OSGeo account. If
something is worth ticketing, such as a fix that needs to be applied to a
stable branch, I am happy to copy-paste the content of the GitHub issue
into Trac myself.

You've gone ahead and closed them, though?

Dan

On Wed, Feb 12, 2020 at 3:59 AM Sandro Santilli <strk at kbt.io> wrote:

> Since when are we accepting issue reports on GitHub ?
> I was surprised to see them, as I'm pretty sure I had
> them disabled when I first started the mirror ?
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20200212/eb8d7054/attachment.html>

From pramsey at cleverelephant.ca  Wed Feb 12 14:09:14 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 12 Feb 2020 17:09:14 -0500
Subject: [geos-devel] github issues ?
In-Reply-To: <CA+K_q_qano4FRP+kBjvO-cN6mQqr2dBu-QH2QYi94+E7ViSdBg@mail.gmail.com>
References: <20200212085945.GA20428@liz>
 <CA+K_q_qano4FRP+kBjvO-cN6mQqr2dBu-QH2QYi94+E7ViSdBg@mail.gmail.com>
Message-ID: <2C95B39B-64B7-49A6-B7A9-68E15F2F1AE3@cleverelephant.ca>

Particularly with the relative impedance level of getting an OSGeo account, having the GH issues seems a good thing, particularly if the GH-enabled people are willing to work them. You get to run your bespoke non-Evil infra, can we manage the Evil infra on the same basis?

P

> On Feb 12, 2020, at 5:02 PM, Daniel Baston <dbaston at gmail.com> wrote:
> 
> I enabled them after some discussion on IRC in November. The thought was they are a harmless way to collect user feedback, and a preferable alternative to ignoring users that do not have an OSGeo account. If something is worth ticketing, such as a fix that needs to be applied to a stable branch, I am happy to copy-paste the content of the GitHub issue into Trac myself.
> 
> You've gone ahead and closed them, though?
> 
> Dan
> 
> On Wed, Feb 12, 2020 at 3:59 AM Sandro Santilli <strk at kbt.io> wrote:
> Since when are we accepting issue reports on GitHub ?
> I was surprised to see them, as I'm pretty sure I had
> them disabled when I first started the mirror ?
> 
> --strk; 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Wed Feb 12 14:35:17 2020
From: lr at pcorp.us (Regina Obe)
Date: Wed, 12 Feb 2020 17:35:17 -0500
Subject: [geos-devel] github issues ? YES
Message-ID: <000501d5e1f4$b3f90950$1beb1bf0$@pcorp.us>

We had a discussion about this on IRC this morning and I told strk how it came about.  And yah we kinda voted yes (as what Dan mentioned below) on IRC in November or December. I forget when.
I think strk is okay with it.

+1 from me

And I gather most everyone else is +1?

So we can just mark this as an official MOTION PASSED :)

-----Original Message-----
From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Paul Ramsey
Sent: Wednesday, February 12, 2020 5:09 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: Re: [geos-devel] github issues ?

Particularly with the relative impedance level of getting an OSGeo account, having the GH issues seems a good thing, particularly if the GH-enabled people are willing to work them. You get to run your bespoke non-Evil infra, can we manage the Evil infra on the same basis?

P

> On Feb 12, 2020, at 5:02 PM, Daniel Baston <dbaston at gmail.com> wrote:
> 
> I enabled them after some discussion on IRC in November. The thought was they are a harmless way to collect user feedback, and a preferable alternative to ignoring users that do not have an OSGeo account. If something is worth ticketing, such as a fix that needs to be applied to a stable branch, I am happy to copy-paste the content of the GitHub issue into Trac myself.
> 
> You've gone ahead and closed them, though?
> 
> Dan
> 
> On Wed, Feb 12, 2020 at 3:59 AM Sandro Santilli <strk at kbt.io> wrote:
> Since when are we accepting issue reports on GitHub ?
> I was surprised to see them, as I'm pretty sure I had them disabled 
> when I first started the mirror ?
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Wed Feb 12 14:33:18 2020
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 12 Feb 2020 23:33:18 +0100
Subject: [geos-devel] github issues ?
In-Reply-To: <CA+K_q_qano4FRP+kBjvO-cN6mQqr2dBu-QH2QYi94+E7ViSdBg@mail.gmail.com>
References: <20200212085945.GA20428@liz>
 <CA+K_q_qano4FRP+kBjvO-cN6mQqr2dBu-QH2QYi94+E7ViSdBg@mail.gmail.com>
Message-ID: <20200212223318.GA20586@liz>

On Wed, Feb 12, 2020 at 05:02:53PM -0500, Daniel Baston wrote:
> I enabled them after some discussion on IRC in November. The thought was
> they are a harmless way to collect user feedback, and a preferable
> alternative to ignoring users that do not have an OSGeo account. If
> something is worth ticketing, such as a fix that needs to be applied to a
> stable branch, I am happy to copy-paste the content of the GitHub issue
> into Trac myself.
> 
> You've gone ahead and closed them, though?

Sorry, it was an impulsive move. I only closed the ones without
activity, I see one was reopened already. Let's please make sure
we can have a single place where we decide when it is time to
close a release, and that using such a single place only requires
an OSGeo account.

--strk;

From mtnclimb at gmail.com  Wed Feb 12 17:07:51 2020
From: mtnclimb at gmail.com (Martin Davis)
Date: Wed, 12 Feb 2020 17:07:51 -0800
Subject: [geos-devel] github issues ? YES
In-Reply-To: <000501d5e1f4$b3f90950$1beb1bf0$@pcorp.us>
References: <000501d5e1f4$b3f90950$1beb1bf0$@pcorp.us>
Message-ID: <CAK2ens0jqRen_+9w96DN+Y1g5vzvL52ox981bbGhc4ZJb+AUcQ@mail.gmail.com>

+1 from me.

On Wed, Feb 12, 2020 at 2:35 PM Regina Obe <lr at pcorp.us> wrote:

> We had a discussion about this on IRC this morning and I told strk how it
> came about.  And yah we kinda voted yes (as what Dan mentioned below) on
> IRC in November or December. I forget when.
> I think strk is okay with it.
>
> +1 from me
>
> And I gather most everyone else is +1?
>
> So we can just mark this as an official MOTION PASSED :)
>
> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Wednesday, February 12, 2020 5:09 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] github issues ?
>
> Particularly with the relative impedance level of getting an OSGeo
> account, having the GH issues seems a good thing, particularly if the
> GH-enabled people are willing to work them. You get to run your bespoke
> non-Evil infra, can we manage the Evil infra on the same basis?
>
> P
>
> > On Feb 12, 2020, at 5:02 PM, Daniel Baston <dbaston at gmail.com> wrote:
> >
> > I enabled them after some discussion on IRC in November. The thought was
> they are a harmless way to collect user feedback, and a preferable
> alternative to ignoring users that do not have an OSGeo account. If
> something is worth ticketing, such as a fix that needs to be applied to a
> stable branch, I am happy to copy-paste the content of the GitHub issue
> into Trac myself.
> >
> > You've gone ahead and closed them, though?
> >
> > Dan
> >
> > On Wed, Feb 12, 2020 at 3:59 AM Sandro Santilli <strk at kbt.io> wrote:
> > Since when are we accepting issue reports on GitHub ?
> > I was surprised to see them, as I'm pretty sure I had them disabled
> > when I first started the mirror ?
> >
> > --strk;
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20200212/49fff164/attachment.html>

From geos-trac at osgeo.org  Thu Feb 13 19:41:53 2020
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 14 Feb 2020 03:41:53 -0000
Subject: [geos-devel] [GEOS] #1014: geos-config for Windows?
Message-ID: <045.20784e1706db7c8979c6b8632a640f28@osgeo.org>

#1014: geos-config for Windows?
-----------------------------------+--------------------------
 Reporter:  Mike Taves             |      Owner:  geos-devel@…
     Type:  enhancement            |     Status:  new
 Priority:  major                  |  Milestone:  3.9.0
Component:  Build/Install (cmake)  |    Version:  master
 Severity:  Unassigned             |   Keywords:
-----------------------------------+--------------------------
 Is there any appetite for a `geos-config` for Windows? I've mocked
 together a `geos-config.bat` file that mimics the Unix shell-based
 version.

 Note that a MSVC CMake build will generate a `geos-config` file. A
 proposed solution would write a `geos-config.bat` file instead.

 One consideration is that some extra flags many be needed for Windows
 back-slash shenanigans, for instance `python setup.py build_ext
 -IC:\\deps\\geos\\include ...` is needed, therefore perhaps add a
 `--escape-backslash` flag.

 I can prepare a PR. Any thoughts before I get carried away?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1014>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Feb 15 03:49:16 2020
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 15 Feb 2020 11:49:16 -0000
Subject: [geos-devel] [GEOS] #743: Number of buffered points not always
 a multiple of quadSegs
In-Reply-To: <045.cd4963adc07dad0de796893d0987655c@osgeo.org>
References: <045.cd4963adc07dad0de796893d0987655c@osgeo.org>
Message-ID: <060.beefb1b549fd4d9b363c41e0a856223c@osgeo.org>

#743: Number of buffered points not always a multiple of quadSegs
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.9.0
Component:  Default     |     Version:  3.5.0
 Severity:  Annoyance   |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by Mike Taves):

 * milestone:  GEOS Fund Me => 3.9.0


Comment:

 See https://github.com/libgeos/geos/pull/282

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/743#comment:7>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Feb 17 14:36:12 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Feb 2020 22:36:12 -0000
Subject: [geos-devel] [GEOS] #1014: geos-config for Windows?
In-Reply-To: <045.20784e1706db7c8979c6b8632a640f28@osgeo.org>
References: <045.20784e1706db7c8979c6b8632a640f28@osgeo.org>
Message-ID: <060.e644bf0ae76c031d25009f344f409c36@osgeo.org>

#1014: geos-config for Windows?
-----------------------------------+---------------------------
 Reporter:  Mike Taves             |       Owner:  geos-devel@…
     Type:  enhancement            |      Status:  new
 Priority:  major                  |   Milestone:  3.9.0
Component:  Build/Install (cmake)  |     Version:  master
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by robe):

 I guess my only concern is if the geos-config.bat will require extra baby-
 sitting.  E.g. we got rid of all the VC / nmake stuff a while ago for that
 reason.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1014#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Feb 17 14:42:03 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Feb 2020 22:42:03 -0000
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for consistency
Message-ID: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>

#1015: Update geos-config tool for consistency
-----------------------------------+--------------------------
 Reporter:  robe                   |      Owner:  geos-devel@…
     Type:  defect                 |     Status:  new
 Priority:  minor                  |  Milestone:  3.9.0
Component:  Build/Install (cmake)  |    Version:  master
 Severity:  Unassigned             |   Keywords:
-----------------------------------+--------------------------
 Details repeated from https://git.osgeo.org/gitea/geos/geos/pulls/99


 ----
 **Specify bash, and use printf to escape paths (if needed)**

 This allows installation with CMake to other directories, such as `/opt/my
 prefix`, since `geos-config --prefix` would return `/opt/my\ prefix`. Also
 `printf` is a bash-only feature.

 **Restore bash variables, e.g. `${prefix}`, and use CMake's `@ONLY` option
 **
 Restore to prior syntax in b15fd1171823d16195bee17f2c7b44778603258d using
 `${prefix}` rather than substituting `@CMAKE_INSTALL_PREFIX@`. Re-use
 variables throughout script for convenience.

 Note that the current autotools setup does not fully install to prefixes
 that need escaping, but the CMake setup can.

 **Consistent indents and style between .in and .cmake versions**

 Use 2-space indents, re-order case statements to same order as usage. The
 Autotools and CMake versions are nearly the same, with the exception of
 Autotool's `libdir`, which perhaps could be something other than
 `$prefix/lib`?

 **Remove `exec_prefix`, which has never been used**

 Checking the history of this file, it does not seem to be used.

 **Disable configure and install for MSVC builds**

 The script requires bash, which is not used for MSVC. Scheme to install a
 MSVC version of `geos-config.bat` is drafted at [trac#1014](#1014).

 ----

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1015>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Feb 17 14:43:33 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Feb 2020 22:43:33 -0000
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
Message-ID: <057.67aa842d7dd9b6a0fcd6bb65dcc1331b@osgeo.org>

#1015: Update geos-config tool for consistency
-----------------------------------+---------------------------
 Reporter:  robe                   |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:  3.9.0
Component:  Build/Install (cmake)  |     Version:  master
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by robe):

 Already committed at [4add2acf/git]

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1015#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Feb 17 14:45:03 2020
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 17 Feb 2020 22:45:03 -0000
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
Message-ID: <057.218322c8e93909af047f8b73253da1d9@osgeo.org>

#1015: Update geos-config tool for consistency
-----------------------------------+---------------------------
 Reporter:  robe                   |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:  3.9.0
Component:  Build/Install (cmake)  |     Version:  master
 Severity:  Unassigned             |  Resolution:  fixed
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by Regina Obe <lr@…>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"9a6279fda34feb2acde8650f14f9c051e9fec60e/git"
 9a6279fd/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="9a6279fda34feb2acde8650f14f9c051e9fec60e"
 Add credits, Closes #1015
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1015#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From gdt at lexort.com  Mon Feb 17 16:12:47 2020
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 17 Feb 2020 19:12:47 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org> (GEOS's message
 of "Mon, 17 Feb 2020 22:42:03 -0000")
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
Message-ID: <rmir1ysg3cw.fsf@s1.lexort.com>

"GEOS" <geos-trac at osgeo.org> writes:

> #1015: Update geos-config tool for consistency
> -----------------------------------+--------------------------
>  Reporter:  robe                   |      Owner:  geos-devel@…
>      Type:  defect                 |     Status:  new
>  Priority:  minor                  |  Milestone:  3.9.0
> Component:  Build/Install (cmake)  |    Version:  master
>  Severity:  Unassigned             |   Keywords:
> -----------------------------------+--------------------------
>  Details repeated from https://git.osgeo.org/gitea/geos/geos/pulls/99
>
>
>  ----
>  **Specify bash, and use printf to escape paths (if needed)**
>
>  This allows installation with CMake to other directories, such as `/opt/my
>  prefix`, since `geos-config --prefix` would return `/opt/my\ prefix`. Also
>  `printf` is a bash-only feature.

It really seems like a regresssion to require bash, rather than POSIX
shell, and it's definitely a regression if the build doesn't find bash
and substitute in the path.

Is this really necessary?

From mwtoews at gmail.com  Mon Feb 17 16:55:19 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 18 Feb 2020 13:55:19 +1300
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <rmir1ysg3cw.fsf@s1.lexort.com>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
Message-ID: <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>

On Tue, 18 Feb 2020 at 13:20, Greg Troxel <gdt at lexort.com> wrote:
> "GEOS" <geos-trac at osgeo.org> writes:
> >  **Specify bash, and use printf to escape paths (if needed)**
> >
> >  This allows installation with CMake to other directories, such as `/opt/my
> >  prefix`, since `geos-config --prefix` would return `/opt/my\ prefix`. Also
> >  `printf` is a bash-only feature.
>
> It really seems like a regresssion to require bash, rather than POSIX
> shell, and it's definitely a regression if the build doesn't find bash
> and substitute in the path.
>
> Is this really necessary?

As noted above, the printf function is built-in with Bash, and can
properly escape a path. While I see there is also /usr/bin/printf I'm
not sure how common or standard this tool is (my tests with /bin/sh
didn't go well, so I opted to switch to Bash for reliability).
Currently, other Bash scripts are present in tools/ci/ but these are
not installed with GEOS.

Besides Native Windows, what OSes (that GEOS is used on) does not have
Bash available? As far as I know, it's available on most Linux
distributions, all recent Solaris and macOS, and even some Windows. I
can't think of any other shell that is more common.

From strk at kbt.io  Mon Feb 17 23:22:00 2020
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 18 Feb 2020 08:22:00 +0100
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
 consistency
In-Reply-To: <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
Message-ID: <20200218072200.GB4313@liz>

On Tue, Feb 18, 2020 at 01:55:19PM +1300, Mike Taves wrote:
> On Tue, 18 Feb 2020 at 13:20, Greg Troxel <gdt at lexort.com> wrote:
> > "GEOS" <geos-trac at osgeo.org> writes:
> > >  **Specify bash, and use printf to escape paths (if needed)**
> > >
> > >  This allows installation with CMake to other directories, such as `/opt/my
> > >  prefix`, since `geos-config --prefix` would return `/opt/my\ prefix`. Also
> > >  `printf` is a bash-only feature.
> >
> > It really seems like a regresssion to require bash, rather than POSIX
> > shell, and it's definitely a regression if the build doesn't find bash
> > and substitute in the path.
> >
> > Is this really necessary?
> 
> As noted above, the printf function is built-in with Bash, and can
> properly escape a path. While I see there is also /usr/bin/printf I'm
> not sure how common or standard this tool is (my tests with /bin/sh
> didn't go well, so I opted to switch to Bash for reliability).

GNU coreutils "printf" works fine here:

  [strk at liz:~] /usr/bin/printf "%q\n" "space 'quote' and \"doublequote\""
  'space '\''quote'\'' and "doublequote"'
  [strk at liz:~] /usr/bin/printf  --version | head -1
  printf (GNU coreutils) 8.28

--strk;

From mwtoews at gmail.com  Tue Feb 18 01:16:38 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 18 Feb 2020 22:16:38 +1300
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <20200218072200.GB4313@liz>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <20200218072200.GB4313@liz>
Message-ID: <CAM2FmMqCXhYqTE1UxvofqmTmGJ7Xp0OfsL0NxkWGK6dbO07Oxg@mail.gmail.com>

On Tue, 18 Feb 2020 at 20:22, Sandro Santilli <strk at kbt.io> wrote:
> > properly escape a path. While I see there is also /usr/bin/printf I'm
> > not sure how common or standard this tool is (my tests with /bin/sh
> > didn't go well, so I opted to switch to Bash for reliability).
>
> GNU coreutils "printf" works fine here:
>
>   [strk at liz:~] /usr/bin/printf "%q\n" "space 'quote' and \"doublequote\""
>   'space '\''quote'\'' and "doublequote"'
>   [strk at liz:~] /usr/bin/printf  --version | head -1
>   printf (GNU coreutils) 8.28

The printf function in Bash has supported the %q directive for much longer
https://stackoverflow.com/a/26069697
https://web.archive.org/web/20031119043100/http://www.gnu.org/software/bash/manual/bashref.html

whereas the %q directive for /usr/bin/printf was introduced a few
years ago, and seems to produce a different output, for example having
a single quotation mark on either end of the above example. Bash's
printf does not add single quotation marks to the output, as it is in
a format that can be reused as shell input.

In short: I can't easily get the same escaped output using #!/bin/sh

From gdt at lexort.com  Tue Feb 18 06:11:00 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 09:11:00 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 (Mike Taves's message of "Tue, 18 Feb 2020 13:55:19 +1300")
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
Message-ID: <rmipnecdlzf.fsf@s1.lexort.com>

Mike Taves <mwtoews at gmail.com> writes:

> On Tue, 18 Feb 2020 at 13:20, Greg Troxel <gdt at lexort.com> wrote:
>> "GEOS" <geos-trac at osgeo.org> writes:
>> >  **Specify bash, and use printf to escape paths (if needed)**
>> >
>> >  This allows installation with CMake to other directories, such as `/opt/my
>> >  prefix`, since `geos-config --prefix` would return `/opt/my\ prefix`. Also
>> >  `printf` is a bash-only feature.
>>
>> It really seems like a regresssion to require bash, rather than POSIX
>> shell, and it's definitely a regression if the build doesn't find bash
>> and substitute in the path.
>>
>> Is this really necessary?
>
> As noted above, the printf function is built-in with Bash, and can
> properly escape a path. While I see there is also /usr/bin/printf I'm
> not sure how common or standard this tool is (my tests with /bin/sh
> didn't go well, so I opted to switch to Bash for reliability).

First, to me requiring bash is worse than telling people not to do
ridiculous things like putting spaces in pathnames :-)  But I realize
other people think spaces in pathnames is an ok thing.

The right question about tools is not what's typically on Linux but what
POSIX requires.

In searching for the POSIX printf spec, I found this post about escaping
spaces in a portable manner.

  https://stackoverflow.com/questions/12162010/posix-sh-equivalent-for-bash-s-printf-q

The specs at opengroup.org seem hard to deal with today - not sure if
they changed - but I found this POSIX printf description:

  https://www.unix.com/man-page/POSIX/1posix/printf/

> Currently, other Bash scripts are present in tools/ci/ but these are
> not installed with GEOS.

ci tools are quite a different story than a requirement for regular
installs, although I see using bash there (vs /bin/sh) as a bug also.

> Besides Native Windows, what OSes (that GEOS is used on) does not have
> Bash available? As far as I know, it's available on most Linux
> distributions, all recent Solaris and macOS, and even some Windows. I
> can't think of any other shell that is more common.

The shell that is more common is the one required by POSIX: /bin/sh,
having the behavior specified by POSIX.   Bash either conforms to POSIX
or is close enough, so code written for POSIX will work fine with bash.  

None of the BSDs have bash by default.  When it is present, via ports,
pkgsrc, etc., it's not in /bin.  On NetBSD, it's in /usr/pkg/bin/bash.
People use it for their login shell.  I do too - I'm not a bash hater,
but object to it for programming use.  It's enormous, and is one
particular implementation among many.  I view it as personal choice to
use it for interactive use, and not appropriate for scripting.

The fact that /bin/bash does not exist on *BSD, and probably other
places, prompted my question about looking for it and substituting the
path.  Expecting bash to be in /bin/bash is just not a valid assumption.


So, given that there seems to be a way to do this without introducing a
dependenchy on bash, I'd like to see this backed out.

From gdt at lexort.com  Tue Feb 18 06:12:16 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 09:12:16 -0500
Subject: [geos-devel] dependency management and PSC
Message-ID: <rmilfp0dlxb.fsf@s1.lexort.com>

I was surprised to see a hard dependency on bash land without any prior
discussion on the list.  I would like to see PSC adopt a notion that any
increases in deependencies, especially depending on anything that is not
specified by POSIX, require on-list discussion and a PSC vote.


From lr at pcorp.us  Tue Feb 18 06:49:14 2020
From: lr at pcorp.us (Regina Obe)
Date: Tue, 18 Feb 2020 09:49:14 -0500
Subject: [geos-devel] dependency management and PSC
In-Reply-To: <rmilfp0dlxb.fsf@s1.lexort.com>
References: <rmilfp0dlxb.fsf@s1.lexort.com>
Message-ID: <001901d5e66a$96e59d90$c4b0d8b0$@pcorp.us>

Greg,

Sorry my oversight.  Didn't notice it introduced a dependency we didn't already have.
If I had realized that I would have brought it up to vote.

Thanks for pointing it out,
Regina


-----Original Message-----
From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Greg Troxel
Sent: Tuesday, February 18, 2020 9:12 AM
To: geos-devel at lists.osgeo.org
Subject: [geos-devel] dependency management and PSC

I was surprised to see a hard dependency on bash land without any prior discussion on the list.  I would like to see PSC adopt a notion that any increases in deependencies, especially depending on anything that is not specified by POSIX, require on-list discussion and a PSC vote.

_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/geos-devel


From gdt at lexort.com  Tue Feb 18 07:08:10 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 10:08:10 -0500
Subject: [geos-devel] dependency management and PSC
In-Reply-To: <001901d5e66a$96e59d90$c4b0d8b0$@pcorp.us> (Regina Obe's message
 of "Tue, 18 Feb 2020 09:49:14 -0500")
References: <rmilfp0dlxb.fsf@s1.lexort.com>
 <001901d5e66a$96e59d90$c4b0d8b0$@pcorp.us>
Message-ID: <rmi1rqsdjc5.fsf@s1.lexort.com>

"Regina Obe" <lr at pcorp.us> writes:

> Greg,
>
> Sorry my oversight.  Didn't notice it introduced a dependency we didn't already have.
> If I had realized that I would have brought it up to vote.
>
> Thanks for pointing it out,
> Regina

Thanks for explaining!

From pramsey at cleverelephant.ca  Tue Feb 18 09:27:12 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 18 Feb 2020 09:27:12 -0800
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
 consistency
In-Reply-To: <rmipnecdlzf.fsf@s1.lexort.com>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
Message-ID: <965DB781-99B5-4D7B-B5EA-41B4C59AB0DD@cleverelephant.ca>



> On Feb 18, 2020, at 6:11 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> Mike Taves <mwtoews at gmail.com> writes:
> 
>> On Tue, 18 Feb 2020 at 13:20, Greg Troxel <gdt at lexort.com> wrote:
>>> "GEOS" <geos-trac at osgeo.org> writes:
>>>> **Specify bash, and use printf to escape paths (if needed)**
>>>> 
>>>> This allows installation with CMake to other directories, such as `/opt/my
>>>> prefix`, since `geos-config --prefix` would return `/opt/my\ prefix`. Also
>>>> `printf` is a bash-only feature.
>>> 
>>> It really seems like a regression to require bash, rather than POSIX
>>> shell, and it's definitely a regression if the build doesn't find bash
>>> and substitute in the path.
>>> 
>>> Is this really necessary?
>> 
>> As noted above, the printf function is built-in with Bash, and can
>> properly escape a path. While I see there is also /usr/bin/printf I'm
>> not sure how common or standard this tool is (my tests with /bin/sh
>> didn't go well, so I opted to switch to Bash for reliability).
> 
> First, to me requiring bash is worse than telling people not to do
> ridiculous things like putting spaces in pathnames :-)  But I realize
> other people think spaces in pathnames is an ok thing.
> 
> The right question about tools is not what's typically on Linux but what
> POSIX requires.
> 
> In searching for the POSIX printf spec, I found this post about escaping
> spaces in a portable manner.
> 
>  https://stackoverflow.com/questions/12162010/posix-sh-equivalent-for-bash-s-printf-q
> 
> The specs at opengroup.org seem hard to deal with today - not sure if
> they changed - but I found this POSIX printf description:
> 
>  https://www.unix.com/man-page/POSIX/1posix/printf/
> 
>> Currently, other Bash scripts are present in tools/chi/ but these are
>> not installed with GEOS.
> 
> chi tools are quite a different story than a requirement for regular
> installs, although I see using bash there (vs /bin/sh) as a bug also.
> 
>> Besides Native Windows, what OSes (that GEOS is used on) does not have
>> Bash available? As far as I know, it's available on most Linux
>> distributions, all recent Solaris and macOS, and even some Windows. I
>> can't think of any other shell that is more common.
> 
> The shell that is more common is the one required by POSIX: /bin/sh,
> having the behaviour specified by POSIX.   Bash either conforms to POSIX
> or is close enough, so code written for POSIX will work fine with bash.  
> 
> None of the BSDs have bash by default.  When it is present, via ports,
> pkgsrc, etc., it's not in /bin.  On NetBSD, it's in /usr/pkg/bin/bash.
> People use it for their login shell.  I do too - I'm not a bash hater,
> but object to it for programming use.  It's enormous, and is one
> particular implementation among many.  I view it as personal choice to
> use it for interactive use, and not appropriate for scripting.
> 
> The fact that /bin/bash does not exist on *BSD, and probably other
> places, prompted my question about looking for it and substituting the
> path.  Expecting bash to be in /bin/bash is just not a valid assumption.

Yeah, and with Apple changing the default shell in OSX, this only gets worse not better over time… 
Could follow the pgsql project and just rewrite the thing (the config program) in C and be done with it…
P

> 
> 
> So, given that there seems to be a way to do this without introducing a
> dependenchy on bash, I'd like to see this backed out.
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From gdt at lexort.com  Tue Feb 18 10:14:53 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 13:14:53 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <965DB781-99B5-4D7B-B5EA-41B4C59AB0DD@cleverelephant.ca> (Paul
 Ramsey's message of "Tue, 18 Feb 2020 09:27:12 -0800")
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
 <965DB781-99B5-4D7B-B5EA-41B4C59AB0DD@cleverelephant.ca>
Message-ID: <rmi1rqrbw4i.fsf@s1.lexort.com>

Paul Ramsey <pramsey at cleverelephant.ca> writes:

> Yeah, and with Apple changing the default shell in OSX, this only gets worse not better over time… 
> Could follow the pgsql project and just rewrite the thing (the config program) in C and be done with it…

Or, perhaps generate a pkgconfig file and just get rid of geos-config?
There is some one-time pain, but it seems that hand-written foo-config
is no longer the preferred approach.

From pramsey at cleverelephant.ca  Tue Feb 18 10:58:09 2020
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 18 Feb 2020 10:58:09 -0800
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <rmi1rqrbw4i.fsf@s1.lexort.com>
References: <rmi1rqrbw4i.fsf@s1.lexort.com>
Message-ID: <CCFC61C0-FA9F-4CA8-9C40-AEB8CDFCD31B@cleverelephant.ca>

Pkg config is wonderous but still far from universal 

> On Feb 18, 2020, at 10:14 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> ﻿Paul Ramsey <pramsey at cleverelephant.ca> writes:
> 
>> Yeah, and with Apple changing the default shell in OSX, this only gets worse not better over time… 
>> Could follow the pgsql project and just rewrite the thing (the config program) in C and be done with it…
> 
> Or, perhaps generate a pkgconfig file and just get rid of geos-config?
> There is some one-time pain, but it seems that hand-written foo-config
> is no longer the preferred approach.

From gdt at lexort.com  Tue Feb 18 11:15:26 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 14:15:26 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <CCFC61C0-FA9F-4CA8-9C40-AEB8CDFCD31B@cleverelephant.ca> (Paul
 Ramsey's message of "Tue, 18 Feb 2020 10:58:09 -0800")
References: <rmi1rqrbw4i.fsf@s1.lexort.com>
 <CCFC61C0-FA9F-4CA8-9C40-AEB8CDFCD31B@cleverelephant.ca>
Message-ID: <rmir1yraer5.fsf@s1.lexort.com>

Paul Ramsey <pramsey at cleverelephant.ca> writes:

> Pkg config is wonderous but still far from universal 

Interesting.  As a packager, I see a vast number of things using it, and
thus a system where it isn't available as a build dependency would seem
very difficult to deal with in general.  I would not have suggested it
if I thought anyplace would have trouble with that (except that I don't
pay attention to Windows at all).

On my desktop there are 557 .pc files installed from pkgsrc, 9 from the
base system, and 127 from pkgsrc.  Geo-examples include proj, gdal and
spatialite.



From lr at pcorp.us  Tue Feb 18 11:58:51 2020
From: lr at pcorp.us (Regina Obe)
Date: Tue, 18 Feb 2020 14:58:51 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool
	for	consistency
In-Reply-To: <rmir1yraer5.fsf@s1.lexort.com>
References: <rmi1rqrbw4i.fsf@s1.lexort.com>
 <CCFC61C0-FA9F-4CA8-9C40-AEB8CDFCD31B@cleverelephant.ca>
 <rmir1yraer5.fsf@s1.lexort.com>
Message-ID: <001201d5e695$d7fd8790$87f896b0$@pcorp.us>

> Paul Ramsey <pramsey at cleverelephant.ca> writes:
> 
> > Pkg config is wonderous but still far from universal
> 
> Greg Troxel  writes:
> Interesting.  As a packager, I see a vast number of things using it, and thus a
> system where it isn't available as a build dependency would seem very
> difficult to deal with in general.  I would not have suggested it if I thought
> anyplace would have trouble with that (except that I don't pay attention to
> Windows at all).
> 
> On my desktop there are 557 .pc files installed from pkgsrc, 9 from the base
> system, and 127 from pkgsrc.  Geo-examples include proj, gdal and spatialite.
> 

I think on visual studio pkg is kinda supported but not out of the box.  Someone who uses VS can confirm that.
Can CMake always use pkg or is it even relevant since CMake we have a separate chain?  For Windows build, we require CMake now anyway -- so it would then be a "If CMake supports it on windows we can do it"?

On mingw/msys2 which I use for windows building -  pkg-config is well supported. So fine with me.

That said even if we did go down the path of pkgsrc I think we need to support geos-config for a couple of minor versions to give libraries that depend on GEOS time to change.
For example PostGIS expects a geos-config file.  So we'd have to change all supported versions to allow .pc for geos.

Or am I missing something here?

Speaking of reverting the last change that started this whole discussion -- does anyone have thoughts on alternative to printf for sh?
I would like to keep the intent if possible without causing backward compatibility issues.

I assume these are the sections that would need reverting.

https://git.osgeo.org/gitea/geos/geos/pulls/99.diff  - in the tools/geos-config.cmake #!/bin/sh

index 24a5725..abef1e3 100644
--- a/tools/geos-config.cmake
+++ b/tools/geos-config.cmake
@@ -1,12 +1,12 @@
-#!/bin/sh
+#!/bin/bash -e
 
-prefix=@CMAKE_INSTALL_PREFIX@
-exec_prefix=@CMAKE_INSTALL_PREFIX@/bin
-libdir=@CMAKE_INSTALL_PREFIX@/lib
+# escape path
+prefix=$(printf %q "@CMAKE_INSTALL_PREFIX@")
+libdir=${prefix}/lib

and tools/geos-config.in

--- a/tools/geos-config.in
+++ b/tools/geos-config.in
@@ -1,11 +1,12 @@
-#!/bin/sh
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
+#!/bin/bash -e
+
+# escape paths
+prefix=$(printf %q "@prefix@")
+libdir=$(printf %q "@libdir@")


Thanks,
Regina







From mwtoews at gmail.com  Tue Feb 18 12:00:17 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Wed, 19 Feb 2020 09:00:17 +1300
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <rmipnecdlzf.fsf@s1.lexort.com>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
Message-ID: <CAM2FmMr7BM+msXMwA1QK3jS1hrhUoS+P0WREtLvWGamps9VN4A@mail.gmail.com>

On Wed, 19 Feb 2020 at 03:11, Greg Troxel <gdt at lexort.com> wrote:
> First, to me requiring bash is worse than telling people not to do
> ridiculous things like putting spaces in pathnames :-)  But I realize
> other people think spaces in pathnames is an ok thing.
>
> The right question about tools is not what's typically on Linux but what
> POSIX requires.
>
> In searching for the POSIX printf spec, I found this post about escaping
> spaces in a portable manner.
>
>   https://stackoverflow.com/questions/12162010/posix-sh-equivalent-for-bash-s-printf-q
>
> The specs at opengroup.org seem hard to deal with today - not sure if
> they changed - but I found this POSIX printf description:
>
>   https://www.unix.com/man-page/POSIX/1posix/printf/

Thanks for the resources!

> > Currently, other Bash scripts are present in tools/ci/ but these are
> > not installed with GEOS.
>
> ci tools are quite a different story than a requirement for regular
> installs, although I see using bash there (vs /bin/sh) as a bug also.

I'll consider going over these to see if they can be POSIX /bin/sh

> > Besides Native Windows, what OSes (that GEOS is used on) does not have
> > Bash available?
>
> None of the BSDs have bash by default.  When it is present, via ports,
> pkgsrc, etc., it's not in /bin.  On NetBSD, it's in /usr/pkg/bin/bash.
> People use it for their login shell.  I do too - I'm not a bash hater,
> but object to it for programming use.  It's enormous, and is one
> particular implementation among many.  I view it as personal choice to
> use it for interactive use, and not appropriate for scripting.
>
> The fact that /bin/bash does not exist on *BSD, and probably other
> places, prompted my question about looking for it and substituting the
> path.  Expecting bash to be in /bin/bash is just not a valid assumption.
>
> So, given that there seems to be a way to do this without introducing a
> dependenchy on bash, I'd like to see this backed out.

Aha, so there are some that will be alienated, which I agree is a bad
situation, so I'll submit a PR to restore back to #!/bin/sh

I'll remove printf %q altogether and simply insert an escaped path to
the script. I'll probably only do this with CMake, since that's the
only install solution that supports spaces.

From gdt at lexort.com  Tue Feb 18 12:07:52 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 15:07:52 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool
	for	consistency
In-Reply-To: <001201d5e695$d7fd8790$87f896b0$@pcorp.us> (Regina Obe's message
 of "Tue, 18 Feb 2020 14:58:51 -0500")
References: <rmi1rqrbw4i.fsf@s1.lexort.com>
 <CCFC61C0-FA9F-4CA8-9C40-AEB8CDFCD31B@cleverelephant.ca>
 <rmir1yraer5.fsf@s1.lexort.com>
 <001201d5e695$d7fd8790$87f896b0$@pcorp.us>
Message-ID: <rmi8skzacbr.fsf@s1.lexort.com>

This seems to explain how to accomodate spaces in pathnames and escaping
them, sticking to POSIX

  https://stackoverflow.com/questions/12162010/posix-sh-equivalent-for-bash-s-printf-q

cmake is very much set up to use pkg-config; it has become the normal
way by which build systems query how to link to dependency packages.  I
don't think it has anything to do with Visual Studio in a cmake build.
I don't know anything about cmake on windows, but it doesn't make sense
that this would be trouble since it is so pervasive.  But I could be off.

  That said even if we did go down the path of pkgsrc I think we need to
  support geos-config for a couple of minor versions to give libraries
  that depend on GEOS time to change.  For example PostGIS expects a
  geos-config file.  So we'd have to change all supported versions to
  allow .pc for geos.

(pkg-config not pkgsrc, assuming word-o).  Yes, would need some compat
and switchover.  Many programs have moved from foo-config to a .pc over
the years.  On my system I have only 65 foo-config programs, compared to
to 557 pkgconfig files (both in /usr/pkg, so that is an apples to apples
comparison).

I am pretty sure there is an idiom which looks like

  try to find geos via pc
  if not, try geos-config

at least in autoconf that was a fairly normal thing to do for a while.

I will observe that a strategy of:

   add pkgconfig more or less now

   decline to worry about spaces in prefix in geos-config (tell people
   that want to put spaces in pathnames that to use pkgconfig ;-)

seems reasonable to me.   But I have no objection to accomodating spaces
if it doesn't add a bash or other dependency.

From gdt at lexort.com  Tue Feb 18 12:24:36 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 15:24:36 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool
	for	consistency
In-Reply-To: <001201d5e695$d7fd8790$87f896b0$@pcorp.us> (Regina Obe's message
 of "Tue, 18 Feb 2020 14:58:51 -0500")
References: <rmi1rqrbw4i.fsf@s1.lexort.com>
 <CCFC61C0-FA9F-4CA8-9C40-AEB8CDFCD31B@cleverelephant.ca>
 <rmir1yraer5.fsf@s1.lexort.com>
 <001201d5e695$d7fd8790$87f896b0$@pcorp.us>
Message-ID: <rmi4kvnabjv.fsf@s1.lexort.com>

"Regina Obe" <lr at pcorp.us> writes:

> Speaking of reverting the last change that started this whole
> discussion -- does anyone have thoughts on alternative to printf for
> sh?  I would like to keep the intent if possible without causing
> backward compatibility issues.
>
> I assume these are the sections that would need reverting.
>
> https://git.osgeo.org/gitea/geos/geos/pulls/99.diff  - in the tools/geos-config.cmake #!/bin/sh
>
> index 24a5725..abef1e3 100644
> --- a/tools/geos-config.cmake
> +++ b/tools/geos-config.cmake
> @@ -1,12 +1,12 @@
> -#!/bin/sh
> +#!/bin/bash -e
>  
> -prefix=@CMAKE_INSTALL_PREFIX@
> -exec_prefix=@CMAKE_INSTALL_PREFIX@/bin
> -libdir=@CMAKE_INSTALL_PREFIX@/lib
> +# escape path
> +prefix=$(printf %q "@CMAKE_INSTALL_PREFIX@")
> +libdir=${prefix}/lib
>
> and tools/geos-config.in
>
> --- a/tools/geos-config.in
> +++ b/tools/geos-config.in
> @@ -1,11 +1,12 @@
> -#!/bin/sh
> -prefix=@prefix@
> -exec_prefix=@exec_prefix@
> -libdir=@libdir@
> +#!/bin/bash -e
> +
> +# escape paths
> +prefix=$(printf %q "@prefix@")
> +libdir=$(printf %q "@libdir@")

So assigning

prefix=@prefix@

works perfectly fine.  The problem is when that is printed later.

If it's just space we are worried about, one could basically printf into
sed to change space to "\ ", and I think that's what the stack overflow
suggestion is doing.

The basic problem is that the build ecosystems assume that one can use
space to tokenize arguments.  That is indeed the ancient Unix tradition,
and fighting that leads to lots of pain with quoting.

There's another problem here, which is that inserting \ for quoting is
presuming that the output of geos-config is going to be interpreted by a
shell, rather than taken as is and used to build a command line.  I
suppose there is that implication because there are multiiple arguments
separated by a space.  One could argue that the interface is space
separated arguments, not shell language.  So overall I see allowing
spaces in prefix as heading off into not-well-defined behavior.



From gdt at lexort.com  Tue Feb 18 12:28:42 2020
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 18 Feb 2020 15:28:42 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <CAM2FmMr7BM+msXMwA1QK3jS1hrhUoS+P0WREtLvWGamps9VN4A@mail.gmail.com>
 (Mike Taves's message of "Wed, 19 Feb 2020 09:00:17 +1300")
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
 <CAM2FmMr7BM+msXMwA1QK3jS1hrhUoS+P0WREtLvWGamps9VN4A@mail.gmail.com>
Message-ID: <rmizhdf8wsl.fsf@s1.lexort.com>

Mike Taves <mwtoews at gmail.com> writes:

> On Wed, 19 Feb 2020 at 03:11, Greg Troxel <gdt at lexort.com> wrote:
>> In searching for the POSIX printf spec, I found this post about escaping
>> spaces in a portable manner.
>>
>>   https://stackoverflow.com/questions/12162010/posix-sh-equivalent-for-bash-s-printf-q
>>
>> The specs at opengroup.org seem hard to deal with today - not sure if
>> they changed - but I found this POSIX printf description:
>>
>>   https://www.unix.com/man-page/POSIX/1posix/printf/
>
> Thanks for the resources!

Thank you for listening (seriously).  We are, amusingly enough, moving
to a point where there is an assumption of all linux, much like the old
days when it was assumed all was windows.

>> > Currently, other Bash scripts are present in tools/ci/ but these are
>> > not installed with GEOS.
>>
>> ci tools are quite a different story than a requirement for regular
>> installs, although I see using bash there (vs /bin/sh) as a bug also.
>
> I'll consider going over these to see if they can be POSIX /bin/sh

Thanks - I don't think that's nearly as big a deal, but in my experience
dealing with packaging I have found that many uses of bash were not
actually necessary or very easy to avoid.  One common issue is using ==
in test, when POSIX specifies (and Bourne shells always were) just =.

>> None of the BSDs have bash by default.  When it is present, via ports,
>> pkgsrc, etc., it's not in /bin.  On NetBSD, it's in /usr/pkg/bin/bash.
>> People use it for their login shell.  I do too - I'm not a bash hater,
>> but object to it for programming use.  It's enormous, and is one
>> particular implementation among many.  I view it as personal choice to
>> use it for interactive use, and not appropriate for scripting.
>>
>> The fact that /bin/bash does not exist on *BSD, and probably other
>> places, prompted my question about looking for it and substituting the
>> path.  Expecting bash to be in /bin/bash is just not a valid assumption.
>>
>> So, given that there seems to be a way to do this without introducing a
>> dependenchy on bash, I'd like to see this backed out.
>
> Aha, so there are some that will be alienated, which I agree is a bad
> situation, so I'll submit a PR to restore back to #!/bin/sh

Great, thanks.

> I'll remove printf %q altogether and simply insert an escaped path to
> the script. I'll probably only do this with CMake, since that's the
> only install solution that supports spaces.

I didn't realize autoconf flat-out objected to spaces, but it is not
surprising since in the old-school command line tradition spaces is
files are somewhere between bizarre and unthinkable.

Sounds good to just escape spaces for cmake.

From mwtoews at gmail.com  Tue Feb 18 12:39:44 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Wed, 19 Feb 2020 09:39:44 +1300
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <rmizhdf8wsl.fsf@s1.lexort.com>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
 <CAM2FmMr7BM+msXMwA1QK3jS1hrhUoS+P0WREtLvWGamps9VN4A@mail.gmail.com>
 <rmizhdf8wsl.fsf@s1.lexort.com>
Message-ID: <CAM2FmMpZMHfM_P4DKWq4L0-MjPAKwu-sFAdzpF3eShrWL7GwGQ@mail.gmail.com>

On Wed, 19 Feb 2020 at 09:28, Greg Troxel <gdt at lexort.com> wrote:
> > Aha, so there are some that will be alienated, which I agree is a bad
> > situation, so I'll submit a PR to restore back to #!/bin/sh
>
> Great, thanks.

See/review https://git.osgeo.org/gitea/geos/geos/pulls/100

however, this only considers escaping spaces for CMake's install. I'm
less familiar on how Autotools could preprocess a similar escaped
version with sed, but as I mentioned previously other fixes would be
required to get Autotools to support prefixes with spaces.

From mwtoews at gmail.com  Tue Feb 18 15:04:49 2020
From: mwtoews at gmail.com (Mike Taves)
Date: Wed, 19 Feb 2020 12:04:49 +1300
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <rmizhdf8wsl.fsf@s1.lexort.com>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
 <CAM2FmMr7BM+msXMwA1QK3jS1hrhUoS+P0WREtLvWGamps9VN4A@mail.gmail.com>
 <rmizhdf8wsl.fsf@s1.lexort.com>
Message-ID: <CAM2FmMrKsge=+NeD95BEDU9snagEr050q2hA5BKCYprLFyqSQw@mail.gmail.com>

On Wed, 19 Feb 2020 at 09:28, Greg Troxel <gdt at lexort.com> wrote:
> >> > Currently, other Bash scripts are present in tools/ci/ but these are
> >> > not installed with GEOS.
> >>
> >> ci tools are quite a different story than a requirement for regular
> >> installs, although I see using bash there (vs /bin/sh) as a bug also.
> >
> > I'll consider going over these to see if they can be POSIX /bin/sh
>
> Thanks - I don't think that's nearly as big a deal, but in my experience
> dealing with packaging I have found that many uses of bash were not
> actually necessary or very easy to avoid.  One common issue is using ==
> in test, when POSIX specifies (and Bourne shells always were) just =.

See also https://git.osgeo.org/gitea/geos/geos/pulls/101
which is low priority, considering that I'm certain that most
environment that use /tools/ci have Bash, and script_cmake.sh has an
external dependency on Bash to call https://codecov.io/bash which
cannot be avoided.

From strk at kbt.io  Tue Feb 18 23:23:51 2020
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 19 Feb 2020 08:23:51 +0100
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
 consistency
In-Reply-To: <CAM2FmMqCXhYqTE1UxvofqmTmGJ7Xp0OfsL0NxkWGK6dbO07Oxg@mail.gmail.com>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <20200218072200.GB4313@liz>
 <CAM2FmMqCXhYqTE1UxvofqmTmGJ7Xp0OfsL0NxkWGK6dbO07Oxg@mail.gmail.com>
Message-ID: <20200219072351.GA4256@liz>

On Tue, Feb 18, 2020 at 10:16:38PM +1300, Mike Taves wrote:
> On Tue, 18 Feb 2020 at 20:22, Sandro Santilli <strk at kbt.io> wrote:
> > > properly escape a path. While I see there is also /usr/bin/printf I'm
> > > not sure how common or standard this tool is (my tests with /bin/sh
> > > didn't go well, so I opted to switch to Bash for reliability).
> >
> > GNU coreutils "printf" works fine here:
> >
> >   [strk at liz:~] /usr/bin/printf "%q\n" "space 'quote' and \"doublequote\""
> >   'space '\''quote'\'' and "doublequote"'
> >   [strk at liz:~] /usr/bin/printf  --version | head -1
> >   printf (GNU coreutils) 8.28
> 
> The printf function in Bash has supported the %q directive for much longer
> https://stackoverflow.com/a/26069697
> https://web.archive.org/web/20031119043100/http://www.gnu.org/software/bash/manual/bashref.html
> 
> whereas the %q directive for /usr/bin/printf was introduced a few
> years ago, and seems to produce a different output, for example having
> a single quotation mark on either end of the above example. Bash's
> printf does not add single quotation marks to the output, as it is in
> a format that can be reused as shell input.

Do you have a use case for avoiding the single quotation mark from the
output of geos-config ?

Few-years-ago dependency could be fine, given GEOS requires C++10 now,
or we could just use quotes and allow for spaces in path names (while
still forbidding quotes and dollars etc. ?)

Do you have examples of paths you need to support ?

--strk;

From geos-trac at osgeo.org  Tue Feb 18 23:37:03 2020
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 19 Feb 2020 07:37:03 -0000
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
Message-ID: <057.e99fb127683bb5fc04326cc764f16152@osgeo.org>

#1015: Update geos-config tool for consistency
-----------------------------------+---------------------------
 Reporter:  robe                   |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:  3.9.0
Component:  Build/Install (cmake)  |     Version:  master
 Severity:  Unassigned             |  Resolution:  fixed
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by Sandro Santilli <strk@…>):

 In [changeset:"c263a0f712917fc523a3d30e00143bd0835ee744/git" c263a0f/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="c263a0f712917fc523a3d30e00143bd0835ee744"
 Recover POSIX compliancy for geos-config, and fix exec_prefix

 References #1015
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1015#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Tue Feb 18 23:37:30 2020
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 19 Feb 2020 08:37:30 +0100
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
 consistency
In-Reply-To: <965DB781-99B5-4D7B-B5EA-41B4C59AB0DD@cleverelephant.ca>
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
 <965DB781-99B5-4D7B-B5EA-41B4C59AB0DD@cleverelephant.ca>
Message-ID: <20200219073730.GB4256@liz>

On Tue, Feb 18, 2020 at 09:27:12AM -0800, Paul Ramsey wrote:

> Could follow the pgsql project and just rewrite the thing (the config program) in C and be done with it…

Escaping can also be done in POSIX shell, not a big deal.
Let's just understand what we really need. For instance,
how do we want the output of `geos-config --libs` look like,
when there's a space in the path ?

      0. -L/usr/local silly/lib -lgeos-3.9.0
      1. -L/usr/local\ silly/lib -lgeos-3.9.0
      2. -L"/usr/local silly/lib" -lgeos-3.9.0
      3. -L'/usr/local silly/lib' -lgeos-3.9.0

We got 0 before the change...

With c263a0f7 I went with option 1, and restored proper output in
presence of an exec_prefix.

--strk;

From gdt at lexort.com  Wed Feb 19 06:09:01 2020
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 19 Feb 2020 09:09:01 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <20200219073730.GB4256@liz> (Sandro Santilli's message of "Wed,
 19 Feb 2020 08:37:30 +0100")
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <rmipnecdlzf.fsf@s1.lexort.com>
 <965DB781-99B5-4D7B-B5EA-41B4C59AB0DD@cleverelephant.ca>
 <20200219073730.GB4256@liz>
Message-ID: <rmi4kvm7jpe.fsf@s1.lexort.com>

Sandro Santilli <strk at kbt.io> writes:

> Escaping can also be done in POSIX shell, not a big deal.
> Let's just understand what we really need. For instance,
> how do we want the output of `geos-config --libs` look like,
> when there's a space in the path ?
>
>       0. -L/usr/local silly/lib -lgeos-3.9.0
>       1. -L/usr/local\ silly/lib -lgeos-3.9.0
>       2. -L"/usr/local silly/lib" -lgeos-3.9.0
>       3. -L'/usr/local silly/lib' -lgeos-3.9.0
>
> We got 0 before the change...
>
> With c263a0f7 I went with option 1, and restored proper output in
> presence of an exec_prefix.

I think 1 is reasonable.   I am inclined to say: let's call it a day and
wait for an actual bug report from an actual user (not a contrived test
case) to address any further nonstandard characters in prefixes.   This
really feels like a non-problem to me, at least once spaces are handled.

From gdt at lexort.com  Wed Feb 19 06:14:58 2020
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 19 Feb 2020 09:14:58 -0500
Subject: [geos-devel] [GEOS] #1015: Update geos-config tool for
	consistency
In-Reply-To: <20200219072351.GA4256@liz> (Sandro Santilli's message of "Wed,
 19 Feb 2020 08:23:51 +0100")
References: <042.add3a732ee5a36fcd4fcf5ed86458b11@osgeo.org>
 <rmir1ysg3cw.fsf@s1.lexort.com>
 <CAM2FmMpKRmzM4xrS_9fT0upVsAeaSeZYJJ8RbM7BWtycukx+Eg@mail.gmail.com>
 <20200218072200.GB4313@liz>
 <CAM2FmMqCXhYqTE1UxvofqmTmGJ7Xp0OfsL0NxkWGK6dbO07Oxg@mail.gmail.com>
 <20200219072351.GA4256@liz>
Message-ID: <rmizhde64v1.fsf@s1.lexort.com>

Sandro Santilli <strk at kbt.io> writes:

> Few-years-ago dependency could be fine, given GEOS requires C++10 now,
> or we could just use quotes and allow for spaces in path names (while
> still forbidding quotes and dollars etc. ?)

(I realize this is moot with the simple space escaping you just added.  Yay!)


If you mean GNU Coreutils printf as "few-years-ago dependency", I don't
follow.  That is typical on GNU/Linux, but on BSD there is a different
/usr/bin/printf which lacks %q but I believe conforms to POSIX.

(As an aside, I think it's often not a good thing for programs that are
required by POSIX to add extensions; that leads to people writing
nonportable code.  The poster child of this is bash and test ==.)


