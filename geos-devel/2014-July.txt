From lmagniez at articque.com  Tue Jul  1 00:36:51 2014
From: lmagniez at articque.com (lmagniez)
Date: Tue, 1 Jul 2014 00:36:51 -0700 (PDT)
Subject: [geos-devel] Call Buffer on Geometry throws randomly
 AccessViolationException (in parallel use)
Message-ID: <1404200211843-5148932.post@n6.nabble.com>

Hi,

I use GDAL 1.11 (with Geos 3.4) with C# wrapper.

My C# code below :

using System;
using System.Collections.Generic;
using OSGeo.OGR;
using System.ComponentModel;

namespace GDAL_mutlithread
{
  class Program
  {
    static void Main(string[] args)
    {
      // create backgroundWorkers to execute code in parallel
      List<BackgroundWorker> bws = new List<BackgroundWorker>();
      // 100 tasks in parallel
      for (int idx = 0; idx < 100; idx++)
      {
        BackgroundWorker bw = new BackgroundWorker();
        bws.Add(bw);
        bw.DoWork += new DoWorkEventHandler(bw_DoWork);
        bw.RunWorkerAsync(idx);
      }
      Console.ReadKey();
    }

    private static void bw_DoWork(object sender, DoWorkEventArgs e)
    {
      // my polygon as WKT format
      string poly1 = "POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))";
      // create Geometry object
      Geometry geom1 = OSGeo.OGR.Ogr.CreateGeometryFromWkt(ref poly1, null);
      // get Buffer
      for (int idx = 0; idx < 100; idx++)
      {
        geom1.Buffer(0, 1);
        // throws randomly Exception 
        // ==> An unhandled exception of type
'System.AccessViolationException' occurred in ogr_csharp.dll
      }
    }
  }
}

The Buffer function can't be called in parallel ?

Regards




--
View this message in context: http://osgeo-org.1560.x6.nabble.com/Call-Buffer-on-Geometry-throws-randomly-AccessViolationException-in-parallel-use-tp5148932.html
Sent from the GEOS Developers mailing list archive at Nabble.com.

From geos-trac at osgeo.org  Wed Jul  2 07:47:40 2014
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 02 Jul 2014 14:47:40 -0000
Subject: [geos-devel] [GEOS] #696: ST_FlipCoordinates bug
Message-ID: <052.72c11aac5e69734b80a93d603bb2f40f@osgeo.org>

#696: ST_FlipCoordinates bug
--------------------------+-------------------------------------------------
 Reporter:  costaeverton  |       Owner:  geos-devel@?              
     Type:  defect        |      Status:  new                       
 Priority:  major         |   Milestone:  3.4.3                     
Component:  Default       |     Version:  3.4.2                     
 Severity:  Unassigned    |    Keywords:  ST_FlipCoordinates bug    
--------------------------+-------------------------------------------------
 When I use the ST_FlipCoordinates the coordinates are flipped and applied
 in the data base.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/696>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Jul  2 09:26:21 2014
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 02 Jul 2014 16:26:21 -0000
Subject: [geos-devel] [GEOS] #696: ST_FlipCoordinates bug
In-Reply-To: <052.72c11aac5e69734b80a93d603bb2f40f@osgeo.org>
References: <052.72c11aac5e69734b80a93d603bb2f40f@osgeo.org>
Message-ID: <061.98bff3793c30457da3c2002bd40ee41f@osgeo.org>

#696: ST_FlipCoordinates bug
------------------------------------+---------------------------------------
 Reporter:  costaeverton            |        Owner:  geos-devel@?              
     Type:  defect                  |       Status:  closed                    
 Priority:  major                   |    Milestone:  3.4.3                     
Component:  Default                 |      Version:  3.4.2                     
 Severity:  Unassigned              |   Resolution:  duplicate                 
 Keywords:  ST_FlipCoordinates bug  |  
------------------------------------+---------------------------------------
Changes (by costaeverton):

  * status:  new => closed
  * resolution:  => duplicate


-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/696#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mohammedrashadkm at gmail.com  Thu Jul  3 00:56:43 2014
From: mohammedrashadkm at gmail.com (Rashad M)
Date: Thu, 3 Jul 2014 09:56:43 +0200
Subject: [geos-devel] regarding GEOS C++ API in ThirdParty
Message-ID: <CANNqv9ezE0Hq7tvJYvg7ABeUWAgCsokCXpfO1TQVUu3SuCTSMA@mail.gmail.com>

Hi all,

I have some questions regarding GEOS C++ API.  From readme[1],
 GEOS C++ API is deprecated and not recommended for use in third party
libraries. But most of examples and test are still in C++ and C++ api still
exists and used in tests. The reason for this is goes itself can use c++
interface but I want to is that the only reason for keeping c++ interface?

If a third party already uses C++ interface is it recommended to move to C
API?

Lastly if there is a migration guide that must be read before changing to C
API?



[1] https://github.com/libgeos/libgeos

""


The C libary uses the C++ interface, but the
C library follows normal ABI-change-sensitive versioning, so programs
that link only against the C library should work without relinking
when geos is upgraded.)

""

-- 
Regards,
   Rashad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20140703/0c797eb7/attachment.html>

From giohappy at gmail.com  Fri Jul  4 08:08:04 2014
From: giohappy at gmail.com (G. Allegri)
Date: Fri, 4 Jul 2014 17:08:04 +0200
Subject: [geos-devel] GEOSDiffernce vs GEOSIntersection complexity?
Message-ID: <CAB4g1=za3cjkGO+Zg5J06Yx6yN1Qh1uFiiCLvGo-nAMtCx+6dw@mail.gmail.com>

I'm trying to understand why the two tools in QGIS using the respective
functions have so much differnce in execution times.

I've made the two tools as similar as possible, to have the GEOS calls as
the only difference. The execution time differs of a copule of magnitude of
orders. I wonder if the two overlay operations, on the GEOS side, are so
differnt to justify such a difference on the execution time. At first sight
they appeared to be similar from the point of view of the geometrical
operations involved in the computation, aren't they?

Giovanni

-- 
Giovanni Allegri
http://about.me/giovanniallegri
Twitter: https://twitter.com/_giohappy_
blog: http://blog.spaziogis.it
GEO+ geomatica in Italia http://bit.ly/GEOplus
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20140704/8cca6845/attachment.html>

From strk at keybit.net  Fri Jul  4 09:15:00 2014
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 4 Jul 2014 18:15:00 +0200
Subject: [geos-devel] regarding GEOS C++ API in ThirdParty
In-Reply-To: <CANNqv9ezE0Hq7tvJYvg7ABeUWAgCsokCXpfO1TQVUu3SuCTSMA@mail.gmail.com>
References: <CANNqv9ezE0Hq7tvJYvg7ABeUWAgCsokCXpfO1TQVUu3SuCTSMA@mail.gmail.com>
Message-ID: <20140704161500.GC16815@localhost>

On Thu, Jul 03, 2014 at 09:56:43AM +0200, Rashad M wrote:
> Hi all,
> 
> I have some questions regarding GEOS C++ API.  From readme[1],
>  GEOS C++ API is deprecated and not recommended for use in third party
> libraries. But most of examples and test are still in C++ and C++ api still
> exists and used in tests. The reason for this is goes itself can use c++
> interface but I want to is that the only reason for keeping c++ interface?
> 
> If a third party already uses C++ interface is it recommended to move to C
> API?

The C++ API will remain, but can be changed between patch-level releases.
If you want your code to survive GEOS upgrades, you should use the C API.

> Lastly if there is a migration guide that must be read before changing to C
> API?

Not really, it's all in the geos_c.h file.

--strk;

From strk at keybit.net  Fri Jul  4 09:17:19 2014
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 4 Jul 2014 18:17:19 +0200
Subject: [geos-devel] GEOSDiffernce vs GEOSIntersection complexity?
In-Reply-To: <CAB4g1=za3cjkGO+Zg5J06Yx6yN1Qh1uFiiCLvGo-nAMtCx+6dw@mail.gmail.com>
References: <CAB4g1=za3cjkGO+Zg5J06Yx6yN1Qh1uFiiCLvGo-nAMtCx+6dw@mail.gmail.com>
Message-ID: <20140704161719.GD16815@localhost>

On Fri, Jul 04, 2014 at 05:08:04PM +0200, G. Allegri wrote:
> I'm trying to understand why the two tools in QGIS using the respective
> functions have so much differnce in execution times.
> 
> I've made the two tools as similar as possible, to have the GEOS calls as
> the only difference. The execution time differs of a copule of magnitude of
> orders. I wonder if the two overlay operations, on the GEOS side, are so
> differnt to justify such a difference on the execution time. At first sight
> they appeared to be similar from the point of view of the geometrical
> operations involved in the computation, aren't they?

They should indeed be of the same complexity, but you might be incurring
in topology exception and thus heuristics to try multiple times after
changing some parameters. Defining GEOS_DEBUG_BINARYOP to 1 in geom/BinaryOp.h
should make such case evident.

Another possible reason would be you're intersecting against a rectangle,
which supposedly has special handling. Are you ?

--strk;

From giohappy at gmail.com  Sat Jul  5 01:29:09 2014
From: giohappy at gmail.com (G. Allegri)
Date: Sat, 5 Jul 2014 10:29:09 +0200
Subject: [geos-devel] GEOSDiffernce vs GEOSIntersection complexity?
In-Reply-To: <CAB4g1=za3cjkGO+Zg5J06Yx6yN1Qh1uFiiCLvGo-nAMtCx+6dw@mail.gmail.com>
References: <CAB4g1=za3cjkGO+Zg5J06Yx6yN1Qh1uFiiCLvGo-nAMtCx+6dw@mail.gmail.com>
Message-ID: <CAB4g1=ztXBW-TMqtC5Sr+ZJFOOjFMuzif2omLM3iTBQLC4pBKw@mail.gmail.com>

As I supposed the problem was on QGIS side. A lot of empty
geometrycollections were returned, which made QGIS write tons of logging.

Sorry for the buzz,
giovanni
Il 04/lug/2014 17:08 "G. Allegri" <giohappy at gmail.com> ha scritto:

> I'm trying to understand why the two tools in QGIS using the respective
> functions have so much differnce in execution times.
>
> I've made the two tools as similar as possible, to have the GEOS calls as
> the only difference. The execution time differs of a copule of magnitude of
> orders. I wonder if the two overlay operations, on the GEOS side, are so
> differnt to justify such a difference on the execution time. At first sight
> they appeared to be similar from the point of view of the geometrical
> operations involved in the computation, aren't they?
>
> Giovanni
>
> --
> Giovanni Allegri
> http://about.me/giovanniallegri
> Twitter: https://twitter.com/_giohappy_
> blog: http://blog.spaziogis.it
> GEO+ geomatica in Italia http://bit.ly/GEOplus
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20140705/c5a544b6/attachment.html>

