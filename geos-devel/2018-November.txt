From pramsey at cleverelephant.ca  Fri Nov  9 14:39:43 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 9 Nov 2018 14:39:43 -0800
Subject: [geos-devel] XML Tests
Message-ID: <CACowWR3WU864LcPg1FZdPy7SAFGNcbj_+FgLErqYPMgm=T807Q@mail.gmail.com>

Couple notes from the world of the XML tester.
I merged Sandro's tinyxml2 change, which seems to work fine.
Running *all* the XML tests on OSX

./XMLTester `find . -name "*.xml" | xargs`

I find that four of the tests fail. Is this unique to me, or common to GEOS
on other platforms? It's possible the make check target does not include
the problematic tests, I haven't done that piece of set-intersection yet.

Speaking of set intersection, the set of tests in JTS differs from the set
in GEOS, and it's not just missing GEOS-specific tests. In some cases,
long-standing tests like TestCentroid.xml has more tests in JTS than in
GEOS. So am I right that an outstanding task is to pull the freshest JTS
tests into the GEOS suite?

Any light you can shed on my darkness will be appreciated!

P
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181109/b9c572e8/attachment.html>

From pramsey at cleverelephant.ca  Fri Nov  9 14:58:55 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 9 Nov 2018 14:58:55 -0800
Subject: [geos-devel] Branch Hygeine
Message-ID: <CACowWR3pRj8Ps69jgdfUoEGm7NL-=3py9hTo7x1HyAgmMNo_+Q@mail.gmail.com>

Is there any reason not to delete the old svn working branches in the main
repo?

https://git.osgeo.org/gitea/geos/geos/branches/

Basically anything that isn't svn-X.Y?
Also, to bestill my OCD heart, may I rename the stable branches from
svn-X.Y to stable-x.y? (Similarly 3.7 would be stable-2.7)
???
P
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181109/51ccf0ba/attachment.html>

From lr at pcorp.us  Sat Nov 10 00:52:00 2018
From: lr at pcorp.us (Regina Obe)
Date: Sat, 10 Nov 2018 03:52:00 -0500
Subject: [geos-devel] Branch Hygeine
In-Reply-To: <CACowWR3pRj8Ps69jgdfUoEGm7NL-=3py9hTo7x1HyAgmMNo_+Q@mail.gmail.com>
References: <CACowWR3pRj8Ps69jgdfUoEGm7NL-=3py9hTo7x1HyAgmMNo_+Q@mail.gmail.com>
Message-ID: <000201d478d2$a5625fe0$f0271fa0$@pcorp.us>

Wow we had an svn trunk cgal 6 years ago.  Yah I would get rid of those, or at least I think I can live with you deleting them.

So +1 there.

 

Stable-2.7?  You mean stable-3.7.

 

Hmm stable-3.7. I recall Mat tried to do this once, rename the old svn branches removing the svn from them,  I forget what happened.  I just remember him reverting right away cause there was something he hadn't thought about would happen happened.

 

It will definitely break some bots, but that's fixable.

 

So I went with I think his plan starting with 3.7, but now you'd like to stick a "stable" in front of it?    I'm not too crazy about sticking the word stable in front.

I'd much prefer nothing in front or putting the stable at the end.

 

 

Here are my lame reasons why:

 

1)      Sorting wise, stable is not guaranteed to be on top, so to an unsuspecting user browsing our branches – cause you know people are into that kind of thing, stable will not be the first thing they see.

They might instead see "feature branches", once someone comes after you and pollutes the space with feature branches again.  Unless we include a rule "No more feature branches" and prevent people from making them.

 

2)      I kind of like the branches starting the same as the tags.  I don't know why.  Guess my own OCD going in a different direction from yours.

So I would prefer just 3.7 or 3.7-stable.  3.7 only has the benefit that, that's what the most recent stable branch is called, so we won't be breaking anyone's code that is pointing at it  if we don't change it.

 

It fills me with great joy, if when I do : git branch -r  I see this:

 

  origin/3.4

  origin/3.5

 origin/3.6

  origin/3.7  (or even origin/3.7-stable)

  origin/HEAD -> origin/master

  :

  origin/svn-trunk-GEOSCoordSeq_createXYZ

  origin/svn-trunk-boost-geometry

  origin/svn-trunk-cascadedbuffer

 

 

Instead of this:

 

  origin/HEAD -> origin/master

  origin/PolygonizerPort

  origin/doubledouble-cgalgorithms

  origin/ext-limited-graph

  origin/make-dist

  origin/master

  origin/mat-dd

  origin/msupport

  origin/mvalues

:

  origin/stable-3.4

  origin/stable-3.5

  origin/stable-3.6

 origin/stable-3.7

  :

  origin/svn-trunk-cascadedbuffer

  origin/svn-trunk-cascadedbuffer-capi

  origin/svn-trunk-cgal

  :

 

 

 

 

 

 

 

 

 

 

 

 

 

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Paul Ramsey
Sent: Friday, November 09, 2018 5:59 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: [geos-devel] Branch Hygeine

 

Is there any reason not to delete the old svn working branches in the main repo?

 

https://git.osgeo.org/gitea/geos/geos/branches/

 

Basically anything that isn't svn-X.Y?

Also, to bestill my OCD heart, may I rename the stable branches from svn-X.Y to stable-x.y? (Similarly 3.7 would be stable-2.7)

???
P

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181110/0c49dacc/attachment-0001.html>

From strk at kbt.io  Sat Nov 10 00:54:44 2018
From: strk at kbt.io (Sandro Santilli)
Date: Sat, 10 Nov 2018 09:54:44 +0100
Subject: [geos-devel] XML Tests
In-Reply-To: <CACowWR3WU864LcPg1FZdPy7SAFGNcbj_+FgLErqYPMgm=T807Q@mail.gmail.com>
References: <CACowWR3WU864LcPg1FZdPy7SAFGNcbj_+FgLErqYPMgm=T807Q@mail.gmail.com>
Message-ID: <20181110085444.GD6340@liz>

On Fri, Nov 09, 2018 at 02:39:43PM -0800, Paul Ramsey wrote:
> Couple notes from the world of the XML tester.
> I merged Sandro's tinyxml2 change, which seems to work fine.
> Running *all* the XML tests on OSX
> 
> ./XMLTester `find . -name "*.xml" | xargs`
> 
> I find that four of the tests fail. Is this unique to me, or common to GEOS
> on other platforms? It's possible the make check target does not include
> the problematic tests, I haven't done that piece of set-intersection yet.
> 
> Speaking of set intersection, the set of tests in JTS differs from the set
> in GEOS, and it's not just missing GEOS-specific tests. In some cases,
> long-standing tests like TestCentroid.xml has more tests in JTS than in
> GEOS. So am I right that an outstanding task is to pull the freshest JTS
> tests into the GEOS suite?

I agree it is good to have a 1:1 matching of JTS tests to GEOS.
I think our testLeaksBig.xml contains many tests that are otherwise
found in other JTS tests, if you port more please remove duplicated
test from that file, which ideally should be gone at the end of
porting.

All tests pass for me, on Ubuntu 18.04.1 LTS (GNU/Linux)

--strk;

From strk at kbt.io  Sat Nov 10 00:56:44 2018
From: strk at kbt.io (Sandro Santilli)
Date: Sat, 10 Nov 2018 09:56:44 +0100
Subject: [geos-devel] Branch Hygeine
In-Reply-To: <000201d478d2$a5625fe0$f0271fa0$@pcorp.us>
References: <CACowWR3pRj8Ps69jgdfUoEGm7NL-=3py9hTo7x1HyAgmMNo_+Q@mail.gmail.com>
 <000201d478d2$a5625fe0$f0271fa0$@pcorp.us>
Message-ID: <20181110085644.GE6340@liz>

On Sat, Nov 10, 2018 at 03:52:00AM -0500, Regina Obe wrote:

> Hmm stable-3.7. I recall Mat tried to do this once, rename the old svn branches removing the svn from them,  I forget what happened.  I just remember him reverting right away cause there was something he hadn't thought about would happen happened.

What happens is that all bots links change, so pages referencing
them (wiki and READMEs) need to be updated

--strk;

From lr at pcorp.us  Sat Nov 10 03:01:05 2018
From: lr at pcorp.us (Regina Obe)
Date: Sat, 10 Nov 2018 06:01:05 -0500
Subject: [geos-devel] Branch Hygeine
In-Reply-To: <20181110085644.GE6340@liz>
References: <CACowWR3pRj8Ps69jgdfUoEGm7NL-=3py9hTo7x1HyAgmMNo_+Q@mail.gmail.com>
 <000201d478d2$a5625fe0$f0271fa0$@pcorp.us> <20181110085644.GE6340@liz>
Message-ID: <000a01d478e4$ae293600$0a7ba200$@pcorp.us>

Sat, Nov 10, 2018 at 03:52:00AM -0500, Regina Obe wrote:
> 
> > Hmm stable-3.7. I recall Mat tried to do this once, rename the old svn
> branches removing the svn from them,  I forget what happened.  I just
> remember him reverting right away cause there was something he hadn't
> thought about would happen happened.
> 
> What happens is that all bots links change, so pages referencing them (wiki
> and READMEs) need to be updated
> 
> --strk;
> _______________________________________________
[Regina Obe] 
I know that happens, but I thought something else happened that was harder to fix.


From dbaston at gmail.com  Sun Nov 11 18:16:39 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Sun, 11 Nov 2018 21:16:39 -0500
Subject: [geos-devel] XML Tests
In-Reply-To: <20181110085444.GD6340@liz>
References: <CACowWR3WU864LcPg1FZdPy7SAFGNcbj_+FgLErqYPMgm=T807Q@mail.gmail.com>
 <20181110085444.GD6340@liz>
Message-ID: <CA+K_q_ra6Ws2HmN9GkL5pG0KZmZHcoTBjTU+i536R4bMj1bmMg@mail.gmail.com>

I get four test failures on Ubuntu 16.04 if I run the tests the way that
Paul is doing it. Paul's command gives four failures in 70 seconds, while
"make check" reports no failures in 7 seconds. Clearly, "make check" isn't
running all of the tests.

The autotools config relies on hardcoded lists of "SAFE_XMLTESTS" and
"FAILING_XMLTESTS" and only runs the "SAFE_XMLTESTS" as part of "make
check." If my counting is right, there are some test files that are neither
listed in SAFE_XMLTESTS nor FAILING_XMLTESTS and are also not run by the
autotools "make check".

The WIP CMake configuration, like Paul's command, uses globbing to find all
of the xml files, and it also fails.

Dan

On Sat, Nov 10, 2018 at 4:16 AM Sandro Santilli <strk at kbt.io> wrote:

> On Fri, Nov 09, 2018 at 02:39:43PM -0800, Paul Ramsey wrote:
> > Couple notes from the world of the XML tester.
> > I merged Sandro's tinyxml2 change, which seems to work fine.
> > Running *all* the XML tests on OSX
> >
> > ./XMLTester `find . -name "*.xml" | xargs`
> >
> > I find that four of the tests fail. Is this unique to me, or common to
> GEOS
> > on other platforms? It's possible the make check target does not include
> > the problematic tests, I haven't done that piece of set-intersection yet.
> >
> > Speaking of set intersection, the set of tests in JTS differs from the
> set
> > in GEOS, and it's not just missing GEOS-specific tests. In some cases,
> > long-standing tests like TestCentroid.xml has more tests in JTS than in
> > GEOS. So am I right that an outstanding task is to pull the freshest JTS
> > tests into the GEOS suite?
>
> I agree it is good to have a 1:1 matching of JTS tests to GEOS.
> I think our testLeaksBig.xml contains many tests that are otherwise
> found in other JTS tests, if you port more please remove duplicated
> test from that file, which ideally should be gone at the end of
> porting.
>
> All tests pass for me, on Ubuntu 18.04.1 LTS (GNU/Linux)
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181111/4b431a84/attachment.html>

From geos-trac at osgeo.org  Sun Nov 11 18:18:04 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 12 Nov 2018 02:18:04 -0000
Subject: [geos-devel] [GEOS] #894: FreeBSD and MacOSX failures on 3.7.0
 - group: geos::geom::CoordinateArraySequenceFactory,
 test: test<1> assertion failed
In-Reply-To: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
References: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
Message-ID: <057.dabdae0cf5806ae9785e76d1c8d21ba4@osgeo.org>

#894: FreeBSD and MacOSX failures on 3.7.0 - group:
geos::geom::CoordinateArraySequenceFactory, test: test<1> assertion failed
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.7.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by dbaston):

 The failing assert is `ensure( nullptr != derived );`

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/894#comment:18>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Thu Nov 15 15:44:39 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 15 Nov 2018 15:44:39 -0800
Subject: [geos-devel] SharePathsOp
Message-ID: <CACowWR0b0f=E0JdC68hqr=n-bSc=YOmO6A9qQ--j5U1Jt588zQ@mail.gmail.com>

Martin, I'm working through upgrading GEOS to support all the tests cases
in the JTS zoo, and in making a change in OverlayOp I have caused a
segfault in SharedPathsOp, which leads me back to the JTS code base and:
there's no SharedPathsOp anymore! Where did it go? What's the history there?

P
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181115/a584dca4/attachment.html>

From mtnclimb at gmail.com  Thu Nov 15 15:49:10 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 15 Nov 2018 15:49:10 -0800
Subject: [geos-devel] SharePathsOp
In-Reply-To: <CACowWR0b0f=E0JdC68hqr=n-bSc=YOmO6A9qQ--j5U1Jt588zQ@mail.gmail.com>
References: <CACowWR0b0f=E0JdC68hqr=n-bSc=YOmO6A9qQ--j5U1Jt588zQ@mail.gmail.com>
Message-ID: <CAK2ens0i2rT3Eu+5TG4DMAtSqzx_RRCZa27QKttXj6P7Lhuh0g@mail.gmail.com>

Never heard of SharedPathsOp.  Is that a GEOS-only thing?

If you want to do some archaeology :)
https://github.com/dr-jts/jts-versions

On Thu, Nov 15, 2018 at 3:44 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Martin, I'm working through upgrading GEOS to support all the tests cases
> in the JTS zoo, and in making a change in OverlayOp I have caused a
> segfault in SharedPathsOp, which leads me back to the JTS code base and:
> there's no SharedPathsOp anymore! Where did it go? What's the history there?
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181115/c8ef0dc6/attachment.html>

From lr at pcorp.us  Thu Nov 15 16:55:28 2018
From: lr at pcorp.us (Regina Obe)
Date: Thu, 15 Nov 2018 19:55:28 -0500
Subject: [geos-devel] SharePathsOp
In-Reply-To: <CAK2ens0i2rT3Eu+5TG4DMAtSqzx_RRCZa27QKttXj6P7Lhuh0g@mail.gmail.com>
References: <CACowWR0b0f=E0JdC68hqr=n-bSc=YOmO6A9qQ--j5U1Jt588zQ@mail.gmail.com>
 <CAK2ens0i2rT3Eu+5TG4DMAtSqzx_RRCZa27QKttXj6P7Lhuh0g@mail.gmail.com>
Message-ID: <003501d47d47$121345f0$3639d1d0$@pcorp.us>

SharePathsOps I think backs this PostGIS function –  

https://postgis.net/docs/manual-2.5/ST_SharedPaths.html

 

So JTS doesn't have such a thing?

 

Could be a Sandro invention.

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Martin Davis
Sent: Thursday, November 15, 2018 6:49 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: Re: [geos-devel] SharePathsOp

 

Never heard of SharedPathsOp.  Is that a GEOS-only thing?

 

If you want to do some archaeology :)  https://github.com/dr-jts/jts-versions

 

On Thu, Nov 15, 2018 at 3:44 PM Paul Ramsey <pramsey at cleverelephant.ca <mailto:pramsey at cleverelephant.ca> > wrote:

Martin, I'm working through upgrading GEOS to support all the tests cases in the JTS zoo, and in making a change in OverlayOp I have caused a segfault in SharedPathsOp, which leads me back to the JTS code base and: there's no SharedPathsOp anymore! Where did it go? What's the history there?

 

P

_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org <mailto:geos-devel at lists.osgeo.org> 
https://lists.osgeo.org/mailman/listinfo/geos-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181115/e27ae1f3/attachment.html>

From mtnclimb at gmail.com  Thu Nov 15 17:01:34 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 15 Nov 2018 17:01:34 -0800
Subject: [geos-devel] SharePathsOp
In-Reply-To: <003501d47d47$121345f0$3639d1d0$@pcorp.us>
References: <CACowWR0b0f=E0JdC68hqr=n-bSc=YOmO6A9qQ--j5U1Jt588zQ@mail.gmail.com>
 <CAK2ens0i2rT3Eu+5TG4DMAtSqzx_RRCZa27QKttXj6P7Lhuh0g@mail.gmail.com>
 <003501d47d47$121345f0$3639d1d0$@pcorp.us>
Message-ID: <CAK2ens1Oz8qKGO65uVptkjWKm67F-mcqNRhPVLb_SEw730SCmQ@mail.gmail.com>

Nope, JTS does not have such a thing...

On Thu, Nov 15, 2018 at 4:55 PM Regina Obe <lr at pcorp.us> wrote:

> SharePathsOps I think backs this PostGIS function –
>
> https://postgis.net/docs/manual-2.5/ST_SharedPaths.html
>
>
>
> So JTS doesn't have such a thing?
>
>
>
> Could be a Sandro invention.
>
>
>
> *From:* geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] *On Behalf
> Of *Martin Davis
> *Sent:* Thursday, November 15, 2018 6:49 PM
> *To:* GEOS Development List <geos-devel at lists.osgeo.org>
> *Subject:* Re: [geos-devel] SharePathsOp
>
>
>
> Never heard of SharedPathsOp.  Is that a GEOS-only thing?
>
>
>
> If you want to do some archaeology :)
> https://github.com/dr-jts/jts-versions
>
>
>
> On Thu, Nov 15, 2018 at 3:44 PM Paul Ramsey <pramsey at cleverelephant.ca>
> wrote:
>
> Martin, I'm working through upgrading GEOS to support all the tests cases
> in the JTS zoo, and in making a change in OverlayOp I have caused a
> segfault in SharedPathsOp, which leads me back to the JTS code base and:
> there's no SharedPathsOp anymore! Where did it go? What's the history there?
>
>
>
> P
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181115/b4a2b788/attachment.html>

From pramsey at cleverelephant.ca  Thu Nov 15 17:36:22 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 15 Nov 2018 17:36:22 -0800
Subject: [geos-devel] SharePathsOp
In-Reply-To: <CAK2ens1Oz8qKGO65uVptkjWKm67F-mcqNRhPVLb_SEw730SCmQ@mail.gmail.com>
References: <CACowWR0b0f=E0JdC68hqr=n-bSc=YOmO6A9qQ--j5U1Jt588zQ@mail.gmail.com>
 <CAK2ens0i2rT3Eu+5TG4DMAtSqzx_RRCZa27QKttXj6P7Lhuh0g@mail.gmail.com>
 <003501d47d47$121345f0$3639d1d0$@pcorp.us>
 <CAK2ens1Oz8qKGO65uVptkjWKm67F-mcqNRhPVLb_SEw730SCmQ@mail.gmail.com>
Message-ID: <CACowWR1EXo=3iT9WDL_ysFMkz84eDc2RuNsV8OY9Qxkbwz9GWg@mail.gmail.com>

Haha, well that explains it :)

On Thu, Nov 15, 2018 at 5:01 PM Martin Davis <mtnclimb at gmail.com> wrote:

> Nope, JTS does not have such a thing...
>
> On Thu, Nov 15, 2018 at 4:55 PM Regina Obe <lr at pcorp.us> wrote:
>
>> SharePathsOps I think backs this PostGIS function –
>>
>> https://postgis.net/docs/manual-2.5/ST_SharedPaths.html
>>
>>
>>
>> So JTS doesn't have such a thing?
>>
>>
>>
>> Could be a Sandro invention.
>>
>>
>>
>> *From:* geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] *On
>> Behalf Of *Martin Davis
>> *Sent:* Thursday, November 15, 2018 6:49 PM
>> *To:* GEOS Development List <geos-devel at lists.osgeo.org>
>> *Subject:* Re: [geos-devel] SharePathsOp
>>
>>
>>
>> Never heard of SharedPathsOp.  Is that a GEOS-only thing?
>>
>>
>>
>> If you want to do some archaeology :)
>> https://github.com/dr-jts/jts-versions
>>
>>
>>
>> On Thu, Nov 15, 2018 at 3:44 PM Paul Ramsey <pramsey at cleverelephant.ca>
>> wrote:
>>
>> Martin, I'm working through upgrading GEOS to support all the tests cases
>> in the JTS zoo, and in making a change in OverlayOp I have caused a
>> segfault in SharedPathsOp, which leads me back to the JTS code base and:
>> there's no SharedPathsOp anymore! Where did it go? What's the history there?
>>
>>
>>
>> P
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181115/a1fa8ffd/attachment-0001.html>

From geos-trac at osgeo.org  Thu Nov 15 19:07:03 2018
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 16 Nov 2018 03:07:03 -0000
Subject: [geos-devel] [GEOS] #919: memory leak in
 geos::index::strtree::SIRtree::insert()
In-Reply-To: <048.5f9a5a4d5bbf84f3c417bffb9a491e8e@osgeo.org>
References: <048.5f9a5a4d5bbf84f3c417bffb9a491e8e@osgeo.org>
Message-ID: <063.3d274bd6be3bd9b984e4f178edae94d3@osgeo.org>

#919: memory leak in geos::index::strtree::SIRtree::insert()
------------------------+----------------------
 Reporter:  basiliscos  |       Owner:  dbaston
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+----------------------
Changes (by dbaston):

 * owner:  geos-devel@… => dbaston


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/919#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Nov 15 19:13:41 2018
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 16 Nov 2018 03:13:41 -0000
Subject: [geos-devel] [GEOS] #894: FreeBSD and MacOSX failures on 3.7.0
 - group: geos::geom::CoordinateArraySequenceFactory,
 test: test<1> assertion failed
In-Reply-To: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
References: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
Message-ID: <057.62582ae5881a9e63a48ddf59997cba18@osgeo.org>

#894: FreeBSD and MacOSX failures on 3.7.0 - group:
geos::geom::CoordinateArraySequenceFactory, test: test<1> assertion failed
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  blocker     |   Milestone:  3.7.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  duplicate
 Keywords:              |
------------------------+---------------------------
Changes (by dbaston):

 * status:  new => closed
 * resolution:   => duplicate


Comment:

 Duplicates #299

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/894#comment:19>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Fri Nov 16 06:06:50 2018
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 16 Nov 2018 15:06:50 +0100
Subject: [geos-devel] SharePathsOp
In-Reply-To: <CACowWR1EXo=3iT9WDL_ysFMkz84eDc2RuNsV8OY9Qxkbwz9GWg@mail.gmail.com>
References: <CACowWR0b0f=E0JdC68hqr=n-bSc=YOmO6A9qQ--j5U1Jt588zQ@mail.gmail.com>
 <CAK2ens0i2rT3Eu+5TG4DMAtSqzx_RRCZa27QKttXj6P7Lhuh0g@mail.gmail.com>
 <003501d47d47$121345f0$3639d1d0$@pcorp.us>
 <CAK2ens1Oz8qKGO65uVptkjWKm67F-mcqNRhPVLb_SEw730SCmQ@mail.gmail.com>
 <CACowWR1EXo=3iT9WDL_ysFMkz84eDc2RuNsV8OY9Qxkbwz9GWg@mail.gmail.com>
Message-ID: <20181116140650.GD5019@liz>

On Thu, Nov 15, 2018 at 05:36:22PM -0800, Paul Ramsey wrote:
> Haha, well that explains it :)

Confirmed, was my invention (funded by Tuscany Region).
I think I leave "Port Info" comments on top of each file
where original work is marked as such, do you see it ?

Speaking of testcases, JTS XML tests often have carriage
returns (or they had them in the SVN version). Other than
those CRs they should be supported verbatim by GEOS
XMLTester. What we do not support are the custom equality
verifiers (would be nice to add)

--strk;

From geos-trac at osgeo.org  Mon Nov 19 16:31:12 2018
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 20 Nov 2018 00:31:12 -0000
Subject: [geos-devel] [GEOS] #912: bintree::Bintree API hides
 implementation and leads to SEGFAULT.
In-Reply-To: <048.6c3257da7647b4fe9e615dd239399d88@osgeo.org>
References: <048.6c3257da7647b4fe9e615dd239399d88@osgeo.org>
Message-ID: <063.3738f064de548ebc7ba2026384856f63@osgeo.org>

#912: bintree::Bintree API hides implementation and leads to SEGFAULT.
------------------------+----------------------
 Reporter:  basiliscos  |       Owner:  dbaston
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+----------------------
Changes (by dbaston):

 * owner:  geos-devel@… => dbaston


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/912#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Wed Nov 28 09:27:07 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 28 Nov 2018 09:27:07 -0800
Subject: [geos-devel] 3.7.1 Release
Message-ID: <CACowWR0=1nYC6APn1E+jpRscEpKfNSmE6jO-zKjv=RANjM3wsg@mail.gmail.com>

Hey, we have a couple crashers and leaks that have been fixed in the last
few months and I'd like to roll out a 3.7.1. Can anyone who does *not* want
me to do that please raise a hand?

Thanks!

P
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181128/187baccf/attachment.html>

From bontepaarden at gmail.com  Wed Nov 28 12:04:04 2018
From: bontepaarden at gmail.com (Paul Meems)
Date: Wed, 28 Nov 2018 21:04:04 +0100
Subject: [geos-devel] geos-devel@lists.osgeo.org
Message-ID: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>

Hi List,

I see PostGIS has
https://postgis.net/docs/manual-1.4/ST_Line_Interpolate_Point.html
I'm assuming it comes from GEOS but I can't find it in the documentation.

Can anybody point me to the GEOS documentation of this method?

Thanks,

Paul Meems
The Netherlands
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181128/f4df53f0/attachment.html>

From dbaston at gmail.com  Wed Nov 28 12:09:26 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Wed, 28 Nov 2018 15:09:26 -0500
Subject: [geos-devel] geos-devel@lists.osgeo.org
In-Reply-To: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>
References: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>
Message-ID: <CA+K_q_ojJdm8PuJdk20AeLiZqivfwBz0Y_xoSs2=FeKKBTM52g@mail.gmail.com>

Hi Paul,

The implementation for ST_LineInterpolatePoint is internal to PostGIS and
does not use GEOS:
https://github.com/postgis/postgis/blob/svn-trunk/liblwgeom/lwline.c#L534

Dan

On Wed, Nov 28, 2018 at 3:04 PM Paul Meems <bontepaarden at gmail.com> wrote:

> Hi List,
>
> I see PostGIS has
> https://postgis.net/docs/manual-1.4/ST_Line_Interpolate_Point.html
> I'm assuming it comes from GEOS but I can't find it in the documentation.
>
> Can anybody point me to the GEOS documentation of this method?
>
> Thanks,
>
> Paul Meems
> The Netherlands
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181128/db2f34d4/attachment.html>

From mtnclimb at gmail.com  Wed Nov 28 12:25:47 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Wed, 28 Nov 2018 12:25:47 -0800
Subject: [geos-devel] geos-devel@lists.osgeo.org
In-Reply-To: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>
References: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>
Message-ID: <CAK2ens03XFZU6fpbrGzMBjGrJsyc3aT9+5Ser=033sVbp7b-yA@mail.gmail.com>

The closest GEOS equivalent would be this:

https://github.com/libgeos/geos/blob/master/src/linearref/LengthIndexedLine.cpp

But note that it only handles 2D lines.

On Wed, Nov 28, 2018 at 12:04 PM Paul Meems <bontepaarden at gmail.com> wrote:

> Hi List,
>
> I see PostGIS has
> https://postgis.net/docs/manual-1.4/ST_Line_Interpolate_Point.html
> I'm assuming it comes from GEOS but I can't find it in the documentation.
>
> Can anybody point me to the GEOS documentation of this method?
>
> Thanks,
>
> Paul Meems
> The Netherlands
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181128/16ac3f0f/attachment.html>

From bontepaarden at gmail.com  Thu Nov 29 00:09:18 2018
From: bontepaarden at gmail.com (Paul Meems)
Date: Thu, 29 Nov 2018 09:09:18 +0100
Subject: [geos-devel] geos-devel@lists.osgeo.org
In-Reply-To: <CAK2ens03XFZU6fpbrGzMBjGrJsyc3aT9+5Ser=033sVbp7b-yA@mail.gmail.com>
References: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>
 <CAK2ens03XFZU6fpbrGzMBjGrJsyc3aT9+5Ser=033sVbp7b-yA@mail.gmail.com>
Message-ID: <CAHNf2YToL31+gXm+_770zGpF4upiC93yn4umHHKAYqXDSNQJ8Q@mail.gmail.com>

Thanks all for your replies.
Too bad this is not a GEOS function because in our project (MapWinGIS) we
already use GEOS.

I will have a look at the suggested code.

Thanks.

Paul

Op wo 28 nov. 2018 om 21:26 schreef Martin Davis <mtnclimb at gmail.com>:

> The closest GEOS equivalent would be this:
>
>
> https://github.com/libgeos/geos/blob/master/src/linearref/LengthIndexedLine.cpp
>
> But note that it only handles 2D lines.
>
> On Wed, Nov 28, 2018 at 12:04 PM Paul Meems <bontepaarden at gmail.com>
> wrote:
>
>> Hi List,
>>
>> I see PostGIS has
>> https://postgis.net/docs/manual-1.4/ST_Line_Interpolate_Point.html
>> I'm assuming it comes from GEOS but I can't find it in the documentation.
>>
>> Can anybody point me to the GEOS documentation of this method?
>>
>> Thanks,
>>
>> Paul Meems
>> The Netherlands
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/953525f3/attachment.html>

From strk at kbt.io  Thu Nov 29 01:21:15 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 29 Nov 2018 10:21:15 +0100
Subject: [geos-devel] 3.7.1 Release
In-Reply-To: <CACowWR0=1nYC6APn1E+jpRscEpKfNSmE6jO-zKjv=RANjM3wsg@mail.gmail.com>
References: <CACowWR0=1nYC6APn1E+jpRscEpKfNSmE6jO-zKjv=RANjM3wsg@mail.gmail.com>
Message-ID: <20181129092115.GB25861@liz>

On Wed, Nov 28, 2018 at 09:27:07AM -0800, Paul Ramsey wrote:
> Hey, we have a couple crashers and leaks that have been fixed in the last
> few months and I'd like to roll out a 3.7.1. Can anyone who does *not* want
> me to do that please raise a hand?

I'm fine with a bugfix release but I might have seen you disabling a test
which started failing, is that what was going on ? Because that'd be
a regression and introducing a regression in a patch-level release
would not be a nice move...

--strk;

From lr at pcorp.us  Thu Nov 29 01:58:28 2018
From: lr at pcorp.us (Regina Obe)
Date: Thu, 29 Nov 2018 04:58:28 -0500
Subject: [geos-devel] 3.7.1 Release
In-Reply-To: <20181129092115.GB25861@liz>
References: <CACowWR0=1nYC6APn1E+jpRscEpKfNSmE6jO-zKjv=RANjM3wsg@mail.gmail.com>
 <20181129092115.GB25861@liz>
Message-ID: <001d01d487ca$143aac00$3cb00400$@pcorp.us>

Which test was that.  Might have been the one that was failing on Clang (FreeBSD and Mac) that I shushed in 3.7.0.

In which case it's just as well its removed.

+1 for release

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Sandro Santilli
> Sent: Thursday, November 29, 2018 4:21 AM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] 3.7.1 Release
> 
> On Wed, Nov 28, 2018 at 09:27:07AM -0800, Paul Ramsey wrote:
> > Hey, we have a couple crashers and leaks that have been fixed in the
> > last few months and I'd like to roll out a 3.7.1. Can anyone who does
> > *not* want me to do that please raise a hand?
> 
> I'm fine with a bugfix release but I might have seen you disabling a test which
> started failing, is that what was going on ? Because that'd be a regression and
> introducing a regression in a patch-level release would not be a nice move...
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From gdt at lexort.com  Thu Nov 29 08:42:39 2018
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 29 Nov 2018 11:42:39 -0500
Subject: [geos-devel] 3.7.1 Release
In-Reply-To: <001d01d487ca$143aac00$3cb00400$@pcorp.us> (Regina Obe's message
 of "Thu, 29 Nov 2018 04:58:28 -0500")
References: <CACowWR0=1nYC6APn1E+jpRscEpKfNSmE6jO-zKjv=RANjM3wsg@mail.gmail.com>
 <20181129092115.GB25861@liz>
 <001d01d487ca$143aac00$3cb00400$@pcorp.us>
Message-ID: <smu5zwf4yyo.fsf@linuxpal.mit.edu>

"Regina Obe" <lr at pcorp.us> writes:

> Which test was that.  Might have been the one that was failing on
> Clang (FreeBSD and Mac) that I shushed in 3.7.0.
>
> In which case it's just as well its removed.

I don't think it's entirely clear that the test is wrong, vs the code,
vs clang.  But maybe it's clear to others and just not to me (which is
ok).

But, I am pretty sure this is not a regression in 3.7.1, but an old
issue that is now better understood than it was.

From paul.doskabouter at gmail.com  Thu Nov 29 10:18:00 2018
From: paul.doskabouter at gmail.com (Paul van der Linden)
Date: Thu, 29 Nov 2018 19:18:00 +0100
Subject: [geos-devel] Possible speed improvement for overlay operations
Message-ID: <CAEC-EqAWyQGPX2Yp4jwvgvefq1+pJXOzHV3hhaFOkuOJdz4+ww@mail.gmail.com>

I'm currently getting familiar with the GEOS code, especially to see if I
can improve the performance, and I saw a potential improvement from a
O(n^2) piece to a O(n*m) with according to my findings a rather small m.

It's in the combination of
SimpleMCSweepLineIntersector::computeIntersections and
SimpleMCSweepLineIntersector::processOverlaps.

For what I can see, (at least in my test case of 2 ordinary polygons
without holes) in processOverlaps, the ev0->edgeSet is not equal to nullptr
and for the rest all events[i]->edgeSet are the same.

So the condition on
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L164
is never true and this whole method is doing nothing but burning cpu cycles.

My proposal involves changes in
SimpleMCSweepLineIntersector::computeIntersections:

One solution is to simply test if all edgeSets are equal and if so, skip
the whole processOverlaps, but that wouldn't help ofcourse in all
situations.
The other solution that I thought of, was to create lists for each
different edgesets and only call processOverlaps for edgeSets other than
the current one (ev @
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L136
).

The latter one probably goes wrong, because I saw that the events are
sorted here
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L113
and probably for a good reason.
Splitting that list into buckets of equal edgeset messes up that order.

Third solution is to come up with some kind of datastructure to get all
events without the ones having edgeset equal to ev, but in the correct
order...

Anyone any ideas on that?

Sidenode: I found that an easy way of testing performance is to get a
couple of very large polygons and put them through the desired algo
(intersect in this case).
Whenever your patience has run out, just press break in the debugger and
see where it stopped...
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/397680cc/attachment.html>

From mtnclimb at gmail.com  Thu Nov 29 11:46:44 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 29 Nov 2018 11:46:44 -0800
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAEC-EqAWyQGPX2Yp4jwvgvefq1+pJXOzHV3hhaFOkuOJdz4+ww@mail.gmail.com>
References: <CAEC-EqAWyQGPX2Yp4jwvgvefq1+pJXOzHV3hhaFOkuOJdz4+ww@mail.gmail.com>
Message-ID: <CAK2ens02STzikt0ee_ukfx3QJCYvSBmczy9o6GPWhyiP7NpO2g@mail.gmail.com>

I don't think this is an accurate analysis of how the Overlay noding works.

In the current JTS/GEOS Overlay algorithm the noding phase works like this:

1. Compute self-intersection nodes for Geometry A
2. Compute self-intersection nodes for Geometry B
3. Compute intersection nodes for Geometry A against Geometry B

In steps 1 and 2 the noder (MCSweepLineIntersector) has to process all
overlaps of all chains, but each step is only processing chains for a
single geometry.  Note that this process is NOT O(n^2), it is much more
performant due to the use of a sweep-line algorithm.   (If it was O(n^2)
overlay would be too slow to be usable..)

In step 3 the noder processes all chains from both geometries, but due to
the previous self-noding it only needs to process overlaps between chains
from different geometries.

Other ideas about performance improvements are welcome.  For instance, I
have had some ideas about only noding geometry in the region of actual
overlap in the case of an intersection computation.  That probably has
implications for robustness, however.  Needs some research...



On Thu, Nov 29, 2018 at 10:18 AM Paul van der Linden <
paul.doskabouter at gmail.com> wrote:

> I'm currently getting familiar with the GEOS code, especially to see if I
> can improve the performance, and I saw a potential improvement from a
> O(n^2) piece to a O(n*m) with according to my findings a rather small m.
>
> It's in the combination of
> SimpleMCSweepLineIntersector::computeIntersections and
> SimpleMCSweepLineIntersector::processOverlaps.
>
> For what I can see, (at least in my test case of 2 ordinary polygons
> without holes) in processOverlaps, the ev0->edgeSet is not equal to nullptr
> and for the rest all events[i]->edgeSet are the same.
>
> So the condition on
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L164
> is never true and this whole method is doing nothing but burning cpu cycles.
>
> My proposal involves changes in
> SimpleMCSweepLineIntersector::computeIntersections:
>
> One solution is to simply test if all edgeSets are equal and if so, skip
> the whole processOverlaps, but that wouldn't help ofcourse in all
> situations.
> The other solution that I thought of, was to create lists for each
> different edgesets and only call processOverlaps for edgeSets other than
> the current one (ev @
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L136
> ).
>
> The latter one probably goes wrong, because I saw that the events are
> sorted here
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L113
> and probably for a good reason.
> Splitting that list into buckets of equal edgeset messes up that order.
>
> Third solution is to come up with some kind of datastructure to get all
> events without the ones having edgeset equal to ev, but in the correct
> order...
>
> Anyone any ideas on that?
>
> Sidenode: I found that an easy way of testing performance is to get a
> couple of very large polygons and put them through the desired algo
> (intersect in this case).
> Whenever your patience has run out, just press break in the debugger and
> see where it stopped...
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/8e9c78b1/attachment.html>

From me at komzpa.net  Thu Nov 29 12:20:18 2018
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Thu, 29 Nov 2018 23:20:18 +0300
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAK2ens02STzikt0ee_ukfx3QJCYvSBmczy9o6GPWhyiP7NpO2g@mail.gmail.com>
References: <CAEC-EqAWyQGPX2Yp4jwvgvefq1+pJXOzHV3hhaFOkuOJdz4+ww@mail.gmail.com>
 <CAK2ens02STzikt0ee_ukfx3QJCYvSBmczy9o6GPWhyiP7NpO2g@mail.gmail.com>
Message-ID: <CAC8Q8tJXnZboc3eiDqQ0cPORXDyMqunkidRKBbEe3QNJCGYGVg@mail.gmail.com>

>
> Other ideas about performance improvements are welcome.  For instance, I
> have had some ideas about only noding geometry in the region of actual
> overlap in the case of an intersection computation.  That probably has
> implications for robustness, however.  Needs some research...
>


I tried to implement this speed up in PostGIS via box clipping.
Current GEOS recangle clipping is unfortunately not robust, but helps quite
a lot when not crashing.

I tried redoing clipping by doing just O(N) clamping to the box. Result
retains many required properties (ie, raycasting will give correct
inside/outside result for it, area is okay) but has holes touching edges
and edges touching themselves. GEOSIntersection can't handle that.

Is there a simple way to recover the boundary for such geometry to feed
further to GEOSIntersection? Buffer(,0) does not help in many cases,
ST_MakeValid too.

Can we make GEOSIntersection handle such invalid input, or is it completely
incompatible with monotone chain conception?
-- 
Darafei Praliaskouski
Support me: http://patreon.com/komzpa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/0c897278/attachment.html>

From mtnclimb at gmail.com  Thu Nov 29 13:05:12 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 29 Nov 2018 13:05:12 -0800
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAC8Q8tJXnZboc3eiDqQ0cPORXDyMqunkidRKBbEe3QNJCGYGVg@mail.gmail.com>
References: <CAEC-EqAWyQGPX2Yp4jwvgvefq1+pJXOzHV3hhaFOkuOJdz4+ww@mail.gmail.com>
 <CAK2ens02STzikt0ee_ukfx3QJCYvSBmczy9o6GPWhyiP7NpO2g@mail.gmail.com>
 <CAC8Q8tJXnZboc3eiDqQ0cPORXDyMqunkidRKBbEe3QNJCGYGVg@mail.gmail.com>
Message-ID: <CAK2ens36+_aMW_-pmgJ0UQABdDr1myASCeLmfa1OypSf78N3pA@mail.gmail.com>

Right, I remember you reporting out on that experiment.

At the moment I can't think of a *simple* way to convert the "box-clamped"
geometry to a valid geometry for use in Overlay.   But there might be a
clever way to do this - it's an interesting question.  (One issue as you
probably realize is that the clamped geometry can have a LOT of "collapsed"
edges, including one which may wrap multiple times around the box, in the
worst case...)  But maybe it's better just to implement a robust clipping
algorithm - there's a few implementations around to use as inspiration.

Collapsed linework causes problems in the topology-building phase of
overlay - the noding doesn't care.   I've been wrestling with this a bit
recently, to try and get snap-rounding to work.  Unfortunately it's not
easy.  One issue is that the GeometryGraph code is quite complex and
supports both overlay and relate computation.  I think these are probably
going to have to split apart, and then both can be optimized for their
different usages.

I'm still optimistic that limiting noding to the overlap area (i.e. the
rectangle in the case of clipping) might work and be faster.  But I might
be missing something key that will make this a non-starter.


On Thu, Nov 29, 2018 at 12:20 PM Darafei "Komяpa" Praliaskouski <
me at komzpa.net> wrote:

> Other ideas about performance improvements are welcome.  For instance, I
>> have had some ideas about only noding geometry in the region of actual
>> overlap in the case of an intersection computation.  That probably has
>> implications for robustness, however.  Needs some research...
>>
>
>
> I tried to implement this speed up in PostGIS via box clipping.
> Current GEOS recangle clipping is unfortunately not robust, but helps
> quite a lot when not crashing.
>
> I tried redoing clipping by doing just O(N) clamping to the box. Result
> retains many required properties (ie, raycasting will give correct
> inside/outside result for it, area is okay) but has holes touching edges
> and edges touching themselves. GEOSIntersection can't handle that.
>
> Is there a simple way to recover the boundary for such geometry to feed
> further to GEOSIntersection? Buffer(,0) does not help in many cases,
> ST_MakeValid too.
>
> Can we make GEOSIntersection handle such invalid input, or is it
> completely incompatible with monotone chain conception?
> --
> Darafei Praliaskouski
> Support me: http://patreon.com/komzpa
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/35dd2da6/attachment.html>

From mwtoews at gmail.com  Thu Nov 29 13:35:19 2018
From: mwtoews at gmail.com (Mike Taves)
Date: Fri, 30 Nov 2018 10:35:19 +1300
Subject: [geos-devel] geos-devel@lists.osgeo.org
In-Reply-To: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>
References: <CAHNf2YRZtyqJ7XQbZk8sTsTtoOyGcAU3jX1nUiKLaZAhLKGmoA@mail.gmail.com>
Message-ID: <CAM2FmMqD5c632GW-gRO6Q=kvi=q9K_CNxfaJDnrYTofc=4GQgw@mail.gmail.com>

On Thu, 29 Nov 2018 at 09:04, Paul Meems <bontepaarden at gmail.com> wrote:
>
> Hi List,
>
> I see PostGIS has  https://postgis.net/docs/manual-1.4/ST_Line_Interpolate_Point.html
> I'm assuming it comes from GEOS but I can't find it in the documentation.
>
> Can anybody point me to the GEOS documentation of this method?

Hi Paul,

Look for GEOSInterpolate using an absolute length or
GEOSInterpolateNormalized using a fraction length between 0 and 1,
which is similar to the PostGIS function. These are available in the
GEOS C API.

These methods are used with shapely's interpolate, documented here:
https://shapely.readthedocs.io/en/latest/manual.html#linear-referencing-methods

From pramsey at cleverelephant.ca  Thu Nov 29 13:42:06 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 29 Nov 2018 13:42:06 -0800
Subject: [geos-devel] JTS equalsTopo()
Message-ID: <CACowWR2uJubePUeGmOTdJC9+FEzXRiEVamgjoeeFPbehmejpcQ@mail.gmail.com>

Hrm... so, it seems at some point there was a large retrofit to flip
equals() to equalsTopo(). I assume that's because (if I recall right)
equals() has some special meaning/uses in the Java world, and having it
with a different meaning made some things (maps, I think?) not work.

GEOS never made that flip, not having the same problem. On the one hand,
making the flip would potentially make future porting simpler (method names
would line up). On the other hand, it could be an error-prone and labour
intensive process... what's your feeling?

P
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/6da1037e/attachment.html>

From mtnclimb at gmail.com  Thu Nov 29 13:54:53 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 29 Nov 2018 13:54:53 -0800
Subject: [geos-devel] JTS equalsTopo()
In-Reply-To: <CACowWR2uJubePUeGmOTdJC9+FEzXRiEVamgjoeeFPbehmejpcQ@mail.gmail.com>
References: <CACowWR2uJubePUeGmOTdJC9+FEzXRiEVamgjoeeFPbehmejpcQ@mail.gmail.com>
Message-ID: <CAK2ens3idJPGeANuqGG3VUtc1W3p_oY6nmyhS3EcP5a0A01VUg@mail.gmail.com>

Hmmm... where are you seeing this "large retrofit"?

The confusion over equals VS equalsTopo is indeed a thing in the Java
world, and equalsTopo was created to encourage being unambiguous about the
intended meaning.  But in JTS equals just delegates to equalsTopo, and
equals is still used all over the place in JTS code (equalsTopo - not so
much).

Actually equals is not used at all in the core code (since it's highly
inefficient for low-level use).  It's used in the unit tests, where
performance doesn't matter as much.  But even there it's mostly only used
either where it is being tested, or in a somewhat casual way that should
probably be replaced.

So before opining about which way GEOS should go need to know more about
where it's being used.

On Thu, Nov 29, 2018 at 1:42 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Hrm... so, it seems at some point there was a large retrofit to flip
> equals() to equalsTopo(). I assume that's because (if I recall right)
> equals() has some special meaning/uses in the Java world, and having it
> with a different meaning made some things (maps, I think?) not work.
>
> GEOS never made that flip, not having the same problem. On the one hand,
> making the flip would potentially make future porting simpler (method names
> would line up). On the other hand, it could be an error-prone and labour
> intensive process... what's your feeling?
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/b93363d3/attachment-0001.html>

From lr at pcorp.us  Thu Nov 29 14:37:15 2018
From: lr at pcorp.us (Regina Obe)
Date: Thu, 29 Nov 2018 17:37:15 -0500
Subject: [geos-devel] JTS equalsTopo()
In-Reply-To: <CACowWR2uJubePUeGmOTdJC9+FEzXRiEVamgjoeeFPbehmejpcQ@mail.gmail.com>
References: <CACowWR2uJubePUeGmOTdJC9+FEzXRiEVamgjoeeFPbehmejpcQ@mail.gmail.com>
Message-ID: <000a01d48834$146a1340$3d3e39c0$@pcorp.us>

I'm more leaning on the side of "let sleeping dogs lie."

 

Don't we have so many other things where our GEOS is a bit out of synch with JTS.  E.g. our weird 3Dish support in GEOS.

 

Is equalsTopo / equals() used in that many places to make not changing it really that difficult to port things?  I would think the extra levels like the coordinate array thingy Dan was complaining about are more troubling than this for porting.

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Paul Ramsey
Sent: Thursday, November 29, 2018 4:42 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: [geos-devel] JTS equalsTopo()

 

Hrm... so, it seems at some point there was a large retrofit to flip equals() to equalsTopo(). I assume that's because (if I recall right) equals() has some special meaning/uses in the Java world, and having it with a different meaning made some things (maps, I think?) not work.

 

GEOS never made that flip, not having the same problem. On the one hand, making the flip would potentially make future porting simpler (method names would line up). On the other hand, it could be an error-prone and labour intensive process... what's your feeling?

P

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/b7b829b1/attachment.html>

From geos-trac at osgeo.org  Thu Nov 29 15:56:32 2018
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 29 Nov 2018 23:56:32 -0000
Subject: [geos-devel] [GEOS] #936: fail with cmake
	-DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
In-Reply-To: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
References: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
Message-ID: <060.f7590e236aae4b2be9f385318e826d5e@osgeo.org>

#936: fail with cmake -DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:  3.7.2
Component:  Build/Install (cmake)  |     Version:  3.7.0
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by pramsey):

 * milestone:  3.7.1 => 3.7.2


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/936#comment:6>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Thu Nov 29 15:59:20 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 29 Nov 2018 15:59:20 -0800
Subject: [geos-devel] GEOS 3.7.1
Message-ID: <CACowWR303UoJKMcso1=KiOCv4p1S9XtXfG7mDbRepwTtUoNp0A@mail.gmail.com>

The GEOS development team is happy to release GEOS 3.7.1.

Source code can be downloaded from:
https://download.osgeo.org/geos/geos-3.7.1.tar.bz2

Changes in 3.7.1
2018-11-29

- Bug fixes / improvements
  - Fix crash in GEOSCoordSeq_isCCW with empty coordseq
    (#927, Sergey Fedoseev)
  - Fix crash in GEOSInterpolate with empty LineString
    (#926, Sergey Fedoseev)
  - Fix crash in GEOSUnaryUnion with empty LineString
    (#928, Sergey Fedoseev)
  - Fix memory leak in SIRtree::insert (#919, Dan Baston)
  - Reduce required autoconf to 2.63
    (#56, John Harvey)
  - Fix incorrect return values on error from GEOSLength
    GEOSisValidDetail (#941, Dan Baston)

Thanks,
GEOS Development Team
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/e87c105d/attachment.html>

From pramsey at cleverelephant.ca  Thu Nov 29 16:06:34 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 29 Nov 2018 16:06:34 -0800
Subject: [geos-devel] JTS equalsTopo()
In-Reply-To: <CAK2ens3idJPGeANuqGG3VUtc1W3p_oY6nmyhS3EcP5a0A01VUg@mail.gmail.com>
References: <CACowWR2uJubePUeGmOTdJC9+FEzXRiEVamgjoeeFPbehmejpcQ@mail.gmail.com>
 <CAK2ens3idJPGeANuqGG3VUtc1W3p_oY6nmyhS3EcP5a0A01VUg@mail.gmail.com>
Message-ID: <CACowWR2v5tMZ3NSAsRWqCzjVspz3hDmAg1=_80YAZZkXd-QxVA@mail.gmail.com>

On Thu, Nov 29, 2018 at 1:55 PM Martin Davis <mtnclimb at gmail.com> wrote:

> Hmmm... where are you seeing this "large retrofit"?
>

Admittedly, this was pretty non-scientific, I just did a global search for
it and found it in a number of classes more than would fit on one page...
:) so I knew it wasn't just one new method in Geometry.java that delegated
to equals() ... :)

Maybe it would all be fine'n'dandy. I'll look more closely tomorrow, if
it's only a few dozen locations, I'll just do it in the interests of
convergence.

P



>
> The confusion over equals VS equalsTopo is indeed a thing in the Java
> world, and equalsTopo was created to encourage being unambiguous about the
> intended meaning.  But in JTS equals just delegates to equalsTopo, and
> equals is still used all over the place in JTS code (equalsTopo - not so
> much).
>
> Actually equals is not used at all in the core code (since it's highly
> inefficient for low-level use).  It's used in the unit tests, where
> performance doesn't matter as much.  But even there it's mostly only used
> either where it is being tested, or in a somewhat casual way that should
> probably be replaced.
>
> So before opining about which way GEOS should go need to know more about
> where it's being used.
>
> On Thu, Nov 29, 2018 at 1:42 PM Paul Ramsey <pramsey at cleverelephant.ca>
> wrote:
>
>> Hrm... so, it seems at some point there was a large retrofit to flip
>> equals() to equalsTopo(). I assume that's because (if I recall right)
>> equals() has some special meaning/uses in the Java world, and having it
>> with a different meaning made some things (maps, I think?) not work.
>>
>> GEOS never made that flip, not having the same problem. On the one hand,
>> making the flip would potentially make future porting simpler (method names
>> would line up). On the other hand, it could be an error-prone and labour
>> intensive process... what's your feeling?
>>
>> P
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181129/301a752a/attachment.html>

From me at komzpa.net  Fri Nov 30 04:49:13 2018
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Fri, 30 Nov 2018 15:49:13 +0300
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAK2ens36+_aMW_-pmgJ0UQABdDr1myASCeLmfa1OypSf78N3pA@mail.gmail.com>
References: <CAEC-EqAWyQGPX2Yp4jwvgvefq1+pJXOzHV3hhaFOkuOJdz4+ww@mail.gmail.com>
 <CAK2ens02STzikt0ee_ukfx3QJCYvSBmczy9o6GPWhyiP7NpO2g@mail.gmail.com>
 <CAC8Q8tJXnZboc3eiDqQ0cPORXDyMqunkidRKBbEe3QNJCGYGVg@mail.gmail.com>
 <CAK2ens36+_aMW_-pmgJ0UQABdDr1myASCeLmfa1OypSf78N3pA@mail.gmail.com>
Message-ID: <CAC8Q8tK8HK1suJsZPZN6GZL6irXP8FL=369jBtmouSMzi08vBQ@mail.gmail.com>

On Fri, Nov 30, 2018 at 12:05 AM Martin Davis <mtnclimb at gmail.com> wrote:

> Right, I remember you reporting out on that experiment.
>
> At the moment I can't think of a *simple* way to convert the "box-clamped"
> geometry to a valid geometry for use in Overlay.   But there might be a
> clever way to do this - it's an interesting question.  (One issue as you
> probably realize is that the clamped geometry can have a LOT of "collapsed"
> edges, including one which may wrap multiple times around the box, in the
> worst case...)  But maybe it's better just to implement a robust clipping
> algorithm - there's a few implementations around to use as inspiration.
>

Can you share one?

I used one from Mapnik, and it has comments on how AGG is tolerant to
"box-clamping" so they don't bother.

Fixing the clipped one, even slowly, will be beneficial, as it's used for
interval clipping in Z/M dimensions which is not available in
GEOSIntersects.


>
> Collapsed linework causes problems in the topology-building phase of
> overlay - the noding doesn't care.   I've been wrestling with this a bit
> recently, to try and get snap-rounding to work.  Unfortunately it's not
> easy.  One issue is that the GeometryGraph code is quite complex and
> supports both overlay and relate computation.  I think these are probably
> going to have to split apart, and then both can be optimized for their
> different usages.
>

May it happen that snap-rounding for axis aligned overlaps is more trivial
than one for generic overlap?


>
> I'm still optimistic that limiting noding to the overlap area (i.e. the
> rectangle in the case of clipping) might work and be faster.  But I might
> be missing something key that will make this a non-starter.
>
>
> On Thu, Nov 29, 2018 at 12:20 PM Darafei "Komяpa" Praliaskouski <
> me at komzpa.net> wrote:
>
>> Other ideas about performance improvements are welcome.  For instance, I
>>> have had some ideas about only noding geometry in the region of actual
>>> overlap in the case of an intersection computation.  That probably has
>>> implications for robustness, however.  Needs some research...
>>>
>>
>>
>> I tried to implement this speed up in PostGIS via box clipping.
>> Current GEOS recangle clipping is unfortunately not robust, but helps
>> quite a lot when not crashing.
>>
>> I tried redoing clipping by doing just O(N) clamping to the box. Result
>> retains many required properties (ie, raycasting will give correct
>> inside/outside result for it, area is okay) but has holes touching edges
>> and edges touching themselves. GEOSIntersection can't handle that.
>>
>> Is there a simple way to recover the boundary for such geometry to feed
>> further to GEOSIntersection? Buffer(,0) does not help in many cases,
>> ST_MakeValid too.
>>
>> Can we make GEOSIntersection handle such invalid input, or is it
>> completely incompatible with monotone chain conception?
>> --
>> Darafei Praliaskouski
>> Support me: http://patreon.com/komzpa
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel



-- 
Darafei Praliaskouski
Support me: http://patreon.com/komzpa
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181130/dea305d7/attachment-0001.html>

From mtnclimb at gmail.com  Fri Nov 30 09:25:04 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 30 Nov 2018 09:25:04 -0800
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAC8Q8tK8HK1suJsZPZN6GZL6irXP8FL=369jBtmouSMzi08vBQ@mail.gmail.com>
References: <CAEC-EqAWyQGPX2Yp4jwvgvefq1+pJXOzHV3hhaFOkuOJdz4+ww@mail.gmail.com>
 <CAK2ens02STzikt0ee_ukfx3QJCYvSBmczy9o6GPWhyiP7NpO2g@mail.gmail.com>
 <CAC8Q8tJXnZboc3eiDqQ0cPORXDyMqunkidRKBbEe3QNJCGYGVg@mail.gmail.com>
 <CAK2ens36+_aMW_-pmgJ0UQABdDr1myASCeLmfa1OypSf78N3pA@mail.gmail.com>
 <CAC8Q8tK8HK1suJsZPZN6GZL6irXP8FL=369jBtmouSMzi08vBQ@mail.gmail.com>
Message-ID: <CAK2ens0LkiiHQgC7LrtbA1s3kQU5-KnJ6nLaBEphg71Kd-TKQQ@mail.gmail.com>

On Fri, Nov 30, 2018 at 4:49 AM Darafei "Komяpa" Praliaskouski <
me at komzpa.net> wrote:

>
>
> On Fri, Nov 30, 2018 at 12:05 AM Martin Davis <mtnclimb at gmail.com> wrote:
>
>>
>>
> Can you share one?
>

There's one in GeoTools:
https://github.com/geotools/geotools/blob/master/modules/library/main/src/main/java/org/geotools/geometry/jts/GeometryClipper.java

But I see comments that indicate it may not produce valid geometry either,
just something good enough for rendering.  But the basic approach
(Cohen-Sutherland / Liang-Barsky) might be possible to make valid.
There's a JTS-adapted port here, so you can try it in TestBuilder:
https://github.com/dr-jts/jts-ports

>
>
>>
>> Collapsed linework causes problems in the topology-building phase of
>> overlay - the noding doesn't care.   I've been wrestling with this a bit
>> recently, to try and get snap-rounding to work.  Unfortunately it's not
>> easy.  One issue is that the GeometryGraph code is quite complex and
>> supports both overlay and relate computation.  I think these are probably
>> going to have to split apart, and then both can be optimized for their
>> different usages.
>>
>
> May it happen that snap-rounding for axis aligned overlaps is more trivial
> than one for generic overlap?
>

Maybe... although snap-rounding in theory is a global operation that needs
to be applied to the entire line arrangement, to ensure that no lines
result in further intersections after adjustment.  But as per previous
comment, maybe it's possible to restrict it to just the rectangle area.
That won't make it more "trivial", however, since a geometry can be highly
complex inside the rectangle.  It should be faster though.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181130/ec3834a5/attachment.html>

From paul.doskabouter at gmail.com  Fri Nov 30 13:13:13 2018
From: paul.doskabouter at gmail.com (Paul van der Linden)
Date: Fri, 30 Nov 2018 22:13:13 +0100
Subject: [geos-devel] Possible speed improvement for overlay operations
Message-ID: <CAEC-EqC8iZQ0JuRQqy8yHF5wJHpD6vRKNH545-cX87SyEfS9-A@mail.gmail.com>

Well, the part I'm referring to is the 1. and 2 (Compute self-intersection
nodes for A and B) as far as I understand.
Traced through from
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/GeometryGraph.cpp#L393
to
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L55
to
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L126

Increased a counter here
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/
SimpleMCSweepLineIntersector.cpp#L161 and put a breakpoint here
https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L166
counter's value at the end of the computeintersections was n*n, and
breakpoint never hit, so a lot of checks were done without any useful work.

Not really sure how "representative" my polygons are, but they are squares
with zig-zag boundaries
/\/\/\/\/\/\/\/\
\              /
/              \
\              /
/              \
\              /
\/\/\/\/\/\/\/

don't know if that will come out right, but here's the snippet I used to
check this:
Geometry* getlargeGeo(double x, double y)
{
    int i;
    const int n = 1000;
    GeometryFactory::Ptr factory = GeometryFactory::create();
    CoordinateSequence* coords =
factory->getCoordinateSequenceFactory()->create((size_t)0);
    for (i = 0; i < n; i++)
        coords->add(Coordinate(x + i * 10, y + (i % 2) * 3));
    Coordinate last = coords->getAt(coords->size() - 1);
    for (i = 0; i < n; i++)
        coords->add(Coordinate(last.x + (i % 2) * 3, last.y + i * 10));
    last = coords->getAt(coords->size() - 1);
    for (i = 0; i < n; i++)
        coords->add(Coordinate(last.x - i * 10, last.y + (i % 2) * 3));
    last = coords->getAt(coords->size() - 1);
    for (i = 0; i < n; i++)
        coords->add(Coordinate(last.x + (i % 2) * 3, last.y - i * 10));
    coords->add(coords->getAt(0));

    LinearRing *shell = factory->createLinearRing(coords);
    return factory->createPolygon(shell, NULL);
};

...

    Geometry* lg1 = getlargeGeo(0, 0);
    Geometry* lg2 = getlargeGeo(100, 50);
    Geometry* res3 = lg1->intersection(lg2);
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181130/4fe3de76/attachment.html>

From mtnclimb at gmail.com  Fri Nov 30 13:25:14 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 30 Nov 2018 13:25:14 -0800
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAEC-EqC8iZQ0JuRQqy8yHF5wJHpD6vRKNH545-cX87SyEfS9-A@mail.gmail.com>
References: <CAEC-EqC8iZQ0JuRQqy8yHF5wJHpD6vRKNH545-cX87SyEfS9-A@mail.gmail.com>
Message-ID: <CAK2ens0fXYcSVrSmOTiP1X_Fnmzd1pkh1cWV2PbQob+DuUA2CQ@mail.gmail.com>

Those polygons are a worst-case scenario for MonotoneChains, and they are a
sub-optimal case for sweepline as well.  So maybe not surprising you are
seeing a n^2 count.

There doesn't seem much point in working to optimize such an artificial
case, especially if it will impact code complexity or performance for the
"average" case.   But it's hard to speculate without a working
demonstration of a potential improvement.

On Fri, Nov 30, 2018 at 1:13 PM Paul van der Linden <
paul.doskabouter at gmail.com> wrote:

> Well, the part I'm referring to is the 1. and 2 (Compute self-intersection
> nodes for A and B) as far as I understand.
> Traced through from
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/GeometryGraph.cpp#L393
> to
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L55
> to
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L126
>
> Increased a counter here
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/
> SimpleMCSweepLineIntersector.cpp#L161 and put a breakpoint here
> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L166
> counter's value at the end of the computeintersections was n*n, and
> breakpoint never hit, so a lot of checks were done without any useful work.
>
> Not really sure how "representative" my polygons are, but they are squares
> with zig-zag boundaries
> /\/\/\/\/\/\/\/\
> \              /
> /              \
> \              /
> /              \
> \              /
> \/\/\/\/\/\/\/
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181130/ec05a671/attachment.html>

From mtnclimb at gmail.com  Fri Nov 30 14:05:37 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 30 Nov 2018 14:05:37 -0800
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAK2ens0fXYcSVrSmOTiP1X_Fnmzd1pkh1cWV2PbQob+DuUA2CQ@mail.gmail.com>
References: <CAEC-EqC8iZQ0JuRQqy8yHF5wJHpD6vRKNH545-cX87SyEfS9-A@mail.gmail.com>
 <CAK2ens0fXYcSVrSmOTiP1X_Fnmzd1pkh1cWV2PbQob+DuUA2CQ@mail.gmail.com>
Message-ID: <CAK2ens2XZ1vQRCpLRC19-xgR5L077xsyr4eKoSaxuxnQoTgT_w@mail.gmail.com>

Some more thoughts:

- it is always good to validate that algorithms are working as expected.
What happens if you use best-case geometry as input?  E.g. a square with
dense but flat edges?

- if the overlay algorithms really were egregiously O(n^2) I'm fairly sure
that would have been noticed by now.  n^2 is REALLY slow on large inputs.
You can easily test for n^2 by creating a sequence of increasingly
densified inputs.

- One way to improve performance for the worst-case geometries you are
using is to switch from a sweep-line to using a true spatial index (such as
the STRtree).  The MCIndexNoder uses this approach. One downside of this is
that the order of processing overlaps becomes somewhat non-deterministic,
which has been problematic for some uses.

On Fri, Nov 30, 2018 at 1:25 PM Martin Davis <mtnclimb at gmail.com> wrote:

> Those polygons are a worst-case scenario for MonotoneChains, and they are
> a sub-optimal case for sweepline as well.  So maybe not surprising you are
> seeing a n^2 count.
>
> There doesn't seem much point in working to optimize such an artificial
> case, especially if it will impact code complexity or performance for the
> "average" case.   But it's hard to speculate without a working
> demonstration of a potential improvement.
>
> On Fri, Nov 30, 2018 at 1:13 PM Paul van der Linden <
> paul.doskabouter at gmail.com> wrote:
>
>> Well, the part I'm referring to is the 1. and 2 (Compute
>> self-intersection nodes for A and B) as far as I understand.
>> Traced through from
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/GeometryGraph.cpp#L393
>> to
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L55
>> to
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L126
>>
>> Increased a counter here
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/
>> SimpleMCSweepLineIntersector.cpp#L161 and put a breakpoint here
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L166
>> counter's value at the end of the computeintersections was n*n, and
>> breakpoint never hit, so a lot of checks were done without any useful work.
>>
>> Not really sure how "representative" my polygons are, but they are
>> squares with zig-zag boundaries
>> /\/\/\/\/\/\/\/\
>> \              /
>> /              \
>> \              /
>> /              \
>> \              /
>> \/\/\/\/\/\/\/
>>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181130/4a377e39/attachment-0001.html>

From mtnclimb at gmail.com  Fri Nov 30 17:07:49 2018
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 30 Nov 2018 17:07:49 -0800
Subject: [geos-devel] Possible speed improvement for overlay operations
In-Reply-To: <CAK2ens0fXYcSVrSmOTiP1X_Fnmzd1pkh1cWV2PbQob+DuUA2CQ@mail.gmail.com>
References: <CAEC-EqC8iZQ0JuRQqy8yHF5wJHpD6vRKNH545-cX87SyEfS9-A@mail.gmail.com>
 <CAK2ens0fXYcSVrSmOTiP1X_Fnmzd1pkh1cWV2PbQob+DuUA2CQ@mail.gmail.com>
Message-ID: <CAK2ens1+8J4Q3cA+vAk_ujVESWzQxU1u43_DjkKQ+f4Y7jvSvw@mail.gmail.com>

I did some quick metrics, on real-world geometries (outlines of countries,
flipped in X and then intersected.  This exercises the sweepline a lot, and
the MonoChains are utilized to their potential).

France : 921 vertices   Overlaps = 3,329
Norway: 4155 vertices.   Overlaps = 13,344
Russia: 14,747 vertices   Overlaps = 36,124

So the overlap count is much less than n^2, as expected.  And the overlap
count is going up (very)approximately) linearly with the vertex count.

Note that the Monotone Chains also provide efficiency in determining actual
segment intersections, since they enable binary search.

On Fri, Nov 30, 2018 at 1:25 PM Martin Davis <mtnclimb at gmail.com> wrote:

> Those polygons are a worst-case scenario for MonotoneChains, and they are
> a sub-optimal case for sweepline as well.  So maybe not surprising you are
> seeing a n^2 count.
>
> There doesn't seem much point in working to optimize such an artificial
> case, especially if it will impact code complexity or performance for the
> "average" case.   But it's hard to speculate without a working
> demonstration of a potential improvement.
>
> On Fri, Nov 30, 2018 at 1:13 PM Paul van der Linden <
> paul.doskabouter at gmail.com> wrote:
>
>> Well, the part I'm referring to is the 1. and 2 (Compute
>> self-intersection nodes for A and B) as far as I understand.
>> Traced through from
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/GeometryGraph.cpp#L393
>> to
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L55
>> to
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L126
>>
>> Increased a counter here
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/
>> SimpleMCSweepLineIntersector.cpp#L161 and put a breakpoint here
>> https://github.com/libgeos/geos/blob/8bc1ea0f8019bcb83c60126e7883ae428ea7c677/src/geomgraph/index/SimpleMCSweepLineIntersector.cpp#L166
>> counter's value at the end of the computeintersections was n*n, and
>> breakpoint never hit, so a lot of checks were done without any useful work.
>>
>> Not really sure how "representative" my polygons are, but they are
>> squares with zig-zag boundaries
>> /\/\/\/\/\/\/\/\
>> \              /
>> /              \
>> \              /
>> /              \
>> \              /
>> \/\/\/\/\/\/\/
>>
>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181130/f8414b01/attachment.html>

