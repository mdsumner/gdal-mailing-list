From 2284168009 at qq.com  Mon Nov  4 01:06:04 2013
From: 2284168009 at qq.com (=?gb18030?B?wbrM7LO9?=)
Date: Mon, 4 Nov 2013 17:06:04 +0800
Subject: [geos-devel] How to union polygons using geos?
Message-ID: <tencent_6EF81C947AE91EA14FC79D2A@qq.com>

Hi all,I need to union polygon to polygon that have no interRings(exterioring and interring has only one point in common) and multipolygons to  one polygon.Can anyone give me some suggestions?Thanks.
Regards,
2286168009 at qq.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131104/eab52c80/attachment.html>

From remi.cura at gmail.com  Wed Nov  6 04:41:21 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Wed, 6 Nov 2013 13:41:21 +0100
Subject: [geos-devel] [postgis-devel] SNapPointToLine : GEOS : where is
 the code for st_intersects between line and point?
In-Reply-To: <20131106112130.GC28088@cdb>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<20131106112130.GC28088@cdb>
Message-ID: <CAJvUf_swX7bbkx2EjtCoJDmFykYuz-M81Ro1VQJ6oBS39Xn_3A@mail.gmail.com>

Hey Sandro =) ,
thanks for the answer and the suggestion ( switching to geos-devel)
*(Hey geos list, please see the message history in reverse order)*

I'm not looking for infinite precision, just *coherent* double precision.

Using double precision to represent a line/point gives you a representation
like pixels in images, where size of pixel in x is min precision in (that
is a round to 15 to17 digits) (same in y). This is not an issue (for me).

This issue is not about geometry being approximated (rounded), but about
st_intersects miss-computing with this rounded geom.

Currently st_intersects computing for a point and a line is false, more
exactly the computing seems to be more precise than the geometry, thus
giving false answer.
I'm not sure about this, and i don't know either what kind of change could
solve this problem.

Maybe the computing of "robust determinant" needs to be relaxed a bit to
output 0 in close cases.


I can give you example of points being exactly on the double precision grid
(ie 17 digits in each coordinate),  exactly on the theoretical line (up to
10^-30), and yet rejected by st_intersects.



Cheers,
R?mi-C



2013/11/6 Sandro Santilli <strk at keybit.net>

> On Wed, Nov 06, 2013 at 11:15:12AM +0100, R?mi Cura wrote:
>
> > This is without speaking of custom precision model, ie working with the
> > postgis 'infinite' precision (double precision, 15 to 17 digits)
>
> Double precision is not 'infinite'.
> Maybe CGAL would give you a closer approximation, but GEOS doesn't support
> the CGAL-like arbitrary precision.
>
> You might want to subscribe to geos-devel and start a thread there if
> you intend to work on that side of the architecture.
>
> --strk;
> _______________________________________________
> postgis-devel mailing list
> postgis-devel at lists.osgeo.org
> http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
>

Hey Nicklas,
thanks for your answer.

I'm simply trying to solve a problem in current ST_Intersects behavior
regarding a point and a line. IN most of the case, a point on a line(to
double limit precision) is not on the line for st_intersects !

it works as intended in very very few cases (ie, all the points that
intersects a line is a very sparse set and is not a line at all !).

Here is a simple illustration : http://hpics.li/c3485b5 represents a line
with max zoom : it is all the point that follow the line equation and are
rounded to the(16 or 17 digits)
http://hpics.li/f30aeb7 now the big points represents the point that are on
the line for ST_Intersect, in a favorable case (bad case could mean no
points at all).

This is without speaking of custom precision model, ie working with the
postgis 'infinite' precision (double precision, 15 to 17 digits)

I tried several workaround (like several random walk along the line to find
a point that st_intersects like,
and also reverse engineer to find which points are seen on the line by
st_intersects (related to prime factorization of slope it appears) ).

The issue is there is a flaw in ST_Intersects and in bad cases there is no
workaround.

Could you elaborate about 'native' functions please?

Cheers,

R?mi-C



2013/11/6 Nicklas Av?n <nicklas.aven at jordogskog.no>

> I think postgis has native functions for st_intersects when at least one
> of the geometries is a point. And there is two paths in the code. One that
> prepares the "not point" geometry if it is to be used multiple times and
> one that doesn't.
>
> I do not get the idea do far. Is it a tolerance you are implementing?
>
>
>
> Best regards
> Nicklad
>
> Skickat fr?n min Samsung Mobil
>
>
>
> -------- Originalmeddelande --------
> Fr?n: R?mi Cura <remi.cura at gmail.com>
> Datum: 06-11-2013 8:59 (GMT+01:00)
> Till: PostGIS Development Discussion <postgis-devel at lists.osgeo.org>
> Rubrik: [postgis-devel] SNapPointToLine : GEOS : where is the code for
> st_intersects between line and point?
>
>
> Hey,
> I've been working on a ST_SnapPointToLine for the past week,
> by reverse engineering when points are considered to be on line by
> st_intersect.
>
> The (classic) problem is purely a numerical issue, and I suspect a problem
> in design of st_intersects.
>
>
> So far my solution doesn't work for all line, can someone please point me
> in the right direction in GEOS so I can see if something can be improved
> regarding precision.
>
> I know where the API is, but I'm looking for the exact part that decide if
> a point and a line intersects.
>
> Cheers,
>
> R?mi-C
>
> _______________________________________________
> postgis-devel mailing list
> postgis-devel at lists.osgeo.org
> http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131106/49ab664f/attachment.html>

From remi.cura at gmail.com  Wed Nov  6 06:11:10 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Wed, 6 Nov 2013 15:11:10 +0100
Subject: [geos-devel] [postgis-devel] SNapPointToLine : GEOS : where is
 the code for st_intersects between line and point?
In-Reply-To: <1383742362.4463.17.camel@gis-debian>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
Message-ID: <CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>

Hey Nicklas,

I agree tolerance is even more complicated than precision. This is a
completely different matter as when defining tolerance you go into fuzzy
logic.

Here I'm just talking about all computing being "true" for the double
precision world.

Finding a point on a line with double precision is not a problem, you can
just do computing with better precision and round.
The problem is this point would be on the line (for a double world), but
not on the line for st_intersects.

I found experimentally that using st_intersect, you have point spacing
following the prime decomposition of the slope , which is very bad news in
most of case.

The issue seems to be in robust_determinant computing, at a point, for a
point M being on line P1 P2,
you must have
(x2-x1)*(ym-y1) =  (y2-y1)*(xm-x1)
by translating you can make x1=y1=0 with x2t and y2t being the x2 y2
translated.
x2t*ym  =  y2t * xm
Now the "equal" should be evaluated with precision in mind :
Ina typical case of a small slope : (slope = 0.001), we could take
precision(x2t=1000m)= 10^(-15+4), precision(y2t=1m)= 10^(-15+1);

In this case the "=" should be evaluated with a 10^(-11) precision (is it
sufficient? too much??)

Cheers,
R?mi-C



2013/11/6 Nicklas Av?n <nicklas.aven at jordogskog.no>

> Hallo
>
> Sorry, I was wrong. It was only the point in polygon test that is done
> in the PostGIS code, see file postgis/lwgeom_geos.c row 2602
>
> I thought I remembered that also point vs linestring was handled in the
> postgis code.
>
> I think it was last time we discussed this problem that I created the
> tolerance discussion wiki-page. But it is not very easy to handle
> correct.
>
> Maybe the point should be projected to the line and see if the projected
> point is equal to the unprojected point and then declare it
> intersecting. But I doubt that is very robust when comparing projected
> points from different machines on different platforms. We have seen
> differences in the last decimal before.
>
>
> Your idea, if I understand it right to find a point that actually is on
> the line and is representable with double precission coorinates can
> result in points far away from where it is supposed to be.
>
> I think that in most cases with not horizontal or vertical lines you
> will just get the vertex points and nothing else.
>
> Representable values on not horizontal or vertical lines is actually
> quite rare.
>
> Best Regards
>
> Nicklas Av?n
>
>
>
> On Wed, 2013-11-06 at 11:15 +0100, R?mi Cura wrote:
> > Hey Nicklas,
> > thanks for your answer.
> >
> > I'm simply trying to solve a problem in current ST_Intersects behavior
> > regarding a point and a line. IN most of the case, a point on a
> > line(to double limit precision) is not on the line for st_intersects !
> >
> >
> > it works as intended in very very few cases (ie, all the points that
> > intersects a line is a very sparse set and is not a line at all !).
> >
> >
> > Here is a simple illustration : http://hpics.li/c3485b5 represents a
> > line with max zoom : it is all the point that follow the line equation
> > and are rounded to the(16 or 17 digits)
> > http://hpics.li/f30aeb7 now the big points represents the point that
> > are on the line for ST_Intersect, in a favorable case (bad case could
> > mean no points at all).
> >
> >
> >
> > This is without speaking of custom precision model, ie working with
> > the postgis 'infinite' precision (double precision, 15 to 17 digits)
> >
> >
> > I tried several workaround (like several random walk along the line to
> > find a point that st_intersects like,
> > and also reverse engineer to find which points are seen on the line by
> > st_intersects (related to prime factorization of slope it appears) ).
> >
> >
> > The issue is there is a flaw in ST_Intersects and in bad cases there
> > is no workaround.
> >
> >
> > Could you elaborate about 'native' functions please?
> >
> >
> > Cheers,
> >
> > R?mi-C
> >
> >
> >
> >
> > 2013/11/6 Nicklas Av?n <nicklas.aven at jordogskog.no>
> >         I think postgis has native functions for st_intersects when at
> >         least one of the geometries is a point. And there is two paths
> >         in the code. One that prepares the "not point" geometry if it
> >         is to be used multiple times and one that doesn't.
> >
> >
> >         I do not get the idea do far. Is it a tolerance you are
> >         implementing?
> >
> >
> >
> >
> >
> >
> >         Best regards
> >         Nicklad
> >
> >
> >         Skickat fr?n min Samsung Mobil
> >
> >
> >
> >         -------- Originalmeddelande --------
> >         Fr?n: R?mi Cura <remi.cura at gmail.com>
> >         Datum: 06-11-2013 8:59 (GMT+01:00)
> >         Till: PostGIS Development Discussion
> >         <postgis-devel at lists.osgeo.org>
> >         Rubrik: [postgis-devel] SNapPointToLine : GEOS : where is the
> >         code for st_intersects between line and point?
> >
> >
> >         Hey,
> >         I've been working on a ST_SnapPointToLine for the past week,
> >         by reverse engineering when points are considered to be on
> >         line by st_intersect.
> >
> >
> >         The (classic) problem is purely a numerical issue, and I
> >         suspect a problem in design of st_intersects.
> >
> >
> >
> >
> >         So far my solution doesn't work for all line, can someone
> >         please point me in the right direction in GEOS so I can see if
> >         something can be improved regarding precision.
> >
> >
> >         I know where the API is, but I'm looking for the exact part
> >         that decide if a point and a line intersects.
> >
> >
> >         Cheers,
> >
> >
> >         R?mi-C
> >
> >         _______________________________________________
> >         postgis-devel mailing list
> >         postgis-devel at lists.osgeo.org
> >         http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
> >
> >
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131106/0d908002/attachment-0001.html>

From georger.silva at gmail.com  Thu Nov  7 05:09:33 2013
From: georger.silva at gmail.com (George Silva)
Date: Thu, 7 Nov 2013 11:09:33 -0200
Subject: [geos-devel] Bug with avoid intersection - willing to fund fix
Message-ID: <CAGyPVTvMWgXc6wFSisrVL1+wK_tTYXx+fD1Q_xW30N_H+-airg@mail.gmail.com>

Hello everyone,

We have an important QGis digitizing issue that is blocking and generating
a lot of work for us.

The issue has been described in more then 3 bugs (
http://hub.qgis.org/issues/8174, http://hub.qgis.org/issues/4880, and
others) and it really hurts QGis image as a software.

This is something that cannot happen. In our current setup we have 10 GIS
Analysts working on a large area, doing land use maps. This problem is
killing us!

I'm cross posting in GEOS dev list to see if there is interest in fixing
this bug, one way or the other and our company is willing to fund part (or
depending how much, all the costs) of the development of this fix.

Please, let me know.

Thanks!

-- 
George R. C. Silva
SIGMA Consultoria
----------------------------
http://www.consultoriasigma.com.br/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131107/62e138c3/attachment.html>

From remi.cura at gmail.com  Thu Nov  7 05:36:26 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Thu, 7 Nov 2013 14:36:26 +0100
Subject: [geos-devel] [postgis-devel] SNapPointToLine : GEOS : where is
 the code for st_intersects between line and point?
In-Reply-To: <CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
Message-ID: <CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>

Hey,
after some testing it appears that simply evaluating the = with precision
in mind won't suffice.

The core of the problem is that the determinant algorithm geos uses seems
to be designed to robustly say left or right of a line, but not robustly on
the line.

So an idea may be to offset the line to the left and the right with the
precision limit distance, and use the robust determinant to test if the
point is right of the left and left of the right (between).

Can I have some answers on this please? Is it doable, ?

Cheers,
R?mi-C


2013/11/6 R?mi Cura <remi.cura at gmail.com>

> Hey Nicklas,
>
> I agree tolerance is even more complicated than precision. This is a
> completely different matter as when defining tolerance you go into fuzzy
> logic.
>
> Here I'm just talking about all computing being "true" for the double
> precision world.
>
> Finding a point on a line with double precision is not a problem, you can
> just do computing with better precision and round.
> The problem is this point would be on the line (for a double world), but
> not on the line for st_intersects.
>
> I found experimentally that using st_intersect, you have point spacing
> following the prime decomposition of the slope , which is very bad news in
> most of case.
>
> The issue seems to be in robust_determinant computing, at a point, for a
> point M being on line P1 P2,
> you must have
> (x2-x1)*(ym-y1) =  (y2-y1)*(xm-x1)
> by translating you can make x1=y1=0 with x2t and y2t being the x2 y2
> translated.
> x2t*ym  =  y2t * xm
> Now the "equal" should be evaluated with precision in mind :
> Ina typical case of a small slope : (slope = 0.001), we could take
> precision(x2t=1000m)= 10^(-15+4), precision(y2t=1m)= 10^(-15+1);
>
> In this case the "=" should be evaluated with a 10^(-11) precision (is it
> sufficient? too much??)
>
> Cheers,
> R?mi-C
>
>
>
> 2013/11/6 Nicklas Av?n <nicklas.aven at jordogskog.no>
>
>> Hallo
>>
>> Sorry, I was wrong. It was only the point in polygon test that is done
>> in the PostGIS code, see file postgis/lwgeom_geos.c row 2602
>>
>> I thought I remembered that also point vs linestring was handled in the
>> postgis code.
>>
>> I think it was last time we discussed this problem that I created the
>> tolerance discussion wiki-page. But it is not very easy to handle
>> correct.
>>
>> Maybe the point should be projected to the line and see if the projected
>> point is equal to the unprojected point and then declare it
>> intersecting. But I doubt that is very robust when comparing projected
>> points from different machines on different platforms. We have seen
>> differences in the last decimal before.
>>
>>
>> Your idea, if I understand it right to find a point that actually is on
>> the line and is representable with double precission coorinates can
>> result in points far away from where it is supposed to be.
>>
>> I think that in most cases with not horizontal or vertical lines you
>> will just get the vertex points and nothing else.
>>
>> Representable values on not horizontal or vertical lines is actually
>> quite rare.
>>
>> Best Regards
>>
>> Nicklas Av?n
>>
>>
>>
>> On Wed, 2013-11-06 at 11:15 +0100, R?mi Cura wrote:
>> > Hey Nicklas,
>> > thanks for your answer.
>> >
>> > I'm simply trying to solve a problem in current ST_Intersects behavior
>> > regarding a point and a line. IN most of the case, a point on a
>> > line(to double limit precision) is not on the line for st_intersects !
>> >
>> >
>> > it works as intended in very very few cases (ie, all the points that
>> > intersects a line is a very sparse set and is not a line at all !).
>> >
>> >
>> > Here is a simple illustration : http://hpics.li/c3485b5 represents a
>> > line with max zoom : it is all the point that follow the line equation
>> > and are rounded to the(16 or 17 digits)
>> > http://hpics.li/f30aeb7 now the big points represents the point that
>> > are on the line for ST_Intersect, in a favorable case (bad case could
>> > mean no points at all).
>> >
>> >
>> >
>> > This is without speaking of custom precision model, ie working with
>> > the postgis 'infinite' precision (double precision, 15 to 17 digits)
>> >
>> >
>> > I tried several workaround (like several random walk along the line to
>> > find a point that st_intersects like,
>> > and also reverse engineer to find which points are seen on the line by
>> > st_intersects (related to prime factorization of slope it appears) ).
>> >
>> >
>> > The issue is there is a flaw in ST_Intersects and in bad cases there
>> > is no workaround.
>> >
>> >
>> > Could you elaborate about 'native' functions please?
>> >
>> >
>> > Cheers,
>> >
>> > R?mi-C
>> >
>> >
>> >
>> >
>> > 2013/11/6 Nicklas Av?n <nicklas.aven at jordogskog.no>
>> >         I think postgis has native functions for st_intersects when at
>> >         least one of the geometries is a point. And there is two paths
>> >         in the code. One that prepares the "not point" geometry if it
>> >         is to be used multiple times and one that doesn't.
>> >
>> >
>> >         I do not get the idea do far. Is it a tolerance you are
>> >         implementing?
>> >
>> >
>> >
>> >
>> >
>> >
>> >         Best regards
>> >         Nicklad
>> >
>> >
>> >         Skickat fr?n min Samsung Mobil
>> >
>> >
>> >
>> >         -------- Originalmeddelande --------
>> >         Fr?n: R?mi Cura <remi.cura at gmail.com>
>> >         Datum: 06-11-2013 8:59 (GMT+01:00)
>> >         Till: PostGIS Development Discussion
>> >         <postgis-devel at lists.osgeo.org>
>> >         Rubrik: [postgis-devel] SNapPointToLine : GEOS : where is the
>> >         code for st_intersects between line and point?
>> >
>> >
>> >         Hey,
>> >         I've been working on a ST_SnapPointToLine for the past week,
>> >         by reverse engineering when points are considered to be on
>> >         line by st_intersect.
>> >
>> >
>> >         The (classic) problem is purely a numerical issue, and I
>> >         suspect a problem in design of st_intersects.
>> >
>> >
>> >
>> >
>> >         So far my solution doesn't work for all line, can someone
>> >         please point me in the right direction in GEOS so I can see if
>> >         something can be improved regarding precision.
>> >
>> >
>> >         I know where the API is, but I'm looking for the exact part
>> >         that decide if a point and a line intersects.
>> >
>> >
>> >         Cheers,
>> >
>> >
>> >         R?mi-C
>> >
>> >         _______________________________________________
>> >         postgis-devel mailing list
>> >         postgis-devel at lists.osgeo.org
>> >         http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
>> >
>> >
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131107/313bbdad/attachment.html>

From strk at keybit.net  Thu Nov  7 08:44:21 2013
From: strk at keybit.net (Sandro Santilli)
Date: Thu, 7 Nov 2013 17:44:21 +0100
Subject: [geos-devel] SnapPointToLine : GEOS : where is the code for
 st_intersects between line and point?
In-Reply-To: <CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
	<CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
Message-ID: <20131107164421.GK4188@cdb>

On Thu, Nov 07, 2013 at 02:36:26PM +0100, R?mi Cura wrote:
> Hey,
> after some testing it appears that simply evaluating the = with precision
> in mind won't suffice.
> 
> The core of the problem is that the determinant algorithm geos uses seems
> to be designed to robustly say left or right of a line, but not robustly on
> the line.
> 
> So an idea may be to offset the line to the left and the right with the
> precision limit distance, and use the robust determinant to test if the
> point is right of the left and left of the right (between).
> 
> Can I have some answers on this please? Is it doable, ?

Sorry Remi, I think everything is possible, but it needs careful
thinking about consequence of changes. If the design it to be robust,
ading a toleranc would defeat the design, which isn't a sane thing
to do. Rather you might want another class to do things the way
you want them to be done.

It's still not clear to me what the goal is, nor if the provision
of "Fixed Precision Model" helps already at reaching that goal.

Are you trying to find a point that's guaranteed to be found on a
line by robust intersection finder ? My take is that it is
impossible unless the point you pick is a pre-existing vertex of
that line, and so the only way to do it is by also modifying the
line you want to snap to (ie: snap line to closest-point-on-line).

--strk;

From pramsey at cleverelephant.ca  Thu Nov  7 14:25:14 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 7 Nov 2013 14:25:14 -0800
Subject: [geos-devel] SnapPointToLine : GEOS : where is the code for
 st_intersects between line and point?
In-Reply-To: <20131107164421.GK4188@cdb>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
	<CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
	<20131107164421.GK4188@cdb>
Message-ID: <CACowWR2Yp62T8brfHbGJTZzmrFdZNVmMbAAsWZWekChDB2W_ng@mail.gmail.com>

I can certainly see the practical utility of a global tolerance value,
since it would allow some more symmetric results, like

PtC = LineA.Intersection(LineB)
LineA.Intersects(PtC) == true
LineB.Intersects(PtC) == true

An expected euclidian result that occurs in almost no cases in our code.

Of course a tolerance introduces different inconsistencies. Within a
tolerance it's possible for

LineA.Intersects(PtC) == true
LineB.Intersects(PtC) == true
Even when A is parallel to B and A != B.

Not something which can happen in a true euclidian space, but
something that can happen in our tolerance space.

However, it's a concept that needs to reside at the very bottom of a
geometry library, I don't see how we introduce it without irreparably
shaking everything we've already built above.

P.


On Thu, Nov 7, 2013 at 8:44 AM, Sandro Santilli <strk at keybit.net> wrote:
> On Thu, Nov 07, 2013 at 02:36:26PM +0100, R?mi Cura wrote:
>> Hey,
>> after some testing it appears that simply evaluating the = with precision
>> in mind won't suffice.
>>
>> The core of the problem is that the determinant algorithm geos uses seems
>> to be designed to robustly say left or right of a line, but not robustly on
>> the line.
>>
>> So an idea may be to offset the line to the left and the right with the
>> precision limit distance, and use the robust determinant to test if the
>> point is right of the left and left of the right (between).
>>
>> Can I have some answers on this please? Is it doable, ?
>
> Sorry Remi, I think everything is possible, but it needs careful
> thinking about consequence of changes. If the design it to be robust,
> ading a toleranc would defeat the design, which isn't a sane thing
> to do. Rather you might want another class to do things the way
> you want them to be done.
>
> It's still not clear to me what the goal is, nor if the provision
> of "Fixed Precision Model" helps already at reaching that goal.
>
> Are you trying to find a point that's guaranteed to be found on a
> line by robust intersection finder ? My take is that it is
> impossible unless the point you pick is a pre-existing vertex of
> that line, and so the only way to do it is by also modifying the
> line you want to snap to (ie: snap line to closest-point-on-line).
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From mtnclimb at telus.net  Thu Nov  7 21:51:01 2013
From: mtnclimb at telus.net (Martin Davis)
Date: Thu, 07 Nov 2013 21:51:01 -0800
Subject: [geos-devel] [postgis-devel] SNapPointToLine : GEOS : where is
 the code for st_intersects between line and point?
In-Reply-To: <CAJvUf_swX7bbkx2EjtCoJDmFykYuz-M81Ro1VQJ6oBS39Xn_3A@mail.gmail.com>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>	<20131106112130.GC28088@cdb>
	<CAJvUf_swX7bbkx2EjtCoJDmFykYuz-M81Ro1VQJ6oBS39Xn_3A@mail.gmail.com>
Message-ID: <527C7BC5.3090500@telus.net>

Another aspect to consider is that the "pixel size" in DP is not a fixed 
value.  It gets smaller closer to the origin.

So how would you deal with this fact?  Use the pixel size of the largest 
coordinate of the line segment? Of the geometry?  Would this introduce 
inconsistencies across geometries?

My gut feel about this is that if this kind of "coherent behaviour" is 
desired then the API client (user) should be required to specify the 
tolerance they care about.  This is how Oracle Spatial works (more or 
less).  This has a wider advantage in that it is then possible to 
guarantee that geometries constructed according to the tolerance model 
are guaranteed to be consistent in that model.

I *think* that it would be of only medium difficulty to add a tolerance 
to the predicate computation.  For overlay operations this is harder, 
since it would require snap-rounding to be used.  There would probably 
be performance impacts in both, however.

On 11/6/2013 4:41 AM, R?mi Cura wrote:
> Hey Sandro =) ,
> thanks for the answer and the suggestion ( switching to geos-devel)
> *(Hey geos list, please see the message history in reverse order)*
>
> I'm not looking for infinite precision, just *coherent* double precision.
>
> Using double precision to represent a line/point gives you a 
> representation like pixels in images, where size of pixel in x is min 
> precision in (that is a round to 15 to17 digits) (same in y). This is 
> not an issue (for me).
>
> This issue is not about geometry being approximated (rounded), but 
> about st_intersects miss-computing with this rounded geom.
>
> Currently st_intersects computing for a point and a line is false, 
> more exactly the computing seems to be more precise than the geometry, 
> thus giving false answer.
> I'm not sure about this, and i don't know either what kind of change 
> could solve this problem.
>
> Maybe the computing of "robust determinant" needs to be relaxed a bit 
> to output 0 in close cases.
>
>
> I can give you example of points being exactly on the double precision 
> grid (ie 17 digits in each coordinate),  exactly on the theoretical 
> line (up to 10^-30), and yet rejected by st_intersects.
>
>
>
> Cheers,
> R?mi-C
>
>
>
> 2013/11/6 Sandro Santilli <strk at keybit.net <mailto:strk at keybit.net>>
>
>     On Wed, Nov 06, 2013 at 11:15:12AM +0100, R?mi Cura wrote:
>
>     > This is without speaking of custom precision model, ie working
>     with the
>     > postgis 'infinite' precision (double precision, 15 to 17 digits)
>
>     Double precision is not 'infinite'.
>     Maybe CGAL would give you a closer approximation, but GEOS doesn't
>     support
>     the CGAL-like arbitrary precision.
>
>     You might want to subscribe to geos-devel and start a thread there if
>     you intend to work on that side of the architecture.
>
>     --strk;
>     _______________________________________________
>     postgis-devel mailing list
>     postgis-devel at lists.osgeo.org <mailto:postgis-devel at lists.osgeo.org>
>     http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
>
>
> Hey Nicklas,
> thanks for your answer.
>
> I'm simply trying to solve a problem in current ST_Intersects behavior 
> regarding a point and a line. IN most of the case, a point on a 
> line(to double limit precision) is not on the line for st_intersects !
>
> it works as intended in very very few cases (ie, all the points that 
> intersects a line is a very sparse set and is not a line at all !).
>
> Here is a simple illustration : http://hpics.li/c3485b5 represents a 
> line with max zoom : it is all the point that follow the line equation 
> and are rounded to the(16 or 17 digits)
> http://hpics.li/f30aeb7 now the big points represents the point that 
> are on the line for ST_Intersect, in a favorable case (bad case could 
> mean no points at all).
>
> This is without speaking of custom precision model, ie working with 
> the postgis 'infinite' precision (double precision, 15 to 17 digits)
>
> I tried several workaround (like several random walk along the line to 
> find a point that st_intersects like,
> and also reverse engineer to find which points are seen on the line by 
> st_intersects (related to prime factorization of slope it appears) ).
>
> The issue is there is a flaw in ST_Intersects and in bad cases there 
> is no workaround.
>
> Could you elaborate about 'native' functions please?
>
> Cheers,
>
> R?mi-C
>
>
>
> 2013/11/6 Nicklas Av?n <nicklas.aven at jordogskog.no 
> <mailto:nicklas.aven at jordogskog.no>>
>
>     I think postgis has native functions for st_intersects when at
>     least one of the geometries is a point. And there is two paths in
>     the code. One that prepares the "not point" geometry if it is to
>     be used multiple times and one that doesn't.
>
>     I do not get the idea do far. Is it a tolerance you are implementing?
>
>
>
>     Best regards
>     Nicklad
>
>     Skickat fr?n min Samsung Mobil
>
>
>
>     -------- Originalmeddelande --------
>     Fr?n: R?mi Cura <remi.cura at gmail.com <mailto:remi.cura at gmail.com>>
>     Datum: 06-11-2013 8:59 (GMT+01:00)
>     Till: PostGIS Development Discussion
>     <postgis-devel at lists.osgeo.org
>     <mailto:postgis-devel at lists.osgeo.org>>
>     Rubrik: [postgis-devel] SNapPointToLine : GEOS : where is the code
>     for st_intersects between line and point?
>
>
>     Hey,
>     I've been working on a ST_SnapPointToLine for the past week,
>     by reverse engineering when points are considered to be on line by
>     st_intersect.
>
>     The (classic) problem is purely a numerical issue, and I suspect a
>     problem in design of st_intersects.
>
>
>     So far my solution doesn't work for all line, can someone please
>     point me in the right direction in GEOS so I can see if something
>     can be improved regarding precision.
>
>     I know where the API is, but I'm looking for the exact part that
>     decide if a point and a line intersects.
>
>     Cheers,
>
>     R?mi-C
>
>     _______________________________________________
>     postgis-devel mailing list
>     postgis-devel at lists.osgeo.org <mailto:postgis-devel at lists.osgeo.org>
>     http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
>
>
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
> No virus found in this message.
> Checked by AVG - www.avg.com <http://www.avg.com>
> Version: 2013.0.3426 / Virus Database: 3222/6813 - Release Date: 11/06/13
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131107/d50c074d/attachment.html>

From remi.cura at gmail.com  Fri Nov  8 00:58:37 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Fri, 8 Nov 2013 09:58:37 +0100
Subject: [geos-devel] SnapPointToLine : GEOS : where is the code for
 st_intersects between line and point?
In-Reply-To: <CACowWR2Yp62T8brfHbGJTZzmrFdZNVmMbAAsWZWekChDB2W_ng@mail.gmail.com>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
	<CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
	<20131107164421.GK4188@cdb>
	<CACowWR2Yp62T8brfHbGJTZzmrFdZNVmMbAAsWZWekChDB2W_ng@mail.gmail.com>
Message-ID: <CAJvUf_vBvxEsBRoiV9GMQo7rGRgHMHhhGh+qzfbcso1ScyvuYw@mail.gmail.com>

Hey ,
First of all I'm not at all a specialist, and I don't have knowledge
nor intention to do something other than a workaround of one precise issue
(point/line intersection)

@Sandro : I agree it should be robust.
With the current st_intersects behavior it is possible if the slope (or its
inverse) is of finite size and not too long. I already wrote the functions,
but sadly in real world many lines are not concerned (ie not robust at
all!). Also the spacing of possible points increase with size of slope (in
digits), which is problematic. I thought about another possibility (see
after please).

@Paul : in fact we have no choice : we already use a precision model
(forced by double), only we don't really care to make it consistent.
pointA=point B is 17 digits precise, but as soon as there are
multiplication (or even worse: division!), we loose precision, without
taking care of it! Multiplication and division happens a lot in PostGIS !
Example : ` SELECT 1234567890.1234566::double precision*10.0 =
1234567890.1234567::double precision*10.0` yield TRUE, while it returns
false without x10.
With current PostGIS, we can design an example with 2 lines being parallel,
but sharing an infinite number of points (http://hpics.li/58f194d , where
square with 2 colors are shared)!
Precision is not a choice except if we go CGAL like computation (Not the
point for PostGIS). But coherent precision is different from user defined
tolerance.

I'm not asking to rewrite PostGIS to permit an user specified tolerance, as
it would be very difficult and  not even clear on theoretical ground (whole
model of DE-9IM would be false, as in Paul example).
I just would like not to have false geometric result because the *numeric*
computation is wrong due to intrinsic double limitation. This is a computer
problem, not a PostGIS problem!
For some function it is just okay to say it works up to a precision (like
the ST_OffSetCurve, robust up to 12 digits), but we can't do this for
predicates.
If predicates are guarantees to be true, each one can then add a custom
tolerance on top of it in plpgsql if needed.


the question "left or right of the line?" seems robust, so it guarantees
good behavior for higher order geometries (like intersects of line and
line). Same for the question "is inside of circle".

Yet the question "is on line" is not robust (as proven by current
ST_Intersects behavior).
Maybe we could rewrite the question "is on line" using "left or right?",
taking  advantage of the known inherent double precision limit?
for example : http://hpics.li/ccf7b74
(we construct 2 points at double_precision/2 distance on perpendicular
line. If the 2 points have different side OR at least one is on line, we
say the point is on the line).
I'm not sure about this though because I don't know how the perpendicular
construction will react in bad cases, I'll test this this in few hours.

I'm trying things with geos, but i don't know basic thinks, like how to see
result of a printf in geos while executing sql query.

Cheers,
R?mi C

NB1 : I rewrote some functions with 50 digits precision using postgres
"numeric" type for test purpose, but it is slow and not clever to rewrite
PostGIS in plpgsql !
NB2 : (Maybe an imperfect fix would be to re-declare every function to work
with not double but say long double (2 more bytes)? Yet would it guarantees
anything?.)





2013/11/7 Paul Ramsey <pramsey at cleverelephant.ca>

> I can certainly see the practical utility of a global tolerance value,
> since it would allow some more symmetric results, like
>
> PtC = LineA.Intersection(LineB)
> LineA.Intersects(PtC) == true
> LineB.Intersects(PtC) == true
>
> An expected euclidian result that occurs in almost no cases in our code.
>
> Of course a tolerance introduces different inconsistencies. Within a
> tolerance it's possible for
>
> LineA.Intersects(PtC) == true
> LineB.Intersects(PtC) == true
> Even when A is parallel to B and A != B.
>
> Not something which can happen in a true euclidian space, but
> something that can happen in our tolerance space.
>
> However, it's a concept that needs to reside at the very bottom of a
> geometry library, I don't see how we introduce it without irreparably
> shaking everything we've already built above.
>
> P.
>
>
> On Thu, Nov 7, 2013 at 8:44 AM, Sandro Santilli <strk at keybit.net> wrote:
> > On Thu, Nov 07, 2013 at 02:36:26PM +0100, R?mi Cura wrote:
> >> Hey,
> >> after some testing it appears that simply evaluating the = with
> precision
> >> in mind won't suffice.
> >>
> >> The core of the problem is that the determinant algorithm geos uses
> seems
> >> to be designed to robustly say left or right of a line, but not
> robustly on
> >> the line.
> >>
> >> So an idea may be to offset the line to the left and the right with the
> >> precision limit distance, and use the robust determinant to test if the
> >> point is right of the left and left of the right (between).
> >>
> >> Can I have some answers on this please? Is it doable, ?
> >
> > Sorry Remi, I think everything is possible, but it needs careful
> > thinking about consequence of changes. If the design it to be robust,
> > ading a toleranc would defeat the design, which isn't a sane thing
> > to do. Rather you might want another class to do things the way
> > you want them to be done.
> >
> > It's still not clear to me what the goal is, nor if the provision
> > of "Fixed Precision Model" helps already at reaching that goal.
> >
> > Are you trying to find a point that's guaranteed to be found on a
> > line by robust intersection finder ? My take is that it is
> > impossible unless the point you pick is a pre-existing vertex of
> > that line, and so the only way to do it is by also modifying the
> > line you want to snap to (ie: snap line to closest-point-on-line).
> >
> > --strk;
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131108/18419186/attachment-0001.html>

From remi.cura at gmail.com  Fri Nov  8 01:09:55 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Fri, 8 Nov 2013 10:09:55 +0100
Subject: [geos-devel] [postgis-devel] SNapPointToLine : GEOS : where is
 the code for st_intersects between line and point?
In-Reply-To: <527C7BC5.3090500@telus.net>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<20131106112130.GC28088@cdb>
	<CAJvUf_swX7bbkx2EjtCoJDmFykYuz-M81Ro1VQJ6oBS39Xn_3A@mail.gmail.com>
	<527C7BC5.3090500@telus.net>
Message-ID: <CAJvUf_tk1srbKadN_t-Jc0yTg=dJL7jt_=hTQHkFgMkwg2AEMA@mail.gmail.com>

Hey,
sorry this mail thread has been split :-/

As I said I don't have knowledge nor intention to modify in depth PostGIS
general tolerance policy.
Numeric precision in computing is a very serious research field, and
PostGIS can't hope to have all the latest cool stuff from it.

However I strongly share your feeling that when working with real
geographical imprecise data (almost the case) we need user-specified
tolerance. I think we can somehow handle this if  base functions (like
ST_Intersects) are working properly.

There even is a wiki page about tolerance, it appears to be a recurrent
issue.

As a matter of fact I tried to add tolerance to
"RobustDeterminant::signOfDet2x2" , but I understood it was pointless
because the problem of point being on line is chaotic.
So there is no way to solve this simply replacing "=" by
"difference<a_tolerance". (I tried it in geo sand with plain plpgsql).

As I said in other mail, maybe we could work around by transforming the "is
on line" to "is left/right"?

Cheers,

R?mi-C


2013/11/8 Martin Davis <mtnclimb at telus.net>

>  Another aspect to consider is that the "pixel size" in DP is not a fixed
> value.  It gets smaller closer to the origin.
>
> So how would you deal with this fact?  Use the pixel size of the largest
> coordinate of the line segment? Of the geometry?  Would this introduce
> inconsistencies across geometries?
>
> My gut feel about this is that if this kind of "coherent behaviour" is
> desired then the API client (user) should be required to specify the
> tolerance they care about.  This is how Oracle Spatial works (more or
> less).  This has a wider advantage in that it is then possible to guarantee
> that geometries constructed according to the tolerance model are guaranteed
> to be consistent in that model.
>
> I *think* that it would be of only medium difficulty to add a tolerance to
> the predicate computation.  For overlay operations this is harder, since it
> would require snap-rounding to be used.  There would probably be
> performance impacts in both, however.
>
>
> On 11/6/2013 4:41 AM, R?mi Cura wrote:
>
> Hey Sandro =) ,
> thanks for the answer and the suggestion ( switching to geos-devel)
> *(Hey geos list, please see the message history in reverse order)*
>
> I'm not looking for infinite precision, just *coherent* double precision.
>
> Using double precision to represent a line/point gives you a
> representation like pixels in images, where size of pixel in x is min
> precision in (that is a round to 15 to17 digits) (same in y). This is not
> an issue (for me).
>
>  This issue is not about geometry being approximated (rounded), but about
> st_intersects miss-computing with this rounded geom.
>
>  Currently st_intersects computing for a point and a line is false, more
> exactly the computing seems to be more precise than the geometry, thus
> giving false answer.
> I'm not sure about this, and i don't know either what kind of change could
> solve this problem.
>
>  Maybe the computing of "robust determinant" needs to be relaxed a bit to
> output 0 in close cases.
>
>
>  I can give you example of points being exactly on the double precision
> grid (ie 17 digits in each coordinate),  exactly on the theoretical line
> (up to 10^-30), and yet rejected by st_intersects.
>
>
>
>  Cheers,
> R?mi-C
>
>
>
> 2013/11/6 Sandro Santilli <strk at keybit.net>
>
>> On Wed, Nov 06, 2013 at 11:15:12AM +0100, R?mi Cura wrote:
>>
>> > This is without speaking of custom precision model, ie working with the
>> > postgis 'infinite' precision (double precision, 15 to 17 digits)
>>
>>  Double precision is not 'infinite'.
>> Maybe CGAL would give you a closer approximation, but GEOS doesn't support
>> the CGAL-like arbitrary precision.
>>
>> You might want to subscribe to geos-devel and start a thread there if
>> you intend to work on that side of the architecture.
>>
>> --strk;
>>  _______________________________________________
>> postgis-devel mailing list
>> postgis-devel at lists.osgeo.org
>> http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
>>
>
>  Hey Nicklas,
> thanks for your answer.
>
> I'm simply trying to solve a problem in current ST_Intersects behavior
> regarding a point and a line. IN most of the case, a point on a line(to
> double limit precision) is not on the line for st_intersects !
>
>  it works as intended in very very few cases (ie, all the points that
> intersects a line is a very sparse set and is not a line at all !).
>
>  Here is a simple illustration : http://hpics.li/c3485b5 represents a
> line with max zoom : it is all the point that follow the line equation and
> are rounded to the(16 or 17 digits)
> http://hpics.li/f30aeb7 now the big points represents the point that are
> on the line for ST_Intersect, in a favorable case (bad case could mean no
> points at all).
>
>  This is without speaking of custom precision model, ie working with the
> postgis 'infinite' precision (double precision, 15 to 17 digits)
>
>  I tried several workaround (like several random walk along the line to
> find a point that st_intersects like,
> and also reverse engineer to find which points are seen on the line by
> st_intersects (related to prime factorization of slope it appears) ).
>
>  The issue is there is a flaw in ST_Intersects and in bad cases there is
> no workaround.
>
>  Could you elaborate about 'native' functions please?
>
>  Cheers,
>
> R?mi-C
>
>
>
> 2013/11/6 Nicklas Av?n <nicklas.aven at jordogskog.no>
>
>>   I think postgis has native functions for st_intersects when at least
>> one of the geometries is a point. And there is two paths in the code. One
>> that prepares the "not point" geometry if it is to be used multiple times
>> and one that doesn't.
>>
>>  I do not get the idea do far. Is it a tolerance you are implementing?
>>
>>
>>
>>  Best regards
>> Nicklad
>>
>>   Skickat fr?n min Samsung Mobil
>>
>>
>>
>> -------- Originalmeddelande --------
>> Fr?n: R?mi Cura <remi.cura at gmail.com>
>> Datum: 06-11-2013 8:59 (GMT+01:00)
>> Till: PostGIS Development Discussion <postgis-devel at lists.osgeo.org>
>> Rubrik: [postgis-devel] SNapPointToLine : GEOS : where is the code for
>> st_intersects between line and point?
>>
>>
>> Hey,
>> I've been working on a ST_SnapPointToLine for the past week,
>> by reverse engineering when points are considered to be on line by
>> st_intersect.
>>
>>  The (classic) problem is purely a numerical issue, and I suspect a
>> problem in design of st_intersects.
>>
>>
>>  So far my solution doesn't work for all line, can someone please point
>> me in the right direction in GEOS so I can see if something can be improved
>> regarding precision.
>>
>>  I know where the API is, but I'm looking for the exact part that decide
>> if a point and a line intersects.
>>
>>  Cheers,
>>
>>  R?mi-C
>>
>>  _______________________________________________
>> postgis-devel mailing list
>> postgis-devel at lists.osgeo.org
>> http://lists.osgeo.org/cgi-bin/mailman/listinfo/postgis-devel
>
>
>
>
>
> _______________________________________________
> geos-devel mailing listgeos-devel at lists.osgeo.orghttp://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
>
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2013.0.3426 / Virus Database: 3222/6813 - Release Date: 11/06/13
>
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131108/a8f5c178/attachment.html>

From strk at keybit.net  Fri Nov  8 01:37:59 2013
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 8 Nov 2013 10:37:59 +0100
Subject: [geos-devel] SnapPointToLine : GEOS : where is the code for
 st_intersects between line and point?
In-Reply-To: <CAJvUf_vBvxEsBRoiV9GMQo7rGRgHMHhhGh+qzfbcso1ScyvuYw@mail.gmail.com>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
	<CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
	<20131107164421.GK4188@cdb>
	<CACowWR2Yp62T8brfHbGJTZzmrFdZNVmMbAAsWZWekChDB2W_ng@mail.gmail.com>
	<CAJvUf_vBvxEsBRoiV9GMQo7rGRgHMHhhGh+qzfbcso1ScyvuYw@mail.gmail.com>
Message-ID: <20131108093759.GD2838@cdb>

On Fri, Nov 08, 2013 at 09:58:37AM +0100, R?mi Cura wrote:

> With current PostGIS, we can design an example with 2 lines being parallel,
> but sharing an infinite number of points (http://hpics.li/58f194d , where
> square with 2 colors are shared)!

The grid in your drawing is a "fixed" precision grid.
The floating point precision grid is different, with precision reducing
(cells augmenting) as you move away from the origin.

> I'm not asking to rewrite PostGIS to permit an user specified tolerance, as
> it would be very difficult and  not even clear on theoretical ground (whole
> model of DE-9IM would be false, as in Paul example).
> I just would like not to have false geometric result because the *numeric*
> computation is wrong due to intrinsic double limitation. This is a computer
> problem, not a PostGIS problem!

By "false geometric results" you don't mean predicates here, right ?
I mean, predicates are supposedly correct, while _constructive_ geometries
suffer from the impossibility to represent the solution.

> If predicates are guarantees to be true, each one can then add a custom
> tolerance on top of it in plpgsql if needed.

This is like ST_DWithin proceeding, right ?

> Yet the question "is on line" is not robust (as proven by current
> ST_Intersects behavior).

Are you saying you have a point and a line and you can matematically
prove that the point is on the line while GEOS says otherwise ?

Or are you saying that math isn't appropriate for your more
ground-anchored need ?

> Maybe we could rewrite the question "is on line" using "left or right?",
> taking  advantage of the known inherent double precision limit?
> for example : http://hpics.li/ccf7b74
> (we construct 2 points at double_precision/2 distance on perpendicular
> line. If the 2 points have different side OR at least one is on line, we
> say the point is on the line).
> I'm not sure about this though because I don't know how the perpendicular
> construction will react in bad cases, I'll test this this in few hours.

Welcome. May I suggest you write testcases as you move forward ?

> I'm trying things with geos, but i don't know basic thinks, like how to see
> result of a printf in geos while executing sql query.

See code wrapped in DEBUG macros.
It usually prints to stderr and you find the output in postgresql logs.

--strk;

From strk at keybit.net  Fri Nov  8 01:41:00 2013
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 8 Nov 2013 10:41:00 +0100
Subject: [geos-devel] Bug with avoid intersection - willing to fund fix
In-Reply-To: <CAGyPVTvMWgXc6wFSisrVL1+wK_tTYXx+fD1Q_xW30N_H+-airg@mail.gmail.com>
References: <CAGyPVTvMWgXc6wFSisrVL1+wK_tTYXx+fD1Q_xW30N_H+-airg@mail.gmail.com>
Message-ID: <20131108094100.GE2838@cdb>

Hi George,
it's not clear to me from the QGIS tickets that there is a problem in GEOS.
Can you come up with a clear description of what you think is a GEOS bug ?

--strk;

On Thu, Nov 07, 2013 at 11:09:33AM -0200, George Silva wrote:
> Hello everyone,
> 
> We have an important QGis digitizing issue that is blocking and generating
> a lot of work for us.
> 
> The issue has been described in more then 3 bugs (
> http://hub.qgis.org/issues/8174, http://hub.qgis.org/issues/4880, and
> others) and it really hurts QGis image as a software.
> 
> This is something that cannot happen. In our current setup we have 10 GIS
> Analysts working on a large area, doing land use maps. This problem is
> killing us!
> 
> I'm cross posting in GEOS dev list to see if there is interest in fixing
> this bug, one way or the other and our company is willing to fund part (or
> depending how much, all the costs) of the development of this fix.
> 
> Please, let me know.
> 
> Thanks!

From georger.silva at gmail.com  Fri Nov  8 03:05:26 2013
From: georger.silva at gmail.com (George Silva)
Date: Fri, 8 Nov 2013 09:05:26 -0200
Subject: [geos-devel] Bug with avoid intersection - willing to fund fix
Message-ID: <CAGyPVTtHUwgoGFDanNdwq4dNwz4fDA++j2j+-gYG_3HjVGFZ+w@mail.gmail.com>

Hello Sandro.

I dont think this is a GEOS bug. I was following the various discussions on
this bug/unexpected behavior.

On one of them, in discussion with Marco, you said that it might be a
problem with GEOSDifference. And after that theres our chat in IRC, which
seems to fit the problem.

We can easily test this inserting the geometries directly in Postgis, I
mean, the result of an ST_Difference.

Im not sure where the bug resides, but I would like to come up with
alternatives, or at least a very clear method of constructing these
polygons in Qgis that will not result in errors.

It seems to me that if the new polygon only intersects another one, works,
but that is not always the case when doing land use maps.

The plain simple test that Qgis MUST pass is that polygons created with
avoid intersections options, should have NO topological errors.

Im just travelling right now, but we'll come up with test cases.

Anyone on Qgis community has any ideas?

Thanks everyone
Em 08/11/2013 07:41, "Sandro Santilli" <strk at keybit.net> escreveu:
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131108/8c93e97a/attachment.html>

From strk at keybit.net  Fri Nov  8 03:15:57 2013
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 8 Nov 2013 12:15:57 +0100
Subject: [geos-devel] Bug with avoid intersection - willing to fund fix
In-Reply-To: <CAGyPVTtHUwgoGFDanNdwq4dNwz4fDA++j2j+-gYG_3HjVGFZ+w@mail.gmail.com>
References: <CAGyPVTtHUwgoGFDanNdwq4dNwz4fDA++j2j+-gYG_3HjVGFZ+w@mail.gmail.com>
Message-ID: <20131108111557.GB5770@cdb>

On Fri, Nov 08, 2013 at 09:05:26AM -0200, George Silva wrote:
> Hello Sandro.
> 
> I dont think this is a GEOS bug. I was following the various discussions on
> this bug/unexpected behavior.
> 
> On one of them, in discussion with Marco, you said that it might be a
> problem with GEOSDifference. And after that theres our chat in IRC, which
> seems to fit the problem.
> 
> We can easily test this inserting the geometries directly in Postgis, I
> mean, the result of an ST_Difference.

What's known about GEOS is that constructive operations (like ST_Difference)
can return geometries which don't necessarely match anymore with the inputs.

This is due to:

 - Introduction of intersection points, slightly changing slope of the
   2 new segments created from the slope of the original segment.

 - Vertex coordinates shift, due to heuristic attempts at working around
   robustness errors thrown while using floating point precision.

> Im not sure where the bug resides, but I would like to come up with
> alternatives, or at least a very clear method of constructing these
> polygons in Qgis that will not result in errors.

As I just commented on the second ticket you reported, I think QGIS is
making wrong assumptions about the results from overlay operations in GEOS.

> It seems to me that if the new polygon only intersects another one, works,
> but that is not always the case when doing land use maps.
> 
> The plain simple test that Qgis MUST pass is that polygons created with
> avoid intersections options, should have NO topological errors.

My suggested solution is polygonizing the linework resulting from the
editing (after noding).
The result from polygonizer is always topologically correct (assuming
input is correctly noded).

--strk;

 () ?ASCII ribbon campaign        - against html e-mail
 /\ ?http://www.asciiribbon.org ? - against proprietary attachments

From remi.cura at gmail.com  Fri Nov  8 04:01:56 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Fri, 8 Nov 2013 13:01:56 +0100
Subject: [geos-devel] SnapPointToLine : GEOS : where is the code for
 st_intersects between line and point?
In-Reply-To: <20131108093759.GD2838@cdb>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
	<CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
	<20131107164421.GK4188@cdb>
	<CACowWR2Yp62T8brfHbGJTZzmrFdZNVmMbAAsWZWekChDB2W_ng@mail.gmail.com>
	<CAJvUf_vBvxEsBRoiV9GMQo7rGRgHMHhhGh+qzfbcso1ScyvuYw@mail.gmail.com>
	<20131108093759.GD2838@cdb>
Message-ID: <CAJvUf_stYef5i=PyEZuxbyW-WnxoC27njUnD82PWVu_8FHfxXw@mail.gmail.com>

Hey,

In fact this is not even a grid,
representing any number with a float introduces an error that is not
"simple" (like regular), because the mantissa thing.
But I told you I'm not an expert at all.


You can exactly represent a line with a regular grid if you accept some
digits lose, by walking along line with smaller step and rounding result (I
do it in plpgsql with numeric(100,50)).

However the precision of computing the determinant (ie asking if point is
left,on,right) badly decrease when moving away from extremities.
This is why the code already iteratively cut the initial line into smaller
pieces until a trusted result is found.

Yep you are right for ST_DWithin. Even with this you still need a robust
intersect test (for area building for instance).

"Are you saying you have a point and a line and you can mathematically
prove that the point is on the line while GEOS says otherwise ?"
Yep, it's all the problem ! in fact according to geos (st_intersect) lines
have *very* few points, and some line have no points except extremities !
AS I said the
spacing of the point found bi st_intersects seems to follow the
prime decomposition of the slope (or 1/slope) of the segment. Problem
occurs when slope is not a finite number.


The whole problem comes from using exact math formula with inexact
computations means. This has been somehow tackled by using a "robust"
determinant sign, unfortunately this robustness is about saying left or
right.

:-) Thanks for the typs about DEBUG, I'll try to find this , and also the
place where postgres store it's log.

Many thanks for your patience with a beginner like me ^^

Cheers,
R?mi-C





2013/11/8 Sandro Santilli <strk at keybit.net>

> On Fri, Nov 08, 2013 at 09:58:37AM +0100, R?mi Cura wrote:
>
> > With current PostGIS, we can design an example with 2 lines being
> parallel,
> > but sharing an infinite number of points (http://hpics.li/58f194d ,
> where
> > square with 2 colors are shared)!
>
> The grid in your drawing is a "fixed" precision grid.
> The floating point precision grid is different, with precision reducing
> (cells augmenting) as you move away from the origin.
>
> > I'm not asking to rewrite PostGIS to permit an user specified tolerance,
> as
> > it would be very difficult and  not even clear on theoretical ground
> (whole
> > model of DE-9IM would be false, as in Paul example).
> > I just would like not to have false geometric result because the
> *numeric*
> > computation is wrong due to intrinsic double limitation. This is a
> computer
> > problem, not a PostGIS problem!
>
> By "false geometric results" you don't mean predicates here, right ?
> I mean, predicates are supposedly correct, while _constructive_ geometries
> suffer from the impossibility to represent the solution.
>
> > If predicates are guarantees to be true, each one can then add a custom
> > tolerance on top of it in plpgsql if needed.
>
> This is like ST_DWithin proceeding, right ?
>
> > Yet the question "is on line" is not robust (as proven by current
> > ST_Intersects behavior).
>
> Are you saying you have a point and a line and you can matematically
> prove that the point is on the line while GEOS says otherwise ?
>
> Or are you saying that math isn't appropriate for your more
> ground-anchored need ?
>
> > Maybe we could rewrite the question "is on line" using "left or right?",
> > taking  advantage of the known inherent double precision limit?
> > for example : http://hpics.li/ccf7b74
> > (we construct 2 points at double_precision/2 distance on perpendicular
> > line. If the 2 points have different side OR at least one is on line, we
> > say the point is on the line).
> > I'm not sure about this though because I don't know how the perpendicular
> > construction will react in bad cases, I'll test this this in few hours.
>
> Welcome. May I suggest you write testcases as you move forward ?
>
> > I'm trying things with geos, but i don't know basic thinks, like how to
> see
> > result of a printf in geos while executing sql query.
>
> See code wrapped in DEBUG macros.
> It usually prints to stderr and you find the output in postgresql logs.
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131108/5d44caa8/attachment.html>

From strk at keybit.net  Fri Nov  8 04:11:10 2013
From: strk at keybit.net (Sandro Santilli)
Date: Fri, 8 Nov 2013 13:11:10 +0100
Subject: [geos-devel] SnapPointToLine : GEOS : where is the code for
 st_intersects between line and point?
In-Reply-To: <CAJvUf_stYef5i=PyEZuxbyW-WnxoC27njUnD82PWVu_8FHfxXw@mail.gmail.com>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
	<CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
	<20131107164421.GK4188@cdb>
	<CACowWR2Yp62T8brfHbGJTZzmrFdZNVmMbAAsWZWekChDB2W_ng@mail.gmail.com>
	<CAJvUf_vBvxEsBRoiV9GMQo7rGRgHMHhhGh+qzfbcso1ScyvuYw@mail.gmail.com>
	<20131108093759.GD2838@cdb>
	<CAJvUf_stYef5i=PyEZuxbyW-WnxoC27njUnD82PWVu_8FHfxXw@mail.gmail.com>
Message-ID: <20131108121110.GC5770@cdb>

On Fri, Nov 08, 2013 at 01:01:56PM +0100, R?mi Cura wrote:

> "Are you saying you have a point and a line and you can mathematically
> prove that the point is on the line while GEOS says otherwise ?"
> Yep, it's all the problem ! in fact according to geos (st_intersect) lines
> have *very* few points, and some line have no points except extremities !

You mean they have no _representable_ points.
You're right you can mathematically represent them,
only not in floating point notation.

> AS I said the
> spacing of the point found bi st_intersects seems to follow the
> prime decomposition of the slope (or 1/slope) of the segment. Problem
> occurs when slope is not a finite number.
> 
> The whole problem comes from using exact math formula with inexact
> computations means. This has been somehow tackled by using a "robust"
> determinant sign, unfortunately this robustness is about saying left or
> right.
> 
> :-) Thanks for the typs about DEBUG, I'll try to find this , and also the
> place where postgres store it's log.
>
> Many thanks for your patience with a beginner like me ^^

Thank you for going deep into this !

--strk;

From remi.cura at gmail.com  Fri Nov  8 08:29:34 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Fri, 8 Nov 2013 17:29:34 +0100
Subject: [geos-devel] SnapPointToLine : GEOS : where is the code for
 st_intersects between line and point?
In-Reply-To: <20131108121110.GC5770@cdb>
References: <5xk0qko2lcor277cim09whcb.1383730857975@email.android.com>
	<CAJvUf_v4PL-1NHh35cS2ab_RFWx6jWY7vs-oY6ER2OTM2_o9MA@mail.gmail.com>
	<1383742362.4463.17.camel@gis-debian>
	<CAJvUf_ueOxQyKduEOzXVXiRxSt+B6fp2YWr-_OvBp+ug8Y-1zw@mail.gmail.com>
	<CAJvUf_tanDc6yJRT9bOCpJvMTPR=LesATSMDi2a1d6d+XM-=8Q@mail.gmail.com>
	<20131107164421.GK4188@cdb>
	<CACowWR2Yp62T8brfHbGJTZzmrFdZNVmMbAAsWZWekChDB2W_ng@mail.gmail.com>
	<CAJvUf_vBvxEsBRoiV9GMQo7rGRgHMHhhGh+qzfbcso1ScyvuYw@mail.gmail.com>
	<20131108093759.GD2838@cdb>
	<CAJvUf_stYef5i=PyEZuxbyW-WnxoC27njUnD82PWVu_8FHfxXw@mail.gmail.com>
	<20131108121110.GC5770@cdb>
Message-ID: <CAJvUf_vm+WnUbz+DtBtYdHCFXtYdCH6MRhqOiE1NGNTbR528Pg@mail.gmail.com>

Hey,
at first sight it seems to work =)
Yet I don't know how to be sure of it.

"for example : http://hpics.li/ccf7b74
(we construct 2 points at double_precision/2 distance on perpendicular
line. If the 2 points have different side OR at least one is on line, we
say the point is on the line).
I'm not sure about this though because I don't know how the perpendicular
construction will react in bad cases, I'll test this this in few hours."

still need some care, and i'm afraid my c code is very far from efficient
(or even nice).

What could be a testing strategy?
_I intend to test st_intersects vs the result of "st_closestpoint" and
 "ST_Line_Interpolate_Point", the test being that it should always
intersect.
_I can try to generate maybe 300*300 points at the geometry precision limit
and try to see which one are on the line.

_as the change is small, maybe we can see if this passes the usual
st_intersect test?

I'm full of good will but with rusty C skills.

Cheers,
R?mi-C





2013/11/8 Sandro Santilli <strk at keybit.net>

> On Fri, Nov 08, 2013 at 01:01:56PM +0100, R?mi Cura wrote:
>
> > "Are you saying you have a point and a line and you can mathematically
> > prove that the point is on the line while GEOS says otherwise ?"
> > Yep, it's all the problem ! in fact according to geos (st_intersect)
> lines
> > have *very* few points, and some line have no points except extremities !
>
> You mean they have no _representable_ points.
> You're right you can mathematically represent them,
> only not in floating point notation.
>
> > AS I said the
> > spacing of the point found bi st_intersects seems to follow the
> > prime decomposition of the slope (or 1/slope) of the segment. Problem
> > occurs when slope is not a finite number.
> >
> > The whole problem comes from using exact math formula with inexact
> > computations means. This has been somehow tackled by using a "robust"
> > determinant sign, unfortunately this robustness is about saying left or
> > right.
> >
> > :-) Thanks for the typs about DEBUG, I'll try to find this , and also the
> > place where postgres store it's log.
> >
> > Many thanks for your patience with a beginner like me ^^
>
> Thank you for going deep into this !
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131108/82a7f1a8/attachment.html>

From remi.cura at gmail.com  Wed Nov 13 02:34:47 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Wed, 13 Nov 2013 11:34:47 +0100
Subject: [geos-devel] code for st_split?
Message-ID: <CAJvUf_u=gLLWQxV_j5KUT0SYCaPes+qdXLEoCitUFwmsAXSo+Q@mail.gmail.com>

Hey dear List,

I'm making progress in my tests for the modification of LineIntersector
regarding intersection of point and line.

I encountered a problem : I realized ST_Split(line, point) is not working
(either with or without the proposed changes).

Could you point me to the C code of this function so I can rapidely check
if something strange is going on?
I suspect the code was duplicate so I would have to report changes also in
ST_Split code.

Thanks,

Cheers
,
R?mi-C
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131113/1a11c104/attachment.html>

From remi.cura at gmail.com  Wed Nov 13 03:45:46 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Wed, 13 Nov 2013 12:45:46 +0100
Subject: [geos-devel] code for ST_ClosestPoint
Message-ID: <CAJvUf_sMkDDBwXgP+QHYy9KKRWJWsQ+14=5nxwZ4zVrpsmnMgw@mail.gmail.com>

Hey List,
another question :
where is the exact code for the function ST_ClosestPoint?

It seems that ST_LineInterpolatePoint is always correct, where
ST_ClosestPoint is sometime wrong.

I suspect a bad design in ST_ClosestPoint.

I can work around, but I'm curious to see why it doesn't always work.

Cheers,

R?mi-C
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131113/a4eb6a2e/attachment.html>

From strk at keybit.net  Wed Nov 13 09:17:59 2013
From: strk at keybit.net (Sandro Santilli)
Date: Wed, 13 Nov 2013 18:17:59 +0100
Subject: [geos-devel] code for st_split?
In-Reply-To: <CAJvUf_u=gLLWQxV_j5KUT0SYCaPes+qdXLEoCitUFwmsAXSo+Q@mail.gmail.com>
References: <CAJvUf_u=gLLWQxV_j5KUT0SYCaPes+qdXLEoCitUFwmsAXSo+Q@mail.gmail.com>
Message-ID: <20131113171759.GI26697@cdb>

On Wed, Nov 13, 2013 at 11:34:47AM +0100, R?mi Cura wrote:

> Could you point me to the C code of this function so I can rapidely check
> if something strange is going on?

ST_Split is implemented in PostGIS, not GEOS.
liblwgeom/lwgeom_geos_split.c

--strk;

From strk at keybit.net  Wed Nov 13 09:21:42 2013
From: strk at keybit.net (Sandro Santilli)
Date: Wed, 13 Nov 2013 18:21:42 +0100
Subject: [geos-devel] code for ST_ClosestPoint
In-Reply-To: <CAJvUf_sMkDDBwXgP+QHYy9KKRWJWsQ+14=5nxwZ4zVrpsmnMgw@mail.gmail.com>
References: <CAJvUf_sMkDDBwXgP+QHYy9KKRWJWsQ+14=5nxwZ4zVrpsmnMgw@mail.gmail.com>
Message-ID: <20131113172142.GJ26697@cdb>

On Wed, Nov 13, 2013 at 12:45:46PM +0100, R?mi Cura wrote:
> Hey List,
> another question :
> where is the exact code for the function ST_ClosestPoint?

ST_ClosestPoint is implemented in PostGIS, not GEOS:
LWGEOM_closestpointpostgis/lwgeom_functions_basic.c

> It seems that ST_LineInterpolatePoint is always correct, where
> ST_ClosestPoint is sometime wrong.

ST_LineInterpolatePoint is also in PostGIS:
LWGEOM_line_interpolate_point in postgis/lwgeom_functions_analytic.c

How to find out yourself:

Start from postgis.sql, find the signature, then grep the
referenced C function name in postgis/*.c and follow up from there.

--strk;

From remi.cura at gmail.com  Wed Nov 13 23:59:16 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Thu, 14 Nov 2013 08:59:16 +0100
Subject: [geos-devel] code for ST_ClosestPoint
In-Reply-To: <20131113172142.GJ26697@cdb>
References: <CAJvUf_sMkDDBwXgP+QHYy9KKRWJWsQ+14=5nxwZ4zVrpsmnMgw@mail.gmail.com>
	<20131113172142.GJ26697@cdb>
Message-ID: <CAJvUf_vhgLftkVDbqEcaz5fOqPfEpDE8s5NsPG_0cn6BbQFspQ@mail.gmail.com>

Thanks,
I tried the "rgrep" thing in geos folder, I had no idea some of PostGis C
functions were not in GEOS.

Cheers,

R?mi-C


2013/11/13 Sandro Santilli <strk at keybit.net>

> On Wed, Nov 13, 2013 at 12:45:46PM +0100, R?mi Cura wrote:
> > Hey List,
> > another question :
> > where is the exact code for the function ST_ClosestPoint?
>
> ST_ClosestPoint is implemented in PostGIS, not GEOS:
> LWGEOM_closestpointpostgis/lwgeom_functions_basic.c
>
> > It seems that ST_LineInterpolatePoint is always correct, where
> > ST_ClosestPoint is sometime wrong.
>
> ST_LineInterpolatePoint is also in PostGIS:
> LWGEOM_line_interpolate_point in postgis/lwgeom_functions_analytic.c
>
> How to find out yourself:
>
> Start from postgis.sql, find the signature, then grep the
> referenced C function name in postgis/*.c and follow up from there.
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131114/bc8d98e2/attachment.html>

From strk at keybit.net  Thu Nov 14 06:33:41 2013
From: strk at keybit.net (Sandro Santilli)
Date: Thu, 14 Nov 2013 15:33:41 +0100
Subject: [geos-devel] code for ST_ClosestPoint
In-Reply-To: <CAJvUf_vhgLftkVDbqEcaz5fOqPfEpDE8s5NsPG_0cn6BbQFspQ@mail.gmail.com>
References: <CAJvUf_sMkDDBwXgP+QHYy9KKRWJWsQ+14=5nxwZ4zVrpsmnMgw@mail.gmail.com>
	<20131113172142.GJ26697@cdb>
	<CAJvUf_vhgLftkVDbqEcaz5fOqPfEpDE8s5NsPG_0cn6BbQFspQ@mail.gmail.com>
Message-ID: <20131114143341.GC5273@cdb>

On Thu, Nov 14, 2013 at 08:59:16AM +0100, R?mi Cura wrote:
> Thanks,
> I tried the "rgrep" thing in geos folder, I had no idea some of PostGis C
> functions were not in GEOS.

Many are. The "fast ones" you can usually tell are done in C >:)

--strk;

 () ?ASCII ribbon campaign        - against html e-mail
 /\ ?http://www.asciiribbon.org ? - against proprietary attachments

From pramsey at cleverelephant.ca  Thu Nov 14 13:51:25 2013
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 14 Nov 2013 13:51:25 -0800
Subject: [geos-devel] code for ST_ClosestPoint
In-Reply-To: <20131114143341.GC5273@cdb>
References: <CAJvUf_sMkDDBwXgP+QHYy9KKRWJWsQ+14=5nxwZ4zVrpsmnMgw@mail.gmail.com>
	<20131113172142.GJ26697@cdb>
	<CAJvUf_vhgLftkVDbqEcaz5fOqPfEpDE8s5NsPG_0cn6BbQFspQ@mail.gmail.com>
	<20131114143341.GC5273@cdb>
Message-ID: <CACowWR37Rya1gSFyqvhmbf0PU7EBzY8K1swD0yceDRMj0J5uJg@mail.gmail.com>

It's a schmozzle, what can I say. All the distance functions and easy
measurements (area, perimeter) pre-dated GEOS, and were left in place
when GEOS arrived. And native functions were found to be unambiguously
faster than calling into GEOS (no real surprise) so much additional
functionality (particularly for linear things, like LRS) and
enhancements to old functionality (like distance on curves) has been
added to the native code base.

P.

On Thu, Nov 14, 2013 at 6:33 AM, Sandro Santilli <strk at keybit.net> wrote:
> On Thu, Nov 14, 2013 at 08:59:16AM +0100, R?mi Cura wrote:
>> Thanks,
>> I tried the "rgrep" thing in geos folder, I had no idea some of PostGis C
>> functions were not in GEOS.
>
> Many are. The "fast ones" you can usually tell are done in C >:)
>
> --strk;
>
>  ()  ASCII ribbon campaign        - against html e-mail
>  /\  http://www.asciiribbon.org   - against proprietary attachments
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From geos-trac at osgeo.org  Tue Nov 19 00:18:22 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 19 Nov 2013 08:18:22 -0000
Subject: [geos-devel] [GEOS] #673: You can configure with --enable-python
 and no swig, but build fails
Message-ID: <044.c617731285739e10288094dd109a3832@osgeo.org>

#673: You can configure with --enable-python and no swig, but build fails
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 There's no error raised by ./configure if you pass --enable-python but no
 swig is found on the system. But at "make" time you get:
 {{{
 Making all in python
 make[3]: Entering directory `/usr/src/geos/geos-trunk/b/swig/python'
 SWIG is disabled, can't build geos_wrap.cxx
 make[3]: *** [geos_wrap.cxx] Error 1
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/673>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Nov 19 00:58:25 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 19 Nov 2013 08:58:25 -0000
Subject: [geos-devel] [GEOS] #673: You can configure with
 --enable-python and no swig, but build fails
In-Reply-To: <044.c617731285739e10288094dd109a3832@osgeo.org>
References: <044.c617731285739e10288094dd109a3832@osgeo.org>
Message-ID: <053.99a993722dba8a65232b6f956ae82969@osgeo.org>

#673: You can configure with --enable-python and no swig, but build fails
------------------------+---------------------------------------------------
 Reporter:  strk        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:  3.4.3                     
Component:  Default     |      Version:  3.4.2                     
 Severity:  Unassigned  |   Resolution:  fixed                     
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by strk):

  * status:  new => closed
  * resolution:  => fixed


Comment:

 Fixed in trunk with r3961

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/673#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Nov 19 03:03:31 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 19 Nov 2013 11:03:31 -0000
Subject: [geos-devel] [GEOS] #674: VoronoiDiagramBuilder uses fmax which
 breaks MSVC11 build
Message-ID: <051.34b8b3bd49ce7b90459d4ad1d06686e0@osgeo.org>

#674: VoronoiDiagramBuilder uses fmax which breaks MSVC11 build
-------------------------+--------------------------------------------------
 Reporter:  Twiddeldidu  |       Owner:  geos-devel@?              
     Type:  defect       |      Status:  new                       
 Priority:  major        |   Milestone:  3.4.3                     
Component:  Default      |     Version:  svn-trunk                 
 Severity:  Unassigned   |    Keywords:  msvc                      
-------------------------+--------------------------------------------------
 The build configuration already has defined NOMINMAX in the CMakeLists.txt
 but there is still a compiling issue with msvc11 (x64) and CMake.

 {{{
 elseif(MSVC)

   # Set pedantic mode by default
   #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
   string(REGEX REPLACE "/W[0-9]" "/W4" CMAKE_CXX_FLAGS
 "${CMAKE_CXX_FLAGS}")

   if(MSVC80 OR MSVC90 OR MSVC10 OR MSVC11)

     # Option is to enable the /MP switch for Visual Studio 2005 or later
     option(GEOS_MSVC_ENABLE_MP
       "Set to ON to build GEOS with the /MP option (Visual Studio 2005 and
 above)." ON)
     mark_as_advanced(GEOS_MSVC_ENABLE_MP)
     if(GEOS_MSVC_ENABLE_MP)
       set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
     endif()
     message(STATUS "Setting Visual Studio 2005+ option /MP to
 ${GEOS_MSVC_ENABLE_MP}")

     add_definitions(-D_SCL_SECURE_NO_WARNINGS)
     add_definitions(-D_CRT_SECURE_NO_WARNINGS)

 ==     add_definitions(-DNOMINMAX) ==

   endif()

 endif()
 }}}

 There is a problem with '''VoronoiDiagramBuilder.cpp''' because it uses
 fmax. I made a quick patch changing this to the generic std::max instead
 of using fmax.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/674>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Nov 19 03:56:44 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 19 Nov 2013 11:56:44 -0000
Subject: [geos-devel] [GEOS] #674: VoronoiDiagramBuilder uses fmax which
 breaks MSVC11 build
In-Reply-To: <051.34b8b3bd49ce7b90459d4ad1d06686e0@osgeo.org>
References: <051.34b8b3bd49ce7b90459d4ad1d06686e0@osgeo.org>
Message-ID: <060.f4315038a350d185058e7d7c1ee6dcce@osgeo.org>

#674: VoronoiDiagramBuilder uses fmax which breaks MSVC11 build
-------------------------+--------------------------------------------------
 Reporter:  Twiddeldidu  |       Owner:  geos-devel@?              
     Type:  defect       |      Status:  new                       
 Priority:  major        |   Milestone:  3.4.3                     
Component:  Default      |     Version:  svn-trunk                 
 Severity:  Unassigned   |    Keywords:  msvc                      
-------------------------+--------------------------------------------------

Comment(by Twiddeldidu):

 QuadEdgeSubdivisionTest has same issue.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/674#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From r.cohen at realty-property.com  Thu Nov 21 09:35:06 2013
From: r.cohen at realty-property.com (Riccardo Cohen)
Date: Thu, 21 Nov 2013 18:35:06 +0100
Subject: [geos-devel] help compiling windows library
Message-ID: <528E444A.9@realty-property.com>

Hello
I try to compile Geos on windows 7 with nmake (I have visual studio 2010)
I did the following :
- download   geos-3.4.2.tar.bz2  package from http://trac.osgeo.org/geos/
- unzip
- run following command :

"C:\Program Files\Microsoft Visual Studio 10.0\Common7\Tools\vsvars32.bat"
J:
cd \develtry\geos\geos-3.4.2
nmake /f makefile.vc MSVC_VER=1600

I have the following error at the very end of the compile process :

if exist geos.lib del geos.lib
Le chemin d'acc?s sp?cifi? est introuvable.
NMAKE : fatal error U1077: 'if' : code retour '0x1'
Stop.
cd ..

(means the specified path was not found)

I cannot say why there is this error, at what line of the makefile, and 
how to solve this.

I tried to download the yesterday snapshot and had exactly the same error.
I tried to add /I to avoid stopping at error but the library is still 
not linked.

Thanks for your help.

-- 
Riccardo Cohen
+33 (0)6 09 83 64 49
Soci?t? Realty-Property.com
16 rue de Belle Isle
37100 Tours
France

<http://www.appartement-maison.fr>

From r.cohen at realty-property.com  Thu Nov 21 09:20:33 2013
From: r.cohen at realty-property.com (Riccardo Cohen)
Date: Thu, 21 Nov 2013 18:20:33 +0100
Subject: [geos-devel] help compiling windows library
Message-ID: <528E40E1.9000307@realty-property.com>

Hello
I try to compile Geos on windows 7 with nmake (I have visual studio 2010)
I did the following :
- download   geos-3.4.2.tar.bz2  package from http://trac.osgeo.org/geos/
- unzip
- run following command :

"C:\Program Files\Microsoft Visual Studio 10.0\Common7\Tools\vsvars32.bat"
J:
cd \develtry\geos\geos-3.4.2
nmake /f makefile.vc MSVC_VER=1600

I have the following error at the very end of the compile process :

if exist geos.lib del geos.lib
Le chemin d'acc?s sp?cifi? est introuvable.
NMAKE : fatal error U1077: 'if' : code retour '0x1'
Stop.
cd ..

(means the specified path was not found)

I cannot say why there is this error, at what line of the makefile, and 
how to solve this.

I tried to download the yesterday snapshot and had exactly the same error.
I tried to add /I to avoid stopping at error but the library is still 
not linked.

Thanks for your help.

-- 
Riccardo Cohen
+33 (0)6 09 83 64 49
Soci?t? Realty-Property.com
16 rue de Belle Isle
37100 Tours
France

<http://www.appartement-maison.fr>

From mateusz at loskot.net  Thu Nov 21 12:30:19 2013
From: mateusz at loskot.net (Mateusz Loskot)
Date: Thu, 21 Nov 2013 20:30:19 +0000
Subject: [geos-devel] help compiling windows library
In-Reply-To: <528E444A.9@realty-property.com>
References: <528E444A.9@realty-property.com>
Message-ID: <CABUeae_KUA8oecLJGGYR+uMuCr=FcPGF9A+NK0iOxVMZYU4pRw@mail.gmail.com>

On 21 November 2013 17:35, Riccardo Cohen <r.cohen at realty-property.com> wrote:
> Hello
> I try to compile Geos on windows 7 with nmake (I have visual studio 2010)
> I did the following :
> - download   geos-3.4.2.tar.bz2  package from http://trac.osgeo.org/geos/
> - unzip
> - run following command :
> [...]


Please, double check you follow the instructions as specified here

http://trac.osgeo.org/geos/wiki/BuildingOnWindowsWithNMake

Best regards,
-- 
Mateusz  Loskot, http://mateusz.loskot.net

From r.cohen at realty-property.com  Thu Nov 21 23:06:59 2013
From: r.cohen at realty-property.com (Riccardo Cohen)
Date: Fri, 22 Nov 2013 08:06:59 +0100
Subject: [geos-devel] help compiling windows library
In-Reply-To: <CABUeae_KUA8oecLJGGYR+uMuCr=FcPGF9A+NK0iOxVMZYU4pRw@mail.gmail.com>
References: <528E444A.9@realty-property.com>
	<CABUeae_KUA8oecLJGGYR+uMuCr=FcPGF9A+NK0iOxVMZYU4pRw@mail.gmail.com>
Message-ID: <528F0293.3060906@realty-property.com>

Thanks Mateusz  Loskot

I've double checked it and triple checked it when looking for a 
solution. I ran autogen.bat (which seems to be unnecessary since all 
headers are provided in tar.bz package) but it did not change. I did not 
run svn_repo_revision.sh since I did not download from svn, and the 
geos_svn_revision.h is present.

All compilation went all right, only linking seems to fail. Is there any 
additional option to set in nmake command to show more errors and line 
numbers, I could not find any (I'm not using nmake very often).


Thanks



On 21/11/13 21:30, Mateusz Loskot wrote:
> On 21 November 2013 17:35, Riccardo Cohen <r.cohen at realty-property.com> wrote:
>> Hello
>> I try to compile Geos on windows 7 with nmake (I have visual studio 2010)
>> I did the following :
>> - download   geos-3.4.2.tar.bz2  package from http://trac.osgeo.org/geos/
>> - unzip
>> - run following command :
>> [...]
>
>
> Please, double check you follow the instructions as specified here
>
> http://trac.osgeo.org/geos/wiki/BuildingOnWindowsWithNMake
>
> Best regards,
>

-- 
Riccardo Cohen
+33 (0)6 09 83 64 49
Soci?t? Realty-Property.com
16 rue de Belle Isle
37100 Tours
France

<http://www.appartement-maison.fr>

From mateusz at loskot.net  Fri Nov 22 01:31:18 2013
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 22 Nov 2013 09:31:18 +0000
Subject: [geos-devel] help compiling windows library
In-Reply-To: <528F0293.3060906@realty-property.com>
References: <528E444A.9@realty-property.com>
	<CABUeae_KUA8oecLJGGYR+uMuCr=FcPGF9A+NK0iOxVMZYU4pRw@mail.gmail.com>
	<528F0293.3060906@realty-property.com>
Message-ID: <CABUeae_AAxbycX1YJ4NC63OSyYNatEhqT_EUxwEtqemsGzhk7w@mail.gmail.com>

On 22 November 2013 07:06, Riccardo Cohen <r.cohen at realty-property.com> wrote:
> All compilation went all right, only linking seems to fail. Is there any
> additional option to set in nmake command to show more errors and line
> numbers, I could not find any (I'm not using nmake very often).

I guess, the NMAKE makefiles need to be updated by adding one of recently
added .cpp files to http://svn.osgeo.org/geos/trunk/src/Makefile.vc

If linker fails, then there must be name of "unresolved external symbol"
included in the error message.
This will give you clues what class/function may be missing,
search for it in the GEOS sources tree, check if corresponding
.cpp is in the makefile, add it if it isn't.

That's usually my take on this kind of problems with NMAKE.

p.s. Once you apply necessary update to makefile.vc,
please submit patch to http://trac.osgeo.org/geos/

Best regards,
-- 
Mateusz  Loskot, http://mateusz.loskot.net

From r.cohen at realty-property.com  Fri Nov 22 07:47:01 2013
From: r.cohen at realty-property.com (Riccardo Cohen)
Date: Fri, 22 Nov 2013 16:47:01 +0100
Subject: [geos-devel] help compiling windows library
In-Reply-To: <CABUeae_AAxbycX1YJ4NC63OSyYNatEhqT_EUxwEtqemsGzhk7w@mail.gmail.com>
References: <528E444A.9@realty-property.com>	<CABUeae_KUA8oecLJGGYR+uMuCr=FcPGF9A+NK0iOxVMZYU4pRw@mail.gmail.com>	<528F0293.3060906@realty-property.com>
	<CABUeae_AAxbycX1YJ4NC63OSyYNatEhqT_EUxwEtqemsGzhk7w@mail.gmail.com>
Message-ID: <528F7C75.2050808@realty-property.com>

Hi again.

What I've done is removing the line :

	if exist $(LIBNAME) del $(LIBNAME)

Then it compiled the lib. And I had to run the command several times to 
have all compiled.... I really hate nmake :) even with /I...

I used the latest snapshot to be sure to have everything. I had to add 
the following lines in src/makefile.vc :

   triangulate\VoronoiDiagramBuilder.$(EXT) \
   geom\util\LinearComponentExtracter.$(EXT) \
   geom\util\PointExtracter.$(EXT) \
   geom\util\PolygonExtracter.$(EXT)

(I did not submit patch since I have no geos account)

I suggest also changing the help about debug flag: it is BUILD_DEBUG=YES 
and not DEBUG=1

Then I put the geostest.c in a small console application and compiled it 
properly and ran it ok.

I prefer to link statically and not use dlls. I recompiled the library 
with Debug Multithread (/MTd) instead of /MDd and the test ran 
correctly. (I had to comment the vld usage also)


Now some questions arise :

1) is it normal that the geos.lib is 45Mb ? Looks like really huge.

2) I found no tutorial on geos site
. I found one here 
https://docs.djangoproject.com/en/dev/ref/contrib/gis/geos/ but it is 
mainly python I think, and I'm using C++... I'm a bit lost with this.

My first step would be to cut a polygon into 2 pieces with a polyline, 
but I can't even find how to create a new Polygon objet. I've used 
NetTopologySuite that is related to JTS for .Net but it does not help me 
for C++


Thanks for your help.



On 22/11/13 10:31, Mateusz Loskot wrote:
> On 22 November 2013 07:06, Riccardo Cohen <r.cohen at realty-property.com> wrote:
>> All compilation went all right, only linking seems to fail. Is there any
>> additional option to set in nmake command to show more errors and line
>> numbers, I could not find any (I'm not using nmake very often).
>
> I guess, the NMAKE makefiles need to be updated by adding one of recently
> added .cpp files to http://svn.osgeo.org/geos/trunk/src/Makefile.vc
>
> If linker fails, then there must be name of "unresolved external symbol"
> included in the error message.
> This will give you clues what class/function may be missing,
> search for it in the GEOS sources tree, check if corresponding
> .cpp is in the makefile, add it if it isn't.
>
> That's usually my take on this kind of problems with NMAKE.
>
> p.s. Once you apply necessary update to makefile.vc,
> please submit patch to http://trac.osgeo.org/geos/
>
> Best regards,
>

-- 
Riccardo Cohen
+33 (0)6 09 83 64 49
Soci?t? Realty-Property.com
16 rue de Belle Isle
37100 Tours
France

<http://www.appartement-maison.fr>

From remi.cura at gmail.com  Fri Nov 22 08:25:00 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Fri, 22 Nov 2013 17:25:00 +0100
Subject: [geos-devel] improvement of point/line intersection
Message-ID: <CAJvUf_tUKS1hX6-4HA052W9XS8rFhcy2vZWeP_+oVYYajqFT_w@mail.gmail.com>

Hey dear list,

after much worries,
I just submitted a pull request to propose a very tiny change in geos
LineIntersector.cpp file.

Now a point is considered to be on a line much more often, as line have a
controlled thickness.

The thickness of a line is defined so that a point that shall be on the
line with the correct first 12 digits would be on it, even if the other
digits are wrong.

All lines have not the same thickness is real world units, because the
tickness depends of the number of digits in coordinates.


This improves a lot of function working with points and lines, and
shouldn't change computation time (there where already 2 tests).


With synthetic data precise to the millimeter across all France, I had no
error for 1 million lines.
Theoretically there could still be some lines that have no points. (one in
10 million or so?)
I can't solve this without changing much more the current RobustDet
algorithm.


Cheers,


R?mi-C
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131122/ada6f463/attachment.html>

From remi.cura at gmail.com  Fri Nov 22 09:36:59 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Fri, 22 Nov 2013 18:36:59 +0100
Subject: [geos-devel] improvement of point/line intersection
In-Reply-To: <CAJvUf_tUKS1hX6-4HA052W9XS8rFhcy2vZWeP_+oVYYajqFT_w@mail.gmail.com>
References: <CAJvUf_tUKS1hX6-4HA052W9XS8rFhcy2vZWeP_+oVYYajqFT_w@mail.gmail.com>
Message-ID: <CAJvUf_tui7hGiZBMo+6Usb-Y2HFm_vj2unzUQX-_mAk0zU5K_g@mail.gmail.com>

Seems like it doesn't pass the compil test on github server.
It works fine on my computer.
The change is about 10 lines of C.
Could someone please tell me what is wrong.

Thanks,
R?mi-C




2013/11/22 R?mi Cura <remi.cura at gmail.com>

> Hey dear list,
>
> after much worries,
> I just submitted a pull request to propose a very tiny change in geos
> LineIntersector.cpp file.
>
> Now a point is considered to be on a line much more often, as line have a
> controlled thickness.
>
> The thickness of a line is defined so that a point that shall be on the
> line with the correct first 12 digits would be on it, even if the other
> digits are wrong.
>
> All lines have not the same thickness is real world units, because the
> tickness depends of the number of digits in coordinates.
>
>
> This improves a lot of function working with points and lines, and
> shouldn't change computation time (there where already 2 tests).
>
>
> With synthetic data precise to the millimeter across all France, I had no
> error for 1 million lines.
> Theoretically there could still be some lines that have no points. (one in
> 10 million or so?)
> I can't solve this without changing much more the current RobustDet
> algorithm.
>
>
> Cheers,
>
>
> R?mi-C
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131122/bef243e7/attachment.html>

From strk at keybit.net  Mon Nov 25 03:57:25 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 25 Nov 2013 12:57:25 +0100
Subject: [geos-devel] improvement of point/line intersection
In-Reply-To: <CAJvUf_tUKS1hX6-4HA052W9XS8rFhcy2vZWeP_+oVYYajqFT_w@mail.gmail.com>
References: <CAJvUf_tUKS1hX6-4HA052W9XS8rFhcy2vZWeP_+oVYYajqFT_w@mail.gmail.com>
Message-ID: <20131125115718.GA2994@localhost>

Thanks for the contribution Remi, but I wouldn't accept a change
that would make such a tolerance implicit. Not at that low level.

If the tolerance value is configurable via a parameter that'd
be fine. Note that a parameter should already exist in form
of a "precision model", but I haven't looked at the details
of neither the current GEOS code nor your patch yet.

--strk;

On Fri, Nov 22, 2013 at 05:25:00PM +0100, R?mi Cura wrote:
> Hey dear list,
> 
> after much worries,
> I just submitted a pull request to propose a very tiny change in geos
> LineIntersector.cpp file.
> 
> Now a point is considered to be on a line much more often, as line have a
> controlled thickness.
> 
> The thickness of a line is defined so that a point that shall be on the
> line with the correct first 12 digits would be on it, even if the other
> digits are wrong.
> 
> All lines have not the same thickness is real world units, because the
> tickness depends of the number of digits in coordinates.
> 
> 
> This improves a lot of function working with points and lines, and
> shouldn't change computation time (there where already 2 tests).
> 
> 
> With synthetic data precise to the millimeter across all France, I had no
> error for 1 million lines.
> Theoretically there could still be some lines that have no points. (one in
> 10 million or so?)
> I can't solve this without changing much more the current RobustDet
> algorithm.
> 
> 
> Cheers,
> 
> 
> R?mi-C

From remi.cura at gmail.com  Mon Nov 25 05:16:40 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Mon, 25 Nov 2013 14:16:40 +0100
Subject: [geos-devel] improvement of point/line intersection
In-Reply-To: <20131125115718.GA2994@localhost>
References: <CAJvUf_tUKS1hX6-4HA052W9XS8rFhcy2vZWeP_+oVYYajqFT_w@mail.gmail.com>
	<20131125115718.GA2994@localhost>
Message-ID: <CAJvUf_tOaV+AZnr4w0EyCp02SXbLxhNULbnPpMB-W58f5+Ys_Q@mail.gmail.com>

Yep,
thanks for the answer,

First *there is already an implicit tolerance*, only it is not enforced
coherently for each function.
The absolute minimum is 10^-17, so 2 points having the same first 17 digits
and then different digits will be seen as identical. In some case it can be
up to the first 15 digits.


Second, I totally agree this should be defined by user, so in my 10 lines
of code,
there is a variable named
"

  double min_precision = pow(10,-12) ;

"
It should be set at build I guess. As you know I'm not too familiar with C
dev, and so I don't know if it should be preprovessor, or global variable,
or macro or plain parameter ...


About the value of "min_precision",  min value is 10^-17 , theoretically we
should go as far as 10^-8 to guarantee correct result on max 8 digits in
(x2-x1) or (y2-y1).
I choose 10^-12 because theoretically error is less than 1/ 10^7, and it
makes the line very very thin (10^-12*(P1-P2)) (example : 2 points are 1000
km from one other, the thickness of the line would be 10 micro meters )


Cheers,

R?mi-C


2013/11/25 Sandro Santilli <strk at keybit.net>

> Thanks for the contribution Remi, but I wouldn't accept a change
> that would make such a tolerance implicit. Not at that low level.
>
> If the tolerance value is configurable via a parameter that'd
> be fine. Note that a parameter should already exist in form
> of a "precision model", but I haven't looked at the details
> of neither the current GEOS code nor your patch yet.
>
> --strk;
>
> On Fri, Nov 22, 2013 at 05:25:00PM +0100, R?mi Cura wrote:
> > Hey dear list,
> >
> > after much worries,
> > I just submitted a pull request to propose a very tiny change in geos
> > LineIntersector.cpp file.
> >
> > Now a point is considered to be on a line much more often, as line have a
> > controlled thickness.
> >
> > The thickness of a line is defined so that a point that shall be on the
> > line with the correct first 12 digits would be on it, even if the other
> > digits are wrong.
> >
> > All lines have not the same thickness is real world units, because the
> > tickness depends of the number of digits in coordinates.
> >
> >
> > This improves a lot of function working with points and lines, and
> > shouldn't change computation time (there where already 2 tests).
> >
> >
> > With synthetic data precise to the millimeter across all France, I had no
> > error for 1 million lines.
> > Theoretically there could still be some lines that have no points. (one
> in
> > 10 million or so?)
> > I can't solve this without changing much more the current RobustDet
> > algorithm.
> >
> >
> > Cheers,
> >
> >
> > R?mi-C
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131125/bd8f6a6e/attachment.html>

From remi.cura at gmail.com  Wed Nov 27 09:23:51 2013
From: remi.cura at gmail.com (=?UTF-8?Q?R=C3=A9mi_Cura?=)
Date: Wed, 27 Nov 2013 18:23:51 +0100
Subject: [geos-devel] improvement of point/line intersection
In-Reply-To: <CAJvUf_tOaV+AZnr4w0EyCp02SXbLxhNULbnPpMB-W58f5+Ys_Q@mail.gmail.com>
References: <CAJvUf_tUKS1hX6-4HA052W9XS8rFhcy2vZWeP_+oVYYajqFT_w@mail.gmail.com>
	<20131125115718.GA2994@localhost>
	<CAJvUf_tOaV+AZnr4w0EyCp02SXbLxhNULbnPpMB-W58f5+Ys_Q@mail.gmail.com>
Message-ID: <CAJvUf_tyNim56URgt9WLUziEK-hj0T3xeAhxRVGYtHXVAUfxOQ@mail.gmail.com>

Note :
using the sfcgal backend makes my changes don't work !

I don't know enough of SFCGAL to guess why.

Cheers,

R?mi-C



2013/11/25 R?mi Cura <remi.cura at gmail.com>

> Yep,
> thanks for the answer,
>
> First *there is already an implicit tolerance*, only it is not enforced
> coherently for each function.
> The absolute minimum is 10^-17, so 2 points having the same first 17
> digits and then different digits will be seen as identical. In some case it
> can be up to the first 15 digits.
>
>
> Second, I totally agree this should be defined by user, so in my 10 lines
> of code,
> there is a variable named
> "
>
>   double min_precision = pow(10,-12) ;
>
> "
> It should be set at build I guess. As you know I'm not too familiar with C
> dev, and so I don't know if it should be preprovessor, or global variable,
> or macro or plain parameter ...
>
>
> About the value of "min_precision",  min value is 10^-17 , theoretically
> we should go as far as 10^-8 to guarantee correct result on max 8 digits in
> (x2-x1) or (y2-y1).
> I choose 10^-12 because theoretically error is less than 1/ 10^7, and it
> makes the line very very thin (10^-12*(P1-P2)) (example : 2 points are 1000
> km from one other, the thickness of the line would be 10 micro meters )
>
>
> Cheers,
>
> R?mi-C
>
>
> 2013/11/25 Sandro Santilli <strk at keybit.net>
>
>> Thanks for the contribution Remi, but I wouldn't accept a change
>> that would make such a tolerance implicit. Not at that low level.
>>
>> If the tolerance value is configurable via a parameter that'd
>> be fine. Note that a parameter should already exist in form
>> of a "precision model", but I haven't looked at the details
>> of neither the current GEOS code nor your patch yet.
>>
>> --strk;
>>
>> On Fri, Nov 22, 2013 at 05:25:00PM +0100, R?mi Cura wrote:
>> > Hey dear list,
>> >
>> > after much worries,
>> > I just submitted a pull request to propose a very tiny change in geos
>> > LineIntersector.cpp file.
>> >
>> > Now a point is considered to be on a line much more often, as line have
>> a
>> > controlled thickness.
>> >
>> > The thickness of a line is defined so that a point that shall be on the
>> > line with the correct first 12 digits would be on it, even if the other
>> > digits are wrong.
>> >
>> > All lines have not the same thickness is real world units, because the
>> > tickness depends of the number of digits in coordinates.
>> >
>> >
>> > This improves a lot of function working with points and lines, and
>> > shouldn't change computation time (there where already 2 tests).
>> >
>> >
>> > With synthetic data precise to the millimeter across all France, I had
>> no
>> > error for 1 million lines.
>> > Theoretically there could still be some lines that have no points. (one
>> in
>> > 10 million or so?)
>> > I can't solve this without changing much more the current RobustDet
>> > algorithm.
>> >
>> >
>> > Cheers,
>> >
>> >
>> > R?mi-C
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20131127/8824b9d5/attachment.html>

From geos-trac at osgeo.org  Sat Nov 30 00:04:00 2013
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Nov 2013 08:04:00 -0000
Subject: [geos-devel] [GEOS] #676: WKT reader interprets M coordinate as Z
Message-ID: <047.d9c2d012e3e10d844aa7236c467d4e4f@osgeo.org>

#676: WKT reader interprets M coordinate as Z
------------------------+---------------------------------------------------
 Reporter:  mwtoews     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.5.0                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 With an older-style WKT string with 3 dimensions (e.g., 'POINT (1 2 3)'),
 the obvious interpretation is to map the dimensions: X, Y, Z.

 However, with a newer-style WKT string with 3 dimensions, the data still
 get mapped to dimensions: X, Y, Z. Even for 'POINT M(1 2 3)', which should
 be interpreted by GEOS as 'POINT (1 2)', since there isn't any Z
 dimension.

 The inconsistency is pointed out by the WKB reader, which correctly reads
 'POINT M(1 2 3)' as
 0101000040000000000000F03F00000000000000400000000000000840 (from PostGIS)
 which does not have a Z dimension, and is written by WKTReader correctly
 as 'POINT (1 2)'.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/676>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

