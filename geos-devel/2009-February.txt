From doublebyte at gmail.com  Mon Feb  2 07:03:37 2009
From: doublebyte at gmail.com (Jo)
Date: Mon Feb  2 07:03:39 2009
Subject: [geos-devel] Polygons and Circles Problem
Message-ID: <23ab5f0a0902020403u5491564evea7bd48fe75fd17b@mail.gmail.com>

Hi,
I am tryin to calculate the largest circle that fits inside a polygon
and the smallest circle that encloses a polygon, and I was wondering
if there is any good algorithm to do it with the GEOS API. Im new to
GEOS, so I would really appreciate any advice or even ideas that you
could give me on this!

                                                cheers,

                                                          Jo

-- 
"Law 1: Every program can be optimised to be smaller. Law 2: There's
always one more bug. Corollary: Every program can be reduced to a
one-line bug."

         (Lubarsky's Laws of Cybernetic Entomology)
From mbdavis at refractions.net  Mon Feb  2 11:25:51 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Mon Feb  2 11:25:46 2009
Subject: [geos-devel] Polygons and Circles Problem
In-Reply-To: <23ab5f0a0902020403u5491564evea7bd48fe75fd17b@mail.gmail.com>
References: <23ab5f0a0902020403u5491564evea7bd48fe75fd17b@mail.gmail.com>
Message-ID: <49871E8F.4080102@refractions.net>

No, there isn't anything to do this in GEOS.   You could try a brute 
force approach, if your inputs aren't too large.  Otherwise the 
algorithms are complex.

Jo wrote:
> Hi,
> I am tryin to calculate the largest circle that fits inside a polygon
> and the smallest circle that encloses a polygon, and I was wondering
> if there is any good algorithm to do it with the GEOS API. Im new to
> GEOS, so I would really appreciate any advice or even ideas that you
> could give me on this!
>
>                                                 cheers,
>
>                                                           Jo
>
>   

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From robe.dnd at cityofboston.gov  Mon Feb  2 12:05:31 2009
From: robe.dnd at cityofboston.gov (Obe, Regina)
Date: Mon Feb  2 12:05:37 2009
Subject: [geos-devel] Polygons and Circles Problem
In-Reply-To: <49871E8F.4080102@refractions.net>
References: <23ab5f0a0902020403u5491564evea7bd48fe75fd17b@mail.gmail.com>
	<49871E8F.4080102@refractions.net>
Message-ID: <53F9CF533E1AA14EA1F8C5C08ABC08D20559DC3C@ZDND.DND.boston.cob>

Jo,

Not sure if this helps but I think Bruce posted a PostGIS solution to at
least the smallest circle that encloses a polygon.  Not sure if you can
use it, but might give you some ideas how to go since PostGIS piggy
backs on GEOS.

http://postgis.refractions.net/pipermail/postgis-users/2008-October/0217
38.html

Hope that helps,
Regina

 

-----Original Message-----
From: geos-devel-bounces@lists.osgeo.org
[mailto:geos-devel-bounces@lists.osgeo.org] On Behalf Of Martin Davis
Sent: Monday, February 02, 2009 11:26 AM
To: GEOS Development List
Subject: Re: [geos-devel] Polygons and Circles Problem

No, there isn't anything to do this in GEOS.   You could try a brute 
force approach, if your inputs aren't too large.  Otherwise the 
algorithms are complex.

Jo wrote:
> Hi,
> I am tryin to calculate the largest circle that fits inside a polygon
> and the smallest circle that encloses a polygon, and I was wondering
> if there is any good algorithm to do it with the GEOS API. Im new to
> GEOS, so I would really appreciate any advice or even ideas that you
> could give me on this!
>
>                                                 cheers,
>
>                                                           Jo
>
>   

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

_______________________________________________
geos-devel mailing list
geos-devel@lists.osgeo.org
http://lists.osgeo.org/mailman/listinfo/geos-devel
-----------------------------------------
The substance of this message, including any attachments, may be
confidential, legally privileged and/or exempt from disclosure
pursuant to Massachusetts law. It is intended
solely for the addressee. If you received this in error, please
contact the sender and delete the material from any computer.
From geos-trac at osgeo.org  Mon Feb  2 14:12:29 2009
From: geos-trac at osgeo.org (GEOS)
Date: Mon Feb  2 14:12:30 2009
Subject: [geos-devel] [GEOS] #228: import python bindings fails
Message-ID: <047.5985c73c13d6291585a0bb6b52e9a1ee@osgeo.org>

#228: import python bindings fails
------------------------+---------------------------------------------------
 Reporter:  martinm     |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.1.0                     
Component:  Default     |     Version:  3.1.0rc1                  
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 Importing python module fails:
 {{{
 >>> import geos
 Traceback (most recent call last):
   File "<stdin>", line 1, in <module>
   File "/Library/Python/2.5/site-packages/geos/geos.py", line 60, in
 <module>
     class PySwigIterator(object):
   File "/Library/Python/2.5/site-packages/geos/geos.py", line 64, in
 PySwigIterator
     __swig_destroy__ = _geos.delete_PySwigIterator
 AttributeError: 'module' object has no attribute 'delete_PySwigIterator'
 }}}

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/228>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From sgillies at frii.com  Mon Feb  2 15:03:35 2009
From: sgillies at frii.com (Sean Gillies)
Date: Mon Feb  2 15:03:39 2009
Subject: [geos-devel] [GEOS] #228: import python bindings fails
In-Reply-To: <30fe546d0902021132w55bc6cb1v857e57e65fc1857c@mail.gmail.com>
References: <047.5985c73c13d6291585a0bb6b52e9a1ee@osgeo.org>
	<30fe546d0902021132w55bc6cb1v857e57e65fc1857c@mail.gmail.com>
Message-ID: <4C1F40E8-23D5-49A6-AA02-5673188C6925@frii.com>

Paul,

I stopped work on the SWIG wrappers for GEOS for three reasons

1) Abominable Python API derived from GEOS C++ (personal taste,  
admittedly)
2) Instability of C++ API between 2.2 and 3.0
3) Accessing libgeos_c via libffi and ctypes is more portable

As far as I know, Charlie is still supporting Ruby through SWIG, and I  
think that means that Python support remains pretty close. I do think  
that Python users should be using Shapely (outside of GeoDjango), but  
realize that people may want other options. Shapely requires Python  
2.4, and one could generate wrappers with SWIG that would work with  
2.2 or 2.3.

Sean

On Feb 2, 2009, at 12:32 PM, Paul Ramsey wrote:

> Sean,
>
> I've never really grokked the pythonic state of affairs. Let me try
> and relay my guess: the python code in GEOS svn is orphaned; all
> pythonic work is largely flowing through shapely now, which doesn't
> need any code in the GEOS svn. Is that right? If so, I'd like to
> replace the python code in the release with a README that says "go use
> shapely".
>
> P
>
>
> ---------- Forwarded message ----------
> From: GEOS <geos-trac@osgeo.org>
> Date: Mon, Feb 2, 2009 at 11:12 AM
> Subject: [geos-devel] [GEOS] #228: import python bindings fails
> To: undisclosed-recipients
>
>
> #228: import python bindings fails
> ------------------------ 
> +---------------------------------------------------
> Reporter:  martinm     |       Owner:  geos-devel@lists.osgeo.org
>    Type:  defect      |      Status:  new
> Priority:  major       |   Milestone:  3.1.0
> Component:  Default     |     Version:  3.1.0rc1
> Severity:  Unassigned  |    Keywords:
> ------------------------ 
> +---------------------------------------------------
> Importing python module fails:
> {{{
>>>> import geos
> Traceback (most recent call last):
>  File "<stdin>", line 1, in <module>
>  File "/Library/Python/2.5/site-packages/geos/geos.py", line 60, in
> <module>
>    class PySwigIterator(object):
>  File "/Library/Python/2.5/site-packages/geos/geos.py", line 64, in
> PySwigIterator
>    __swig_destroy__ = _geos.delete_PySwigIterator
> AttributeError: 'module' object has no attribute  
> 'delete_PySwigIterator'
> }}}
>
> --
> Ticket URL: <http://trac.osgeo.org/geos/ticket/228>
> GEOS <http://geos.refractions.net/>
> GEOS (Geometry Engine - Open Source) is a C++ port of the Java
> Topology Suite (JTS).
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From cfis at savagexi.com  Mon Feb  2 15:35:17 2009
From: cfis at savagexi.com (Charlie Savage)
Date: Mon Feb  2 15:52:50 2009
Subject: [geos-devel] [GEOS] #228: import python bindings fails
In-Reply-To: <4C1F40E8-23D5-49A6-AA02-5673188C6925@frii.com>
References: <047.5985c73c13d6291585a0bb6b52e9a1ee@osgeo.org>	<30fe546d0902021132w55bc6cb1v857e57e65fc1857c@mail.gmail.com>
	<4C1F40E8-23D5-49A6-AA02-5673188C6925@frii.com>
Message-ID: <49875905.9090700@savagexi.com>


> 2) Instability of C++ API between 2.2 and 3.0

Swig wrappers are based on the c api.


> 3) Accessing libgeos_c via libffi and ctypes is more portable
> 
> As far as I know, Charlie is still supporting Ruby through SWIG

Yeah, more or less.  We use the Ruby bindings all the time, so those are 
in good shape.  The python bindings should be close, but since we don't 
use them they are not as well tested.  What they really need is some 
good user feedback and testing.

Charlie
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/x-pkcs7-signature
Size: 3237 bytes
Desc: S/MIME Cryptographic Signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20090202/bef8bb56/smime.bin
From geos-trac at osgeo.org  Fri Feb  6 13:04:22 2009
From: geos-trac at osgeo.org (GEOS)
Date: Fri Feb  6 13:04:23 2009
Subject: [geos-devel] [GEOS] #229: Missing header
Message-ID: <048.a6d02e75f14fd608069b9006a6da5c29@osgeo.org>

#229: Missing header
-----------------------+----------------------------------------------------
 Reporter:  saurbier   |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect     |      Status:  new                       
 Priority:  trivial    |   Milestone:  3.1.0                     
Component:  Default    |     Version:  3.0.3                     
 Severity:  Annoyance  |    Keywords:                            
-----------------------+----------------------------------------------------
 The 3.0.3 default install (without modifying Makefiles) will not install

   [source:tags/3.0.3/source/headers/geos/precision/GeometrySnapper.h
 geos/precision/GeometrySnapper.h]

 but this file is referenced by

  [source:tags/3.0.3/source/headers/geos/geom/BinaryOp.h#L54
 geos/geom/BinaryOp.h]

 The !GeometrySnapper.h is excluded via "noinst_HEADERS" in the
 [source:tags/3.0.3/source/headers/geos/precision/Makefile.am Makefile.am]
 and subsequently the precision/Makefile(.in).

 This error is also present in the 3.1.0rc1:
   [source:trunk/source/headers/geos/geom/BinaryOp.h#L53
 geos/geom/BinaryOp.h]

   [source:trunk/source/headers/geos/precision/Makefile.am Makefile.am]

 Reference: [http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/131421
 FreeBSD bugreport]

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/229>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Sat Feb  7 18:30:05 2009
From: geos-trac at osgeo.org (GEOS)
Date: Sat Feb  7 18:30:07 2009
Subject: [geos-devel] Re: [GEOS] #229: Missing header
In-Reply-To: <048.a6d02e75f14fd608069b9006a6da5c29@osgeo.org>
References: <048.a6d02e75f14fd608069b9006a6da5c29@osgeo.org>
Message-ID: <057.7c9296f24aa8365ea4391cc95b7d97ae@osgeo.org>

#229: Missing header
-----------------------+----------------------------------------------------
 Reporter:  saurbier   |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect     |       Status:  closed                    
 Priority:  trivial    |    Milestone:  3.1.0                     
Component:  Default    |      Version:  3.0.3                     
 Severity:  Annoyance  |   Resolution:  fixed                     
 Keywords:             |  
-----------------------+----------------------------------------------------
Changes (by pramsey):

  * status:  new => closed
  * resolution:  => fixed

Comment:

 Updated in trunk at r2269 and in 3.0.x at r2270.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/229#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Tue Feb 24 21:33:09 2009
From: geos-trac at osgeo.org (GEOS)
Date: Tue Feb 24 21:33:10 2009
Subject: [geos-devel] [GEOS] #230: polygon intersection exception.
Message-ID: <047.3a0c6db6f88d01d586a7b184f1b88c19@osgeo.org>

#230: polygon intersection exception.
------------------------+---------------------------------------------------
 Reporter:  anigold     |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.1.0                     
Component:  Default     |     Version:  3.0.0                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 {{{
         std::string str = "POLYGON ((112.3903710739794900
 22.3851129617344210, 114.1261324827294900 22.3851129617344210,
 114.1261324827294900 23.5479374992368590, 112.3903710739794900
 23.5479374992368590, 112.3903710739794900 22.3851129617344210)) ";
         geos::geom::Geometry* pgeom0 = reader.read( str );

         str = "POLYGON ((114.0876590000000000 22.5249449999999990,
 114.1853440000000000 22.5531790000000000, 114.1704040000000000
 22.5438380000000010, 114.1423630000000000 22.5351350000000000,
 114.0874290000000000 22.5245199999999990, 114.0892680000000000
 22.5255820000000000, 114.0936350000000100 22.5266430000000000,
 114.0876590000000000 22.5249449999999990))";
         geos::geom::Geometry* pgeom1 = reader.read( str );

         geos::geom::Geometry* pint = pgeom0->intersection( pgeom1 );

 }}}

 when execute the last line code, the util::TopologyException will be
 throwed.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/230>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From mbdavis at refractions.net  Wed Feb 25 11:47:01 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Wed Feb 25 11:45:25 2009
Subject: [geos-devel] [GEOS] #230: polygon intersection exception.
In-Reply-To: <047.3a0c6db6f88d01d586a7b184f1b88c19@osgeo.org>
References: <047.3a0c6db6f88d01d586a7b184f1b88c19@osgeo.org>
Message-ID: <49A57605.6060709@refractions.net>

The second polygon is invalid - this is expected behaviour.

GEOS wrote:
> #230: polygon intersection exception.
> ------------------------+---------------------------------------------------
>  Reporter:  anigold     |       Owner:  geos-devel@lists.osgeo.org
>      Type:  defect      |      Status:  new                       
>  Priority:  major       |   Milestone:  3.1.0                     
> Component:  Default     |     Version:  3.0.0                     
>  Severity:  Unassigned  |    Keywords:                            
> ------------------------+---------------------------------------------------
>  {{{
>          std::string str = "POLYGON ((112.3903710739794900
>  22.3851129617344210, 114.1261324827294900 22.3851129617344210,
>  114.1261324827294900 23.5479374992368590, 112.3903710739794900
>  23.5479374992368590, 112.3903710739794900 22.3851129617344210)) ";
>          geos::geom::Geometry* pgeom0 = reader.read( str );
>
>          str = "POLYGON ((114.0876590000000000 22.5249449999999990,
>  114.1853440000000000 22.5531790000000000, 114.1704040000000000
>  22.5438380000000010, 114.1423630000000000 22.5351350000000000,
>  114.0874290000000000 22.5245199999999990, 114.0892680000000000
>  22.5255820000000000, 114.0936350000000100 22.5266430000000000,
>  114.0876590000000000 22.5249449999999990))";
>          geos::geom::Geometry* pgeom1 = reader.read( str );
>
>          geos::geom::Geometry* pint = pgeom0->intersection( pgeom1 );
>
>  }}}
>
>  when execute the last line code, the util::TopologyException will be
>  throwed.
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From mateusz at loskot.net  Wed Feb 25 18:16:17 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed Feb 25 18:16:22 2009
Subject: [geos-devel] [GEOS] #230: polygon intersection exception.
In-Reply-To: <49A57605.6060709@refractions.net>
References: <047.3a0c6db6f88d01d586a7b184f1b88c19@osgeo.org>
	<49A57605.6060709@refractions.net>
Message-ID: <49A5D141.5080907@loskot.net>

Martin,

Thanks for investigating. I've closed the ticket.


Martin Davis wrote:
> The second polygon is invalid - this is expected behaviour.
> 
> GEOS wrote:
>> #230: polygon intersection exception.
>> ------------------------+---------------------------------------------------
>>
>>  Reporter:  anigold     |       Owner:  geos-devel@lists.osgeo.org
>>      Type:  defect      |      Status:  new                      
>>  Priority:  major       |   Milestone:  3.1.0                    
>> Component:  Default     |     Version:  3.0.0                    
>>  Severity:  Unassigned  |    Keywords:                           
>> ------------------------+---------------------------------------------------
>>
>>  {{{
>>          std::string str = "POLYGON ((112.3903710739794900
>>  22.3851129617344210, 114.1261324827294900 22.3851129617344210,
>>  114.1261324827294900 23.5479374992368590, 112.3903710739794900
>>  23.5479374992368590, 112.3903710739794900 22.3851129617344210)) ";
>>          geos::geom::Geometry* pgeom0 = reader.read( str );
>>
>>          str = "POLYGON ((114.0876590000000000 22.5249449999999990,
>>  114.1853440000000000 22.5531790000000000, 114.1704040000000000
>>  22.5438380000000010, 114.1423630000000000 22.5351350000000000,
>>  114.0874290000000000 22.5245199999999990, 114.0892680000000000
>>  22.5255820000000000, 114.0936350000000100 22.5266430000000000,
>>  114.0876590000000000 22.5249449999999990))";
>>          geos::geom::Geometry* pgeom1 = reader.read( str );
>>
>>          geos::geom::Geometry* pint = pgeom0->intersection( pgeom1 );
>>
>>  }}}
>>
>>  when execute the last line code, the util::TopologyException will be
>>  throwed.
>>
>>  
>> ------------------------------------------------------------------------
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
> 


-- 
Mateusz Loskot, http://mateusz.loskot.net
Charter Member of OSGeo, http://osgeo.org
From geos-trac at osgeo.org  Thu Feb 26 09:08:39 2009
From: geos-trac at osgeo.org (GEOS)
Date: Thu Feb 26 09:08:41 2009
Subject: [geos-devel] [GEOS] #231: Glibc error when statically linking Geos
Message-ID: <050.8329d76143df337979a9a29ead607761@osgeo.org>

#231: Glibc error when statically linking Geos
------------------------+---------------------------------------------------
 Reporter:  yvesdaemen  |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.1.0                     
Component:  Core        |     Version:  3.0.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 When I statically link my C-program against Geos, the program crashes at
 the very end.

 I have been able to trace it back to the static string in io/WKBReader :
 BAD_GEOM_TYPE_MSG
 I cannot explain what goes wrong, but when I remove the static modifier
 (why is it there anyway?) and initialise the string inside the
 constructor, everything goes well.

 Before I linked dynamically, and I also got (for me) unexplainable
 Valgrind warnings at the end of my program. They probably come out worse
 now...

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/231>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Thu Feb 26 09:36:16 2009
From: geos-trac at osgeo.org (GEOS)
Date: Thu Feb 26 09:36:17 2009
Subject: [geos-devel] [GEOS] #232: Static string in WKBReader causes glibc
 errors when Geos is statically linked
Message-ID: <050.aefa73444722d937602daa5160f8caea@osgeo.org>

#232: Static string in WKBReader causes glibc errors when Geos is statically
linked
------------------------+---------------------------------------------------
 Reporter:  yvesdaemen  |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.1.0                     
Component:  Default     |     Version:  3.0.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I am statically linking Geos against my own C program. This program runs
 without problems, except until the very end when a glibc errors occurs.

 I have traced this back to the static string BAD_GEOM_TYPE_MSG. When I
 remove the static modifier and initialise the string inside the
 constructor, everything goes well.

 I did not get this error when linking dynamically, but Valgrind complained
 about an invalid free. This is probably the same thing, only my program
 did not crash on it.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/232>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Thu Feb 26 09:49:02 2009
From: geos-trac at osgeo.org (GEOS)
Date: Thu Feb 26 09:49:03 2009
Subject: [geos-devel] Re: [GEOS] #232: Static string in WKBReader causes
 glibc errors when Geos is statically linked
In-Reply-To: <050.aefa73444722d937602daa5160f8caea@osgeo.org>
References: <050.aefa73444722d937602daa5160f8caea@osgeo.org>
Message-ID: <059.3ed606c944b5a1ec12b7d74893bee06c@osgeo.org>

#232: Static string in WKBReader causes glibc errors when Geos is statically
linked
------------------------+---------------------------------------------------
 Reporter:  yvesdaemen  |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.1.0                     
Component:  Default     |      Version:  3.0.3                     
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------
Comment (by mloskot):

 yvesdaemen,

 Isn't it a duplicate of ticket #231 ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/232#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Thu Feb 26 09:50:36 2009
From: geos-trac at osgeo.org (GEOS)
Date: Thu Feb 26 09:50:37 2009
Subject: [geos-devel] Re: [GEOS] #232: Static string in WKBReader causes
 glibc errors when Geos is statically linked
In-Reply-To: <050.aefa73444722d937602daa5160f8caea@osgeo.org>
References: <050.aefa73444722d937602daa5160f8caea@osgeo.org>
Message-ID: <059.05383ebffbddf603005a283612a161ee@osgeo.org>

#232: Static string in WKBReader causes glibc errors when Geos is statically
linked
------------------------+---------------------------------------------------
 Reporter:  yvesdaemen  |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.1.0                     
Component:  Default     |      Version:  3.0.3                     
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------
Comment (by yvesdaemen):

 Yes,

 I've had some problems submitting the report.
 Sorry for the duplicate, you can reject one of them ;-)

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/232#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From adriano at arvus.com.br  Sat Feb 28 15:45:07 2009
From: adriano at arvus.com.br (Adriano C Naspolini)
Date: Sat Feb 28 15:51:53 2009
Subject: [geos-devel] Segmentation Fault in ARM platform
Message-ID: <49A9A253.7070302@arvus.com.br>

Hi people,
I recently installed gdal-1.6.0+geos-3.0.3 in my pc as in my target 
prataform (an ARM). Initially, i had an endianess problem with gdal (the 
target arm is little endian in bytes but big endian in words, so 0x1234 
becomes 0x3412 and 0x12345678 becomes 0x56781234). After patching 
shapelib it's working.
The problem now is with geos: a segmentation fault when I use Contains() 
function (also with Crosses(), there are certainly others). I think this 
could be the same endianness problem, or something like it, because the 
program runs normally on my pc.

Backtrace from GDB:
#0  0x2c327dfc in memcpy () from /lib/libc.so.6
#1  0x2c204d7c in std::basic_streambuf<char, std::char_traits<char> 
 >::xsgetn () from /usr/lib/libstdc++.so.5
#2  0x2c43e580 in std::istream::read () from /usr/lib/libstdc++.so.6
#3  0x2abb58a4 in geos::io::WKBReader::readGeometry (this=0x7f5ff8a0) at 
../../source/headers/geos/io/ByteOrderDataInStream.inl:58
#4  0x2aad8ed8 in GEOSGeomFromWKB_buf (wkb=0x247f28 "\001\003", size=93) 
at geos_c.cpp:598
#5  0x2b148d4c in OGRGeometry::exportToGEOS (this=0x263fa0) at 
ogrgeometry.cpp:1706
#6  0x2b148614 in OGRGeometry::Contains (this=0x7f5ff8b0, 
poOtherGeom=0x0) at ogrgeometry.cpp:2560
#7  0x0001ee8c in Mapa::getAttr (this=0xac818, 
longitude=-47.590694333333332, latitude=-15.337605333333332) at 
src/model/mapa.cpp:191

Any Idea?

Thank you.

Adriano


From pramsey at opengeo.org  Sat Feb 28 16:05:51 2009
From: pramsey at opengeo.org (Paul Ramsey)
Date: Sat Feb 28 16:05:53 2009
Subject: [geos-devel] Segmentation Fault in ARM platform
In-Reply-To: <49A9A253.7070302@arvus.com.br>
References: <49A9A253.7070302@arvus.com.br>
Message-ID: <30fe546d0902281305g1130518s9868235cdef3cd1a@mail.gmail.com>

You're going to want to find someone who can re-produce this, which
means someone with a big-endian platform. Perhaps Frank can on his old
iBook. Note that you are transferring WKB from OGR to GEOS, so the
problem could be the writing step in OGR (writing something invalid)
or the reading step in GEOS (screwing up). Attach your program to an
issue in trac.

P.

On Sat, Feb 28, 2009 at 12:45 PM, Adriano C Naspolini
<adriano@arvus.com.br> wrote:
> Hi people,
> I recently installed gdal-1.6.0+geos-3.0.3 in my pc as in my target
> prataform (an ARM). Initially, i had an endianess problem with gdal (the
> target arm is little endian in bytes but big endian in words, so 0x1234
> becomes 0x3412 and 0x12345678 becomes 0x56781234). After patching shapelib
> it's working.
> The problem now is with geos: a segmentation fault when I use Contains()
> function (also with Crosses(), there are certainly others). I think this
> could be the same endianness problem, or something like it, because the
> program runs normally on my pc.
>
> Backtrace from GDB:
> #0 ?0x2c327dfc in memcpy () from /lib/libc.so.6
> #1 ?0x2c204d7c in std::basic_streambuf<char, std::char_traits<char>
>>::xsgetn () from /usr/lib/libstdc++.so.5
> #2 ?0x2c43e580 in std::istream::read () from /usr/lib/libstdc++.so.6
> #3 ?0x2abb58a4 in geos::io::WKBReader::readGeometry (this=0x7f5ff8a0) at
> ../../source/headers/geos/io/ByteOrderDataInStream.inl:58
> #4 ?0x2aad8ed8 in GEOSGeomFromWKB_buf (wkb=0x247f28 "\001\003", size=93) at
> geos_c.cpp:598
> #5 ?0x2b148d4c in OGRGeometry::exportToGEOS (this=0x263fa0) at
> ogrgeometry.cpp:1706
> #6 ?0x2b148614 in OGRGeometry::Contains (this=0x7f5ff8b0, poOtherGeom=0x0)
> at ogrgeometry.cpp:2560
> #7 ?0x0001ee8c in Mapa::getAttr (this=0xac818,
> longitude=-47.590694333333332, latitude=-15.337605333333332) at
> src/model/mapa.cpp:191
>
> Any Idea?
>
> Thank you.
>
> Adriano
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From mateusz at loskot.net  Sat Feb 28 16:08:01 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sat Feb 28 16:08:08 2009
Subject: [geos-devel] Segmentation Fault in ARM platform
In-Reply-To: <49A9A253.7070302@arvus.com.br>
References: <49A9A253.7070302@arvus.com.br>
Message-ID: <49A9A7B1.9000401@loskot.net>

Adriano C Naspolini wrote:
> Hi people,
> I recently installed gdal-1.6.0+geos-3.0.3 in my pc as in my target
> prataform (an ARM). Initially, i had an endianess problem with gdal (the
> target arm is little endian in bytes but big endian in words, so 0x1234
> becomes 0x3412 and 0x12345678 becomes 0x56781234). After patching
> shapelib it's working.
> The problem now is with geos: a segmentation fault when I use Contains()
> function (also with Crosses(), there are certainly others). I think this
> could be the same endianness problem, or something like it, because the
> program runs normally on my pc.

Isn't ARM "switchable", so you can build software (here, GEOS) as little
or as big endian?

> [...]
> Any Idea?

If you are going to submit patches fixing this issue, that would be
strongly welcome and greatly appreciated.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
Charter Member of OSGeo, http://osgeo.org
From warmerdam at pobox.com  Sat Feb 28 17:39:01 2009
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Sat Feb 28 17:39:15 2009
Subject: [geos-devel] Segmentation Fault in ARM platform
In-Reply-To: <30fe546d0902281305g1130518s9868235cdef3cd1a@mail.gmail.com>
References: <49A9A253.7070302@arvus.com.br>
	<30fe546d0902281305g1130518s9868235cdef3cd1a@mail.gmail.com>
Message-ID: <49A9BD05.4070804@pobox.com>

Paul Ramsey wrote:
> You're going to want to find someone who can re-produce this, which
> means someone with a big-endian platform. Perhaps Frank can on his old
> iBook. Note that you are transferring WKB from OGR to GEOS, so the
> problem could be the writing step in OGR (writing something invalid)
> or the reading step in GEOS (screwing up). Attach your program to an
> issue in trac.

Paul,

As I understand it the ARM is being used in "middle endian"
mode, or at least is not a traditional big endian system so I
don't believe my iBook will produce the same problem.

I'm personally not too keen on making all my software support this
... distinct ... endian case.  I'm fairly confident that Adriano is
only seeing the tip of the iceberg so far.

Best regards,

> On Sat, Feb 28, 2009 at 12:45 PM, Adriano C Naspolini
> <adriano@arvus.com.br> wrote:
>> Hi people,
>> I recently installed gdal-1.6.0+geos-3.0.3 in my pc as in my target
>> prataform (an ARM). Initially, i had an endianess problem with gdal (the
>> target arm is little endian in bytes but big endian in words, so 0x1234
>> becomes 0x3412 and 0x12345678 becomes 0x56781234). After patching shapelib
>> it's working.
>> The problem now is with geos: a segmentation fault when I use Contains()
>> function (also with Crosses(), there are certainly others). I think this
>> could be the same endianness problem, or something like it, because the
>> program runs normally on my pc.
>>
>> Backtrace from GDB:
>> #0  0x2c327dfc in memcpy () from /lib/libc.so.6
>> #1  0x2c204d7c in std::basic_streambuf<char, std::char_traits<char>
>>> ::xsgetn () from /usr/lib/libstdc++.so.5
>> #2  0x2c43e580 in std::istream::read () from /usr/lib/libstdc++.so.6
>> #3  0x2abb58a4 in geos::io::WKBReader::readGeometry (this=0x7f5ff8a0) at
>> ../../source/headers/geos/io/ByteOrderDataInStream.inl:58
>> #4  0x2aad8ed8 in GEOSGeomFromWKB_buf (wkb=0x247f28 "\001\003", size=93) at
>> geos_c.cpp:598
>> #5  0x2b148d4c in OGRGeometry::exportToGEOS (this=0x263fa0) at
>> ogrgeometry.cpp:1706
>> #6  0x2b148614 in OGRGeometry::Contains (this=0x7f5ff8b0, poOtherGeom=0x0)
>> at ogrgeometry.cpp:2560
>> #7  0x0001ee8c in Mapa::getAttr (this=0xac818,
>> longitude=-47.590694333333332, latitude=-15.337605333333332) at
>> src/model/mapa.cpp:191
>>
>> Any Idea?
>>
>> Thank you.
>>
>> Adriano
>>
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
> 


-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

From pramsey at opengeo.org  Sat Feb 28 18:08:48 2009
From: pramsey at opengeo.org (Paul Ramsey)
Date: Sat Feb 28 18:08:50 2009
Subject: [geos-devel] Segmentation Fault in ARM platform
In-Reply-To: <30fe546d0902281505r232cb459n8a01754e0ac87c7e@mail.gmail.com>
References: <49A9A253.7070302@arvus.com.br>
	<30fe546d0902281305g1130518s9868235cdef3cd1a@mail.gmail.com>
	<49A9BD05.4070804@pobox.com>
	<30fe546d0902281505r232cb459n8a01754e0ac87c7e@mail.gmail.com>
Message-ID: <30fe546d0902281508s3fb4bf7do27e4135252424c34@mail.gmail.com>

I guess if some part of the code is trying to interpret a mis-aligned
32-bit word, things could get interesting.

http://en.wikipedia.org/wiki/Endianness#Middle-endian

On Sat, Feb 28, 2009 at 3:05 PM, Paul Ramsey <pramsey@opengeo.org> wrote:
> Fun. I guess porting our software to the iPhone is going to take some work :)
>
> P
>
> On Sat, Feb 28, 2009 at 2:39 PM, Frank Warmerdam <warmerdam@pobox.com> wrote:
>> Paul Ramsey wrote:
>>>
>>> You're going to want to find someone who can re-produce this, which
>>> means someone with a big-endian platform. Perhaps Frank can on his old
>>> iBook. Note that you are transferring WKB from OGR to GEOS, so the
>>> problem could be the writing step in OGR (writing something invalid)
>>> or the reading step in GEOS (screwing up). Attach your program to an
>>> issue in trac.
>>
>> Paul,
>>
>> As I understand it the ARM is being used in "middle endian"
>> mode, or at least is not a traditional big endian system so I
>> don't believe my iBook will produce the same problem.
>>
>> I'm personally not too keen on making all my software support this
>> ... distinct ... endian case. ?I'm fairly confident that Adriano is
>> only seeing the tip of the iceberg so far.
>>
>> Best regards,
>>
>>> On Sat, Feb 28, 2009 at 12:45 PM, Adriano C Naspolini
>>> <adriano@arvus.com.br> wrote:
>>>>
>>>> Hi people,
>>>> I recently installed gdal-1.6.0+geos-3.0.3 in my pc as in my target
>>>> prataform (an ARM). Initially, i had an endianess problem with gdal (the
>>>> target arm is little endian in bytes but big endian in words, so 0x1234
>>>> becomes 0x3412 and 0x12345678 becomes 0x56781234). After patching
>>>> shapelib
>>>> it's working.
>>>> The problem now is with geos: a segmentation fault when I use Contains()
>>>> function (also with Crosses(), there are certainly others). I think this
>>>> could be the same endianness problem, or something like it, because the
>>>> program runs normally on my pc.
>>>>
>>>> Backtrace from GDB:
>>>> #0 ?0x2c327dfc in memcpy () from /lib/libc.so.6
>>>> #1 ?0x2c204d7c in std::basic_streambuf<char, std::char_traits<char>
>>>>>
>>>>> ::xsgetn () from /usr/lib/libstdc++.so.5
>>>>
>>>> #2 ?0x2c43e580 in std::istream::read () from /usr/lib/libstdc++.so.6
>>>> #3 ?0x2abb58a4 in geos::io::WKBReader::readGeometry (this=0x7f5ff8a0) at
>>>> ../../source/headers/geos/io/ByteOrderDataInStream.inl:58
>>>> #4 ?0x2aad8ed8 in GEOSGeomFromWKB_buf (wkb=0x247f28 "\001\003", size=93)
>>>> at
>>>> geos_c.cpp:598
>>>> #5 ?0x2b148d4c in OGRGeometry::exportToGEOS (this=0x263fa0) at
>>>> ogrgeometry.cpp:1706
>>>> #6 ?0x2b148614 in OGRGeometry::Contains (this=0x7f5ff8b0,
>>>> poOtherGeom=0x0)
>>>> at ogrgeometry.cpp:2560
>>>> #7 ?0x0001ee8c in Mapa::getAttr (this=0xac818,
>>>> longitude=-47.590694333333332, latitude=-15.337605333333332) at
>>>> src/model/mapa.cpp:191
>>>>
>>>> Any Idea?
>>>>
>>>> Thank you.
>>>>
>>>> Adriano
>>>>
>>>>
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel@lists.osgeo.org
>>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>>>
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel@lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>
>>
>> --
>> ---------------------------------------+--------------------------------------
>> I set the clouds in motion - turn up ? | Frank Warmerdam,
>> warmerdam@pobox.com
>> light and sound - activate the windows | http://pobox.com/~warmerdam
>> and watch the world go round - Rush ? ?| Geospatial Programmer for Rent
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>
From pramsey at opengeo.org  Sat Feb 28 18:05:25 2009
From: pramsey at opengeo.org (Paul Ramsey)
Date: Sat Feb 28 18:12:53 2009
Subject: [geos-devel] Segmentation Fault in ARM platform
In-Reply-To: <49A9BD05.4070804@pobox.com>
References: <49A9A253.7070302@arvus.com.br>
	<30fe546d0902281305g1130518s9868235cdef3cd1a@mail.gmail.com>
	<49A9BD05.4070804@pobox.com>
Message-ID: <30fe546d0902281505r232cb459n8a01754e0ac87c7e@mail.gmail.com>

Fun. I guess porting our software to the iPhone is going to take some work :)

P

On Sat, Feb 28, 2009 at 2:39 PM, Frank Warmerdam <warmerdam@pobox.com> wrote:
> Paul Ramsey wrote:
>>
>> You're going to want to find someone who can re-produce this, which
>> means someone with a big-endian platform. Perhaps Frank can on his old
>> iBook. Note that you are transferring WKB from OGR to GEOS, so the
>> problem could be the writing step in OGR (writing something invalid)
>> or the reading step in GEOS (screwing up). Attach your program to an
>> issue in trac.
>
> Paul,
>
> As I understand it the ARM is being used in "middle endian"
> mode, or at least is not a traditional big endian system so I
> don't believe my iBook will produce the same problem.
>
> I'm personally not too keen on making all my software support this
> ... distinct ... endian case. ?I'm fairly confident that Adriano is
> only seeing the tip of the iceberg so far.
>
> Best regards,
>
>> On Sat, Feb 28, 2009 at 12:45 PM, Adriano C Naspolini
>> <adriano@arvus.com.br> wrote:
>>>
>>> Hi people,
>>> I recently installed gdal-1.6.0+geos-3.0.3 in my pc as in my target
>>> prataform (an ARM). Initially, i had an endianess problem with gdal (the
>>> target arm is little endian in bytes but big endian in words, so 0x1234
>>> becomes 0x3412 and 0x12345678 becomes 0x56781234). After patching
>>> shapelib
>>> it's working.
>>> The problem now is with geos: a segmentation fault when I use Contains()
>>> function (also with Crosses(), there are certainly others). I think this
>>> could be the same endianness problem, or something like it, because the
>>> program runs normally on my pc.
>>>
>>> Backtrace from GDB:
>>> #0 ?0x2c327dfc in memcpy () from /lib/libc.so.6
>>> #1 ?0x2c204d7c in std::basic_streambuf<char, std::char_traits<char>
>>>>
>>>> ::xsgetn () from /usr/lib/libstdc++.so.5
>>>
>>> #2 ?0x2c43e580 in std::istream::read () from /usr/lib/libstdc++.so.6
>>> #3 ?0x2abb58a4 in geos::io::WKBReader::readGeometry (this=0x7f5ff8a0) at
>>> ../../source/headers/geos/io/ByteOrderDataInStream.inl:58
>>> #4 ?0x2aad8ed8 in GEOSGeomFromWKB_buf (wkb=0x247f28 "\001\003", size=93)
>>> at
>>> geos_c.cpp:598
>>> #5 ?0x2b148d4c in OGRGeometry::exportToGEOS (this=0x263fa0) at
>>> ogrgeometry.cpp:1706
>>> #6 ?0x2b148614 in OGRGeometry::Contains (this=0x7f5ff8b0,
>>> poOtherGeom=0x0)
>>> at ogrgeometry.cpp:2560
>>> #7 ?0x0001ee8c in Mapa::getAttr (this=0xac818,
>>> longitude=-47.590694333333332, latitude=-15.337605333333332) at
>>> src/model/mapa.cpp:191
>>>
>>> Any Idea?
>>>
>>> Thank you.
>>>
>>> Adriano
>>>
>>>
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel@lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>
>
> --
> ---------------------------------------+--------------------------------------
> I set the clouds in motion - turn up ? | Frank Warmerdam,
> warmerdam@pobox.com
> light and sound - activate the windows | http://pobox.com/~warmerdam
> and watch the world go round - Rush ? ?| Geospatial Programmer for Rent
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From geos-trac at osgeo.org  Sat Feb 28 20:52:34 2009
From: geos-trac at osgeo.org (GEOS)
Date: Sat Feb 28 20:52:35 2009
Subject: [geos-devel] Re: [GEOS] #227: Deleting 'void*' is undefined in
 IntervalRTreeLeafNode class.
In-Reply-To: <047.1cc49bb88966caacad4fa2e8456f2748@osgeo.org>
References: <047.1cc49bb88966caacad4fa2e8456f2748@osgeo.org>
Message-ID: <056.49fce554a844e39ec9b964dc39e75fd1@osgeo.org>

#227: Deleting 'void*' is undefined in IntervalRTreeLeafNode class.
-------------------------+--------------------------------------------------
 Reporter:  mloskot      |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect       |       Status:  new                       
 Priority:  major        |    Milestone:  3.2.0                     
Component:  Core         |      Version:  svn-trunk                 
 Severity:  Significant  |   Resolution:                            
 Keywords:  void         |  
-------------------------+--------------------------------------------------
Changes (by pramsey):

  * milestone:  => 3.2.0

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/227#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Sat Feb 28 20:53:31 2009
From: geos-trac at osgeo.org (GEOS)
Date: Sat Feb 28 20:53:32 2009
Subject: [geos-devel] Re: [GEOS] #232: Static string in WKBReader causes
 glibc errors when Geos is statically linked
In-Reply-To: <050.aefa73444722d937602daa5160f8caea@osgeo.org>
References: <050.aefa73444722d937602daa5160f8caea@osgeo.org>
Message-ID: <059.15bc6c83488c3f1815cf7e41ad42f4d2@osgeo.org>

#232: Static string in WKBReader causes glibc errors when Geos is statically
linked
------------------------+---------------------------------------------------
 Reporter:  yvesdaemen  |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.0.4                     
Component:  Default     |      Version:  3.0.3                     
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by pramsey):

  * milestone:  3.1.0 => 3.0.4

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/232#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
