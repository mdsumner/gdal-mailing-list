From frank.koormann at intevation.de  Tue Jul  3 10:52:09 2007
From: frank.koormann at intevation.de (Frank Koormann)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Towards GEOS 3.0.0
Message-ID: <20070703145209.GF29206@intevation.de>

Hi,

the 3.0.x branch in general covers some important improvements and 
GEOS 3.0.0rc4 is out for a while now. What are the outstanding issues 
preventing the release of GEOS 3.0.0? What has to be done to overcome 
these issues?

Best regards,

        Frank

-- 
Frank Koormann  |  ++49-541-335 08 30  |  http://www.intevation.de/
Intevation GmbH, Osnabr?ck, DE   |   Amtsgericht Osnabr?ck, HR B 18998
Gesch?ftsf?hrer: Frank Koormann, Bernhard Reiter, Dr. Jan-Oliver Wagner

From warmerdam at pobox.com  Tue Jul 17 09:47:55 2007
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS 3.0.0 Final
Message-ID: <469CC88B.4040707@pobox.com>

Folks,

Is there anything holding back promoting geos 3.0.0rc4 to 3.0.0 final?

Also, I'm getting emailed roughly daily about updates to a bug in the geos
bug database from a spammer.

   http://postgis.refractions.net/bugs/bug.php?op=show&bugid=118

Note the funky URL link.

Can something be done to secure this bug database against un-logged in
spammers?

Best regards,
-- 
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | President OSGeo, http://osgeo.org


From mateusz at loskot.net  Tue Jul 17 11:29:45 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS 3.0.0 Final
In-Reply-To: <469CC88B.4040707@pobox.com>
References: <469CC88B.4040707@pobox.com>
Message-ID: <469CE069.4060601@loskot.net>

Frank Warmerdam wrote:
> Folks,
> 
> Is there anything holding back promoting geos 3.0.0rc4 to 3.0.0 final?

Frank,

I've lost the track recently, so I don't know.

> Also, I'm getting emailed roughly daily about updates to a bug in the geos
> bug database from a spammer.
> 
>   http://postgis.refractions.net/bugs/bug.php?op=show&bugid=118
> 
> Note the funky URL link.
> 
> Can something be done to secure this bug database against un-logged in
> spammers?

I also wrote couple times to Refractions about spam attack intensifying
recently. Any motions about this subject?

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From pramsey at refractions.net  Tue Jul 17 11:36:51 2007
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS 3.0.0 Final
In-Reply-To: <469CE069.4060601@loskot.net>
References: <469CC88B.4040707@pobox.com> <469CE069.4060601@loskot.net>
Message-ID: <469CE213.7020304@refractions.net>

Mateusz Loskot wrote:
>> Can something be done to secure this bug database against un-logged in
>> spammers?
> 
> I also wrote couple times to Refractions about spam attack intensifying
> recently. Any motions about this subject?

I've cleaned out all the spam auth_users and the spam URLs from the 
database. Logins are already required, and new logins are not currently 
enabled. If the pace of ugliness slows down for a while, that'll be good.

-- 

   Paul Ramsey
   Refractions Research
   http://www.refractions.net
   pramsey@refractions.net
   Phone: 250-383-3022
   Cell: 250-885-0632

From mateusz at loskot.net  Tue Jul 17 12:00:36 2007
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS 3.0.0 Final
In-Reply-To: <469CE213.7020304@refractions.net>
References: <469CC88B.4040707@pobox.com> <469CE069.4060601@loskot.net>
	<469CE213.7020304@refractions.net>
Message-ID: <469CE7A4.3070601@loskot.net>

Paul Ramsey wrote:
> Mateusz Loskot wrote:
>>> Can something be done to secure this bug database against un-logged in
>>> spammers?
>>
>> I also wrote couple times to Refractions about spam attack intensifying
>> recently. Any motions about this subject?
> 
> I've cleaned out all the spam auth_users and the spam URLs from the
> database. Logins are already required, and new logins are not currently
> enabled. If the pace of ugliness slows down for a while, that'll be good.

Paul,

Thank you very much!

Cheers
-- 
Mateusz Loskot
http://mateusz.loskot.net

From carl.anderson at vadose.org  Tue Jul 17 23:33:56 2007
From: carl.anderson at vadose.org (Carl Anderson)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS 3.0.0 Final
In-Reply-To: <469CC88B.4040707@pobox.com>
References: <469CC88B.4040707@pobox.com>
Message-ID: <469D8A24.5000901@vadose.org>

I have been poking at an over optimization issue in segment stabbing.

In this case
If a Multipolygon has two outer rings and the left outer ring is inside 
the  ymin, ymax envelope of the right outer ring the left ring is dropped.

JTS 1.7 does not exhibit this behavior.


I have been making progress where the over optimzation is not.
I'll try to wrap it up by Monday.

C.



Frank Warmerdam wrote:
> Folks,
>
> Is there anything holding back promoting geos 3.0.0rc4 to 3.0.0 final?
>
> Also, I'm getting emailed roughly daily about updates to a bug in the 
> geos
> bug database from a spammer.
>
>   http://postgis.refractions.net/bugs/bug.php?op=show&bugid=118
>
> Note the funky URL link.
>
> Can something be done to secure this bug database against un-logged in
> spammers?
>
> Best regards,

-------------- next part --------------
A non-text attachment was scrubbed...
Name: u4small.xml
Type: text/xml
Size: 1925 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070717/9b0887e2/u4small.xml
From jmp at geosys.com  Mon Jul 23 12:39:40 2007
From: jmp at geosys.com (Jean Michel PIERRET)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] OGR Performance Intersection, Union using GEOS
Message-ID: <000c01c7cd48$10ae0d50$2201a8c0@pcjmp>

Hi, 
	
    I'm using gdal and ogr with geos support. I have a problem with the
performance of GEOS (Intersection, Union, ...), it seem to be slower than
the library GPC (Generic Polygon Clipper) which I used before.     

Is it normal ?
Do you have solutions or answers ?

Another problem.
	
	I would like to get a matrix like with gdal_rasterize in c#, but
with the difference between pixels that are on polygon boundaries and pixels
that are completely inside polygon. It works with the following code but
it's very slow.

Thanks for your help.
Regards.

public void test()
{
	int [, ] mat = new int[width, height];
	Geometry geometry = Geometry.CreateFromWkt("...");

	//Browse each pixel of a raster
	for (i = 0, x = XUL; i < width; x += pixelsizeX, i++)	
      {
  	  for (j = 0, y = YUL; j < height; y += pixelsizeY, j++)
        {
		//x, y are the upper left corner of pixel
		double x1, y1, x2, y2, x3, y3, x4, y4;

		x1 = x;
		y1 = y;

		x2 = x1 + pixelsizeX; 
		y2 = y1;

		x3 = x1 + pixelsizeX; 
		y3 = y1 + pixelsizeY;

		x4 = x1; 
		y4 = y1 + pixelsizeY;

		Geometry geompixel =
Geometry.CreateFromWkt(string.Format("POLYGON(({0} {1}, {2} {3}, {4} {5},
{6} {7}, {0} {1}))", x1, y1, x2, y2, x3, y3, x4, y4));

		//get if pixel is overlap, contains or none by polygon
		if (geometry.Contains(geompixel))
			mat[i, j] = 2;	
		else if (geometry.Overlaps(geompixel))
			mat[i, j] = 1;
		else
			mat[i, j] = 0;

		geompixel.Dispose();
        }
	}

	geometry.Dispose();
}

Jean-michel PIERRET - Poste? 376
Tel : +33 (0)5 62 47 80 76
Mail : jmp@geosys.com
GEOSYS SA


From obaltzer at cs.dal.ca  Mon Jul 23 20:07:29 2007
From: obaltzer at cs.dal.ca (Oliver Baltzer)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS SVN Geometry::contains bug!?
Message-ID: <20070724000729.GA24572@frederic.cs.dal.ca>

The contains relation is not commutative hence in source/geom/Geometry.cpp
lines 425-427 should be removed.

See:

bool
Geometry::contains(const Geometry *g) const
{
#ifdef SHORTCIRCUIT_PREDICATES
        // short-circuit test
        if (! getEnvelopeInternal()->contains(g->getEnvelopeInternal()))
                return false;
#endif

        // optimization for rectangle arguments
        if (isRectangle()) {
                return predicate::RectangleContains::contains((Polygon&)*this, *g);
        }
/*
 *       if (g->isRectangle()) {
 *               return predicate::RectangleContains::contains((const Polygon&)*g, *this);
 *       }
 */
        IntersectionMatrix *im=relate(g);
        bool res=im->isContains();
        delete im;
        return res;
}

Cheers,
Oliver

-- 
Oliver Baltzer
Faculty of Computer Science  
Dalhousie University
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 189 bytes
Desc: Digital signature
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070723/7164af9e/attachment.bin
From mbdavis at refractions.net  Mon Jul 23 20:22:08 2007
From: mbdavis at refractions.net (Martin Davis)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS SVN Geometry::contains bug!?
In-Reply-To: <20070724000729.GA24572@frederic.cs.dal.ca>
References: <20070724000729.GA24572@frederic.cs.dal.ca>
Message-ID: <46A54630.4060909@refractions.net>

Good catch.  I confirm that those lines do not appear in JTS, and should 
be removed.

Oliver Baltzer wrote:
> The contains relation is not commutative hence in source/geom/Geometry.cpp
> lines 425-427 should be removed.
>
> See:
>
> bool
> Geometry::contains(const Geometry *g) const
> {
> #ifdef SHORTCIRCUIT_PREDICATES
>         // short-circuit test
>         if (! getEnvelopeInternal()->contains(g->getEnvelopeInternal()))
>                 return false;
> #endif
>
>         // optimization for rectangle arguments
>         if (isRectangle()) {
>                 return predicate::RectangleContains::contains((Polygon&)*this, *g);
>         }
> /*
>  *       if (g->isRectangle()) {
>  *               return predicate::RectangleContains::contains((const Polygon&)*g, *this);
>  *       }
>  */
>         IntersectionMatrix *im=relate(g);
>         bool res=im->isContains();
>         delete im;
>         return res;
> }
>
> Cheers,
> Oliver
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>   

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022


From abhay.menon at gmail.com  Wed Jul 25 10:40:09 2007
From: abhay.menon at gmail.com (abhay menon)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
Message-ID: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: msvc71.zip
Type: application/zip
Size: 23978 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20070725/85588e59/msvc71.zip
From todd.jellett at caris.com  Thu Jul 26 10:34:25 2007
From: todd.jellett at caris.com (Todd Jellett)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Binary Predicate Bug - Even Worse!
In-Reply-To: <466F0D54.7040009@refractions.net>
References: <466F0D54.7040009@refractions.net>
Message-ID: <46A8B0F1.5040601@caris.com>

Martin Davis wrote:
> I agree with Chris and Paul. The predicates are clearly not intended 
> to be mutually disjoint. They are probably intended to capture the 
> most common use cases in single functions (which allows for some 
> aggressive optimization - some day 8^).
>
> Refractions: 3, Jellet: 1 - we win! 8^)
>
This is not quite the answer I was looking for.

What I expected was something more along the lines of:

Yes, the named spatial relationship predicates based on the DE-9IM 
(Disjoint, Touches, Crosses, Within, and Overlaps) are indeed mutually 
exclusive. For a complete proof that these predicates are mutually 
exclusive see the reference:

Clementini Eliseo, Di Felice P., van Oostrom p., A Small Set of Formal 
Topological Relationships Suitable for End-User Interaction, in D. Abel 
and B. C. Ooi (Ed.), Advances in Spatial Databases, Third International 
Symposium. SSD ?93. LNCS 692. Pp. 277-295. Springer-Verlag. Singapore 
(1993).

Here is an quoted excerpt from section 4.3 of this paper

"In this section, we will prove that the five relationships are mutually 
exclusive, that is, it cannot be the case that two different 
relationships hold between two features; furthermore, we will prove that 
they make a full covering of all possible topological situations, that 
is, given two features, the relationship between them must be one of the 
five."

You (Todd) are probably being confused by the fact that Contains and 
Equals are not true predicates. If you look at page 2-15 of the SFS, in 
the second paragraph, you will see the five unique predicates listed. On 
page 2-19, the SFS defines for user convenience, the predicates Contains 
and Intersects. Note that these two, are not defined uniquely but 
instead are defined in terms of one of the five unique and mutually 
exclusive predicates. ( a.Contains(b) <=> b.Within(a) and 
a.Intersects(b) <=> !a.Disjoint(b) )

Equals is not even listed as a predicate in SFS. It is just listed as a 
method. In ISO 19107, it can be seen that Equals comes from the 
transfiniteSet class along with the other set theoretical operations 
like intersection, union and difference. In 19107, the GM_Object class 
is derived from transfiniteSet. The SFS chose to optimize away the 
transfiniteSet class so the Equals method ended up in the Geometry base 
class (corresponds to GM_Object in ISO 19107) with all the other set 
theoretical methods.

So in conclusion, having Within, Contains, and Equals all come back true 
for two given geometries does not violate the mutual exclusivity of the 
predicates because Within is the only true predicate.

From abhay.menon at gmail.com  Thu Jul 26 11:27:05 2007
From: abhay.menon at gmail.com (abhay menon)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] GEOS compilation VS7.1
In-Reply-To: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>
References: <7a30cd70707250740n43b6f869r5526db9bc41cbb6@mail.gmail.com>
Message-ID: <7a30cd70707260827w2b104f81ha20ab57f9a408cd@mail.gmail.com>

Hello All,

Has anyone tried this hack for building GEOS in msvc71.

I want to know that if this version of  the GEOS library is working
correctly or if some one has been able to compile in a similar fashion.

-- 
Thanks and Regards

Abhay Menon


On 7/25/07, abhay menon <abhay.menon@gmail.com> wrote:
>
> Hello List,
>
> Please find solution files for building of GEOS 3.0.0-rc4 using VS 2003.
> This is a hack version of msvc80 for vs 2003.
>
> Hope somebody like me finds it useful.
>
> --
> Best Regards
>
> Abhay Menon
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20070726/d541f9ba/attachment.html
From chodgson at refractions.net  Thu Jul 26 13:21:41 2007
From: chodgson at refractions.net (Chris Hodgson)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Binary Predicate Bug - Even Worse!
In-Reply-To: <46A8B0F1.5040601@caris.com>
References: <466F0D54.7040009@refractions.net> <46A8B0F1.5040601@caris.com>
Message-ID: <46A8D825.8040000@refractions.net>

Excellent research Todd, good to have it here to help others with any 
similar confusion.

I'd just like to add that the only thing special about Disjoint, 
Touches, Crosses, Within, and Overlaps is that they are both mutually 
exclusive and complete as a set of predicates and thus good for using as 
logical building blocks to more complicated operations. It doesn't mean 
that contains/intersects/equals aren't also perfectly valid and useful 
logical predicates. They are also based on the DE-9IM. Your idea of 
"true" predicates might better be described as "basic" or "core" ... 
"true" implies that other predicates are somehow "false" when perhaps 
composite or complex would be a better term.

Talking about "violating the mutual exclusivity of the predicates" 
doesn't make much sense when you're talking about predicates that aren't 
part of the small set which is proved to be mutually exclusive.

Anyways, good to have all the references put together.

Chris

Todd Jellett wrote:
> Martin Davis wrote:
>> I agree with Chris and Paul. The predicates are clearly not intended 
>> to be mutually disjoint. They are probably intended to capture the 
>> most common use cases in single functions (which allows for some 
>> aggressive optimization - some day 8^).
>>
>> Refractions: 3, Jellet: 1 - we win! 8^)
>>
> This is not quite the answer I was looking for.
> 
> What I expected was something more along the lines of:
> 
> Yes, the named spatial relationship predicates based on the DE-9IM 
> (Disjoint, Touches, Crosses, Within, and Overlaps) are indeed mutually 
> exclusive. For a complete proof that these predicates are mutually 
> exclusive see the reference:
> 
> Clementini Eliseo, Di Felice P., van Oostrom p., A Small Set of Formal 
> Topological Relationships Suitable for End-User Interaction, in D. Abel 
> and B. C. Ooi (Ed.), Advances in Spatial Databases, Third International 
> Symposium. SSD ?93. LNCS 692. Pp. 277-295. Springer-Verlag. Singapore 
> (1993).
> 
> Here is an quoted excerpt from section 4.3 of this paper
> 
> "In this section, we will prove that the five relationships are mutually 
> exclusive, that is, it cannot be the case that two different 
> relationships hold between two features; furthermore, we will prove that 
> they make a full covering of all possible topological situations, that 
> is, given two features, the relationship between them must be one of the 
> five."
> 
> You (Todd) are probably being confused by the fact that Contains and 
> Equals are not true predicates. If you look at page 2-15 of the SFS, in 
> the second paragraph, you will see the five unique predicates listed. On 
> page 2-19, the SFS defines for user convenience, the predicates Contains 
> and Intersects. Note that these two, are not defined uniquely but 
> instead are defined in terms of one of the five unique and mutually 
> exclusive predicates. ( a.Contains(b) <=> b.Within(a) and 
> a.Intersects(b) <=> !a.Disjoint(b) )
> 
> Equals is not even listed as a predicate in SFS. It is just listed as a 
> method. In ISO 19107, it can be seen that Equals comes from the 
> transfiniteSet class along with the other set theoretical operations 
> like intersection, union and difference. In 19107, the GM_Object class 
> is derived from transfiniteSet. The SFS chose to optimize away the 
> transfiniteSet class so the Equals method ended up in the Geometry base 
> class (corresponds to GM_Object in ISO 19107) with all the other set 
> theoretical methods.
> 
> So in conclusion, having Within, Contains, and Equals all come back true 
> for two given geometries does not violate the mutual exclusivity of the 
> predicates because Within is the only true predicate.
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


From todd.jellett at caris.com  Thu Jul 26 14:42:24 2007
From: todd.jellett at caris.com (Todd Jellett)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] Binary Predicate Bug - Even Worse!
In-Reply-To: <46A8D825.8040000@refractions.net>
References: <466F0D54.7040009@refractions.net> <46A8B0F1.5040601@caris.com>
	<46A8D825.8040000@refractions.net>
Message-ID: <46A8EB10.1050308@caris.com>

Hi Chris,

By "true predicate" I am just referring to the set of five mutually 
exclusive, complete predicates that the SFS is based on and yes, there 
is probably a better term that 'true'. Original?
Contains and Intersects are explicitly defined as "for user convenience 
predicates" on page 2-19 of the SFS but Equals is just listed as a 
method. Is changing Equals to be based on the DE-9IM and promoting it to 
the same standing as the true/basic/core predicates part of the SFS, or 
is this an extension to the SFS? Will it be adopted? Equals is not built 
on true/basic/core predicates the way Contains/Intersects is.

By "violating the mutual exclusivity of the predicates" I am just saying 
that Contains and Equals are not members of the set of mutually 
exclusive, complete predicates (so therefore, there is no problem with 
mutual exclusivity) and I previously thought they were. In my original 
question, I excluded Intersects but included Equals and Contains in the 
group that I thought were mutually exclusive.

Todd

Chris Hodgson wrote:
> Excellent research Todd, good to have it here to help others with any 
> similar confusion.
>
> I'd just like to add that the only thing special about Disjoint, 
> Touches, Crosses, Within, and Overlaps is that they are both mutually 
> exclusive and complete as a set of predicates and thus good for using 
> as logical building blocks to more complicated operations. It doesn't 
> mean that contains/intersects/equals aren't also perfectly valid and 
> useful logical predicates. They are also based on the DE-9IM. Your 
> idea of "true" predicates might better be described as "basic" or 
> "core" ... "true" implies that other predicates are somehow "false" 
> when perhaps composite or complex would be a better term.
>
> Talking about "violating the mutual exclusivity of the predicates" 
> doesn't make much sense when you're talking about predicates that 
> aren't part of the small set which is proved to be mutually exclusive.
>
> Anyways, good to have all the references put together.
>
> Chris
>
> Todd Jellett wrote:
>> Martin Davis wrote:
>>> I agree with Chris and Paul. The predicates are clearly not intended 
>>> to be mutually disjoint. They are probably intended to capture the 
>>> most common use cases in single functions (which allows for some 
>>> aggressive optimization - some day 8^).
>>>
>>> Refractions: 3, Jellet: 1 - we win! 8^)
>>>
>> This is not quite the answer I was looking for.
>>
>> What I expected was something more along the lines of:
>>
>> Yes, the named spatial relationship predicates based on the DE-9IM 
>> (Disjoint, Touches, Crosses, Within, and Overlaps) are indeed 
>> mutually exclusive. For a complete proof that these predicates are 
>> mutually exclusive see the reference:
>>
>> Clementini Eliseo, Di Felice P., van Oostrom p., A Small Set of 
>> Formal Topological Relationships Suitable for End-User Interaction, 
>> in D. Abel and B. C. Ooi (Ed.), Advances in Spatial Databases, Third 
>> International Symposium. SSD ?93. LNCS 692. Pp. 277-295. 
>> Springer-Verlag. Singapore (1993).
>>
>> Here is an quoted excerpt from section 4.3 of this paper
>>
>> "In this section, we will prove that the five relationships are 
>> mutually exclusive, that is, it cannot be the case that two different 
>> relationships hold between two features; furthermore, we will prove 
>> that they make a full covering of all possible topological 
>> situations, that is, given two features, the relationship between 
>> them must be one of the five."
>>
>> You (Todd) are probably being confused by the fact that Contains and 
>> Equals are not true predicates. If you look at page 2-15 of the SFS, 
>> in the second paragraph, you will see the five unique predicates 
>> listed. On page 2-19, the SFS defines for user convenience, the 
>> predicates Contains and Intersects. Note that these two, are not 
>> defined uniquely but instead are defined in terms of one of the five 
>> unique and mutually exclusive predicates. ( a.Contains(b) <=> 
>> b.Within(a) and a.Intersects(b) <=> !a.Disjoint(b) )
>>
>> Equals is not even listed as a predicate in SFS. It is just listed as 
>> a method. In ISO 19107, it can be seen that Equals comes from the 
>> transfiniteSet class along with the other set theoretical operations 
>> like intersection, union and difference. In 19107, the GM_Object 
>> class is derived from transfiniteSet. The SFS chose to optimize away 
>> the transfiniteSet class so the Equals method ended up in the 
>> Geometry base class (corresponds to GM_Object in ISO 19107) with all 
>> the other set theoretical methods.
>>
>> So in conclusion, having Within, Contains, and Equals all come back 
>> true for two given geometries does not violate the mutual exclusivity 
>> of the predicates because Within is the only true predicate.
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@geos.refractions.net
>> http://geos.refractions.net/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From rblatt at warmlyyours.com  Mon Jul 30 12:57:31 2007
From: rblatt at warmlyyours.com (Ramie Blatt)
Date: Fri Nov  2 20:53:42 2007
Subject: [geos-devel] swig/ruby: how do you access functionality like
	transform in geos::geom::util::GeometryTransformer?
Message-ID: <IBEOLPFKPGKOCMNLFKAFEEFPEAAA.rblatt@warmlyyours.com>

Hi there,

First, thanks to Charlie Savage, and all the other GEOS developers, for the
great work, especially in making GEOS available through ruby. It's pretty
much the only robust geometry solution for ruby that I've found.

I'm using GEOS with the ruby SWIG bindings and have been happily working
with the GEOS code without a problem until recently when I needed to
translate and transform the coordinates of  polygons.

How do you access functionality like transform in
geos::geom::util::GeometryTransformer? This may be a bit of a newbie
question, but I've spent a long time digging through the swig stuff and the
docs and I just can't find it.

The development environment I'm using is an ubuntu 6.06 LTS linux vmware
virtual machine (i486-linux-gnu), ruby 1.8.4, rails 1.1.6, and built from
source using the geos-3.0.0rc2.tar.bz2 release compiling with gcc 4.0.3. The
tests in swig/ruby/test/ seem to work fine.

Thanks,
Ramie Blatt


