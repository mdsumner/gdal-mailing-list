From dbaston at gmail.com  Mon Oct  1 09:38:50 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Mon, 1 Oct 2018 12:38:50 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
Message-ID: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>

Hi All,

I've posted an RFC to switch to CMake as the exclusive build system for
GEOS. Some reasoning is in the RFC itself, but it boils down to wasted
developer and machine effort supporting the combination of autotools,
CMake, and NMake.

https://trac.osgeo.org/geos/wiki/RFC7

Thoughts from the PSC?

Dan
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181001/8fc403f3/attachment.html>

From lr at pcorp.us  Mon Oct  1 09:55:19 2018
From: lr at pcorp.us (Regina Obe)
Date: Mon, 1 Oct 2018 12:55:19 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
Message-ID: <000e01d459a7$89aaf540$9d00dfc0$@pcorp.us>

+1. Trying to compile GEOS under autotools hasn't worked for me for some time.  I've been using CMake for GEOS exclusively for the past couple of years.  

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Daniel Baston
Sent: Monday, October 01, 2018 12:39 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS

 

Hi All,

 

I've posted an RFC to switch to CMake as the exclusive build system for GEOS. Some reasoning is in the RFC itself, but it boils down to wasted developer and machine effort supporting the combination of autotools, CMake, and NMake.

 

https://trac.osgeo.org/geos/wiki/RFC7

 

Thoughts from the PSC?

 

Dan

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181001/15e4f77f/attachment.html>

From strk at kbt.io  Wed Oct  3 09:27:37 2018
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 3 Oct 2018 18:27:37 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
Message-ID: <20181003162737.GI24144@liz>

On Mon, Oct 01, 2018 at 12:38:50PM -0400, Daniel Baston wrote:
> Hi All,
> 
> I've posted an RFC to switch to CMake as the exclusive build system for
> GEOS. Some reasoning is in the RFC itself, but it boils down to wasted
> developer and machine effort supporting the combination of autotools,
> CMake, and NMake.
> 
> https://trac.osgeo.org/geos/wiki/RFC7
> 
> Thoughts from the PSC?

One of the reasons why I still prefer autotools is its ability
to build tester scripts which work before install (via libtool).
Does cmake allow for that ?

--strk;

From gdt at lexort.com  Wed Oct  3 11:14:32 2018
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 03 Oct 2018 14:14:32 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181003162737.GI24144@liz> (Sandro Santilli's message of "Wed, 
 3 Oct 2018 18:27:37 +0200")
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
Message-ID: <smu8t3ehp87.fsf@linuxpal.mit.edu>

Sandro Santilli <strk at kbt.io> writes:

> On Mon, Oct 01, 2018 at 12:38:50PM -0400, Daniel Baston wrote:
>> Hi All,
>> 
>> I've posted an RFC to switch to CMake as the exclusive build system for
>> GEOS. Some reasoning is in the RFC itself, but it boils down to wasted
>> developer and machine effort supporting the combination of autotools,
>> CMake, and NMake.
>> 
>> https://trac.osgeo.org/geos/wiki/RFC7
>> 
>> Thoughts from the PSC?
>
> One of the reasons why I still prefer autotools is its ability
> to build tester scripts which work before install (via libtool).
> Does cmake allow for that ?

Testing before install, while the previous version (including libraries)
is installed, is to me a requirement for a build system.  Also cross
building.  People keep telling me that cmake does everything auto* does,
but I wonder.

Perhaps we can drop camke and just have autotools, and native windows
(vs mingw/cygwin) users can fund keeping the separate windows makefiles
up to date (yes, that's mostly a joke).


From dbaston at gmail.com  Wed Oct  3 11:41:34 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Wed, 3 Oct 2018 14:41:34 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181003162737.GI24144@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
Message-ID: <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>

> One of the reasons why I still prefer autotools is its ability
> to build tester scripts which work before install (via libtool).
> Does cmake allow for that ?

Are you asking whether the GEOS test suite can be run against
a non-installed copy of the library (yes), or are you referring to
other tests?

Dan

From strk at kbt.io  Wed Oct  3 12:20:09 2018
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 3 Oct 2018 21:20:09 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <smu8t3ehp87.fsf@linuxpal.mit.edu>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
Message-ID: <20181003192009.GJ24144@liz>

On Wed, Oct 03, 2018 at 02:14:32PM -0400, Greg Troxel wrote:
> Sandro Santilli <strk at kbt.io> writes:
> > On Mon, Oct 01, 2018 at 12:38:50PM -0400, Daniel Baston wrote:
> >> 
> >> https://trac.osgeo.org/geos/wiki/RFC7
> >
> > One of the reasons why I still prefer autotools is its ability
> > to build tester scripts which work before install (via libtool).
> > Does cmake allow for that ?
> 
> Testing before install, while the previous version (including libraries)
> is installed, is to me a requirement for a build system.  Also cross
> building.  People keep telling me that cmake does everything auto* does,
> but I wonder.
> 
> Perhaps we can drop camke and just have autotools, and native windows
> (vs mingw/cygwin) users can fund keeping the separate windows makefiles
> up to date (yes, that's mostly a joke).

The current situation is really that CMake is a contributed module and
the official build tool _is_ autotools. The problem reported in that
RFC7 is not well-posed in that it assumes contributors are _required_
to support multiple build systems. Truth is they only need to support
autotools, but are convinced CMake is enough because they find the
CMake support in there. If we drop CMake support, they won't bother.

How problematic would that be for contributors ?

--strk;

From jmckenna at gatewaygeomatics.com  Wed Oct  3 12:23:33 2018
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Wed, 3 Oct 2018 16:23:33 -0300
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181003192009.GJ24144@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
Message-ID: <be7e41a7-8b36-0f80-32bf-11f96d49c435@gatewaygeomatics.com>

On 2018-10-03 4:20 PM, Sandro Santilli wrote:
> On Wed, Oct 03, 2018 at 02:14:32PM -0400, Greg Troxel wrote:
>> Sandro Santilli <strk at kbt.io> writes:
>>> On Mon, Oct 01, 2018 at 12:38:50PM -0400, Daniel Baston wrote:
>>>>
>>>> https://trac.osgeo.org/geos/wiki/RFC7
>>>
>>> One of the reasons why I still prefer autotools is its ability
>>> to build tester scripts which work before install (via libtool).
>>> Does cmake allow for that ?
>>
>> Testing before install, while the previous version (including libraries)
>> is installed, is to me a requirement for a build system.  Also cross
>> building.  People keep telling me that cmake does everything auto* does,
>> but I wonder.
>>
>> Perhaps we can drop camke and just have autotools, and native windows
>> (vs mingw/cygwin) users can fund keeping the separate windows makefiles
>> up to date (yes, that's mostly a joke).
> 
> The current situation is really that CMake is a contributed module and
> the official build tool _is_ autotools. The problem reported in that
> RFC7 is not well-posed in that it assumes contributors are _required_
> to support multiple build systems. Truth is they only need to support
> autotools, but are convinced CMake is enough because they find the
> CMake support in there. If we drop CMake support, they won't bother.
> 
> How problematic would that be for contributors ?
> 

Can you define what you mean by "that" in your last sentence?  What are 
you proposing?

-jeff




From lr at pcorp.us  Wed Oct  3 12:44:35 2018
From: lr at pcorp.us (Regina Obe)
Date: Wed, 3 Oct 2018 15:44:35 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181003192009.GJ24144@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
Message-ID: <002401d45b51$84524610$8cf6d230$@pcorp.us>

> 
> The current situation is really that CMake is a contributed module and the
> official build tool _is_ autotools. The problem reported in that
> RFC7 is not well-posed in that it assumes contributors are _required_ to
> support multiple build systems.
> Truth is they only need to support autotools,
[Regina Obe] 
Yes they are required to support multiple build systems without CMake.
E.g. Lots of people on windows building with Visual Studio use GEOS which means we need to support NMake if we don't support CMake.
Autotools is not supported on native Windows.  Cmake can make VS solution files.

Also Autotools hasn't worked for me for a long time even under Mingw64.
Though in theory if I were energetic enough, I guess I could try to troubleshoot it.

> How problematic would that be for contributors ?
> 
> --strk;
Extremely problematic if we drop CMake.


From vicky at georepublic.de  Wed Oct  3 14:15:18 2018
From: vicky at georepublic.de (Vicky Vergara)
Date: Wed, 3 Oct 2018 16:15:18 -0500
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <002401d45b51$84524610$8cf6d230$@pcorp.us>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
Message-ID: <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>

On Wed, Oct 3, 2018 at 2:44 PM Regina Obe <lr at pcorp.us> wrote:

> >
> > The current situation is really that CMake is a contributed module and
> the
> > official build tool _is_ autotools. The problem reported in that
> > RFC7 is not well-posed in that it assumes contributors are _required_ to
> > support multiple build systems.
> > Truth is they only need to support autotools,
> [Regina Obe]
> Yes they are required to support multiple build systems without CMake.
> E.g. Lots of people on windows building with Visual Studio use GEOS which
> means we need to support NMake if we don't support CMake.
> Autotools is not supported on native Windows.  Cmake can make VS solution
> files.
>
> Also Autotools hasn't worked for me for a long time even under Mingw64.
> Though in theory if I were energetic enough, I guess I could try to
> troubleshoot it.
>
> > How problematic would that be for contributors ?
> >
> > --strk;
> Extremely problematic if we drop CMake.
>
> What ever you drop will be problematic.

About packagers
if system FOO packager use autotools to build GEOS, and autotools is
dropped then they have to change to Cmake
if system BAR packager use Cmake to build GEOS, and autotools is dropped
then they have to change to autotools

if want to remove X, where X IN (Cmake autotools Nmake) then ask packagers
what they use and ask them also
how difficult is for them to build with Y, where Y IN (Cmake autotools
Nmake) AND X != Y

We already have an answer from Regina, "Autotools is not supported on
native Windows."

About contributors
if contributor A  use autotools to build GEOS, and autotools is droped then
they have to change (& probably learn) to Cmake
if contributor B  use Cmake to build GEOS, and autotools is droped then
they have to change to (& probably learn) autotools

For simple contributions like bug fixes, there is no problem the
contributor has nothing to do with autotools or Cmake or Nmake
if GEOS were using only Autotools then as C++ programmer I focus on C++ and
no need to change autotools or Cmake or Nmake, test it on travis & appveyor
if GEOS were using only Cmake then as C++ programmer I focus on C++ and no
need to change autotools or Cmake or Nmake, test it on travis & appveyor

For more complex contributions like adding a test file.
If the contributor knows Cmake, add the test file, and leave to the
autotools expert & Nmake expert the change so it works on that also
If the contributor knows autotools, add the test file, and leave to the
Cmake expert & Nmake expert the change so it works on that also
if the contributor does not know autotools or Nmake or Cmake, add the test
file, and leave to the Cmake expert & Nmake expert the change so it works
on everything
 - try not to ask the contributor to be experts on autotools and Nmake and
Cmake to make their contribution.
 - I know Cmake, but changes on autotools I do are by imitation and test on
Travis. (personally I refuse to learn autotools just because of GEOS, so
imitation is OK for me)

Current state:
- Cmake right now has issues (not building everything that autotools builds)
- Cmake has to be improved (dbaston has a beautiful CmakeLists file for
GEOS in a branch)

My conclusion is:
- Supporting autotools and Nmake and Cmake means a lot of overhead work for
the experts.
  - So, yes, try to keep to the minimum the building process.
  - NOTE: I am biased to: keep Cmake only & drop autotools and Nmake
- GEOS will get to the majority of the users as a package.
  - Ask packagers what they use and also what they can not use. (Like
Reginas example).
  - if CMake happens to work for windows and linux, why keep Nmake?
  - if CMake happens to work on all systems, why keep autotools?
  - Warn packagers on any decision made: "For v3.100 GEOS will be using
Cmake exclusively."
  - While transition to whatever is decided, don't ask the contributor to
be experts on autotools and Nmake and Cmake to make their contribution.
- If, for example, linux packagers use CMake to build GEOS for linux, then
there is no need to test autotools on linux. (see bellow)
- IMPORTANT: if CMake happens to work on all systems,
  - Do not drop autotools until CMake builds everything
    - It is not building everything, is one of the issues it has now.
  - During transition time
    - keep on things as they are now.

Use dbastons CMakeLists.txt work its cleaner. So maybe instead of v3.100 is
v3.50 when the change happens



> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel



-- 

Georepublic UG (haftungsbeschränkt)
Salzmannstraße 44,
81739 München, Germany

Vicky Vergara
Operations Research

eMail: vicky at georepublic.de
Web: https://georepublic.info

Tel: +49 (089) 4161 7698-1
Fax: +49 (089) 4161 7698-9

Commercial register: Amtsgericht München, HRB 181428
CEO: Daniel Kastl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181003/5de65fb6/attachment-0001.html>

From gdt at lexort.com  Wed Oct  3 17:51:51 2018
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 03 Oct 2018 20:51:51 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 (Vicky Vergara's message of "Wed, 3 Oct 2018 16:15:18 -0500")
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
 <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
Message-ID: <smumuruedp4.fsf@linuxpal.mit.edu>

pkgsrc is using autoconf.   I have had far more problems with cmake over
time than with autoconf.

This is obviously an issue where people disagree.

However, two observations where there is probably common ground:

  I don't understand windows native builds (because I don't use
  windows), but I don't understand why there is nmake and cmake both.
  If cmake exists to make windows builds work, then I would think nmake
  can go.  And if nmake is how windows native builds are done, I don't
  really see the point of cmake.   I am guessing this question would be
  resolved by dropping nmake.

  Given two systems (auto* and cmake), and the fact that geos seems to
  have had low rate of build system changes, I wonder if there is really
  a problem with both.

From lr at pcorp.us  Wed Oct  3 19:39:35 2018
From: lr at pcorp.us (Regina Obe)
Date: Wed, 3 Oct 2018 22:39:35 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <smumuruedp4.fsf@linuxpal.mit.edu>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu>
Message-ID: <001301d45b8b$7d77c510$78674f30$@pcorp.us>

> pkgsrc is using autoconf.   I have had far more problems with cmake over
> time than with autoconf.
> 

But you do use CMake for some things right?

I presume Debian and CentOS packagers already use CMake because they ship pgRouting and pgRouting only supports CMake.
Does CGAL support autotools?  I've never tried since I always went for the CMake.

If we went back in time 5-7 years ago, I would have said - let's not bother with CMake because not everyone has it and it was in my mind still kind of an experimental thing.

So I would like to get feedback from packagers, but my back of the hand calculation is that most are using CMake already to package something.
Geos is not that complicated of a tooling beast that I suspect it's not all that more painful to use CMake instead of Autotools.

When I was packaging 3.7.0 I spent 20% of my time cursing because there was this autotools configure thing, CMake make lists, and I think even NMake or some such thing
That all needed changing just to get a stupid version number in place.


> This is obviously an issue where people disagree.
> 
> However, two observations where there is probably common ground:
> 
>   I don't understand windows native builds (because I don't use
>   windows), but I don't understand why there is nmake and cmake both.
>   If cmake exists to make windows builds work, then I would think nmake
>   can go.  And if nmake is how windows native builds are done, I don't
>   really see the point of cmake.   I am guessing this question would be
>   resolved by dropping nmake.

If we do nothing else, let's get rid of NMake. It existed before we had CMake, and my general feel is most windows folks have migrated to CMake :)
I think all windows users regardless of their IDE of choice can comfortably run with CMake

> 
>   Given two systems (auto* and cmake), and the fact that geos seems to
>   have had low rate of build system changes, I wonder if there is really
>   a problem with both.
[Regina Obe] 

The problem with that thinking is that it HAS HAD low rate of building system changes
This I'm pretty sure will change in 3.8.  Both Dan and Vicky have huge plans for improving GEOS
Which means we are going to have to add a ton more tests to the GEOS suite to ensure we don't break things.

This will become very time consuming if we have to test against autotools and CMake.

I'm not sure if it's true for other people, or if it's just because I'm working on a Handicapped platform
But for me even when autotools WAS working GEOS compiled way faster under CMake than it did under autotools.

If that is true for others, those cycles make a big difference for development.


Thanks,
Regina



From lr at pcorp.us  Wed Oct  3 20:07:38 2018
From: lr at pcorp.us (Regina Obe)
Date: Wed, 3 Oct 2018 23:07:38 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
Message-ID: <001401d45b8f$689bf810$39d3e830$@pcorp.us>

 

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Vicky Vergara
Sent: Wednesday, October 03, 2018 5:15 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: Re: [geos-devel] RFC7 - Use CMake as build system for GEOS

 

 

My conclusion is:

- Supporting autotools and Nmake and Cmake means a lot of overhead work for the experts.

  - So, yes, try to keep to the minimum the building process.

  - NOTE: I am biased to: keep Cmake only & drop autotools and Nmake 

- GEOS will get to the majority of the users as a package.

  - Ask packagers what they use and also what they can not use. (Like Reginas example). 

  - if CMake happens to work for windows and linux, why keep Nmake?

  - if CMake happens to work on all systems, why keep autotools?

  - Warn packagers on any decision made: "For v3.100 GEOS will be using Cmake exclusively."

  - While transition to whatever is decided, don't ask the contributor to be experts on autotools and Nmake and Cmake to make their contribution.

- If, for example, linux packagers use CMake to build GEOS for linux, then there is no need to test autotools on linux. (see bellow)

- IMPORTANT: if CMake happens to work on all systems, 

  - Do not drop autotools until CMake builds everything

    - It is not building everything, is one of the issues it has now.

  - During transition time

    - keep on things as they are now.

 

Use dbastons CMakeLists.txt work its cleaner. So maybe instead of v3.100 is v3.50 when the change happens

 

 
[Regina Obe] 
 
Alright this is an important point.  We can't change to Cmake just yet because autotools is more complete and our model of Cmake use is antiquated and Dan's Cmake changes haven't been fully tested.
 
So first step would be to say – WE OFFICIALLY SUPPORT CMAKE
 
And then work our way to dropping autotools in the next 3 years.
 
Thanks,
Regina
 
 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181003/5e357985/attachment.html>

From lr at pcorp.us  Wed Oct  3 20:12:18 2018
From: lr at pcorp.us (Regina Obe)
Date: Wed, 3 Oct 2018 23:12:18 -0400
Subject: [geos-devel] PSC Vote: Drop NMAKE
Message-ID: <001901d45b90$0f7fd0c0$2e7f7240$@pcorp.us>

I think we should drop Nmake.

+1

Does anyone have issues with that if we drop in 3.8?
I think Cmake is superior in every way for windows building.

Thanks,
Regna


From mwtoews at gmail.com  Wed Oct  3 21:10:14 2018
From: mwtoews at gmail.com (Mike Toews)
Date: Thu, 4 Oct 2018 17:10:14 +1300
Subject: [geos-devel] PSC Vote: Drop NMAKE
In-Reply-To: <001901d45b90$0f7fd0c0$2e7f7240$@pcorp.us>
References: <001901d45b90$0f7fd0c0$2e7f7240$@pcorp.us>
Message-ID: <CAM2FmMo2QhNXm79PV-CYqMsSs=2Ps7OqtWcm-LJyqT_ZMS8P=Q@mail.gmail.com>

On Thu, 4 Oct 2018 at 16:12, Regina Obe <lr at pcorp.us> wrote:
> I think we should drop Nmake.

It's worth mentioning that PROJ version 6 is planning to drop NMAKE:
https://github.com/OSGeo/proj.4/pull/1137

From sebastic at xs4all.nl  Wed Oct  3 22:13:04 2018
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 4 Oct 2018 07:13:04 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <001301d45b8b$7d77c510$78674f30$@pcorp.us>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu> <001301d45b8b$7d77c510$78674f30$@pcorp.us>
Message-ID: <43f07adf-1c26-1fcd-672b-506c63bd4bee@xs4all.nl>

On 10/4/18 4:39 AM, Regina Obe wrote:
>> pkgsrc is using autoconf.   I have had far more problems with cmake over
>> time than with autoconf.
>>
> 
> But you do use CMake for some things right?
> 
> I presume Debian and CentOS packagers already use CMake because they ship pgRouting and pgRouting only supports CMake.
> Does CGAL support autotools?  I've never tried since I always went for the CMake.

Debian packaging tools also support CMake.

For the geos package autotools is used because that's the official
buildsystem and on Linux superior to CMake. E.g. libtool does the right
thing with library versioning.

I would prefer if geos kept autotools as the default buildsystem for
Linux, using CMake for Windows and other systems is fine with me.

> If we went back in time 5-7 years ago, I would have said - let's not bother with CMake because not everyone has it and it was in my mind still kind of an experimental thing.
> 
> So I would like to get feedback from packagers, but my back of the hand calculation is that most are using CMake already to package something.
> Geos is not that complicated of a tooling beast that I suspect it's not all that more painful to use CMake instead of Autotools.
> 
> When I was packaging 3.7.0 I spent 20% of my time cursing because there was this autotools configure thing, CMake make lists, and I think even NMake or some such thing
> That all needed changing just to get a stupid version number in place.
> 
> 
>> This is obviously an issue where people disagree.
>>
>> However, two observations where there is probably common ground:
>>
>>   I don't understand windows native builds (because I don't use
>>   windows), but I don't understand why there is nmake and cmake both.
>>   If cmake exists to make windows builds work, then I would think nmake
>>   can go.  And if nmake is how windows native builds are done, I don't
>>   really see the point of cmake.   I am guessing this question would be
>>   resolved by dropping nmake.
> 
> If we do nothing else, let's get rid of NMake. It existed before we had CMake, and my general feel is most windows folks have migrated to CMake :)
> I think all windows users regardless of their IDE of choice can comfortably run with CMake
> 
>>
>>   Given two systems (auto* and cmake), and the fact that geos seems to
>>   have had low rate of build system changes, I wonder if there is really
>>   a problem with both.
> [Regina Obe] 
> 
> The problem with that thinking is that it HAS HAD low rate of building system changes
> This I'm pretty sure will change in 3.8.  Both Dan and Vicky have huge plans for improving GEOS
> Which means we are going to have to add a ton more tests to the GEOS suite to ensure we don't break things.
> 
> This will become very time consuming if we have to test against autotools and CMake.
> 
> I'm not sure if it's true for other people, or if it's just because I'm working on a Handicapped platform
> But for me even when autotools WAS working GEOS compiled way faster under CMake than it did under autotools.
> 
> If that is true for others, those cycles make a big difference for development.
> 
> 
> Thanks,
> Regina
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 


From strk at kbt.io  Thu Oct  4 01:43:58 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 10:43:58 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <be7e41a7-8b36-0f80-32bf-11f96d49c435@gatewaygeomatics.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
 <be7e41a7-8b36-0f80-32bf-11f96d49c435@gatewaygeomatics.com>
Message-ID: <20181004084358.GO24144@liz>

On Wed, Oct 03, 2018 at 04:23:33PM -0300, Jeff McKenna wrote:
> On 2018-10-03 4:20 PM, Sandro Santilli wrote:
> >
> > If we drop CMake support, they won't bother.
> > How problematic would that be for contributors ?
> 
> Can you define what you mean by "that" in your last sentence?  What are you
> proposing?

I'm proposing we drop CMake completely, or make it harder
to find (like move it under experimental/ directory or similar)

--strk;

From strk at kbt.io  Thu Oct  4 01:50:34 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 10:50:34 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
Message-ID: <20181004085034.GP24144@liz>

On Wed, Oct 03, 2018 at 02:41:34PM -0400, Daniel Baston wrote:
> 
> Are you asking whether the GEOS test suite can be run against
> a non-installed copy of the library (yes), or are you referring to
> other tests?

I'm asking if we can have a "make check" rule, generated by CMake,
that will run the same tests run by current "make check" rule
generated by autotools and with the same important condition of
built binaries and libraries _NOT_ moving out of the build tree.

Also I'd like to have a "make dist" and "make distcheck" and
of course the other custom ones ("apidoc"/"doxygen"/"pdf",
"gen-ChangeLog" etc.)


--strk;

From strk at kbt.io  Thu Oct  4 01:51:03 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 10:51:03 +0200
Subject: [geos-devel] PSC Vote: Drop NMAKE
In-Reply-To: <001901d45b90$0f7fd0c0$2e7f7240$@pcorp.us>
References: <001901d45b90$0f7fd0c0$2e7f7240$@pcorp.us>
Message-ID: <20181004085103.GQ24144@liz>

On Wed, Oct 03, 2018 at 11:12:18PM -0400, Regina Obe wrote:
> I think we should drop Nmake.
> 
> +1

+1

--strk;

From dbaston at gmail.com  Thu Oct  4 05:18:07 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Thu, 4 Oct 2018 08:18:07 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181004085034.GP24144@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
Message-ID: <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>

> I'm asking if we can have a "make check" rule, generated by CMake,
> that will run the same tests run by current "make check" rule
> generated by autotools and with the same important condition of
> built binaries and libraries _NOT_ moving out of the build tree.
>
> Also I'd like to have a "make dist" and "make distcheck" and
> of course the other custom ones ("apidoc"/"doxygen"/"pdf",
> "gen-ChangeLog" etc.)

Can you clarify how this request relates to your proposal to drop CMake
entirely? If this question can be answered to your satisfaction, do you still
wish to drop CMake? (I'm hesitant to spent time investigating if you're not
interested in the answer.)

Dan

From gdt at lexort.com  Thu Oct  4 05:25:46 2018
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 04 Oct 2018 08:25:46 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <43f07adf-1c26-1fcd-672b-506c63bd4bee@xs4all.nl> (Sebastiaan
 Couwenberg's message of "Thu, 4 Oct 2018 07:13:04 +0200")
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
 <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu>
 <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <43f07adf-1c26-1fcd-672b-506c63bd4bee@xs4all.nl>
Message-ID: <smu8t3dew51.fsf@linuxpal.mit.edu>

Sebastiaan Couwenberg <sebastic at xs4all.nl> writes:

> On 10/4/18 4:39 AM, Regina Obe wrote:
>>> pkgsrc is using autoconf.   I have had far more problems with cmake over
>>> time than with autoconf.
>>>
>> 
>> But you do use CMake for some things right?
>> 
>> I presume Debian and CentOS packagers already use CMake because they ship pgRouting and pgRouting only supports CMake.
>> Does CGAL support autotools?  I've never tried since I always went for the CMake.
>
> Debian packaging tools also support CMake.

pkgsrc does too.  Basically it is well more than prevalent enough that
packaging systems esentially have to.

> For the geos package autotools is used because that's the official
> buildsystem and on Linux superior to CMake. E.g. libtool does the right
> thing with library versioning.

I have never tried geos cmake, but my broad experience over the years is
that autotools-based systems almost entirely work correctly and
cmake-based systems are more troubled.

> I would prefer if geos kept autotools as the default buildsystem for
> Linux, using CMake for Windows and other systems is fine with me.

Seconded, except I would say default on "systems conforming to POSIX"
rather than just Linux.

>> When I was packaging 3.7.0 I spent 20% of my time cursing because
>> there was this autotools configure thing, CMake make lists, and I
>> think even NMake or some such thing
>> That all needed changing just to get a stupid version number in place.

Do you mean changing one number in one line in configure.ac, and one
line in some cmake file?

>> The problem with that thinking is that it HAS HAD low rate of building system changes
>> This I'm pretty sure will change in 3.8.  Both Dan and Vicky have huge plans for improving GEOS
>> Which means we are going to have to add a ton more tests to the GEOS suite to ensure we don't break things.
>> 
>> This will become very time consuming if we have to test against autotools and CMake.

It seems that the downside of two is adding each test file in two
places, and this seems tiny compared to writing and testing a test file.

>> I'm not sure if it's true for other people, or if it's just because I'm working on a Handicapped platform
>> But for me even when autotools WAS working GEOS compiled way faster under CMake than it did under autotools.

Try compiling cmake too.  On some systems I test on it takes hours to
build cmake.

>> If that is true for others, those cycles make a big difference for development.

If you have just changed source files and rebuild, you just run make.
If you are doing a full regression test, then it does more.

From strk at kbt.io  Thu Oct  4 06:00:17 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 15:00:17 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
 <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
Message-ID: <20181004130017.GX24144@liz>

On Thu, Oct 04, 2018 at 08:18:07AM -0400, Daniel Baston wrote:
> > I'm asking if we can have a "make check" rule, generated by CMake,
> > that will run the same tests run by current "make check" rule
> > generated by autotools and with the same important condition of
> > built binaries and libraries _NOT_ moving out of the build tree.
> >
> > Also I'd like to have a "make dist" and "make distcheck" and
> > of course the other custom ones ("apidoc"/"doxygen"/"pdf",
> > "gen-ChangeLog" etc.)
> 
> Can you clarify how this request relates to your proposal to drop CMake
> entirely? If this question can be answered to your satisfaction, do you still
> wish to drop CMake? (I'm hesitant to spent time investigating if you're not
> interested in the answer.)

Proposal of dropping CMake is only driven by raised concerns about
contributors confusion. I don't care if CMake is kept, as long as
I (as a contributor) don't have to maintain it.

--strk;

From gdt at lexort.com  Thu Oct  4 06:03:32 2018
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 04 Oct 2018 09:03:32 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181004085034.GP24144@liz> (Sandro Santilli's message of "Thu, 
 4 Oct 2018 10:50:34 +0200")
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
Message-ID: <smu4le1eue3.fsf@linuxpal.mit.edu>

Sandro Santilli <strk at kbt.io> writes:

> On Wed, Oct 03, 2018 at 02:41:34PM -0400, Daniel Baston wrote:
>> 
>> Are you asking whether the GEOS test suite can be run against
>> a non-installed copy of the library (yes), or are you referring to
>> other tests?
>
> I'm asking if we can have a "make check" rule, generated by CMake,
> that will run the same tests run by current "make check" rule
> generated by autotools and with the same important condition of
> built binaries and libraries _NOT_ moving out of the build tree.
>
> Also I'd like to have a "make dist" and "make distcheck" and
> of course the other custom ones ("apidoc"/"doxygen"/"pdf",
> "gen-ChangeLog" etc.)

Agreed that these things are necessary.

This is a key part of why there is pushback from people that don't want
to drop autotools in favor of cmake (strk, bas, and me, at least).
cmake's reason for existence is basically supporting native windows
builds, but it is a step backwards on posix platforms, lacking "make
check" (testing not installed files), "make dist", and "make distcheck"
(testing not only not installed files, but an objdir build of the
just-produced distfile).  Perhaps I'm confused and all of those things
are automatically supported somehow.

And it's not clear to me that cmake supports cross builds by default.


Looking at the goes CMakeList, there are options added for gcc, and for
MS, but some of the gcc options belong for clang too (because they
aren't really gcc options).  In configure.ac, flags are added if
supported, without checking for exact compiler type (and thus working
with clang).

Another place to look for simplification is to stop testing for things
that are required by POSIX, unless it's needed to accomodate windows.
An example is stdint.h and the notion of 64-bit integer types.   It's
true that posix doesn't strictly require int64_t and uint64_t, but it
does say that if 64-bit types exist they have to be usable by those
names:
  http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/stdint.h.html

Another source of complexity in the cmake build seems to be some mac
framework build that's doing things in a special mac-y way instead of
just using mac as posix.  That is not present in the autoconf build.


I tried the cmake build on NetBSD, and it failed early with isnan
issues.  (The autotools build works fine, which is no surprise since
it's been the standard approach and is well debugged.)   So I wonder how
well the cmake build has been tested on other than windows, and it
seems premature to propose removing autotools.




From gdt at lexort.com  Thu Oct  4 06:05:19 2018
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 04 Oct 2018 09:05:19 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
 (Daniel Baston's message of "Thu, 4 Oct 2018 08:18:07 -0400")
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
 <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
Message-ID: <smuzhvtdfqo.fsf@linuxpal.mit.edu>

Daniel Baston <dbaston at gmail.com> writes:

>> I'm asking if we can have a "make check" rule, generated by CMake,
>> that will run the same tests run by current "make check" rule
>> generated by autotools and with the same important condition of
>> built binaries and libraries _NOT_ moving out of the build tree.
>>
>> Also I'd like to have a "make dist" and "make distcheck" and
>> of course the other custom ones ("apidoc"/"doxygen"/"pdf",
>> "gen-ChangeLog" etc.)
>
> Can you clarify how this request relates to your proposal to drop CMake
> entirely? If this question can be answered to your satisfaction, do you still
> wish to drop CMake? (I'm hesitant to spent time investigating if you're not
> interested in the answer.)

I'm pretty sure he means:

  if there is serious talk of removing autotools, then the cmake build
  has to support make check/dist/distcheck, so that moving to cmake
  isn't a regression
  

From dbaston at gmail.com  Thu Oct  4 06:12:38 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Thu, 4 Oct 2018 09:12:38 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181004130017.GX24144@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
 <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
 <20181004130017.GX24144@liz>
Message-ID: <CA+K_q_pDpNer0FSJqoRg+EE+5CubxcyY7LJrWK=B+8_v2wUHSQ@mail.gmail.com>

> Proposal of dropping CMake is only driven by raised concerns about
> contributors confusion. I don't care if CMake is kept, as long as
> I (as a contributor) don't have to maintain it.

Thanks for clarifying.

This RFC is about dropping autotools and NMake in favor of CMake,
for the reasons described in the RFC. Is there additional information that
I can supply (or research) that would help you make a decision on this?

Dan

From gdt at lexort.com  Thu Oct  4 06:28:57 2018
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 04 Oct 2018 09:28:57 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
Message-ID: <smumurtdena.fsf@linuxpal.mit.edu>

I'm seeing test failures in trunk, built with autotools in an objdir
with gcc 4.8 on NetBSD 7 amd64.  They are obviously C++ build issues,
but only happen when building tests.  I am not trying to ask others to
debug these in this mail.

I looked in README.md to find out what version of C++ is needed, and
don't see any --std= flags inserted in the build.  Various compiler
versions seem to have varying default standards, and it seems best to
declare the version being used so that builds will hard fail obviously
if that isn't ok.

In my case, I think gcc 4.8 almost entirely supports C++11, but defaults
to C++03 without --std=c++11.

From strk at kbt.io  Thu Oct  4 06:32:14 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 15:32:14 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CA+K_q_pDpNer0FSJqoRg+EE+5CubxcyY7LJrWK=B+8_v2wUHSQ@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
 <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
 <20181004130017.GX24144@liz>
 <CA+K_q_pDpNer0FSJqoRg+EE+5CubxcyY7LJrWK=B+8_v2wUHSQ@mail.gmail.com>
Message-ID: <20181004133214.GY24144@liz>

On Thu, Oct 04, 2018 at 09:12:38AM -0400, Daniel Baston wrote:
> > Proposal of dropping CMake is only driven by raised concerns about
> > contributors confusion. I don't care if CMake is kept, as long as
> > I (as a contributor) don't have to maintain it.
> 
> Thanks for clarifying.
> 
> This RFC is about dropping autotools and NMake in favor of CMake,
> for the reasons described in the RFC. Is there additional information that
> I can supply (or research) that would help you make a decision on this?

What you can do to make _me_ use cmake is providing the
UI and functionality I'm used to, something like:

Build with:

  mkdir build && cd build/ &&
  ../configure &&
  make &&
  make check &&
  make distcheck &&
  make dist &&
  make install

Test single cases with:

    tests/unit/geos_unit <args>

and/or:

    tests/xmltester/XMLTester <args>

With those testers using the _built_ (not the _installed_)
libraries.

If you can get CMake to reach that state of functionality
I might start using it and see how hard it would be for me
as a contributor to also maintain it.

--strk;

From dbaston at gmail.com  Thu Oct  4 06:39:11 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Thu, 4 Oct 2018 09:39:11 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181004133214.GY24144@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
 <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
 <20181004130017.GX24144@liz>
 <CA+K_q_pDpNer0FSJqoRg+EE+5CubxcyY7LJrWK=B+8_v2wUHSQ@mail.gmail.com>
 <20181004133214.GY24144@liz>
Message-ID: <CA+K_q_qr-jAxqrM7kgX-7c3Py4V5G=PKG5VA9T4ndbJSPP9thw@mail.gmail.com>

> What you can do to make _me_ use cmake is providing the
> UI and functionality I'm used to

The pieces I'm not sure about are "make dist" and "make distcheck."

The other things you listed are supported. I can try and clarify the docs
at https://trac.osgeo.org/geos/wiki/BuildingOnUnixWithCMake

> If you can get CMake to reach that state of functionality
> I might start using it and see how hard it would be for me
> as a contributor to also maintain it.

I think it's at a state where you could try it for development.

Dan

From strk at kbt.io  Thu Oct  4 06:42:32 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 15:42:32 +0200
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <smumurtdena.fsf@linuxpal.mit.edu>
References: <smumurtdena.fsf@linuxpal.mit.edu>
Message-ID: <20181004134232.GB24144@liz>

On Thu, Oct 04, 2018 at 09:28:57AM -0400, Greg Troxel wrote:
> I'm seeing test failures in trunk, built with autotools in an objdir
> with gcc 4.8 on NetBSD 7 amd64.  They are obviously C++ build issues,
> but only happen when building tests.  I am not trying to ask others to
> debug these in this mail.
> 
> I looked in README.md to find out what version of C++ is needed, and
> don't see any --std= flags inserted in the build.  Various compiler
> versions seem to have varying default standards, and it seems best to
> declare the version being used so that builds will hard fail obviously
> if that isn't ok.
> 
> In my case, I think gcc 4.8 almost entirely supports C++11, but defaults
> to C++03 without --std=c++11.

Could it be one of those autoconf-version related issues ?
Supposedly -std=c++11 should be added by the call to

    AX_CXX_COMPILE_STDCXX

which is found in configure.ac and defined in
macros/ax_cxx_compile_stdcxx.m4

I haven't worked on this part myself (Mateusz did) so don't
know much more than what I just found out..

--strk;

From sebastic at xs4all.nl  Thu Oct  4 06:47:12 2018
From: sebastic at xs4all.nl (Bas Couwenberg)
Date: Thu, 04 Oct 2018 15:47:12 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CA+K_q_qr-jAxqrM7kgX-7c3Py4V5G=PKG5VA9T4ndbJSPP9thw@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz>
 <CA+K_q_rYbE-WZf4bcd298cAyHre31ri9LyBxm1mVWocfD5poBQ@mail.gmail.com>
 <20181004085034.GP24144@liz>
 <CA+K_q_qf79uRiPUEhUx7N-MD_pc436z+uhHaEC3O9J20CAWKug@mail.gmail.com>
 <20181004130017.GX24144@liz>
 <CA+K_q_pDpNer0FSJqoRg+EE+5CubxcyY7LJrWK=B+8_v2wUHSQ@mail.gmail.com>
 <20181004133214.GY24144@liz>
 <CA+K_q_qr-jAxqrM7kgX-7c3Py4V5G=PKG5VA9T4ndbJSPP9thw@mail.gmail.com>
Message-ID: <52955f352d06c53971235877d1c9b2f8@xs4all.nl>

On 2018-10-04 15:39, Daniel Baston wrote:
>> What you can do to make _me_ use cmake is providing the
>> UI and functionality I'm used to
> 
> The pieces I'm not sure about are "make dist" and "make distcheck."

autotools and cmake take the opposite approach to creating distribution 
archives.

autotools only includes the files it is configured to.

cmake includes everything in the source tree not explicitly excluded.

To support `make dist` with CMake you need to add a custom target:

  add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)

And configure CPACK_SOURCE_IGNORE_FILES to exclude everything that 
should not end up in the archives.

For `make distcheck` you'll need to implement more custom targets.

NetCDF may be a source of inspiration:

  
https://github.com/Unidata/netcdf-c/blob/master/cmake/modules/FindMakeDist.cmake

Kind Regards,

Bas

From geos-trac at osgeo.org  Thu Oct  4 06:51:43 2018
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 04 Oct 2018 13:51:43 -0000
Subject: [geos-devel] [GEOS] #931: Add "dist" and "distcheck" targets to
	CMake
Message-ID: <045.00ec8ed1072d7f5b1cb2a7b5a3be2996@osgeo.org>

#931: Add "dist" and "distcheck" targets to CMake
------------------------+--------------------------
 Reporter:  dbaston     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 From Bas Couwenberg:

   autotools and cmake take the opposite approach to creating
   distribution
   archives.

   autotools only includes the files it is configured to.

   cmake includes everything in the source tree not explicitly
   excluded.

   To support `make dist` with CMake you need to add a custom
   target:

   add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)

   And configure CPACK_SOURCE_IGNORE_FILES to exclude everything that
 should not end up in the archives.

   For `make distcheck` you'll need to implement more custom targets.

   NetCDF may be a source of inspiration:


 https://github.com/Unidata/netcdf-c/blob/master/cmake/modules/FindMakeDist.cmake

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/931>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Oct  4 06:51:50 2018
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 04 Oct 2018 13:51:50 -0000
Subject: [geos-devel] [GEOS] #931: Add "dist" and "distcheck" targets to
	CMake
In-Reply-To: <045.00ec8ed1072d7f5b1cb2a7b5a3be2996@osgeo.org>
References: <045.00ec8ed1072d7f5b1cb2a7b5a3be2996@osgeo.org>
Message-ID: <060.9c7ed8f55250580d01c2fd73b6b61a4f@osgeo.org>

#931: Add "dist" and "distcheck" targets to CMake
------------------------+----------------------
 Reporter:  dbaston     |       Owner:  dbaston
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+----------------------
Changes (by dbaston):

 * owner:  geos-devel@… => dbaston


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/931#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From lr at pcorp.us  Thu Oct  4 06:58:23 2018
From: lr at pcorp.us (Regina Obe)
Date: Thu, 4 Oct 2018 09:58:23 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <smu8t3dew51.fsf@linuxpal.mit.edu>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu> <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <43f07adf-1c26-1fcd-672b-506c63bd4bee@xs4all.nl>
 <smu8t3dew51.fsf@linuxpal.mit.edu>
Message-ID: <001201d45bea$51865520$f492ff60$@pcorp.us>

> > For the geos package autotools is used because that's the official
> > buildsystem and on Linux superior to CMake. E.g. libtool does the
> > right thing with library versioning.
> 
> I have never tried geos cmake, but my broad experience over the years is that
> autotools-based systems almost entirely work correctly and cmake-based
> systems are more troubled.
> 
> > I would prefer if geos kept autotools as the default buildsystem for
> > Linux, using CMake for Windows and other systems is fine with me.
> 
> Seconded, except I would say default on "systems conforming to POSIX"
> rather than just Linux.

[Regina Obe] 
Okay seems pretty clear we can't get rid of autotools, at least not for a while.
And as Vicky pointed out the CMake setup in GEOS is kinda old and needs to be reworked of which Dan did a bit of already.

I think though it is used by more than just Windows builds.  
As Vicky mentioned to me, she doesn't even have autotools installed and she has an Ubuntu desktop.
She knows nothing about autotools and would rather use CMake if she needs to setup tests.
-- Vicky sorry for putting words into your mouth :)

> 
> >> When I was packaging 3.7.0 I spent 20% of my time cursing because
> >> there was this autotools configure thing, CMake make lists, and I
> >> think even NMake or some such thing That all needed changing just to
> >> get a stupid version number in place.
> 
> Do you mean changing one number in one line in configure.ac, and one line in
> some cmake file?
> 

[Regina Obe] 
Yes and another line in some other file.  There might be a way to resolve this.
It just made me mad I had to do this in 3 different places.


> >> The problem with that thinking is that it HAS HAD low rate of
> >> building system changes This I'm pretty sure will change in 3.8.
> >> Both Dan and Vicky have huge plans for improving GEOS Which means we
> are going to have to add a ton more tests to the GEOS suite to ensure we
> don't break things.
> >>
> >> This will become very time consuming if we have to test against autotools
> and CMake.
> 
> It seems that the downside of two is adding each test file in two places, and
> this seems tiny compared to writing and testing a test file.
> 
> If you have just changed source files and rebuild, you just run make.
> If you are doing a full regression test, then it does more.

[Regina Obe] 
Well I kinda have to run full regression.  
 I know the compile itself is much slower and I like to start with a clean compile each time.

The tests it's hard to tell if it's just that CMake is testing less or if it is faster in testing.

Our autotools tests also seem more cryptic to me when they error out, as I recall I get something stupid like

100 PASS, 2 FAIL  without any detail about what unless I go to the log file and make sense of it.

The CMake ones are broken out into sections so easier to see what failed.

Anyrate I think the above is just my inexperience combined with different setup of CMake/Autotools
And not really a CMake is better than Autotools per se.  I'm sure autotools testing can be made as nice as it is pretty nice in PostGIS :)

Funny how I'm arguing CMake here and on PostGIS, I'd say - never, use mingw64 if you wanna build PostGIS for windows
despite people coming on every once in a while pushing Cmake.

I'd be happy if we can somehow come up with some method of sharing tests
between CMake and Autotools - which I think we can.

Much of the frustration I think why we are even having this discussion is the fact that we have separate tests for each and I don't think it has to be that way
Developers these days also seem more passionate about CMake than autotools and since they are the ones giving the patches, I'd like to continue supporting CMake
And stop telling people it's experimental.

-- strk if you had fixed autotools like I yelled at you a couple of years ago, I'd probably be on the autotools side :)
I think my issue with autotools is along the line of what Greg mentioned with NetBSD.  I get stupid cryptic notes about my 64-bitness 
because I'm not using Linux even though I am building with a Posix based system.


Thanks,
Regina

 


From lr at pcorp.us  Thu Oct  4 07:09:10 2018
From: lr at pcorp.us (Regina Obe)
Date: Thu, 4 Oct 2018 10:09:10 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <smumurtdena.fsf@linuxpal.mit.edu>
References: <smumurtdena.fsf@linuxpal.mit.edu>
Message-ID: <001301d45beb$d2e39780$78aac680$@pcorp.us>

> I'm seeing test failures in trunk, built with autotools in an objdir with gcc 4.8
> on NetBSD 7 amd64.  They are obviously C++ build issues, but only happen
> when building tests.  I am not trying to ask others to debug these in this mail.
> 
> I looked in README.md to find out what version of C++ is needed, and don't
> see any --std= flags inserted in the build.  Various compiler versions seem to
> have varying default standards, and it seems best to declare the version being
> used so that builds will hard fail obviously if that isn't ok.
> 
> In my case, I think gcc 4.8 almost entirely supports C++11, but defaults to
> C++03 without --std=c++11.
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
[Regina Obe] 
What error are you getting?  When I try to build using autotools, it also fails too building the tests

https://trac.osgeo.org/geos/ticket/913

I assume your issue is different as on mine looks like it's just looking for a non-existent file on my system
And also mixing C and C++ constructions (like namespace)

I haven't retested recently under autotools so the namespace issue might be fixed.


In file included from C:/ming64gcc48/mingw64/x86_64-w64-mingw32/include/unistd.h:10,
                 from threadtest.c:19:
../../include/geos/io.h:19:1: error: unknown type name 'namespace'
 namespace geos {
 ^~~~~~~~~
../../include/geos/io.h:19:16: error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
 namespace geos {
                ^
In file included from ../../include/geos/io.h:48,
                 from C:/ming64gcc48/mingw64/x86_64-w64-mingw32/include/unistd.h:10,
                 from threadtest.c:19:
../../include/geos/io/ByteOrderDataInStream.h:30:10: fatal error: iosfwd: No such file or directory
 #include <iosfwd> // ostream, istream (if we remove inlines)
          ^~~~~~~~
compilation terminated.
Makefile:443: recipe for target 'threadtest.o' failed
make[4]: *** [threadtest.o] Error 1
make[4]: Leaving directory '/projects/geos/geos-3.7.0beta2/tests/thread'
Makefile:555: recipe for target 'check-am' failed
make[3]: *** [check-am] Error 2
make[3]: Leaving directory '/projects/geos/geos-3.7.0beta2/tests/thread'
Makefile:429: recipe for target 'check-recursive' failed
make[2]: *** [check-recursive] Error 1
make[2]: Leaving directory '/projects/geos/geos-3.7.0beta2/tests'
Makefile:480: recipe for target 'check-recursive' failed
make[1]: *** [check-recursive] Error 1
make[1]: Leaving directory '/projects/geos/geos-3.7.0beta2'
Makefile:776: recipe for target 'check' failed
make: *** [check] Error 2


From dbaston at gmail.com  Thu Oct  4 07:09:18 2018
From: dbaston at gmail.com (Daniel Baston)
Date: Thu, 4 Oct 2018 10:09:18 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <001201d45bea$51865520$f492ff60$@pcorp.us>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu> <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <43f07adf-1c26-1fcd-672b-506c63bd4bee@xs4all.nl>
 <smu8t3dew51.fsf@linuxpal.mit.edu>
 <001201d45bea$51865520$f492ff60$@pcorp.us>
Message-ID: <CA+K_q_qjnBVTEbXQ-SmUEVMk9He4BSdrVH2wivxHSK5r=LHxOg@mail.gmail.com>

On Thu, Oct 4, 2018 at 9:58 AM Regina Obe <lr at pcorp.us> wrote:

> And as Vicky pointed out the CMake setup in GEOS is kinda old and needs to be reworked of which Dan did a bit of already.

I think people may be thinking of Mateusz. I haven't done any
work on the GEOS CMake configuration, though I'm interested.

Dan

From strk at kbt.io  Thu Oct  4 07:16:28 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 16:16:28 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <001301d45b8b$7d77c510$78674f30$@pcorp.us>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
 <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu>
 <001301d45b8b$7d77c510$78674f30$@pcorp.us>
Message-ID: <20181004141628.GA15548@liz>

On Wed, Oct 03, 2018 at 10:39:35PM -0400, Regina Obe wrote:

> But for me even when autotools WAS working GEOS compiled way faster
> under CMake than it did under autotools.

I got curious and tested on my system (Ubuntu GNU/Linux 18.04.1 LTS).
For me, autotools build is slightly faster:

  build-autotools$ time ( ../configure && make; )
  real    5m53.185s
  user    5m27.561s
  sys     0m27.071s


  build-cmake$ time ( cmake ../ && make; )
  real    6m18.942s
  user    5m47.012s
  sys     0m31.433s


Versions:

  cmake version 3.10.2
  automake (GNU automake) 1.15.1
  autoconf (GNU Autoconf) 2.69
  libtool (GNU libtool) 2.4.6


Install/uninstall steps:

  build-cmake$ time sudo make install
  real    0m1.514s
  user    0m0.403s
  sys     0m0.232s
  build-cmake$ time sudo make uninstall
  real    0m3.160s
  user    0m2.130s
  sys     0m1.048s

  build-autotools$ time sudo make install
  real    0m10.302s
  user    0m9.643s
  sys     0m0.737s
  build-autotools$ time sudo make uninstall
  real    0m0.802s
  user    0m0.732s
  sys     0m0.109s

Note that the extra time on "make install" for autotools
is due to some problematic dependency encoded to deal with
GEOS revision flag, used to build final library (not sure
a ticket exists for that already)

--strk;


From strk at kbt.io  Thu Oct  4 07:40:34 2018
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 4 Oct 2018 16:40:34 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181004141628.GA15548@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
 <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu>
 <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <20181004141628.GA15548@liz>
Message-ID: <20181004144034.GB15548@liz>

On Thu, Oct 04, 2018 at 04:16:28PM +0200, Sandro Santilli wrote:

> Install/uninstall steps:
> 
>   build-cmake$ time sudo make install
>   real    0m1.514s
>   user    0m0.403s
>   sys     0m0.232s
> 
>   build-autotools$ time sudo make install
>   real    0m10.302s
>   user    0m9.643s
>   sys     0m0.737s
> 
> Note that the extra time on "make install" for autotools
> is due to some problematic dependency encoded to deal with
> GEOS revision flag, used to build final library (not sure
> a ticket exists for that already)

After fixing the bug in tools/repo_revision.sh these are
the new timings (cmake twice as fast at install):

    build-autotools$ time sudo make install
    real    0m2.905s
    user    0m2.379s
    sys     0m0.595s

--strk;

From geos-trac at osgeo.org  Fri Oct  5 06:42:24 2018
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 05 Oct 2018 13:42:24 -0000
Subject: [geos-devel] [GEOS] #932: improve static-library build
Message-ID: <048.54c0bea610c1f1ac770541fb23e138e4@osgeo.org>

#932: improve static-library build
------------------------+--------------------------
 Reporter:  basiliscos  |      Owner:  geos-devel@…
     Type:  patch       |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  master
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 When I launch CMake with the following parameters:

 {{{
 cmake -DGEOS_BUILD_STATIC=on -DGEOS_BUILD_SHARED=off ..
 }}}

 it fails with the error:

 {{{
 CMake Error at capi/CMakeLists.txt:45 (add_dependencies):
   Cannot add target-level dependencies to non-existent target "geos_c".

   The add_dependencies works for top-level logical targets created by the
   add_executable, add_library, or add_custom_target commands.  If you want
 to
   add file-level dependencies see the DEPENDS option of the
 add_custom_target
   and add_custom_command commands.

 }}}

 The provided patch makes it optional to build C API (on by default, as in
 master), and static library builds fine.

 The geos version is 3.7.0

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/932>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct  5 06:43:05 2018
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 05 Oct 2018 13:43:05 -0000
Subject: [geos-devel] [GEOS] #932: improve static-library build
In-Reply-To: <048.54c0bea610c1f1ac770541fb23e138e4@osgeo.org>
References: <048.54c0bea610c1f1ac770541fb23e138e4@osgeo.org>
Message-ID: <063.f2a703ba34f24ba14721203767aa53be@osgeo.org>

#932: improve static-library build
------------------------+---------------------------
 Reporter:  basiliscos  |       Owner:  geos-devel@…
     Type:  patch       |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by basiliscos):

 * Attachment "CMakeLists.txt.patch" added.

 CMakeLists patch to optionally build C API

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/932>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct  5 06:44:31 2018
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 05 Oct 2018 13:44:31 -0000
Subject: [geos-devel] [GEOS] #932: improve static-library build
In-Reply-To: <048.54c0bea610c1f1ac770541fb23e138e4@osgeo.org>
References: <048.54c0bea610c1f1ac770541fb23e138e4@osgeo.org>
Message-ID: <063.fca14473ee696e4ccdedd6e469d44290@osgeo.org>

#932: improve static-library build
------------------------+---------------------------
 Reporter:  basiliscos  |       Owner:  geos-devel@…
     Type:  patch       |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by basiliscos):

 With the patch it is possible to configure CMake as

 {{{
 cmake -DGEOS_BUILD_STATIC=on -DGEOS_BUILD_SHARED=off -DGEOS_BUILD_CAPI=off
 ..
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/932#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From gdt at lexort.com  Sat Oct  6 12:57:43 2018
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 06 Oct 2018 15:57:43 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <001301d45beb$d2e39780$78aac680$@pcorp.us> (Regina Obe's message
 of "Thu, 4 Oct 2018 10:09:10 -0400")
References: <smumurtdena.fsf@linuxpal.mit.edu>
 <001301d45beb$d2e39780$78aac680$@pcorp.us>
Message-ID: <smuftxialvs.fsf@linuxpal.mit.edu>


"Regina Obe" <lr at pcorp.us> writes:

> What error are you getting?  When I try to build using autotools, it also fails too building the tests
>
> https://trac.osgeo.org/geos/ticket/913
>
> I assume your issue is different as on mine looks like it's just
> looking for a non-existent file on my system And also mixing C and C++
> constructions (like namespace)

My error is different.

The problem seems to be that libgeos.la does not specify -lstdc++ as a
dependency_lib, and the capi test is linked with cc, not c++, so that
standard C++ library isn't linked.

Changing to using c++ instead of cc on that test makes it link, but I'm
not clear on what's right.


A basic question is if we expect linking with the geos C library to be
doable in an invocation of the C compiler (as linker) that does not
include -lstdc++.  I would think so, but I need to look further into how
this is supposed to work.


From gdt at lexort.com  Sat Oct  6 16:07:49 2018
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 06 Oct 2018 19:07:49 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <20181004134232.GB24144@liz> (Sandro Santilli's message of "Thu, 
 4 Oct 2018 15:42:32 +0200")
References: <smumurtdena.fsf@linuxpal.mit.edu> <20181004134232.GB24144@liz>
Message-ID: <smuwoqu8yii.fsf@linuxpal.mit.edu>


Sandro Santilli <strk at kbt.io> writes:

> On Thu, Oct 04, 2018 at 09:28:57AM -0400, Greg Troxel wrote:
>> I'm seeing test failures in trunk, built with autotools in an objdir
>> with gcc 4.8 on NetBSD 7 amd64.  They are obviously C++ build issues,
>> but only happen when building tests.  I am not trying to ask others to
>> debug these in this mail.
>> 
>> I looked in README.md to find out what version of C++ is needed, and
>> don't see any --std= flags inserted in the build.  Various compiler
>> versions seem to have varying default standards, and it seems best to
>> declare the version being used so that builds will hard fail obviously
>> if that isn't ok.
>> 
>> In my case, I think gcc 4.8 almost entirely supports C++11, but defaults
>> to C++03 without --std=c++11.
>
> Could it be one of those autoconf-version related issues ?

Perhaps, but I have
  autoconf (GNU Autoconf) 2.69
  automake (GNU automake) 1.15.1
which I expect is pretty up to date.

The first question is what language standard is needed, and to get this
in README.md, which should document prerequisites.   Is it correct that
it's C++11 as the language (on trunk)?

> Supposedly -std=c++11 should be added by the call to
>
>     AX_CXX_COMPILE_STDCXX
>
> which is found in configure.ac and defined in
> macros/ax_cxx_compile_stdcxx.m4

I do not see that in configure.ac on trunk.  But I realize now that's
because I'm still using the svn repo, and despite the trac showing that
under 'browse source', that's no longer what's official.

So I suggest that if the svn isn't up to date, and the code from svn is
really migrated to git, that the svn repo be made no longer accessible.e

From gdt at lexort.com  Sat Oct  6 16:36:59 2018
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 06 Oct 2018 19:36:59 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <20181004134232.GB24144@liz> (Sandro Santilli's message of "Thu, 
 4 Oct 2018 15:42:32 +0200")
References: <smumurtdena.fsf@linuxpal.mit.edu> <20181004134232.GB24144@liz>
Message-ID: <smush1i8x5w.fsf@linuxpal.mit.edu>

Here's a patch to README.md on git master.  It explains the C++11
requirement, gives clearer examples for using obj/build dirs, and limits
the direction to run ldconfig to Linux.



-------------- next part --------------
An embedded and charset-unspecified text was scrubbed...
Name: 0001-README.md-Clarify-installation-instructions.patch
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181006/c3bf07db/attachment.ksh>

From lr at pcorp.us  Sat Oct  6 19:59:51 2018
From: lr at pcorp.us (Regina Obe)
Date: Sat, 6 Oct 2018 22:59:51 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <smuwoqu8yii.fsf@linuxpal.mit.edu>
References: <smumurtdena.fsf@linuxpal.mit.edu> <20181004134232.GB24144@liz>
 <smuwoqu8yii.fsf@linuxpal.mit.edu>
Message-ID: <000101d45de9$d1dafd60$7590f820$@pcorp.us>

> The first question is what language standard is needed, and to get this
> in README.md, which should document prerequisites.   Is it correct that
> it's C++11 as the language (on trunk)?
> 
> > Supposedly -std=c++11 should be added by the call to
> >
> >     AX_CXX_COMPILE_STDCXX
> >
> > which is found in configure.ac and defined in
> > macros/ax_cxx_compile_stdcxx.m4
> 
> I do not see that in configure.ac on trunk.  But I realize now that's because I'm
> still using the svn repo, and despite the trac showing that under 'browse
> source', that's no longer what's official.
> 
[Regina Obe] 
C++11 is required for both master branch and 3.7 branch.
3.7.0 is first release requiring C++11

> So I suggest that if the svn isn't up to date, and the code from svn is really
> migrated to git, that the svn repo be made no longer accessible.e
[Regina Obe] 
Strk can you disable the svn or have it redirect to gitea? Didn't know it was still accessible and I think everything is in git even the old
Ones so no need for svn to be alive.


From geos-trac at osgeo.org  Sat Oct  6 20:01:23 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 03:01:23 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to note
 that C++11 is required
Message-ID: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+--------------------------
 Reporter:  robe        |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.8.0
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Patch from Greg Troxel

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct  6 20:01:37 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 03:01:37 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.214f2bdf000bd112c996a571b722b144@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.8.0
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * Attachment "0001-README.md-Clarify-installation-instructions.patch"
 added.


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct  6 20:03:35 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 03:03:35 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.70f16c7d54912b54cd6c9d42eed93609@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.7.1
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * milestone:  3.8.0 => 3.7.1


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct  6 20:05:40 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 03:05:40 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.4d3e28a190341c37c5b6256a2ab36c7e@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.7.1
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Description changed by robe:

Old description:

> Patch from Greg Troxel

New description:

 Patch from Greg Troxel

 from:
 https://lists.osgeo.org/pipermail/geos-devel/2018-October/008627.html

--

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From lr at pcorp.us  Sat Oct  6 20:06:06 2018
From: lr at pcorp.us (Regina Obe)
Date: Sat, 6 Oct 2018 23:06:06 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <smush1i8x5w.fsf@linuxpal.mit.edu>
References: <smumurtdena.fsf@linuxpal.mit.edu> <20181004134232.GB24144@liz>
 <smush1i8x5w.fsf@linuxpal.mit.edu>
Message-ID: <000201d45dea$b0f8c1d0$12ea4570$@pcorp.us>

> Greg Troxel
> Sent: Saturday, October 06, 2018 7:37 PM
> To: Sandro Santilli <strk at kbt.io>
> Cc: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] C++ version, documentation and --std flags
> 
> Here's a patch to README.md on git master.  It explains the C++11
> requirement, gives clearer examples for using obj/build dirs, and limits the
> direction to run ldconfig to Linux.
> 
> 

Ticketed

https://trac.osgeo.org/geos/ticket/933



From geos-trac at osgeo.org  Sun Oct  7 09:39:55 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 16:39:55 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.e2ca38070a07f46a766bbee8766e7743@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.7.1
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 I've applied the patch to master branch with
 [95d0ec97727dc8fc8defafb8977edcba3e58ce2b/git]
 and tweaked with
 [4ff201dfd885b00dd3e6cdf38d3a918fbde32a7b/git]
 we need to backport this to 3.7 branch

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Oct  7 10:47:00 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 17:47:00 -0000
Subject: [geos-devel] [GEOS] #913: mingw64 gcc 8.1 autotools
In-Reply-To: <042.f93377b20bba7adcd577097bf7a91ca3@osgeo.org>
References: <042.f93377b20bba7adcd577097bf7a91ca3@osgeo.org>
Message-ID: <057.f438a9d13c2cb78e0815ed098e855764@osgeo.org>

#913: mingw64 gcc 8.1 autotools
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.8.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by gdt):

 It looks like a C++ file is being compiled with the C compiler (gcc, not
 g++).

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/913#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Oct  7 11:47:36 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 18:47:36 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.7d6ea56f95fd927536de41f6f0cdbd19@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.7.1
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Regina: I cannot see any 3.7 branch, while master is still at 3.7, does it
 mean there's nothing more to do here ?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Oct  7 16:26:07 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 23:26:07 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.19f058928d6923be83706325bf9ea5ff@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.7.1
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by dbaston):

 The branch is called 3.7 instead of svn-3.7. Master has 3.8.0dev in
 CMakeLists.txt and configure.ac.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Oct  7 16:55:48 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 07 Oct 2018 23:55:48 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.bcdc8216c84bfb98061dad6159c7ff15@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.7.1
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by gdt):

 * Attachment "0001-Clarify-build-instructions.patch" added.

 This patch is basically a squash of cherry-picks of the two patches
 applied to master, and is intended for the 3.7 branch.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Oct  7 17:48:50 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Oct 2018 00:48:50 -0000
Subject: [geos-devel] [GEOS] #933: Update Readme for 3.7 and master to
 note that C++11 is required
In-Reply-To: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
References: <042.16bd9a722d9ffb67dd9b016a6ad05140@osgeo.org>
Message-ID: <057.a3b583a41f75ef323baa8a6a58f8d4e3@osgeo.org>

#933: Update Readme for 3.7 and master to note that C++11 is required
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.7.1
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by Regina Obe <lr@…>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"6ad5952695787f112c4de9728887228f3d312b36/git" 6ad5952/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="6ad5952695787f112c4de9728887228f3d312b36"
 Clarify build instructions. Patch by Greg Troxel. Closes #933
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/933#comment:6>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Oct  7 18:07:48 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Oct 2018 01:07:48 -0000
Subject: [geos-devel] [GEOS] #894: FreeBSD and MacOSX failures on 3.7.0
 - group: geos::geom::CoordinateArraySequenceFactory,
 test: test<1> assertion failed
In-Reply-To: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
References: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
Message-ID: <057.3624c480a625ce9a746b1f139efa4709@osgeo.org>

#894: FreeBSD and MacOSX failures on 3.7.0 - group:
geos::geom::CoordinateArraySequenceFactory, test: test<1> assertion failed
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.7.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by robe):

 I had taken this test out of 3.7 so I could have the bessie bots regress.

 I still have it in master so that's why Bessies are still failing.

 I spoke to Paul Ramsey about this in the code sprint, he said yah he gets
 some error in the tests he just ignores cause it seemed unimportant.  I
 think it was this one. He's on MacOSX (and Greg said it fails for him on
 MacOSX too).

 For reminder this is the test why bessies are screaming red.  I was going
 to switch the bessies to CMAke anyway where this test I don't think exists

 {{{
 geos::triangulate::Delaunay: .........
 geos::triangulate::Voronoi: .........
 geos::triangulate::quadedge::QuadEdge: ...
 geos::triangulate::quadedge::QuadEdgeSubdivision: ...
 geos::triangulate::quadedge::Vertex: .
 geos::util::UniqueCoordinateArrayFilter: .

 ---> group: geos::geom::CoordinateArraySequenceFactory, test: test<1>
      problem: assertion failed

 tests summary: failures:1 ok:1125
 FAIL geos_unit (exit status: 1)
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/894#comment:15>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  8 07:20:29 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Oct 2018 14:20:29 -0000
Subject: [geos-devel] [GEOS] #894: FreeBSD and MacOSX failures on 3.7.0
 - group: geos::geom::CoordinateArraySequenceFactory,
 test: test<1> assertion failed
In-Reply-To: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
References: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
Message-ID: <057.fbd5dbe82724bd022239bfd6b160f475@osgeo.org>

#894: FreeBSD and MacOSX failures on 3.7.0 - group:
geos::geom::CoordinateArraySequenceFactory, test: test<1> assertion failed
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.7.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by gdt):

 Given that autotools is the official build system, and cmake doesn't yet
 replicate the behavior, it seems that the buildbots should stay on
 autotools.

 (I also don't understand why the tests would be different based on build
 system.)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/894#comment:16>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  8 07:25:21 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Oct 2018 14:25:21 -0000
Subject: [geos-devel] [GEOS] #934: disable svn access from the web
Message-ID: <041.3585ac821e784290df2b0699cb2cde04@osgeo.org>

#934: disable svn access from the web
-----------------------+--------------------------
 Reporter:  gdt        |      Owner:  geos-devel@…
     Type:  task       |     Status:  new
 Priority:  minor      |  Milestone:  Management
Component:  Default    |    Version:  master
 Severity:  Annoyance  |   Keywords:
-----------------------+--------------------------
 The subversion repository has been superceded by git, but it is still
 accessible.  So people with existing svn checkouts who didn't notice or
 remember the git transition who do "svn up" and expect to be on master can
 be misled.

 The desired property is that "svn up" (or "svn co") will fail, or perhaps
 will result in a checkout that is obviously not usable.

 It seems useful to have the svn source browser in trac still work, in case
 there are source links in tickets.   But that is not in conflict with svn
 from the internet being denied, perhaps by an acl.

 (leaving on Default because there isn't an appropriate component)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/934>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  8 08:46:43 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Oct 2018 15:46:43 -0000
Subject: [geos-devel] [GEOS] #894: FreeBSD and MacOSX failures on 3.7.0
 - group: geos::geom::CoordinateArraySequenceFactory,
 test: test<1> assertion failed
In-Reply-To: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
References: <042.c1af128b9f7074b044cba24ce328456f@osgeo.org>
Message-ID: <057.758575f2fbf7efd3f1625fa22f045acf@osgeo.org>

#894: FreeBSD and MacOSX failures on 3.7.0 - group:
geos::geom::CoordinateArraySequenceFactory, test: test<1> assertion failed
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.7.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by dbaston):

 My understanding is that they're both "official":
 https://trac.osgeo.org/geos/wiki/BuildingOnUnixWithCMake

 For this reason, the Travis buildbot builds using both build systems:
 https://travis-ci.com/libgeos/geos?branch=master

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/894#comment:17>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  8 15:10:14 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Oct 2018 22:10:14 -0000
Subject: [geos-devel] [GEOS] #934: disable svn access from the web
In-Reply-To: <041.3585ac821e784290df2b0699cb2cde04@osgeo.org>
References: <041.3585ac821e784290df2b0699cb2cde04@osgeo.org>
Message-ID: <056.a3db5569e12bdcbd389855ca3849ca0b@osgeo.org>

#934: disable svn access from the web
-----------------------+---------------------------
 Reporter:  gdt        |       Owner:  geos-devel@…
     Type:  task       |      Status:  closed
 Priority:  minor      |   Milestone:  Management
Component:  Default    |     Version:  master
 Severity:  Annoyance  |  Resolution:  fixed
 Keywords:             |
-----------------------+---------------------------
Changes (by strk):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 SVN was made read-only but still accessible as per #934 on April 5th 2017.
 Now I turned it completely inaccessible (forbidden) with custom error
 response pointing to https://trac.osgeo.org/geos/wiki/CodeRepository
 Unfortunately it doesn't look like {{{ git-svn }}} shows the custom
 response, didn't test direct SVN client

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/934#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct  8 15:59:12 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Oct 2018 22:59:12 -0000
Subject: [geos-devel] [GEOS] #934: disable svn access from the web
In-Reply-To: <041.3585ac821e784290df2b0699cb2cde04@osgeo.org>
References: <041.3585ac821e784290df2b0699cb2cde04@osgeo.org>
Message-ID: <056.6060a43e075668e8883edbdb102873e2@osgeo.org>

#934: disable svn access from the web
-----------------------+---------------------------
 Reporter:  gdt        |       Owner:  geos-devel@…
     Type:  task       |      Status:  closed
 Priority:  minor      |   Milestone:  Management
Component:  Default    |     Version:  master
 Severity:  Annoyance  |  Resolution:  fixed
 Keywords:             |
-----------------------+---------------------------

Comment (by robe):

 Using my svn windows repo browser, I  see a message


 {{{
 Access /geos forbidden
 }}}

 When I do


 {{{

 svn co https://svn.osgeo.org/geos/branches/3.6


 }}}


 I get


 {{{
 svn: E175013: Unable to connect to a repository at URL
 'https://svn.osgeo.org/geos/branches/3.6'
 svn: E175013: Access to '/geos/branches/3.6' forbidden
 }}}

 So I think it's good enough

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/934#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From gdt at lexort.com  Mon Oct  8 16:33:40 2018
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 08 Oct 2018 19:33:40 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <smuftxialvs.fsf@linuxpal.mit.edu> (Greg Troxel's message of
 "Sat, 06 Oct 2018 15:57:43 -0400")
References: <smumurtdena.fsf@linuxpal.mit.edu>
 <001301d45beb$d2e39780$78aac680$@pcorp.us>
 <smuftxialvs.fsf@linuxpal.mit.edu>
Message-ID: <smur2h0ypwr.fsf@linuxpal.mit.edu>



Greg Troxel <gdt at lexort.com> writes:

> The problem seems to be that libgeos.la does not specify -lstdc++ as a
> dependency_lib, and the capi test is linked with cc, not c++, so that
> standard C++ library isn't linked.
>
> Changing to using c++ instead of cc on that test makes it link, but I'm
> not clear on what's right.
>
> A basic question is if we expect linking with the geos C library to be
> doable in an invocation of the C compiler (as linker) that does not
> include -lstdc++.  I would think so, but I need to look further into how
> this is supposed to work.

Investigating further, I now believe that libtool as distributed has
bugs on NetBSD, and that the pkgsrc libtool has among its changes at
least a fix.  Which is perhaps hard to resolve, but not a geos issue.

On the question of how linking with geos_c is supposed to work,things
look good -- the C++ library has a NEEDED elf note for libstdc++, and
the c library calls for the c++ library.  Why geos_c calls for libstdc++
directly I don't understand, but I don't see that it would cause
problems -- the idea that one owuld upgrade libstdc++ and rebuild
libgeos but not libgeos_c does not seem credible.

$ geos-master/obj > objdump -x src/.libs/libgeos.so |egrep NEED
  NEEDED               libstdc++.so.7
  NEEDED               libm.so.0
  NEEDED               libgcc_s.so.1
  NEEDED               libc.so.12

$ objdump -x capi/.libs/libgeos_c.so|egrep NEEDED
  NEEDED               libgeos-3.7.0.so
  NEEDED               libstdc++.so.7
  NEEDED               libm.so.0
  NEEDED               libgcc_s.so.1
  NEEDED               libc.so.12

From gdt at lexort.com  Mon Oct  8 16:42:50 2018
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 08 Oct 2018 19:42:50 -0400
Subject: [geos-devel] C++ version, documentation and --std flags
In-Reply-To: <smur2h0ypwr.fsf@linuxpal.mit.edu> (Greg Troxel's message of
 "Mon, 08 Oct 2018 19:33:40 -0400")
References: <smumurtdena.fsf@linuxpal.mit.edu>
 <001301d45beb$d2e39780$78aac680$@pcorp.us>
 <smuftxialvs.fsf@linuxpal.mit.edu> <smur2h0ypwr.fsf@linuxpal.mit.edu>
Message-ID: <smulg78yphh.fsf@linuxpal.mit.edu>


Greg Troxel <gdt at lexort.com> writes:

> On the question of how linking with geos_c is supposed to work,things
> look good -- the C++ library has a NEEDED elf note for libstdc++, and
> the c library calls for the c++ library.  Why geos_c calls for libstdc++
> directly I don't understand, but I don't see that it would cause
> problems -- the idea that one owuld upgrade libstdc++ and rebuild
> libgeos but not libgeos_c does not seem credible.

I was confused - the geos_c library of course is implemented in C++ and
thus needs libstdc++.  It's only users of geos_c that don't need
libstdc++.

So everything I have looked at in geos seems exactly right.

From gdt at lexort.com  Mon Oct  8 17:06:42 2018
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 08 Oct 2018 20:06:42 -0400
Subject: [geos-devel] test failure on master, libtool artifact
Message-ID: <smuh8hwyodp.fsf@linuxpal.mit.edu>

I have successfully run the tests building from the git 3.7 branch on
NetBSD 7 amd64, with pkgsrc libtool.

On master, I got a segfault in geos_unit.  On investigating, I find that
the test binary is somehow linking in geos-3.7.0.  If I install the
master build (3.8), and run geos_unit manually (without the autotools
wrapper), then it passes.

This could of course be a NetBSD/libtool issue.  But I wonder if anyone
else is seeing issues, specifically on a system with geos release 3.7
installed, when running make check under an autotools build of git
master.

The cmake build does not appear to build geos_unit in the same place,
but I don't understand how 'make check' under cmake is supposed to work.
I do get a failure in that case too (on master; on 3.7 the cmake build
does not complete):

Test project /home/gdt/SOFTWARE/POSTGIS/geos-master/build
Start 1: test_geos_unit
1/8 Test #1: test_geos_unit ...................***Failed    0.62 sec
Start 2: test_xmltester
2/8 Test #2: test_xmltester ...................   Passed   18.28 sec
[rest is ok]

From geos-trac at osgeo.org  Thu Oct 18 19:24:32 2018
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 19 Oct 2018 02:24:32 -0000
Subject: [geos-devel] [GEOS] #935: incorrect cmake instruction
Message-ID: <045.c80df50c09eae9ed152921850af6daf1@osgeo.org>

#935: incorrect cmake instruction
-----------------------------------+--------------------------
 Reporter:  xzcvczx                |      Owner:  geos-devel@…
     Type:  defect                 |     Status:  new
 Priority:  minor                  |  Milestone:
Component:  Build/Install (cmake)  |    Version:  master
 Severity:  Unassigned             |   Keywords:  cmake
-----------------------------------+--------------------------
 in capi/CMakeLists.txt

 if(NOT GEOS_ENABLE_MACOSX_FRAMEWORK AND GEOS_BUILD_SHARED)
   # if building OS X framework or only building static libs, CAPI built
 into C++ library

 the if argument doesn't seem to match the comment below it, should it not
 be

 if(NOT GEOS_ENABLE_MACOSX_FRAMEWORK AND NOT GEOS_BUILD_SHARED)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/935>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Oct 18 22:37:20 2018
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 19 Oct 2018 05:37:20 -0000
Subject: [geos-devel] [GEOS] #936: fail with cmake
	-DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
Message-ID: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>

#936: fail with cmake -DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
------------------------+--------------------------
 Reporter:  xzcvczx     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  minor       |  Milestone:
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 if you run cmake with that option enabled there is the following error


 {{{
 CMake Error at capi/CMakeLists.txt:45 (add_dependencies):
   Cannot add target-level dependencies to non-existent target "geos_c".

   The add_dependencies works for top-level logical targets created by the
   add_executable, add_library, or add_custom_target commands.  If you want
 to
   add file-level dependencies see the DEPENDS option of the
 add_custom_target
   and add_custom_command commands.
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/936>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Fri Oct 19 10:36:13 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 19 Oct 2018 10:36:13 -0700
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <20181004144034.GB15548@liz>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu> <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <20181004141628.GA15548@liz> <20181004144034.GB15548@liz>
Message-ID: <CACowWR1hKbdtU-B9MC1FyyKGTtn7Pkt13vMctZaQ_iRjiVb+ig@mail.gmail.com>

This conversation seems to have veered off.
Dan asked what I think is a reasonable question:

  Is having working 'make dist' and 'make distclean' targets sufficient to
move to a cmake-only build, or will the goalposts just shift again to some
other metric (like build time, referenced above)?

I have a branch that seems to have an OK 'make dist' target that I'll PR
shortly. I'm not sure that 'make distclean' is actually applicable to the
cmake build process, since 'distclean' as a target is something that
autotools needs to deal with the fact that autotools creates so many build
artifacts that aren't wanted in the source bundle. In a cmake build run
from a separate build tree (not run "in tree" like autotools) the 'dist'
target seems sufficient to our purpose (get a deterministic source tarball)
without a 'distclean' but we'll see.

I am among those who would (a) like to have one build system and (b) would
like cmake to be that build system.

P

On Thu, Oct 4, 2018 at 7:41 AM Sandro Santilli <strk at kbt.io> wrote:

> On Thu, Oct 04, 2018 at 04:16:28PM +0200, Sandro Santilli wrote:
>
> > Install/uninstall steps:
> >
> >   build-cmake$ time sudo make install
> >   real    0m1.514s
> >   user    0m0.403s
> >   sys     0m0.232s
> >
> >   build-autotools$ time sudo make install
> >   real    0m10.302s
> >   user    0m9.643s
> >   sys     0m0.737s
> >
> > Note that the extra time on "make install" for autotools
> > is due to some problematic dependency encoded to deal with
> > GEOS revision flag, used to build final library (not sure
> > a ticket exists for that already)
>
> After fixing the bug in tools/repo_revision.sh these are
> the new timings (cmake twice as fast at install):
>
>     build-autotools$ time sudo make install
>     real    0m2.905s
>     user    0m2.379s
>     sys     0m0.595s
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181019/850eeb64/attachment.html>

From pramsey at cleverelephant.ca  Fri Oct 19 10:38:41 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 19 Oct 2018 10:38:41 -0700
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CACowWR1hKbdtU-B9MC1FyyKGTtn7Pkt13vMctZaQ_iRjiVb+ig@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu> <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <20181004141628.GA15548@liz> <20181004144034.GB15548@liz>
 <CACowWR1hKbdtU-B9MC1FyyKGTtn7Pkt13vMctZaQ_iRjiVb+ig@mail.gmail.com>
Message-ID: <CACowWR01=p_qnBgDY97u9zSZjkbXELpyAVnQfECz0NBVLd8Djg@mail.gmail.com>

Or maybe I should attempt to summarize what I recall from the thread that
seem to me to be reasonable functional requests before going cmake-only:

- make dist generates a distributable tarball
- make check
  - make check runs all tests
  - make check builds test binaries that can be debugged w/o an install

More?

P


On Fri, Oct 19, 2018 at 10:36 AM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> This conversation seems to have veered off.
> Dan asked what I think is a reasonable question:
>
>   Is having working 'make dist' and 'make distclean' targets sufficient to
> move to a cmake-only build, or will the goalposts just shift again to some
> other metric (like build time, referenced above)?
>
> I have a branch that seems to have an OK 'make dist' target that I'll PR
> shortly. I'm not sure that 'make distclean' is actually applicable to the
> cmake build process, since 'distclean' as a target is something that
> autotools needs to deal with the fact that autotools creates so many build
> artifacts that aren't wanted in the source bundle. In a cmake build run
> from a separate build tree (not run "in tree" like autotools) the 'dist'
> target seems sufficient to our purpose (get a deterministic source tarball)
> without a 'distclean' but we'll see.
>
> I am among those who would (a) like to have one build system and (b) would
> like cmake to be that build system.
>
> P
>
> On Thu, Oct 4, 2018 at 7:41 AM Sandro Santilli <strk at kbt.io> wrote:
>
>> On Thu, Oct 04, 2018 at 04:16:28PM +0200, Sandro Santilli wrote:
>>
>> > Install/uninstall steps:
>> >
>> >   build-cmake$ time sudo make install
>> >   real    0m1.514s
>> >   user    0m0.403s
>> >   sys     0m0.232s
>> >
>> >   build-autotools$ time sudo make install
>> >   real    0m10.302s
>> >   user    0m9.643s
>> >   sys     0m0.737s
>> >
>> > Note that the extra time on "make install" for autotools
>> > is due to some problematic dependency encoded to deal with
>> > GEOS revision flag, used to build final library (not sure
>> > a ticket exists for that already)
>>
>> After fixing the bug in tools/repo_revision.sh these are
>> the new timings (cmake twice as fast at install):
>>
>>     build-autotools$ time sudo make install
>>     real    0m2.905s
>>     user    0m2.379s
>>     sys     0m0.595s
>>
>> --strk;
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181019/2530c7b2/attachment.html>

From lr at pcorp.us  Fri Oct 19 13:28:11 2018
From: lr at pcorp.us (Regina Obe)
Date: Fri, 19 Oct 2018 16:28:11 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CACowWR01=p_qnBgDY97u9zSZjkbXELpyAVnQfECz0NBVLd8Djg@mail.gmail.com>
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz> <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu> <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <20181004141628.GA15548@liz> <20181004144034.GB15548@liz>
 <CACowWR1hKbdtU-B9MC1FyyKGTtn7Pkt13vMctZaQ_iRjiVb+ig@mail.gmail.com>
 <CACowWR01=p_qnBgDY97u9zSZjkbXELpyAVnQfECz0NBVLd8Djg@mail.gmail.com>
Message-ID: <004501d467ea$41d23390$c5769ab0$@pcorp.us>

I think there is also the doxygen builds?  Which I recall are only in autotools, but I could be mistaken.

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Paul Ramsey
Sent: Friday, October 19, 2018 1:39 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: Re: [geos-devel] RFC7 - Use CMake as build system for GEOS

 

Or maybe I should attempt to summarize what I recall from the thread that seem to me to be reasonable functional requests before going cmake-only:

 

- make dist generates a distributable tarball

- make check

  - make check runs all tests

  - make check builds test binaries that can be debugged w/o an install

 

More?

 

P

 

 

On Fri, Oct 19, 2018 at 10:36 AM Paul Ramsey <pramsey at cleverelephant.ca <mailto:pramsey at cleverelephant.ca> > wrote:

This conversation seems to have veered off.

Dan asked what I think is a reasonable question:

 

  Is having working 'make dist' and 'make distclean' targets sufficient to move to a cmake-only build, or will the goalposts just shift again to some other metric (like build time, referenced above)? 

 

I have a branch that seems to have an OK 'make dist' target that I'll PR shortly. I'm not sure that 'make distclean' is actually applicable to the cmake build process, since 'distclean' as a target is something that autotools needs to deal with the fact that autotools creates so many build artifacts that aren't wanted in the source bundle. In a cmake build run from a separate build tree (not run "in tree" like autotools) the 'dist' target seems sufficient to our purpose (get a deterministic source tarball) without a 'distclean' but we'll see.

 

I am among those who would (a) like to have one build system and (b) would like cmake to be that build system. 

 

P

 

On Thu, Oct 4, 2018 at 7:41 AM Sandro Santilli <strk at kbt.io <mailto:strk at kbt.io> > wrote:

On Thu, Oct 04, 2018 at 04:16:28PM +0200, Sandro Santilli wrote:

> Install/uninstall steps:
> 
>   build-cmake$ time sudo make install
>   real    0m1.514s
>   user    0m0.403s
>   sys     0m0.232s
> 
>   build-autotools$ time sudo make install
>   real    0m10.302s
>   user    0m9.643s
>   sys     0m0.737s
> 
> Note that the extra time on "make install" for autotools
> is due to some problematic dependency encoded to deal with
> GEOS revision flag, used to build final library (not sure
> a ticket exists for that already)

After fixing the bug in tools/repo_revision.sh these are
the new timings (cmake twice as fast at install):

    build-autotools$ time sudo make install
    real    0m2.905s
    user    0m2.379s
    sys     0m0.595s

--strk;
_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org <mailto:geos-devel at lists.osgeo.org> 
https://lists.osgeo.org/mailman/listinfo/geos-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181019/fd732c17/attachment.html>

From pramsey at cleverelephant.ca  Fri Oct 19 14:02:25 2018
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 19 Oct 2018 14:02:25 -0700
Subject: [geos-devel] CMake Modernization
Message-ID: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>

Since we are going to work on making cmake build a superset of the
autotools build (all the 'convenience' of autotools plus windows and other
support) I'd like to propose we bring in the large update of cmake Mateusz
provided recently:

https://github.com/mloskot/geos/tree/ml/modern-cmake

>From there we can add the features we want in autotools on a less scrufty
baseline. Since we've recently released 3.7 this seems like a good time for
a larger change.

Any concerns w/ that?

P
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181019/0168add8/attachment.html>

From lr at pcorp.us  Fri Oct 19 14:44:51 2018
From: lr at pcorp.us (Regina Obe)
Date: Fri, 19 Oct 2018 17:44:51 -0400
Subject: [geos-devel] CMake Modernization
In-Reply-To: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>
References: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>
Message-ID: <000201d467f4$f7cdfc60$e769f520$@pcorp.us>

+1

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Paul Ramsey
Sent: Friday, October 19, 2018 5:02 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: [geos-devel] CMake Modernization

 

Since we are going to work on making cmake build a superset of the autotools build (all the 'convenience' of autotools plus windows and other support) I'd like to propose we bring in the large update of cmake Mateusz provided recently:

 

https://github.com/mloskot/geos/tree/ml/modern-cmake

 

>From there we can add the features we want in autotools on a less scrufty baseline. Since we've recently released 3.7 this seems like a good time for a larger change.

 

Any concerns w/ that?


P

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181019/51cc9f73/attachment.html>

From gdt at lexort.com  Fri Oct 19 18:51:19 2018
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 19 Oct 2018 21:51:19 -0400
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CACowWR01=p_qnBgDY97u9zSZjkbXELpyAVnQfECz0NBVLd8Djg@mail.gmail.com>
 (Paul Ramsey's message of "Fri, 19 Oct 2018 10:38:41 -0700")
References: <CA+K_q_r8ppdiw69SrJ_J6gXu-rMidFcDLrupUF-M24rYZe3pVQ@mail.gmail.com>
 <20181003162737.GI24144@liz> <smu8t3ehp87.fsf@linuxpal.mit.edu>
 <20181003192009.GJ24144@liz>
 <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu>
 <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <20181004141628.GA15548@liz> <20181004144034.GB15548@liz>
 <CACowWR1hKbdtU-B9MC1FyyKGTtn7Pkt13vMctZaQ_iRjiVb+ig@mail.gmail.com>
 <CACowWR01=p_qnBgDY97u9zSZjkbXELpyAVnQfECz0NBVLd8Djg@mail.gmail.com>
Message-ID: <smumur9xu5k.fsf@linuxpal.mit.edu>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> Or maybe I should attempt to summarize what I recall from the thread that
> seem to me to be reasonable functional requests before going cmake-only:
>
> - make dist generates a distributable tarball
> - make check
>   - make check runs all tests
>   - make check builds test binaries that can be debugged w/o an install
>
> More?

I think there are three more things that autotools does right that need
to be replicated before it's ok to drop autotools.

1) "make distcheck", which
  does make dist
  unpacks the distfile
  does an objdir build from the unpacked distfile
  runs make check (which uses the just-built libs)

which shoud be easy if make disk and make check work ok.


2) cross building, where you can specify a cross toolchain and a path to
where the cross includes are.  This is something that has worked with
very little effort with autotools.  I don't know if it works with geos
this minute, but I know in general it works if there aren't any
cross-breaking bugs (like AC_TRY_RUN, or random code with issues in
makefiles).

3) ensuring that the cmakefiles have almost no "if on this OS, do this"
logic.  autoconf introduced the idea of feature tests which has been
greate for portability and I have in general seen things within cmake
that are a step backwards.  I don't know where the geos cmake build is
(it fails on NetBSD, not sure why), so this may be a non-issue.  But
culturally this sort of ifdef SO seems acceptable in cmake where it
isn't in autoconf, and I don't know why.

From geos-trac at osgeo.org  Sat Oct 20 04:18:48 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 11:18:48 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in framework
	Headers
Message-ID: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+--------------------------
 Reporter:  xzcvczx                |      Owner:  geos-devel@…
     Type:  defect                 |     Status:  new
 Priority:  minor                  |  Milestone:
Component:  Build/Install (cmake)  |    Version:  3.6.2
 Severity:  Unassigned             |   Keywords:
-----------------------------------+--------------------------
 If you build geos as a framework then and -Ipath/to/GEOS.framework/Headers
 you can't use <geos/export.h> for example as there is no geos folder in
 headers.

 as all the files are in the root of headers this can easily be worked
 around by creating a symlink named geos to the Headers directory,

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 04:22:14 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 11:22:14 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.fa7a108e51c88172495166a54ea4155b@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by xzcvczx):

 PR #58

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 04:30:36 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 11:30:36 -0000
Subject: [geos-devel] [GEOS] #936: fail with cmake
	-DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
In-Reply-To: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
References: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
Message-ID: <060.7ba122affccd5ae25495922715b88f85@osgeo.org>

#936: fail with cmake -DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by xzcvczx):

 * component:  Default => Build/Install (cmake)


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/936#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 07:31:45 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 14:31:45 -0000
Subject: [geos-devel] [GEOS] #936: fail with cmake
	-DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
In-Reply-To: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
References: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
Message-ID: <060.78848d6f885c1b823bb72f0ac3a0588b@osgeo.org>

#936: fail with cmake -DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:  3.7.1
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by robe):

 * milestone:   => 3.7.1


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/936#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 07:34:15 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 14:34:15 -0000
Subject: [geos-devel] [GEOS] #936: fail with cmake
	-DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
In-Reply-To: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
References: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
Message-ID: <060.b6cddc03339728b95758244c5d1b4950@osgeo.org>

#936: fail with cmake -DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:  3.7.1
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by robe):

 Related pull request - https://git.osgeo.org/gitea/geos/geos/pulls/57

 Will close once we backport to 3.7.1.  Already committed to 3.8.0 (master)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/936#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 08:02:21 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 15:02:21 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.60e2e182b51b77c6de89567370a81365@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by kyngchaos):

 * status:  new => closed
 * resolution:   => invalid


Comment:

 Actually, the way framework headers work, including <geos/whatever.h>
 works without using any -I flags.  The build system tries frameworks that
 match the first part of the path in the <>.  So, it knows that
 <geos/whatever.h> is the GEOS framework (names are not case sensitive) and
 look for the "whatever.h" file in the framework's Headers folder.  Using a
 -I flag should not interfere with this.

 And, there already is a symlink if really needed for some reason.  It's in
 the "unix" folder, along with other standard unix-style folders, bin,
 include and lib.  This simulates a unix style build, with the geos-config
 bin, and c and c++ library names.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 08:12:25 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 15:12:25 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.c53ad17b718475251075dabcfbfd242f@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by kyngchaos):

 Can you please revert that change.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 08:20:25 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 15:20:25 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.997dbb6ec71ce95ca1b31a0ae68a0f6f@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by robe):

 I'm all confused are we talking about

 https://git.osgeo.org/gitea/geos/geos/pulls/58

 Which hasn't been committed yet?  or
 https://git.osgeo.org/gitea/geos/geos/pulls/57 which has been committed.
 If it's 58, I can just close that pull request unmerged

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 08:24:04 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 15:24:04 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.73ce80572ce9c49218c92f050099d978@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by kyngchaos):

 Yes, 58.  Huh, when I browsed the source, I saw it applied.

 https://trac.osgeo.org/geos/browser/git/src/CMakeLists.txt

 Change:

 https://trac.osgeo.org/geos/changeset/f0b08d802543cbde75a09ccb0b4e94ec40da0707/git

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 08:31:47 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 15:31:47 -0000
Subject: [geos-devel] [GEOS] #936: fail with cmake
	-DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
In-Reply-To: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
References: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
Message-ID: <060.d6fb37125a1c01f63d355280b3be9a4f@osgeo.org>

#936: fail with cmake -DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:  3.7.1
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by kyngchaos):

 Just to clarify, this is for 3.7.0, not 3.6.x.  It works for me in 3.6.3,
 but I get the error in 3.7.0.  Ticket system does not have 3.7.0 yet.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/936#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 08:36:24 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 15:36:24 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.b5228e787b7e79f43b69db14b7cecc5f@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by robe):

 Hmm I wonder if it's some configuration in trac that it's showing the
 latest fork/branch commit and not what is in the master branch

 Line 56 from master repo reads this:

 https://git.osgeo.org/gitea/geos/geos/src/branch/master/src/CMakeLists.txt#L56


 {{{
   install(CODE "execute_process(COMMAND ln -sfh ../../Headers
 \"${GEOS_FWDIR_VER}/unix/include/geos\")")
 }}}


 and not what is in pull request and
 https://trac.osgeo.org/geos/browser/git/src/CMakeLists.txt

 {{{
   install(CODE "execute_process(COMMAND ln -sf .
 \"${GEOS_FWDIR_VER}/Headers/geos\")")
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:6>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 08:43:24 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 15:43:24 -0000
Subject: [geos-devel] [GEOS] #936: fail with cmake
	-DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
In-Reply-To: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
References: <045.4adfa8bb2d06f6d488e198c65ca0f833@osgeo.org>
Message-ID: <060.5e440da3c7e3e14e2d3d037e4360efd9@osgeo.org>

#936: fail with cmake -DGEOS_ENABLE_MACOSX_FRAMEWORK=ON
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  new
 Priority:  minor                  |   Milestone:  3.7.1
Component:  Build/Install (cmake)  |     Version:  3.7.0
 Severity:  Unassigned             |  Resolution:
 Keywords:                         |
-----------------------------------+---------------------------
Changes (by robe):

 * version:  3.6.2 => 3.7.0


Comment:

 oh good grief, what annoying redundancy we have here -  a lookup for
 Milestones and one for Versions. It should be just pulling the closed
 milestones for Versions.

 Anyway I've added 3.7.0 to version list until I sort this mess out.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/936#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 09:07:59 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 16:07:59 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.d000d83a1d867dda796d41424a0c54cc@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by kyngchaos):

 One more note: the "unix" folder is created when the
 GEOS_ENABLE_MACOSX_FRAMEWORK_UNIXCOMPAT option is used.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:7>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 09:10:34 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 16:10:34 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.f33126fd2943ed8fe4a8135e66e61be6@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by xzcvczx):

 i will claim to blame proj here, as it seems that iframework needs the
 <framework/.h> otherwise it doesn't descend into the Framework and headers
 as far as i can tell, if you know something which will make it work
 without explicit -I/-isystem into Headers or unix feel free to correct me

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:8>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 10:30:56 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 20 Oct 2018 17:30:56 -0000
Subject: [geos-devel] [GEOS] #937: geos/.h files not available in
	framework Headers
In-Reply-To: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
References: <045.3457d2a8a618620cde2f5dfa0eb994b6@osgeo.org>
Message-ID: <060.77dcdd42257c342ffa9b8471904afa8b@osgeo.org>

#937: geos/.h files not available in framework Headers
-----------------------------------+---------------------------
 Reporter:  xzcvczx                |       Owner:  geos-devel@…
     Type:  defect                 |      Status:  closed
 Priority:  minor                  |   Milestone:
Component:  Build/Install (cmake)  |     Version:  3.6.2
 Severity:  Unassigned             |  Resolution:  invalid
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by kyngchaos):

 different frameworks in the GDAL stack have different behaviors for how
 headers are expected to be included.  Some have a subfolder, so they work
 as framework includes, like GEOS.  Some do not have a subfolder, so they
 need a -I flag, like PROJ.

 It's OK to always use -I on the Headers folder, it doesn't interfere with
 framework includes.  This is more portable to other systems.  And even if
 you are writing Mac-only software, it's safer because you may have
 external sources that expect unix-style includes.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/937#comment:9>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From vicky at georepublic.de  Sat Oct 20 17:25:09 2018
From: vicky at georepublic.de (Vicky Vergara)
Date: Sat, 20 Oct 2018 19:25:09 -0500
Subject: [geos-devel] CMake Modernization
In-Reply-To: <000201d467f4$f7cdfc60$e769f520$@pcorp.us>
References: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>
 <000201d467f4$f7cdfc60$e769f520$@pcorp.us>
Message-ID: <CAK_FzuVdSeZLt7LZpKZA68ZL4-=gxyi+n1dVJ6xieGjCwGKX3A@mail.gmail.com>

+1


On Fri, Oct 19, 2018 at 4:44 PM Regina Obe <lr at pcorp.us> wrote:

> +1
>
>
>
> *From:* geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] *On Behalf
> Of *Paul Ramsey
> *Sent:* Friday, October 19, 2018 5:02 PM
> *To:* GEOS Development List <geos-devel at lists.osgeo.org>
> *Subject:* [geos-devel] CMake Modernization
>
>
>
> Since we are going to work on making cmake build a superset of the
> autotools build (all the 'convenience' of autotools plus windows and other
> support) I'd like to propose we bring in the large update of cmake Mateusz
> provided recently:
>
>
>
> https://github.com/mloskot/geos/tree/ml/modern-cmake
>
>
>
> From there we can add the features we want in autotools on a less scrufty
> baseline. Since we've recently released 3.7 this seems like a good time for
> a larger change.
>
>
>
> Any concerns w/ that?
>
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel



-- 

Georepublic UG (haftungsbeschränkt)
Salzmannstraße 44,
81739 München, Germany

Vicky Vergara
Operations Research

eMail: vicky at georepublic.de
Web: https://georepublic.info

Tel: +49 (089) 4161 7698-1
Fax: +49 (089) 4161 7698-9

Commercial register: Amtsgericht München, HRB 181428
CEO: Daniel Kastl
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20181020/79e25fde/attachment.html>

From geos-trac at osgeo.org  Sat Oct 20 20:16:10 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 21 Oct 2018 03:16:10 -0000
Subject: [geos-devel] [GEOS] #938: CMake builds on winnie failing
Message-ID: <042.61cf9d98c45450f8776f97f27e4f91c6@osgeo.org>

#938: CMake builds on winnie failing
------------------------+--------------------------
 Reporter:  robe        |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  blocker     |  Milestone:  3.8.0
Component:  Default     |    Version:  master
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Builds of master seem to be failing as of Oct 19th.

 Latest getting this error:


 {{{
 Assembler messages:
 Fatal error: can't create CMakeFiles/geos-
 static.dir/operation/overlay/PolygonBuilder.cpp.obj: No such file or
 directory
 src/CMakeFiles/geos-static.dir/build.make:5438: recipe for target
 'src/CMakeFiles/geos-static.dir/operation/overlay/PolygonBuilder.cpp.obj'
 failed
 make[2]: *** [src/CMakeFiles/geos-
 static.dir/operation/overlay/PolygonBuilder.cpp.obj] Error 1
 CMakeFiles/Makefile2:238: recipe for target 'src/CMakeFiles/geos-
 static.dir/all' failed
 make[1]: *** [src/CMakeFiles/geos-static.dir/all] Error 2
 Makefile:138: recipe for target 'all' failed
 make: *** [all] Error 2
 make: *** No rule to make target 'check'.  Stop.
 make: *** No targets specified and no makefile found.  Stop.
 make: *** No rule to make target 'check'.  Stop.

 }}}

 Last successful was: Commit e2b85688c9e043a096a0161f59cb6fa9c142f868
 (John.Harvey)


 {{{
     'make check' passes with autoconf 2.63. (details)
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/938>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 20 20:22:30 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 21 Oct 2018 03:22:30 -0000
Subject: [geos-devel] [GEOS] #938: CMake builds on winnie failing
In-Reply-To: <042.61cf9d98c45450f8776f97f27e4f91c6@osgeo.org>
References: <042.61cf9d98c45450f8776f97f27e4f91c6@osgeo.org>
Message-ID: <057.73ca0c1d8e1c8fe94d6cce0fce820c2c@osgeo.org>

#938: CMake builds on winnie failing
------------------------+---------------------
 Reporter:  robe        |       Owner:  robe
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.8.0
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------
Changes (by robe):

 * owner:  geos-devel@… => robe


Comment:

 This might be a fluke as changes that came after look like harmless doco
 stuff.

 Retesting now.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/938#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sun Oct 21 00:34:36 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sun, 21 Oct 2018 07:34:36 -0000
Subject: [geos-devel] [GEOS] #934: disable svn access from the web
In-Reply-To: <041.3585ac821e784290df2b0699cb2cde04@osgeo.org>
References: <041.3585ac821e784290df2b0699cb2cde04@osgeo.org>
Message-ID: <056.fb22354a8208fda3f1533b9c3190077c@osgeo.org>

#934: disable svn access from the web
-----------------------+---------------------------
 Reporter:  gdt        |       Owner:  geos-devel@…
     Type:  task       |      Status:  closed
 Priority:  minor      |   Milestone:  Management
Component:  Default    |     Version:  master
 Severity:  Annoyance  |  Resolution:  fixed
 Keywords:             |
-----------------------+---------------------------

Comment (by strk):

 FYI: I've now also made the SVN repository "hidden" from the Trac browser
 menu (references to revisions from tickets still work)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/934#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Sun Oct 21 02:43:39 2018
From: strk at kbt.io (Sandro Santilli)
Date: Sun, 21 Oct 2018 11:43:39 +0200
Subject: [geos-devel] RFC7 - Use CMake as build system for GEOS
In-Reply-To: <CACowWR01=p_qnBgDY97u9zSZjkbXELpyAVnQfECz0NBVLd8Djg@mail.gmail.com>
References: <smu8t3ehp87.fsf@linuxpal.mit.edu> <20181003192009.GJ24144@liz>
 <002401d45b51$84524610$8cf6d230$@pcorp.us>
 <CAK_FzuXbjPjHQP=9tqZefgc6bF1_1VfB9jSAY_fUxVQm+WBiCw@mail.gmail.com>
 <smumuruedp4.fsf@linuxpal.mit.edu>
 <001301d45b8b$7d77c510$78674f30$@pcorp.us>
 <20181004141628.GA15548@liz> <20181004144034.GB15548@liz>
 <CACowWR1hKbdtU-B9MC1FyyKGTtn7Pkt13vMctZaQ_iRjiVb+ig@mail.gmail.com>
 <CACowWR01=p_qnBgDY97u9zSZjkbXELpyAVnQfECz0NBVLd8Djg@mail.gmail.com>
Message-ID: <20181021094339.GA13386@liz>

On Fri, Oct 19, 2018 at 10:38:41AM -0700, Paul Ramsey wrote:
> Or maybe I should attempt to summarize what I recall from the thread that
> seem to me to be reasonable functional requests before going cmake-only:
> 
> - make dist generates a distributable tarball
> - make check
>   - make check runs all tests
>   - make check builds test binaries that can be debugged w/o an install

The "distclean" rule you were asking about is for in-source builds.
Both automake _and_ cmake support both in-source and off-source builds.

In addition to the above autotools also has a "distcheck" rule, which
runs "make dist" and then:

  (1) unpacks the resulting tarball in a new sourcedir
  (2) makes the new sourcedir read-only
  (3) configures and builds in a new build dir
  (4) runs "make check"
  (5) installs in a new empty directory, uninstalls
      and checks that the install dir is again empty

So basically "distcheck" ensures that the distributed tarball works.

--strk;

From strk at kbt.io  Sun Oct 21 02:47:27 2018
From: strk at kbt.io (Sandro Santilli)
Date: Sun, 21 Oct 2018 11:47:27 +0200
Subject: [geos-devel] CMake Modernization
In-Reply-To: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>
References: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>
Message-ID: <20181021094727.GB13386@liz>

On Fri, Oct 19, 2018 at 02:02:25PM -0700, Paul Ramsey wrote:
> Since we are going to work on making cmake build a superset of the
> autotools build (all the 'convenience' of autotools plus windows and other
> support) I'd like to propose we bring in the large update of cmake Mateusz
> provided recently:
> 
> https://github.com/mloskot/geos/tree/ml/modern-cmake
> 
> From there we can add the features we want in autotools on a less scrufty
> baseline. Since we've recently released 3.7 this seems like a good time for
> a larger change.
> 
> Any concerns w/ that?

No concerns with me.

--strk;

From jmckenna at gatewaygeomatics.com  Mon Oct 22 06:52:35 2018
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Mon, 22 Oct 2018 10:52:35 -0300
Subject: [geos-devel] CMake Modernization
In-Reply-To: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>
References: <CACowWR2WpTJkJYFct11t+dNDh1ymZwo3s+v=nqPKnEvmx_FqqA@mail.gmail.com>
Message-ID: <9b306d2b-1b29-6614-7577-70cded522ed7@gatewaygeomatics.com>

+1

-jeff



On 2018-10-19 6:02 PM, Paul Ramsey wrote:
> Since we are going to work on making cmake build a superset of the 
> autotools build (all the 'convenience' of autotools plus windows and 
> other support) I'd like to propose we bring in the large update of cmake 
> Mateusz provided recently:
> 
> https://github.com/mloskot/geos/tree/ml/modern-cmake
> 
>  From there we can add the features we want in autotools on a less 
> scrufty baseline. Since we've recently released 3.7 this seems like a 
> good time for a larger change.
> 
> Any concerns w/ that?
> 
> P
> 

From geos-trac at osgeo.org  Wed Oct 24 08:56:15 2018
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 24 Oct 2018 15:56:15 -0000
Subject: [geos-devel] [GEOS] #940: xmltester checks fails on Solaris 11.4
	x86_64
Message-ID: <046.6b7d6ea65bc2f4684c8b3a51694ec2d4@osgeo.org>

#940: xmltester checks fails on Solaris 11.4 x86_64
------------------------+--------------------------
 Reporter:  edechaux    |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Hello,

 geos 3.7.0 and 3.6.3 checks fails on Solaris 11.4 x86_64 with GCC 7.3.0 on
 processors with FMA extension available if ffp-contract optimisation
 option is set to fast. If ffp-contract is set to off or the processor does
 not have FMA instructions the checks are successfull.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/940>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct 24 08:59:48 2018
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 24 Oct 2018 15:59:48 -0000
Subject: [geos-devel] [GEOS] #940: xmltester checks fails on Solaris
	11.4 x86_64
In-Reply-To: <046.6b7d6ea65bc2f4684c8b3a51694ec2d4@osgeo.org>
References: <046.6b7d6ea65bc2f4684c8b3a51694ec2d4@osgeo.org>
Message-ID: <061.88598f10af499161dd94cb098d88bcb2@osgeo.org>

#940: xmltester checks fails on Solaris 11.4 x86_64
------------------------+---------------------------
 Reporter:  edechaux    |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by edechaux):

 * Attachment "testrunner.log" added.


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/940>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct 24 09:00:52 2018
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 24 Oct 2018 16:00:52 -0000
Subject: [geos-devel] [GEOS] #940: xmltester checks fails on Solaris
	11.4 x86_64
In-Reply-To: <046.6b7d6ea65bc2f4684c8b3a51694ec2d4@osgeo.org>
References: <046.6b7d6ea65bc2f4684c8b3a51694ec2d4@osgeo.org>
Message-ID: <061.e6d13b3cba1f6344a058cb406673bf77@osgeo.org>

#940: xmltester checks fails on Solaris 11.4 x86_64
------------------------+--------------------
 Reporter:  edechaux    |       Owner:  strk
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  XML Tests   |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+--------------------
Changes (by edechaux):

 * owner:  geos-devel@… => strk
 * component:  Default => XML Tests


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/940#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 27 12:23:58 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 27 Oct 2018 19:23:58 -0000
Subject: [geos-devel] [GEOS] #941: Incorrect values returned on error in CAPI
Message-ID: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>

#941: Incorrect values returned on error in CAPI
------------------------+--------------------------
 Reporter:  dbaston     |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 In some cases, the CAPI function `GEOSLength_r` returns `2` on error, when
 it is documented to return `0`. The `2` is likely to be interpreted as
 "success" by a caller.

 In some cases, the CAPI function `GEOSIsValidDetail_r` returns `0` on
 error, when it is documented to return `2`. The `0` would be falsely
 interpreted as "geometry invalid."

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/941>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 27 12:24:53 2018
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 27 Oct 2018 19:24:53 -0000
Subject: [geos-devel] [GEOS] #941: Incorrect values returned on error in
	CAPI
In-Reply-To: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
References: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
Message-ID: <060.6fbfdec44eacfabefc6fad183a2ee079@osgeo.org>

#941: Incorrect values returned on error in CAPI
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by dbaston):

 PR at https://github.com/libgeos/geos/pull/131

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/941#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct 29 07:12:58 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 29 Oct 2018 14:12:58 -0000
Subject: [geos-devel] [GEOS] #941: Incorrect values returned on error in
	CAPI
In-Reply-To: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
References: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
Message-ID: <060.d72ac3a184b386c1c3d5f6fced4532ab@osgeo.org>

#941: Incorrect values returned on error in CAPI
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by Daniel Baston <dbaston@…>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"bfe6b8bb635163a96bfba7a17383eb386486ec60/git" bfe6b8b/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="bfe6b8bb635163a96bfba7a17383eb386486ec60"
 Fix incorrect error return values in CAPI

 Fixes #941
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/941#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct 29 07:15:39 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 29 Oct 2018 14:15:39 -0000
Subject: [geos-devel] [GEOS] #941: Incorrect values returned on error in
	CAPI
In-Reply-To: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
References: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
Message-ID: <060.813bd5d08142e1ee7e222c4375817106@osgeo.org>

#941: Incorrect values returned on error in CAPI
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by Daniel Baston <dbaston@…>):

 In [changeset:"038813ea1d28a57eae4c2f9adb03db2c24e000d0/git"
 038813ea/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="038813ea1d28a57eae4c2f9adb03db2c24e000d0"
 Fix incorrect error return values in CAPI

 Fixes #941
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/941#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Oct 29 07:17:00 2018
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 29 Oct 2018 14:17:00 -0000
Subject: [geos-devel] [GEOS] #941: Incorrect values returned on error in
	CAPI
In-Reply-To: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
References: <045.05c4586fb9b892813ddfec19c6264454@osgeo.org>
Message-ID: <060.0b740756f3bec0fd6465231fd3eb02cd@osgeo.org>

#941: Incorrect values returned on error in CAPI
------------------------+---------------------------
 Reporter:  dbaston     |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by Daniel Baston <dbaston@…>):

 In [changeset:"d1a649fcbeeffa3a21e7d2bf66e7f545a73a2388/git" d1a649f/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="d1a649fcbeeffa3a21e7d2bf66e7f545a73a2388"
 Fix incorrect error return values in CAPI

 Fixes #941
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/941#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

