From ybychkov at direct.ca  Mon Aug  5 15:00:59 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:03 2007
Subject: [geos-devel] Report (August 2, 2002)
References: <002f01c23695$ff698e50$de354d18@yury>
Message-ID: <002201c23cb2$71aec6c0$de354d18@yury>

Hi Everyone.

From pramsey at refractions.net  Mon Aug 12 19:42:29 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:03 2007
Subject: [geos-devel] CVS Commits
Message-ID: <3D5847E5.62EB82B5@refractions.net>

Yury,
Could you commit your changes to CVS, the archive is severely out of
date...
Thanks,
Paul

-- 
      __
     /
     | Paul Ramsey
     | Refractions Research
     | Email: pramsey@refractions.net
     | Phone: (250) 885-0632
     \_


From ybychkov at direct.ca  Wed Aug 14 03:03:58 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:03 2007
Subject: [geos-devel] CVS Commits
References: <3D5847E5.62EB82B5@refractions.net>
Message-ID: <008e01c24360$c41ea7e0$de354d18@yury>

Hi Everyone,

Sorry, I completely forgot about the CVS. Last two weeks were hectic. I was very
busy and rather ill (which is not a good combination ;-(
I've updated the CVS with latest sources.

Yury

----- Original Message -----
From: "Paul Ramsey" <pramsey@refractions.net>
To: <geos-devel@geos.refractions.net>
Sent: Monday, August 12, 2002 4:42 PM
Subject: [geos-devel] CVS Commits


> Yury,
> Could you commit your changes to CVS, the archive is severely out of
> date...
> Thanks,
> Paul
>
> --
>       __
>      /
>      | Paul Ramsey
>      | Refractions Research
>      | Email: pramsey@refractions.net
>      | Phone: (250) 885-0632
>      \_
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>




From ybychkov at direct.ca  Sat Aug 24 05:12:31 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:03 2007
Subject: [geos-devel] Report (August 23, 2002)
Message-ID: <004101c24b4e$62569950$de354d18@yury>

Hi Everyone.

From pramsey at refractions.net  Thu Aug 29 12:22:33 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:03 2007
Subject: [geos-devel] GNU Autoconf / Automake Expert Needed
Message-ID: <3D6E4A49.8070102@refractions.net>

PostGIS'ers,
  The porting project to bring JTS topological functionality into the 
C++ world has been ongoing for the last few months. Yury Bychkov of the 
University of Victoria is the lead developer and is being assisted by 
Martin Davis, the developer of JTS. The project site is at 
geos.refractions.net. The project is jointly funded by Refractions 
Research, Vivid Solutions, and the British Columbia Advanced Systems 
Institute.
  Yury has been doing the development in VC++, being careful to try and 
keep things portable. One of the things VC++ does is manage the build 
process. So for us UNIX slobs, we have a bunch of source code in the 
respository, but no build control. In order to start testing the fruits 
of Yury's work in PostGIS, we need to be able to do UNIX builds of a 
library we can link to in PostGIS. Yury is just getting to the point 
where we will soon have some topological operators to test, so working 
toward integrating geos into postgis makes sense about now.
  So, what I am looking for: someone to take the source code from the 
GEOS project and create an appropriate GNU build control system for it, 
preferably using the autoconf, automake suite of tools to make a 
traditional GNU installation. As an added bonus, information about 
portability issues would probably be helpful. Please contact me if you 
have some experience with these tools and are able to help.
Thanks,
Paul



From pramsey at refractions.net  Thu Aug 29 14:15:05 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Re: [postgis-users] GNU Autoconf / Automake Expert Needed
References: <3D6E4A49.8070102@refractions.net>	<1030637192.1622.7.camel@basil.cbl.umces.edu> 	<3D6E5FDF.4010307@refractions.net> <1030638830.1657.15.camel@basil.cbl.umces.edu>
Message-ID: <3D6E64A9.6080604@refractions.net>

Try to avoid moving things around too much, that's about it.  Any inline 
comments and documentation to help the braindead like myself maintain 
the structure once you have finished it would be good.  

Ferdinando Villa wrote:

>OK, got the code. I'll be working on this in the next few days unless
>someone else volunteers (in this case, DO let me know). Hope to have an
>initial configuration ready in a week or so (with static and shared
>libs, a geos-config script to install in bin, and a geos.m4 file with a
>GEOS_CHECK macro to configure the projects that will use it). I might
>come up with a slightly different dir structure (e.g. put the test
>programs in their own dir). Let me know if there are constraints I
>should keep in mind or other things I should know before I start.
>Cheers, ferdinando
>
>On Thu, 2002-08-29 at 13:54, Paul Ramsey wrote:
>  
>
>>Anonymous read CVS access is available, user/pw == cvs/cvs
>>
>>Ferdinando Villa wrote:
>>
>>    
>>
>>>Hi all,
>>>
>>>I'm seriously swamped but I'd be happy to help with the
>>>autoconf/automake side of GEOS if there are no other takers. Does the
>>>CVS setup allow anonymous access (no password is posted on the site)?
>>>I'd like to download the CVS tree and get a feeling of the codebase.
>>>Cheers, ferdinando
>>>
>>>On Thu, 2002-08-29 at 12:22, Paul Ramsey wrote:
>>> 
>>>
>>>      
>>>
>>>>PostGIS'ers,
>>>> The porting project to bring JTS topological functionality into the 
>>>>C++ world has been ongoing for the last few months. Yury Bychkov of the 
>>>>University of Victoria is the lead developer and is being assisted by 
>>>>Martin Davis, the developer of JTS. The project site is at 
>>>>geos.refractions.net. The project is jointly funded by Refractions 
>>>>Research, Vivid Solutions, and the British Columbia Advanced Systems 
>>>>Institute.
>>>> Yury has been doing the development in VC++, being careful to try and 
>>>>keep things portable. One of the things VC++ does is manage the build 
>>>>process. So for us UNIX slobs, we have a bunch of source code in the 
>>>>respository, but no build control. In order to start testing the fruits 
>>>>of Yury's work in PostGIS, we need to be able to do UNIX builds of a 
>>>>library we can link to in PostGIS. Yury is just getting to the point 
>>>>where we will soon have some topological operators to test, so working 
>>>>toward integrating geos into postgis makes sense about now.
>>>> So, what I am looking for: someone to take the source code from the 
>>>>GEOS project and create an appropriate GNU build control system for it, 
>>>>preferably using the autoconf, automake suite of tools to make a 
>>>>traditional GNU installation. As an added bonus, information about 
>>>>portability issues would probably be helpful. Please contact me if you 
>>>>have some experience with these tools and are able to help.
>>>>Thanks,
>>>>Paul
>>>>
>>>>
>>>>_______________________________________________
>>>>postgis-users mailing list
>>>>postgis-users@postgis.refractions.net
>>>>http://postgis.refractions.net/mailman/listinfo/postgis-users
>>>>   
>>>>
>>>>        
>>>>
>>
>>
>>_______________________________________________
>>postgis-users mailing list
>>postgis-users@postgis.refractions.net
>>http://postgis.refractions.net/mailman/listinfo/postgis-users
>>    
>>





From ybychkov at direct.ca  Thu Aug 29 14:29:50 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Re: [postgis-users] GNU Autoconf / Automake Expert
 Needed
References: <3D6E4A49.8070102@refractions.net>
 <1030637192.1622.7.camel@basil.cbl.umces.edu>
 <3D6E5FDF.4010307@refractions.net>
 <1030638830.1657.15.camel@basil.cbl.umces.edu>
 <3D6E64A9.6080604@refractions.net>
Message-ID: <002c01c24f8a$10a5aed0$de354d18@yury>

Hi Ferdinando,

Keep in mind that the code is still very raw and parts of it may not compile
(mainly because there are a lot of interdependencies and a lot of it is still
not done). If you have any errors (platform related or otherwise) or want me to
change some code just send me an email.

Yury

----- Original Message -----
From: "Paul Ramsey" <pramsey@refractions.net>
To: <postgis-users@postgis.refractions.net>
Cc: "geos-devel" <geos-devel@geos.refractions.net>
Sent: Thursday, August 29, 2002 11:15 AM
Subject: [geos-devel] Re: [postgis-users] GNU Autoconf / Automake Expert Needed


> Try to avoid moving things around too much, that's about it.  Any inline
> comments and documentation to help the braindead like myself maintain
> the structure once you have finished it would be good.
>
> Ferdinando Villa wrote:
>
> >OK, got the code. I'll be working on this in the next few days unless
> >someone else volunteers (in this case, DO let me know). Hope to have an
> >initial configuration ready in a week or so (with static and shared
> >libs, a geos-config script to install in bin, and a geos.m4 file with a
> >GEOS_CHECK macro to configure the projects that will use it). I might
> >come up with a slightly different dir structure (e.g. put the test
> >programs in their own dir). Let me know if there are constraints I
> >should keep in mind or other things I should know before I start.
> >Cheers, ferdinando
> >
> >On Thu, 2002-08-29 at 13:54, Paul Ramsey wrote:
> >
> >
> >>Anonymous read CVS access is available, user/pw == cvs/cvs
> >>
> >>Ferdinando Villa wrote:
> >>
> >>
> >>
> >>>Hi all,
> >>>
> >>>I'm seriously swamped but I'd be happy to help with the
> >>>autoconf/automake side of GEOS if there are no other takers. Does the
> >>>CVS setup allow anonymous access (no password is posted on the site)?
> >>>I'd like to download the CVS tree and get a feeling of the codebase.
> >>>Cheers, ferdinando
> >>>
> >>>On Thu, 2002-08-29 at 12:22, Paul Ramsey wrote:
> >>>
> >>>
> >>>
> >>>
> >>>>PostGIS'ers,
> >>>> The porting project to bring JTS topological functionality into the
> >>>>C++ world has been ongoing for the last few months. Yury Bychkov of the
> >>>>University of Victoria is the lead developer and is being assisted by
> >>>>Martin Davis, the developer of JTS. The project site is at
> >>>>geos.refractions.net. The project is jointly funded by Refractions
> >>>>Research, Vivid Solutions, and the British Columbia Advanced Systems
> >>>>Institute.
> >>>> Yury has been doing the development in VC++, being careful to try and
> >>>>keep things portable. One of the things VC++ does is manage the build
> >>>>process. So for us UNIX slobs, we have a bunch of source code in the
> >>>>respository, but no build control. In order to start testing the fruits
> >>>>of Yury's work in PostGIS, we need to be able to do UNIX builds of a
> >>>>library we can link to in PostGIS. Yury is just getting to the point
> >>>>where we will soon have some topological operators to test, so working
> >>>>toward integrating geos into postgis makes sense about now.
> >>>> So, what I am looking for: someone to take the source code from the
> >>>>GEOS project and create an appropriate GNU build control system for it,
> >>>>preferably using the autoconf, automake suite of tools to make a
> >>>>traditional GNU installation. As an added bonus, information about
> >>>>portability issues would probably be helpful. Please contact me if you
> >>>>have some experience with these tools and are able to help.
> >>>>Thanks,
> >>>>Paul
> >>>>
> >>>>
> >>>>_______________________________________________
> >>>>postgis-users mailing list
> >>>>postgis-users@postgis.refractions.net
> >>>>http://postgis.refractions.net/mailman/listinfo/postgis-users
> >>>>
> >>>>
> >>>>
> >>>>
> >>
> >>
> >>_______________________________________________
> >>postgis-users mailing list
> >>postgis-users@postgis.refractions.net
> >>http://postgis.refractions.net/mailman/listinfo/postgis-users
> >>
> >>
>
>
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>




From fvilla at zoo.uvm.edu  Fri Aug 30 09:58:16 2002
From: fvilla at zoo.uvm.edu (Ferdinando Villa)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
Message-ID: <1030715896.1629.24.camel@basil.cbl.umces.edu>

Hi all,

	I'm adding autoconf/automake support to geos. I have a quick question
about the library structure. The most natural source tree configuration
for automake is one library per directory - based on this I would
produce three libraries, libgsgeo (from source in source/geom), libgsgrp
(source/graph) and libgsio (source/io). I assume the code in
subdirectories of these (source/io/markup, source/graph/index) would
link into the corresponding upper-level library. Everyone ok with this
(names and arrangements)? 

Other configurations are possible, this is just the most natural given
the current tree structure. In all cases I'll produce a glib-config
script, so linking will just be a matter of adding `geos-config --libs`
to the command line and we won't need to remember the lib names.

Also, is the code in util/ needed into any of the libs? If so, which
one? I'm planning to add that and the test code as EXTRA_DIST so that it
goes in the tar archives when you 'make dist' but doesn't get compiled
by 'make all'. Let me know if that's ok.

More random questions:

Yury - do you want me to fix the trivial quirks about the code (like the
need for including stdio.h for sprintf)? 

Also: should I keep notes about what files to add (there will be a
plethora of files to add to cvs) or will you give me cvs write access? 

Last one: automake by default will add gnu-compliant files to the root
dir, including LICENSE (the GPL). Is geos GPL'd? If not, just remember
to change the license file when we commit it - we can leave it out but
any run of automake with standard parameters will add it, so it's better
to have one in the first place.

ciao,
ferdinando

-- 
ferdinando villa, ph.d.           associate research professor
gund institute for ecological economics, university of vermont
590 main street, burlington, vt 05405    phone: (802) 656-2972



From pramsey at refractions.net  Fri Aug 30 11:45:27 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
References: <1030715896.1629.24.camel@basil.cbl.umces.edu>
Message-ID: <3D6F9317.4060803@refractions.net>

Ferdinando,
Hold off for a day or so. Norman Vine dropped a tarball in my email box 
this morning which purports to have the autoconf stuff done. I need to 
check that it works, but the dragon may already be slain.
Thanks,
Paul

Ferdinando Villa wrote:

>Hi all,
>
>	I'm adding autoconf/automake support to geos. I have a quick question
>about the library structure. The most natural source tree configuration
>for automake is one library per directory - based on this I would
>produce three libraries, libgsgeo (from source in source/geom), libgsgrp
>(source/graph) and libgsio (source/io). I assume the code in
>subdirectories of these (source/io/markup, source/graph/index) would
>link into the corresponding upper-level library. Everyone ok with this
>(names and arrangements)? 
>
>Other configurations are possible, this is just the most natural given
>the current tree structure. In all cases I'll produce a glib-config
>script, so linking will just be a matter of adding `geos-config --libs`
>to the command line and we won't need to remember the lib names.
>
>Also, is the code in util/ needed into any of the libs? If so, which
>one? I'm planning to add that and the test code as EXTRA_DIST so that it
>goes in the tar archives when you 'make dist' but doesn't get compiled
>by 'make all'. Let me know if that's ok.
>
>More random questions:
>
>Yury - do you want me to fix the trivial quirks about the code (like the
>need for including stdio.h for sprintf)? 
>
>Also: should I keep notes about what files to add (there will be a
>plethora of files to add to cvs) or will you give me cvs write access? 
>
>Last one: automake by default will add gnu-compliant files to the root
>dir, including LICENSE (the GPL). Is geos GPL'd? If not, just remember
>to change the license file when we commit it - we can leave it out but
>any run of automake with standard parameters will add it, so it's better
>to have one in the first place.
>
>ciao,
>ferdinando
>
>  
>





From nhv at cape.com  Fri Aug 30 12:11:44 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
References: <1030715896.1629.24.camel@basil.cbl.umces.edu> <3D6F9317.4060803@refractions.net>
Message-ID: <034501c2503f$efe1ce70$0100a8c0@sfdev3>

Paul Ramsey writes:

> Ferdinando,
> Hold off for a day or so. Norman Vine dropped a tarball in my email box
> this morning which purports to have the autoconf stuff done. I need to
> check that it works, but the dragon may already be slain.
> Thanks,
> Paul
>
> Ferdinando Villa wrote:
>
> > I'm adding autoconf/automake support to geos. I have a quick question
> >about the library structure. The most natural source tree configuration
> >for automake is one library per directory - based on this I would
> >produce three libraries, libgsgeo (from source in source/geom), libgsgrp
> >(source/graph) and libgsio (source/io). I assume the code in
> >subdirectories of these (source/io/markup, source/graph/index) would
> >link into the corresponding upper-level library. Everyone ok with this
> >(names and arrangements)?

Ferdinando's quetion about the library structure is one that
'should' be addressed.  You will notice that my stuff just takes
the 'easiest way' to get it to compile with the gnu autotools :-)

FWIW
My stuff was done with a home-grown Python script that creates 98%  of the
auto-tools 'stuff' by just walking the directory tree and building a
Makefile.am
in each directory in a 'brain dead' way and  uses the output of autoscan and
the directory structure to build configure.in.  The rest < the .cvsignore(s)
and
the empty toplevel files are just 'boiler plate'.

Cheers

Norman



From ybychkov at direct.ca  Fri Aug 30 12:27:54 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
References: <1030715896.1629.24.camel@basil.cbl.umces.edu>
Message-ID: <003501c25042$3232aa40$de354d18@yury>

Hi everyone,

Me and Martin have just finished discussing it and here is what we think:

> I have a quick question
> about the library structure. The most natural source tree configuration
> for automake is one library per directory - based on this I would
> produce three libraries, libgsgeo (from source in source/geom), libgsgrp
> (source/graph) and libgsio (source/io). I assume the code in
> subdirectories of these (source/io/markup, source/graph/index) would
> link into the corresponding upper-level library. Everyone ok with this
> (names and arrangements)?
There are way to many rather complex interdependencies for it to work (even
'graph/index' is called from outside of 'graph'). It seems to us that everything
should be put in one library.


> Also, is the code in util/ needed into any of the libs? If so, which one?
'util' contains Assert class that is used almost everywhere.


> Yury - do you want me to fix the trivial quirks about the code (like the
> need for including stdio.h for sprintf)?
I'd prefer if you'll just send me an email and tell me what you want me to
change.

Yury




From pramsey at refractions.net  Fri Aug 30 14:00:10 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
References: <1030715896.1629.24.camel@basil.cbl.umces.edu> <003501c25042$3232aa40$de354d18@yury>
Message-ID: <3D6FB2AA.3080003@refractions.net>

I have a CVS sandbox with Normans changes integrated ready to commit. I 
have not integrated his changes to the actual code, which commented out 
alot of code which failed to compile under UNIX. I assume we'll fix that 
in a different pass.

Is there any reason I should not commit up these changes?
They do two things: (a) add a bunch of Makefile.am files to the 
directory structure (no harm) and (b) move all the testing files out of 
the /source directory and into /source/test

Speak now or forever hold your peace...
P.

Yury A. Bychkov wrote:
> Hi everyone,
> 
> Me and Martin have just finished discussing it and here is what we think:
> 
> 
>>I have a quick question
>>about the library structure. The most natural source tree configuration
>>for automake is one library per directory - based on this I would
>>produce three libraries, libgsgeo (from source in source/geom), libgsgrp
>>(source/graph) and libgsio (source/io). I assume the code in
>>subdirectories of these (source/io/markup, source/graph/index) would
>>link into the corresponding upper-level library. Everyone ok with this
>>(names and arrangements)?
> 
> There are way to many rather complex interdependencies for it to work (even
> 'graph/index' is called from outside of 'graph'). It seems to us that everything
> should be put in one library.
> 
> 
> 
>>Also, is the code in util/ needed into any of the libs? If so, which one?
> 
> 'util' contains Assert class that is used almost everywhere.
> 
> 
> 
>>Yury - do you want me to fix the trivial quirks about the code (like the
>>need for including stdio.h for sprintf)?
> 
> I'd prefer if you'll just send me an email and tell me what you want me to
> change.
> 
> Yury
> 
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From mbdavis at VividSolutions.com  Fri Aug 30 14:04:56 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0270A2845@venus.VividSolutions.com>

Sounds fairly harmless to me to integrate the changes - except for the ones that comment out swads of the original source code, of course.

The idea of splitting out the tests into a separate dir is good.

Since there has been no dissension I assume the concept of putting everything in one library is a good one also?  I can't imagine why we *wouldn't* do that, especially given the knarly interdependencies.

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Paul Ramsey [mailto:pramsey@refractions.net]
> Sent: Friday, August 30, 2002 11:00 AM
> To: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] GEOS libraries
> 
> 
> I have a CVS sandbox with Normans changes integrated ready to 
> commit. I 
> have not integrated his changes to the actual code, which 
> commented out 
> alot of code which failed to compile under UNIX. I assume 
> we'll fix that 
> in a different pass.
> 
> Is there any reason I should not commit up these changes?
> They do two things: (a) add a bunch of Makefile.am files to the 
> directory structure (no harm) and (b) move all the testing 
> files out of 
> the /source directory and into /source/test
> 
> Speak now or forever hold your peace...
> P.
> 
> Yury A. Bychkov wrote:
> > Hi everyone,
> > 
> > Me and Martin have just finished discussing it and here is 
> what we think:
> > 
> > 
> >>I have a quick question
> >>about the library structure. The most natural source tree 
> configuration
> >>for automake is one library per directory - based on this I would
> >>produce three libraries, libgsgeo (from source in 
> source/geom), libgsgrp
> >>(source/graph) and libgsio (source/io). I assume the code in
> >>subdirectories of these (source/io/markup, source/graph/index) would
> >>link into the corresponding upper-level library. Everyone 
> ok with this
> >>(names and arrangements)?
> > 
> > There are way to many rather complex interdependencies for 
> it to work (even
> > 'graph/index' is called from outside of 'graph'). It seems 
> to us that everything
> > should be put in one library.
> > 
> > 
> > 
> >>Also, is the code in util/ needed into any of the libs? If 
> so, which one?
> > 
> > 'util' contains Assert class that is used almost everywhere.
> > 
> > 
> > 
> >>Yury - do you want me to fix the trivial quirks about the 
> code (like the
> >>need for including stdio.h for sprintf)?
> > 
> > I'd prefer if you'll just send me an email and tell me what 
> you want me to
> > change.
> > 
> > Yury
> > 
> > 
> > 
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> > 
> 
> 
> -- 
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From pramsey at refractions.net  Fri Aug 30 14:07:27 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
References: <5A94289A9268514C8D6C0F1FF44BA0270A2845@venus.VividSolutions.com>
Message-ID: <3D6FB45F.5050109@refractions.net>

I certainly think we want one library, for sure. The individual 
components are not much use on their own, I do not think...
P.

Martin Davis wrote:
> Sounds fairly harmless to me to integrate the changes - except for the ones that comment out swads of the original source code, of course.
> 
> The idea of splitting out the tests into a separate dir is good.
> 
> Since there has been no dissension I assume the concept of putting everything in one library is a good one also?  I can't imagine why we *wouldn't* do that, especially given the knarly interdependencies.
>

-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From pramsey at refractions.net  Fri Aug 30 14:20:10 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] AutoConf Files
Message-ID: <3D6FB75A.1010902@refractions.net>

OK, the autoconf support has been committed.
Remember to do a 'cvs update -dP' ASAP to get the changes, directory 
moves etc.
 From Norman's notes on building:

1)  ./autogen.sh
2)  ./configure
3)  make

At the moment, your reward will be alot of compilation failures, but it 
is a point to start debugging from. I am attaching the diff file Norman 
make which has the "bad" lines commented out. It might serve as a guide 
to what is causing the failures on GNU platforms.

P.

-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_
-------------- next part --------------
A non-text attachment was scrubbed...
Name: nhv_diffs.tgz
Type: application/x-compressed
Size: 3898 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20020830/315aae8c/nhv_diffs.bin
From fvilla at zoo.uvm.edu  Fri Aug 30 12:48:27 2002
From: fvilla at zoo.uvm.edu (Ferdinando Villa)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
In-Reply-To: <3D6FB45F.5050109@refractions.net>
References: 
	<5A94289A9268514C8D6C0F1FF44BA0270A2845@venus.VividSolutions.com> 
	<3D6FB45F.5050109@refractions.net>
Message-ID: <1030726107.1629.38.camel@basil.cbl.umces.edu>

I almost had a complete distro when Norman's tarball came in. It makes
one single library (shared through libtool and static) - also I was
writing geos-config and m4 support for configuring GEOS in other
distributions. Should I finish this (after you commit what we have) or
you guys are already beyond me on these things? btw, it's great to see
open source at work....

ciao ferdinando

On Fri, 2002-08-30 at 14:07, Paul Ramsey wrote:
> I certainly think we want one library, for sure. The individual 
> components are not much use on their own, I do not think...
> P.
> 
> Martin Davis wrote:
> > Sounds fairly harmless to me to integrate the changes - except for the ones that comment out swads of the original source code, of course.
> > 
> > The idea of splitting out the tests into a separate dir is good.
> > 
> > Since there has been no dissension I assume the concept of putting everything in one library is a good one also?  I can't imagine why we *wouldn't* do that, especially given the knarly interdependencies.
> >
> 
> -- 
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
-- 
ferdinando villa, ph.d.           associate research professor
gund institute for ecological economics, university of vermont
590 main street, burlington, vt 05405    phone: (802) 656-2972



From pramsey at refractions.net  Fri Aug 30 14:56:13 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
References: <5A94289A9268514C8D6C0F1FF44BA0270A2845@venus.VividSolutions.com> 	<3D6FB45F.5050109@refractions.net> <1030726107.1629.38.camel@basil.cbl.umces.edu>
Message-ID: <3D6FBFCD.5090708@refractions.net>

   I think now that we have a simple autoconf framework, the next bit is 
to get things compiling cleanly, then linking into the one library. I 
would like to hear from Yury that the changes committed thus far have 
not mucked up what he is working on... :)
   I can give you and/or Norman write access to the archive to keep the 
build framework up to date, as Yury will be continuing to add a good 
deal of code over the next couple months, and it would be better that he 
focus on the code and not on the build details.
   So, can either of you look over the build consistency and portability 
issues once every couple weeks or so?

P.

Ferdinando Villa wrote:
> I almost had a complete distro when Norman's tarball came in. It makes
> one single library (shared through libtool and static) - also I was
> writing geos-config and m4 support for configuring GEOS in other
> distributions. Should I finish this (after you commit what we have) or
> you guys are already beyond me on these things? btw, it's great to see
> open source at work....
> 
> ciao ferdinando



-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From fvilla at zoo.uvm.edu  Fri Aug 30 13:23:44 2002
From: fvilla at zoo.uvm.edu (Ferdinando Villa)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
In-Reply-To: <3D6FBFCD.5090708@refractions.net>
References: 
	<5A94289A9268514C8D6C0F1FF44BA0270A2845@venus.VividSolutions.com>
	<3D6FB45F.5050109@refractions.net>
	<1030726107.1629.38.camel@basil.cbl.umces.edu> 
	<3D6FBFCD.5090708@refractions.net>
Message-ID: <1030728224.1625.44.camel@basil.cbl.umces.edu>

I'll be pleased to either 1) do that or 2) let Norman do it! Norman,
your call. I'll be following the development and periodically try to
compile here (Redhat 7.3) anyway - I need geos!

f.

On Fri, 2002-08-30 at 14:56, Paul Ramsey wrote:
>    I think now that we have a simple autoconf framework, the next bit is 
> to get things compiling cleanly, then linking into the one library. I 
> would like to hear from Yury that the changes committed thus far have 
> not mucked up what he is working on... :)
>    I can give you and/or Norman write access to the archive to keep the 
> build framework up to date, as Yury will be continuing to add a good 
> deal of code over the next couple months, and it would be better that he 
> focus on the code and not on the build details.
>    So, can either of you look over the build consistency and portability 
> issues once every couple weeks or so?
> 
> P.
> 
> Ferdinando Villa wrote:
> > I almost had a complete distro when Norman's tarball came in. It makes
> > one single library (shared through libtool and static) - also I was
> > writing geos-config and m4 support for configuring GEOS in other
> > distributions. Should I finish this (after you commit what we have) or
> > you guys are already beyond me on these things? btw, it's great to see
> > open source at work....
> > 
> > ciao ferdinando
> 
> 
> 
> -- 
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
-- 
ferdinando villa, ph.d.                    associate professor
gund institute for ecological economics, university of vermont
590 main street, burlington, vt 05405    phone: (802) 656-2972



From nhv at cape.com  Fri Aug 30 15:08:47 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] GEOS libraries
References: <5A94289A9268514C8D6C0F1FF44BA0270A2845@venus.VividSolutions.com> <3D6FB45F.5050109@refractions.net> <1030726107.1629.38.camel@basil.cbl.umces.edu>
Message-ID: <04f701c25058$ab972a30$0100a8c0@sfdev3>

Ferdinando Villa writes:

> I almost had a complete distro when Norman's tarball came in. It makes
> one single library (shared through libtool and static) - also I was
> writing geos-config and m4 support for configuring GEOS in other
> distributions. Should I finish this (after you commit what we have) or
> you guys are already beyond me on these things? btw, 
Ferdinando

Your system sounds better in that mine made a library per directory.

When you have got yours working it should only take a CVS commit
to change over to your 'better' one :-)

But until then my system will let those of us using gcc get started.

> it's great to see  open source at work....

Indeed :-))

ciao

Norman



From pramsey at refractions.net  Fri Aug 30 15:10:22 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability
Message-ID: <3D6FC31E.7050505@refractions.net>

So, working through the compilation bit by bit, some problems seem to be:

- occasionally stdio.h is not declared where it is needed (maybe VC++ 
papers over this automatically)
- the compiler cannot find declarations for __min() and __max(), 
although it *can* find declarations for min() and max(). What is the 
difference between them? In GeometryCollection.cpp line 55, __max() is 
used while an almost identical function just above it uses max().

P.

-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_



From nhv at cape.com  Fri Aug 30 15:24:37 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability
References: <3D6FC31E.7050505@refractions.net>
Message-ID: <056a01c2505a$e1f231e0$0100a8c0@sfdev3>

Paul Ramsey writes:

> So, working through the compilation bit by bit, some problems seem to be:
> 
> - occasionally stdio.h is not declared where it is needed (maybe VC++ 
> papers over this automatically)
> - the compiler cannot find declarations for __min() and __max(), 
> although it *can* find declarations for min() and max(). What is the 
> difference between them? In GeometryCollection.cpp line 55, __max() is 
> used while an almost identical function just above it uses max().

My experience with several cross-platform libraries is that we will have
LOTS of problems with MSVC6 and GCC incompatabilities.

One way around this is to have a <compiler.h> file that hides the
platform specifc 'quirks' or have the MSVC folks use the STLPort
STL headers.  The STLPort approach is probably the easiest
http://www.stlport.org

For common simple things like min() and max() most libraries
I help develop define their own versions

something like 

// geos_inlines.h

#ifndef _GEOS_INLINES_H
#define _GEOS_INLINES_H

// return the sign of a value
template <class T>
inline int GEOS_SIGN(const T x) {
    return x < T(0) ? -1 : 1;
}

// return the minimum of two values
template <class T>
inline T GEOS_MIN2(const T a, const T b) {
    return a < b ? a : b;
}

// return the minimum of three values
template <class T>
inline T GEOS_MIN3( const T a, const T b, const T c) {
    return (a < b ? SG_MIN2 (a, c) : SG_MIN2 (b, c));
}

ect ...

Cheers

Norman



From mbdavis at VividSolutions.com  Fri Aug 30 15:43:12 2002
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability
Message-ID: <5A94289A9268514C8D6C0F1FF44BA02701DCDF@venus.VividSolutions.com>

Actually, the original max/__max discrepancy arose due to incompatibilities between VC++6 and VC++7 !  For some reason VC++6 didn't recognize the STL max, only the function __max.  I'm sure the incompatibilities between MSVC and GCC will be even worse.

We've already implemented a similar idea to Norman's, via the platform.h file  (although compiler.h might be a better name).  I like his clever template functions for min and max.  Hopefully there won't be too many more of these, though, or we'll be reinventing a lot of wheels.  

Yury, do you think the STLPort idea might be a better way of handling this?

Martin Davis, Senior Technical Specialist
Vivid Solutions Inc.
Suite #1A-2328 Government Street   Victoria, B.C.   V8T 5G5
Phone: (250) 385 6040    Fax: (250) 385 6046
EMail: mbdavis@vividsolutions.com  Web: www.vividsolutions.com


> -----Original Message-----
> From: Paul Ramsey [mailto:pramsey@refractions.net]
> Sent: Friday, August 30, 2002 12:10 PM
> To: geos-devel@geos.refractions.net
> Subject: [geos-devel] Portability
> 
> 
> So, working through the compilation bit by bit, some problems 
> seem to be:
> 
> - occasionally stdio.h is not declared where it is needed (maybe VC++ 
> papers over this automatically)
> - the compiler cannot find declarations for __min() and __max(), 
> although it *can* find declarations for min() and max(). What is the 
> difference between them? In GeometryCollection.cpp line 55, 
> __max() is 
> used while an almost identical function just above it uses max().
> 
> P.
> 
> -- 
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 


From ybychkov at direct.ca  Sat Aug 31 05:09:10 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Report (August 30, 2002)
References: <004101c24b4e$62569950$de354d18@yury>
Message-ID: <015c01c250ce$12b1ea50$de354d18@yury>

Hi Everyone.

From ybychkov at direct.ca  Sat Aug 31 05:20:54 2002
From: ybychkov at direct.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability
References: <5A94289A9268514C8D6C0F1FF44BA02701DCDF@venus.VividSolutions.com>
Message-ID: <019601c250cf$b5e9dc90$de354d18@yury>

Hi Everyone,

Paul Ramsey wrote:
> So, working through the compilation bit by bit, some problems seem to be:
>
> - occasionally stdio.h is not declared where it is needed (maybe VC++
> papers over this automatically)
> - the compiler cannot find declarations for __min() and __max(),
> although it *can* find declarations for min() and max(). What is the
> difference between them? In GeometryCollection.cpp line 55, __max() is
> used while an almost identical function just above it uses max().
I am rather happy that there are so few incompatibilities so far. Martin has
already explained __max/max origin in his message:

Martin Davis wrote:
>Actually, the original max/__max discrepancy arose due to incompatibilities
between
>VC++6 and VC++7 !  For some reason VC++6 didn't recognize the STL max, only the
> function __max.  I'm sure the incompatibilities between MSVC and GCC will be
even
> worse.

>We've already implemented a similar idea to Norman's, via the platform.h file
> (although compiler.h might be a better name).  I like his clever template
functions
> for min and max.  Hopefully there won't be too many more of these, though,
> or we'll be reinventing a lot of wheels.
Yes, these templates are very nice. I'll put them in compiler.h (after I rename
platform.h)

> Yury, do you think the STLPort idea might be a better way of handling this?
I am not sure yet. If there are not a lot of such problems (and based on Paul's
message (and on my impression that I probably already used all needed STL
functions at least once) we can hope that it is so), it would probably be better
to avoid external libraries. Otherwise we can always switch to STLPort





From nhv at cape.com  Sat Aug 31 09:23:04 2002
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability
References: <5A94289A9268514C8D6C0F1FF44BA02701DCDF@venus.VividSolutions.com> <019601c250cf$b5e9dc90$de354d18@yury>
Message-ID: <012c01c250f1$8a56cd00$0100a8c0@sfdev3>

Yury A. Bychkov writes:
>
> > Yury, do you think the STLPort idea might be a better way of handling
this?
> I am not sure yet. If there are not a lot of such problems (and based on
Paul's
> message (and on my impression that I probably already used all needed STL
> functions at least once) we can hope that it is so), it would probably be
better
> to avoid external libraries. Otherwise we can always switch to STLPort

FYI  - I was only reccomending that STLPort be required for MSVC6

It appears as if the STL included in MSVC7 and libstdc++ < gcc > are
compatablle.  < eg they are both reasonably 'standards compliant' >

My concern here is that we don't code for the 'broken' STL that MS
shipped with MSVC6

Cheers

Norman



From pramsey at refractions.net  Sat Aug 31 12:40:56 2002
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:04 2007
Subject: [geos-devel] Portability
References: <5A94289A9268514C8D6C0F1FF44BA02701DCDF@venus.VividSolutions.com>
 <019601c250cf$b5e9dc90$de354d18@yury>
Message-ID: <3D70F198.9B14BB40@refractions.net>

"Yury A. Bychkov" wrote:

> I am not sure yet. If there are not a lot of such problems (and based on Paul's
> message (and on my impression that I probably already used all needed STL
> functions at least once) we can hope that it is so), it would probably be better
> to avoid external libraries. Otherwise we can always switch to STLPort

I should note that I did not work through everything until I got
complete compilation. I just worked through a portion of geom. If I go
through and commit changes which will allow compilation under GNU, would
that be OK?


