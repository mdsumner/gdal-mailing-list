From strk at keybit.net  Wed Sep  4 14:37:28 2013
From: strk at keybit.net (Sandro Santilli)
Date: Wed, 4 Sep 2013 23:37:28 +0200
Subject: [geos-devel] GEOS-3.3.9 released
Message-ID: <20130904213728.GA18133@gnash>

After 6 months of bugfixes, the 3.3.9 release of GEOS is available.

Download: http://download.osgeo.org/geos/geos-3.3.9.tar.bz2

Bug fixes / improvements since 3.3.8:

  - Fix OffsetCurve op in presence of duplicated vertices (#602)
  - Fix LineSegmentVisitor copy ctor (#636)
  - Fix area boundary return from GEOSPointOnSurface (#623)
  - Speedup GEOSWKBReader_read (#621)
  - Fix RobustLineIntersector handling of invalid intersection points (#622)
  - Reduce likelyhood of invalid output from snap operation (#629, #501)
  - Reduce memory fragmentation of prepared Polygon/Point intersection op
  - Fix mingw64 compile (#630)
  - Fix bug in HotPixel constructor (#635)
  - Fix install location of linearref headers (#624)
  - Fix multi-geometry constructor to drop SRID from components (#583)

--strk; 

From geos-trac at osgeo.org  Fri Sep  6 11:58:34 2013
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 06 Sep 2013 18:58:34 -0000
Subject: [geos-devel] [GEOS] #661: Another Snap crash
Message-ID: <044.90b793a1d1b0f9457fee3582f2c38cc2@osgeo.org>

#661: Another Snap crash
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  3.3.9                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 select st_snap('LINESTRING(-71.1317 42.2511,-71.1317 42.251,-71.1317
 42.2509)', 'MULTIPOINT(-71.1261 42.2703,-71.1257 42.2703,-71.1261
 42.2702)', 0.5);

 Both 3.4, trunk and 3.3 are affected

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/661>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep  6 11:58:52 2013
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 06 Sep 2013 18:58:52 -0000
Subject: [geos-devel] [GEOS] #661: Another Snap crash
In-Reply-To: <044.90b793a1d1b0f9457fee3582f2c38cc2@osgeo.org>
References: <044.90b793a1d1b0f9457fee3582f2c38cc2@osgeo.org>
Message-ID: <053.82d081551020dc0e3e61353fabcf89a2@osgeo.org>

#661: Another Snap crash
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  3.3.9                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 See #649 for a precedent

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/661#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep  6 12:02:25 2013
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 06 Sep 2013 19:02:25 -0000
Subject: [geos-devel] [GEOS] #661: Another Snap crash
In-Reply-To: <044.90b793a1d1b0f9457fee3582f2c38cc2@osgeo.org>
References: <044.90b793a1d1b0f9457fee3582f2c38cc2@osgeo.org>
Message-ID: <053.6a2b3acd9e15ea53904955279914eade@osgeo.org>

#661: Another Snap crash
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  3.3.9                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Wait, what I reported above _is_ the same input already fixed with #649 !
 Robe,ideas ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/661#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep  6 12:09:55 2013
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 06 Sep 2013 19:09:55 -0000
Subject: [geos-devel] [GEOS] #661: Another Snap crash
In-Reply-To: <044.90b793a1d1b0f9457fee3582f2c38cc2@osgeo.org>
References: <044.90b793a1d1b0f9457fee3582f2c38cc2@osgeo.org>
Message-ID: <053.61622c15d3ba0cb9c89a375702e94466@osgeo.org>

#661: Another Snap crash
------------------------+---------------------------------------------------
 Reporter:  strk        |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:                            
Component:  Default     |      Version:  3.3.9                     
 Severity:  Unassigned  |   Resolution:  duplicate                 
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by strk):

  * status:  new => closed
  * resolution:  => duplicate


Comment:

 So, invalid ticket, duplicate and already fixed

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/661#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep  6 13:37:21 2013
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 06 Sep 2013 20:37:21 -0000
Subject: [geos-devel] [GEOS] #626: Intersection with result from
 intersection --> TopologyException Error
In-Reply-To: <048.a07a120dbe81a664ab594405689c652c@osgeo.org>
References: <048.a07a120dbe81a664ab594405689c652c@osgeo.org>
Message-ID: <057.01922336d54175a6d6826b83df25e5d0@osgeo.org>

#626: Intersection with result from intersection --> TopologyException Error
---------------------------------------------------------------+------------
 Reporter:  rajanski                                           |        Owner:  geos-devel@?              
     Type:  defect                                             |       Status:  closed                    
 Priority:  major                                              |    Milestone:  3.3.9                     
Component:  Default                                            |      Version:  3.3.3                     
 Severity:  Significant                                        |   Resolution:  fixed                     
 Keywords:  intersection, st_intersection, topology exception  |  
---------------------------------------------------------------+------------
Changes (by strk):

 * cc: geosbug@? (added)
  * status:  new => closed
  * resolution:  => fixed
  * milestone:  => 3.3.9


Comment:

 Just tested this, works fine with 3.3.9.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/626#comment:7>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pepijn at vaneeckhoudt.net  Fri Sep  6 16:23:25 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Sat, 7 Sep 2013 01:23:25 +0200
Subject: [geos-devel] Thread safe error handling
Message-ID: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>

Hi,

I'm using GEOS via the C api in libgpkg to implement geometry functions. I got the basics working now, but it feels like I had to jump through a lot of hoops to get the error handling set up reliably. The main problem I had was that there's no way to associate user data with the error and notice callbacks. Since this library may be used in a multi-threaded context I ended up having to use thread-local storage to store the error message. This feels more complicated than it should be.

Is there a simpler way to achieve the same result with the current API that I might have missed?

Thanks,

Pepijn

From strk at keybit.net  Sat Sep  7 06:32:59 2013
From: strk at keybit.net (Sandro Santilli)
Date: Sat, 7 Sep 2013 15:32:59 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
Message-ID: <20130907133259.GB16740@gnash>

On Sat, Sep 07, 2013 at 01:23:25AM +0200, Pepijn Van Eeckhoudt wrote:
> Hi,
> 
> I'm using GEOS via the C api in libgpkg to implement geometry functions. I got the basics working now, but it feels like I had to jump through a lot of hoops to get the error handling set up reliably. The main problem I had was that there's no way to associate user data with the error and notice callbacks. Since this library may be used in a multi-threaded context I ended up having to use thread-local storage to store the error message. This feels more complicated than it should be.
> 
> Is there a simpler way to achieve the same result with the current API that I might have missed?

Not really. If you have ideas for extending the interface in a backward
compatible way, a patch would be accepted.

--strk;

From pepijn at vaneeckhoudt.net  Sat Sep  7 10:16:59 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Sat, 7 Sep 2013 19:16:59 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <20130907133259.GB16740@gnash>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
Message-ID: <29530CD3-9200-4552-9C01-47C876004768@vaneeckhoudt.net>

Op 7-sep.-2013 om 15:32 heeft Sandro Santilli <strk at keybit.net> het volgende geschreven:

> On Sat, Sep 07, 2013 at 01:23:25AM +0200, Pepijn Van Eeckhoudt wrote:
>> 
>> Is there a simpler way to achieve the same result with the current API that I might have missed?
> 
> Not really. If you have ideas for extending the interface in a backward
> compatible way, a patch would be accepted.

Ok, thanks for confirming that. I'll see what I can come up with after the weekend.

Pepijn

From hi.vishal123 at gmail.com  Sat Sep  7 12:37:57 2013
From: hi.vishal123 at gmail.com (vishal tiwari)
Date: Sun, 8 Sep 2013 01:07:57 +0530
Subject: [geos-devel] Weekly Report 12- Adding Voronoi Diagram to GEOS
Message-ID: <CAJW9wovcexUdRPPvf7zV9wK11Mmz_2phUHxcFjneie5QGfbjmw@mail.gmail.com>

Week 12 report is as follows:
<http://trac.osgeo.org/geos/wiki/Reports#Week12:>

*1. Work Done:*

   - Ported the following classes:

-- triangulate::Segment.[1]
-- triangulate::splitSegment.[2]
-- triangulate::NonEncroachingSplitPointFinder.[3]
-- triangulate::ConstraintSplitPointFinder.[3]
-- (method)geom::LineSegment::getCoordinate().[3]


   - Worked out a number of problems with strk such as memory leaks in the
   triangulate::quadedge::QuadEdgeSubdivision class which is required for
   Voronoi Diagram Builder.[4]

*2. Problems Faced:*

   - Had some problems in fixing the memory leaks.

*3. Work to be done in the next week*

   - Test VoronoiDiagramBuilder for memory leaks.
   - Make documentation.

Branches:
[1]https://github.com/vishaltiwari/libgeos/tree/Segment,
[2]https://github.com/vishaltiwari/libgeos/tree/SplitSegment,
[3]
https://github.com/vishaltiwari/libgeos/tree/NonEncroachingSplitPointFinder
[4]https://github.com/vishaltiwari/libgeos/tree/QuadEdgeSubdivision_mark2

wiki:
http://trac.osgeo.org/geos/wiki/GSoC

Thanks and kind regards,
-- 
Vishal Tiwari
Undergraduate
Computer Science and Engineering
Lab for Spatial Informatics
IIIT-Hyderabad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130908/82f77452/attachment.html>

From pepijn at vaneeckhoudt.net  Mon Sep  9 00:43:51 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Mon, 09 Sep 2013 09:43:51 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <20130907133259.GB16740@gnash>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
Message-ID: <1378712631.2511.6.camel@windhoek.luciad.com>

Hi Sandro,

I had a more in depth look at the code to see how this code be done. My
proposal would be to add an extended message handler signature like

typedef void (*GEOSMessageHandler_r)(GEOSContextHandle_t *handle, void
*userData, const char *fmt, ...);

and accompanying init and set...handler functions. The only real problem
I ran into is that we wont be able to implement the old handlers in
terms of the new ones since they're both variadic functions. That
implies that we'll need a mode flag in struct GEOSContextHandleInternal
and add conditionals around the handle->NOTICE and handle->ERROR calls.

Does the above acceptable to you?
Which version of C/C++ can I use. I'm thinking of hiding the details of
handle->NOTICE and handle->ERROR in a macro, but that would require
variadic macro support (i.e., c99 and/or c++11).

Pepijn

On za, 2013-09-07 at 15:32 +0200, Sandro Santilli wrote:
> On Sat, Sep 07, 2013 at 01:23:25AM +0200, Pepijn Van Eeckhoudt wrote:
> > Hi,
> > 
> > I'm using GEOS via the C api in libgpkg to implement geometry functions. I got the basics working now, but it feels like I had to jump through a lot of hoops to get the error handling set up reliably. The main problem I had was that there's no way to associate user data with the error and notice callbacks. Since this library may be used in a multi-threaded context I ended up having to use thread-local storage to store the error message. This feels more complicated than it should be.
> > 
> > Is there a simpler way to achieve the same result with the current API that I might have missed?
> 
> Not really. If you have ideas for extending the interface in a backward
> compatible way, a patch would be accepted.
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel



From strk at keybit.net  Mon Sep  9 01:49:25 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 9 Sep 2013 10:49:25 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1378712631.2511.6.camel@windhoek.luciad.com>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
Message-ID: <20130909084925.GC13192@gnash>

On Mon, Sep 09, 2013 at 09:43:51AM +0200, Pepijn Van Eeckhoudt wrote:
> Hi Sandro,
> 
> I had a more in depth look at the code to see how this code be done. My
> proposal would be to add an extended message handler signature like
> 
> typedef void (*GEOSMessageHandler_r)(GEOSContextHandle_t *handle, void
> *userData, const char *fmt, ...);
> 
> and accompanying init and set...handler functions. The only real problem
> I ran into is that we wont be able to implement the old handlers in
> terms of the new ones since they're both variadic functions. That
> implies that we'll need a mode flag in struct GEOSContextHandleInternal
> and add conditionals around the handle->NOTICE and handle->ERROR calls.
> 
> Does the above acceptable to you?
> Which version of C/C++ can I use. I'm thinking of hiding the details of
> handle->NOTICE and handle->ERROR in a macro, but that would require
> variadic macro support (i.e., c99 and/or c++11).

Can't we turn NOTICE_MESSAGE and ERROR_MESSAGE into variadic methods
of the GEOSContextHandlerInternal class ? We could print to a string
and always pass a single string to the user-provided function, using
an hardcoded "%s" format for it.

--strk;

> 
> Pepijn
> 
> On za, 2013-09-07 at 15:32 +0200, Sandro Santilli wrote:
> > On Sat, Sep 07, 2013 at 01:23:25AM +0200, Pepijn Van Eeckhoudt wrote:
> > > Hi,
> > > 
> > > I'm using GEOS via the C api in libgpkg to implement geometry functions. I got the basics working now, but it feels like I had to jump through a lot of hoops to get the error handling set up reliably. The main problem I had was that there's no way to associate user data with the error and notice callbacks. Since this library may be used in a multi-threaded context I ended up having to use thread-local storage to store the error message. This feels more complicated than it should be.
> > > 
> > > Is there a simpler way to achieve the same result with the current API that I might have missed?
> > 
> > Not really. If you have ideas for extending the interface in a backward
> > compatible way, a patch would be accepted.
> > 
> > --strk;

From pepijn at vaneeckhoudt.net  Mon Sep  9 03:37:02 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Mon, 09 Sep 2013 12:37:02 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <20130909084925.GC13192@gnash>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
Message-ID: <1378723022.2511.67.camel@windhoek.luciad.com>

On ma, 2013-09-09 at 10:49 +0200, Sandro Santilli wrote:
> On Mon, Sep 09, 2013 at 09:43:51AM +0200, Pepijn Van Eeckhoudt wrote:
> Can't we turn NOTICE_MESSAGE and ERROR_MESSAGE into variadic methods
> of the GEOSContextHandlerInternal class ? We could print to a string
> and always pass a single string to the user-provided function, using
> an hardcoded "%s" format for it.
Not sure if I understand this correctly. Do you mean you would do the
actual formatting on the geos side and pass the formatted string as
'fmt' then? That would work if you're ok with the subtle behavioural
change. Seems unlikely that anyone would count on the exact contents of
'fmt' and the parameter list, but you never know...

Memory allocation for the formatted string shifts to geos then as well;
do you think that's an issue?

Pepijn


From strk at keybit.net  Mon Sep  9 04:00:05 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 9 Sep 2013 13:00:05 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1378723022.2511.67.camel@windhoek.luciad.com>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
Message-ID: <20130909110005.GE13192@gnash>

On Mon, Sep 09, 2013 at 12:37:02PM +0200, Pepijn Van Eeckhoudt wrote:
> On ma, 2013-09-09 at 10:49 +0200, Sandro Santilli wrote:
> > On Mon, Sep 09, 2013 at 09:43:51AM +0200, Pepijn Van Eeckhoudt wrote:
> > Can't we turn NOTICE_MESSAGE and ERROR_MESSAGE into variadic methods
> > of the GEOSContextHandlerInternal class ? We could print to a string
> > and always pass a single string to the user-provided function, using
> > an hardcoded "%s" format for it.
>
> Not sure if I understand this correctly. Do you mean you would do the
> actual formatting on the geos side and pass the formatted string as
> 'fmt' then? That would work if you're ok with the subtle behavioural
> change. Seems unlikely that anyone would count on the exact contents of
> 'fmt' and the parameter list, but you never know...

I'd pass "%s" as the 'fmt' arg, and a pointer to a geos-owned memory
space as the only argument. No client should be expecting anything
from those calls, except they'd be composed by a printf-like format
and a variable list of arguments which work fine with that format.

> Memory allocation for the formatted string shifts to geos then as well;
> do you think that's an issue?

I don't see any issue there, clients would still need to re-print
the returned string. Only, we'll need a buffer for messages in each
GEOSContextHandlerInternal instance.

--strk;

From pepijn at vaneeckhoudt.net  Mon Sep  9 04:41:24 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Mon, 09 Sep 2013 13:41:24 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <20130909110005.GE13192@gnash>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
Message-ID: <1378726884.2511.72.camel@windhoek.luciad.com>

On ma, 2013-09-09 at 13:00 +0200, Sandro Santilli wrote:
> On Mon, Sep 09, 2013 at 12:37:02PM +0200, Pepijn Van Eeckhoudt wrote:
> > On ma, 2013-09-09 at 10:49 +0200, Sandro Santilli wrote:
> > > On Mon, Sep 09, 2013 at 09:43:51AM +0200, Pepijn Van Eeckhoudt wrote:
> > > Can't we turn NOTICE_MESSAGE and ERROR_MESSAGE into variadic methods
> > > of the GEOSContextHandlerInternal class ? We could print to a string
> > > and always pass a single string to the user-provided function, using
> > > an hardcoded "%s" format for it.
> >
> > Not sure if I understand this correctly. Do you mean you would do the
> > actual formatting on the geos side and pass the formatted string as
> > 'fmt' then? That would work if you're ok with the subtle behavioural
> > change. Seems unlikely that anyone would count on the exact contents of
> > 'fmt' and the parameter list, but you never know...
> 
> I'd pass "%s" as the 'fmt' arg, and a pointer to a geos-owned memory
> space as the only argument. No client should be expecting anything
> from those calls, except they'd be composed by a printf-like format
> and a variable list of arguments which work fine with that format.
I have to admit C++ is a very, very long time ago for me. Is it possible
to call one variadic function from another one in C++? If not, how would
you delegate from notice(handle,void*,fmt,...) (or the hypothetical
method on a C++ class) to the current notice(fmt,...)? I think this is
necessary to avoid breaking the ABI, no?

> > Memory allocation for the formatted string shifts to geos then as well;
> > do you think that's an issue?
> 
> I don't see any issue there, clients would still need to re-print
> the returned string. Only, we'll need a buffer for messages in each
> GEOSContextHandlerInternal instance.
Ok, one thing less to worry about.

Pepijn


From pepijn at vaneeckhoudt.net  Mon Sep  9 06:08:50 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Mon, 09 Sep 2013 15:08:50 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1378726884.2511.72.camel@windhoek.luciad.com>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
	<1378726884.2511.72.camel@windhoek.luciad.com>
Message-ID: <1378732130.2511.91.camel@windhoek.luciad.com>

On ma, 2013-09-09 at 13:41 +0200, Pepijn Van Eeckhoudt wrote:
> > I'd pass "%s" as the 'fmt' arg, and a pointer to a geos-owned memory
> > space as the only argument. No client should be expecting anything
> > from those calls, except they'd be composed by a printf-like format
> > and a variable list of arguments which work fine with that format.
> I have to admit C++ is a very, very long time ago for me. Is it possible
> to call one variadic function from another one in C++? If not, how would
> you delegate from notice(handle,void*,fmt,...) (or the hypothetical
> method on a C++ class) to the current notice(fmt,...)? I think this is
> necessary to avoid breaking the ABI, no?

I went ahead and just coded this and things turned out just fine. Not
sure why I thought this was going to be a problem.

Patch in attachment. I tried to mimic the GEOS coding style as well as
possible. The function naming might need some work. The _r suffix
variants of init and set*Handler where already token so I've had to make
_r_v2 variants.

Patch is against svn trunk.

Regards,

Pepijn
-------------- next part --------------
A non-text attachment was scrubbed...
Name: ts_error_handling.patch
Type: text/x-patch
Size: 77297 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130909/fa39f405/attachment-0001.bin>

From strk at keybit.net  Mon Sep  9 06:14:45 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 9 Sep 2013 15:14:45 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1378726884.2511.72.camel@windhoek.luciad.com>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
	<1378726884.2511.72.camel@windhoek.luciad.com>
Message-ID: <20130909131445.GB9599@gnash>

On Mon, Sep 09, 2013 at 01:41:24PM +0200, Pepijn Van Eeckhoudt wrote:

> I have to admit C++ is a very, very long time ago for me. Is it possible
> to call one variadic function from another one in C++? If not, how would
> you delegate from notice(handle,void*,fmt,...) (or the hypothetical
> method on a C++ class) to the current notice(fmt,...)? I think this is
> necessary to avoid breaking the ABI, no?

You will always send 2 arguments to the user-provided old function, so
you don't have to care about varargs at that point.

You would just call

   user_provided_notifier("%s", the_printed_buffer_pointer)

IFF no new handler was registered in the context.

Actually, the new notifier may even stop being a varargs, at this point,
allowing for something like:

  if ( new_handler ) {
    new_handler(user_data, message_buffer);
  } else {
    old_handler("%s", message_buffer);
  }


--strk;


From strk at keybit.net  Mon Sep  9 06:29:53 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 9 Sep 2013 15:29:53 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1378732130.2511.91.camel@windhoek.luciad.com>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
	<1378726884.2511.72.camel@windhoek.luciad.com>
	<1378732130.2511.91.camel@windhoek.luciad.com>
Message-ID: <20130909132953.GC9599@gnash>

On Mon, Sep 09, 2013 at 03:08:50PM +0200, Pepijn Van Eeckhoudt wrote:

> @@ -361,11 +445,11 @@
>      }
>      catch (const std::exception &e)
>      {
> -        handle->ERROR_MESSAGE("%s", e.what());
> +        handle->ERROR_MESSAGE(handle, handle->errorData, "%s", e.what());

You should need to change anything in the callers if you made
"handle" an instance of GEOSContextHandleInternal_t class.
It should be enough to change initGEOS_r to do

    extHandle = new GEOSContextHandleInternal_t();

instead of

    extHandle = malloc(sizeof(GEOSContextHandleInternal_t));

And finishGEOS_r to do:

    delete extHandle;

instead of 

    free(extHandle);

PS: if you're comfortable with git, consider forking from the official
    git mirror: https://github.com/postgis/postgis/

--strk;

From pepijn at vaneeckhoudt.net  Mon Sep  9 06:44:16 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Mon, 09 Sep 2013 15:44:16 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <20130909132953.GC9599@gnash>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
	<1378726884.2511.72.camel@windhoek.luciad.com>
	<1378732130.2511.91.camel@windhoek.luciad.com>
	<20130909132953.GC9599@gnash>
Message-ID: <1378734256.2511.94.camel@windhoek.luciad.com>

On ma, 2013-09-09 at 15:29 +0200, Sandro Santilli wrote:
> You should need to change anything in the callers if you made
> "handle" an instance of GEOSContextHandleInternal_t class.
> It should be enough to change initGEOS_r to do
> 
>     extHandle = new GEOSContextHandleInternal_t();
> 
> instead of
> 
>     extHandle = malloc(sizeof(GEOSContextHandleInternal_t));
> 
> And finishGEOS_r to do:
> 
>     delete extHandle;
> 
> instead of 
> 
>     free(extHandle);
> 
> PS: if you're comfortable with git, consider forking from the official
>     git mirror: https://github.com/postgis/postgis/
You mean https://github.com/libgeos/libgeos.git right? That's what I
cloned from.

In the version of geos_ts_c.cpp I'm looking at
GEOSContextHandleInternal_t is a typedef for struct
GEOSContextHandleInternal. I can change it to be a class if you like.

Are we talking about the same GEOSContextHandleInternal_t?

Pepijn


From strk at keybit.net  Mon Sep  9 07:04:17 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 9 Sep 2013 16:04:17 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1378734256.2511.94.camel@windhoek.luciad.com>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
	<1378726884.2511.72.camel@windhoek.luciad.com>
	<1378732130.2511.91.camel@windhoek.luciad.com>
	<20130909132953.GC9599@gnash>
	<1378734256.2511.94.camel@windhoek.luciad.com>
Message-ID: <20130909140417.GD9599@gnash>

On Mon, Sep 09, 2013 at 03:44:16PM +0200, Pepijn Van Eeckhoudt wrote:

> You mean https://github.com/libgeos/libgeos.git right? That's what I
> cloned from.

Yes, sorry.

> In the version of geos_ts_c.cpp I'm looking at
> GEOSContextHandleInternal_t is a typedef for struct
> GEOSContextHandleInternal. I can change it to be a class if you like.
> 
> Are we talking about the same GEOSContextHandleInternal_t?

Yes, same type.

Struct and class are the same in C++.
Only difference is in the default access to members being private
for class and public for struct.

--strk;

From pepijn at vaneeckhoudt.net  Mon Sep  9 08:56:39 2013
From: pepijn at vaneeckhoudt.net (Pepijn Van Eeckhoudt)
Date: Mon, 09 Sep 2013 17:56:39 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <20130909140417.GD9599@gnash>
References: <1D78F417-0A95-4863-B412-7E0C4ED39C2B@vaneeckhoudt.net>
	<20130907133259.GB16740@gnash>
	<1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
	<1378726884.2511.72.camel@windhoek.luciad.com>
	<1378732130.2511.91.camel@windhoek.luciad.com>
	<20130909132953.GC9599@gnash>
	<1378734256.2511.94.camel@windhoek.luciad.com>
	<20130909140417.GD9599@gnash>
Message-ID: <1378742199.2511.96.camel@windhoek.luciad.com>

On ma, 2013-09-09 at 16:04 +0200, Sandro Santilli wrote:
> On Mon, Sep 09, 2013 at 03:44:16PM +0200, Pepijn Van Eeckhoudt wrote:
> 
> > You mean https://github.com/libgeos/libgeos.git right? That's what I
> > cloned from.
> 
> Yes, sorry.
> 
> > In the version of geos_ts_c.cpp I'm looking at
> > GEOSContextHandleInternal_t is a typedef for struct
> > GEOSContextHandleInternal. I can change it to be a class if you like.
> > 
> > Are we talking about the same GEOSContextHandleInternal_t?
> 
> Yes, same type.
> 
> Struct and class are the same in C++.
> Only difference is in the default access to members being private
> for class and public for struct.

I modified the patch as you suggested and submitted it as a pull request
via github. NOTICE_MESSAGE and ERROR_MESSAGE are now methods on
GEOSContextHandleInternal_t.

I didn't change the casing of NOTICE_MESSAGE and ERROR_MESSAGE to keep
the scope of patch as small as possible.

Pepijn


From strk at keybit.net  Mon Sep  9 09:01:06 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 9 Sep 2013 18:01:06 +0200
Subject: [geos-devel] Thread safe error handling
In-Reply-To: <1378742199.2511.96.camel@windhoek.luciad.com>
References: <1378712631.2511.6.camel@windhoek.luciad.com>
	<20130909084925.GC13192@gnash>
	<1378723022.2511.67.camel@windhoek.luciad.com>
	<20130909110005.GE13192@gnash>
	<1378726884.2511.72.camel@windhoek.luciad.com>
	<1378732130.2511.91.camel@windhoek.luciad.com>
	<20130909132953.GC9599@gnash>
	<1378734256.2511.94.camel@windhoek.luciad.com>
	<20130909140417.GD9599@gnash>
	<1378742199.2511.96.camel@windhoek.luciad.com>
Message-ID: <20130909160106.GF9599@gnash>

On Mon, Sep 09, 2013 at 05:56:39PM +0200, Pepijn Van Eeckhoudt wrote:
> On ma, 2013-09-09 at 16:04 +0200, Sandro Santilli wrote:
> > On Mon, Sep 09, 2013 at 03:44:16PM +0200, Pepijn Van Eeckhoudt wrote:
> > 
> > > You mean https://github.com/libgeos/libgeos.git right? That's what I
> > > cloned from.
> > 
> > Yes, sorry.
> > 
> > > In the version of geos_ts_c.cpp I'm looking at
> > > GEOSContextHandleInternal_t is a typedef for struct
> > > GEOSContextHandleInternal. I can change it to be a class if you like.
> > > 
> > > Are we talking about the same GEOSContextHandleInternal_t?
> > 
> > Yes, same type.
> > 
> > Struct and class are the same in C++.
> > Only difference is in the default access to members being private
> > for class and public for struct.
> 
> I modified the patch as you suggested and submitted it as a pull request
> via github. NOTICE_MESSAGE and ERROR_MESSAGE are now methods on
> GEOSContextHandleInternal_t.
> 
> I didn't change the casing of NOTICE_MESSAGE and ERROR_MESSAGE to keep
> the scope of patch as small as possible.

Appreciated.
Could you also file a ticket on trac with a pointer to the
pull request ?

http://trac.osgeo.org/geos/

You'll need an OSGeo account, if you don't have one already:
http://www.osgeo.org/osgeo_userid/

--strk;

From geos-trac at osgeo.org  Mon Sep  9 21:48:21 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 10 Sep 2013 04:48:21 -0000
Subject: [geos-devel] [GEOS] #662: COPYING file is outdated and need update
Message-ID: <054.35d57735d4b487fc0b51f215e964e707@osgeo.org>

#662: COPYING file is outdated and need update
----------------------------+-----------------------------------------------
 Reporter:  brunofriedmann  |       Owner:  geos-devel@?              
     Type:  defect          |      Status:  new                       
 Priority:  minor           |   Milestone:  3.4.3                     
Component:  Default         |     Version:  3.4.2                     
 Severity:  Unassigned      |    Keywords:                            
----------------------------+-----------------------------------------------
 The COPYING file contain invalid data (mainly address) of FSF.
 A new copy of the file should be used.

 Either http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt
 Or patch included

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/662>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 10 00:09:23 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 10 Sep 2013 07:09:23 -0000
Subject: [geos-devel] [GEOS] #662: COPYING file is outdated and need
	update
In-Reply-To: <054.35d57735d4b487fc0b51f215e964e707@osgeo.org>
References: <054.35d57735d4b487fc0b51f215e964e707@osgeo.org>
Message-ID: <063.0a0650dc1ebc1f636f8a9843601a33d9@osgeo.org>

#662: COPYING file is outdated and need update
----------------------------+-----------------------------------------------
 Reporter:  brunofriedmann  |        Owner:  geos-devel@?              
     Type:  defect          |       Status:  closed                    
 Priority:  minor           |    Milestone:  3.4.3                     
Component:  Default         |      Version:  3.4.2                     
 Severity:  Unassigned      |   Resolution:  fixed                     
 Keywords:                  |  
----------------------------+-----------------------------------------------
Changes (by strk):

  * status:  new => closed
  * resolution:  => fixed


Comment:

 r3946 in trunk, r3947 in 3.4 branch (3.4.3), r3948 in 3.3 branch (3.3.10)
 Thanks!

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/662#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From hi.vishal123 at gmail.com  Sat Sep 14 07:01:46 2013
From: hi.vishal123 at gmail.com (vishal tiwari)
Date: Sat, 14 Sep 2013 19:31:46 +0530
Subject: [geos-devel] Weekly Report 13- Adding Voronoi Diagram to GEOS
Message-ID: <CAJW9wotihF_Fpjk4bEahfFAAE4E_ETip+A6qfxmLCLdLqw=srg@mail.gmail.com>

Week 13 report:

*1. Work done:*

   - This week I spent my time in fixing memory leaks for Voronoi class.
   Finally with the help of strk, we have integrated it with the main trunk.
   - It also contains the C-API interface along with some test cases.

*2. Problems faced:*

   - Had some issues with the memory leaks.

*3. Work to be done in the next week:*

   - Make documentation.


repo: https://github.com/vishaltiwari/libgeos/tree/capi_voronoi_mark2
wiki: http://trac.osgeo.org/geos/wiki/GSoC
Thanks and kind regards,
-- 
Vishal Tiwari
Undergraduate
Computer Science and Engineering
Lab for Spatial Informatics
IIIT-Hyderabad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130914/28a5ed1c/attachment.html>

From hi.vishal123 at gmail.com  Tue Sep 17 23:46:42 2013
From: hi.vishal123 at gmail.com (vishal tiwari)
Date: Wed, 18 Sep 2013 12:16:42 +0530
Subject: [geos-devel] Creating documentation
Message-ID: <CAJW9wot1GMUYrX-_-y6akXMM4ACzQCOXBm7QAeqfh09m=XXHbg@mail.gmail.com>

Hey,

  I was thinking of making the documentation for the methods relating
Voronoi, that have been ported. How do i add it on
http://geos.osgeo.org/doxygen/index.html ?

Thanks,
Vishal
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130918/3f4fad10/attachment.html>

From strk at keybit.net  Wed Sep 18 02:01:55 2013
From: strk at keybit.net (Sandro Santilli)
Date: Wed, 18 Sep 2013 11:01:55 +0200
Subject: [geos-devel] Creating documentation
In-Reply-To: <CAJW9wot1GMUYrX-_-y6akXMM4ACzQCOXBm7QAeqfh09m=XXHbg@mail.gmail.com>
References: <CAJW9wot1GMUYrX-_-y6akXMM4ACzQCOXBm7QAeqfh09m=XXHbg@mail.gmail.com>
Message-ID: <20130918090155.GA3000@gnash>

On Wed, Sep 18, 2013 at 12:16:42PM +0530, vishal tiwari wrote:
> Hey,
> 
>   I was thinking of making the documentation for the methods relating
> Voronoi, that have been ported. How do i add it on
> http://geos.osgeo.org/doxygen/index.html ?

That documentation is automatically generated by using comments
having a special format. It's mostly just a matter of starting them
with double star:

 /** 
  * This is an header for doxygen
  *
  * This is the body
  */
 int theMethod();

You can build the docs with `make apidoc` from top-level dir.
The output will be in doc/doxygen_docs/html/index.html

--strk; 

From hi.vishal123 at gmail.com  Wed Sep 18 02:31:46 2013
From: hi.vishal123 at gmail.com (vishal tiwari)
Date: Wed, 18 Sep 2013 15:01:46 +0530
Subject: [geos-devel] Creating documentation
In-Reply-To: <20130918090155.GA3000@gnash>
References: <CAJW9wot1GMUYrX-_-y6akXMM4ACzQCOXBm7QAeqfh09m=XXHbg@mail.gmail.com>
	<20130918090155.GA3000@gnash>
Message-ID: <CAJW9wotpbpOrOYP_=b1kvh3K4roZ8x7t=MAy4owh9aLazrCLuw@mail.gmail.com>

cool.. got it.. :)


On 18 September 2013 14:31, Sandro Santilli <strk at keybit.net> wrote:

> On Wed, Sep 18, 2013 at 12:16:42PM +0530, vishal tiwari wrote:
> > Hey,
> >
> >   I was thinking of making the documentation for the methods relating
> > Voronoi, that have been ported. How do i add it on
> > http://geos.osgeo.org/doxygen/index.html ?
>
> That documentation is automatically generated by using comments
> having a special format. It's mostly just a matter of starting them
> with double star:
>
>  /**
>   * This is an header for doxygen
>   *
>   * This is the body
>   */
>  int theMethod();
>
> You can build the docs with `make apidoc` from top-level dir.
> The output will be in doc/doxygen_docs/html/index.html
>
> --strk;
>



-- 
Vishal Tiwari
Undergraduate
Computer Science and Engineering
Lab for Spatial Informatics
IIIT-Hyderabad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130918/750a3c48/attachment.html>

From hi.vishal123 at gmail.com  Mon Sep 23 02:02:52 2013
From: hi.vishal123 at gmail.com (vishal tiwari)
Date: Mon, 23 Sep 2013 14:32:52 +0530
Subject: [geos-devel] Weekly Report 14 - Adding Voronoi Diagram to GEOS
Message-ID: <CAJW9wouRtHKg35rviSonnsVQ1-HKaZxaH4UZpZjR35CwFHmA0g@mail.gmail.com>

Hi,

    All the work was previously complete. This week, documentation of the
APIs were made.

Thanks,
-- 
Vishal Tiwari
Undergraduate
Computer Science and Engineering
Lab for Spatial Informatics
IIIT-Hyderabad
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130923/0253d451/attachment.html>

From gokul.krishna at enzen.com  Mon Sep 23 01:59:54 2013
From: gokul.krishna at enzen.com (M Gokul Krishna)
Date: Mon, 23 Sep 2013 14:29:54 +0530 (IST)
Subject: [geos-devel] Text Wrapping
Message-ID: <1295921679.8060929.1379926794744.JavaMail.root@enzen.com>

Dear Developers,

   I have doubt in Text Wrapping in Annotation,So is any patch example will be there,Pls SHare with me...


Thanx & Regards
Gokul
E-DISCLAIMER

For all the Enzen group companies:

This email communication, including attachments is solely intended for the use of the
individual to whom it is addressed. It may contain confidential and/or legally privileged
information. If you are not the intended recipient, please notify the sender immediately
and delete the message forthwith from your mailing system; any disclosure, copying,
distribution or taking action based on the contents of this email is strictly prohibited
and unlawful.  E-mail communications cannot be guaranteed to be timely, secure,
error or virus-free, for which sender does not take any liability.  


From gokul.krishna at enzen.com  Mon Sep 23 02:14:30 2013
From: gokul.krishna at enzen.com (M Gokul Krishna)
Date: Mon, 23 Sep 2013 14:44:30 +0530 (IST)
Subject: [geos-devel] multiple layer annotation in openlayers
Message-ID: <108994657.8068740.1379927670249.JavaMail.root@enzen.com>

Dear Friend,

     I want to do multiple layer annotation,Can you send some model code which is helpful to do multiple layer annotation....



Thanx & Regards,
Gokul krishna
E-DISCLAIMER

For all the Enzen group companies:

This email communication, including attachments is solely intended for the use of the
individual to whom it is addressed. It may contain confidential and/or legally privileged
information. If you are not the intended recipient, please notify the sender immediately
and delete the message forthwith from your mailing system; any disclosure, copying,
distribution or taking action based on the contents of this email is strictly prohibited
and unlawful.  E-mail communications cannot be guaranteed to be timely, secure,
error or virus-free, for which sender does not take any liability.  


From gdt at ir.bbn.com  Mon Sep 23 05:08:26 2013
From: gdt at ir.bbn.com (Greg Troxel)
Date: Mon, 23 Sep 2013 08:08:26 -0400
Subject: [geos-devel] build/test report on NetBSD/sparc
Message-ID: <rmir4cfyc3p.fsf@fnord.ir.bbn.com>


I did build geos 3.4.2 on NetBSD 4-stable sparc (a Classic with 24 MB of
ram, a box that's at least 15 years old).  It built ok, taking a few
days.  Tests failed with

Making check in xmltester
/usr/bin/make  check-TESTS
[1]   Killed                  ./XMLTester -v -...
FAIL: testrunner

which I think is because more memory is needed than my combined RAM and
swap.

I didn't see any warnings that looked sparc-specific.

This is meant as a positive report; I suspect geos hasn't been compiled
on this CPU in a long time.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130923/94e3f2c1/attachment.pgp>

From strk at keybit.net  Mon Sep 23 06:47:26 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 23 Sep 2013 15:47:26 +0200
Subject: [geos-devel] build/test report on NetBSD/sparc
In-Reply-To: <rmir4cfyc3p.fsf@fnord.ir.bbn.com>
References: <rmir4cfyc3p.fsf@fnord.ir.bbn.com>
Message-ID: <20130923134726.GA6930@gnash>

On Mon, Sep 23, 2013 at 08:08:26AM -0400, Greg Troxel wrote:
> 
> I did build geos 3.4.2 on NetBSD 4-stable sparc (a Classic with 24 MB of
> ram, a box that's at least 15 years old).  It built ok, taking a few
> days. 

Wow, thanks for testing ! :)

> Tests failed with
> 
> Making check in xmltester
> /usr/bin/make  check-TESTS
> [1]   Killed                  ./XMLTester -v -...
> FAIL: testrunner
> 
> which I think is because more memory is needed than my combined RAM and
> swap.
> 
> I didn't see any warnings that looked sparc-specific.

Great. If you want to find the actual culprit you'll see
that testrunner is a shell script calling XMLTester with a long
argument list. Maybe you could reduce the list to find the offending
test and remove it ?

Also, did the tests under test/unit all succeed ?

> This is meant as a positive report; I suspect geos hasn't been compiled
> on this CPU in a long time.

Probably. Would you be interested in setting that machine up as a build
slave for geos, shall the osgeo buildbot ever get back up ?
http://trac.osgeo.org/osgeo/ticket/1214

--strk;

From gdt at ir.bbn.com  Mon Sep 23 07:28:21 2013
From: gdt at ir.bbn.com (Greg Troxel)
Date: Mon, 23 Sep 2013 10:28:21 -0400
Subject: [geos-devel] build/test report on NetBSD/sparc
In-Reply-To: <20130923134726.GA6930@gnash> (Sandro Santilli's message of "Mon, 
	23 Sep 2013 15:47:26 +0200")
References: <rmir4cfyc3p.fsf@fnord.ir.bbn.com> <20130923134726.GA6930@gnash>
Message-ID: <rmieh8fy5mi.fsf@fnord.ir.bbn.com>


Sandro Santilli <strk at keybit.net> writes:

> Great. If you want to find the actual culprit you'll see
> that testrunner is a shell script calling XMLTester with a long
> argument list. Maybe you could reduce the list to find the offending
> test and remove it ?

It's so painful to build, but I'll see how it goes.   Modern software
just doesn't fit in 24 MB of RAM :-(

It would be nice if XMLTester got invoked once per test and there was
clearer intermediate status.  But perhaps my case is degenerate.  (Are
there test results from Raspberry Pi, Beaglebone, etc.?  Of course those
have lots of RAM compared to retrocomputing.)

> Also, did the tests under test/unit all succeed ?

I didn't have cunit installed - starting the build of that now.

> Probably. Would you be interested in setting that machine up as a build
> slave for geos, shall the osgeo buildbot ever get back up ?
> http://trac.osgeo.org/osgeo/ticket/1214

Sorry, can't do that (policy issues), plus it's way too slow.   I think
it took 4 days for the first build (with ccache, so the 2nd one wasn't
so bad).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: not available
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20130923/10b07f93/attachment.pgp>

From strk at keybit.net  Mon Sep 23 07:34:10 2013
From: strk at keybit.net (Sandro Santilli)
Date: Mon, 23 Sep 2013 16:34:10 +0200
Subject: [geos-devel] build/test report on NetBSD/sparc
In-Reply-To: <rmieh8fy5mi.fsf@fnord.ir.bbn.com>
References: <rmir4cfyc3p.fsf@fnord.ir.bbn.com> <20130923134726.GA6930@gnash>
	<rmieh8fy5mi.fsf@fnord.ir.bbn.com>
Message-ID: <20130923143410.GB6930@gnash>

On Mon, Sep 23, 2013 at 10:28:21AM -0400, Greg Troxel wrote:
> 
> Sandro Santilli <strk at keybit.net> writes:
> 
> > Great. If you want to find the actual culprit you'll see
> > that testrunner is a shell script calling XMLTester with a long
> > argument list. Maybe you could reduce the list to find the offending
> > test and remove it ?
> 
> It's so painful to build, but I'll see how it goes.   Modern software
> just doesn't fit in 24 MB of RAM :-(
> 
> It would be nice if XMLTester got invoked once per test and there was
> clearer intermediate status.  But perhaps my case is degenerate.  (Are
> there test results from Raspberry Pi, Beaglebone, etc.?  Of course those
> have lots of RAM compared to retrocomputing.)

I don't know of any test results from those systems.
You can edit testrunner script and turn it into an iteration
on the list of tests invoking XMLTester on each.

Doing it by default could also be an option, why not...
But also catching OOM condition should do.

--strk;

From geos-trac at osgeo.org  Tue Sep 24 01:38:35 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 24 Sep 2013 08:38:35 -0000
Subject: [geos-devel] [GEOS] #665: st_isvalid fails to detect invalid
 interior ring orientation
Message-ID: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>

#665: st_isvalid fails to detect invalid interior ring orientation
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 The following request should return False (the interior ring as the same
 orientation as the exterior ring)

 select st_isvalid(st_geomfromtext('polygon((0 0, 1 0, 1 1, 0 1, 0 0),(.1
 .1, .9 .1, .9 .9, .1 .9, .1 .1))'));

 But it returns True.



 From Simple Feature Access - Part 1 (1.2.1), section 6.1.11:

 The exterior boundary LinearRing defines the ?top? of the surface which is
 the side of the surface from which the
 exterior boundary appears to traverse the boundary in a counter clockwise
 direction. '''The interior LinearRings will have the opposite orientation,
 and appear as clockwise when viewed from the ?top?,'''

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/665>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 24 01:42:41 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 24 Sep 2013 08:42:41 -0000
Subject: [geos-devel] [GEOS] #665: st_isvalid fails to detect invalid
 interior ring orientation
In-Reply-To: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
References: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
Message-ID: <052.d5cdbff07411f43722c7b2e4cf225b1b@osgeo.org>

#665: st_isvalid fails to detect invalid interior ring orientation
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 GEOS/JTS has never been checking for orientation as a validity constraint,
 is this new in the SFS specs ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/665#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 24 02:09:30 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 24 Sep 2013 09:09:30 -0000
Subject: [geos-devel] [GEOS] #665: st_isvalid fails to detect invalid
 interior ring orientation
In-Reply-To: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
References: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
Message-ID: <052.c594ac3da2823a88de97dbc68bebdf9f@osgeo.org>

#665: st_isvalid fails to detect invalid interior ring orientation
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by vmo):

 Since version 1.2.0 (2006-10-05) apparently.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/665#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 24 12:06:05 2013
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 24 Sep 2013 19:06:05 -0000
Subject: [geos-devel] [GEOS] #665: st_isvalid fails to detect invalid
 interior ring orientation
In-Reply-To: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
References: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
Message-ID: <052.74a30d1365f9e6b2f6505237827ed4f7@osgeo.org>

#665: st_isvalid fails to detect invalid interior ring orientation
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by aperi2007):

 AFAIK
 the clockwise vs not-clockwise orientation is not a OGC-SF velidity
 constraint.
 AFAIK it is a specific constraint only for shapefile.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/665#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep 25 23:20:38 2013
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 26 Sep 2013 06:20:38 -0000
Subject: [geos-devel] [GEOS] #665: st_isvalid fails to detect invalid
 interior ring orientation
In-Reply-To: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
References: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
Message-ID: <052.3e4e695b91384363a9805cdde9d8c918@osgeo.org>

#665: st_isvalid fails to detect invalid interior ring orientation
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by aperi2007):

 in the 1.2.1 successively version of specs

 >OpenGIS? Implementation Standard for Geographic
 >information - Simple feature access - Part 2: SQL option
 >2010-08-04

 Seem it was corrected.

 Infact at page 105 they wrote:

 >Polygon rotation is not defined by this standard; actual polygon rotation
 may be in a
 >clockwise or counter-clockwise direction

 AFAIK this is for internal or external ring.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/665#comment:4>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Sep 26 01:24:46 2013
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 26 Sep 2013 08:24:46 -0000
Subject: [geos-devel] [GEOS] #666: st_isvalid fails to detect 3 points
	polygons
Message-ID: <043.fe2e8b4311e246a7cd584e36a6722243@osgeo.org>

#666: st_isvalid fails to detect 3 points polygons
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 select st_isvalid(st_geomfromtext('polygon((0 0, 1 0, 1 1, 0 0))'));

 returns true, and should return false.

 This ring self-intersects (at all points).

 From Simple Feature Access - Part 1 (1.2.1), section 6.1.11:

 c) No two Rings in the boundary cross and the Rings in the boundary of a
 Polygon may intersect at a Point but
 only as a tangent, e.g.

 ? P ? Polygon, ? c1,c2?P.Boundary(), c1?c2,

 '''? p, q ?Point, p, q ? c1, p ? q ,''' ''# the polygon in example does
 not satisfy this condition''

 [p ? c2] ? [? ? > 0 ? [|p-q|<?] ? [q ? c2] ];

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/666>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Sep 26 01:34:03 2013
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 26 Sep 2013 08:34:03 -0000
Subject: [geos-devel] [GEOS] #666: st_isvalid fails to detect 3 points
	polygons
In-Reply-To: <043.fe2e8b4311e246a7cd584e36a6722243@osgeo.org>
References: <043.fe2e8b4311e246a7cd584e36a6722243@osgeo.org>
Message-ID: <052.65c3659438b0a45ddf5ea40f6d520a3b@osgeo.org>

#666: st_isvalid fails to detect 3 points polygons
------------------------+---------------------------------------------------
 Reporter:  vmo         |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:  3.4.3                     
Component:  Default     |      Version:  3.3.3                     
 Severity:  Unassigned  |   Resolution:  invalid                   
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by strk):

  * status:  new => closed
  * resolution:  => invalid


Comment:

 I see a triangle there, no self-intersection possible.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/666#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Sep 26 04:20:30 2013
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 26 Sep 2013 11:20:30 -0000
Subject: [geos-devel] [GEOS] #666: st_isvalid fails to detect 3 points
	polygons
In-Reply-To: <043.fe2e8b4311e246a7cd584e36a6722243@osgeo.org>
References: <043.fe2e8b4311e246a7cd584e36a6722243@osgeo.org>
Message-ID: <052.b1facc67157b755be165f01ca39f99d0@osgeo.org>

#666: st_isvalid fails to detect 3 points polygons
------------------------+---------------------------------------------------
 Reporter:  vmo         |        Owner:  geos-devel@?              
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:  3.4.3                     
Component:  Default     |      Version:  3.3.3                     
 Severity:  Unassigned  |   Resolution:  invalid                   
 Keywords:              |  
------------------------+---------------------------------------------------

Comment(by vmo):

 Sorry, my mistake.

 I intended to test polygon((0 0, 1 0, 0 0)), and this one indeed causes
 invalidity.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/666#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Sep 26 05:13:39 2013
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 26 Sep 2013 12:13:39 -0000
Subject: [geos-devel] [GEOS] #665: st_isvalid fails to detect invalid
 interior ring orientation
In-Reply-To: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
References: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
Message-ID: <052.37033e92f179c5e36e16367a43e40adf@osgeo.org>

#665: st_isvalid fails to detect invalid interior ring orientation
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by vmo):

 I agree that the orientation of the exterior ring is not specified (it's
 used to define the top, nothing more).

 But to me the highlighted sentence clearly says that interior rings must
 be oriented opposite to the exterior ring.

 It's somewhat clarified in the draft of the upcoming ISO 19107 (admittedly
 not voted yet):

 ''"Surfaces in 2D will always have a planar interpolation because of the
 restriction of the dimension of the coordinate space. In 2D because of the
 restriction above, a surface will have a unique exterior ring, the one
 with the largest envelope, and some number of interior rings. Each such
 ring in 2D satisfies the Jordan Curve Theorem and thus divides the space
 into exactly two regions, one bounded and one unbounded. For rings that
 are counterclockwise, the bounded area is to the left of the ring as a
 curve. For rings that are clockwise, the bounded area is to its right.
 '''Each ring is said to define an area, the one to its left'''. A surface
 in 2D is the set intersection of the areas defined by its rings."''

 I say "somewhat clarified" because the highlighted sentence means that
 orientation defines where the area is (exterior or interior). Interior
 ring needs to define the unbounded region to define the polygon as
 intersection of all areas defined by the rings. Nevertheless, the two
 previous sentences seem to me to say just the opposite.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/665#comment:5>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Sep 26 06:03:23 2013
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 26 Sep 2013 13:03:23 -0000
Subject: [geos-devel] [GEOS] #665: st_isvalid fails to detect invalid
 interior ring orientation
In-Reply-To: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
References: <043.dca804a4143a0c681515383bfa8646d7@osgeo.org>
Message-ID: <052.bdf260cc98ca465b5b667c05618f426b@osgeo.org>

#665: st_isvalid fails to detect invalid interior ring orientation
------------------------+---------------------------------------------------
 Reporter:  vmo         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.3.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 I guess we'll need a flag to check validity according to ISO 19107 then.
 There's one for ring-touching-shell validity already, IIRC.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/665#comment:6>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

