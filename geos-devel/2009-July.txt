From doublebyte at gmail.com  Wed Jul  1 19:00:59 2009
From: doublebyte at gmail.com (Jo)
Date: Wed Jul  1 19:01:03 2009
Subject: [geos-devel] geos::geom::triangle
Message-ID: <23ab5f0a0907011600n12de36fdkbfb8ab4eea2e472@mail.gmail.com>

Hi,
Anybody knows what happened to the geos ::geometry::Triangle class?
Its present in the headers of my source code, but not in the installed
headers (actually, I think is commented in the geometry header)
Im usin geos 3.0.3

                       thanks in advance!
                                               Jo

2009/6/30 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. how to compile this new package
>      (=?gb2312?B?xM/SsNDj0rsgxM/SsNDj0rv=?=)
>   2. Re: how to compile this new package (Jeff McKenna)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 30 Jun 2009 14:50:39 +0800
> From: =?gb2312?B?xM/SsNDj0rsgxM/SsNDj0rv=?= <kurama_xp@hotmail.com>
> Subject: [geos-devel] how to compile this new package
> To: <geos-devel@lists.osgeo.org>
> Message-ID: <BAY142-W1006241EE340F86B0120499310@phx.gbl>
> Content-Type: text/plain; charset="gb2312"
>
>
> Please take a look at the following page.
>
>
>
> http://trac.osgeo.org/geos/ticket/274
>
>
>
> I can't build geos-3.1.1. Please tell me what is wrong and how to fix it
> step by step. Thanks.
>
>
>
>
>
> _________________________________________________________________
> Show them the way! Add maps and directions to your party invites.
> http://www.microsoft.com/windows/windowslive/products/events.aspx
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090630/3b1b26c8/attachment-0001.html
>
> ------------------------------
>
> Message: 2
> Date: Tue, 30 Jun 2009 09:04:39 -0300
> From: Jeff McKenna <jmckenna@gatewaygeomatics.com>
> Subject: Re: [geos-devel] how to compile this new package
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID: <4A49FF57.3000704@gatewaygeomatics.com>
> Content-Type: text/plain; charset=GB2312
>
> ???? ???? wrote:
> > Please take a look at the following page.
> >
> > http://trac.osgeo.org/geos/ticket/274
> >
> > I can't build geos-3.1.1. Please tell me what is wrong and how to fix it
> > step by step. Thanks.
> >
> >
>
> When you install MSVC 2005 or 2008, there should be some shortcuts in
> your start menu: use the "Visual Studio 2005/2008 Command Prompt" one.
> Then you can cd into the /geos directory and execute the commands:
>
>  autogen.bat
>  nmake /f makefile.vc MSVC_VER=1500     (for msvc 2008)
>
> -jeff
>
>
> --
> Jeff McKenna
> FOSS4G Consulting and Training Services
> http://www.gatewaygeomatics.com/
>
>
>
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 80, Issue 25
> ******************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090702/9375650a/attachment.html
From geos-trac at osgeo.org  Fri Jul  3 06:21:54 2009
From: geos-trac at osgeo.org (GEOS)
Date: Fri Jul  3 06:21:56 2009
Subject: [geos-devel] [GEOS] #275: Topology Exception on valid geometries
Message-ID: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>

#275: Topology Exception on valid geometries
------------------------+---------------------------------------------------
 Reporter:  yabo        |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.1.1                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 Hi,

 I've encoutered a situation where two valid geometries (as stated by
 IsValidOp) throw a Topology Exception when being unioned. The first
 geometry is a MultiPolygon and the second a Polygon. Unfortunately I
 couldn't shrink the geometries down to a human-parsable size.

 I have this problem with both geos-3.1.0 and geos-svn-trunk.

 The reported error is :
 {{{
 TopologyException: found non-noded intersection between -3138.99 39.9929,
 -3195.93 131.777 and -3145.05 62.5969, -3138.99 39.9929 -3138.99 39.9929
 }}}

 I've attached the test program source to the ticket.

 Thanks,

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/275>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From mbdavis at refractions.net  Mon Jul  6 12:44:09 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Mon Jul  6 12:44:45 2009
Subject: [geos-devel] [GEOS] #275: Topology Exception on valid geometries
In-Reply-To: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
References: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
Message-ID: <4A5229D9.9030201@refractions.net>

This works in JTS.

GEOS wrote:
> #275: Topology Exception on valid geometries
> ------------------------+---------------------------------------------------
>  Reporter:  yabo        |       Owner:  geos-devel@lists.osgeo.org
>      Type:  defect      |      Status:  new                       
>  Priority:  major       |   Milestone:  3.1.1                     
> Component:  Default     |     Version:  svn-trunk                 
>  Severity:  Unassigned  |    Keywords:                            
> ------------------------+---------------------------------------------------
>  Hi,
>
>  I've encoutered a situation where two valid geometries (as stated by
>  IsValidOp) throw a Topology Exception when being unioned. The first
>  geometry is a MultiPolygon and the second a Polygon. Unfortunately I
>  couldn't shrink the geometries down to a human-parsable size.
>
>  I have this problem with both geos-3.1.0 and geos-svn-trunk.
>
>  The reported error is :
>  {{{
>  TopologyException: found non-noded intersection between -3138.99 39.9929,
>  -3195.93 131.777 and -3145.05 62.5969, -3138.99 39.9929 -3138.99 39.9929
>  }}}
>
>  I've attached the test program source to the ticket.
>
>  Thanks,
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From mbdavis at refractions.net  Mon Jul  6 12:44:40 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Mon Jul  6 12:45:16 2009
Subject: [geos-devel] [GEOS] #275: Topology Exception on valid geometries
In-Reply-To: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
References: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
Message-ID: <4A5229F8.4050607@refractions.net>

This works in JTS.

GEOS wrote:
> #275: Topology Exception on valid geometries
> ------------------------+---------------------------------------------------
>  Reporter:  yabo        |       Owner:  geos-devel@lists.osgeo.org
>      Type:  defect      |      Status:  new                       
>  Priority:  major       |   Milestone:  3.1.1                     
> Component:  Default     |     Version:  svn-trunk                 
>  Severity:  Unassigned  |    Keywords:                            
> ------------------------+---------------------------------------------------
>  Hi,
>
>  I've encoutered a situation where two valid geometries (as stated by
>  IsValidOp) throw a Topology Exception when being unioned. The first
>  geometry is a MultiPolygon and the second a Polygon. Unfortunately I
>  couldn't shrink the geometries down to a human-parsable size.
>
>  I have this problem with both geos-3.1.0 and geos-svn-trunk.
>
>  The reported error is :
>  {{{
>  TopologyException: found non-noded intersection between -3138.99 39.9929,
>  -3195.93 131.777 and -3145.05 62.5969, -3138.99 39.9929 -3138.99 39.9929
>  }}}
>
>  I've attached the test program source to the ticket.
>
>  Thanks,
>
>   
> ------------------------------------------------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From strk at keybit.net  Mon Jul  6 13:32:00 2009
From: strk at keybit.net (strk)
Date: Mon Jul  6 13:32:05 2009
Subject: [geos-devel] [GEOS] #275: Topology Exception on valid geometries
In-Reply-To: <4A5229F8.4050607@refractions.net>
References: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
	<4A5229F8.4050607@refractions.net>
Message-ID: <20090706173200.GE53942@keybit.net>

On Mon, Jul 06, 2009 at 09:44:40AM -0700, Martin Davis wrote:
> This works in JTS.

It works in trunk too when converted to an XML testcase.
I'll update the trac issue ASAP. Martin: I'd appreciate if
you could follow up there. TIA.

--strk;


> >#275: Topology Exception on valid geometries
> >------------------------+---------------------------------------------------
> > Reporter:  yabo        |       Owner:  geos-devel@lists.osgeo.org
> >     Type:  defect      |      Status:  new                       
> > Priority:  major       |   Milestone:  3.1.1                     
> >Component:  Default     |     Version:  svn-trunk                 
> > Severity:  Unassigned  |    Keywords:                            
> >------------------------+---------------------------------------------------
> > Hi,
> >
> > I've encoutered a situation where two valid geometries (as stated by
> > IsValidOp) throw a Topology Exception when being unioned. The first
> > geometry is a MultiPolygon and the second a Polygon. Unfortunately I
> > couldn't shrink the geometries down to a human-parsable size.
> >
> > I have this problem with both geos-3.1.0 and geos-svn-trunk.
> >
> > The reported error is :
> > {{{
> > TopologyException: found non-noded intersection between -3138.99 39.9929,
> > -3195.93 131.777 and -3145.05 62.5969, -3138.99 39.9929 -3138.99 39.9929
> > }}}
> >
> > I've attached the test program source to the ticket.
> >
> > Thanks,
> >
> >  
> >------------------------------------------------------------------------
From geos-trac at osgeo.org  Mon Jul  6 13:36:11 2009
From: geos-trac at osgeo.org (GEOS)
Date: Mon Jul  6 13:36:12 2009
Subject: [geos-devel] Re: [GEOS] #275: Topology Exception on valid geometries
In-Reply-To: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
References: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
Message-ID: <053.2dd09d082f1ec377a7ff0902374a1c55@osgeo.org>

#275: Topology Exception on valid geometries
------------------------+---------------------------------------------------
 Reporter:  yabo        |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.1.1                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------
Comment (by strk):

 For the record, the test encoded as an XML testcase works fine.
 Was committed as tests/xmltester/tests/bug275.xml as of r2610.

 Martin, is that the same path you took to test JTS ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/275#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Mon Jul  6 13:43:39 2009
From: geos-trac at osgeo.org (GEOS)
Date: Mon Jul  6 13:43:41 2009
Subject: [geos-devel] Re: [GEOS] #275: Topology Exception on valid geometries
In-Reply-To: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
References: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
Message-ID: <053.ed56ede0b7c726926c65df0952bd9a51@osgeo.org>

#275: Topology Exception on valid geometries
------------------------+---------------------------------------------------
 Reporter:  yabo        |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.1.1                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------
Comment (by strk):

 I tried the C++ version too, and I get a result there as well.
 The topology exception is cought internally, triggering snapping code:

 Overlay op threw TopologyException: found non-noded intersection between
 -3138.99 39.9929, -3195.93 131.777 and -3145.05 62.5969, -3138.99 39.9929
 -3138.99 39.9929. Will try snapping now

 ...

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/275#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From mbdavis at refractions.net  Mon Jul  6 14:04:32 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Mon Jul  6 14:05:08 2009
Subject: [geos-devel] [GEOS] #275: Topology Exception on valid geometries
In-Reply-To: <20090706173200.GE53942@keybit.net>
References: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
	<4A5229F8.4050607@refractions.net>
	<20090706173200.GE53942@keybit.net>
Message-ID: <4A523CB0.3000503@refractions.net>

strk,

I'm unable to login to the GEOS trac right now, so I'm following up on 
the list.

I didn't build an actual test case, I just tried it in the TestBuilder.  
But adding this as a test case is a good idea!

strk wrote:
> On Mon, Jul 06, 2009 at 09:44:40AM -0700, Martin Davis wrote:
>   
>> This works in JTS.
>>     
>
> It works in trunk too when converted to an XML testcase.
> I'll update the trac issue ASAP. Martin: I'd appreciate if
> you could follow up there. TIA.
>
> --strk;
>
>
>   
>>> #275: Topology Exception on valid geometries
>>> ------------------------+---------------------------------------------------
>>> Reporter:  yabo        |       Owner:  geos-devel@lists.osgeo.org
>>>     Type:  defect      |      Status:  new                       
>>> Priority:  major       |   Milestone:  3.1.1                     
>>> Component:  Default     |     Version:  svn-trunk                 
>>> Severity:  Unassigned  |    Keywords:                            
>>> ------------------------+---------------------------------------------------
>>> Hi,
>>>
>>> I've encoutered a situation where two valid geometries (as stated by
>>> IsValidOp) throw a Topology Exception when being unioned. The first
>>> geometry is a MultiPolygon and the second a Polygon. Unfortunately I
>>> couldn't shrink the geometries down to a human-parsable size.
>>>
>>> I have this problem with both geos-3.1.0 and geos-svn-trunk.
>>>
>>> The reported error is :
>>> {{{
>>> TopologyException: found non-noded intersection between -3138.99 39.9929,
>>> -3195.93 131.777 and -3145.05 62.5969, -3138.99 39.9929 -3138.99 39.9929
>>> }}}
>>>
>>> I've attached the test program source to the ticket.
>>>
>>> Thanks,
>>>
>>>  
>>> ------------------------------------------------------------------------
>>>       
>
>   

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From geos-trac at osgeo.org  Wed Jul  8 13:45:34 2009
From: geos-trac at osgeo.org (GEOS)
Date: Wed Jul  8 13:45:35 2009
Subject: [geos-devel] [GEOS] #276: "make check" failed at geos_unit on mingw
Message-ID: <045.2a7367ebb36cc080bf31d34c4ead0fb6@osgeo.org>

#276: "make check" failed at geos_unit on mingw
------------------------+---------------------------------------------------
 Reporter:  sanak       |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.2.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:  mingw                     
------------------------+---------------------------------------------------
 "make check" failed(crushed) at geos_unit on mingw as following
 versions.[[BR]]
 - svn-trunk(r2610)[[BR]]
 - 3.1.1(tar.bz2)[[BR]]
 - 3.0.4(tar.bz2)[[BR]]

 After remove "-O2" option from CXXFLAGS in tests/unit/Makefile,
 and remove all object files(*.o) in tests/unit folder, then execute "make
 check" again, geos_unit can execute normally, and all tests passed.

 Regards,

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/276>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geosanak at gmail.com  Sun Jul 12 09:01:23 2009
From: geosanak at gmail.com (Sanak)
Date: Sun Jul 12 09:01:26 2009
Subject: [geos-devel] Re: Computational Geometry Problem
In-Reply-To: <5f9be0a0906290854g446590adn4a5605cfdb6377d5@mail.gmail.com>
References: <23ab5f0a0906290603l462d1439yade01474605a63d5@mail.gmail.com>
	<5f9be0a0906290854g446590adn4a5605cfdb6377d5@mail.gmail.com>
Message-ID: <5f9be0a0907120601x5434a3eaub106bb8d9a05cb8f@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: TestIncircleOfPolygon.cpp
Type: application/octet-stream
Size: 7351 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20090712/45157e2b/TestIncircleOfPolygon.obj
From mateusz at loskot.net  Sun Jul 12 17:56:24 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun Jul 12 17:56:29 2009
Subject: [geos-devel] geos::geom::triangle
In-Reply-To: <23ab5f0a0907011600n12de36fdkbfb8ab4eea2e472@mail.gmail.com>
References: <23ab5f0a0907011600n12de36fdkbfb8ab4eea2e472@mail.gmail.com>
Message-ID: <4A5A5C08.30603@loskot.net>

Jo wrote:
> Hi,
> Anybody knows what happened to the geos ::geometry::Triangle class?
> Its present in the headers of my source code, but not in the installed
> headers (actually, I think is commented in the geometry header)
>
> Im usin geos 3.0.3

This header is intentionally excluded from the installation
see lines 51-52

http://trac.osgeo.org/geos/browser/tags/3.0.3/source/headers/geos/geom/Makefile.am

Though, I don't know why, probably incomplete implementation.

Best regards
-- 
Mateusz Loskot, http://mateusz.loskot.net
Charter Member of OSGeo, http://osgeo.org
From schuyler at nocat.net  Mon Jul 13 01:55:51 2009
From: schuyler at nocat.net (Schuyler Erle)
Date: Mon Jul 13 01:55:56 2009
Subject: [geos-devel] Adding STRtree and PreparedGeometry support to SWIG
Message-ID: <1247464551.6323.53.camel@goldman>

Howdy, folks. I've created tickets in GEOS Trac for three patches I
created to implement STRtree and PreparedGeometry in the SWIG bindings,
with the gracious financial support of FortiusOne's GeoCommons.

The first patch adds an iterate() method to AbstractSTRTree to permit
iterating (via the visitor pattern) over all items that have been
inserted into the tree, regardless of bounds. Currently, there is no
public method for accessing inserted items in an STRtree without having
to first build the tree (thus preventing insertion of further items). I
implemented this method in order to be able to store Ruby objects in the
the STRtree, thanks to Ruby's mark-and-sweep garbage collector.

  http://trac.osgeo.org/geos/ticket/277

The second patch adds the STRtree class to the C API. The ItemVisitor
class is subclassed to allow calling GEOSSTRtree_query() from C with a
callback function pointer and a (void *) accumulator.

  http://trac.osgeo.org/geos/ticket/278

The third patch adds STRtree and PreparedGeometry support to the SWIG
bindings. Also included are some niceties for the Ruby bindings, to
handle the aforementioned GC marking, and to permit Ruby code blocks to
be wrapped as ItemVisitor callbacks.

  http://trac.osgeo.org/geos/ticket/279

It took me quite a bit of time and effort to get my head around the way
GEOS is designed in order to get these patches implemented, so I'm keen
to do what's needed to get them into SVN. I welcome any feedback anyone
has to offer. Thanks very much!

SDE


From geos-trac at osgeo.org  Mon Jul 13 11:25:50 2009
From: geos-trac at osgeo.org (GEOS)
Date: Mon Jul 13 11:25:52 2009
Subject: [geos-devel] Re: [GEOS] #276: "make check" failed at geos_unit on
	mingw
In-Reply-To: <045.2a7367ebb36cc080bf31d34c4ead0fb6@osgeo.org>
References: <045.2a7367ebb36cc080bf31d34c4ead0fb6@osgeo.org>
Message-ID: <054.4fec17ea41a922af59ee10392222ceb2@osgeo.org>

#276: "make check" failed at geos_unit on mingw
------------------------+---------------------------------------------------
 Reporter:  sanak       |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.2.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:  mingw       |  
------------------------+---------------------------------------------------
Comment (by pramsey):

 I'm not sure how to address this, the flags are inherited from the lower
 level Makefile. You could compile the whole suite w/o optimization or just
 not compile w/ 'check'. Do you have a patch?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/276#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Mon Jul 13 12:37:07 2009
From: geos-trac at osgeo.org (GEOS)
Date: Mon Jul 13 12:37:08 2009
Subject: [geos-devel] Re: [GEOS] #275: Topology Exception on valid geometries
In-Reply-To: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
References: <044.2426c406e8b2c646d38466322d608a42@osgeo.org>
Message-ID: <053.4b2dc11c67b6ecd4078e39ac26e10530@osgeo.org>

#275: Topology Exception on valid geometries
------------------------+---------------------------------------------------
 Reporter:  yabo        |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.1.1                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:              |  
------------------------+---------------------------------------------------
Comment (by pramsey):

 Platform difference, perhaps?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/275#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Tue Jul 14 08:07:48 2009
From: geos-trac at osgeo.org (GEOS)
Date: Tue Jul 14 08:07:50 2009
Subject: [geos-devel] Re: [GEOS] #276: "make check" failed at geos_unit on
	mingw
In-Reply-To: <045.2a7367ebb36cc080bf31d34c4ead0fb6@osgeo.org>
References: <045.2a7367ebb36cc080bf31d34c4ead0fb6@osgeo.org>
Message-ID: <054.11407fafa607240ad03ce994c2fc420b@osgeo.org>

#276: "make check" failed at geos_unit on mingw
------------------------+---------------------------------------------------
 Reporter:  sanak       |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  new                       
 Priority:  major       |    Milestone:  3.2.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:                            
 Keywords:  mingw       |  
------------------------+---------------------------------------------------
Comment (by sanak):

 pramsey,

 > You could compile the whole suite w/o optimization
 I had build whole suite without optimization(./configure CXXFLAGS="-g" &&
 make && make check), but XMLTester crushed at heisenbugs.xml and stmlf-
 cases-20070119.xml this time.

 > or just not compile w/ 'check'.
 The compilation seems to be no problem, because geos_unit.exe was created.
 The crush occurred when shell script(tests/unit/testrunner) execute
 geos_unit(.exe).

 > Do you have a patch?
 Yes, please see the attached file(geos_unit-mingw.patch).

 Regards,

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/276#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From dfuhry at acm.org  Tue Jul 14 19:27:05 2009
From: dfuhry at acm.org (David Fuhry)
Date: Tue Jul 14 19:32:50 2009
Subject: [geos-devel] Re: [postgis-devel] st_intersect crasher
In-Reply-To: <4A5C4DC2.2050602@siriusit.co.uk>
References: <4A5BC26E.8000306@acm.org> <4A5C4DC2.2050602@siriusit.co.uk>
Message-ID: <4A5D1449.3010703@acm.org>

Mark,

    Thanks for the coverage.  After checking, I'm pretty sure now that 
the GEOS 3.1.1 used below is the release version (not from svn).

    I'm willing to try geos svn then bisect, but automake is failing on 
my Debian system:

~/geos$ ./autogen.sh
* Running /usr/bin/libtoolize (1.5.22)
\tOPTIONS = --force --copy
You should add the contents of `/usr/share/aclocal/libtool.m4' to 
`aclocal.m4'.
* Running /usr/bin/aclocal (1.4-p6)
* Running /usr/bin/autoheader (2.61)
* Running /usr/bin/automake (1.4-p6)
\tOPTIONS = --add-missing --copy
automake: configure.in: installing `./install-sh'
automake: configure.in: installing `./mkinstalldirs'
automake: configure.in: installing `./missing'
configure.in: 40: required file `./[source/headers/config.h].in' not found
configure.in: 40: required file `./[source/headers/stamp-h1.in' not found
configure.in: 40: required file `./[source/headers/geos/platform.h].in' 
not found
configure.in: 40: required file `./[source/headers/geos/stamp-h2.in' not 
found
capi/Makefile.am:10: invalid variable `nodist_capi_HEADERS'
source/operation/buffer/Makefile.am:7: variable `NULL' not defined
automake: source/operation/overlay/Makefile.am: not supported: source 
file `snap/GeometrySnapper.cpp' is in subdirectory
...
automake: tests/xmltester/Makefile.am: not supported: source file 
`markup/MarkupSTL.h' is in subdirectory

   Something went wrong, giving up!

-Dave


Mark Cave-Ayland wrote:
> David Fuhry wrote:
> 
>> The attached SELECT ST_Intersect(..., ...); query crashes 
>> POSTGIS="1.3.5" GEOS="3.1.1-CAPI-1.6.0" PROJ="Rel. 4.6.1, 21 August 
>> 2008" USE_STATS, on Linux.  That GEOS build might be from svn.
>>
>> It does not crash POSTGIS="1.3.3" GEOS="3.0.0-CAPI-1.4.1" PROJ="Rel. 
>> 4.6.0, 21 Dec 2007" USE_STATS.  (Or POSTGIS="1.3.3" 
>> GEOS="3.0.0-CAPI-1.4.1" PROJ="Rel. 4.6.1, 21 August 2008" USE_STATS).
>>
>> It's between two POLYGONs.  They both pass isvalid().  If the order of 
>> the two arguments is reversed (putting small geom before large geom), 
>> it succeeds.
>>
>> -Dave
> 
> Hmmm works for me on 1.3.7SVN and 1.4 with both GEOS 3.0.0 and GEOS 3.1.1:
> 
> postgis13=# select 
> st_astext(st_intersection
16 
> 

34 
> 
geometry, 
> '0103000020C90E00000100000005000000BA3EBFC9C15061C13B0DA5F73665534143ABD512C45061C156150CF836655341FF580514C45061C1AABB0D094A655341D183E9CAC15061C10768A3084A655341BA3EBFC9C15061C13B0DA5F736655341'::geometry)); 
> 
>         st_astext
> --------------------------
>  GEOMETRYCOLLECTION EMPTY
> (1 row)
> 
> You might like to try updating your GEOS SVN snapshot and trying again. 
> If it still fails, it would be handy if you could do a bisection on GEOS 
> SVN to find out where the failure was introduced.
> 
> 
> ATB,
> 
> Mark.
> 
From billy.c at gmx.de  Fri Jul 17 04:03:10 2009
From: billy.c at gmx.de (Stefan Mueller)
Date: Fri Jul 17 04:03:17 2009
Subject: [geos-devel] geos svn MSVC dynamic linking
Message-ID: <20090717080310.84480@gmx.net>

Hello all,

sorry for the possibly dumb question, being a newbie in geos...

I have compiled geos svn build successfully using MSVC 2008 Professional, and get three files, the static library geos(d).lib and the import lib geos(d)_c_i.lib and their respective DLLs geos(d).dll

Trying out the examples with static linking works all fine but if I try to link against the import library (e.g. geosd_c_i.lib) I get unresolved references.

Being rather new in the world of MSVC, could be that I forgot to make some settings in the IDE, but I just thought I have to specify the import lib to get dynamic linking.

So are ther any problems with geos import lib 

Thanks for any help/hints,

Stefan

-- 
Neu: GMX Doppel-FLAT mit Internet-Flatrate + Telefon-Flatrate
f?r nur 19,99 Euro/mtl.!* http://portal.gmx.net/de/go/dsl02
From geosanak at gmail.com  Fri Jul 17 08:05:45 2009
From: geosanak at gmail.com (Sanak Goe)
Date: Fri Jul 17 08:05:47 2009
Subject: [geos-devel] geos svn MSVC dynamic linking
In-Reply-To: <20090717080310.84480@gmx.net>
References: <20090717080310.84480@gmx.net>
Message-ID: <5f9be0a0907170505qd249565q213f8b7243d185e5@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: tempfix-exportdll-msvc90.patch
Type: application/octet-stream
Size: 3102 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20090717/6813b174/tempfix-exportdll-msvc90.obj
From dfuhry at acm.org  Fri Jul 17 16:57:01 2009
From: dfuhry at acm.org (David Fuhry)
Date: Fri Jul 17 16:57:53 2009
Subject: [geos-devel] mapserver crash on exit, with svn head geos
Message-ID: <4A60E59D.407@acm.org>

With GEOS from svn, mapserver crashes on calling exit(), as GEOS 
destroys the static string defined in GEOS' WKBReader.cpp:

string WKBReader::BAD_GEOM_TYPE_MSG = "bad geometry type encountered in ";

It generally results in a corrupt image, as some glibc error messages 
(the usual double-free stuff, I think; forgot to capture) are dumped in 
the middle of the image output.  I'm not sure of the ideal fix. 
Inlining the few uses of BAD_GEOM_TYPE_MSG with the literal c-string 
text works.

#0  0xb7f8a410 in ?? ()
#1  0xbfad8c5c in ?? ()
#2  0x00000006 in ?? ()
#3  0xb6656d68 in abort () from /lib/i686/cmov/libc.so.6
#4  0xb668cabd in __fsetlocking () from /lib/i686/cmov/libc.so.6
#5  0xb66971d4 in malloc_usable_size () from /lib/i686/cmov/libc.so.6
#6  0xb6699186 in free () from /lib/i686/cmov/libc.so.6
#7  0xb683ee91 in operator delete () from /usr/lib/libstdc++.so.6
#8  0xb681ac7d in std::string::_Rep::_M_destroy () from
/usr/lib/libstdc++.so.6
#9  0xb681cb21 in std::basic_string<char, std::char_traits<char>,
std::allocator<char> >::~basic_string () from /usr/lib/libstdc++.so.6
#10 0xb61ee80c in __tcf_1 () at WKBReader.cpp:50
#11 0xb6658c21 in __cxa_finalize () from /lib/i686/cmov/libc.so.6
#12 0xb6162193 in __do_global_dtors_aux () from
/usr/local/lib/libgeos-3.2.0.so
#13 0xb62684ac in _fini () from /usr/local/lib/libgeos-3.2.0.so
#14 0xb7f99a23 in _dl_rtld_di_serinfo () from /lib/ld-linux.so.2
#15 0xb6658889 in exit () from /lib/i686/cmov/libc.so.6
#16 0x0805b795 in main (argc=2, argv=0xbfad9cb4) at mapserv.c:1877

-Dave

From doublebyte at gmail.com  Sat Jul 18 20:33:22 2009
From: doublebyte at gmail.com (Jo)
Date: Sat Jul 18 20:41:17 2009
Subject: [geos-devel] Re: Computational Geometry Problem
Message-ID: <23ab5f0a0907181733x4f1bd457x57cec7a550e7ce5f@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
POLYGON ((109593.173002519004513 204057.986181512009352,109602.716397355005029 204065.541369090002263,109653.272232817005715 204087.522167116985656,109687.10867234399484 204058.519504666008288,109726.63273517700145 203984.411886854009936,109741.45425874000648 203910.304269042011583,109741.45425874000648 203855.958682646014495,109751.335274448007112 203806.553604104992701,109780.978321572998539 203722.564970584993716,109805.680860843000119 203663.278876335010864,109840.264415822006413 203623.754813501989702,109886.606630552007118 203604.873887491005007,109881.330832341001951 203492.066371975000948,109884.56599162099883 203450.009301332000177,109881.330832341001951 203398.24675284899422,109884.56599162099883 203352.954522926011123,109897.506628742004978 203314.132611564011313,109910.447265862996574 203288.251337321999017,109928.74214260300505 203265.382741397013888,109802.816679091993137 203098.82380868200562,109772.893545970000559 203053.939108999009477,109675.643363323004451 203009.0544093149947,109585.873963956997613 202956.688926352013368,109361.450465540998266 202754.707777778006857,109279.161849455995252 202657.457595131010748,109256.719499614002416 202627.534462009003619,109211.834799931006273 202582.649762326007476,109159.469316967006307 202560.207412483985536,109092.142267443006858 202537.765062641992699,109009.853651356999762 202507.84192951998557,108942.526601831996231 202485.399579679011367,108912.603468710003654 202470.43801311799325,108785.430152941000415 202470.43801311799325,108710.622320135997143 202462.957229836989427,108658.256837171997176 202447.995663276000414,108628.333704050004599 202403.110963593004271,108628.333704050004599 202358.226263910008129,108598.410570927997469 202238.53373142099008,108561.006654525001068 202171.206681896990631,108516.121954842004925 202148.764332054997794,108426.352555475998088 202133.802765494008781,108407.712379735996365 202135.873896131990477,108316.953292947000591 202124.063327988988021,108295.732071400998393 202148.316152613988379,108264.764998971004388 202183.70709253300447,108190.210293291005655 202265.717268781008897,108082.105970054995851 202358.910650881007314,108003.823529090994271 202366.366121449013008,107921.813352843004395 202306.722356904996559,107828.619970743005979 202306.722356904996559,107791.342617903006612 202340.27197446100763,107780.159412050998071 202396.18800372100668,107806.253559039003449 202470.742709401005413,107847.1953125 202514.5625,107865.196725301997503 202554.94723263499327,107878.639516151000862 202585.10506081598578,107893.978032472994528 202591.240467344992794,107932.663719869000488 202591.240467344992794,107975.217976004001684 202591.240467344992794,108002.297957180999219 202587.371898604993476,108033.246507097996073 202583.503329864994157,108079.669331972007058 202571.897623647004366,108114.486450627999147 202568.029054907005047,108191.857825419006986 202568.029054907005047,108230.543512814998394 202571.897623647004366,108273.09776894999959 202571.897623647004366,108307.914887606006232 202575.766192386014154,108340.066992242005654 202575.766192386014154,108391.025421566999285 202549.101897971995641,108423.971949793005479 202556.423348688986152,108462.657637188996887 202564.160486167995259,108493.60618710500421 202564.160486167995259,108524.554737022001063 202579.634761126013473,108532.291874500995618 202622.189017261000117,108524.554737022001063 202653.137567177996971,108505.211893323998083 202680.217548354004975,108489.737618365994422 202699.560392051993404,108470.394774668005994 202726.640373228990939,108451.051930970003013 202749.851785667007789,108427.840518533004797 202792.406041801994434,108408.497674835001817 202823.354591718001757,108393.023399876998155 202862.040279114007717,108396.891968615993392 202892.988829029985936,108416.234812313996372 202916.200241468002787,108431.709087272000033 202935.543085165001685,108474.26334340700123 202954.885928862990113,108512.390782667003805 202957.062040857010288,108554.5 202938.25,108566.518587382000987 202938.232427131006261,108626.355321519004065 202910.615472914010752,108671.088144926994573 202903.160002346005058,108700.910027199002798 202925.526414049993036,108719.548703619002481 202962.803766889992403,108730.73190947099647 203011.264325581985759,108756.826056459001848 203029.903002002014546,108786.64793873099552 203052.269413706002524,108786.64793873099552 203108.185442966001574,108764.28152702699299 203171.556942794006318,108747.906016626002383 203198.849460127996281,108719.548703619002481 203246.111648474005051,108696.303623333005817 203266.622013432002859,108691.307749129002332 203280.283291792002274,108637.538527370998054 203354.215971709985752,108567.631948555994313 203414.903538062004372,108590.929787646993645 203465.382189427007688,108605.89135420799721 203502.786105829989538,108665.737620453001 203600.036288476985646,108695.660753574993578 203629.959421598992776,108740.545453258004272 203652.401771439996082,108800.39171950200398 203659.882554720999906,108879.012228894003783 203666.434263836999889,108981.112235374006559 203660.519654395990074,109031.915796554007102 203660.519654395990074,109061.551207241995144 203677.454174788988894,109078.485727634993964 203711.323215576005168,109091.186617929997738 203770.594036952010356,109082.719357733003562 203804.463077738997526,109044.616686848996324 203838.332118524995167,108996.900754520000191 203878.707138188008685,108987.411301515006926 203899.267619697988266,108994.892084795996197 203974.075452502991538,108994.892084795996197 204048.883285307994811,108957.488168392999796 204108.72955155200907,108927.565035271007218 204168.57581779701286,108897.641902149000089 204235.902867321012309,108875.199552307007252 204303.229916846001288,108875.199552307007252 204333.153049968008418,108920.084251990003395 204407.96088277301169,108969.842976801999612 204443.502829067991115,109006.0625 204386.28125,109061.914096309003071 204327.03974935298902,109106.336315720996936 204238.19531052801176,109126.733874751997064 204182.102023193991045,109149.892129052997916 204182.102023193991045,109170.951968380002654 204182.102023193991045,109199.031754149997141 204184.442005341988988,109236.471468510004343 204182.102023193991045,109276.251165017994936 204175.082076752005378,109346.450629443002981 204156.362219572009053,109379.210379508003825 204135.302380243985681,109409.630147425006726 204093.182701588986674,109442.389897489993018 204041.703094344004057,109475.149647554993862 203987.883504952013027,109483.853992221993394 203971.44196502599516,109593.173002519004513 204057.986181512009352))
-------------- next part --------------
POLYGON ((124329.47971483800211 218856.725472835008986,124359.682529993995558 218849.755592414992861,124382.915464728997904 218835.815831573010655,124399.178519043998676 218821.876070731988875,124417.764866832003463 218796.319842522992985,124420.088160305997008 218775.410201260994654,124413.118279885005904 218759.147146947012516,124401.501812518006773 218740.560799158003647,124392.208638622993021 218726.621038317010971,124382.915464728997904 218710.357984002010198,124371.29899736099469 218691.77163621399086,124366.652410413997131 218682.478462319995742,124362.005823466999573 218659.245527583989315,124364.329116940993117 218612.779658112995094,124364.329116940993117 218591.870016850996763,124359.682529993995558 218570.960375589987962,124345.742769153002882 218550.05073432798963,124329.47971483800211 218526.817799592012307,124320.186540944006993 218512.878038750990527,124313.216660523001337 218503.584864856995409,124303.92348662900622 218489.645104016002733,124299.276899681994109 218478.028636647999519,124294.630312734996551 218461.765582332998747,124287.660432314005448 218450.149114964995533,124285.337138839997351 218438.532647598010954,124285.337138839997351 218422.269593283010181,124313.216660523001337 218394.390071600006195,124364.329116940993117 218368.833843391010305,124418.898040443993523 218347.037283882003976,124377.776448178003193 218161.990118685993366,124352.752074297997751 218049.380436225997983,124360.296478003001539 217978.450431853998452,124350.928915530006634 217880.091025878005894,124343.280103968005278 217799.778504476009402,124304.61254471000575 217708.73458039801335,124261.821880426999996 217715.584448768000584,124206.387937619001605 217736.372177320008632,124175.206344790000003 217771.018391574994894,124164.812480513995979 217788.341498702997342,124144.024751960998401 217798.735362979001366,124116.307780557006481 217795.270741554006236,124088.590809153000009 217784.876877277012682,124064.338459174992749 217777.947634426003788,124033.156866345001617 217771.018391574994894,124012.36913779200404 217764.089148723986,123956.935194984995178 217767.553770149999764,123942.651022008998552 217775.724600883986568,123894.229094577996875 217781.104815043014241,123856.567595464002807 217797.24545752000995,123797.385239715003991 217824.146528315002797,123788.131066151006962 217829.699032453994732,123766.381016582992743 217899.209384318004595,123734.802779669000302 217946.821614368003793,123722.744253580996883 218045.31888588500442,123693.283657494001091 218100.031421474996023,123688.122904942996684 218138.737065610999707,123684.866344326001126 218163.16127023199806,123686.970672618001117 218228.39544728200417,123678.500085317005869 218282.302211595000699,123681.586770876005176 218323.972466639999766,123692.564456684995093 218380.752811176993418,123727.84375 218445.3125,123777.875 218528.5,123827.7890625 218553.421875,123877.973184556001797 218553.355284690012923,123969.09375 218553.234375,124043.714617592006107 218552.374027801008197,124073.917432747999555 218573.283669063006528,124159.879291268996894 218661.568821057997411,124329.47971483800211 218856.725472835008986))
POLYGON ((109593.173002519004513 204057.986181512009352,109602.716397355005029 204065.541369090002263,109653.272232817005715 204087.522167116985656,109687.10867234399484 204058.519504666008288,109726.63273517700145 203984.411886854009936,109741.45425874000648 203910.304269042011583,109741.45425874000648 203855.958682646014495,109751.335274448007112 203806.553604104992701,109780.978321572998539 203722.564970584993716,109805.680860843000119 203663.278876335010864,109840.264415822006413 203623.754813501989702,109886.606630552007118 203604.873887491005007,109881.330832341001951 203492.066371975000948,109884.56599162099883 203450.009301332000177,109881.330832341001951 203398.24675284899422,109884.56599162099883 203352.954522926011123,109897.506628742004978 203314.132611564011313,109910.447265862996574 203288.251337321999017,109928.74214260300505 203265.382741397013888,109802.816679091993137 203098.82380868200562,109772.893545970000559 203053.939108999009477,109675.643363323004451 203009.0544093149947,109585.873963956997613 202956.688926352013368,109361.450465540998266 202754.707777778006857,109279.161849455995252 202657.457595131010748,109256.719499614002416 202627.534462009003619,109211.834799931006273 202582.649762326007476,109159.469316967006307 202560.207412483985536,109092.142267443006858 202537.765062641992699,109009.853651356999762 202507.84192951998557,108942.526601831996231 202485.399579679011367,108912.603468710003654 202470.43801311799325,108785.430152941000415 202470.43801311799325,108710.622320135997143 202462.957229836989427,108658.256837171997176 202447.995663276000414,108628.333704050004599 202403.110963593004271,108628.333704050004599 202358.226263910008129,108598.410570927997469 202238.53373142099008,108561.006654525001068 202171.206681896990631,108516.121954842004925 202148.764332054997794,108426.352555475998088 202133.802765494008781,108407.712379735996365 202135.873896131990477,108316.953292947000591 202124.063327988988021,108295.732071400998393 202148.316152613988379,108264.764998971004388 202183.70709253300447,108190.210293291005655 202265.717268781008897,108082.105970054995851 202358.910650881007314,108003.823529090994271 202366.366121449013008,107921.813352843004395 202306.722356904996559,107828.619970743005979 202306.722356904996559,107791.342617903006612 202340.27197446100763,107780.159412050998071 202396.18800372100668,107806.253559039003449 202470.742709401005413,107847.1953125 202514.5625,107865.196725301997503 202554.94723263499327,107878.639516151000862 202585.10506081598578,107893.978032472994528 202591.240467344992794,107932.663719869000488 202591.240467344992794,107975.217976004001684 202591.240467344992794,108002.297957180999219 202587.371898604993476,108033.246507097996073 202583.503329864994157,108079.669331972007058 202571.897623647004366,108114.486450627999147 202568.029054907005047,108191.857825419006986 202568.029054907005047,108230.543512814998394 202571.897623647004366,108273.09776894999959 202571.897623647004366,108307.914887606006232 202575.766192386014154,108340.066992242005654 202575.766192386014154,108391.025421566999285 202549.101897971995641,108423.971949793005479 202556.423348688986152,108462.657637188996887 202564.160486167995259,108493.60618710500421 202564.160486167995259,108524.554737022001063 202579.634761126013473,108532.291874500995618 202622.189017261000117,108524.554737022001063 202653.137567177996971,108505.211893323998083 202680.217548354004975,108489.737618365994422 202699.560392051993404,108470.394774668005994 202726.640373228990939,108451.051930970003013 202749.851785667007789,108427.840518533004797 202792.406041801994434,108408.497674835001817 202823.354591718001757,108393.023399876998155 202862.040279114007717,108396.891968615993392 202892.988829029985936,108416.234812313996372 202916.200241468002787,108431.709087272000033 202935.543085165001685,108474.26334340700123 202954.885928862990113,108512.390782667003805 202957.062040857010288,108554.5 202938.25,108566.518587382000987 202938.232427131006261,108626.355321519004065 202910.615472914010752,108671.088144926994573 202903.160002346005058,108700.910027199002798 202925.526414049993036,108719.548703619002481 202962.803766889992403,108730.73190947099647 203011.264325581985759,108756.826056459001848 203029.903002002014546,108786.64793873099552 203052.269413706002524,108786.64793873099552 203108.185442966001574,108764.28152702699299 203171.556942794006318,108747.906016626002383 203198.849460127996281,108719.548703619002481 203246.111648474005051,108696.303623333005817 203266.622013432002859,108691.307749129002332 203280.283291792002274,108637.538527370998054 203354.215971709985752,108567.631948555994313 203414.903538062004372,108590.929787646993645 203465.382189427007688,108605.89135420799721 203502.786105829989538,108665.737620453001 203600.036288476985646,108695.660753574993578 203629.959421598992776,108740.545453258004272 203652.401771439996082,108800.39171950200398 203659.882554720999906,108879.012228894003783 203666.434263836999889,108981.112235374006559 203660.519654395990074,109031.915796554007102 203660.519654395990074,109061.551207241995144 203677.454174788988894,109078.485727634993964 203711.323215576005168,109091.186617929997738 203770.594036952010356,109082.719357733003562 203804.463077738997526,109044.616686848996324 203838.332118524995167,108996.900754520000191 203878.707138188008685,108987.411301515006926 203899.267619697988266,108994.892084795996197 203974.075452502991538,108994.892084795996197 204048.883285307994811,108957.488168392999796 204108.72955155200907,108927.565035271007218 204168.57581779701286,108897.641902149000089 204235.902867321012309,108875.199552307007252 204303.229916846001288,108875.199552307007252 204333.153049968008418,108920.084251990003395 204407.96088277301169,108969.842976801999612 204443.502829067991115,109006.0625 204386.28125,109061.914096309003071 204327.03974935298902,109106.336315720996936 204238.19531052801176,109126.733874751997064 204182.102023193991045,109149.892129052997916 204182.102023193991045,109170.951968380002654 204182.102023193991045,109199.031754149997141 204184.442005341988988,109236.471468510004343 204182.102023193991045,109276.251165017994936 204175.082076752005378,109346.450629443002981 204156.362219572009053,109379.210379508003825 204135.302380243985681,109409.630147425006726 204093.182701588986674,109442.389897489993018 204041.703094344004057,109475.149647554993862 203987.883504952013027,109483.853992221993394 203971.44196502599516,109593.173002519004513 204057.986181512009352))
POLYGON ((96443.465480935905362 204259.395140887994785,96426.545287432803889 204237.058901240990963,96417.76189763880393 204213.708207260991912,96410.883484735197271 204162.469445427006576,96471.296875 204136.453125,96545.9375 204044.78125,96537.4140625 203936.546875,96462.5078125 203878.375,96287.9140625 203861.9375,96246.296875 203828.703125,96221.265625 203778.78125,96221.078125 203678.875,96303.890625 203520.578125,96295.3515625 203395.71875,96233.907490693003638 203254.843048443988664,96211.875 203204.328125,96219.953125 203079.4375,96165.947331923001911 202887.380786088004243,96165.947331923001911 202790.063111322990153,96152.676739909496973 202723.710151255014353,96143.898142071499024 202692.935093067993876,96130.623180501104798 202670.805309407005552,96126.186086226793122 202635.379182306001894,96108.570200062502408 202609.05449775600573,96062.418070327694295 202550.839960337005323,96050.759537695004838 202539.346150219003903,96046.254488297694479 202524.220242356008384,96049.731935860298108 202506.382947103003971,96062.570799682594952 202497.844803965010215,96083.33047549870389 202490.867669277999084,96126.42313187540276 202481.870037541986676,96146.911175044297124 202471.888738092995482,96192.235914233897347 202454.194615407992387,96210.728450672002509 202423.229900709993672,96215.151981343195075 202387.841655341006117,96215.151981343195075 202352.453409970999928,96215.151981343195075 202317.065164602012374,96205.057803825693554 202279.363005980005255,96195.942328641700442 202229.963030139013426,96182.885491699402337 202190.74764625300304,96143.264493198599666 202151.390099687007023,96107.958127683406929 202151.597916049009655,96028.53735927620437 202147.688808867998887,95918.149526071894797 202148.265954681992298,95878.633922831504606 202155.715720195992617,95868.686149292698246 202157.5859765149944,95848.308170628704829 202178.614995763986371,95744.65252365739434 202207.061072006006725,95677.036219207104295 202234.534203110990347,95685.112401829406735 202270.877024912013439,95689.403390229796059 202305.204932115011616,95689.403390229796059 202343.823827718006214,95689.403390229796059 202369.569758119992912,95702.276355430905824 202421.061618925014045,95719.440309032404912 202468.262491328991018,95728.022285833198112 202524.045340534008574,95723.731297432794236 202566.955224537989125,95685.112401829406735 202601.283131740987301,95646.493506226106547 202614.156096941995202,95649.467969551202259 202630.079142834001686,95655.319560517105856 202706.149825391010381,95672.874333414903958 202776.368916981999064,95725.538652108298265 202852.439599539997289,95778.202970801707124 202887.549145335011417,95825.015698529197834 202910.955509199004155,95901.086381086293841 202928.510282097005984,95971.305472677500802 202951.916645960009191,96000.56342750719341 202981.174600789992837,96012.266609439102467 203051.393692381010624,96006.415018473097007 203209.386648460989818,96012.266609439102467 203279.605740052997135,96006.415018473097007 203338.121649712004,95983.008654609395307 203402.489150337001774,95912.789563018202898 203501.966196758003207,95779.610210982296849 203741.815228894003667,95705.8359375 203729.5,95589.4765625 203729.65625,95539.5546875 203704.75,95489.59375 203654.875,95447.8515625 203563.34375,95389.578125 203505.140625,95323.0078125 203471.921875,95214.953125 203472.0625,95074.03125 203672.0625,95007.640625 203730.4375,94949.5078125 203755.484375,94816.5078125 203747.34375,94616.689889489600318 203660.946143169014249,94566.9453125 203639.4375,94442.2578125 203631.28125,94432.736031159001868 203533.343670622009085,94413.139512295107124 203445.159335734002525,94379.825430226293975 203396.168038573989179,94304.010185215403908 203321.730370631994447,94297.70598820289888 203315.005893817986362,94242.723160113295307 203256.357543855992844,94222.712221728696022 203266.359167435992276,94201.31082012229308 203283.482938984001521,94192.791905874095391 203304.881578805012396,94171.534343852297752 203330.543729883997003,94150.335206147006829 203351.914814676012611,94133.417230534003465 203369.004768624989083,94116.603059938002843 203394.63984835500014,94112.612696682394017 203420.278642482997384,94117.308840403406066 203458.740630429994781,94125.312299908502609 203468.01953837700421,94143.091101625395822 203488.69402376699145,94189.831735428902903 203510.160012123989873,94223.789104490802856 203535.896782916999655,94244.999716236401582 203561.617148232006002,94253.407812374003697 203600.174227584007895,94244.676348249500734 203672.983866366004804,94210.653134009393398 203715.758562264993088,94150.914631136096432 203754.256337889994029,94090.66795423309668 203767.151082121010404,94064.771884632093133 203767.175351165002212,94047.612676399905467 203767.191432277002605,94017.420230220493977 203771.510140252008568,93978.59794975949626 203784.402975142991636,93935.581193947204156 203805.844146560004447,93897.023933854405186 203822.974060906009981,93850.01272424790659 203827.241655685997102,93803.041988751196186 203831.502485781995347,93740.436038965504849 203842.887527696992038,93711.194055846804986 203959.855460171995219,93711.194055846804986 204087.024510368995834,93711.194055846804986 204144.828624095011037,93711.194055846804986 204214.193560565996449,93711.194055846804986 204223.172272557014367,93711.194055846804986 204271.997674292011652,93716.319587731093634 204273.784646877000341,93738.315331435893313 204314.161254583013942,93753.795304933693842 204339.547449653007789,93766.104611254297197 204341.654946069989819,93789.256560823705513 204341.658034768013749,93795.963046725897584 204341.048952276003547,93812.408206958003575 204339.555404190992704,93833.453767775194137 204331.133731359994272,93842.857693808997283 204328.445111554989126,93896.520306266000262 204298.730474001000402,93956.593616989994189 204265.46796342000016,94085.092419949796749 204202.635610844998155,94235.033447475507273 204153.848473746009404,94256.80098231699958 204147.62763271300355,94268.515625 204064.4375,94301.6328125 203997.78125,94426.265625 203972.65625,94517.703125 203972.53125,94584.2421875 203997.40625,94800.3125 203980.46875,94941.6953125 204021.90625,95058.0625 204021.765625,95124.5234375 204005.03125,95265.671875 203921.578125,95340.4609375 203913.15625,95498.6015625 204029.5,95541.178813741105841 204108.517810871009715,95570.682549807694159 204206.863597760006087,95585.43441784089373 204300.292095304001123,95611.81973745340656 204420.585241786990082,95685.831716868793592 204419.388115942012519,95725.713275454996619 204419.388115942012519,95776.989565065901843 204396.598653892986476,95816.87112365210487 204368.111826331005432,95851.05531672599318 204311.138171208003769,95868.147413262995542 204276.953978133999044,95913.726337361600599 204208.585591985989595,95942.213164923101431 204180.09876442499808,95965.002626972403959 204157.309302376001142,95987.792089021706488 204145.914571350993356,96084.647302731100353 204134.51984032598557,96124.528861317405244 204140.21720583899878,96147.31832336660591 204174.401398913003504,96215.686709514498943 204231.375054036005167,96289.744543380205869 204276.956000073987525,96357.775156774005154 204294.150782276992686,96403.54823514999589 204282.698341543989955,96443.465480935905362 204259.395140887994785))
POLYGON ((97379.69609377119923 202979.630588474014075,97379.69609377119923 202939.763166871009162,97370.816763643902959 202891.107467108988203,97366.367063687604968 202842.453155708004488,97384.049490547695314 202811.487339457002236,97432.616724323495873 202793.8076792290085,97472.160665581395733 202767.31036199699156,97533.253110045698122 202727.646648283000104,97606.384051342305611 202661.681929507991299,97631.7369292768999 202626.52463997900486,97635.657394362802734 202573.670482674002415,97622.386802349996287 202498.59961463601212,97578.306151571305236 202427.624426269991091,97563.982906141201966 202384.228687461989466,97502.839807516298606 202401.36737195198657,97450.602510650700424 202405.248863521002932,97406.253823669394478 202413.294693619012833,97369.856472116196528 202421.39302839100128,97341.461777199394419 202445.916436797007918,97329.268617145702592 202470.475953287008451,97304.86639949590608 202486.829125215997919,97280.422709768798086 202490.902257289999397,97227.322537159401691 202515.457330181001453,97190.480924897594377 202548.2272318819887,97169.190794828304206 202573.076554891013075,97145.24896819969581 202594.727774520986713,97105.43719215929741 202638.963081232010154,97078.896008132302086 202674.351326600997709,97061.201885447706445 202687.621918615011964,97043.507762763096252 202687.621918615011964,97008.119517393803108 202687.621918615011964,96994.848925380298169 202683.198387943994021,96968.307741353302845 202656.657203917013248,96968.307741353302845 202630.116019890003372,96968.307741353302845 202599.151305192004656,96968.307741353302845 202572.61012116499478,96968.307741353302845 202541.645406466996064,96963.88421068219759 202462.021854385995539,96959.460680011005024 202435.480670358985662,96955.03714933989977 202408.93948633200489,96946.190087997500086 202391.245363647001795,96925.552543818906997 202360.976965517998906,96887.118953676806996 202369.06824765400961,96862.319734010205138 202383.947779453999829,96825.120904510200489 202393.867467320000287,96795.361840910205501 202398.827311253990047,96768.082699276797939 202398.827311253990047,96745.76340157679806 202391.387545353994938,96725.924025843502022 202366.588325686985627,96693.710606482592993 202320.441324142011581,96678.200441605193191 202293.298535606998485,96651.057653069699882 202266.155747070995858,96627.792405753498315 202235.135417315992527,96600.649617218005005 202204.11508756200783,96573.506828682497144 202165.339675368013559,96519.625359105193638 202196.929849209991517,96464.571056878601667 202241.165155920985853,96438.029872851606342 202272.129870619013673,96411.488688824698329 202298.671054645994445,96389.37103546889557 202325.212238673004322,96380.523974126495887 202342.906361358007416,96367.253382113092812 202365.02401471399935,96362.829851441900246 202395.988729411998065,96362.829851441900246 202422.529913439007942,96371.676912784198066 202462.341689479013439,96375.916032883294974 202497.729934848000994,96388.205011499201646 202533.118180218007183,96405.120090032505686 202564.082894916005898,96426.7908017742011 202586.200548271997832,96453.119579642705503 202595.047609614004614,96490.566428868100047 202603.574835862993496,96543.648796922003385 202621.26895854799659,96579.03704229129653 202634.539550560992211,96605.578226318306406 202647.810142573987832,96618.848818331694929 202669.92779593000887,96623.272349002902047 202705.316041299985955,96632.119410345199867 202736.280755998013774,96632.119410345199867 202758.398409352987073,96694.048839741401025 202864.563145460997475,96729.43708511069417 202908.798452173010446,96804.637106520400266 202935.339636199991219,96947.960314555093646 202997.15845879499102,96992.828125 203011.8125,97059.3515625 203028.375,97273.306340628405451 202984.637165093008662,97379.69609377119923 202979.630588474014075))
POLYGON ((110369.727208244003123 202109.096987663011532,110415.99249505699845 202131.338588604005054,110452.049460088004707 202152.213673621998169,110511.102669172993046 202199.744305325002642,110555.940425306005636 202226.646959003992379,110591.810630211999523 202232.027489739994053,110620.506794137007091 202221.266428269009339,110654.583488798001781 202197.950795079988893,110686.866673212993192 202167.461120908992598,110697.76748490499449 202134.31779342298978,110695.834224439997342 202115.44932379500824,110688.660183458996471 202052.676465210010065,110672.045895691000624 201923.910900841001421,110646.510379936997197 201880.642388036008924,110612.432682764992933 201822.899623383011203,110597.777173782000318 201798.066677607013844,110559.905365714002983 201695.812795823992928,110559.905365714002983 201585.98455242800992,110605.351535395995597 201483.730670643999474,110630.033506861000205 201450.821375358005753,110647.010524269993766 201411.774235315999249,110664.997949170996435 201385.792399347992614,110715.17977879299724 201313.307534338993719,110809.646276861996739 201241.214680550008779,110807.609080444002757 201229.61090067398618,110865.728651569996146 201026.240190756012453,110866.998232223995728 200997.886222798988456,110854.951059397004428 200943.947773880005116,110844.241217468006653 200897.538458852999611,110840.671270157996332 200854.699091135989875,110840.671270157996332 200797.579934181005228,110847.811164778002421 200747.600671844993485,110862.090954016995966 200704.761304128012853,110879.940690564995748 200672.631778340000892,110951.339636760007124 200636.932305243011797,110994.179004477002309 200633.362357932986924,111109.948292257002322 200641.863893230998656,111123.339528140000766 200633.829151701997034,111166.941672500004643 200590.22700734200771,111191.857183562999126 200565.311496278998675,111204.850082824006677 200560.586805638013175,111260.374838985997485 200540.39598521500011,111322.663616644000285 200527.938229683990357,111366.265761004004162 200509.251596387010068,111441.012294193002163 200478.107207558001392,111490.84331631900568 200471.87832979200175,111584.276482804998523 200446.962818728992715,111615.420871634007199 200459.420574260991998,111618.754750174004585 200397.995547950995388,111632.780269737995695 200306.829670781997265,111640.725540886996896 200230.776272207993316,111654.006048176001059 200124.532213894010056,111662.584498812997481 200042.097989002999384,111666.090878703995259 199970.217201235005632,111667.844068649996188 199921.127882759989006,111660.831308866996551 199884.310893902991666,111634.533459683996625 199849.247094991995255,111611.741990391994477 199829.962005590990884,111585.444141208005021 199821.196055862994399,111543.987511389001156 199827.293809841998154,111496.031453984993277 199847.493905045994325,111470.80239930699463 199873.490289578010561,111388.89734465899528 199853.879220155999064,111356.20782830400276 199844.344777885009535,111308.53561695299868 199833.448272434005048,111266.311658327002078 199828.00001970800804,111232.094262402999448 199829.267330667993519,111214.553257431995007 199852.517156974005047,111213.19119425000099 199878.396357421996072,111220.001510157002485 199896.103178780991584,111233.622141971995006 199927.430631955008721,111251.32896333100507 199958.758085128996754,111281.294353322999086 199996.895854209986283,111297.639111501004663 200022.775054658006411,111309.897680134003167 200047.292191924003419,111313.983869678995688 200074.53345555299893,111315.345932860000175 200100.412656000989955,111310.230381108995061 200131.56333892600378,111302.611683005001396 200140.705776649992913,111295.901875112002017 200148.757546122011263,111272.071038003006834 200158.289880966010969,111248.240200893997098 200158.289880966010969,111210.110861520006438 200153.523713544011116,111191.046191832996556 200153.523713544011116,111124.319847927996307 200124.926709013991058,111032.070346679000068 200070.00996090398985,110988.279207629995653 200094.338371487014228,110939.622386464994634 200099.204053603985813,110876.368518949995632 200094.338371487014228,110887.179114473998197 200112.815516183007276,110920.899024181999266 200191.495305501011899,110932.138994084001752 200236.455185111990431,110926.519009133000509 200264.555109868000727,110909.65905427900725 200303.895004527992569,110887.179114473998197 200320.754959382000379,110819.73929505799606 200354.474869089986896,110746.679490691007231 200365.714838991989382,110690.479641177997109 200376.954808895010501,110651.139746518005268 200410.674718602997018,110623.039821761994972 200461.254583164991345,110617.419836810004199 200523.074417628988158,110623.039821761994972 200568.034297239995794,110673.619686324003851 200652.334071508987108,110677.821292916007224 200662.312887167005101,110680.023641220002901 200726.180987986008404,110676.453693910996662 200758.310513773991261,110651.026699641006417 200812.155913402995793,110640.381197891998454 200823.688540297996951,110604.890299189006328 200865.632329674990615,110572.625845821996336 200894.670337704999838,110517.77627509899321 200949.519908427988412,110495.191157741995994 200985.010807131009642,110479.058931059000315 201026.954596508003306,110466.153149712001323 201136.653737954009557,110438.0859375 201229.015625,110446.6015625 201337.234375,110344.314421453003888 201602.105833000008715,110287.013674981993972 201633.079209471005015,110265.860575208993396 201654.23230924399104,110258.809541951995925 201701.239197627990507,110247.057819855996058 201759.997808109008474,110195.350242632994195 201835.208829523005988,110167.146109602006618 201875.164684649993433,110167.146109602006618 201926.872261873009847,110192.999898213995039 201959.777083741995739,110216.954095802997472 201977.918410626007244,110222.731091177993221 201988.233513631013921,110233.0099750340014 201995.575573528010864,110245.597153832000913 202004.566415526991477,110291.329279141995357 202007.832995906006545,110343.594565210005385 202027.432478181988699,110363.194047484998009 202086.23092500801431,110369.727208244003123 202109.096987663011532))
POLYGON ((115970.776603916005115 201219.568979436997324,115948.415507140001864 201211.437671518011484,115877.876667327000177 201215.113361513998825,115770.861078696994809 201234.570741264993558,115673.504226935998304 201252.271987040003296,115605.38008013900253 201252.271987040003296,115568.221454612998059 201264.658195547992364,115555.83524610499444 201369.940967870992608,115580.607663122005761 201679.596180583990645,115580.607663122005761 201784.878952906990889,115586.919505661993753 201831.379849018994719,115648.731809919001535 201840.616891195997596,115884.069771580994711 201828.230682686989894,116001.422393611006555 201782.310091457999079,116026.511169429999427 201772.492744399001822,116038.897377938003046 201691.982389092998346,116026.511169429999427 201462.837531685014255,116010.073922094001318 201342.297717889014166,116007.931856666997191 201326.589238090993604,115985.006392772993422 201243.962903192004887,115970.776603916005115 201219.568979436997324))
POLYGON ((98517.229711620195303 201597.843524243013235,98500.590508182605845 201528.303423192002811,98478.448680703804712 201488.448133730009431,98468.337419422197854 201471.596031594002852,98516.251840334502049 201474.406492373993387,98557.015183074705419 201461.84359671198763,98610.332209236396011 201443.009478722990025,98695.018452723903465 201443.011445915006334,98729.520536303592962 201455.562406898010522,98754.607470718794502 201477.524293372989632,98767.144678276294144 201502.624739994993433,98770.27906639680441 201530.864273893996142,98779.685264336803812 201565.380953930987744,98785.955167396095931 201593.622960754000815,98792.208737969893264 201625.063442117010709,98798.48112619240419 201647.06419227400329,98807.865833855903475 201681.591490964987315,98814.079151654601446 201706.722715504001826,98823.394519565306837 201735.010467757005244,98832.720899762105546 201757.017490892991191,98841.9955039366032 201785.326495837012772,98854.454088786806096 201807.334191939007724,98870.110594349302119 201823.030862001993228,98895.293073446606286 201829.245918158005225,98942.534181592505774 201832.254326708993176,98999.191873311501695 201825.851877206005156,99033.766218002405367 201825.80423142699874,99104.144210250597098 201814.518008176004514,99124.319636261396226 201736.747885538003175,99122.505474449804751 201711.941592315997696,99141.3037583444966 201620.635641970991855,99165.801258116000099 201559.391892541985726,99190.298757887401734 201506.31397637000191,99231.127924173299107 201471.609185026987689,99247.459590687605669 201455.277518513001269,99280.122923716204241 201449.153143570001703,99314.827715059203911 201453.236060199007625,99361.781256287795259 201459.360435142007191,99412.81771414510149 201459.360435142007191,99472.020005259502796 201463.443351769994479,99531.986711309000384 201469.049295456003165,99558.680212357605342 201474.769331394985784,99581.560356113506714 201467.142616809986066,99617.787250393696013 201442.355794408009388,99663.547537905498757 201387.06211366399657,99683.891798950600787 201354.696907219011337,99696.696507354907226 201297.682870413991623,99702.091943024803186 201238.333078044001013,99719.239123384293634 201205.061434551986167,99837.651282128703315 201210.617192092002369,99856.793144177296199 201133.5349045789917,99882.275247354496969 201044.347543459007284,99882.275247354496969 200980.917275145009626,99824.486152769197361 200927.583312781003769,99745.811495629997808 200895.688181509001879,99696.905627678701421 200889.309155254013604,99647.999759727303172 200889.309155254013604,99603.346575945601217 200865.919392320996849,99577.830470927496208 200825.518892708991189,99573.357162895204965 200799.411616111989133,99565.265625 200752.1875,99480.932122314494336 200662.115995802014368,99385.374235400202451 200566.558108888013521,99302.5574000744964 200528.334954121994087,99206.999513160204515 200477.370747768,99124.182677834498463 200445.518118795996998,99041.365842508806963 200413.665489825012628,98964.919532977393828 200407.294964030006668,98913.955326623094152 200413.665489825012628,98831.138491297402652 200420.036015618999954,98780.174284943102975 200407.294964030006668,98741.951130177403684 200400.924438235990237,98703.727975411704392 200400.924438235990237,98684.616398028796539 200420.036015618999954,98652.763769057404716 200458.259170384990284,98627.281665880203946 200509.223376739013474,98614.540614291705424 200553.817057298991131,98594.275308945696452 200604.480320664006285,98571.626018197406665 200622.935298311000224,98552.068272292599431 200630.86704303798615,98539.96058198279934 200635.777379292994738,98529.926012361902394 200633.773593049001647,98474.484423382295063 200617.259077183000045,98427.222740973404143 200585.119586117012659,98419.274888489802834 200571.873165311000776,98411.327036006099661 200555.977460344001884,98406.028467683703639 200540.081755377002992,98401.037026831007097 200510.133110260008834,98404.313263080301112 200477.370747768,98407.278023908293108 200471.441226111986907,98429.795366257400019 200426.406541412987281,98480.759572611699696 200388.183386647986481,98488.25505414759391 200361.949201271985658,98543.145972666199668 200334.503742011991562,98591.819421780499397 200306.110896695987321,98664.829595452101785 200245.269085303007159,98717.55916532590345 200200.651756948005641,98758.120372921199305 200164.146670112007996,98782.457097478400101 200139.809945554996375,98798.68158051649516 200103.30485871899873,98806.793822035600897 200070.855892643012339,98802.73770127609896 200038.406926566996844,98786.513218237902038 199989.733477452013176,98770.288735199806979 199961.340632136008935,98721.61528608550725 199920.779424540000036,98676.997957730694907 199916.723303781007417,98652.661233173494111 199912.667183020996163,98620.21226709720213 199912.667183020996163,98595.875542540103197 199920.779424540000036,98567.482697223400464 199937.003907578997314,98547.202093425701605 199957.284511375997681,98518.809248108998872 199981.621235933009302,98486.460399380899617 200004.265430042985827,98489.364318489300786 200024.592863802012289,98464.802109638505499 200078.629723274003481,98464.262699141996563 200093.193806678988039,98456.011726631099009 200126.197696722985711,98446.110559617896797 200146.000030749011785,98427.958420093797031 200172.403142783994554,98418.057253080696682 200183.954504299006658,98408.156086067494471 200197.156060317007359,98396.60472455220588 200218.608588845003396,98389.500370249093976 200231.29375635299948,98371.598643074597931 200238.965925141994376,98333.319407395203598 200255.371311861992581,98306.025194557703799 200269.018418280989863,98269.112592705001589 200287.474719207006274,98204.73896747980325 200334.291901188989868,98189.019572151999455 200338.221750021009939,98158.245990918396274 200357.159338472003583,98089.639685200498207 200385.102408289007144,98081.517923983104993 200385.283505508996313,97960.390625 200387.984375,97960.53125 200462.90625,97952.702348880004138 200468.807172528991941,97874.982343940704595 200497.440858559013577,97815.760852863502805 200515.508432108006673,97788.264959257794544 200516.404931988014141,97628.1640625 200521.625,97545.140625 200571.6875,97453.8828125 200663.390625,97432.172966100901249 200719.611832947004586,97432.172966100901249 200814.149674026994035,97391.632047611507005 200906.814630575012416,97310.550210632602102 200953.147108848002972,97281.592411711593741 201005.271146905986825,97298.967091064201668 201080.561424101004377,97393.154077968996717 201180.288822000002256,97384.492606533298385 201213.852023813000415,97375.972918158804532 201247.930777311004931,97371.713073971506674 201286.269374997005798,97367.453229784296127 201324.607972681988031,97364.349836419205531 201353.322511200996814,97357.407588963804301 201381.091501023009187,97343.523094052899978 201415.802738300000783,97337.572596233905642 201434.645981393987313,97336.809815142099978 201461.818765625008382,97349.513871174698579 201469.943252592987847,97379.341626658599125 201485.734417261002818,97407.229792953803553 201494.07962061901344,97433.735589097006596 201507.332518690993311,97461.359725811693352 201478.776649344014004,97475.033982932800427 201462.367540798994014,97491.434609434494632 201440.47153929900378,97505.10609183460474 201432.261041699995985,97516.037888276798185 201432.245611541991821,97526.964731954096351 201432.220416394993663,97537.883803492994048 201437.649572066002293,97548.795392309693852 201448.533621701004449,97559.70561598999484 201467.6195666519925,97573.361707977295737 201486.727366033999715,97589.557681029094965 201502.710318421013653,97597.734362054106896 201524.53357453100034,97600.60133329690143 201535.737971330003347,97606.57535659680434 201558.627370881004026,97612.051900806705817 201577.785811322013615,97628.556533691604272 201594.389318625995656,97647.728598830304691 201602.651486807008041,97661.417486119898967 201605.419739005010342,97677.844237103301566 201605.461036202003015,97697.004495247500017 201605.503469821007457,97713.42738492290664 201602.802923312992789,97729.850563829895691 201597.364262980991043,97751.750086228101281 201583.724703571002465,97762.706400898299762 201564.597978879988659,97791.824471388303209 201508.831175463012187,97781.584295108594233 201488.350822904001689,97775.440189340806683 201461.726364575995831,97773.392154084795038 201439.197976761002792,97773.392154084795038 201420.765659458003938,97773.392154084795038 201406.429412666009739,97771.344118828899809 201385.949060106009711,97769.296083572902717 201344.988354987988714,97767.248048316992936 201306.075685124989832,97759.658281083698967 201286.342290317988954,97752.91301846850547 201282.753545754996594,97759.2005225696048 201278.963012697990052,97795.810685377102345 201238.285054022999248,97803.946277112103417 201181.3359118780063,97799.878481244595605 201120.318973865010776,97787.675093642101274 201079.641015189990867,97767.336114304605871 201030.827464780013543,97771.403910172099131 200982.013914370007114,97803.946277112103417 200953.539343298005406,97840.556439919702825 200937.268159828003263,97917.844561402205727 200920.99697635800112,97966.658111812299467 200900.657997019996401,98011.403866354899947 200888.454609417996835,98117.166558910001186 200892.522405285009881,98157.844517585006543 200912.861384622985497,98194.454680392605951 200949.471547430002829,98226.997047332595685 200977.946118502994068,98271.742801875196164 200998.285097840009257,98312.420760550201521 200998.285097840009257,98349.03092335780093 200990.149506104993634,98389.708882032806287 200977.946118502994068,98430.386840707898955 200973.878322634991491,98454.793615912902169 200986.081710238009691,98466.9970035153965 201006.420689574995777,98466.9970035153965 201047.098648249986582,98462.92920764790324 201071.505423455004347,98422.25124897279602 201136.590157335012918,98393.776677900299546 201156.929136672988534,98365.302106827803073 201173.200320142990677,98288.013985345198307 201209.810482950008009,98255.471618405194022 201230.149462288012728,98235.741011640697252 201247.413743206998333,98215.428414689595229 201273.563125437009148,98204.592879323899979 201303.360847692005336,98141.827769452604116 201339.880363094998756,98126.28200495299825 201346.54283359501278,98112.957063953304896 201355.426127593993442,98097.41129945369903 201362.088598094007466,98075.203064454297419 201386.517656593001448,98061.878123454604065 201404.284244593000039,98055.215652954793768 201419.830009093013359,98052.994829454793944 201439.817420592007693,98052.994829454793944 201450.921538091992261,98052.994829454793944 201468.688126091001322,98068.54059395439981 201488.67553759101429,98074.24727909489593 201495.095558374014217,98086.3071819540055 201508.662949090008624,98108.515416953407112 201519.767066589993192,98150.711063452297822 201521.987890090007568,98183.821754554504878 201497.59053875200334,98192.906709951304947 201490.896361090999562,98206.231650950998301 201477.571420091000618,98232.881532950297697 201455.363185091991909,98261.479439994101995 201460.476110496005276,98320.731431522901403 201532.296706288005225,98335.984207369605429 201547.643376371008344,98340.592006721301004 201552.279540776013164,98364.980947752206703 201595.294607529009227,98372.965486600704025 201594.230002349009737,98411.086400598898763 201592.323956648993772,98449.207314597195364 201598.042093749012565,98477.7980000959069 201596.136048048996599,98492.59790267610515 201594.242418620007811,98504.327968303201487 201595.060795291996328,98517.229711620195303 201597.843524243013235))
POLYGON ((111268.085558616992785 201117.678019579994725,111228.315737778000766 201168.982642440008931,111216.591625179993571 201204.732609305006918,111202.522343101998558 201240.535305389988935,111190.852409072002047 201288.251953380007762,111181.470461331002298 201316.844429777003825,111169.715981179993832 201354.88084900699323,111148.467266656007268 201404.662459124985617,111137.268502816004911 201422.708713806991,111148.926390029999311 201499.646909570001299,111153.948041715004365 201518.059632416989189,111160.265205866002361 201541.222567638003966,111171.604021702994942 201586.577830985013861,111205.620469212997705 201662.16993656300474,111219.432669955000165 201669.843381420010701,111239.636916723000468 201681.067962956993142,111269.873758953996003 201684.84756823600037,111300.11060118500609 201681.067962956993142,111330.347443416001624 201665.949541842011968,111364.363890926993918 201639.492304888990475,111398.380338436996681 201609.255462658009492,111473.972444013998029 201582.798225706006633,111547.173674204997951 201572.503483340988168,111569.1484375 201577.1875,111743.6875 201568.625,111837.856439356997726 201534.673544504999882,111899.081475886996486 201491.537723313987954,111935.259906563005643 201458.142248843010748,111938.442736305994913 201451.49559855600819,111947.709641395995277 201447.151736795000033,111981.467811139998958 201401.117868962988723,111993.743509228006587 201352.015076607989613,111996.812433750004857 201312.119057820993476,111990.674584705993766 201278.360888077004347,111953.847490440006368 201238.464869288989576,111901.675773563998519 201213.913473112013889,111837.228358598993509 201207.775624067988247,111694.292244825002854 201193.169113206007751,111600.935451490004198 201193.169113206007751,111547.075763027998619 201196.759759103995748,111489.625428668005043 201196.759759103995748,111435.765740204995382 201196.759759103995748,111385.496697640002822 201193.169113206007751,111338.818300971994177 201168.034591923991684,111292.139904305004166 201135.718778845999623,111268.085558616992785 201117.678019579994725))
POLYGON ((107998.849780966003891 201004.462561169988476,107998.849780966003891 200987.818225914990762,107973.631091185001424 200917.205894527985947,107993.806043010001304 200866.768514966010116,108019.024732791003771 200826.418611316010356,108049.287160527994274 200775.981231754005421,108074.505850308996742 200750.762541973002953,108109.812016002993914 200725.543852192000486,108128.643901174000348 200719.266557135008043,108135.613802649997524 200684.417049753013998,108145.975263621003251 200656.786487164994469,108156.336724591004895 200632.609744901012164,108163.244365238002501 200611.886822959990241,108173.605826208993676 200587.710080694989301,108170.152005885000108 200556.62569778400939,108159.790544914998463 200532.44895551900845,108111.437060386000667 200466.826369373011403,108080.352677474002121 200453.011088078987086,108052.722114885997144 200446.10344743198948,108014.730091328005074 200442.649627108010463,108000.914810033995309 200442.649627108010463,107973.284247446004883 200446.10344743198948,107959.468966151995119 200446.10344743198948,107938.7460442110023 200446.10344743198948,107914.093793441003072 200439.708612234011525,107886.938739359000465 200428.834345813986147,107852.400536123997881 200408.111423872993328,107815.544412581002689 200394.448896579997381,107776.6953125 200383.328125,107776.5546875 200308.40625,107676.578125 200183.65625,107659.8125 200108.75,107556.343737217001035 200092.166535727999872,107494.47070815799816 200074.878483490989311,107439.876858988005552 200048.491456391988322,107367.085060095007066 199986.618427333014552,107266.384278807003284 199915.697205117001431,107241.818919078999897 199896.590814216993749,107187.229230793993338 199882.943392146000406,107151.74593340899446 199885.67287656001281,107113.533151609997731 199891.131845388998045,107088.967791881994344 199891.131845388998045,107056.213978910993319 199882.943392146000406,107034.378103597002337 199869.295970075007062,107023.460165940006846 199844.730610347003676,107020.730681525994441 199811.976797376002651,107020.730681525994441 199781.95246881901403,107020.730681525994441 199743.739687019988196,107015.271712696994655 199721.903811705997214,106998.894806212003459 199702.797420805989532,106987.976868554993416 199686.420514321012888,106957.952539998004795 199667.314123421005206,106925.19872702700377 199648.207732520997524,106897.903882885002531 199626.371857207996072,106849.05252141400706 199602.343557815009262,106815.979063035993022 199580.294585563009605,106777.393361594993621 199569.270099437999306,106716.758687901994563 199580.294585563009605,106683.685229524999158 199635.417016193008749,106639.587285020999843 199751.174120515002869,106479.732236195006408 200026.786273664009059,106457.68326394300675 200131.51889186000335,106457.68326394300675 200175.616836364002666,106457.68326394300675 200208.690294742002152,106457.68326394300675 200252.788239246001467,106468.707750069006579 200302.398426811996615,106507.293451509001898 200368.545343567995587,106573.44036826500087 200396.106558883009711,106612.026069706000271 200390.594315819995245,106639.587285020999843 200374.057586631010054,106678.172986461999244 200280.349454560986487,106689.197472586994991 200241.763753120001638,106705.734201775994734 200192.153565552987857,106711.246444838994648 200159.08010717498837,106727.783174027994392 200114.982162672007689,106749.832146279994049 200087.420947356993565,106793.930090783993364 200076.396461230993737,106838.028035288007231 200081.908704294008203,106862.951781445997767 200094.370577372988919,106905.74124062199553 200117.180722666002112,106952.436942861997522 200160.863798954989761,106964.487446665996686 200180.445867636997718,106964.487446665996686 200206.053188219986623,106962.981133691006107 200237.685760705004213,106953.943255838006735 200276.849898068001494,106952.436942861997522 200288.900401872000657,106952.436942861997522 200305.469844603008823,106955.449568812997313 200325.051913283998147,106958.462194763997104 200338.608730064006522,106967.500072616996476 200355.178172793996055,106976.537950469995849 200370.241302548995009,106979.55057642099564 200383.798119328013854,106979.55057642099564 200403.380188009992708,106975.03163749500527 200427.481195617991034,106959.968507740006316 200454.594829175999621,106914.779118474994902 200487.73371463699732,106887.846888999993098 200526.738417268992634,106881.796058495005127 200537.831606529012788,106882.566679543000646 200577.377907629008405,106891.375725424004486 200600.281426920992089,106898.422962128999643 200621.423137036996195,106911.991120316000888 200653.819044495990966,106956.072870734002208 200642.49438741299673,107026.973464235998108 200625.613293722009985,107084.369182784997975 200615.484637507004663,107131.636245119007071 200608.732200030994136,107202.536838621002971 200612.1084187689994,107283.56608833700011 200639.118168674001936,107364.595338052997249 200686.385231008986011,107422.623317044999567 200754.6566359649878,107428.3046875 200758.4375,107519.90625 200849.890625,107569.796875 200858.15625,107688.684005250994232 200872.639674481004477,107818.615005351995933 200923.428230226010783,107998.849780966003891 201004.462561169988476))
POLYGON ((100820.131850730002043 199887.003397961991141,100885.533219525997993 199861.30192309000995,100952.217017300004954 199863.96805923001375,100994.903952544002095 199847.97308000701014,101010.913533093000297 199810.635010344994953,100991.947106438004994 199758.174590921989875,101056.346296178002376 199727.611090463004075,101061.750951698995777 199668.159879740007455,101067.137167517998023 199608.911505724012386,101045.555424838996259 199387.698643256997457,100996.996503809001297 199150.299473780003609,100878.296919070999138 198902.109432963014115,100856.715176390993292 198772.618976883997675,100864.15430682200531 198623.836368265998317,100867.506047731003491 198556.801550086995121,100851.319740720995469 198492.05632204801077,100802.760819691000506 198481.26545070798602,100565.361650214006659 198492.05632204801077,100424.033609007004998 198481.579414164007176,100393.254428033993463 198594.244985218014335,100405.424652344998321 198653.743859626003541,100409.1328125 198653.03125,100417.6015625 198736.28125,100399.52124121900124 198864.749107434996404,100359.435855478994199 198909.303347189008491,100327.482004848003271 198970.195952045993181,100285.297103409000556 199065.815061973989941,100299.358737222006312 199169.871152189996792,100333.106658374003018 199234.554667730000801,100403.414827437998611 199279.55189593200339,100445.599728877001326 199332.986104420997435,100454.036709164996864 199394.857293198001571,100428.725768301999778 199459.54080873800558,100450.787415455997689 199495.894313235010486,100464.123712978005642 199522.566908278997289,100480.127270003999001 199551.90676282599452,100485.461789013002999 199589.248395886999788,100477.460010499999044 199618.588250434986548,100477.460010499999044 199650.595364487002371,100480.127270003999001 199685.269738042989047,100485.461789013002999 199719.944111599004827,100495.744669520005118 199767.420663550001336,100536.869912266993197 199775.813570233003702,100588.364197706003324 199792.499960459012073,100605.580061590997502 199798.238581754005281,100619.926614829004393 199818.323756286990829,100651.489031952005462 199832.670309525012271,100697.398002311994787 199852.755484057008289,100726.134032287998707 199872.771992027992383,100763.392147206002846 199884.317901180009358,100820.131850730002043 199887.003397961991141))
POLYGON ((111815.733728721999796 198450.488435937004397,111847.268409116004477 198440.077184658002807,112084.885448607004946 198472.47950822499115,112199.600032269998337 198472.47950822499115,112278.088957934000064 198472.47950822499115,112338.465054599000723 198472.47950822499115,112435.066809262003517 198460.404288891993929,112501.480515593997552 198436.253850226989016,112610.157489589997567 198412.103411560994573,112755.060121585003799 198412.103411560994573,112851.661876248996123 198412.103411560994573,112960.338850244996138 198412.103411560994573,113032.790166242994019 198400.028192227997351,113081.091043574997457 198400.028192227997351,113171.655188571996405 198393.990582561003976,113253.859714706995874 198366.124816608993569,113278.053522946996964 198324.264782934013056,113272.43771138000011 198084.293834609008627,113269.966633602001821 198060.096763095993083,113249.640625 197945.03125,113203.786119340002188 197774.448594243003754,113171.504507050995016 197706.950677638000343,113174.439199076994555 197657.060913191002328,113192.047351234999951 197627.713992928009247,113224.0703125 197603.71875,113233.959184534003725 197596.412214148003841,113506.28125 197395.203125,113688.2109375 196903.75,113687.6640625 196612.359375,113704.0234375 196470.796875,113603.234644808995654 196428.332299083005637,113558.082457198994234 196422.688275632011937,113501.642222687005415 196371.892064571002265,113473.422105431003729 196253.367572096001823,113490.354175785003463 195959.878352633008035,113479.066128881997429 195615.592922109994106,113512.930269589996897 195542.220617245009635,113639.649746049995883 195509.367419643996982,113926.4609375 195413.15625,114125.6484375 195254.71875,114202.534679037999013 195177.470489517989336,114259.77493730399874 194831.016294750996167,114207.84375 194763.40625,113833.0859375 194380.921875,113566.6953125 194156.46875,113258.7421875 193940.4375,113258.6640625 193898.796875,113293.772671322003589 193817.82771390301059,113200.3125 193807.296875,113042.892031096998835 193730.442804107005941,112845.513918776006903 193707.221849716006545,112518.4765625 193666.65625,112473.654395306002698 193726.050691479002126,112366.074928963993443 193727.905509864998749,112050.755803481006296 193675.97059507900849,111886.7734375 193667.5,111662.4296875 193709.421875,111471.2734375 193718.0,111313.3203125 193701.5625,110589.859375 193527.6875,109849.8984375 193420.421875,109674.428238360997057 193364.190407821995905,109643.911935800002539 193354.411103561986238,109636.86308698799985 193363.628828930988675,109617.980973070996697 193387.905832540011033,109604.493748843000503 193406.787946458003717,109588.309079771002871 193428.367505220987368,109564.032076161995064 193447.249619139009155,109545.149962244002381 193460.736843366001267,109520.872958635998657 193482.316402129014023,109504.688289562996943 193506.593405738007277,109493.898510181999882 193555.147412955004256,109493.898510181999882 193584.819306254998082,109501.990844718005974 193636.070758318004664,109518.478663130998029 193677.290304349997314,109523.570403481004178 193690.019655226002214,109546.937757213992882 193719.15719378500944,109595.135984431006364 193719.99894074301119,109639.015170486993156 193731.965991484990809,109702.839441112999339 193755.900092969997786,109730.762559512004373 193775.845177540992154,109754.696660996996798 193791.801245197013486,109786.608796309999889 193811.746329768007854,109818.520931624007062 193819.724363596003968,109870.378151507000439 193823.713380511006108,109902.29028682099306 193815.735346681991359,109946.169472876004875 193795.790262111986522,109994.037675846004277 193775.845177540992154,110049.883912643999793 193747.922059142001672,110085.785064871000941 193739.944025314005557,110141.631301668996457 193723.987957656994695,110189.499504638995859 193704.042873086000327,110209.444589210004779 193676.119754687009845,110237.367707608995261 193648.196636287990259,110253.323775265002041 193636.22958554601064,110281.246893664007075 193628.251551716995891,110317.148045891997754 193628.251551716995891,110353.049198118998902 193640.218602459994145,110404.906418002996361 193668.141720859013731,110424.851502574005281 193696.064839258004213,110448.785604057993623 193723.987957656994695,110472.7197055430006 193735.955008399003418,110508.620857771005831 193743.933042227989063,110540.53299308399437 193755.900092969997786,110564.467094569001347 193807.757312853995245,110552.500043826003093 193883.548634222999681,110524.576925426998059 193959.339955592004117,110488.675773199996911 194019.17520930399769,110440.807570229997509 194043.109310789004667,110404.906418002996361 194055.07636153101339,110384.681207326997537 194070.24526953799068,110378.690533179993508 194121.165999788005138,110382.137831747997552 194165.980881169001805,110402.821623155003181 194207.348463981994428,110430.400011696998263 194231.4795539570041,110464.872997375001432 194259.057942498999182,110495.898684485000558 194300.425525311991805,110516.582475891002105 194324.556615287001478,110551.055461569005274 194365.924198099994101,110571.739252975996351 194393.502586641989183,110588.975745814997936 194414.186378048994811,110602.764940085995477 194427.975572319992352,110647.579821467006695 194452.106662294012494,110699.289299983996898 194459.001259429991478,110750.99877849999757 194472.790453700989019,110799.260958448998281 194503.816140810988145,110902.679915482993238 194579.656709302013041,110909.574512617997243 194610.682396412012167,110888.890721211995697 194655.497277793008834,110850.970436966003035 194696.864860606990987,110826.839346991997445 194724.443249148986069,110799.260958448998281 194755.468936259014299,110775.129868475007243 194776.152727665990824,110744.104181364993565 194803.731116207985906,110723.420389958002488 194817.520310479012551,110706.183897119000903 194827.862206182006048,110682.052807144995313 194827.862206182006048,110633.790627195994603 194810.625713343004463,110620.001432924997061 194793.389220504992409,110616.381589349999558 194787.506974694988457,110566.667336259997683 194679.39820210300968,110558.904200233999291 194655.566445323987864,110526.745649167001829 194576.406935005012201,110471.086618474000716 194478.694414455007063,110356.057955041003879 194337.69153670000378,110316.275487902996247 194290.693536278005922,110311.222265635995427 194285.279369564988883,110293.364211267005885 194266.14573988399934,110262.270335833993158 194244.870983008004259,110239.359059199006879 194239.961423728993395,110221.41163995199895 194242.560156496008858,110189.499504638995859 194286.439342550991569,110157.587369325992768 194310.373444035998546,110121.686217099006171 194326.329511693009408,110085.785064871000941 194334.307545521005522,110017.971777330996701 194330.318528606992913,109990.048658932006219 194314.362460950011155,109942.180455962006818 194278.461308722995454,109874.367168422002578 194218.626055011001881,109794.586830139000085 194182.724902783986181,109718.795508769995649 194130.867682899988722,109659.058659543006797 194077.035090835997835,109581.251346231001662 194208.078986940003233,109515.729398180003045 194261.315569731988944,109488.433917642003507 194278.722835310007213,109457.575631821004208 194313.568754828011151,109438.493298322995543 194343.555278894986259,109409.705012545004138 194404.24409756399109,109404.997259455994936 194460.73713463099557,109404.997259455994936 194551.758506092999596,109411.498785988995223 194655.782930621993728,109426.144104053993942 194721.686861914000474,109437.504892120996374 194772.810408215998905,109463.510998252997524 194857.330253146006726,109483.015577851998387 194993.862310339987744,109528.007431628997438 195130.999671480007237,109540.300128699003835 195211.383816480985843,109555.880347643993446 195235.86701768101193,109568.965980972003308 195256.430155767011456,109589.441589737994946 195276.905764533003094,109622.202563764003571 195305.571616805013036,109639.265571069001453 195322.634624111000448,109740.961094607002451 195358.808199596998747,109786.007433892998961 195362.903321351011982,109826.958651424996788 195379.283808364009019,109863.814747204000014 195391.569173622992821,109884.290355970006203 195399.759417130000656,109929.336695256002713 195420.235025895992294,109966.192791035005939 195436.615512908989331,109998.953765061000013 195461.186243428004673,110023.524495580000803 195473.471608688007109,110039.90498259299784 195502.137460959987948,110048.095226100005675 195534.898434986011125,110039.90498259299784 195559.469165505986894,110019.429373827006202 195575.849652519013034,109982.573278048002976 195584.039896025002236,109925.24157350299356 195579.944774272007635,109876.10011246400245 195551.278921999008162,109806.48304265900515 195543.088678492989857,109761.956388874998083 195546.269153762987116,109700.009877075004624 195543.088678492989857,109671.344024802005151 195567.659409012005199,109667.248903048995999 195633.181357063993346,109679.534268308998435 195686.417939856008161,109708.200120581997908 195739.654522647993872,109736.865972853993298 195776.51061842701165,109753.246459867004887 195817.461835958994925,109765.531825126992771 195858.413053491007304,109788.978252504995908 195983.993203116988298,109793.363455138998688 196007.48055127900443,109814.018998974002898 196069.447182784002507,109840.752424557998893 196095.793264584994176,109871.609375 196126.203125,109904.9453125 196176.109375,110063.109375 196300.78125,110096.4136863409949 196315.760366280010203,110166.434337608006899 196350.770691912999609,110213.114771786000347 196403.286180363997119,110242.290043147004326 196455.801668814005097,110248.125097419993836 196514.152211537002586,110302.127712482993957 196632.078633472992806,110331.811021425004583 196706.407709127990529,110345.945007510003052 196740.329275733005488,110352.81304664099298 196750.631334428995615,110394.23280571300711 196788.624111677985638,110476.283498147997307 196628.443511113000568,110600.496684736004681 196423.73933556600241,110647.735460003998014 196333.198349635000341,110705.820310391005478 196265.026085896010045,110714.047213368001394 196253.508421728009125,110747.577993718994549 196235.218905173009261,110775.012268552003661 196241.315410690993303,110799.398290626006201 196256.556674486986594,110845.122082015004708 196302.280465876014205,110939.617917551004211 196387.631543133989908,110998.568331817994476 196440.031911371013848,111024.263017856006627 196397.819212879985571,111011.4229185449949 196295.098418395005865,110985.742719924004632 196196.657657013012795,111071.343381995000527 196051.136531492986251,111289.62507027600077 195760.09428045101231,111413.74603027899866 195764.374313553998945,111567.82722200700664 195785.774479071988026,111649.147850973997265 195909.895439074985916,111661.98795028499444 195999.776134249987081,111619.18761925000581 196106.77696183900116,111495.066659246003837 196303.65848460199777,111353.825566828993033 196440.619543915992836,111285.3450371719955 196444.899577019998105,111229.704606825995143 196483.4198749520001,111131.263845444002072 196624.660967369010905,111024.263017856006627 196735.94182806101162,110938.66235578400665 196778.742159096989781,110870.181826127998647 196744.501894268003525,110811.102891139002168 196858.729724492994137,110737.7421875 197032.53125,110756.346164237998892 197047.054331568011548,110770.603832997003337 197058.18449418299133,110875.113836668999284 197083.04959394299658,110896.743602483998984 197070.88285067101242,110907.558485392000875 197053.308665946999099,110914.317787209001835 197031.678900130995316,110916.352216811006656 196996.0101448080095,110935.402624857000774 196968.795276170014404,110949.010059175998322 196960.630815579002956,110965.338980358996196 196960.630815579002956,110981.667901541004539 196960.630815579002956,111000.718309588002739 196960.630815579002956,111022.490204497997183 196971.516763033985626,111041.540612544995383 196982.4027104889974,111057.869533727003727 196985.124197352997726,111068.755481183005031 196987.845684216998052,111104.134810411997023 196987.845684216998052,111123.185218458005693 196976.959736760996748,111161.286034550998011 196949.744868123991182,111172.171982005995233 196925.251486349996412,111183.057929461996537 196895.31513084800099,111204.829824372005532 196857.21431475499412,111229.323206146000302 196829.999446116999025,111256.538074783995398 196810.949038071004907,111283.752943422005046 196805.506064343004255,111319.132272650997038 196808.227551207004581,111349.06862815200293 196824.556472389987903,111384.447957381999004 196851.771341026993468,111400.776878563992796 196873.543235938006546,111400.776878563992796 196906.201078303012764,111400.776878563992796 196941.580407531990204,111400.776878563992796 196971.516763033985626,111400.776878563992796 197006.89609226299217,111411.662826019004569 197061.325829539011465,111404.164896061993204 197180.906428385991603,111394.814927754996461 197255.706174841005122,111394.814927754996461 197296.22270417099935,111404.164896061993204 197346.089201808004873,111454.031393698998727 197395.955699445010396,111553.764388972995221 197473.872102002991596,111588.04760609799996 197505.038663026003633,111594.280918303004 197558.021816766005941,111585.837985302001471 197630.116584069997771,111564.066090391002945 197654.609965843992541,111553.180142936005723 197670.938887025986332,111547.737169208994601 197681.824834481987637,111545.015682344994275 197728.090111166005954,111545.015682344994275 197738.976058620988624,111558.623116664006375 197755.30497980400105,111583.116498438001145 197766.190927259012824,111604.888393347995589 197774.355387849995168,111626.660288258004584 197787.962822169007268,111651.153670031999354 197831.506611989985686,111648.43218316900311 197864.164454354991904,111623.938801394993789 197885.936349264986347,111558.623116664006375 197907.708244175999425,111509.636353116002283 197918.594191631011199,111460.649589566994109 197910.429731039010221,111403.498365427993122 197875.050401810003677,111357.233088744003908 197839.671072580997134,111310.96781205899606 197807.013230215990916,111248.37361419199442 197771.633900985994842,111207.551311236005859 197749.862006076000398,111169.450495142998989 197728.090111166005954,111150.400087096000789 197714.482676846993854,111112.299271002993919 197689.989295072999084,111090.527376092999475 197662.774426435003988,111076.919941774001927 197632.838070933008566,111068.755481183005031 197575.686846794007579,111068.755481183005031 197548.471978156012483,111070.287859814998228 197534.68057046001195,111071.476968046001275 197523.978596381988609,111091.009771636003279 197495.418000695004594,111131.016226243998972 197450.966384464001749,111162.132357605994912 197408.737349044007715,111222.142039519007085 197353.172828754002694,111248.813009257995873 197315.388954956986709,111251.035590069994214 197290.940566030010814,111248.813009257995873 197275.382500348991016,111239.92268601199612 197248.711530609987676,111231.032362765006837 197233.153464928996982,111219.919458706994192 197222.04056087101344,111202.138812214994687 197210.927656813000795,111177.690423287000158 197195.3695911320101,111142.129130301997066 197177.588944638991961,111099.900094882003032 197164.253459769999608,111081.749084497001604 197166.620982863008976,111058.689361659999122 197176.585060632001841,111044.335574593002093 197188.701848697004607,111022.083831451003789 197215.40350705300807,111006.651303645994631 197233.040681687998585,110989.014129011993646 197255.087149980012327,110969.172307547996752 197270.519677784992382,110951.459831883999868 197317.549354549992131,110947.125839255997562 197323.431201688013971,110889.656463559003896 197432.424845250992803,110868.804761520994361 197499.150291770987678,110839.181005088001257 197575.45390682699508,110677.534281797998119 197866.418008748005377,110655.826585394999711 197982.192389567004284,110675.482207237000694 198021.503633251006249,110680.670410663995426 198031.880040106014349,110772.8513928619941 198091.299247335002292,110851.195853027995327 198126.91036559198983,110995.030376869995962 198167.363825422013178,111041.742101244002697 198166.257691459992202,111070.88276011099515 198157.214038708014414,111103.745107648996054 198133.209344020986464,111122.914036103000399 198126.819701202999568,111181.542586405994371 198084.540848561999155,111243.102022350998595 198057.920551936986158,111312.980300990995602 198039.619098007999128,111406.509511570999166 198061.213427170994692,111456.422567742993124 198097.816335029987385,111506.335623913997551 198174.349687826004811,111552.921143008003128 198267.520726012997329,111586.196513788992888 198314.106245105998823,111619.471884569997201 198367.346838355995715,111655.156382094006403 198401.353503132006153,111711.544425372994738 198396.450195020006504,111767.679327235004166 198408.479102562007029,111803.76604986100574 198432.536917646008078,111810.021930257993517 198441.920738242013613,111815.733728721999796 198450.488435937004397))
POLYGON ((106749.304256164003164 197684.536193120991811,106741.741458434000378 197662.928199609013973,106668.909426415993948 197584.893879589013522,106598.678538398002274 197525.067567574005807,106567.464810389996273 197512.06184757000301,106535.402126328001032 197512.612798543996178,106474.804943783005001 197505.483718244009651,106439.159542285997304 197516.177338692999911,106364.304199140999117 197541.129119741002796,106318.332917057996383 197560.594743246008875,106277.524471840006299 197589.149728560005315,106251.011042651996831 197617.702652300999034,106246.932053547003306 197654.413554252998438,106248.971548098998028 197676.847994334995747,106253.050537204995635 197697.242939863994252,106257.129526310993242 197717.637885392992757,106261.208515417005401 197754.348787344992161,106257.129526310993242 197774.743732873990666,106251.011042651996831 197786.980700190993957,106226.537108018004801 197799.217667508986779,106202.063173382994137 197805.336151168012293,106175.549744194999221 197803.296656615013489,106149.036315007004305 197795.138678402989171,106130.680864031004603 197782.90171108598588,106114.364907608003705 197764.546260109986179,106098.048951185002807 197748.23030368599575,106073.575016550006694 197727.835358156997245,106045.022092808998423 197711.519401733996347,105997.350270933995489 197688.894099861994619,105937.801392544002738 197678.969286798004759,105883.214920686994446 197683.931693329999689,105838.553261894994648 197713.706132524996065,105828.628448830000707 197743.48057171999244,105793.89160310299485 197822.879076239012647,105779.004383505001897 197877.465548095991835,105779.004383505001897 197917.164800355996704,105788.929196569995838 197971.751272213004995,105843.51566842700413 198056.112183265009662,105903.064546816996881 198110.69865512198885,105987.425457869001548 198175.209940044005634,106091.635995050004567 198195.059566173993517,106205.77134529700561 198190.097159641009057,106295.094662881005206 198190.097159641009057,106399.305200062997756 198160.322720447002212,106533.290176440001233 198095.811435523995897,106584.974694574004388 198069.012055750994477,106660.517901796003571 197993.468848529009847,106690.459084197005723 197913.62569546099985,106752.188964203000069 197790.165935447002994,106757.800771477006492 197722.824248166987672,106759.949466438993113 197714.95107962199836,106749.304256164003164 197684.536193120991811))
POLYGON ((109474.175572139007272 196095.741031971003395,109473.971052227003383 196117.121394882997265,109473.292631463002181 196188.043008231994463,109472.84375 196234.96875,109434.859374673993443 196490.311728851986118,109429.277305804993375 196554.505520853010239,109448.814546848996542 196618.699312852986623,109496.262132239993662 196668.937932680011727,109573.4453125 196692.71875,109596.231285433997982 196700.192961947992444,109636.914383819006616 196713.537755294993985,109669.813597719999962 196728.491943431989057,109709.945824698006618 196757.400673611002276,109722.33592146000592 196797.325516682001762,109733.500059199999669 196841.982067639008164,109729.722604376001982 196877.867888467997545,109828.395229982997989 196875.474480856006267,109880.335437027999433 196870.366754893009784,109896.92164345200581 196860.888922651007306,109911.668508432005183 196832.050797928008251,109934.3473797810002 196781.266356047010049,109943.480031712999335 196729.079773578007007,109944.565200315002585 196647.692128469003364,109935.618600774992956 196609.652732562011806,109919.586874130996875 196529.494099342991831,109867.48376253900642 196421.279944496985991,109803.356855963997077 196341.121311277995119,109747.245812709996244 196276.994404703000328,109667.087179491005372 196184.811976500990568,109598.952341255004285 196128.700933246989734,109474.175572139007272 196095.741031971003395))
POLYGON ((88733.627844440794433 195044.492791647993727,88728.261161760005052 194941.949831750011072,88723.559065339301014 194677.848749455006327,88734.109462049193098 194625.096765905007487,88742.95045656520233 194580.891793324990431,88738.529959307197714 194532.266323488001944,88720.847970275295665 194501.322842682013288,88681.063494953501504 194492.481848166004056,88650.120014147702022 194492.481848166004056,88610.335538825893309 194492.481848166004056,88552.869074472197099 194492.481848166004056,88442.356643022794742 194510.163837197993416,88384.890178669098532 194527.84582623001188,88379.61753736139508 194531.946769469010178,88376.049184153103852 194567.630301550991135,88384.890178669098532 194611.835274131008191,88391.374003449294833 194626.964198617992224,88395.297474394596065 194636.118964157009032,88398.151670442995965 194642.778754936996847,88411.248147234000498 194672.421345029986696,88413.920436478394549 194709.833394451998174,88408.575857989504584 194739.228576141002122,88400.558990256104153 194763.279179341014242,88392.542122522703721 194776.64062556400313,88376.508387056004722 194790.002071786002489,88365.819230078093824 194798.018939519010019,88344.440916122402996 194795.346650274994317,88309.701155944494531 194784.65749329701066,88304.356577455502702 194768.62375783000607,88296.33970972210227 194747.245443874009652,88296.33970972210227 194723.194840673997533,88282.978263499797322 194704.488815963006346,88240.221635588502977 194683.110502007009927,88202.809586165996734 194675.093634274002397,88152.036090521200094 194648.37074182901415,88122.640908832196146 194626.992427874007262,88095.918016387600801 194605.614113918010844,88069.195123943005456 194584.235799962014426,88039.799942253899644 194549.496039783989545,88023.766206787098781 194512.083990362007171,88021.09391754270473 194453.293626983999275,88026.438496031594696 194423.898445294995327,88039.799942253899644 194397.17555285000708,88071.867413187399507 194327.696032493986422,88079.884280920799938 194314.334586271987064,88085.228859409704455 194295.628561560995877,88093.245727143104887 194271.577958359994227,88095.918016387600801 194215.459884226991562,88071.867413187399507 194159.341810092999367,88058.775516736306599 194138.76882995601045,87913.336475660194992 194091.940382786997361,87903.998811600104091 194088.049689428007696,87877.309961056700558 194081.377476792986272,87847.285004195306101 194071.369157839013496,87823.932259969806182 194061.360838885011617,87803.915622062297189 194048.016413612989709,87777.226771518893656 194031.335882023995509,87757.210133611297351 194017.991456752002705,87733.857389385797433 193994.638712526008021,87703.832432524504839 193974.622074618993793,87673.807475663197692 193961.277649347000988,87640.446412483899621 193957.941543029010063,87612.741063866604236 193959.146123404003447,87589.661583095206879 193995.047537937003653,87584.875727897597244 194119.479773074999684,87604.019148688093992 194267.841284200985683,87599.233293490498909 194440.132071314990753,87551.374741514402558 194607.637003231007839,87511.111238833604148 194768.691013953997754,87503.516189538204344 194799.071211136004422,87464.251222154794959 194867.784904057014501,87444.716871638593148 194926.77800765100983,87491.322852863799199 194982.201336675992934,87532.763892224102165 195028.822505955991801,87553.48441190419544 195068.536835342994891,87603.559001131201512 195118.611424570000963,87632.913070677997894 195123.791554489987902,87660.540430251494399 195127.244974436995108,87689.894499798407196 195127.244974436995108,87720.975279318605317 195151.418914064008277,87731.33553915869561 195189.406533477012999,87736.515669078697101 195236.027702758001396,87741.695798998698592 195284.375582011009101,87757.236188758804929 195348.263851024996256,87772.776578518896713 195377.617920571996365,87793.49709819900454 195400.065150225011166,87822.851167745902785 195415.605539985001087,87857.385367212802521 195429.419219772011274,87897.099696599703748 195436.326059665007051,87919.546926253096899 195438.052769639005419,87943.720865879993653 195436.326059665007051,87976.528355373506201 195425.965799825004069,88012.789264813705813 195387.978180411999347,88040.416624387202319 195337.903591184993275,88042.143334360604058 195294.735841851012083,87974.801645400104462 195016.735536143009085,87960.987965613399865 194968.387656889011851,87947.174285826695268 194939.033587342011742,87935.087316013203235 194913.132937741989736,87926.453766146500129 194890.685708089004038,87919.546926253096899 194868.238478434999706,87923.000346199798514 194838.884408887999598,87931.174043854494812 194816.406740337988595,87964.942939161293907 194797.496158966008807,88013.568408999097301 194793.075661707989639,88040.091392546906718 194793.075661707989639,88075.455370610696264 194801.916656223998871,88101.978354158592992 194815.178147997998167,88124.080840448499657 194837.280634288006695,88141.762829480401706 194863.803617836005287,88172.706310286201187 194881.485606867994647,88208.070288350005285 194890.32660138400388,88239.013769155804766 194899.167595900013112,88336.264708831295138 194983.157043801009422,88353.946697863197187 195000.839032832998782,88384.890178669098532 195040.623508154996671,88424.674653990907245 195067.146491702995263,88455.618134796706727 195075.987486219004495,88508.664101892398321 195084.828480735013727,88558.03125 195088.71875,88713.816182668699184 195049.482579355011694,88733.627844440794433 195044.492791647993727))
POLYGON ((109449.010574765998172 193768.914184449007735,109404.45622747199377 193737.200397662993055,109368.178529091004748 193707.220374786003958,109358.566476175998105 193701.453143037011614,109337.845195318004698 193688.502342499996303,109309.353434139004094 193667.781061641988344,109278.271512852006708 193641.87946056999499,109265.320712315005949 193623.748339818994282,109223.878150599994115 193592.666418531996896,109203.156869742000708 193579.715617996000219,109187.615909098007251 193569.354977567010792,109156.533987810995313 193548.633696709002834,109135.812706953001907 193535.682896173006156,109117.681586203005281 193525.322255743987625,109081.419344701003865 193502.010814779001521,109065.878384057999938 193489.060014243004844,109027.025982449005824 193452.797772741003428,108998.960522673005471 193406.905145046999678,108952.598052907997044 193352.113135324994801,108943.023332366006798 193342.538414782000473,108902.020813163995626 193301.535895581007935,108864.087883355998201 193255.173425815999508,108813.510643613000866 193221.455265986995073,108778.191253597004106 193188.65868954299367,108750.158868283004267 193122.081774424004834,108725.385114705000888 193068.995159613987198,108679.376715203005006 193047.760513688990613,108608.594562122001662 193019.447652456990909,108524.041712663994986 193032.45578314299928,108545.986519197002053 193057.143690492986934,108562.85498497899971 193103.531971393007552,108562.85498497899971 193141.48601940300432,108545.986519197002053 193200.52564964001067,108508.032471187994815 193230.045464758004528,108429.048442828003317 193280.025843217008514,108395.125 193314.125,108378.6875 193414.046875,108397.929890957995667 193496.864499229006469,108409.666781563006225 193530.990880741010187,108437.004160420998232 193572.26216634499724,108463.837081656994997 193612.771871450997423,108519.180383240003721 193686.831201327993767,108668.439968411999871 193692.801584734988865,108766.951294625003356 193701.757159845001297,108814.714361880003707 193701.757159845001297,108874.418079095004941 193700.281722059007734,108915.170585326995933 193702.319347370008472,108924.479898598001455 193702.784813033998944,109001.863396151005873 193707.559861309011467,109028.236861144003342 193721.234991306002485,109049.634447357006138 193755.349723513005301,109082.174630034001893 193750.343541562004248,109087.986418307002168 193754.863821329985512,109104.702448811003705 193767.865178387990454,109116.191126520992839 193795.267833574995166,109146.951103629995487 193868.120410939009162,109154.120980092004174 193897.600658265990205,109159.885931423006696 193940.426011011993978,109179.92941441500443 194089.320456096000271,109182.015494973995374 194158.161114541988354,109184.024536167999031 194224.45947395300027,109200.405023180996068 194335.027761289995397,109233.165997207004693 194363.693613562994869,109249.318977456001448 194366.630519061989617,109282.307458245995804 194318.64727427699836,109367.580338654006482 194196.337246885988861,109433.826963115003309 194113.891186616005143,109495.253789413996856 194011.513142784999218,109495.253789413996856 193941.896072979987366,109487.063545907003572 193868.183881422010018,109485.254126450992771 193850.089686860010261,109467.813941485001124 193801.961186989996349,109449.010574765998172 193768.914184449007735))
POLYGON ((127270.515072127993335 193793.368786050006747,127297.216656082993723 193751.091278120002244,127324.36395335799898 193687.747584478987847,127333.413052449002862 193624.403890838992083,127360.560349723993568 193552.011098106013378,127360.560349723993568 193536.479532636993099,127372.187163285998395 193504.905770293989917,127386.254881483997451 193482.799355983006535,127404.341947737993905 193450.644571532000555,127414.390317879006034 193420.499461108993273,127422.429013991000829 193390.354350685985992,127432.477384131998406 193340.112499981012661,127438.506406216998585 193320.015759698988404,127446.545102329997462 193295.899671360995853,127490.757930949999718 193275.8029310790007,127517.523841492002248 193234.942848137987312,127503.859375 193180.625,127445.625 193155.71875,127367.577340528005152 193144.655144602991641,127342.174041061996832 193128.489408578985604,127323.711934264996671 193096.840082642011112,127326.349378093000269 193065.190756705007516,127331.624265748992912 193030.903986939985771,127321.074490436993074 193017.716767798992805,127273.600501530992915 193012.44188014298561,127239.313731766000274 193020.354211627010955,127199.752074343996355 193038.816318424011115,127173.377636062999954 193057.278425221011275,127110.586727386005805 193115.337449382990599,127046.65625 193156.25,126947.0546875 193231.296875,126904.824805576005019 193234.889640512992628,126847.328125 193239.78125,126797.5234375 193273.125,126747.8203125 193364.78125,126690.03125 193573.0,126698.4375 193622.9375,126797.70517302499502 193703.478939071006607,126831.625 193731.0,126823.4296875 193789.28125,126765.4375 193889.28125,126756.615268018998904 193961.05448461099877,126768.888486045005266 193999.454243955988204,126790.6328125 194030.78125,126853.810800596998888 194045.18699859600747,126939.777241966992733 194067.809746324986918,126966.924539240993909 194067.809746324986918,127012.17003469899646 194058.760647232993506,127039.317331974001718 194040.662449049996212,127063.196899021000718 194026.334708821988897,127084.562827431000187 194013.515151775005506,127129.808322889002739 193963.745106771995779,127184.102917438998702 193909.450512223003898,127242.922061534001841 193837.057719489996089,127270.515072127993335 193793.368786050006747))
POLYGON ((86637.444249916297849 192646.798477270989679,86562.581474134101882 192702.945559107989538,86464.324080920006963 192735.698023512988584,86318.385077251194161 192750.284885831992142,86309.4375 192752.21875,86178.999514080802328 192745.856220424000639,86171.350505700102076 192775.359538463992067,86166.482065579897608 192887.975562600011472,86164.139604099400458 192964.043491874996107,86166.653153162696981 193032.694274420995498,86178.961326242599171 193106.251798713987228,86186.376107407500967 193162.658107158000348,86188.444833073503105 193203.506878010986838,86190.938072458695387 193245.187818528997013,86188.502955115793156 193277.036293595010648,86166.485626340901945 193296.612268064985983,86129.755741102402681 193306.362696952011902,86093.039794973898097 193311.255213550990447,86061.327722528207232 193312.198343880008906,86060.521100330006448 193354.142698186013149,86052.921875 193368.640625,86049.400882200396154 193397.301002188993152,86049.400882200396154 193644.486887161998311,86049.400882200396154 193770.657075135008199,86021.801153581094695 193849.513442619005218,86048.460773519793293 193966.387803507997887,86077.12943762660143 193998.456021112011513,86123.757165353003074 194016.269575098005589,86159.663618478894932 194019.832285895012319,86238.779325217896258 194019.832285895012319,86292.774306317893206 194009.144153503992129,86342.311543267904199 193974.082182826998178,86366.719897739400039 193908.40810258599231,86386.646231839302345 193814.162783253996167,86430.071924297997612 193699.437114889995428,86440.987752643995918 193641.656629058008548,86459.493697405298008 193557.355427244998282,86495.746985053803655 193467.203270119003719,86513.883475580296363 193401.123147523991065,86531.949216421606252 193329.126867915998446,86549.933077051100554 193257.236432209989289,86573.823566026898334 193179.484884320001584,86609.592253071896266 193047.986761290987488,86621.51515766439843 193006.151261366991093,86627.467854693997651 192970.270004782010801,86645.377794589294354 192916.459683583991136,86675.281680724394391 192868.616463501995895,86687.244127118799952 192808.737121146987192,86675.260370462594437 192730.867501225991873,86651.30099737670389 192664.978199658013182,86637.444249916297849 192646.798477270989679))
POLYGON ((108076.398786381003447 192838.096409596997546,108019.212125617996207 192830.774628718994791,107957.767357971999445 192811.705562897986965,107934.564431195001816 192816.65678388098604,107901.226037094005733 192878.888452868995955,107839.259992378996685 193001.377147229010006,107819.1906651360041 193022.879997846990591,107804.190567523997743 193048.594450895005139,107797.761954262998188 193072.166032854991499,107797.761954262998188 193093.594743727997411,107804.190567523997743 193110.737712427013321,107823.476407309994102 193125.737810038001044,107840.619376008995459 193138.595036562008318,107853.476602533002733 193151.452263085986488,107864.190957968996372 193164.309489609993761,107874.777746666004532 193179.566860115999589,107872.681311277992791 193195.988937320013065,107863.626076761996956 193220.438070512987906,107843.613631262996932 193242.118219803989632,107828.604297137993854 193250.456738762994064,107803.588740263992804 193252.124442553991685,107778.573183390006307 193245.453627387993038,107766.899256848002551 193238.78281222100486,107743.723733157996321 193232.100879030011129,107717.307305098001962 193224.896398649987532,107693.292370498995297 193220.093411729991203,107676.481916279997677 193212.88893134999671,107645.262501300996519 193208.085944430000382,107626.050553620996652 193208.085944430000382,107546.801269443996716 193208.085944430000382,107513.180361004997394 193198.479970590997254,107479.559452565998072 193198.479970590997254,107455.544517967005959 193196.07847713099909,107441.135557207002421 193198.479970590997254,107429.128089906997047 193208.085944430000382,107424.325102988004801 193224.896398649987532,107421.923609528006637 193246.509839789010584,107407.722749198001111 193276.733595322002657,107393.133160810000845 193326.338195840013213,107369.789819390003686 193375.942796357994666,107346.446477970006526 193402.20405545498943,107317.267301194005995 193416.793643843004247,107291.00604209699668 193413.875726164988009,107253.073112288999255 193399.286137777991826,107235.565606224001385 193375.942796357994666,107223.893935514002806 193320.502360484999372,107220.97601783600112 193282.569430676987395,107215.14018248100183 193235.882747836993076,107212.222264804004226 193183.360229640995385,107217.086611556005664 193148.559534021012951,107239.74311168899294 193085.121333646995481,107266.930911849995027 193035.277033352991566,107278.2591619159939 192983.167083045991603,107298.650012037003762 192942.385382804990513,107337.692724937005551 192891.568461888993625,107425.23025526299898 192865.307202791009331,107477.752773458007141 192862.389285114011727,107539.029044686001725 192853.635532081010751,107626.669173563001095 192846.11706779099768,107709.237780729003134 192844.902823568001622,107754.16481698199641 192841.260090897994814,107776.021212997002294 192826.689160222013015,107777.235457219998352 192775.690902853995794,107764.449772737993044 192755.562930512009189,107739.593886304995976 192741.692064609000226,107655.209902702001273 192739.990383755008224,107574.36826989200199 192736.75671844300814,107494.287640296999598 192736.75671844300814,107435.28086059600173 192736.75671844300814,107307.967438220002805 192710.340047940990189,107249.228370964003261 192741.659112369990908,107210.839717349997954 192787.019827574986266,107190.391776114003733 192848.363651282008504,107178.187219244005973 192892.440332347992808,107165.138844437999069 192973.630220027989708,107153.585804536996875 193019.078455807000864,107133.040350755007239 193052.599985662993276,107106.069760900994879 193091.918283687002258,107058.427913334002369 193135.863140466011828,107035.719780205006828 193144.513857848010957,107014.092986749994452 193145.595197521004593,106990.303513948994805 193139.107159484003205,106975.164758529994288 193134.781800792989088,106954.619304748004652 193118.561705700994935,106947.349180453995359 193095.778471900004661,106942.43319044499367 193081.738185229012743,106914.344569431996206 193006.835195858991938,106833.509261397994123 192880.666977691987995,106802.150410886999452 192837.413390781992348,106785.930315795994829 192829.844013071997324,106765.475504108006135 192837.036752326996066,106745.08008326900017 192849.274004829989281,106720.605578262999188 192951.251109023985919,106683.893820753000909 193073.623634056013543,106651.26114741100173 193220.470664094988024,106648.159701577998931 193240.408530162996612,106703.686023931993986 193305.18923957599327,106744.523986015003175 193361.341437439987203,106785.361948097997811 193402.179399521992309,106826.199910181006999 193443.017361604986945,106861.933127003998379 193483.855323688010685,106887.456853305004188 193509.379049990006024,106912.980579606999527 193529.798031031998107,106938.504305908994866 193555.321757333003916,106964.028032211004756 193570.635993114992743,106994.656503773003351 193585.950228895992041,107035.494465855997987 193606.369209936994594,107071.227682679003919 193621.683445717993891,107106.96089950100577 193631.892936238989932,107152.903606844003662 193647.20717201998923,107214.160549969004933 193642.102426759985974,107254.998512051999569 193642.102426759985974,107295.836474134994205 193616.578700457990635,107326.4649456969928 193596.159719415998552,107362.19816251899465 193580.845483634999255,107403.036124602003838 193565.531247853999957,107443.874086684998474 193560.426502593996702,107505.131029809999745 193565.531247853999957,107540.864246632001596 193580.845483634999255,107597.016444495995529 193606.369209936994594,107632.749661319001461 193626.788190978986677,107673.587623401996098 193647.20717201998923,107719.530330744993989 193647.20717201998923,107760.368292828003177 193647.20717201998923,107806.311000171001069 193626.788190978986677,107847.148962253995705 193616.578700457990635,107872.672688556005596 193596.159719415998552,107928.82488641999953 193580.845483634999255,107969.662848502994166 193560.426502593996702,108010.500810586003354 193529.798031031998107,108036.024536886994611 193478.750578428007429,108051.33877266899799 193432.807871085009538,108056.443517929001246 193376.6556732209865,108061.548263189004501 193310.293984835996525,108071.757753710000543 193243.93229645100655,108076.862498970003799 193218.408570149011211,108092.176734752007178 193187.780098587012617,108127.909951573994476 193152.046881765010767,108148.328932616001111 193131.62790072298958,108153.433677876004367 193106.104174420994241,108153.433677876004367 193085.685193379991688,108138.11944209500507 193049.951976557000307,108107.490970533006475 193034.63774077600101,108087.07198949099984 193024.428250255004968,108056.443517929001246 193009.114014474005671,108036.183897784998408 193001.516656919993693,108028.680963424005313 192954.831732009013649,108076.398786381003447 192838.096409596997546))
POLYGON ((89080.121932107504108 193517.099371327989502,88962.2578125 193456.375,88696.140625 193390.125,88646.374808174296049 193369.756069891009247,88371.7265625 193257.34375,88283.921068780095084 193164.521145575010451,88265.319709947201773 193071.514351410995005,88246.369395027402788 192986.237934272008715,88180.043292808200931 192938.862146972998744,88090.029296939304913 192863.060887294006534,88090.029296939304913 192815.685099994007032,88108.979611859103898 192754.09657650499139,88170.568135348396027 192697.245631745987339,88232.156658837600844 192640.394686985993758,88255.470484046105412 192566.567573826003354,88258.204621776094427 192528.983106147003127,88236.836910174795776 192468.625477933004731,88186.810270191999734 192418.598837950994493,88102.061712345195701 192352.162936654989608,88033.883669395494508 192268.60935029599932,87931.032298502002959 192343.12969296600204,87996.071653062099358 192405.15796629601391,88007.681665892494493 192453.214374976989347,88004.108665414794814 192549.685387873993022,87959.864991856695269 192639.483235257997876,87924.146170138003072 192706.952120726986323,87900.45857388569857 192749.249399016000098,87880.069964836497093 192790.026617113995599,87823.370845245197415 192829.905798974010395,87787.300148790905951 192842.391809285007184,87783.110250826895935 192911.031184560008114,87781.309451840206748 193002.017810321995057,87773.570075112802442 193104.177583125012461,87765.830698385296273 193149.065968143986538,87764.424820577594801 193203.895202646002872,87766.415535847903811 193210.449894522986142,87766.415535847903811 193252.474012858001515,87752.803955785406288 193344.79003234099946,87744.678452219304745 193423.637817404989619,87877.736848745698808 193455.456129617989063,88097.84375 193474.171875,88164.421875 193515.71875,88239.3828125 193598.875,88331.530985453005997 193631.971292292990256,88387.96742841489322 193647.11975601001177,88433.29501719759719 193647.11975601001177,88507.067224146099761 193610.233652536000591,88553.174853488904773 193542.609129499993287,88605.43016674410319 193524.166077762987697,88702.540437722302158 193566.387934709986439,88741.478569676997722 193593.000337436009431,88831.573680249901372 193634.751730140007567,88895.782627220905852 193634.751730140007567,88962.91016269060492 193611.403022151003825,89009.607578669500072 193550.112663678009994,89080.121932107504108 193517.099371327989502))
POLYGON ((98409.539065940101864 192650.929142634995515,98367.014779666104005 192581.096320259006461,98333.092519522004295 192507.598089946986875,98248.286869161805953 192434.099859634006862,98095.63669851339364 192405.831309514003806,97875.142007576796459 192405.831309514003806,97819.038025279805879 192403.094529889989644,97747.027945885201916 192381.644719006988453,97703.957204800200998 192371.705317218002165,97675.795566398504889 192360.109348464000504,97660.88646371520008 192351.826513640000485,97642.664227102301084 192331.947710061998805,97631.068258348706877 192317.038607379014138,97601.250052982097259 192278.937567188986577,97578.058115474806982 192247.462794857012341,97561.49244582670508 192230.897125209012302,97543.270209213893395 192217.644589491013903,97516.765137776907068 192201.078919843013864,97453.815593114195508 192191.139518053998472,97425.653954712499399 192186.169817159010563,97407.431718099600403 192182.856683229998453,97382.58321362749848 192182.856683229998453,97354.421575225802371 192187.826384123996831,97334.542771648106282 192197.765785913012223,97301.411432351902477 192207.705187701998511,97278.219494844597648 192209.361754667013884,97236.805320724393823 192219.301156455010641,97228.621023155705188 192222.503707677999046,97219.076023607005482 192226.238707501004683,97217.215517219898175 192242.866246040997794,97213.366727344604442 192252.488220728992019,97211.442332406993955 192273.656565042998409,97213.366727344604442 192290.976119480998022,97219.139912157494109 192312.144463795004413,97238.383861533598974 192335.237203046999639,97257.627810909805703 192364.103127111011418,97273.022970410704147 192392.969051174994092,97288.828125 192437.96875,97355.3515625 192454.53125,97430.2578125 192504.390625,97446.9375 192537.671875,97447.328125 192745.8125,97439.456896819800022 192772.120041204994777,97432.251541202698718 192805.237086104985792,97425.10146339610219 192834.75634687001002,97414.219941815303173 192860.527259905007668,97383.710911557704094 192903.834346430987353,97417.775447641295614 192938.838340932008578,97458.35516554939386 193003.360018420004053,97486.46593546049553 192988.211987799004419,97502.224739558500005 192985.166370304010343,97535.18082521299948 192982.825515401986195,97560.566038941498846 192984.561835533007979,97578.209558183894842 192995.147947077988647,97600.746119786897907 193032.890658726013498,97628.593707064894261 193100.3111331879918,97644.715994436395704 193110.570770605991129,97670.728629965495202 193117.02846113499254,97711.022789868700784 193117.02846113499254,97791.611109674995532 193113.365355688991258,97809.068412188105867 193128.29823231199407,97888.578125 193128.203125,97938.390625 193103.15625,97984.721888358297292 193037.409002661996055,98330.331883189399377 193037.409002661996055,98382.322367742905044 193009.050556542002596,98391.775183116304106 192923.975218181993114,98387.048775429604575 192801.088618328009034,98363.537672238700907 192783.455290935002267,98394.8515625 192736.21875,98409.539065940101864 192650.929142634995515))
POLYGON ((111765.625 191120.03125,111724.046875 191111.78125,111591.802997200997197 190957.743625238013919,111574.1015625 190937.125,111455.56561380000494 190685.228879884991329,111388.384281837003073 190558.769902072002878,111309.347420703998068 190467.877511769009288,111265.877147081002477 190369.081435353000415,111230.310559570993064 190183.344811690010829,111232.344511115006753 190158.170027612010017,111232.344511115006753 189992.805112247006036,111258.802897572997608 189820.825600267999107,111344.792653562995838 189714.992054434987949,111413.502215090993559 189625.287904661003267,111460.629155550996074 189574.312986565986648,111495.86377150399494 189496.796831468003802,111499.387233100002049 189436.897984348004684,111485.293386717996327 189394.616445202991599,111458.714278232000652 189369.192950130003737,111455.003800252001383 189374.68445754100685,111423.812499103005393 189388.052158033009619,111395.956229365998297 189431.10275671700947,111357.970406998007093 189474.153355401009321,111322.516972787998384 189507.074401452991879,111294.488429531003931 189526.427443226013565,111245.011679795003147 189544.568918128992664,111148.559620662999805 189540.375350340997102,111035.333290377995581 189523.60107918799622,110968.236205765002524 189485.858969093009364,110968.236205765002524 189368.439071019005496,111071.939291139002307 189098.811049048992572,111071.921875 189089.53125,110988.8046875 189089.625,110689.421875 189006.78125,110656.057584413007135 189022.247075719002169,110606.038960623001913 189063.929262210993329,110564.3567741309962 189122.284323300002143,110551.85211818300013 189168.134728440985782,110556.8359375 189223.40625,110590.3984375 189389.875,110582.1640625 189431.53125,110540.6875 189473.203125,110518.605119743995601 189512.274889733991586,110507.321556437993422 189555.152430298010586,110502.808131115001743 189591.259832879004534,110502.808131115001743 189625.110522798000602,110507.321556437993422 189654.447787395009072,110516.348407083001803 189681.528339331009192,110525.375257727995631 189701.8387532820052,110536.658821035001893 189719.892454571992857,110552.455809663995751 189737.946155862999149,110570.50951095399796 189753.743144492007559,110588.563212244000169 189774.053558443003567,110599.846775551006431 189787.593834411003627,110606.616913535006461 189803.390823040012037,110611.130338856994058 189821.444524330989225,110604.360200872994028 189848.525076265999814,110593.076637567006401 189875.605628201999934,110570.50951095399796 189904.942892797989771,110545.685671679995721 189970.38755997599219,110534.402108373004012 189999.72482457300066,110516.348407083001803 190056.142641104990616,110507.321556437993422 190096.763469008001266,110496.037993131001713 190128.357446265988983,110439.620176598997205 190223.139378040999873,110410.282912002003286 190261.503493283002172,110371.918796760000987 190299.867608525004471,110344.838244825004949 190329.204873120994307,110340.611846382002113 190335.242585181986215,110298.276434516999871 190361.101546213991242,110263.59658901799412 190367.568988362996606,110221.634270811002352 190367.075854855997022,110170.329679568996653 190362.08235214400338,110161.79165450000437 190362.858536242012633,110142.259785670001293 190364.634160680987407,110109.086274697998306 190364.634160680987407,110091.223614943999564 190364.634160680987407,110065.7055295809987 190374.841394826013129,110037.63563568200334 190392.704054580011871,110009.565741782993427 190415.670331405999605,109981.495847883998067 190433.532991159998346,109958.529571057006251 190456.499267987004714,109935.563294229999883 190487.120970421994571,109926.993144163003308 190541.780133252992528,110081.404700176994083 190621.191790632001357,110226.925825697995606 190693.952353392989608,110319.530178301996784 190753.4837229239929,110392.290741062999587 190879.161058600991964,110399.876339402995654 190876.102899521996733,110435.746914839997771 190890.451129697001306,110478.79160536499694 190908.386417416011682,110507.488065715006087 190922.734647590987151,110532.59746852099488 190937.082877765991725,110568.468043957996997 190955.01816548401257,110593.577446765004424 190998.062856008997187,110604.338619396003196 191041.107546534010908,110643.796252376996563 191091.326352145988494,110704.776230620002025 191137.958100215008017,110740.646806057993672 191152.30633039001259,110790.865611670000362 191177.415733195986832,110848.258532370004104 191188.176905826985603,110894.890280438004993 191195.351020914997207,110930.76085587599664 191202.525136001990177,110940.497154922995833 191204.959210764005547,110959.457316226005787 191209.699251090001781,111013.263179382003727 191213.286308632988948,111067.069042538001668 191238.395711440010928,111117.287848149993806 191249.156884071009699,111181.85488393700507 191259.918056702008471,111232.073689550001291 191270.679229333007243,111296.640725336998003 191292.201574595994316,111343.272473406002973 191310.136862313986057,111386.31716392999806 191328.072150032996433,111420.240015814997605 191358.911106290994212,111425.774796911995509 191363.94272546999855,111432.94891199900303 191369.323311785992701,111454.471257261000574 191385.465070732985623,111483.167717610995169 191396.226243364013499,111529.799465680000139 191406.98741599501227,111576.43121374900511 191403.400358451995999,111626.650019360997248 191396.226243364013499,111648.172364622994792 191385.465070732985623,111691.21705514799396 191371.116840558010153,111737.848803216998931 191367.529783014004352,111802.415839003995643 191363.94272546999855,111834.69935689799604 191349.594495294993976,111857.716902269006823 191326.576949923997745,111847.172214638005244 191262.254355376004241,111805.2175931600068 191173.409274600009667,111765.625 191120.03125))
POLYGON ((120357.2578125 189610.078125,120348.6484375 189451.90625,120169.809714855000493 189265.909504684997955,120125.716666948006605 189137.304781621001894,120114.267078342003515 189114.405604410014348,120091.367901129997335 189082.919235743989702,120054.156738160992973 189051.43286707700463,120019.807972344002337 189019.946498411009088,119991.184000829001889 188994.184924047993263,119974.00961792000453 188979.87293829099508,119951.11044070799835 188968.423349685006542,119925.348866344997077 188948.386569624999538,119888.137703376007266 188916.900200959003996,119859.513731861996348 188914.037803807004821,119833.752157498005545 188919.762598110013641,119825.164966044001631 188936.936981019011,119816.577774589997716 188965.560952533996897,119813.715377437998541 189002.77211550300126,119810.852980287003447 189031.396087016997626,119799.403391681000357 189051.43286707700463,119785.091405924002174 189060.020058532012627,119756.467434409001726 189060.020058532012627,119730.705860046000453 189048.570469925994985,119716.393874287998187 189034.258484168996802,119696.357094228005735 189017.084101259999443,119670.595519865004462 188994.184924047993263,119633.384356896000099 188968.423349685006542,119607.657095364003908 188957.378464517008979,119590.783410686999559 189013.62408010699437,119579.53428756899666 189086.743380375002744,119596.407972246001009 189137.364434405986685,119613.281656923005357 189193.61004999600118,119618.906218482006807 189283.603034941013902,119613.281656923005357 189356.722335208993172,119596.407972246001009 189401.718827681004768,119596.407972246001009 189446.71532015298726,119607.657095364003908 189486.087251066986937,119675.15183407299628 189519.834620420995634,119692.15625 189527.703125,119786.937229963994469 189564.51891542901285,119933.4296875 189652.28125,120186.036073313996894 189763.471598147996701,120215.391035647000535 189761.636913002002984,120246.287063997995574 189749.278501660999609,120294.088477369004977 189705.476056054001674,120329.492048568994505 189662.058699207991594,120357.2578125 189610.078125))
POLYGON ((117320.848728305005352 188474.665314292011317,117299.414537799006212 188474.665314292011317,117247.255125309005962 188471.597113558003912,117210.436716493000858 188468.528912823006976,117170.55010694199882 188471.597113558003912,117142.936300329005462 188483.869916496012593,117109.186092247997294 188517.620124578010291,117096.913289308999083 188548.302131925011054,117103.049690778003423 188588.188741476013092,117142.936300329005462 188628.075351026986027,117164.413705472004949 188664.89375984299113,117167.481906207001884 188704.780369393993169,117127.595296655999846 188726.257774536992656,117067.237074104996282 188716.084265159006463,117023.276471675999346 188695.575767189991893,116974.185259920996032 188664.89375984299113,116928.162248901004205 188637.279953230987303,116900.548442289000377 188600.461544415011303,116885.207438615005231 188572.847737801988842,116839.184427594998851 188532.961128250986803,116671.181893300003139 188357.399356542009627,116631.207620871005929 188274.375867650989676,116625.057732804998523 188219.026875056995777,116625.057732804998523 188175.977658594987588,116655.807173135006451 188145.228218264994211,116698.047193798993248 188143.299634945986327,116731.797401881005499 188143.299634945986327,116818.880198179002036 188110.192972162010847,116783.956814371005748 188085.003820985992206,116747.138405553996563 188048.185412169987103,116691.91079233000346 188014.435204089008039,116642.819580575000145 187996.025999679986853,116599.864770289001171 187992.957798946008552,116535.43255486000271 187992.957798946008552,116501.682346778994543 188008.298802619014168,116472.089428495994071 188086.153516124992166,116492.477744574993267 188275.232266537001124,116538.500755594999646 188450.119708415004425,116673.501587922000908 188606.59794588398654,116787.025015104998602 188704.780369393993169,116851.457230533997063 188750.803380414989078,116964.980657716994756 188796.826391434995458,117017.186030109995045 188813.353275186993415,117088.085622184997192 188830.787601107003866,117175.25725178400171 188848.221927027014317,117408.806614515997353 188901.403767279989552,117423.277659433006193 188906.340126688010059,117787.8046875 189030.6875,117962.4921875 189105.390625,118095.1875 188947.03125,118294.0 188588.78125,118272.164739287996781 188549.933382593007991,118131.136872842005687 188468.592105368006742,117939.039276711002458 188351.663133810012368,117646.716847816001973 188101.101051900011953,117632.088417018996552 188088.564282498002285,117621.208288876994629 188112.301234315993497,117560.250241645000642 188191.546695717988769,117511.9921875 188223.46875,117503.965618079993874 188237.598994586995104,117487.019840303997626 188342.793372385000112,117471.233778941998025 188394.89209519000724,117443.619972329004668 188440.915106211003149,117379.187756900995737 188465.460712088010041,117320.848728305005352 188474.665314292011317))
POLYGON ((121152.5703125 188210.34375,121144.1171875 188135.40625,121133.73647602199344 188044.429439950996311,121071.909655173993087 187986.178403288999107,120986.920819081002264 187950.116873722989112,120973.158951521996642 187909.230933924001874,120994.940798979005194 187868.580411430011736,121047.296211491993745 187852.90493226700346,121138.11333848600043 187900.785246552986791,121235.85739656300575 187922.599168329994427,121275.226609556993935 187917.02133486000821,121312.820078655000543 187895.71836903798976,121326.561491694999859 187881.370034179009963,121340.304536412004381 187856.632553689007182,121340.304536412004381 187820.900637423997978,121329.310100639006123 187807.157592706993455,121310.069838034993154 187779.671503273013514,121271.58931282699632 187752.185413839004468,121246.851832336004009 187741.19097806600621,121202.87408924200281 187727.447933349001687,121142.404692487005377 187694.464626027998747,121035.140625 187644.34375,120969.279513731002226 187600.875062444014475,120920.112270240002545 187571.95315450799535,120873.836364130998845 187543.027544876007596,120847.80665882199537 187534.351219589007087,120787.070699432006222 187537.243879607995041,120775.502730559994234 187545.923437365010614,120743.688631830998929 187557.49220054000034,120717.658914687999641 187571.95315450799535,120677.168243577994872 187606.659444030985469,120671.383861990994774 187644.257924347009975,120685.844815959004336 187684.748595457989722,120700.305769926999346 187713.670503394008847,120708.982342307994259 187748.376792916998966,120708.982342307994259 187777.298700852988986,120703.19796072000463 187797.544036408013199,120688.737006751995068 187809.112799583002925,120656.922908022999763 187838.034707518003415,120628.001000086995191 187864.064424660988152,120616.432236912994995 187881.417569421988446,120599.07909215100517 187901.662904978002189,120581.725947389000794 187921.908240532997297,120532.558703898001113 187953.722339261992602,120499.464441643998725 187984.641075761988759,120474.419448643995565 188008.49345004800125,120458.915405356994597 188034.731061763013713,120457.361743265006226 188063.625589419010794,120470.40114216299844 188135.342283359990688,120468.473498817998916 188167.590672229998745,120448.307039191000513 188198.615994732012041,120418.832982815001742 188211.026123732008273,120372.29499906199635 188206.372325356991496,120335.06461205999949 188184.654599606001284,120304.039289558000746 188161.385607728996547,120298.569880139999441 188119.13190632199985,120277.598166940995725 188105.150764188991161,120214.683027343999129 188105.150764188991161,120200.701885211994522 188119.13190632199985,120183.225457545995596 188157.58004718599841,120172.739600946006249 188199.523473584005842,120158.758458814001642 188255.448042114003329,120154.215154488003463 188341.753818272001809,120151.914013551999233 188454.509724173985887,120157.203035614002147 188510.439805450994754,120174.377418522999506 188550.513365571008762,120197.276595734001603 188587.724528540013125,120223.038170098006958 188619.210897206008667,120243.07495015799941 188662.146854477992747,120264.293114532993059 188792.290173112996854,120302.06516567300423 188863.627724882011535,120340.513306538006873 188895.085294680990046,120399.933160600994597 188916.05700787898968,120448.867158064997056 188919.552293412998552,120483.820013396994909 188905.571151279989863,120497.801155528999516 188895.085294680990046,120501.296441062004305 188867.123010415001772,120494.305869995994726 188832.17015508399345,120487.315298929999699 188797.217299751995597,120485.588696862992947 188788.691870960989036,120480.015625 188585.875,120504.8046875 188510.90625,120571.2265625 188469.203125,120687.578125 188460.71875,120770.6484375 188435.625,120870.28125 188377.21875,120994.7421875 188260.5,121035.58388533499965 188253.172124275006354,121061.062801638996461 188256.330668432987295,121152.5703125 188210.34375))
POLYGON ((119444.544810152001446 188754.89424839100684,119470.227719262999017 188702.220414598996285,119495.98929362600029 188665.009251629991923,119504.576485080004204 188644.972471570014022,119516.026073685992742 188584.86213138900348,119507.43888223200338 188564.825351328996476,119484.5397050199972 188550.513365571008762,119467.365322110999841 188539.063776964991121,119430.154159141995478 188521.889394057012396,119377.031777661002707 188505.813598100008676,119363.956556570003158 188466.587934826005949,119359.648108730994863 188401.961217236996163,119368.265004408996901 188341.642947487998754,119385.49879576600506 188307.175364774011541,119471.667752551002195 188169.305033918004483,119501.826887425995665 188117.60365984699456,119519.060678783003823 188083.136077133007348,119549.219813657997292 188044.360046579997288,119570.762052853999194 188009.892463866010075,119583.687396371999057 187971.116433312010486,119592.304292050001095 187923.72350708101294,119596.61273988999892 187884.94747652701335,119587.9958442109928 187837.554550295986701,119564.2890625 187829.46875,119514.359375 187796.21875,119519.060678783003823 187790.161624063999625,119407.041034962996491 187738.460249992989702,119351.031213052003295 187716.918010797002353,119320.872078177999356 187703.99266727900249,119290.712943303005886 187682.450428082986036,119269.170704107003985 187660.908188886009157,119243.320017071004258 187639.365949689992703,119221.777777875002357 187622.132158332999097,119200.235538679000456 187604.898366976005491,119165.767955964998691 187579.047679940995295,119148.534164608005085 187561.813888584001688,119131.300373250996927 187544.580097227008082,119096.832790536995162 187523.037858030002099,119079.598999180001556 187514.420962351985509,119058.056759982995572 187510.112514512991766,119023.589177268993808 187510.112514512991766,118980.504698877004557 187510.112514512991766,118941.728668323994498 187510.112514512991766,118915.877981287994771 187514.420962351985509,118898.644189931001165 187531.654753709008219,118881.410398573993007 187557.505440743989311,118864.1766072169994 187574.739232101012021,118829.709024502997636 187591.973023458005628,118803.858337468001992 187604.898366976005491,118778.007650432002265 187604.898366976005491,118756.465411236000364 187600.589919137011748,118743.5400677180005 187591.973023458005628,118730.614724200000637 187587.664575619011885,118713.380932843007031 187570.430784261989174,118691.83869364700513 187553.196992904995568,118683.221797969003092 187544.580097227008082,118665.988006611994933 187523.037858030002099,118640.137319575995207 187505.804066673008492,118618.595080379993306 187497.187170994991902,118584.127497666006093 187497.187170994991902,118541.043019272998208 187497.187170994991902,118515.192332238002564 187505.804066673008492,118502.266988720002701 187505.804066673008492,118480.724749524000799 187501.495618833985645,118459.182510327998898 187497.187170994991902,118433.331823291999171 187479.953379637998296,118403.172688417005702 187462.71958828100469,118380.562757655992755 187445.762140209990321,118258.8125 187556.453125,118181.450536599004408 187603.087239759013755,118175.7890625 187606.5,118126.303979549003998 187642.219018152012723,118101.812529033006285 187659.897286296996754,118048.852477167005418 187700.146925715001998,117998.010827375997906 187759.462183805007953,117936.577167210998596 187825.132648119004443,117856.077888375002658 187903.513524879992474,117775.087181477007107 187954.335479392000707,117860.75 188039.84375,117935.6484375 188089.703125,118260.140625 188264.125,118326.6640625 188280.6875,118481.923787516003358 188401.775550191989169,118674.021383646002505 188497.82434825701057,119008.104159526003059 188572.992972829990322,119072.832697353005642 188583.433059575996595,119193.288837660002173 188666.828971632989123,119289.18789743000525 188701.701357003999874,119384.575444443995366 188730.732349572994281,119399.548317680004402 188732.396002155001042,119444.544810152001446 188754.89424839100684))
POLYGON ((111372.095099996004137 188299.740943785000127,111411.692066871997667 188235.77661267798976,111433.797061267003301 188195.987622766988352,111447.06005790400377 188173.882628372986801,111455.902055661994382 188160.619631735986331,111482.428048935995321 188138.51463734099525,111517.796039966997341 188103.1466463090037,111535.480035482993117 188072.199654155992903,111557.58502987799875 188041.25266200301121,111601.795018667995464 188010.305669850989943,111679.703143274993636 187993.903959407005459,111708.089456147004967 187965.51764653500868,111723.895309262006776 187942.686969812988536,111743.220879954998964 187912.629294893995393,111761.432373133997316 187885.312055126007181,111779.643866312995669 187871.653435242013074,111811.513979376002681 187857.994815357989864,111838.831219144005445 187839.783322178991511,111870.701332206997904 187798.807462527009193,111879.807078797006398 187739.620109695009887,111879.807078797006398 187698.644250042998465,111879.807078797006398 187657.668390389997512,111879.807078797006398 187612.139657443010947,111893.465698681000504 187566.610924495995278,111925.335811743992963 187557.505177907005418,111961.758798102004221 187562.058051200991031,111989.076037870006985 187571.163797790999524,112052.031989676994272 187591.00366297698929,112085.472466195002198 187591.00366297698929,112123.690153643998201 187600.558084838994546,112150.653343384998152 187594.958201267989352,112201.58331453599385 187573.88373044700711,112234.95122666899988 187545.784436018991983,112247.244667980994564 187515.928935689997161,112241.976050276003662 187472.023788146005245,112219.234372267004801 187414.246858525002608,112190.571106679999502 187352.143116421008017,112171.46226295499946 187280.484952453989536,112157.130630162006128 187237.490054074005457,112123.690153643998201 187199.272366624994902,112066.363622471006238 187156.277468245010823,112013.814302227998269 187113.28256986400811,111951.710560124003678 187036.847194965987001,111923.047294536998379 187022.51556217300822,111880.052396156999748 187022.51556217300822,111783.055972706002649 187077.474906387011288,111725.582987279005465 187117.263896298012696,111663.689002972998424 187134.94789181399392,111632.742010821006261 187157.052886209014105,111597.374019789000158 187196.841876119986409,111584.111023151999689 187218.946870515006594,111575.269025393994525 187245.472863787988899,111553.164030999003444 187267.577858183009084,111526.638037725002505 187285.261853698990308,111508.95404220900673 187289.682852578000166,111478.007050057000015 187289.682852578000166,111455.902055661994382 187298.524850335990777,111438.218060145998606 187307.366848094010493,111428.213724430999719 187314.267942543985555,111418.163308361006784 187329.343566650000867,111415.291760912004975 187353.751719963998767,111413.138100326003041 187388.210289348004153,111410.984439738997025 187409.746895213000244,111411.692066871997667 187439.996814462996554,111413.416494416000205 187461.552158765000058,111406.838643280992983 187489.641827040002681,111396.459463025996229 187515.589777676999802,111391.269872899007169 187520.779367804003414,111352.347946944995783 187525.968957931007026,111321.210406180995051 187523.374162866995903,111285.886786597999162 187522.331255842000246,111267.972245605997159 187570.103365152986953,111239.579419033994782 187610.009238630009349,111177.2421875 187632.40625,111134.187045387006947 187627.085680340998806,111110.993501018994721 187582.907500594010344,111109.208495622006012 187525.78732786999899,111114.563511814994854 187429.397036398004275,111031.539677132997895 187399.587120585987577,110980.64536425100232 187385.358490571990842,110943.202993643004447 187395.481933842995204,110893.772756060003303 187391.275105112988967,110857.321210281996173 187368.843384634004906,110807.475082920995192 187297.397268748987699,110708.680741028001648 187228.241229425009806,110623.058978055007174 187218.36179523600731,110597.144974506998551 187220.355180123995524,110551.836900224996498 187223.840416607010411,110537.437215081998147 187224.948084695002763,110481.453754675996606 187238.120663614012301,110441.936017918997095 187277.638400371011812,110418.884004810999613 187356.673873885010835,110403.8515625 187425.296875,110404.1328125 187575.15625,110387.5859375 187616.796875,110304.59375 187683.53125,110288.109375 187758.46875,110296.59375 187850.03125,110429.7734375 187949.78125,110654.3125 188016.078125,110729.28125 188099.21875,110804.3828125 188257.3125,110804.5703125 188357.21875,110779.9140625 188507.125,110796.6796875 188582.03125,110863.265625 188631.90625,111029.5546875 188656.65625,111112.75 188698.171875,111128.937048834006418 188687.316194195009302,111137.65625 188681.46875,111159.028399375005392 188664.044445228995755,111163.733893608994549 188640.516974058991764,111163.733893608994549 188604.441518265986815,111146.480414751000353 188538.564598991011735,111126.46939270599978 188497.236989453987917,111128.921875 188456.71875,111153.7421875 188398.40625,111236.6953125 188306.703125,111372.095099996004137 188299.740943785000127))
POLYGON ((119426.729107813996961 186460.716221442999085,119378.859375 186464.3125,119318.41598816899932 186575.773848881013691,119272.728818698000396 186625.614397396013374,119241.463003675002255 186643.852789492986631,119196.328125 186639.390625,119179.734375 186656.0625,119170.16212754699518 186702.52358496299712,119145.728563697994105 186757.906329688004917,119111.332661302003544 186874.323230103997048,119109.412672196005587 186900.243083033012226,119087.520113489998039 186948.406712188007077,119079.582597551998333 187022.490194270998472,119090.165952134993859 187062.177773958013859,119124.561854530998971 187072.761128542013466,119153.66607963500428 187064.823612603999209,119161.008420936996117 187051.140158360009082,119168.162090273996 187048.119720196002163,119193.353659322994645 187011.906839686998865,119227.749561718999757 186964.281744061998324,119272.728818698000396 186943.115034896007273,119317.708075677001034 186953.698389478988247,119360.04149401000177 186966.927582708012778,119410.312428281002212 186966.927582708012778,119436.770814739997149 186953.698389478988247,119484.39591036499769 186943.115034896007273,119528.891289142993628 186936.57159683998907,119620.859375 186971.84375,119670.734375 186971.78125,119672.163458017006633 186968.617439594003372,119696.063002031005453 186969.573421353998128,119743.688097656005993 186940.46919624999282,119793.959031927006436 186871.677391458011698,119807.188225156001863 186813.46894125000108,119801.896547865006141 186752.614652396005113,119772.79232275999675 186723.510427291999804,119743.688097656005993 186694.406202187004965,119677.54213150999567 186673.239493021013914,119660.583764127004542 186665.531144209991908,119629.91703588499513 186636.197751978994347,119590.229456197994296 186591.218495000008261,119553.253450278003584 186558.350934182002675,119542.604360572993755 186525.072528854012489,119510.803252240002621 186495.396806019009091,119474.020814053001232 186476.480123523011571,119426.729107813996961 186460.716221442999085))
POLYGON ((104237.705314263002947 187060.860276371007785,104252.40881888900185 187042.480895587999839,104285.491704297004617 187009.398010180011624,104318.574589704992832 186983.666877084993757,104333.278094331006287 186972.639248615014367,104359.00922742599505 186965.287496301985811,104403.119741304006311 186961.611620145995403,104432.526750555000035 186954.259867832995951,104458.257883650992881 186935.880487051006639,104480.313140589001705 186891.76997317300993,104487.664892902001156 186843.983583138993708,104483.989016745996196 186810.900697731005494,104476.637264432996744 186781.493688479007687,104520.747778310993453 186711.652041505993111,104553.83066371899622 186682.245032255013939,104557.506539875001181 186663.865651472005993,104557.506539875001181 186641.810394533997169,104553.83066371899622 186612.403385281999363,104549.112004732000059 186593.528749333985616,104546.478911405996769 186582.996376030001557,104535.451282936002826 186549.913490622013342,104531.775406779997866 186513.15472905698698,104539.127159092997317 186494.775348274997668,104561.182416031995672 186487.423595961998217,104597.941177596003399 186469.044215180008905,104624.615997777000302 186462.375510134996148,104667.523188620005385 186408.869372785004089,104530.97891497699311 186328.549211817997275,104517.045329708998906 186314.615626549988519,104478.727970221007126 186297.198644963995321,104395.126458610000554 186279.781663378991652,104360.292495439003687 186272.814870745001826,104321.975135950997355 186265.848078109993367,104287.141172780000488 186251.914492842013715,104241.85702065800433 186231.014114938996499,104182.639283266995335 186192.696755451004719,104162.869312067996361 186183.521016568993218,104117.875 186251.375,104068.125 186318.046875,103968.6328125 186451.390625,103922.76319694299309 186519.206396819994552,103826.490804569999455 186706.027917956991587,103680.256358094004099 186880.246419192000758,103820.524656642999616 186944.122644020011649,103911.087107038998511 186979.700749531999463,103975.774571607005782 186992.63824244600255,104056.633902318004402 187008.810108587989816,104121.321366887001204 187028.216347959008999,104202.180697596995742 187050.856960558012361,104237.705314263002947 187060.860276371007785))
POLYGON ((110956.1328125 184968.53125,110914.5546875 184960.25,110706.4453125 184794.03125,110606.609375 184744.203125,110515.1953125 184752.65625,110365.78125 184861.078125,110307.6484375 184886.125,110174.6484375 184877.96875,109966.59375 184745.046875,109875.1875 184753.5,109817.140625 184828.5,109842.390625 184994.96875,109900.8203125 185128.109375,110004.934234061001916 185238.337346401996911,110260.958032437003567 185399.876171568001155,110381.456076778005809 185449.260615970008075,110474.96875 185460.375,110608.03125 185501.828125,110890.8828125 185634.65625,110948.9921875 185592.953125,110990.375 185501.3125,110989.828125 185209.9375,110972.8359375 185010.140625,110956.1328125 184968.53125))
POLYGON ((113825.902120293001644 185226.589828989992384,113803.237753908993909 185233.065362241992261,113777.335620897996705 185236.303128869010834,113738.482421382999746 185236.303128869010834,113709.342521746002603 185239.540895495010773,113696.213571180996951 185241.416459861007752,113686.678155361994868 185242.778662121010711,113631.352828887000214 185235.825756717007607,113606.678959322001901 185228.971904059988447,113583.069623319999664 185223.352062363002915,113593.144240383000579 185179.023747286002617,113611.348809543997049 185157.081704987009289,113632.506144469007268 185139.450592548993882,113653.663479395007016 185113.591627640009392,113660.776022350997664 185093.841397310985485,113683.440388735005399 185077.652564179006731,113712.580288372002542 185051.750431168999057,113732.006888129995787 185025.848298158001853,113744.957954634999624 185006.421698399994057,113754.671254514003522 184983.757332015986321,113757.909021140992991 184964.330732258007629,113757.909021140992991 184931.953065995010547,113757.909021140992991 184919.001999489992158,113751.433487888003583 184896.337633106013527,113715.818054999006563 184851.008900337008527,113696.391455240998766 184838.057833831990138,113680.202622109005461 184825.106767327000853,113670.489322230001562 184795.96686769000371,113670.489322230001562 184776.540267931995913,113680.202622109005461 184760.35143480100669,113688.635328171993024 184749.107826716004638,113695.293887934007216 184740.229747033998137,113699.629221866998705 184734.449301790009486,113707.627047489004326 184728.850823854008922,113736.442318347995752 184721.591202053998131,113774.662112915000762 184736.454455497005256,113853.152830256003654 184761.240997815009905,113927.512457210003049 184786.02754013298545,114000.858016993006459 184795.195735106011853,114030.045212668002932 184794.058198257989716,114044.099999301004573 184791.715733819000889,114060.49725037299504 184784.688340502994834,114072.209572566993302 184772.97601830799249,114093.291752517005079 184754.236302797013195,114119.058861344004981 184740.181516164011555,114156.538292366007227 184733.1541228480055,114179.962936754993279 184730.811658408987569,114208.07251002099656 184728.469193969998742,114228.046552340994822 184725.531560294999508,114246.672708440994029 184800.545461922010873,114249.887635587001569 184801.878484755987301,114290.292349452996859 184847.058539382996969,114333.253460143998382 184883.530762278998736,114358.959071183999185 184932.397475152014522,114365.835555102006765 184969.323262338992208,114353.768249485001434 185006.707341894012643,114347.734596663998673 185050.191630462999456,114335.667291046003811 185092.431613182998262,114335.667291031000786 185134.667182770994259,114347.734596619004151 185170.86909955801093,114383.936513495005784 185211.363575224997476,114429.481808873999398 185239.369150351005374,114482.456795513004181 185269.028753836988471,114634.093614886005525 185268.697831288998714,114638.861767624999629 185236.910146362002706,114678.549347313004546 185098.00361745498958,114784.382893146001152 184965.711685163987568,114799.645275047994801 184951.143047893012408,114732.552485527005047 184841.177063465001993,114722.076519426002051 184839.272342356009176,114698.565118230995722 184834.997542138997233,114649.128947618999518 184797.92041418000008,114608.962058996999986 184779.381850200006738,114587.333734354004264 184751.574004230991704,114581.154213027999504 184717.586636935011484,114581.154213027999504 184677.419748312997399,114579.375 184580.78125,114705.910072897997452 184498.49317712901393,114736.610282793000806 184489.004021344007924,114811.878443843001151 184457.642287572991336,114874.601911385005224 184426.280553802003851,114937.325378926005214 184344.740045998012647,114962.414765943001839 184263.199538193992339,114962.414765943001839 184181.659030390001135,114962.414765943001839 184125.207909602992004,114962.414765943001839 184049.939748553006211,114960.53125 183947.53125,114960.4375 183897.5625,114918.7109375 183806.03125,114910.2265625 183714.46875,114943.3671875 183656.15625,115001.453125 183606.125,115043.015625 183606.0625,115064.407498846005183 183615.55412554499344,115133.263890671005356 183609.478561560012167,115200.882691738006542 183609.478561560012167,115264.744892746006371 183628.261561855993932,115298.554293278997648 183669.584162507992005,115283.527893042002688 183778.525564226991264,115260.988292686000932 183816.091564820002532,115259.6640625 183897.171875,115317.8984375 183922.0625,115367.7578125 183913.6875,115409.234375 183872.0,115475.7265625 183871.90625,115510.805861531000119 183882.664003095997032,115583.84375 183905.0625,115700.1796875 183888.25,115758.296875 183854.875,115808.0625 183796.53125,115832.8984375 183746.546875,115832.792941189007252 183690.34078480899916,115743.832050748998881 183581.762238452007296,115716.311821575000067 183483.912534723000135,115674.4140625 183447.03125,115607.859375 183413.828125,115541.3359375 183397.28125,115388.836998101993231 183397.464714267989621,115340.921968447000836 183315.727310738002416,115300.199966892992961 183266.860908873990411,115247.069402168999659 183205.234957342996495,115189.968019456006004 183172.400677638011985,115149.281687466995209 183164.356583123008022,115116.687022487007198 183160.238713352999184,115080.302414742996916 183152.803045765991556,115044.812092129999655 183131.587285251007415,115051.617580518999603 183034.227451910992386,115055.464519300003303 182960.202997207001317,115051.307476372996462 182935.533720634994097,115059.316751773003489 182865.915075789002003,115107.818047299995669 182849.747977279999759,115158.232971297999029 182806.055043149011908,115198.564910496002994 182748.918129285011673,115205.286900363003951 182664.893255954986671,115201.925905429001432 182631.283306622994132,115204.934963720006635 182617.241034598991973,115212.008890229000826 182584.229377559007844,115201.925905429001432 182523.731468762009172,115195.203915563004557 182473.316544764005812,115201.925905429001432 182429.623610632988857,115053.370701701001963 182371.623726808000356,115001.587185441996553 182457.929587240010733,114984.391581271993346 182486.588927523989696,114964.555282891000388 182635.36116538499482,114962.92347872100072 182647.59969665700919,114961.412086324999109 182723.169316434010398,114958.654253782005981 182861.060943615011638,114953.915414389004582 182879.226494620001176,114907.423554512002738 183057.445290815987391,114843.281216919000144 183088.338026384008117,114696.143222158993012 183174.213015165994875,114516.609258716998738 183260.481820977001917,114340.86959872499574 183363.604160721995868,114293.917522496994934 183397.198045655997703,114258.022769150993554 183461.944390608987305,114256.070118321993505 183467.034238201013068,114281.03244877900579 183507.900892180012306,114302.792964096996002 183554.521283365989802,114337.085747703997185 183601.046266001008917,114324.622999607992824 183657.049318303004839,114302.832865606003907 183672.601917076011887,114271.72273247600242 183675.813809434010182,114253.0819437129976 183672.755824121995829,114231.338889798003947 183666.606124509999063,114209.598386925994419 183660.461272551998263,114187.857788071996765 183654.316485652001575,114169.220854818006046 183651.266066698008217,114147.470927970993216 183654.430347421002807,114135.033834806003142 183663.774250574992038,114122.586305956006981 183676.211911399004748,114122.555219019006472 183704.151027462008642,114122.434988259003148 183735.005830298003275,114134.928026731999125 183778.579661936993944,114135.167685634994996 183810.098675941990223,114110.838388869000482 183854.733349110989366,114082.970732364992728 183864.328397806995781,114058.281749706002302 183869.69181637201109,114039.478262121992884 183838.352670399006456,113991.085295971002779 183841.199315467005363,113927.219248410998262 183872.412260295997839,113904.445987326005707 183829.971182818990201,113883.743732312999782 183801.185059640003601,113856.162695936000091 183776.002374252013396,113809.709566151999752 183733.827109656005632,113783.965231092995964 183729.007718620006926,113727.760798647999763 183734.156421647989191,113674.622880726994481 183777.289146674011135,113620.306679325003643 183835.311151380010415,113584.354401254997356 183936.631207758997334,113570.118708045003586 184007.809673812007532,113554.133454576993245 184087.735941152001033,113539.5234375 184115.90625,113466.411381477999385 184168.854455141990911,113435.768507025000872 184202.498409814987099,113328.03638917299395 184298.143720335996477,113303.442521485994803 184362.661898752994603,113282.119693518005079 184417.652421567006968,113223.827879713004222 184485.118255784997018,113200.296465420993627 184506.741717567987507,113266.0703125 184565.84375,113432.453125 184640.546875,113464.738148090997129 184636.821743042994058,113492.917391695998958 184634.943126803002087,113513.58217033999972 184640.578975523996633,113539.882797704005498 184646.214824244991178,113562.42619258799823 184655.607905446988298,113575.576506269993843 184659.365137927001342,113584.969587472005514 184670.636835368990432,113590.60543619300006 184676.272684090014081,113592.484052433006582 184693.180230252997717,113588.726819952004007 184704.451927694986807,113583.09097123099491 184713.845008897013031,113571.81927378999535 184726.995322578994092,113566.183425069000805 184742.024252501985757,113560.54757634800626 184753.295949943014421,113554.911727626997163 184766.446263626014115,113550.691957057002583 184794.671173798997188,113550.691957057002583 184802.442400942993117,113550.691957057002583 184841.295600457990076,113553.929723683002521 184863.959966842987342,113553.929723683002521 184880.148799974005669,113560.806287220999366 184919.649390820995905,113560.54757634800626 184974.972666301007848,113551.154495145994588 185029.452537270990433,113536.125565223002923 185083.932408240012592,113524.368654848993174 185101.837552681012312,113505.363224287997582 185122.981296948011732,113489.174391156993806 185135.932363453001017,113469.747791399000562 185158.596729837008752,113460.034491519996664 185178.023329594987445,113458.806390423997073 185189.076239460002398,113456.796724893007195 185207.163229232013691,113450.321191640992765 185236.303128869010834,113447.083425014992827 185252.491962000000058,113443.845658388003358 185275.156328384007793,113440.607891762003419 185301.058461395004997,113434.132358508999459 185365.81379392099916,113434.653732513994328 185375.198526001011487,113475.084988307004096 185377.015121451986488,113490.163464152996312 185385.239744640013669,113503.871169467005529 185403.059761548007373,113509.354251591998036 185420.879778456001077,113512.095792655003606 185431.845942707994254,113524.432727438004804 185453.778271210001549,113534.028121156996349 185470.227517586987233,113540.881973814000958 185481.19368183799088,113550.477367533996585 185490.789075557986507,113571.038925504995859 185493.530616620992078,113587.488171881996095 185492.159846088994527,113597.083565602006274 185488.047534495010041,113609.42050038400339 185475.710599712008843,113615.10125623899512 185478.686352390010143,113640.182487359998049 185489.659173336985987,113662.139164100997732 185492.788052154006436,113680.9704833470023 185494.341623607993824,113701.385670374002075 185497.45180087100016,113715.528970009007026 185498.994428673002403,113728.056761689003906 185498.928972760011675,113744.855936508000013 185495.405113287997665,113757.380111139995279 185492.199826800002484,113765.367214330006391 185484.459169739013305,113773.352733467007056 185475.134992750012316,113780.564241051994031 185461.950063183991006,113789.191544742003316 185451.942827463994035,113793.833324142993661 185444.106052910006838,113802.677497052995022 185433.134568540001055,113809.673914297993178 185423.730439084989484,113813.145396548003191 185412.758954724005889,113811.627603482993436 185400.220115456002532,113812.605256128998008 185382.979211466008564,113812.604017530000419 185368.873017292993609,113815.154511704997276 185359.468887844996061,113829.260705887005315 185336.317731321993051,113843.366900074004661 185318.123220968001988,113848.06896480100113 185302.585151086997939,113846.50160988800053 185275.709072610014118,113837.503797190001933 185248.677657032996649,113825.902120293001644 185226.589828989992384))
POLYGON ((133352.116389208997134 178404.452368089987431,133404.859375 178254.375,133411.396453914989252 178215.516751251008827,133395.173059001012007 178072.210096185008297,133376.245938206004212 177991.76896645501256,133298.0 177885.5,133228.561796452995623 177845.18436434600153,133224.234375 177842.671875,133121.110402910999255 177815.457887321012095,133077.436107073997846 177801.666004425002029,133033.761811236996436 177801.666004425002029,133022.268575489986688 177824.652475918002892,133024.567222640005639 177856.833536007994553,133040.657752684986917 177872.924066053994466,133061.345577028987464 177889.014596099004848,133077.436107073997846 177902.80647899498581,133091.227989970007911 177916.598361890995875,133102.721225715999026 177932.688891936006257,133116.513108612009091 177948.779421980987536,133125.707697209989419 177962.571304876997601,133128.006344358989736 177978.661834922007984,133121.110402910999255 178001.648306415998377,133107.31852001498919 178017.738836461008759,133070.540165626007365 178031.530719356989721,133026.865869789005956 178031.530719356989721,132990.087515399995027 178031.530719356989721,132948.711866711993935 178029.232072207989404,132882.023153418005677 178024.854571954987478,132867.161927364009898 178072.410495327989338,132870.287451821001014 178113.042313276993809,132871.923886194999795 178134.315960131993052,132846.281531104003079 178215.516751251008827,132830.058136190986261 178285.818129208986647,132830.058136190986261 178353.415608014009194,132866.538762824988225 178397.090588388004107,132925.064316036994569 178422.997253473993624,133018.74643311399268 178458.802372731996002,133128.71950591399218 178458.802372731996002,133235.720333503006259 178426.107675414008554,133315.970954195014201 178411.246449360012775,133352.116389208997134 178404.452368089987431))
POLYGON ((134453.860572328005219 174147.424040960002458,134460.68961902501178 174141.623379942990141,134498.803385164006613 174128.011320607009111,134512.415444498998113 174114.399261271988507,134534.194739436003147 174089.897554469003808,134536.917151303001447 174057.228612064005574,134534.194739436003147 174024.559669659007341,134526.027503833989613 173986.445903521002037,134523.305091966991313 173961.944196716998704,134517.860268232994713 173937.442489914014004,134512.415444498998113 173907.495959376014071,134506.970620765001513 173877.549428839003667,134506.970620765001513 173844.880486434005434,134515.137856365996413 173809.4891321620089,134520.582680099993013 173776.820189758000197,134534.194739436003147 173730.539188018010464,134569.58609370701015 173706.03748121400713,134608.088819247001084 173705.873708834988065,134651.379542228009086 173727.519070325011853,134725.336403741006507 173756.147532845992828,134820.764612144994317 173811.018752678995952,134904.264294497988885 173844.418625619990053,135002.078208112012362 173870.661382930993568,135238.929864914010977 173900.341868657997111,135244.077348126011202 173902.915610263997223,135313.443875669996487 173899.899674284009961,135342.974850420985604 173899.957640303007793,135376.747588995000115 173892.163931401999434,135384.69528903500759 173883.080845641990891,135426.386113643995486 173895.554727436014218,135542.256513081985759 173908.877531078003813,135654.940151129005244 173914.214682729012566,135722.217993825004669 173912.342565992992604,135724.316549943003338 173931.229571058007423,135735.989749683998525 173991.263169721991289,135742.660149534989614 174024.615168980992166,135766.006549015990458 174057.967168239003513,135781.090208671987057 174078.968627847993048,135817.10825454199221 174104.981660975987324,135825.7979023999942 174120.105620822985657,135823.660389314987697 174169.261802377994172,135812.699347977992147 174189.707565309014171,135801.02614823699696 174203.048365011985879,135779.34734871899127 174229.729964419006137,135764.338949052995304 174254.743963862012606,135757.668549202004215 174274.755163416994037,135756.00094923900906 174301.436762824014295,135761.003749127004994 174333.121162119001383,135774.344548830995336 174363.137961450993316,135786.017748571000993 174399.825160634994972,135792.127141122007743 174412.043945737998001,135813.913778368994826 174408.41283953000675,135826.88428619800834 174406.173803762998432,135900.523135488998378 174394.000844230991788,136000.0 174398.303027741989354,136049.455234038003255 174398.850934077985585,136036.558966535987565 174263.440125296998303,136022.241598530992633 174191.853285277000396,136015.082914528989932 174101.176621251011966,136027.014054533006856 173955.616713210009038,136053.262562540010549 173912.664609197992831,136093.828438552009175 173869.712505186005728,136134.394314562989166 173795.739437165000709,136149.263172495004255 173791.83880285298801,136161.814873613999225 173779.28710173399304,136182.499387185001979 173758.602588164008921,136224.04465554599301 173741.984480818995507,136260.670328615000471 173737.207219114003237,136254.933876060007606 173618.770579522999469,136255.760650095995516 173598.562979453010485,136269.44548228799249 173579.404214384005172,136292.709697014011908 173573.930281507986365,136329.658743931999197 173588.983596918988042,136354.291441878012847 173599.931462671986083,136384.398072699987097 173602.66842911101412,136432.681081429996993 173597.181635974004166,136507.561562426999444 173556.139999657985754,136529.45729393401416 173536.981234589999076,136551.353025440999772 173509.611570206005126,136566.406340852001449 173489.084321917995112,136582.828139482007828 173474.031006506993435,136596.512971674004802 173464.451623973000096,136618.408703180990415 173452.135275000007823,136655.357750099006807 173445.292858903994784,136679.990448044001823 173442.555892466014484,136697.780729894002434 173427.502577055012807,136699.149213113007136 173406.975328767002793,136699.346701347996714 173385.946793317008996,136646.874765699991258 173364.979644809005549,136635.625 173360.484375,136614.303253522986779 173353.604483219009126,136594.422435632994166 173318.826754576002713,136588.874396433006041 173309.121509910008172,136555.646158068993827 173255.12562256801175,136518.26438990898896 173167.901496862003114,136514.110860113985837 173113.905609520996222,136539.032038887002273 173084.830900951987132,136597.181456024001818 173072.370311564998701,136634.563224184006685 173080.677371155994479,136676.098522138985572 173059.9097221789998,136684.405581730010454 173034.988543406012468,136676.098522138985572 172993.453245449985843,136655.330873161990894 172910.382649539998965,136603.125 172842.796875,136583.154760940000415 172817.777874750987394,136521.424653827998554 172787.577307044994086,136458.330641668988392 172782.319472698989557,136440.073915495013352 172774.340405744005693,136392.216925726999762 172706.986123848007992,136367.402190291992156 172701.6686805410136,136344.359935958986171 172708.758604950999143,136236.238588706008159 172781.430330153991235,136213.196334373002173 172783.202811255992856,136188.381598937994568 172781.430330153991235,136149.387014682986774 172760.160556922986871,136078.487770581996301 172673.308982899994589,136057.21799735201057 172634.314398644986795,136048.355591839994304 172582.912446672009537,136049.633296076004626 172554.377052052994259,136060.76016537900432 172487.385762113000965,136067.295211635006126 172466.404824133001966,136044.529388650000328 172481.202609072992345,136023.918878517986741 172485.067079722997732,136000.0 172488.746907186985482,135921.491797033988405 172499.760091345000546,135875.712698671006365 172515.564814389013918,135744.069447045010747 172562.298307810997358,135697.675105586007703 172602.50673707498936,135656.457611518999329 172684.755274214985548,135610.243736041011289 172729.25752467600978,135568.323927037999965 172789.142966107989196,135546.365931845997693 172863.00167720700847,135548.362113228009548 172930.871844162989873,135548.362113228009548 172994.749648357013939,135528.400299417000497 173028.684731835994171,135510.772644159005722 173035.494907010986935,135478.799930137000047 173030.113361086987425,135446.810491760988953 173003.940184233011678,135380.819360071996925 172923.284356613003183,135367.572155061003286 172915.592431122990092,135307.662069413985591 172915.592431122990092,135269.494842635001987 172897.711104410991538,135235.056263723003212 172884.318323723011417,135188.629453620989807 172867.556312778993743,135178.102080771990586 172866.052402372006327,135154.039514259988209 172864.548491964989807,135134.488678969006287 172866.052402372006327,135117.945664491999196 172863.044581558002392,135105.914381236012559 172858.532850337011041,135098.39482920098817 172848.00547748801182,135098.39482920098817 172837.478104639012599,135102.906560422008624 172820.935090162005508,135108.922202049987391 172811.911627719993703,135117.945664491999196 172798.376434056990547,135137.496499783010222 172778.825598766008625,135149.527783038996859 172754.763032254006248,135148.023872632009443 172729.196555334987352,135145.76098249500501 172702.938197128998581,134999.561651129013626 172784.968706624989863,134715.205906401999528 172917.341208480997011,134359.548829653009307 173077.960533464007312,134271.848138819012092 173095.98122336101369,134194.811964126012754 173092.771382748993346,134127.405311268987134 173092.771382748993346,134082.467542697995668 173079.932020300009754,134024.690411677991506 173079.932020300009754,133990.019010040006833 173081.97151451400714,133915.555830861994764 173086.351701525010867,133899.91311593199498 173091.405501733010169,133831.02559197001392 173087.045531860989286,133694.122716993995709 173111.936963674990693,133542.650757802999578 173107.481906052009435,133359.99339524799143 173080.751560311997309,133319.897876639006427 173071.84144506600569,133275.347300405992428 173062.931329818995437,133199.611320810014149 173036.200984079012414,133141.695571707008639 173005.015580715989927,133106.055110721004894 172973.830177352996543,133030.319131124997512 172920.369485873990925,132950.128093906008871 172880.273967263987288,132874.392114310001489 172866.908794395014411,132860.593004425987601 172863.842325531004462,132866.524410490994342 172871.627295990998391,132870.701757064001868 172955.174227445008,132805.589791033009533 173025.644125190010527,132666.011775001999922 173088.84931777100428,132599.016478982986882 173109.871265653986484,132540.69137782100006 173159.864209507009946,132527.069595518987626 173176.51305454300018,132510.699287088995334 173196.521209291007835,132398.98658895000699 173205.407446642988361,132353.747464768995997 173202.74632169099641,132338.289302390010562 173198.713757591991453,132338.275217479997082 173214.469510599999921,132353.286533509002766 173262.472431522008264,132383.280995748005807 173292.466893761011306,132404.278444711992051 173337.463627041986911,132419.289204078988405 173379.507289598986972,132440.298935152997728 173403.554583244986134,132464.308637899986934 173424.604423593002139,132500.492046342988033 173439.288811519014416,132536.550157332007075 173427.566937341005541,132566.641479740006616 173409.941505533002783,132590.73496684798738 173392.34506776399212,132620.901768106996315 173380.953587124997284,132642.044581861991901 173381.433840606012382,132681.248126793012489 173382.289654146006797,132714.270460591011215 173379.762193036993267,132729.263344028004212 173370.933679684007075,132741.26514830198721 173359.07448727398878,132747.273211521009216 173347.160826468985761,132747.311373394011753 173308.295677018002607,132729.267514682986075 173275.127329832990654,132726.203760294010863 173242.034253062010976,132735.189944087993354 173203.129136784991715,132756.241637719998835 173176.396153050998691,132795.268829484994058 173155.135714364005253,132830.222844631993212 173150.088593777007191,132834.31762487499509 173163.21043914501206,132868.514636570005678 173209.842727818991989,132908.929286753991619 173234.713281778007513,132930.691021467995597 173237.822101022989955,132971.105671652010642 173247.148558757995488,133008.411502592003671 173272.019112718000542,133045.717333531007171 173312.433762901986483,133073.696706735005137 173331.08667837100802,133117.220176164002623 173352.848413086001528,133160.74364559398964 173368.392509311001049,133198.04947653299314 173396.371882514999015,133229.137668982002651 173446.11299043399049,133229.137668982002651 173477.201182883,133216.702392001985572 173495.854098353011068,133132.764272389002144 173533.159929291985463,133070.587887489993591 173548.704025517014088,133002.193864102009684 173567.356940986996051,132983.540948631998617 173623.315687394991983,133002.193864102009684 173682.38325304898899,133039.499695041013183 173722.797903233004035,133079.914345224999124 173738.341999458003556,133104.784899185004178 173756.994914927985519,133135.87309163401369 173775.647830397007056,133160.74364559398964 173800.51838435701211,133173.178922572988085 173822.280119070986984,133182.505380307993619 173859.585950009990484,133188.723018797987606 173896.891780950012617,133198.04947653299314 173924.871154154010583,133207.375934267998673 173955.959346602990991,133234.354553142999066 174018.867188704985892,133293.806344200012973 173980.648180168005638,133399.940391934011132 173953.004053140000906,133458.994440109003335 173940.477436860004673,133516.258971672999905 173910.055654466996202,133577.658412337012123 173868.537594438996166,133630.667184632009594 173858.440685429988662,133666.006366162007907 173860.964912681985879,133741.612587089010049 173754.187501745007467,133792.008175955008483 173676.30340986000374,133846.985181991010904 173635.070655332994647,133920.287856706010643 173607.582152315007988,133952.35777689400129 173593.837900805985555,134011.9162001000077 173589.256483636010671,134030.241868777986383 173603.000735145004001,134053.148954626987688 173639.652072502998635,134071.474623304995475 173680.884827030007727,134163.102966698992532 173708.373330047994386,134199.754304055997636 173708.373330047994386,134259.312727262004046 173712.954747217998374,134295.96406461900915 173731.280415896006161,134314.289733298006468 173754.187501745007467,134323.452567636995809 173809.164507781009888,134314.289733298006468 173877.88576532600564,134282.219813109986717 173914.537102683010744,134245.568475753010716 173923.699937022989616,134196.670841899001971 173928.325685871008318,134154.861543651000829 173937.766495152987773,134123.841741723997984 173943.16124331401079,134095.519313878001412 173952.602052595990244,134073.478043584997067 173962.929271269997116,134057.730371796002146 173978.676943058992038,134057.730371796002146 173994.160543186997529,134057.730371796002146 174033.653949094994459,134057.730371796002146 174084.049537960992893,134053.148954626987688 174129.863709658005973,134062.311788966006134 174189.422132864012383,134108.12596066299011 174244.399138899985701,134111.830311503988924 174250.098140193003928,134152.628760846011573 174239.002091341011692,134215.081032465997851 174222.016802242986159,134279.007453142985469 174175.98977935500443,134355.445470215985551 174129.277657809987431,134410.65070476901019 174125.031101305998163,134418.422194259997923 174131.831154610001249,134453.860572328005219 174147.424040960002458))
POLYGON ((116040.234997117004241 164221.086214440991171,116005.172221333006746 164231.848056513990741,115776.856287563001388 164282.584930684999563,115530.772246510998229 164340.339348482986679,115282.177143816006719 164400.604827923991252,115149.233396431998699 164421.595945932000177,115139.046630142998765 164423.204382714990061,115089.36729698900308 164421.293639131996315,115089.433138812004472 164439.599353588011581,115089.234375 164461.8125,115077.452773454002454 164525.68601485399995,115066.086066994001158 164563.798366650997195,115052.75088526699983 164561.513623887993162,115009.697589058996527 164584.276581367012113,114982.511893393006176 164614.898029858013615,115001.919621328997891 164647.701165693986695,115014.445834063997609 164659.51369633700233,115023.641696488004527 164686.843966057000216,115074.045751297002425 164748.243322001013439,115089.561454113994841 164760.775235815002816,115098.799393705994589 164771.218124048988102,115130.219388030003756 164787.909996033995412,115137.559926048998022 164793.537741848995211,115145.3397239229962 164801.60568038400379,115194.144021065003471 164828.099441689992091,115202.269460819996311 164821.779655213991646,115209.849872532999143 164813.07138846500311,115231.652692785995896 164793.768727893009782,115236.113046910002595 164785.839209450990893,115238.84307041100692 164775.427485221996903,115280.123142936005024 164735.373990311985835,115370.668675355002051 164713.910008456005016,115400.646695078001358 164695.923196621995885,115421.848982787007117 164683.201823996001622,115462.793228733004071 164647.375608794012805,115513.973536164994584 164632.021516564011108,115554.91778211100609 164626.903485821007052,115600.9800588000071 164626.903485821007052,115647.042335488993558 164626.903485821007052,115682.868550690996926 164616.667424334009411,115718.694765894004377 164591.077270617999602,115754.520981095993193 164555.251055416010786,115790.347196299000643 164514.30680946999928,115821.055380757999956 164478.480594268010464,115872.235688190005021 164452.890440551011125,115933.652057108993176 164422.18225609199726,116005.304487514003995 164371.001948660006747,116046.248733460000949 164309.585579740989488,116056.484794945994508 164248.169210822990863,116040.234997117004241 164221.086214440991171))
POLYGON ((167044.920178000989836 156448.941515787999379,167103.890625 156389.8125,167121.125 156347.5625,167120.50019087898545 156334.531851175008342,167142.447425732010743 156304.746318160992814,167181.638916539988713 156270.257806250010617,167193.994136583001819 156259.025788028986426,167356.728131673997268 156147.345595318998676,167429.798994815995684 156122.988640939001925,167534.076945034001255 156096.043303962011123,167609.40625 156104.6875,167813.462660891003907 156159.57993822300341,167862.380489175004186 156166.618474666989641,167886.893464283988578 156170.593551711994223,167921.344132005993742 156177.218680119985947,167945.857107115007238 156178.543705801013857,167963.082440975995269 156175.231141597003443,167970.370082225010265 156165.955961825995473,167976.995210633001989 156148.068115124013275,167977.657723473996157 156118.917550129001029,167980.714693004003493 156096.743362509994768,167974.230460566002876 156067.564316537987906,167981.048614791012369 155997.867628906009486,168025.043376913003158 155935.541715900006238,168043.742137861991068 155842.047911155008478,167993.528579501988133 155857.111978662986076,167937.608493436011486 155864.239048455987358,167917.122147729009157 155861.290832647995558,167900.806559688004199 155850.208546431007562,167888.422944397985702 155830.394761967007071,167885.946221340011107 155807.278680093004368,167885.466065674001584 155769.826538097986486,167892.963111713004764 155732.341307900001993,167923.443172912986483 155686.621216100000311,168001.101655837992439 155684.815204868995352,168006.25360671299859 155682.785648463992402,168018.809487743012141 155654.534916147997137,168020.731658331002109 155614.16933378300746,168013.042975975986337 155575.72592200798681,168001.203091748990119 155547.606196968001314,167997.665611266013002 155539.204680821014335,167972.631528369995067 155522.455528424005024,167950.341020847990876 155519.153231013013283,167935.480682499997783 155520.804379718989367,167905.107634139014408 155532.732533581001917,167820.858293138997396 155564.621556888014311,167782.046875 155581.546875,167747.049750537000364 155610.321038102993043,167636.265625 155701.40625,167615.658181759004947 155717.303584354987834,167538.604575511009898 155769.339785977004794,167500.578120479010977 155794.357190603011986,167467.555146372003946 155808.366937193990452,167440.1066432580119 155812.028761099005351,167405.511982900003204 155809.367633379006293,167379.882081513002049 155803.461450700007845,167382.404423155996483 155853.908283561991993,167384.962091713008704 155905.061654699995415,167372.954149864002829 155971.105334872991079,167349.564321562007535 156005.502155102993129,167312.709162193990778 156038.8795443130075,167274.929469886003062 156046.657716257992433,167207.653499278996605 156052.424228024989134,167142.29969926000922 156052.424228024989134,167076.945899242011365 156040.891204492014367,167025.047293345007347 156029.358180959010497,166980.837369802989997 156015.902986837987555,166942.186930561991176 156008.649706416996196,166879.833361032011453 155996.525401229999261,166824.40796589499223 155986.999161440995522,166768.116548958001658 155969.67872546100989,166719.480755513010081 155955.861756700003752,166578.957665013993392 155910.693620467995061,166575.015625 155911.53125,166559.405295394011773 156013.845837211003527,166584.28125 156036.453125,166616.562734130013268 156047.620687373011606,166923.047894221992465 156114.744234131008852,166958.2412349130027 156174.302195299998857,166963.321245113009354 156220.02228710000054,166978.561275713000214 156352.102552299998933,167009.041336913011037 156413.062674699991476,167044.920178000989836 156448.941515787999379))
POLYGON ((126158.075436781000462 221712.718626752990531,126180.025840464993962 221664.427738647995284,126149.295275306998519 221497.604670648986939,126138.7109375 221327.171875,126129.34375 221189.234375,126106.612250645004679 221108.317915799998445,126112.2109375 221058.9375,126080.65625 220989.859375,125887.1953125 220747.9375,125781.828125 220630.90625,125664.140625 220497.328125,125587.8046875 220382.828125,125510.124775638993015 220251.913427255989518,125489.553725217992906 220267.913133138994453,125460.109872019995237 220275.943274921010016,125427.989304895003443 220281.296702774998266,125379.808454208992771 220275.943274921010016,125319.139336007996462 220261.775002529000631,125324.250564721005503 220283.242163123999489,125334.556426376002491 220329.618540571013,125347.438753444002941 220381.14784884499386,125357.74461509899993 220409.488968396006385,125368.050476753996918 220437.830087946989806,125378.356338408993906 220461.018276671005879,125388.662200064005447 220489.35939622099977,125396.414742263004882 220521.492952252010582,125402.894839758999296 220547.639056632993743,125414.07867852099298 220610.208100515999831,125420.008905426002457 220625.927757525001653,125433.046701357001439 220660.487932616000762,125443.041733278994798 220735.450672033010051,125450.538007220995496 220800.418379526992794,125453.448151068005245 220846.249786027008668,125454.788265765993856 220867.355045670992695,125458.123645140003646 220919.883420886006206,125458.732129900003201 220925.859035978006432,125467.224272217994439 221009.25598709701444,125483.29907360499783 221112.679052077000961,125500.364027478994103 221167.280285576009192,125534.683972151993657 221251.760149387002457,125670.776474993996089 221422.973298122989945,125815.649139308996382 221563.455881700996542,125953.381228586993529 221684.984195769997314,125964.911884361004923 221695.158303806005279,126039.543256887001917 221721.498788227007026,126114.174629411994829 221725.88886896398617,126158.075436781000462 221712.718626752990531))
-------------- next part --------------
A non-text attachment was scrubbed...
Name: InCircle.cpp
Type: application/octet-stream
Size: 8091 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/86b7314c/InCircle-0001.obj
From doublebyte at gmail.com  Sat Jul 18 20:39:41 2009
From: doublebyte at gmail.com (Jo)
Date: Sat Jul 18 20:45:16 2009
Subject: [geos-devel] Re: geos::geom::triangle
Message-ID: <23ab5f0a0907181739jb570e1avb7ecbe533e1073d8@mail.gmail.com>

By the way:

geos/algorithm/CGAlgorithms.h
geos/algorithm/HCoordinate.h

(and a bunch of other algorithms) seem to be also excluded from the offical
release...
I am gonna stop bothering you with this, because I now installed Geos from
SVN!

                            cheers,
                                       Jo

2009/7/13 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. Re: geos::geom::triangle (Mateusz Loskot)
>   2. Adding STRtree and PreparedGeometry support to SWIG
>      (Schuyler Erle)
>   3. Re: [GEOS] #276: "make check" failed at geos_unit on      mingw (GEOS)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 12 Jul 2009 22:56:24 +0100
> From: Mateusz Loskot <mateusz@loskot.net>
> Subject: Re: [geos-devel] geos::geom::triangle
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID: <4A5A5C08.30603@loskot.net>
> Content-Type: text/plain; charset=UTF-8
>
> Jo wrote:
> > Hi,
> > Anybody knows what happened to the geos ::geometry::Triangle class?
> > Its present in the headers of my source code, but not in the installed
> > headers (actually, I think is commented in the geometry header)
> >
> > Im usin geos 3.0.3
>
> This header is intentionally excluded from the installation
> see lines 51-52
>
>
> http://trac.osgeo.org/geos/browser/tags/3.0.3/source/headers/geos/geom/Makefile.am
>
> Though, I don't know why, probably incomplete implementation.
>
> Best regards
> --
> Mateusz Loskot, http://mateusz.loskot.net
> Charter Member of OSGeo, http://osgeo.org
>
>
> ------------------------------
>
> Message: 2
> Date: Mon, 13 Jul 2009 01:55:51 -0400
> From: Schuyler Erle <schuyler@nocat.net>
> Subject: [geos-devel] Adding STRtree and PreparedGeometry support to
>        SWIG
> To: geos-devel@lists.osgeo.org
> Message-ID: <1247464551.6323.53.camel@goldman>
> Content-Type: text/plain
>
> Howdy, folks. I've created tickets in GEOS Trac for three patches I
> created to implement STRtree and PreparedGeometry in the SWIG bindings,
> with the gracious financial support of FortiusOne's GeoCommons.
>
> The first patch adds an iterate() method to AbstractSTRTree to permit
> iterating (via the visitor pattern) over all items that have been
> inserted into the tree, regardless of bounds. Currently, there is no
> public method for accessing inserted items in an STRtree without having
> to first build the tree (thus preventing insertion of further items). I
> implemented this method in order to be able to store Ruby objects in the
> the STRtree, thanks to Ruby's mark-and-sweep garbage collector.
>
>  http://trac.osgeo.org/geos/ticket/277
>
> The second patch adds the STRtree class to the C API. The ItemVisitor
> class is subclassed to allow calling GEOSSTRtree_query() from C with a
> callback function pointer and a (void *) accumulator.
>
>  http://trac.osgeo.org/geos/ticket/278
>
> The third patch adds STRtree and PreparedGeometry support to the SWIG
> bindings. Also included are some niceties for the Ruby bindings, to
> handle the aforementioned GC marking, and to permit Ruby code blocks to
> be wrapped as ItemVisitor callbacks.
>
>  http://trac.osgeo.org/geos/ticket/279
>
> It took me quite a bit of time and effort to get my head around the way
> GEOS is designed in order to get these patches implemented, so I'm keen
> to do what's needed to get them into SVN. I welcome any feedback anyone
> has to offer. Thanks very much!
>
> SDE
>
>
>
>
> ------------------------------
>
> Message: 3
> Date: Mon, 13 Jul 2009 15:25:50 -0000
> From: "GEOS" <geos-trac@osgeo.org>
> Subject: [geos-devel] Re: [GEOS] #276: "make check" failed at
>        geos_unit on    mingw
> To: undisclosed-recipients:;
> Message-ID: <054.4fec17ea41a922af59ee10392222ceb2@osgeo.org>
> Content-Type: text/plain; charset="utf-8"
>
> #276: "make check" failed at geos_unit on mingw
>
> ------------------------+---------------------------------------------------
>  Reporter:  sanak       |        Owner:  geos-devel@lists.osgeo.org
>     Type:  defect      |       Status:  new
>  Priority:  major       |    Milestone:  3.2.0
> Component:  Default     |      Version:  svn-trunk
>  Severity:  Unassigned  |   Resolution:
>  Keywords:  mingw       |
>
> ------------------------+---------------------------------------------------
> Comment (by pramsey):
>
>  I'm not sure how to address this, the flags are inherited from the lower
>  level Makefile. You could compile the whole suite w/o optimization or just
>  not compile w/ 'check'. Do you have a patch?
>
> --
> Ticket URL: <http://trac.osgeo.org/geos/ticket/276#comment:1>
> GEOS <http://geos.refractions.net/>
> GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology
> Suite (JTS).
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 81, Issue 6
> *****************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/89f3ddeb/attachment.html
From doublebyte at gmail.com  Sat Jul 18 20:49:01 2009
From: doublebyte at gmail.com (Jo)
Date: Sat Jul 18 20:49:06 2009
Subject: [geos-devel] Re: Computational Geometry Problem
Message-ID: <23ab5f0a0907181749i30ecc20awfa693c738388868f@mail.gmail.com>

I just realized that I spammed my post with the geometry text files... 8-/
Here is what I wanted to say:

Hi Sanak!
First of all, thanks a lot for the great help: the code you wrote was really
helpful for me!
I modified it a little bit, because I wanted to be able to read an array of
polygons and changed the epsilonArea constant to a greater value, since the
scale I'm working is slightly different (actually, I am unsure what should
be the size of this variable, but the value you had was hanging the program
with my geometries...)
I am using the text files with geometry that I attached to this mail: one
with one polygon and another one with a list of polygons; in both cases, I
am getting an exception inside the "computeIncircle" function, when it is
calculating the number of interior rings of the buffer. Here is the output
from gdb:

Starting program: /home/joana/cvs/testInCircle/test < geometry1.txt
bissects ok.
intsects.size()5589
intsects ok.
wkt : POINT (109225.1841292473545764 203255.7488541874336079)
radius : 448.544

Program received signal SIGSEGV, Segmentation fault.
0xb7efb0c9 in geos::geom::Polygon::getNumInteriorRing (this=0x80ccfd0) at
Polygon.cpp:181
181     Polygon::getNumInteriorRing() const
(gdb) backtrace
#0  0xb7efb0c9 in geos::geom::Polygon::getNumInteriorRing (this=0x80ccfd0)
at Polygon.cpp:181
#1  0x08049aa0 in computeIncircle (poly=0x8050ba8, negbuf=0x80ccfd0,
center=@0xbfa09f98, radius=@0xbfa09fd8) at InCircle.cpp:94
#2  0x0804a888 in main () at InCircle.cpp:283
(gdb)

This seems to me like a memory allocation problem with the variable negbuf,
but I am not sure why... it may also be that I am having a (somehow)
complicated geometry here.
I would like to ask you if you run this code with a test file (I imagine
so), and if yes if you could be so kind and give me this file, so that I can
trace the problem?
Apart from my test files, I also attach the code that I used, if you wanna
have a look!
 Any comments and suggestions from you or anyone else would be kindly
appreciated...!
                                                            Thanks again for
your help,

Jo


2009/7/19 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to geos-devel@lists.osgeo.org To
> subscribe or unsubscribe via the World Wide Web, visit
> http://lists.osgeo.org/mailman/listinfo/geos-devel or, via email, send a
> message with subject or body 'help' to geos-devel-request@lists.osgeo.orgYou can reach the person managing the list at
> geos-devel-owner@lists.osgeo.org When replying, please edit your Subject
> line so it is more specific than "Re: Contents of geos-devel digest..."
> Today's Topics: 1. Re: Computational Geometry Problem (Jo)
> ----------------------------------------------------------------------
> Message: 1 Date: Sun, 19 Jul 2009 01:33:22 +0100 From: Jo Subject:
> [geos-devel] Re: Computational Geometry Problem To:
> geos-devel@lists.osgeo.org Message-ID: <
> 23ab5f0a0907181733x4f1bd457x57cec7a550e7ce5f@mail.gmail.com> Content-Type:
> text/plain; charset="iso-8859-1" Skipped content of type
> multipart/alternative-------------- next part -------------- POLYGON
> ((109593.173002519004513 204057.986181512009352,109602.716397355005029
> 204065.541369090002263,109653.272232817005715
> 204087.522167116985656,109687.10867234399484
> 204058.519504666008288,109726.63273517700145
> 203984.411886854009936,109741.45425874000648
> 203910.304269042011583,109741.45425874000648
> 203855.958682646014495,109751.335274448007112
> 203806.553604104992701,109780.978321572998539
> 203722.564970584993716,109805.680860843000119
> 203663.278876335010864,109840.264415822006413
> 203623.754813501989702,109886.606630552007118
> 203604.873887491005007,109881.330832341001951
> 203492.066371975000948,109884.56599162099883
> 203450.009301332000177,109881.330832341001951
> 203398.24675284899422,109884.56599162099883
> 203352.954522926011123,109897.506628742004978
> 203314.132611564011313,109910.447265862996574
> 203288.251337321999017,109928.74214260300505
> 203265.382741397013888,109802.816679091993137
> 203098.82380868200562,109772.893545970000559
> 203053.939108999009477,109675.643363323004451
> 203009.0544093149947,109585.873963956997613
> 202956.688926352013368,109361.450465540998266
> 202754.707777778006857,109279.161849455995252
> 202657.457595131010748,109256.719499614002416
> 202627.534462009003619,109211.834799931006273
> 202582.649762326007476,109159.469316967006307
> 202560.207412483985536,109092.142267443006858
> 202537.765062641992699,109009.853651356999762
> 202507.84192951998557,108942.526601831996231
> 202485.399579679011367,108912.603468710003654
> 202470.43801311799325,108785.430152941000415
> 202470.43801311799325,108710.622320135997143
> 202462.957229836989427,108658.256837171997176
> 202447.995663276000414,108628.333704050004599
> 202403.110963593004271,108628.333704050004599
> 202358.226263910008129,108598.410570927997469
> 202238.53373142099008,108561.006654525001068
> 202171.206681896990631,108516.121954842004925
> 202148.764332054997794,108426.352555475998088
> 202133.802765494008781,108407.712379735996365
> 202135.873896131990477,108316.953292947000591 202124.063327988988021,108295
> .732071400998393 202148.316152613988379,108264.764998971004388
> 202183.70709253300447,108190.210293291005655
> 202265.717268781008897,108082.105970054995851
> 202358.910650881007314,108003.823529090994271
> 202366.366121449013008,107921.813352843004395
> 202306.722356904996559,107828.619970743005979
> 202306.722356904996559,107791.342617903006612
> 202340.27197446100763,107780.159412050998071
> 202396.18800372100668,107806.253559039003449
> 202470.742709401005413,107847.1953125 202514.5625,107865.196725301997503
> 202554.94723263499327,107878.639516151000862
> 202585.10506081598578,107893.978032472994528
> 202591.240467344992794,107932.663719869000488
> 202591.240467344992794,107975.217976004001684
> 202591.240467344992794,108002.297957180999219
> 202587.371898604993476,108033.246507097996073
> 202583.503329864994157,108079.669331972007058
> 202571.897623647004366,108114.486450627999147
> 202568.029054907005047,108191.857825419006986
> 202568.029054907005047,108230.543512814998394 202571.897623647004366,108273.
> 09776894999959 202571.897623647004366,108307.914887606006232
> 202575.766192386014154,108340.066992242005654
> 202575.766192386014154,108391.025421566999285
> 202549.101897971995641,108423.971949793005479
> 202556.423348688986152,108462.657637188996887
> 202564.160486167995259,108493.60618710500421
> 202564.160486167995259,108524.554737022001063
> 202579.634761126013473,108532.291874500995618
> 202622.189017261000117,108524.554737022001063
> 202653.137567177996971,108505.211893323998083
> 202680.217548354004975,108489.737618365994422
> 202699.560392051993404,108470.394774668005994
> 202726.640373228990939,108451.051930970003013
> 202749.851785667007789,108427.840518533004797
> 202792.406041801994434,108408.497674835001817
> 202823.354591718001757,108393.023399876998155
> 202862.040279114007717,108396.891968615993392
> 202892.988829029985936,108416.234812313996372
> 202916.200241468002787,108431.709087272000033
> 202935.543085165001685,108474.26334340700123
> 202954.885928862990113,108512.390782667003805 202957.062
> 040857010288,108554.5 202938.25,108566.518587382000987
> 202938.232427131006261,108626.355321519004065
> 202910.615472914010752,108671.088144926994573
> 202903.160002346005058,108700.910027199002798
> 202925.526414049993036,108719.548703619002481
> 202962.803766889992403,108730.73190947099647
> 203011.264325581985759,108756.826056459001848
> 203029.903002002014546,108786.64793873099552
> 203052.269413706002524,108786.64793873099552
> 203108.185442966001574,108764.28152702699299
> 203171.556942794006318,108747.906016626002383
> 203198.849460127996281,108719.548703619002481
> 203246.111648474005051,108696.303623333005817
> 203266.622013432002859,108691.307749129002332
> 203280.283291792002274,108637.538527370998054
> 203354.215971709985752,108567.631948555994313
> 203414.903538062004372,108590.929787646993645
> 203465.382189427007688,108605.89135420799721
> 203502.786105829989538,108665.737620453001
> 203600.036288476985646,108695.660753574993578
> 203629.959421598992776,108740.545453258004272 203652.401771439996082
> ,108800.39171950200398 203659.882554720999906,108879.012228894003783
> 203666.434263836999889,108981.112235374006559
> 203660.519654395990074,109031.915796554007102
> 203660.519654395990074,109061.551207241995144
> 203677.454174788988894,109078.485727634993964
> 203711.323215576005168,109091.186617929997738
> 203770.594036952010356,109082.719357733003562
> 203804.463077738997526,109044.616686848996324
> 203838.332118524995167,108996.900754520000191
> 203878.707138188008685,108987.411301515006926
> 203899.267619697988266,108994.892084795996197
> 203974.075452502991538,108994.892084795996197
> 204048.883285307994811,108957.488168392999796
> 204108.72955155200907,108927.565035271007218
> 204168.57581779701286,108897.641902149000089
> 204235.902867321012309,108875.199552307007252
> 204303.229916846001288,108875.199552307007252
> 204333.153049968008418,108920.084251990003395
> 204407.96088277301169,108969.842976801999612
> 204443.502829067991115,109006.0625 204386.28125,109061.914096309003071
> 204327.03974935298902,10 9106.336315720996936
> 204238.19531052801176,109126.733874751997064
> 204182.102023193991045,109149.892129052997916
> 204182.102023193991045,109170.951968380002654
> 204182.102023193991045,109199.031754149997141
> 204184.442005341988988,109236.471468510004343
> 204182.102023193991045,109276.251165017994936
> 204175.082076752005378,109346.450629443002981
> 204156.362219572009053,109379.210379508003825
> 204135.302380243985681,109409.630147425006726
> 204093.182701588986674,109442.389897489993018
> 204041.703094344004057,109475.149647554993862
> 203987.883504952013027,109483.853992221993394
> 203971.44196502599516,109593.173002519004513 204057.986181512009352))
> -------------- next part -------------- POLYGON ((124329.47971483800211
> 218856.725472835008986,124359.682529993995558
> 218849.755592414992861,124382.915464728997904
> 218835.815831573010655,124399.178519043998676
> 218821.876070731988875,124417.764866832003463
> 218796.319842522992985,124420.088160305997008
> 218775.410201260994654,124413.118279885005904
> 218759.147146947012516,124401.501812518006773
> 218740.560799158003647,124392.208638622993021
> 218726.621038317010971,124382.915464728997904
> 218710.357984002010198,124371.29899736099469
> 218691.77163621399086,124366.652410413997131
> 218682.478462319995742,124362.005823466999573
> 218659.245527583989315,124364.329116940993117
> 218612.779658112995094,124364.329116940993117
> 218591.870016850996763,124359.682529993995558
> 218570.960375589987962,124345.742769153002882
> 218550.05073432798963,124329.47971483800211
> 218526.817799592012307,124320.186540944006993
> 218512.878038750990527,124313.216660523001337
> 218503.584864856995409,124303.92348662900622
> 218489.645104016002733,124299.2768996819941 09
> 218478.028636647999519,124294.630312734996551
> 218461.765582332998747,124287.660432314005448
> 218450.149114964995533,124285.337138839997351
> 218438.532647598010954,124285.337138839997351
> 218422.269593283010181,124313.216660523001337
> 218394.390071600006195,124364.329116940993117
> 218368.833843391010305,124418.898040443993523
> 218347.037283882003976,124377.776448178003193
> 218161.990118685993366,124352.752074297997751
> 218049.380436225997983,124360.296478003001539
> 217978.450431853998452,124350.928915530006634
> 217880.091025878005894,124343.280103968005278
> 217799.778504476009402,124304.61254471000575
> 217708.73458039801335,124261.821880426999996
> 217715.584448768000584,124206.387937619001605
> 217736.372177320008632,124175.206344790000003
> 217771.018391574994894,124164.812480513995979
> 217788.341498702997342,124144.024751960998401
> 217798.735362979001366,124116.307780557006481
> 217795.270741554006236,124088.590809153000009
> 217784.876877277012682,124064.338459174992749 217777.947634426003788
> ,124033.156866345001617 217771.018391574994894,124012.36913779200404
> 217764.089148723986,123956.935194984995178
> 217767.553770149999764,123942.651022008998552
> 217775.724600883986568,123894.229094577996875
> 217781.104815043014241,123856.567595464002807
> 217797.24545752000995,123797.385239715003991
> 217824.146528315002797,123788.131066151006962
> 217829.699032453994732,123766.381016582992743
> 217899.209384318004595,123734.802779669000302
> 217946.821614368003793,123722.744253580996883
> 218045.31888588500442,123693.283657494001091
> 218100.031421474996023,123688.122904942996684
> 218138.737065610999707,123684.866344326001126
> 218163.16127023199806,123686.970672618001117
> 218228.39544728200417,123678.500085317005869
> 218282.302211595000699,123681.586770876005176
> 218323.972466639999766,123692.564456684995093
> 218380.752811176993418,123727.84375 218445.3125,123777.875
> 218528.5,123827.7890625 218553.421875,123877.973184556001797
> 218553.355284690012923,123969.09375 218553.234375,124043.71461759200610 7
> 218552.374027801008197,124073.917432747999555
> 218573.283669063006528,124159.879291268996894
> 218661.568821057997411,124329.47971483800211 218856.725472835008986))
> POLYGON ((109593.173002519004513
> 204057.986181512009352,109602.716397355005029
> 204065.541369090002263,109653.272232817005715
> 204087.522167116985656,109687.10867234399484
> 204058.519504666008288,109726.63273517700145
> 203984.411886854009936,109741.45425874000648
> 203910.304269042011583,109741.45425874000648
> 203855.958682646014495,109751.335274448007112
> 203806.553604104992701,109780.978321572998539
> 203722.564970584993716,109805.680860843000119
> 203663.278876335010864,109840.264415822006413
> 203623.754813501989702,109886.606630552007118
> 203604.873887491005007,109881.330832341001951
> 203492.066371975000948,109884.56599162099883
> 203450.009301332000177,109881.330832341001951
> 203398.24675284899422,109884.56599162099883
> 203352.954522926011123,109897.506628742004978
> 203314.132611564011313,109910.447265862996574
> 203288.251337321999017,109928.74214260300505
> 203265.382741397013888,109802.816679091993137
> 203098.82380868200562,109772.893545970000559
> 203053.939108999009477,109675.643363323004451
> 203009.0544093149947,109585.873963956997613
> 202956.688926352013368,109361.450465540998266
> 202754.707777778006857,109279.161849455995252
> 202657.457595131010748,109256.719499614002416
> 202627.534462009003619,109211.834799931006273
> 202582.649762326007476,109159.469316967006307
> 202560.207412483985536,109092.142267443006858
> 202537.765062641992699,109009.853651356999762
> 202507.84192951998557,108942.526601831996231
> 202485.399579679011367,108912.603468710003654
> 202470.43801311799325,108785.430152941000415
> 202470.43801311799325,108710.622320135997143
> 202462.957229836989427,108658.256837171997176
> 202447.995663276000414,108628.333704050004599
> 202403.110963593004271,108628.333704050004599
> 202358.226263910008129,108598.410570927997469
> 202238.53373142099008,108561.006654525001068
> 202171.206681896990631,108516.121954842004925
> 202148.764332054997794,108426.352555475998088
> 202133.802765494008781,108407.712379735996365
> 202135.873896131990477,108316.953292947000591 202124.063327988988021,108295
> .732071400998393 202148.316152613988379,108264.764998971004388
> 202183.70709253300447,108190.210293291005655
> 202265.717268781008897,108082.105970054995851
> 202358.910650881007314,108003.823529090994271
> 202366.366121449013008,107921.813352843004395
> 202306.722356904996559,107828.619970743005979
> 202306.722356904996559,107791.342617903006612
> 202340.27197446100763,107780.159412050998071
> 202396.18800372100668,107806.253559039003449
> 202470.742709401005413,107847.1953125 202514.5625,107865.196725301997503
> 202554.94723263499327,107878.639516151000862
> 202585.10506081598578,107893.978032472994528
> 202591.240467344992794,107932.663719869000488
> 202591.240467344992794,107975.217976004001684
> 202591.240467344992794,108002.297957180999219
> 202587.371898604993476,108033.246507097996073
> 202583.503329864994157,108079.669331972007058
> 202571.897623647004366,108114.486450627999147
> 202568.029054907005047,108191.857825419006986
> 202568.029054907005047,108230.543512814998394 202571.897623647004366,108273.
> 09776894999959 202571.897623647004366,108307.914887606006232
> 202575.766192386014154,108340.066992242005654
> 202575.766192386014154,108391.025421566999285
> 202549.101897971995641,108423.971949793005479
> 202556.423348688986152,108462.657637188996887
> 202564.160486167995259,108493.60618710500421
> 202564.160486167995259,108524.554737022001063
> 202579.634761126013473,108532.291874500995618
> 202622.189017261000117,108524.554737022001063
> 202653.137567177996971,108505.211893323998083
> 202680.217548354004975,108489.737618365994422
> 202699.560392051993404,108470.394774668005994
> 202726.640373228990939,108451.051930970003013
> 202749.851785667007789,108427.840518533004797
> 202792.406041801994434,108408.497674835001817
> 202823.354591718001757,108393.023399876998155
> 202862.040279114007717,108396.891968615993392
> 202892.988829029985936,108416.234812313996372
> 202916.200241468002787,108431.709087272000033
> 202935.543085165001685,108474.26334340700123
> 202954.885928862990113,108512.390782667003805 202957.062
> 040857010288,108554.5 202938.25,108566.518587382000987
> 202938.232427131006261,108626.355321519004065
> 202910.615472914010752,108671.088144926994573
> 202903.160002346005058,108700.910027199002798
> 202925.526414049993036,108719.548703619002481
> 202962.803766889992403,108730.73190947099647
> 203011.264325581985759,108756.826056459001848
> 203029.903002002014546,108786.64793873099552
> 203052.269413706002524,108786.64793873099552
> 203108.185442966001574,108764.28152702699299
> 203171.556942794006318,108747.906016626002383
> 203198.849460127996281,108719.548703619002481
> 203246.111648474005051,108696.303623333005817
> 203266.622013432002859,108691.307749129002332
> 203280.283291792002274,108637.538527370998054
> 203354.215971709985752,108567.631948555994313
> 203414.903538062004372,108590.929787646993645
> 203465.382189427007688,108605.89135420799721
> 203502.786105829989538,108665.737620453001
> 203600.036288476985646,108695.660753574993578
> 203629.959421598992776,108740.545453258004272 203652.401771439996082
> ,108800.39171950200398 203659.882554720999906,108879.012228894003783
> 203666.434263836999889,108981.112235374006559
> 203660.519654395990074,109031.915796554007102
> 203660.519654395990074,109061.551207241995144
> 203677.454174788988894,109078.485727634993964
> 203711.323215576005168,109091.186617929997738
> 203770.594036952010356,109082.719357733003562
> 203804.463077738997526,109044.616686848996324
> 203838.332118524995167,108996.900754520000191
> 203878.707138188008685,108987.411301515006926
> 203899.267619697988266,108994.892084795996197
> 203974.075452502991538,108994.892084795996197
> 204048.883285307994811,108957.488168392999796
> 204108.72955155200907,108927.565035271007218
> 204168.57581779701286,108897.641902149000089
> 204235.902867321012309,108875.199552307007252
> 204303.229916846001288,108875.199552307007252
> 204333.153049968008418,108920.084251990003395
> 204407.96088277301169,108969.842976801999612
> 204443.502829067991115,109006.0625 204386.28125,109061.914096309003071
> 204327.03974935298902,10 9106.336315720996936
> 204238.19531052801176,109126.733874751997064
> 204182.102023193991045,109149.892129052997916
> 204182.102023193991045,109170.951968380002654
> 204182.102023193991045,109199.031754149997141
> 204184.442005341988988,109236.471468510004343
> 204182.102023193991045,109276.251165017994936
> 204175.082076752005378,109346.450629443002981
> 204156.362219572009053,109379.210379508003825
> 204135.302380243985681,109409.630147425006726
> 204093.182701588986674,109442.389897489993018
> 204041.703094344004057,109475.149647554993862
> 203987.883504952013027,109483.853992221993394
> 203971.44196502599516,109593.173002519004513 204057.986181512009352))
> POLYGON ((96443.465480935905362 204259.395140887994785,96426.545287432803889
> 204237.058901240990963,96417.76189763880393
> 204213.708207260991912,96410.883484735197271
> 204162.469445427006576,96471.296875 204136.453125,96545.9375
> 204044.78125,96537.4140625 203936.546875,96462.5078125
> 203878.375,96287.9140625 203861.9375,96246.296875 203828.703125,96221.265625
> 203778.78125,96221.078125 203678.875,96303.890625
> 203520.578125,96295.3515625 203395.71875,96233.907490693003638
> 203254.843048443988664,96211.875 203204.328125,96219.953125
> 203079.4375,96165.947331923001911
> 202887.380786088004243,96165.947331923001911
> 202790.063111322990153,96152.676739909496973
> 202723.710151255014353,96143.898142071499024
> 202692.935093067993876,96130.623180501104798
> 202670.805309407005552,96126.186086226793122
> 202635.379182306001894,96108.570200062502408
> 202609.05449775600573,96062.418070327694295
> 202550.839960337005323,96050.759537695004838
> 202539.346150219003903,96046.254488297694479 202524.2202423560083
> 84,96049.731935860298108 202506.382947103003971,96062.570799682594952
> 202497.844803965010215,96083.33047549870389
> 202490.867669277999084,96126.42313187540276
> 202481.870037541986676,96146.911175044297124
> 202471.888738092995482,96192.235914233897347
> 202454.194615407992387,96210.728450672002509
> 202423.229900709993672,96215.151981343195075
> 202387.841655341006117,96215.151981343195075
> 202352.453409970999928,96215.151981343195075
> 202317.065164602012374,96205.057803825693554
> 202279.363005980005255,96195.942328641700442
> 202229.963030139013426,96182.885491699402337
> 202190.74764625300304,96143.264493198599666
> 202151.390099687007023,96107.958127683406929
> 202151.597916049009655,96028.53735927620437
> 202147.688808867998887,95918.149526071894797
> 202148.265954681992298,95878.633922831504606
> 202155.715720195992617,95868.686149292698246
> 202157.5859765149944,95848.308170628704829
> 202178.614995763986371,95744.65252365739434
> 202207.061072006006725,95677.036219207104295 202234.534203110990347,956
> 85.112401829406735 202270.877024912013439,95689.403390229796059
> 202305.204932115011616,95689.403390229796059
> 202343.823827718006214,95689.403390229796059
> 202369.569758119992912,95702.276355430905824
> 202421.061618925014045,95719.440309032404912
> 202468.262491328991018,95728.022285833198112
> 202524.045340534008574,95723.731297432794236
> 202566.955224537989125,95685.112401829406735
> 202601.283131740987301,95646.493506226106547
> 202614.156096941995202,95649.467969551202259
> 202630.079142834001686,95655.319560517105856
> 202706.149825391010381,95672.874333414903958
> 202776.368916981999064,95725.538652108298265
> 202852.439599539997289,95778.202970801707124
> 202887.549145335011417,95825.015698529197834
> 202910.955509199004155,95901.086381086293841
> 202928.510282097005984,95971.305472677500802
> 202951.916645960009191,96000.56342750719341
> 202981.174600789992837,96012.266609439102467
> 203051.393692381010624,96006.415018473097007
> 203209.386648460989818,96012.266609439102467 203279.605740052997135,960
> 06.415018473097007 203338.121649712004,95983.008654609395307
> 203402.489150337001774,95912.789563018202898
> 203501.966196758003207,95779.610210982296849
> 203741.815228894003667,95705.8359375 203729.5,95589.4765625
> 203729.65625,95539.5546875 203704.75,95489.59375 203654.875,95447.8515625
> 203563.34375,95389.578125 203505.140625,95323.0078125
> 203471.921875,95214.953125 203472.0625,95074.03125 203672.0625,95007.640625
> 203730.4375,94949.5078125 203755.484375,94816.5078125
> 203747.34375,94616.689889489600318 203660.946143169014249,94566.9453125
> 203639.4375,94442.2578125 203631.28125,94432.736031159001868
> 203533.343670622009085,94413.139512295107124
> 203445.159335734002525,94379.825430226293975
> 203396.168038573989179,94304.010185215403908
> 203321.730370631994447,94297.70598820289888
> 203315.005893817986362,94242.723160113295307
> 203256.357543855992844,94222.712221728696022
> 203266.359167435992276,94201.31082012229308
> 203283.482938984001521,94192.791905874095391 203304.881578805012396,94171.
> 534343852297752 203330.543729883997003,94150.335206147006829
> 203351.914814676012611,94133.417230534003465
> 203369.004768624989083,94116.603059938002843
> 203394.63984835500014,94112.612696682394017
> 203420.278642482997384,94117.308840403406066
> 203458.740630429994781,94125.312299908502609
> 203468.01953837700421,94143.091101625395822
> 203488.69402376699145,94189.831735428902903
> 203510.160012123989873,94223.789104490802856
> 203535.896782916999655,94244.999716236401582
> 203561.617148232006002,94253.407812374003697
> 203600.174227584007895,94244.676348249500734
> 203672.983866366004804,94210.653134009393398
> 203715.758562264993088,94150.914631136096432
> 203754.256337889994029,94090.66795423309668
> 203767.151082121010404,94064.771884632093133
> 203767.175351165002212,94047.612676399905467
> 203767.191432277002605,94017.420230220493977
> 203771.510140252008568,93978.59794975949626
> 203784.402975142991636,93935.581193947204156
> 203805.844146560004447,93897.023933854405186
> 203822.974060906009981,93850.0127 2424790659
> 203827.241655685997102,93803.041988751196186
> 203831.502485781995347,93740.436038965504849
> 203842.887527696992038,93711.194055846804986
> 203959.855460171995219,93711.194055846804986
> 204087.024510368995834,93711.194055846804986
> 204144.828624095011037,93711.194055846804986
> 204214.193560565996449,93711.194055846804986
> 204223.172272557014367,93711.194055846804986
> 204271.997674292011652,93716.319587731093634
> 204273.784646877000341,93738.315331435893313
> 204314.161254583013942,93753.795304933693842
> 204339.547449653007789,93766.104611254297197
> 204341.654946069989819,93789.256560823705513
> 204341.658034768013749,93795.963046725897584
> 204341.048952276003547,93812.408206958003575
> 204339.555404190992704,93833.453767775194137
> 204331.133731359994272,93842.857693808997283
> 204328.445111554989126,93896.520306266000262
> 204298.730474001000402,93956.593616989994189
> 204265.46796342000016,94085.092419949796749
> 204202.635610844998155,94235.033447475507273
> 204153.848473746009404,94256.80098 231699958
> 204147.62763271300355,94268.515625 204064.4375,94301.6328125
> 203997.78125,94426.265625 203972.65625,94517.703125
> 203972.53125,94584.2421875 203997.40625,94800.3125
> 203980.46875,94941.6953125 204021.90625,95058.0625
> 204021.765625,95124.5234375 204005.03125,95265.671875
> 203921.578125,95340.4609375 203913.15625,95498.6015625
> 204029.5,95541.178813741105841 204108.517810871009715,95570.682549807694159
> 204206.863597760006087,95585.43441784089373
> 204300.292095304001123,95611.81973745340656
> 204420.585241786990082,95685.831716868793592
> 204419.388115942012519,95725.713275454996619
> 204419.388115942012519,95776.989565065901843
> 204396.598653892986476,95816.87112365210487
> 204368.111826331005432,95851.05531672599318
> 204311.138171208003769,95868.147413262995542
> 204276.953978133999044,95913.726337361600599
> 204208.585591985989595,95942.213164923101431
> 204180.09876442499808,95965.002626972403959
> 204157.309302376001142,95987.792089021706488
> 204145.914571350993356,96084.647302731100353
> 204134.51984032598557,96124.528861317405244
> 204140.21720583899878,96147.31832336660591
> 204174.401398913003504,96215.686709514498943
> 204231.375054036005167,96289.744543380205869
> 204276.956000073987525,96357.775156774005154
> 204294.150782276992686,96403.54823514999589
> 204282.698341543989955,96443.465480935905362 204259.395140887994785))
> POLYGON ((97379.69609377119923 202979.630588474014075,97379.69609377119923
> 202939.763166871009162,97370.816763643902959
> 202891.107467108988203,97366.367063687604968
> 202842.453155708004488,97384.049490547695314
> 202811.487339457002236,97432.616724323495873
> 202793.8076792290085,97472.160665581395733
> 202767.31036199699156,97533.253110045698122
> 202727.646648283000104,97606.384051342305611
> 202661.681929507991299,97631.7369292768999
> 202626.52463997900486,97635.657394362802734
> 202573.670482674002415,97622.386802349996287
> 202498.59961463601212,97578.306151571305236
> 202427.624426269991091,97563.982906141201966
> 202384.228687461989466,97502.839807516298606
> 202401.36737195198657,97450.602510650700424
> 202405.248863521002932,97406.253823669394478
> 202413.294693619012833,97369.856472116196528
> 202421.39302839100128,97341.461777199394419
> 202445.916436797007918,97329.268617145702592
> 202470.475953287008451,97304.86639949590608
> 202486.829125215997919,97280.422709768798086 202490.902257289999397,97
> 227.322537159401691 202515.457330181001453,97190.480924897594377
> 202548.2272318819887,97169.190794828304206
> 202573.076554891013075,97145.24896819969581
> 202594.727774520986713,97105.43719215929741
> 202638.963081232010154,97078.896008132302086
> 202674.351326600997709,97061.201885447706445
> 202687.621918615011964,97043.507762763096252
> 202687.621918615011964,97008.119517393803108
> 202687.621918615011964,96994.848925380298169
> 202683.198387943994021,96968.307741353302845
> 202656.657203917013248,96968.307741353302845
> 202630.116019890003372,96968.307741353302845
> 202599.151305192004656,96968.307741353302845
> 202572.61012116499478,96968.307741353302845
> 202541.645406466996064,96963.88421068219759
> 202462.021854385995539,96959.460680011005024
> 202435.480670358985662,96955.03714933989977
> 202408.93948633200489,96946.190087997500086
> 202391.245363647001795,96925.552543818906997
> 202360.976965517998906,96887.118953676806996
> 202369.06824765400961,96862.319734010205138
> 202383.947779453999829,96825.1209 04510200489
> 202393.867467320000287,96795.361840910205501
> 202398.827311253990047,96768.082699276797939
> 202398.827311253990047,96745.76340157679806
> 202391.387545353994938,96725.924025843502022
> 202366.588325686985627,96693.710606482592993
> 202320.441324142011581,96678.200441605193191
> 202293.298535606998485,96651.057653069699882
> 202266.155747070995858,96627.792405753498315
> 202235.135417315992527,96600.649617218005005
> 202204.11508756200783,96573.506828682497144
> 202165.339675368013559,96519.625359105193638
> 202196.929849209991517,96464.571056878601667
> 202241.165155920985853,96438.029872851606342
> 202272.129870619013673,96411.488688824698329
> 202298.671054645994445,96389.37103546889557
> 202325.212238673004322,96380.523974126495887
> 202342.906361358007416,96367.253382113092812
> 202365.02401471399935,96362.829851441900246
> 202395.988729411998065,96362.829851441900246
> 202422.529913439007942,96371.676912784198066
> 202462.341689479013439,96375.916032883294974
> 202497.729934848000994,96388.2050114 99201646
> 202533.118180218007183,96405.120090032505686
> 202564.082894916005898,96426.7908017742011
> 202586.200548271997832,96453.119579642705503
> 202595.047609614004614,96490.566428868100047
> 202603.574835862993496,96543.648796922003385
> 202621.26895854799659,96579.03704229129653
> 202634.539550560992211,96605.578226318306406
> 202647.810142573987832,96618.848818331694929
> 202669.92779593000887,96623.272349002902047
> 202705.316041299985955,96632.119410345199867
> 202736.280755998013774,96632.119410345199867
> 202758.398409352987073,96694.048839741401025
> 202864.563145460997475,96729.43708511069417
> 202908.798452173010446,96804.637106520400266
> 202935.339636199991219,96947.960314555093646
> 202997.15845879499102,96992.828125 203011.8125,97059.3515625
> 203028.375,97273.306340628405451 202984.637165093008662,97379.69609377119923
> 202979.630588474014075)) POLYGON ((110369.727208244003123
> 202109.096987663011532,110415.99249505699845
> 202131.338588604005054,110452.049460088004707
> 202152.213673621998169,110511.102669172993046
> 202199.744305325002642,110555.940425306005636
> 202226.646959003992379,110591.810630211999523
> 202232.027489739994053,110620.506794137007091
> 202221.266428269009339,110654.583488798001781
> 202197.950795079988893,110686.866673212993192
> 202167.461120908992598,110697.76748490499449
> 202134.31779342298978,110695.834224439997342
> 202115.44932379500824,110688.660183458996471
> 202052.676465210010065,110672.045895691000624
> 201923.910900841001421,110646.510379936997197
> 201880.642388036008924,110612.432682764992933
> 201822.899623383011203,110597.777173782000318
> 201798.066677607013844,110559.905365714002983
> 201695.812795823992928,110559.905365714002983
> 201585.98455242800992,110605.351535395995597
> 201483.730670643999474,110630.033506861000205
> 201450.821375358005753,110647.010524269993766
> 201411.774235315999249,110664.997949170996 435
> 201385.792399347992614,110715.17977879299724
> 201313.307534338993719,110809.646276861996739
> 201241.214680550008779,110807.609080444002757
> 201229.61090067398618,110865.728651569996146
> 201026.240190756012453,110866.998232223995728
> 200997.886222798988456,110854.951059397004428
> 200943.947773880005116,110844.241217468006653
> 200897.538458852999611,110840.671270157996332
> 200854.699091135989875,110840.671270157996332
> 200797.579934181005228,110847.811164778002421
> 200747.600671844993485,110862.090954016995966
> 200704.761304128012853,110879.940690564995748
> 200672.631778340000892,110951.339636760007124
> 200636.932305243011797,110994.179004477002309
> 200633.362357932986924,111109.948292257002322
> 200641.863893230998656,111123.339528140000766
> 200633.829151701997034,111166.941672500004643
> 200590.22700734200771,111191.857183562999126
> 200565.311496278998675,111204.850082824006677
> 200560.586805638013175,111260.374838985997485
> 200540.39598521500011,111322.663616644000285 200527.938229683990357,
> 111366.265761004004162 200509.251596387010068,111441.012294193002163
> 200478.107207558001392,111490.84331631900568
> 200471.87832979200175,111584.276482804998523
> 200446.962818728992715,111615.420871634007199
> 200459.420574260991998,111618.754750174004585
> 200397.995547950995388,111632.780269737995695
> 200306.829670781997265,111640.725540886996896
> 200230.776272207993316,111654.006048176001059
> 200124.532213894010056,111662.584498812997481
> 200042.097989002999384,111666.090878703995259
> 199970.217201235005632,111667.844068649996188
> 199921.127882759989006,111660.831308866996551
> 199884.310893902991666,111634.533459683996625
> 199849.247094991995255,111611.741990391994477
> 199829.962005590990884,111585.444141208005021
> 199821.196055862994399,111543.987511389001156
> 199827.293809841998154,111496.031453984993277
> 199847.493905045994325,111470.80239930699463
> 199873.490289578010561,111388.89734465899528
> 199853.879220155999064,111356.20782830400276
> 199844.344777885009535,111308.53561695299868 199833
> .448272434005048,111266.311658327002078
> 199828.00001970800804,111232.094262402999448
> 199829.267330667993519,111214.553257431995007
> 199852.517156974005047,111213.19119425000099
> 199878.396357421996072,111220.001510157002485
> 199896.103178780991584,111233.622141971995006
> 199927.430631955008721,111251.32896333100507
> 199958.758085128996754,111281.294353322999086
> 199996.895854209986283,111297.639111501004663
> 200022.775054658006411,111309.897680134003167
> 200047.292191924003419,111313.983869678995688
> 200074.53345555299893,111315.345932860000175
> 200100.412656000989955,111310.230381108995061
> 200131.56333892600378,111302.611683005001396
> 200140.705776649992913,111295.901875112002017
> 200148.757546122011263,111272.071038003006834
> 200158.289880966010969,111248.240200893997098
> 200158.289880966010969,111210.110861520006438
> 200153.523713544011116,111191.046191832996556
> 200153.523713544011116,111124.319847927996307
> 200124.926709013991058,111032.070346679000068
> 200070.00996090398985,110988.27920 7629995653
> 200094.338371487014228,110939.622386464994634
> 200099.204053603985813,110876.368518949995632
> 200094.338371487014228,110887.179114473998197
> 200112.815516183007276,110920.899024181999266
> 200191.495305501011899,110932.138994084001752
> 200236.455185111990431,110926.519009133000509
> 200264.555109868000727,110909.65905427900725
> 200303.895004527992569,110887.179114473998197
> 200320.754959382000379,110819.73929505799606
> 200354.474869089986896,110746.679490691007231
> 200365.714838991989382,110690.479641177997109
> 200376.954808895010501,110651.139746518005268
> 200410.674718602997018,110623.039821761994972
> 200461.254583164991345,110617.419836810004199
> 200523.074417628988158,110623.039821761994972
> 200568.034297239995794,110673.619686324003851
> 200652.334071508987108,110677.821292916007224
> 200662.312887167005101,110680.023641220002901
> 200726.180987986008404,110676.453693910996662
> 200758.310513773991261,110651.026699641006417
> 200812.155913402995793,110640.381197891998454 200823.6885402
> 97996951,110604.890299189006328
> 200865.632329674990615,110572.625845821996336
> 200894.670337704999838,110517.77627509899321
> 200949.519908427988412,110495.191157741995994
> 200985.010807131009642,110479.058931059000315
> 201026.954596508003306,110466.153149712001323
> 201136.653737954009557,110438.0859375 201229.015625,110446.6015625
> 201337.234375,110344.314421453003888
> 201602.105833000008715,110287.013674981993972
> 201633.079209471005015,110265.860575208993396
> 201654.23230924399104,110258.809541951995925
> 201701.239197627990507,110247.057819855996058
> 201759.997808109008474,110195.350242632994195
> 201835.208829523005988,110167.146109602006618
> 201875.164684649993433,110167.146109602006618
> 201926.872261873009847,110192.999898213995039
> 201959.777083741995739,110216.954095802997472
> 201977.918410626007244,110222.731091177993221
> 201988.233513631013921,110233.0099750340014
> 201995.575573528010864,110245.597153832000913
> 202004.566415526991477,110291.329279141995357 202007.832995906006545,110343
> .594565210005385 202027.432478181988699,110363.194047484998009
> 202086.23092500801431,110369.727208244003123 202109.096987663011532))
> POLYGON ((115970.776603916005115
> 201219.568979436997324,115948.415507140001864
> 201211.437671518011484,115877.876667327000177
> 201215.113361513998825,115770.861078696994809
> 201234.570741264993558,115673.504226935998304
> 201252.271987040003296,115605.38008013900253
> 201252.271987040003296,115568.221454612998059
> 201264.658195547992364,115555.83524610499444
> 201369.940967870992608,115580.607663122005761
> 201679.596180583990645,115580.607663122005761
> 201784.878952906990889,115586.919505661993753
> 201831.379849018994719,115648.731809919001535
> 201840.616891195997596,115884.069771580994711
> 201828.230682686989894,116001.422393611006555
> 201782.310091457999079,116026.511169429999427
> 201772.492744399001822,116038.897377938003046
> 201691.982389092998346,116026.511169429999427
> 201462.837531685014255,116010.073922094001318
> 201342.297717889014166,116007.931856666997191
> 201326.589238090993604,115985.006392772993422
> 201243.962903192004887,115970.776603916005115 201219.568979436997324))
> POLYGON ((98517.229711620195303 201597.843524243013235,98500.590508182605845
> 201528.303423192002811,98478.448680703804712
> 201488.448133730009431,98468.337419422197854
> 201471.596031594002852,98516.251840334502049
> 201474.406492373993387,98557.015183074705419
> 201461.84359671198763,98610.332209236396011
> 201443.009478722990025,98695.018452723903465
> 201443.011445915006334,98729.520536303592962
> 201455.562406898010522,98754.607470718794502
> 201477.524293372989632,98767.144678276294144
> 201502.624739994993433,98770.27906639680441
> 201530.864273893996142,98779.685264336803812
> 201565.380953930987744,98785.955167396095931
> 201593.622960754000815,98792.208737969893264
> 201625.063442117010709,98798.48112619240419
> 201647.06419227400329,98807.865833855903475
> 201681.591490964987315,98814.079151654601446
> 201706.722715504001826,98823.394519565306837
> 201735.010467757005244,98832.720899762105546
> 201757.017490892991191,98841.9955039366032
> 201785.326495837012772,98854.454088786806096 201807.334191939007
> 724,98870.110594349302119 201823.030862001993228,98895.293073446606286
> 201829.245918158005225,98942.534181592505774
> 201832.254326708993176,98999.191873311501695
> 201825.851877206005156,99033.766218002405367
> 201825.80423142699874,99104.144210250597098
> 201814.518008176004514,99124.319636261396226
> 201736.747885538003175,99122.505474449804751
> 201711.941592315997696,99141.3037583444966
> 201620.635641970991855,99165.801258116000099
> 201559.391892541985726,99190.298757887401734
> 201506.31397637000191,99231.127924173299107
> 201471.609185026987689,99247.459590687605669
> 201455.277518513001269,99280.122923716204241
> 201449.153143570001703,99314.827715059203911
> 201453.236060199007625,99361.781256287795259
> 201459.360435142007191,99412.81771414510149
> 201459.360435142007191,99472.020005259502796
> 201463.443351769994479,99531.986711309000384
> 201469.049295456003165,99558.680212357605342
> 201474.769331394985784,99581.560356113506714
> 201467.142616809986066,99617.787250393696013 201442.355794408009388,
> 99663.547537905498757 201387.06211366399657,99683.891798950600787
> 201354.696907219011337,99696.696507354907226
> 201297.682870413991623,99702.091943024803186
> 201238.333078044001013,99719.239123384293634
> 201205.061434551986167,99837.651282128703315
> 201210.617192092002369,99856.793144177296199
> 201133.5349045789917,99882.275247354496969
> 201044.347543459007284,99882.275247354496969
> 200980.917275145009626,99824.486152769197361
> 200927.583312781003769,99745.811495629997808
> 200895.688181509001879,99696.905627678701421
> 200889.309155254013604,99647.999759727303172
> 200889.309155254013604,99603.346575945601217
> 200865.919392320996849,99577.830470927496208
> 200825.518892708991189,99573.357162895204965
> 200799.411616111989133,99565.265625 200752.1875,99480.932122314494336
> 200662.115995802014368,99385.374235400202451
> 200566.558108888013521,99302.5574000744964
> 200528.334954121994087,99206.999513160204515
> 200477.370747768,99124.182677834498463
> 200445.518118795996998,99041.365842508806963 200413.6
> 65489825012628,98964.919532977393828
> 200407.294964030006668,98913.955326623094152
> 200413.665489825012628,98831.138491297402652
> 200420.036015618999954,98780.174284943102975
> 200407.294964030006668,98741.951130177403684
> 200400.924438235990237,98703.727975411704392
> 200400.924438235990237,98684.616398028796539
> 200420.036015618999954,98652.763769057404716
> 200458.259170384990284,98627.281665880203946
> 200509.223376739013474,98614.540614291705424
> 200553.817057298991131,98594.275308945696452
> 200604.480320664006285,98571.626018197406665
> 200622.935298311000224,98552.068272292599431
> 200630.86704303798615,98539.96058198279934
> 200635.777379292994738,98529.926012361902394
> 200633.773593049001647,98474.484423382295063
> 200617.259077183000045,98427.222740973404143
> 200585.119586117012659,98419.274888489802834
> 200571.873165311000776,98411.327036006099661
> 200555.977460344001884,98406.028467683703639
> 200540.081755377002992,98401.037026831007097
> 200510.133110260008834,98404.313263080301112 200477.37
> 0747768,98407.278023908293108 200471.441226111986907,98429.795366257400019
> 200426.406541412987281,98480.759572611699696
> 200388.183386647986481,98488.25505414759391
> 200361.949201271985658,98543.145972666199668
> 200334.503742011991562,98591.819421780499397
> 200306.110896695987321,98664.829595452101785
> 200245.269085303007159,98717.55916532590345
> 200200.651756948005641,98758.120372921199305
> 200164.146670112007996,98782.457097478400101
> 200139.809945554996375,98798.68158051649516
> 200103.30485871899873,98806.793822035600897
> 200070.855892643012339,98802.73770127609896
> 200038.406926566996844,98786.513218237902038
> 199989.733477452013176,98770.288735199806979
> 199961.340632136008935,98721.61528608550725
> 199920.779424540000036,98676.997957730694907
> 199916.723303781007417,98652.661233173494111
> 199912.667183020996163,98620.21226709720213
> 199912.667183020996163,98595.875542540103197
> 199920.779424540000036,98567.482697223400464
> 199937.003907578997314,98547.202093425701605 199957.28451137599768
> 1,98518.809248108998872 199981.621235933009302,98486.460399380899617
> 200004.265430042985827,98489.364318489300786
> 200024.592863802012289,98464.802109638505499
> 200078.629723274003481,98464.262699141996563
> 200093.193806678988039,98456.011726631099009
> 200126.197696722985711,98446.110559617896797
> 200146.000030749011785,98427.958420093797031
> 200172.403142783994554,98418.057253080696682
> 200183.954504299006658,98408.156086067494471
> 200197.156060317007359,98396.60472455220588
> 200218.608588845003396,98389.500370249093976
> 200231.29375635299948,98371.598643074597931
> 200238.965925141994376,98333.319407395203598
> 200255.371311861992581,98306.025194557703799
> 200269.018418280989863,98269.112592705001589
> 200287.474719207006274,98204.73896747980325
> 200334.291901188989868,98189.019572151999455
> 200338.221750021009939,98158.245990918396274
> 200357.159338472003583,98089.639685200498207
> 200385.102408289007144,98081.517923983104993
> 200385.283505508996313,97960.390625 200387.984375,97960.53125 200462
> .90625,97952.702348880004138 200468.807172528991941,97874.982343940704595
> 200497.440858559013577,97815.760852863502805
> 200515.508432108006673,97788.264959257794544
> 200516.404931988014141,97628.1640625 200521.625,97545.140625
> 200571.6875,97453.8828125 200663.390625,97432.172966100901249
> 200719.611832947004586,97432.172966100901249
> 200814.149674026994035,97391.632047611507005
> 200906.814630575012416,97310.550210632602102
> 200953.147108848002972,97281.592411711593741
> 201005.271146905986825,97298.967091064201668
> 201080.561424101004377,97393.154077968996717
> 201180.288822000002256,97384.492606533298385
> 201213.852023813000415,97375.972918158804532
> 201247.930777311004931,97371.713073971506674
> 201286.269374997005798,97367.453229784296127
> 201324.607972681988031,97364.349836419205531
> 201353.322511200996814,97357.407588963804301
> 201381.091501023009187,97343.523094052899978
> 201415.802738300000783,97337.572596233905642
> 201434.645981393987313,97336.809815142099978 201461.818765625008382,9734
> 9.513871174698579 201469.943252592987847,97379.341626658599125
> 201485.734417261002818,97407.229792953803553
> 201494.07962061901344,97433.735589097006596
> 201507.332518690993311,97461.359725811693352
> 201478.776649344014004,97475.033982932800427
> 201462.367540798994014,97491.434609434494632
> 201440.47153929900378,97505.10609183460474
> 201432.261041699995985,97516.037888276798185
> 201432.245611541991821,97526.964731954096351
> 201432.220416394993663,97537.883803492994048
> 201437.649572066002293,97548.795392309693852
> 201448.533621701004449,97559.70561598999484
> 201467.6195666519925,97573.361707977295737
> 201486.727366033999715,97589.557681029094965
> 201502.710318421013653,97597.734362054106896
> 201524.53357453100034,97600.60133329690143
> 201535.737971330003347,97606.57535659680434
> 201558.627370881004026,97612.051900806705817
> 201577.785811322013615,97628.556533691604272
> 201594.389318625995656,97647.728598830304691
> 201602.651486807008041,97661.417486119898967
> 201605.419739005010342,97677.844237 103301566
> 201605.461036202003015,97697.004495247500017
> 201605.503469821007457,97713.42738492290664
> 201602.802923312992789,97729.850563829895691
> 201597.364262980991043,97751.750086228101281
> 201583.724703571002465,97762.706400898299762
> 201564.597978879988659,97791.824471388303209
> 201508.831175463012187,97781.584295108594233
> 201488.350822904001689,97775.440189340806683
> 201461.726364575995831,97773.392154084795038
> 201439.197976761002792,97773.392154084795038
> 201420.765659458003938,97773.392154084795038
> 201406.429412666009739,97771.344118828899809
> 201385.949060106009711,97769.296083572902717
> 201344.988354987988714,97767.248048316992936
> 201306.075685124989832,97759.658281083698967
> 201286.342290317988954,97752.91301846850547
> 201282.753545754996594,97759.2005225696048
> 201278.963012697990052,97795.810685377102345
> 201238.285054022999248,97803.946277112103417
> 201181.3359118780063,97799.878481244595605
> 201120.318973865010776,97787.675093642101274
> 201079.641015189990867,97767.33611430460 5871
> 201030.827464780013543,97771.403910172099131
> 200982.013914370007114,97803.946277112103417
> 200953.539343298005406,97840.556439919702825
> 200937.268159828003263,97917.844561402205727
> 200920.99697635800112,97966.658111812299467
> 200900.657997019996401,98011.403866354899947
> 200888.454609417996835,98117.166558910001186
> 200892.522405285009881,98157.844517585006543
> 200912.861384622985497,98194.454680392605951
> 200949.471547430002829,98226.997047332595685
> 200977.946118502994068,98271.742801875196164
> 200998.285097840009257,98312.420760550201521
> 200998.285097840009257,98349.03092335780093
> 200990.149506104993634,98389.708882032806287
> 200977.946118502994068,98430.386840707898955
> 200973.878322634991491,98454.793615912902169
> 200986.081710238009691,98466.9970035153965
> 201006.420689574995777,98466.9970035153965
> 201047.098648249986582,98462.92920764790324
> 201071.505423455004347,98422.25124897279602
> 201136.590157335012918,98393.776677900299546
> 201156.929136672988534,98365.302106827803073 20
> 1173.200320142990677,98288.013985345198307
> 201209.810482950008009,98255.471618405194022
> 201230.149462288012728,98235.741011640697252
> 201247.413743206998333,98215.428414689595229
> 201273.563125437009148,98204.592879323899979
> 201303.360847692005336,98141.827769452604116
> 201339.880363094998756,98126.28200495299825
> 201346.54283359501278,98112.957063953304896
> 201355.426127593993442,98097.41129945369903
> 201362.088598094007466,98075.203064454297419
> 201386.517656593001448,98061.878123454604065
> 201404.284244593000039,98055.215652954793768
> 201419.830009093013359,98052.994829454793944
> 201439.817420592007693,98052.994829454793944
> 201450.921538091992261,98052.994829454793944
> 201468.688126091001322,98068.54059395439981
> 201488.67553759101429,98074.24727909489593
> 201495.095558374014217,98086.3071819540055
> 201508.662949090008624,98108.515416953407112
> 201519.767066589993192,98150.711063452297822
> 201521.987890090007568,98183.821754554504878
> 201497.59053875200334,98192.906709951304947 201490.896
> 361090999562,98206.231650950998301
> 201477.571420091000618,98232.881532950297697
> 201455.363185091991909,98261.479439994101995
> 201460.476110496005276,98320.731431522901403
> 201532.296706288005225,98335.984207369605429
> 201547.643376371008344,98340.592006721301004
> 201552.279540776013164,98364.980947752206703
> 201595.294607529009227,98372.965486600704025
> 201594.230002349009737,98411.086400598898763
> 201592.323956648993772,98449.207314597195364
> 201598.042093749012565,98477.7980000959069
> 201596.136048048996599,98492.59790267610515
> 201594.242418620007811,98504.327968303201487
> 201595.060795291996328,98517.229711620195303 201597.843524243013235))
> POLYGON ((111268.085558616992785
> 201117.678019579994725,111228.315737778000766
> 201168.982642440008931,111216.591625179993571
> 201204.732609305006918,111202.522343101998558
> 201240.535305389988935,111190.852409072002047
> 201288.251953380007762,111181.470461331002298
> 201316.844429777003825,111169.715981179993832
> 201354.88084900699323,111148.467266656007268
> 201404.662459124985617,111137.268502816004911
> 201422.708713806991,111148.926390029999311
> 201499.646909570001299,111153.948041715004365
> 201518.059632416989189,111160.265205866002361
> 201541.222567638003966,111171.604021702994942
> 201586.577830985013861,111205.620469212997705
> 201662.16993656300474,111219.432669955000165
> 201669.843381420010701,111239.636916723000468
> 201681.067962956993142,111269.873758953996003
> 201684.84756823600037,111300.11060118500609
> 201681.067962956993142,111330.347443416001624
> 201665.949541842011968,111364.363890926993918
> 201639.492304888990475,111398.380338436996681
> 201609.255462658009492,111473.97244401399802 9
> 201582.798225706006633,111547.173674204997951
> 201572.503483340988168,111569.1484375 201577.1875,111743.6875
> 201568.625,111837.856439356997726
> 201534.673544504999882,111899.081475886996486
> 201491.537723313987954,111935.259906563005643
> 201458.142248843010748,111938.442736305994913
> 201451.49559855600819,111947.709641395995277
> 201447.151736795000033,111981.467811139998958
> 201401.117868962988723,111993.743509228006587
> 201352.015076607989613,111996.812433750004857
> 201312.119057820993476,111990.674584705993766
> 201278.360888077004347,111953.847490440006368
> 201238.464869288989576,111901.675773563998519
> 201213.913473112013889,111837.228358598993509
> 201207.775624067988247,111694.292244825002854
> 201193.169113206007751,111600.935451490004198
> 201193.169113206007751,111547.075763027998619
> 201196.759759103995748,111489.625428668005043
> 201196.759759103995748,111435.765740204995382
> 201196.759759103995748,111385.496697640002822
> 201193.169113206007751,111338.818300971994177 201168.03459192399
> 1684,111292.139904305004166 201135.718778845999623,111268.085558616992785
> 201117.678019579994725)) POLYGON ((107998.849780966003891
> 201004.462561169988476,107998.849780966003891
> 200987.818225914990762,107973.631091185001424
> 200917.205894527985947,107993.806043010001304
> 200866.768514966010116,108019.024732791003771
> 200826.418611316010356,108049.287160527994274
> 200775.981231754005421,108074.505850308996742
> 200750.762541973002953,108109.812016002993914
> 200725.543852192000486,108128.643901174000348
> 200719.266557135008043,108135.613802649997524
> 200684.417049753013998,108145.975263621003251
> 200656.786487164994469,108156.336724591004895
> 200632.609744901012164,108163.244365238002501
> 200611.886822959990241,108173.605826208993676
> 200587.710080694989301,108170.152005885000108
> 200556.62569778400939,108159.790544914998463
> 200532.44895551900845,108111.437060386000667
> 200466.826369373011403,108080.352677474002121
> 200453.011088078987086,108052.722114885997144
> 200446.10344743198948,108014.730091328005074
> 200442.649627108010463,108000.914810033995309
> 200442.649627108010463,107973.2842474460 04883
> 200446.10344743198948,107959.468966151995119
> 200446.10344743198948,107938.7460442110023
> 200446.10344743198948,107914.093793441003072
> 200439.708612234011525,107886.938739359000465
> 200428.834345813986147,107852.400536123997881
> 200408.111423872993328,107815.544412581002689
> 200394.448896579997381,107776.6953125 200383.328125,107776.5546875
> 200308.40625,107676.578125 200183.65625,107659.8125
> 200108.75,107556.343737217001035
> 200092.166535727999872,107494.47070815799816
> 200074.878483490989311,107439.876858988005552
> 200048.491456391988322,107367.085060095007066
> 199986.618427333014552,107266.384278807003284
> 199915.697205117001431,107241.818919078999897
> 199896.590814216993749,107187.229230793993338
> 199882.943392146000406,107151.74593340899446
> 199885.67287656001281,107113.533151609997731
> 199891.131845388998045,107088.967791881994344
> 199891.131845388998045,107056.213978910993319
> 199882.943392146000406,107034.378103597002337
> 199869.295970075007062,107023.460165940006846 199844.7306
> 10347003676,107020.730681525994441
> 199811.976797376002651,107020.730681525994441
> 199781.95246881901403,107020.730681525994441
> 199743.739687019988196,107015.271712696994655
> 199721.903811705997214,106998.894806212003459
> 199702.797420805989532,106987.976868554993416
> 199686.420514321012888,106957.952539998004795
> 199667.314123421005206,106925.19872702700377
> 199648.207732520997524,106897.903882885002531
> 199626.371857207996072,106849.05252141400706
> 199602.343557815009262,106815.979063035993022
> 199580.294585563009605,106777.393361594993621
> 199569.270099437999306,106716.758687901994563
> 199580.294585563009605,106683.685229524999158
> 199635.417016193008749,106639.587285020999843
> 199751.174120515002869,106479.732236195006408
> 200026.786273664009059,106457.68326394300675
> 200131.51889186000335,106457.68326394300675
> 200175.616836364002666,106457.68326394300675
> 200208.690294742002152,106457.68326394300675
> 200252.788239246001467,106468.707750069006579
> 200302.398426811996615,106507.293451509001 898
> 200368.545343567995587,106573.44036826500087
> 200396.106558883009711,106612.026069706000271
> 200390.594315819995245,106639.587285020999843
> 200374.057586631010054,106678.172986461999244
> 200280.349454560986487,106689.197472586994991
> 200241.763753120001638,106705.734201775994734
> 200192.153565552987857,106711.246444838994648
> 200159.08010717498837,106727.783174027994392
> 200114.982162672007689,106749.832146279994049
> 200087.420947356993565,106793.930090783993364
> 200076.396461230993737,106838.028035288007231
> 200081.908704294008203,106862.951781445997767
> 200094.370577372988919,106905.74124062199553
> 200117.180722666002112,106952.436942861997522
> 200160.863798954989761,106964.487446665996686
> 200180.445867636997718,106964.487446665996686
> 200206.053188219986623,106962.981133691006107
> 200237.685760705004213,106953.943255838006735
> 200276.849898068001494,106952.436942861997522
> 200288.900401872000657,106952.436942861997522
> 200305.469844603008823,106955.449568812997313 200325.051913283998147
> ,106958.462194763997104 200338.608730064006522,106967.500072616996476
> 200355.178172793996055,106976.537950469995849
> 200370.241302548995009,106979.55057642099564
> 200383.798119328013854,106979.55057642099564
> 200403.380188009992708,106975.03163749500527
> 200427.481195617991034,106959.968507740006316
> 200454.594829175999621,106914.779118474994902
> 200487.73371463699732,106887.846888999993098
> 200526.738417268992634,106881.796058495005127
> 200537.831606529012788,106882.566679543000646
> 200577.377907629008405,106891.375725424004486
> 200600.281426920992089,106898.422962128999643
> 200621.423137036996195,106911.991120316000888
> 200653.819044495990966,106956.072870734002208
> 200642.49438741299673,107026.973464235998108
> 200625.613293722009985,107084.369182784997975
> 200615.484637507004663,107131.636245119007071
> 200608.732200030994136,107202.536838621002971
> 200612.1084187689994,107283.56608833700011
> 200639.118168674001936,107364.595338052997249
> 200686.385231008986011,107422.623317044999567 200754.
> 6566359649878,107428.3046875 200758.4375,107519.90625
> 200849.890625,107569.796875 200858.15625,107688.684005250994232
> 200872.639674481004477,107818.615005351995933
> 200923.428230226010783,107998.849780966003891 201004.462561169988476))
> POLYGON ((100820.131850730002043
> 199887.003397961991141,100885.533219525997993
> 199861.30192309000995,100952.217017300004954
> 199863.96805923001375,100994.903952544002095
> 199847.97308000701014,101010.913533093000297
> 199810.635010344994953,100991.947106438004994
> 199758.174590921989875,101056.346296178002376
> 199727.611090463004075,101061.750951698995777
> 199668.159879740007455,101067.137167517998023
> 199608.911505724012386,101045.555424838996259
> 199387.698643256997457,100996.996503809001297
> 199150.299473780003609,100878.296919070999138
> 198902.109432963014115,100856.715176390993292
> 198772.618976883997675,100864.15430682200531
> 198623.836368265998317,100867.506047731003491
> 198556.801550086995121,100851.319740720995469
> 198492.05632204801077,100802.760819691000506
> 198481.26545070798602,100565.361650214006659
> 198492.05632204801077,100424.033609007004998
> 198481.579414164007176,100393.254428033993463
> 198594.244985218014335,100405.424652344998321
> 198653.743859626003541,100409.1328125 198653 .03125,100417.6015625
> 198736.28125,100399.52124121900124
> 198864.749107434996404,100359.435855478994199
> 198909.303347189008491,100327.482004848003271
> 198970.195952045993181,100285.297103409000556
> 199065.815061973989941,100299.358737222006312
> 199169.871152189996792,100333.106658374003018
> 199234.554667730000801,100403.414827437998611
> 199279.55189593200339,100445.599728877001326
> 199332.986104420997435,100454.036709164996864
> 199394.857293198001571,100428.725768301999778
> 199459.54080873800558,100450.787415455997689
> 199495.894313235010486,100464.123712978005642
> 199522.566908278997289,100480.127270003999001
> 199551.90676282599452,100485.461789013002999
> 199589.248395886999788,100477.460010499999044
> 199618.588250434986548,100477.460010499999044
> 199650.595364487002371,100480.127270003999001
> 199685.269738042989047,100485.461789013002999
> 199719.944111599004827,100495.744669520005118
> 199767.420663550001336,100536.869912266993197
> 199775.813570233003702,100588.364197706003324 199792.49996045
> 9012073,100605.580061590997502 199798.238581754005281,100619.926614829004393
> 199818.323756286990829,100651.489031952005462
> 199832.670309525012271,100697.398002311994787
> 199852.755484057008289,100726.134032287998707
> 199872.771992027992383,100763.392147206002846
> 199884.317901180009358,100820.131850730002043 199887.003397961991141))
> POLYGON ((111815.733728721999796
> 198450.488435937004397,111847.268409116004477
> 198440.077184658002807,112084.885448607004946
> 198472.47950822499115,112199.600032269998337
> 198472.47950822499115,112278.088957934000064
> 198472.47950822499115,112338.465054599000723
> 198472.47950822499115,112435.066809262003517
> 198460.404288891993929,112501.480515593997552
> 198436.253850226989016,112610.157489589997567
> 198412.103411560994573,112755.060121585003799
> 198412.103411560994573,112851.661876248996123
> 198412.103411560994573,112960.338850244996138
> 198412.103411560994573,113032.790166242994019
> 198400.028192227997351,113081.091043574997457
> 198400.028192227997351,113171.655188571996405
> 198393.990582561003976,113253.859714706995874
> 198366.124816608993569,113278.053522946996964
> 198324.264782934013056,113272.43771138000011
> 198084.293834609008627,113269.966633602001821
> 198060.096763095993083,113249.640625 197945.03125,113203.786119340002188
> 197774.448594243003754,113171.504507050995016 197706.95067763
> 8000343,113174.439199076994555 197657.060913191002328,113192.047351234999951
> 197627.713992928009247,113224.0703125 197603.71875,113233.959184534003725
> 197596.412214148003841,113506.28125 197395.203125,113688.2109375
> 196903.75,113687.6640625 196612.359375,113704.0234375
> 196470.796875,113603.234644808995654
> 196428.332299083005637,113558.082457198994234
> 196422.688275632011937,113501.642222687005415
> 196371.892064571002265,113473.422105431003729
> 196253.367572096001823,113490.354175785003463
> 195959.878352633008035,113479.066128881997429
> 195615.592922109994106,113512.930269589996897
> 195542.220617245009635,113639.649746049995883
> 195509.367419643996982,113926.4609375 195413.15625,114125.6484375
> 195254.71875,114202.534679037999013
> 195177.470489517989336,114259.77493730399874
> 194831.016294750996167,114207.84375 194763.40625,113833.0859375
> 194380.921875,113566.6953125 194156.46875,113258.7421875
> 193940.4375,113258.6640625 193898.796875,113293.772671322003589
> 193817.82771390301059,113200 .3125 193807.296875,113042.892031096998835
> 193730.442804107005941,112845.513918776006903
> 193707.221849716006545,112518.4765625 193666.65625,112473.654395306002698
> 193726.050691479002126,112366.074928963993443
> 193727.905509864998749,112050.755803481006296
> 193675.97059507900849,111886.7734375 193667.5,111662.4296875
> 193709.421875,111471.2734375 193718.0,111313.3203125
> 193701.5625,110589.859375 193527.6875,109849.8984375
> 193420.421875,109674.428238360997057
> 193364.190407821995905,109643.911935800002539
> 193354.411103561986238,109636.86308698799985
> 193363.628828930988675,109617.980973070996697
> 193387.905832540011033,109604.493748843000503
> 193406.787946458003717,109588.309079771002871
> 193428.367505220987368,109564.032076161995064
> 193447.249619139009155,109545.149962244002381
> 193460.736843366001267,109520.872958635998657
> 193482.316402129014023,109504.688289562996943
> 193506.593405738007277,109493.898510181999882
> 193555.147412955004256,109493.898510181999882 193584.819306254998082,10
> 9501.990844718005974 193636.070758318004664,109518.478663130998029
> 193677.290304349997314,109523.570403481004178
> 193690.019655226002214,109546.937757213992882
> 193719.15719378500944,109595.135984431006364
> 193719.99894074301119,109639.015170486993156
> 193731.965991484990809,109702.839441112999339
> 193755.900092969997786,109730.762559512004373
> 193775.845177540992154,109754.696660996996798
> 193791.801245197013486,109786.608796309999889
> 193811.746329768007854,109818.520931624007062
> 193819.724363596003968,109870.378151507000439
> 193823.713380511006108,109902.29028682099306
> 193815.735346681991359,109946.169472876004875
> 193795.790262111986522,109994.037675846004277
> 193775.845177540992154,110049.883912643999793
> 193747.922059142001672,110085.785064871000941
> 193739.944025314005557,110141.631301668996457
> 193723.987957656994695,110189.499504638995859
> 193704.042873086000327,110209.444589210004779
> 193676.119754687009845,110237.367707608995261
> 193648.196636287990259,110253.323775265002041 19363
> 6.22958554601064,110281.246893664007075
> 193628.251551716995891,110317.148045891997754
> 193628.251551716995891,110353.049198118998902
> 193640.218602459994145,110404.906418002996361
> 193668.141720859013731,110424.851502574005281
> 193696.064839258004213,110448.785604057993623
> 193723.987957656994695,110472.7197055430006
> 193735.955008399003418,110508.620857771005831
> 193743.933042227989063,110540.53299308399437
> 193755.900092969997786,110564.467094569001347
> 193807.757312853995245,110552.500043826003093
> 193883.548634222999681,110524.576925426998059
> 193959.339955592004117,110488.675773199996911
> 194019.17520930399769,110440.807570229997509
> 194043.109310789004667,110404.906418002996361
> 194055.07636153101339,110384.681207326997537
> 194070.24526953799068,110378.690533179993508
> 194121.165999788005138,110382.137831747997552
> 194165.980881169001805,110402.821623155003181
> 194207.348463981994428,110430.400011696998263
> 194231.4795539570041,110464.872997375001432
> 194259.057942498999182,110495.8986844 85000558
> 194300.425525311991805,110516.582475891002105
> 194324.556615287001478,110551.055461569005274
> 194365.924198099994101,110571.739252975996351
> 194393.502586641989183,110588.975745814997936
> 194414.186378048994811,110602.764940085995477
> 194427.975572319992352,110647.579821467006695
> 194452.106662294012494,110699.289299983996898
> 194459.001259429991478,110750.99877849999757
> 194472.790453700989019,110799.260958448998281
> 194503.816140810988145,110902.679915482993238
> 194579.656709302013041,110909.574512617997243
> 194610.682396412012167,110888.890721211995697
> 194655.497277793008834,110850.970436966003035
> 194696.864860606990987,110826.839346991997445
> 194724.443249148986069,110799.260958448998281
> 194755.468936259014299,110775.129868475007243
> 194776.152727665990824,110744.104181364993565
> 194803.731116207985906,110723.420389958002488
> 194817.520310479012551,110706.183897119000903
> 194827.862206182006048,110682.052807144995313
> 194827.862206182006048,110633.790627195994603 194810.62571334
> 3004463,110620.001432924997061 194793.389220504992409,110616.381589349999558
> 194787.506974694988457,110566.667336259997683
> 194679.39820210300968,110558.904200233999291
> 194655.566445323987864,110526.745649167001829
> 194576.406935005012201,110471.086618474000716
> 194478.694414455007063,110356.057955041003879
> 194337.69153670000378,110316.275487902996247
> 194290.693536278005922,110311.222265635995427
> 194285.279369564988883,110293.364211267005885
> 194266.14573988399934,110262.270335833993158
> 194244.870983008004259,110239.359059199006879
> 194239.961423728993395,110221.41163995199895
> 194242.560156496008858,110189.499504638995859
> 194286.439342550991569,110157.587369325992768
> 194310.373444035998546,110121.686217099006171
> 194326.329511693009408,110085.785064871000941
> 194334.307545521005522,110017.971777330996701
> 194330.318528606992913,109990.048658932006219
> 194314.362460950011155,109942.180455962006818
> 194278.461308722995454,109874.367168422002578
> 194218.626055011001881,109794.586830139000 085
> 194182.724902783986181,109718.795508769995649
> 194130.867682899988722,109659.058659543006797
> 194077.035090835997835,109581.251346231001662
> 194208.078986940003233,109515.729398180003045
> 194261.315569731988944,109488.433917642003507
> 194278.722835310007213,109457.575631821004208
> 194313.568754828011151,109438.493298322995543
> 194343.555278894986259,109409.705012545004138
> 194404.24409756399109,109404.997259455994936
> 194460.73713463099557,109404.997259455994936
> 194551.758506092999596,109411.498785988995223
> 194655.782930621993728,109426.144104053993942
> 194721.686861914000474,109437.504892120996374
> 194772.810408215998905,109463.510998252997524
> 194857.330253146006726,109483.015577851998387
> 194993.862310339987744,109528.007431628997438
> 195130.999671480007237,109540.300128699003835
> 195211.383816480985843,109555.880347643993446
> 195235.86701768101193,109568.965980972003308
> 195256.430155767011456,109589.441589737994946
> 195276.905764533003094,109622.202563764003571 195305.571616805013036
> ,109639.265571069001453 195322.634624111000448,109740.961094607002451
> 195358.808199596998747,109786.007433892998961
> 195362.903321351011982,109826.958651424996788
> 195379.283808364009019,109863.814747204000014
> 195391.569173622992821,109884.290355970006203
> 195399.759417130000656,109929.336695256002713
> 195420.235025895992294,109966.192791035005939
> 195436.615512908989331,109998.953765061000013
> 195461.186243428004673,110023.524495580000803
> 195473.471608688007109,110039.90498259299784
> 195502.137460959987948,110048.095226100005675
> 195534.898434986011125,110039.90498259299784
> 195559.469165505986894,110019.429373827006202
> 195575.849652519013034,109982.573278048002976
> 195584.039896025002236,109925.24157350299356
> 195579.944774272007635,109876.10011246400245
> 195551.278921999008162,109806.48304265900515
> 195543.088678492989857,109761.956388874998083
> 195546.269153762987116,109700.009877075004624
> 195543.088678492989857,109671.344024802005151
> 195567.659409012005199,109667.248903048995999 1956
> 33.181357063993346,109679.534268308998435
> 195686.417939856008161,109708.200120581997908
> 195739.654522647993872,109736.865972853993298
> 195776.51061842701165,109753.246459867004887
> 195817.461835958994925,109765.531825126992771
> 195858.413053491007304,109788.978252504995908
> 195983.993203116988298,109793.363455138998688
> 196007.48055127900443,109814.018998974002898
> 196069.447182784002507,109840.752424557998893
> 196095.793264584994176,109871.609375 196126.203125,109904.9453125
> 196176.109375,110063.109375 196300.78125,110096.4136863409949
> 196315.760366280010203,110166.434337608006899
> 196350.770691912999609,110213.114771786000347
> 196403.286180363997119,110242.290043147004326
> 196455.801668814005097,110248.125097419993836
> 196514.152211537002586,110302.127712482993957
> 196632.078633472992806,110331.811021425004583
> 196706.407709127990529,110345.945007510003052
> 196740.329275733005488,110352.81304664099298
> 196750.631334428995615,110394.23280571300711
> 196788.624111677985638,110476.28349814799 7307
> 196628.443511113000568,110600.496684736004681
> 196423.73933556600241,110647.735460003998014
> 196333.198349635000341,110705.820310391005478
> 196265.026085896010045,110714.047213368001394
> 196253.508421728009125,110747.577993718994549
> 196235.218905173009261,110775.012268552003661
> 196241.315410690993303,110799.398290626006201
> 196256.556674486986594,110845.122082015004708
> 196302.280465876014205,110939.617917551004211
> 196387.631543133989908,110998.568331817994476
> 196440.031911371013848,111024.263017856006627
> 196397.819212879985571,111011.4229185449949
> 196295.098418395005865,110985.742719924004632
> 196196.657657013012795,111071.343381995000527
> 196051.136531492986251,111289.62507027600077
> 195760.09428045101231,111413.74603027899866
> 195764.374313553998945,111567.82722200700664
> 195785.774479071988026,111649.147850973997265
> 195909.895439074985916,111661.98795028499444
> 195999.776134249987081,111619.18761925000581
> 196106.77696183900116,111495.066659246003837 196303.65848460199777,111353
> .825566828993033 196440.619543915992836,111285.3450371719955
> 196444.899577019998105,111229.704606825995143
> 196483.4198749520001,111131.263845444002072
> 196624.660967369010905,111024.263017856006627
> 196735.94182806101162,110938.66235578400665
> 196778.742159096989781,110870.181826127998647
> 196744.501894268003525,110811.102891139002168
> 196858.729724492994137,110737.7421875 197032.53125,110756.346164237998892
> 197047.054331568011548,110770.603832997003337
> 197058.18449418299133,110875.113836668999284
> 197083.04959394299658,110896.743602483998984
> 197070.88285067101242,110907.558485392000875
> 197053.308665946999099,110914.317787209001835
> 197031.678900130995316,110916.352216811006656
> 196996.0101448080095,110935.402624857000774
> 196968.795276170014404,110949.010059175998322
> 196960.630815579002956,110965.338980358996196
> 196960.630815579002956,110981.667901541004539
> 196960.630815579002956,111000.718309588002739
> 196960.630815579002956,111022.490204497997183
> 196971.516763033985626,111041.54061 2544995383
> 196982.4027104889974,111057.869533727003727
> 196985.124197352997726,111068.755481183005031
> 196987.845684216998052,111104.134810411997023
> 196987.845684216998052,111123.185218458005693
> 196976.959736760996748,111161.286034550998011
> 196949.744868123991182,111172.171982005995233
> 196925.251486349996412,111183.057929461996537
> 196895.31513084800099,111204.829824372005532
> 196857.21431475499412,111229.323206146000302
> 196829.999446116999025,111256.538074783995398
> 196810.949038071004907,111283.752943422005046
> 196805.506064343004255,111319.132272650997038
> 196808.227551207004581,111349.06862815200293
> 196824.556472389987903,111384.447957381999004
> 196851.771341026993468,111400.776878563992796
> 196873.543235938006546,111400.776878563992796
> 196906.201078303012764,111400.776878563992796
> 196941.580407531990204,111400.776878563992796
> 196971.516763033985626,111400.776878563992796
> 197006.89609226299217,111411.662826019004569
> 197061.325829539011465,111404.164896061993204 197180.90642838599
> 1603,111394.814927754996461 197255.706174841005122,111394.814927754996461
> 197296.22270417099935,111404.164896061993204
> 197346.089201808004873,111454.031393698998727
> 197395.955699445010396,111553.764388972995221
> 197473.872102002991596,111588.04760609799996
> 197505.038663026003633,111594.280918303004
> 197558.021816766005941,111585.837985302001471
> 197630.116584069997771,111564.066090391002945
> 197654.609965843992541,111553.180142936005723
> 197670.938887025986332,111547.737169208994601
> 197681.824834481987637,111545.015682344994275
> 197728.090111166005954,111545.015682344994275
> 197738.976058620988624,111558.623116664006375
> 197755.30497980400105,111583.116498438001145
> 197766.190927259012824,111604.888393347995589
> 197774.355387849995168,111626.660288258004584
> 197787.962822169007268,111651.153670031999354
> 197831.506611989985686,111648.43218316900311
> 197864.164454354991904,111623.938801394993789
> 197885.936349264986347,111558.623116664006375
> 197907.708244175999425,111509.636353116002283 19
> 7918.594191631011199,111460.649589566994109
> 197910.429731039010221,111403.498365427993122
> 197875.050401810003677,111357.233088744003908
> 197839.671072580997134,111310.96781205899606
> 197807.013230215990916,111248.37361419199442
> 197771.633900985994842,111207.551311236005859
> 197749.862006076000398,111169.450495142998989
> 197728.090111166005954,111150.400087096000789
> 197714.482676846993854,111112.299271002993919
> 197689.989295072999084,111090.527376092999475
> 197662.774426435003988,111076.919941774001927
> 197632.838070933008566,111068.755481183005031
> 197575.686846794007579,111068.755481183005031
> 197548.471978156012483,111070.287859814998228
> 197534.68057046001195,111071.476968046001275
> 197523.978596381988609,111091.009771636003279
> 197495.418000695004594,111131.016226243998972
> 197450.966384464001749,111162.132357605994912
> 197408.737349044007715,111222.142039519007085
> 197353.172828754002694,111248.813009257995873
> 197315.388954956986709,111251.035590069994214 197290.940566030010814,11124
> 8.813009257995873 197275.382500348991016,111239.92268601199612
> 197248.711530609987676,111231.032362765006837
> 197233.153464928996982,111219.919458706994192
> 197222.04056087101344,111202.138812214994687
> 197210.927656813000795,111177.690423287000158
> 197195.3695911320101,111142.129130301997066
> 197177.588944638991961,111099.900094882003032
> 197164.253459769999608,111081.749084497001604
> 197166.620982863008976,111058.689361659999122
> 197176.585060632001841,111044.335574593002093
> 197188.701848697004607,111022.083831451003789
> 197215.40350705300807,111006.651303645994631
> 197233.040681687998585,110989.014129011993646
> 197255.087149980012327,110969.172307547996752
> 197270.519677784992382,110951.459831883999868
> 197317.549354549992131,110947.125839255997562
> 197323.431201688013971,110889.656463559003896
> 197432.424845250992803,110868.804761520994361
> 197499.150291770987678,110839.181005088001257
> 197575.45390682699508,110677.534281797998119
> 197866.418008748005377,110655.826585394999711 197982.1923
> 89567004284,110675.482207237000694
> 198021.503633251006249,110680.670410663995426
> 198031.880040106014349,110772.8513928619941
> 198091.299247335002292,110851.195853027995327
> 198126.91036559198983,110995.030376869995962
> 198167.363825422013178,111041.742101244002697
> 198166.257691459992202,111070.88276011099515
> 198157.214038708014414,111103.745107648996054
> 198133.209344020986464,111122.914036103000399
> 198126.819701202999568,111181.542586405994371
> 198084.540848561999155,111243.102022350998595
> 198057.920551936986158,111312.980300990995602
> 198039.619098007999128,111406.509511570999166
> 198061.213427170994692,111456.422567742993124
> 198097.816335029987385,111506.335623913997551
> 198174.349687826004811,111552.921143008003128
> 198267.520726012997329,111586.196513788992888
> 198314.106245105998823,111619.471884569997201
> 198367.346838355995715,111655.156382094006403
> 198401.353503132006153,111711.544425372994738
> 198396.450195020006504,111767.679327235004166
> 198408.479102562007029,111803.76604986 100574
> 198432.536917646008078,111810.021930257993517
> 198441.920738242013613,111815.733728721999796 198450.488435937004397))
> POLYGON ((106749.304256164003164
> 197684.536193120991811,106741.741458434000378
> 197662.928199609013973,106668.909426415993948
> 197584.893879589013522,106598.678538398002274
> 197525.067567574005807,106567.464810389996273
> 197512.06184757000301,106535.402126328001032
> 197512.612798543996178,106474.804943783005001
> 197505.483718244009651,106439.159542285997304
> 197516.177338692999911,106364.304199140999117
> 197541.129119741002796,106318.332917057996383
> 197560.594743246008875,106277.524471840006299
> 197589.149728560005315,106251.011042651996831
> 197617.702652300999034,106246.932053547003306
> 197654.413554252998438,106248.971548098998028
> 197676.847994334995747,106253.050537204995635
> 197697.242939863994252,106257.129526310993242
> 197717.637885392992757,106261.208515417005401
> 197754.348787344992161,106257.129526310993242
> 197774.743732873990666,106251.011042651996831
> 197786.980700190993957,106226.537108018004801
> 197799.217667508986779,106202.063173382994137
> 197805.336151168012293,106175.54974419 4999221
> 197803.296656615013489,106149.036315007004305
> 197795.138678402989171,106130.680864031004603
> 197782.90171108598588,106114.364907608003705
> 197764.546260109986179,106098.048951185002807
> 197748.23030368599575,106073.575016550006694
> 197727.835358156997245,106045.022092808998423
> 197711.519401733996347,105997.350270933995489
> 197688.894099861994619,105937.801392544002738
> 197678.969286798004759,105883.214920686994446
> 197683.931693329999689,105838.553261894994648
> 197713.706132524996065,105828.628448830000707
> 197743.48057171999244,105793.89160310299485
> 197822.879076239012647,105779.004383505001897
> 197877.465548095991835,105779.004383505001897
> 197917.164800355996704,105788.929196569995838
> 197971.751272213004995,105843.51566842700413
> 198056.112183265009662,105903.064546816996881
> 198110.69865512198885,105987.425457869001548
> 198175.209940044005634,106091.635995050004567
> 198195.059566173993517,106205.77134529700561
> 198190.097159641009057,106295.094662881005206 198190.097159641009057
> ,106399.305200062997756 198160.322720447002212,106533.290176440001233
> 198095.811435523995897,106584.974694574004388
> 198069.012055750994477,106660.517901796003571
> 197993.468848529009847,106690.459084197005723
> 197913.62569546099985,106752.188964203000069
> 197790.165935447002994,106757.800771477006492
> 197722.824248166987672,106759.949466438993113
> 197714.95107962199836,106749.304256164003164 197684.536193120991811))
> POLYGON ((109474.175572139007272
> 196095.741031971003395,109473.971052227003383
> 196117.121394882997265,109473.292631463002181
> 196188.043008231994463,109472.84375 196234.96875,109434.859374673993443
> 196490.311728851986118,109429.277305804993375
> 196554.505520853010239,109448.814546848996542
> 196618.699312852986623,109496.262132239993662
> 196668.937932680011727,109573.4453125 196692.71875,109596.231285433997982
> 196700.192961947992444,109636.914383819006616
> 196713.537755294993985,109669.813597719999962
> 196728.491943431989057,109709.945824698006618
> 196757.400673611002276,109722.33592146000592
> 196797.325516682001762,109733.500059199999669
> 196841.982067639008164,109729.722604376001982
> 196877.867888467997545,109828.395229982997989
> 196875.474480856006267,109880.335437027999433
> 196870.366754893009784,109896.92164345200581
> 196860.888922651007306,109911.668508432005183
> 196832.050797928008251,109934.3473797810002
> 196781.266356047010049,109943.480031712999335
> 196729.079773578007007,109944.565 200315002585
> 196647.692128469003364,109935.618600774992956
> 196609.652732562011806,109919.586874130996875
> 196529.494099342991831,109867.48376253900642
> 196421.279944496985991,109803.356855963997077
> 196341.121311277995119,109747.245812709996244
> 196276.994404703000328,109667.087179491005372
> 196184.811976500990568,109598.952341255004285
> 196128.700933246989734,109474.175572139007272 196095.741031971003395))
> POLYGON ((88733.627844440794433 195044.492791647993727,88728.261161760005052
> 194941.949831750011072,88723.559065339301014
> 194677.848749455006327,88734.109462049193098
> 194625.096765905007487,88742.95045656520233
> 194580.891793324990431,88738.529959307197714
> 194532.266323488001944,88720.847970275295665
> 194501.322842682013288,88681.063494953501504
> 194492.481848166004056,88650.120014147702022
> 194492.481848166004056,88610.335538825893309
> 194492.481848166004056,88552.869074472197099
> 194492.481848166004056,88442.356643022794742
> 194510.163837197993416,88384.890178669098532
> 194527.84582623001188,88379.61753736139508
> 194531.946769469010178,88376.049184153103852
> 194567.630301550991135,88384.890178669098532
> 194611.835274131008191,88391.374003449294833
> 194626.964198617992224,88395.297474394596065
> 194636.118964157009032,88398.151670442995965
> 194642.778754936996847,88411.248147234000498
> 194672.421345029986696,88413.920436478394549
> 194709.833394451998174,88408.575857989504584 194739.228576141
> 002122,88400.558990256104153 194763.279179341014242,88392.542122522703721
> 194776.64062556400313,88376.508387056004722
> 194790.002071786002489,88365.819230078093824
> 194798.018939519010019,88344.440916122402996
> 194795.346650274994317,88309.701155944494531
> 194784.65749329701066,88304.356577455502702
> 194768.62375783000607,88296.33970972210227
> 194747.245443874009652,88296.33970972210227
> 194723.194840673997533,88282.978263499797322
> 194704.488815963006346,88240.221635588502977
> 194683.110502007009927,88202.809586165996734
> 194675.093634274002397,88152.036090521200094
> 194648.37074182901415,88122.640908832196146
> 194626.992427874007262,88095.918016387600801
> 194605.614113918010844,88069.195123943005456
> 194584.235799962014426,88039.799942253899644
> 194549.496039783989545,88023.766206787098781
> 194512.083990362007171,88021.09391754270473
> 194453.293626983999275,88026.438496031594696
> 194423.898445294995327,88039.799942253899644
> 194397.17555285000708,88071.867413187399507 194327.696032493986422,
> 88079.884280920799938 194314.334586271987064,88085.228859409704455
> 194295.628561560995877,88093.245727143104887
> 194271.577958359994227,88095.918016387600801
> 194215.459884226991562,88071.867413187399507
> 194159.341810092999367,88058.775516736306599
> 194138.76882995601045,87913.336475660194992
> 194091.940382786997361,87903.998811600104091
> 194088.049689428007696,87877.309961056700558
> 194081.377476792986272,87847.285004195306101
> 194071.369157839013496,87823.932259969806182
> 194061.360838885011617,87803.915622062297189
> 194048.016413612989709,87777.226771518893656
> 194031.335882023995509,87757.210133611297351
> 194017.991456752002705,87733.857389385797433
> 193994.638712526008021,87703.832432524504839
> 193974.622074618993793,87673.807475663197692
> 193961.277649347000988,87640.446412483899621
> 193957.941543029010063,87612.741063866604236
> 193959.146123404003447,87589.661583095206879
> 193995.047537937003653,87584.875727897597244
> 194119.479773074999684,87604.019148688093992 194267.841284200985683,
> 87599.233293490498909 194440.132071314990753,87551.374741514402558
> 194607.637003231007839,87511.111238833604148
> 194768.691013953997754,87503.516189538204344
> 194799.071211136004422,87464.251222154794959
> 194867.784904057014501,87444.716871638593148
> 194926.77800765100983,87491.322852863799199
> 194982.201336675992934,87532.763892224102165
> 195028.822505955991801,87553.48441190419544
> 195068.536835342994891,87603.559001131201512
> 195118.611424570000963,87632.913070677997894
> 195123.791554489987902,87660.540430251494399
> 195127.244974436995108,87689.894499798407196
> 195127.244974436995108,87720.975279318605317
> 195151.418914064008277,87731.33553915869561
> 195189.406533477012999,87736.515669078697101
> 195236.027702758001396,87741.695798998698592
> 195284.375582011009101,87757.236188758804929
> 195348.263851024996256,87772.776578518896713
> 195377.617920571996365,87793.49709819900454
> 195400.065150225011166,87822.851167745902785
> 195415.605539985001087,87857.385367212802521 195429.419219772011274,878
> 97.099696599703748 195436.326059665007051,87919.546926253096899
> 195438.052769639005419,87943.720865879993653
> 195436.326059665007051,87976.528355373506201
> 195425.965799825004069,88012.789264813705813
> 195387.978180411999347,88040.416624387202319
> 195337.903591184993275,88042.143334360604058
> 195294.735841851012083,87974.801645400104462
> 195016.735536143009085,87960.987965613399865
> 194968.387656889011851,87947.174285826695268
> 194939.033587342011742,87935.087316013203235
> 194913.132937741989736,87926.453766146500129
> 194890.685708089004038,87919.546926253096899
> 194868.238478434999706,87923.000346199798514
> 194838.884408887999598,87931.174043854494812
> 194816.406740337988595,87964.942939161293907
> 194797.496158966008807,88013.568408999097301
> 194793.075661707989639,88040.091392546906718
> 194793.075661707989639,88075.455370610696264
> 194801.916656223998871,88101.978354158592992
> 194815.178147997998167,88124.080840448499657
> 194837.280634288006695,88141.762829480401706 194863.803617836005287,88
> 172.706310286201187 194881.485606867994647,88208.070288350005285
> 194890.32660138400388,88239.013769155804766
> 194899.167595900013112,88336.264708831295138
> 194983.157043801009422,88353.946697863197187
> 195000.839032832998782,88384.890178669098532
> 195040.623508154996671,88424.674653990907245
> 195067.146491702995263,88455.618134796706727
> 195075.987486219004495,88508.664101892398321
> 195084.828480735013727,88558.03125 195088.71875,88713.816182668699184
> 195049.482579355011694,88733.627844440794433 195044.492791647993727))
> POLYGON ((109449.010574765998172
> 193768.914184449007735,109404.45622747199377
> 193737.200397662993055,109368.178529091004748
> 193707.220374786003958,109358.566476175998105
> 193701.453143037011614,109337.845195318004698
> 193688.502342499996303,109309.353434139004094
> 193667.781061641988344,109278.271512852006708
> 193641.87946056999499,109265.320712315005949
> 193623.748339818994282,109223.878150599994115
> 193592.666418531996896,109203.156869742000708
> 193579.715617996000219,109187.615909098007251
> 193569.354977567010792,109156.533987810995313
> 193548.633696709002834,109135.812706953001907
> 193535.682896173006156,109117.681586203005281
> 193525.322255743987625,109081.419344701003865
> 193502.010814779001521,109065.878384057999938
> 193489.060014243004844,109027.025982449005824
> 193452.797772741003428,108998.960522673005471
> 193406.905145046999678,108952.598052907997044
> 193352.113135324994801,108943.023332366006798
> 193342.538414782000473,108902.020813163995626
> 193301.535895581007935,108864.087883355 998201
> 193255.173425815999508,108813.510643613000866
> 193221.455265986995073,108778.191253597004106
> 193188.65868954299367,108750.158868283004267
> 193122.081774424004834,108725.385114705000888
> 193068.995159613987198,108679.376715203005006
> 193047.760513688990613,108608.594562122001662
> 193019.447652456990909,108524.041712663994986
> 193032.45578314299928,108545.986519197002053
> 193057.143690492986934,108562.85498497899971
> 193103.531971393007552,108562.85498497899971
> 193141.48601940300432,108545.986519197002053
> 193200.52564964001067,108508.032471187994815
> 193230.045464758004528,108429.048442828003317
> 193280.025843217008514,108395.125 193314.125,108378.6875
> 193414.046875,108397.929890957995667
> 193496.864499229006469,108409.666781563006225
> 193530.990880741010187,108437.004160420998232
> 193572.26216634499724,108463.837081656994997
> 193612.771871450997423,108519.180383240003721
> 193686.831201327993767,108668.439968411999871
> 193692.801584734988865,108766.951294625003356 193701.75715984500129
> 7,108814.714361880003707 193701.757159845001297,108874.418079095004941
> 193700.281722059007734,108915.170585326995933
> 193702.319347370008472,108924.479898598001455
> 193702.784813033998944,109001.863396151005873
> 193707.559861309011467,109028.236861144003342
> 193721.234991306002485,109049.634447357006138
> 193755.349723513005301,109082.174630034001893
> 193750.343541562004248,109087.986418307002168
> 193754.863821329985512,109104.702448811003705
> 193767.865178387990454,109116.191126520992839
> 193795.267833574995166,109146.951103629995487
> 193868.120410939009162,109154.120980092004174
> 193897.600658265990205,109159.885931423006696
> 193940.426011011993978,109179.92941441500443
> 194089.320456096000271,109182.015494973995374
> 194158.161114541988354,109184.024536167999031
> 194224.45947395300027,109200.405023180996068
> 194335.027761289995397,109233.165997207004693
> 194363.693613562994869,109249.318977456001448
> 194366.630519061989617,109282.307458245995804
> 194318.64727427699836,109367.580338654006482 1
> 94196.337246885988861,109433.826963115003309
> 194113.891186616005143,109495.253789413996856
> 194011.513142784999218,109495.253789413996856
> 193941.896072979987366,109487.063545907003572
> 193868.183881422010018,109485.254126450992771
> 193850.089686860010261,109467.813941485001124
> 193801.961186989996349,109449.010574765998172 193768.914184449007735))
> POLYGON ((127270.515072127993335
> 193793.368786050006747,127297.216656082993723
> 193751.091278120002244,127324.36395335799898
> 193687.747584478987847,127333.413052449002862
> 193624.403890838992083,127360.560349723993568
> 193552.011098106013378,127360.560349723993568
> 193536.479532636993099,127372.187163285998395
> 193504.905770293989917,127386.254881483997451
> 193482.799355983006535,127404.341947737993905
> 193450.644571532000555,127414.390317879006034
> 193420.499461108993273,127422.429013991000829
> 193390.354350685985992,127432.477384131998406
> 193340.112499981012661,127438.506406216998585
> 193320.015759698988404,127446.545102329997462
> 193295.899671360995853,127490.757930949999718
> 193275.8029310790007,127517.523841492002248
> 193234.942848137987312,127503.859375 193180.625,127445.625
> 193155.71875,127367.577340528005152
> 193144.655144602991641,127342.174041061996832
> 193128.489408578985604,127323.711934264996671
> 193096.840082642011112,127326.349378093000269
> 193065.190756705007516,127331.6242657 48992912
> 193030.903986939985771,127321.074490436993074
> 193017.716767798992805,127273.600501530992915
> 193012.44188014298561,127239.313731766000274
> 193020.354211627010955,127199.752074343996355
> 193038.816318424011115,127173.377636062999954
> 193057.278425221011275,127110.586727386005805
> 193115.337449382990599,127046.65625 193156.25,126947.0546875
> 193231.296875,126904.824805576005019 193234.889640512992628,126847.328125
> 193239.78125,126797.5234375 193273.125,126747.8203125
> 193364.78125,126690.03125 193573.0,126698.4375
> 193622.9375,126797.70517302499502 193703.478939071006607,126831.625
> 193731.0,126823.4296875 193789.28125,126765.4375
> 193889.28125,126756.615268018998904
> 193961.05448461099877,126768.888486045005266
> 193999.454243955988204,126790.6328125 194030.78125,126853.810800596998888
> 194045.18699859600747,126939.777241966992733
> 194067.809746324986918,126966.924539240993909
> 194067.809746324986918,127012.17003469899646
> 194058.760647232993506,127039.317331974001718 194040.66244904
> 9996212,127063.196899021000718 194026.334708821988897,127084.562827431000187
> 194013.515151775005506,127129.808322889002739
> 193963.745106771995779,127184.102917438998702
> 193909.450512223003898,127242.922061534001841
> 193837.057719489996089,127270.515072127993335 193793.368786050006747))
> POLYGON ((86637.444249916297849 192646.798477270989679,86562.581474134101882
> 192702.945559107989538,86464.324080920006963
> 192735.698023512988584,86318.385077251194161
> 192750.284885831992142,86309.4375 192752.21875,86178.999514080802328
> 192745.856220424000639,86171.350505700102076
> 192775.359538463992067,86166.482065579897608
> 192887.975562600011472,86164.139604099400458
> 192964.043491874996107,86166.653153162696981
> 193032.694274420995498,86178.961326242599171
> 193106.251798713987228,86186.376107407500967
> 193162.658107158000348,86188.444833073503105
> 193203.506878010986838,86190.938072458695387
> 193245.187818528997013,86188.502955115793156
> 193277.036293595010648,86166.485626340901945
> 193296.612268064985983,86129.755741102402681
> 193306.362696952011902,86093.039794973898097
> 193311.255213550990447,86061.327722528207232
> 193312.198343880008906,86060.521100330006448
> 193354.142698186013149,86052.921875 193368.640625,86049.400882200396154
> 193397.301002188993152,86049.400882200396154 193644.
> 486887161998311,86049.400882200396154
> 193770.657075135008199,86021.801153581094695
> 193849.513442619005218,86048.460773519793293
> 193966.387803507997887,86077.12943762660143
> 193998.456021112011513,86123.757165353003074
> 194016.269575098005589,86159.663618478894932
> 194019.832285895012319,86238.779325217896258
> 194019.832285895012319,86292.774306317893206
> 194009.144153503992129,86342.311543267904199
> 193974.082182826998178,86366.719897739400039
> 193908.40810258599231,86386.646231839302345
> 193814.162783253996167,86430.071924297997612
> 193699.437114889995428,86440.987752643995918
> 193641.656629058008548,86459.493697405298008
> 193557.355427244998282,86495.746985053803655
> 193467.203270119003719,86513.883475580296363
> 193401.123147523991065,86531.949216421606252
> 193329.126867915998446,86549.933077051100554
> 193257.236432209989289,86573.823566026898334
> 193179.484884320001584,86609.592253071896266
> 193047.986761290987488,86621.51515766439843
> 193006.151261366991093,86627.467854693997651 192970.27
> 0004782010801,86645.377794589294354
> 192916.459683583991136,86675.281680724394391
> 192868.616463501995895,86687.244127118799952
> 192808.737121146987192,86675.260370462594437
> 192730.867501225991873,86651.30099737670389
> 192664.978199658013182,86637.444249916297849 192646.798477270989679))
> POLYGON ((108076.398786381003447
> 192838.096409596997546,108019.212125617996207
> 192830.774628718994791,107957.767357971999445
> 192811.705562897986965,107934.564431195001816
> 192816.65678388098604,107901.226037094005733
> 192878.888452868995955,107839.259992378996685
> 193001.377147229010006,107819.1906651360041
> 193022.879997846990591,107804.190567523997743
> 193048.594450895005139,107797.761954262998188
> 193072.166032854991499,107797.761954262998188
> 193093.594743727997411,107804.190567523997743
> 193110.737712427013321,107823.476407309994102
> 193125.737810038001044,107840.619376008995459
> 193138.595036562008318,107853.476602533002733
> 193151.452263085986488,107864.190957968996372
> 193164.309489609993761,107874.777746666004532
> 193179.566860115999589,107872.681311277992791
> 193195.988937320013065,107863.626076761996956
> 193220.438070512987906,107843.613631262996932
> 193242.118219803989632,107828.604297137993854
> 193250.456738762994064,107803.588740263992804
> 193252.124442553991685,107778.5731833900 06307
> 193245.453627387993038,107766.899256848002551
> 193238.78281222100486,107743.723733157996321
> 193232.100879030011129,107717.307305098001962
> 193224.896398649987532,107693.292370498995297
> 193220.093411729991203,107676.481916279997677
> 193212.88893134999671,107645.262501300996519
> 193208.085944430000382,107626.050553620996652
> 193208.085944430000382,107546.801269443996716
> 193208.085944430000382,107513.180361004997394
> 193198.479970590997254,107479.559452565998072
> 193198.479970590997254,107455.544517967005959
> 193196.07847713099909,107441.135557207002421
> 193198.479970590997254,107429.128089906997047
> 193208.085944430000382,107424.325102988004801
> 193224.896398649987532,107421.923609528006637
> 193246.509839789010584,107407.722749198001111
> 193276.733595322002657,107393.133160810000845
> 193326.338195840013213,107369.789819390003686
> 193375.942796357994666,107346.446477970006526
> 193402.20405545498943,107317.267301194005995
> 193416.793643843004247,107291.00604209699668 193413.875726164988009
> ,107253.073112288999255 193399.286137777991826,107235.565606224001385
> 193375.942796357994666,107223.893935514002806
> 193320.502360484999372,107220.97601783600112
> 193282.569430676987395,107215.14018248100183
> 193235.882747836993076,107212.222264804004226
> 193183.360229640995385,107217.086611556005664
> 193148.559534021012951,107239.74311168899294
> 193085.121333646995481,107266.930911849995027
> 193035.277033352991566,107278.2591619159939
> 192983.167083045991603,107298.650012037003762
> 192942.385382804990513,107337.692724937005551
> 192891.568461888993625,107425.23025526299898
> 192865.307202791009331,107477.752773458007141
> 192862.389285114011727,107539.029044686001725
> 192853.635532081010751,107626.669173563001095
> 192846.11706779099768,107709.237780729003134
> 192844.902823568001622,107754.16481698199641
> 192841.260090897994814,107776.021212997002294
> 192826.689160222013015,107777.235457219998352
> 192775.690902853995794,107764.449772737993044
> 192755.562930512009189,107739.593886304995976 192741.
> 692064609000226,107655.209902702001273
> 192739.990383755008224,107574.36826989200199
> 192736.75671844300814,107494.287640296999598
> 192736.75671844300814,107435.28086059600173
> 192736.75671844300814,107307.967438220002805
> 192710.340047940990189,107249.228370964003261
> 192741.659112369990908,107210.839717349997954
> 192787.019827574986266,107190.391776114003733
> 192848.363651282008504,107178.187219244005973
> 192892.440332347992808,107165.138844437999069
> 192973.630220027989708,107153.585804536996875
> 193019.078455807000864,107133.040350755007239
> 193052.599985662993276,107106.069760900994879
> 193091.918283687002258,107058.427913334002369
> 193135.863140466011828,107035.719780205006828
> 193144.513857848010957,107014.092986749994452
> 193145.595197521004593,106990.303513948994805
> 193139.107159484003205,106975.164758529994288
> 193134.781800792989088,106954.619304748004652
> 193118.561705700994935,106947.349180453995359
> 193095.778471900004661,106942.43319044499367
> 193081.738185229012743,106914.344569 431996206
> 193006.835195858991938,106833.509261397994123
> 192880.666977691987995,106802.150410886999452
> 192837.413390781992348,106785.930315795994829
> 192829.844013071997324,106765.475504108006135
> 192837.036752326996066,106745.08008326900017
> 192849.274004829989281,106720.605578262999188
> 192951.251109023985919,106683.893820753000909
> 193073.623634056013543,106651.26114741100173
> 193220.470664094988024,106648.159701577998931
> 193240.408530162996612,106703.686023931993986
> 193305.18923957599327,106744.523986015003175
> 193361.341437439987203,106785.361948097997811
> 193402.179399521992309,106826.199910181006999
> 193443.017361604986945,106861.933127003998379
> 193483.855323688010685,106887.456853305004188
> 193509.379049990006024,106912.980579606999527
> 193529.798031031998107,106938.504305908994866
> 193555.321757333003916,106964.028032211004756
> 193570.635993114992743,106994.656503773003351
> 193585.950228895992041,107035.494465855997987
> 193606.369209936994594,107071.227682679003919 193621.683445717
> 993891,107106.96089950100577 193631.892936238989932,107152.903606844003662
> 193647.20717201998923,107214.160549969004933
> 193642.102426759985974,107254.998512051999569
> 193642.102426759985974,107295.836474134994205
> 193616.578700457990635,107326.4649456969928
> 193596.159719415998552,107362.19816251899465
> 193580.845483634999255,107403.036124602003838
> 193565.531247853999957,107443.874086684998474
> 193560.426502593996702,107505.131029809999745
> 193565.531247853999957,107540.864246632001596
> 193580.845483634999255,107597.016444495995529
> 193606.369209936994594,107632.749661319001461
> 193626.788190978986677,107673.587623401996098
> 193647.20717201998923,107719.530330744993989
> 193647.20717201998923,107760.368292828003177
> 193647.20717201998923,107806.311000171001069
> 193626.788190978986677,107847.148962253995705
> 193616.578700457990635,107872.672688556005596
> 193596.159719415998552,107928.82488641999953
> 193580.845483634999255,107969.662848502994166
> 193560.426502593996702,108010.500810586003354 19
> 3529.798031031998107,108036.024536886994611
> 193478.750578428007429,108051.33877266899799
> 193432.807871085009538,108056.443517929001246
> 193376.6556732209865,108061.548263189004501
> 193310.293984835996525,108071.757753710000543
> 193243.93229645100655,108076.862498970003799
> 193218.408570149011211,108092.176734752007178
> 193187.780098587012617,108127.909951573994476
> 193152.046881765010767,108148.328932616001111
> 193131.62790072298958,108153.433677876004367
> 193106.104174420994241,108153.433677876004367
> 193085.685193379991688,108138.11944209500507
> 193049.951976557000307,108107.490970533006475
> 193034.63774077600101,108087.07198949099984
> 193024.428250255004968,108056.443517929001246
> 193009.114014474005671,108036.183897784998408
> 193001.516656919993693,108028.680963424005313
> 192954.831732009013649,108076.398786381003447 192838.096409596997546))
> POLYGON ((89080.121932107504108 193517.099371327989502,88962.2578125
> 193456.375,88696.140625 193390.125,88646.374808174296049
> 193369.756069891009247,88371.7265625 193257.34375,88283.921068780095084
> 193164.521145575010451,88265.319709947201773
> 193071.514351410995005,88246.369395027402788
> 192986.237934272008715,88180.043292808200931
> 192938.862146972998744,88090.029296939304913
> 192863.060887294006534,88090.029296939304913
> 192815.685099994007032,88108.979611859103898
> 192754.09657650499139,88170.568135348396027
> 192697.245631745987339,88232.156658837600844
> 192640.394686985993758,88255.470484046105412
> 192566.567573826003354,88258.204621776094427
> 192528.983106147003127,88236.836910174795776
> 192468.625477933004731,88186.810270191999734
> 192418.598837950994493,88102.061712345195701
> 192352.162936654989608,88033.883669395494508
> 192268.60935029599932,87931.032298502002959
> 192343.12969296600204,87996.071653062099358
> 192405.15796629601391,88007.681665892494493 192453.214374976989347,88004.10
> 8665414794814 192549.685387873993022,87959.864991856695269
> 192639.483235257997876,87924.146170138003072
> 192706.952120726986323,87900.45857388569857
> 192749.249399016000098,87880.069964836497093
> 192790.026617113995599,87823.370845245197415
> 192829.905798974010395,87787.300148790905951
> 192842.391809285007184,87783.110250826895935
> 192911.031184560008114,87781.309451840206748
> 193002.017810321995057,87773.570075112802442
> 193104.177583125012461,87765.830698385296273
> 193149.065968143986538,87764.424820577594801
> 193203.895202646002872,87766.415535847903811
> 193210.449894522986142,87766.415535847903811
> 193252.474012858001515,87752.803955785406288
> 193344.79003234099946,87744.678452219304745
> 193423.637817404989619,87877.736848745698808
> 193455.456129617989063,88097.84375 193474.171875,88164.421875
> 193515.71875,88239.3828125 193598.875,88331.530985453005997
> 193631.971292292990256,88387.96742841489322
> 193647.11975601001177,88433.29501719759719
> 193647.11975601001177,88507.067224146099761 1936
> 10.233652536000591,88553.174853488904773
> 193542.609129499993287,88605.43016674410319
> 193524.166077762987697,88702.540437722302158
> 193566.387934709986439,88741.478569676997722
> 193593.000337436009431,88831.573680249901372
> 193634.751730140007567,88895.782627220905852
> 193634.751730140007567,88962.91016269060492
> 193611.403022151003825,89009.607578669500072
> 193550.112663678009994,89080.121932107504108 193517.099371327989502))
> POLYGON ((98409.539065940101864 192650.929142634995515,98367.014779666104005
> 192581.096320259006461,98333.092519522004295
> 192507.598089946986875,98248.286869161805953
> 192434.099859634006862,98095.63669851339364
> 192405.831309514003806,97875.142007576796459
> 192405.831309514003806,97819.038025279805879
> 192403.094529889989644,97747.027945885201916
> 192381.644719006988453,97703.957204800200998
> 192371.705317218002165,97675.795566398504889
> 192360.109348464000504,97660.88646371520008
> 192351.826513640000485,97642.664227102301084
> 192331.947710061998805,97631.068258348706877
> 192317.038607379014138,97601.250052982097259
> 192278.937567188986577,97578.058115474806982
> 192247.462794857012341,97561.49244582670508
> 192230.897125209012302,97543.270209213893395
> 192217.644589491013903,97516.765137776907068
> 192201.078919843013864,97453.815593114195508
> 192191.139518053998472,97425.653954712499399
> 192186.169817159010563,97407.431718099600403
> 192182.856683229998453,97382.58321362749848 192182.8566832299
> 98453,97354.421575225802371 192187.826384123996831,97334.542771648106282
> 192197.765785913012223,97301.411432351902477
> 192207.705187701998511,97278.219494844597648
> 192209.361754667013884,97236.805320724393823
> 192219.301156455010641,97228.621023155705188
> 192222.503707677999046,97219.076023607005482
> 192226.238707501004683,97217.215517219898175
> 192242.866246040997794,97213.366727344604442
> 192252.488220728992019,97211.442332406993955
> 192273.656565042998409,97213.366727344604442
> 192290.976119480998022,97219.139912157494109
> 192312.144463795004413,97238.383861533598974
> 192335.237203046999639,97257.627810909805703
> 192364.103127111011418,97273.022970410704147
> 192392.969051174994092,97288.828125 192437.96875,97355.3515625
> 192454.53125,97430.2578125 192504.390625,97446.9375
> 192537.671875,97447.328125 192745.8125,97439.456896819800022
> 192772.120041204994777,97432.251541202698718
> 192805.237086104985792,97425.10146339610219
> 192834.75634687001002,97414.219941815303173 192860.527259905007668
> ,97383.710911557704094 192903.834346430987353,97417.775447641295614
> 192938.838340932008578,97458.35516554939386
> 193003.360018420004053,97486.46593546049553
> 192988.211987799004419,97502.224739558500005
> 192985.166370304010343,97535.18082521299948
> 192982.825515401986195,97560.566038941498846
> 192984.561835533007979,97578.209558183894842
> 192995.147947077988647,97600.746119786897907
> 193032.890658726013498,97628.593707064894261
> 193100.3111331879918,97644.715994436395704
> 193110.570770605991129,97670.728629965495202
> 193117.02846113499254,97711.022789868700784
> 193117.02846113499254,97791.611109674995532
> 193113.365355688991258,97809.068412188105867
> 193128.29823231199407,97888.578125 193128.203125,97938.390625
> 193103.15625,97984.721888358297292
> 193037.409002661996055,98330.331883189399377
> 193037.409002661996055,98382.322367742905044
> 193009.050556542002596,98391.775183116304106
> 192923.975218181993114,98387.048775429604575
> 192801.088618328009034,98363.537672238700907 192783.45529093500226
> 7,98394.8515625 192736.21875,98409.539065940101864 192650.929142634995515))
> POLYGON ((111765.625 191120.03125,111724.046875
> 191111.78125,111591.802997200997197 190957.743625238013919,111574.1015625
> 190937.125,111455.56561380000494
> 190685.228879884991329,111388.384281837003073
> 190558.769902072002878,111309.347420703998068
> 190467.877511769009288,111265.877147081002477
> 190369.081435353000415,111230.310559570993064
> 190183.344811690010829,111232.344511115006753
> 190158.170027612010017,111232.344511115006753
> 189992.805112247006036,111258.802897572997608
> 189820.825600267999107,111344.792653562995838
> 189714.992054434987949,111413.502215090993559
> 189625.287904661003267,111460.629155550996074
> 189574.312986565986648,111495.86377150399494
> 189496.796831468003802,111499.387233100002049
> 189436.897984348004684,111485.293386717996327
> 189394.616445202991599,111458.714278232000652
> 189369.192950130003737,111455.003800252001383
> 189374.68445754100685,111423.812499103005393
> 189388.052158033009619,111395.956229365998297
> 189431.10275671700947,111357.970406998007093 189474.153
> 355401009321,111322.516972787998384
> 189507.074401452991879,111294.488429531003931
> 189526.427443226013565,111245.011679795003147
> 189544.568918128992664,111148.559620662999805
> 189540.375350340997102,111035.333290377995581
> 189523.60107918799622,110968.236205765002524
> 189485.858969093009364,110968.236205765002524
> 189368.439071019005496,111071.939291139002307
> 189098.811049048992572,111071.921875 189089.53125,110988.8046875
> 189089.625,110689.421875 189006.78125,110656.057584413007135
> 189022.247075719002169,110606.038960623001913
> 189063.929262210993329,110564.3567741309962
> 189122.284323300002143,110551.85211818300013
> 189168.134728440985782,110556.8359375 189223.40625,110590.3984375
> 189389.875,110582.1640625 189431.53125,110540.6875
> 189473.203125,110518.605119743995601
> 189512.274889733991586,110507.321556437993422
> 189555.152430298010586,110502.808131115001743
> 189591.259832879004534,110502.808131115001743
> 189625.110522798000602,110507.321556437993422
> 189654.447787395009072,110516.348 407083001803
> 189681.528339331009192,110525.375257727995631
> 189701.8387532820052,110536.658821035001893
> 189719.892454571992857,110552.455809663995751
> 189737.946155862999149,110570.50951095399796
> 189753.743144492007559,110588.563212244000169
> 189774.053558443003567,110599.846775551006431
> 189787.593834411003627,110606.616913535006461
> 189803.390823040012037,110611.130338856994058
> 189821.444524330989225,110604.360200872994028
> 189848.525076265999814,110593.076637567006401
> 189875.605628201999934,110570.50951095399796
> 189904.942892797989771,110545.685671679995721
> 189970.38755997599219,110534.402108373004012
> 189999.72482457300066,110516.348407083001803
> 190056.142641104990616,110507.321556437993422
> 190096.763469008001266,110496.037993131001713
> 190128.357446265988983,110439.620176598997205
> 190223.139378040999873,110410.282912002003286
> 190261.503493283002172,110371.918796760000987
> 190299.867608525004471,110344.838244825004949
> 190329.204873120994307,110340.611846382002113 190335.242585181
> 986215,110298.276434516999871 190361.101546213991242,110263.59658901799412
> 190367.568988362996606,110221.634270811002352
> 190367.075854855997022,110170.329679568996653
> 190362.08235214400338,110161.79165450000437
> 190362.858536242012633,110142.259785670001293
> 190364.634160680987407,110109.086274697998306
> 190364.634160680987407,110091.223614943999564
> 190364.634160680987407,110065.7055295809987
> 190374.841394826013129,110037.63563568200334
> 190392.704054580011871,110009.565741782993427
> 190415.670331405999605,109981.495847883998067
> 190433.532991159998346,109958.529571057006251
> 190456.499267987004714,109935.563294229999883
> 190487.120970421994571,109926.993144163003308
> 190541.780133252992528,110081.404700176994083
> 190621.191790632001357,110226.925825697995606
> 190693.952353392989608,110319.530178301996784
> 190753.4837229239929,110392.290741062999587
> 190879.161058600991964,110399.876339402995654
> 190876.102899521996733,110435.746914839997771
> 190890.451129697001306,110478.79160536499694 19
> 0908.386417416011682,110507.488065715006087
> 190922.734647590987151,110532.59746852099488
> 190937.082877765991725,110568.468043957996997
> 190955.01816548401257,110593.577446765004424
> 190998.062856008997187,110604.338619396003196
> 191041.107546534010908,110643.796252376996563
> 191091.326352145988494,110704.776230620002025
> 191137.958100215008017,110740.646806057993672
> 191152.30633039001259,110790.865611670000362
> 191177.415733195986832,110848.258532370004104
> 191188.176905826985603,110894.890280438004993
> 191195.351020914997207,110930.76085587599664
> 191202.525136001990177,110940.497154922995833
> 191204.959210764005547,110959.457316226005787
> 191209.699251090001781,111013.263179382003727
> 191213.286308632988948,111067.069042538001668
> 191238.395711440010928,111117.287848149993806
> 191249.156884071009699,111181.85488393700507
> 191259.918056702008471,111232.073689550001291
> 191270.679229333007243,111296.640725336998003
> 191292.201574595994316,111343.272473406002973 191310.136862313986057,111386.
> 31716392999806 191328.072150032996433,111420.240015814997605
> 191358.911106290994212,111425.774796911995509
> 191363.94272546999855,111432.94891199900303
> 191369.323311785992701,111454.471257261000574
> 191385.465070732985623,111483.167717610995169
> 191396.226243364013499,111529.799465680000139
> 191406.98741599501227,111576.43121374900511
> 191403.400358451995999,111626.650019360997248
> 191396.226243364013499,111648.172364622994792
> 191385.465070732985623,111691.21705514799396
> 191371.116840558010153,111737.848803216998931
> 191367.529783014004352,111802.415839003995643
> 191363.94272546999855,111834.69935689799604
> 191349.594495294993976,111857.716902269006823
> 191326.576949923997745,111847.172214638005244
> 191262.254355376004241,111805.2175931600068
> 191173.409274600009667,111765.625 191120.03125)) POLYGON ((120357.2578125
> 189610.078125,120348.6484375 189451.90625,120169.809714855000493
> 189265.909504684997955,120125.716666948006605
> 189137.304781621001894,120114.267078342003515
> 189114.405604410014348,120091.367901129997335
> 189082.919235743989702,120054.156738160992973
> 189051.43286707700463,120019.807972344002337
> 189019.946498411009088,119991.184000829001889
> 188994.184924047993263,119974.00961792000453
> 188979.87293829099508,119951.11044070799835
> 188968.423349685006542,119925.348866344997077
> 188948.386569624999538,119888.137703376007266
> 188916.900200959003996,119859.513731861996348
> 188914.037803807004821,119833.752157498005545
> 188919.762598110013641,119825.164966044001631
> 188936.936981019011,119816.577774589997716
> 188965.560952533996897,119813.715377437998541
> 189002.77211550300126,119810.852980287003447
> 189031.396087016997626,119799.403391681000357
> 189051.43286707700463,119785.091405924002174
> 189060.020058532012627,119756.467434409001726
> 189060.020058532012627,119730.70586 0046000453
> 189048.570469925994985,119716.393874287998187
> 189034.258484168996802,119696.357094228005735
> 189017.084101259999443,119670.595519865004462
> 188994.184924047993263,119633.384356896000099
> 188968.423349685006542,119607.657095364003908
> 188957.378464517008979,119590.783410686999559
> 189013.62408010699437,119579.53428756899666
> 189086.743380375002744,119596.407972246001009
> 189137.364434405986685,119613.281656923005357
> 189193.61004999600118,119618.906218482006807
> 189283.603034941013902,119613.281656923005357
> 189356.722335208993172,119596.407972246001009
> 189401.718827681004768,119596.407972246001009
> 189446.71532015298726,119607.657095364003908
> 189486.087251066986937,119675.15183407299628
> 189519.834620420995634,119692.15625 189527.703125,119786.937229963994469
> 189564.51891542901285,119933.4296875 189652.28125,120186.036073313996894
> 189763.471598147996701,120215.391035647000535
> 189761.636913002002984,120246.287063997995574
> 189749.278501660999609,120294.088477369004977 189705.47
> 6056054001674,120329.492048568994505 189662.058699207991594,120357.2578125
> 189610.078125)) POLYGON ((117320.848728305005352
> 188474.665314292011317,117299.414537799006212
> 188474.665314292011317,117247.255125309005962
> 188471.597113558003912,117210.436716493000858
> 188468.528912823006976,117170.55010694199882
> 188471.597113558003912,117142.936300329005462
> 188483.869916496012593,117109.186092247997294
> 188517.620124578010291,117096.913289308999083
> 188548.302131925011054,117103.049690778003423
> 188588.188741476013092,117142.936300329005462
> 188628.075351026986027,117164.413705472004949
> 188664.89375984299113,117167.481906207001884
> 188704.780369393993169,117127.595296655999846
> 188726.257774536992656,117067.237074104996282
> 188716.084265159006463,117023.276471675999346
> 188695.575767189991893,116974.185259920996032
> 188664.89375984299113,116928.162248901004205
> 188637.279953230987303,116900.548442289000377
> 188600.461544415011303,116885.207438615005231
> 188572.847737801988842,116839.184427594998851
> 188532.961128250986803,116671.181893300003139
> 188357.399356542009627,116631.2076208710 05929
> 188274.375867650989676,116625.057732804998523
> 188219.026875056995777,116625.057732804998523
> 188175.977658594987588,116655.807173135006451
> 188145.228218264994211,116698.047193798993248
> 188143.299634945986327,116731.797401881005499
> 188143.299634945986327,116818.880198179002036
> 188110.192972162010847,116783.956814371005748
> 188085.003820985992206,116747.138405553996563
> 188048.185412169987103,116691.91079233000346
> 188014.435204089008039,116642.819580575000145
> 187996.025999679986853,116599.864770289001171
> 187992.957798946008552,116535.43255486000271
> 187992.957798946008552,116501.682346778994543
> 188008.298802619014168,116472.089428495994071
> 188086.153516124992166,116492.477744574993267
> 188275.232266537001124,116538.500755594999646
> 188450.119708415004425,116673.501587922000908
> 188606.59794588398654,116787.025015104998602
> 188704.780369393993169,116851.457230533997063
> 188750.803380414989078,116964.980657716994756
> 188796.826391434995458,117017.186030109995045 188813.3532751869934
> 15,117088.085622184997192 188830.787601107003866,117175.25725178400171
> 188848.221927027014317,117408.806614515997353
> 188901.403767279989552,117423.277659433006193
> 188906.340126688010059,117787.8046875 189030.6875,117962.4921875
> 189105.390625,118095.1875 188947.03125,118294.0
> 188588.78125,118272.164739287996781
> 188549.933382593007991,118131.136872842005687
> 188468.592105368006742,117939.039276711002458
> 188351.663133810012368,117646.716847816001973
> 188101.101051900011953,117632.088417018996552
> 188088.564282498002285,117621.208288876994629
> 188112.301234315993497,117560.250241645000642
> 188191.546695717988769,117511.9921875 188223.46875,117503.965618079993874
> 188237.598994586995104,117487.019840303997626
> 188342.793372385000112,117471.233778941998025
> 188394.89209519000724,117443.619972329004668
> 188440.915106211003149,117379.187756900995737
> 188465.460712088010041,117320.848728305005352 188474.665314292011317))
> POLYGON ((121152.5703125 188210.34375,121144.1171875
> 188135.40625,121133.73647602199344
> 188044.429439950996311,121071.909655173993087
> 187986.178403288999107,120986.920819081002264
> 187950.116873722989112,120973.158951521996642
> 187909.230933924001874,120994.940798979005194
> 187868.580411430011736,121047.296211491993745
> 187852.90493226700346,121138.11333848600043
> 187900.785246552986791,121235.85739656300575
> 187922.599168329994427,121275.226609556993935
> 187917.02133486000821,121312.820078655000543
> 187895.71836903798976,121326.561491694999859
> 187881.370034179009963,121340.304536412004381
> 187856.632553689007182,121340.304536412004381
> 187820.900637423997978,121329.310100639006123
> 187807.157592706993455,121310.069838034993154
> 187779.671503273013514,121271.58931282699632
> 187752.185413839004468,121246.851832336004009
> 187741.19097806600621,121202.87408924200281
> 187727.447933349001687,121142.404692487005377
> 187694.464626027998747,121035.140625 187644.34375,120969.279513731002226
> 187600.87 5062444014475,120920.112270240002545
> 187571.95315450799535,120873.836364130998845
> 187543.027544876007596,120847.80665882199537
> 187534.351219589007087,120787.070699432006222
> 187537.243879607995041,120775.502730559994234
> 187545.923437365010614,120743.688631830998929
> 187557.49220054000034,120717.658914687999641
> 187571.95315450799535,120677.168243577994872
> 187606.659444030985469,120671.383861990994774
> 187644.257924347009975,120685.844815959004336
> 187684.748595457989722,120700.305769926999346
> 187713.670503394008847,120708.982342307994259
> 187748.376792916998966,120708.982342307994259
> 187777.298700852988986,120703.19796072000463
> 187797.544036408013199,120688.737006751995068
> 187809.112799583002925,120656.922908022999763
> 187838.034707518003415,120628.001000086995191
> 187864.064424660988152,120616.432236912994995
> 187881.417569421988446,120599.07909215100517
> 187901.662904978002189,120581.725947389000794
> 187921.908240532997297,120532.558703898001113
> 187953.722339261992602,120499.46444164 3998725
> 187984.641075761988759,120474.419448643995565
> 188008.49345004800125,120458.915405356994597
> 188034.731061763013713,120457.361743265006226
> 188063.625589419010794,120470.40114216299844
> 188135.342283359990688,120468.473498817998916
> 188167.590672229998745,120448.307039191000513
> 188198.615994732012041,120418.832982815001742
> 188211.026123732008273,120372.29499906199635
> 188206.372325356991496,120335.06461205999949
> 188184.654599606001284,120304.039289558000746
> 188161.385607728996547,120298.569880139999441
> 188119.13190632199985,120277.598166940995725
> 188105.150764188991161,120214.683027343999129
> 188105.150764188991161,120200.701885211994522
> 188119.13190632199985,120183.225457545995596
> 188157.58004718599841,120172.739600946006249
> 188199.523473584005842,120158.758458814001642
> 188255.448042114003329,120154.215154488003463
> 188341.753818272001809,120151.914013551999233
> 188454.509724173985887,120157.203035614002147
> 188510.439805450994754,120174.377418522999506 188550.513365571008762
> ,120197.276595734001603 188587.724528540013125,120223.038170098006958
> 188619.210897206008667,120243.07495015799941
> 188662.146854477992747,120264.293114532993059
> 188792.290173112996854,120302.06516567300423
> 188863.627724882011535,120340.513306538006873
> 188895.085294680990046,120399.933160600994597
> 188916.05700787898968,120448.867158064997056
> 188919.552293412998552,120483.820013396994909
> 188905.571151279989863,120497.801155528999516
> 188895.085294680990046,120501.296441062004305
> 188867.123010415001772,120494.305869995994726
> 188832.17015508399345,120487.315298929999699
> 188797.217299751995597,120485.588696862992947
> 188788.691870960989036,120480.015625 188585.875,120504.8046875
> 188510.90625,120571.2265625 188469.203125,120687.578125
> 188460.71875,120770.6484375 188435.625,120870.28125
> 188377.21875,120994.7421875 188260.5,121035.58388533499965
> 188253.172124275006354,121061.062801638996461
> 188256.330668432987295,121152.5703125 188210.34375)) POLYGON
> ((119444.544810152001446 188754.89424839100684,119470.227719262999017
> 188702.220414598996285,119495.98929362600029
> 188665.009251629991923,119504.576485080004204
> 188644.972471570014022,119516.026073685992742
> 188584.86213138900348,119507.43888223200338
> 188564.825351328996476,119484.5397050199972
> 188550.513365571008762,119467.365322110999841
> 188539.063776964991121,119430.154159141995478
> 188521.889394057012396,119377.031777661002707
> 188505.813598100008676,119363.956556570003158
> 188466.587934826005949,119359.648108730994863
> 188401.961217236996163,119368.265004408996901
> 188341.642947487998754,119385.49879576600506
> 188307.175364774011541,119471.667752551002195
> 188169.305033918004483,119501.826887425995665
> 188117.60365984699456,119519.060678783003823
> 188083.136077133007348,119549.219813657997292
> 188044.360046579997288,119570.762052853999194
> 188009.892463866010075,119583.687396371999057
> 187971.116433312010486,119592.304292050001095
> 187923.72350708101294,119596.61273988999892 1
> 87884.94747652701335,119587.9958442109928
> 187837.554550295986701,119564.2890625 187829.46875,119514.359375
> 187796.21875,119519.060678783003823
> 187790.161624063999625,119407.041034962996491
> 187738.460249992989702,119351.031213052003295
> 187716.918010797002353,119320.872078177999356
> 187703.99266727900249,119290.712943303005886
> 187682.450428082986036,119269.170704107003985
> 187660.908188886009157,119243.320017071004258
> 187639.365949689992703,119221.777777875002357
> 187622.132158332999097,119200.235538679000456
> 187604.898366976005491,119165.767955964998691
> 187579.047679940995295,119148.534164608005085
> 187561.813888584001688,119131.300373250996927
> 187544.580097227008082,119096.832790536995162
> 187523.037858030002099,119079.598999180001556
> 187514.420962351985509,119058.056759982995572
> 187510.112514512991766,119023.589177268993808
> 187510.112514512991766,118980.504698877004557
> 187510.112514512991766,118941.728668323994498
> 187510.112514512991766,118915.877981287994771 187514.420962351985
> 509,118898.644189931001165 187531.654753709008219,118881.410398573993007
> 187557.505440743989311,118864.1766072169994
> 187574.739232101012021,118829.709024502997636
> 187591.973023458005628,118803.858337468001992
> 187604.898366976005491,118778.007650432002265
> 187604.898366976005491,118756.465411236000364
> 187600.589919137011748,118743.5400677180005
> 187591.973023458005628,118730.614724200000637
> 187587.664575619011885,118713.380932843007031
> 187570.430784261989174,118691.83869364700513
> 187553.196992904995568,118683.221797969003092
> 187544.580097227008082,118665.988006611994933
> 187523.037858030002099,118640.137319575995207
> 187505.804066673008492,118618.595080379993306
> 187497.187170994991902,118584.127497666006093
> 187497.187170994991902,118541.043019272998208
> 187497.187170994991902,118515.192332238002564
> 187505.804066673008492,118502.266988720002701
> 187505.804066673008492,118480.724749524000799
> 187501.495618833985645,118459.182510327998898
> 187497.187170994991902,118433.331823291999171 1
> 87479.953379637998296,118403.172688417005702
> 187462.71958828100469,118380.562757655992755
> 187445.762140209990321,118258.8125 187556.453125,118181.450536599004408
> 187603.087239759013755,118175.7890625 187606.5,118126.303979549003998
> 187642.219018152012723,118101.812529033006285
> 187659.897286296996754,118048.852477167005418
> 187700.146925715001998,117998.010827375997906
> 187759.462183805007953,117936.577167210998596
> 187825.132648119004443,117856.077888375002658
> 187903.513524879992474,117775.087181477007107
> 187954.335479392000707,117860.75 188039.84375,117935.6484375
> 188089.703125,118260.140625 188264.125,118326.6640625
> 188280.6875,118481.923787516003358
> 188401.775550191989169,118674.021383646002505
> 188497.82434825701057,119008.104159526003059
> 188572.992972829990322,119072.832697353005642
> 188583.433059575996595,119193.288837660002173
> 188666.828971632989123,119289.18789743000525
> 188701.701357003999874,119384.575444443995366
> 188730.732349572994281,119399.548317680004402 188732.3960
> 02155001042,119444.544810152001446 188754.89424839100684)) POLYGON
> ((111372.095099996004137 188299.740943785000127,111411.692066871997667
> 188235.77661267798976,111433.797061267003301
> 188195.987622766988352,111447.06005790400377
> 188173.882628372986801,111455.902055661994382
> 188160.619631735986331,111482.428048935995321
> 188138.51463734099525,111517.796039966997341
> 188103.1466463090037,111535.480035482993117
> 188072.199654155992903,111557.58502987799875
> 188041.25266200301121,111601.795018667995464
> 188010.305669850989943,111679.703143274993636
> 187993.903959407005459,111708.089456147004967
> 187965.51764653500868,111723.895309262006776
> 187942.686969812988536,111743.220879954998964
> 187912.629294893995393,111761.432373133997316
> 187885.312055126007181,111779.643866312995669
> 187871.653435242013074,111811.513979376002681
> 187857.994815357989864,111838.831219144005445
> 187839.783322178991511,111870.701332206997904
> 187798.807462527009193,111879.807078797006398
> 187739.620109695009887,111879.807078797006398
> 187698.644250042998465,111879.807078797006398
> 187657.668390389997512,111879.807078797006398
> 187612.139657443010947,111893.465698681000504
> 187566.610924495995278,111925.335811743992963
> 187557.505177907005418,111961.758798102004221
> 187562.058051200991031,111989.076037870006985
> 187571.163797790999524,112052.031989676994272
> 187591.00366297698929,112085.472466195002198
> 187591.00366297698929,112123.690153643998201
> 187600.558084838994546,112150.653343384998152
> 187594.958201267989352,112201.58331453599385
> 187573.88373044700711,112234.95122666899988
> 187545.784436018991983,112247.244667980994564
> 187515.928935689997161,112241.976050276003662
> 187472.023788146005245,112219.234372267004801
> 187414.246858525002608,112190.571106679999502
> 187352.143116421008017,112171.46226295499946
> 187280.484952453989536,112157.130630162006128
> 187237.490054074005457,112123.690153643998201
> 187199.272366624994902,112066.363622471006238
> 187156.277468245010823,112013.814302227998269
> 187113.28256986400811,111951.710560124003678 187036.847194965987001,111923
> .047294536998379 187022.51556217300822,111880.052396156999748
> 187022.51556217300822,111783.055972706002649
> 187077.474906387011288,111725.582987279005465
> 187117.263896298012696,111663.689002972998424
> 187134.94789181399392,111632.742010821006261
> 187157.052886209014105,111597.374019789000158
> 187196.841876119986409,111584.111023151999689
> 187218.946870515006594,111575.269025393994525
> 187245.472863787988899,111553.164030999003444
> 187267.577858183009084,111526.638037725002505
> 187285.261853698990308,111508.95404220900673
> 187289.682852578000166,111478.007050057000015
> 187289.682852578000166,111455.902055661994382
> 187298.524850335990777,111438.218060145998606
> 187307.366848094010493,111428.213724430999719
> 187314.267942543985555,111418.163308361006784
> 187329.343566650000867,111415.291760912004975
> 187353.751719963998767,111413.138100326003041
> 187388.210289348004153,111410.984439738997025
> 187409.746895213000244,111411.692066871997667
> 187439.996814462996554,111413.416494416000205 187461.552
> 158765000058,111406.838643280992983
> 187489.641827040002681,111396.459463025996229
> 187515.589777676999802,111391.269872899007169
> 187520.779367804003414,111352.347946944995783
> 187525.968957931007026,111321.210406180995051
> 187523.374162866995903,111285.886786597999162
> 187522.331255842000246,111267.972245605997159
> 187570.103365152986953,111239.579419033994782
> 187610.009238630009349,111177.2421875 187632.40625,111134.187045387006947
> 187627.085680340998806,111110.993501018994721
> 187582.907500594010344,111109.208495622006012
> 187525.78732786999899,111114.563511814994854
> 187429.397036398004275,111031.539677132997895
> 187399.587120585987577,110980.64536425100232
> 187385.358490571990842,110943.202993643004447
> 187395.481933842995204,110893.772756060003303
> 187391.275105112988967,110857.321210281996173
> 187368.843384634004906,110807.475082920995192
> 187297.397268748987699,110708.680741028001648
> 187228.241229425009806,110623.058978055007174
> 187218.36179523600731,110597.144974506998551 187220.3
> 55180123995524,110551.836900224996498
> 187223.840416607010411,110537.437215081998147
> 187224.948084695002763,110481.453754675996606
> 187238.120663614012301,110441.936017918997095
> 187277.638400371011812,110418.884004810999613
> 187356.673873885010835,110403.8515625 187425.296875,110404.1328125
> 187575.15625,110387.5859375 187616.796875,110304.59375
> 187683.53125,110288.109375 187758.46875,110296.59375
> 187850.03125,110429.7734375 187949.78125,110654.3125
> 188016.078125,110729.28125 188099.21875,110804.3828125
> 188257.3125,110804.5703125 188357.21875,110779.9140625
> 188507.125,110796.6796875 188582.03125,110863.265625
> 188631.90625,111029.5546875 188656.65625,111112.75
> 188698.171875,111128.937048834006418 188687.316194195009302,111137.65625
> 188681.46875,111159.028399375005392
> 188664.044445228995755,111163.733893608994549
> 188640.516974058991764,111163.733893608994549
> 188604.441518265986815,111146.480414751000353
> 188538.564598991011735,111126.46939270599978
> 188497.236989453987917,111128.921 875 188456.71875,111153.7421875
> 188398.40625,111236.6953125 188306.703125,111372.095099996004137
> 188299.740943785000127)) POLYGON ((119426.729107813996961
> 186460.716221442999085,119378.859375 186464.3125,119318.41598816899932
> 186575.773848881013691,119272.728818698000396
> 186625.614397396013374,119241.463003675002255
> 186643.852789492986631,119196.328125 186639.390625,119179.734375
> 186656.0625,119170.16212754699518
> 186702.52358496299712,119145.728563697994105
> 186757.906329688004917,119111.332661302003544
> 186874.323230103997048,119109.412672196005587
> 186900.243083033012226,119087.520113489998039
> 186948.406712188007077,119079.582597551998333
> 187022.490194270998472,119090.165952134993859
> 187062.177773958013859,119124.561854530998971
> 187072.761128542013466,119153.66607963500428
> 187064.823612603999209,119161.008420936996117
> 187051.140158360009082,119168.162090273996
> 187048.119720196002163,119193.353659322994645
> 187011.906839686998865,119227.749561718999757
> 186964.281744061998324,119272.728818698000396
> 186943.115034896007273,119317.708075677001034
> 186953.698389478988247,119360.04149401000177 186966.9275
> 82708012778,119410.312428281002212
> 186966.927582708012778,119436.770814739997149
> 186953.698389478988247,119484.39591036499769
> 186943.115034896007273,119528.891289142993628
> 186936.57159683998907,119620.859375 186971.84375,119670.734375
> 186971.78125,119672.163458017006633
> 186968.617439594003372,119696.063002031005453
> 186969.573421353998128,119743.688097656005993
> 186940.46919624999282,119793.959031927006436
> 186871.677391458011698,119807.188225156001863
> 186813.46894125000108,119801.896547865006141
> 186752.614652396005113,119772.79232275999675
> 186723.510427291999804,119743.688097656005993
> 186694.406202187004965,119677.54213150999567
> 186673.239493021013914,119660.583764127004542
> 186665.531144209991908,119629.91703588499513
> 186636.197751978994347,119590.229456197994296
> 186591.218495000008261,119553.253450278003584
> 186558.350934182002675,119542.604360572993755
> 186525.072528854012489,119510.803252240002621
> 186495.396806019009091,119474.020814053001232
> 186476.480123523011571,119426.729 107813996961 186460.716221442999085))
> POLYGON ((104237.705314263002947
> 187060.860276371007785,104252.40881888900185
> 187042.480895587999839,104285.491704297004617
> 187009.398010180011624,104318.574589704992832
> 186983.666877084993757,104333.278094331006287
> 186972.639248615014367,104359.00922742599505
> 186965.287496301985811,104403.119741304006311
> 186961.611620145995403,104432.526750555000035
> 186954.259867832995951,104458.257883650992881
> 186935.880487051006639,104480.313140589001705
> 186891.76997317300993,104487.664892902001156
> 186843.983583138993708,104483.989016745996196
> 186810.900697731005494,104476.637264432996744
> 186781.493688479007687,104520.747778310993453
> 186711.652041505993111,104553.83066371899622
> 186682.245032255013939,104557.506539875001181
> 186663.865651472005993,104557.506539875001181
> 186641.810394533997169,104553.83066371899622
> 186612.403385281999363,104549.112004732000059
> 186593.528749333985616,104546.478911405996769
> 186582.996376030001557,104535.451282936002826
> 186549.913490622013342,104531.775406779997 866
> 186513.15472905698698,104539.127159092997317
> 186494.775348274997668,104561.182416031995672
> 186487.423595961998217,104597.941177596003399
> 186469.044215180008905,104624.615997777000302
> 186462.375510134996148,104667.523188620005385
> 186408.869372785004089,104530.97891497699311
> 186328.549211817997275,104517.045329708998906
> 186314.615626549988519,104478.727970221007126
> 186297.198644963995321,104395.126458610000554
> 186279.781663378991652,104360.292495439003687
> 186272.814870745001826,104321.975135950997355
> 186265.848078109993367,104287.141172780000488
> 186251.914492842013715,104241.85702065800433
> 186231.014114938996499,104182.639283266995335
> 186192.696755451004719,104162.869312067996361
> 186183.521016568993218,104117.875 186251.375,104068.125
> 186318.046875,103968.6328125 186451.390625,103922.76319694299309
> 186519.206396819994552,103826.490804569999455
> 186706.027917956991587,103680.256358094004099
> 186880.246419192000758,103820.524656642999616
> 186944.122644020011649,103911.087107038 998511
> 186979.700749531999463,103975.774571607005782
> 186992.63824244600255,104056.633902318004402
> 187008.810108587989816,104121.321366887001204
> 187028.216347959008999,104202.180697596995742
> 187050.856960558012361,104237.705314263002947 187060.860276371007785))
> POLYGON ((110956.1328125 184968.53125,110914.5546875
> 184960.25,110706.4453125 184794.03125,110606.609375
> 184744.203125,110515.1953125 184752.65625,110365.78125
> 184861.078125,110307.6484375 184886.125,110174.6484375
> 184877.96875,109966.59375 184745.046875,109875.1875 184753.5,109817.140625
> 184828.5,109842.390625 184994.96875,109900.8203125
> 185128.109375,110004.934234061001916
> 185238.337346401996911,110260.958032437003567
> 185399.876171568001155,110381.456076778005809
> 185449.260615970008075,110474.96875 185460.375,110608.03125
> 185501.828125,110890.8828125 185634.65625,110948.9921875
> 185592.953125,110990.375 185501.3125,110989.828125
> 185209.9375,110972.8359375 185010.140625,110956.1328125 184968.53125))
> POLYGON ((113825.902120293001644
> 185226.589828989992384,113803.237753908993909
> 185233.065362241992261,113777.335620897996705
> 185236.303128869010834,113738.482421382999746
> 185236.303128869010834,113709.342521746002603
> 185239.540895495010773,113696.213571180996951
> 185241.416459861007752,113686.678155361994868
> 185242.778662121010711,113631.352828887000214
> 185235.825756717007607,113606.678959322001901
> 185228.971904059988447,113583.069623319999664
> 185223.352062363002915,113593.144240383000579
> 185179.023747286002617,113611.348809543997049
> 185157.081704987009289,113632.506144469007268
> 185139.450592548993882,113653.663479395007016
> 185113.591627640009392,113660.776022350997664
> 185093.841397310985485,113683.440388735005399
> 185077.652564179006731,113712.580288372002542
> 185051.750431168999057,113732.006888129995787
> 185025.848298158001853,113744.957954634999624
> 185006.421698399994057,113754.671254514003522
> 184983.757332015986321,113757.909021140992991
> 184964.330732258007629,113757.9090211 40992991
> 184931.953065995010547,113757.909021140992991
> 184919.001999489992158,113751.433487888003583
> 184896.337633106013527,113715.818054999006563
> 184851.008900337008527,113696.391455240998766
> 184838.057833831990138,113680.202622109005461
> 184825.106767327000853,113670.489322230001562
> 184795.96686769000371,113670.489322230001562
> 184776.540267931995913,113680.202622109005461
> 184760.35143480100669,113688.635328171993024
> 184749.107826716004638,113695.293887934007216
> 184740.229747033998137,113699.629221866998705
> 184734.449301790009486,113707.627047489004326
> 184728.850823854008922,113736.442318347995752
> 184721.591202053998131,113774.662112915000762
> 184736.454455497005256,113853.152830256003654
> 184761.240997815009905,113927.512457210003049
> 184786.02754013298545,114000.858016993006459
> 184795.195735106011853,114030.045212668002932
> 184794.058198257989716,114044.099999301004573
> 184791.715733819000889,114060.49725037299504
> 184784.688340502994834,114072.209572566993302 184772.97601830799
> 249,114093.291752517005079 184754.236302797013195,114119.058861344004981
> 184740.181516164011555,114156.538292366007227
> 184733.1541228480055,114179.962936754993279
> 184730.811658408987569,114208.07251002099656
> 184728.469193969998742,114228.046552340994822
> 184725.531560294999508,114246.672708440994029
> 184800.545461922010873,114249.887635587001569
> 184801.878484755987301,114290.292349452996859
> 184847.058539382996969,114333.253460143998382
> 184883.530762278998736,114358.959071183999185
> 184932.397475152014522,114365.835555102006765
> 184969.323262338992208,114353.768249485001434
> 185006.707341894012643,114347.734596663998673
> 185050.191630462999456,114335.667291046003811
> 185092.431613182998262,114335.667291031000786
> 185134.667182770994259,114347.734596619004151
> 185170.86909955801093,114383.936513495005784
> 185211.363575224997476,114429.481808873999398
> 185239.369150351005374,114482.456795513004181
> 185269.028753836988471,114634.093614886005525
> 185268.697831288998714,114638.861767624999629
> 185236.910146362002706,114678.549347313004546
> 185098.00361745498958,114784.382893146001152
> 184965.711685163987568,114799.645275047994801
> 184951.143047893012408,114732.552485527005047
> 184841.177063465001993,114722.076519426002051
> 184839.272342356009176,114698.565118230995722
> 184834.997542138997233,114649.128947618999518
> 184797.92041418000008,114608.962058996999986
> 184779.381850200006738,114587.333734354004264
> 184751.574004230991704,114581.154213027999504
> 184717.586636935011484,114581.154213027999504
> 184677.419748312997399,114579.375 184580.78125,114705.910072897997452
> 184498.49317712901393,114736.610282793000806
> 184489.004021344007924,114811.878443843001151
> 184457.642287572991336,114874.601911385005224
> 184426.280553802003851,114937.325378926005214
> 184344.740045998012647,114962.414765943001839
> 184263.199538193992339,114962.414765943001839
> 184181.659030390001135,114962.414765943001839
> 184125.207909602992004,114962.414765943001839
> 184049.939748553006211,114960.53125 183947.53125 ,114960.4375
> 183897.5625,114918.7109375 183806.03125,114910.2265625
> 183714.46875,114943.3671875 183656.15625,115001.453125
> 183606.125,115043.015625 183606.0625,115064.407498846005183
> 183615.55412554499344,115133.263890671005356
> 183609.478561560012167,115200.882691738006542
> 183609.478561560012167,115264.744892746006371
> 183628.261561855993932,115298.554293278997648
> 183669.584162507992005,115283.527893042002688
> 183778.525564226991264,115260.988292686000932
> 183816.091564820002532,115259.6640625 183897.171875,115317.8984375
> 183922.0625,115367.7578125 183913.6875,115409.234375 183872.0,115475.7265625
> 183871.90625,115510.805861531000119 183882.664003095997032,115583.84375
> 183905.0625,115700.1796875 183888.25,115758.296875 183854.875,115808.0625
> 183796.53125,115832.8984375 183746.546875,115832.792941189007252
> 183690.34078480899916,115743.832050748998881
> 183581.762238452007296,115716.311821575000067
> 183483.912534723000135,115674.4140625 183447.03125,115607.859375
> 183413.828125,115541 .3359375 183397.28125,115388.836998101993231
> 183397.464714267989621,115340.921968447000836
> 183315.727310738002416,115300.199966892992961
> 183266.860908873990411,115247.069402168999659
> 183205.234957342996495,115189.968019456006004
> 183172.400677638011985,115149.281687466995209
> 183164.356583123008022,115116.687022487007198
> 183160.238713352999184,115080.302414742996916
> 183152.803045765991556,115044.812092129999655
> 183131.587285251007415,115051.617580518999603
> 183034.227451910992386,115055.464519300003303
> 182960.202997207001317,115051.307476372996462
> 182935.533720634994097,115059.316751773003489
> 182865.915075789002003,115107.818047299995669
> 182849.747977279999759,115158.232971297999029
> 182806.055043149011908,115198.564910496002994
> 182748.918129285011673,115205.286900363003951
> 182664.893255954986671,115201.925905429001432
> 182631.283306622994132,115204.934963720006635
> 182617.241034598991973,115212.008890229000826
> 182584.229377559007844,115201.925905429001432 182523.731468762009172,1
> 15195.203915563004557 182473.316544764005812,115201.925905429001432
> 182429.623610632988857,115053.370701701001963
> 182371.623726808000356,115001.587185441996553
> 182457.929587240010733,114984.391581271993346
> 182486.588927523989696,114964.555282891000388
> 182635.36116538499482,114962.92347872100072
> 182647.59969665700919,114961.412086324999109
> 182723.169316434010398,114958.654253782005981
> 182861.060943615011638,114953.915414389004582
> 182879.226494620001176,114907.423554512002738
> 183057.445290815987391,114843.281216919000144
> 183088.338026384008117,114696.143222158993012
> 183174.213015165994875,114516.609258716998738
> 183260.481820977001917,114340.86959872499574
> 183363.604160721995868,114293.917522496994934
> 183397.198045655997703,114258.022769150993554
> 183461.944390608987305,114256.070118321993505
> 183467.034238201013068,114281.03244877900579
> 183507.900892180012306,114302.792964096996002
> 183554.521283365989802,114337.085747703997185
> 183601.046266001008917,114324.622999607992824 183657
> .049318303004839,114302.832865606003907
> 183672.601917076011887,114271.72273247600242
> 183675.813809434010182,114253.0819437129976
> 183672.755824121995829,114231.338889798003947
> 183666.606124509999063,114209.598386925994419
> 183660.461272551998263,114187.857788071996765
> 183654.316485652001575,114169.220854818006046
> 183651.266066698008217,114147.470927970993216
> 183654.430347421002807,114135.033834806003142
> 183663.774250574992038,114122.586305956006981
> 183676.211911399004748,114122.555219019006472
> 183704.151027462008642,114122.434988259003148
> 183735.005830298003275,114134.928026731999125
> 183778.579661936993944,114135.167685634994996
> 183810.098675941990223,114110.838388869000482
> 183854.733349110989366,114082.970732364992728
> 183864.328397806995781,114058.281749706002302
> 183869.69181637201109,114039.478262121992884
> 183838.352670399006456,113991.085295971002779
> 183841.199315467005363,113927.219248410998262
> 183872.412260295997839,113904.445987326005707
> 183829.971182818990201,113883.743 732312999782
> 183801.185059640003601,113856.162695936000091
> 183776.002374252013396,113809.709566151999752
> 183733.827109656005632,113783.965231092995964
> 183729.007718620006926,113727.760798647999763
> 183734.156421647989191,113674.622880726994481
> 183777.289146674011135,113620.306679325003643
> 183835.311151380010415,113584.354401254997356
> 183936.631207758997334,113570.118708045003586
> 184007.809673812007532,113554.133454576993245
> 184087.735941152001033,113539.5234375 184115.90625,113466.411381477999385
> 184168.854455141990911,113435.768507025000872
> 184202.498409814987099,113328.03638917299395
> 184298.143720335996477,113303.442521485994803
> 184362.661898752994603,113282.119693518005079
> 184417.652421567006968,113223.827879713004222
> 184485.118255784997018,113200.296465420993627
> 184506.741717567987507,113266.0703125 184565.84375,113432.453125
> 184640.546875,113464.738148090997129
> 184636.821743042994058,113492.917391695998958
> 184634.943126803002087,113513.58217033999972 184640.5789755239966
> 33,113539.882797704005498 184646.214824244991178,113562.42619258799823
> 184655.607905446988298,113575.576506269993843
> 184659.365137927001342,113584.969587472005514
> 184670.636835368990432,113590.60543619300006
> 184676.272684090014081,113592.484052433006582
> 184693.180230252997717,113588.726819952004007
> 184704.451927694986807,113583.09097123099491
> 184713.845008897013031,113571.81927378999535
> 184726.995322578994092,113566.183425069000805
> 184742.024252501985757,113560.54757634800626
> 184753.295949943014421,113554.911727626997163
> 184766.446263626014115,113550.691957057002583
> 184794.671173798997188,113550.691957057002583
> 184802.442400942993117,113550.691957057002583
> 184841.295600457990076,113553.929723683002521
> 184863.959966842987342,113553.929723683002521
> 184880.148799974005669,113560.806287220999366
> 184919.649390820995905,113560.54757634800626
> 184974.972666301007848,113551.154495145994588
> 185029.452537270990433,113536.125565223002923
> 185083.932408240012592,113524.368654848993174 185
> 101.837552681012312,113505.363224287997582
> 185122.981296948011732,113489.174391156993806
> 185135.932363453001017,113469.747791399000562
> 185158.596729837008752,113460.034491519996664
> 185178.023329594987445,113458.806390423997073
> 185189.076239460002398,113456.796724893007195
> 185207.163229232013691,113450.321191640992765
> 185236.303128869010834,113447.083425014992827
> 185252.491962000000058,113443.845658388003358
> 185275.156328384007793,113440.607891762003419
> 185301.058461395004997,113434.132358508999459
> 185365.81379392099916,113434.653732513994328
> 185375.198526001011487,113475.084988307004096
> 185377.015121451986488,113490.163464152996312
> 185385.239744640013669,113503.871169467005529
> 185403.059761548007373,113509.354251591998036
> 185420.879778456001077,113512.095792655003606
> 185431.845942707994254,113524.432727438004804
> 185453.778271210001549,113534.028121156996349
> 185470.227517586987233,113540.881973814000958
> 185481.19368183799088,113550.477367533996585 185490.789075557986507,11357
> 1.038925504995859 185493.530616620992078,113587.488171881996095
> 185492.159846088994527,113597.083565602006274
> 185488.047534495010041,113609.42050038400339
> 185475.710599712008843,113615.10125623899512
> 185478.686352390010143,113640.182487359998049
> 185489.659173336985987,113662.139164100997732
> 185492.788052154006436,113680.9704833470023
> 185494.341623607993824,113701.385670374002075
> 185497.45180087100016,113715.528970009007026
> 185498.994428673002403,113728.056761689003906
> 185498.928972760011675,113744.855936508000013
> 185495.405113287997665,113757.380111139995279
> 185492.199826800002484,113765.367214330006391
> 185484.459169739013305,113773.352733467007056
> 185475.134992750012316,113780.564241051994031
> 185461.950063183991006,113789.191544742003316
> 185451.942827463994035,113793.833324142993661
> 185444.106052910006838,113802.677497052995022
> 185433.134568540001055,113809.673914297993178
> 185423.730439084989484,113813.145396548003191
> 185412.758954724005889,113811.627603482993436 185400.220
> 115456002532,113812.605256128998008
> 185382.979211466008564,113812.604017530000419
> 185368.873017292993609,113815.154511704997276
> 185359.468887844996061,113829.260705887005315
> 185336.317731321993051,113843.366900074004661
> 185318.123220968001988,113848.06896480100113
> 185302.585151086997939,113846.50160988800053
> 185275.709072610014118,113837.503797190001933
> 185248.677657032996649,113825.902120293001644 185226.589828989992384))
> POLYGON ((133352.116389208997134 178404.452368089987431,133404.859375
> 178254.375,133411.396453914989252
> 178215.516751251008827,133395.173059001012007
> 178072.210096185008297,133376.245938206004212 177991.76896645501256,133298.0
> 177885.5,133228.561796452995623 177845.18436434600153,133224.234375
> 177842.671875,133121.110402910999255
> 177815.457887321012095,133077.436107073997846
> 177801.666004425002029,133033.761811236996436
> 177801.666004425002029,133022.268575489986688
> 177824.652475918002892,133024.567222640005639
> 177856.833536007994553,133040.657752684986917
> 177872.924066053994466,133061.345577028987464
> 177889.014596099004848,133077.436107073997846
> 177902.80647899498581,133091.227989970007911
> 177916.598361890995875,133102.721225715999026
> 177932.688891936006257,133116.513108612009091
> 177948.779421980987536,133125.707697209989419
> 177962.571304876997601,133128.006344358989736
> 177978.661834922007984,133121.110402910999255
> 178001.648306415998377,133107.31852001498919 178017.738836461
> 008759,133070.540165626007365 178031.530719356989721,133026.865869789005956
> 178031.530719356989721,132990.087515399995027
> 178031.530719356989721,132948.711866711993935
> 178029.232072207989404,132882.023153418005677
> 178024.854571954987478,132867.161927364009898
> 178072.410495327989338,132870.287451821001014
> 178113.042313276993809,132871.923886194999795
> 178134.315960131993052,132846.281531104003079
> 178215.516751251008827,132830.058136190986261
> 178285.818129208986647,132830.058136190986261
> 178353.415608014009194,132866.538762824988225
> 178397.090588388004107,132925.064316036994569
> 178422.997253473993624,133018.74643311399268
> 178458.802372731996002,133128.71950591399218
> 178458.802372731996002,133235.720333503006259
> 178426.107675414008554,133315.970954195014201
> 178411.246449360012775,133352.116389208997134 178404.452368089987431))
> POLYGON ((134453.860572328005219
> 174147.424040960002458,134460.68961902501178
> 174141.623379942990141,134498.803385164006613
> 174128.011320607009111,134512.415444498998113
> 174114.399261271988507,134534.194739436003147
> 174089.897554469003808,134536.917151303001447
> 174057.228612064005574,134534.194739436003147
> 174024.559669659007341,134526.027503833989613
> 173986.445903521002037,134523.305091966991313
> 173961.944196716998704,134517.860268232994713
> 173937.442489914014004,134512.415444498998113
> 173907.495959376014071,134506.970620765001513
> 173877.549428839003667,134506.970620765001513
> 173844.880486434005434,134515.137856365996413
> 173809.4891321620089,134520.582680099993013
> 173776.820189758000197,134534.194739436003147
> 173730.539188018010464,134569.58609370701015
> 173706.03748121400713,134608.088819247001084
> 173705.873708834988065,134651.379542228009086
> 173727.519070325011853,134725.336403741006507
> 173756.147532845992828,134820.764612144994317
> 173811.018752678995952,134904.264294497988 885
> 173844.418625619990053,135002.078208112012362
> 173870.661382930993568,135238.929864914010977
> 173900.341868657997111,135244.077348126011202
> 173902.915610263997223,135313.443875669996487
> 173899.899674284009961,135342.974850420985604
> 173899.957640303007793,135376.747588995000115
> 173892.163931401999434,135384.69528903500759
> 173883.080845641990891,135426.386113643995486
> 173895.554727436014218,135542.256513081985759
> 173908.877531078003813,135654.940151129005244
> 173914.214682729012566,135722.217993825004669
> 173912.342565992992604,135724.316549943003338
> 173931.229571058007423,135735.989749683998525
> 173991.263169721991289,135742.660149534989614
> 174024.615168980992166,135766.006549015990458
> 174057.967168239003513,135781.090208671987057
> 174078.968627847993048,135817.10825454199221
> 174104.981660975987324,135825.7979023999942
> 174120.105620822985657,135823.660389314987697
> 174169.261802377994172,135812.699347977992147
> 174189.707565309014171,135801.02614823699696 174203.048365011985879,1
> 35779.34734871899127 174229.729964419006137,135764.338949052995304
> 174254.743963862012606,135757.668549202004215
> 174274.755163416994037,135756.00094923900906
> 174301.436762824014295,135761.003749127004994
> 174333.121162119001383,135774.344548830995336
> 174363.137961450993316,135786.017748571000993
> 174399.825160634994972,135792.127141122007743
> 174412.043945737998001,135813.913778368994826
> 174408.41283953000675,135826.88428619800834
> 174406.173803762998432,135900.523135488998378
> 174394.000844230991788,136000.0
> 174398.303027741989354,136049.455234038003255
> 174398.850934077985585,136036.558966535987565
> 174263.440125296998303,136022.241598530992633
> 174191.853285277000396,136015.082914528989932
> 174101.176621251011966,136027.014054533006856
> 173955.616713210009038,136053.262562540010549
> 173912.664609197992831,136093.828438552009175
> 173869.712505186005728,136134.394314562989166
> 173795.739437165000709,136149.263172495004255
> 173791.83880285298801,136161.814873613999225 173779.2871017339930
> 4,136182.499387185001979 173758.602588164008921,136224.04465554599301
> 173741.984480818995507,136260.670328615000471
> 173737.207219114003237,136254.933876060007606
> 173618.770579522999469,136255.760650095995516
> 173598.562979453010485,136269.44548228799249
> 173579.404214384005172,136292.709697014011908
> 173573.930281507986365,136329.658743931999197
> 173588.983596918988042,136354.291441878012847
> 173599.931462671986083,136384.398072699987097
> 173602.66842911101412,136432.681081429996993
> 173597.181635974004166,136507.561562426999444
> 173556.139999657985754,136529.45729393401416
> 173536.981234589999076,136551.353025440999772
> 173509.611570206005126,136566.406340852001449
> 173489.084321917995112,136582.828139482007828
> 173474.031006506993435,136596.512971674004802
> 173464.451623973000096,136618.408703180990415
> 173452.135275000007823,136655.357750099006807
> 173445.292858903994784,136679.990448044001823
> 173442.555892466014484,136697.780729894002434
> 173427.502577055012807,136699.149213113007136 17
> 3406.975328767002793,136699.346701347996714
> 173385.946793317008996,136646.874765699991258
> 173364.979644809005549,136635.625 173360.484375,136614.303253522986779
> 173353.604483219009126,136594.422435632994166
> 173318.826754576002713,136588.874396433006041
> 173309.121509910008172,136555.646158068993827
> 173255.12562256801175,136518.26438990898896
> 173167.901496862003114,136514.110860113985837
> 173113.905609520996222,136539.032038887002273
> 173084.830900951987132,136597.181456024001818
> 173072.370311564998701,136634.563224184006685
> 173080.677371155994479,136676.098522138985572
> 173059.9097221789998,136684.405581730010454
> 173034.988543406012468,136676.098522138985572
> 172993.453245449985843,136655.330873161990894
> 172910.382649539998965,136603.125 172842.796875,136583.154760940000415
> 172817.777874750987394,136521.424653827998554
> 172787.577307044994086,136458.330641668988392
> 172782.319472698989557,136440.073915495013352
> 172774.340405744005693,136392.216925726999762 172706.986123848007992,13
> 6367.402190291992156 172701.6686805410136,136344.359935958986171
> 172708.758604950999143,136236.238588706008159
> 172781.430330153991235,136213.196334373002173
> 172783.202811255992856,136188.381598937994568
> 172781.430330153991235,136149.387014682986774
> 172760.160556922986871,136078.487770581996301
> 172673.308982899994589,136057.21799735201057
> 172634.314398644986795,136048.355591839994304
> 172582.912446672009537,136049.633296076004626
> 172554.377052052994259,136060.76016537900432
> 172487.385762113000965,136067.295211635006126
> 172466.404824133001966,136044.529388650000328
> 172481.202609072992345,136023.918878517986741
> 172485.067079722997732,136000.0
> 172488.746907186985482,135921.491797033988405
> 172499.760091345000546,135875.712698671006365
> 172515.564814389013918,135744.069447045010747
> 172562.298307810997358,135697.675105586007703
> 172602.50673707498936,135656.457611518999329
> 172684.755274214985548,135610.243736041011289
> 172729.25752467600978,135568.323927037999965 172789.142966107989196
> ,135546.365931845997693 172863.00167720700847,135548.362113228009548
> 172930.871844162989873,135548.362113228009548
> 172994.749648357013939,135528.400299417000497
> 173028.684731835994171,135510.772644159005722
> 173035.494907010986935,135478.799930137000047
> 173030.113361086987425,135446.810491760988953
> 173003.940184233011678,135380.819360071996925
> 172923.284356613003183,135367.572155061003286
> 172915.592431122990092,135307.662069413985591
> 172915.592431122990092,135269.494842635001987
> 172897.711104410991538,135235.056263723003212
> 172884.318323723011417,135188.629453620989807
> 172867.556312778993743,135178.102080771990586
> 172866.052402372006327,135154.039514259988209
> 172864.548491964989807,135134.488678969006287
> 172866.052402372006327,135117.945664491999196
> 172863.044581558002392,135105.914381236012559
> 172858.532850337011041,135098.39482920098817
> 172848.00547748801182,135098.39482920098817
> 172837.478104639012599,135102.906560422008624
> 172820.935090162005508,135108.922202049987391 172
> 811.911627719993703,135117.945664491999196
> 172798.376434056990547,135137.496499783010222
> 172778.825598766008625,135149.527783038996859
> 172754.763032254006248,135148.023872632009443
> 172729.196555334987352,135145.76098249500501
> 172702.938197128998581,134999.561651129013626
> 172784.968706624989863,134715.205906401999528
> 172917.341208480997011,134359.548829653009307
> 173077.960533464007312,134271.848138819012092
> 173095.98122336101369,134194.811964126012754
> 173092.771382748993346,134127.405311268987134
> 173092.771382748993346,134082.467542697995668
> 173079.932020300009754,134024.690411677991506
> 173079.932020300009754,133990.019010040006833
> 173081.97151451400714,133915.555830861994764
> 173086.351701525010867,133899.91311593199498
> 173091.405501733010169,133831.02559197001392
> 173087.045531860989286,133694.122716993995709
> 173111.936963674990693,133542.650757802999578
> 173107.481906052009435,133359.99339524799143
> 173080.751560311997309,133319.897876639006427
> 173071.84144506600569,133275.347 300405992428
> 173062.931329818995437,133199.611320810014149
> 173036.200984079012414,133141.695571707008639
> 173005.015580715989927,133106.055110721004894
> 172973.830177352996543,133030.319131124997512
> 172920.369485873990925,132950.128093906008871
> 172880.273967263987288,132874.392114310001489
> 172866.908794395014411,132860.593004425987601
> 172863.842325531004462,132866.524410490994342
> 172871.627295990998391,132870.701757064001868
> 172955.174227445008,132805.589791033009533
> 173025.644125190010527,132666.011775001999922
> 173088.84931777100428,132599.016478982986882
> 173109.871265653986484,132540.69137782100006
> 173159.864209507009946,132527.069595518987626
> 173176.51305454300018,132510.699287088995334
> 173196.521209291007835,132398.98658895000699
> 173205.407446642988361,132353.747464768995997
> 173202.74632169099641,132338.289302390010562
> 173198.713757591991453,132338.275217479997082
> 173214.469510599999921,132353.286533509002766
> 173262.472431522008264,132383.280995748005807 173292.46689376101
> 1306,132404.278444711992051 173337.463627041986911,132419.289204078988405
> 173379.507289598986972,132440.298935152997728
> 173403.554583244986134,132464.308637899986934
> 173424.604423593002139,132500.492046342988033
> 173439.288811519014416,132536.550157332007075
> 173427.566937341005541,132566.641479740006616
> 173409.941505533002783,132590.73496684798738
> 173392.34506776399212,132620.901768106996315
> 173380.953587124997284,132642.044581861991901
> 173381.433840606012382,132681.248126793012489
> 173382.289654146006797,132714.270460591011215
> 173379.762193036993267,132729.263344028004212
> 173370.933679684007075,132741.26514830198721
> 173359.07448727398878,132747.273211521009216
> 173347.160826468985761,132747.311373394011753
> 173308.295677018002607,132729.267514682986075
> 173275.127329832990654,132726.203760294010863
> 173242.034253062010976,132735.189944087993354
> 173203.129136784991715,132756.241637719998835
> 173176.396153050998691,132795.268829484994058
> 173155.135714364005253,132830.222844631993212
> 173150.088593777007191,132834.31762487499509
> 173163.21043914501206,132868.514636570005678
> 173209.842727818991989,132908.929286753991619
> 173234.713281778007513,132930.691021467995597
> 173237.822101022989955,132971.105671652010642
> 173247.148558757995488,133008.411502592003671
> 173272.019112718000542,133045.717333531007171
> 173312.433762901986483,133073.696706735005137
> 173331.08667837100802,133117.220176164002623
> 173352.848413086001528,133160.74364559398964
> 173368.392509311001049,133198.04947653299314
> 173396.371882514999015,133229.137668982002651
> 173446.11299043399049,133229.137668982002651
> 173477.201182883,133216.702392001985572
> 173495.854098353011068,133132.764272389002144
> 173533.159929291985463,133070.587887489993591
> 173548.704025517014088,133002.193864102009684
> 173567.356940986996051,132983.540948631998617
> 173623.315687394991983,133002.193864102009684
> 173682.38325304898899,133039.499695041013183
> 173722.797903233004035,133079.914345224999124
> 173738.341999458003556,133104.78489 9185004178
> 173756.994914927985519,133135.87309163401369
> 173775.647830397007056,133160.74364559398964
> 173800.51838435701211,133173.178922572988085
> 173822.280119070986984,133182.505380307993619
> 173859.585950009990484,133188.723018797987606
> 173896.891780950012617,133198.04947653299314
> 173924.871154154010583,133207.375934267998673
> 173955.959346602990991,133234.354553142999066
> 174018.867188704985892,133293.806344200012973
> 173980.648180168005638,133399.940391934011132
> 173953.004053140000906,133458.994440109003335
> 173940.477436860004673,133516.258971672999905
> 173910.055654466996202,133577.658412337012123
> 173868.537594438996166,133630.667184632009594
> 173858.440685429988662,133666.006366162007907
> 173860.964912681985879,133741.612587089010049
> 173754.187501745007467,133792.008175955008483
> 173676.30340986000374,133846.985181991010904
> 173635.070655332994647,133920.287856706010643
> 173607.582152315007988,133952.35777689400129
> 173593.837900805985555,134011.9162001000077 173589.2564836360106
> 71,134030.241868777986383 173603.000735145004001,134053.148954626987688
> 173639.652072502998635,134071.474623304995475
> 173680.884827030007727,134163.102966698992532
> 173708.373330047994386,134199.754304055997636
> 173708.373330047994386,134259.312727262004046
> 173712.954747217998374,134295.96406461900915
> 173731.280415896006161,134314.289733298006468
> 173754.187501745007467,134323.452567636995809
> 173809.164507781009888,134314.289733298006468
> 173877.88576532600564,134282.219813109986717
> 173914.537102683010744,134245.568475753010716
> 173923.699937022989616,134196.670841899001971
> 173928.325685871008318,134154.861543651000829
> 173937.766495152987773,134123.841741723997984
> 173943.16124331401079,134095.519313878001412
> 173952.602052595990244,134073.478043584997067
> 173962.929271269997116,134057.730371796002146
> 173978.676943058992038,134057.730371796002146
> 173994.160543186997529,134057.730371796002146
> 174033.653949094994459,134057.730371796002146
> 174084.049537960992893,134053.148954626987688
> 174129.863709658005973,134062.311788966006134
> 174189.422132864012383,134108.12596066299011
> 174244.399138899985701,134111.830311503988924
> 174250.098140193003928,134152.628760846011573
> 174239.002091341011692,134215.081032465997851
> 174222.016802242986159,134279.007453142985469
> 174175.98977935500443,134355.445470215985551
> 174129.277657809987431,134410.65070476901019
> 174125.031101305998163,134418.422194259997923
> 174131.831154610001249,134453.860572328005219 174147.424040960002458))
> POLYGON ((116040.234997117004241
> 164221.086214440991171,116005.172221333006746
> 164231.848056513990741,115776.856287563001388
> 164282.584930684999563,115530.772246510998229
> 164340.339348482986679,115282.177143816006719
> 164400.604827923991252,115149.233396431998699
> 164421.595945932000177,115139.046630142998765
> 164423.204382714990061,115089.36729698900308
> 164421.293639131996315,115089.433138812004472
> 164439.599353588011581,115089.234375 164461.8125,115077.452773454002454
> 164525.68601485399995,115066.086066994001158
> 164563.798366650997195,115052.75088526699983
> 164561.513623887993162,115009.697589058996527
> 164584.276581367012113,114982.511893393006176
> 164614.898029858013615,115001.919621328997891
> 164647.701165693986695,115014.445834063997609
> 164659.51369633700233,115023.641696488004527
> 164686.843966057000216,115074.045751297002425
> 164748.243322001013439,115089.561454113994841
> 164760.775235815002816,115098.799393705994589
> 164771.218124048988102,115130.219388030003756 164787.90999603
> 3995412,115137.559926048998022 164793.537741848995211,115145.3397239229962
> 164801.60568038400379,115194.144021065003471
> 164828.099441689992091,115202.269460819996311
> 164821.779655213991646,115209.849872532999143
> 164813.07138846500311,115231.652692785995896
> 164793.768727893009782,115236.113046910002595
> 164785.839209450990893,115238.84307041100692
> 164775.427485221996903,115280.123142936005024
> 164735.373990311985835,115370.668675355002051
> 164713.910008456005016,115400.646695078001358
> 164695.923196621995885,115421.848982787007117
> 164683.201823996001622,115462.793228733004071
> 164647.375608794012805,115513.973536164994584
> 164632.021516564011108,115554.91778211100609
> 164626.903485821007052,115600.9800588000071
> 164626.903485821007052,115647.042335488993558
> 164626.903485821007052,115682.868550690996926
> 164616.667424334009411,115718.694765894004377
> 164591.077270617999602,115754.520981095993193
> 164555.251055416010786,115790.347196299000643
> 164514.30680946999928,115821.055380757999956 1
> 64478.480594268010464,115872.235688190005021
> 164452.890440551011125,115933.652057108993176
> 164422.18225609199726,116005.304487514003995
> 164371.001948660006747,116046.248733460000949
> 164309.585579740989488,116056.484794945994508
> 164248.169210822990863,116040.234997117004241 164221.086214440991171))
> POLYGON ((167044.920178000989836 156448.941515787999379,167103.890625
> 156389.8125,167121.125 156347.5625,167120.50019087898545
> 156334.531851175008342,167142.447425732010743
> 156304.746318160992814,167181.638916539988713
> 156270.257806250010617,167193.994136583001819
> 156259.025788028986426,167356.728131673997268
> 156147.345595318998676,167429.798994815995684
> 156122.988640939001925,167534.076945034001255
> 156096.043303962011123,167609.40625 156104.6875,167813.462660891003907
> 156159.57993822300341,167862.380489175004186
> 156166.618474666989641,167886.893464283988578
> 156170.593551711994223,167921.344132005993742
> 156177.218680119985947,167945.857107115007238
> 156178.543705801013857,167963.082440975995269
> 156175.231141597003443,167970.370082225010265
> 156165.955961825995473,167976.995210633001989
> 156148.068115124013275,167977.657723473996157
> 156118.917550129001029,167980.714693004003493
> 156096.743362509994768,167974.230460566002876
> 156067.564316537987906,167981.048614791012369 155997.8676
> 28906009486,168025.043376913003158
> 155935.541715900006238,168043.742137861991068
> 155842.047911155008478,167993.528579501988133
> 155857.111978662986076,167937.608493436011486
> 155864.239048455987358,167917.122147729009157
> 155861.290832647995558,167900.806559688004199
> 155850.208546431007562,167888.422944397985702
> 155830.394761967007071,167885.946221340011107
> 155807.278680093004368,167885.466065674001584
> 155769.826538097986486,167892.963111713004764
> 155732.341307900001993,167923.443172912986483
> 155686.621216100000311,168001.101655837992439
> 155684.815204868995352,168006.25360671299859
> 155682.785648463992402,168018.809487743012141
> 155654.534916147997137,168020.731658331002109
> 155614.16933378300746,168013.042975975986337
> 155575.72592200798681,168001.203091748990119
> 155547.606196968001314,167997.665611266013002
> 155539.204680821014335,167972.631528369995067
> 155522.455528424005024,167950.341020847990876
> 155519.153231013013283,167935.480682499997783
> 155520.804379718989367,167905.1076341 39014408
> 155532.732533581001917,167820.858293138997396
> 155564.621556888014311,167782.046875 155581.546875,167747.049750537000364
> 155610.321038102993043,167636.265625 155701.40625,167615.658181759004947
> 155717.303584354987834,167538.604575511009898
> 155769.339785977004794,167500.578120479010977
> 155794.357190603011986,167467.555146372003946
> 155808.366937193990452,167440.1066432580119
> 155812.028761099005351,167405.511982900003204
> 155809.367633379006293,167379.882081513002049
> 155803.461450700007845,167382.404423155996483
> 155853.908283561991993,167384.962091713008704
> 155905.061654699995415,167372.954149864002829
> 155971.105334872991079,167349.564321562007535
> 156005.502155102993129,167312.709162193990778
> 156038.8795443130075,167274.929469886003062
> 156046.657716257992433,167207.653499278996605
> 156052.424228024989134,167142.29969926000922
> 156052.424228024989134,167076.945899242011365
> 156040.891204492014367,167025.047293345007347
> 156029.358180959010497,166980.837369802989997 156015.902
> 986837987555,166942.186930561991176
> 156008.649706416996196,166879.833361032011453
> 155996.525401229999261,166824.40796589499223
> 155986.999161440995522,166768.116548958001658
> 155969.67872546100989,166719.480755513010081
> 155955.861756700003752,166578.957665013993392
> 155910.693620467995061,166575.015625 155911.53125,166559.405295394011773
> 156013.845837211003527,166584.28125 156036.453125,166616.562734130013268
> 156047.620687373011606,166923.047894221992465
> 156114.744234131008852,166958.2412349130027
> 156174.302195299998857,166963.321245113009354
> 156220.02228710000054,166978.561275713000214
> 156352.102552299998933,167009.041336913011037
> 156413.062674699991476,167044.920178000989836 156448.941515787999379))
> POLYGON ((126158.075436781000462
> 221712.718626752990531,126180.025840464993962
> 221664.427738647995284,126149.295275306998519
> 221497.604670648986939,126138.7109375 221327.171875,126129.34375
> 221189.234375,126106.612250645004679 221108.317915799998445,126112.2109375
> 221058.9375,126080.65625 220989.859375,125887.1953125
> 220747.9375,125781.828125 220630.90625,125664.140625
> 220497.328125,125587.8046875 220382.828125,125510.124775638993015
> 220251.913427255989518,125489.553725217992906
> 220267.913133138994453,125460.109872019995237
> 220275.943274921010016,125427.989304895003443
> 220281.296702774998266,125379.808454208992771
> 220275.943274921010016,125319.139336007996462
> 220261.775002529000631,125324.250564721005503
> 220283.242163123999489,125334.556426376002491
> 220329.618540571013,125347.438753444002941
> 220381.14784884499386,125357.74461509899993
> 220409.488968396006385,125368.050476753996918
> 220437.830087946989806,125378.356338408993906
> 220461.018276671005879,125388.662200064005447 22048
> 9.35939622099977,125396.414742263004882
> 220521.492952252010582,125402.894839758999296
> 220547.639056632993743,125414.07867852099298
> 220610.208100515999831,125420.008905426002457
> 220625.927757525001653,125433.046701357001439
> 220660.487932616000762,125443.041733278994798
> 220735.450672033010051,125450.538007220995496
> 220800.418379526992794,125453.448151068005245
> 220846.249786027008668,125454.788265765993856
> 220867.355045670992695,125458.123645140003646
> 220919.883420886006206,125458.732129900003201
> 220925.859035978006432,125467.224272217994439
> 221009.25598709701444,125483.29907360499783
> 221112.679052077000961,125500.364027478994103
> 221167.280285576009192,125534.683972151993657
> 221251.760149387002457,125670.776474993996089
> 221422.973298122989945,125815.649139308996382
> 221563.455881700996542,125953.381228586993529
> 221684.984195769997314,125964.911884361004923
> 221695.158303806005279,126039.543256887001917
> 221721.498788227007026,126114.174629411994829
> 221725.88886896398617,126158.075 436781000462 221712.718626752990531))
> -------------- next part -------------- A non-text attachment was
> scrubbed... Name: InCircle.cpp Type: application/octet-stream Size: 8091
> bytes Desc: not available Url :
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/86b7314c/InCircle.obj------------------------------
> _______________________________________________ geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel End of geos-devel
> Digest, Vol 81, Issue 11 ******************************************




-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/fee3b5e2/attachment-0001.html
From geosanak at gmail.com  Sun Jul 19 08:24:34 2009
From: geosanak at gmail.com (Sanak Goe)
Date: Sun Jul 19 08:24:39 2009
Subject: [geos-devel] Re: Computational Geometry Problem
In-Reply-To: <23ab5f0a0907181733x4f1bd457x57cec7a550e7ce5f@mail.gmail.com>
References: <23ab5f0a0907181733x4f1bd457x57cec7a550e7ce5f@mail.gmail.com>
Message-ID: <5f9be0a0907190524n5a8de434y38731cf04e7770d0@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
#include <locale.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <stdexcept>
#include <map> // added by sanak 2009.07.19
#ifdef _MSC_VER
#include <io.h>
#endif // _MSC_VER

//Geos
#include <geos_c.h>

#include <geos/algorithm/CGAlgorithms.h>
#include <geos/algorithm/HCoordinate.h>
#include <geos/geom/Coordinate.h>
#include <geos/geom/CoordinateArraySequence.h>
#include <geos/geom/LineString.h>
#include <geos/geom/MultiPoint.h>
#include <geos/geom/Point.h>
#include <geos/geom/Polygon.h>
#include <geos/io/WKTReader.h>
#include <geos/io/WKTWriter.h>

// <-- modified by sanak 2009.07.19
//const double epsilonArea = 100.0;
const double epsilonRadius = 0.1;
// --> modified by sanak 2009.07.19

// <-- Boost code
template < class BidirectionalIterator >
bool next_combination ( BidirectionalIterator first1 ,
  BidirectionalIterator last1 ,
  BidirectionalIterator first2 ,
  BidirectionalIterator last2 )
{
  if (( first1 == last1 ) || ( first2 == last2 )) {
    return false ;
  }
  BidirectionalIterator m1 = last1 ;
  BidirectionalIterator m2 = last2 ; --m2;
  while (--m1 != first1 && !(* m1 < *m2 )){
  }
  bool result = (m1 == first1 ) && !(* first1 < *m2 );
  if (! result ) {
    while ( first2 != m2 && !(* m1 < * first2 )) {
      ++ first2 ;
    }
    first1 = m1;
    std :: iter_swap (first1 , first2 );
    ++ first1 ;
    ++ first2 ;
  }
  if (( first1 != last1 ) && ( first2 != last2 )) {
    m1 = last1 ; m2 = first2 ;
    while (( m1 != first1 ) && (m2 != last2 )) {
      std :: iter_swap (--m1 , m2 );
      ++ m2;
    }
    std :: reverse (first1 , m1 );
    std :: reverse (first1 , last1 );
    std :: reverse (m2 , last2 );
    std :: reverse (first2 , last2 );
  }
  return ! result ;
}

template < class BidirectionalIterator >
bool next_combination ( BidirectionalIterator first ,
  BidirectionalIterator middle ,
  BidirectionalIterator last )
{
  return next_combination (first , middle , middle , last );
}
// Boost Code -->

bool computeIncircle(
					 const geos::geom::Polygon* poly,
					 const geos::geom::Polygon* negbuf,
					 geos::geom::Coordinate& center,
					 double& radius)
{
	radius = 0.0;

	if (negbuf == NULL)
	{
		negbuf = poly;
	}

	try
	{

		if (!negbuf->isValid())
		{
			throw std::runtime_error("Invalid polygon.");
		}

		if (negbuf->getNumInteriorRing() > 0)
		{
			throw std::runtime_error("This sample only supports non-holes polygon.");
		}

		const geos::geom::LineString* shell = negbuf->getExteriorRing();
		geos::geom::CoordinateArraySequence* coords = static_cast<geos::geom::CoordinateArraySequence*>(shell->getCoordinates());

		// compute orientation of ring
		if (!geos::algorithm::CGAlgorithms::isCCW(coords))
		{
			coords->reverse(coords);
		}

		// compute angle bisector of every  continuous three points in polygon
		size_t cnt = coords->size() - 1;
		// <-- modified by sanak 2009.07.19
		//std::vector<geos::algorithm::HCoordinate*> bisects;
		std::vector<size_t> bisectids;
		std::map<size_t, geos::algorithm::HCoordinate*> bisects;
		// --> modified by sanak 2009.07.19
		for (size_t i = 0; i < cnt; i++)
		{
			size_t prev = (i == 0) ? cnt - 1 : i - 1;
			size_t curr = i;
			size_t next = (i == cnt - 1) ? 0 : i + 1;

			// <-- JTS 1.10 Code
			geos::geom::Coordinate a = coords->getAt(prev);
			geos::geom::Coordinate b = coords->getAt(curr);
			geos::geom::Coordinate c = coords->getAt(next);

			double len0 = b.distance(a);
			double len2 = b.distance(c);
			double frac = len0 / (len0 + len2);
			double dx = c.x - a.x;
			double dy = c.y - a.y;

			geos::geom::Coordinate splitPt = geos::geom::Coordinate(a.x + frac * dx, a.y + frac * dy);
			// --> JTS 1.10 Code
			// <-- modified by sanak 2009.07.19
			//bisects.push_back(new geos::algorithm::HCoordinate(b, splitPt));
			bisectids.push_back(i);
			bisects.insert(std::pair<size_t, geos::algorithm::HCoordinate*>(i, new geos::algorithm::HCoordinate(b, splitPt)));
			// --> modified by sanak 2009.07.19
		}

		// get intersection points of angle bisectors
		geos::geom::CoordinateArraySequence intsects;
		do
		{
			// <-- modified by sanak 2009.07.19
			//geos::algorithm::HCoordinate* hc0 = bisects[0];
			//geos::algorithm::HCoordinate* hc1 = bisects[1];
			geos::algorithm::HCoordinate* hc0 = bisects[bisectids[0]];
			geos::algorithm::HCoordinate* hc1 = bisects[bisectids[1]];
			// --> modified by sanak 2009.07.19
			geos::algorithm::HCoordinate* hcoord = new geos::algorithm::HCoordinate(*hc0, *hc1);
			try
			{
				// get intersection
				geos::geom::Coordinate coord = geos::geom::Coordinate(hcoord->getX(), hcoord->getY());

				// TODO:remove duplicate point
				intsects.add(coord);
			}
			catch (std::exception& ex)
			{
				// no intersection
			}
			if (hcoord)
			{
				delete hcoord;
			}
		}
		// <-- modified by sanak 2009.07.19
		//while (next_combination(bisects.begin(), bisects.begin() + 2, bisects.end()));
		while (next_combination(bisectids.begin(), bisectids.begin() + 2, bisectids.end()));
		// --> modified by sanak 2009.07.19

		// clean up
		if (bisects.size() > 0)
		{
			std::cout << "bissects ok." << std::endl;
			// <-- modified by sanak 2009.07.19
			//std::vector<geos::algorithm::HCoordinate*>::iterator it;
			//for (it = bisects.begin(); it != bisects.end(); it++)
			//{
			//	delete *it;
			//}
			std::map<size_t, geos::algorithm::HCoordinate*>::iterator it;
			for (it = bisects.begin(); it != bisects.end(); it++)
			{
				delete it->second;
			}
			// --> modified by sanak 2009.07.19
		}
		else
		std::cout << "No bissects." << std::endl;

		std::cout << "intsects.size()" << intsects.size() <<  std::endl;
		if (intsects.size() > 0)
		{
			std::cout << "intsects ok." << std::endl;

			geos::geom::Point* incenter = NULL;

			geos::geom::GeometryFactory factory;
			const geos::geom::LineString* line = poly->getExteriorRing();
			//geos::geom::MultiPoint* rcpoints = factory.createMultiPoint(intsects); // for debug

			std::vector<geos::geom::Coordinate*>::iterator it;
			for (size_t i = 0; i < intsects.size(); i++)
			{
				geos::geom::Coordinate coord = intsects[i];
				// exclude points that are outer of polygon
				if (geos::algorithm::CGAlgorithms::isPointInRing(coord, coords))
				{
					geos::geom::Point* point = factory.createPoint(coord);
					// compute distance from every candidates of centres to polygon, and choose largest one
					double distance = line->distance(point);
					if (radius < distance)
					{
						radius = distance;
						incenter = point;
					}
				}				
				//else std::cout << "Point not in Ring." << std::endl;
			}
			
			if (incenter != NULL && radius != 0.0)
			{
					geos::io::WKTWriter writer;
					std::cout << "wkt : " << writer.write(incenter) << std::endl;
					std::cout << "radius : " << radius << std::endl;

				center.x = incenter->getX();
				center.y = incenter->getY();
				//return true; // deleted by sanak 2009.07.19
			}
			// <-- added by sanak 2009.07.19
			else
			{
				geos::geom::Point* intPt = negbuf->getInteriorPoint();
				center.x = intPt->getX();
				center.y = intPt->getY();
				radius = line->distance(intPt);
			}
			return true;
			// --> added by sanak 2009.07.19
		}
		else
		{
			std::cout << "No intsects." << std::endl;
			throw std::runtime_error("Couldn't get incenter.");
		}
	}
	catch (std::exception& ex)
	{
		std::cerr << "Exception : " << ex.what() << std::endl;
		throw ex;
		return false;
	}
	return false;
}

int main(int argc, char* argv[])
{
	// check stdin
#ifdef _MSC_VER
	if (::_isatty(fileno(stdin)))
#else
	if (::isatty(fileno(stdin)))
#endif // _MSC_VER
	{
		std::cerr << "Usage: %s < [wktfile(polygon)]" << std::endl;
		return -1;
	}

	std::string line;
	geos::io::WKTReader reader;
        std::vector<geos::geom::Polygon*> g;
	while (getline(std::cin, line, '\n'))
	{
		//std::cout << line << std::endl;
		geos::geom::Polygon* geom = 
		static_cast<geos::geom::Polygon*>(reader.read(line));
		
		if (geom == NULL && geom->getGeometryType() != "Polygon")
		{
			throw std::runtime_error("This sample only supports polygon geometry");
		}

		geos::geom::Polygon* poly = static_cast<geos::geom::Polygon*>(geom);
		if (!poly->isValid())
		{
			throw std::runtime_error("Invalid polygon.");
		}

		if (poly->getNumInteriorRing() > 0)
		{
			throw std::runtime_error("This sample only supports non-holes polygon.");
		}

		g.push_back(poly);
	}


	try
	{

		for (int i=0 ; i < g.size(); ++i)
		{
			geos::geom::Polygon* negbuf = NULL;
			double prevRadius = 0.0; // added by sanak 2009.07.19
			while (true)
			{
				geos::geom::Coordinate center;
				double radius = 0.0;
				if (computeIncircle(g[i], negbuf, center, radius))
				{
					// <-- modified by sanak 2009.07.19
					//negbuf = static_cast<geos::geom::Polygon*>(g[i]->buffer(-radius));
					//if (negbuf == NULL && negbuf->getGeometryType() != "Polygon")
					//{
					//	// TODO:
					//	throw std::runtime_error("Intercepted!!!!!!!");
					//}
					//double area = negbuf->getArea();
		
					//if (area < epsilonArea)
					geos::geom::Geometry* buf = g[i]->buffer(-(radius));
					std::string buftype = buf->getGeometryType();
					if (buftype == "Polygon")
					{
						negbuf = static_cast<geos::geom::Polygon*>(buf);
					}
					else if (buftype == "MultiPolygon")
					{
						size_t cnt = buf->getNumGeometries();
						double maxradius = 0.0;
						double tmpradius = 0.0;
						geos::geom::Coordinate tmpcenter;
						for (size_t j = 0; j < cnt; j++)
						{
							const geos::geom::Polygon* item = static_cast<const geos::geom::Polygon*>(buf->getGeometryN(j));
							if (computeIncircle(g[i], item, tmpcenter, tmpradius))
							{
								if (tmpradius > maxradius)
								{
									negbuf = static_cast<geos::geom::Polygon*>(item->clone());
									center = tmpcenter;
									radius = tmpradius;
									maxradius = tmpradius;
								}
							}
						}
					}

					if ((radius - prevRadius) < epsilonRadius)
					// --> modified by sanak 2009.07.19
					{
	
						std::cout << "center : " << center.toString() << std::endl;
						std::cout << "radius : " << radius << std::endl;
						geos::geom::GeometryFactory factory;
						geos::geom::Point* centerPt = factory.createPoint(center);
						geos::geom::Geometry* incircle = centerPt->buffer(radius);
						geos::io::WKTWriter writer;
						std::cout << "wkt : " << writer.write(incircle) << std::endl;
						// <-- modified by sanak 2009.07.19
						//return 0;
						break;
						// --> modified by sanak 2009.07.19
					}
					prevRadius = radius; // added by sanak 2009.07.19
				}
				else
				{
					std::cout << "Could not compute!" << std::endl;
					return -2;
				}
			}
		}
	}
	catch (std::exception& ex)
	{
		std::cerr << "Exception : " << ex.what() << std::endl;
		return -3;
	}

	return 0;
}
From doublebyte at gmail.com  Sun Jul 19 17:56:53 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Jul 19 17:56:58 2009
Subject: [geos-devel] Computational Geometry Problem
Message-ID: <23ab5f0a0907191456l5f8d648i4dce9666abf3dcf8@mail.gmail.com>

Hi Sanak,
Thanks a lot for the modified code: it worked on perfection!
Here is a screenshot of a run with my shapefile:

http://ladybug.no-ip.org/files/inCircleFinal.png

        Have a good rest of the weekend!
                                                             Jo

2009/7/19 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. Re: Re: Computational Geometry Problem (Sanak Goe)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 19 Jul 2009 21:24:34 +0900
> From: Sanak Goe <geosanak@gmail.com>
> Subject: Re: [geos-devel] Re: Computational Geometry Problem
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID:
>        <5f9be0a0907190524n5a8de434y38731cf04e7770d0@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> Skipped content of type multipart/alternative-------------- next part
> --------------
> #include <locale.h>
> #include <iostream>
> #include <vector>
> #include <algorithm>
> #include <stdexcept>
> #include <map> // added by sanak 2009.07.19
> #ifdef _MSC_VER
> #include <io.h>
> #endif // _MSC_VER
>
> //Geos
> #include <geos_c.h>
>
> #include <geos/algorithm/CGAlgorithms.h>
> #include <geos/algorithm/HCoordinate.h>
> #include <geos/geom/Coordinate.h>
> #include <geos/geom/CoordinateArraySequence.h>
> #include <geos/geom/LineString.h>
> #include <geos/geom/MultiPoint.h>
> #include <geos/geom/Point.h>
> #include <geos/geom/Polygon.h>
> #include <geos/io/WKTReader.h>
> #include <geos/io/WKTWriter.h>
>
> // <-- modified by sanak 2009.07.19
> //const double epsilonArea = 100.0;
> const double epsilonRadius = 0.1;
> // --> modified by sanak 2009.07.19
>
> // <-- Boost code
> template < class BidirectionalIterator >
> bool next_combination ( BidirectionalIterator first1 ,
>  BidirectionalIterator last1 ,
>  BidirectionalIterator first2 ,
>  BidirectionalIterator last2 )
> {
>  if (( first1 == last1 ) || ( first2 == last2 )) {
>    return false ;
>  }
>  BidirectionalIterator m1 = last1 ;
>  BidirectionalIterator m2 = last2 ; --m2;
>  while (--m1 != first1 && !(* m1 < *m2 )){
>  }
>  bool result = (m1 == first1 ) && !(* first1 < *m2 );
>  if (! result ) {
>    while ( first2 != m2 && !(* m1 < * first2 )) {
>      ++ first2 ;
>    }
>    first1 = m1;
>    std :: iter_swap (first1 , first2 );
>    ++ first1 ;
>    ++ first2 ;
>  }
>  if (( first1 != last1 ) && ( first2 != last2 )) {
>    m1 = last1 ; m2 = first2 ;
>    while (( m1 != first1 ) && (m2 != last2 )) {
>      std :: iter_swap (--m1 , m2 );
>      ++ m2;
>    }
>    std :: reverse (first1 , m1 );
>    std :: reverse (first1 , last1 );
>    std :: reverse (m2 , last2 );
>    std :: reverse (first2 , last2 );
>  }
>  return ! result ;
> }
>
> template < class BidirectionalIterator >
> bool next_combination ( BidirectionalIterator first ,
>  BidirectionalIterator middle ,
>  BidirectionalIterator last )
> {
>  return next_combination (first , middle , middle , last );
> }
> // Boost Code -->
>
> bool computeIncircle(
>                                         const geos::geom::Polygon* poly,
>                                         const geos::geom::Polygon* negbuf,
>                                         geos::geom::Coordinate& center,
>                                         double& radius)
> {
>        radius = 0.0;
>
>        if (negbuf == NULL)
>        {
>                negbuf = poly;
>        }
>
>        try
>        {
>
>                if (!negbuf->isValid())
>                {
>                        throw std::runtime_error("Invalid polygon.");
>                }
>
>                if (negbuf->getNumInteriorRing() > 0)
>                {
>                        throw std::runtime_error("This sample only supports
> non-holes polygon.");
>                }
>
>                const geos::geom::LineString* shell =
> negbuf->getExteriorRing();
>                geos::geom::CoordinateArraySequence* coords =
> static_cast<geos::geom::CoordinateArraySequence*>(shell->getCoordinates());
>
>                // compute orientation of ring
>                if (!geos::algorithm::CGAlgorithms::isCCW(coords))
>                {
>                        coords->reverse(coords);
>                }
>
>                // compute angle bisector of every  continuous three points
> in polygon
>                size_t cnt = coords->size() - 1;
>                // <-- modified by sanak 2009.07.19
>                //std::vector<geos::algorithm::HCoordinate*> bisects;
>                std::vector<size_t> bisectids;
>                std::map<size_t, geos::algorithm::HCoordinate*> bisects;
>                // --> modified by sanak 2009.07.19
>                for (size_t i = 0; i < cnt; i++)
>                {
>                        size_t prev = (i == 0) ? cnt - 1 : i - 1;
>                        size_t curr = i;
>                        size_t next = (i == cnt - 1) ? 0 : i + 1;
>
>                        // <-- JTS 1.10 Code
>                        geos::geom::Coordinate a = coords->getAt(prev);
>                        geos::geom::Coordinate b = coords->getAt(curr);
>                        geos::geom::Coordinate c = coords->getAt(next);
>
>                        double len0 = b.distance(a);
>                        double len2 = b.distance(c);
>                        double frac = len0 / (len0 + len2);
>                        double dx = c.x - a.x;
>                        double dy = c.y - a.y;
>
>                        geos::geom::Coordinate splitPt =
> geos::geom::Coordinate(a.x + frac * dx, a.y + frac * dy);
>                        // --> JTS 1.10 Code
>                        // <-- modified by sanak 2009.07.19
>                        //bisects.push_back(new
> geos::algorithm::HCoordinate(b, splitPt));
>                        bisectids.push_back(i);
>                        bisects.insert(std::pair<size_t,
> geos::algorithm::HCoordinate*>(i, new geos::algorithm::HCoordinate(b,
> splitPt)));
>                        // --> modified by sanak 2009.07.19
>                }
>
>                // get intersection points of angle bisectors
>                geos::geom::CoordinateArraySequence intsects;
>                do
>                {
>                        // <-- modified by sanak 2009.07.19
>                        //geos::algorithm::HCoordinate* hc0 = bisects[0];
>                        //geos::algorithm::HCoordinate* hc1 = bisects[1];
>                        geos::algorithm::HCoordinate* hc0 =
> bisects[bisectids[0]];
>                        geos::algorithm::HCoordinate* hc1 =
> bisects[bisectids[1]];
>                        // --> modified by sanak 2009.07.19
>                        geos::algorithm::HCoordinate* hcoord = new
> geos::algorithm::HCoordinate(*hc0, *hc1);
>                        try
>                        {
>                                // get intersection
>                                geos::geom::Coordinate coord =
> geos::geom::Coordinate(hcoord->getX(), hcoord->getY());
>
>                                // TODO:remove duplicate point
>                                intsects.add(coord);
>                        }
>                        catch (std::exception& ex)
>                        {
>                                // no intersection
>                        }
>                        if (hcoord)
>                        {
>                                delete hcoord;
>                        }
>                }
>                // <-- modified by sanak 2009.07.19
>                //while (next_combination(bisects.begin(), bisects.begin() +
> 2, bisects.end()));
>                while (next_combination(bisectids.begin(), bisectids.begin()
> + 2, bisectids.end()));
>                // --> modified by sanak 2009.07.19
>
>                // clean up
>                if (bisects.size() > 0)
>                {
>                        std::cout << "bissects ok." << std::endl;
>                        // <-- modified by sanak 2009.07.19
>
>  //std::vector<geos::algorithm::HCoordinate*>::iterator it;
>                        //for (it = bisects.begin(); it != bisects.end();
> it++)
>                        //{
>                        //      delete *it;
>                        //}
>                        std::map<size_t,
> geos::algorithm::HCoordinate*>::iterator it;
>                        for (it = bisects.begin(); it != bisects.end();
> it++)
>                        {
>                                delete it->second;
>                        }
>                        // --> modified by sanak 2009.07.19
>                }
>                else
>                std::cout << "No bissects." << std::endl;
>
>                std::cout << "intsects.size()" << intsects.size() <<
>  std::endl;
>                if (intsects.size() > 0)
>                {
>                        std::cout << "intsects ok." << std::endl;
>
>                        geos::geom::Point* incenter = NULL;
>
>                        geos::geom::GeometryFactory factory;
>                        const geos::geom::LineString* line =
> poly->getExteriorRing();
>                        //geos::geom::MultiPoint* rcpoints =
> factory.createMultiPoint(intsects); // for debug
>
>                        std::vector<geos::geom::Coordinate*>::iterator it;
>                        for (size_t i = 0; i < intsects.size(); i++)
>                        {
>                                geos::geom::Coordinate coord = intsects[i];
>                                // exclude points that are outer of polygon
>                                if
> (geos::algorithm::CGAlgorithms::isPointInRing(coord, coords))
>                                {
>                                        geos::geom::Point* point =
> factory.createPoint(coord);
>                                        // compute distance from every
> candidates of centres to polygon, and choose largest one
>                                        double distance =
> line->distance(point);
>                                        if (radius < distance)
>                                        {
>                                                radius = distance;
>                                                incenter = point;
>                                        }
>                                }
>                                //else std::cout << "Point not in Ring." <<
> std::endl;
>                        }
>
>                        if (incenter != NULL && radius != 0.0)
>                        {
>                                        geos::io::WKTWriter writer;
>                                        std::cout << "wkt : " <<
> writer.write(incenter) << std::endl;
>                                        std::cout << "radius : " << radius
> << std::endl;
>
>                                center.x = incenter->getX();
>                                center.y = incenter->getY();
>                                //return true; // deleted by sanak
> 2009.07.19
>                        }
>                        // <-- added by sanak 2009.07.19
>                        else
>                        {
>                                geos::geom::Point* intPt =
> negbuf->getInteriorPoint();
>                                center.x = intPt->getX();
>                                center.y = intPt->getY();
>                                radius = line->distance(intPt);
>                        }
>                        return true;
>                        // --> added by sanak 2009.07.19
>                }
>                else
>                {
>                        std::cout << "No intsects." << std::endl;
>                        throw std::runtime_error("Couldn't get incenter.");
>                }
>        }
>        catch (std::exception& ex)
>        {
>                std::cerr << "Exception : " << ex.what() << std::endl;
>                throw ex;
>                return false;
>        }
>        return false;
> }
>
> int main(int argc, char* argv[])
> {
>        // check stdin
> #ifdef _MSC_VER
>        if (::_isatty(fileno(stdin)))
> #else
>        if (::isatty(fileno(stdin)))
> #endif // _MSC_VER
>        {
>                std::cerr << "Usage: %s < [wktfile(polygon)]" << std::endl;
>                return -1;
>        }
>
>        std::string line;
>        geos::io::WKTReader reader;
>        std::vector<geos::geom::Polygon*> g;
>        while (getline(std::cin, line, '\n'))
>        {
>                //std::cout << line << std::endl;
>                geos::geom::Polygon* geom =
>                static_cast<geos::geom::Polygon*>(reader.read(line));
>
>                if (geom == NULL && geom->getGeometryType() != "Polygon")
>                {
>                        throw std::runtime_error("This sample only supports
> polygon geometry");
>                }
>
>                geos::geom::Polygon* poly =
> static_cast<geos::geom::Polygon*>(geom);
>                if (!poly->isValid())
>                {
>                        throw std::runtime_error("Invalid polygon.");
>                }
>
>                if (poly->getNumInteriorRing() > 0)
>                {
>                        throw std::runtime_error("This sample only supports
> non-holes polygon.");
>                }
>
>                g.push_back(poly);
>        }
>
>
>        try
>        {
>
>                for (int i=0 ; i < g.size(); ++i)
>                {
>                        geos::geom::Polygon* negbuf = NULL;
>                        double prevRadius = 0.0; // added by sanak
> 2009.07.19
>                        while (true)
>                        {
>                                geos::geom::Coordinate center;
>                                double radius = 0.0;
>                                if (computeIncircle(g[i], negbuf, center,
> radius))
>                                {
>                                        // <-- modified by sanak 2009.07.19
>                                        //negbuf =
> static_cast<geos::geom::Polygon*>(g[i]->buffer(-radius));
>                                        //if (negbuf == NULL &&
> negbuf->getGeometryType() != "Polygon")
>                                        //{
>                                        //      // TODO:
>                                        //      throw
> std::runtime_error("Intercepted!!!!!!!");
>                                        //}
>                                        //double area = negbuf->getArea();
>
>                                        //if (area < epsilonArea)
>                                        geos::geom::Geometry* buf =
> g[i]->buffer(-(radius));
>                                        std::string buftype =
> buf->getGeometryType();
>                                        if (buftype == "Polygon")
>                                        {
>                                                negbuf =
> static_cast<geos::geom::Polygon*>(buf);
>                                        }
>                                        else if (buftype == "MultiPolygon")
>                                        {
>                                                size_t cnt =
> buf->getNumGeometries();
>                                                double maxradius = 0.0;
>                                                double tmpradius = 0.0;
>                                                geos::geom::Coordinate
> tmpcenter;
>                                                for (size_t j = 0; j < cnt;
> j++)
>                                                {
>                                                        const
> geos::geom::Polygon* item = static_cast<const
> geos::geom::Polygon*>(buf->getGeometryN(j));
>                                                        if
> (computeIncircle(g[i], item, tmpcenter, tmpradius))
>                                                        {
>                                                                if
> (tmpradius > maxradius)
>                                                                {
>
>  negbuf = static_cast<geos::geom::Polygon*>(item->clone());
>
>  center = tmpcenter;
>
>  radius = tmpradius;
>
>  maxradius = tmpradius;
>                                                                }
>                                                        }
>                                                }
>                                        }
>
>                                        if ((radius - prevRadius) <
> epsilonRadius)
>                                        // --> modified by sanak 2009.07.19
>                                        {
>
>                                                std::cout << "center : " <<
> center.toString() << std::endl;
>                                                std::cout << "radius : " <<
> radius << std::endl;
>                                                geos::geom::GeometryFactory
> factory;
>                                                geos::geom::Point* centerPt
> = factory.createPoint(center);
>                                                geos::geom::Geometry*
> incircle = centerPt->buffer(radius);
>                                                geos::io::WKTWriter writer;
>                                                std::cout << "wkt : " <<
> writer.write(incircle) << std::endl;
>                                                // <-- modified by sanak
> 2009.07.19
>                                                //return 0;
>                                                break;
>                                                // --> modified by sanak
> 2009.07.19
>                                        }
>                                        prevRadius = radius; // added by
> sanak 2009.07.19
>                                }
>                                else
>                                {
>                                        std::cout << "Could not compute!" <<
> std::endl;
>                                        return -2;
>                                }
>                        }
>                }
>        }
>        catch (std::exception& ex)
>        {
>                std::cerr << "Exception : " << ex.what() << std::endl;
>                return -3;
>        }
>
>        return 0;
> }
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 81, Issue 13
> ******************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/f83b16e1/attachment-0001.html
From doublebyte at gmail.com  Sun Jul 19 18:10:01 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Jul 19 18:10:06 2009
Subject: [geos-devel] geos svn
Message-ID: <23ab5f0a0907191510s1d567375qdf13e491e1e06933@mail.gmail.com>

Latest SVN version of geos seems to be incomplete: no libtool and
lt-main.sh.
Also, the nightly release appears to be a broken tar file (at least I cannot
open it in my pc)...
 cheers,
            Jo

2009/7/19 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. Computational Geometry Problem (Jo)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 19 Jul 2009 22:56:53 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] Computational Geometry Problem
> To: geos-devel@lists.osgeo.org
> Message-ID:
>        <23ab5f0a0907191456l5f8d648i4dce9666abf3dcf8@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> Hi Sanak,
> Thanks a lot for the modified code: it worked on perfection!
> Here is a screenshot of a run with my shapefile:
>
> http://ladybug.no-ip.org/files/inCircleFinal.png
>
>        Have a good rest of the weekend!
>                                                             Jo
>
> 2009/7/19 <geos-devel-request@lists.osgeo.org>
>
> > Send geos-devel mailing list submissions to
> >        geos-devel@lists.osgeo.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > or, via email, send a message with subject or body 'help' to
> >        geos-devel-request@lists.osgeo.org
> >
> > You can reach the person managing the list at
> >        geos-devel-owner@lists.osgeo.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of geos-devel digest..."
> >
> >
> > Today's Topics:
> >
> >   1. Re: Re: Computational Geometry Problem (Sanak Goe)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sun, 19 Jul 2009 21:24:34 +0900
> > From: Sanak Goe <geosanak@gmail.com>
> > Subject: Re: [geos-devel] Re: Computational Geometry Problem
> > To: GEOS Development List <geos-devel@lists.osgeo.org>
> > Message-ID:
> >        <5f9be0a0907190524n5a8de434y38731cf04e7770d0@mail.gmail.com>
> > Content-Type: text/plain; charset="iso-8859-1"
> >
> > Skipped content of type multipart/alternative-------------- next part
> > --------------
> > #include <locale.h>
> > #include <iostream>
> > #include <vector>
> > #include <algorithm>
> > #include <stdexcept>
> > #include <map> // added by sanak 2009.07.19
> > #ifdef _MSC_VER
> > #include <io.h>
> > #endif // _MSC_VER
> >
> > //Geos
> > #include <geos_c.h>
> >
> > #include <geos/algorithm/CGAlgorithms.h>
> > #include <geos/algorithm/HCoordinate.h>
> > #include <geos/geom/Coordinate.h>
> > #include <geos/geom/CoordinateArraySequence.h>
> > #include <geos/geom/LineString.h>
> > #include <geos/geom/MultiPoint.h>
> > #include <geos/geom/Point.h>
> > #include <geos/geom/Polygon.h>
> > #include <geos/io/WKTReader.h>
> > #include <geos/io/WKTWriter.h>
> >
> > // <-- modified by sanak 2009.07.19
> > //const double epsilonArea = 100.0;
> > const double epsilonRadius = 0.1;
> > // --> modified by sanak 2009.07.19
> >
> > // <-- Boost code
> > template < class BidirectionalIterator >
> > bool next_combination ( BidirectionalIterator first1 ,
> >  BidirectionalIterator last1 ,
> >  BidirectionalIterator first2 ,
> >  BidirectionalIterator last2 )
> > {
> >  if (( first1 == last1 ) || ( first2 == last2 )) {
> >    return false ;
> >  }
> >  BidirectionalIterator m1 = last1 ;
> >  BidirectionalIterator m2 = last2 ; --m2;
> >  while (--m1 != first1 && !(* m1 < *m2 )){
> >  }
> >  bool result = (m1 == first1 ) && !(* first1 < *m2 );
> >  if (! result ) {
> >    while ( first2 != m2 && !(* m1 < * first2 )) {
> >      ++ first2 ;
> >    }
> >    first1 = m1;
> >    std :: iter_swap (first1 , first2 );
> >    ++ first1 ;
> >    ++ first2 ;
> >  }
> >  if (( first1 != last1 ) && ( first2 != last2 )) {
> >    m1 = last1 ; m2 = first2 ;
> >    while (( m1 != first1 ) && (m2 != last2 )) {
> >      std :: iter_swap (--m1 , m2 );
> >      ++ m2;
> >    }
> >    std :: reverse (first1 , m1 );
> >    std :: reverse (first1 , last1 );
> >    std :: reverse (m2 , last2 );
> >    std :: reverse (first2 , last2 );
> >  }
> >  return ! result ;
> > }
> >
> > template < class BidirectionalIterator >
> > bool next_combination ( BidirectionalIterator first ,
> >  BidirectionalIterator middle ,
> >  BidirectionalIterator last )
> > {
> >  return next_combination (first , middle , middle , last );
> > }
> > // Boost Code -->
> >
> > bool computeIncircle(
> >                                         const geos::geom::Polygon* poly,
> >                                         const geos::geom::Polygon*
> negbuf,
> >                                         geos::geom::Coordinate& center,
> >                                         double& radius)
> > {
> >        radius = 0.0;
> >
> >        if (negbuf == NULL)
> >        {
> >                negbuf = poly;
> >        }
> >
> >        try
> >        {
> >
> >                if (!negbuf->isValid())
> >                {
> >                        throw std::runtime_error("Invalid polygon.");
> >                }
> >
> >                if (negbuf->getNumInteriorRing() > 0)
> >                {
> >                        throw std::runtime_error("This sample only
> supports
> > non-holes polygon.");
> >                }
> >
> >                const geos::geom::LineString* shell =
> > negbuf->getExteriorRing();
> >                geos::geom::CoordinateArraySequence* coords =
> >
> static_cast<geos::geom::CoordinateArraySequence*>(shell->getCoordinates());
> >
> >                // compute orientation of ring
> >                if (!geos::algorithm::CGAlgorithms::isCCW(coords))
> >                {
> >                        coords->reverse(coords);
> >                }
> >
> >                // compute angle bisector of every  continuous three
> points
> > in polygon
> >                size_t cnt = coords->size() - 1;
> >                // <-- modified by sanak 2009.07.19
> >                //std::vector<geos::algorithm::HCoordinate*> bisects;
> >                std::vector<size_t> bisectids;
> >                std::map<size_t, geos::algorithm::HCoordinate*> bisects;
> >                // --> modified by sanak 2009.07.19
> >                for (size_t i = 0; i < cnt; i++)
> >                {
> >                        size_t prev = (i == 0) ? cnt - 1 : i - 1;
> >                        size_t curr = i;
> >                        size_t next = (i == cnt - 1) ? 0 : i + 1;
> >
> >                        // <-- JTS 1.10 Code
> >                        geos::geom::Coordinate a = coords->getAt(prev);
> >                        geos::geom::Coordinate b = coords->getAt(curr);
> >                        geos::geom::Coordinate c = coords->getAt(next);
> >
> >                        double len0 = b.distance(a);
> >                        double len2 = b.distance(c);
> >                        double frac = len0 / (len0 + len2);
> >                        double dx = c.x - a.x;
> >                        double dy = c.y - a.y;
> >
> >                        geos::geom::Coordinate splitPt =
> > geos::geom::Coordinate(a.x + frac * dx, a.y + frac * dy);
> >                        // --> JTS 1.10 Code
> >                        // <-- modified by sanak 2009.07.19
> >                        //bisects.push_back(new
> > geos::algorithm::HCoordinate(b, splitPt));
> >                        bisectids.push_back(i);
> >                        bisects.insert(std::pair<size_t,
> > geos::algorithm::HCoordinate*>(i, new geos::algorithm::HCoordinate(b,
> > splitPt)));
> >                        // --> modified by sanak 2009.07.19
> >                }
> >
> >                // get intersection points of angle bisectors
> >                geos::geom::CoordinateArraySequence intsects;
> >                do
> >                {
> >                        // <-- modified by sanak 2009.07.19
> >                        //geos::algorithm::HCoordinate* hc0 = bisects[0];
> >                        //geos::algorithm::HCoordinate* hc1 = bisects[1];
> >                        geos::algorithm::HCoordinate* hc0 =
> > bisects[bisectids[0]];
> >                        geos::algorithm::HCoordinate* hc1 =
> > bisects[bisectids[1]];
> >                        // --> modified by sanak 2009.07.19
> >                        geos::algorithm::HCoordinate* hcoord = new
> > geos::algorithm::HCoordinate(*hc0, *hc1);
> >                        try
> >                        {
> >                                // get intersection
> >                                geos::geom::Coordinate coord =
> > geos::geom::Coordinate(hcoord->getX(), hcoord->getY());
> >
> >                                // TODO:remove duplicate point
> >                                intsects.add(coord);
> >                        }
> >                        catch (std::exception& ex)
> >                        {
> >                                // no intersection
> >                        }
> >                        if (hcoord)
> >                        {
> >                                delete hcoord;
> >                        }
> >                }
> >                // <-- modified by sanak 2009.07.19
> >                //while (next_combination(bisects.begin(), bisects.begin()
> +
> > 2, bisects.end()));
> >                while (next_combination(bisectids.begin(),
> bisectids.begin()
> > + 2, bisectids.end()));
> >                // --> modified by sanak 2009.07.19
> >
> >                // clean up
> >                if (bisects.size() > 0)
> >                {
> >                        std::cout << "bissects ok." << std::endl;
> >                        // <-- modified by sanak 2009.07.19
> >
> >  //std::vector<geos::algorithm::HCoordinate*>::iterator it;
> >                        //for (it = bisects.begin(); it != bisects.end();
> > it++)
> >                        //{
> >                        //      delete *it;
> >                        //}
> >                        std::map<size_t,
> > geos::algorithm::HCoordinate*>::iterator it;
> >                        for (it = bisects.begin(); it != bisects.end();
> > it++)
> >                        {
> >                                delete it->second;
> >                        }
> >                        // --> modified by sanak 2009.07.19
> >                }
> >                else
> >                std::cout << "No bissects." << std::endl;
> >
> >                std::cout << "intsects.size()" << intsects.size() <<
> >  std::endl;
> >                if (intsects.size() > 0)
> >                {
> >                        std::cout << "intsects ok." << std::endl;
> >
> >                        geos::geom::Point* incenter = NULL;
> >
> >                        geos::geom::GeometryFactory factory;
> >                        const geos::geom::LineString* line =
> > poly->getExteriorRing();
> >                        //geos::geom::MultiPoint* rcpoints =
> > factory.createMultiPoint(intsects); // for debug
> >
> >                        std::vector<geos::geom::Coordinate*>::iterator it;
> >                        for (size_t i = 0; i < intsects.size(); i++)
> >                        {
> >                                geos::geom::Coordinate coord =
> intsects[i];
> >                                // exclude points that are outer of
> polygon
> >                                if
> > (geos::algorithm::CGAlgorithms::isPointInRing(coord, coords))
> >                                {
> >                                        geos::geom::Point* point =
> > factory.createPoint(coord);
> >                                        // compute distance from every
> > candidates of centres to polygon, and choose largest one
> >                                        double distance =
> > line->distance(point);
> >                                        if (radius < distance)
> >                                        {
> >                                                radius = distance;
> >                                                incenter = point;
> >                                        }
> >                                }
> >                                //else std::cout << "Point not in Ring."
> <<
> > std::endl;
> >                        }
> >
> >                        if (incenter != NULL && radius != 0.0)
> >                        {
> >                                        geos::io::WKTWriter writer;
> >                                        std::cout << "wkt : " <<
> > writer.write(incenter) << std::endl;
> >                                        std::cout << "radius : " << radius
> > << std::endl;
> >
> >                                center.x = incenter->getX();
> >                                center.y = incenter->getY();
> >                                //return true; // deleted by sanak
> > 2009.07.19
> >                        }
> >                        // <-- added by sanak 2009.07.19
> >                        else
> >                        {
> >                                geos::geom::Point* intPt =
> > negbuf->getInteriorPoint();
> >                                center.x = intPt->getX();
> >                                center.y = intPt->getY();
> >                                radius = line->distance(intPt);
> >                        }
> >                        return true;
> >                        // --> added by sanak 2009.07.19
> >                }
> >                else
> >                {
> >                        std::cout << "No intsects." << std::endl;
> >                        throw std::runtime_error("Couldn't get
> incenter.");
> >                }
> >        }
> >        catch (std::exception& ex)
> >        {
> >                std::cerr << "Exception : " << ex.what() << std::endl;
> >                throw ex;
> >                return false;
> >        }
> >        return false;
> > }
> >
> > int main(int argc, char* argv[])
> > {
> >        // check stdin
> > #ifdef _MSC_VER
> >        if (::_isatty(fileno(stdin)))
> > #else
> >        if (::isatty(fileno(stdin)))
> > #endif // _MSC_VER
> >        {
> >                std::cerr << "Usage: %s < [wktfile(polygon)]" <<
> std::endl;
> >                return -1;
> >        }
> >
> >        std::string line;
> >        geos::io::WKTReader reader;
> >        std::vector<geos::geom::Polygon*> g;
> >        while (getline(std::cin, line, '\n'))
> >        {
> >                //std::cout << line << std::endl;
> >                geos::geom::Polygon* geom =
> >                static_cast<geos::geom::Polygon*>(reader.read(line));
> >
> >                if (geom == NULL && geom->getGeometryType() != "Polygon")
> >                {
> >                        throw std::runtime_error("This sample only
> supports
> > polygon geometry");
> >                }
> >
> >                geos::geom::Polygon* poly =
> > static_cast<geos::geom::Polygon*>(geom);
> >                if (!poly->isValid())
> >                {
> >                        throw std::runtime_error("Invalid polygon.");
> >                }
> >
> >                if (poly->getNumInteriorRing() > 0)
> >                {
> >                        throw std::runtime_error("This sample only
> supports
> > non-holes polygon.");
> >                }
> >
> >                g.push_back(poly);
> >        }
> >
> >
> >        try
> >        {
> >
> >                for (int i=0 ; i < g.size(); ++i)
> >                {
> >                        geos::geom::Polygon* negbuf = NULL;
> >                        double prevRadius = 0.0; // added by sanak
> > 2009.07.19
> >                        while (true)
> >                        {
> >                                geos::geom::Coordinate center;
> >                                double radius = 0.0;
> >                                if (computeIncircle(g[i], negbuf, center,
> > radius))
> >                                {
> >                                        // <-- modified by sanak
> 2009.07.19
> >                                        //negbuf =
> > static_cast<geos::geom::Polygon*>(g[i]->buffer(-radius));
> >                                        //if (negbuf == NULL &&
> > negbuf->getGeometryType() != "Polygon")
> >                                        //{
> >                                        //      // TODO:
> >                                        //      throw
> > std::runtime_error("Intercepted!!!!!!!");
> >                                        //}
> >                                        //double area = negbuf->getArea();
> >
> >                                        //if (area < epsilonArea)
> >                                        geos::geom::Geometry* buf =
> > g[i]->buffer(-(radius));
> >                                        std::string buftype =
> > buf->getGeometryType();
> >                                        if (buftype == "Polygon")
> >                                        {
> >                                                negbuf =
> > static_cast<geos::geom::Polygon*>(buf);
> >                                        }
> >                                        else if (buftype ==
> "MultiPolygon")
> >                                        {
> >                                                size_t cnt =
> > buf->getNumGeometries();
> >                                                double maxradius = 0.0;
> >                                                double tmpradius = 0.0;
> >                                                geos::geom::Coordinate
> > tmpcenter;
> >                                                for (size_t j = 0; j <
> cnt;
> > j++)
> >                                                {
> >                                                        const
> > geos::geom::Polygon* item = static_cast<const
> > geos::geom::Polygon*>(buf->getGeometryN(j));
> >                                                        if
> > (computeIncircle(g[i], item, tmpcenter, tmpradius))
> >                                                        {
> >                                                                if
> > (tmpradius > maxradius)
> >                                                                {
> >
> >  negbuf = static_cast<geos::geom::Polygon*>(item->clone());
> >
> >  center = tmpcenter;
> >
> >  radius = tmpradius;
> >
> >  maxradius = tmpradius;
> >                                                                }
> >                                                        }
> >                                                }
> >                                        }
> >
> >                                        if ((radius - prevRadius) <
> > epsilonRadius)
> >                                        // --> modified by sanak
> 2009.07.19
> >                                        {
> >
> >                                                std::cout << "center : "
> <<
> > center.toString() << std::endl;
> >                                                std::cout << "radius : "
> <<
> > radius << std::endl;
> >
>  geos::geom::GeometryFactory
> > factory;
> >                                                geos::geom::Point*
> centerPt
> > = factory.createPoint(center);
> >                                                geos::geom::Geometry*
> > incircle = centerPt->buffer(radius);
> >                                                geos::io::WKTWriter
> writer;
> >                                                std::cout << "wkt : " <<
> > writer.write(incircle) << std::endl;
> >                                                // <-- modified by sanak
> > 2009.07.19
> >                                                //return 0;
> >                                                break;
> >                                                // --> modified by sanak
> > 2009.07.19
> >                                        }
> >                                        prevRadius = radius; // added by
> > sanak 2009.07.19
> >                                }
> >                                else
> >                                {
> >                                        std::cout << "Could not compute!"
> <<
> > std::endl;
> >                                        return -2;
> >                                }
> >                        }
> >                }
> >        }
> >        catch (std::exception& ex)
> >        {
> >                std::cerr << "Exception : " << ex.what() << std::endl;
> >                return -3;
> >        }
> >
> >        return 0;
> > }
> >
> > ------------------------------
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > End of geos-devel Digest, Vol 81, Issue 13
> > ******************************************
> >
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/f83b16e1/attachment.html
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 81, Issue 14
> ******************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/d602a171/attachment-0001.html
From mateusz at loskot.net  Sun Jul 19 19:10:50 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun Jul 19 19:11:15 2009
Subject: [geos-devel] geos svn
In-Reply-To: <23ab5f0a0907191510s1d567375qdf13e491e1e06933@mail.gmail.com>
References: <23ab5f0a0907191510s1d567375qdf13e491e1e06933@mail.gmail.com>
Message-ID: <36007.90.195.2.67.1248045050.squirrel@loskot.net>


Jo wrote:
> Latest SVN version of geos seems to be incomplete: no libtool and
> lt-main.sh.
> Also, the nightly release appears to be a broken tar file (at least I
> cannot open it in my pc)...

Read the instructions please:

http://trac.osgeo.org/geos/#Unix

You need to bootstrap the source tree by running ./autogen.sh first.

Best regards,
-- 
Mateusz Loskot
http://mateusz.loskot.net

From doublebyte at gmail.com  Mon Jul 20 18:16:26 2009
From: doublebyte at gmail.com (Jo)
Date: Mon Jul 20 18:16:29 2009
Subject: [geos-devel] Computational Geometry Problem + Exception
Message-ID: <23ab5f0a0907201516g4af4646bm272acfeecc8a1fcb@mail.gmail.com>

Hi,
Sorry to bother you again, but I am getting sometimes this exception from
GEOS and I don't have a clue what it is:

test: CoordinateArraySequence.cpp:105: virtual const geos::geom::Coordinate&
geos::geom::CoordinateArraySequence::getAt(size_t) const: Assertion
`pos<vect->size()' failed.

Backtracing it, I discovered that it comes from the ISCCW algorithm:

#0  0xb7119c66 in raise () from /lib/libc.so.6
#1  0xb711b571 in abort () from /lib/libc.so.6
#2  0xb7112e60 in __assert_fail () from /lib/libc.so.6
#3  0xb7884ee6 in geos::geom::CoordinateArraySequence::getAt (this=0x0,
pos=7117)
    at
/usr/local/lib/gcc/i686-pc-linux-gnu/3.4.6/../../../../include/c++/3.4.6/bits/stl_vector.h:375
#4  0xb7876b79 in geos::algorithm::CGAlgorithms::isCCW (ring=0x804f2b8) at
CGAlgorithms.cpp:175

Does anybody has any ideas in what can be causing this?
Strangely it breaks in different files in my two computers: both using GEOS,
vs 3.2.0 from svn.
Any help on this would be much appreciated!

cheers,

Jo

2009/7/19 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. geos svn (Jo)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 19 Jul 2009 23:10:01 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] geos svn
> To: geos-devel@lists.osgeo.org
> Message-ID:
>        <23ab5f0a0907191510s1d567375qdf13e491e1e06933@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> Latest SVN version of geos seems to be incomplete: no libtool and
> lt-main.sh.
> Also, the nightly release appears to be a broken tar file (at least I
> cannot
> open it in my pc)...
>  cheers,
>            Jo
>
> 2009/7/19 <geos-devel-request@lists.osgeo.org>
>
> > Send geos-devel mailing list submissions to
> >        geos-devel@lists.osgeo.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > or, via email, send a message with subject or body 'help' to
> >        geos-devel-request@lists.osgeo.org
> >
> > You can reach the person managing the list at
> >        geos-devel-owner@lists.osgeo.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of geos-devel digest..."
> >
> >
> > Today's Topics:
> >
> >   1. Computational Geometry Problem (Jo)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sun, 19 Jul 2009 22:56:53 +0100
> > From: Jo <doublebyte@gmail.com>
> > Subject: [geos-devel] Computational Geometry Problem
> > To: geos-devel@lists.osgeo.org
> > Message-ID:
> >        <23ab5f0a0907191456l5f8d648i4dce9666abf3dcf8@mail.gmail.com>
> > Content-Type: text/plain; charset="iso-8859-1"
> >
> > Hi Sanak,
> > Thanks a lot for the modified code: it worked on perfection!
> > Here is a screenshot of a run with my shapefile:
> >
> > http://ladybug.no-ip.org/files/inCircleFinal.png
> >
> >        Have a good rest of the weekend!
> >                                                             Jo
> >
> > 2009/7/19 <geos-devel-request@lists.osgeo.org>
> >
> > > Send geos-devel mailing list submissions to
> > >        geos-devel@lists.osgeo.org
> > >
> > > To subscribe or unsubscribe via the World Wide Web, visit
> > >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > > or, via email, send a message with subject or body 'help' to
> > >        geos-devel-request@lists.osgeo.org
> > >
> > > You can reach the person managing the list at
> > >        geos-devel-owner@lists.osgeo.org
> > >
> > > When replying, please edit your Subject line so it is more specific
> > > than "Re: Contents of geos-devel digest..."
> > >
> > >
> > > Today's Topics:
> > >
> > >   1. Re: Re: Computational Geometry Problem (Sanak Goe)
> > >
> > >
> > > ----------------------------------------------------------------------
> > >
> > > Message: 1
> > > Date: Sun, 19 Jul 2009 21:24:34 +0900
> > > From: Sanak Goe <geosanak@gmail.com>
> > > Subject: Re: [geos-devel] Re: Computational Geometry Problem
> > > To: GEOS Development List <geos-devel@lists.osgeo.org>
> > > Message-ID:
> > >        <5f9be0a0907190524n5a8de434y38731cf04e7770d0@mail.gmail.com>
> > > Content-Type: text/plain; charset="iso-8859-1"
> > >
> > > Skipped content of type multipart/alternative-------------- next part
> > > --------------
> > > #include <locale.h>
> > > #include <iostream>
> > > #include <vector>
> > > #include <algorithm>
> > > #include <stdexcept>
> > > #include <map> // added by sanak 2009.07.19
> > > #ifdef _MSC_VER
> > > #include <io.h>
> > > #endif // _MSC_VER
> > >
> > > //Geos
> > > #include <geos_c.h>
> > >
> > > #include <geos/algorithm/CGAlgorithms.h>
> > > #include <geos/algorithm/HCoordinate.h>
> > > #include <geos/geom/Coordinate.h>
> > > #include <geos/geom/CoordinateArraySequence.h>
> > > #include <geos/geom/LineString.h>
> > > #include <geos/geom/MultiPoint.h>
> > > #include <geos/geom/Point.h>
> > > #include <geos/geom/Polygon.h>
> > > #include <geos/io/WKTReader.h>
> > > #include <geos/io/WKTWriter.h>
> > >
> > > // <-- modified by sanak 2009.07.19
> > > //const double epsilonArea = 100.0;
> > > const double epsilonRadius = 0.1;
> > > // --> modified by sanak 2009.07.19
> > >
> > > // <-- Boost code
> > > template < class BidirectionalIterator >
> > > bool next_combination ( BidirectionalIterator first1 ,
> > >  BidirectionalIterator last1 ,
> > >  BidirectionalIterator first2 ,
> > >  BidirectionalIterator last2 )
> > > {
> > >  if (( first1 == last1 ) || ( first2 == last2 )) {
> > >    return false ;
> > >  }
> > >  BidirectionalIterator m1 = last1 ;
> > >  BidirectionalIterator m2 = last2 ; --m2;
> > >  while (--m1 != first1 && !(* m1 < *m2 )){
> > >  }
> > >  bool result = (m1 == first1 ) && !(* first1 < *m2 );
> > >  if (! result ) {
> > >    while ( first2 != m2 && !(* m1 < * first2 )) {
> > >      ++ first2 ;
> > >    }
> > >    first1 = m1;
> > >    std :: iter_swap (first1 , first2 );
> > >    ++ first1 ;
> > >    ++ first2 ;
> > >  }
> > >  if (( first1 != last1 ) && ( first2 != last2 )) {
> > >    m1 = last1 ; m2 = first2 ;
> > >    while (( m1 != first1 ) && (m2 != last2 )) {
> > >      std :: iter_swap (--m1 , m2 );
> > >      ++ m2;
> > >    }
> > >    std :: reverse (first1 , m1 );
> > >    std :: reverse (first1 , last1 );
> > >    std :: reverse (m2 , last2 );
> > >    std :: reverse (first2 , last2 );
> > >  }
> > >  return ! result ;
> > > }
> > >
> > > template < class BidirectionalIterator >
> > > bool next_combination ( BidirectionalIterator first ,
> > >  BidirectionalIterator middle ,
> > >  BidirectionalIterator last )
> > > {
> > >  return next_combination (first , middle , middle , last );
> > > }
> > > // Boost Code -->
> > >
> > > bool computeIncircle(
> > >                                         const geos::geom::Polygon*
> poly,
> > >                                         const geos::geom::Polygon*
> > negbuf,
> > >                                         geos::geom::Coordinate& center,
> > >                                         double& radius)
> > > {
> > >        radius = 0.0;
> > >
> > >        if (negbuf == NULL)
> > >        {
> > >                negbuf = poly;
> > >        }
> > >
> > >        try
> > >        {
> > >
> > >                if (!negbuf->isValid())
> > >                {
> > >                        throw std::runtime_error("Invalid polygon.");
> > >                }
> > >
> > >                if (negbuf->getNumInteriorRing() > 0)
> > >                {
> > >                        throw std::runtime_error("This sample only
> > supports
> > > non-holes polygon.");
> > >                }
> > >
> > >                const geos::geom::LineString* shell =
> > > negbuf->getExteriorRing();
> > >                geos::geom::CoordinateArraySequence* coords =
> > >
> >
> static_cast<geos::geom::CoordinateArraySequence*>(shell->getCoordinates());
> > >
> > >                // compute orientation of ring
> > >                if (!geos::algorithm::CGAlgorithms::isCCW(coords))
> > >                {
> > >                        coords->reverse(coords);
> > >                }
> > >
> > >                // compute angle bisector of every  continuous three
> > points
> > > in polygon
> > >                size_t cnt = coords->size() - 1;
> > >                // <-- modified by sanak 2009.07.19
> > >                //std::vector<geos::algorithm::HCoordinate*> bisects;
> > >                std::vector<size_t> bisectids;
> > >                std::map<size_t, geos::algorithm::HCoordinate*> bisects;
> > >                // --> modified by sanak 2009.07.19
> > >                for (size_t i = 0; i < cnt; i++)
> > >                {
> > >                        size_t prev = (i == 0) ? cnt - 1 : i - 1;
> > >                        size_t curr = i;
> > >                        size_t next = (i == cnt - 1) ? 0 : i + 1;
> > >
> > >                        // <-- JTS 1.10 Code
> > >                        geos::geom::Coordinate a = coords->getAt(prev);
> > >                        geos::geom::Coordinate b = coords->getAt(curr);
> > >                        geos::geom::Coordinate c = coords->getAt(next);
> > >
> > >                        double len0 = b.distance(a);
> > >                        double len2 = b.distance(c);
> > >                        double frac = len0 / (len0 + len2);
> > >                        double dx = c.x - a.x;
> > >                        double dy = c.y - a.y;
> > >
> > >                        geos::geom::Coordinate splitPt =
> > > geos::geom::Coordinate(a.x + frac * dx, a.y + frac * dy);
> > >                        // --> JTS 1.10 Code
> > >                        // <-- modified by sanak 2009.07.19
> > >                        //bisects.push_back(new
> > > geos::algorithm::HCoordinate(b, splitPt));
> > >                        bisectids.push_back(i);
> > >                        bisects.insert(std::pair<size_t,
> > > geos::algorithm::HCoordinate*>(i, new geos::algorithm::HCoordinate(b,
> > > splitPt)));
> > >                        // --> modified by sanak 2009.07.19
> > >                }
> > >
> > >                // get intersection points of angle bisectors
> > >                geos::geom::CoordinateArraySequence intsects;
> > >                do
> > >                {
> > >                        // <-- modified by sanak 2009.07.19
> > >                        //geos::algorithm::HCoordinate* hc0 =
> bisects[0];
> > >                        //geos::algorithm::HCoordinate* hc1 =
> bisects[1];
> > >                        geos::algorithm::HCoordinate* hc0 =
> > > bisects[bisectids[0]];
> > >                        geos::algorithm::HCoordinate* hc1 =
> > > bisects[bisectids[1]];
> > >                        // --> modified by sanak 2009.07.19
> > >                        geos::algorithm::HCoordinate* hcoord = new
> > > geos::algorithm::HCoordinate(*hc0, *hc1);
> > >                        try
> > >                        {
> > >                                // get intersection
> > >                                geos::geom::Coordinate coord =
> > > geos::geom::Coordinate(hcoord->getX(), hcoord->getY());
> > >
> > >                                // TODO:remove duplicate point
> > >                                intsects.add(coord);
> > >                        }
> > >                        catch (std::exception& ex)
> > >                        {
> > >                                // no intersection
> > >                        }
> > >                        if (hcoord)
> > >                        {
> > >                                delete hcoord;
> > >                        }
> > >                }
> > >                // <-- modified by sanak 2009.07.19
> > >                //while (next_combination(bisects.begin(),
> bisects.begin()
> > +
> > > 2, bisects.end()));
> > >                while (next_combination(bisectids.begin(),
> > bisectids.begin()
> > > + 2, bisectids.end()));
> > >                // --> modified by sanak 2009.07.19
> > >
> > >                // clean up
> > >                if (bisects.size() > 0)
> > >                {
> > >                        std::cout << "bissects ok." << std::endl;
> > >                        // <-- modified by sanak 2009.07.19
> > >
> > >  //std::vector<geos::algorithm::HCoordinate*>::iterator it;
> > >                        //for (it = bisects.begin(); it !=
> bisects.end();
> > > it++)
> > >                        //{
> > >                        //      delete *it;
> > >                        //}
> > >                        std::map<size_t,
> > > geos::algorithm::HCoordinate*>::iterator it;
> > >                        for (it = bisects.begin(); it != bisects.end();
> > > it++)
> > >                        {
> > >                                delete it->second;
> > >                        }
> > >                        // --> modified by sanak 2009.07.19
> > >                }
> > >                else
> > >                std::cout << "No bissects." << std::endl;
> > >
> > >                std::cout << "intsects.size()" << intsects.size() <<
> > >  std::endl;
> > >                if (intsects.size() > 0)
> > >                {
> > >                        std::cout << "intsects ok." << std::endl;
> > >
> > >                        geos::geom::Point* incenter = NULL;
> > >
> > >                        geos::geom::GeometryFactory factory;
> > >                        const geos::geom::LineString* line =
> > > poly->getExteriorRing();
> > >                        //geos::geom::MultiPoint* rcpoints =
> > > factory.createMultiPoint(intsects); // for debug
> > >
> > >                        std::vector<geos::geom::Coordinate*>::iterator
> it;
> > >                        for (size_t i = 0; i < intsects.size(); i++)
> > >                        {
> > >                                geos::geom::Coordinate coord =
> > intsects[i];
> > >                                // exclude points that are outer of
> > polygon
> > >                                if
> > > (geos::algorithm::CGAlgorithms::isPointInRing(coord, coords))
> > >                                {
> > >                                        geos::geom::Point* point =
> > > factory.createPoint(coord);
> > >                                        // compute distance from every
> > > candidates of centres to polygon, and choose largest one
> > >                                        double distance =
> > > line->distance(point);
> > >                                        if (radius < distance)
> > >                                        {
> > >                                                radius = distance;
> > >                                                incenter = point;
> > >                                        }
> > >                                }
> > >                                //else std::cout << "Point not in Ring."
> > <<
> > > std::endl;
> > >                        }
> > >
> > >                        if (incenter != NULL && radius != 0.0)
> > >                        {
> > >                                        geos::io::WKTWriter writer;
> > >                                        std::cout << "wkt : " <<
> > > writer.write(incenter) << std::endl;
> > >                                        std::cout << "radius : " <<
> radius
> > > << std::endl;
> > >
> > >                                center.x = incenter->getX();
> > >                                center.y = incenter->getY();
> > >                                //return true; // deleted by sanak
> > > 2009.07.19
> > >                        }
> > >                        // <-- added by sanak 2009.07.19
> > >                        else
> > >                        {
> > >                                geos::geom::Point* intPt =
> > > negbuf->getInteriorPoint();
> > >                                center.x = intPt->getX();
> > >                                center.y = intPt->getY();
> > >                                radius = line->distance(intPt);
> > >                        }
> > >                        return true;
> > >                        // --> added by sanak 2009.07.19
> > >                }
> > >                else
> > >                {
> > >                        std::cout << "No intsects." << std::endl;
> > >                        throw std::runtime_error("Couldn't get
> > incenter.");
> > >                }
> > >        }
> > >        catch (std::exception& ex)
> > >        {
> > >                std::cerr << "Exception : " << ex.what() << std::endl;
> > >                throw ex;
> > >                return false;
> > >        }
> > >        return false;
> > > }
> > >
> > > int main(int argc, char* argv[])
> > > {
> > >        // check stdin
> > > #ifdef _MSC_VER
> > >        if (::_isatty(fileno(stdin)))
> > > #else
> > >        if (::isatty(fileno(stdin)))
> > > #endif // _MSC_VER
> > >        {
> > >                std::cerr << "Usage: %s < [wktfile(polygon)]" <<
> > std::endl;
> > >                return -1;
> > >        }
> > >
> > >        std::string line;
> > >        geos::io::WKTReader reader;
> > >        std::vector<geos::geom::Polygon*> g;
> > >        while (getline(std::cin, line, '\n'))
> > >        {
> > >                //std::cout << line << std::endl;
> > >                geos::geom::Polygon* geom =
> > >                static_cast<geos::geom::Polygon*>(reader.read(line));
> > >
> > >                if (geom == NULL && geom->getGeometryType() !=
> "Polygon")
> > >                {
> > >                        throw std::runtime_error("This sample only
> > supports
> > > polygon geometry");
> > >                }
> > >
> > >                geos::geom::Polygon* poly =
> > > static_cast<geos::geom::Polygon*>(geom);
> > >                if (!poly->isValid())
> > >                {
> > >                        throw std::runtime_error("Invalid polygon.");
> > >                }
> > >
> > >                if (poly->getNumInteriorRing() > 0)
> > >                {
> > >                        throw std::runtime_error("This sample only
> > supports
> > > non-holes polygon.");
> > >                }
> > >
> > >                g.push_back(poly);
> > >        }
> > >
> > >
> > >        try
> > >        {
> > >
> > >                for (int i=0 ; i < g.size(); ++i)
> > >                {
> > >                        geos::geom::Polygon* negbuf = NULL;
> > >                        double prevRadius = 0.0; // added by sanak
> > > 2009.07.19
> > >                        while (true)
> > >                        {
> > >                                geos::geom::Coordinate center;
> > >                                double radius = 0.0;
> > >                                if (computeIncircle(g[i], negbuf,
> center,
> > > radius))
> > >                                {
> > >                                        // <-- modified by sanak
> > 2009.07.19
> > >                                        //negbuf =
> > > static_cast<geos::geom::Polygon*>(g[i]->buffer(-radius));
> > >                                        //if (negbuf == NULL &&
> > > negbuf->getGeometryType() != "Polygon")
> > >                                        //{
> > >                                        //      // TODO:
> > >                                        //      throw
> > > std::runtime_error("Intercepted!!!!!!!");
> > >                                        //}
> > >                                        //double area =
> negbuf->getArea();
> > >
> > >                                        //if (area < epsilonArea)
> > >                                        geos::geom::Geometry* buf =
> > > g[i]->buffer(-(radius));
> > >                                        std::string buftype =
> > > buf->getGeometryType();
> > >                                        if (buftype == "Polygon")
> > >                                        {
> > >                                                negbuf =
> > > static_cast<geos::geom::Polygon*>(buf);
> > >                                        }
> > >                                        else if (buftype ==
> > "MultiPolygon")
> > >                                        {
> > >                                                size_t cnt =
> > > buf->getNumGeometries();
> > >                                                double maxradius = 0.0;
> > >                                                double tmpradius = 0.0;
> > >                                                geos::geom::Coordinate
> > > tmpcenter;
> > >                                                for (size_t j = 0; j <
> > cnt;
> > > j++)
> > >                                                {
> > >                                                        const
> > > geos::geom::Polygon* item = static_cast<const
> > > geos::geom::Polygon*>(buf->getGeometryN(j));
> > >                                                        if
> > > (computeIncircle(g[i], item, tmpcenter, tmpradius))
> > >                                                        {
> > >                                                                if
> > > (tmpradius > maxradius)
> > >                                                                {
> > >
> > >  negbuf = static_cast<geos::geom::Polygon*>(item->clone());
> > >
> > >  center = tmpcenter;
> > >
> > >  radius = tmpradius;
> > >
> > >  maxradius = tmpradius;
> > >                                                                }
> > >                                                        }
> > >                                                }
> > >                                        }
> > >
> > >                                        if ((radius - prevRadius) <
> > > epsilonRadius)
> > >                                        // --> modified by sanak
> > 2009.07.19
> > >                                        {
> > >
> > >                                                std::cout << "center : "
> > <<
> > > center.toString() << std::endl;
> > >                                                std::cout << "radius : "
> > <<
> > > radius << std::endl;
> > >
> >  geos::geom::GeometryFactory
> > > factory;
> > >                                                geos::geom::Point*
> > centerPt
> > > = factory.createPoint(center);
> > >                                                geos::geom::Geometry*
> > > incircle = centerPt->buffer(radius);
> > >                                                geos::io::WKTWriter
> > writer;
> > >                                                std::cout << "wkt : " <<
> > > writer.write(incircle) << std::endl;
> > >                                                // <-- modified by sanak
> > > 2009.07.19
> > >                                                //return 0;
> > >                                                break;
> > >                                                // --> modified by sanak
> > > 2009.07.19
> > >                                        }
> > >                                        prevRadius = radius; // added by
> > > sanak 2009.07.19
> > >                                }
> > >                                else
> > >                                {
> > >                                        std::cout << "Could not
> compute!"
> > <<
> > > std::endl;
> > >                                        return -2;
> > >                                }
> > >                        }
> > >                }
> > >        }
> > >        catch (std::exception& ex)
> > >        {
> > >                std::cerr << "Exception : " << ex.what() << std::endl;
> > >                return -3;
> > >        }
> > >
> > >        return 0;
> > > }
> > >
> > > ------------------------------
> > >
> > > _______________________________________________
> > > geos-devel mailing list
> > > geos-devel@lists.osgeo.org
> > > http://lists.osgeo.org/mailman/listinfo/geos-devel
> > >
> > > End of geos-devel Digest, Vol 81, Issue 13
> > > ******************************************
> > >
> >
> >
> >
> > --
> > "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> > -------------- next part --------------
> > An HTML attachment was scrubbed...
> > URL:
> >
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/f83b16e1/attachment.html
> >
> > ------------------------------
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > End of geos-devel Digest, Vol 81, Issue 14
> > ******************************************
> >
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/d602a171/attachment.html
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 81, Issue 15
> ******************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090720/40ba7c0d/attachment-0001.html
From mateusz at loskot.net  Mon Jul 20 18:29:58 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon Jul 20 18:30:08 2009
Subject: [geos-devel] Computational Geometry Problem + Exception
In-Reply-To: <23ab5f0a0907201516g4af4646bm272acfeecc8a1fcb@mail.gmail.com>
References: <23ab5f0a0907201516g4af4646bm272acfeecc8a1fcb@mail.gmail.com>
Message-ID: <49392.90.195.2.67.1248128998.squirrel@loskot.net>

Jo wrote:
> #3  0xb7884ee6 in geos::geom::CoordinateArraySequence::getAt (this=0x0,
> pos=7117)

Ensure your sequence has at least 7117 + 1 elements.
The asserts come from here:

http://trac.osgeo.org/geos/browser/trunk/source/geom/CoordinateArraySequence.cpp#L134

Best regards,
-- 
Mateusz Loskot
http://mateusz.loskot.net

From doublebyte at gmail.com  Mon Jul 20 18:59:20 2009
From: doublebyte at gmail.com (Jo)
Date: Mon Jul 20 18:59:26 2009
Subject: [geos-devel] Re: geos-devel Digest, Vol 81, Issue 17
In-Reply-To: <20090720221630.3BA64E01BFD@lists.osgeo.org>
References: <20090720221630.3BA64E01BFD@lists.osgeo.org>
Message-ID: <23ab5f0a0907201559m6bd7d538r943201b9a31b7543@mail.gmail.com>

And running the program in a third computer, I get a different exception:

Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0xb7350a70 (LWP 1795)]
0xb758617b in geos::io::WKBWriter::write (this=0xbfc8605c, g=@0x805b4b8,
    os=@0xbfc85f90) at WKBWriter.cpp:77
77      WKBWriter.cpp: No such file or directory.
        in WKBWriter.cpp
(gdb) backtrace
#0  0xb758617b in geos::io::WKBWriter::write (this=0xbfc8605c, g=@0x805b4b8,
    os=@0xbfc85f90) at WKBWriter.cpp:77
#1  0xb74a456b in GEOSGeomToWKB_buf (g=0x805b4b8, size=0xbfc860ac)
    at geos_c.cpp:563
#2  0xb7aa63c7 in OGRGeometryFactory::createFromGEOS (geosGeom=0x805b4b8)
    at ogrgeometryfactory.cpp:1296
#3  0xb7aac824 in OGRPolygon::Centroid (this=0x8050b30, poPoint=0xbfc861c0)
    at ogrpolygon.cpp:740
#4  0xb7fa2d14 in CreateFeature (poPolygon=0x8050780, newPoLayer=0x8050570,
    poFeature=0x80509a0) at testIndexes.cpp:57
#5  0xb7fa3eae in CalculateShapeIndexes (baseName=0xbfc864e6 "abc",
    outFile=0xbfc864b4 "out") at testIndexes.cpp:221

I start to wonder if my configure.in is picking up the correct location for
geos includes... I am gonna research a bit more about this and post results!
Anyway, it would be great if anybody had some ideas why the program is
crashing with different errors in each pc... this is confusing me a bit!
Could it be because the geos version installed is different from the geos
version that was used when compiling gdal?
(In ubuntu I have some gdal binaries I have no idea-where-they-came-from and
a svn version of geos...)
                                                       cheers,
                                                                 Jo

2009/7/20 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. Computational Geometry Problem + Exception (Jo)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Mon, 20 Jul 2009 23:16:26 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] Computational Geometry Problem + Exception
> To: geos-devel@lists.osgeo.org
> Message-ID:
>        <23ab5f0a0907201516g4af4646bm272acfeecc8a1fcb@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> Hi,
> Sorry to bother you again, but I am getting sometimes this exception from
> GEOS and I don't have a clue what it is:
>
> test: CoordinateArraySequence.cpp:105: virtual const
> geos::geom::Coordinate&
> geos::geom::CoordinateArraySequence::getAt(size_t) const: Assertion
> `pos<vect->size()' failed.
>
> Backtracing it, I discovered that it comes from the ISCCW algorithm:
>
> #0  0xb7119c66 in raise () from /lib/libc.so.6
> #1  0xb711b571 in abort () from /lib/libc.so.6
> #2  0xb7112e60 in __assert_fail () from /lib/libc.so.6
> #3  0xb7884ee6 in geos::geom::CoordinateArraySequence::getAt (this=0x0,
> pos=7117)
>    at
>
> /usr/local/lib/gcc/i686-pc-linux-gnu/3.4.6/../../../../include/c++/3.4.6/bits/stl_vector.h:375
> #4  0xb7876b79 in geos::algorithm::CGAlgorithms::isCCW (ring=0x804f2b8) at
> CGAlgorithms.cpp:175
>
> Does anybody has any ideas in what can be causing this?
> Strangely it breaks in different files in my two computers: both using
> GEOS,
> vs 3.2.0 from svn.
> Any help on this would be much appreciated!
>
> cheers,
>
> Jo
>
> 2009/7/19 <geos-devel-request@lists.osgeo.org>
>
> > Send geos-devel mailing list submissions to
> >        geos-devel@lists.osgeo.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > or, via email, send a message with subject or body 'help' to
> >        geos-devel-request@lists.osgeo.org
> >
> > You can reach the person managing the list at
> >        geos-devel-owner@lists.osgeo.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of geos-devel digest..."
> >
> >
> > Today's Topics:
> >
> >   1. geos svn (Jo)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sun, 19 Jul 2009 23:10:01 +0100
> > From: Jo <doublebyte@gmail.com>
> > Subject: [geos-devel] geos svn
> > To: geos-devel@lists.osgeo.org
> > Message-ID:
> >        <23ab5f0a0907191510s1d567375qdf13e491e1e06933@mail.gmail.com>
> > Content-Type: text/plain; charset="iso-8859-1"
> >
> > Latest SVN version of geos seems to be incomplete: no libtool and
> > lt-main.sh.
> > Also, the nightly release appears to be a broken tar file (at least I
> > cannot
> > open it in my pc)...
> >  cheers,
> >            Jo
> >
> > 2009/7/19 <geos-devel-request@lists.osgeo.org>
> >
> > > Send geos-devel mailing list submissions to
> > >        geos-devel@lists.osgeo.org
> > >
> > > To subscribe or unsubscribe via the World Wide Web, visit
> > >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > > or, via email, send a message with subject or body 'help' to
> > >        geos-devel-request@lists.osgeo.org
> > >
> > > You can reach the person managing the list at
> > >        geos-devel-owner@lists.osgeo.org
> > >
> > > When replying, please edit your Subject line so it is more specific
> > > than "Re: Contents of geos-devel digest..."
> > >
> > >
> > > Today's Topics:
> > >
> > >   1. Computational Geometry Problem (Jo)
> > >
> > >
> > > ----------------------------------------------------------------------
> > >
> > > Message: 1
> > > Date: Sun, 19 Jul 2009 22:56:53 +0100
> > > From: Jo <doublebyte@gmail.com>
> > > Subject: [geos-devel] Computational Geometry Problem
> > > To: geos-devel@lists.osgeo.org
> > > Message-ID:
> > >        <23ab5f0a0907191456l5f8d648i4dce9666abf3dcf8@mail.gmail.com>
> > > Content-Type: text/plain; charset="iso-8859-1"
> > >
> > > Hi Sanak,
> > > Thanks a lot for the modified code: it worked on perfection!
> > > Here is a screenshot of a run with my shapefile:
> > >
> > > http://ladybug.no-ip.org/files/inCircleFinal.png
> > >
> > >        Have a good rest of the weekend!
> > >                                                             Jo
> > >
> > > 2009/7/19 <geos-devel-request@lists.osgeo.org>
> > >
> > > > Send geos-devel mailing list submissions to
> > > >        geos-devel@lists.osgeo.org
> > > >
> > > > To subscribe or unsubscribe via the World Wide Web, visit
> > > >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > > > or, via email, send a message with subject or body 'help' to
> > > >        geos-devel-request@lists.osgeo.org
> > > >
> > > > You can reach the person managing the list at
> > > >        geos-devel-owner@lists.osgeo.org
> > > >
> > > > When replying, please edit your Subject line so it is more specific
> > > > than "Re: Contents of geos-devel digest..."
> > > >
> > > >
> > > > Today's Topics:
> > > >
> > > >   1. Re: Re: Computational Geometry Problem (Sanak Goe)
> > > >
> > > >
> > > >
> ----------------------------------------------------------------------
> > > >
> > > > Message: 1
> > > > Date: Sun, 19 Jul 2009 21:24:34 +0900
> > > > From: Sanak Goe <geosanak@gmail.com>
> > > > Subject: Re: [geos-devel] Re: Computational Geometry Problem
> > > > To: GEOS Development List <geos-devel@lists.osgeo.org>
> > > > Message-ID:
> > > >        <5f9be0a0907190524n5a8de434y38731cf04e7770d0@mail.gmail.com>
> > > > Content-Type: text/plain; charset="iso-8859-1"
> > > >
> > > > Skipped content of type multipart/alternative-------------- next part
> > > > --------------
> > > > #include <locale.h>
> > > > #include <iostream>
> > > > #include <vector>
> > > > #include <algorithm>
> > > > #include <stdexcept>
> > > > #include <map> // added by sanak 2009.07.19
> > > > #ifdef _MSC_VER
> > > > #include <io.h>
> > > > #endif // _MSC_VER
> > > >
> > > > //Geos
> > > > #include <geos_c.h>
> > > >
> > > > #include <geos/algorithm/CGAlgorithms.h>
> > > > #include <geos/algorithm/HCoordinate.h>
> > > > #include <geos/geom/Coordinate.h>
> > > > #include <geos/geom/CoordinateArraySequence.h>
> > > > #include <geos/geom/LineString.h>
> > > > #include <geos/geom/MultiPoint.h>
> > > > #include <geos/geom/Point.h>
> > > > #include <geos/geom/Polygon.h>
> > > > #include <geos/io/WKTReader.h>
> > > > #include <geos/io/WKTWriter.h>
> > > >
> > > > // <-- modified by sanak 2009.07.19
> > > > //const double epsilonArea = 100.0;
> > > > const double epsilonRadius = 0.1;
> > > > // --> modified by sanak 2009.07.19
> > > >
> > > > // <-- Boost code
> > > > template < class BidirectionalIterator >
> > > > bool next_combination ( BidirectionalIterator first1 ,
> > > >  BidirectionalIterator last1 ,
> > > >  BidirectionalIterator first2 ,
> > > >  BidirectionalIterator last2 )
> > > > {
> > > >  if (( first1 == last1 ) || ( first2 == last2 )) {
> > > >    return false ;
> > > >  }
> > > >  BidirectionalIterator m1 = last1 ;
> > > >  BidirectionalIterator m2 = last2 ; --m2;
> > > >  while (--m1 != first1 && !(* m1 < *m2 )){
> > > >  }
> > > >  bool result = (m1 == first1 ) && !(* first1 < *m2 );
> > > >  if (! result ) {
> > > >    while ( first2 != m2 && !(* m1 < * first2 )) {
> > > >      ++ first2 ;
> > > >    }
> > > >    first1 = m1;
> > > >    std :: iter_swap (first1 , first2 );
> > > >    ++ first1 ;
> > > >    ++ first2 ;
> > > >  }
> > > >  if (( first1 != last1 ) && ( first2 != last2 )) {
> > > >    m1 = last1 ; m2 = first2 ;
> > > >    while (( m1 != first1 ) && (m2 != last2 )) {
> > > >      std :: iter_swap (--m1 , m2 );
> > > >      ++ m2;
> > > >    }
> > > >    std :: reverse (first1 , m1 );
> > > >    std :: reverse (first1 , last1 );
> > > >    std :: reverse (m2 , last2 );
> > > >    std :: reverse (first2 , last2 );
> > > >  }
> > > >  return ! result ;
> > > > }
> > > >
> > > > template < class BidirectionalIterator >
> > > > bool next_combination ( BidirectionalIterator first ,
> > > >  BidirectionalIterator middle ,
> > > >  BidirectionalIterator last )
> > > > {
> > > >  return next_combination (first , middle , middle , last );
> > > > }
> > > > // Boost Code -->
> > > >
> > > > bool computeIncircle(
> > > >                                         const geos::geom::Polygon*
> > poly,
> > > >                                         const geos::geom::Polygon*
> > > negbuf,
> > > >                                         geos::geom::Coordinate&
> center,
> > > >                                         double& radius)
> > > > {
> > > >        radius = 0.0;
> > > >
> > > >        if (negbuf == NULL)
> > > >        {
> > > >                negbuf = poly;
> > > >        }
> > > >
> > > >        try
> > > >        {
> > > >
> > > >                if (!negbuf->isValid())
> > > >                {
> > > >                        throw std::runtime_error("Invalid polygon.");
> > > >                }
> > > >
> > > >                if (negbuf->getNumInteriorRing() > 0)
> > > >                {
> > > >                        throw std::runtime_error("This sample only
> > > supports
> > > > non-holes polygon.");
> > > >                }
> > > >
> > > >                const geos::geom::LineString* shell =
> > > > negbuf->getExteriorRing();
> > > >                geos::geom::CoordinateArraySequence* coords =
> > > >
> > >
> >
> static_cast<geos::geom::CoordinateArraySequence*>(shell->getCoordinates());
> > > >
> > > >                // compute orientation of ring
> > > >                if (!geos::algorithm::CGAlgorithms::isCCW(coords))
> > > >                {
> > > >                        coords->reverse(coords);
> > > >                }
> > > >
> > > >                // compute angle bisector of every  continuous three
> > > points
> > > > in polygon
> > > >                size_t cnt = coords->size() - 1;
> > > >                // <-- modified by sanak 2009.07.19
> > > >                //std::vector<geos::algorithm::HCoordinate*> bisects;
> > > >                std::vector<size_t> bisectids;
> > > >                std::map<size_t, geos::algorithm::HCoordinate*>
> bisects;
> > > >                // --> modified by sanak 2009.07.19
> > > >                for (size_t i = 0; i < cnt; i++)
> > > >                {
> > > >                        size_t prev = (i == 0) ? cnt - 1 : i - 1;
> > > >                        size_t curr = i;
> > > >                        size_t next = (i == cnt - 1) ? 0 : i + 1;
> > > >
> > > >                        // <-- JTS 1.10 Code
> > > >                        geos::geom::Coordinate a =
> coords->getAt(prev);
> > > >                        geos::geom::Coordinate b =
> coords->getAt(curr);
> > > >                        geos::geom::Coordinate c =
> coords->getAt(next);
> > > >
> > > >                        double len0 = b.distance(a);
> > > >                        double len2 = b.distance(c);
> > > >                        double frac = len0 / (len0 + len2);
> > > >                        double dx = c.x - a.x;
> > > >                        double dy = c.y - a.y;
> > > >
> > > >                        geos::geom::Coordinate splitPt =
> > > > geos::geom::Coordinate(a.x + frac * dx, a.y + frac * dy);
> > > >                        // --> JTS 1.10 Code
> > > >                        // <-- modified by sanak 2009.07.19
> > > >                        //bisects.push_back(new
> > > > geos::algorithm::HCoordinate(b, splitPt));
> > > >                        bisectids.push_back(i);
> > > >                        bisects.insert(std::pair<size_t,
> > > > geos::algorithm::HCoordinate*>(i, new geos::algorithm::HCoordinate(b,
> > > > splitPt)));
> > > >                        // --> modified by sanak 2009.07.19
> > > >                }
> > > >
> > > >                // get intersection points of angle bisectors
> > > >                geos::geom::CoordinateArraySequence intsects;
> > > >                do
> > > >                {
> > > >                        // <-- modified by sanak 2009.07.19
> > > >                        //geos::algorithm::HCoordinate* hc0 =
> > bisects[0];
> > > >                        //geos::algorithm::HCoordinate* hc1 =
> > bisects[1];
> > > >                        geos::algorithm::HCoordinate* hc0 =
> > > > bisects[bisectids[0]];
> > > >                        geos::algorithm::HCoordinate* hc1 =
> > > > bisects[bisectids[1]];
> > > >                        // --> modified by sanak 2009.07.19
> > > >                        geos::algorithm::HCoordinate* hcoord = new
> > > > geos::algorithm::HCoordinate(*hc0, *hc1);
> > > >                        try
> > > >                        {
> > > >                                // get intersection
> > > >                                geos::geom::Coordinate coord =
> > > > geos::geom::Coordinate(hcoord->getX(), hcoord->getY());
> > > >
> > > >                                // TODO:remove duplicate point
> > > >                                intsects.add(coord);
> > > >                        }
> > > >                        catch (std::exception& ex)
> > > >                        {
> > > >                                // no intersection
> > > >                        }
> > > >                        if (hcoord)
> > > >                        {
> > > >                                delete hcoord;
> > > >                        }
> > > >                }
> > > >                // <-- modified by sanak 2009.07.19
> > > >                //while (next_combination(bisects.begin(),
> > bisects.begin()
> > > +
> > > > 2, bisects.end()));
> > > >                while (next_combination(bisectids.begin(),
> > > bisectids.begin()
> > > > + 2, bisectids.end()));
> > > >                // --> modified by sanak 2009.07.19
> > > >
> > > >                // clean up
> > > >                if (bisects.size() > 0)
> > > >                {
> > > >                        std::cout << "bissects ok." << std::endl;
> > > >                        // <-- modified by sanak 2009.07.19
> > > >
> > > >  //std::vector<geos::algorithm::HCoordinate*>::iterator it;
> > > >                        //for (it = bisects.begin(); it !=
> > bisects.end();
> > > > it++)
> > > >                        //{
> > > >                        //      delete *it;
> > > >                        //}
> > > >                        std::map<size_t,
> > > > geos::algorithm::HCoordinate*>::iterator it;
> > > >                        for (it = bisects.begin(); it !=
> bisects.end();
> > > > it++)
> > > >                        {
> > > >                                delete it->second;
> > > >                        }
> > > >                        // --> modified by sanak 2009.07.19
> > > >                }
> > > >                else
> > > >                std::cout << "No bissects." << std::endl;
> > > >
> > > >                std::cout << "intsects.size()" << intsects.size() <<
> > > >  std::endl;
> > > >                if (intsects.size() > 0)
> > > >                {
> > > >                        std::cout << "intsects ok." << std::endl;
> > > >
> > > >                        geos::geom::Point* incenter = NULL;
> > > >
> > > >                        geos::geom::GeometryFactory factory;
> > > >                        const geos::geom::LineString* line =
> > > > poly->getExteriorRing();
> > > >                        //geos::geom::MultiPoint* rcpoints =
> > > > factory.createMultiPoint(intsects); // for debug
> > > >
> > > >                        std::vector<geos::geom::Coordinate*>::iterator
> > it;
> > > >                        for (size_t i = 0; i < intsects.size(); i++)
> > > >                        {
> > > >                                geos::geom::Coordinate coord =
> > > intsects[i];
> > > >                                // exclude points that are outer of
> > > polygon
> > > >                                if
> > > > (geos::algorithm::CGAlgorithms::isPointInRing(coord, coords))
> > > >                                {
> > > >                                        geos::geom::Point* point =
> > > > factory.createPoint(coord);
> > > >                                        // compute distance from every
> > > > candidates of centres to polygon, and choose largest one
> > > >                                        double distance =
> > > > line->distance(point);
> > > >                                        if (radius < distance)
> > > >                                        {
> > > >                                                radius = distance;
> > > >                                                incenter = point;
> > > >                                        }
> > > >                                }
> > > >                                //else std::cout << "Point not in
> Ring."
> > > <<
> > > > std::endl;
> > > >                        }
> > > >
> > > >                        if (incenter != NULL && radius != 0.0)
> > > >                        {
> > > >                                        geos::io::WKTWriter writer;
> > > >                                        std::cout << "wkt : " <<
> > > > writer.write(incenter) << std::endl;
> > > >                                        std::cout << "radius : " <<
> > radius
> > > > << std::endl;
> > > >
> > > >                                center.x = incenter->getX();
> > > >                                center.y = incenter->getY();
> > > >                                //return true; // deleted by sanak
> > > > 2009.07.19
> > > >                        }
> > > >                        // <-- added by sanak 2009.07.19
> > > >                        else
> > > >                        {
> > > >                                geos::geom::Point* intPt =
> > > > negbuf->getInteriorPoint();
> > > >                                center.x = intPt->getX();
> > > >                                center.y = intPt->getY();
> > > >                                radius = line->distance(intPt);
> > > >                        }
> > > >                        return true;
> > > >                        // --> added by sanak 2009.07.19
> > > >                }
> > > >                else
> > > >                {
> > > >                        std::cout << "No intsects." << std::endl;
> > > >                        throw std::runtime_error("Couldn't get
> > > incenter.");
> > > >                }
> > > >        }
> > > >        catch (std::exception& ex)
> > > >        {
> > > >                std::cerr << "Exception : " << ex.what() << std::endl;
> > > >                throw ex;
> > > >                return false;
> > > >        }
> > > >        return false;
> > > > }
> > > >
> > > > int main(int argc, char* argv[])
> > > > {
> > > >        // check stdin
> > > > #ifdef _MSC_VER
> > > >        if (::_isatty(fileno(stdin)))
> > > > #else
> > > >        if (::isatty(fileno(stdin)))
> > > > #endif // _MSC_VER
> > > >        {
> > > >                std::cerr << "Usage: %s < [wktfile(polygon)]" <<
> > > std::endl;
> > > >                return -1;
> > > >        }
> > > >
> > > >        std::string line;
> > > >        geos::io::WKTReader reader;
> > > >        std::vector<geos::geom::Polygon*> g;
> > > >        while (getline(std::cin, line, '\n'))
> > > >        {
> > > >                //std::cout << line << std::endl;
> > > >                geos::geom::Polygon* geom =
> > > >                static_cast<geos::geom::Polygon*>(reader.read(line));
> > > >
> > > >                if (geom == NULL && geom->getGeometryType() !=
> > "Polygon")
> > > >                {
> > > >                        throw std::runtime_error("This sample only
> > > supports
> > > > polygon geometry");
> > > >                }
> > > >
> > > >                geos::geom::Polygon* poly =
> > > > static_cast<geos::geom::Polygon*>(geom);
> > > >                if (!poly->isValid())
> > > >                {
> > > >                        throw std::runtime_error("Invalid polygon.");
> > > >                }
> > > >
> > > >                if (poly->getNumInteriorRing() > 0)
> > > >                {
> > > >                        throw std::runtime_error("This sample only
> > > supports
> > > > non-holes polygon.");
> > > >                }
> > > >
> > > >                g.push_back(poly);
> > > >        }
> > > >
> > > >
> > > >        try
> > > >        {
> > > >
> > > >                for (int i=0 ; i < g.size(); ++i)
> > > >                {
> > > >                        geos::geom::Polygon* negbuf = NULL;
> > > >                        double prevRadius = 0.0; // added by sanak
> > > > 2009.07.19
> > > >                        while (true)
> > > >                        {
> > > >                                geos::geom::Coordinate center;
> > > >                                double radius = 0.0;
> > > >                                if (computeIncircle(g[i], negbuf,
> > center,
> > > > radius))
> > > >                                {
> > > >                                        // <-- modified by sanak
> > > 2009.07.19
> > > >                                        //negbuf =
> > > > static_cast<geos::geom::Polygon*>(g[i]->buffer(-radius));
> > > >                                        //if (negbuf == NULL &&
> > > > negbuf->getGeometryType() != "Polygon")
> > > >                                        //{
> > > >                                        //      // TODO:
> > > >                                        //      throw
> > > > std::runtime_error("Intercepted!!!!!!!");
> > > >                                        //}
> > > >                                        //double area =
> > negbuf->getArea();
> > > >
> > > >                                        //if (area < epsilonArea)
> > > >                                        geos::geom::Geometry* buf =
> > > > g[i]->buffer(-(radius));
> > > >                                        std::string buftype =
> > > > buf->getGeometryType();
> > > >                                        if (buftype == "Polygon")
> > > >                                        {
> > > >                                                negbuf =
> > > > static_cast<geos::geom::Polygon*>(buf);
> > > >                                        }
> > > >                                        else if (buftype ==
> > > "MultiPolygon")
> > > >                                        {
> > > >                                                size_t cnt =
> > > > buf->getNumGeometries();
> > > >                                                double maxradius =
> 0.0;
> > > >                                                double tmpradius =
> 0.0;
> > > >                                                geos::geom::Coordinate
> > > > tmpcenter;
> > > >                                                for (size_t j = 0; j <
> > > cnt;
> > > > j++)
> > > >                                                {
> > > >                                                        const
> > > > geos::geom::Polygon* item = static_cast<const
> > > > geos::geom::Polygon*>(buf->getGeometryN(j));
> > > >                                                        if
> > > > (computeIncircle(g[i], item, tmpcenter, tmpradius))
> > > >                                                        {
> > > >                                                                if
> > > > (tmpradius > maxradius)
> > > >                                                                {
> > > >
> > > >  negbuf = static_cast<geos::geom::Polygon*>(item->clone());
> > > >
> > > >  center = tmpcenter;
> > > >
> > > >  radius = tmpradius;
> > > >
> > > >  maxradius = tmpradius;
> > > >                                                                }
> > > >                                                        }
> > > >                                                }
> > > >                                        }
> > > >
> > > >                                        if ((radius - prevRadius) <
> > > > epsilonRadius)
> > > >                                        // --> modified by sanak
> > > 2009.07.19
> > > >                                        {
> > > >
> > > >                                                std::cout << "center :
> "
> > > <<
> > > > center.toString() << std::endl;
> > > >                                                std::cout << "radius :
> "
> > > <<
> > > > radius << std::endl;
> > > >
> > >  geos::geom::GeometryFactory
> > > > factory;
> > > >                                                geos::geom::Point*
> > > centerPt
> > > > = factory.createPoint(center);
> > > >                                                geos::geom::Geometry*
> > > > incircle = centerPt->buffer(radius);
> > > >                                                geos::io::WKTWriter
> > > writer;
> > > >                                                std::cout << "wkt : "
> <<
> > > > writer.write(incircle) << std::endl;
> > > >                                                // <-- modified by
> sanak
> > > > 2009.07.19
> > > >                                                //return 0;
> > > >                                                break;
> > > >                                                // --> modified by
> sanak
> > > > 2009.07.19
> > > >                                        }
> > > >                                        prevRadius = radius; // added
> by
> > > > sanak 2009.07.19
> > > >                                }
> > > >                                else
> > > >                                {
> > > >                                        std::cout << "Could not
> > compute!"
> > > <<
> > > > std::endl;
> > > >                                        return -2;
> > > >                                }
> > > >                        }
> > > >                }
> > > >        }
> > > >        catch (std::exception& ex)
> > > >        {
> > > >                std::cerr << "Exception : " << ex.what() << std::endl;
> > > >                return -3;
> > > >        }
> > > >
> > > >        return 0;
> > > > }
> > > >
> > > > ------------------------------
> > > >
> > > > _______________________________________________
> > > > geos-devel mailing list
> > > > geos-devel@lists.osgeo.org
> > > > http://lists.osgeo.org/mailman/listinfo/geos-devel
> > > >
> > > > End of geos-devel Digest, Vol 81, Issue 13
> > > > ******************************************
> > > >
> > >
> > >
> > >
> > > --
> > > "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> > > -------------- next part --------------
> > > An HTML attachment was scrubbed...
> > > URL:
> > >
> >
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/f83b16e1/attachment.html
> > >
> > > ------------------------------
> > >
> > > _______________________________________________
> > > geos-devel mailing list
> > > geos-devel@lists.osgeo.org
> > > http://lists.osgeo.org/mailman/listinfo/geos-devel
> > >
> > > End of geos-devel Digest, Vol 81, Issue 14
> > > ******************************************
> > >
> >
> >
> >
> > --
> > "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> > -------------- next part --------------
> > An HTML attachment was scrubbed...
> > URL:
> >
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/d602a171/attachment.html
> >
> > ------------------------------
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > End of geos-devel Digest, Vol 81, Issue 15
> > ******************************************
> >
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090720/40ba7c0d/attachment.html
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 81, Issue 17
> ******************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090720/bcc6c211/attachment-0001.html
From doublebyte at gmail.com  Mon Jul 20 19:00:07 2009
From: doublebyte at gmail.com (Jo)
Date: Mon Jul 20 19:00:12 2009
Subject: [geos-devel] Computational Geometry Problem + Exception
Message-ID: <23ab5f0a0907201600n5097078fv333259e8844fafaa@mail.gmail.com>

And running the program in a third computer, I get a different exception:

Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0xb7350a70 (LWP 1795)]
0xb758617b in geos::io::WKBWriter::write (this=0xbfc8605c, g=@0x805b4b8,
    os=@0xbfc85f90) at WKBWriter.cpp:77
77      WKBWriter.cpp: No such file or directory.
        in WKBWriter.cpp
(gdb) backtrace
#0  0xb758617b in geos::io::WKBWriter::write (this=0xbfc8605c, g=@0x805b4b8,
    os=@0xbfc85f90) at WKBWriter.cpp:77
#1  0xb74a456b in GEOSGeomToWKB_buf (g=0x805b4b8, size=0xbfc860ac)
    at geos_c.cpp:563
#2  0xb7aa63c7 in OGRGeometryFactory::createFromGEOS (geosGeom=0x805b4b8)
    at ogrgeometryfactory.cpp:1296
#3  0xb7aac824 in OGRPolygon::Centroid (this=0x8050b30, poPoint=0xbfc861c0)
    at ogrpolygon.cpp:740
#4  0xb7fa2d14 in CreateFeature (poPolygon=0x8050780, newPoLayer=0x8050570,
    poFeature=0x80509a0) at testIndexes.cpp:57
#5  0xb7fa3eae in CalculateShapeIndexes (baseName=0xbfc864e6 "abc",
    outFile=0xbfc864b4 "out") at testIndexes.cpp:221

I start to wonder if my configure.in is picking up the correct location for
geos includes... I am gonna research a bit more about this and post results!
Anyway, it would be great if anybody had some ideas why the program is
crashing with different errors in each pc... this is confusing me a bit!
Could it be because the geos version installed is different from the geos
version that was used when compiling gdal?
(In ubuntu I have some gdal binaries I have no idea-where-they-came-from and
a svn version of geos...)
                                                       cheers,
                                                                 Jo


2009/7/20 Jo <doublebyte@gmail.com>

> And running the program in a third computer, I get a different exception:
>
> Program received signal SIGSEGV, Segmentation fault.
> [Switching to Thread 0xb7350a70 (LWP 1795)]
> 0xb758617b in geos::io::WKBWriter::write (this=0xbfc8605c, g=@0x805b4b8,
>     os=@0xbfc85f90) at WKBWriter.cpp:77
> 77      WKBWriter.cpp: No such file or directory.
>         in WKBWriter.cpp
> (gdb) backtrace
> #0  0xb758617b in geos::io::WKBWriter::write (this=0xbfc8605c,
> g=@0x805b4b8,
>     os=@0xbfc85f90) at WKBWriter.cpp:77
> #1  0xb74a456b in GEOSGeomToWKB_buf (g=0x805b4b8, size=0xbfc860ac)
>     at geos_c.cpp:563
> #2  0xb7aa63c7 in OGRGeometryFactory::createFromGEOS (geosGeom=0x805b4b8)
>     at ogrgeometryfactory.cpp:1296
> #3  0xb7aac824 in OGRPolygon::Centroid (this=0x8050b30, poPoint=0xbfc861c0)
>     at ogrpolygon.cpp:740
> #4  0xb7fa2d14 in CreateFeature (poPolygon=0x8050780, newPoLayer=0x8050570,
>     poFeature=0x80509a0) at testIndexes.cpp:57
> #5  0xb7fa3eae in CalculateShapeIndexes (baseName=0xbfc864e6 "abc",
>     outFile=0xbfc864b4 "out") at testIndexes.cpp:221
>
> I start to wonder if my configure.in is picking up the correct location
> for geos includes... I am gonna research a bit more about this and post
> results!
> Anyway, it would be great if anybody had some ideas why the program is
> crashing with different errors in each pc... this is confusing me a bit!
> Could it be because the geos version installed is different from the geos
> version that was used when compiling gdal?
> (In ubuntu I have some gdal binaries I have no idea-where-they-came-from
> and a svn version of geos...)
>                                                        cheers,
>                                                                  Jo
>
> 2009/7/20 <geos-devel-request@lists.osgeo.org>
>
> Send geos-devel mailing list submissions to
>>        geos-devel@lists.osgeo.org
>>
>> To subscribe or unsubscribe via the World Wide Web, visit
>>        http://lists.osgeo.org/mailman/listinfo/geos-devel
>> or, via email, send a message with subject or body 'help' to
>>        geos-devel-request@lists.osgeo.org
>>
>> You can reach the person managing the list at
>>        geos-devel-owner@lists.osgeo.org
>>
>> When replying, please edit your Subject line so it is more specific
>> than "Re: Contents of geos-devel digest..."
>>
>>
>> Today's Topics:
>>
>>   1. Computational Geometry Problem + Exception (Jo)
>>
>>
>> ----------------------------------------------------------------------
>>
>> Message: 1
>> Date: Mon, 20 Jul 2009 23:16:26 +0100
>> From: Jo <doublebyte@gmail.com>
>> Subject: [geos-devel] Computational Geometry Problem + Exception
>> To: geos-devel@lists.osgeo.org
>> Message-ID:
>>        <23ab5f0a0907201516g4af4646bm272acfeecc8a1fcb@mail.gmail.com>
>> Content-Type: text/plain; charset="iso-8859-1"
>>
>> Hi,
>> Sorry to bother you again, but I am getting sometimes this exception from
>> GEOS and I don't have a clue what it is:
>>
>> test: CoordinateArraySequence.cpp:105: virtual const
>> geos::geom::Coordinate&
>> geos::geom::CoordinateArraySequence::getAt(size_t) const: Assertion
>> `pos<vect->size()' failed.
>>
>> Backtracing it, I discovered that it comes from the ISCCW algorithm:
>>
>> #0  0xb7119c66 in raise () from /lib/libc.so.6
>> #1  0xb711b571 in abort () from /lib/libc.so.6
>> #2  0xb7112e60 in __assert_fail () from /lib/libc.so.6
>> #3  0xb7884ee6 in geos::geom::CoordinateArraySequence::getAt (this=0x0,
>> pos=7117)
>>    at
>>
>> /usr/local/lib/gcc/i686-pc-linux-gnu/3.4.6/../../../../include/c++/3.4.6/bits/stl_vector.h:375
>> #4  0xb7876b79 in geos::algorithm::CGAlgorithms::isCCW (ring=0x804f2b8) at
>> CGAlgorithms.cpp:175
>>
>> Does anybody has any ideas in what can be causing this?
>> Strangely it breaks in different files in my two computers: both using
>> GEOS,
>> vs 3.2.0 from svn.
>> Any help on this would be much appreciated!
>>
>> cheers,
>>
>> Jo
>>
>> 2009/7/19 <geos-devel-request@lists.osgeo.org>
>>
>> > Send geos-devel mailing list submissions to
>> >        geos-devel@lists.osgeo.org
>> >
>> > To subscribe or unsubscribe via the World Wide Web, visit
>> >        http://lists.osgeo.org/mailman/listinfo/geos-devel
>> > or, via email, send a message with subject or body 'help' to
>> >        geos-devel-request@lists.osgeo.org
>> >
>> > You can reach the person managing the list at
>> >        geos-devel-owner@lists.osgeo.org
>> >
>> > When replying, please edit your Subject line so it is more specific
>> > than "Re: Contents of geos-devel digest..."
>> >
>> >
>> > Today's Topics:
>> >
>> >   1. geos svn (Jo)
>> >
>> >
>> > ----------------------------------------------------------------------
>> >
>> > Message: 1
>> > Date: Sun, 19 Jul 2009 23:10:01 +0100
>> > From: Jo <doublebyte@gmail.com>
>> > Subject: [geos-devel] geos svn
>> > To: geos-devel@lists.osgeo.org
>> > Message-ID:
>> >        <23ab5f0a0907191510s1d567375qdf13e491e1e06933@mail.gmail.com>
>> > Content-Type: text/plain; charset="iso-8859-1"
>> >
>> > Latest SVN version of geos seems to be incomplete: no libtool and
>> > lt-main.sh.
>> > Also, the nightly release appears to be a broken tar file (at least I
>> > cannot
>> > open it in my pc)...
>> >  cheers,
>> >            Jo
>> >
>> > 2009/7/19 <geos-devel-request@lists.osgeo.org>
>> >
>> > > Send geos-devel mailing list submissions to
>> > >        geos-devel@lists.osgeo.org
>> > >
>> > > To subscribe or unsubscribe via the World Wide Web, visit
>> > >        http://lists.osgeo.org/mailman/listinfo/geos-devel
>> > > or, via email, send a message with subject or body 'help' to
>> > >        geos-devel-request@lists.osgeo.org
>> > >
>> > > You can reach the person managing the list at
>> > >        geos-devel-owner@lists.osgeo.org
>> > >
>> > > When replying, please edit your Subject line so it is more specific
>> > > than "Re: Contents of geos-devel digest..."
>> > >
>> > >
>> > > Today's Topics:
>> > >
>> > >   1. Computational Geometry Problem (Jo)
>> > >
>> > >
>> > > ----------------------------------------------------------------------
>> > >
>> > > Message: 1
>> > > Date: Sun, 19 Jul 2009 22:56:53 +0100
>> > > From: Jo <doublebyte@gmail.com>
>> > > Subject: [geos-devel] Computational Geometry Problem
>> > > To: geos-devel@lists.osgeo.org
>> > > Message-ID:
>> > >        <23ab5f0a0907191456l5f8d648i4dce9666abf3dcf8@mail.gmail.com>
>> > > Content-Type: text/plain; charset="iso-8859-1"
>> > >
>> > > Hi Sanak,
>> > > Thanks a lot for the modified code: it worked on perfection!
>> > > Here is a screenshot of a run with my shapefile:
>> > >
>> > > http://ladybug.no-ip.org/files/inCircleFinal.png
>> > >
>> > >        Have a good rest of the weekend!
>> > >                                                             Jo
>> > >
>> > > 2009/7/19 <geos-devel-request@lists.osgeo.org>
>> > >
>> > > > Send geos-devel mailing list submissions to
>> > > >        geos-devel@lists.osgeo.org
>> > > >
>> > > > To subscribe or unsubscribe via the World Wide Web, visit
>> > > >        http://lists.osgeo.org/mailman/listinfo/geos-devel
>> > > > or, via email, send a message with subject or body 'help' to
>> > > >        geos-devel-request@lists.osgeo.org
>> > > >
>> > > > You can reach the person managing the list at
>> > > >        geos-devel-owner@lists.osgeo.org
>> > > >
>> > > > When replying, please edit your Subject line so it is more specific
>> > > > than "Re: Contents of geos-devel digest..."
>> > > >
>> > > >
>> > > > Today's Topics:
>> > > >
>> > > >   1. Re: Re: Computational Geometry Problem (Sanak Goe)
>> > > >
>> > > >
>> > > >
>> ----------------------------------------------------------------------
>> > > >
>> > > > Message: 1
>> > > > Date: Sun, 19 Jul 2009 21:24:34 +0900
>> > > > From: Sanak Goe <geosanak@gmail.com>
>> > > > Subject: Re: [geos-devel] Re: Computational Geometry Problem
>> > > > To: GEOS Development List <geos-devel@lists.osgeo.org>
>> > > > Message-ID:
>> > > >        <5f9be0a0907190524n5a8de434y38731cf04e7770d0@mail.gmail.com>
>> > > > Content-Type: text/plain; charset="iso-8859-1"
>> > > >
>> > > > Skipped content of type multipart/alternative-------------- next
>> part
>> > > > --------------
>> > > > #include <locale.h>
>> > > > #include <iostream>
>> > > > #include <vector>
>> > > > #include <algorithm>
>> > > > #include <stdexcept>
>> > > > #include <map> // added by sanak 2009.07.19
>> > > > #ifdef _MSC_VER
>> > > > #include <io.h>
>> > > > #endif // _MSC_VER
>> > > >
>> > > > //Geos
>> > > > #include <geos_c.h>
>> > > >
>> > > > #include <geos/algorithm/CGAlgorithms.h>
>> > > > #include <geos/algorithm/HCoordinate.h>
>> > > > #include <geos/geom/Coordinate.h>
>> > > > #include <geos/geom/CoordinateArraySequence.h>
>> > > > #include <geos/geom/LineString.h>
>> > > > #include <geos/geom/MultiPoint.h>
>> > > > #include <geos/geom/Point.h>
>> > > > #include <geos/geom/Polygon.h>
>> > > > #include <geos/io/WKTReader.h>
>> > > > #include <geos/io/WKTWriter.h>
>> > > >
>> > > > // <-- modified by sanak 2009.07.19
>> > > > //const double epsilonArea = 100.0;
>> > > > const double epsilonRadius = 0.1;
>> > > > // --> modified by sanak 2009.07.19
>> > > >
>> > > > // <-- Boost code
>> > > > template < class BidirectionalIterator >
>> > > > bool next_combination ( BidirectionalIterator first1 ,
>> > > >  BidirectionalIterator last1 ,
>> > > >  BidirectionalIterator first2 ,
>> > > >  BidirectionalIterator last2 )
>> > > > {
>> > > >  if (( first1 == last1 ) || ( first2 == last2 )) {
>> > > >    return false ;
>> > > >  }
>> > > >  BidirectionalIterator m1 = last1 ;
>> > > >  BidirectionalIterator m2 = last2 ; --m2;
>> > > >  while (--m1 != first1 && !(* m1 < *m2 )){
>> > > >  }
>> > > >  bool result = (m1 == first1 ) && !(* first1 < *m2 );
>> > > >  if (! result ) {
>> > > >    while ( first2 != m2 && !(* m1 < * first2 )) {
>> > > >      ++ first2 ;
>> > > >    }
>> > > >    first1 = m1;
>> > > >    std :: iter_swap (first1 , first2 );
>> > > >    ++ first1 ;
>> > > >    ++ first2 ;
>> > > >  }
>> > > >  if (( first1 != last1 ) && ( first2 != last2 )) {
>> > > >    m1 = last1 ; m2 = first2 ;
>> > > >    while (( m1 != first1 ) && (m2 != last2 )) {
>> > > >      std :: iter_swap (--m1 , m2 );
>> > > >      ++ m2;
>> > > >    }
>> > > >    std :: reverse (first1 , m1 );
>> > > >    std :: reverse (first1 , last1 );
>> > > >    std :: reverse (m2 , last2 );
>> > > >    std :: reverse (first2 , last2 );
>> > > >  }
>> > > >  return ! result ;
>> > > > }
>> > > >
>> > > > template < class BidirectionalIterator >
>> > > > bool next_combination ( BidirectionalIterator first ,
>> > > >  BidirectionalIterator middle ,
>> > > >  BidirectionalIterator last )
>> > > > {
>> > > >  return next_combination (first , middle , middle , last );
>> > > > }
>> > > > // Boost Code -->
>> > > >
>> > > > bool computeIncircle(
>> > > >                                         const geos::geom::Polygon*
>> > poly,
>> > > >                                         const geos::geom::Polygon*
>> > > negbuf,
>> > > >                                         geos::geom::Coordinate&
>> center,
>> > > >                                         double& radius)
>> > > > {
>> > > >        radius = 0.0;
>> > > >
>> > > >        if (negbuf == NULL)
>> > > >        {
>> > > >                negbuf = poly;
>> > > >        }
>> > > >
>> > > >        try
>> > > >        {
>> > > >
>> > > >                if (!negbuf->isValid())
>> > > >                {
>> > > >                        throw std::runtime_error("Invalid polygon.");
>> > > >                }
>> > > >
>> > > >                if (negbuf->getNumInteriorRing() > 0)
>> > > >                {
>> > > >                        throw std::runtime_error("This sample only
>> > > supports
>> > > > non-holes polygon.");
>> > > >                }
>> > > >
>> > > >                const geos::geom::LineString* shell =
>> > > > negbuf->getExteriorRing();
>> > > >                geos::geom::CoordinateArraySequence* coords =
>> > > >
>> > >
>> >
>> static_cast<geos::geom::CoordinateArraySequence*>(shell->getCoordinates());
>> > > >
>> > > >                // compute orientation of ring
>> > > >                if (!geos::algorithm::CGAlgorithms::isCCW(coords))
>> > > >                {
>> > > >                        coords->reverse(coords);
>> > > >                }
>> > > >
>> > > >                // compute angle bisector of every  continuous three
>> > > points
>> > > > in polygon
>> > > >                size_t cnt = coords->size() - 1;
>> > > >                // <-- modified by sanak 2009.07.19
>> > > >                //std::vector<geos::algorithm::HCoordinate*> bisects;
>> > > >                std::vector<size_t> bisectids;
>> > > >                std::map<size_t, geos::algorithm::HCoordinate*>
>> bisects;
>> > > >                // --> modified by sanak 2009.07.19
>> > > >                for (size_t i = 0; i < cnt; i++)
>> > > >                {
>> > > >                        size_t prev = (i == 0) ? cnt - 1 : i - 1;
>> > > >                        size_t curr = i;
>> > > >                        size_t next = (i == cnt - 1) ? 0 : i + 1;
>> > > >
>> > > >                        // <-- JTS 1.10 Code
>> > > >                        geos::geom::Coordinate a =
>> coords->getAt(prev);
>> > > >                        geos::geom::Coordinate b =
>> coords->getAt(curr);
>> > > >                        geos::geom::Coordinate c =
>> coords->getAt(next);
>> > > >
>> > > >                        double len0 = b.distance(a);
>> > > >                        double len2 = b.distance(c);
>> > > >                        double frac = len0 / (len0 + len2);
>> > > >                        double dx = c.x - a.x;
>> > > >                        double dy = c.y - a.y;
>> > > >
>> > > >                        geos::geom::Coordinate splitPt =
>> > > > geos::geom::Coordinate(a.x + frac * dx, a.y + frac * dy);
>> > > >                        // --> JTS 1.10 Code
>> > > >                        // <-- modified by sanak 2009.07.19
>> > > >                        //bisects.push_back(new
>> > > > geos::algorithm::HCoordinate(b, splitPt));
>> > > >                        bisectids.push_back(i);
>> > > >                        bisects.insert(std::pair<size_t,
>> > > > geos::algorithm::HCoordinate*>(i, new
>> geos::algorithm::HCoordinate(b,
>> > > > splitPt)));
>> > > >                        // --> modified by sanak 2009.07.19
>> > > >                }
>> > > >
>> > > >                // get intersection points of angle bisectors
>> > > >                geos::geom::CoordinateArraySequence intsects;
>> > > >                do
>> > > >                {
>> > > >                        // <-- modified by sanak 2009.07.19
>> > > >                        //geos::algorithm::HCoordinate* hc0 =
>> > bisects[0];
>> > > >                        //geos::algorithm::HCoordinate* hc1 =
>> > bisects[1];
>> > > >                        geos::algorithm::HCoordinate* hc0 =
>> > > > bisects[bisectids[0]];
>> > > >                        geos::algorithm::HCoordinate* hc1 =
>> > > > bisects[bisectids[1]];
>> > > >                        // --> modified by sanak 2009.07.19
>> > > >                        geos::algorithm::HCoordinate* hcoord = new
>> > > > geos::algorithm::HCoordinate(*hc0, *hc1);
>> > > >                        try
>> > > >                        {
>> > > >                                // get intersection
>> > > >                                geos::geom::Coordinate coord =
>> > > > geos::geom::Coordinate(hcoord->getX(), hcoord->getY());
>> > > >
>> > > >                                // TODO:remove duplicate point
>> > > >                                intsects.add(coord);
>> > > >                        }
>> > > >                        catch (std::exception& ex)
>> > > >                        {
>> > > >                                // no intersection
>> > > >                        }
>> > > >                        if (hcoord)
>> > > >                        {
>> > > >                                delete hcoord;
>> > > >                        }
>> > > >                }
>> > > >                // <-- modified by sanak 2009.07.19
>> > > >                //while (next_combination(bisects.begin(),
>> > bisects.begin()
>> > > +
>> > > > 2, bisects.end()));
>> > > >                while (next_combination(bisectids.begin(),
>> > > bisectids.begin()
>> > > > + 2, bisectids.end()));
>> > > >                // --> modified by sanak 2009.07.19
>> > > >
>> > > >                // clean up
>> > > >                if (bisects.size() > 0)
>> > > >                {
>> > > >                        std::cout << "bissects ok." << std::endl;
>> > > >                        // <-- modified by sanak 2009.07.19
>> > > >
>> > > >  //std::vector<geos::algorithm::HCoordinate*>::iterator it;
>> > > >                        //for (it = bisects.begin(); it !=
>> > bisects.end();
>> > > > it++)
>> > > >                        //{
>> > > >                        //      delete *it;
>> > > >                        //}
>> > > >                        std::map<size_t,
>> > > > geos::algorithm::HCoordinate*>::iterator it;
>> > > >                        for (it = bisects.begin(); it !=
>> bisects.end();
>> > > > it++)
>> > > >                        {
>> > > >                                delete it->second;
>> > > >                        }
>> > > >                        // --> modified by sanak 2009.07.19
>> > > >                }
>> > > >                else
>> > > >                std::cout << "No bissects." << std::endl;
>> > > >
>> > > >                std::cout << "intsects.size()" << intsects.size() <<
>> > > >  std::endl;
>> > > >                if (intsects.size() > 0)
>> > > >                {
>> > > >                        std::cout << "intsects ok." << std::endl;
>> > > >
>> > > >                        geos::geom::Point* incenter = NULL;
>> > > >
>> > > >                        geos::geom::GeometryFactory factory;
>> > > >                        const geos::geom::LineString* line =
>> > > > poly->getExteriorRing();
>> > > >                        //geos::geom::MultiPoint* rcpoints =
>> > > > factory.createMultiPoint(intsects); // for debug
>> > > >
>> > > >
>>  std::vector<geos::geom::Coordinate*>::iterator
>> > it;
>> > > >                        for (size_t i = 0; i < intsects.size(); i++)
>> > > >                        {
>> > > >                                geos::geom::Coordinate coord =
>> > > intsects[i];
>> > > >                                // exclude points that are outer of
>> > > polygon
>> > > >                                if
>> > > > (geos::algorithm::CGAlgorithms::isPointInRing(coord, coords))
>> > > >                                {
>> > > >                                        geos::geom::Point* point =
>> > > > factory.createPoint(coord);
>> > > >                                        // compute distance from
>> every
>> > > > candidates of centres to polygon, and choose largest one
>> > > >                                        double distance =
>> > > > line->distance(point);
>> > > >                                        if (radius < distance)
>> > > >                                        {
>> > > >                                                radius = distance;
>> > > >                                                incenter = point;
>> > > >                                        }
>> > > >                                }
>> > > >                                //else std::cout << "Point not in
>> Ring."
>> > > <<
>> > > > std::endl;
>> > > >                        }
>> > > >
>> > > >                        if (incenter != NULL && radius != 0.0)
>> > > >                        {
>> > > >                                        geos::io::WKTWriter writer;
>> > > >                                        std::cout << "wkt : " <<
>> > > > writer.write(incenter) << std::endl;
>> > > >                                        std::cout << "radius : " <<
>> > radius
>> > > > << std::endl;
>> > > >
>> > > >                                center.x = incenter->getX();
>> > > >                                center.y = incenter->getY();
>> > > >                                //return true; // deleted by sanak
>> > > > 2009.07.19
>> > > >                        }
>> > > >                        // <-- added by sanak 2009.07.19
>> > > >                        else
>> > > >                        {
>> > > >                                geos::geom::Point* intPt =
>> > > > negbuf->getInteriorPoint();
>> > > >                                center.x = intPt->getX();
>> > > >                                center.y = intPt->getY();
>> > > >                                radius = line->distance(intPt);
>> > > >                        }
>> > > >                        return true;
>> > > >                        // --> added by sanak 2009.07.19
>> > > >                }
>> > > >                else
>> > > >                {
>> > > >                        std::cout << "No intsects." << std::endl;
>> > > >                        throw std::runtime_error("Couldn't get
>> > > incenter.");
>> > > >                }
>> > > >        }
>> > > >        catch (std::exception& ex)
>> > > >        {
>> > > >                std::cerr << "Exception : " << ex.what() <<
>> std::endl;
>> > > >                throw ex;
>> > > >                return false;
>> > > >        }
>> > > >        return false;
>> > > > }
>> > > >
>> > > > int main(int argc, char* argv[])
>> > > > {
>> > > >        // check stdin
>> > > > #ifdef _MSC_VER
>> > > >        if (::_isatty(fileno(stdin)))
>> > > > #else
>> > > >        if (::isatty(fileno(stdin)))
>> > > > #endif // _MSC_VER
>> > > >        {
>> > > >                std::cerr << "Usage: %s < [wktfile(polygon)]" <<
>> > > std::endl;
>> > > >                return -1;
>> > > >        }
>> > > >
>> > > >        std::string line;
>> > > >        geos::io::WKTReader reader;
>> > > >        std::vector<geos::geom::Polygon*> g;
>> > > >        while (getline(std::cin, line, '\n'))
>> > > >        {
>> > > >                //std::cout << line << std::endl;
>> > > >                geos::geom::Polygon* geom =
>> > > >                static_cast<geos::geom::Polygon*>(reader.read(line));
>> > > >
>> > > >                if (geom == NULL && geom->getGeometryType() !=
>> > "Polygon")
>> > > >                {
>> > > >                        throw std::runtime_error("This sample only
>> > > supports
>> > > > polygon geometry");
>> > > >                }
>> > > >
>> > > >                geos::geom::Polygon* poly =
>> > > > static_cast<geos::geom::Polygon*>(geom);
>> > > >                if (!poly->isValid())
>> > > >                {
>> > > >                        throw std::runtime_error("Invalid polygon.");
>> > > >                }
>> > > >
>> > > >                if (poly->getNumInteriorRing() > 0)
>> > > >                {
>> > > >                        throw std::runtime_error("This sample only
>> > > supports
>> > > > non-holes polygon.");
>> > > >                }
>> > > >
>> > > >                g.push_back(poly);
>> > > >        }
>> > > >
>> > > >
>> > > >        try
>> > > >        {
>> > > >
>> > > >                for (int i=0 ; i < g.size(); ++i)
>> > > >                {
>> > > >                        geos::geom::Polygon* negbuf = NULL;
>> > > >                        double prevRadius = 0.0; // added by sanak
>> > > > 2009.07.19
>> > > >                        while (true)
>> > > >                        {
>> > > >                                geos::geom::Coordinate center;
>> > > >                                double radius = 0.0;
>> > > >                                if (computeIncircle(g[i], negbuf,
>> > center,
>> > > > radius))
>> > > >                                {
>> > > >                                        // <-- modified by sanak
>> > > 2009.07.19
>> > > >                                        //negbuf =
>> > > > static_cast<geos::geom::Polygon*>(g[i]->buffer(-radius));
>> > > >                                        //if (negbuf == NULL &&
>> > > > negbuf->getGeometryType() != "Polygon")
>> > > >                                        //{
>> > > >                                        //      // TODO:
>> > > >                                        //      throw
>> > > > std::runtime_error("Intercepted!!!!!!!");
>> > > >                                        //}
>> > > >                                        //double area =
>> > negbuf->getArea();
>> > > >
>> > > >                                        //if (area < epsilonArea)
>> > > >                                        geos::geom::Geometry* buf =
>> > > > g[i]->buffer(-(radius));
>> > > >                                        std::string buftype =
>> > > > buf->getGeometryType();
>> > > >                                        if (buftype == "Polygon")
>> > > >                                        {
>> > > >                                                negbuf =
>> > > > static_cast<geos::geom::Polygon*>(buf);
>> > > >                                        }
>> > > >                                        else if (buftype ==
>> > > "MultiPolygon")
>> > > >                                        {
>> > > >                                                size_t cnt =
>> > > > buf->getNumGeometries();
>> > > >                                                double maxradius =
>> 0.0;
>> > > >                                                double tmpradius =
>> 0.0;
>> > > >
>>  geos::geom::Coordinate
>> > > > tmpcenter;
>> > > >                                                for (size_t j = 0; j
>> <
>> > > cnt;
>> > > > j++)
>> > > >                                                {
>> > > >                                                        const
>> > > > geos::geom::Polygon* item = static_cast<const
>> > > > geos::geom::Polygon*>(buf->getGeometryN(j));
>> > > >                                                        if
>> > > > (computeIncircle(g[i], item, tmpcenter, tmpradius))
>> > > >                                                        {
>> > > >                                                                if
>> > > > (tmpradius > maxradius)
>> > > >                                                                {
>> > > >
>> > > >  negbuf = static_cast<geos::geom::Polygon*>(item->clone());
>> > > >
>> > > >  center = tmpcenter;
>> > > >
>> > > >  radius = tmpradius;
>> > > >
>> > > >  maxradius = tmpradius;
>> > > >                                                                }
>> > > >                                                        }
>> > > >                                                }
>> > > >                                        }
>> > > >
>> > > >                                        if ((radius - prevRadius) <
>> > > > epsilonRadius)
>> > > >                                        // --> modified by sanak
>> > > 2009.07.19
>> > > >                                        {
>> > > >
>> > > >                                                std::cout << "center
>> : "
>> > > <<
>> > > > center.toString() << std::endl;
>> > > >                                                std::cout << "radius
>> : "
>> > > <<
>> > > > radius << std::endl;
>> > > >
>> > >  geos::geom::GeometryFactory
>> > > > factory;
>> > > >                                                geos::geom::Point*
>> > > centerPt
>> > > > = factory.createPoint(center);
>> > > >                                                geos::geom::Geometry*
>> > > > incircle = centerPt->buffer(radius);
>> > > >                                                geos::io::WKTWriter
>> > > writer;
>> > > >                                                std::cout << "wkt : "
>> <<
>> > > > writer.write(incircle) << std::endl;
>> > > >                                                // <-- modified by
>> sanak
>> > > > 2009.07.19
>> > > >                                                //return 0;
>> > > >                                                break;
>> > > >                                                // --> modified by
>> sanak
>> > > > 2009.07.19
>> > > >                                        }
>> > > >                                        prevRadius = radius; // added
>> by
>> > > > sanak 2009.07.19
>> > > >                                }
>> > > >                                else
>> > > >                                {
>> > > >                                        std::cout << "Could not
>> > compute!"
>> > > <<
>> > > > std::endl;
>> > > >                                        return -2;
>> > > >                                }
>> > > >                        }
>> > > >                }
>> > > >        }
>> > > >        catch (std::exception& ex)
>> > > >        {
>> > > >                std::cerr << "Exception : " << ex.what() <<
>> std::endl;
>> > > >                return -3;
>> > > >        }
>> > > >
>> > > >        return 0;
>> > > > }
>> > > >
>> > > > ------------------------------
>> > > >
>> > > > _______________________________________________
>> > > > geos-devel mailing list
>> > > > geos-devel@lists.osgeo.org
>> > > > http://lists.osgeo.org/mailman/listinfo/geos-devel
>> > > >
>> > > > End of geos-devel Digest, Vol 81, Issue 13
>> > > > ******************************************
>> > > >
>> > >
>> > >
>> > >
>> > > --
>> > > "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
>> > > -------------- next part --------------
>> > > An HTML attachment was scrubbed...
>> > > URL:
>> > >
>> >
>> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/f83b16e1/attachment.html
>> > >
>> > > ------------------------------
>> > >
>> > > _______________________________________________
>> > > geos-devel mailing list
>> > > geos-devel@lists.osgeo.org
>> > > http://lists.osgeo.org/mailman/listinfo/geos-devel
>> > >
>> > > End of geos-devel Digest, Vol 81, Issue 14
>> > > ******************************************
>> > >
>> >
>> >
>> >
>> > --
>> > "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
>> > -------------- next part --------------
>> > An HTML attachment was scrubbed...
>> > URL:
>> >
>> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090719/d602a171/attachment.html
>> >
>> > ------------------------------
>> >
>> > _______________________________________________
>> > geos-devel mailing list
>> > geos-devel@lists.osgeo.org
>> > http://lists.osgeo.org/mailman/listinfo/geos-devel
>> >
>> > End of geos-devel Digest, Vol 81, Issue 15
>> > ******************************************
>> >
>>
>>
>>
>> --
>> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
>> -------------- next part --------------
>> An HTML attachment was scrubbed...
>> URL:
>> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090720/40ba7c0d/attachment.html
>>
>> ------------------------------
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>> End of geos-devel Digest, Vol 81, Issue 17
>> ******************************************
>>
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
>
>


-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090720/5c4222f3/attachment-0001.html
From mateusz at loskot.net  Mon Jul 20 19:10:46 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon Jul 20 19:10:57 2009
Subject: [geos-devel] Computational Geometry Problem + Exception
In-Reply-To: <23ab5f0a0907201600n5097078fv333259e8844fafaa@mail.gmail.com>
References: <23ab5f0a0907201600n5097078fv333259e8844fafaa@mail.gmail.com>
Message-ID: <53125.90.195.2.67.1248131446.squirrel@loskot.net>

Jo wrote:
> And running the program in a third computer, I get a different exception:


Backtrace without a piece of code of program that caused it is useless.

> Anyway, it would be great if anybody had some ideas why the program is
> Could it be because the geos version installed is different from the geos
> version that was used when compiling gdal?

Very possible.

> (In ubuntu I have some gdal binaries I have no idea-where-they-came-from
> and

They come from Ubuntu official packages, likely.

> a svn version of geos...)

You should not pass GEOS objects between your program linked against
GEOS SVN and GDAL which uses older version of GEOS.
Both should use the same version of GEOS.

Solution:
1) Build GDAL with GEOS SVN if you want to use GEOS SVN in your program.
2) Link your program against GEOS of the same version used as GDAL uses.
If GDAL is installed from Ubuntu packages, then simply install GEOS
dev packages too and use it.

Best regards,
-- 
Mateusz Loskot
http://mateusz.loskot.net

From strk at keybit.net  Tue Jul 21 10:43:12 2009
From: strk at keybit.net (strk)
Date: Tue Jul 21 10:43:19 2009
Subject: [geos-devel] mapserver crash on exit, with svn head geos
In-Reply-To: <4A60E59D.407@acm.org>
References: <4A60E59D.407@acm.org>
Message-ID: <20090721144312.GC75089@keybit.net>

On Fri, Jul 17, 2009 at 04:57:01PM -0400, David Fuhry wrote:
> With GEOS from svn, mapserver crashes on calling exit(), as GEOS 
> destroys the static string defined in GEOS' WKBReader.cpp:
> 
> string WKBReader::BAD_GEOM_TYPE_MSG = "bad geometry type encountered in ";

Please check that mapserver is not linked to 2 different versions
of the geos lib. I have had a similar problem with qgis/gdal due
to this problem. A rebuild of both packages fixed it for me.

--strk;

 Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
 http://foo.keybit.net/~strk/services.html  /\  Keep it simple! 
From novalis at novalis.org  Thu Jul 23 11:13:34 2009
From: novalis at novalis.org (David Turner)
Date: Thu Jul 23 11:13:38 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
Message-ID: <1248362014.7502.68.camel@gentle>

JTS has a class called LengthIndexedLine with a method "project", which
lets you figure out  the nearest point on a line to a given point.  This
is useful, for instance, if you are trying to figure out what street a
person is on from (possibly slightly inaccurate) GPS observations.

http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)

PostGIS calls this function st_line_locate_point.

GEOS doesn't seem to have it, even though I was under the impression
that GEOS was merely a port of JTS.  If I port JTS's project function
and related functions such as extractPoint to GEOS, would that patch be
likely to be accepted?  Or am I missing something about the relationship
between JTS and GEOS?


From strk at keybit.net  Thu Jul 23 15:53:06 2009
From: strk at keybit.net (strk)
Date: Thu Jul 23 15:53:10 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <1248362014.7502.68.camel@gentle>
References: <1248362014.7502.68.camel@gentle>
Message-ID: <20090723195306.GP75089@keybit.net>

On Thu, Jul 23, 2009 at 11:13:34AM -0400, David Turner wrote:
> JTS has a class called LengthIndexedLine with a method "project", which
> lets you figure out  the nearest point on a line to a given point.  This
> is useful, for instance, if you are trying to figure out what street a
> person is on from (possibly slightly inaccurate) GPS observations.
> 
> http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> 
> PostGIS calls this function st_line_locate_point.
> 
> GEOS doesn't seem to have it, even though I was under the impression
> that GEOS was merely a port of JTS.  If I port JTS's project function
> and related functions such as extractPoint to GEOS, would that patch be
> likely to be accepted?  Or am I missing something about the relationship
> between JTS and GEOS?

Your patch would be welcome. Make sure to include unit testing please.

--strk;

 Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
 http://foo.keybit.net/~strk/services.html  /\  Keep it simple! 
From geos-trac at osgeo.org  Fri Jul 24 05:18:56 2009
From: geos-trac at osgeo.org (GEOS)
Date: Fri Jul 24 05:18:58 2009
Subject: [geos-devel] [GEOS] #281: License issue
Message-ID: <047.7f3777ded3271881bb91936ed2b01839@osgeo.org>

#281: License issue
----------------------+-----------------------------------------------------
 Reporter:  frankie   |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect    |      Status:  new                       
 Priority:  blocker   |   Milestone:  3.1.2                     
Component:  Default   |     Version:  3.1.1                     
 Severity:  Critical  |    Keywords:                            
----------------------+-----------------------------------------------------
 The tests/xmltester/markup stuff is not released under LGPL. Please remove
 it ASAP.

 // Markup Release 6.3
 // Copyright (C) 1999-2002 First Objective Software, Inc. All rights
 reserved
 // Go to www.firstobject.com for the latest CMarkup and EDOM documentation
 // Use in commercial applications requires written permission
 // This software is provided "as is", with no warranty.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/281>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From doublebyte at gmail.com  Sat Jul 25 12:35:34 2009
From: doublebyte at gmail.com (Jo)
Date: Sat Jul 25 12:35:40 2009
Subject: [geos-devel] Computational Geometry Problem + Exception (Mateusz
	Loskot)
Message-ID: <23ab5f0a0907250935w22d6bde3p11220ed4278fda55@mail.gmail.com>

Hi,
Just to let you know, the problem I had, was related to the fact that my
gdal libraries were compiled with an older version of geos.
So I had:
- geos-svn installed from source;
- gdal installed from an Ubuntu package, with a previous version of geos.

So the solution would be, either to have everything installed from
(compatible) packages, or everything installed from source.
As I am a Slackware user, I went to the second one :-)
So:
- compile and install geos from svn (that was done!)
- recompile gdal to pick up the latest geos version (which involved not only
a configure, but also a clean) and install it;

And it's working! :-)
                                         Jo


2009/7/21 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. Re: Computational Geometry Problem + Exception (Mateusz Loskot)
>   2. Re: mapserver crash on exit, with svn head geos (strk)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 21 Jul 2009 01:10:46 +0200 (CEST)
> From: "Mateusz Loskot" <mateusz@loskot.net>
> Subject: Re: [geos-devel] Computational Geometry Problem + Exception
> To: "GEOS Development List" <geos-devel@lists.osgeo.org>
> Message-ID: <53125.90.195.2.67.1248131446.squirrel@loskot.net>
> Content-Type: text/plain;charset=iso-8859-2
>
> Jo wrote:
> > And running the program in a third computer, I get a different exception:
>
>
> Backtrace without a piece of code of program that caused it is useless.
>
> > Anyway, it would be great if anybody had some ideas why the program is
> > Could it be because the geos version installed is different from the geos
> > version that was used when compiling gdal?
>
> Very possible.
>
> > (In ubuntu I have some gdal binaries I have no idea-where-they-came-from
> > and
>
> They come from Ubuntu official packages, likely.
>
> > a svn version of geos...)
>
> You should not pass GEOS objects between your program linked against
> GEOS SVN and GDAL which uses older version of GEOS.
> Both should use the same version of GEOS.
>
> Solution:
> 1) Build GDAL with GEOS SVN if you want to use GEOS SVN in your program.
> 2) Link your program against GEOS of the same version used as GDAL uses.
> If GDAL is installed from Ubuntu packages, then simply install GEOS
> dev packages too and use it.
>
> Best regards,
> --
> Mateusz Loskot
> http://mateusz.loskot.net
>
>
>
> ------------------------------
>
> Message: 2
> Date: Tue, 21 Jul 2009 16:43:12 +0200
> From: strk <strk@keybit.net>
> Subject: Re: [geos-devel] mapserver crash on exit, with svn head geos
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Cc: mapserver-dev@lists.osgeo.org
> Message-ID: <20090721144312.GC75089@keybit.net>
> Content-Type: text/plain; charset=us-ascii
>
> On Fri, Jul 17, 2009 at 04:57:01PM -0400, David Fuhry wrote:
> > With GEOS from svn, mapserver crashes on calling exit(), as GEOS
> > destroys the static string defined in GEOS' WKBReader.cpp:
> >
> > string WKBReader::BAD_GEOM_TYPE_MSG = "bad geometry type encountered in
> ";
>
> Please check that mapserver is not linked to 2 different versions
> of the geos lib. I have had a similar problem with qgis/gdal due
> to this problem. A rebuild of both packages fixed it for me.
>
> --strk;
>
>  Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
>  http://foo.keybit.net/~strk/services.html<http://foo.keybit.net/%7Estrk/services.html> /\  Keep it simple!
>
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 81, Issue 20
> ******************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090725/dd533f5c/attachment.html
From novalis at novalis.org  Mon Jul 27 17:42:17 2009
From: novalis at novalis.org (David Turner)
Date: Mon Jul 27 17:45:23 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <20090723195306.GP75089@keybit.net>
References: <1248362014.7502.68.camel@gentle>
	<20090723195306.GP75089@keybit.net>
Message-ID: <1248730937.24460.1.camel@localhost>

On Thu, 2009-07-23 at 21:53 +0200, strk wrote:
> On Thu, Jul 23, 2009 at 11:13:34AM -0400, David Turner wrote:
> > JTS has a class called LengthIndexedLine with a method "project", which
> > lets you figure out  the nearest point on a line to a given point.  This
> > is useful, for instance, if you are trying to figure out what street a
> > person is on from (possibly slightly inaccurate) GPS observations.
> > 
> > http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> > 
> > PostGIS calls this function st_line_locate_point.
> > 
> > GEOS doesn't seem to have it, even though I was under the impression
> > that GEOS was merely a port of JTS.  If I port JTS's project function
> > and related functions such as extractPoint to GEOS, would that patch be
> > likely to be accepted?  Or am I missing something about the relationship
> > between JTS and GEOS?
> 
> Your patch would be welcome. Make sure to include unit testing please.

I have a patch.  Unfortunately, I do not yet have unit tests, because I
cannot find the relevant Java unit tests to port.  I could write my own,
but it seems like some of the other code uses ported Java unit tests,
and I want to follow the common practice.

Can you point me to the Java unit tests?

