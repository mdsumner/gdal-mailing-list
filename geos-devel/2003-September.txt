From Horst.Duester at bd.so.ch  Tue Sep  2 11:59:09 2003
From: Horst.Duester at bd.so.ch (=?ISO-8859-1?Q?D=FCster_Horst?=)
Date: Fri Nov  2 20:52:08 2007
Subject: [geos-devel] automake error??
Message-ID: <5B025B1F39D6D4119F5700508BEEEC66F947FB@srsofaioi4546.ktso.ch>

Hallo all
 
When running autogen.sh automake-1.4-p5 reports the following messages:
 
automake: configure.in: installing `./install-sh'
automake: configure.in: installing `./mkinstalldirs'
automake: configure.in: installing `./missing'
configure.in: 160: installing `./config.guess
 
What's the meaning of these messages??
 
Horst
 

From nhv at cape.com  Tue Sep  2 11:36:32 2003
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:08 2007
Subject: [geos-devel] automake error??
In-Reply-To: <5B025B1F39D6D4119F5700508BEEEC66F947FB@srsofaioi4546.ktso.ch>
Message-ID: <EKEJIKAILPONGGENMBGAMEFLEJAA.nhv@cape.com>

D?ster Horst writes:
>
> Hallo all
>
> When running autogen.sh automake-1.4-p5 reports the following messages:
>
> automake: configure.in: installing `./install-sh'
> automake: configure.in: installing `./mkinstalldirs'
> automake: configure.in: installing `./missing'
> configure.in: 160: installing `./config.guess
>
> What's the meaning of these messages??

automake is copying < or making symlinks > some files
to the GEOS directory

These files may be different depending on the automake
version you are using

This is normal behaviour

see
% info automake

HTH

Norman


From Horst.Duester at bd.so.ch  Tue Sep  2 12:43:27 2003
From: Horst.Duester at bd.so.ch (=?ISO-8859-1?Q?D=FCster_Horst?=)
Date: Fri Nov  2 20:52:08 2007
Subject: AW: [geos-devel] automake error??
Message-ID: <5B025B1F39D6D4119F5700508BEEEC66F947FC@srsofaioi4546.ktso.ch>

Norman,

I ask this question due to I'm not able to compile GEOS. You say automake is
OK. I think that configure runs OK but the compilation process breaks with a
lot of error messages I sent to the list some days ago. It was my last hope
that these messages were the cause of the compilation error. 

I believe that automake creates a wrong link path to the compiled objects.
The error message says p.e.:

gcc: ../algorithm/CentroidArea.lo: No such file or directory

and occurs for all *.lo objects. All these objects were stored in the
directory ../geom but not in the expected directories like 
../algorithm 
../graph
etc.

where the source is located.

Perhaps you can help to find a solution.

My system:

redhat 7.2

Horst


-----Urspr?ngliche Nachricht-----
Von: Norman Vine [mailto:nhv@cape.com]
Gesendet am: Dienstag, 2. September 2003 16:37
An: GEOS Development List
Betreff: RE: [geos-devel] automake error??

D?ster Horst writes:
>
> Hallo all
>
> When running autogen.sh automake-1.4-p5 reports the following messages:
>
> automake: configure.in: installing `./install-sh'
> automake: configure.in: installing `./mkinstalldirs'
> automake: configure.in: installing `./missing'
> configure.in: 160: installing `./config.guess
>
> What's the meaning of these messages??

automake is copying < or making symlinks > some files
to the GEOS directory

These files may be different depending on the automake
version you are using

This is normal behaviour

see
% info automake

HTH

Norman


_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net
http://geos.refractions.net/mailman/listinfo/geos-devel

From nhv at cape.com  Tue Sep  2 12:09:56 2003
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:08 2007
Subject: [geos-devel] automake error??
In-Reply-To: <5B025B1F39D6D4119F5700508BEEEC66F947FC@srsofaioi4546.ktso.ch>
Message-ID: <EKEJIKAILPONGGENMBGAKEFOEJAA.nhv@cape.com>

D?ster Horst writes:
>
> I ask this question due to I'm not able to compile GEOS. You say automake is
> OK. I think that configure runs OK but the compilation process breaks with a
> lot of error messages I sent to the list some days ago. It was my last hope
> that these messages were the cause of the compilation error.
>
> I believe that automake creates a wrong link path to the compiled objects.
> The error message says p.e.:
>
> gcc: ../algorithm/CentroidArea.lo: No such file or directory
>
> and occurs for all *.lo objects. All these objects were stored in the
> directory ../geom but not in the expected directories like
> ../algorithm
> ../graph
> etc.
>
> where the source is located.
>
> Perhaps you can help to find a solution.
>
> My system:
>
> redhat 7.2

I don't use Linux but the list archives are your friend :-)

try a google search on the following < without the quotes >
"geos automake redhat site:refractions.net"

AFAICT you will need to install the latest versions of
automake
autoconf
libtool

HTH

Norman


From pramsey at refractions.net  Tue Sep  2 12:05:55 2003
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:08 2007
Subject: AW: [geos-devel] automake error??
In-Reply-To: <5B025B1F39D6D4119F5700508BEEEC66F947FC@srsofaioi4546.ktso.ch>
References: <5B025B1F39D6D4119F5700508BEEEC66F947FC@srsofaioi4546.ktso.ch>
Message-ID: <3F54BFE3.6040303@refractions.net>

If you are going to run autogen.sh, you should really replace the stock 
automake, libtool, aclocal and autoconf with the latest versions. It 
works much much nicer then. Just "rpm -e" the old ones and install the 
new ones from source.

Failing that, the CVS daily snaphot now includes a ./configure script 
which hopefully should be plug'n'play.

P.

D?ster Horst wrote:

> Norman,
> 
> I ask this question due to I'm not able to compile GEOS. You say automake is
> OK. I think that configure runs OK but the compilation process breaks with a
> lot of error messages I sent to the list some days ago. It was my last hope
> that these messages were the cause of the compilation error. 
> 
> I believe that automake creates a wrong link path to the compiled objects.
> The error message says p.e.:
> 
> gcc: ../algorithm/CentroidArea.lo: No such file or directory
> 
> and occurs for all *.lo objects. All these objects were stored in the
> directory ../geom but not in the expected directories like 
> ../algorithm 
> ../graph
> etc.
> 
> where the source is located.
> 
> Perhaps you can help to find a solution.
> 
> My system:
> 
> redhat 7.2
> 
> Horst
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: Norman Vine [mailto:nhv@cape.com]
> Gesendet am: Dienstag, 2. September 2003 16:37
> An: GEOS Development List
> Betreff: RE: [geos-devel] automake error??
> 
> D?ster Horst writes:
> 
>>Hallo all
>>
>>When running autogen.sh automake-1.4-p5 reports the following messages:
>>
>>automake: configure.in: installing `./install-sh'
>>automake: configure.in: installing `./mkinstalldirs'
>>automake: configure.in: installing `./missing'
>>configure.in: 160: installing `./config.guess
>>
>>What's the meaning of these messages??
> 
> 
> automake is copying < or making symlinks > some files
> to the GEOS directory
> 
> These files may be different depending on the automake
> version you are using
> 
> This is normal behaviour
> 
> see
> % info automake
> 
> HTH
> 
> Norman
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_


From Horst.Duester at bd.so.ch  Wed Sep  3 05:50:27 2003
From: Horst.Duester at bd.so.ch (=?ISO-8859-1?Q?D=FCster_Horst?=)
Date: Fri Nov  2 20:52:08 2007
Subject: AW: AW: [geos-devel] automake error??
Message-ID: <5B025B1F39D6D4119F5700508BEEEC66F947FD@srsofaioi4546.ktso.ch>

Paul

I can't find a ./configure script in the snap shot 20030903
geos-cvs.tar.gz?????

Horst



-----Urspr?ngliche Nachricht-----
Von: Paul Ramsey [mailto:pramsey@refractions.net]
Gesendet am: Dienstag, 2. September 2003 17:06
An: GEOS Development List
Betreff: Re: AW: [geos-devel] automake error??

If you are going to run autogen.sh, you should really replace the stock 
automake, libtool, aclocal and autoconf with the latest versions. It 
works much much nicer then. Just "rpm -e" the old ones and install the 
new ones from source.

Failing that, the CVS daily snaphot now includes a ./configure script 
which hopefully should be plug'n'play.

P.

D?ster Horst wrote:

> Norman,
> 
> I ask this question due to I'm not able to compile GEOS. You say automake
is
> OK. I think that configure runs OK but the compilation process breaks with
a
> lot of error messages I sent to the list some days ago. It was my last
hope
> that these messages were the cause of the compilation error. 
> 
> I believe that automake creates a wrong link path to the compiled objects.
> The error message says p.e.:
> 
> gcc: ../algorithm/CentroidArea.lo: No such file or directory
> 
> and occurs for all *.lo objects. All these objects were stored in the
> directory ../geom but not in the expected directories like 
> ../algorithm 
> ../graph
> etc.
> 
> where the source is located.
> 
> Perhaps you can help to find a solution.
> 
> My system:
> 
> redhat 7.2
> 
> Horst
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: Norman Vine [mailto:nhv@cape.com]
> Gesendet am: Dienstag, 2. September 2003 16:37
> An: GEOS Development List
> Betreff: RE: [geos-devel] automake error??
> 
> D?ster Horst writes:
> 
>>Hallo all
>>
>>When running autogen.sh automake-1.4-p5 reports the following messages:
>>
>>automake: configure.in: installing `./install-sh'
>>automake: configure.in: installing `./mkinstalldirs'
>>automake: configure.in: installing `./missing'
>>configure.in: 160: installing `./config.guess
>>
>>What's the meaning of these messages??
> 
> 
> automake is copying < or making symlinks > some files
> to the GEOS directory
> 
> These files may be different depending on the automake
> version you are using
> 
> This is normal behaviour
> 
> see
> % info automake
> 
> HTH
> 
> Norman
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_


_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net
http://geos.refractions.net/mailman/listinfo/geos-devel

From pramsey at refractions.net  Wed Sep  3 11:41:25 2003
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:08 2007
Subject: AW: AW: [geos-devel] automake error??
In-Reply-To: <5B025B1F39D6D4119F5700508BEEEC66F947FD@srsofaioi4546.ktso.ch>
References: <5B025B1F39D6D4119F5700508BEEEC66F947FD@srsofaioi4546.ktso.ch>
Message-ID: <3F560BA5.4030801@refractions.net>

Strange, when I manually run my automatic script, I get the configure, 
but when cron does it, I do not. There's one there now, and hopefully I 
have fixed the problem.
P.

D?ster Horst wrote:
> Paul
> 
> I can't find a ./configure script in the snap shot 20030903
> geos-cvs.tar.gz?????
> 
> Horst
> 
> 
> 
> -----Urspr?ngliche Nachricht-----
> Von: Paul Ramsey [mailto:pramsey@refractions.net]
> Gesendet am: Dienstag, 2. September 2003 17:06
> An: GEOS Development List
> Betreff: Re: AW: [geos-devel] automake error??
> 
> If you are going to run autogen.sh, you should really replace the stock 
> automake, libtool, aclocal and autoconf with the latest versions. It 
> works much much nicer then. Just "rpm -e" the old ones and install the 
> new ones from source.
> 
> Failing that, the CVS daily snaphot now includes a ./configure script 
> which hopefully should be plug'n'play.
> 
> P.
> 
> D?ster Horst wrote:
> 
> 
>>Norman,
>>
>>I ask this question due to I'm not able to compile GEOS. You say automake
> 
> is
> 
>>OK. I think that configure runs OK but the compilation process breaks with
> 
> a
> 
>>lot of error messages I sent to the list some days ago. It was my last
> 
> hope
> 
>>that these messages were the cause of the compilation error. 
>>
>>I believe that automake creates a wrong link path to the compiled objects.
>>The error message says p.e.:
>>
>>gcc: ../algorithm/CentroidArea.lo: No such file or directory
>>
>>and occurs for all *.lo objects. All these objects were stored in the
>>directory ../geom but not in the expected directories like 
>>../algorithm 
>>../graph
>>etc.
>>
>>where the source is located.
>>
>>Perhaps you can help to find a solution.
>>
>>My system:
>>
>>redhat 7.2
>>
>>Horst
>>
>>
>>-----Urspr?ngliche Nachricht-----
>>Von: Norman Vine [mailto:nhv@cape.com]
>>Gesendet am: Dienstag, 2. September 2003 16:37
>>An: GEOS Development List
>>Betreff: RE: [geos-devel] automake error??
>>
>>D?ster Horst writes:
>>
>>
>>>Hallo all
>>>
>>>When running autogen.sh automake-1.4-p5 reports the following messages:
>>>
>>>automake: configure.in: installing `./install-sh'
>>>automake: configure.in: installing `./mkinstalldirs'
>>>automake: configure.in: installing `./missing'
>>>configure.in: 160: installing `./config.guess
>>>
>>>What's the meaning of these messages??
>>
>>
>>automake is copying < or making symlinks > some files
>>to the GEOS directory
>>
>>These files may be different depending on the automake
>>version you are using
>>
>>This is normal behaviour
>>
>>see
>>% info automake
>>
>>HTH
>>
>>Norman
>>
>>
>>_______________________________________________
>>geos-devel mailing list
>>geos-devel@geos.refractions.net
>>http://geos.refractions.net/mailman/listinfo/geos-devel
>>
>>_______________________________________________
>>geos-devel mailing list
>>geos-devel@geos.refractions.net
>>http://geos.refractions.net/mailman/listinfo/geos-devel
> 
> 
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_


From dblasby at refractions.net  Thu Sep  4 12:27:30 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:08 2007
Subject: [geos-devel] 
 [Fwd: [postgis-users] General PostGIS & GEOS comments and questions]
Message-ID: <3F5767F2.3020201@refractions.net>


-------------- next part --------------
An embedded message was scrubbed...
From: Vinko Vrsalovic <vinko@cprsig.cl>
Subject: [postgis-users] General PostGIS & GEOS comments and questions
Date: Thu, 4 Sep 2003 05:34:58 -0400
Size: 4392
Url: http://lists.osgeo.org/pipermail/geos-devel/attachments/20030904/e270baea/postgis-usersGeneralPostGISGEOScommentsandquestions.mht
From dblasby at refractions.net  Thu Sep  4 12:42:49 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:08 2007
Subject: [geos-devel] 
 Re: [postgis-users] General PostGIS & GEOS comments and questions
In-Reply-To: <20030904093458.GA4156@landsat.cprsig.cl>
References: <20030904093458.GA4156@landsat.cprsig.cl>
Message-ID: <3F576B89.1080802@refractions.net>

Thanks for the feedback, Vinko.  I've been very busy and havent had much 
time to actually do full testing.

Vinko Vrsalovic wrote:
> 	I guess you are aware of this, but just in case, with the latest
> 	cvs code, when passing a wrong parameter (typically geometry
> 	collections, I guess this is the reason for the warning in the docs :)) 
> 	to a GEOS powered function, postgres (7.3.4) crashes.
 > 	boundary(), when passed a geometry collection, throws an error
 > 	but it doesn't crash the server.

Almost all the GEOS functions should throw an error if you have a 
GeometryCollection as an argument.  This is because the symantics of a 
GeometryCollection for most operations are illdefined.  The Geos or JTS 
list would be a better place to discuss the details of this.

I havent been able to reproduce your bug - could you give me an example 
that crashes the server?


> 	Will there ever be support for geometry collections on GEOS
> 	powered functions, at least for some of them? Is this possible
> 	at all in all (or any) cases?

I'll forward your message to the GEOS list (geos-devel@geos.refractions.net)

> 	And a related issue, is there/will there be a function to obtain 
> 	an envelope of the actual geometries, not their bounding boxes?

OGC defines the envelope of a geometry as it's bounding box.

select envelope(<geom>);

Will return the bounding box as a POLYGON.

> 	In fact, what I'm looking for is to be able to do a
> 	contains(geom,collect(other_geom)), where geom is a POLYGON
> 	column, and other_geom is a column of GEOMETRY type, which 
> 	has different types of geometries. So far, the closest I've 
> 	arrived is to obtain the envelope()'s of the collect()'s, and
> 	then contains(geom,envelope).

I've not sure what you're trying to do here.
Are you trying to find geometries in one table ("other_geom") that are 
contained by a polygon in another table ("geom").

If so, then something like:

SELECT distinct * FROM table_polygon, table_other_geom WHERE
   contains(table_polygon.geom, table_other_geom.other_geom) AND
   table_polygon.geom && table_other_geom.other_geom

should be giving you what you want.

* remember, this is testing each geometry against a single polygon.
   This isnt doing any polygon dissolving.
   If your geometry ("other_geom") is multiparted, all the parts have
   to be contained by one polygon.



I have seen a lot of use for a union(<geometrycollection>) function.
Its implementation would be something like:


accum = initial_geometry.getGeometryN(0).union( 		
		initial_geometry.getGeometryN(1) );

accum = accum.union( 		
		initial_geometry.getGeometryN(2) );

accum = accum.union( 		
		initial_geometry.getGeometryN(3) );
....
return accum;


From Horst.Duester at bd.so.ch  Fri Sep  5 07:49:19 2003
From: Horst.Duester at bd.so.ch (=?ISO-8859-1?Q?D=FCster_Horst?=)
Date: Fri Nov  2 20:52:08 2007
Subject: [geos-devel] GEOS Postgis Error/Postgres crash
Message-ID: <5B025B1F39D6D4119F5700508BEEEC66F94802@srsofaioi4546.ktso.ch>

Thank you Paul for the ./configure script. Now compilation process works
correct. But now I'm running in the next problem.
 
I did the followinig steps:
 
1. Compilation and installation of GEOS
 
2. Compilation of Postgres 7.2.4 with:
    LDFLAGS=-lstdc++ ./configure --prefix=myPath --enable-multibyte
    stop Postgres
    make and make install
    start Postgres
 
3. Compilation of Postgis with GEOS option
    replace all $libdir with /myPath/lib in postgis.sql
 
4. Last step test with ogc test suite
    
    createdb ogc
    createlang plpgsql ogc
    installation of postgis.sql successful    
    installation of spatial_ref_sys.sql successful
 
    psql -d ogc -f 1_schema.sql works OK
    
    psql -d ogc -f 2_queries.sql    
    Postgres crashes and responses with the following error message:
 
psql:2_queries.sql:508: server closed the connection unexpectedly
        This probably means the server terminated abnormally
        before or while processing the request.
psql:2_queries.sql:508: connection to server was lost
 
I tested with my geometries (no geometry_collections) with the same result.
 
 
Any hint would be appreciated.
 
Horst

From pramsey at refractions.net  Fri Sep  5 11:18:44 2003
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:08 2007
Subject: [geos-devel] GEOS Postgis Error/Postgres crash
In-Reply-To: <5B025B1F39D6D4119F5700508BEEEC66F94802@srsofaioi4546.ktso.ch>
References: <5B025B1F39D6D4119F5700508BEEEC66F94802@srsofaioi4546.ktso.ch>
Message-ID: <3F58A954.8070206@refractions.net>

We do not pass the conformance suite yet. Yury is fixing up the last 
remaining bugs. The bug you hit (line 508) appears to be 
PointOnSurface() which I think we have already reported.

P.

D?ster Horst wrote:

> Thank you Paul for the ./configure script. Now compilation process works
> correct. But now I'm running in the next problem.
>  
> I did the followinig steps:
>  
> 1. Compilation and installation of GEOS
>  
> 2. Compilation of Postgres 7.2.4 with:
>     LDFLAGS=-lstdc++ ./configure --prefix=myPath --enable-multibyte
>     stop Postgres
>     make and make install
>     start Postgres
>  
> 3. Compilation of Postgis with GEOS option
>     replace all $libdir with /myPath/lib in postgis.sql
>  
> 4. Last step test with ogc test suite
>     
>     createdb ogc
>     createlang plpgsql ogc
>     installation of postgis.sql successful    
>     installation of spatial_ref_sys.sql successful
>  
>     psql -d ogc -f 1_schema.sql works OK
>     
>     psql -d ogc -f 2_queries.sql    
>     Postgres crashes and responses with the following error message:
>  
> psql:2_queries.sql:508: server closed the connection unexpectedly
>         This probably means the server terminated abnormally
>         before or while processing the request.
> psql:2_queries.sql:508: connection to server was lost
>  
> I tested with my geometries (no geometry_collections) with the same result.
>  
>  
> Any hint would be appreciated.
>  
> Horst
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_


From dblasby at refractions.net  Fri Sep  5 13:49:43 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] intersection() segfaulting
In-Reply-To: <20030904204952.GA471@ikonos.cprsig.cl>
References: <20030904204952.GA471@ikonos.cprsig.cl>
Message-ID: <3F58CCB7.7020004@refractions.net>

It appears that intersection() is doing something bad.

You'll see in this example that the first g1->intersection(g2) works, 
but doing the operation again causes a segfault.

* note: g1 & g2 are the same in this example (a big one-ring polygon)
* note: after the g1->intersection(g2), most geos functions on g1 will
         segfault (ie. g1->isValid() ).  Also you can create new
	geometries  and they'll cause segfaults for most operation.

It appears that this particular intersection() is sometimes screwing 
something up inside geos.

Attached is a little program to reproduce the crash and a valgrind 
report of the errors.

dave
-------------- next part --------------
// g++ -g test5.cpp -I/usr/local/include/geos -lgeos  ; ./a.out

#include "stdio.h"
#include "io.h"
#include "geom.h"

using namespace geos;

extern "C" int main(int, char**);

int main(int argC, char* argV[])
{

	WKTReader *r = new WKTReader();
	GeometryFactory *geomFactory;
	Geometry *g1, *g2,*g3, *g4 ;

	geomFactory= new GeometryFactory( new PrecisionModel(), -1);

	try{


		g1 = r->read
		g2 = r->read("MULTIPOLYGON (((238719.296875 6245682.5, 238707.59375 6245577, 238621.25 6245295, 238586.484375 6245217, 238500.3125 6245065, 238416.40625 6244967, 238268.46875 6244838, 238144.703125 6244710, 238040.09375 6244626, 237750.375 6244424, 237713.078125 6244390, 237658.890625 6244324, 237574.796875 6244145, 237515.984375 6243922, 237516.109375 6243780, 237534.9375 6243701, 237578.53125 6243597, 237621.109375 6243530, 237775.609375 6243378, 237840.59375 6243329, 237973.734375 6243257, 238031.515625 6243240, 238160.1875 6243236, 238261.484375 6243256, 238393.703125 6243311, 238450 6243345, 238689.109375 6243583, 238891.625 6243767, 238961.921875 6243849, 239094.515625 6243979, 239169.40625 6244079, 239254.59375 6244173, 239472.5 6244395, 239662.734375 6244516, 239754.484375 6244559, 239913.8125 6244596, 240108.234375 6244659, 240266.390625 6244693, 240406.1875 6244701, 240475.109375 6244695, 240631.453125 6244663, 240754 6244602, 240927.1875 6244463, 241121.5 6244253, 241268.71875 6244131, 241369.890625 6244018, 241475.484375 6243928, 241615.421875 6243845, 241696.3125 6243818, 241851.015625 6243795, 242080.078125 6243798, 242128.90625 6243782, 242183.515625 6243744, 242295.28125 6243613, 242379.6875 6243465, 242542.734375 6243235, 242591.109375 6243142, 242690.5 6242910, 242757.328125 6242748, 242834.484375 6242355, 242851.984375 6242182, 242871.796875 6242113, 242924.71875 6241995, 242974.796875 6241933, 243021.8125 6241892, 243178.0625 6241808, 243302.90625 6241765, 243457.8125 6241734, 243613.03125 6241736, 243790.578125 6241761, 243856.28125 6241779, 244004.828125 6241842, 244100.6875 6241918, 244238.609375 6241997, 244305.6875 6242056, 244347.578125 6242107, 244421.421875 6242246, 244514.28125 6242658, 244556.375 6242794, 244606.765625 6242906, 244707.625 6243079, 244754.296875 6243141, 244840.9375 6243233, 244921.796875 6243300, 245052 6243378, 245284.515625 6243489, 245336.109375 6243511, 245502.796875 6243557, 245649.109375 6243632, 245701.984375 6243647, 245815.8125 6243654, 245841.734375 6243641, 245913.6875 6243577, 245939.40625 6243528, 245957.8125 6243465, 245957.515625 6243346, 245937.1875 6243211, 245888.03125 6243062, 245752.515625 6242722, 245702.078125 6242524, 245633.3125 6242125, 245610.421875 6242052, 245477.40625 6241813, 245436.09375 6241685, 245445.28125 6241621, 245477.375 6241575, 245532.421875 6241529, 245625.3125 6241500, 245809.28125 6241509, 246147.421875 6241567, 246574.796875 6241655, 246848.125 6241671, 247007.1875 6241647, 247275.109375 6241581, 247407.0625 6241528, 247620.546875 6241415, 247735.484375 6241333, 247830.28125 6241247, 247912.578125 6241157, 247973.515625 6241059, 248006.828125 6240948, 248021.3125 6240833, 248056.609375 6240316, 248076.609375 6240230, 248101.015625 6240172, 248176.609375 6240044, 248265.5625 6239940, 248407.015625 6239819, 248489.234375 6239778, 248514.6875 6239773, 248573.78125 6239791, 248674.625 6239859, 248691.78125 6239878, 248771.609375 6240026, 248866.890625 6240255, 248968.796875 6240428, 249041.5 6240505, 249117.265625 6240563, 249171.078125 6240587, 249213.109375 6240595, 249417.671875 6240515, 249451.1875 6240494, 249504.765625 6240433, 249600.3125 6240271, 249668.6875 6240133, 249702.59375 6240049, 249748.1875 6239860, 249826.1875 6239642, 249859.09375 6239405, 249853.90625 6239315, 249789.609375 6239119, 249784.859375 6239108.5, 249748.453125 6239041.5, 249635.09375 6238870, 249566.703125 6238721, 249541.984375 6238650, 249547.25 6238596, 249564.484375 6238570, 249591.59375 6238550, 249631.484375 6238529, 249699.078125 6238513, 250027.21875 6238518, 250167.8125 6238488, 250340.265625 6238281, 250354.5 6238223, 250349.203125 6238184, 250294.3125 6238056, 250180.609375 6237899, 250090.234375 6237819, 250013.8125 6237737, 249988.734375 6237677, 249985.78125 6237646, 249994.125 6237619, 250079.53125 6237551, 250116.703125 6237538, 250389.578125 6237521, 250459.671875 6237509, 250517.40625 6237483, 250564.109375 6237442, 250623.59375 6237351, 250633.0625 6237327, 250637 6237229, 250650.625 6237192, 250667.578125 6237171, 250716.671875 6237138, 250833.5 6237084, 250962.078125 6237059, 251049.078125 6237029, 251281.625 6236866, 251373.5625 6236792, 251392.125 6236763, 251404.796875 6236712, 251405.078125 6236656, 251377.765625 6236540, 251319.96875 6236423, 251295.40625 6236349, 251295.3125 6236211, 251303.796875 6236174, 251323.8125 6236139, 251385.625 6236055, 251438.59375 6235966, 251452.8125 6235910, 251456.546875 6235818, 251446.21875 6235680, 251424.90625 6235576, 251386.984375 6235524, 251205.796875 6235332, 251071.9375 6235173, 251001.375 6235106, 250776.609375 6234933, 250597.578125 6234752, 250519.59375 6234684, 250439.875 6234630, 250320.5625 6234590, 250079.109375 6234568, 250006.421875 6234534, 249943.5 6234476, 249920.40625 6234445, 249857.109375 6234395, 249772.671875 6234342, 249684.328125 6234314, 249616.671875 6234316, 249505.0625 6234343, 249446.484375 6234344, 249402.40625 6234322, 249333.109375 6234249, 249304.296875 6234182, 249300.828125 6234124, 249340.3125 6233980, 249327.375 6233941, 249300.28125 6233906, 249265.3125 6233880, 249208.46875 6233862, 249082.3125 6233865, 249022.6875 6233853, 248975.25 6233818, 248907.375 6233736, 248857.578125 6233644, 248852.421875 6233364, 248834.4375 6233276, 248778.8125 6233119, 248753.609375 6233015, 248743.53125 6232964, 248741.765625 6232838, 248704.4375 6232761, 248669.640625 6232727, 248617.3125 6232685, 248548.90625 6232669, 248394.8125 6232713, 248314.578125 6232711, 248272.78125 6232700, 248206.1875 6232666, 248173.890625 6232635, 248121.5 6232501, 248085.390625 6232468, 247988.0625 6232438, 247868.984375 6232459, 247800.59375 6232447, 247758.109375 6232417, 247649.5 6232285, 247616.609375 6232276, 247516.0625 6232269, 247497.203125 6232262, 247461.34375 6232226, 247356.9375 6231985, 247340.578125 6231928, 247341.5 6231893, 247368.796875 6231829, 247378.984375 6231781, 247378.78125 6231743, 247356.09375 6231687, 247353.078125 6231656, 247378.671875 6231604, 247375.515625 6231579, 247361.984375 6231561, 247218.1875 6231506, 247192.625 6231465, 247175.875 6231375, 247186.5 6231172, 247111.484375 6231023, 247083.09375 6230896, 247006.078125 6230728, 246933.078125 6230414, 246913.265625 6230392, 246838.5 6230376, 246630.234375 6230354, 246528.28125 6230305, 246494.625 6230277, 246428.078125 6230191, 246372.71875 6230074, 246326.421875 6229997, 246191.09375 6229865, 246118.203125 6229760, 246078.296875 6229711, 245946.625 6229584, 245821.390625 6229455, 245797.484375 6229443, 245721.328125 6229430, 245667.1875 6229401, 245636.4375 6229358, 245620.4375 6229280, 245608.1875 6229258, 245570.84375 6229225, 245402.515625 6229123, 245327.703125 6229104, 245258.921875 6229051, 245190.484375 6229037, 245091.578125 6228961, 245036.90625 6228906, 245023.40625 6228882, 245016.328125 6228859, 245020.125 6228754, 245008.09375 6228722, 244929.421875 6228657, 244809.625 6228606, 244772.015625 6228578, 244773.8125 6228557, 244849.71875 6228370, 244863.890625 6228152, 244855.71875 6228066, 244830.015625 6227969, 244821.484375 6227901, 244799.59375 6227856, 244754.109375 6227682, 244757.234375 6227659, 244794.296875 6227599, 244796.90625 6227545, 244781.875 6227479, 244753.515625 6227441, 244683.578125 6227224, 244650.875 6227151, 244641.296875 6227073, 244622.59375 6227058, 244535.59375 6227021, 244414.875 6226898, 244369.78125 6226705, 244318.3125 6226623, 244288.265625 6226491, 244286.90625 6226446, 244255.296875 6226381, 244181.921875 6226308, 244027.1875 6226221, 243950.328125 6226187, 243805.390625 6226067, 243642.484375 6225901, 243547.0625 6225733, 243416.09375 6225562, 243351.921875 6225424, 243298.328125 6225268, 243300.984375 6225210, 243323.09375 6225084, 243358.6875 6224614, 243424.078125 6224279, 243418.5 6224246, 243408.53125 6224238, 243240.328125 6224186, 243040.796875 6224108, 242854.5 6224066, 242691.984375 6224042, 242441.71875 6223955, 242211 6223904, 242032.125 6223820, 241682.28125 6223740, 241446.421875 6223798, 241166.515625 6223885, 240694.921875 6223995, 240519.921875 6224010, 240412.5 6224028, 240090.71875 6224108, 239721.953125 6224184, 239566.015625 6224201, 239438.671875 6224196, 239342.59375 6224162, 238937.015625 6223860, 238774.703125 6223721, 238482.625 6223521, 238269.203125 6223386.5, 238079.984375 6223250, 237957.765625 6223193, 237728.109375 6222942, 237625.609375 6222857, 237523.578125 6222806, 237375.71875 6222706, 237228.578125 6222624, 237093.09375 6222533, 236767.40625 6222352, 236560.484375 6222211, 236430.421875 6222111, 236389.984375 6222096, 236327.578125 6222147, 236230.609375 6222259, 236058.1875 6222540, 235759.0625 6222894, 235597.203125 6223109, 235252.6875 6223496, 235144.78125 6223636, 235050.71875 6223734, 234878.515625 6223955, 234788.078125 6224055, 234687.921875 6224143, 234547.40625 6224210, 234500.078125 6224214, 234443.09375 6224200, 234286 6224111, 234120.6875 6223883, 234057.21875 6223823, 233946.984375 6223685, 233844.953125 6223586, 233768.59375 6223530, 233634.671875 6223374, 233533.296875 6223299, 233357.296875 6223091, 233273.21875 6223039, 233165.1875 6223027, 232853.734375 6223102, 232681.71875 6223154, 232527.109375 6223223, 232339.71875 6223333, 232309.828125 6223358, 232265.984375 6223375, 232071.890625 6223444, 231923.015625 6223487, 231659.40625 6223589, 231533.6875 6223623, 231194.09375 6223754, 230969.53125 6223817, 230929.484375 6223840, 230645.53125 6223939, 230438.109375 6224031, 230230.03125 6224098, 230014.578125 6224205, 229931.703125 6224262, 229850.4375 6224304, 229801.609375 6224374, 229777.53125 6224526, 229715.5 6225199, 229705 6225793, 229696.484375 6225826, 229661.921875 6225889, 229600.609375 6225948, 229546.703125 6225962, 229459.015625 6225954, 229413.90625 6225975, 229392.796875 6226003, 229298.609375 6226212, 229277.890625 6226225, 229140.234375 6226228, 228994.28125 6226253, 228945.515625 6226270, 228835.5625 6226333, 228719.09375 6226356, 228590.515625 6226405, 228492.1875 6226432, 228529.921875 6226541, 228587.703125 6226814, 228616.796875 6227124, 228620.953125 6227334, 228641.28125 6227485, 228630.8125 6227655, 228661.59375 6227713, 228668.5625 6227755, 228689.53125 6227801, 228686.59375 6227967, 228690.03125 6227993, 228700.03125 6228006, 228688.78125 6228142, 228657.703125 6228246, 228657.1875 6228275, 228692.40625 6228303, 228697.296875 6228316, 228685.625 6228406, 228665.78125 6228419.5, 228671.265625 6228545.5, 228648.46875 6228612, 228642.203125 6228685.5, 228598.203125 6228723.5, 228602.953125 6228741, 228625.671875 6228755, 228638 6228779.5, 228632.0625 6228976.5, 228610.265625 6229061, 228561.078125 6229108.5, 228563.171875 6229136, 228589.875 6229213, 228571.6875 6229311.5, 228581.671875 6229319.5, 228623.703125 6229325.5, 228674 6229365.5, 228721.25 6229430, 228750.40625 6229441, 228784.296875 6229476, 228828.28125 6229580.5, 228832.359375 6229720, 228842.765625 6229784, 228900.90625 6229808.5, 228924.46875 6229845.5, 228993.953125 6229879, 229022.640625 6229920, 229073.234375 6229941, 229091.953125 6229966.5, 229112.578125 6230026, 229111.96875 6230062, 229101 6230107, 229085.265625 6230134, 229083.234375 6230178, 229054.75 6230205, 229065.734375 6230232, 229092.28125 6230244.5, 229146.953125 6230253, 229190.859375 6230292, 229321.953125 6230303.5, 229379.015625 6230326.5, 229420.21875 6230376.5, 229515.96875 6230585, 229568.40625 6230653.5, 229607.265625 6230689, 229636.390625 6230703, 229701.15625 6230711.5, 229770.96875 6230731.5, 229871.96875 6230788, 229949.390625 6230879, 230004.65625 6230925, 230046.5625 6231010, 230066.65625 6231030, 230118.484375 6231055.5, 230210.1875 6231057, 230289.015625 6231072.5, 230491.75 6231212, 230518.078125 6231238, 230649.703125 6231440, 230697.46875 6231552, 230714.890625 6231654, 230834.0625 6231840, 230871.734375 6231872, 230899.703125 6231879.5, 230932.0625 6231924.5, 230992.296875 6231977, 231074.5625 6232009.5, 231118.484375 6232055, 231169.46875 6232126, 231260.0625 6232194, 231291.953125 6232265, 231356.515625 6232297.5, 231426.734375 6232362, 231459.234375 6232397, 231497.578125 6232464.5, 231535.25 6232497, 231555.75 6232568, 231585.75 6232600.5, 231610.171875 6232666.5, 231647.9375 6232691, 231700.53125 6232743, 231764.15625 6232826, 231956.46875 6232987, 231999.75 6233060, 232048.84375 6233096, 232091.078125 6233162.5, 232153.78125 6233224, 232179.75 6233272, 232244.0625 6233308, 232292.546875 6233377.5, 232356.875 6233424, 232387.96875 6233466, 232421.984375 6233564.5, 232489.15625 6233662.5, 232508.59375 6233719, 232584.859375 6233805, 232604 6233880, 232651.703125 6233923.5, 232653.796875 6233952, 232770.921875 6234064, 232811.828125 6234149, 232867.234375 6234358, 232884.296875 6234386, 232925.09375 6234429, 233010.078125 6234484, 233066.59375 6234560, 233151.671875 6234613, 233173.625 6234650, 233202.015625 6234730, 233231.296875 6234915, 233254.53125 6235182, 233273.703125 6235272, 233330.25 6235389, 233336.59375 6235486, 233350.875 6235519, 233389.0625 6235567, 233442.078125 6235629, 233488.1875 6235668, 233562.6875 6235783, 233588.984375 6235798, 233633.375 6235850, 233675.5 6235939, 233692.828125 6236003, 233731.6875 6236303, 233737.46875 6236418, 233719.921875 6236502, 233734.015625 6236591, 233732.8125 6236634, 233711.375 6236766, 233691.21875 6237226, 233672.515625 6237350, 233631.328125 6237413, 233616.921875 6237519, 233581.078125 6237573, 233580.578125 6237590, 233605.625 6237655, 233632.234375 6237940, 233667.5 6238091, 233674.703125 6238338, 233709.703125 6238360, 233724.28125 6238388, 233717.1875 6238414, 233694.9375 6238436, 233697.984375 6238465, 233738.734375 6238510, 233828.8125 6238523, 233939.4375 6238526, 233973.09375 6238552, 234026.46875 6238647, 234103.0625 6238686, 234133.78125 6238679, 234177.328125 6238626, 234272.390625 6238638, 234329.078125 6238660, 234455.515625 6238785, 234557.890625 6238903, 234601.1875 6238996, 234659.765625 6239040, 234674.609375 6239104, 234707.921875 6239192, 234707.40625 6239254, 234731.0625 6239273, 234734.578125 6239286, 234740.53125 6239349, 234772.3125 6239441, 234775.40625 6239514, 234811.09375 6239559, 234824.796875 6239616, 234874.796875 6239741, 234893.296875 6239766, 234934.703125 6239787, 235000.703125 6239888, 235080.984375 6240067, 235161.890625 6240182, 235186.703125 6240252, 235224.171875 6240279, 235269.734375 6240337, 235329.515625 6240386, 235378.015625 6240473, 235546.28125 6240603, 235617.1875 6240615, 235674.296875 6240668, 235704.984375 6240666, 235750.03125 6240648, 235807.3125 6240648, 235931.5 6240668, 236033.5625 6240705, 236118.984375 6240747, 236328.390625 6240909, 236420.328125 6241038, 236436.6875 6241093, 236481.3125 6241138, 236480.6875 6241157, 236611.59375 6241490, 236642.8125 6241608, 236659.875 6241635, 236689.078125 6241916, 236705.8125 6242001, 236706.90625 6242103, 236750.8125 6242406, 236733.703125 6242796, 236718.53125 6242885, 236719.25 6243045, 236712.09375 6243073, 236692.40625 6243095, 236680.875 6243142, 236681.4375 6243310, 236696.984375 6243346, 236733.203125 6243373, 236738.828125 6243445, 236836.53125 6243505, 236885.515625 6243575, 236887.90625 6243626, 236909.0625 6243734, 236928.265625 6243779, 236983.6875 6243986, 237049.6875 6244131, 237059.203125 6244205, 237090.296875 6244230, 237122.078125 6244277, 237117.796875 6244481, 237129.578125 6244515, 237229.515625 6244587, 237348.921875 6244736, 237412.515625 6244781, 237483.265625 6244801, 237536.40625 6244859, 237610.46875 6244897, 237676.578125 6244994, 237703.828125 6245023, 237762.515625 6245064, 237892.484375 6245289, 237914.921875 6245310, 238003.296875 6245334, 238078.5 6245332, 238103.109375 6245270, 238125.578125 6245253, 238197.1875 6245162, 238284.28125 6245170, 238324.484375 6245186, 238409.09375 6245243, 238505 6245343, 238602.0625 6245554, 238617.671875 6245619, 238634.265625 6245654, 238667.96875 6245674, 238719.296875 6245682.5)))");


		if (g1->isValid())
			cout <<"g1 is valid"<< endl;
		if (g2->isValid())
			cout <<"g2 is valid"<< endl;

	    cout << "about to intersection() these 2 geometries" << endl;
		g3 = g1->intersection(g2);
		cout << "finished intersection"<< endl;

		cout << "about to intersection() these 2 geometries" << endl;
		g4 = g1->intersection(g2);
		cout << "finished intersection"<< endl;


	}
	catch (exception e)
	{
		cout << "caught exception"<<endl;
		cout << e.what() << endl;
	}
	catch (char *s)
	{
	  cout << "caught string exception:"<<s<<endl;
	}
	catch (...)
	{
		cout << "anonymous exeception"<< endl;
	}
}

-------------- next part --------------
==12222== Memcheck, a.k.a. Valgrind, a memory error detector for x86-linux.
==12222== Copyright (C) 2002, and GNU GPL'd, by Julian Seward.
==12222== Using valgrind-1.9.6, a program instrumentation system for x86-linux.
==12222== Copyright (C) 2000-2002, and GNU GPL'd, by Julian Seward.
==12222== Estimated CPU clock rate is 1673 MHz
==12222== For more details, rerun with: -v
==12222== 
g1 is valid
g2 is valid
about to intersection() these 2 geometries
# overlapping MCs: 669
==12222== Invalid read of size 4
==12222==    at 0x402C16CD: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:95)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222==    by 0x8049F22: main (test5.cpp:33)
==12222==    Address 0x41286804 is 0 bytes inside a block of size 12 free'd
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C1678: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222== 
==12222== Invalid read of size 4
==12222==    at 0x402C16D5: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:95)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222==    by 0x8049F22: main (test5.cpp:33)
==12222==    Address 0x4128680C is 8 bytes inside a block of size 12 free'd
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C1678: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222== 
==12222== Invalid free() / delete / delete[]
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C1745: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222==    Address 0x41286804 is 0 bytes inside a block of size 12 free'd
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C1678: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222== 
==12222== Invalid read of size 4
==12222==    at 0x402C1756: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:95)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222==    by 0x8049F22: main (test5.cpp:33)
==12222==    Address 0x412C3294 is 0 bytes inside a block of size 12 free'd
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C15A2: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222== 
==12222== Invalid read of size 4
==12222==    at 0x402C175E: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:95)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222==    by 0x8049F22: main (test5.cpp:33)
==12222==    Address 0x412C329C is 8 bytes inside a block of size 12 free'd
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C15A2: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222== 
==12222== Invalid free() / delete / delete[]
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C17C8: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
==12222==    Address 0x412C3294 is 0 bytes inside a block of size 12 free'd
==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==12222==    by 0x402C15A2: geos::OverlayOp::~OverlayOp(void) (/usr/include/g++-3/stl_vector.h:266)
==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *, geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *) (Geometry.cpp:361)
finished intersection
about to intersection() these 2 geometries
==12222== 
==12222== Invalid read of size 4
==12222==    at 0x402DCBD2: vector<int, allocator<int> >::insert(int *, unsigned int, int const &) (/usr/include/g++-3/stl_alloc.h:422)
==12222==    by 0x4029F91D: geos::TopologyLocation::init(int) (/usr/include/g++-3/stl_vector.h:197)
==12222==    by 0x4029F65D: geos::TopologyLocation::TopologyLocation(int) (../graph/TopologyLocation.cpp:29)
==12222==    by 0x4029AEC6: geos::Label::Label(int, int) (../graph/Label.cpp:27)
==12222==    Address 0xFFFFFFFF is not stack'd, malloc'd or free'd
From me at yury.ca  Fri Sep  5 14:16:17 2003
From: me at yury.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] intersection() segfaulting
References: <20030904204952.GA471@ikonos.cprsig.cl>
	<3F58CCB7.7020004@refractions.net>
Message-ID: <00ba01c373d9$cf72a380$96d16c18@yury>

This is weird. Thanks for reporting it. I'll try to fix it before Monday.

Yury

----- Original Message ----- 
From: "David Blasby" <dblasby@refractions.net>
To: <vinko@cprsig.cl>; <geos-devel@geos.refractions.net>
Sent: Friday, September 05, 2003 10:49 AM
Subject: [geos-devel] intersection() segfaulting


> It appears that intersection() is doing something bad.
>
> You'll see in this example that the first g1->intersection(g2) works,
> but doing the operation again causes a segfault.
>
> * note: g1 & g2 are the same in this example (a big one-ring polygon)
> * note: after the g1->intersection(g2), most geos functions on g1 will
>          segfault (ie. g1->isValid() ).  Also you can create new
> geometries  and they'll cause segfaults for most operation.
>
> It appears that this particular intersection() is sometimes screwing
> something up inside geos.
>
> Attached is a little program to reproduce the crash and a valgrind
> report of the errors.
>
> dave
>


--------------------------------------------------------------------------------


// g++ -g test5.cpp -I/usr/local/include/geos -lgeos  ; ./a.out

#include "stdio.h"
#include "io.h"
#include "geom.h"

using namespace geos;

extern "C" int main(int, char**);

int main(int argC, char* argV[])
{

WKTReader *r = new WKTReader();
GeometryFactory *geomFactory;
Geometry *g1, *g2,*g3, *g4 ;

geomFactory= new GeometryFactory( new PrecisionModel(), -1);

try{


g1 = r->read("MULTIPOLYGON (((238719.296875 6245682.5, 238707.59375 6245577,
238621.25 6245295, 238586.484375 6245217, 238500.3125 6245065, 238416.40625
6244967, 238268.46875 6244838, 238144.703125 6244710, 238040.09375 6244626,
237750.375 6244424, 237713.078125 6244390, 237658.890625 6244324, 237574.796875
6244145, 237515.984375 6243922, 237516.109375 6243780, 237534.9375 6243701,
237578.53125 6243597, 237621.109375 6243530, 237775.609375 6243378, 237840.59375
6243329, 237973.734375 6243257, 238031.515625 6243240, 238160.1875 6243236,
238261.484375 6243256, 238393.703125 6243311, 238450 6243345, 238689.109375
6243583, 238891.625 6243767, 238961.921875 6243849, 239094.515625 6243979,
239169.40625 6244079, 239254.59375 6244173, 239472.5 6244395, 239662.734375
6244516, 239754.484375 6244559, 239913.8125 6244596, 240108.234375 6244659,
240266.390625 6244693, 240406.1875 6244701, 240475.109375 6244695, 240631.453125
6244663, 240754 6244602, 240927.1875 6244463, 241121.5 6244253, 241268.71875
6244131, 241369.890625 6244018, 241475.484375 6243928, 241615.421875 6243845,
241696.3125 6243818, 241851.015625 6243795, 242080.078125 6243798, 242128.90625
6243782, 242183.515625 6243744, 242295.28125 6243613, 242379.6875 6243465,
242542.734375 6243235, 242591.109375 6243142, 242690.5 6242910, 242757.328125
6242748, 242834.484375 6242355, 242851.984375 6242182, 242871.796875 6242113,
242924.71875 6241995, 242974.796875 6241933, 243021.8125 6241892, 243178.0625
6241808, 243302.90625 6241765, 243457.8125 6241734, 243613.03125 6241736,
243790.578125 6241761, 243856.28125 6241779, 244004.828125 6241842, 244100.6875
6241918, 244238.609375 6241997, 244305.6875 6242056, 244347.578125 6242107,
244421.421875 6242246, 244514.28125 6242658, 244556.375 6242794, 244606.765625
6242906, 244707.625 6243079, 244754.296875 6243141, 244840.9375 6243233,
244921.796875 6243300, 245052 6243378, 245284.515625 6243489, 245336.109375
6243511, 245502.796875 6243557, 245649.109375 6243632, 245701.984375 6243647,
245815.8125 6243654, 245841.734375 6243641, 245913.6875 6243577, 245939.40625
6243528, 245957.8125 6243465, 245957.515625 6243346, 245937.1875 6243211,
245888.03125 6243062, 245752.515625 6242722, 245702.078125 6242524, 245633.3125
6242125, 245610.421875 6242052, 245477.40625 6241813, 245436.09375 6241685,
245445.28125 6241621, 245477.375 6241575, 245532.421875 6241529, 245625.3125
6241500, 245809.28125 6241509, 246147.421875 6241567, 246574.796875 6241655,
246848.125 6241671, 247007.1875 6241647, 247275.109375 6241581, 247407.0625
6241528, 247620.546875 6241415, 247735.484375 6241333, 247830.28125 6241247,
247912.578125 6241157, 247973.515625 6241059, 248006.828125 6240948, 248021.3125
6240833, 248056.609375 6240316, 248076.609375 6240230, 248101.015625 6240172,
248176.609375 6240044, 248265.5625 6239940, 248407.015625 6239819, 248489.234375
6239778, 248514.6875 6239773, 248573.78125 6239791, 248674.625 6239859,
248691.78125 6239878, 248771.609375 6240026, 248866.890625 6240255,
248968.796875 6240428, 249041.5 6240505, 249117.265625 6240563, 249171.078125
6240587, 249213.109375 6240595, 249417.671875 6240515, 249451.1875 6240494,
249504.765625 6240433, 249600.3125 6240271, 249668.6875 6240133, 249702.59375
6240049, 249748.1875 6239860, 249826.1875 6239642, 249859.09375 6239405,
249853.90625 6239315, 249789.609375 6239119, 249784.859375 6239108.5,
249748.453125 6239041.5, 249635.09375 6238870, 249566.703125 6238721,
249541.984375 6238650, 249547.25 6238596, 249564.484375 6238570, 249591.59375
6238550, 249631.484375 6238529, 249699.078125 6238513, 250027.21875 6238518,
250167.8125 6238488, 250340.265625 6238281, 250354.5 6238223, 250349.203125
6238184, 250294.3125 6238056, 250180.609375 6237899, 250090.234375 6237819,
250013.8125 6237737, 249988.734375 6237677, 249985.78125 6237646, 249994.125
6237619, 250079.53125 6237551, 250116.703125 6237538, 250389.578125 6237521,
250459.671875 6237509, 250517.40625 6237483, 250564.109375 6237442, 250623.59375
6237351, 250633.0625 6237327, 250637 6237229, 250650.625 6237192, 250667.578125
6237171, 250716.671875 6237138, 250833.5 6237084, 250962.078125 6237059,
251049.078125 6237029, 251281.625 6236866, 251373.5625 6236792, 251392.125
6236763, 251404.796875 6236712, 251405.078125 6236656, 251377.765625 6236540,
251319.96875 6236423, 251295.40625 6236349, 251295.3125 6236211, 251303.796875
6236174, 251323.8125 6236139, 251385.625 6236055, 251438.59375 6235966,
251452.8125 6235910, 251456.546875 6235818, 251446.21875 6235680, 251424.90625
6235576, 251386.984375 6235524, 251205.796875 6235332, 251071.9375 6235173,
251001.375 6235106, 250776.609375 6234933, 250597.578125 6234752, 250519.59375
6234684, 250439.875 6234630, 250320.5625 6234590, 250079.109375 6234568,
250006.421875 6234534, 249943.5 6234476, 249920.40625 6234445, 249857.109375
6234395, 249772.671875 6234342, 249684.328125 6234314, 249616.671875 6234316,
249505.0625 6234343, 249446.484375 6234344, 249402.40625 6234322, 249333.109375
6234249, 249304.296875 6234182, 249300.828125 6234124, 249340.3125 6233980,
249327.375 6233941, 249300.28125 6233906, 249265.3125 6233880, 249208.46875
6233862, 249082.3125 6233865, 249022.6875 6233853, 248975.25 6233818, 248907.375
6233736, 248857.578125 6233644, 248852.421875 6233364, 248834.4375 6233276,
248778.8125 6233119, 248753.609375 6233015, 248743.53125 6232964, 248741.765625
6232838, 248704.4375 6232761, 248669.640625 6232727, 248617.3125 6232685,
248548.90625 6232669, 248394.8125 6232713, 248314.578125 6232711, 248272.78125
6232700, 248206.1875 6232666, 248173.890625 6232635, 248121.5 6232501,
248085.390625 6232468, 247988.0625 6232438, 247868.984375 6232459, 247800.59375
6232447, 247758.109375 6232417, 247649.5 6232285, 247616.609375 6232276,
247516.0625 6232269, 247497.203125 6232262, 247461.34375 6232226, 247356.9375
6231985, 247340.578125 6231928, 247341.5 6231893, 247368.796875 6231829,
247378.984375 6231781, 247378.78125 6231743, 247356.09375 6231687, 247353.078125
6231656, 247378.671875 6231604, 247375.515625 6231579, 247361.984375 6231561,
247218.1875 6231506, 247192.625 6231465, 247175.875 6231375, 247186.5 6231172,
247111.484375 6231023, 247083.09375 6230896, 247006.078125 6230728,
246933.078125 6230414, 246913.265625 6230392, 246838.5 6230376, 246630.234375
6230354, 246528.28125 6230305, 246494.625 6230277, 246428.078125 6230191,
246372.71875 6230074, 246326.421875 6229997, 246191.09375 6229865, 246118.203125
6229760, 246078.296875 6229711, 245946.625 6229584, 245821.390625 6229455,
245797.484375 6229443, 245721.328125 6229430, 245667.1875 6229401, 245636.4375
6229358, 245620.4375 6229280, 245608.1875 6229258, 245570.84375 6229225,
245402.515625 6229123, 245327.703125 6229104, 245258.921875 6229051,
245190.484375 6229037, 245091.578125 6228961, 245036.90625 6228906, 245023.40625
6228882, 245016.328125 6228859, 245020.125 6228754, 245008.09375 6228722,
244929.421875 6228657, 244809.625 6228606, 244772.015625 6228578, 244773.8125
6228557, 244849.71875 6228370, 244863.890625 6228152, 244855.71875 6228066,
244830.015625 6227969, 244821.484375 6227901, 244799.59375 6227856,
244754.109375 6227682, 244757.234375 6227659, 244794.296875 6227599,
244796.90625 6227545, 244781.875 6227479, 244753.515625 6227441, 244683.578125
6227224, 244650.875 6227151, 244641.296875 6227073, 244622.59375 6227058,
244535.59375 6227021, 244414.875 6226898, 244369.78125 6226705, 244318.3125
6226623, 244288.265625 6226491, 244286.90625 6226446, 244255.296875 6226381,
244181.921875 6226308, 244027.1875 6226221, 243950.328125 6226187, 243805.390625
6226067, 243642.484375 6225901, 243547.0625 6225733, 243416.09375 6225562,
243351.921875 6225424, 243298.328125 6225268, 243300.984375 6225210,
243323.09375 6225084, 243358.6875 6224614, 243424.078125 6224279, 243418.5
6224246, 243408.53125 6224238, 243240.328125 6224186, 243040.796875 6224108,
242854.5 6224066, 242691.984375 6224042, 242441.71875 6223955, 242211 6223904,
242032.125 6223820, 241682.28125 6223740, 241446.421875 6223798, 241166.515625
6223885, 240694.921875 6223995, 240519.921875 6224010, 240412.5 6224028,
240090.71875 6224108, 239721.953125 6224184, 239566.015625 6224201,
239438.671875 6224196, 239342.59375 6224162, 238937.015625 6223860,
238774.703125 6223721, 238482.625 6223521, 238269.203125 6223386.5,
238079.984375 6223250, 237957.765625 6223193, 237728.109375 6222942,
237625.609375 6222857, 237523.578125 6222806, 237375.71875 6222706,
237228.578125 6222624, 237093.09375 6222533, 236767.40625 6222352, 236560.484375
6222211, 236430.421875 6222111, 236389.984375 6222096, 236327.578125 6222147,
236230.609375 6222259, 236058.1875 6222540, 235759.0625 6222894, 235597.203125
6223109, 235252.6875 6223496, 235144.78125 6223636, 235050.71875 6223734,
234878.515625 6223955, 234788.078125 6224055, 234687.921875 6224143,
234547.40625 6224210, 234500.078125 6224214, 234443.09375 6224200, 234286
6224111, 234120.6875 6223883, 234057.21875 6223823, 233946.984375 6223685,
233844.953125 6223586, 233768.59375 6223530, 233634.671875 6223374,
233533.296875 6223299, 233357.296875 6223091, 233273.21875 6223039, 233165.1875
6223027, 232853.734375 6223102, 232681.71875 6223154, 232527.109375 6223223,
232339.71875 6223333, 232309.828125 6223358, 232265.984375 6223375,
232071.890625 6223444, 231923.015625 6223487, 231659.40625 6223589, 231533.6875
6223623, 231194.09375 6223754, 230969.53125 6223817, 230929.484375 6223840,
230645.53125 6223939, 230438.109375 6224031, 230230.03125 6224098, 230014.578125
6224205, 229931.703125 6224262, 229850.4375 6224304, 229801.609375 6224374,
229777.53125 6224526, 229715.5 6225199, 229705 6225793, 229696.484375 6225826,
229661.921875 6225889, 229600.609375 6225948, 229546.703125 6225962,
229459.015625 6225954, 229413.90625 6225975, 229392.796875 6226003,
229298.609375 6226212, 229277.890625 6226225, 229140.234375 6226228,
228994.28125 6226253, 228945.515625 6226270, 228835.5625 6226333, 228719.09375
6226356, 228590.515625 6226405, 228492.1875 6226432, 228529.921875 6226541,
228587.703125 6226814, 228616.796875 6227124, 228620.953125 6227334,
228641.28125 6227485, 228630.8125 6227655, 228661.59375 6227713, 228668.5625
6227755, 228689.53125 6227801, 228686.59375 6227967, 228690.03125 6227993,
228700.03125 6228006, 228688.78125 6228142, 228657.703125 6228246, 228657.1875
6228275, 228692.40625 6228303, 228697.296875 6228316, 228685.625 6228406,
228665.78125 6228419.5, 228671.265625 6228545.5, 228648.46875 6228612,
228642.203125 6228685.5, 228598.203125 6228723.5, 228602.953125 6228741,
228625.671875 6228755, 228638 6228779.5, 228632.0625 6228976.5, 228610.265625
6229061, 228561.078125 6229108.5, 228563.171875 6229136, 228589.875 6229213,
228571.6875 6229311.5, 228581.671875 6229319.5, 228623.703125 6229325.5, 228674
6229365.5, 228721.25 6229430, 228750.40625 6229441, 228784.296875 6229476,
228828.28125 6229580.5, 228832.359375 6229720, 228842.765625 6229784,
228900.90625 6229808.5, 228924.46875 6229845.5, 228993.953125 6229879,
229022.640625 6229920, 229073.234375 6229941, 229091.953125 6229966.5,
229112.578125 6230026, 229111.96875 6230062, 229101 6230107, 229085.265625
6230134, 229083.234375 6230178, 229054.75 6230205, 229065.734375 6230232,
229092.28125 6230244.5, 229146.953125 6230253, 229190.859375 6230292,
229321.953125 6230303.5, 229379.015625 6230326.5, 229420.21875 6230376.5,
229515.96875 6230585, 229568.40625 6230653.5, 229607.265625 6230689,
229636.390625 6230703, 229701.15625 6230711.5, 229770.96875 6230731.5,
229871.96875 6230788, 229949.390625 6230879, 230004.65625 6230925, 230046.5625
6231010, 230066.65625 6231030, 230118.484375 6231055.5, 230210.1875 6231057,
230289.015625 6231072.5, 230491.75 6231212, 230518.078125 6231238, 230649.703125
6231440, 230697.46875 6231552, 230714.890625 6231654, 230834.0625 6231840,
230871.734375 6231872, 230899.703125 6231879.5, 230932.0625 6231924.5,
230992.296875 6231977, 231074.5625 6232009.5, 231118.484375 6232055,
231169.46875 6232126, 231260.0625 6232194, 231291.953125 6232265, 231356.515625
6232297.5, 231426.734375 6232362, 231459.234375 6232397, 231497.578125
6232464.5, 231535.25 6232497, 231555.75 6232568, 231585.75 6232600.5,
231610.171875 6232666.5, 231647.9375 6232691, 231700.53125 6232743, 231764.15625
6232826, 231956.46875 6232987, 231999.75 6233060, 232048.84375 6233096,
232091.078125 6233162.5, 232153.78125 6233224, 232179.75 6233272, 232244.0625
6233308, 232292.546875 6233377.5, 232356.875 6233424, 232387.96875 6233466,
232421.984375 6233564.5, 232489.15625 6233662.5, 232508.59375 6233719,
232584.859375 6233805, 232604 6233880, 232651.703125 6233923.5, 232653.796875
6233952, 232770.921875 6234064, 232811.828125 6234149, 232867.234375 6234358,
232884.296875 6234386, 232925.09375 6234429, 233010.078125 6234484, 233066.59375
6234560, 233151.671875 6234613, 233173.625 6234650, 233202.015625 6234730,
233231.296875 6234915, 233254.53125 6235182, 233273.703125 6235272, 233330.25
6235389, 233336.59375 6235486, 233350.875 6235519, 233389.0625 6235567,
233442.078125 6235629, 233488.1875 6235668, 233562.6875 6235783, 233588.984375
6235798, 233633.375 6235850, 233675.5 6235939, 233692.828125 6236003,
233731.6875 6236303, 233737.46875 6236418, 233719.921875 6236502, 233734.015625
6236591, 233732.8125 6236634, 233711.375 6236766, 233691.21875 6237226,
233672.515625 6237350, 233631.328125 6237413, 233616.921875 6237519,
233581.078125 6237573, 233580.578125 6237590, 233605.625 6237655, 233632.234375
6237940, 233667.5 6238091, 233674.703125 6238338, 233709.703125 6238360,
233724.28125 6238388, 233717.1875 6238414, 233694.9375 6238436, 233697.984375
6238465, 233738.734375 6238510, 233828.8125 6238523, 233939.4375 6238526,
233973.09375 6238552, 234026.46875 6238647, 234103.0625 6238686, 234133.78125
6238679, 234177.328125 6238626, 234272.390625 6238638, 234329.078125 6238660,
234455.515625 6238785, 234557.890625 6238903, 234601.1875 6238996, 234659.765625
6239040, 234674.609375 6239104, 234707.921875 6239192, 234707.40625 6239254,
234731.0625 6239273, 234734.578125 6239286, 234740.53125 6239349, 234772.3125
6239441, 234775.40625 6239514, 234811.09375 6239559, 234824.796875 6239616,
234874.796875 6239741, 234893.296875 6239766, 234934.703125 6239787,
235000.703125 6239888, 235080.984375 6240067, 235161.890625 6240182,
235186.703125 6240252, 235224.171875 6240279, 235269.734375 6240337,
235329.515625 6240386, 235378.015625 6240473, 235546.28125 6240603, 235617.1875
6240615, 235674.296875 6240668, 235704.984375 6240666, 235750.03125 6240648,
235807.3125 6240648, 235931.5 6240668, 236033.5625 6240705, 236118.984375
6240747, 236328.390625 6240909, 236420.328125 6241038, 236436.6875 6241093,
236481.3125 6241138, 236480.6875 6241157, 236611.59375 6241490, 236642.8125
6241608, 236659.875 6241635, 236689.078125 6241916, 236705.8125 6242001,
236706.90625 6242103, 236750.8125 6242406, 236733.703125 6242796, 236718.53125
6242885, 236719.25 6243045, 236712.09375 6243073, 236692.40625 6243095,
236680.875 6243142, 236681.4375 6243310, 236696.984375 6243346, 236733.203125
6243373, 236738.828125 6243445, 236836.53125 6243505, 236885.515625 6243575,
236887.90625 6243626, 236909.0625 6243734, 236928.265625 6243779, 236983.6875
6243986, 237049.6875 6244131, 237059.203125 6244205, 237090.296875 6244230,
237122.078125 6244277, 237117.796875 6244481, 237129.578125 6244515,
237229.515625 6244587, 237348.921875 6244736, 237412.515625 6244781,
237483.265625 6244801, 237536.40625 6244859, 237610.46875 6244897, 237676.578125
6244994, 237703.828125 6245023, 237762.515625 6245064, 237892.484375 6245289,
237914.921875 6245310, 238003.296875 6245334, 238078.5 6245332, 238103.109375
6245270, 238125.578125 6245253, 238197.1875 6245162, 238284.28125 6245170,
238324.484375 6245186, 238409.09375 6245243, 238505 6245343, 238602.0625
6245554, 238617.671875 6245619, 238634.265625 6245654, 238667.96875 6245674,
238719.296875 6245682.5)))");
g2 = r->read("MULTIPOLYGON (((238719.296875 6245682.5, 238707.59375 6245577,
238621.25 6245295, 238586.484375 6245217, 238500.3125 6245065, 238416.40625
6244967, 238268.46875 6244838, 238144.703125 6244710, 238040.09375 6244626,
237750.375 6244424, 237713.078125 6244390, 237658.890625 6244324, 237574.796875
6244145, 237515.984375 6243922, 237516.109375 6243780, 237534.9375 6243701,
237578.53125 6243597, 237621.109375 6243530, 237775.609375 6243378, 237840.59375
6243329, 237973.734375 6243257, 238031.515625 6243240, 238160.1875 6243236,
238261.484375 6243256, 238393.703125 6243311, 238450 6243345, 238689.109375
6243583, 238891.625 6243767, 238961.921875 6243849, 239094.515625 6243979,
239169.40625 6244079, 239254.59375 6244173, 239472.5 6244395, 239662.734375
6244516, 239754.484375 6244559, 239913.8125 6244596, 240108.234375 6244659,
240266.390625 6244693, 240406.1875 6244701, 240475.109375 6244695, 240631.453125
6244663, 240754 6244602, 240927.1875 6244463, 241121.5 6244253, 241268.71875
6244131, 241369.890625 6244018, 241475.484375 6243928, 241615.421875 6243845,
241696.3125 6243818, 241851.015625 6243795, 242080.078125 6243798, 242128.90625
6243782, 242183.515625 6243744, 242295.28125 6243613, 242379.6875 6243465,
242542.734375 6243235, 242591.109375 6243142, 242690.5 6242910, 242757.328125
6242748, 242834.484375 6242355, 242851.984375 6242182, 242871.796875 6242113,
242924.71875 6241995, 242974.796875 6241933, 243021.8125 6241892, 243178.0625
6241808, 243302.90625 6241765, 243457.8125 6241734, 243613.03125 6241736,
243790.578125 6241761, 243856.28125 6241779, 244004.828125 6241842, 244100.6875
6241918, 244238.609375 6241997, 244305.6875 6242056, 244347.578125 6242107,
244421.421875 6242246, 244514.28125 6242658, 244556.375 6242794, 244606.765625
6242906, 244707.625 6243079, 244754.296875 6243141, 244840.9375 6243233,
244921.796875 6243300, 245052 6243378, 245284.515625 6243489, 245336.109375
6243511, 245502.796875 6243557, 245649.109375 6243632, 245701.984375 6243647,
245815.8125 6243654, 245841.734375 6243641, 245913.6875 6243577, 245939.40625
6243528, 245957.8125 6243465, 245957.515625 6243346, 245937.1875 6243211,
245888.03125 6243062, 245752.515625 6242722, 245702.078125 6242524, 245633.3125
6242125, 245610.421875 6242052, 245477.40625 6241813, 245436.09375 6241685,
245445.28125 6241621, 245477.375 6241575, 245532.421875 6241529, 245625.3125
6241500, 245809.28125 6241509, 246147.421875 6241567, 246574.796875 6241655,
246848.125 6241671, 247007.1875 6241647, 247275.109375 6241581, 247407.0625
6241528, 247620.546875 6241415, 247735.484375 6241333, 247830.28125 6241247,
247912.578125 6241157, 247973.515625 6241059, 248006.828125 6240948, 248021.3125
6240833, 248056.609375 6240316, 248076.609375 6240230, 248101.015625 6240172,
248176.609375 6240044, 248265.5625 6239940, 248407.015625 6239819, 248489.234375
6239778, 248514.6875 6239773, 248573.78125 6239791, 248674.625 6239859,
248691.78125 6239878, 248771.609375 6240026, 248866.890625 6240255,
248968.796875 6240428, 249041.5 6240505, 249117.265625 6240563, 249171.078125
6240587, 249213.109375 6240595, 249417.671875 6240515, 249451.1875 6240494,
249504.765625 6240433, 249600.3125 6240271, 249668.6875 6240133, 249702.59375
6240049, 249748.1875 6239860, 249826.1875 6239642, 249859.09375 6239405,
249853.90625 6239315, 249789.609375 6239119, 249784.859375 6239108.5,
249748.453125 6239041.5, 249635.09375 6238870, 249566.703125 6238721,
249541.984375 6238650, 249547.25 6238596, 249564.484375 6238570, 249591.59375
6238550, 249631.484375 6238529, 249699.078125 6238513, 250027.21875 6238518,
250167.8125 6238488, 250340.265625 6238281, 250354.5 6238223, 250349.203125
6238184, 250294.3125 6238056, 250180.609375 6237899, 250090.234375 6237819,
250013.8125 6237737, 249988.734375 6237677, 249985.78125 6237646, 249994.125
6237619, 250079.53125 6237551, 250116.703125 6237538, 250389.578125 6237521,
250459.671875 6237509, 250517.40625 6237483, 250564.109375 6237442, 250623.59375
6237351, 250633.0625 6237327, 250637 6237229, 250650.625 6237192, 250667.578125
6237171, 250716.671875 6237138, 250833.5 6237084, 250962.078125 6237059,
251049.078125 6237029, 251281.625 6236866, 251373.5625 6236792, 251392.125
6236763, 251404.796875 6236712, 251405.078125 6236656, 251377.765625 6236540,
251319.96875 6236423, 251295.40625 6236349, 251295.3125 6236211, 251303.796875
6236174, 251323.8125 6236139, 251385.625 6236055, 251438.59375 6235966,
251452.8125 6235910, 251456.546875 6235818, 251446.21875 6235680, 251424.90625
6235576, 251386.984375 6235524, 251205.796875 6235332, 251071.9375 6235173,
251001.375 6235106, 250776.609375 6234933, 250597.578125 6234752, 250519.59375
6234684, 250439.875 6234630, 250320.5625 6234590, 250079.109375 6234568,
250006.421875 6234534, 249943.5 6234476, 249920.40625 6234445, 249857.109375
6234395, 249772.671875 6234342, 249684.328125 6234314, 249616.671875 6234316,
249505.0625 6234343, 249446.484375 6234344, 249402.40625 6234322, 249333.109375
6234249, 249304.296875 6234182, 249300.828125 6234124, 249340.3125 6233980,
249327.375 6233941, 249300.28125 6233906, 249265.3125 6233880, 249208.46875
6233862, 249082.3125 6233865, 249022.6875 6233853, 248975.25 6233818, 248907.375
6233736, 248857.578125 6233644, 248852.421875 6233364, 248834.4375 6233276,
248778.8125 6233119, 248753.609375 6233015, 248743.53125 6232964, 248741.765625
6232838, 248704.4375 6232761, 248669.640625 6232727, 248617.3125 6232685,
248548.90625 6232669, 248394.8125 6232713, 248314.578125 6232711, 248272.78125
6232700, 248206.1875 6232666, 248173.890625 6232635, 248121.5 6232501,
248085.390625 6232468, 247988.0625 6232438, 247868.984375 6232459, 247800.59375
6232447, 247758.109375 6232417, 247649.5 6232285, 247616.609375 6232276,
247516.0625 6232269, 247497.203125 6232262, 247461.34375 6232226, 247356.9375
6231985, 247340.578125 6231928, 247341.5 6231893, 247368.796875 6231829,
247378.984375 6231781, 247378.78125 6231743, 247356.09375 6231687, 247353.078125
6231656, 247378.671875 6231604, 247375.515625 6231579, 247361.984375 6231561,
247218.1875 6231506, 247192.625 6231465, 247175.875 6231375, 247186.5 6231172,
247111.484375 6231023, 247083.09375 6230896, 247006.078125 6230728,
246933.078125 6230414, 246913.265625 6230392, 246838.5 6230376, 246630.234375
6230354, 246528.28125 6230305, 246494.625 6230277, 246428.078125 6230191,
246372.71875 6230074, 246326.421875 6229997, 246191.09375 6229865, 246118.203125
6229760, 246078.296875 6229711, 245946.625 6229584, 245821.390625 6229455,
245797.484375 6229443, 245721.328125 6229430, 245667.1875 6229401, 245636.4375
6229358, 245620.4375 6229280, 245608.1875 6229258, 245570.84375 6229225,
245402.515625 6229123, 245327.703125 6229104, 245258.921875 6229051,
245190.484375 6229037, 245091.578125 6228961, 245036.90625 6228906, 245023.40625
6228882, 245016.328125 6228859, 245020.125 6228754, 245008.09375 6228722,
244929.421875 6228657, 244809.625 6228606, 244772.015625 6228578, 244773.8125
6228557, 244849.71875 6228370, 244863.890625 6228152, 244855.71875 6228066,
244830.015625 6227969, 244821.484375 6227901, 244799.59375 6227856,
244754.109375 6227682, 244757.234375 6227659, 244794.296875 6227599,
244796.90625 6227545, 244781.875 6227479, 244753.515625 6227441, 244683.578125
6227224, 244650.875 6227151, 244641.296875 6227073, 244622.59375 6227058,
244535.59375 6227021, 244414.875 6226898, 244369.78125 6226705, 244318.3125
6226623, 244288.265625 6226491, 244286.90625 6226446, 244255.296875 6226381,
244181.921875 6226308, 244027.1875 6226221, 243950.328125 6226187, 243805.390625
6226067, 243642.484375 6225901, 243547.0625 6225733, 243416.09375 6225562,
243351.921875 6225424, 243298.328125 6225268, 243300.984375 6225210,
243323.09375 6225084, 243358.6875 6224614, 243424.078125 6224279, 243418.5
6224246, 243408.53125 6224238, 243240.328125 6224186, 243040.796875 6224108,
242854.5 6224066, 242691.984375 6224042, 242441.71875 6223955, 242211 6223904,
242032.125 6223820, 241682.28125 6223740, 241446.421875 6223798, 241166.515625
6223885, 240694.921875 6223995, 240519.921875 6224010, 240412.5 6224028,
240090.71875 6224108, 239721.953125 6224184, 239566.015625 6224201,
239438.671875 6224196, 239342.59375 6224162, 238937.015625 6223860,
238774.703125 6223721, 238482.625 6223521, 238269.203125 6223386.5,
238079.984375 6223250, 237957.765625 6223193, 237728.109375 6222942,
237625.609375 6222857, 237523.578125 6222806, 237375.71875 6222706,
237228.578125 6222624, 237093.09375 6222533, 236767.40625 6222352, 236560.484375
6222211, 236430.421875 6222111, 236389.984375 6222096, 236327.578125 6222147,
236230.609375 6222259, 236058.1875 6222540, 235759.0625 6222894, 235597.203125
6223109, 235252.6875 6223496, 235144.78125 6223636, 235050.71875 6223734,
234878.515625 6223955, 234788.078125 6224055, 234687.921875 6224143,
234547.40625 6224210, 234500.078125 6224214, 234443.09375 6224200, 234286
6224111, 234120.6875 6223883, 234057.21875 6223823, 233946.984375 6223685,
233844.953125 6223586, 233768.59375 6223530, 233634.671875 6223374,
233533.296875 6223299, 233357.296875 6223091, 233273.21875 6223039, 233165.1875
6223027, 232853.734375 6223102, 232681.71875 6223154, 232527.109375 6223223,
232339.71875 6223333, 232309.828125 6223358, 232265.984375 6223375,
232071.890625 6223444, 231923.015625 6223487, 231659.40625 6223589, 231533.6875
6223623, 231194.09375 6223754, 230969.53125 6223817, 230929.484375 6223840,
230645.53125 6223939, 230438.109375 6224031, 230230.03125 6224098, 230014.578125
6224205, 229931.703125 6224262, 229850.4375 6224304, 229801.609375 6224374,
229777.53125 6224526, 229715.5 6225199, 229705 6225793, 229696.484375 6225826,
229661.921875 6225889, 229600.609375 6225948, 229546.703125 6225962,
229459.015625 6225954, 229413.90625 6225975, 229392.796875 6226003,
229298.609375 6226212, 229277.890625 6226225, 229140.234375 6226228,
228994.28125 6226253, 228945.515625 6226270, 228835.5625 6226333, 228719.09375
6226356, 228590.515625 6226405, 228492.1875 6226432, 228529.921875 6226541,
228587.703125 6226814, 228616.796875 6227124, 228620.953125 6227334,
228641.28125 6227485, 228630.8125 6227655, 228661.59375 6227713, 228668.5625
6227755, 228689.53125 6227801, 228686.59375 6227967, 228690.03125 6227993,
228700.03125 6228006, 228688.78125 6228142, 228657.703125 6228246, 228657.1875
6228275, 228692.40625 6228303, 228697.296875 6228316, 228685.625 6228406,
228665.78125 6228419.5, 228671.265625 6228545.5, 228648.46875 6228612,
228642.203125 6228685.5, 228598.203125 6228723.5, 228602.953125 6228741,
228625.671875 6228755, 228638 6228779.5, 228632.0625 6228976.5, 228610.265625
6229061, 228561.078125 6229108.5, 228563.171875 6229136, 228589.875 6229213,
228571.6875 6229311.5, 228581.671875 6229319.5, 228623.703125 6229325.5, 228674
6229365.5, 228721.25 6229430, 228750.40625 6229441, 228784.296875 6229476,
228828.28125 6229580.5, 228832.359375 6229720, 228842.765625 6229784,
228900.90625 6229808.5, 228924.46875 6229845.5, 228993.953125 6229879,
229022.640625 6229920, 229073.234375 6229941, 229091.953125 6229966.5,
229112.578125 6230026, 229111.96875 6230062, 229101 6230107, 229085.265625
6230134, 229083.234375 6230178, 229054.75 6230205, 229065.734375 6230232,
229092.28125 6230244.5, 229146.953125 6230253, 229190.859375 6230292,
229321.953125 6230303.5, 229379.015625 6230326.5, 229420.21875 6230376.5,
229515.96875 6230585, 229568.40625 6230653.5, 229607.265625 6230689,
229636.390625 6230703, 229701.15625 6230711.5, 229770.96875 6230731.5,
229871.96875 6230788, 229949.390625 6230879, 230004.65625 6230925, 230046.5625
6231010, 230066.65625 6231030, 230118.484375 6231055.5, 230210.1875 6231057,
230289.015625 6231072.5, 230491.75 6231212, 230518.078125 6231238, 230649.703125
6231440, 230697.46875 6231552, 230714.890625 6231654, 230834.0625 6231840,
230871.734375 6231872, 230899.703125 6231879.5, 230932.0625 6231924.5,
230992.296875 6231977, 231074.5625 6232009.5, 231118.484375 6232055,
231169.46875 6232126, 231260.0625 6232194, 231291.953125 6232265, 231356.515625
6232297.5, 231426.734375 6232362, 231459.234375 6232397, 231497.578125
6232464.5, 231535.25 6232497, 231555.75 6232568, 231585.75 6232600.5,
231610.171875 6232666.5, 231647.9375 6232691, 231700.53125 6232743, 231764.15625
6232826, 231956.46875 6232987, 231999.75 6233060, 232048.84375 6233096,
232091.078125 6233162.5, 232153.78125 6233224, 232179.75 6233272, 232244.0625
6233308, 232292.546875 6233377.5, 232356.875 6233424, 232387.96875 6233466,
232421.984375 6233564.5, 232489.15625 6233662.5, 232508.59375 6233719,
232584.859375 6233805, 232604 6233880, 232651.703125 6233923.5, 232653.796875
6233952, 232770.921875 6234064, 232811.828125 6234149, 232867.234375 6234358,
232884.296875 6234386, 232925.09375 6234429, 233010.078125 6234484, 233066.59375
6234560, 233151.671875 6234613, 233173.625 6234650, 233202.015625 6234730,
233231.296875 6234915, 233254.53125 6235182, 233273.703125 6235272, 233330.25
6235389, 233336.59375 6235486, 233350.875 6235519, 233389.0625 6235567,
233442.078125 6235629, 233488.1875 6235668, 233562.6875 6235783, 233588.984375
6235798, 233633.375 6235850, 233675.5 6235939, 233692.828125 6236003,
233731.6875 6236303, 233737.46875 6236418, 233719.921875 6236502, 233734.015625
6236591, 233732.8125 6236634, 233711.375 6236766, 233691.21875 6237226,
233672.515625 6237350, 233631.328125 6237413, 233616.921875 6237519,
233581.078125 6237573, 233580.578125 6237590, 233605.625 6237655, 233632.234375
6237940, 233667.5 6238091, 233674.703125 6238338, 233709.703125 6238360,
233724.28125 6238388, 233717.1875 6238414, 233694.9375 6238436, 233697.984375
6238465, 233738.734375 6238510, 233828.8125 6238523, 233939.4375 6238526,
233973.09375 6238552, 234026.46875 6238647, 234103.0625 6238686, 234133.78125
6238679, 234177.328125 6238626, 234272.390625 6238638, 234329.078125 6238660,
234455.515625 6238785, 234557.890625 6238903, 234601.1875 6238996, 234659.765625
6239040, 234674.609375 6239104, 234707.921875 6239192, 234707.40625 6239254,
234731.0625 6239273, 234734.578125 6239286, 234740.53125 6239349, 234772.3125
6239441, 234775.40625 6239514, 234811.09375 6239559, 234824.796875 6239616,
234874.796875 6239741, 234893.296875 6239766, 234934.703125 6239787,
235000.703125 6239888, 235080.984375 6240067, 235161.890625 6240182,
235186.703125 6240252, 235224.171875 6240279, 235269.734375 6240337,
235329.515625 6240386, 235378.015625 6240473, 235546.28125 6240603, 235617.1875
6240615, 235674.296875 6240668, 235704.984375 6240666, 235750.03125 6240648,
235807.3125 6240648, 235931.5 6240668, 236033.5625 6240705, 236118.984375
6240747, 236328.390625 6240909, 236420.328125 6241038, 236436.6875 6241093,
236481.3125 6241138, 236480.6875 6241157, 236611.59375 6241490, 236642.8125
6241608, 236659.875 6241635, 236689.078125 6241916, 236705.8125 6242001,
236706.90625 6242103, 236750.8125 6242406, 236733.703125 6242796, 236718.53125
6242885, 236719.25 6243045, 236712.09375 6243073, 236692.40625 6243095,
236680.875 6243142, 236681.4375 6243310, 236696.984375 6243346, 236733.203125
6243373, 236738.828125 6243445, 236836.53125 6243505, 236885.515625 6243575,
236887.90625 6243626, 236909.0625 6243734, 236928.265625 6243779, 236983.6875
6243986, 237049.6875 6244131, 237059.203125 6244205, 237090.296875 6244230,
237122.078125 6244277, 237117.796875 6244481, 237129.578125 6244515,
237229.515625 6244587, 237348.921875 6244736, 237412.515625 6244781,
237483.265625 6244801, 237536.40625 6244859, 237610.46875 6244897, 237676.578125
6244994, 237703.828125 6245023, 237762.515625 6245064, 237892.484375 6245289,
237914.921875 6245310, 238003.296875 6245334, 238078.5 6245332, 238103.109375
6245270, 238125.578125 6245253, 238197.1875 6245162, 238284.28125 6245170,
238324.484375 6245186, 238409.09375 6245243, 238505 6245343, 238602.0625
6245554, 238617.671875 6245619, 238634.265625 6245654, 238667.96875 6245674,
238719.296875 6245682.5)))");


if (g1->isValid())
cout <<"g1 is valid"<< endl;
if (g2->isValid())
cout <<"g2 is valid"<< endl;

    cout << "about to intersection() these 2 geometries" << endl;
g3 = g1->intersection(g2);
cout << "finished intersection"<< endl;

cout << "about to intersection() these 2 geometries" << endl;
g4 = g1->intersection(g2);
cout << "finished intersection"<< endl;


}
catch (exception e)
{
cout << "caught exception"<<endl;
cout << e.what() << endl;
}
catch (char *s)
{
  cout << "caught string exception:"<<s<<endl;
}
catch (...)
{
cout << "anonymous exeception"<< endl;
}
}




--------------------------------------------------------------------------------


> ==12222== Memcheck, a.k.a. Valgrind, a memory error detector for x86-linux.
> ==12222== Copyright (C) 2002, and GNU GPL'd, by Julian Seward.
> ==12222== Using valgrind-1.9.6, a program instrumentation system for
x86-linux.
> ==12222== Copyright (C) 2000-2002, and GNU GPL'd, by Julian Seward.
> ==12222== Estimated CPU clock rate is 1673 MHz
> ==12222== For more details, rerun with: -v
> ==12222==
> g1 is valid
> g2 is valid
> about to intersection() these 2 geometries
> # overlapping MCs: 669
> ==12222== Invalid read of size 4
> ==12222==    at 0x402C16CD: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:95)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==    by 0x8049F22: main (test5.cpp:33)
> ==12222==    Address 0x41286804 is 0 bytes inside a block of size 12 free'd
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C1678: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==
> ==12222== Invalid read of size 4
> ==12222==    at 0x402C16D5: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:95)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==    by 0x8049F22: main (test5.cpp:33)
> ==12222==    Address 0x4128680C is 8 bytes inside a block of size 12 free'd
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C1678: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==
> ==12222== Invalid free() / delete / delete[]
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C1745: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==    Address 0x41286804 is 0 bytes inside a block of size 12 free'd
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C1678: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==
> ==12222== Invalid read of size 4
> ==12222==    at 0x402C1756: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:95)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==    by 0x8049F22: main (test5.cpp:33)
> ==12222==    Address 0x412C3294 is 0 bytes inside a block of size 12 free'd
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C15A2: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==
> ==12222== Invalid read of size 4
> ==12222==    at 0x402C175E: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:95)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==    by 0x8049F22: main (test5.cpp:33)
> ==12222==    Address 0x412C329C is 8 bytes inside a block of size 12 free'd
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C15A2: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==
> ==12222== Invalid free() / delete / delete[]
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C17C8: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> ==12222==    Address 0x412C3294 is 0 bytes inside a block of size 12 free'd
> ==12222==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
> ==12222==    by 0x402C15A2: geos::OverlayOp::~OverlayOp(void)
(/usr/include/g++-3/stl_vector.h:266)
> ==12222==    by 0x402C1111: geos::OverlayOp::overlayOp(geos::Geometry *,
geos::Geometry *, int) (../operation/overlay/OverlayOp.cpp:10)
> ==12222==    by 0x4027575E: geos::Geometry::intersection(geos::Geometry *)
(Geometry.cpp:361)
> finished intersection
> about to intersection() these 2 geometries
> ==12222==
> ==12222== Invalid read of size 4
> ==12222==    at 0x402DCBD2: vector<int, allocator<int> >::insert(int *,
unsigned int, int const &) (/usr/include/g++-3/stl_alloc.h:422)
> ==12222==    by 0x4029F91D: geos::TopologyLocation::init(int)
(/usr/include/g++-3/stl_vector.h:197)
> ==12222==    by 0x4029F65D: geos::TopologyLocation::TopologyLocation(int)
(../graph/TopologyLocation.cpp:29)
> ==12222==    by 0x4029AEC6: geos::Label::Label(int, int)
(../graph/Label.cpp:27)
> ==12222==    Address 0xFFFFFFFF is not stack'd, malloc'd or free'd
>


--------------------------------------------------------------------------------


> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>


From dblasby at refractions.net  Fri Sep  5 14:46:59 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] intersection() segfaulting
In-Reply-To: <00ba01c373d9$cf72a380$96d16c18@yury>
References: <20030904204952.GA471@ikonos.cprsig.cl>
	<3F58CCB7.7020004@refractions.net> <00ba01c373d9$cf72a380$96d16c18@yury>
Message-ID: <3F58DA23.2060802@refractions.net>

Yury A. Bychkov wrote:
 > This is weird. Thanks for reporting it. I'll try to fix it before 
 >Monday.

Excellent - thank-you!

Whats the timeframe on the unable-to-delete geometries bug?

dave
ps. there are also outstanding issues in convexHull(), Buffer(), 
getBoundary(), and getInteriorPoint().


From me at yury.ca  Sat Sep  6 05:16:29 2003
From: me at yury.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] intersection() segfaulting
References: <20030904204952.GA471@ikonos.cprsig.cl>
	<3F58CCB7.7020004@refractions.net> <00ba01c373d9$cf72a380$96d16c18@yury>
	<3F58DA23.2060802@refractions.net>
Message-ID: <027701c37457$9151cda0$96d16c18@yury>

> Whats the timeframe on the unable-to-delete geometries bug?
As far as I remember, it was solved a while ago. I am mistaken, can you send me
an example that causes a problem?

> ps. there are also outstanding issues in convexHull(), Buffer(),
> getBoundary(), and getInteriorPoint().
Problems with convexHull, getBoundary, getInteriorPoint (and some unreported
problems with getCentroid and isWithinDistance) are already fixed. There is
still a couple of bugs in the Buffer that I haven't solved yet (but hopefully
will soon).

Yury


From dblasby at refractions.net  Tue Sep 16 16:29:27 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] new CVS version - GEOS geometries are deletable now
Message-ID: <3F6772A7.9010503@refractions.net>

I tested the new vesion of GEOS and it appears that Geometries made with 
a GeometryFactory are now deleteable without problems.

I've committed this change to PostGIS, so GEOS shouldnt be leaking memory.

I've also run the OGC test suite, and the only problem is with Buffer().

dave


From me at yury.ca  Tue Sep 16 16:54:11 2003
From: me at yury.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] new CVS version - GEOS geometries are deletable now
References: <3F6772A7.9010503@refractions.net>
Message-ID: <00d601c37c94$b0c43ac0$96d16c18@yury>

I've fixed the bug in buffer(), but that caused some memory leaks. I should be
able to fix and commit that soon.

Yury

----- Original Message ----- 
From: "David Blasby" <dblasby@refractions.net>
To: <postgis-users@postgis.refractions.net>; <geos-devel@geos.refractions.net>
Sent: Tuesday, September 16, 2003 1:29 PM
Subject: [geos-devel] new CVS version - GEOS geometries are deletable now


> I tested the new vesion of GEOS and it appears that Geometries made with
> a GeometryFactory are now deleteable without problems.
>
> I've committed this change to PostGIS, so GEOS shouldnt be leaking memory.
>
> I've also run the OGC test suite, and the only problem is with Buffer().
>
> dave
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


From dblasby at refractions.net  Thu Sep 18 18:14:28 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] isvalid() -- segmentation fault
In-Reply-To: <3F6772A7.9010503@refractions.net>
References: <3F6772A7.9010503@refractions.net>
Message-ID: <3F6A2E44.6090809@refractions.net>

This program will cause a segfault during the isvalid() function.

-------------- next part --------------
// g++ test3.cpp -I/usr/local/include/geos -lgeos

#include "stdio.h"
#include "io.h"
#include "geom.h"

using namespace geos;

int main(int argC, char* argV[])
{

	WKTReader *r = new WKTReader();
	GeometryFactory *geomFactory;
	Geometry *g1, *g2 ;

	geomFactory= new GeometryFactory( new PrecisionModel(), -1);

	//g1 = r->read("MULTIPOLYGON(((1033707.6 1048313.1,1033694.9 1048315.7,1033659.9 1048344.3,1033627.6 1048388.8,1033620.9 1048426.8,1033623.6 1048471.3,1033623.6 1048480.8,1033616.8 1048503.2,1033629.1 1048541.3,1033668.3 1048707.6,1033696.3 1048755.6,1033721.4 1048771.6,1033724.5 1048772,1033737.2 1048772,1033772.1 1048756.4,1033794.6 1048721.9,1033811.1 1048667.4,1033814.8 1048613.6,1033815.1 1048597.5,1033809.2 1048556.1,1033809.3 1048549.6,1033797.1 1048501.9,1033790.9 1048492.2,1033773 1048399.6,1033760.6 1048377.6,1033741.8 1048357.8,1033742.1 1048341.8,1033713.9 1048313.4,1033707.6 1048313.1)))");
	g1 = r->read("POLYGON((1033707.6 1048313.1,1033694.9 1048315.7,1033659.9 1048344.3,1033627.6 1048388.8,1033620.9 1048426.8,1033623.6 1048471.3,1033623.6 1048480.8,1033616.8 1048503.2,1033629.1 1048541.3,1033668.3 1048707.6,1033696.3 1048755.6,1033721.4 1048771.6,1033724.5 1048772,1033737.2 1048772,1033772.1 1048756.4,1033794.6 1048721.9,1033811.1 1048667.4,1033814.8 1048613.6,1033815.1 1048597.5,1033809.2 1048556.1,1033809.3 1048549.6,1033797.1 1048501.9,1033790.9 1048492.2,1033773 1048399.6,1033760.6 1048377.6,1033741.8 1048357.8,1033742.1 1048341.8,1033713.9 1048313.4,1033707.6 1048313.1))");

	string s= g1->toString();
	cout << "geom1 = "<<s << endl;

	try {

	if (g1->isValid())
		cout <<" is valid" << endl;
	else
		cout << " in NOT valid "<< endl;
	}
	catch(...)
	{
		cout<<"error thrown"<<endl;
	}
}

From dblasby at refractions.net  Thu Sep 18 18:26:56 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] isvalid() -- segmentation fault
In-Reply-To: <3F6A2E44.6090809@refractions.net>
References: <3F6772A7.9010503@refractions.net>
	<3F6A2E44.6090809@refractions.net>
Message-ID: <3F6A3130.1080205@refractions.net>

I've attached the valgrind output.

dave


-------------- next part --------------
==10681== Memcheck, a.k.a. Valgrind, a memory error detector for x86-linux.
==10681== Copyright (C) 2002, and GNU GPL'd, by Julian Seward.
==10681== Using valgrind-1.9.6, a program instrumentation system for x86-linux.
==10681== Copyright (C) 2000-2002, and GNU GPL'd, by Julian Seward.
==10681== Estimated CPU clock rate is 1673 MHz
==10681== For more details, rerun with: -v
==10681== 
geom1 = POLYGON ((1033707.5999999999767169 1048313.0999999999767169, 1033694.9000000000232831 1048315.6999999999534339, 1033659.9000000000232831 1048344.3000000000465661, 1033627.5999999999767169 1048388.8000000000465661, 1033620.9000000000232831 1048426.8000000000465661, 1033623.5999999999767169 1048471.3000000000465661, 1033623.5999999999767169 1048480.8000000000465661, 1033616.8000000000465661 1048503.1999999999534339, 1033629.0999999999767169 1048541.3000000000465661, 1033668.3000000000465661 1048707.6000000000931323, 1033696.3000000000465661 1048755.6000000000931323, 1033721.4000000000232831 1048771.6000000000931323, 1033724.5000000000000000 1048772.0000000000000000, 1033737.1999999999534339 1048772.0000000000000000, 1033772.0999999999767169 1048756.3999999999068677, 1033794.5999999999767169 1048721.8999999999068677, 1033811.0999999999767169 1048667.3999999999068677, 1033814.8000000000465661 1048613.6000000000931323, 1033815.0999999999767169 1048597.5000000000000000, 1033809.1999999999534339 1048556.0999999999767169, 1033809.3000000000465661 1048549.5999999999767169, 1033797.0999999999767169 1048501.9000000000232831, 1033790.9000000000232831 1048492.1999999999534339, 1033773.0000000000000000 1048399.5999999999767169, 1033760.5999999999767169 1048377.5999999999767169, 1033741.8000000000465661 1048357.8000000000465661, 1033742.0999999999767169 1048341.8000000000465661, 1033713.9000000000232831 1048313.4000000000232831, 1033707.5999999999767169 1048313.0999999999767169))
==10681== Invalid read of size 4
==10681==    at 0x402A456C: geos::BinTreeNode::find(geos::BinTreeInterval *) (../index/bintree/BinTreeNode.cpp:64)
==10681==    by 0x402A5005: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:59)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    Address 0x4128707C is 24 bytes inside a block of size 32 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A44B3: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402A4570: geos::BinTreeNode::find(geos::BinTreeInterval *) (../index/bintree/BinTreeNode.cpp:64)
==10681==    by 0x402A5005: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:59)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    Address 0x41287078 is 20 bytes inside a block of size 32 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A44B3: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402A4589: geos::BinTreeNode::find(geos::BinTreeInterval *) (../index/bintree/BinTreeNode.cpp:67)
==10681==    by 0x402A5005: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:59)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    Address 0x4128706C is 8 bytes inside a block of size 32 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A44B3: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402A501B: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    by 0x4027532B: geos::Geometry::isValid(void) (Geometry.cpp:242)
==10681==    Address 0x41287070 is 12 bytes inside a block of size 32 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A44B3: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402A4C47: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:319)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    Address 0x41287064 is 0 bytes inside a block of size 32 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A44B3: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402A4C49: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:320)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    Address 0x412870FC is 4 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402A4C4E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:320)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    Address 0x41287100 is 8 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid write of size 4
==10681==    at 0x402A4C61: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:322)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    by 0x402CAF0E: geos::IsValidOp::isValid(void) (../operation/valid/IsValidOp.cpp:37)
==10681==    Address 0x412870FC is 4 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402E0308: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:590)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x412870FC is 4 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402E030D: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:590)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x41287100 is 8 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402E0353: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:196)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x412870F8 is 0 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402E0404: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_alloc.h:402)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x412870F8 is 0 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402E0441: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_uninitialized.h:78)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x412870FC is 4 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402E045D: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:95)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x412870F8 is 0 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid read of size 4
==10681==    at 0x402E0465: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:95)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x41287100 is 8 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid write of size 4
==10681==    at 0x402E04CB: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:612)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x412870F8 is 0 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid write of size 4
==10681==    at 0x402E04D0: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:613)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x412870FC is 4 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Invalid write of size 4
==10681==    at 0x402E04DF: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:614)
==10681==    by 0x402A4C6E: geos::NodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10681==    by 0x402A5022: geos::Root::insertContained(geos::BinTreeNode *, geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:62)
==10681==    by 0x402A4F8D: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:40)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x41287100 is 8 bytes inside a block of size 12 free'd
==10681==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10681==    by 0x402A4BB9: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4F66: geos::Root::insert(geos::BinTreeInterval *, void *) (../index/bintree/Root.cpp:33)
==10681==    by 0x402A3CE6: geos::Bintree::insert(geos::BinTreeInterval *, void *) (../index/bintree/Bintree.cpp:58)
==10681==    by 0x4028ADF5: geos::MCPointInRing::buildIndex(void) (../algorithm/MCPointInRing.cpp:38)
==10681==    by 0x4028AC7A: geos::MCPointInRing::MCPointInRing(geos::LinearRing *) (../algorithm/MCPointInRing.cpp:20)
==10681==    by 0x402CBCBD: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (/usr/include/g++-3/memory:36)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Conditional jump or move depends on uninitialised value(s)
==10681==    at 0x402A5129: geos::indexMonotoneChain::~indexMonotoneChain(void) (../index/chain/indexMonotoneChain.cpp:18)
==10681==    by 0x402A4B2F: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:218)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4BEF: geos::NodeBase::~NodeBase(void) (../index/bintree/NodeBase.cpp:29)
==10681==    by 0x402A4E9D: geos::Root::~Root(void) (../index/bintree/Root.cpp:10)
==10681==    by 0x402A3BEF: geos::Bintree::~Bintree(void) (../index/bintree/Bintree.cpp:31)
==10681==    by 0x4028AD10: geos::MCPointInRing::~MCPointInRing(void) (../algorithm/MCPointInRing.cpp:24)
==10681==    by 0x402CBE3B: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (../operation/valid/IsValidOp.cpp:261)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Use of uninitialised value of size 4
==10681==    at 0x402A514E: geos::indexMonotoneChain::~indexMonotoneChain(void) (../index/chain/indexMonotoneChain.cpp:19)
==10681==    by 0x402A4B2F: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:218)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4BEF: geos::NodeBase::~NodeBase(void) (../index/bintree/NodeBase.cpp:29)
==10681==    by 0x402A4E9D: geos::Root::~Root(void) (../index/bintree/Root.cpp:10)
==10681==    by 0x402A3BEF: geos::Bintree::~Bintree(void) (../index/bintree/Bintree.cpp:31)
==10681==    by 0x4028AD10: geos::MCPointInRing::~MCPointInRing(void) (../algorithm/MCPointInRing.cpp:24)
==10681==    by 0x402CBE3B: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (../operation/valid/IsValidOp.cpp:261)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681== 
==10681== Jump to the invalid address stated on the next line
==10681==    at 0x0: ???
==10681==    by 0x402A4B2F: geos::NodeBase::~NodeBase(void) (/usr/include/g++-3/stl_vector.h:218)
==10681==    by 0x402A449E: geos::BinTreeNode::~BinTreeNode(void) (../index/bintree/BinTreeNode.cpp:31)
==10681==    by 0x402A4BEF: geos::NodeBase::~NodeBase(void) (../index/bintree/NodeBase.cpp:29)
==10681==    by 0x402A4E9D: geos::Root::~Root(void) (../index/bintree/Root.cpp:10)
==10681==    by 0x402A3BEF: geos::Bintree::~Bintree(void) (../index/bintree/Bintree.cpp:31)
==10681==    by 0x4028AD10: geos::MCPointInRing::~MCPointInRing(void) (../algorithm/MCPointInRing.cpp:24)
==10681==    by 0x402CBE3B: geos::IsValidOp::checkHolesInShell(geos::Polygon *, geos::GeometryGraph *) (../operation/valid/IsValidOp.cpp:261)
==10681==    by 0x402CB26E: geos::IsValidOp::checkValid(geos::Polygon *) (../operation/valid/IsValidOp.cpp:92)
==10681==    by 0x402CB048: geos::IsValidOp::checkValid(geos::Geometry *) (../operation/valid/IsValidOp.cpp:54)
==10681==    Address 0x0 is not stack'd, malloc'd or free'd
From dblasby at refractions.net  Wed Sep 24 13:05:47 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] isvalid() still segfaulting
Message-ID: <3F71CEEB.9050908@refractions.net>

The other geometry I reported is now working. Unfortunately, I've found 
another.

Find attached a program to cause isvalid() to segfault.  Also included 
is the valgrind output.

dave
-------------- next part --------------
==10661== Memcheck, a.k.a. Valgrind, a memory error detector for x86-linux.
==10661== Copyright (C) 2002, and GNU GPL'd, by Julian Seward.
==10661== Using valgrind-1.9.6, a program instrumentation system for x86-linux.
==10661== Copyright (C) 2000-2002, and GNU GPL'd, by Julian Seward.
==10661== Estimated CPU clock rate is 1676 MHz
==10661== For more details, rerun with: -v
==10661== 
geom
==10661== Invalid read of size 4
==10661==    at 0x402A6EDD: geos::QuadTreeNode::find(geos::Envelope *) (../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C9810 is 28 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661== 
==10661== Invalid read of size 8
==10661==    at 0x402A722B: geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *) (../index/quadtree/QuadTreeNodeBase.cpp:11)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *) (../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F06C is 0 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void) (../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 8
==10661==    at 0x402A7244: geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *) (../index/quadtree/QuadTreeNodeBase.cpp:12)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *) (../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F074 is 8 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void) (../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 8
==10661==    at 0x402A7265: geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *) (../index/quadtree/QuadTreeNodeBase.cpp:13)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *) (../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F074 is 8 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void) (../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 8
==10661==    at 0x402A728B: geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *) (../index/quadtree/QuadTreeNodeBase.cpp:15)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *) (../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F06C is 0 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void) (../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402A6EF6: geos::QuadTreeNode::find(geos::Envelope *) (../index/quadtree/QuadTreeNode.cpp:69)
==10661==    by 0x402A788F: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C9804 is 16 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402A78A8: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661==    by 0x402CD15A: geos::QuadtreeNestedRingTester::buildQuadtree(void) (../operation/valid/QuadtreeNestedRingTester.cpp:75)
==10661==    Address 0x414C9808 is 20 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402A74B7: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:319)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C97F4 is 0 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402A74B9: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:320)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402A74BE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:320)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid write of size 4
==10661==    at 0x402A74D1: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:322)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402E0618: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:590)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402E061D: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:590)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402E0663: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:196)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402E0714: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_alloc.h:402)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402E0751: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_uninitialized.h:78)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402E076D: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:95)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402E0775: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:95)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid write of size 4
==10661==    at 0x402E07DB: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:612)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid write of size 4
==10661==    at 0x402E07E0: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:613)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid write of size 4
==10661==    at 0x402E07EF: vector<void *, allocator<void *> >::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:614)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *) (/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF: geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void) (/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402A75BE: geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void *, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A75C9: geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void *, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A656C: geos::Quadtree::query(geos::Envelope *) (../index/quadtree/Quadtree.cpp:67)
==10661==    by 0x402CCE2C: geos::QuadtreeNestedRingTester::isNonNested(void) (../operation/valid/QuadtreeNestedRingTester.cpp:39)
==10661==    Address 0x414C9808 is 20 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
==10661== 
==10661== Invalid read of size 4
==10661==    at 0x402A757D: geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void *, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:61)
==10661==    by 0x402A75C9: geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void *, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A75C9: geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void *, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A656C: geos::Quadtree::query(geos::Envelope *) (../index/quadtree/Quadtree.cpp:67)
==10661==    Address 0x414C9808 is 20 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void) (../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *) (../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *) (../index/quadtree/Quadtree.cpp:57)
pure virtual method called
-------------- next part --------------
// g++ test3.cpp -I/usr/local/include/geos -lgeos

#include "stdio.h"
#include "io.h"
#include "geom.h"

using namespace geos;

int main(int argC, char* argV[])
{

	WKTReader *r = new WKTReader();
	GeometryFactory *geomFactory;
	Geometry *g1, *g2 ;

	geomFactory= new GeometryFactory( new PrecisionModel(), -1);

	//g1 = r->read("MULTIPOLYGON(((1033707.6 1048313.1,1033694.9 1048315.7,1033659.9 1048344.3,1033627.6 1048388.8,1033620.9 1048426.8,1033623.6 1048471.3,1033623.6 1048480.8,1033616.8 1048503.2,1033629.1 1048541.3,1033668.3 1048707.6,1033696.3 1048755.6,1033721.4 1048771.6,1033724.5 1048772,1033737.2 1048772,1033772.1 1048756.4,1033794.6 1048721.9,1033811.1 1048667.4,1033814.8 1048613.6,1033815.1 1048597.5,1033809.2 1048556.1,1033809.3 1048549.6,1033797.1 1048501.9,1033790.9 1048492.2,1033773 1048399.6,1033760.6 1048377.6,1033741.8 1048357.8,1033742.1 1048341.8,1033713.9 1048313.4,1033707.6 1048313.1)))");
	//g1 = r->read("POLYGON((1033707.6 1048313.1,1033694.9 1048315.7,1033659.9 1048344.3,1033627.6 1048388.8,1033620.9 1048426.8,1033623.6 1048471.3,1033623.6 1048480.8,1033616.8 1048503.2,1033629.1 1048541.3,1033668.3 1048707.6,1033696.3 1048755.6,1033721.4 1048771.6,1033724.5 1048772,1033737.2 1048772,1033772.1 1048756.4,1033794.6 1048721.9,1033811.1 1048667.4,1033814.8 1048613.6,1033815.1 1048597.5,1033809.2 1048556.1,1033809.3 1048549.6,1033797.1 1048501.9,1033790.9 1048492.2,1033773 1048399.6,1033760.6 1048377.6,1033741.8 1048357.8,1033742.1 1048341.8,1033713.9 1048313.4,1033707.6 1048313.1))");

	g1 = r->read("MULTIPOLYGON(((1032188.6 967656.5,1032144.6 967630.25,1032125.7 967612,1032113.3 967585.94,1032113.4 967540.75,1032139.2 967458.44,1032145.8 967394.94,1032133.3 967350.31,1032108.2 967325.25,1032076.7 967311.56,1032051.4 967299.06,1032032.6 967298.94,1032000.8 967279.69,1031975.8 967240.63,1031957.3 967170.63,1031969.8 967152.13,1031963.8 967108.19,1031945.1 967057.38,1031875.7 967018.13,1031856.7 967017.88,1031806.1 967018.06,1031787.1 967010.88,1031711.4 966999,1031660.7 966999.19,1031527.8 967009.81,1031508.9 967004.63,1031427.1 966939.88,1031363.8 966920.44,1031325.8 966939.19,1031300.4 966965.81,1031268.6 966958.63,1031161.6 966913,1031098.1 966932.25,1031003.1 966938.31,1030939.9 966931.94,1030921.1 966925.25,1030877.1 966887,1030832.8 966867.81,1030775.9 966861.69,1030668.6 966829.06,1030599.2 966777.94,1030529.7 966771.31,1030390.2 966795.81,1030270.4 966782.81,1030251.4 966776.63,1030226.3 966776.69,1030213.4 966801.31,1030194.2 966814.69,1030182.3 966661.69,1030150.9 966661.94,1030131.7 966675.31,1030106.1 966712.56,1030093.5 966738.69,1030023.6 966782.25,1029960.4 966788.5,1029934.9 966800.56,1029922.4 966788.06,1029947.9 966736.81,1029941.9 966718,1029929.1 966705,1029910.1 966718.38,1029827.4 966819.25,1029795.6 966832.63,1029790.3 966834.81,1029764 966844.44,1029694.3 966877.06,1029668.6 966876.56,1029637.2 966876.94,1029561.8 966818.94,1029529.6 966870,1029504.6 966851.5,1029485.5 966843.75,1029460.2 966857.38,1029409.9 966805.81,1029391 966798.63,1029372 966817.94,1029365.4 966849.88,1029340.1 966863.44,1029277 966856.13,1029245.2 966869.5,1029232.6 966868.06,1029220 966849.5,1029194.6 966843.06,1029156.6 966862.25,1029131.3 966855.31,1029080.8 966830.38,1029061.9 966830.63,1029036.6 966829.75,1028960.5 966868.06,1028922.6 966867.19,1028884.6 966887.31,1028859.3 966879.38,1028789.9 966842.25,1028726.8 966829.31,1028638.1 966847.63,1028619.1 966860.5,1028581.1 966867.13,1028555.9 966867.19,1028524.3 966840.44,1028499.1 966840,1028473.7 966847.13,1028353 966935.5,1028315.1 966941.63,1028308.2 966938.38,1028302.4 966935.13,1028289.7 966916.63,1028264.6 966897.63,1028252.2 966872.63,1028233.4 966832.75,1028195.6 966814.31,1028043.9 966794.63,1027967.9 966768.25,1027911.3 966737.06,1027848.2 966673.56,1027797.9 966647.06,1027747.5 966640.69,1027671.4 966646.88,1027620.9 966633.56,1027557.8 966595.56,1027532.7 966563.5,1027494.8 966505.44,1027419 966493.13,1027356.2 966460.63,1027324.4 966454,1027305.5 966435.19,1027305.7 966409.06,1027286.7 966384.31,1027229.9 966351.63,1026989.9 966344.75,1026951.8 966338.38,1026831.4 966357,1026749.2 966382.56,1026717.6 966381.94,1026660.8 966376.31,1026572.3 966330.88,1026496.3 966349.69,1026433.1 966342.81,1026344.5 966361.13,1026319.3 966349.13,1026288 966279.25,1026275.4 966260.75,1026269.1 966228.38,1026294.9 966189.69,1026288.7 966164.88,1026295.1 966152.06,1026276.2 966119.75,1026244.4 966113.06,1026219.3 966087.06,1026213.3 966056.19,1026206.9 966030.38,1026181.8 966023.94,1026112 966074.5,1026086.6 966081.13,1026023.6 966061.75,1026004.3 966106.69,1025985.2 966118.56,1025972.8 966111.56,1025966.6 966054.13,1025947.7 966029.31,1025884.5 966009.5,1025871.8 966010,1025827.8 965978.25,1025796.1 965965,1025770.8 965971.63,1025663.1 966034.88,1025625 966065.63,1025593.3 966078.5,1025574.3 966072.75,1025549.2 966040.75,1025486.1 966027.88,1025410 966033.63,1025340.5 966026.5,1025296.2 966059,1025283.1 966109.75,1025295.6 966173.38,1025257.3 966192.63,1025143.4 966230.06,1025099.1 966216.88,1025061.3 966198.44,1024953.8 966223.06,1024878 966185.13,1024846.4 966191.5,1024852.3 966267.5,1024864.8 966300.06,1024864.8 966306.06,1024858.3 966337.5,1024832.8 966369.13,1024744.1 966400.5,1024718.7 966426.19,1024616.6 966604.06,1024559.2 966686.81,1024529.4 966707.13,1024470.6 966724.13,1024426.2 966737.56,1024407.1 966730.88,1024356.8 966686.38,1024312.6 966635.63,1024287.8 966622.56,1024237 966628.25,1024218 966623.06,1024116.9 966620.81,1024040.9 966628.56,1023983.9 966647.06,1023901.3 966716.25,1023856.6 966767.31,1023818.9 966780,1023799.8 966779.81,1023781 966766.5,1023724.1 966754.38,1023635.4 966760.13,1023534.1 966798.56,1023432.8 966823.44,1023375.7 966849,1023020.2 967114.38,1023007.4 967134.5,1022988.3 967140.31,1022963 967140.44,1022937.9 967132.94,1022868 967158,1022817.3 967203.31,1022766.4 967254.06,1022715.7 967304.44,1022671.2 967329.88,1022658.6 967329.94,1022645.8 967342.5,1022633.2 967355.06,1022607.8 967380.75,1022588.6 967399.13,1022563.2 967412.25,1022531.4 967437.69,1022499.8 967456.56,1022455.4 967482.56,1022430.1 967507.19,1022404.7 967539.38,1022373 967538.69,1022334.9 967551.88,1022315.8 967577.75,1022296.5 967627.75,1022296.7 967641.25,1022289.7 967704.75,1022283.3 967743.19,1022270.4 967773.81,1022226.1 967825.38,1022194.3 967863.88,1022168.9 967882,1022130.7 967908.19,1022111.7 967952.19,1022111.4 967965.75,1022098.8 967983.81,1022120.7 968009.44,1022132.1 968049.13,1022174.4 968041.31,1022193.5 968022.44,1022269.4 967996.63,1022358 967991.88,1022370.8 967972.31,1022377.5 967902.75,1022402.9 967858.06,1022466.6 967806.63,1022504.8 967736.81,1022625.6 967609.75,1022689.1 967558.88,1022765 967553.13,1022860 967541.13,1022923.3 967502.81,1022986.6 967477.5,1023062.7 967496.38,1023100.6 967490.75,1023138.6 967458.56,1023138.9 967414.38,1023132.6 967389.56,1023139.2 967369.69,1023132.8 967357.44,1023126.5 967351.19,1023126.4 967337.63,1023132.9 967324.81,1023209.3 967254.88,1023228.3 967229.5,1023253.7 967211.38,1023285.2 967224.56,1023348.6 967231.38,1023373.8 967231.31,1023392.8 967250.06,1023405.4 967249.06,1023493.4 967307.56,1023582 967352.38,1023626.1 967384.19,1023657.4 967436,1023638.3 967453.88,1023612.9 967453.94,1023581.6 967447.25,1023549.8 967454.63,1023518.3 967453.44,1023511.9 967447.19,1023492.9 967454.06,1023480.3 967460.56,1023467.5 967459.63,1023454.8 967473.19,1023461 967479.44,1023498.9 967536.5,1023505 967555.31,1023511.2 967556.13,1023695.1 967499.63,1023713.9 967493.75,1023758.3 967498.94,1023783.6 967493.38,1023815.3 967461.38,1023872.2 967454.44,1023942.1 967410.81,1024011.7 967385.31,1024018.3 967366.44,1024018.4 967347.38,1024031.2 967327.81,1024037.5 967315.5,1024062.9 967296.81,1024095 967239.81,1024120.1 967220.69,1024139.1 967219.88,1024151.8 967221.31,1024196.1 967226.5,1024215.1 967227.19,1024253.1 967221.56,1024284.7 967214.19,1024316.4 967195.25,1024329.1 967183.19,1024348.3 967138.69,1024373.5 967125.63,1024417.9 967120.25,1024456 967126.19,1024493.8 967138.56,1024531.6 967151.5,1024582.1 967164.94,1024613.8 967177.63,1024626.3 967190.19,1024632.6 967208.94,1024613.4 967222.81,1024588.1 967228.38,1024588.1 967253.44,1024613.2 967280,1024632.2 967279.69,1024841.3 967223.13,1024892.1 967190.94,1024911.1 967184.56,1024955.3 967203.75,1025031.1 967191.56,1025037.5 967192.75,1025170.3 967179.56,1025240 967186.19,1025271.4 967199.38,1025296.8 967204.81,1025372.7 967193.56,1025404.4 967174.13,1025467.8 967109.75,1025487.1 967098.38,1025499.9 967101.38,1025506 967097.63,1025512.3 967091.81,1025537.6 967084.69,1025582.2 967060.25,1025645.2 967079.63,1025746.2 967136.56,1025847.3 967150.31,1025910.4 967169.25,1025960.9 967182.06,1026074.8 967175.75,1026093.9 967169.44,1026125.3 967183.69,1026144.1 967195.88,1026201.1 967252.69,1026226.3 967259.69,1026251.6 967246.5,1026333.9 967222.44,1026359.2 967227.94,1026390.6 967279.25,1026598.4 967432.94,1026661.6 967483.94,1026737.1 967528.94,1026787.7 967541.31,1026800.4 967535.25,1026838.1 967554.75,1026875.9 967599.25,1026907.4 967605.44,1026932.9 967605.88,1027123.1 967524.06,1027205.4 967499.5,1027319.6 967461,1027345 967435.88,1027344.9 967397.25,1027332.6 967352.63,1027326.4 967327.75,1027332.9 967288.38,1027345.5 967288.88,1027364.6 967295.06,1027414.8 967378.25,1027439.9 967391.19,1027477.9 967366,1027503.3 967385.5,1027515.8 967410.56,1027490.3 967435.69,1027546.7 967569.75,1027565.4 967582.5,1027609.9 967582.63,1027666.4 967640.44,1027691.6 967647.38,1027723.4 967633.94,1027742.3 967647.75,1027761.3 967646.94,1027780 967660.19,1027805.4 967665.63,1027881.5 967654.38,1028014.1 967673.81,1028045.8 967686.06,1028064.3 967723.81,1028038.8 967794.19,1028051.1 967814.25,1028139.9 967832.5,1028165.1 967826.88,1028216.4 967737.94,1028235.3 967718.13,1028285.9 967693.38,1028330.2 967686.94,1028349.3 967694.19,1028399.7 967713.13,1028507.3 967726.06,1028620.6 967790,1028677.9 967758,1028759.9 967771.56,1028791.4 967791.25,1028829.4 967798.19,1028924.4 967771.56,1028943.4 967778.25,1028962.2 967810.63,1029075.7 967868,1029069.3 967893.31,1029037.3 967913.31,1029018.6 967906.06,1028917.5 967848.63,1028841.9 967822.25,1028803.8 967861,1028790.6 967962.38,1028790.5 967981.94,1028802.8 968045.69,1028846.9 968090.44,1028928.9 968097,1028954.4 968096.88,1029093.5 968078.94,1029169.6 968066.19,1029226.4 968072.31,1029384.4 968086.19,1029434.9 968105.06,1029529.8 968137.63,1029586.6 968117.69,1029650.3 968061.31,1029802.8 967953.5,1029847.1 967922,1029954.9 967883.31,1030055.9 967896.56,1030137.8 967941.25,1030200.9 967999.25,1030213.5 968024.81,1030200.6 968056.44,1030200.4 968088.56,1030231.9 968113.88,1030307.9 968120.19,1030421.6 968140.44,1030453.2 968140.56,1030485 968128.19,1030586.4 968077.25,1030649.5 968083.56,1030674.9 968077.5,1030751.1 968045.63,1030852.1 968033.31,1030934.4 968046.38,1030959.7 968046.81,1030985.1 968015.13,1031004.3 967957.13,1031042.6 967887.81,1031080.6 967856.06,1031112.3 967881.25,1031143.4 967952.25,1031231.7 968009.19,1031244.3 968034.75,1031250.5 968067.06,1031288.1 968143.25,1031287.9 968181.88,1031275 968219.5,1031274.9 968251.63,1031293.8 968270.44,1031287.4 968289.25,1031280.9 968321.13,1031299.6 968359.94,1031305.8 968385.81,1031293 968416.94,1031293 968436,1031330.8 968455.94,1031368.9 968443.31,1031406.9 968418.13,1031432.3 968411.5,1031457.4 968417.94,1031533.2 968456.38,1031558.6 968418.19,1031577.8 968411.81,1031621.8 968431.06,1031672.3 968463,1031672.2 968488.13,1031672.2 968507.69,1031691.2 968520.88,1031710.1 968514.56,1031792.4 968508.56,1031817.6 968508.5,1031899.7 968527.63,1031962.9 968560,1032019.5 968585.19,1032070 968630.19,1032082.6 968649.25,1032113.9 968681.06,1032182.9 968821,1032252.1 968891.31,1032296.4 968911,1032315.3 968905.25,1032397.4 968925.31,1032441.5 968968.56,1032473.1 968987.81,1032529.8 969001.5,1032618.1 969033.81,1032662.4 969078.63,1032674.6 969129.25,1032718.9 969147.94,1032762.9 969193.25,1032819.7 969242,1032857.3 969249.44,1032901.9 969229.94,1032920.8 969243.19,1032932.5 969306.44,1033019.5 969416.06,1033075.9 969448.81,1033158.1 969449.31,1033208.4 969461.75,1033264.6 969520.5,1033308.5 969546.25,1033465 969674.56,1033508.5 969738.44,1033552.3 969784.25,1033652.8 969836.63,1033708.7 969893.94,1033740.4 969907.69,1033835 969927.75,1033872.4 969958.75,1033903.2 970035.19,1034022 970138.5,1034146.9 970268.13,1034190.9 970287.88,1034248.1 970274.88,1034273.1 970287.81,1034328.7 970390.81,1034366.4 970416.31,1034410.6 970423.44,1034441.9 970442.75,1034516.6 970544.88,1034541.3 970583.44,1034572.3 970634.81,1034596.4 970724.13,1034640.4 970743.25,1034710.2 970737.81,1034747.9 970750.75,1034785.3 970795.38,1034860.9 970821.69,1034873.3 970847.75,1034898.1 970879.81,1034960.9 970918.81,1034973.1 970943.81,1034972.4 970995.06,1034952.4 971072.19,1034957.9 971148.19,1034982.8 971173.19,1035008.2 971180.13,1035040 971174.25,1035229.1 971208.38,1035486.1 971401.13,1035510.5 971458.25,1035534.6 971561.06,1035572.3 971586.56,1035635.3 971594.38,1035748.9 971614.69,1035837.6 971602.88,1035862.8 971608.81,1035894.3 971635.56,1035956.6 971706.19,1036075.9 971757.75,1036214.8 971785,1036233.9 971785.19,1036284.4 971786.56,1036347.6 971792.88,1036398.6 971768.13,1036455.3 971762.19,1036474.5 971755.88,1036576.2 971712.44,1036595.1 971712.63,1036607.1 971763.31,1036612.6 971834.31,1036613.1 971899,1036694.4 971952.69,1036731.3 972020.88,1036756.4 972033.88,1036826 972011.31,1036976.8 972092.75,1036995.4 972130.06,1037001.7 972137.31,1037021.5 972150.5,1037045.9 972156.5,1037108.3 972209.06,1037170.5 972292.19,1037195.4 972336.25,1037195.3 972362.31,1037220.1 972393.88,1037225.7 972445.81,1037275.6 972509.38,1037370.2 972548.06,1037389.4 972541.69,1037440.8 972466.31,1037530.3 972402.81,1037613.6 972365.63,1037723.8 972281.69,1037775.6 972255.88,1037814.6 972230.69,1038017.9 972194.44,1038036.8 972194.63,1038080.1 972220.38,1038186.6 972234.88,1038205.6 972236.13,1038313.5 972192.94,1038408.2 972168.31,1038509.2 972163.5,1038585.5 972113.63,1038642.6 972107.63,1038661.8 972089.25,1038693.3 972082.94,1038712.3 972082.63,1038756.2 972109.31,1038781.6 972109.31,1038844.9 972103.56,1038914.8 972085.56,1038946.3 972085.75,1038977.8 972105.44,1039034.7 972098.5,1039110.7 972106.31,1039205.9 972081.69,1039358.1 972057.19,1039396.7 972025.94,1039410 971987.75,1039501.9 971873,1039521.2 971847.06,1039546.4 971841.5,1039577.7 971874.31,1039591.8 971890.19,1039616.6 971922.25,1039635.4 971936.56,1039660.7 971923.44,1039691.9 971924.56,1039711.1 971924.25,1039813.5 971967.06,1039885.1 971976.06,1039904.8 971974.75,1040017.1 971879.19,1040071.8 971851.75,1040166.7 971845.75,1040236.6 971815.19,1040319.1 971802.63,1040610.4 971762.19,1040763.2 971686.94,1040832.9 971694.5,1040889.6 971688.56,1041124.6 971600.81,1041188.2 971570.5,1041201.3 971539.44,1041226.9 971520.25,1041258.6 971513.88,1041340.8 971521.44,1041359.7 971521.13,1041385.6 971483.88,1041404.8 971470.5,1041474.4 971458.56,1041519.4 971395.94,1041544.8 971388.81,1041620.5 971415.19,1041714.5 971467.44,1041764.8 971493.81,1041777.7 971487.31,1041871.3 971583.63,1041972 971629.06,1042041.4 971618.56,1042066.8 971623.94,1042091.9 971650,1042148.4 971670.13,1042281.5 971644.94,1042326.3 971614.5,1042382.9 971622.06,1042421 971614.94,1042466 971571.44,1042491.2 971564.81,1042522.4 971584.13,1042541.4 971584.69,1042586 971572.81,1042648.5 971631.38,1042717.9 971650,1042755.8 971644.31,1042800.6 971605.81,1042851.4 971581.06,1042945.9 971608.19,1042965.1 971608.38,1043009.6 971582.88,1043028.6 971590.13,1043065.5 971660.81,1043109.6 971687,1043122.3 971686,1043171.9 971756.06,1043190.6 971781.81,1043240.9 971795.75,1043317.4 971758.44,1043336.2 971758.13,1043386.5 971791.13,1043449.7 971784.88,1043519.4 971792.5,1043538.2 971792.13,1043589.1 971780.44,1043614.4 971767.88,1043672.2 971711.69,1043684.9 971692.13,1043704.2 971673.25,1043729.4 971667.63,1043754.8 971673.63,1043779.8 971699.63,1043829.8 971732.13,1043892.8 971757.5,1043924.6 971745.13,1044026.7 971670.56,1044128.5 971627.13,1044364.6 971458.06,1044549 971357.94,1044651.2 971294.94,1044752.8 971277.5,1044879.1 971290.75,1044904.3 971291.69,1044967.9 971260.38,1045025.6 971203.75,1045076.6 971165.94,1045146.4 971154,1045184.5 971129.25,1045210 971104.13,1045261.1 971079.38,1045292.9 971047.44,1045369.9 970984.94,1045510.1 970884.69,1045605.2 970866.06,1045681.5 970841.75,1045713.4 970816.38,1045814.9 970779.38,1045916.9 970736,1046068.8 970717.94,1046163.6 970726.44,1046226.7 970739.31,1046265 970707.06,1046322.6 970663.56,1046348.5 970613.81,1046369.2 970480.5,1046407.9 970403.56,1046575 970208.38,1046606.6 970189.94,1046670.2 970177.25,1046721 970159,1046739.9 970165.25,1046853.5 970179,1046935.6 970193,1046992.6 970187.06,1047017.8 970193.06,1047080.9 970206.88,1047112.5 970207.13,1047207.5 970183.5,1047485.9 970180.19,1047599.9 970162.31,1047682 970169.81,1047700.9 970169.06,1047802.6 970151.19,1047878.6 970145.44,1047915.9 970197.5,1047959.9 970223.69,1047991.3 970223.94,1048073.6 970217.88,1048105.5 970205.5,1048219.7 970168.56,1048263.9 970168.69,1048282.9 970175.88,1048358.9 970176.13,1048421.9 970195.56,1048542.2 970171.38,1048567.8 970158.75,1048599.3 970166.5,1048669 970159.94,1048687.9 970160.69,1048694 970180.5,1048680.9 970199.13,1048680.8 970236.75,1048711.6 970269.06,1048743.3 970269.69,1048762.3 970269.38,1048857.5 970238.25,1048920.8 970246.06,1048946.3 970227.44,1048940.8 970175.5,1048884.4 970123.75,1048891.1 970098.88,1048923 970073.44,1048954.8 970068.06,1048998.6 970094.31,1049035.6 970157.94,1049041.5 970201.81,1049065.9 970260,1049121.8 970349.88,1049259.1 970504.06,1049284 970516.06,1049340.4 970561.81,1049466.4 970607.13,1049529 970659.63,1049591.9 970679.56,1049667.8 970699.38,1049686.9 970693.56,1049737.8 970668.31,1049808.1 970605.13,1049858.6 970599.5,1049903.4 970568,1049966.6 970574.81,1050055.5 970544,1050087.1 970538.63,1050112.3 970539.06,1050175.5 970563.94,1050352 970585.56,1050447.1 970573.94,1050541.6 970594.06,1050567.1 970588.38,1050599.1 970562,1050681.5 970537.44,1050700.5 970538.63,1050763.5 970564,1050820.4 970559.06,1050845.8 970559,1050877.1 970577.75,1050940.3 970598.13,1051065.9 970663,1051128.9 970675.88,1051211.4 970664.38,1051256 970619.81,1051281.6 970614.75,1051312.8 970640,1051331.5 970659.75,1051350.5 970665.94,1051369.5 970660.13,1051388.4 970666.38,1051425.3 970756.06,1051468.9 970800.88,1051544.1 970851.81,1051662.8 970974.75,1051712.9 971013.19,1051857.6 971065.25,1051920.9 971059.56,1051958.6 971073.5,1052059.9 971087.19,1052167.3 971100.25,1052293.8 971083.81,1052375.8 971103.88,1052420 971111,1052515.1 971099,1052533.9 971098.69,1052578.3 971112.88,1052603.4 971112.81,1052635.1 971112.44,1052736.1 971120.69,1052831.5 971089.06,1052888.8 971058.56,1052946.3 971007.88,1053066.5 970983.19,1053117.8 970952.44,1053149.9 970901.94,1053226.8 970832.5,1053272 970750.81,1053356.1 970604.25,1053508.9 970517.5,1053730.9 970481.44,1053781.9 970449.75,1053838.9 970431.19,1053940.6 970407.38,1054061.4 970332.5,1054131.9 970269.31,1054151.4 970224.38,1054189.9 970181.06,1054183.9 970162.25,1054177.9 970136.44,1054248.1 970079.31,1054254.8 970049.38,1054248.9 970016.06,1054262 969978.38,1054256 969940.06,1054269.4 969895.81,1054269.8 969870.19,1054245.4 969800,1054264.4 969780.63,1054296 969799.88,1054321.3 969800.31,1054315.4 969769.5,1054322 969743.13,1054392.4 969679.94,1054399.3 969628.94,1054412.4 969604.88,1054437.9 969579.63,1054462.9 969604.69,1054524.9 969700.81,1054574.9 969732.81,1054625.4 969753.31,1054638.1 969752.19,1054713.6 969792.19,1054794.5 969881.5,1054920 969958.94,1055102.6 970016.38,1055109.3 970018.63,1055128.1 970018.81,1055223.5 969969.63,1055407.8 969900.63,1055712 969847,1055750.4 969822.31,1055866.1 969645.38,1055974.8 969563.5,1056039 969501.06,1056230 969387.13,1056268.6 969336.81,1056389.9 969261.44,1056421.9 969218.5,1056511.4 969155.44,1056543.5 969110.44,1056537.4 969092.63,1056544.3 969041.69,1056569.8 969028.56,1056588.8 969035.81,1056614.1 969035.75,1056645.6 969041.94,1056671 969043.38,1056690.1 969017.44,1056703.1 968998.38,1056805.6 968891.19,1056857.1 968809.25,1056876.3 968789.38,1056959.3 968746.19,1057067.6 968671.38,1057105.6 968659.19,1057176 968608.56,1057271.3 968585,1057436.8 968497.19,1057468.5 968478.25,1057481.6 968459.19,1057475.4 968439.38,1057475.6 968414.25,1057507.6 968382.81,1057565.1 968344.75,1057609.6 968307.75,1057666.8 968307.81,1057723.9 968283.31,1057781.5 968233.25,1057781.9 968207.63,1057814 968176.19,1057872 968068.88,1057910.9 968011.56,1057974.5 967980.81,1058057.6 967905,1058133.6 967887.75,1058184.9 967836.94,1058223.1 967824.25,1058311.6 967812.94,1058439 967750.31,1058496.1 967737.88,1058635.9 967681.75,1058706.4 967612.63,1058757.5 967575.81,1058833.5 967563.56,1058852.8 967544.19,1058879 967462.31,1058956.8 967323.56,1059059.1 967221.94,1059225 967116.06,1059282.6 967059.44,1059327.3 967027.94,1059417 966933.38,1059506.9 966838.81,1059519.6 966812.69,1059513.8 966781.31,1059527.1 966737.06,1059590.9 966686.69,1059623.1 966630.19,1059680.8 966579.56,1059694.4 966509.31,1059745.8 966445.94,1059746 966420.88,1059709 966351.13,1059709.4 966312.5,1059767.8 966205.25,1059826 966091.38,1059879.1 965887.5,1059905.5 965812.13,1059924.6 965799.38,1059886.3 965718.69,1059888.6 965633.81,1059869.8 965633.19,1059787.8 965619.56,1059655.4 965580.5,1059642.8 965579.56,1059592.3 965573.19,1059554.6 965547.69,1059516.9 965540.25,1059491.3 965547.38,1059427 965628.38,1059420.5 965647.25,1059273.4 965779.88,1059163.4 965982.13,1059092.6 966070.44,1059085.4 966147.44,1059021 966235.94,1059014.3 966267.31,1059019.9 966324.31,1058998.4 966521.81,1058972.3 966585.13,1058889.3 966648.38,1058876.9 966659.88,1058863.6 966673,1058831 966755.69,1058767.3 966799,1058716.4 966824.19,1058658.8 966880.81,1058645.6 966912.94,1058543.4 967013.63,1058460.5 967043.75,1058434.9 967069.38,1058459.9 967095.44,1058484.8 967147,1058484.4 967166.06,1058427.4 967158,1058370.9 967132.81,1058320.1 967158.06,1058301.1 967156.88,1058257.1 967130.63,1058238.1 967131.44,1058091.8 967193.31,1058047.4 967199.75,1058003 967217.19,1057939.9 967203.31,1057901.6 967222.94,1057876 967260.63,1057856.8 967285.06,1057799.6 967298.06,1057742.8 967284.94,1057717.5 967290.5,1057673.3 967277.31,1057635.3 967296,1057584.3 967326.75,1057489 967351.88,1057330 967420.81,1057285.6 967438.75,1057227.8 967501.88,1057189.6 967521.56,1057157.9 967526.44,1057075.1 967570.06,1057011 967633.5,1056953.3 967708.69,1056902.4 967721.38,1056889.9 967721.44,1056870.3 967771.38,1056806.1 967840.81,1056742.6 967872.63,1056716.9 967897.31,1056678 967973.19,1056645.8 968011.19,1056639 968050.06,1056645.1 968067.81,1056607.1 968068.5,1056588.3 968061.75,1056550.4 968067.38,1056441.8 968143.19,1056396.9 968198.81,1056301.1 968256.06,1056275.8 968293.75,1056274.5 968363.5,1056274.5 968377.06,1056254.9 968421,1056241.8 968458.19,1056235.6 968471.44,1056209.9 968484.13,1056165.6 968470.44,1056128 968451.44,1056026.3 968494.94,1055892.4 968570.38,1055791.1 968587.69,1055727.3 968631.06,1055670.3 968650,1055587.4 968699.69,1055447.5 968756.31,1055295.5 968766.25,1055263.4 968792.19,1055231.6 968830.63,1055180.6 968855.38,1055073 968866.5,1054932.3 968985.88,1054868.4 969042.75,1054843 969048.81,1054811.5 969035.63,1054798.6 969035.63,1054779.8 969034.94,1054600 969256.25,1054561.5 969281.44,1054536 969312.19,1054510 969363.38,1054478.4 969369.75,1054415.3 969355.94,1054313.4 969418.94,1054274.9 969443.63,1054223.9 969500,1054128.4 969544.69,1054102.5 969587.88,1054064.4 969606.56,1054032.8 969612.94,1053969.4 969605.63,1053944 969619.25,1053918.3 969662.5,1053644.3 969812.5,1053529.5 969881.13,1053498 969887,1053435 969874.56,1053358.8 969886.38,1053321 969872.44,1053289.9 969827.56,1053264.8 969814.56,1053125.6 969806.5,1053100.6 969801.06,1053043.5 969818.5,1053005 969857.25,1052973.3 969868.13,1052795.4 969918.38,1052642.8 969980,1052566.9 969998.25,1052497.3 970004.25,1052472 969996.81,1052415.1 970003.75,1052313.5 970020.63,1052263 970019.75,1052243.8 970019.56,1052168 970031.31,1052111.4 970006.56,1052023 969985.25,1051998 969978.81,1051941.5 969934.06,1051877.9 969946.31,1051820.9 969964.25,1051802 969957.56,1051771.1 969913.69,1051745.6 969913.81,1051701.1 969925.75,1051682.4 969918.56,1051468 969852.38,1051361.3 969794.19,1051285.9 969768.31,1051260.9 969741.81,1051248.1 969741.81,1051197.9 969716.88,1051141.3 969695.69,1051090.8 969689.88,1050983 969707.5,1050856.9 969681.25,1050800.5 969634.94,1050725.8 969551.44,1050682.3 969475.5,1050620.4 969366.25,1050595.4 969353.31,1050582.4 969360.31,1050557.4 969339.81,1050557.9 969320.75,1050551.9 969295.94,1050520.5 969270.19,1050432.6 969218.25,1050224.5 969176.88,1050205.5 969177.69,1050168.3 969201.88,1050141.9 969201.5,1050073.9 969067.44,1050049 969047.94,1050029.9 969048.25,1049922.3 969066.38,1049820.4 969116.31,1049763.4 969109.25,1049700.1 969114.44,1049567.9 969094.5,1049511.4 969049.25,1049492.5 969049,1049448 969055.44,1049429 969047.69,1049366.6 968997.69,1049259.6 968952.06,1049202.8 968957.5,1049139.5 968949.19,1049056.3 968976.81,1049037.8 968987.13,1048987 968999.75,1048898.3 969004.56,1048866.8 968997.88,1048816.6 968971.88,1048772.5 968965.25,1048721.9 968970.94,1048607.3 969013.94,1048549.9 969045.94,1048448.8 969056.75,1048334.6 969080.69,1048290.1 969087.13,1048162.9 969149.63,1048042.5 969167.31,1047998.3 969166.69,1047903.3 969160.19,1047884.6 969153,1047770.5 969177.94,1047700.5 969214.94,1047674.8 969240.13,1047630.4 969258.63,1047585.8 969271,1047509.4 969321.38,1047477.7 969314.69,1047446.1 969326.63,1047426.9 969340,1047383 969313.75,1047364.2 969301,1047319.6 969332.56,1047192.2 969406.69,1047173.1 969400.38,1047154.2 969393.19,1047135.4 969373.94,1047110.4 969361.5,1047072.5 969368.06,1046990.6 969347,1046920.9 969346.44,1046889.6 969315.13,1046826.9 969281.69,1046807.8 969282.5,1046706.4 969306.38,1046598.7 969317,1046554.3 969342.44,1046452.6 969354.31,1046421 969360.19,1046345.3 969346.81,1046243.9 969371.25,1046225.2 969382.56,1046192.6 969422.06,1046147.9 969453.06,1046128.9 969445.81,1046078.7 969426.38,1046059.8 969425.69,1045918.8 969572.13,1045822.1 969710.13,1045789.8 969773.75,1045764.3 969785.81,1045745.3 969792.19,1045675.6 969785.06,1045492.2 969802.94,1045377.9 969845.94,1045307.9 969877,1045263.7 969857.31,1045219.6 969849.69,1045200.6 969850.44,1045181.3 969888.38,1045162 969906.75,1045067.1 969912.81,1044818.9 970024.69,1044799.8 970031,1044724.2 970016.69,1044673.4 970029.81,1044494.8 970148.38,1044462.8 970192.81,1044429.8 970287.06,1044379 970325.31,1044296.4 970344.38,1043904.4 970333.44,1043847.6 970319.25,1043816.1 970319.13,1043790.7 970319.19,1043740.5 970293.19,1043689.9 970279.81,1043614 970298.13,1043487.8 970265.38,1043335.4 970313.94,1043183.3 970350.56,1043132.4 970356.25,1043082.4 970317.19,1043031.9 970311.31,1043000.3 970311.13,1042968.3 970355.13,1042943.1 970341.19,1042879.9 970321.81,1042791.6 970308,1042741.3 970294.56,1042653.3 970242.69,1042596.8 970224,1042577.5 970229.31,1042539.8 970223.44,1042476.7 970203,1042413.6 970197.19,1042362.8 970208.38,1042312.1 970207,1042148.1 970199.44,1042034.1 970204.75,1042008 970256.06,1042001.4 970274.38,1041944.2 970306.38,1041887.1 970317.31,1041842.9 970305.19,1041817.9 970285.69,1041799.1 970279.5,1041754.3 970323.5,1041735.1 970341.38,1041715.9 970347.69,1041665.8 970322.25,1041646.9 970309,1041583.6 970314.75,1041533.3 970276.19,1041470.7 970249.75,1041458.6 970219.75,1041420.9 970166.13,1041370.5 970159.19,1041269.1 970178.63,1041250.2 970184.38,1041173.9 970202.19,1041110.7 970201.88,1041078.8 970226.81,1041047 970232.69,1040946.1 970212.38,1040876.5 970217.31,1040787.9 970210.56,1040496.6 970259.13,1040401.3 970302.31,1040369.5 970295.63,1040344.4 970295.69,1040325.1 970307.5,1040230.3 970313.06,1040198.5 970325.94,1040135.4 970319.13,1040008.1 970368.13,1039989.3 970361.38,1039944.8 970373.88,1039843.3 970410.25,1039824.1 970410.56,1039780.1 970404.38,1039761.3 970397.19,1039748.4 970397.69,1039698.3 970371.81,1039616.3 970357.69,1039565.6 970356.31,1039464.3 970362.19,1039400.8 970380.88,1039337.9 970361,1039312.4 970361.06,1039160.8 970372.06,1039065.8 970378.13,1038964.9 970357.81,1038882.4 970368.81,1038813 970356.25,1038749.8 970360.94,1038680.4 970334.81,1038636.2 970353.25,1038610.3 970391.94,1038590.4 970455,1038564.8 970492.75,1038520.3 970511.19,1038482.2 970511.25,1038431.8 970504.38,1038412.8 970497.13,1038393.7 970503.44,1038343.4 970490.56,1038299.2 970483.38,1038280.2 970489.75,1038260.7 970528.19,1038247.5 970578.94,1038183.8 970609.19,1038056.4 970684.88,1037987.2 970658.19,1037968.2 970664.56,1037930.4 970645.56,1037911.5 970625.31,1037867.3 970638.25,1037848.3 970632,1037779.4 970574.25,1037741.2 970598.44,1037721.9 970617.31,1037702.9 970623.69,1037639.8 970609.75,1037576.5 970628.94,1037513.4 970614.63,1037436.9 970653,1037411.6 970658.63,1037380.1 970651.94,1037354.7 970658,1037303.4 970696.81,1037277.8 970721,1037252.6 970733.56,1037221.1 970726.94,1037195.7 970732.5,1037093.8 970788.5,1037062.1 970795.38,1037036.6 970807.44,1037005.1 970795.25,1036979.9 970794.31,1036941.4 970825.06,1036909.8 970832.44,1036846.9 970812,1036815.4 970792.81,1036697.5 970613.25,1036647.5 970568.19,1036452.4 970495.75,1036377.1 970444.25,1036364.4 970444.25,1036320.7 970412,1036183.8 970232.25,1036133.8 970180.69,1036089.7 970161,1036045.9 970129.19,1036021.1 970083.63,1035889.4 969999.94,1035833 969961.19,1035808.1 969929.69,1035771.4 969813.81,1035746.9 969762.69,1035671.8 969704.19,1035659.8 969648,1035641.1 969621.75,1035590.9 969595.75,1035571.9 969596,1035540.3 969601.88,1035515 969601.94,1035490.4 969556.38,1035471.6 969537.13,1035452.6 969537.38,1035389.3 969549.63,1035351.8 969504.56,1035352.4 969453.44,1035352.6 969433.81,1035321.3 969408.56,1035289.8 969408.94,1035099.3 969457.56,1035017.4 969437,1034992.4 969424,1034966.8 969443.19,1034953.6 969481.38,1034934.4 969499.75,1034915.5 969500.06,1034865.2 969486.63,1034840.2 969473.63,1034821.1 969460.88,1034783.1 969453.5,1034739.2 969433.25,1034695.9 969363.88,1034677.1 969343.63,1034677.8 969286.38,1034691.1 969243.25,1034691.3 969223.63,1034629.1 969146.5,1034460.1 968992.69,1034435.1 968979.69,1034409.6 968984.75,1034230.4 969167.44,1034173.1 969198.5,1034122.2 969204.63,1033914.2 969164.81,1033863.7 969144.44,1033838.7 969131.94,1033789.6 969003.63,1033733.4 968946.25,1033689.4 968932.63,1033645.4 968894.38,1033627.2 968849.5,1033627.5 968811.88,1033647.2 968766.81,1033647.4 968748.31,1033622.6 968716.25,1033622.9 968691.19,1033642.1 968671.25,1033661 968670.94,1033679.8 968691.19,1033692.1 968710.31,1033704.9 968710.19,1033742.7 968717.13,1033761.9 968698.25,1033768.8 968647.81,1033693.9 968576.25,1033700.4 968551.88,1033706.9 968538.63,1033713.5 968519.75,1033707.4 968493.38,1033688.9 968468.56,1033663.6 968467.69,1033587.1 968512.06,1033555.6 968517.94,1033529.9 968543.06,1033541.9 968587.75,1033528.9 968613.88,1033496.8 968656.88,1033496.5 968675.94,1033502.7 968688.69,1033489.8 968714.38,1033470.7 968714.19,1033408.8 968618.44,1033290.1 968496.06,1033247.3 968380.5,1033216.1 968342.19,1033096.5 968283.63,1033058.9 968251.06,1033014.6 968231.38,1032964.3 968179.81,1032913.8 968146.38,1032888.6 968114.31,1032825.6 968093.94,1032749.6 968084.63,1032724.3 968078.19,1032673.9 968021.13,1032598.8 967867.31,1032542.3 967778.38,1032460.3 967752.25,1032384.4 967739.94,1032327.5 967751.81,1032301.9 967771.56,1032238.6 967783.75,1032207.1 967784.13,1032188.1 967776.44,1032169.6 967700.44,1032182.4 967675.31,1032188.6 967656.5),(1026124.3 966144.25,1026143.3 966144.44,1026162.1 966163.69,1026149.4 966176.25,1026124 966170.38,1026111.4 966156.88,1026124.3 966144.25),(1023891.9 967359.81,1023910.8 967360,1023898.1 967385.63,1023866.1 967410.63,1023802.9 967416.75,1023771.4 967410.13,1023783.9 967390.5,1023866.6 967365.88,1023891.9 967359.81),(1022975.6 967177.5,1023045.1 967190.56,1023057.6 967210.13,1022994.1 967261.5,1022930.5 967318.38,1022835.6 967369.06,1022765.6 967419.69,1022759.3 967400.88,1022772.3 967361.69,1022791.6 967298.19,1022810.8 967260.75,1022836.2 967235.06,1022880.5 967209.63,1022931.3 967191.38,1022975.6 967177.5),(1049960.6 970046.38,1049979.5 970053.13,1050023 970111.44,1050066.8 970143.19,1050109.8 970245.25,1050090.5 970271.06,1050045.9 970289.56,1050020.8 970288.63,1049989.1 970281.94,1049944.8 970294.38,1049925.9 970288.13,1049913.5 970262.06,1049907.9 970206.13,1049927.5 970148.63,1049921.5 970134.81,1049928.5 970077.81,1049960.6 970046.38),(1023139.9 967210.69,1023158.9 967210.81,1023152.3 967242.75,1023127.1 967274.44,1023088.6 967338.75,1023075.7 967414.06,1023018.4 967439.56,1022980.5 967446.19,1022917.1 967458.88,1022891.9 967470.06,1022860.1 967496,1022790.4 967508.44,1022765.1 967508,1022759.3 967463.56,1022809.9 967420.31,1022854.3 967400.38,1022917.7 967369.56,1023019.4 967286.5,1023044.9 967254.81,1023095.5 967223.06,1023139.9 967210.69),(1031826.9 967897.06,1031845.9 967909.81,1031864.5 967979.75,1031857.6 968062.81,1031882.6 968183.69,1031888.3 968259.69,1031869.4 968273.56,1031831.4 968260.56,1031787.4 968234.38,1031736.8 968227,1031654.7 968195.38,1031623.3 968138,1031604.6 968081.13,1031604.8 968055,1031649.3 968010.94,1031700.2 967979.25,1031725.4 967959.56,1031801.5 967909.75,1031826.9 967897.06)))" );


	string s= g1->toString();
	cout << "geom1 = "<<s << endl;

	try {

	if (g1->isValid())
		cout <<" is valid" << endl;
	else
		cout << " in NOT valid "<< endl;
	}
	catch(...)
	{
		cout<<"error thrown"<<endl;
	}
}

From me at yury.ca  Fri Sep 26 05:15:01 2003
From: me at yury.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] isvalid() still segfaulting
References: <3F71CEEB.9050908@refractions.net>
Message-ID: <01d901c3840e$e9fbd5b0$96d16c18@yury>

Fixed.


----- Original Message ----- 
From: "David Blasby" <dblasby@refractions.net>
To: <geos-devel@geos.refractions.net>
Sent: Wednesday, September 24, 2003 10:05 AM
Subject: [geos-devel] isvalid() still segfaulting


> The other geometry I reported is now working. Unfortunately, I've found
> another.
>
> Find attached a program to cause isvalid() to segfault.  Also included
> is the valgrind output.
>
> dave
>


--------------------------------------------------------------------------------


==10661== Memcheck, a.k.a. Valgrind, a memory error detector for x86-linux.
==10661== Copyright (C) 2002, and GNU GPL'd, by Julian Seward.
==10661== Using valgrind-1.9.6, a program instrumentation system for x86-linux.
==10661== Copyright (C) 2000-2002, and GNU GPL'd, by Julian Seward.
==10661== Estimated CPU clock rate is 1676 MHz
==10661== For more details, rerun with: -v
==10661==
geom1 = MULTIPOLYGON (((1032188.5999999999767169 967656.5000000000000000,
1032144.5999999999767169 967630.2500000000000000, 1032125.6999999999534339
967612.0000000000000000, 1032113.3000000000465661 967585.9399999999441206,
1032113.4000000000232831 967540.7500000000000000, 1032139.1999999999534339
967458.4399999999441206, 1032145.8000000000465661 967394.9399999999441206,
1032133.3000000000465661 967350.3100000000558794, 1032108.1999999999534339
967325.2500000000000000, 1032076.6999999999534339 967311.5600000000558794,
1032051.4000000000232831 967299.0600000000558794, 1032032.5999999999767169
967298.9399999999441206, 1032000.8000000000465661 967279.6899999999441206,
1031975.8000000000465661 967240.6300000000046566, 1031957.3000000000465661
967170.6300000000046566, 1031969.8000000000465661 967152.1300000000046566,
1031963.8000000000465661 967108.1899999999441206, 1031945.0999999999767169
967057.3800000000046566, 1031875.6999999999534339 967018.1300000000046566,
1031856.6999999999534339 967017.8800000000046566, 1031806.0999999999767169
967018.0600000000558794, 1031787.0999999999767169 967010.8800000000046566,
1031711.4000000000232831 966999.0000000000000000, 1031660.6999999999534339
966999.1899999999441206, 1031527.8000000000465661 967009.8100000000558794,
1031508.9000000000232831 967004.6300000000046566, 1031427.0999999999767169
966939.8800000000046566, 1031363.8000000000465661 966920.4399999999441206,
1031325.8000000000465661 966939.1899999999441206, 1031300.4000000000232831
966965.8100000000558794, 1031268.5999999999767169 966958.6300000000046566,
1031161.5999999999767169 966913.0000000000000000, 1031098.0999999999767169
966932.2500000000000000, 1031003.0999999999767169 966938.3100000000558794,
1030939.9000000000232831 966931.9399999999441206, 1030921.0999999999767169
966925.2500000000000000, 1030877.0999999999767169 966887.0000000000000000,
1030832.8000000000465661 966867.8100000000558794, 1030775.9000000000232831
966861.6899999999441206, 1030668.5999999999767169 966829.0600000000558794,
1030599.1999999999534339 966777.9399999999441206, 1030529.6999999999534339
966771.3100000000558794, 1030390.1999999999534339 966795.8100000000558794,
1030270.4000000000232831 966782.8100000000558794, 1030251.4000000000232831
966776.6300000000046566, 1030226.3000000000465661 966776.6899999999441206,
1030213.4000000000232831 966801.3100000000558794, 1030194.1999999999534339
966814.6899999999441206, 1030182.3000000000465661 966661.6899999999441206,
1030150.9000000000232831 966661.9399999999441206, 1030131.6999999999534339
966675.3100000000558794, 1030106.0999999999767169 966712.5600000000558794,
1030093.5000000000000000 966738.6899999999441206, 1030023.5999999999767169
966782.2500000000000000, 1029960.4000000000232831 966788.5000000000000000,
1029934.9000000000232831 966800.5600000000558794, 1029922.4000000000232831
966788.0600000000558794, 1029947.9000000000232831 966736.8100000000558794,
1029941.9000000000232831 966718.0000000000000000, 1029929.0999999999767169
966705.0000000000000000, 1029910.0999999999767169 966718.3800000000046566,
1029827.4000000000232831 966819.2500000000000000, 1029795.5999999999767169
966832.6300000000046566, 1029790.3000000000465661 966834.8100000000558794,
1029764.0000000000000000 966844.4399999999441206, 1029694.3000000000465661
966877.0600000000558794, 1029668.5999999999767169 966876.5600000000558794,
1029637.1999999999534339 966876.9399999999441206, 1029561.8000000000465661
966818.9399999999441206, 1029529.5999999999767169 966870.0000000000000000,
1029504.5999999999767169 966851.5000000000000000, 1029485.5000000000000000
966843.7500000000000000, 1029460.1999999999534339 966857.3800000000046566,
1029409.9000000000232831 966805.8100000000558794, 1029391.0000000000000000
966798.6300000000046566, 1029372.0000000000000000 966817.9399999999441206,
1029365.4000000000232831 966849.8800000000046566, 1029340.0999999999767169
966863.4399999999441206, 1029277.0000000000000000 966856.1300000000046566,
1029245.1999999999534339 966869.5000000000000000, 1029232.5999999999767169
966868.0600000000558794, 1029220.0000000000000000 966849.5000000000000000,
1029194.5999999999767169 966843.0600000000558794, 1029156.5999999999767169
966862.2500000000000000, 1029131.3000000000465661 966855.3100000000558794,
1029080.8000000000465661 966830.3800000000046566, 1029061.9000000000232831
966830.6300000000046566, 1029036.5999999999767169 966829.7500000000000000,
1028960.5000000000000000 966868.0600000000558794, 1028922.5999999999767169
966867.1899999999441206, 1028884.5999999999767169 966887.3100000000558794,
1028859.3000000000465661 966879.3800000000046566, 1028789.9000000000232831
966842.2500000000000000, 1028726.8000000000465661 966829.3100000000558794,
1028638.0999999999767169 966847.6300000000046566, 1028619.0999999999767169
966860.5000000000000000, 1028581.0999999999767169 966867.1300000000046566,
1028555.9000000000232831 966867.1899999999441206, 1028524.3000000000465661
966840.4399999999441206, 1028499.0999999999767169 966840.0000000000000000,
1028473.6999999999534339 966847.1300000000046566, 1028353.0000000000000000
966935.5000000000000000, 1028315.0999999999767169 966941.6300000000046566,
1028308.1999999999534339 966938.3800000000046566, 1028302.4000000000232831
966935.1300000000046566, 1028289.6999999999534339 966916.6300000000046566,
1028264.5999999999767169 966897.6300000000046566, 1028252.1999999999534339
966872.6300000000046566, 1028233.4000000000232831 966832.7500000000000000,
1028195.5999999999767169 966814.3100000000558794, 1028043.9000000000232831
966794.6300000000046566, 1027967.9000000000232831 966768.2500000000000000,
1027911.3000000000465661 966737.0600000000558794, 1027848.1999999999534339
966673.5600000000558794, 1027797.9000000000232831 966647.0600000000558794,
1027747.5000000000000000 966640.6899999999441206, 1027671.4000000000232831
966646.8800000000046566, 1027620.9000000000232831 966633.5600000000558794,
1027557.8000000000465661 966595.5600000000558794, 1027532.6999999999534339
966563.5000000000000000, 1027494.8000000000465661 966505.4399999999441206,
1027419.0000000000000000 966493.1300000000046566, 1027356.1999999999534339
966460.6300000000046566, 1027324.4000000000232831 966454.0000000000000000,
1027305.5000000000000000 966435.1899999999441206, 1027305.6999999999534339
966409.0600000000558794, 1027286.6999999999534339 966384.3100000000558794,
1027229.9000000000232831 966351.6300000000046566, 1026989.9000000000232831
966344.7500000000000000, 1026951.8000000000465661 966338.3800000000046566,
1026831.4000000000232831 966357.0000000000000000, 1026749.1999999999534339
966382.5600000000558794, 1026717.5999999999767169 966381.9399999999441206,
1026660.8000000000465661 966376.3100000000558794, 1026572.3000000000465661
966330.8800000000046566, 1026496.3000000000465661 966349.6899999999441206,
1026433.0999999999767169 966342.8100000000558794, 1026344.5000000000000000
966361.1300000000046566, 1026319.3000000000465661 966349.1300000000046566,
1026288.0000000000000000 966279.2500000000000000, 1026275.4000000000232831
966260.7500000000000000, 1026269.0999999999767169 966228.3800000000046566,
1026294.9000000000232831 966189.6899999999441206, 1026288.6999999999534339
966164.8800000000046566, 1026295.0999999999767169 966152.0600000000558794,
1026276.1999999999534339 966119.7500000000000000, 1026244.4000000000232831
966113.0600000000558794, 1026219.3000000000465661 966087.0600000000558794,
1026213.3000000000465661 966056.1899999999441206, 1026206.9000000000232831
966030.3800000000046566, 1026181.8000000000465661 966023.9399999999441206,
1026112.0000000000000000 966074.5000000000000000, 1026086.5999999999767169
966081.1300000000046566, 1026023.5999999999767169 966061.7500000000000000,
1026004.3000000000465661 966106.6899999999441206, 1025985.1999999999534339
966118.5600000000558794, 1025972.8000000000465661 966111.5600000000558794,
1025966.5999999999767169 966054.1300000000046566, 1025947.6999999999534339
966029.3100000000558794, 1025884.5000000000000000 966009.5000000000000000,
1025871.8000000000465661 966010.0000000000000000, 1025827.8000000000465661
965978.2500000000000000, 1025796.0999999999767169 965965.0000000000000000,
1025770.8000000000465661 965971.6300000000046566, 1025663.0999999999767169
966034.8800000000046566, 1025625.0000000000000000 966065.6300000000046566,
1025593.3000000000465661 966078.5000000000000000, 1025574.3000000000465661
966072.7500000000000000, 1025549.1999999999534339 966040.7500000000000000,
1025486.0999999999767169 966027.8800000000046566, 1025410.0000000000000000
966033.6300000000046566, 1025340.5000000000000000 966026.5000000000000000,
1025296.1999999999534339 966059.0000000000000000, 1025283.0999999999767169
966109.7500000000000000, 1025295.5999999999767169 966173.3800000000046566,
1025257.3000000000465661 966192.6300000000046566, 1025143.4000000000232831
966230.0600000000558794, 1025099.0999999999767169 966216.8800000000046566,
1025061.3000000000465661 966198.4399999999441206, 1024953.8000000000465661
966223.0600000000558794, 1024878.0000000000000000 966185.1300000000046566,
1024846.4000000000232831 966191.5000000000000000, 1024852.3000000000465661
966267.5000000000000000, 1024864.8000000000465661 966300.0600000000558794,
1024864.8000000000465661 966306.0600000000558794, 1024858.3000000000465661
966337.5000000000000000, 1024832.8000000000465661 966369.1300000000046566,
1024744.0999999999767169 966400.5000000000000000, 1024718.6999999999534339
966426.1899999999441206, 1024616.5999999999767169 966604.0600000000558794,
1024559.1999999999534339 966686.8100000000558794, 1024529.4000000000232831
966707.1300000000046566, 1024470.5999999999767169 966724.1300000000046566,
1024426.1999999999534339 966737.5600000000558794, 1024407.0999999999767169
966730.8800000000046566, 1024356.8000000000465661 966686.3800000000046566,
1024312.5999999999767169 966635.6300000000046566, 1024287.8000000000465661
966622.5600000000558794, 1024237.0000000000000000 966628.2500000000000000,
1024218.0000000000000000 966623.0600000000558794, 1024116.9000000000232831
966620.8100000000558794, 1024040.9000000000232831 966628.5600000000558794,
1023983.9000000000232831 966647.0600000000558794, 1023901.3000000000465661
966716.2500000000000000, 1023856.5999999999767169 966767.3100000000558794,
1023818.9000000000232831 966780.0000000000000000, 1023799.8000000000465661
966779.8100000000558794, 1023781.0000000000000000 966766.5000000000000000,
1023724.0999999999767169 966754.3800000000046566, 1023635.4000000000232831
966760.1300000000046566, 1023534.0999999999767169 966798.5600000000558794,
1023432.8000000000465661 966823.4399999999441206, 1023375.6999999999534339
966849.0000000000000000, 1023020.1999999999534339 967114.3800000000046566,
1023007.4000000000232831 967134.5000000000000000, 1022988.3000000000465661
967140.3100000000558794, 1022963.0000000000000000 967140.4399999999441206,
1022937.9000000000232831 967132.9399999999441206, 1022868.0000000000000000
967158.0000000000000000, 1022817.3000000000465661 967203.3100000000558794,
1022766.4000000000232831 967254.0600000000558794, 1022715.6999999999534339
967304.4399999999441206, 1022671.1999999999534339 967329.8800000000046566,
1022658.5999999999767169 967329.9399999999441206, 1022645.8000000000465661
967342.5000000000000000, 1022633.1999999999534339 967355.0600000000558794,
1022607.8000000000465661 967380.7500000000000000, 1022588.5999999999767169
967399.1300000000046566, 1022563.1999999999534339 967412.2500000000000000,
1022531.4000000000232831 967437.6899999999441206, 1022499.8000000000465661
967456.5600000000558794, 1022455.4000000000232831 967482.5600000000558794,
1022430.0999999999767169 967507.1899999999441206, 1022404.6999999999534339
967539.3800000000046566, 1022373.0000000000000000 967538.6899999999441206,
1022334.9000000000232831 967551.8800000000046566, 1022315.8000000000465661
967577.7500000000000000, 1022296.5000000000000000 967627.7500000000000000,
1022296.6999999999534339 967641.2500000000000000, 1022289.6999999999534339
967704.7500000000000000, 1022283.3000000000465661 967743.1899999999441206,
1022270.4000000000232831 967773.8100000000558794, 1022226.0999999999767169
967825.3800000000046566, 1022194.3000000000465661 967863.8800000000046566,
1022168.9000000000232831 967882.0000000000000000, 1022130.6999999999534339
967908.1899999999441206, 1022111.6999999999534339 967952.1899999999441206,
1022111.4000000000232831 967965.7500000000000000, 1022098.8000000000465661
967983.8100000000558794, 1022120.6999999999534339 968009.4399999999441206,
1022132.0999999999767169 968049.1300000000046566, 1022174.4000000000232831
968041.3100000000558794, 1022193.5000000000000000 968022.4399999999441206,
1022269.4000000000232831 967996.6300000000046566, 1022358.0000000000000000
967991.8800000000046566, 1022370.8000000000465661 967972.3100000000558794,
1022377.5000000000000000 967902.7500000000000000, 1022402.9000000000232831
967858.0600000000558794, 1022466.5999999999767169 967806.6300000000046566,
1022504.8000000000465661 967736.8100000000558794, 1022625.5999999999767169
967609.7500000000000000, 1022689.0999999999767169 967558.8800000000046566,
1022765.0000000000000000 967553.1300000000046566, 1022860.0000000000000000
967541.1300000000046566, 1022923.3000000000465661 967502.8100000000558794,
1022986.5999999999767169 967477.5000000000000000, 1023062.6999999999534339
967496.3800000000046566, 1023100.5999999999767169 967490.7500000000000000,
1023138.5999999999767169 967458.5600000000558794, 1023138.9000000000232831
967414.3800000000046566, 1023132.5999999999767169 967389.5600000000558794,
1023139.1999999999534339 967369.6899999999441206, 1023132.8000000000465661
967357.4399999999441206, 1023126.5000000000000000 967351.1899999999441206,
1023126.4000000000232831 967337.6300000000046566, 1023132.9000000000232831
967324.8100000000558794, 1023209.3000000000465661 967254.8800000000046566,
1023228.3000000000465661 967229.5000000000000000, 1023253.6999999999534339
967211.3800000000046566, 1023285.1999999999534339 967224.5600000000558794,
1023348.5999999999767169 967231.3800000000046566, 1023373.8000000000465661
967231.3100000000558794, 1023392.8000000000465661 967250.0600000000558794,
1023405.4000000000232831 967249.0600000000558794, 1023493.4000000000232831
967307.5600000000558794, 1023582.0000000000000000 967352.3800000000046566,
1023626.0999999999767169 967384.1899999999441206, 1023657.4000000000232831
967436.0000000000000000, 1023638.3000000000465661 967453.8800000000046566,
1023612.9000000000232831 967453.9399999999441206, 1023581.5999999999767169
967447.2500000000000000, 1023549.8000000000465661 967454.6300000000046566,
1023518.3000000000465661 967453.4399999999441206, 1023511.9000000000232831
967447.1899999999441206, 1023492.9000000000232831 967454.0600000000558794,
1023480.3000000000465661 967460.5600000000558794, 1023467.5000000000000000
967459.6300000000046566, 1023454.8000000000465661 967473.1899999999441206,
1023461.0000000000000000 967479.4399999999441206, 1023498.9000000000232831
967536.5000000000000000, 1023505.0000000000000000 967555.3100000000558794,
1023511.1999999999534339 967556.1300000000046566, 1023695.0999999999767169
967499.6300000000046566, 1023713.9000000000232831 967493.7500000000000000,
1023758.3000000000465661 967498.9399999999441206, 1023783.5999999999767169
967493.3800000000046566, 1023815.3000000000465661 967461.3800000000046566,
1023872.1999999999534339 967454.4399999999441206, 1023942.0999999999767169
967410.8100000000558794, 1024011.6999999999534339 967385.3100000000558794,
1024018.3000000000465661 967366.4399999999441206, 1024018.4000000000232831
967347.3800000000046566, 1024031.1999999999534339 967327.8100000000558794,
1024037.5000000000000000 967315.5000000000000000, 1024062.9000000000232831
967296.8100000000558794, 1024095.0000000000000000 967239.8100000000558794,
1024120.0999999999767169 967220.6899999999441206, 1024139.0999999999767169
967219.8800000000046566, 1024151.8000000000465661 967221.3100000000558794,
1024196.0999999999767169 967226.5000000000000000, 1024215.0999999999767169
967227.1899999999441206, 1024253.0999999999767169 967221.5600000000558794,
1024284.6999999999534339 967214.1899999999441206, 1024316.4000000000232831
967195.2500000000000000, 1024329.0999999999767169 967183.1899999999441206,
1024348.3000000000465661 967138.6899999999441206, 1024373.5000000000000000
967125.6300000000046566, 1024417.9000000000232831 967120.2500000000000000,
1024456.0000000000000000 967126.1899999999441206, 1024493.8000000000465661
967138.5600000000558794, 1024531.5999999999767169 967151.5000000000000000,
1024582.0999999999767169 967164.9399999999441206, 1024613.8000000000465661
967177.6300000000046566, 1024626.3000000000465661 967190.1899999999441206,
1024632.5999999999767169 967208.9399999999441206, 1024613.4000000000232831
967222.8100000000558794, 1024588.0999999999767169 967228.3800000000046566,
1024588.0999999999767169 967253.4399999999441206, 1024613.1999999999534339
967280.0000000000000000, 1024632.1999999999534339 967279.6899999999441206,
1024841.3000000000465661 967223.1300000000046566, 1024892.0999999999767169
967190.9399999999441206, 1024911.0999999999767169 967184.5600000000558794,
1024955.3000000000465661 967203.7500000000000000, 1025031.0999999999767169
967191.5600000000558794, 1025037.5000000000000000 967192.7500000000000000,
1025170.3000000000465661 967179.5600000000558794, 1025240.0000000000000000
967186.1899999999441206, 1025271.4000000000232831 967199.3800000000046566,
1025296.8000000000465661 967204.8100000000558794, 1025372.6999999999534339
967193.5600000000558794, 1025404.4000000000232831 967174.1300000000046566,
1025467.8000000000465661 967109.7500000000000000, 1025487.0999999999767169
967098.3800000000046566, 1025499.9000000000232831 967101.3800000000046566,
1025506.0000000000000000 967097.6300000000046566, 1025512.3000000000465661
967091.8100000000558794, 1025537.5999999999767169 967084.6899999999441206,
1025582.1999999999534339 967060.2500000000000000, 1025645.1999999999534339
967079.6300000000046566, 1025746.1999999999534339 967136.5600000000558794,
1025847.3000000000465661 967150.3100000000558794, 1025910.4000000000232831
967169.2500000000000000, 1025960.9000000000232831 967182.0600000000558794,
1026074.8000000000465661 967175.7500000000000000, 1026093.9000000000232831
967169.4399999999441206, 1026125.3000000000465661 967183.6899999999441206,
1026144.0999999999767169 967195.8800000000046566, 1026201.0999999999767169
967252.6899999999441206, 1026226.3000000000465661 967259.6899999999441206,
1026251.5999999999767169 967246.5000000000000000, 1026333.9000000000232831
967222.4399999999441206, 1026359.1999999999534339 967227.9399999999441206,
1026390.5999999999767169 967279.2500000000000000, 1026598.4000000000232831
967432.9399999999441206, 1026661.5999999999767169 967483.9399999999441206,
1026737.0999999999767169 967528.9399999999441206, 1026787.6999999999534339
967541.3100000000558794, 1026800.4000000000232831 967535.2500000000000000,
1026838.0999999999767169 967554.7500000000000000, 1026875.9000000000232831
967599.2500000000000000, 1026907.4000000000232831 967605.4399999999441206,
1026932.9000000000232831 967605.8800000000046566, 1027123.0999999999767169
967524.0600000000558794, 1027205.4000000000232831 967499.5000000000000000,
1027319.5999999999767169 967461.0000000000000000, 1027345.0000000000000000
967435.8800000000046566, 1027344.9000000000232831 967397.2500000000000000,
1027332.5999999999767169 967352.6300000000046566, 1027326.4000000000232831
967327.7500000000000000, 1027332.9000000000232831 967288.3800000000046566,
1027345.5000000000000000 967288.8800000000046566, 1027364.5999999999767169
967295.0600000000558794, 1027414.8000000000465661 967378.2500000000000000,
1027439.9000000000232831 967391.1899999999441206, 1027477.9000000000232831
967366.0000000000000000, 1027503.3000000000465661 967385.5000000000000000,
1027515.8000000000465661 967410.5600000000558794, 1027490.3000000000465661
967435.6899999999441206, 1027546.6999999999534339 967569.7500000000000000,
1027565.4000000000232831 967582.5000000000000000, 1027609.9000000000232831
967582.6300000000046566, 1027666.4000000000232831 967640.4399999999441206,
1027691.5999999999767169 967647.3800000000046566, 1027723.4000000000232831
967633.9399999999441206, 1027742.3000000000465661 967647.7500000000000000,
1027761.3000000000465661 967646.9399999999441206, 1027780.0000000000000000
967660.1899999999441206, 1027805.4000000000232831 967665.6300000000046566,
1027881.5000000000000000 967654.3800000000046566, 1028014.0999999999767169
967673.8100000000558794, 1028045.8000000000465661 967686.0600000000558794,
1028064.3000000000465661 967723.8100000000558794, 1028038.8000000000465661
967794.1899999999441206, 1028051.0999999999767169 967814.2500000000000000,
1028139.9000000000232831 967832.5000000000000000, 1028165.0999999999767169
967826.8800000000046566, 1028216.4000000000232831 967737.9399999999441206,
1028235.3000000000465661 967718.1300000000046566, 1028285.9000000000232831
967693.3800000000046566, 1028330.1999999999534339 967686.9399999999441206,
1028349.3000000000465661 967694.1899999999441206, 1028399.6999999999534339
967713.1300000000046566, 1028507.3000000000465661 967726.0600000000558794,
1028620.5999999999767169 967790.0000000000000000, 1028677.9000000000232831
967758.0000000000000000, 1028759.9000000000232831 967771.5600000000558794,
1028791.4000000000232831 967791.2500000000000000, 1028829.4000000000232831
967798.1899999999441206, 1028924.4000000000232831 967771.5600000000558794,
1028943.4000000000232831 967778.2500000000000000, 1028962.1999999999534339
967810.6300000000046566, 1029075.6999999999534339 967868.0000000000000000,
1029069.3000000000465661 967893.3100000000558794, 1029037.3000000000465661
967913.3100000000558794, 1029018.5999999999767169 967906.0600000000558794,
1028917.5000000000000000 967848.6300000000046566, 1028841.9000000000232831
967822.2500000000000000, 1028803.8000000000465661 967861.0000000000000000,
1028790.5999999999767169 967962.3800000000046566, 1028790.5000000000000000
967981.9399999999441206, 1028802.8000000000465661 968045.6899999999441206,
1028846.9000000000232831 968090.4399999999441206, 1028928.9000000000232831
968097.0000000000000000, 1028954.4000000000232831 968096.8800000000046566,
1029093.5000000000000000 968078.9399999999441206, 1029169.5999999999767169
968066.1899999999441206, 1029226.4000000000232831 968072.3100000000558794,
1029384.4000000000232831 968086.1899999999441206, 1029434.9000000000232831
968105.0600000000558794, 1029529.8000000000465661 968137.6300000000046566,
1029586.5999999999767169 968117.6899999999441206, 1029650.3000000000465661
968061.3100000000558794, 1029802.8000000000465661 967953.5000000000000000,
1029847.0999999999767169 967922.0000000000000000, 1029954.9000000000232831
967883.3100000000558794, 1030055.9000000000232831 967896.5600000000558794,
1030137.8000000000465661 967941.2500000000000000, 1030200.9000000000232831
967999.2500000000000000, 1030213.5000000000000000 968024.8100000000558794,
1030200.5999999999767169 968056.4399999999441206, 1030200.4000000000232831
968088.5600000000558794, 1030231.9000000000232831 968113.8800000000046566,
1030307.9000000000232831 968120.1899999999441206, 1030421.5999999999767169
968140.4399999999441206, 1030453.1999999999534339 968140.5600000000558794,
1030485.0000000000000000 968128.1899999999441206, 1030586.4000000000232831
968077.2500000000000000, 1030649.5000000000000000 968083.5600000000558794,
1030674.9000000000232831 968077.5000000000000000, 1030751.0999999999767169
968045.6300000000046566, 1030852.0999999999767169 968033.3100000000558794,
1030934.4000000000232831 968046.3800000000046566, 1030959.6999999999534339
968046.8100000000558794, 1030985.0999999999767169 968015.1300000000046566,
1031004.3000000000465661 967957.1300000000046566, 1031042.5999999999767169
967887.8100000000558794, 1031080.5999999999767169 967856.0600000000558794,
1031112.3000000000465661 967881.2500000000000000, 1031143.4000000000232831
967952.2500000000000000, 1031231.6999999999534339 968009.1899999999441206,
1031244.3000000000465661 968034.7500000000000000, 1031250.5000000000000000
968067.0600000000558794, 1031288.0999999999767169 968143.2500000000000000,
1031287.9000000000232831 968181.8800000000046566, 1031275.0000000000000000
968219.5000000000000000, 1031274.9000000000232831 968251.6300000000046566,
1031293.8000000000465661 968270.4399999999441206, 1031287.4000000000232831
968289.2500000000000000, 1031280.9000000000232831 968321.1300000000046566,
1031299.5999999999767169 968359.9399999999441206, 1031305.8000000000465661
968385.8100000000558794, 1031293.0000000000000000 968416.9399999999441206,
1031293.0000000000000000 968436.0000000000000000, 1031330.8000000000465661
968455.9399999999441206, 1031368.9000000000232831 968443.3100000000558794,
1031406.9000000000232831 968418.1300000000046566, 1031432.3000000000465661
968411.5000000000000000, 1031457.4000000000232831 968417.9399999999441206,
1031533.1999999999534339 968456.3800000000046566, 1031558.5999999999767169
968418.1899999999441206, 1031577.8000000000465661 968411.8100000000558794,
1031621.8000000000465661 968431.0600000000558794, 1031672.3000000000465661
968463.0000000000000000, 1031672.1999999999534339 968488.1300000000046566,
1031672.1999999999534339 968507.6899999999441206, 1031691.1999999999534339
968520.8800000000046566, 1031710.0999999999767169 968514.5600000000558794,
1031792.4000000000232831 968508.5600000000558794, 1031817.5999999999767169
968508.5000000000000000, 1031899.6999999999534339 968527.6300000000046566,
1031962.9000000000232831 968560.0000000000000000, 1032019.5000000000000000
968585.1899999999441206, 1032070.0000000000000000 968630.1899999999441206,
1032082.5999999999767169 968649.2500000000000000, 1032113.9000000000232831
968681.0600000000558794, 1032182.9000000000232831 968821.0000000000000000,
1032252.0999999999767169 968891.3100000000558794, 1032296.4000000000232831
968911.0000000000000000, 1032315.3000000000465661 968905.2500000000000000,
1032397.4000000000232831 968925.3100000000558794, 1032441.5000000000000000
968968.5600000000558794, 1032473.0999999999767169 968987.8100000000558794,
1032529.8000000000465661 969001.5000000000000000, 1032618.0999999999767169
969033.8100000000558794, 1032662.4000000000232831 969078.6300000000046566,
1032674.5999999999767169 969129.2500000000000000, 1032718.9000000000232831
969147.9399999999441206, 1032762.9000000000232831 969193.2500000000000000,
1032819.6999999999534339 969242.0000000000000000, 1032857.3000000000465661
969249.4399999999441206, 1032901.9000000000232831 969229.9399999999441206,
1032920.8000000000465661 969243.1899999999441206, 1032932.5000000000000000
969306.4399999999441206, 1033019.5000000000000000 969416.0600000000558794,
1033075.9000000000232831 969448.8100000000558794, 1033158.0999999999767169
969449.3100000000558794, 1033208.4000000000232831 969461.7500000000000000,
1033264.5999999999767169 969520.5000000000000000, 1033308.5000000000000000
969546.2500000000000000, 1033465.0000000000000000 969674.5600000000558794,
1033508.5000000000000000 969738.4399999999441206, 1033552.3000000000465661
969784.2500000000000000, 1033652.8000000000465661 969836.6300000000046566,
1033708.6999999999534339 969893.9399999999441206, 1033740.4000000000232831
969907.6899999999441206, 1033835.0000000000000000 969927.7500000000000000,
1033872.4000000000232831 969958.7500000000000000, 1033903.1999999999534339
970035.1899999999441206, 1034022.0000000000000000 970138.5000000000000000,
1034146.9000000000232831 970268.1300000000046566, 1034190.9000000000232831
970287.8800000000046566, 1034248.0999999999767169 970274.8800000000046566,
1034273.0999999999767169 970287.8100000000558794, 1034328.6999999999534339
970390.8100000000558794, 1034366.4000000000232831 970416.3100000000558794,
1034410.5999999999767169 970423.4399999999441206, 1034441.9000000000232831
970442.7500000000000000, 1034516.5999999999767169 970544.8800000000046566,
1034541.3000000000465661 970583.4399999999441206, 1034572.3000000000465661
970634.8100000000558794, 1034596.4000000000232831 970724.1300000000046566,
1034640.4000000000232831 970743.2500000000000000, 1034710.1999999999534339
970737.8100000000558794, 1034747.9000000000232831 970750.7500000000000000,
1034785.3000000000465661 970795.3800000000046566, 1034860.9000000000232831
970821.6899999999441206, 1034873.3000000000465661 970847.7500000000000000,
1034898.0999999999767169 970879.8100000000558794, 1034960.9000000000232831
970918.8100000000558794, 1034973.0999999999767169 970943.8100000000558794,
1034972.4000000000232831 970995.0600000000558794, 1034952.4000000000232831
971072.1899999999441206, 1034957.9000000000232831 971148.1899999999441206,
1034982.8000000000465661 971173.1899999999441206, 1035008.1999999999534339
971180.1300000000046566, 1035040.0000000000000000 971174.2500000000000000,
1035229.0999999999767169 971208.3800000000046566, 1035486.0999999999767169
971401.1300000000046566, 1035510.5000000000000000 971458.2500000000000000,
1035534.5999999999767169 971561.0600000000558794, 1035572.3000000000465661
971586.5600000000558794, 1035635.3000000000465661 971594.3800000000046566,
1035748.9000000000232831 971614.6899999999441206, 1035837.5999999999767169
971602.8800000000046566, 1035862.8000000000465661 971608.8100000000558794,
1035894.3000000000465661 971635.5600000000558794, 1035956.5999999999767169
971706.1899999999441206, 1036075.9000000000232831 971757.7500000000000000,
1036214.8000000000465661 971785.0000000000000000, 1036233.9000000000232831
971785.1899999999441206, 1036284.4000000000232831 971786.5600000000558794,
1036347.5999999999767169 971792.8800000000046566, 1036398.5999999999767169
971768.1300000000046566, 1036455.3000000000465661 971762.1899999999441206,
1036474.5000000000000000 971755.8800000000046566, 1036576.1999999999534339
971712.4399999999441206, 1036595.0999999999767169 971712.6300000000046566,
1036607.0999999999767169 971763.3100000000558794, 1036612.5999999999767169
971834.3100000000558794, 1036613.0999999999767169 971899.0000000000000000,
1036694.4000000000232831 971952.6899999999441206, 1036731.3000000000465661
972020.8800000000046566, 1036756.4000000000232831 972033.8800000000046566,
1036826.0000000000000000 972011.3100000000558794, 1036976.8000000000465661
972092.7500000000000000, 1036995.4000000000232831 972130.0600000000558794,
1037001.6999999999534339 972137.3100000000558794, 1037021.5000000000000000
972150.5000000000000000, 1037045.9000000000232831 972156.5000000000000000,
1037108.3000000000465661 972209.0600000000558794, 1037170.5000000000000000
972292.1899999999441206, 1037195.4000000000232831 972336.2500000000000000,
1037195.3000000000465661 972362.3100000000558794, 1037220.0999999999767169
972393.8800000000046566, 1037225.6999999999534339 972445.8100000000558794,
1037275.5999999999767169 972509.3800000000046566, 1037370.1999999999534339
972548.0600000000558794, 1037389.4000000000232831 972541.6899999999441206,
1037440.8000000000465661 972466.3100000000558794, 1037530.3000000000465661
972402.8100000000558794, 1037613.5999999999767169 972365.6300000000046566,
1037723.8000000000465661 972281.6899999999441206, 1037775.5999999999767169
972255.8800000000046566, 1037814.5999999999767169 972230.6899999999441206,
1038017.9000000000232831 972194.4399999999441206, 1038036.8000000000465661
972194.6300000000046566, 1038080.0999999999767169 972220.3800000000046566,
1038186.5999999999767169 972234.8800000000046566, 1038205.5999999999767169
972236.1300000000046566, 1038313.5000000000000000 972192.9399999999441206,
1038408.1999999999534339 972168.3100000000558794, 1038509.1999999999534339
972163.5000000000000000, 1038585.5000000000000000 972113.6300000000046566,
1038642.5999999999767169 972107.6300000000046566, 1038661.8000000000465661
972089.2500000000000000, 1038693.3000000000465661 972082.9399999999441206,
1038712.3000000000465661 972082.6300000000046566, 1038756.1999999999534339
972109.3100000000558794, 1038781.5999999999767169 972109.3100000000558794,
1038844.9000000000232831 972103.5600000000558794, 1038914.8000000000465661
972085.5600000000558794, 1038946.3000000000465661 972085.7500000000000000,
1038977.8000000000465661 972105.4399999999441206, 1039034.6999999999534339
972098.5000000000000000, 1039110.6999999999534339 972106.3100000000558794,
1039205.9000000000232831 972081.6899999999441206, 1039358.0999999999767169
972057.1899999999441206, 1039396.6999999999534339 972025.9399999999441206,
1039410.0000000000000000 971987.7500000000000000, 1039501.9000000000232831
971873.0000000000000000, 1039521.1999999999534339 971847.0600000000558794,
1039546.4000000000232831 971841.5000000000000000, 1039577.6999999999534339
971874.3100000000558794, 1039591.8000000000465661 971890.1899999999441206,
1039616.5999999999767169 971922.2500000000000000, 1039635.4000000000232831
971936.5600000000558794, 1039660.6999999999534339 971923.4399999999441206,
1039691.9000000000232831 971924.5600000000558794, 1039711.0999999999767169
971924.2500000000000000, 1039813.5000000000000000 971967.0600000000558794,
1039885.0999999999767169 971976.0600000000558794, 1039904.8000000000465661
971974.7500000000000000, 1040017.0999999999767169 971879.1899999999441206,
1040071.8000000000465661 971851.7500000000000000, 1040166.6999999999534339
971845.7500000000000000, 1040236.5999999999767169 971815.1899999999441206,
1040319.0999999999767169 971802.6300000000046566, 1040610.4000000000232831
971762.1899999999441206, 1040763.1999999999534339 971686.9399999999441206,
1040832.9000000000232831 971694.5000000000000000, 1040889.5999999999767169
971688.5600000000558794, 1041124.5999999999767169 971600.8100000000558794,
1041188.1999999999534339 971570.5000000000000000, 1041201.3000000000465661
971539.4399999999441206, 1041226.9000000000232831 971520.2500000000000000,
1041258.5999999999767169 971513.8800000000046566, 1041340.8000000000465661
971521.4399999999441206, 1041359.6999999999534339 971521.1300000000046566,
1041385.5999999999767169 971483.8800000000046566, 1041404.8000000000465661
971470.5000000000000000, 1041474.4000000000232831 971458.5600000000558794,
1041519.4000000000232831 971395.9399999999441206, 1041544.8000000000465661
971388.8100000000558794, 1041620.5000000000000000 971415.1899999999441206,
1041714.5000000000000000 971467.4399999999441206, 1041764.8000000000465661
971493.8100000000558794, 1041777.6999999999534339 971487.3100000000558794,
1041871.3000000000465661 971583.6300000000046566, 1041972.0000000000000000
971629.0600000000558794, 1042041.4000000000232831 971618.5600000000558794,
1042066.8000000000465661 971623.9399999999441206, 1042091.9000000000232831
971650.0000000000000000, 1042148.4000000000232831 971670.1300000000046566,
1042281.5000000000000000 971644.9399999999441206, 1042326.3000000000465661
971614.5000000000000000, 1042382.9000000000232831 971622.0600000000558794,
1042421.0000000000000000 971614.9399999999441206, 1042466.0000000000000000
971571.4399999999441206, 1042491.1999999999534339 971564.8100000000558794,
1042522.4000000000232831 971584.1300000000046566, 1042541.4000000000232831
971584.6899999999441206, 1042586.0000000000000000 971572.8100000000558794,
1042648.5000000000000000 971631.3800000000046566, 1042717.9000000000232831
971650.0000000000000000, 1042755.8000000000465661 971644.3100000000558794,
1042800.5999999999767169 971605.8100000000558794, 1042851.4000000000232831
971581.0600000000558794, 1042945.9000000000232831 971608.1899999999441206,
1042965.0999999999767169 971608.3800000000046566, 1043009.5999999999767169
971582.8800000000046566, 1043028.5999999999767169 971590.1300000000046566,
1043065.5000000000000000 971660.8100000000558794, 1043109.5999999999767169
971687.0000000000000000, 1043122.3000000000465661 971686.0000000000000000,
1043171.9000000000232831 971756.0600000000558794, 1043190.5999999999767169
971781.8100000000558794, 1043240.9000000000232831 971795.7500000000000000,
1043317.4000000000232831 971758.4399999999441206, 1043336.1999999999534339
971758.1300000000046566, 1043386.5000000000000000 971791.1300000000046566,
1043449.6999999999534339 971784.8800000000046566, 1043519.4000000000232831
971792.5000000000000000, 1043538.1999999999534339 971792.1300000000046566,
1043589.0999999999767169 971780.4399999999441206, 1043614.4000000000232831
971767.8800000000046566, 1043672.1999999999534339 971711.6899999999441206,
1043684.9000000000232831 971692.1300000000046566, 1043704.1999999999534339
971673.2500000000000000, 1043729.4000000000232831 971667.6300000000046566,
1043754.8000000000465661 971673.6300000000046566, 1043779.8000000000465661
971699.6300000000046566, 1043829.8000000000465661 971732.1300000000046566,
1043892.8000000000465661 971757.5000000000000000, 1043924.5999999999767169
971745.1300000000046566, 1044026.6999999999534339 971670.5600000000558794,
1044128.5000000000000000 971627.1300000000046566, 1044364.5999999999767169
971458.0600000000558794, 1044549.0000000000000000 971357.9399999999441206,
1044651.1999999999534339 971294.9399999999441206, 1044752.8000000000465661
971277.5000000000000000, 1044879.0999999999767169 971290.7500000000000000,
1044904.3000000000465661 971291.6899999999441206, 1044967.9000000000232831
971260.3800000000046566, 1045025.5999999999767169 971203.7500000000000000,
1045076.5999999999767169 971165.9399999999441206, 1045146.4000000000232831
971154.0000000000000000, 1045184.5000000000000000 971129.2500000000000000,
1045210.0000000000000000 971104.1300000000046566, 1045261.0999999999767169
971079.3800000000046566, 1045292.9000000000232831 971047.4399999999441206,
1045369.9000000000232831 970984.9399999999441206, 1045510.0999999999767169
970884.6899999999441206, 1045605.1999999999534339 970866.0600000000558794,
1045681.5000000000000000 970841.7500000000000000, 1045713.4000000000232831
970816.3800000000046566, 1045814.9000000000232831 970779.3800000000046566,
1045916.9000000000232831 970736.0000000000000000, 1046068.8000000000465661
970717.9399999999441206, 1046163.5999999999767169 970726.4399999999441206,
1046226.6999999999534339 970739.3100000000558794, 1046265.0000000000000000
970707.0600000000558794, 1046322.5999999999767169 970663.5600000000558794,
1046348.5000000000000000 970613.8100000000558794, 1046369.1999999999534339
970480.5000000000000000, 1046407.9000000000232831 970403.5600000000558794,
1046575.0000000000000000 970208.3800000000046566, 1046606.5999999999767169
970189.9399999999441206, 1046670.1999999999534339 970177.2500000000000000,
1046721.0000000000000000 970159.0000000000000000, 1046739.9000000000232831
970165.2500000000000000, 1046853.5000000000000000 970179.0000000000000000,
1046935.5999999999767169 970193.0000000000000000, 1046992.5999999999767169
970187.0600000000558794, 1047017.8000000000465661 970193.0600000000558794,
1047080.9000000000232831 970206.8800000000046566, 1047112.5000000000000000
970207.1300000000046566, 1047207.5000000000000000 970183.5000000000000000,
1047485.9000000000232831 970180.1899999999441206, 1047599.9000000000232831
970162.3100000000558794, 1047682.0000000000000000 970169.8100000000558794,
1047700.9000000000232831 970169.0600000000558794, 1047802.5999999999767169
970151.1899999999441206, 1047878.5999999999767169 970145.4399999999441206,
1047915.9000000000232831 970197.5000000000000000, 1047959.9000000000232831
970223.6899999999441206, 1047991.3000000000465661 970223.9399999999441206,
1048073.5999999999767169 970217.8800000000046566, 1048105.5000000000000000
970205.5000000000000000, 1048219.6999999999534339 970168.5600000000558794,
1048263.9000000000232831 970168.6899999999441206, 1048282.9000000000232831
970175.8800000000046566, 1048358.9000000000232831 970176.1300000000046566,
1048421.9000000000232831 970195.5600000000558794, 1048542.1999999999534339
970171.3800000000046566, 1048567.8000000000465661 970158.7500000000000000,
1048599.3000000000465661 970166.5000000000000000, 1048669.0000000000000000
970159.9399999999441206, 1048687.8999999999068677 970160.6899999999441206,
1048694.0000000000000000 970180.5000000000000000, 1048680.8999999999068677
970199.1300000000046566, 1048680.8000000000465661 970236.7500000000000000,
1048711.6000000000931323 970269.0600000000558794, 1048743.3000000000465661
970269.6899999999441206, 1048762.3000000000465661 970269.3800000000046566,
1048857.5000000000000000 970238.2500000000000000, 1048920.8000000000465661
970246.0600000000558794, 1048946.3000000000465661 970227.4399999999441206,
1048940.8000000000465661 970175.5000000000000000, 1048884.3999999999068677
970123.7500000000000000, 1048891.1000000000931323 970098.8800000000046566,
1048923.0000000000000000 970073.4399999999441206, 1048954.8000000000465661
970068.0600000000558794, 1048998.6000000000931323 970094.3100000000558794,
1049035.6000000000931323 970157.9399999999441206, 1049041.5000000000000000
970201.8100000000558794, 1049065.8999999999068677 970260.0000000000000000,
1049121.8000000000465661 970349.8800000000046566, 1049259.1000000000931323
970504.0600000000558794, 1049284.0000000000000000 970516.0600000000558794,
1049340.3999999999068677 970561.8100000000558794, 1049466.3999999999068677
970607.1300000000046566, 1049529.0000000000000000 970659.6300000000046566,
1049591.8999999999068677 970679.5600000000558794, 1049667.8000000000465661
970699.3800000000046566, 1049686.8999999999068677 970693.5600000000558794,
1049737.8000000000465661 970668.3100000000558794, 1049808.1000000000931323
970605.1300000000046566, 1049858.6000000000931323 970599.5000000000000000,
1049903.3999999999068677 970568.0000000000000000, 1049966.6000000000931323
970574.8100000000558794, 1050055.5000000000000000 970544.0000000000000000,
1050087.1000000000931323 970538.6300000000046566, 1050112.3000000000465661
970539.0600000000558794, 1050175.5000000000000000 970563.9399999999441206,
1050352.0000000000000000 970585.5600000000558794, 1050447.1000000000931323
970573.9399999999441206, 1050541.6000000000931323 970594.0600000000558794,
1050567.1000000000931323 970588.3800000000046566, 1050599.1000000000931323
970562.0000000000000000, 1050681.5000000000000000 970537.4399999999441206,
1050700.5000000000000000 970538.6300000000046566, 1050763.5000000000000000
970564.0000000000000000, 1050820.3999999999068677 970559.0600000000558794,
1050845.8000000000465661 970559.0000000000000000, 1050877.1000000000931323
970577.7500000000000000, 1050940.3000000000465661 970598.1300000000046566,
1051065.8999999999068677 970663.0000000000000000, 1051128.8999999999068677
970675.8800000000046566, 1051211.3999999999068677 970664.3800000000046566,
1051256.0000000000000000 970619.8100000000558794, 1051281.6000000000931323
970614.7500000000000000, 1051312.8000000000465661 970640.0000000000000000,
1051331.5000000000000000 970659.7500000000000000, 1051350.5000000000000000
970665.9399999999441206, 1051369.5000000000000000 970660.1300000000046566,
1051388.3999999999068677 970666.3800000000046566, 1051425.3000000000465661
970756.0600000000558794, 1051468.8999999999068677 970800.8800000000046566,
1051544.1000000000931323 970851.8100000000558794, 1051662.8000000000465661
970974.7500000000000000, 1051712.8999999999068677 971013.1899999999441206,
1051857.6000000000931323 971065.2500000000000000, 1051920.8999999999068677
971059.5600000000558794, 1051958.6000000000931323 971073.5000000000000000,
1052059.8999999999068677 971087.1899999999441206, 1052167.3000000000465661
971100.2500000000000000, 1052293.8000000000465661 971083.8100000000558794,
1052375.8000000000465661 971103.8800000000046566, 1052420.0000000000000000
971111.0000000000000000, 1052515.1000000000931323 971099.0000000000000000,
1052533.8999999999068677 971098.6899999999441206, 1052578.3000000000465661
971112.8800000000046566, 1052603.3999999999068677 971112.8100000000558794,
1052635.1000000000931323 971112.4399999999441206, 1052736.1000000000931323
971120.6899999999441206, 1052831.5000000000000000 971089.0600000000558794,
1052888.8000000000465661 971058.5600000000558794, 1052946.3000000000465661
971007.8800000000046566, 1053066.5000000000000000 970983.1899999999441206,
1053117.8000000000465661 970952.4399999999441206, 1053149.8999999999068677
970901.9399999999441206, 1053226.8000000000465661 970832.5000000000000000,
1053272.0000000000000000 970750.8100000000558794, 1053356.1000000000931323
970604.2500000000000000, 1053508.8999999999068677 970517.5000000000000000,
1053730.8999999999068677 970481.4399999999441206, 1053781.8999999999068677
970449.7500000000000000, 1053838.8999999999068677 970431.1899999999441206,
1053940.6000000000931323 970407.3800000000046566, 1054061.3999999999068677
970332.5000000000000000, 1054131.8999999999068677 970269.3100000000558794,
1054151.3999999999068677 970224.3800000000046566, 1054189.8999999999068677
970181.0600000000558794, 1054183.8999999999068677 970162.2500000000000000,
1054177.8999999999068677 970136.4399999999441206, 1054248.1000000000931323
970079.3100000000558794, 1054254.8000000000465661 970049.3800000000046566,
1054248.8999999999068677 970016.0600000000558794, 1054262.0000000000000000
969978.3800000000046566, 1054256.0000000000000000 969940.0600000000558794,
1054269.3999999999068677 969895.8100000000558794, 1054269.8000000000465661
969870.1899999999441206, 1054245.3999999999068677 969800.0000000000000000,
1054264.3999999999068677 969780.6300000000046566, 1054296.0000000000000000
969799.8800000000046566, 1054321.3000000000465661 969800.3100000000558794,
1054315.3999999999068677 969769.5000000000000000, 1054322.0000000000000000
969743.1300000000046566, 1054392.3999999999068677 969679.9399999999441206,
1054399.3000000000465661 969628.9399999999441206, 1054412.3999999999068677
969604.8800000000046566, 1054437.8999999999068677 969579.6300000000046566,
1054462.8999999999068677 969604.6899999999441206, 1054524.8999999999068677
969700.8100000000558794, 1054574.8999999999068677 969732.8100000000558794,
1054625.3999999999068677 969753.3100000000558794, 1054638.1000000000931323
969752.1899999999441206, 1054713.6000000000931323 969792.1899999999441206,
1054794.5000000000000000 969881.5000000000000000, 1054920.0000000000000000
969958.9399999999441206, 1055102.6000000000931323 970016.3800000000046566,
1055109.3000000000465661 970018.6300000000046566, 1055128.1000000000931323
970018.8100000000558794, 1055223.5000000000000000 969969.6300000000046566,
1055407.8000000000465661 969900.6300000000046566, 1055712.0000000000000000
969847.0000000000000000, 1055750.3999999999068677 969822.3100000000558794,
1055866.1000000000931323 969645.3800000000046566, 1055974.8000000000465661
969563.5000000000000000, 1056039.0000000000000000 969501.0600000000558794,
1056230.0000000000000000 969387.1300000000046566, 1056268.6000000000931323
969336.8100000000558794, 1056389.8999999999068677 969261.4399999999441206,
1056421.8999999999068677 969218.5000000000000000, 1056511.3999999999068677
969155.4399999999441206, 1056543.5000000000000000 969110.4399999999441206,
1056537.3999999999068677 969092.6300000000046566, 1056544.3000000000465661
969041.6899999999441206, 1056569.8000000000465661 969028.5600000000558794,
1056588.8000000000465661 969035.8100000000558794, 1056614.1000000000931323
969035.7500000000000000, 1056645.6000000000931323 969041.9399999999441206,
1056671.0000000000000000 969043.3800000000046566, 1056690.1000000000931323
969017.4399999999441206, 1056703.1000000000931323 968998.3800000000046566,
1056805.6000000000931323 968891.1899999999441206, 1056857.1000000000931323
968809.2500000000000000, 1056876.3000000000465661 968789.3800000000046566,
1056959.3000000000465661 968746.1899999999441206, 1057067.6000000000931323
968671.3800000000046566, 1057105.6000000000931323 968659.1899999999441206,
1057176.0000000000000000 968608.5600000000558794, 1057271.3000000000465661
968585.0000000000000000, 1057436.8000000000465661 968497.1899999999441206,
1057468.5000000000000000 968478.2500000000000000, 1057481.6000000000931323
968459.1899999999441206, 1057475.3999999999068677 968439.3800000000046566,
1057475.6000000000931323 968414.2500000000000000, 1057507.6000000000931323
968382.8100000000558794, 1057565.1000000000931323 968344.7500000000000000,
1057609.6000000000931323 968307.7500000000000000, 1057666.8000000000465661
968307.8100000000558794, 1057723.8999999999068677 968283.3100000000558794,
1057781.5000000000000000 968233.2500000000000000, 1057781.8999999999068677
968207.6300000000046566, 1057814.0000000000000000 968176.1899999999441206,
1057872.0000000000000000 968068.8800000000046566, 1057910.8999999999068677
968011.5600000000558794, 1057974.5000000000000000 967980.8100000000558794,
1058057.6000000000931323 967905.0000000000000000, 1058133.6000000000931323
967887.7500000000000000, 1058184.8999999999068677 967836.9399999999441206,
1058223.1000000000931323 967824.2500000000000000, 1058311.6000000000931323
967812.9399999999441206, 1058439.0000000000000000 967750.3100000000558794,
1058496.1000000000931323 967737.8800000000046566, 1058635.8999999999068677
967681.7500000000000000, 1058706.3999999999068677 967612.6300000000046566,
1058757.5000000000000000 967575.8100000000558794, 1058833.5000000000000000
967563.5600000000558794, 1058852.8000000000465661 967544.1899999999441206,
1058879.0000000000000000 967462.3100000000558794, 1058956.8000000000465661
967323.5600000000558794, 1059059.1000000000931323 967221.9399999999441206,
1059225.0000000000000000 967116.0600000000558794, 1059282.6000000000931323
967059.4399999999441206, 1059327.3000000000465661 967027.9399999999441206,
1059417.0000000000000000 966933.3800000000046566, 1059506.8999999999068677
966838.8100000000558794, 1059519.6000000000931323 966812.6899999999441206,
1059513.8000000000465661 966781.3100000000558794, 1059527.1000000000931323
966737.0600000000558794, 1059590.8999999999068677 966686.6899999999441206,
1059623.1000000000931323 966630.1899999999441206, 1059680.8000000000465661
966579.5600000000558794, 1059694.3999999999068677 966509.3100000000558794,
1059745.8000000000465661 966445.9399999999441206, 1059746.0000000000000000
966420.8800000000046566, 1059709.0000000000000000 966351.1300000000046566,
1059709.3999999999068677 966312.5000000000000000, 1059767.8000000000465661
966205.2500000000000000, 1059826.0000000000000000 966091.3800000000046566,
1059879.1000000000931323 965887.5000000000000000, 1059905.5000000000000000
965812.1300000000046566, 1059924.6000000000931323 965799.3800000000046566,
1059886.3000000000465661 965718.6899999999441206, 1059888.6000000000931323
965633.8100000000558794, 1059869.8000000000465661 965633.1899999999441206,
1059787.8000000000465661 965619.5600000000558794, 1059655.3999999999068677
965580.5000000000000000, 1059642.8000000000465661 965579.5600000000558794,
1059592.3000000000465661 965573.1899999999441206, 1059554.6000000000931323
965547.6899999999441206, 1059516.8999999999068677 965540.2500000000000000,
1059491.3000000000465661 965547.3800000000046566, 1059427.0000000000000000
965628.3800000000046566, 1059420.5000000000000000 965647.2500000000000000,
1059273.3999999999068677 965779.8800000000046566, 1059163.3999999999068677
965982.1300000000046566, 1059092.6000000000931323 966070.4399999999441206,
1059085.3999999999068677 966147.4399999999441206, 1059021.0000000000000000
966235.9399999999441206, 1059014.3000000000465661 966267.3100000000558794,
1059019.8999999999068677 966324.3100000000558794, 1058998.3999999999068677
966521.8100000000558794, 1058972.3000000000465661 966585.1300000000046566,
1058889.3000000000465661 966648.3800000000046566, 1058876.8999999999068677
966659.8800000000046566, 1058863.6000000000931323 966673.0000000000000000,
1058831.0000000000000000 966755.6899999999441206, 1058767.3000000000465661
966799.0000000000000000, 1058716.3999999999068677 966824.1899999999441206,
1058658.8000000000465661 966880.8100000000558794, 1058645.6000000000931323
966912.9399999999441206, 1058543.3999999999068677 967013.6300000000046566,
1058460.5000000000000000 967043.7500000000000000, 1058434.8999999999068677
967069.3800000000046566, 1058459.8999999999068677 967095.4399999999441206,
1058484.8000000000465661 967147.0000000000000000, 1058484.3999999999068677
967166.0600000000558794, 1058427.3999999999068677 967158.0000000000000000,
1058370.8999999999068677 967132.8100000000558794, 1058320.1000000000931323
967158.0600000000558794, 1058301.1000000000931323 967156.8800000000046566,
1058257.1000000000931323 967130.6300000000046566, 1058238.1000000000931323
967131.4399999999441206, 1058091.8000000000465661 967193.3100000000558794,
1058047.3999999999068677 967199.7500000000000000, 1058003.0000000000000000
967217.1899999999441206, 1057939.8999999999068677 967203.3100000000558794,
1057901.6000000000931323 967222.9399999999441206, 1057876.0000000000000000
967260.6300000000046566, 1057856.8000000000465661 967285.0600000000558794,
1057799.6000000000931323 967298.0600000000558794, 1057742.8000000000465661
967284.9399999999441206, 1057717.5000000000000000 967290.5000000000000000,
1057673.3000000000465661 967277.3100000000558794, 1057635.3000000000465661
967296.0000000000000000, 1057584.3000000000465661 967326.7500000000000000,
1057489.0000000000000000 967351.8800000000046566, 1057330.0000000000000000
967420.8100000000558794, 1057285.6000000000931323 967438.7500000000000000,
1057227.8000000000465661 967501.8800000000046566, 1057189.6000000000931323
967521.5600000000558794, 1057157.8999999999068677 967526.4399999999441206,
1057075.1000000000931323 967570.0600000000558794, 1057011.0000000000000000
967633.5000000000000000, 1056953.3000000000465661 967708.6899999999441206,
1056902.3999999999068677 967721.3800000000046566, 1056889.8999999999068677
967721.4399999999441206, 1056870.3000000000465661 967771.3800000000046566,
1056806.1000000000931323 967840.8100000000558794, 1056742.6000000000931323
967872.6300000000046566, 1056716.8999999999068677 967897.3100000000558794,
1056678.0000000000000000 967973.1899999999441206, 1056645.8000000000465661
968011.1899999999441206, 1056639.0000000000000000 968050.0600000000558794,
1056645.1000000000931323 968067.8100000000558794, 1056607.1000000000931323
968068.5000000000000000, 1056588.3000000000465661 968061.7500000000000000,
1056550.3999999999068677 968067.3800000000046566, 1056441.8000000000465661
968143.1899999999441206, 1056396.8999999999068677 968198.8100000000558794,
1056301.1000000000931323 968256.0600000000558794, 1056275.8000000000465661
968293.7500000000000000, 1056274.5000000000000000 968363.5000000000000000,
1056274.5000000000000000 968377.0600000000558794, 1056254.8999999999068677
968421.0000000000000000, 1056241.8000000000465661 968458.1899999999441206,
1056235.6000000000931323 968471.4399999999441206, 1056209.8999999999068677
968484.1300000000046566, 1056165.6000000000931323 968470.4399999999441206,
1056128.0000000000000000 968451.4399999999441206, 1056026.3000000000465661
968494.9399999999441206, 1055892.3999999999068677 968570.3800000000046566,
1055791.1000000000931323 968587.6899999999441206, 1055727.3000000000465661
968631.0600000000558794, 1055670.3000000000465661 968650.0000000000000000,
1055587.3999999999068677 968699.6899999999441206, 1055447.5000000000000000
968756.3100000000558794, 1055295.5000000000000000 968766.2500000000000000,
1055263.3999999999068677 968792.1899999999441206, 1055231.6000000000931323
968830.6300000000046566, 1055180.6000000000931323 968855.3800000000046566,
1055073.0000000000000000 968866.5000000000000000, 1054932.3000000000465661
968985.8800000000046566, 1054868.3999999999068677 969042.7500000000000000,
1054843.0000000000000000 969048.8100000000558794, 1054811.5000000000000000
969035.6300000000046566, 1054798.6000000000931323 969035.6300000000046566,
1054779.8000000000465661 969034.9399999999441206, 1054600.0000000000000000
969256.2500000000000000, 1054561.5000000000000000 969281.4399999999441206,
1054536.0000000000000000 969312.1899999999441206, 1054510.0000000000000000
969363.3800000000046566, 1054478.3999999999068677 969369.7500000000000000,
1054415.3000000000465661 969355.9399999999441206, 1054313.3999999999068677
969418.9399999999441206, 1054274.8999999999068677 969443.6300000000046566,
1054223.8999999999068677 969500.0000000000000000, 1054128.3999999999068677
969544.6899999999441206, 1054102.5000000000000000 969587.8800000000046566,
1054064.3999999999068677 969606.5600000000558794, 1054032.8000000000465661
969612.9399999999441206, 1053969.3999999999068677 969605.6300000000046566,
1053944.0000000000000000 969619.2500000000000000, 1053918.3000000000465661
969662.5000000000000000, 1053644.3000000000465661 969812.5000000000000000,
1053529.5000000000000000 969881.1300000000046566, 1053498.0000000000000000
969887.0000000000000000, 1053435.0000000000000000 969874.5600000000558794,
1053358.8000000000465661 969886.3800000000046566, 1053321.0000000000000000
969872.4399999999441206, 1053289.8999999999068677 969827.5600000000558794,
1053264.8000000000465661 969814.5600000000558794, 1053125.6000000000931323
969806.5000000000000000, 1053100.6000000000931323 969801.0600000000558794,
1053043.5000000000000000 969818.5000000000000000, 1053005.0000000000000000
969857.2500000000000000, 1052973.3000000000465661 969868.1300000000046566,
1052795.3999999999068677 969918.3800000000046566, 1052642.8000000000465661
969980.0000000000000000, 1052566.8999999999068677 969998.2500000000000000,
1052497.3000000000465661 970004.2500000000000000, 1052472.0000000000000000
969996.8100000000558794, 1052415.1000000000931323 970003.7500000000000000,
1052313.5000000000000000 970020.6300000000046566, 1052263.0000000000000000
970019.7500000000000000, 1052243.8000000000465661 970019.5600000000558794,
1052168.0000000000000000 970031.3100000000558794, 1052111.3999999999068677
970006.5600000000558794, 1052023.0000000000000000 969985.2500000000000000,
1051998.0000000000000000 969978.8100000000558794, 1051941.5000000000000000
969934.0600000000558794, 1051877.8999999999068677 969946.3100000000558794,
1051820.8999999999068677 969964.2500000000000000, 1051802.0000000000000000
969957.5600000000558794, 1051771.1000000000931323 969913.6899999999441206,
1051745.6000000000931323 969913.8100000000558794, 1051701.1000000000931323
969925.7500000000000000, 1051682.3999999999068677 969918.5600000000558794,
1051468.0000000000000000 969852.3800000000046566, 1051361.3000000000465661
969794.1899999999441206, 1051285.8999999999068677 969768.3100000000558794,
1051260.8999999999068677 969741.8100000000558794, 1051248.1000000000931323
969741.8100000000558794, 1051197.8999999999068677 969716.8800000000046566,
1051141.3000000000465661 969695.6899999999441206, 1051090.8000000000465661
969689.8800000000046566, 1050983.0000000000000000 969707.5000000000000000,
1050856.8999999999068677 969681.2500000000000000, 1050800.5000000000000000
969634.9399999999441206, 1050725.8000000000465661 969551.4399999999441206,
1050682.3000000000465661 969475.5000000000000000, 1050620.3999999999068677
969366.2500000000000000, 1050595.3999999999068677 969353.3100000000558794,
1050582.3999999999068677 969360.3100000000558794, 1050557.3999999999068677
969339.8100000000558794, 1050557.8999999999068677 969320.7500000000000000,
1050551.8999999999068677 969295.9399999999441206, 1050520.5000000000000000
969270.1899999999441206, 1050432.6000000000931323 969218.2500000000000000,
1050224.5000000000000000 969176.8800000000046566, 1050205.5000000000000000
969177.6899999999441206, 1050168.3000000000465661 969201.8800000000046566,
1050141.8999999999068677 969201.5000000000000000, 1050073.8999999999068677
969067.4399999999441206, 1050049.0000000000000000 969047.9399999999441206,
1050029.8999999999068677 969048.2500000000000000, 1049922.3000000000465661
969066.3800000000046566, 1049820.3999999999068677 969116.3100000000558794,
1049763.3999999999068677 969109.2500000000000000, 1049700.1000000000931323
969114.4399999999441206, 1049567.8999999999068677 969094.5000000000000000,
1049511.3999999999068677 969049.2500000000000000, 1049492.5000000000000000
969049.0000000000000000, 1049448.0000000000000000 969055.4399999999441206,
1049429.0000000000000000 969047.6899999999441206, 1049366.6000000000931323
968997.6899999999441206, 1049259.6000000000931323 968952.0600000000558794,
1049202.8000000000465661 968957.5000000000000000, 1049139.5000000000000000
968949.1899999999441206, 1049056.3000000000465661 968976.8100000000558794,
1049037.8000000000465661 968987.1300000000046566, 1048987.0000000000000000
968999.7500000000000000, 1048898.3000000000465661 969004.5600000000558794,
1048866.8000000000465661 968997.8800000000046566, 1048816.6000000000931323
968971.8800000000046566, 1048772.5000000000000000 968965.2500000000000000,
1048721.8999999999068677 968970.9399999999441206, 1048607.3000000000465661
969013.9399999999441206, 1048549.9000000000232831 969045.9399999999441206,
1048448.8000000000465661 969056.7500000000000000, 1048334.5999999999767169
969080.6899999999441206, 1048290.0999999999767169 969087.1300000000046566,
1048162.9000000000232831 969149.6300000000046566, 1048042.5000000000000000
969167.3100000000558794, 1047998.3000000000465661 969166.6899999999441206,
1047903.3000000000465661 969160.1899999999441206, 1047884.5999999999767169
969153.0000000000000000, 1047770.5000000000000000 969177.9399999999441206,
1047700.5000000000000000 969214.9399999999441206, 1047674.8000000000465661
969240.1300000000046566, 1047630.4000000000232831 969258.6300000000046566,
1047585.8000000000465661 969271.0000000000000000, 1047509.4000000000232831
969321.3800000000046566, 1047477.6999999999534339 969314.6899999999441206,
1047446.0999999999767169 969326.6300000000046566, 1047426.9000000000232831
969340.0000000000000000, 1047383.0000000000000000 969313.7500000000000000,
1047364.1999999999534339 969301.0000000000000000, 1047319.5999999999767169
969332.5600000000558794, 1047192.1999999999534339 969406.6899999999441206,
1047173.0999999999767169 969400.3800000000046566, 1047154.1999999999534339
969393.1899999999441206, 1047135.4000000000232831 969373.9399999999441206,
1047110.4000000000232831 969361.5000000000000000, 1047072.5000000000000000
969368.0600000000558794, 1046990.5999999999767169 969347.0000000000000000,
1046920.9000000000232831 969346.4399999999441206, 1046889.5999999999767169
969315.1300000000046566, 1046826.9000000000232831 969281.6899999999441206,
1046807.8000000000465661 969282.5000000000000000, 1046706.4000000000232831
969306.3800000000046566, 1046598.6999999999534339 969317.0000000000000000,
1046554.3000000000465661 969342.4399999999441206, 1046452.5999999999767169
969354.3100000000558794, 1046421.0000000000000000 969360.1899999999441206,
1046345.3000000000465661 969346.8100000000558794, 1046243.9000000000232831
969371.2500000000000000, 1046225.1999999999534339 969382.5600000000558794,
1046192.5999999999767169 969422.0600000000558794, 1046147.9000000000232831
969453.0600000000558794, 1046128.9000000000232831 969445.8100000000558794,
1046078.6999999999534339 969426.3800000000046566, 1046059.8000000000465661
969425.6899999999441206, 1045918.8000000000465661 969572.1300000000046566,
1045822.0999999999767169 969710.1300000000046566, 1045789.8000000000465661
969773.7500000000000000, 1045764.3000000000465661 969785.8100000000558794,
1045745.3000000000465661 969792.1899999999441206, 1045675.5999999999767169
969785.0600000000558794, 1045492.1999999999534339 969802.9399999999441206,
1045377.9000000000232831 969845.9399999999441206, 1045307.9000000000232831
969877.0000000000000000, 1045263.6999999999534339 969857.3100000000558794,
1045219.5999999999767169 969849.6899999999441206, 1045200.5999999999767169
969850.4399999999441206, 1045181.3000000000465661 969888.3800000000046566,
1045162.0000000000000000 969906.7500000000000000, 1045067.0999999999767169
969912.8100000000558794, 1044818.9000000000232831 970024.6899999999441206,
1044799.8000000000465661 970031.0000000000000000, 1044724.1999999999534339
970016.6899999999441206, 1044673.4000000000232831 970029.8100000000558794,
1044494.8000000000465661 970148.3800000000046566, 1044462.8000000000465661
970192.8100000000558794, 1044429.8000000000465661 970287.0600000000558794,
1044379.0000000000000000 970325.3100000000558794, 1044296.4000000000232831
970344.3800000000046566, 1043904.4000000000232831 970333.4399999999441206,
1043847.5999999999767169 970319.2500000000000000, 1043816.0999999999767169
970319.1300000000046566, 1043790.6999999999534339 970319.1899999999441206,
1043740.5000000000000000 970293.1899999999441206, 1043689.9000000000232831
970279.8100000000558794, 1043614.0000000000000000 970298.1300000000046566,
1043487.8000000000465661 970265.3800000000046566, 1043335.4000000000232831
970313.9399999999441206, 1043183.3000000000465661 970350.5600000000558794,
1043132.4000000000232831 970356.2500000000000000, 1043082.4000000000232831
970317.1899999999441206, 1043031.9000000000232831 970311.3100000000558794,
1043000.3000000000465661 970311.1300000000046566, 1042968.3000000000465661
970355.1300000000046566, 1042943.0999999999767169 970341.1899999999441206,
1042879.9000000000232831 970321.8100000000558794, 1042791.5999999999767169
970308.0000000000000000, 1042741.3000000000465661 970294.5600000000558794,
1042653.3000000000465661 970242.6899999999441206, 1042596.8000000000465661
970224.0000000000000000, 1042577.5000000000000000 970229.3100000000558794,
1042539.8000000000465661 970223.4399999999441206, 1042476.6999999999534339
970203.0000000000000000, 1042413.5999999999767169 970197.1899999999441206,
1042362.8000000000465661 970208.3800000000046566, 1042312.0999999999767169
970207.0000000000000000, 1042148.0999999999767169 970199.4399999999441206,
1042034.0999999999767169 970204.7500000000000000, 1042008.0000000000000000
970256.0600000000558794, 1042001.4000000000232831 970274.3800000000046566,
1041944.1999999999534339 970306.3800000000046566, 1041887.0999999999767169
970317.3100000000558794, 1041842.9000000000232831 970305.1899999999441206,
1041817.9000000000232831 970285.6899999999441206, 1041799.0999999999767169
970279.5000000000000000, 1041754.3000000000465661 970323.5000000000000000,
1041735.0999999999767169 970341.3800000000046566, 1041715.9000000000232831
970347.6899999999441206, 1041665.8000000000465661 970322.2500000000000000,
1041646.9000000000232831 970309.0000000000000000, 1041583.5999999999767169
970314.7500000000000000, 1041533.3000000000465661 970276.1899999999441206,
1041470.6999999999534339 970249.7500000000000000, 1041458.5999999999767169
970219.7500000000000000, 1041420.9000000000232831 970166.1300000000046566,
1041370.5000000000000000 970159.1899999999441206, 1041269.0999999999767169
970178.6300000000046566, 1041250.1999999999534339 970184.3800000000046566,
1041173.9000000000232831 970202.1899999999441206, 1041110.6999999999534339
970201.8800000000046566, 1041078.8000000000465661 970226.8100000000558794,
1041047.0000000000000000 970232.6899999999441206, 1040946.0999999999767169
970212.3800000000046566, 1040876.5000000000000000 970217.3100000000558794,
1040787.9000000000232831 970210.5600000000558794, 1040496.5999999999767169
970259.1300000000046566, 1040401.3000000000465661 970302.3100000000558794,
1040369.5000000000000000 970295.6300000000046566, 1040344.4000000000232831
970295.6899999999441206, 1040325.0999999999767169 970307.5000000000000000,
1040230.3000000000465661 970313.0600000000558794, 1040198.5000000000000000
970325.9399999999441206, 1040135.4000000000232831 970319.1300000000046566,
1040008.0999999999767169 970368.1300000000046566, 1039989.3000000000465661
970361.3800000000046566, 1039944.8000000000465661 970373.8800000000046566,
1039843.3000000000465661 970410.2500000000000000, 1039824.0999999999767169
970410.5600000000558794, 1039780.0999999999767169 970404.3800000000046566,
1039761.3000000000465661 970397.1899999999441206, 1039748.4000000000232831
970397.6899999999441206, 1039698.3000000000465661 970371.8100000000558794,
1039616.3000000000465661 970357.6899999999441206, 1039565.5999999999767169
970356.3100000000558794, 1039464.3000000000465661 970362.1899999999441206,
1039400.8000000000465661 970380.8800000000046566, 1039337.9000000000232831
970361.0000000000000000, 1039312.4000000000232831 970361.0600000000558794,
1039160.8000000000465661 970372.0600000000558794, 1039065.8000000000465661
970378.1300000000046566, 1038964.9000000000232831 970357.8100000000558794,
1038882.4000000000232831 970368.8100000000558794, 1038813.0000000000000000
970356.2500000000000000, 1038749.8000000000465661 970360.9399999999441206,
1038680.4000000000232831 970334.8100000000558794, 1038636.1999999999534339
970353.2500000000000000, 1038610.3000000000465661 970391.9399999999441206,
1038590.4000000000232831 970455.0000000000000000, 1038564.8000000000465661
970492.7500000000000000, 1038520.3000000000465661 970511.1899999999441206,
1038482.1999999999534339 970511.2500000000000000, 1038431.8000000000465661
970504.3800000000046566, 1038412.8000000000465661 970497.1300000000046566,
1038393.6999999999534339 970503.4399999999441206, 1038343.4000000000232831
970490.5600000000558794, 1038299.1999999999534339 970483.3800000000046566,
1038280.1999999999534339 970489.7500000000000000, 1038260.6999999999534339
970528.1899999999441206, 1038247.5000000000000000 970578.9399999999441206,
1038183.8000000000465661 970609.1899999999441206, 1038056.4000000000232831
970684.8800000000046566, 1037987.1999999999534339 970658.1899999999441206,
1037968.1999999999534339 970664.5600000000558794, 1037930.4000000000232831
970645.5600000000558794, 1037911.5000000000000000 970625.3100000000558794,
1037867.3000000000465661 970638.2500000000000000, 1037848.3000000000465661
970632.0000000000000000, 1037779.4000000000232831 970574.2500000000000000,
1037741.1999999999534339 970598.4399999999441206, 1037721.9000000000232831
970617.3100000000558794, 1037702.9000000000232831 970623.6899999999441206,
1037639.8000000000465661 970609.7500000000000000, 1037576.5000000000000000
970628.9399999999441206, 1037513.4000000000232831 970614.6300000000046566,
1037436.9000000000232831 970653.0000000000000000, 1037411.5999999999767169
970658.6300000000046566, 1037380.0999999999767169 970651.9399999999441206,
1037354.6999999999534339 970658.0000000000000000, 1037303.4000000000232831
970696.8100000000558794, 1037277.8000000000465661 970721.0000000000000000,
1037252.5999999999767169 970733.5600000000558794, 1037221.0999999999767169
970726.9399999999441206, 1037195.6999999999534339 970732.5000000000000000,
1037093.8000000000465661 970788.5000000000000000, 1037062.0999999999767169
970795.3800000000046566, 1037036.5999999999767169 970807.4399999999441206,
1037005.0999999999767169 970795.2500000000000000, 1036979.9000000000232831
970794.3100000000558794, 1036941.4000000000232831 970825.0600000000558794,
1036909.8000000000465661 970832.4399999999441206, 1036846.9000000000232831
970812.0000000000000000, 1036815.4000000000232831 970792.8100000000558794,
1036697.5000000000000000 970613.2500000000000000, 1036647.5000000000000000
970568.1899999999441206, 1036452.4000000000232831 970495.7500000000000000,
1036377.0999999999767169 970444.2500000000000000, 1036364.4000000000232831
970444.2500000000000000, 1036320.6999999999534339 970412.0000000000000000,
1036183.8000000000465661 970232.2500000000000000, 1036133.8000000000465661
970180.6899999999441206, 1036089.6999999999534339 970161.0000000000000000,
1036045.9000000000232831 970129.1899999999441206, 1036021.0999999999767169
970083.6300000000046566, 1035889.4000000000232831 969999.9399999999441206,
1035833.0000000000000000 969961.1899999999441206, 1035808.0999999999767169
969929.6899999999441206, 1035771.4000000000232831 969813.8100000000558794,
1035746.9000000000232831 969762.6899999999441206, 1035671.8000000000465661
969704.1899999999441206, 1035659.8000000000465661 969648.0000000000000000,
1035641.0999999999767169 969621.7500000000000000, 1035590.9000000000232831
969595.7500000000000000, 1035571.9000000000232831 969596.0000000000000000,
1035540.3000000000465661 969601.8800000000046566, 1035515.0000000000000000
969601.9399999999441206, 1035490.4000000000232831 969556.3800000000046566,
1035471.5999999999767169 969537.1300000000046566, 1035452.5999999999767169
969537.3800000000046566, 1035389.3000000000465661 969549.6300000000046566,
1035351.8000000000465661 969504.5600000000558794, 1035352.4000000000232831
969453.4399999999441206, 1035352.5999999999767169 969433.8100000000558794,
1035321.3000000000465661 969408.5600000000558794, 1035289.8000000000465661
969408.9399999999441206, 1035099.3000000000465661 969457.5600000000558794,
1035017.4000000000232831 969437.0000000000000000, 1034992.4000000000232831
969424.0000000000000000, 1034966.8000000000465661 969443.1899999999441206,
1034953.5999999999767169 969481.3800000000046566, 1034934.4000000000232831
969499.7500000000000000, 1034915.5000000000000000 969500.0600000000558794,
1034865.1999999999534339 969486.6300000000046566, 1034840.1999999999534339
969473.6300000000046566, 1034821.0999999999767169 969460.8800000000046566,
1034783.0999999999767169 969453.5000000000000000, 1034739.1999999999534339
969433.2500000000000000, 1034695.9000000000232831 969363.8800000000046566,
1034677.0999999999767169 969343.6300000000046566, 1034677.8000000000465661
969286.3800000000046566, 1034691.0999999999767169 969243.2500000000000000,
1034691.3000000000465661 969223.6300000000046566, 1034629.0999999999767169
969146.5000000000000000, 1034460.0999999999767169 968992.6899999999441206,
1034435.0999999999767169 968979.6899999999441206, 1034409.5999999999767169
968984.7500000000000000, 1034230.4000000000232831 969167.4399999999441206,
1034173.0999999999767169 969198.5000000000000000, 1034122.1999999999534339
969204.6300000000046566, 1033914.1999999999534339 969164.8100000000558794,
1033863.6999999999534339 969144.4399999999441206, 1033838.6999999999534339
969131.9399999999441206, 1033789.5999999999767169 969003.6300000000046566,
1033733.4000000000232831 968946.2500000000000000, 1033689.4000000000232831
968932.6300000000046566, 1033645.4000000000232831 968894.3800000000046566,
1033627.1999999999534339 968849.5000000000000000, 1033627.5000000000000000
968811.8800000000046566, 1033647.1999999999534339 968766.8100000000558794,
1033647.4000000000232831 968748.3100000000558794, 1033622.5999999999767169
968716.2500000000000000, 1033622.9000000000232831 968691.1899999999441206,
1033642.0999999999767169 968671.2500000000000000, 1033661.0000000000000000
968670.9399999999441206, 1033679.8000000000465661 968691.1899999999441206,
1033692.0999999999767169 968710.3100000000558794, 1033704.9000000000232831
968710.1899999999441206, 1033742.6999999999534339 968717.1300000000046566,
1033761.9000000000232831 968698.2500000000000000, 1033768.8000000000465661
968647.8100000000558794, 1033693.9000000000232831 968576.2500000000000000,
1033700.4000000000232831 968551.8800000000046566, 1033706.9000000000232831
968538.6300000000046566, 1033713.5000000000000000 968519.7500000000000000,
1033707.4000000000232831 968493.3800000000046566, 1033688.9000000000232831
968468.5600000000558794, 1033663.5999999999767169 968467.6899999999441206,
1033587.0999999999767169 968512.0600000000558794, 1033555.5999999999767169
968517.9399999999441206, 1033529.9000000000232831 968543.0600000000558794,
1033541.9000000000232831 968587.7500000000000000, 1033528.9000000000232831
968613.8800000000046566, 1033496.8000000000465661 968656.8800000000046566,
1033496.5000000000000000 968675.9399999999441206, 1033502.6999999999534339
968688.6899999999441206, 1033489.8000000000465661 968714.3800000000046566,
1033470.6999999999534339 968714.1899999999441206, 1033408.8000000000465661
968618.4399999999441206, 1033290.0999999999767169 968496.0600000000558794,
1033247.3000000000465661 968380.5000000000000000, 1033216.0999999999767169
968342.1899999999441206, 1033096.5000000000000000 968283.6300000000046566,
1033058.9000000000232831 968251.0600000000558794, 1033014.5999999999767169
968231.3800000000046566, 1032964.3000000000465661 968179.8100000000558794,
1032913.8000000000465661 968146.3800000000046566, 1032888.5999999999767169
968114.3100000000558794, 1032825.5999999999767169 968093.9399999999441206,
1032749.5999999999767169 968084.6300000000046566, 1032724.3000000000465661
968078.1899999999441206, 1032673.9000000000232831 968021.1300000000046566,
1032598.8000000000465661 967867.3100000000558794, 1032542.3000000000465661
967778.3800000000046566, 1032460.3000000000465661 967752.2500000000000000,
1032384.4000000000232831 967739.9399999999441206, 1032327.5000000000000000
967751.8100000000558794, 1032301.9000000000232831 967771.5600000000558794,
1032238.5999999999767169 967783.7500000000000000, 1032207.0999999999767169
967784.1300000000046566, 1032188.0999999999767169 967776.4399999999441206,
1032169.5999999999767169 967700.4399999999441206, 1032182.4000000000232831
967675.3100000000558794, 1032188.5999999999767169 967656.5000000000000000),
(1026124.3000000000465661 966144.2500000000000000, 1026143.3000000000465661
966144.4399999999441206, 1026162.0999999999767169 966163.6899999999441206,
1026149.4000000000232831 966176.2500000000000000, 1026124.0000000000000000
966170.3800000000046566, 1026111.4000000000232831 966156.8800000000046566,
1026124.3000000000465661 966144.2500000000000000), (1023891.9000000000232831
967359.8100000000558794, 1023910.8000000000465661 967360.0000000000000000,
1023898.0999999999767169 967385.6300000000046566, 1023866.0999999999767169
967410.6300000000046566, 1023802.9000000000232831 967416.7500000000000000,
1023771.4000000000232831 967410.1300000000046566, 1023783.9000000000232831
967390.5000000000000000, 1023866.5999999999767169 967365.8800000000046566,
1023891.9000000000232831 967359.8100000000558794), (1022975.5999999999767169
967177.5000000000000000, 1023045.0999999999767169 967190.5600000000558794,
1023057.5999999999767169 967210.1300000000046566, 1022994.0999999999767169
967261.5000000000000000, 1022930.5000000000000000 967318.3800000000046566,
1022835.5999999999767169 967369.0600000000558794, 1022765.5999999999767169
967419.6899999999441206, 1022759.3000000000465661 967400.8800000000046566,
1022772.3000000000465661 967361.6899999999441206, 1022791.5999999999767169
967298.1899999999441206, 1022810.8000000000465661 967260.7500000000000000,
1022836.1999999999534339 967235.0600000000558794, 1022880.5000000000000000
967209.6300000000046566, 1022931.3000000000465661 967191.3800000000046566,
1022975.5999999999767169 967177.5000000000000000), (1049960.6000000000931323
970046.3800000000046566, 1049979.5000000000000000 970053.1300000000046566,
1050023.0000000000000000 970111.4399999999441206, 1050066.8000000000465661
970143.1899999999441206, 1050109.8000000000465661 970245.2500000000000000,
1050090.5000000000000000 970271.0600000000558794, 1050045.8999999999068677
970289.5600000000558794, 1050020.8000000000465661 970288.6300000000046566,
1049989.1000000000931323 970281.9399999999441206, 1049944.8000000000465661
970294.3800000000046566, 1049925.8999999999068677 970288.1300000000046566,
1049913.5000000000000000 970262.0600000000558794, 1049907.8999999999068677
970206.1300000000046566, 1049927.5000000000000000 970148.6300000000046566,
1049921.5000000000000000 970134.8100000000558794, 1049928.5000000000000000
970077.8100000000558794, 1049960.6000000000931323 970046.3800000000046566),
(1023139.9000000000232831 967210.6899999999441206, 1023158.9000000000232831
967210.8100000000558794, 1023152.3000000000465661 967242.7500000000000000,
1023127.0999999999767169 967274.4399999999441206, 1023088.5999999999767169
967338.7500000000000000, 1023075.6999999999534339 967414.0600000000558794,
1023018.4000000000232831 967439.5600000000558794, 1022980.5000000000000000
967446.1899999999441206, 1022917.0999999999767169 967458.8800000000046566,
1022891.9000000000232831 967470.0600000000558794, 1022860.0999999999767169
967496.0000000000000000, 1022790.4000000000232831 967508.4399999999441206,
1022765.0999999999767169 967508.0000000000000000, 1022759.3000000000465661
967463.5600000000558794, 1022809.9000000000232831 967420.3100000000558794,
1022854.3000000000465661 967400.3800000000046566, 1022917.6999999999534339
967369.5600000000558794, 1023019.4000000000232831 967286.5000000000000000,
1023044.9000000000232831 967254.8100000000558794, 1023095.5000000000000000
967223.0600000000558794, 1023139.9000000000232831 967210.6899999999441206),
(1031826.9000000000232831 967897.0600000000558794, 1031845.9000000000232831
967909.8100000000558794, 1031864.5000000000000000 967979.7500000000000000,
1031857.5999999999767169 968062.8100000000558794, 1031882.5999999999767169
968183.6899999999441206, 1031888.3000000000465661 968259.6899999999441206,
1031869.4000000000232831 968273.5600000000558794, 1031831.4000000000232831
968260.5600000000558794, 1031787.4000000000232831 968234.3800000000046566,
1031736.8000000000465661 968227.0000000000000000, 1031654.6999999999534339
968195.3800000000046566, 1031623.3000000000465661 968138.0000000000000000,
1031604.5999999999767169 968081.1300000000046566, 1031604.8000000000465661
968055.0000000000000000, 1031649.3000000000465661 968010.9399999999441206,
1031700.1999999999534339 967979.2500000000000000, 1031725.4000000000232831
967959.5600000000558794, 1031801.5000000000000000 967909.7500000000000000,
1031826.9000000000232831 967897.0600000000558794)))
==10661== Invalid read of size 4
==10661==    at 0x402A6EDD: geos::QuadTreeNode::find(geos::Envelope *)
(../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C9810 is 28 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==
==10661== Invalid read of size 8
==10661==    at 0x402A722B:
geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *)
(../index/quadtree/QuadTreeNodeBase.cpp:11)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *)
(../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F06C is 0 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void)
(../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 8
==10661==    at 0x402A7244:
geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *)
(../index/quadtree/QuadTreeNodeBase.cpp:12)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *)
(../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F074 is 8 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void)
(../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 8
==10661==    at 0x402A7265:
geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *)
(../index/quadtree/QuadTreeNodeBase.cpp:13)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *)
(../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F074 is 8 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void)
(../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 8
==10661==    at 0x402A728B:
geos::QuadTreeNodeBase::getSubnodeIndex(geos::Envelope *, geos::Coordinate *)
(../index/quadtree/QuadTreeNodeBase.cpp:15)
==10661==    by 0x402A6EE6: geos::QuadTreeNode::find(geos::Envelope *)
(../index/quadtree/QuadTreeNode.cpp:66)
==10661==    by 0x402A788F:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x4129F06C is 0 bytes inside a block of size 28 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402D866D: geos::Coordinate::~Coordinate(void)
(../headers/geom.h:99)
==10661==    by 0x402A6DF9: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:32)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402A6EF6: geos::QuadTreeNode::find(geos::Envelope *)
(../index/quadtree/QuadTreeNode.cpp:69)
==10661==    by 0x402A788F:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:61)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C9804 is 16 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402A78A8:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==    by 0x402CD15A: geos::QuadtreeNestedRingTester::buildQuadtree(void)
(../operation/valid/QuadtreeNestedRingTester.cpp:75)
==10661==    Address 0x414C9808 is 20 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402A74B7: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:319)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C97F4 is 0 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402A74B9: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:320)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402A74BE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:320)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid write of size 4
==10661==    at 0x402A74D1: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:322)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402E0618: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:590)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402E061D: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:590)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402E0663: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:196)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402E0714: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_alloc.h:402)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402E0751: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &)
(/usr/include/g++-3/stl_uninitialized.h:78)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402E076D: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:95)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402E0775: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:95)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid write of size 4
==10661==    at 0x402E07DB: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:612)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9848 is 0 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid write of size 4
==10661==    at 0x402E07E0: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:613)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C984C is 4 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid write of size 4
==10661==    at 0x402E07EF: vector<void *, allocator<void *>
>::_M_insert_aux(void **, void *const &) (/usr/include/g++-3/stl_vector.h:614)
==10661==    by 0x402A74DE: geos::QuadTreeNodeBase::add(void *)
(/usr/include/g++-3/stl_vector.h:197)
==10661==    by 0x402A78AF:
geos::QuadTreeRoot::insertContained(geos::QuadTreeNode *, geos::Envelope *, void
*) (../index/quadtree/QuadTreeRoot.cpp:64)
==10661==    by 0x402A77F4: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:40)
==10661==    Address 0x414C9850 is 8 bytes inside a block of size 12 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A7469: geos::QuadTreeNodeBase::~QuadTreeNodeBase(void)
(/usr/include/g++-3/stl_vector.h:266)
==10661==    by 0x402A6E06: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402A75BE:
geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void
*, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A75C9:
geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void
*, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A656C: geos::Quadtree::query(geos::Envelope *)
(../index/quadtree/Quadtree.cpp:67)
==10661==    by 0x402CCE2C: geos::QuadtreeNestedRingTester::isNonNested(void)
(../operation/valid/QuadtreeNestedRingTester.cpp:39)
==10661==    Address 0x414C9808 is 20 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
==10661==
==10661== Invalid read of size 4
==10661==    at 0x402A757D:
geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void
*, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:61)
==10661==    by 0x402A75C9:
geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void
*, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A75C9:
geos::QuadTreeNodeBase::addAllItemsFromOverlapping(geos::Envelope *, vector<void
*, allocator<void *> > *) (../index/quadtree/QuadTreeNodeBase.cpp:69)
==10661==    by 0x402A656C: geos::Quadtree::query(geos::Envelope *)
(../index/quadtree/Quadtree.cpp:67)
==10661==    Address 0x414C9808 is 20 bytes inside a block of size 36 free'd
==10661==    at 0x40168F45: __builtin_delete (vg_clientfuncs.c:199)
==10661==    by 0x402A6E1B: geos::QuadTreeNode::~QuadTreeNode(void)
(../index/quadtree/QuadTreeNode.cpp:33)
==10661==    by 0x402A77CD: geos::QuadTreeRoot::insert(geos::Envelope *, void *)
(../index/quadtree/QuadTreeRoot.cpp:33)
==10661==    by 0x402A6505: geos::Quadtree::insert(geos::Envelope *, void *)
(../index/quadtree/Quadtree.cpp:57)
pure virtual method called



--------------------------------------------------------------------------------


// g++ test3.cpp -I/usr/local/include/geos -lgeos

#include "stdio.h"
#include "io.h"
#include "geom.h"

using namespace geos;

int main(int argC, char* argV[])
{

WKTReader *r = new WKTReader();
GeometryFactory *geomFactory;
Geometry *g1, *g2 ;

geomFactory= new GeometryFactory( new PrecisionModel(), -1);

//g1 = r->read("MULTIPOLYGON(((1033707.6 1048313.1,1033694.9 1048315.7,1033659.9
1048344.3,1033627.6 1048388.8,1033620.9 1048426.8,1033623.6 1048471.3,1033623.6
1048480.8,1033616.8 1048503.2,1033629.1 1048541.3,1033668.3 1048707.6,1033696.3
1048755.6,1033721.4 1048771.6,1033724.5 1048772,1033737.2 1048772,1033772.1
1048756.4,1033794.6 1048721.9,1033811.1 1048667.4,1033814.8 1048613.6,1033815.1
1048597.5,1033809.2 1048556.1,1033809.3 1048549.6,1033797.1 1048501.9,1033790.9
1048492.2,1033773 1048399.6,1033760.6 1048377.6,1033741.8 1048357.8,1033742.1
1048341.8,1033713.9 1048313.4,1033707.6 1048313.1)))");
//g1 = r->read("POLYGON((1033707.6 1048313.1,1033694.9 1048315.7,1033659.9
1048344.3,1033627.6 1048388.8,1033620.9 1048426.8,1033623.6 1048471.3,1033623.6
1048480.8,1033616.8 1048503.2,1033629.1 1048541.3,1033668.3 1048707.6,1033696.3
1048755.6,1033721.4 1048771.6,1033724.5 1048772,1033737.2 1048772,1033772.1
1048756.4,1033794.6 1048721.9,1033811.1 1048667.4,1033814.8 1048613.6,1033815.1
1048597.5,1033809.2 1048556.1,1033809.3 1048549.6,1033797.1 1048501.9,1033790.9
1048492.2,1033773 1048399.6,1033760.6 1048377.6,1033741.8 1048357.8,1033742.1
1048341.8,1033713.9 1048313.4,1033707.6 1048313.1))");

g1 = r->read("MULTIPOLYGON(((1032188.6 967656.5,1032144.6 967630.25,1032125.7
967612,1032113.3 967585.94,1032113.4 967540.75,1032139.2 967458.44,1032145.8
967394.94,1032133.3 967350.31,1032108.2 967325.25,1032076.7 967311.56,1032051.4
967299.06,1032032.6 967298.94,1032000.8 967279.69,1031975.8 967240.63,1031957.3
967170.63,1031969.8 967152.13,1031963.8 967108.19,1031945.1 967057.38,1031875.7
967018.13,1031856.7 967017.88,1031806.1 967018.06,1031787.1 967010.88,1031711.4
966999,1031660.7 966999.19,1031527.8 967009.81,1031508.9 967004.63,1031427.1
966939.88,1031363.8 966920.44,1031325.8 966939.19,1031300.4 966965.81,1031268.6
966958.63,1031161.6 966913,1031098.1 966932.25,1031003.1 966938.31,1030939.9
966931.94,1030921.1 966925.25,1030877.1 966887,1030832.8 966867.81,1030775.9
966861.69,1030668.6 966829.06,1030599.2 966777.94,1030529.7 966771.31,1030390.2
966795.81,1030270.4 966782.81,1030251.4 966776.63,1030226.3 966776.69,1030213.4
966801.31,1030194.2 966814.69,1030182.3 966661.69,1030150.9 966661.94,1030131.7
966675.31,1030106.1 966712.56,1030093.5 966738.69,1030023.6 966782.25,1029960.4
966788.5,1029934.9 966800.56,1029922.4 966788.06,1029947.9 966736.81,1029941.9
966718,1029929.1 966705,1029910.1 966718.38,1029827.4 966819.25,1029795.6
966832.63,1029790.3 966834.81,1029764 966844.44,1029694.3 966877.06,1029668.6
966876.56,1029637.2 966876.94,1029561.8 966818.94,1029529.6 966870,1029504.6
966851.5,1029485.5 966843.75,1029460.2 966857.38,1029409.9 966805.81,1029391
966798.63,1029372 966817.94,1029365.4 966849.88,1029340.1 966863.44,1029277
966856.13,1029245.2 966869.5,1029232.6 966868.06,1029220 966849.5,1029194.6
966843.06,1029156.6 966862.25,1029131.3 966855.31,1029080.8 966830.38,1029061.9
966830.63,1029036.6 966829.75,1028960.5 966868.06,1028922.6 966867.19,1028884.6
966887.31,1028859.3 966879.38,1028789.9 966842.25,1028726.8 966829.31,1028638.1
966847.63,1028619.1 966860.5,1028581.1 966867.13,1028555.9 966867.19,1028524.3
966840.44,1028499.1 966840,1028473.7 966847.13,1028353 966935.5,1028315.1
966941.63,1028308.2 966938.38,1028302.4 966935.13,1028289.7 966916.63,1028264.6
966897.63,1028252.2 966872.63,1028233.4 966832.75,1028195.6 966814.31,1028043.9
966794.63,1027967.9 966768.25,1027911.3 966737.06,1027848.2 966673.56,1027797.9
966647.06,1027747.5 966640.69,1027671.4 966646.88,1027620.9 966633.56,1027557.8
966595.56,1027532.7 966563.5,1027494.8 966505.44,1027419 966493.13,1027356.2
966460.63,1027324.4 966454,1027305.5 966435.19,1027305.7 966409.06,1027286.7
966384.31,1027229.9 966351.63,1026989.9 966344.75,1026951.8 966338.38,1026831.4
966357,1026749.2 966382.56,1026717.6 966381.94,1026660.8 966376.31,1026572.3
966330.88,1026496.3 966349.69,1026433.1 966342.81,1026344.5 966361.13,1026319.3
966349.13,1026288 966279.25,1026275.4 966260.75,1026269.1 966228.38,1026294.9
966189.69,1026288.7 966164.88,1026295.1 966152.06,1026276.2 966119.75,1026244.4
966113.06,1026219.3 966087.06,1026213.3 966056.19,1026206.9 966030.38,1026181.8
966023.94,1026112 966074.5,1026086.6 966081.13,1026023.6 966061.75,1026004.3
966106.69,1025985.2 966118.56,1025972.8 966111.56,1025966.6 966054.13,1025947.7
966029.31,1025884.5 966009.5,1025871.8 966010,1025827.8 965978.25,1025796.1
965965,1025770.8 965971.63,1025663.1 966034.88,1025625 966065.63,1025593.3
966078.5,1025574.3 966072.75,1025549.2 966040.75,1025486.1 966027.88,1025410
966033.63,1025340.5 966026.5,1025296.2 966059,1025283.1 966109.75,1025295.6
966173.38,1025257.3 966192.63,1025143.4 966230.06,1025099.1 966216.88,1025061.3
966198.44,1024953.8 966223.06,1024878 966185.13,1024846.4 966191.5,1024852.3
966267.5,1024864.8 966300.06,1024864.8 966306.06,1024858.3 966337.5,1024832.8
966369.13,1024744.1 966400.5,1024718.7 966426.19,1024616.6 966604.06,1024559.2
966686.81,1024529.4 966707.13,1024470.6 966724.13,1024426.2 966737.56,1024407.1
966730.88,1024356.8 966686.38,1024312.6 966635.63,1024287.8 966622.56,1024237
966628.25,1024218 966623.06,1024116.9 966620.81,1024040.9 966628.56,1023983.9
966647.06,1023901.3 966716.25,1023856.6 966767.31,1023818.9 966780,1023799.8
966779.81,1023781 966766.5,1023724.1 966754.38,1023635.4 966760.13,1023534.1
966798.56,1023432.8 966823.44,1023375.7 966849,1023020.2 967114.38,1023007.4
967134.5,1022988.3 967140.31,1022963 967140.44,1022937.9 967132.94,1022868
967158,1022817.3 967203.31,1022766.4 967254.06,1022715.7 967304.44,1022671.2
967329.88,1022658.6 967329.94,1022645.8 967342.5,1022633.2 967355.06,1022607.8
967380.75,1022588.6 967399.13,1022563.2 967412.25,1022531.4 967437.69,1022499.8
967456.56,1022455.4 967482.56,1022430.1 967507.19,1022404.7 967539.38,1022373
967538.69,1022334.9 967551.88,1022315.8 967577.75,1022296.5 967627.75,1022296.7
967641.25,1022289.7 967704.75,1022283.3 967743.19,1022270.4 967773.81,1022226.1
967825.38,1022194.3 967863.88,1022168.9 967882,1022130.7 967908.19,1022111.7
967952.19,1022111.4 967965.75,1022098.8 967983.81,1022120.7 968009.44,1022132.1
968049.13,1022174.4 968041.31,1022193.5 968022.44,1022269.4 967996.63,1022358
967991.88,1022370.8 967972.31,1022377.5 967902.75,1022402.9 967858.06,1022466.6
967806.63,1022504.8 967736.81,1022625.6 967609.75,1022689.1 967558.88,1022765
967553.13,1022860 967541.13,1022923.3 967502.81,1022986.6 967477.5,1023062.7
967496.38,1023100.6 967490.75,1023138.6 967458.56,1023138.9 967414.38,1023132.6
967389.56,1023139.2 967369.69,1023132.8 967357.44,1023126.5 967351.19,1023126.4
967337.63,1023132.9 967324.81,1023209.3 967254.88,1023228.3 967229.5,1023253.7
967211.38,1023285.2 967224.56,1023348.6 967231.38,1023373.8 967231.31,1023392.8
967250.06,1023405.4 967249.06,1023493.4 967307.56,1023582 967352.38,1023626.1
967384.19,1023657.4 967436,1023638.3 967453.88,1023612.9 967453.94,1023581.6
967447.25,1023549.8 967454.63,1023518.3 967453.44,1023511.9 967447.19,1023492.9
967454.06,1023480.3 967460.56,1023467.5 967459.63,1023454.8 967473.19,1023461
967479.44,1023498.9 967536.5,1023505 967555.31,1023511.2 967556.13,1023695.1
967499.63,1023713.9 967493.75,1023758.3 967498.94,1023783.6 967493.38,1023815.3
967461.38,1023872.2 967454.44,1023942.1 967410.81,1024011.7 967385.31,1024018.3
967366.44,1024018.4 967347.38,1024031.2 967327.81,1024037.5 967315.5,1024062.9
967296.81,1024095 967239.81,1024120.1 967220.69,1024139.1 967219.88,1024151.8
967221.31,1024196.1 967226.5,1024215.1 967227.19,1024253.1 967221.56,1024284.7
967214.19,1024316.4 967195.25,1024329.1 967183.19,1024348.3 967138.69,1024373.5
967125.63,1024417.9 967120.25,1024456 967126.19,1024493.8 967138.56,1024531.6
967151.5,1024582.1 967164.94,1024613.8 967177.63,1024626.3 967190.19,1024632.6
967208.94,1024613.4 967222.81,1024588.1 967228.38,1024588.1 967253.44,1024613.2
967280,1024632.2 967279.69,1024841.3 967223.13,1024892.1 967190.94,1024911.1
967184.56,1024955.3 967203.75,1025031.1 967191.56,1025037.5 967192.75,1025170.3
967179.56,1025240 967186.19,1025271.4 967199.38,1025296.8 967204.81,1025372.7
967193.56,1025404.4 967174.13,1025467.8 967109.75,1025487.1 967098.38,1025499.9
967101.38,1025506 967097.63,1025512.3 967091.81,1025537.6 967084.69,1025582.2
967060.25,1025645.2 967079.63,1025746.2 967136.56,1025847.3 967150.31,1025910.4
967169.25,1025960.9 967182.06,1026074.8 967175.75,1026093.9 967169.44,1026125.3
967183.69,1026144.1 967195.88,1026201.1 967252.69,1026226.3 967259.69,1026251.6
967246.5,1026333.9 967222.44,1026359.2 967227.94,1026390.6 967279.25,1026598.4
967432.94,1026661.6 967483.94,1026737.1 967528.94,1026787.7 967541.31,1026800.4
967535.25,1026838.1 967554.75,1026875.9 967599.25,1026907.4 967605.44,1026932.9
967605.88,1027123.1 967524.06,1027205.4 967499.5,1027319.6 967461,1027345
967435.88,1027344.9 967397.25,1027332.6 967352.63,1027326.4 967327.75,1027332.9
967288.38,1027345.5 967288.88,1027364.6 967295.06,1027414.8 967378.25,1027439.9
967391.19,1027477.9 967366,1027503.3 967385.5,1027515.8 967410.56,1027490.3
967435.69,1027546.7 967569.75,1027565.4 967582.5,1027609.9 967582.63,1027666.4
967640.44,1027691.6 967647.38,1027723.4 967633.94,1027742.3 967647.75,1027761.3
967646.94,1027780 967660.19,1027805.4 967665.63,1027881.5 967654.38,1028014.1
967673.81,1028045.8 967686.06,1028064.3 967723.81,1028038.8 967794.19,1028051.1
967814.25,1028139.9 967832.5,1028165.1 967826.88,1028216.4 967737.94,1028235.3
967718.13,1028285.9 967693.38,1028330.2 967686.94,1028349.3 967694.19,1028399.7
967713.13,1028507.3 967726.06,1028620.6 967790,1028677.9 967758,1028759.9
967771.56,1028791.4 967791.25,1028829.4 967798.19,1028924.4 967771.56,1028943.4
967778.25,1028962.2 967810.63,1029075.7 967868,1029069.3 967893.31,1029037.3
967913.31,1029018.6 967906.06,1028917.5 967848.63,1028841.9 967822.25,1028803.8
967861,1028790.6 967962.38,1028790.5 967981.94,1028802.8 968045.69,1028846.9
968090.44,1028928.9 968097,1028954.4 968096.88,1029093.5 968078.94,1029169.6
968066.19,1029226.4 968072.31,1029384.4 968086.19,1029434.9 968105.06,1029529.8
968137.63,1029586.6 968117.69,1029650.3 968061.31,1029802.8 967953.5,1029847.1
967922,1029954.9 967883.31,1030055.9 967896.56,1030137.8 967941.25,1030200.9
967999.25,1030213.5 968024.81,1030200.6 968056.44,1030200.4 968088.56,1030231.9
968113.88,1030307.9 968120.19,1030421.6 968140.44,1030453.2 968140.56,1030485
968128.19,1030586.4 968077.25,1030649.5 968083.56,1030674.9 968077.5,1030751.1
968045.63,1030852.1 968033.31,1030934.4 968046.38,1030959.7 968046.81,1030985.1
968015.13,1031004.3 967957.13,1031042.6 967887.81,1031080.6 967856.06,1031112.3
967881.25,1031143.4 967952.25,1031231.7 968009.19,1031244.3 968034.75,1031250.5
968067.06,1031288.1 968143.25,1031287.9 968181.88,1031275 968219.5,1031274.9
968251.63,1031293.8 968270.44,1031287.4 968289.25,1031280.9 968321.13,1031299.6
968359.94,1031305.8 968385.81,1031293 968416.94,1031293 968436,1031330.8
968455.94,1031368.9 968443.31,1031406.9 968418.13,1031432.3 968411.5,1031457.4
968417.94,1031533.2 968456.38,1031558.6 968418.19,1031577.8 968411.81,1031621.8
968431.06,1031672.3 968463,1031672.2 968488.13,1031672.2 968507.69,1031691.2
968520.88,1031710.1 968514.56,1031792.4 968508.56,1031817.6 968508.5,1031899.7
968527.63,1031962.9 968560,1032019.5 968585.19,1032070 968630.19,1032082.6
968649.25,1032113.9 968681.06,1032182.9 968821,1032252.1 968891.31,1032296.4
968911,1032315.3 968905.25,1032397.4 968925.31,1032441.5 968968.56,1032473.1
968987.81,1032529.8 969001.5,1032618.1 969033.81,1032662.4 969078.63,1032674.6
969129.25,1032718.9 969147.94,1032762.9 969193.25,1032819.7 969242,1032857.3
969249.44,1032901.9 969229.94,1032920.8 969243.19,1032932.5 969306.44,1033019.5
969416.06,1033075.9 969448.81,1033158.1 969449.31,1033208.4 969461.75,1033264.6
969520.5,1033308.5 969546.25,1033465 969674.56,1033508.5 969738.44,1033552.3
969784.25,1033652.8 969836.63,1033708.7 969893.94,1033740.4 969907.69,1033835
969927.75,1033872.4 969958.75,1033903.2 970035.19,1034022 970138.5,1034146.9
970268.13,1034190.9 970287.88,1034248.1 970274.88,1034273.1 970287.81,1034328.7
970390.81,1034366.4 970416.31,1034410.6 970423.44,1034441.9 970442.75,1034516.6
970544.88,1034541.3 970583.44,1034572.3 970634.81,1034596.4 970724.13,1034640.4
970743.25,1034710.2 970737.81,1034747.9 970750.75,1034785.3 970795.38,1034860.9
970821.69,1034873.3 970847.75,1034898.1 970879.81,1034960.9 970918.81,1034973.1
970943.81,1034972.4 970995.06,1034952.4 971072.19,1034957.9 971148.19,1034982.8
971173.19,1035008.2 971180.13,1035040 971174.25,1035229.1 971208.38,1035486.1
971401.13,1035510.5 971458.25,1035534.6 971561.06,1035572.3 971586.56,1035635.3
971594.38,1035748.9 971614.69,1035837.6 971602.88,1035862.8 971608.81,1035894.3
971635.56,1035956.6 971706.19,1036075.9 971757.75,1036214.8 971785,1036233.9
971785.19,1036284.4 971786.56,1036347.6 971792.88,1036398.6 971768.13,1036455.3
971762.19,1036474.5 971755.88,1036576.2 971712.44,1036595.1 971712.63,1036607.1
971763.31,1036612.6 971834.31,1036613.1 971899,1036694.4 971952.69,1036731.3
972020.88,1036756.4 972033.88,1036826 972011.31,1036976.8 972092.75,1036995.4
972130.06,1037001.7 972137.31,1037021.5 972150.5,1037045.9 972156.5,1037108.3
972209.06,1037170.5 972292.19,1037195.4 972336.25,1037195.3 972362.31,1037220.1
972393.88,1037225.7 972445.81,1037275.6 972509.38,1037370.2 972548.06,1037389.4
972541.69,1037440.8 972466.31,1037530.3 972402.81,1037613.6 972365.63,1037723.8
972281.69,1037775.6 972255.88,1037814.6 972230.69,1038017.9 972194.44,1038036.8
972194.63,1038080.1 972220.38,1038186.6 972234.88,1038205.6 972236.13,1038313.5
972192.94,1038408.2 972168.31,1038509.2 972163.5,1038585.5 972113.63,1038642.6
972107.63,1038661.8 972089.25,1038693.3 972082.94,1038712.3 972082.63,1038756.2
972109.31,1038781.6 972109.31,1038844.9 972103.56,1038914.8 972085.56,1038946.3
972085.75,1038977.8 972105.44,1039034.7 972098.5,1039110.7 972106.31,1039205.9
972081.69,1039358.1 972057.19,1039396.7 972025.94,1039410 971987.75,1039501.9
971873,1039521.2 971847.06,1039546.4 971841.5,1039577.7 971874.31,1039591.8
971890.19,1039616.6 971922.25,1039635.4 971936.56,1039660.7 971923.44,1039691.9
971924.56,1039711.1 971924.25,1039813.5 971967.06,1039885.1 971976.06,1039904.8
971974.75,1040017.1 971879.19,1040071.8 971851.75,1040166.7 971845.75,1040236.6
971815.19,1040319.1 971802.63,1040610.4 971762.19,1040763.2 971686.94,1040832.9
971694.5,1040889.6 971688.56,1041124.6 971600.81,1041188.2 971570.5,1041201.3
971539.44,1041226.9 971520.25,1041258.6 971513.88,1041340.8 971521.44,1041359.7
971521.13,1041385.6 971483.88,1041404.8 971470.5,1041474.4 971458.56,1041519.4
971395.94,1041544.8 971388.81,1041620.5 971415.19,1041714.5 971467.44,1041764.8
971493.81,1041777.7 971487.31,1041871.3 971583.63,1041972 971629.06,1042041.4
971618.56,1042066.8 971623.94,1042091.9 971650,1042148.4 971670.13,1042281.5
971644.94,1042326.3 971614.5,1042382.9 971622.06,1042421 971614.94,1042466
971571.44,1042491.2 971564.81,1042522.4 971584.13,1042541.4 971584.69,1042586
971572.81,1042648.5 971631.38,1042717.9 971650,1042755.8 971644.31,1042800.6
971605.81,1042851.4 971581.06,1042945.9 971608.19,1042965.1 971608.38,1043009.6
971582.88,1043028.6 971590.13,1043065.5 971660.81,1043109.6 971687,1043122.3
971686,1043171.9 971756.06,1043190.6 971781.81,1043240.9 971795.75,1043317.4
971758.44,1043336.2 971758.13,1043386.5 971791.13,1043449.7 971784.88,1043519.4
971792.5,1043538.2 971792.13,1043589.1 971780.44,1043614.4 971767.88,1043672.2
971711.69,1043684.9 971692.13,1043704.2 971673.25,1043729.4 971667.63,1043754.8
971673.63,1043779.8 971699.63,1043829.8 971732.13,1043892.8 971757.5,1043924.6
971745.13,1044026.7 971670.56,1044128.5 971627.13,1044364.6 971458.06,1044549
971357.94,1044651.2 971294.94,1044752.8 971277.5,1044879.1 971290.75,1044904.3
971291.69,1044967.9 971260.38,1045025.6 971203.75,1045076.6 971165.94,1045146.4
971154,1045184.5 971129.25,1045210 971104.13,1045261.1 971079.38,1045292.9
971047.44,1045369.9 970984.94,1045510.1 970884.69,1045605.2 970866.06,1045681.5
970841.75,1045713.4 970816.38,1045814.9 970779.38,1045916.9 970736,1046068.8
970717.94,1046163.6 970726.44,1046226.7 970739.31,1046265 970707.06,1046322.6
970663.56,1046348.5 970613.81,1046369.2 970480.5,1046407.9 970403.56,1046575
970208.38,1046606.6 970189.94,1046670.2 970177.25,1046721 970159,1046739.9
970165.25,1046853.5 970179,1046935.6 970193,1046992.6 970187.06,1047017.8
970193.06,1047080.9 970206.88,1047112.5 970207.13,1047207.5 970183.5,1047485.9
970180.19,1047599.9 970162.31,1047682 970169.81,1047700.9 970169.06,1047802.6
970151.19,1047878.6 970145.44,1047915.9 970197.5,1047959.9 970223.69,1047991.3
970223.94,1048073.6 970217.88,1048105.5 970205.5,1048219.7 970168.56,1048263.9
970168.69,1048282.9 970175.88,1048358.9 970176.13,1048421.9 970195.56,1048542.2
970171.38,1048567.8 970158.75,1048599.3 970166.5,1048669 970159.94,1048687.9
970160.69,1048694 970180.5,1048680.9 970199.13,1048680.8 970236.75,1048711.6
970269.06,1048743.3 970269.69,1048762.3 970269.38,1048857.5 970238.25,1048920.8
970246.06,1048946.3 970227.44,1048940.8 970175.5,1048884.4 970123.75,1048891.1
970098.88,1048923 970073.44,1048954.8 970068.06,1048998.6 970094.31,1049035.6
970157.94,1049041.5 970201.81,1049065.9 970260,1049121.8 970349.88,1049259.1
970504.06,1049284 970516.06,1049340.4 970561.81,1049466.4 970607.13,1049529
970659.63,1049591.9 970679.56,1049667.8 970699.38,1049686.9 970693.56,1049737.8
970668.31,1049808.1 970605.13,1049858.6 970599.5,1049903.4 970568,1049966.6
970574.81,1050055.5 970544,1050087.1 970538.63,1050112.3 970539.06,1050175.5
970563.94,1050352 970585.56,1050447.1 970573.94,1050541.6 970594.06,1050567.1
970588.38,1050599.1 970562,1050681.5 970537.44,1050700.5 970538.63,1050763.5
970564,1050820.4 970559.06,1050845.8 970559,1050877.1 970577.75,1050940.3
970598.13,1051065.9 970663,1051128.9 970675.88,1051211.4 970664.38,1051256
970619.81,1051281.6 970614.75,1051312.8 970640,1051331.5 970659.75,1051350.5
970665.94,1051369.5 970660.13,1051388.4 970666.38,1051425.3 970756.06,1051468.9
970800.88,1051544.1 970851.81,1051662.8 970974.75,1051712.9 971013.19,1051857.6
971065.25,1051920.9 971059.56,1051958.6 971073.5,1052059.9 971087.19,1052167.3
971100.25,1052293.8 971083.81,1052375.8 971103.88,1052420 971111,1052515.1
971099,1052533.9 971098.69,1052578.3 971112.88,1052603.4 971112.81,1052635.1
971112.44,1052736.1 971120.69,1052831.5 971089.06,1052888.8 971058.56,1052946.3
971007.88,1053066.5 970983.19,1053117.8 970952.44,1053149.9 970901.94,1053226.8
970832.5,1053272 970750.81,1053356.1 970604.25,1053508.9 970517.5,1053730.9
970481.44,1053781.9 970449.75,1053838.9 970431.19,1053940.6 970407.38,1054061.4
970332.5,1054131.9 970269.31,1054151.4 970224.38,1054189.9 970181.06,1054183.9
970162.25,1054177.9 970136.44,1054248.1 970079.31,1054254.8 970049.38,1054248.9
970016.06,1054262 969978.38,1054256 969940.06,1054269.4 969895.81,1054269.8
969870.19,1054245.4 969800,1054264.4 969780.63,1054296 969799.88,1054321.3
969800.31,1054315.4 969769.5,1054322 969743.13,1054392.4 969679.94,1054399.3
969628.94,1054412.4 969604.88,1054437.9 969579.63,1054462.9 969604.69,1054524.9
969700.81,1054574.9 969732.81,1054625.4 969753.31,1054638.1 969752.19,1054713.6
969792.19,1054794.5 969881.5,1054920 969958.94,1055102.6 970016.38,1055109.3
970018.63,1055128.1 970018.81,1055223.5 969969.63,1055407.8 969900.63,1055712
969847,1055750.4 969822.31,1055866.1 969645.38,1055974.8 969563.5,1056039
969501.06,1056230 969387.13,1056268.6 969336.81,1056389.9 969261.44,1056421.9
969218.5,1056511.4 969155.44,1056543.5 969110.44,1056537.4 969092.63,1056544.3
969041.69,1056569.8 969028.56,1056588.8 969035.81,1056614.1 969035.75,1056645.6
969041.94,1056671 969043.38,1056690.1 969017.44,1056703.1 968998.38,1056805.6
968891.19,1056857.1 968809.25,1056876.3 968789.38,1056959.3 968746.19,1057067.6
968671.38,1057105.6 968659.19,1057176 968608.56,1057271.3 968585,1057436.8
968497.19,1057468.5 968478.25,1057481.6 968459.19,1057475.4 968439.38,1057475.6
968414.25,1057507.6 968382.81,1057565.1 968344.75,1057609.6 968307.75,1057666.8
968307.81,1057723.9 968283.31,1057781.5 968233.25,1057781.9 968207.63,1057814
968176.19,1057872 968068.88,1057910.9 968011.56,1057974.5 967980.81,1058057.6
967905,1058133.6 967887.75,1058184.9 967836.94,1058223.1 967824.25,1058311.6
967812.94,1058439 967750.31,1058496.1 967737.88,1058635.9 967681.75,1058706.4
967612.63,1058757.5 967575.81,1058833.5 967563.56,1058852.8 967544.19,1058879
967462.31,1058956.8 967323.56,1059059.1 967221.94,1059225 967116.06,1059282.6
967059.44,1059327.3 967027.94,1059417 966933.38,1059506.9 966838.81,1059519.6
966812.69,1059513.8 966781.31,1059527.1 966737.06,1059590.9 966686.69,1059623.1
966630.19,1059680.8 966579.56,1059694.4 966509.31,1059745.8 966445.94,1059746
966420.88,1059709 966351.13,1059709.4 966312.5,1059767.8 966205.25,1059826
966091.38,1059879.1 965887.5,1059905.5 965812.13,1059924.6 965799.38,1059886.3
965718.69,1059888.6 965633.81,1059869.8 965633.19,1059787.8 965619.56,1059655.4
965580.5,1059642.8 965579.56,1059592.3 965573.19,1059554.6 965547.69,1059516.9
965540.25,1059491.3 965547.38,1059427 965628.38,1059420.5 965647.25,1059273.4
965779.88,1059163.4 965982.13,1059092.6 966070.44,1059085.4 966147.44,1059021
966235.94,1059014.3 966267.31,1059019.9 966324.31,1058998.4 966521.81,1058972.3
966585.13,1058889.3 966648.38,1058876.9 966659.88,1058863.6 966673,1058831
966755.69,1058767.3 966799,1058716.4 966824.19,1058658.8 966880.81,1058645.6
966912.94,1058543.4 967013.63,1058460.5 967043.75,1058434.9 967069.38,1058459.9
967095.44,1058484.8 967147,1058484.4 967166.06,1058427.4 967158,1058370.9
967132.81,1058320.1 967158.06,1058301.1 967156.88,1058257.1 967130.63,1058238.1
967131.44,1058091.8 967193.31,1058047.4 967199.75,1058003 967217.19,1057939.9
967203.31,1057901.6 967222.94,1057876 967260.63,1057856.8 967285.06,1057799.6
967298.06,1057742.8 967284.94,1057717.5 967290.5,1057673.3 967277.31,1057635.3
967296,1057584.3 967326.75,1057489 967351.88,1057330 967420.81,1057285.6
967438.75,1057227.8 967501.88,1057189.6 967521.56,1057157.9 967526.44,1057075.1
967570.06,1057011 967633.5,1056953.3 967708.69,1056902.4 967721.38,1056889.9
967721.44,1056870.3 967771.38,1056806.1 967840.81,1056742.6 967872.63,1056716.9
967897.31,1056678 967973.19,1056645.8 968011.19,1056639 968050.06,1056645.1
968067.81,1056607.1 968068.5,1056588.3 968061.75,1056550.4 968067.38,1056441.8
968143.19,1056396.9 968198.81,1056301.1 968256.06,1056275.8 968293.75,1056274.5
968363.5,1056274.5 968377.06,1056254.9 968421,1056241.8 968458.19,1056235.6
968471.44,1056209.9 968484.13,1056165.6 968470.44,1056128 968451.44,1056026.3
968494.94,1055892.4 968570.38,1055791.1 968587.69,1055727.3 968631.06,1055670.3
968650,1055587.4 968699.69,1055447.5 968756.31,1055295.5 968766.25,1055263.4
968792.19,1055231.6 968830.63,1055180.6 968855.38,1055073 968866.5,1054932.3
968985.88,1054868.4 969042.75,1054843 969048.81,1054811.5 969035.63,1054798.6
969035.63,1054779.8 969034.94,1054600 969256.25,1054561.5 969281.44,1054536
969312.19,1054510 969363.38,1054478.4 969369.75,1054415.3 969355.94,1054313.4
969418.94,1054274.9 969443.63,1054223.9 969500,1054128.4 969544.69,1054102.5
969587.88,1054064.4 969606.56,1054032.8 969612.94,1053969.4 969605.63,1053944
969619.25,1053918.3 969662.5,1053644.3 969812.5,1053529.5 969881.13,1053498
969887,1053435 969874.56,1053358.8 969886.38,1053321 969872.44,1053289.9
969827.56,1053264.8 969814.56,1053125.6 969806.5,1053100.6 969801.06,1053043.5
969818.5,1053005 969857.25,1052973.3 969868.13,1052795.4 969918.38,1052642.8
969980,1052566.9 969998.25,1052497.3 970004.25,1052472 969996.81,1052415.1
970003.75,1052313.5 970020.63,1052263 970019.75,1052243.8 970019.56,1052168
970031.31,1052111.4 970006.56,1052023 969985.25,1051998 969978.81,1051941.5
969934.06,1051877.9 969946.31,1051820.9 969964.25,1051802 969957.56,1051771.1
969913.69,1051745.6 969913.81,1051701.1 969925.75,1051682.4 969918.56,1051468
969852.38,1051361.3 969794.19,1051285.9 969768.31,1051260.9 969741.81,1051248.1
969741.81,1051197.9 969716.88,1051141.3 969695.69,1051090.8 969689.88,1050983
969707.5,1050856.9 969681.25,1050800.5 969634.94,1050725.8 969551.44,1050682.3
969475.5,1050620.4 969366.25,1050595.4 969353.31,1050582.4 969360.31,1050557.4
969339.81,1050557.9 969320.75,1050551.9 969295.94,1050520.5 969270.19,1050432.6
969218.25,1050224.5 969176.88,1050205.5 969177.69,1050168.3 969201.88,1050141.9
969201.5,1050073.9 969067.44,1050049 969047.94,1050029.9 969048.25,1049922.3
969066.38,1049820.4 969116.31,1049763.4 969109.25,1049700.1 969114.44,1049567.9
969094.5,1049511.4 969049.25,1049492.5 969049,1049448 969055.44,1049429
969047.69,1049366.6 968997.69,1049259.6 968952.06,1049202.8 968957.5,1049139.5
968949.19,1049056.3 968976.81,1049037.8 968987.13,1048987 968999.75,1048898.3
969004.56,1048866.8 968997.88,1048816.6 968971.88,1048772.5 968965.25,1048721.9
968970.94,1048607.3 969013.94,1048549.9 969045.94,1048448.8 969056.75,1048334.6
969080.69,1048290.1 969087.13,1048162.9 969149.63,1048042.5 969167.31,1047998.3
969166.69,1047903.3 969160.19,1047884.6 969153,1047770.5 969177.94,1047700.5
969214.94,1047674.8 969240.13,1047630.4 969258.63,1047585.8 969271,1047509.4
969321.38,1047477.7 969314.69,1047446.1 969326.63,1047426.9 969340,1047383
969313.75,1047364.2 969301,1047319.6 969332.56,1047192.2 969406.69,1047173.1
969400.38,1047154.2 969393.19,1047135.4 969373.94,1047110.4 969361.5,1047072.5
969368.06,1046990.6 969347,1046920.9 969346.44,1046889.6 969315.13,1046826.9
969281.69,1046807.8 969282.5,1046706.4 969306.38,1046598.7 969317,1046554.3
969342.44,1046452.6 969354.31,1046421 969360.19,1046345.3 969346.81,1046243.9
969371.25,1046225.2 969382.56,1046192.6 969422.06,1046147.9 969453.06,1046128.9
969445.81,1046078.7 969426.38,1046059.8 969425.69,1045918.8 969572.13,1045822.1
969710.13,1045789.8 969773.75,1045764.3 969785.81,1045745.3 969792.19,1045675.6
969785.06,1045492.2 969802.94,1045377.9 969845.94,1045307.9 969877,1045263.7
969857.31,1045219.6 969849.69,1045200.6 969850.44,1045181.3 969888.38,1045162
969906.75,1045067.1 969912.81,1044818.9 970024.69,1044799.8 970031,1044724.2
970016.69,1044673.4 970029.81,1044494.8 970148.38,1044462.8 970192.81,1044429.8
970287.06,1044379 970325.31,1044296.4 970344.38,1043904.4 970333.44,1043847.6
970319.25,1043816.1 970319.13,1043790.7 970319.19,1043740.5 970293.19,1043689.9
970279.81,1043614 970298.13,1043487.8 970265.38,1043335.4 970313.94,1043183.3
970350.56,1043132.4 970356.25,1043082.4 970317.19,1043031.9 970311.31,1043000.3
970311.13,1042968.3 970355.13,1042943.1 970341.19,1042879.9 970321.81,1042791.6
970308,1042741.3 970294.56,1042653.3 970242.69,1042596.8 970224,1042577.5
970229.31,1042539.8 970223.44,1042476.7 970203,1042413.6 970197.19,1042362.8
970208.38,1042312.1 970207,1042148.1 970199.44,1042034.1 970204.75,1042008
970256.06,1042001.4 970274.38,1041944.2 970306.38,1041887.1 970317.31,1041842.9
970305.19,1041817.9 970285.69,1041799.1 970279.5,1041754.3 970323.5,1041735.1
970341.38,1041715.9 970347.69,1041665.8 970322.25,1041646.9 970309,1041583.6
970314.75,1041533.3 970276.19,1041470.7 970249.75,1041458.6 970219.75,1041420.9
970166.13,1041370.5 970159.19,1041269.1 970178.63,1041250.2 970184.38,1041173.9
970202.19,1041110.7 970201.88,1041078.8 970226.81,1041047 970232.69,1040946.1
970212.38,1040876.5 970217.31,1040787.9 970210.56,1040496.6 970259.13,1040401.3
970302.31,1040369.5 970295.63,1040344.4 970295.69,1040325.1 970307.5,1040230.3
970313.06,1040198.5 970325.94,1040135.4 970319.13,1040008.1 970368.13,1039989.3
970361.38,1039944.8 970373.88,1039843.3 970410.25,1039824.1 970410.56,1039780.1
970404.38,1039761.3 970397.19,1039748.4 970397.69,1039698.3 970371.81,1039616.3
970357.69,1039565.6 970356.31,1039464.3 970362.19,1039400.8 970380.88,1039337.9
970361,1039312.4 970361.06,1039160.8 970372.06,1039065.8 970378.13,1038964.9
970357.81,1038882.4 970368.81,1038813 970356.25,1038749.8 970360.94,1038680.4
970334.81,1038636.2 970353.25,1038610.3 970391.94,1038590.4 970455,1038564.8
970492.75,1038520.3 970511.19,1038482.2 970511.25,1038431.8 970504.38,1038412.8
970497.13,1038393.7 970503.44,1038343.4 970490.56,1038299.2 970483.38,1038280.2
970489.75,1038260.7 970528.19,1038247.5 970578.94,1038183.8 970609.19,1038056.4
970684.88,1037987.2 970658.19,1037968.2 970664.56,1037930.4 970645.56,1037911.5
970625.31,1037867.3 970638.25,1037848.3 970632,1037779.4 970574.25,1037741.2
970598.44,1037721.9 970617.31,1037702.9 970623.69,1037639.8 970609.75,1037576.5
970628.94,1037513.4 970614.63,1037436.9 970653,1037411.6 970658.63,1037380.1
970651.94,1037354.7 970658,1037303.4 970696.81,1037277.8 970721,1037252.6
970733.56,1037221.1 970726.94,1037195.7 970732.5,1037093.8 970788.5,1037062.1
970795.38,1037036.6 970807.44,1037005.1 970795.25,1036979.9 970794.31,1036941.4
970825.06,1036909.8 970832.44,1036846.9 970812,1036815.4 970792.81,1036697.5
970613.25,1036647.5 970568.19,1036452.4 970495.75,1036377.1 970444.25,1036364.4
970444.25,1036320.7 970412,1036183.8 970232.25,1036133.8 970180.69,1036089.7
970161,1036045.9 970129.19,1036021.1 970083.63,1035889.4 969999.94,1035833
969961.19,1035808.1 969929.69,1035771.4 969813.81,1035746.9 969762.69,1035671.8
969704.19,1035659.8 969648,1035641.1 969621.75,1035590.9 969595.75,1035571.9
969596,1035540.3 969601.88,1035515 969601.94,1035490.4 969556.38,1035471.6
969537.13,1035452.6 969537.38,1035389.3 969549.63,1035351.8 969504.56,1035352.4
969453.44,1035352.6 969433.81,1035321.3 969408.56,1035289.8 969408.94,1035099.3
969457.56,1035017.4 969437,1034992.4 969424,1034966.8 969443.19,1034953.6
969481.38,1034934.4 969499.75,1034915.5 969500.06,1034865.2 969486.63,1034840.2
969473.63,1034821.1 969460.88,1034783.1 969453.5,1034739.2 969433.25,1034695.9
969363.88,1034677.1 969343.63,1034677.8 969286.38,1034691.1 969243.25,1034691.3
969223.63,1034629.1 969146.5,1034460.1 968992.69,1034435.1 968979.69,1034409.6
968984.75,1034230.4 969167.44,1034173.1 969198.5,1034122.2 969204.63,1033914.2
969164.81,1033863.7 969144.44,1033838.7 969131.94,1033789.6 969003.63,1033733.4
968946.25,1033689.4 968932.63,1033645.4 968894.38,1033627.2 968849.5,1033627.5
968811.88,1033647.2 968766.81,1033647.4 968748.31,1033622.6 968716.25,1033622.9
968691.19,1033642.1 968671.25,1033661 968670.94,1033679.8 968691.19,1033692.1
968710.31,1033704.9 968710.19,1033742.7 968717.13,1033761.9 968698.25,1033768.8
968647.81,1033693.9 968576.25,1033700.4 968551.88,1033706.9 968538.63,1033713.5
968519.75,1033707.4 968493.38,1033688.9 968468.56,1033663.6 968467.69,1033587.1
968512.06,1033555.6 968517.94,1033529.9 968543.06,1033541.9 968587.75,1033528.9
968613.88,1033496.8 968656.88,1033496.5 968675.94,1033502.7 968688.69,1033489.8
968714.38,1033470.7 968714.19,1033408.8 968618.44,1033290.1 968496.06,1033247.3
968380.5,1033216.1 968342.19,1033096.5 968283.63,1033058.9 968251.06,1033014.6
968231.38,1032964.3 968179.81,1032913.8 968146.38,1032888.6 968114.31,1032825.6
968093.94,1032749.6 968084.63,1032724.3 968078.19,1032673.9 968021.13,1032598.8
967867.31,1032542.3 967778.38,1032460.3 967752.25,1032384.4 967739.94,1032327.5
967751.81,1032301.9 967771.56,1032238.6 967783.75,1032207.1 967784.13,1032188.1
967776.44,1032169.6 967700.44,1032182.4 967675.31,1032188.6 967656.5),(1026124.3
966144.25,1026143.3 966144.44,1026162.1 966163.69,1026149.4 966176.25,1026124
966170.38,1026111.4 966156.88,1026124.3 966144.25),(1023891.9
967359.81,1023910.8 967360,1023898.1 967385.63,1023866.1 967410.63,1023802.9
967416.75,1023771.4 967410.13,1023783.9 967390.5,1023866.6 967365.88,1023891.9
967359.81),(1022975.6 967177.5,1023045.1 967190.56,1023057.6 967210.13,1022994.1
967261.5,1022930.5 967318.38,1022835.6 967369.06,1022765.6 967419.69,1022759.3
967400.88,1022772.3 967361.69,1022791.6 967298.19,1022810.8 967260.75,1022836.2
967235.06,1022880.5 967209.63,1022931.3 967191.38,1022975.6 967177.5),(1049960.6
970046.38,1049979.5 970053.13,1050023 970111.44,1050066.8 970143.19,1050109.8
970245.25,1050090.5 970271.06,1050045.9 970289.56,1050020.8 970288.63,1049989.1
970281.94,1049944.8 970294.38,1049925.9 970288.13,1049913.5 970262.06,1049907.9
970206.13,1049927.5 970148.63,1049921.5 970134.81,1049928.5 970077.81,1049960.6
970046.38),(1023139.9 967210.69,1023158.9 967210.81,1023152.3
967242.75,1023127.1 967274.44,1023088.6 967338.75,1023075.7 967414.06,1023018.4
967439.56,1022980.5 967446.19,1022917.1 967458.88,1022891.9 967470.06,1022860.1
967496,1022790.4 967508.44,1022765.1 967508,1022759.3 967463.56,1022809.9
967420.31,1022854.3 967400.38,1022917.7 967369.56,1023019.4 967286.5,1023044.9
967254.81,1023095.5 967223.06,1023139.9 967210.69),(1031826.9
967897.06,1031845.9 967909.81,1031864.5 967979.75,1031857.6 968062.81,1031882.6
968183.69,1031888.3 968259.69,1031869.4 968273.56,1031831.4 968260.56,1031787.4
968234.38,1031736.8 968227,1031654.7 968195.38,1031623.3 968138,1031604.6
968081.13,1031604.8 968055,1031649.3 968010.94,1031700.2 967979.25,1031725.4
967959.56,1031801.5 967909.75,1031826.9 967897.06)))" );


string s= g1->toString();
cout << "geom1 = "<<s << endl;

try {

if (g1->isValid())
cout <<" is valid" << endl;
else
cout << " in NOT valid "<< endl;
}
catch(...)
{
cout<<"error thrown"<<endl;
}
}




--------------------------------------------------------------------------------


> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>


From dblasby at refractions.net  Tue Sep 30 20:00:59 2003
From: dblasby at refractions.net (David Blasby)
Date: Fri Nov  2 20:52:09 2007
Subject: [geos-devel] is this a big leak?
Message-ID: <3F7A193B.9040209@refractions.net>

Yuri,

Find attached a program that creates a bunch of multipolygons and unions 
them together.

It appears to leak memory quite quickly. Valgrind says:



==3035== 267096 bytes in 41 blocks are still reachable in loss record 14 
of 14
==3035==    at 0x40168BBF: malloc (vg_clientfuncs.c:103)
==3035==    by 0x804AECA: __default_alloc_template<true, 
0>::_S_chunk_alloc(unsigned int, int &) (/usr/include/g++-3/stl_alloc.h:490)
==3035==    by 0x804ACAB: __default_alloc_template<true, 
0>::_S_refill(unsigned int) (/usr/include/g++-3/stl_alloc.h:531)
==3035==    by 0x402D82FB: basic_string<char, string_char_traits<char>, 
__default_alloc_template<true, 0> >::replace(unsigned int, unsigned int, 
char const *, unsigned int) (/usr/include/g++-3/stl_alloc.h:332)
==3035==    by 0x402CE628: __static_initialization_and_destruction_0 
(/usr/include/g++-3/std/bastring.h:223)
==3035==    by 0x402CEAB1: 
geos::TopologyValidationError::TopologyValidationError(int, 
geos::Coordinate) (/usr/include/g++-3/stl_map.h:76)
==3035==    by 0x402D7424: (within /raid/local/lib/libgeos.so.1.0.0)
==3035==    by 0x4000CA20: _dl_init (dl-init.c:70)
==3035==    by 0x400012F0: (within /lib/ld-2.2.4.so)
==3035==
==3035== LEAK SUMMARY:
==3035==    definitely lost: 0 bytes in 0 blocks.
==3035==    possibly lost:   0 bytes in 0 blocks.
==3035==    still reachable: 267936 bytes in 54 blocks.
==3035==         suppressed: 0 bytes in 0 blocks.
==3035==

I assume this is a leak of some sort - its a bit of a funny leak.

dave
-------------- next part --------------
// g++ -g test6.cpp -I/usr/local/include/geos -lgeos; ./a.out
// g++ -g test6.cpp -I/usr/local/include/geos -lgeos ; valgrind --leak-check=yes --num-callers=10 ./a.out

#include "stdio.h"
#include "io.h"
#include "geom.h"

using namespace geos;

double global_offset = 0;
    PrecisionModel *pm= new PrecisionModel();
	GeometryFactory *geomFactory = new GeometryFactory( pm, -1);

//create a simple multi-polygon
// offset shift the polygon to the left <offset> units
// MULTIPOLYGON (((0.0000000000000000 0.0000000000000000, 10.0000000000000000 0.0000000000000000, 10.0000000000000000 10.0000000000000000, 0.0000000000000000 10.0000000000000000, 0.0000000000000000 0.0000000000000000), (2.0000000000000000 2.0000000000000000, 4.0000000000000000 2.0000000000000000, 4.0000000000000000 4.0000000000000000, 2.0000000000000000 4.0000000000000000, 2.0000000000000000 2.0000000000000000)))

Geometry *a(double offset)
{


	Geometry *g1, *g2 ;
    Coordinate *c;
    CoordinateList *cl;
    LinearRing *outerRing;
    vector<Geometry *> *innerRings=new vector<Geometry *>;


	LinearRing *innerRing;
    vector<Geometry *> *polys=new vector<Geometry *>;

	cl = new BasicCoordinateList(5);


	c = new Coordinate(0+offset, 0);
	cl->setAt( *c ,0);
	delete c;
	c = new Coordinate(10+offset, 0);
	cl->setAt( *c ,1);
	delete c;
	c = new Coordinate(10+offset, 10);
	cl->setAt( *c ,2);
	delete c;
	c = new Coordinate(0+offset, 10);
	cl->setAt( *c ,3);
	delete c;
	c = new Coordinate(0+offset, 0);
	cl->setAt( *c ,4);
	delete c;

	outerRing = (LinearRing*) geomFactory->createLinearRing(cl);


	cl = new BasicCoordinateList(5);


	c = new Coordinate(2+offset, 2);
	cl->setAt( *c ,0);
	delete c;
	c = new Coordinate(4+offset, 2);
	cl->setAt( *c ,1);
	delete c;
	c = new Coordinate(4+offset, 4);
	cl->setAt( *c ,2);
	delete c;
	c = new Coordinate(2+offset, 4);
	cl->setAt( *c ,3);
	delete c;
	c = new Coordinate(2+offset, 2);
	cl->setAt( *c ,4);
	delete c;

			innerRing = (LinearRing *) geomFactory->createLinearRing(cl);
			innerRings->push_back(innerRing);


	g1 = geomFactory->createPolygon(outerRing, innerRings);

	polys->push_back(g1);

	g2 = geomFactory->createMultiPolygon(polys);



	return g2;
}

//unions
//    aa  AND
//    a new geometry, which is the standard multipolygon translated to the right

Geometry *op(Geometry *aa)
{
	Geometry  *bb, *cc;


		bb = a(global_offset);
			//15 ==> leaks a lot
			//5  ==> leaks a constant amount
		global_offset += 15;

		cc = aa->Union(bb);
		delete aa;
		delete bb;

		return cc;

}


int main(int argC, char* argV[])
{
		Geometry *aa;

		aa = a(global_offset);

		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);
		aa = op(aa);

	string s= aa->toString();
	cout << "geom1 == "<<s << endl;


	delete aa;
	delete geomFactory;
	delete pm;
}


