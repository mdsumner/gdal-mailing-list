From Roger.Bivand at nhh.no  Fri Sep  1 02:05:20 2017
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 1 Sep 2017 02:05:20 -0700 (MST)
Subject: [geos-devel] GEOS 3.7.0 release in 2 weeks
In-Reply-To: <000d01d322bf$5366a490$fa33edb0$@pcorp.us>
References: <002d01d3224f$2b310530$81930f90$@pcorp.us>
 <smu8thzth3x.fsf@linuxpal.mit.edu> <000d01d322bf$5366a490$fa33edb0$@pcorp.us>
Message-ID: <1504256720600-0.post@n6.nabble.com>

If this is just a patch release, do not do 3.7.0. If it is a major release,
please respect the downstream developers and do a proper release with alpha,
beta and RCs, to give us a reasonable chance to check whether any other
changes don't break our stuff. Just because you need new functionality
doesn't mean that you can force everybody else's schedules, does it?

For sf and rgeos R package developers with very many users.

Roger Bivand



-----
Roger Bivand
NHH Norwegian School of Economics, Bergen, Norway
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GEOS-Developers-f3753501.html

From lr at pcorp.us  Fri Sep  1 07:26:05 2017
From: lr at pcorp.us (Regina Obe)
Date: Fri, 1 Sep 2017 10:26:05 -0400
Subject: [geos-devel] GEOS 3.7.0 release in 2 weeks
In-Reply-To: <1504256720600-0.post@n6.nabble.com>
References: <002d01d3224f$2b310530$81930f90$@pcorp.us>
 <smu8thzth3x.fsf@linuxpal.mit.edu> <000d01d322bf$5366a490$fa33edb0$@pcorp.us>
 <1504256720600-0.post@n6.nabble.com>
Message-ID: <000601d3232e$3f2f7960$bd8e6c20$@pcorp.us>

Roger,

I believe most of the changes in GEOS 3.7.0 are bug fixes too involved to backport to GEOS 3.6.  There are some new features but not all that many.

If I were to release an alpha, I think it would be setting a precedent since I don't think an alpha has ever been released for GEOS.  At best we've done rc1, rc2 etc.

I'm willing to set a precedent by releasing a beta this time (perhaps this weekend when I release PostGIS beta1)  if people feel they will test it.

Given that most packages are still at GEOS 3.5 or lower, I'm thinking it would be more effort packaging than the gain we would get people testing it.


Thanks,
Regina

-----Original Message-----
From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Roger Bivand
Sent: Friday, September 01, 2017 5:05 AM
To: geos-devel at lists.osgeo.org
Subject: Re: [geos-devel] GEOS 3.7.0 release in 2 weeks

If this is just a patch release, do not do 3.7.0. If it is a major release, please respect the downstream developers and do a proper release with alpha, beta and RCs, to give us a reasonable chance to check whether any other changes don't break our stuff. Just because you need new functionality doesn't mean that you can force everybody else's schedules, does it?

For sf and rgeos R package developers with very many users.

Roger Bivand



-----
Roger Bivand
NHH Norwegian School of Economics, Bergen, Norway
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GEOS-Developers-f3753501.html
_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/geos-devel


From geos-trac at osgeo.org  Fri Sep  1 08:02:55 2017
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 01 Sep 2017 15:02:55 -0000
Subject: [geos-devel] [GEOS] #832: LinearLocation::isValid and
 LinearLocation::normalize, faulty comparisons
In-Reply-To: <042.6446a38fce07527ecf2f86a1bfc94fae@osgeo.org>
References: <042.6446a38fce07527ecf2f86a1bfc94fae@osgeo.org>
Message-ID: <057.f9b2aa89cdacdf7d77412c946c4e58b0@osgeo.org>

#832: LinearLocation::isValid and LinearLocation::normalize, faulty comparisons
------------------------+---------------------------
 Reporter:  nila        |       Owner:  geos-devel@…
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:
Component:  Default     |     Version:  master
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by Sandro Santilli <strk@…>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"16183469312aef329c096f1b8a5d95521575a9d8/git"
 16183469/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="16183469312aef329c096f1b8a5d95521575a9d8"
 Remove redundant code

 Closes #832
 }}}

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/832#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From lr at pcorp.us  Fri Sep  1 08:31:47 2017
From: lr at pcorp.us (Regina Obe)
Date: Fri, 1 Sep 2017 11:31:47 -0400
Subject: [geos-devel] GEOS 3.7.0 release in 2 weeks
References: <002d01d3224f$2b310530$81930f90$@pcorp.us>
 <smu8thzth3x.fsf@linuxpal.mit.edu> <000d01d322bf$5366a490$fa33edb0$@pcorp.us>
 <1504256720600-0.post@n6.nabble.com> 
Message-ID: <000801d32337$6cf0f320$46d2d960$@pcorp.us>

Just confirmed with Sandro.  Just two functions added and a lot of bug fixes that were also present in 3.6.0 and 3.5.1.
He needs to make another change so I'm going to wait another week before releasing a beta or RC.

Now for GEOS 3.8 I think we'll probably want an alpha since I think Mateusz wants to do some major refactoring and up the required GCC to 4.8.

We might want to even consider calling the next version GEOS 4.0  just for that.

Mat -- thoughts?

Thanks,
Regina

-----Original Message-----
From: Regina Obe [mailto:lr at pcorp.us] 
Sent: Friday, September 01, 2017 10:26 AM
To: 'GEOS Development List' <geos-devel at lists.osgeo.org>
Subject: RE: [geos-devel] GEOS 3.7.0 release in 2 weeks

Roger,

I believe most of the changes in GEOS 3.7.0 are bug fixes too involved to backport to GEOS 3.6.  There are some new features but not all that many.

If I were to release an alpha, I think it would be setting a precedent since I don't think an alpha has ever been released for GEOS.  At best we've done rc1, rc2 etc.

I'm willing to set a precedent by releasing a beta this time (perhaps this weekend when I release PostGIS beta1)  if people feel they will test it.

Given that most packages are still at GEOS 3.5 or lower, I'm thinking it would be more effort packaging than the gain we would get people testing it.


Thanks,
Regina

-----Original Message-----
From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Roger Bivand
Sent: Friday, September 01, 2017 5:05 AM
To: geos-devel at lists.osgeo.org
Subject: Re: [geos-devel] GEOS 3.7.0 release in 2 weeks

If this is just a patch release, do not do 3.7.0. If it is a major release, please respect the downstream developers and do a proper release with alpha, beta and RCs, to give us a reasonable chance to check whether any other changes don't break our stuff. Just because you need new functionality doesn't mean that you can force everybody else's schedules, does it?

For sf and rgeos R package developers with very many users.

Roger Bivand



-----
Roger Bivand
NHH Norwegian School of Economics, Bergen, Norway
--
Sent from: http://osgeo-org.1560.x6.nabble.com/GEOS-Developers-f3753501.html
_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/geos-devel


From mateusz at loskot.net  Fri Sep  1 10:05:14 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 1 Sep 2017 19:05:14 +0200
Subject: [geos-devel] GEOS 3.7.0 release in 2 weeks
In-Reply-To: <000801d32337$6cf0f320$46d2d960$@pcorp.us>
References: <002d01d3224f$2b310530$81930f90$@pcorp.us>
 <smu8thzth3x.fsf@linuxpal.mit.edu>
 <000d01d322bf$5366a490$fa33edb0$@pcorp.us>
 <1504256720600-0.post@n6.nabble.com>
 <000801d32337$6cf0f320$46d2d960$@pcorp.us>
Message-ID: <CABUeae9uvYodbKPrap_LALYJK+Pshc6VODxBz3mWMrkmfoz-NA@mail.gmail.com>

On 1 September 2017 at 17:31, Regina Obe <lr at pcorp.us> wrote:
>
> Now for GEOS 3.8 I think we'll probably want an alpha since
> I think Mateusz wants to do some major refactoring and up the required GCC to 4.8.

GEOS has accepted to require C++11 [1] as minimum C++ standard.
It means, we are free to use C++11 features in the codebase;
replace deprecated std::auto_ptr with std::unique_ptr and std::shared_ptr, etc.

Although RFC 5 opens the road to C++ modernization,
I don't plan any big refactoring though
If things change, they will change gradually.


[1] https://trac.osgeo.org/geos/wiki/RFC5

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From strk at kbt.io  Sat Sep  2 04:51:05 2017
From: strk at kbt.io (Sandro Santilli)
Date: Sat, 2 Sep 2017 13:51:05 +0200
Subject: [geos-devel] git hooks updated to hit Winnie and Debbie web hooks
Message-ID: <20170902115105.GA6949@tuscia.pallamondo.net>

I've updated the git hooks on the GEOS repository to hit Debbie and
Winnie web hooks upon receiving pushes, but it currently only does
so for pushes to the master branch.

Can we have a clear pattern for mapping branch names to web hook
URLs, to make it more general ? Right now it does:

  for branch in ${BRANCHES}; do
    if test "${branch}" = "master"; then
      curl .../GEOS/jobs/GEOS_Master/....
    fi
  done

What are the other available job names ?


--strk;

  ()   Free GIS & Flash consultant/developer
  /\   https://strk.kbt.io/services.html

From lr at pcorp.us  Sat Sep  2 08:09:57 2017
From: lr at pcorp.us (Regina Obe)
Date: Sat, 2 Sep 2017 11:09:57 -0400
Subject: [geos-devel] git hooks updated to hit Winnie and Debbie web
	hooks
In-Reply-To: <20170902115105.GA6949@tuscia.pallamondo.net>
References: <20170902115105.GA6949@tuscia.pallamondo.net>
Message-ID: <005701d323fd$8aaf5200$a00df600$@pcorp.us>

Strk,

Right now the job names are 

For Debbie:
GEOS_Master
GEOS_Branch_3.2

Thru

GEOS_Branch_3.6

For Winnie:

I got to convert the older branches and fix them, but she has 

Hers are not that consistent, so I got to rename the branches so you only
got to worry about one set of names.

Assume that Winnie has the same named branches as Debbie and I'll fix.  
I'm only going to go as far back as 3.4 for her though cause the others used
auto tools which failed on some tests.

Anyway even if you call a non-existent branch it would just be ignored.


Thanks,
Regina


-----Original Message-----
From: strk at kbt.io [mailto:strk at kbt.io] 
Sent: Saturday, September 02, 2017 7:51 AM
To: geos-devel at lists.osgeo.org
Cc: Paragon Corporation <lr at pcorp.us>
Subject: git hooks updated to hit Winnie and Debbie web hooks

I've updated the git hooks on the GEOS repository to hit Debbie and Winnie
web hooks upon receiving pushes, but it currently only does so for pushes to
the master branch.

Can we have a clear pattern for mapping branch names to web hook URLs, to
make it more general ? Right now it does:

  for branch in ${BRANCHES}; do
    if test "${branch}" = "master"; then
      curl .../GEOS/jobs/GEOS_Master/....
    fi
  done

What are the other available job names ?


--strk;

  ()   Free GIS & Flash consultant/developer
  /\   https://strk.kbt.io/services.html


From strk at kbt.io  Sun Sep  3 14:42:24 2017
From: strk at kbt.io (Sandro Santilli)
Date: Sun, 3 Sep 2017 23:42:24 +0200
Subject: [geos-devel] git hooks updated to hit Winnie and Debbie web
	hooks
In-Reply-To: <005701d323fd$8aaf5200$a00df600$@pcorp.us>
References: <20170902115105.GA6949@tuscia.pallamondo.net>
 <005701d323fd$8aaf5200$a00df600$@pcorp.us>
Message-ID: <20170903214224.a6zsz66ncxnt5ddk@liz>

On Sat, Sep 02, 2017 at 11:09:57AM -0400, Regina Obe wrote:

> GEOS_Master
> GEOS_Branch_3.2
> Thru
> GEOS_Branch_3.6

I've updated the git hook to construct web hooks
with those patterns for both Debbie and Winnie,
let me know if anything goes wrong (and remember to drop
the cron job to get to test it).

--strk;

From nyall.dawson at gmail.com  Sun Sep  3 23:28:32 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 4 Sep 2017 16:28:32 +1000
Subject: [geos-devel] Correct use of setPrecision
Message-ID: <CAB28Ash7+VckFNGbMFgM1mLhNa8KDnvf3mbCCE3rnaWrPhNesQ@mail.gmail.com>

Hi list,

As part of refactoring some QGIS code I was looking at replacing some
custom Python code [1] with the GEOS GEOSGeom_setPrecision function,
which appears to perform the same logic but much more efficiently.

However, after looking into this in more depth I think the original
python code is incorrectly used. It's being used by QGIS in order to
set a "tolerance" on a spatial join operation - i.e. to consider that
two geometries which are 100m distant actually do intersect.

My understanding is that the original code is badly broken, and that
using GEOS precision won't help here either, since there's no
guarantee that two vertices which are < 100 units distant will round
to the same result.

If this is correct, is there any other way in GEOS to handle this situation?

Cheers,
Nyall



[1] https://github.com/qgis/QGIS/blob/master/python/plugins/processing/tools/vector.py#L219

From nyall.dawson at gmail.com  Sun Sep  3 23:33:28 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 4 Sep 2017 16:33:28 +1000
Subject: [geos-devel] Order of results in GEOSDelaunayTriangulation
Message-ID: <CAB28AsiP-wW9+HJP4QLX8atc_ecAKL7p39hJKMg60+cBdsJLbw@mail.gmail.com>

Hi list,

Quick question - is there any logic to the order of geometries in the
collection returned by calling GEOSDelaunayTriangulation?

I'm looking for a way to reliably associate the parts of the returned
collection with the original input nodes. Ideally I'd like to avoid
having to test for intersection for each of them.

Cheers,

Nyall

From strk at kbt.io  Mon Sep  4 00:29:55 2017
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 4 Sep 2017 09:29:55 +0200
Subject: [geos-devel] Correct use of setPrecision
In-Reply-To: <CAB28Ash7+VckFNGbMFgM1mLhNa8KDnvf3mbCCE3rnaWrPhNesQ@mail.gmail.com>
References: <CAB28Ash7+VckFNGbMFgM1mLhNa8KDnvf3mbCCE3rnaWrPhNesQ@mail.gmail.com>
Message-ID: <20170904072955.rjhbzkdhqjoung43@liz>

On Mon, Sep 04, 2017 at 04:28:32PM +1000, Nyall Dawson wrote:

> However, after looking into this in more depth I think the original
> python code is incorrectly used. It's being used by QGIS in order to
> set a "tolerance" on a spatial join operation - i.e. to consider that
> two geometries which are 100m distant actually do intersect.

[...]

> If this is correct, is there any other way in GEOS to handle this situation?

How about using GEOSDistance ?

--strk;

From strk at kbt.io  Mon Sep  4 00:31:19 2017
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 4 Sep 2017 09:31:19 +0200
Subject: [geos-devel] Order of results in GEOSDelaunayTriangulation
In-Reply-To: <CAB28AsiP-wW9+HJP4QLX8atc_ecAKL7p39hJKMg60+cBdsJLbw@mail.gmail.com>
References: <CAB28AsiP-wW9+HJP4QLX8atc_ecAKL7p39hJKMg60+cBdsJLbw@mail.gmail.com>
Message-ID: <20170904073119.s5r6znwoycxdwndm@liz>

On Mon, Sep 04, 2017 at 04:33:28PM +1000, Nyall Dawson wrote:
> Hi list,
> 
> Quick question - is there any logic to the order of geometries in the
> collection returned by calling GEOSDelaunayTriangulation?
> 
> I'm looking for a way to reliably associate the parts of the returned
> collection with the original input nodes. Ideally I'd like to avoid
> having to test for intersection for each of them.

I don't think there's any promise about output order, so even if you
find one now it won't necessarely remain.

--strk;

From nyall.dawson at gmail.com  Mon Sep  4 02:10:27 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 4 Sep 2017 19:10:27 +1000
Subject: [geos-devel] Order of results in GEOSDelaunayTriangulation
In-Reply-To: <20170904073119.s5r6znwoycxdwndm@liz>
References: <CAB28AsiP-wW9+HJP4QLX8atc_ecAKL7p39hJKMg60+cBdsJLbw@mail.gmail.com>
 <20170904073119.s5r6znwoycxdwndm@liz>
Message-ID: <CAB28AsjttKYoKJugRP5GE_EL94=CNp3OVPbRk4BR9nssYj_Msg@mail.gmail.com>

On 4 September 2017 at 17:31, Sandro Santilli <strk at kbt.io> wrote:
> On Mon, Sep 04, 2017 at 04:33:28PM +1000, Nyall Dawson wrote:
>> Hi list,
>>
>> Quick question - is there any logic to the order of geometries in the
>> collection returned by calling GEOSDelaunayTriangulation?
>>
>> I'm looking for a way to reliably associate the parts of the returned
>> collection with the original input nodes. Ideally I'd like to avoid
>> having to test for intersection for each of them.
>
> I don't think there's any promise about output order, so even if you
> find one now it won't necessarely remain.
>

That's what I suspected. How about geometry user data, could that
potentially be used here?

E.g. if I set the user data for each point geometry being fed into a
multipoint via GEOSGeom_createCollection, could that user data be
retained and then later copied over to the output polygons from the
triangulation?

Nyall

From nyall.dawson at gmail.com  Mon Sep  4 02:13:29 2017
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Mon, 4 Sep 2017 19:13:29 +1000
Subject: [geos-devel] Correct use of setPrecision
In-Reply-To: <20170904072955.rjhbzkdhqjoung43@liz>
References: <CAB28Ash7+VckFNGbMFgM1mLhNa8KDnvf3mbCCE3rnaWrPhNesQ@mail.gmail.com>
 <20170904072955.rjhbzkdhqjoung43@liz>
Message-ID: <CAB28AsiXu3H76301cAeEYPCcrdqEbfnWOS1z5zRFoBOgPStscA@mail.gmail.com>

On 4 September 2017 at 17:29, Sandro Santilli <strk at kbt.io> wrote:
> On Mon, Sep 04, 2017 at 04:28:32PM +1000, Nyall Dawson wrote:
>
>> However, after looking into this in more depth I think the original
>> python code is incorrectly used. It's being used by QGIS in order to
>> set a "tolerance" on a spatial join operation - i.e. to consider that
>> two geometries which are 100m distant actually do intersect.
>
> [...]
>
>> If this is correct, is there any other way in GEOS to handle this situation?
>
> How about using GEOSDistance ?

Thanks - that's a good option for intersects tests. I'm not sure
offhand if it would be translatable to the other geometry predicates,
but then I'd say trying to do a 'touches' or 'contains' test with a
tolerance would be quite an edge case anyway.

Nyall

From strk at kbt.io  Mon Sep  4 02:23:26 2017
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 4 Sep 2017 11:23:26 +0200
Subject: [geos-devel] Order of results in GEOSDelaunayTriangulation
In-Reply-To: <CAB28AsjttKYoKJugRP5GE_EL94=CNp3OVPbRk4BR9nssYj_Msg@mail.gmail.com>
References: <CAB28AsiP-wW9+HJP4QLX8atc_ecAKL7p39hJKMg60+cBdsJLbw@mail.gmail.com>
 <20170904073119.s5r6znwoycxdwndm@liz>
 <CAB28AsjttKYoKJugRP5GE_EL94=CNp3OVPbRk4BR9nssYj_Msg@mail.gmail.com>
Message-ID: <20170904092326.esqwkxqskuux7csh@liz>

On Mon, Sep 04, 2017 at 07:10:27PM +1000, Nyall Dawson wrote:
> On 4 September 2017 at 17:31, Sandro Santilli <strk at kbt.io> wrote:
> > On Mon, Sep 04, 2017 at 04:33:28PM +1000, Nyall Dawson wrote:
> >> Hi list,
> >>
> >> Quick question - is there any logic to the order of geometries in the
> >> collection returned by calling GEOSDelaunayTriangulation?
> >>
> >> I'm looking for a way to reliably associate the parts of the returned
> >> collection with the original input nodes. Ideally I'd like to avoid
> >> having to test for intersection for each of them.
> >
> > I don't think there's any promise about output order, so even if you
> > find one now it won't necessarely remain.
> 
> That's what I suspected. How about geometry user data, could that
> potentially be used here?

I'm afraid you'll have to test. And same precautions apply:
is it documented as being supported ?

I'm adding Martin Davis in Cc as that class is ported from JTS.

--strk;

From mtnclimb at gmail.com  Mon Sep  4 10:51:07 2017
From: mtnclimb at gmail.com (Martin Davis)
Date: Mon, 4 Sep 2017 10:51:07 -0700
Subject: [geos-devel] Order of results in GEOSDelaunayTriangulation
In-Reply-To: <20170904092326.esqwkxqskuux7csh@liz>
References: <CAB28AsiP-wW9+HJP4QLX8atc_ecAKL7p39hJKMg60+cBdsJLbw@mail.gmail.com>
 <20170904073119.s5r6znwoycxdwndm@liz>
 <CAB28AsjttKYoKJugRP5GE_EL94=CNp3OVPbRk4BR9nssYj_Msg@mail.gmail.com>
 <20170904092326.esqwkxqskuux7csh@liz>
Message-ID: <CAK2ens2ABOUC1qtdanpHHvsYxjqdgjd3dzsAFBd5wzK62O2ZeA@mail.gmail.com>

There is a "logic" to the ordering of the returned triangles, but it's not
useful for associating triangles with their coordinates.  In fact, i can't
think of how a ordered list could do this, given the many-to-many
relationship between triangles and vertices.

So, there's two ways you can determine a mapping from triangles to nodes:

1. Build a TreeMap from the node Coordinate to the originating node
object.  Then the nodes can be looked up for each triangle coordinate.

2. Use the lower-level methods of QuadEdgeSubdivision:
2.1 build explicit Vertex objects from node coordinates.  You will probably
need to make your own subclass of Vertex to carry any extra information you
need (such as a reference back to your original node objects)
2.2 create a QuadEdgeSubdivision
2.3 triangulate the vertices using  IncrementalDelaunayTriangulator  (for
an example see [1] )
2.4 use QuadEdgeSubdivision#getTriangleVertices to get the triangles as
arrays of Vertex objects. ( [2] )

Some feedback to confirm whether #2 works would be welcome.

[1]
https://github.com/locationtech/jts/blob/master/modules/core/src/main/java/org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.java#L144
[2]
https://github.com/locationtech/jts/blob/master/modules/core/src/main/java/org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.java#L746


On Mon, Sep 4, 2017 at 2:23 AM, Sandro Santilli <strk at kbt.io> wrote:

> On Mon, Sep 04, 2017 at 07:10:27PM +1000, Nyall Dawson wrote:
> > On 4 September 2017 at 17:31, Sandro Santilli <strk at kbt.io> wrote:
> > > On Mon, Sep 04, 2017 at 04:33:28PM +1000, Nyall Dawson wrote:
> > >> Hi list,
> > >>
> > >> Quick question - is there any logic to the order of geometries in the
> > >> collection returned by calling GEOSDelaunayTriangulation?
> > >>
> > >> I'm looking for a way to reliably associate the parts of the returned
> > >> collection with the original input nodes. Ideally I'd like to avoid
> > >> having to test for intersection for each of them.
> > >
> > > I don't think there's any promise about output order, so even if you
> > > find one now it won't necessarely remain.
> >
> > That's what I suspected. How about geometry user data, could that
> > potentially be used here?
>
> I'm afraid you'll have to test. And same precautions apply:
> is it documented as being supported ?
>
> I'm adding Martin Davis in Cc as that class is ported from JTS.
>
> --strk;
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20170904/5a56da81/attachment-0001.html>

From mtnclimb at gmail.com  Mon Sep  4 11:28:47 2017
From: mtnclimb at gmail.com (Martin Davis)
Date: Mon, 4 Sep 2017 11:28:47 -0700
Subject: [geos-devel] Order of results in GEOSDelaunayTriangulation
In-Reply-To: <CAK2ens2ABOUC1qtdanpHHvsYxjqdgjd3dzsAFBd5wzK62O2ZeA@mail.gmail.com>
References: <CAB28AsiP-wW9+HJP4QLX8atc_ecAKL7p39hJKMg60+cBdsJLbw@mail.gmail.com>
 <20170904073119.s5r6znwoycxdwndm@liz>
 <CAB28AsjttKYoKJugRP5GE_EL94=CNp3OVPbRk4BR9nssYj_Msg@mail.gmail.com>
 <20170904092326.esqwkxqskuux7csh@liz>
 <CAK2ens2ABOUC1qtdanpHHvsYxjqdgjd3dzsAFBd5wzK62O2ZeA@mail.gmail.com>
Message-ID: <CAK2ens0cNggQTuhgFg9dMDDu2iZw5saoUb8Yv_2yU=nDLLeYkA@mail.gmail.com>

Further thoughts on this:

- it would be nice if Vertex provided a userData field to carry references
to user node objects.  That would avoid the need to subclass Vertex.
- Would it be nice to have a method to extract all the triangles around a
given Vertex (or Coordinate)?

Also, obviously I am specifying algorithms in a Java/JTS context.
Hopefully there are obvious C++/GEOS equivalents.

On Mon, Sep 4, 2017 at 10:51 AM, Martin Davis <mtnclimb at gmail.com> wrote:

> There is a "logic" to the ordering of the returned triangles, but it's not
> useful for associating triangles with their coordinates.  In fact, i can't
> think of how a ordered list could do this, given the many-to-many
> relationship between triangles and vertices.
>
> So, there's two ways you can determine a mapping from triangles to nodes:
>
> 1. Build a TreeMap from the node Coordinate to the originating node
> object.  Then the nodes can be looked up for each triangle coordinate.
>
> 2. Use the lower-level methods of QuadEdgeSubdivision:
> 2.1 build explicit Vertex objects from node coordinates.  You will
> probably need to make your own subclass of Vertex to carry any extra
> information you need (such as a reference back to your original node
> objects)
> 2.2 create a QuadEdgeSubdivision
> 2.3 triangulate the vertices using  IncrementalDelaunayTriangulator  (for
> an example see [1] )
> 2.4 use QuadEdgeSubdivision#getTriangleVertices to get the triangles as
> arrays of Vertex objects. ( [2] )
>
> Some feedback to confirm whether #2 works would be welcome.
>
> [1] https://github.com/locationtech/jts/blob/master/
> modules/core/src/main/java/org/locationtech/jts/triangulate/
> DelaunayTriangulationBuilder.java#L144
> [2] https://github.com/locationtech/jts/blob/master/
> modules/core/src/main/java/org/locationtech/jts/triangulate/quadedge/
> QuadEdgeSubdivision.java#L746
>
>
> On Mon, Sep 4, 2017 at 2:23 AM, Sandro Santilli <strk at kbt.io> wrote:
>
>> On Mon, Sep 04, 2017 at 07:10:27PM +1000, Nyall Dawson wrote:
>> > On 4 September 2017 at 17:31, Sandro Santilli <strk at kbt.io> wrote:
>> > > On Mon, Sep 04, 2017 at 04:33:28PM +1000, Nyall Dawson wrote:
>> > >> Hi list,
>> > >>
>> > >> Quick question - is there any logic to the order of geometries in the
>> > >> collection returned by calling GEOSDelaunayTriangulation?
>> > >>
>> > >> I'm looking for a way to reliably associate the parts of the returned
>> > >> collection with the original input nodes. Ideally I'd like to avoid
>> > >> having to test for intersection for each of them.
>> > >
>> > > I don't think there's any promise about output order, so even if you
>> > > find one now it won't necessarely remain.
>> >
>> > That's what I suspected. How about geometry user data, could that
>> > potentially be used here?
>>
>> I'm afraid you'll have to test. And same precautions apply:
>> is it documented as being supported ?
>>
>> I'm adding Martin Davis in Cc as that class is ported from JTS.
>>
>> --strk;
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20170904/8c75253a/attachment.html>

From dbaston at gmail.com  Wed Sep  6 06:03:14 2017
From: dbaston at gmail.com (Daniel Baston)
Date: Wed, 6 Sep 2017 09:03:14 -0400
Subject: [geos-devel] Correct use of setPrecision
In-Reply-To: <CAB28AsiXu3H76301cAeEYPCcrdqEbfnWOS1z5zRFoBOgPStscA@mail.gmail.com>
References: <CAB28Ash7+VckFNGbMFgM1mLhNa8KDnvf3mbCCE3rnaWrPhNesQ@mail.gmail.com>
 <20170904072955.rjhbzkdhqjoung43@liz>
 <CAB28AsiXu3H76301cAeEYPCcrdqEbfnWOS1z5zRFoBOgPStscA@mail.gmail.com>
Message-ID: <CA+K_q_oCLEOsDfaBUhpaORKj8M3VX6fDPn8D7eD8XpOV_ay1Og@mail.gmail.com>

My understanding is that precision models are considered only in the
overlay options (and not in the geometry predicates).

Dan

On Mon, Sep 4, 2017 at 5:13 AM, Nyall Dawson <nyall.dawson at gmail.com> wrote:

> On 4 September 2017 at 17:29, Sandro Santilli <strk at kbt.io> wrote:
> > On Mon, Sep 04, 2017 at 04:28:32PM +1000, Nyall Dawson wrote:
> >
> >> However, after looking into this in more depth I think the original
> >> python code is incorrectly used. It's being used by QGIS in order to
> >> set a "tolerance" on a spatial join operation - i.e. to consider that
> >> two geometries which are 100m distant actually do intersect.
> >
> > [...]
> >
> >> If this is correct, is there any other way in GEOS to handle this
> situation?
> >
> > How about using GEOSDistance ?
>
> Thanks - that's a good option for intersects tests. I'm not sure
> offhand if it would be translatable to the other geometry predicates,
> but then I'd say trying to do a 'touches' or 'contains' test with a
> tolerance would be quite an edge case anyway.
>
> Nyall
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20170906/7fc9b027/attachment.html>

From mateusz at loskot.net  Wed Sep  6 07:24:45 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 6 Sep 2017 16:24:45 +0200
Subject: [geos-devel] Reviewing std::auto_ptr spaghetti
Message-ID: <CABUeae8nnKt+8P2s=MFxMK7zvdHN+JDkqyG8LUxwTgxvXeCowA@mail.gmail.com>

Hi,

In C++, well-established patterns when/how to use std::auto_ptr are:

void sink(std::auto_ptr<T> p);
std::auto_ptr<T> source();

TL;TR: Is it safe to assume GEOS follows the patterns?


In the code, there are uses of std::auto_ptr that are hard to reason about
what makes me suspicious:

class T
{
  auto_ptr items;
public
    auto_ptr<A> getItems()
    {
        return items;
    }
};

Is the intention to give up the object's internal resource, really?

For example, in LineSegmentVisitor and possibly (lot) more places.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From strk at kbt.io  Wed Sep  6 08:17:11 2017
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 6 Sep 2017 17:17:11 +0200
Subject: [geos-devel] Reviewing std::auto_ptr spaghetti
In-Reply-To: <CABUeae8nnKt+8P2s=MFxMK7zvdHN+JDkqyG8LUxwTgxvXeCowA@mail.gmail.com>
References: <CABUeae8nnKt+8P2s=MFxMK7zvdHN+JDkqyG8LUxwTgxvXeCowA@mail.gmail.com>
Message-ID: <20170906151711.dcuqaq5a33wrwi3d@liz>

On Wed, Sep 06, 2017 at 04:24:45PM +0200, Mateusz Loskot wrote:

> In the code, there are uses of std::auto_ptr that are hard to reason about
> what makes me suspicious:
> 
> class T
> {
>   auto_ptr items;
> public
>     auto_ptr<A> getItems()
>     {
>         return items;
>     }
> };
> 
> Is the intention to give up the object's internal resource, really?

Yes. I agree it's a weird pattern, but it's what got us to the current
leak-free state. Very dangerous for C++ interface, but safe for C-API.

Best we can do is document when needed.

--strk;

From mateusz at loskot.net  Wed Sep  6 09:03:32 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 6 Sep 2017 18:03:32 +0200
Subject: [geos-devel] Reviewing std::auto_ptr spaghetti
In-Reply-To: <20170906151711.dcuqaq5a33wrwi3d@liz>
References: <CABUeae8nnKt+8P2s=MFxMK7zvdHN+JDkqyG8LUxwTgxvXeCowA@mail.gmail.com>
 <20170906151711.dcuqaq5a33wrwi3d@liz>
Message-ID: <CABUeae8Q5qcYRJ9+Yr7VirDzfchuR7ACnh3rVCePUuuHaimybw@mail.gmail.com>

On 6 September 2017 at 17:17, Sandro Santilli <strk at kbt.io> wrote:
> On Wed, Sep 06, 2017 at 04:24:45PM +0200, Mateusz Loskot wrote:
>
>> In the code, there are uses of std::auto_ptr that are hard to reason about
>> what makes me suspicious:
>>
>> class T
>> {
>>   auto_ptr items;
>> public
>>     auto_ptr<A> getItems()
>>     {
>>         return items;
>>     }
>> };
>>
>> Is the intention to give up the object's internal resource, really?
>
> Yes. I agree it's a weird pattern, but it's what got us to the current
> leak-free state.

Yes, that was better than nothing.

> Very dangerous for C++ interface, but safe for C-API.

I'm not sure I understand the difference, unless you assume
a) 100% LOC coverage with tests and
b) GEOS never misuses such classes/interfaces as pointed above

> Best we can do is document when needed.

Yes, but since it seems an enormous code review task,
I'm hardly optimistic it's feasible.

Practically possible migration away from auto_ptr is:
1. s/auto_ptr/unique_ptr/
2. Add std::move(ptr) wherever required.
3. Ensure GEOS compiles.
4. Ensure GEOS tests pass.
5. Document C++ API breakage.
6. Assume GEOS remains unbroken.

If I hear no objections, I will (try to) proceed as outlined.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From mtnclimb at gmail.com  Wed Sep  6 09:12:40 2017
From: mtnclimb at gmail.com (Martin Davis)
Date: Wed, 6 Sep 2017 09:12:40 -0700
Subject: [geos-devel] Correct use of setPrecision
In-Reply-To: <CA+K_q_oCLEOsDfaBUhpaORKj8M3VX6fDPn8D7eD8XpOV_ay1Og@mail.gmail.com>
References: <CAB28Ash7+VckFNGbMFgM1mLhNa8KDnvf3mbCCE3rnaWrPhNesQ@mail.gmail.com>
 <20170904072955.rjhbzkdhqjoung43@liz>
 <CAB28AsiXu3H76301cAeEYPCcrdqEbfnWOS1z5zRFoBOgPStscA@mail.gmail.com>
 <CA+K_q_oCLEOsDfaBUhpaORKj8M3VX6fDPn8D7eD8XpOV_ay1Og@mail.gmail.com>
Message-ID: <CAK2ens2TnggzzBUARi3xTC0AwR4Kh4sy0RiB2S2hM+KnQboF6w@mail.gmail.com>

That is correct - the precision model is not used in relate and spatial
predicate evaluation.  (It's used in a few more places than the overlay
functions, but that is its primary usage)

It is feasible to introduce a precision model into the spatial predicate
computation, but not easily in the current implementation.  I have plans
for a better implementation which will make it straightforward to use the
precision model.  No timeline on that, however.

On Wed, Sep 6, 2017 at 6:03 AM, Daniel Baston <dbaston at gmail.com> wrote:

> My understanding is that precision models are considered only in the
> overlay options (and not in the geometry predicates).
>
> Dan
>
> On Mon, Sep 4, 2017 at 5:13 AM, Nyall Dawson <nyall.dawson at gmail.com>
> wrote:
>
>> On 4 September 2017 at 17:29, Sandro Santilli <strk at kbt.io> wrote:
>> > On Mon, Sep 04, 2017 at 04:28:32PM +1000, Nyall Dawson wrote:
>> >
>> >> However, after looking into this in more depth I think the original
>> >> python code is incorrectly used. It's being used by QGIS in order to
>> >> set a "tolerance" on a spatial join operation - i.e. to consider that
>> >> two geometries which are 100m distant actually do intersect.
>> >
>> > [...]
>> >
>> >> If this is correct, is there any other way in GEOS to handle this
>> situation?
>> >
>> > How about using GEOSDistance ?
>>
>> Thanks - that's a good option for intersects tests. I'm not sure
>> offhand if it would be translatable to the other geometry predicates,
>> but then I'd say trying to do a 'touches' or 'contains' test with a
>> tolerance would be quite an edge case anyway.
>>
>> Nyall
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20170906/59e281d3/attachment.html>

From geos-trac at osgeo.org  Wed Sep  6 09:20:04 2017
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Sep 2017 16:20:04 -0000
Subject: [geos-devel] [GEOS] #841: Regression in prepared polygons contains
Message-ID: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>

#841: Regression in prepared polygons contains
------------------------+-------------------------------
 Reporter:  sgillies    |      Owner:  geos-devel@…
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.6.3
Component:  Default     |    Version:  3.6.2
 Severity:  Unassigned  |   Keywords:  prepared contains
------------------------+-------------------------------
 Shapely users have found a regression in the contains predicate of a
 prepared polygon: https://github.com/Toblerity/Shapely/issues/519

 With GEOS 3.4.2 we see the following:


 {{{
 >>> from shapely.geometry import Point, Polygon
 >>> import shapely.prepared
 >>> point = Point(0.95, 0.05)
 >>> geom = Polygon([(0, 0), (1, 0), (0, 1), (0, 0)])
 >>> shapely.geos.geos_version
 (3, 4, 2)
 >>> shapely.prepared.prep(geom).contains(point)
 True
 >>> geom.contains(point)
 True
 }}}

 With GEOS version 3.5.1 and newer we observe

 {{{
 >>> shapely.prepared.prep(geom).contains(point)
 False
 >>> geom.contains(point)
 True
 }}}

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/841>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mateusz at loskot.net  Wed Sep  6 11:51:26 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 6 Sep 2017 20:51:26 +0200
Subject: [geos-devel] Correct use of setPrecision
In-Reply-To: <CAK2ens2TnggzzBUARi3xTC0AwR4Kh4sy0RiB2S2hM+KnQboF6w@mail.gmail.com>
References: <CAB28Ash7+VckFNGbMFgM1mLhNa8KDnvf3mbCCE3rnaWrPhNesQ@mail.gmail.com>
 <20170904072955.rjhbzkdhqjoung43@liz>
 <CAB28AsiXu3H76301cAeEYPCcrdqEbfnWOS1z5zRFoBOgPStscA@mail.gmail.com>
 <CA+K_q_oCLEOsDfaBUhpaORKj8M3VX6fDPn8D7eD8XpOV_ay1Og@mail.gmail.com>
 <CAK2ens2TnggzzBUARi3xTC0AwR4Kh4sy0RiB2S2hM+KnQboF6w@mail.gmail.com>
Message-ID: <CABUeae9EeNWYQzpGD-b7sO-oEVwme7Q72grcgVAFw19Wc-eopg@mail.gmail.com>

On 6 September 2017 at 18:12, Martin Davis <mtnclimb at gmail.com> wrote:
> That is correct - the precision model is not used in relate and spatial
> predicate evaluation.

Directly, not.
Indirectly, it might be, depending on how input geometries are created
(eg. via WKB I/O).
In such case, one may consider precision model does affect the predicates.

> (It's used in a few more places than the overlay
> functions, but that is its primary usage)

For the record, intersection calculation in GEOS does use precision model,
perhaps other places too.


Please, consider my comments above as complementary documentation,
and w/o any purpose of argument.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From geos-trac at osgeo.org  Wed Sep  6 11:54:33 2017
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Sep 2017 18:54:33 -0000
Subject: [geos-devel] [GEOS] #841: Regression in prepared polygons
	contains
In-Reply-To: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
References: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
Message-ID: <061.07509d1b291497b8a0d400bcd940882b@osgeo.org>

#841: Regression in prepared polygons contains
-------------------------------+---------------------------
 Reporter:  sgillies           |       Owner:  geos-devel@…
     Type:  defect             |      Status:  new
 Priority:  major              |   Milestone:  3.6.3
Component:  Default            |     Version:  3.6.2
 Severity:  Unassigned         |  Resolution:
 Keywords:  prepared contains  |
-------------------------------+---------------------------

Comment (by mdavis):

 I can't comment on why there is a regression in GEOS, but I will note
 something "interesting" about this case.  Mathematically, the value of
 contains for this case should be FALSE.  This is because of the
 consequence of the OGC contains semantics that "Polygons do not contain
 their boundary".  That said, in JTS (all versions) the value of contains
 is TRUE (for both PreparedGeometry and Geometry)!  This is because of
 numerical precision issues.  While mathematically the point (0.95, 0.05)
 lies exactly on the line (1,0)-(0,1), slight discrepancies in the
 floating-point representation result in a non-zero determinant being
 computed in the CGAlgorithms.orientationIndex test, which in turn results
 in the point being computed as NOT on the line segment.

 Unfortunately for JTS, even the new extended-precision arithmetic approach
 still computes a non-zero determinant, due to the mathematical 0.05 being
 represented as 0.050000000000000002775557561562891 (and similarly for
 0.95).  Not sure at the moment how this can be resolved, or even whether
 it should be.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/841#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep  6 12:09:04 2017
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Sep 2017 19:09:04 -0000
Subject: [geos-devel] [GEOS] #841: Regression in prepared polygons
	contains
In-Reply-To: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
References: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
Message-ID: <061.1c57366e634812a9629aad5afedf47e0@osgeo.org>

#841: Regression in prepared polygons contains
-------------------------------+---------------------------
 Reporter:  sgillies           |       Owner:  geos-devel@…
     Type:  defect             |      Status:  new
 Priority:  major              |   Milestone:  3.6.3
Component:  Default            |     Version:  3.6.2
 Severity:  Unassigned         |  Resolution:
 Keywords:  prepared contains  |
-------------------------------+---------------------------

Comment (by dbaston):

 If I recall (not 100% sure0 there may have been a problem pre-3.5.1 where
 the "prepared" implementation of "contains" was never actually called.
 That could explain why the prepared/standard results were in agreement,
 and are no longer.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/841#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mateusz at loskot.net  Wed Sep  6 12:13:16 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Wed, 6 Sep 2017 21:13:16 +0200
Subject: [geos-devel] Can we deprecate GeometryList class?
Message-ID: <CABUeae97b2ZFqiTT31DoC4cDDy4fK4XeRpLZdJiTiJ-U-Jk-=g@mail.gmail.com>

Hi,

AFAICT, GeometryList class is not used anywhere.

Can we ditch the class completely?

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From geos-trac at osgeo.org  Wed Sep  6 12:15:48 2017
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Sep 2017 19:15:48 -0000
Subject: [geos-devel] [GEOS] #841: Regression in prepared polygons
	contains
In-Reply-To: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
References: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
Message-ID: <061.5658d59947efa34a75811660220d320c@osgeo.org>

#841: Regression in prepared polygons contains
-------------------------------+---------------------------
 Reporter:  sgillies           |       Owner:  geos-devel@…
     Type:  defect             |      Status:  closed
 Priority:  major              |   Milestone:  3.6.3
Component:  Default            |     Version:  3.6.2
 Severity:  Unassigned         |  Resolution:  wontfix
 Keywords:  prepared contains  |
-------------------------------+---------------------------
Changes (by sgillies):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 Thanks for the responses! I think I've opened this one by mistake and will
 close it.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/841#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep  6 13:40:20 2017
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Sep 2017 20:40:20 -0000
Subject: [geos-devel] [GEOS] #841: Regression in prepared polygons
	contains
In-Reply-To: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
References: <046.aa2a9aa34996833a1ef7ffc5a1ce5a69@osgeo.org>
Message-ID: <061.c512d8f3c3ca26901790df0168828896@osgeo.org>

#841: Regression in prepared polygons contains
-------------------------------+---------------------------
 Reporter:  sgillies           |       Owner:  geos-devel@…
     Type:  defect             |      Status:  closed
 Priority:  major              |   Milestone:  3.6.3
Component:  Default            |     Version:  3.6.2
 Severity:  Unassigned         |  Resolution:  wontfix
 Keywords:  prepared contains  |
-------------------------------+---------------------------

Comment (by mdavis):

 Seems like Prepared and Geometry contains should always be in agreement,
 no?  So this seems like something that should be looked into.  In JTS they
 are in agreement (even though the result is not ideal/correct, as per my
 comment above).

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/841#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From lr at pcorp.us  Wed Sep  6 15:14:29 2017
From: lr at pcorp.us (Regina Obe)
Date: Wed, 6 Sep 2017 18:14:29 -0400
Subject: [geos-devel] GEOS 3.7.0 beta end this week
Message-ID: <001201d3275d$82b973b0$882c5b10$@pcorp.us>

strk,

You think we can have a beta end this week or you still working on stuff.  I
volunteer to do the release.

Was just waiting for you last time.


Thanks,
Regina


From strk at kbt.io  Thu Sep  7 08:52:52 2017
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 7 Sep 2017 17:52:52 +0200
Subject: [geos-devel] GEOS 3.7.0 beta end this week
In-Reply-To: <001201d3275d$82b973b0$882c5b10$@pcorp.us>
References: <001201d3275d$82b973b0$882c5b10$@pcorp.us>
Message-ID: <20170907155252.mcxebwa6rzqvn7c6@liz>

On Wed, Sep 06, 2017 at 06:14:29PM -0400, Regina Obe wrote:
> strk,
> 
> You think we can have a beta end this week or you still working on stuff.  I
> volunteer to do the release.
> 
> Was just waiting for you last time.

Master branch is in a little rework state at the moment, due to
C++11 being enforced. Also I had not started working on the fixes

I suggest we wait another week or two.
Meanwhile maybe we can fix the web hooks of winnie and debbie ?
https://trac.osgeo.org/geos/ticket/842

--strk;

From 2284168009 at qq.com  Thu Sep  7 17:54:58 2017
From: 2284168009 at qq.com (=?gb18030?B?wbrM7LO9?=)
Date: Fri, 8 Sep 2017 08:54:58 +0800
Subject: [geos-devel] Order of results in GEOSDelaunayTriangulation
Message-ID: <tencent_84798E3B3B1DD9A8E70B2ADD242E5814A208@qq.com>

a possible method to determine a mapping from triangles to nodes: 
1.edit geos-3.6.1\src\triangulate\quadedge\QuadEdgeSubdivision.cpp line 588 ,add:	
		cellPoly->setUserData(reinterpret_cast<void*>(geomFact.createPoint(c)));
		return cellPoly;
2.edit geos-3.6.1\src\triangulate\VoronoiDiagramBuilder.cpp line 136 ,moved one line:
		else if(clipEnv.intersects(g->getEnvelopeInternal()))
		{
			result.reset( clipPoly->intersection(g) );
		}
		
		if(result.get() && !result->isEmpty() )
		{result->setUserData(((Geometry*)g)->getUserData()); // moved
			clipped->push_back(result.release());
		}

hope this will help.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20170908/161b002a/attachment.html>

From mateusz at loskot.net  Fri Sep  8 14:57:24 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Fri, 8 Sep 2017 23:57:24 +0200
Subject: [geos-devel] Can we deprecate GeometryList class?
In-Reply-To: <CABUeae97b2ZFqiTT31DoC4cDDy4fK4XeRpLZdJiTiJ-U-Jk-=g@mail.gmail.com>
References: <CABUeae97b2ZFqiTT31DoC4cDDy4fK4XeRpLZdJiTiJ-U-Jk-=g@mail.gmail.com>
Message-ID: <CABUeae-SSOgVvO3Wn94C0w9TTiTA+yvaZt674UT5ZuNTiwhOqw@mail.gmail.com>

On 6 September 2017 at 21:13, Mateusz Loskot <mateusz at loskot.net> wrote:
>
> AFAICT, GeometryList class is not used anywhere.
>
> Can we ditch the class completely?

FYI, GeometryList class has been ditched.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From mateusz at loskot.net  Sat Sep  9 14:34:11 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sat, 9 Sep 2017 23:34:11 +0200
Subject: [geos-devel] [clang-tidy] modernize-use-nullptr and
	modernize-use-override
Message-ID: <CABUeae_wXrb0jZ34pTndP386+w4ojeZo3NT=g+Xt4XQW_Nbf5w@mail.gmail.com>

FYI,

(Part of GEOS RFC 5: C++11 Compilation Mode)

I have made two biggish commits in master
applying clang-tidy refactoring fixes for
modernize-use-nullptr [1] and modernize-use-override [2]

There might be places left out that would benefit from similar changes.

I would also suggest to use the two C++11 keywords in any new code
written, especially override in heavily OOP codebase makes
wonders for override/overload run-time bugs prevention.

[1] https://git.osgeo.org/gogs/geos/geos/commit/6f0c2bac087180369760e9fed244bb797582a3b2
[2] https://git.osgeo.org/gogs/geos/geos/commit/b7101be6533a1273f715a3309889c23b7ae02e4f

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From lr at pcorp.us  Sat Sep  9 16:37:28 2017
From: lr at pcorp.us (Regina Obe)
Date: Sat, 9 Sep 2017 19:37:28 -0400
Subject: [geos-devel] GEOS 3.7.0 beta end this week
In-Reply-To: <20170907155252.mcxebwa6rzqvn7c6@liz>
References: <001201d3275d$82b973b0$882c5b10$@pcorp.us>
 <20170907155252.mcxebwa6rzqvn7c6@liz>
Message-ID: <000601d329c4$99ba7960$cd2f6c20$@pcorp.us>

I thought we were going to wait for that change in GEOS 3.8 but I see you guys have started already.

Take your time.  2 weeks is going to be too late to release a beta in time for PostGIS 2.4.0 and since you have a biggish C++11 thing in there we might want to do an alpha first anyway.

So I guess I'll have to be shipping PostGIS 2.4.0 on windows with 3.6.2. instead of 3.7.0.  Pity.

Perhaps for PostGIS 2.4.1 we'll be ready.

Regarding the hooks.  Manually triggering them works.  Can you verify you are calling the hooks.  Your hook code looks okay.
I fixed the badges in both source and trac.


Thanks,
Regina

-----Original Message-----
From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Sandro Santilli
Sent: Thursday, September 07, 2017 11:53 AM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: Re: [geos-devel] GEOS 3.7.0 beta end this week

On Wed, Sep 06, 2017 at 06:14:29PM -0400, Regina Obe wrote:
> strk,
> 
> You think we can have a beta end this week or you still working on 
> stuff.  I volunteer to do the release.
> 
> Was just waiting for you last time.

Master branch is in a little rework state at the moment, due to
C++11 being enforced. Also I had not started working on the fixes

I suggest we wait another week or two.
Meanwhile maybe we can fix the web hooks of winnie and debbie ?
https://trac.osgeo.org/geos/ticket/842

--strk;
_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org
https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Sun Sep 10 01:15:02 2017
From: strk at kbt.io (Sandro Santilli)
Date: Sun, 10 Sep 2017 10:15:02 +0200
Subject: [geos-devel] GEOS 3.7.0 beta end this week
In-Reply-To: <000601d329c4$99ba7960$cd2f6c20$@pcorp.us>
References: <001201d3275d$82b973b0$882c5b10$@pcorp.us>
 <20170907155252.mcxebwa6rzqvn7c6@liz>
 <000601d329c4$99ba7960$cd2f6c20$@pcorp.us>
Message-ID: <20170910081502.GA3457@tuscia.pallamondo.net>

On Sat, Sep 09, 2017 at 07:37:28PM -0400, Regina Obe wrote:

> Regarding the hooks.  Manually triggering them works.  Can you verify you are calling the hooks.  Your hook code looks okay.

The hook had syntax errors, now it should be ok, but it suffers
from another problem:

Problem accessing
/view/GEOS/job/GEOS_Branch_hooks/buildWithParameters.
Reason: Not Found

That means the hook script cannot be generic unless you turn
the branch name in to a parameter instead of part of the URI.

BTW: /view/GEOS/job/GEOS_Master/buildWithParameters exists
     /view/GEOS/job/GEOS_Branch_3.6/buildWithParameters does not
shouldn't it exist ?

--strk;


From mateusz at loskot.net  Sun Sep 10 03:27:08 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun, 10 Sep 2017 12:27:08 +0200
Subject: [geos-devel] GEOS 3.7.0 beta end this week
In-Reply-To: <CABUeae_FJb4CObfUL=PahSGOqf64VDa59Fxv_7BtuPjC2qqtcA@mail.gmail.com>
References: <001201d3275d$82b973b0$882c5b10$@pcorp.us>
 <20170907155252.mcxebwa6rzqvn7c6@liz>
 <000601d329c4$99ba7960$cd2f6c20$@pcorp.us>
 <CABUeae8=hrOTgXYWKpxt0WUx33ygLbSYHjz7kjqz4C06NytyPA@mail.gmail.com>
 <CABUeae_FJb4CObfUL=PahSGOqf64VDa59Fxv_7BtuPjC2qqtcA@mail.gmail.com>
Message-ID: <CABUeae-GhOLG_=mJjjBgQzMQ8mn-M__-gOq=7tRMLjzzz0fkgg@mail.gmail.com>

On 10 Sep 2017 1:37 am, "Regina Obe" <lr at pcorp.us> wrote:

I thought we were going to wait for that change in GEOS 3.8 but I see you
guys have started already.



Or tag/branch master at last commit before first C++11 change.

Mateusz
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20170910/b88c514c/attachment.html>

From lr at pcorp.us  Sun Sep 10 07:32:30 2017
From: lr at pcorp.us (Regina Obe)
Date: Sun, 10 Sep 2017 10:32:30 -0400
Subject: [geos-devel] GEOS 3.7.0 beta end this week
In-Reply-To: <20170910081502.GA3457@tuscia.pallamondo.net>
References: <001201d3275d$82b973b0$882c5b10$@pcorp.us>
 <20170907155252.mcxebwa6rzqvn7c6@liz>
 <000601d329c4$99ba7960$cd2f6c20$@pcorp.us>
 <20170910081502.GA3457@tuscia.pallamondo.net>
Message-ID: <000001d32a41$a2912b60$e7b38220$@pcorp.us>


> BTW: /view/GEOS/job/GEOS_Master/buildWithParameters exists
   >   /view/GEOS/job/GEOS_Branch_3.6/buildWithParameters does not shouldn't it exist ?

> --strk;

I see it 

https://debbie.postgis.net:444/view/GEOS/job/GEOS_Branch_3.6/

I deleted all the old trunks on Winnie.

I see it on Debbie too:

https://debbie.postgis.net/view/GEOS/job/GEOS_Branch_3.6/




From lr at pcorp.us  Sun Sep 10 07:48:28 2017
From: lr at pcorp.us (Regina Obe)
Date: Sun, 10 Sep 2017 10:48:28 -0400
Subject: [geos-devel] GEOS 3.7.0 beta end this week
In-Reply-To: <CABUeae-GhOLG_=mJjjBgQzMQ8mn-M__-gOq=7tRMLjzzz0fkgg@mail.gmail.com>
References: <001201d3275d$82b973b0$882c5b10$@pcorp.us>
 <20170907155252.mcxebwa6rzqvn7c6@liz>
 <000601d329c4$99ba7960$cd2f6c20$@pcorp.us>
 <CABUeae8=hrOTgXYWKpxt0WUx33ygLbSYHjz7kjqz4C06NytyPA@mail.gmail.com>
 <CABUeae_FJb4CObfUL=PahSGOqf64VDa59Fxv_7BtuPjC2qqtcA@mail.gmail.com>
 <CABUeae-GhOLG_=mJjjBgQzMQ8mn-M__-gOq=7tRMLjzzz0fkgg@mail.gmail.com>
Message-ID: <000101d32a43$dd5c1050$981430f0$@pcorp.us>

> I thought we were going to wait for that change in GEOS 3.8 but I see you guys have started already. 

 

 

> Or tag/branch master at last commit before first C++11 change. 

 

> Mateusz 

 

Mat,

 

It's not a huge deal.  PostGIS 2.4.0 only relies on GEOS 3.7.0 for the ST_FrechetDistance function.  I'd probably be the only packager jumping to include it anyway.

It's not like it was when releasing GEOS 3.5.0 and all the cool new stuff coming in PostGIS 2.2 relied on 3.5.

 

Packagers can use it in PostGIS 2.4.1  if they need a stable release – the function just won't be enabled out of the gate is all and will throw an error "requires GEOS 3.7.0" is all.

 

Thanks,

Regina

 

 

 

 

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20170910/e8dfe6d2/attachment.html>

From geos-trac at osgeo.org  Tue Sep 12 14:04:00 2017
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 12 Sep 2017 21:04:00 -0000
Subject: [geos-devel] [GEOS] #843: Deprecated declarations warning macro
Message-ID: <042.8a2d0e27304b2d6fb47ab401ad48b0c6@osgeo.org>

#843: Deprecated declarations warning macro
-------------------------+--------------------------
 Reporter:  nila         |      Owner:  geos-devel@…
     Type:  enhancement  |     Status:  new
 Priority:  major        |  Milestone:  GEOS Future
Component:  Default      |    Version:  master
 Severity:  Unassigned   |   Keywords:
-------------------------+--------------------------
 I've seen the issue on deprecated declarations has been brought up before
 (eg. https://trac.osgeo.org/geos/ticket/815), and I'm not sure why it was
 closed without further ado. I can imagine it could be adventurous to
 remove deprecated code with short notice.
 Although, wouldn't it be good to have a macro (or a set of macros) issuing
 warnings when using deprecated code. In that way existing and future code
 depending on them can be easily noted and updated, e.g. using
 (IsSimpleOp::)

 {{{
 GEOS_DEPRECATED bool isSimple(const geom::LineString *geom);
 }}}

 …would issue a DEPRECATED warning.

 I have experimented with a solution based on
 https://stackoverflow.com/a/21265197, and it seems to work fine on macOS
 at least for functions/methods.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/843>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep 15 03:15:47 2017
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 15 Sep 2017 10:15:47 -0000
Subject: [geos-devel] [GEOS] #712: Single-sided buffer gives unexpected
	result
In-Reply-To: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
References: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
Message-ID: <059.8a17b892fa14b57cee87dd1d6a7f620e@osgeo.org>

#712: Single-sided buffer gives unexpected result
------------------------+---------------------------
 Reporter:  pmeems      |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.6.3
Component:  Default     |     Version:  3.4.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by jrkleemann):

 * cc: jrkleemann (added)
 * priority:  minor => major


Comment:

 I have the same problem right now. I have analysed the GEOS code a bit and
 here is my conclusion so far:
 These "wings" seem to be the intended behaviour. This happens, when the
 input linestring has an inside turn with too short segments (relative to
 the angle of the turn). More specifically this happens, when the offset
 segments (the original segment offseted by distance) don't intersect.

 The wings are created by inserting the start-/endpoints of the offset
 segments into the offset curve. I will attach an image showing the
 internal curve (blue) used for building the polygon. The arrow show the
 direction of the curve. Red is the resulting Polygon.

 I tried tuning the GEOS code, so instead of the closing segments (wings)
 the intersection points of the offset segments and the original segmets
 are inserted (green circles in the image). This leaves us with the
 internal curve (blue) in the second image. In (my) theory this should
 remove the wings and leave us with the correct polygon. Instead this
 results in an
 {{{util::TopologyException}}}
 in
 {{{void DirectedEdgeStar::computeDepths(DirectedEdge *de)}}}. The method
 is called from the class {{{BufferSubgraph}}};

 I have not looked into the {{{BufferSubgraph}}} class so far. Maybe there
 is a way to workaround the crash.

 I'll upgrade the ticket to major priority. Maybe someone with a deeper
 knowledge of the algorithm can look into this.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/712#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep 15 03:16:05 2017
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 15 Sep 2017 10:16:05 -0000
Subject: [geos-devel] [GEOS] #712: Single-sided buffer gives unexpected
	result
In-Reply-To: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
References: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
Message-ID: <059.6e9e23a9bfb9de08627a33be2e12c64a@osgeo.org>

#712: Single-sided buffer gives unexpected result
------------------------+---------------------------
 Reporter:  pmeems      |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.6.3
Component:  Default     |     Version:  3.4.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by jrkleemann):

 * Attachment "712.PNG" added.


--
Ticket URL: <https://trac.osgeo.org/geos/ticket/712>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep 15 03:16:13 2017
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 15 Sep 2017 10:16:13 -0000
Subject: [geos-devel] [GEOS] #712: Single-sided buffer gives unexpected
	result
In-Reply-To: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
References: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
Message-ID: <059.3e5549d556d2adbfbb499ca3865a3ea2@osgeo.org>

#712: Single-sided buffer gives unexpected result
------------------------+---------------------------
 Reporter:  pmeems      |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.6.3
Component:  Default     |     Version:  3.4.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by jrkleemann):

 * Attachment "712_2.PNG" added.


--
Ticket URL: <https://trac.osgeo.org/geos/ticket/712>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep 15 09:19:26 2017
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 15 Sep 2017 16:19:26 -0000
Subject: [geos-devel] [GEOS] #712: Single-sided buffer gives unexpected
	result
In-Reply-To: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
References: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
Message-ID: <059.7e0db666fe24606b24b1c2ea989b2ee9@osgeo.org>

#712: Single-sided buffer gives unexpected result
------------------------+---------------------------
 Reporter:  pmeems      |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.6.3
Component:  Default     |     Version:  3.4.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by mdavis):

 Pretty likely that JTS gives the same result.

 There's a lot of heuristics in the buffer code, intended to give stable
 and correct results for all of the various ways in which it can be
 parameterized (but with priority given to the primary use case of round
 buffers).  It might be possible to improve the heuristics to get better
 results in this situation, but it will require either extensive testing to
 ensure no regression in all other buffer situations, or a different code
 path provided for just Single-Sided Buffer.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/712#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 18 00:09:40 2017
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 18 Sep 2017 07:09:40 -0000
Subject: [geos-devel] [GEOS] #712: Single-sided buffer gives unexpected
	result
In-Reply-To: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
References: <044.e44f2cd91b9bae7b5137231f5fae5218@osgeo.org>
Message-ID: <059.1b8caeb5dcff31a5779ca8842e58df91@osgeo.org>

#712: Single-sided buffer gives unexpected result
------------------------+---------------------------
 Reporter:  pmeems      |       Owner:  geos-devel@…
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.6.3
Component:  Default     |     Version:  3.4.2
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by jrkleemann):

 JTS has pretty much the same code, so it should provide the same result.

--
Ticket URL: <https://trac.osgeo.org/geos/ticket/712#comment:6>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mateusz at loskot.net  Sat Sep 30 12:26:42 2017
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sat, 30 Sep 2017 21:26:42 +0200
Subject: [geos-devel] GEOS C++ API deprecated? (was: PostGIS 2.5 what should
	be minimum requirements?)
Message-ID: <CABUeae9=hAkTb5AM3GFRq1cGiUoSvkUtkeyXV3CsEBNVsYmHsg@mail.gmail.com>

/topic changed
/cc geos-devel

On 30 September 2017 at 20:47, Greg Troxel <gdt at lexort.com> wrote:
> Mateusz Loskot <mateusz at loskot.net> writes:
>
>>> There isn't agreement about whether it is a bug for packages to use the
>>> GEOS C++ API.  If it really is a bug, GEOS is buggy for installing the
>>> headers.
>>
>> Please, can we stop this heresy?
>> I'm tired of explaining GEOS C++ API status.
>
> So do you agree with this, taken from the geos README (in 3.6.2):
>
>   ### Using the C++ interface (discouraged)
>
>   NB: The C++ interface should not be used directly; the GEOS project
>   views it as a bug for another program to use the C++ interface or even
>   to directly link against the C++ library.
> [...]
>
> Or do you think something else?

Greg,

No, I don't agree with this.

Moreover, this paragraph has no rights to be there or in any official
GEOS writing.
I'm very surprised Sandro allowed it in - I assume a merge in rush.

It sneaked in (unnoticed) via [1] as follow-up to this thread [2] on geos-devel
which had not received any response declaring C++ API as deprecated
or even no response that uses word 'deprecate'.
Sandro clearly stated, C++ API users are warned [3].

Five years later, I answered the same question [4]:
"GEOS C++ API is not an internal API, but a public yet supported API
offered by GEOS."
and Sandro, as the project leader, had not arrived with any corrections.

Finally, even if GEOS C++ API was/is marked as deprecated, then I ask
where is the RFC, where is the PSC voting the motion,
where is the public announcement?


> It genuinely seems to me that there are multiple opinions out there.

It is not a matter of an opinion, but a fact.


[1] https://trac.osgeo.org/geos/ticket/553
[2] https://lists.osgeo.org/pipermail/geos-devel/2017-January/007652.html
[3] https://lists.osgeo.org/pipermail/geos-devel/2012-June/005861.html
[4] https://lists.osgeo.org/pipermail/geos-devel/2017-January/007653.html

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

