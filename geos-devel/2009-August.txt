From novalis at novalis.org  Sat Aug  1 00:02:07 2009
From: novalis at novalis.org (David Turner)
Date: Sat Aug  1 00:05:33 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <1248730937.24460.1.camel@localhost>
References: <1248362014.7502.68.camel@gentle>
	<20090723195306.GP75089@keybit.net>
	<1248730937.24460.1.camel@localhost>
Message-ID: <1249099327.18974.157.camel@localhost>

On Mon, 2009-07-27 at 17:42 -0400, David Turner wrote:
> On Thu, 2009-07-23 at 21:53 +0200, strk wrote:
> > On Thu, Jul 23, 2009 at 11:13:34AM -0400, David Turner wrote:
> > > JTS has a class called LengthIndexedLine with a method "project", which
> > > lets you figure out  the nearest point on a line to a given point.  This
> > > is useful, for instance, if you are trying to figure out what street a
> > > person is on from (possibly slightly inaccurate) GPS observations.
> > > 
> > > http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> > > 
> > > PostGIS calls this function st_line_locate_point.
> > > 
> > > GEOS doesn't seem to have it, even though I was under the impression
> > > that GEOS was merely a port of JTS.  If I port JTS's project function
> > > and related functions such as extractPoint to GEOS, would that patch be
> > > likely to be accepted?  Or am I missing something about the relationship
> > > between JTS and GEOS?
> > 
> > Your patch would be welcome. Make sure to include unit testing please.
> 
> I have a patch.  Unfortunately, I do not yet have unit tests, because I
> cannot find the relevant Java unit tests to port.  I could write my own,
> but it seems like some of the other code uses ported Java unit tests,
> and I want to follow the common practice.
> 
> Can you point me to the Java unit tests?

Just wanted to follow up to be sure this wasn't lost.  The example I'm
looking at, in case I'm missing something, is:

tests/unit/algorithm/RobustLineIntersectionTest.cpp

which claims to be:

Ported from JTS junit/algorithm/RobustLineIntersectionTest.java

I assume there are probably similar tests for the linearref stuff, but
the JTS CVS appears to be empty or down or something, and Googling turns
up nothing.  

From strk at keybit.net  Sun Aug  2 09:23:18 2009
From: strk at keybit.net (strk)
Date: Sun Aug  2 09:23:30 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <1249099327.18974.157.camel@localhost>
References: <1248362014.7502.68.camel@gentle>
	<20090723195306.GP75089@keybit.net>
	<1248730937.24460.1.camel@localhost>
	<1249099327.18974.157.camel@localhost>
Message-ID: <20090802132318.GE30979@keybit.net>

Let's ask Martin...
Are unit tests for LengthIndexedLine available or to be made ?

--strk;

On Sat, Aug 01, 2009 at 12:02:07AM -0400, David Turner wrote:
> On Mon, 2009-07-27 at 17:42 -0400, David Turner wrote:
> > On Thu, 2009-07-23 at 21:53 +0200, strk wrote:
> > > On Thu, Jul 23, 2009 at 11:13:34AM -0400, David Turner wrote:
> > > > JTS has a class called LengthIndexedLine with a method "project", which
> > > > lets you figure out  the nearest point on a line to a given point.  This
> > > > is useful, for instance, if you are trying to figure out what street a
> > > > person is on from (possibly slightly inaccurate) GPS observations.
> > > > 
> > > > http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> > > > 
> > > > PostGIS calls this function st_line_locate_point.
> > > > 
> > > > GEOS doesn't seem to have it, even though I was under the impression
> > > > that GEOS was merely a port of JTS.  If I port JTS's project function
> > > > and related functions such as extractPoint to GEOS, would that patch be
> > > > likely to be accepted?  Or am I missing something about the relationship
> > > > between JTS and GEOS?
> > > 
> > > Your patch would be welcome. Make sure to include unit testing please.
> > 
> > I have a patch.  Unfortunately, I do not yet have unit tests, because I
> > cannot find the relevant Java unit tests to port.  I could write my own,
> > but it seems like some of the other code uses ported Java unit tests,
> > and I want to follow the common practice.
> > 
> > Can you point me to the Java unit tests?
> 
> Just wanted to follow up to be sure this wasn't lost.  The example I'm
> looking at, in case I'm missing something, is:
> 
> tests/unit/algorithm/RobustLineIntersectionTest.cpp
> 
> which claims to be:
> 
> Ported from JTS junit/algorithm/RobustLineIntersectionTest.java
> 
> I assume there are probably similar tests for the linearref stuff, but
> the JTS CVS appears to be empty or down or something, and Googling turns
> up nothing.  
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

-- 

 Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
 http://foo.keybit.net/~strk/services.html  /\  Keep it simple! 
From doublebyte at gmail.com  Sun Aug  2 16:51:41 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Aug  2 16:51:46 2009
Subject: [geos-devel] (not) Empty geometry
Message-ID: <23ab5f0a0908021351w53233efehdb82784d0c7248aa@mail.gmail.com>

Skipped content of type multipart/alternative-------------- next part --------------
A non-text attachment was scrubbed...
Name: polygon.wkt
Type: application/octet-stream
Size: 51117 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon-0001.obj
From mateusz at loskot.net  Sun Aug  2 16:57:47 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun Aug  2 16:57:52 2009
Subject: [geos-devel] (not) Empty geometry
In-Reply-To: <23ab5f0a0908021351w53233efehdb82784d0c7248aa@mail.gmail.com>
References: <23ab5f0a0908021351w53233efehdb82784d0c7248aa@mail.gmail.com>
Message-ID: <4A75FDCB.4020104@loskot.net>

Jo wrote:
> Hi, I am having some troubles with a polygon, that is seen by geos as
> empty (and thus returning GetNumPoints()=0);
> I dont understand what might be wrong with this polygon, since the
> output of geos::io::WKTWriter shows a polygon with many
> coordinates...

It's impossible to judge unless you show a snippet of code
that presents how you construct a polygon object using GEOS?
What's the source data?

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
Charter Member of OSGeo, http://osgeo.org
From doublebyte at gmail.com  Sun Aug  2 17:16:29 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Aug  2 17:16:31 2009
Subject: [geos-devel] Re:(not) Empty geometry
Message-ID: <23ab5f0a0908021416g27919536o256fd515f79acacc@mail.gmail.com>

I just realized the mailing list truncated my last message; here it is
(without the attach!)

Hi,
I am having some troubles with a polygon, that is seen by geos as empty (and
thus returning GetNumPoints()=0); I dont understand what might be wrong with
this polygon, since the output of geos::io::WKTWriter shows a polygon with
many coordinates... I append that output here;
I also put an image of the polygon on:

http://ladybug.no-ip.org/files/emptyPolygon.png

It would be great if anybody had some suggestions: Im realy lost here!
Thanks in advance for ur help,

cheers,

Jo


2009/8/2 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. (not) Empty geometry (Jo)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 2 Aug 2009 21:51:41 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] (not) Empty geometry
> To: geos-devel@lists.osgeo.org
> Message-ID:
>        <23ab5f0a0908021351w53233efehdb82784d0c7248aa@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> Skipped content of type multipart/alternative-------------- next part
> --------------
> A non-text attachment was scrubbed...
> Name: polygon.wkt
> Type: application/octet-stream
> Size: 51117 bytes
> Desc: not available
> Url :
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 82, Issue 3
> *****************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/1c757e2c/attachment.html
From mateusz at loskot.net  Sun Aug  2 17:30:06 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun Aug  2 17:30:10 2009
Subject: [geos-devel] Re:(not) Empty geometry
In-Reply-To: <23ab5f0a0908021416g27919536o256fd515f79acacc@mail.gmail.com>
References: <23ab5f0a0908021416g27919536o256fd515f79acacc@mail.gmail.com>
Message-ID: <4A76055E.1040308@loskot.net>

Jo wrote:
> I just realized the mailing list truncated my last message; here it is
> (without the attach!)

Sorry, I didn't see any source code in your message.
See how it is archived:

http://lists.osgeo.org/pipermail/geos-devel/2009-August/004293.html

Or you mean polygon.obj attachment?

http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
Charter Member of OSGeo, http://osgeo.org
From doublebyte at gmail.com  Sun Aug  2 17:56:43 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Aug  2 17:56:47 2009
Subject: [geos-devel] Re: (not) Empty geometry (Jo)
Message-ID: <23ab5f0a0908021456x3928293al32e4e1186dfc1896@mail.gmail.com>

Hi,
The attach was only the wkt definition of the polygon...
Things are gettin a bit clearer now: the polygon is also valid and
empty on OGR (so I guess no prob in importing it to geos).
I think is outside the scope of this mailing list to tell how Im
importing it into OGR, but I ll do it anyway :-)


		while( (poFeature = poLayer->GetNextFeature()) != NULL )
		{
			OGRGeometry *poGeometry;
			poGeometry = poFeature->GetGeometryRef();
	
			if( poGeometry != NULL && wkbFlatten(poGeometry->getGeometryType())
== wkbPolygon )
			{
				OGRPolygon *poPolygon = (OGRPolygon*) poGeometry;
                                 DoStuffWithGEOS()
			}
                   }
Inside DoStuffWithGEOS(), I export it to text and import it (from
text) to Geos. I guess this is all working fine cause it works for all
the hundreds of polygons that I have, so I guess this one is "special"
:-)
I would have to look at it with a bit more detail!!
It looks fine in QGis thought...

http://ladybug.no-ip.org/files/emptyPolygon.png

                                                           cheers,
                                                                   Jo



Jo wrote:
>* I just realized the mailing list truncated my last message; here it is
*>* (without the attach!)
*
Sorry, I didn't see any source code in your message.
See how it is archived:

http://lists.osgeo.org/pipermail/geos-devel/2009-August/004293.html

Or you mean polygon.obj attachment?

http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj

Best regards,



2009/8/2 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. (not) Empty geometry (Jo)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 2 Aug 2009 21:51:41 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] (not) Empty geometry
> To: geos-devel@lists.osgeo.org
> Message-ID:
>        <23ab5f0a0908021351w53233efehdb82784d0c7248aa@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> Skipped content of type multipart/alternative-------------- next part
> --------------
> A non-text attachment was scrubbed...
> Name: polygon.wkt
> Type: application/octet-stream
> Size: 51117 bytes
> Desc: not available
> Url :
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 82, Issue 3
> *****************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/778c5fc1/attachment.html
From mateusz at loskot.net  Sun Aug  2 18:12:56 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Sun Aug  2 18:13:02 2009
Subject: [geos-devel] Re: (not) Empty geometry (Jo)
In-Reply-To: <23ab5f0a0908021456x3928293al32e4e1186dfc1896@mail.gmail.com>
References: <23ab5f0a0908021456x3928293al32e4e1186dfc1896@mail.gmail.com>
Message-ID: <4A760F68.8050609@loskot.net>

Jo wrote:
> Hi,
> The attach was only the wkt definition of the polygon...
> Things are gettin a bit clearer now: the polygon is also valid and
> empty on OGR (so I guess no prob in importing it to geos).
> I think is outside the scope of this mailing list to tell how Im
> importing it into OGR, but I ll do it anyway :-)
> 
> 
> 		while( (poFeature = poLayer->GetNextFeature()) != NULL )
> 		{
> 			OGRGeometry *poGeometry;
> 			poGeometry = poFeature->GetGeometryRef();
> 	
> 			if( poGeometry != NULL && wkbFlatten(poGeometry->getGeometryType())
> == wkbPolygon )
> 			{
> 				OGRPolygon *poPolygon = (OGRPolygon*) poGeometry;
>                                  DoStuffWithGEOS()

What does this return?

poPolygon->getExteriorRing()->getNumPoints()

> 			}
>                    }
> Inside DoStuffWithGEOS(), I export it to text and import it (from
> text) to Geos. 

You don't need to go through text export/import.
Just dump OGR geometry as GEOS geometry using
OGRGeometry::exportToGEOS() method:

http://trac.osgeo.org/gdal/browser/trunk/gdal/ogr/ogr_geometry.h#L118

And check if GEOS geomtetry is OK now.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
Charter Member of OSGeo, http://osgeo.org
From frederik at remote.org  Sun Aug  2 18:22:25 2009
From: frederik at remote.org (Frederik Ramm)
Date: Sun Aug  2 18:22:31 2009
Subject: [geos-devel] Polygonizer returns inner rings on their own?
Message-ID: <4A7611A1.5080202@remote.org>

Hi,

    why is it that the (C++) Polygonizer, when given the following four 
geometries,

         "LINESTRING(1 1, 1 10, 10 10)"
         "LINESTRING(10 10, 10 1, 1 1)"
         "LINESTRING(20 20, 20 30, 30 30, 30 20, 20 20)"
         "LINESTRING(3 3, 3 4, 4 4, 4 3, 3 3)"

(1 and 2 together form a shell, 3 forms a disjunct shell, 4 forms an 
inner ring of 1+2)

returns a collection of three polygons:

POLYGON ((1.00 1.00, 1.00 10.00, 10.00 10.00, 10.00 1.00, 1.00 1.00), 
(3.00 3.00, 4.00 3.00, 4.00 4.00, 3.00 4.00, 3.00 3.00))
POLYGON ((20.00 20.00, 20.00 30.00, 30.00 30.00, 30.00 20.00, 20.00 20.00))
POLYGON ((3.00 3.00, 3.00 4.00, 4.00 4.00, 4.00 3.00, 3.00 3.00))

I'm ok with the first and second, but the third one has already been 
used as a "hole" inside the first and should not be returned again - or 
is there a misunderstanding on my part?

Bye
Frederik

-- 
Frederik Ramm  ##  eMail frederik@remote.org  ##  N49?00'09" E008?23'33"
From doublebyte at gmail.com  Sun Aug  2 18:42:52 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Aug  2 18:42:55 2009
Subject: [geos-devel] Re: (not) Empty geometry
Message-ID: <23ab5f0a0908021542s5a43781bo2f5dcc6e205c574f@mail.gmail.com>

Thanks a lot all for your replies!
It turns out that there was no problem with the geometry itself, but with
another geometry that I generated from it; this second geometry was *empty*,
but not *null* and so I was failing a test to catch it that would turn it
out to my first (correct) geometry.
                                                 Thanks again for your time
and have a good evening!

Jo

2009/8/2 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. Re: (Mateusz Loskot)
>   2. Re:(not) Empty geometry (Jo)
>   3. Re: Re:(not) Empty geometry (Mateusz Loskot)
>   4. Re: (not) Empty geometry (Jo) (Jo)
>   5. Re: Re: (not) Empty geometry (Jo) (Mateusz Loskot)
>   6. Polygonizer returns inner rings on their own? (Frederik Ramm)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sun, 02 Aug 2009 21:57:47 +0100
> From: Mateusz Loskot <mateusz@loskot.net>
> Subject: Re: [geos-devel] (not) Empty geometry
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID: <4A75FDCB.4020104@loskot.net>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Jo wrote:
> > Hi, I am having some troubles with a polygon, that is seen by geos as
> > empty (and thus returning GetNumPoints()=0);
> > I dont understand what might be wrong with this polygon, since the
> > output of geos::io::WKTWriter shows a polygon with many
> > coordinates...
>
> It's impossible to judge unless you show a snippet of code
> that presents how you construct a polygon object using GEOS?
> What's the source data?
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
> Charter Member of OSGeo, http://osgeo.org
>
>
> ------------------------------
>
> Message: 2
> Date: Sun, 2 Aug 2009 22:16:29 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] Re:(not) Empty geometry
> To: geos-devel@lists.osgeo.org
> Message-ID:
>        <23ab5f0a0908021416g27919536o256fd515f79acacc@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> I just realized the mailing list truncated my last message; here it is
> (without the attach!)
>
> Hi,
> I am having some troubles with a polygon, that is seen by geos as empty
> (and
> thus returning GetNumPoints()=0); I dont understand what might be wrong
> with
> this polygon, since the output of geos::io::WKTWriter shows a polygon with
> many coordinates... I append that output here;
> I also put an image of the polygon on:
>
> http://ladybug.no-ip.org/files/emptyPolygon.png
>
> It would be great if anybody had some suggestions: Im realy lost here!
> Thanks in advance for ur help,
>
> cheers,
>
> Jo
>
>
> 2009/8/2 <geos-devel-request@lists.osgeo.org>
>
> > Send geos-devel mailing list submissions to
> >        geos-devel@lists.osgeo.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > or, via email, send a message with subject or body 'help' to
> >        geos-devel-request@lists.osgeo.org
> >
> > You can reach the person managing the list at
> >        geos-devel-owner@lists.osgeo.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of geos-devel digest..."
> >
> >
> > Today's Topics:
> >
> >   1. (not) Empty geometry (Jo)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sun, 2 Aug 2009 21:51:41 +0100
> > From: Jo <doublebyte@gmail.com>
> > Subject: [geos-devel] (not) Empty geometry
> > To: geos-devel@lists.osgeo.org
> > Message-ID:
> >        <23ab5f0a0908021351w53233efehdb82784d0c7248aa@mail.gmail.com>
> > Content-Type: text/plain; charset="iso-8859-1"
> >
> > Skipped content of type multipart/alternative-------------- next part
> > --------------
> > A non-text attachment was scrubbed...
> > Name: polygon.wkt
> > Type: application/octet-stream
> > Size: 51117 bytes
> > Desc: not available
> > Url :
> >
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj
> >
> > ------------------------------
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > End of geos-devel Digest, Vol 82, Issue 3
> > *****************************************
> >
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/1c757e2c/attachment-0001.html
>
> ------------------------------
>
> Message: 3
> Date: Sun, 02 Aug 2009 22:30:06 +0100
> From: Mateusz Loskot <mateusz@loskot.net>
> Subject: Re: [geos-devel] Re:(not) Empty geometry
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID: <4A76055E.1040308@loskot.net>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Jo wrote:
> > I just realized the mailing list truncated my last message; here it is
> > (without the attach!)
>
> Sorry, I didn't see any source code in your message.
> See how it is archived:
>
> http://lists.osgeo.org/pipermail/geos-devel/2009-August/004293.html
>
> Or you mean polygon.obj attachment?
>
>
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
> Charter Member of OSGeo, http://osgeo.org
>
>
> ------------------------------
>
> Message: 4
> Date: Sun, 2 Aug 2009 22:56:43 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] Re: (not) Empty geometry (Jo)
> To: geos-devel@lists.osgeo.org
> Message-ID:
>        <23ab5f0a0908021456x3928293al32e4e1186dfc1896@mail.gmail.com>
> Content-Type: text/plain; charset="iso-8859-1"
>
> Hi,
> The attach was only the wkt definition of the polygon...
> Things are gettin a bit clearer now: the polygon is also valid and
> empty on OGR (so I guess no prob in importing it to geos).
> I think is outside the scope of this mailing list to tell how Im
> importing it into OGR, but I ll do it anyway :-)
>
>
>                while( (poFeature = poLayer->GetNextFeature()) != NULL )
>                {
>                        OGRGeometry *poGeometry;
>                        poGeometry = poFeature->GetGeometryRef();
>
>                        if( poGeometry != NULL &&
> wkbFlatten(poGeometry->getGeometryType())
> == wkbPolygon )
>                        {
>                                OGRPolygon *poPolygon = (OGRPolygon*)
> poGeometry;
>                                 DoStuffWithGEOS()
>                        }
>                   }
> Inside DoStuffWithGEOS(), I export it to text and import it (from
> text) to Geos. I guess this is all working fine cause it works for all
> the hundreds of polygons that I have, so I guess this one is "special"
> :-)
> I would have to look at it with a bit more detail!!
> It looks fine in QGis thought...
>
> http://ladybug.no-ip.org/files/emptyPolygon.png
>
>                                                           cheers,
>                                                                   Jo
>
>
>
> Jo wrote:
> >* I just realized the mailing list truncated my last message; here it is
> *>* (without the attach!)
> *
> Sorry, I didn't see any source code in your message.
> See how it is archived:
>
> http://lists.osgeo.org/pipermail/geos-devel/2009-August/004293.html
>
> Or you mean polygon.obj attachment?
>
>
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj
>
> Best regards,
>
>
>
> 2009/8/2 <geos-devel-request@lists.osgeo.org>
>
> > Send geos-devel mailing list submissions to
> >        geos-devel@lists.osgeo.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > or, via email, send a message with subject or body 'help' to
> >        geos-devel-request@lists.osgeo.org
> >
> > You can reach the person managing the list at
> >        geos-devel-owner@lists.osgeo.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of geos-devel digest..."
> >
> >
> > Today's Topics:
> >
> >   1. (not) Empty geometry (Jo)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sun, 2 Aug 2009 21:51:41 +0100
> > From: Jo <doublebyte@gmail.com>
> > Subject: [geos-devel] (not) Empty geometry
> > To: geos-devel@lists.osgeo.org
> > Message-ID:
> >        <23ab5f0a0908021351w53233efehdb82784d0c7248aa@mail.gmail.com>
> > Content-Type: text/plain; charset="iso-8859-1"
> >
> > Skipped content of type multipart/alternative-------------- next part
> > --------------
> > A non-text attachment was scrubbed...
> > Name: polygon.wkt
> > Type: application/octet-stream
> > Size: 51117 bytes
> > Desc: not available
> > Url :
> >
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/9e51e147/polygon.obj
> >
> > ------------------------------
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > End of geos-devel Digest, Vol 82, Issue 3
> > *****************************************
> >
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/778c5fc1/attachment-0001.html
>
> ------------------------------
>
> Message: 5
> Date: Sun, 02 Aug 2009 23:12:56 +0100
> From: Mateusz Loskot <mateusz@loskot.net>
> Subject: Re: [geos-devel] Re: (not) Empty geometry (Jo)
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID: <4A760F68.8050609@loskot.net>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Jo wrote:
> > Hi,
> > The attach was only the wkt definition of the polygon...
> > Things are gettin a bit clearer now: the polygon is also valid and
> > empty on OGR (so I guess no prob in importing it to geos).
> > I think is outside the scope of this mailing list to tell how Im
> > importing it into OGR, but I ll do it anyway :-)
> >
> >
> >               while( (poFeature = poLayer->GetNextFeature()) != NULL )
> >               {
> >                       OGRGeometry *poGeometry;
> >                       poGeometry = poFeature->GetGeometryRef();
> >
> >                       if( poGeometry != NULL &&
> wkbFlatten(poGeometry->getGeometryType())
> > == wkbPolygon )
> >                       {
> >                               OGRPolygon *poPolygon = (OGRPolygon*)
> poGeometry;
> >                                  DoStuffWithGEOS()
>
> What does this return?
>
> poPolygon->getExteriorRing()->getNumPoints()
>
> >                       }
> >                    }
> > Inside DoStuffWithGEOS(), I export it to text and import it (from
> > text) to Geos.
>
> You don't need to go through text export/import.
> Just dump OGR geometry as GEOS geometry using
> OGRGeometry::exportToGEOS() method:
>
> http://trac.osgeo.org/gdal/browser/trunk/gdal/ogr/ogr_geometry.h#L118
>
> And check if GEOS geomtetry is OK now.
>
> Best regards,
> --
> Mateusz Loskot, http://mateusz.loskot.net
> Charter Member of OSGeo, http://osgeo.org
>
>
> ------------------------------
>
> Message: 6
> Date: Mon, 03 Aug 2009 00:22:25 +0200
> From: Frederik Ramm <frederik@remote.org>
> Subject: [geos-devel] Polygonizer returns inner rings on their own?
> To: geos-devel@lists.osgeo.org
> Message-ID: <4A7611A1.5080202@remote.org>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> Hi,
>
>    why is it that the (C++) Polygonizer, when given the following four
> geometries,
>
>         "LINESTRING(1 1, 1 10, 10 10)"
>         "LINESTRING(10 10, 10 1, 1 1)"
>         "LINESTRING(20 20, 20 30, 30 30, 30 20, 20 20)"
>         "LINESTRING(3 3, 3 4, 4 4, 4 3, 3 3)"
>
> (1 and 2 together form a shell, 3 forms a disjunct shell, 4 forms an
> inner ring of 1+2)
>
> returns a collection of three polygons:
>
> POLYGON ((1.00 1.00, 1.00 10.00, 10.00 10.00, 10.00 1.00, 1.00 1.00),
> (3.00 3.00, 4.00 3.00, 4.00 4.00, 3.00 4.00, 3.00 3.00))
> POLYGON ((20.00 20.00, 20.00 30.00, 30.00 30.00, 30.00 20.00, 20.00 20.00))
> POLYGON ((3.00 3.00, 3.00 4.00, 4.00 4.00, 4.00 3.00, 3.00 3.00))
>
> I'm ok with the first and second, but the third one has already been
> used as a "hole" inside the first and should not be returned again - or
> is there a misunderstanding on my part?
>
> Bye
> Frederik
>
> --
> Frederik Ramm  ##  eMail frederik@remote.org  ##  N49?00'09" E008?23'33"
>
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 82, Issue 4
> *****************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/2b43a1b2/attachment-0001.html
From frederik at remote.org  Sun Aug  2 18:14:20 2009
From: frederik at remote.org (Frederik Ramm)
Date: Sun Aug  2 18:45:35 2009
Subject: [geos-devel] Multipolygon from Linestrings
Message-ID: <4A760FBC.2040804@remote.org>

Dear geos-devel,

    I'm not really a GEOS developer, just a developer using GEOS, but I 
hope that's ok ;-)

I'm writing a C/C++ program, and have a problem which I thought was simple:

* I have a number of linestrings which together from the edges of a 
multipolygon. I actually know which of those make up rings (e.g. I know 
that Linestrings A, B, C together form ring #1, Linestring D forms ring 
#2, and Linestrings E, F together form ring #3) but I don't have 
information about which of those are shells or holes. I read these from 
a file, in WKB notation, and they really are Linestrings even if their 
first and last point is the same.

* I want to make these into a Multipolygon using either the GEOS C++ or 
the C API.

* Special requirement: After the process is through, I want to know 
which of my Linestrings have become (parts of) shells and which have 
become (parts of) holes.

The last requirement seems to rule out the "Polygonizer" magic for me, 
so I have to do it by hand:

1. assemble rings from my linestrings,
2. find out which are inside which (i.e. which are shells, which are holes)
3. then call createPolygon.

I'm having problems with #1 and #2. For #1, I need to (a) combine a 
chain of n linestrings into one linestring and/or (b) make a LinearRing 
from a simple and closed linestring. I have spent half a day on the 
documentation and tried out everything, but for both problems (a) and 
(b) I have found no other solution than to extract the 
CoordinateCollections from each Geometry and create a completely new 
Geometry afterwards, as in

     CoordinateSequence *cs1 = g1->getCoordinates();
     CoordinateSequence *cs2 = g2->getCoordinates();
     cs1->add(cs2, false, true);
     delete cs2;
     LinearRing *l1 = new LinearRing(cs1, global_factory);

or

     LinearRing *l2 = new LinearRing(linestring->getCoordinates(), 
global_factory);


With #2 the problem is that even once I have LinearRings, I cannot call 
"within" on them because something can only be "within" a polygon and 
not a LinearRing (any combination of "within" on two concentric rings 
gives false). So I'd first have to convert my rings into individual 
polygons to find out which is inside which...?

Maybe I'm overly cautious here but I am trying to write a program that 
can process a lot of these in a short time, and all solutions I have 
found until now sound like an awful lot of copying data around!

I understand that the Polygonizer is supposed to do all this by magic 
but as I said it doesn't tell me enough about what it does...

Bye
Frederik

-- 
Frederik Ramm  ##  eMail frederik@remote.org  ##  N49?00'09" E008?23'33"
From strk at keybit.net  Tue Aug  4 14:51:58 2009
From: strk at keybit.net (strk)
Date: Tue Aug  4 14:52:39 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <20090802132318.GE30979@keybit.net>
References: <1248362014.7502.68.camel@gentle>
	<20090723195306.GP75089@keybit.net>
	<1248730937.24460.1.camel@localhost>
	<1249099327.18974.157.camel@localhost>
	<20090802132318.GE30979@keybit.net>
Message-ID: <20090804185158.GA30859@keybit.net>

Martin forgot to answer publically, anyway, he mentioned
tests are here: test.jts.junit.linearref 

NOTE: they are only in CVS:

 :pserver:cvs@cvs.jump-project.org:/home/cvs/jts

--strk;

 Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
 http://foo.keybit.net/~strk/services.html  /\  Keep it simple! 

On Sun, Aug 02, 2009 at 03:23:18PM +0200, strk wrote:
> Let's ask Martin...
> Are unit tests for LengthIndexedLine available or to be made ?
> 
> --strk;
> 
> On Sat, Aug 01, 2009 at 12:02:07AM -0400, David Turner wrote:
> > On Mon, 2009-07-27 at 17:42 -0400, David Turner wrote:
> > > On Thu, 2009-07-23 at 21:53 +0200, strk wrote:
> > > > On Thu, Jul 23, 2009 at 11:13:34AM -0400, David Turner wrote:
> > > > > JTS has a class called LengthIndexedLine with a method "project", which
> > > > > lets you figure out  the nearest point on a line to a given point.  This
> > > > > is useful, for instance, if you are trying to figure out what street a
> > > > > person is on from (possibly slightly inaccurate) GPS observations.
> > > > > 
> > > > > http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> > > > > 
> > > > > PostGIS calls this function st_line_locate_point.
> > > > > 
> > > > > GEOS doesn't seem to have it, even though I was under the impression
> > > > > that GEOS was merely a port of JTS.  If I port JTS's project function
> > > > > and related functions such as extractPoint to GEOS, would that patch be
> > > > > likely to be accepted?  Or am I missing something about the relationship
> > > > > between JTS and GEOS?
> > > > 
> > > > Your patch would be welcome. Make sure to include unit testing please.
> > > 
> > > I have a patch.  Unfortunately, I do not yet have unit tests, because I
> > > cannot find the relevant Java unit tests to port.  I could write my own,
> > > but it seems like some of the other code uses ported Java unit tests,
> > > and I want to follow the common practice.
> > > 
> > > Can you point me to the Java unit tests?
> > 
> > Just wanted to follow up to be sure this wasn't lost.  The example I'm
> > looking at, in case I'm missing something, is:
> > 
> > tests/unit/algorithm/RobustLineIntersectionTest.cpp
> > 
> > which claims to be:
> > 
> > Ported from JTS junit/algorithm/RobustLineIntersectionTest.java
> > 
> > I assume there are probably similar tests for the linearref stuff, but
> > the JTS CVS appears to be empty or down or something, and Googling turns
> > up nothing.  
> > 
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> -- 
> 
>  Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
>  http://foo.keybit.net/~strk/services.html  /\  Keep it simple! 
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
From mbdavis at refractions.net  Wed Aug  5 12:01:07 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Wed Aug  5 11:59:53 2009
Subject: [geos-devel] Polygonizer returns inner rings on their own?
In-Reply-To: <4A7611A1.5080202@remote.org>
References: <4A7611A1.5080202@remote.org>
Message-ID: <4A79ACC3.4050703@refractions.net>

The Polygonizer creates every possible polygon defined by the input 
linework.  That is, it forms the linework into a polygonal coverage.  
That's why the hole also has a polygon filling it.

This is one common requirement for polygonization.  Howwever, I can see 
that it might be useful to be able to specify that the Polygonizer 
should return only a (Multi)Polygon out of the input linework, which 
sounds like it would meet your need.  This would compute the depth 
parity of the (potentially nested) polygons, and discard those with even 
parity.  I might try and add this to JTS shortly.

Frederik Ramm wrote:
> Hi,
>
>    why is it that the (C++) Polygonizer, when given the following four 
> geometries,
>
>         "LINESTRING(1 1, 1 10, 10 10)"
>         "LINESTRING(10 10, 10 1, 1 1)"
>         "LINESTRING(20 20, 20 30, 30 30, 30 20, 20 20)"
>         "LINESTRING(3 3, 3 4, 4 4, 4 3, 3 3)"
>
> (1 and 2 together form a shell, 3 forms a disjunct shell, 4 forms an 
> inner ring of 1+2)
>
> returns a collection of three polygons:
>
> POLYGON ((1.00 1.00, 1.00 10.00, 10.00 10.00, 10.00 1.00, 1.00 1.00), 
> (3.00 3.00, 4.00 3.00, 4.00 4.00, 3.00 4.00, 3.00 3.00))
> POLYGON ((20.00 20.00, 20.00 30.00, 30.00 30.00, 30.00 20.00, 20.00 
> 20.00))
> POLYGON ((3.00 3.00, 3.00 4.00, 4.00 4.00, 4.00 3.00, 3.00 3.00))
>
> I'm ok with the first and second, but the third one has already been 
> used as a "hole" inside the first and should not be returned again - 
> or is there a misunderstanding on my part?
>
> Bye
> Frederik
>

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From doublebyte at gmail.com  Wed Aug  5 19:07:51 2009
From: doublebyte at gmail.com (Jo)
Date: Wed Aug  5 19:07:54 2009
Subject: [geos-devel] Re: (not) Empty geometry
Message-ID: <23ab5f0a0908051607q483c14abo753292f6f63101fd@mail.gmail.com>

>
> > You don't need to go through text export/import.
> > Just dump OGR geometry as GEOS geometry using
> > OGRGeometry::exportToGEOS() method:
> >
> > http://trac.osgeo.org/gdal/browser/trunk/gdal/ogr/ogr_geometry.h#L118
> >
> > And check if GEOS geomtetry is OK now.
> >
> > Best regards,
> > --
> > Mateusz Loskot, http://mateusz.loskot.net
> > Charter Member of OSGeo, http://osgeo.org
>

I think that function might have been removed from the API (unfortunately) :
at least is not on my SVN version and neither it is in the API doc online:

http://gdal.org/ogr/classOGRGeometry.html

                               cheers,
                                             Jo




> >
> >
> > ------------------------------
> >
> > Message: 6
> > Date: Mon, 03 Aug 2009 00:22:25 +0200
> > From: Frederik Ramm <frederik@remote.org>
> > Subject: [geos-devel] Polygonizer returns inner rings on their own?
> > To: geos-devel@lists.osgeo.org
> > Message-ID: <4A7611A1.5080202@remote.org>
> > Content-Type: text/plain; charset=ISO-8859-1; format=flowed
> >
> > Hi,
> >
> >    why is it that the (C++) Polygonizer, when given the following four
> > geometries,
> >
> >         "LINESTRING(1 1, 1 10, 10 10)"
> >         "LINESTRING(10 10, 10 1, 1 1)"
> >         "LINESTRING(20 20, 20 30, 30 30, 30 20, 20 20)"
> >         "LINESTRING(3 3, 3 4, 4 4, 4 3, 3 3)"
> >
> > (1 and 2 together form a shell, 3 forms a disjunct shell, 4 forms an
> > inner ring of 1+2)
> >
> > returns a collection of three polygons:
> >
> > POLYGON ((1.00 1.00, 1.00 10.00, 10.00 10.00, 10.00 1.00, 1.00 1.00),
> > (3.00 3.00, 4.00 3.00, 4.00 4.00, 3.00 4.00, 3.00 3.00))
> > POLYGON ((20.00 20.00, 20.00 30.00, 30.00 30.00, 30.00 20.00, 20.00
> 20.00))
> > POLYGON ((3.00 3.00, 3.00 4.00, 4.00 4.00, 4.00 3.00, 3.00 3.00))
> >
> > I'm ok with the first and second, but the third one has already been
> > used as a "hole" inside the first and should not be returned again - or
> > is there a misunderstanding on my part?
> >
> > Bye
> > Frederik
> >
> > --
> > Frederik Ramm  ##  eMail frederik@remote.org  ##  N49?00'09" E008?23'33"
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > End of geos-devel Digest, Vol 82, Issue 4
> > *****************************************
> >
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> -------------- next part --------------
> An HTML attachment was scrubbed...
> URL:
> http://lists.osgeo.org/pipermail/geos-devel/attachments/20090802/2b43a1b2/attachment.html
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 82, Issue 5
> *****************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090806/e95ad43f/attachment.html
From doublebyte at gmail.com  Wed Aug  5 19:13:25 2009
From: doublebyte at gmail.com (Jo)
Date: Wed Aug  5 19:13:30 2009
Subject: [geos-devel] Re: geos-devel Digest, Vol 82, Issue 7
In-Reply-To: <20090805160034.3DAF0E011A2@lists.osgeo.org>
References: <20090805160034.3DAF0E011A2@lists.osgeo.org>
Message-ID: <23ab5f0a0908051613q7c3c4772gb1e3dcd28231cf60@mail.gmail.com>

Hi,
I'm fighting with some memory leaks at the moment, and I was wondering
what's the best way to release an object created with GeometryFactory; for
instance:

geos::geom::GeometryFactory::createPoint(geos::geom::Coordinate const&)

Is it GeometryFactory::DestroyGeometry ?
Sorry, but I did not see any reference on how to do this on the
documentation or examples; if I missed it, it would be great if you could
point me there...
                          Thanks in advance,
                                                    regards,
                                                                Jo

2009/8/5 <geos-devel-request@lists.osgeo.org>

> Send geos-devel mailing list submissions to
>        geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
>        http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
>        geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
>        geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
>   1. Re: Porting LengthIndexedLine.project? (strk)
>   2. Re: Polygonizer returns inner rings on their own? (Martin Davis)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Tue, 4 Aug 2009 20:51:58 +0200
> From: strk <strk@keybit.net>
> Subject: Re: [geos-devel] Porting LengthIndexedLine.project?
> To: David Turner <novalis@novalis.org>, Martin Davis
>        <mbdavis@refractions.net>,      GEOS Development List
>        <geos-devel@lists.osgeo.org>
> Message-ID: <20090804185158.GA30859@keybit.net>
> Content-Type: text/plain; charset=us-ascii
>
> Martin forgot to answer publically, anyway, he mentioned
> tests are here: test.jts.junit.linearref
>
> NOTE: they are only in CVS:
>
>  :pserver:cvs@cvs.jump-project.org:/home/cvs/jts
>
> --strk;
>
>  Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
>  http://foo.keybit.net/~strk/services.html<http://foo.keybit.net/%7Estrk/services.html> /\  Keep it simple!
>
> On Sun, Aug 02, 2009 at 03:23:18PM +0200, strk wrote:
> > Let's ask Martin...
> > Are unit tests for LengthIndexedLine available or to be made ?
> >
> > --strk;
> >
> > On Sat, Aug 01, 2009 at 12:02:07AM -0400, David Turner wrote:
> > > On Mon, 2009-07-27 at 17:42 -0400, David Turner wrote:
> > > > On Thu, 2009-07-23 at 21:53 +0200, strk wrote:
> > > > > On Thu, Jul 23, 2009 at 11:13:34AM -0400, David Turner wrote:
> > > > > > JTS has a class called LengthIndexedLine with a method "project",
> which
> > > > > > lets you figure out  the nearest point on a line to a given
> point.  This
> > > > > > is useful, for instance, if you are trying to figure out what
> street a
> > > > > > person is on from (possibly slightly inaccurate) GPS
> observations.
> > > > > >
> > > > > >
> http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)<http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project%28com.vividsolutions.jts.geom.Coordinate%29>
> > > > > >
> > > > > > PostGIS calls this function st_line_locate_point.
> > > > > >
> > > > > > GEOS doesn't seem to have it, even though I was under the
> impression
> > > > > > that GEOS was merely a port of JTS.  If I port JTS's project
> function
> > > > > > and related functions such as extractPoint to GEOS, would that
> patch be
> > > > > > likely to be accepted?  Or am I missing something about the
> relationship
> > > > > > between JTS and GEOS?
> > > > >
> > > > > Your patch would be welcome. Make sure to include unit testing
> please.
> > > >
> > > > I have a patch.  Unfortunately, I do not yet have unit tests, because
> I
> > > > cannot find the relevant Java unit tests to port.  I could write my
> own,
> > > > but it seems like some of the other code uses ported Java unit tests,
> > > > and I want to follow the common practice.
> > > >
> > > > Can you point me to the Java unit tests?
> > >
> > > Just wanted to follow up to be sure this wasn't lost.  The example I'm
> > > looking at, in case I'm missing something, is:
> > >
> > > tests/unit/algorithm/RobustLineIntersectionTest.cpp
> > >
> > > which claims to be:
> > >
> > > Ported from JTS junit/algorithm/RobustLineIntersectionTest.java
> > >
> > > I assume there are probably similar tests for the linearref stuff, but
> > > the JTS CVS appears to be empty or down or something, and Googling
> turns
> > > up nothing.
> > >
> > > _______________________________________________
> > > geos-devel mailing list
> > > geos-devel@lists.osgeo.org
> > > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > --
> >
> >  Free GIS & Flash consultant/developer      ()  ASCII Ribbon Campaign
> >  http://foo.keybit.net/~strk/services.html<http://foo.keybit.net/%7Estrk/services.html> /\  Keep it simple!
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
> ------------------------------
>
> Message: 2
> Date: Wed, 05 Aug 2009 09:01:07 -0700
> From: Martin Davis <mbdavis@refractions.net>
> Subject: Re: [geos-devel] Polygonizer returns inner rings on their
>        own?
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID: <4A79ACC3.4050703@refractions.net>
> Content-Type: text/plain; charset=ISO-8859-1; format=flowed
>
> The Polygonizer creates every possible polygon defined by the input
> linework.  That is, it forms the linework into a polygonal coverage.
> That's why the hole also has a polygon filling it.
>
> This is one common requirement for polygonization.  Howwever, I can see
> that it might be useful to be able to specify that the Polygonizer
> should return only a (Multi)Polygon out of the input linework, which
> sounds like it would meet your need.  This would compute the depth
> parity of the (potentially nested) polygons, and discard those with even
> parity.  I might try and add this to JTS shortly.
>
> Frederik Ramm wrote:
> > Hi,
> >
> >    why is it that the (C++) Polygonizer, when given the following four
> > geometries,
> >
> >         "LINESTRING(1 1, 1 10, 10 10)"
> >         "LINESTRING(10 10, 10 1, 1 1)"
> >         "LINESTRING(20 20, 20 30, 30 30, 30 20, 20 20)"
> >         "LINESTRING(3 3, 3 4, 4 4, 4 3, 3 3)"
> >
> > (1 and 2 together form a shell, 3 forms a disjunct shell, 4 forms an
> > inner ring of 1+2)
> >
> > returns a collection of three polygons:
> >
> > POLYGON ((1.00 1.00, 1.00 10.00, 10.00 10.00, 10.00 1.00, 1.00 1.00),
> > (3.00 3.00, 4.00 3.00, 4.00 4.00, 3.00 4.00, 3.00 3.00))
> > POLYGON ((20.00 20.00, 20.00 30.00, 30.00 30.00, 30.00 20.00, 20.00
> > 20.00))
> > POLYGON ((3.00 3.00, 3.00 4.00, 4.00 4.00, 4.00 3.00, 3.00 3.00))
> >
> > I'm ok with the first and second, but the third one has already been
> > used as a "hole" inside the first and should not be returned again -
> > or is there a misunderstanding on my part?
> >
> > Bye
> > Frederik
> >
>
> --
> Martin Davis
> Senior Technical Architect
> Refractions Research, Inc.
> (250) 383-3022
>
>
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 82, Issue 7
> *****************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090806/3511a9ad/attachment-0001.html
From piva at meeo.it  Thu Aug  6 08:11:39 2009
From: piva at meeo.it (Giacomo Piva)
Date: Thu Aug  6 08:18:23 2009
Subject: [geos-devel] First use
Message-ID: <4A7AC87B.4060609@meeo.it>

Hi All,
I just found the GEOS library, i have just installed and i have my code 
(in C) ready to use GEOS.
I see that the C API documentation isn't clear enough for my experience 
so I prefer to ask to you to help me to get started with the first lines.

My problem is that I need to get the intersection between two polygons.
So i figure that i can use the:

GEOSGeometry GEOS_DLL *GEOSIntersection function.

So my first problem is to create the Geometry.
Is there a function such as GeometryFromText() wich accept the coordinates of the corners of the polygon?

Thank to all.

P.S. If someone know a simple tutorial to get started, please send me a link.


-- 
Giacomo Piva

From doublebyte at gmail.com  Thu Aug  6 12:10:21 2009
From: doublebyte at gmail.com (Jo)
Date: Thu Aug  6 12:10:24 2009
Subject: [geos-devel] Re: First use
Message-ID: <23ab5f0a0908060910l4716927fj770064b81105af41@mail.gmail.com>

>
>
> So my first problem is to create the Geometry.
> Is there a function such as GeometryFromText() wich accept the coordinates
> of the corners of the polygon?
>
> Thank to all.
>
> P.S. If someone know a simple tutorial to get started, please send me a
> link.
>

Hi,
I think you can use the WKTReader class; instantiate the object, and then
use the method read(), passing a stl string with the Well Known Geometry

http://geos.refractions.net/ro/doxygen_docs/html/classgeos_1_1io_1_1WKTReader.html

              cheers,
                         Jo

-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090806/2df466f3/attachment.html
From piva at meeo.it  Fri Aug  7 05:50:13 2009
From: piva at meeo.it (Giacomo Piva)
Date: Fri Aug  7 05:50:18 2009
Subject: [geos-devel] Wrong values in GEOSCoordSeq
Message-ID: <4A7BF8D5.8020303@meeo.it>

Hi All,

I'm using for the first time GEOS library in a (ANSI) C application.
I need to get the intersection of two polygons.
Looking at the geos.h file (for C reference) I'm trying to get the 
intersection in this way:

    GEOSCoordSeq coordseq = NULL;
    GEOSGeom area1 = NULL, shell = NULL, intersection = NULL;
    GEOSGeom holes_ptr[1];

    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);    // 5 points 
2 dimensions

    GEOSCoordSeq_setX(coordseq, 0, Lon_UL);    //Coord upper left
    GEOSCoordSeq_setY(coordseq, 0, Lat_UL);
    GEOSCoordSeq_setX(coordseq, 1, Lon_LR);    //Coord upper right
    GEOSCoordSeq_setY(coordseq, 1, Lat_UL);
    GEOSCoordSeq_setX(coordseq, 2, Lon_LR);    //Coord lower right
    GEOSCoordSeq_setY(coordseq, 2, Lat_LR);
    GEOSCoordSeq_setX(coordseq, 3, Lon_UL);    //Coord lower left
    GEOSCoordSeq_setY(coordseq, 3, Lat_LR);
    GEOSCoordSeq_setX(coordseq, 4, Lon_UL);    //Coord upper left (again)
    GEOSCoordSeq_setY(coordseq, 4, Lat_UL);

where Lon_* and Lat_* are float values.

First of all, I'm trying to see if the value in the coordseq are stored 
properly so...

I print the inserted value:  

printf("%f \n", Lon_UL);
...

And the stored values:

for(...
    GEOSCoordSeq_getX(coordseq, i, &pippo);
    printf("[%d] %f ", i, pippo);


Finally, I get different values:
At runtime:

-131.799500

[0] -0.000000 -0.000000
[1] -0.000000 -0.000000
[2] -0.000000 -0.000000
[3] -0.000000 -0.000000
[4] -0.000000 -0.000000


I'm sorry for this stupid question but... what it's wrong?
Thanks to all.

From piva at meeo.it  Fri Aug  7 06:22:34 2009
From: piva at meeo.it (Giacomo Piva)
Date: Fri Aug  7 06:22:39 2009
Subject: [geos-devel] Wrong values in GEOSCoordSeq
In-Reply-To: <4A7BF8D5.8020303@meeo.it>
References: <4A7BF8D5.8020303@meeo.it>
Message-ID: <4A7C006A.8070508@meeo.it>

I'm sorry, I forgot the initGEOS() call.
I'm a donkey ;)

> Hi All,
>
> I'm using for the first time GEOS library in a (ANSI) C application.
> I need to get the intersection of two polygons.
> Looking at the geos.h file (for C reference) I'm trying to get the 
> intersection in this way:
>
>    GEOSCoordSeq coordseq = NULL;
>    GEOSGeom area1 = NULL, shell = NULL, intersection = NULL;
>    GEOSGeom holes_ptr[1];
>
>    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);    // 5 points 
> 2 dimensions
>
>    GEOSCoordSeq_setX(coordseq, 0, Lon_UL);    //Coord upper left
>    GEOSCoordSeq_setY(coordseq, 0, Lat_UL);
>    GEOSCoordSeq_setX(coordseq, 1, Lon_LR);    //Coord upper right
>    GEOSCoordSeq_setY(coordseq, 1, Lat_UL);
>    GEOSCoordSeq_setX(coordseq, 2, Lon_LR);    //Coord lower right
>    GEOSCoordSeq_setY(coordseq, 2, Lat_LR);
>    GEOSCoordSeq_setX(coordseq, 3, Lon_UL);    //Coord lower left
>    GEOSCoordSeq_setY(coordseq, 3, Lat_LR);
>    GEOSCoordSeq_setX(coordseq, 4, Lon_UL);    //Coord upper left (again)
>    GEOSCoordSeq_setY(coordseq, 4, Lat_UL);
>
> where Lon_* and Lat_* are float values.
>
> First of all, I'm trying to see if the value in the coordseq are 
> stored properly so...
>
> I print the inserted value: 
> printf("%f \n", Lon_UL);
> ...
>
> And the stored values:
>
> for(...
>    GEOSCoordSeq_getX(coordseq, i, &pippo);
>    printf("[%d] %f ", i, pippo);
>
>
> Finally, I get different values:
> At runtime:
>
> -131.799500
>
> [0] -0.000000 -0.000000
> [1] -0.000000 -0.000000
> [2] -0.000000 -0.000000
> [3] -0.000000 -0.000000
> [4] -0.000000 -0.000000
>
>
> I'm sorry for this stupid question but... what it's wrong?
> Thanks to all.
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>


-- 
Giacomo Piva

MEEO S.r.l.
Via Saragat 9
I-44122 Ferrara, Italy
Tel: +39 0532 1861501
Fax: +39 0532 1861637
http://www.meeo.it

========================================
"ATTENZIONE:le informazioni contenute in questo messaggio sono
da considerarsi confidenziali ed il loro utilizzo ? riservato unicamente
al destinatario sopra indicato. Chi dovesse ricevere questo messaggio
per errore ? tenuto ad informare il mittente ed a rimuoverlo
definitivamente da ogni supporto elettronico o cartaceo."

"WARNING:This message contains confidential and/or proprietary
information which may be subject to privilege or immunity and which
is intended for use of its addressee only. Should you receive this
message in error, you are kindly requested to inform the sender and
to definitively remove it from any paper or electronic format." 

From novalis at novalis.org  Fri Aug  7 16:45:57 2009
From: novalis at novalis.org (David Turner)
Date: Fri Aug  7 16:49:37 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <1248362014.7502.68.camel@gentle>
References: <1248362014.7502.68.camel@gentle>
Message-ID: <1249677957.7259.275.camel@localhost>

OK, I've done the port.  A patch, with ported tests, is attached.  

On Thu, 2009-07-23 at 11:13 -0400, David Turner wrote:
> JTS has a class called LengthIndexedLine with a method "project", which
> lets you figure out  the nearest point on a line to a given point.  This
> is useful, for instance, if you are trying to figure out what street a
> person is on from (possibly slightly inaccurate) GPS observations.
> 
> http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> 
> PostGIS calls this function st_line_locate_point.
> 
> GEOS doesn't seem to have it, even though I was under the impression
> that GEOS was merely a port of JTS.  If I port JTS's project function
> and related functions such as extractPoint to GEOS, would that patch be
> likely to be accepted?  Or am I missing something about the relationship
> between JTS and GEOS?
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
-------------- next part --------------
A non-text attachment was scrubbed...
Name: linearref.patch
Type: text/x-patch
Size: 90391 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20090807/99834d9d/linearref-0001.bin
From novalis at novalis.org  Tue Aug 11 21:22:21 2009
From: novalis at novalis.org (David Turner)
Date: Tue Aug 11 21:25:55 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <1249677957.7259.275.camel@localhost>
References: <1248362014.7502.68.camel@gentle>
	<1249677957.7259.275.camel@localhost>
Message-ID: <1250040141.28061.8.camel@localhost>

Did I send this to the right place?  Or should I create a ticket
somewhere?  Or is my patch totally off-base?  

Just trying to make sure this doesn't get lost in the noise.

On Fri, 2009-08-07 at 16:45 -0400, David Turner wrote:
> OK, I've done the port.  A patch, with ported tests, is attached.  
> 
> On Thu, 2009-07-23 at 11:13 -0400, David Turner wrote:
> > JTS has a class called LengthIndexedLine with a method "project", which
> > lets you figure out  the nearest point on a line to a given point.  This
> > is useful, for instance, if you are trying to figure out what street a
> > person is on from (possibly slightly inaccurate) GPS observations.
> > 
> > http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> > 
> > PostGIS calls this function st_line_locate_point.
> > 
> > GEOS doesn't seem to have it, even though I was under the impression
> > that GEOS was merely a port of JTS.  If I port JTS's project function
> > and related functions such as extractPoint to GEOS, would that patch be
> > likely to be accepted?  Or am I missing something about the relationship
> > between JTS and GEOS?
> > 
> > 
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From hobu.inc at gmail.com  Tue Aug 11 21:51:23 2009
From: hobu.inc at gmail.com (Howard Butler)
Date: Tue Aug 11 21:53:55 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <1250040141.28061.8.camel@localhost>
References: <1248362014.7502.68.camel@gentle>
	<1249677957.7259.275.camel@localhost>
	<1250040141.28061.8.camel@localhost>
Message-ID: <436B0CB4-C50F-4FD3-AA97-09292F58BB79@gmail.com>

Filing a ticket and attaching the patch is the best way to ensure it  
doesn't get lost.  Putting a milestone on it (like 3.2) will also help  
ensure someone looks at it.

Howard

On Aug 11, 2009, at 8:22 PM, David Turner wrote:

> Did I send this to the right place?  Or should I create a ticket
> somewhere?  Or is my patch totally off-base?
>
> Just trying to make sure this doesn't get lost in the noise.
>
> On Fri, 2009-08-07 at 16:45 -0400, David Turner wrote:
>> OK, I've done the port.  A patch, with ported tests, is attached.
>>
>> On Thu, 2009-07-23 at 11:13 -0400, David Turner wrote:
>>> JTS has a class called LengthIndexedLine with a method "project",  
>>> which
>>> lets you figure out  the nearest point on a line to a given  
>>> point.  This
>>> is useful, for instance, if you are trying to figure out what  
>>> street a
>>> person is on from (possibly slightly inaccurate) GPS observations.
>>>
>>> http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
>>>
>>> PostGIS calls this function st_line_locate_point.
>>>
>>> GEOS doesn't seem to have it, even though I was under the impression
>>> that GEOS was merely a port of JTS.  If I port JTS's project  
>>> function
>>> and related functions such as extractPoint to GEOS, would that  
>>> patch be
>>> likely to be accepted?  Or am I missing something about the  
>>> relationship
>>> between JTS and GEOS?
>>>
>>>
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel@lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From geos-trac at osgeo.org  Wed Aug 12 12:30:58 2009
From: geos-trac at osgeo.org (GEOS)
Date: Wed Aug 12 12:30:59 2009
Subject: [geos-devel] [GEOS] #283: Patch: ported linearref from JTS
Message-ID: <047.becd7fad57d55dcccfde0ec15b3e1905@osgeo.org>

#283: Patch: ported linearref from JTS
------------------------+---------------------------------------------------
 Reporter:  novalis     |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.2.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I have ported the linearref code from JTS to GEOS.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/283>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From novalis at novalis.org  Wed Aug 12 14:16:10 2009
From: novalis at novalis.org (David Turner)
Date: Wed Aug 12 14:16:17 2009
Subject: [geos-devel] Porting LengthIndexedLine.project?
In-Reply-To: <436B0CB4-C50F-4FD3-AA97-09292F58BB79@gmail.com>
References: <1248362014.7502.68.camel@gentle>
	<1249677957.7259.275.camel@localhost>
	<1250040141.28061.8.camel@localhost>
	<436B0CB4-C50F-4FD3-AA97-09292F58BB79@gmail.com>
Message-ID: <1250100970.3844.74.camel@gentle>

http://trac.osgeo.org/geos/ticket/283


On Tue, 2009-08-11 at 20:51 -0500, Howard Butler wrote:
> Filing a ticket and attaching the patch is the best way to ensure it  
> doesn't get lost.  Putting a milestone on it (like 3.2) will also help  
> ensure someone looks at it.
> 
> Howard
> 
> On Aug 11, 2009, at 8:22 PM, David Turner wrote:
> 
> > Did I send this to the right place?  Or should I create a ticket
> > somewhere?  Or is my patch totally off-base?
> >
> > Just trying to make sure this doesn't get lost in the noise.
> >
> > On Fri, 2009-08-07 at 16:45 -0400, David Turner wrote:
> >> OK, I've done the port.  A patch, with ported tests, is attached.
> >>
> >> On Thu, 2009-07-23 at 11:13 -0400, David Turner wrote:
> >>> JTS has a class called LengthIndexedLine with a method "project",  
> >>> which
> >>> lets you figure out  the nearest point on a line to a given  
> >>> point.  This
> >>> is useful, for instance, if you are trying to figure out what  
> >>> street a
> >>> person is on from (possibly slightly inaccurate) GPS observations.
> >>>
> >>> http://tsusiatsoftware.net/jts/javadoc/com/vividsolutions/jts/linearref/LengthIndexedLine.html#project(com.vividsolutions.jts.geom.Coordinate)
> >>>
> >>> PostGIS calls this function st_line_locate_point.
> >>>
> >>> GEOS doesn't seem to have it, even though I was under the impression
> >>> that GEOS was merely a port of JTS.  If I port JTS's project  
> >>> function
> >>> and related functions such as extractPoint to GEOS, would that  
> >>> patch be
> >>> likely to be accepted?  Or am I missing something about the  
> >>> relationship
> >>> between JTS and GEOS?
> >>>
> >>>
> >>> _______________________________________________
> >>> geos-devel mailing list
> >>> geos-devel@lists.osgeo.org
> >>> http://lists.osgeo.org/mailman/listinfo/geos-devel
> >> _______________________________________________
> >> geos-devel mailing list
> >> geos-devel@lists.osgeo.org
> >> http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From geos-trac at osgeo.org  Wed Aug 12 15:02:12 2009
From: geos-trac at osgeo.org (GEOS)
Date: Wed Aug 12 15:02:13 2009
Subject: [geos-devel] Re: [GEOS] #283: Patch: ported linearref from JTS
In-Reply-To: <047.becd7fad57d55dcccfde0ec15b3e1905@osgeo.org>
References: <047.becd7fad57d55dcccfde0ec15b3e1905@osgeo.org>
Message-ID: <056.7497485aa6f577c07b1ed145c9835fec@osgeo.org>

#283: Patch: ported linearref from JTS
------------------------+---------------------------------------------------
 Reporter:  novalis     |        Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |       Status:  closed                    
 Priority:  major       |    Milestone:  3.2.0                     
Component:  Default     |      Version:  svn-trunk                 
 Severity:  Unassigned  |   Resolution:  fixed                     
 Keywords:              |  
------------------------+---------------------------------------------------
Changes (by pramsey):

  * status:  new => closed
  * resolution:  => fixed

Comment:

 Lovely. In trunk at r2619

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/283#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From novalis at novalis.org  Fri Aug 14 12:50:55 2009
From: novalis at novalis.org (David Turner)
Date: Fri Aug 14 12:50:58 2009
Subject: [geos-devel] C API and Coordinates
Message-ID: <1250268655.3237.22.camel@gentle>

It looks like the C API doesn't really support Coordinates.  The only
way I can figure out to pass Coordinates is to use Geometry* as a
parameter, and use dynamic_cast<Point *> to ensure that the Geometry is
Point.  This leads to long-winded code -- not to mention a lack of
compile-time type-checking. 

I've attached a patch which demonstrates the approach I describe above.
Unfortunately, it's not a very clean patch, because I realized I had
forgotten to completely constify the linearref code.  When I submit a
final patch, I'll break the const changes out into a separate patch.

The alternative is that I could simply declare Coordinate in the C API.
I'm not sure what consequences that would have, or why it was rejected
in the first place -- but it would simplify the code here and perhaps
elsewhere.

Please let me know what approach is most likely to get my patch
accepted, or if there's something obvious that I'm missing.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: c_api_initial_stab.diff
Type: text/x-patch
Size: 8627 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20090814/81a0a48c/c_api_initial_stab.bin
From pramsey at opengeo.org  Fri Aug 14 12:57:07 2009
From: pramsey at opengeo.org (Paul Ramsey)
Date: Fri Aug 14 13:02:13 2009
Subject: [geos-devel] C API and Coordinates
In-Reply-To: <1250268655.3237.22.camel@gentle>
References: <1250268655.3237.22.camel@gentle>
Message-ID: <30fe546d0908140957h64c2892ybb9c61a517aff7f9@mail.gmail.com>

Speaking from the PostGIS side, the CAPI is mostly an outgrowth of
meeting our use cases, which are build-geometries-and-run-a-test and
build-geometries-and-get-a-new-geometry. All our fine-grained access
to geometry internals is done back in PostGIS land, not against the
GEOS objects. Hence, no CAPI infrastructure for that.

Basically, if the CAPI doesn't already support use-case-x then you are
in open ground and will be the primary user of said use case if you
add it to the CAPI.

P.

On Fri, Aug 14, 2009 at 9:50 AM, David Turner<novalis@novalis.org> wrote:
> It looks like the C API doesn't really support Coordinates. ?The only
> way I can figure out to pass Coordinates is to use Geometry* as a
> parameter, and use dynamic_cast<Point *> to ensure that the Geometry is
> Point. ?This leads to long-winded code -- not to mention a lack of
> compile-time type-checking.
>
> I've attached a patch which demonstrates the approach I describe above.
> Unfortunately, it's not a very clean patch, because I realized I had
> forgotten to completely constify the linearref code. ?When I submit a
> final patch, I'll break the const changes out into a separate patch.
>
> The alternative is that I could simply declare Coordinate in the C API.
> I'm not sure what consequences that would have, or why it was rejected
> in the first place -- but it would simplify the code here and perhaps
> elsewhere.
>
> Please let me know what approach is most likely to get my patch
> accepted, or if there's something obvious that I'm missing.
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From geos-trac at osgeo.org  Fri Aug 14 16:41:08 2009
From: geos-trac at osgeo.org (GEOS)
Date: Fri Aug 14 16:41:10 2009
Subject: [geos-devel] [GEOS] #284: Improve constness of linearref code
Message-ID: <047.ba9f11966324e5d883bf9b24e29b3f55@osgeo.org>

#284: Improve constness of linearref code
-------------------------+--------------------------------------------------
 Reporter:  novalis      |       Owner:  geos-devel@lists.osgeo.org
     Type:  enhancement  |      Status:  new                       
 Priority:  major        |   Milestone:  3.2.0                     
Component:  Default      |     Version:  3.0.3                     
 Severity:  Unassigned   |    Keywords:                            
-------------------------+--------------------------------------------------
 I realized when I tried to use my new linearref code that I had neglected
 a number of consts.  This patch fixes that.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/284>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From geos-trac at osgeo.org  Mon Aug 17 10:38:34 2009
From: geos-trac at osgeo.org (GEOS)
Date: Mon Aug 17 10:38:36 2009
Subject: [geos-devel] [GEOS] #285: C api for project and interpolate
Message-ID: <047.a069a47842e37c48b87b7ad832f8b5ad@osgeo.org>

#285: C api for project and interpolate
------------------------+---------------------------------------------------
 Reporter:  novalis     |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:                            
Component:  Default     |     Version:  3.0.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I have created a C api for the two most straightforward linear referencing
 functions.  I made two versions: standard, and normalized.  The normalized
 ones take/return values between 0 and 1 -- this is intended for
 compatibility with postgis's st_line_locate_point / st_line_interpolate.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/285>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From candia234 at hotmail.com  Wed Aug 19 12:36:41 2009
From: candia234 at hotmail.com (Gloria Candia Cuno)
Date: Wed Aug 19 12:37:53 2009
Subject: [geos-devel] problemas al ejecutar make de geos
Message-ID: <SNT104-W281D0E68D58240756A9D5FAFE0@phx.gbl>


alguien puede ayudarme, mi sistema operativo es ubuntu y al ejecutar make me sale este error, por favor responder.


Making all in source                                                                          
make[1]: se ingresa al directorio `/usr/local/geos-3.0.3/source'                              
Making all in algorithm                                                                       
make[2]: se ingresa al directorio `/usr/local/geos-3.0.3/source/algorithm'                    
source='CGAlgorithms.cpp' object='CGAlgorithms.lo' libtool=yes \                              
        DEPDIR=.deps depmode=none /bin/bash ../../depcomp \                                   
        /bin/bash ../../libtool --tag=CXX --mode=compile g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers -I../../source/headers/geos -I../../source/headers     -DGEOS_INLINE -Wall -ansi -pedantic -Wno-long-long -c -o CGAlgorithms.lo CGAlgorithms.cpp                                    
libtool: ignoring unknown tag CXX                                                               
 g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers -I../../source/headers/geos -I../../source/headers -DGEOS_INLINE -Wall -ansi -pedantic -Wno-long-long -c CGAlgorithms.cpp  -fPIC -DPIC -o .libs/CGAlgorithms.o                                                                              
env: g++: No such file or directory                                                             
make[2]: *** [CGAlgorithms.lo] Error 1                                                          
make[2]: se sale del directorio `/usr/local/geos-3.0.3/source/algorithm'                        
make[1]: *** [all-recursive] Error 1                                                            
make[1]: se sale del directorio `/usr/local/geos-3.0.3/source'                                  
make: *** [all-recursive] Error 1                                                               
prueba@geoprac:/usr/local/geos-3.0.3$ sudo /etc/init.d/postgresql-8.3 restart
 * Restarting PostgreSQL 8.3 database server                                             [ OK ] 
prueba@geoprac:/usr/local/geos-3.0.3$ sudo make
Making all in source                           
make[1]: se ingresa al directorio `/usr/local/geos-3.0.3/source'
Making all in algorithm                                         
make[2]: se ingresa al directorio `/usr/local/geos-3.0.3/source/algorithm'
source='CGAlgorithms.cpp' object='CGAlgorithms.lo' libtool=yes \          
        DEPDIR=.deps depmode=none /bin/bash ../../depcomp \               
        /bin/bash ../../libtool --tag=CXX --mode=compile g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers -I../../source/headers/geos -I../../source/headers     -DGEOS_INLINE -Wall -ansi -pedantic -Wno-long-long -c -o CGAlgorithms.lo CGAlgorithms.cpp                                    
libtool: ignoring unknown tag CXX                                                               
 g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers -I../../source/headers/geos -I../../source/headers -DGEOS_INLINE -Wall -ansi -pedantic -Wno-long-long -c CGAlgorithms.cpp  -fPIC -DPIC -o .libs/CGAlgorithms.o                                                                              
env: g++: No such file or directory                                                             
make[2]: *** [CGAlgorithms.lo] Error 1                                                          
make[2]: se sale del directorio `/usr/local/geos-3.0.3/source/algorithm'                        
make[1]: *** [all-recursive] Error 1                                                            
make[1]: se sale del directorio `/usr/local/geos-3.0.3/source'                                  
make: *** [all-recursive] Error 1                                                           

SALUDOS GLORIA CANDIA 

 




_________________________________________________________________
Ent?rate de todas las noticias al instante ?Suscr?bete al servicio de Alertas MSN!
http://especiales.es.msn.com/noticias/msninforma.aspx
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090819/a3dd4a71/attachment.html
From pramsey at cleverelephant.ca  Wed Aug 19 14:02:33 2009
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed Aug 19 14:02:36 2009
Subject: [geos-devel] problemas al ejecutar make de geos
In-Reply-To: <SNT104-W281D0E68D58240756A9D5FAFE0@phx.gbl>
References: <SNT104-W281D0E68D58240756A9D5FAFE0@phx.gbl>
Message-ID: <30fe546d0908191102s64a708d1v9f78f3d2b58084f@mail.gmail.com>

You have not got g++ (the compiler) installed. You'll need to install
a compiler before you can build from source. How you do that is
dependent on what operating system you are running.

P.

On Wed, Aug 19, 2009 at 12:36 PM, Gloria Candia
Cuno<candia234@hotmail.com> wrote:
> alguien puede ayudarme, mi sistema operativo es ubuntu y al ejecutar make me
> sale este error, por favor responder.
>
>
> Making all in
> source
> make[1]: se ingresa al directorio
> `/usr/local/geos-3.0.3/source'
> Making all in
> algorithm
> make[2]: se ingresa al directorio
> `/usr/local/geos-3.0.3/source/algorithm'
> source='CGAlgorithms.cpp' object='CGAlgorithms.lo' libtool=yes
> \
> ??????? DEPDIR=.deps depmode=none /bin/bash ../../depcomp
> \
> ??????? /bin/bash ../../libtool --tag=CXX --mode=compile g++ -DHAVE_CONFIG_H
> -I. -I. -I../../source/headers -I../../source/headers/geos
> -I../../source/headers???? -DGEOS_INLINE -Wall -ansi -pedantic
> -Wno-long-long -c -o CGAlgorithms.lo
> CGAlgorithms.cpp
> libtool: ignoring unknown tag
> CXX
> ?g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers
> -I../../source/headers/geos -I../../source/headers -DGEOS_INLINE -Wall -ansi
> -pedantic -Wno-long-long -c CGAlgorithms.cpp? -fPIC -DPIC -o
> .libs/CGAlgorithms.o
> env: g++: No such file or
> directory
> make[2]: *** [CGAlgorithms.lo] Error
> 1
> make[2]: se sale del directorio
> `/usr/local/geos-3.0.3/source/algorithm'
> make[1]: *** [all-recursive] Error
> 1
> make[1]: se sale del directorio
> `/usr/local/geos-3.0.3/source'
> make: *** [all-recursive] Error
> 1
> prueba@geoprac:/usr/local/geos-3.0.3$ sudo /etc/init.d/postgresql-8.3
> restart
> ?* Restarting PostgreSQL 8.3 database
> server???????????????????????????????????????????? [ OK ]
> prueba@geoprac:/usr/local/geos-3.0.3$ sudo make
> Making all in source
> make[1]: se ingresa al directorio `/usr/local/geos-3.0.3/source'
> Making all in algorithm
> make[2]: se ingresa al directorio `/usr/local/geos-3.0.3/source/algorithm'
> source='CGAlgorithms.cpp' object='CGAlgorithms.lo' libtool=yes \
> ??????? DEPDIR=.deps depmode=none /bin/bash ../../depcomp \
> ??????? /bin/bash ../../libtool --tag=CXX --mode=compile g++ -DHAVE_CONFIG_H
> -I. -I. -I../../source/headers -I../../source/headers/geos
> -I../../source/headers???? -DGEOS_INLINE -Wall -ansi -pedantic
> -Wno-long-long -c -o CGAlgorithms.lo
> CGAlgorithms.cpp
> libtool: ignoring unknown tag
> CXX
> ?g++ -DHAVE_CONFIG_H -I. -I. -I../../source/headers
> -I../../source/headers/geos -I../../source/headers -DGEOS_INLINE -Wall -ansi
> -pedantic -Wno-long-long -c CGAlgorithms.cpp? -fPIC -DPIC -o
> .libs/CGAlgorithms.o
> env: g++: No such file or
> directory
> make[2]: *** [CGAlgorithms.lo] Error
> 1
> make[2]: se sale del directorio
> `/usr/local/geos-3.0.3/source/algorithm'
> make[1]: *** [all-recursive] Error
> 1
> make[1]: se sale del directorio
> `/usr/local/geos-3.0.3/source'
> make: *** [all-recursive] Error
> 1
>
> SALUDOS GLORIA CANDIA
>
>
>
>
>
> ________________________________
> ?Que no te pillen atascos ni radares! En MSN te damos toda la informaci?n
> sobre el estado de las carretas y te mostramos d?nde se encuentran los
> radares de tr?fico.
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From doublebyte at gmail.com  Thu Aug 20 12:11:25 2009
From: doublebyte at gmail.com (Jo)
Date: Thu Aug 20 12:16:33 2009
Subject: [geos-devel] Re: problemas al ejecutar make de geo
Message-ID: <23ab5f0a0908200911x580bc1cbqb1693d96649025e@mail.gmail.com>

>
> Message: 2
> Date: Wed, 19 Aug 2009 14:02:33 -0400
> From: Paul Ramsey <pramsey@cleverelephant.ca>
> Subject: Re: [geos-devel] problemas al ejecutar make de geos
> To: GEOS Development List <geos-devel@lists.osgeo.org>
> Message-ID:
> ? ? ? ?<30fe546d0908191102s64a708d1v9f78f3d2b58084f@mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> You have not got g++ (the compiler) installed. You'll need to install
> a compiler before you can build from source. How you do that is
> dependent on what operating system you are running.
>
> P.
>

On Ubuntu, as root, you can do:

sudo apt-get install build-essential

   cheers,
          Jo
From novalis at novalis.org  Thu Aug 20 16:35:05 2009
From: novalis at novalis.org (David Turner)
Date: Thu Aug 20 16:35:11 2009
Subject: [geos-devel] C API and Coordinates
In-Reply-To: <30fe546d0908140957h64c2892ybb9c61a517aff7f9@mail.gmail.com>
References: <1250268655.3237.22.camel@gentle>
	<30fe546d0908140957h64c2892ybb9c61a517aff7f9@mail.gmail.com>
Message-ID: <1250800505.27120.1.camel@gentle>

I have decided to do a fairly minimal C API, on the theory that it's
better to do too little than to do too much.  The one wrinkle I added
was normalized versions of interpolate and project, for compatibility
with postgis's st_line_locate_point.

http://trac.osgeo.org/geos/ticket/285#comment:1

Does that look good?

On Fri, 2009-08-14 at 09:57 -0700, Paul Ramsey wrote:
> Speaking from the PostGIS side, the CAPI is mostly an outgrowth of
> meeting our use cases, which are build-geometries-and-run-a-test and
> build-geometries-and-get-a-new-geometry. All our fine-grained access
> to geometry internals is done back in PostGIS land, not against the
> GEOS objects. Hence, no CAPI infrastructure for that.
> 
> Basically, if the CAPI doesn't already support use-case-x then you are
> in open ground and will be the primary user of said use case if you
> add it to the CAPI.


From markmapo at yahoo.com  Thu Aug 20 17:47:07 2009
From: markmapo at yahoo.com (Mark Richardson)
Date: Thu Aug 20 17:53:50 2009
Subject: [geos-devel] compile bug
Message-ID: <52126.31395.qm@web53304.mail.re2.yahoo.com>

Just wanted to let you know that I was compiling on HP UX-11i and ran into a problem.? The file source/headers/geos/geom/Coordinate.h causes compile errors.? I added a line...
#include <iostream>
?
then things are compiling fine.
Mark


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090820/5b0731d6/attachment.html
From markmapo at yahoo.com  Thu Aug 20 19:48:10 2009
From: markmapo at yahoo.com (Mark Richardson)
Date: Thu Aug 20 19:48:13 2009
Subject: [geos-devel] few more compile bugs
Message-ID: <790790.63370.qm@web53306.mail.re2.yahoo.com>

Again, compiling for HP.? I get some errors, so here are fixes...
source/headers/geos/geom/IntersectionMatrix.h
#include <iostream>
?
---------------------------------------------------
more errors with fixes below...
--------------------------------------------------
Error 226: "GeometryTransformer.cpp", line 162 # No appropriate function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
??? "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
??? auto_ptr<geos::geom::Geometry>' could not be converted to 'std::auto_ptr<geos::geom::Geometry> &'.
??????????????????? Geometry::AutoPtr transformGeom = transformPoint(p, geom);
?
Error 226: "GeometryTransformer.cpp", line 213 # No appropriate function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
??? "std::auto_ptr<geos::geom::CoordinateSequence>::auto_ptr(std::auto_ptr<geos::geom::CoordinateSequence> &)" ["/opt/aCC/include_std/memory", line 833].
??? Argument of type 'class auto_ptr<geos::geom::CoordinateSequence>' could not be converted to 'std::auto_ptr<geos::geom::CoordinateSequence> &'.
??????????????????? transformCoordinates(geom->getCoordinatesRO(), geom));
??????????????????? ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Error 226: "GeometryTransformer.cpp", line 235 # No appropriate function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
??? "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
??? auto_ptr<geos::geom::Geometry>' could not be converted to 'std::auto_ptr<geos::geom::Geometry> &'.
??????????????? ????Geometry::AutoPtr transformGeom = transformLineString(l, geom);
????????????????????????????????????? ^^^^^^^^^^^^^ Error 226: "GeometryTransformer.cpp", line 264 # No appropriate function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
??? "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
??? auto_ptr<geos::geom::Geometry>' could not be converted to 'std::auto_ptr<geos::geom::Geometry> &'.
??????????? Geometry::AutoPtr shell = transformLinearRing(lr, geom);
????????????????????????????? ^^^^^
Error 226: "GeometryTransformer.cpp", line 339 # No appropriate function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
??? "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
??? auto_ptr<geos::geom::Geometry>' could not be converted to 'std::auto_ptr<geos::geom::Geometry> &'.
??????????????????? Geometry::AutoPtr transformGeom = transformPolygon(p, geom);
????????????????????????????????????? ^^^^^^^^^^^^^ Error 226: "GeometryTransformer.cpp", line 366 # No appropriate function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
??? "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
??? auto_ptr<geos::geom::Geometry>' could not be converted to 'std::auto_ptr<geos::geom::Geometry> &'.
??????????????????? Geometry::AutoPtr transformGeom = transform(
?
?----------------------------
fixes
-----------------------------------
So changing GeometryTransformer.cpp line 162 from Geometry::AutoPtr transformGeom=transformPoint(p, geom); to Geometry::AutoPtr transformGeom(transformPoint(p, geom));
?
So changing GeometryTransformer.cpp line 213 from return factory->createLineString(transformCoordinates(geom->getCoordinatesRO(), geom)); to std::auto_ptr<CoordinateSequence> tempCoordinateSequence(transformCoordinates(geom->getCoordinatesRO(), geom)); return factory->createLineString(tempCoordinateSequence);
?
So changing GeometryTransformer.cpp line 235 from Geometry::AutoPtr transformGeom=transformLineString(l, geom); to Geometry::AutoPtr transformGeom(transformLineString(l, geom));
?
So changing GeometryTransformer.cpp line 264 from Geometry::AutoPtr shell=transformLinearRing(lr, geom); to Geometry::AutoPtr shell(transformLinearRing(lr, geom));
?
So changing GeometryTransformer.cpp line 339 from Geometry::AutoPtr transformGeom=transformPolygon(p, geom); to Geometry::AutoPtr transformGeom(transformPolygon(p, geom));
?
So changing GeometryTransformer.cpp line 366 from Geometry::AutoPtr transformGeom=transform(geom->getGeometryN(i));
to
Geometry::AutoPtr transformGeom(transform(geom->getGeometryN(i)));
?
?
--------------------------------------------------------------
more errors with fixes below...--------------------------------------------------------------
Error 746: "MCIndexNoder.cpp", line 143 # Cannot use static_cast to convert void * to const geos::noding::SegmentString *.
??????????????????? static_cast<const SegmentString *>(mc1->getContext())
?????????????????????????????????????????????????????? ^^^^^^^^^^^^^^^^^
?
--------------------------------------------------------------
fixes
--------------------------------------------------------------
So changing MCIndexNoder.cpp line 143 from
SegmentString* ss1 = const_cast<SegmentString*>(static_cast<const SegmentString *>(mc1->getContext())); to
SegmentString* ss1 = const_cast<SegmentString*>(static_cast<const SegmentString *>((SegmentString*)mc1->getContext()));
?
So changing MCIndexNoder.cpp line 148 from
SegmentString* ss2 = const_cast<SegmentString*>(static_cast<const SegmentString *>(mc2->getContext())); to
SegmentString* ss2 = const_cast<SegmentString*>(static_cast<const SegmentString *>((SegmentString*)mc2->getContext()));
?
---------------
That's all the changes and now everything compiles on HP.
?
Mark


      
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090820/fa891bd4/attachment-0001.html
From pramsey at cleverelephant.ca  Thu Aug 20 19:53:11 2009
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu Aug 20 19:53:13 2009
Subject: [geos-devel] few more compile bugs
In-Reply-To: <790790.63370.qm@web53306.mail.re2.yahoo.com>
References: <790790.63370.qm@web53306.mail.re2.yahoo.com>
Message-ID: <30fe546d0908201653s60cd84day9bcb8b89132b04bd@mail.gmail.com>

Mark, can you express your changes in the form of a patch, attached to
a ticket at http://trac.osgeo.org/geos ?

Thanks,

P.

On Thu, Aug 20, 2009 at 4:48 PM, Mark Richardson<markmapo@yahoo.com> wrote:
> Again, compiling for HP.? I get some errors, so here are fixes...
>
> source/headers/geos/geom/IntersectionMatrix.h
>
> #include <iostream>
>
>
>
> ---------------------------------------------------
>
> more errors with fixes below...
>
> --------------------------------------------------
>
> Error 226: "GeometryTransformer.cpp", line 162 # No appropriate function
> found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
>
>
> "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
>
> ??? auto_ptr<geos::geom::Geometry>' could not be converted to
> 'std::auto_ptr<geos::geom::Geometry> &'.
>
> ??????????????????? Geometry::AutoPtr transformGeom = transformPoint(p,
> geom);
>
>
>
> Error 226: "GeometryTransformer.cpp", line 213 # No appropriate function
> found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
>
>
> "std::auto_ptr<geos::geom::CoordinateSequence>::auto_ptr(std::auto_ptr<geos::geom::CoordinateSequence>
> &)" ["/opt/aCC/include_std/memory", line 833].
>
> ??? Argument of type 'class auto_ptr<geos::geom::CoordinateSequence>' could
> not be converted to 'std::auto_ptr<geos::geom::CoordinateSequence> &'.
>
> ??????????????????? transformCoordinates(geom->getCoordinatesRO(), geom));
>
> ??????????????????? ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>
> Error 226: "GeometryTransformer.cpp", line 235 # No appropriate function
> found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
>
>
> "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
>
> ??? auto_ptr<geos::geom::Geometry>' could not be converted to
> 'std::auto_ptr<geos::geom::Geometry> &'.
>
> ??????????????? ????Geometry::AutoPtr transformGeom = transformLineString(l,
> geom);
>
> ????????????????????????????????????? ^^^^^^^^^^^^^ Error 226:
> "GeometryTransformer.cpp", line 264 # No appropriate function found for call
> of 'auto_ptr::auto_ptr'. Last viable candidate was
>
>
> "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
>
> ??? auto_ptr<geos::geom::Geometry>' could not be converted to
> 'std::auto_ptr<geos::geom::Geometry> &'.
>
> ??????????? Geometry::AutoPtr shell = transformLinearRing(lr, geom);
>
> ????????????????????????????? ^^^^^
>
> Error 226: "GeometryTransformer.cpp", line 339 # No appropriate function
> found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
>
>
> "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
>
> ??? auto_ptr<geos::geom::Geometry>' could not be converted to
> 'std::auto_ptr<geos::geom::Geometry> &'.
>
> ??????????????????? Geometry::AutoPtr transformGeom = transformPolygon(p,
> geom);
>
> ????????????????????????????????????? ^^^^^^^^^^^^^ Error 226:
> "GeometryTransformer.cpp", line 366 # No appropriate function found for call
> of 'auto_ptr::auto_ptr'. Last viable candidate was
>
>
> "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
> &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
>
> ??? auto_ptr<geos::geom::Geometry>' could not be converted to
> 'std::auto_ptr<geos::geom::Geometry> &'.
>
> ??????????????????? Geometry::AutoPtr transformGeom = transform(
>
>
>
> ?----------------------------
>
> fixes
>
> -----------------------------------
>
> So changing GeometryTransformer.cpp line 162 from Geometry::AutoPtr
> transformGeom=transformPoint(p, geom); to Geometry::AutoPtr
> transformGeom(transformPoint(p, geom));
>
>
>
> So changing GeometryTransformer.cpp line 213 from return
> factory->createLineString(transformCoordinates(geom->getCoordinatesRO(),
> geom)); to std::auto_ptr<CoordinateSequence>
> tempCoordinateSequence(transformCoordinates(geom->getCoordinatesRO(),
> geom)); return factory->createLineString(tempCoordinateSequence);
>
>
>
> So changing GeometryTransformer.cpp line 235 from Geometry::AutoPtr
> transformGeom=transformLineString(l, geom); to Geometry::AutoPtr
> transformGeom(transformLineString(l, geom));
>
>
>
> So changing GeometryTransformer.cpp line 264 from Geometry::AutoPtr
> shell=transformLinearRing(lr, geom); to Geometry::AutoPtr
> shell(transformLinearRing(lr, geom));
>
>
>
> So changing GeometryTransformer.cpp line 339 from Geometry::AutoPtr
> transformGeom=transformPolygon(p, geom); to Geometry::AutoPtr
> transformGeom(transformPolygon(p, geom));
>
>
>
> So changing GeometryTransformer.cpp line 366 from Geometry::AutoPtr
> transformGeom=transform(geom->getGeometryN(i));
>
> to
>
> Geometry::AutoPtr transformGeom(transform(geom->getGeometryN(i)));
>
>
>
>
>
> --------------------------------------------------------------
>
> more errors with fixes
> below...--------------------------------------------------------------
>
> Error 746: "MCIndexNoder.cpp", line 143 # Cannot use static_cast to convert
> void * to const geos::noding::SegmentString *.
>
> ??????????????????? static_cast<const SegmentString *>(mc1->getContext())
>
> ?????????????????????????????????????????????????????? ^^^^^^^^^^^^^^^^^
>
>
>
> --------------------------------------------------------------
>
> fixes
>
> --------------------------------------------------------------
>
> So changing MCIndexNoder.cpp line 143 from
>
> SegmentString* ss1 = const_cast<SegmentString*>(static_cast<const
> SegmentString *>(mc1->getContext())); to
>
> SegmentString* ss1 = const_cast<SegmentString*>(static_cast<const
> SegmentString *>((SegmentString*)mc1->getContext()));
>
>
>
> So changing MCIndexNoder.cpp line 148 from
>
> SegmentString* ss2 = const_cast<SegmentString*>(static_cast<const
> SegmentString *>(mc2->getContext())); to
>
> SegmentString* ss2 = const_cast<SegmentString*>(static_cast<const
> SegmentString *>((SegmentString*)mc2->getContext()));
>
>
>
> ---------------
>
> That's all the changes and now everything compiles on HP.
>
>
>
> Mark
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
From doublebyte at gmail.com  Sun Aug 23 13:18:37 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Aug 23 13:18:40 2009
Subject: [geos-devel] Computing Radials inside a Polygon
Message-ID: <23ab5f0a0908231018q78a9b24l9b964f06d100bbfd@mail.gmail.com>

First of all, I apologize to post this question when my code is not
using GEOS but I think this is a generic geometry problem so it really
does not matter which API, I am using (I'm using OGR).
I need to compute a certain number of equally spaced radials inside a
polygon, given that each segment should start on the centroide and end
somewhere in its boundary (or external ring).
The algorithm I designed, follows this steps:
- given a certain number of radials(n), calculate the angle(fangle)
that equally divides the circle in n/2 sectors;
- fetch a point from the perimeter of the minimum enclosing circle (to
guarantee the point is outside the perimeter);
- loop n times, rotating this point around using fangle for this
rotation; at each step, the rotated vector will be a vector that links
the centroide to the rotated point; to get a vector inside the
polygon, this vector is intersected with the polygon and we use the
resulting geometry.

I am getting a strange (wrong) result, so I guess I am not seeing
things right (or there is a bug in my code :-)) because I get equally
spaced radials covering approximately a quarter if the polygon, and
the angle from the first point to the first rotated point does not
seem correct... image here:

http://ladybug.no-ip.org/files/radials.png


Here is my code! I would be very grateful for any suggestions that
could point me in the right direction... also, if you have any ideas
of computing this using GEOS I would not mind to go for them;
                               thanks in advance,
                                                           cheers, Jo

	OGRPoint centroide;					
	if (Centroid(&centroide)!=OGRERR_NONE) return false; // get centroid of polygon
	const OGRLinearRing * pRing=minCircle.getExteriorRing(); //get
external ring of the minimum enclosing circle

	if (pRing->getNumPoints()<1) {printf("Ring not valid!\n");return false;}
	OGRPoint startPt;
	pRing->getPoint(0, &startPt);//get one point in the minimum enclosing
circle external ring

	OGRLineString aLine;
	aLine.addPoint(&centroide);
	aLine.addPoint(&startPt);
	aLine.addPoint(&centroide);

	if (!aLine.IsValid()) {printf("Line is not valid!\n");return false;}

	OGRGeometry* ints=Intersection(&aLine);
	radials.addGeometry(ints);

	double ns=n/0.5; //n is the number of radials
	double fangle=PI/(ns*0.5);// assumed that the whole circumference is
2 PI radians

	for (size_t i=0; i < n; ++i){

		OGRLineString dLine;
		dLine.addPoint(&centroide);

		double rx=startPt.getX()*cos(fangle)-startPt.getY()*sin(fangle);
//rotated x- is this correct?
		double ry=startPt.getX()*sin(fangle)+startPt.getY()*cos(fangle);
//rotated y- is this correct?

		startPt.setX(rx);
		startPt.setY(ry);
		dLine.addPoint(&startPt);
		dLine.addPoint(&centroide);

		OGRGeometry* ints=Intersection(&dLine);
		radials.addGeometry(ints);

	}
From piva at meeo.it  Mon Aug 24 05:54:14 2009
From: piva at meeo.it (Giacomo Piva)
Date: Mon Aug 24 05:54:17 2009
Subject: [geos-devel] GEOSIntersection returns the input
Message-ID: <4A926346.2000104@meeo.it>

Hi all,
I'm writing because I have a problem with the GEOSIntersection function.
I'm using this function as follows:

GEOSCoordSeq coordseq = NULL, coordseq_I = NULL;
GEOSGeom area_1 = NULL, area_2 = NULL, intersection = NULL;

coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);   //5 coords to 
close the ring

GEOSCoordSeq_setX(coordseq, 0, ...);
GEOSCoordSeq_setY(coordseq, 0, ...);
[...]   //Fill the Seq with the coords value for the first ring

area_1 = GEOSGeom_createLinearRing(coordseq);

//Re-fill the coords for the second ring ...
GEOSCoordSeq_setX(coordseq, 0, ...);
GEOSCoordSeq_setY(coordseq, 0, ...);
[...]

area_2 = GEOSGeom_createLinearRing(coordseq);

intersection = GEOSIntersection(area_1, area_2);
//checks on valid and non empty geometry returns no error...

Now I get the coordinates of the intersection in this way:

GEOSGeom geom;
num = GEOSGetNumGeometries(intersection);   //num is 4, because there is 
4 lines

for(i=0; i < num; i++) {
        geom = (GEOSGeom) GEOSGetGeometryN(intersection, i);   //Here I 
get i-th line...

        coordseq_I = (GEOSCoordSeq) GEOSCoordSeq_create(2, 2);   //each 
line has 2 point of 2 dimensions
        coordseq_I = (GEOSCoordSeq) GEOSGeom_getCoordSeq(geom);

        GEOSCoordSeq_getX(coordseq_I, 0, alpha);    //the first point is 
in 0-th position
        GEOSCoordSeq_getY(coordseq_I, 0, beta);
        printf("[%d] %.2lf %.2lf\n",i,*beta, *alpha);

        GEOSCoordSeq_getX(coordseq_I, 1, alpha);    //the second in the 
first
        GEOSCoordSeq_getY(coordseq_I, 1, beta);
        printf("[%d] %.2lf %.2lf\n\n",i,*beta, *alpha);
}



Now, if I print the coordinates of each point of the 4 geometries 
(lines) composing the intersection ring, I get the same value of the 
"area_2" ring.

Second Area:
[A] 43.22 -125.52
[B] 43.22 -106.47
[C] 22.71 -106.47
[D] 22.71 -125.52

Geometries: 4
[A] 43.22 -125.52
[B] 43.22 -106.47

[B] 43.22 -106.47
[C] 22.71 -106.47

[C] 22.71 -106.47
[D] 22.71 -125.52

[D] 22.71 -125.52
[A] 43.22 -125.52

Really I can't figure out what is wrong.
Someone can help me?

Thanks.

--
Giacomo

From piva at meeo.it  Mon Aug 24 06:17:36 2009
From: piva at meeo.it (Giacomo Piva)
Date: Mon Aug 24 06:17:38 2009
Subject: [geos-devel] GEOSIntersection returns the input
Message-ID: <4A9268C0.7010700@meeo.it>

Hi all,
I'm writing because I have a problem with the GEOSIntersection function.
I'm using this function as follows:

GEOSCoordSeq coordseq = NULL, coordseq_I = NULL;
GEOSGeom area_1 = NULL, area_2 = NULL, intersection = NULL;

coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);   //5 coords to 
close the ring

GEOSCoordSeq_setX(coordseq, 0, ...);
GEOSCoordSeq_setY(coordseq, 0, ...);
[...]   //Fill the Seq with the coords value for the first ring

area_1 = GEOSGeom_createLinearRing(coordseq);

//Re-fill the coords for the second ring ...
GEOSCoordSeq_setX(coordseq, 0, ...);
GEOSCoordSeq_setY(coordseq, 0, ...);
[...]

area_2 = GEOSGeom_createLinearRing(coordseq);

intersection = GEOSIntersection(area_1, area_2);
//checks on valid and non empty geometry returns no error...

Now I get the coordinates of the intersection in this way:

GEOSGeom geom;
num = GEOSGetNumGeometries(intersection);   //num is 4, because there is 
4 lines

for(i=0; i < num; i++) {
       geom = (GEOSGeom) GEOSGetGeometryN(intersection, i);   //Here I 
get i-th line...

       coordseq_I = (GEOSCoordSeq) GEOSCoordSeq_create(2, 2);   //each 
line has 2 point of 2 dimensions
       coordseq_I = (GEOSCoordSeq) GEOSGeom_getCoordSeq(geom);

       GEOSCoordSeq_getX(coordseq_I, 0, alpha);    //the first point is 
in 0-th position
       GEOSCoordSeq_getY(coordseq_I, 0, beta);
       printf("[%d] %.2lf %.2lf\n",i,*beta, *alpha);

       GEOSCoordSeq_getX(coordseq_I, 1, alpha);    //the second in the 
first
       GEOSCoordSeq_getY(coordseq_I, 1, beta);
       printf("[%d] %.2lf %.2lf\n\n",i,*beta, *alpha);
}



Now, if I print the coordinates of each point of the 4 geometries 
(lines) composing the intersection ring, I get the same value of the 
"area_2" ring.

Second Area:
[A] 43.22 -125.52
[B] 43.22 -106.47
[C] 22.71 -106.47
[D] 22.71 -125.52

Geometries: 4
[A] 43.22 -125.52
[B] 43.22 -106.47

[B] 43.22 -106.47
[C] 22.71 -106.47

[C] 22.71 -106.47
[D] 22.71 -125.52

[D] 22.71 -125.52
[A] 43.22 -125.52

Really I can't figure out what is wrong.
Someone can help me?

Thanks.

-- 
Giacomo
From piva at meeo.it  Mon Aug 24 07:56:36 2009
From: piva at meeo.it (Giacomo Piva)
Date: Mon Aug 24 07:56:38 2009
Subject: [geos-devel] GEOSIntersection returns the input
Message-ID: <4A927FF4.3070801@meeo.it>

Hi all,
I'm writing because I have a problem with the GEOSIntersection function.
I'm using this function as follows:

GEOSCoordSeq coordseq = NULL, coordseq_I = NULL;
GEOSGeom area_1 = NULL, area_2 = NULL, intersection = NULL;

coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);   //5 coords to 
close the ring

GEOSCoordSeq_setX(coordseq, 0, ...);
GEOSCoordSeq_setY(coordseq, 0, ...);
[...]   //Fill the Seq with the coords value for the first ring

area_1 = GEOSGeom_createLinearRing(coordseq);

//Re-fill the coords for the second ring ...
GEOSCoordSeq_setX(coordseq, 0, ...);
GEOSCoordSeq_setY(coordseq, 0, ...);
[...]

area_2 = GEOSGeom_createLinearRing(coordseq);

intersection = GEOSIntersection(area_1, area_2);
//checks on valid and non empty geometry returns no error...

Now I get the coordinates of the intersection in this way:

GEOSGeom geom;
num = GEOSGetNumGeometries(intersection);   //num is 4, because there is 
4 lines

for(i=0; i < num; i++) {
      geom = (GEOSGeom) GEOSGetGeometryN(intersection, i);   //Here I 
get i-th line...

      coordseq_I = (GEOSCoordSeq) GEOSCoordSeq_create(2, 2);   //each 
line has 2 point of 2 dimensions
      coordseq_I = (GEOSCoordSeq) GEOSGeom_getCoordSeq(geom);

      GEOSCoordSeq_getX(coordseq_I, 0, alpha);    //the first point is 
in 0-th position
      GEOSCoordSeq_getY(coordseq_I, 0, beta);
      printf("[%d] %.2lf %.2lf\n",i,*beta, *alpha);

      GEOSCoordSeq_getX(coordseq_I, 1, alpha);    //the second in the first
      GEOSCoordSeq_getY(coordseq_I, 1, beta);
      printf("[%d] %.2lf %.2lf\n\n",i,*beta, *alpha);
}



Now, if I print the coordinates of each point of the 4 geometries 
(lines) composing the intersection ring, I get the same value of the 
"area_2" ring.

Second Area:
[A] 43.22 -125.52
[B] 43.22 -106.47
[C] 22.71 -106.47
[D] 22.71 -125.52

Geometries: 4
[A] 43.22 -125.52
[B] 43.22 -106.47

[B] 43.22 -106.47
[C] 22.71 -106.47

[C] 22.71 -106.47
[D] 22.71 -125.52

[D] 22.71 -125.52
[A] 43.22 -125.52

Really I can't figure out what is wrong.
Someone can help me?

Thanks.

-- 
Giacomo Piva



From geosanak at gmail.com  Mon Aug 24 09:49:17 2009
From: geosanak at gmail.com (Sanak Goe)
Date: Mon Aug 24 09:57:05 2009
Subject: [geos-devel] Computing Radials inside a Polygon
In-Reply-To: <23ab5f0a0908231018q78a9b24l9b964f06d100bbfd@mail.gmail.com>
References: <23ab5f0a0908231018q78a9b24l9b964f06d100bbfd@mail.gmail.com>
Message-ID: <5f9be0a0908240649m6a8413cbs5957fe19ea333a2@mail.gmail.com>

Hi Jo,

I think that each rotate angles should be calculated more simply.
(I think rotation matrix is valid when centroid is equal to origine(0, 0).)

The following code is pseudo code. (Sorry I haven't OGR environment...)

===================================
// get minCircle radius. (If radius is not calculated yet)
double radius=Distance(&centroid, &startPt); // I don't know that Distance
function is implemented in OGR...
// get start angle.
double startAngle=atan2(&startPt.getY()-&centroid.getY(),
&startPt.getX()-&centroid.getX());

for (size_t i=0; i <n; ++i){
        OGRLineString dLine;
        dLine.addPoint(&centroid);

        double rx=centroid.getX() + radius*cos(startAngle+fangle*i);
        double ry=centroid.getY() + radius*sin(startAngle+fangle*i);
         :
}
===================================

Regards,

Sanak.

2009/8/24 Jo <doublebyte@gmail.com>

> First of all, I apologize to post this question when my code is not
> using GEOS but I think this is a generic geometry problem so it really
> does not matter which API, I am using (I'm using OGR).
> I need to compute a certain number of equally spaced radials inside a
> polygon, given that each segment should start on the centroide and end
> somewhere in its boundary (or external ring).
> The algorithm I designed, follows this steps:
> - given a certain number of radials(n), calculate the angle(fangle)
> that equally divides the circle in n/2 sectors;
> - fetch a point from the perimeter of the minimum enclosing circle (to
> guarantee the point is outside the perimeter);
> - loop n times, rotating this point around using fangle for this
> rotation; at each step, the rotated vector will be a vector that links
> the centroide to the rotated point; to get a vector inside the
> polygon, this vector is intersected with the polygon and we use the
> resulting geometry.
>
> I am getting a strange (wrong) result, so I guess I am not seeing
> things right (or there is a bug in my code :-)) because I get equally
> spaced radials covering approximately a quarter if the polygon, and
> the angle from the first point to the first rotated point does not
> seem correct... image here:
>
> http://ladybug.no-ip.org/files/radials.png
>
>
> Here is my code! I would be very grateful for any suggestions that
> could point me in the right direction... also, if you have any ideas
> of computing this using GEOS I would not mind to go for them;
>                               thanks in advance,
>                                                           cheers, Jo
>
>        OGRPoint centroide;
>        if (Centroid(&centroide)!=OGRERR_NONE) return false; // get centroid
> of polygon
>        const OGRLinearRing * pRing=minCircle.getExteriorRing(); //get
> external ring of the minimum enclosing circle
>
>        if (pRing->getNumPoints()<1) {printf("Ring not valid!\n");return
> false;}
>        OGRPoint startPt;
>        pRing->getPoint(0, &startPt);//get one point in the minimum
> enclosing
> circle external ring
>
>        OGRLineString aLine;
>        aLine.addPoint(&centroide);
>        aLine.addPoint(&startPt);
>        aLine.addPoint(&centroide);
>
>        if (!aLine.IsValid()) {printf("Line is not valid!\n");return false;}
>
>        OGRGeometry* ints=Intersection(&aLine);
>        radials.addGeometry(ints);
>
>        double ns=n/0.5; //n is the number of radials
>        double fangle=PI/(ns*0.5);// assumed that the whole circumference is
> 2 PI radians
>
>        for (size_t i=0; i < n; ++i){
>
>                OGRLineString dLine;
>                dLine.addPoint(&centroide);
>
>                double
> rx=startPt.getX()*cos(fangle)-startPt.getY()*sin(fangle);
> //rotated x- is this correct?
>                double
> ry=startPt.getX()*sin(fangle)+startPt.getY()*cos(fangle);
> //rotated y- is this correct?
>
>                startPt.setX(rx);
>                startPt.setY(ry);
>                dLine.addPoint(&startPt);
>                dLine.addPoint(&centroide);
>
>                OGRGeometry* ints=Intersection(&dLine);
>                radials.addGeometry(ints);
>
>        }
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090824/554629f1/attachment.html
From novalis at novalis.org  Mon Aug 24 11:03:26 2009
From: novalis at novalis.org (David Turner)
Date: Mon Aug 24 11:03:34 2009
Subject: [geos-devel] GEOSIntersection returns the input
In-Reply-To: <4A927FF4.3070801@meeo.it>
References: <4A927FF4.3070801@meeo.it>
Message-ID: <1251126206.27120.142.camel@gentle>

On Mon, 2009-08-24 at 13:56 +0200, Giacomo Piva wrote:
> Hi all,
> I'm writing because I have a problem with the GEOSIntersection function.
> I'm using this function as follows:

1. You should always provide compilable code, if at all possible, when
asking for help.

2. I think GEOSGeom_createLinearRing does not copy the input argument.



From geos-trac at osgeo.org  Mon Aug 24 18:16:25 2009
From: geos-trac at osgeo.org (GEOS)
Date: Mon Aug 24 18:16:27 2009
Subject: [geos-devel] [GEOS] #286: Compile issues with HP-Ux 11i
Message-ID: <048.8c856ea732a31a3d3ff9b3f01303d969@osgeo.org>

#286: Compile issues with HP-Ux 11i
------------------------+---------------------------------------------------
 Reporter:  MarkMapo    |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:                            
Component:  Default     |     Version:  3.0.3                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 During compiliation on the HP-Ux 11i system (using the aCC compiler) I ran
 into a few syntax errors.  Most of these are easy and straight forward,
 and a couple are ambigious.  Most of the errors come from the fact that a
 lot of the classes don't have an operator=() overloaded function.  So
 changing the classes to have these, or change the code from this...
 <code>Class tempClass=someOtherInstance;</code>
 into this...
 <code>Class tempClass(someOtherInstance);</code>


 ----------------------------------------------
 Here's all the errors & fixes that I made....

 1. source/headers/geos/geom/Coordinate.h added...
 #include <iostream>

 2. source/headers/geos/geomgraph/TopologyLocation.h added...
 #include <iostream>

 3. Error 226: "GeometryTransformer.cpp", line 162 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 Geometry::AutoPtr transformGeom = transformPoint(p, geom);
 --------To this...
 Geometry::AutoPtr transformGeom(transformPoint(p, geom));

 4. Error 226: "GeometryTransformer.cpp", line 213 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::CoordinateSequence>::auto_ptr(std::auto_ptr<geos::geom::CoordinateSequence>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::CoordinateSequence>' could not be converted to
 'std::auto_ptr<geos::geom::CoordinateSequence> &'.
 --------Changed this...
 return
 factory->createLineString(transformCoordinates(geom->getCoordinatesRO(),
 geom));
 --------into this...
 std::auto_ptr<CoordinateSequence>
 tempCoordinateSequence(transformCoordinates(geom->getCoordinatesRO(),
 geom));
 return factory->createLineString(tempCoordinateSequence);

 5. Error 226: "GeometryTransformer.cpp", line 235 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 Geometry::AutoPtr transformGeom=transformLineString(l, geom);
 --------into this...
 Geometry::AutoPtr transformGeom(transformLineString(l, geom));

 6. Error 226: "GeometryTransformer.cpp", line 264 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 Geometry::AutoPtr shell=transformLinearRing(lr, geom);
 --------into this...
 Geometry::AutoPtr shell(transformLinearRing(lr, geom));

 7. Error 226: "GeometryTransformer.cpp", line 339 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 Geometry::AutoPtr transformGeom=transformPolygon(p, geom);
 --------into this...
 Geometry::AutoPtr transformGeom(transformPolygon(p, geom));

 8. Error 226: "GeometryTransformer.cpp", line 366 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 Geometry::AutoPtr transformGeom=transform(geom->getGeometryN(i));
 --------into this...
 Geometry::AutoPtr transformGeom(transform(geom->getGeometryN(i)));

 9. Error 746: "MCIndexNoder.cpp", line 143 # Cannot use static_cast to
 convert void * to const geos::noding::SegmentString *.
 --------Changed this...
 SegmentString* ss1 = const_cast<SegmentString*>(static_cast<const
 SegmentString *>(mc1->getContext()));
 --------into this...
 SegmentString* ss1 = const_cast<SegmentString*>(static_cast<const
 SegmentString *>((SegmentString*)mc1->getContext()));

 10. Warning 652: "../../../source/headers/geos/geomgraph/GeometryGraph.h",
 line 58 # Virtual function "void
 geos::geomgraph::PlanarGraph::add(geos::geomgraph::EdgeEnd *)" is hidden
 by "void geos::geomgraph::GeometryGraph::add(const geos::geom::Geometry
 *)"; did you forget to override it?
     class GeometryGraph: public PlanarGraph {
     ^^^^^^^^^^^^^^^^^^^
 --------- this was ignored

 11. Warning 652: "../../../source/headers/geos/geomgraph/GeometryGraph.h",
 line 58 # Virtual function "geos::geomgraph::Edge
 *geos::geomgraph::PlanarGraph::findEdge(const geos::geom::Coordinate
 &,const geos::geom::Coordinate &)" is hidden by "geos::geomgraph::Edge
 *geos::geomgraph::GeometryGraph::findEdge(const geos::geom::LineString
 *)"; did you forget to override it?
     class GeometryGraph: public PlanarGraph {
     ^^^^^^^^^^^^^^^^^^^
 --------- this was ignored

 12. Error 226: "OverlayResultValidator.cpp", line 155 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 >
 >::auto_ptr(std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > >' could not be converted to
 'std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &'.
 --------Changed this...
 auto_ptr< vector<geom::Coordinate> > pts=ptGen.getPoints();
 --------into this...
 auto_ptr< vector<geom::Coordinate> > pts(ptGen.getPoints());

 13. Error 182: "RelateComputer.cpp", line 340 # "void
 geos::operation::relate::RelateComputer::updateIM(geos::geom::IntersectionMatrix
 *)" cannot access private member "void
 geos::geomgraph::GraphComponent::updateIM(geos::geom::IntersectionMatrix
 *)".
                     e->GraphComponent::updateIM(imX);
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 --------Changed this...
 e->GraphComponent::updateIM(imX);
 --------into this...
 ((GraphComponent*)(e))->updateIM(imX); // note: not sure if this has the
 expected behavior - maybe this "e->updateIM(imX)" is better, but it has
 the same error??

 14. Error 226: "GeometrySnapper.cpp", line 60 # No appropriate function
 found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 >
 >::auto_ptr(std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > >' could not be converted to
 'std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &'.
 --------Changed this...
 auto_ptr<Coordinate::Vect> newPts = snapper.snapTo(snapPts);
 --------into this...
 auto_ptr<Coordinate::Vect> newPts(snapper.snapTo(snapPts));

 15. Error 226: "GeometrySnapper.cpp", line 108 # No appropriate function
 found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<const geos::geom::Coordinate
 *,std::allocator<const geos::geom::Coordinate *> >
 >::auto_ptr(std::auto_ptr<std::vector<const geos::geom::Coordinate
 *,std::allocator<const geos::geom::Coordinate *> > > &)"
 ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<const geos::geom::Coordinate *,std::allocator<const
 geos::geom::Coordinate *> > >' could not be converted to
 'std::auto_ptr<std::vector<const geos::geom::Coordinate
 *,std::allocator<const geos::geom::Coordinate *> > > &'.
 --------Changed this...
 auto_ptr<Coordinate::ConstVect> snapPts=extractTargetCoordinates(g);
 --------into this...
 auto_ptr<Coordinate::ConstVect> snapPts(extractTargetCoordinates(g));

 16. Error 226: "DouglasPeuckerSimplifier.cpp", line 111 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 >
 >::auto_ptr(std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > >' could not be converted to
 'std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &'.
 --------Changed this...
 std::auto_ptr<Coordinate::Vect> newPts
 =DouglasPeuckerLineSimplifier::simplify(*inputPts, distanceTolerance);
 --------into this...
 std::auto_ptr<Coordinate::Vect>
 newPts(DouglasPeuckerLineSimplifier::simplify(*inputPts,
 distanceTolerance));


 17. Error 226: "LineSegmentIndex.cpp", line 167 # No appropriate function
 found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > >::auto_ptr
 (std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > > &)"
 ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > >' could not be converted to
 'std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > > &'.
 --------Changed this...
 auto_ptr< vector<LineSegment*> > itemsFound = visitor.getItems();
 --------into this...
 auto_ptr< vector<LineSegment*> > itemsFound(visitor.getItems());

 18. Error 226: "TaggedLineString.cpp", line 134 # No appropriate function
 found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 >
 >::auto_ptr(std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > >' could not be converted to
 'std::auto_ptr<std::vector<geos::geom::Coordinate,std::allocator<geos::geom::Coordinate>
 > > &'.
 --------Changed this...
 CoordVectPtr pts = extractCoordinates(resultSegs);
 --------into this...
 CoordVectPtr pts(extractCoordinates(resultSegs));



 19. Error 226: "TaggedLineString.cpp", line 217 # No appropriate function
 found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::CoordinateSequence>::auto_ptr(std::auto_ptr<geos::geom::CoordinateSequence>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::CoordinateSequence>' could not be converted to
 'std::auto_ptr<geos::geom::CoordinateSequence> &'.
 --------Changed this...
 return parentLine->getFactory()->createLineString(getResultCoordinates());
 --------into this...
 CoordinateSequence::AutoPtr tempAutoPtr(getResultCoordinates());
 return parentLine->getFactory()->createLineString(tempAutoPtr);


 20. Error 226: "TaggedLineString.cpp", line 225 # No appropriate function
 found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::CoordinateSequence>::auto_ptr(std::auto_ptr<geos::geom::CoordinateSequence>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::CoordinateSequence>' could not be converted to
 'std::auto_ptr<geos::geom::CoordinateSequence> &'.
 --------Changed this...
 return parentLine->getFactory()->createLinearRing(getResultCoordinates());
 --------into this...
 CoordinateSequence::AutoPtr tempAutoPtr(getResultCoordinates());
 return parentLine->getFactory()->createLinearRing(tempAutoPtr);



 21. Error 226: "TaggedLineStringSimplifier.cpp", line 158 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::simplify::TaggedLineSegment>::auto_ptr(std::auto_ptr<geos::simplify::TaggedLineSegment>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::simplify::TaggedLineSegment>' could not be converted to
 'std::auto_ptr<geos::simplify::TaggedLineSegment> &'.
 --------Changed this...
 auto_ptr<TaggedLineSegment> newSeg = flatten(i, j);
 --------into this...
 auto_ptr<TaggedLineSegment> newSeg(flatten(i, j));


 22. Error 226: "TaggedLineStringSimplifier.cpp", line 212 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> >
 >::auto_ptr(std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > > &)"
 ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > >' could not be converted to
 'std::auto_ptr<std::vector<geos::geom::LineSegment*,std::allocator<geos::geom::LineSegment
 *> > > &'.
 --------Changed this...
 auto_ptr< vector<LineSegment*> > querySegs =
 outputIndex->query(&candidateSeg);
 --------into this...
 auto_ptr< vector<LineSegment*> >
 querySegs(outputIndex->query(&candidateSeg));



 23. Error 226: "TaggedLineStringSimplifier.cpp", line 248 # No appropriate
 function found for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> >
 >::auto_ptr(std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > > &)"
 ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > >' could not be converted to
 'std::auto_ptr<std::vector<geos::geom::LineSegment
 *,std::allocator<geos::geom::LineSegment *> > > &'.
 --------Changed this...
 auto_ptr< vector<LineSegment*> > querySegs =
 inputIndex->query(&candidateSeg);
 --------into this...
 auto_ptr< vector<LineSegment*> >
 querySegs(inputIndex->query(&candidateSeg));

 24. LInker Errors....
 /usr/ccs/bin/ld: Duplicate symbol
 "typeid<geos::noding::snapround::MCIndexSnapRounder>" in files
 .libs/inlines.o and .libs/libgeos.lax/libnoding.a/MCIndexSnapRounder.o
 /usr/ccs/bin/ld: Duplicate symbol
 "typeid*<geos::noding::snapround::MCIndexSnapRounder>" in files
 .libs/inlines.o and .libs/libgeos.lax/libnoding.a/MCIndexSnapRounder.o
 /usr/ccs/bin/ld: Duplicate symbol "Class tables [Vftptr] dependent on key
 function:
 "geos::noding::snapround::MCIndexSnapRounder::getNodedSubstrings() const""
 in files .libs/inlines.o and
 .libs/libgeos.lax/libnoding.a/MCIndexSnapRounder.o
 /usr/ccs/bin/ld: Duplicate symbol "Class tables [Vtable] dependent on key
 function:
 "geos::noding::snapround::MCIndexSnapRounder::getNodedSubstrings() const""
 in files .libs/inlines.o and
 .libs/libgeos.lax/libnoding.a/MCIndexSnapRounder.o
 /usr/ccs/bin/ld: Duplicate symbols are not allowed in shared libraries
 ------------
 nm++ inlines.o.......
 typeid*<geos::noding::snapround::MCIndexSnapRounder>|1073746684|extern|data
 |$SHORTDATA$

 nm++ libnoding.a.....
 typeid<geos::noding::snapround::MCIndexSnapRounder>|1073743568|extern|data
 |$DATA$

 --------------- fixes
 --------Changed inlines.cpp line 62 from this...
 #include <geos/noding/snapround/MCIndexSnapRounder.inl>
 --------into this...
 //#include <geos/noding/snapround/MCIndexSnapRounder.inl>

 25. Error 226: "geos_ts_c.cpp", line 1271 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr g3=BinaryOp(g1, g2, overlayOp(OverlayOp::opINTERSECTION));
 --------into this...
 GeomAutoPtr g3(BinaryOp(g1, g2, overlayOp(OverlayOp::opINTERSECTION)));

 26. Error 226: "geos_ts_c.cpp", line 1375 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr g3 = BinaryOp(g1, g2, overlayOp(OverlayOp::opDIFFERENCE));
 --------into this...
 GeomAutoPtr g3(BinaryOp(g1, g2, overlayOp(OverlayOp::opDIFFERENCE)));

 27. Error 226: "geos_ts_c.cpp", line 1445 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr g3 = BinaryOp(g1, g2, overlayOp(OverlayOp::opSYMDIFFERENCE));
 --------into this...
 GeomAutoPtr g3(BinaryOp(g1, g2, overlayOp(OverlayOp::opSYMDIFFERENCE)));

 28. Error 226: "geos_ts_c.cpp", line 1481 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr g3 = BinaryOp(g1, g2, overlayOp(OverlayOp::opUNION));
 --------into this...
 GeomAutoPtr g3(BinaryOp(g1, g2, overlayOp(OverlayOp::opUNION)));

 29. Error 226: "XMLTester.cpp", line 545 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gRealRes = BinaryOp(gA, gB,
 overlayOp(OverlayOp::opINTERSECTION));
 --------into this...
 GeomAutoPtr gRealRes(BinaryOp(gA, gB,
 overlayOp(OverlayOp::opINTERSECTION)));

 30. Error 226: "XMLTester.cpp", line 563 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gRealRes = BinaryOp(gA, gB, overlayOp(OverlayOp::opUNION));
 --------into this...
 GeomAutoPtr gRealRes(BinaryOp(gA, gB, overlayOp(OverlayOp::opUNION)));

 31. Error 226: "XMLTester.cpp", line 581 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gRealRes = BinaryOp(gA, gB,
 overlayOp(OverlayOp::opDIFFERENCE));
 --------into this...
 GeomAutoPtr gRealRes(BinaryOp(gA, gB,
 overlayOp(OverlayOp::opDIFFERENCE)));

 32. Error 226: "XMLTester.cpp", line 600 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gRealRes = BinaryOp(gA, gB,
 overlayOp(OverlayOp::opSYMDIFFERENCE));
 --------into this...
 GeomAutoPtr gRealRes(BinaryOp(gA, gB,
 overlayOp(OverlayOp::opSYMDIFFERENCE)));

 33. Error 226: "XMLTester.cpp", line 755 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gDiff = BinaryOp(gRes.get(), gRealRes.get(),
 overlayOp(OverlayOp::opDIFFERENCE));
 --------into this...
 GeomAutoPtr gDiff(BinaryOp(gRes.get(), gRealRes.get(),
 overlayOp(OverlayOp::opDIFFERENCE)));

 34. Error 226: "XMLTester.cpp", line 889 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gI = BinaryOp(gA, gB, overlayOp(OverlayOp::opINTERSECTION));
 --------into this...
 GeomAutoPtr gI(BinaryOp(gA, gB, overlayOp(OverlayOp::opINTERSECTION)));

 35. Error 226: "XMLTester.cpp", line 901 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gDab = BinaryOp(gA, gB, overlayOp(OverlayOp::opDIFFERENCE));
 --------into this...
 GeomAutoPtr gDab(BinaryOp(gA, gB, overlayOp(OverlayOp::opDIFFERENCE)));

 36. Error 226: "XMLTester.cpp", line 908 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gDba = BinaryOp(gB, gA, overlayOp(OverlayOp::opDIFFERENCE));
 --------into this...
 GeomAutoPtr gDba(BinaryOp(gB, gA, overlayOp(OverlayOp::opDIFFERENCE)));

 37. Error 226: "XMLTester.cpp", line 920 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gSD = BinaryOp(gA, gB, overlayOp(OverlayOp::opSYMDIFFERENCE));
 --------into this...
 GeomAutoPtr gSD(BinaryOp(gA, gB, overlayOp(OverlayOp::opSYMDIFFERENCE)));

 38. Error 226: "XMLTester.cpp", line 927 # No appropriate function found
 for call of 'auto_ptr::auto_ptr'. Last viable candidate was
 "std::auto_ptr<geos::geom::Geometry>::auto_ptr(std::auto_ptr<geos::geom::Geometry>
 &)" ["/opt/aCC/include_std/memory", line 833]. Argument of type 'class
 auto_ptr<geos::geom::Geometry>' could not be converted to
 'std::auto_ptr<geos::geom::Geometry> &'.
 --------Changed this...
 GeomAutoPtr gU = BinaryOp(gA, gB, overlayOp(OverlayOp::opUNION));
 --------into this...
 GeomAutoPtr gU(BinaryOp(gA, gB, overlayOp(OverlayOp::opUNION)));

 39. after make install, the geos/bin/geos-config has the wrong permissions
 -------- this...
 -rw-rw-rw-   1 user        user            823 Aug 20 19:45 geos-config
 -------- should be (chmod 555 geos-config)...
 -r-xr-xr-x   1 user        user            823 Aug 20 19:45 geos-config

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/286>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From piva at meeo.it  Tue Aug 25 03:03:47 2009
From: piva at meeo.it (Giacomo Piva)
Date: Tue Aug 25 03:03:56 2009
Subject: [geos-devel] GEOSIntersection returns the input
In-Reply-To: <1251126206.27120.142.camel@gentle>
References: <4A927FF4.3070801@meeo.it> <1251126206.27120.142.camel@gentle>
Message-ID: <4A938CD3.2020506@meeo.it>


>> Hi all,
>> I'm writing because I have a problem with the GEOSIntersection function.
>> I'm using this function as follows:
>>     
>
> 1. You should always provide compilable code, if at all possible, when
> asking for help.
>   
Follows the code I'm using.

    // Init GEOS
    GEOSMessageHandler error_function, notice_function;
    initGEOS(notice_function, error_function);

    GEOSCoordSeq coordseq = NULL;
    GEOSGeom area_1 = NULL, area_2 = NULL, intersection = NULL;

    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);   //5 points 
bi-dimensional

    GEOSCoordSeq_setX(coordseq, 0, inputdatat1->Lon_UL);    //upper left
    GEOSCoordSeq_setY(coordseq, 0, inputdatat1->Lat_UL);
    GEOSCoordSeq_setX(coordseq, 1, inputdatat1->Lon_LR);    //upper right
    GEOSCoordSeq_setY(coordseq, 1, inputdatat1->Lat_UL);
    GEOSCoordSeq_setX(coordseq, 2, inputdatat1->Lon_LR);    //lower right
    GEOSCoordSeq_setY(coordseq, 2, inputdatat1->Lat_LR);
    GEOSCoordSeq_setX(coordseq, 3, inputdatat1->Lon_UL);    //lower left
    GEOSCoordSeq_setY(coordseq, 3, inputdatat1->Lat_LR);
    GEOSCoordSeq_setX(coordseq, 4, inputdatat1->Lon_UL);    //upper left
    GEOSCoordSeq_setY(coordseq, 4, inputdatat1->Lat_UL);

    area_1 = GEOSGeom_createLinearRing(coordseq);   

    if((GEOSisEmpty(area_1) != 0) || (GEOSisValid(area_1) != 1)) {
        printf("No valid intersection found.\n");
        exit(2);    //invalid input parameter
    }

    GEOSCoordSeq_setX(coordseq, 0, inputdatat2->Lon_UL);    //upper left
    GEOSCoordSeq_setY(coordseq, 0, inputdatat2->Lat_UL);
    GEOSCoordSeq_setX(coordseq, 1, inputdatat2->Lon_LR);    //upper right
    GEOSCoordSeq_setY(coordseq, 1, inputdatat2->Lat_UL);
    GEOSCoordSeq_setX(coordseq, 2, inputdatat2->Lon_LR);    //lower right
    GEOSCoordSeq_setY(coordseq, 2, inputdatat2->Lat_LR);
    GEOSCoordSeq_setX(coordseq, 3, inputdatat2->Lon_UL);    //lower left
    GEOSCoordSeq_setY(coordseq, 3, inputdatat2->Lat_LR);
    GEOSCoordSeq_setX(coordseq, 4, inputdatat2->Lon_UL);    //upper left
    GEOSCoordSeq_setY(coordseq, 4, inputdatat2->Lat_UL);

    area_2 = GEOSGeom_createLinearRing(coordseq);

    if((GEOSisEmpty(area_2) != 0) || (GEOSisValid(area_2) != 1)) {
        printf("No valid intersection found.\n");
        exit(2);    //invalid input parameter
    }


    intersection = GEOSIntersection(area_1, area_2);

    if((GEOSisEmpty(intersection) != 0) || (GEOSisValid(intersection) != 
1)) {
        printf("No valid intersection found.\n");
        exit(2);    //invalid input parameter
    }

    //Getting coords for the vertex
    unsigned int num;       
    double xPoints[4];
    double yPoints[4];

    double *int_Lon_UL = (double*)malloc(sizeof(double)*1);
    double *int_Lat_UL = (double*)malloc(sizeof(double)*1);
    double *int_Lon_LR = (double*)malloc(sizeof(double)*1);
    double *int_Lat_LR = (double*)malloc(sizeof(double)*1);

    GEOSGeom geom;

    num = GEOSGetNumGeometries(intersection);
    printf("Geometries: %d\n",num);

    GEOSCoordSeq_destroy(coordseq);
    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(2, 2);   //2 points 
bi-dimensional

    for(i=0; i < num; i++) {
        geom = (GEOSGeom) GEOSGetGeometryN(intersection, i);  

        coordseq = (GEOSCoordSeq) GEOSGeom_getCoordSeq(geom);

        GEOSCoordSeq_getX(coordseq, 0, &xPoints[i]);
        GEOSCoordSeq_getY(coordseq, 0, &yPoints[i]);
    }

    //Filling the values in the right place
    *int_Lon_UL = xPoints[0];
    *int_Lat_UL = yPoints[0];
    *int_Lon_LR = xPoints[2];
    *int_Lat_LR = yPoints[2];

    // Finalizzo GEOS
    finishGEOS();

    printf("First Area:\t%.2lf %.2lf,%.2lf %.2lf,%.2lf %.2lf,%.2lf 
%.2lf\n",inputdatat1->Lat_UL, inputdatat1->Lon_UL, inputdatat1->Lat_UL, 
inputdatat1->Lon_LR, inputdatat1->Lat_LR, inputdatat1->Lon_LR, 
inputdatat1->Lat_LR, inputdatat1->Lon_UL);
    printf("Second Area:\t%.2lf %.2lf,%.2lf %.2lf,%.2lf %.2lf,%.2lf 
%.2lf\n",inputdatat2->Lat_UL, inputdatat2->Lon_UL, inputdatat2->Lat_UL, 
inputdatat2->Lon_LR, inputdatat2->Lat_LR, inputdatat2->Lon_LR, 
inputdatat2->Lat_LR, inputdatat2->Lon_UL);
    printf("intersection:\t%.2lf %.2lf,%.2lf %.2lf,%.2lf %.2lf,%.2lf 
%.2lf\n",*int_Lat_UL, *int_Lon_UL, *int_Lat_UL, *int_Lon_LR, 
*int_Lat_LR, *int_Lon_LR, *int_Lat_LR, *int_Lon_UL);



And the output is:
First Area:    42.46 -131.80,42.46 -112.91,21.96 -112.91,21.96 -131.80
Second Area:   43.22 -125.52,43.22 -106.47,22.71 -106.47,22.71 -125.52
intersection:  43.22 -125.52,43.22 -106.47,22.71 -106.47,22.71 -125.52

As you can see the intersection's vertex are the same of the second area.
> 2. I think GEOSGeom_createLinearRing does not copy the input argument
-- 
Giacomo


From jef at norbit.de  Tue Aug 25 03:22:41 2009
From: jef at norbit.de (=?iso-8859-1?B?SvxyZ2VuIEUu?= Fischer)
Date: Tue Aug 25 03:22:56 2009
Subject: [geos-devel] GEOSIntersection returns the input
In-Reply-To: <4A938CD3.2020506@meeo.it>
References: <4A927FF4.3070801@meeo.it> <1251126206.27120.142.camel@gentle>
	<4A938CD3.2020506@meeo.it>
Message-ID: <20090825072241.GA17577@norbit.de>

Hi Giacomo,

some comments:

On Tue, 25. Aug 2009 at 09:03:47 +0200, Giacomo Piva wrote:
>    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);   //5 points bi-dimensional
[...]
>    area_1 = GEOSGeom_createLinearRing(coordseq);   
[...]
>    area_2 = GEOSGeom_createLinearRing(coordseq);

You need a new coordinate sequence here.  GEOSGeom_createLinearRing takes
ownership of it.

>    intersection = GEOSIntersection(area_1, area_2);

You're intersecting two rings here.   You might want to GEOSGeom_createPolygon
from the rings and intersect those.

>    GEOSCoordSeq_destroy(coordseq);

The coordinate sequence is owner by the linear ring.  So you shouldn't destroy
it here.

>    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(2, 2);   //2 points bi-dimensional

The (pointer to the) coordinate sequence you allocate here is lost...

>        coordseq = (GEOSCoordSeq) GEOSGeom_getCoordSeq(geom);

...when you overwrite it here.

hth
J?rgen

-- 
J?rgen E. Fischer         norBIT GmbH               Tel. +49-4931-918175-20
Dipl.-Inf. (FH)           Rheinstra?e 13            Fax. +49-4931-918175-50
Software Engineer         D-26506 Norden               http://www.norbit.de

-- 
norBIT Gesellschaft fuer Unternehmensberatung und Informationssysteme mbH
Rheinstrasse 13, 26506 Norden
GF: Jelto Buurman, HR: Amtsgericht Emden, HRB 5502

From piva at meeo.it  Tue Aug 25 06:15:38 2009
From: piva at meeo.it (Giacomo Piva)
Date: Tue Aug 25 06:15:40 2009
Subject: [geos-devel] GEOSIntersection returns the input
In-Reply-To: <20090825072241.GA17577@norbit.de>
References: <4A927FF4.3070801@meeo.it> <1251126206.27120.142.camel@gentle>
	<4A938CD3.2020506@meeo.it> <20090825072241.GA17577@norbit.de>
Message-ID: <4A93B9CA.5020501@meeo.it>

Thank you.
Finally I get the intersection by using 2 polygons from linear ring


J?rgen E. Fischer ha scritto:
> Hi Giacomo,
>
> some comments:
>
> On Tue, 25. Aug 2009 at 09:03:47 +0200, Giacomo Piva wrote:
>   
>>    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(5, 2);   //5 points bi-dimensional
>>     
> [...]
>   
>>    area_1 = GEOSGeom_createLinearRing(coordseq);   
>>     
> [...]
>   
>>    area_2 = GEOSGeom_createLinearRing(coordseq);
>>     
>
> You need a new coordinate sequence here.  GEOSGeom_createLinearRing takes
> ownership of it.
>
>   
>>    intersection = GEOSIntersection(area_1, area_2);
>>     
>
> You're intersecting two rings here.   You might want to GEOSGeom_createPolygon
> from the rings and intersect those.
>
>   
>>    GEOSCoordSeq_destroy(coordseq);
>>     
>
> The coordinate sequence is owner by the linear ring.  So you shouldn't destroy
> it here.
>
>   
>>    coordseq = (GEOSCoordSeq) GEOSCoordSeq_create(2, 2);   //2 points bi-dimensional
>>     
>
> The (pointer to the) coordinate sequence you allocate here is lost...
>
>   
>>        coordseq = (GEOSCoordSeq) GEOSGeom_getCoordSeq(geom);
>>     
>
> ...when you overwrite it here.
>
> hth
> J?rgen
>
>   


-- 
Giacomo 

From woodbri at swoodbridge.com  Tue Aug 25 09:14:02 2009
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Tue Aug 25 09:13:39 2009
Subject: [geos-devel] [Fwd: [Boost-users] [boost] Formal Review:
 Boost.Polygon starts today August 24, 2009]
Message-ID: <4A93E39A.1090302@swoodbridge.com>

Hi Devs,

I saw this this morning and thought it might be of interest to the 
postGIS and GEOS teams. What caught my eye was the connection to Graphs 
which implies to me topology in this case. This might give us the tools 
needed to handle polygon coverages and do things like simplify a 
coverage while maintaining topology of the edges and and common edges 
between topologically connected polygons. I'm only guessing al this from 
the write up below but it sounds promising.

Maybe someone with more technical guts knowledge can review this for its 
potential value to GEOS and/or PostGIS.

ATB,
   -Steve

-------- Original Message --------
Subject: [Boost-users] [boost] Formal Review: Boost.Polygon starts 
today	August 24, 2009
Resent-Date: Tue, 25 Aug 2009 07:43:06 -0400
Resent-From: Ronald Garcia <garcia@osl.iu.edu>
Resent-To: boost-users@lists.boost.org, boost-announce@lists.boost.org
Date: Mon, 24 Aug 2009 17:36:56 -0300
From: Fernando Cacciola <fernando.cacciola@gmail.com>
Reply-To: boost-users@lists.boost.org
To: boost@lists.boost.org

Dear Developers,

The formal review of the Boost.Polygon library by Lucanus Simonson
starts today, August 24, 2009 and will finish September 2, 2009.

I really hope to see your vote and your participation in the
discussions on
the Boost mailing lists!

---------------------------------------------------

About the library:

The boost polygon library provides algorithms focused on manipulating
planar
polygon geometry data.  Specific algorithms provided are the polygon set
operations (intersection, union, difference, disjoint-union) and related
algorithms such as polygon connectivity graph extraction, offsetting and
map-overlay.  These so-called Boolean algorithms are of significant
interest in
GIS (Geospatial Information Systems), VLSI CAD as well al other fields
of CAD,
and many more application areas, and providing them is the primary
focus of this
library.  The polygon library is not intended to cover all of
computational
geometry in its scope, and provides a set of capabilities for working
with
coordinates, points, intervals and rectangles that are needed to support
implementing and interacting with polygon data structures and
algorithms.
Specifically, 3d and non-Cartesian/non-planar geometry is outside of
the scope
of the polygon library

The design philosophy behind the polygon library was to create an API
for
invoking the library algorithms it provides on user geometry data
types that is
maximally intuitive, minimally error-prone and easy to integrate into
pre-existing applications.  C++-concepts based template meta-programming
combined with generic operator overloading meets these design goals
without
sacrificing the runtime or memory efficiency of the underlying
algorithms.  This
API makes the following code snippet that operates on non-library
geometry types
possible:

void foo(list<CPolygon>& result, const list<CPolygon>& a,
         const list<CPolygon>& b, int deflateValue) {
     CBoundingBox domainExtent;
     using namespace boost::polygon::operators;
     boost::polygon::extents(domainExtent, a);
     result += (b & domainExtent) ^ (a - deflateValue);
}

The source is available at

http://svn.boost.org/svn/boost/sandbox/gtl/boost/polygon/

And the documentation is at

http://svn.boost.org/svn/boost/sandbox/gtl/doc/index.htm

---------------------------------------------------

Please always state in your review, whether you think the library
should be
accepted as a Boost library!

Additionally please consider giving feedback on the following general
topics:

- What is your evaluation of the design?
- What is your evaluation of the implementation?
- What is your evaluation of the documentation?
- What is your evaluation of the potential usefulness of the library?
- Did you try to use the library?  With what compiler?  Did you have any
problems?
- How much effort did you put into your evaluation? A glance? A quick
reading? In-depth study?
- Are you knowledgeable about the problem domain?


Best Regards

Fernando Cacciola
Review Manager



_______________________________________________
Unsubscribe & other changes: 
http://lists.boost.org/mailman/listinfo.cgi/boost
_______________________________________________
Boost-users mailing list
Boost-users@lists.boost.org
http://lists.boost.org/mailman/listinfo.cgi/boost-users
From mbdavis at refractions.net  Tue Aug 25 13:04:08 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Tue Aug 25 13:02:01 2009
Subject: [geos-devel] [Fwd: [Boost-users] [boost] Formal Review:
	Boost.Polygon starts today August 24, 2009]
In-Reply-To: <4A93E39A.1090302@swoodbridge.com>
References: <4A93E39A.1090302@swoodbridge.com>
Message-ID: <4A941988.4070701@refractions.net>

Interesting and ambitious project. 

With the caveat that I've really only skimmed the documentation and have 
not done any actual experimentation with the library, here's my 
perspective on it's applicability to PostGIS & GEOS:

- The API seems likely to be quite complex, since it dives headfirst 
into the C++ template/traits pool.  This seems to be de rigeur for any 
serious C++ library these days, but to my mind this is orthogonal to the 
requirements of PostGIS and indeed a lot of geometry processing. 
- The library is apparently concerned only with polygon operations, 
whereas GEOS and PostGIS provide the full SFS geometry model
- As I read it the library as it ships uses 32-bit integers for 
computation.  In my experience this is not enough precision for general 
geospatial processing.  They do say that it can be configured/enhanced 
to allow 64-bit processing (but not floating-point, it looks like).  It 
would be work to develop this and test it, however
- It doesn't look like predicates are provided
- They don't do any performance comparisons against GEOS.  That's too 
bad - it would be nice to see how it stacks up.
- They seem to be quite concerned with providing code for handling 
rectilinear and "45-degree" polygons.  It looks like some operations 
might be restricted to these kinds of geometries (eg buffering?).  Not 
sure what their use case is, but this doesn't occur that often in 
geospatial data.

The coverage handling aspect could be interesting, but I don't see much 
reference to it in the documentation.  In any case, the really hard part 
about coverage processing in a database is scaling to process datasets 
which exceed main memory.  Some recent experimentation has convinced me 
that sweep-line is a good paradigm for tackling this problem, but this 
still requires an algorithms which is explicitly designed to process out 
of external memory.

IMO the things that matter most to the PostGIS/GEOS community are 
peformance, robustness, and ease of use.  It would be really nice to see 
some performance comparisons between Boost.Polygon, GEOS and JTS on 
large geometries and datasets.  If BP proved to be much faster and/or 
more robust, then it might indicate that they have chosen a better 
approach to the core problem of evaluating polygon overlays.  Even then, 
however, there is the question of the complexity of using two large 
APIs  together.   There would be some  serious work involved in 
providing a higher-level facade API to enable using selected components 
of both APIs in a transparent fashion.

HTH - Martin

Stephen Woodbridge wrote:
> Hi Devs,
>
> I saw this this morning and thought it might be of interest to the 
> postGIS and GEOS teams. What caught my eye was the connection to 
> Graphs which implies to me topology in this case. This might give us 
> the tools needed to handle polygon coverages and do things like 
> simplify a coverage while maintaining topology of the edges and and 
> common edges between topologically connected polygons. I'm only 
> guessing al this from the write up below but it sounds promising.
>
> Maybe someone with more technical guts knowledge can review this for 
> its potential value to GEOS and/or PostGIS.
>
> ATB,
>   -Steve
>
> -------- Original Message --------
> Subject: [Boost-users] [boost] Formal Review: Boost.Polygon starts 
> today    August 24, 2009
> Resent-Date: Tue, 25 Aug 2009 07:43:06 -0400
> Resent-From: Ronald Garcia <garcia@osl.iu.edu>
> Resent-To: boost-users@lists.boost.org, boost-announce@lists.boost.org
> Date: Mon, 24 Aug 2009 17:36:56 -0300
> From: Fernando Cacciola <fernando.cacciola@gmail.com>
> Reply-To: boost-users@lists.boost.org
> To: boost@lists.boost.org
>
> Dear Developers,
>
> The formal review of the Boost.Polygon library by Lucanus Simonson
> starts today, August 24, 2009 and will finish September 2, 2009.
>
> I really hope to see your vote and your participation in the
> discussions on
> the Boost mailing lists!
>
> ---------------------------------------------------
>
> About the library:
>
> The boost polygon library provides algorithms focused on manipulating
> planar
> polygon geometry data.  Specific algorithms provided are the polygon set
> operations (intersection, union, difference, disjoint-union) and related
> algorithms such as polygon connectivity graph extraction, offsetting and
> map-overlay.  These so-called Boolean algorithms are of significant
> interest in
> GIS (Geospatial Information Systems), VLSI CAD as well al other fields
> of CAD,
> and many more application areas, and providing them is the primary
> focus of this
> library.  The polygon library is not intended to cover all of
> computational
> geometry in its scope, and provides a set of capabilities for working
> with
> coordinates, points, intervals and rectangles that are needed to support
> implementing and interacting with polygon data structures and
> algorithms.
> Specifically, 3d and non-Cartesian/non-planar geometry is outside of
> the scope
> of the polygon library
>
> The design philosophy behind the polygon library was to create an API
> for
> invoking the library algorithms it provides on user geometry data
> types that is
> maximally intuitive, minimally error-prone and easy to integrate into
> pre-existing applications.  C++-concepts based template meta-programming
> combined with generic operator overloading meets these design goals
> without
> sacrificing the runtime or memory efficiency of the underlying
> algorithms.  This
> API makes the following code snippet that operates on non-library
> geometry types
> possible:
>
> void foo(list<CPolygon>& result, const list<CPolygon>& a,
>         const list<CPolygon>& b, int deflateValue) {
>     CBoundingBox domainExtent;
>     using namespace boost::polygon::operators;
>     boost::polygon::extents(domainExtent, a);
>     result += (b & domainExtent) ^ (a - deflateValue);
> }
>
> The source is available at
>
> http://svn.boost.org/svn/boost/sandbox/gtl/boost/polygon/
>
> And the documentation is at
>
> http://svn.boost.org/svn/boost/sandbox/gtl/doc/index.htm
>
> ---------------------------------------------------
>
> Please always state in your review, whether you think the library
> should be
> accepted as a Boost library!
>
> Additionally please consider giving feedback on the following general
> topics:
>
> - What is your evaluation of the design?
> - What is your evaluation of the implementation?
> - What is your evaluation of the documentation?
> - What is your evaluation of the potential usefulness of the library?
> - Did you try to use the library?  With what compiler?  Did you have any
> problems?
> - How much effort did you put into your evaluation? A glance? A quick
> reading? In-depth study?
> - Are you knowledgeable about the problem domain?
>
>
> Best Regards
>
> Fernando Cacciola
> Review Manager
>
>
>
> _______________________________________________
> Unsubscribe & other changes: 
> http://lists.boost.org/mailman/listinfo.cgi/boost
> _______________________________________________
> Boost-users mailing list
> Boost-users@lists.boost.org
> http://lists.boost.org/mailman/listinfo.cgi/boost-users
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From woodbri at swoodbridge.com  Tue Aug 25 14:23:00 2009
From: woodbri at swoodbridge.com (Stephen Woodbridge)
Date: Tue Aug 25 14:22:41 2009
Subject: [geos-devel] [Fwd:  Formal Review:	Boost.Polygon starts today
	August 24, 2009]
In-Reply-To: <4A941988.4070701@refractions.net>
References: <4A93E39A.1090302@swoodbridge.com>
	<4A941988.4070701@refractions.net>
Message-ID: <4A942C04.1050402@swoodbridge.com>

Martin,

Thank you for looking at this. I am not involved, just thought it looked 
interesting. I did read through some of their docs and examples and just 
was not sure what to think about it. Having worked on some large scale 
integrated circuit software in the distant past, this may be more 
oriented to this arena which would explain the 45/90 degree stuff I noticed.

Anyway maybe something to keep an eye on as it evolves or something that 
you might want to comment on in their review process.

Best regards,
   -Steve

Martin Davis wrote:
> Interesting and ambitious project.
> With the caveat that I've really only skimmed the documentation and have 
> not done any actual experimentation with the library, here's my 
> perspective on it's applicability to PostGIS & GEOS:
> 
> - The API seems likely to be quite complex, since it dives headfirst 
> into the C++ template/traits pool.  This seems to be de rigeur for any 
> serious C++ library these days, but to my mind this is orthogonal to the 
> requirements of PostGIS and indeed a lot of geometry processing. - The 
> library is apparently concerned only with polygon operations, whereas 
> GEOS and PostGIS provide the full SFS geometry model
> - As I read it the library as it ships uses 32-bit integers for 
> computation.  In my experience this is not enough precision for general 
> geospatial processing.  They do say that it can be configured/enhanced 
> to allow 64-bit processing (but not floating-point, it looks like).  It 
> would be work to develop this and test it, however
> - It doesn't look like predicates are provided
> - They don't do any performance comparisons against GEOS.  That's too 
> bad - it would be nice to see how it stacks up.
> - They seem to be quite concerned with providing code for handling 
> rectilinear and "45-degree" polygons.  It looks like some operations 
> might be restricted to these kinds of geometries (eg buffering?).  Not 
> sure what their use case is, but this doesn't occur that often in 
> geospatial data.
> 
> The coverage handling aspect could be interesting, but I don't see much 
> reference to it in the documentation.  In any case, the really hard part 
> about coverage processing in a database is scaling to process datasets 
> which exceed main memory.  Some recent experimentation has convinced me 
> that sweep-line is a good paradigm for tackling this problem, but this 
> still requires an algorithms which is explicitly designed to process out 
> of external memory.
> 
> IMO the things that matter most to the PostGIS/GEOS community are 
> peformance, robustness, and ease of use.  It would be really nice to see 
> some performance comparisons between Boost.Polygon, GEOS and JTS on 
> large geometries and datasets.  If BP proved to be much faster and/or 
> more robust, then it might indicate that they have chosen a better 
> approach to the core problem of evaluating polygon overlays.  Even then, 
> however, there is the question of the complexity of using two large 
> APIs  together.   There would be some  serious work involved in 
> providing a higher-level facade API to enable using selected components 
> of both APIs in a transparent fashion.
> 
> HTH - Martin
> 
> Stephen Woodbridge wrote:
>> Hi Devs,
>>
>> I saw this this morning and thought it might be of interest to the 
>> postGIS and GEOS teams. What caught my eye was the connection to 
>> Graphs which implies to me topology in this case. This might give us 
>> the tools needed to handle polygon coverages and do things like 
>> simplify a coverage while maintaining topology of the edges and and 
>> common edges between topologically connected polygons. I'm only 
>> guessing al this from the write up below but it sounds promising.
>>
>> Maybe someone with more technical guts knowledge can review this for 
>> its potential value to GEOS and/or PostGIS.
>>
>> ATB,
>>   -Steve
>>
>> -------- Original Message --------
>> Subject: [Boost-users] [boost] Formal Review: Boost.Polygon starts 
>> today    August 24, 2009
>> Resent-Date: Tue, 25 Aug 2009 07:43:06 -0400
>> Resent-From: Ronald Garcia <garcia@osl.iu.edu>
>> Resent-To: boost-users@lists.boost.org, boost-announce@lists.boost.org
>> Date: Mon, 24 Aug 2009 17:36:56 -0300
>> From: Fernando Cacciola <fernando.cacciola@gmail.com>
>> Reply-To: boost-users@lists.boost.org
>> To: boost@lists.boost.org
>>
>> Dear Developers,
>>
>> The formal review of the Boost.Polygon library by Lucanus Simonson
>> starts today, August 24, 2009 and will finish September 2, 2009.
>>
>> I really hope to see your vote and your participation in the
>> discussions on
>> the Boost mailing lists!
>>
>> ---------------------------------------------------
>>
>> About the library:
>>
>> The boost polygon library provides algorithms focused on manipulating
>> planar
>> polygon geometry data.  Specific algorithms provided are the polygon set
>> operations (intersection, union, difference, disjoint-union) and related
>> algorithms such as polygon connectivity graph extraction, offsetting and
>> map-overlay.  These so-called Boolean algorithms are of significant
>> interest in
>> GIS (Geospatial Information Systems), VLSI CAD as well al other fields
>> of CAD,
>> and many more application areas, and providing them is the primary
>> focus of this
>> library.  The polygon library is not intended to cover all of
>> computational
>> geometry in its scope, and provides a set of capabilities for working
>> with
>> coordinates, points, intervals and rectangles that are needed to support
>> implementing and interacting with polygon data structures and
>> algorithms.
>> Specifically, 3d and non-Cartesian/non-planar geometry is outside of
>> the scope
>> of the polygon library
>>
>> The design philosophy behind the polygon library was to create an API
>> for
>> invoking the library algorithms it provides on user geometry data
>> types that is
>> maximally intuitive, minimally error-prone and easy to integrate into
>> pre-existing applications.  C++-concepts based template meta-programming
>> combined with generic operator overloading meets these design goals
>> without
>> sacrificing the runtime or memory efficiency of the underlying
>> algorithms.  This
>> API makes the following code snippet that operates on non-library
>> geometry types
>> possible:
>>
>> void foo(list<CPolygon>& result, const list<CPolygon>& a,
>>         const list<CPolygon>& b, int deflateValue) {
>>     CBoundingBox domainExtent;
>>     using namespace boost::polygon::operators;
>>     boost::polygon::extents(domainExtent, a);
>>     result += (b & domainExtent) ^ (a - deflateValue);
>> }
>>
>> The source is available at
>>
>> http://svn.boost.org/svn/boost/sandbox/gtl/boost/polygon/
>>
>> And the documentation is at
>>
>> http://svn.boost.org/svn/boost/sandbox/gtl/doc/index.htm
>>
>> ---------------------------------------------------
>>
>> Please always state in your review, whether you think the library
>> should be
>> accepted as a Boost library!
>>
>> Additionally please consider giving feedback on the following general
>> topics:
>>
>> - What is your evaluation of the design?
>> - What is your evaluation of the implementation?
>> - What is your evaluation of the documentation?
>> - What is your evaluation of the potential usefulness of the library?
>> - Did you try to use the library?  With what compiler?  Did you have any
>> problems?
>> - How much effort did you put into your evaluation? A glance? A quick
>> reading? In-depth study?
>> - Are you knowledgeable about the problem domain?
>>
>>
>> Best Regards
>>
>> Fernando Cacciola
>> Review Manager
>>
>>
>>
>> _______________________________________________
>> Unsubscribe & other changes: 
>> http://lists.boost.org/mailman/listinfo.cgi/boost
>> _______________________________________________
>> Boost-users mailing list
>> Boost-users@lists.boost.org
>> http://lists.boost.org/mailman/listinfo.cgi/boost-users
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@lists.osgeo.org
>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>
> 

From mbdavis at refractions.net  Tue Aug 25 16:12:54 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Tue Aug 25 16:10:46 2009
Subject: [geos-devel] [Fwd:  Formal Review:	Boost.Polygon starts today
	August 24, 2009]
In-Reply-To: <4A942C04.1050402@swoodbridge.com>
References: <4A93E39A.1090302@swoodbridge.com>	<4A941988.4070701@refractions.net>
	<4A942C04.1050402@swoodbridge.com>
Message-ID: <4A9445C6.8060804@refractions.net>

Good point about the possible connection between LSI and the 45/90 
degree stuff.  Given that both authors work for Intel that seems even 
more likely...  There's probably some significant optimizations possible 
if you have 45/90 degrees as a constraint on the input.

Martin



Stephen Woodbridge wrote:
> Martin,
>
> Thank you for looking at this. I am not involved, just thought it 
> looked interesting. I did read through some of their docs and examples 
> and just was not sure what to think about it. Having worked on some 
> large scale integrated circuit software in the distant past, this may 
> be more oriented to this arena which would explain the 45/90 degree 
> stuff I noticed.
>
> Anyway maybe something to keep an eye on as it evolves or something 
> that you might want to comment on in their review process.
>
> Best regards,
>   -Steve
>
> Martin Davis wrote:
>> Interesting and ambitious project.
>> With the caveat that I've really only skimmed the documentation and 
>> have not done any actual experimentation with the library, here's my 
>> perspective on it's applicability to PostGIS & GEOS:
>>
>> - The API seems likely to be quite complex, since it dives headfirst 
>> into the C++ template/traits pool.  This seems to be de rigeur for 
>> any serious C++ library these days, but to my mind this is orthogonal 
>> to the requirements of PostGIS and indeed a lot of geometry 
>> processing. - The library is apparently concerned only with polygon 
>> operations, whereas GEOS and PostGIS provide the full SFS geometry model
>> - As I read it the library as it ships uses 32-bit integers for 
>> computation.  In my experience this is not enough precision for 
>> general geospatial processing.  They do say that it can be 
>> configured/enhanced to allow 64-bit processing (but not 
>> floating-point, it looks like).  It would be work to develop this and 
>> test it, however
>> - It doesn't look like predicates are provided
>> - They don't do any performance comparisons against GEOS.  That's too 
>> bad - it would be nice to see how it stacks up.
>> - They seem to be quite concerned with providing code for handling 
>> rectilinear and "45-degree" polygons.  It looks like some operations 
>> might be restricted to these kinds of geometries (eg buffering?).  
>> Not sure what their use case is, but this doesn't occur that often in 
>> geospatial data.
>>
>> The coverage handling aspect could be interesting, but I don't see 
>> much reference to it in the documentation.  In any case, the really 
>> hard part about coverage processing in a database is scaling to 
>> process datasets which exceed main memory.  Some recent 
>> experimentation has convinced me that sweep-line is a good paradigm 
>> for tackling this problem, but this still requires an algorithms 
>> which is explicitly designed to process out of external memory.
>>
>> IMO the things that matter most to the PostGIS/GEOS community are 
>> peformance, robustness, and ease of use.  It would be really nice to 
>> see some performance comparisons between Boost.Polygon, GEOS and JTS 
>> on large geometries and datasets.  If BP proved to be much faster 
>> and/or more robust, then it might indicate that they have chosen a 
>> better approach to the core problem of evaluating polygon overlays.  
>> Even then, however, there is the question of the complexity of using 
>> two large APIs  together.   There would be some  serious work 
>> involved in providing a higher-level facade API to enable using 
>> selected components of both APIs in a transparent fashion.
>>
>> HTH - Martin
>>
>> Stephen Woodbridge wrote:
>>> Hi Devs,
>>>
>>> I saw this this morning and thought it might be of interest to the 
>>> postGIS and GEOS teams. What caught my eye was the connection to 
>>> Graphs which implies to me topology in this case. This might give us 
>>> the tools needed to handle polygon coverages and do things like 
>>> simplify a coverage while maintaining topology of the edges and and 
>>> common edges between topologically connected polygons. I'm only 
>>> guessing al this from the write up below but it sounds promising.
>>>
>>> Maybe someone with more technical guts knowledge can review this for 
>>> its potential value to GEOS and/or PostGIS.
>>>
>>> ATB,
>>>   -Steve
>>>
>>> -------- Original Message --------
>>> Subject: [Boost-users] [boost] Formal Review: Boost.Polygon starts 
>>> today    August 24, 2009
>>> Resent-Date: Tue, 25 Aug 2009 07:43:06 -0400
>>> Resent-From: Ronald Garcia <garcia@osl.iu.edu>
>>> Resent-To: boost-users@lists.boost.org, boost-announce@lists.boost.org
>>> Date: Mon, 24 Aug 2009 17:36:56 -0300
>>> From: Fernando Cacciola <fernando.cacciola@gmail.com>
>>> Reply-To: boost-users@lists.boost.org
>>> To: boost@lists.boost.org
>>>
>>> Dear Developers,
>>>
>>> The formal review of the Boost.Polygon library by Lucanus Simonson
>>> starts today, August 24, 2009 and will finish September 2, 2009.
>>>
>>> I really hope to see your vote and your participation in the
>>> discussions on
>>> the Boost mailing lists!
>>>
>>> ---------------------------------------------------
>>>
>>> About the library:
>>>
>>> The boost polygon library provides algorithms focused on manipulating
>>> planar
>>> polygon geometry data.  Specific algorithms provided are the polygon 
>>> set
>>> operations (intersection, union, difference, disjoint-union) and 
>>> related
>>> algorithms such as polygon connectivity graph extraction, offsetting 
>>> and
>>> map-overlay.  These so-called Boolean algorithms are of significant
>>> interest in
>>> GIS (Geospatial Information Systems), VLSI CAD as well al other fields
>>> of CAD,
>>> and many more application areas, and providing them is the primary
>>> focus of this
>>> library.  The polygon library is not intended to cover all of
>>> computational
>>> geometry in its scope, and provides a set of capabilities for working
>>> with
>>> coordinates, points, intervals and rectangles that are needed to 
>>> support
>>> implementing and interacting with polygon data structures and
>>> algorithms.
>>> Specifically, 3d and non-Cartesian/non-planar geometry is outside of
>>> the scope
>>> of the polygon library
>>>
>>> The design philosophy behind the polygon library was to create an API
>>> for
>>> invoking the library algorithms it provides on user geometry data
>>> types that is
>>> maximally intuitive, minimally error-prone and easy to integrate into
>>> pre-existing applications.  C++-concepts based template 
>>> meta-programming
>>> combined with generic operator overloading meets these design goals
>>> without
>>> sacrificing the runtime or memory efficiency of the underlying
>>> algorithms.  This
>>> API makes the following code snippet that operates on non-library
>>> geometry types
>>> possible:
>>>
>>> void foo(list<CPolygon>& result, const list<CPolygon>& a,
>>>         const list<CPolygon>& b, int deflateValue) {
>>>     CBoundingBox domainExtent;
>>>     using namespace boost::polygon::operators;
>>>     boost::polygon::extents(domainExtent, a);
>>>     result += (b & domainExtent) ^ (a - deflateValue);
>>> }
>>>
>>> The source is available at
>>>
>>> http://svn.boost.org/svn/boost/sandbox/gtl/boost/polygon/
>>>
>>> And the documentation is at
>>>
>>> http://svn.boost.org/svn/boost/sandbox/gtl/doc/index.htm
>>>
>>> ---------------------------------------------------
>>>
>>> Please always state in your review, whether you think the library
>>> should be
>>> accepted as a Boost library!
>>>
>>> Additionally please consider giving feedback on the following general
>>> topics:
>>>
>>> - What is your evaluation of the design?
>>> - What is your evaluation of the implementation?
>>> - What is your evaluation of the documentation?
>>> - What is your evaluation of the potential usefulness of the library?
>>> - Did you try to use the library?  With what compiler?  Did you have 
>>> any
>>> problems?
>>> - How much effort did you put into your evaluation? A glance? A quick
>>> reading? In-depth study?
>>> - Are you knowledgeable about the problem domain?
>>>
>>>
>>> Best Regards
>>>
>>> Fernando Cacciola
>>> Review Manager
>>>
>>>
>>>
>>> _______________________________________________
>>> Unsubscribe & other changes: 
>>> http://lists.boost.org/mailman/listinfo.cgi/boost
>>> _______________________________________________
>>> Boost-users mailing list
>>> Boost-users@lists.boost.org
>>> http://lists.boost.org/mailman/listinfo.cgi/boost-users
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel@lists.osgeo.org
>>> http://lists.osgeo.org/mailman/listinfo/geos-devel
>>>
>>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From hartmut.kaiser at gmail.com  Tue Aug 25 18:00:41 2009
From: hartmut.kaiser at gmail.com (Hartmut Kaiser)
Date: Tue Aug 25 18:09:21 2009
Subject: [geos-devel] [Fwd: [Boost-users] [boost] Formal
	Review:	Boost.Polygon starts today August 24, 2009]
In-Reply-To: <4A941988.4070701@refractions.net>
References: <4A93E39A.1090302@swoodbridge.com>
	<4A941988.4070701@refractions.net>
Message-ID: <4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>

> Interesting and ambitious project.
> 
> With the caveat that I've really only skimmed the documentation and
> have
> not done any actual experimentation with the library, here's my
> perspective on it's applicability to PostGIS & GEOS:
> 
> - The API seems likely to be quite complex, since it dives headfirst
> into the C++ template/traits pool.  This seems to be de rigeur for any
> serious C++ library these days, but to my mind this is orthogonal to
> the
> requirements of PostGIS and indeed a lot of geometry processing.
> - The library is apparently concerned only with polygon operations,
> whereas GEOS and PostGIS provide the full SFS geometry model
> - As I read it the library as it ships uses 32-bit integers for
> computation.  In my experience this is not enough precision for general
> geospatial processing.  They do say that it can be configured/enhanced
> to allow 64-bit processing (but not floating-point, it looks like).  It
> would be work to develop this and test it, however
> - It doesn't look like predicates are provided
> - They don't do any performance comparisons against GEOS.  That's too
> bad - it would be nice to see how it stacks up.
> - They seem to be quite concerned with providing code for handling
> rectilinear and "45-degree" polygons.  It looks like some operations
> might be restricted to these kinds of geometries (eg buffering?).  Not
> sure what their use case is, but this doesn't occur that often in
> geospatial data.
> 
> The coverage handling aspect could be interesting, but I don't see much
> reference to it in the documentation.  In any case, the really hard
> part
> about coverage processing in a database is scaling to process datasets
> which exceed main memory.  Some recent experimentation has convinced me
> that sweep-line is a good paradigm for tackling this problem, but this
> still requires an algorithms which is explicitly designed to process
> out
> of external memory.
> 
> IMO the things that matter most to the PostGIS/GEOS community are
> peformance, robustness, and ease of use.  It would be really nice to
> see
> some performance comparisons between Boost.Polygon, GEOS and JTS on
> large geometries and datasets.  If BP proved to be much faster and/or
> more robust, then it might indicate that they have chosen a better
> approach to the core problem of evaluating polygon overlays.  Even
> then,
> however, there is the question of the complexity of using two large
> APIs  together.   There would be some  serious work involved in
> providing a higher-level facade API to enable using selected components
> of both APIs in a transparent fashion.

FWIW, there will be a second Boost library review soon: GGL (Generic
Geometry Library, here: http://trac.osgeo.org/ggl/), which is yet another
project currently hosted by OSGEO. GGL is much larger than BP, more similar
to GEOS (full SFS geometry, etc.). The comparing measurement I saw tend to
show GGL being even than everything else, for instance:

100 points per ellipse, with area check:
-> geos:     resulting area: 69.68616316800, time:  13.641 seconds
-> ggl:      resulting area: 69.68616316800, time:   1.156 seconds
-> gpc:      resulting area: 69.68616316800, time:   9.297 seconds
-> polygon:  resulting area: 69.68616202400, time: 108.563 seconds
-> terralib: resulting area: 69.68616316800, time:   4.672 seconds

These results are colored by the check of the area. Checking without gives:

100 points per ellipse:
-> geos time:     13.437 seconds
-> ggl time:       1.140 seconds
-> gpc time:       9.047 seconds
-> polygon time:  38.688 seconds
-> terralib time:  4.609 seconds

Here is the description of the measurements as posted by Barend on the GGL
list: 

<quote>Testing is done with the (freely available) US Counties shapefile.
Each polygon (without holes because not every library can handle them) is
intersected with ellipses, with the axes 110% of each polygons bounding box.
We can vary the number of points in the ellipse to test scalability. All
tests are done using GCC -O3, and using double coordinates (GTL mapped to
integer, the mapping is done outside the measurements).</quote>

And another set of results:

10 points per ellipse:
-> geos time:    14.063 seconds
-> ggl time:      1.062 seconds
-> gpc time:      8.484 seconds
-> polygon time: 37.469 seconds
-> terralib time: 5.281 seconds

1000 points per ellipse:
-> geos time:    14.703 seconds
-> ggl time:      0.953 seconds
-> gpc time:     14.000 seconds
-> polygon time: 59.171 seconds
-> terralib time: 7.781 seconds

10000 points per ellipse:
-> geos time:    30.016 seconds
-> ggl time:      3.671 seconds
-> gpc time:     74.641 seconds
-> polygon time:259.016 seconds
-> terralib time:44.750 seconds

Regards Hartmut

> HTH - Martin
> 
> Stephen Woodbridge wrote:
> > Hi Devs,
> >
> > I saw this this morning and thought it might be of interest to the
> > postGIS and GEOS teams. What caught my eye was the connection to
> > Graphs which implies to me topology in this case. This might give us
> > the tools needed to handle polygon coverages and do things like
> > simplify a coverage while maintaining topology of the edges and and
> > common edges between topologically connected polygons. I'm only
> > guessing al this from the write up below but it sounds promising.
> >
> > Maybe someone with more technical guts knowledge can review this for
> > its potential value to GEOS and/or PostGIS.
> >
> > ATB,
> >   -Steve
> >
> > -------- Original Message --------
> > Subject: [Boost-users] [boost] Formal Review: Boost.Polygon starts
> > today    August 24, 2009
> > Resent-Date: Tue, 25 Aug 2009 07:43:06 -0400
> > Resent-From: Ronald Garcia <garcia@osl.iu.edu>
> > Resent-To: boost-users@lists.boost.org, boost-
> announce@lists.boost.org
> > Date: Mon, 24 Aug 2009 17:36:56 -0300
> > From: Fernando Cacciola <fernando.cacciola@gmail.com>
> > Reply-To: boost-users@lists.boost.org
> > To: boost@lists.boost.org
> >
> > Dear Developers,
> >
> > The formal review of the Boost.Polygon library by Lucanus Simonson
> > starts today, August 24, 2009 and will finish September 2, 2009.
> >
> > I really hope to see your vote and your participation in the
> > discussions on
> > the Boost mailing lists!
> >
> > ---------------------------------------------------
> >
> > About the library:
> >
> > The boost polygon library provides algorithms focused on manipulating
> > planar
> > polygon geometry data.  Specific algorithms provided are the polygon
> set
> > operations (intersection, union, difference, disjoint-union) and
> related
> > algorithms such as polygon connectivity graph extraction, offsetting
> and
> > map-overlay.  These so-called Boolean algorithms are of significant
> > interest in
> > GIS (Geospatial Information Systems), VLSI CAD as well al other
> fields
> > of CAD,
> > and many more application areas, and providing them is the primary
> > focus of this
> > library.  The polygon library is not intended to cover all of
> > computational
> > geometry in its scope, and provides a set of capabilities for working
> > with
> > coordinates, points, intervals and rectangles that are needed to
> support
> > implementing and interacting with polygon data structures and
> > algorithms.
> > Specifically, 3d and non-Cartesian/non-planar geometry is outside of
> > the scope
> > of the polygon library
> >
> > The design philosophy behind the polygon library was to create an API
> > for
> > invoking the library algorithms it provides on user geometry data
> > types that is
> > maximally intuitive, minimally error-prone and easy to integrate into
> > pre-existing applications.  C++-concepts based template meta-
> programming
> > combined with generic operator overloading meets these design goals
> > without
> > sacrificing the runtime or memory efficiency of the underlying
> > algorithms.  This
> > API makes the following code snippet that operates on non-library
> > geometry types
> > possible:
> >
> > void foo(list<CPolygon>& result, const list<CPolygon>& a,
> >         const list<CPolygon>& b, int deflateValue) {
> >     CBoundingBox domainExtent;
> >     using namespace boost::polygon::operators;
> >     boost::polygon::extents(domainExtent, a);
> >     result += (b & domainExtent) ^ (a - deflateValue);
> > }
> >
> > The source is available at
> >
> > http://svn.boost.org/svn/boost/sandbox/gtl/boost/polygon/
> >
> > And the documentation is at
> >
> > http://svn.boost.org/svn/boost/sandbox/gtl/doc/index.htm
> >
> > ---------------------------------------------------
> >
> > Please always state in your review, whether you think the library
> > should be
> > accepted as a Boost library!
> >
> > Additionally please consider giving feedback on the following general
> > topics:
> >
> > - What is your evaluation of the design?
> > - What is your evaluation of the implementation?
> > - What is your evaluation of the documentation?
> > - What is your evaluation of the potential usefulness of the library?
> > - Did you try to use the library?  With what compiler?  Did you have
> any
> > problems?
> > - How much effort did you put into your evaluation? A glance? A quick
> > reading? In-depth study?
> > - Are you knowledgeable about the problem domain?
> >
> >
> > Best Regards
> >
> > Fernando Cacciola
> > Review Manager
> >
> >
> >
> > _______________________________________________
> > Unsubscribe & other changes:
> > http://lists.boost.org/mailman/listinfo.cgi/boost
> > _______________________________________________
> > Boost-users mailing list
> > Boost-users@lists.boost.org
> > http://lists.boost.org/mailman/listinfo.cgi/boost-users
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> 
> --
> Martin Davis
> Senior Technical Architect
> Refractions Research, Inc.
> (250) 383-3022
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel

From geos-trac at osgeo.org  Thu Aug 27 20:22:36 2009
From: geos-trac at osgeo.org (GEOS)
Date: Thu Aug 27 20:22:38 2009
Subject: [geos-devel] [GEOS] #287: Shouldn't GEOS 3.1 branch be bumped to
	3.1.2
Message-ID: <044.f9261f7ac23ee8545825bf400eeb5957@osgeo.org>

#287: Shouldn't GEOS 3.1 branch be bumped to 3.1.2
------------------------+---------------------------------------------------
 Reporter:  robe        |       Owner:  geos-devel@lists.osgeo.org
     Type:  defect      |      Status:  new                       
 Priority:  trivial     |   Milestone:  3.1.2                     
Component:  Default     |     Version:  3.1.1                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I'm almost ashamed to be complaining about this, but it just occurred to
 me that the last release of geos for 3.1 we did was for 3.1.1 on June 15th
 2009.

 When building the PostGIS 1.4.1SVN binaries for windows, it occurred to me
 that my GEOS is still reading 3.1.1 and I'm thought I was using 3.1
 branch.

 Shouldn't we change this to 3.1.2 or better yet 3.1.2SVN to minimize on
 confusion with the actual last released branch version?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/287>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).
From Barend.Gehrels at geodan.nl  Fri Aug 28 07:31:05 2009
From: Barend.Gehrels at geodan.nl (Barend Gehrels)
Date: Fri Aug 28 07:35:40 2009
Subject: [geos-devel] [Fwd: [Boost-users] [boost]
	Formal	Review:	Boost.Polygon starts today August 24, 2009]
In-Reply-To: <4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>
References: <4A93E39A.1090302@swoodbridge.com>	<4A941988.4070701@refractions.net>
	<4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>
Message-ID: <4A97BFF9.90404@geodan.nl>



Hartmut Kaiser wrote:
> FWIW, there will be a second Boost library review soon: GGL (Generic
> Geometry Library, here: http://trac.osgeo.org/ggl/), which is yet another
> project currently hosted by OSGEO. GGL is much larger than BP, more similar
> to GEOS (full SFS geometry, etc.). The comparing measurement I saw tend to
> show GGL being even than everything else, for instance:
>
>> 100 points per ellipse, with area check:
>> -> geos:     resulting area: 69.68616316800, time:  13.641 seconds
>> -> ggl:      resulting area: 69.68616316800, time:   1.156 seconds
>> -> gpc:      resulting area: 69.68616316800, time:   9.297 seconds
>> -> polygon:  resulting area: 69.68616202400, time: 108.563 seconds
>> -> terralib: resulting area: 69.68616316800, time:   4.672 seconds
The figures which were listed here were actually not yet sent to any 
list before, but were intended to. Since yesterday they are in the GGL 
Wiki on the performance page: http://trac.osgeo.org/ggl/wiki/Performance

Regards, Barend Gehrels



From doublebyte at gmail.com  Sat Aug 29 11:16:23 2009
From: doublebyte at gmail.com (Jo)
Date: Sat Aug 29 11:16:26 2009
Subject: [geos-devel] Re: Computing Radials inside a Polygon
In-Reply-To: <23ab5f0a0908231018q78a9b24l9b964f06d100bbfd@mail.gmail.com>
References: <23ab5f0a0908231018q78a9b24l9b964f06d100bbfd@mail.gmail.com>
Message-ID: <23ab5f0a0908290816j66928c44y58de481b26525657@mail.gmail.com>

Hi Jo,

I think that each rotate angles should be calculated more simply.
(I think rotation matrix is valid when centroid is equal to origine(0, 0).)

The following code is pseudo code. (Sorry I haven't OGR environment...)

===================================
// get minCircle radius. (If radius is not calculated yet)
double radius=Distance(&centroid, &startPt); // I don't know that Distance
function is implemented in OGR...
// get start angle.
double startAngle=atan2(&startPt.getY()-&centroid.getY(),
&startPt.getX()-&centroid.getX());

for (size_t i=0; i <n; ++i){
       OGRLineString dLine;
       dLine.addPoint(&centroid);

       double rx=centroid.getX() + radius*cos(startAngle+fangle*i);
       double ry=centroid.getY() + radius*sin(startAngle+fangle*i);
        :
}
===================================

Regards,

Sanak.

Hi Sanak,
First of all, thanks for your reply!
I think I didn't explain myself clearly though...

The idea is to compute radials from the centroid of the polygon, to
its external ring, at equal intervals. Something like this:

http://ladybug.no-ip.org/files/radials_final.png

I had the idea of starting with a vector that starts in the centroid
and ends up in the external ring (at any point), and therefore its
length equals the radius; to make things simple I choose a point that
is in the same x-alignment as the centroid, and so the start angle in
your code would be null. My start vector is something like this:

http://ladybug.no-ip.org/files/start.png

Than my idea, was to rotate this vector around the centroid, at a
constant angle, and get the radials.
Lets assume for simplicity that the angle is 90 degrees (PI/2 radians)
and therefore I want to end up with four radials.
As I compute the new locations of the rotated endpoint of the vector,
I store this point on a stl container, so that in the end I can loop
through all these locations and generate my vectors.
Here is a GEOS version of my code:

	//////////GEOS VERSION /////
	std::vector<geos::geom::Point*> pts;

	geos::geom::GeometryFactory factory;
	geos::geom::Coordinate coordC(ogrCentroid.getX(),ogrCentroid.getY());

	//create centroid from given point
	geos::geom::Point* centroid = factory.createPoint(coordC);

	//create start pt as any point on the perimeter (for instance, a
point aligned in x with the centroid)
	geos::geom::Coordinate coordS(ogrCentroid.getX()+radius,ogrCentroid.getY());		
	geos::geom::Point* startPt = factory.createPoint(coordS);

	pts.push_back(startPt);

	//nr radials=4; angle=90 deg= PI/2
	double fangle=PI/2.0;

	for (size_t i=0; i <4; ++i){

		double x=pts.back()->getX();
		double y=pts.back()->getY();

		double rx=x*cos(fangle)-y*sin(fangle);
		double ry=x*sin(fangle)+y*cos(fangle);

		geos::geom::Coordinate coords(x+rx,y+ry);		
		geos::geom::Point* aPoint = factory.createPoint(coords);
	
		pts.push_back(aPoint);	
	}

Let me mention that this code is *not* doing what I want, since:
- I am getting the wrong angle between the start point and the first
iteration point;
- the angles do not appear to be 90 degrees;
- I think also the angles are not constant;

Here is a screenshot of my output:

http://ladybug.no-ip.org/files/output.png

So I guess there must be some assumption (or more than one, actually)
that is wrong in my code :-)
Again, I would be very grateful for any observations or suggestions...
thanks in advance for your help!

                                       cheers,
                                                     Jo
From doublebyte at gmail.com  Sat Aug 29 17:53:41 2009
From: doublebyte at gmail.com (Jo)
Date: Sat Aug 29 17:53:43 2009
Subject: [geos-devel] Re: Computing Radials inside a Polygon
Message-ID: <23ab5f0a0908291453x59cffce7t38c069d85667d356@mail.gmail.com>

Thinking better, I could see what I was doing wrong.
I was rotating a point around (0,0), rather than rotating it around my
origin (the centroid). Therefore, I had to add the difference between
the point and centroid coordinates to the sin and cosine terms:
	
		double rx=centroid->getX()+cos(fangle)*(x-centroid->getX())-sin(fangle)*(y-centroid->getY());
		double ry=centroid->getY()+sin(fangle)*(x-centroid->getX())+cos(fangle)*(y-centroid->getY());

And calling consecutively this function, gives me the equally spaced
radials from a centroid of a polygon to its external ring; in this
example, using a 45 degrees angle:

http://ladybug.no-ip.org/files/radials_calc.png

                                   cheers,
                                              Jo


2009/8/29  <geos-devel-request@lists.osgeo.org>:
> Send geos-devel mailing list submissions to
> ? ? ? ?geos-devel@lists.osgeo.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> ? ? ? ?http://lists.osgeo.org/mailman/listinfo/geos-devel
> or, via email, send a message with subject or body 'help' to
> ? ? ? ?geos-devel-request@lists.osgeo.org
>
> You can reach the person managing the list at
> ? ? ? ?geos-devel-owner@lists.osgeo.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of geos-devel digest..."
>
>
> Today's Topics:
>
> ? 1. Re: Computing Radials inside a Polygon (Jo)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Sat, 29 Aug 2009 16:16:23 +0100
> From: Jo <doublebyte@gmail.com>
> Subject: [geos-devel] Re: Computing Radials inside a Polygon
> To: geos-devel@lists.osgeo.org
> Message-ID:
> ? ? ? ?<23ab5f0a0908290816j66928c44y58de481b26525657@mail.gmail.com>
> Content-Type: text/plain; charset=ISO-8859-1
>
> Hi Jo,
>
> I think that each rotate angles should be calculated more simply.
> (I think rotation matrix is valid when centroid is equal to origine(0, 0).)
>
> The following code is pseudo code. (Sorry I haven't OGR environment...)
>
> ===================================
> // get minCircle radius. (If radius is not calculated yet)
> double radius=Distance(&centroid, &startPt); // I don't know that Distance
> function is implemented in OGR...
> // get start angle.
> double startAngle=atan2(&startPt.getY()-&centroid.getY(),
> &startPt.getX()-&centroid.getX());
>
> for (size_t i=0; i <n; ++i){
> ? ? ? OGRLineString dLine;
> ? ? ? dLine.addPoint(&centroid);
>
> ? ? ? double rx=centroid.getX() + radius*cos(startAngle+fangle*i);
> ? ? ? double ry=centroid.getY() + radius*sin(startAngle+fangle*i);
> ? ? ? ?:
> }
> ===================================
>
> Regards,
>
> Sanak.
>
> Hi Sanak,
> First of all, thanks for your reply!
> I think I didn't explain myself clearly though...
>
> The idea is to compute radials from the centroid of the polygon, to
> its external ring, at equal intervals. Something like this:
>
> http://ladybug.no-ip.org/files/radials_final.png
>
> I had the idea of starting with a vector that starts in the centroid
> and ends up in the external ring (at any point), and therefore its
> length equals the radius; to make things simple I choose a point that
> is in the same x-alignment as the centroid, and so the start angle in
> your code would be null. My start vector is something like this:
>
> http://ladybug.no-ip.org/files/start.png
>
> Than my idea, was to rotate this vector around the centroid, at a
> constant angle, and get the radials.
> Lets assume for simplicity that the angle is 90 degrees (PI/2 radians)
> and therefore I want to end up with four radials.
> As I compute the new locations of the rotated endpoint of the vector,
> I store this point on a stl container, so that in the end I can loop
> through all these locations and generate my vectors.
> Here is a GEOS version of my code:
>
> ? ? ? ?//////////GEOS VERSION /////
> ? ? ? ?std::vector<geos::geom::Point*> pts;
>
> ? ? ? ?geos::geom::GeometryFactory factory;
> ? ? ? ?geos::geom::Coordinate coordC(ogrCentroid.getX(),ogrCentroid.getY());
>
> ? ? ? ?//create centroid from given point
> ? ? ? ?geos::geom::Point* centroid = factory.createPoint(coordC);
>
> ? ? ? ?//create start pt as any point on the perimeter (for instance, a
> point aligned in x with the centroid)
> ? ? ? ?geos::geom::Coordinate coordS(ogrCentroid.getX()+radius,ogrCentroid.getY());
> ? ? ? ?geos::geom::Point* startPt = factory.createPoint(coordS);
>
> ? ? ? ?pts.push_back(startPt);
>
> ? ? ? ?//nr radials=4; angle=90 deg= PI/2
> ? ? ? ?double fangle=PI/2.0;
>
> ? ? ? ?for (size_t i=0; i <4; ++i){
>
> ? ? ? ? ? ? ? ?double x=pts.back()->getX();
> ? ? ? ? ? ? ? ?double y=pts.back()->getY();
>
> ? ? ? ? ? ? ? ?double rx=x*cos(fangle)-y*sin(fangle);
> ? ? ? ? ? ? ? ?double ry=x*sin(fangle)+y*cos(fangle);
>
> ? ? ? ? ? ? ? ?geos::geom::Coordinate coords(x+rx,y+ry);
> ? ? ? ? ? ? ? ?geos::geom::Point* aPoint = factory.createPoint(coords);
>
> ? ? ? ? ? ? ? ?pts.push_back(aPoint);
> ? ? ? ?}
>
> Let me mention that this code is *not* doing what I want, since:
> - I am getting the wrong angle between the start point and the first
> iteration point;
> - the angles do not appear to be 90 degrees;
> - I think also the angles are not constant;
>
> Here is a screenshot of my output:
>
> http://ladybug.no-ip.org/files/output.png
>
> So I guess there must be some assumption (or more than one, actually)
> that is wrong in my code :-)
> Again, I would be very grateful for any observations or suggestions...
> thanks in advance for your help!
>
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? cheers,
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Jo
>
>
> ------------------------------
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
> End of geos-devel Digest, Vol 82, Issue 25
> ******************************************
>



-- 
"#define QUESTION ((bb) || !(bb))"  (Shakespeare)
From geosanak at gmail.com  Sat Aug 29 23:39:29 2009
From: geosanak at gmail.com (Sanak Goe)
Date: Sat Aug 29 23:39:32 2009
Subject: [geos-devel] Re: Computing Radials inside a Polygon
In-Reply-To: <23ab5f0a0908291453x59cffce7t38c069d85667d356@mail.gmail.com>
References: <23ab5f0a0908291453x59cffce7t38c069d85667d356@mail.gmail.com>
Message-ID: <5f9be0a0908292039r77162044ob1d01b2599ed9278@mail.gmail.com>

Hi Jo,

Thanks for your reply.

Ok, your last image seems to be no problem.

Regards,

Sanak.

2009/8/30 Jo <doublebyte@gmail.com>

> Thinking better, I could see what I was doing wrong.
> I was rotating a point around (0,0), rather than rotating it around my
> origin (the centroid). Therefore, I had to add the difference between
> the point and centroid coordinates to the sin and cosine terms:
>
>                double
> rx=centroid->getX()+cos(fangle)*(x-centroid->getX())-sin(fangle)*(y-centroid->getY());
>                double
> ry=centroid->getY()+sin(fangle)*(x-centroid->getX())+cos(fangle)*(y-centroid->getY());
>
> And calling consecutively this function, gives me the equally spaced
> radials from a centroid of a polygon to its external ring; in this
> example, using a 45 degrees angle:
>
> http://ladybug.no-ip.org/files/radials_calc.png
>
>                                   cheers,
>                                              Jo
>
>
> 2009/8/29  <geos-devel-request@lists.osgeo.org>:
> > Send geos-devel mailing list submissions to
> >        geos-devel@lists.osgeo.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >        http://lists.osgeo.org/mailman/listinfo/geos-devel
> > or, via email, send a message with subject or body 'help' to
> >        geos-devel-request@lists.osgeo.org
> >
> > You can reach the person managing the list at
> >        geos-devel-owner@lists.osgeo.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of geos-devel digest..."
> >
> >
> > Today's Topics:
> >
> >   1. Re: Computing Radials inside a Polygon (Jo)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Sat, 29 Aug 2009 16:16:23 +0100
> > From: Jo <doublebyte@gmail.com>
> > Subject: [geos-devel] Re: Computing Radials inside a Polygon
> > To: geos-devel@lists.osgeo.org
> > Message-ID:
> >        <23ab5f0a0908290816j66928c44y58de481b26525657@mail.gmail.com>
> > Content-Type: text/plain; charset=ISO-8859-1
> >
> > Hi Jo,
> >
> > I think that each rotate angles should be calculated more simply.
> > (I think rotation matrix is valid when centroid is equal to origine(0,
> 0).)
> >
> > The following code is pseudo code. (Sorry I haven't OGR environment...)
> >
> > ===================================
> > // get minCircle radius. (If radius is not calculated yet)
> > double radius=Distance(&centroid, &startPt); // I don't know that
> Distance
> > function is implemented in OGR...
> > // get start angle.
> > double startAngle=atan2(&startPt.getY()-&centroid.getY(),
> > &startPt.getX()-&centroid.getX());
> >
> > for (size_t i=0; i <n; ++i){
> >       OGRLineString dLine;
> >       dLine.addPoint(&centroid);
> >
> >       double rx=centroid.getX() + radius*cos(startAngle+fangle*i);
> >       double ry=centroid.getY() + radius*sin(startAngle+fangle*i);
> >        :
> > }
> > ===================================
> >
> > Regards,
> >
> > Sanak.
> >
> > Hi Sanak,
> > First of all, thanks for your reply!
> > I think I didn't explain myself clearly though...
> >
> > The idea is to compute radials from the centroid of the polygon, to
> > its external ring, at equal intervals. Something like this:
> >
> > http://ladybug.no-ip.org/files/radials_final.png
> >
> > I had the idea of starting with a vector that starts in the centroid
> > and ends up in the external ring (at any point), and therefore its
> > length equals the radius; to make things simple I choose a point that
> > is in the same x-alignment as the centroid, and so the start angle in
> > your code would be null. My start vector is something like this:
> >
> > http://ladybug.no-ip.org/files/start.png
> >
> > Than my idea, was to rotate this vector around the centroid, at a
> > constant angle, and get the radials.
> > Lets assume for simplicity that the angle is 90 degrees (PI/2 radians)
> > and therefore I want to end up with four radials.
> > As I compute the new locations of the rotated endpoint of the vector,
> > I store this point on a stl container, so that in the end I can loop
> > through all these locations and generate my vectors.
> > Here is a GEOS version of my code:
> >
> >        //////////GEOS VERSION /////
> >        std::vector<geos::geom::Point*> pts;
> >
> >        geos::geom::GeometryFactory factory;
> >        geos::geom::Coordinate
> coordC(ogrCentroid.getX(),ogrCentroid.getY());
> >
> >        //create centroid from given point
> >        geos::geom::Point* centroid = factory.createPoint(coordC);
> >
> >        //create start pt as any point on the perimeter (for instance, a
> > point aligned in x with the centroid)
> >        geos::geom::Coordinate
> coordS(ogrCentroid.getX()+radius,ogrCentroid.getY());
> >        geos::geom::Point* startPt = factory.createPoint(coordS);
> >
> >        pts.push_back(startPt);
> >
> >        //nr radials=4; angle=90 deg= PI/2
> >        double fangle=PI/2.0;
> >
> >        for (size_t i=0; i <4; ++i){
> >
> >                double x=pts.back()->getX();
> >                double y=pts.back()->getY();
> >
> >                double rx=x*cos(fangle)-y*sin(fangle);
> >                double ry=x*sin(fangle)+y*cos(fangle);
> >
> >                geos::geom::Coordinate coords(x+rx,y+ry);
> >                geos::geom::Point* aPoint = factory.createPoint(coords);
> >
> >                pts.push_back(aPoint);
> >        }
> >
> > Let me mention that this code is *not* doing what I want, since:
> > - I am getting the wrong angle between the start point and the first
> > iteration point;
> > - the angles do not appear to be 90 degrees;
> > - I think also the angles are not constant;
> >
> > Here is a screenshot of my output:
> >
> > http://ladybug.no-ip.org/files/output.png
> >
> > So I guess there must be some assumption (or more than one, actually)
> > that is wrong in my code :-)
> > Again, I would be very grateful for any observations or suggestions...
> > thanks in advance for your help!
> >
> >                                       cheers,
> >                                                     Jo
> >
> >
> > ------------------------------
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@lists.osgeo.org
> > http://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > End of geos-devel Digest, Vol 82, Issue 25
> > ******************************************
> >
>
>
>
> --
> "#define QUESTION ((bb) || !(bb))"  (Shakespeare)
> _______________________________________________
> geos-devel mailing list
> geos-devel@lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20090830/7023b628/attachment.html
From doublebyte at gmail.com  Sun Aug 30 11:50:54 2009
From: doublebyte at gmail.com (Jo)
Date: Sun Aug 30 11:50:56 2009
Subject: [geos-devel] Mailing list
Message-ID: <23ab5f0a0908300850v22b43c76l4f89c4dd1e6aefdd@mail.gmail.com>

I cannot avoid noticing that the mailing list seems to be having a
delay in posting the mails...
I sent an email yesterday night and it still has not arrived (I think
this delay has been happening for a while)

                      cheers,
                                    Jo
From mbdavis at refractions.net  Mon Aug 31 13:18:13 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Mon Aug 31 13:15:45 2009
Subject: [geos-devel] [Fwd: [Boost-users] [boost]
	Formal	Review:	Boost.Polygon starts today August 24, 2009]
In-Reply-To: <4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>
References: <4A93E39A.1090302@swoodbridge.com>	<4A941988.4070701@refractions.net>
	<4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>
Message-ID: <4A9C05D5.5070906@refractions.net>

Hmmm... GEOS comes off rather badly compared to GGL.  Is that because of 
memory access issues?  Or perhaps the fact that less code is inlined?

Hartmut Kaiser wrote:
> FWIW, there will be a second Boost library review soon: GGL (Generic
> Geometry Library, here: http://trac.osgeo.org/ggl/), which is yet another
> project currently hosted by OSGEO. GGL is much larger than BP, more similar
> to GEOS (full SFS geometry, etc.). The comparing measurement I saw tend to
> show GGL being even than everything else, for instance:
>
> 100 points per ellipse, with area check:
> -> geos:     resulting area: 69.68616316800, time:  13.641 seconds
> -> ggl:      resulting area: 69.68616316800, time:   1.156 seconds
> -> gpc:      resulting area: 69.68616316800, time:   9.297 seconds
> -> polygon:  resulting area: 69.68616202400, time: 108.563 seconds
> -> terralib: resulting area: 69.68616316800, time:   4.672 seconds
>
> These results are colored by the check of the area. Checking without gives:
>
> 100 points per ellipse:
> -> geos time:     13.437 seconds
> -> ggl time:       1.140 seconds
> -> gpc time:       9.047 seconds
> -> polygon time:  38.688 seconds
> -> terralib time:  4.609 seconds
>
>   

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From mateusz at loskot.net  Mon Aug 31 15:09:51 2009
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon Aug 31 15:10:11 2009
Subject: [geos-devel] [Fwd: [Boost-users]
	[boost]	Formal	Review:	Boost.Polygon starts today August 24, 2009]
In-Reply-To: <4A9C05D5.5070906@refractions.net>
References: <4A93E39A.1090302@swoodbridge.com>	<4A941988.4070701@refractions.net>	<4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>
	<4A9C05D5.5070906@refractions.net>
Message-ID: <4A9C1FFF.1090701@loskot.net>

Martin Davis wrote:
> Hmmm... GEOS comes off rather badly compared to GGL.  Is that because
>  of memory access issues?  Or perhaps the fact that less code is 
> inlined?

It's hard to judge, but I'm quite sure inlining is only a small and
minor optimisation available.
GEOS and GGL follow completely different programming paradigms.
GGL is strongly based on static polymorphism resolved and calculated in
compile-time. This increases changes that compilers will apply finest
possible optimisations.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net
Charter Member of OSGeo, http://osgeo.org
From mbdavis at refractions.net  Mon Aug 31 15:34:56 2009
From: mbdavis at refractions.net (Martin Davis)
Date: Mon Aug 31 15:32:28 2009
Subject: [geos-devel] [Fwd:
	[Boost-users]	[boost]	Formal	Review:	Boost.Polygon
	starts today August 24, 2009]
In-Reply-To: <4A9C1FFF.1090701@loskot.net>
References: <4A93E39A.1090302@swoodbridge.com>	<4A941988.4070701@refractions.net>	<4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>	<4A9C05D5.5070906@refractions.net>
	<4A9C1FFF.1090701@loskot.net>
Message-ID: <4A9C25E0.5040009@refractions.net>

Ok, I can see that.  So in other words, GEOS uses a dynamic coordinate 
access paradigm, which gives flexibility to access different data 
structures, but can't be optimized by the compiler?

Is this the reason for the performance difference for *all* the other 
libraries which beat it in peformance?  Or maybe some of them *don't* 
provide the dynamic data structure wrapper, and hence also can be 
optimized by the compiler (but thus they are less adaptable for use with 
external data structures).

It would be nice to have this confirmed with some detailed code 
inspection and/or profiling. 

I presume it would be a big job to convert GEOS to a template-based 
paradigm?  It's somewhat annoying that the problem of efficient memory 
access and compiler optimization is quite orthogonal to the actual 
geometric algorithms, and yet it seems difficult to express the 
algorithms in a sufficiently abstract way to allow optimizations to take 
place.  Perhaps what we need is a meta-language, in which the raw 
algorithms could be expressed and then compiled into whatever codebase 
was most efficient to execute.  Or - C++  seems incredibly powerful with 
it's templating and operator overloading - would it be possible to 
define a DSL using C++ constructs which would allow GEOS to be compiled 
more efficiently?

Martin


Mateusz Loskot wrote:
> Martin Davis wrote:
>   
>> Hmmm... GEOS comes off rather badly compared to GGL.  Is that because
>>  of memory access issues?  Or perhaps the fact that less code is 
>> inlined?
>>     
>
> It's hard to judge, but I'm quite sure inlining is only a small and
> minor optimisation available.
> GEOS and GGL follow completely different programming paradigms.
> GGL is strongly based on static polymorphism resolved and calculated in
> compile-time. This increases changes that compilers will apply finest
> possible optimisations.
>
> Best regards,
>   

-- 
Martin Davis
Senior Technical Architect
Refractions Research, Inc.
(250) 383-3022

From hartmut.kaiser at gmail.com  Mon Aug 31 19:03:45 2009
From: hartmut.kaiser at gmail.com (Hartmut Kaiser)
Date: Mon Aug 31 19:03:52 2009
Subject: [geos-devel] [Fwd:
	[Boost-users]	[boost]	Formal	Review:	Boost.Polygon starts today
	August 24, 2009]
In-Reply-To: <4A9C1FFF.1090701@loskot.net>
References: <4A93E39A.1090302@swoodbridge.com>	<4A941988.4070701@refractions.net>	<4a945f0e.19bd720a.54dc.ffffa9c0@mx.google.com>	<4A9C05D5.5070906@refractions.net>
	<4A9C1FFF.1090701@loskot.net>
Message-ID: <4a9c56d5.21d7720a.64a3.081d@mx.google.com>

> Martin Davis wrote:
> > Hmmm... GEOS comes off rather badly compared to GGL.  Is that because
> >  of memory access issues?  Or perhaps the fact that less code is
> > inlined?
> 
> It's hard to judge, but I'm quite sure inlining is only a small and
> minor optimisation available.
> GEOS and GGL follow completely different programming paradigms.
> GGL is strongly based on static polymorphism resolved and calculated in
> compile-time. This increases changes that compilers will apply finest
> possible optimisations.

>From what I've seen in GEOS and GGL, GEOS is mostly relying on dynamic
memory allocation, where GGL tries to avoid that. GEOS relies on runtime
polymorphism, where GGL relies on compile time (static polymorphism). GEOS
is built using Java-ish constructs, where GGL is build the C++ way...

All of this influences the runtime behavior, but there might be more
reasons. Please note, I didn't do any thorough analysis, all of this is just
guessing.

Regards Hartmut



