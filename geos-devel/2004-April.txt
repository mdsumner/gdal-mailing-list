From kenlord at email.com  Mon Apr  5 15:32:08 2004
From: kenlord at email.com (Ken Lord)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Compile Problem
Message-ID: <20040405193208.A8FD43740C4@ws3-2.us4.outblaze.com>


Hello List,

I am unable to compile GEOS, I am a bit of a novice and would
appreciate any help.

A short time into compiling the Hourly CVS Snapshot version of GEOS,
I get the following error message:


In file included from BasicCoordinateList.cpp:30:
../headers/geom.h:316: error: integer constant is too large for
"long" type
../headers/geom.h:585: error: integer constant is too large for
"long" type
make[2]: *** [BasicCoordinateList.lo] Error 1
make[2]: Leaving directory `/usr/src/geos-1.0/source/geom'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/usr/src/geos-1.0/source'
make: *** [all-recursive] Error 1


I have also tried the 2003/11/06 download, but it fails  when it
finds I have automake 1.7.8 instead of 1.7.3.
For this error I tried running aclocal as it states in the error
message, but then i get the following error when i Make

checking dynamic linker characteristics... GNU/Linux ld.so
./configure: line 18728: syntax error near unexpected token `long'
./configure: line 18728: `PGAC_TYPE_64BIT_INT(long int)'
make: *** [config.status] Error 2


I am running Fedora, with qt3.1, and gcc 3.3.2.

Thanks,
Ken Lord
BGC Engineering Inc.
Vancouver BC

-- 
___________________________________________________________
Sign-up for Ads Free at Mail.com
http://promo.mail.com/adsfreejump.htm


From pramsey at refractions.net  Mon Apr  5 15:49:10 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Compile Problem
In-Reply-To: <20040405193208.A8FD43740C4@ws3-2.us4.outblaze.com>
References: <20040405193208.A8FD43740C4@ws3-2.us4.outblaze.com>
Message-ID: <4071B836.90205@refractions.net>

Hi Ken,

Sorry, should have warned the list: CVS is currently broken while the 
JTS 1.4 port is applied. You will have to settle for the last numbered 
release until we get things back together.

Paul


Ken Lord wrote:

> Hello List,
> 
> I am unable to compile GEOS, I am a bit of a novice and would
> appreciate any help.
> 
> A short time into compiling the Hourly CVS Snapshot version of GEOS,
> I get the following error message:
> 
> 
> In file included from BasicCoordinateList.cpp:30:
> ../headers/geom.h:316: error: integer constant is too large for
> "long" type
> ../headers/geom.h:585: error: integer constant is too large for
> "long" type
> make[2]: *** [BasicCoordinateList.lo] Error 1
> make[2]: Leaving directory `/usr/src/geos-1.0/source/geom'
> make[1]: *** [all-recursive] Error 1
> make[1]: Leaving directory `/usr/src/geos-1.0/source'
> make: *** [all-recursive] Error 1
> 
> 
> I have also tried the 2003/11/06 download, but it fails  when it
> finds I have automake 1.7.8 instead of 1.7.3.
> For this error I tried running aclocal as it states in the error
> message, but then i get the following error when i Make
> 
> checking dynamic linker characteristics... GNU/Linux ld.so
> ./configure: line 18728: syntax error near unexpected token `long'
> ./configure: line 18728: `PGAC_TYPE_64BIT_INT(long int)'
> make: *** [config.status] Error 2
> 
> 
> I am running Fedora, with qt3.1, and gcc 3.3.2.
> 
> Thanks,
> Ken Lord
> BGC Engineering Inc.
> Vancouver BC
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_


From pramsey at refractions.net  Mon Apr  5 15:50:03 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Compile Problem
In-Reply-To: <20040405193208.A8FD43740C4@ws3-2.us4.outblaze.com>
References: <20040405193208.A8FD43740C4@ws3-2.us4.outblaze.com>
Message-ID: <4071B86B.6090506@refractions.net>

Oh, FYI, you can pull fedora RPMS from 
http://postgis.refractions.net/rpms if you like...
P

Ken Lord wrote:

> Hello List,
> 
> I am unable to compile GEOS, I am a bit of a novice and would
> appreciate any help.
> 
> A short time into compiling the Hourly CVS Snapshot version of GEOS,
> I get the following error message:
> 
> 
> In file included from BasicCoordinateList.cpp:30:
> ../headers/geom.h:316: error: integer constant is too large for
> "long" type
> ../headers/geom.h:585: error: integer constant is too large for
> "long" type
> make[2]: *** [BasicCoordinateList.lo] Error 1
> make[2]: Leaving directory `/usr/src/geos-1.0/source/geom'
> make[1]: *** [all-recursive] Error 1
> make[1]: Leaving directory `/usr/src/geos-1.0/source'
> make: *** [all-recursive] Error 1
> 
> 
> I have also tried the 2003/11/06 download, but it fails  when it
> finds I have automake 1.7.8 instead of 1.7.3.
> For this error I tried running aclocal as it states in the error
> message, but then i get the following error when i Make
> 
> checking dynamic linker characteristics... GNU/Linux ld.so
> ./configure: line 18728: syntax error near unexpected token `long'
> ./configure: line 18728: `PGAC_TYPE_64BIT_INT(long int)'
> make: *** [config.status] Error 2
> 
> 
> I am running Fedora, with qt3.1, and gcc 3.3.2.
> 
> Thanks,
> Ken Lord
> BGC Engineering Inc.
> Vancouver BC
> 


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_


From pramsey at refractions.net  Mon Apr 12 15:12:50 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Alternate CoordinateList Representations
Message-ID: <640DB313-8CB5-11D8-8D69-000393D33C2E@refractions.net>

Did we end up with a workable abstraction on top of CoordinateList?  
Dave is nearly done with the foundation work on LWGEOM, and if there is 
a performant way of hooking, for example, a WKB representation of 
geometry under GEOS, it might be worth doing.

I vaguely recall a conversation about this where we realized that most 
of operations end up creating new Coordinates anyways, cutting the legs 
out from under potential memory usage gains of holding the coordinates 
in alternative CoordinateList representations.


      Paul Ramsey
      Refractions Research
      Email: pramsey@refractions.net
      Phone: (250) 885-0632


From strk at keybit.net  Tue Apr 13 04:23:59 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] userData for Geometry
Message-ID: <20040413102359.C39945@freek.keybit.net>

The Geometry class has a void *userData that is
deleted at Geometry detetion time.
Wouldn't it be appropriate to define a class from
which userData should derive ?
The compiler warns that void * cannot be safely deleted.

--strk;

From paul at toolscenter.org  Tue Apr 13 07:20:46 2004
From: paul at toolscenter.org (Paul Selormey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] userData for Geometry
References: <20040413102359.C39945@freek.keybit.net>
Message-ID: <003a01c42149$5f75a050$030ba8c0@SWEETJESUS>

According to the JTS docs, this is to be used for coordinate reference
system,
and it most systems this could be implemented as geometry filter but the
geomety
may not be applicable to some existing systems.

I think an abstract class (interface) will do with at least a "delete"
method to let
the object handle its own deletion. On both Java and .NET which supports GC,
there was no need to consider this.

BTW, I have realized work on the JTS 1.4 updates is progressing, when is the
release date?

Best regards,
Paul.

----- Original Message ----- 
From: "strk" <strk@keybit.net>
To: "Yury A. Bychkov" <me@yury.ca>
Cc: <geos-devel@geos.refractions.net>
Sent: Tuesday, April 13, 2004 5:23 PM
Subject: [geos-devel] userData for Geometry


> The Geometry class has a void *userData that is
> deleted at Geometry detetion time.
> Wouldn't it be appropriate to define a class from
> which userData should derive ?
> The compiler warns that void * cannot be safely deleted.
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
>



From ferdinando.villa at uvm.edu  Tue Apr 13 10:03:49 2004
From: ferdinando.villa at uvm.edu (Ferdinando Villa)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] userData for Geometry
In-Reply-To: <003a01c42149$5f75a050$030ba8c0@SWEETJESUS>
References: <20040413102359.C39945@freek.keybit.net>
	<003a01c42149$5f75a050$030ba8c0@SWEETJESUS>
Message-ID: <1081865029.4452.18.camel@basil.snr.uvm.edu>

Using the void* and relying on a virtual for proper deletion is a pretty
unsafe way of doing it (not to mention ugly). A better alternative could
be something like this - a bit messier, but once done, it takes care of
it all:
	
1. define these within the class that has the void*

class _handler
{
public: 
  void* obj;
  virtual ~_handler() {}
};
	
template <typename T>
class handle : public _handler
{
public:
  handle(T* o) { obj = o; }
  handle(const handle& lh)
  { obj = lh.obj; }
  virtual ~handle() { T* t = (T*)obj; delete t; }
};

2. have a pointer to _handler initialized to zero instead of void*, and
delete it in the destructor if it's non-zero;

_handler _h

yourclass(): _h(0) ...
~yourclass() { if (_h) delete _h; }

3. add a set/get method like 

template <typename T>
void set_thingy(T* lh)
{
  _h = new handle<T>(lh); 
}

template <typename T>
T* get_thingy()
{
  return reinterpret_cast<T*>(_h->obj);
}

Even better if the _h pointer is a smart pointer, which allows the
containing object to be copied and passed around safely, but that's more
setup. You can call the set_methods as a regular method: set_thingy(new
thing) and that will create the proper class that will manage the
deletion properly. The get method requires the template parameter. Of
course this substitutes one allocation with two, so it's not really
appropriate if it has to be called continuously, but then the void*
thing isn't, either.

Ciao,
ferdinando

On Tue, 2004-04-13 at 07:20, Paul Selormey wrote:
> According to the JTS docs, this is to be used for coordinate reference
> system,
> and it most systems this could be implemented as geometry filter but the
> geomety
> may not be applicable to some existing systems.
> 
> I think an abstract class (interface) will do with at least a "delete"
> method to let
> the object handle its own deletion. On both Java and .NET which supports GC,
> there was no need to consider this.
> 
> BTW, I have realized work on the JTS 1.4 updates is progressing, when is the
> release date?
> 
> Best regards,
> Paul.
> 
> ----- Original Message ----- 
> From: "strk" <strk@keybit.net>
> To: "Yury A. Bychkov" <me@yury.ca>
> Cc: <geos-devel@geos.refractions.net>
> Sent: Tuesday, April 13, 2004 5:23 PM
> Subject: [geos-devel] userData for Geometry
> 
> 
> > The Geometry class has a void *userData that is
> > deleted at Geometry detetion time.
> > Wouldn't it be appropriate to define a class from
> > which userData should derive ?
> > The compiler warns that void * cannot be safely deleted.
> >
> > --strk;
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> >
> >
> 
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
-- 


From pramsey at refractions.net  Tue Apr 13 19:56:12 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Profiler Recommendations
Message-ID: <407C7E1C.2050904@refractions.net>

Any recommendations on a profiler (other than gproff) that we could use 
against C/C++ programs (in particular, against PgSQL)
Thanks,
Paul


From pramsey at refractions.net  Tue Apr 13 21:54:51 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] *Extractor.cpp
Message-ID: <407C99EB.8030305@refractions.net>

I found a bunch of dependencies on various "Extractors" in the 
Makefile.am, but no such files in the archive...

P

From me at yury.ca  Wed Apr 14 01:47:16 2004
From: me at yury.ca (Yury A. Bychkov)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] *Extractor.cpp
In-Reply-To: <407C99EB.8030305@refractions.net>
Message-ID: <20040414054951.4AE7442C1B0@netnation.refractions.net>

Most likely these files don't exist in the current version anymore. The only
*Extracter files that should still be there (as of JTS 1.4) are
geom/util/(LinearComponent|Point|Polygon)Extracter.cpp

Yury

> -----Original Message-----
> From: geos-devel-bounces@geos.refractions.net [mailto:geos-devel-
> bounces@geos.refractions.net] On Behalf Of Paul Ramsey
> Sent: Tuesday, April 13, 2004 6:55 PM
> To: GEOS Development List
> Subject: [geos-devel] *Extractor.cpp
> 
> I found a bunch of dependencies on various "Extractors" in the
> Makefile.am, but no such files in the archive...
> 
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


From pramsey at refractions.net  Wed Apr 14 10:33:11 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] *Extractor.cpp
In-Reply-To: <20040414054951.4AE7442C1B0@netnation.refractions.net>
Message-ID: <A7BD9B92-8E20-11D8-A3EE-000393D33C2E@refractions.net>

For some reason CVS did not populate that directory for me on my office 
machine. I just tried it here at home and it worked. :/
Sorry about that.
Paul

On Tuesday, April 13, 2004, at 10:47 PM, Yury A. Bychkov wrote:

> Most likely these files don't exist in the current version anymore. 
> The only
> *Extracter files that should still be there (as of JTS 1.4) are
> geom/util/(LinearComponent|Point|Polygon)Extracter.cpp
>
> Yury
>
>> -----Original Message-----
>> From: geos-devel-bounces@geos.refractions.net [mailto:geos-devel-
>> bounces@geos.refractions.net] On Behalf Of Paul Ramsey
>> Sent: Tuesday, April 13, 2004 6:55 PM
>> To: GEOS Development List
>> Subject: [geos-devel] *Extractor.cpp
>>
>> I found a bunch of dependencies on various "Extractors" in the
>> Makefile.am, but no such files in the archive...
>>
>> P
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel@geos.refractions.net
>> http://geos.refractions.net/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
>
      Paul Ramsey
      Refractions Research
      Email: pramsey@refractions.net
      Phone: (250) 885-0632


From pramsey at refractions.net  Wed Apr 14 11:14:28 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: GEOS build scripts
In-Reply-To: <20040414170702.B52220@freek.keybit.net>
References: <20040414083952.B49099@freek.keybit.net>
	<A97D756C-8E22-11D8-A3EE-000393D33C2E@refractions.net>
	<20040414170702.B52220@freek.keybit.net>
Message-ID: <1081955668.407d555420226@hydra>

Ah. Let's see if anyone on the list knows. It might just be that C++ takes a 
long time to compile (in general, this appears to be true, at least in GNU 
land).

Quoting strk <strk@keybit.net>:

> The build system works, this is sure.
> What I'm not sure about is the correctness of filed dependencies.
> I do not know wheter automake does take care of deps or if it is
> programmer responsibility to set them somehow.
> My problem is that the build time is very very long, and I'm
> trying to understand if this is due to 'conservative'
> dependencies, autotool paranoia, or C++ compile itself.
> 
> --strk;
> 
> 
> On Wed, Apr 14, 2004 at 07:47:33AM -0700, Paul Ramsey wrote:
> > Not sure I understand the question. If you touch code, make is required
> > to recompile it, and everything else that depends on it. So if you
> > touch everything, everything will recompile, even if there are no
> > actual changes, except to the file change date. I think the build
> > system is working OK. Having everything centralized in geom is a bit
> > fussy, but given the volume of changes (low) I think it works fine.
> >
> > Paul
> >
> > On Tuesday, April 13, 2004, at 11:39 PM, strk wrote:
> >
> > > Hi,
> > > I've seen that touching every single piece of code makes
> > > the build required to start from scratch. Is there anything
> > > I can do to make the build process quicker ?
> > > Should automake take care of real dependencies or that is
> > > a task of myself ?
> > >
> > > TIA
> > > --strk;
> > >
> > > On Tue, Apr 13, 2004 at 10:03:49AM -0400, Ferdinando Villa wrote:
> > >> Using the void* and relying on a virtual for proper deletion is a
> > >> pretty
> > >> unsafe way of doing it (not to mention ugly). A better alternative
> > >> could
> > >> be something like this - a bit messier, but once done, it takes care
> > >> of
> > >> it all:
> > >>
> > >> 1. define these within the class that has the void*
> > >>
> > >> class _handler
> > >> {
> > >> public:
> > >>   void* obj;
> > >>   virtual ~_handler() {}
> > >> };
> > >>
> > >> template <typename T>
> > >> class handle : public _handler
> > >> {
> > >> public:
> > >>   handle(T* o) { obj = o; }
> > >>   handle(const handle& lh)
> > >>   { obj = lh.obj; }
> > >>   virtual ~handle() { T* t = (T*)obj; delete t; }
> > >> };
> > >>
> > >> 2. have a pointer to _handler initialized to zero instead of void*,
> > >> and
> > >> delete it in the destructor if it's non-zero;
> > >>
> > >> _handler _h
> > >>
> > >> yourclass(): _h(0) ...
> > >> ~yourclass() { if (_h) delete _h; }
> > >>
> > >> 3. add a set/get method like
> > >>
> > >> template <typename T>
> > >> void set_thingy(T* lh)
> > >> {
> > >>   _h = new handle<T>(lh);
> > >> }
> > >>
> > >> template <typename T>
> > >> T* get_thingy()
> > >> {
> > >>   return reinterpret_cast<T*>(_h->obj);
> > >> }
> > >>
> > >> Even better if the _h pointer is a smart pointer, which allows the
> > >> containing object to be copied and passed around safely, but that's
> > >> more
> > >> setup. You can call the set_methods as a regular method:
> > >> set_thingy(new
> > >> thing) and that will create the proper class that will manage the
> > >> deletion properly. The get method requires the template parameter. Of
> > >> course this substitutes one allocation with two, so it's not really
> > >> appropriate if it has to be called continuously, but then the void*
> > >> thing isn't, either.
> > >>
> > >> Ciao,
> > >> ferdinando
> > >>
> > >> On Tue, 2004-04-13 at 07:20, Paul Selormey wrote:
> > >>> According to the JTS docs, this is to be used for coordinate
> > >>> reference
> > >>> system,
> > >>> and it most systems this could be implemented as geometry filter but
> > >>> the
> > >>> geomety
> > >>> may not be applicable to some existing systems.
> > >>>
> > >>> I think an abstract class (interface) will do with at least a
> > >>> "delete"
> > >>> method to let
> > >>> the object handle its own deletion. On both Java and .NET which
> > >>> supports GC,
> > >>> there was no need to consider this.
> > >>>
> > >>> BTW, I have realized work on the JTS 1.4 updates is progressing,
> > >>> when is the
> > >>> release date?
> > >>>
> > >>> Best regards,
> > >>> Paul.
> > >>>
> > >>> ----- Original Message -----
> > >>> From: "strk" <strk@keybit.net>
> > >>> To: "Yury A. Bychkov" <me@yury.ca>
> > >>> Cc: <geos-devel@geos.refractions.net>
> > >>> Sent: Tuesday, April 13, 2004 5:23 PM
> > >>> Subject: [geos-devel] userData for Geometry
> > >>>
> > >>>
> > >>>> The Geometry class has a void *userData that is
> > >>>> deleted at Geometry detetion time.
> > >>>> Wouldn't it be appropriate to define a class from
> > >>>> which userData should derive ?
> > >>>> The compiler warns that void * cannot be safely deleted.
> > >>>>
> > >>>> --strk;
> > >>>> _______________________________________________
> > >>>> geos-devel mailing list
> > >>>> geos-devel@geos.refractions.net
> > >>>> http://geos.refractions.net/mailman/listinfo/geos-devel
> > >>>>
> > >>>>
> > >>>
> > >>>
> > >>> _______________________________________________
> > >>> geos-devel mailing list
> > >>> geos-devel@geos.refractions.net
> > >>> http://geos.refractions.net/mailman/listinfo/geos-devel
> > >> --
> > >>
> > >> _______________________________________________
> > >> geos-devel mailing list
> > >> geos-devel@geos.refractions.net
> > >> http://geos.refractions.net/mailman/listinfo/geos-devel
> > >>
> >       Paul Ramsey
> >       Refractions Research
> >       Email: pramsey@refractions.net
> >       Phone: (250) 885-0632
> 




From strk at keybit.net  Wed Apr 14 11:30:13 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: GEOS build scripts
In-Reply-To: <20040414171923.C52220@freek.keybit.net>;
	from strk@keybit.net on Wed, Apr 14, 2004 at 05:19:23PM +0200
References: <20040414083952.B49099@freek.keybit.net>
	<A97D756C-8E22-11D8-A3EE-000393D33C2E@refractions.net>
	<20040414171923.C52220@freek.keybit.net>
Message-ID: <20040414173013.D52220@freek.keybit.net>

The disk space requirement empirically found:

When all the intermediate .o are around:
	/dev/hda3              7874560   6199124   1275420  83% /usr

After intermediate .o removal:
	/dev/hda3              7874560   2991172   4483372  41% /usr

It's a +3GB of disk space (and write) requirement !!

--strk;

On Wed, Apr 14, 2004 at 05:19:23PM +0200, strk wrote:
> Just to let you understand my problem:
> touching source/index/strtree/AbstractSTRtree.cpp
> after a complete build makes the next build take
> 4,30 minutes on a 1668.736 Mhz CPU with 775MB ram.
> 
> The link part is the longer. The linker is run for *every* object
> file creating ALL intermediate objects:
> 
>   /usr/bin/ld -r -o .libs/libgeos.la-24.o .libs/TopologyException.o .libs/libgeos.la-23.o
>   /usr/bin/ld -r -o .libs/libgeos.la-25.o .libs/Triangle.o .libs/libgeos.la-24.o
>   [..]
>   /usr/bin/ld -r -o .libs/libgeos.la-180.o .libs/UnsupportedOperationException.o .libs/libgeos.la-179.o
> 
> Then the last object is made a shared library, and the libgeos.la-#.o files
> are removed. 
> 
>   gcc -shared .libs/libgeos.la-180.o   -Wl,-soname -Wl,libgeos.so.1 -o .libs/libgeos.so.1.0.0
> 
> Finally all object files are appended (again with an 'ar' run each) to
> the libgeos.a archive:
> 
>  ar cru .libs/libgeos.a RelateNode.o
>  : .libs/libgeos.a
>  ar cru .libs/libgeos.a RelateNodeFactory.o
>  : .libs/libgeos.a
> 
> Note that the incremental object linkage requires a lot of disk
> space also, about the factorial of average object size.
> 
> The tools I'm using are:
>  ltmain.sh (GNU libtool) 1.4.2 (1.922.2.53 2001/09/11 03:18:52)
>  automake (GNU automake) 1.7.7
> 
> 
> --strk;
> 
> On Wed, Apr 14, 2004 at 07:47:33AM -0700, Paul Ramsey wrote:
> > Not sure I understand the question. If you touch code, make is required 
> > to recompile it, and everything else that depends on it. So if you 
> > touch everything, everything will recompile, even if there are no 
> > actual changes, except to the file change date. I think the build 
> > system is working OK. Having everything centralized in geom is a bit 
> > fussy, but given the volume of changes (low) I think it works fine.
> > 
> > Paul
> > 
> > On Tuesday, April 13, 2004, at 11:39 PM, strk wrote:
> > 
> > > Hi,
> > > I've seen that touching every single piece of code makes
> > > the build required to start from scratch. Is there anything
> > > I can do to make the build process quicker ?
> > > Should automake take care of real dependencies or that is
> > > a task of myself ?
> > >
> > > TIA
> > > --strk;
> > >
> > > On Tue, Apr 13, 2004 at 10:03:49AM -0400, Ferdinando Villa wrote:
> > >> Using the void* and relying on a virtual for proper deletion is a 
> > >> pretty
> > >> unsafe way of doing it (not to mention ugly). A better alternative 
> > >> could
> > >> be something like this - a bit messier, but once done, it takes care 
> > >> of
> > >> it all:
> > >> 	
> > >> 1. define these within the class that has the void*
> > >>
> > >> class _handler
> > >> {
> > >> public:
> > >>   void* obj;
> > >>   virtual ~_handler() {}
> > >> };
> > >> 	
> > >> template <typename T>
> > >> class handle : public _handler
> > >> {
> > >> public:
> > >>   handle(T* o) { obj = o; }
> > >>   handle(const handle& lh)
> > >>   { obj = lh.obj; }
> > >>   virtual ~handle() { T* t = (T*)obj; delete t; }
> > >> };
> > >>
> > >> 2. have a pointer to _handler initialized to zero instead of void*, 
> > >> and
> > >> delete it in the destructor if it's non-zero;
> > >>
> > >> _handler _h
> > >>
> > >> yourclass(): _h(0) ...
> > >> ~yourclass() { if (_h) delete _h; }
> > >>
> > >> 3. add a set/get method like
> > >>
> > >> template <typename T>
> > >> void set_thingy(T* lh)
> > >> {
> > >>   _h = new handle<T>(lh);
> > >> }
> > >>
> > >> template <typename T>
> > >> T* get_thingy()
> > >> {
> > >>   return reinterpret_cast<T*>(_h->obj);
> > >> }
> > >>
> > >> Even better if the _h pointer is a smart pointer, which allows the
> > >> containing object to be copied and passed around safely, but that's 
> > >> more
> > >> setup. You can call the set_methods as a regular method: 
> > >> set_thingy(new
> > >> thing) and that will create the proper class that will manage the
> > >> deletion properly. The get method requires the template parameter. Of
> > >> course this substitutes one allocation with two, so it's not really
> > >> appropriate if it has to be called continuously, but then the void*
> > >> thing isn't, either.
> > >>
> > >> Ciao,
> > >> ferdinando
> > >>
> > >> On Tue, 2004-04-13 at 07:20, Paul Selormey wrote:
> > >>> According to the JTS docs, this is to be used for coordinate 
> > >>> reference
> > >>> system,
> > >>> and it most systems this could be implemented as geometry filter but 
> > >>> the
> > >>> geomety
> > >>> may not be applicable to some existing systems.
> > >>>
> > >>> I think an abstract class (interface) will do with at least a 
> > >>> "delete"
> > >>> method to let
> > >>> the object handle its own deletion. On both Java and .NET which 
> > >>> supports GC,
> > >>> there was no need to consider this.
> > >>>
> > >>> BTW, I have realized work on the JTS 1.4 updates is progressing, 
> > >>> when is the
> > >>> release date?
> > >>>
> > >>> Best regards,
> > >>> Paul.
> > >>>
> > >>> ----- Original Message -----
> > >>> From: "strk" <strk@keybit.net>
> > >>> To: "Yury A. Bychkov" <me@yury.ca>
> > >>> Cc: <geos-devel@geos.refractions.net>
> > >>> Sent: Tuesday, April 13, 2004 5:23 PM
> > >>> Subject: [geos-devel] userData for Geometry
> > >>>
> > >>>
> > >>>> The Geometry class has a void *userData that is
> > >>>> deleted at Geometry detetion time.
> > >>>> Wouldn't it be appropriate to define a class from
> > >>>> which userData should derive ?
> > >>>> The compiler warns that void * cannot be safely deleted.
> > >>>>
> > >>>> --strk;
> > >>>> _______________________________________________
> > >>>> geos-devel mailing list
> > >>>> geos-devel@geos.refractions.net
> > >>>> http://geos.refractions.net/mailman/listinfo/geos-devel
> > >>>>
> > >>>>
> > >>>
> > >>>
> > >>> _______________________________________________
> > >>> geos-devel mailing list
> > >>> geos-devel@geos.refractions.net
> > >>> http://geos.refractions.net/mailman/listinfo/geos-devel
> > >> -- 
> > >>
> > >> _______________________________________________
> > >> geos-devel mailing list
> > >> geos-devel@geos.refractions.net
> > >> http://geos.refractions.net/mailman/listinfo/geos-devel
> > >>
> >       Paul Ramsey
> >       Refractions Research
> >       Email: pramsey@refractions.net
> >       Phone: (250) 885-0632

From strk at keybit.net  Wed Apr 14 11:39:35 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] AbstractSTRtree::createParentBoundables
Message-ID: <20040414173935.E52220@freek.keybit.net>

Hello, I've found a call to
sort() in AbstractSTRtree::createParentBoundables,
but I cannot find the definition of that function.

Can you help me understanding it ?

TIA

--strk;

From ferdinando.villa at uvm.edu  Wed Apr 14 12:03:37 2004
From: ferdinando.villa at uvm.edu (Ferdinando Villa)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: GEOS build scripts
In-Reply-To: <20040414173013.D52220@freek.keybit.net>
References: <20040414083952.B49099@freek.keybit.net>
	<A97D756C-8E22-11D8-A3EE-000393D33C2E@refractions.net>
	<20040414171923.C52220@freek.keybit.net>
	<20040414173013.D52220@freek.keybit.net>
Message-ID: <1081958617.4061.9.camel@basil.snr.uvm.edu>

The problem seems to come from wanting it all in a single library; since
the files are too many to fit on ld's command line, libtool builds the
library piecewise, which takes a very long time; plus, the library needs
to be rebuild even when a single object file changes. When we discussed
the code organization, I was in favor of building separate libraries and
use a helper script (geos-config --libs) to do the link, but was
outvoted in favor of the single library organization... I guess this was
the unforeseen drawback. Other than restructuring everything, I don't
see many options here (on the other hand, I'm recovering from anesthesia
right now, so I may see options when I wake up!)

sorry
ferdinando

On Wed, 2004-04-14 at 11:30, strk wrote:
> The disk space requirement empirically found:
> 
> When all the intermediate .o are around:
> 	/dev/hda3              7874560   6199124   1275420  83% /usr
> 
> After intermediate .o removal:
> 	/dev/hda3              7874560   2991172   4483372  41% /usr
> 
> It's a +3GB of disk space (and write) requirement !!
> 
> --strk;
> 
> On Wed, Apr 14, 2004 at 05:19:23PM +0200, strk wrote:
> > Just to let you understand my problem:
> > touching source/index/strtree/AbstractSTRtree.cpp
> > after a complete build makes the next build take
> > 4,30 minutes on a 1668.736 Mhz CPU with 775MB ram.
> > 
> > The link part is the longer. The linker is run for *every* object
> > file creating ALL intermediate objects:
> > 
> >   /usr/bin/ld -r -o .libs/libgeos.la-24.o .libs/TopologyException.o .libs/libgeos.la-23.o
> >   /usr/bin/ld -r -o .libs/libgeos.la-25.o .libs/Triangle.o .libs/libgeos.la-24.o
> >   [..]
> >   /usr/bin/ld -r -o .libs/libgeos.la-180.o .libs/UnsupportedOperationException.o .libs/libgeos.la-179.o
> > 
> > Then the last object is made a shared library, and the libgeos.la-#.o files
> > are removed. 
> > 
> >   gcc -shared .libs/libgeos.la-180.o   -Wl,-soname -Wl,libgeos.so.1 -o .libs/libgeos.so.1.0.0
> > 
> > Finally all object files are appended (again with an 'ar' run each) to
> > the libgeos.a archive:
> > 
> >  ar cru .libs/libgeos.a RelateNode.o
> >  : .libs/libgeos.a
> >  ar cru .libs/libgeos.a RelateNodeFactory.o
> >  : .libs/libgeos.a
> > 
> > Note that the incremental object linkage requires a lot of disk
> > space also, about the factorial of average object size.
> > 
> > The tools I'm using are:
> >  ltmain.sh (GNU libtool) 1.4.2 (1.922.2.53 2001/09/11 03:18:52)
> >  automake (GNU automake) 1.7.7
> > 
> > 
> > --strk;
> > 
> > On Wed, Apr 14, 2004 at 07:47:33AM -0700, Paul Ramsey wrote:
> > > Not sure I understand the question. If you touch code, make is required 
> > > to recompile it, and everything else that depends on it. So if you 
> > > touch everything, everything will recompile, even if there are no 
> > > actual changes, except to the file change date. I think the build 
> > > system is working OK. Having everything centralized in geom is a bit 
> > > fussy, but given the volume of changes (low) I think it works fine.
> > > 
> > > Paul
> > > 
> > > On Tuesday, April 13, 2004, at 11:39 PM, strk wrote:
> > > 
> > > > Hi,
> > > > I've seen that touching every single piece of code makes
> > > > the build required to start from scratch. Is there anything
> > > > I can do to make the build process quicker ?
> > > > Should automake take care of real dependencies or that is
> > > > a task of myself ?
> > > >
> > > > TIA
> > > > --strk;
> > > >
> > > > On Tue, Apr 13, 2004 at 10:03:49AM -0400, Ferdinando Villa wrote:
> > > >> Using the void* and relying on a virtual for proper deletion is a 
> > > >> pretty
> > > >> unsafe way of doing it (not to mention ugly). A better alternative 
> > > >> could
> > > >> be something like this - a bit messier, but once done, it takes care 
> > > >> of
> > > >> it all:
> > > >> 	
> > > >> 1. define these within the class that has the void*
> > > >>
> > > >> class _handler
> > > >> {
> > > >> public:
> > > >>   void* obj;
> > > >>   virtual ~_handler() {}
> > > >> };
> > > >> 	
> > > >> template <typename T>
> > > >> class handle : public _handler
> > > >> {
> > > >> public:
> > > >>   handle(T* o) { obj = o; }
> > > >>   handle(const handle& lh)
> > > >>   { obj = lh.obj; }
> > > >>   virtual ~handle() { T* t = (T*)obj; delete t; }
> > > >> };
> > > >>
> > > >> 2. have a pointer to _handler initialized to zero instead of void*, 
> > > >> and
> > > >> delete it in the destructor if it's non-zero;
> > > >>
> > > >> _handler _h
> > > >>
> > > >> yourclass(): _h(0) ...
> > > >> ~yourclass() { if (_h) delete _h; }
> > > >>
> > > >> 3. add a set/get method like
> > > >>
> > > >> template <typename T>
> > > >> void set_thingy(T* lh)
> > > >> {
> > > >>   _h = new handle<T>(lh);
> > > >> }
> > > >>
> > > >> template <typename T>
> > > >> T* get_thingy()
> > > >> {
> > > >>   return reinterpret_cast<T*>(_h->obj);
> > > >> }
> > > >>
> > > >> Even better if the _h pointer is a smart pointer, which allows the
> > > >> containing object to be copied and passed around safely, but that's 
> > > >> more
> > > >> setup. You can call the set_methods as a regular method: 
> > > >> set_thingy(new
> > > >> thing) and that will create the proper class that will manage the
> > > >> deletion properly. The get method requires the template parameter. Of
> > > >> course this substitutes one allocation with two, so it's not really
> > > >> appropriate if it has to be called continuously, but then the void*
> > > >> thing isn't, either.
> > > >>
> > > >> Ciao,
> > > >> ferdinando
> > > >>
> > > >> On Tue, 2004-04-13 at 07:20, Paul Selormey wrote:
> > > >>> According to the JTS docs, this is to be used for coordinate 
> > > >>> reference
> > > >>> system,
> > > >>> and it most systems this could be implemented as geometry filter but 
> > > >>> the
> > > >>> geomety
> > > >>> may not be applicable to some existing systems.
> > > >>>
> > > >>> I think an abstract class (interface) will do with at least a 
> > > >>> "delete"
> > > >>> method to let
> > > >>> the object handle its own deletion. On both Java and .NET which 
> > > >>> supports GC,
> > > >>> there was no need to consider this.
> > > >>>
> > > >>> BTW, I have realized work on the JTS 1.4 updates is progressing, 
> > > >>> when is the
> > > >>> release date?
> > > >>>
> > > >>> Best regards,
> > > >>> Paul.
> > > >>>
> > > >>> ----- Original Message -----
> > > >>> From: "strk" <strk@keybit.net>
> > > >>> To: "Yury A. Bychkov" <me@yury.ca>
> > > >>> Cc: <geos-devel@geos.refractions.net>
> > > >>> Sent: Tuesday, April 13, 2004 5:23 PM
> > > >>> Subject: [geos-devel] userData for Geometry
> > > >>>
> > > >>>
> > > >>>> The Geometry class has a void *userData that is
> > > >>>> deleted at Geometry detetion time.
> > > >>>> Wouldn't it be appropriate to define a class from
> > > >>>> which userData should derive ?
> > > >>>> The compiler warns that void * cannot be safely deleted.
> > > >>>>
> > > >>>> --strk;
> > > >>>> _______________________________________________
> > > >>>> geos-devel mailing list
> > > >>>> geos-devel@geos.refractions.net
> > > >>>> http://geos.refractions.net/mailman/listinfo/geos-devel
> > > >>>>
> > > >>>>
> > > >>>
> > > >>>
> > > >>> _______________________________________________
> > > >>> geos-devel mailing list
> > > >>> geos-devel@geos.refractions.net
> > > >>> http://geos.refractions.net/mailman/listinfo/geos-devel
> > > >> -- 
> > > >>
> > > >> _______________________________________________
> > > >> geos-devel mailing list
> > > >> geos-devel@geos.refractions.net
> > > >> http://geos.refractions.net/mailman/listinfo/geos-devel
> > > >>
> > >       Paul Ramsey
> > >       Refractions Research
> > >       Email: pramsey@refractions.net
> > >       Phone: (250) 885-0632
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
-- 


From kenlord at email.com  Wed Apr 14 16:35:55 2004
From: kenlord at email.com (Ken Lord)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] geos/postgis install
Message-ID: <20040414203555.C4E263CE273@ws3-4.us4.outblaze.com>

Thank you Paul for responding so quickly to my previous post.  It took a few days before I could try your RPM suggestion.

I guess what I am looking for is documentation.  What to do after installing the RPM.



I have the PostGIS RPM package installed with Proj and Geos, but I have no clue how to proceed.  

My previous attempt, compiling from source, gave me folders and files to dig through with information on how to proceed, a location for the database to be stored, instructions on starting the database server etc.  The RPM's create no such structures for a novice such as myself to follow, and i see nothing like this at refractions.net

I have successfully installed/tested PostGIS on a windows computer through Cygwin.

Is there some mystery webpage I've missed that will point me in the right direction?


Thank you,
Ken Lord
-- 
___________________________________________________________
Sign-up for Ads Free at Mail.com
http://promo.mail.com/adsfreejump.htm


From nhv at cape.com  Wed Apr 14 17:36:06 2004
From: nhv at cape.com (Norman Vine)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: GEOS build scripts
In-Reply-To: <1081955668.407d555420226@hydra>
Message-ID: <EKEJIKAILPONGGENMBGAEEIKHCAA.nhv@cape.com>

Paul Ramsey writes:
> 
> Ah. Let's see if anyone on the list knows. It might just be that C++ takes a 
> long time to compile (in general, this appears to be true, at least in GNU 
> land).
> 
> Quoting strk <strk@keybit.net>:
> 
> > The build system works, this is sure.
> > What I'm not sure about is the correctness of filed dependencies.
> > I do not know wheter automake does take care of deps or if it is
> > programmer responsibility to set them somehow.
> > My problem is that the build time is very very long, and I'm
> > trying to understand if this is due to 'conservative'
> > dependencies, autotool paranoia, or C++ compile itself.

Libtool will take care of the dependencies

You might want to investigate ccache to speed up compilation

http://ccache.samba.org/

HTH

Norman



From strk at keybit.net  Fri Apr 16 04:55:55 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] PrecisionModel::Type
Message-ID: <20040416105555.C70514@freek.keybit.net>

I've made PrecisionModel::Type an enumerated type
(it was a class before)

--strk;

From mbdavis at VividSolutions.com  Fri Apr 16 11:46:33 2004
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] PrecisionModel::Type
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0274F517B@venus.VividSolutions.com>

Sounds good.  It was a type because Java didn't support enums before ver
1.5

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: strk [mailto:strk@keybit.net] 
> Sent: April 16, 2004 1:56 AM
> To: geos-devel@geos.refractions.net
> Subject: [geos-devel] PrecisionModel::Type
> 
> 
> I've made PrecisionModel::Type an enumerated type
> (it was a class before)
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net 
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 

From strk at keybit.net  Tue Apr 20 08:52:28 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: GEOS build scripts
In-Reply-To: <1081958617.4061.9.camel@basil.snr.uvm.edu>;
	from ferdinando.villa@uvm.edu on Wed, Apr 14, 2004 at 12:03:37PM
	-0400
References: <20040414083952.B49099@freek.keybit.net>
	<A97D756C-8E22-11D8-A3EE-000393D33C2E@refractions.net>
	<20040414171923.C52220@freek.keybit.net>
	<20040414173013.D52220@freek.keybit.net>
	<1081958617.4061.9.camel@basil.snr.uvm.edu>
Message-ID: <20040420145228.B13133@freek.keybit.net>

I've upgraded to ltmain.sh (GNU libtool) 1.5 (1.1220 2003/04/05 19:32:58)
and the problems seem to be gone. 

How did your recover go ? Everything fine ?

--strk;

On Wed, Apr 14, 2004 at 12:03:37PM -0400, Ferdinando Villa wrote:
> The problem seems to come from wanting it all in a single library; since
> the files are too many to fit on ld's command line, libtool builds the
> library piecewise, which takes a very long time; plus, the library needs
> to be rebuild even when a single object file changes. When we discussed
> the code organization, I was in favor of building separate libraries and
> use a helper script (geos-config --libs) to do the link, but was
> outvoted in favor of the single library organization... I guess this was
> the unforeseen drawback. Other than restructuring everything, I don't
> see many options here (on the other hand, I'm recovering from anesthesia
> right now, so I may see options when I wake up!)
> 
> sorry
> ferdinando
> 
> On Wed, 2004-04-14 at 11:30, strk wrote:
> > The disk space requirement empirically found:
> > 
> > When all the intermediate .o are around:
> > 	/dev/hda3              7874560   6199124   1275420  83% /usr
> > 
> > After intermediate .o removal:
> > 	/dev/hda3              7874560   2991172   4483372  41% /usr
> > 
> > It's a +3GB of disk space (and write) requirement !!
> > 
> > --strk;
> > 
> > On Wed, Apr 14, 2004 at 05:19:23PM +0200, strk wrote:
> > > Just to let you understand my problem:
> > > touching source/index/strtree/AbstractSTRtree.cpp
> > > after a complete build makes the next build take
> > > 4,30 minutes on a 1668.736 Mhz CPU with 775MB ram.
> > > 
> > > The link part is the longer. The linker is run for *every* object
> > > file creating ALL intermediate objects:
> > > 
> > >   /usr/bin/ld -r -o .libs/libgeos.la-24.o .libs/TopologyException.o .libs/libgeos.la-23.o
> > >   /usr/bin/ld -r -o .libs/libgeos.la-25.o .libs/Triangle.o .libs/libgeos.la-24.o
> > >   [..]
> > >   /usr/bin/ld -r -o .libs/libgeos.la-180.o .libs/UnsupportedOperationException.o .libs/libgeos.la-179.o
> > > 
> > > Then the last object is made a shared library, and the libgeos.la-#.o files
> > > are removed. 
> > > 
> > >   gcc -shared .libs/libgeos.la-180.o   -Wl,-soname -Wl,libgeos.so.1 -o .libs/libgeos.so.1.0.0
> > > 
> > > Finally all object files are appended (again with an 'ar' run each) to
> > > the libgeos.a archive:
> > > 
> > >  ar cru .libs/libgeos.a RelateNode.o
> > >  : .libs/libgeos.a
> > >  ar cru .libs/libgeos.a RelateNodeFactory.o
> > >  : .libs/libgeos.a
> > > 
> > > Note that the incremental object linkage requires a lot of disk
> > > space also, about the factorial of average object size.
> > > 
> > > The tools I'm using are:
> > >  ltmain.sh (GNU libtool) 1.4.2 (1.922.2.53 2001/09/11 03:18:52)
> > >  automake (GNU automake) 1.7.7
> > > 
> > > 
> > > --strk;

From ferdinando.villa at uvm.edu  Tue Apr 20 09:52:41 2004
From: ferdinando.villa at uvm.edu (Ferdinando Villa)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: GEOS build scripts
In-Reply-To: <20040420145228.B13133@freek.keybit.net>
References: <20040414083952.B49099@freek.keybit.net>
	<A97D756C-8E22-11D8-A3EE-000393D33C2E@refractions.net>
	<20040414171923.C52220@freek.keybit.net>
	<20040414173013.D52220@freek.keybit.net>
	<1081958617.4061.9.camel@basil.snr.uvm.edu>
	<20040420145228.B13133@freek.keybit.net>
Message-ID: <1082469161.4462.5.camel@basil.snr.uvm.edu>

Sounds great - glad that's taken care of by libtool itself. I've
recovered fast and well (my doctor insisted that I absolutely needed a
tube stuck in my stomach even if it wasn't likely to find much, which in
fact it didn't).... no new insight though. I actually kind of enjoyed
the intravenous Valium after three weeks of 14h/day non-stop work...
thanks for asking.

Best,
ferdinando 

On Tue, 2004-04-20 at 08:52, strk wrote:
> I've upgraded to ltmain.sh (GNU libtool) 1.5 (1.1220 2003/04/05 19:32:58)
> and the problems seem to be gone. 
> 
> How did your recover go ? Everything fine ?
> 
> --strk;
> 
> On Wed, Apr 14, 2004 at 12:03:37PM -0400, Ferdinando Villa wrote:
> > The problem seems to come from wanting it all in a single library; since
> > the files are too many to fit on ld's command line, libtool builds the
> > library piecewise, which takes a very long time; plus, the library needs
> > to be rebuild even when a single object file changes. When we discussed
> > the code organization, I was in favor of building separate libraries and
> > use a helper script (geos-config --libs) to do the link, but was
> > outvoted in favor of the single library organization... I guess this was
> > the unforeseen drawback. Other than restructuring everything, I don't
> > see many options here (on the other hand, I'm recovering from anesthesia
> > right now, so I may see options when I wake up!)
> > 
> > sorry
> > ferdinando
> > 
> > On Wed, 2004-04-14 at 11:30, strk wrote:
> > > The disk space requirement empirically found:
> > > 
> > > When all the intermediate .o are around:
> > > 	/dev/hda3              7874560   6199124   1275420  83% /usr
> > > 
> > > After intermediate .o removal:
> > > 	/dev/hda3              7874560   2991172   4483372  41% /usr
> > > 
> > > It's a +3GB of disk space (and write) requirement !!
> > > 
> > > --strk;
> > > 
> > > On Wed, Apr 14, 2004 at 05:19:23PM +0200, strk wrote:
> > > > Just to let you understand my problem:
> > > > touching source/index/strtree/AbstractSTRtree.cpp
> > > > after a complete build makes the next build take
> > > > 4,30 minutes on a 1668.736 Mhz CPU with 775MB ram.
> > > > 
> > > > The link part is the longer. The linker is run for *every* object
> > > > file creating ALL intermediate objects:
> > > > 
> > > >   /usr/bin/ld -r -o .libs/libgeos.la-24.o .libs/TopologyException.o .libs/libgeos.la-23.o
> > > >   /usr/bin/ld -r -o .libs/libgeos.la-25.o .libs/Triangle.o .libs/libgeos.la-24.o
> > > >   [..]
> > > >   /usr/bin/ld -r -o .libs/libgeos.la-180.o .libs/UnsupportedOperationException.o .libs/libgeos.la-179.o
> > > > 
> > > > Then the last object is made a shared library, and the libgeos.la-#.o files
> > > > are removed. 
> > > > 
> > > >   gcc -shared .libs/libgeos.la-180.o   -Wl,-soname -Wl,libgeos.so.1 -o .libs/libgeos.so.1.0.0
> > > > 
> > > > Finally all object files are appended (again with an 'ar' run each) to
> > > > the libgeos.a archive:
> > > > 
> > > >  ar cru .libs/libgeos.a RelateNode.o
> > > >  : .libs/libgeos.a
> > > >  ar cru .libs/libgeos.a RelateNodeFactory.o
> > > >  : .libs/libgeos.a
> > > > 
> > > > Note that the incremental object linkage requires a lot of disk
> > > > space also, about the factorial of average object size.
> > > > 
> > > > The tools I'm using are:
> > > >  ltmain.sh (GNU libtool) 1.4.2 (1.922.2.53 2001/09/11 03:18:52)
> > > >  automake (GNU automake) 1.7.7
> > > > 
> > > > 
> > > > --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel
-- 


From strk at keybit.net  Wed Apr 21 10:10:32 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] depth mismatch
Message-ID: <20040421161032.A26386@freek.keybit.net>

Hello Martin,
I'm trying to figure out why doesn't the buffer operation
work in GEOS CVS. Turning some debugging on I receive

	TopologyException: depth mismatch (150,350)

at every  bufferFixedPrecision() attempt but the one with 0 precision
digits (the last one) which in turn drops an empty resultGeometry.

Can you tell me if sizeBasedScaleFactor matches max precision digits ?
And more on, what is a depth mismatch exception ?

TIA

--strk;

Here is the complete debugging output:

POINT (150.00 350.00)
Trying with 12 max precision digits
sizeBasedScaleFactor: 1e+10
TopologyException: depth mismatch at  (150,350)
Trying with 11 max precision digits
sizeBasedScaleFactor: 1e+09
TopologyException: depth mismatch at  (150,350)
Trying with 10 max precision digits
sizeBasedScaleFactor: 1e+08
TopologyException: depth mismatch at  (150,350)
Trying with 9 max precision digits
sizeBasedScaleFactor: 1e+07
TopologyException: depth mismatch at  (150,350)
Trying with 8 max precision digits
sizeBasedScaleFactor: 1e+06
TopologyException: depth mismatch at  (150,350)
Trying with 7 max precision digits
sizeBasedScaleFactor: 100000
TopologyException: depth mismatch at  (150,350)
Trying with 6 max precision digits
sizeBasedScaleFactor: 10000
TopologyException: depth mismatch at  (150,350)
Trying with 5 max precision digits
sizeBasedScaleFactor: 1000
TopologyException: depth mismatch at  (150,350)
Trying with 4 max precision digits
sizeBasedScaleFactor: 100
TopologyException: depth mismatch at  (150,350)
Trying with 3 max precision digits
sizeBasedScaleFactor: 10
TopologyException: depth mismatch at  (150,350)
Trying with 2 max precision digits
sizeBasedScaleFactor: 1
TopologyException: depth mismatch at  (150,350)
Trying with 1 max precision digits
sizeBasedScaleFactor: 0.1
TopologyException: depth mismatch at  (150,350)
Trying with 0 max precision digits
sizeBasedScaleFactor: 0.01
resultGeom != NULL

From strk at keybit.net  Wed Apr 21 10:18:53 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] depth mismatch
In-Reply-To: <20040421161032.A26386@freek.keybit.net>;
	from strk@keybit.net on Wed, Apr 21, 2004 at 04:10:32PM +0200
References: <20040421161032.A26386@freek.keybit.net>
Message-ID: <20040421161853.B26386@freek.keybit.net>

Fiuuuuu!. Found.
Was an error in DirectedEdgeStar::computeDepths.
It seems to work now.

--strk;

On Wed, Apr 21, 2004 at 04:10:32PM +0200, strk wrote:
> Hello Martin,
> I'm trying to figure out why doesn't the buffer operation
> work in GEOS CVS. Turning some debugging on I receive
> 
> 	TopologyException: depth mismatch (150,350)
> 
> at every  bufferFixedPrecision() attempt but the one with 0 precision
> digits (the last one) which in turn drops an empty resultGeometry.
> 
> Can you tell me if sizeBasedScaleFactor matches max precision digits ?
> And more on, what is a depth mismatch exception ?
> 
> TIA
> 
> --strk;
> 
> Here is the complete debugging output:
> 
> POINT (150.00 350.00)
> Trying with 12 max precision digits
> sizeBasedScaleFactor: 1e+10
> TopologyException: depth mismatch at  (150,350)
> Trying with 11 max precision digits
> sizeBasedScaleFactor: 1e+09
> TopologyException: depth mismatch at  (150,350)
> Trying with 10 max precision digits
> sizeBasedScaleFactor: 1e+08
> TopologyException: depth mismatch at  (150,350)
> Trying with 9 max precision digits
> sizeBasedScaleFactor: 1e+07
> TopologyException: depth mismatch at  (150,350)
> Trying with 8 max precision digits
> sizeBasedScaleFactor: 1e+06
> TopologyException: depth mismatch at  (150,350)
> Trying with 7 max precision digits
> sizeBasedScaleFactor: 100000
> TopologyException: depth mismatch at  (150,350)
> Trying with 6 max precision digits
> sizeBasedScaleFactor: 10000
> TopologyException: depth mismatch at  (150,350)
> Trying with 5 max precision digits
> sizeBasedScaleFactor: 1000
> TopologyException: depth mismatch at  (150,350)
> Trying with 4 max precision digits
> sizeBasedScaleFactor: 100
> TopologyException: depth mismatch at  (150,350)
> Trying with 3 max precision digits
> sizeBasedScaleFactor: 10
> TopologyException: depth mismatch at  (150,350)
> Trying with 2 max precision digits
> sizeBasedScaleFactor: 1
> TopologyException: depth mismatch at  (150,350)
> Trying with 1 max precision digits
> sizeBasedScaleFactor: 0.1
> TopologyException: depth mismatch at  (150,350)
> Trying with 0 max precision digits
> sizeBasedScaleFactor: 0.01
> resultGeom != NULL
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From mbdavis at VividSolutions.com  Wed Apr 21 11:30:00 2004
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] depth mismatch
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0274F51B3@venus.VividSolutions.com>

Strk,

Can you post the error code?   Then I can make sure this isn't an error
in JTS as well.

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: strk [mailto:strk@keybit.net] 
> Sent: April 21, 2004 7:19 AM
> To: Martin Davis; GEOS Development List
> Cc: Yury A. Bychkov; Paul Ramsey
> Subject: Re: [geos-devel] depth mismatch
> 
> 
> Fiuuuuu!. Found.
> Was an error in DirectedEdgeStar::computeDepths.
> It seems to work now.
> 
> --strk;
> 
> On Wed, Apr 21, 2004 at 04:10:32PM +0200, strk wrote:
> > Hello Martin,
> > I'm trying to figure out why doesn't the buffer operation 
> work in GEOS 
> > CVS. Turning some debugging on I receive
> > 
> > 	TopologyException: depth mismatch (150,350)
> > 
> > at every  bufferFixedPrecision() attempt but the one with 0 
> precision 
> > digits (the last one) which in turn drops an empty resultGeometry.
> > 
> > Can you tell me if sizeBasedScaleFactor matches max 
> precision digits ? 
> > And more on, what is a depth mismatch exception ?
> > 
> > TIA
> > 
> > --strk;
> > 
> > Here is the complete debugging output:
> > 
> > POINT (150.00 350.00)
> > Trying with 12 max precision digits
> > sizeBasedScaleFactor: 1e+10
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 11 max precision digits
> > sizeBasedScaleFactor: 1e+09
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 10 max precision digits
> > sizeBasedScaleFactor: 1e+08
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 9 max precision digits
> > sizeBasedScaleFactor: 1e+07
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 8 max precision digits
> > sizeBasedScaleFactor: 1e+06
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 7 max precision digits
> > sizeBasedScaleFactor: 100000
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 6 max precision digits
> > sizeBasedScaleFactor: 10000
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 5 max precision digits
> > sizeBasedScaleFactor: 1000
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 4 max precision digits
> > sizeBasedScaleFactor: 100
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 3 max precision digits
> > sizeBasedScaleFactor: 10
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 2 max precision digits
> > sizeBasedScaleFactor: 1
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 1 max precision digits
> > sizeBasedScaleFactor: 0.1
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 0 max precision digits
> > sizeBasedScaleFactor: 0.01
> > resultGeom != NULL _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> 

From strk at keybit.net  Wed Apr 21 11:45:53 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] depth mismatch
In-Reply-To: <5A94289A9268514C8D6C0F1FF44BA0274F51B3@venus.VividSolutions.com>;
	from mbdavis@VividSolutions.com on Wed, Apr 21, 2004 at 08:30:00AM
	-0700
References: <5A94289A9268514C8D6C0F1FF44BA0274F51B3@venus.VividSolutions.com>
Message-ID: <20040421174553.A27800@freek.keybit.net>

On Wed, Apr 21, 2004 at 08:30:00AM -0700, Martin Davis wrote:
> Strk,
> 
> Can you post the error code?   Then I can make sure this isn't an error
> in JTS as well.

Was a port error. I've fixed it reading from JTS.
BTW the buffer operation give results now, but they are
probably not correct:

Buffer for :
 POINT (150.00 350.00)

is:
 POLYGON ((150.00 350.00, 160.00 350.00, 159.81 348.05, 159.24 346.17, 158.31 344.44, 157.07 342.93, 155.56 341.69, 153.83 340.76, 151.95 340.19, 150.00 340.00, 148.05 340.19, 146.17 340.76, 144.44 341.69, 142.93 342.93, 141.69 344.44, 140.76 346.17, 140.19 348.05, 140.00 350.00, 140.19 351.95, 140.76 353.83, 141.69 355.56, 142.93 357.07, 144.44 358.31, 146.17 359.24, 148.05 359.81, 150.00 360.00, 151.95 359.81, 153.83 359.24, 155.56 358.31, 157.07 357.07, 158.31 355.56, 159.24 353.83, 159.81 351.95, 160.00 350.00, 150.00 350.00))

Which starts and ends at the original point, should it ?

--strk;

> 
> Martin Davis, Senior Technical Architect
> Vivid Solutions Inc.
> Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
> Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046
> 
> 
> > -----Original Message-----
> > From: strk [mailto:strk@keybit.net] 
> > Sent: April 21, 2004 7:19 AM
> > To: Martin Davis; GEOS Development List
> > Cc: Yury A. Bychkov; Paul Ramsey
> > Subject: Re: [geos-devel] depth mismatch
> > 
> > 
> > Fiuuuuu!. Found.
> > Was an error in DirectedEdgeStar::computeDepths.
> > It seems to work now.
> > 
> > --strk;
> > 
> > On Wed, Apr 21, 2004 at 04:10:32PM +0200, strk wrote:
> > > Hello Martin,
> > > I'm trying to figure out why doesn't the buffer operation 
> > work in GEOS 
> > > CVS. Turning some debugging on I receive
> > > 
> > > 	TopologyException: depth mismatch (150,350)
> > > 
> > > at every  bufferFixedPrecision() attempt but the one with 0 
> > precision 
> > > digits (the last one) which in turn drops an empty resultGeometry.
> > > 
> > > Can you tell me if sizeBasedScaleFactor matches max 
> > precision digits ? 
> > > And more on, what is a depth mismatch exception ?
> > > 
> > > TIA
> > > 
> > > --strk;
> > > 
> > > Here is the complete debugging output:
> > > 
> > > POINT (150.00 350.00)
> > > Trying with 12 max precision digits
> > > sizeBasedScaleFactor: 1e+10
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 11 max precision digits
> > > sizeBasedScaleFactor: 1e+09
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 10 max precision digits
> > > sizeBasedScaleFactor: 1e+08
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 9 max precision digits
> > > sizeBasedScaleFactor: 1e+07
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 8 max precision digits
> > > sizeBasedScaleFactor: 1e+06
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 7 max precision digits
> > > sizeBasedScaleFactor: 100000
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 6 max precision digits
> > > sizeBasedScaleFactor: 10000
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 5 max precision digits
> > > sizeBasedScaleFactor: 1000
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 4 max precision digits
> > > sizeBasedScaleFactor: 100
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 3 max precision digits
> > > sizeBasedScaleFactor: 10
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 2 max precision digits
> > > sizeBasedScaleFactor: 1
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 1 max precision digits
> > > sizeBasedScaleFactor: 0.1
> > > TopologyException: depth mismatch at  (150,350)
> > > Trying with 0 max precision digits
> > > sizeBasedScaleFactor: 0.01
> > > resultGeom != NULL _______________________________________________
> > > geos-devel mailing list
> > > geos-devel@geos.refractions.net
> > > http://geos.refractions.net/mailman/listinfo/geos-devel
> > 

From carl.anderson at vadose.org  Fri Apr 23 01:01:27 2004
From: carl.anderson at vadose.org (Carl Anderson)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Bug in GEOS not in JTS
Message-ID: <20040423050127.GA8247@vadose.dvg>


the following snip (for PostGIS) always causes a SIGABRT.  I am sure  
that it is in GEOS.

select buffer(shape,0) from
(
select 'MULTIPOLYGON(((2170000 1350000,
2170000 1350176.60928587,2170055.96366235 1350000,2170000 1350000)))':: 
geometry as shape ) as a
;

actually any shape that is the left 1/2 of a north up oriented  
rectangle seems to cause the SIGABRT.  the error can be triggered by  
buffer(), difference(), intersection(), and symdifference().

buffer(shape,0.00001) does not SIGABRT in the above example.

I tested this and several similar shapes that bomb in PostGIS and they  
validate correct in JTS/JUMP.  Even the buffer(0) fcn works in JUMP.

does anyone have a working version of doc/example.cpp against CVS
that I can use to track this down?

C.



Carl Anderson.


From strk at keybit.net  Fri Apr 23 03:00:46 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Bug in GEOS not in JTS
In-Reply-To: <20040423050127.GA8247@vadose.dvg>;
	from carl.anderson@vadose.org on Fri, Apr 23, 2004 at 01:01:27AM
	-0400
References: <20040423050127.GA8247@vadose.dvg>
Message-ID: <20040423090046.B44567@freek.keybit.net>

On Fri, Apr 23, 2004 at 01:01:27AM -0400, Carl Anderson wrote:
> 
> the following snip (for PostGIS) always causes a SIGABRT.  I am sure  
> that it is in GEOS.
> 
> select buffer(shape,0) from
> (
> select 'MULTIPOLYGON(((2170000 1350000,
> 2170000 1350176.60928587,2170055.96366235 1350000,2170000 1350000)))':: 
> geometry as shape ) as a
> ;
> 
> actually any shape that is the left 1/2 of a north up oriented  
> rectangle seems to cause the SIGABRT.  the error can be triggered by  
> buffer(), difference(), intersection(), and symdifference().
> 
> buffer(shape,0.00001) does not SIGABRT in the above example.
> 
> I tested this and several similar shapes that bomb in PostGIS and they  
> validate correct in JTS/JUMP.  Even the buffer(0) fcn works in JUMP.
> 
> does anyone have a working version of doc/example.cpp against CVS
> that I can use to track this down?
> 
> C.

If you comment line 271:
	geoms->push_back(create_simple_collection(geoms));
doc/example.cpp will run with some memory leaks and incorrect
results, but without memory faults.

--strk;

> 
> 
> 
> Carl Anderson.
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From carl.anderson at vadose.org  Fri Apr 23 21:56:31 2004
From: carl.anderson at vadose.org (Carl Anderson)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
Message-ID: <20040424015631.GA16003@vadose.dvg>


Is the current API creep in CVS intended?
toGeometry(Envelope *, ... ) has changed and no long compiles against  
PostGIS cvs nor PostGIS 0.8.1

I ask to see where I should try to plug bugs?

the CVS code is more delicate (has more instance of SIGABRTs) than the  
geos-1.0 code.

The CVS work has promising elements in it but while the 1.0 code
only SIGABRT'ed on 15 of 200,000 geometries the CVS code
SIGABRTs on more than 200 of same set.

The 1.0 code only
   SIGABRTs in the BufferOp routine
and CVS
   SIGABRTs in noding/IteratedNoder.cpp and strtree and other places  
but not BufferOp

remembe that my test set is by definition not unlimited and other  
instances of trouble may be waiting in both CVS and 1.0.

so should I chill and wait for CVs to settle, work on submitting a  
patch against 1.0 or work on CVS.


If the CVS API changes are intended could someone increment the version  
tag (and directory name).


C.


From strk at keybit.net  Sun Apr 25 05:33:28 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
In-Reply-To: <20040424015631.GA16003@vadose.dvg>;
	from carl.anderson@vadose.org on Fri, Apr 23, 2004 at 09:56:31PM
	-0400
References: <20040424015631.GA16003@vadose.dvg>
Message-ID: <20040425113328.A65266@freek.keybit.net>

On Fri, Apr 23, 2004 at 09:56:31PM -0400, Carl Anderson wrote:
> 
> Is the current API creep in CVS intended?
> toGeometry(Envelope *, ... ) has changed and no long compiles against  
> PostGIS cvs nor PostGIS 0.8.1

I've checked out JTS-1.4 and the change is there too, although
not documented in the release notes and mismatching with the 
comment that preceedes its definition. I suppose it's a bug
in JTS ported to GEOS. Martin ?

> 
> I ask to see where I should try to plug bugs?
> 
> the CVS code is more delicate (has more instance of SIGABRTs) than the  
> geos-1.0 code.
> 
> The CVS work has promising elements in it but while the 1.0 code
> only SIGABRT'ed on 15 of 200,000 geometries the CVS code
> SIGABRTs on more than 200 of same set.
> 
> The 1.0 code only
>    SIGABRTs in the BufferOp routine
> and CVS
>    SIGABRTs in noding/IteratedNoder.cpp and strtree and other places  
> but not BufferOp
> 
> remembe that my test set is by definition not unlimited and other  
> instances of trouble may be waiting in both CVS and 1.0.
> 
> so should I chill and wait for CVs to settle, work on submitting a  
> patch against 1.0 or work on CVS.

Current work on GEOS is focused on CVS, but if you found urgent
bugs in GEOS-1.0 I think you should submit patches agains it too,
in order to get a GEOS-1.1 release.

Could SIGABRTs have to do with exceptions ?
I'm asking because in cvs GEOS (as in jts-1.4) there is an exception
mechanism used to reduce precision in case of rubustness-related
topological errors, so while GEOS-1.0 would throw an uncatched
exception, GEOS-CVS would handle exceptions and try with a lower
precision (on BufferOp).

> If the CVS API changes are intended could someone increment the version  
> tag (and directory name).

Let's wait for Martin response. It seems that the new interface lacks
the ability of specifying the resulting geometry precision model, that
will get the internal precision model... and this seems to me a bug.

--strk;

> 
> 
> C.
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From carl.anderson at vadose.org  Sun Apr 25 23:58:19 2004
From: carl.anderson at vadose.org (Carl Anderson)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Patch for 1.0.0 for my single issue
Message-ID: <20040426035819.GA17342@vadose.dvg>

strk,

I tracked down the cause of my problem in geos-1.0.0 and backported the  
fix from JTS-1.4

I have made no other changes and the patched lib does not Assert or  
Exception for my test set. (of about 1 million objects).

I feel that this is worthwhile as a short term fix to geos-1.0 while  
the bigger set of changes in CVS are stabilized.

WRT geos-cvs should I wait or can I start searching for the cause of  
the Asserts / Exceptions now?

C.





-------------- next part --------------
A non-text attachment was scrubbed...
Name: geos-1.0-a.patch
Type: text/x-patch
Size: 1379 bytes
Desc: not available
Url : http://lists.osgeo.org/pipermail/geos-devel/attachments/20040425/307ed92f/geos-1.0-a.bin
From strk at keybit.net  Mon Apr 26 05:35:35 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Patch for 1.0.0 for my single issue
In-Reply-To: <20040426035819.GA17342@vadose.dvg>;
	from carl.anderson@vadose.org on Sun, Apr 25, 2004 at 11:58:19PM
	-0400
References: <20040426035819.GA17342@vadose.dvg>
Message-ID: <20040426113535.A75364@freek.keybit.net>

On Sun, Apr 25, 2004 at 11:58:19PM -0400, Carl Anderson wrote:
> strk,
> 
> I tracked down the cause of my problem in geos-1.0.0 and backported the  
> fix from JTS-1.4
> 
> I have made no other changes and the patched lib does not Assert or  
> Exception for my test set. (of about 1 million objects).
> 
> I feel that this is worthwhile as a short term fix to geos-1.0 while  
> the bigger set of changes in CVS are stabilized.

I think Paul takes care of this, he is the package master :)
Maybe distributing your patch would be enough...

> 
> WRT geos-cvs should I wait or can I start searching for the cause of  
> the Asserts / Exceptions now?

I'd start searching... 
--strk;

> 
> C.
> 
> 
> 
> 
> 


> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel


From strk at keybit.net  Mon Apr 26 11:58:38 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] depth mismatch
In-Reply-To: <20040421161853.B26386@freek.keybit.net>;
	from strk@keybit.net on Wed, Apr 21, 2004 at 04:18:53PM +0200
References: <20040421161032.A26386@freek.keybit.net>
	<20040421161853.B26386@freek.keybit.net>
Message-ID: <20040426175838.A94099@freek.keybit.net>

Know what, the depth mismatch exception is now thrown when
trying bufferOriginalPrecision() ...

Since its caller expect any TopologyException to be the
sign it needs to reduce the argument geometry precision,
it does and it gets to a result at the first bufferFixedPrecision
call, but it's being harder to understand what the problem is.

In particular, is the 'depth mismatch' really the kind of exception
expected by BufferOp::computeGeometry(), or should it be threated
differently ??

--strk;

On Wed, Apr 21, 2004 at 04:18:53PM +0200, strk wrote:
> Fiuuuuu!. Found.
> Was an error in DirectedEdgeStar::computeDepths.
> It seems to work now.
> 
> --strk;
> 
> On Wed, Apr 21, 2004 at 04:10:32PM +0200, strk wrote:
> > Hello Martin,
> > I'm trying to figure out why doesn't the buffer operation
> > work in GEOS CVS. Turning some debugging on I receive
> > 
> > 	TopologyException: depth mismatch (150,350)
> > 
> > at every  bufferFixedPrecision() attempt but the one with 0 precision
> > digits (the last one) which in turn drops an empty resultGeometry.
> > 
> > Can you tell me if sizeBasedScaleFactor matches max precision digits ?
> > And more on, what is a depth mismatch exception ?
> > 
> > TIA
> > 
> > --strk;
> > 
> > Here is the complete debugging output:
> > 
> > POINT (150.00 350.00)
> > Trying with 12 max precision digits
> > sizeBasedScaleFactor: 1e+10
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 11 max precision digits
> > sizeBasedScaleFactor: 1e+09
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 10 max precision digits
> > sizeBasedScaleFactor: 1e+08
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 9 max precision digits
> > sizeBasedScaleFactor: 1e+07
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 8 max precision digits
> > sizeBasedScaleFactor: 1e+06
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 7 max precision digits
> > sizeBasedScaleFactor: 100000
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 6 max precision digits
> > sizeBasedScaleFactor: 10000
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 5 max precision digits
> > sizeBasedScaleFactor: 1000
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 4 max precision digits
> > sizeBasedScaleFactor: 100
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 3 max precision digits
> > sizeBasedScaleFactor: 10
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 2 max precision digits
> > sizeBasedScaleFactor: 1
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 1 max precision digits
> > sizeBasedScaleFactor: 0.1
> > TopologyException: depth mismatch at  (150,350)
> > Trying with 0 max precision digits
> > sizeBasedScaleFactor: 0.01
> > resultGeom != NULL
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From mbdavis at VividSolutions.com  Mon Apr 26 12:11:04 2004
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0274F51EE@venus.VividSolutions.com>

> I've checked out JTS-1.4 and the change is there too, 
> although not documented in the release notes and mismatching with the 
> comment that preceedes its definition. I suppose it's a bug
> in JTS ported to GEOS. Martin ?

> Let's wait for Martin response. It seems that the new 
> interface lacks the ability of specifying the resulting 
> geometry precision model, that will get the internal 
> precision model... and this seems to me a bug.

This isn't a bug in JTS.  The signature of the
GeometryFactory#toGeometry method is intentional.   The precision model
and other metadata is already known by the GeometryFactory, so there's
no need to pass it to the toGeometry method.  Really, the toGeometry
method is only there to support converting Envelopes to a Geometry -
it's not intended for outside use.  Probably should be package-private
in JTS.

Make sense?


Martin Davis, Senior Technical Architect
Vivid Solutions Inc.
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: strk [mailto:strk@keybit.net] 
> Sent: April 25, 2004 2:33 AM
> To: Carl Anderson; Martin Davis
> Cc: geos-devel@geos.refractions.net
> Subject: Re: [geos-devel] Current Status
> 
> 
> On Fri, Apr 23, 2004 at 09:56:31PM -0400, Carl Anderson wrote:
> > 
> > Is the current API creep in CVS intended?
> > toGeometry(Envelope *, ... ) has changed and no long 
> compiles against
> > PostGIS cvs nor PostGIS 0.8.1
> 
> I've checked out JTS-1.4 and the change is there too, 
> although not documented in the release notes and mismatching with the 
> comment that preceedes its definition. I suppose it's a bug
> in JTS ported to GEOS. Martin ?
> 
> > 
> > I ask to see where I should try to plug bugs?
> > 
> > the CVS code is more delicate (has more instance of 
> SIGABRTs) than the
> > geos-1.0 code.
> > 
> > The CVS work has promising elements in it but while the 1.0 
> code only 
> > SIGABRT'ed on 15 of 200,000 geometries the CVS code 
> SIGABRTs on more 
> > than 200 of same set.
> > 
> > The 1.0 code only
> >    SIGABRTs in the BufferOp routine
> > and CVS
> >    SIGABRTs in noding/IteratedNoder.cpp and strtree and other places
> > but not BufferOp
> > 
> > remembe that my test set is by definition not unlimited and other
> > instances of trouble may be waiting in both CVS and 1.0.
> > 
> > so should I chill and wait for CVs to settle, work on submitting a
> > patch against 1.0 or work on CVS.
> 
> Current work on GEOS is focused on CVS, but if you found 
> urgent bugs in GEOS-1.0 I think you should submit patches 
> agains it too, in order to get a GEOS-1.1 release.
> 
> Could SIGABRTs have to do with exceptions ?
> I'm asking because in cvs GEOS (as in jts-1.4) there is an 
> exception mechanism used to reduce precision in case of 
> rubustness-related topological errors, so while GEOS-1.0 
> would throw an uncatched exception, GEOS-CVS would handle 
> exceptions and try with a lower precision (on BufferOp).
> 
> > If the CVS API changes are intended could someone increment the 
> > version
> > tag (and directory name).
> 
> Let's wait for Martin response. It seems that the new 
> interface lacks the ability of specifying the resulting 
> geometry precision model, that will get the internal 
> precision model... and this seems to me a bug.
> 
> --strk;
> 
> > 
> > 
> > C.
> > 
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel@geos.refractions.net 
> > http://geos.refractions.net/mailman/listinfo/geos-devel
> 

From strk at keybit.net  Mon Apr 26 12:20:42 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
In-Reply-To: <5A94289A9268514C8D6C0F1FF44BA0274F51EE@venus.VividSolutions.com>;
	from mbdavis@VividSolutions.com on Mon, Apr 26, 2004 at 09:11:04AM
	-0700
References: <5A94289A9268514C8D6C0F1FF44BA0274F51EE@venus.VividSolutions.com>
Message-ID: <20040426182042.B94099@freek.keybit.net>

On Mon, Apr 26, 2004 at 09:11:04AM -0700, Martin Davis wrote:
> > I've checked out JTS-1.4 and the change is there too, 
> > although not documented in the release notes and mismatching with the 
> > comment that preceedes its definition. I suppose it's a bug
> > in JTS ported to GEOS. Martin ?
> 
> > Let's wait for Martin response. It seems that the new 
> > interface lacks the ability of specifying the resulting 
> > geometry precision model, that will get the internal 
> > precision model... and this seems to me a bug.
> 
> This isn't a bug in JTS.  The signature of the
> GeometryFactory#toGeometry method is intentional.   The precision model
> and other metadata is already known by the GeometryFactory, so there's
> no need to pass it to the toGeometry method.  Really, the toGeometry
> method is only there to support converting Envelopes to a Geometry -
> it's not intended for outside use.  Probably should be package-private
> in JTS.
> 
> Make sense?

Sure, so the bug is in the comment alone :)
If that function is not part of the API, what code was trying to use
it Carl ?

--strk;

> 
> 
> Martin Davis, Senior Technical Architect
> Vivid Solutions Inc.
> Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
> Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046
> 
> 
> > -----Original Message-----
> > From: strk [mailto:strk@keybit.net] 
> > Sent: April 25, 2004 2:33 AM
> > To: Carl Anderson; Martin Davis
> > Cc: geos-devel@geos.refractions.net
> > Subject: Re: [geos-devel] Current Status
> > 
> > 
> > On Fri, Apr 23, 2004 at 09:56:31PM -0400, Carl Anderson wrote:
> > > 
> > > Is the current API creep in CVS intended?
> > > toGeometry(Envelope *, ... ) has changed and no long 
> > compiles against
> > > PostGIS cvs nor PostGIS 0.8.1
> > 
> > I've checked out JTS-1.4 and the change is there too, 
> > although not documented in the release notes and mismatching with the 
> > comment that preceedes its definition. I suppose it's a bug
> > in JTS ported to GEOS. Martin ?
> > 
> > > 
> > > I ask to see where I should try to plug bugs?
> > > 
> > > the CVS code is more delicate (has more instance of 
> > SIGABRTs) than the
> > > geos-1.0 code.
> > > 
> > > The CVS work has promising elements in it but while the 1.0 
> > code only 
> > > SIGABRT'ed on 15 of 200,000 geometries the CVS code 
> > SIGABRTs on more 
> > > than 200 of same set.
> > > 
> > > The 1.0 code only
> > >    SIGABRTs in the BufferOp routine
> > > and CVS
> > >    SIGABRTs in noding/IteratedNoder.cpp and strtree and other places
> > > but not BufferOp
> > > 
> > > remembe that my test set is by definition not unlimited and other
> > > instances of trouble may be waiting in both CVS and 1.0.
> > > 
> > > so should I chill and wait for CVs to settle, work on submitting a
> > > patch against 1.0 or work on CVS.
> > 
> > Current work on GEOS is focused on CVS, but if you found 
> > urgent bugs in GEOS-1.0 I think you should submit patches 
> > agains it too, in order to get a GEOS-1.1 release.
> > 
> > Could SIGABRTs have to do with exceptions ?
> > I'm asking because in cvs GEOS (as in jts-1.4) there is an 
> > exception mechanism used to reduce precision in case of 
> > rubustness-related topological errors, so while GEOS-1.0 
> > would throw an uncatched exception, GEOS-CVS would handle 
> > exceptions and try with a lower precision (on BufferOp).
> > 
> > > If the CVS API changes are intended could someone increment the 
> > > version
> > > tag (and directory name).
> > 
> > Let's wait for Martin response. It seems that the new 
> > interface lacks the ability of specifying the resulting 
> > geometry precision model, that will get the internal 
> > precision model... and this seems to me a bug.
> > 
> > --strk;
> > 
> > > 
> > > 
> > > C.
> > > 
> > > _______________________________________________
> > > geos-devel mailing list
> > > geos-devel@geos.refractions.net 
> > > http://geos.refractions.net/mailman/listinfo/geos-devel
> > 

From pramsey at refractions.net  Mon Apr 26 18:03:43 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
In-Reply-To: <20040424015631.GA16003@vadose.dvg>
Message-ID: <9526BFCA-97CD-11D8-BB76-000393D33C2E@refractions.net>


On Friday, April 23, 2004, at 06:56 PM, Carl Anderson wrote:
>
> If the CVS API changes are intended could someone increment the 
> version tag (and directory name).

Carl, I have bumped up the directory name (and library version) tag, 
have not tagged CVS yet (would like go back and do a post-facto tag of 
1.0).  I apologize, you got caught in a silent merge of major work into 
CVS. We should have branched, but just dumped into HEAD instead. I am 
hoping the API does not change (Sandro, could you confirm that we are 
not f***ing with the API?) but the reliability and speed of some of the 
operations (buffer, intersection, union) should improve, not get worse.

      Paul Ramsey
      Refractions Research
      Email: pramsey@refractions.net
      Phone: (250) 885-0632


From carl.anderson at vadose.org  Mon Apr 26 22:09:20 2004
From: carl.anderson at vadose.org (Carl Anderson)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
In-Reply-To: <20040426182042.B94099@freek.keybit.net> (from strk@keybit.net on
	Mon, Apr 26, 2004 at 12:20:42 -0400)
References: <5A94289A9268514C8D6C0F1FF44BA0274F51EE@venus.VividSolutions.com>
	<20040426182042.B94099@freek.keybit.net>
Message-ID: <20040427020919.GA32596@vadose.dvg>

On 04/26/2004 12:20:42 PM, strk wrote:
> On Mon, Apr 26, 2004 at 09:11:04AM -0700, Martin Davis wrote:
...
> > no need to pass it to the toGeometry method.  Really, the  
> toGeometry
> > method is only there to support converting Envelopes to a Geometry  
> -
> > it's not intended for outside use.  Probably should be
> package-private
> > in JTS.
> >
> > Make sense?
> 
> Sure, so the bug is in the comment alone :)
> If that function is not part of the API, what code was trying to use
> it Carl ?
> 
> --strk;

in PostGIS-0.8.1
postgis_geos_wrapper.cpp:
    g = geomFactory->toGeometry(envelope,geomFactory-
>getPrecisionModel(), SRID);

matches a function in GEOS-1.0 but does not match anything in GEOS-CVS

Pls remember that my original email was addressing two seperate issues
   (1) - the API creep
   (2) - the stability of the geos library due to Asserts /
        Exceptions / SegFaults.  Especially in the context of the
        C program Postgres

the latter involve bugs, the former with tagging and whether fixes to  
1.0.0 or CVS would be appropriate.

C.

--
Carl Anderson
GIS Manager Fulton County Georgia
carl.anderson@vadose.org
carl.anderson@co.fulton.ga.us

From strk at keybit.net  Tue Apr 27 04:07:23 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
In-Reply-To: <20040427020919.GA32596@vadose.dvg>;
	from carl.anderson@vadose.org on Mon, Apr 26, 2004 at 10:09:20PM
	-0400
References: <5A94289A9268514C8D6C0F1FF44BA0274F51EE@venus.VividSolutions.com>
	<20040426182042.B94099@freek.keybit.net>
	<20040427020919.GA32596@vadose.dvg>
Message-ID: <20040427100723.A659@freek.keybit.net>

On Mon, Apr 26, 2004 at 10:09:20PM -0400, Carl Anderson wrote:
> On 04/26/2004 12:20:42 PM, strk wrote:
> > On Mon, Apr 26, 2004 at 09:11:04AM -0700, Martin Davis wrote:
> ...
> > > no need to pass it to the toGeometry method.  Really, the  
> > toGeometry
> > > method is only there to support converting Envelopes to a Geometry  
> > -
> > > it's not intended for outside use.  Probably should be
> > package-private
> > > in JTS.
> > >
> > > Make sense?
> > 
> > Sure, so the bug is in the comment alone :)
> > If that function is not part of the API, what code was trying to use
> > it Carl ?
> > 
> > --strk;
> 
> in PostGIS-0.8.1
> postgis_geos_wrapper.cpp:
>     g = geomFactory->toGeometry(envelope,geomFactory-
> >getPrecisionModel(), SRID);
> 
> matches a function in GEOS-1.0 but does not match anything in GEOS-CVS

That makes sense too. I've changed that function to create the
resulting geometry from a coordinate list instead (the envelope
was initializated just for that purpose, it's the converter func).

Note that the API still have some changes, as I try enforcing
const correctness in the code, so you don't have binary
compatibility (you'll have to recompile client code).

If people here thinks this is too hard to accept I'll have 
to revert all 'const' specifications back to 1.0 status, which
was neither complete nor correct in that.

Note that the GEOS API cannot be the same of JTS one, as it 
needs to include specifications about who has to care about
the management of the passed objects.

Unfortunately we cannot tell the GEOS API itself to be stable
(see TODO), even for version 1.0. The file doc/example.cpp,
as stated in the initial comments, was an attempt at discussing
this in front of a real world example.

--strk;

> 
> Pls remember that my original email was addressing two seperate issues
>    (1) - the API creep
>    (2) - the stability of the geos library due to Asserts /
>         Exceptions / SegFaults.  Especially in the context of the
>         C program Postgres
> 
> the latter involve bugs, the former with tagging and whether fixes to  
> 1.0.0 or CVS would be appropriate.
> 
> C.
> 
> --
> Carl Anderson
> GIS Manager Fulton County Georgia
> carl.anderson@vadose.org
> carl.anderson@co.fulton.ga.us

From strk at keybit.net  Wed Apr 28 09:59:46 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Current Status
In-Reply-To: <20040424015631.GA16003@vadose.dvg>;
	from carl.anderson@vadose.org on Fri, Apr 23, 2004 at 09:56:31PM
	-0400
References: <20040424015631.GA16003@vadose.dvg>
Message-ID: <20040428155946.A13927@freek.keybit.net>

On Fri, Apr 23, 2004 at 09:56:31PM -0400, Carl Anderson wrote:
> 
> Is the current API creep in CVS intended?
> toGeometry(Envelope *, ... ) has changed and no long compiles against  
> PostGIS cvs nor PostGIS 0.8.1
> 
> I ask to see where I should try to plug bugs?
> 
> the CVS code is more delicate (has more instance of SIGABRTs) than the  
> geos-1.0 code.
> 
> The CVS work has promising elements in it but while the 1.0 code
> only SIGABRT'ed on 15 of 200,000 geometries the CVS code
> SIGABRTs on more than 200 of same set.
> 
> The 1.0 code only
>    SIGABRTs in the BufferOp routine
> and CVS
>    SIGABRTs in noding/IteratedNoder.cpp and strtree and other places  
> but not BufferOp

I've found the IteratedNoder SIGABRT cause:
  AssertionFailedException: Should never reach here: AbstractSTRtree::query encountered an unsupported childBoundable type

Since IteratedNoder::node is a recursive function, the exception mechanism
might not be able to realize who should get the thrown exception.
I've tryed catching the exception in IteratedNoder::node itself, printing
it to the screen and re-throw it again.
Then from BufferBuilder::computeNodedEdges I've tryed to catch that
same exception (it calls IteratedNoder::Node) but I get a SIGABORT
before being able to print the exception.

Beside fixing the exception cause, does anyone have an hint on
how to handle this ? 
Can you confirm this behaviour ?
Should we use a special return value ?

--strk;

> 
> remembe that my test set is by definition not unlimited and other  
> instances of trouble may be waiting in both CVS and 1.0.
> 
> so should I chill and wait for CVs to settle, work on submitting a  
> patch against 1.0 or work on CVS.
> 
> 
> If the CVS API changes are intended could someone increment the version  
> tag (and directory name).
> 
> 
> C.
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From strk at keybit.net  Wed Apr 28 12:02:09 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: [Valgrind-users] STL: unguarded_linear_insert
In-Reply-To: <1083167180.18708.1.camel@zion.2good.net>;
	from twogood@users.sourceforge.net on Wed, Apr 28, 2004 at
	05:46:21PM +0200
References: <20040428173019.A14840@freek.keybit.net>
	<1083167180.18708.1.camel@zion.2good.net>
Message-ID: <20040428180209.B14840@freek.keybit.net>

On request, this is more valgrind output:

==12560== Invalid read of size 4
==12560==    at 0x3C0AFAA3: void std::__unguarded_linear_insert<__gnu_cxx::__nor
mal_iterator<geos::Boundable**, std::vector<geos::Boundable*, std::allocator<geo
s::Boundable*> > >, geos::Boundable*, bool (*)(geos::Boundable*, geos::Boundable
*)>(__gnu_cxx::__normal_iterator<geos::Boundable**, std::vector<geos::Boundable*
, std::allocator<geos::Boundable*> > >, geos::Boundable*, bool (*)(geos::Boundab
le*, geos::Boundable*)) (stl_iterator.h:602)
==12560==    by 0x3C0AF78C: _ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_i
teratorIPPN4geos9BoundableESt6vectorIS4_SaIS4_EEEEPFbS4_S4_EEvT_SC_T0_ (stl_iter
ator.h:602)
==12560==    by 0x3C0B12B0: geos::STRtree::createParentBoundables(std::vector<ge
os::Boundable*, std::allocator<geos::Boundable*> >*, int) (stl_algo.h:2212)
==12560==    by 0x3C0AF088: geos::AbstractSTRtree::createHigherLevels(std::vecto
r<geos::Boundable*, std::allocator<geos::Boundable*> >*, int) (AbstractSTRtree.c
pp:133)

And this is the code where 'sort' is called:

vector<Boundable*>*
STRtree::createParentBoundables(vector<Boundable*> *childBoundables, int newLevel)
{
        Assert::isTrue(!childBoundables->empty());
        int minLeafCount=(int) ceil((double)childBoundables->size()/(double)getNodeCapacity());
        vector<Boundable*> *sortedChildBoundables=new vector<Boundable*>(childBoundables->begin(),childBoundables->end());
        sort(sortedChildBoundables->begin(),sortedChildBoundables->end(),xComparator);
 

Commenting out the 'sort' call algorithm is broken, but I don't get
segmentation faults.

--strk;


On Wed, Apr 28, 2004 at 05:46:21PM +0200, David Eriksson wrote:
> On Wed, 2004-04-28 at 17:30, strk wrote:
> > I've got the following error from valgrind:
> > 
> > ==26245== Invalid read of size 4
> > ==26245==    at 0x3C0AFB23: void std::__unguarded_linear_insert<__gnu_cxx::__nor
> > mal_iterator<geos::Boundable**, std::vector<geos::Boundable*, std::allocator<geo
> > s::Boundable*> > >, geos::Boundable*, bool (*)(geos::Boundable*, geos::Boundable
> > *)>(__gnu_cxx::__normal_iterator<geos::Boundable**, std::vector<geos::Boundable*
> > , std::allocator<geos::Boundable*> > >, geos::Boundable*, bool (*)(geos::Boundab
> > le*, geos::Boundable*)) (stl_iterator.h:602)
> > ==26245==    by 0x3C0AF80C: _ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_i
> > teratorIPPN4geos9BoundableESt6vectorIS4_SaIS4_EEEEPFbS4_S4_EEvT_SC_T0_ (stl_iter
> > ator.h:602)
> > 
> > Can anybody help me understanding the circumstances in which
> > this happen ?
> 
> In order for you to get help I suggest you provide more of the valgrind
> output and relevant parts of source code.
> 
> -- 
> Regards,
>                -\- David Eriksson -/-
> 
>         SynCE - http://synce.sourceforge.net
>        CalcEm - http://calcem.sourceforge.net
>       ScummVM - http://scummvm.sourceforge.net
>      Desquirr - http://desquirr.sourceforge.net
>   SetiWrapper - http://setiwrapper.sourceforge.net

From pramsey at refractions.net  Thu Apr 29 17:52:01 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: [Mapserver-users] GEOS: buffer function for
 MULTIPOLYGON geometry object
In-Reply-To: <1083270025.40916389e8b03@webmail.oregonstate.edu>
References: <1083270025.40916389e8b03@webmail.oregonstate.edu>
Message-ID: <40917901.6070100@refractions.net>

What is isvalid() return for your geometry? True or false? A 
multipolygon as you describe sounds suspiciously like an invalid shape.

songzh@cs.orst.edu wrote:

> Hello list:
> 
>   I recently tested GEOS 'buffer(MULTIPOLYGON_geo_column, 100)' function and
> found something strange:
>   1) I manually created a MULTIPOLYGON object which is shown as two trangles
> connected by one point.
>   2) then I issued command as: 
> "update motelsites set buffer_py=buffer(the_geom_py,500) where gid=36;" 
>   3) The strange thing is: only the left triangle has been buffered and the
> buffer area has been shown around this triangle. The right triangle didn't show
> up its buffered area at all.
> 
>   Did I do anything wrong or there is some problem with the GEOS's buffer
> function to deal with MULTIPOLYGON object ?
>   Thanks for any advice!
> 
> 
> Zhigang Song
> 
> 
> _______________________________________________
> Mapserver-users mailing list
> Mapserver-users@lists.gis.umn.edu
> http://lists.gis.umn.edu/mailman/listinfo/mapserver-users


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_

From mbdavis at VividSolutions.com  Thu Apr 29 19:07:32 2004
From: mbdavis at VividSolutions.com (Martin Davis)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Re: [Mapserver-users] GEOS: buffer function for
	MULTIPOLYGON geometry object
Message-ID: <5A94289A9268514C8D6C0F1FF44BA0274F5225@venus.VividSolutions.com>

Actually in OGC the components of a MultiPolygon can touch at single
points, so this can't be ruled out as invalid a priori.

However - submitters, you should ALWAYS include the WKT for the geometry
inputs with questions of this kind.  Otherwise there's no way to debug
the problem.

Martin Davis, Senior Technical Architect
Vivid Solutions Inc.
Suite #1A-2328 Government Street Victoria, B.C. V8T 5G5
Phone: (250) 385 6040 - Local 308 Fax: (250) 385 6046


> -----Original Message-----
> From: Paul Ramsey [mailto:pramsey@refractions.net] 
> Sent: April 29, 2004 2:52 PM
> To: songzh@cs.orst.edu
> Cc: GEOS Development List
> Subject: [geos-devel] Re: [Mapserver-users] GEOS: buffer 
> function for MULTIPOLYGON geometry object
> 
> 
> What is isvalid() return for your geometry? True or false? A 
> multipolygon as you describe sounds suspiciously like an 
> invalid shape.
> 
> songzh@cs.orst.edu wrote:
> 
> > Hello list:
> > 
> >   I recently tested GEOS 'buffer(MULTIPOLYGON_geo_column, 100)' 
> > function and found something strange:
> >   1) I manually created a MULTIPOLYGON object which is shown as two 
> > trangles connected by one point.
> >   2) then I issued command as:
> > "update motelsites set buffer_py=buffer(the_geom_py,500) 
> where gid=36;" 
> >   3) The strange thing is: only the left triangle has been 
> buffered and the
> > buffer area has been shown around this triangle. The right 
> triangle didn't show
> > up its buffered area at all.
> > 
> >   Did I do anything wrong or there is some problem with the GEOS's 
> > buffer function to deal with MULTIPOLYGON object ?
> >   Thanks for any advice!
> > 
> > 
> > Zhigang Song
> > 
> > 
> > _______________________________________________
> > Mapserver-users mailing list Mapserver-users@lists.gis.umn.edu
> > http://lists.gis.umn.edu/mailman/listinfo/mapserver-users
> 
> 
> -- 
>        __
>       /
>       | Paul Ramsey
>       | Refractions Research
>       | Email: pramsey@refractions.net
>       | Phone: (250) 885-0632
>       \_
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net 
> http://geos.refractions.net/mailman/listinfo/geos-devel
> 

From strk at keybit.net  Fri Apr 30 05:37:30 2004
From: strk at keybit.net (strk)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] Exception policy
In-Reply-To: <20040427020919.GA32596@vadose.dvg>;
	from carl.anderson@vadose.org on Mon, Apr 26, 2004 at 10:09:20PM
	-0400
References: <5A94289A9268514C8D6C0F1FF44BA0274F51EE@venus.VividSolutions.com>
	<20040426182042.B94099@freek.keybit.net>
	<20040427020919.GA32596@vadose.dvg>
Message-ID: <20040430113730.A32446@freek.keybit.net>

About the SIGABORT, I've found the problem.
It's my fault.
Trying to make the code strict I've added some throw() specifications
and I missed to include some of the possible trhown exceptions,
in particular AssertionFailedExceptions.

I've now modified some of the code to specify a GEOSException *,
from which AssertionFailedExecption derives.

I did not known that, but I've learned that once you add a throw
specificaion you cannot catch exceptions not specified in the
list, but you're bound to receive a terminate()->abort() call.

Now. Since it is in theory possible that exceptions other then
GEOSException are thrown (out of memory for example), how should
GEOS act, being it a library ?
Should we completely omit throw specifications ?
Is the default abort() acceptable in this case ?
Should we add 'exception' to the specification list ?

Comments welcome.

--strk;



On Mon, Apr 26, 2004 at 10:09:20PM -0400, Carl Anderson wrote:
> On 04/26/2004 12:20:42 PM, strk wrote:
> > On Mon, Apr 26, 2004 at 09:11:04AM -0700, Martin Davis wrote:
> ...
> > > no need to pass it to the toGeometry method.  Really, the  
> > toGeometry
> > > method is only there to support converting Envelopes to a Geometry  
> > -
> > > it's not intended for outside use.  Probably should be
> > package-private
> > > in JTS.
> > >
> > > Make sense?
> > 
> > Sure, so the bug is in the comment alone :)
> > If that function is not part of the API, what code was trying to use
> > it Carl ?
> > 
> > --strk;
> 
> in PostGIS-0.8.1
> postgis_geos_wrapper.cpp:
>     g = geomFactory->toGeometry(envelope,geomFactory-
> >getPrecisionModel(), SRID);
> 
> matches a function in GEOS-1.0 but does not match anything in GEOS-CVS
> 
> Pls remember that my original email was addressing two seperate issues
>    (1) - the API creep
>    (2) - the stability of the geos library due to Asserts /
>         Exceptions / SegFaults.  Especially in the context of the
>         C program Postgres
> 
> the latter involve bugs, the former with tagging and whether fixes to  
> 1.0.0 or CVS would be appropriate.
> 
> C.
> 
> --
> Carl Anderson
> GIS Manager Fulton County Georgia
> carl.anderson@vadose.org
> carl.anderson@co.fulton.ga.us
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From pramsey at refractions.net  Fri Apr 30 16:19:16 2004
From: pramsey at refractions.net (Paul Ramsey)
Date: Fri Nov  2 20:52:27 2007
Subject: [geos-devel] [Fwd: Re: [Mapserver-users] GEOS: buffer function for
 MULTIPOLYGON geometry object]
Message-ID: <4092B4C4.30807@refractions.net>


-- 
       __
      /
      | Paul Ramsey
      | Refractions Research
      | Email: pramsey@refractions.net
      | Phone: (250) 885-0632
      \_

-------------- next part --------------
An embedded message was scrubbed...
From: songzh@cs.orst.edu
Subject: Re: [Mapserver-users] GEOS: buffer function for MULTIPOLYGON geometry
	object
Date: Fri, 30 Apr 2004 13:20:50 -0700
Size: 4025
Url: http://lists.osgeo.org/pipermail/geos-devel/attachments/20040430/6d9075d9/bufferfunctionforMULTIPOLYGONgeometryobject.mht
