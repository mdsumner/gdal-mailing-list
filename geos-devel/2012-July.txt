From geos at chriskrycho.com  Mon Jul  2 11:44:09 2012
From: geos at chriskrycho.com (Chris Krycho @ GEOS)
Date: Mon, 2 Jul 2012 13:44:09 -0500
Subject: [geos-devel] C API / DLL only?
Message-ID: <CAOoiDfSEv8DZNhmHd5eGP34vfJnt6=dqmd34yJFD1qvTMsY0Cw@mail.gmail.com>

Sorry if this has been asked before, but I have not been able to find it
after a couple of days of Googling, including the list archives.

I've just started work on an existing piece of in-house software that uses
GEOS, which is built against the C API. So far so good, and it builds just
fine that way. However, I was looking to see if there's a way to use the C
API with a statically compiled library rather than the DLL, as that would
substantially simply use of the in-house software. (It would be nice to be
able to just distribute the executable, and not worry about passing around
library files as well; there's no installer as it's just an internal tool.)

However, from what I can see in the code, that doesn't appear to be
supported. Is that correct? Is it conceivably doable to modify the
makefiles to support building a static library rather than a dynamic one?

I should note, too, that I'm doing all this with MinGW/msys, and the latest
builds just fine under that configuration.

If there's a way to do this, I'm willing to put in *some* legwork to make
it happen and contribute that back to the project, but it's not worth more
than a day or two of work for my employer and I'm not *particularly* familiar
with makefiles.

If I'm just missing something obvious in the available configure and make
options, call me dumb and tell me what I'm missing. ;)

Thanks!
Chris Krycho
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20120702/05e5d569/attachment.html>

From hobu.inc at gmail.com  Mon Jul  2 12:20:04 2012
From: hobu.inc at gmail.com (Howard Butler)
Date: Mon, 2 Jul 2012 14:20:04 -0500
Subject: [geos-devel] C API / DLL only?
In-Reply-To: <CAOoiDfSEv8DZNhmHd5eGP34vfJnt6=dqmd34yJFD1qvTMsY0Cw@mail.gmail.com>
References: <CAOoiDfSEv8DZNhmHd5eGP34vfJnt6=dqmd34yJFD1qvTMsY0Cw@mail.gmail.com>
Message-ID: <4494B741-58EC-45E2-8280-F8FF20CDA2FF@gmail.com>


On Jul 2, 2012, at 1:44 PM, Chris Krycho @ GEOS wrote:

> Sorry if this has been asked before, but I have not been able to find it after a couple of days of Googling, including the list archives.
> 
> I've just started work on an existing piece of in-house software that uses GEOS, which is built against the C API. So far so good, and it builds just fine that way. However, I was looking to see if there's a way to use the C API with a statically compiled library rather than the DLL, as that would substantially simply use of the in-house software. (It would be nice to be able to just distribute the executable, and not worry about passing around library files as well; there's no installer as it's just an internal tool.)
> 
> However, from what I can see in the code, that doesn't appear to be supported. Is that correct? Is it conceivably doable to modify the makefiles to support building a static library rather than a dynamic one?
> 
> I should note, too, that I'm doing all this with MinGW/msys, and the latest builds just fine under that configuration.
> 
> If there's a way to do this, I'm willing to put in some legwork to make it happen and contribute that back to the project, but it's not worth more than a day or two of work for my employer and I'm not particularly familiar with makefiles.
> 
> If I'm just missing something obvious in the available configure and make options, call me dumb and tell me what I'm missing. ;)

If you're willing to get your hands dirty with CMake, you should be able to modify the add_library C API invocation from SHARED to STATIC to get the desired effect.  Attached is a patch that should get you what you want.



Hope this helps,

Howard
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20120702/f87ae829/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: static-geos.patch
Type: application/octet-stream
Size: 974 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20120702/f87ae829/attachment.obj>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20120702/f87ae829/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 495 bytes
Desc: Message signed with OpenPGP using GPGMail
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20120702/f87ae829/attachment.pgp>

From jbensabat at ewre.com  Mon Jul  2 12:44:14 2012
From: jbensabat at ewre.com (jbensabat)
Date: Mon, 2 Jul 2012 19:44:14 +0000
Subject: [geos-devel] =?iso-8859-8-i?b?+fk=?=
Message-ID: <443869E9-4916-47B9-87D1-4E43F3B905F4@ewre.com>



Jacob Bensabat from my IPhone


From strk at keybit.net  Tue Jul  3 00:30:33 2012
From: strk at keybit.net (Sandro Santilli)
Date: Tue, 3 Jul 2012 09:30:33 +0200
Subject: [geos-devel] C API / DLL only?
In-Reply-To: <CAOoiDfSEv8DZNhmHd5eGP34vfJnt6=dqmd34yJFD1qvTMsY0Cw@mail.gmail.com>
References: <CAOoiDfSEv8DZNhmHd5eGP34vfJnt6=dqmd34yJFD1qvTMsY0Cw@mail.gmail.com>
Message-ID: <20120703073033.GA29838@gnash>

On Mon, Jul 02, 2012 at 01:44:09PM -0500, Chris Krycho @ GEOS wrote:

> I've just started work on an existing piece of in-house software that uses
> GEOS, which is built against the C API. So far so good, and it builds just
> fine that way. However, I was looking to see if there's a way to use the C
> API with a statically compiled library rather than the DLL, as that would
> substantially simply use of the in-house software. (It would be nice to be
> able to just distribute the executable, and not worry about passing around
> library files as well; there's no installer as it's just an internal tool.)

It should be possible to link the C-API statically with the C++ one, but make
sure not to take off the freedom of the user to modify the version of GEOS
compiled in as that would be a violation of its license (LGPL).
You would comply by also providing source code or linkable object modules.

--strk; 

  ,------o-. 
  |   __/  |    Delivering high quality PostGIS 2.1
  |  / 2.1 |    http://strk.keybit.net - http://vizzuality.com
  `-o------'


From geos-trac at osgeo.org  Tue Jul  3 07:41:28 2012
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 03 Jul 2012 14:41:28 -0000
Subject: [geos-devel] [GEOS] #568: mingw64 chain compiling win32 regress
	failure
Message-ID: <044.2eb834ea98a3c8068de517ea53ebe66c@osgeo.org>

#568: mingw64 chain compiling win32 regress failure
------------------------+---------------------------------------------------
 Reporter:  robe        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 The good news is I get 3 fewer failures compiling my 32-bit under the ming
 64 chain.  The bad news I still get a failure.  See attached file. This is
 using gcc 4.5.4 (I suspect I probably still have issues with 4.6+)

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/568>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mateusz at loskot.net  Tue Jul  3 09:16:47 2012
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 3 Jul 2012 17:16:47 +0100
Subject: [geos-devel] creating & importing geos-3.3.3 static libgeos.lib
 on Windows
In-Reply-To: <CAHZBNKbLSe268vH_GRwyn4jVT=FYr2s+S8uY9+3KjNMCXReiXA@mail.gmail.com>
References: <mailman.843.1338389522.24436.geos-devel@lists.osgeo.org>
	<CAHZBNKbLSe268vH_GRwyn4jVT=FYr2s+S8uY9+3KjNMCXReiXA@mail.gmail.com>
Message-ID: <CABUeae9bUjMtCjcJ4NDfhiz2TO6tWj3eT4_-fBae4+Zoigu7ng@mail.gmail.com>

On 30 May 2012 15:54, Dave Cottlehuber <dch at apache.org> wrote:
> Hi,
>
> I'm not sure how to include geos-3.3.3 as a static library into a
> project, that will use an erlang<->C DLL interface.
>
> According to https://github.com/libgeos/libgeos/commit/49463453fa2e871d1686c4c7d0c2efa5c280f92d

Dave,

Could you check the latest trunk and confirm if it is still an issue?

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From geos-trac at osgeo.org  Tue Jul  3 09:20:10 2012
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 03 Jul 2012 16:20:10 -0000
Subject: [geos-devel] [GEOS] #487: Port Delaunay Triangulation API from
	JTS
In-Reply-To: <044.24fc48b0fe9e01f4b7a8f211dd4dcbf8@osgeo.org>
References: <044.24fc48b0fe9e01f4b7a8f211dd4dcbf8@osgeo.org>
Message-ID: <053.f2a65463bf7fc307aa37ade2fa82994a@osgeo.org>

#487: Port Delaunay Triangulation API from JTS
-------------------------+--------------------------------------------------
 Reporter:  strk         |        Owner:  geos-devel@?              
     Type:  enhancement  |       Status:  closed                    
 Priority:  major        |    Milestone:  3.4.0                     
Component:  Default      |      Version:  svn-trunk                 
 Severity:  Unassigned   |   Resolution:  fixed                     
 Keywords:               |  
-------------------------+--------------------------------------------------

Comment(by strk):

 Benjamin: I noticed the triangulation does not retain the Z value. Is this
 the case in JTS as well ?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/487#comment:14>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Jul  5 09:08:56 2012
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 05 Jul 2012 16:08:56 -0000
Subject: [geos-devel] [GEOS] #487: Port Delaunay Triangulation API from
	JTS
In-Reply-To: <044.24fc48b0fe9e01f4b7a8f211dd4dcbf8@osgeo.org>
References: <044.24fc48b0fe9e01f4b7a8f211dd4dcbf8@osgeo.org>
Message-ID: <053.b6510ec115428c5255b1f89f980219e5@osgeo.org>

#487: Port Delaunay Triangulation API from JTS
-------------------------+--------------------------------------------------
 Reporter:  strk         |        Owner:  geos-devel@?              
     Type:  enhancement  |       Status:  closed                    
 Priority:  major        |    Milestone:  3.4.0                     
Component:  Default      |      Version:  svn-trunk                 
 Severity:  Unassigned   |   Resolution:  fixed                     
 Keywords:               |  
-------------------------+--------------------------------------------------

Comment(by blc56):

 I'm not sure off the top of my head. I'll check on the JTS behavior. I'll
 be able to get to it before the end of next week.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/487#comment:15>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Jul  5 09:17:14 2012
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 05 Jul 2012 16:17:14 -0000
Subject: [geos-devel] [GEOS] #570: Add Z support in delaunay triangulation
Message-ID: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>

#570: Add Z support in delaunay triangulation
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 Following up #487 (comment:14) this ticket is to add Z support to Delaunay
 triangulation

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/570>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Jul  5 09:17:49 2012
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 05 Jul 2012 16:17:49 -0000
Subject: [geos-devel] [GEOS] #487: Port Delaunay Triangulation API from
	JTS
In-Reply-To: <044.24fc48b0fe9e01f4b7a8f211dd4dcbf8@osgeo.org>
References: <044.24fc48b0fe9e01f4b7a8f211dd4dcbf8@osgeo.org>
Message-ID: <053.5b3bb7315d9593ae532caa9a2e13dd44@osgeo.org>

#487: Port Delaunay Triangulation API from JTS
-------------------------+--------------------------------------------------
 Reporter:  strk         |        Owner:  geos-devel@?              
     Type:  enhancement  |       Status:  closed                    
 Priority:  major        |    Milestone:  3.4.0                     
Component:  Default      |      Version:  svn-trunk                 
 Severity:  Unassigned   |   Resolution:  fixed                     
 Keywords:               |  
-------------------------+--------------------------------------------------

Comment(by strk):

 I created #570 for that, please followup there. Thanks!

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/487#comment:16>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mwtoews at gmail.com  Tue Jul 10 04:41:31 2012
From: mwtoews at gmail.com (Mike Toews)
Date: Tue, 10 Jul 2012 23:41:31 +1200
Subject: [geos-devel] M-coordinate support
Message-ID: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>

Hi devs,

I'd like to know if "measure" or M-coordinate support is somewhere on
the development horizon for GEOS. I could see the benefit of opening
client software to support ISO 19125 compliant geometries, such as in
OGR or Shapely.

Possibly the first widespread use of M-coordinates started in the
1990s with the Shapefile file format, as detailed in the 1998 ESRI
technical specs. With open source software, Shapelib and PostGIS has
supported M-coordinates for quite some time (possibly close to a
decade?). More recently, Simple Features Access Standards published by
OGC and later ISO 19125, detail the use and storage of of
M-coordinates in various geometry types.

Are there any limitations to adopting M-coordinate support for GEOS?
Potential performance loss? Other limitations or incompatibilities?
I'm curious, as I often run into instances where this dimension is
useful, but am a bit stumped at it's lack of support in some software.
Thanks.

-Mike

From luca.paganotti at gmail.com  Tue Jul 10 05:37:42 2012
From: luca.paganotti at gmail.com (luca paganotti)
Date: Tue, 10 Jul 2012 14:37:42 +0200
Subject: [geos-devel] M-coordinate support
In-Reply-To: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>
References: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>
Message-ID: <CADzbtT+a6xJiWDS1GmOR400yekO=ta6MFu1xuPFtbXu7zuyTyA@mail.gmail.com>

Hi Mike,

I agree with you about the M-coordinate support in geos, there are some
cases in which this support is a must.

For example I'm using geos to represent 3D points changing their position
in time so to have M seems really necessary, but I can be wrong, this
support is already built in.

To be able to use geos with ZM points I've lightly modified and rebuilt
geos tailoring it only to my needs. I've not done any kind of analisys or
deep thinking about it so it's only a very raw support for M, but that was
I needed.

P.S. I made also a little post to this list some time ago saying that, but
I received no answer, maybe it was not so interesnting or I was missing
something that could give me M-support without rebuilding the modified
library.

Best regards

lp



On Tue, Jul 10, 2012 at 1:41 PM, Mike Toews <mwtoews at gmail.com> wrote:

> Hi devs,
>
> I'd like to know if "measure" or M-coordinate support is somewhere on
> the development horizon for GEOS. I could see the benefit of opening
> client software to support ISO 19125 compliant geometries, such as in
> OGR or Shapely.
>
> Possibly the first widespread use of M-coordinates started in the
> 1990s with the Shapefile file format, as detailed in the 1998 ESRI
> technical specs. With open source software, Shapelib and PostGIS has
> supported M-coordinates for quite some time (possibly close to a
> decade?). More recently, Simple Features Access Standards published by
> OGC and later ISO 19125, detail the use and storage of of
> M-coordinates in various geometry types.
>
> Are there any limitations to adopting M-coordinate support for GEOS?
> Potential performance loss? Other limitations or incompatibilities?
> I'm curious, as I often run into instances where this dimension is
> useful, but am a bit stumped at it's lack of support in some software.
> Thanks.
>
> -Mike
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20120710/859eef2a/attachment.html>

From strk at keybit.net  Tue Jul 10 05:47:25 2012
From: strk at keybit.net (Sandro Santilli)
Date: Tue, 10 Jul 2012 14:47:25 +0200
Subject: [geos-devel] M-coordinate support
In-Reply-To: <CADzbtT+a6xJiWDS1GmOR400yekO=ta6MFu1xuPFtbXu7zuyTyA@mail.gmail.com>
References: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>
	<CADzbtT+a6xJiWDS1GmOR400yekO=ta6MFu1xuPFtbXu7zuyTyA@mail.gmail.com>
Message-ID: <20120710124725.GK24860@gnash>

Luca: I confirm you need to modify the library in order to get M support.
I guess it would increase memory requirements of operations by about 30%
(from XYZ to XYZM) -- I think Martin Davis would be the one in the best
position to answer this, GEOS being a port of his JTS.

--strk;

On Tue, Jul 10, 2012 at 02:37:42PM +0200, luca paganotti wrote:
> Hi Mike,
> 
> I agree with you about the M-coordinate support in geos, there are some
> cases in which this support is a must.
> 
> For example I'm using geos to represent 3D points changing their position
> in time so to have M seems really necessary, but I can be wrong, this
> support is already built in.
> 
> To be able to use geos with ZM points I've lightly modified and rebuilt
> geos tailoring it only to my needs. I've not done any kind of analisys or
> deep thinking about it so it's only a very raw support for M, but that was
> I needed.
> 
> P.S. I made also a little post to this list some time ago saying that, but
> I received no answer, maybe it was not so interesnting or I was missing
> something that could give me M-support without rebuilding the modified
> library.
> 
> Best regards
> 
> lp
> 
> 
> 
> On Tue, Jul 10, 2012 at 1:41 PM, Mike Toews <mwtoews at gmail.com> wrote:
> 
> > Hi devs,
> >
> > I'd like to know if "measure" or M-coordinate support is somewhere on
> > the development horizon for GEOS. I could see the benefit of opening
> > client software to support ISO 19125 compliant geometries, such as in
> > OGR or Shapely.
> >
> > Possibly the first widespread use of M-coordinates started in the
> > 1990s with the Shapefile file format, as detailed in the 1998 ESRI
> > technical specs. With open source software, Shapelib and PostGIS has
> > supported M-coordinates for quite some time (possibly close to a
> > decade?). More recently, Simple Features Access Standards published by
> > OGC and later ISO 19125, detail the use and storage of of
> > M-coordinates in various geometry types.
> >
> > Are there any limitations to adopting M-coordinate support for GEOS?
> > Potential performance loss? Other limitations or incompatibilities?
> > I'm curious, as I often run into instances where this dimension is
> > useful, but am a bit stumped at it's lack of support in some software.
> > Thanks.
> >
> > -Mike

From sean.gillies at gmail.com  Tue Jul 10 08:54:29 2012
From: sean.gillies at gmail.com (Sean Gillies)
Date: Tue, 10 Jul 2012 09:54:29 -0600
Subject: [geos-devel] M-coordinate support
In-Reply-To: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>
References: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>
Message-ID: <CAOodmJoWOn61AA=np16ZhczCKi3xGEQRfT16xjWU7xA3fTexVg@mail.gmail.com>

Hi Mike,

Would GEOS need to implement M coordinate basis algorithms to fully
profit from this? Do those exist? (I have no idea)

On Tue, Jul 10, 2012 at 5:41 AM, Mike Toews <mwtoews at gmail.com> wrote:
> Hi devs,
>
> I'd like to know if "measure" or M-coordinate support is somewhere on
> the development horizon for GEOS. I could see the benefit of opening
> client software to support ISO 19125 compliant geometries, such as in
> OGR or Shapely.
>
> Possibly the first widespread use of M-coordinates started in the
> 1990s with the Shapefile file format, as detailed in the 1998 ESRI
> technical specs. With open source software, Shapelib and PostGIS has
> supported M-coordinates for quite some time (possibly close to a
> decade?). More recently, Simple Features Access Standards published by
> OGC and later ISO 19125, detail the use and storage of of
> M-coordinates in various geometry types.
>
> Are there any limitations to adopting M-coordinate support for GEOS?
> Potential performance loss? Other limitations or incompatibilities?
> I'm curious, as I often run into instances where this dimension is
> useful, but am a bit stumped at it's lack of support in some software.
> Thanks.
>
> -Mike
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel



-- 
Sean Gillies

From mtnclimb at telus.net  Tue Jul 10 09:18:47 2012
From: mtnclimb at telus.net (Martin Davis)
Date: Tue, 10 Jul 2012 09:18:47 -0700
Subject: [geos-devel] M-coordinate support
In-Reply-To: <20120710124725.GK24860@gnash>
References: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>
	<CADzbtT+a6xJiWDS1GmOR400yekO=ta6MFu1xuPFtbXu7zuyTyA@mail.gmail.com>
	<20120710124725.GK24860@gnash>
Message-ID: <4FFC55E7.308@telus.net>

This has come up a few times for JTS as well.  Unfortunately it would be 
a big breaking change and a fair bit of work to add M to the current JTS 
Coordinate object (at least, the way I would prefer to do this is to 
turn Coordinate into an interface and allow 2D, 3D and 4D subclasses, so 
as not to penalize people who only want 2D).

So short story is no plans for this at the moment.  It would require 
quite a bit of time, which equals money...

In GEOS the situation might be easier, if Coordinate is already an 
interface?

As for Sean's question about algorithm support, this of course would be 
ideal, but it's not strictly necessary.  Some uses just require that M 
is able to be stored.  The obvious algorithms to enhance are the linear 
referencing ones, which can make use of measure directly.  I don't know 
of any other current JTS algorithms which would naturally extend to use 
a M value.  Then there's the question of preserving M through operations 
such as overlay, which seems a bit problematic.  My inclination would be 
to avoid trying to implement this.

On 7/10/2012 5:47 AM, Sandro Santilli wrote:
> Luca: I confirm you need to modify the library in order to get M support.
> I guess it would increase memory requirements of operations by about 30%
> (from XYZ to XYZM) -- I think Martin Davis would be the one in the best
> position to answer this, GEOS being a port of his JTS.
>
> --strk;
>
> On Tue, Jul 10, 2012 at 02:37:42PM +0200, luca paganotti wrote:
>> Hi Mike,
>>
>> I agree with you about the M-coordinate support in geos, there are some
>> cases in which this support is a must.
>>
>> For example I'm using geos to represent 3D points changing their position
>> in time so to have M seems really necessary, but I can be wrong, this
>> support is already built in.
>>
>> To be able to use geos with ZM points I've lightly modified and rebuilt
>> geos tailoring it only to my needs. I've not done any kind of analisys or
>> deep thinking about it so it's only a very raw support for M, but that was
>> I needed.
>>
>> P.S. I made also a little post to this list some time ago saying that, but
>> I received no answer, maybe it was not so interesnting or I was missing
>> something that could give me M-support without rebuilding the modified
>> library.
>>
>> Best regards
>>
>> lp
>>
>>
>>
>> On Tue, Jul 10, 2012 at 1:41 PM, Mike Toews <mwtoews at gmail.com> wrote:
>>
>>> Hi devs,
>>>
>>> I'd like to know if "measure" or M-coordinate support is somewhere on
>>> the development horizon for GEOS. I could see the benefit of opening
>>> client software to support ISO 19125 compliant geometries, such as in
>>> OGR or Shapely.
>>>
>>> Possibly the first widespread use of M-coordinates started in the
>>> 1990s with the Shapefile file format, as detailed in the 1998 ESRI
>>> technical specs. With open source software, Shapelib and PostGIS has
>>> supported M-coordinates for quite some time (possibly close to a
>>> decade?). More recently, Simple Features Access Standards published by
>>> OGC and later ISO 19125, detail the use and storage of of
>>> M-coordinates in various geometry types.
>>>
>>> Are there any limitations to adopting M-coordinate support for GEOS?
>>> Potential performance loss? Other limitations or incompatibilities?
>>> I'm curious, as I often run into instances where this dimension is
>>> useful, but am a bit stumped at it's lack of support in some software.
>>> Thanks.
>>>
>>> -Mike
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
>
> -----
> No virus found in this message.
> Checked by AVG - www.avg.com
> Version: 2012.0.2179 / Virus Database: 2437/5122 - Release Date: 07/09/12
>
>



From strk at keybit.net  Tue Jul 10 11:46:03 2012
From: strk at keybit.net (Sandro Santilli)
Date: Tue, 10 Jul 2012 20:46:03 +0200
Subject: [geos-devel] M-coordinate support
In-Reply-To: <4FFC55E7.308@telus.net>
References: <CAM2FmMokL4C_UBLKpCw_wiZ_yQF4aDvbws7hPBZSnpxUPP0MgA@mail.gmail.com>
	<CADzbtT+a6xJiWDS1GmOR400yekO=ta6MFu1xuPFtbXu7zuyTyA@mail.gmail.com>
	<20120710124725.GK24860@gnash> <4FFC55E7.308@telus.net>
Message-ID: <20120710184603.GV24860@gnash>

On Tue, Jul 10, 2012 at 09:18:47AM -0700, Martin Davis wrote:
> This has come up a few times for JTS as well.  Unfortunately it
> would be a big breaking change and a fair bit of work to add M to
> the current JTS Coordinate object (at least, the way I would prefer
> to do this is to turn Coordinate into an interface and allow 2D, 3D
> and 4D subclasses, so as not to penalize people who only want 2D).
> 
> So short story is no plans for this at the moment.  It would require
> quite a bit of time, which equals money...
> 
> In GEOS the situation might be easier, if Coordinate is already an
> interface?

Nope, it's a concrete class, as in JTS.

In GEOS any "interface" became a virtual class, it'd be also time
in GEOS to stop that and use more templates instead, but it's the
same "long time == lots money" issue. Turning a Coordinate into
a _virtual_ class would cost a lot in terms of performance.

> As for Sean's question about algorithm support, this of course would
> be ideal, but it's not strictly necessary.  Some uses just require
> that M is able to be stored.  The obvious algorithms to enhance are
> the linear referencing ones, which can make use of measure directly.
> I don't know of any other current JTS algorithms which would
> naturally extend to use a M value.  Then there's the question of
> preserving M through operations such as overlay, which seems a bit
> problematic.  My inclination would be to avoid trying to implement
> this.

Another option, if you don't need Z, is to _use_ Z for M...

--strk;

From geos-trac at osgeo.org  Tue Jul 17 14:14:21 2012
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 17 Jul 2012 21:14:21 -0000
Subject: [geos-devel] [GEOS] #570: Add Z support in delaunay
	triangulation
In-Reply-To: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
References: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
Message-ID: <053.7f729a25db2afc9d43bd829d2d36dd62@osgeo.org>

#570: Add Z support in delaunay triangulation
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by blc56):

 Patch attached.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/570#comment:1>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Jul 17 14:15:42 2012
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 17 Jul 2012 21:15:42 -0000
Subject: [geos-devel] [GEOS] #570: Add Z support in delaunay
	triangulation
In-Reply-To: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
References: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
Message-ID: <053.65b582b7e761b664b64b2d0510b459f2@osgeo.org>

#570: Add Z support in delaunay triangulation
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by blc56):

 Also, I can confirm that JTS does preserve the Z value.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/570#comment:2>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Jul 18 01:17:51 2012
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 18 Jul 2012 08:17:51 -0000
Subject: [geos-devel] [GEOS] #570: Add Z support in delaunay
	triangulation
In-Reply-To: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
References: <044.d5c5461e9c1b474a48021531288bafc9@osgeo.org>
Message-ID: <053.ee8dd67bccf62cfb2abc0e652a98797d@osgeo.org>

#570: Add Z support in delaunay triangulation
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.0                     
Component:  Default     |     Version:  svn-trunk                 
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 I didn't test the patch but I've the impression it would always add a Z ?
 I think the output should only have a Z when the input does.
 Also, could you add tests for this ? Thanks !

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/570#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From taibc_coltech at yahoo.com  Mon Jul 23 00:07:33 2012
From: taibc_coltech at yahoo.com (taibc)
Date: Mon, 23 Jul 2012 00:07:33 -0700 (PDT)
Subject: [geos-devel] Error: Build GEOS 3.3.5 on Windows
Message-ID: <1343027252601-4989974.post@n6.nabble.com>

Hi friends,

 I am trying to build GEOS (Version 3.3.5) on Window 7 by using Visual
Studio Command Prompt (2010) , with the statement: "nmake -f makefile.vc
MSVC_VER=1600". But I got the bellow error:


algorithm\LineIntersector?.cpp(671) : error C3861: 'isnan': identifier not
found algorithm\LineIntersector?.cpp(672) : error C3861: 'isnan': identifier
not found algorithm\LineIntersector?.cpp(680) : error C3861: 'isnan':
identifier not found algorithm\LineIntersector?.cpp(681) : error C3861:
'isnan': identifier not found algorithm\LineIntersector?.cpp(736) : error
C3861: 'isnan': identifier not found algorithm\LineIntersector?.cpp(737) :
error C3861: 'isnan': identifier not found NMAKE : fatal error U1077:
'"C:\Program Files\Microsoft Visual Studio 10.0\VC\BI N\cl.EXE"' : return
code '0x2' Stop. NMAKE : fatal error U1077: '"C:\Program Files\Microsoft
Visual Studio 10.0\VC\BI N\nmake.EXE"' : return code '0x2' Stop.

Do you know how to fix it ?

Thanks and regards,

Tai 



--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Error-Build-GEOS-3-3-5-on-Windows-tp4989974.html
Sent from the GEOS Developers mailing list archive at Nabble.com.

From mateusz at loskot.net  Mon Jul 23 03:08:07 2012
From: mateusz at loskot.net (Mateusz Loskot)
Date: Mon, 23 Jul 2012 11:08:07 +0100
Subject: [geos-devel] Error: Build GEOS 3.3.5 on Windows
In-Reply-To: <1343027252601-4989974.post@n6.nabble.com>
References: <1343027252601-4989974.post@n6.nabble.com>
Message-ID: <CABUeae80BW-xMxU1XEPSci0fY7er8GxKWHE2pmvzMY4pyBpM6g@mail.gmail.com>

On 23 July 2012 08:07, taibc <taibc_coltech at yahoo.com> wrote:
> Hi friends,
>
>  I am trying to build GEOS (Version 3.3.5) on Window 7 by using Visual
> Studio Command Prompt (2010) , with the statement: "nmake -f makefile.vc
> MSVC_VER=1600". But I got the bellow error:

Check again the updated version of building instructions:

http://trac.osgeo.org/geos/wiki/BuildingOnWindowsWithNMake

You do need to run autogen.bat first.

Best regards,
-- 
Mateusz Loskot, http://mateusz.loskot.net

From taibc_coltech at yahoo.com  Mon Jul 23 03:29:34 2012
From: taibc_coltech at yahoo.com (taibc)
Date: Mon, 23 Jul 2012 03:29:34 -0700 (PDT)
Subject: [geos-devel] Error: Build GEOS 3.3.5 on Windows
In-Reply-To: <CABUeae80BW-xMxU1XEPSci0fY7er8GxKWHE2pmvzMY4pyBpM6g@mail.gmail.com>
References: <1343027252601-4989974.post@n6.nabble.com>
	<CABUeae80BW-xMxU1XEPSci0fY7er8GxKWHE2pmvzMY4pyBpM6g@mail.gmail.com>
Message-ID: <1343039349.65091.YahooMailNeo@web190003.mail.sg3.yahoo.com>

Great, thank you. It is successful now. 


Tai



________________________________
 From: Mateusz Loskot [via OSGeo.org] <ml-node+s1560n4990018h77 at n6.nabble.com>
To: taibc <taibc_coltech at yahoo.com> 
Sent: Monday, July 23, 2012 5:08 PM
Subject: Re: Error: Build GEOS 3.3.5 on Windows
 

On 23 July 2012 08:07, taibc <[hidden email]> wrote: 
> Hi friends, 
> 
> ?I am trying to build GEOS (Version 3.3.5) on Window 7 by using Visual 
> Studio Command Prompt (2010) , with the statement: "nmake -f makefile.vc 
> MSVC_VER=1600". But I got the bellow error: 

Check again the updated version of building instructions: 

http://trac.osgeo.org/geos/wiki/BuildingOnWindowsWithNMake

You do need to run autogen.bat first. 

Best regards, 
-- 
Mateusz Loskot, http://mateusz.loskot.net
_______________________________________________ 
geos-devel mailing list 
[hidden email] 
http://lists.osgeo.org/mailman/listinfo/geos-devel


________________________________
 
If you reply to this email, your message will be added to the discussion below:
http://osgeo-org.1560.n6.nabble.com/Error-Build-GEOS-3-3-5-on-Windows-tp4989974p4990018.html 
To unsubscribe from Error: Build GEOS 3.3.5 on Windows, click here.
NAML



--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Error-Build-GEOS-3-3-5-on-Windows-tp4989974p4990023.html
Sent from the GEOS Developers mailing list archive at Nabble.com.

From taibc_coltech at yahoo.com  Mon Jul 23 03:44:20 2012
From: taibc_coltech at yahoo.com (taibc)
Date: Mon, 23 Jul 2012 03:44:20 -0700 (PDT)
Subject: [geos-devel] Error: Build GEOS 3.3.5 on Windows
In-Reply-To: <CABUeae80BW-xMxU1XEPSci0fY7er8GxKWHE2pmvzMY4pyBpM6g@mail.gmail.com>
References: <1343027252601-4989974.post@n6.nabble.com>
	<CABUeae80BW-xMxU1XEPSci0fY7er8GxKWHE2pmvzMY4pyBpM6g@mail.gmail.com>
Message-ID: <1343040251.29659.YahooMailNeo@web190006.mail.sg3.yahoo.com>

Dear Mateusz,

After building GEOS, I copied file geos.dll into my project (using Visual Studio 210, C++).

But, when I used the method: Geometry::Within(OGRGeometry* po) ", I got the error: "GEOS support not enable"

Do you know how to fix it ?

Thanks and regards,

Tai


________________________________
 From: Mateusz Loskot [via OSGeo.org] <ml-node+s1560n4990018h77 at n6.nabble.com>
To: taibc <taibc_coltech at yahoo.com> 
Sent: Monday, July 23, 2012 5:08 PM
Subject: Re: Error: Build GEOS 3.3.5 on Windows
 

On 23 July 2012 08:07, taibc <[hidden email]> wrote: 
> Hi friends, 
> 
> ?I am trying to build GEOS (Version 3.3.5) on Window 7 by using Visual 
> Studio Command Prompt (2010) , with the statement: "nmake -f makefile.vc 
> MSVC_VER=1600". But I got the bellow error: 

Check again the updated version of building instructions: 

http://trac.osgeo.org/geos/wiki/BuildingOnWindowsWithNMake

You do need to run autogen.bat first. 

Best regards, 
-- 
Mateusz Loskot, http://mateusz.loskot.net
_______________________________________________ 
geos-devel mailing list 
[hidden email] 
http://lists.osgeo.org/mailman/listinfo/geos-devel


________________________________
 
If you reply to this email, your message will be added to the discussion below:
http://osgeo-org.1560.n6.nabble.com/Error-Build-GEOS-3-3-5-on-Windows-tp4989974p4990018.html 
To unsubscribe from Error: Build GEOS 3.3.5 on Windows, click here.
NAML



--
View this message in context: http://osgeo-org.1560.n6.nabble.com/Error-Build-GEOS-3-3-5-on-Windows-tp4989974p4990027.html
Sent from the GEOS Developers mailing list archive at Nabble.com.

From geos-trac at osgeo.org  Tue Jul 24 12:49:27 2012
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 24 Jul 2012 19:49:27 -0000
Subject: [geos-devel] [GEOS] #572: Contains issue for complex LineStrings
	[JTS fails too]
Message-ID: <047.5caa9d29e19b13245ee7a3cbf4a4f89d@osgeo.org>

#572: Contains issue for complex LineStrings [JTS fails too]
------------------------+---------------------------------------------------
 Reporter:  mwtoews     |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.3.5                     
Component:  Default     |     Version:  3.3.4                     
 Severity:  Unassigned  |    Keywords:  jtsfail                   
------------------------+---------------------------------------------------
 This issues was first identified by Julia via
 [https://github.com/Toblerity/Shapely/issues/17 Shapely #17].

 With non-simple A and simple B:
 {{{
 A: LINESTRING (1 0, 0 2, 0 0, 2 2)
 B: LINESTRING (0 0, 2 2)
 }}}

 Compare DE-9IM results. First with Shapely (1.2.14, with GEOS C API 1.7.1;
 also verified with PostGIS 2.0 with 3.3.3-CAPI-1.7.4):
 {{{
 A.relate(B) : 101F001F2
 B.relate(A) : 1F100F102
 }}}

 JTS (1.12.0):
 {{{
 AB : 001F001F2
 BA : 0F100F102
 }}}

 The expected intersection matrix should be (based on {{{LINESTRING (2 0, 0
 2, 0 0, 2 2)}}}):
 {{{
 AB : 101F00FF2
 BA : 1FF00F102
 }}}

 Related issues are apparent with "Contains" ({{{T*****FF*}}}), which
 return False for AB and BA combinations for both JTS and GEOS. This result
 is consistent with the DE-9IM relate patterns. The expected result for AB
 is True (and False for BA).

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/572>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

