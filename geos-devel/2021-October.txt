From sebastic at xs4all.nl  Fri Oct  1 01:47:29 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 1 Oct 2021 10:47:29 +0200
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
References: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
Message-ID: <32688ee4-67c4-7f10-f1b5-e2b97a22dee5@xs4all.nl>

Another issue, this one cause by the switch to CMake.

The autotools build resulted in libgeos-X.Y.Z.so, which was also its
SONAME, and the libgeos.so symlink to it.

The cmake builds results in libgeos.so.X.Y.Zpre, which is also its
SONAME, and the libgeos.so symlink to it.

The pre-release word should not be part of the filename nor SOVERSION.

The attached patch fixes the issue.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
-------------- next part --------------
A non-text attachment was scrubbed...
Name: soname.patch
Type: text/x-patch
Size: 665 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211001/8eb79b3b/attachment.bin>

From sebastic at xs4all.nl  Fri Oct  1 02:41:20 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 1 Oct 2021 11:41:20 +0200
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
References: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
Message-ID: <5de74821-754b-bdb0-b62e-b10adf6e6475@xs4all.nl>

The lintian QA tool reported a spelling error for the Debian package build:

 * nunber -> number

The attached patch fixes the issue.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
-------------- next part --------------
A non-text attachment was scrubbed...
Name: spelling-errors.patch
Type: text/x-patch
Size: 1532 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211001/05648457/attachment.bin>

From gdt at lexort.com  Fri Oct  1 05:13:38 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 01 Oct 2021 08:13:38 -0400
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca> (Paul
 Ramsey's message of "Thu, 30 Sep 2021 15:12:40 -0700")
References: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
Message-ID: <rmizgrt3pu5.fsf@s1.lexort.com>


I don't care what the word is, but in my view a release which makes the
massive change of dropping automake can't really be called beta, so I
think we need to view this as more alpha like.

I'll try to get to converting the package to cmake and testing soon, but
it may take until Monday when it is raining.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211001/99d66cf3/attachment.sig>

From pramsey at cleverelephant.ca  Fri Oct  1 09:38:14 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 1 Oct 2021 09:38:14 -0700
Subject: [geos-devel] OSGeo>GH Replicator
Message-ID: <C574CA75-1CA2-4632-9808-D3802608025C@cleverelephant.ca>

Last commit to GEOS as shown in GH is now two days old, notwithstanding my pushing a lot of stuff in as we move to release. 
Is the replicator not running?
P

From pramsey at cleverelephant.ca  Fri Oct  1 09:38:30 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 1 Oct 2021 09:38:30 -0700
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <5de74821-754b-bdb0-b62e-b10adf6e6475@xs4all.nl>
References: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
 <5de74821-754b-bdb0-b62e-b10adf6e6475@xs4all.nl>
Message-ID: <7AD885AE-08F9-4907-B333-4368DBC5492D@cleverelephant.ca>

Thanks for all these, I've committed them.

P

> On Oct 1, 2021, at 2:41 AM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> The lintian QA tool reported a spelling error for the Debian package build:
> 
> * nunber -> number
> 
> The attached patch fixes the issue.
> 
> Kind Regards,
> 
> Bas
> 
> -- 
> GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> <spelling-errors.patch>_______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Fri Oct  1 10:57:46 2021
From: lr at pcorp.us (Regina Obe)
Date: Fri, 1 Oct 2021 13:57:46 -0400
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <7AD885AE-08F9-4907-B333-4368DBC5492D@cleverelephant.ca>
References: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
 <5de74821-754b-bdb0-b62e-b10adf6e6475@xs4all.nl>
 <7AD885AE-08F9-4907-B333-4368DBC5492D@cleverelephant.ca>
Message-ID: <000801d7b6ed$d7eee120$87cca360$@pcorp.us>


> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Friday, October 1, 2021 12:39 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: Re: [geos-devel] 3.10.0beta1
> 
> Thanks for all these, I've committed them.
> 
> P
> 
> > On Oct 1, 2021, at 2:41 AM, Sebastiaan Couwenberg <sebastic at xs4all.nl>
> wrote:
> >
> > The lintian QA tool reported a spelling error for the Debian package
build:
> >
> > * nunber -> number
> >
> > The attached patch fixes the issue.
> >
> > Kind Regards,
> >
> > Bas
[Regina Obe] 
BTW trac is fixed now. 
Still have to fix the GH replicator which I suspect is caused by the same
LetsEncrypt issue.


From lr at pcorp.us  Fri Oct  1 11:22:46 2021
From: lr at pcorp.us (Regina Obe)
Date: Fri, 1 Oct 2021 14:22:46 -0400
Subject: [geos-devel] OSGeo>GH Replicator
In-Reply-To: <C574CA75-1CA2-4632-9808-D3802608025C@cleverelephant.ca>
References: <C574CA75-1CA2-4632-9808-D3802608025C@cleverelephant.ca>
Message-ID: <000e01d7b6f1$55bde1c0$0139a540$@pcorp.us>

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Friday, October 1, 2021 12:38 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] OSGeo>GH Replicator
> 
> Last commit to GEOS as shown in GH is now two days old, notwithstanding my
> pushing a lot of stuff in as we move to release.
> Is the replicator not running?
> P
[Regina Obe] 
Should be fixed now


From Roger.Bivand at nhh.no  Fri Oct  1 12:00:32 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 1 Oct 2021 21:00:32 +0200 (CEST)
Subject: [geos-devel] 3.10.0beta1
Message-ID: <242e133e-c56f-febb-aac9-81c233ee7967@reclus2.nhh.no>

A small suggestion: could tools/geos-config.in be changed by adding

-lstdc++

to

--static-clibs

(and possibly --static-cclibs, but we haven't needed this). We do need 
static-clibs to be -L${libdir} -lgeos_c -lgeos -lm -lstdc++; Tomas 
Kalibera is working hard to automate static builds of R packages across 
multiple platforms, and is having to hot-patch this at the moment. I'll 
check further with R packages, but already checked with 3.10.0dev during 
the summer and have adapted as necessary (mostly 3.9 sorting after 3.10 
problems).

Roger

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Fri Oct  1 12:03:15 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 1 Oct 2021 12:03:15 -0700
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <242e133e-c56f-febb-aac9-81c233ee7967@reclus2.nhh.no>
References: <242e133e-c56f-febb-aac9-81c233ee7967@reclus2.nhh.no>
Message-ID: <0550C8E5-BBF4-4246-AC97-9EA57BC86356@cleverelephant.ca>

That feels... off the reservation for a library and something for the final build? Like, not every platform requires that link, I don't think.

I'm open to being told I'm totally wrong.

P

> On Oct 1, 2021, at 12:00 PM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> A small suggestion: could tools/geos-config.in be changed by adding
> 
> -lstdc++
> 
> to
> 
> --static-clibs
> 
> (and possibly --static-cclibs, but we haven't needed this). We do need static-clibs to be -L${libdir} -lgeos_c -lgeos -lm -lstdc++; Tomas Kalibera is working hard to automate static builds of R packages across multiple platforms, and is having to hot-patch this at the moment. I'll check further with R packages, but already checked with 3.10.0dev during the summer and have adapted as necessary (mostly 3.9 sorting after 3.10 problems).
> 
> Roger
> 
> -- 
> Roger Bivand
> Emeritus Professor
> Department of Economics, Norwegian School of Economics,
> Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
> e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Fri Oct  1 13:11:48 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 1 Oct 2021 13:11:48 -0700
Subject: [geos-devel] 3.10.0beta2
Message-ID: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>

Here it is incorporating Sebs feedback, I'm going to try and be pretty
aggressive about pushing new packages so there's always something worth
testing against.

http://download.osgeo.org/geos/geos-3.10.0beta2.tar.bz2

P.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211001/52efab07/attachment.html>

From gdt at lexort.com  Fri Oct  1 14:43:47 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 01 Oct 2021 17:43:47 -0400
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <0550C8E5-BBF4-4246-AC97-9EA57BC86356@cleverelephant.ca> (Paul
 Ramsey's message of "Fri, 1 Oct 2021 12:03:15 -0700")
References: <242e133e-c56f-febb-aac9-81c233ee7967@reclus2.nhh.no>
 <0550C8E5-BBF4-4246-AC97-9EA57BC86356@cleverelephant.ca>
Message-ID: <rmi8rzc1kvg.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> That feels... off the reservation for a library and something for the final build? Like, not every platform requires that link, I don't think.

My quick reaction is that -lstdc++ seems funny for things that are
compiled as C++, but if there's a link line intended to be called in a C
build that's perhaps something else.   I'll see how that turns out on
NetBSD shortly.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211001/f182e447/attachment.sig>

From gdt at lexort.com  Fri Oct  1 18:10:52 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 01 Oct 2021 21:10:52 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 (Paul Ramsey's message of "Fri, 1 Oct 2021 13:11:48 -0700")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
Message-ID: <rmifstkz0wz.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> Here it is incorporating Sebs feedback, I'm going to try and be pretty
> aggressive about pushing new packages so there's always something worth
> testing against.

Thanks.  From my viewpoint a new tarball every time there's a signficant
fix is good.

> http://download.osgeo.org/geos/geos-3.10.0beta2.tar.bz2

Converting my build to cmake worked much better than I expected.

Relative to NEWS I see a few things I don't follow:

  a bunch of API withdrawals, I think.

  include/geos.h is no longer installed

and more seriously, running tests fails because it apparently doesn't
use the built-but-not-installed libraries.

I'll say  this again more coherently tomorrow or Sunday.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211001/618b0dba/attachment.sig>

From sebastic at xs4all.nl  Fri Oct  1 22:35:13 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Sat, 2 Oct 2021 07:35:13 +0200
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
Message-ID: <72117bf2-8c18-acac-399a-219fc4c2b08d@xs4all.nl>

Just a small nitpick, GEOS_VERSION_NOPATCH is a bad variable name as it
does include the patch version, just not the patch word/pre-release.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From Roger.Bivand at nhh.no  Sat Oct  2 02:00:30 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 2 Oct 2021 11:00:30 +0200 (CEST)
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <rmi8rzc1kvg.fsf@s1.lexort.com>
References: <242e133e-c56f-febb-aac9-81c233ee7967@reclus2.nhh.no>
 <0550C8E5-BBF4-4246-AC97-9EA57BC86356@cleverelephant.ca>
 <rmi8rzc1kvg.fsf@s1.lexort.com>
Message-ID: <78ce586-e2a0-8417-d994-99734446347@reclus2.nhh.no>

On Fri, 1 Oct 2021, Greg Troxel wrote:

> Paul Ramsey <pramsey at cleverelephant.ca> writes:
>
>> That feels... off the reservation for a library and something for the final build? Like, not every platform requires that link, I don't think.
>
> My quick reaction is that -lstdc++ seems funny for things that are
> compiled as C++, but if there's a link line intended to be called in a C
> build that's perhaps something else.   I'll see how that turns out on
> NetBSD shortly.
>

Yes, R is C not C++, so the R contributed package (rgeos, sf, ...) DLL on 
Windows from msys2 is seen as C rather than C++, see for example:

https://developer.r-project.org/Blog/public/2019/03/28/use-of-c-in-packages/index.html

for a discussion of general issues. The specific need here is triggered 
when building binary contributed packages for macOS and Windows (here the 
Windows case with gcc and msys2). See also:

https://github.com/rsbivand/foss4g21/blob/main/bivand_foss4g_210930.pdf

from the FOSS4G R-spatial panel two days ago, slides 2-3.

Roger

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From mwtoews at gmail.com  Sat Oct  2 02:41:33 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Sat, 2 Oct 2021 22:41:33 +1300
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
Message-ID: <CAM2FmMoLYSTxFXnJWNvLgqPzDVUh2G9xeJ2XZQ8zAFRkCsHmFg@mail.gmail.com>

On Sat, 2 Oct 2021 at 09:12, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>
> Here it is incorporating Sebs feedback, I'm going to try and be pretty aggressive about pushing new packages so there's always something worth testing against.
>
> http://download.osgeo.org/geos/geos-3.10.0beta2.tar.bz2

This missed a patch sent yesterday to compile on (e.g.) CentOS7 with
its ancient GNU 4.8.5 compilers.

https://git.osgeo.org/gitea/geos/geos/pulls/114

From gdt at lexort.com  Sat Oct  2 05:04:57 2021
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 02 Oct 2021 08:04:57 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmifstkz0wz.fsf@s1.lexort.com> (Greg Troxel's message of "Fri,
 01 Oct 2021 21:10:52 -0400")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com>
Message-ID: <rmizgrry6mu.fsf@s1.lexort.com>


Greg Troxel <gdt at lexort.com> writes:

> http://download.osgeo.org/geos/geos-3.10.0beta2.tar.bz2

[This note replaces my briefer and less coherent note from last night.]

I converted my package build to cmake, and it worked better than I
expected, which is great.  I did my build under pkgsrc on NetBSD 9
amd64.

The diff to the main packaging control file is not that interesting to
others, so I'll omit it; it's basically autoconf->cmake, dropping
libtool, and declaring a dependency on pthreads.

The diff of the set of installed files is significant, and I've appended
it.  Mostly I would like someone familiar with the changes to just skim
it and nod "that's all expected".  There are a lot of withdrawn .h files. 

I try to point out anything that I see that one wouldn't expect from
reading NEWS, to sort those into real bugs and NEWS omissions.  I do
think it's good to fix NEWS during this period.

  * NEWS does not mention the withdrawal of autoconf

  * NEWS does not mention that libtool is no longer used and that
    libgeos.la is no longer installed.

  * include/geos.h is no longer installed.  I am guessing that is
    intentional, but it is not mentioned in NEWS.

  * There are several .h files no longer installed.  I am guessing these
    are intended API withdrawals, but NEWS does not say that there are
    any withdrawals.  An example is
    include/geos/operation/overlay/FuzzyPointLocator.h

  * The build finds and uses pthreads.  Before, the build did not link
    to pthread, and my 3.9 libraries are not linked with threads.
    However, I had not declared that the package used threads, and
    pkgsrc's mechanisms for hiding things that aren't declared are
    likely more successful for autoconf than cmake.  In the sources,
    README and INSTALL do not mention threads.  I can't figure out if
    this matters and how, and what the right answer is.

Also, the tests are broken for me.   Running make check fails
completely, and I find in the log:

/tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit: Shared object "libgeos.so.3.10.0" not found

I am running tests from the build directory before I have built a
package  and then replaced the existing 3.9 installation.  So in
/usr/pkg/lib, where the library is expected to be, there is
libgeos.so.3.9.0 and no 3.10.  Looking at the test program:

$ ldd /tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit
/tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit:
        -lgeos_c.1 => /usr/pkg/lib/libgeos_c.so.1
        -lgeos-3.9.1 => /usr/pkg/lib/libgeos-3.9.1.so
        -lstdc++.9 => /usr/lib/libstdc++.so.9
        -lm.0 => /usr/lib/libm.so.0
        -lc.12 => /usr/lib/libc.so.12
        -lgcc_s.1 => /usr/lib/libgcc_s.so.1
        -lgeos.3.10.0 => not found
        -lpthread.1 => /usr/lib/libpthread.so.1

I see it's also finding the wrong libgeos_c, so the root cause is very
likely not arranging a temporary library path for testing built but not
installed code.  autoconf/libtool did this correctly, with a scheme to
link test programs (and anything else) against the built but not
installed library, and then to relink at installation.  There are of
course multiple approaches, but "make check" needs to use the
programs/libs in the build tree, and ignore what's installed.

(I haven't yet installed the package and tried to build postgis against
it.  I'd like to be able to run tests first.)

Perhaps "make check" is the wrong thing to do, but it's what everybody
expects and it lets people who have no idea about the geos test setup be
able to test and get a clean pass or need to look into it.

Greg


Index: PLIST
===================================================================
RCS file: /cvsroot/pkgsrc/geography/geos/PLIST,v
retrieving revision 1.17
diff -u -p -r1.17 PLIST
--- PLIST	3 Jan 2021 01:27:29 -0000	1.17
+++ PLIST	2 Oct 2021 11:32:55 -0000
@@ -1,10 +1,11 @@
 @comment $NetBSD: PLIST,v 1.17 2021/01/03 01:27:29 gdt Exp $
 bin/geos-config
-include/geos.h
+bin/geosop
 include/geos/algorithm/Angle.h
 include/geos/algorithm/Area.h
 include/geos/algorithm/BoundaryNodeRule.h
 include/geos/algorithm/CGAlgorithmsDD.h
+include/geos/algorithm/CGAlgorithmsDD.inl
 include/geos/algorithm/CentralEndpointIntersector.h
 include/geos/algorithm/Centroid.h
 include/geos/algorithm/ConvexHull.h
@@ -17,15 +18,18 @@ include/geos/algorithm/InteriorPointPoin
 include/geos/algorithm/Intersection.h
 include/geos/algorithm/Length.h
 include/geos/algorithm/LineIntersector.h
+include/geos/algorithm/LineIntersector.inl
 include/geos/algorithm/MinimumBoundingCircle.h
 include/geos/algorithm/MinimumDiameter.h
 include/geos/algorithm/NotRepresentableException.h
 include/geos/algorithm/Orientation.h
+include/geos/algorithm/PointInRing.h
 include/geos/algorithm/PointLocation.h
 include/geos/algorithm/PointLocator.h
 include/geos/algorithm/RayCrossingCounter.h
 include/geos/algorithm/RayCrossingCounterDD.h
 include/geos/algorithm/RobustDeterminant.h
+include/geos/algorithm/SimplePointInRing.h
 include/geos/algorithm/construct/LargestEmptyCircle.h
 include/geos/algorithm/construct/MaximumInscribedCircle.h
 include/geos/algorithm/distance/DiscreteFrechetDistance.h
@@ -107,8 +111,10 @@ include/geos/geom/util/GeometryCombiner.
 include/geos/geom/util/GeometryEditor.h
 include/geos/geom/util/GeometryEditorOperation.h
 include/geos/geom/util/GeometryExtracter.h
+include/geos/geom/util/GeometryFixer.h
 include/geos/geom/util/GeometryTransformer.h
 include/geos/geom/util/LinearComponentExtracter.h
+include/geos/geom/util/NoOpGeometryOperation.h
 include/geos/geom/util/PointExtracter.h
 include/geos/geom/util/PolygonExtracter.h
 include/geos/geom/util/ShortCircuitedGeometryVisitor.h
@@ -188,6 +194,10 @@ include/geos/index/strtree/STRtree.h
 include/geos/index/strtree/SimpleSTRdistance.h
 include/geos/index/strtree/SimpleSTRnode.h
 include/geos/index/strtree/SimpleSTRtree.h
+include/geos/index/strtree/TemplateSTRNode.h
+include/geos/index/strtree/TemplateSTRNodePair.h
+include/geos/index/strtree/TemplateSTRtree.h
+include/geos/index/strtree/TemplateSTRtreeDistance.h
 include/geos/index/sweepline/SweepLineEvent.h
 include/geos/index/sweepline/SweepLineIndex.h
 include/geos/index/sweepline/SweepLineInterval.h
@@ -197,6 +207,9 @@ include/geos/io/ByteOrderDataInStream.h
 include/geos/io/ByteOrderDataInStream.inl
 include/geos/io/ByteOrderValues.h
 include/geos/io/CLocalizer.h
+include/geos/io/GeoJSON.h
+include/geos/io/GeoJSONReader.h
+include/geos/io/GeoJSONWriter.h
 include/geos/io/ParseException.h
 include/geos/io/StringTokenizer.h
 include/geos/io/WKBConstants.h
@@ -231,8 +244,10 @@ include/geos/noding/MCIndexNoder.inl
 include/geos/noding/MCIndexSegmentSetMutualIntersector.h
 include/geos/noding/NodableSegmentString.h
 include/geos/noding/NodedSegmentString.h
+include/geos/noding/NodedSegmentString.inl
 include/geos/noding/Noder.h
 include/geos/noding/NodingIntersectionFinder.h
+include/geos/noding/NodingIntersectionFinder.inl
 include/geos/noding/NodingValidator.h
 include/geos/noding/Octant.h
 include/geos/noding/OrientedCoordinateArray.h
@@ -240,6 +255,7 @@ include/geos/noding/ScaledNoder.h
 include/geos/noding/SegmentIntersectionDetector.h
 include/geos/noding/SegmentIntersector.h
 include/geos/noding/SegmentNode.h
+include/geos/noding/SegmentNode.inl
 include/geos/noding/SegmentNodeList.h
 include/geos/noding/SegmentPointComparator.h
 include/geos/noding/SegmentSetMutualIntersector.h
@@ -259,7 +275,6 @@ include/geos/noding/snapround/MCIndexSna
 include/geos/noding/snapround/SnapRoundingIntersectionAdder.h
 include/geos/noding/snapround/SnapRoundingNoder.h
 include/geos/operation/GeometryGraphOperation.h
-include/geos/operation/IsSimpleOp.h
 include/geos/operation/buffer/BufferBuilder.h
 include/geos/operation/buffer/BufferInputLineSimplifier.h
 include/geos/operation/buffer/BufferOp.h
@@ -290,23 +305,24 @@ include/geos/operation/linemerge/LineSeq
 include/geos/operation/overlay/EdgeSetNoder.h
 include/geos/operation/overlay/ElevationMatrix.h
 include/geos/operation/overlay/ElevationMatrixCell.h
-include/geos/operation/overlay/FuzzyPointLocator.h
 include/geos/operation/overlay/LineBuilder.h
 include/geos/operation/overlay/MaximalEdgeRing.h
 include/geos/operation/overlay/MinimalEdgeRing.h
 include/geos/operation/overlay/MinimalEdgeRing.inl
-include/geos/operation/overlay/OffsetPointGenerator.h
 include/geos/operation/overlay/OverlayNodeFactory.h
 include/geos/operation/overlay/OverlayOp.h
-include/geos/operation/overlay/OverlayResultValidator.h
 include/geos/operation/overlay/PointBuilder.h
 include/geos/operation/overlay/PolygonBuilder.h
 include/geos/operation/overlay/snap/GeometrySnapper.h
 include/geos/operation/overlay/snap/LineStringSnapper.h
-include/geos/operation/overlay/snap/SnapIfNeededOverlayOp.h
 include/geos/operation/overlay/snap/SnapOverlayOp.h
+include/geos/operation/overlay/validate/FuzzyPointLocator.h
+include/geos/operation/overlay/validate/OffsetPointGenerator.h
+include/geos/operation/overlay/validate/OverlayResultValidator.h
 include/geos/operation/overlayng/Edge.h
+include/geos/operation/overlayng/Edge.inl
 include/geos/operation/overlayng/EdgeKey.h
+include/geos/operation/overlayng/EdgeKey.inl
 include/geos/operation/overlayng/EdgeMerger.h
 include/geos/operation/overlayng/EdgeNodingBuilder.h
 include/geos/operation/overlayng/EdgeSourceInfo.h
@@ -318,9 +334,11 @@ include/geos/operation/overlayng/LineBui
 include/geos/operation/overlayng/LineLimiter.h
 include/geos/operation/overlayng/MaximalEdgeRing.h
 include/geos/operation/overlayng/OverlayEdge.h
+include/geos/operation/overlayng/OverlayEdge.inl
 include/geos/operation/overlayng/OverlayEdgeRing.h
 include/geos/operation/overlayng/OverlayGraph.h
 include/geos/operation/overlayng/OverlayLabel.h
+include/geos/operation/overlayng/OverlayLabel.inl
 include/geos/operation/overlayng/OverlayLabeller.h
 include/geos/operation/overlayng/OverlayMixedPoints.h
 include/geos/operation/overlayng/OverlayNG.h
@@ -353,23 +371,26 @@ include/geos/operation/relate/RelateNode
 include/geos/operation/relate/RelateOp.h
 include/geos/operation/sharedpaths/SharedPathsOp.h
 include/geos/operation/union/CascadedPolygonUnion.h
-include/geos/operation/union/CascadedUnion.h
 include/geos/operation/union/CoverageUnion.h
-include/geos/operation/union/GeometryListHolder.h
 include/geos/operation/union/OverlapUnion.h
 include/geos/operation/union/PointGeometryUnion.h
 include/geos/operation/union/UnaryUnionOp.h
 include/geos/operation/union/UnionStrategy.h
 include/geos/operation/valid/ConnectedInteriorTester.h
 include/geos/operation/valid/ConsistentAreaTester.h
-include/geos/operation/valid/IndexedNestedShellTester.h
+include/geos/operation/valid/IndexedNestedHoleTester.h
+include/geos/operation/valid/IndexedNestedPolygonTester.h
+include/geos/operation/valid/IsSimpleOp.h
 include/geos/operation/valid/IsValidOp.h
 include/geos/operation/valid/MakeValid.h
-include/geos/operation/valid/QuadtreeNestedRingTester.h
+include/geos/operation/valid/PolygonIntersectionAnalyzer.h
+include/geos/operation/valid/PolygonNode.h
+include/geos/operation/valid/PolygonRing.h
+include/geos/operation/valid/PolygonRingSelfNode.h
+include/geos/operation/valid/PolygonRingTouch.h
+include/geos/operation/valid/PolygonTopologyAnalyzer.h
 include/geos/operation/valid/RepeatedPointRemover.h
 include/geos/operation/valid/RepeatedPointTester.h
-include/geos/operation/valid/SimpleNestedRingTester.h
-include/geos/operation/valid/SweeplineNestedRingTester.h
 include/geos/operation/valid/TopologyValidationError.h
 include/geos/planargraph/DirectedEdge.h
 include/geos/planargraph/DirectedEdgeStar.h
@@ -386,7 +407,9 @@ include/geos/precision/CommonBitsRemover
 include/geos/precision/EnhancedPrecisionOp.h
 include/geos/precision/GeometryPrecisionReducer.h
 include/geos/precision/MinimumClearance.h
+include/geos/precision/PointwisePrecisionReducerTransformer.h
 include/geos/precision/PrecisionReducerCoordinateOperation.h
+include/geos/precision/PrecisionReducerTransformer.h
 include/geos/precision/SimpleGeometryPrecisionReducer.h
 include/geos/profiler.h
 include/geos/shape/fractal/HilbertCode.h
@@ -403,6 +426,12 @@ include/geos/simplify/TopologyPreserving
 include/geos/triangulate/DelaunayTriangulationBuilder.h
 include/geos/triangulate/IncrementalDelaunayTriangulator.h
 include/geos/triangulate/VoronoiDiagramBuilder.h
+include/geos/triangulate/polygon/ConstrainedDelaunayTriangulator.h
+include/geos/triangulate/polygon/PolygonEarClipper.h
+include/geos/triangulate/polygon/PolygonHoleJoiner.h
+include/geos/triangulate/polygon/PolygonTriangulator.h
+include/geos/triangulate/polygon/TriDelaunayImprover.h
+include/geos/triangulate/polygon/VertexSequencePackedRtree.h
 include/geos/triangulate/quadedge/LastFoundQuadEdgeLocator.h
 include/geos/triangulate/quadedge/LocateFailureException.h
 include/geos/triangulate/quadedge/QuadEdge.h
@@ -412,6 +441,10 @@ include/geos/triangulate/quadedge/QuadEd
 include/geos/triangulate/quadedge/TrianglePredicate.h
 include/geos/triangulate/quadedge/TriangleVisitor.h
 include/geos/triangulate/quadedge/Vertex.h
+include/geos/triangulate/tri/Tri.h
+include/geos/triangulate/tri/TriEdge.h
+include/geos/triangulate/tri/TriList.h
+include/geos/triangulate/tri/TriangulationBuilder.h
 include/geos/unload.h
 include/geos/util.h
 include/geos/util/Assert.h
@@ -429,6 +462,13 @@ include/geos/util/UnsupportedOperationEx
 include/geos/util/math.h
 include/geos/version.h
 include/geos_c.h
-lib/libgeos.la
-lib/libgeos_c.la
+lib/cmake/GEOS/geos-config-version.cmake
+lib/cmake/GEOS/geos-config.cmake
+lib/cmake/GEOS/geos-targets-release.cmake
+lib/cmake/GEOS/geos-targets.cmake
+lib/libgeos.so
+lib/libgeos.so.3.10.0
+lib/libgeos_c.so
+lib/libgeos_c.so.1
+lib/libgeos_c.so.1.16.0
 lib/pkgconfig/geos.pc
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211002/4d5709b5/attachment.sig>

From gdt at lexort.com  Sat Oct  2 16:07:02 2021
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 02 Oct 2021 19:07:02 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmizgrry6mu.fsf@s1.lexort.com> (Greg Troxel's message of "Sat,
 02 Oct 2021 08:04:57 -0400")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
Message-ID: <rmimtnrxbzd.fsf@s1.lexort.com>


Greg Troxel <gdt at lexort.com> writes:

> Also, the tests are broken for me.   Running make check fails
> completely, and I find in the log:
>
> /tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit: Shared object "libgeos.so.3.10.0" not found
>
> I am running tests from the build directory before I have built a
> package  and then replaced the existing 3.9 installation.  So in
> /usr/pkg/lib, where the library is expected to be, there is
> libgeos.so.3.9.0 and no 3.10.  Looking at the test program:
>
> $ ldd /tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit
> /tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit:
>         -lgeos_c.1 => /usr/pkg/lib/libgeos_c.so.1
>         -lgeos-3.9.1 => /usr/pkg/lib/libgeos-3.9.1.so
>         -lstdc++.9 => /usr/lib/libstdc++.so.9
>         -lm.0 => /usr/lib/libm.so.0
>         -lc.12 => /usr/lib/libc.so.12
>         -lgcc_s.1 => /usr/lib/libgcc_s.so.1
>         -lgeos.3.10.0 => not found
>         -lpthread.1 => /usr/lib/libpthread.so.1
>
> I see it's also finding the wrong libgeos_c, so the root cause is very
> likely not arranging a temporary library path for testing built but not
> installed code.  autoconf/libtool did this correctly, with a scheme to
> link test programs (and anything else) against the built but not
> installed library, and then to relink at installation.  There are of
> course multiple approaches, but "make check" needs to use the
> programs/libs in the build tree, and ignore what's installed.

I worked around the bug in "make check" by installing the package, and
then building it again and running tests, so that when it links against
the wrong library, it finds the same bits.   I was happy to see that all
the tests passed, so there aren't any real geos bugs, just cmake/test
bugs.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211002/ecfb6ca7/attachment.sig>

From Roger.Bivand at nhh.no  Mon Oct  4 03:29:54 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 4 Oct 2021 12:29:54 +0200 (CEST)
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <78ce586-e2a0-8417-d994-99734446347@reclus2.nhh.no>
References: <242e133e-c56f-febb-aac9-81c233ee7967@reclus2.nhh.no>
 <0550C8E5-BBF4-4246-AC97-9EA57BC86356@cleverelephant.ca>
 <rmi8rzc1kvg.fsf@s1.lexort.com>
 <78ce586-e2a0-8417-d994-99734446347@reclus2.nhh.no>
Message-ID: <aacb5c2-1ea-2724-6f1b-3244803a6d12@reclus2.nhh.no>

On Sat, 2 Oct 2021, Roger Bivand wrote:

> On Fri, 1 Oct 2021, Greg Troxel wrote:
>
>>  Paul Ramsey <pramsey at cleverelephant.ca> writes:
>>
>>>  That feels... off the reservation for a library and something for the
>>>  final build? Like, not every platform requires that link, I don't think.
>>
>>  My quick reaction is that -lstdc++ seems funny for things that are
>>  compiled as C++, but if there's a link line intended to be called in a C
>>  build that's perhaps something else.   I'll see how that turns out on
>>  NetBSD shortly.
>> 
>
> Yes, R is C not C++, so the R contributed package (rgeos, sf, ...) DLL on 
> Windows from msys2 is seen as C rather than C++, see for example:
>
> https://developer.r-project.org/Blog/public/2019/03/28/use-of-c-in-packages/index.html
>
> for a discussion of general issues. The specific need here is triggered when 
> building binary contributed packages for macOS and Windows (here the Windows 
> case with gcc and msys2). See also:
>
> https://github.com/rsbivand/foss4g21/blob/main/bivand_foss4g_210930.pdf
>
> from the FOSS4G R-spatial panel two days ago, slides 2-3.

Further explanation from Tomas Kalibera, including detailed descriptions 
of our MXE cross-compilation setting (https://mxe.cc/):

I am having problems finding a documentation for geos-config, which would 
say exactly what --static-clibs and other options are supposed to return, 
it must be somewhere, but I could not find it.

I found in the README.md

     CFLAGS += `geos-config --cflags`
     LDFLAGS += `geos-config --ldflags` -lgeos_c

but it does not use --static-clibs nor other option for "libs"

The options were introduced by PR#497, 
https://trac.osgeo.org/geos/ticket/497, but the corresponding change 
https://trac.osgeo.org/geos/changeset/3832

did not add documentation.

When I use the original geos-config, my build of geos fails with

ln -sf 
'/home/tomas/toolchain/mxe/mxe/usr/x86_64-w64-mingw32.static.posix/bin/geos-config' 
'/home/tomas/toolchain/mxe/mxe/usr/bin/x86_64-w64-mingw32.static.posix-geos-config'
'x86_64-w64-mingw32.static.posix-gcc' -W -Wall -Werror -ansi -pedantic 
'/home/tomas/toolchain/mxe/mxe/src/geos-test.c' -o 
'/home/tomas/toolchain/mxe/mxe/usr/x86_64-w64-mingw32.static.posix/bin/test-geos.exe' 
`'/home/tomas/toolchain/mxe/mxe/usr/bin/x86_64-w64-mingw32.static.posix-geos-config' 
--cflags --clibs`
/home/tomas/toolchain/mxe/mxe/usr/bin/x86_64-w64-mingw32.static.posix-ld: 
/home/tomas/toolchain/mxe/mxe/usr/x86_64-w64-mingw32.static.posix/lib/libgeos_c.a(libgeos_c_la-geos_ts_c.o):/home/tomas/toolchain/mxe/mxe/tmp-geos-x86_64-w64-mingw32.static.posix/geos-3.9.1/capi/geos_ts_c.cpp:330: 
undefined reference to `__cxa_allocate_exception'

  so test-geos.exe cannot be linked. This test is part of the MXE 
configuration for geos, meant to test that the library can be linked 
properly:

     '$(TARGET)-gcc' \
         -W -Wall -Werror -ansi -pedantic \
         '$(TEST_FILE)' -o '$(PREFIX)/$(TARGET)/bin/test-geos.exe' \
         `'$(PREFIX)/bin/$(TARGET)-geos-config' --cflags --clibs`

So, this boils down to the original question what "--clibs" is supposed to 
do. Is the test correct or should it be changed?

If I understand the general comment correctly, yes, it might require some 
effort to find out how to link the standard C++ library on different 
platforms and with different compilers, and I don't have a suggestion 
ready how to do that in scope of geos. But shouldn't this be exactly what 
geos-config should do for the users? That is, perhaps autoconfig/cmake 
should find out the correct options and fill in geos-config appropriately?

RSB: Since geos-config knows its build environment at build time (when it 
is written after processing from geos-config.in), this seems reasonable; 
the problem was the same with autoconf previously too, so this is not a 
cmake issue.

Roger

>
> Roger
>
>

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From Roger.Bivand at nhh.no  Mon Oct  4 03:33:57 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Mon, 4 Oct 2021 12:33:57 +0200 (CEST)
Subject: [geos-devel] 3.10.0beta2
Message-ID: <173861f8-d0d0-27c-85c5-7d70eca1df7@reclus2.nhh.no>

After fixing https://github.com/r-spatial/sf/issues/1809 in R package sf, 
the reverse dependency checks overnight on 1050 R packages using R 
packages linking to GEOS appear clean, with no new failing changes.

Roger

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From strk at kbt.io  Mon Oct  4 08:02:24 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 4 Oct 2021 17:02:24 +0200
Subject: [geos-devel] Should DistanceWithin(EMPTY, ANYTHING,
 ANYDISTANCE) always return false ?
Message-ID: <20211004150224.GD2236@c19>

I'd think yes, honestly, but the current code returns TRUE sometimes,
particularly for MAXDISTANCE being Infinite...

As I think GEOS is not being used by phylosophers, I can't find any
reason why would anyone want a TRUE result from a DistanceWithin()
query involving an EMPTY geometry.

--strk; 

  Libre GIS consultant/developer
  https://strk.kbt.io/services.html

From strk at kbt.io  Mon Oct  4 08:08:41 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 4 Oct 2021 17:08:41 +0200
Subject: [geos-devel] Should DistanceWithin(EMPTY, ANYTHING,
 ANYDISTANCE) always return false ?
In-Reply-To: <20211004150224.GD2236@c19>
References: <20211004150224.GD2236@c19>
Message-ID: <20211004150841.GE2236@c19>

On Mon, Oct 04, 2021 at 05:02:24PM +0200, Sandro Santilli wrote:
> I'd think yes, honestly, but the current code returns TRUE sometimes,
> particularly for MAXDISTANCE being Infinite...
> 
> As I think GEOS is not being used by phylosophers, I can't find any
> reason why would anyone want a TRUE result from a DistanceWithin()
> query involving an EMPTY geometry.

We have the same issue on PostGIS:
https://trac.osgeo.org/postgis/ticket/5008

--strk;

From pramsey at cleverelephant.ca  Mon Oct  4 08:50:47 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 4 Oct 2021 08:50:47 -0700
Subject: [geos-devel] Should DistanceWithin(EMPTY, ANYTHING,
 ANYDISTANCE) always return false ?
In-Reply-To: <20211004150841.GE2236@c19>
References: <20211004150224.GD2236@c19> <20211004150841.GE2236@c19>
Message-ID: <A2557B59-483B-4574-94E8-68E2648BB94C@cleverelephant.ca>

https://trac.osgeo.org/postgis/wiki/DevWikiEmptyGeometry


pramsey=# select st_distance('POINT(1 1)','POINT EMPTY');
 st_distance 
-------------
            
(1 row)

Interesting note in the wiki about returning NULL for DWithin. 

Current behaviour.

pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 1);
 st_dwithin 
------------
 f
(1 row)

pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 'Inf'::float8);
 st_dwithin 
------------
 t
(1 row)

I could see going for "always false" since we're almost there for non-inf values.

P

> On Oct 4, 2021, at 8:08 AM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Mon, Oct 04, 2021 at 05:02:24PM +0200, Sandro Santilli wrote:
>> I'd think yes, honestly, but the current code returns TRUE sometimes,
>> particularly for MAXDISTANCE being Infinite...
>> 
>> As I think GEOS is not being used by phylosophers, I can't find any
>> reason why would anyone want a TRUE result from a DistanceWithin()
>> query involving an EMPTY geometry.
> 
> We have the same issue on PostGIS:
> https://trac.osgeo.org/postgis/ticket/5008
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From me at komzpa.net  Mon Oct  4 09:56:34 2021
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Mon, 4 Oct 2021 19:56:34 +0300
Subject: [geos-devel] Should DistanceWithin(EMPTY, ANYTHING,
 ANYDISTANCE) always return false ?
In-Reply-To: <A2557B59-483B-4574-94E8-68E2648BB94C@cleverelephant.ca>
References: <20211004150224.GD2236@c19> <20211004150841.GE2236@c19>
 <A2557B59-483B-4574-94E8-68E2648BB94C@cleverelephant.ca>
Message-ID: <CAC8Q8tL2iUV46_LnuLAyyNx=9C7LV1f_kbeViDDdH_q622Y8BA@mail.gmail.com>

Points on infinite distance are still on the extended R2+ plane. The empty
points aren't.

This one should be "always false", and make sure that "POINT(INF INF)" is
at INF distance from anything (can be true). POINT(Inf Inf) != POINT(NaN
NaN) in this aspect.

On Mon, Oct 4, 2021 at 6:50 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> https://trac.osgeo.org/postgis/wiki/DevWikiEmptyGeometry
>
>
> pramsey=# select st_distance('POINT(1 1)','POINT EMPTY');
>  st_distance
> -------------
>
> (1 row)
>
> Interesting note in the wiki about returning NULL for DWithin.
>
> Current behaviour.
>
> pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 1);
>  st_dwithin
> ------------
>  f
> (1 row)
>
> pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 'Inf'::float8);
>  st_dwithin
> ------------
>  t
> (1 row)
>
> I could see going for "always false" since we're almost there for non-inf
> values.
>
> P
>
> > On Oct 4, 2021, at 8:08 AM, Sandro Santilli <strk at kbt.io> wrote:
> >
> > On Mon, Oct 04, 2021 at 05:02:24PM +0200, Sandro Santilli wrote:
> >> I'd think yes, honestly, but the current code returns TRUE sometimes,
> >> particularly for MAXDISTANCE being Infinite...
> >>
> >> As I think GEOS is not being used by phylosophers, I can't find any
> >> reason why would anyone want a TRUE result from a DistanceWithin()
> >> query involving an EMPTY geometry.
> >
> > We have the same issue on PostGIS:
> > https://trac.osgeo.org/postgis/ticket/5008
> >
> > --strk;
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211004/6e16cd01/attachment-0001.html>

From strk at kbt.io  Mon Oct  4 15:43:13 2021
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 5 Oct 2021 00:43:13 +0200
Subject: [geos-devel] Should DistanceWithin(EMPTY, ANYTHING,
 ANYDISTANCE) always return false ?
In-Reply-To: <CAC8Q8tL2iUV46_LnuLAyyNx=9C7LV1f_kbeViDDdH_q622Y8BA@mail.gmail.com>
References: <20211004150224.GD2236@c19> <20211004150841.GE2236@c19>
 <A2557B59-483B-4574-94E8-68E2648BB94C@cleverelephant.ca>
 <CAC8Q8tL2iUV46_LnuLAyyNx=9C7LV1f_kbeViDDdH_q622Y8BA@mail.gmail.com>
Message-ID: <20211004224313.GA187923@c19>

I pushed a commit to main branch always returning false.

Same on the PostGIS side, but I don't know up to which version I
should backport that. If you have old versions around, could you
please leave a comment in https://trac.osgeo.org/postgis/ticket/5008 ?

--strk;

On Mon, Oct 04, 2021 at 07:56:34PM +0300, Darafei "Kom?pa" Praliaskouski wrote:
> Points on infinite distance are still on the extended R2+ plane. The empty
> points aren't.
> 
> This one should be "always false", and make sure that "POINT(INF INF)" is
> at INF distance from anything (can be true). POINT(Inf Inf) != POINT(NaN
> NaN) in this aspect.
> 
> On Mon, Oct 4, 2021 at 6:50 PM Paul Ramsey <pramsey at cleverelephant.ca>
> wrote:
> 
> > https://trac.osgeo.org/postgis/wiki/DevWikiEmptyGeometry
> >
> >
> > pramsey=# select st_distance('POINT(1 1)','POINT EMPTY');
> >  st_distance
> > -------------
> >
> > (1 row)
> >
> > Interesting note in the wiki about returning NULL for DWithin.
> >
> > Current behaviour.
> >
> > pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 1);
> >  st_dwithin
> > ------------
> >  f
> > (1 row)
> >
> > pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 'Inf'::float8);
> >  st_dwithin
> > ------------
> >  t
> > (1 row)
> >
> > I could see going for "always false" since we're almost there for non-inf
> > values.
> >
> > P
> >
> > > On Oct 4, 2021, at 8:08 AM, Sandro Santilli <strk at kbt.io> wrote:
> > >
> > > On Mon, Oct 04, 2021 at 05:02:24PM +0200, Sandro Santilli wrote:
> > >> I'd think yes, honestly, but the current code returns TRUE sometimes,
> > >> particularly for MAXDISTANCE being Infinite...
> > >>
> > >> As I think GEOS is not being used by phylosophers, I can't find any
> > >> reason why would anyone want a TRUE result from a DistanceWithin()
> > >> query involving an EMPTY geometry.
> > >
> > > We have the same issue on PostGIS:
> > > https://trac.osgeo.org/postgis/ticket/5008
> > >
> > > --strk;
> > > _______________________________________________
> > > geos-devel mailing list
> > > geos-devel at lists.osgeo.org
> > > https://lists.osgeo.org/mailman/listinfo/geos-devel
> >
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
> >

> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


-- 

  Libre GIS consultant/developer
  https://strk.kbt.io/services.html

From pramsey at cleverelephant.ca  Mon Oct  4 15:44:36 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 4 Oct 2021 15:44:36 -0700
Subject: [geos-devel] Should DistanceWithin(EMPTY, ANYTHING,
 ANYDISTANCE) always return false ?
In-Reply-To: <20211004224313.GA187923@c19>
References: <20211004150224.GD2236@c19> <20211004150841.GE2236@c19>
 <A2557B59-483B-4574-94E8-68E2648BB94C@cleverelephant.ca>
 <CAC8Q8tL2iUV46_LnuLAyyNx=9C7LV1f_kbeViDDdH_q622Y8BA@mail.gmail.com>
 <20211004224313.GA187923@c19>
Message-ID: <16AB530F-F5CF-4C62-B7A3-01B055218DB0@cleverelephant.ca>

Doesn't seem super important to back-port. To the extent that it's extant behaviour, I think we should just Let It Be.

P

> On Oct 4, 2021, at 3:43 PM, Sandro Santilli <strk at kbt.io> wrote:
> 
> I pushed a commit to main branch always returning false.
> 
> Same on the PostGIS side, but I don't know up to which version I
> should backport that. If you have old versions around, could you
> please leave a comment in https://trac.osgeo.org/postgis/ticket/5008 ?
> 
> --strk;
> 
> On Mon, Oct 04, 2021 at 07:56:34PM +0300, Darafei "Kom?pa" Praliaskouski wrote:
>> Points on infinite distance are still on the extended R2+ plane. The empty
>> points aren't.
>> 
>> This one should be "always false", and make sure that "POINT(INF INF)" is
>> at INF distance from anything (can be true). POINT(Inf Inf) != POINT(NaN
>> NaN) in this aspect.
>> 
>> On Mon, Oct 4, 2021 at 6:50 PM Paul Ramsey <pramsey at cleverelephant.ca>
>> wrote:
>> 
>>> https://trac.osgeo.org/postgis/wiki/DevWikiEmptyGeometry
>>> 
>>> 
>>> pramsey=# select st_distance('POINT(1 1)','POINT EMPTY');
>>> st_distance
>>> -------------
>>> 
>>> (1 row)
>>> 
>>> Interesting note in the wiki about returning NULL for DWithin.
>>> 
>>> Current behaviour.
>>> 
>>> pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 1);
>>> st_dwithin
>>> ------------
>>> f
>>> (1 row)
>>> 
>>> pramsey=# select st_dwithin('POINT(1 1)','POINT EMPTY', 'Inf'::float8);
>>> st_dwithin
>>> ------------
>>> t
>>> (1 row)
>>> 
>>> I could see going for "always false" since we're almost there for non-inf
>>> values.
>>> 
>>> P
>>> 
>>>> On Oct 4, 2021, at 8:08 AM, Sandro Santilli <strk at kbt.io> wrote:
>>>> 
>>>> On Mon, Oct 04, 2021 at 05:02:24PM +0200, Sandro Santilli wrote:
>>>>> I'd think yes, honestly, but the current code returns TRUE sometimes,
>>>>> particularly for MAXDISTANCE being Infinite...
>>>>> 
>>>>> As I think GEOS is not being used by phylosophers, I can't find any
>>>>> reason why would anyone want a TRUE result from a DistanceWithin()
>>>>> query involving an EMPTY geometry.
>>>> 
>>>> We have the same issue on PostGIS:
>>>> https://trac.osgeo.org/postgis/ticket/5008
>>>> 
>>>> --strk;
>>>> _______________________________________________
>>>> geos-devel mailing list
>>>> geos-devel at lists.osgeo.org
>>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>> 
>>> _______________________________________________
>>> geos-devel mailing list
>>> geos-devel at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>> 
> 
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> 
> -- 
> 
>  Libre GIS consultant/developer
>  https://strk.kbt.io/services.html
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Mon Oct  4 15:51:47 2021
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 5 Oct 2021 00:51:47 +0200
Subject: [geos-devel] Should DistanceWithin(EMPTY, ANYTHING,
 ANYDISTANCE) always return false ?
In-Reply-To: <16AB530F-F5CF-4C62-B7A3-01B055218DB0@cleverelephant.ca>
References: <20211004150224.GD2236@c19> <20211004150841.GE2236@c19>
 <A2557B59-483B-4574-94E8-68E2648BB94C@cleverelephant.ca>
 <CAC8Q8tL2iUV46_LnuLAyyNx=9C7LV1f_kbeViDDdH_q622Y8BA@mail.gmail.com>
 <20211004224313.GA187923@c19>
 <16AB530F-F5CF-4C62-B7A3-01B055218DB0@cleverelephant.ca>
Message-ID: <20211004225147.GB187923@c19>

On Mon, Oct 04, 2021 at 03:44:36PM -0700, Paul Ramsey wrote:
> Doesn't seem super important to back-port. To the extent that it's extant behaviour, I think we should just Let It Be.

Ok, I added a NEWS item just for 3.2.0, under the *Breaking changes*
section (for PostGIS, I mean, as this is completely new in GEOS).

--strk;

From geos-trac at osgeo.org  Tue Oct  5 09:59:01 2021
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 05 Oct 2021 16:59:01 -0000
Subject: [geos-devel] [GEOS] #1133: GEOSDistance raises floating point
 exceptions for boundable geometries
Message-ID: <044.117cb751909ae1b0efdf948aae7f7ea5@osgeo.org>

#1133: GEOSDistance raises floating point exceptions for boundable geometries
--------------------------+--------------------------
 Reporter:  Brendan Ward  |      Owner:  geos-devel@?
     Type:  defect        |     Status:  new
 Priority:  major         |  Milestone:  3.10.0
Component:  Default       |    Version:  main
 Severity:  Unassigned    |   Keywords:
--------------------------+--------------------------
 GEOSDistance C API function (and likely underlying C++ implementation) is
 causing floating point overflow exceptions to be raised for certain
 distances for boundable geometries but not for points.

 Test case demonstrating this: https://github.com/libgeos/geos/pull/485


 This was encountered in pygeos:
 https://github.com/pygeos/pygeos/issues/404


 For example, calculating the distance between 2 points does not set
 floating point exceptions, whereas calculating the distance between 2
 lines or polygons that are the same distance apart does raise these
 exceptions.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1133>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Wed Oct  6 11:10:34 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 6 Oct 2021 11:10:34 -0700
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmimtnrxbzd.fsf@s1.lexort.com>
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
Message-ID: <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>

On Sat, Oct 2, 2021 at 4:07 PM Greg Troxel <gdt at lexort.com> wrote:
>
> > Also, the tests are broken for me.   Running make check fails
> > completely, and I find in the log:

Everything works fine in MacOS, I don't have access to a broken platform to
try things out on...

Sparrow:~/Code/geos-git-build pramsey% otool -L bin/test_geos_unit
bin/test_geos_unit:
@rpath/libgeos_c.1.dylib (compatibility version 1.0.0, current version
1.16.0)
@rpath/libgeos.3.10.0.dylib (compatibility version 3.10.0, current version
3.10.0)
/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version
800.7.0)
/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version
1281.0.0)

The file diffs all look reasonable to me. Some classes were added, a few
were removed.

I'm looking at the pthreads thing... there are a few tests that do
multi-threaded things to test the reentrant code bits, but the library
itself doesn't use pthreads. I'm trying to figure if/how to make sure we
aren't having it as a library dependency, it should only be a unit test
dependency.

P

> >
> > /tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit:
Shared object "libgeos.so.3.10.0" not found
> >
> > I am running tests from the build directory before I have built a
> > package  and then replaced the existing 3.9 installation.  So in
> > /usr/pkg/lib, where the library is expected to be, there is
> > libgeos.so.3.9.0 and no 3.10.  Looking at the test program:
> >
> > $ ldd /tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit
> > /tmp/work/geography/geos/work/geos-3.10.0beta2/bin/test_geos_unit:
> >         -lgeos_c.1 => /usr/pkg/lib/libgeos_c.so.1
> >         -lgeos-3.9.1 => /usr/pkg/lib/libgeos-3.9.1.so
> >         -lstdc++.9 => /usr/lib/libstdc++.so.9
> >         -lm.0 => /usr/lib/libm.so.0
> >         -lc.12 => /usr/lib/libc.so.12
> >         -lgcc_s.1 => /usr/lib/libgcc_s.so.1
> >         -lgeos.3.10.0 => not found
> >         -lpthread.1 => /usr/lib/libpthread.so.1
> >
> > I see it's also finding the wrong libgeos_c, so the root cause is very
> > likely not arranging a temporary library path for testing built but not
> > installed code.  autoconf/libtool did this correctly, with a scheme to
> > link test programs (and anything else) against the built but not
> > installed library, and then to relink at installation.  There are of
> > course multiple approaches, but "make check" needs to use the
> > programs/libs in the build tree, and ignore what's installed.
>
> I worked around the bug in "make check" by installing the package, and
> then building it again and running tests, so that when it links against
> the wrong library, it finds the same bits.   I was happy to see that all
> the tests passed, so there aren't any real geos bugs, just cmake/test
> bugs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211006/572a444b/attachment.html>

From pramsey at cleverelephant.ca  Wed Oct  6 11:13:22 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 6 Oct 2021 11:13:22 -0700
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
Message-ID: <CACowWR1FidgwAQDUSs17S-Y6JswB6q+nmmRw4+o-0J=TrFNCOw@mail.gmail.com>

I found the relevant CMake line, and only the unit tests should be ending
up with a link dependency to pthreads. So don't declare the library itself
as having a pthread dependency. (Maybe next release, when we get all jiggy
with multi-threaded performance work, ha ha ha)
P

--- from cmakelists.txt
find_package(Threads)
target_link_libraries(test_geos_unit PRIVATE geos geos_c Threads::Threads)

On Wed, Oct 6, 2021 at 11:10 AM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:
> I'm looking at the pthreads thing... there are a few tests that do
multi-threaded things to test the reentrant code bits, but the library
itself doesn't use pthreads. I'm trying to figure if/how to make sure we
aren't having it as a library dependency, it should only be a unit test
dependency.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211006/ac3b1d40/attachment.html>

From pramsey at cleverelephant.ca  Wed Oct  6 11:32:29 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 6 Oct 2021 11:32:29 -0700
Subject: [geos-devel] 3.10.0beta3
Message-ID: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>

Here it is incorporating some new commits and closed tickets.

http://download.osgeo.org/geos/geos-3.10.0beta3.tar.bz2

From geos-trac at osgeo.org  Wed Oct  6 13:17:22 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Oct 2021 20:17:22 -0000
Subject: [geos-devel] [GEOS] #1071: Setting lower precision of polygon
 always collapses polygon
In-Reply-To: <044.55e9d893438e1d38a887811e67ed8222@osgeo.org>
References: <044.55e9d893438e1d38a887811e67ed8222@osgeo.org>
Message-ID: <059.f8496fa7aac352aa5f501cf655eb6052@osgeo.org>

#1071: Setting lower precision of polygon always collapses polygon
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.5.1
 Severity:  Unassigned    |  Resolution:  wontfix
 Keywords:                |
--------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 It's hard, some systems both (a) want only homogeneous feature types and
 (b) want to preserve collapsed components.

 So you can't for example convert a LINESTRING(0 0, 0 0) into a POINT(0 0).

 Nor can you drop it, because the user wants to *see* the result.

 I'm going to close this because I don't see a fix path, just an
 interesting conversation over beers.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1071#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  6 13:22:03 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Oct 2021 20:22:03 -0000
Subject: [geos-devel] [GEOS] Batch modify: #1081, #755, #760, #835, #922,
 #962, #968, #995, ...
In-Reply-To: <191.e11f56b744bc5848d51ca69de3cfc475@osgeo.org>
References: <191.e11f56b744bc5848d51ca69de3cfc475@osgeo.org>
Message-ID: <206.cf05109527f46ad2747b0fb56aabe48d@osgeo.org>

Batch modification to #1081, #755, #760, #835, #922, #962, #968, #995, #1012, #1030, #1041, #1052, #1071, #1074, #1075, #1080, #1114, #1126, #1127, #1131, #1133, #677, #935, #940, #946, #965, #989, #991, #1025, #1083, #1089, #1102, #1113, #1130 by robe:
milestone to 3.11.0

Comment:
Retargeting in prep for GEOS 3.10.0 release

-- 
Tickets URL: <https://trac.osgeo.org/geos/query?id=1081%2C755%2C760%2C835%2C922%2C962%2C968%2C995%2C1012%2C1030%2C1041%2C1052%2C1071%2C1074%2C1075%2C1080%2C1114%2C1126%2C1127%2C1131%2C1133%2C677%2C935%2C940%2C946%2C965%2C989%2C991%2C1025%2C1083%2C1089%2C1102%2C1113%2C1130>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  6 13:25:26 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Oct 2021 20:25:26 -0000
Subject: [geos-devel] [GEOS] #1081: TopologyPreservingSimplifier /
 GEOSTopologyPreserveSimplify on Windows
In-Reply-To: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
References: <045.7f686efbeb0e60cc98e5d27eafa53a8c@osgeo.org>
Message-ID: <060.ee00cad22bca37a3431d7470ba1fdd7d@osgeo.org>

#1081: TopologyPreservingSimplifier / GEOSTopologyPreserveSimplify on Windows
------------------------+---------------------------
 Reporter:  Mike Taves  |       Owner:  geos-devel@?
     Type:  defect      |      Status:  reopened
 Priority:  major       |   Milestone:  3.11.0
Component:  Unit Tests  |     Version:  main
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by robe):

 * priority:  blocker => major


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1081#comment:9>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  6 13:43:22 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Oct 2021 20:43:22 -0000
Subject: [geos-devel] [GEOS] #1061: Cannot build GEOS on Windows 10
 under MinGW
In-Reply-To: <047.7e6fca943d9812956254e165f3f9ca71@osgeo.org>
References: <047.7e6fca943d9812956254e165f3f9ca71@osgeo.org>
Message-ID: <062.bcbf5d64dd269a39e22ad41a4549f178@osgeo.org>

#1061: Cannot build GEOS on Windows 10 under MinGW
-----------------------------+---------------------------
 Reporter:  twrackers        |       Owner:  geos-devel@?
     Type:  defect           |      Status:  closed
 Priority:  major            |   Milestone:  3.8.2
Component:  Default          |     Version:  3.6.2
 Severity:  Unassigned       |  Resolution:  wontfix
 Keywords:  MinGW geos make  |
-----------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 Old version, quiet ticket.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1061#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  6 13:43:43 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Oct 2021 20:43:43 -0000
Subject: [geos-devel] [GEOS] #1059: Cannot build GEOS on Windows 10
 under MinGW
In-Reply-To: <047.65d740a306713594cb22add661480e8b@osgeo.org>
References: <047.65d740a306713594cb22add661480e8b@osgeo.org>
Message-ID: <062.15c4fa051a1046a0bcf397c4a5a11634@osgeo.org>

#1059: Cannot build GEOS on Windows 10 under MinGW
------------------------+---------------------------
 Reporter:  twrackers   |       Owner:  geos-devel@?
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.8.2
Component:  Default     |     Version:  3.8.0
 Severity:  Unassigned  |  Resolution:  wontfix
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 Old version, quiet ticket.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1059#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  6 13:44:32 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Oct 2021 20:44:32 -0000
Subject: [geos-devel] [GEOS] #909: Stop sending geos ticket updates to
 geos-develop
In-Reply-To: <042.26cb747f6ef013aa55ff640926405d4c@osgeo.org>
References: <042.26cb747f6ef013aa55ff640926405d4c@osgeo.org>
Message-ID: <057.d8c354f82a57b99438e23f581b614739@osgeo.org>

#909: Stop sending geos ticket updates to geos-develop
------------------------+---------------------------
 Reporter:  robe        |       Owner:  geos-devel@?
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  Management
Component:  Default     |     Version:  3.6.2
 Severity:  Unassigned  |  Resolution:  wontfix
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 Old

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/909#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Oct  6 13:45:50 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 06 Oct 2021 20:45:50 -0000
Subject: [geos-devel] [GEOS] #1003: MontoneChainBuilder Assertion Error
In-Reply-To: <046.e6e121c7d2b8649bb7d7a413240019b4@osgeo.org>
References: <046.e6e121c7d2b8649bb7d7a413240019b4@osgeo.org>
Message-ID: <061.2cf880872ec525079dd3e2ccb4c7a82c@osgeo.org>

#1003: MontoneChainBuilder Assertion Error
------------------------+---------------------------
 Reporter:  apjoseph    |       Owner:  geos-devel@?
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.8.2
Component:  Default     |     Version:  3.8.0
 Severity:  Unassigned  |  Resolution:  wontfix
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 Old. If have example program and input data to trigger, re-open.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1003#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From gdt at lexort.com  Wed Oct  6 16:21:04 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 06 Oct 2021 19:21:04 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 (Paul Ramsey's message of "Wed, 6 Oct 2021 11:10:34 -0700")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
Message-ID: <rmi5yu9g2ov.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> On Sat, Oct 2, 2021 at 4:07 PM Greg Troxel <gdt at lexort.com> wrote:
>>
>> > Also, the tests are broken for me.   Running make check fails
>> > completely, and I find in the log:
>
> Everything works fine in MacOS, I don't have access to a broken platform to
> try things out on...

Thanks for looking into this.

> Sparrow:~/Code/geos-git-build pramsey% otool -L bin/test_geos_unit
> bin/test_geos_unit:
> @rpath/libgeos_c.1.dylib (compatibility version 1.0.0, current version
> 1.16.0)
> @rpath/libgeos.3.10.0.dylib (compatibility version 3.10.0, current version
> 3.10.0)
> /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version
> 800.7.0)
> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version
> 1281.0.0)
>
> The file diffs all look reasonable to me. Some classes were added, a few
> were removed.

Do you mean that if you

  have geos 3.9 installed in the system, in some prefix

  you build 3.10 with that same prefix -- as if you are building an
  updated package

  you run the tests in the 3.10 dir, before you have installed the
  newpackage

that the tests find the 3.10 not-installed libs and do not find the
installed version?

Are you or someone else able to try this on Linux or FreeBSD?

I wonder if anyone knows if there is a mechanism that intends to allow
this to work, as I don't see how it would with specific effort.

I will test with pkgsrc on Mac (prefix /opt/pkg).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211006/7480928e/attachment.sig>

From gdt at lexort.com  Wed Oct  6 16:23:56 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 06 Oct 2021 19:23:56 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <CACowWR1FidgwAQDUSs17S-Y6JswB6q+nmmRw4+o-0J=TrFNCOw@mail.gmail.com>
 (Paul Ramsey's message of "Wed, 6 Oct 2021 11:13:22 -0700")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <CACowWR1FidgwAQDUSs17S-Y6JswB6q+nmmRw4+o-0J=TrFNCOw@mail.gmail.com>
Message-ID: <rmi1r4xg2k3.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> I found the relevant CMake line, and only the unit tests should be ending
> up with a link dependency to pthreads. So don't declare the library itself
> as having a pthread dependency. (Maybe next release, when we get all jiggy
> with multi-threaded performance work, ha ha ha)
> P
>
> --- from cmakelists.txt
> find_package(Threads)
> target_link_libraries(test_geos_unit PRIVATE geos geos_c Threads::Threads)

Interesting.  I wonder if the tests should avoid threads if the library
isn't built with threads.

It seems obvious (maybe I'm wrong) that if a library is not built with
threads, then a threaded program that uses it must ensure that only one
library call is happening at any given time, either by calling it only
from one specific thread, or having a "call into geos" mutex.

I found that the geos library did get linked with -lpthread.  I will
reproduce that and see if I can figure out why, after moving to rc3.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211006/0cbcf0b0/attachment.sig>

From pramsey at cleverelephant.ca  Wed Oct  6 16:27:32 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 6 Oct 2021 16:27:32 -0700
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmi5yu9g2ov.fsf@s1.lexort.com>
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <rmi5yu9g2ov.fsf@s1.lexort.com>
Message-ID: <6B298C6D-2D71-43D6-A6B5-A5644567FC27@cleverelephant.ca>



> On Oct 6, 2021, at 4:21 PM, Greg Troxel <gdt at lexort.com> wrote:
> 
> Do you mean that if you
> 
>  have geos 3.9 installed in the system, in some prefix
> 
>  you build 3.10 with that same prefix -- as if you are building an
>  updated package
> 
>  you run the tests in the 3.10 dir, before you have installed the
>  newpackage
> 
> that the tests find the 3.10 not-installed libs and do not find the
> installed version?

Yes, that's 100% what I mean, and my dev environment would be well-nigh unusable were that not the case. My unit tests in my working dir link to the libraries in the same dir, so I can test my changes, without picking up my old system installed versions.

P.

> 
> Are you or someone else able to try this on Linux or FreeBSD?
> 
> I wonder if anyone knows if there is a mechanism that intends to allow
> this to work, as I don't see how it would with specific effort.
> 
> I will test with pkgsrc on Mac (prefix /opt/pkg).


From pramsey at cleverelephant.ca  Wed Oct  6 16:30:02 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 6 Oct 2021 16:30:02 -0700
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmi1r4xg2k3.fsf@s1.lexort.com>
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <CACowWR1FidgwAQDUSs17S-Y6JswB6q+nmmRw4+o-0J=TrFNCOw@mail.gmail.com>
 <rmi1r4xg2k3.fsf@s1.lexort.com>
Message-ID: <9C174F66-66EC-4195-9E0A-1D7A2BF963ED@cleverelephant.ca>



> On Oct 6, 2021, at 4:23 PM, Greg Troxel <gdt at lexort.com> wrote:
> 
> 
> Paul Ramsey <pramsey at cleverelephant.ca> writes:
> 
>> I found the relevant CMake line, and only the unit tests should be ending
>> up with a link dependency to pthreads. So don't declare the library itself
>> as having a pthread dependency. (Maybe next release, when we get all jiggy
>> with multi-threaded performance work, ha ha ha)
>> P
>> 
>> --- from cmakelists.txt
>> find_package(Threads)
>> target_link_libraries(test_geos_unit PRIVATE geos geos_c Threads::Threads)
> 
> Interesting.  I wonder if the tests should avoid threads if the library
> isn't built with threads.

No, the tests are saying "what if a multi-threaded application needed to call this library". So this is a useful exercise.

> It seems obvious (maybe I'm wrong) that if a library is not built with
> threads, then a threaded program that uses it must ensure that only one
> library call is happening at any given time, either by calling it only
> from one specific thread, or having a "call into geos" mutex.

That's essentially what happens in the "reentrant API", the threads each keep a piece of "GEOS state" local to themselves and pass it into their function calls, so they avoid stomping on each other for things like the default geometryfactor or error messages.

> I found that the geos library did get linked with -lpthread.  I will
> reproduce that and see if I can figure out why, after moving to rc3.

Hm, that's quite odd, the cmake line only applies Threads::Thread to the test_geos_unit target, not to the library targets.

P

> 


From mwtoews at gmail.com  Wed Oct  6 17:26:42 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 7 Oct 2021 13:26:42 +1300
Subject: [geos-devel] 3.10.0beta3
In-Reply-To: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
References: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
Message-ID: <CAM2FmMrkZZ-reBssT+5J8-_Nw_zse2vdzbZXWP9wf9nTR_OQ7A@mail.gmail.com>

On Thu, 7 Oct 2021 at 07:32, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>
> Here it is incorporating some new commits and closed tickets.
>
> http://download.osgeo.org/geos/geos-3.10.0beta3.tar.bz2

Still without https://git.osgeo.org/gitea/geos/geos/pulls/114

Should I re-submit the PR to GitHub instead?

From gdt at lexort.com  Thu Oct  7 07:06:49 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 07 Oct 2021 10:06:49 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <6B298C6D-2D71-43D6-A6B5-A5644567FC27@cleverelephant.ca> (Paul
 Ramsey's message of "Wed, 6 Oct 2021 16:27:32 -0700")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <rmi5yu9g2ov.fsf@s1.lexort.com>
 <6B298C6D-2D71-43D6-A6B5-A5644567FC27@cleverelephant.ca>
Message-ID: <rmi4k9tc4jq.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

>> On Oct 6, 2021, at 4:21 PM, Greg Troxel <gdt at lexort.com> wrote:
>> 
>> Do you mean that if you
>> 
>>  have geos 3.9 installed in the system, in some prefix
>> 
>>  you build 3.10 with that same prefix -- as if you are building an
>>  updated package
>> 
>>  you run the tests in the 3.10 dir, before you have installed the
>>  newpackage
>> 
>> that the tests find the 3.10 not-installed libs and do not find the
>> installed version?
>
> Yes, that's 100% what I mean, and my dev environment would be
> well-nigh unusable were that not the case. My unit tests in my working
> dir link to the libraries in the same dir, so I can test my changes,
> without picking up my old system installed versions.

Great, we agree on how it ought to work.

I have been turning on verbose build options and have found the link
line for the tests.  It carries through the -R/usr/pkg/lib line from the
build environment and there doesn't appear to be any mechanism to force
the not-installed libs.

I need to look into this further, but so far I haven't found a mechanism
that arranges for the correct libs to be used.  I've asked NetBSD cmake
people if they understand the grand plan how this is supposed to work.


(On the pthread front, I think I was confused, so let's assume it's not
an issue and I'll speak up again if it is.)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211007/d0d12025/attachment.sig>

From pramsey at cleverelephant.ca  Thu Oct  7 09:02:18 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 7 Oct 2021 09:02:18 -0700
Subject: [geos-devel] 3.10.0beta3
In-Reply-To: <CAM2FmMrkZZ-reBssT+5J8-_Nw_zse2vdzbZXWP9wf9nTR_OQ7A@mail.gmail.com>
References: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
 <CAM2FmMrkZZ-reBssT+5J8-_Nw_zse2vdzbZXWP9wf9nTR_OQ7A@mail.gmail.com>
Message-ID: <C4C52CBB-F8BB-4F24-932D-331E097633F6@cleverelephant.ca>

No, thanks for the poke. Merged.
P

> On Oct 6, 2021, at 5:26 PM, Mike Taves <mwtoews at gmail.com> wrote:
> 
> On Thu, 7 Oct 2021 at 07:32, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>> 
>> Here it is incorporating some new commits and closed tickets.
>> 
>> http://download.osgeo.org/geos/geos-3.10.0beta3.tar.bz2
> 
> Still without https://git.osgeo.org/gitea/geos/geos/pulls/114
> 
> Should I re-submit the PR to GitHub instead?
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From gdt at lexort.com  Sun Oct 10 09:51:08 2021
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 10 Oct 2021 12:51:08 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmi4k9tc4jq.fsf@s1.lexort.com> (Greg Troxel's message of "Thu,
 07 Oct 2021 10:06:49 -0400")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <rmi5yu9g2ov.fsf@s1.lexort.com>
 <6B298C6D-2D71-43D6-A6B5-A5644567FC27@cleverelephant.ca>
 <rmi4k9tc4jq.fsf@s1.lexort.com>
Message-ID: <rmia6jgzuv7.fsf@s1.lexort.com>


I've been looking into the test failures.

My build passes LDFLAGS of -R/usr/pkg/lib, because pkgsrc builds to a
prefix that is not part of the default search path.  And, while geos
does not depend on libraries from pkgsrc, in general packages depend on
other packages and need to find their libs at runtime.

The build of the tests programs use those LDFLAGS (which seems natural
enough).  This results in a bunch of libs being DT_NEEDED:

  $ objdump -x /tmp/work/geography/geos/work/geos-3.10.0beta3/bin/test_geos_unit
  [snip]
  Dynamic Section:
    NEEDED               libgeos_c.so.1
    NEEDED               libgeos.so.3.10.0
    NEEDED               libpthread.so.1
    NEEDED               libstdc++.so.9
    NEEDED               libm.so.0
    NEEDED               libgcc_s.so.1
    NEEDED               libc.so.12
    RPATH                /usr/pkg/lib
  [snip]

which is all straightforward for a program to be installed.


I still have not found any mechanism that attempts to arrange for the
not-installed library to be used for the test.

maybe the tests should be static?
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211010/cb3cc28f/attachment.sig>

From andrew.d.hershberger at gmail.com  Sun Oct 10 19:02:38 2021
From: andrew.d.hershberger at gmail.com (Andrew Hershberger)
Date: Sun, 10 Oct 2021 21:02:38 -0500
Subject: [geos-devel] 3.10.0beta3
In-Reply-To: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
References: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
Message-ID: <CACZW30M_JNHYC57HNFO09o3=TW5TrPBcmhEmUPquAnc7FWeK=Q@mail.gmail.com>

Should this be able to build with -DDISABLE_GEOS_INLINE=true ?

When I build with?

curl http://download.osgeo.org/geos/geos-3.10.0beta3.tar.bz2 | bunzip2 |
tar --strip-components=1 -x
mkdir build
cd build
cmake -DCMAKE_BUILD_TYPE=Release -DDISABLE_GEOS_INLINE=true ..
make

I'm seeing a number of errors, starting with?

In file included from
/Users/andrew/Developer/GEOSwift_geos/.update/src/algorithm/CGAlgorithmsDD.cpp:192:
/Users/andrew/Developer/GEOSwift_geos/.update/include/geos/algorithm/CGAlgorithmsDD.inl:26:17:
error: cannot define or redeclare 'orientationIndexFilter' here because
namespace 'algorithm' does not enclose namespace 'CGAlgorithmsDD'
CGAlgorithmsDD::orientationIndexFilter(double pax, double pay,
~~~~~~~~~~~~~~~~^

This is on an M1 Mac mini with the following output when running cmake?

-- GEOS: Build type: Release
-- GEOS: Run-time output:
/Users/andrew/Developer/GEOSwift_geos/.update/build/bin
-- GEOS: Archives output:
/Users/andrew/Developer/GEOSwift_geos/.update/build/lib
-- The C compiler identification is AppleClang 13.0.0.13000029
-- The CXX compiler identification is AppleClang 13.0.0.13000029
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc
- skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++
- skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- GEOS: Version 3.10.0beta3
-- GEOS: C API Version 1.16.0
-- GEOS: JTS port 1.18.0
-- GEOS: Require C++11
-- GEOS: Function inlining DISABLED
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
-- GEOS: Build geosop ON
-- GEOS: Build astyle ON
-- GEOS: Configured 'dist' target
-- GEOS: Configured 'distcheck' target
-- Configuring done
-- Generating done
-- Build files have been written to:
/Users/andrew/Developer/GEOSwift_geos/.update/build



On Wed, Oct 6, 2021 at 1:32 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Here it is incorporating some new commits and closed tickets.
>
> http://download.osgeo.org/geos/geos-3.10.0beta3.tar.bz2
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211010/3cb420df/attachment.html>

From andrew.d.hershberger at gmail.com  Sun Oct 10 20:18:54 2021
From: andrew.d.hershberger at gmail.com (Andrew Hershberger)
Date: Sun, 10 Oct 2021 22:18:54 -0500
Subject: [geos-devel] 3.10.0beta3
In-Reply-To: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
References: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
Message-ID: <CACZW30N3TwzpqHgF1CkH5sNiy07jAGFCF8L9CBq9iAs9dOqg-Q@mail.gmail.com>

Here's a diff that shows the WKT writing behavior changes relative to 3.9.1
as revealed by the GEOSwift test suite.

https://github.com/GEOSwift/GEOSwift/compare/geos-3.10.0

I do remember discussion of these changes a while back, but I haven't spent
enough time studying these specific changes yet to determine whether they
make sense.



On Wed, Oct 6, 2021 at 1:32 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Here it is incorporating some new commits and closed tickets.
>
> http://download.osgeo.org/geos/geos-3.10.0beta3.tar.bz2
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211010/2fd18e51/attachment.html>

From pramsey at cleverelephant.ca  Mon Oct 11 16:25:43 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 11 Oct 2021 16:25:43 -0700
Subject: [geos-devel] 3.10.0beta3
In-Reply-To: <CACZW30N3TwzpqHgF1CkH5sNiy07jAGFCF8L9CBq9iAs9dOqg-Q@mail.gmail.com>
References: <CACowWR25MLbUq8wsgFAtd0Pro4rdnsg6swJYmDTjwwqPWFCTtA@mail.gmail.com>
 <CACZW30N3TwzpqHgF1CkH5sNiy07jAGFCF8L9CBq9iAs9dOqg-Q@mail.gmail.com>
Message-ID: <92E91289-C529-4371-8113-3C76872431C3@cleverelephant.ca>

Seem to make sense to me? This is a result of adoptiong the ryu package for our double writing. You can lock things down by looking at the precision/padding options for WKT output.

P

> On Oct 10, 2021, at 8:18 PM, Andrew Hershberger <andrew.d.hershberger at gmail.com> wrote:
> 
> Here's a diff that shows the WKT writing behavior changes relative to 3.9.1 as revealed by the GEOSwift test suite.
> 
> https://github.com/GEOSwift/GEOSwift/compare/geos-3.10.0
> 
> I do remember discussion of these changes a while back, but I haven't spent enough time studying these specific changes yet to determine whether they make sense.
> 
> 
> 
> On Wed, Oct 6, 2021 at 1:32 PM Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> Here it is incorporating some new commits and closed tickets.
> 
> http://download.osgeo.org/geos/geos-3.10.0beta3.tar.bz2
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Mon Oct 11 16:29:23 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 11 Oct 2021 16:29:23 -0700
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmia6jgzuv7.fsf@s1.lexort.com>
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <rmi5yu9g2ov.fsf@s1.lexort.com>
 <6B298C6D-2D71-43D6-A6B5-A5644567FC27@cleverelephant.ca>
 <rmi4k9tc4jq.fsf@s1.lexort.com> <rmia6jgzuv7.fsf@s1.lexort.com>
Message-ID: <032D5479-4562-43AF-B3D4-99E0A733E51B@cleverelephant.ca>



> On Oct 10, 2021, at 9:51 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> 
> I've been looking into the test failures.
> 
> My build passes LDFLAGS of -R/usr/pkg/lib, because pkgsrc builds to a
> prefix that is not part of the default search path.  And, while geos
> does not depend on libraries from pkgsrc, in general packages depend on
> other packages and need to find their libs at runtime.
> 
> The build of the tests programs use those LDFLAGS (which seems natural
> enough).  This results in a bunch of libs being DT_NEEDED:
> 
>  $ objdump -x /tmp/work/geography/geos/work/geos-3.10.0beta3/bin/test_geos_unit
>  [snip]
>  Dynamic Section:
>    NEEDED               libgeos_c.so.1
>    NEEDED               libgeos.so.3.10.0
>    NEEDED               libpthread.so.1
>    NEEDED               libstdc++.so.9
>    NEEDED               libm.so.0
>    NEEDED               libgcc_s.so.1
>    NEEDED               libc.so.12
>    RPATH                /usr/pkg/lib
>  [snip]
> 
> which is all straightforward for a program to be installed.
> 
> 
> I still have not found any mechanism that attempts to arrange for the
> not-installed library to be used for the test.
> 
> maybe the tests should be static?

I feel like there is an answer somewhere out there that a NetBSD expert could find and teach us, and I'd rather not bend around the whole setup of things because of a fairly niche platform issue. People can still *use* GEOS pretty easily on NetBSD (build/install/forget). The only thing they cannot easily do is run tests, which is inconvenient to a very small population, which I understand includes you but I hope you'll be OK with us continuing down the release path nonetheless.

P


From gdt at lexort.com  Mon Oct 11 16:53:53 2021
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 11 Oct 2021 19:53:53 -0400
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <032D5479-4562-43AF-B3D4-99E0A733E51B@cleverelephant.ca> (Paul
 Ramsey's message of "Mon, 11 Oct 2021 16:29:23 -0700")
References: <CACowWR3qUk-3T1zs5iCLspJ5760S5FryB=u8O4f9Xnk97DE8FQ@mail.gmail.com>
 <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <rmi5yu9g2ov.fsf@s1.lexort.com>
 <6B298C6D-2D71-43D6-A6B5-A5644567FC27@cleverelephant.ca>
 <rmi4k9tc4jq.fsf@s1.lexort.com> <rmia6jgzuv7.fsf@s1.lexort.com>
 <032D5479-4562-43AF-B3D4-99E0A733E51B@cleverelephant.ca>
Message-ID: <rmir1crqfse.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> I feel like there is an answer somewhere out there that a NetBSD
> expert could find and teach us, and I'd rather not bend around the
> whole setup of things because of a fairly niche platform issue. People

Maybe, and I'm working on that.  So far, it doesn't seem like NetBSD
itself as building into a different prefix with a packaging system, on a
system that expects to use RPATH.

So far it feels to me like the cmake setup is in general unsound; nobody
has been able to point out a mechanism by which it is supposed to do
testing right. I've tried to read about this and it seems both really
complicated and there seems to be a notion that package authors are
supposed to put a lot of complicated stuff in cmakefiles to manage
handling of rpath in lots of different enviroments, instead of this
being something that cmake provides.  I know I've long not been a fan of
cmake (and people on the lists know that too), but people keep telling
me that it's better and that it does everything autoconf does, and I
feel like I often run into regressions.

> can still *use* GEOS pretty easily on NetBSD
> (build/install/forget). The only thing they cannot easily do is run
> tests, which is inconvenient to a very small population, which I
> understand includes you but I hope you'll be OK with us continuing
> down the release path nonetheless.

Formally, I'm not ok with it as I keep hearing that moving from autoconf
to cmake doesn't involve regressions, so I don't think there should be
regressions.

Practically, I have limited energy and won't take it personally.

For now, I'm trying to understand better, as I have to deal with cmake
in a number of projects.   I am going to try to actually read the
cmakefiles....
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211011/5326af51/attachment.sig>

From gdt at lexort.com  Mon Oct 11 18:10:04 2021
From: gdt at lexort.com (Greg Troxel)
Date: Mon, 11 Oct 2021 21:10:04 -0400
Subject: [geos-devel] cmake detailed comments
Message-ID: <rmik0ijqc9f.fsf@s1.lexort.com>


As this is my first release using cmake I'm reading INSTALL etc. and
have a few comments.

0) INSTALL says;

      mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..

  Setting `CMAKE_BUILD_TYPE` to `Release` is necessary to enable compiler
  optimizations.

but CMakeLists.txt says:

  # Default to release build so packagers don't release debug builds
  set(DEFAULT_BUILD_TYPE Release)

  [set CMAKE_BUILD_TYPE from DEFAULT]

It seems to me that it's best if building without options builds what
users ought to run.  Perhaps this is changed back and forth, but it
seems better to expect people testing who want non-optimized builds for
debug clarity to use a wrapper script to build it that way.  (I tend to
have a build script for things I build from git, since I need to set up
prefix and LDFLAGS anyway.)

CMAKE_BUILD_DEVELOPER seems to be default on.

1) Doing a build without CMAKE_BUILD_TYPE gets me (among other things)
  -- GEOS: Using default build type: Release
  -- GEOS: Developer mode ENABLED
  -- GEOS: Build astyle ON

so I'm not sure if this is a release build or not.  Also, I don't
understand why astyle is built.  It's not installed, but it seems to be
a source maintenance tool that happens to be in the repo, not part of
geos.

2) not about cmake but this seems to slow down geos a lot to make tests
repeatable even though I would guess the answers obtained with extended
floats[q aren't really wrong, just different -- unless there is some
"geos computes according to IEEE754" spec, in which case it would be
nice if the comment explained that instead of talking about making tests
pass.

  # Use -ffloat-store for 32-bit builds (needed to make some tests pass)
  target_compile_options(geos_cxx_flags INTERFACE
    $<$<AND:$<CXX_COMPILER_ID:GNU>,$<EQUAL:4,${CMAKE_SIZEOF_VOID_P}>>:-ffloat-store>
  )

3) ryu.  I am not able to follow this at all.

4) tests in top-level

The tests are written as if they are regular code; tests in general need
to be marked for special linking.  I don't see anything special there
either.

5) complexities of RPATH handling

I found the following, which I don't fully understand yet:

  https://dev.my-gate.net/2021/08/04/understanding-rpath-with-cmake/
  https://gitlab.kitware.com/cmake/community/-/wikis/doc/cmake/RPATH-handling
  https://cmake.cmake.narkive.com/6f4X1K39/change-rpath-at-the-packaging-stage

and not necessarily just about cmake but:

  https://docs.conan.io/en/latest/howtos/manage_shared_libraries/rpaths.html


6) non-pkgsrc build

I did a build using cmake from the command line, but aligned with how
one would build on a (normal ELF, not mac) system that puts software in
a prefix that isn't part of the default search path, and thus passing
CPPFLAGS and LDFLAGS for that prefix.  I realize geos is special in that
it only depends on libc and threads (and perhaps some doc programs), but
the installed geosop and library need to have a DT_RPATH section
pointing to $prefix/lib.

Doing that, the tests failed, differently from under pkgsrc, but the
installed libgeos_c was found and it ended up with both libgeos 3.9 and
3.10 both.   The reason is that the test program had both the passed-in
/usr/pkg/lib RPATH as well as the RPATH from the build directory, but
the build directory one was after the one intended for install, not
before.

I think if the build-tree RPATH used for test programs was put before
the LDFLAGS-derived RPATH, things would be better.

7) RPATH not used at install time if not in LDFLAGS

After building for prefix=/usr/pkg, and not passing in LDFLAGS, I did

  make DESTDIR=../destdir install

and got the expected files under destdir, parallel to build.  All of
geosop, libgeos_c, and geos.pc were missing RPATH.

So probably this is ok, as I realize opinions vary between platforms
about RPATH.

8) RPATH used at install time if passed via LDFLAGS

I did a build with the right values for my situation:

  CPPFLAGS=-I/usr/pkg/include LDFLAGS="-L/usr/pkg/lib -Wl,-R/usr/pkg/lib" \

and the (destdir) installed geosop, in objdump -x:

  NEEDED               libgeos_c.so.1
  NEEDED               libgeos.so.3.10.0
  NEEDED               libstdc++.so.9
  NEEDED               libm.so.0
  NEEDED               libgcc_s.so.1
  NEEDED               libc.so.12
  RPATH                /usr/pkg/lib

which looks right.

However geos.pc is missing the -Wl,-R:
  Libs: -L${libdir} -lgeos_c

Perhaps I'm supposed to be doing something different, but I haven't been
able to understand what yet.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211011/1ff91363/attachment.sig>

From strk at kbt.io  Tue Oct 12 07:17:46 2021
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 12 Oct 2021 16:17:46 +0200
Subject: [geos-devel] 3.10.0beta2
In-Reply-To: <rmir1crqfse.fsf@s1.lexort.com>
References: <rmifstkz0wz.fsf@s1.lexort.com> <rmizgrry6mu.fsf@s1.lexort.com>
 <rmimtnrxbzd.fsf@s1.lexort.com>
 <CACowWR2ywF8k7A3kG_As46jVvX9WwAweyeF43ccTmV-r7RbOQw@mail.gmail.com>
 <rmi5yu9g2ov.fsf@s1.lexort.com>
 <6B298C6D-2D71-43D6-A6B5-A5644567FC27@cleverelephant.ca>
 <rmi4k9tc4jq.fsf@s1.lexort.com> <rmia6jgzuv7.fsf@s1.lexort.com>
 <032D5479-4562-43AF-B3D4-99E0A733E51B@cleverelephant.ca>
 <rmir1crqfse.fsf@s1.lexort.com>
Message-ID: <20211012141746.GA48187@c19>

On Mon, Oct 11, 2021 at 07:53:53PM -0400, Greg Troxel wrote:

> So far it feels to me like the cmake setup is in general unsound; nobody
> has been able to point out a mechanism by which it is supposed to do
> testing right.

I feel your pain (I really miss autoconf too), anyway I thought I'd add
this info to the discussion. On an Ubuntu 20.10, I get RUNPATH set to
the build dir, for the tests:

  $ objdump -x bin/test_geos_unit | grep RUNPATH
  RUNPATH              /usr/local/src/geos/geos/build/main/lib

Same RUNPATH for all binaries under <builddir>/bin, while upon `make
install` all the installed binaries do not have the RUNPATH anymore.

--strk;

From pramsey at cleverelephant.ca  Tue Oct 12 19:02:41 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 12 Oct 2021 19:02:41 -0700
Subject: [geos-devel] 3.10.0rc1
Message-ID: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>

Here it is hopefully ready to go.

http://download.osgeo.org/geos/geos-3.10.0rc1.tar.bz2

P.

From pramsey at cleverelephant.ca  Tue Oct 12 19:18:11 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 12 Oct 2021 19:18:11 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmik0ijqc9f.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
Message-ID: <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>

Thanks for taking the time to look closely, I have rolled some of the
easier notes in and saved others for the next major round.

On Mon, Oct 11, 2021 at 6:10 PM Greg Troxel <gdt at lexort.com> wrote:
>
>
> As this is my first release using cmake I'm reading INSTALL etc. and
> have a few comments.
>
> 0) INSTALL says;
>
>       mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
>
>   Setting `CMAKE_BUILD_TYPE` to `Release` is necessary to enable compiler
>   optimizations.
>
> but CMakeLists.txt says:
>
>   # Default to release build so packagers don't release debug builds
>   set(DEFAULT_BUILD_TYPE Release)
>
>   [set CMAKE_BUILD_TYPE from DEFAULT]
>
> It seems to me that it's best if building without options builds what
> users ought to run.  Perhaps this is changed back and forth, but it
> seems better to expect people testing who want non-optimized builds for
> debug clarity to use a wrapper script to build it that way.  (I tend to
> have a build script for things I build from git, since I need to set up
> prefix and LDFLAGS anyway.)

We do default to release, I just want the doco to be explicit. I
personally forget about CMAKE_BUILD_TYPE all the time and then wonder
where my symbols are.

> CMAKE_BUILD_DEVELOPER seems to be default on.
>
> 1) Doing a build without CMAKE_BUILD_TYPE gets me (among other things)
>   -- GEOS: Using default build type: Release
>   -- GEOS: Developer mode ENABLED
>   -- GEOS: Build astyle ON

I toyed with changing this, but it's actually too big a thing to flip
right before RC. The flags it flips are simultaneously not important
(mostly warnings levels) and kind of important (things one wants
enforced) so... I really don't want devs to work without those flags
under them, and they don't actually *harm* the building of Release
libraries, so I'm leaning to just stripping the option next release
and leaving the flags in by default.
>
> 2) not about cmake but this seems to slow down geos a lot to make tests
> repeatable even though I would guess the answers obtained with extended
> floats[q aren't really wrong, just different -- unless there is some
> "geos computes according to IEEE754" spec, in which case it would be
> nice if the comment explained that instead of talking about making tests
> pass.
>
>   # Use -ffloat-store for 32-bit builds (needed to make some tests pass)
>   target_compile_options(geos_cxx_flags INTERFACE
>     $<$<AND:$<CXX_COMPILER_ID:GNU>,$<EQUAL:4,${CMAKE_SIZEOF_VOID_P}>>:-ffloat-store>
>   )

Good doco point.

> 3) ryu.  I am not able to follow this at all.

It's the double formatter, and Dan had to do some special stuff to get
it to (a) cleanly vendor in but (b) not raise warnings when built at
our warning level. So it's a little less clear than it might otherwise
be.

> 4) tests in top-level
>
> The tests are written as if they are regular code; tests in general need
> to be marked for special linking.  I don't see anything special there
> either.

I don't know what you mean, but I also like how our tests work now so...? :0)

>
> 5) complexities of RPATH handling
>
> I found the following, which I don't fully understand yet:
>
>   https://dev.my-gate.net/2021/08/04/understanding-rpath-with-cmake/
>   https://gitlab.kitware.com/cmake/community/-/wikis/doc/cmake/RPATH-handling
>   https://cmake.cmake.narkive.com/6f4X1K39/change-rpath-at-the-packaging-stage
>
> and not necessarily just about cmake but:
>
>   https://docs.conan.io/en/latest/howtos/manage_shared_libraries/rpaths.html

I hope you'll find out how to make rpaths dance for your platform.


> 6) non-pkgsrc build

I'm not sure what you did or what I can learn from this note, but
thanks again for trying many combinations of things.

> I did a build using cmake from the command line, but aligned with how
> one would build on a (normal ELF, not mac) system that puts software in
> a prefix that isn't part of the default search path, and thus passing
> CPPFLAGS and LDFLAGS for that prefix.  I realize geos is special in that
> it only depends on libc and threads (and perhaps some doc programs), but
> the installed geosop and library need to have a DT_RPATH section
> pointing to $prefix/lib.
>
> Doing that, the tests failed, differently from under pkgsrc, but the
> installed libgeos_c was found and it ended up with both libgeos 3.9 and
> 3.10 both.   The reason is that the test program had both the passed-in
> /usr/pkg/lib RPATH as well as the RPATH from the build directory, but
> the build directory one was after the one intended for install, not
> before.
>
> I think if the build-tree RPATH used for test programs was put before
> the LDFLAGS-derived RPATH, things would be better.
>
> 7) RPATH not used at install time if not in LDFLAGS

> After building for prefix=/usr/pkg, and not passing in LDFLAGS, I did
>
>   make DESTDIR=../destdir install
>
> and got the expected files under destdir, parallel to build.  All of
> geosop, libgeos_c, and geos.pc were missing RPATH.
>
> So probably this is ok, as I realize opinions vary between platforms
> about RPATH.
>
> 8) RPATH used at install time if passed via LDFLAGS
>
> I did a build with the right values for my situation:
>
>   CPPFLAGS=-I/usr/pkg/include LDFLAGS="-L/usr/pkg/lib -Wl,-R/usr/pkg/lib" \
>
> and the (destdir) installed geosop, in objdump -x:
>
>   NEEDED               libgeos_c.so.1
>   NEEDED               libgeos.so.3.10.0
>   NEEDED               libstdc++.so.9
>   NEEDED               libm.so.0
>   NEEDED               libgcc_s.so.1
>   NEEDED               libc.so.12
>   RPATH                /usr/pkg/lib
>
> which looks right.
>
> However geos.pc is missing the -Wl,-R:
>   Libs: -L${libdir} -lgeos_c
>
> Perhaps I'm supposed to be doing something different, but I haven't been
> able to understand what yet.

Thanks for continuing to investigate!

P


> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

From strk at kbt.io  Wed Oct 13 01:29:52 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 13 Oct 2021 10:29:52 +0200
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
Message-ID: <20211013082952.GA4700@c19>

On Tue, Oct 12, 2021 at 07:18:11PM -0700, Paul Ramsey wrote:

> > The tests are written as if they are regular code; tests in general need
> > to be marked for special linking.  I don't see anything special there
> > either.
> 
> I don't know what you mean, but I also like how our tests work now so...? :0)

I guess he means that tests should be built so to use *just_built*
libraries rather than system-installed libraries.

What do you mean by "I like how our tests work now" ? How do they work
for you ? Are them guaranteed to be using the *just_built* (rather
than the *installed*) libraries ?

--strk;

From devrim at gunduz.org  Wed Oct 13 04:40:11 2021
From: devrim at gunduz.org (Devrim =?ISO-8859-1?Q?G=FCnd=FCz?=)
Date: Wed, 13 Oct 2021 12:40:11 +0100
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
Message-ID: <a69b1a09e49c6611b7ddcd17394bc5b0b4f31198.camel@gunduz.org>

Hi,

On Tue, 2021-10-12 at 19:02 -0700, Paul Ramsey wrote:
> Here it is hopefully ready to go.
> 
> http://download.osgeo.org/geos/geos-3.10.0rc1.tar.bz2

FWIW RPMs build fine.

Regards,
-- 
Devrim G?nd?z
Open Source Solution Architect, Red Hat Certified Engineer
Twitter: @DevrimGunduz , @DevrimGunduzTR
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 833 bytes
Desc: This is a digitally signed message part
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211013/7ada705f/attachment.sig>

From pramsey at cleverelephant.ca  Wed Oct 13 07:31:33 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 13 Oct 2021 07:31:33 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <20211013082952.GA4700@c19>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19>
Message-ID: <2D82B2BA-5AF7-46DA-AF41-BEA6F0209128@cleverelephant.ca>



> On Oct 13, 2021, at 1:29 AM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Tue, Oct 12, 2021 at 07:18:11PM -0700, Paul Ramsey wrote:
> 
>>> The tests are written as if they are regular code; tests in general need
>>> to be marked for special linking.  I don't see anything special there
>>> either.
>> 
>> I don't know what you mean, but I also like how our tests work now so...? :0)
> 
> I guess he means that tests should be built so to use *just_built*
> libraries rather than system-installed libraries.
> 
> What do you mean by "I like how our tests work now" ? How do they work
> for you ? Are them guaranteed to be using the *just_built* (rather
> than the *installed*) libraries ?

That is the case on all the platforms we've had reported except Gregs. Tests work against the libraries built in the build directory.
P



> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Wed Oct 13 07:31:57 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 13 Oct 2021 07:31:57 -0700
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <a69b1a09e49c6611b7ddcd17394bc5b0b4f31198.camel@gunduz.org>
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
 <a69b1a09e49c6611b7ddcd17394bc5b0b4f31198.camel@gunduz.org>
Message-ID: <C5DD8153-18A6-4765-B654-EDA663BBB86B@cleverelephant.ca>

Great news, thanks!

> On Oct 13, 2021, at 4:40 AM, Devrim G?nd?z <devrim at gunduz.org> wrote:
> 
> Hi,
> 
> On Tue, 2021-10-12 at 19:02 -0700, Paul Ramsey wrote:
>> Here it is hopefully ready to go.
>> 
>> http://download.osgeo.org/geos/geos-3.10.0rc1.tar.bz2
> 
> FWIW RPMs build fine.
> 
> Regards,
> -- 
> Devrim G?nd?z
> Open Source Solution Architect, Red Hat Certified Engineer
> Twitter: @DevrimGunduz , @DevrimGunduzTR
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From gdt at lexort.com  Wed Oct 13 09:08:50 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 13 Oct 2021 12:08:50 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <20211013082952.GA4700@c19> (Sandro Santilli's message of "Wed,
 13 Oct 2021 10:29:52 +0200")
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19>
Message-ID: <rmipms8kiul.fsf@s1.lexort.com>


Sandro Santilli <strk at kbt.io> writes:

> What do you mean by "I like how our tests work now" ? How do they work
> for you ? Are them guaranteed to be using the *just_built* (rather
> than the *installed*) libraries ?

I believe I've found a bug in running tests.  When one passes in
-W,-R/usr/foo/lib to the build (in LDFLAGS), the not-installed tests end
up having two RPATH entries:

  /usr/foo/lib
  /path/to/build/tree/lib

and they are ordered that way, resulting in libgeos_c being found in
/usr/foo/lib.

So maybe strk can test (on Linux I'm guessing):

  build and install geos 3.9.1 as --prefix=/usr/foo

  build geos 3.10 by telling cmake to use /usr/foo as prefix, and
  passing in the environment
    CPPFLAGS=-I/usr/foo/include
    LDFLAGS="-L/usr/foo/lib -Wl,-R/usr/foo/lib"
  as a packaging system building everything for /usr/foo would do.

  Then look at the test binaries  with objdump -x, ldd, and run them.I
  expect they will mislink against the installed geos.

If so, the bug in cmake or geos cmakefiles is that the extra RPATH for
tests is put after the other RPATH values, rather then being put first.

Or rather, that is the bug, but if you can reproduce it that's progress
in understanding its scope.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211013/9798d59e/attachment.sig>

From gdt at lexort.com  Wed Oct 13 09:12:38 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 13 Oct 2021 12:12:38 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <2D82B2BA-5AF7-46DA-AF41-BEA6F0209128@cleverelephant.ca> (Paul
 Ramsey's message of "Wed, 13 Oct 2021 07:31:33 -0700")
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19>
 <2D82B2BA-5AF7-46DA-AF41-BEA6F0209128@cleverelephant.ca>
Message-ID: <rmilf2wkio9.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> That is the case on all the platforms we've had reported except
> Gregs. Tests work against the libraries built in the build directory.

I am not aware of a positive report for

  not Mac (which does all of this stuff totally differently from normal Unix)

  3.9 installed in a prefix not in the default linker search path

  3.10 built for the same prefix in a way that causes RPATH entries for
  that prefix, as would be required for it to work when installed.


My list of conditions may sound odd, but it's basically all packaging
systems that aren't mac or linux, where the "base system" is in /usr and
packaging things are someplace else (/usr/pkg, /usr/ports, /usr/local,
varies).
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211013/aa2878af/attachment-0001.sig>

From pramsey at cleverelephant.ca  Wed Oct 13 10:40:17 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 13 Oct 2021 10:40:17 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmilf2wkio9.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19>
 <2D82B2BA-5AF7-46DA-AF41-BEA6F0209128@cleverelephant.ca>
 <rmilf2wkio9.fsf@s1.lexort.com>
Message-ID: <0FC3BA61-9FC2-486F-8168-4C6B49EFFD92@cleverelephant.ca>



> On Oct 13, 2021, at 9:12 AM, Greg Troxel <gdt at lexort.com> wrote:
> 
> 
> Paul Ramsey <pramsey at cleverelephant.ca> writes:
> 
>> That is the case on all the platforms we've had reported except
>> Gregs. Tests work against the libraries built in the build directory.
> 
> I am not aware of a positive report for
> 
>  not Mac (which does all of this stuff totally differently from normal Unix)
> 
>  3.9 installed in a prefix not in the default linker search path
> 
>  3.10 built for the same prefix in a way that causes RPATH entries for
>  that prefix, as would be required for it to work when installed.
> 
> 
> My list of conditions may sound odd, but it's basically all packaging
> systems that aren't mac or linux, where the "base system" is in /usr and
> packaging things are someplace else (/usr/pkg, /usr/ports, /usr/local,
> varies).

I got myself a fresh FreeBSD and built there. Installed in both /usr/ and in /usr/local. Ran ldd on the test binary in the build directory.

ec2-user at freebsd:~/geos-git-build $ ldd  ./bin/test_geos_unit
./bin/test_geos_unit:
	libgeos_c.so.1 => /home/ec2-user/geos-git-build/lib/libgeos_c.so.1 (0x800887000)
	libgeos.so.3.10.0 => /home/ec2-user/geos-git-build/lib/libgeos.so.3.10.0 (0x8008cb000)
	libthr.so.3 => /lib/libthr.so.3 (0x800b43000)
	libc++.so.1 => /usr/lib/libc++.so.1 (0x800b70000)
	libcxxrt.so.1 => /lib/libcxxrt.so.1 (0x800c48000)
	libm.so.5 => /lib/libm.so.5 (0x800c6a000)
	libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x800ca1000)
	libc.so.7 => /lib/libc.so.7 (0x800cbc000)

Also, when installing, got this note:

-- Set runtime path of "/usr/bin/geosop" to ""

Seems like it's actually doing exactly the right thing. Stuff in the build directory is all given a temporary run path to point into that directory and for things being installed that path is stripped before install.

P.


From lr at pcorp.us  Wed Oct 13 12:50:20 2021
From: lr at pcorp.us (Regina Obe)
Date: Wed, 13 Oct 2021 15:50:20 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <0FC3BA61-9FC2-486F-8168-4C6B49EFFD92@cleverelephant.ca>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19>
 <2D82B2BA-5AF7-46DA-AF41-BEA6F0209128@cleverelephant.ca>
 <rmilf2wkio9.fsf@s1.lexort.com>
 <0FC3BA61-9FC2-486F-8168-4C6B49EFFD92@cleverelephant.ca>
Message-ID: <000001d7c06b$8e9daa10$abd8fe30$@pcorp.us>

After all this talk decided to check Bessie (FreeBSD 64-bit) and I'm seeing
that the geos system installed is being hooked into the lib file, though the
test bin files at a glance look okay

The geos 3.9.1 on Bessie  was installed using FreeBSD packaging 


pkg install geos

and I see reference too it in the build/lib is that expected?

> > My list of conditions may sound odd, but it's basically all packaging
> > systems that aren't mac or linux, where the "base system" is in /usr
> > and packaging things are someplace else (/usr/pkg, /usr/ports,
> > /usr/local, varies).
> 
> I got myself a fresh FreeBSD and built there. Installed in both /usr/ and
in
> /usr/local. Ran ldd on the test binary in the build directory.
> 
> ec2-user at freebsd:~/geos-git-build $ ldd  ./bin/test_geos_unit
> ./bin/test_geos_unit:
> 	libgeos_c.so.1 => /home/ec2-user/geos-git-build/lib/libgeos_c.so.1
> (0x800887000)
> 	libgeos.so.3.10.0 => /home/ec2-user/geos-git-
> build/lib/libgeos.so.3.10.0 (0x8008cb000)
> 	libthr.so.3 => /lib/libthr.so.3 (0x800b43000)
> 	libc++.so.1 => /usr/lib/libc++.so.1 (0x800b70000)
> 	libcxxrt.so.1 => /lib/libcxxrt.so.1 (0x800c48000)
> 	libm.so.5 => /lib/libm.so.5 (0x800c6a000)
> 	libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x800ca1000)
> 	libc.so.7 => /lib/libc.so.7 (0x800cbc000)
> 
> Also, when installing, got this note:
> 
> -- Set runtime path of "/usr/bin/geosop" to ""
> 
> Seems like it's actually doing exactly the right thing. Stuff in the build
> directory is all given a temporary run path to point into that directory
and for
> things being installed that path is stripped before install.
> 
> P.
> 
[Regina Obe] 
This is what I see when I look at her latest run folder

cd
~/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5ef440398ba5f8db14b75489d
e5d68/build/lib]$
ls 

outputs 
libgeos.so              libgeos.so.3.10.0       libgeos_c.so
libgeos_c.so.1          libgeos_c.so.1.16.0     libryu.a
libtinyxml2.a

Then when I do ldd:

ldd libgeos_c.so


libgeos_c.so:
        libgeos-3.9.1.so => /usr/local/lib/libgeos-3.9.1.so (0x800e00000)
        libc++.so.1 => /usr/lib/libc++.so.1 (0x800702000)
        libcxxrt.so.1 => /lib/libcxxrt.so.1 (0x8007cf000)
        libm.so.5 => /lib/libm.so.5 (0x801300000)
        libc.so.7 => /lib/libc.so.7 (0x80024e000)
        libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x801332000)

ldd libgeos_c.so.1.16.0

ldd
~/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5ef440398ba5f8db14b75489d
e5d68/build/bin/test_geos_unit
> 
      libgeos_c.so.1 =>
/usr/home/jenkins/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5ef440398
ba5f8db14b75489de5d68/build/lib/libgeos_c.so.1 (0x8008a3000)
        libgeos.so.3.10.0 =>
/usr/home/jenkins/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5ef440398
ba5f8db14b75489de5d68/build/lib/libgeos.so.3.10.0 (0x8008e7000)
        libthr.so.3 => /lib/libthr.so.3 (0x800b57000)
        libc++.so.1 => /usr/lib/libc++.so.1 (0x800b84000)
        libcxxrt.so.1 => /lib/libcxxrt.so.1 (0x800c51000)
        libm.so.5 => /lib/libm.so.5 (0x800c73000)
        libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x800ca5000)
        libc.so.7 => /lib/libc.so.7 (0x800cbf000)


If it's relevant cmake --version returns -  cmake version 3.19.6


Script for reference - is here -
https://git.osgeo.org/gitea/geos/geos/src/branch/main/tools/ci/bessie32.sh

Thanks,
Regina




From lr at pcorp.us  Wed Oct 13 13:14:20 2021
From: lr at pcorp.us (Regina Obe)
Date: Wed, 13 Oct 2021 16:14:20 -0400
Subject: [geos-devel] cmake detailed comments
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19>
 <2D82B2BA-5AF7-46DA-AF41-BEA6F0209128@cleverelephant.ca>
 <rmilf2wkio9.fsf@s1.lexort.com>
 <0FC3BA61-9FC2-486F-8168-4C6B49EFFD92@cleverelephant.ca> 
Message-ID: <000301d7c06e$e909d430$bb1d7c90$@pcorp.us>

Okay discussed with pramsey on IRC and I think I understand now why this is
all fine.

The lib ones are pointing at system installed, which is fine cause they
aren't used for testing.

The bin test_geos_unit (is pointing at libgeos_c.so.1 and libgeos.so.3.10.0)
so all tests will be going against the just built versions.
Sorry for the noise.

Hopefully I got it right this time.

Thanks,
Regina

> ldd
> ~/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5ef440398ba5f8db
> 14b75489de5d68/build/bin/test_geos_unit
> >
>       libgeos_c.so.1 =>
> /usr/home/jenkins/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5
> ef440398ba5f8db14b75489de5d68/build/lib/libgeos_c.so.1 (0x8008a3000)
>         libgeos.so.3.10.0 =>
> /usr/home/jenkins/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5
> ef440398ba5f8db14b75489de5d68/build/lib/libgeos.so.3.10.0 (0x8008e7000)
>         libthr.so.3 => /lib/libthr.so.3 (0x800b57000)
>         libc++.so.1 => /usr/lib/libc++.so.1 (0x800b84000)
>         libcxxrt.so.1 => /lib/libcxxrt.so.1 (0x800c51000)
>         libm.so.5 => /lib/libm.so.5 (0x800c73000)
>         libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x800ca5000)
>         libc.so.7 => /lib/libc.so.7 (0x800cbf000)
>

> [Regina Obe]
> This is what I see when I look at her latest run folder
> 
> cd
> ~/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5ef440398ba5f8db
> 14b75489de5d68/build/lib]$
> ls
> 
> outputs
> libgeos.so              libgeos.so.3.10.0       libgeos_c.so
libgeos_c.so.1
> libgeos_c.so.1.16.0     libryu.a                libtinyxml2.a
> 
> Then when I do ldd:
> 
> ldd libgeos_c.so
> 
> 
> libgeos_c.so:
>         libgeos-3.9.1.so => /usr/local/lib/libgeos-3.9.1.so (0x800e00000)
>         libc++.so.1 => /usr/lib/libc++.so.1 (0x800702000)
>         libcxxrt.so.1 => /lib/libcxxrt.so.1 (0x8007cf000)
>         libm.so.5 => /lib/libm.so.5 (0x801300000)
>         libc.so.7 => /lib/libc.so.7 (0x80024e000)
>         libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x801332000)
> 
> ldd libgeos_c.so.1.16.0
> 
> ldd
> ~/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5ef440398ba5f8db
> 14b75489de5d68/build/bin/test_geos_unit
> >
>       libgeos_c.so.1 =>
> /usr/home/jenkins/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5
> ef440398ba5f8db14b75489de5d68/build/lib/libgeos_c.so.1 (0x8008a3000)
>         libgeos.so.3.10.0 =>
> /usr/home/jenkins/workspace/GEOS_Worker_Run/label/bessie/4c38944f8b5
> ef440398ba5f8db14b75489de5d68/build/lib/libgeos.so.3.10.0 (0x8008e7000)
>         libthr.so.3 => /lib/libthr.so.3 (0x800b57000)
>         libc++.so.1 => /usr/lib/libc++.so.1 (0x800b84000)
>         libcxxrt.so.1 => /lib/libcxxrt.so.1 (0x800c51000)
>         libm.so.5 => /lib/libm.so.5 (0x800c73000)
>         libgcc_s.so.1 => /lib/libgcc_s.so.1 (0x800ca5000)
>         libc.so.7 => /lib/libc.so.7 (0x800cbf000)
> 
> 
> If it's relevant cmake --version returns -  cmake version 3.19.6
> 
> 
> Script for reference - is here -
> https://git.osgeo.org/gitea/geos/geos/src/branch/main/tools/ci/bessie32.sh
> 
> Thanks,
> Regina
> 



From strk at kbt.io  Wed Oct 13 13:37:38 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 13 Oct 2021 22:37:38 +0200
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmipms8kiul.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
Message-ID: <20211013203738.GA2724@c19>

On Wed, Oct 13, 2021 at 12:08:50PM -0400, Greg Troxel wrote:
> 
> Sandro Santilli <strk at kbt.io> writes:
> 
> > What do you mean by "I like how our tests work now" ? How do they work
> > for you ? Are them guaranteed to be using the *just_built* (rather
> > than the *installed*) libraries ?
> 
> I believe I've found a bug in running tests.  When one passes in
> -W,-R/usr/foo/lib to the build (in LDFLAGS), the not-installed tests end
> up having two RPATH entries:
> 
>   /usr/foo/lib
>   /path/to/build/tree/lib
> 
> and they are ordered that way, resulting in libgeos_c being found in
> /usr/foo/lib.

Before I go on testing this let me please ask: why would you
pass -W,-R/usr/foo/lib to the build ?

--strk;

From strk at kbt.io  Wed Oct 13 14:31:54 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 13 Oct 2021 23:31:54 +0200
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmipms8kiul.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
Message-ID: <20211013213154.GB2724@c19>

On Wed, Oct 13, 2021 at 12:08:50PM -0400, Greg Troxel wrote:

> So maybe strk can test (on Linux I'm guessing):

Ubuntu 20.10 here

>   build and install geos 3.9.1 as --prefix=/usr/foo

Done (3.9 branch of geos):

  ./autogen.sh && \
  ./configure --prefix=/tmp/geos && \
  sudo make install


Note that after this I get:

  $ objdump -x /tmp/geos/lib/libgeos_c.so.1.14.2  | grep RUNPATH
    RUNPATH              /tmp/geos/lib

I'm not sure it's relevant.

>   build geos 3.10 by telling cmake to use /usr/foo as prefix, and
>   passing in the environment
>     CPPFLAGS=-I/usr/foo/include
>     LDFLAGS="-L/usr/foo/lib -Wl,-R/usr/foo/lib"
>   as a packaging system building everything for /usr/foo would do.

Done:

  $ export CPPFLAGS=-I/tmp/geos
  $ export LDFLAGS="-L/tmp/geos/lib -Wl,-R/tmp/geos/lib"
  $ cmake .
  $ make 

>   Then look at the test binaries  with objdump -x, ldd, and run them.I
>   expect they will mislink against the installed geos.

  $ objdump -x bin/test_geos_unit | grep RUNPATH
    RUNPATH /tmp/geos/lib:/usr/local/src/geos/geos/src/main/lib
  $ ldd bin/test_geos_unit | grep tmp
        libgeos_c.so.1 => /tmp/geos/lib/libgeos_c.so.1 (0x00007f0be9ead000)
        libgeos-3.9.2.so => /tmp/geos/lib/libgeos-3.9.2.so (0x00007f0be9489000)

> If so, the bug in cmake or geos cmakefiles is that the extra RPATH for
> tests is put after the other RPATH values, rather then being put first.
> 
> Or rather, that is the bug, but if you can reproduce it that's progress
> in understanding its scope.

So yes, I can reproduce the problem on a Linux system.

--strk;

From strk at kbt.io  Wed Oct 13 15:17:27 2021
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 14 Oct 2021 00:17:27 +0200
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <20211013213154.GB2724@c19>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013213154.GB2724@c19>
Message-ID: <20211013221727.GA68893@c19>

I should add, I'm using cmake version 3.16.3

--strk;

On Wed, Oct 13, 2021 at 11:31:54PM +0200, Sandro Santilli wrote:
> On Wed, Oct 13, 2021 at 12:08:50PM -0400, Greg Troxel wrote:
> 
> > So maybe strk can test (on Linux I'm guessing):
> 
> Ubuntu 20.10 here
> 
> >   build and install geos 3.9.1 as --prefix=/usr/foo
> 
> Done (3.9 branch of geos):
> 
>   ./autogen.sh && \
>   ./configure --prefix=/tmp/geos && \
>   sudo make install
> 
> 
> Note that after this I get:
> 
>   $ objdump -x /tmp/geos/lib/libgeos_c.so.1.14.2  | grep RUNPATH
>     RUNPATH              /tmp/geos/lib
> 
> I'm not sure it's relevant.
> 
> >   build geos 3.10 by telling cmake to use /usr/foo as prefix, and
> >   passing in the environment
> >     CPPFLAGS=-I/usr/foo/include
> >     LDFLAGS="-L/usr/foo/lib -Wl,-R/usr/foo/lib"
> >   as a packaging system building everything for /usr/foo would do.
> 
> Done:
> 
>   $ export CPPFLAGS=-I/tmp/geos
>   $ export LDFLAGS="-L/tmp/geos/lib -Wl,-R/tmp/geos/lib"
>   $ cmake .
>   $ make 
> 
> >   Then look at the test binaries  with objdump -x, ldd, and run them.I
> >   expect they will mislink against the installed geos.
> 
>   $ objdump -x bin/test_geos_unit | grep RUNPATH
>     RUNPATH /tmp/geos/lib:/usr/local/src/geos/geos/src/main/lib
>   $ ldd bin/test_geos_unit | grep tmp
>         libgeos_c.so.1 => /tmp/geos/lib/libgeos_c.so.1 (0x00007f0be9ead000)
>         libgeos-3.9.2.so => /tmp/geos/lib/libgeos-3.9.2.so (0x00007f0be9489000)
> 
> > If so, the bug in cmake or geos cmakefiles is that the extra RPATH for
> > tests is put after the other RPATH values, rather then being put first.
> > 
> > Or rather, that is the bug, but if you can reproduce it that's progress
> > in understanding its scope.
> 
> So yes, I can reproduce the problem on a Linux system.
> 
> --strk;

-- 

  Libre GIS consultant/developer
  https://strk.kbt.io/services.html

From pramsey at cleverelephant.ca  Wed Oct 13 15:18:37 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 13 Oct 2021 15:18:37 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <20211013221727.GA68893@c19>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013213154.GB2724@c19> <20211013221727.GA68893@c19>
Message-ID: <5544FC45-F3D1-47A9-865D-E6C8DE36C3E3@cleverelephant.ca>

Consider looking at cmake descriptions of what it intends to do with RPATH, and ways to set link flags without forcing environment variables in

https://cmake.org/cmake/help/latest/variable/CMAKE_SHARED_LINKER_FLAGS.html
https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_INSTALL_RPATH.html
https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_RPATH.html

P


> On Oct 13, 2021, at 3:17 PM, Sandro Santilli <strk at kbt.io> wrote:
> 
> I should add, I'm using cmake version 3.16.3
> 
> --strk;
> 
> On Wed, Oct 13, 2021 at 11:31:54PM +0200, Sandro Santilli wrote:
>> On Wed, Oct 13, 2021 at 12:08:50PM -0400, Greg Troxel wrote:
>> 
>>> So maybe strk can test (on Linux I'm guessing):
>> 
>> Ubuntu 20.10 here
>> 
>>>  build and install geos 3.9.1 as --prefix=/usr/foo
>> 
>> Done (3.9 branch of geos):
>> 
>>  ./autogen.sh && \
>>  ./configure --prefix=/tmp/geos && \
>>  sudo make install
>> 
>> 
>> Note that after this I get:
>> 
>>  $ objdump -x /tmp/geos/lib/libgeos_c.so.1.14.2  | grep RUNPATH
>>    RUNPATH              /tmp/geos/lib
>> 
>> I'm not sure it's relevant.
>> 
>>>  build geos 3.10 by telling cmake to use /usr/foo as prefix, and
>>>  passing in the environment
>>>    CPPFLAGS=-I/usr/foo/include
>>>    LDFLAGS="-L/usr/foo/lib -Wl,-R/usr/foo/lib"
>>>  as a packaging system building everything for /usr/foo would do.
>> 
>> Done:
>> 
>>  $ export CPPFLAGS=-I/tmp/geos
>>  $ export LDFLAGS="-L/tmp/geos/lib -Wl,-R/tmp/geos/lib"
>>  $ cmake .
>>  $ make 
>> 
>>>  Then look at the test binaries  with objdump -x, ldd, and run them.I
>>>  expect they will mislink against the installed geos.
>> 
>>  $ objdump -x bin/test_geos_unit | grep RUNPATH
>>    RUNPATH /tmp/geos/lib:/usr/local/src/geos/geos/src/main/lib
>>  $ ldd bin/test_geos_unit | grep tmp
>>        libgeos_c.so.1 => /tmp/geos/lib/libgeos_c.so.1 (0x00007f0be9ead000)
>>        libgeos-3.9.2.so => /tmp/geos/lib/libgeos-3.9.2.so (0x00007f0be9489000)
>> 
>>> If so, the bug in cmake or geos cmakefiles is that the extra RPATH for
>>> tests is put after the other RPATH values, rather then being put first.
>>> 
>>> Or rather, that is the bug, but if you can reproduce it that's progress
>>> in understanding its scope.
>> 
>> So yes, I can reproduce the problem on a Linux system.
>> 
>> --strk;
> 
> -- 
> 
>  Libre GIS consultant/developer
>  https://strk.kbt.io/services.html
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From pramsey at cleverelephant.ca  Wed Oct 13 15:41:30 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 13 Oct 2021 15:41:30 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <5544FC45-F3D1-47A9-865D-E6C8DE36C3E3@cleverelephant.ca>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013213154.GB2724@c19> <20211013221727.GA68893@c19>
 <5544FC45-F3D1-47A9-865D-E6C8DE36C3E3@cleverelephant.ca>
Message-ID: <28F933D9-D3CC-4CC5-9BF2-7BC366B6BC00@cleverelephant.ca>

Actually searching for "RPATH" here turns up all kinds of knobs if you want different things done to rpath

https://cmake.org/cmake/help/latest/manual/cmake-variables.7.html

P.

> On Oct 13, 2021, at 3:18 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> Consider looking at cmake descriptions of what it intends to do with RPATH, and ways to set link flags without forcing environment variables in
> 
> https://cmake.org/cmake/help/latest/variable/CMAKE_SHARED_LINKER_FLAGS.html
> https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_INSTALL_RPATH.html
> https://cmake.org/cmake/help/latest/variable/CMAKE_SKIP_RPATH.html
> 
> P
> 
> 
>> On Oct 13, 2021, at 3:17 PM, Sandro Santilli <strk at kbt.io> wrote:
>> 
>> I should add, I'm using cmake version 3.16.3
>> 
>> --strk;
>> 
>> On Wed, Oct 13, 2021 at 11:31:54PM +0200, Sandro Santilli wrote:
>>> On Wed, Oct 13, 2021 at 12:08:50PM -0400, Greg Troxel wrote:
>>> 
>>>> So maybe strk can test (on Linux I'm guessing):
>>> 
>>> Ubuntu 20.10 here
>>> 
>>>> build and install geos 3.9.1 as --prefix=/usr/foo
>>> 
>>> Done (3.9 branch of geos):
>>> 
>>> ./autogen.sh && \
>>> ./configure --prefix=/tmp/geos && \
>>> sudo make install
>>> 
>>> 
>>> Note that after this I get:
>>> 
>>> $ objdump -x /tmp/geos/lib/libgeos_c.so.1.14.2  | grep RUNPATH
>>>  RUNPATH              /tmp/geos/lib
>>> 
>>> I'm not sure it's relevant.
>>> 
>>>> build geos 3.10 by telling cmake to use /usr/foo as prefix, and
>>>> passing in the environment
>>>>  CPPFLAGS=-I/usr/foo/include
>>>>  LDFLAGS="-L/usr/foo/lib -Wl,-R/usr/foo/lib"
>>>> as a packaging system building everything for /usr/foo would do.
>>> 
>>> Done:
>>> 
>>> $ export CPPFLAGS=-I/tmp/geos
>>> $ export LDFLAGS="-L/tmp/geos/lib -Wl,-R/tmp/geos/lib"
>>> $ cmake .
>>> $ make 
>>> 
>>>> Then look at the test binaries  with objdump -x, ldd, and run them.I
>>>> expect they will mislink against the installed geos.
>>> 
>>> $ objdump -x bin/test_geos_unit | grep RUNPATH
>>>  RUNPATH /tmp/geos/lib:/usr/local/src/geos/geos/src/main/lib
>>> $ ldd bin/test_geos_unit | grep tmp
>>>      libgeos_c.so.1 => /tmp/geos/lib/libgeos_c.so.1 (0x00007f0be9ead000)
>>>      libgeos-3.9.2.so => /tmp/geos/lib/libgeos-3.9.2.so (0x00007f0be9489000)
>>> 
>>>> If so, the bug in cmake or geos cmakefiles is that the extra RPATH for
>>>> tests is put after the other RPATH values, rather then being put first.
>>>> 
>>>> Or rather, that is the bug, but if you can reproduce it that's progress
>>>> in understanding its scope.
>>> 
>>> So yes, I can reproduce the problem on a Linux system.
>>> 
>>> --strk;
>> 
>> -- 
>> 
>> Libre GIS consultant/developer
>> https://strk.kbt.io/services.html
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 


From strk at kbt.io  Wed Oct 13 16:17:58 2021
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 14 Oct 2021 01:17:58 +0200
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <28F933D9-D3CC-4CC5-9BF2-7BC366B6BC00@cleverelephant.ca>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013213154.GB2724@c19> <20211013221727.GA68893@c19>
 <5544FC45-F3D1-47A9-865D-E6C8DE36C3E3@cleverelephant.ca>
 <28F933D9-D3CC-4CC5-9BF2-7BC366B6BC00@cleverelephant.ca>
Message-ID: <20211013231758.GB68893@c19>

On Wed, Oct 13, 2021 at 03:41:30PM -0700, Paul Ramsey wrote:
> Actually searching for "RPATH" here turns up all kinds of knobs if you want different things done to rpath
> 
> https://cmake.org/cmake/help/latest/manual/cmake-variables.7.html

Greg might be after this:
https://cmake.org/cmake/help/latest/variable/CMAKE_INSTALL_RPATH.html

--strk;

From gdt at lexort.com  Thu Oct 14 07:02:03 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 14 Oct 2021 10:02:03 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <20211013203738.GA2724@c19> (Sandro Santilli's message of "Wed,
 13 Oct 2021 22:37:38 +0200")
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013203738.GA2724@c19>
Message-ID: <rmir1cnk8mc.fsf@s1.lexort.com>


Sandro Santilli <strk at kbt.io> writes:

> On Wed, Oct 13, 2021 at 12:08:50PM -0400, Greg Troxel wrote:
>> 
>> Sandro Santilli <strk at kbt.io> writes:
>> 
>> > What do you mean by "I like how our tests work now" ? How do they work
>> > for you ? Are them guaranteed to be using the *just_built* (rather
>> > than the *installed*) libraries ?
>> 
>> I believe I've found a bug in running tests.  When one passes in
>> -W,-R/usr/foo/lib to the build (in LDFLAGS), the not-installed tests end
>> up having two RPATH entries:
>> 
>>   /usr/foo/lib
>>   /path/to/build/tree/lib
>> 
>> and they are ordered that way, resulting in libgeos_c being found in
>> /usr/foo/lib.
>
> Before I go on testing this let me please ask: why would you
> pass -W,-R/usr/foo/lib to the build ?

Well, you did test (thanks!), and you did reproduce the problem, but:

Stepping back from just thinking about geos, in the context of a
packaging system, there is a desire to do things in a way that works in
the general case, rather than tightly adapating to particular systems.

In general:

  ${PREFIX}/lib is not necessarily in the default linker search path

  a given package may depend on other libraries which are already in
  ${PREFIX}/lib as dependency packages

  build systems often either check for libraries with a test program
  with #include <foo.h> and compiled with -lfoo, and for this to work
  the -R needs to be present.

  some build systems just add -lfoo because it's documented they need
  them and don't check, and in that case -R needs to be present

and in the case of pkgsrc, passing -R in LDFLAGS as the standard
approach has survived the test of time in a system that runs on many (20
in theory, probably only 10 of which have users - HP-UX no longer
counts) systems with ~25K packages.

So there could be special logic to avoid it, but on the other hand it's
possible that on one of those systems pthreads is not part of the OS and
is a package that gets depended on, and thus it would be necessary.



I realize that the world is moving from "just use it" to "packages are
expected to use pkg-config", and that's a good thing as it's a single
uniform interface.  Packaging systems have to deal with such interfaces,
and do -- but it imposes a lot of work when there are boutique methods
to do things.  Fortunately geos is producing a pc file, and in general
things are getting more regularized.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211014/d2e10aef/attachment.sig>

From gdt at lexort.com  Thu Oct 14 07:04:22 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 14 Oct 2021 10:04:22 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <000001d7c06b$8e9daa10$abd8fe30$@pcorp.us> (Regina Obe's message
 of "Wed, 13 Oct 2021 15:50:20 -0400")
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19>
 <2D82B2BA-5AF7-46DA-AF41-BEA6F0209128@cleverelephant.ca>
 <rmilf2wkio9.fsf@s1.lexort.com>
 <0FC3BA61-9FC2-486F-8168-4C6B49EFFD92@cleverelephant.ca>
 <000001d7c06b$8e9daa10$abd8fe30$@pcorp.us>
Message-ID: <rmimtnbk8ih.fsf@s1.lexort.com>


I am guessing that this script is not doing anything to set RPATH and
that FreeBSD puts /usr/local/lib in the default linker path.   Which is
interesting because people that build things not from ports might get
ports libraries linked without asking for that prefix - but that's a
system preference decision without a right/wrong answer.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211014/8aadfcc5/attachment.sig>

From gdt at lexort.com  Thu Oct 14 07:43:20 2021
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 14 Oct 2021 10:43:20 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <20211013231758.GB68893@c19> (Sandro Santilli's message of "Thu, 
 14 Oct 2021 01:17:58 +0200")
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013213154.GB2724@c19> <20211013221727.GA68893@c19>
 <5544FC45-F3D1-47A9-865D-E6C8DE36C3E3@cleverelephant.ca>
 <28F933D9-D3CC-4CC5-9BF2-7BC366B6BC00@cleverelephant.ca>
 <20211013231758.GB68893@c19>
Message-ID: <rmih7djk6pj.fsf@s1.lexort.com>


Sandro Santilli <strk at kbt.io> writes:

> On Wed, Oct 13, 2021 at 03:41:30PM -0700, Paul Ramsey wrote:
>> Actually searching for "RPATH" here turns up all kinds of knobs if you want different things done to rpath
>> 
>> https://cmake.org/cmake/help/latest/manual/cmake-variables.7.html
>
> Greg might be after this:
> https://cmake.org/cmake/help/latest/variable/CMAKE_INSTALL_RPATH.html

That looks close.   What I need (in general) is to be able to specify:

  RPATH value to be added to BUILD and INSTALL, so that dependency
  libraries can be found, both at runtime and at test time.

  RPATH value to be added to INSTALL so that geos can find its own libs

and these would both be ${RPREFIX}/lib.


It seems that for cmake to get the ordering of RPATHs right, which it
currently isn't, it's likely necessary to avoid putting anything that is
rpath in a linker flag of any kind, and to only use the CMAKE_*_RPATH
variables.


So I think that means settting

 CMAKE_BUILD_RPATH=/usr/pkg/lib
 CMAKE_INSTALL_RPATH=/usr/pkg/lib

both, in the general case for calling cmake.   For geos where pthread is
from pkgsrc, this is the actual case.  For geos when there aren't any
dependencies, the BUILD could be skipped as a special case.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211014/bb6a83b2/attachment.sig>

From jmckenna at gatewaygeomatics.com  Thu Oct 14 09:54:07 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Thu, 14 Oct 2021 13:54:07 -0300
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
Message-ID: <7ac341a4-a635-3766-8977-9ca01c5ed920@gatewaygeomatics.com>

Building fine on Visual Studio for the MapServer Windows community. 
(the only gotchya was that the RC1 link provided was http which failed 
to download, so https link came to the rescue.

(also, thanks for including .editorconfig in the archive, as if I 
remember correctly I always had to go find that separately, for RC and 
Betas)


-jeff


-- 
Jeff McKenna
GatewayGeo: Developers of MS4W, MapServer Consulting and Training
co-founder of FOSS4G
http://gatewaygeo.com/



On 2021-10-12 11:02 p.m., Paul Ramsey wrote:
> Here it is hopefully ready to go.
> 
> http://download.osgeo.org/geos/geos-3.10.0rc1.tar.bz2
> 
> P.


From sebastic at xs4all.nl  Thu Oct 14 11:27:20 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Thu, 14 Oct 2021 20:27:20 +0200
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
Message-ID: <f0adfa8f-be5e-3c25-799b-06793eefbf2c@xs4all.nl>

Has postgis already been updated for geos 3.10?

3.1.4 has some test failures with it:

 https://ci.debian.net/data/autopkgtest/unstable/amd64/p/postgis/15944629/log.gz
 https://ci.debian.net/data/autopkgtest/unstable/arm64/p/postgis/15944881/log.gz

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From pramsey at cleverelephant.ca  Thu Oct 14 11:54:50 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 14 Oct 2021 11:54:50 -0700
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <f0adfa8f-be5e-3c25-799b-06793eefbf2c@xs4all.nl>
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
 <f0adfa8f-be5e-3c25-799b-06793eefbf2c@xs4all.nl>
Message-ID: <1BE4B295-45FC-4180-A497-76635AD677B2@cleverelephant.ca>

I have pushed a couple small tweaks for this in ec7f996bc
It's just rounding off regression results to avoid differences at the 14th digit, there's nothing important changing under the covers.
P.

> On Oct 14, 2021, at 11:27 AM, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote:
> 
> Has postgis already been updated for geos 3.10?
> 
> 3.1.4 has some test failures with it:
> 
> https://ci.debian.net/data/autopkgtest/unstable/amd64/p/postgis/15944629/log.gz
> https://ci.debian.net/data/autopkgtest/unstable/arm64/p/postgis/15944881/log.gz
> 
> Kind Regards,
> 
> Bas
> 
> -- 
> GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From strk at kbt.io  Thu Oct 14 12:36:11 2021
From: strk at kbt.io (Sandro Santilli)
Date: Thu, 14 Oct 2021 21:36:11 +0200
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmir1cnk8mc.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013203738.GA2724@c19> <rmir1cnk8mc.fsf@s1.lexort.com>
Message-ID: <20211014193611.GA2978@c19>

On Thu, Oct 14, 2021 at 10:02:03AM -0400, Greg Troxel wrote:

> Stepping back from just thinking about geos, in the context of a
> packaging system, there is a desire to do things in a way that works in
> the general case, rather than tightly adapating to particular systems.

Would a script like this help ?
https://github.com/Richard-W/cmake-configure-wrapper

I'm not sure it deals with env variables like LDFLAGS though

For now I pushed my own "configure" wrapper, but it's clearly
not offering those many features as Richard's wrapper...

--strk;

From pramsey at cleverelephant.ca  Thu Oct 14 12:38:30 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 14 Oct 2021 12:38:30 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <20211014193611.GA2978@c19>
References: <rmik0ijqc9f.fsf@s1.lexort.com>
 <CACowWR0swidhg147sAOsTQ6+iZH=UUkA_xYpfJ8Dr4CHup6AyA@mail.gmail.com>
 <20211013082952.GA4700@c19> <rmipms8kiul.fsf@s1.lexort.com>
 <20211013203738.GA2724@c19> <rmir1cnk8mc.fsf@s1.lexort.com>
 <20211014193611.GA2978@c19>
Message-ID: <505EAF59-E130-4EDD-9310-6004E3017B6F@cleverelephant.ca>

There's a lot of new libraries and projects using cmake, even the venerable gdal is heading that way, and that's a hard conversion. Talks in the postgres world also swirl around that change. I think getting comfortable with it, takes a while I know, is probably going to be more effecitive, communally and personally over the long term, than standing athward the path of history yelling "stop".

P

> On Oct 14, 2021, at 12:36 PM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Thu, Oct 14, 2021 at 10:02:03AM -0400, Greg Troxel wrote:
> 
>> Stepping back from just thinking about geos, in the context of a
>> packaging system, there is a desire to do things in a way that works in
>> the general case, rather than tightly adapating to particular systems.
> 
> Would a script like this help ?
> https://github.com/Richard-W/cmake-configure-wrapper
> 
> I'm not sure it deals with env variables like LDFLAGS though
> 
> For now I pushed my own "configure" wrapper, but it's clearly
> not offering those many features as Richard's wrapper...
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From jorisvandenbossche at gmail.com  Thu Oct 14 15:14:34 2021
From: jorisvandenbossche at gmail.com (Joris Van den Bossche)
Date: Fri, 15 Oct 2021 00:14:34 +0200
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <1BE4B295-45FC-4180-A497-76635AD677B2@cleverelephant.ca>
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
 <f0adfa8f-be5e-3c25-799b-06793eefbf2c@xs4all.nl>
 <1BE4B295-45FC-4180-A497-76635AD677B2@cleverelephant.ca>
Message-ID: <CALQtMBYdHQANxgtf6EizA3H4d0Go+PXH2DQwvMmE6GsLZ0Zj_g@mail.gmail.com>

I was looking at our tests we run in PyGEOS with the main branch of GEOS,
and noticed one issue I wanted to check with the GEOS developers (the other
failures seem to be issues to fix in our tests,
https://github.com/pygeos/pygeos/issues/233#issuecomment-943773401).

The GEOSGeom_setPrecision behaviour changed how it "collapses" geometries:

>>> pygeos.set_precision(pygeos.Geometry("LINESTRING (0 0, 0.1 0.1)"),
grid_size=1)
<pygeos.Geometry LINESTRING EMPTY>       # <-- with GEOS 3.9.1
<pygeos.Geometry LINESTRING (0 0, 0 0)>  # <-- with GEOS 3.10.0

>>> pygeos.set_precision(pygeos.Geometry("POLYGON ((0 0, 0.1 0, 0.1 0.1, 0
0.1, 0 0))"), grid_size=1)
<pygeos.Geometry POLYGON EMPTY>                        # <-- with GEOS
3.9.1
<pygeos.Geometry POLYGON ((0 0, 0 0, 0 0, 0 0, 0 0))>  # <-- with GEOS
3.10.0

So when the vertices are closer together than the new grid_size, it no
longer creates empty geometries, but geometries with equal coordinates. Was
this a deliberate change?
I don't really know if one or the other is preferred, but one consequence
of the new result is that those returned geometries are no longer "valid"
geometries.

Joris

On Thu, 14 Oct 2021 at 20:54, Paul Ramsey <pramsey at cleverelephant.ca> wrote:

> I have pushed a couple small tweaks for this in ec7f996bc
> It's just rounding off regression results to avoid differences at the 14th
> digit, there's nothing important changing under the covers.
> P.
>
> > On Oct 14, 2021, at 11:27 AM, Sebastiaan Couwenberg <sebastic at xs4all.nl>
> wrote:
> >
> > Has postgis already been updated for geos 3.10?
> >
> > 3.1.4 has some test failures with it:
> >
> >
> https://ci.debian.net/data/autopkgtest/unstable/amd64/p/postgis/15944629/log.gz
> >
> https://ci.debian.net/data/autopkgtest/unstable/arm64/p/postgis/15944881/log.gz
> >
> > Kind Regards,
> >
> > Bas
> >
> > --
> > GPG Key ID: 4096R/6750F10AE88D4AF1
> > Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211015/6f1627df/attachment.html>

From Roger.Bivand at nhh.no  Fri Oct 15 02:00:00 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 15 Oct 2021 11:00:00 +0200 (CEST)
Subject: [geos-devel] 3.10.0rc1 (static)
Message-ID: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>

R Windows and macOS binary packages use static builds only to ensure 
completeness. With Autotools, this involved some jumping through hoops and 
local hot patching of --static-clibs and --static-libs adding -lstdc++, 
but has remained feasible, with incantations like (-fPIC needed 
downstream to link the package shared object into the R language engine):

mkdir build-static
cd build-static
export CFLAGS=-fPIC
export CXXFLAGS=-fPIC
export CPPFLAGS=-fPIC
../configure --prefix=/home/rsb/static_old --enable-static=yes 
-disable-shared
make
make install

I have tried to grasp what has gone completely wrong with Cmake. I never 
succeeded in using Cmake before to create libgeos.a and libgeos_c.a to use 
in building R packages, but this was not a problem, because Autotools 
worked.

My current incantation is:

mkdir build-static
cd build-static
export CFLAGS=-fPIC
export CXXFLAGS=-fPIC
export CPPFLAGS=-fPIC
cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF 
-DCMAKE_INSTALL_PREFIX=/home/rsb/static -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON 
..
cmake --build .
cmake --build . --target install

The simplest test is to try to build static, and to attempt to compile the 
a test from rgeos/configure.ac:

cat > geos_test.cc << _EOCONF
#include <geos_c.h>
#ifdef __cplusplus
extern "C" {
#endif
static void __errorHandler(const char *fmt, ...) {
     return;
}
static void __warningHandler(const char *fmt, ...) {
     return;
}
int main() {
     GEOSContextHandle_t r = initGEOS_r((GEOSMessageHandler) 
__warningHandler, (GEOSMessageHandler) __errorHandler);
     finishGEOS_r(r);
}
#ifdef __cplusplus
}
#endif
_EOCONF

g++ `<static/bin>geos-config --cflags` -o geos_test geos_test.cc \
`<static/bin>geos-config --static-clibs`

for me giving this failure for Cmake static, but success for Autotools:

/usr/bin/ld: /home/rsb/static/lib64/libgeos.a(WKTWriter.cpp.o): in 
function `geos::io::WKTWriter::writeNumber[abi:cxx11](double) const':
WKTWriter.cpp:(.text+0xe39): undefined reference to 
`geos_d2sfixed_buffered_n'
collect2: error: ld returned 1 exit status

This on current Fedora 34; when I can work out how to get a viable Cmake 
workflow, I can try to transfer it to Windows cross-compilation under MXE 
and native macOS.

Any help very welcome.

Roger

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From gdt at lexort.com  Fri Oct 15 06:02:19 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 15 Oct 2021 09:02:19 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmik0ijqc9f.fsf@s1.lexort.com> (Greg Troxel's message of "Mon,
 11 Oct 2021 21:10:04 -0400")
References: <rmik0ijqc9f.fsf@s1.lexort.com>
Message-ID: <rmiczo6h25g.fsf@s1.lexort.com>


tl;dr:

I've done things the cmake way and the test are still not ok.
The problem is that the test RPATH is being *appended* to the BUILD
RPATH, instead of prepended.

long version:

My build script is:
----------------------------------------
#!/bin/sh

if [ -d $HOME/bin/ccache ]; then
    echo "enabling ccache"
    ccache -z
    PATH=$HOME/bin/ccache:$PATH
fi

PREFIX=/usr/pkg
LIBDIR=${PREFIX}/lib

# In theory, BSD make is ok.
MAKE=make 

(rm -rf build destdir &&
     mkdir build &&
     cd build &&
     cmake .. \
           -DCMAKE_INSTALL_PREFIX=${PREFIX} \
           -DCMAKE_BUILD_RPATH=${LIBDIR} \
           -DCMAKE_INSTALL_RPATH=${LIBDIR} \
           > OUT.00.cmake 2>&1 &&
     ${MAKE} > OUT.10.make 2>&1 &&
     (${MAKE} check > OUT.20.check 2>&1 || true) && \
     make DESTDIR=../destdir install > OUT.30.install 2>&1 && \
     echo BUILD DONE
)
----------------------------------------

BUILD_RPATH is passed because a packaging system invoking cmake must in
general ensure that programs/libs in the build environment can find
their dependencies at test time.

Some tests pass, and some fail, with "std:alloc bad" and various other
stuff.  But a quick look shows that objdump -x of one of the test
programs has:

  RPATH                /usr/pkg/lib:/home/n0/gdt/SOFTWARE/GEO/GEOS/geos-master/build/lib

so I expect it to go badly.   This should have been

  RPATH                /home/n0/gdt/SOFTWARE/GEO/GEOS/geos-master/build/lib:/usr/pkg/lib

and then I think it would have been fine.


If anyone can tell me what cmake args I should be using instead for the
general case of a program with a correct cmake setup and  which might be
finding dependencies from ${PREFIX}, I'd like to hear about it.   The
list above is what I came up after reading the cmake docs pointed out by
pramsey@ and strk at .

Greg
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211015/b5853212/attachment-0001.sig>

From gdt at lexort.com  Fri Oct 15 06:05:46 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 15 Oct 2021 09:05:46 -0400
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
 (Paul Ramsey's message of "Tue, 12 Oct 2021 19:02:41 -0700")
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
Message-ID: <rmi8ryuh1zp.fsf@s1.lexort.com>


(I don't see a rc1 tag in git.)

I see there's configure in git, that sort of deals.  However, I don't
think it really does the right thing for all sorts of args that are
often passed to configure, and as much as I don't enjoy cmake pain, I
think it's better for people running configure especially from packaging
or scripts to realize that they need to translate their world into
cmake.

So this script could perhaps

  print out that autoconf has been removed and that one must use cmake

  print out a hint that "cmake -DCMAKE_INSTALL_PREFIX=/usr/foo" is a
  replacement for ./configure --prefix=/usr/foo

  exit with status 1, so that any well-written script/package stuff will
  fail
 
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211015/5276b379/attachment.sig>

From pramsey at cleverelephant.ca  Fri Oct 15 07:56:18 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 07:56:18 -0700
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
Message-ID: <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>



> On Oct 15, 2021, at 2:00 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> /usr/bin/ld: /home/rsb/static/lib64/libgeos.a(WKTWriter.cpp.o): in function `geos::io::WKTWriter::writeNumber[abi:cxx11](double) const':
> WKTWriter.cpp:(.text+0xe39): undefined reference to `geos_d2sfixed_buffered_n'
> collect2: error: ld returned 1 exit status

Somehow the ryu dependency is missing in the final library... I wonder if the "object library" trick is having deleterious effects in the case of building static libs.

P

From strk at kbt.io  Fri Oct 15 08:01:24 2021
From: strk at kbt.io (Sandro Santilli)
Date: Fri, 15 Oct 2021 17:01:24 +0200
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <rmi8ryuh1zp.fsf@s1.lexort.com>
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
 <rmi8ryuh1zp.fsf@s1.lexort.com>
Message-ID: <20211015150124.GG12865@c19>

On Fri, Oct 15, 2021 at 09:05:46AM -0400, Greg Troxel wrote:
> 
> (I don't see a rc1 tag in git.)
> 
> I see there's configure in git, that sort of deals.  However, I don't
> think it really does the right thing for all sorts of args that are
> often passed to configure, and as much as I don't enjoy cmake pain, I
> think it's better for people running configure especially from packaging
> or scripts to realize that they need to translate their world into
> cmake.
> 
> So this script could perhaps
> 
>   print out that autoconf has been removed and that one must use cmake
> 
>   print out a hint that "cmake -DCMAKE_INSTALL_PREFIX=/usr/foo" is a
>   replacement for ./configure --prefix=/usr/foo
> 
>   exit with status 1, so that any well-written script/package stuff will
>   fail

That script is mine.

I would love to still use ./configure as the switches I use are...
well, none (and --prefix, for running your test).

Right now you DO get the WARNING printed, and I think you get a
failure if you pass any unsupported switch, is that not enough ?

--strk;

From Roger.Bivand at nhh.no  Fri Oct 15 08:05:48 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 15 Oct 2021 17:05:48 +0200 (CEST)
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
Message-ID: <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>

On Fri, 15 Oct 2021, Paul Ramsey wrote:

>
>
>> On Oct 15, 2021, at 2:00 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> /usr/bin/ld: /home/rsb/static/lib64/libgeos.a(WKTWriter.cpp.o): in function `geos::io::WKTWriter::writeNumber[abi:cxx11](double) const':
>> WKTWriter.cpp:(.text+0xe39): undefined reference to `geos_d2sfixed_buffered_n'
>> collect2: error: ld returned 1 exit status
>
> Somehow the ryu dependency is missing in the final library... I wonder 
> if the "object library" trick is having deleterious effects in the case 
> of building static libs.

Thanks; do you need me to check anything now? Happy to check when you 
advise.

Roger

>
> P

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Fri Oct 15 08:06:49 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 08:06:49 -0700
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
Message-ID: <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>



> On Oct 15, 2021, at 8:05 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> On Fri, 15 Oct 2021, Paul Ramsey wrote:
> 
>> 
>> 
>>> On Oct 15, 2021, at 2:00 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>> 
>>> /usr/bin/ld: /home/rsb/static/lib64/libgeos.a(WKTWriter.cpp.o): in function `geos::io::WKTWriter::writeNumber[abi:cxx11](double) const':
>>> WKTWriter.cpp:(.text+0xe39): undefined reference to `geos_d2sfixed_buffered_n'
>>> collect2: error: ld returned 1 exit status
>> 
>> Somehow the ryu dependency is missing in the final library... I wonder if the "object library" trick is having deleterious effects in the case of building static libs.
> 
> Thanks; do you need me to check anything now? Happy to check when you advise.
> 

I think your recipe gives me enough to reproduce, which is what I'll check first. If I cannot reproduce I'll be back for more. 

P.


> Roger
> 
>> 
>> P
> 
> -- 
> Roger Bivand
> Emeritus Professor
> Department of Economics, Norwegian School of Economics,
> Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
> e-mail: Roger.Bivand at nhh.no
> https://orcid.org/0000-0003-2392-6140
> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en


From Roger.Bivand at nhh.no  Fri Oct 15 08:20:31 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 15 Oct 2021 17:20:31 +0200 (CEST)
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
 <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
Message-ID: <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>

On Fri, 15 Oct 2021, Paul Ramsey wrote:

>
>
>> On Oct 15, 2021, at 8:05 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>
>> On Fri, 15 Oct 2021, Paul Ramsey wrote:
>>
>>>
>>>
>>>> On Oct 15, 2021, at 2:00 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>>
>>>> /usr/bin/ld: /home/rsb/static/lib64/libgeos.a(WKTWriter.cpp.o): in function `geos::io::WKTWriter::writeNumber[abi:cxx11](double) const':
>>>> WKTWriter.cpp:(.text+0xe39): undefined reference to `geos_d2sfixed_buffered_n'
>>>> collect2: error: ld returned 1 exit status
>>>
>>> Somehow the ryu dependency is missing in the final library... I wonder 
>>> if the "object library" trick is having deleterious effects in the 
>>> case of building static libs.
>>
>> Thanks; do you need me to check anything now? Happy to check when you 
>> advise.
>>
>
> I think your recipe gives me enough to reproduce, which is what I'll 
> check first. If I cannot reproduce I'll be back for more.

Good. I moved libryu.a to the installed lib64 directory and added -lryu to 
the g++ command, and there immediate failure is gone. I added 
libtinyxlm2.a too, because it was in the lib build directory. Adding -lryu 
and -lstdc++ to geos-config manually for --static-cclibs and 
--static-clibs permits the full check of the rgeos package to succeed. But 
please double-check, these are tricks I'm not at all familiar with.

Roger

>
> P.
>
>
>> Roger
>>
>>>
>>> P
>>
>> --
>> Roger Bivand
>> Emeritus Professor
>> Department of Economics, Norwegian School of Economics,
>> Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
>> e-mail: Roger.Bivand at nhh.no
>> https://orcid.org/0000-0003-2392-6140
>> https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en
>
>

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From pramsey at cleverelephant.ca  Fri Oct 15 10:26:12 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 10:26:12 -0700
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
 <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
 <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>
Message-ID: <40ED38E2-27B9-4E9E-AE94-44EF8A1E8F05@cleverelephant.ca>



> On Oct 15, 2021, at 8:20 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> Good. I moved libryu.a to the installed lib64 directory and added -lryu to the g++ command, and there immediate failure is gone. I added libtinyxlm2.a too, because it was in the lib build directory. Adding -lryu and -lstdc++ to geos-config manually for --static-cclibs and --static-clibs permits the full check of the rgeos package to succeed. But please double-check, these are tricks I'm not at all familiar with.

I see that when building in non-dynamic mode cmake also links the test binaries by separately adding the libgeos.a and libryu.a libraries, so it might be that "do that" is the final answer.

You should not need to add libtinyxml2.a to your link line, since it's only used by the xml test program, not by any of the library functionality.

P.

From gdt at lexort.com  Fri Oct 15 10:43:45 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 15 Oct 2021 13:43:45 -0400
Subject: [geos-devel] 3.10.0rc1
In-Reply-To: <20211015150124.GG12865@c19> (Sandro Santilli's message of "Fri, 
 15 Oct 2021 17:01:24 +0200")
References: <CACowWR0bBpu_T+h2x5FikFTyeE82oZ1gBmTp+M8FkFJ+5dsmcA@mail.gmail.com>
 <rmi8ryuh1zp.fsf@s1.lexort.com> <20211015150124.GG12865@c19>
Message-ID: <rmizgrafajy.fsf@s1.lexort.com>


Sandro Santilli <strk at kbt.io> writes:

>> So this script could perhaps
>> 
>>   print out that autoconf has been removed and that one must use cmake
>> 
>>   print out a hint that "cmake -DCMAKE_INSTALL_PREFIX=/usr/foo" is a
>>   replacement for ./configure --prefix=/usr/foo
>> 
>>   exit with status 1, so that any well-written script/package stuff will
>>   fail
>
> That script is mine.
>
> I would love to still use ./configure as the switches I use are...
> well, none (and --prefix, for running your test).
>
> Right now you DO get the WARNING printed, and I think you get a
> failure if you pass any unsupported switch, is that not enough ?

It's likely that environment vairables are treated differently, but I
don't really care personally.  I maintain my own build scripts, one for
each package, and pkgsrc will switch.  So it's just that I think it's
unhelpful for the next person, but I can see your point that there are
people for whom it is helpful.

So I change my comment to "abstain'.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211015/61d097ef/attachment.sig>

From pramsey at cleverelephant.ca  Fri Oct 15 11:20:01 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 11:20:01 -0700
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <40ED38E2-27B9-4E9E-AE94-44EF8A1E8F05@cleverelephant.ca>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
 <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
 <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>
 <40ED38E2-27B9-4E9E-AE94-44EF8A1E8F05@cleverelephant.ca>
Message-ID: <6BFDAC70-38B8-4D2B-B5AD-40348A016242@cleverelephant.ca>



> On Oct 15, 2021, at 10:26 AM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> 
> 
>> On Oct 15, 2021, at 8:20 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>> 
>> Good. I moved libryu.a to the installed lib64 directory and added -lryu to the g++ command, and there immediate failure is gone. I added libtinyxlm2.a too, because it was in the lib build directory. Adding -lryu and -lstdc++ to geos-config manually for --static-cclibs and --static-clibs permits the full check of the rgeos package to succeed. But please double-check, these are tricks I'm not at all familiar with.
> 
> I see that when building in non-dynamic mode cmake also links the test binaries by separately adding the libgeos.a and libryu.a libraries, so it might be that "do that" is the final answer.
> 
> You should not need to add libtinyxml2.a to your link line, since it's only used by the xml test program, not by any of the library functionality.
> 

OK, this is coming directly out of https://trac.osgeo.org/geos/ticket/1103

If I go back to using an "OBJECT" library in building ryu, then it gets bundled right up into libgeos.a where we want it, and your link line is nice and simple again. That implies a minimum cmake of 3.13, whcih is 3+ years old now. My macports gives me 3.21 by default. I dunno, we backed out of the OBJECT library to STATIC to keep the cmake requirement low, but that implies generating two static libs and sticking them both on the link line.

I'm inclined to bias towards a newer cmake and still generating one static library. 

P


> P.


From gdt at lexort.com  Fri Oct 15 11:27:47 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 15 Oct 2021 14:27:47 -0400
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <6BFDAC70-38B8-4D2B-B5AD-40348A016242@cleverelephant.ca> (Paul
 Ramsey's message of "Fri, 15 Oct 2021 11:20:01 -0700")
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
 <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
 <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>
 <40ED38E2-27B9-4E9E-AE94-44EF8A1E8F05@cleverelephant.ca>
 <6BFDAC70-38B8-4D2B-B5AD-40348A016242@cleverelephant.ca>
Message-ID: <rmibl3qf8ik.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> OK, this is coming directly out of https://trac.osgeo.org/geos/ticket/1103
>
> If I go back to using an "OBJECT" library in building ryu, then it
> gets bundled right up into libgeos.a where we want it, and your link
> line is nice and simple again. That implies a minimum cmake of 3.13,
> whcih is 3+ years old now. My macports gives me 3.21 by default. I
> dunno, we backed out of the OBJECT library to STATIC to keep the cmake
> requirement low, but that implies generating two static libs and
> sticking them both on the link line.
>
> I'm inclined to bias towards a newer cmake and still generating one static library. 

I'm usually in the camp of not wanting to have aggressive dependency
requirements, so having a look and opining.

pkgsrc has 3.21.2 now (and it looks like 3.21.3 just came out).

3.13.0 was released on 2018-11-20.  That's almost 5 years ago, and I
therefore think it's entirely reasonable to require it if it makes
anything even a little bit better.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211015/8ea6aaf9/attachment.sig>

From pramsey at cleverelephant.ca  Fri Oct 15 12:01:26 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 12:01:26 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmiczo6h25g.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com> <rmiczo6h25g.fsf@s1.lexort.com>
Message-ID: <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>

I'm running your script now, but just from looking at it, this seems
suspicious...

cmake .. \
           -DCMAKE_INSTALL_PREFIX=${PREFIX} \
           -DCMAKE_BUILD_RPATH=${LIBDIR} \
           -DCMAKE_INSTALL_RPATH=${LIBDIR}

My understanding of the "build rpath" is that it exists in the built
binaries PRE install, so for build testing, PRE install, you want it
to point into the local library location. By over-riding it and
setting it to LIBDIR, you're saying "no no no, please put this path
into the rpath of of the PRE install binaries". I'd guess/hope that
removing the CMAKE_BUILD_RPATH while leaving CMAKE_INSTALL_RPATH as
you have it is closer to the intent, but I'll play with a build
myself.

P

On Fri, Oct 15, 2021 at 6:02 AM Greg Troxel <gdt at lexort.com> wrote:
>
>
> tl;dr:
>
> I've done things the cmake way and the test are still not ok.
> The problem is that the test RPATH is being *appended* to the BUILD
> RPATH, instead of prepended.
>
> long version:
>
> My build script is:
> ----------------------------------------
> #!/bin/sh
>
> if [ -d $HOME/bin/ccache ]; then
>     echo "enabling ccache"
>     ccache -z
>     PATH=$HOME/bin/ccache:$PATH
> fi
>
> PREFIX=/usr/pkg
> LIBDIR=${PREFIX}/lib
>
> # In theory, BSD make is ok.
> MAKE=make
>
> (rm -rf build destdir &&
>      mkdir build &&
>      cd build &&
>      cmake .. \
>            -DCMAKE_INSTALL_PREFIX=${PREFIX} \
>            -DCMAKE_BUILD_RPATH=${LIBDIR} \
>            -DCMAKE_INSTALL_RPATH=${LIBDIR} \
>            > OUT.00.cmake 2>&1 &&
>      ${MAKE} > OUT.10.make 2>&1 &&
>      (${MAKE} check > OUT.20.check 2>&1 || true) && \
>      make DESTDIR=../destdir install > OUT.30.install 2>&1 && \
>      echo BUILD DONE
> )
> ----------------------------------------
>
> BUILD_RPATH is passed because a packaging system invoking cmake must in
> general ensure that programs/libs in the build environment can find
> their dependencies at test time.
>
> Some tests pass, and some fail, with "std:alloc bad" and various other
> stuff.  But a quick look shows that objdump -x of one of the test
> programs has:
>
>   RPATH                /usr/pkg/lib:/home/n0/gdt/SOFTWARE/GEO/GEOS/geos-master/build/lib
>
> so I expect it to go badly.   This should have been
>
>   RPATH                /home/n0/gdt/SOFTWARE/GEO/GEOS/geos-master/build/lib:/usr/pkg/lib
>
> and then I think it would have been fine.
>
>
> If anyone can tell me what cmake args I should be using instead for the
> general case of a program with a correct cmake setup and  which might be
> finding dependencies from ${PREFIX}, I'd like to hear about it.   The
> list above is what I came up after reading the cmake docs pointed out by
> pramsey@ and strk at .
>
> Greg
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

From pramsey at cleverelephant.ca  Fri Oct 15 12:33:00 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 12:33:00 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com> <rmiczo6h25g.fsf@s1.lexort.com>
 <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>
Message-ID: <21C65FCA-D444-4E96-92F4-032B025FD71A@cleverelephant.ca>

So, I think dispensing with CMAKE_BUILD_RPATH while retaining CMAKE_INSTALL_RPATH as you have it gives results that allow you to run your script to completion cleanly... at least, I checked the output on MacOS, and it's like this:

First using the current setup in your script. As you note in the pre-install state we end up with binaries that have the system path first and the build path second, which would result in bad output if I had libraries living in there.

cmake .. \                   
-DCMAKE_INSTALL_PREFIX=${PREFIX} \
-DCMAKE_BUILD_RPATH=${LIBDIR} \
-DCMAKE_INSTALL_RPATH=${LIBDIR}

PRE-INSTALL OBJDUMP (geosop):

Load command 17
          cmd LC_RPATH
      cmdsize 32
         path /usr/pkg/lib (offset 12)
Load command 18
          cmd LC_RPATH
      cmdsize 64
         path /Users/pramsey/Code/geos-3.10.0beta3/build/lib (offset 12)


However, at install time (using DESTDIR), the build path is stripped away and things are nicely pathed to their actual future install location. So this is good!

POST-INSTALL  OBJDUMP (geosop):

Load command 19
          cmd LC_RPATH
      cmdsize 32
         path /usr/pkg/lib (offset 12)


What if we use drop the CMAKE_BUILD_RPATH, as I suggest?

cmake .. \
-DCMAKE_INSTALL_PREFIX=${PREFIX} \
-DCMAKE_INSTALL_RPATH=${LIBDIR}

Now the pre-install binaries have the build path in them only, so they will run the tests against the build libs (and all should work)

PRE-INSTALL (geosop)

Load command 17
          cmd LC_RPATH
      cmdsize 64
         path /Users/pramsey/Code/geos-3.10.0beta3/build/lib (offset 12)


And post-install we are still looking good with a proper system path in the rpath.

POST-INSTALL (geosop)

Load command 19
          cmd LC_RPATH
      cmdsize 32
         path /usr/pkg/lib (offset 12)


Let me know what happens on your system?

P


> On Oct 15, 2021, at 12:01 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> I'm running your script now, but just from looking at it, this seems
> suspicious...
> 
> cmake .. \
>           -DCMAKE_INSTALL_PREFIX=${PREFIX} \
>           -DCMAKE_BUILD_RPATH=${LIBDIR} \
>           -DCMAKE_INSTALL_RPATH=${LIBDIR}
> 
> My understanding of the "build rpath" is that it exists in the built
> binaries PRE install, so for build testing, PRE install, you want it
> to point into the local library location. By over-riding it and
> setting it to LIBDIR, you're saying "no no no, please put this path
> into the rpath of of the PRE install binaries". I'd guess/hope that
> removing the CMAKE_BUILD_RPATH while leaving CMAKE_INSTALL_RPATH as
> you have it is closer to the intent, but I'll play with a build
> myself.
> 
> P
> 
> On Fri, Oct 15, 2021 at 6:02 AM Greg Troxel <gdt at lexort.com> wrote:
>> 
>> 
>> tl;dr:
>> 
>> I've done things the cmake way and the test are still not ok.
>> The problem is that the test RPATH is being *appended* to the BUILD
>> RPATH, instead of prepended.
>> 
>> long version:
>> 
>> My build script is:
>> ----------------------------------------
>> #!/bin/sh
>> 
>> if [ -d $HOME/bin/ccache ]; then
>>    echo "enabling ccache"
>>    ccache -z
>>    PATH=$HOME/bin/ccache:$PATH
>> fi
>> 
>> PREFIX=/usr/pkg
>> LIBDIR=${PREFIX}/lib
>> 
>> # In theory, BSD make is ok.
>> MAKE=make
>> 
>> (rm -rf build destdir &&
>>     mkdir build &&
>>     cd build &&
>>     cmake .. \
>>           -DCMAKE_INSTALL_PREFIX=${PREFIX} \
>>           -DCMAKE_BUILD_RPATH=${LIBDIR} \
>>           -DCMAKE_INSTALL_RPATH=${LIBDIR} \
>>> OUT.00.cmake 2>&1 &&
>>     ${MAKE} > OUT.10.make 2>&1 &&
>>     (${MAKE} check > OUT.20.check 2>&1 || true) && \
>>     make DESTDIR=../destdir install > OUT.30.install 2>&1 && \
>>     echo BUILD DONE
>> )
>> ----------------------------------------
>> 
>> BUILD_RPATH is passed because a packaging system invoking cmake must in
>> general ensure that programs/libs in the build environment can find
>> their dependencies at test time.
>> 
>> Some tests pass, and some fail, with "std:alloc bad" and various other
>> stuff.  But a quick look shows that objdump -x of one of the test
>> programs has:
>> 
>>  RPATH                /usr/pkg/lib:/home/n0/gdt/SOFTWARE/GEO/GEOS/geos-master/build/lib
>> 
>> so I expect it to go badly.   This should have been
>> 
>>  RPATH                /home/n0/gdt/SOFTWARE/GEO/GEOS/geos-master/build/lib:/usr/pkg/lib
>> 
>> and then I think it would have been fine.
>> 
>> 
>> If anyone can tell me what cmake args I should be using instead for the
>> general case of a program with a correct cmake setup and  which might be
>> finding dependencies from ${PREFIX}, I'd like to hear about it.   The
>> list above is what I came up after reading the cmake docs pointed out by
>> pramsey@ and strk at .
>> 
>> Greg
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Fri Oct 15 12:33:57 2021
From: lr at pcorp.us (Regina Obe)
Date: Fri, 15 Oct 2021 15:33:57 -0400
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <rmibl3qf8ik.fsf@s1.lexort.com>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
 <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
 <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>
 <40ED38E2-27B9-4E9E-AE94-44EF8A1E8F05@cleverelephant.ca>
 <6BFDAC70-38B8-4D2B-B5AD-40348A016242@cleverelephant.ca>
 <rmibl3qf8ik.fsf@s1.lexort.com>
Message-ID: <000201d7c1fb$99544db0$cbfce910$@pcorp.us>

> 
> Paul Ramsey <pramsey at cleverelephant.ca> writes:
> 
> > OK, this is coming directly out of
> > https://trac.osgeo.org/geos/ticket/1103
> >
> > If I go back to using an "OBJECT" library in building ryu, then it
> > gets bundled right up into libgeos.a where we want it, and your link
> > line is nice and simple again. That implies a minimum cmake of 3.13,
> > whcih is 3+ years old now. My macports gives me 3.21 by default. I
> > dunno, we backed out of the OBJECT library to STATIC to keep the cmake
> > requirement low, but that implies generating two static libs and
> > sticking them both on the link line.
> >
> > I'm inclined to bias towards a newer cmake and still generating one
static
> library.
> 
> I'm usually in the camp of not wanting to have aggressive dependency
> requirements, so having a look and opining.
> 
> pkgsrc has 3.21.2 now (and it looks like 3.21.3 just came out).
> 
> 3.13.0 was released on 2018-11-20.  That's almost 5 years ago, and I
therefore
> think it's entirely reasonable to require it if it makes anything even a
little bit
> better.
[Regina Obe] 
FWIW I'm fine with upping the requirement too.  I'm running with cmake 3.18
at moment but since I just download it from cmake website, I can easily
upgrade too if needed.





From Roger.Bivand at nhh.no  Fri Oct 15 12:34:52 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Fri, 15 Oct 2021 21:34:52 +0200 (CEST)
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <6BFDAC70-38B8-4D2B-B5AD-40348A016242@cleverelephant.ca>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
 <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
 <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>
 <40ED38E2-27B9-4E9E-AE94-44EF8A1E8F05@cleverelephant.ca>
 <6BFDAC70-38B8-4D2B-B5AD-40348A016242@cleverelephant.ca>
Message-ID: <e389ce68-a629-e332-e174-234d4cdf36f@reclus2.nhh.no>

On Fri, 15 Oct 2021, Paul Ramsey wrote:

>
>
>> On Oct 15, 2021, at 10:26 AM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>>
>>
>>
>>> On Oct 15, 2021, at 8:20 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
>>>
>>> Good. I moved libryu.a to the installed lib64 directory and added 
>>> -lryu to the g++ command, and there immediate failure is gone. I added 
>>> libtinyxlm2.a too, because it was in the lib build directory. Adding 
>>> -lryu and -lstdc++ to geos-config manually for --static-cclibs and 
>>> --static-clibs permits the full check of the rgeos package to succeed. 
>>> But please double-check, these are tricks I'm not at all familiar 
>>> with.
>>
>> I see that when building in non-dynamic mode cmake also links the test 
>> binaries by separately adding the libgeos.a and libryu.a libraries, so 
>> it might be that "do that" is the final answer.
>>
>> You should not need to add libtinyxml2.a to your link line, since it's 
>> only used by the xml test program, not by any of the library 
>> functionality.
>>
>
> OK, this is coming directly out of https://trac.osgeo.org/geos/ticket/1103
>
> If I go back to using an "OBJECT" library in building ryu, then it gets 
> bundled right up into libgeos.a where we want it, and your link line is 
> nice and simple again. That implies a minimum cmake of 3.13, whcih is 3+ 
> years old now. My macports gives me 3.21 by default. I dunno, we backed 
> out of the OBJECT library to STATIC to keep the cmake requirement low, 
> but that implies generating two static libs and sticking them both on 
> the link line.
>
> I'm inclined to bias towards a newer cmake and still generating one 
> static library.

For completeness, the version of cmake in the MXE environment we use for 
cross-compiling is 3.20.1, so requiring a version that supports a single, 
simple libgeos.a is certainly preferable for R packaging for Windows; 
macOS would be fine too at 3.20.2 in my case.

Roger

>
> P
>
>
>> P.
>
>

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From geos-trac at osgeo.org  Fri Oct 15 13:13:04 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 15 Oct 2021 20:13:04 -0000
Subject: [geos-devel] [GEOS] #1103: Target "tinyxml2" of type
 OBJECT_LIBRARY may not be linked into another target.
In-Reply-To: <042.e75db919120d5aa17fe58c148526a5fa@osgeo.org>
References: <042.e75db919120d5aa17fe58c148526a5fa@osgeo.org>
Message-ID: <057.95a70bf7f395573d21baf685c4c22ee8@osgeo.org>

#1103: Target "tinyxml2" of type OBJECT_LIBRARY may not be linked into another
target.
-----------------------------------+---------------------------
 Reporter:  strk                   |       Owner:  geos-devel@?
     Type:  defect                 |      Status:  closed
 Priority:  blocker                |   Milestone:  3.10.0
Component:  Build/Install (cmake)  |     Version:  main
 Severity:  Critical               |  Resolution:  fixed
 Keywords:                         |
-----------------------------------+---------------------------

Comment (by Paul Ramsey <pramsey@?>):

 In [changeset:"f65bb355896a9bebc4a52a638c2c67df4959ffb7/git" f65bb35/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="f65bb355896a9bebc4a52a638c2c67df4959ffb7"
 Use OBJECT library to build ryu, so it can be fully included in
 static libgeos.a, and up the cmake requirement to 3.13 to support
 that change. References #1103
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1103#comment:8>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From jmckenna at gatewaygeomatics.com  Fri Oct 15 13:14:32 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Fri, 15 Oct 2021 17:14:32 -0300
Subject: [geos-devel] 3.10.0rc1 (static)
In-Reply-To: <000201d7c1fb$99544db0$cbfce910$@pcorp.us>
References: <2efb9ec9-bcb0-630-b1e6-971c6b103abe@reclus2.nhh.no>
 <A55A61BE-1FBA-4957-B65B-76D614CF3297@cleverelephant.ca>
 <244b15f8-c08f-a5e3-15ea-7f17f235b1b0@reclus2.nhh.no>
 <85A31068-60FA-4C96-B228-A3146C92A48A@cleverelephant.ca>
 <4bc82ccb-f97d-1698-b9c3-9b6d2ac26ca5@reclus2.nhh.no>
 <40ED38E2-27B9-4E9E-AE94-44EF8A1E8F05@cleverelephant.ca>
 <6BFDAC70-38B8-4D2B-B5AD-40348A016242@cleverelephant.ca>
 <rmibl3qf8ik.fsf@s1.lexort.com> <000201d7c1fb$99544db0$cbfce910$@pcorp.us>
Message-ID: <95dd4297-6351-d10c-aed0-939b7a35f088@gatewaygeomatics.com>

On 2021-10-15 4:33 p.m., Regina Obe wrote:
>>
>> Paul Ramsey <pramsey at cleverelephant.ca> writes:
>>
>>> OK, this is coming directly out of
>>> https://trac.osgeo.org/geos/ticket/1103
>>>
>>> If I go back to using an "OBJECT" library in building ryu, then it
>>> gets bundled right up into libgeos.a where we want it, and your link
>>> line is nice and simple again. That implies a minimum cmake of 3.13,
>>> whcih is 3+ years old now. My macports gives me 3.21 by default. I
>>> dunno, we backed out of the OBJECT library to STATIC to keep the cmake
>>> requirement low, but that implies generating two static libs and
>>> sticking them both on the link line.
>>>
>>> I'm inclined to bias towards a newer cmake and still generating one
> static
>> library.
>>
>> I'm usually in the camp of not wanting to have aggressive dependency
>> requirements, so having a look and opining.
>>
>> pkgsrc has 3.21.2 now (and it looks like 3.21.3 just came out).
>>
>> 3.13.0 was released on 2018-11-20.  That's almost 5 years ago, and I
> therefore
>> think it's entirely reasonable to require it if it makes anything even a
> little bit
>> better.
> [Regina Obe]
> FWIW I'm fine with upping the requirement too.  I'm running with cmake 3.18
> at moment but since I just download it from cmake website, I can easily
> upgrade too if needed.
> 

I'm fine also with newer cmake requirement (running 3.21.2 here for MS4W 
build environment).

-jeff



-- 
Jeff McKenna
GatewayGeo: Developers of MS4W, MapServer Consulting and Training
co-founder of FOSS4G
http://gatewaygeo.com/

From pramsey at cleverelephant.ca  Fri Oct 15 13:53:00 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 13:53:00 -0700
Subject: [geos-devel] 3.10.0rc2
Message-ID: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>

Here it is hopefully ready to go.

https://download.osgeo.org/geos/geos-3.10.0rc2.tar.bz2

P

From gdt at lexort.com  Fri Oct 15 15:48:23 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 15 Oct 2021 18:48:23 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>
 (Paul Ramsey's message of "Fri, 15 Oct 2021 12:01:26 -0700")
References: <rmik0ijqc9f.fsf@s1.lexort.com> <rmiczo6h25g.fsf@s1.lexort.com>
 <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>
Message-ID: <rmiilxxewg8.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> I'm running your script now, but just from looking at it, this seems
> suspicious...
>
> cmake .. \
>            -DCMAKE_INSTALL_PREFIX=${PREFIX} \
>            -DCMAKE_BUILD_RPATH=${LIBDIR} \
>            -DCMAKE_INSTALL_RPATH=${LIBDIR}
>
> My understanding of the "build rpath" is that it exists in the built
> binaries PRE install, so for build testing, PRE install, you want it
> to point into the local library location. By over-riding it and
> setting it to LIBDIR, you're saying "no no no, please put this path
> into the rpath of of the PRE install binaries". I'd guess/hope that
> removing the CMAKE_BUILD_RPATH while leaving CMAKE_INSTALL_RPATH as
> you have it is closer to the intent, but I'll play with a build
> myself.

I am trying to figure out how to deal with cmake in the general case of
a packaging system.  While geos usually has no dependencies (except
pthreads which are usually part of base but not always), packages built
with cmake in general do have dependencies.   When packages with
dependencies build test programs, those programs will need to find those
dependency libraries.    So they need to have the prefix's libdir in
RPATH.

I think there is only one real bug, which is that cmake uses as RPATH in
the build tree:

 BUILD_RPATH:/path/to/build/tree/lib

when it should be doing

 /path/to/build/tree/lib:BUILD_RPATH

so that when a library is in both places it comes from the build tree.
I do not know if this is a cmake bug or a bug in geos's CMakeFiles, but
I lean to cmake because I don't see anything like this in geos
CMakeFiles.

Consider if geos happened to use libtiff.so and that was in the same
prefix we were talking about.  That's a concrete example of what I'm
speaking about generally.


-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211015/462987a7/attachment.sig>

From gdt at lexort.com  Fri Oct 15 16:01:34 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 15 Oct 2021 19:01:34 -0400
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <21C65FCA-D444-4E96-92F4-032B025FD71A@cleverelephant.ca> (Paul
 Ramsey's message of "Fri, 15 Oct 2021 12:33:00 -0700")
References: <rmik0ijqc9f.fsf@s1.lexort.com> <rmiczo6h25g.fsf@s1.lexort.com>
 <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>
 <21C65FCA-D444-4E96-92F4-032B025FD71A@cleverelephant.ca>
Message-ID: <rmiee8levu9.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> Let me know what happens on your system?

The destdir has RPATH of the prefix, and the tests have RPATH of only
the build tree.  The tests all pass (which is good, because that's
really what matters as the present discussion is about the test harness,
and not about the soundness of the resulting install).

So this approach works for geos because it's a special case, but it
won't work for programs with dependencies.

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211015/d6a29fba/attachment.sig>

From pramsey at cleverelephant.ca  Fri Oct 15 16:48:52 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 15 Oct 2021 16:48:52 -0700
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmiee8levu9.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com> <rmiczo6h25g.fsf@s1.lexort.com>
 <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>
 <21C65FCA-D444-4E96-92F4-032B025FD71A@cleverelephant.ca>
 <rmiee8levu9.fsf@s1.lexort.com>
Message-ID: <B7DBA7D1-6038-450E-85DD-CEBEF8789BB9@cleverelephant.ca>



> On Oct 15, 2021, at 4:01 PM, Greg Troxel <gdt at lexort.com> wrote:
> 
> 
> Paul Ramsey <pramsey at cleverelephant.ca> writes:
> 
>> Let me know what happens on your system?
> 
> The destdir has RPATH of the prefix, and the tests have RPATH of only
> the build tree.  The tests all pass (which is good, because that's
> really what matters as the present discussion is about the test harness,
> and not about the soundness of the resulting install).
> 
> So this approach works for geos because it's a special case, but it
> won't work for programs with dependencies.
> 

Good news as far as I can tell.

P

From sebastic at xs4all.nl  Fri Oct 15 23:34:02 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Sat, 16 Oct 2021 08:34:02 +0200
Subject: [geos-devel] 3.10.0rc2
In-Reply-To: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
References: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
Message-ID: <a5f73698-a8d8-38bb-b847-980a56d0fff9@xs4all.nl>

Just for the record, the increased CMake version requirement is not met
on Ubuntu bionic.

 https://launchpad.net/ubuntu/+source/cmake

Only focal will be able to have geos backports via the UbuntuGIS PPA.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From Roger.Bivand at nhh.no  Sat Oct 16 03:12:06 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 16 Oct 2021 12:12:06 +0200 (CEST)
Subject: [geos-devel] 3.10.0rc2
Message-ID: <b404ed8-96d4-f174-ffd-66c0ff9c20e1@reclus2.nhh.no>

Thanks very much; static and dynamic builds OK with R package rgeos.

Roger

-- 
Roger Bivand
Emeritus Professor
Department of Economics, Norwegian School of Economics,
Postboks 3490 Ytre Sandviken, 5045 Bergen, Norway.
e-mail: Roger.Bivand at nhh.no
https://orcid.org/0000-0003-2392-6140
https://scholar.google.no/citations?user=AWeghB0AAAAJ&hl=en

From lr at pcorp.us  Sat Oct 16 07:17:28 2021
From: lr at pcorp.us (Regina Obe)
Date: Sat, 16 Oct 2021 10:17:28 -0400
Subject: [geos-devel] 3.10.0rc2
In-Reply-To: <a5f73698-a8d8-38bb-b847-980a56d0fff9@xs4all.nl>
References: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
 <a5f73698-a8d8-38bb-b847-980a56d0fff9@xs4all.nl>
Message-ID: <000301d7c298$8da187b0$a8e49710$@pcorp.us>

> Just for the record, the increased CMake version requirement is not met on
> Ubuntu bionic.
> 
>  https://launchpad.net/ubuntu/+source/cmake
> 
> Only focal will be able to have geos backports via the UbuntuGIS PPA.
> 
> Kind Regards,
> 
> Bas
> 
> --
>  GPG Key ID: 4096R/6750F10AE88D4AF1
> Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1
[Regina Obe] 
Okay that sucks :(
Looking at the story on debian
Bullseye (11) appears to be at 3.18.4 (fine)
Buster  (10) 3.13.4  (barely good enough)
Stretch already doesn't have the minimum so guess we don't care

Still though I feel few people will try to be compiling geos on older
platforms so still think it's worth the cmake version upgrade. 

Thanks,
Regina


From andrew.d.hershberger at gmail.com  Sat Oct 16 08:54:45 2021
From: andrew.d.hershberger at gmail.com (Andrew Hershberger)
Date: Sat, 16 Oct 2021 10:54:45 -0500
Subject: [geos-devel] 3.10.0rc2
In-Reply-To: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
References: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
Message-ID: <CACZW30N3fMVQruoiucOzP-SMuNzf1v3_=40txcgQoneHUP4HPg@mail.gmail.com>

GEOSwift builds & tests are passing. I also just spent some time studying
the WKT writer changes when trim is true. I like the new ryu-based
behavior. I made a slight change to the public GEOSwift API in light of
this change and drafted some documentation for the two methods that are
impacted by it:
https://github.com/GEOSwift/GEOSwift/compare/main...geos-3.10.0#diff-f5aa7242dd6b42031322468f88b5f533103e932a904ce3f2db53958798cbd3daR5-R17

Feedback is welcome if the draft docs aren't clear or accurate.

On Fri, Oct 15, 2021 at 3:53 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Here it is hopefully ready to go.
>
> https://download.osgeo.org/geos/geos-3.10.0rc2.tar.bz2
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211016/1190b76d/attachment.html>

From jmckenna at gatewaygeomatics.com  Sat Oct 16 10:24:14 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Sat, 16 Oct 2021 14:24:14 -0300
Subject: [geos-devel] 3.10.0rc2
In-Reply-To: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
References: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
Message-ID: <dcfe4444-5bcc-d74c-b1d7-3d8184e7a1bd@gatewaygeomatics.com>

On 2021-10-15 5:53 p.m., Paul Ramsey wrote:
> Here it is hopefully ready to go.
> 
> https://download.osgeo.org/geos/geos-3.10.0rc2.tar.bz2
> 

Works well here in the MS4W environment!

-jeff




-- 
Jeff McKenna
GatewayGeo: Developers of MS4W, MapServer Consulting and Training
co-founder of FOSS4G
http://gatewaygeo.com/

From strk at kbt.io  Sat Oct 16 15:33:51 2021
From: strk at kbt.io (Sandro Santilli)
Date: Sun, 17 Oct 2021 00:33:51 +0200
Subject: [geos-devel] cmake detailed comments
In-Reply-To: <rmiilxxewg8.fsf@s1.lexort.com>
References: <rmik0ijqc9f.fsf@s1.lexort.com> <rmiczo6h25g.fsf@s1.lexort.com>
 <CACowWR1eom7s9hKX8ZQt+baW7o+crE3LTy7ZJCKCc19Ckjno5g@mail.gmail.com>
 <rmiilxxewg8.fsf@s1.lexort.com>
Message-ID: <20211016223351.GB4561@c19>

On Fri, Oct 15, 2021 at 06:48:23PM -0400, Greg Troxel wrote:

> I think there is only one real bug, which is that cmake uses as RPATH in
> the build tree:
> 
>  BUILD_RPATH:/path/to/build/tree/lib
> 
> when it should be doing
> 
>  /path/to/build/tree/lib:BUILD_RPATH

I agree it looks like a bug. This would be best filed upstream
to cmake devs I guess:
https://gitlab.kitware.com/cmake/cmake/-/issues

There are currently 66 issues mentioning RPATH, and another 4
mentioning RUNPATH


--strk;

From mwtoews at gmail.com  Sun Oct 17 04:51:24 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Mon, 18 Oct 2021 00:51:24 +1300
Subject: [geos-devel] 3.10.0rc2
In-Reply-To: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
References: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
Message-ID: <CAM2FmMrT+no42OMWL5tzTMjdEKUq096oOX0-HOQxBzaQRXD0Hg@mail.gmail.com>

On Sat, 16 Oct 2021 at 09:53, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>
> Here it is hopefully ready to go.
>
> https://download.osgeo.org/geos/geos-3.10.0rc2.tar.bz2

Looks good, and this does indeed fix that static linking from rc1.

While not worth a new rc in itself, I've provided an additional fix
for pkg-config with the --static flag:
https://git.osgeo.org/gitea/geos/geos/pulls/115 (sorry, this should
have been done a while ago). Only merge this for 3.10 if there are any
other issues with rc2, otherwise plop it into main for the next
release, as it's an improvement to a feature.

Bumping the cmake version is fine overall, but a minor inconvenience
to bionic users like me.

Tests with geos-3.10rc1 from shapely-1.8rc1 are good, and I'll assume
geos-3.10rc2 are fine too.

From strk at kbt.io  Mon Oct 18 06:01:48 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 18 Oct 2021 15:01:48 +0200
Subject: [geos-devel] 3.10.0rc2
In-Reply-To: <CAM2FmMrT+no42OMWL5tzTMjdEKUq096oOX0-HOQxBzaQRXD0Hg@mail.gmail.com>
References: <CACowWR1nPY09d-aCp3NX8xy6Ne9ipM_Xic2W+H0UDYEgnp9DNg@mail.gmail.com>
 <CAM2FmMrT+no42OMWL5tzTMjdEKUq096oOX0-HOQxBzaQRXD0Hg@mail.gmail.com>
Message-ID: <20211018130148.GC2667@c19>

On Mon, Oct 18, 2021 at 12:51:24AM +1300, Mike Taves wrote:
> On Sat, 16 Oct 2021 at 09:53, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> >
> > Here it is hopefully ready to go.
> >
> > https://download.osgeo.org/geos/geos-3.10.0rc2.tar.bz2
> 
> Looks good, and this does indeed fix that static linking from rc1.
> 
> While not worth a new rc in itself, I've provided an additional fix
> for pkg-config with the --static flag:
> https://git.osgeo.org/gitea/geos/geos/pulls/115 (sorry, this should
> have been done a while ago). Only merge this for 3.10 if there are any
> other issues with rc2, otherwise plop it into main for the next
> release, as it's an improvement to a feature.

I've merged that one, thanks.

--strk;

From strk at kbt.io  Mon Oct 18 06:05:34 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 18 Oct 2021 15:05:34 +0200
Subject: [geos-devel] Default merge strategy on Gitea
Message-ID: <20211018130534.GD2667@c19>

I've changed the default merge strategy for pull requests
on Gitea to "Rebase and Merge (no-ff)". This means a merge
commit *will* be generated even if not necessary (after rebase).

Hopefully this will help not missing the information about *who*
actually merged the contribution, taking the responsibility over
the merge.

Other merge strategies are still available, just the default changed.
It doesn't make sense to force a merge commit for your OWN
contributions, for example.

In order to do the same from other sources please use the --no-ff
switch to the git-merge command (and possibly rebase the contributed
branch against current target branch before merging, to keep history
clean).


--strk;

  Libre GIS consultant/developer
  https://strk.kbt.io/services.html

From pramsey at cleverelephant.ca  Mon Oct 18 13:33:52 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 18 Oct 2021 13:33:52 -0700
Subject: [geos-devel] 3.10.0 Release Vote
Message-ID: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>

Having gone through numerous beta and rc releases, and hearing no
further screams of agony, I call the vote on releasing 3.10.0.

+1

P

From mtnclimb at gmail.com  Mon Oct 18 13:52:47 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Mon, 18 Oct 2021 13:52:47 -0700
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
Message-ID: <CAK2ens3o6nSTRT1xazhsb64V8FYUMM7JbxSU+2KNTOVPcetXgg@mail.gmail.com>

+1


On Mon, Oct 18, 2021 at 1:34 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Having gone through numerous beta and rc releases, and hearing no
> further screams of agony, I call the vote on releasing 3.10.0.
>
> +1
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211018/7daa19c4/attachment.html>

From strk at kbt.io  Mon Oct 18 14:27:41 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 18 Oct 2021 23:27:41 +0200
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
Message-ID: <20211018212741.GD5151@c19>

On Mon, Oct 18, 2021 at 01:33:52PM -0700, Paul Ramsey wrote:
> Having gone through numerous beta and rc releases, and hearing no
> further screams of agony, I call the vote on releasing 3.10.0.
> 
> +1

I know I'm late to the party but I'm trying builds on multiple
machines now.

The fist thing that did strike me was that a new ./configure (cmake)
run did NOT result in proper update of all the configuration, but still
remembered my previous cmake run defines so ended up installing GEOS in
/tmp/geos10 (from the tests I was doing with RUNPATH).

I tried `make distclean` but such target is not present.
I know, `rm -rf <buildtree>` is the cmake way, and I was lucky
to be able to do that, but if you build in the source tree
that's not something you can do easily.

Second thing:

  $ geosop help test
  terminate called after throwing an instance of 'std::invalid_argument'
    what():  stod
  Aborted (core dumped)

I'd rather not install `geosop` than letting it core-dump so easily.
It was ticketed as https://trac.osgeo.org/geos/ticket/1126 and then
retargetted to 3.11 milestone, but really, I think we shouldn't
release with such known behaviour.

--strk;

From geos-trac at osgeo.org  Mon Oct 18 14:28:11 2021
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 18 Oct 2021 21:28:11 -0000
Subject: [geos-devel] [GEOS] #1126: geosop aborts too much :)
In-Reply-To: <042.6ab35d224a36bfe6424f0c8db83bb68a@osgeo.org>
References: <042.6ab35d224a36bfe6424f0c8db83bb68a@osgeo.org>
Message-ID: <057.5795afb05b3818f99975897e5aeb343c@osgeo.org>

#1126: geosop aborts too much :)
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  blocker     |   Milestone:  3.10.0
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * priority:  major => blocker
 * milestone:  3.11.0 => 3.10.0


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1126#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Mon Oct 18 14:34:00 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Mon, 18 Oct 2021 14:34:00 -0700
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <20211018212741.GD5151@c19>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
 <20211018212741.GD5151@c19>
Message-ID: <CEA4F399-0CCA-4859-B706-0EB55D0C9AF4@cleverelephant.ca>

Um, 
- plenty of betas, plenty of rc, 
- the configure thing is your own addition: fix it to force a nocache, or just drop it, 
- and we're also re-litigating cmake too (the docs unambiguously provide out-of-tree examples only)? 
- geosop is not mission critical, it can be patched up in micro releases.

P.

> On Oct 18, 2021, at 2:27 PM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Mon, Oct 18, 2021 at 01:33:52PM -0700, Paul Ramsey wrote:
>> Having gone through numerous beta and rc releases, and hearing no
>> further screams of agony, I call the vote on releasing 3.10.0.
>> 
>> +1
> 
> I know I'm late to the party but I'm trying builds on multiple
> machines now.
> 
> The fist thing that did strike me was that a new ./configure (cmake)
> run did NOT result in proper update of all the configuration, but still
> remembered my previous cmake run defines so ended up installing GEOS in
> /tmp/geos10 (from the tests I was doing with RUNPATH).
> 
> I tried `make distclean` but such target is not present.
> I know, `rm -rf <buildtree>` is the cmake way, and I was lucky
> to be able to do that, but if you build in the source tree
> that's not something you can do easily.
> 
> Second thing:
> 
>  $ geosop help test
>  terminate called after throwing an instance of 'std::invalid_argument'
>    what():  stod
>  Aborted (core dumped)
> 
> I'd rather not install `geosop` than letting it core-dump so easily.
> It was ticketed as https://trac.osgeo.org/geos/ticket/1126 and then
> retargetted to 3.11 milestone, but really, I think we shouldn't
> release with such known behaviour.
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From mtnclimb at gmail.com  Mon Oct 18 14:49:08 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Mon, 18 Oct 2021 14:49:08 -0700
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <20211018212741.GD5151@c19>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
 <20211018212741.GD5151@c19>
Message-ID: <CAK2ens1cnzMna5t4T1RF1NfPGKUjZrNVDv-Gz=0r-t5H=ywHiQ@mail.gmail.com>

On Mon, Oct 18, 2021 at 2:27 PM Sandro Santilli <strk at kbt.io> wrote

>
>   $ geosop help test
>   terminate called after throwing an instance of 'std::invalid_argument'
>     what():  stod
>   Aborted (core dumped)
>
> I'd rather not install `geosop` than letting it core-dump so easily.
> It was ticketed as https://trac.osgeo.org/geos/ticket/1126 and then
> retargetted to 3.11 milestone, but really, I think we shouldn't
> release with such known behaviour.
>

I agree with Paul - geosop is not mission-critical, so this issue is not a
blocker for the release.

I will work on hardening geosop against bad inputs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211018/7ad90920/attachment.html>

From geos-trac at osgeo.org  Mon Oct 18 15:05:01 2021
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 18 Oct 2021 22:05:01 -0000
Subject: [geos-devel] [GEOS] #1126: geosop aborts too much :)
In-Reply-To: <042.6ab35d224a36bfe6424f0c8db83bb68a@osgeo.org>
References: <042.6ab35d224a36bfe6424f0c8db83bb68a@osgeo.org>
Message-ID: <057.9dc7370f57280577bde0c3b5de86272a@osgeo.org>

#1126: geosop aborts too much :)
------------------------+---------------------
 Reporter:  strk        |       Owner:  mdavis
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.11.0
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------
Changes (by mdavis):

 * owner:  geos-devel@? => mdavis
 * priority:  blocker => major
 * milestone:  3.10.0 => 3.11.0


Comment:

 It's a good idea to harden geosop against invalid input.  I will work on
 that.  But this is not a blocker for 3.10.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1126#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Mon Oct 18 15:11:39 2021
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 19 Oct 2021 00:11:39 +0200
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <CAK2ens1cnzMna5t4T1RF1NfPGKUjZrNVDv-Gz=0r-t5H=ywHiQ@mail.gmail.com>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
 <20211018212741.GD5151@c19>
 <CAK2ens1cnzMna5t4T1RF1NfPGKUjZrNVDv-Gz=0r-t5H=ywHiQ@mail.gmail.com>
Message-ID: <20211018221139.GE5151@c19>

Current main branch (4a7fd4c5c726441ecf47be31f1654a803eac52a2)
builds and passes `make check` on

  - Debian GNU/Linux 10 (buster)
  - Ubuntu 20.10

+1 for final

--strk;

On Mon, Oct 18, 2021 at 02:49:08PM -0700, Martin Davis wrote:
> On Mon, Oct 18, 2021 at 2:27 PM Sandro Santilli <strk at kbt.io> wrote
> 
> >
> >   $ geosop help test
> >   terminate called after throwing an instance of 'std::invalid_argument'
> >     what():  stod
> >   Aborted (core dumped)
> >
> > I'd rather not install `geosop` than letting it core-dump so easily.
> > It was ticketed as https://trac.osgeo.org/geos/ticket/1126 and then
> > retargetted to 3.11 milestone, but really, I think we shouldn't
> > release with such known behaviour.
> >
> 
> I agree with Paul - geosop is not mission-critical, so this issue is not a
> blocker for the release.
> 
> I will work on hardening geosop against bad inputs.

> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


-- 

  Libre GIS consultant/developer
  https://strk.kbt.io/services.html

From dbaston at gmail.com  Mon Oct 18 15:19:56 2021
From: dbaston at gmail.com (Daniel Baston)
Date: Mon, 18 Oct 2021 18:19:56 -0400
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
Message-ID: <CA+K_q_qtEdqAuh-XMnD10Bzy_tQx9_yEJ3gz49Wt25DqL5ULEw@mail.gmail.com>

+1

On Mon, Oct 18, 2021 at 4:34 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> Having gone through numerous beta and rc releases, and hearing no
> further screams of agony, I call the vote on releasing 3.10.0.
>
> +1
>
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211018/4c69ffb1/attachment-0001.html>

From lr at pcorp.us  Mon Oct 18 15:30:36 2021
From: lr at pcorp.us (Regina Obe)
Date: Mon, 18 Oct 2021 18:30:36 -0400
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <CA+K_q_qtEdqAuh-XMnD10Bzy_tQx9_yEJ3gz49Wt25DqL5ULEw@mail.gmail.com>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
 <CA+K_q_qtEdqAuh-XMnD10Bzy_tQx9_yEJ3gz49Wt25DqL5ULEw@mail.gmail.com>
Message-ID: <000d01d7c46f$c61d1e50$52575af0$@pcorp.us>

+1

 

From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of Daniel Baston
Sent: Monday, October 18, 2021 6:20 PM
To: GEOS Development List <geos-devel at lists.osgeo.org>
Subject: Re: [geos-devel] 3.10.0 Release Vote

 

+1

 

On Mon, Oct 18, 2021 at 4:34 PM Paul Ramsey <pramsey at cleverelephant.ca <mailto:pramsey at cleverelephant.ca> > wrote:

Having gone through numerous beta and rc releases, and hearing no
further screams of agony, I call the vote on releasing 3.10.0.

+1

P
_______________________________________________
geos-devel mailing list
geos-devel at lists.osgeo.org <mailto:geos-devel at lists.osgeo.org> 
https://lists.osgeo.org/mailman/listinfo/geos-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211018/82af70b7/attachment.html>

From jmckenna at gatewaygeomatics.com  Mon Oct 18 16:16:34 2021
From: jmckenna at gatewaygeomatics.com (Jeff McKenna)
Date: Mon, 18 Oct 2021 20:16:34 -0300
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
Message-ID: <f9e14aba-5e3e-535d-d9f9-e604bbaa0e92@gatewaygeomatics.com>

On 2021-10-18 5:33 p.m., Paul Ramsey wrote:
> Having gone through numerous beta and rc releases, and hearing no
> further screams of agony, I call the vote on releasing 3.10.0.
> 
> +1
> 


+1 jeff




From mwtoews at gmail.com  Mon Oct 18 17:38:51 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Tue, 19 Oct 2021 13:38:51 +1300
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <20211018212741.GD5151@c19>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
 <20211018212741.GD5151@c19>
Message-ID: <CAM2FmMo9SL4b301U680ekThjrJJtZqUaaYesyVQVVWmdJphY_A@mail.gmail.com>

On Tue, 19 Oct 2021 at 10:27, Sandro Santilli <strk at kbt.io> wrote:
> I'd rather not install `geosop` than letting it core-dump so easily.

By default, geosop is installed into bin. Users that only need the
library may want to toggle the BUILD_GEOSOP option:
$ cmake -DBUILD_GEOSOP=OFF ..
(also a point-and-click checkbox option with the CMake GUI)

Thanks for the quick fix to geosop!

From sebastic at xs4all.nl  Mon Oct 18 21:21:41 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Tue, 19 Oct 2021 06:21:41 +0200
Subject: [geos-devel] 3.10.0 Release Vote
In-Reply-To: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
References: <CACowWR3pRk4grd-892iZ-ReOU4yCsL3So6n838q+b7p-P6fn0w@mail.gmail.com>
Message-ID: <53c7b9ee-4479-f2ca-cb5c-fd2121e7e370@xs4all.nl>

On 10/18/21 10:33 PM, Paul Ramsey wrote:
> Having gone through numerous beta and rc releases, and hearing no
> further screams of agony, I call the vote on releasing 3.10.0.

You should only release 3.10.0 if that only entails renaming rc2.

If not, you should first release rc3.

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From pramsey at cleverelephant.ca  Tue Oct 19 14:26:42 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 19 Oct 2021 14:26:42 -0700
Subject: [geos-devel] 3.10.0rc3
Message-ID: <CACowWR0s51OwedepKux551qmKwPMJj8roQVQ=JKwsA-J5x0O3w@mail.gmail.com>

Here it is hopefully ready to go. I am releasing tomorrow, based on
the happy friendly PSC vote, unless someone lights themself on fire
over night.

https://download.osgeo.org/geos/geos-3.10.0rc3.tar.bz2

P

From pramsey at cleverelephant.ca  Wed Oct 20 13:27:02 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 20 Oct 2021 13:27:02 -0700
Subject: [geos-devel] GEOS 3.10.0 Released
Message-ID: <CACowWR2OQD8yuSHm7Ywg8N4q5=Rpp6rZzYnWSWiX5vnH=ee4iA@mail.gmail.com>

The GEOS PSC is somewhat amused to set the 3.10.0 release of GEOS free
to fly the skies of the digisphere, bringing valid geometries and fast
operations to entities everywhere.

https://trac.osgeo.org/geos/

Headline changes for this release include:
* Continuing performance improvements, particularly in the in-memory
STRTree, and new C-API functions for reading from / writing to GEOS
objects from in-memory buffers. Because it is a core algorithm for
other processes, the index improvement provides a speed-up to
operations across the library.
* Net-new algorithm for Validity checking that speed up testing of
validity, through a more step-wise approach with short-circuiting.
* A new algorithm for Validity enforcement that uses ring containment
logic to determine polygon area membership, for some "more reasonable"
results in complex ring overlapping cases.
* A triangulation routine for polygons, that provides attractive
constrained Delaunay triangulations.

For those with a nose for details, the full NEWS entry follows.

Thank you for using GEOS,
And your help in its development,
The Whole GEOS PSC

== NEWS ====================================

- New things:
  - CAPI: GEOSDistanceWithin, GEOSPreparedDistanceWithin
          (#1124, Sandro Santilli)
  - Output WKT using positional precision with the ryu
    library (#868, Paul Ramsey)
  - geosop CLI for GEOS (Martin Davis)
  - Full doxygen of the C-API (Paul Ramsey)
  - GeometryFixer class for validity enforcement (Martin Davis, Paul Ramsey)
  - CAPI: GEOSDensify (Brendan Ward)
  - CAPI: GEOSCoordSeq_copyFromArrays, GEOSCoordSeq_copyFromBuffer,
          GEOSCoordSeq_copyToArrays, GEOSCoordSeq_copyToBuffer (Daniel Baston)
  - CAPI: GEOSMakeValidWithParams new validity enforcement approach from
          https://github.com/locationtech/jts/pull/704, uses GeometryFixer
          (Paul Ramsey, Martin Davis)
  - CAPI: GEOSWKBWriter_getFlavor, GEOSWKBWriter_setFlavor support
          outputting ISO or Extended WKB flavors (#466, Paul Ramsey)
  - CAPI: GEOSConstrainedDelaunayTriangulation, builds a constrained
          triangulation of an input Polygon or MultiPolygon,
          returning a GeometryCollection(Polygon) of the triangles.

- Fixes/Improvements:
  - Preserve ordering of lines in overlay results (Martin Davis)
  - Check for invalid geometry before fixing polygonal result in Densifier
    and DPSimplifier (Martin Davis)
  - Fix overlay handling of flat interior lines (JTS-685, Martin Davis)
  - Fix IsValidOp to correctly report invalid nested MultiPolygons
(#1112, Martin Davis)
  - Fix BufferOp to avoid artifacts in certain polygon buffers (#1101,
Martin Davis)
  - Fix IsValidOp to correctly report certain kinds of invalid
LinearRings (Martin Davis)
  - Improve STRtree performance through TemplateSTRtree implementation
(Daniel Baston)
  - Fix DiscreteFrechetDistance to use initial points of input lines
(#1128, Martin Davis)

- Changes:
  - Autoconf build system is dropped in favour of CMake
    See README.md and INSTALL.md for examples of usage
  - Libtool is no longer used for in favour of CMake
    Therefor libgeos.la is no longer built/installed
  - #1094, #1090: Drop inlines.cpp to address duplicate symbols on
many platforms
    (Regina Obe)
  - GH475: Do not return NaN from GEOSProjectNormalized_r (Paul Ramsey)
  - GH442: BufferOp now returns unique_ptr<Geometry> result (Paul Ramsey)

From geos-trac at osgeo.org  Fri Oct 22 04:18:32 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 22 Oct 2021 11:18:32 -0000
Subject: [geos-devel] [GEOS] #1135: setPrecision crashes when collapsing
 linearring
Message-ID: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>

#1135: setPrecision crashes when collapsing linearring
-------------------------+--------------------------
 Reporter:  caspervdw    |      Owner:  geos-devel@?
     Type:  defect       |     Status:  new
 Priority:  major        |  Milestone:  3.10.1
Component:  Default      |    Version:  main
 Severity:  Significant  |   Keywords:
-------------------------+--------------------------
 The following command (through pygeos) results in a segmentation fault:

 >>> pygeos.set_precision(pygeos.Geometry("LINEARRING (0 0, 0.1 0, 0.1 0.1,
 0 0.1, 0 0)"), 1.0, flags="make_valid")

 It is just the linearrings, linestrings and polygons with the same
 coordinates give correct results (empty geometries).

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1135>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 22 05:04:03 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 22 Oct 2021 12:04:03 -0000
Subject: [geos-devel] [GEOS] #1135: setPrecision crashes when collapsing
 linearring
In-Reply-To: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
References: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
Message-ID: <062.a12ac9484faa7dd555d5b6e0f4a2be02@osgeo.org>

#1135: setPrecision crashes when collapsing linearring
-------------------------+---------------------------
 Reporter:  caspervdw    |       Owner:  geos-devel@?
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.10.1
Component:  Default      |     Version:  main
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by caspervdw):

 The same geometry with KEEP_COLLAPSED gives the surprising result
 LINESTRING (0 0, 0 0, 0 0)

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1135#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Tue Oct 26 07:39:31 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Tue, 26 Oct 2021 07:39:31 -0700
Subject: [geos-devel] NEWS.md
Message-ID: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>

Anyone have a strong objection to this?

https://github.com/libgeos/geos/pull/491

Ordinarily I'd probably just accept, but .md seems like one of those things that sometimes stirs deep feelings.

P

From lr at pcorp.us  Tue Oct 26 07:41:33 2021
From: lr at pcorp.us (Regina Obe)
Date: Tue, 26 Oct 2021 10:41:33 -0400
Subject: [geos-devel] NEWS.md
In-Reply-To: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>
References: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>
Message-ID: <000701d7ca77$92cc23d0$b8646b70$@pcorp.us>

I'm fine with it.

> -----Original Message-----
> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Tuesday, October 26, 2021 10:40 AM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] NEWS.md
> 
> Anyone have a strong objection to this?
> 
> https://github.com/libgeos/geos/pull/491
> 
> Ordinarily I'd probably just accept, but .md seems like one of those
things that
> sometimes stirs deep feelings.
> 
> P
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From sebastic at xs4all.nl  Tue Oct 26 07:57:01 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Tue, 26 Oct 2021 16:57:01 +0200
Subject: [geos-devel] NEWS.md
In-Reply-To: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>
References: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>
Message-ID: <8ba1208f-15e4-6efd-0109-46b57eac1e47@xs4all.nl>

On 10/26/21 16:39, Paul Ramsey wrote:
> Anyone have a strong objection to this?
> 
> https://github.com/libgeos/geos/pull/491
> 
> Ordinarily I'd probably just accept, but .md seems like one of those things that sometimes stirs deep feelings.

The current form of the PR doesn't really make use of the Markdown 
syntax, changing only the headers.

That's not sufficient gains to warrant switching from a plain text file 
that conforms to the well known GNU conventions.

  https://www.gnu.org/prep/standards/html_node/NEWS-File.html

Kind Regards,

Bas

-- 
  GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From n_larsson at yahoo.com  Tue Oct 26 12:24:50 2021
From: n_larsson at yahoo.com (Nicklas Larsson)
Date: Tue, 26 Oct 2021 19:24:50 +0000 (UTC)
Subject: [geos-devel] NEWS.md
In-Reply-To: <8ba1208f-15e4-6efd-0109-46b57eac1e47@xs4all.nl>
References: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>
 <8ba1208f-15e4-6efd-0109-46b57eac1e47@xs4all.nl>
Message-ID: <378234464.705642.1635276290681@mail.yahoo.com>

>?
> On Tuesday, 26 October 2021, 16:57:09 CEST, Sebastiaan Couwenberg <sebastic at xs4all.nl> wrote: 
> 
> 
> On 10/26/21 16:39, Paul Ramsey wrote:
>> Anyone have a strong objection to this?
>>
>> https://github.com/libgeos/geos/pull/491
>>
>> Ordinarily I'd probably just accept, but .md seems like one of those things that sometimes stirs deep feelings.
> The current form of the PR doesn't really make use of the Markdown 
> syntax, changing only the headers.

I'd say the current format already does use Markdown syntax, with unnumbered lists.
See the difference:?


https://github.com/libgeos/geos/blob/07bb0d80001f4cd7548e40dee4be62b32cd43b7e/NEWS.md

vs.

https://raw.githubusercontent.com/libgeos/geos/07bb0d80001f4cd7548e40dee4be62b32cd43b7e/NEWS.md

The addition of .md makes the difference.


Best, Nicklas

From strk at kbt.io  Tue Oct 26 14:37:08 2021
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 26 Oct 2021 23:37:08 +0200
Subject: [geos-devel] NEWS.md
In-Reply-To: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>
References: <8DCAA76D-7727-4E2C-88A7-1C7586F61C0F@cleverelephant.ca>
Message-ID: <20211026213708.GA2890@c19>

On Tue, Oct 26, 2021 at 07:39:31AM -0700, Paul Ramsey wrote:
> Anyone have a strong objection to this?
> 
> https://github.com/libgeos/geos/pull/491
> 
> Ordinarily I'd probably just accept, but .md seems like one of those things that sometimes stirs deep feelings.

Sounds good to me.
As long as it keeps being readable with a simple pager
(we kind of deteriorated this possibility with those huge
CI badges in README.md)

--strk;

From pramsey at cleverelephant.ca  Fri Oct 29 12:13:19 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 29 Oct 2021 12:13:19 -0700
Subject: [geos-devel] GEOS RFC 10 - Move Project to GitHub
Message-ID: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>

http://libgeos.org/development/rfcs/rfc10/

GitHub has been the largest source of 3rd party code contribution via pull-requests for some time now.

Moving to Github has the following components:

	? Move the canonical (writeable) repository to GitHub
	? Migrate the (current, useful) contents of the Trac wiki to the new web framework
	? Deleting the migrated and out-of-date contents of the Trac wiki
	? Switching the Trac tickets to read-only
	? Web scraping the Trac ticket contents and placing in a geos-old-tickets repo
At that point:

	? New code is pushed to GitHub
	? New issues are filed at GitHub
	? New documentation is committed to the repository
This should unlock:

	? Easier path for new contributors to discover and assist with the project
	? Easier collaboration with downstream projects
	? Far easier story on ?how to we manage the project? and ?where the important things happen?
	? Far less dependence on individual contributors for infrastructure work that only they can do



From lr at pcorp.us  Fri Oct 29 13:13:25 2021
From: lr at pcorp.us (Regina Obe)
Date: Fri, 29 Oct 2021 16:13:25 -0400
Subject: [geos-devel] GEOS RFC 10 - Move Project to GitHub
In-Reply-To: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>
References: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>
Message-ID: <003301d7cd01$6ec69b50$4c53d1f0$@pcorp.us>

> From: geos-devel [mailto:geos-devel-bounces at lists.osgeo.org] On Behalf Of
> Paul Ramsey
> Sent: Friday, October 29, 2021 3:13 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] GEOS RFC 10 - Move Project to GitHub
> 
> http://libgeos.org/development/rfcs/rfc10/
> 
> GitHub has been the largest source of 3rd party code contribution via pull-
> requests for some time now.
> 
> Moving to Github has the following components:
> 
> 	  Move the canonical (writeable) repository to GitHub
> 	  Migrate the (current, useful) contents of the Trac wiki to the new
> web framework
> 	  Deleting the migrated and out-of-date contents of the Trac wiki
> 	  Switching the Trac tickets to read-only
> 	  Web scraping the Trac ticket contents and placing in a geos-old-
> tickets repo At that point:
> 
> 	  New code is pushed to GitHub
> 	  New issues are filed at GitHub
> 	  New documentation is committed to the repository This should
> unlock:
> 
> 	  Easier path for new contributors to discover and assist with the
> project
> 	  Easier collaboration with downstream projects
> 	  Far easier story on  how to we manage the project  and  where the
> important things happen
> 	  Far less dependence on individual contributors for infrastructure
> work that only they can do
> 
[Regina Obe] 

-0


From howard at hobu.co  Fri Oct 29 13:20:31 2021
From: howard at hobu.co (Howard Butler)
Date: Fri, 29 Oct 2021 15:20:31 -0500
Subject: [geos-devel] GEOS RFC 10 - Move Project to GitHub
In-Reply-To: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>
References: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>
Message-ID: <809B0E46-ACBC-46C7-98BA-7AEDB11FC72E@hobu.co>



> On Oct 29, 2021, at 2:13 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> http://libgeos.org/development/rfcs/rfc10/
> 
> GitHub has been the largest source of 3rd party code contribution via pull-requests for some time now.
> 
> Moving to Github has the following components:
> 
> 	? Move the canonical (writeable) repository to GitHub
> 	? Migrate the (current, useful) contents of the Trac wiki to the new web framework
> 	? Deleting the migrated and out-of-date contents of the Trac wiki
> 	? Switching the Trac tickets to read-only
> 	? Web scraping the Trac ticket contents and placing in a geos-old-tickets repo
> At that point:
> 
> 	? New code is pushed to GitHub
> 	? New issues are filed at GitHub
> 	? New documentation is committed to the repository
> This should unlock:
> 
> 	? Easier path for new contributors to discover and assist with the project
> 	? Easier collaboration with downstream projects
> 	? Far easier story on ?how to we manage the project? and ?where the important things happen?
> 	? Far less dependence on individual contributors for infrastructure work that only they can do

If we're skipping the discussion and going right to the PSC voting, I enthusiastically vote +1.

Howard


From geos-trac at osgeo.org  Fri Oct 29 14:44:00 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 29 Oct 2021 21:44:00 -0000
Subject: [geos-devel] [GEOS] #1135: setPrecision crashes when collapsing
 linearring
In-Reply-To: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
References: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
Message-ID: <062.58a4909d9add09932c776f95fdb666ba@osgeo.org>

#1135: setPrecision crashes when collapsing linearring
-------------------------+---------------------------
 Reporter:  caspervdw    |       Owner:  geos-devel@?
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.10.1
Component:  Default      |     Version:  main
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by Paul Ramsey <pramsey@?>):

 In [changeset:"5e44ec3f6d46693a95465e230726220938752a0d/git" 5e44ec3/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="5e44ec3f6d46693a95465e230726220938752a0d"
 Check for empty Sequence when collapsing linear ring. References #1135
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1135#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 29 14:45:51 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 29 Oct 2021 21:45:51 -0000
Subject: [geos-devel] [GEOS] #1135: setPrecision crashes when collapsing
 linearring
In-Reply-To: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
References: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
Message-ID: <062.879df67d437eb737fc993997c4e42928@osgeo.org>

#1135: setPrecision crashes when collapsing linearring
-------------------------+---------------------------
 Reporter:  caspervdw    |       Owner:  geos-devel@?
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.10.1
Component:  Default      |     Version:  main
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by Paul Ramsey <pramsey@?>):

 In [changeset:"14f0a696b8d7a1c26a32d3fd79e5da5e4b66c219/git" 14f0a69/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="14f0a696b8d7a1c26a32d3fd79e5da5e4b66c219"
 Check for empty Sequence when collapsing linear ring. References #1135
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1135#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 29 14:57:27 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 29 Oct 2021 21:57:27 -0000
Subject: [geos-devel] [GEOS] #1135: setPrecision crashes when collapsing
 linearring
In-Reply-To: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
References: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
Message-ID: <062.9b31b247a8ead10a411701bd4e9c3c04@osgeo.org>

#1135: setPrecision crashes when collapsing linearring
-------------------------+---------------------------
 Reporter:  caspervdw    |       Owner:  geos-devel@?
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.10.1
Component:  Default      |     Version:  main
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+---------------------------

Comment (by Paul Ramsey <pramsey@?>):

 In [changeset:"b14c2287a1b0e0242de0308bf60f8c03f2bca0e6/git" b14c228/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="b14c2287a1b0e0242de0308bf60f8c03f2bca0e6"
 Fix crasher reducing LinearRing precision, references #1135
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1135#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Oct 29 15:06:21 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 29 Oct 2021 22:06:21 -0000
Subject: [geos-devel] [GEOS] #1135: setPrecision crashes when collapsing
 linearring
In-Reply-To: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
References: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
Message-ID: <062.bc2a34c3258bdd73cc0964963d9375c1@osgeo.org>

#1135: setPrecision crashes when collapsing linearring
-------------------------+---------------------------
 Reporter:  caspervdw    |       Owner:  geos-devel@?
     Type:  defect       |      Status:  closed
 Priority:  major        |   Milestone:  3.10.1
Component:  Default      |     Version:  main
 Severity:  Significant  |  Resolution:  fixed
 Keywords:               |
-------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 Yep, the algorithm feels that a valid linestring is "better" than a
 collapsed zero-area (self-intersecting) ring. Angels dance.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1135#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Fri Oct 29 18:43:03 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 29 Oct 2021 18:43:03 -0700
Subject: [geos-devel] 3.9.2 Release?
Message-ID: <21878900-93C8-41F2-AE81-546F99CB1308@cleverelephant.ca>

I call for approval of a 3.9.2 release! (rah!)
The list of fixes is pretty chunky at this point and it's been a while.

+1 from me


----

- Bug fixes / improvements:
  - Add in interrupt points in OverlayNG (#4857, Paul Ramsey)
  - Fix crash in GEOSPreparedIntersects and GEOSPreparedContains for
    POINT EMPTY input (Even Rouault)
  - Fix IsValidOp to correctly report invalid nested MultiPolygons (#1112, Martin Davis)
  - Fix BufferOp to avoid artifacts in certain polygon buffers (#1101, Martin Davis)
  - Declare parameterless functions in geos_c.h as func(void) (Paul Ramsey)
  - Performance improvement in SegmentNodeList (Even Rouault)
  - Catch memory leaks on createPolygon failure (#1111, Paul Ramsey)
  - Fix DiscreteFrechetDistance to use initial points of input lines (#1128, Martin Davis)
  - Avoid stack overflow in KdTree::queryNode (Even Roualt)
  - Avoid raising double overflow signals in distance calcs (Paul Ramsey)
  - Fix performance issue in buffer building (Paul Ramsey)
  - Fix crash when precision reducing LinearRing (#1135, Paul Ramsey)


From lr at pcorp.us  Fri Oct 29 22:49:05 2021
From: lr at pcorp.us (Regina Obe)
Date: Sat, 30 Oct 2021 01:49:05 -0400
Subject: [geos-devel] 3.9.2 Release?
In-Reply-To: <21878900-93C8-41F2-AE81-546F99CB1308@cleverelephant.ca>
References: <21878900-93C8-41F2-AE81-546F99CB1308@cleverelephant.ca>
Message-ID: <000001d7cd51$da38a770$8ea9f650$@pcorp.us>

> Paul Ramsey
> Sent: Friday, October 29, 2021 9:43 PM
> To: GEOS Development List <geos-devel at lists.osgeo.org>
> Subject: [geos-devel] 3.9.2 Release?
> 
> I call for approval of a 3.9.2 release! (rah!) The list of fixes is pretty
chunky at
> this point and it's been a while.
> 
> +1 from me
> 
> 
[Regina Obe]  +1


From Roger.Bivand at nhh.no  Sat Oct 30 05:18:34 2021
From: Roger.Bivand at nhh.no (Roger Bivand)
Date: Sat, 30 Oct 2021 12:18:34 +0000
Subject: [geos-devel] Checking build on Solaris: patch for sqrt(2)
Message-ID: <SV0P279MB04755A6389831FDE97325BB4EE889@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>

The R archive network checks R packages and their upstream libraries on Intel Solaris (details https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86), so a build of 3.10.0 has been tried.  -DBUILD_GEOSOP=OFF was needed but is unimportant, however, sqrt(2) in geos-3.10.0/tests/unit/capi/GEOSDistanceTest.cpp:137:28 gives:

error: call of overloaded ?sqrt(int)? is ambiguous

Suggested fixes are: std::sqrt(2) or sqrt(2.), or M_SQRT2.

Thiis is a bit small for a PR, but makes sense to fix, and comes from using a different build train.

Roger

From geos-trac at osgeo.org  Sat Oct 30 05:55:40 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 12:55:40 -0000
Subject: [geos-devel] [GEOS] #1138: Crash on invalid GeoJSON input
Message-ID: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>

#1138: Crash on invalid GeoJSON input
------------------------+--------------------------
 Reporter:  caspervdw   |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.10.1
Component:  Default     |    Version:  main
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 I have been wrapping the new GeoJSON reader and writer in pygeos and
 encountered a few issues.

 One issue is that GEOS crashes (aborts) on invalid geojson input ?{?no?:
 ?GeoJSON?}?.
 It seems that all places where a field is expected by the reader (e.g.
 ?type?) the exception handling is not OK.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1138>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 05:57:49 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 12:57:49 -0000
Subject: [geos-devel] [GEOS] #1139: GeoJSON writer crashes on empty points
Message-ID: <047.5e853985af8a26825d246007299efb78@osgeo.org>

#1139: GeoJSON writer crashes on empty points
------------------------+--------------------------
 Reporter:  caspervdw   |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.10.1
Component:  Default     |    Version:  main
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 When writing an empty point (or a collection containing one), the GeoJSON
 writer crashes.

 Yes, empty points. Again.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1139>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 06:01:11 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 13:01:11 -0000
Subject: [geos-devel] [GEOS] #1140: GeoJSON writer is unable to handle
 linear rings
Message-ID: <047.8b5853095352efb510e2544cd4174df1@osgeo.org>

#1140: GeoJSON writer is unable to handle linear rings
------------------------+--------------------------
 Reporter:  caspervdw   |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  minor       |  Milestone:  3.10.1
Component:  Default     |    Version:  3.9.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 Linearrings are currently serialised to ?null? which is a bit unexpected.
 Indeed, a linearring is not in the GeoJSON spec.

 I suggest converting to LineString instead. This is also done in the WKB
 writer.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1140>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 06:03:41 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 13:03:41 -0000
Subject: [geos-devel] [GEOS] #1139: GeoJSON writer crashes on empty
 points
In-Reply-To: <047.5e853985af8a26825d246007299efb78@osgeo.org>
References: <047.5e853985af8a26825d246007299efb78@osgeo.org>
Message-ID: <062.3148791d5f6ef7db6a9cbc7fe88f29b0@osgeo.org>

#1139: GeoJSON writer crashes on empty points
------------------------+---------------------------
 Reporter:  caspervdw   |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.10.1
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by caspervdw):

 Related ticket in GDAL:
 https://trac.osgeo.org/gdal/ticket/6349

 GDAL writes ?null? for empty points. Not sure what they do in collections.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1139#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 06:04:33 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 13:04:33 -0000
Subject: [geos-devel] [GEOS] #1135: setPrecision crashes when collapsing
 linearring
In-Reply-To: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
References: <047.c5bec08204db6a48d1a81ebdd3738aa7@osgeo.org>
Message-ID: <062.7ca1fab0898750f9922c8c0065e24ed4@osgeo.org>

#1135: setPrecision crashes when collapsing linearring
-------------------------+---------------------------
 Reporter:  caspervdw    |       Owner:  geos-devel@?
     Type:  defect       |      Status:  closed
 Priority:  major        |   Milestone:  3.10.1
Component:  Default      |     Version:  main
 Severity:  Significant  |  Resolution:  fixed
 Keywords:               |
-------------------------+---------------------------

Comment (by caspervdw):

 Thanks for the fix!

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1135#comment:6>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 06:06:45 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 13:06:45 -0000
Subject: [geos-devel] [GEOS] #1141: Support 3D in GeoJSON reader/writer
Message-ID: <047.36d0bd463acaa69c91c8faa0c341555b@osgeo.org>

#1141: Support 3D in GeoJSON reader/writer
-------------------------+--------------------------
 Reporter:  caspervdw    |      Owner:  geos-devel@?
     Type:  enhancement  |     Status:  new
 Priority:  minor        |  Milestone:  3.11.0
Component:  Default      |    Version:  main
 Severity:  Unassigned   |   Keywords:
-------------------------+--------------------------
 Currently, the 3rd dimension is ignored in both reading from and writing
 to GeoJSON.

 It would be great if reading/writing Z coordinates would be supported.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1141>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 08:13:06 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 15:13:06 -0000
Subject: [geos-devel] [GEOS] #1138: Crash on invalid GeoJSON input
In-Reply-To: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
References: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
Message-ID: <062.6afd9b04a9b70fec6909b1fe6e50e81c@osgeo.org>

#1138: Crash on invalid GeoJSON input
------------------------+---------------------------
 Reporter:  caspervdw   |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.10.1
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by caspervdw):

 This issue is not reproducible on a CI runner (see
 https://github.com/pygeos/pygeos/pull/413)

 I will investigate what is going wrong on my local build.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1138#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at gmail.com  Sat Oct 30 09:30:28 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Sat, 30 Oct 2021 09:30:28 -0700
Subject: [geos-devel] 3.9.2 Release?
In-Reply-To: <21878900-93C8-41F2-AE81-546F99CB1308@cleverelephant.ca>
References: <21878900-93C8-41F2-AE81-546F99CB1308@cleverelephant.ca>
Message-ID: <CAK2ens3yAT4a-QdUFFLB0mxJe3ctuG8cJqLyLOUu3d6iMRNQwg@mail.gmail.com>

One thing that could go in is the SnappingNoder KdTree seeding:
https://git.osgeo.org/gitea/geos/geos/commit/c693615c05bb473a4640c95e0203b8e0a81a2134

+1 otherwise.

On Fri, Oct 29, 2021 at 6:43 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> I call for approval of a 3.9.2 release! (rah!)
> The list of fixes is pretty chunky at this point and it's been a while.
>
> +1 from me
>
>
> ----
>
> - Bug fixes / improvements:
>   - Add in interrupt points in OverlayNG (#4857, Paul Ramsey)
>   - Fix crash in GEOSPreparedIntersects and GEOSPreparedContains for
>     POINT EMPTY input (Even Rouault)
>   - Fix IsValidOp to correctly report invalid nested MultiPolygons (#1112,
> Martin Davis)
>   - Fix BufferOp to avoid artifacts in certain polygon buffers (#1101,
> Martin Davis)
>   - Declare parameterless functions in geos_c.h as func(void) (Paul Ramsey)
>   - Performance improvement in SegmentNodeList (Even Rouault)
>   - Catch memory leaks on createPolygon failure (#1111, Paul Ramsey)
>   - Fix DiscreteFrechetDistance to use initial points of input lines
> (#1128, Martin Davis)
>   - Avoid stack overflow in KdTree::queryNode (Even Roualt)
>   - Avoid raising double overflow signals in distance calcs (Paul Ramsey)
>   - Fix performance issue in buffer building (Paul Ramsey)
>   - Fix crash when precision reducing LinearRing (#1135, Paul Ramsey)
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20211030/edc4023a/attachment.html>

From geos-trac at osgeo.org  Sat Oct 30 11:34:06 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 18:34:06 -0000
Subject: [geos-devel] [GEOS] #1138: Crash on invalid GeoJSON input
In-Reply-To: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
References: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
Message-ID: <062.2e77acb508d6cfcf357a535040c34f79@osgeo.org>

#1138: Crash on invalid GeoJSON input
------------------------+---------------------------
 Reporter:  caspervdw   |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.10.1
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by caspervdw):

 So the crash only occurs when GEOS is built with
 "-DCMAKE_BUILD_TYPE=Debug".

 When using -DCMAKE_BUILD_TYPE=Release, the issue goes away.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1138#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 11:34:27 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 18:34:27 -0000
Subject: [geos-devel] [GEOS] #1138: Crash on invalid GeoJSON input (GEOS
 compiled in Debug mode) (was: Crash on invalid GeoJSON input)
In-Reply-To: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
References: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
Message-ID: <062.2a3881e8c2b9f36f74abbc6b28425e0f@osgeo.org>

#1138: Crash on invalid GeoJSON input (GEOS compiled in Debug mode)
-----------------------+---------------------------
 Reporter:  caspervdw  |       Owner:  geos-devel@?
     Type:  defect     |      Status:  new
 Priority:  major      |   Milestone:  3.10.1
Component:  Default    |     Version:  main
 Severity:  Annoyance  |  Resolution:
 Keywords:             |
-----------------------+---------------------------
Changes (by caspervdw):

 * severity:  Unassigned => Annoyance


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1138#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 11:51:46 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 18:51:46 -0000
Subject: [geos-devel] [GEOS] #1142: GeoJSON reader cannot read null
 coordinates
Message-ID: <047.b3c0cdea487de7df4cc664c867293d4a@osgeo.org>

#1142: GeoJSON reader cannot read null coordinates
-----------------------+--------------------------
 Reporter:  caspervdw  |      Owner:  geos-devel@?
     Type:  defect     |     Status:  new
 Priority:  minor      |  Milestone:  3.11.0
Component:  Default    |    Version:  main
 Severity:  Annoyance  |   Keywords:
-----------------------+--------------------------
 The GeoJSON writer writes NaN coordinates to null.

 {{{
 >>> pygeos.to_geojson(pygeos.Geometry("LINESTRING (1 nan, 2 2)"))
 '{"type":"LineString","coordinates":[[1.0,null],[2.0,2.0]]}'
 }}}

 The inverse operation however does not work:

 {{{
 >>>
 pygeos.from_geojson('{"type":"LineString","coordinates":[[1.0,null],[2.0,2.0]]}')
 GEOSException: ParseException: Error parsing JSON:
 '[json.exception.type_error.302] type must be number, but is null'
 }}}

 There is a lot to say about allowing nan coordinates at all, but as they
 are allowed now and the writer handles them properly, I would expect the
 reader handles them as well.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1142>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 13:09:13 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 20:09:13 -0000
Subject: [geos-devel] [GEOS] #1142: GeoJSON reader cannot read null
 coordinates
In-Reply-To: <047.b3c0cdea487de7df4cc664c867293d4a@osgeo.org>
References: <047.b3c0cdea487de7df4cc664c867293d4a@osgeo.org>
Message-ID: <062.81c49c4fa620c56a6fb590f0a3e58180@osgeo.org>

#1142: GeoJSON reader cannot read null coordinates
-----------------------+---------------------------
 Reporter:  caspervdw  |       Owner:  geos-devel@?
     Type:  defect     |      Status:  new
 Priority:  minor      |   Milestone:  3.11.0
Component:  Default    |     Version:  main
 Severity:  Annoyance  |  Resolution:
 Keywords:             |
-----------------------+---------------------------

Comment (by rouault):

 The issue is not on the reader, but on the writer. A null member in the
 coordinate array is illegal.
 https://datatracker.ietf.org/doc/html/rfc7946#section-3.1.1 : "A position
 is an array of numbers"

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1142#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Sat Oct 30 13:47:11 2021
From: geos-trac at osgeo.org (GEOS)
Date: Sat, 30 Oct 2021 20:47:11 -0000
Subject: [geos-devel] [GEOS] #1138: Crash on invalid GeoJSON input (GEOS
 compiled in Debug mode)
In-Reply-To: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
References: <047.095a1e45f042cddf07332f0916b6c933@osgeo.org>
Message-ID: <062.1c4761731c545515303819c85ec47848@osgeo.org>

#1138: Crash on invalid GeoJSON input (GEOS compiled in Debug mode)
-------------------------+----------------------
 Reporter:  caspervdw    |       Owner:  rouault
     Type:  defect       |      Status:  new
 Priority:  major        |   Milestone:  3.10.1
Component:  Default      |     Version:  main
 Severity:  Significant  |  Resolution:
 Keywords:               |
-------------------------+----------------------
Changes (by rouault):

 * owner:  geos-devel@? => rouault
 * severity:  Annoyance => Significant


Comment:

 Fix in https://github.com/libgeos/geos/pull/498

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1138#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Sat Oct 30 14:18:07 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 30 Oct 2021 14:18:07 -0700
Subject: [geos-devel] 3.9.2 Release?
In-Reply-To: <CAK2ens3yAT4a-QdUFFLB0mxJe3ctuG8cJqLyLOUu3d6iMRNQwg@mail.gmail.com>
References: <21878900-93C8-41F2-AE81-546F99CB1308@cleverelephant.ca>
 <CAK2ens3yAT4a-QdUFFLB0mxJe3ctuG8cJqLyLOUu3d6iMRNQwg@mail.gmail.com>
Message-ID: <01F31491-8DCB-428B-90AC-D3392D921BAA@cleverelephant.ca>

New stuff will have to wait until 3.9.3, this is about releasing what's there.
P

> On Oct 30, 2021, at 9:30 AM, Martin Davis <mtnclimb at gmail.com> wrote:
> 
> One thing that could go in is the SnappingNoder KdTree seeding:  https://git.osgeo.org/gitea/geos/geos/commit/c693615c05bb473a4640c95e0203b8e0a81a2134
> 
> +1 otherwise.
> 
> On Fri, Oct 29, 2021 at 6:43 PM Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> I call for approval of a 3.9.2 release! (rah!)
> The list of fixes is pretty chunky at this point and it's been a while.
> 
> +1 from me
> 
> 
> ----
> 
> - Bug fixes / improvements:
>   - Add in interrupt points in OverlayNG (#4857, Paul Ramsey)
>   - Fix crash in GEOSPreparedIntersects and GEOSPreparedContains for
>     POINT EMPTY input (Even Rouault)
>   - Fix IsValidOp to correctly report invalid nested MultiPolygons (#1112, Martin Davis)
>   - Fix BufferOp to avoid artifacts in certain polygon buffers (#1101, Martin Davis)
>   - Declare parameterless functions in geos_c.h as func(void) (Paul Ramsey)
>   - Performance improvement in SegmentNodeList (Even Rouault)
>   - Catch memory leaks on createPolygon failure (#1111, Paul Ramsey)
>   - Fix DiscreteFrechetDistance to use initial points of input lines (#1128, Martin Davis)
>   - Avoid stack overflow in KdTree::queryNode (Even Roualt)
>   - Avoid raising double overflow signals in distance calcs (Paul Ramsey)
>   - Fix performance issue in buffer building (Paul Ramsey)
>   - Fix crash when precision reducing LinearRing (#1135, Paul Ramsey)
> 
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From even.rouault at spatialys.com  Sat Oct 30 14:37:59 2021
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 30 Oct 2021 23:37:59 +0200
Subject: [geos-devel] GEOS RFC 10 - Move Project to GitHub
In-Reply-To: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>
References: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>
Message-ID: <419616b1-138a-5305-605e-f362b29a7a56@spatialys.com>

Hi,

as an occasional contributor, I'm fully supportive.

What is the intent of the "Web scraping the Trac ticket contents and 
placing in a geos-old-tickets repo" ? (I assume you mean a github repo). 
To have a "backup" of the Trac content that is easily browsable by 
non-Trac users ? That repository would be read-only ?

FWIW, what we did in GDAL is to *not* port existing Trac tickets, just 
disable creation of new Trac tickets, but authenticated users can still 
modify / close existing ones.

Even

Le 29/10/2021 ? 21:13, Paul Ramsey a ?crit?:
> http://libgeos.org/development/rfcs/rfc10/
>
> GitHub has been the largest source of 3rd party code contribution via pull-requests for some time now.
>
> Moving to Github has the following components:
>
> 	? Move the canonical (writeable) repository to GitHub
> 	? Migrate the (current, useful) contents of the Trac wiki to the new web framework
> 	? Deleting the migrated and out-of-date contents of the Trac wiki
> 	? Switching the Trac tickets to read-only
> 	? Web scraping the Trac ticket contents and placing in a geos-old-tickets repo
> At that point:
>
> 	? New code is pushed to GitHub
> 	? New issues are filed at GitHub
> 	? New documentation is committed to the repository
> This should unlock:
>
> 	? Easier path for new contributors to discover and assist with the project
> 	? Easier collaboration with downstream projects
> 	? Far easier story on ?how to we manage the project? and ?where the important things happen?
> 	? Far less dependence on individual contributors for infrastructure work that only they can do
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From pramsey at cleverelephant.ca  Sat Oct 30 14:42:40 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 30 Oct 2021 14:42:40 -0700
Subject: [geos-devel] GEOS RFC 10 - Move Project to GitHub
In-Reply-To: <419616b1-138a-5305-605e-f362b29a7a56@spatialys.com>
References: <30B1DCA2-2072-425B-84DF-B381AF5F7CE4@cleverelephant.ca>
 <419616b1-138a-5305-605e-f362b29a7a56@spatialys.com>
Message-ID: <9624A093-53DC-4341-A599-FBA1302EEC8B@cleverelephant.ca>



> On Oct 30, 2021, at 2:37 PM, Even Rouault <even.rouault at spatialys.com> wrote:
> 
> as an occasional contributor, I'm fully supportive.
> 
> What is the intent of the "Web scraping the Trac ticket contents and placing in a geos-old-tickets repo" ? (I assume you mean a github repo). To have a "backup" of the Trac content that is easily browsable by non-Trac users ? That repository would be read-only ?

Yes, the idea is to have a back-up of the trac content that is not dependent on trac, so that the whole trac.osgeo.org/geos infra can be turned off eventually and traffic to trac.osgeo.org/geos/ticket/XXXX handled with a simple redirect.

> FWIW, what we did in GDAL is to *not* port existing Trac tickets, just disable creation of new Trac tickets, but authenticated users can still modify / close existing ones.

That is the same as what I'm proposing. No more new trac tickets. No copying of trac tickets into GH. Anything that is live-and-important can be re-opened as a GH issue. Anything that is not will become history over time. Save history for posterity by taking the HTML snapshot.

P.

> 
> Even
> 
> Le 29/10/2021 ? 21:13, Paul Ramsey a ?crit :
>> http://libgeos.org/development/rfcs/rfc10/
>> 
>> GitHub has been the largest source of 3rd party code contribution via pull-requests for some time now.
>> 
>> Moving to Github has the following components:
>> 
>> 	? Move the canonical (writeable) repository to GitHub
>> 	? Migrate the (current, useful) contents of the Trac wiki to the new web framework
>> 	? Deleting the migrated and out-of-date contents of the Trac wiki
>> 	? Switching the Trac tickets to read-only
>> 	? Web scraping the Trac ticket contents and placing in a geos-old-tickets repo
>> At that point:
>> 
>> 	? New code is pushed to GitHub
>> 	? New issues are filed at GitHub
>> 	? New documentation is committed to the repository
>> This should unlock:
>> 
>> 	? Easier path for new contributors to discover and assist with the project
>> 	? Easier collaboration with downstream projects
>> 	? Far easier story on ?how to we manage the project? and ?where the important things happen?
>> 	? Far less dependence on individual contributors for infrastructure work that only they can do
>> 
>> 
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> 


From pramsey at cleverelephant.ca  Sat Oct 30 15:03:00 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Sat, 30 Oct 2021 15:03:00 -0700
Subject: [geos-devel] Checking build on Solaris: patch for sqrt(2)
In-Reply-To: <SV0P279MB04755A6389831FDE97325BB4EE889@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
References: <SV0P279MB04755A6389831FDE97325BB4EE889@SV0P279MB0475.NORP279.PROD.OUTLOOK.COM>
Message-ID: <04E3790E-B0F6-4D06-8910-6F9D161D2EFB@cleverelephant.ca>

I've pushed a patch to use std::sqrt into main and 3.10.
P

> On Oct 30, 2021, at 5:18 AM, Roger Bivand <Roger.Bivand at nhh.no> wrote:
> 
> The R archive network checks R packages and their upstream libraries on Intel Solaris (details https://www.stats.ox.ac.uk/pub/bdr/Rconfig/r-patched-solaris-x86), so a build of 3.10.0 has been tried.  -DBUILD_GEOSOP=OFF was needed but is unimportant, however, sqrt(2) in geos-3.10.0/tests/unit/capi/GEOSDistanceTest.cpp:137:28 gives:
> 
> error: call of overloaded ?sqrt(int)? is ambiguous
> 
> Suggested fixes are: std::sqrt(2) or sqrt(2.), or M_SQRT2.
> 
> Thiis is a bit small for a PR, but makes sense to fix, and comes from using a different build train.
> 
> Roger
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From geos-trac at osgeo.org  Sun Oct 31 19:00:02 2021
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Nov 2021 02:00:02 -0000
Subject: [geos-devel] [GEOS] #1143: Release distribution contains generated
 files with "dev" in version
Message-ID: <045.c61e10d5b8ba9f290e40daf27b72fcfd@osgeo.org>

#1143: Release distribution contains generated files with "dev" in version
------------------------+--------------------------
 Reporter:  Mike Taves  |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.10.1
Component:  Default     |    Version:  main
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 A few surprises with the latest geos-3.10 release from
 http://download.osgeo.org/geos/geos-3.10.0.tar.bz2
  - It contains generated files that shouldn't be distributed, e.g.
 `cmake_install.cmake`, `include/geos/version.h`, `tools/geos-config`,
 `tools/geos.pc`, and empty `bin`, and a fun script `bisect_script.sh`
 (full diff later)
  - The generated files in this release still have "dev" as part of the
 version
 - From the release build, the first line from the command `geosop` shows
 "GEOS 3.10.0dev" and not "GEOS 3.10.0"

 I suspect the reason is that `make dist` was done in a git repository with
 these generated files.

 The first "fix" is to expand `CPACK_SOURCE_IGNORE_FILES` (also with
 `set(CPACK_VERBATIM_VARIABLES TRUE)`, e.g.
 [https://github.com/OSGeo/PROJ/blob/3e1cfd2164e5339cbb075c35d7eab4c55cae9bf0/CMakeLists.txt#L350-L377
 done with PROJ]. However, that doesn't guarantee that some other random
 file won't show up in the source distribution (e.g. `bisect_script.sh`).

 The safest way to run `make dist` is to do something like the following:
 {{{
 sdist_dir=$(mktemp -d)
 cd $sdist_dir
 git clone --depth 1 --branch 3.10
 https://git.osgeo.org/gitea/geos/geos.git
 cd geos
 # maybe edit Version.txt
 mkdir build
 cd geos
 cmake -G"Unix Makefiles" ..
 make dist
 }}}

 Another idea is to not use CMake for `make dist`. Use something like
 [https://git-scm.com/docs/git-archive git-archive].

 ----

 Here is the full diff of what I see in the release vs the source generated
 from the above steps in the 3.10 branch:
 {{{
 Only in geos-3.10.0: bin
 Only in geos-3.10.0: bisect_script.sh
 Only in geos-3.10.0: cmake_install.cmake
 Files geos-3.10.0/include/geos/io/WKBConstants.h and
 geos-3.10.1dev/include/geos/io/WKBConstants.h differ
 Files geos-3.10.0/include/geos/triangulate/quadedge/Vertex.h and
 geos-3.10.1dev/include/geos/triangulate/quadedge/Vertex.h differ
 Files geos-3.10.0/include/geos/util.h and
 geos-3.10.1dev/include/geos/util.h differ
 Only in geos-3.10.0/include/geos: version.h
 Only in geos-3.10.0: ltmain.sh
 Files geos-3.10.0/NEWS and geos-3.10.1dev/NEWS differ
 Files geos-3.10.0/README.md and geos-3.10.1dev/README.md differ
 Files geos-3.10.0/src/algorithm/Distance.cpp and
 geos-3.10.1dev/src/algorithm/Distance.cpp differ
 Files geos-3.10.0/src/algorithm/LineIntersector.cpp and
 geos-3.10.1dev/src/algorithm/LineIntersector.cpp differ
 Files geos-3.10.0/src/algorithm/MinimumBoundingCircle.cpp and
 geos-3.10.1dev/src/algorithm/MinimumBoundingCircle.cpp differ
 Files geos-3.10.0/src/geom/LineSegment.cpp and
 geos-3.10.1dev/src/geom/LineSegment.cpp differ
 Files geos-3.10.0/src/geom/util/Densifier.cpp and
 geos-3.10.1dev/src/geom/util/Densifier.cpp differ
 Files geos-3.10.0/src/geom/util/GeometryTransformer.cpp and
 geos-3.10.1dev/src/geom/util/GeometryTransformer.cpp differ
 Files geos-3.10.0/src/io/GeoJSONReader.cpp and
 geos-3.10.1dev/src/io/GeoJSONReader.cpp differ
 Files geos-3.10.0/src/triangulate/VoronoiDiagramBuilder.cpp and
 geos-3.10.1dev/src/triangulate/VoronoiDiagramBuilder.cpp differ
 Files geos-3.10.0/tests/unit/capi/GEOSDistanceTest.cpp and
 geos-3.10.1dev/tests/unit/capi/GEOSDistanceTest.cpp differ
 Files geos-3.10.0/tests/unit/capi/GEOSFrechetDistanceTest.cpp and
 geos-3.10.1dev/tests/unit/capi/GEOSFrechetDistanceTest.cpp differ
 Files geos-3.10.0/tests/unit/capi/GEOSGeom_setPrecisionTest.cpp and
 geos-3.10.1dev/tests/unit/capi/GEOSGeom_setPrecisionTest.cpp differ
 Files geos-3.10.0/tests/unit/capi/GEOSHausdorffDistanceTest.cpp and
 geos-3.10.1dev/tests/unit/capi/GEOSHausdorffDistanceTest.cpp differ
 Files geos-3.10.0/tests/unit/capi/GEOSSTRtreeTest.cpp and
 geos-3.10.1dev/tests/unit/capi/GEOSSTRtreeTest.cpp differ
 Files geos-3.10.0/tests/unit/io/GeoJSONReaderTest.cpp and
 geos-3.10.1dev/tests/unit/io/GeoJSONReaderTest.cpp differ
 Only in geos-3.10.0/tools: geos-config
 Only in geos-3.10.0/tools: geos.pc
 Files geos-3.10.0/Version.txt and geos-3.10.1dev/Version.txt differ
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1143>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

