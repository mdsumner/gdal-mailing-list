From geos-trac at osgeo.org  Wed Sep  8 12:16:20 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 08 Sep 2021 19:16:20 -0000
Subject: [geos-devel] [GEOS] #932: improve static-library build
In-Reply-To: <048.54c0bea610c1f1ac770541fb23e138e4@osgeo.org>
References: <048.54c0bea610c1f1ac770541fb23e138e4@osgeo.org>
Message-ID: <063.2df0ad8d96d49a50137a46f61f77a70e@osgeo.org>

#932: improve static-library build
------------------------+---------------------------
 Reporter:  basiliscos  |       Owner:  geos-devel@?
     Type:  patch       |      Status:  closed
 Priority:  major       |   Milestone:  3.10.0
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:  worksforme
 Keywords:              |
------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => worksforme


Comment:

 cmake has changed a lot since this ticket, and I find that `cmake
 -DBUILD_SHARED_LIBS=OFF` builds a `libgeos.a` just fine.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/932#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep  8 13:37:12 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 08 Sep 2021 20:37:12 -0000
Subject: [geos-devel] [GEOS] #1111: BUG: C API: ownership of passed-in
 geometry not always transferred prior to exception
In-Reply-To: <044.5e049575957049951e31fbf104afe7b2@osgeo.org>
References: <044.5e049575957049951e31fbf104afe7b2@osgeo.org>
Message-ID: <059.a5de4383e2e48e8ba7bec251c903b90e@osgeo.org>

#1111: BUG: C API: ownership of passed-in geometry not always transferred prior to
exception
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.9.0
 Severity:  Unassigned    |  Resolution:  fixed
 Keywords:                |
--------------------------+---------------------------
Changes (by Paul Ramsey <pramsey@?>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"6839f11f7cf27ed051a9900224e50a56a7d92f21/git" 6839f11/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="6839f11f7cf27ed051a9900224e50a56a7d92f21"
 Handle failure of createPolygon and clean up memory before throwing
 exception, closes #1111
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1111#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep  8 14:23:46 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 08 Sep 2021 21:23:46 -0000
Subject: [geos-devel] [GEOS] #1111: BUG: C API: ownership of passed-in
 geometry not always transferred prior to exception
In-Reply-To: <044.5e049575957049951e31fbf104afe7b2@osgeo.org>
References: <044.5e049575957049951e31fbf104afe7b2@osgeo.org>
Message-ID: <059.a4d38b6dd1f1f5bbd5dbfcc10a85f68a@osgeo.org>

#1111: BUG: C API: ownership of passed-in geometry not always transferred prior to
exception
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.9.0
 Severity:  Unassigned    |  Resolution:  fixed
 Keywords:                |
--------------------------+---------------------------

Comment (by Paul Ramsey <pramsey@?>):

 In [changeset:"3c7205e09413f62e1c940052c2cf376bfb36f080/git" 3c7205e/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="3c7205e09413f62e1c940052c2cf376bfb36f080"
 Guard against some null inputs, references #1111
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1111#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Sep  8 14:24:45 2021
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 08 Sep 2021 21:24:45 -0000
Subject: [geos-devel] [GEOS] #1111: BUG: C API: ownership of passed-in
 geometry not always transferred prior to exception
In-Reply-To: <044.5e049575957049951e31fbf104afe7b2@osgeo.org>
References: <044.5e049575957049951e31fbf104afe7b2@osgeo.org>
Message-ID: <059.d64e85ba5cf9aa914246cb75170194e9@osgeo.org>

#1111: BUG: C API: ownership of passed-in geometry not always transferred prior to
exception
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.9.0
 Severity:  Unassigned    |  Resolution:  fixed
 Keywords:                |
--------------------------+---------------------------

Comment (by Paul Ramsey <pramsey@?>):

 In [changeset:"2d9cfd05594fdacc53a818f353f90c55b7b3ab9a/git" 2d9cfd0/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="2d9cfd05594fdacc53a818f353f90c55b7b3ab9a"
 Guard against some null inputs, references #1111
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1111#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From lhm at st-andrews.ac.uk  Thu Sep  9 03:09:14 2021
From: lhm at st-andrews.ac.uk (Laura Marshall)
Date: Thu, 9 Sep 2021 10:09:14 +0000
Subject: [geos-devel] Strange intersection results in Windows
Message-ID: <AM6PR06MB5717DDDF4197C8B17804F5C2DDD49@AM6PR06MB5717.eurprd06.prod.outlook.com>

Dear list,

I use GEOS 3.9.0 via an R library (sf). I have been trying to find the intersection between groups of lines and a polygon / multipolygon.

I have realised that updating the packages on my machine has resulted in some strange intersection results on Windows machines (and only Windows - works on mac and ubuntu). The sf update which introduced the issue was also associated with a change in GEOS versions, upgrading from 3.8.0 to 3.9.0 and the suspicion is that it is something in GEOS rather than the sf R library.

I have searched the tickets but could not see any issues which seem to match what I am seeing.

I attach an image below of the results I am getting with the intersection between the lines and the polygon on my Windows machine. Red lines are the lines which were not considered part of the intersection and the thicker green lines are what was identified as the intersection between the grid of line segments and the polygon. It seems all lines that intersect the polygon boundary are correctly identified but only some lines that are entirely within the polygon boundary are included in the intersection.
[cid:9cf2cef6-266a-43ce-87d5-091c21f4b907]
I had initially reported this as an issue in sf and there are more examples there: https://github.com/r-spatial/sf/issues/1781


Question 1: Is this a known issue with 3.9.0?


Question 2: Is there an easy way to directly install 3.9.1 on to a Windows machine to test the behaviour with the latest version?


Many thanks for your help,


Laura


Dr. L Marshall

Centre for Research into Ecological & Environmental Modelling

University of St. Andrews


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210909/22c205fb/attachment-0001.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 67355 bytes
Desc: image.png
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210909/22c205fb/attachment-0001.png>

From mtnclimb at gmail.com  Thu Sep  9 09:39:43 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 9 Sep 2021 09:39:43 -0700
Subject: [geos-devel] Strange intersection results in Windows
In-Reply-To: <AM6PR06MB5717DDDF4197C8B17804F5C2DDD49@AM6PR06MB5717.eurprd06.prod.outlook.com>
References: <AM6PR06MB5717DDDF4197C8B17804F5C2DDD49@AM6PR06MB5717.eurprd06.prod.outlook.com>
Message-ID: <CAK2ens2gHrMpUhiNgbJw2TpuPErCcopWQnvS9zqse6EM9vFjQQ@mail.gmail.com>

Thanks for the bug report.  I have replied on the original sf ticket:
https://github.com/r-spatial/sf/issues/1781#issuecomment-916260161

Quoted here for the benefit of this list:

There is a bug in GEOS 3.9.0 which causes overlay to essentially drop
straight lines if they are axis-parallel. It very much sounds like this is
what you are seeing. The bug was fixed
<https://git.osgeo.org/gitea/geos/geos/commit/acefb04aac1352add0449bc7e6f38af5093134ce>
in
GEOS 3.9.1.

If it's not possible to upgrade, two workarounds are:

   - rotate the lines a very small amount
   - use intersects to detect if a line is wholly inside a polygon, and if
   so just include it in the result directly


On Thu, Sep 9, 2021 at 3:21 AM Laura Marshall <lhm at st-andrews.ac.uk> wrote:

> Dear list,
>
> I use GEOS 3.9.0 via an R library (sf). I have been trying to find the
> intersection between groups of lines and a polygon / multipolygon.
>
> I have realised that updating the packages on my machine has resulted in
> some strange intersection results on Windows machines (and only Windows -
> works on mac and ubuntu). The sf update which introduced the issue was also
> associated with a change in GEOS versions, upgrading from 3.8.0 to 3.9.0
> and the suspicion is that it is something in GEOS rather than the sf R
> library.
>
> I have searched the tickets but could not see any issues which seem to
> match what I am seeing.
>
> I attach an image below of the results I am getting with the intersection
> between the lines and the polygon on my Windows machine. Red lines are the
> lines which were not considered part of the intersection and the thicker
> green lines are what was identified as the intersection between the grid of
> line segments and the polygon. It seems all lines that intersect the
> polygon boundary are correctly identified but only some lines that are
> entirely within the polygon boundary are included in the intersection.
>
> I had initially reported this as an issue in sf and there are more
> examples there: https://github.com/r-spatial/sf/issues/1781
>
> Question 1: Is this a known issue with 3.9.0?
>
>
> Question 2: Is there an easy way to directly install 3.9.1 on to a Windows
> machine to test the behaviour with the latest version?
>
>
> Many thanks for your help,
>
>
> Laura
>
>
> Dr. L Marshall
>
> Centre for Research into Ecological & Environmental Modelling
>
> University of St. Andrews
>
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210909/644ed5bd/attachment.html>

From nyall.dawson at gmail.com  Thu Sep  9 16:26:08 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Fri, 10 Sep 2021 09:26:08 +1000
Subject: [geos-devel] Bug on offset calculation on recent GEOS versions
Message-ID: <CAB28Ash_ZoneXg=0wErJX00irfSK03xE6_3N0nAvTLKDR_wViQ@mail.gmail.com>

Hi list,

Apologies for bringing up a bug report on the mailing list, but I'd
love to get some more feedback on a rather scary regression I've found
on recent GEOS versions (https://github.com/libgeos/geos/issues/477)

In a nutshell, certain simple single-part linestrings magically become
multi-part linestrings with gaps in them after offsetting the curves.

Is there anyone interested in fixing this? If so, can you please send
me an estimate of the cost of this fix?

Thanks!
Nyall

From mtnclimb at gmail.com  Thu Sep  9 21:31:49 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 9 Sep 2021 21:31:49 -0700
Subject: [geos-devel] Bug on offset calculation on recent GEOS versions
In-Reply-To: <CAB28Ash_ZoneXg=0wErJX00irfSK03xE6_3N0nAvTLKDR_wViQ@mail.gmail.com>
References: <CAB28Ash_ZoneXg=0wErJX00irfSK03xE6_3N0nAvTLKDR_wViQ@mail.gmail.com>
Message-ID: <CAK2ens32Hn1xUcXZ8wm+bihoMCrVG+LmEAGzBB=rRmqqmw1DDA@mail.gmail.com>

The offset curve implementation is quite complex, so this could be a
challenge to debug. The code uses overlay (SnapOverlayOp), so my first
suspicion is that the change to OverlayNG in 3.9 has something to do with
this. But not sure why or how SnapOverlayOp would have been affected.

It will be useful to add offsetCurve to geosop to allow testing across
versions.


On Thu, Sep 9, 2021 at 4:26 PM Nyall Dawson <nyall.dawson at gmail.com> wrote:

> Hi list,
>
> Apologies for bringing up a bug report on the mailing list, but I'd
> love to get some more feedback on a rather scary regression I've found
> on recent GEOS versions (https://github.com/libgeos/geos/issues/477)
>
> In a nutshell, certain simple single-part linestrings magically become
> multi-part linestrings with gaps in them after offsetting the curves.
>
> Is there anyone interested in fixing this? If so, can you please send
> me an estimate of the cost of this fix?
>
> Thanks!
> Nyall
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210909/355bb5ea/attachment.html>

From geos-trac at osgeo.org  Fri Sep 10 14:52:15 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 10 Sep 2021 21:52:15 -0000
Subject: [geos-devel] [GEOS] #1072: Setting precision of topologically
 invalid polygon returns incomplete results when preserving topology
In-Reply-To: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
References: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
Message-ID: <059.19a787e33c789d92c764f0c64dacab56@osgeo.org>

#1072: Setting precision of topologically invalid polygon returns incomplete
results when preserving topology
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.5.1
 Severity:  Unassigned    |  Resolution:  wontfix
 Keywords:                |
--------------------------+---------------------------
Changes (by pramsey):

 * status:  new => closed
 * resolution:   => wontfix


Comment:

 I suppose now that we have MakeValid we could check first, but we don't do
 that for any other algorithm. The user is expected to check at their
 convenience before feeding geometry to other routines. I think this is
 wontfix

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1072#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Sep 10 15:16:15 2021
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 10 Sep 2021 22:16:15 -0000
Subject: [geos-devel] [GEOS] #1072: Setting precision of topologically
 invalid polygon returns incomplete results when preserving topology
In-Reply-To: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
References: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
Message-ID: <059.b73d773ac3190f176547071e3ebbae80@osgeo.org>

#1072: Setting precision of topologically invalid polygon returns incomplete
results when preserving topology
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.5.1
 Severity:  Unassigned    |  Resolution:  wontfix
 Keywords:                |
--------------------------+---------------------------

Comment (by mdavis):

 Agreed, this ia wontfix.  SetPrecision is not intended to repair geometry
 - that is the function of MakeValid.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1072#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From pramsey at cleverelephant.ca  Fri Sep 10 16:03:39 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 10 Sep 2021 16:03:39 -0700
Subject: [geos-devel] The Road to 3.10
Message-ID: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>

We may have one last piece of functionality to add to 3.10 (new triangulation code) and then will start the count-down to release. If you've got work in progress that is suitable for 3.10, this would be a good time to bring it home.

P

From pramsey at cleverelephant.ca  Fri Sep 10 16:15:42 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Fri, 10 Sep 2021 16:15:42 -0700
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
Message-ID: <341D34F3-E92B-46DF-95F9-A61B1AB4A14A@cleverelephant.ca>

One thing worthy of discussion is pushing forward the cmake dependency. If we pop forward to 3.12 we can fix this issue cleanly by using OBJECT instead of STATIC linking for our vendored deps.

https://github.com/libgeos/geos/issues/463

3.12.0 was released in 2018. I personally at this point just use the latest cmake build, which is so easy to do (download package, unzip in /usr/local). 

P

> On Sep 10, 2021, at 4:03 PM, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> 
> We may have one last piece of functionality to add to 3.10 (new triangulation code) and then will start the count-down to release. If you've got work in progress that is suitable for 3.10, this would be a good time to bring it home.
> 
> P


From gdt at lexort.com  Fri Sep 10 17:35:08 2021
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 10 Sep 2021 20:35:08 -0400
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <341D34F3-E92B-46DF-95F9-A61B1AB4A14A@cleverelephant.ca> (Paul
 Ramsey's message of "Fri, 10 Sep 2021 16:15:42 -0700")
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <341D34F3-E92B-46DF-95F9-A61B1AB4A14A@cleverelephant.ca>
Message-ID: <rmilf44gdab.fsf@s1.lexort.com>


Paul Ramsey <pramsey at cleverelephant.ca> writes:

> One thing worthy of discussion is pushing forward the cmake
> dependency. If we pop forward to 3.12 we can fix this issue cleanly by
> using OBJECT instead of STATIC linking for our vendored deps.
>
> https://github.com/libgeos/geos/issues/463
>
> 3.12.0 was released in 2018. I personally at this point just use the
> latest cmake build, which is so easy to do (download package, unzip in
> /usr/local).

I am a trailing edge type.  3.12 from 2018 sounds ancient even to me and
it's hard to believe any system with 3.11 can cope with much of anything
these days.

So changing the cmake rule to 3.12 seems entirely reasonable.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210910/b10f813d/attachment.sig>

From mwtoews at gmail.com  Sun Sep 12 03:42:22 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Sun, 12 Sep 2021 22:42:22 +1200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <341D34F3-E92B-46DF-95F9-A61B1AB4A14A@cleverelephant.ca>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <341D34F3-E92B-46DF-95F9-A61B1AB4A14A@cleverelephant.ca>
Message-ID: <CAM2FmMoqM53JvxCH116+p3b-Ko2Kz0SXRz6WjZ1iENxeXVZCcQ@mail.gmail.com>

On Sat, 11 Sept 2021 at 11:15, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>
> One thing worthy of discussion is pushing forward the cmake dependency. If we pop forward to 3.12 we can fix this issue cleanly by using OBJECT instead of STATIC linking for our vendored deps.
>
> https://github.com/libgeos/geos/issues/463
>
> 3.12.0 was released in 2018. I personally at this point just use the latest cmake build, which is so easy to do (download package, unzip in /usr/local).

Probably fine, but this may annoy CentOS 7 or Ubuntu 18.04 users.
https://pkgs.org/search/?q=cmake

As this is a fundamental development component, should the minimum
supported CMake be guided by PSC policy? An RFC would only need to say
"released within X years" or perhaps "oldest supported version by
popular OS Z", This way the policy may guide if/when to increment the
minimum version of the component. See related
https://proj.org/community/rfc/rfc-3.html

From geos-trac at osgeo.org  Mon Sep 13 05:57:48 2021
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 13 Sep 2021 12:57:48 -0000
Subject: [geos-devel] [GEOS] #1072: Setting precision of topologically
 invalid polygon returns incomplete results when preserving topology
In-Reply-To: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
References: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
Message-ID: <059.d173ce200c045bfe9034d061c60a94f2@osgeo.org>

#1072: Setting precision of topologically invalid polygon returns incomplete
results when preserving topology
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.5.1
 Severity:  Unassigned    |  Resolution:  wontfix
 Keywords:                |
--------------------------+---------------------------

Comment (by strk):

 I thought SetPrecision was made, in GEOS-3.9, to retain validity ?

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1072#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From strk at kbt.io  Mon Sep 13 06:00:38 2021
From: strk at kbt.io (Sandro Santilli)
Date: Mon, 13 Sep 2021 15:00:38 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
Message-ID: <20210913130038.GA1918@c19>

On Fri, Sep 10, 2021 at 04:03:39PM -0700, Paul Ramsey wrote:
> We may have one last piece of functionality to add to 3.10 (new triangulation code) and then will start the count-down to release. If you've got work in progress that is suitable for 3.10, this would be a good time to bring it home.

There's an ongoing QGIS bugfix initiative that will end
on October 22nd, in the past such initiative has also
resulted in new GEOS features (PreparedMinDist) so I'd
wait for that date before feature-freeze.

I'm taking part in the initiative so will try to spot
as many GEOS features/enhancements tickets as soon as
possible to have them evidenced and properly targetted
in trac.

--strk;

From geos-trac at osgeo.org  Mon Sep 13 08:44:23 2021
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 13 Sep 2021 15:44:23 -0000
Subject: [geos-devel] [GEOS] #1072: Setting precision of topologically
 invalid polygon returns incomplete results when preserving topology
In-Reply-To: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
References: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
Message-ID: <059.a934786e1372770e735fff520ec4146c@osgeo.org>

#1072: Setting precision of topologically invalid polygon returns incomplete
results when preserving topology
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.5.1
 Severity:  Unassigned    |  Resolution:  wontfix
 Keywords:                |
--------------------------+---------------------------

Comment (by mdavis):

 Replying to [comment:5 strk]:
 > I thought SetPrecision was made, in GEOS-3.9, to retain validity ?

 Yes, SetPrecision preserves the validity of valid inputs. But it does not
 change invalid inputs into valid ones (which is what is being asked here).
 That requires completely different logic, which is in MakeValid.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1072#comment:6>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Sep 13 08:48:03 2021
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 13 Sep 2021 15:48:03 -0000
Subject: [geos-devel] [GEOS] #1072: Setting precision of topologically
 invalid polygon returns incomplete results when preserving topology
In-Reply-To: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
References: <044.4bcef68f343a0451073e2084f034bc36@osgeo.org>
Message-ID: <059.7e95387b406130f56d9b41b6c8d1acee@osgeo.org>

#1072: Setting precision of topologically invalid polygon returns incomplete
results when preserving topology
--------------------------+---------------------------
 Reporter:  Brendan Ward  |       Owner:  geos-devel@?
     Type:  defect        |      Status:  closed
 Priority:  major         |   Milestone:  3.10.0
Component:  Default       |     Version:  3.5.1
 Severity:  Unassigned    |  Resolution:  wontfix
 Keywords:                |
--------------------------+---------------------------

Comment (by mdavis):

 To be precise, SetPrecision will remove some minor invalidities, such as
 "loops" which are smaller than the precision value.  But it won't fix
 gross invalidity.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1072#comment:7>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From nyall.dawson at gmail.com  Mon Sep 13 13:54:20 2021
From: nyall.dawson at gmail.com (Nyall Dawson)
Date: Tue, 14 Sep 2021 06:54:20 +1000
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <20210913130038.GA1918@c19>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
Message-ID: <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>

On Mon, 13 Sept 2021 at 23:09, Sandro Santilli <strk at kbt.io> wrote:
>
> On Fri, Sep 10, 2021 at 04:03:39PM -0700, Paul Ramsey wrote:
> > We may have one last piece of functionality to add to 3.10 (new triangulation code) and then will start the count-down to release. If you've got work in progress that is suitable for 3.10, this would be a good time to bring it home.
>
> There's an ongoing QGIS bugfix initiative that will end
> on October 22nd, in the past such initiative has also
> resulted in new GEOS features (PreparedMinDist) so I'd
> wait for that date before feature-freeze.
>

Hi Sandro!

> I'm taking part in the initiative so will try to spot
> as many GEOS features/enhancements tickets as soon as
> possible to have them evidenced and properly targetted
> in trac.

Great to hear this again! Can I suggest
https://github.com/libgeos/geos/issues/472 ("add an optimised
GEOSPreparedDistanceIsWithin method") would be a good candidate here?
That's an API enhancement which could potentially have huge speed
benefits to lots of parts of QGIS (and other GEOS clients).

Nyall


> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel

From strk at kbt.io  Tue Sep 14 02:12:06 2021
From: strk at kbt.io (Sandro Santilli)
Date: Tue, 14 Sep 2021 11:12:06 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
Message-ID: <20210914091206.GC3980@c19>

On Tue, Sep 14, 2021 at 06:54:20AM +1000, Nyall Dawson wrote:
> On Mon, 13 Sept 2021 at 23:09, Sandro Santilli <strk at kbt.io> wrote:
> >
> > On Fri, Sep 10, 2021 at 04:03:39PM -0700, Paul Ramsey wrote:
> > > We may have one last piece of functionality to add to 3.10 (new triangulation code) and then will start the count-down to release. If you've got work in progress that is suitable for 3.10, this would be a good time to bring it home.
> >
> > There's an ongoing QGIS bugfix initiative that will end
> > on October 22nd, in the past such initiative has also
> > resulted in new GEOS features (PreparedMinDist) so I'd
> > wait for that date before feature-freeze.
> >
> 
> Hi Sandro!
> 
> > I'm taking part in the initiative so will try to spot
> > as many GEOS features/enhancements tickets as soon as
> > possible to have them evidenced and properly targetted
> > in trac.
> 
> Great to hear this again! Can I suggest
> https://github.com/libgeos/geos/issues/472 ("add an optimised
> GEOSPreparedDistanceIsWithin method") would be a good candidate here?
> That's an API enhancement which could potentially have huge speed
> benefits to lots of parts of QGIS (and other GEOS clients).

Sure ! I'll look into that

--strk;

From geos-trac at osgeo.org  Tue Sep 14 03:30:05 2021
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 14 Sep 2021 10:30:05 -0000
Subject: [geos-devel] [GEOS] #1125: geosop -l coredumps
Message-ID: <042.645272b81f5d3f5ff386a1593f2b66cf@osgeo.org>

#1125: geosop -l coredumps
------------------------+--------------------------
 Reporter:  strk        |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.9.2
Component:  Default     |    Version:  3.9.0
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 I was hoping to get a list of supported operations, but got an abort
 instead:

 {{{
 [strk at c19:/usr/local/src/geos/geos/src/main/build(main)] bin/geosop -l
 terminate called after throwing an instance of
 'cxxopts::option_not_exists_exception'
   what():  Option ?l? does not exist
 Aborted (core dumped)
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1125>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 14 03:35:53 2021
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 14 Sep 2021 10:35:53 -0000
Subject: [geos-devel] [GEOS] #1125: geosop -l coredumps
In-Reply-To: <042.645272b81f5d3f5ff386a1593f2b66cf@osgeo.org>
References: <042.645272b81f5d3f5ff386a1593f2b66cf@osgeo.org>
Message-ID: <057.5c4912208e051f1895bf057bdb7a98a9@osgeo.org>

#1125: geosop -l coredumps
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@?
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.9.2
Component:  Default     |     Version:  3.9.0
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by Sandro Santilli <strk@?>):

 * status:  new => closed
 * resolution:   => fixed


Comment:

 In [changeset:"921f88d1e829f8114c2ff1ccd4fa7858960e880f/git" 921f88d/git]:
 {{{
 #!CommitTicketReference repository="git"
 revision="921f88d1e829f8114c2ff1ccd4fa7858960e880f"
 Make geosop be nice upon being called with unknown switch

 Print an error and exit with failure, rather than aborting.
 Closes #1125
 }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1125#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 14 03:37:39 2021
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 14 Sep 2021 10:37:39 -0000
Subject: [geos-devel] [GEOS] #1125: geosop -l coredumps
In-Reply-To: <042.645272b81f5d3f5ff386a1593f2b66cf@osgeo.org>
References: <042.645272b81f5d3f5ff386a1593f2b66cf@osgeo.org>
Message-ID: <057.4dc6065c3dea0bd3852b3996fca10e01@osgeo.org>

#1125: geosop -l coredumps
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@?
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.10.0
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------
Changes (by strk):

 * version:  3.9.0 => main
 * milestone:  3.9.2 => 3.10.0


-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1125#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 14 03:39:10 2021
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 14 Sep 2021 10:39:10 -0000
Subject: [geos-devel] [GEOS] #1125: geosop -l coredumps
In-Reply-To: <042.645272b81f5d3f5ff386a1593f2b66cf@osgeo.org>
References: <042.645272b81f5d3f5ff386a1593f2b66cf@osgeo.org>
Message-ID: <057.222056d36cd76fa77ba86d5a3bebaad6@osgeo.org>

#1125: geosop -l coredumps
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@?
     Type:  defect      |      Status:  closed
 Priority:  major       |   Milestone:  3.10.0
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:  fixed
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 For the record: --help prints the list of supported ops

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1125#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 14 03:49:52 2021
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 14 Sep 2021 10:49:52 -0000
Subject: [geos-devel] [GEOS] #1126: geosop aborts too much :)
Message-ID: <042.6ab35d224a36bfe6424f0c8db83bb68a@osgeo.org>

#1126: geosop aborts too much :)
------------------------+--------------------------
 Reporter:  strk        |      Owner:  geos-devel@?
     Type:  defect      |     Status:  new
 Priority:  major       |  Milestone:  3.10.0
Component:  Default     |    Version:  main
 Severity:  Unassigned  |   Keywords:
------------------------+--------------------------
 The syntax reported by {{{ geosop }}} is not very clear, and it's typical
 to just try syntaxes and be guided by errors. Instead geosop happily
 aborts dumping cores whenever wrong syntax is used.

 This ticket is to try at catching as many invocation errors as possible.

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1126>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Sep 14 03:50:12 2021
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 14 Sep 2021 10:50:12 -0000
Subject: [geos-devel] [GEOS] #1126: geosop aborts too much :)
In-Reply-To: <042.6ab35d224a36bfe6424f0c8db83bb68a@osgeo.org>
References: <042.6ab35d224a36bfe6424f0c8db83bb68a@osgeo.org>
Message-ID: <057.009394edb49a943a2118d82768150fc5@osgeo.org>

#1126: geosop aborts too much :)
------------------------+---------------------------
 Reporter:  strk        |       Owner:  geos-devel@?
     Type:  defect      |      Status:  new
 Priority:  major       |   Milestone:  3.10.0
Component:  Default     |     Version:  main
 Severity:  Unassigned  |  Resolution:
 Keywords:              |
------------------------+---------------------------

Comment (by strk):

 Example abort: {{{ geosop help distance }}}

-- 
Ticket URL: <https://trac.osgeo.org/geos/ticket/1126#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mtnclimb at gmail.com  Thu Sep 16 12:08:21 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 16 Sep 2021 12:08:21 -0700
Subject: [geos-devel] GEOS affected by bug in gcc-11 - with workarounds
Message-ID: <CAK2ens2za_0ZVoP=ywAPQtr5JzngkjKzs+gHStuogBwZqhW66Q@mail.gmail.com>

Posted as a public service for future reference.

While recovering from upgrading my Mac to Big Sur (which is a
whoooole 'nother rant), I upgraded to gcc-11 (using Homebrew).  Sadly,
compiling GEOS then threw the following error message:

----------------------------------------------

[ 29%] Building CXX object
CMakeFiles/geos.dir/src/operation/union/CoverageUnion.cpp.o
In file included from
/Users/mdavis/proj/geos/git/geos/src/operation/union/CascadedPolygonUnion.cpp:21:
In member function 'std::unique_ptr<geos::geom::Geometry>
geos::geom::Geometry::clone() const',
    inlined from 'std::unique_ptr<geos::geom::Geometry>
geos::operation::geounion::CascadedPolygonUnion::unionSafe(const
geos::geom::Geometry*, const geos::geom::Geometry*) const' at
/Users/mdavis/proj/geos/git/geos/src/operation/union/CascadedPolygonUnion.cpp:128:26,
    inlined from 'std::unique_ptr<geos::geom::Geometry>
geos::operation::geounion::CascadedPolygonUnion::binaryUnion(const
std::vector<const geos::geom::Geometry*>&, std::size_t, std::size_t)'
at /Users/mdavis/proj/geos/git/geos/src/operation/union/CascadedPolygonUnion.cpp:106:4:
/Users/mdavis/proj/geos/git/geos/include/geos/geom/Geometry.h:204:91:
error: 'this' pointer is null [-Werror=nonnull]
  204 |     std::unique_ptr<Geometry> clone() const { return
std::unique_ptr<Geometry>(cloneImpl()); }
      |
                           ^
[ 29%] Building CXX object
CMakeFiles/geos.dir/src/operation/union/OverlapUnion.cpp.o
cc1plus: all warnings being treated as errors
make[2]: *** [CMakeFiles/geos.dir/src/operation/union/CascadedPolygonUnion.cpp.o]
Error 1
make[2]: *** Waiting for unfinished jobs....
make[1]: *** [CMakeFiles/geos.dir/all] Error 2
make: *** [all] Error

------------------------------------

It looks like this is a bug in gcc 11, as per this issue:
https://gcc.gnu.org/bugzilla/show_bug.cgi?id=96003

One fix is to add a pragma to disable the warning in Geometry.h :

    /// Make a deep-copy of this Geometry
    std::unique_ptr<Geometry> clone() const {
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wnonnull"
        return std::unique_ptr<Geometry>(cloneImpl());
#pragma GCC diagnostic pop
}

However, I chose to downgrade to gcc-10 instead (thanks to Homebrew for
making this super easy!).  Problem gone, and no ugly hack marring our
beautiful codebase.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210916/63ca2e0e/attachment.html>

From lr at pcorp.us  Thu Sep 16 14:09:12 2021
From: lr at pcorp.us (Regina Obe)
Date: Thu, 16 Sep 2021 17:09:12 -0400
Subject: [geos-devel] [Mobilitydb-dev] Problem with ST_FrechetDistance
 in PostGIS/GEOS
In-Reply-To: <CAPqRbE41c19c5_=oo6=OFjNKB5LyE9dTxz2+PRBWvF3BJs9w8w@mail.gmail.com>
References: <CAPqRbE7p7xzZEpCLFYZ_56q197sk_7Oi69fNP9Q0T70fU=jP1Q@mail.gmail.com>
 <CAPqRbE41c19c5_=oo6=OFjNKB5LyE9dTxz2+PRBWvF3BJs9w8w@mail.gmail.com>
Message-ID: <001b01d7ab3f$19e534e0$4daf9ea0$@pcorp.us>

I do get 2.23606 on PostGIS so we are in agreement there.

 

As to what the right answer is I have no clue and reading math equations gives me a headache.

 

I?ve added geos-develop to mailing list for comment.

 

Thanks,

Regina

 

From: Mobilitydb-dev [mailto:mobilitydb-dev-bounces at lists.osgeo.org] On Behalf Of Esteban Zimanyi
Sent: Saturday, September 11, 2021 4:35 AM
To: mobilitydb-dev at lists.osgeo.org
Subject: [Mobilitydb-dev] Problem with ST_FrechetDistance in PostGIS/GEOS

 

Dear Regina

 

We started the implementation of the discrete Frechet distance in MobilityDB and found out that we obtain a different result than PostGIS/GEOS.

 

test=# select frechetDistance(tgeompoint '[Point(1 1)@2000-01-01, Point(2 2)@2000-01-02, Point(3 1)@2000-01-03]',
tgeompoint '[Point(1 4)@2000-01-01, Point(2 3)@2000-01-02, Point(3 4)@2000-01-03, Point(4 3)@2000-01-04]');
 frechetdistance
-----------------
               3
(1 row)

test=# select ST_FrechetDistance(geometry 'Linestring(1 1,2 2,3 1)',
test(#   geometry 'Linestring(1 4,2 3,3 4,4 3)');
 st_frechetdistance
--------------------
   2.23606797749979
(1 row)

 

We used the simple algorithm referenced in the PostGIS manual

https://postgis.net/docs/ST_FrechetDistance.html

and according to our understanding the correct result is 3.

 

Indeed the matrix of Euclidean distances between a vertex of the first linestring and a vertex of the second linestring is as follows

 

3.6 2.23 2.23
3.6 2.23 3
2.23 1 2.23
3 2.23 3.6 

And the matrix of the computation of the Frechet distance (ca in the algorithm) is as follows

3.6 3 3
3.6 3 3
3 3 3
3 3 3.6

Could you please have a look ? If you confirm that there is a problem I will post a ticket in PostGIS and/or GEOS mailing lists.

 

Many thanks

 

Esteban

 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210916/8372fce8/attachment.html>

From mtnclimb at gmail.com  Fri Sep 17 10:43:59 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 17 Sep 2021 10:43:59 -0700
Subject: [geos-devel] [Mobilitydb-dev] Problem with ST_FrechetDistance
 in PostGIS/GEOS
In-Reply-To: <001b01d7ab3f$19e534e0$4daf9ea0$@pcorp.us>
References: <CAPqRbE7p7xzZEpCLFYZ_56q197sk_7Oi69fNP9Q0T70fU=jP1Q@mail.gmail.com>
 <CAPqRbE41c19c5_=oo6=OFjNKB5LyE9dTxz2+PRBWvF3BJs9w8w@mail.gmail.com>
 <001b01d7ab3f$19e534e0$4daf9ea0$@pcorp.us>
Message-ID: <CAK2ens31Z-NkWm43MsRZTU3ThqAF9Q4_wOddSrosDSrbSWHd0A@mail.gmail.com>

I agree with the analysis that there might be a problem with the Frechet
Distance algorithm in GEOS.  Although, there is a recent PR against JTS for
Frechet Distance with a different codebase, and it produces the same result
as the GEOS code.  So this is puzzling.

The GEOS code is here:
https://git.osgeo.org/gitea/geos/geos/src/branch/main/src/algorithm/distance/DiscreteFrechetDistance.cpp
The JTS code is here:
https://github.com/locationtech/jts/blob/ff6476cd8fe4e4ee85304ebc049d05a7cafc3c00/modules/core/src/main/java/org/locationtech/jts/algorithm/distance/DiscreteFrechetDistance.java

MobilityDB can compare with their algorithm and see if there is a bug.   Or
else provide their source code to allow us to compare?

On Thu, Sep 16, 2021 at 2:09 PM Regina Obe <lr at pcorp.us> wrote:

> I do get 2.23606 on PostGIS so we are in agreement there.
>
>
>
> As to what the right answer is I have no clue and reading math equations
> gives me a headache.
>
>
>
> I?ve added geos-develop to mailing list for comment.
>
>
>
> Thanks,
>
> Regina
>
>
>
> *From:* Mobilitydb-dev [mailto:mobilitydb-dev-bounces at lists.osgeo.org] *On
> Behalf Of *Esteban Zimanyi
> *Sent:* Saturday, September 11, 2021 4:35 AM
> *To:* mobilitydb-dev at lists.osgeo.org
> *Subject:* [Mobilitydb-dev] Problem with ST_FrechetDistance in
> PostGIS/GEOS
>
>
>
> Dear Regina
>
>
>
> We started the implementation of the discrete Frechet distance in
> MobilityDB and found out that we obtain a different result
> than PostGIS/GEOS.
>
>
>
> test=# select frechetDistance(tgeompoint '[Point(1 1)@2000-01-01, Point(2
> 2)@2000-01-02, Point(3 1)@2000-01-03]',
> tgeompoint '[Point(1 4)@2000-01-01, Point(2 3)@2000-01-02, Point(3
> 4)@2000-01-03, Point(4 3)@2000-01-04]');
>  frechetdistance
> -----------------
>                3
> (1 row)
>
> test=# select ST_FrechetDistance(geometry 'Linestring(1 1,2 2,3 1)',
> test(#   geometry 'Linestring(1 4,2 3,3 4,4 3)');
>  st_frechetdistance
> --------------------
>    2.23606797749979
> (1 row)
>
>
>
> We used the simple algorithm referenced in the PostGIS manual
>
> https://postgis.net/docs/ST_FrechetDistance.html
>
> and according to our understanding the correct result is 3.
>
>
>
> Indeed the matrix of Euclidean distances between a vertex of the first
> linestring and a vertex of the second linestring is as follows
>
>
>
> 3.6 2.23 2.23
> 3.6 2.23 3
> 2.23 1 2.23
> 3 2.23 3.6
>
> And the matrix of the computation of the Frechet distance (ca in the
> algorithm) is as follows
>
> 3.6 3 3
> 3.6 3 3
> 3 3 3
> 3 3 3.6
>
> Could you please have a look ? If you confirm that there is a problem I
> will post a ticket in PostGIS and/or GEOS mailing lists.
>
>
>
> Many thanks
>
>
>
> Esteban
>
>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210917/00af5eb1/attachment-0001.html>

From mtnclimb at gmail.com  Fri Sep 17 13:08:59 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 17 Sep 2021 13:08:59 -0700
Subject: [geos-devel] [Mobilitydb-dev] Problem with ST_FrechetDistance
 in PostGIS/GEOS
In-Reply-To: <CAK2ens31Z-NkWm43MsRZTU3ThqAF9Q4_wOddSrosDSrbSWHd0A@mail.gmail.com>
References: <CAPqRbE7p7xzZEpCLFYZ_56q197sk_7Oi69fNP9Q0T70fU=jP1Q@mail.gmail.com>
 <CAPqRbE41c19c5_=oo6=OFjNKB5LyE9dTxz2+PRBWvF3BJs9w8w@mail.gmail.com>
 <001b01d7ab3f$19e534e0$4daf9ea0$@pcorp.us>
 <CAK2ens31Z-NkWm43MsRZTU3ThqAF9Q4_wOddSrosDSrbSWHd0A@mail.gmail.com>
Message-ID: <CAK2ens09W8cwP7Liftxkm15GqgbMbpxVvYw7yQR5sLZ-+K6jcQ@mail.gmail.com>

Well, it looks like there is a possible bug in the GEOS
DiscreteFrechetDistance class.  This line:

https://git.osgeo.org/gitea/geos/geos/src/branch/main/src/algorithm/distance/DiscreteFrechetDistance.cpp#L112

should probably be

       ca[i][j] = p_ptDist;

And indeed that gives the expected answer of 3.

Working on a fix now, and will file a GEOS issue.

On Fri, Sep 17, 2021 at 10:43 AM Martin Davis <mtnclimb at gmail.com> wrote:

> I agree with the analysis that there might be a problem with the Frechet
> Distance algorithm in GEOS.  Although, there is a recent PR against JTS for
> Frechet Distance with a different codebase, and it produces the same result
> as the GEOS code.  So this is puzzling.
>
> The GEOS code is here:
> https://git.osgeo.org/gitea/geos/geos/src/branch/main/src/algorithm/distance/DiscreteFrechetDistance.cpp
> The JTS code is here:
> https://github.com/locationtech/jts/blob/ff6476cd8fe4e4ee85304ebc049d05a7cafc3c00/modules/core/src/main/java/org/locationtech/jts/algorithm/distance/DiscreteFrechetDistance.java
>
> MobilityDB can compare with their algorithm and see if there is a bug.
>  Or else provide their source code to allow us to compare?
>
> On Thu, Sep 16, 2021 at 2:09 PM Regina Obe <lr at pcorp.us> wrote:
>
>> I do get 2.23606 on PostGIS so we are in agreement there.
>>
>>
>>
>> As to what the right answer is I have no clue and reading math equations
>> gives me a headache.
>>
>>
>>
>> I?ve added geos-develop to mailing list for comment.
>>
>>
>>
>> Thanks,
>>
>> Regina
>>
>>
>>
>> *From:* Mobilitydb-dev [mailto:mobilitydb-dev-bounces at lists.osgeo.org] *On
>> Behalf Of *Esteban Zimanyi
>> *Sent:* Saturday, September 11, 2021 4:35 AM
>> *To:* mobilitydb-dev at lists.osgeo.org
>> *Subject:* [Mobilitydb-dev] Problem with ST_FrechetDistance in
>> PostGIS/GEOS
>>
>>
>>
>> Dear Regina
>>
>>
>>
>> We started the implementation of the discrete Frechet distance in
>> MobilityDB and found out that we obtain a different result
>> than PostGIS/GEOS.
>>
>>
>>
>> test=# select frechetDistance(tgeompoint '[Point(1 1)@2000-01-01, Point(2
>> 2)@2000-01-02, Point(3 1)@2000-01-03]',
>> tgeompoint '[Point(1 4)@2000-01-01, Point(2 3)@2000-01-02, Point(3
>> 4)@2000-01-03, Point(4 3)@2000-01-04]');
>>  frechetdistance
>> -----------------
>>                3
>> (1 row)
>>
>> test=# select ST_FrechetDistance(geometry 'Linestring(1 1,2 2,3 1)',
>> test(#   geometry 'Linestring(1 4,2 3,3 4,4 3)');
>>  st_frechetdistance
>> --------------------
>>    2.23606797749979
>> (1 row)
>>
>>
>>
>> We used the simple algorithm referenced in the PostGIS manual
>>
>> https://postgis.net/docs/ST_FrechetDistance.html
>>
>> and according to our understanding the correct result is 3.
>>
>>
>>
>> Indeed the matrix of Euclidean distances between a vertex of the first
>> linestring and a vertex of the second linestring is as follows
>>
>>
>>
>> 3.6 2.23 2.23
>> 3.6 2.23 3
>> 2.23 1 2.23
>> 3 2.23 3.6
>>
>> And the matrix of the computation of the Frechet distance (ca in the
>> algorithm) is as follows
>>
>> 3.6 3 3
>> 3.6 3 3
>> 3 3 3
>> 3 3 3.6
>>
>> Could you please have a look ? If you confirm that there is a problem I
>> will post a ticket in PostGIS and/or GEOS mailing lists.
>>
>>
>>
>> Many thanks
>>
>>
>>
>> Esteban
>>
>>
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210917/028d5ac6/attachment.html>

From pramsey at cleverelephant.ca  Thu Sep 23 14:20:07 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 23 Sep 2021 14:20:07 -0700
Subject: [geos-devel] GEOSConstrainedDelaunayTriangulation
Message-ID: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>

FYI on a big new port dropping from JTS today. Maybe Martin can share some pictures.

  - CAPI: GEOSConstrainedDelaunayTriangulation, builds a constrained triangulation
          of an input Polygon or MultiPolygon, returning a GeometryCollection(Polygon)
          of the triangles.


https://github.com/libgeos/geos/commit/896af228fb27076bdd7f0529d55b3e79e3f10191

From me at komzpa.net  Thu Sep 23 14:38:21 2021
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Fri, 24 Sep 2021 00:38:21 +0300
Subject: [geos-devel] GEOSConstrainedDelaunayTriangulation
In-Reply-To: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
References: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
Message-ID: <CAC8Q8tJfh3Xq-BqhAJwu6bHTFDA=KXKRUopK6Na6k6of5s5=sA@mail.gmail.com>

Hi,

The interesting one is to get a CDT of a collection of linestrings with
Z(M) for interpolation - mainly for creating isochrones from time annotated
road maps. This is available in SFCGAL and requires pre-noded input. Can
this function be adjusted for feature parity with SFCGAL?

Additionally, integrating this into PostGIS it would be nice to get a TIN.

On Fri, Sep 24, 2021 at 12:20 AM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> FYI on a big new port dropping from JTS today. Maybe Martin can share some
> pictures.
>
>   - CAPI: GEOSConstrainedDelaunayTriangulation, builds a constrained
> triangulation
>           of an input Polygon or MultiPolygon, returning a
> GeometryCollection(Polygon)
>           of the triangles.
>
>
>
> https://github.com/libgeos/geos/commit/896af228fb27076bdd7f0529d55b3e79e3f10191
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210924/02b6b843/attachment.html>

From mtnclimb at gmail.com  Thu Sep 23 16:13:37 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Thu, 23 Sep 2021 16:13:37 -0700
Subject: [geos-devel] GEOSConstrainedDelaunayTriangulation
In-Reply-To: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
References: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
Message-ID: <CAK2ens0c-W=XJMbgJAut1R5ZHjN9DWs70iq3PV9ENRB++9sHxA@mail.gmail.com>

I added a couple of images to the JTS PR:
https://github.com/locationtech/jts/pull/775

Blog post coming soon.

This triangulation implementation uses Ear-Clipping, so is only usable on
polygons.  It would be nice to have an implementation for Constrained
Delaunay on linear inputs.  The Tri data structure is a good way of
constructing and representing this, so maybe that can have soon (perhaps
via use of Chew's algorithm).  It's also worth noting that another reason
for creating the Tri data structure is to make it easier to implement
concave hull algorithms, which hopefully will also appear soon.


On Thu, Sep 23, 2021 at 2:20 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> FYI on a big new port dropping from JTS today. Maybe Martin can share some
> pictures.
>
>   - CAPI: GEOSConstrainedDelaunayTriangulation, builds a constrained
> triangulation
>           of an input Polygon or MultiPolygon, returning a
> GeometryCollection(Polygon)
>           of the triangles.
>
>
>
> https://github.com/libgeos/geos/commit/896af228fb27076bdd7f0529d55b3e79e3f10191
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210923/cc3f9c19/attachment.html>

From mtnclimb at gmail.com  Fri Sep 24 07:17:15 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Fri, 24 Sep 2021 07:17:15 -0700
Subject: [geos-devel] GEOSConstrainedDelaunayTriangulation
In-Reply-To: <CAC8Q8tJfh3Xq-BqhAJwu6bHTFDA=KXKRUopK6Na6k6of5s5=sA@mail.gmail.com>
References: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
 <CAC8Q8tJfh3Xq-BqhAJwu6bHTFDA=KXKRUopK6Na6k6of5s5=sA@mail.gmail.com>
Message-ID: <CAK2ens1HAH9ewprqM85nq626dXy1sc0u0BhMpW+N7mJCVYhSsQ@mail.gmail.com>

An offshoot of the Ear-Clipping work is going to be a Concave Hull
algorithm for Polygons.  It runs ear-clipping on the outside of the polygon
until some criteria is reached (either a target reduction in number of
vertices or limit to increase in area).  This essentially "shrink-wraps"
the polygon.

Could isochrones be formed by buffering the roads by a small amount and
then constructing the Polygon Concave Hull?

On Thu, Sep 23, 2021 at 2:38 PM Darafei "Kom?pa" Praliaskouski <
me at komzpa.net> wrote:

> Hi,
>
> The interesting one is to get a CDT of a collection of linestrings with
> Z(M) for interpolation - mainly for creating isochrones from time annotated
> road maps. This is available in SFCGAL and requires pre-noded input. Can
> this function be adjusted for feature parity with SFCGAL?
>
> Additionally, integrating this into PostGIS it would be nice to get a TIN.
>
> On Fri, Sep 24, 2021 at 12:20 AM Paul Ramsey <pramsey at cleverelephant.ca>
> wrote:
>
>> FYI on a big new port dropping from JTS today. Maybe Martin can share
>> some pictures.
>>
>>   - CAPI: GEOSConstrainedDelaunayTriangulation, builds a constrained
>> triangulation
>>           of an input Polygon or MultiPolygon, returning a
>> GeometryCollection(Polygon)
>>           of the triangles.
>>
>>
>>
>> https://github.com/libgeos/geos/commit/896af228fb27076bdd7f0529d55b3e79e3f10191
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210924/e88c38bd/attachment.html>

From mtnclimb at gmail.com  Sat Sep 25 13:12:19 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Sat, 25 Sep 2021 13:12:19 -0700
Subject: [geos-devel] GEOSConstrainedDelaunayTriangulation
In-Reply-To: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
References: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
Message-ID: <CAK2ens0TbSQT8r+X3u8z0QjOSuKZrnD2cPi+1A0GkPWRYq4Fow@mail.gmail.com>

Constrained DelaunayTriangulation for polygonal geometry is now available
via geosop:

bin/geosop -a polygons.wkt -f wkt constrainedDelaunay

Performance is equivalent to the JTS version (which is very good). There
seems to be slowness on MultiPolygons for some reason - we'll look into
that soon.

On Thu, Sep 23, 2021 at 2:20 PM Paul Ramsey <pramsey at cleverelephant.ca>
wrote:

> FYI on a big new port dropping from JTS today. Maybe Martin can share some
> pictures.
>
>   - CAPI: GEOSConstrainedDelaunayTriangulation, builds a constrained
> triangulation
>           of an input Polygon or MultiPolygon, returning a
> GeometryCollection(Polygon)
>           of the triangles.
>
>
>
> https://github.com/libgeos/geos/commit/896af228fb27076bdd7f0529d55b3e79e3f10191
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210925/f29ba555/attachment.html>

From pramsey at cleverelephant.ca  Wed Sep 29 09:15:46 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 29 Sep 2021 09:15:46 -0700
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <20210914091206.GC3980@c19>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
Message-ID: <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>

So the next step on the road to 3.10 is an interim release. I'd like to go
right to beta1. If I don't hear any howls in the next 24-48 hours, I will
cut that package so we can get our packager friends to take it for a spin.

P

On Tue, Sep 14, 2021 at 2:12 AM Sandro Santilli <strk at kbt.io> wrote:

> On Tue, Sep 14, 2021 at 06:54:20AM +1000, Nyall Dawson wrote:
> > On Mon, 13 Sept 2021 at 23:09, Sandro Santilli <strk at kbt.io> wrote:
> > >
> > > On Fri, Sep 10, 2021 at 04:03:39PM -0700, Paul Ramsey wrote:
> > > > We may have one last piece of functionality to add to 3.10 (new
> triangulation code) and then will start the count-down to release. If
> you've got work in progress that is suitable for 3.10, this would be a good
> time to bring it home.
> > >
> > > There's an ongoing QGIS bugfix initiative that will end
> > > on October 22nd, in the past such initiative has also
> > > resulted in new GEOS features (PreparedMinDist) so I'd
> > > wait for that date before feature-freeze.
> > >
> >
> > Hi Sandro!
> >
> > > I'm taking part in the initiative so will try to spot
> > > as many GEOS features/enhancements tickets as soon as
> > > possible to have them evidenced and properly targetted
> > > in trac.
> >
> > Great to hear this again! Can I suggest
> > https://github.com/libgeos/geos/issues/472 ("add an optimised
> > GEOSPreparedDistanceIsWithin method") would be a good candidate here?
> > That's an API enhancement which could potentially have huge speed
> > benefits to lots of parts of QGIS (and other GEOS clients).
>
> Sure ! I'll look into that
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210929/18c78ac3/attachment.html>

From strk at kbt.io  Wed Sep 29 10:19:49 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 29 Sep 2021 19:19:49 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
Message-ID: <20210929171949.GB9583@c19>

On Wed, Sep 29, 2021 at 09:15:46AM -0700, Paul Ramsey wrote:
> So the next step on the road to 3.10 is an interim release. I'd like to go
> right to beta1. If I don't hear any howls in the next 24-48 hours, I will
> cut that package so we can get our packager friends to take it for a spin.

I guess I'll try to sneak in a DistanceWithin and
PreparedDistanceWithin signature, to improve later,
do you mind ?

--strk;

From pramsey at cleverelephant.ca  Wed Sep 29 11:19:46 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 29 Sep 2021 11:19:46 -0700
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <20210929171949.GB9583@c19>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
Message-ID: <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>



> On Sep 29, 2021, at 10:19 AM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Wed, Sep 29, 2021 at 09:15:46AM -0700, Paul Ramsey wrote:
>> So the next step on the road to 3.10 is an interim release. I'd like to go
>> right to beta1. If I don't hear any howls in the next 24-48 hours, I will
>> cut that package so we can get our packager friends to take it for a spin.
> 
> I guess I'll try to sneak in a DistanceWithin and
> PreparedDistanceWithin signature, to improve later,
> do you mind ?

A little... I mean, we do want to roll this to release in time for PostGIS 3.2 to sit on top of it. What's your planned schedule?

P

> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Wed Sep 29 12:05:30 2021
From: lr at pcorp.us (Regina Obe)
Date: Wed, 29 Sep 2021 15:05:30 -0400
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
Message-ID: <000401d7b564$f99668a0$ecc339e0$@pcorp.us>

> > On Sep 29, 2021, at 10:19 AM, Sandro Santilli <strk at kbt.io> wrote:
> >
> > On Wed, Sep 29, 2021 at 09:15:46AM -0700, Paul Ramsey wrote:
> >> So the next step on the road to 3.10 is an interim release. I'd like
> >> to go right to beta1. If I don't hear any howls in the next 24-48
> >> hours, I will cut that package so we can get our packager friends to
take it
> for a spin.
> >
> > I guess I'll try to sneak in a DistanceWithin and
> > PreparedDistanceWithin signature, to improve later, do you mind ?
> 
> A little... I mean, we do want to roll this to release in time for PostGIS
3.2 to
> sit on top of it. What's your planned schedule?
> 
> P
> 
> >
> > --strk;
> > _______________________________________________
> > geos-devel mailing list
> > geos-devel at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/geos-devel
>
[Regina Obe] 
Improve later like in 3.10.1?  What applications will be exercising it?
How long do you need to sneak in the change?

BTW according to Myon, they are planning to release PostgreSQL 14 this
Thursday (tomorrow) so I think our PostGIS 3.2.0 is going to be a little
later than PostgreSQL 14 release but hopefully we can coax packagers to
release it.

That said PostGIS release isn't really that impacted by GEOS 3.10 release.
Few packagers are going to be jumping to carry  GEOS 3.10 as I think we
already missed the big OS release cycles.

Packagers please speak up if I have misspoken.


From strk at kbt.io  Wed Sep 29 12:34:50 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 29 Sep 2021 21:34:50 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
Message-ID: <20210929193450.GC9583@c19>

On Wed, Sep 29, 2021 at 11:19:46AM -0700, Paul Ramsey wrote:
> 
> 
> > On Sep 29, 2021, at 10:19 AM, Sandro Santilli <strk at kbt.io> wrote:
> > 
> > On Wed, Sep 29, 2021 at 09:15:46AM -0700, Paul Ramsey wrote:
> >> So the next step on the road to 3.10 is an interim release. I'd like to go
> >> right to beta1. If I don't hear any howls in the next 24-48 hours, I will
> >> cut that package so we can get our packager friends to take it for a spin.
> > 
> > I guess I'll try to sneak in a DistanceWithin and
> > PreparedDistanceWithin signature, to improve later,
> > do you mind ?
> 
> A little... I mean, we do want to roll this to release in time for PostGIS 3.2 to sit on top of it. What's your planned schedule?

I'm on it now, will be ready (it's just stubs) in a few hours.

--strk;

From pramsey at cleverelephant.ca  Wed Sep 29 12:36:38 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Wed, 29 Sep 2021 12:36:38 -0700
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <20210929193450.GC9583@c19>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19>
Message-ID: <33029D7D-0DC2-4ADE-9032-3105A15D6948@cleverelephant.ca>



> On Sep 29, 2021, at 12:34 PM, Sandro Santilli <strk at kbt.io> wrote:
> 
> On Wed, Sep 29, 2021 at 11:19:46AM -0700, Paul Ramsey wrote:
>> 
>> 
>>> On Sep 29, 2021, at 10:19 AM, Sandro Santilli <strk at kbt.io> wrote:
>>> 
>>> On Wed, Sep 29, 2021 at 09:15:46AM -0700, Paul Ramsey wrote:
>>>> So the next step on the road to 3.10 is an interim release. I'd like to go
>>>> right to beta1. If I don't hear any howls in the next 24-48 hours, I will
>>>> cut that package so we can get our packager friends to take it for a spin.
>>> 
>>> I guess I'll try to sneak in a DistanceWithin and
>>> PreparedDistanceWithin signature, to improve later,
>>> do you mind ?
>> 
>> A little... I mean, we do want to roll this to release in time for PostGIS 3.2 to sit on top of it. What's your planned schedule?
> 
> I'm on it now, will be ready (it's just stubs) in a few hours.

The implication being we'll roll a big change into a micro release later on? This is also Less Than Ideal, even if the API remains constant, I would think.

P

> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel


From lr at pcorp.us  Wed Sep 29 12:39:08 2021
From: lr at pcorp.us (Regina Obe)
Date: Wed, 29 Sep 2021 15:39:08 -0400
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <20210929193450.GC9583@c19>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19>
Message-ID: <000c01d7b569$ac4e5fd0$04eb1f70$@pcorp.us>

> On Wed, Sep 29, 2021 at 11:19:46AM -0700, Paul Ramsey wrote:
> >
> >
> > > On Sep 29, 2021, at 10:19 AM, Sandro Santilli <strk at kbt.io> wrote:
> > >
> > > On Wed, Sep 29, 2021 at 09:15:46AM -0700, Paul Ramsey wrote:
> > >> So the next step on the road to 3.10 is an interim release. I'd
> > >> like to go right to beta1. If I don't hear any howls in the next
> > >> 24-48 hours, I will cut that package so we can get our packager
friends to
> take it for a spin.
> > >
> > > I guess I'll try to sneak in a DistanceWithin and
> > > PreparedDistanceWithin signature, to improve later, do you mind ?
> >
> > A little... I mean, we do want to roll this to release in time for
PostGIS 3.2 to
> sit on top of it. What's your planned schedule?
> 
> I'm on it now, will be ready (it's just stubs) in a few hours.
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
[Regina Obe] 
So you are putting in non-functional features to be functional in 3.10.1?
I don't like that idea at all.  Reason is then we'd have to worry about
3.10.0 can not do something that 3.10.1 can do.

It really should wait for 3.11 after Paul has flipped release version.

-1 to sneaking in a stub


From me at komzpa.net  Wed Sep 29 12:59:17 2021
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Wed, 29 Sep 2021 22:59:17 +0300
Subject: [geos-devel] GEOSConstrainedDelaunayTriangulation
In-Reply-To: <CAK2ens0TbSQT8r+X3u8z0QjOSuKZrnD2cPi+1A0GkPWRYq4Fow@mail.gmail.com>
References: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
 <CAK2ens0TbSQT8r+X3u8z0QjOSuKZrnD2cPi+1A0GkPWRYq4Fow@mail.gmail.com>
Message-ID: <CAC8Q8tJ_U3ikcKL8DTdbnMzgPk=GXF-Rc747Ko4OUKY0X_=xcg@mail.gmail.com>

Hi,

After some thought, naming is terribly off and would cause a mess. The
thing should be called GEOSTesselate or GEOSTriangulatePolygon but not just
GEOSConstrainedDelaunayTriangulation.

 - the function implemented in GEOS under name of
GEOSConstrainedDelaunayTriangulation is priorly called ST_Tesselate in
SFCGAL / PostGIS.

 - ear clipping algorithm does not produce a Delaunay triangulation. In
Vladimir Agafonkin's earcut it's referenced as "polygon triangulation". The
docs referenced from its readme call alternative implementations "tesselator".
It is the name I know well from 3D graphics.

 - ST_ConstrainedDelaunayTriangles exists in PostGIS and does not
correspod to what  GEOSConstrainedDelaunayTriangulation now does.

 - https://www.cs.jhu.edu/~misha/Spring20/Chew87.pdf calls the different
thing a Constrained Delaunay Triangulation. It is not limited to interior
of polygons but just accepts any edges as constraints.


On Sat, Sep 25, 2021 at 11:12 PM Martin Davis <mtnclimb at gmail.com> wrote:

> Constrained DelaunayTriangulation for polygonal geometry is now available
> via geosop:
>
> bin/geosop -a polygons.wkt -f wkt constrainedDelaunay
>
> Performance is equivalent to the JTS version (which is very good). There
> seems to be slowness on MultiPolygons for some reason - we'll look into
> that soon.
>
> On Thu, Sep 23, 2021 at 2:20 PM Paul Ramsey <pramsey at cleverelephant.ca>
> wrote:
>
>> FYI on a big new port dropping from JTS today. Maybe Martin can share
>> some pictures.
>>
>>   - CAPI: GEOSConstrainedDelaunayTriangulation, builds a constrained
>> triangulation
>>           of an input Polygon or MultiPolygon, returning a
>> GeometryCollection(Polygon)
>>           of the triangles.
>>
>>
>>
>> https://github.com/libgeos/geos/commit/896af228fb27076bdd7f0529d55b3e79e3f10191
>> _______________________________________________
>> geos-devel mailing list
>> geos-devel at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/geos-devel
>>
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210929/272d8fc1/attachment.html>

From strk at kbt.io  Wed Sep 29 12:59:56 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 29 Sep 2021 21:59:56 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <000c01d7b569$ac4e5fd0$04eb1f70$@pcorp.us>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19>
 <000c01d7b569$ac4e5fd0$04eb1f70$@pcorp.us>
Message-ID: <20210929195956.GD9583@c19>

On Wed, Sep 29, 2021 at 03:39:08PM -0400, Regina Obe wrote:
> -1 to sneaking in a stub

Ehm, too late.
I could add a bounding box check, so it's less of a stub ?

--strk;

From strk at kbt.io  Wed Sep 29 13:08:41 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 29 Sep 2021 22:08:41 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <33029D7D-0DC2-4ADE-9032-3105A15D6948@cleverelephant.ca>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19>
 <33029D7D-0DC2-4ADE-9032-3105A15D6948@cleverelephant.ca>
Message-ID: <20210929200841.GE9583@c19>

On Wed, Sep 29, 2021 at 12:36:38PM -0700, Paul Ramsey wrote:
> 
> 
> > On Sep 29, 2021, at 12:34 PM, Sandro Santilli <strk at kbt.io> wrote:
> > 
> > On Wed, Sep 29, 2021 at 11:19:46AM -0700, Paul Ramsey wrote:
> >> 
> >> 
> >>> On Sep 29, 2021, at 10:19 AM, Sandro Santilli <strk at kbt.io> wrote:
> >>> 
> >>> On Wed, Sep 29, 2021 at 09:15:46AM -0700, Paul Ramsey wrote:
> >>>> So the next step on the road to 3.10 is an interim release. I'd like to go
> >>>> right to beta1. If I don't hear any howls in the next 24-48 hours, I will
> >>>> cut that package so we can get our packager friends to take it for a spin.
> >>> 
> >>> I guess I'll try to sneak in a DistanceWithin and
> >>> PreparedDistanceWithin signature, to improve later,
> >>> do you mind ?
> >> 
> >> A little... I mean, we do want to roll this to release in time for PostGIS 3.2 to sit on top of it. What's your planned schedule?
> > 
> > I'm on it now, will be ready (it's just stubs) in a few hours.
> 
> The implication being we'll roll a big change into a micro release later on? This is also Less Than Ideal, even if the API remains constant, I would think.

I'll try making it less than a stub.
I just discovered we DO have a Geometry::isWithinDistance(),
which is basically also a stub, as it does NOT currently
use the DistanceOp support for early terminating the
computations. Might improve that as well.

Not sure how to possibly improve the PreparedWithinDistance
though, as maybe there's not much to improve there.

--strk;

From me at komzpa.net  Wed Sep 29 13:09:11 2021
From: me at komzpa.net (=?UTF-8?Q?Darafei_=22Kom=D1=8Fpa=22_Praliaskouski?=)
Date: Wed, 29 Sep 2021 23:09:11 +0300
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <20210929195956.GD9583@c19>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19> <000c01d7b569$ac4e5fd0$04eb1f70$@pcorp.us>
 <20210929195956.GD9583@c19>
Message-ID: <CAC8Q8tKoEkGB3UJiWb_gMyrXY4k-mgUdiJqg66Yzk8Oh4SRxBA@mail.gmail.com>

-1 on the approach. A non-functioning signature in the ABI that will get
eventually called by real code expecting it to work is sabotage.

It won't hurt to get 3.11 out faster than usual if that's a really cool
thing. We can also use a small pause for Tessleation naming fixup.

On Wed, Sep 29, 2021 at 11:00 PM Sandro Santilli <strk at kbt.io> wrote:

> On Wed, Sep 29, 2021 at 03:39:08PM -0400, Regina Obe wrote:
> > -1 to sneaking in a stub
>
> Ehm, too late.
> I could add a bounding box check, so it's less of a stub ?
>
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210929/fe3850f2/attachment.html>

From strk at kbt.io  Wed Sep 29 13:12:37 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 29 Sep 2021 22:12:37 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <CAC8Q8tKoEkGB3UJiWb_gMyrXY4k-mgUdiJqg66Yzk8Oh4SRxBA@mail.gmail.com>
References: <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19>
 <000c01d7b569$ac4e5fd0$04eb1f70$@pcorp.us>
 <20210929195956.GD9583@c19>
 <CAC8Q8tKoEkGB3UJiWb_gMyrXY4k-mgUdiJqg66Yzk8Oh4SRxBA@mail.gmail.com>
Message-ID: <20210929201237.GF9583@c19>

On Wed, Sep 29, 2021 at 11:09:11PM +0300, Darafei "Kom?pa" Praliaskouski wrote:
> -1 on the approach. A non-functioning signature in the ABI that will get
> eventually called by real code expecting it to work is sabotage.

I didn't say it would be non-functioning. It would do EXACTLY what
you'd guess from it. Just not necessarely highly optimized yet.


--strk;

From lr at pcorp.us  Wed Sep 29 13:16:00 2021
From: lr at pcorp.us (Regina Obe)
Date: Wed, 29 Sep 2021 16:16:00 -0400
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <20210929200841.GE9583@c19>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19>
 <33029D7D-0DC2-4ADE-9032-3105A15D6948@cleverelephant.ca>
 <20210929200841.GE9583@c19>
Message-ID: <001f01d7b56e$d2af68e0$780e3aa0$@pcorp.us>

> > > I'm on it now, will be ready (it's just stubs) in a few hours.
> >
> > The implication being we'll roll a big change into a micro release later
on?
> This is also Less Than Ideal, even if the API remains constant, I would
think.
> 
> I'll try making it less than a stub.
> I just discovered we DO have a Geometry::isWithinDistance(), which is
> basically also a stub, as it does NOT currently use the DistanceOp support
for
> early terminating the computations. Might improve that as well.
> 
> Not sure how to possibly improve the PreparedWithinDistance though, as
> maybe there's not much to improve there.
> 
> --strk;
[Regina Obe] 
If you are simply exposing functionality that was already in C++ API in the
C-API then I retract my -1.  If you are doing more than that - like planning
to rewrite said C++ logic, my -1 stands.


From strk at kbt.io  Wed Sep 29 13:28:31 2021
From: strk at kbt.io (Sandro Santilli)
Date: Wed, 29 Sep 2021 22:28:31 +0200
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <001f01d7b56e$d2af68e0$780e3aa0$@pcorp.us>
References: <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <20210929193450.GC9583@c19>
 <33029D7D-0DC2-4ADE-9032-3105A15D6948@cleverelephant.ca>
 <20210929200841.GE9583@c19>
 <001f01d7b56e$d2af68e0$780e3aa0$@pcorp.us>
Message-ID: <20210929202831.GG9583@c19>

On Wed, Sep 29, 2021 at 04:16:00PM -0400, Regina Obe wrote:

> If you are simply exposing functionality that was already in C++ API in the
> C-API then I retract my -1.  If you are doing more than that - like planning
> to rewrite said C++ logic, my -1 stands.

I'm just exposing already present C++ functionality.

For GEOSDistanceWithin I've actually used already existing
Geometry::isDistanceWithin and I've now also actually hooked
it to DistanceOp::isDistanceWithin (not previously hooked)

For GEOSPreparedDistanceWithin I'm just using GEOSPreparedDistance
and checking if distance is within the given value (might improve
that next)

--strk;

From mtnclimb at gmail.com  Wed Sep 29 13:47:04 2021
From: mtnclimb at gmail.com (Martin Davis)
Date: Wed, 29 Sep 2021 13:47:04 -0700
Subject: [geos-devel] GEOSConstrainedDelaunayTriangulation
In-Reply-To: <CAC8Q8tJ_U3ikcKL8DTdbnMzgPk=GXF-Rc747Ko4OUKY0X_=xcg@mail.gmail.com>
References: <8407BBAF-ECC0-4D43-9C42-9478A1D3BDB8@cleverelephant.ca>
 <CAK2ens0TbSQT8r+X3u8z0QjOSuKZrnD2cPi+1A0GkPWRYq4Fow@mail.gmail.com>
 <CAC8Q8tJ_U3ikcKL8DTdbnMzgPk=GXF-Rc747Ko4OUKY0X_=xcg@mail.gmail.com>
Message-ID: <CAK2ens2upNOJ5oVaRKrsa9pVV+XcHd4jnn4gVn=De-_mJxG6MA@mail.gmail.com>

The naming of ConstrainedDelaunayTriangulation is deliberate.  It *is* a
Constrained Delaunay Triangulation that currently works only on polygonal
inputs.  The implementation of the Ear-Clipping algorithm is done in
PolygonTriangulator [1].  The ConstrainedDelaunayTriangulator uses that
triangulation as input, and "improves" it to be a true CDT of polygons.

The hope/intent is to expand the CDT functionality to handle more general
(i.e. linear) constraints in the future.  But that does not mean that it
can't be called CDT now.

Tesselate just means "a tiling of some sort", and does not imply the more
specific case of Constrained Delaunay Triangulation. As far as I can tell
this terminology was introduced by SFCGAL, and in fact SFCGAL implements it
using ConstrainedDelaunayTriangulation [3].  I don't know why they
introduced a new term for this (anyone have an insight into this?)

Also, IMO there is no requirement that PostGIS and GEOS terminology align.
PostGIS has a different pedigree and set of dependencies.  If this gets
exposes as ST_Tesselate then that's fine.  But that's a separate discussion
that should be had when the PostGIS bindings are worked on.

[1]
https://git.osgeo.org/gitea/geos/geos/src/branch/main/src/triangulate/polygon/PolygonTriangulator.cpp
[2]
https://git.osgeo.org/gitea/geos/geos/src/branch/main/src/triangulate/polygon/ConstrainedDelaunayTriangulator.cpp
[3]
https://gitlab.com/Oslandia/SFCGAL/-/blob/master/src/triangulate/triangulatePolygon.cpp#L161

On Wed, Sep 29, 2021 at 12:59 PM Darafei "Kom?pa" Praliaskouski <
me at komzpa.net> wrote:

> Hi,
>
> After some thought, naming is terribly off and would cause a mess. The
> thing should be called GEOSTesselate or GEOSTriangulatePolygon but not just
> GEOSConstrainedDelaunayTriangulation.
>
>  - the function implemented in GEOS under name of
> GEOSConstrainedDelaunayTriangulation is priorly called ST_Tesselate in
> SFCGAL / PostGIS.
>
>  - ear clipping algorithm does not produce a Delaunay triangulation. In
> Vladimir Agafonkin's earcut it's referenced as "polygon triangulation". The
> docs referenced from its readme call alternative implementations "tesselator".
> It is the name I know well from 3D graphics.
>
>  - ST_ConstrainedDelaunayTriangles exists in PostGIS and does not
> correspod to what  GEOSConstrainedDelaunayTriangulation now does.
>
>  - https://www.cs.jhu.edu/~misha/Spring20/Chew87.pdf calls the different
> thing a Constrained Delaunay Triangulation. It is not limited to interior
> of polygons but just accepts any edges as constraints.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210929/70389eab/attachment.html>

From mwtoews at gmail.com  Wed Sep 29 14:29:43 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 30 Sep 2021 10:29:43 +1300
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
Message-ID: <CAM2FmMoYjXOWk+xzkufaNPz3hazmpzCMumE0HhDGn1Kt0L8xnQ@mail.gmail.com>

On Thu, 30 Sept 2021 at 05:16, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
> So the next step on the road to 3.10 is an interim release. I'd like to go right to beta1. If I don't hear any howls in the next 24-48 hours, I will cut that package so we can get our packager friends to take it for a spin.

I have two pull requests that are ready to review:
- https://github.com/libgeos/geos/pull/445
- https://github.com/libgeos/geos/pull/447

From gdt at lexort.com  Wed Sep 29 17:12:59 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 29 Sep 2021 20:12:59 -0400
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <000401d7b564$f99668a0$ecc339e0$@pcorp.us> (Regina Obe's message
 of "Wed, 29 Sep 2021 15:05:30 -0400")
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <20210929171949.GB9583@c19>
 <45CD47C6-DBA1-4FB2-ACB5-6A92618D615A@cleverelephant.ca>
 <000401d7b564$f99668a0$ecc339e0$@pcorp.us>
Message-ID: <rmiee96apkk.fsf@s1.lexort.com>


"Regina Obe" <lr at pcorp.us> writes:

> BTW according to Myon, they are planning to release PostgreSQL 14 this
> Thursday (tomorrow) so I think our PostGIS 3.2.0 is going to be a little
> later than PostgreSQL 14 release but hopefully we can coax packagers to
> release it.
>
> That said PostGIS release isn't really that impacted by GEOS 3.10 release.
> Few packagers are going to be jumping to carry  GEOS 3.10 as I think we
> already missed the big OS release cycles.
>
> Packagers please speak up if I have misspoken.

I think there are more packaging systems than anybody really knows about
with all sorts of release cycles.  My reactions to the larger picture
is:

  a beta1 means that it's thought to be pretty close, and definitely
  feature freeze, and that it needs more shaking out and testing than an
  rc.  The idea of adding in features that aren't already working in
  main/trunk/master/whatever post beta seems off.  If we are talking
  release within 15 or maybe even 30 days adding features seems too
  much regardless of what it's called.


  As a packager I don't care if 3.11 comes only a month or two after
  3.10.  I would like to know that 3.10.x is just bugfixes and no
  API/ABI breaks and therefore safe to update within a stable packaging
  branch.

  What really hurts in packaging is needing to synchronize things.  The
  upcoming postgis release needs to work with a bunch of pgsql versions,
  not necessarily IMHO the released-tomorrow one, and it should work
  with all geos versions releaseed a year ago or more recently.

  With 3.10, I'd want to read NEWS to see if there any impacts onn
  existing code.  With any luck, nothing is withdrawn that any even
  semi-maintained depending package uses, and all will build and work.
  
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210929/7a6226a1/attachment-0001.sig>

From gdt at lexort.com  Wed Sep 29 17:17:10 2021
From: gdt at lexort.com (Greg Troxel)
Date: Wed, 29 Sep 2021 20:17:10 -0400
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <CAM2FmMoYjXOWk+xzkufaNPz3hazmpzCMumE0HhDGn1Kt0L8xnQ@mail.gmail.com>
 (Mike Taves's message of "Thu, 30 Sep 2021 10:29:43 +1300")
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <CAM2FmMoYjXOWk+xzkufaNPz3hazmpzCMumE0HhDGn1Kt0L8xnQ@mail.gmail.com>
Message-ID: <rmia6juapdl.fsf@s1.lexort.com>


Mike Taves <mwtoews at gmail.com> writes:

> On Thu, 30 Sept 2021 at 05:16, Paul Ramsey <pramsey at cleverelephant.ca> wrote:
>> So the next step on the road to 3.10 is an interim release. I'd like
>> to go right to beta1. If I don't hear any howls in the next 24-48
>> hours, I will cut that package so we can get our packager friends to
>> take it for a spin.
>
> I have two pull requests that are ready to review:
> - https://github.com/libgeos/geos/pull/445
> - https://github.com/libgeos/geos/pull/447

is this support already present in autoconf, and this is just cmake
catching up?

AIUI autoconf is still at least supported, and it's what pkgsrc is
using.

(In general, I find that every time a package switches to cmake it
requires a bunch of patching of cmakefiles.  Often they have "ifdef
FooOS" rather than  feature tests, but perhaps geos is free of that.)
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 194 bytes
Desc: not available
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210929/4fde397a/attachment.sig>

From mwtoews at gmail.com  Wed Sep 29 18:29:38 2021
From: mwtoews at gmail.com (Mike Taves)
Date: Thu, 30 Sep 2021 14:29:38 +1300
Subject: [geos-devel] The Road to 3.10
In-Reply-To: <rmia6juapdl.fsf@s1.lexort.com>
References: <B8F539AB-A597-492C-9200-2D405FD49906@cleverelephant.ca>
 <20210913130038.GA1918@c19>
 <CAB28AsiywjjqcGJJa4=XXtCN59eHW4xHVmAyOtEvQFL43rr0Ew@mail.gmail.com>
 <20210914091206.GC3980@c19>
 <CACowWR3LQNRc1WcSKKcVaD64gHp5Dm96k9U9E3mADVJfUQEK-A@mail.gmail.com>
 <CAM2FmMoYjXOWk+xzkufaNPz3hazmpzCMumE0HhDGn1Kt0L8xnQ@mail.gmail.com>
 <rmia6juapdl.fsf@s1.lexort.com>
Message-ID: <CAM2FmMrMa47JRL15iUtSe2moL7DYp7yhPp5TwU1h31KEacLRUA@mail.gmail.com>

On Thu, 30 Sep 2021, 13:17 Greg Troxel, <gdt at lexort.com> wrote:

>
> is this support already present in autoconf, and this is just cmake
> catching up?
>
> AIUI autoconf is still at least supported, and it's what pkgsrc is
> using.
>
> (In general, I find that every time a package switches to cmake it
> requires a bunch of patching of cmakefiles.  Often they have "ifdef
> FooOS" rather than  feature tests, but perhaps geos is free of that.)
>

See https://trac.osgeo.org/geos/wiki/RFC7

This will be the first GEOS release with only CMake. Ideally, patches can
be discovered thru betas, then applied before the release.

>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20210930/e58e82ee/attachment.html>

From pramsey at cleverelephant.ca  Thu Sep 30 15:12:40 2021
From: pramsey at cleverelephant.ca (Paul Ramsey)
Date: Thu, 30 Sep 2021 15:12:40 -0700
Subject: [geos-devel] 3.10.0beta1
Message-ID: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>

Here it is...

http://download.osgeo.org/geos/geos-3.10.0beta1.tar.bz2

Login to wiki is broken right now, so it's not on the web, but since this is testing time I guess that's not a big deal.

P.

From sebastic at xs4all.nl  Thu Sep 30 23:39:56 2021
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 1 Oct 2021 08:39:56 +0200
Subject: [geos-devel] 3.10.0beta1
In-Reply-To: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
References: <8B5DFB51-270E-445D-9824-C5F79594EED0@cleverelephant.ca>
Message-ID: <46763144-6ec2-1af5-f4b6-0f37b3f15696@xs4all.nl>

On 10/1/21 12:12 AM, Paul Ramsey wrote:
> http://download.osgeo.org/geos/geos-3.10.0beta1.tar.bz2
> 
> Login to wiki is broken right now, so it's not on the web, but since this is testing time I guess that's not a big deal.

Since we cannot login to trac, reporting this issue here:

386/388 Test #388: test_docs
..................................................***Failed    0.09 sec
-- Doxygen issued 2121 warning(s), see
/build/geos-3.10.0~beta1/build/doc/doxygen.log
CMake Error at check_doxygen_errors.cmake:44 (message):
  /build/geos-3.10.0~beta1/build/capi/geos_c.h:254: warning: argument
  'return' of command @param is not found in the argument list of
  GEOSDistanceCallback(const void *item1, const void *item2, double
  *distance, void *userdata)

    parameter 'distance'

Kind Regards,

Bas

-- 
 GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

