From strk at refractions.net  Tue Nov  1 04:41:08 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] IsValidOp.cpp still uses function finite()
In-Reply-To: <67c229320510310852g4b1b2335p@mail.gmail.com>
References: <67c229320510310852g4b1b2335p@mail.gmail.com>
Message-ID: <20051101094108.GB73131@keybit.net>

On Mon, Oct 31, 2005 at 06:52:28PM +0200, Niki Spahiev wrote:
> IsValidOp.cpp still uses function finite()
> Maybe should be replaced with FINITE() macro?

Agreed. Committed in 2.1 and HEAD branches

--strk;

From niki.spahiev at gmail.com  Wed Nov  2 11:36:03 2005
From: niki.spahiev at gmail.com (Niki Spahiev)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] geos failing on buffer(0) and Union
Message-ID: <67c229320511020836w7cc0e9c9v@mail.gmail.com>

I encountered two cases where geos is failing on buffer(0) and Union.
Any hints how to resolve them?

Niki Spahiev
-------------- next part --------------
POLYGON ((-304.6250000000000000 -195.7110000000000100, -296.3120000000000100 -158.9069999999999800, -296.2040000000000100 -158.6550000000000000, -275.3030000000000000 -127.2399999999999900, -75.3029999999999970 72.7600000000000050, -22.2330000000000010 73.7090000000000030, 577.7670000000000500 73.7090000000000030, 777.7670000000000500 -126.2910000000000000, 767.4629999999999700 -130.2230000000000100, 757.8260000000000200 -135.5879999999999900, 749.0570000000000200 -142.2740000000000000, 741.3300000000000400 -150.1480000000000000, 734.8139999999999600 -159.0350000000000000, 729.6269999999999500 -168.7740000000000000, 725.8859999999999700 -179.1529999999999900, 723.6680000000000100 -189.9520000000000000, 723.0159999999999600 -200.9619999999999900, 723.9429999999999800 -211.9480000000000100, 726.4289999999999700 -222.6870000000000100, 730.4270000000000200 -232.9689999999999900, 735.8540000000000400 -242.5759999999999900, 741.6161057934513100 -250.0351057934512900, 752.0919999999999800 -260.5110000000000200, 752.1530000000000200 -261.6900000000000000, 736.6570000000000400 -280.1569999999999800, 735.4189999999999800 -280.2649999999999900, -264.5810000000000200 -280.2649999999999900, -280.6580000000000200 -266.7740000000000000, -280.8329999999999700 -266.5629999999999900, -299.1780000000000000 -233.5910000000000100, -299.2660000000000200 -233.3310000000000200, -304.6359999999999700 -195.9850000000000100, -304.6250000000000000 -195.7110000000000100))
POLYGON ((-275.3030000000000000 -127.2399999999999900, 724.6970000000000000 -127.2399999999999900, 777.7670000000000500 -126.2910000000000000, 788.5270000000000400 -123.8690000000000000, 588.5270000000000400 76.1310000000000000, -11.4730000000000010 76.1310000000000000, -75.3029999999999970 72.7600000000000050, -275.3030000000000000 -127.2399999999999900))
POLYGON ((-189.4830000000000000 -123.7309999999999900, 810.5170000000000500 -123.7309999999999900, 610.5170000000000500 76.2690000000000050, 555.6230000000000500 94.8439999999999940, -44.3770000000000020 94.8439999999999940, -244.3770000000000100 -105.1560000000000100, -200.4730000000000100 -123.0120000000000000, -189.4830000000000000 -123.7309999999999900))
POLYGON ((-178.6790000000000000 -126.0210000000000000, 821.3210000000000300 -126.0210000000000000, 792.3940000000000100 -95.5639999999999930, 592.3940000000000100 104.4360000000000100, -7.6059999999999999 104.4360000000000100, -44.1280000000000000 94.9599999999999940, -44.3770000000000020 94.8439999999999940, -244.3770000000000100 -105.1560000000000100, -189.4830000000000000 -123.7309999999999900, -178.6790000000000000 -126.0210000000000000))
-------------- next part --------------
POLYGON ((1304.6360000000000000 -204.0149999999999900, 1304.6250000000000000 -204.2889999999999900, 1296.3119999999999000 -241.0930000000000200, 1296.2040000000000000 -241.3450000000000000, 1275.3029999999999000 -272.7599999999999900, 1275.1120000000001000 -272.9569999999999900, 1244.3770000000000000 -294.8439999999999900, 1244.1279999999999000 -294.9599999999999800, 1207.6060000000000000 -304.4360000000000400, 1207.3330000000001000 -304.4549999999999800, -192.6670000000000000 -304.4549999999999800, -230.1649999999999900 -300.2730000000000200, -230.4280000000000000 -300.1940000000000200, -263.9650000000000300 -282.9040000000000000, -264.1820000000000200 -282.7359999999999900, -289.3410000000000100 -254.6159999999999900, -289.4839999999999800 -254.3820000000000100, -302.9499999999999900 -219.1349999999999900, -303.0000000000000000 -218.8650000000000100, -303.0000000000000000 -197.8789999999999900, -303.0000000000000000 881.1349999999999900, -303.0000000000000000 902.1209999999999800, -302.1209999999999800 903.0000000000000000, -152.1529999999999900 903.0000000000000000, -152.1529999999999900 961.6900000000000500, -136.6569999999999800 980.1570000000000400, -135.4189999999999800 980.2649999999999900, 1264.5809999999999000 980.2649999999999900, 1280.6579999999999000 966.7740000000000000, 1280.8330000000001000 966.5629999999999900, 1299.1779999999999000 933.5910000000000100, 1299.2660000000001000 933.3310000000000200, 1304.6360000000000000 895.9850000000000100, 1304.6360000000000000 -204.0149999999999900), (129.3905026986662400 119.0122316975067300, 137.8100000000000000 114.5279999999999900, 148.1890000000000200 110.7869999999999900, 158.9880000000000000 108.5690000000000000, 169.9979999999999900 107.9170000000000000, 179.7700456084050700 108.7415663825770500, 190.4850000000000100 111.2219999999999900, 200.7670000000000000 115.2200000000000000, 210.3740000000000200 120.6469999999999900, 219.0989999999999900 127.3870000000000000, 228.3090000000000300 136.8849999999999900, 229.5470000000000300 136.9929999999999900, 230.7260000000000000 137.0540000000000000, 249.1929999999999800 121.5579999999999900, 265.2699999999999800 108.0669999999999900, 265.4449999999999900 107.8559999999999900, 280.7961129139876000 80.2650000000000010, 897.0000000000000000 80.2650000000000010, 897.0000000000000000 595.5449999999999600, 104.6360000000000000 595.5449999999999600, 104.6360000000000000 173.8647911923866600, 108.1250000000000000 170.9370000000000100, 108.3000000000000000 170.7260000000000000, 126.6450000000000000 137.7539999999999900, 126.7330000000000000 137.4940000000000000, 129.3905026986662400 119.0122316975067300))
POLYGON ((86.2986528212450990 64.7330497365709760, 85.6680000000000060 72.2069999999999940, 83.1820000000000020 82.9459999999999980, 79.1839999999999970 93.2279999999999940, 73.7570000000000050 102.8349999999999900, 67.0169999999999960 111.5600000000000000, 57.5190000000000050 120.7700000000000000, 57.4580000000000060 121.9489999999999800, 76.0329999999999870 176.8429999999999900, 91.5289999999999960 195.3100000000000000, 92.7669999999999960 195.4180000000000100, 108.8439999999999900 181.9269999999999900, 109.0189999999999900 181.7160000000000100, 127.3639999999999900 148.7440000000000000, 127.4520000000000000 148.4839999999999800, 132.8220000000000000 111.1379999999999900, 132.8109999999999800 110.8639999999999900, 132.0919999999999800 99.8739999999999950, 123.7790000000000000 63.0699999999999930, 105.9230000000000000 19.1659999999999900, 105.8150000000000000 18.9139999999999940, 84.9140000000000010 -12.5010000000000120, 84.7229999999999990 -12.6980000000000000, 53.9880000000000070 -34.5850000000000010, 53.7390000000000040 -34.7010000000000010, 17.2170000000000060 -44.1770000000000140, 16.9440000000000030 -44.1960000000000050, -20.5539999999999950 -40.0140000000000030, -20.8169999999999970 -39.9350000000000090, -54.3539999999999990 -22.6450000000000030, -54.5709999999999980 -22.4770000000000110, -79.7299999999999900 5.6429999999999936, -79.8729999999999900 5.8769999999999953, -93.3389999999999990 41.1239999999999950, -93.3889999999999960 41.3939999999999910, -93.3889999999999960 62.3799999999999950, -74.8140000000000070 117.2739999999999900, -73.9350000000000020 118.1529999999999900, -49.8260000000000080 118.1519999999999900, -48.9630000000000080 117.3479999999999800, -48.0150000000000010 104.1579999999999900, -45.6600000000000110 93.3769999999999950, -41.7940000000000110 83.0579999999999930, -36.4840000000000090 73.3789999999999910, -29.8570000000000060 64.5719999999999890, -22.0350000000000040 56.7979999999999950, -13.1810000000000040 50.2219999999999940, -3.4730000000000061 44.9729999999999850, 6.8649999999999913 41.1739999999999920, 17.6689999999999930 38.8839999999999860, 28.6589999999999920 38.1649999999999920, 39.6589999999999920 39.0219999999999910, 50.4189999999999970 41.4439999999999880, 60.7229999999999920 45.3759999999999910, 70.3599999999999850 50.7409999999999850, 79.1289999999999910 57.4269999999999920, 86.2986528212450990 64.7330497365709760))
From niki.spahiev at gmail.com  Wed Nov  2 11:30:04 2005
From: niki.spahiev at gmail.com (Niki Spahiev)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] PointCoordinateSequence
Message-ID: <67c229320511020830x44316862p@mail.gmail.com>

Classes PointCoordinateSequence and PointCoordinateSequenceFactory are
still in header files while implementation files are missing from
HEAD.

What is the plan for them?

Niki Spahiev

From strk at refractions.net  Thu Nov  3 03:37:52 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] PointCoordinateSequence
In-Reply-To: <67c229320511020830x44316862p@mail.gmail.com>
References: <67c229320511020830x44316862p@mail.gmail.com>
Message-ID: <20051103083752.GB24387@keybit.net>

The plan is dropping them.
I'll take 'hem off the headers.
--strk;

On Wed, Nov 02, 2005 at 06:30:04PM +0200, Niki Spahiev wrote:
> Classes PointCoordinateSequence and PointCoordinateSequenceFactory are
> still in header files while implementation files are missing from
> HEAD.
> 
> What is the plan for them?
> 
> Niki Spahiev
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From strk at refractions.net  Mon Nov  7 05:44:47 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] Win32 porting
In-Reply-To: <931f8ea90510201952o41d80165jea30e94e554a6f70@mail.gmail.com>
References: <931f8ea90510201952o41d80165jea30e94e554a6f70@mail.gmail.com>
Message-ID: <20051107104447.GC75704@keybit.net>

On Thu, Oct 20, 2005 at 10:52:09PM -0400, Frank Warmerdam wrote:
> Folks,
> 
> I have commited a variety of updates to GEOS related to
> win32 porting.  I'm not sure this is a comprehensive list but
> it is the main points.
> 
>  o source/Makefile.vc updated to include changed file list,
>     to build DLL and to build geostest.exe.
>  o capi/geostest.c: avoid use of non-portable "vasprintf" and
>     make large buffer static instead of placing it on the stack.
>  o capi/geos_c.h.in, capi/geos_c.cpp: Added GEOS_DLL
>    macro and incorporated into all prototypes so that functions
>    are exported from the DLL.
> 
> Is the VisualStudio directory being maintained?  If not, I would
> like permission to remove it.  It confused me, so I imagine
> it will confuse others.

Since nobody answered I think you can safely remove it.

> I will note that win32 builds are complicated by the need to manually
> add version information in version.h and geos_c.h.  Will these
> files be distributed with version info embedded in release snapshots?

Currently not, they are created by ./configure.

> I was able to use geostest.exe linked against the GEOS DLL.
> C++ programs cannot use the DLL since the C++ API is not
> exported.

What I'd really like to do is provide a narrower API for C++
as well. I hate being unable to touch anything w/out breaking
the *huge* API. We might move Doxygen documentation, DLL
exports and all to geos.h and completely avoiding to install 
other internal headers. How many users will be influenced by
such a change (I can only think of FME) ?

--strk;

From warmerdam at pobox.com  Mon Nov  7 08:21:16 2005
From: warmerdam at pobox.com (Frank Warmerdam)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] Win32 porting
In-Reply-To: <20051107104447.GC75704@keybit.net>
References: <931f8ea90510201952o41d80165jea30e94e554a6f70@mail.gmail.com>
	<20051107104447.GC75704@keybit.net>
Message-ID: <931f8ea90511070521l6da05523j1ff815204fe515fa@mail.gmail.com>

On 11/7/05, strk@refractions.net <strk@refractions.net> wrote:
> > Is the VisualStudio directory being maintained?  If not, I would
> > like permission to remove it.  It confused me, so I imagine
> > it will confuse others.
>
> Since nobody answered I think you can safely remove it.

Strk,

OK, I think I have removed this subtree from CVS successfully.

> > I will note that win32 builds are complicated by the need to manually
> > add version information in version.h and geos_c.h.  Will these
> > files be distributed with version info embedded in release snapshots?
>
> Currently not, they are created by ./configure.

OK, well for the time being I think win32 builds will remain partially
manual since these have to be processed by hand.

> What I'd really like to do is provide a narrower API for C++
> as well. I hate being unable to touch anything w/out breaking
> the *huge* API. We might move Doxygen documentation, DLL
> exports and all to geos.h and completely avoiding to install
> other internal headers. How many users will be influenced by
> such a change (I can only think of FME) ?

Is there any particular reason not to just have most client applications
use the C API instead of adding another restricted C++ API?  The
position I took with GDAL was that the C API is ABI stable over time
but the C++ API is not guaranteed to be so.  Applications wanting to
stay at arms length are encouraged to use the C API.

Best regards,
--
---------------------------------------+--------------------------------------
I set the clouds in motion - turn up   | Frank Warmerdam, warmerdam@pobox.com
light and sound - activate the windows | http://pobox.com/~warmerdam
and watch the world go round - Rush    | Geospatial Programmer for Rent

From strk at refractions.net  Mon Nov  7 08:34:31 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] Win32 porting
In-Reply-To: <931f8ea90511070521l6da05523j1ff815204fe515fa@mail.gmail.com>
References: <931f8ea90510201952o41d80165jea30e94e554a6f70@mail.gmail.com>
	<20051107104447.GC75704@keybit.net>
	<931f8ea90511070521l6da05523j1ff815204fe515fa@mail.gmail.com>
Message-ID: <20051107133431.GA79331@keybit.net>

On Mon, Nov 07, 2005 at 08:21:16AM -0500, Frank Warmerdam wrote:

> > What I'd really like to do is provide a narrower API for C++
> > as well. I hate being unable to touch anything w/out breaking
> > the *huge* API. We might move Doxygen documentation, DLL
> > exports and all to geos.h and completely avoiding to install
> > other internal headers. How many users will be influenced by
> > such a change (I can only think of FME) ?
> 
> Is there any particular reason not to just have most client applications
> use the C API instead of adding another restricted C++ API?  The
> position I took with GDAL was that the C API is ABI stable over time
> but the C++ API is not guaranteed to be so.  Applications wanting to
> stay at arms length are encouraged to use the C API.

For me it is ok.
I already implemented C-api interface for postgis, and can't wait
for starting the big GEOS revolution. I just want to make sure
nobody will yeld at me after the fact (it's tought to be both
maintainer and developer at the same time)

--strk;

From strk at refractions.net  Mon Nov  7 16:02:18 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] Next GEOS release
Message-ID: <20051107210218.GA83825@keybit.net>

Dear hackers, 
It's been a long time since last GEOS release (August).
Since then, there's been very low activity in the 2.1 branch
and lots of changes in the HEAD branch.

Most changed in HEAD have been ABI breaking.
A few also changed API but mainly of internal classes.

To avoid future problems with ABI/API breakage we implemented
a simplified API that can be used by C code and (thanks to
Frank) work on win32 as well.

This means that everyone willing to avoid future rebuild (and
most likely adaptations) of client applications will be able to
link against the C-API wrapper, which will be kept binary-compatible
by subsequent GEOS releases.

The whole point of this is being able to freely mess with
internal interfaces in order to privide performance improvements
w/out penalty for users. Anyway, not much have been done yet
with the internals.

So. The question for you is: do you think it's worth releasing
GEOS 2.2.0 now and concentrate in deep improvements for 2.2.1 ?

In the transition between 2.2.0 and 2.2.1 client applications linked
against the C-API won't need a rebuild, while client applications
linked against the *huge* libgeos.so library will likely need it.

Comments, ideas ?

--strk;

From strk at refractions.net  Tue Nov  8 05:37:06 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] Next GEOS release
In-Reply-To: <20051107210218.GA83825@keybit.net>
References: <20051107210218.GA83825@keybit.net>
Message-ID: <20051108103706.GB90999@keybit.net>

Another option would be releasing the 2.2.0 version
with a C++ library ABI-compatible with previous (versioned 2.2.0)
but with the addition of the C-API wrapper and the WKB I/O classes.

In this case users will be able to link to the C-API wrapper
and successive release (3.0.0) won't require a rebuild for them.

--strk;

On Mon, Nov 07, 2005 at 10:02:18PM +0100, strk@refractions.net wrote:
> Dear hackers, 
> It's been a long time since last GEOS release (August).
> Since then, there's been very low activity in the 2.1 branch
> and lots of changes in the HEAD branch.
> 
> Most changed in HEAD have been ABI breaking.
> A few also changed API but mainly of internal classes.
> 
> To avoid future problems with ABI/API breakage we implemented
> a simplified API that can be used by C code and (thanks to
> Frank) work on win32 as well.
> 
> This means that everyone willing to avoid future rebuild (and
> most likely adaptations) of client applications will be able to
> link against the C-API wrapper, which will be kept binary-compatible
> by subsequent GEOS releases.
> 
> The whole point of this is being able to freely mess with
> internal interfaces in order to privide performance improvements
> w/out penalty for users. Anyway, not much have been done yet
> with the internals.
> 
> So. The question for you is: do you think it's worth releasing
> GEOS 2.2.0 now and concentrate in deep improvements for 2.2.1 ?
> 
> In the transition between 2.2.0 and 2.2.1 client applications linked
> against the C-API won't need a rebuild, while client applications
> linked against the *huge* libgeos.so library will likely need it.
> 
> Comments, ideas ?
> 
> --strk;
> _______________________________________________
> geos-devel mailing list
> geos-devel@geos.refractions.net
> http://geos.refractions.net/mailman/listinfo/geos-devel

From boa at adm.avtograd.ru  Wed Nov 23 05:13:17 2005
From: boa at adm.avtograd.ru (=?koi8-r?B?78zFxw==?=)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] Do not call with a GeometryCollection as an argument.
Message-ID: <016c01c5f016$85e28990$ef3c300a@asu103001>

Good day,

In PostGIS for GEOMETRYCOLLECTION there is a note:
Do not call with a GeometryCollection as an argument.
PostGIS - GEOS plans to change functions and to enable them to work with
GEOMETRYCOLLECTION?

.......
for example
Intersects(geometry,geometry)

Returns 1 (TRUE) if this Geometry "spatially intersects"

anotherGeometry.

Performed by the GEOS module

Do not call with a GeometryCollection as an argument

NOTE: this is the "allowable" version that returns a

boolean, not an integer.

OGC SPEC s2.1.1.2 //s2.1.13.3 - Intersects(g1, g2 ) -->

Not (Disjoint(g1, g2 ))




Thanks,
Oleg.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://lists.osgeo.org/pipermail/geos-devel/attachments/20051123/afc43eae/attachment.html
From strk at refractions.net  Tue Nov 29 12:48:05 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] Dev news (GEOS-2.2.0 and GEOS-HEAD)
Message-ID: <20051129174805.GA68891@keybit.net>

--[ About the 2.x.x branch ]--

I've defined a new branch in CVS: branch-2-2
That is where GEOS-2.2.0 will come out from.

There, I've backported WKB io and CAPI from head.
So next release will be GEOS-2.2.0, including:
	- libgeos.so.2.2.0
	- libgeos_c.so.1.0.0

Changes since last release (2.1.4):
	- Performance improvement in OverlayOp::insertUniqueEdge()
	- CoordinateSequence copy removal in EdgeRing
	- Minor memory allocation improvements
	- Higher dimensions interface for CoordinateSequence
	- Added getCoordinatesRO for Point class
	- NEW WKB IO
	- NEW Simplified and stabler C API

About ABI protection: the only cases of clas definition 
change are in CoordinateSequence and CoordinateSequenceFactory
(and subclasses). I've appended public methods as suggested
by Frank W. Tests against postgis succeed (no ABI problems).
If you can test this before release it would be nice.

Note that if you link your application against the C-API you won't
need to rebuild it when upgrading to next (hopefully any future)
major release.

--[ About the HEAD branch ]--

The code in HEAD branch is known to run much faster then then one
that will be shipped with 2.2.0. Many small optimizations did
a lot in terms of performances.

Unfortunately most changes where ABI breaking, and thust the need
for an abstraction. Before releasing code from HEAD I'd like
to provide some sort of API reduction for C++ clients as well.

In any case, since ABI and part of internal API is changed
I'd like to push the optimizations further, possibly with
help by the community.

Optimizations introduced so far are:

	- heap allocations reduction

	  Most objects allocate objects w/out a real reason.
	  This forces use of try{}catch{} blocks for the
	  sole purpose of not-leaking and, worst, result
	  in a working set a lot fragmentized.
	  Most of these objects are standard containers, which
	  will allocate memory themself when added-to.
	  In addition, vectors<> are rarely .reserved(), which
	  brings to more allocations and memcpy then required.

	- coordinate copies reduction

	  Coordinate copies are still the most time-consuming
	  part. They are currently inlined so you don't see it.
	  I've provided geom.h with a macro, setting which provides
	  non-inlined assignment and copy-ctors.
	  That lets we see where do copy happens.
	  I removed a few obvious copies (most notably in
	  NodeFactories, which did make a temporary Coordinate
	  copy for each new node in a Geometrygraph - ABI breaking
	  change) but much more could be removed by use of
	  Coordinate pointers (or refs) in GraphComponents.
	  The latter would require a fair amount of time for
	  reorganization of the code.

	- appropriate container choice and usage

	  Some classes use vector<> when a set<> or map<> should
	  be used instead. This was the case for BufferSubgraph,
	  EdgeIntersectionList and EdgeEndStar. Not all classes
	  have been scanned yet.

Head branch is bound to release 3.0.0.


--strk; 

 /"\    ASCII Ribbon Campaign
 \ /    Respect for open standards
  X     No HTML/RTF in email
 / \    No M$ Word docs in email


From strk at refractions.net  Wed Nov 30 11:14:11 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] GEOS-2.2.0 tagged
Message-ID: <20051130161411.GC80509@keybit.net>

Tag: rel-2-2-0 

GEOS-2.2.0 will give client applications a way
to bind to the new C-API.

Updating client code to use the new C-API
is highly reccommended to survive future ABI
breaks.

--strk;

From steve.lime at dnr.state.mn.us  Wed Nov 30 13:37:32 2005
From: steve.lime at dnr.state.mn.us (Steve Lime)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] GEOS-2.2.0 tagged
Message-ID: <s38d9d2d.048@co5.dnr.state.mn.us>

Is there additional documentation planned for the C API?

Steve

>>> strk@refractions.net 11/30/05 10:14 AM >>>
Tag: rel-2-2-0 

GEOS-2.2.0 will give client applications a way
to bind to the new C-API.

Updating client code to use the new C-API
is highly reccommended to survive future ABI
breaks.

--strk;
_______________________________________________
geos-devel mailing list
geos-devel@geos.refractions.net 
http://geos.refractions.net/mailman/listinfo/geos-devel


From strk at refractions.net  Wed Nov 30 13:51:22 2005
From: strk at refractions.net (strk@refractions.net)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] GEOS-2.2.0 tagged
In-Reply-To: <s38d9d2d.049@co5.dnr.state.mn.us>
References: <s38d9d2d.049@co5.dnr.state.mn.us>
Message-ID: <20051130185122.GA84438@keybit.net>

On Wed, Nov 30, 2005 at 12:37:32PM -0600, Steve Lime wrote:
> Is there additional documentation planned for the C API?

The documentation is embedded in the geos_c.h header file.
An example of usage can be found in source/capi/geostest.c

Did you have something different in mind ? 

--strk;

From steve.lime at dnr.state.mn.us  Wed Nov 30 14:17:11 2005
From: steve.lime at dnr.state.mn.us (Steve Lime)
Date: Fri Nov  2 20:52:56 2007
Subject: [geos-devel] GEOS-2.2.0 tagged
Message-ID: <s38da66a.027@co5.dnr.state.mn.us>

I think ultimately a web page or two would be more user friendly than source code. I 
can comment more when I port the MapServer GEOS integration code to C. No big deal, 
now that I know where to look. I would suggest being explicit on the web page that does
exist about what is available.

Thanks for making that avenue (the C-API) available.

Steve

>>> <strk@refractions.net> 11/30/05 12:51 PM >>>
On Wed, Nov 30, 2005 at 12:37:32PM -0600, Steve Lime wrote:
> Is there additional documentation planned for the C API?

The documentation is embedded in the geos_c.h header file.
An example of usage can be found in source/capi/geostest.c

Did you have something different in mind ? 

--strk;


