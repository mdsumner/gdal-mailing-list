From geos-trac at osgeo.org  Mon Dec  1 08:03:22 2014
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 01 Dec 2014 16:03:22 -0000
Subject: [geos-devel] [GEOS] #591: Port robust determinant fixes from JTS
In-Reply-To: <044.1cc558a7a3be4128383f28dc221e6277@osgeo.org>
References: <044.1cc558a7a3be4128383f28dc221e6277@osgeo.org>
Message-ID: <053.8e2c4bf00ab52e6af40f216aeda4a0fb@osgeo.org>

#591: Port robust determinant fixes from JTS
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.5.0                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by mloskot):

 Folks,

 I have gathered all my patches and findings related to this issue in two
 GEOS branches on GitHub, submitted as pull requests so it's easier to
 review the code and try it out if anyone is interested:

 * Port DoubleDouble and CGAlgorithmsDD support
 https://github.com/libgeos/libgeos/pull/40

 * Improve points co-linearity test in LineIntersector::hasIntersection
 https://github.com/libgeos/libgeos/pull/41

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/591#comment:11>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From mateusz at loskot.net  Tue Dec  2 05:01:34 2014
From: mateusz at loskot.net (Mateusz Loskot)
Date: Tue, 2 Dec 2014 14:01:34 +0100
Subject: [geos-devel] Port DoubleDouble and CGAlgorithmsDD support (PR #40)
Message-ID: <CABUeae9wxruVAXQvZErkH-jRe78VyZMhZ+RH4i4+C5xxy1512Q@mail.gmail.com>

Hi,

I've been experimenting with porting some of JTS features
aiming improved numerical robustness.
Namely, I added basic support for increased precision float-point
as analog to JTS DoubleDouble


Complete patched source tree is available in this branch
https://github.com/mloskot/libgeos/tree/doubledouble-cgalgorithms
It's ready to pull, build (using CMake, I haven't touched Autotools or
NMake makefiles)
and try out.

Here is Pull Request that extracts all the changes I have applied
https://github.com/libgeos/libgeos/pull/40

If anyone interested, have fun and if there is broad interest,
perhaps DD support could be applied to the upstream.

Best regards,
-- 
Mateusz  Loskot, http://mateusz.loskot.net

From geos-trac at osgeo.org  Tue Dec  2 06:00:34 2014
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 02 Dec 2014 14:00:34 -0000
Subject: [geos-devel] [GEOS] #712: Single-sided buffer gives unexpected
	result
Message-ID: <046.065b969ad1673d1ea576831ec4c79826@osgeo.org>

#712: Single-sided buffer gives unexpected result
------------------------+---------------------------------------------------
 Reporter:  pmeems      |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  minor       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 I have this linestring:
 LINESTRING(6.59607872405104612 53.00390260763848715, 6.5970405434596513
 53.00362892273712845, 6.59798287063396227 53.00336078433459619,
 6.59864650169724065 53.00303357725661613, 6.59938686388177764
 53.00283982209050748, 6.60119220843164101 53.00211012469529948,
 6.60112679624460608 53.00208460961093948, 6.60026057476097616
 53.00174672587350244, 6.58878962886061181 52.99727229739764311)

 I create a single-sided buffer of -9E-10 (-70m) with flat endcaps and
 round joinstyle.
 This should create a polygon left of the line.
 But it creates a buffer as in the attached image. You can see that in the
 right corner the polygon is also at the right of the line. This happens
 only at sharp corners.

 I've mentioned this on the mailing list already.
 I tried searching for an existing ticket but couldn't find it.
 I don't know if this is also a problem with JTS, probably it is.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/712>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From bontepaarden at gmail.com  Tue Dec  2 06:05:15 2014
From: bontepaarden at gmail.com (Paul Meems)
Date: Tue, 2 Dec 2014 15:05:15 +0100
Subject: [geos-devel] Single-sided buffer gives unexpected result
In-Reply-To: <20141124091959.GA4857@localhost>
References: <CAHNf2YRNbD+yM38hYLZfM=A_Fkc8zbsKqvvNgTMmDV3Zzgkp-Q@mail.gmail.com>
	<20141124091959.GA4857@localhost>
Message-ID: <CAHNf2YTAfLP7Oi2OtyA5A3rhy5v5Lw0JB2WqD41X0kbgCsB5Tg@mail.gmail.com>

I've submitted ticket #712: http://trac.osgeo.org/geos/ticket/712

Thanks,

Paul

*Paul Meems *
Release manager, configuration manager
and forum moderator of MapWindow GIS.
www.mapwindow.org

Owner of MapWindow.nl - Support for
Dutch speaking users.
www.mapwindow.nl



*The English presentations of the MapWindow GIS Conference 2014 are online.
<http://www.slideshare.net/mapwindow>*

2014-11-24 10:19 GMT+01:00 Sandro Santilli <strk at keybit.net>:

> On Thu, Nov 13, 2014 at 01:48:35PM +0100, Paul Meems wrote:
> > I have this linestring:
> > LINESTRING(6.59607872405104612 53.00390260763848715, 6.5970405434596513
> > 53.00362892273712845, 6.59798287063396227 53.00336078433459619,
> > 6.59864650169724065 53.00303357725661613, 6.59938686388177764
> > 53.00283982209050748, 6.60119220843164101 53.00211012469529948,
> > 6.60112679624460608 53.00208460961093948, 6.60026057476097616
> > 53.00174672587350244, 6.58878962886061181 52.99727229739764311)
> >
> > I create a single-sided buffer of -9E-10 (-70m) with flat endcaps and
> round
> > joinstyle.
> > This should create a polygon left of the line.
> > But it creates a buffer as in the attached image. You can see that in the
> > right corner the polygon is also at the right of the line. This happens
> > only at sharp corners.
> > Am I forgetting a setting or something?
>
> It sounds like a bug to me. Would be useful to check the same input
> against JTS to see if the bug is there or in the port. In any case
> the first step would be to file a ticket. NOTE: chances are a similar
> ticket already exists so please add your case to the existing one if so.
>
> --strk;
>
>  ()  ASCII ribbon campaign  --  Keep it simple !
>  /\  http://strk.keybit.net/rants/ascii_mails.txt
> _______________________________________________
> geos-devel mailing list
> geos-devel at lists.osgeo.org
> http://lists.osgeo.org/mailman/listinfo/geos-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/geos-devel/attachments/20141202/5f0f964c/attachment.html>

From geos-trac at osgeo.org  Fri Dec  5 01:40:10 2014
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 05 Dec 2014 09:40:10 -0000
Subject: [geos-devel] [GEOS] #694: PreparedPoint::intersects gives
 different results from Point::intersects
In-Reply-To: <044.86a35f0be2bb7b206d3506e852df60fb@osgeo.org>
References: <044.86a35f0be2bb7b206d3506e852df60fb@osgeo.org>
Message-ID: <053.034dff04cdb81be3c10baf8c2c839335@osgeo.org>

#694: PreparedPoint::intersects gives different results from Point::intersects
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  blocker     |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by mloskot):

 See also #591 and r4038

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/694#comment:3>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Dec  5 01:42:22 2014
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 05 Dec 2014 09:42:22 -0000
Subject: [geos-devel] [GEOS] #591: Port robust determinant fixes from JTS
In-Reply-To: <044.1cc558a7a3be4128383f28dc221e6277@osgeo.org>
References: <044.1cc558a7a3be4128383f28dc221e6277@osgeo.org>
Message-ID: <053.a3b800bc462013817ab22adbc2067376@osgeo.org>

#591: Port robust determinant fixes from JTS
------------------------+---------------------------------------------------
 Reporter:  strk        |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.5.0                     
Component:  Default     |     Version:  3.3.5                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by mloskot):

 The two test cases with point-on-segment and point-on-vertext have been
 refactoried according to Martin Davis' suggestions (see
 https://github.com/libgeos/libgeos/pull/40) and added to the tests in
 r4038.

 This ticket remains open until complete or partial DD support is added
 (again, see https://github.com/libgeos/libgeos/pull/40)

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/591#comment:12>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Dec  8 10:08:41 2014
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Dec 2014 18:08:41 -0000
Subject: [geos-devel] [GEOS] #713: [Patch] Add GeometryPrecisionReducer to C
	API
Message-ID: <045.4ff782b60482a22f4039777e9e924a3d@osgeo.org>

#713: [Patch] Add GeometryPrecisionReducer to C API
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 The attached patch adds methods for using the GeometryPrecisionReducer to
 the C API. I'm using these methods in QGIS to achieve better results when
 performing operations on geometries which occasionally suffer from
 precision issues.

 Related to the subject: I noticed that
 geos::precision::GeometryPrecisionReducer::targetPM is a const-reference
 to a geos::geom::PrecisionModel. Unless there are specific reasons for
 this, API-wise it would probably be cleaner to just store a copy of the
 PrecisionModel (since it is a tiny class) - this is what one would most
 likely expect to happen when seeing the "const geom::PrecisionModel &pm"
 in the constructor signature.

 As far as the patch is concerned, storing the targetPM as a copy would
 remove the need to keeping the GEOSPrecisionModel around.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/713>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Dec  8 10:12:25 2014
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 08 Dec 2014 18:12:25 -0000
Subject: [geos-devel] [GEOS] #714: [Patch] Don't create default
 GeometryFactory on the heap
Message-ID: <045.c4688491bc9fd5d23e554eedfac8cd13@osgeo.org>

#714: [Patch] Don't create default GeometryFactory on the heap
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------
 Nit-pick patch which makes valgrind happier since the default
 GeometryFactory will be properly freed when the program exists.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/714>
GEOS <http://geos.refractions.net/>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Dec 11 04:09:35 2014
From: geos-trac at osgeo.org (GEOS)
Date: Thu, 11 Dec 2014 12:09:35 -0000
Subject: [geos-devel] [GEOS] #714: [Patch] Don't create default
 GeometryFactory on the heap
In-Reply-To: <043.ad81dedeadc51f2e25a73bd008070d71@osgeo.org>
References: <043.ad81dedeadc51f2e25a73bd008070d71@osgeo.org>
Message-ID: <052.c7a870018faf9fcdd7d5ddf7785fda8d@osgeo.org>

#714: [Patch] Don't create default GeometryFactory on the heap
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 This patch would basically reverts r3632, which looks like something that
 should have been indeed reverted and evidently wasn't (fully story in
 #540)

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/714#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Thu Dec 11 20:31:32 2014
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 12 Dec 2014 04:31:32 -0000
Subject: [geos-devel] [GEOS] #715: fail to compile geos-3.4.2 with vs2005
Message-ID: <041.050663c65ea23f248dd1d17354d8e324@osgeo.org>

#715: fail to compile geos-3.4.2 with vs2005
------------------------+---------------------------------------------------
 Reporter:  aya         |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:  vs2005, geos-3.4.2        
------------------------+---------------------------------------------------
 I run autogen.bat first of all.

 Then I enter geos-3.4.2 folder and run nmake /f makefile.vc MSVC_VER=1400
 BUILD_DEBUG=YES.

 A few seconds later, I got the error below.I searched vld.h and did not
 find it.

 Could you help me ? Thanks.

 Centroid'
         with
         [
             _Ty=geos::geom::Coordinate
         ]
 geom\Geometry.cpp(65) : fatal error C1083: Cannot open include file:
 'vld.h': No
  such file or directory
 NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio
 8\VC\BIN\c
 l.EXE"' : return code '0x2'
 Stop.
 NMAKE : fatal error U1077: '"C:\Program Files\Microsoft Visual Studio
 8\VC\BIN\n
 make.EXE"' : return code '0x2'
 Stop.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/715>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Fri Dec 12 03:08:37 2014
From: geos-trac at osgeo.org (GEOS)
Date: Fri, 12 Dec 2014 11:08:37 -0000
Subject: [geos-devel] [GEOS] #713: [Patch] Add GeometryPrecisionReducer
	to C API
In-Reply-To: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
References: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
Message-ID: <052.d15caffd6c61d2e6d470bf9db18e6d53@osgeo.org>

#713: [Patch] Add GeometryPrecisionReducer to C API
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 If I'm not wrong the geometries resulting from this kind of reduction
 would retain their own GeometryFactory which would point to the default
 (floating) precision model. Can you confirm ?

 There's no direct connection between a Geometry and a PrecisionModel,
 rather the Geometry points to a GeometryFactory which points to a
 PrecisionModel.

 What we're looking for is an API to allow for storing the precision within
 the geometries, so that operations on fixed-precision geometries will be
 carried with that precision. There have been some discussion about this
 for a GSoC project:
 http://trac.osgeo.org/geos/wiki/GSoC/CAPI_PrecisionModel and see also
 needs from Shapely here: https://github.com/Toblerity/Shapely/issues/110

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/713#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Dec 15 07:41:13 2014
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 15 Dec 2014 15:41:13 -0000
Subject: [geos-devel] [GEOS] #713: [Patch] Add GeometryPrecisionReducer
	to C API
In-Reply-To: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
References: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
Message-ID: <052.ae10c559205a63d0945a2ffd88314d92@osgeo.org>

#713: [Patch] Add GeometryPrecisionReducer to C API
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by smani):

 Yes indeed the geometry returned by GeometryPrecisionReducer::reduce
 retains the GeometryFactory of the input geometry.

 The API you describe basically means exposing the GeometryFactory in the C
 API, along with methods to create a GeometryFactory with a given
 PrecisionModel, and then adding methods for all geometry types to create
 them with the specified GeometryFactory, right?

 But considering a situation where the geometry is already given, exposing
 the GeometryPrecisionReducer would still be needed, since AFAICS it is the
 only way to reduce the precision of an already given geometry?

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/713#comment:2>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Mon Dec 15 08:25:01 2014
From: geos-trac at osgeo.org (GEOS)
Date: Mon, 15 Dec 2014 16:25:01 -0000
Subject: [geos-devel] [GEOS] #713: [Patch] Add GeometryPrecisionReducer
	to C API
In-Reply-To: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
References: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
Message-ID: <052.9e35d2ed4d0d6728f096ea67e309aa22@osgeo.org>

#713: [Patch] Add GeometryPrecisionReducer to C API
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by strk):

 Yes the GeometryPrecisionReducer would still need to be exposed, but would
 take a GeometryFactory rather than a PrecisionModel. We've been discussing
 a big about possible interfaces to manage these factories, or ways to hide
 them behind the ContextHandle.

 May be better to discuss this on the list, best if with a proposal.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/713#comment:3>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Wed Dec 17 07:25:56 2014
From: geos-trac at osgeo.org (GEOS)
Date: Wed, 17 Dec 2014 15:25:56 -0000
Subject: [geos-devel] [GEOS] #713: [Patch] Add GeometryPrecisionReducer
	to C API
In-Reply-To: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
References: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
Message-ID: <052.208160ec575dd38617b1551c9bd8b4ff@osgeo.org>

#713: [Patch] Add GeometryPrecisionReducer to C API
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by smani):

 I'll try and come up with a proposal soonish.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/713#comment:4>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From manisandro at gmail.com  Tue Dec 23 05:23:29 2014
From: manisandro at gmail.com (Sandro Mani)
Date: Tue, 23 Dec 2014 14:23:29 +0100
Subject: [geos-devel] Exposing PrecisionModel,
	GeometryPrecisionReducer in the C API
Message-ID: <54996CD1.8060106@gmail.com>

Hi,

Following the initial discussion in ticket #713 [1], I'd like to discuss 
the exposing of PrecisionModel and GeometryPrecisionReducer methods in 
the C API.

Personally I'm interested in having access to the 
GeometryPrecisionReducer::reduce method, as noted in the ticket there is 
also the desire [2] to expose the GeometryFactory in the C API and allow 
creating geometries with a specified GeometryFactory. Below is an 
initial proposal.

-------------------------------------------------------------------------------

/** Precision Model **/
typedef struct GEOSPrecisionModel_t GEOSPrecisionModel;

enum GEOSPrecisionModelType {
     GEOS_PRECISION_FIXED,
     GEOS_PRECISION_FLOATING,
     GEOS_PRECISION_FLOATING_SINGLE
};

extern GEOSPrecisionModel* GEOSPrecisionModel_create(int type);
extern GEOSPrecisionModel* GEOSPrecisionModel_createFixed(double scale);
extern void GEOSPrecisionModel_destroy(GEOSPrecisionModel* model);


/** Geometry Factory **/
typedef struct GEOSGeometryFactory_t GEOSGeometryFactory;

/* pm copied, NULL for default. */
extern GEOSGeometryFactory* 
GEOSGeometryFactory_create(GEOSPrecisionModel* pm, int SRID);
extern void GEOSGeometryFactory_destroy(GEOSGeometryFactory* factory);


/** New geometry constructors **/
/* Factory needs to stay valid */
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createPoint(GEOSGeometryFactory* factory, 
GEOSCoordSequence* s);
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createEmptyPoint(GEOSGeometryFactory* factory);
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createLinearRing(GEOSGeometryFactory* factory, 
GEOSCoordSequence* s);
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createLineString(GEOSGeometryFactory* factory, 
GEOSCoordSequence* s);
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createEmptyLineString(GEOSGeometryFactory* factory);

extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createEmptyPolygon(GEOSGeometryFactory* factory);
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createPolygon(GEOSGeometryFactory* factory, 
GEOSGeometry* shell, GEOSGeometry** holes, unsigned int nholes);
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createCollection(GEOSGeometryFactory* factory, int 
type, GEOSGeometry* *geoms, unsigned int ngeoms);
extern GEOSGeometry GEOS_DLL 
*GEOSGeometryFactory_createEmptyCollection(GEOSGeometryFactory* factory, 
int type);


/** Retreive factory from geometry **/
extern GEOSGeometryFactory GEOSGeom_getGeometryFactory(GEOSGeometry* geom);


/** Precision Reducer **/
typedef struct GEOSGeometryPrecisionReducer_t GEOSGeometryPrecisionReducer;

/* Factory needs to stay valid */
extern GEOSGeometryPrecisionReducer* 
GEOSGeometryPrecisionReducer_create_factory(GEOSGeometryFactory* factory);
extern GEOSGeometry* 
GEOSGeometryPrecisionReducer_reduce(GEOSGeometryPrecisionReducer* 
reducer, GEOSGeometry* geometry);
extern void 
GEOSGeometryPrecisionReducer_destroy(GEOSGeometryPrecisionReducer* reducer);

-------------------------------------------------------------------------------

Remarks:
- GEOSGeometryFactory_createXXX is closer to the C++ API, an alternative 
would be something like GEOSGeom_createXXX_factory which is closer to 
what is described in [2].
- Possibly the CoordinateSequenceFactory needs to be exposed also?

Comments appreciated. Thanks,
Sandro


[1] http://trac.osgeo.org/geos/ticket/713
[2] http://trac.osgeo.org/geos/wiki/GSoC/CAPI_PrecisionModel


From geos-trac at osgeo.org  Tue Dec 23 05:24:59 2014
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 23 Dec 2014 13:24:59 -0000
Subject: [geos-devel] [GEOS] #713: [Patch] Add GeometryPrecisionReducer
	to C API
In-Reply-To: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
References: <043.7f9b7ae2ba9662e28291e6aacd05dc73@osgeo.org>
Message-ID: <052.f3c0af98673d2bc81ceeca02f82cdd94@osgeo.org>

#713: [Patch] Add GeometryPrecisionReducer to C API
------------------------+---------------------------------------------------
 Reporter:  smani       |       Owner:  geos-devel@?              
     Type:  defect      |      Status:  new                       
 Priority:  major       |   Milestone:  3.4.3                     
Component:  Default     |     Version:  3.4.2                     
 Severity:  Unassigned  |    Keywords:                            
------------------------+---------------------------------------------------

Comment(by smani):

 Posted to mailing list: http://lists.osgeo.org/pipermail/geos-
 devel/2014-December/007076.html

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/713#comment:5>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Dec 23 09:50:15 2014
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 23 Dec 2014 17:50:15 -0000
Subject: [geos-devel] [GEOS] #717: LINEARRING intersection returns different
 answers depending on where 'join' is
Message-ID: <046.c0b205fd2380a976d9845e66d23f3f29@osgeo.org>

#717: LINEARRING intersection returns different answers depending on where 'join'
is
-----------------------+----------------------------------------------------
 Reporter:  messypup   |       Owner:  geos-devel@?                 
     Type:  defect     |      Status:  new                          
 Priority:  minor      |   Milestone:  3.4.3                        
Component:  Default    |     Version:  3.4.2                        
 Severity:  Annoyance  |    Keywords:  GEOSIntersection_r LINEARRING
-----------------------+----------------------------------------------------
 When performing an intersection between a POLYGON and a LINEARRING if the
 first point of the LINEARRING is inside the polygon then what should be
 one LINESTRING returned is split into 2 on that point. Where as if the
 LINEARRING is constructed with the same points but the first point
 ('join') outside the POLYGON then (correctly) only one LINESTRING is
 returned.

 Example:

 #include <stdio.h>
 #include <geos_c.h>

 GEOSContextHandle_t handle;
 GEOSWKTWriter *writer;
 void printGeom(GEOSGeometry*, char*);

 int main(int argc, char **argv) {
     GEOSGeometry *ring1, *ring2, *box,
                  *geom1, *geom2;

     handle = initGEOS_r(NULL, NULL);
     writer = GEOSWKTWriter_create_r(handle);
     GEOSWKTWriter_setRoundingPrecision_r(handle, writer, 1);

     ring1 = GEOSGeomFromWKT_r(handle, "LINEARRING (2 2, 4 2, 4 4, 2 4, 2
 2)");
     ring2 = GEOSGeomFromWKT_r(handle, "LINEARRING (2 4, 2 2, 4 2, 4 4, 2
 4)");
     box = GEOSGeomFromWKT_r(handle, "POLYGON ((3 1, 3 3, 1 3, 1 1, 3
 1))");

     geom1 = GEOSIntersection_r(handle, ring1, box);
     geom2 = GEOSIntersection_r(handle, ring2, box);

     printGeom(ring1, "ring1");
     printGeom(ring2, "ring2");
     printGeom(box, "box");
     printGeom(geom1, "Intersection of ring1 and box");
     printGeom(geom2, "Intersection of ring2 and box");
 }

 void printGeom(GEOSGeometry *geom, char *name) {
     printf("%s is: %s\n", name, GEOSWKTWriter_write_r(handle, writer,
 geom));
 }

 Output:

 ring1 is: LINEARRING (2.0 2.0, 4.0 2.0, 4.0 4.0, 2.0 4.0, 2.0 2.0)
 ring2 is: LINEARRING (2.0 4.0, 2.0 2.0, 4.0 2.0, 4.0 4.0, 2.0 4.0)
 box is: POLYGON ((3.0 1.0, 3.0 3.0, 1.0 3.0, 1.0 1.0, 3.0 1.0))
 Intersection of ring1 and box is: MULTILINESTRING ((2.0 2.0, 3.0 2.0),
 (2.0 3.0, 2.0 2.0))
 Intersection of ring2 and box is: LINESTRING (2.0 3.0, 2.0 2.0, 3.0 2.0)

 I am using geos through the Python package Shapely. I originally submitted
 this as a Shapely issue but the Shapely developer showed the result is
 coming from geos itself. The example above is his.

 (excuse terminology here because I only know the Shapley interface) It is
 also not a trivial matter to work around this by passing the result to
 linemerge because linemerge will not accept a LINESTRING or POINT which
 this intersection could return.

-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/717>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

From geos-trac at osgeo.org  Tue Dec 23 09:51:22 2014
From: geos-trac at osgeo.org (GEOS)
Date: Tue, 23 Dec 2014 17:51:22 -0000
Subject: [geos-devel] [GEOS] #717: LINEARRING intersection returns
 different answers depending on where 'join' is
In-Reply-To: <046.c0b205fd2380a976d9845e66d23f3f29@osgeo.org>
References: <046.c0b205fd2380a976d9845e66d23f3f29@osgeo.org>
Message-ID: <055.96222764fe172c4c663e62a27653bfce@osgeo.org>

#717: LINEARRING intersection returns different answers depending on where 'join'
is
-----------------------+----------------------------------------------------
 Reporter:  messypup   |       Owner:  geos-devel@?                 
     Type:  defect     |      Status:  new                          
 Priority:  minor      |   Milestone:  3.4.3                        
Component:  Default    |     Version:  3.4.2                        
 Severity:  Annoyance  |    Keywords:  GEOSIntersection_r LINEARRING
-----------------------+----------------------------------------------------
Changes (by messypup):

 * cc: messypup (added)


-- 
Ticket URL: <http://trac.osgeo.org/geos/ticket/717#comment:1>
GEOS <http://trac.osgeo.org/geos>
GEOS (Geometry Engine - Open Source) is a C++ port of the Java Topology Suite (JTS).

